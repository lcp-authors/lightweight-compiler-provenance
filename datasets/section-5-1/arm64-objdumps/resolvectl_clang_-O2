
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resolvectl_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403920 <.init>:
  403920:	stp	x29, x30, [sp, #-16]!
  403924:	mov	x29, sp
  403928:	bl	404468 <ascii_strlower_n@plt+0x60>
  40392c:	ldp	x29, x30, [sp], #16
  403930:	ret

Disassembly of section .plt:

0000000000403938 <__libc_start_main@plt-0x20>:
  403938:	stp	x16, x30, [sp, #-16]!
  40393c:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403940:	ldr	x17, [x16, #2712]
  403944:	add	x16, x16, #0xa98
  403948:	br	x17
  40394c:	nop
  403950:	nop
  403954:	nop

0000000000403958 <__libc_start_main@plt>:
  403958:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40395c:	ldr	x17, [x16, #2720]
  403960:	add	x16, x16, #0xaa0
  403964:	br	x17

0000000000403968 <abort@plt>:
  403968:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40396c:	ldr	x17, [x16, #2728]
  403970:	add	x16, x16, #0xaa8
  403974:	br	x17

0000000000403978 <__gmon_start__@plt>:
  403978:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40397c:	ldr	x17, [x16, #2736]
  403980:	add	x16, x16, #0xab0
  403984:	br	x17

0000000000403988 <getenv@plt>:
  403988:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40398c:	ldr	x17, [x16, #2744]
  403990:	add	x16, x16, #0xab8
  403994:	br	x17

0000000000403998 <getopt_long@plt>:
  403998:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40399c:	ldr	x17, [x16, #2752]
  4039a0:	add	x16, x16, #0xac0
  4039a4:	br	x17

00000000004039a8 <log_get_max_level_realm@plt>:
  4039a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039ac:	ldr	x17, [x16, #2760]
  4039b0:	add	x16, x16, #0xac8
  4039b4:	br	x17

00000000004039b8 <log_internal_realm@plt>:
  4039b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039bc:	ldr	x17, [x16, #2768]
  4039c0:	add	x16, x16, #0xad0
  4039c4:	br	x17

00000000004039c8 <read_line_full@plt>:
  4039c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039cc:	ldr	x17, [x16, #2776]
  4039d0:	add	x16, x16, #0xad8
  4039d4:	br	x17

00000000004039d8 <free@plt>:
  4039d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039dc:	ldr	x17, [x16, #2784]
  4039e0:	add	x16, x16, #0xae0
  4039e4:	br	x17

00000000004039e8 <strstrip@plt>:
  4039e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039ec:	ldr	x17, [x16, #2792]
  4039f0:	add	x16, x16, #0xae8
  4039f4:	br	x17

00000000004039f8 <first_word@plt>:
  4039f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039fc:	ldr	x17, [x16, #2800]
  403a00:	add	x16, x16, #0xaf0
  403a04:	br	x17

0000000000403a08 <extract_first_word@plt>:
  403a08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a0c:	ldr	x17, [x16, #2808]
  403a10:	add	x16, x16, #0xaf8
  403a14:	br	x17

0000000000403a18 <strv_push@plt>:
  403a18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a1c:	ldr	x17, [x16, #2816]
  403a20:	add	x16, x16, #0xb00
  403a24:	br	x17

0000000000403a28 <log_oom_internal@plt>:
  403a28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a2c:	ldr	x17, [x16, #2824]
  403a30:	add	x16, x16, #0xb08
  403a34:	br	x17

0000000000403a38 <log_syntax_internal@plt>:
  403a38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a3c:	ldr	x17, [x16, #2832]
  403a40:	add	x16, x16, #0xb10
  403a44:	br	x17

0000000000403a48 <terminal_urlify_man@plt>:
  403a48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a4c:	ldr	x17, [x16, #2840]
  403a50:	add	x16, x16, #0xb18
  403a54:	br	x17

0000000000403a58 <printf@plt>:
  403a58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a5c:	ldr	x17, [x16, #2848]
  403a60:	add	x16, x16, #0xb20
  403a64:	br	x17

0000000000403a68 <version@plt>:
  403a68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a6c:	ldr	x17, [x16, #2856]
  403a70:	add	x16, x16, #0xb28
  403a74:	br	x17

0000000000403a78 <strv_extend@plt>:
  403a78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a7c:	ldr	x17, [x16, #2864]
  403a80:	add	x16, x16, #0xb30
  403a84:	br	x17

0000000000403a88 <log_assert_failed_unreachable_realm@plt>:
  403a88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a8c:	ldr	x17, [x16, #2872]
  403a90:	add	x16, x16, #0xb38
  403a94:	br	x17

0000000000403a98 <log_assert_failed_realm@plt>:
  403a98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a9c:	ldr	x17, [x16, #2880]
  403aa0:	add	x16, x16, #0xb40
  403aa4:	br	x17

0000000000403aa8 <strv_free@plt>:
  403aa8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403aac:	ldr	x17, [x16, #2888]
  403ab0:	add	x16, x16, #0xb48
  403ab4:	br	x17

0000000000403ab8 <strchr@plt>:
  403ab8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403abc:	ldr	x17, [x16, #2896]
  403ac0:	add	x16, x16, #0xb50
  403ac4:	br	x17

0000000000403ac8 <strndup@plt>:
  403ac8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403acc:	ldr	x17, [x16, #2904]
  403ad0:	add	x16, x16, #0xb58
  403ad4:	br	x17

0000000000403ad8 <parse_ifindex_or_ifname@plt>:
  403ad8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403adc:	ldr	x17, [x16, #2912]
  403ae0:	add	x16, x16, #0xb60
  403ae4:	br	x17

0000000000403ae8 <strdup@plt>:
  403ae8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403aec:	ldr	x17, [x16, #2920]
  403af0:	add	x16, x16, #0xb68
  403af4:	br	x17

0000000000403af8 <setlocale@plt>:
  403af8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403afc:	ldr	x17, [x16, #2928]
  403b00:	add	x16, x16, #0xb70
  403b04:	br	x17

0000000000403b08 <log_show_color@plt>:
  403b08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b0c:	ldr	x17, [x16, #2936]
  403b10:	add	x16, x16, #0xb78
  403b14:	br	x17

0000000000403b18 <log_parse_environment_realm@plt>:
  403b18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b1c:	ldr	x17, [x16, #2944]
  403b20:	add	x16, x16, #0xb80
  403b24:	br	x17

0000000000403b28 <log_open@plt>:
  403b28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b2c:	ldr	x17, [x16, #2952]
  403b30:	add	x16, x16, #0xb88
  403b34:	br	x17

0000000000403b38 <strcmp@plt>:
  403b38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b3c:	ldr	x17, [x16, #2960]
  403b40:	add	x16, x16, #0xb90
  403b44:	br	x17

0000000000403b48 <parse_boolean@plt>:
  403b48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b4c:	ldr	x17, [x16, #2968]
  403b50:	add	x16, x16, #0xb98
  403b54:	br	x17

0000000000403b58 <on_tty@plt>:
  403b58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b5c:	ldr	x17, [x16, #2976]
  403b60:	add	x16, x16, #0xba0
  403b64:	br	x17

0000000000403b68 <strv_find@plt>:
  403b68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b6c:	ldr	x17, [x16, #2984]
  403b70:	add	x16, x16, #0xba8
  403b74:	br	x17

0000000000403b78 <sd_bus_open_system@plt>:
  403b78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b7c:	ldr	x17, [x16, #2992]
  403b80:	add	x16, x16, #0xbb0
  403b84:	br	x17

0000000000403b88 <dispatch_verb@plt>:
  403b88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b8c:	ldr	x17, [x16, #3000]
  403b90:	add	x16, x16, #0xbb8
  403b94:	br	x17

0000000000403b98 <sd_bus_flush_close_unref@plt>:
  403b98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b9c:	ldr	x17, [x16, #3008]
  403ba0:	add	x16, x16, #0xbc0
  403ba4:	br	x17

0000000000403ba8 <ask_password_agent_close@plt>:
  403ba8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bac:	ldr	x17, [x16, #3016]
  403bb0:	add	x16, x16, #0xbc8
  403bb4:	br	x17

0000000000403bb8 <polkit_agent_close@plt>:
  403bb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bbc:	ldr	x17, [x16, #3024]
  403bc0:	add	x16, x16, #0xbd0
  403bc4:	br	x17

0000000000403bc8 <pager_close@plt>:
  403bc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bcc:	ldr	x17, [x16, #3032]
  403bd0:	add	x16, x16, #0xbd8
  403bd4:	br	x17

0000000000403bd8 <mac_selinux_finish@plt>:
  403bd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bdc:	ldr	x17, [x16, #3040]
  403be0:	add	x16, x16, #0xbe0
  403be4:	br	x17

0000000000403be8 <colors_enabled@plt>:
  403be8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bec:	ldr	x17, [x16, #3048]
  403bf0:	add	x16, x16, #0xbe8
  403bf4:	br	x17

0000000000403bf8 <puts@plt>:
  403bf8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bfc:	ldr	x17, [x16, #3056]
  403c00:	add	x16, x16, #0xbf0
  403c04:	br	x17

0000000000403c08 <strv_length@plt>:
  403c08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c0c:	ldr	x17, [x16, #3064]
  403c10:	add	x16, x16, #0xbf8
  403c14:	br	x17

0000000000403c18 <flockfile@plt>:
  403c18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c1c:	ldr	x17, [x16, #3072]
  403c20:	add	x16, x16, #0xc00
  403c24:	br	x17

0000000000403c28 <__overflow@plt>:
  403c28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c2c:	ldr	x17, [x16, #3080]
  403c30:	add	x16, x16, #0xc08
  403c34:	br	x17

0000000000403c38 <fputs_unlocked@plt>:
  403c38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c3c:	ldr	x17, [x16, #3088]
  403c40:	add	x16, x16, #0xc10
  403c44:	br	x17

0000000000403c48 <funlockfile@plt>:
  403c48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c4c:	ldr	x17, [x16, #3096]
  403c50:	add	x16, x16, #0xc18
  403c54:	br	x17

0000000000403c58 <memset@plt>:
  403c58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c5c:	ldr	x17, [x16, #3104]
  403c60:	add	x16, x16, #0xc20
  403c64:	br	x17

0000000000403c68 <memcpy@plt>:
  403c68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c6c:	ldr	x17, [x16, #3112]
  403c70:	add	x16, x16, #0xc28
  403c74:	br	x17

0000000000403c78 <strncmp@plt>:
  403c78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c7c:	ldr	x17, [x16, #3120]
  403c80:	add	x16, x16, #0xc30
  403c84:	br	x17

0000000000403c88 <in_addr_ifindex_from_string_auto@plt>:
  403c88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c8c:	ldr	x17, [x16, #3128]
  403c90:	add	x16, x16, #0xc38
  403c94:	br	x17

0000000000403c98 <in_addr_ifindex_to_string@plt>:
  403c98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c9c:	ldr	x17, [x16, #3136]
  403ca0:	add	x16, x16, #0xc40
  403ca4:	br	x17

0000000000403ca8 <sd_bus_message_new_method_call@plt>:
  403ca8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cac:	ldr	x17, [x16, #3144]
  403cb0:	add	x16, x16, #0xc48
  403cb4:	br	x17

0000000000403cb8 <sd_bus_message_append@plt>:
  403cb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cbc:	ldr	x17, [x16, #3152]
  403cc0:	add	x16, x16, #0xc50
  403cc4:	br	x17

0000000000403cc8 <sd_bus_message_append_array@plt>:
  403cc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ccc:	ldr	x17, [x16, #3160]
  403cd0:	add	x16, x16, #0xc58
  403cd4:	br	x17

0000000000403cd8 <now@plt>:
  403cd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cdc:	ldr	x17, [x16, #3168]
  403ce0:	add	x16, x16, #0xc60
  403ce4:	br	x17

0000000000403ce8 <sd_bus_call@plt>:
  403ce8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cec:	ldr	x17, [x16, #3176]
  403cf0:	add	x16, x16, #0xc68
  403cf4:	br	x17

0000000000403cf8 <sd_bus_message_enter_container@plt>:
  403cf8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cfc:	ldr	x17, [x16, #3184]
  403d00:	add	x16, x16, #0xc70
  403d04:	br	x17

0000000000403d08 <sd_bus_message_read@plt>:
  403d08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d0c:	ldr	x17, [x16, #3192]
  403d10:	add	x16, x16, #0xc78
  403d14:	br	x17

0000000000403d18 <sd_bus_message_exit_container@plt>:
  403d18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d1c:	ldr	x17, [x16, #3200]
  403d20:	add	x16, x16, #0xc80
  403d24:	br	x17

0000000000403d28 <strlen@plt>:
  403d28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d2c:	ldr	x17, [x16, #3208]
  403d30:	add	x16, x16, #0xc88
  403d34:	br	x17

0000000000403d38 <fputc@plt>:
  403d38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d3c:	ldr	x17, [x16, #3216]
  403d40:	add	x16, x16, #0xc90
  403d44:	br	x17

0000000000403d48 <af_to_name@plt>:
  403d48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d4c:	ldr	x17, [x16, #3224]
  403d50:	add	x16, x16, #0xc98
  403d54:	br	x17

0000000000403d58 <sd_bus_message_read_array@plt>:
  403d58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d5c:	ldr	x17, [x16, #3232]
  403d60:	add	x16, x16, #0xca0
  403d64:	br	x17

0000000000403d68 <bus_error_message@plt>:
  403d68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d6c:	ldr	x17, [x16, #3240]
  403d70:	add	x16, x16, #0xca8
  403d74:	br	x17

0000000000403d78 <sd_bus_error_free@plt>:
  403d78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d7c:	ldr	x17, [x16, #3248]
  403d80:	add	x16, x16, #0xcb0
  403d84:	br	x17

0000000000403d88 <sd_bus_message_unref@plt>:
  403d88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d8c:	ldr	x17, [x16, #3256]
  403d90:	add	x16, x16, #0xcb8
  403d94:	br	x17

0000000000403d98 <strrchr@plt>:
  403d98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d9c:	ldr	x17, [x16, #3264]
  403da0:	add	x16, x16, #0xcc0
  403da4:	br	x17

0000000000403da8 <sd_bus_get_property_trivial@plt>:
  403da8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dac:	ldr	x17, [x16, #3272]
  403db0:	add	x16, x16, #0xcc8
  403db4:	br	x17

0000000000403db8 <sd_bus_get_property@plt>:
  403db8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dbc:	ldr	x17, [x16, #3280]
  403dc0:	add	x16, x16, #0xcd0
  403dc4:	br	x17

0000000000403dc8 <sd_bus_call_method@plt>:
  403dc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dcc:	ldr	x17, [x16, #3288]
  403dd0:	add	x16, x16, #0xcd8
  403dd4:	br	x17

0000000000403dd8 <sd_bus_error_has_name@plt>:
  403dd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ddc:	ldr	x17, [x16, #3296]
  403de0:	add	x16, x16, #0xce0
  403de4:	br	x17

0000000000403de8 <strv_equal@plt>:
  403de8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dec:	ldr	x17, [x16, #3304]
  403df0:	add	x16, x16, #0xce8
  403df4:	br	x17

0000000000403df8 <dns_name_concat@plt>:
  403df8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dfc:	ldr	x17, [x16, #3312]
  403e00:	add	x16, x16, #0xcf0
  403e04:	br	x17

0000000000403e08 <format_ifname_full@plt>:
  403e08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e0c:	ldr	x17, [x16, #3320]
  403e10:	add	x16, x16, #0xcf8
  403e14:	br	x17

0000000000403e18 <asprintf@plt>:
  403e18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e1c:	ldr	x17, [x16, #3328]
  403e20:	add	x16, x16, #0xd00
  403e24:	br	x17

0000000000403e28 <sd_bus_path_encode@plt>:
  403e28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e2c:	ldr	x17, [x16, #3336]
  403e30:	add	x16, x16, #0xd08
  403e34:	br	x17

0000000000403e38 <bus_map_all_properties@plt>:
  403e38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e3c:	ldr	x17, [x16, #3344]
  403e40:	add	x16, x16, #0xd10
  403e44:	br	x17

0000000000403e48 <pager_open@plt>:
  403e48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e4c:	ldr	x17, [x16, #3352]
  403e50:	add	x16, x16, #0xd18
  403e54:	br	x17

0000000000403e58 <__errno_location@plt>:
  403e58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e5c:	ldr	x17, [x16, #3360]
  403e60:	add	x16, x16, #0xd20
  403e64:	br	x17

0000000000403e68 <putchar@plt>:
  403e68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e6c:	ldr	x17, [x16, #3368]
  403e70:	add	x16, x16, #0xd28
  403e74:	br	x17

0000000000403e78 <sd_netlink_open@plt>:
  403e78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e7c:	ldr	x17, [x16, #3376]
  403e80:	add	x16, x16, #0xd30
  403e84:	br	x17

0000000000403e88 <sd_rtnl_message_new_link@plt>:
  403e88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e8c:	ldr	x17, [x16, #3384]
  403e90:	add	x16, x16, #0xd38
  403e94:	br	x17

0000000000403e98 <sd_netlink_message_request_dump@plt>:
  403e98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e9c:	ldr	x17, [x16, #3392]
  403ea0:	add	x16, x16, #0xd40
  403ea4:	br	x17

0000000000403ea8 <sd_netlink_call@plt>:
  403ea8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403eac:	ldr	x17, [x16, #3400]
  403eb0:	add	x16, x16, #0xd48
  403eb4:	br	x17

0000000000403eb8 <sd_netlink_message_next@plt>:
  403eb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ebc:	ldr	x17, [x16, #3408]
  403ec0:	add	x16, x16, #0xd50
  403ec4:	br	x17

0000000000403ec8 <sd_netlink_message_get_type@plt>:
  403ec8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ecc:	ldr	x17, [x16, #3416]
  403ed0:	add	x16, x16, #0xd58
  403ed4:	br	x17

0000000000403ed8 <sd_rtnl_message_link_get_ifindex@plt>:
  403ed8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403edc:	ldr	x17, [x16, #3424]
  403ee0:	add	x16, x16, #0xd60
  403ee4:	br	x17

0000000000403ee8 <sd_netlink_message_read_string@plt>:
  403ee8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403eec:	ldr	x17, [x16, #3432]
  403ef0:	add	x16, x16, #0xd68
  403ef4:	br	x17

0000000000403ef8 <rtnl_log_create_error@plt>:
  403ef8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403efc:	ldr	x17, [x16, #3440]
  403f00:	add	x16, x16, #0xd70
  403f04:	br	x17

0000000000403f08 <strv_sort@plt>:
  403f08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f0c:	ldr	x17, [x16, #3448]
  403f10:	add	x16, x16, #0xd78
  403f14:	br	x17

0000000000403f18 <rtnl_log_parse_error@plt>:
  403f18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f1c:	ldr	x17, [x16, #3456]
  403f20:	add	x16, x16, #0xd80
  403f24:	br	x17

0000000000403f28 <sd_netlink_unref@plt>:
  403f28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f2c:	ldr	x17, [x16, #3464]
  403f30:	add	x16, x16, #0xd88
  403f34:	br	x17

0000000000403f38 <sd_netlink_message_unref@plt>:
  403f38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f3c:	ldr	x17, [x16, #3472]
  403f40:	add	x16, x16, #0xd90
  403f44:	br	x17

0000000000403f48 <strv_consume@plt>:
  403f48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f4c:	ldr	x17, [x16, #3480]
  403f50:	add	x16, x16, #0xd98
  403f54:	br	x17

0000000000403f58 <strjoin_real@plt>:
  403f58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f5c:	ldr	x17, [x16, #3488]
  403f60:	add	x16, x16, #0xda0
  403f64:	br	x17

0000000000403f68 <in_addr_to_string@plt>:
  403f68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f6c:	ldr	x17, [x16, #3496]
  403f70:	add	x16, x16, #0xda8
  403f74:	br	x17

0000000000403f78 <fwrite@plt>:
  403f78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f7c:	ldr	x17, [x16, #3504]
  403f80:	add	x16, x16, #0xdb0
  403f84:	br	x17

0000000000403f88 <fflush@plt>:
  403f88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f8c:	ldr	x17, [x16, #3512]
  403f90:	add	x16, x16, #0xdb8
  403f94:	br	x17

0000000000403f98 <fprintf@plt>:
  403f98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f9c:	ldr	x17, [x16, #3520]
  403fa0:	add	x16, x16, #0xdc0
  403fa4:	br	x17

0000000000403fa8 <strnlen@plt>:
  403fa8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fac:	ldr	x17, [x16, #3528]
  403fb0:	add	x16, x16, #0xdc8
  403fb4:	br	x17

0000000000403fb8 <strncasecmp@plt>:
  403fb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fbc:	ldr	x17, [x16, #3536]
  403fc0:	add	x16, x16, #0xdd0
  403fc4:	br	x17

0000000000403fc8 <strchrnul@plt>:
  403fc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fcc:	ldr	x17, [x16, #3544]
  403fd0:	add	x16, x16, #0xdd8
  403fd4:	br	x17

0000000000403fd8 <format_timespan@plt>:
  403fd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fdc:	ldr	x17, [x16, #3552]
  403fe0:	add	x16, x16, #0xde0
  403fe4:	br	x17

0000000000403fe8 <cescape_length@plt>:
  403fe8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fec:	ldr	x17, [x16, #3560]
  403ff0:	add	x16, x16, #0xde8
  403ff4:	br	x17

0000000000403ff8 <strcmp_ptr@plt>:
  403ff8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ffc:	ldr	x17, [x16, #3568]
  404000:	add	x16, x16, #0xdf0
  404004:	br	x17

0000000000404008 <parse_ip_port@plt>:
  404008:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40400c:	ldr	x17, [x16, #3576]
  404010:	add	x16, x16, #0xdf8
  404014:	br	x17

0000000000404018 <sd_bus_message_open_container@plt>:
  404018:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40401c:	ldr	x17, [x16, #3584]
  404020:	add	x16, x16, #0xe00
  404024:	br	x17

0000000000404028 <in_addr_from_string_auto@plt>:
  404028:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40402c:	ldr	x17, [x16, #3592]
  404030:	add	x16, x16, #0xe08
  404034:	br	x17

0000000000404038 <sd_bus_message_close_container@plt>:
  404038:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40403c:	ldr	x17, [x16, #3600]
  404040:	add	x16, x16, #0xe10
  404044:	br	x17

0000000000404048 <sd_bus_message_append_strv@plt>:
  404048:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40404c:	ldr	x17, [x16, #3608]
  404050:	add	x16, x16, #0xe18
  404054:	br	x17

0000000000404058 <page_size@plt>:
  404058:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40405c:	ldr	x17, [x16, #3616]
  404060:	add	x16, x16, #0xe20
  404064:	br	x17

0000000000404068 <calloc@plt>:
  404068:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40406c:	ldr	x17, [x16, #3624]
  404070:	add	x16, x16, #0xe28
  404074:	br	x17

0000000000404078 <internal_hashmap_first_key_and_value@plt>:
  404078:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40407c:	ldr	x17, [x16, #3632]
  404080:	add	x16, x16, #0xe30
  404084:	br	x17

0000000000404088 <internal_hashmap_free@plt>:
  404088:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40408c:	ldr	x17, [x16, #3640]
  404090:	add	x16, x16, #0xe38
  404094:	br	x17

0000000000404098 <internal_hashmap_iterate@plt>:
  404098:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40409c:	ldr	x17, [x16, #3648]
  4040a0:	add	x16, x16, #0xe40
  4040a4:	br	x17

00000000004040a8 <internal_hashmap_remove@plt>:
  4040a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040ac:	ldr	x17, [x16, #3656]
  4040b0:	add	x16, x16, #0xe48
  4040b4:	br	x17

00000000004040b8 <realloc@plt>:
  4040b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040bc:	ldr	x17, [x16, #3664]
  4040c0:	add	x16, x16, #0xe50
  4040c4:	br	x17

00000000004040c8 <malloc@plt>:
  4040c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040cc:	ldr	x17, [x16, #3672]
  4040d0:	add	x16, x16, #0xe58
  4040d4:	br	x17

00000000004040d8 <ascii_tolower@plt>:
  4040d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040dc:	ldr	x17, [x16, #3680]
  4040e0:	add	x16, x16, #0xe60
  4040e4:	br	x17

00000000004040e8 <dns_name_is_root@plt>:
  4040e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040ec:	ldr	x17, [x16, #3688]
  4040f0:	add	x16, x16, #0xe68
  4040f4:	br	x17

00000000004040f8 <internal_hashmap_get@plt>:
  4040f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040fc:	ldr	x17, [x16, #3696]
  404100:	add	x16, x16, #0xe70
  404104:	br	x17

0000000000404108 <dns_label_unescape@plt>:
  404108:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40410c:	ldr	x17, [x16, #3704]
  404110:	add	x16, x16, #0xe78
  404114:	br	x17

0000000000404118 <internal_hashmap_ensure_allocated@plt>:
  404118:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40411c:	ldr	x17, [x16, #3712]
  404120:	add	x16, x16, #0xe80
  404124:	br	x17

0000000000404128 <hashmap_put@plt>:
  404128:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40412c:	ldr	x17, [x16, #3720]
  404130:	add	x16, x16, #0xe88
  404134:	br	x17

0000000000404138 <bitmap_iterate@plt>:
  404138:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40413c:	ldr	x17, [x16, #3728]
  404140:	add	x16, x16, #0xe90
  404144:	br	x17

0000000000404148 <memchr@plt>:
  404148:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40414c:	ldr	x17, [x16, #3736]
  404150:	add	x16, x16, #0xe98
  404154:	br	x17

0000000000404158 <utf8_is_valid@plt>:
  404158:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40415c:	ldr	x17, [x16, #3744]
  404160:	add	x16, x16, #0xea0
  404164:	br	x17

0000000000404168 <greedy_realloc@plt>:
  404168:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40416c:	ldr	x17, [x16, #3752]
  404170:	add	x16, x16, #0xea8
  404174:	br	x17

0000000000404178 <dns_label_escape@plt>:
  404178:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40417c:	ldr	x17, [x16, #3760]
  404180:	add	x16, x16, #0xeb0
  404184:	br	x17

0000000000404188 <memdup@plt>:
  404188:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40418c:	ldr	x17, [x16, #3768]
  404190:	add	x16, x16, #0xeb8
  404194:	br	x17

0000000000404198 <bitmap_ensure_allocated@plt>:
  404198:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40419c:	ldr	x17, [x16, #3776]
  4041a0:	add	x16, x16, #0xec0
  4041a4:	br	x17

00000000004041a8 <bitmap_set@plt>:
  4041a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041ac:	ldr	x17, [x16, #3784]
  4041b0:	add	x16, x16, #0xec8
  4041b4:	br	x17

00000000004041b8 <internal_set_new@plt>:
  4041b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041bc:	ldr	x17, [x16, #3792]
  4041c0:	add	x16, x16, #0xed0
  4041c4:	br	x17

00000000004041c8 <internal_hashmap_reserve@plt>:
  4041c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041cc:	ldr	x17, [x16, #3800]
  4041d0:	add	x16, x16, #0xed8
  4041d4:	br	x17

00000000004041d8 <set_put@plt>:
  4041d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041dc:	ldr	x17, [x16, #3808]
  4041e0:	add	x16, x16, #0xee0
  4041e4:	br	x17

00000000004041e8 <siphash24_compress@plt>:
  4041e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041ec:	ldr	x17, [x16, #3816]
  4041f0:	add	x16, x16, #0xee8
  4041f4:	br	x17

00000000004041f8 <memcmp@plt>:
  4041f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041fc:	ldr	x17, [x16, #3824]
  404200:	add	x16, x16, #0xef0
  404204:	br	x17

0000000000404208 <string_table_lookup@plt>:
  404208:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40420c:	ldr	x17, [x16, #3832]
  404210:	add	x16, x16, #0xef8
  404214:	br	x17

0000000000404218 <strcpy@plt>:
  404218:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40421c:	ldr	x17, [x16, #3840]
  404220:	add	x16, x16, #0xf00
  404224:	br	x17

0000000000404228 <dns_name_change_suffix@plt>:
  404228:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40422c:	ldr	x17, [x16, #3848]
  404230:	add	x16, x16, #0xf08
  404234:	br	x17

0000000000404238 <dns_name_endswith@plt>:
  404238:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40423c:	ldr	x17, [x16, #3856]
  404240:	add	x16, x16, #0xf10
  404244:	br	x17

0000000000404248 <dns_name_equal@plt>:
  404248:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40424c:	ldr	x17, [x16, #3864]
  404250:	add	x16, x16, #0xf18
  404254:	br	x17

0000000000404258 <dns_name_hash_func@plt>:
  404258:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40425c:	ldr	x17, [x16, #3872]
  404260:	add	x16, x16, #0xf20
  404264:	br	x17

0000000000404268 <dns_name_compare_func@plt>:
  404268:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40426c:	ldr	x17, [x16, #3880]
  404270:	add	x16, x16, #0xf28
  404274:	br	x17

0000000000404278 <snprintf@plt>:
  404278:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40427c:	ldr	x17, [x16, #3888]
  404280:	add	x16, x16, #0xf30
  404284:	br	x17

0000000000404288 <bitmap_free@plt>:
  404288:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40428c:	ldr	x17, [x16, #3896]
  404290:	add	x16, x16, #0xf38
  404294:	br	x17

0000000000404298 <dns_name_reverse@plt>:
  404298:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40429c:	ldr	x17, [x16, #3904]
  4042a0:	add	x16, x16, #0xf40
  4042a4:	br	x17

00000000004042a8 <bcmp@plt>:
  4042a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042ac:	ldr	x17, [x16, #3912]
  4042b0:	add	x16, x16, #0xf48
  4042b4:	br	x17

00000000004042b8 <bitmap_equal@plt>:
  4042b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042bc:	ldr	x17, [x16, #3920]
  4042c0:	add	x16, x16, #0xf50
  4042c4:	br	x17

00000000004042c8 <strcasecmp@plt>:
  4042c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042cc:	ldr	x17, [x16, #3928]
  4042d0:	add	x16, x16, #0xf58
  4042d4:	br	x17

00000000004042d8 <octescape@plt>:
  4042d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042dc:	ldr	x17, [x16, #3936]
  4042e0:	add	x16, x16, #0xf60
  4042e4:	br	x17

00000000004042e8 <hexmem@plt>:
  4042e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042ec:	ldr	x17, [x16, #3944]
  4042f0:	add	x16, x16, #0xf68
  4042f4:	br	x17

00000000004042f8 <columns@plt>:
  4042f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042fc:	ldr	x17, [x16, #3952]
  404300:	add	x16, x16, #0xf70
  404304:	br	x17

0000000000404308 <base64_append@plt>:
  404308:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40430c:	ldr	x17, [x16, #3960]
  404310:	add	x16, x16, #0xf78
  404314:	br	x17

0000000000404318 <exp10@plt>:
  404318:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40431c:	ldr	x17, [x16, #3968]
  404320:	add	x16, x16, #0xf80
  404324:	br	x17

0000000000404328 <gmtime_r@plt>:
  404328:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40432c:	ldr	x17, [x16, #3976]
  404330:	add	x16, x16, #0xf88
  404334:	br	x17

0000000000404338 <strftime@plt>:
  404338:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40433c:	ldr	x17, [x16, #3984]
  404340:	add	x16, x16, #0xf90
  404344:	br	x17

0000000000404348 <base32hexmem@plt>:
  404348:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40434c:	ldr	x17, [x16, #3992]
  404350:	add	x16, x16, #0xf98
  404354:	br	x17

0000000000404358 <strv_join_prefix@plt>:
  404358:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40435c:	ldr	x17, [x16, #4000]
  404360:	add	x16, x16, #0xfa0
  404364:	br	x17

0000000000404368 <dns_name_skip@plt>:
  404368:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40436c:	ldr	x17, [x16, #4008]
  404370:	add	x16, x16, #0xfa8
  404374:	br	x17

0000000000404378 <dns_name_startswith@plt>:
  404378:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40437c:	ldr	x17, [x16, #4016]
  404380:	add	x16, x16, #0xfb0
  404384:	br	x17

0000000000404388 <string_hash_func@plt>:
  404388:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40438c:	ldr	x17, [x16, #4024]
  404390:	add	x16, x16, #0xfb8
  404394:	br	x17

0000000000404398 <bitmap_copy@plt>:
  404398:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40439c:	ldr	x17, [x16, #4032]
  4043a0:	add	x16, x16, #0xfc0
  4043a4:	br	x17

00000000004043a8 <safe_atou_full@plt>:
  4043a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043ac:	ldr	x17, [x16, #4040]
  4043b0:	add	x16, x16, #0xfc8
  4043b4:	br	x17

00000000004043b8 <memmove@plt>:
  4043b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043bc:	ldr	x17, [x16, #4048]
  4043c0:	add	x16, x16, #0xfd0
  4043c4:	br	x17

00000000004043c8 <in_addr_is_link_local@plt>:
  4043c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043cc:	ldr	x17, [x16, #4056]
  4043d0:	add	x16, x16, #0xfd8
  4043d4:	br	x17

00000000004043d8 <fputs@plt>:
  4043d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043dc:	ldr	x17, [x16, #4064]
  4043e0:	add	x16, x16, #0xfe0
  4043e4:	br	x17

00000000004043e8 <dns_name_apply_idna@plt>:
  4043e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043ec:	ldr	x17, [x16, #4072]
  4043f0:	add	x16, x16, #0xfe8
  4043f4:	br	x17

00000000004043f8 <dns_service_join@plt>:
  4043f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043fc:	ldr	x17, [x16, #4080]
  404400:	add	x16, x16, #0xff0
  404404:	br	x17

0000000000404408 <ascii_strlower_n@plt>:
  404408:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40440c:	ldr	x17, [x16, #4088]
  404410:	add	x16, x16, #0xff8
  404414:	br	x17

Disassembly of section .text:

0000000000404418 <.text>:
  404418:	mov	x29, #0x0                   	// #0
  40441c:	mov	x30, #0x0                   	// #0
  404420:	mov	x5, x0
  404424:	ldr	x1, [sp]
  404428:	add	x2, sp, #0x8
  40442c:	mov	x6, sp
  404430:	movz	x0, #0x0, lsl #48
  404434:	movk	x0, #0x0, lsl #32
  404438:	movk	x0, #0x40, lsl #16
  40443c:	movk	x0, #0x4f88
  404440:	movz	x3, #0x0, lsl #48
  404444:	movk	x3, #0x0, lsl #32
  404448:	movk	x3, #0x41, lsl #16
  40444c:	movk	x3, #0x9620
  404450:	movz	x4, #0x0, lsl #48
  404454:	movk	x4, #0x0, lsl #32
  404458:	movk	x4, #0x41, lsl #16
  40445c:	movk	x4, #0x96a0
  404460:	bl	403958 <__libc_start_main@plt>
  404464:	bl	403968 <abort@plt>
  404468:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40446c:	ldr	x0, [x0, #2648]
  404470:	cbz	x0, 404478 <ascii_strlower_n@plt+0x70>
  404474:	b	403978 <__gmon_start__@plt>
  404478:	ret
  40447c:	udf	#0
  404480:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404484:	add	x0, x0, #0x0
  404488:	adrp	x1, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40448c:	add	x1, x1, #0x0
  404490:	cmp	x1, x0
  404494:	b.eq	4044ac <ascii_strlower_n@plt+0xa4>  // b.none
  404498:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40449c:	ldr	x1, [x1, #1720]
  4044a0:	cbz	x1, 4044ac <ascii_strlower_n@plt+0xa4>
  4044a4:	mov	x16, x1
  4044a8:	br	x16
  4044ac:	ret
  4044b0:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4044b4:	add	x0, x0, #0x0
  4044b8:	adrp	x1, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4044bc:	add	x1, x1, #0x0
  4044c0:	sub	x1, x1, x0
  4044c4:	lsr	x2, x1, #63
  4044c8:	add	x1, x2, x1, asr #3
  4044cc:	cmp	xzr, x1, asr #1
  4044d0:	asr	x1, x1, #1
  4044d4:	b.eq	4044ec <ascii_strlower_n@plt+0xe4>  // b.none
  4044d8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4044dc:	ldr	x2, [x2, #1728]
  4044e0:	cbz	x2, 4044ec <ascii_strlower_n@plt+0xe4>
  4044e4:	mov	x16, x2
  4044e8:	br	x16
  4044ec:	ret
  4044f0:	stp	x29, x30, [sp, #-32]!
  4044f4:	mov	x29, sp
  4044f8:	str	x19, [sp, #16]
  4044fc:	adrp	x19, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404500:	ldrb	w0, [x19, #8]
  404504:	cbnz	w0, 404514 <ascii_strlower_n@plt+0x10c>
  404508:	bl	404480 <ascii_strlower_n@plt+0x78>
  40450c:	mov	w0, #0x1                   	// #1
  404510:	strb	w0, [x19, #8]
  404514:	ldr	x19, [sp, #16]
  404518:	ldp	x29, x30, [sp], #32
  40451c:	ret
  404520:	b	4044b0 <ascii_strlower_n@plt+0xa8>
  404524:	sub	sp, sp, #0x90
  404528:	stp	x29, x30, [sp, #48]
  40452c:	stp	x28, x27, [sp, #64]
  404530:	stp	x26, x25, [sp, #80]
  404534:	stp	x24, x23, [sp, #96]
  404538:	stp	x22, x21, [sp, #112]
  40453c:	stp	x20, x19, [sp, #128]
  404540:	add	x29, sp, #0x30
  404544:	tbnz	w0, #31, 404cdc <ascii_strlower_n@plt+0x8d4>
  404548:	mov	x19, x1
  40454c:	cbz	x1, 404d00 <ascii_strlower_n@plt+0x8f8>
  404550:	mov	w20, w0
  404554:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  404558:	add	x0, x0, #0x9b2
  40455c:	bl	403988 <getenv@plt>
  404560:	cmp	x0, #0x0
  404564:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  404568:	cset	w8, ne  // ne = any
  40456c:	add	x0, x0, #0x9bf
  404570:	lsl	w21, w8, #1
  404574:	bl	403988 <getenv@plt>
  404578:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40457c:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  404580:	cmp	x0, #0x0
  404584:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404588:	mov	w8, #0xffffffff            	// #-1
  40458c:	add	x2, x2, #0x9ca
  404590:	add	x3, x3, #0x858
  404594:	mov	w0, w20
  404598:	mov	x1, x19
  40459c:	mov	x4, xzr
  4045a0:	csinc	w27, w21, wzr, eq  // eq = none
  4045a4:	str	w8, [x28, #20]
  4045a8:	bl	403998 <getopt_long@plt>
  4045ac:	tbnz	w0, #31, 4046a8 <ascii_strlower_n@plt+0x2a0>
  4045b0:	adrp	x23, 419000 <ascii_strlower_n@plt+0x14bf8>
  4045b4:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf8>
  4045b8:	adrp	x22, 419000 <ascii_strlower_n@plt+0x14bf8>
  4045bc:	adrp	x25, 419000 <ascii_strlower_n@plt+0x14bf8>
  4045c0:	mov	w26, w0
  4045c4:	add	x23, x23, #0x6c8
  4045c8:	mov	w11, #0xa                   	// #10
  4045cc:	add	x21, x21, #0x9ca
  4045d0:	add	x22, x22, #0x858
  4045d4:	mov	w12, #0xb                   	// #11
  4045d8:	adrp	x13, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4045dc:	mov	w14, #0x1                   	// #1
  4045e0:	add	x25, x25, #0x9f4
  4045e4:	sub	w8, w26, #0x3f
  4045e8:	cmp	w8, #0xc4
  4045ec:	b.hi	404cb8 <ascii_strlower_n@plt+0x8b0>  // b.pmore
  4045f0:	adr	x9, 404604 <ascii_strlower_n@plt+0x1fc>
  4045f4:	ldrh	w10, [x23, x8, lsl #1]
  4045f8:	add	x9, x9, x10, lsl #2
  4045fc:	mov	w24, #0x2                   	// #2
  404600:	br	x9
  404604:	str	w11, [x28, #20]
  404608:	b	404620 <ascii_strlower_n@plt+0x218>
  40460c:	mov	w24, #0x1                   	// #1
  404610:	b	40466c <ascii_strlower_n@plt+0x264>
  404614:	str	w12, [x28, #20]
  404618:	b	404620 <ascii_strlower_n@plt+0x218>
  40461c:	strb	w14, [x13, #16]
  404620:	mov	w24, w27
  404624:	b	40466c <ascii_strlower_n@plt+0x264>
  404628:	mov	w0, wzr
  40462c:	mov	x26, x13
  404630:	bl	4039a8 <log_get_max_level_realm@plt>
  404634:	cmp	w0, #0x7
  404638:	b.lt	404664 <ascii_strlower_n@plt+0x25c>  // b.tstop
  40463c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404640:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404644:	mov	w0, #0x7                   	// #7
  404648:	mov	w3, #0xac                  	// #172
  40464c:	mov	w6, #0x6d                  	// #109
  404650:	mov	w1, wzr
  404654:	add	x2, x2, #0x965
  404658:	add	x4, x4, #0x9de
  40465c:	mov	x5, x25
  404660:	bl	4039b8 <log_internal_realm@plt>
  404664:	mov	w24, w27
  404668:	mov	x13, x26
  40466c:	mov	w0, w20
  404670:	mov	x1, x19
  404674:	mov	x2, x21
  404678:	mov	x3, x22
  40467c:	mov	x4, xzr
  404680:	mov	x26, x13
  404684:	bl	403998 <getopt_long@plt>
  404688:	mov	w14, #0x1                   	// #1
  40468c:	mov	x13, x26
  404690:	mov	w12, #0xb                   	// #11
  404694:	mov	w11, #0xa                   	// #10
  404698:	mov	w26, w0
  40469c:	mov	w27, w24
  4046a0:	tbz	w0, #31, 4045e4 <ascii_strlower_n@plt+0x1dc>
  4046a4:	b	4046ac <ascii_strlower_n@plt+0x2a4>
  4046a8:	mov	w24, w27
  4046ac:	ldr	w8, [x28, #20]
  4046b0:	cmn	w8, #0x1
  4046b4:	b.eq	4047ac <ascii_strlower_n@plt+0x3a4>  // b.none
  4046b8:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4046bc:	ldrsw	x8, [x21, #128]
  4046c0:	add	w9, w8, #0x1
  4046c4:	cmp	w9, w20
  4046c8:	b.ne	4047e8 <ascii_strlower_n@plt+0x3e0>  // b.any
  4046cc:	ldr	x0, [x19, x8, lsl #3]
  4046d0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4046d4:	cmp	w0, #0x1
  4046d8:	b.lt	4049f0 <ascii_strlower_n@plt+0x5e8>  // b.tstop
  4046dc:	ldr	w8, [x21, #128]
  4046e0:	ldr	w9, [x28, #20]
  4046e4:	add	w8, w8, #0x1
  4046e8:	cmp	w9, #0xa
  4046ec:	str	w8, [x21, #128]
  4046f0:	b.ne	404c44 <ascii_strlower_n@plt+0x83c>  // b.any
  4046f4:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4046f8:	ldr	x0, [x22, #136]
  4046fc:	add	x3, sp, #0x18
  404700:	mov	w1, #0x100000              	// #1048576
  404704:	mov	w2, wzr
  404708:	str	xzr, [sp, #24]
  40470c:	bl	4039c8 <read_line_full@plt>
  404710:	mov	w25, w0
  404714:	tbnz	w0, #31, 404b28 <ascii_strlower_n@plt+0x720>
  404718:	mov	x27, #0x1                   	// #1
  40471c:	adrp	x20, 419000 <ascii_strlower_n@plt+0x14bf8>
  404720:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf8>
  404724:	adrp	x26, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404728:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40472c:	movk	x27, #0x8, lsl #32
  404730:	mov	w19, wzr
  404734:	add	x20, x20, #0xb1f
  404738:	add	x21, x21, #0xb2a
  40473c:	add	x26, x26, #0x20
  404740:	add	x28, x28, #0x18
  404744:	mov	w23, #0x1                   	// #1
  404748:	movk	x27, #0x800, lsl #48
  40474c:	b	404854 <ascii_strlower_n@plt+0x44c>
  404750:	mov	w0, wzr
  404754:	bl	4039a8 <log_get_max_level_realm@plt>
  404758:	cmp	w0, #0x3
  40475c:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404760:	mov	w6, w26
  404764:	ldp	x20, x19, [sp, #128]
  404768:	ldp	x22, x21, [sp, #112]
  40476c:	ldp	x24, x23, [sp, #96]
  404770:	ldp	x26, x25, [sp, #80]
  404774:	ldp	x28, x27, [sp, #64]
  404778:	ldp	x29, x30, [sp, #48]
  40477c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404780:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404784:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404788:	mov	w1, #0x16                  	// #22
  40478c:	add	x2, x2, #0x965
  404790:	add	x4, x4, #0x9de
  404794:	add	x5, x5, #0xa08
  404798:	mov	w0, #0x3                   	// #3
  40479c:	movk	w1, #0x4000, lsl #16
  4047a0:	mov	w3, #0xbb                  	// #187
  4047a4:	add	sp, sp, #0x90
  4047a8:	b	4039b8 <log_internal_realm@plt>
  4047ac:	mov	w0, wzr
  4047b0:	bl	4039a8 <log_get_max_level_realm@plt>
  4047b4:	cmp	w0, #0x3
  4047b8:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  4047bc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4047c0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  4047c4:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  4047c8:	mov	w1, #0x16                  	// #22
  4047cc:	add	x2, x2, #0x965
  4047d0:	add	x4, x4, #0x9de
  4047d4:	add	x5, x5, #0xaae
  4047d8:	mov	w0, #0x3                   	// #3
  4047dc:	movk	w1, #0x4000, lsl #16
  4047e0:	mov	w3, #0xd1                  	// #209
  4047e4:	b	404b08 <ascii_strlower_n@plt+0x700>
  4047e8:	mov	w0, wzr
  4047ec:	bl	4039a8 <log_get_max_level_realm@plt>
  4047f0:	cmp	w0, #0x3
  4047f4:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  4047f8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4047fc:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404800:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404804:	mov	w1, #0x16                  	// #22
  404808:	add	x2, x2, #0x965
  40480c:	add	x4, x4, #0x9de
  404810:	add	x5, x5, #0xadc
  404814:	mov	w0, #0x3                   	// #3
  404818:	movk	w1, #0x4000, lsl #16
  40481c:	mov	w3, #0xd5                  	// #213
  404820:	b	404b08 <ascii_strlower_n@plt+0x700>
  404824:	mov	x0, x1
  404828:	bl	4039d8 <free@plt>
  40482c:	ldr	x0, [sp, #24]
  404830:	bl	4039d8 <free@plt>
  404834:	ldr	x0, [x22, #136]
  404838:	add	x3, sp, #0x18
  40483c:	mov	w1, #0x100000              	// #1048576
  404840:	mov	w2, wzr
  404844:	str	xzr, [sp, #24]
  404848:	bl	4039c8 <read_line_full@plt>
  40484c:	mov	w25, w0
  404850:	tbnz	w0, #31, 404b28 <ascii_strlower_n@plt+0x720>
  404854:	cbz	w25, 404bac <ascii_strlower_n@plt+0x7a4>
  404858:	ldr	x0, [sp, #24]
  40485c:	add	w19, w19, #0x1
  404860:	bl	4039e8 <strstrip@plt>
  404864:	ldrb	w8, [x0]
  404868:	mov	x25, x0
  40486c:	cmp	w8, #0x3b
  404870:	b.hi	404880 <ascii_strlower_n@plt+0x478>  // b.pmore
  404874:	lsl	x8, x23, x8
  404878:	tst	x8, x27
  40487c:	b.ne	40482c <ascii_strlower_n@plt+0x424>  // b.any
  404880:	mov	x0, x25
  404884:	mov	x1, x20
  404888:	bl	4039f8 <first_word@plt>
  40488c:	cbz	x0, 4048e8 <ascii_strlower_n@plt+0x4e0>
  404890:	stp	xzr, x0, [x29, #-16]
  404894:	sub	x0, x29, #0x8
  404898:	sub	x1, x29, #0x10
  40489c:	mov	x2, xzr
  4048a0:	mov	w3, wzr
  4048a4:	bl	403a08 <extract_first_word@plt>
  4048a8:	ldur	x1, [x29, #-16]
  4048ac:	cmp	w0, #0x1
  4048b0:	b.lt	404824 <ascii_strlower_n@plt+0x41c>  // b.tstop
  4048b4:	mov	x0, x28
  4048b8:	bl	403a18 <strv_push@plt>
  4048bc:	tbnz	w0, #31, 404964 <ascii_strlower_n@plt+0x55c>
  4048c0:	sub	x0, x29, #0x8
  4048c4:	sub	x1, x29, #0x10
  4048c8:	mov	x2, xzr
  4048cc:	mov	w3, wzr
  4048d0:	stur	xzr, [x29, #-16]
  4048d4:	bl	403a08 <extract_first_word@plt>
  4048d8:	ldur	x1, [x29, #-16]
  4048dc:	cmp	w0, #0x0
  4048e0:	b.gt	4048b4 <ascii_strlower_n@plt+0x4ac>
  4048e4:	b	404824 <ascii_strlower_n@plt+0x41c>
  4048e8:	mov	x0, x25
  4048ec:	mov	x1, x21
  4048f0:	bl	4039f8 <first_word@plt>
  4048f4:	cbnz	x0, 40490c <ascii_strlower_n@plt+0x504>
  4048f8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4048fc:	mov	x0, x25
  404900:	add	x1, x1, #0xb31
  404904:	bl	4039f8 <first_word@plt>
  404908:	cbz	x0, 4049a4 <ascii_strlower_n@plt+0x59c>
  40490c:	stp	xzr, x0, [x29, #-16]
  404910:	sub	x0, x29, #0x8
  404914:	sub	x1, x29, #0x10
  404918:	mov	w3, #0x8                   	// #8
  40491c:	mov	x2, xzr
  404920:	bl	403a08 <extract_first_word@plt>
  404924:	ldur	x1, [x29, #-16]
  404928:	cmp	w0, #0x1
  40492c:	b.lt	404824 <ascii_strlower_n@plt+0x41c>  // b.tstop
  404930:	mov	x0, x26
  404934:	bl	403a18 <strv_push@plt>
  404938:	tbnz	w0, #31, 404980 <ascii_strlower_n@plt+0x578>
  40493c:	sub	x0, x29, #0x8
  404940:	sub	x1, x29, #0x10
  404944:	mov	w3, #0x8                   	// #8
  404948:	mov	x2, xzr
  40494c:	stur	xzr, [x29, #-16]
  404950:	bl	403a08 <extract_first_word@plt>
  404954:	ldur	x1, [x29, #-16]
  404958:	cmp	w0, #0x0
  40495c:	b.gt	404930 <ascii_strlower_n@plt+0x528>
  404960:	b	404824 <ascii_strlower_n@plt+0x41c>
  404964:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404968:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  40496c:	mov	w2, #0x45                  	// #69
  404970:	mov	w0, wzr
  404974:	add	x1, x1, #0x965
  404978:	add	x3, x3, #0xf85
  40497c:	b	404998 <ascii_strlower_n@plt+0x590>
  404980:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404984:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  404988:	mov	w2, #0x5c                  	// #92
  40498c:	mov	w0, wzr
  404990:	add	x1, x1, #0x965
  404994:	add	x3, x3, #0xf96
  404998:	bl	403a28 <log_oom_internal@plt>
  40499c:	ldur	x0, [x29, #-16]
  4049a0:	b	404828 <ascii_strlower_n@plt+0x420>
  4049a4:	bl	4039a8 <log_get_max_level_realm@plt>
  4049a8:	cmp	w0, #0x7
  4049ac:	b.lt	40482c <ascii_strlower_n@plt+0x424>  // b.tstop
  4049b0:	adrp	x8, 419000 <ascii_strlower_n@plt+0x14bf8>
  4049b4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4049b8:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  4049bc:	adrp	x7, 419000 <ascii_strlower_n@plt+0x14bf8>
  4049c0:	mov	w1, #0x7                   	// #7
  4049c4:	mov	w6, #0xfe                  	// #254
  4049c8:	add	x8, x8, #0xb3e
  4049cc:	mov	x0, xzr
  4049d0:	add	x2, x2, #0xb38
  4049d4:	mov	w3, w19
  4049d8:	mov	w4, wzr
  4049dc:	add	x5, x5, #0x965
  4049e0:	add	x7, x7, #0x9de
  4049e4:	stp	x8, x25, [sp]
  4049e8:	bl	403a38 <log_syntax_internal@plt>
  4049ec:	b	40482c <ascii_strlower_n@plt+0x424>
  4049f0:	mov	w19, w0
  4049f4:	b	404c94 <ascii_strlower_n@plt+0x88c>
  4049f8:	mov	w0, wzr
  4049fc:	bl	4039a8 <log_get_max_level_realm@plt>
  404a00:	cmp	w0, #0x3
  404a04:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404a08:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a0c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a10:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a14:	mov	w1, #0x16                  	// #22
  404a18:	add	x2, x2, #0x965
  404a1c:	add	x4, x4, #0x9de
  404a20:	add	x5, x5, #0xa71
  404a24:	mov	w0, #0x3                   	// #3
  404a28:	movk	w1, #0x4000, lsl #16
  404a2c:	mov	w3, #0xc6                  	// #198
  404a30:	b	404b08 <ascii_strlower_n@plt+0x700>
  404a34:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a38:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a3c:	add	x0, x0, #0xbbe
  404a40:	add	x1, x1, #0xbc9
  404a44:	sub	x2, x29, #0x8
  404a48:	stur	xzr, [x29, #-8]
  404a4c:	bl	403a48 <terminal_urlify_man@plt>
  404a50:	tbnz	w0, #31, 404b68 <ascii_strlower_n@plt+0x760>
  404a54:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404a58:	ldr	x1, [x8, #144]
  404a5c:	ldur	x2, [x29, #-8]
  404a60:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  404a64:	add	x0, x0, #0xbdb
  404a68:	bl	403a58 <printf@plt>
  404a6c:	mov	w19, wzr
  404a70:	b	404b88 <ascii_strlower_n@plt+0x780>
  404a74:	ldp	x20, x19, [sp, #128]
  404a78:	ldp	x22, x21, [sp, #112]
  404a7c:	ldp	x24, x23, [sp, #96]
  404a80:	ldp	x26, x25, [sp, #80]
  404a84:	ldp	x28, x27, [sp, #64]
  404a88:	ldp	x29, x30, [sp, #48]
  404a8c:	add	sp, sp, #0x90
  404a90:	b	403a68 <version@plt>
  404a94:	mov	w0, wzr
  404a98:	bl	4039a8 <log_get_max_level_realm@plt>
  404a9c:	cmp	w0, #0x3
  404aa0:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404aa4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404aa8:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404aac:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ab0:	mov	w1, #0x16                  	// #22
  404ab4:	add	x2, x2, #0x965
  404ab8:	add	x4, x4, #0x9de
  404abc:	add	x5, x5, #0xa22
  404ac0:	mov	w0, #0x3                   	// #3
  404ac4:	movk	w1, #0x4000, lsl #16
  404ac8:	mov	w3, #0xc0                  	// #192
  404acc:	b	404b08 <ascii_strlower_n@plt+0x700>
  404ad0:	mov	w0, wzr
  404ad4:	bl	4039a8 <log_get_max_level_realm@plt>
  404ad8:	cmp	w0, #0x3
  404adc:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404ae0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ae4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ae8:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404aec:	mov	w1, #0x16                  	// #22
  404af0:	add	x2, x2, #0x965
  404af4:	add	x4, x4, #0x9de
  404af8:	add	x5, x5, #0xa49
  404afc:	mov	w0, #0x3                   	// #3
  404b00:	movk	w1, #0x4000, lsl #16
  404b04:	mov	w3, #0xc3                  	// #195
  404b08:	ldp	x20, x19, [sp, #128]
  404b0c:	ldp	x22, x21, [sp, #112]
  404b10:	ldp	x24, x23, [sp, #96]
  404b14:	ldp	x26, x25, [sp, #80]
  404b18:	ldp	x28, x27, [sp, #64]
  404b1c:	ldp	x29, x30, [sp, #48]
  404b20:	add	sp, sp, #0x90
  404b24:	b	4039b8 <log_internal_realm@plt>
  404b28:	mov	w0, wzr
  404b2c:	bl	4039a8 <log_get_max_level_realm@plt>
  404b30:	cmp	w0, #0x3
  404b34:	b.lt	404b94 <ascii_strlower_n@plt+0x78c>  // b.tstop
  404b38:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404b3c:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404b40:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404b44:	add	x2, x2, #0x965
  404b48:	add	x4, x4, #0x9de
  404b4c:	add	x5, x5, #0xb01
  404b50:	mov	w0, #0x3                   	// #3
  404b54:	mov	w3, #0xe6                  	// #230
  404b58:	mov	w1, w25
  404b5c:	bl	4039b8 <log_internal_realm@plt>
  404b60:	mov	w19, w0
  404b64:	b	404ba0 <ascii_strlower_n@plt+0x798>
  404b68:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404b6c:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  404b70:	add	x1, x1, #0x965
  404b74:	add	x3, x3, #0xbcb
  404b78:	mov	w2, #0x1a                  	// #26
  404b7c:	mov	w0, wzr
  404b80:	bl	403a28 <log_oom_internal@plt>
  404b84:	mov	w19, w0
  404b88:	ldur	x0, [x29, #-8]
  404b8c:	bl	4039d8 <free@plt>
  404b90:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404b94:	mov	w8, wzr
  404b98:	neg	w9, w25
  404b9c:	sub	w19, w8, w9, uxtb
  404ba0:	ldr	x0, [sp, #24]
  404ba4:	bl	4039d8 <free@plt>
  404ba8:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404bac:	ldr	x0, [sp, #24]
  404bb0:	bl	4039d8 <free@plt>
  404bb4:	cmp	w24, #0x1
  404bb8:	b.eq	404c00 <ascii_strlower_n@plt+0x7f8>  // b.none
  404bbc:	cmp	w24, #0x2
  404bc0:	b.ne	404c38 <ascii_strlower_n@plt+0x830>  // b.any
  404bc4:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404bc8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404bcc:	add	x0, x0, #0x20
  404bd0:	add	x1, x1, #0xb5c
  404bd4:	bl	403a78 <strv_extend@plt>
  404bd8:	tbz	w0, #31, 404c38 <ascii_strlower_n@plt+0x830>
  404bdc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404be0:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  404be4:	add	x1, x1, #0x965
  404be8:	add	x3, x3, #0x9de
  404bec:	mov	w2, #0x108                 	// #264
  404bf0:	mov	w0, wzr
  404bf4:	bl	403a28 <log_oom_internal@plt>
  404bf8:	mov	w19, w0
  404bfc:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c00:	mov	w0, wzr
  404c04:	bl	4039a8 <log_get_max_level_realm@plt>
  404c08:	cmp	w0, #0x7
  404c0c:	b.lt	404c38 <ascii_strlower_n@plt+0x830>  // b.tstop
  404c10:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c14:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c18:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c1c:	add	x2, x2, #0x965
  404c20:	add	x4, x4, #0x9de
  404c24:	add	x5, x5, #0xb5f
  404c28:	mov	w0, #0x7                   	// #7
  404c2c:	mov	w3, #0x10b                 	// #267
  404c30:	mov	w1, wzr
  404c34:	bl	4039b8 <log_internal_realm@plt>
  404c38:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404c3c:	ldr	x8, [x8, #24]
  404c40:	cbz	x8, 404c4c <ascii_strlower_n@plt+0x844>
  404c44:	mov	w19, #0x1                   	// #1
  404c48:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c4c:	mov	w0, wzr
  404c50:	bl	4039a8 <log_get_max_level_realm@plt>
  404c54:	cmp	w0, #0x3
  404c58:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404c5c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c60:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c64:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404c68:	mov	w1, #0x16                  	// #22
  404c6c:	add	x2, x2, #0x965
  404c70:	add	x4, x4, #0x9de
  404c74:	add	x5, x5, #0xb90
  404c78:	mov	w0, #0x3                   	// #3
  404c7c:	movk	w1, #0x4000, lsl #16
  404c80:	mov	w3, #0x10f                 	// #271
  404c84:	bl	4039b8 <log_internal_realm@plt>
  404c88:	mov	w19, w0
  404c8c:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c90:	mov	w19, #0xffffffea            	// #-22
  404c94:	mov	w0, w19
  404c98:	ldp	x20, x19, [sp, #128]
  404c9c:	ldp	x22, x21, [sp, #112]
  404ca0:	ldp	x24, x23, [sp, #96]
  404ca4:	ldp	x26, x25, [sp, #80]
  404ca8:	ldp	x28, x27, [sp, #64]
  404cac:	ldp	x29, x30, [sp, #48]
  404cb0:	add	sp, sp, #0x90
  404cb4:	ret
  404cb8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404cbc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404cc0:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404cc4:	add	x1, x1, #0xa9d
  404cc8:	add	x2, x2, #0x965
  404ccc:	add	x4, x4, #0x985
  404cd0:	mov	w3, #0xcc                  	// #204
  404cd4:	mov	w0, wzr
  404cd8:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  404cdc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ce0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ce4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ce8:	add	x1, x1, #0x958
  404cec:	add	x2, x2, #0x965
  404cf0:	add	x4, x4, #0x985
  404cf4:	mov	w3, #0x80                  	// #128
  404cf8:	mov	w0, wzr
  404cfc:	bl	403a98 <log_assert_failed_realm@plt>
  404d00:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404d04:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404d08:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404d0c:	add	x1, x1, #0x9ad
  404d10:	add	x2, x2, #0x965
  404d14:	add	x4, x4, #0x985
  404d18:	mov	w3, #0x81                  	// #129
  404d1c:	mov	w0, wzr
  404d20:	bl	403a98 <log_assert_failed_realm@plt>
  404d24:	ldr	x0, [x0]
  404d28:	b	4039d8 <free@plt>
  404d2c:	ldr	x0, [x0]
  404d30:	cbz	x0, 404d38 <ascii_strlower_n@plt+0x930>
  404d34:	b	403aa8 <strv_free@plt>
  404d38:	ret
  404d3c:	ldr	x0, [x0]
  404d40:	cbz	x0, 404d48 <ascii_strlower_n@plt+0x940>
  404d44:	b	403aa8 <strv_free@plt>
  404d48:	ret
  404d4c:	ldr	x0, [x0]
  404d50:	cbz	x0, 404d58 <ascii_strlower_n@plt+0x950>
  404d54:	b	403aa8 <strv_free@plt>
  404d58:	ret
  404d5c:	stp	x29, x30, [sp, #-48]!
  404d60:	str	x21, [sp, #16]
  404d64:	stp	x20, x19, [sp, #32]
  404d68:	mov	x29, sp
  404d6c:	cbz	x0, 404f68 <ascii_strlower_n@plt+0xb60>
  404d70:	mov	w1, #0x2e                  	// #46
  404d74:	mov	x19, x0
  404d78:	bl	403ab8 <strchr@plt>
  404d7c:	cbz	x0, 404e44 <ascii_strlower_n@plt+0xa3c>
  404d80:	mov	x20, x0
  404d84:	mov	w0, wzr
  404d88:	bl	4039a8 <log_get_max_level_realm@plt>
  404d8c:	cmp	w0, #0x7
  404d90:	b.lt	404dc0 <ascii_strlower_n@plt+0x9b8>  // b.tstop
  404d94:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404d98:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404d9c:	adrp	x5, 419000 <ascii_strlower_n@plt+0x14bf8>
  404da0:	add	x6, x20, #0x1
  404da4:	add	x2, x2, #0xfaf
  404da8:	add	x4, x4, #0xfe8
  404dac:	add	x5, x5, #0xff6
  404db0:	mov	w0, #0x7                   	// #7
  404db4:	mov	w3, #0x59                  	// #89
  404db8:	mov	w1, wzr
  404dbc:	bl	4039b8 <log_internal_realm@plt>
  404dc0:	sub	x1, x20, x19
  404dc4:	mov	x0, x19
  404dc8:	bl	403ac8 <strndup@plt>
  404dcc:	mov	x19, x0
  404dd0:	cbz	x0, 404e54 <ascii_strlower_n@plt+0xa4c>
  404dd4:	add	x1, x29, #0x1c
  404dd8:	mov	x0, x19
  404ddc:	bl	403ad8 <parse_ifindex_or_ifname@plt>
  404de0:	tbnz	w0, #31, 404e78 <ascii_strlower_n@plt+0xa70>
  404de4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404de8:	ldr	w10, [x8, #56]
  404dec:	ldr	w9, [x29, #28]
  404df0:	cmp	w10, #0x1
  404df4:	b.lt	404ed4 <ascii_strlower_n@plt+0xacc>  // b.tstop
  404df8:	cmp	w10, w9
  404dfc:	b.eq	404ed4 <ascii_strlower_n@plt+0xacc>  // b.none
  404e00:	mov	w0, wzr
  404e04:	bl	4039a8 <log_get_max_level_realm@plt>
  404e08:	cmp	w0, #0x3
  404e0c:	b.lt	404f30 <ascii_strlower_n@plt+0xb28>  // b.tstop
  404e10:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404e14:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404e18:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  404e1c:	mov	w1, #0x16                  	// #22
  404e20:	add	x2, x2, #0xfaf
  404e24:	add	x4, x4, #0xfe8
  404e28:	add	x5, x5, #0x69
  404e2c:	mov	w0, #0x3                   	// #3
  404e30:	movk	w1, #0x4000, lsl #16
  404e34:	mov	w3, #0x6c                  	// #108
  404e38:	bl	4039b8 <log_internal_realm@plt>
  404e3c:	mov	w20, w0
  404e40:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404e44:	mov	x0, x19
  404e48:	bl	403ae8 <strdup@plt>
  404e4c:	mov	x19, x0
  404e50:	cbnz	x0, 404dd4 <ascii_strlower_n@plt+0x9cc>
  404e54:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404e58:	adrp	x3, 419000 <ascii_strlower_n@plt+0x14bf8>
  404e5c:	add	x1, x1, #0xfaf
  404e60:	add	x3, x3, #0xfe8
  404e64:	mov	w2, #0x5f                  	// #95
  404e68:	mov	w0, wzr
  404e6c:	bl	403a28 <log_oom_internal@plt>
  404e70:	mov	w20, w0
  404e74:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404e78:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404e7c:	ldrb	w21, [x8, #16]
  404e80:	mov	w20, w0
  404e84:	mov	w0, wzr
  404e88:	bl	4039a8 <log_get_max_level_realm@plt>
  404e8c:	cmn	w20, #0x13
  404e90:	b.ne	404ef4 <ascii_strlower_n@plt+0xaec>  // b.any
  404e94:	cbz	w21, 404ef4 <ascii_strlower_n@plt+0xaec>
  404e98:	cmp	w0, #0x7
  404e9c:	b.lt	404f38 <ascii_strlower_n@plt+0xb30>  // b.tstop
  404ea0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ea4:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404ea8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  404eac:	add	x2, x2, #0xfaf
  404eb0:	add	x4, x4, #0xfe8
  404eb4:	add	x5, x5, #0x18
  404eb8:	mov	w0, #0x7                   	// #7
  404ebc:	mov	w3, #0x64                  	// #100
  404ec0:	mov	w1, wzr
  404ec4:	mov	x6, x19
  404ec8:	bl	4039b8 <log_internal_realm@plt>
  404ecc:	mov	w20, wzr
  404ed0:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404ed4:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404ed8:	ldr	x0, [x20, #40]
  404edc:	str	w9, [x8, #56]
  404ee0:	bl	4039d8 <free@plt>
  404ee4:	str	x19, [x20, #40]
  404ee8:	mov	w20, #0x1                   	// #1
  404eec:	mov	x19, xzr
  404ef0:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404ef4:	cmp	w0, #0x3
  404ef8:	b.lt	404f40 <ascii_strlower_n@plt+0xb38>  // b.tstop
  404efc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404f00:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404f04:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  404f08:	add	x2, x2, #0xfaf
  404f0c:	add	x4, x4, #0xfe8
  404f10:	add	x5, x5, #0x4e
  404f14:	mov	w0, #0x3                   	// #3
  404f18:	mov	w3, #0x68                  	// #104
  404f1c:	mov	w1, w20
  404f20:	mov	x6, x19
  404f24:	bl	4039b8 <log_internal_realm@plt>
  404f28:	mov	w20, w0
  404f2c:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404f30:	mov	w20, #0xffffffea            	// #-22
  404f34:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404f38:	mov	w20, wzr
  404f3c:	b	404f4c <ascii_strlower_n@plt+0xb44>
  404f40:	mov	w8, wzr
  404f44:	neg	w9, w20
  404f48:	sub	w20, w8, w9, uxtb
  404f4c:	mov	x0, x19
  404f50:	bl	4039d8 <free@plt>
  404f54:	mov	w0, w20
  404f58:	ldp	x20, x19, [sp, #32]
  404f5c:	ldr	x21, [sp, #16]
  404f60:	ldp	x29, x30, [sp], #48
  404f64:	ret
  404f68:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  404f6c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  404f70:	adrp	x4, 419000 <ascii_strlower_n@plt+0x14bf8>
  404f74:	add	x1, x1, #0xfaa
  404f78:	add	x2, x2, #0xfaf
  404f7c:	add	x4, x4, #0xfc8
  404f80:	mov	w3, #0x55                  	// #85
  404f84:	bl	403a98 <log_assert_failed_realm@plt>
  404f88:	sub	sp, sp, #0x90
  404f8c:	stp	x22, x21, [sp, #112]
  404f90:	adrp	x21, 41a000 <ascii_strlower_n@plt+0x15bf8>
  404f94:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404f98:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404f9c:	add	x21, x21, #0x9c
  404fa0:	stp	x20, x19, [sp, #128]
  404fa4:	mov	x19, x1
  404fa8:	mov	w20, w0
  404fac:	str	w0, [x8, #152]
  404fb0:	str	x1, [x9, #160]
  404fb4:	mov	w0, #0x6                   	// #6
  404fb8:	mov	x1, x21
  404fbc:	stp	x29, x30, [sp, #48]
  404fc0:	stp	x28, x27, [sp, #64]
  404fc4:	stp	x26, x25, [sp, #80]
  404fc8:	stp	x24, x23, [sp, #96]
  404fcc:	add	x29, sp, #0x30
  404fd0:	str	xzr, [sp, #8]
  404fd4:	bl	403af8 <setlocale@plt>
  404fd8:	mov	w0, #0x1                   	// #1
  404fdc:	bl	403b08 <log_show_color@plt>
  404fe0:	mov	w0, wzr
  404fe4:	bl	403b18 <log_parse_environment_realm@plt>
  404fe8:	bl	403b28 <log_open@plt>
  404fec:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404ff0:	ldr	x22, [x28, #144]
  404ff4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  404ff8:	add	x1, x1, #0x9d
  404ffc:	mov	x0, x22
  405000:	bl	403b38 <strcmp@plt>
  405004:	cbz	w0, 405074 <ascii_strlower_n@plt+0xc6c>
  405008:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40500c:	add	x1, x1, #0xa8
  405010:	mov	x0, x22
  405014:	bl	403b38 <strcmp@plt>
  405018:	cbz	w0, 405084 <ascii_strlower_n@plt+0xc7c>
  40501c:	tbnz	w20, #31, 406210 <ascii_strlower_n@plt+0x1e08>
  405020:	cbz	x19, 406234 <ascii_strlower_n@plt+0x1e2c>
  405024:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405028:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40502c:	add	x2, x2, #0x1f5
  405030:	add	x3, x3, #0x1a0
  405034:	mov	w0, w20
  405038:	mov	x1, x19
  40503c:	mov	x4, xzr
  405040:	bl	403998 <getopt_long@plt>
  405044:	tbnz	w0, #31, 4053c8 <ascii_strlower_n@plt+0xfc0>
  405048:	adrp	x23, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40504c:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405050:	adrp	x25, 420000 <ascii_strlower_n@plt+0x1bbf8>
  405054:	adrp	x26, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405058:	add	x23, x23, #0xb9a
  40505c:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405060:	adrp	x27, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405064:	add	x24, x24, #0x1f5
  405068:	add	x25, x25, #0x1a0
  40506c:	add	x26, x26, #0xb18
  405070:	b	4050e8 <ascii_strlower_n@plt+0xce0>
  405074:	mov	w0, w20
  405078:	mov	x1, x19
  40507c:	bl	404524 <ascii_strlower_n@plt+0x11c>
  405080:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405084:	tbnz	w20, #31, 4062c4 <ascii_strlower_n@plt+0x1ebc>
  405088:	cbz	x19, 4062e8 <ascii_strlower_n@plt+0x1ee0>
  40508c:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405090:	adrp	x3, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405094:	add	x2, x2, #0x1f5
  405098:	add	x3, x3, #0xdc0
  40509c:	mov	w0, w20
  4050a0:	mov	x1, x19
  4050a4:	mov	x4, xzr
  4050a8:	bl	403998 <getopt_long@plt>
  4050ac:	tbnz	w0, #31, 40594c <ascii_strlower_n@plt+0x1544>
  4050b0:	adrp	x23, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4050b4:	add	x23, x23, #0xbaa
  4050b8:	b	405498 <ascii_strlower_n@plt+0x1090>
  4050bc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4050c0:	ldr	w8, [x9, #92]
  4050c4:	orr	w8, w8, #0x1
  4050c8:	str	w8, [x9, #92]
  4050cc:	mov	w0, w20
  4050d0:	mov	x1, x19
  4050d4:	mov	x2, x24
  4050d8:	mov	x3, x25
  4050dc:	mov	x4, xzr
  4050e0:	bl	403998 <getopt_long@plt>
  4050e4:	tbnz	w0, #31, 4053c8 <ascii_strlower_n@plt+0xfc0>
  4050e8:	sub	w8, w0, #0x34
  4050ec:	cmp	w8, #0x40
  4050f0:	b.ls	405134 <ascii_strlower_n@plt+0xd2c>  // b.plast
  4050f4:	sub	w8, w0, #0x100
  4050f8:	cmp	w8, #0x7
  4050fc:	b.hi	4061ec <ascii_strlower_n@plt+0x1de4>  // b.pmore
  405100:	adr	x9, 4050bc <ascii_strlower_n@plt+0xcb4>
  405104:	ldrh	w10, [x23, x8, lsl #1]
  405108:	add	x9, x9, x10, lsl #2
  40510c:	br	x9
  405110:	ldr	x0, [x21, #168]
  405114:	bl	403b48 <parse_boolean@plt>
  405118:	mov	w22, w0
  40511c:	tbnz	w0, #31, 405cec <ascii_strlower_n@plt+0x18e4>
  405120:	cmp	w22, #0x0
  405124:	cset	w8, ne  // ne = any
  405128:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40512c:	strb	w8, [x9]
  405130:	b	4050cc <ascii_strlower_n@plt+0xcc4>
  405134:	adr	x9, 405148 <ascii_strlower_n@plt+0xd40>
  405138:	ldrh	w10, [x26, x8, lsl #1]
  40513c:	add	x9, x9, x10, lsl #2
  405140:	mov	w22, #0xffffffea            	// #-22
  405144:	br	x9
  405148:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40514c:	mov	w9, #0x2                   	// #2
  405150:	b	4052a0 <ascii_strlower_n@plt+0xe98>
  405154:	ldr	x0, [x21, #168]
  405158:	bl	403b48 <parse_boolean@plt>
  40515c:	mov	w22, w0
  405160:	tbnz	w0, #31, 405d54 <ascii_strlower_n@plt+0x194c>
  405164:	ldr	x8, [x27, #72]
  405168:	orr	x9, x8, #0x40
  40516c:	and	x8, x8, #0xffffffffffffffbf
  405170:	b	40524c <ascii_strlower_n@plt+0xe44>
  405174:	ldr	x0, [x21, #168]
  405178:	bl	403b48 <parse_boolean@plt>
  40517c:	mov	w22, w0
  405180:	tbnz	w0, #31, 405d88 <ascii_strlower_n@plt+0x1980>
  405184:	ldr	x8, [x27, #72]
  405188:	orr	x9, x8, #0x20
  40518c:	and	x8, x8, #0xffffffffffffffdf
  405190:	b	40524c <ascii_strlower_n@plt+0xe44>
  405194:	ldr	x0, [x21, #168]
  405198:	bl	403b48 <parse_boolean@plt>
  40519c:	mov	w22, w0
  4051a0:	tbnz	w0, #31, 405d20 <ascii_strlower_n@plt+0x1918>
  4051a4:	ldr	x8, [x27, #72]
  4051a8:	orr	x9, x8, #0x80
  4051ac:	and	x8, x8, #0xffffffffffffff7f
  4051b0:	b	40524c <ascii_strlower_n@plt+0xe44>
  4051b4:	ldr	x22, [x21, #168]
  4051b8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4051bc:	add	x1, x1, #0x918
  4051c0:	mov	x0, x22
  4051c4:	bl	403b38 <strcmp@plt>
  4051c8:	cbz	w0, 405c9c <ascii_strlower_n@plt+0x1894>
  4051cc:	mov	x0, x22
  4051d0:	bl	419208 <ascii_strlower_n@plt+0x14e00>
  4051d4:	mov	w22, w0
  4051d8:	tbnz	w0, #31, 405e28 <ascii_strlower_n@plt+0x1a20>
  4051dc:	cmp	w22, #0x10, lsl #12
  4051e0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4051e4:	strh	w22, [x8, #68]
  4051e8:	b.cc	4050cc <ascii_strlower_n@plt+0xcc4>  // b.lo, b.ul, b.last
  4051ec:	b	40630c <ascii_strlower_n@plt+0x1f04>
  4051f0:	bl	403b58 <on_tty@plt>
  4051f4:	tbnz	w0, #0, 405ca8 <ascii_strlower_n@plt+0x18a0>
  4051f8:	ldr	x22, [x21, #168]
  4051fc:	cbz	x22, 405368 <ascii_strlower_n@plt+0xf60>
  405200:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405204:	mov	x0, x22
  405208:	add	x1, x1, #0x33f
  40520c:	bl	403b38 <strcmp@plt>
  405210:	cbz	w0, 405368 <ascii_strlower_n@plt+0xf60>
  405214:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405218:	mov	x0, x22
  40521c:	add	x1, x1, #0x347
  405220:	bl	403b38 <strcmp@plt>
  405224:	cbnz	w0, 406090 <ascii_strlower_n@plt+0x1c88>
  405228:	mov	w8, #0x2                   	// #2
  40522c:	b	40536c <ascii_strlower_n@plt+0xf64>
  405230:	ldr	x0, [x21, #168]
  405234:	bl	403b48 <parse_boolean@plt>
  405238:	mov	w22, w0
  40523c:	tbnz	w0, #31, 405dbc <ascii_strlower_n@plt+0x19b4>
  405240:	ldr	x8, [x27, #72]
  405244:	orr	x9, x8, #0x100
  405248:	and	x8, x8, #0xfffffffffffffeff
  40524c:	cmp	w22, #0x0
  405250:	csel	x8, x9, x8, eq  // eq = none
  405254:	str	x8, [x27, #72]
  405258:	b	4050cc <ascii_strlower_n@plt+0xcc4>
  40525c:	ldr	x22, [x21, #168]
  405260:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405264:	add	x1, x1, #0x918
  405268:	mov	x0, x22
  40526c:	bl	403b38 <strcmp@plt>
  405270:	cbz	w0, 405c64 <ascii_strlower_n@plt+0x185c>
  405274:	mov	x0, x22
  405278:	bl	418dcc <ascii_strlower_n@plt+0x149c4>
  40527c:	mov	w22, w0
  405280:	tbnz	w0, #31, 405df0 <ascii_strlower_n@plt+0x19e8>
  405284:	cmp	w22, #0x10, lsl #12
  405288:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40528c:	strh	w22, [x8, #64]
  405290:	b.cc	4050cc <ascii_strlower_n@plt+0xcc4>  // b.lo, b.ul, b.last
  405294:	b	40627c <ascii_strlower_n@plt+0x1e74>
  405298:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40529c:	mov	w9, #0xa                   	// #10
  4052a0:	str	w9, [x8, #60]
  4052a4:	b	4050cc <ascii_strlower_n@plt+0xcc4>
  4052a8:	ldr	x0, [x21, #168]
  4052ac:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4052b0:	tbz	w0, #31, 4050cc <ascii_strlower_n@plt+0xcc4>
  4052b4:	b	405a54 <ascii_strlower_n@plt+0x164c>
  4052b8:	ldr	x22, [x21, #168]
  4052bc:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4052c0:	add	x1, x1, #0x918
  4052c4:	mov	x0, x22
  4052c8:	bl	403b38 <strcmp@plt>
  4052cc:	cbz	w0, 405c70 <ascii_strlower_n@plt+0x1868>
  4052d0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4052d4:	mov	x0, x22
  4052d8:	add	x1, x1, #0x2a4
  4052dc:	bl	403b38 <strcmp@plt>
  4052e0:	cbz	w0, 405380 <ascii_strlower_n@plt+0xf78>
  4052e4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4052e8:	mov	x0, x22
  4052ec:	add	x1, x1, #0x2a8
  4052f0:	bl	403b38 <strcmp@plt>
  4052f4:	cbz	w0, 40538c <ascii_strlower_n@plt+0xf84>
  4052f8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4052fc:	mov	x0, x22
  405300:	add	x1, x1, #0x2ae
  405304:	bl	403b38 <strcmp@plt>
  405308:	cbz	w0, 405398 <ascii_strlower_n@plt+0xf90>
  40530c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405310:	mov	x0, x22
  405314:	add	x1, x1, #0x2b9
  405318:	bl	403b38 <strcmp@plt>
  40531c:	cbz	w0, 4053a4 <ascii_strlower_n@plt+0xf9c>
  405320:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405324:	mov	x0, x22
  405328:	add	x1, x1, #0x2c4
  40532c:	bl	403b38 <strcmp@plt>
  405330:	cbz	w0, 4053b0 <ascii_strlower_n@plt+0xfa8>
  405334:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405338:	mov	x0, x22
  40533c:	add	x1, x1, #0x2c9
  405340:	bl	403b38 <strcmp@plt>
  405344:	cbz	w0, 4053bc <ascii_strlower_n@plt+0xfb4>
  405348:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40534c:	mov	x0, x22
  405350:	add	x1, x1, #0x2d3
  405354:	bl	403b38 <strcmp@plt>
  405358:	cbnz	w0, 406140 <ascii_strlower_n@plt+0x1d38>
  40535c:	ldr	x8, [x27, #72]
  405360:	orr	x8, x8, #0x10
  405364:	b	405254 <ascii_strlower_n@plt+0xe4c>
  405368:	mov	w8, #0x1                   	// #1
  40536c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405370:	str	w8, [x9, #88]
  405374:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405378:	strb	wzr, [x8]
  40537c:	b	4050cc <ascii_strlower_n@plt+0xcc4>
  405380:	ldr	x8, [x27, #72]
  405384:	orr	x8, x8, #0x1
  405388:	b	405254 <ascii_strlower_n@plt+0xe4c>
  40538c:	ldr	x8, [x27, #72]
  405390:	orr	x8, x8, #0x6
  405394:	b	405254 <ascii_strlower_n@plt+0xe4c>
  405398:	ldr	x8, [x27, #72]
  40539c:	orr	x8, x8, #0x2
  4053a0:	b	405254 <ascii_strlower_n@plt+0xe4c>
  4053a4:	ldr	x8, [x27, #72]
  4053a8:	orr	x8, x8, #0x4
  4053ac:	b	405254 <ascii_strlower_n@plt+0xe4c>
  4053b0:	ldr	x8, [x27, #72]
  4053b4:	orr	x8, x8, #0x18
  4053b8:	b	405254 <ascii_strlower_n@plt+0xe4c>
  4053bc:	ldr	x8, [x27, #72]
  4053c0:	orr	x8, x8, #0x8
  4053c4:	b	405254 <ascii_strlower_n@plt+0xe4c>
  4053c8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4053cc:	adrp	x11, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4053d0:	ldrh	w10, [x8, #64]
  4053d4:	ldrh	w9, [x11, #68]
  4053d8:	cbnz	w10, 405420 <ascii_strlower_n@plt+0x1018>
  4053dc:	cbz	w9, 405420 <ascii_strlower_n@plt+0x1018>
  4053e0:	mov	w0, wzr
  4053e4:	bl	4039a8 <log_get_max_level_realm@plt>
  4053e8:	cmp	w0, #0x3
  4053ec:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  4053f0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4053f4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4053f8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4053fc:	mov	w1, #0x16                  	// #22
  405400:	add	x2, x2, #0xfaf
  405404:	add	x4, x4, #0xe59
  405408:	add	x5, x5, #0x408
  40540c:	mov	w0, #0x3                   	// #3
  405410:	movk	w1, #0x4000, lsl #16
  405414:	mov	w3, #0xc0b                 	// #3083
  405418:	bl	4039b8 <log_internal_realm@plt>
  40541c:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405420:	cbz	w10, 40543c <ascii_strlower_n@plt+0x1034>
  405424:	cbnz	w9, 40543c <ascii_strlower_n@plt+0x1034>
  405428:	mov	w8, #0x1                   	// #1
  40542c:	strh	w8, [x11, #68]
  405430:	b	4059b4 <ascii_strlower_n@plt+0x15ac>
  405434:	bl	4067fc <ascii_strlower_n@plt+0x23f4>
  405438:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  40543c:	cbnz	w10, 4059b4 <ascii_strlower_n@plt+0x15ac>
  405440:	cbz	w9, 4059b4 <ascii_strlower_n@plt+0x15ac>
  405444:	mov	w9, #0x1                   	// #1
  405448:	strh	w9, [x8, #64]
  40544c:	b	4059b4 <ascii_strlower_n@plt+0x15ac>
  405450:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405454:	ldr	x1, [x8, #168]
  405458:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40545c:	add	x0, x0, #0x18
  405460:	bl	403a78 <strv_extend@plt>
  405464:	tbnz	w0, #31, 405ff8 <ascii_strlower_n@plt+0x1bf0>
  405468:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40546c:	mov	w9, #0xa                   	// #10
  405470:	str	w9, [x8, #20]
  405474:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405478:	adrp	x3, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40547c:	add	x2, x2, #0x1f5
  405480:	add	x3, x3, #0xdc0
  405484:	mov	w0, w20
  405488:	mov	x1, x19
  40548c:	mov	x4, xzr
  405490:	bl	403998 <getopt_long@plt>
  405494:	tbnz	w0, #31, 40594c <ascii_strlower_n@plt+0x1544>
  405498:	sub	w8, w0, #0x34
  40549c:	cmp	w8, #0xe3
  4054a0:	b.hi	4061c8 <ascii_strlower_n@plt+0x1dc0>  // b.pmore
  4054a4:	adr	x9, 405450 <ascii_strlower_n@plt+0x1048>
  4054a8:	ldrh	w10, [x23, x8, lsl #1]
  4054ac:	add	x9, x9, x10, lsl #2
  4054b0:	mov	w22, #0xffffffea            	// #-22
  4054b4:	br	x9
  4054b8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054bc:	mov	w9, #0x2                   	// #2
  4054c0:	b	4056f0 <ascii_strlower_n@plt+0x12e8>
  4054c4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054c8:	ldr	x8, [x8, #168]
  4054cc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054d0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054d4:	mov	w11, #0xa                   	// #10
  4054d8:	str	x8, [x9, #104]
  4054dc:	str	w11, [x10, #20]
  4054e0:	b	405474 <ascii_strlower_n@plt+0x106c>
  4054e4:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054e8:	ldr	x22, [x24, #168]
  4054ec:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4054f0:	add	x1, x1, #0x918
  4054f4:	mov	x0, x22
  4054f8:	bl	403b38 <strcmp@plt>
  4054fc:	cbz	w0, 405c64 <ascii_strlower_n@plt+0x185c>
  405500:	mov	x0, x22
  405504:	bl	418dcc <ascii_strlower_n@plt+0x149c4>
  405508:	mov	w22, w0
  40550c:	tbnz	w0, #31, 406018 <ascii_strlower_n@plt+0x1c10>
  405510:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405514:	cmp	w22, #0x10, lsl #12
  405518:	strh	w22, [x8, #64]
  40551c:	b.cs	406258 <ascii_strlower_n@plt+0x1e50>  // b.hs, b.nlast
  405520:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405524:	mov	w9, #0x1                   	// #1
  405528:	str	w9, [x8, #20]
  40552c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405530:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405534:	ldr	x0, [x8, #168]
  405538:	bl	403b48 <parse_boolean@plt>
  40553c:	mov	w22, w0
  405540:	tbnz	w0, #31, 405f48 <ascii_strlower_n@plt+0x1b40>
  405544:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405548:	ldr	x9, [x8, #72]
  40554c:	orr	x10, x9, #0x80
  405550:	and	x9, x9, #0xffffffffffffff7f
  405554:	b	4057dc <ascii_strlower_n@plt+0x13d4>
  405558:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40555c:	ldr	x22, [x8, #168]
  405560:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405564:	add	x1, x1, #0x918
  405568:	mov	x0, x22
  40556c:	bl	403b38 <strcmp@plt>
  405570:	cbz	w0, 405c70 <ascii_strlower_n@plt+0x1868>
  405574:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405578:	add	x1, x1, #0x2a4
  40557c:	mov	x0, x22
  405580:	bl	403b38 <strcmp@plt>
  405584:	cbz	w0, 4058ec <ascii_strlower_n@plt+0x14e4>
  405588:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40558c:	add	x1, x1, #0x2a8
  405590:	mov	x0, x22
  405594:	bl	403b38 <strcmp@plt>
  405598:	cbz	w0, 4058fc <ascii_strlower_n@plt+0x14f4>
  40559c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4055a0:	add	x1, x1, #0x2ae
  4055a4:	mov	x0, x22
  4055a8:	bl	403b38 <strcmp@plt>
  4055ac:	cbz	w0, 40590c <ascii_strlower_n@plt+0x1504>
  4055b0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4055b4:	add	x1, x1, #0x2b9
  4055b8:	mov	x0, x22
  4055bc:	bl	403b38 <strcmp@plt>
  4055c0:	cbz	w0, 40591c <ascii_strlower_n@plt+0x1514>
  4055c4:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4055c8:	add	x1, x1, #0x2c4
  4055cc:	mov	x0, x22
  4055d0:	bl	403b38 <strcmp@plt>
  4055d4:	cbz	w0, 40592c <ascii_strlower_n@plt+0x1524>
  4055d8:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4055dc:	add	x1, x1, #0x2c9
  4055e0:	mov	x0, x22
  4055e4:	bl	403b38 <strcmp@plt>
  4055e8:	cbz	w0, 40593c <ascii_strlower_n@plt+0x1534>
  4055ec:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4055f0:	add	x1, x1, #0x2d3
  4055f4:	mov	x0, x22
  4055f8:	bl	403b38 <strcmp@plt>
  4055fc:	cbnz	w0, 40617c <ascii_strlower_n@plt+0x1d74>
  405600:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405604:	ldr	x9, [x8, #72]
  405608:	orr	x9, x9, #0x10
  40560c:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  405610:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405614:	ldr	x22, [x8, #168]
  405618:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40561c:	mov	w9, #0x4                   	// #4
  405620:	str	w9, [x8, #20]
  405624:	cbz	x22, 405648 <ascii_strlower_n@plt+0x1240>
  405628:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40562c:	add	x8, x8, #0x180
  405630:	ldp	q0, q1, [x8]
  405634:	add	x0, sp, #0x10
  405638:	mov	x1, x22
  40563c:	stp	q0, q1, [sp, #16]
  405640:	bl	403b68 <strv_find@plt>
  405644:	cbz	x0, 4060cc <ascii_strlower_n@plt+0x1cc4>
  405648:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40564c:	str	x22, [x8, #80]
  405650:	b	405474 <ascii_strlower_n@plt+0x106c>
  405654:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405658:	ldr	x1, [x8, #168]
  40565c:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405660:	add	x0, x0, #0x20
  405664:	bl	403a78 <strv_extend@plt>
  405668:	tbz	w0, #31, 405468 <ascii_strlower_n@plt+0x1060>
  40566c:	b	405f7c <ascii_strlower_n@plt+0x1b74>
  405670:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405674:	mov	w9, #0x2                   	// #2
  405678:	str	w9, [x8, #20]
  40567c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405680:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405684:	ldr	x22, [x24, #168]
  405688:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40568c:	add	x1, x1, #0x918
  405690:	mov	x0, x22
  405694:	bl	403b38 <strcmp@plt>
  405698:	cbz	w0, 405c9c <ascii_strlower_n@plt+0x1894>
  40569c:	mov	x0, x22
  4056a0:	bl	419208 <ascii_strlower_n@plt+0x14e00>
  4056a4:	mov	w22, w0
  4056a8:	tbnz	w0, #31, 406050 <ascii_strlower_n@plt+0x1c48>
  4056ac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056b0:	cmp	w22, #0x10, lsl #12
  4056b4:	strh	w22, [x8, #68]
  4056b8:	b.cc	405474 <ascii_strlower_n@plt+0x106c>  // b.lo, b.ul, b.last
  4056bc:	b	4062a0 <ascii_strlower_n@plt+0x1e98>
  4056c0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056c4:	ldr	x0, [x8, #168]
  4056c8:	bl	403b48 <parse_boolean@plt>
  4056cc:	mov	w22, w0
  4056d0:	tbnz	w0, #31, 405f14 <ascii_strlower_n@plt+0x1b0c>
  4056d4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056d8:	ldr	x9, [x8, #72]
  4056dc:	orr	x10, x9, #0x40
  4056e0:	and	x9, x9, #0xffffffffffffffbf
  4056e4:	b	4057dc <ascii_strlower_n@plt+0x13d4>
  4056e8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056ec:	mov	w9, #0xa                   	// #10
  4056f0:	str	w9, [x8, #60]
  4056f4:	b	405474 <ascii_strlower_n@plt+0x106c>
  4056f8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056fc:	ldr	x0, [x8, #168]
  405700:	bl	403b48 <parse_boolean@plt>
  405704:	mov	w22, w0
  405708:	tbnz	w0, #31, 405f94 <ascii_strlower_n@plt+0x1b8c>
  40570c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405710:	ldr	x9, [x8, #72]
  405714:	orr	x10, x9, #0x100
  405718:	and	x9, x9, #0xfffffffffffffeff
  40571c:	b	4057dc <ascii_strlower_n@plt+0x13d4>
  405720:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405724:	mov	w9, #0xb                   	// #11
  405728:	str	w9, [x8, #20]
  40572c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405730:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405734:	mov	w9, #0x9                   	// #9
  405738:	str	w9, [x8, #20]
  40573c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405740:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405744:	mov	w9, #0x7                   	// #7
  405748:	str	w9, [x8, #20]
  40574c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405750:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405754:	mov	w9, #0x5                   	// #5
  405758:	str	w9, [x8, #20]
  40575c:	b	405474 <ascii_strlower_n@plt+0x106c>
  405760:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405764:	ldr	x1, [x8, #168]
  405768:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40576c:	add	x0, x0, #0x30
  405770:	bl	403a78 <strv_extend@plt>
  405774:	tbz	w0, #31, 405468 <ascii_strlower_n@plt+0x1060>
  405778:	b	405fe0 <ascii_strlower_n@plt+0x1bd8>
  40577c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405780:	ldr	x0, [x8, #168]
  405784:	bl	404d5c <ascii_strlower_n@plt+0x954>
  405788:	tbz	w0, #31, 405474 <ascii_strlower_n@plt+0x106c>
  40578c:	b	405a54 <ascii_strlower_n@plt+0x164c>
  405790:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405794:	ldr	x0, [x8, #168]
  405798:	bl	403b48 <parse_boolean@plt>
  40579c:	mov	w22, w0
  4057a0:	tbnz	w0, #31, 405ee0 <ascii_strlower_n@plt+0x1ad8>
  4057a4:	cmp	w22, #0x0
  4057a8:	cset	w8, ne  // ne = any
  4057ac:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057b0:	strb	w8, [x9]
  4057b4:	b	405474 <ascii_strlower_n@plt+0x106c>
  4057b8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057bc:	ldr	x0, [x8, #168]
  4057c0:	bl	403b48 <parse_boolean@plt>
  4057c4:	mov	w22, w0
  4057c8:	tbnz	w0, #31, 405e60 <ascii_strlower_n@plt+0x1a58>
  4057cc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057d0:	ldr	x9, [x8, #72]
  4057d4:	orr	x10, x9, #0x20
  4057d8:	and	x9, x9, #0xffffffffffffffdf
  4057dc:	cmp	w22, #0x0
  4057e0:	csel	x9, x10, x9, eq  // eq = none
  4057e4:	str	x9, [x8, #72]
  4057e8:	b	405474 <ascii_strlower_n@plt+0x106c>
  4057ec:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057f0:	mov	w9, #0x3                   	// #3
  4057f4:	str	w9, [x8, #20]
  4057f8:	b	405474 <ascii_strlower_n@plt+0x106c>
  4057fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405800:	mov	w9, #0x8                   	// #8
  405804:	str	w9, [x8, #20]
  405808:	b	405474 <ascii_strlower_n@plt+0x106c>
  40580c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405810:	mov	w9, #0x6                   	// #6
  405814:	str	w9, [x8, #20]
  405818:	b	405474 <ascii_strlower_n@plt+0x106c>
  40581c:	bl	403b58 <on_tty@plt>
  405820:	tbnz	w0, #0, 405e94 <ascii_strlower_n@plt+0x1a8c>
  405824:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405828:	ldr	x22, [x8, #168]
  40582c:	cbz	x22, 4058d4 <ascii_strlower_n@plt+0x14cc>
  405830:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405834:	add	x1, x1, #0x33f
  405838:	mov	x0, x22
  40583c:	bl	403b38 <strcmp@plt>
  405840:	cbz	w0, 4058d4 <ascii_strlower_n@plt+0x14cc>
  405844:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405848:	add	x1, x1, #0x347
  40584c:	mov	x0, x22
  405850:	bl	403b38 <strcmp@plt>
  405854:	cbnz	w0, 406104 <ascii_strlower_n@plt+0x1cfc>
  405858:	mov	w8, #0x2                   	// #2
  40585c:	b	4058d8 <ascii_strlower_n@plt+0x14d0>
  405860:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405864:	ldr	w9, [x8, #92]
  405868:	orr	w9, w9, #0x1
  40586c:	str	w9, [x8, #92]
  405870:	b	405474 <ascii_strlower_n@plt+0x106c>
  405874:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405878:	ldr	x8, [x8, #168]
  40587c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405880:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405884:	mov	w11, #0xa                   	// #10
  405888:	str	x8, [x9, #112]
  40588c:	str	w11, [x10, #20]
  405890:	b	405474 <ascii_strlower_n@plt+0x106c>
  405894:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405898:	ldr	x8, [x8, #168]
  40589c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058a0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058a4:	mov	w11, #0xa                   	// #10
  4058a8:	str	x8, [x9, #120]
  4058ac:	str	w11, [x10, #20]
  4058b0:	b	405474 <ascii_strlower_n@plt+0x106c>
  4058b4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058b8:	ldr	x8, [x8, #168]
  4058bc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058c0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058c4:	mov	w11, #0xa                   	// #10
  4058c8:	str	x8, [x9, #96]
  4058cc:	str	w11, [x10, #20]
  4058d0:	b	405474 <ascii_strlower_n@plt+0x106c>
  4058d4:	mov	w8, #0x1                   	// #1
  4058d8:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058dc:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058e0:	str	w8, [x9, #88]
  4058e4:	strb	wzr, [x10]
  4058e8:	b	405474 <ascii_strlower_n@plt+0x106c>
  4058ec:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058f0:	ldr	x9, [x8, #72]
  4058f4:	orr	x9, x9, #0x1
  4058f8:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  4058fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405900:	ldr	x9, [x8, #72]
  405904:	orr	x9, x9, #0x6
  405908:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  40590c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405910:	ldr	x9, [x8, #72]
  405914:	orr	x9, x9, #0x2
  405918:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  40591c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405920:	ldr	x9, [x8, #72]
  405924:	orr	x9, x9, #0x4
  405928:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  40592c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405930:	ldr	x9, [x8, #72]
  405934:	orr	x9, x9, #0x18
  405938:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  40593c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405940:	ldr	x9, [x8, #72]
  405944:	orr	x9, x9, #0x8
  405948:	b	4057e4 <ascii_strlower_n@plt+0x13dc>
  40594c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405950:	ldrh	w10, [x8, #64]
  405954:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405958:	ldrh	w9, [x8, #68]
  40595c:	cbnz	w10, 405ae8 <ascii_strlower_n@plt+0x16e0>
  405960:	cbz	w9, 405ae8 <ascii_strlower_n@plt+0x16e0>
  405964:	mov	w0, wzr
  405968:	bl	4039a8 <log_get_max_level_realm@plt>
  40596c:	cmp	w0, #0x3
  405970:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  405974:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405978:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40597c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405980:	mov	w1, #0x16                  	// #22
  405984:	add	x2, x2, #0xfaf
  405988:	add	x4, x4, #0x201
  40598c:	add	x5, x5, #0x408
  405990:	mov	w0, #0x3                   	// #3
  405994:	movk	w1, #0x4000, lsl #16
  405998:	mov	w3, #0xb41                 	// #2881
  40599c:	bl	4039b8 <log_internal_realm@plt>
  4059a0:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  4059a4:	bl	403a68 <version@plt>
  4059a8:	mov	w22, w0
  4059ac:	cmp	w22, #0x1
  4059b0:	b.lt	405a58 <ascii_strlower_n@plt+0x1650>  // b.tstop
  4059b4:	add	x0, sp, #0x8
  4059b8:	bl	403b78 <sd_bus_open_system@plt>
  4059bc:	tbnz	w0, #31, 405a00 <ascii_strlower_n@plt+0x15f8>
  4059c0:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4059c4:	add	x8, x8, #0xda8
  4059c8:	ldr	q0, [x8]
  4059cc:	ldr	x8, [x8, #16]
  4059d0:	ldr	x1, [x28, #144]
  4059d4:	add	x0, sp, #0x10
  4059d8:	str	q0, [sp, #16]
  4059dc:	str	x8, [sp, #32]
  4059e0:	bl	403b68 <strv_find@plt>
  4059e4:	ldr	x3, [sp, #8]
  4059e8:	cbz	x0, 405a40 <ascii_strlower_n@plt+0x1638>
  4059ec:	mov	w0, w20
  4059f0:	mov	x1, x19
  4059f4:	mov	x2, x3
  4059f8:	bl	406330 <ascii_strlower_n@plt+0x1f28>
  4059fc:	b	405a54 <ascii_strlower_n@plt+0x164c>
  405a00:	mov	w21, w0
  405a04:	mov	w0, wzr
  405a08:	bl	4039a8 <log_get_max_level_realm@plt>
  405a0c:	cmp	w0, #0x3
  405a10:	b.lt	405ad8 <ascii_strlower_n@plt+0x16d0>  // b.tstop
  405a14:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405a18:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405a1c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405a20:	add	x2, x2, #0xfaf
  405a24:	add	x4, x4, #0xb8
  405a28:	add	x5, x5, #0xbc
  405a2c:	mov	w0, #0x3                   	// #3
  405a30:	mov	w3, #0xcb5                 	// #3253
  405a34:	mov	w1, w21
  405a38:	bl	4039b8 <log_internal_realm@plt>
  405a3c:	b	405a54 <ascii_strlower_n@plt+0x164c>
  405a40:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  405a44:	add	x2, x2, #0x360
  405a48:	mov	w0, w20
  405a4c:	mov	x1, x19
  405a50:	bl	403b88 <dispatch_verb@plt>
  405a54:	mov	w22, w0
  405a58:	ldr	x0, [sp, #8]
  405a5c:	cbz	x0, 405a64 <ascii_strlower_n@plt+0x165c>
  405a60:	bl	403b98 <sd_bus_flush_close_unref@plt>
  405a64:	bl	403ba8 <ask_password_agent_close@plt>
  405a68:	bl	403bb8 <polkit_agent_close@plt>
  405a6c:	bl	403bc8 <pager_close@plt>
  405a70:	bl	403bd8 <mac_selinux_finish@plt>
  405a74:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  405a78:	ldr	x8, [x8, #2656]
  405a7c:	adrp	x19, 43f000 <ascii_strlower_n@plt+0x3abf8>
  405a80:	ldr	x19, [x19, #2664]
  405a84:	add	x9, x8, #0x7
  405a88:	and	x20, x9, #0xfffffffffffffff8
  405a8c:	cmp	x20, x19
  405a90:	cset	w9, cs  // cs = hs, nlast
  405a94:	cmp	x8, #0x0
  405a98:	cset	w8, eq  // eq = none
  405a9c:	orr	w8, w8, w9
  405aa0:	tbnz	w8, #0, 405ab4 <ascii_strlower_n@plt+0x16ac>
  405aa4:	ldp	x0, x8, [x20], #16
  405aa8:	blr	x8
  405aac:	cmp	x20, x19
  405ab0:	b.cc	405aa4 <ascii_strlower_n@plt+0x169c>  // b.lo, b.ul, b.last
  405ab4:	lsr	w0, w22, #31
  405ab8:	ldp	x20, x19, [sp, #128]
  405abc:	ldp	x22, x21, [sp, #112]
  405ac0:	ldp	x24, x23, [sp, #96]
  405ac4:	ldp	x26, x25, [sp, #80]
  405ac8:	ldp	x28, x27, [sp, #64]
  405acc:	ldp	x29, x30, [sp, #48]
  405ad0:	add	sp, sp, #0x90
  405ad4:	ret
  405ad8:	mov	w8, wzr
  405adc:	neg	w9, w21
  405ae0:	sub	w22, w8, w9, uxtb
  405ae4:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405ae8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405aec:	ldr	w8, [x8, #20]
  405af0:	cbz	w10, 405ba8 <ascii_strlower_n@plt+0x17a0>
  405af4:	cmp	w8, #0x2
  405af8:	b.ne	405ba8 <ascii_strlower_n@plt+0x17a0>  // b.any
  405afc:	mov	w0, wzr
  405b00:	bl	4039a8 <log_get_max_level_realm@plt>
  405b04:	cmp	w0, #0x3
  405b08:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  405b0c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405b10:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405b14:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405b18:	mov	w1, #0x16                  	// #22
  405b1c:	add	x2, x2, #0xfaf
  405b20:	add	x4, x4, #0x201
  405b24:	add	x5, x5, #0x43f
  405b28:	mov	w0, #0x3                   	// #3
  405b2c:	movk	w1, #0x4000, lsl #16
  405b30:	mov	w3, #0xb45                 	// #2885
  405b34:	bl	4039b8 <log_internal_realm@plt>
  405b38:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405b3c:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  405b40:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405b44:	add	x0, x0, #0xbbe
  405b48:	add	x1, x1, #0xbc9
  405b4c:	add	x2, sp, #0x10
  405b50:	str	xzr, [sp, #16]
  405b54:	bl	403a48 <terminal_urlify_man@plt>
  405b58:	tbnz	w0, #31, 405c30 <ascii_strlower_n@plt+0x1828>
  405b5c:	ldr	x22, [x28, #144]
  405b60:	bl	403be8 <colors_enabled@plt>
  405b64:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405b68:	add	x8, x8, #0xda0
  405b6c:	tst	w0, #0x1
  405b70:	csel	x23, x8, x21, ne  // ne = any
  405b74:	bl	403be8 <colors_enabled@plt>
  405b78:	ldr	x4, [sp, #16]
  405b7c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405b80:	add	x8, x8, #0xdaa
  405b84:	tst	w0, #0x1
  405b88:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405b8c:	csel	x3, x8, x21, ne  // ne = any
  405b90:	add	x0, x0, #0x4fc
  405b94:	mov	x1, x22
  405b98:	mov	x2, x23
  405b9c:	bl	403a58 <printf@plt>
  405ba0:	mov	w22, wzr
  405ba4:	b	405c50 <ascii_strlower_n@plt+0x1848>
  405ba8:	cbz	w10, 405bbc <ascii_strlower_n@plt+0x17b4>
  405bac:	cbnz	w9, 405bbc <ascii_strlower_n@plt+0x17b4>
  405bb0:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405bb4:	add	x9, x9, #0x44
  405bb8:	b	405bcc <ascii_strlower_n@plt+0x17c4>
  405bbc:	cbnz	w10, 405bd4 <ascii_strlower_n@plt+0x17cc>
  405bc0:	cbz	w9, 405bd4 <ascii_strlower_n@plt+0x17cc>
  405bc4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405bc8:	add	x9, x9, #0x40
  405bcc:	mov	w10, #0x1                   	// #1
  405bd0:	strh	w10, [x9]
  405bd4:	and	w8, w8, #0xfffffffe
  405bd8:	cmp	w8, #0xa
  405bdc:	b.ne	4059b4 <ascii_strlower_n@plt+0x15ac>  // b.any
  405be0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405be4:	ldr	w8, [x8, #56]
  405be8:	cmp	w8, #0x0
  405bec:	b.gt	4059b4 <ascii_strlower_n@plt+0x15ac>
  405bf0:	mov	w0, wzr
  405bf4:	bl	4039a8 <log_get_max_level_realm@plt>
  405bf8:	cmp	w0, #0x3
  405bfc:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  405c00:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405c04:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405c08:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405c0c:	mov	w1, #0x16                  	// #22
  405c10:	add	x2, x2, #0xfaf
  405c14:	add	x4, x4, #0x201
  405c18:	add	x5, x5, #0x46a
  405c1c:	mov	w0, #0x3                   	// #3
  405c20:	movk	w1, #0x4000, lsl #16
  405c24:	mov	w3, #0xb51                 	// #2897
  405c28:	bl	4039b8 <log_internal_realm@plt>
  405c2c:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405c30:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405c34:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405c38:	add	x1, x1, #0xfaf
  405c3c:	add	x3, x3, #0x4f0
  405c40:	mov	w2, #0x9a4                 	// #2468
  405c44:	mov	w0, wzr
  405c48:	bl	403a28 <log_oom_internal@plt>
  405c4c:	mov	w22, w0
  405c50:	ldr	x0, [sp, #16]
  405c54:	bl	4039d8 <free@plt>
  405c58:	cmp	w22, #0x1
  405c5c:	b.ge	4059b4 <ascii_strlower_n@plt+0x15ac>  // b.tcont
  405c60:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405c64:	bl	4066c0 <ascii_strlower_n@plt+0x22b8>
  405c68:	mov	w22, wzr
  405c6c:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405c70:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405c74:	ldrb	w8, [x8]
  405c78:	cbz	w8, 405c88 <ascii_strlower_n@plt+0x1880>
  405c7c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405c80:	add	x0, x0, #0xdd9
  405c84:	bl	403bf8 <puts@plt>
  405c88:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405c8c:	add	x0, x0, #0xdef
  405c90:	bl	403bf8 <puts@plt>
  405c94:	mov	w22, wzr
  405c98:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405c9c:	bl	406760 <ascii_strlower_n@plt+0x2358>
  405ca0:	mov	w22, wzr
  405ca4:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405ca8:	mov	w0, wzr
  405cac:	bl	4039a8 <log_get_max_level_realm@plt>
  405cb0:	cmp	w0, #0x3
  405cb4:	b.lt	405ed8 <ascii_strlower_n@plt+0x1ad0>  // b.tstop
  405cb8:	mov	w8, #0x16                  	// #22
  405cbc:	movk	w8, #0x4000, lsl #16
  405cc0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405cc4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405cc8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405ccc:	add	w1, w8, #0x3
  405cd0:	add	x2, x2, #0xfaf
  405cd4:	add	x4, x4, #0xe59
  405cd8:	add	x5, x5, #0x319
  405cdc:	mov	w0, #0x3                   	// #3
  405ce0:	mov	w3, #0xbd4                 	// #3028
  405ce4:	bl	4039b8 <log_internal_realm@plt>
  405ce8:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405cec:	mov	w0, wzr
  405cf0:	bl	4039a8 <log_get_max_level_realm@plt>
  405cf4:	cmp	w0, #0x3
  405cf8:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405cfc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405d00:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d04:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d08:	add	x2, x2, #0xfaf
  405d0c:	add	x4, x4, #0xe59
  405d10:	add	x5, x5, #0x281
  405d14:	mov	w0, #0x3                   	// #3
  405d18:	mov	w3, #0xbb3                 	// #2995
  405d1c:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405d20:	mov	w0, wzr
  405d24:	bl	4039a8 <log_get_max_level_realm@plt>
  405d28:	cmp	w0, #0x3
  405d2c:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405d30:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405d34:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d38:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d3c:	add	x2, x2, #0xfaf
  405d40:	add	x4, x4, #0xe59
  405d44:	add	x5, x5, #0x38f
  405d48:	mov	w0, #0x3                   	// #3
  405d4c:	mov	w3, #0xbec                 	// #3052
  405d50:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405d54:	mov	w0, wzr
  405d58:	bl	4039a8 <log_get_max_level_realm@plt>
  405d5c:	cmp	w0, #0x3
  405d60:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405d64:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405d68:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d6c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405d70:	add	x2, x2, #0xfaf
  405d74:	add	x4, x4, #0xe59
  405d78:	add	x5, x5, #0x3bc
  405d7c:	mov	w0, #0x3                   	// #3
  405d80:	mov	w3, #0xbf3                 	// #3059
  405d84:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405d88:	mov	w0, wzr
  405d8c:	bl	4039a8 <log_get_max_level_realm@plt>
  405d90:	cmp	w0, #0x3
  405d94:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405d98:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405d9c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405da0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405da4:	add	x2, x2, #0xfaf
  405da8:	add	x4, x4, #0xe59
  405dac:	add	x5, x5, #0x36c
  405db0:	mov	w0, #0x3                   	// #3
  405db4:	mov	w3, #0xbe5                 	// #3045
  405db8:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405dbc:	mov	w0, wzr
  405dc0:	bl	4039a8 <log_get_max_level_realm@plt>
  405dc4:	cmp	w0, #0x3
  405dc8:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405dcc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405dd0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405dd4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405dd8:	add	x2, x2, #0xfaf
  405ddc:	add	x4, x4, #0xe59
  405de0:	add	x5, x5, #0x3e5
  405de4:	mov	w0, #0x3                   	// #3
  405de8:	mov	w3, #0xbfa                 	// #3066
  405dec:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405df0:	mov	w0, wzr
  405df4:	bl	4039a8 <log_get_max_level_realm@plt>
  405df8:	cmp	w0, #0x3
  405dfc:	b.lt	405a58 <ascii_strlower_n@plt+0x1650>  // b.tstop
  405e00:	ldr	x6, [x21, #168]
  405e04:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405e08:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e0c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e10:	add	x2, x2, #0xfaf
  405e14:	add	x4, x4, #0xe59
  405e18:	add	x5, x5, #0x213
  405e1c:	mov	w0, #0x3                   	// #3
  405e20:	mov	w3, #0xb98                 	// #2968
  405e24:	b	406084 <ascii_strlower_n@plt+0x1c7c>
  405e28:	mov	w0, wzr
  405e2c:	bl	4039a8 <log_get_max_level_realm@plt>
  405e30:	cmp	w0, #0x3
  405e34:	b.lt	405a58 <ascii_strlower_n@plt+0x1650>  // b.tstop
  405e38:	ldr	x6, [x21, #168]
  405e3c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405e40:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e44:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e48:	add	x2, x2, #0xfaf
  405e4c:	add	x4, x4, #0xe59
  405e50:	add	x5, x5, #0x249
  405e54:	mov	w0, #0x3                   	// #3
  405e58:	mov	w3, #0xba8                 	// #2984
  405e5c:	b	406084 <ascii_strlower_n@plt+0x1c7c>
  405e60:	mov	w0, wzr
  405e64:	bl	4039a8 <log_get_max_level_realm@plt>
  405e68:	cmp	w0, #0x3
  405e6c:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405e70:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405e74:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e78:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405e7c:	add	x2, x2, #0xfaf
  405e80:	add	x4, x4, #0x201
  405e84:	add	x5, x5, #0x36c
  405e88:	mov	w0, #0x3                   	// #3
  405e8c:	mov	w3, #0xad7                 	// #2775
  405e90:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405e94:	mov	w0, wzr
  405e98:	bl	4039a8 <log_get_max_level_realm@plt>
  405e9c:	cmp	w0, #0x3
  405ea0:	b.lt	405ed8 <ascii_strlower_n@plt+0x1ad0>  // b.tstop
  405ea4:	mov	w8, #0x16                  	// #22
  405ea8:	movk	w8, #0x4000, lsl #16
  405eac:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405eb0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405eb4:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405eb8:	add	w1, w8, #0x3
  405ebc:	add	x2, x2, #0xfaf
  405ec0:	add	x4, x4, #0x201
  405ec4:	add	x5, x5, #0x319
  405ec8:	mov	w0, #0x3                   	// #3
  405ecc:	mov	w3, #0xac6                 	// #2758
  405ed0:	bl	4039b8 <log_internal_realm@plt>
  405ed4:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405ed8:	mov	w22, #0xffffffe7            	// #-25
  405edc:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405ee0:	mov	w0, wzr
  405ee4:	bl	4039a8 <log_get_max_level_realm@plt>
  405ee8:	cmp	w0, #0x3
  405eec:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405ef0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405ef4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405ef8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405efc:	add	x2, x2, #0xfaf
  405f00:	add	x4, x4, #0x201
  405f04:	add	x5, x5, #0x281
  405f08:	mov	w0, #0x3                   	// #3
  405f0c:	mov	w3, #0xa95                 	// #2709
  405f10:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405f14:	mov	w0, wzr
  405f18:	bl	4039a8 <log_get_max_level_realm@plt>
  405f1c:	cmp	w0, #0x3
  405f20:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405f24:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405f28:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405f2c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405f30:	add	x2, x2, #0xfaf
  405f34:	add	x4, x4, #0x201
  405f38:	add	x5, x5, #0x3bc
  405f3c:	mov	w0, #0x3                   	// #3
  405f40:	mov	w3, #0xae5                 	// #2789
  405f44:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405f48:	mov	w0, wzr
  405f4c:	bl	4039a8 <log_get_max_level_realm@plt>
  405f50:	cmp	w0, #0x3
  405f54:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405f58:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405f5c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405f60:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405f64:	add	x2, x2, #0xfaf
  405f68:	add	x4, x4, #0x201
  405f6c:	add	x5, x5, #0x38f
  405f70:	mov	w0, #0x3                   	// #3
  405f74:	mov	w3, #0xade                 	// #2782
  405f78:	b	405fc4 <ascii_strlower_n@plt+0x1bbc>
  405f7c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405f80:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405f84:	add	x1, x1, #0xfaf
  405f88:	add	x3, x3, #0x201
  405f8c:	mov	w2, #0xb13                 	// #2835
  405f90:	b	40600c <ascii_strlower_n@plt+0x1c04>
  405f94:	mov	w0, wzr
  405f98:	bl	4039a8 <log_get_max_level_realm@plt>
  405f9c:	cmp	w0, #0x3
  405fa0:	b.lt	405fd0 <ascii_strlower_n@plt+0x1bc8>  // b.tstop
  405fa4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  405fa8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405fac:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405fb0:	add	x2, x2, #0xfaf
  405fb4:	add	x4, x4, #0x201
  405fb8:	add	x5, x5, #0x3e5
  405fbc:	mov	w0, #0x3                   	// #3
  405fc0:	mov	w3, #0xaec                 	// #2796
  405fc4:	mov	w1, w22
  405fc8:	bl	4039b8 <log_internal_realm@plt>
  405fcc:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  405fd0:	mov	w8, wzr
  405fd4:	neg	w9, w22
  405fd8:	sub	w22, w8, w9, uxtb
  405fdc:	b	405a58 <ascii_strlower_n@plt+0x1650>
  405fe0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405fe4:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf8>
  405fe8:	add	x1, x1, #0xfaf
  405fec:	add	x3, x3, #0x201
  405ff0:	mov	w2, #0xb2f                 	// #2863
  405ff4:	b	40600c <ascii_strlower_n@plt+0x1c04>
  405ff8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  405ffc:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406000:	add	x1, x1, #0xfaf
  406004:	add	x3, x3, #0x201
  406008:	mov	w2, #0xb0b                 	// #2827
  40600c:	mov	w0, wzr
  406010:	bl	403a28 <log_oom_internal@plt>
  406014:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  406018:	mov	w0, wzr
  40601c:	bl	4039a8 <log_get_max_level_realm@plt>
  406020:	cmp	w0, #0x3
  406024:	b.lt	405a58 <ascii_strlower_n@plt+0x1650>  // b.tstop
  406028:	ldr	x6, [x24, #168]
  40602c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406030:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406034:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406038:	add	x2, x2, #0xfaf
  40603c:	add	x4, x4, #0x201
  406040:	add	x5, x5, #0x213
  406044:	mov	w0, #0x3                   	// #3
  406048:	mov	w3, #0xa79                 	// #2681
  40604c:	b	406084 <ascii_strlower_n@plt+0x1c7c>
  406050:	mov	w0, wzr
  406054:	bl	4039a8 <log_get_max_level_realm@plt>
  406058:	cmp	w0, #0x3
  40605c:	b.lt	405a58 <ascii_strlower_n@plt+0x1650>  // b.tstop
  406060:	ldr	x6, [x24, #168]
  406064:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406068:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40606c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406070:	add	x2, x2, #0xfaf
  406074:	add	x4, x4, #0x201
  406078:	add	x5, x5, #0x249
  40607c:	mov	w0, #0x3                   	// #3
  406080:	mov	w3, #0xa8a                 	// #2698
  406084:	mov	w1, wzr
  406088:	bl	4039b8 <log_internal_realm@plt>
  40608c:	b	405a58 <ascii_strlower_n@plt+0x1650>
  406090:	mov	w0, wzr
  406094:	bl	4039a8 <log_get_max_level_realm@plt>
  406098:	cmp	w0, #0x3
  40609c:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  4060a0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4060a4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4060a8:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4060ac:	mov	w1, #0x16                  	// #22
  4060b0:	add	x2, x2, #0xfaf
  4060b4:	add	x4, x4, #0xe59
  4060b8:	add	x5, x5, #0x34e
  4060bc:	mov	w0, #0x3                   	// #3
  4060c0:	movk	w1, #0x4000, lsl #16
  4060c4:	mov	w3, #0xbdd                 	// #3037
  4060c8:	b	4061b4 <ascii_strlower_n@plt+0x1dac>
  4060cc:	bl	4039a8 <log_get_max_level_realm@plt>
  4060d0:	cmp	w0, #0x3
  4060d4:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  4060d8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4060dc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4060e0:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4060e4:	mov	w1, #0x16                  	// #22
  4060e8:	add	x2, x2, #0xfaf
  4060ec:	add	x4, x4, #0x201
  4060f0:	add	x5, x5, #0x2fc
  4060f4:	mov	w0, #0x3                   	// #3
  4060f8:	movk	w1, #0x4000, lsl #16
  4060fc:	mov	w3, #0xac0                 	// #2752
  406100:	b	4061b4 <ascii_strlower_n@plt+0x1dac>
  406104:	mov	w0, wzr
  406108:	bl	4039a8 <log_get_max_level_realm@plt>
  40610c:	cmp	w0, #0x3
  406110:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  406114:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406118:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40611c:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406120:	mov	w1, #0x16                  	// #22
  406124:	add	x2, x2, #0xfaf
  406128:	add	x4, x4, #0x201
  40612c:	add	x5, x5, #0x34e
  406130:	mov	w0, #0x3                   	// #3
  406134:	movk	w1, #0x4000, lsl #16
  406138:	mov	w3, #0xacf                 	// #2767
  40613c:	b	4061b4 <ascii_strlower_n@plt+0x1dac>
  406140:	mov	w0, wzr
  406144:	bl	4039a8 <log_get_max_level_realm@plt>
  406148:	cmp	w0, #0x3
  40614c:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  406150:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406154:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406158:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40615c:	mov	w1, #0x16                  	// #22
  406160:	add	x2, x2, #0xfaf
  406164:	add	x4, x4, #0xe59
  406168:	add	x5, x5, #0x2dd
  40616c:	mov	w0, #0x3                   	// #3
  406170:	movk	w1, #0x4000, lsl #16
  406174:	mov	w3, #0xbcd                 	// #3021
  406178:	b	4061b4 <ascii_strlower_n@plt+0x1dac>
  40617c:	mov	w0, wzr
  406180:	bl	4039a8 <log_get_max_level_realm@plt>
  406184:	cmp	w0, #0x3
  406188:	b.lt	4061c0 <ascii_strlower_n@plt+0x1db8>  // b.tstop
  40618c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406190:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406194:	adrp	x5, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406198:	mov	w1, #0x16                  	// #22
  40619c:	add	x2, x2, #0xfaf
  4061a0:	add	x4, x4, #0x201
  4061a4:	add	x5, x5, #0x2dd
  4061a8:	mov	w0, #0x3                   	// #3
  4061ac:	movk	w1, #0x4000, lsl #16
  4061b0:	mov	w3, #0xaae                 	// #2734
  4061b4:	mov	x6, x22
  4061b8:	bl	4039b8 <log_internal_realm@plt>
  4061bc:	b	4059a8 <ascii_strlower_n@plt+0x15a0>
  4061c0:	mov	w22, #0xffffffea            	// #-22
  4061c4:	b	405a58 <ascii_strlower_n@plt+0x1650>
  4061c8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4061cc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4061d0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4061d4:	add	x1, x1, #0xa9d
  4061d8:	add	x2, x2, #0xfaf
  4061dc:	add	x4, x4, #0x1d1
  4061e0:	mov	w3, #0xb3c                 	// #2876
  4061e4:	mov	w0, wzr
  4061e8:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  4061ec:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4061f0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4061f4:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4061f8:	add	x1, x1, #0xa9d
  4061fc:	add	x2, x2, #0xfaf
  406200:	add	x4, x4, #0xe35
  406204:	mov	w3, #0xc06                 	// #3078
  406208:	mov	w0, wzr
  40620c:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  406210:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  406214:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406218:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40621c:	add	x1, x1, #0x958
  406220:	add	x2, x2, #0xfaf
  406224:	add	x4, x4, #0xe35
  406228:	mov	w3, #0xb76                 	// #2934
  40622c:	mov	w0, wzr
  406230:	bl	403a98 <log_assert_failed_realm@plt>
  406234:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  406238:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40623c:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406240:	add	x1, x1, #0x9ad
  406244:	add	x2, x2, #0xfaf
  406248:	add	x4, x4, #0xe35
  40624c:	mov	w3, #0xb77                 	// #2935
  406250:	mov	w0, wzr
  406254:	bl	403a98 <log_assert_failed_realm@plt>
  406258:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40625c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406260:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406264:	add	x1, x1, #0x235
  406268:	add	x2, x2, #0xfaf
  40626c:	add	x4, x4, #0x1d1
  406270:	mov	w3, #0xa7d                 	// #2685
  406274:	mov	w0, wzr
  406278:	bl	403a98 <log_assert_failed_realm@plt>
  40627c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406280:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406284:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406288:	add	x1, x1, #0x235
  40628c:	add	x2, x2, #0xfaf
  406290:	add	x4, x4, #0xe35
  406294:	mov	w3, #0xb9c                 	// #2972
  406298:	mov	w0, wzr
  40629c:	bl	403a98 <log_assert_failed_realm@plt>
  4062a0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4062a4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4062a8:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4062ac:	add	x1, x1, #0x26c
  4062b0:	add	x2, x2, #0xfaf
  4062b4:	add	x4, x4, #0x1d1
  4062b8:	mov	w3, #0xa8e                 	// #2702
  4062bc:	mov	w0, wzr
  4062c0:	bl	403a98 <log_assert_failed_realm@plt>
  4062c4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4062c8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4062cc:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4062d0:	add	x1, x1, #0x958
  4062d4:	add	x2, x2, #0xfaf
  4062d8:	add	x4, x4, #0x1d1
  4062dc:	mov	w3, #0xa57                 	// #2647
  4062e0:	mov	w0, wzr
  4062e4:	bl	403a98 <log_assert_failed_realm@plt>
  4062e8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4062ec:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4062f0:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4062f4:	add	x1, x1, #0x9ad
  4062f8:	add	x2, x2, #0xfaf
  4062fc:	add	x4, x4, #0x1d1
  406300:	mov	w3, #0xa58                 	// #2648
  406304:	mov	w0, wzr
  406308:	bl	403a98 <log_assert_failed_realm@plt>
  40630c:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406310:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406314:	adrp	x4, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406318:	add	x1, x1, #0x26c
  40631c:	add	x2, x2, #0xfaf
  406320:	add	x4, x4, #0xe35
  406324:	mov	w3, #0xbac                 	// #2988
  406328:	mov	w0, wzr
  40632c:	bl	403a98 <log_assert_failed_realm@plt>
  406330:	stp	x29, x30, [sp, #-48]!
  406334:	stp	x22, x21, [sp, #16]
  406338:	stp	x20, x19, [sp, #32]
  40633c:	mov	x29, sp
  406340:	sub	sp, sp, #0x10
  406344:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406348:	ldr	w8, [x8, #20]
  40634c:	add	w8, w8, #0x1
  406350:	cmp	w8, #0xc
  406354:	b.hi	4063fc <ascii_strlower_n@plt+0x1ff4>  // b.pmore
  406358:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40635c:	add	x9, x9, #0xd72
  406360:	adr	x10, 406374 <ascii_strlower_n@plt+0x1f6c>
  406364:	ldrb	w11, [x9, x8]
  406368:	add	x10, x10, x11, lsl #2
  40636c:	mov	x19, x2
  406370:	br	x10
  406374:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406378:	ldrsw	x8, [x8, #128]
  40637c:	sxtw	x9, w0
  406380:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406384:	add	x0, x0, #0x7b4
  406388:	b	406448 <ascii_strlower_n@plt+0x2040>
  40638c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406390:	ldr	x8, [x8, #40]
  406394:	cbz	x8, 406678 <ascii_strlower_n@plt+0x2270>
  406398:	mov	x9, sp
  40639c:	mov	x20, sp
  4063a0:	sub	x1, x9, #0x20
  4063a4:	mov	sp, x1
  4063a8:	adrp	x10, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4063ac:	add	x10, x10, #0x1ca
  4063b0:	adrp	x11, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4063b4:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4063b8:	stp	x8, xzr, [x9, #-24]
  4063bc:	stur	x10, [x9, #-32]
  4063c0:	str	wzr, [x11, #128]
  4063c4:	add	x2, x2, #0x360
  4063c8:	mov	w0, #0x2                   	// #2
  4063cc:	b	4064c4 <ascii_strlower_n@plt+0x20bc>
  4063d0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4063d4:	ldrsw	x9, [x8, #128]
  4063d8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4063dc:	ldr	x8, [x8, #80]
  4063e0:	sxtw	x10, w0
  4063e4:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4063e8:	sub	x2, x10, x9
  4063ec:	add	x3, x1, x9, lsl #3
  4063f0:	add	x0, x0, #0x12a
  4063f4:	mov	x1, x8
  4063f8:	b	406454 <ascii_strlower_n@plt+0x204c>
  4063fc:	mov	w0, wzr
  406400:	b	4064d0 <ascii_strlower_n@plt+0x20c8>
  406404:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406408:	ldrsw	x8, [x8, #128]
  40640c:	sxtw	x9, w0
  406410:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406414:	add	x0, x0, #0x14f
  406418:	b	406448 <ascii_strlower_n@plt+0x2040>
  40641c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406420:	ldrsw	x8, [x8, #128]
  406424:	sxtw	x9, w0
  406428:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40642c:	add	x0, x0, #0xfe
  406430:	b	406448 <ascii_strlower_n@plt+0x2040>
  406434:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406438:	ldrsw	x8, [x8, #128]
  40643c:	sxtw	x9, w0
  406440:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406444:	add	x0, x0, #0x122
  406448:	sub	x2, x9, x8
  40644c:	add	x3, x1, x8, lsl #3
  406450:	mov	x1, xzr
  406454:	mov	x4, x19
  406458:	mov	sp, x29
  40645c:	ldp	x20, x19, [sp, #32]
  406460:	ldp	x22, x21, [sp, #16]
  406464:	ldp	x29, x30, [sp], #48
  406468:	b	4068f0 <ascii_strlower_n@plt+0x24e8>
  40646c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406470:	mov	x20, sp
  406474:	add	x8, x8, #0x156
  406478:	b	4064a8 <ascii_strlower_n@plt+0x20a0>
  40647c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406480:	mov	x20, sp
  406484:	add	x8, x8, #0x133
  406488:	b	4064a8 <ascii_strlower_n@plt+0x20a0>
  40648c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406490:	mov	x20, sp
  406494:	add	x8, x8, #0x13e
  406498:	b	4064a8 <ascii_strlower_n@plt+0x20a0>
  40649c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4064a0:	mov	x20, sp
  4064a4:	add	x8, x8, #0x163
  4064a8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4064ac:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4064b0:	add	x2, x2, #0x360
  4064b4:	sub	x1, x29, #0x10
  4064b8:	mov	w0, #0x1                   	// #1
  4064bc:	stp	x8, xzr, [x29, #-16]
  4064c0:	str	wzr, [x9, #128]
  4064c4:	mov	x3, x19
  4064c8:	bl	403b88 <dispatch_verb@plt>
  4064cc:	mov	sp, x20
  4064d0:	mov	sp, x29
  4064d4:	ldp	x20, x19, [sp, #32]
  4064d8:	ldp	x22, x21, [sp, #16]
  4064dc:	ldp	x29, x30, [sp], #48
  4064e0:	ret
  4064e4:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4064e8:	ldr	x20, [x22, #40]
  4064ec:	cbz	x20, 40669c <ascii_strlower_n@plt+0x2294>
  4064f0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4064f4:	ldr	x21, [x8, #24]
  4064f8:	cbz	x21, 406528 <ascii_strlower_n@plt+0x2120>
  4064fc:	mov	x0, x21
  406500:	bl	403c08 <strv_length@plt>
  406504:	mov	x2, x0
  406508:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40650c:	add	x0, x0, #0x2a4
  406510:	mov	x1, x20
  406514:	mov	x3, x21
  406518:	mov	x4, x19
  40651c:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  406520:	tbz	w0, #31, 40652c <ascii_strlower_n@plt+0x2124>
  406524:	b	4064d0 <ascii_strlower_n@plt+0x20c8>
  406528:	mov	w0, wzr
  40652c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406530:	ldr	x20, [x8, #32]
  406534:	cbz	x20, 406564 <ascii_strlower_n@plt+0x215c>
  406538:	ldr	x21, [x22, #40]
  40653c:	mov	x0, x20
  406540:	bl	403c08 <strv_length@plt>
  406544:	mov	x2, x0
  406548:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  40654c:	add	x0, x0, #0xb2a
  406550:	mov	x1, x21
  406554:	mov	x3, x20
  406558:	mov	x4, x19
  40655c:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  406560:	tbnz	w0, #31, 4064d0 <ascii_strlower_n@plt+0x20c8>
  406564:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406568:	ldr	x20, [x8, #48]
  40656c:	cbz	x20, 40659c <ascii_strlower_n@plt+0x2194>
  406570:	ldr	x21, [x22, #40]
  406574:	mov	x0, x20
  406578:	bl	403c08 <strv_length@plt>
  40657c:	mov	x2, x0
  406580:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406584:	add	x0, x0, #0x7ed
  406588:	mov	x1, x21
  40658c:	mov	x3, x20
  406590:	mov	x4, x19
  406594:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  406598:	tbnz	w0, #31, 4064d0 <ascii_strlower_n@plt+0x20c8>
  40659c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065a0:	ldr	x8, [x8, #96]
  4065a4:	cbz	x8, 4065cc <ascii_strlower_n@plt+0x21c4>
  4065a8:	ldr	x1, [x22, #40]
  4065ac:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4065b0:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065b4:	add	x0, x0, #0x2a8
  4065b8:	add	x3, x3, #0x60
  4065bc:	mov	w2, #0x1                   	// #1
  4065c0:	mov	x4, x19
  4065c4:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  4065c8:	tbnz	w0, #31, 4064d0 <ascii_strlower_n@plt+0x20c8>
  4065cc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065d0:	ldr	x8, [x8, #104]
  4065d4:	cbz	x8, 4065fc <ascii_strlower_n@plt+0x21f4>
  4065d8:	ldr	x1, [x22, #40]
  4065dc:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4065e0:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065e4:	add	x0, x0, #0x2c4
  4065e8:	add	x3, x3, #0x68
  4065ec:	mov	w2, #0x1                   	// #1
  4065f0:	mov	x4, x19
  4065f4:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  4065f8:	tbnz	w0, #31, 4064d0 <ascii_strlower_n@plt+0x20c8>
  4065fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406600:	ldr	x8, [x8, #112]
  406604:	cbz	x8, 40662c <ascii_strlower_n@plt+0x2224>
  406608:	ldr	x1, [x22, #40]
  40660c:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406610:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406614:	add	x0, x0, #0x7f1
  406618:	add	x3, x3, #0x70
  40661c:	mov	w2, #0x1                   	// #1
  406620:	mov	x4, x19
  406624:	bl	4068f0 <ascii_strlower_n@plt+0x24e8>
  406628:	tbnz	w0, #31, 4064d0 <ascii_strlower_n@plt+0x20c8>
  40662c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406630:	ldr	x8, [x8, #120]
  406634:	cbz	x8, 4064d0 <ascii_strlower_n@plt+0x20c8>
  406638:	ldr	x1, [x22, #40]
  40663c:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406640:	adrp	x3, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406644:	add	x0, x0, #0x7fc
  406648:	add	x3, x3, #0x78
  40664c:	mov	w2, #0x1                   	// #1
  406650:	b	406454 <ascii_strlower_n@plt+0x204c>
  406654:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406658:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40665c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406660:	add	x1, x1, #0x803
  406664:	add	x2, x2, #0xfaf
  406668:	add	x4, x4, #0x7c5
  40666c:	mov	w3, #0xc9b                 	// #3227
  406670:	mov	w0, wzr
  406674:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  406678:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40667c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406680:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406684:	add	x1, x1, #0x7ba
  406688:	add	x2, x2, #0xfaf
  40668c:	add	x4, x4, #0x7c5
  406690:	mov	w3, #0xc96                 	// #3222
  406694:	mov	w0, wzr
  406698:	bl	403a98 <log_assert_failed_realm@plt>
  40669c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4066a0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4066a4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4066a8:	add	x1, x1, #0x7ba
  4066ac:	add	x2, x2, #0xfaf
  4066b0:	add	x4, x4, #0x7c5
  4066b4:	mov	w3, #0xc67                 	// #3175
  4066b8:	mov	w0, wzr
  4066bc:	bl	403a98 <log_assert_failed_realm@plt>
  4066c0:	stp	x29, x30, [sp, #-48]!
  4066c4:	stp	x22, x21, [sp, #16]
  4066c8:	stp	x20, x19, [sp, #32]
  4066cc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4066d0:	ldrb	w8, [x8]
  4066d4:	mov	x29, sp
  4066d8:	cbz	w8, 4066e8 <ascii_strlower_n@plt+0x22e0>
  4066dc:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4066e0:	add	x0, x0, #0xdaf
  4066e4:	bl	403bf8 <puts@plt>
  4066e8:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4066ec:	ldr	x0, [x20, #176]
  4066f0:	bl	403c18 <flockfile@plt>
  4066f4:	mov	w19, wzr
  4066f8:	mov	w21, #0x8002                	// #32770
  4066fc:	mov	w22, #0xa                   	// #10
  406700:	b	406718 <ascii_strlower_n@plt+0x2310>
  406704:	mov	w1, #0xa                   	// #10
  406708:	bl	403c28 <__overflow@plt>
  40670c:	add	w19, w19, #0x1
  406710:	cmp	w19, w21
  406714:	b.eq	40674c <ascii_strlower_n@plt+0x2344>  // b.none
  406718:	mov	w0, w19
  40671c:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  406720:	cbz	x0, 40670c <ascii_strlower_n@plt+0x2304>
  406724:	ldr	x1, [x20, #176]
  406728:	bl	403c38 <fputs_unlocked@plt>
  40672c:	ldr	x0, [x20, #176]
  406730:	ldp	x8, x9, [x0, #40]
  406734:	cmp	x8, x9
  406738:	b.cs	406704 <ascii_strlower_n@plt+0x22fc>  // b.hs, b.nlast
  40673c:	add	x9, x8, #0x1
  406740:	str	x9, [x0, #40]
  406744:	strb	w22, [x8]
  406748:	b	40670c <ascii_strlower_n@plt+0x2304>
  40674c:	ldr	x0, [x20, #176]
  406750:	ldp	x20, x19, [sp, #32]
  406754:	ldp	x22, x21, [sp, #16]
  406758:	ldp	x29, x30, [sp], #48
  40675c:	b	403c48 <funlockfile@plt>
  406760:	stp	x29, x30, [sp, #-48]!
  406764:	stp	x20, x19, [sp, #32]
  406768:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40676c:	ldrb	w8, [x8]
  406770:	str	x21, [sp, #16]
  406774:	mov	x29, sp
  406778:	cbz	w8, 406788 <ascii_strlower_n@plt+0x2380>
  40677c:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406780:	add	x0, x0, #0xdc3
  406784:	bl	403bf8 <puts@plt>
  406788:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40678c:	ldr	x0, [x20, #176]
  406790:	bl	403c18 <flockfile@plt>
  406794:	mov	w19, wzr
  406798:	mov	w21, #0xa                   	// #10
  40679c:	b	4067b4 <ascii_strlower_n@plt+0x23ac>
  4067a0:	mov	w1, #0xa                   	// #10
  4067a4:	bl	403c28 <__overflow@plt>
  4067a8:	add	w19, w19, #0x1
  4067ac:	cmp	w19, #0x100
  4067b0:	b.eq	4067e8 <ascii_strlower_n@plt+0x23e0>  // b.none
  4067b4:	mov	w0, w19
  4067b8:	bl	4191e0 <ascii_strlower_n@plt+0x14dd8>
  4067bc:	cbz	x0, 4067a8 <ascii_strlower_n@plt+0x23a0>
  4067c0:	ldr	x1, [x20, #176]
  4067c4:	bl	403c38 <fputs_unlocked@plt>
  4067c8:	ldr	x0, [x20, #176]
  4067cc:	ldp	x8, x9, [x0, #40]
  4067d0:	cmp	x8, x9
  4067d4:	b.cs	4067a0 <ascii_strlower_n@plt+0x2398>  // b.hs, b.nlast
  4067d8:	add	x9, x8, #0x1
  4067dc:	str	x9, [x0, #40]
  4067e0:	strb	w21, [x8]
  4067e4:	b	4067a8 <ascii_strlower_n@plt+0x23a0>
  4067e8:	ldr	x0, [x20, #176]
  4067ec:	ldp	x20, x19, [sp, #32]
  4067f0:	ldr	x21, [sp, #16]
  4067f4:	ldp	x29, x30, [sp], #48
  4067f8:	b	403c48 <funlockfile@plt>
  4067fc:	sub	sp, sp, #0x50
  406800:	adrp	x0, 419000 <ascii_strlower_n@plt+0x14bf8>
  406804:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  406808:	add	x0, x0, #0xbbe
  40680c:	add	x1, x1, #0xbc9
  406810:	add	x2, sp, #0x8
  406814:	stp	x29, x30, [sp, #16]
  406818:	stp	x24, x23, [sp, #32]
  40681c:	stp	x22, x21, [sp, #48]
  406820:	stp	x20, x19, [sp, #64]
  406824:	add	x29, sp, #0x10
  406828:	str	xzr, [sp, #8]
  40682c:	bl	403a48 <terminal_urlify_man@plt>
  406830:	tbnz	w0, #31, 4068ac <ascii_strlower_n@plt+0x24a4>
  406834:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406838:	ldr	x19, [x8, #144]
  40683c:	bl	403be8 <colors_enabled@plt>
  406840:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406844:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406848:	add	x23, x23, #0x9c
  40684c:	add	x22, x22, #0xda0
  406850:	tst	w0, #0x1
  406854:	csel	x20, x22, x23, ne  // ne = any
  406858:	bl	403be8 <colors_enabled@plt>
  40685c:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406860:	add	x24, x24, #0xdaa
  406864:	tst	w0, #0x1
  406868:	csel	x21, x24, x23, ne  // ne = any
  40686c:	bl	403be8 <colors_enabled@plt>
  406870:	tst	w0, #0x1
  406874:	csel	x22, x22, x23, ne  // ne = any
  406878:	bl	403be8 <colors_enabled@plt>
  40687c:	ldr	x6, [sp, #8]
  406880:	tst	w0, #0x1
  406884:	adrp	x0, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406888:	csel	x5, x24, x23, ne  // ne = any
  40688c:	add	x0, x0, #0xe77
  406890:	mov	x1, x19
  406894:	mov	x2, x20
  406898:	mov	x3, x21
  40689c:	mov	x4, x22
  4068a0:	bl	403a58 <printf@plt>
  4068a4:	mov	w19, wzr
  4068a8:	b	4068cc <ascii_strlower_n@plt+0x24c4>
  4068ac:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4068b0:	adrp	x3, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4068b4:	add	x1, x1, #0xfaf
  4068b8:	add	x3, x3, #0xe6b
  4068bc:	mov	w2, #0x9de                 	// #2526
  4068c0:	mov	w0, wzr
  4068c4:	bl	403a28 <log_oom_internal@plt>
  4068c8:	mov	w19, w0
  4068cc:	ldr	x0, [sp, #8]
  4068d0:	bl	4039d8 <free@plt>
  4068d4:	mov	w0, w19
  4068d8:	ldp	x20, x19, [sp, #64]
  4068dc:	ldp	x22, x21, [sp, #48]
  4068e0:	ldp	x24, x23, [sp, #32]
  4068e4:	ldp	x29, x30, [sp, #16]
  4068e8:	add	sp, sp, #0x50
  4068ec:	ret
  4068f0:	stp	x29, x30, [sp, #-80]!
  4068f4:	str	x25, [sp, #16]
  4068f8:	stp	x24, x23, [sp, #32]
  4068fc:	stp	x22, x21, [sp, #48]
  406900:	stp	x20, x19, [sp, #64]
  406904:	mov	x29, sp
  406908:	cbz	x0, 4069c8 <ascii_strlower_n@plt+0x25c0>
  40690c:	mov	x19, x4
  406910:	mov	x20, x3
  406914:	mov	x21, x2
  406918:	mov	x23, x1
  40691c:	mov	x24, x0
  406920:	cbz	x2, 406928 <ascii_strlower_n@plt+0x2520>
  406924:	cbz	x20, 4069e8 <ascii_strlower_n@plt+0x25e0>
  406928:	cmp	x23, #0x0
  40692c:	cinc	x25, x21, ne  // ne = any
  406930:	add	x8, x25, #0x2
  406934:	lsr	x9, x8, #61
  406938:	cbnz	x9, 406a0c <ascii_strlower_n@plt+0x2604>
  40693c:	cmp	x8, #0x80, lsl #12
  406940:	b.hi	406a18 <ascii_strlower_n@plt+0x2610>  // b.pmore
  406944:	lsl	x2, x8, #3
  406948:	add	x9, x2, #0xf
  40694c:	mov	x8, sp
  406950:	and	x9, x9, #0xfffffffffffffff0
  406954:	sub	x22, x8, x9
  406958:	mov	sp, x22
  40695c:	mov	x0, x22
  406960:	mov	w1, wzr
  406964:	bl	403c58 <memset@plt>
  406968:	mov	x0, x22
  40696c:	str	x24, [x0], #8
  406970:	cbz	x23, 40697c <ascii_strlower_n@plt+0x2574>
  406974:	add	x0, x22, #0x10
  406978:	str	x23, [x22, #8]
  40697c:	cbz	x21, 40698c <ascii_strlower_n@plt+0x2584>
  406980:	lsl	x2, x21, #3
  406984:	mov	x1, x20
  406988:	bl	403c68 <memcpy@plt>
  40698c:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406990:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406994:	add	w0, w25, #0x1
  406998:	add	x2, x2, #0x360
  40699c:	mov	x1, x22
  4069a0:	mov	x3, x19
  4069a4:	str	wzr, [x8, #128]
  4069a8:	bl	403b88 <dispatch_verb@plt>
  4069ac:	mov	sp, x29
  4069b0:	ldp	x20, x19, [sp, #64]
  4069b4:	ldp	x22, x21, [sp, #48]
  4069b8:	ldp	x24, x23, [sp, #32]
  4069bc:	ldr	x25, [sp, #16]
  4069c0:	ldp	x29, x30, [sp], #80
  4069c4:	ret
  4069c8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4069cc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4069d0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4069d4:	add	x1, x1, #0x810
  4069d8:	add	x2, x2, #0xfaf
  4069dc:	add	x4, x4, #0x815
  4069e0:	mov	w3, #0xc36                 	// #3126
  4069e4:	bl	403a98 <log_assert_failed_realm@plt>
  4069e8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4069ec:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4069f0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4069f4:	add	x1, x1, #0x85a
  4069f8:	add	x2, x2, #0xfaf
  4069fc:	add	x4, x4, #0x815
  406a00:	mov	w3, #0xc37                 	// #3127
  406a04:	mov	w0, wzr
  406a08:	bl	403a98 <log_assert_failed_realm@plt>
  406a0c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406a10:	add	x1, x1, #0x870
  406a14:	b	406a20 <ascii_strlower_n@plt+0x2618>
  406a18:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406a1c:	add	x1, x1, #0x89d
  406a20:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  406a24:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406a28:	add	x2, x2, #0xfaf
  406a2c:	add	x4, x4, #0x815
  406a30:	mov	w3, #0xc3b                 	// #3131
  406a34:	mov	w0, wzr
  406a38:	bl	403a98 <log_assert_failed_realm@plt>
  406a3c:	b	4067fc <ascii_strlower_n@plt+0x23f4>
  406a40:	stp	x29, x30, [sp, #-80]!
  406a44:	stp	x20, x19, [sp, #64]
  406a48:	mov	x19, x2
  406a4c:	cmp	w0, #0x2
  406a50:	str	x25, [sp, #16]
  406a54:	stp	x24, x23, [sp, #32]
  406a58:	stp	x22, x21, [sp, #48]
  406a5c:	mov	x29, sp
  406a60:	b.lt	406b00 <ascii_strlower_n@plt+0x26f8>  // b.tstop
  406a64:	strb	wzr, [x29, #28]
  406a68:	ldr	x0, [x1, #8]
  406a6c:	cbz	x0, 406b20 <ascii_strlower_n@plt+0x2718>
  406a70:	adrp	x21, 419000 <ascii_strlower_n@plt+0x14bf8>
  406a74:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406a78:	adrp	x23, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406a7c:	mov	w20, wzr
  406a80:	add	x25, x1, #0x10
  406a84:	add	x21, x21, #0xfaf
  406a88:	add	x22, x22, #0x8cc
  406a8c:	add	x23, x23, #0x8d8
  406a90:	b	406abc <ascii_strlower_n@plt+0x26b4>
  406a94:	ldr	w1, [x29, #24]
  406a98:	add	x4, x29, #0x1c
  406a9c:	mov	x0, x19
  406aa0:	mov	x2, xzr
  406aa4:	mov	w3, wzr
  406aa8:	bl	409674 <ascii_strlower_n@plt+0x526c>
  406aac:	cmp	w0, #0x0
  406ab0:	csel	w20, w0, w20, lt  // lt = tstop
  406ab4:	ldr	x0, [x25], #8
  406ab8:	cbz	x0, 406b24 <ascii_strlower_n@plt+0x271c>
  406abc:	add	x1, x29, #0x18
  406ac0:	bl	403ad8 <parse_ifindex_or_ifname@plt>
  406ac4:	tbz	w0, #31, 406a94 <ascii_strlower_n@plt+0x268c>
  406ac8:	mov	w24, w0
  406acc:	mov	w0, wzr
  406ad0:	bl	4039a8 <log_get_max_level_realm@plt>
  406ad4:	cmp	w0, #0x3
  406ad8:	b.lt	406ab4 <ascii_strlower_n@plt+0x26ac>  // b.tstop
  406adc:	ldur	x6, [x25, #-8]
  406ae0:	mov	w0, #0x3                   	// #3
  406ae4:	mov	w3, #0x729                 	// #1833
  406ae8:	mov	w1, w24
  406aec:	mov	x2, x21
  406af0:	mov	x4, x22
  406af4:	mov	x5, x23
  406af8:	bl	4039b8 <log_internal_realm@plt>
  406afc:	b	406ab4 <ascii_strlower_n@plt+0x26ac>
  406b00:	mov	x0, x19
  406b04:	ldp	x20, x19, [sp, #64]
  406b08:	ldp	x22, x21, [sp, #48]
  406b0c:	ldp	x24, x23, [sp, #32]
  406b10:	ldr	x25, [sp, #16]
  406b14:	mov	w1, wzr
  406b18:	ldp	x29, x30, [sp], #80
  406b1c:	b	409dec <ascii_strlower_n@plt+0x59e4>
  406b20:	mov	w20, wzr
  406b24:	mov	w0, w20
  406b28:	ldp	x20, x19, [sp, #64]
  406b2c:	ldp	x22, x21, [sp, #48]
  406b30:	ldp	x24, x23, [sp, #32]
  406b34:	ldr	x25, [sp, #16]
  406b38:	ldp	x29, x30, [sp], #80
  406b3c:	ret
  406b40:	sub	sp, sp, #0x100
  406b44:	stp	x29, x30, [sp, #160]
  406b48:	stp	x28, x27, [sp, #176]
  406b4c:	stp	x26, x25, [sp, #192]
  406b50:	stp	x24, x23, [sp, #208]
  406b54:	stp	x22, x21, [sp, #224]
  406b58:	stp	x20, x19, [sp, #240]
  406b5c:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406b60:	mov	x22, x1
  406b64:	ldrh	w3, [x24, #64]
  406b68:	ldr	x23, [x22, #8]!
  406b6c:	mov	x19, x2
  406b70:	add	x29, sp, #0xa0
  406b74:	cbz	w3, 406bc8 <ascii_strlower_n@plt+0x27c0>
  406b78:	cbz	x23, 4078f8 <ascii_strlower_n@plt+0x34f0>
  406b7c:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406b80:	ldrh	w2, [x22, #68]
  406b84:	mov	x21, x1
  406b88:	mov	x0, x19
  406b8c:	mov	x1, x23
  406b90:	bl	40ae70 <ascii_strlower_n@plt+0x6a68>
  406b94:	ldr	x1, [x21, #16]
  406b98:	and	w20, w0, w0, asr #31
  406b9c:	cbz	x1, 4078fc <ascii_strlower_n@plt+0x34f4>
  406ba0:	add	x21, x21, #0x18
  406ba4:	ldrh	w2, [x22, #68]
  406ba8:	ldrh	w3, [x24, #64]
  406bac:	mov	x0, x19
  406bb0:	bl	40ae70 <ascii_strlower_n@plt+0x6a68>
  406bb4:	ldr	x1, [x21], #8
  406bb8:	cmp	w0, #0x0
  406bbc:	csel	w20, w0, w20, lt  // lt = tstop
  406bc0:	cbnz	x1, 406ba4 <ascii_strlower_n@plt+0x279c>
  406bc4:	b	4078fc <ascii_strlower_n@plt+0x34f4>
  406bc8:	mov	w20, wzr
  406bcc:	cbz	x23, 4078fc <ascii_strlower_n@plt+0x34f4>
  406bd0:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406bd4:	adrp	x28, 419000 <ascii_strlower_n@plt+0x14bf8>
  406bd8:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406bdc:	adrp	x27, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406be0:	add	x24, x24, #0x132
  406be4:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406be8:	add	x28, x28, #0xfaf
  406bec:	add	x26, x26, #0x688
  406bf0:	add	x27, x27, #0xa4e
  406bf4:	b	406c18 <ascii_strlower_n@plt+0x2810>
  406bf8:	mov	x0, x19
  406bfc:	mov	x1, x23
  406c00:	bl	40b6b8 <ascii_strlower_n@plt+0x72b0>
  406c04:	mov	w25, w0
  406c08:	ldr	x23, [x22, #8]!
  406c0c:	cmp	w25, #0x0
  406c10:	csel	w20, w25, w20, lt  // lt = tstop
  406c14:	cbz	x23, 4078fc <ascii_strlower_n@plt+0x34f4>
  406c18:	mov	w2, #0x4                   	// #4
  406c1c:	mov	x0, x23
  406c20:	mov	x1, x24
  406c24:	bl	403c78 <strncmp@plt>
  406c28:	cbz	w0, 406bf8 <ascii_strlower_n@plt+0x27f0>
  406c2c:	add	x1, sp, #0x4c
  406c30:	add	x2, sp, #0x38
  406c34:	add	x3, sp, #0x48
  406c38:	mov	x0, x23
  406c3c:	bl	403c88 <in_addr_ifindex_from_string_auto@plt>
  406c40:	tbnz	w0, #31, 406ee4 <ascii_strlower_n@plt+0x2adc>
  406c44:	ldp	w2, w23, [sp, #72]
  406c48:	stp	xzr, xzr, [x29, #-16]
  406c4c:	stp	xzr, xzr, [x29, #-40]
  406c50:	stur	xzr, [x29, #-24]
  406c54:	stur	w2, [x29, #-72]
  406c58:	stur	xzr, [x29, #-48]
  406c5c:	cbz	x19, 407944 <ascii_strlower_n@plt+0x353c>
  406c60:	orr	w8, w23, #0x8
  406c64:	cmp	w8, #0xa
  406c68:	b.ne	407920 <ascii_strlower_n@plt+0x3518>  // b.any
  406c6c:	cmp	w2, #0x1
  406c70:	b.ge	406c7c <ascii_strlower_n@plt+0x2874>  // b.tcont
  406c74:	ldr	w2, [x21, #56]
  406c78:	stur	w2, [x29, #-72]
  406c7c:	add	x1, sp, #0x38
  406c80:	sub	x3, x29, #0x30
  406c84:	mov	w0, w23
  406c88:	bl	403c98 <in_addr_ifindex_to_string@plt>
  406c8c:	tbnz	w0, #31, 407364 <ascii_strlower_n@plt+0x2f5c>
  406c90:	mov	w0, wzr
  406c94:	bl	4039a8 <log_get_max_level_realm@plt>
  406c98:	cmp	w0, #0x7
  406c9c:	b.lt	406cc4 <ascii_strlower_n@plt+0x28bc>  // b.tstop
  406ca0:	ldur	x6, [x29, #-48]
  406ca4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406ca8:	mov	w0, #0x7                   	// #7
  406cac:	mov	w3, #0x11d                 	// #285
  406cb0:	mov	w1, wzr
  406cb4:	mov	x2, x28
  406cb8:	mov	x4, x26
  406cbc:	add	x5, x5, #0x698
  406cc0:	bl	4039b8 <log_internal_realm@plt>
  406cc4:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406cc8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406ccc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406cd0:	sub	x1, x29, #0x8
  406cd4:	mov	x0, x19
  406cd8:	mov	x2, x27
  406cdc:	add	x3, x3, #0xef9
  406ce0:	add	x4, x4, #0x1b6
  406ce4:	add	x5, x5, #0x6a6
  406ce8:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  406cec:	tbnz	w0, #31, 407380 <ascii_strlower_n@plt+0x2f78>
  406cf0:	ldur	x0, [x29, #-8]
  406cf4:	ldur	w2, [x29, #-72]
  406cf8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406cfc:	add	x1, x1, #0x6b5
  406d00:	mov	w3, w23
  406d04:	bl	403cb8 <sd_bus_message_append@plt>
  406d08:	tbnz	w0, #31, 4073c0 <ascii_strlower_n@plt+0x2fb8>
  406d0c:	orr	w8, w23, #0x8
  406d10:	cmp	w8, #0xa
  406d14:	b.ne	40798c <ascii_strlower_n@plt+0x3584>  // b.any
  406d18:	ldur	x0, [x29, #-8]
  406d1c:	cmp	w23, #0xa
  406d20:	mov	w8, #0x4                   	// #4
  406d24:	mov	w9, #0x10                  	// #16
  406d28:	csel	x3, x9, x8, eq  // eq = none
  406d2c:	add	x2, sp, #0x38
  406d30:	mov	w1, #0x79                  	// #121
  406d34:	bl	403cc8 <sd_bus_message_append_array@plt>
  406d38:	tbnz	w0, #31, 40743c <ascii_strlower_n@plt+0x3034>
  406d3c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406d40:	ldur	x0, [x29, #-8]
  406d44:	ldr	x2, [x8, #72]
  406d48:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406d4c:	add	x1, x1, #0x908
  406d50:	bl	403cb8 <sd_bus_message_append@plt>
  406d54:	tbnz	w0, #31, 4074b4 <ascii_strlower_n@plt+0x30ac>
  406d58:	mov	w0, #0x1                   	// #1
  406d5c:	bl	403cd8 <now@plt>
  406d60:	ldur	x1, [x29, #-8]
  406d64:	mov	w2, #0xe00                 	// #3584
  406d68:	mov	x23, x0
  406d6c:	sub	x3, x29, #0x28
  406d70:	sub	x4, x29, #0x10
  406d74:	movk	w2, #0x727, lsl #16
  406d78:	mov	x0, x19
  406d7c:	bl	403ce8 <sd_bus_call@plt>
  406d80:	tbnz	w0, #31, 40752c <ascii_strlower_n@plt+0x3124>
  406d84:	mov	w0, #0x1                   	// #1
  406d88:	bl	403cd8 <now@plt>
  406d8c:	ldur	x8, [x29, #-16]
  406d90:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406d94:	str	x0, [sp, #48]
  406d98:	mov	w1, #0x61                  	// #97
  406d9c:	mov	x0, x8
  406da0:	add	x2, x2, #0x6b8
  406da4:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406da8:	tbnz	w0, #31, 40768c <ascii_strlower_n@plt+0x3284>
  406dac:	ldur	x0, [x29, #-16]
  406db0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406db4:	mov	w1, #0x72                  	// #114
  406db8:	add	x2, x2, #0x6bd
  406dbc:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406dc0:	cmp	w0, #0x1
  406dc4:	b.lt	4076dc <ascii_strlower_n@plt+0x32d4>  // b.tstop
  406dc8:	str	x23, [sp, #40]
  406dcc:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406dd0:	mov	w21, wzr
  406dd4:	add	x23, x23, #0x6bd
  406dd8:	ldur	x0, [x29, #-16]
  406ddc:	sub	x2, x29, #0x48
  406de0:	sub	x3, x29, #0x38
  406de4:	mov	x1, x23
  406de8:	bl	403d08 <sd_bus_message_read@plt>
  406dec:	tbnz	w0, #31, 4076ac <ascii_strlower_n@plt+0x32a4>
  406df0:	ldur	x0, [x29, #-16]
  406df4:	bl	403d18 <sd_bus_message_exit_container@plt>
  406df8:	tbnz	w0, #31, 4076ac <ascii_strlower_n@plt+0x32a4>
  406dfc:	ldur	x25, [x29, #-48]
  406e00:	mov	x0, x25
  406e04:	bl	403d28 <strlen@plt>
  406e08:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406e0c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406e10:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406e14:	cmp	w21, #0x0
  406e18:	add	x23, x23, #0x9c
  406e1c:	add	x8, x8, #0x44b
  406e20:	add	x9, x9, #0x6cd
  406e24:	mov	x26, x0
  406e28:	csel	x25, x25, x23, eq  // eq = none
  406e2c:	csel	x27, x9, x8, eq  // eq = none
  406e30:	bl	403be8 <colors_enabled@plt>
  406e34:	ldur	x28, [x29, #-56]
  406e38:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406e3c:	tst	w0, #0x1
  406e40:	add	x8, x8, #0xda0
  406e44:	csel	x24, x8, x23, ne  // ne = any
  406e48:	bl	403be8 <colors_enabled@plt>
  406e4c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  406e50:	tst	w0, #0x1
  406e54:	add	x8, x8, #0xdaa
  406e58:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406e5c:	csel	x6, x8, x23, ne  // ne = any
  406e60:	add	x0, x0, #0x6c0
  406e64:	mov	w1, w26
  406e68:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406e6c:	mov	x2, x25
  406e70:	mov	x3, x27
  406e74:	adrp	x27, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406e78:	mov	x4, x24
  406e7c:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406e80:	mov	x5, x28
  406e84:	adrp	x28, 419000 <ascii_strlower_n@plt+0x14bf8>
  406e88:	add	x26, x26, #0x688
  406e8c:	add	x27, x27, #0xa4e
  406e90:	add	x24, x24, #0x132
  406e94:	add	x28, x28, #0xfaf
  406e98:	bl	403a58 <printf@plt>
  406e9c:	ldur	w1, [x29, #-72]
  406ea0:	bl	40bcf4 <ascii_strlower_n@plt+0x78ec>
  406ea4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406ea8:	ldr	x1, [x8, #176]
  406eac:	mov	w0, #0xa                   	// #10
  406eb0:	bl	403d38 <fputc@plt>
  406eb4:	ldur	x0, [x29, #-16]
  406eb8:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406ebc:	add	x23, x23, #0x6bd
  406ec0:	mov	w1, #0x72                  	// #114
  406ec4:	mov	x2, x23
  406ec8:	add	w21, w21, #0x1
  406ecc:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406ed0:	cmp	w0, #0x0
  406ed4:	b.gt	406dd8 <ascii_strlower_n@plt+0x29d0>
  406ed8:	ldr	x23, [sp, #40]
  406edc:	mov	w25, w0
  406ee0:	b	4076e4 <ascii_strlower_n@plt+0x32dc>
  406ee4:	ldr	x23, [x22]
  406ee8:	stp	xzr, xzr, [x29, #-16]
  406eec:	stp	xzr, xzr, [x29, #-40]
  406ef0:	stur	xzr, [x29, #-24]
  406ef4:	stur	xzr, [x29, #-48]
  406ef8:	cbz	x23, 407968 <ascii_strlower_n@plt+0x3560>
  406efc:	mov	w0, wzr
  406f00:	bl	4039a8 <log_get_max_level_realm@plt>
  406f04:	cmp	w0, #0x7
  406f08:	b.lt	406f70 <ascii_strlower_n@plt+0x2b68>  // b.tstop
  406f0c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406f10:	ldr	w0, [x8, #60]
  406f14:	bl	403d48 <af_to_name@plt>
  406f18:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406f1c:	ldr	x8, [x8, #40]
  406f20:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f24:	cmp	x0, #0x0
  406f28:	add	x9, x9, #0x1b4
  406f2c:	csel	x7, x9, x0, eq  // eq = none
  406f30:	cbz	x8, 406f3c <ascii_strlower_n@plt+0x2b34>
  406f34:	ldrb	w9, [x8]
  406f38:	cbnz	w9, 406f44 <ascii_strlower_n@plt+0x2b3c>
  406f3c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f40:	add	x8, x8, #0x1b4
  406f44:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f48:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f4c:	mov	w0, #0x7                   	// #7
  406f50:	mov	w3, #0xa8                  	// #168
  406f54:	mov	w1, wzr
  406f58:	mov	x2, x28
  406f5c:	add	x4, x4, #0x70b
  406f60:	add	x5, x5, #0x718
  406f64:	mov	x6, x23
  406f68:	str	x8, [sp]
  406f6c:	bl	4039b8 <log_internal_realm@plt>
  406f70:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  406f74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f78:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406f7c:	sub	x1, x29, #0x8
  406f80:	mov	x0, x19
  406f84:	mov	x2, x27
  406f88:	add	x3, x3, #0xef9
  406f8c:	add	x4, x4, #0x1b6
  406f90:	add	x5, x5, #0x740
  406f94:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  406f98:	tbnz	w0, #31, 4073a0 <ascii_strlower_n@plt+0x2f98>
  406f9c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406fa0:	ldr	w4, [x8, #60]
  406fa4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406fa8:	ldur	x0, [x29, #-8]
  406fac:	ldr	w2, [x21, #56]
  406fb0:	ldr	x5, [x8, #72]
  406fb4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  406fb8:	add	x1, x1, #0x750
  406fbc:	mov	x3, x23
  406fc0:	bl	403cb8 <sd_bus_message_append@plt>
  406fc4:	tbnz	w0, #31, 4073fc <ascii_strlower_n@plt+0x2ff4>
  406fc8:	mov	w0, #0x1                   	// #1
  406fcc:	bl	403cd8 <now@plt>
  406fd0:	ldur	x1, [x29, #-8]
  406fd4:	mov	w2, #0xe00                 	// #3584
  406fd8:	str	x0, [sp, #48]
  406fdc:	sub	x3, x29, #0x28
  406fe0:	sub	x4, x29, #0x10
  406fe4:	movk	w2, #0x727, lsl #16
  406fe8:	mov	x0, x19
  406fec:	bl	403ce8 <sd_bus_call@plt>
  406ff0:	tbnz	w0, #31, 407460 <ascii_strlower_n@plt+0x3058>
  406ff4:	mov	w0, #0x1                   	// #1
  406ff8:	bl	403cd8 <now@plt>
  406ffc:	ldur	x8, [x29, #-16]
  407000:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407004:	str	x0, [sp, #32]
  407008:	mov	w1, #0x61                  	// #97
  40700c:	mov	x0, x8
  407010:	add	x2, x2, #0xeeb
  407014:	bl	403cf8 <sd_bus_message_enter_container@plt>
  407018:	tbnz	w0, #31, 4074e4 <ascii_strlower_n@plt+0x30dc>
  40701c:	ldur	x0, [x29, #-16]
  407020:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407024:	mov	w1, #0x72                  	// #114
  407028:	add	x2, x2, #0xcba
  40702c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  407030:	cmp	w0, #0x1
  407034:	b.lt	407580 <ascii_strlower_n@plt+0x3178>  // b.tstop
  407038:	str	wzr, [sp, #40]
  40703c:	ldur	x0, [x29, #-16]
  407040:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407044:	sub	x2, x29, #0x3c
  407048:	sub	x3, x29, #0x40
  40704c:	add	x1, x1, #0x6b5
  407050:	stur	xzr, [x29, #-56]
  407054:	bl	403d08 <sd_bus_message_read@plt>
  407058:	tbnz	w0, #31, 40717c <ascii_strlower_n@plt+0x2d74>
  40705c:	ldur	x0, [x29, #-16]
  407060:	sub	x2, x29, #0x48
  407064:	add	x3, sp, #0x50
  407068:	mov	w1, #0x79                  	// #121
  40706c:	bl	403d58 <sd_bus_message_read_array@plt>
  407070:	tbnz	w0, #31, 40719c <ascii_strlower_n@plt+0x2d94>
  407074:	ldur	x0, [x29, #-16]
  407078:	bl	403d18 <sd_bus_message_exit_container@plt>
  40707c:	tbnz	w0, #31, 4071bc <ascii_strlower_n@plt+0x2db4>
  407080:	ldur	w26, [x29, #-64]
  407084:	orr	w8, w26, #0x8
  407088:	cmp	w8, #0xa
  40708c:	b.ne	407214 <ascii_strlower_n@plt+0x2e0c>  // b.any
  407090:	b.ne	40798c <ascii_strlower_n@plt+0x3584>  // b.any
  407094:	ldr	x27, [sp, #80]
  407098:	cmp	w26, #0xa
  40709c:	mov	w8, #0x4                   	// #4
  4070a0:	mov	w9, #0x10                  	// #16
  4070a4:	csel	x8, x9, x8, eq  // eq = none
  4070a8:	cmp	x27, x8
  4070ac:	b.ne	407274 <ascii_strlower_n@plt+0x2e6c>  // b.any
  4070b0:	ldur	x1, [x29, #-72]
  4070b4:	ldur	w2, [x29, #-60]
  4070b8:	sub	x3, x29, #0x38
  4070bc:	mov	w0, w26
  4070c0:	bl	403c98 <in_addr_ifindex_to_string@plt>
  4070c4:	tbnz	w0, #31, 407310 <ascii_strlower_n@plt+0x2f08>
  4070c8:	mov	x0, x23
  4070cc:	bl	403d28 <strlen@plt>
  4070d0:	ldr	w26, [sp, #40]
  4070d4:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4070d8:	add	x24, x24, #0x9c
  4070dc:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4070e0:	cmp	w26, #0x0
  4070e4:	csel	x8, x23, x24, eq  // eq = none
  4070e8:	stp	x8, x0, [sp, #16]
  4070ec:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4070f0:	add	x8, x8, #0x44b
  4070f4:	add	x9, x9, #0x6cd
  4070f8:	csel	x27, x9, x8, eq  // eq = none
  4070fc:	bl	403be8 <colors_enabled@plt>
  407100:	ldur	x28, [x29, #-56]
  407104:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407108:	tst	w0, #0x1
  40710c:	add	x8, x8, #0xda0
  407110:	csel	x21, x8, x24, ne  // ne = any
  407114:	bl	403be8 <colors_enabled@plt>
  407118:	ldp	x2, x1, [sp, #16]
  40711c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407120:	tst	w0, #0x1
  407124:	add	x8, x8, #0xdaa
  407128:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40712c:	csel	x6, x8, x24, ne  // ne = any
  407130:	add	x0, x0, #0x6c0
  407134:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407138:	mov	x3, x27
  40713c:	mov	x4, x21
  407140:	mov	x5, x28
  407144:	adrp	x28, 419000 <ascii_strlower_n@plt+0x14bf8>
  407148:	add	x24, x24, #0x132
  40714c:	add	x28, x28, #0xfaf
  407150:	bl	403a58 <printf@plt>
  407154:	ldur	w1, [x29, #-60]
  407158:	bl	40bcf4 <ascii_strlower_n@plt+0x78ec>
  40715c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407160:	ldr	x1, [x8, #176]
  407164:	mov	w0, #0xa                   	// #10
  407168:	bl	403d38 <fputc@plt>
  40716c:	mov	w21, wzr
  407170:	add	w26, w26, #0x1
  407174:	str	w26, [sp, #40]
  407178:	b	4072d4 <ascii_strlower_n@plt+0x2ecc>
  40717c:	mov	w26, w0
  407180:	mov	w0, wzr
  407184:	bl	4039a8 <log_get_max_level_realm@plt>
  407188:	cmp	w0, #0x3
  40718c:	b.lt	407200 <ascii_strlower_n@plt+0x2df8>  // b.tstop
  407190:	mov	w0, #0x3                   	// #3
  407194:	mov	w3, #0xce                  	// #206
  407198:	b	4071d8 <ascii_strlower_n@plt+0x2dd0>
  40719c:	mov	w26, w0
  4071a0:	mov	w0, wzr
  4071a4:	bl	4039a8 <log_get_max_level_realm@plt>
  4071a8:	cmp	w0, #0x3
  4071ac:	b.lt	407200 <ascii_strlower_n@plt+0x2df8>  // b.tstop
  4071b0:	mov	w0, #0x3                   	// #3
  4071b4:	mov	w3, #0xd2                  	// #210
  4071b8:	b	4071d8 <ascii_strlower_n@plt+0x2dd0>
  4071bc:	mov	w26, w0
  4071c0:	mov	w0, wzr
  4071c4:	bl	4039a8 <log_get_max_level_realm@plt>
  4071c8:	cmp	w0, #0x3
  4071cc:	b.lt	407200 <ascii_strlower_n@plt+0x2df8>  // b.tstop
  4071d0:	mov	w0, #0x3                   	// #3
  4071d4:	mov	w3, #0xd6                  	// #214
  4071d8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4071dc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4071e0:	mov	w1, w26
  4071e4:	mov	x2, x28
  4071e8:	add	x4, x4, #0x70b
  4071ec:	add	x5, x5, #0x230
  4071f0:	bl	4039b8 <log_internal_realm@plt>
  4071f4:	mov	w25, w0
  4071f8:	mov	w21, #0x1                   	// #1
  4071fc:	b	4072dc <ascii_strlower_n@plt+0x2ed4>
  407200:	mov	w8, wzr
  407204:	neg	w9, w26
  407208:	sub	w25, w8, w9, uxtb
  40720c:	mov	w21, #0x1                   	// #1
  407210:	b	4072dc <ascii_strlower_n@plt+0x2ed4>
  407214:	mov	w0, wzr
  407218:	bl	4039a8 <log_get_max_level_realm@plt>
  40721c:	cmp	w0, #0x7
  407220:	b.lt	40726c <ascii_strlower_n@plt+0x2e64>  // b.tstop
  407224:	mov	w0, w26
  407228:	bl	403d48 <af_to_name@plt>
  40722c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407230:	cmp	x0, #0x0
  407234:	add	x8, x8, #0x77c
  407238:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40723c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407240:	csel	x8, x8, x0, eq  // eq = none
  407244:	mov	w0, #0x7                   	// #7
  407248:	mov	w3, #0xd9                  	// #217
  40724c:	mov	w1, wzr
  407250:	mov	x2, x28
  407254:	add	x4, x4, #0x70b
  407258:	add	x5, x5, #0x755
  40725c:	mov	x6, x23
  407260:	mov	w7, w26
  407264:	str	x8, [sp]
  407268:	bl	4039b8 <log_internal_realm@plt>
  40726c:	mov	w21, #0x4                   	// #4
  407270:	b	4072dc <ascii_strlower_n@plt+0x2ed4>
  407274:	mov	w0, wzr
  407278:	bl	4039a8 <log_get_max_level_realm@plt>
  40727c:	cmp	w0, #0x3
  407280:	b.lt	4072cc <ascii_strlower_n@plt+0x2ec4>  // b.tstop
  407284:	mov	w0, w26
  407288:	bl	403d48 <af_to_name@plt>
  40728c:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407290:	cmp	x0, #0x0
  407294:	add	x8, x8, #0x77c
  407298:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40729c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4072a0:	csel	x8, x8, x0, eq  // eq = none
  4072a4:	mov	w0, #0x3                   	// #3
  4072a8:	mov	w3, #0xde                  	// #222
  4072ac:	mov	w1, wzr
  4072b0:	mov	x2, x28
  4072b4:	add	x4, x4, #0x70b
  4072b8:	add	x5, x5, #0x784
  4072bc:	mov	x6, x23
  4072c0:	mov	x7, x27
  4072c4:	str	x8, [sp]
  4072c8:	bl	4039b8 <log_internal_realm@plt>
  4072cc:	mov	w25, #0xffffffea            	// #-22
  4072d0:	mov	w21, #0x1                   	// #1
  4072d4:	adrp	x27, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4072d8:	add	x27, x27, #0xa4e
  4072dc:	ldur	x0, [x29, #-56]
  4072e0:	bl	4039d8 <free@plt>
  4072e4:	orr	w8, w21, #0x4
  4072e8:	cmp	w8, #0x4
  4072ec:	b.ne	407634 <ascii_strlower_n@plt+0x322c>  // b.any
  4072f0:	ldur	x0, [x29, #-16]
  4072f4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4072f8:	mov	w1, #0x72                  	// #114
  4072fc:	add	x2, x2, #0xcba
  407300:	bl	403cf8 <sd_bus_message_enter_container@plt>
  407304:	cmp	w0, #0x0
  407308:	b.gt	40703c <ascii_strlower_n@plt+0x2c34>
  40730c:	b	407644 <ascii_strlower_n@plt+0x323c>
  407310:	mov	w26, w0
  407314:	mov	w0, wzr
  407318:	bl	4039a8 <log_get_max_level_realm@plt>
  40731c:	cmp	w0, #0x3
  407320:	b.lt	407354 <ascii_strlower_n@plt+0x2f4c>  // b.tstop
  407324:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407328:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40732c:	mov	w0, #0x3                   	// #3
  407330:	mov	w3, #0xe4                  	// #228
  407334:	mov	w1, w26
  407338:	mov	x2, x28
  40733c:	add	x4, x4, #0x70b
  407340:	add	x5, x5, #0x7cc
  407344:	mov	x6, x23
  407348:	bl	4039b8 <log_internal_realm@plt>
  40734c:	mov	w25, w0
  407350:	b	4072d0 <ascii_strlower_n@plt+0x2ec8>
  407354:	mov	w8, wzr
  407358:	neg	w9, w26
  40735c:	sub	w25, w8, w9, uxtb
  407360:	b	4072d0 <ascii_strlower_n@plt+0x2ec8>
  407364:	mov	w2, #0x11b                 	// #283
  407368:	mov	w0, wzr
  40736c:	mov	x1, x28
  407370:	mov	x3, x26
  407374:	bl	403a28 <log_oom_internal@plt>
  407378:	mov	w25, w0
  40737c:	b	40788c <ascii_strlower_n@plt+0x3484>
  407380:	mov	w25, w0
  407384:	mov	w0, wzr
  407388:	bl	4039a8 <log_get_max_level_realm@plt>
  40738c:	cmp	w0, #0x3
  407390:	b.lt	407880 <ascii_strlower_n@plt+0x3478>  // b.tstop
  407394:	mov	w0, #0x3                   	// #3
  407398:	mov	w3, #0x127                 	// #295
  40739c:	b	4073dc <ascii_strlower_n@plt+0x2fd4>
  4073a0:	mov	w25, w0
  4073a4:	mov	w0, wzr
  4073a8:	bl	4039a8 <log_get_max_level_realm@plt>
  4073ac:	cmp	w0, #0x3
  4073b0:	b.lt	40751c <ascii_strlower_n@plt+0x3114>  // b.tstop
  4073b4:	mov	w0, #0x3                   	// #3
  4073b8:	mov	w3, #0xb2                  	// #178
  4073bc:	b	407418 <ascii_strlower_n@plt+0x3010>
  4073c0:	mov	w25, w0
  4073c4:	mov	w0, wzr
  4073c8:	bl	4039a8 <log_get_max_level_realm@plt>
  4073cc:	cmp	w0, #0x3
  4073d0:	b.lt	407880 <ascii_strlower_n@plt+0x3478>  // b.tstop
  4073d4:	mov	w0, #0x3                   	// #3
  4073d8:	mov	w3, #0x12b                 	// #299
  4073dc:	mov	w1, w25
  4073e0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4073e4:	mov	x2, x28
  4073e8:	mov	x4, x26
  4073ec:	add	x5, x5, #0x1e5
  4073f0:	bl	4039b8 <log_internal_realm@plt>
  4073f4:	mov	w25, w0
  4073f8:	b	40788c <ascii_strlower_n@plt+0x3484>
  4073fc:	mov	w25, w0
  407400:	mov	w0, wzr
  407404:	bl	4039a8 <log_get_max_level_realm@plt>
  407408:	cmp	w0, #0x3
  40740c:	b.lt	40751c <ascii_strlower_n@plt+0x3114>  // b.tstop
  407410:	mov	w0, #0x3                   	// #3
  407414:	mov	w3, #0xb6                  	// #182
  407418:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40741c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407420:	mov	w1, w25
  407424:	mov	x2, x28
  407428:	add	x4, x4, #0x70b
  40742c:	add	x5, x5, #0x1e5
  407430:	bl	4039b8 <log_internal_realm@plt>
  407434:	mov	w25, w0
  407438:	b	407894 <ascii_strlower_n@plt+0x348c>
  40743c:	mov	w23, w0
  407440:	mov	w0, wzr
  407444:	bl	4039a8 <log_get_max_level_realm@plt>
  407448:	cmp	w0, #0x3
  40744c:	b.lt	4074d8 <ascii_strlower_n@plt+0x30d0>  // b.tstop
  407450:	mov	w0, #0x3                   	// #3
  407454:	mov	w3, #0x12f                 	// #303
  407458:	mov	w1, w23
  40745c:	b	4073e0 <ascii_strlower_n@plt+0x2fd8>
  407460:	mov	w25, w0
  407464:	mov	w0, wzr
  407468:	bl	4039a8 <log_get_max_level_realm@plt>
  40746c:	cmp	w0, #0x3
  407470:	b.lt	40751c <ascii_strlower_n@plt+0x3114>  // b.tstop
  407474:	sub	x0, x29, #0x28
  407478:	mov	w1, w25
  40747c:	bl	403d68 <bus_error_message@plt>
  407480:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407484:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407488:	mov	x7, x0
  40748c:	mov	w0, #0x3                   	// #3
  407490:	mov	w3, #0xbc                  	// #188
  407494:	mov	w1, w25
  407498:	mov	x2, x28
  40749c:	add	x4, x4, #0x70b
  4074a0:	add	x5, x5, #0x20c
  4074a4:	mov	x6, x23
  4074a8:	bl	4039b8 <log_internal_realm@plt>
  4074ac:	mov	w25, w0
  4074b0:	b	407894 <ascii_strlower_n@plt+0x348c>
  4074b4:	mov	w23, w0
  4074b8:	mov	w0, wzr
  4074bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4074c0:	cmp	w0, #0x3
  4074c4:	b.lt	4074d8 <ascii_strlower_n@plt+0x30d0>  // b.tstop
  4074c8:	mov	w0, #0x3                   	// #3
  4074cc:	mov	w3, #0x133                 	// #307
  4074d0:	mov	w1, w23
  4074d4:	b	4073e0 <ascii_strlower_n@plt+0x2fd8>
  4074d8:	mov	w8, wzr
  4074dc:	neg	w9, w23
  4074e0:	b	407888 <ascii_strlower_n@plt+0x3480>
  4074e4:	mov	w25, w0
  4074e8:	mov	w0, wzr
  4074ec:	bl	4039a8 <log_get_max_level_realm@plt>
  4074f0:	cmp	w0, #0x3
  4074f4:	b.lt	40751c <ascii_strlower_n@plt+0x3114>  // b.tstop
  4074f8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4074fc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407500:	mov	w0, #0x3                   	// #3
  407504:	mov	w3, #0xc2                  	// #194
  407508:	mov	w1, w25
  40750c:	mov	x2, x28
  407510:	add	x4, x4, #0x70b
  407514:	add	x5, x5, #0x230
  407518:	b	407430 <ascii_strlower_n@plt+0x3028>
  40751c:	mov	w8, wzr
  407520:	neg	w9, w25
  407524:	sub	w25, w8, w9, uxtb
  407528:	b	407894 <ascii_strlower_n@plt+0x348c>
  40752c:	mov	w25, w0
  407530:	mov	w0, wzr
  407534:	bl	4039a8 <log_get_max_level_realm@plt>
  407538:	cmp	w0, #0x3
  40753c:	b.lt	407880 <ascii_strlower_n@plt+0x3478>  // b.tstop
  407540:	ldur	x23, [x29, #-48]
  407544:	sub	x0, x29, #0x28
  407548:	mov	w1, w25
  40754c:	bl	403d68 <bus_error_message@plt>
  407550:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407554:	mov	x7, x0
  407558:	mov	w0, #0x3                   	// #3
  40755c:	mov	w3, #0x139                 	// #313
  407560:	mov	w1, w25
  407564:	mov	x2, x28
  407568:	mov	x4, x26
  40756c:	add	x5, x5, #0x20c
  407570:	mov	x6, x23
  407574:	bl	4039b8 <log_internal_realm@plt>
  407578:	mov	w25, w0
  40757c:	b	40788c <ascii_strlower_n@plt+0x3484>
  407580:	mov	w26, w0
  407584:	mov	w21, wzr
  407588:	tbnz	w26, #31, 407650 <ascii_strlower_n@plt+0x3248>
  40758c:	ldur	x0, [x29, #-16]
  407590:	bl	403d18 <sd_bus_message_exit_container@plt>
  407594:	tbnz	w0, #31, 4076b4 <ascii_strlower_n@plt+0x32ac>
  407598:	ldur	x0, [x29, #-16]
  40759c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4075a0:	sub	x2, x29, #0x30
  4075a4:	sub	x3, x29, #0x38
  4075a8:	add	x1, x1, #0x7ef
  4075ac:	bl	403d08 <sd_bus_message_read@plt>
  4075b0:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4075b4:	add	x26, x26, #0x688
  4075b8:	tbnz	w0, #31, 407744 <ascii_strlower_n@plt+0x333c>
  4075bc:	ldur	x25, [x29, #-48]
  4075c0:	mov	x0, x23
  4075c4:	mov	x1, x25
  4075c8:	bl	403b38 <strcmp@plt>
  4075cc:	cbz	w0, 407610 <ascii_strlower_n@plt+0x3208>
  4075d0:	mov	x0, x23
  4075d4:	bl	403d28 <strlen@plt>
  4075d8:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4075dc:	cmp	w21, #0x0
  4075e0:	add	x8, x8, #0x9c
  4075e4:	csel	x2, x23, x8, eq  // eq = none
  4075e8:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4075ec:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4075f0:	mov	x1, x0
  4075f4:	add	x8, x8, #0x44b
  4075f8:	add	x9, x9, #0x6cd
  4075fc:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407600:	csel	x3, x9, x8, eq  // eq = none
  407604:	add	x0, x0, #0x7f2
  407608:	mov	x4, x25
  40760c:	bl	403a58 <printf@plt>
  407610:	cbz	w21, 4077b8 <ascii_strlower_n@plt+0x33b0>
  407614:	ldr	x8, [sp, #48]
  407618:	ldr	x9, [sp, #32]
  40761c:	ldur	x0, [x29, #-56]
  407620:	sub	x1, x9, x8
  407624:	bl	40bb90 <ascii_strlower_n@plt+0x7788>
  407628:	mov	w25, wzr
  40762c:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407630:	b	407894 <ascii_strlower_n@plt+0x348c>
  407634:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407638:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40763c:	add	x26, x26, #0x688
  407640:	b	407894 <ascii_strlower_n@plt+0x348c>
  407644:	ldr	w21, [sp, #40]
  407648:	mov	w26, w0
  40764c:	tbz	w26, #31, 40758c <ascii_strlower_n@plt+0x3184>
  407650:	mov	w0, wzr
  407654:	bl	4039a8 <log_get_max_level_realm@plt>
  407658:	cmp	w0, #0x3
  40765c:	b.lt	407728 <ascii_strlower_n@plt+0x3320>  // b.tstop
  407660:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407664:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407668:	mov	w0, #0x3                   	// #3
  40766c:	mov	w3, #0xf0                  	// #240
  407670:	mov	w1, w26
  407674:	mov	x2, x28
  407678:	add	x4, x4, #0x70b
  40767c:	add	x5, x5, #0x230
  407680:	bl	4039b8 <log_internal_realm@plt>
  407684:	mov	w25, w0
  407688:	b	407734 <ascii_strlower_n@plt+0x332c>
  40768c:	mov	w25, w0
  407690:	mov	w0, wzr
  407694:	bl	4039a8 <log_get_max_level_realm@plt>
  407698:	cmp	w0, #0x3
  40769c:	b.lt	407880 <ascii_strlower_n@plt+0x3478>  // b.tstop
  4076a0:	mov	w0, #0x3                   	// #3
  4076a4:	mov	w3, #0x13f                 	// #319
  4076a8:	b	4073dc <ascii_strlower_n@plt+0x2fd4>
  4076ac:	mov	w25, w0
  4076b0:	b	4078f0 <ascii_strlower_n@plt+0x34e8>
  4076b4:	mov	w25, w0
  4076b8:	mov	w0, wzr
  4076bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4076c0:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4076c4:	cmp	w0, #0x3
  4076c8:	add	x26, x26, #0x688
  4076cc:	b.lt	407788 <ascii_strlower_n@plt+0x3380>  // b.tstop
  4076d0:	mov	w0, #0x3                   	// #3
  4076d4:	mov	w3, #0xf4                  	// #244
  4076d8:	b	407760 <ascii_strlower_n@plt+0x3358>
  4076dc:	mov	w25, w0
  4076e0:	mov	w21, wzr
  4076e4:	tbnz	w25, #31, 40779c <ascii_strlower_n@plt+0x3394>
  4076e8:	ldur	x0, [x29, #-16]
  4076ec:	bl	403d18 <sd_bus_message_exit_container@plt>
  4076f0:	tbnz	w0, #31, 4077fc <ascii_strlower_n@plt+0x33f4>
  4076f4:	ldur	x0, [x29, #-16]
  4076f8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4076fc:	sub	x2, x29, #0x38
  407700:	add	x1, x1, #0x908
  407704:	bl	403d08 <sd_bus_message_read@plt>
  407708:	tbnz	w0, #31, 407848 <ascii_strlower_n@plt+0x3440>
  40770c:	cbz	w21, 4078b8 <ascii_strlower_n@plt+0x34b0>
  407710:	ldr	x8, [sp, #48]
  407714:	ldur	x0, [x29, #-56]
  407718:	sub	x1, x8, x23
  40771c:	bl	40bb90 <ascii_strlower_n@plt+0x7788>
  407720:	mov	w25, wzr
  407724:	b	4078f0 <ascii_strlower_n@plt+0x34e8>
  407728:	mov	w8, wzr
  40772c:	neg	w9, w26
  407730:	sub	w25, w8, w9, uxtb
  407734:	adrp	x26, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407738:	add	x26, x26, #0x688
  40773c:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407740:	b	407894 <ascii_strlower_n@plt+0x348c>
  407744:	mov	w25, w0
  407748:	mov	w0, wzr
  40774c:	bl	4039a8 <log_get_max_level_realm@plt>
  407750:	cmp	w0, #0x3
  407754:	b.lt	407788 <ascii_strlower_n@plt+0x3380>  // b.tstop
  407758:	mov	w0, #0x3                   	// #3
  40775c:	mov	w3, #0xf8                  	// #248
  407760:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407764:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407768:	mov	w1, w25
  40776c:	mov	x2, x28
  407770:	add	x4, x4, #0x70b
  407774:	add	x5, x5, #0x230
  407778:	bl	4039b8 <log_internal_realm@plt>
  40777c:	mov	w25, w0
  407780:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407784:	b	407894 <ascii_strlower_n@plt+0x348c>
  407788:	mov	w8, wzr
  40778c:	neg	w9, w25
  407790:	sub	w25, w8, w9, uxtb
  407794:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407798:	b	407894 <ascii_strlower_n@plt+0x348c>
  40779c:	mov	w0, wzr
  4077a0:	bl	4039a8 <log_get_max_level_realm@plt>
  4077a4:	cmp	w0, #0x3
  4077a8:	b.lt	407838 <ascii_strlower_n@plt+0x3430>  // b.tstop
  4077ac:	mov	w0, #0x3                   	// #3
  4077b0:	mov	w3, #0x15a                 	// #346
  4077b4:	b	407818 <ascii_strlower_n@plt+0x3410>
  4077b8:	mov	w0, wzr
  4077bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4077c0:	cmp	w0, #0x3
  4077c4:	b.lt	4077f0 <ascii_strlower_n@plt+0x33e8>  // b.tstop
  4077c8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4077cc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4077d0:	mov	w0, #0x3                   	// #3
  4077d4:	mov	w3, #0x100                 	// #256
  4077d8:	mov	w1, wzr
  4077dc:	mov	x2, x28
  4077e0:	add	x4, x4, #0x70b
  4077e4:	add	x5, x5, #0x7fe
  4077e8:	mov	x6, x23
  4077ec:	bl	4039b8 <log_internal_realm@plt>
  4077f0:	mov	w25, #0xfffffffd            	// #-3
  4077f4:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4077f8:	b	407894 <ascii_strlower_n@plt+0x348c>
  4077fc:	mov	w25, w0
  407800:	mov	w0, wzr
  407804:	bl	4039a8 <log_get_max_level_realm@plt>
  407808:	cmp	w0, #0x3
  40780c:	b.lt	407838 <ascii_strlower_n@plt+0x3430>  // b.tstop
  407810:	mov	w0, #0x3                   	// #3
  407814:	mov	w3, #0x15e                 	// #350
  407818:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40781c:	mov	w1, w25
  407820:	mov	x2, x28
  407824:	mov	x4, x26
  407828:	add	x5, x5, #0x230
  40782c:	bl	4039b8 <log_internal_realm@plt>
  407830:	mov	w25, w0
  407834:	b	4078f0 <ascii_strlower_n@plt+0x34e8>
  407838:	mov	w8, wzr
  40783c:	neg	w9, w25
  407840:	sub	w25, w8, w9, uxtb
  407844:	b	4078f0 <ascii_strlower_n@plt+0x34e8>
  407848:	mov	w25, w0
  40784c:	mov	w0, wzr
  407850:	bl	4039a8 <log_get_max_level_realm@plt>
  407854:	cmp	w0, #0x3
  407858:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40785c:	b.lt	407880 <ascii_strlower_n@plt+0x3478>  // b.tstop
  407860:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407864:	mov	w0, #0x3                   	// #3
  407868:	mov	w3, #0x162                 	// #354
  40786c:	mov	w1, w25
  407870:	mov	x2, x28
  407874:	mov	x4, x26
  407878:	add	x5, x5, #0x230
  40787c:	b	4073f0 <ascii_strlower_n@plt+0x2fe8>
  407880:	mov	w8, wzr
  407884:	neg	w9, w25
  407888:	sub	w25, w8, w9, uxtb
  40788c:	ldur	x0, [x29, #-48]
  407890:	bl	4039d8 <free@plt>
  407894:	sub	x0, x29, #0x28
  407898:	bl	403d78 <sd_bus_error_free@plt>
  40789c:	ldur	x0, [x29, #-16]
  4078a0:	cbz	x0, 4078a8 <ascii_strlower_n@plt+0x34a0>
  4078a4:	bl	403d88 <sd_bus_message_unref@plt>
  4078a8:	ldur	x0, [x29, #-8]
  4078ac:	cbz	x0, 406c08 <ascii_strlower_n@plt+0x2800>
  4078b0:	bl	403d88 <sd_bus_message_unref@plt>
  4078b4:	b	406c08 <ascii_strlower_n@plt+0x2800>
  4078b8:	mov	w0, wzr
  4078bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4078c0:	cmp	w0, #0x3
  4078c4:	b.lt	4078ec <ascii_strlower_n@plt+0x34e4>  // b.tstop
  4078c8:	ldur	x6, [x29, #-48]
  4078cc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4078d0:	mov	w0, #0x3                   	// #3
  4078d4:	mov	w3, #0x165                 	// #357
  4078d8:	mov	w1, wzr
  4078dc:	mov	x2, x28
  4078e0:	mov	x4, x26
  4078e4:	add	x5, x5, #0x6cf
  4078e8:	bl	4039b8 <log_internal_realm@plt>
  4078ec:	mov	w25, #0xfffffffd            	// #-3
  4078f0:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4078f4:	b	40788c <ascii_strlower_n@plt+0x3484>
  4078f8:	mov	w20, wzr
  4078fc:	mov	w0, w20
  407900:	ldp	x20, x19, [sp, #240]
  407904:	ldp	x22, x21, [sp, #224]
  407908:	ldp	x24, x23, [sp, #208]
  40790c:	ldp	x26, x25, [sp, #192]
  407910:	ldp	x28, x27, [sp, #176]
  407914:	ldp	x29, x30, [sp, #160]
  407918:	add	sp, sp, #0x100
  40791c:	ret
  407920:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407924:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407928:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40792c:	add	x1, x1, #0xd1a
  407930:	add	x2, x2, #0xfaf
  407934:	add	x4, x4, #0x63b
  407938:	mov	w3, #0x113                 	// #275
  40793c:	mov	w0, wzr
  407940:	bl	403a98 <log_assert_failed_realm@plt>
  407944:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407948:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40794c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407950:	add	x1, x1, #0x99c
  407954:	add	x2, x2, #0xfaf
  407958:	add	x4, x4, #0x63b
  40795c:	mov	w3, #0x112                 	// #274
  407960:	mov	w0, wzr
  407964:	bl	403a98 <log_assert_failed_realm@plt>
  407968:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40796c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407970:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407974:	add	x1, x1, #0x137
  407978:	add	x2, x2, #0xfaf
  40797c:	add	x4, x4, #0x6e2
  407980:	mov	w3, #0xa6                  	// #166
  407984:	mov	w0, wzr
  407988:	bl	403a98 <log_assert_failed_realm@plt>
  40798c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407990:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407994:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407998:	add	x1, x1, #0xd1a
  40799c:	add	x2, x2, #0xd3f
  4079a0:	add	x4, x4, #0xd58
  4079a4:	mov	w3, #0x43                  	// #67
  4079a8:	mov	w0, wzr
  4079ac:	bl	403a98 <log_assert_failed_realm@plt>
  4079b0:	cmp	w0, #0x2
  4079b4:	b.ne	4079cc <ascii_strlower_n@plt+0x35c4>  // b.any
  4079b8:	ldr	x3, [x1, #8]
  4079bc:	mov	x0, x2
  4079c0:	mov	x1, xzr
  4079c4:	mov	x2, xzr
  4079c8:	b	40bde0 <ascii_strlower_n@plt+0x79d8>
  4079cc:	ldp	x8, x9, [x1, #8]
  4079d0:	cmp	w0, #0x3
  4079d4:	b.ne	4079ec <ascii_strlower_n@plt+0x35e4>  // b.any
  4079d8:	mov	x0, x2
  4079dc:	mov	x1, xzr
  4079e0:	mov	x2, x8
  4079e4:	mov	x3, x9
  4079e8:	b	40bde0 <ascii_strlower_n@plt+0x79d8>
  4079ec:	ldr	x3, [x1, #24]
  4079f0:	mov	x0, x2
  4079f4:	mov	x1, x8
  4079f8:	mov	x2, x9
  4079fc:	b	40bde0 <ascii_strlower_n@plt+0x79d8>
  407a00:	stp	x29, x30, [sp, #-80]!
  407a04:	stp	x26, x25, [sp, #16]
  407a08:	stp	x24, x23, [sp, #32]
  407a0c:	stp	x22, x21, [sp, #48]
  407a10:	stp	x20, x19, [sp, #64]
  407a14:	ldr	x25, [x1, #8]
  407a18:	mov	x29, sp
  407a1c:	cbz	x25, 407b2c <ascii_strlower_n@plt+0x3724>
  407a20:	cbz	x2, 407b4c <ascii_strlower_n@plt+0x3744>
  407a24:	adrp	x19, 419000 <ascii_strlower_n@plt+0x14bf8>
  407a28:	adrp	x20, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407a2c:	adrp	x21, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407a30:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407a34:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407a38:	mov	w22, wzr
  407a3c:	add	x26, x1, #0x10
  407a40:	add	x19, x19, #0xfaf
  407a44:	add	x20, x20, #0x9ef
  407a48:	add	x21, x21, #0x9ff
  407a4c:	add	x23, x23, #0xa22
  407a50:	add	x24, x24, #0xa48
  407a54:	b	407a68 <ascii_strlower_n@plt+0x3660>
  407a58:	mov	w0, #0xffffffea            	// #-22
  407a5c:	mov	w22, w0
  407a60:	ldr	x25, [x26], #8
  407a64:	cbz	x25, 407b30 <ascii_strlower_n@plt+0x3728>
  407a68:	mov	w1, #0x40                  	// #64
  407a6c:	mov	x0, x25
  407a70:	bl	403d98 <strrchr@plt>
  407a74:	cbz	x0, 407aec <ascii_strlower_n@plt+0x36e4>
  407a78:	cmp	x0, x25
  407a7c:	b.eq	407abc <ascii_strlower_n@plt+0x36b4>  // b.none
  407a80:	ldrb	w8, [x0, #1]
  407a84:	cbz	w8, 407abc <ascii_strlower_n@plt+0x36b4>
  407a88:	mov	w0, wzr
  407a8c:	bl	4039a8 <log_get_max_level_realm@plt>
  407a90:	cmp	w0, #0x3
  407a94:	b.lt	407b24 <ascii_strlower_n@plt+0x371c>  // b.tstop
  407a98:	mov	w0, #0x3                   	// #3
  407a9c:	mov	w1, #0xffffffa1            	// #-95
  407aa0:	mov	w3, #0x375                 	// #885
  407aa4:	mov	x2, x19
  407aa8:	mov	x4, x20
  407aac:	mov	x5, x24
  407ab0:	bl	4039b8 <log_internal_realm@plt>
  407ab4:	tbz	w0, #31, 407a60 <ascii_strlower_n@plt+0x3658>
  407ab8:	b	407a5c <ascii_strlower_n@plt+0x3654>
  407abc:	mov	w0, wzr
  407ac0:	bl	4039a8 <log_get_max_level_realm@plt>
  407ac4:	cmp	w0, #0x3
  407ac8:	b.lt	407a58 <ascii_strlower_n@plt+0x3650>  // b.tstop
  407acc:	mov	w1, #0x16                  	// #22
  407ad0:	mov	w0, #0x3                   	// #3
  407ad4:	movk	w1, #0x4000, lsl #16
  407ad8:	mov	w3, #0x370                 	// #880
  407adc:	mov	x2, x19
  407ae0:	mov	x4, x20
  407ae4:	mov	x5, x23
  407ae8:	b	407b14 <ascii_strlower_n@plt+0x370c>
  407aec:	bl	4039a8 <log_get_max_level_realm@plt>
  407af0:	cmp	w0, #0x3
  407af4:	b.lt	407a58 <ascii_strlower_n@plt+0x3650>  // b.tstop
  407af8:	mov	w1, #0x16                  	// #22
  407afc:	mov	w0, #0x3                   	// #3
  407b00:	movk	w1, #0x4000, lsl #16
  407b04:	mov	w3, #0x36d                 	// #877
  407b08:	mov	x2, x19
  407b0c:	mov	x4, x20
  407b10:	mov	x5, x21
  407b14:	mov	x6, x25
  407b18:	bl	4039b8 <log_internal_realm@plt>
  407b1c:	tbz	w0, #31, 407a60 <ascii_strlower_n@plt+0x3658>
  407b20:	b	407a5c <ascii_strlower_n@plt+0x3654>
  407b24:	mov	w0, #0xffffffa1            	// #-95
  407b28:	b	407a5c <ascii_strlower_n@plt+0x3654>
  407b2c:	mov	w22, wzr
  407b30:	mov	w0, w22
  407b34:	ldp	x20, x19, [sp, #64]
  407b38:	ldp	x22, x21, [sp, #48]
  407b3c:	ldp	x24, x23, [sp, #32]
  407b40:	ldp	x26, x25, [sp, #16]
  407b44:	ldp	x29, x30, [sp], #80
  407b48:	ret
  407b4c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407b50:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407b54:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407b58:	add	x1, x1, #0x99c
  407b5c:	add	x2, x2, #0xfaf
  407b60:	add	x4, x4, #0x9c3
  407b64:	mov	w3, #0x367                 	// #871
  407b68:	mov	w0, wzr
  407b6c:	bl	403a98 <log_assert_failed_realm@plt>
  407b70:	sub	sp, sp, #0x50
  407b74:	stp	x29, x30, [sp, #32]
  407b78:	stp	x22, x21, [sp, #48]
  407b7c:	stp	x20, x19, [sp, #64]
  407b80:	mov	x22, x1
  407b84:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407b88:	add	x8, x8, #0x180
  407b8c:	ldr	x21, [x22, #8]!
  407b90:	ldp	q0, q1, [x8]
  407b94:	mov	x20, x1
  407b98:	mov	x0, sp
  407b9c:	mov	x1, x21
  407ba0:	add	x29, sp, #0x20
  407ba4:	mov	x19, x2
  407ba8:	stp	q0, q1, [sp]
  407bac:	bl	403b68 <strv_find@plt>
  407bb0:	cmp	x0, #0x0
  407bb4:	mov	w8, #0x8                   	// #8
  407bb8:	mov	w9, #0x10                  	// #16
  407bbc:	csel	x8, x9, x8, ne  // ne = any
  407bc0:	ldr	x2, [x20, x8]
  407bc4:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407bc8:	add	x8, x20, #0x10
  407bcc:	add	x9, x9, #0xe28
  407bd0:	csel	x8, x8, x22, ne  // ne = any
  407bd4:	csel	x21, x21, x9, ne  // ne = any
  407bd8:	mov	w20, wzr
  407bdc:	cbz	x2, 407c00 <ascii_strlower_n@plt+0x37f8>
  407be0:	add	x22, x8, #0x8
  407be4:	mov	x0, x19
  407be8:	mov	x1, x21
  407bec:	bl	40cb7c <ascii_strlower_n@plt+0x8774>
  407bf0:	ldr	x2, [x22], #8
  407bf4:	cmp	w0, #0x0
  407bf8:	csel	w20, w0, w20, lt  // lt = tstop
  407bfc:	cbnz	x2, 407be4 <ascii_strlower_n@plt+0x37dc>
  407c00:	mov	w0, w20
  407c04:	ldp	x20, x19, [sp, #64]
  407c08:	ldp	x22, x21, [sp, #48]
  407c0c:	ldp	x29, x30, [sp, #32]
  407c10:	add	sp, sp, #0x50
  407c14:	ret
  407c18:	sub	sp, sp, #0xb0
  407c1c:	stp	x29, x30, [sp, #112]
  407c20:	add	x29, sp, #0x70
  407c24:	stp	x24, x23, [sp, #128]
  407c28:	stp	x22, x21, [sp, #144]
  407c2c:	stp	x20, x19, [sp, #160]
  407c30:	stp	xzr, xzr, [x29, #-24]
  407c34:	stur	xzr, [x29, #-8]
  407c38:	stur	xzr, [x29, #-32]
  407c3c:	cbz	x2, 4080d8 <ascii_strlower_n@plt+0x3cd0>
  407c40:	mov	x19, x2
  407c44:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407c48:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407c4c:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407c50:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407c54:	add	x1, x1, #0xa4e
  407c58:	add	x2, x2, #0xef9
  407c5c:	add	x3, x3, #0x1b6
  407c60:	add	x4, x4, #0x98c
  407c64:	sub	x5, x29, #0x18
  407c68:	add	x7, sp, #0x4
  407c6c:	mov	w6, #0x62                  	// #98
  407c70:	mov	x0, x19
  407c74:	bl	403da8 <sd_bus_get_property_trivial@plt>
  407c78:	tbnz	w0, #31, 407ea4 <ascii_strlower_n@plt+0x3a9c>
  407c7c:	bl	403be8 <colors_enabled@plt>
  407c80:	ldr	w8, [sp, #4]
  407c84:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407c88:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407c8c:	add	x22, x22, #0x9c
  407c90:	add	x23, x23, #0xda0
  407c94:	tst	w0, #0x1
  407c98:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407c9c:	adrp	x10, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407ca0:	csel	x20, x23, x22, ne  // ne = any
  407ca4:	add	x9, x9, #0xe5d
  407ca8:	add	x10, x10, #0xe61
  407cac:	cmp	w8, #0x0
  407cb0:	csel	x21, x10, x9, eq  // eq = none
  407cb4:	bl	403be8 <colors_enabled@plt>
  407cb8:	adrp	x24, 41a000 <ascii_strlower_n@plt+0x15bf8>
  407cbc:	add	x24, x24, #0xdaa
  407cc0:	tst	w0, #0x1
  407cc4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407cc8:	csel	x3, x24, x22, ne  // ne = any
  407ccc:	add	x0, x0, #0xb31
  407cd0:	mov	x1, x20
  407cd4:	mov	x2, x21
  407cd8:	bl	403a58 <printf@plt>
  407cdc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407ce0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407ce4:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407ce8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407cec:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407cf0:	add	x1, x1, #0xa4e
  407cf4:	add	x2, x2, #0xef9
  407cf8:	add	x3, x3, #0x1b6
  407cfc:	add	x4, x4, #0xb5f
  407d00:	add	x7, x7, #0xb75
  407d04:	sub	x5, x29, #0x18
  407d08:	sub	x6, x29, #0x20
  407d0c:	mov	x0, x19
  407d10:	bl	403db8 <sd_bus_get_property@plt>
  407d14:	tbnz	w0, #31, 407eec <ascii_strlower_n@plt+0x3ae4>
  407d18:	ldur	x0, [x29, #-32]
  407d1c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407d20:	add	x1, x1, #0xb75
  407d24:	sub	x2, x29, #0x28
  407d28:	sub	x3, x29, #0x30
  407d2c:	bl	403d08 <sd_bus_message_read@plt>
  407d30:	tbnz	w0, #31, 407f34 <ascii_strlower_n@plt+0x3b2c>
  407d34:	bl	403be8 <colors_enabled@plt>
  407d38:	tst	w0, #0x1
  407d3c:	csel	x20, x23, x22, ne  // ne = any
  407d40:	bl	403be8 <colors_enabled@plt>
  407d44:	ldp	x4, x3, [x29, #-48]
  407d48:	tst	w0, #0x1
  407d4c:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407d50:	csel	x2, x24, x22, ne  // ne = any
  407d54:	add	x0, x0, #0xba3
  407d58:	mov	x1, x20
  407d5c:	bl	403a58 <printf@plt>
  407d60:	ldur	x0, [x29, #-32]
  407d64:	bl	403d88 <sd_bus_message_unref@plt>
  407d68:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407d6c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407d70:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407d74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407d78:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407d7c:	stur	x0, [x29, #-32]
  407d80:	add	x1, x1, #0xa4e
  407d84:	add	x2, x2, #0xef9
  407d88:	add	x3, x3, #0x1b6
  407d8c:	add	x4, x4, #0xbe9
  407d90:	add	x7, x7, #0xbf9
  407d94:	sub	x5, x29, #0x18
  407d98:	sub	x6, x29, #0x20
  407d9c:	mov	x0, x19
  407da0:	bl	403db8 <sd_bus_get_property@plt>
  407da4:	tbnz	w0, #31, 407f6c <ascii_strlower_n@plt+0x3b64>
  407da8:	ldur	x0, [x29, #-32]
  407dac:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407db0:	add	x1, x1, #0xbf9
  407db4:	add	x2, sp, #0x38
  407db8:	add	x3, sp, #0x30
  407dbc:	add	x4, sp, #0x28
  407dc0:	bl	403d08 <sd_bus_message_read@plt>
  407dc4:	tbnz	w0, #31, 407fbc <ascii_strlower_n@plt+0x3bb4>
  407dc8:	bl	403be8 <colors_enabled@plt>
  407dcc:	tst	w0, #0x1
  407dd0:	csel	x20, x23, x22, ne  // ne = any
  407dd4:	bl	403be8 <colors_enabled@plt>
  407dd8:	ldp	x4, x3, [sp, #48]
  407ddc:	ldr	x5, [sp, #40]
  407de0:	tst	w0, #0x1
  407de4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407de8:	csel	x2, x24, x22, ne  // ne = any
  407dec:	add	x0, x0, #0xc22
  407df0:	mov	x1, x20
  407df4:	bl	403a58 <printf@plt>
  407df8:	ldur	x0, [x29, #-32]
  407dfc:	bl	403d88 <sd_bus_message_unref@plt>
  407e00:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407e04:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  407e08:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407e0c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407e10:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407e14:	stur	x0, [x29, #-32]
  407e18:	add	x1, x1, #0xa4e
  407e1c:	add	x2, x2, #0xef9
  407e20:	add	x3, x3, #0x1b6
  407e24:	add	x4, x4, #0xc7c
  407e28:	add	x7, x7, #0xc8d
  407e2c:	sub	x5, x29, #0x18
  407e30:	sub	x6, x29, #0x20
  407e34:	mov	x0, x19
  407e38:	bl	403db8 <sd_bus_get_property@plt>
  407e3c:	tbnz	w0, #31, 408044 <ascii_strlower_n@plt+0x3c3c>
  407e40:	ldur	x0, [x29, #-32]
  407e44:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407e48:	add	x1, x1, #0xc8d
  407e4c:	add	x2, sp, #0x20
  407e50:	add	x3, sp, #0x18
  407e54:	add	x4, sp, #0x10
  407e58:	add	x5, sp, #0x8
  407e5c:	bl	403d08 <sd_bus_message_read@plt>
  407e60:	tbnz	w0, #31, 408090 <ascii_strlower_n@plt+0x3c88>
  407e64:	bl	403be8 <colors_enabled@plt>
  407e68:	tst	w0, #0x1
  407e6c:	csel	x19, x23, x22, ne  // ne = any
  407e70:	bl	403be8 <colors_enabled@plt>
  407e74:	ldp	x4, x3, [sp, #24]
  407e78:	ldp	x6, x5, [sp, #8]
  407e7c:	tst	w0, #0x1
  407e80:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407e84:	csel	x2, x24, x22, ne  // ne = any
  407e88:	add	x0, x0, #0xcb8
  407e8c:	mov	x1, x19
  407e90:	bl	403a58 <printf@plt>
  407e94:	mov	w19, wzr
  407e98:	ldur	x0, [x29, #-32]
  407e9c:	cbnz	x0, 40801c <ascii_strlower_n@plt+0x3c14>
  407ea0:	b	408020 <ascii_strlower_n@plt+0x3c18>
  407ea4:	mov	w20, w0
  407ea8:	mov	w0, wzr
  407eac:	bl	4039a8 <log_get_max_level_realm@plt>
  407eb0:	cmp	w0, #0x3
  407eb4:	b.lt	408008 <ascii_strlower_n@plt+0x3c00>  // b.tstop
  407eb8:	sub	x0, x29, #0x18
  407ebc:	mov	w1, w20
  407ec0:	bl	403d68 <bus_error_message@plt>
  407ec4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407ec8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407ecc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407ed0:	mov	x6, x0
  407ed4:	add	x2, x2, #0xfaf
  407ed8:	add	x4, x4, #0xaf8
  407edc:	add	x5, x5, #0xb08
  407ee0:	mov	w0, #0x3                   	// #3
  407ee4:	mov	w3, #0x3eb                 	// #1003
  407ee8:	b	407fb0 <ascii_strlower_n@plt+0x3ba8>
  407eec:	mov	w20, w0
  407ef0:	mov	w0, wzr
  407ef4:	bl	4039a8 <log_get_max_level_realm@plt>
  407ef8:	cmp	w0, #0x3
  407efc:	b.lt	408008 <ascii_strlower_n@plt+0x3c00>  // b.tstop
  407f00:	sub	x0, x29, #0x18
  407f04:	mov	w1, w20
  407f08:	bl	403d68 <bus_error_message@plt>
  407f0c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407f10:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f14:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f18:	mov	x6, x0
  407f1c:	add	x2, x2, #0xfaf
  407f20:	add	x4, x4, #0xaf8
  407f24:	add	x5, x5, #0xb7a
  407f28:	mov	w0, #0x3                   	// #3
  407f2c:	mov	w3, #0x3fb                 	// #1019
  407f30:	b	407fb0 <ascii_strlower_n@plt+0x3ba8>
  407f34:	mov	w20, w0
  407f38:	mov	w0, wzr
  407f3c:	bl	4039a8 <log_get_max_level_realm@plt>
  407f40:	cmp	w0, #0x3
  407f44:	b.lt	408008 <ascii_strlower_n@plt+0x3c00>  // b.tstop
  407f48:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407f4c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f50:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f54:	add	x2, x2, #0xfaf
  407f58:	add	x4, x4, #0xaf8
  407f5c:	add	x5, x5, #0x230
  407f60:	mov	w0, #0x3                   	// #3
  407f64:	mov	w3, #0x401                 	// #1025
  407f68:	b	407ff0 <ascii_strlower_n@plt+0x3be8>
  407f6c:	mov	w20, w0
  407f70:	mov	w0, wzr
  407f74:	bl	4039a8 <log_get_max_level_realm@plt>
  407f78:	cmp	w0, #0x3
  407f7c:	b.lt	408008 <ascii_strlower_n@plt+0x3c00>  // b.tstop
  407f80:	sub	x0, x29, #0x18
  407f84:	mov	w1, w20
  407f88:	bl	403d68 <bus_error_message@plt>
  407f8c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407f90:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f94:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407f98:	mov	x6, x0
  407f9c:	add	x2, x2, #0xfaf
  407fa0:	add	x4, x4, #0xaf8
  407fa4:	add	x5, x5, #0xbff
  407fa8:	mov	w0, #0x3                   	// #3
  407fac:	mov	w3, #0x416                 	// #1046
  407fb0:	mov	w1, w20
  407fb4:	bl	4039b8 <log_internal_realm@plt>
  407fb8:	b	407ff8 <ascii_strlower_n@plt+0x3bf0>
  407fbc:	mov	w20, w0
  407fc0:	mov	w0, wzr
  407fc4:	bl	4039a8 <log_get_max_level_realm@plt>
  407fc8:	cmp	w0, #0x3
  407fcc:	b.lt	408008 <ascii_strlower_n@plt+0x3c00>  // b.tstop
  407fd0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  407fd4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407fd8:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  407fdc:	add	x2, x2, #0xfaf
  407fe0:	add	x4, x4, #0xaf8
  407fe4:	add	x5, x5, #0x230
  407fe8:	mov	w0, #0x3                   	// #3
  407fec:	mov	w3, #0x41d                 	// #1053
  407ff0:	mov	w1, w20
  407ff4:	bl	4039b8 <log_internal_realm@plt>
  407ff8:	mov	w19, w0
  407ffc:	ldur	x0, [x29, #-32]
  408000:	cbnz	x0, 40801c <ascii_strlower_n@plt+0x3c14>
  408004:	b	408020 <ascii_strlower_n@plt+0x3c18>
  408008:	mov	w8, wzr
  40800c:	neg	w9, w20
  408010:	sub	w19, w8, w9, uxtb
  408014:	ldur	x0, [x29, #-32]
  408018:	cbz	x0, 408020 <ascii_strlower_n@plt+0x3c18>
  40801c:	bl	403d88 <sd_bus_message_unref@plt>
  408020:	sub	x0, x29, #0x18
  408024:	bl	403d78 <sd_bus_error_free@plt>
  408028:	mov	w0, w19
  40802c:	ldp	x20, x19, [sp, #160]
  408030:	ldp	x22, x21, [sp, #144]
  408034:	ldp	x24, x23, [sp, #128]
  408038:	ldp	x29, x30, [sp, #112]
  40803c:	add	sp, sp, #0xb0
  408040:	ret
  408044:	mov	w19, w0
  408048:	mov	w0, wzr
  40804c:	bl	4039a8 <log_get_max_level_realm@plt>
  408050:	cmp	w0, #0x3
  408054:	b.lt	4080cc <ascii_strlower_n@plt+0x3cc4>  // b.tstop
  408058:	sub	x0, x29, #0x18
  40805c:	mov	w1, w19
  408060:	bl	403d68 <bus_error_message@plt>
  408064:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408068:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40806c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408070:	mov	x6, x0
  408074:	add	x2, x2, #0xfaf
  408078:	add	x4, x4, #0xaf8
  40807c:	add	x5, x5, #0xc94
  408080:	mov	w0, #0x3                   	// #3
  408084:	mov	w3, #0x434                 	// #1076
  408088:	mov	w1, w19
  40808c:	b	407fb4 <ascii_strlower_n@plt+0x3bac>
  408090:	mov	w19, w0
  408094:	mov	w0, wzr
  408098:	bl	4039a8 <log_get_max_level_realm@plt>
  40809c:	cmp	w0, #0x3
  4080a0:	b.lt	4080cc <ascii_strlower_n@plt+0x3cc4>  // b.tstop
  4080a4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4080a8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4080ac:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4080b0:	add	x2, x2, #0xfaf
  4080b4:	add	x4, x4, #0xaf8
  4080b8:	add	x5, x5, #0x230
  4080bc:	mov	w0, #0x3                   	// #3
  4080c0:	mov	w3, #0x43c                 	// #1084
  4080c4:	mov	w1, w19
  4080c8:	b	407ff4 <ascii_strlower_n@plt+0x3bec>
  4080cc:	mov	w8, wzr
  4080d0:	neg	w9, w19
  4080d4:	b	408010 <ascii_strlower_n@plt+0x3c08>
  4080d8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4080dc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4080e0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4080e4:	add	x1, x1, #0x99c
  4080e8:	add	x2, x2, #0xfaf
  4080ec:	add	x4, x4, #0xace
  4080f0:	mov	w3, #0x3e0                 	// #992
  4080f4:	mov	w0, wzr
  4080f8:	bl	403a98 <log_assert_failed_realm@plt>
  4080fc:	sub	sp, sp, #0x40
  408100:	mov	x0, x2
  408104:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408108:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40810c:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408110:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408114:	add	x1, x1, #0xa4e
  408118:	add	x2, x2, #0xef9
  40811c:	add	x3, x3, #0x1b6
  408120:	add	x4, x4, #0xd36
  408124:	add	x5, sp, #0x8
  408128:	mov	x6, xzr
  40812c:	mov	x7, xzr
  408130:	stp	x29, x30, [sp, #32]
  408134:	str	x19, [sp, #48]
  408138:	add	x29, sp, #0x20
  40813c:	stp	xzr, xzr, [sp, #8]
  408140:	str	xzr, [sp, #24]
  408144:	bl	403dc8 <sd_bus_call_method@plt>
  408148:	tbnz	w0, #31, 408154 <ascii_strlower_n@plt+0x3d4c>
  40814c:	mov	w19, wzr
  408150:	b	4081b4 <ascii_strlower_n@plt+0x3dac>
  408154:	mov	w19, w0
  408158:	mov	w0, wzr
  40815c:	bl	4039a8 <log_get_max_level_realm@plt>
  408160:	cmp	w0, #0x3
  408164:	b.lt	4081a8 <ascii_strlower_n@plt+0x3da0>  // b.tstop
  408168:	add	x0, sp, #0x8
  40816c:	mov	w1, w19
  408170:	bl	403d68 <bus_error_message@plt>
  408174:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408178:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40817c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408180:	mov	x6, x0
  408184:	add	x2, x2, #0xfaf
  408188:	add	x4, x4, #0xd46
  40818c:	add	x5, x5, #0xd57
  408190:	mov	w0, #0x3                   	// #3
  408194:	mov	w3, #0x45b                 	// #1115
  408198:	mov	w1, w19
  40819c:	bl	4039b8 <log_internal_realm@plt>
  4081a0:	mov	w19, w0
  4081a4:	b	4081b4 <ascii_strlower_n@plt+0x3dac>
  4081a8:	mov	w8, wzr
  4081ac:	neg	w9, w19
  4081b0:	sub	w19, w8, w9, uxtb
  4081b4:	add	x0, sp, #0x8
  4081b8:	bl	403d78 <sd_bus_error_free@plt>
  4081bc:	mov	w0, w19
  4081c0:	ldr	x19, [sp, #48]
  4081c4:	ldp	x29, x30, [sp, #32]
  4081c8:	add	sp, sp, #0x40
  4081cc:	ret
  4081d0:	sub	sp, sp, #0x40
  4081d4:	mov	x0, x2
  4081d8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4081dc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4081e0:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4081e4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4081e8:	add	x1, x1, #0xa4e
  4081ec:	add	x2, x2, #0xef9
  4081f0:	add	x3, x3, #0x1b6
  4081f4:	add	x4, x4, #0xd76
  4081f8:	add	x5, sp, #0x8
  4081fc:	mov	x6, xzr
  408200:	mov	x7, xzr
  408204:	stp	x29, x30, [sp, #32]
  408208:	str	x19, [sp, #48]
  40820c:	add	x29, sp, #0x20
  408210:	stp	xzr, xzr, [sp, #8]
  408214:	str	xzr, [sp, #24]
  408218:	bl	403dc8 <sd_bus_call_method@plt>
  40821c:	tbnz	w0, #31, 408228 <ascii_strlower_n@plt+0x3e20>
  408220:	mov	w19, wzr
  408224:	b	408288 <ascii_strlower_n@plt+0x3e80>
  408228:	mov	w19, w0
  40822c:	mov	w0, wzr
  408230:	bl	4039a8 <log_get_max_level_realm@plt>
  408234:	cmp	w0, #0x3
  408238:	b.lt	40827c <ascii_strlower_n@plt+0x3e74>  // b.tstop
  40823c:	add	x0, sp, #0x8
  408240:	mov	w1, w19
  408244:	bl	403d68 <bus_error_message@plt>
  408248:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40824c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408250:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408254:	mov	x6, x0
  408258:	add	x2, x2, #0xfaf
  40825c:	add	x4, x4, #0xd82
  408260:	add	x5, x5, #0xd8f
  408264:	mov	w0, #0x3                   	// #3
  408268:	mov	w3, #0x46e                 	// #1134
  40826c:	mov	w1, w19
  408270:	bl	4039b8 <log_internal_realm@plt>
  408274:	mov	w19, w0
  408278:	b	408288 <ascii_strlower_n@plt+0x3e80>
  40827c:	mov	w8, wzr
  408280:	neg	w9, w19
  408284:	sub	w19, w8, w9, uxtb
  408288:	add	x0, sp, #0x8
  40828c:	bl	403d78 <sd_bus_error_free@plt>
  408290:	mov	w0, w19
  408294:	ldr	x19, [sp, #48]
  408298:	ldp	x29, x30, [sp, #32]
  40829c:	add	sp, sp, #0x40
  4082a0:	ret
  4082a4:	sub	sp, sp, #0x40
  4082a8:	mov	x0, x2
  4082ac:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4082b0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4082b4:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4082b8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4082bc:	add	x1, x1, #0xa4e
  4082c0:	add	x2, x2, #0xef9
  4082c4:	add	x3, x3, #0x1b6
  4082c8:	add	x4, x4, #0xdaa
  4082cc:	add	x5, sp, #0x8
  4082d0:	mov	x6, xzr
  4082d4:	mov	x7, xzr
  4082d8:	stp	x29, x30, [sp, #32]
  4082dc:	str	x19, [sp, #48]
  4082e0:	add	x29, sp, #0x20
  4082e4:	stp	xzr, xzr, [sp, #8]
  4082e8:	str	xzr, [sp, #24]
  4082ec:	bl	403dc8 <sd_bus_call_method@plt>
  4082f0:	tbnz	w0, #31, 4082fc <ascii_strlower_n@plt+0x3ef4>
  4082f4:	mov	w19, wzr
  4082f8:	b	40835c <ascii_strlower_n@plt+0x3f54>
  4082fc:	mov	w19, w0
  408300:	mov	w0, wzr
  408304:	bl	4039a8 <log_get_max_level_realm@plt>
  408308:	cmp	w0, #0x3
  40830c:	b.lt	408350 <ascii_strlower_n@plt+0x3f48>  // b.tstop
  408310:	add	x0, sp, #0x8
  408314:	mov	w1, w19
  408318:	bl	403d68 <bus_error_message@plt>
  40831c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408320:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408324:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408328:	mov	x6, x0
  40832c:	add	x2, x2, #0xfaf
  408330:	add	x4, x4, #0xdbe
  408334:	add	x5, x5, #0xdd4
  408338:	mov	w0, #0x3                   	// #3
  40833c:	mov	w3, #0x481                 	// #1153
  408340:	mov	w1, w19
  408344:	bl	4039b8 <log_internal_realm@plt>
  408348:	mov	w19, w0
  40834c:	b	40835c <ascii_strlower_n@plt+0x3f54>
  408350:	mov	w8, wzr
  408354:	neg	w9, w19
  408358:	sub	w19, w8, w9, uxtb
  40835c:	add	x0, sp, #0x8
  408360:	bl	403d78 <sd_bus_error_free@plt>
  408364:	mov	w0, w19
  408368:	ldr	x19, [sp, #48]
  40836c:	ldp	x29, x30, [sp, #32]
  408370:	add	sp, sp, #0x40
  408374:	ret
  408378:	sub	sp, sp, #0x50
  40837c:	stp	x29, x30, [sp, #32]
  408380:	stp	x22, x21, [sp, #48]
  408384:	stp	x20, x19, [sp, #64]
  408388:	add	x29, sp, #0x20
  40838c:	stp	xzr, xzr, [sp, #8]
  408390:	str	xzr, [sp, #24]
  408394:	cbz	x2, 40851c <ascii_strlower_n@plt+0x4114>
  408398:	mov	x19, x2
  40839c:	mov	x21, x1
  4083a0:	mov	w22, w0
  4083a4:	cmp	w0, #0x1
  4083a8:	b.le	4083b8 <ascii_strlower_n@plt+0x3fb0>
  4083ac:	ldr	x0, [x21, #8]
  4083b0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4083b4:	tbnz	w0, #31, 4083f4 <ascii_strlower_n@plt+0x3fec>
  4083b8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4083bc:	ldr	w1, [x8, #56]
  4083c0:	cmp	w1, #0x1
  4083c4:	b.lt	4083e8 <ascii_strlower_n@plt+0x3fe0>  // b.tstop
  4083c8:	cmp	w22, #0x2
  4083cc:	b.gt	4083fc <ascii_strlower_n@plt+0x3ff4>
  4083d0:	mov	w3, #0x1                   	// #1
  4083d4:	mov	x0, x19
  4083d8:	mov	x2, xzr
  4083dc:	mov	x4, xzr
  4083e0:	bl	409674 <ascii_strlower_n@plt+0x526c>
  4083e4:	b	4083f4 <ascii_strlower_n@plt+0x3fec>
  4083e8:	mov	w1, #0x1                   	// #1
  4083ec:	mov	x0, x19
  4083f0:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  4083f4:	mov	w20, w0
  4083f8:	b	408430 <ascii_strlower_n@plt+0x4028>
  4083fc:	add	x21, x21, #0x10
  408400:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408404:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408408:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40840c:	add	x2, x2, #0xa4e
  408410:	add	x3, x3, #0xef9
  408414:	add	x4, x4, #0x1b6
  408418:	add	x5, sp, #0x8
  40841c:	mov	x0, x19
  408420:	mov	x1, x21
  408424:	bl	40cd88 <ascii_strlower_n@plt+0x8980>
  408428:	tbnz	w0, #31, 408450 <ascii_strlower_n@plt+0x4048>
  40842c:	mov	w20, wzr
  408430:	add	x0, sp, #0x8
  408434:	bl	403d78 <sd_bus_error_free@plt>
  408438:	mov	w0, w20
  40843c:	ldp	x20, x19, [sp, #64]
  408440:	ldp	x22, x21, [sp, #48]
  408444:	ldp	x29, x30, [sp, #32]
  408448:	add	sp, sp, #0x50
  40844c:	ret
  408450:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408454:	mov	w20, w0
  408458:	add	x1, x1, #0xe1b
  40845c:	add	x0, sp, #0x8
  408460:	bl	403dd8 <sd_bus_error_has_name@plt>
  408464:	cbz	w0, 4084a0 <ascii_strlower_n@plt+0x4098>
  408468:	add	x0, sp, #0x8
  40846c:	bl	403d78 <sd_bus_error_free@plt>
  408470:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408474:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408478:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40847c:	add	x2, x2, #0xe3d
  408480:	add	x3, x3, #0xe56
  408484:	add	x4, x4, #0xe70
  408488:	add	x5, sp, #0x8
  40848c:	mov	x0, x19
  408490:	mov	x1, x21
  408494:	bl	40cd88 <ascii_strlower_n@plt+0x8980>
  408498:	tbz	w0, #31, 40842c <ascii_strlower_n@plt+0x4024>
  40849c:	mov	w20, w0
  4084a0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4084a4:	ldrb	w8, [x8, #16]
  4084a8:	cbz	w8, 4084c0 <ascii_strlower_n@plt+0x40b8>
  4084ac:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4084b0:	add	x1, x1, #0xe91
  4084b4:	add	x0, sp, #0x8
  4084b8:	bl	403dd8 <sd_bus_error_has_name@plt>
  4084bc:	cbnz	w0, 40842c <ascii_strlower_n@plt+0x4024>
  4084c0:	mov	w0, wzr
  4084c4:	bl	4039a8 <log_get_max_level_realm@plt>
  4084c8:	cmp	w0, #0x3
  4084cc:	b.lt	40850c <ascii_strlower_n@plt+0x4104>  // b.tstop
  4084d0:	add	x0, sp, #0x8
  4084d4:	mov	w1, w20
  4084d8:	bl	403d68 <bus_error_message@plt>
  4084dc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4084e0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4084e4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4084e8:	mov	x6, x0
  4084ec:	add	x2, x2, #0xfaf
  4084f0:	add	x4, x4, #0xeb5
  4084f4:	add	x5, x5, #0xebe
  4084f8:	mov	w0, #0x3                   	// #3
  4084fc:	mov	w3, #0x796                 	// #1942
  408500:	mov	w1, w20
  408504:	bl	4039b8 <log_internal_realm@plt>
  408508:	b	4083f4 <ascii_strlower_n@plt+0x3fec>
  40850c:	mov	w8, wzr
  408510:	neg	w9, w20
  408514:	sub	w20, w8, w9, uxtb
  408518:	b	408430 <ascii_strlower_n@plt+0x4028>
  40851c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408520:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408524:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408528:	add	x1, x1, #0x99c
  40852c:	add	x2, x2, #0xfaf
  408530:	add	x4, x4, #0xdf8
  408534:	mov	w3, #0x775                 	// #1909
  408538:	mov	w0, wzr
  40853c:	bl	403a98 <log_assert_failed_realm@plt>
  408540:	sub	sp, sp, #0x50
  408544:	stp	x29, x30, [sp, #32]
  408548:	stp	x22, x21, [sp, #48]
  40854c:	stp	x20, x19, [sp, #64]
  408550:	add	x29, sp, #0x20
  408554:	stp	xzr, xzr, [sp, #8]
  408558:	str	xzr, [sp, #24]
  40855c:	cbz	x2, 4086e4 <ascii_strlower_n@plt+0x42dc>
  408560:	mov	x19, x2
  408564:	mov	x21, x1
  408568:	mov	w22, w0
  40856c:	cmp	w0, #0x1
  408570:	b.le	408580 <ascii_strlower_n@plt+0x4178>
  408574:	ldr	x0, [x21, #8]
  408578:	bl	404d5c <ascii_strlower_n@plt+0x954>
  40857c:	tbnz	w0, #31, 4085bc <ascii_strlower_n@plt+0x41b4>
  408580:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408584:	ldr	w1, [x8, #56]
  408588:	cmp	w1, #0x1
  40858c:	b.lt	4085b0 <ascii_strlower_n@plt+0x41a8>  // b.tstop
  408590:	cmp	w22, #0x2
  408594:	b.gt	4085c4 <ascii_strlower_n@plt+0x41bc>
  408598:	mov	w3, #0x2                   	// #2
  40859c:	mov	x0, x19
  4085a0:	mov	x2, xzr
  4085a4:	mov	x4, xzr
  4085a8:	bl	409674 <ascii_strlower_n@plt+0x526c>
  4085ac:	b	4085bc <ascii_strlower_n@plt+0x41b4>
  4085b0:	mov	w1, #0x2                   	// #2
  4085b4:	mov	x0, x19
  4085b8:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  4085bc:	mov	w20, w0
  4085c0:	b	4085f8 <ascii_strlower_n@plt+0x41f0>
  4085c4:	add	x21, x21, #0x10
  4085c8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4085cc:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4085d0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4085d4:	add	x2, x2, #0xa4e
  4085d8:	add	x3, x3, #0xef9
  4085dc:	add	x4, x4, #0x1b6
  4085e0:	add	x5, sp, #0x8
  4085e4:	mov	x0, x19
  4085e8:	mov	x1, x21
  4085ec:	bl	40d184 <ascii_strlower_n@plt+0x8d7c>
  4085f0:	tbnz	w0, #31, 408618 <ascii_strlower_n@plt+0x4210>
  4085f4:	mov	w20, wzr
  4085f8:	add	x0, sp, #0x8
  4085fc:	bl	403d78 <sd_bus_error_free@plt>
  408600:	mov	w0, w20
  408604:	ldp	x20, x19, [sp, #64]
  408608:	ldp	x22, x21, [sp, #48]
  40860c:	ldp	x29, x30, [sp, #32]
  408610:	add	sp, sp, #0x50
  408614:	ret
  408618:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40861c:	mov	w20, w0
  408620:	add	x1, x1, #0xe1b
  408624:	add	x0, sp, #0x8
  408628:	bl	403dd8 <sd_bus_error_has_name@plt>
  40862c:	cbz	w0, 408668 <ascii_strlower_n@plt+0x4260>
  408630:	add	x0, sp, #0x8
  408634:	bl	403d78 <sd_bus_error_free@plt>
  408638:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40863c:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408640:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408644:	add	x2, x2, #0xe3d
  408648:	add	x3, x3, #0xe56
  40864c:	add	x4, x4, #0xe70
  408650:	add	x5, sp, #0x8
  408654:	mov	x0, x19
  408658:	mov	x1, x21
  40865c:	bl	40d184 <ascii_strlower_n@plt+0x8d7c>
  408660:	tbz	w0, #31, 4085f4 <ascii_strlower_n@plt+0x41ec>
  408664:	mov	w20, w0
  408668:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40866c:	ldrb	w8, [x8, #16]
  408670:	cbz	w8, 408688 <ascii_strlower_n@plt+0x4280>
  408674:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408678:	add	x1, x1, #0xe91
  40867c:	add	x0, sp, #0x8
  408680:	bl	403dd8 <sd_bus_error_has_name@plt>
  408684:	cbnz	w0, 4085f4 <ascii_strlower_n@plt+0x41ec>
  408688:	mov	w0, wzr
  40868c:	bl	4039a8 <log_get_max_level_realm@plt>
  408690:	cmp	w0, #0x3
  408694:	b.lt	4086d4 <ascii_strlower_n@plt+0x42cc>  // b.tstop
  408698:	add	x0, sp, #0x8
  40869c:	mov	w1, w20
  4086a0:	bl	403d68 <bus_error_message@plt>
  4086a4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4086a8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4086ac:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4086b0:	mov	x6, x0
  4086b4:	add	x2, x2, #0xfaf
  4086b8:	add	x4, x4, #0xf43
  4086bc:	add	x5, x5, #0xf4f
  4086c0:	mov	w0, #0x3                   	// #3
  4086c4:	mov	w3, #0x7f5                 	// #2037
  4086c8:	mov	w1, w20
  4086cc:	bl	4039b8 <log_internal_realm@plt>
  4086d0:	b	4085bc <ascii_strlower_n@plt+0x41b4>
  4086d4:	mov	w8, wzr
  4086d8:	neg	w9, w20
  4086dc:	sub	w20, w8, w9, uxtb
  4086e0:	b	4085f8 <ascii_strlower_n@plt+0x41f0>
  4086e4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4086e8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4086ec:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4086f0:	add	x1, x1, #0x99c
  4086f4:	add	x2, x2, #0xfaf
  4086f8:	add	x4, x4, #0xf1d
  4086fc:	mov	w3, #0x7d4                 	// #2004
  408700:	mov	w0, wzr
  408704:	bl	403a98 <log_assert_failed_realm@plt>
  408708:	sub	sp, sp, #0x70
  40870c:	stp	x29, x30, [sp, #48]
  408710:	stp	x24, x23, [sp, #64]
  408714:	stp	x22, x21, [sp, #80]
  408718:	stp	x20, x19, [sp, #96]
  40871c:	add	x29, sp, #0x30
  408720:	stp	xzr, xzr, [sp, #24]
  408724:	str	xzr, [sp, #40]
  408728:	cbz	x2, 408954 <ascii_strlower_n@plt+0x454c>
  40872c:	mov	x19, x2
  408730:	mov	x22, x1
  408734:	mov	w23, w0
  408738:	cmp	w0, #0x1
  40873c:	b.le	40874c <ascii_strlower_n@plt+0x4344>
  408740:	ldr	x0, [x22, #8]
  408744:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408748:	tbnz	w0, #31, 4087f8 <ascii_strlower_n@plt+0x43f0>
  40874c:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408750:	ldr	w21, [x24, #56]
  408754:	cmp	w21, #0x1
  408758:	b.lt	408784 <ascii_strlower_n@plt+0x437c>  // b.tstop
  40875c:	cmp	w23, #0x2
  408760:	b.gt	408798 <ascii_strlower_n@plt+0x4390>
  408764:	mov	w3, #0x3                   	// #3
  408768:	mov	x0, x19
  40876c:	mov	w1, w21
  408770:	mov	x2, xzr
  408774:	mov	x4, xzr
  408778:	bl	409674 <ascii_strlower_n@plt+0x526c>
  40877c:	mov	w20, w0
  408780:	b	408924 <ascii_strlower_n@plt+0x451c>
  408784:	mov	w1, #0x3                   	// #3
  408788:	mov	x0, x19
  40878c:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  408790:	mov	w20, w0
  408794:	b	408924 <ascii_strlower_n@plt+0x451c>
  408798:	ldr	x22, [x22, #16]
  40879c:	mov	x0, x22
  4087a0:	bl	403b48 <parse_boolean@plt>
  4087a4:	mov	w20, w0
  4087a8:	tbnz	w0, #31, 408800 <ascii_strlower_n@plt+0x43f8>
  4087ac:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4087b0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4087b4:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4087b8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4087bc:	adrp	x7, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4087c0:	add	x1, x1, #0xa4e
  4087c4:	add	x2, x2, #0xef9
  4087c8:	add	x3, x3, #0x1b6
  4087cc:	add	x4, x4, #0x36
  4087d0:	add	x7, x7, #0x4a
  4087d4:	add	x5, sp, #0x18
  4087d8:	mov	x0, x19
  4087dc:	mov	x6, xzr
  4087e0:	str	w20, [sp, #8]
  4087e4:	str	w21, [sp]
  4087e8:	bl	403dc8 <sd_bus_call_method@plt>
  4087ec:	tbnz	w0, #31, 408844 <ascii_strlower_n@plt+0x443c>
  4087f0:	mov	w20, wzr
  4087f4:	b	408924 <ascii_strlower_n@plt+0x451c>
  4087f8:	mov	w20, w0
  4087fc:	b	408924 <ascii_strlower_n@plt+0x451c>
  408800:	mov	w0, wzr
  408804:	bl	4039a8 <log_get_max_level_realm@plt>
  408808:	cmp	w0, #0x3
  40880c:	b.lt	408918 <ascii_strlower_n@plt+0x4510>  // b.tstop
  408810:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408814:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408818:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40881c:	add	x2, x2, #0xfaf
  408820:	add	x4, x4, #0xffe
  408824:	add	x5, x5, #0x11
  408828:	mov	w0, #0x3                   	// #3
  40882c:	mov	w3, #0x810                 	// #2064
  408830:	mov	w1, w20
  408834:	mov	x6, x22
  408838:	bl	4039b8 <log_internal_realm@plt>
  40883c:	mov	w20, w0
  408840:	b	408924 <ascii_strlower_n@plt+0x451c>
  408844:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408848:	mov	w21, w0
  40884c:	add	x1, x1, #0xe1b
  408850:	add	x0, sp, #0x18
  408854:	bl	403dd8 <sd_bus_error_has_name@plt>
  408858:	cbz	w0, 4088b0 <ascii_strlower_n@plt+0x44a8>
  40885c:	add	x0, sp, #0x18
  408860:	bl	403d78 <sd_bus_error_free@plt>
  408864:	ldr	w8, [x24, #56]
  408868:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40886c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408870:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408874:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408878:	adrp	x7, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40887c:	add	x1, x1, #0xe3d
  408880:	add	x2, x2, #0xe56
  408884:	add	x3, x3, #0xe70
  408888:	add	x4, x4, #0x36
  40888c:	add	x7, x7, #0x4a
  408890:	add	x5, sp, #0x18
  408894:	mov	x0, x19
  408898:	mov	x6, xzr
  40889c:	str	w20, [sp, #8]
  4088a0:	str	w8, [sp]
  4088a4:	bl	403dc8 <sd_bus_call_method@plt>
  4088a8:	tbz	w0, #31, 4087f0 <ascii_strlower_n@plt+0x43e8>
  4088ac:	mov	w21, w0
  4088b0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4088b4:	ldrb	w8, [x8, #16]
  4088b8:	cbz	w8, 4088d0 <ascii_strlower_n@plt+0x44c8>
  4088bc:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4088c0:	add	x1, x1, #0xe91
  4088c4:	add	x0, sp, #0x18
  4088c8:	bl	403dd8 <sd_bus_error_has_name@plt>
  4088cc:	cbnz	w0, 4087f0 <ascii_strlower_n@plt+0x43e8>
  4088d0:	mov	w0, wzr
  4088d4:	bl	4039a8 <log_get_max_level_realm@plt>
  4088d8:	cmp	w0, #0x3
  4088dc:	b.lt	408948 <ascii_strlower_n@plt+0x4540>  // b.tstop
  4088e0:	add	x0, sp, #0x18
  4088e4:	mov	w1, w21
  4088e8:	bl	403d68 <bus_error_message@plt>
  4088ec:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4088f0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4088f4:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4088f8:	mov	x6, x0
  4088fc:	add	x2, x2, #0xfaf
  408900:	add	x4, x4, #0xffe
  408904:	add	x5, x5, #0x4d
  408908:	mov	w0, #0x3                   	// #3
  40890c:	mov	w3, #0x82d                 	// #2093
  408910:	mov	w1, w21
  408914:	b	408838 <ascii_strlower_n@plt+0x4430>
  408918:	mov	w8, wzr
  40891c:	neg	w9, w20
  408920:	sub	w20, w8, w9, uxtb
  408924:	add	x0, sp, #0x18
  408928:	bl	403d78 <sd_bus_error_free@plt>
  40892c:	mov	w0, w20
  408930:	ldp	x20, x19, [sp, #96]
  408934:	ldp	x22, x21, [sp, #80]
  408938:	ldp	x24, x23, [sp, #64]
  40893c:	ldp	x29, x30, [sp, #48]
  408940:	add	sp, sp, #0x70
  408944:	ret
  408948:	mov	w8, wzr
  40894c:	neg	w9, w21
  408950:	b	408920 <ascii_strlower_n@plt+0x4518>
  408954:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408958:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40895c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408960:	add	x1, x1, #0x99c
  408964:	add	x2, x2, #0xfaf
  408968:	add	x4, x4, #0xfd1
  40896c:	mov	w3, #0x800                 	// #2048
  408970:	mov	w0, wzr
  408974:	bl	403a98 <log_assert_failed_realm@plt>
  408978:	sub	sp, sp, #0x70
  40897c:	stp	x29, x30, [sp, #48]
  408980:	str	x23, [sp, #64]
  408984:	stp	x22, x21, [sp, #80]
  408988:	stp	x20, x19, [sp, #96]
  40898c:	add	x29, sp, #0x30
  408990:	stp	xzr, xzr, [sp, #24]
  408994:	str	xzr, [sp, #40]
  408998:	cbz	x2, 408b60 <ascii_strlower_n@plt+0x4758>
  40899c:	mov	x19, x2
  4089a0:	mov	x20, x1
  4089a4:	mov	w22, w0
  4089a8:	cmp	w0, #0x1
  4089ac:	b.le	4089bc <ascii_strlower_n@plt+0x45b4>
  4089b0:	ldr	x0, [x20, #8]
  4089b4:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4089b8:	tbnz	w0, #31, 4089f8 <ascii_strlower_n@plt+0x45f0>
  4089bc:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4089c0:	ldr	w1, [x23, #56]
  4089c4:	cmp	w1, #0x1
  4089c8:	b.lt	4089ec <ascii_strlower_n@plt+0x45e4>  // b.tstop
  4089cc:	cmp	w22, #0x2
  4089d0:	b.gt	408a00 <ascii_strlower_n@plt+0x45f8>
  4089d4:	mov	w3, #0x4                   	// #4
  4089d8:	mov	x0, x19
  4089dc:	mov	x2, xzr
  4089e0:	mov	x4, xzr
  4089e4:	bl	409674 <ascii_strlower_n@plt+0x526c>
  4089e8:	b	4089f8 <ascii_strlower_n@plt+0x45f0>
  4089ec:	mov	w1, #0x4                   	// #4
  4089f0:	mov	x0, x19
  4089f4:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  4089f8:	mov	w21, w0
  4089fc:	b	408a50 <ascii_strlower_n@plt+0x4648>
  408a00:	ldr	x8, [x20, #16]
  408a04:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408a08:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408a0c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408a10:	str	x8, [sp, #8]
  408a14:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408a18:	add	x8, x8, #0xa4e
  408a1c:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408a20:	add	x2, x2, #0xef9
  408a24:	add	x3, x3, #0x1b6
  408a28:	add	x4, x4, #0xa0
  408a2c:	add	x7, x7, #0x6bd
  408a30:	add	x5, sp, #0x18
  408a34:	str	w1, [sp]
  408a38:	mov	x0, x19
  408a3c:	mov	x1, x8
  408a40:	mov	x6, xzr
  408a44:	bl	403dc8 <sd_bus_call_method@plt>
  408a48:	tbnz	w0, #31, 408a74 <ascii_strlower_n@plt+0x466c>
  408a4c:	mov	w21, wzr
  408a50:	add	x0, sp, #0x18
  408a54:	bl	403d78 <sd_bus_error_free@plt>
  408a58:	mov	w0, w21
  408a5c:	ldp	x20, x19, [sp, #96]
  408a60:	ldp	x22, x21, [sp, #80]
  408a64:	ldr	x23, [sp, #64]
  408a68:	ldp	x29, x30, [sp, #48]
  408a6c:	add	sp, sp, #0x70
  408a70:	ret
  408a74:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408a78:	mov	w21, w0
  408a7c:	add	x1, x1, #0xe1b
  408a80:	add	x0, sp, #0x18
  408a84:	bl	403dd8 <sd_bus_error_has_name@plt>
  408a88:	cbz	w0, 408ae4 <ascii_strlower_n@plt+0x46dc>
  408a8c:	add	x0, sp, #0x18
  408a90:	bl	403d78 <sd_bus_error_free@plt>
  408a94:	ldr	w8, [x23, #56]
  408a98:	ldr	x9, [x20, #16]
  408a9c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408aa0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408aa4:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408aa8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408aac:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408ab0:	add	x1, x1, #0xe3d
  408ab4:	add	x2, x2, #0xe56
  408ab8:	add	x3, x3, #0xe70
  408abc:	add	x4, x4, #0xa0
  408ac0:	add	x7, x7, #0x6bd
  408ac4:	add	x5, sp, #0x18
  408ac8:	mov	x0, x19
  408acc:	mov	x6, xzr
  408ad0:	str	x9, [sp, #8]
  408ad4:	str	w8, [sp]
  408ad8:	bl	403dc8 <sd_bus_call_method@plt>
  408adc:	tbz	w0, #31, 408a4c <ascii_strlower_n@plt+0x4644>
  408ae0:	mov	w21, w0
  408ae4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408ae8:	ldrb	w8, [x8, #16]
  408aec:	cbz	w8, 408b04 <ascii_strlower_n@plt+0x46fc>
  408af0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408af4:	add	x1, x1, #0xe91
  408af8:	add	x0, sp, #0x18
  408afc:	bl	403dd8 <sd_bus_error_has_name@plt>
  408b00:	cbnz	w0, 408a4c <ascii_strlower_n@plt+0x4644>
  408b04:	mov	w0, wzr
  408b08:	bl	4039a8 <log_get_max_level_realm@plt>
  408b0c:	cmp	w0, #0x3
  408b10:	b.lt	408b50 <ascii_strlower_n@plt+0x4748>  // b.tstop
  408b14:	add	x0, sp, #0x18
  408b18:	mov	w1, w21
  408b1c:	bl	403d68 <bus_error_message@plt>
  408b20:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408b24:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408b28:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408b2c:	mov	x6, x0
  408b30:	add	x2, x2, #0xfaf
  408b34:	add	x4, x4, #0xad
  408b38:	add	x5, x5, #0xb8
  408b3c:	mov	w0, #0x3                   	// #3
  408b40:	mov	w3, #0x861                 	// #2145
  408b44:	mov	w1, w21
  408b48:	bl	4039b8 <log_internal_realm@plt>
  408b4c:	b	4089f8 <ascii_strlower_n@plt+0x45f0>
  408b50:	mov	w8, wzr
  408b54:	neg	w9, w21
  408b58:	sub	w21, w8, w9, uxtb
  408b5c:	b	408a50 <ascii_strlower_n@plt+0x4648>
  408b60:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408b64:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408b68:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408b6c:	add	x1, x1, #0x99c
  408b70:	add	x2, x2, #0xfaf
  408b74:	add	x4, x4, #0x7b
  408b78:	mov	w3, #0x838                 	// #2104
  408b7c:	mov	w0, wzr
  408b80:	bl	403a98 <log_assert_failed_realm@plt>
  408b84:	sub	sp, sp, #0x70
  408b88:	stp	x29, x30, [sp, #48]
  408b8c:	str	x23, [sp, #64]
  408b90:	stp	x22, x21, [sp, #80]
  408b94:	stp	x20, x19, [sp, #96]
  408b98:	add	x29, sp, #0x30
  408b9c:	stp	xzr, xzr, [sp, #24]
  408ba0:	str	xzr, [sp, #40]
  408ba4:	cbz	x2, 408d6c <ascii_strlower_n@plt+0x4964>
  408ba8:	mov	x19, x2
  408bac:	mov	x20, x1
  408bb0:	mov	w22, w0
  408bb4:	cmp	w0, #0x1
  408bb8:	b.le	408bc8 <ascii_strlower_n@plt+0x47c0>
  408bbc:	ldr	x0, [x20, #8]
  408bc0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408bc4:	tbnz	w0, #31, 408c04 <ascii_strlower_n@plt+0x47fc>
  408bc8:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408bcc:	ldr	w1, [x23, #56]
  408bd0:	cmp	w1, #0x1
  408bd4:	b.lt	408bf8 <ascii_strlower_n@plt+0x47f0>  // b.tstop
  408bd8:	cmp	w22, #0x2
  408bdc:	b.gt	408c0c <ascii_strlower_n@plt+0x4804>
  408be0:	mov	w3, #0x5                   	// #5
  408be4:	mov	x0, x19
  408be8:	mov	x2, xzr
  408bec:	mov	x4, xzr
  408bf0:	bl	409674 <ascii_strlower_n@plt+0x526c>
  408bf4:	b	408c04 <ascii_strlower_n@plt+0x47fc>
  408bf8:	mov	w1, #0x5                   	// #5
  408bfc:	mov	x0, x19
  408c00:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  408c04:	mov	w21, w0
  408c08:	b	408c5c <ascii_strlower_n@plt+0x4854>
  408c0c:	ldr	x8, [x20, #16]
  408c10:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408c14:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408c18:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408c1c:	str	x8, [sp, #8]
  408c20:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408c24:	add	x8, x8, #0xa4e
  408c28:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408c2c:	add	x2, x2, #0xef9
  408c30:	add	x3, x3, #0x1b6
  408c34:	add	x4, x4, #0x102
  408c38:	add	x7, x7, #0x6bd
  408c3c:	add	x5, sp, #0x18
  408c40:	str	w1, [sp]
  408c44:	mov	x0, x19
  408c48:	mov	x1, x8
  408c4c:	mov	x6, xzr
  408c50:	bl	403dc8 <sd_bus_call_method@plt>
  408c54:	tbnz	w0, #31, 408c80 <ascii_strlower_n@plt+0x4878>
  408c58:	mov	w21, wzr
  408c5c:	add	x0, sp, #0x18
  408c60:	bl	403d78 <sd_bus_error_free@plt>
  408c64:	mov	w0, w21
  408c68:	ldp	x20, x19, [sp, #96]
  408c6c:	ldp	x22, x21, [sp, #80]
  408c70:	ldr	x23, [sp, #64]
  408c74:	ldp	x29, x30, [sp, #48]
  408c78:	add	sp, sp, #0x70
  408c7c:	ret
  408c80:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408c84:	mov	w21, w0
  408c88:	add	x1, x1, #0xe1b
  408c8c:	add	x0, sp, #0x18
  408c90:	bl	403dd8 <sd_bus_error_has_name@plt>
  408c94:	cbz	w0, 408cf0 <ascii_strlower_n@plt+0x48e8>
  408c98:	add	x0, sp, #0x18
  408c9c:	bl	403d78 <sd_bus_error_free@plt>
  408ca0:	ldr	w8, [x23, #56]
  408ca4:	ldr	x9, [x20, #16]
  408ca8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408cac:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408cb0:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408cb4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408cb8:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408cbc:	add	x1, x1, #0xe3d
  408cc0:	add	x2, x2, #0xe56
  408cc4:	add	x3, x3, #0xe70
  408cc8:	add	x4, x4, #0x102
  408ccc:	add	x7, x7, #0x6bd
  408cd0:	add	x5, sp, #0x18
  408cd4:	mov	x0, x19
  408cd8:	mov	x6, xzr
  408cdc:	str	x9, [sp, #8]
  408ce0:	str	w8, [sp]
  408ce4:	bl	403dc8 <sd_bus_call_method@plt>
  408ce8:	tbz	w0, #31, 408c58 <ascii_strlower_n@plt+0x4850>
  408cec:	mov	w21, w0
  408cf0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408cf4:	ldrb	w8, [x8, #16]
  408cf8:	cbz	w8, 408d10 <ascii_strlower_n@plt+0x4908>
  408cfc:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408d00:	add	x1, x1, #0xe91
  408d04:	add	x0, sp, #0x18
  408d08:	bl	403dd8 <sd_bus_error_has_name@plt>
  408d0c:	cbnz	w0, 408c58 <ascii_strlower_n@plt+0x4850>
  408d10:	mov	w0, wzr
  408d14:	bl	4039a8 <log_get_max_level_realm@plt>
  408d18:	cmp	w0, #0x3
  408d1c:	b.lt	408d5c <ascii_strlower_n@plt+0x4954>  // b.tstop
  408d20:	add	x0, sp, #0x18
  408d24:	mov	w1, w21
  408d28:	bl	403d68 <bus_error_message@plt>
  408d2c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408d30:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408d34:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408d38:	mov	x6, x0
  408d3c:	add	x2, x2, #0xfaf
  408d40:	add	x4, x4, #0x116
  408d44:	add	x5, x5, #0x120
  408d48:	mov	w0, #0x3                   	// #3
  408d4c:	mov	w3, #0x895                 	// #2197
  408d50:	mov	w1, w21
  408d54:	bl	4039b8 <log_internal_realm@plt>
  408d58:	b	408c04 <ascii_strlower_n@plt+0x47fc>
  408d5c:	mov	w8, wzr
  408d60:	neg	w9, w21
  408d64:	sub	w21, w8, w9, uxtb
  408d68:	b	408c5c <ascii_strlower_n@plt+0x4854>
  408d6c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408d70:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408d74:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408d78:	add	x1, x1, #0x99c
  408d7c:	add	x2, x2, #0xfaf
  408d80:	add	x4, x4, #0xde
  408d84:	mov	w3, #0x86c                 	// #2156
  408d88:	mov	w0, wzr
  408d8c:	bl	403a98 <log_assert_failed_realm@plt>
  408d90:	sub	sp, sp, #0x70
  408d94:	stp	x29, x30, [sp, #48]
  408d98:	str	x23, [sp, #64]
  408d9c:	stp	x22, x21, [sp, #80]
  408da0:	stp	x20, x19, [sp, #96]
  408da4:	add	x29, sp, #0x30
  408da8:	stp	xzr, xzr, [sp, #24]
  408dac:	str	xzr, [sp, #40]
  408db0:	cbz	x2, 408f78 <ascii_strlower_n@plt+0x4b70>
  408db4:	mov	x19, x2
  408db8:	mov	x20, x1
  408dbc:	mov	w22, w0
  408dc0:	cmp	w0, #0x1
  408dc4:	b.le	408dd4 <ascii_strlower_n@plt+0x49cc>
  408dc8:	ldr	x0, [x20, #8]
  408dcc:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408dd0:	tbnz	w0, #31, 408e10 <ascii_strlower_n@plt+0x4a08>
  408dd4:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408dd8:	ldr	w1, [x23, #56]
  408ddc:	cmp	w1, #0x1
  408de0:	b.lt	408e04 <ascii_strlower_n@plt+0x49fc>  // b.tstop
  408de4:	cmp	w22, #0x2
  408de8:	b.gt	408e18 <ascii_strlower_n@plt+0x4a10>
  408dec:	mov	w3, #0x6                   	// #6
  408df0:	mov	x0, x19
  408df4:	mov	x2, xzr
  408df8:	mov	x4, xzr
  408dfc:	bl	409674 <ascii_strlower_n@plt+0x526c>
  408e00:	b	408e10 <ascii_strlower_n@plt+0x4a08>
  408e04:	mov	w1, #0x6                   	// #6
  408e08:	mov	x0, x19
  408e0c:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  408e10:	mov	w21, w0
  408e14:	b	408e68 <ascii_strlower_n@plt+0x4a60>
  408e18:	ldr	x8, [x20, #16]
  408e1c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408e20:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408e24:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408e28:	str	x8, [sp, #8]
  408e2c:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408e30:	add	x8, x8, #0xa4e
  408e34:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408e38:	add	x2, x2, #0xef9
  408e3c:	add	x3, x3, #0x1b6
  408e40:	add	x4, x4, #0x179
  408e44:	add	x7, x7, #0x6bd
  408e48:	add	x5, sp, #0x18
  408e4c:	str	w1, [sp]
  408e50:	mov	x0, x19
  408e54:	mov	x1, x8
  408e58:	mov	x6, xzr
  408e5c:	bl	403dc8 <sd_bus_call_method@plt>
  408e60:	tbnz	w0, #31, 408e8c <ascii_strlower_n@plt+0x4a84>
  408e64:	mov	w21, wzr
  408e68:	add	x0, sp, #0x18
  408e6c:	bl	403d78 <sd_bus_error_free@plt>
  408e70:	mov	w0, w21
  408e74:	ldp	x20, x19, [sp, #96]
  408e78:	ldp	x22, x21, [sp, #80]
  408e7c:	ldr	x23, [sp, #64]
  408e80:	ldp	x29, x30, [sp, #48]
  408e84:	add	sp, sp, #0x70
  408e88:	ret
  408e8c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408e90:	mov	w21, w0
  408e94:	add	x1, x1, #0xe1b
  408e98:	add	x0, sp, #0x18
  408e9c:	bl	403dd8 <sd_bus_error_has_name@plt>
  408ea0:	cbz	w0, 408efc <ascii_strlower_n@plt+0x4af4>
  408ea4:	add	x0, sp, #0x18
  408ea8:	bl	403d78 <sd_bus_error_free@plt>
  408eac:	ldr	w8, [x23, #56]
  408eb0:	ldr	x9, [x20, #16]
  408eb4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408eb8:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408ebc:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408ec0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408ec4:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408ec8:	add	x1, x1, #0xe3d
  408ecc:	add	x2, x2, #0xe56
  408ed0:	add	x3, x3, #0xe70
  408ed4:	add	x4, x4, #0x179
  408ed8:	add	x7, x7, #0x6bd
  408edc:	add	x5, sp, #0x18
  408ee0:	mov	x0, x19
  408ee4:	mov	x6, xzr
  408ee8:	str	x9, [sp, #8]
  408eec:	str	w8, [sp]
  408ef0:	bl	403dc8 <sd_bus_call_method@plt>
  408ef4:	tbz	w0, #31, 408e64 <ascii_strlower_n@plt+0x4a5c>
  408ef8:	mov	w21, w0
  408efc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408f00:	ldrb	w8, [x8, #16]
  408f04:	cbz	w8, 408f1c <ascii_strlower_n@plt+0x4b14>
  408f08:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  408f0c:	add	x1, x1, #0xe91
  408f10:	add	x0, sp, #0x18
  408f14:	bl	403dd8 <sd_bus_error_has_name@plt>
  408f18:	cbnz	w0, 408e64 <ascii_strlower_n@plt+0x4a5c>
  408f1c:	mov	w0, wzr
  408f20:	bl	4039a8 <log_get_max_level_realm@plt>
  408f24:	cmp	w0, #0x3
  408f28:	b.lt	408f68 <ascii_strlower_n@plt+0x4b60>  // b.tstop
  408f2c:	add	x0, sp, #0x18
  408f30:	mov	w1, w21
  408f34:	bl	403d68 <bus_error_message@plt>
  408f38:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408f3c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408f40:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408f44:	mov	x6, x0
  408f48:	add	x2, x2, #0xfaf
  408f4c:	add	x4, x4, #0x18b
  408f50:	add	x5, x5, #0x19d
  408f54:	mov	w0, #0x3                   	// #3
  408f58:	mov	w3, #0x8c9                 	// #2249
  408f5c:	mov	w1, w21
  408f60:	bl	4039b8 <log_internal_realm@plt>
  408f64:	b	408e10 <ascii_strlower_n@plt+0x4a08>
  408f68:	mov	w8, wzr
  408f6c:	neg	w9, w21
  408f70:	sub	w21, w8, w9, uxtb
  408f74:	b	408e68 <ascii_strlower_n@plt+0x4a60>
  408f78:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  408f7c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  408f80:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  408f84:	add	x1, x1, #0x99c
  408f88:	add	x2, x2, #0xfaf
  408f8c:	add	x4, x4, #0x14d
  408f90:	mov	w3, #0x8a0                 	// #2208
  408f94:	mov	w0, wzr
  408f98:	bl	403a98 <log_assert_failed_realm@plt>
  408f9c:	sub	sp, sp, #0x70
  408fa0:	stp	x29, x30, [sp, #48]
  408fa4:	str	x23, [sp, #64]
  408fa8:	stp	x22, x21, [sp, #80]
  408fac:	stp	x20, x19, [sp, #96]
  408fb0:	add	x29, sp, #0x30
  408fb4:	stp	xzr, xzr, [sp, #24]
  408fb8:	str	xzr, [sp, #40]
  408fbc:	cbz	x2, 409184 <ascii_strlower_n@plt+0x4d7c>
  408fc0:	mov	x19, x2
  408fc4:	mov	x20, x1
  408fc8:	mov	w22, w0
  408fcc:	cmp	w0, #0x1
  408fd0:	b.le	408fe0 <ascii_strlower_n@plt+0x4bd8>
  408fd4:	ldr	x0, [x20, #8]
  408fd8:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408fdc:	tbnz	w0, #31, 40901c <ascii_strlower_n@plt+0x4c14>
  408fe0:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408fe4:	ldr	w1, [x23, #56]
  408fe8:	cmp	w1, #0x1
  408fec:	b.lt	409010 <ascii_strlower_n@plt+0x4c08>  // b.tstop
  408ff0:	cmp	w22, #0x2
  408ff4:	b.gt	409024 <ascii_strlower_n@plt+0x4c1c>
  408ff8:	mov	w3, #0x7                   	// #7
  408ffc:	mov	x0, x19
  409000:	mov	x2, xzr
  409004:	mov	x4, xzr
  409008:	bl	409674 <ascii_strlower_n@plt+0x526c>
  40900c:	b	40901c <ascii_strlower_n@plt+0x4c14>
  409010:	mov	w1, #0x7                   	// #7
  409014:	mov	x0, x19
  409018:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  40901c:	mov	w21, w0
  409020:	b	409074 <ascii_strlower_n@plt+0x4c6c>
  409024:	ldr	x8, [x20, #16]
  409028:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40902c:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409030:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409034:	str	x8, [sp, #8]
  409038:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40903c:	add	x8, x8, #0xa4e
  409040:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409044:	add	x2, x2, #0xef9
  409048:	add	x3, x3, #0x1b6
  40904c:	add	x4, x4, #0x1ee
  409050:	add	x7, x7, #0x6bd
  409054:	add	x5, sp, #0x18
  409058:	str	w1, [sp]
  40905c:	mov	x0, x19
  409060:	mov	x1, x8
  409064:	mov	x6, xzr
  409068:	bl	403dc8 <sd_bus_call_method@plt>
  40906c:	tbnz	w0, #31, 409098 <ascii_strlower_n@plt+0x4c90>
  409070:	mov	w21, wzr
  409074:	add	x0, sp, #0x18
  409078:	bl	403d78 <sd_bus_error_free@plt>
  40907c:	mov	w0, w21
  409080:	ldp	x20, x19, [sp, #96]
  409084:	ldp	x22, x21, [sp, #80]
  409088:	ldr	x23, [sp, #64]
  40908c:	ldp	x29, x30, [sp, #48]
  409090:	add	sp, sp, #0x70
  409094:	ret
  409098:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40909c:	mov	w21, w0
  4090a0:	add	x1, x1, #0xe1b
  4090a4:	add	x0, sp, #0x18
  4090a8:	bl	403dd8 <sd_bus_error_has_name@plt>
  4090ac:	cbz	w0, 409108 <ascii_strlower_n@plt+0x4d00>
  4090b0:	add	x0, sp, #0x18
  4090b4:	bl	403d78 <sd_bus_error_free@plt>
  4090b8:	ldr	w8, [x23, #56]
  4090bc:	ldr	x9, [x20, #16]
  4090c0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4090c4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4090c8:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4090cc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4090d0:	adrp	x7, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4090d4:	add	x1, x1, #0xe3d
  4090d8:	add	x2, x2, #0xe56
  4090dc:	add	x3, x3, #0xe70
  4090e0:	add	x4, x4, #0x1ee
  4090e4:	add	x7, x7, #0x6bd
  4090e8:	add	x5, sp, #0x18
  4090ec:	mov	x0, x19
  4090f0:	mov	x6, xzr
  4090f4:	str	x9, [sp, #8]
  4090f8:	str	w8, [sp]
  4090fc:	bl	403dc8 <sd_bus_call_method@plt>
  409100:	tbz	w0, #31, 409070 <ascii_strlower_n@plt+0x4c68>
  409104:	mov	w21, w0
  409108:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40910c:	ldrb	w8, [x8, #16]
  409110:	cbz	w8, 409128 <ascii_strlower_n@plt+0x4d20>
  409114:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409118:	add	x1, x1, #0xe91
  40911c:	add	x0, sp, #0x18
  409120:	bl	403dd8 <sd_bus_error_has_name@plt>
  409124:	cbnz	w0, 409070 <ascii_strlower_n@plt+0x4c68>
  409128:	mov	w0, wzr
  40912c:	bl	4039a8 <log_get_max_level_realm@plt>
  409130:	cmp	w0, #0x3
  409134:	b.lt	409174 <ascii_strlower_n@plt+0x4d6c>  // b.tstop
  409138:	add	x0, sp, #0x18
  40913c:	mov	w1, w21
  409140:	bl	403d68 <bus_error_message@plt>
  409144:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409148:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40914c:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409150:	mov	x6, x0
  409154:	add	x2, x2, #0xfaf
  409158:	add	x4, x4, #0x1fc
  40915c:	add	x5, x5, #0x208
  409160:	mov	w0, #0x3                   	// #3
  409164:	mov	w3, #0x8fd                 	// #2301
  409168:	mov	w1, w21
  40916c:	bl	4039b8 <log_internal_realm@plt>
  409170:	b	40901c <ascii_strlower_n@plt+0x4c14>
  409174:	mov	w8, wzr
  409178:	neg	w9, w21
  40917c:	sub	w21, w8, w9, uxtb
  409180:	b	409074 <ascii_strlower_n@plt+0x4c6c>
  409184:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409188:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40918c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409190:	add	x1, x1, #0x99c
  409194:	add	x2, x2, #0xfaf
  409198:	add	x4, x4, #0x1c8
  40919c:	mov	w3, #0x8d4                 	// #2260
  4091a0:	mov	w0, wzr
  4091a4:	bl	403a98 <log_assert_failed_realm@plt>
  4091a8:	sub	sp, sp, #0x70
  4091ac:	stp	x29, x30, [sp, #48]
  4091b0:	str	x23, [sp, #64]
  4091b4:	stp	x22, x21, [sp, #80]
  4091b8:	stp	x20, x19, [sp, #96]
  4091bc:	add	x29, sp, #0x30
  4091c0:	stp	xzr, xzr, [sp, #24]
  4091c4:	str	xzr, [sp, #40]
  4091c8:	cbz	x2, 40944c <ascii_strlower_n@plt+0x5044>
  4091cc:	mov	x19, x2
  4091d0:	mov	x21, x1
  4091d4:	mov	w22, w0
  4091d8:	cmp	w0, #0x1
  4091dc:	b.le	4091ec <ascii_strlower_n@plt+0x4de4>
  4091e0:	ldr	x0, [x21, #8]
  4091e4:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4091e8:	tbnz	w0, #31, 409228 <ascii_strlower_n@plt+0x4e20>
  4091ec:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4091f0:	ldr	w1, [x8, #56]
  4091f4:	cmp	w1, #0x1
  4091f8:	b.lt	40921c <ascii_strlower_n@plt+0x4e14>  // b.tstop
  4091fc:	cmp	w22, #0x2
  409200:	b.gt	409250 <ascii_strlower_n@plt+0x4e48>
  409204:	mov	w3, #0x8                   	// #8
  409208:	mov	x0, x19
  40920c:	mov	x2, xzr
  409210:	mov	x4, xzr
  409214:	bl	409674 <ascii_strlower_n@plt+0x526c>
  409218:	b	409228 <ascii_strlower_n@plt+0x4e20>
  40921c:	mov	w1, #0x8                   	// #8
  409220:	mov	x0, x19
  409224:	bl	409dec <ascii_strlower_n@plt+0x59e4>
  409228:	mov	w20, w0
  40922c:	add	x0, sp, #0x18
  409230:	bl	403d78 <sd_bus_error_free@plt>
  409234:	mov	w0, w20
  409238:	ldp	x20, x19, [sp, #96]
  40923c:	ldp	x22, x21, [sp, #80]
  409240:	ldr	x23, [sp, #64]
  409244:	ldp	x29, x30, [sp, #48]
  409248:	add	sp, sp, #0x70
  40924c:	ret
  409250:	add	x20, x21, #0x10
  409254:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409258:	add	x8, x8, #0x9c
  40925c:	add	x1, sp, #0x8
  409260:	mov	x0, x20
  409264:	stp	x8, xzr, [sp, #8]
  409268:	bl	403de8 <strv_equal@plt>
  40926c:	mov	w21, w0
  409270:	tbnz	w0, #0, 4092b0 <ascii_strlower_n@plt+0x4ea8>
  409274:	ldr	x0, [x20]
  409278:	cbz	x0, 4092b0 <ascii_strlower_n@plt+0x4ea8>
  40927c:	mov	x23, x20
  409280:	mov	x1, xzr
  409284:	mov	w2, wzr
  409288:	mov	x3, xzr
  40928c:	bl	403df8 <dns_name_concat@plt>
  409290:	cmp	w0, #0x0
  409294:	csinc	w8, w0, wzr, lt  // lt = tstop
  409298:	cmn	w0, #0x16
  40929c:	csel	w22, wzr, w8, eq  // eq = none
  4092a0:	tbnz	w22, #31, 4093a4 <ascii_strlower_n@plt+0x4f9c>
  4092a4:	cbz	w22, 4093e4 <ascii_strlower_n@plt+0x4fdc>
  4092a8:	ldr	x0, [x23, #8]!
  4092ac:	cbnz	x0, 409280 <ascii_strlower_n@plt+0x4e78>
  4092b0:	tst	w21, #0x1
  4092b4:	csel	x21, xzr, x20, ne  // ne = any
  4092b8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4092bc:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4092c0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4092c4:	add	x2, x2, #0xa4e
  4092c8:	add	x3, x3, #0xef9
  4092cc:	add	x4, x4, #0x1b6
  4092d0:	add	x5, sp, #0x18
  4092d4:	mov	x0, x19
  4092d8:	mov	x1, x21
  4092dc:	bl	40d4b8 <ascii_strlower_n@plt+0x90b0>
  4092e0:	tbnz	w0, #31, 4092ec <ascii_strlower_n@plt+0x4ee4>
  4092e4:	mov	w20, wzr
  4092e8:	b	40922c <ascii_strlower_n@plt+0x4e24>
  4092ec:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4092f0:	mov	w20, w0
  4092f4:	add	x1, x1, #0xe1b
  4092f8:	add	x0, sp, #0x18
  4092fc:	bl	403dd8 <sd_bus_error_has_name@plt>
  409300:	cbz	w0, 40933c <ascii_strlower_n@plt+0x4f34>
  409304:	add	x0, sp, #0x18
  409308:	bl	403d78 <sd_bus_error_free@plt>
  40930c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409310:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409314:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409318:	add	x2, x2, #0xe3d
  40931c:	add	x3, x3, #0xe56
  409320:	add	x4, x4, #0xe70
  409324:	add	x5, sp, #0x18
  409328:	mov	x0, x19
  40932c:	mov	x1, x21
  409330:	bl	40d4b8 <ascii_strlower_n@plt+0x90b0>
  409334:	tbz	w0, #31, 4092e4 <ascii_strlower_n@plt+0x4edc>
  409338:	mov	w20, w0
  40933c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409340:	ldrb	w8, [x8, #16]
  409344:	cbz	w8, 40935c <ascii_strlower_n@plt+0x4f54>
  409348:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40934c:	add	x1, x1, #0xe91
  409350:	add	x0, sp, #0x18
  409354:	bl	403dd8 <sd_bus_error_has_name@plt>
  409358:	cbnz	w0, 4092e4 <ascii_strlower_n@plt+0x4edc>
  40935c:	mov	w0, wzr
  409360:	bl	4039a8 <log_get_max_level_realm@plt>
  409364:	cmp	w0, #0x3
  409368:	b.lt	409428 <ascii_strlower_n@plt+0x5020>  // b.tstop
  40936c:	add	x0, sp, #0x18
  409370:	mov	w1, w20
  409374:	bl	403d68 <bus_error_message@plt>
  409378:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40937c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409380:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409384:	mov	x6, x0
  409388:	add	x2, x2, #0xfaf
  40938c:	add	x4, x4, #0x252
  409390:	add	x5, x5, #0x25b
  409394:	mov	w0, #0x3                   	// #3
  409398:	mov	w3, #0x953                 	// #2387
  40939c:	mov	w1, w20
  4093a0:	b	4093dc <ascii_strlower_n@plt+0x4fd4>
  4093a4:	mov	w0, wzr
  4093a8:	bl	4039a8 <log_get_max_level_realm@plt>
  4093ac:	cmp	w0, #0x3
  4093b0:	b.lt	409434 <ascii_strlower_n@plt+0x502c>  // b.tstop
  4093b4:	ldr	x6, [x23]
  4093b8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4093bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4093c0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4093c4:	add	x2, x2, #0xfaf
  4093c8:	add	x4, x4, #0x252
  4093cc:	add	x5, x5, #0xf91
  4093d0:	mov	w0, #0x3                   	// #3
  4093d4:	mov	w3, #0x939                 	// #2361
  4093d8:	mov	w1, w22
  4093dc:	bl	4039b8 <log_internal_realm@plt>
  4093e0:	b	409228 <ascii_strlower_n@plt+0x4e20>
  4093e4:	mov	w0, wzr
  4093e8:	bl	4039a8 <log_get_max_level_realm@plt>
  4093ec:	cmp	w0, #0x3
  4093f0:	b.lt	409444 <ascii_strlower_n@plt+0x503c>  // b.tstop
  4093f4:	ldr	x6, [x23]
  4093f8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4093fc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409400:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409404:	add	x2, x2, #0xfaf
  409408:	add	x4, x4, #0x252
  40940c:	add	x5, x5, #0xfbc
  409410:	mov	w0, #0x3                   	// #3
  409414:	mov	w3, #0x93b                 	// #2363
  409418:	mov	w1, wzr
  40941c:	bl	4039b8 <log_internal_realm@plt>
  409420:	mov	w20, #0xffffffea            	// #-22
  409424:	b	40922c <ascii_strlower_n@plt+0x4e24>
  409428:	mov	w8, wzr
  40942c:	neg	w9, w20
  409430:	b	40943c <ascii_strlower_n@plt+0x5034>
  409434:	mov	w8, wzr
  409438:	neg	w9, w22
  40943c:	sub	w20, w8, w9, uxtb
  409440:	b	40922c <ascii_strlower_n@plt+0x4e24>
  409444:	mov	w20, #0xffffffea            	// #-22
  409448:	b	40922c <ascii_strlower_n@plt+0x4e24>
  40944c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409450:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409454:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409458:	add	x1, x1, #0x99c
  40945c:	add	x2, x2, #0xfaf
  409460:	add	x4, x4, #0x22f
  409464:	mov	w3, #0x923                 	// #2339
  409468:	mov	w0, wzr
  40946c:	bl	403a98 <log_assert_failed_realm@plt>
  409470:	sub	sp, sp, #0x50
  409474:	stp	x29, x30, [sp, #32]
  409478:	str	x21, [sp, #48]
  40947c:	stp	x20, x19, [sp, #64]
  409480:	add	x29, sp, #0x20
  409484:	stp	xzr, xzr, [sp, #8]
  409488:	str	xzr, [sp, #24]
  40948c:	cbz	x2, 409650 <ascii_strlower_n@plt+0x5248>
  409490:	mov	x19, x2
  409494:	cmp	w0, #0x1
  409498:	b.le	4094a8 <ascii_strlower_n@plt+0x50a0>
  40949c:	ldr	x0, [x1, #8]
  4094a0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4094a4:	tbnz	w0, #31, 409614 <ascii_strlower_n@plt+0x520c>
  4094a8:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4094ac:	ldr	w8, [x21, #56]
  4094b0:	cmp	w8, #0x1
  4094b4:	b.lt	409500 <ascii_strlower_n@plt+0x50f8>  // b.tstop
  4094b8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4094bc:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4094c0:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4094c4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4094c8:	adrp	x7, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4094cc:	add	x1, x1, #0xa4e
  4094d0:	add	x2, x2, #0xef9
  4094d4:	add	x3, x3, #0x1b6
  4094d8:	add	x4, x4, #0x30a
  4094dc:	add	x7, x7, #0xcc3
  4094e0:	add	x5, sp, #0x8
  4094e4:	mov	x0, x19
  4094e8:	mov	x6, xzr
  4094ec:	str	w8, [sp]
  4094f0:	bl	403dc8 <sd_bus_call_method@plt>
  4094f4:	tbnz	w0, #31, 409544 <ascii_strlower_n@plt+0x513c>
  4094f8:	mov	w20, wzr
  4094fc:	b	409620 <ascii_strlower_n@plt+0x5218>
  409500:	mov	w0, wzr
  409504:	bl	4039a8 <log_get_max_level_realm@plt>
  409508:	cmp	w0, #0x3
  40950c:	b.lt	40961c <ascii_strlower_n@plt+0x5214>  // b.tstop
  409510:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409514:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409518:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40951c:	mov	w1, #0x16                  	// #22
  409520:	add	x2, x2, #0xfaf
  409524:	add	x4, x4, #0x2dc
  409528:	add	x5, x5, #0x2ed
  40952c:	mov	w0, #0x3                   	// #3
  409530:	movk	w1, #0x4000, lsl #16
  409534:	mov	w3, #0x967                 	// #2407
  409538:	bl	4039b8 <log_internal_realm@plt>
  40953c:	mov	w20, w0
  409540:	b	409620 <ascii_strlower_n@plt+0x5218>
  409544:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409548:	mov	w20, w0
  40954c:	add	x1, x1, #0xe1b
  409550:	add	x0, sp, #0x8
  409554:	bl	403dd8 <sd_bus_error_has_name@plt>
  409558:	cbz	w0, 4095ac <ascii_strlower_n@plt+0x51a4>
  40955c:	add	x0, sp, #0x8
  409560:	bl	403d78 <sd_bus_error_free@plt>
  409564:	ldr	w8, [x21, #56]
  409568:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40956c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409570:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409574:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409578:	adrp	x7, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40957c:	add	x1, x1, #0xe3d
  409580:	add	x2, x2, #0xe56
  409584:	add	x3, x3, #0xe70
  409588:	add	x4, x4, #0x315
  40958c:	add	x7, x7, #0xcc3
  409590:	add	x5, sp, #0x8
  409594:	mov	x0, x19
  409598:	mov	x6, xzr
  40959c:	str	w8, [sp]
  4095a0:	bl	403dc8 <sd_bus_call_method@plt>
  4095a4:	tbz	w0, #31, 4094f8 <ascii_strlower_n@plt+0x50f0>
  4095a8:	mov	w20, w0
  4095ac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4095b0:	ldrb	w8, [x8, #16]
  4095b4:	cbz	w8, 4095cc <ascii_strlower_n@plt+0x51c4>
  4095b8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4095bc:	add	x1, x1, #0xe91
  4095c0:	add	x0, sp, #0x8
  4095c4:	bl	403dd8 <sd_bus_error_has_name@plt>
  4095c8:	cbnz	w0, 4094f8 <ascii_strlower_n@plt+0x50f0>
  4095cc:	mov	w0, wzr
  4095d0:	bl	4039a8 <log_get_max_level_realm@plt>
  4095d4:	cmp	w0, #0x3
  4095d8:	b.lt	409640 <ascii_strlower_n@plt+0x5238>  // b.tstop
  4095dc:	add	x0, sp, #0x8
  4095e0:	mov	w1, w20
  4095e4:	bl	403d68 <bus_error_message@plt>
  4095e8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4095ec:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4095f0:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4095f4:	mov	x6, x0
  4095f8:	add	x2, x2, #0xfaf
  4095fc:	add	x4, x4, #0x2dc
  409600:	add	x5, x5, #0x323
  409604:	mov	w0, #0x3                   	// #3
  409608:	mov	w3, #0x984                 	// #2436
  40960c:	mov	w1, w20
  409610:	bl	4039b8 <log_internal_realm@plt>
  409614:	mov	w20, w0
  409618:	b	409620 <ascii_strlower_n@plt+0x5218>
  40961c:	mov	w20, #0xffffffea            	// #-22
  409620:	add	x0, sp, #0x8
  409624:	bl	403d78 <sd_bus_error_free@plt>
  409628:	mov	w0, w20
  40962c:	ldp	x20, x19, [sp, #64]
  409630:	ldr	x21, [sp, #48]
  409634:	ldp	x29, x30, [sp, #32]
  409638:	add	sp, sp, #0x50
  40963c:	ret
  409640:	mov	w8, wzr
  409644:	neg	w9, w20
  409648:	sub	w20, w8, w9, uxtb
  40964c:	b	409620 <ascii_strlower_n@plt+0x5218>
  409650:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409654:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409658:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40965c:	add	x1, x1, #0x99c
  409660:	add	x2, x2, #0xfaf
  409664:	add	x4, x4, #0x2b1
  409668:	mov	w3, #0x95e                 	// #2398
  40966c:	mov	w0, wzr
  409670:	bl	403a98 <log_assert_failed_realm@plt>
  409674:	sub	sp, sp, #0xe0
  409678:	stp	x29, x30, [sp, #160]
  40967c:	add	x29, sp, #0xa0
  409680:	movi	v0.2d, #0x0
  409684:	str	x23, [sp, #176]
  409688:	stp	x22, x21, [sp, #192]
  40968c:	stp	x20, x19, [sp, #208]
  409690:	stp	xzr, xzr, [x29, #-24]
  409694:	stur	xzr, [x29, #-8]
  409698:	str	xzr, [x29, #24]
  40969c:	stp	xzr, xzr, [sp, #32]
  4096a0:	stp	xzr, xzr, [sp, #8]
  4096a4:	stp	q0, q0, [sp, #96]
  4096a8:	stp	q0, q0, [sp, #64]
  4096ac:	str	q0, [sp, #48]
  4096b0:	strb	wzr, [sp, #24]
  4096b4:	cbz	x0, 409da8 <ascii_strlower_n@plt+0x59a0>
  4096b8:	mov	w19, w1
  4096bc:	cmp	w1, #0x0
  4096c0:	b.le	409dc8 <ascii_strlower_n@plt+0x59c0>
  4096c4:	mov	x20, x4
  4096c8:	mov	w22, w3
  4096cc:	mov	x21, x2
  4096d0:	mov	x23, x0
  4096d4:	cbnz	x2, 4096f0 <ascii_strlower_n@plt+0x52e8>
  4096d8:	add	x1, sp, #0x8
  4096dc:	mov	w0, w19
  4096e0:	mov	w2, wzr
  4096e4:	add	x21, sp, #0x8
  4096e8:	bl	403e08 <format_ifname_full@plt>
  4096ec:	cbz	x0, 409890 <ascii_strlower_n@plt+0x5488>
  4096f0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4096f4:	add	x1, x1, #0xa2c
  4096f8:	add	x0, sp, #0x28
  4096fc:	mov	w2, w19
  409700:	bl	403e18 <asprintf@plt>
  409704:	tbnz	w0, #31, 4097f8 <ascii_strlower_n@plt+0x53f0>
  409708:	ldr	x1, [sp, #40]
  40970c:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409710:	add	x0, x0, #0xa2f
  409714:	add	x2, sp, #0x20
  409718:	bl	403e28 <sd_bus_path_encode@plt>
  40971c:	tbnz	w0, #31, 409810 <ascii_strlower_n@plt+0x5408>
  409720:	ldr	x2, [sp, #32]
  409724:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409728:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40972c:	add	x1, x1, #0xa4e
  409730:	add	x3, x3, #0x5e0
  409734:	sub	x5, x29, #0x18
  409738:	add	x6, x29, #0x18
  40973c:	add	x7, sp, #0x30
  409740:	mov	w4, #0x2                   	// #2
  409744:	mov	x0, x23
  409748:	bl	403e38 <bus_map_all_properties@plt>
  40974c:	tbnz	w0, #31, 4098d8 <ascii_strlower_n@plt+0x54d0>
  409750:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409754:	ldr	w0, [x8, #92]
  409758:	bl	403e48 <pager_open@plt>
  40975c:	sub	w8, w22, #0x1
  409760:	cmp	w8, #0x7
  409764:	b.hi	409978 <ascii_strlower_n@plt+0x5570>  // b.pmore
  409768:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40976c:	add	x9, x9, #0xd80
  409770:	adr	x10, 409780 <ascii_strlower_n@plt+0x5378>
  409774:	ldrh	w11, [x9, x8, lsl #1]
  409778:	add	x10, x10, x11, lsl #2
  40977c:	br	x10
  409780:	ldr	x22, [sp, #96]
  409784:	bl	403be8 <colors_enabled@plt>
  409788:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40978c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409790:	add	x23, x23, #0x9c
  409794:	add	x8, x8, #0xda0
  409798:	tst	w0, #0x1
  40979c:	csel	x20, x8, x23, ne  // ne = any
  4097a0:	bl	403be8 <colors_enabled@plt>
  4097a4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4097a8:	add	x8, x8, #0xdaa
  4097ac:	tst	w0, #0x1
  4097b0:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4097b4:	csel	x4, x8, x23, ne  // ne = any
  4097b8:	add	x0, x0, #0xe47
  4097bc:	mov	x1, x20
  4097c0:	mov	w2, w19
  4097c4:	mov	x3, x21
  4097c8:	bl	403a58 <printf@plt>
  4097cc:	cbz	x22, 409c34 <ascii_strlower_n@plt+0x582c>
  4097d0:	ldr	x1, [x22]
  4097d4:	cbz	x1, 409c34 <ascii_strlower_n@plt+0x582c>
  4097d8:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4097dc:	add	x20, x22, #0x8
  4097e0:	add	x19, x19, #0xe59
  4097e4:	mov	x0, x19
  4097e8:	bl	403a58 <printf@plt>
  4097ec:	ldr	x1, [x20], #8
  4097f0:	cbnz	x1, 4097e4 <ascii_strlower_n@plt+0x53dc>
  4097f4:	b	409c34 <ascii_strlower_n@plt+0x582c>
  4097f8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  4097fc:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409800:	add	x1, x1, #0xfaf
  409804:	add	x3, x3, #0x9f1
  409808:	mov	w2, #0x579                 	// #1401
  40980c:	b	409824 <ascii_strlower_n@plt+0x541c>
  409810:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  409814:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409818:	add	x1, x1, #0xfaf
  40981c:	add	x3, x3, #0x9f1
  409820:	mov	w2, #0x57d                 	// #1405
  409824:	mov	w0, wzr
  409828:	bl	403a28 <log_oom_internal@plt>
  40982c:	mov	w19, w0
  409830:	ldr	x0, [sp, #32]
  409834:	bl	4039d8 <free@plt>
  409838:	ldr	x0, [sp, #40]
  40983c:	bl	4039d8 <free@plt>
  409840:	ldr	x0, [sp, #88]
  409844:	bl	4039d8 <free@plt>
  409848:	ldr	x0, [sp, #96]
  40984c:	bl	403aa8 <strv_free@plt>
  409850:	ldr	x0, [sp, #104]
  409854:	bl	403aa8 <strv_free@plt>
  409858:	ldr	x0, [sp, #112]
  40985c:	bl	403aa8 <strv_free@plt>
  409860:	ldr	x0, [x29, #24]
  409864:	cbz	x0, 40986c <ascii_strlower_n@plt+0x5464>
  409868:	bl	403d88 <sd_bus_message_unref@plt>
  40986c:	sub	x0, x29, #0x18
  409870:	bl	403d78 <sd_bus_error_free@plt>
  409874:	mov	w0, w19
  409878:	ldp	x20, x19, [sp, #208]
  40987c:	ldp	x22, x21, [sp, #192]
  409880:	ldr	x23, [sp, #176]
  409884:	ldp	x29, x30, [sp, #160]
  409888:	add	sp, sp, #0xe0
  40988c:	ret
  409890:	bl	403e58 <__errno_location@plt>
  409894:	ldr	w20, [x0]
  409898:	mov	w0, wzr
  40989c:	bl	4039a8 <log_get_max_level_realm@plt>
  4098a0:	cmp	w0, #0x3
  4098a4:	b.lt	40992c <ascii_strlower_n@plt+0x5524>  // b.tstop
  4098a8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4098ac:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4098b0:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4098b4:	add	x2, x2, #0xfaf
  4098b8:	add	x4, x4, #0x9f1
  4098bc:	add	x5, x5, #0xa00
  4098c0:	mov	w0, #0x3                   	// #3
  4098c4:	mov	w3, #0x573                 	// #1395
  4098c8:	mov	w1, w20
  4098cc:	mov	w6, w19
  4098d0:	bl	4039b8 <log_internal_realm@plt>
  4098d4:	b	40982c <ascii_strlower_n@plt+0x5424>
  4098d8:	mov	w23, w0
  4098dc:	mov	w0, wzr
  4098e0:	bl	4039a8 <log_get_max_level_realm@plt>
  4098e4:	cmp	w0, #0x3
  4098e8:	b.lt	409940 <ascii_strlower_n@plt+0x5538>  // b.tstop
  4098ec:	sub	x0, x29, #0x18
  4098f0:	mov	w1, w23
  4098f4:	bl	403d68 <bus_error_message@plt>
  4098f8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  4098fc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409900:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409904:	mov	x7, x0
  409908:	add	x2, x2, #0xfaf
  40990c:	add	x4, x4, #0x9f1
  409910:	add	x5, x5, #0xa67
  409914:	mov	w0, #0x3                   	// #3
  409918:	mov	w3, #0x588                 	// #1416
  40991c:	mov	w1, w23
  409920:	mov	w6, w19
  409924:	bl	4039b8 <log_internal_realm@plt>
  409928:	b	40982c <ascii_strlower_n@plt+0x5424>
  40992c:	cmp	w20, #0x0
  409930:	mov	w8, wzr
  409934:	cneg	w9, w20, mi  // mi = first
  409938:	sub	w19, w8, w9, uxtb
  40993c:	b	409830 <ascii_strlower_n@plt+0x5428>
  409940:	mov	w8, wzr
  409944:	neg	w9, w23
  409948:	sub	w19, w8, w9, uxtb
  40994c:	b	409830 <ascii_strlower_n@plt+0x5428>
  409950:	bl	403be8 <colors_enabled@plt>
  409954:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409958:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40995c:	add	x22, x22, #0x9c
  409960:	add	x8, x8, #0xda0
  409964:	tst	w0, #0x1
  409968:	csel	x20, x8, x22, ne  // ne = any
  40996c:	bl	403be8 <colors_enabled@plt>
  409970:	ldr	x9, [sp, #64]
  409974:	b	409b80 <ascii_strlower_n@plt+0x5778>
  409978:	cbz	x20, 409994 <ascii_strlower_n@plt+0x558c>
  40997c:	ldrb	w8, [x20]
  409980:	cbz	w8, 409994 <ascii_strlower_n@plt+0x558c>
  409984:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409988:	ldr	x1, [x8, #176]
  40998c:	mov	w0, #0xa                   	// #10
  409990:	bl	403d38 <fputc@plt>
  409994:	bl	403be8 <colors_enabled@plt>
  409998:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40999c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4099a0:	add	x23, x23, #0x9c
  4099a4:	add	x8, x8, #0xda0
  4099a8:	tst	w0, #0x1
  4099ac:	csel	x22, x8, x23, ne  // ne = any
  4099b0:	bl	403be8 <colors_enabled@plt>
  4099b4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4099b8:	add	x8, x8, #0xdaa
  4099bc:	tst	w0, #0x1
  4099c0:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4099c4:	csel	x4, x8, x23, ne  // ne = any
  4099c8:	add	x0, x0, #0xaa0
  4099cc:	mov	x1, x22
  4099d0:	mov	w2, w19
  4099d4:	mov	x3, x21
  4099d8:	bl	403a58 <printf@plt>
  4099dc:	ldr	x8, [sp, #48]
  4099e0:	cbz	x8, 409c44 <ascii_strlower_n@plt+0x583c>
  4099e4:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4099e8:	add	x9, x9, #0xad3
  4099ec:	tst	x8, #0x1
  4099f0:	adrp	x10, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4099f4:	add	x10, x10, #0xad8
  4099f8:	adrp	x11, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4099fc:	csel	x1, x23, x9, eq  // eq = none
  409a00:	tst	x8, #0x2
  409a04:	add	x11, x11, #0xae4
  409a08:	adrp	x12, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409a0c:	csel	x2, x23, x10, eq  // eq = none
  409a10:	tst	x8, #0x4
  409a14:	add	x12, x12, #0xaf0
  409a18:	adrp	x13, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409a1c:	csel	x3, x23, x11, eq  // eq = none
  409a20:	tst	x8, #0x8
  409a24:	add	x13, x13, #0xafb
  409a28:	csel	x4, x23, x12, eq  // eq = none
  409a2c:	tst	x8, #0x10
  409a30:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409a34:	csel	x5, x23, x13, eq  // eq = none
  409a38:	add	x0, x0, #0xab2
  409a3c:	bl	403a58 <printf@plt>
  409a40:	b	409c50 <ascii_strlower_n@plt+0x5848>
  409a44:	ldr	x22, [sp, #104]
  409a48:	bl	403be8 <colors_enabled@plt>
  409a4c:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409a50:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409a54:	add	x23, x23, #0x9c
  409a58:	add	x8, x8, #0xda0
  409a5c:	tst	w0, #0x1
  409a60:	csel	x20, x8, x23, ne  // ne = any
  409a64:	bl	403be8 <colors_enabled@plt>
  409a68:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409a6c:	add	x8, x8, #0xdaa
  409a70:	tst	w0, #0x1
  409a74:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409a78:	csel	x4, x8, x23, ne  // ne = any
  409a7c:	add	x0, x0, #0xe47
  409a80:	mov	x1, x20
  409a84:	mov	w2, w19
  409a88:	mov	x3, x21
  409a8c:	bl	403a58 <printf@plt>
  409a90:	cbz	x22, 409c34 <ascii_strlower_n@plt+0x582c>
  409a94:	ldr	x1, [x22]
  409a98:	cbz	x1, 409c34 <ascii_strlower_n@plt+0x582c>
  409a9c:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409aa0:	add	x20, x22, #0x8
  409aa4:	add	x19, x19, #0xe59
  409aa8:	mov	x0, x19
  409aac:	bl	403a58 <printf@plt>
  409ab0:	ldr	x1, [x20], #8
  409ab4:	cbnz	x1, 409aa8 <ascii_strlower_n@plt+0x56a0>
  409ab8:	b	409c34 <ascii_strlower_n@plt+0x582c>
  409abc:	bl	403be8 <colors_enabled@plt>
  409ac0:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ac4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ac8:	add	x22, x22, #0x9c
  409acc:	add	x8, x8, #0xda0
  409ad0:	tst	w0, #0x1
  409ad4:	csel	x20, x8, x22, ne  // ne = any
  409ad8:	bl	403be8 <colors_enabled@plt>
  409adc:	ldrb	w9, [sp, #121]
  409ae0:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ae4:	add	x8, x8, #0xdaa
  409ae8:	tst	w0, #0x1
  409aec:	csel	x4, x8, x22, ne  // ne = any
  409af0:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409af4:	adrp	x10, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409af8:	add	x8, x8, #0xe5d
  409afc:	add	x10, x10, #0xe61
  409b00:	cmp	w9, #0x0
  409b04:	csel	x5, x10, x8, eq  // eq = none
  409b08:	b	409ba0 <ascii_strlower_n@plt+0x5798>
  409b0c:	bl	403be8 <colors_enabled@plt>
  409b10:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b14:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b18:	add	x22, x22, #0x9c
  409b1c:	add	x8, x8, #0xda0
  409b20:	tst	w0, #0x1
  409b24:	csel	x20, x8, x22, ne  // ne = any
  409b28:	bl	403be8 <colors_enabled@plt>
  409b2c:	ldr	x9, [sp, #56]
  409b30:	b	409b80 <ascii_strlower_n@plt+0x5778>
  409b34:	bl	403be8 <colors_enabled@plt>
  409b38:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b3c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b40:	add	x22, x22, #0x9c
  409b44:	add	x8, x8, #0xda0
  409b48:	tst	w0, #0x1
  409b4c:	csel	x20, x8, x22, ne  // ne = any
  409b50:	bl	403be8 <colors_enabled@plt>
  409b54:	ldr	x9, [sp, #72]
  409b58:	b	409b80 <ascii_strlower_n@plt+0x5778>
  409b5c:	bl	403be8 <colors_enabled@plt>
  409b60:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b64:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b68:	add	x22, x22, #0x9c
  409b6c:	add	x8, x8, #0xda0
  409b70:	tst	w0, #0x1
  409b74:	csel	x20, x8, x22, ne  // ne = any
  409b78:	bl	403be8 <colors_enabled@plt>
  409b7c:	ldr	x9, [sp, #80]
  409b80:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409b84:	add	x8, x8, #0xdaa
  409b88:	tst	w0, #0x1
  409b8c:	csel	x4, x8, x22, ne  // ne = any
  409b90:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409b94:	add	x8, x8, #0xe64
  409b98:	cmp	x9, #0x0
  409b9c:	csel	x5, x8, x9, eq  // eq = none
  409ba0:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409ba4:	add	x0, x0, #0xa8a
  409ba8:	mov	x1, x20
  409bac:	mov	w2, w19
  409bb0:	mov	x3, x21
  409bb4:	bl	403a58 <printf@plt>
  409bb8:	mov	w19, wzr
  409bbc:	b	409830 <ascii_strlower_n@plt+0x5428>
  409bc0:	ldr	x22, [sp, #112]
  409bc4:	bl	403be8 <colors_enabled@plt>
  409bc8:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409bcc:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409bd0:	add	x23, x23, #0x9c
  409bd4:	add	x8, x8, #0xda0
  409bd8:	tst	w0, #0x1
  409bdc:	csel	x20, x8, x23, ne  // ne = any
  409be0:	bl	403be8 <colors_enabled@plt>
  409be4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409be8:	add	x8, x8, #0xdaa
  409bec:	tst	w0, #0x1
  409bf0:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409bf4:	csel	x4, x8, x23, ne  // ne = any
  409bf8:	add	x0, x0, #0xe47
  409bfc:	mov	x1, x20
  409c00:	mov	w2, w19
  409c04:	mov	x3, x21
  409c08:	bl	403a58 <printf@plt>
  409c0c:	cbz	x22, 409c34 <ascii_strlower_n@plt+0x582c>
  409c10:	ldr	x1, [x22]
  409c14:	cbz	x1, 409c34 <ascii_strlower_n@plt+0x582c>
  409c18:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409c1c:	add	x20, x22, #0x8
  409c20:	add	x19, x19, #0xe59
  409c24:	mov	x0, x19
  409c28:	bl	403a58 <printf@plt>
  409c2c:	ldr	x1, [x20], #8
  409c30:	cbnz	x1, 409c24 <ascii_strlower_n@plt+0x581c>
  409c34:	mov	w0, #0xa                   	// #10
  409c38:	bl	403e68 <putchar@plt>
  409c3c:	mov	w19, wzr
  409c40:	b	409830 <ascii_strlower_n@plt+0x5428>
  409c44:	adrp	x0, 41d000 <ascii_strlower_n@plt+0x18bf8>
  409c48:	add	x0, x0, #0x350
  409c4c:	bl	403bf8 <puts@plt>
  409c50:	ldrb	w8, [sp, #121]
  409c54:	ldp	x12, x13, [sp, #56]
  409c58:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409c5c:	adrp	x10, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409c60:	ldp	x14, x15, [sp, #72]
  409c64:	add	x9, x9, #0xe5d
  409c68:	add	x10, x10, #0xe61
  409c6c:	adrp	x11, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409c70:	cmp	w8, #0x0
  409c74:	add	x11, x11, #0xe64
  409c78:	ldrb	w16, [sp, #120]
  409c7c:	csel	x1, x10, x9, eq  // eq = none
  409c80:	cmp	x12, #0x0
  409c84:	csel	x2, x11, x12, eq  // eq = none
  409c88:	cmp	x13, #0x0
  409c8c:	csel	x3, x11, x13, eq  // eq = none
  409c90:	cmp	x14, #0x0
  409c94:	csel	x4, x11, x14, eq  // eq = none
  409c98:	cmp	x15, #0x0
  409c9c:	csel	x5, x11, x15, eq  // eq = none
  409ca0:	cmp	w16, #0x0
  409ca4:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409ca8:	csel	x6, x10, x9, eq  // eq = none
  409cac:	add	x0, x0, #0xb06
  409cb0:	bl	403a58 <printf@plt>
  409cb4:	ldr	x1, [sp, #88]
  409cb8:	cbz	x1, 409cc8 <ascii_strlower_n@plt+0x58c0>
  409cbc:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409cc0:	add	x0, x0, #0xb9d
  409cc4:	bl	403a58 <printf@plt>
  409cc8:	ldr	x21, [sp, #96]
  409ccc:	cbz	x21, 409d0c <ascii_strlower_n@plt+0x5904>
  409cd0:	ldr	x2, [x21]
  409cd4:	cbz	x2, 409d0c <ascii_strlower_n@plt+0x5904>
  409cd8:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409cdc:	adrp	x23, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409ce0:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409ce4:	add	x22, x22, #0xbd4
  409ce8:	add	x23, x23, #0xbc7
  409cec:	add	x19, x19, #0xbb7
  409cf0:	ldr	x8, [sp, #96]
  409cf4:	mov	x0, x19
  409cf8:	cmp	x21, x8
  409cfc:	csel	x1, x23, x22, eq  // eq = none
  409d00:	bl	403a58 <printf@plt>
  409d04:	ldr	x2, [x21, #8]!
  409d08:	cbnz	x2, 409cf0 <ascii_strlower_n@plt+0x58e8>
  409d0c:	ldr	x21, [sp, #104]
  409d10:	cbz	x21, 409d50 <ascii_strlower_n@plt+0x5948>
  409d14:	ldr	x2, [x21]
  409d18:	cbz	x2, 409d50 <ascii_strlower_n@plt+0x5948>
  409d1c:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d20:	adrp	x23, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d24:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d28:	add	x22, x22, #0xbfe
  409d2c:	add	x23, x23, #0xbf2
  409d30:	add	x19, x19, #0xbe1
  409d34:	ldr	x8, [sp, #104]
  409d38:	mov	x0, x19
  409d3c:	cmp	x21, x8
  409d40:	csel	x1, x23, x22, eq  // eq = none
  409d44:	bl	403a58 <printf@plt>
  409d48:	ldr	x2, [x21, #8]!
  409d4c:	cbnz	x2, 409d34 <ascii_strlower_n@plt+0x592c>
  409d50:	ldr	x21, [sp, #112]
  409d54:	cbz	x21, 409d94 <ascii_strlower_n@plt+0x598c>
  409d58:	ldr	x2, [x21]
  409d5c:	cbz	x2, 409d94 <ascii_strlower_n@plt+0x598c>
  409d60:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d64:	adrp	x23, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d68:	adrp	x19, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409d6c:	add	x22, x22, #0xbfe
  409d70:	add	x23, x23, #0xc0a
  409d74:	add	x19, x19, #0xbe1
  409d78:	ldr	x8, [sp, #112]
  409d7c:	mov	x0, x19
  409d80:	cmp	x21, x8
  409d84:	csel	x1, x23, x22, eq  // eq = none
  409d88:	bl	403a58 <printf@plt>
  409d8c:	ldr	x2, [x21, #8]!
  409d90:	cbnz	x2, 409d78 <ascii_strlower_n@plt+0x5970>
  409d94:	mov	w19, wzr
  409d98:	cbz	x20, 409830 <ascii_strlower_n@plt+0x5428>
  409d9c:	mov	w8, #0x1                   	// #1
  409da0:	strb	w8, [x20]
  409da4:	b	409830 <ascii_strlower_n@plt+0x5428>
  409da8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409dac:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409db0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409db4:	add	x1, x1, #0x99c
  409db8:	add	x2, x2, #0xfaf
  409dbc:	add	x4, x4, #0x9a0
  409dc0:	mov	w3, #0x56e                 	// #1390
  409dc4:	bl	403a98 <log_assert_failed_realm@plt>
  409dc8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409dcc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409dd0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409dd4:	add	x1, x1, #0x9e5
  409dd8:	add	x2, x2, #0xfaf
  409ddc:	add	x4, x4, #0x9a0
  409de0:	mov	w3, #0x56f                 	// #1391
  409de4:	mov	w0, wzr
  409de8:	bl	403a98 <log_assert_failed_realm@plt>
  409dec:	sub	sp, sp, #0xd0
  409df0:	stp	x29, x30, [sp, #144]
  409df4:	stp	x24, x23, [sp, #160]
  409df8:	stp	x22, x21, [sp, #176]
  409dfc:	stp	x20, x19, [sp, #192]
  409e00:	add	x29, sp, #0x90
  409e04:	stp	xzr, xzr, [sp, #16]
  409e08:	str	xzr, [sp, #8]
  409e0c:	strb	wzr, [sp, #4]
  409e10:	cbz	x0, 40a55c <ascii_strlower_n@plt+0x6154>
  409e14:	mov	w19, w1
  409e18:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409e1c:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409e20:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e24:	movi	v0.2d, #0x0
  409e28:	add	x1, x1, #0xa4e
  409e2c:	add	x2, x2, #0xef9
  409e30:	add	x3, x3, #0x760
  409e34:	sub	x5, x29, #0x18
  409e38:	sub	x6, x29, #0x20
  409e3c:	add	x7, sp, #0x20
  409e40:	mov	w4, #0x2                   	// #2
  409e44:	mov	x20, x0
  409e48:	stp	xzr, xzr, [x29, #-24]
  409e4c:	stur	xzr, [x29, #-8]
  409e50:	stur	xzr, [x29, #-32]
  409e54:	stp	q0, q0, [sp, #80]
  409e58:	stp	q0, q0, [sp, #48]
  409e5c:	str	q0, [sp, #32]
  409e60:	bl	403e38 <bus_map_all_properties@plt>
  409e64:	tbnz	w0, #31, 409f08 <ascii_strlower_n@plt+0x5b00>
  409e68:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409e6c:	ldr	w0, [x8, #92]
  409e70:	bl	403e48 <pager_open@plt>
  409e74:	sub	w8, w19, #0x1
  409e78:	cmp	w8, #0x7
  409e7c:	b.hi	40a07c <ascii_strlower_n@plt+0x5c74>  // b.pmore
  409e80:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409e84:	add	x9, x9, #0xd90
  409e88:	adr	x10, 409e98 <ascii_strlower_n@plt+0x5a90>
  409e8c:	ldrb	w11, [x9, x8]
  409e90:	add	x10, x10, x11, lsl #2
  409e94:	br	x10
  409e98:	ldr	x22, [sp, #40]
  409e9c:	bl	403be8 <colors_enabled@plt>
  409ea0:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ea4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ea8:	add	x23, x23, #0x9c
  409eac:	add	x8, x8, #0xda0
  409eb0:	tst	w0, #0x1
  409eb4:	csel	x21, x8, x23, ne  // ne = any
  409eb8:	bl	403be8 <colors_enabled@plt>
  409ebc:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409ec0:	add	x8, x8, #0xdaa
  409ec4:	tst	w0, #0x1
  409ec8:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409ecc:	csel	x2, x8, x23, ne  // ne = any
  409ed0:	add	x0, x0, #0x126
  409ed4:	mov	x1, x21
  409ed8:	bl	403a58 <printf@plt>
  409edc:	cbz	x22, 40a070 <ascii_strlower_n@plt+0x5c68>
  409ee0:	ldr	x1, [x22]
  409ee4:	cbz	x1, 40a070 <ascii_strlower_n@plt+0x5c68>
  409ee8:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409eec:	add	x22, x22, #0x8
  409ef0:	add	x21, x21, #0xe59
  409ef4:	mov	x0, x21
  409ef8:	bl	403a58 <printf@plt>
  409efc:	ldr	x1, [x22], #8
  409f00:	cbnz	x1, 409ef4 <ascii_strlower_n@plt+0x5aec>
  409f04:	b	40a070 <ascii_strlower_n@plt+0x5c68>
  409f08:	mov	w21, w0
  409f0c:	mov	w0, wzr
  409f10:	bl	4039a8 <log_get_max_level_realm@plt>
  409f14:	cmp	w0, #0x3
  409f18:	b.lt	409f5c <ascii_strlower_n@plt+0x5b54>  // b.tstop
  409f1c:	sub	x0, x29, #0x18
  409f20:	mov	w1, w21
  409f24:	bl	403d68 <bus_error_message@plt>
  409f28:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  409f2c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409f30:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409f34:	mov	x6, x0
  409f38:	add	x2, x2, #0xfaf
  409f3c:	add	x4, x4, #0xf13
  409f40:	add	x5, x5, #0xf21
  409f44:	mov	w0, #0x3                   	// #3
  409f48:	mov	w3, #0x688                 	// #1672
  409f4c:	mov	w1, w21
  409f50:	bl	4039b8 <log_internal_realm@plt>
  409f54:	mov	w21, w0
  409f58:	b	40a14c <ascii_strlower_n@plt+0x5d44>
  409f5c:	mov	w8, wzr
  409f60:	neg	w9, w21
  409f64:	sub	w21, w8, w9, uxtb
  409f68:	b	40a14c <ascii_strlower_n@plt+0x5d44>
  409f6c:	bl	403be8 <colors_enabled@plt>
  409f70:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409f74:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409f78:	add	x22, x22, #0x9c
  409f7c:	add	x8, x8, #0xda0
  409f80:	tst	w0, #0x1
  409f84:	csel	x21, x8, x22, ne  // ne = any
  409f88:	bl	403be8 <colors_enabled@plt>
  409f8c:	ldr	x9, [sp, #72]
  409f90:	b	40a118 <ascii_strlower_n@plt+0x5d10>
  409f94:	ldr	x22, [sp, #64]
  409f98:	bl	403be8 <colors_enabled@plt>
  409f9c:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409fa0:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409fa4:	add	x23, x23, #0x9c
  409fa8:	add	x8, x8, #0xda0
  409fac:	tst	w0, #0x1
  409fb0:	csel	x21, x8, x23, ne  // ne = any
  409fb4:	bl	403be8 <colors_enabled@plt>
  409fb8:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  409fbc:	add	x8, x8, #0xdaa
  409fc0:	tst	w0, #0x1
  409fc4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  409fc8:	csel	x2, x8, x23, ne  // ne = any
  409fcc:	add	x0, x0, #0x126
  409fd0:	mov	x1, x21
  409fd4:	bl	403a58 <printf@plt>
  409fd8:	cbz	x22, 40a070 <ascii_strlower_n@plt+0x5c68>
  409fdc:	ldr	x1, [x22]
  409fe0:	cbz	x1, 40a070 <ascii_strlower_n@plt+0x5c68>
  409fe4:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  409fe8:	add	x22, x22, #0x8
  409fec:	add	x21, x21, #0xe59
  409ff0:	mov	x0, x21
  409ff4:	bl	403a58 <printf@plt>
  409ff8:	ldr	x1, [x22], #8
  409ffc:	cbnz	x1, 409ff0 <ascii_strlower_n@plt+0x5be8>
  40a000:	b	40a070 <ascii_strlower_n@plt+0x5c68>
  40a004:	ldr	x22, [sp, #56]
  40a008:	bl	403be8 <colors_enabled@plt>
  40a00c:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a010:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a014:	add	x23, x23, #0x9c
  40a018:	add	x8, x8, #0xda0
  40a01c:	tst	w0, #0x1
  40a020:	csel	x21, x8, x23, ne  // ne = any
  40a024:	bl	403be8 <colors_enabled@plt>
  40a028:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a02c:	add	x8, x8, #0xdaa
  40a030:	tst	w0, #0x1
  40a034:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40a038:	csel	x2, x8, x23, ne  // ne = any
  40a03c:	add	x0, x0, #0x126
  40a040:	mov	x1, x21
  40a044:	bl	403a58 <printf@plt>
  40a048:	cbz	x22, 40a070 <ascii_strlower_n@plt+0x5c68>
  40a04c:	ldr	x1, [x22]
  40a050:	cbz	x1, 40a070 <ascii_strlower_n@plt+0x5c68>
  40a054:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a058:	add	x22, x22, #0x8
  40a05c:	add	x21, x21, #0xe59
  40a060:	mov	x0, x21
  40a064:	bl	403a58 <printf@plt>
  40a068:	ldr	x1, [x22], #8
  40a06c:	cbnz	x1, 40a060 <ascii_strlower_n@plt+0x5c58>
  40a070:	mov	w0, #0xa                   	// #10
  40a074:	bl	403e68 <putchar@plt>
  40a078:	b	40a148 <ascii_strlower_n@plt+0x5d40>
  40a07c:	bl	403be8 <colors_enabled@plt>
  40a080:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a084:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a088:	add	x22, x22, #0x9c
  40a08c:	add	x8, x8, #0xda0
  40a090:	tst	w0, #0x1
  40a094:	csel	x21, x8, x22, ne  // ne = any
  40a098:	bl	403be8 <colors_enabled@plt>
  40a09c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a0a0:	add	x8, x8, #0xdaa
  40a0a4:	tst	w0, #0x1
  40a0a8:	csel	x2, x8, x22, ne  // ne = any
  40a0ac:	cmp	w19, #0x7
  40a0b0:	b.ne	40a308 <ascii_strlower_n@plt+0x5f00>  // b.any
  40a0b4:	ldr	x8, [sp, #96]
  40a0b8:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a0bc:	add	x9, x9, #0xe64
  40a0c0:	cmp	x8, #0x0
  40a0c4:	csel	x3, x9, x8, eq  // eq = none
  40a0c8:	b	40a138 <ascii_strlower_n@plt+0x5d30>
  40a0cc:	bl	403be8 <colors_enabled@plt>
  40a0d0:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a0d4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a0d8:	add	x22, x22, #0x9c
  40a0dc:	add	x8, x8, #0xda0
  40a0e0:	tst	w0, #0x1
  40a0e4:	csel	x21, x8, x22, ne  // ne = any
  40a0e8:	bl	403be8 <colors_enabled@plt>
  40a0ec:	ldr	x9, [sp, #80]
  40a0f0:	b	40a118 <ascii_strlower_n@plt+0x5d10>
  40a0f4:	bl	403be8 <colors_enabled@plt>
  40a0f8:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a0fc:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a100:	add	x22, x22, #0x9c
  40a104:	add	x8, x8, #0xda0
  40a108:	tst	w0, #0x1
  40a10c:	csel	x21, x8, x22, ne  // ne = any
  40a110:	bl	403be8 <colors_enabled@plt>
  40a114:	ldr	x9, [sp, #88]
  40a118:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40a11c:	add	x8, x8, #0xdaa
  40a120:	tst	w0, #0x1
  40a124:	csel	x2, x8, x22, ne  // ne = any
  40a128:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a12c:	add	x8, x8, #0xe64
  40a130:	cmp	x9, #0x0
  40a134:	csel	x3, x8, x9, eq  // eq = none
  40a138:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a13c:	add	x0, x0, #0xf3f
  40a140:	mov	x1, x21
  40a144:	bl	403a58 <printf@plt>
  40a148:	mov	w21, wzr
  40a14c:	ldr	x0, [sp, #32]
  40a150:	bl	4039d8 <free@plt>
  40a154:	ldr	x0, [sp, #40]
  40a158:	bl	403aa8 <strv_free@plt>
  40a15c:	ldr	x0, [sp, #48]
  40a160:	bl	403aa8 <strv_free@plt>
  40a164:	ldr	x0, [sp, #56]
  40a168:	bl	403aa8 <strv_free@plt>
  40a16c:	ldr	x0, [sp, #64]
  40a170:	bl	403aa8 <strv_free@plt>
  40a174:	ldur	x0, [x29, #-32]
  40a178:	cbz	x0, 40a180 <ascii_strlower_n@plt+0x5d78>
  40a17c:	bl	403d88 <sd_bus_message_unref@plt>
  40a180:	sub	x0, x29, #0x18
  40a184:	bl	403d78 <sd_bus_error_free@plt>
  40a188:	tbnz	w21, #31, 40a51c <ascii_strlower_n@plt+0x6114>
  40a18c:	add	x0, sp, #0x8
  40a190:	bl	403e78 <sd_netlink_open@plt>
  40a194:	tbnz	w0, #31, 40a27c <ascii_strlower_n@plt+0x5e74>
  40a198:	ldr	x0, [sp, #8]
  40a19c:	add	x1, sp, #0x18
  40a1a0:	mov	w2, #0x12                  	// #18
  40a1a4:	mov	w3, wzr
  40a1a8:	bl	403e88 <sd_rtnl_message_new_link@plt>
  40a1ac:	tbnz	w0, #31, 40a270 <ascii_strlower_n@plt+0x5e68>
  40a1b0:	ldr	x0, [sp, #24]
  40a1b4:	mov	w1, #0x1                   	// #1
  40a1b8:	bl	403e98 <sd_netlink_message_request_dump@plt>
  40a1bc:	tbnz	w0, #31, 40a270 <ascii_strlower_n@plt+0x5e68>
  40a1c0:	ldr	x0, [sp, #8]
  40a1c4:	ldr	x1, [sp, #24]
  40a1c8:	add	x3, sp, #0x10
  40a1cc:	mov	x2, xzr
  40a1d0:	bl	403ea8 <sd_netlink_call@plt>
  40a1d4:	tbnz	w0, #31, 40a2c0 <ascii_strlower_n@plt+0x5eb8>
  40a1d8:	ldr	x22, [sp, #16]
  40a1dc:	cbz	x22, 40a518 <ascii_strlower_n@plt+0x6110>
  40a1e0:	mov	w21, wzr
  40a1e4:	mov	w23, #0xffffffff            	// #-1
  40a1e8:	b	40a1fc <ascii_strlower_n@plt+0x5df4>
  40a1ec:	mov	x0, x22
  40a1f0:	bl	403eb8 <sd_netlink_message_next@plt>
  40a1f4:	mov	x22, x0
  40a1f8:	cbz	x0, 40a51c <ascii_strlower_n@plt+0x6114>
  40a1fc:	sub	x1, x29, #0x20
  40a200:	mov	x0, x22
  40a204:	bl	403ec8 <sd_netlink_message_get_type@plt>
  40a208:	tbnz	w0, #31, 40a50c <ascii_strlower_n@plt+0x6104>
  40a20c:	ldurh	w8, [x29, #-32]
  40a210:	cmp	w8, #0x10
  40a214:	b.ne	40a1ec <ascii_strlower_n@plt+0x5de4>  // b.any
  40a218:	sub	x1, x29, #0x18
  40a21c:	mov	x0, x22
  40a220:	bl	403ed8 <sd_rtnl_message_link_get_ifindex@plt>
  40a224:	tbnz	w0, #31, 40a50c <ascii_strlower_n@plt+0x6104>
  40a228:	ldur	w8, [x29, #-24]
  40a22c:	cmp	w8, #0x1
  40a230:	b.eq	40a1ec <ascii_strlower_n@plt+0x5de4>  // b.none
  40a234:	add	x2, sp, #0x20
  40a238:	mov	w1, #0x3                   	// #3
  40a23c:	mov	x0, x22
  40a240:	bl	403ee8 <sd_netlink_message_read_string@plt>
  40a244:	tbnz	w0, #31, 40a50c <ascii_strlower_n@plt+0x6104>
  40a248:	ldur	w1, [x29, #-24]
  40a24c:	ldr	x2, [sp, #32]
  40a250:	add	x4, sp, #0x4
  40a254:	mov	x0, x20
  40a258:	mov	w3, w19
  40a25c:	bl	409674 <ascii_strlower_n@plt+0x526c>
  40a260:	cmp	w0, #0x0
  40a264:	ccmp	w21, w23, #0x4, lt  // lt = tstop
  40a268:	csel	w21, w0, w21, gt
  40a26c:	b	40a1ec <ascii_strlower_n@plt+0x5de4>
  40a270:	bl	403ef8 <rtnl_log_create_error@plt>
  40a274:	mov	w21, w0
  40a278:	b	40a51c <ascii_strlower_n@plt+0x6114>
  40a27c:	mov	w21, w0
  40a280:	mov	w0, wzr
  40a284:	bl	4039a8 <log_get_max_level_realm@plt>
  40a288:	cmp	w0, #0x3
  40a28c:	b.lt	40a2f8 <ascii_strlower_n@plt+0x5ef0>  // b.tstop
  40a290:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a294:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a298:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a29c:	add	x2, x2, #0xfaf
  40a2a0:	add	x4, x4, #0xe8d
  40a2a4:	add	x5, x5, #0xe98
  40a2a8:	mov	w0, #0x3                   	// #3
  40a2ac:	mov	w3, #0x6ee                 	// #1774
  40a2b0:	mov	w1, w21
  40a2b4:	bl	4039b8 <log_internal_realm@plt>
  40a2b8:	mov	w21, w0
  40a2bc:	b	40a51c <ascii_strlower_n@plt+0x6114>
  40a2c0:	mov	w21, w0
  40a2c4:	mov	w0, wzr
  40a2c8:	bl	4039a8 <log_get_max_level_realm@plt>
  40a2cc:	cmp	w0, #0x3
  40a2d0:	b.lt	40a2f8 <ascii_strlower_n@plt+0x5ef0>  // b.tstop
  40a2d4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a2d8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a2dc:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a2e0:	add	x2, x2, #0xfaf
  40a2e4:	add	x4, x4, #0xe8d
  40a2e8:	add	x5, x5, #0xeb9
  40a2ec:	mov	w0, #0x3                   	// #3
  40a2f0:	mov	w3, #0x6fa                 	// #1786
  40a2f4:	b	40a2b0 <ascii_strlower_n@plt+0x5ea8>
  40a2f8:	mov	w8, wzr
  40a2fc:	neg	w9, w21
  40a300:	sub	w21, w8, w9, uxtb
  40a304:	b	40a51c <ascii_strlower_n@plt+0x6114>
  40a308:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a30c:	add	x0, x0, #0xf4f
  40a310:	mov	x1, x21
  40a314:	bl	403a58 <printf@plt>
  40a318:	ldp	x9, x10, [sp, #72]
  40a31c:	ldp	x11, x12, [sp, #88]
  40a320:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a324:	add	x8, x8, #0xe64
  40a328:	cmp	x9, #0x0
  40a32c:	ldrb	w13, [sp, #104]
  40a330:	csel	x1, x8, x9, eq  // eq = none
  40a334:	cmp	x10, #0x0
  40a338:	csel	x2, x8, x10, eq  // eq = none
  40a33c:	cmp	x11, #0x0
  40a340:	csel	x3, x8, x11, eq  // eq = none
  40a344:	cmp	x12, #0x0
  40a348:	adrp	x14, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a34c:	csel	x4, x8, x12, eq  // eq = none
  40a350:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a354:	add	x14, x14, #0xe5d
  40a358:	add	x8, x8, #0xe61
  40a35c:	cmp	w13, #0x0
  40a360:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a364:	csel	x5, x8, x14, eq  // eq = none
  40a368:	add	x0, x0, #0xf5b
  40a36c:	bl	403a58 <printf@plt>
  40a370:	ldr	x1, [sp, #32]
  40a374:	cbz	x1, 40a384 <ascii_strlower_n@plt+0x5f7c>
  40a378:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a37c:	add	x0, x0, #0xb9d
  40a380:	bl	403a58 <printf@plt>
  40a384:	ldr	x23, [sp, #40]
  40a388:	cbz	x23, 40a3e0 <ascii_strlower_n@plt+0x5fd8>
  40a38c:	ldr	x2, [x23]
  40a390:	cbz	x2, 40a3e0 <ascii_strlower_n@plt+0x5fd8>
  40a394:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a398:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a39c:	add	x21, x21, #0xbc7
  40a3a0:	add	x0, x0, #0xbb7
  40a3a4:	mov	x1, x21
  40a3a8:	bl	403a58 <printf@plt>
  40a3ac:	ldr	x2, [x23, #8]!
  40a3b0:	cbz	x2, 40a3e0 <ascii_strlower_n@plt+0x5fd8>
  40a3b4:	adrp	x24, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a3b8:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a3bc:	add	x24, x24, #0xbd4
  40a3c0:	add	x22, x22, #0xbb7
  40a3c4:	ldr	x8, [sp, #40]
  40a3c8:	mov	x0, x22
  40a3cc:	cmp	x23, x8
  40a3d0:	csel	x1, x21, x24, eq  // eq = none
  40a3d4:	bl	403a58 <printf@plt>
  40a3d8:	ldr	x2, [x23, #8]!
  40a3dc:	cbnz	x2, 40a3c4 <ascii_strlower_n@plt+0x5fbc>
  40a3e0:	ldr	x23, [sp, #48]
  40a3e4:	cbz	x23, 40a43c <ascii_strlower_n@plt+0x6034>
  40a3e8:	ldr	x2, [x23]
  40a3ec:	cbz	x2, 40a43c <ascii_strlower_n@plt+0x6034>
  40a3f0:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a3f4:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a3f8:	add	x21, x21, #0xfe0
  40a3fc:	add	x0, x0, #0xfd9
  40a400:	mov	x1, x21
  40a404:	bl	403a58 <printf@plt>
  40a408:	ldr	x2, [x23, #8]!
  40a40c:	cbz	x2, 40a43c <ascii_strlower_n@plt+0x6034>
  40a410:	adrp	x24, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a414:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a418:	add	x24, x24, #0xff6
  40a41c:	add	x22, x22, #0xfd9
  40a420:	ldr	x8, [sp, #48]
  40a424:	mov	x0, x22
  40a428:	cmp	x23, x8
  40a42c:	csel	x1, x21, x24, eq  // eq = none
  40a430:	bl	403a58 <printf@plt>
  40a434:	ldr	x2, [x23, #8]!
  40a438:	cbnz	x2, 40a420 <ascii_strlower_n@plt+0x6018>
  40a43c:	ldr	x23, [sp, #56]
  40a440:	cbz	x23, 40a498 <ascii_strlower_n@plt+0x6090>
  40a444:	ldr	x2, [x23]
  40a448:	cbz	x2, 40a498 <ascii_strlower_n@plt+0x6090>
  40a44c:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a450:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a454:	add	x21, x21, #0xbf2
  40a458:	add	x0, x0, #0xbe1
  40a45c:	mov	x1, x21
  40a460:	bl	403a58 <printf@plt>
  40a464:	ldr	x2, [x23, #8]!
  40a468:	cbz	x2, 40a498 <ascii_strlower_n@plt+0x6090>
  40a46c:	adrp	x24, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a470:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a474:	add	x24, x24, #0xbfe
  40a478:	add	x22, x22, #0xbe1
  40a47c:	ldr	x8, [sp, #56]
  40a480:	mov	x0, x22
  40a484:	cmp	x23, x8
  40a488:	csel	x1, x21, x24, eq  // eq = none
  40a48c:	bl	403a58 <printf@plt>
  40a490:	ldr	x2, [x23, #8]!
  40a494:	cbnz	x2, 40a47c <ascii_strlower_n@plt+0x6074>
  40a498:	ldr	x0, [sp, #64]
  40a49c:	bl	403f08 <strv_sort@plt>
  40a4a0:	ldr	x23, [sp, #64]
  40a4a4:	cbz	x23, 40a4fc <ascii_strlower_n@plt+0x60f4>
  40a4a8:	ldr	x2, [x23]
  40a4ac:	cbz	x2, 40a4fc <ascii_strlower_n@plt+0x60f4>
  40a4b0:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a4b4:	adrp	x0, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a4b8:	add	x21, x21, #0xc0a
  40a4bc:	add	x0, x0, #0xbe1
  40a4c0:	mov	x1, x21
  40a4c4:	bl	403a58 <printf@plt>
  40a4c8:	ldr	x2, [x23, #8]!
  40a4cc:	cbz	x2, 40a4fc <ascii_strlower_n@plt+0x60f4>
  40a4d0:	adrp	x24, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a4d4:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a4d8:	add	x24, x24, #0xbfe
  40a4dc:	add	x22, x22, #0xbe1
  40a4e0:	ldr	x8, [sp, #64]
  40a4e4:	mov	x0, x22
  40a4e8:	cmp	x23, x8
  40a4ec:	csel	x1, x21, x24, eq  // eq = none
  40a4f0:	bl	403a58 <printf@plt>
  40a4f4:	ldr	x2, [x23, #8]!
  40a4f8:	cbnz	x2, 40a4e0 <ascii_strlower_n@plt+0x60d8>
  40a4fc:	mov	w21, wzr
  40a500:	mov	w8, #0x1                   	// #1
  40a504:	strb	w8, [sp, #4]
  40a508:	b	40a14c <ascii_strlower_n@plt+0x5d44>
  40a50c:	bl	403f18 <rtnl_log_parse_error@plt>
  40a510:	mov	w21, w0
  40a514:	b	40a51c <ascii_strlower_n@plt+0x6114>
  40a518:	mov	w21, wzr
  40a51c:	ldr	x0, [sp, #8]
  40a520:	cbz	x0, 40a528 <ascii_strlower_n@plt+0x6120>
  40a524:	bl	403f28 <sd_netlink_unref@plt>
  40a528:	ldr	x0, [sp, #16]
  40a52c:	cbz	x0, 40a534 <ascii_strlower_n@plt+0x612c>
  40a530:	bl	403f38 <sd_netlink_message_unref@plt>
  40a534:	ldr	x0, [sp, #24]
  40a538:	cbz	x0, 40a540 <ascii_strlower_n@plt+0x6138>
  40a53c:	bl	403f38 <sd_netlink_message_unref@plt>
  40a540:	mov	w0, w21
  40a544:	ldp	x20, x19, [sp, #192]
  40a548:	ldp	x22, x21, [sp, #176]
  40a54c:	ldp	x24, x23, [sp, #160]
  40a550:	ldp	x29, x30, [sp, #144]
  40a554:	add	sp, sp, #0xd0
  40a558:	ret
  40a55c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a560:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a564:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a568:	add	x1, x1, #0x99c
  40a56c:	add	x2, x2, #0xfaf
  40a570:	add	x4, x4, #0xe68
  40a574:	mov	w3, #0x6e6                 	// #1766
  40a578:	bl	403a98 <log_assert_failed_realm@plt>
  40a57c:	stp	x29, x30, [sp, #-48]!
  40a580:	str	x21, [sp, #16]
  40a584:	stp	x20, x19, [sp, #32]
  40a588:	mov	x29, sp
  40a58c:	cbz	x0, 40a648 <ascii_strlower_n@plt+0x6240>
  40a590:	cbz	x1, 40a668 <ascii_strlower_n@plt+0x6260>
  40a594:	mov	x19, x2
  40a598:	cbz	x2, 40a68c <ascii_strlower_n@plt+0x6284>
  40a59c:	mov	x20, x4
  40a5a0:	cbz	x4, 40a6b0 <ascii_strlower_n@plt+0x62a8>
  40a5a4:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a5a8:	add	x2, x2, #0x926
  40a5ac:	mov	w1, #0x61                  	// #97
  40a5b0:	mov	x0, x19
  40a5b4:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40a5b8:	tbz	w0, #31, 40a5d0 <ascii_strlower_n@plt+0x61c8>
  40a5bc:	mov	w21, w0
  40a5c0:	b	40a634 <ascii_strlower_n@plt+0x622c>
  40a5c4:	ldr	x1, [x29, #24]
  40a5c8:	mov	x0, x1
  40a5cc:	bl	4039d8 <free@plt>
  40a5d0:	add	x2, x29, #0x18
  40a5d4:	mov	x0, x19
  40a5d8:	mov	w1, wzr
  40a5dc:	str	xzr, [x29, #24]
  40a5e0:	bl	40a8e0 <ascii_strlower_n@plt+0x64d8>
  40a5e4:	mov	w21, w0
  40a5e8:	tbnz	w0, #31, 40a614 <ascii_strlower_n@plt+0x620c>
  40a5ec:	ldr	x1, [x29, #24]
  40a5f0:	cbz	w21, 40a620 <ascii_strlower_n@plt+0x6218>
  40a5f4:	cbz	x1, 40a5c8 <ascii_strlower_n@plt+0x61c0>
  40a5f8:	ldrb	w8, [x1]
  40a5fc:	cbz	w8, 40a5c8 <ascii_strlower_n@plt+0x61c0>
  40a600:	mov	x0, x20
  40a604:	str	xzr, [x29, #24]
  40a608:	bl	403f48 <strv_consume@plt>
  40a60c:	tbz	w0, #31, 40a5c4 <ascii_strlower_n@plt+0x61bc>
  40a610:	mov	w21, w0
  40a614:	ldr	x0, [x29, #24]
  40a618:	bl	4039d8 <free@plt>
  40a61c:	b	40a634 <ascii_strlower_n@plt+0x622c>
  40a620:	mov	x0, x1
  40a624:	bl	4039d8 <free@plt>
  40a628:	mov	x0, x19
  40a62c:	bl	403d18 <sd_bus_message_exit_container@plt>
  40a630:	and	w21, w0, w0, asr #31
  40a634:	mov	w0, w21
  40a638:	ldp	x20, x19, [sp, #32]
  40a63c:	ldr	x21, [sp, #16]
  40a640:	ldp	x29, x30, [sp], #48
  40a644:	ret
  40a648:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a64c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a650:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a654:	add	x1, x1, #0x99c
  40a658:	add	x2, x2, #0xfaf
  40a65c:	add	x4, x4, #0xc16
  40a660:	mov	w3, #0x4c6                 	// #1222
  40a664:	bl	403a98 <log_assert_failed_realm@plt>
  40a668:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a66c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a670:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a674:	add	x1, x1, #0xc71
  40a678:	add	x2, x2, #0xfaf
  40a67c:	add	x4, x4, #0xc16
  40a680:	mov	w3, #0x4c7                 	// #1223
  40a684:	mov	w0, wzr
  40a688:	bl	403a98 <log_assert_failed_realm@plt>
  40a68c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a690:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a694:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a698:	add	x1, x1, #0xc78
  40a69c:	add	x2, x2, #0xfaf
  40a6a0:	add	x4, x4, #0xc16
  40a6a4:	mov	w3, #0x4c8                 	// #1224
  40a6a8:	mov	w0, wzr
  40a6ac:	bl	403a98 <log_assert_failed_realm@plt>
  40a6b0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a6b4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a6b8:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a6bc:	add	x1, x1, #0xc7a
  40a6c0:	add	x2, x2, #0xfaf
  40a6c4:	add	x4, x4, #0xc16
  40a6c8:	mov	w3, #0x4c9                 	// #1225
  40a6cc:	mov	w0, wzr
  40a6d0:	bl	403a98 <log_assert_failed_realm@plt>
  40a6d4:	stp	x29, x30, [sp, #-16]!
  40a6d8:	mov	x0, x2
  40a6dc:	mov	x29, sp
  40a6e0:	cbz	x2, 40a6f8 <ascii_strlower_n@plt+0x62f0>
  40a6e4:	cbz	x4, 40a718 <ascii_strlower_n@plt+0x6310>
  40a6e8:	mov	w1, wzr
  40a6ec:	mov	x2, x4
  40a6f0:	ldp	x29, x30, [sp], #16
  40a6f4:	b	40a8e0 <ascii_strlower_n@plt+0x64d8>
  40a6f8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a6fc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a700:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a704:	add	x1, x1, #0xc78
  40a708:	add	x2, x2, #0xfaf
  40a70c:	add	x4, x4, #0xd78
  40a710:	mov	w3, #0x4e8                 	// #1256
  40a714:	bl	403a98 <log_assert_failed_realm@plt>
  40a718:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a71c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a720:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a724:	add	x1, x1, #0xdda
  40a728:	add	x2, x2, #0xfaf
  40a72c:	add	x4, x4, #0xd78
  40a730:	mov	w3, #0x4e9                 	// #1257
  40a734:	mov	w0, wzr
  40a738:	bl	403a98 <log_assert_failed_realm@plt>
  40a73c:	sub	sp, sp, #0x40
  40a740:	stp	x29, x30, [sp, #16]
  40a744:	stp	x22, x21, [sp, #32]
  40a748:	stp	x20, x19, [sp, #48]
  40a74c:	add	x29, sp, #0x10
  40a750:	cbz	x0, 40a854 <ascii_strlower_n@plt+0x644c>
  40a754:	cbz	x1, 40a874 <ascii_strlower_n@plt+0x646c>
  40a758:	mov	x19, x2
  40a75c:	cbz	x2, 40a898 <ascii_strlower_n@plt+0x6490>
  40a760:	mov	x20, x4
  40a764:	cbz	x4, 40a8bc <ascii_strlower_n@plt+0x64b4>
  40a768:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a76c:	add	x2, x2, #0xe3a
  40a770:	mov	w1, #0x61                  	// #97
  40a774:	mov	x0, x19
  40a778:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40a77c:	tbnz	w0, #31, 40a840 <ascii_strlower_n@plt+0x6438>
  40a780:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a784:	add	x1, x1, #0xe3a
  40a788:	mov	x2, sp
  40a78c:	sub	x3, x29, #0x4
  40a790:	mov	x0, x19
  40a794:	bl	403d08 <sd_bus_message_read@plt>
  40a798:	cmp	w0, #0x1
  40a79c:	b.lt	40a828 <ascii_strlower_n@plt+0x6420>  // b.tstop
  40a7a0:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a7a4:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a7a8:	add	x21, x21, #0xe3a
  40a7ac:	add	x22, x22, #0xe45
  40a7b0:	b	40a7dc <ascii_strlower_n@plt+0x63d4>
  40a7b4:	mov	x1, xzr
  40a7b8:	mov	x0, x1
  40a7bc:	bl	4039d8 <free@plt>
  40a7c0:	mov	x2, sp
  40a7c4:	sub	x3, x29, #0x4
  40a7c8:	mov	x0, x19
  40a7cc:	mov	x1, x21
  40a7d0:	bl	403d08 <sd_bus_message_read@plt>
  40a7d4:	cmp	w0, #0x1
  40a7d8:	b.lt	40a828 <ascii_strlower_n@plt+0x6420>  // b.tstop
  40a7dc:	ldur	w8, [x29, #-4]
  40a7e0:	ldr	x1, [sp]
  40a7e4:	cbz	w8, 40a800 <ascii_strlower_n@plt+0x63f8>
  40a7e8:	mov	x0, x22
  40a7ec:	mov	x2, xzr
  40a7f0:	bl	403f58 <strjoin_real@plt>
  40a7f4:	mov	x1, x0
  40a7f8:	cbnz	x0, 40a810 <ascii_strlower_n@plt+0x6408>
  40a7fc:	b	40a83c <ascii_strlower_n@plt+0x6434>
  40a800:	mov	x0, x1
  40a804:	bl	403ae8 <strdup@plt>
  40a808:	mov	x1, x0
  40a80c:	cbz	x0, 40a83c <ascii_strlower_n@plt+0x6434>
  40a810:	ldrb	w8, [x1]
  40a814:	cbz	w8, 40a7b8 <ascii_strlower_n@plt+0x63b0>
  40a818:	mov	x0, x20
  40a81c:	bl	403f48 <strv_consume@plt>
  40a820:	tbz	w0, #31, 40a7b4 <ascii_strlower_n@plt+0x63ac>
  40a824:	b	40a840 <ascii_strlower_n@plt+0x6438>
  40a828:	tbnz	w0, #31, 40a840 <ascii_strlower_n@plt+0x6438>
  40a82c:	mov	x0, x19
  40a830:	bl	403d18 <sd_bus_message_exit_container@plt>
  40a834:	and	w0, w0, w0, asr #31
  40a838:	b	40a840 <ascii_strlower_n@plt+0x6438>
  40a83c:	mov	w0, #0xfffffff4            	// #-12
  40a840:	ldp	x20, x19, [sp, #48]
  40a844:	ldp	x22, x21, [sp, #32]
  40a848:	ldp	x29, x30, [sp, #16]
  40a84c:	add	sp, sp, #0x40
  40a850:	ret
  40a854:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a858:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a85c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a860:	add	x1, x1, #0x99c
  40a864:	add	x2, x2, #0xfaf
  40a868:	add	x4, x4, #0xde3
  40a86c:	mov	w3, #0x513                 	// #1299
  40a870:	bl	403a98 <log_assert_failed_realm@plt>
  40a874:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a878:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a87c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a880:	add	x1, x1, #0xc71
  40a884:	add	x2, x2, #0xfaf
  40a888:	add	x4, x4, #0xde3
  40a88c:	mov	w3, #0x514                 	// #1300
  40a890:	mov	w0, wzr
  40a894:	bl	403a98 <log_assert_failed_realm@plt>
  40a898:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a89c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a8a0:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a8a4:	add	x1, x1, #0xc78
  40a8a8:	add	x2, x2, #0xfaf
  40a8ac:	add	x4, x4, #0xde3
  40a8b0:	mov	w3, #0x515                 	// #1301
  40a8b4:	mov	w0, wzr
  40a8b8:	bl	403a98 <log_assert_failed_realm@plt>
  40a8bc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a8c0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40a8c4:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a8c8:	add	x1, x1, #0xc7a
  40a8cc:	add	x2, x2, #0xfaf
  40a8d0:	add	x4, x4, #0xde3
  40a8d4:	mov	w3, #0x516                 	// #1302
  40a8d8:	mov	w0, wzr
  40a8dc:	bl	403a98 <log_assert_failed_realm@plt>
  40a8e0:	sub	sp, sp, #0x50
  40a8e4:	stp	x29, x30, [sp, #32]
  40a8e8:	add	x29, sp, #0x20
  40a8ec:	stp	x22, x21, [sp, #48]
  40a8f0:	stp	x20, x19, [sp, #64]
  40a8f4:	stur	xzr, [x29, #-8]
  40a8f8:	cbz	x0, 40aa94 <ascii_strlower_n@plt+0x668c>
  40a8fc:	mov	x19, x2
  40a900:	cbz	x2, 40aab4 <ascii_strlower_n@plt+0x66ac>
  40a904:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a908:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a90c:	add	x8, x8, #0xcbf
  40a910:	add	x9, x9, #0xcba
  40a914:	tst	w1, #0x1
  40a918:	mov	w20, w1
  40a91c:	csel	x2, x9, x8, ne  // ne = any
  40a920:	mov	w1, #0x72                  	// #114
  40a924:	mov	x21, x0
  40a928:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40a92c:	cmp	w0, #0x1
  40a930:	b.lt	40a9f4 <ascii_strlower_n@plt+0x65ec>  // b.tstop
  40a934:	tbz	w20, #0, 40a950 <ascii_strlower_n@plt+0x6548>
  40a938:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a93c:	add	x1, x1, #0xcc3
  40a940:	sub	x2, x29, #0xc
  40a944:	mov	x0, x21
  40a948:	bl	403d08 <sd_bus_message_read@plt>
  40a94c:	tbnz	w0, #31, 40a9f4 <ascii_strlower_n@plt+0x65ec>
  40a950:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40a954:	add	x1, x1, #0xcc3
  40a958:	add	x2, sp, #0x10
  40a95c:	mov	x0, x21
  40a960:	bl	403d08 <sd_bus_message_read@plt>
  40a964:	tbnz	w0, #31, 40a9f4 <ascii_strlower_n@plt+0x65ec>
  40a968:	add	x2, sp, #0x8
  40a96c:	mov	x3, sp
  40a970:	mov	w1, #0x79                  	// #121
  40a974:	mov	x0, x21
  40a978:	bl	403d58 <sd_bus_message_read_array@plt>
  40a97c:	tbnz	w0, #31, 40a9f4 <ascii_strlower_n@plt+0x65ec>
  40a980:	mov	x0, x21
  40a984:	bl	403d18 <sd_bus_message_exit_container@plt>
  40a988:	tbnz	w0, #31, 40a9f4 <ascii_strlower_n@plt+0x65ec>
  40a98c:	ldur	w8, [x29, #-12]
  40a990:	cbz	w8, 40a9a4 <ascii_strlower_n@plt+0x659c>
  40a994:	tbz	w20, #0, 40a9a4 <ascii_strlower_n@plt+0x659c>
  40a998:	str	xzr, [x19]
  40a99c:	mov	w22, #0x1                   	// #1
  40a9a0:	b	40a9f8 <ascii_strlower_n@plt+0x65f0>
  40a9a4:	ldr	w20, [sp, #16]
  40a9a8:	orr	w8, w20, #0x8
  40a9ac:	cmp	w8, #0xa
  40a9b0:	b.ne	40aa18 <ascii_strlower_n@plt+0x6610>  // b.any
  40a9b4:	ldr	x8, [sp]
  40a9b8:	cmp	w20, #0xa
  40a9bc:	mov	w9, #0x4                   	// #4
  40a9c0:	mov	w10, #0x10                  	// #16
  40a9c4:	csel	x9, x10, x9, eq  // eq = none
  40a9c8:	cmp	x8, x9
  40a9cc:	b.ne	40aa58 <ascii_strlower_n@plt+0x6650>  // b.any
  40a9d0:	ldr	x1, [sp, #8]
  40a9d4:	sub	x2, x29, #0x8
  40a9d8:	mov	w0, w20
  40a9dc:	bl	403f68 <in_addr_to_string@plt>
  40a9e0:	tbnz	w0, #31, 40a9f4 <ascii_strlower_n@plt+0x65ec>
  40a9e4:	ldur	x8, [x29, #-8]
  40a9e8:	stur	xzr, [x29, #-8]
  40a9ec:	str	x8, [x19]
  40a9f0:	b	40a99c <ascii_strlower_n@plt+0x6594>
  40a9f4:	mov	w22, w0
  40a9f8:	ldur	x0, [x29, #-8]
  40a9fc:	bl	4039d8 <free@plt>
  40aa00:	mov	w0, w22
  40aa04:	ldp	x20, x19, [sp, #64]
  40aa08:	ldp	x22, x21, [sp, #48]
  40aa0c:	ldp	x29, x30, [sp, #32]
  40aa10:	add	sp, sp, #0x50
  40aa14:	ret
  40aa18:	mov	w0, wzr
  40aa1c:	bl	4039a8 <log_get_max_level_realm@plt>
  40aa20:	cmp	w0, #0x7
  40aa24:	b.lt	40a998 <ascii_strlower_n@plt+0x6590>  // b.tstop
  40aa28:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40aa2c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aa30:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aa34:	add	x2, x2, #0xfaf
  40aa38:	add	x4, x4, #0xcc5
  40aa3c:	add	x5, x5, #0xcd9
  40aa40:	mov	w0, #0x7                   	// #7
  40aa44:	mov	w3, #0x4ac                 	// #1196
  40aa48:	mov	w1, wzr
  40aa4c:	mov	w6, w20
  40aa50:	bl	4039b8 <log_internal_realm@plt>
  40aa54:	b	40a998 <ascii_strlower_n@plt+0x6590>
  40aa58:	mov	w0, wzr
  40aa5c:	bl	4039a8 <log_get_max_level_realm@plt>
  40aa60:	cmp	w0, #0x7
  40aa64:	b.lt	40a998 <ascii_strlower_n@plt+0x6590>  // b.tstop
  40aa68:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40aa6c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aa70:	adrp	x5, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aa74:	add	x2, x2, #0xfaf
  40aa78:	add	x4, x4, #0xcc5
  40aa7c:	add	x5, x5, #0xcf9
  40aa80:	mov	w0, #0x7                   	// #7
  40aa84:	mov	w3, #0x4b3                 	// #1203
  40aa88:	mov	w1, wzr
  40aa8c:	bl	4039b8 <log_internal_realm@plt>
  40aa90:	b	40a998 <ascii_strlower_n@plt+0x6590>
  40aa94:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aa98:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40aa9c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aaa0:	add	x1, x1, #0xc78
  40aaa4:	add	x2, x2, #0xfaf
  40aaa8:	add	x4, x4, #0xc7c
  40aaac:	mov	w3, #0x48c                 	// #1164
  40aab0:	bl	403a98 <log_assert_failed_realm@plt>
  40aab4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aab8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40aabc:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aac0:	add	x1, x1, #0xcb6
  40aac4:	add	x2, x2, #0xfaf
  40aac8:	add	x4, x4, #0xc7c
  40aacc:	mov	w3, #0x48d                 	// #1165
  40aad0:	mov	w0, wzr
  40aad4:	bl	403a98 <log_assert_failed_realm@plt>
  40aad8:	stp	x29, x30, [sp, #-48]!
  40aadc:	str	x21, [sp, #16]
  40aae0:	stp	x20, x19, [sp, #32]
  40aae4:	mov	x29, sp
  40aae8:	cbz	x0, 40aba4 <ascii_strlower_n@plt+0x679c>
  40aaec:	cbz	x1, 40abc4 <ascii_strlower_n@plt+0x67bc>
  40aaf0:	mov	x19, x2
  40aaf4:	cbz	x2, 40abe8 <ascii_strlower_n@plt+0x67e0>
  40aaf8:	mov	x20, x4
  40aafc:	cbz	x4, 40ac0c <ascii_strlower_n@plt+0x6804>
  40ab00:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ab04:	add	x2, x2, #0xeeb
  40ab08:	mov	w1, #0x61                  	// #97
  40ab0c:	mov	x0, x19
  40ab10:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40ab14:	tbz	w0, #31, 40ab2c <ascii_strlower_n@plt+0x6724>
  40ab18:	mov	w21, w0
  40ab1c:	b	40ab90 <ascii_strlower_n@plt+0x6788>
  40ab20:	ldr	x1, [x29, #24]
  40ab24:	mov	x0, x1
  40ab28:	bl	4039d8 <free@plt>
  40ab2c:	add	x2, x29, #0x18
  40ab30:	mov	w1, #0x1                   	// #1
  40ab34:	mov	x0, x19
  40ab38:	str	xzr, [x29, #24]
  40ab3c:	bl	40a8e0 <ascii_strlower_n@plt+0x64d8>
  40ab40:	mov	w21, w0
  40ab44:	tbnz	w0, #31, 40ab70 <ascii_strlower_n@plt+0x6768>
  40ab48:	ldr	x1, [x29, #24]
  40ab4c:	cbz	w21, 40ab7c <ascii_strlower_n@plt+0x6774>
  40ab50:	cbz	x1, 40ab24 <ascii_strlower_n@plt+0x671c>
  40ab54:	ldrb	w8, [x1]
  40ab58:	cbz	w8, 40ab24 <ascii_strlower_n@plt+0x671c>
  40ab5c:	mov	x0, x20
  40ab60:	str	xzr, [x29, #24]
  40ab64:	bl	403f48 <strv_consume@plt>
  40ab68:	tbz	w0, #31, 40ab20 <ascii_strlower_n@plt+0x6718>
  40ab6c:	mov	w21, w0
  40ab70:	ldr	x0, [x29, #24]
  40ab74:	bl	4039d8 <free@plt>
  40ab78:	b	40ab90 <ascii_strlower_n@plt+0x6788>
  40ab7c:	mov	x0, x1
  40ab80:	bl	4039d8 <free@plt>
  40ab84:	mov	x0, x19
  40ab88:	bl	403d18 <sd_bus_message_exit_container@plt>
  40ab8c:	and	w21, w0, w0, asr #31
  40ab90:	mov	w0, w21
  40ab94:	ldp	x20, x19, [sp, #32]
  40ab98:	ldr	x21, [sp, #16]
  40ab9c:	ldp	x29, x30, [sp], #48
  40aba0:	ret
  40aba4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40aba8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40abac:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40abb0:	add	x1, x1, #0x99c
  40abb4:	add	x2, x2, #0xfaf
  40abb8:	add	x4, x4, #0xc
  40abbc:	mov	w3, #0x5f9                 	// #1529
  40abc0:	bl	403a98 <log_assert_failed_realm@plt>
  40abc4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40abc8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40abcc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40abd0:	add	x1, x1, #0xc71
  40abd4:	add	x2, x2, #0xfaf
  40abd8:	add	x4, x4, #0xc
  40abdc:	mov	w3, #0x5fa                 	// #1530
  40abe0:	mov	w0, wzr
  40abe4:	bl	403a98 <log_assert_failed_realm@plt>
  40abe8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40abec:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40abf0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40abf4:	add	x1, x1, #0xc78
  40abf8:	add	x2, x2, #0xfaf
  40abfc:	add	x4, x4, #0xc
  40ac00:	mov	w3, #0x5fb                 	// #1531
  40ac04:	mov	w0, wzr
  40ac08:	bl	403a98 <log_assert_failed_realm@plt>
  40ac0c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ac10:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ac14:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ac18:	add	x1, x1, #0xc7a
  40ac1c:	add	x2, x2, #0xfaf
  40ac20:	add	x4, x4, #0xc
  40ac24:	mov	w3, #0x5fc                 	// #1532
  40ac28:	mov	w0, wzr
  40ac2c:	bl	403a98 <log_assert_failed_realm@plt>
  40ac30:	stp	x29, x30, [sp, #-16]!
  40ac34:	mov	x0, x2
  40ac38:	mov	x29, sp
  40ac3c:	cbz	x2, 40ac54 <ascii_strlower_n@plt+0x684c>
  40ac40:	cbz	x4, 40ac74 <ascii_strlower_n@plt+0x686c>
  40ac44:	mov	w1, #0x1                   	// #1
  40ac48:	mov	x2, x4
  40ac4c:	ldp	x29, x30, [sp], #16
  40ac50:	b	40a8e0 <ascii_strlower_n@plt+0x64d8>
  40ac54:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ac58:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ac5c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ac60:	add	x1, x1, #0xc78
  40ac64:	add	x2, x2, #0xfaf
  40ac68:	add	x4, x4, #0x69
  40ac6c:	mov	w3, #0x61b                 	// #1563
  40ac70:	bl	403a98 <log_assert_failed_realm@plt>
  40ac74:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ac78:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ac7c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ac80:	add	x1, x1, #0xdda
  40ac84:	add	x2, x2, #0xfaf
  40ac88:	add	x4, x4, #0x69
  40ac8c:	mov	w3, #0x61c                 	// #1564
  40ac90:	mov	w0, wzr
  40ac94:	bl	403a98 <log_assert_failed_realm@plt>
  40ac98:	sub	sp, sp, #0x50
  40ac9c:	stp	x29, x30, [sp, #16]
  40aca0:	stp	x24, x23, [sp, #32]
  40aca4:	stp	x22, x21, [sp, #48]
  40aca8:	stp	x20, x19, [sp, #64]
  40acac:	add	x29, sp, #0x10
  40acb0:	cbz	x0, 40ade4 <ascii_strlower_n@plt+0x69dc>
  40acb4:	cbz	x1, 40ae04 <ascii_strlower_n@plt+0x69fc>
  40acb8:	mov	x19, x2
  40acbc:	cbz	x2, 40ae28 <ascii_strlower_n@plt+0x6a20>
  40acc0:	mov	x20, x4
  40acc4:	cbz	x4, 40ae4c <ascii_strlower_n@plt+0x6a44>
  40acc8:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40accc:	add	x2, x2, #0xe3f
  40acd0:	mov	w1, #0x61                  	// #97
  40acd4:	mov	x0, x19
  40acd8:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40acdc:	tbnz	w0, #31, 40adac <ascii_strlower_n@plt+0x69a4>
  40ace0:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ace4:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ace8:	add	x21, x21, #0xe3f
  40acec:	mov	w24, #0xfffffff4            	// #-12
  40acf0:	add	x22, x22, #0xe45
  40acf4:	b	40ad00 <ascii_strlower_n@plt+0x68f8>
  40acf8:	mov	x0, x1
  40acfc:	bl	4039d8 <free@plt>
  40ad00:	sub	x2, x29, #0x4
  40ad04:	mov	x3, sp
  40ad08:	add	x4, sp, #0x8
  40ad0c:	mov	x0, x19
  40ad10:	mov	x1, x21
  40ad14:	bl	403d08 <sd_bus_message_read@plt>
  40ad18:	cmp	w0, #0x1
  40ad1c:	b.lt	40ad38 <ascii_strlower_n@plt+0x6930>  // b.tstop
  40ad20:	ldur	w8, [x29, #-4]
  40ad24:	cbz	w8, 40ad48 <ascii_strlower_n@plt+0x6940>
  40ad28:	mov	x1, xzr
  40ad2c:	mov	w23, #0x1                   	// #1
  40ad30:	tbz	w23, #31, 40ad7c <ascii_strlower_n@plt+0x6974>
  40ad34:	b	40ada0 <ascii_strlower_n@plt+0x6998>
  40ad38:	mov	w23, w0
  40ad3c:	mov	x1, xzr
  40ad40:	tbz	w23, #31, 40ad7c <ascii_strlower_n@plt+0x6974>
  40ad44:	b	40ada0 <ascii_strlower_n@plt+0x6998>
  40ad48:	ldr	w8, [sp, #8]
  40ad4c:	ldr	x1, [sp]
  40ad50:	cbz	w8, 40ad64 <ascii_strlower_n@plt+0x695c>
  40ad54:	mov	x0, x22
  40ad58:	mov	x2, xzr
  40ad5c:	bl	403f58 <strjoin_real@plt>
  40ad60:	b	40ad6c <ascii_strlower_n@plt+0x6964>
  40ad64:	mov	x0, x1
  40ad68:	bl	403ae8 <strdup@plt>
  40ad6c:	cmp	x0, #0x0
  40ad70:	mov	x1, x0
  40ad74:	csinc	w23, w24, wzr, eq  // eq = none
  40ad78:	tbnz	w23, #31, 40ada0 <ascii_strlower_n@plt+0x6998>
  40ad7c:	cbz	w23, 40adb4 <ascii_strlower_n@plt+0x69ac>
  40ad80:	cbz	x1, 40acf8 <ascii_strlower_n@plt+0x68f0>
  40ad84:	ldrb	w8, [x1]
  40ad88:	cbz	w8, 40acf8 <ascii_strlower_n@plt+0x68f0>
  40ad8c:	mov	x0, x20
  40ad90:	bl	403f48 <strv_consume@plt>
  40ad94:	mov	x1, xzr
  40ad98:	tbz	w0, #31, 40acf8 <ascii_strlower_n@plt+0x68f0>
  40ad9c:	mov	w23, w0
  40ada0:	mov	x0, x1
  40ada4:	bl	4039d8 <free@plt>
  40ada8:	b	40adc8 <ascii_strlower_n@plt+0x69c0>
  40adac:	mov	w23, w0
  40adb0:	b	40adc8 <ascii_strlower_n@plt+0x69c0>
  40adb4:	mov	x0, x1
  40adb8:	bl	4039d8 <free@plt>
  40adbc:	mov	x0, x19
  40adc0:	bl	403d18 <sd_bus_message_exit_container@plt>
  40adc4:	and	w23, w0, w0, asr #31
  40adc8:	mov	w0, w23
  40adcc:	ldp	x20, x19, [sp, #64]
  40add0:	ldp	x22, x21, [sp, #48]
  40add4:	ldp	x24, x23, [sp, #32]
  40add8:	ldp	x29, x30, [sp, #16]
  40addc:	add	sp, sp, #0x50
  40ade0:	ret
  40ade4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ade8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40adec:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40adf0:	add	x1, x1, #0x99c
  40adf4:	add	x2, x2, #0xfaf
  40adf8:	add	x4, x4, #0xcd
  40adfc:	mov	w3, #0x625                 	// #1573
  40ae00:	bl	403a98 <log_assert_failed_realm@plt>
  40ae04:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ae08:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ae0c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ae10:	add	x1, x1, #0xc71
  40ae14:	add	x2, x2, #0xfaf
  40ae18:	add	x4, x4, #0xcd
  40ae1c:	mov	w3, #0x626                 	// #1574
  40ae20:	mov	w0, wzr
  40ae24:	bl	403a98 <log_assert_failed_realm@plt>
  40ae28:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ae2c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ae30:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ae34:	add	x1, x1, #0xc78
  40ae38:	add	x2, x2, #0xfaf
  40ae3c:	add	x4, x4, #0xcd
  40ae40:	mov	w3, #0x627                 	// #1575
  40ae44:	mov	w0, wzr
  40ae48:	bl	403a98 <log_assert_failed_realm@plt>
  40ae4c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ae50:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ae54:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ae58:	add	x1, x1, #0xc7a
  40ae5c:	add	x2, x2, #0xfaf
  40ae60:	add	x4, x4, #0xcd
  40ae64:	mov	w3, #0x628                 	// #1576
  40ae68:	mov	w0, wzr
  40ae6c:	bl	403a98 <log_assert_failed_realm@plt>
  40ae70:	sub	sp, sp, #0xe0
  40ae74:	stp	x29, x30, [sp, #128]
  40ae78:	add	x29, sp, #0x80
  40ae7c:	stp	x28, x27, [sp, #144]
  40ae80:	stp	x26, x25, [sp, #160]
  40ae84:	stp	x24, x23, [sp, #176]
  40ae88:	stp	x22, x21, [sp, #192]
  40ae8c:	stp	x20, x19, [sp, #208]
  40ae90:	stp	xzr, xzr, [x29, #-40]
  40ae94:	stp	xzr, xzr, [sp, #64]
  40ae98:	str	xzr, [sp, #80]
  40ae9c:	cbz	x1, 40b694 <ascii_strlower_n@plt+0x728c>
  40aea0:	mov	x20, x0
  40aea4:	mov	w0, wzr
  40aea8:	mov	w21, w3
  40aeac:	mov	w22, w2
  40aeb0:	mov	x19, x1
  40aeb4:	bl	4039a8 <log_get_max_level_realm@plt>
  40aeb8:	cmp	w0, #0x7
  40aebc:	b.lt	40af28 <ascii_strlower_n@plt+0x6b20>  // b.tstop
  40aec0:	mov	w0, w22
  40aec4:	bl	4191e0 <ascii_strlower_n@plt+0x14dd8>
  40aec8:	mov	x23, x0
  40aecc:	and	w0, w21, #0xffff
  40aed0:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  40aed4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40aed8:	ldr	x9, [x8, #40]
  40aedc:	mov	x8, x0
  40aee0:	cbz	x9, 40aeec <ascii_strlower_n@plt+0x6ae4>
  40aee4:	ldrb	w10, [x9]
  40aee8:	cbnz	w10, 40aef4 <ascii_strlower_n@plt+0x6aec>
  40aeec:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40aef0:	add	x9, x9, #0x1b4
  40aef4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40aef8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40aefc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40af00:	add	x2, x2, #0xfaf
  40af04:	add	x4, x4, #0x182
  40af08:	add	x5, x5, #0x191
  40af0c:	mov	w0, #0x7                   	// #7
  40af10:	mov	w3, #0x1a4                 	// #420
  40af14:	mov	w1, wzr
  40af18:	mov	x6, x19
  40af1c:	mov	x7, x23
  40af20:	stp	x8, x9, [sp]
  40af24:	bl	4039b8 <log_internal_realm@plt>
  40af28:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40af2c:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40af30:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40af34:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40af38:	add	x2, x2, #0xa4e
  40af3c:	add	x3, x3, #0xef9
  40af40:	add	x4, x4, #0x1b6
  40af44:	add	x5, x5, #0x1d7
  40af48:	sub	x1, x29, #0x20
  40af4c:	mov	x0, x20
  40af50:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40af54:	tbnz	w0, #31, 40b368 <ascii_strlower_n@plt+0x6f60>
  40af58:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40af5c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40af60:	ldur	x0, [x29, #-32]
  40af64:	ldr	w2, [x8, #56]
  40af68:	ldr	x6, [x9, #72]
  40af6c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40af70:	and	w4, w22, #0xffff
  40af74:	and	w5, w21, #0xffff
  40af78:	add	x1, x1, #0x206
  40af7c:	mov	x3, x19
  40af80:	bl	403cb8 <sd_bus_message_append@plt>
  40af84:	tbnz	w0, #31, 40b3a4 <ascii_strlower_n@plt+0x6f9c>
  40af88:	mov	w0, #0x1                   	// #1
  40af8c:	bl	403cd8 <now@plt>
  40af90:	ldur	x1, [x29, #-32]
  40af94:	mov	w2, #0xe00                 	// #3584
  40af98:	mov	x22, x0
  40af9c:	add	x3, sp, #0x40
  40afa0:	sub	x4, x29, #0x28
  40afa4:	movk	w2, #0x727, lsl #16
  40afa8:	mov	x0, x20
  40afac:	bl	403ce8 <sd_bus_call@plt>
  40afb0:	tbnz	w0, #31, 40b3f0 <ascii_strlower_n@plt+0x6fe8>
  40afb4:	mov	w0, #0x1                   	// #1
  40afb8:	bl	403cd8 <now@plt>
  40afbc:	ldur	x8, [x29, #-40]
  40afc0:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40afc4:	mov	x21, x0
  40afc8:	add	x2, x2, #0x228
  40afcc:	mov	w1, #0x61                  	// #97
  40afd0:	mov	x0, x8
  40afd4:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40afd8:	tbnz	w0, #31, 40b454 <ascii_strlower_n@plt+0x704c>
  40afdc:	sub	x8, x21, x22
  40afe0:	adrp	x22, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40afe4:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40afe8:	adrp	x24, 419000 <ascii_strlower_n@plt+0x14bf8>
  40afec:	adrp	x27, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40aff0:	mov	w25, wzr
  40aff4:	mov	w26, wzr
  40aff8:	add	x22, x22, #0x250
  40affc:	add	x23, x23, #0x256
  40b000:	add	x24, x24, #0xfaf
  40b004:	add	x27, x27, #0x182
  40b008:	str	x8, [sp, #16]
  40b00c:	b	40b020 <ascii_strlower_n@plt+0x6c18>
  40b010:	mov	w8, wzr
  40b014:	neg	w9, w20
  40b018:	sub	w21, w8, w9, uxtb
  40b01c:	tbz	wzr, #0, 40b494 <ascii_strlower_n@plt+0x708c>
  40b020:	ldur	x0, [x29, #-40]
  40b024:	mov	w1, #0x72                  	// #114
  40b028:	mov	x2, x22
  40b02c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40b030:	cmp	w0, #0x1
  40b034:	b.lt	40b4d8 <ascii_strlower_n@plt+0x70d0>  // b.tstop
  40b038:	ldur	x0, [x29, #-40]
  40b03c:	add	x2, sp, #0x34
  40b040:	add	x3, sp, #0x3c
  40b044:	add	x4, sp, #0x38
  40b048:	mov	x1, x23
  40b04c:	bl	403d08 <sd_bus_message_read@plt>
  40b050:	tbnz	w0, #31, 40b0bc <ascii_strlower_n@plt+0x6cb4>
  40b054:	ldur	x0, [x29, #-40]
  40b058:	add	x2, sp, #0x28
  40b05c:	add	x3, sp, #0x20
  40b060:	mov	w1, #0x79                  	// #121
  40b064:	bl	403d58 <sd_bus_message_read_array@plt>
  40b068:	tbnz	w0, #31, 40b0dc <ascii_strlower_n@plt+0x6cd4>
  40b06c:	ldur	x0, [x29, #-40]
  40b070:	bl	403d18 <sd_bus_message_exit_container@plt>
  40b074:	tbnz	w0, #31, 40b0fc <ascii_strlower_n@plt+0x6cf4>
  40b078:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b07c:	ldr	w8, [x8, #88]
  40b080:	cmp	w8, #0x2
  40b084:	b.ne	40b140 <ascii_strlower_n@plt+0x6d38>  // b.any
  40b088:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b08c:	ldr	x8, [sp, #32]
  40b090:	ldr	x3, [x20, #176]
  40b094:	sub	x0, x29, #0x8
  40b098:	mov	w1, #0x8                   	// #8
  40b09c:	mov	w2, #0x1                   	// #1
  40b0a0:	stur	x8, [x29, #-8]
  40b0a4:	bl	403f78 <fwrite@plt>
  40b0a8:	ldp	x2, x0, [sp, #32]
  40b0ac:	ldr	x3, [x20, #176]
  40b0b0:	mov	w1, #0x1                   	// #1
  40b0b4:	bl	403f78 <fwrite@plt>
  40b0b8:	b	40b24c <ascii_strlower_n@plt+0x6e44>
  40b0bc:	mov	w20, w0
  40b0c0:	mov	w0, wzr
  40b0c4:	bl	4039a8 <log_get_max_level_realm@plt>
  40b0c8:	cmp	w0, #0x3
  40b0cc:	b.lt	40b010 <ascii_strlower_n@plt+0x6c08>  // b.tstop
  40b0d0:	mov	w0, #0x3                   	// #3
  40b0d4:	mov	w3, #0x1cd                 	// #461
  40b0d8:	b	40b118 <ascii_strlower_n@plt+0x6d10>
  40b0dc:	mov	w20, w0
  40b0e0:	mov	w0, wzr
  40b0e4:	bl	4039a8 <log_get_max_level_realm@plt>
  40b0e8:	cmp	w0, #0x3
  40b0ec:	b.lt	40b010 <ascii_strlower_n@plt+0x6c08>  // b.tstop
  40b0f0:	mov	w0, #0x3                   	// #3
  40b0f4:	mov	w3, #0x1d1                 	// #465
  40b0f8:	b	40b118 <ascii_strlower_n@plt+0x6d10>
  40b0fc:	mov	w20, w0
  40b100:	mov	w0, wzr
  40b104:	bl	4039a8 <log_get_max_level_realm@plt>
  40b108:	cmp	w0, #0x3
  40b10c:	b.lt	40b010 <ascii_strlower_n@plt+0x6c08>  // b.tstop
  40b110:	mov	w0, #0x3                   	// #3
  40b114:	mov	w3, #0x1d5                 	// #469
  40b118:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b11c:	mov	w1, w20
  40b120:	mov	x2, x24
  40b124:	mov	x4, x27
  40b128:	add	x5, x5, #0x230
  40b12c:	bl	4039b8 <log_internal_realm@plt>
  40b130:	mov	w21, w0
  40b134:	mov	w8, wzr
  40b138:	tbnz	wzr, #0, 40b020 <ascii_strlower_n@plt+0x6c18>
  40b13c:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b140:	str	w26, [sp, #28]
  40b144:	mov	w26, w25
  40b148:	mov	x25, x24
  40b14c:	mov	x24, x27
  40b150:	ldp	x27, x20, [sp, #32]
  40b154:	ldr	w28, [sp, #52]
  40b158:	sub	x0, x29, #0x10
  40b15c:	mov	w3, #0xffff                	// #65535
  40b160:	mov	w1, wzr
  40b164:	mov	x2, xzr
  40b168:	stp	xzr, xzr, [x29, #-16]
  40b16c:	bl	40d634 <ascii_strlower_n@plt+0x922c>
  40b170:	tbnz	w0, #31, 40b1fc <ascii_strlower_n@plt+0x6df4>
  40b174:	ldur	x0, [x29, #-16]
  40b178:	mov	x1, x20
  40b17c:	mov	x2, x27
  40b180:	mov	x3, xzr
  40b184:	ldrb	w8, [x0, #160]
  40b188:	orr	w8, w8, #0x4
  40b18c:	strb	w8, [x0, #160]
  40b190:	bl	40dd08 <ascii_strlower_n@plt+0x9900>
  40b194:	tbnz	w0, #31, 40b204 <ascii_strlower_n@plt+0x6dfc>
  40b198:	ldur	x0, [x29, #-16]
  40b19c:	sub	x1, x29, #0x8
  40b1a0:	mov	x2, xzr
  40b1a4:	mov	x3, xzr
  40b1a8:	bl	410324 <ascii_strlower_n@plt+0xbf1c>
  40b1ac:	mov	x27, x24
  40b1b0:	tbnz	w0, #31, 40b278 <ascii_strlower_n@plt+0x6e70>
  40b1b4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b1b8:	ldr	w8, [x8, #88]
  40b1bc:	mov	x20, x25
  40b1c0:	cmp	w8, #0x1
  40b1c4:	b.ne	40b2b4 <ascii_strlower_n@plt+0x6eac>  // b.any
  40b1c8:	ldur	x0, [x29, #-8]
  40b1cc:	sub	x1, x29, #0x18
  40b1d0:	bl	414c04 <ascii_strlower_n@plt+0x107fc>
  40b1d4:	mov	x28, x0
  40b1d8:	tbnz	x0, #63, 40b300 <ascii_strlower_n@plt+0x6ef8>
  40b1dc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b1e0:	ldur	x0, [x29, #-24]
  40b1e4:	ldr	x3, [x8, #176]
  40b1e8:	mov	w1, #0x1                   	// #1
  40b1ec:	mov	x2, x28
  40b1f0:	bl	403f78 <fwrite@plt>
  40b1f4:	mov	w28, wzr
  40b1f8:	b	40b224 <ascii_strlower_n@plt+0x6e1c>
  40b1fc:	mov	w2, #0x175                 	// #373
  40b200:	b	40b208 <ascii_strlower_n@plt+0x6e00>
  40b204:	mov	w2, #0x17b                 	// #379
  40b208:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b20c:	mov	w0, wzr
  40b210:	mov	x1, x25
  40b214:	add	x3, x3, #0x3a8
  40b218:	bl	403a28 <log_oom_internal@plt>
  40b21c:	mov	w28, w0
  40b220:	mov	x27, x24
  40b224:	ldur	x0, [x29, #-16]
  40b228:	cbz	x0, 40b230 <ascii_strlower_n@plt+0x6e28>
  40b22c:	bl	40d9a4 <ascii_strlower_n@plt+0x959c>
  40b230:	ldur	x0, [x29, #-8]
  40b234:	mov	x24, x25
  40b238:	cbz	x0, 40b240 <ascii_strlower_n@plt+0x6e38>
  40b23c:	bl	413398 <ascii_strlower_n@plt+0xef90>
  40b240:	mov	w25, w26
  40b244:	ldr	w26, [sp, #28]
  40b248:	tbnz	w28, #31, 40b268 <ascii_strlower_n@plt+0x6e60>
  40b24c:	ldrh	w0, [sp, #56]
  40b250:	bl	419164 <ascii_strlower_n@plt+0x14d5c>
  40b254:	orr	w25, w25, w0
  40b258:	add	w26, w26, #0x1
  40b25c:	mov	w8, #0x1                   	// #1
  40b260:	tbnz	w8, #0, 40b020 <ascii_strlower_n@plt+0x6c18>
  40b264:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b268:	mov	w21, w28
  40b26c:	mov	w8, wzr
  40b270:	tbnz	wzr, #0, 40b020 <ascii_strlower_n@plt+0x6c18>
  40b274:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b278:	mov	w20, w0
  40b27c:	mov	w0, wzr
  40b280:	bl	4039a8 <log_get_max_level_realm@plt>
  40b284:	cmp	w0, #0x3
  40b288:	b.lt	40b2f0 <ascii_strlower_n@plt+0x6ee8>  // b.tstop
  40b28c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b290:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b294:	mov	w0, #0x3                   	// #3
  40b298:	mov	w3, #0x17f                 	// #383
  40b29c:	mov	w1, w20
  40b2a0:	mov	x2, x25
  40b2a4:	add	x4, x4, #0x3a8
  40b2a8:	add	x5, x5, #0x3b9
  40b2ac:	bl	4039b8 <log_internal_realm@plt>
  40b2b0:	b	40b34c <ascii_strlower_n@plt+0x6f44>
  40b2b4:	ldur	x0, [x29, #-8]
  40b2b8:	bl	413fdc <ascii_strlower_n@plt+0xfbd4>
  40b2bc:	cbz	x0, 40b338 <ascii_strlower_n@plt+0x6f30>
  40b2c0:	mov	x1, x0
  40b2c4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b2c8:	add	x0, x0, #0x3e3
  40b2cc:	bl	403a58 <printf@plt>
  40b2d0:	mov	w1, w28
  40b2d4:	bl	40bcf4 <ascii_strlower_n@plt+0x78ec>
  40b2d8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b2dc:	ldr	x1, [x8, #176]
  40b2e0:	mov	w0, #0xa                   	// #10
  40b2e4:	bl	403d38 <fputc@plt>
  40b2e8:	mov	w28, wzr
  40b2ec:	b	40b224 <ascii_strlower_n@plt+0x6e1c>
  40b2f0:	mov	w8, wzr
  40b2f4:	neg	w9, w20
  40b2f8:	sub	w28, w8, w9, uxtb
  40b2fc:	b	40b224 <ascii_strlower_n@plt+0x6e1c>
  40b300:	mov	w0, wzr
  40b304:	bl	4039a8 <log_get_max_level_realm@plt>
  40b308:	cmp	w0, #0x3
  40b30c:	b.lt	40b354 <ascii_strlower_n@plt+0x6f4c>  // b.tstop
  40b310:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b314:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b318:	mov	w0, #0x3                   	// #3
  40b31c:	mov	w3, #0x187                 	// #391
  40b320:	mov	w1, w28
  40b324:	mov	x2, x20
  40b328:	add	x4, x4, #0x3a8
  40b32c:	add	x5, x5, #0x3d0
  40b330:	bl	4039b8 <log_internal_realm@plt>
  40b334:	b	40b34c <ascii_strlower_n@plt+0x6f44>
  40b338:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b33c:	mov	w2, #0x18f                 	// #399
  40b340:	mov	x1, x20
  40b344:	add	x3, x3, #0x3a8
  40b348:	bl	403a28 <log_oom_internal@plt>
  40b34c:	mov	w28, w0
  40b350:	b	40b224 <ascii_strlower_n@plt+0x6e1c>
  40b354:	cmp	w28, #0x0
  40b358:	mov	w8, wzr
  40b35c:	cneg	w9, w28, mi  // mi = first
  40b360:	sub	w28, w8, w9, uxtb
  40b364:	b	40b224 <ascii_strlower_n@plt+0x6e1c>
  40b368:	mov	w23, w0
  40b36c:	mov	w0, wzr
  40b370:	bl	4039a8 <log_get_max_level_realm@plt>
  40b374:	cmp	w0, #0x3
  40b378:	b.lt	40b3e0 <ascii_strlower_n@plt+0x6fd8>  // b.tstop
  40b37c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b380:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b384:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b388:	add	x2, x2, #0xfaf
  40b38c:	add	x4, x4, #0x182
  40b390:	add	x5, x5, #0x1e5
  40b394:	mov	w0, #0x3                   	// #3
  40b398:	mov	w3, #0x1ae                 	// #430
  40b39c:	mov	w1, w23
  40b3a0:	b	40b48c <ascii_strlower_n@plt+0x7084>
  40b3a4:	mov	w21, w0
  40b3a8:	mov	w0, wzr
  40b3ac:	bl	4039a8 <log_get_max_level_realm@plt>
  40b3b0:	cmp	w0, #0x3
  40b3b4:	b.lt	40b444 <ascii_strlower_n@plt+0x703c>  // b.tstop
  40b3b8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b3bc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b3c0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b3c4:	add	x2, x2, #0xfaf
  40b3c8:	add	x4, x4, #0x182
  40b3cc:	add	x5, x5, #0x1e5
  40b3d0:	mov	w0, #0x3                   	// #3
  40b3d4:	mov	w3, #0x1b2                 	// #434
  40b3d8:	mov	w1, w21
  40b3dc:	b	40b48c <ascii_strlower_n@plt+0x7084>
  40b3e0:	mov	w8, wzr
  40b3e4:	neg	w9, w23
  40b3e8:	sub	w21, w8, w9, uxtb
  40b3ec:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b3f0:	mov	w21, w0
  40b3f4:	mov	w0, wzr
  40b3f8:	bl	4039a8 <log_get_max_level_realm@plt>
  40b3fc:	cmp	w0, #0x3
  40b400:	b.lt	40b494 <ascii_strlower_n@plt+0x708c>  // b.tstop
  40b404:	add	x0, sp, #0x40
  40b408:	mov	w1, w21
  40b40c:	bl	403d68 <bus_error_message@plt>
  40b410:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b414:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b418:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b41c:	mov	x7, x0
  40b420:	add	x2, x2, #0xfaf
  40b424:	add	x4, x4, #0x182
  40b428:	add	x5, x5, #0x20c
  40b42c:	mov	w0, #0x3                   	// #3
  40b430:	mov	w3, #0x1b9                 	// #441
  40b434:	mov	w1, wzr
  40b438:	mov	x6, x19
  40b43c:	bl	4039b8 <log_internal_realm@plt>
  40b440:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b444:	mov	w8, wzr
  40b448:	neg	w9, w21
  40b44c:	sub	w21, w8, w9, uxtb
  40b450:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b454:	mov	w20, w0
  40b458:	mov	w0, wzr
  40b45c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b460:	cmp	w0, #0x3
  40b464:	b.lt	40b640 <ascii_strlower_n@plt+0x7238>  // b.tstop
  40b468:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b46c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b470:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b474:	add	x2, x2, #0xfaf
  40b478:	add	x4, x4, #0x182
  40b47c:	add	x5, x5, #0x230
  40b480:	mov	w0, #0x3                   	// #3
  40b484:	mov	w3, #0x1c1                 	// #449
  40b488:	mov	w1, w20
  40b48c:	bl	4039b8 <log_internal_realm@plt>
  40b490:	mov	w21, w0
  40b494:	add	x0, sp, #0x40
  40b498:	bl	403d78 <sd_bus_error_free@plt>
  40b49c:	ldur	x0, [x29, #-40]
  40b4a0:	cbz	x0, 40b4a8 <ascii_strlower_n@plt+0x70a0>
  40b4a4:	bl	403d88 <sd_bus_message_unref@plt>
  40b4a8:	ldur	x0, [x29, #-32]
  40b4ac:	cbz	x0, 40b4b4 <ascii_strlower_n@plt+0x70ac>
  40b4b0:	bl	403d88 <sd_bus_message_unref@plt>
  40b4b4:	mov	w0, w21
  40b4b8:	ldp	x20, x19, [sp, #208]
  40b4bc:	ldp	x22, x21, [sp, #192]
  40b4c0:	ldp	x24, x23, [sp, #176]
  40b4c4:	ldp	x26, x25, [sp, #160]
  40b4c8:	ldp	x28, x27, [sp, #144]
  40b4cc:	ldp	x29, x30, [sp, #128]
  40b4d0:	add	sp, sp, #0xe0
  40b4d4:	ret
  40b4d8:	mov	w28, w0
  40b4dc:	tbnz	w0, #31, 40b588 <ascii_strlower_n@plt+0x7180>
  40b4e0:	ldur	x0, [x29, #-40]
  40b4e4:	bl	403d18 <sd_bus_message_exit_container@plt>
  40b4e8:	tbnz	w0, #31, 40b5c0 <ascii_strlower_n@plt+0x71b8>
  40b4ec:	ldur	x0, [x29, #-40]
  40b4f0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40b4f4:	add	x1, x1, #0x908
  40b4f8:	sub	x2, x29, #0x8
  40b4fc:	bl	403d08 <sd_bus_message_read@plt>
  40b500:	tbnz	w0, #31, 40b608 <ascii_strlower_n@plt+0x7200>
  40b504:	cbz	w26, 40b650 <ascii_strlower_n@plt+0x7248>
  40b508:	ldur	x0, [x29, #-8]
  40b50c:	ldr	x1, [sp, #16]
  40b510:	bl	40bb90 <ascii_strlower_n@plt+0x7788>
  40b514:	ldurb	w8, [x29, #-7]
  40b518:	mov	w21, wzr
  40b51c:	tbnz	w8, #1, 40b494 <ascii_strlower_n@plt+0x708c>
  40b520:	eor	w8, w25, #0x1
  40b524:	tbnz	w8, #0, 40b494 <ascii_strlower_n@plt+0x708c>
  40b528:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b52c:	ldr	x0, [x8, #176]
  40b530:	bl	403f88 <fflush@plt>
  40b534:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b538:	ldr	x19, [x8, #184]
  40b53c:	bl	403be8 <colors_enabled@plt>
  40b540:	adrp	x21, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40b544:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b548:	add	x21, x21, #0x9c
  40b54c:	add	x8, x8, #0x512
  40b550:	tst	w0, #0x1
  40b554:	csel	x20, x8, x21, ne  // ne = any
  40b558:	bl	403be8 <colors_enabled@plt>
  40b55c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40b560:	add	x8, x8, #0xdaa
  40b564:	tst	w0, #0x1
  40b568:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b56c:	csel	x3, x8, x21, ne  // ne = any
  40b570:	add	x1, x1, #0x26f
  40b574:	mov	x0, x19
  40b578:	mov	x2, x20
  40b57c:	bl	403f98 <fprintf@plt>
  40b580:	mov	w21, wzr
  40b584:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b588:	mov	w0, wzr
  40b58c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b590:	cmp	w0, #0x3
  40b594:	b.lt	40b5f8 <ascii_strlower_n@plt+0x71f0>  // b.tstop
  40b598:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b59c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b5a0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b5a4:	add	x2, x2, #0xfaf
  40b5a8:	add	x4, x4, #0x182
  40b5ac:	add	x5, x5, #0x230
  40b5b0:	mov	w0, #0x3                   	// #3
  40b5b4:	mov	w3, #0x1e8                 	// #488
  40b5b8:	mov	w1, w28
  40b5bc:	b	40b48c <ascii_strlower_n@plt+0x7084>
  40b5c0:	mov	w20, w0
  40b5c4:	mov	w0, wzr
  40b5c8:	bl	4039a8 <log_get_max_level_realm@plt>
  40b5cc:	cmp	w0, #0x3
  40b5d0:	b.lt	40b640 <ascii_strlower_n@plt+0x7238>  // b.tstop
  40b5d4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b5d8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b5dc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b5e0:	add	x2, x2, #0xfaf
  40b5e4:	add	x4, x4, #0x182
  40b5e8:	add	x5, x5, #0x230
  40b5ec:	mov	w0, #0x3                   	// #3
  40b5f0:	mov	w3, #0x1ec                 	// #492
  40b5f4:	b	40b488 <ascii_strlower_n@plt+0x7080>
  40b5f8:	mov	w8, wzr
  40b5fc:	neg	w9, w28
  40b600:	sub	w21, w8, w9, uxtb
  40b604:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b608:	mov	w20, w0
  40b60c:	mov	w0, wzr
  40b610:	bl	4039a8 <log_get_max_level_realm@plt>
  40b614:	cmp	w0, #0x3
  40b618:	b.lt	40b640 <ascii_strlower_n@plt+0x7238>  // b.tstop
  40b61c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b620:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b624:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b628:	add	x2, x2, #0xfaf
  40b62c:	add	x4, x4, #0x182
  40b630:	add	x5, x5, #0x230
  40b634:	mov	w0, #0x3                   	// #3
  40b638:	mov	w3, #0x1f0                 	// #496
  40b63c:	b	40b488 <ascii_strlower_n@plt+0x7080>
  40b640:	mov	w8, wzr
  40b644:	neg	w9, w20
  40b648:	sub	w21, w8, w9, uxtb
  40b64c:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b650:	mov	w0, wzr
  40b654:	bl	4039a8 <log_get_max_level_realm@plt>
  40b658:	cmp	w0, #0x3
  40b65c:	b.lt	40b68c <ascii_strlower_n@plt+0x7284>  // b.tstop
  40b660:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b664:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b668:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b66c:	add	x2, x2, #0xfaf
  40b670:	add	x4, x4, #0x182
  40b674:	add	x5, x5, #0x25a
  40b678:	mov	w0, #0x3                   	// #3
  40b67c:	mov	w3, #0x1f4                 	// #500
  40b680:	mov	w1, wzr
  40b684:	mov	x6, x19
  40b688:	bl	4039b8 <log_internal_realm@plt>
  40b68c:	mov	w21, #0xfffffffd            	// #-3
  40b690:	b	40b494 <ascii_strlower_n@plt+0x708c>
  40b694:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b698:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b69c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b6a0:	add	x1, x1, #0x137
  40b6a4:	add	x2, x2, #0xfaf
  40b6a8:	add	x4, x4, #0x13c
  40b6ac:	mov	w3, #0x1a2                 	// #418
  40b6b0:	mov	w0, wzr
  40b6b4:	bl	403a98 <log_assert_failed_realm@plt>
  40b6b8:	stp	x29, x30, [sp, #-96]!
  40b6bc:	stp	x28, x27, [sp, #16]
  40b6c0:	stp	x26, x25, [sp, #32]
  40b6c4:	stp	x24, x23, [sp, #48]
  40b6c8:	stp	x22, x21, [sp, #64]
  40b6cc:	stp	x20, x19, [sp, #80]
  40b6d0:	mov	x29, sp
  40b6d4:	sub	sp, sp, #0x10
  40b6d8:	cbz	x0, 40bb28 <ascii_strlower_n@plt+0x7720>
  40b6dc:	mov	x20, x1
  40b6e0:	cbz	x1, 40bb48 <ascii_strlower_n@plt+0x7740>
  40b6e4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b6e8:	mov	x22, x0
  40b6ec:	add	x1, x1, #0x132
  40b6f0:	mov	w2, #0x4                   	// #4
  40b6f4:	mov	x0, x20
  40b6f8:	bl	403c78 <strncmp@plt>
  40b6fc:	cbnz	w0, 40bb6c <ascii_strlower_n@plt+0x7764>
  40b700:	add	x19, x20, #0x4
  40b704:	ldrb	w8, [x19]
  40b708:	cmp	w8, #0x2f
  40b70c:	b.ne	40b778 <ascii_strlower_n@plt+0x7370>  // b.any
  40b710:	ldrb	w8, [x20, #5]
  40b714:	cmp	w8, #0x2f
  40b718:	b.ne	40ba60 <ascii_strlower_n@plt+0x7658>  // b.any
  40b71c:	add	x21, x20, #0x6
  40b720:	mov	w1, #0x2f                  	// #47
  40b724:	mov	x0, x21
  40b728:	bl	403ab8 <strchr@plt>
  40b72c:	cbz	x0, 40ba60 <ascii_strlower_n@plt+0x7658>
  40b730:	mov	x19, x0
  40b734:	cmp	x0, x21
  40b738:	b.eq	40b774 <ascii_strlower_n@plt+0x736c>  // b.none
  40b73c:	mov	w0, wzr
  40b740:	bl	4039a8 <log_get_max_level_realm@plt>
  40b744:	cmp	w0, #0x4
  40b748:	b.lt	40b774 <ascii_strlower_n@plt+0x736c>  // b.tstop
  40b74c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b750:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b754:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b758:	add	x2, x2, #0xfaf
  40b75c:	add	x4, x4, #0x561
  40b760:	add	x5, x5, #0x571
  40b764:	mov	w0, #0x4                   	// #4
  40b768:	mov	w3, #0x221                 	// #545
  40b76c:	mov	w1, wzr
  40b770:	bl	4039b8 <log_internal_realm@plt>
  40b774:	add	x19, x19, #0x1
  40b778:	mov	w1, #0x3f                  	// #63
  40b77c:	mov	x0, x19
  40b780:	bl	403ab8 <strchr@plt>
  40b784:	cbz	x0, 40bac4 <ascii_strlower_n@plt+0x76bc>
  40b788:	mov	x21, x0
  40b78c:	sub	x1, x0, x19
  40b790:	mov	x0, x19
  40b794:	stur	x22, [x29, #-8]
  40b798:	bl	403fa8 <strnlen@plt>
  40b79c:	add	x8, x0, #0x10
  40b7a0:	and	x8, x8, #0xfffffffffffffff0
  40b7a4:	mov	x9, sp
  40b7a8:	mov	x2, x0
  40b7ac:	sub	x0, x9, x8
  40b7b0:	mov	sp, x0
  40b7b4:	mov	x1, x19
  40b7b8:	strb	wzr, [x0, x2]
  40b7bc:	stur	x0, [x29, #-16]
  40b7c0:	bl	403c68 <memcpy@plt>
  40b7c4:	adrp	x24, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b7c8:	adrp	x28, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b7cc:	mov	w25, wzr
  40b7d0:	mov	w23, wzr
  40b7d4:	add	x22, x21, #0x1
  40b7d8:	add	x24, x24, #0x5ba
  40b7dc:	add	x28, x28, #0x5f2
  40b7e0:	b	40b82c <ascii_strlower_n@plt+0x7424>
  40b7e4:	mov	w1, #0x16                  	// #22
  40b7e8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b7ec:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b7f0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b7f4:	mov	w0, #0x3                   	// #3
  40b7f8:	movk	w1, #0x4000, lsl #16
  40b7fc:	mov	w3, #0x252                 	// #594
  40b800:	add	x2, x2, #0xfaf
  40b804:	add	x4, x4, #0x561
  40b808:	add	x5, x5, #0x5f8
  40b80c:	bl	4039b8 <log_internal_realm@plt>
  40b810:	mov	w19, w0
  40b814:	mov	x21, xzr
  40b818:	mov	w27, #0x1                   	// #1
  40b81c:	mov	x0, x21
  40b820:	bl	4039d8 <free@plt>
  40b824:	cmp	w27, #0xa
  40b828:	b.ne	40ba2c <ascii_strlower_n@plt+0x7624>  // b.any
  40b82c:	mov	w2, #0x6                   	// #6
  40b830:	mov	x0, x22
  40b834:	mov	x1, x24
  40b838:	bl	403fb8 <strncasecmp@plt>
  40b83c:	cbz	w0, 40b870 <ascii_strlower_n@plt+0x7468>
  40b840:	mov	w2, #0x5                   	// #5
  40b844:	mov	x0, x22
  40b848:	mov	x1, x28
  40b84c:	bl	403fb8 <strncasecmp@plt>
  40b850:	cbnz	w0, 40ba60 <ascii_strlower_n@plt+0x7658>
  40b854:	tst	w23, #0xffff
  40b858:	b.eq	40b8c0 <ascii_strlower_n@plt+0x74b8>  // b.none
  40b85c:	mov	w0, wzr
  40b860:	bl	4039a8 <log_get_max_level_realm@plt>
  40b864:	cmp	w0, #0x3
  40b868:	b.ge	40b7e4 <ascii_strlower_n@plt+0x73dc>  // b.tcont
  40b86c:	b	40b8b4 <ascii_strlower_n@plt+0x74ac>
  40b870:	tst	w25, #0xffff
  40b874:	b.eq	40b8fc <ascii_strlower_n@plt+0x74f4>  // b.none
  40b878:	mov	w0, wzr
  40b87c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b880:	cmp	w0, #0x3
  40b884:	b.lt	40b8b4 <ascii_strlower_n@plt+0x74ac>  // b.tstop
  40b888:	mov	w1, #0x16                  	// #22
  40b88c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b890:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b894:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b898:	mov	w0, #0x3                   	// #3
  40b89c:	movk	w1, #0x4000, lsl #16
  40b8a0:	mov	w3, #0x235                 	// #565
  40b8a4:	add	x2, x2, #0xfaf
  40b8a8:	add	x4, x4, #0x561
  40b8ac:	add	x5, x5, #0x5c1
  40b8b0:	b	40b80c <ascii_strlower_n@plt+0x7404>
  40b8b4:	mov	x21, xzr
  40b8b8:	mov	w19, #0xffffffea            	// #-22
  40b8bc:	b	40b818 <ascii_strlower_n@plt+0x7410>
  40b8c0:	add	x21, x22, #0x5
  40b8c4:	mov	w1, #0x3b                  	// #59
  40b8c8:	mov	x0, x21
  40b8cc:	bl	403fc8 <strchrnul@plt>
  40b8d0:	mov	x26, x0
  40b8d4:	sub	x1, x0, x21
  40b8d8:	mov	x0, x21
  40b8dc:	bl	403ac8 <strndup@plt>
  40b8e0:	mov	x21, x0
  40b8e4:	cbz	x0, 40b94c <ascii_strlower_n@plt+0x7544>
  40b8e8:	mov	x0, x21
  40b8ec:	bl	418dcc <ascii_strlower_n@plt+0x149c4>
  40b8f0:	tbnz	w0, #31, 40b968 <ascii_strlower_n@plt+0x7560>
  40b8f4:	mov	w23, w0
  40b8f8:	b	40b934 <ascii_strlower_n@plt+0x752c>
  40b8fc:	add	x21, x22, #0x6
  40b900:	mov	w1, #0x3b                  	// #59
  40b904:	mov	x0, x21
  40b908:	bl	403fc8 <strchrnul@plt>
  40b90c:	mov	x26, x0
  40b910:	sub	x1, x0, x21
  40b914:	mov	x0, x21
  40b918:	bl	403ac8 <strndup@plt>
  40b91c:	mov	x21, x0
  40b920:	cbz	x0, 40b9b4 <ascii_strlower_n@plt+0x75ac>
  40b924:	mov	x0, x21
  40b928:	bl	419208 <ascii_strlower_n@plt+0x14e00>
  40b92c:	tbnz	w0, #31, 40b9d0 <ascii_strlower_n@plt+0x75c8>
  40b930:	mov	w25, w0
  40b934:	ldrb	w8, [x26], #1
  40b938:	cmp	w8, #0x3b
  40b93c:	mov	w8, #0x9                   	// #9
  40b940:	cinc	w27, w8, eq  // eq = none
  40b944:	csel	x22, x26, x22, eq  // eq = none
  40b948:	b	40b81c <ascii_strlower_n@plt+0x7414>
  40b94c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b950:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b954:	mov	w2, #0x257                 	// #599
  40b958:	add	x1, x1, #0xfaf
  40b95c:	add	x3, x3, #0x561
  40b960:	bl	403a28 <log_oom_internal@plt>
  40b964:	b	40b9a8 <ascii_strlower_n@plt+0x75a0>
  40b968:	mov	w0, wzr
  40b96c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b970:	cmp	w0, #0x3
  40b974:	b.lt	40ba1c <ascii_strlower_n@plt+0x7614>  // b.tstop
  40b978:	mov	w1, #0x16                  	// #22
  40b97c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b980:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b984:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b988:	mov	w0, #0x3                   	// #3
  40b98c:	movk	w1, #0x4000, lsl #16
  40b990:	mov	w3, #0x25c                 	// #604
  40b994:	add	x2, x2, #0xfaf
  40b998:	add	x4, x4, #0x561
  40b99c:	add	x5, x5, #0x612
  40b9a0:	mov	x6, x21
  40b9a4:	bl	4039b8 <log_internal_realm@plt>
  40b9a8:	mov	w19, w0
  40b9ac:	mov	w23, wzr
  40b9b0:	b	40b818 <ascii_strlower_n@plt+0x7410>
  40b9b4:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b9b8:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b9bc:	mov	w2, #0x23a                 	// #570
  40b9c0:	add	x1, x1, #0xfaf
  40b9c4:	add	x3, x3, #0x561
  40b9c8:	bl	403a28 <log_oom_internal@plt>
  40b9cc:	b	40ba10 <ascii_strlower_n@plt+0x7608>
  40b9d0:	mov	w0, wzr
  40b9d4:	bl	4039a8 <log_get_max_level_realm@plt>
  40b9d8:	cmp	w0, #0x3
  40b9dc:	b.lt	40ba24 <ascii_strlower_n@plt+0x761c>  // b.tstop
  40b9e0:	mov	w1, #0x16                  	// #22
  40b9e4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40b9e8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b9ec:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40b9f0:	mov	w0, #0x3                   	// #3
  40b9f4:	movk	w1, #0x4000, lsl #16
  40b9f8:	mov	w3, #0x23f                 	// #575
  40b9fc:	add	x2, x2, #0xfaf
  40ba00:	add	x4, x4, #0x561
  40ba04:	add	x5, x5, #0x5dc
  40ba08:	mov	x6, x21
  40ba0c:	bl	4039b8 <log_internal_realm@plt>
  40ba10:	mov	w19, w0
  40ba14:	mov	w25, wzr
  40ba18:	b	40b818 <ascii_strlower_n@plt+0x7410>
  40ba1c:	mov	w23, wzr
  40ba20:	b	40b8b8 <ascii_strlower_n@plt+0x74b0>
  40ba24:	mov	w25, wzr
  40ba28:	b	40b8b8 <ascii_strlower_n@plt+0x74b0>
  40ba2c:	cmp	w27, #0x8
  40ba30:	b.eq	40ba60 <ascii_strlower_n@plt+0x7658>  // b.none
  40ba34:	cmp	w27, #0x9
  40ba38:	b.ne	40bb04 <ascii_strlower_n@plt+0x76fc>  // b.any
  40ba3c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40ba40:	ldrh	w8, [x8, #68]
  40ba44:	and	w9, w25, #0xffff
  40ba48:	cmp	w8, #0x0
  40ba4c:	csinc	w8, w8, wzr, ne  // ne = any
  40ba50:	cbnz	w9, 40ba58 <ascii_strlower_n@plt+0x7650>
  40ba54:	mov	w25, w8
  40ba58:	ldp	x1, x22, [x29, #-16]
  40ba5c:	b	40badc <ascii_strlower_n@plt+0x76d4>
  40ba60:	mov	w0, wzr
  40ba64:	bl	4039a8 <log_get_max_level_realm@plt>
  40ba68:	cmp	w0, #0x3
  40ba6c:	b.lt	40babc <ascii_strlower_n@plt+0x76b4>  // b.tstop
  40ba70:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ba74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ba78:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ba7c:	mov	w1, #0x16                  	// #22
  40ba80:	add	x2, x2, #0xfaf
  40ba84:	add	x4, x4, #0x561
  40ba88:	add	x5, x5, #0x627
  40ba8c:	mov	w0, #0x3                   	// #3
  40ba90:	movk	w1, #0x4000, lsl #16
  40ba94:	mov	w3, #0x276                 	// #630
  40ba98:	mov	x6, x20
  40ba9c:	mov	sp, x29
  40baa0:	ldp	x20, x19, [sp, #80]
  40baa4:	ldp	x22, x21, [sp, #64]
  40baa8:	ldp	x24, x23, [sp, #48]
  40baac:	ldp	x26, x25, [sp, #32]
  40bab0:	ldp	x28, x27, [sp, #16]
  40bab4:	ldp	x29, x30, [sp], #96
  40bab8:	b	4039b8 <log_internal_realm@plt>
  40babc:	mov	w19, #0xffffffea            	// #-22
  40bac0:	b	40bb04 <ascii_strlower_n@plt+0x76fc>
  40bac4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bac8:	ldrh	w8, [x8, #68]
  40bacc:	mov	w23, wzr
  40bad0:	mov	x1, x19
  40bad4:	cmp	w8, #0x0
  40bad8:	csinc	w25, w8, wzr, ne  // ne = any
  40badc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bae0:	ldrh	w8, [x8, #64]
  40bae4:	mov	x0, x22
  40bae8:	mov	w2, w25
  40baec:	cmp	w8, #0x0
  40baf0:	csinc	w8, w8, wzr, ne  // ne = any
  40baf4:	tst	w23, #0xffff
  40baf8:	csel	w3, w8, w23, eq  // eq = none
  40bafc:	bl	40ae70 <ascii_strlower_n@plt+0x6a68>
  40bb00:	mov	w19, w0
  40bb04:	mov	w0, w19
  40bb08:	mov	sp, x29
  40bb0c:	ldp	x20, x19, [sp, #80]
  40bb10:	ldp	x22, x21, [sp, #64]
  40bb14:	ldp	x24, x23, [sp, #48]
  40bb18:	ldp	x26, x25, [sp, #32]
  40bb1c:	ldp	x28, x27, [sp, #16]
  40bb20:	ldp	x29, x30, [sp], #96
  40bb24:	ret
  40bb28:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bb2c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bb30:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bb34:	add	x1, x1, #0x99c
  40bb38:	add	x2, x2, #0xfaf
  40bb3c:	add	x4, x4, #0x51c
  40bb40:	mov	w3, #0x20e                 	// #526
  40bb44:	bl	403a98 <log_assert_failed_realm@plt>
  40bb48:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bb4c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bb50:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bb54:	add	x1, x1, #0x137
  40bb58:	add	x2, x2, #0xfaf
  40bb5c:	add	x4, x4, #0x51c
  40bb60:	mov	w3, #0x20f                 	// #527
  40bb64:	mov	w0, wzr
  40bb68:	bl	403a98 <log_assert_failed_realm@plt>
  40bb6c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bb70:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bb74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bb78:	add	x1, x1, #0x548
  40bb7c:	add	x2, x2, #0xfaf
  40bb80:	add	x4, x4, #0x51c
  40bb84:	mov	w3, #0x210                 	// #528
  40bb88:	mov	w0, wzr
  40bb8c:	bl	403a98 <log_assert_failed_realm@plt>
  40bb90:	sub	sp, sp, #0x70
  40bb94:	stp	x29, x30, [sp, #48]
  40bb98:	str	x23, [sp, #64]
  40bb9c:	stp	x22, x21, [sp, #80]
  40bba0:	stp	x20, x19, [sp, #96]
  40bba4:	add	x29, sp, #0x30
  40bba8:	cbz	x0, 40bcbc <ascii_strlower_n@plt+0x78b4>
  40bbac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bbb0:	ldrb	w8, [x8]
  40bbb4:	cbz	w8, 40bcbc <ascii_strlower_n@plt+0x78b4>
  40bbb8:	mov	x20, x1
  40bbbc:	mov	x19, x0
  40bbc0:	bl	403be8 <colors_enabled@plt>
  40bbc4:	adrp	x22, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40bbc8:	adrp	x21, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bbcc:	add	x22, x22, #0x9c
  40bbd0:	add	x21, x21, #0x44d
  40bbd4:	tst	w0, #0x1
  40bbd8:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bbdc:	csel	x1, x21, x22, ne  // ne = any
  40bbe0:	add	x0, x0, #0x45b
  40bbe4:	bl	403a58 <printf@plt>
  40bbe8:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bbec:	add	x8, x8, #0xad3
  40bbf0:	tst	x19, #0x1
  40bbf4:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bbf8:	add	x9, x9, #0xad8
  40bbfc:	adrp	x10, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bc00:	csel	x1, x22, x8, eq  // eq = none
  40bc04:	tst	x19, #0x2
  40bc08:	add	x10, x10, #0xae4
  40bc0c:	adrp	x11, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bc10:	csel	x2, x22, x9, eq  // eq = none
  40bc14:	tst	x19, #0x4
  40bc18:	add	x11, x11, #0xaf0
  40bc1c:	adrp	x12, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bc20:	csel	x3, x22, x10, eq  // eq = none
  40bc24:	tst	x19, #0x8
  40bc28:	add	x12, x12, #0xafb
  40bc2c:	csel	x4, x22, x11, eq  // eq = none
  40bc30:	tst	x19, #0x10
  40bc34:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bc38:	csel	x5, x22, x12, eq  // eq = none
  40bc3c:	add	x0, x0, #0x47a
  40bc40:	bl	403a58 <printf@plt>
  40bc44:	add	x0, sp, #0x8
  40bc48:	mov	w1, #0x26                  	// #38
  40bc4c:	mov	w3, #0x64                  	// #100
  40bc50:	mov	x2, x20
  40bc54:	bl	403fd8 <format_timespan@plt>
  40bc58:	cbz	x0, 40bcd4 <ascii_strlower_n@plt+0x78cc>
  40bc5c:	bl	403be8 <colors_enabled@plt>
  40bc60:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40bc64:	add	x23, x23, #0xdaa
  40bc68:	tst	w0, #0x1
  40bc6c:	csel	x20, x23, x22, ne  // ne = any
  40bc70:	bl	403be8 <colors_enabled@plt>
  40bc74:	tst	w0, #0x1
  40bc78:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bc7c:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bc80:	add	x8, x8, #0xe5d
  40bc84:	add	x9, x9, #0xe61
  40bc88:	csel	x21, x21, x22, ne  // ne = any
  40bc8c:	tst	x19, #0x200
  40bc90:	csel	x19, x9, x8, eq  // eq = none
  40bc94:	bl	403be8 <colors_enabled@plt>
  40bc98:	tst	w0, #0x1
  40bc9c:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bca0:	csel	x5, x23, x22, ne  // ne = any
  40bca4:	add	x0, x0, #0x4e6
  40bca8:	add	x1, sp, #0x8
  40bcac:	mov	x2, x20
  40bcb0:	mov	x3, x21
  40bcb4:	mov	x4, x19
  40bcb8:	bl	403a58 <printf@plt>
  40bcbc:	ldp	x20, x19, [sp, #96]
  40bcc0:	ldp	x22, x21, [sp, #80]
  40bcc4:	ldr	x23, [sp, #64]
  40bcc8:	ldp	x29, x30, [sp, #48]
  40bccc:	add	sp, sp, #0x70
  40bcd0:	ret
  40bcd4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bcd8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bcdc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bce0:	add	x1, x1, #0x48e
  40bce4:	add	x2, x2, #0xfaf
  40bce8:	add	x4, x4, #0x4c2
  40bcec:	mov	w3, #0x87                  	// #135
  40bcf0:	bl	403a98 <log_assert_failed_realm@plt>
  40bcf4:	sub	sp, sp, #0x50
  40bcf8:	cmp	w1, #0x1
  40bcfc:	stp	x29, x30, [sp, #32]
  40bd00:	str	x21, [sp, #48]
  40bd04:	stp	x20, x19, [sp, #64]
  40bd08:	add	x29, sp, #0x20
  40bd0c:	b.lt	40bdcc <ascii_strlower_n@plt+0x79c4>  // b.tstop
  40bd10:	mov	w19, w1
  40bd14:	mov	w20, w0
  40bd18:	add	x1, sp, #0xc
  40bd1c:	mov	w0, w19
  40bd20:	mov	w2, wzr
  40bd24:	bl	403e08 <format_ifname_full@plt>
  40bd28:	cbz	x0, 40bd90 <ascii_strlower_n@plt+0x7988>
  40bd2c:	mov	w8, #0x3c                  	// #60
  40bd30:	sub	w8, w8, w20
  40bd34:	cmp	w20, #0x3c
  40bd38:	csel	w19, w8, wzr, lt  // lt = tstop
  40bd3c:	bl	403be8 <colors_enabled@plt>
  40bd40:	adrp	x21, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40bd44:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bd48:	add	x21, x21, #0x9c
  40bd4c:	add	x8, x8, #0x44d
  40bd50:	tst	w0, #0x1
  40bd54:	csel	x20, x8, x21, ne  // ne = any
  40bd58:	bl	403be8 <colors_enabled@plt>
  40bd5c:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40bd60:	add	x8, x8, #0xdaa
  40bd64:	tst	w0, #0x1
  40bd68:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bd6c:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bd70:	csel	x5, x8, x21, ne  // ne = any
  40bd74:	add	x0, x0, #0x438
  40bd78:	add	x2, x2, #0x44b
  40bd7c:	add	x4, sp, #0xc
  40bd80:	mov	w1, w19
  40bd84:	mov	x3, x20
  40bd88:	bl	403a58 <printf@plt>
  40bd8c:	b	40bdcc <ascii_strlower_n@plt+0x79c4>
  40bd90:	bl	4039a8 <log_get_max_level_realm@plt>
  40bd94:	cmp	w0, #0x4
  40bd98:	b.lt	40bdcc <ascii_strlower_n@plt+0x79c4>  // b.tstop
  40bd9c:	bl	403e58 <__errno_location@plt>
  40bda0:	ldr	w1, [x0]
  40bda4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bda8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bdac:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bdb0:	add	x2, x2, #0xfaf
  40bdb4:	add	x4, x4, #0x3e6
  40bdb8:	add	x5, x5, #0x3fc
  40bdbc:	mov	w0, #0x4                   	// #4
  40bdc0:	mov	w3, #0x96                  	// #150
  40bdc4:	mov	w6, w19
  40bdc8:	bl	4039b8 <log_internal_realm@plt>
  40bdcc:	ldp	x20, x19, [sp, #64]
  40bdd0:	ldr	x21, [sp, #48]
  40bdd4:	ldp	x29, x30, [sp, #32]
  40bdd8:	add	sp, sp, #0x50
  40bddc:	ret
  40bde0:	sub	sp, sp, #0xf0
  40bde4:	stp	x29, x30, [sp, #144]
  40bde8:	add	x29, sp, #0x90
  40bdec:	stp	x28, x27, [sp, #160]
  40bdf0:	stp	x26, x25, [sp, #176]
  40bdf4:	stp	x24, x23, [sp, #192]
  40bdf8:	stp	x22, x21, [sp, #208]
  40bdfc:	stp	x20, x19, [sp, #224]
  40be00:	stp	xzr, xzr, [x29, #-40]
  40be04:	stp	xzr, xzr, [x29, #-64]
  40be08:	stur	xzr, [x29, #-48]
  40be0c:	cbz	x0, 40cb38 <ascii_strlower_n@plt+0x8730>
  40be10:	mov	x19, x3
  40be14:	cbz	x3, 40cb58 <ascii_strlower_n@plt+0x8750>
  40be18:	mov	x20, x2
  40be1c:	mov	x21, x1
  40be20:	mov	x22, x0
  40be24:	cbz	x1, 40be38 <ascii_strlower_n@plt+0x7a30>
  40be28:	ldrb	w8, [x21]
  40be2c:	cbz	w8, 40be38 <ascii_strlower_n@plt+0x7a30>
  40be30:	cbnz	x20, 40be40 <ascii_strlower_n@plt+0x7a38>
  40be34:	b	40becc <ascii_strlower_n@plt+0x7ac4>
  40be38:	mov	x21, xzr
  40be3c:	cbz	x20, 40becc <ascii_strlower_n@plt+0x7ac4>
  40be40:	ldrb	w8, [x20]
  40be44:	cbz	w8, 40becc <ascii_strlower_n@plt+0x7ac4>
  40be48:	mov	w0, wzr
  40be4c:	cbz	x21, 40bed8 <ascii_strlower_n@plt+0x7ad0>
  40be50:	bl	4039a8 <log_get_max_level_realm@plt>
  40be54:	cmp	w0, #0x7
  40be58:	b.lt	40bfc0 <ascii_strlower_n@plt+0x7bb8>  // b.tstop
  40be5c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40be60:	ldr	w0, [x8, #60]
  40be64:	bl	403d48 <af_to_name@plt>
  40be68:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40be6c:	ldr	x9, [x8, #40]
  40be70:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40be74:	add	x8, x8, #0x1b4
  40be78:	cmp	x0, #0x0
  40be7c:	csel	x8, x8, x0, eq  // eq = none
  40be80:	cbz	x9, 40be8c <ascii_strlower_n@plt+0x7a84>
  40be84:	ldrb	w10, [x9]
  40be88:	cbnz	w10, 40be94 <ascii_strlower_n@plt+0x7a8c>
  40be8c:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40be90:	add	x9, x9, #0x1b4
  40be94:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40be98:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40be9c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bea0:	stp	x8, x9, [sp, #8]
  40bea4:	add	x2, x2, #0xfaf
  40bea8:	add	x4, x4, #0x85d
  40beac:	add	x5, x5, #0x86d
  40beb0:	mov	w0, #0x7                   	// #7
  40beb4:	mov	w3, #0x2ac                 	// #684
  40beb8:	str	x19, [sp]
  40bebc:	mov	w1, wzr
  40bec0:	mov	x6, x21
  40bec4:	mov	x7, x20
  40bec8:	b	40bfbc <ascii_strlower_n@plt+0x7bb4>
  40becc:	mov	x20, xzr
  40bed0:	mov	w0, wzr
  40bed4:	cbnz	x21, 40be50 <ascii_strlower_n@plt+0x7a48>
  40bed8:	bl	4039a8 <log_get_max_level_realm@plt>
  40bedc:	cmp	w0, #0x7
  40bee0:	cbz	x20, 40bf54 <ascii_strlower_n@plt+0x7b4c>
  40bee4:	b.lt	40bfc0 <ascii_strlower_n@plt+0x7bb8>  // b.tstop
  40bee8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40beec:	ldr	w0, [x8, #60]
  40bef0:	bl	403d48 <af_to_name@plt>
  40bef4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bef8:	ldr	x9, [x8, #40]
  40befc:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf00:	add	x8, x8, #0x1b4
  40bf04:	cmp	x0, #0x0
  40bf08:	csel	x8, x8, x0, eq  // eq = none
  40bf0c:	cbz	x9, 40bf18 <ascii_strlower_n@plt+0x7b10>
  40bf10:	ldrb	w10, [x9]
  40bf14:	cbnz	w10, 40bf20 <ascii_strlower_n@plt+0x7b18>
  40bf18:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf1c:	add	x9, x9, #0x1b4
  40bf20:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bf24:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf28:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf2c:	add	x2, x2, #0xfaf
  40bf30:	add	x4, x4, #0x85d
  40bf34:	add	x5, x5, #0x8b0
  40bf38:	stp	x8, x9, [sp]
  40bf3c:	mov	w0, #0x7                   	// #7
  40bf40:	mov	w3, #0x2ae                 	// #686
  40bf44:	mov	w1, wzr
  40bf48:	mov	x6, x20
  40bf4c:	mov	x7, x19
  40bf50:	b	40bfbc <ascii_strlower_n@plt+0x7bb4>
  40bf54:	b.lt	40bfc0 <ascii_strlower_n@plt+0x7bb8>  // b.tstop
  40bf58:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bf5c:	ldr	w0, [x8, #60]
  40bf60:	bl	403d48 <af_to_name@plt>
  40bf64:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bf68:	ldr	x8, [x8, #40]
  40bf6c:	adrp	x9, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf70:	add	x9, x9, #0x1b4
  40bf74:	cmp	x0, #0x0
  40bf78:	csel	x7, x9, x0, eq  // eq = none
  40bf7c:	cbz	x8, 40bf88 <ascii_strlower_n@plt+0x7b80>
  40bf80:	ldrb	w9, [x8]
  40bf84:	cbnz	w9, 40bf90 <ascii_strlower_n@plt+0x7b88>
  40bf88:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf8c:	add	x8, x8, #0x1b4
  40bf90:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40bf94:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf98:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bf9c:	add	x2, x2, #0xfaf
  40bfa0:	add	x4, x4, #0x85d
  40bfa4:	add	x5, x5, #0x8eb
  40bfa8:	mov	w0, #0x7                   	// #7
  40bfac:	mov	w3, #0x2b0                 	// #688
  40bfb0:	mov	w1, wzr
  40bfb4:	mov	x6, x19
  40bfb8:	str	x8, [sp]
  40bfbc:	bl	4039b8 <log_internal_realm@plt>
  40bfc0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bfc4:	adrp	x3, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40bfc8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bfcc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40bfd0:	add	x2, x2, #0xa4e
  40bfd4:	add	x3, x3, #0xef9
  40bfd8:	add	x4, x4, #0x1b6
  40bfdc:	add	x5, x5, #0x920
  40bfe0:	sub	x1, x29, #0x20
  40bfe4:	mov	x0, x22
  40bfe8:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40bfec:	tbnz	w0, #31, 40c090 <ascii_strlower_n@plt+0x7c88>
  40bff0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bff4:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bff8:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bffc:	ldur	x0, [x29, #-32]
  40c000:	ldr	w2, [x8, #56]
  40c004:	ldr	w6, [x9, #60]
  40c008:	ldr	x7, [x10, #72]
  40c00c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c010:	add	x1, x1, #0x92f
  40c014:	mov	x3, x21
  40c018:	mov	x4, x20
  40c01c:	mov	x5, x19
  40c020:	bl	403cb8 <sd_bus_message_append@plt>
  40c024:	tbnz	w0, #31, 40c0c8 <ascii_strlower_n@plt+0x7cc0>
  40c028:	mov	w0, #0x1                   	// #1
  40c02c:	bl	403cd8 <now@plt>
  40c030:	ldur	x1, [x29, #-32]
  40c034:	mov	w2, #0xe00                 	// #3584
  40c038:	mov	x23, x0
  40c03c:	sub	x3, x29, #0x40
  40c040:	sub	x4, x29, #0x28
  40c044:	movk	w2, #0x727, lsl #16
  40c048:	mov	x0, x22
  40c04c:	bl	403ce8 <sd_bus_call@plt>
  40c050:	tbnz	w0, #31, 40c118 <ascii_strlower_n@plt+0x7d10>
  40c054:	mov	w0, #0x1                   	// #1
  40c058:	bl	403cd8 <now@plt>
  40c05c:	ldur	x8, [x29, #-40]
  40c060:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c064:	mov	x22, x0
  40c068:	add	x2, x2, #0x94e
  40c06c:	mov	w1, #0x61                  	// #97
  40c070:	mov	x0, x8
  40c074:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c078:	tbnz	w0, #31, 40c16c <ascii_strlower_n@plt+0x7d64>
  40c07c:	cbz	x21, 40c1a8 <ascii_strlower_n@plt+0x7da0>
  40c080:	mov	x0, x21
  40c084:	bl	403d28 <strlen@plt>
  40c088:	add	x24, x0, #0x1
  40c08c:	b	40c1ac <ascii_strlower_n@plt+0x7da4>
  40c090:	mov	w23, w0
  40c094:	mov	w0, wzr
  40c098:	bl	4039a8 <log_get_max_level_realm@plt>
  40c09c:	cmp	w0, #0x3
  40c0a0:	b.lt	40c10c <ascii_strlower_n@plt+0x7d04>  // b.tstop
  40c0a4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c0a8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c0ac:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c0b0:	add	x2, x2, #0xfaf
  40c0b4:	add	x4, x4, #0x85d
  40c0b8:	add	x5, x5, #0x1e5
  40c0bc:	mov	w0, #0x3                   	// #3
  40c0c0:	mov	w3, #0x2ba                 	// #698
  40c0c4:	b	40c0fc <ascii_strlower_n@plt+0x7cf4>
  40c0c8:	mov	w23, w0
  40c0cc:	mov	w0, wzr
  40c0d0:	bl	4039a8 <log_get_max_level_realm@plt>
  40c0d4:	cmp	w0, #0x3
  40c0d8:	b.lt	40c10c <ascii_strlower_n@plt+0x7d04>  // b.tstop
  40c0dc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c0e0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c0e4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c0e8:	add	x2, x2, #0xfaf
  40c0ec:	add	x4, x4, #0x85d
  40c0f0:	add	x5, x5, #0x1e5
  40c0f4:	mov	w0, #0x3                   	// #3
  40c0f8:	mov	w3, #0x2be                 	// #702
  40c0fc:	mov	w1, w23
  40c100:	bl	4039b8 <log_internal_realm@plt>
  40c104:	mov	w24, w0
  40c108:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c10c:	mov	w8, wzr
  40c110:	neg	w9, w23
  40c114:	b	40cacc <ascii_strlower_n@plt+0x86c4>
  40c118:	mov	w22, w0
  40c11c:	mov	w0, wzr
  40c120:	bl	4039a8 <log_get_max_level_realm@plt>
  40c124:	cmp	w0, #0x3
  40c128:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40c12c:	sub	x0, x29, #0x40
  40c130:	mov	w1, w22
  40c134:	bl	403d68 <bus_error_message@plt>
  40c138:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c13c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c140:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c144:	mov	x6, x0
  40c148:	add	x2, x2, #0xfaf
  40c14c:	add	x4, x4, #0x85d
  40c150:	add	x5, x5, #0x936
  40c154:	mov	w0, #0x3                   	// #3
  40c158:	mov	w3, #0x2c4                 	// #708
  40c15c:	mov	w1, w22
  40c160:	bl	4039b8 <log_internal_realm@plt>
  40c164:	mov	w24, w0
  40c168:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c16c:	mov	w24, w0
  40c170:	mov	w0, wzr
  40c174:	bl	4039a8 <log_get_max_level_realm@plt>
  40c178:	cmp	w0, #0x3
  40c17c:	b.lt	40ca40 <ascii_strlower_n@plt+0x8638>  // b.tstop
  40c180:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c184:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c188:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c18c:	add	x2, x2, #0xfaf
  40c190:	add	x4, x4, #0x85d
  40c194:	add	x5, x5, #0x230
  40c198:	mov	w0, #0x3                   	// #3
  40c19c:	mov	w3, #0x2ca                 	// #714
  40c1a0:	mov	w1, w24
  40c1a4:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40c1a8:	mov	x24, xzr
  40c1ac:	sub	x8, x22, x23
  40c1b0:	str	x8, [sp, #24]
  40c1b4:	cbz	x20, 40c1c8 <ascii_strlower_n@plt+0x7dc0>
  40c1b8:	mov	x0, x20
  40c1bc:	bl	403d28 <strlen@plt>
  40c1c0:	add	x22, x0, #0x1
  40c1c4:	b	40c1cc <ascii_strlower_n@plt+0x7dc4>
  40c1c8:	mov	x22, xzr
  40c1cc:	mov	x0, x19
  40c1d0:	bl	403d28 <strlen@plt>
  40c1d4:	add	w8, w24, w22
  40c1d8:	adrp	x28, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c1dc:	adrp	x27, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c1e0:	adrp	x23, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c1e4:	adrp	x25, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c1e8:	add	w8, w8, w0
  40c1ec:	mov	w26, wzr
  40c1f0:	add	x28, x28, #0xfaf
  40c1f4:	add	x27, x27, #0x85d
  40c1f8:	add	x23, x23, #0x230
  40c1fc:	add	x25, x25, #0x9c
  40c200:	add	w8, w8, #0x2
  40c204:	str	w8, [sp, #36]
  40c208:	b	40c220 <ascii_strlower_n@plt+0x7e18>
  40c20c:	mov	w8, wzr
  40c210:	neg	w9, w22
  40c214:	sub	w24, w8, w9, uxtb
  40c218:	mov	w8, #0x1                   	// #1
  40c21c:	cbnz	w8, 40cad0 <ascii_strlower_n@plt+0x86c8>
  40c220:	ldur	x0, [x29, #-40]
  40c224:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c228:	mov	w1, #0x72                  	// #114
  40c22c:	add	x2, x2, #0x95d
  40c230:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c234:	cmp	w0, #0x1
  40c238:	b.lt	40c79c <ascii_strlower_n@plt+0x8394>  // b.tstop
  40c23c:	ldur	x0, [x29, #-40]
  40c240:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c244:	add	x2, sp, #0x34
  40c248:	add	x3, sp, #0x30
  40c24c:	add	x4, sp, #0x2c
  40c250:	sub	x5, x29, #0x8
  40c254:	add	x1, x1, #0x96a
  40c258:	bl	403d08 <sd_bus_message_read@plt>
  40c25c:	tbnz	w0, #31, 40c634 <ascii_strlower_n@plt+0x822c>
  40c260:	adrp	x22, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c264:	add	x22, x22, #0x44b
  40c268:	cbz	x21, 40c298 <ascii_strlower_n@plt+0x7e90>
  40c26c:	mov	x0, x21
  40c270:	bl	403d28 <strlen@plt>
  40c274:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c278:	mov	x1, x0
  40c27c:	cmp	w26, #0x0
  40c280:	add	x8, x8, #0x975
  40c284:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c288:	csel	x2, x21, x25, eq  // eq = none
  40c28c:	csel	x3, x8, x22, eq  // eq = none
  40c290:	add	x0, x0, #0x96f
  40c294:	bl	403a58 <printf@plt>
  40c298:	cbz	x20, 40c2c8 <ascii_strlower_n@plt+0x7ec0>
  40c29c:	mov	x0, x20
  40c2a0:	bl	403d28 <strlen@plt>
  40c2a4:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c2a8:	mov	x1, x0
  40c2ac:	cmp	w26, #0x0
  40c2b0:	add	x8, x8, #0x975
  40c2b4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c2b8:	csel	x2, x20, x25, eq  // eq = none
  40c2bc:	csel	x3, x8, x22, eq  // eq = none
  40c2c0:	add	x0, x0, #0x96f
  40c2c4:	bl	403a58 <printf@plt>
  40c2c8:	mov	x0, x19
  40c2cc:	bl	403d28 <strlen@plt>
  40c2d0:	ldur	x4, [x29, #-8]
  40c2d4:	ldrh	w5, [sp, #44]
  40c2d8:	ldrh	w6, [sp, #52]
  40c2dc:	ldrh	w7, [sp, #48]
  40c2e0:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c2e4:	mov	x1, x0
  40c2e8:	cmp	w26, #0x0
  40c2ec:	add	x8, x8, #0x6cd
  40c2f0:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c2f4:	csel	x2, x19, x25, eq  // eq = none
  40c2f8:	csel	x3, x8, x22, eq  // eq = none
  40c2fc:	add	x0, x0, #0x977
  40c300:	bl	403a58 <printf@plt>
  40c304:	ldur	x0, [x29, #-40]
  40c308:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40c30c:	mov	w1, #0x61                  	// #97
  40c310:	add	x2, x2, #0xeeb
  40c314:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c318:	tbnz	w0, #31, 40c654 <ascii_strlower_n@plt+0x824c>
  40c31c:	ldur	x0, [x29, #-40]
  40c320:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40c324:	mov	w1, #0x72                  	// #114
  40c328:	add	x2, x2, #0xcba
  40c32c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c330:	cmp	w0, #0x1
  40c334:	b.lt	40c674 <ascii_strlower_n@plt+0x826c>  // b.tstop
  40c338:	adrp	x25, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40c33c:	add	x25, x25, #0xcba
  40c340:	ldur	x0, [x29, #-40]
  40c344:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c348:	add	x2, sp, #0x38
  40c34c:	add	x3, sp, #0x28
  40c350:	add	x1, x1, #0x6b5
  40c354:	stur	xzr, [x29, #-24]
  40c358:	bl	403d08 <sd_bus_message_read@plt>
  40c35c:	tbnz	w0, #31, 40c420 <ascii_strlower_n@plt+0x8018>
  40c360:	ldur	x0, [x29, #-40]
  40c364:	add	x2, sp, #0x40
  40c368:	add	x3, sp, #0x48
  40c36c:	mov	w1, #0x79                  	// #121
  40c370:	bl	403d58 <sd_bus_message_read_array@plt>
  40c374:	tbnz	w0, #31, 40c440 <ascii_strlower_n@plt+0x8038>
  40c378:	ldur	x0, [x29, #-40]
  40c37c:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c380:	tbnz	w0, #31, 40c460 <ascii_strlower_n@plt+0x8058>
  40c384:	ldr	w22, [sp, #40]
  40c388:	orr	w8, w22, #0x8
  40c38c:	cmp	w8, #0xa
  40c390:	b.ne	40c4b0 <ascii_strlower_n@plt+0x80a8>  // b.any
  40c394:	b.ne	40cb14 <ascii_strlower_n@plt+0x870c>  // b.any
  40c398:	mov	x25, x20
  40c39c:	mov	x20, x23
  40c3a0:	mov	w23, w26
  40c3a4:	mov	x26, x19
  40c3a8:	mov	x19, x27
  40c3ac:	mov	x27, x28
  40c3b0:	ldr	x28, [sp, #72]
  40c3b4:	cmp	w22, #0xa
  40c3b8:	mov	w8, #0x4                   	// #4
  40c3bc:	mov	w9, #0x10                  	// #16
  40c3c0:	csel	x8, x9, x8, eq  // eq = none
  40c3c4:	cmp	x28, x8
  40c3c8:	b.ne	40c50c <ascii_strlower_n@plt+0x8104>  // b.any
  40c3cc:	ldr	x1, [sp, #64]
  40c3d0:	ldr	w2, [sp, #56]
  40c3d4:	sub	x3, x29, #0x18
  40c3d8:	mov	w0, w22
  40c3dc:	bl	403c98 <in_addr_ifindex_to_string@plt>
  40c3e0:	tbnz	w0, #31, 40c5d4 <ascii_strlower_n@plt+0x81cc>
  40c3e4:	ldur	x3, [x29, #-24]
  40c3e8:	ldr	w1, [sp, #36]
  40c3ec:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c3f0:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c3f4:	add	x0, x0, #0x96f
  40c3f8:	add	x2, x2, #0x9c
  40c3fc:	bl	403a58 <printf@plt>
  40c400:	ldr	w1, [sp, #56]
  40c404:	bl	40bcf4 <ascii_strlower_n@plt+0x78ec>
  40c408:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40c40c:	ldr	x1, [x8, #176]
  40c410:	mov	w0, #0xa                   	// #10
  40c414:	bl	403d38 <fputc@plt>
  40c418:	mov	w22, wzr
  40c41c:	b	40c584 <ascii_strlower_n@plt+0x817c>
  40c420:	mov	w22, w0
  40c424:	mov	w0, wzr
  40c428:	bl	4039a8 <log_get_max_level_realm@plt>
  40c42c:	cmp	w0, #0x3
  40c430:	b.lt	40c49c <ascii_strlower_n@plt+0x8094>  // b.tstop
  40c434:	mov	w0, #0x3                   	// #3
  40c438:	mov	w3, #0x2f2                 	// #754
  40c43c:	b	40c47c <ascii_strlower_n@plt+0x8074>
  40c440:	mov	w22, w0
  40c444:	mov	w0, wzr
  40c448:	bl	4039a8 <log_get_max_level_realm@plt>
  40c44c:	cmp	w0, #0x3
  40c450:	b.lt	40c49c <ascii_strlower_n@plt+0x8094>  // b.tstop
  40c454:	mov	w0, #0x3                   	// #3
  40c458:	mov	w3, #0x2f6                 	// #758
  40c45c:	b	40c47c <ascii_strlower_n@plt+0x8074>
  40c460:	mov	w22, w0
  40c464:	mov	w0, wzr
  40c468:	bl	4039a8 <log_get_max_level_realm@plt>
  40c46c:	cmp	w0, #0x3
  40c470:	b.lt	40c49c <ascii_strlower_n@plt+0x8094>  // b.tstop
  40c474:	mov	w0, #0x3                   	// #3
  40c478:	mov	w3, #0x2fa                 	// #762
  40c47c:	mov	w1, w22
  40c480:	mov	x2, x28
  40c484:	mov	x4, x27
  40c488:	mov	x5, x23
  40c48c:	bl	4039b8 <log_internal_realm@plt>
  40c490:	mov	w24, w0
  40c494:	mov	w22, #0x1                   	// #1
  40c498:	b	40c5a4 <ascii_strlower_n@plt+0x819c>
  40c49c:	mov	w8, wzr
  40c4a0:	neg	w9, w22
  40c4a4:	sub	w24, w8, w9, uxtb
  40c4a8:	mov	w22, #0x1                   	// #1
  40c4ac:	b	40c5a4 <ascii_strlower_n@plt+0x819c>
  40c4b0:	mov	w0, wzr
  40c4b4:	bl	4039a8 <log_get_max_level_realm@plt>
  40c4b8:	cmp	w0, #0x7
  40c4bc:	b.lt	40c574 <ascii_strlower_n@plt+0x816c>  // b.tstop
  40c4c0:	mov	w0, w22
  40c4c4:	bl	403d48 <af_to_name@plt>
  40c4c8:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c4cc:	cmp	x0, #0x0
  40c4d0:	add	x8, x8, #0x77c
  40c4d4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c4d8:	csel	x8, x8, x0, eq  // eq = none
  40c4dc:	mov	w0, #0x7                   	// #7
  40c4e0:	mov	w3, #0x2fd                 	// #765
  40c4e4:	mov	w1, wzr
  40c4e8:	mov	x2, x28
  40c4ec:	mov	x4, x27
  40c4f0:	add	x5, x5, #0x755
  40c4f4:	mov	x6, x21
  40c4f8:	mov	w7, w22
  40c4fc:	str	x8, [sp]
  40c500:	bl	4039b8 <log_internal_realm@plt>
  40c504:	mov	w22, #0x8                   	// #8
  40c508:	b	40c5a4 <ascii_strlower_n@plt+0x819c>
  40c50c:	mov	w0, wzr
  40c510:	bl	4039a8 <log_get_max_level_realm@plt>
  40c514:	cmp	w0, #0x3
  40c518:	b.lt	40c57c <ascii_strlower_n@plt+0x8174>  // b.tstop
  40c51c:	mov	w0, w22
  40c520:	bl	403d48 <af_to_name@plt>
  40c524:	adrp	x8, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c528:	cmp	x0, #0x0
  40c52c:	add	x8, x8, #0x77c
  40c530:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c534:	csel	x8, x8, x0, eq  // eq = none
  40c538:	mov	w0, #0x3                   	// #3
  40c53c:	mov	w3, #0x302                 	// #770
  40c540:	mov	w1, wzr
  40c544:	mov	x2, x27
  40c548:	mov	x4, x19
  40c54c:	add	x5, x5, #0x784
  40c550:	mov	x6, x21
  40c554:	mov	x7, x28
  40c558:	str	x8, [sp]
  40c55c:	mov	x27, x19
  40c560:	mov	x28, x2
  40c564:	bl	4039b8 <log_internal_realm@plt>
  40c568:	mov	w24, #0xffffffea            	// #-22
  40c56c:	mov	w22, #0x1                   	// #1
  40c570:	b	40c58c <ascii_strlower_n@plt+0x8184>
  40c574:	mov	w22, #0x8                   	// #8
  40c578:	b	40c5a4 <ascii_strlower_n@plt+0x819c>
  40c57c:	mov	w24, #0xffffffea            	// #-22
  40c580:	mov	w22, #0x1                   	// #1
  40c584:	mov	x28, x27
  40c588:	mov	x27, x19
  40c58c:	mov	x19, x26
  40c590:	mov	w26, w23
  40c594:	mov	x23, x20
  40c598:	mov	x20, x25
  40c59c:	adrp	x25, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40c5a0:	add	x25, x25, #0xcba
  40c5a4:	ldur	x0, [x29, #-24]
  40c5a8:	bl	4039d8 <free@plt>
  40c5ac:	orr	w8, w22, #0x8
  40c5b0:	cmp	w8, #0x8
  40c5b4:	b.ne	40c6e0 <ascii_strlower_n@plt+0x82d8>  // b.any
  40c5b8:	ldur	x0, [x29, #-40]
  40c5bc:	mov	w1, #0x72                  	// #114
  40c5c0:	mov	x2, x25
  40c5c4:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c5c8:	cmp	w0, #0x0
  40c5cc:	b.gt	40c340 <ascii_strlower_n@plt+0x7f38>
  40c5d0:	b	40c6f0 <ascii_strlower_n@plt+0x82e8>
  40c5d4:	mov	w22, w0
  40c5d8:	mov	w0, wzr
  40c5dc:	bl	4039a8 <log_get_max_level_realm@plt>
  40c5e0:	cmp	w0, #0x3
  40c5e4:	mov	x28, x27
  40c5e8:	b.lt	40c620 <ascii_strlower_n@plt+0x8218>  // b.tstop
  40c5ec:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c5f0:	mov	w0, #0x3                   	// #3
  40c5f4:	mov	w3, #0x308                 	// #776
  40c5f8:	mov	w1, w22
  40c5fc:	mov	x2, x28
  40c600:	mov	x4, x19
  40c604:	add	x5, x5, #0x7cc
  40c608:	mov	x6, x21
  40c60c:	mov	x27, x19
  40c610:	bl	4039b8 <log_internal_realm@plt>
  40c614:	mov	w24, w0
  40c618:	mov	w22, #0x1                   	// #1
  40c61c:	b	40c58c <ascii_strlower_n@plt+0x8184>
  40c620:	mov	w8, wzr
  40c624:	neg	w9, w22
  40c628:	sub	w24, w8, w9, uxtb
  40c62c:	mov	w22, #0x1                   	// #1
  40c630:	b	40c588 <ascii_strlower_n@plt+0x8180>
  40c634:	mov	w22, w0
  40c638:	mov	w0, wzr
  40c63c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c640:	cmp	w0, #0x3
  40c644:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c648:	mov	w0, #0x3                   	// #3
  40c64c:	mov	w3, #0x2d8                 	// #728
  40c650:	b	40c778 <ascii_strlower_n@plt+0x8370>
  40c654:	mov	w22, w0
  40c658:	mov	w0, wzr
  40c65c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c660:	cmp	w0, #0x3
  40c664:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c668:	mov	w0, #0x3                   	// #3
  40c66c:	mov	w3, #0x2e7                 	// #743
  40c670:	b	40c778 <ascii_strlower_n@plt+0x8370>
  40c674:	mov	w22, w0
  40c678:	tbnz	w22, #31, 40c700 <ascii_strlower_n@plt+0x82f8>
  40c67c:	ldur	x0, [x29, #-40]
  40c680:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c684:	tbnz	w0, #31, 40c71c <ascii_strlower_n@plt+0x8314>
  40c688:	ldur	x0, [x29, #-40]
  40c68c:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c690:	sub	x2, x29, #0x10
  40c694:	add	x1, x1, #0xfaa
  40c698:	bl	403d08 <sd_bus_message_read@plt>
  40c69c:	tbnz	w0, #31, 40c73c <ascii_strlower_n@plt+0x8334>
  40c6a0:	ldp	x22, x0, [x29, #-16]
  40c6a4:	mov	x1, x22
  40c6a8:	bl	403b38 <strcmp@plt>
  40c6ac:	cbz	w0, 40c6c8 <ascii_strlower_n@plt+0x82c0>
  40c6b0:	ldr	w1, [sp, #36]
  40c6b4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c6b8:	add	x0, x0, #0x99d
  40c6bc:	mov	x2, x25
  40c6c0:	mov	x3, x22
  40c6c4:	bl	403a58 <printf@plt>
  40c6c8:	ldur	x0, [x29, #-40]
  40c6cc:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c6d0:	tbnz	w0, #31, 40c75c <ascii_strlower_n@plt+0x8354>
  40c6d4:	add	w26, w26, #0x1
  40c6d8:	cbz	wzr, 40c220 <ascii_strlower_n@plt+0x7e18>
  40c6dc:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c6e0:	adrp	x25, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c6e4:	add	x25, x25, #0x9c
  40c6e8:	cbz	w22, 40c220 <ascii_strlower_n@plt+0x7e18>
  40c6ec:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c6f0:	adrp	x25, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c6f4:	mov	w22, w0
  40c6f8:	add	x25, x25, #0x9c
  40c6fc:	tbz	w22, #31, 40c67c <ascii_strlower_n@plt+0x8274>
  40c700:	mov	w0, wzr
  40c704:	bl	4039a8 <log_get_max_level_realm@plt>
  40c708:	cmp	w0, #0x3
  40c70c:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c710:	mov	w0, #0x3                   	// #3
  40c714:	mov	w3, #0x30f                 	// #783
  40c718:	b	40c778 <ascii_strlower_n@plt+0x8370>
  40c71c:	mov	w22, w0
  40c720:	mov	w0, wzr
  40c724:	bl	4039a8 <log_get_max_level_realm@plt>
  40c728:	cmp	w0, #0x3
  40c72c:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c730:	mov	w0, #0x3                   	// #3
  40c734:	mov	w3, #0x313                 	// #787
  40c738:	b	40c778 <ascii_strlower_n@plt+0x8370>
  40c73c:	mov	w22, w0
  40c740:	mov	w0, wzr
  40c744:	bl	4039a8 <log_get_max_level_realm@plt>
  40c748:	cmp	w0, #0x3
  40c74c:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c750:	mov	w0, #0x3                   	// #3
  40c754:	mov	w3, #0x317                 	// #791
  40c758:	b	40c778 <ascii_strlower_n@plt+0x8370>
  40c75c:	mov	w22, w0
  40c760:	mov	w0, wzr
  40c764:	bl	4039a8 <log_get_max_level_realm@plt>
  40c768:	cmp	w0, #0x3
  40c76c:	b.lt	40c20c <ascii_strlower_n@plt+0x7e04>  // b.tstop
  40c770:	mov	w0, #0x3                   	// #3
  40c774:	mov	w3, #0x31e                 	// #798
  40c778:	mov	w1, w22
  40c77c:	mov	x2, x28
  40c780:	mov	x4, x27
  40c784:	mov	x5, x23
  40c788:	bl	4039b8 <log_internal_realm@plt>
  40c78c:	mov	w24, w0
  40c790:	mov	w8, #0x1                   	// #1
  40c794:	cbz	w8, 40c220 <ascii_strlower_n@plt+0x7e18>
  40c798:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c79c:	mov	w22, w0
  40c7a0:	tbnz	w0, #31, 40c938 <ascii_strlower_n@plt+0x8530>
  40c7a4:	ldur	x0, [x29, #-40]
  40c7a8:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c7ac:	tbnz	w0, #31, 40c970 <ascii_strlower_n@plt+0x8568>
  40c7b0:	ldur	x0, [x29, #-40]
  40c7b4:	adrp	x2, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c7b8:	add	x2, x2, #0x9a6
  40c7bc:	mov	w1, #0x61                  	// #97
  40c7c0:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c7c4:	tbnz	w0, #31, 40c9ac <ascii_strlower_n@plt+0x85a4>
  40c7c8:	ldur	x0, [x29, #-40]
  40c7cc:	add	x2, sp, #0x38
  40c7d0:	add	x3, sp, #0x48
  40c7d4:	mov	w1, #0x79                  	// #121
  40c7d8:	bl	403d58 <sd_bus_message_read_array@plt>
  40c7dc:	cmp	w0, #0x1
  40c7e0:	b.lt	40c840 <ascii_strlower_n@plt+0x8438>  // b.tstop
  40c7e4:	adrp	x22, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c7e8:	adrp	x23, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c7ec:	add	x22, x22, #0x9a9
  40c7f0:	add	x23, x23, #0x9c
  40c7f4:	ldr	x0, [sp, #56]
  40c7f8:	ldr	x1, [sp, #72]
  40c7fc:	bl	403fe8 <cescape_length@plt>
  40c800:	cbz	x0, 40c9e8 <ascii_strlower_n@plt+0x85e0>
  40c804:	ldr	w1, [sp, #36]
  40c808:	mov	x24, x0
  40c80c:	mov	x0, x22
  40c810:	mov	x2, x23
  40c814:	mov	x3, x24
  40c818:	bl	403a58 <printf@plt>
  40c81c:	mov	x0, x24
  40c820:	bl	4039d8 <free@plt>
  40c824:	ldur	x0, [x29, #-40]
  40c828:	add	x2, sp, #0x38
  40c82c:	add	x3, sp, #0x48
  40c830:	mov	w1, #0x79                  	// #121
  40c834:	bl	403d58 <sd_bus_message_read_array@plt>
  40c838:	cmp	w0, #0x0
  40c83c:	b.gt	40c7f4 <ascii_strlower_n@plt+0x83ec>
  40c840:	mov	w24, w0
  40c844:	tbnz	w0, #31, 40ca08 <ascii_strlower_n@plt+0x8600>
  40c848:	ldur	x0, [x29, #-40]
  40c84c:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c850:	tbnz	w0, #31, 40ca4c <ascii_strlower_n@plt+0x8644>
  40c854:	ldur	x0, [x29, #-40]
  40c858:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c85c:	add	x1, x1, #0x9b0
  40c860:	sub	x2, x29, #0x8
  40c864:	sub	x3, x29, #0x10
  40c868:	sub	x4, x29, #0x18
  40c86c:	add	x5, sp, #0x40
  40c870:	bl	403d08 <sd_bus_message_read@plt>
  40c874:	tbnz	w0, #31, 40ca88 <ascii_strlower_n@plt+0x8680>
  40c878:	ldur	x1, [x29, #-8]
  40c87c:	cbz	x1, 40c888 <ascii_strlower_n@plt+0x8480>
  40c880:	ldrb	w8, [x1]
  40c884:	cbnz	w8, 40c88c <ascii_strlower_n@plt+0x8484>
  40c888:	mov	x1, xzr
  40c88c:	ldur	x22, [x29, #-16]
  40c890:	stur	x1, [x29, #-8]
  40c894:	cbz	x22, 40c8a0 <ascii_strlower_n@plt+0x8498>
  40c898:	ldrb	w8, [x22]
  40c89c:	cbnz	w8, 40c8a4 <ascii_strlower_n@plt+0x849c>
  40c8a0:	mov	x22, xzr
  40c8a4:	mov	x0, x21
  40c8a8:	stur	x22, [x29, #-16]
  40c8ac:	bl	403ff8 <strcmp_ptr@plt>
  40c8b0:	cbnz	w0, 40c8d4 <ascii_strlower_n@plt+0x84cc>
  40c8b4:	mov	x0, x20
  40c8b8:	mov	x1, x22
  40c8bc:	bl	403ff8 <strcmp_ptr@plt>
  40c8c0:	cbnz	w0, 40c8d4 <ascii_strlower_n@plt+0x84cc>
  40c8c4:	ldur	x1, [x29, #-24]
  40c8c8:	mov	x0, x19
  40c8cc:	bl	403ff8 <strcmp_ptr@plt>
  40c8d0:	cbz	w0, 40c924 <ascii_strlower_n@plt+0x851c>
  40c8d4:	ldr	w1, [sp, #36]
  40c8d8:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c8dc:	adrp	x2, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40c8e0:	add	x0, x0, #0x9b5
  40c8e4:	add	x2, x2, #0x9c
  40c8e8:	bl	403a58 <printf@plt>
  40c8ec:	ldur	x1, [x29, #-8]
  40c8f0:	cbz	x1, 40c900 <ascii_strlower_n@plt+0x84f8>
  40c8f4:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c8f8:	add	x0, x0, #0x9ba
  40c8fc:	bl	403a58 <printf@plt>
  40c900:	ldur	x1, [x29, #-16]
  40c904:	cbz	x1, 40c914 <ascii_strlower_n@plt+0x850c>
  40c908:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c90c:	add	x0, x0, #0x9ba
  40c910:	bl	403a58 <printf@plt>
  40c914:	ldur	x1, [x29, #-24]
  40c918:	adrp	x0, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c91c:	add	x0, x0, #0x9be
  40c920:	bl	403a58 <printf@plt>
  40c924:	ldr	x0, [sp, #64]
  40c928:	ldr	x1, [sp, #24]
  40c92c:	bl	40bb90 <ascii_strlower_n@plt+0x7788>
  40c930:	mov	w24, wzr
  40c934:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40c938:	mov	w0, wzr
  40c93c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c940:	cmp	w0, #0x3
  40c944:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40c948:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c94c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c950:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c954:	add	x2, x2, #0xfaf
  40c958:	add	x4, x4, #0x85d
  40c95c:	add	x5, x5, #0x230
  40c960:	mov	w0, #0x3                   	// #3
  40c964:	mov	w3, #0x323                 	// #803
  40c968:	mov	w1, w22
  40c96c:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40c970:	mov	w22, w0
  40c974:	mov	w0, wzr
  40c978:	bl	4039a8 <log_get_max_level_realm@plt>
  40c97c:	cmp	w0, #0x3
  40c980:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40c984:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c988:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c98c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c990:	add	x2, x2, #0xfaf
  40c994:	add	x4, x4, #0x85d
  40c998:	add	x5, x5, #0x230
  40c99c:	mov	w0, #0x3                   	// #3
  40c9a0:	mov	w3, #0x327                 	// #807
  40c9a4:	mov	w1, w22
  40c9a8:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40c9ac:	mov	w22, w0
  40c9b0:	mov	w0, wzr
  40c9b4:	bl	4039a8 <log_get_max_level_realm@plt>
  40c9b8:	cmp	w0, #0x3
  40c9bc:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40c9c0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c9c4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c9c8:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c9cc:	add	x2, x2, #0xfaf
  40c9d0:	add	x4, x4, #0x85d
  40c9d4:	add	x5, x5, #0x230
  40c9d8:	mov	w0, #0x3                   	// #3
  40c9dc:	mov	w3, #0x32b                 	// #811
  40c9e0:	mov	w1, w22
  40c9e4:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40c9e8:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40c9ec:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40c9f0:	add	x1, x1, #0xfaf
  40c9f4:	add	x3, x3, #0x85d
  40c9f8:	mov	w2, #0x332                 	// #818
  40c9fc:	bl	403a28 <log_oom_internal@plt>
  40ca00:	mov	w24, w0
  40ca04:	b	40cad0 <ascii_strlower_n@plt+0x86c8>
  40ca08:	mov	w0, wzr
  40ca0c:	bl	4039a8 <log_get_max_level_realm@plt>
  40ca10:	cmp	w0, #0x3
  40ca14:	b.lt	40ca40 <ascii_strlower_n@plt+0x8638>  // b.tstop
  40ca18:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ca1c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ca20:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ca24:	add	x2, x2, #0xfaf
  40ca28:	add	x4, x4, #0x85d
  40ca2c:	add	x5, x5, #0x230
  40ca30:	mov	w0, #0x3                   	// #3
  40ca34:	mov	w3, #0x337                 	// #823
  40ca38:	mov	w1, w24
  40ca3c:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40ca40:	mov	w8, wzr
  40ca44:	neg	w9, w24
  40ca48:	b	40cacc <ascii_strlower_n@plt+0x86c4>
  40ca4c:	mov	w22, w0
  40ca50:	mov	w0, wzr
  40ca54:	bl	4039a8 <log_get_max_level_realm@plt>
  40ca58:	cmp	w0, #0x3
  40ca5c:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40ca60:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ca64:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ca68:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ca6c:	add	x2, x2, #0xfaf
  40ca70:	add	x4, x4, #0x85d
  40ca74:	add	x5, x5, #0x230
  40ca78:	mov	w0, #0x3                   	// #3
  40ca7c:	mov	w3, #0x33b                 	// #827
  40ca80:	mov	w1, w22
  40ca84:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40ca88:	mov	w22, w0
  40ca8c:	mov	w0, wzr
  40ca90:	bl	4039a8 <log_get_max_level_realm@plt>
  40ca94:	cmp	w0, #0x3
  40ca98:	b.lt	40cac4 <ascii_strlower_n@plt+0x86bc>  // b.tstop
  40ca9c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40caa0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40caa4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40caa8:	add	x2, x2, #0xfaf
  40caac:	add	x4, x4, #0x85d
  40cab0:	add	x5, x5, #0x230
  40cab4:	mov	w0, #0x3                   	// #3
  40cab8:	mov	w3, #0x33f                 	// #831
  40cabc:	mov	w1, w22
  40cac0:	b	40c100 <ascii_strlower_n@plt+0x7cf8>
  40cac4:	mov	w8, wzr
  40cac8:	neg	w9, w22
  40cacc:	sub	w24, w8, w9, uxtb
  40cad0:	sub	x0, x29, #0x40
  40cad4:	bl	403d78 <sd_bus_error_free@plt>
  40cad8:	ldur	x0, [x29, #-40]
  40cadc:	cbz	x0, 40cae4 <ascii_strlower_n@plt+0x86dc>
  40cae0:	bl	403d88 <sd_bus_message_unref@plt>
  40cae4:	ldur	x0, [x29, #-32]
  40cae8:	cbz	x0, 40caf0 <ascii_strlower_n@plt+0x86e8>
  40caec:	bl	403d88 <sd_bus_message_unref@plt>
  40caf0:	mov	w0, w24
  40caf4:	ldp	x20, x19, [sp, #224]
  40caf8:	ldp	x22, x21, [sp, #208]
  40cafc:	ldp	x24, x23, [sp, #192]
  40cb00:	ldp	x26, x25, [sp, #176]
  40cb04:	ldp	x28, x27, [sp, #160]
  40cb08:	ldp	x29, x30, [sp, #144]
  40cb0c:	add	sp, sp, #0xf0
  40cb10:	ret
  40cb14:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cb18:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cb1c:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cb20:	add	x1, x1, #0xd1a
  40cb24:	add	x2, x2, #0xd3f
  40cb28:	add	x4, x4, #0xd58
  40cb2c:	mov	w3, #0x43                  	// #67
  40cb30:	mov	w0, wzr
  40cb34:	bl	403a98 <log_assert_failed_realm@plt>
  40cb38:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cb3c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cb40:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cb44:	add	x1, x1, #0x99c
  40cb48:	add	x2, x2, #0xfaf
  40cb4c:	add	x4, x4, #0x815
  40cb50:	mov	w3, #0x2a5                 	// #677
  40cb54:	bl	403a98 <log_assert_failed_realm@plt>
  40cb58:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cb5c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cb60:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cb64:	add	x1, x1, #0xb2a
  40cb68:	add	x2, x2, #0xfaf
  40cb6c:	add	x4, x4, #0x815
  40cb70:	mov	w3, #0x2a6                 	// #678
  40cb74:	mov	w0, wzr
  40cb78:	bl	403a98 <log_assert_failed_realm@plt>
  40cb7c:	stp	x29, x30, [sp, #-64]!
  40cb80:	stp	x24, x23, [sp, #16]
  40cb84:	stp	x22, x21, [sp, #32]
  40cb88:	stp	x20, x19, [sp, #48]
  40cb8c:	mov	x29, sp
  40cb90:	sub	sp, sp, #0x10
  40cb94:	mov	w8, #0x1bb                 	// #443
  40cb98:	sturh	w8, [x29, #-4]
  40cb9c:	stur	xzr, [x29, #-16]
  40cba0:	cbz	x0, 40cd44 <ascii_strlower_n@plt+0x893c>
  40cba4:	mov	x21, x2
  40cba8:	cbz	x2, 40cd64 <ascii_strlower_n@plt+0x895c>
  40cbac:	mov	x20, x1
  40cbb0:	mov	x19, x0
  40cbb4:	mov	w1, #0x3a                  	// #58
  40cbb8:	mov	x0, x21
  40cbbc:	bl	403d98 <strrchr@plt>
  40cbc0:	cbz	x0, 40cc1c <ascii_strlower_n@plt+0x8814>
  40cbc4:	add	x22, x0, #0x1
  40cbc8:	mov	x24, x0
  40cbcc:	sub	x1, x29, #0x4
  40cbd0:	mov	x0, x22
  40cbd4:	bl	404008 <parse_ip_port@plt>
  40cbd8:	tbnz	w0, #31, 40cccc <ascii_strlower_n@plt+0x88c4>
  40cbdc:	sub	x1, x24, x21
  40cbe0:	mov	x0, x21
  40cbe4:	bl	403fa8 <strnlen@plt>
  40cbe8:	add	x8, x0, #0x10
  40cbec:	and	x8, x8, #0xfffffffffffffff0
  40cbf0:	mov	x9, sp
  40cbf4:	mov	x2, x0
  40cbf8:	sub	x22, x9, x8
  40cbfc:	mov	sp, x22
  40cc00:	strb	wzr, [x22, x0]
  40cc04:	mov	x0, x22
  40cc08:	mov	x1, x21
  40cc0c:	bl	403c68 <memcpy@plt>
  40cc10:	ldurh	w2, [x29, #-4]
  40cc14:	mov	x21, x22
  40cc18:	b	40cc20 <ascii_strlower_n@plt+0x8818>
  40cc1c:	mov	w2, #0x1bb                 	// #443
  40cc20:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cc24:	add	x1, x1, #0xac3
  40cc28:	sub	x0, x29, #0x10
  40cc2c:	mov	x3, x20
  40cc30:	mov	x4, x21
  40cc34:	bl	403e18 <asprintf@plt>
  40cc38:	tbnz	w0, #31, 40ccac <ascii_strlower_n@plt+0x88a4>
  40cc3c:	mov	w0, wzr
  40cc40:	bl	4039a8 <log_get_max_level_realm@plt>
  40cc44:	cmp	w0, #0x7
  40cc48:	b.lt	40cc78 <ascii_strlower_n@plt+0x8870>  // b.tstop
  40cc4c:	ldur	x6, [x29, #-16]
  40cc50:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cc54:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cc58:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cc5c:	add	x2, x2, #0xfaf
  40cc60:	add	x4, x4, #0xaa3
  40cc64:	add	x5, x5, #0xa5b
  40cc68:	mov	w0, #0x7                   	// #7
  40cc6c:	mov	w3, #0x3b8                 	// #952
  40cc70:	mov	w1, wzr
  40cc74:	bl	4039b8 <log_internal_realm@plt>
  40cc78:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40cc7c:	ldrh	w8, [x8, #68]
  40cc80:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40cc84:	ldrh	w9, [x9, #64]
  40cc88:	ldur	x1, [x29, #-16]
  40cc8c:	cmp	w8, #0x0
  40cc90:	csinc	w2, w8, wzr, ne  // ne = any
  40cc94:	cmp	w9, #0x0
  40cc98:	mov	w8, #0x34                  	// #52
  40cc9c:	csel	w3, w8, w9, eq  // eq = none
  40cca0:	mov	x0, x19
  40cca4:	bl	40ae70 <ascii_strlower_n@plt+0x6a68>
  40cca8:	b	40cd0c <ascii_strlower_n@plt+0x8904>
  40ccac:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40ccb0:	adrp	x3, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ccb4:	add	x1, x1, #0xfaf
  40ccb8:	add	x3, x3, #0xaa3
  40ccbc:	mov	w2, #0x3b6                 	// #950
  40ccc0:	mov	w0, wzr
  40ccc4:	bl	403a28 <log_oom_internal@plt>
  40ccc8:	b	40cd0c <ascii_strlower_n@plt+0x8904>
  40cccc:	mov	w23, w0
  40ccd0:	mov	w0, wzr
  40ccd4:	bl	4039a8 <log_get_max_level_realm@plt>
  40ccd8:	cmp	w0, #0x3
  40ccdc:	b.lt	40cd34 <ascii_strlower_n@plt+0x892c>  // b.tstop
  40cce0:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cce4:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cce8:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40ccec:	add	x2, x2, #0xfaf
  40ccf0:	add	x4, x4, #0xaa3
  40ccf4:	add	x5, x5, #0xab0
  40ccf8:	mov	w0, #0x3                   	// #3
  40ccfc:	mov	w3, #0x3ac                 	// #940
  40cd00:	mov	w1, w23
  40cd04:	mov	x6, x22
  40cd08:	bl	4039b8 <log_internal_realm@plt>
  40cd0c:	mov	w19, w0
  40cd10:	ldur	x0, [x29, #-16]
  40cd14:	bl	4039d8 <free@plt>
  40cd18:	mov	w0, w19
  40cd1c:	mov	sp, x29
  40cd20:	ldp	x20, x19, [sp, #48]
  40cd24:	ldp	x22, x21, [sp, #32]
  40cd28:	ldp	x24, x23, [sp, #16]
  40cd2c:	ldp	x29, x30, [sp], #64
  40cd30:	ret
  40cd34:	mov	w8, wzr
  40cd38:	neg	w9, w23
  40cd3c:	sub	w19, w8, w9, uxtb
  40cd40:	b	40cd10 <ascii_strlower_n@plt+0x8908>
  40cd44:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cd48:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cd4c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cd50:	add	x1, x1, #0x99c
  40cd54:	add	x2, x2, #0xfaf
  40cd58:	add	x4, x4, #0xa6c
  40cd5c:	mov	w3, #0x3a5                 	// #933
  40cd60:	bl	403a98 <log_assert_failed_realm@plt>
  40cd64:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cd68:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cd6c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cd70:	add	x1, x1, #0x680
  40cd74:	add	x2, x2, #0xfaf
  40cd78:	add	x4, x4, #0xa6c
  40cd7c:	mov	w3, #0x3a6                 	// #934
  40cd80:	mov	w0, wzr
  40cd84:	bl	403a98 <log_assert_failed_realm@plt>
  40cd88:	sub	sp, sp, #0x90
  40cd8c:	stp	x29, x30, [sp, #48]
  40cd90:	stp	x20, x19, [sp, #128]
  40cd94:	add	x29, sp, #0x30
  40cd98:	mov	x19, x5
  40cd9c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cda0:	stp	x22, x21, [sp, #112]
  40cda4:	mov	x21, x1
  40cda8:	add	x5, x5, #0xee2
  40cdac:	add	x1, x29, #0x18
  40cdb0:	str	x27, [sp, #64]
  40cdb4:	stp	x26, x25, [sp, #80]
  40cdb8:	stp	x24, x23, [sp, #96]
  40cdbc:	mov	x20, x0
  40cdc0:	str	xzr, [x29, #24]
  40cdc4:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40cdc8:	tbnz	w0, #31, 40ceec <ascii_strlower_n@plt+0x8ae4>
  40cdcc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40cdd0:	ldr	x0, [x29, #24]
  40cdd4:	ldr	w2, [x8, #56]
  40cdd8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cddc:	add	x1, x1, #0xcc3
  40cde0:	bl	403cb8 <sd_bus_message_append@plt>
  40cde4:	tbnz	w0, #31, 40cf24 <ascii_strlower_n@plt+0x8b1c>
  40cde8:	ldr	x0, [x29, #24]
  40cdec:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40cdf0:	add	x2, x2, #0x926
  40cdf4:	mov	w1, #0x61                  	// #97
  40cdf8:	bl	404018 <sd_bus_message_open_container@plt>
  40cdfc:	tbnz	w0, #31, 40cf5c <ascii_strlower_n@plt+0x8b54>
  40ce00:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40ce04:	add	x8, x8, #0x9c
  40ce08:	sub	x1, x29, #0x10
  40ce0c:	mov	x0, x21
  40ce10:	stp	x8, xzr, [x29, #-16]
  40ce14:	bl	403de8 <strv_equal@plt>
  40ce18:	tbnz	w0, #0, 40cec4 <ascii_strlower_n@plt+0x8abc>
  40ce1c:	cbz	x21, 40cec4 <ascii_strlower_n@plt+0x8abc>
  40ce20:	ldr	x0, [x21]
  40ce24:	cbz	x0, 40cec4 <ascii_strlower_n@plt+0x8abc>
  40ce28:	add	x8, sp, #0x8
  40ce2c:	add	x25, x21, #0x8
  40ce30:	adrp	x21, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ce34:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40ce38:	add	x21, x21, #0xcbf
  40ce3c:	add	x22, x22, #0xcc3
  40ce40:	mov	w26, #0x4                   	// #4
  40ce44:	orr	x23, x8, #0x4
  40ce48:	mov	w27, #0x10                  	// #16
  40ce4c:	add	x1, sp, #0x8
  40ce50:	mov	x2, x23
  40ce54:	bl	404028 <in_addr_from_string_auto@plt>
  40ce58:	tbnz	w0, #31, 40d02c <ascii_strlower_n@plt+0x8c24>
  40ce5c:	ldr	x0, [x29, #24]
  40ce60:	mov	w1, #0x72                  	// #114
  40ce64:	mov	x2, x21
  40ce68:	bl	404018 <sd_bus_message_open_container@plt>
  40ce6c:	tbnz	w0, #31, 40d070 <ascii_strlower_n@plt+0x8c68>
  40ce70:	ldr	x0, [x29, #24]
  40ce74:	ldr	w2, [sp, #8]
  40ce78:	mov	x1, x22
  40ce7c:	bl	403cb8 <sd_bus_message_append@plt>
  40ce80:	tbnz	w0, #31, 40d0a8 <ascii_strlower_n@plt+0x8ca0>
  40ce84:	ldr	w8, [sp, #8]
  40ce88:	orr	w9, w8, #0x8
  40ce8c:	cmp	w9, #0xa
  40ce90:	b.ne	40d160 <ascii_strlower_n@plt+0x8d58>  // b.any
  40ce94:	ldr	x0, [x29, #24]
  40ce98:	cmp	w8, #0xa
  40ce9c:	csel	x3, x27, x26, eq  // eq = none
  40cea0:	mov	w1, #0x79                  	// #121
  40cea4:	mov	x2, x23
  40cea8:	bl	403cc8 <sd_bus_message_append_array@plt>
  40ceac:	tbnz	w0, #31, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40ceb0:	ldr	x0, [x29, #24]
  40ceb4:	bl	404038 <sd_bus_message_close_container@plt>
  40ceb8:	tbnz	w0, #31, 40d118 <ascii_strlower_n@plt+0x8d10>
  40cebc:	ldr	x0, [x25], #8
  40cec0:	cbnz	x0, 40ce4c <ascii_strlower_n@plt+0x8a44>
  40cec4:	ldr	x0, [x29, #24]
  40cec8:	bl	404038 <sd_bus_message_close_container@plt>
  40cecc:	tbnz	w0, #31, 40cfe4 <ascii_strlower_n@plt+0x8bdc>
  40ced0:	ldr	x1, [x29, #24]
  40ced4:	mov	x0, x20
  40ced8:	mov	x2, xzr
  40cedc:	mov	x3, x19
  40cee0:	mov	x4, xzr
  40cee4:	bl	403ce8 <sd_bus_call@plt>
  40cee8:	b	40cf98 <ascii_strlower_n@plt+0x8b90>
  40ceec:	mov	w22, w0
  40cef0:	mov	w0, wzr
  40cef4:	bl	4039a8 <log_get_max_level_realm@plt>
  40cef8:	cmp	w0, #0x3
  40cefc:	b.lt	40cfcc <ascii_strlower_n@plt+0x8bc4>  // b.tstop
  40cf00:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cf04:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf08:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf0c:	add	x2, x2, #0xfaf
  40cf10:	add	x4, x4, #0xeed
  40cf14:	add	x5, x5, #0x1e5
  40cf18:	mov	w0, #0x3                   	// #3
  40cf1c:	mov	w3, #0x744                 	// #1860
  40cf20:	b	40cf90 <ascii_strlower_n@plt+0x8b88>
  40cf24:	mov	w22, w0
  40cf28:	mov	w0, wzr
  40cf2c:	bl	4039a8 <log_get_max_level_realm@plt>
  40cf30:	cmp	w0, #0x3
  40cf34:	b.lt	40cfcc <ascii_strlower_n@plt+0x8bc4>  // b.tstop
  40cf38:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cf3c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf40:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf44:	add	x2, x2, #0xfaf
  40cf48:	add	x4, x4, #0xeed
  40cf4c:	add	x5, x5, #0x1e5
  40cf50:	mov	w0, #0x3                   	// #3
  40cf54:	mov	w3, #0x748                 	// #1864
  40cf58:	b	40cf90 <ascii_strlower_n@plt+0x8b88>
  40cf5c:	mov	w22, w0
  40cf60:	mov	w0, wzr
  40cf64:	bl	4039a8 <log_get_max_level_realm@plt>
  40cf68:	cmp	w0, #0x3
  40cf6c:	b.lt	40cfcc <ascii_strlower_n@plt+0x8bc4>  // b.tstop
  40cf70:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cf74:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf78:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40cf7c:	add	x2, x2, #0xfaf
  40cf80:	add	x4, x4, #0xeed
  40cf84:	add	x5, x5, #0x1e5
  40cf88:	mov	w0, #0x3                   	// #3
  40cf8c:	mov	w3, #0x74c                 	// #1868
  40cf90:	mov	w1, w22
  40cf94:	bl	4039b8 <log_internal_realm@plt>
  40cf98:	mov	w19, w0
  40cf9c:	ldr	x0, [x29, #24]
  40cfa0:	cbz	x0, 40cfa8 <ascii_strlower_n@plt+0x8ba0>
  40cfa4:	bl	403d88 <sd_bus_message_unref@plt>
  40cfa8:	mov	w0, w19
  40cfac:	ldp	x20, x19, [sp, #128]
  40cfb0:	ldp	x22, x21, [sp, #112]
  40cfb4:	ldp	x24, x23, [sp, #96]
  40cfb8:	ldp	x26, x25, [sp, #80]
  40cfbc:	ldr	x27, [sp, #64]
  40cfc0:	ldp	x29, x30, [sp, #48]
  40cfc4:	add	sp, sp, #0x90
  40cfc8:	ret
  40cfcc:	mov	w8, wzr
  40cfd0:	neg	w9, w22
  40cfd4:	sub	w19, w8, w9, uxtb
  40cfd8:	ldr	x0, [x29, #24]
  40cfdc:	cbnz	x0, 40cfa4 <ascii_strlower_n@plt+0x8b9c>
  40cfe0:	b	40cfa8 <ascii_strlower_n@plt+0x8ba0>
  40cfe4:	mov	w21, w0
  40cfe8:	mov	w0, wzr
  40cfec:	bl	4039a8 <log_get_max_level_realm@plt>
  40cff0:	cmp	w0, #0x3
  40cff4:	b.lt	40d020 <ascii_strlower_n@plt+0x8c18>  // b.tstop
  40cff8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40cffc:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d000:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d004:	add	x2, x2, #0xfaf
  40d008:	add	x4, x4, #0xeed
  40d00c:	add	x5, x5, #0x1e5
  40d010:	mov	w0, #0x3                   	// #3
  40d014:	mov	w3, #0x76b                 	// #1899
  40d018:	mov	w1, w21
  40d01c:	b	40cf94 <ascii_strlower_n@plt+0x8b8c>
  40d020:	mov	w8, wzr
  40d024:	neg	w9, w21
  40d028:	b	40cfd4 <ascii_strlower_n@plt+0x8bcc>
  40d02c:	mov	w24, w0
  40d030:	mov	w0, wzr
  40d034:	bl	4039a8 <log_get_max_level_realm@plt>
  40d038:	cmp	w0, #0x3
  40d03c:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d040:	ldur	x6, [x25, #-8]
  40d044:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d048:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d04c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d050:	add	x2, x2, #0xfaf
  40d054:	add	x4, x4, #0xeed
  40d058:	add	x5, x5, #0xef6
  40d05c:	mov	w0, #0x3                   	// #3
  40d060:	mov	w3, #0x756                 	// #1878
  40d064:	mov	w1, w24
  40d068:	bl	4039b8 <log_internal_realm@plt>
  40d06c:	b	40cf98 <ascii_strlower_n@plt+0x8b90>
  40d070:	mov	w24, w0
  40d074:	mov	w0, wzr
  40d078:	bl	4039a8 <log_get_max_level_realm@plt>
  40d07c:	cmp	w0, #0x3
  40d080:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d084:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d088:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d08c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d090:	add	x2, x2, #0xfaf
  40d094:	add	x4, x4, #0xeed
  40d098:	add	x5, x5, #0x1e5
  40d09c:	mov	w0, #0x3                   	// #3
  40d0a0:	mov	w3, #0x75a                 	// #1882
  40d0a4:	b	40d14c <ascii_strlower_n@plt+0x8d44>
  40d0a8:	mov	w24, w0
  40d0ac:	mov	w0, wzr
  40d0b0:	bl	4039a8 <log_get_max_level_realm@plt>
  40d0b4:	cmp	w0, #0x3
  40d0b8:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d0bc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d0c0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d0c4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d0c8:	add	x2, x2, #0xfaf
  40d0cc:	add	x4, x4, #0xeed
  40d0d0:	add	x5, x5, #0x1e5
  40d0d4:	mov	w0, #0x3                   	// #3
  40d0d8:	mov	w3, #0x75e                 	// #1886
  40d0dc:	b	40d14c <ascii_strlower_n@plt+0x8d44>
  40d0e0:	mov	w24, w0
  40d0e4:	mov	w0, wzr
  40d0e8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d0ec:	cmp	w0, #0x3
  40d0f0:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d0f4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d0f8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d0fc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d100:	add	x2, x2, #0xfaf
  40d104:	add	x4, x4, #0xeed
  40d108:	add	x5, x5, #0x1e5
  40d10c:	mov	w0, #0x3                   	// #3
  40d110:	mov	w3, #0x762                 	// #1890
  40d114:	b	40d14c <ascii_strlower_n@plt+0x8d44>
  40d118:	mov	w24, w0
  40d11c:	mov	w0, wzr
  40d120:	bl	4039a8 <log_get_max_level_realm@plt>
  40d124:	cmp	w0, #0x3
  40d128:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d12c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d130:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d134:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d138:	add	x2, x2, #0xfaf
  40d13c:	add	x4, x4, #0xeed
  40d140:	add	x5, x5, #0x1e5
  40d144:	mov	w0, #0x3                   	// #3
  40d148:	mov	w3, #0x766                 	// #1894
  40d14c:	mov	w1, w24
  40d150:	b	40cf94 <ascii_strlower_n@plt+0x8b8c>
  40d154:	mov	w8, wzr
  40d158:	neg	w9, w24
  40d15c:	b	40cfd4 <ascii_strlower_n@plt+0x8bcc>
  40d160:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d164:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d168:	adrp	x4, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d16c:	add	x1, x1, #0xd1a
  40d170:	add	x2, x2, #0xd3f
  40d174:	add	x4, x4, #0xd58
  40d178:	mov	w3, #0x43                  	// #67
  40d17c:	mov	w0, wzr
  40d180:	bl	403a98 <log_assert_failed_realm@plt>
  40d184:	sub	sp, sp, #0x60
  40d188:	stp	x29, x30, [sp, #32]
  40d18c:	stp	x20, x19, [sp, #80]
  40d190:	add	x29, sp, #0x20
  40d194:	mov	x19, x5
  40d198:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d19c:	stp	x22, x21, [sp, #64]
  40d1a0:	mov	x21, x1
  40d1a4:	add	x5, x5, #0xf76
  40d1a8:	sub	x1, x29, #0x8
  40d1ac:	stp	x24, x23, [sp, #48]
  40d1b0:	mov	x20, x0
  40d1b4:	stur	xzr, [x29, #-8]
  40d1b8:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40d1bc:	tbnz	w0, #31, 40d2b8 <ascii_strlower_n@plt+0x8eb0>
  40d1c0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40d1c4:	ldur	x0, [x29, #-8]
  40d1c8:	ldr	w2, [x8, #56]
  40d1cc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d1d0:	add	x1, x1, #0xcc3
  40d1d4:	bl	403cb8 <sd_bus_message_append@plt>
  40d1d8:	tbnz	w0, #31, 40d2f0 <ascii_strlower_n@plt+0x8ee8>
  40d1dc:	ldur	x0, [x29, #-8]
  40d1e0:	adrp	x2, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d1e4:	add	x2, x2, #0xe3a
  40d1e8:	mov	w1, #0x61                  	// #97
  40d1ec:	bl	404018 <sd_bus_message_open_container@plt>
  40d1f0:	tbnz	w0, #31, 40d328 <ascii_strlower_n@plt+0x8f20>
  40d1f4:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  40d1f8:	add	x8, x8, #0x9c
  40d1fc:	add	x1, sp, #0x8
  40d200:	mov	x0, x21
  40d204:	stp	x8, xzr, [sp, #8]
  40d208:	bl	403de8 <strv_equal@plt>
  40d20c:	tbnz	w0, #0, 40d290 <ascii_strlower_n@plt+0x8e88>
  40d210:	cbz	x21, 40d290 <ascii_strlower_n@plt+0x8e88>
  40d214:	ldr	x8, [x21]
  40d218:	cbz	x8, 40d290 <ascii_strlower_n@plt+0x8e88>
  40d21c:	adrp	x22, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d220:	add	x24, x21, #0x8
  40d224:	add	x22, x22, #0xe3a
  40d228:	mov	x9, x8
  40d22c:	ldrb	w10, [x9], #1
  40d230:	mov	x1, xzr
  40d234:	mov	w2, wzr
  40d238:	mov	x3, xzr
  40d23c:	cmp	w10, #0x7e
  40d240:	csel	x21, x9, x8, eq  // eq = none
  40d244:	mov	x0, x21
  40d248:	bl	403df8 <dns_name_concat@plt>
  40d24c:	cmp	w0, #0x0
  40d250:	csinc	w8, w0, wzr, lt  // lt = tstop
  40d254:	cmn	w0, #0x16
  40d258:	csel	w23, wzr, w8, eq  // eq = none
  40d25c:	tbnz	w23, #31, 40d3d8 <ascii_strlower_n@plt+0x8fd0>
  40d260:	cbz	w23, 40d418 <ascii_strlower_n@plt+0x9010>
  40d264:	ldur	x8, [x24, #-8]
  40d268:	ldur	x0, [x29, #-8]
  40d26c:	mov	x1, x22
  40d270:	mov	x2, x21
  40d274:	ldrb	w8, [x8]
  40d278:	cmp	w8, #0x7e
  40d27c:	cset	w3, eq  // eq = none
  40d280:	bl	403cb8 <sd_bus_message_append@plt>
  40d284:	tbnz	w0, #31, 40d45c <ascii_strlower_n@plt+0x9054>
  40d288:	ldr	x8, [x24], #8
  40d28c:	cbnz	x8, 40d228 <ascii_strlower_n@plt+0x8e20>
  40d290:	ldur	x0, [x29, #-8]
  40d294:	bl	404038 <sd_bus_message_close_container@plt>
  40d298:	tbnz	w0, #31, 40d3a0 <ascii_strlower_n@plt+0x8f98>
  40d29c:	ldur	x1, [x29, #-8]
  40d2a0:	mov	x0, x20
  40d2a4:	mov	x2, xzr
  40d2a8:	mov	x3, x19
  40d2ac:	mov	x4, xzr
  40d2b0:	bl	403ce8 <sd_bus_call@plt>
  40d2b4:	b	40d364 <ascii_strlower_n@plt+0x8f5c>
  40d2b8:	mov	w22, w0
  40d2bc:	mov	w0, wzr
  40d2c0:	bl	4039a8 <log_get_max_level_realm@plt>
  40d2c4:	cmp	w0, #0x3
  40d2c8:	b.lt	40d36c <ascii_strlower_n@plt+0x8f64>  // b.tstop
  40d2cc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d2d0:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d2d4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d2d8:	add	x2, x2, #0xfaf
  40d2dc:	add	x4, x4, #0xf85
  40d2e0:	add	x5, x5, #0x1e5
  40d2e4:	mov	w0, #0x3                   	// #3
  40d2e8:	mov	w3, #0x7a9                 	// #1961
  40d2ec:	b	40d35c <ascii_strlower_n@plt+0x8f54>
  40d2f0:	mov	w22, w0
  40d2f4:	mov	w0, wzr
  40d2f8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d2fc:	cmp	w0, #0x3
  40d300:	b.lt	40d36c <ascii_strlower_n@plt+0x8f64>  // b.tstop
  40d304:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d308:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d30c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d310:	add	x2, x2, #0xfaf
  40d314:	add	x4, x4, #0xf85
  40d318:	add	x5, x5, #0x1e5
  40d31c:	mov	w0, #0x3                   	// #3
  40d320:	mov	w3, #0x7ad                 	// #1965
  40d324:	b	40d35c <ascii_strlower_n@plt+0x8f54>
  40d328:	mov	w22, w0
  40d32c:	mov	w0, wzr
  40d330:	bl	4039a8 <log_get_max_level_realm@plt>
  40d334:	cmp	w0, #0x3
  40d338:	b.lt	40d36c <ascii_strlower_n@plt+0x8f64>  // b.tstop
  40d33c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d340:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d344:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d348:	add	x2, x2, #0xfaf
  40d34c:	add	x4, x4, #0xf85
  40d350:	add	x5, x5, #0x1e5
  40d354:	mov	w0, #0x3                   	// #3
  40d358:	mov	w3, #0x7b1                 	// #1969
  40d35c:	mov	w1, w22
  40d360:	bl	4039b8 <log_internal_realm@plt>
  40d364:	mov	w19, w0
  40d368:	b	40d378 <ascii_strlower_n@plt+0x8f70>
  40d36c:	mov	w8, wzr
  40d370:	neg	w9, w22
  40d374:	sub	w19, w8, w9, uxtb
  40d378:	ldur	x0, [x29, #-8]
  40d37c:	cbz	x0, 40d384 <ascii_strlower_n@plt+0x8f7c>
  40d380:	bl	403d88 <sd_bus_message_unref@plt>
  40d384:	mov	w0, w19
  40d388:	ldp	x20, x19, [sp, #80]
  40d38c:	ldp	x22, x21, [sp, #64]
  40d390:	ldp	x24, x23, [sp, #48]
  40d394:	ldp	x29, x30, [sp, #32]
  40d398:	add	sp, sp, #0x60
  40d39c:	ret
  40d3a0:	mov	w21, w0
  40d3a4:	mov	w0, wzr
  40d3a8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d3ac:	cmp	w0, #0x3
  40d3b0:	b.lt	40d498 <ascii_strlower_n@plt+0x9090>  // b.tstop
  40d3b4:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d3b8:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d3bc:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d3c0:	add	x2, x2, #0xfaf
  40d3c4:	add	x4, x4, #0xf85
  40d3c8:	add	x5, x5, #0x1e5
  40d3cc:	mov	w0, #0x3                   	// #3
  40d3d0:	mov	w3, #0x7ca                 	// #1994
  40d3d4:	b	40d490 <ascii_strlower_n@plt+0x9088>
  40d3d8:	mov	w0, wzr
  40d3dc:	bl	4039a8 <log_get_max_level_realm@plt>
  40d3e0:	cmp	w0, #0x3
  40d3e4:	b.lt	40d4a4 <ascii_strlower_n@plt+0x909c>  // b.tstop
  40d3e8:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d3ec:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d3f0:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d3f4:	add	x2, x2, #0xfaf
  40d3f8:	add	x4, x4, #0xf85
  40d3fc:	add	x5, x5, #0xf91
  40d400:	mov	w0, #0x3                   	// #3
  40d404:	mov	w3, #0x7bd                 	// #1981
  40d408:	mov	w1, w23
  40d40c:	mov	x6, x21
  40d410:	bl	4039b8 <log_internal_realm@plt>
  40d414:	b	40d364 <ascii_strlower_n@plt+0x8f5c>
  40d418:	mov	w0, wzr
  40d41c:	bl	4039a8 <log_get_max_level_realm@plt>
  40d420:	cmp	w0, #0x3
  40d424:	b.lt	40d4b0 <ascii_strlower_n@plt+0x90a8>  // b.tstop
  40d428:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d42c:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d430:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d434:	add	x2, x2, #0xfaf
  40d438:	add	x4, x4, #0xf85
  40d43c:	add	x5, x5, #0xfbc
  40d440:	mov	w0, #0x3                   	// #3
  40d444:	mov	w3, #0x7bf                 	// #1983
  40d448:	mov	w1, wzr
  40d44c:	mov	x6, x21
  40d450:	bl	4039b8 <log_internal_realm@plt>
  40d454:	mov	w19, #0xffffffea            	// #-22
  40d458:	b	40d378 <ascii_strlower_n@plt+0x8f70>
  40d45c:	mov	w21, w0
  40d460:	mov	w0, wzr
  40d464:	bl	4039a8 <log_get_max_level_realm@plt>
  40d468:	cmp	w0, #0x3
  40d46c:	b.lt	40d498 <ascii_strlower_n@plt+0x9090>  // b.tstop
  40d470:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d474:	adrp	x4, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d478:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d47c:	add	x2, x2, #0xfaf
  40d480:	add	x4, x4, #0xf85
  40d484:	add	x5, x5, #0x1e5
  40d488:	mov	w0, #0x3                   	// #3
  40d48c:	mov	w3, #0x7c5                 	// #1989
  40d490:	mov	w1, w21
  40d494:	b	40d360 <ascii_strlower_n@plt+0x8f58>
  40d498:	mov	w8, wzr
  40d49c:	neg	w9, w21
  40d4a0:	b	40d374 <ascii_strlower_n@plt+0x8f6c>
  40d4a4:	mov	w8, wzr
  40d4a8:	neg	w9, w23
  40d4ac:	b	40d374 <ascii_strlower_n@plt+0x8f6c>
  40d4b0:	mov	w19, #0xffffffea            	// #-22
  40d4b4:	b	40d378 <ascii_strlower_n@plt+0x8f70>
  40d4b8:	sub	sp, sp, #0x40
  40d4bc:	stp	x20, x19, [sp, #48]
  40d4c0:	mov	x19, x5
  40d4c4:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d4c8:	stp	x22, x21, [sp, #32]
  40d4cc:	mov	x21, x1
  40d4d0:	add	x5, x5, #0x286
  40d4d4:	add	x1, sp, #0x8
  40d4d8:	stp	x29, x30, [sp, #16]
  40d4dc:	add	x29, sp, #0x10
  40d4e0:	mov	x20, x0
  40d4e4:	str	xzr, [sp, #8]
  40d4e8:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40d4ec:	tbnz	w0, #31, 40d538 <ascii_strlower_n@plt+0x9130>
  40d4f0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40d4f4:	ldr	x0, [sp, #8]
  40d4f8:	ldr	w2, [x8, #56]
  40d4fc:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d500:	add	x1, x1, #0xcc3
  40d504:	bl	403cb8 <sd_bus_message_append@plt>
  40d508:	tbnz	w0, #31, 40d570 <ascii_strlower_n@plt+0x9168>
  40d50c:	ldr	x0, [sp, #8]
  40d510:	mov	x1, x21
  40d514:	bl	404048 <sd_bus_message_append_strv@plt>
  40d518:	tbnz	w0, #31, 40d5b8 <ascii_strlower_n@plt+0x91b0>
  40d51c:	ldr	x1, [sp, #8]
  40d520:	mov	x0, x20
  40d524:	mov	x2, xzr
  40d528:	mov	x3, x19
  40d52c:	mov	x4, xzr
  40d530:	bl	403ce8 <sd_bus_call@plt>
  40d534:	b	40d5f4 <ascii_strlower_n@plt+0x91ec>
  40d538:	mov	w22, w0
  40d53c:	mov	w0, wzr
  40d540:	bl	4039a8 <log_get_max_level_realm@plt>
  40d544:	cmp	w0, #0x3
  40d548:	b.lt	40d5ac <ascii_strlower_n@plt+0x91a4>  // b.tstop
  40d54c:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d550:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d554:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d558:	add	x2, x2, #0xfaf
  40d55c:	add	x4, x4, #0x2a8
  40d560:	add	x5, x5, #0x1e5
  40d564:	mov	w0, #0x3                   	// #3
  40d568:	mov	w3, #0x90f                 	// #2319
  40d56c:	b	40d5a4 <ascii_strlower_n@plt+0x919c>
  40d570:	mov	w22, w0
  40d574:	mov	w0, wzr
  40d578:	bl	4039a8 <log_get_max_level_realm@plt>
  40d57c:	cmp	w0, #0x3
  40d580:	b.lt	40d5ac <ascii_strlower_n@plt+0x91a4>  // b.tstop
  40d584:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d588:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d58c:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d590:	add	x2, x2, #0xfaf
  40d594:	add	x4, x4, #0x2a8
  40d598:	add	x5, x5, #0x1e5
  40d59c:	mov	w0, #0x3                   	// #3
  40d5a0:	mov	w3, #0x913                 	// #2323
  40d5a4:	mov	w1, w22
  40d5a8:	b	40d5f0 <ascii_strlower_n@plt+0x91e8>
  40d5ac:	mov	w8, wzr
  40d5b0:	neg	w9, w22
  40d5b4:	b	40d624 <ascii_strlower_n@plt+0x921c>
  40d5b8:	mov	w21, w0
  40d5bc:	mov	w0, wzr
  40d5c0:	bl	4039a8 <log_get_max_level_realm@plt>
  40d5c4:	cmp	w0, #0x3
  40d5c8:	b.lt	40d61c <ascii_strlower_n@plt+0x9214>  // b.tstop
  40d5cc:	adrp	x2, 419000 <ascii_strlower_n@plt+0x14bf8>
  40d5d0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d5d4:	adrp	x5, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40d5d8:	add	x2, x2, #0xfaf
  40d5dc:	add	x4, x4, #0x2a8
  40d5e0:	add	x5, x5, #0x1e5
  40d5e4:	mov	w0, #0x3                   	// #3
  40d5e8:	mov	w3, #0x917                 	// #2327
  40d5ec:	mov	w1, w21
  40d5f0:	bl	4039b8 <log_internal_realm@plt>
  40d5f4:	mov	w19, w0
  40d5f8:	ldr	x0, [sp, #8]
  40d5fc:	cbz	x0, 40d604 <ascii_strlower_n@plt+0x91fc>
  40d600:	bl	403d88 <sd_bus_message_unref@plt>
  40d604:	mov	w0, w19
  40d608:	ldp	x20, x19, [sp, #48]
  40d60c:	ldp	x22, x21, [sp, #32]
  40d610:	ldp	x29, x30, [sp, #16]
  40d614:	add	sp, sp, #0x40
  40d618:	ret
  40d61c:	mov	w8, wzr
  40d620:	neg	w9, w21
  40d624:	sub	w19, w8, w9, uxtb
  40d628:	ldr	x0, [sp, #8]
  40d62c:	cbnz	x0, 40d600 <ascii_strlower_n@plt+0x91f8>
  40d630:	b	40d604 <ascii_strlower_n@plt+0x91fc>
  40d634:	stp	x29, x30, [sp, #-64]!
  40d638:	str	x23, [sp, #16]
  40d63c:	stp	x22, x21, [sp, #32]
  40d640:	stp	x20, x19, [sp, #48]
  40d644:	mov	x29, sp
  40d648:	cbz	x0, 40d74c <ascii_strlower_n@plt+0x9344>
  40d64c:	cmp	x3, #0xb
  40d650:	b.ls	40d76c <ascii_strlower_n@plt+0x9364>  // b.plast
  40d654:	mov	w8, #0xffff                	// #65535
  40d658:	cmp	x3, x8
  40d65c:	mov	x21, x2
  40d660:	csel	x22, x3, x8, cc  // cc = lo, ul, last
  40d664:	cmp	x2, #0x10, lsl #12
  40d668:	b.cc	40d6bc <ascii_strlower_n@plt+0x92b4>  // b.lo, b.ul, b.last
  40d66c:	mov	w0, wzr
  40d670:	bl	4039a8 <log_get_max_level_realm@plt>
  40d674:	cmp	w0, #0x3
  40d678:	b.lt	40d72c <ascii_strlower_n@plt+0x9324>  // b.tstop
  40d67c:	mov	x6, x21
  40d680:	ldp	x20, x19, [sp, #48]
  40d684:	ldp	x22, x21, [sp, #32]
  40d688:	ldr	x23, [sp, #16]
  40d68c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d690:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d694:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d698:	mov	w1, #0x1b                  	// #27
  40d69c:	add	x2, x2, #0x36e
  40d6a0:	add	x4, x4, #0x3f1
  40d6a4:	add	x5, x5, #0x400
  40d6a8:	mov	w0, #0x3                   	// #3
  40d6ac:	movk	w1, #0x4000, lsl #16
  40d6b0:	mov	w3, #0x38                  	// #56
  40d6b4:	ldp	x29, x30, [sp], #64
  40d6b8:	b	4039b8 <log_internal_realm@plt>
  40d6bc:	mov	w20, w1
  40d6c0:	mov	x19, x0
  40d6c4:	bl	404058 <page_size@plt>
  40d6c8:	add	x8, x21, #0xa7
  40d6cc:	cmp	x21, #0xc
  40d6d0:	mov	w9, #0x2a7                 	// #679
  40d6d4:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  40d6d8:	add	x8, x0, x8
  40d6dc:	neg	x9, x0
  40d6e0:	and	x8, x8, x9
  40d6e4:	sub	x8, x8, #0xa8
  40d6e8:	cmp	x8, x22
  40d6ec:	csel	x21, x22, x8, hi  // hi = pmore
  40d6f0:	add	x1, x21, #0xa8
  40d6f4:	mov	w0, #0x1                   	// #1
  40d6f8:	mov	w23, #0x1                   	// #1
  40d6fc:	bl	404068 <calloc@plt>
  40d700:	cbz	x0, 40d734 <ascii_strlower_n@plt+0x932c>
  40d704:	mov	x8, x0
  40d708:	mov	w0, wzr
  40d70c:	mov	w9, #0xc                   	// #12
  40d710:	mov	x10, #0xffffffffffffffff    	// #-1
  40d714:	stp	w23, w20, [x8]
  40d718:	stp	x9, x21, [x8, #8]
  40d71c:	stp	x9, x22, [x8, #24]
  40d720:	stp	x10, x10, [x8, #56]
  40d724:	str	x8, [x19]
  40d728:	b	40d738 <ascii_strlower_n@plt+0x9330>
  40d72c:	mov	w0, #0xffffffe5            	// #-27
  40d730:	b	40d738 <ascii_strlower_n@plt+0x9330>
  40d734:	mov	w0, #0xfffffff4            	// #-12
  40d738:	ldp	x20, x19, [sp, #48]
  40d73c:	ldp	x22, x21, [sp, #32]
  40d740:	ldr	x23, [sp, #16]
  40d744:	ldp	x29, x30, [sp], #64
  40d748:	ret
  40d74c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d750:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d754:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d758:	add	x1, x1, #0xcb6
  40d75c:	add	x2, x2, #0x36e
  40d760:	add	x4, x4, #0x390
  40d764:	mov	w3, #0x2c                  	// #44
  40d768:	bl	403a98 <log_assert_failed_realm@plt>
  40d76c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d770:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d774:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d778:	add	x1, x1, #0x3ce
  40d77c:	add	x2, x2, #0x36e
  40d780:	add	x4, x4, #0x390
  40d784:	mov	w3, #0x2d                  	// #45
  40d788:	mov	w0, wzr
  40d78c:	bl	403a98 <log_assert_failed_realm@plt>
  40d790:	stp	x29, x30, [sp, #-16]!
  40d794:	mov	x29, sp
  40d798:	cbz	x0, 40d800 <ascii_strlower_n@plt+0x93f8>
  40d79c:	ldr	x8, [x0, #40]
  40d7a0:	ldr	w9, [x0, #4]
  40d7a4:	add	x10, x0, #0xa8
  40d7a8:	cmp	x8, #0x0
  40d7ac:	csel	x8, x10, x8, eq  // eq = none
  40d7b0:	cmp	w9, #0x1
  40d7b4:	b.eq	40d7cc <ascii_strlower_n@plt+0x93c4>  // b.none
  40d7b8:	cmp	w9, #0x2
  40d7bc:	b.ne	40d7dc <ascii_strlower_n@plt+0x93d4>  // b.any
  40d7c0:	tbnz	w2, #0, 40d820 <ascii_strlower_n@plt+0x9418>
  40d7c4:	mov	w9, wzr
  40d7c8:	b	40d7f4 <ascii_strlower_n@plt+0x93ec>
  40d7cc:	tst	w2, #0x1
  40d7d0:	mov	w9, #0x200                 	// #512
  40d7d4:	csel	w9, w9, wzr, ne  // ne = any
  40d7d8:	b	40d7f0 <ascii_strlower_n@plt+0x93e8>
  40d7dc:	tbnz	w2, #0, 40d844 <ascii_strlower_n@plt+0x943c>
  40d7e0:	tst	w1, #0x1
  40d7e4:	mov	w9, #0x100                 	// #256
  40d7e8:	mov	w10, #0x110                 	// #272
  40d7ec:	csel	w9, w10, w9, ne  // ne = any
  40d7f0:	rev16	w9, w9
  40d7f4:	strh	w9, [x8, #2]
  40d7f8:	ldp	x29, x30, [sp], #16
  40d7fc:	ret
  40d800:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d804:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d808:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d80c:	add	x1, x1, #0x428
  40d810:	add	x2, x2, #0x36e
  40d814:	add	x4, x4, #0x42a
  40d818:	mov	w3, #0x5e                  	// #94
  40d81c:	bl	403a98 <log_assert_failed_realm@plt>
  40d820:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d824:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d828:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d82c:	add	x1, x1, #0x45f
  40d830:	add	x2, x2, #0x36e
  40d834:	add	x4, x4, #0x42a
  40d838:	mov	w3, #0x64                  	// #100
  40d83c:	mov	w0, wzr
  40d840:	bl	403a98 <log_assert_failed_realm@plt>
  40d844:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d848:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d84c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d850:	add	x1, x1, #0x45f
  40d854:	add	x2, x2, #0x36e
  40d858:	add	x4, x4, #0x42a
  40d85c:	mov	w3, #0x7e                  	// #126
  40d860:	mov	w0, wzr
  40d864:	bl	403a98 <log_assert_failed_realm@plt>
  40d868:	sub	sp, sp, #0x30
  40d86c:	stp	x29, x30, [sp, #16]
  40d870:	stp	x20, x19, [sp, #32]
  40d874:	add	x29, sp, #0x10
  40d878:	cbz	x0, 40d8ec <ascii_strlower_n@plt+0x94e4>
  40d87c:	mov	w20, w3
  40d880:	mov	x19, x0
  40d884:	add	x0, sp, #0x8
  40d888:	mov	w3, #0xffff                	// #65535
  40d88c:	bl	40d634 <ascii_strlower_n@plt+0x922c>
  40d890:	tbnz	w0, #31, 40d8dc <ascii_strlower_n@plt+0x94d4>
  40d894:	ldr	x8, [sp, #8]
  40d898:	cbz	x8, 40d90c <ascii_strlower_n@plt+0x9504>
  40d89c:	ldr	x9, [x8, #40]
  40d8a0:	ldr	w11, [x8, #4]
  40d8a4:	add	x10, x8, #0xa8
  40d8a8:	mov	w12, #0x110                 	// #272
  40d8ac:	cmp	x9, #0x0
  40d8b0:	csel	x9, x10, x9, eq  // eq = none
  40d8b4:	mov	w10, #0x100                 	// #256
  40d8b8:	tst	w20, #0x1
  40d8bc:	csel	w10, w12, w10, ne  // ne = any
  40d8c0:	sub	w11, w11, #0x1
  40d8c4:	cmp	w11, #0x2
  40d8c8:	rev16	w10, w10
  40d8cc:	mov	w0, wzr
  40d8d0:	csel	w10, wzr, w10, cc  // cc = lo, ul, last
  40d8d4:	strh	w10, [x9, #2]
  40d8d8:	str	x8, [x19]
  40d8dc:	ldp	x20, x19, [sp, #32]
  40d8e0:	ldp	x29, x30, [sp, #16]
  40d8e4:	add	sp, sp, #0x30
  40d8e8:	ret
  40d8ec:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  40d8f0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d8f4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d8f8:	add	x1, x1, #0xcb6
  40d8fc:	add	x2, x2, #0x36e
  40d900:	add	x4, x4, #0x46a
  40d904:	mov	w3, #0x90                  	// #144
  40d908:	bl	403a98 <log_assert_failed_realm@plt>
  40d90c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d910:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d914:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d918:	add	x1, x1, #0x428
  40d91c:	add	x2, x2, #0x36e
  40d920:	add	x4, x4, #0x42a
  40d924:	mov	w3, #0x5e                  	// #94
  40d928:	mov	w0, wzr
  40d92c:	bl	403a98 <log_assert_failed_realm@plt>
  40d930:	stp	x29, x30, [sp, #-16]!
  40d934:	mov	x29, sp
  40d938:	cbz	x0, 40d954 <ascii_strlower_n@plt+0x954c>
  40d93c:	ldrb	w8, [x0, #160]
  40d940:	tbnz	w8, #0, 40d95c <ascii_strlower_n@plt+0x9554>
  40d944:	ldr	w8, [x0]
  40d948:	cbz	w8, 40d980 <ascii_strlower_n@plt+0x9578>
  40d94c:	add	w8, w8, #0x1
  40d950:	str	w8, [x0]
  40d954:	ldp	x29, x30, [sp], #16
  40d958:	ret
  40d95c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d960:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d964:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d968:	add	x1, x1, #0x4ad
  40d96c:	add	x2, x2, #0x36e
  40d970:	add	x4, x4, #0x4ba
  40d974:	mov	w3, #0xa4                  	// #164
  40d978:	mov	w0, wzr
  40d97c:	bl	403a98 <log_assert_failed_realm@plt>
  40d980:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d984:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d988:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40d98c:	add	x1, x1, #0x4e1
  40d990:	add	x2, x2, #0x36e
  40d994:	add	x4, x4, #0x4ba
  40d998:	mov	w3, #0xa6                  	// #166
  40d99c:	mov	w0, wzr
  40d9a0:	bl	403a98 <log_assert_failed_realm@plt>
  40d9a4:	stp	x29, x30, [sp, #-32]!
  40d9a8:	str	x19, [sp, #16]
  40d9ac:	mov	x29, sp
  40d9b0:	cbz	x0, 40da40 <ascii_strlower_n@plt+0x9638>
  40d9b4:	ldr	w8, [x0]
  40d9b8:	mov	x19, x0
  40d9bc:	cbz	w8, 40da50 <ascii_strlower_n@plt+0x9648>
  40d9c0:	ldr	x0, [x19, #152]
  40d9c4:	bl	40d9a4 <ascii_strlower_n@plt+0x959c>
  40d9c8:	ldr	w8, [x19]
  40d9cc:	subs	w8, w8, #0x1
  40d9d0:	b.ne	40da10 <ascii_strlower_n@plt+0x9608>  // b.any
  40d9d4:	ldr	x0, [x19, #72]
  40d9d8:	bl	4178e4 <ascii_strlower_n@plt+0x134dc>
  40d9dc:	ldr	x0, [x19, #80]
  40d9e0:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  40d9e4:	ldr	x0, [x19, #88]
  40d9e8:	bl	413398 <ascii_strlower_n@plt+0xef90>
  40d9ec:	ldr	x0, [x19, #48]
  40d9f0:	add	x2, x29, #0x18
  40d9f4:	mov	w1, #0x1                   	// #1
  40d9f8:	str	xzr, [x29, #24]
  40d9fc:	bl	404078 <internal_hashmap_first_key_and_value@plt>
  40da00:	ldr	x0, [x29, #24]
  40da04:	cbz	x0, 40da18 <ascii_strlower_n@plt+0x9610>
  40da08:	bl	4039d8 <free@plt>
  40da0c:	b	40d9ec <ascii_strlower_n@plt+0x95e4>
  40da10:	str	w8, [x19]
  40da14:	b	40da40 <ascii_strlower_n@plt+0x9638>
  40da18:	ldr	x0, [x19, #48]
  40da1c:	mov	x1, xzr
  40da20:	mov	x2, xzr
  40da24:	bl	404088 <internal_hashmap_free@plt>
  40da28:	ldr	x0, [x19, #40]
  40da2c:	bl	4039d8 <free@plt>
  40da30:	ldrb	w8, [x19, #160]
  40da34:	tbnz	w8, #0, 40da40 <ascii_strlower_n@plt+0x9638>
  40da38:	mov	x0, x19
  40da3c:	bl	4039d8 <free@plt>
  40da40:	ldr	x19, [sp, #16]
  40da44:	mov	x0, xzr
  40da48:	ldp	x29, x30, [sp], #32
  40da4c:	ret
  40da50:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40da54:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40da58:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40da5c:	add	x1, x1, #0x4e1
  40da60:	add	x2, x2, #0x36e
  40da64:	add	x4, x4, #0x4ee
  40da68:	mov	w3, #0xc2                  	// #194
  40da6c:	mov	w0, wzr
  40da70:	bl	403a98 <log_assert_failed_realm@plt>
  40da74:	stp	x29, x30, [sp, #-16]!
  40da78:	mov	x29, sp
  40da7c:	cbz	x0, 40daa0 <ascii_strlower_n@plt+0x9698>
  40da80:	ldr	x8, [x0, #8]
  40da84:	mov	w9, #0xfff4                	// #65524
  40da88:	sub	x8, x8, #0xc
  40da8c:	cmp	x8, x9
  40da90:	mov	w8, #0xffffffb6            	// #-74
  40da94:	csinc	w0, w8, wzr, cs  // cs = hs, nlast
  40da98:	ldp	x29, x30, [sp], #16
  40da9c:	ret
  40daa0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40daa4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40daa8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40daac:	add	x1, x1, #0x428
  40dab0:	add	x2, x2, #0x36e
  40dab4:	add	x4, x4, #0x517
  40dab8:	mov	w3, #0xcf                  	// #207
  40dabc:	bl	403a98 <log_assert_failed_realm@plt>
  40dac0:	stp	x29, x30, [sp, #-16]!
  40dac4:	mov	x29, sp
  40dac8:	cbz	x0, 40db60 <ascii_strlower_n@plt+0x9758>
  40dacc:	ldr	x8, [x0, #8]
  40dad0:	mov	w9, #0xfff3                	// #65523
  40dad4:	sub	x8, x8, #0xc
  40dad8:	cmp	x8, x9
  40dadc:	b.hi	40db0c <ascii_strlower_n@plt+0x9704>  // b.pmore
  40dae0:	ldr	x8, [x0, #40]
  40dae4:	add	x9, x0, #0xa8
  40dae8:	cmp	x8, #0x0
  40daec:	csel	x9, x9, x8, eq  // eq = none
  40daf0:	ldrh	w8, [x9, #2]
  40daf4:	tbnz	w8, #7, 40db04 <ascii_strlower_n@plt+0x96fc>
  40daf8:	mov	w0, wzr
  40dafc:	ldp	x29, x30, [sp], #16
  40db00:	ret
  40db04:	tst	w8, #0x78
  40db08:	b.eq	40db18 <ascii_strlower_n@plt+0x9710>  // b.none
  40db0c:	mov	w0, #0xffffffb6            	// #-74
  40db10:	ldp	x29, x30, [sp], #16
  40db14:	ret
  40db18:	ldr	w10, [x0, #4]
  40db1c:	cmp	w10, #0x1
  40db20:	b.eq	40db3c <ascii_strlower_n@plt+0x9734>  // b.none
  40db24:	cmp	w10, #0x2
  40db28:	b.ne	40db54 <ascii_strlower_n@plt+0x974c>  // b.any
  40db2c:	ldrh	w8, [x9, #4]
  40db30:	cmp	w8, #0x100
  40db34:	b.eq	40db54 <ascii_strlower_n@plt+0x974c>  // b.none
  40db38:	b	40db0c <ascii_strlower_n@plt+0x9704>
  40db3c:	ldr	x9, [x0, #88]
  40db40:	cbz	x9, 40db48 <ascii_strlower_n@plt+0x9740>
  40db44:	ldrb	w9, [x9, #27]
  40db48:	ubfx	w8, w8, #8, #4
  40db4c:	orr	w8, w8, w9
  40db50:	cbnz	w8, 40db0c <ascii_strlower_n@plt+0x9704>
  40db54:	mov	w0, #0x1                   	// #1
  40db58:	ldp	x29, x30, [sp], #16
  40db5c:	ret
  40db60:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40db64:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40db68:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40db6c:	add	x1, x1, #0x428
  40db70:	add	x2, x2, #0x36e
  40db74:	add	x4, x4, #0x53c
  40db78:	mov	w3, #0xdd                  	// #221
  40db7c:	bl	403a98 <log_assert_failed_realm@plt>
  40db80:	stp	x29, x30, [sp, #-16]!
  40db84:	mov	x29, sp
  40db88:	cbz	x0, 40dc44 <ascii_strlower_n@plt+0x983c>
  40db8c:	ldr	x8, [x0, #8]
  40db90:	mov	w9, #0xfff3                	// #65523
  40db94:	sub	x8, x8, #0xc
  40db98:	cmp	x8, x9
  40db9c:	b.hi	40dbc4 <ascii_strlower_n@plt+0x97bc>  // b.pmore
  40dba0:	ldr	x8, [x0, #40]
  40dba4:	add	x9, x0, #0xa8
  40dba8:	cmp	x8, #0x0
  40dbac:	csel	x9, x9, x8, eq  // eq = none
  40dbb0:	ldrh	w8, [x9, #2]
  40dbb4:	tbnz	w8, #7, 40dbd0 <ascii_strlower_n@plt+0x97c8>
  40dbb8:	mov	w10, #0x7a                  	// #122
  40dbbc:	tst	w8, w10
  40dbc0:	b.eq	40dbdc <ascii_strlower_n@plt+0x97d4>  // b.none
  40dbc4:	mov	w0, #0xffffffb6            	// #-74
  40dbc8:	ldp	x29, x30, [sp], #16
  40dbcc:	ret
  40dbd0:	mov	w0, wzr
  40dbd4:	ldp	x29, x30, [sp], #16
  40dbd8:	ret
  40dbdc:	ldr	w10, [x0, #4]
  40dbe0:	cmp	w10, #0x2
  40dbe4:	b.eq	40dbf4 <ascii_strlower_n@plt+0x97ec>  // b.none
  40dbe8:	cmp	w10, #0x1
  40dbec:	b.eq	40dc14 <ascii_strlower_n@plt+0x980c>  // b.none
  40dbf0:	cbnz	w10, 40dc38 <ascii_strlower_n@plt+0x9830>
  40dbf4:	ldrh	w8, [x9, #4]
  40dbf8:	cmp	w8, #0x100
  40dbfc:	b.ne	40dbc4 <ascii_strlower_n@plt+0x97bc>  // b.any
  40dc00:	ldrh	w8, [x9, #6]
  40dc04:	cbnz	w8, 40dbc4 <ascii_strlower_n@plt+0x97bc>
  40dc08:	ldrh	w8, [x9, #8]
  40dc0c:	cbnz	w8, 40dbc4 <ascii_strlower_n@plt+0x97bc>
  40dc10:	b	40dc38 <ascii_strlower_n@plt+0x9830>
  40dc14:	mov	w9, #0xb005                	// #45061
  40dc18:	tst	w8, w9
  40dc1c:	b.ne	40dbc4 <ascii_strlower_n@plt+0x97bc>  // b.any
  40dc20:	ldr	x9, [x0, #88]
  40dc24:	cbz	x9, 40dc2c <ascii_strlower_n@plt+0x9824>
  40dc28:	ldrb	w9, [x9, #27]
  40dc2c:	ubfx	w8, w8, #8, #4
  40dc30:	orr	w8, w8, w9
  40dc34:	cbnz	w8, 40dbc4 <ascii_strlower_n@plt+0x97bc>
  40dc38:	mov	w0, #0x1                   	// #1
  40dc3c:	ldp	x29, x30, [sp], #16
  40dc40:	ret
  40dc44:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dc48:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dc4c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dc50:	add	x1, x1, #0x428
  40dc54:	add	x2, x2, #0x36e
  40dc58:	add	x4, x4, #0x567
  40dc5c:	mov	w3, #0x103                 	// #259
  40dc60:	bl	403a98 <log_assert_failed_realm@plt>
  40dc64:	sub	sp, sp, #0x40
  40dc68:	stp	x29, x30, [sp, #32]
  40dc6c:	stp	x20, x19, [sp, #48]
  40dc70:	add	x29, sp, #0x20
  40dc74:	cbz	x0, 40dce8 <ascii_strlower_n@plt+0x98e0>
  40dc78:	ldr	x8, [x0, #8]
  40dc7c:	mov	x19, x1
  40dc80:	mov	x20, x0
  40dc84:	cmp	x8, x1
  40dc88:	b.ls	40dcd8 <ascii_strlower_n@plt+0x98d0>  // b.plast
  40dc8c:	mov	w8, #0xfffffffe            	// #-2
  40dc90:	str	w8, [sp, #16]
  40dc94:	str	xzr, [sp, #24]
  40dc98:	ldr	x0, [x20, #48]
  40dc9c:	add	x1, sp, #0x10
  40dca0:	mov	x2, sp
  40dca4:	add	x3, sp, #0x8
  40dca8:	bl	404098 <internal_hashmap_iterate@plt>
  40dcac:	tbz	w0, #0, 40dcd4 <ascii_strlower_n@plt+0x98cc>
  40dcb0:	ldr	x8, [sp]
  40dcb4:	cmp	x8, x19
  40dcb8:	b.cc	40dc98 <ascii_strlower_n@plt+0x9890>  // b.lo, b.ul, b.last
  40dcbc:	ldr	x0, [x20, #48]
  40dcc0:	ldr	x1, [sp, #8]
  40dcc4:	bl	4040a8 <internal_hashmap_remove@plt>
  40dcc8:	ldr	x0, [sp, #8]
  40dccc:	bl	4039d8 <free@plt>
  40dcd0:	b	40dc98 <ascii_strlower_n@plt+0x9890>
  40dcd4:	str	x19, [x20, #8]
  40dcd8:	ldp	x20, x19, [sp, #48]
  40dcdc:	ldp	x29, x30, [sp, #32]
  40dce0:	add	sp, sp, #0x40
  40dce4:	ret
  40dce8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dcec:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dcf0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dcf4:	add	x1, x1, #0x428
  40dcf8:	add	x2, x2, #0x36e
  40dcfc:	add	x4, x4, #0x592
  40dd00:	mov	w3, #0x169                 	// #361
  40dd04:	bl	403a98 <log_assert_failed_realm@plt>
  40dd08:	sub	sp, sp, #0x30
  40dd0c:	stp	x29, x30, [sp, #16]
  40dd10:	stp	x20, x19, [sp, #32]
  40dd14:	add	x29, sp, #0x10
  40dd18:	cbz	x0, 40dd60 <ascii_strlower_n@plt+0x9958>
  40dd1c:	mov	x19, x2
  40dd20:	mov	x20, x1
  40dd24:	add	x2, sp, #0x8
  40dd28:	mov	x1, x19
  40dd2c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40dd30:	tbnz	w0, #31, 40dd50 <ascii_strlower_n@plt+0x9948>
  40dd34:	cbz	x19, 40dd4c <ascii_strlower_n@plt+0x9944>
  40dd38:	cbz	x20, 40dd80 <ascii_strlower_n@plt+0x9978>
  40dd3c:	ldr	x0, [sp, #8]
  40dd40:	mov	x1, x20
  40dd44:	mov	x2, x19
  40dd48:	bl	403c68 <memcpy@plt>
  40dd4c:	mov	w0, wzr
  40dd50:	ldp	x20, x19, [sp, #32]
  40dd54:	ldp	x29, x30, [sp, #16]
  40dd58:	add	sp, sp, #0x30
  40dd5c:	ret
  40dd60:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd64:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd68:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd6c:	add	x1, x1, #0x428
  40dd70:	add	x2, x2, #0x36e
  40dd74:	add	x4, x4, #0x5c0
  40dd78:	mov	w3, #0x17e                 	// #382
  40dd7c:	bl	403a98 <log_assert_failed_realm@plt>
  40dd80:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd84:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd88:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dd8c:	add	x1, x1, #0xdd8
  40dd90:	add	x2, x2, #0xddf
  40dd94:	add	x4, x4, #0xdf7
  40dd98:	mov	w3, #0x14                  	// #20
  40dd9c:	mov	w0, wzr
  40dda0:	bl	403a98 <log_assert_failed_realm@plt>
  40dda4:	stp	x29, x30, [sp, #-80]!
  40dda8:	str	x25, [sp, #16]
  40ddac:	stp	x24, x23, [sp, #32]
  40ddb0:	stp	x22, x21, [sp, #48]
  40ddb4:	stp	x20, x19, [sp, #64]
  40ddb8:	mov	x29, sp
  40ddbc:	cbz	x0, 40ded0 <ascii_strlower_n@plt+0x9ac8>
  40ddc0:	ldp	x23, x8, [x0, #8]
  40ddc4:	mov	x22, x3
  40ddc8:	mov	x21, x2
  40ddcc:	mov	x20, x1
  40ddd0:	add	x25, x23, x1
  40ddd4:	mov	x19, x0
  40ddd8:	cmp	x25, x8
  40dddc:	b.ls	40de70 <ascii_strlower_n@plt+0x9a68>  // b.plast
  40dde0:	bl	404058 <page_size@plt>
  40dde4:	ldr	x9, [x19, #32]
  40dde8:	add	x8, x0, x25, lsl #1
  40ddec:	neg	x10, x0
  40ddf0:	sub	x8, x8, #0x1
  40ddf4:	and	x8, x8, x10
  40ddf8:	cmp	x9, #0x0
  40ddfc:	mov	w10, #0xffff                	// #65535
  40de00:	csel	x9, x10, x9, eq  // eq = none
  40de04:	cmp	x8, x9
  40de08:	csel	x24, x9, x8, hi  // hi = pmore
  40de0c:	cmp	x25, x24
  40de10:	b.ls	40de1c <ascii_strlower_n@plt+0x9a14>  // b.plast
  40de14:	mov	w0, #0xffffffa6            	// #-90
  40de18:	b	40deb0 <ascii_strlower_n@plt+0x9aa8>
  40de1c:	ldr	x0, [x19, #40]
  40de20:	cbz	x0, 40de38 <ascii_strlower_n@plt+0x9a30>
  40de24:	mov	x1, x24
  40de28:	bl	4040b8 <realloc@plt>
  40de2c:	cbz	x0, 40dec8 <ascii_strlower_n@plt+0x9ac0>
  40de30:	str	x0, [x19, #40]
  40de34:	b	40de6c <ascii_strlower_n@plt+0x9a64>
  40de38:	mov	x0, x24
  40de3c:	bl	4040c8 <malloc@plt>
  40de40:	str	x0, [x19, #40]
  40de44:	cbz	x0, 40dec8 <ascii_strlower_n@plt+0x9ac0>
  40de48:	add	x1, x19, #0xa8
  40de4c:	mov	x2, x23
  40de50:	mov	x25, x0
  40de54:	bl	403c68 <memcpy@plt>
  40de58:	subs	x2, x24, x23
  40de5c:	b.eq	40de6c <ascii_strlower_n@plt+0x9a64>  // b.none
  40de60:	add	x0, x25, x23
  40de64:	mov	w1, wzr
  40de68:	bl	403c58 <memset@plt>
  40de6c:	str	x24, [x19, #16]
  40de70:	cbz	x22, 40de7c <ascii_strlower_n@plt+0x9a74>
  40de74:	ldr	x8, [x19, #8]
  40de78:	str	x8, [x22]
  40de7c:	cbz	x21, 40dea0 <ascii_strlower_n@plt+0x9a98>
  40de80:	ldr	x9, [x19, #40]
  40de84:	ldr	x8, [x19, #8]
  40de88:	add	x10, x19, #0xa8
  40de8c:	cmp	x9, #0x0
  40de90:	csel	x9, x10, x9, eq  // eq = none
  40de94:	add	x9, x9, x8
  40de98:	str	x9, [x21]
  40de9c:	b	40dea4 <ascii_strlower_n@plt+0x9a9c>
  40dea0:	ldr	x8, [x19, #8]
  40dea4:	mov	w0, wzr
  40dea8:	add	x8, x8, x20
  40deac:	str	x8, [x19, #8]
  40deb0:	ldp	x20, x19, [sp, #64]
  40deb4:	ldp	x22, x21, [sp, #48]
  40deb8:	ldp	x24, x23, [sp, #32]
  40debc:	ldr	x25, [sp, #16]
  40dec0:	ldp	x29, x30, [sp], #80
  40dec4:	ret
  40dec8:	mov	w0, #0xfffffff4            	// #-12
  40decc:	b	40deb0 <ascii_strlower_n@plt+0x9aa8>
  40ded0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40ded4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40ded8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dedc:	add	x1, x1, #0x428
  40dee0:	add	x2, x2, #0x36e
  40dee4:	add	x4, x4, #0xd9a
  40dee8:	mov	w3, #0x138                 	// #312
  40deec:	bl	403a98 <log_assert_failed_realm@plt>
  40def0:	stp	x29, x30, [sp, #-32]!
  40def4:	str	x19, [sp, #16]
  40def8:	mov	x29, sp
  40defc:	cbz	x0, 40df30 <ascii_strlower_n@plt+0x9b28>
  40df00:	mov	x3, x2
  40df04:	mov	w19, w1
  40df08:	add	x2, x29, #0x18
  40df0c:	mov	w1, #0x1                   	// #1
  40df10:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40df14:	tbnz	w0, #31, 40df24 <ascii_strlower_n@plt+0x9b1c>
  40df18:	ldr	x8, [x29, #24]
  40df1c:	mov	w0, wzr
  40df20:	strb	w19, [x8]
  40df24:	ldr	x19, [sp, #16]
  40df28:	ldp	x29, x30, [sp], #32
  40df2c:	ret
  40df30:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40df34:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40df38:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40df3c:	add	x1, x1, #0x428
  40df40:	add	x2, x2, #0x36e
  40df44:	add	x4, x4, #0x608
  40df48:	mov	w3, #0x18c                 	// #396
  40df4c:	bl	403a98 <log_assert_failed_realm@plt>
  40df50:	stp	x29, x30, [sp, #-32]!
  40df54:	str	x19, [sp, #16]
  40df58:	mov	x29, sp
  40df5c:	cbz	x0, 40df98 <ascii_strlower_n@plt+0x9b90>
  40df60:	mov	x3, x2
  40df64:	mov	w19, w1
  40df68:	add	x2, x29, #0x18
  40df6c:	mov	w1, #0x2                   	// #2
  40df70:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40df74:	tbnz	w0, #31, 40df8c <ascii_strlower_n@plt+0x9b84>
  40df78:	ldr	x8, [x29, #24]
  40df7c:	rev	w9, w19
  40df80:	mov	w0, wzr
  40df84:	lsr	w9, w9, #16
  40df88:	strh	w9, [x8]
  40df8c:	ldr	x19, [sp, #16]
  40df90:	ldp	x29, x30, [sp], #32
  40df94:	ret
  40df98:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40df9c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dfa0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40dfa4:	add	x1, x1, #0x428
  40dfa8:	add	x2, x2, #0x36e
  40dfac:	add	x4, x4, #0x644
  40dfb0:	mov	w3, #0x19b                 	// #411
  40dfb4:	bl	403a98 <log_assert_failed_realm@plt>
  40dfb8:	stp	x29, x30, [sp, #-32]!
  40dfbc:	str	x19, [sp, #16]
  40dfc0:	mov	x29, sp
  40dfc4:	cbz	x0, 40dffc <ascii_strlower_n@plt+0x9bf4>
  40dfc8:	mov	x3, x2
  40dfcc:	mov	w19, w1
  40dfd0:	add	x2, x29, #0x18
  40dfd4:	mov	w1, #0x4                   	// #4
  40dfd8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40dfdc:	tbnz	w0, #31, 40dff0 <ascii_strlower_n@plt+0x9be8>
  40dfe0:	ldr	x8, [x29, #24]
  40dfe4:	mov	w0, wzr
  40dfe8:	rev	w9, w19
  40dfec:	str	w9, [x8]
  40dff0:	ldr	x19, [sp, #16]
  40dff4:	ldp	x29, x30, [sp], #32
  40dff8:	ret
  40dffc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e000:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e004:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e008:	add	x1, x1, #0x428
  40e00c:	add	x2, x2, #0x36e
  40e010:	add	x4, x4, #0x682
  40e014:	mov	w3, #0x1aa                 	// #426
  40e018:	bl	403a98 <log_assert_failed_realm@plt>
  40e01c:	sub	sp, sp, #0x40
  40e020:	stp	x29, x30, [sp, #16]
  40e024:	stp	x22, x21, [sp, #32]
  40e028:	stp	x20, x19, [sp, #48]
  40e02c:	add	x29, sp, #0x10
  40e030:	cbz	x0, 40e0b0 <ascii_strlower_n@plt+0x9ca8>
  40e034:	mov	x19, x1
  40e038:	cbz	x1, 40e0d0 <ascii_strlower_n@plt+0x9cc8>
  40e03c:	mov	x22, x0
  40e040:	mov	x0, x19
  40e044:	mov	x21, x2
  40e048:	bl	403d28 <strlen@plt>
  40e04c:	cmp	x0, #0xff
  40e050:	b.ls	40e05c <ascii_strlower_n@plt+0x9c54>  // b.plast
  40e054:	mov	w0, #0xfffffff9            	// #-7
  40e058:	b	40e09c <ascii_strlower_n@plt+0x9c94>
  40e05c:	mov	x20, x0
  40e060:	add	x1, x0, #0x1
  40e064:	add	x2, sp, #0x8
  40e068:	mov	x0, x22
  40e06c:	mov	x3, x21
  40e070:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e074:	tbnz	w0, #31, 40e09c <ascii_strlower_n@plt+0x9c94>
  40e078:	ldr	x8, [sp, #8]
  40e07c:	strb	w20, [x8]
  40e080:	cbz	x20, 40e098 <ascii_strlower_n@plt+0x9c90>
  40e084:	ldr	x8, [sp, #8]
  40e088:	mov	x1, x19
  40e08c:	mov	x2, x20
  40e090:	add	x0, x8, #0x1
  40e094:	bl	403c68 <memcpy@plt>
  40e098:	mov	w0, wzr
  40e09c:	ldp	x20, x19, [sp, #48]
  40e0a0:	ldp	x22, x21, [sp, #32]
  40e0a4:	ldp	x29, x30, [sp, #16]
  40e0a8:	add	sp, sp, #0x40
  40e0ac:	ret
  40e0b0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e0b4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e0b8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e0bc:	add	x1, x1, #0x428
  40e0c0:	add	x2, x2, #0x36e
  40e0c4:	add	x4, x4, #0x6c0
  40e0c8:	mov	w3, #0x1b6                 	// #438
  40e0cc:	bl	403a98 <log_assert_failed_realm@plt>
  40e0d0:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  40e0d4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e0d8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e0dc:	add	x1, x1, #0xfaa
  40e0e0:	add	x2, x2, #0x36e
  40e0e4:	add	x4, x4, #0x6c0
  40e0e8:	mov	w3, #0x1b7                 	// #439
  40e0ec:	mov	w0, wzr
  40e0f0:	bl	403a98 <log_assert_failed_realm@plt>
  40e0f4:	sub	sp, sp, #0x30
  40e0f8:	stp	x29, x30, [sp, #16]
  40e0fc:	stp	x20, x19, [sp, #32]
  40e100:	add	x29, sp, #0x10
  40e104:	cbz	x0, 40e170 <ascii_strlower_n@plt+0x9d68>
  40e108:	mov	x19, x2
  40e10c:	mov	x20, x1
  40e110:	cbnz	x1, 40e118 <ascii_strlower_n@plt+0x9d10>
  40e114:	cbnz	x19, 40e190 <ascii_strlower_n@plt+0x9d88>
  40e118:	cmp	x19, #0xff
  40e11c:	b.ls	40e128 <ascii_strlower_n@plt+0x9d20>  // b.plast
  40e120:	mov	w0, #0xfffffff9            	// #-7
  40e124:	b	40e160 <ascii_strlower_n@plt+0x9d58>
  40e128:	add	x1, x19, #0x1
  40e12c:	add	x2, sp, #0x8
  40e130:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e134:	tbnz	w0, #31, 40e160 <ascii_strlower_n@plt+0x9d58>
  40e138:	ldr	x8, [sp, #8]
  40e13c:	strb	w19, [x8]
  40e140:	cbz	x19, 40e15c <ascii_strlower_n@plt+0x9d54>
  40e144:	cbz	x20, 40e1b4 <ascii_strlower_n@plt+0x9dac>
  40e148:	ldr	x8, [sp, #8]
  40e14c:	mov	x1, x20
  40e150:	mov	x2, x19
  40e154:	add	x0, x8, #0x1
  40e158:	bl	403c68 <memcpy@plt>
  40e15c:	mov	w0, wzr
  40e160:	ldp	x20, x19, [sp, #32]
  40e164:	ldp	x29, x30, [sp, #16]
  40e168:	add	sp, sp, #0x30
  40e16c:	ret
  40e170:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e174:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e178:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e17c:	add	x1, x1, #0x428
  40e180:	add	x2, x2, #0x36e
  40e184:	add	x4, x4, #0x702
  40e188:	mov	w3, #0x1c0                 	// #448
  40e18c:	bl	403a98 <log_assert_failed_realm@plt>
  40e190:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e194:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e198:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e19c:	add	x1, x1, #0x750
  40e1a0:	add	x2, x2, #0x36e
  40e1a4:	add	x4, x4, #0x702
  40e1a8:	mov	w3, #0x1c1                 	// #449
  40e1ac:	mov	w0, wzr
  40e1b0:	bl	403a98 <log_assert_failed_realm@plt>
  40e1b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e1b8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e1bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e1c0:	add	x1, x1, #0xdd8
  40e1c4:	add	x2, x2, #0xddf
  40e1c8:	add	x4, x4, #0xdf7
  40e1cc:	mov	w3, #0x14                  	// #20
  40e1d0:	mov	w0, wzr
  40e1d4:	bl	403a98 <log_assert_failed_realm@plt>
  40e1d8:	sub	sp, sp, #0x40
  40e1dc:	stp	x29, x30, [sp, #16]
  40e1e0:	stp	x22, x21, [sp, #32]
  40e1e4:	stp	x20, x19, [sp, #48]
  40e1e8:	add	x29, sp, #0x10
  40e1ec:	cbz	x0, 40e294 <ascii_strlower_n@plt+0x9e8c>
  40e1f0:	mov	x20, x1
  40e1f4:	cbz	x1, 40e2b4 <ascii_strlower_n@plt+0x9eac>
  40e1f8:	mov	x19, x2
  40e1fc:	cmp	x2, #0x3f
  40e200:	b.ls	40e20c <ascii_strlower_n@plt+0x9e04>  // b.plast
  40e204:	mov	w0, #0xfffffff9            	// #-7
  40e208:	b	40e280 <ascii_strlower_n@plt+0x9e78>
  40e20c:	mov	w21, w3
  40e210:	add	x1, x19, #0x1
  40e214:	add	x2, sp, #0x8
  40e218:	mov	x3, x4
  40e21c:	mov	x22, x0
  40e220:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e224:	tbnz	w0, #31, 40e280 <ascii_strlower_n@plt+0x9e78>
  40e228:	ldr	x8, [sp, #8]
  40e22c:	add	x9, x8, #0x1
  40e230:	str	x9, [sp, #8]
  40e234:	strb	w19, [x8]
  40e238:	ldrb	w8, [x22, #160]
  40e23c:	tbz	w8, #3, 40e26c <ascii_strlower_n@plt+0x9e64>
  40e240:	tbz	w21, #0, 40e26c <ascii_strlower_n@plt+0x9e64>
  40e244:	cbz	x19, 40e27c <ascii_strlower_n@plt+0x9e74>
  40e248:	mov	x21, xzr
  40e24c:	ldrb	w0, [x20, x21]
  40e250:	bl	4040d8 <ascii_tolower@plt>
  40e254:	ldr	x8, [sp, #8]
  40e258:	strb	w0, [x8, x21]
  40e25c:	add	x21, x21, #0x1
  40e260:	cmp	x19, x21
  40e264:	b.ne	40e24c <ascii_strlower_n@plt+0x9e44>  // b.any
  40e268:	b	40e27c <ascii_strlower_n@plt+0x9e74>
  40e26c:	ldr	x0, [sp, #8]
  40e270:	mov	x1, x20
  40e274:	mov	x2, x19
  40e278:	bl	403c68 <memcpy@plt>
  40e27c:	mov	w0, wzr
  40e280:	ldp	x20, x19, [sp, #48]
  40e284:	ldp	x22, x21, [sp, #32]
  40e288:	ldp	x29, x30, [sp, #16]
  40e28c:	add	sp, sp, #0x40
  40e290:	ret
  40e294:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e298:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e29c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e2a0:	add	x1, x1, #0x428
  40e2a4:	add	x2, x2, #0x36e
  40e2a8:	add	x4, x4, #0x75f
  40e2ac:	mov	w3, #0x1da                 	// #474
  40e2b0:	bl	403a98 <log_assert_failed_realm@plt>
  40e2b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e2b8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e2bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e2c0:	add	x1, x1, #0x7af
  40e2c4:	add	x2, x2, #0x36e
  40e2c8:	add	x4, x4, #0x75f
  40e2cc:	mov	w3, #0x1db                 	// #475
  40e2d0:	mov	w0, wzr
  40e2d4:	bl	403a98 <log_assert_failed_realm@plt>
  40e2d8:	sub	sp, sp, #0xc0
  40e2dc:	stp	x29, x30, [sp, #96]
  40e2e0:	add	x29, sp, #0x60
  40e2e4:	stp	x28, x27, [sp, #112]
  40e2e8:	stp	x26, x25, [sp, #128]
  40e2ec:	stp	x24, x23, [sp, #144]
  40e2f0:	stp	x22, x21, [sp, #160]
  40e2f4:	stp	x20, x19, [sp, #176]
  40e2f8:	stur	x1, [x29, #-16]
  40e2fc:	cbz	x0, 40e524 <ascii_strlower_n@plt+0xa11c>
  40e300:	cbz	x1, 40e544 <ascii_strlower_n@plt+0xa13c>
  40e304:	ldrb	w8, [x0, #160]
  40e308:	ldr	x19, [x0, #8]
  40e30c:	mov	x20, x0
  40e310:	mov	x0, x1
  40e314:	tst	w8, #0x4
  40e318:	mov	x21, x4
  40e31c:	mov	w23, w3
  40e320:	mov	w22, w2
  40e324:	cset	w24, eq  // eq = none
  40e328:	bl	4040e8 <dns_name_is_root@plt>
  40e32c:	tbz	w0, #0, 40e360 <ascii_strlower_n@plt+0x9f58>
  40e330:	add	x2, sp, #0x10
  40e334:	mov	w1, #0x1                   	// #1
  40e338:	mov	x0, x20
  40e33c:	mov	x3, xzr
  40e340:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e344:	tbnz	w0, #31, 40e498 <ascii_strlower_n@plt+0xa090>
  40e348:	ldr	x8, [sp, #16]
  40e34c:	strb	wzr, [x8]
  40e350:	mov	w25, wzr
  40e354:	cbz	x21, 40e500 <ascii_strlower_n@plt+0xa0f8>
  40e358:	str	x19, [x21]
  40e35c:	b	40e500 <ascii_strlower_n@plt+0xa0f8>
  40e360:	and	w27, w24, w22
  40e364:	add	x22, x20, #0x30
  40e368:	eor	w28, w23, #0x1
  40e36c:	add	x23, sp, #0x10
  40e370:	b	40e380 <ascii_strlower_n@plt+0x9f78>
  40e374:	ldur	x0, [x29, #-16]
  40e378:	bl	4040e8 <dns_name_is_root@plt>
  40e37c:	tbnz	w0, #0, 40e330 <ascii_strlower_n@plt+0x9f28>
  40e380:	ldur	x24, [x29, #-16]
  40e384:	str	xzr, [sp, #8]
  40e388:	cbz	w27, 40e3b8 <ascii_strlower_n@plt+0x9fb0>
  40e38c:	ldr	x0, [x22]
  40e390:	mov	x1, x24
  40e394:	bl	4040f8 <internal_hashmap_get@plt>
  40e398:	str	x0, [sp, #8]
  40e39c:	cbz	x0, 40e3b8 <ascii_strlower_n@plt+0x9fb0>
  40e3a0:	ldr	x8, [x20, #8]
  40e3a4:	mov	x26, x0
  40e3a8:	cmp	x8, x0
  40e3ac:	b.ls	40e568 <ascii_strlower_n@plt+0xa160>  // b.plast
  40e3b0:	lsr	x8, x26, #14
  40e3b4:	cbz	x8, 40e4b8 <ascii_strlower_n@plt+0xa0b0>
  40e3b8:	sub	x0, x29, #0x10
  40e3bc:	add	x1, sp, #0x10
  40e3c0:	mov	w2, #0x3f                  	// #63
  40e3c4:	mov	w3, wzr
  40e3c8:	bl	404108 <dns_label_unescape@plt>
  40e3cc:	mov	w25, w0
  40e3d0:	tbnz	w0, #31, 40e4f4 <ascii_strlower_n@plt+0xa0ec>
  40e3d4:	cmp	w25, #0x3f
  40e3d8:	b.hi	40e4a0 <ascii_strlower_n@plt+0xa098>  // b.pmore
  40e3dc:	mov	w26, w25
  40e3e0:	add	x1, x26, #0x1
  40e3e4:	sub	x2, x29, #0x8
  40e3e8:	add	x3, sp, #0x8
  40e3ec:	mov	x0, x20
  40e3f0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e3f4:	tbnz	w0, #31, 40e4f0 <ascii_strlower_n@plt+0xa0e8>
  40e3f8:	ldur	x8, [x29, #-8]
  40e3fc:	add	x9, x8, #0x1
  40e400:	stur	x9, [x29, #-8]
  40e404:	strb	w25, [x8]
  40e408:	ldrb	w8, [x20, #160]
  40e40c:	tst	w8, #0x8
  40e410:	cset	w8, eq  // eq = none
  40e414:	orr	w8, w8, w28
  40e418:	tbz	w8, #0, 40e430 <ascii_strlower_n@plt+0xa028>
  40e41c:	ldur	x0, [x29, #-8]
  40e420:	add	x1, sp, #0x10
  40e424:	mov	x2, x26
  40e428:	bl	403c68 <memcpy@plt>
  40e42c:	b	40e454 <ascii_strlower_n@plt+0xa04c>
  40e430:	cbz	w25, 40e454 <ascii_strlower_n@plt+0xa04c>
  40e434:	mov	x25, xzr
  40e438:	ldrb	w0, [x23, x25]
  40e43c:	bl	4040d8 <ascii_tolower@plt>
  40e440:	ldur	x8, [x29, #-8]
  40e444:	strb	w0, [x8, x25]
  40e448:	add	x25, x25, #0x1
  40e44c:	cmp	x26, x25
  40e450:	b.ne	40e438 <ascii_strlower_n@plt+0xa030>  // b.any
  40e454:	cbz	w27, 40e374 <ascii_strlower_n@plt+0x9f6c>
  40e458:	mov	x0, x24
  40e45c:	bl	403ae8 <strdup@plt>
  40e460:	mov	x24, x0
  40e464:	cbz	x0, 40e4a8 <ascii_strlower_n@plt+0xa0a0>
  40e468:	adrp	x1, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40e46c:	ldr	x1, [x1, #2672]
  40e470:	mov	x0, x22
  40e474:	bl	404118 <internal_hashmap_ensure_allocated@plt>
  40e478:	tbnz	w0, #31, 40e490 <ascii_strlower_n@plt+0xa088>
  40e47c:	ldr	x0, [x22]
  40e480:	ldr	x2, [sp, #8]
  40e484:	mov	x1, x24
  40e488:	bl	404128 <hashmap_put@plt>
  40e48c:	tbz	w0, #31, 40e374 <ascii_strlower_n@plt+0x9f6c>
  40e490:	mov	w25, w0
  40e494:	b	40e4ac <ascii_strlower_n@plt+0xa0a4>
  40e498:	mov	w25, w0
  40e49c:	b	40e500 <ascii_strlower_n@plt+0xa0f8>
  40e4a0:	mov	w25, #0xfffffff9            	// #-7
  40e4a4:	b	40e4f4 <ascii_strlower_n@plt+0xa0ec>
  40e4a8:	mov	w25, #0xfffffff4            	// #-12
  40e4ac:	mov	x0, x24
  40e4b0:	bl	4039d8 <free@plt>
  40e4b4:	b	40e4f4 <ascii_strlower_n@plt+0xa0ec>
  40e4b8:	sub	x2, x29, #0x8
  40e4bc:	mov	w1, #0x2                   	// #2
  40e4c0:	mov	x0, x20
  40e4c4:	mov	x3, xzr
  40e4c8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e4cc:	tbnz	w0, #31, 40e4f0 <ascii_strlower_n@plt+0xa0e8>
  40e4d0:	ldur	x8, [x29, #-8]
  40e4d4:	orr	w9, w26, #0xc000
  40e4d8:	rev	w9, w9
  40e4dc:	lsr	w9, w9, #16
  40e4e0:	strh	w9, [x8]
  40e4e4:	mov	w25, wzr
  40e4e8:	cbnz	x21, 40e358 <ascii_strlower_n@plt+0x9f50>
  40e4ec:	b	40e500 <ascii_strlower_n@plt+0xa0f8>
  40e4f0:	mov	w25, w0
  40e4f4:	mov	x0, x20
  40e4f8:	mov	x1, x19
  40e4fc:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40e500:	mov	w0, w25
  40e504:	ldp	x20, x19, [sp, #176]
  40e508:	ldp	x22, x21, [sp, #160]
  40e50c:	ldp	x24, x23, [sp, #144]
  40e510:	ldp	x26, x25, [sp, #128]
  40e514:	ldp	x28, x27, [sp, #112]
  40e518:	ldp	x29, x30, [sp, #96]
  40e51c:	add	sp, sp, #0xc0
  40e520:	ret
  40e524:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e528:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e52c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e530:	add	x1, x1, #0x428
  40e534:	add	x2, x2, #0x36e
  40e538:	add	x4, x4, #0x7b1
  40e53c:	mov	w3, #0x201                 	// #513
  40e540:	bl	403a98 <log_assert_failed_realm@plt>
  40e544:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  40e548:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e54c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e550:	add	x1, x1, #0x137
  40e554:	add	x2, x2, #0x36e
  40e558:	add	x4, x4, #0x7b1
  40e55c:	mov	w3, #0x202                 	// #514
  40e560:	mov	w0, wzr
  40e564:	bl	403a98 <log_assert_failed_realm@plt>
  40e568:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e56c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e570:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e574:	add	x1, x1, #0x7ff
  40e578:	add	x2, x2, #0x36e
  40e57c:	add	x4, x4, #0x7b1
  40e580:	mov	w3, #0x211                 	// #529
  40e584:	mov	w0, wzr
  40e588:	bl	403a98 <log_assert_failed_realm@plt>
  40e58c:	stp	x29, x30, [sp, #-80]!
  40e590:	str	x25, [sp, #16]
  40e594:	stp	x24, x23, [sp, #32]
  40e598:	stp	x22, x21, [sp, #48]
  40e59c:	stp	x20, x19, [sp, #64]
  40e5a0:	mov	x29, sp
  40e5a4:	cbz	x0, 40e67c <ascii_strlower_n@plt+0xa274>
  40e5a8:	mov	x23, x1
  40e5ac:	cbz	x1, 40e69c <ascii_strlower_n@plt+0xa294>
  40e5b0:	ldr	x19, [x0, #8]
  40e5b4:	mov	x20, x0
  40e5b8:	mov	x0, x23
  40e5bc:	mov	x21, x3
  40e5c0:	mov	w22, w2
  40e5c4:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  40e5c8:	mov	x1, x0
  40e5cc:	mov	w2, #0x1                   	// #1
  40e5d0:	mov	w3, #0x1                   	// #1
  40e5d4:	mov	x0, x20
  40e5d8:	mov	x4, xzr
  40e5dc:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40e5e0:	tbnz	w0, #31, 40e650 <ascii_strlower_n@plt+0xa248>
  40e5e4:	ldrh	w25, [x23, #6]
  40e5e8:	add	x2, x29, #0x18
  40e5ec:	mov	w1, #0x2                   	// #2
  40e5f0:	mov	x0, x20
  40e5f4:	mov	x3, xzr
  40e5f8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e5fc:	tbnz	w0, #31, 40e650 <ascii_strlower_n@plt+0xa248>
  40e600:	ldr	x8, [x29, #24]
  40e604:	rev16	w9, w25
  40e608:	add	x2, x29, #0x18
  40e60c:	mov	w1, #0x2                   	// #2
  40e610:	strh	w9, [x8]
  40e614:	ldrh	w23, [x23, #4]
  40e618:	mov	x0, x20
  40e61c:	mov	x3, xzr
  40e620:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e624:	tbnz	w0, #31, 40e650 <ascii_strlower_n@plt+0xa248>
  40e628:	lsl	w8, w22, #12
  40e62c:	ldr	x9, [x29, #24]
  40e630:	and	w8, w8, #0x8000
  40e634:	orr	w8, w23, w8
  40e638:	rev16	w8, w8
  40e63c:	mov	w24, wzr
  40e640:	strh	w8, [x9]
  40e644:	cbz	x21, 40e660 <ascii_strlower_n@plt+0xa258>
  40e648:	str	x19, [x21]
  40e64c:	b	40e660 <ascii_strlower_n@plt+0xa258>
  40e650:	mov	w24, w0
  40e654:	mov	x0, x20
  40e658:	mov	x1, x19
  40e65c:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40e660:	mov	w0, w24
  40e664:	ldp	x20, x19, [sp, #64]
  40e668:	ldp	x22, x21, [sp, #48]
  40e66c:	ldp	x24, x23, [sp, #32]
  40e670:	ldr	x25, [sp, #16]
  40e674:	ldp	x29, x30, [sp], #80
  40e678:	ret
  40e67c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e680:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e684:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e688:	add	x1, x1, #0x428
  40e68c:	add	x2, x2, #0x36e
  40e690:	add	x4, x4, #0x80b
  40e694:	mov	w3, #0x24d                 	// #589
  40e698:	bl	403a98 <log_assert_failed_realm@plt>
  40e69c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e6a0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e6a4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e6a8:	add	x1, x1, #0x86a
  40e6ac:	add	x2, x2, #0x36e
  40e6b0:	add	x4, x4, #0x80b
  40e6b4:	mov	w3, #0x24e                 	// #590
  40e6b8:	mov	w0, wzr
  40e6bc:	bl	403a98 <log_assert_failed_realm@plt>
  40e6c0:	stp	x29, x30, [sp, #-80]!
  40e6c4:	str	x25, [sp, #16]
  40e6c8:	stp	x24, x23, [sp, #32]
  40e6cc:	stp	x22, x21, [sp, #48]
  40e6d0:	stp	x20, x19, [sp, #64]
  40e6d4:	mov	x29, sp
  40e6d8:	cbz	x0, 40e928 <ascii_strlower_n@plt+0xa520>
  40e6dc:	and	w8, w1, #0xffff
  40e6e0:	mov	w25, w1
  40e6e4:	cmp	w8, #0x1ff
  40e6e8:	b.ls	40e948 <ascii_strlower_n@plt+0xa540>  // b.plast
  40e6ec:	mov	w23, w3
  40e6f0:	tbnz	w3, #31, 40e96c <ascii_strlower_n@plt+0xa564>
  40e6f4:	cmp	w23, #0x1, lsl #12
  40e6f8:	b.ge	40e990 <ascii_strlower_n@plt+0xa588>  // b.tcont
  40e6fc:	ldr	x8, [x0, #56]
  40e700:	mov	x19, x0
  40e704:	cmn	x8, #0x1
  40e708:	b.eq	40e714 <ascii_strlower_n@plt+0xa30c>  // b.none
  40e70c:	mov	w24, #0xfffffff0            	// #-16
  40e710:	b	40e890 <ascii_strlower_n@plt+0xa488>
  40e714:	ldr	x8, [x19, #64]
  40e718:	cmn	x8, #0x1
  40e71c:	b.ne	40e9b4 <ascii_strlower_n@plt+0xa5ac>  // b.any
  40e720:	ldr	x21, [x19, #8]
  40e724:	mov	w22, w2
  40e728:	add	x2, x29, #0x18
  40e72c:	mov	w1, #0x1                   	// #1
  40e730:	mov	x0, x19
  40e734:	mov	x3, xzr
  40e738:	mov	x20, x4
  40e73c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e740:	tbnz	w0, #31, 40e88c <ascii_strlower_n@plt+0xa484>
  40e744:	ldr	x8, [x29, #24]
  40e748:	add	x2, x29, #0x18
  40e74c:	mov	w1, #0x2                   	// #2
  40e750:	mov	x0, x19
  40e754:	mov	x3, xzr
  40e758:	strb	wzr, [x8]
  40e75c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e760:	tbnz	w0, #31, 40e878 <ascii_strlower_n@plt+0xa470>
  40e764:	ldr	x8, [x29, #24]
  40e768:	mov	w9, #0x2900                	// #10496
  40e76c:	add	x2, x29, #0x18
  40e770:	mov	w1, #0x2                   	// #2
  40e774:	mov	x0, x19
  40e778:	mov	x3, xzr
  40e77c:	strh	w9, [x8]
  40e780:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e784:	tbnz	w0, #31, 40e878 <ascii_strlower_n@plt+0xa470>
  40e788:	ldr	x8, [x29, #24]
  40e78c:	rev	w9, w25
  40e790:	lsr	w9, w9, #16
  40e794:	add	x2, x29, #0x18
  40e798:	mov	w1, #0x2                   	// #2
  40e79c:	mov	x0, x19
  40e7a0:	mov	x3, xzr
  40e7a4:	strh	w9, [x8]
  40e7a8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e7ac:	tbnz	w0, #31, 40e878 <ascii_strlower_n@plt+0xa470>
  40e7b0:	ldr	x8, [x29, #24]
  40e7b4:	lsl	w9, w23, #4
  40e7b8:	and	w9, w9, #0xff00
  40e7bc:	rev16	w9, w9
  40e7c0:	add	x2, x29, #0x18
  40e7c4:	mov	w1, #0x2                   	// #2
  40e7c8:	mov	x0, x19
  40e7cc:	mov	x3, xzr
  40e7d0:	strh	w9, [x8]
  40e7d4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e7d8:	tbnz	w0, #31, 40e878 <ascii_strlower_n@plt+0xa470>
  40e7dc:	tst	w22, #0x1
  40e7e0:	mov	w8, #0xffff8000            	// #-32768
  40e7e4:	ldr	x9, [x29, #24]
  40e7e8:	csel	w8, w8, wzr, ne  // ne = any
  40e7ec:	rev	w8, w8
  40e7f0:	lsr	w8, w8, #16
  40e7f4:	strh	w8, [x9]
  40e7f8:	tbz	w22, #0, 40e8ac <ascii_strlower_n@plt+0xa4a4>
  40e7fc:	ldr	x8, [x19, #40]
  40e800:	add	x9, x19, #0xa8
  40e804:	cmp	x8, #0x0
  40e808:	csel	x8, x9, x8, eq  // eq = none
  40e80c:	ldrb	w8, [x8, #2]
  40e810:	tbnz	w8, #7, 40e8ac <ascii_strlower_n@plt+0xa4a4>
  40e814:	add	x2, x29, #0x18
  40e818:	mov	w1, #0x2                   	// #2
  40e81c:	mov	x0, x19
  40e820:	mov	x3, xzr
  40e824:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e828:	tbnz	w0, #31, 40e878 <ascii_strlower_n@plt+0xa470>
  40e82c:	ldr	x8, [x29, #24]
  40e830:	mov	w9, #0x1600                	// #5632
  40e834:	add	x2, x29, #0x18
  40e838:	mov	w1, #0x16                  	// #22
  40e83c:	mov	x0, x19
  40e840:	mov	x3, xzr
  40e844:	strh	w9, [x8]
  40e848:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e84c:	tbnz	w0, #31, 40e8d8 <ascii_strlower_n@plt+0xa4d0>
  40e850:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40e854:	add	x9, x9, #0xa4c
  40e858:	ldr	x8, [x29, #24]
  40e85c:	ldur	x10, [x9, #14]
  40e860:	ldr	q0, [x9]
  40e864:	mov	w24, wzr
  40e868:	stur	x10, [x8, #14]
  40e86c:	str	q0, [x8]
  40e870:	tbz	w24, #31, 40e8e0 <ascii_strlower_n@plt+0xa4d8>
  40e874:	b	40e87c <ascii_strlower_n@plt+0xa474>
  40e878:	mov	w24, w0
  40e87c:	mov	x0, x19
  40e880:	mov	x1, x21
  40e884:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40e888:	b	40e890 <ascii_strlower_n@plt+0xa488>
  40e88c:	mov	w24, w0
  40e890:	mov	w0, w24
  40e894:	ldp	x20, x19, [sp, #64]
  40e898:	ldp	x22, x21, [sp, #48]
  40e89c:	ldp	x24, x23, [sp, #32]
  40e8a0:	ldr	x25, [sp, #16]
  40e8a4:	ldp	x29, x30, [sp], #80
  40e8a8:	ret
  40e8ac:	add	x2, x29, #0x18
  40e8b0:	mov	w1, #0x2                   	// #2
  40e8b4:	mov	x0, x19
  40e8b8:	mov	x3, xzr
  40e8bc:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40e8c0:	tbnz	w0, #31, 40e8d8 <ascii_strlower_n@plt+0xa4d0>
  40e8c4:	ldr	x8, [x29, #24]
  40e8c8:	mov	w24, wzr
  40e8cc:	strh	wzr, [x8]
  40e8d0:	tbz	w24, #31, 40e8e0 <ascii_strlower_n@plt+0xa4d8>
  40e8d4:	b	40e87c <ascii_strlower_n@plt+0xa474>
  40e8d8:	mov	w24, w0
  40e8dc:	tbnz	w24, #31, 40e87c <ascii_strlower_n@plt+0xa474>
  40e8e0:	ldr	x8, [x19, #40]
  40e8e4:	add	x9, x19, #0xa8
  40e8e8:	mov	w24, wzr
  40e8ec:	cmp	x8, #0x0
  40e8f0:	csel	x8, x9, x8, eq  // eq = none
  40e8f4:	ldrh	w9, [x8, #10]
  40e8f8:	rev	w9, w9
  40e8fc:	lsr	w9, w9, #16
  40e900:	add	w9, w9, #0x1
  40e904:	rev	w9, w9
  40e908:	lsr	w9, w9, #16
  40e90c:	strh	w9, [x8, #10]
  40e910:	ldr	x8, [x19, #8]
  40e914:	sub	x8, x8, x21
  40e918:	stp	x21, x8, [x19, #56]
  40e91c:	cbz	x20, 40e890 <ascii_strlower_n@plt+0xa488>
  40e920:	str	x21, [x20]
  40e924:	b	40e890 <ascii_strlower_n@plt+0xa488>
  40e928:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e92c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e930:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e934:	add	x1, x1, #0x428
  40e938:	add	x2, x2, #0x36e
  40e93c:	add	x4, x4, #0x86c
  40e940:	mov	w3, #0x2ba                 	// #698
  40e944:	bl	403a98 <log_assert_failed_realm@plt>
  40e948:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e94c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e950:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e954:	add	x1, x1, #0x8b3
  40e958:	add	x2, x2, #0x36e
  40e95c:	add	x4, x4, #0x86c
  40e960:	mov	w3, #0x2bc                 	// #700
  40e964:	mov	w0, wzr
  40e968:	bl	403a98 <log_assert_failed_realm@plt>
  40e96c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e970:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e974:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e978:	add	x1, x1, #0x8df
  40e97c:	add	x2, x2, #0x36e
  40e980:	add	x4, x4, #0x86c
  40e984:	mov	w3, #0x2bd                 	// #701
  40e988:	mov	w0, wzr
  40e98c:	bl	403a98 <log_assert_failed_realm@plt>
  40e990:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e994:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e998:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e99c:	add	x1, x1, #0x8ea
  40e9a0:	add	x2, x2, #0x36e
  40e9a4:	add	x4, x4, #0x86c
  40e9a8:	mov	w3, #0x2be                 	// #702
  40e9ac:	mov	w0, wzr
  40e9b0:	bl	403a98 <log_assert_failed_realm@plt>
  40e9b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e9b8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e9bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40e9c0:	add	x1, x1, #0x902
  40e9c4:	add	x2, x2, #0x36e
  40e9c8:	add	x4, x4, #0x86c
  40e9cc:	mov	w3, #0x2c3                 	// #707
  40e9d0:	mov	w0, wzr
  40e9d4:	bl	403a98 <log_assert_failed_realm@plt>
  40e9d8:	stp	x29, x30, [sp, #-48]!
  40e9dc:	str	x21, [sp, #16]
  40e9e0:	stp	x20, x19, [sp, #32]
  40e9e4:	mov	x29, sp
  40e9e8:	cbz	x0, 40ea98 <ascii_strlower_n@plt+0xa690>
  40e9ec:	mov	x20, x0
  40e9f0:	ldr	x1, [x20, #56]!
  40e9f4:	mov	x19, x0
  40e9f8:	ldr	x8, [x20, #8]
  40e9fc:	cmn	x1, #0x1
  40ea00:	b.eq	40ea74 <ascii_strlower_n@plt+0xa66c>  // b.none
  40ea04:	cmn	x8, #0x1
  40ea08:	b.eq	40eab8 <ascii_strlower_n@plt+0xa6b0>  // b.none
  40ea0c:	ldr	x9, [x19, #40]
  40ea10:	add	x21, x19, #0xa8
  40ea14:	cmp	x9, #0x0
  40ea18:	csel	x9, x21, x9, eq  // eq = none
  40ea1c:	ldrh	w9, [x9, #10]
  40ea20:	cbz	w9, 40eadc <ascii_strlower_n@plt+0xa6d4>
  40ea24:	ldr	x9, [x19, #8]
  40ea28:	add	x8, x8, x1
  40ea2c:	cmp	x8, x9
  40ea30:	b.ne	40ea84 <ascii_strlower_n@plt+0xa67c>  // b.any
  40ea34:	mov	x0, x19
  40ea38:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40ea3c:	ldr	x8, [x19, #40]
  40ea40:	mov	x10, #0xffffffffffffffff    	// #-1
  40ea44:	mov	w0, #0x1                   	// #1
  40ea48:	cmp	x8, #0x0
  40ea4c:	csel	x8, x21, x8, eq  // eq = none
  40ea50:	ldrh	w9, [x8, #10]
  40ea54:	rev	w9, w9
  40ea58:	lsr	w9, w9, #16
  40ea5c:	sub	w9, w9, #0x1
  40ea60:	rev	w9, w9
  40ea64:	lsr	w9, w9, #16
  40ea68:	strh	w9, [x8, #10]
  40ea6c:	stp	x10, x10, [x20]
  40ea70:	b	40ea88 <ascii_strlower_n@plt+0xa680>
  40ea74:	cmn	x8, #0x1
  40ea78:	b.ne	40eb00 <ascii_strlower_n@plt+0xa6f8>  // b.any
  40ea7c:	mov	w0, wzr
  40ea80:	b	40ea88 <ascii_strlower_n@plt+0xa680>
  40ea84:	mov	w0, #0xfffffff0            	// #-16
  40ea88:	ldp	x20, x19, [sp, #32]
  40ea8c:	ldr	x21, [sp, #16]
  40ea90:	ldp	x29, x30, [sp], #48
  40ea94:	ret
  40ea98:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40ea9c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eaa0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eaa4:	add	x1, x1, #0x428
  40eaa8:	add	x2, x2, #0x36e
  40eaac:	add	x4, x4, #0x91d
  40eab0:	mov	w3, #0x31b                 	// #795
  40eab4:	bl	403a98 <log_assert_failed_realm@plt>
  40eab8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eabc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eac0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eac4:	add	x1, x1, #0x946
  40eac8:	add	x2, x2, #0x36e
  40eacc:	add	x4, x4, #0x91d
  40ead0:	mov	w3, #0x322                 	// #802
  40ead4:	mov	w0, wzr
  40ead8:	bl	403a98 <log_assert_failed_realm@plt>
  40eadc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eae0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eae4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eae8:	add	x1, x1, #0x961
  40eaec:	add	x2, x2, #0x36e
  40eaf0:	add	x4, x4, #0x91d
  40eaf4:	mov	w3, #0x323                 	// #803
  40eaf8:	mov	w0, wzr
  40eafc:	bl	403a98 <log_assert_failed_realm@plt>
  40eb00:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eb04:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eb08:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40eb0c:	add	x1, x1, #0x902
  40eb10:	add	x2, x2, #0x36e
  40eb14:	add	x4, x4, #0x91d
  40eb18:	mov	w3, #0x31e                 	// #798
  40eb1c:	mov	w0, wzr
  40eb20:	bl	403a98 <log_assert_failed_realm@plt>
  40eb24:	sub	sp, sp, #0x70
  40eb28:	stp	x29, x30, [sp, #16]
  40eb2c:	str	x27, [sp, #32]
  40eb30:	stp	x26, x25, [sp, #48]
  40eb34:	stp	x24, x23, [sp, #64]
  40eb38:	stp	x22, x21, [sp, #80]
  40eb3c:	stp	x20, x19, [sp, #96]
  40eb40:	add	x29, sp, #0x10
  40eb44:	cbz	x0, 40f550 <ascii_strlower_n@plt+0xb148>
  40eb48:	mov	x23, x1
  40eb4c:	cbz	x1, 40f570 <ascii_strlower_n@plt+0xb168>
  40eb50:	ldr	x1, [x23, #8]
  40eb54:	ldr	x19, [x0, #8]
  40eb58:	mov	x22, x3
  40eb5c:	mov	x3, xzr
  40eb60:	mov	x21, x4
  40eb64:	mov	w25, w2
  40eb68:	mov	x20, x0
  40eb6c:	bl	40e58c <ascii_strlower_n@plt+0xa184>
  40eb70:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40eb74:	tbnz	w25, #4, 40eb80 <ascii_strlower_n@plt+0xa778>
  40eb78:	ldr	w25, [x23, #24]
  40eb7c:	b	40eb84 <ascii_strlower_n@plt+0xa77c>
  40eb80:	mov	w25, wzr
  40eb84:	add	x2, x29, #0x18
  40eb88:	mov	w1, #0x4                   	// #4
  40eb8c:	mov	x0, x20
  40eb90:	mov	x3, xzr
  40eb94:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40eb98:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40eb9c:	ldr	x8, [x29, #24]
  40eba0:	rev	w9, w25
  40eba4:	add	x2, x29, #0x18
  40eba8:	add	x3, sp, #0x8
  40ebac:	mov	w1, #0x2                   	// #2
  40ebb0:	mov	x0, x20
  40ebb4:	str	w9, [x8]
  40ebb8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ebbc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ebc0:	ldr	x8, [x29, #24]
  40ebc4:	strh	wzr, [x8]
  40ebc8:	ldrb	w8, [x23, #48]
  40ebcc:	ldr	x27, [x20, #8]
  40ebd0:	tbnz	w8, #0, 40ece4 <ascii_strlower_n@plt+0xa8dc>
  40ebd4:	ldr	x8, [x23, #8]
  40ebd8:	ldrh	w9, [x8, #6]
  40ebdc:	sub	w8, w9, #0x1
  40ebe0:	cmp	w8, #0x62
  40ebe4:	b.hi	40ec9c <ascii_strlower_n@plt+0xa894>  // b.pmore
  40ebe8:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ebec:	add	x9, x9, #0x8c0
  40ebf0:	adr	x10, 40ec00 <ascii_strlower_n@plt+0xa7f8>
  40ebf4:	ldrh	w11, [x9, x8, lsl #1]
  40ebf8:	add	x10, x10, x11, lsl #2
  40ebfc:	br	x10
  40ec00:	ldr	x1, [x23, #80]
  40ec04:	mov	w2, #0x1                   	// #1
  40ec08:	mov	x0, x20
  40ec0c:	mov	w3, wzr
  40ec10:	mov	x4, xzr
  40ec14:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40ec18:	b	40efa0 <ascii_strlower_n@plt+0xab98>
  40ec1c:	ldr	x26, [x23, #80]
  40ec20:	cbnz	x26, 40ec50 <ascii_strlower_n@plt+0xa848>
  40ec24:	add	x2, x29, #0x18
  40ec28:	mov	w1, #0x1                   	// #1
  40ec2c:	mov	x0, x20
  40ec30:	mov	x3, xzr
  40ec34:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ec38:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ec3c:	ldr	x8, [x29, #24]
  40ec40:	strb	wzr, [x8]
  40ec44:	b	40efa8 <ascii_strlower_n@plt+0xaba0>
  40ec48:	ldr	x26, [x26, #8]
  40ec4c:	cbz	x26, 40efa8 <ascii_strlower_n@plt+0xaba0>
  40ec50:	mov	x23, x26
  40ec54:	ldr	x25, [x23], #24
  40ec58:	cmp	x25, #0xff
  40ec5c:	b.hi	40f548 <ascii_strlower_n@plt+0xb140>  // b.pmore
  40ec60:	add	x1, x25, #0x1
  40ec64:	add	x2, x29, #0x18
  40ec68:	mov	x0, x20
  40ec6c:	mov	x3, xzr
  40ec70:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ec74:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ec78:	ldr	x8, [x29, #24]
  40ec7c:	strb	w25, [x8]
  40ec80:	cbz	x25, 40ec48 <ascii_strlower_n@plt+0xa840>
  40ec84:	ldr	x8, [x29, #24]
  40ec88:	mov	x1, x23
  40ec8c:	mov	x2, x25
  40ec90:	add	x0, x8, #0x1
  40ec94:	bl	403c68 <memcpy@plt>
  40ec98:	b	40ec48 <ascii_strlower_n@plt+0xa840>
  40ec9c:	cmp	w9, #0x101
  40eca0:	b.ne	40ece4 <ascii_strlower_n@plt+0xa8dc>  // b.any
  40eca4:	ldrb	w25, [x23, #80]
  40eca8:	add	x2, x29, #0x18
  40ecac:	mov	w1, #0x1                   	// #1
  40ecb0:	mov	x0, x20
  40ecb4:	mov	x3, xzr
  40ecb8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ecbc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ecc0:	ldr	x8, [x29, #24]
  40ecc4:	mov	x0, x20
  40ecc8:	mov	x2, xzr
  40eccc:	strb	w25, [x8]
  40ecd0:	ldr	x1, [x23, #88]
  40ecd4:	bl	40e01c <ascii_strlower_n@plt+0x9c14>
  40ecd8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ecdc:	ldp	x25, x23, [x23, #96]
  40ece0:	b	40ece8 <ascii_strlower_n@plt+0xa8e0>
  40ece4:	ldp	x25, x23, [x23, #80]
  40ece8:	add	x2, x29, #0x18
  40ecec:	mov	x0, x20
  40ecf0:	mov	x3, xzr
  40ecf4:	mov	x1, x23
  40ecf8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ecfc:	tbnz	w0, #31, 40efa0 <ascii_strlower_n@plt+0xab98>
  40ed00:	cbz	x23, 40ed18 <ascii_strlower_n@plt+0xa910>
  40ed04:	cbz	x25, 40f4f0 <ascii_strlower_n@plt+0xb0e8>
  40ed08:	ldr	x0, [x29, #24]
  40ed0c:	mov	x1, x25
  40ed10:	mov	x2, x23
  40ed14:	bl	403c68 <memcpy@plt>
  40ed18:	mov	w24, wzr
  40ed1c:	b	40efa4 <ascii_strlower_n@plt+0xab9c>
  40ed20:	ldrb	w25, [x23, #80]
  40ed24:	add	x2, x29, #0x18
  40ed28:	mov	w1, #0x1                   	// #1
  40ed2c:	mov	x0, x20
  40ed30:	mov	x3, xzr
  40ed34:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ed38:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ed3c:	ldr	x8, [x29, #24]
  40ed40:	add	x2, x29, #0x18
  40ed44:	mov	w1, #0x1                   	// #1
  40ed48:	mov	x0, x20
  40ed4c:	strb	w25, [x8]
  40ed50:	ldrb	w25, [x23, #81]
  40ed54:	mov	x3, xzr
  40ed58:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ed5c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ed60:	ldr	x8, [x29, #24]
  40ed64:	add	x2, x29, #0x18
  40ed68:	mov	w1, #0x1                   	// #1
  40ed6c:	mov	x0, x20
  40ed70:	strb	w25, [x8]
  40ed74:	ldrb	w25, [x23, #82]
  40ed78:	b	40f1f8 <ascii_strlower_n@plt+0xadf0>
  40ed7c:	ldrh	w25, [x23, #80]
  40ed80:	add	x2, x29, #0x18
  40ed84:	mov	w1, #0x2                   	// #2
  40ed88:	mov	x0, x20
  40ed8c:	mov	x3, xzr
  40ed90:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ed94:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ed98:	ldr	x8, [x29, #24]
  40ed9c:	rev16	w9, w25
  40eda0:	add	x2, x29, #0x18
  40eda4:	mov	w1, #0x1                   	// #1
  40eda8:	strh	w9, [x8]
  40edac:	ldrb	w25, [x23, #82]
  40edb0:	mov	x0, x20
  40edb4:	mov	x3, xzr
  40edb8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40edbc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40edc0:	ldr	x8, [x29, #24]
  40edc4:	add	x2, x29, #0x18
  40edc8:	mov	w1, #0x1                   	// #1
  40edcc:	mov	x0, x20
  40edd0:	strb	w25, [x8]
  40edd4:	ldrb	w25, [x23, #83]
  40edd8:	b	40f1f8 <ascii_strlower_n@plt+0xadf0>
  40eddc:	ldrh	w25, [x23, #80]
  40ede0:	add	x2, x29, #0x18
  40ede4:	mov	w1, #0x2                   	// #2
  40ede8:	mov	x0, x20
  40edec:	mov	x3, xzr
  40edf0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40edf4:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40edf8:	ldr	x8, [x29, #24]
  40edfc:	rev16	w9, w25
  40ee00:	strh	w9, [x8]
  40ee04:	ldr	x1, [x23, #88]
  40ee08:	b	40ec04 <ascii_strlower_n@plt+0xa7fc>
  40ee0c:	add	x2, x29, #0x18
  40ee10:	mov	w1, #0x10                  	// #16
  40ee14:	mov	x0, x20
  40ee18:	mov	x3, xzr
  40ee1c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ee20:	tbnz	w0, #31, 40efa0 <ascii_strlower_n@plt+0xab98>
  40ee24:	ldr	x8, [x29, #24]
  40ee28:	ldr	q0, [x23, #80]
  40ee2c:	mov	w24, wzr
  40ee30:	str	q0, [x8]
  40ee34:	b	40efa4 <ascii_strlower_n@plt+0xab9c>
  40ee38:	ldr	x1, [x23, #80]
  40ee3c:	mov	x0, x20
  40ee40:	mov	w2, wzr
  40ee44:	mov	w3, wzr
  40ee48:	mov	x4, xzr
  40ee4c:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40ee50:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ee54:	ldr	x1, [x23, #88]
  40ee58:	mov	x0, x20
  40ee5c:	bl	40f594 <ascii_strlower_n@plt+0xb18c>
  40ee60:	tbz	w0, #31, 40efa8 <ascii_strlower_n@plt+0xaba0>
  40ee64:	b	40f514 <ascii_strlower_n@plt+0xb10c>
  40ee68:	add	x2, x29, #0x18
  40ee6c:	mov	w1, #0x4                   	// #4
  40ee70:	mov	x0, x20
  40ee74:	mov	x3, xzr
  40ee78:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ee7c:	tbnz	w0, #31, 40efa0 <ascii_strlower_n@plt+0xab98>
  40ee80:	ldr	x8, [x29, #24]
  40ee84:	ldr	w9, [x23, #80]
  40ee88:	mov	w24, wzr
  40ee8c:	str	w9, [x8]
  40ee90:	b	40efa4 <ascii_strlower_n@plt+0xab9c>
  40ee94:	ldr	x1, [x23, #80]
  40ee98:	mov	w2, #0x1                   	// #1
  40ee9c:	mov	x0, x20
  40eea0:	mov	w3, wzr
  40eea4:	mov	x4, xzr
  40eea8:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40eeac:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40eeb0:	ldr	x1, [x23, #88]
  40eeb4:	mov	w2, #0x1                   	// #1
  40eeb8:	mov	x0, x20
  40eebc:	mov	w3, wzr
  40eec0:	mov	x4, xzr
  40eec4:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40eec8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40eecc:	ldr	w25, [x23, #96]
  40eed0:	add	x2, x29, #0x18
  40eed4:	mov	w1, #0x4                   	// #4
  40eed8:	mov	x0, x20
  40eedc:	mov	x3, xzr
  40eee0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40eee4:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40eee8:	ldr	x8, [x29, #24]
  40eeec:	rev	w9, w25
  40eef0:	add	x2, x29, #0x18
  40eef4:	mov	w1, #0x4                   	// #4
  40eef8:	str	w9, [x8]
  40eefc:	ldr	w25, [x23, #100]
  40ef00:	mov	x0, x20
  40ef04:	mov	x3, xzr
  40ef08:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ef0c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ef10:	ldr	x8, [x29, #24]
  40ef14:	rev	w9, w25
  40ef18:	add	x2, x29, #0x18
  40ef1c:	mov	w1, #0x4                   	// #4
  40ef20:	str	w9, [x8]
  40ef24:	ldr	w25, [x23, #104]
  40ef28:	mov	x0, x20
  40ef2c:	mov	x3, xzr
  40ef30:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ef34:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ef38:	ldr	x8, [x29, #24]
  40ef3c:	rev	w9, w25
  40ef40:	add	x2, x29, #0x18
  40ef44:	mov	w1, #0x4                   	// #4
  40ef48:	str	w9, [x8]
  40ef4c:	ldr	w25, [x23, #108]
  40ef50:	mov	x0, x20
  40ef54:	mov	x3, xzr
  40ef58:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40ef5c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ef60:	ldr	x8, [x29, #24]
  40ef64:	rev	w9, w25
  40ef68:	add	x2, x29, #0x18
  40ef6c:	mov	w1, #0x4                   	// #4
  40ef70:	str	w9, [x8]
  40ef74:	ldr	w23, [x23, #112]
  40ef78:	b	40f440 <ascii_strlower_n@plt+0xb038>
  40ef7c:	ldr	x1, [x23, #80]
  40ef80:	mov	x0, x20
  40ef84:	mov	x2, xzr
  40ef88:	bl	40e01c <ascii_strlower_n@plt+0x9c14>
  40ef8c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40ef90:	ldr	x1, [x23, #88]
  40ef94:	mov	x0, x20
  40ef98:	mov	x2, xzr
  40ef9c:	bl	40e01c <ascii_strlower_n@plt+0x9c14>
  40efa0:	mov	w24, w0
  40efa4:	tbnz	w24, #31, 40f518 <ascii_strlower_n@plt+0xb110>
  40efa8:	ldr	x23, [x20, #8]
  40efac:	ldr	x8, [sp, #8]
  40efb0:	sub	x9, x23, x8
  40efb4:	sub	x25, x9, #0x2
  40efb8:	lsr	x9, x25, #16
  40efbc:	cbz	x9, 40efc8 <ascii_strlower_n@plt+0xabc0>
  40efc0:	mov	w24, #0xffffffe4            	// #-28
  40efc4:	b	40f518 <ascii_strlower_n@plt+0xb110>
  40efc8:	add	x2, x29, #0x18
  40efcc:	mov	w1, #0x2                   	// #2
  40efd0:	mov	x0, x20
  40efd4:	mov	x3, xzr
  40efd8:	str	x8, [x20, #8]
  40efdc:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40efe0:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40efe4:	ldr	x8, [x29, #24]
  40efe8:	rev	w9, w25
  40efec:	lsr	w9, w9, #16
  40eff0:	strh	w9, [x8]
  40eff4:	str	x23, [x20, #8]
  40eff8:	cbz	x22, 40f000 <ascii_strlower_n@plt+0xabf8>
  40effc:	str	x19, [x22]
  40f000:	mov	w24, wzr
  40f004:	cbz	x21, 40f524 <ascii_strlower_n@plt+0xb11c>
  40f008:	sub	x8, x27, x19
  40f00c:	str	x8, [x21]
  40f010:	b	40f524 <ascii_strlower_n@plt+0xb11c>
  40f014:	ldrh	w25, [x23, #80]
  40f018:	add	x2, x29, #0x18
  40f01c:	mov	w1, #0x2                   	// #2
  40f020:	mov	x0, x20
  40f024:	mov	x3, xzr
  40f028:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f02c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f030:	ldr	x8, [x29, #24]
  40f034:	rev16	w9, w25
  40f038:	add	x2, x29, #0x18
  40f03c:	mov	w1, #0x2                   	// #2
  40f040:	strh	w9, [x8]
  40f044:	ldrh	w25, [x23, #82]
  40f048:	mov	x0, x20
  40f04c:	mov	x3, xzr
  40f050:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f054:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f058:	ldr	x8, [x29, #24]
  40f05c:	rev16	w9, w25
  40f060:	add	x2, x29, #0x18
  40f064:	mov	w1, #0x2                   	// #2
  40f068:	strh	w9, [x8]
  40f06c:	ldrh	w25, [x23, #84]
  40f070:	mov	x0, x20
  40f074:	mov	x3, xzr
  40f078:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f07c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f080:	ldr	x8, [x29, #24]
  40f084:	rev16	w9, w25
  40f088:	mov	x0, x20
  40f08c:	mov	w2, wzr
  40f090:	strh	w9, [x8]
  40f094:	ldr	x1, [x23, #88]
  40f098:	b	40ec0c <ascii_strlower_n@plt+0xa804>
  40f09c:	ldrb	w25, [x23, #80]
  40f0a0:	add	x2, x29, #0x18
  40f0a4:	mov	w1, #0x1                   	// #1
  40f0a8:	mov	x0, x20
  40f0ac:	mov	x3, xzr
  40f0b0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f0b4:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f0b8:	ldr	x8, [x29, #24]
  40f0bc:	add	x2, x29, #0x18
  40f0c0:	mov	w1, #0x1                   	// #1
  40f0c4:	mov	x0, x20
  40f0c8:	strb	w25, [x8]
  40f0cc:	ldrb	w25, [x23, #81]
  40f0d0:	mov	x3, xzr
  40f0d4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f0d8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f0dc:	ldr	x8, [x29, #24]
  40f0e0:	add	x2, x29, #0x18
  40f0e4:	mov	w1, #0x2                   	// #2
  40f0e8:	mov	x0, x20
  40f0ec:	strb	w25, [x8]
  40f0f0:	ldrh	w25, [x23, #82]
  40f0f4:	mov	x3, xzr
  40f0f8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f0fc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f100:	ldr	x8, [x29, #24]
  40f104:	rev16	w9, w25
  40f108:	add	x2, x29, #0x18
  40f10c:	mov	w1, #0x1                   	// #1
  40f110:	strh	w9, [x8]
  40f114:	ldr	x25, [x23, #96]
  40f118:	mov	x0, x20
  40f11c:	mov	x3, xzr
  40f120:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f124:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f128:	ldr	x8, [x29, #24]
  40f12c:	add	x2, x29, #0x18
  40f130:	mov	x0, x20
  40f134:	mov	x3, xzr
  40f138:	strb	w25, [x8]
  40f13c:	ldp	x26, x25, [x23, #88]
  40f140:	mov	x1, x25
  40f144:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f148:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f14c:	cbz	x25, 40f164 <ascii_strlower_n@plt+0xad5c>
  40f150:	cbz	x26, 40f4f0 <ascii_strlower_n@plt+0xb0e8>
  40f154:	ldr	x0, [x29, #24]
  40f158:	mov	x1, x26
  40f15c:	mov	x2, x25
  40f160:	bl	403c68 <memcpy@plt>
  40f164:	ldr	x25, [x23, #112]
  40f168:	add	x2, x29, #0x18
  40f16c:	mov	w1, #0x1                   	// #1
  40f170:	mov	x0, x20
  40f174:	mov	x3, xzr
  40f178:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f17c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f180:	ldr	x8, [x29, #24]
  40f184:	add	x2, x29, #0x18
  40f188:	mov	x0, x20
  40f18c:	mov	x3, xzr
  40f190:	strb	w25, [x8]
  40f194:	ldp	x26, x25, [x23, #104]
  40f198:	mov	x1, x25
  40f19c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f1a0:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f1a4:	cbz	x25, 40f1bc <ascii_strlower_n@plt+0xadb4>
  40f1a8:	cbz	x26, 40f4f0 <ascii_strlower_n@plt+0xb0e8>
  40f1ac:	ldr	x0, [x29, #24]
  40f1b0:	mov	x1, x26
  40f1b4:	mov	x2, x25
  40f1b8:	bl	403c68 <memcpy@plt>
  40f1bc:	ldr	x1, [x23, #120]
  40f1c0:	b	40ee58 <ascii_strlower_n@plt+0xaa50>
  40f1c4:	ldrb	w25, [x23, #80]
  40f1c8:	add	x2, x29, #0x18
  40f1cc:	mov	w1, #0x1                   	// #1
  40f1d0:	mov	x0, x20
  40f1d4:	mov	x3, xzr
  40f1d8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f1dc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f1e0:	ldr	x8, [x29, #24]
  40f1e4:	add	x2, x29, #0x18
  40f1e8:	mov	w1, #0x1                   	// #1
  40f1ec:	mov	x0, x20
  40f1f0:	strb	w25, [x8]
  40f1f4:	ldrb	w25, [x23, #81]
  40f1f8:	mov	x3, xzr
  40f1fc:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f200:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f204:	ldr	x8, [x29, #24]
  40f208:	add	x2, x29, #0x18
  40f20c:	mov	x0, x20
  40f210:	mov	x3, xzr
  40f214:	strb	w25, [x8]
  40f218:	ldp	x25, x23, [x23, #88]
  40f21c:	b	40ecf4 <ascii_strlower_n@plt+0xa8ec>
  40f220:	ldrh	w25, [x23, #80]
  40f224:	add	x2, x29, #0x18
  40f228:	mov	w1, #0x2                   	// #2
  40f22c:	mov	x0, x20
  40f230:	mov	x3, xzr
  40f234:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f238:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f23c:	ldr	x8, [x29, #24]
  40f240:	rev16	w9, w25
  40f244:	add	x2, x29, #0x18
  40f248:	mov	w1, #0x1                   	// #1
  40f24c:	strh	w9, [x8]
  40f250:	ldrb	w25, [x23, #82]
  40f254:	mov	x0, x20
  40f258:	mov	x3, xzr
  40f25c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f260:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f264:	ldr	x8, [x29, #24]
  40f268:	add	x2, x29, #0x18
  40f26c:	mov	w1, #0x1                   	// #1
  40f270:	mov	x0, x20
  40f274:	strb	w25, [x8]
  40f278:	ldrb	w25, [x23, #83]
  40f27c:	mov	x3, xzr
  40f280:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f284:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f288:	ldr	x8, [x29, #24]
  40f28c:	add	x2, x29, #0x18
  40f290:	mov	w1, #0x4                   	// #4
  40f294:	mov	x0, x20
  40f298:	strb	w25, [x8]
  40f29c:	ldr	w25, [x23, #84]
  40f2a0:	mov	x3, xzr
  40f2a4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f2a8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f2ac:	ldr	x8, [x29, #24]
  40f2b0:	rev	w9, w25
  40f2b4:	add	x2, x29, #0x18
  40f2b8:	mov	w1, #0x4                   	// #4
  40f2bc:	str	w9, [x8]
  40f2c0:	ldr	w25, [x23, #88]
  40f2c4:	mov	x0, x20
  40f2c8:	mov	x3, xzr
  40f2cc:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f2d0:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f2d4:	ldr	x8, [x29, #24]
  40f2d8:	rev	w9, w25
  40f2dc:	add	x2, x29, #0x18
  40f2e0:	mov	w1, #0x4                   	// #4
  40f2e4:	str	w9, [x8]
  40f2e8:	ldr	w25, [x23, #92]
  40f2ec:	mov	x0, x20
  40f2f0:	mov	x3, xzr
  40f2f4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f2f8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f2fc:	ldr	x8, [x29, #24]
  40f300:	rev	w9, w25
  40f304:	add	x2, x29, #0x18
  40f308:	mov	w1, #0x2                   	// #2
  40f30c:	str	w9, [x8]
  40f310:	ldrh	w25, [x23, #96]
  40f314:	mov	x0, x20
  40f318:	mov	x3, xzr
  40f31c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f320:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f324:	ldr	x8, [x29, #24]
  40f328:	rev16	w9, w25
  40f32c:	mov	w3, #0x1                   	// #1
  40f330:	mov	x0, x20
  40f334:	strh	w9, [x8]
  40f338:	ldr	x1, [x23, #104]
  40f33c:	mov	w2, wzr
  40f340:	mov	x4, xzr
  40f344:	bl	40e2d8 <ascii_strlower_n@plt+0x9ed0>
  40f348:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f34c:	ldp	x25, x23, [x23, #112]
  40f350:	b	40ece8 <ascii_strlower_n@plt+0xa8e0>
  40f354:	ldrb	w25, [x23, #80]
  40f358:	add	x2, x29, #0x18
  40f35c:	mov	w1, #0x1                   	// #1
  40f360:	mov	x0, x20
  40f364:	mov	x3, xzr
  40f368:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f36c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f370:	ldr	x8, [x29, #24]
  40f374:	add	x2, x29, #0x18
  40f378:	mov	w1, #0x1                   	// #1
  40f37c:	mov	x0, x20
  40f380:	strb	w25, [x8]
  40f384:	ldrb	w25, [x23, #81]
  40f388:	mov	x3, xzr
  40f38c:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f390:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f394:	ldr	x8, [x29, #24]
  40f398:	add	x2, x29, #0x18
  40f39c:	mov	w1, #0x1                   	// #1
  40f3a0:	mov	x0, x20
  40f3a4:	strb	w25, [x8]
  40f3a8:	ldrb	w25, [x23, #82]
  40f3ac:	mov	x3, xzr
  40f3b0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f3b4:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f3b8:	ldr	x8, [x29, #24]
  40f3bc:	add	x2, x29, #0x18
  40f3c0:	mov	w1, #0x1                   	// #1
  40f3c4:	mov	x0, x20
  40f3c8:	strb	w25, [x8]
  40f3cc:	ldrb	w25, [x23, #83]
  40f3d0:	mov	x3, xzr
  40f3d4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f3d8:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f3dc:	ldr	x8, [x29, #24]
  40f3e0:	add	x2, x29, #0x18
  40f3e4:	mov	w1, #0x4                   	// #4
  40f3e8:	mov	x0, x20
  40f3ec:	strb	w25, [x8]
  40f3f0:	ldr	w25, [x23, #84]
  40f3f4:	mov	x3, xzr
  40f3f8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f3fc:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f400:	ldr	x8, [x29, #24]
  40f404:	rev	w9, w25
  40f408:	add	x2, x29, #0x18
  40f40c:	mov	w1, #0x4                   	// #4
  40f410:	str	w9, [x8]
  40f414:	ldr	w25, [x23, #88]
  40f418:	mov	x0, x20
  40f41c:	mov	x3, xzr
  40f420:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f424:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f428:	ldr	x8, [x29, #24]
  40f42c:	rev	w9, w25
  40f430:	add	x2, x29, #0x18
  40f434:	mov	w1, #0x4                   	// #4
  40f438:	str	w9, [x8]
  40f43c:	ldr	w23, [x23, #92]
  40f440:	mov	x0, x20
  40f444:	mov	x3, xzr
  40f448:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f44c:	tbnz	w0, #31, 40efa0 <ascii_strlower_n@plt+0xab98>
  40f450:	ldr	x8, [x29, #24]
  40f454:	rev	w9, w23
  40f458:	b	40ee88 <ascii_strlower_n@plt+0xaa80>
  40f45c:	ldrh	w25, [x23, #80]
  40f460:	add	x2, x29, #0x18
  40f464:	mov	w1, #0x2                   	// #2
  40f468:	mov	x0, x20
  40f46c:	mov	x3, xzr
  40f470:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f474:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f478:	ldr	x8, [x29, #24]
  40f47c:	rev16	w9, w25
  40f480:	add	x2, x29, #0x18
  40f484:	mov	w1, #0x1                   	// #1
  40f488:	strh	w9, [x8]
  40f48c:	ldrb	w25, [x23, #82]
  40f490:	mov	x0, x20
  40f494:	mov	x3, xzr
  40f498:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f49c:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f4a0:	ldr	x8, [x29, #24]
  40f4a4:	add	x2, x29, #0x18
  40f4a8:	mov	w1, #0x1                   	// #1
  40f4ac:	mov	x0, x20
  40f4b0:	strb	w25, [x8]
  40f4b4:	ldrb	w25, [x23, #83]
  40f4b8:	mov	x3, xzr
  40f4bc:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f4c0:	tbnz	w0, #31, 40f514 <ascii_strlower_n@plt+0xb10c>
  40f4c4:	ldr	x8, [x29, #24]
  40f4c8:	add	x2, x29, #0x18
  40f4cc:	mov	x0, x20
  40f4d0:	mov	x3, xzr
  40f4d4:	strb	w25, [x8]
  40f4d8:	ldp	x25, x23, [x23, #88]
  40f4dc:	mov	x1, x23
  40f4e0:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  40f4e4:	tbnz	w0, #31, 40efa0 <ascii_strlower_n@plt+0xab98>
  40f4e8:	cbz	x23, 40ed18 <ascii_strlower_n@plt+0xa910>
  40f4ec:	cbnz	x25, 40ed08 <ascii_strlower_n@plt+0xa900>
  40f4f0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f4f4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f4f8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f4fc:	add	x1, x1, #0xdd8
  40f500:	add	x2, x2, #0xddf
  40f504:	add	x4, x4, #0xdf7
  40f508:	mov	w3, #0x14                  	// #20
  40f50c:	mov	w0, wzr
  40f510:	bl	403a98 <log_assert_failed_realm@plt>
  40f514:	mov	w24, w0
  40f518:	mov	x0, x20
  40f51c:	mov	x1, x19
  40f520:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40f524:	mov	w0, w24
  40f528:	ldp	x20, x19, [sp, #96]
  40f52c:	ldp	x22, x21, [sp, #80]
  40f530:	ldp	x24, x23, [sp, #64]
  40f534:	ldp	x26, x25, [sp, #48]
  40f538:	ldr	x27, [sp, #32]
  40f53c:	ldp	x29, x30, [sp, #16]
  40f540:	add	sp, sp, #0x70
  40f544:	ret
  40f548:	mov	w24, #0xfffffff9            	// #-7
  40f54c:	b	40f518 <ascii_strlower_n@plt+0xb110>
  40f550:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f554:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f558:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f55c:	add	x1, x1, #0x428
  40f560:	add	x2, x2, #0x36e
  40f564:	add	x4, x4, #0x97b
  40f568:	mov	w3, #0x335                 	// #821
  40f56c:	bl	403a98 <log_assert_failed_realm@plt>
  40f570:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f574:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f578:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f57c:	add	x1, x1, #0x9e6
  40f580:	add	x2, x2, #0x36e
  40f584:	add	x4, x4, #0x97b
  40f588:	mov	w3, #0x336                 	// #822
  40f58c:	mov	w0, wzr
  40f590:	bl	403a98 <log_assert_failed_realm@plt>
  40f594:	sub	sp, sp, #0x80
  40f598:	movi	v0.2d, #0x0
  40f59c:	stp	x29, x30, [sp, #48]
  40f5a0:	str	x25, [sp, #64]
  40f5a4:	stp	x24, x23, [sp, #80]
  40f5a8:	stp	x22, x21, [sp, #96]
  40f5ac:	stp	x20, x19, [sp, #112]
  40f5b0:	add	x29, sp, #0x30
  40f5b4:	stp	q0, q0, [sp]
  40f5b8:	cbz	x0, 40f6f4 <ascii_strlower_n@plt+0xb2ec>
  40f5bc:	ldr	x20, [x0, #8]
  40f5c0:	mov	x21, x1
  40f5c4:	mov	x19, x0
  40f5c8:	sub	x1, x29, #0x10
  40f5cc:	add	x2, x29, #0x1c
  40f5d0:	mov	x0, x21
  40f5d4:	stur	wzr, [x29, #-16]
  40f5d8:	bl	404138 <bitmap_iterate@plt>
  40f5dc:	mov	w22, wzr
  40f5e0:	tbz	w0, #0, 40f6b0 <ascii_strlower_n@plt+0xb2a8>
  40f5e4:	mov	w1, wzr
  40f5e8:	mov	w25, wzr
  40f5ec:	mov	w23, #0x1                   	// #1
  40f5f0:	mov	x24, sp
  40f5f4:	b	40f63c <ascii_strlower_n@plt+0xb234>
  40f5f8:	ldr	w8, [x29, #28]
  40f5fc:	movi	v0.2d, #0x0
  40f600:	stp	q0, q0, [sp]
  40f604:	lsr	w22, w8, #8
  40f608:	ubfx	x25, x8, #3, #5
  40f60c:	ldrb	w9, [x24, x25]
  40f610:	mvn	w8, w8
  40f614:	and	w8, w8, #0x7
  40f618:	lsl	w8, w23, w8
  40f61c:	orr	w8, w9, w8
  40f620:	sub	x1, x29, #0x10
  40f624:	add	x2, x29, #0x1c
  40f628:	mov	x0, x21
  40f62c:	strb	w8, [x24, x25]
  40f630:	bl	404138 <bitmap_iterate@plt>
  40f634:	mov	w1, w22
  40f638:	tbz	w0, #0, 40f674 <ascii_strlower_n@plt+0xb26c>
  40f63c:	ldr	w8, [x29, #28]
  40f640:	cmp	w8, #0x10, lsl #12
  40f644:	b.cs	40f6d0 <ascii_strlower_n@plt+0xb2c8>  // b.hs, b.nlast
  40f648:	lsr	w22, w8, #8
  40f64c:	cmp	w22, w1, uxtb
  40f650:	b.eq	40f608 <ascii_strlower_n@plt+0xb200>  // b.none
  40f654:	ldrb	w9, [x24, w25, uxtw]
  40f658:	cbz	w9, 40f608 <ascii_strlower_n@plt+0xb200>
  40f65c:	add	w2, w25, #0x1
  40f660:	mov	x3, sp
  40f664:	mov	x0, x19
  40f668:	bl	411d5c <ascii_strlower_n@plt+0xd954>
  40f66c:	tbz	w0, #31, 40f5f8 <ascii_strlower_n@plt+0xb1f0>
  40f670:	b	40f6a0 <ascii_strlower_n@plt+0xb298>
  40f674:	mov	x8, sp
  40f678:	ldrb	w8, [x8, x25]
  40f67c:	cbz	w8, 40f698 <ascii_strlower_n@plt+0xb290>
  40f680:	add	w2, w25, #0x1
  40f684:	mov	x3, sp
  40f688:	mov	x0, x19
  40f68c:	mov	w1, w22
  40f690:	bl	411d5c <ascii_strlower_n@plt+0xd954>
  40f694:	tbnz	w0, #31, 40f6a0 <ascii_strlower_n@plt+0xb298>
  40f698:	mov	w22, wzr
  40f69c:	b	40f6b0 <ascii_strlower_n@plt+0xb2a8>
  40f6a0:	mov	w22, w0
  40f6a4:	mov	x0, x19
  40f6a8:	mov	x1, x20
  40f6ac:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  40f6b0:	mov	w0, w22
  40f6b4:	ldp	x20, x19, [sp, #112]
  40f6b8:	ldp	x22, x21, [sp, #96]
  40f6bc:	ldp	x24, x23, [sp, #80]
  40f6c0:	ldr	x25, [sp, #64]
  40f6c4:	ldp	x29, x30, [sp, #48]
  40f6c8:	add	sp, sp, #0x80
  40f6cc:	ret
  40f6d0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f6d4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f6d8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f6dc:	add	x1, x1, #0xe63
  40f6e0:	add	x2, x2, #0x36e
  40f6e4:	add	x4, x4, #0xe26
  40f6e8:	mov	w3, #0x296                 	// #662
  40f6ec:	mov	w0, wzr
  40f6f0:	bl	403a98 <log_assert_failed_realm@plt>
  40f6f4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f6f8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f6fc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f700:	add	x1, x1, #0x428
  40f704:	add	x2, x2, #0x36e
  40f708:	add	x4, x4, #0xe26
  40f70c:	mov	w3, #0x291                 	// #657
  40f710:	bl	403a98 <log_assert_failed_realm@plt>
  40f714:	stp	x29, x30, [sp, #-48]!
  40f718:	stp	x22, x21, [sp, #16]
  40f71c:	stp	x20, x19, [sp, #32]
  40f720:	mov	x29, sp
  40f724:	cbz	x0, 40f7b4 <ascii_strlower_n@plt+0xb3ac>
  40f728:	mov	x19, x1
  40f72c:	cbz	x1, 40f7a0 <ascii_strlower_n@plt+0xb398>
  40f730:	ldr	x8, [x19, #8]
  40f734:	mov	x20, x0
  40f738:	cbz	x8, 40f74c <ascii_strlower_n@plt+0xb344>
  40f73c:	ldr	x1, [x19, #24]
  40f740:	ldr	x8, [x19, #8]
  40f744:	cbnz	x8, 40f758 <ascii_strlower_n@plt+0xb350>
  40f748:	b	40f7a0 <ascii_strlower_n@plt+0xb398>
  40f74c:	mov	x1, xzr
  40f750:	ldr	x8, [x19, #8]
  40f754:	cbz	x8, 40f7a0 <ascii_strlower_n@plt+0xb398>
  40f758:	mov	x22, xzr
  40f75c:	add	x21, x19, #0x20
  40f760:	b	40f774 <ascii_strlower_n@plt+0xb36c>
  40f764:	ldr	x1, [x21, x22, lsl #3]
  40f768:	cmp	x8, x9
  40f76c:	mov	x22, x8
  40f770:	b.cs	40f7a0 <ascii_strlower_n@plt+0xb398>  // b.hs, b.nlast
  40f774:	mov	x0, x20
  40f778:	mov	w2, wzr
  40f77c:	mov	x3, xzr
  40f780:	bl	40e58c <ascii_strlower_n@plt+0xa184>
  40f784:	tbnz	w0, #31, 40f7a4 <ascii_strlower_n@plt+0xb39c>
  40f788:	ldr	x9, [x19, #8]
  40f78c:	add	x8, x22, #0x1
  40f790:	cmp	x8, x9
  40f794:	b.cc	40f764 <ascii_strlower_n@plt+0xb35c>  // b.lo, b.ul, b.last
  40f798:	mov	x1, xzr
  40f79c:	b	40f768 <ascii_strlower_n@plt+0xb360>
  40f7a0:	mov	w0, wzr
  40f7a4:	ldp	x20, x19, [sp, #32]
  40f7a8:	ldp	x22, x21, [sp, #16]
  40f7ac:	ldp	x29, x30, [sp], #48
  40f7b0:	ret
  40f7b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f7b8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f7bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f7c0:	add	x1, x1, #0x428
  40f7c4:	add	x2, x2, #0x36e
  40f7c8:	add	x4, x4, #0x9e9
  40f7cc:	mov	w3, #0x490                 	// #1168
  40f7d0:	bl	403a98 <log_assert_failed_realm@plt>
  40f7d4:	stp	x29, x30, [sp, #-48]!
  40f7d8:	stp	x22, x21, [sp, #16]
  40f7dc:	stp	x20, x19, [sp, #32]
  40f7e0:	mov	x29, sp
  40f7e4:	cbz	x0, 40f884 <ascii_strlower_n@plt+0xb47c>
  40f7e8:	mov	x19, x1
  40f7ec:	cbz	x1, 40f870 <ascii_strlower_n@plt+0xb468>
  40f7f0:	ldr	x8, [x19, #8]
  40f7f4:	mov	x20, x0
  40f7f8:	cbz	x8, 40f810 <ascii_strlower_n@plt+0xb408>
  40f7fc:	ldr	x1, [x19, #24]
  40f800:	ldr	w2, [x19, #36]
  40f804:	ldr	x8, [x19, #8]
  40f808:	cbnz	x8, 40f820 <ascii_strlower_n@plt+0xb418>
  40f80c:	b	40f870 <ascii_strlower_n@plt+0xb468>
  40f810:	mov	x1, xzr
  40f814:	mov	w2, wzr
  40f818:	ldr	x8, [x19, #8]
  40f81c:	cbz	x8, 40f870 <ascii_strlower_n@plt+0xb468>
  40f820:	mov	x21, xzr
  40f824:	add	x22, x19, #0x28
  40f828:	b	40f840 <ascii_strlower_n@plt+0xb438>
  40f82c:	ldr	x1, [x22]
  40f830:	ldr	w2, [x22, #12]
  40f834:	cmp	x21, x8
  40f838:	add	x22, x22, #0x10
  40f83c:	b.cs	40f870 <ascii_strlower_n@plt+0xb468>  // b.hs, b.nlast
  40f840:	mov	x0, x20
  40f844:	mov	x3, xzr
  40f848:	mov	x4, xzr
  40f84c:	bl	40eb24 <ascii_strlower_n@plt+0xa71c>
  40f850:	tbnz	w0, #31, 40f874 <ascii_strlower_n@plt+0xb46c>
  40f854:	ldr	x8, [x19, #8]
  40f858:	add	x21, x21, #0x1
  40f85c:	cmp	x21, x8
  40f860:	b.cc	40f82c <ascii_strlower_n@plt+0xb424>  // b.lo, b.ul, b.last
  40f864:	mov	x1, xzr
  40f868:	mov	w2, wzr
  40f86c:	b	40f834 <ascii_strlower_n@plt+0xb42c>
  40f870:	mov	w0, wzr
  40f874:	ldp	x20, x19, [sp, #32]
  40f878:	ldp	x22, x21, [sp, #16]
  40f87c:	ldp	x29, x30, [sp], #48
  40f880:	ret
  40f884:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f888:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f88c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f890:	add	x1, x1, #0x428
  40f894:	add	x2, x2, #0x36e
  40f898:	add	x4, x4, #0xa24
  40f89c:	mov	w3, #0x4a0                 	// #1184
  40f8a0:	bl	403a98 <log_assert_failed_realm@plt>
  40f8a4:	stp	x29, x30, [sp, #-16]!
  40f8a8:	mov	x29, sp
  40f8ac:	cbz	x0, 40f90c <ascii_strlower_n@plt+0xb504>
  40f8b0:	ldr	x8, [x0, #24]
  40f8b4:	ldr	x10, [x0, #8]
  40f8b8:	add	x9, x8, x1
  40f8bc:	cmp	x9, x10
  40f8c0:	b.ls	40f8cc <ascii_strlower_n@plt+0xb4c4>  // b.plast
  40f8c4:	mov	w8, #0xffffffa6            	// #-90
  40f8c8:	b	40f900 <ascii_strlower_n@plt+0xb4f8>
  40f8cc:	cbz	x2, 40f8e8 <ascii_strlower_n@plt+0xb4e0>
  40f8d0:	ldr	x10, [x0, #40]
  40f8d4:	add	x11, x0, #0xa8
  40f8d8:	cmp	x10, #0x0
  40f8dc:	csel	x10, x11, x10, eq  // eq = none
  40f8e0:	add	x10, x10, x8
  40f8e4:	str	x10, [x2]
  40f8e8:	cbz	x3, 40f8f8 <ascii_strlower_n@plt+0xb4f0>
  40f8ec:	str	x8, [x3]
  40f8f0:	ldr	x8, [x0, #24]
  40f8f4:	add	x9, x8, x1
  40f8f8:	mov	w8, wzr
  40f8fc:	str	x9, [x0, #24]
  40f900:	mov	w0, w8
  40f904:	ldp	x29, x30, [sp], #16
  40f908:	ret
  40f90c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f910:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f914:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f918:	add	x1, x1, #0x428
  40f91c:	add	x2, x2, #0x36e
  40f920:	add	x4, x4, #0xa5b
  40f924:	mov	w3, #0x4ac                 	// #1196
  40f928:	bl	403a98 <log_assert_failed_realm@plt>
  40f92c:	stp	x29, x30, [sp, #-16]!
  40f930:	mov	x29, sp
  40f934:	cbz	x0, 40f958 <ascii_strlower_n@plt+0xb550>
  40f938:	ldr	x8, [x0, #8]
  40f93c:	cmp	x8, x1
  40f940:	b.cc	40f978 <ascii_strlower_n@plt+0xb570>  // b.lo, b.ul, b.last
  40f944:	cmp	x1, #0xb
  40f948:	b.ls	40f99c <ascii_strlower_n@plt+0xb594>  // b.plast
  40f94c:	str	x1, [x0, #24]
  40f950:	ldp	x29, x30, [sp], #16
  40f954:	ret
  40f958:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f95c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f960:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f964:	add	x1, x1, #0x428
  40f968:	add	x2, x2, #0x36e
  40f96c:	add	x4, x4, #0xa9d
  40f970:	mov	w3, #0x4bc                 	// #1212
  40f974:	bl	403a98 <log_assert_failed_realm@plt>
  40f978:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f97c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f980:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f984:	add	x1, x1, #0xac9
  40f988:	add	x2, x2, #0x36e
  40f98c:	add	x4, x4, #0xa9d
  40f990:	mov	w3, #0x4bd                 	// #1213
  40f994:	mov	w0, wzr
  40f998:	bl	403a98 <log_assert_failed_realm@plt>
  40f99c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f9a0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f9a4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40f9a8:	add	x1, x1, #0xad8
  40f9ac:	add	x2, x2, #0x36e
  40f9b0:	add	x4, x4, #0xa9d
  40f9b4:	mov	w3, #0x4be                 	// #1214
  40f9b8:	mov	w0, wzr
  40f9bc:	bl	403a98 <log_assert_failed_realm@plt>
  40f9c0:	stp	x29, x30, [sp, #-16]!
  40f9c4:	mov	x29, sp
  40f9c8:	cbz	x0, 40fa30 <ascii_strlower_n@plt+0xb628>
  40f9cc:	cbz	x1, 40fa50 <ascii_strlower_n@plt+0xb648>
  40f9d0:	ldr	x10, [x0, #24]
  40f9d4:	ldr	x8, [x0, #8]
  40f9d8:	add	x9, x10, x2
  40f9dc:	cmp	x9, x8
  40f9e0:	b.ls	40f9f0 <ascii_strlower_n@plt+0xb5e8>  // b.plast
  40f9e4:	mov	w0, #0xffffffa6            	// #-90
  40f9e8:	ldp	x29, x30, [sp], #16
  40f9ec:	ret
  40f9f0:	ldr	x8, [x0, #40]
  40f9f4:	add	x11, x0, #0xa8
  40f9f8:	cmp	x8, #0x0
  40f9fc:	csel	x8, x11, x8, eq  // eq = none
  40fa00:	add	x8, x8, x10
  40fa04:	cbz	x3, 40fa14 <ascii_strlower_n@plt+0xb60c>
  40fa08:	str	x10, [x3]
  40fa0c:	ldr	x9, [x0, #24]
  40fa10:	add	x9, x9, x2
  40fa14:	str	x9, [x0, #24]
  40fa18:	mov	x0, x1
  40fa1c:	mov	x1, x8
  40fa20:	bl	403c68 <memcpy@plt>
  40fa24:	mov	w0, wzr
  40fa28:	ldp	x29, x30, [sp], #16
  40fa2c:	ret
  40fa30:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa34:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa38:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa3c:	add	x1, x1, #0x428
  40fa40:	add	x2, x2, #0x36e
  40fa44:	add	x4, x4, #0xaf6
  40fa48:	mov	w3, #0x4c7                 	// #1223
  40fa4c:	bl	403a98 <log_assert_failed_realm@plt>
  40fa50:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa54:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa58:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fa5c:	add	x1, x1, #0x7af
  40fa60:	add	x2, x2, #0x36e
  40fa64:	add	x4, x4, #0xaf6
  40fa68:	mov	w3, #0x4c8                 	// #1224
  40fa6c:	mov	w0, wzr
  40fa70:	bl	403a98 <log_assert_failed_realm@plt>
  40fa74:	stp	x29, x30, [sp, #-16]!
  40fa78:	mov	x29, sp
  40fa7c:	cbz	x0, 40fad8 <ascii_strlower_n@plt+0xb6d0>
  40fa80:	ldr	x9, [x0, #24]
  40fa84:	ldr	x8, [x0, #8]
  40fa88:	add	x10, x9, #0x1
  40fa8c:	cmp	x10, x8
  40fa90:	b.ls	40fa9c <ascii_strlower_n@plt+0xb694>  // b.plast
  40fa94:	mov	w8, #0xffffffa6            	// #-90
  40fa98:	b	40facc <ascii_strlower_n@plt+0xb6c4>
  40fa9c:	ldr	x8, [x0, #40]
  40faa0:	add	x11, x0, #0xa8
  40faa4:	cmp	x8, #0x0
  40faa8:	csel	x11, x11, x8, eq  // eq = none
  40faac:	cbz	x2, 40fabc <ascii_strlower_n@plt+0xb6b4>
  40fab0:	str	x9, [x2]
  40fab4:	ldr	x8, [x0, #24]
  40fab8:	add	x10, x8, #0x1
  40fabc:	str	x10, [x0, #24]
  40fac0:	ldrb	w9, [x11, x9]
  40fac4:	mov	w8, wzr
  40fac8:	strb	w9, [x1]
  40facc:	mov	w0, w8
  40fad0:	ldp	x29, x30, [sp], #16
  40fad4:	ret
  40fad8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fadc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fae0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fae4:	add	x1, x1, #0x428
  40fae8:	add	x2, x2, #0x36e
  40faec:	add	x4, x4, #0xb36
  40faf0:	mov	w3, #0x4fa                 	// #1274
  40faf4:	bl	403a98 <log_assert_failed_realm@plt>
  40faf8:	stp	x29, x30, [sp, #-16]!
  40fafc:	mov	x29, sp
  40fb00:	cbz	x0, 40fb64 <ascii_strlower_n@plt+0xb75c>
  40fb04:	ldr	x9, [x0, #24]
  40fb08:	ldr	x8, [x0, #8]
  40fb0c:	add	x10, x9, #0x2
  40fb10:	cmp	x10, x8
  40fb14:	b.ls	40fb20 <ascii_strlower_n@plt+0xb718>  // b.plast
  40fb18:	mov	w8, #0xffffffa6            	// #-90
  40fb1c:	b	40fb58 <ascii_strlower_n@plt+0xb750>
  40fb20:	ldr	x8, [x0, #40]
  40fb24:	add	x11, x0, #0xa8
  40fb28:	cmp	x8, #0x0
  40fb2c:	csel	x11, x11, x8, eq  // eq = none
  40fb30:	cbz	x2, 40fb40 <ascii_strlower_n@plt+0xb738>
  40fb34:	str	x9, [x2]
  40fb38:	ldr	x8, [x0, #24]
  40fb3c:	add	x10, x8, #0x2
  40fb40:	str	x10, [x0, #24]
  40fb44:	ldrh	w9, [x11, x9]
  40fb48:	mov	w8, wzr
  40fb4c:	rev	w9, w9
  40fb50:	lsr	w9, w9, #16
  40fb54:	strh	w9, [x1]
  40fb58:	mov	w0, w8
  40fb5c:	ldp	x29, x30, [sp], #16
  40fb60:	ret
  40fb64:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fb68:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fb6c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fb70:	add	x1, x1, #0x428
  40fb74:	add	x2, x2, #0x36e
  40fb78:	add	x4, x4, #0xb72
  40fb7c:	mov	w3, #0x508                 	// #1288
  40fb80:	bl	403a98 <log_assert_failed_realm@plt>
  40fb84:	stp	x29, x30, [sp, #-16]!
  40fb88:	mov	x29, sp
  40fb8c:	cbz	x0, 40fbec <ascii_strlower_n@plt+0xb7e4>
  40fb90:	ldr	x9, [x0, #24]
  40fb94:	ldr	x8, [x0, #8]
  40fb98:	add	x10, x9, #0x4
  40fb9c:	cmp	x10, x8
  40fba0:	b.ls	40fbac <ascii_strlower_n@plt+0xb7a4>  // b.plast
  40fba4:	mov	w8, #0xffffffa6            	// #-90
  40fba8:	b	40fbe0 <ascii_strlower_n@plt+0xb7d8>
  40fbac:	ldr	x8, [x0, #40]
  40fbb0:	add	x11, x0, #0xa8
  40fbb4:	cmp	x8, #0x0
  40fbb8:	csel	x11, x11, x8, eq  // eq = none
  40fbbc:	cbz	x2, 40fbcc <ascii_strlower_n@plt+0xb7c4>
  40fbc0:	str	x9, [x2]
  40fbc4:	ldr	x8, [x0, #24]
  40fbc8:	add	x10, x8, #0x4
  40fbcc:	str	x10, [x0, #24]
  40fbd0:	ldr	w9, [x11, x9]
  40fbd4:	mov	w8, wzr
  40fbd8:	rev	w9, w9
  40fbdc:	str	w9, [x1]
  40fbe0:	mov	w0, w8
  40fbe4:	ldp	x29, x30, [sp], #16
  40fbe8:	ret
  40fbec:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fbf0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fbf4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fbf8:	add	x1, x1, #0x428
  40fbfc:	add	x2, x2, #0x36e
  40fc00:	add	x4, x4, #0xbb0
  40fc04:	mov	w3, #0x517                 	// #1303
  40fc08:	bl	403a98 <log_assert_failed_realm@plt>
  40fc0c:	stp	x29, x30, [sp, #-80]!
  40fc10:	str	x25, [sp, #16]
  40fc14:	stp	x24, x23, [sp, #32]
  40fc18:	stp	x22, x21, [sp, #48]
  40fc1c:	stp	x20, x19, [sp, #64]
  40fc20:	mov	x29, sp
  40fc24:	cbz	x0, 40fd14 <ascii_strlower_n@plt+0xb90c>
  40fc28:	mov	x25, x0
  40fc2c:	ldr	x24, [x25, #24]!
  40fc30:	mov	x19, x0
  40fc34:	ldur	x9, [x25, #-16]
  40fc38:	add	x8, x24, #0x1
  40fc3c:	cmp	x8, x9
  40fc40:	b.hi	40fc68 <ascii_strlower_n@plt+0xb860>  // b.pmore
  40fc44:	ldr	x10, [x19, #40]
  40fc48:	add	x11, x19, #0xa8
  40fc4c:	str	x8, [x19, #24]
  40fc50:	cmp	x10, #0x0
  40fc54:	csel	x10, x11, x10, eq  // eq = none
  40fc58:	ldrb	w22, [x10, x24]
  40fc5c:	add	x11, x8, x22
  40fc60:	cmp	x11, x9
  40fc64:	b.ls	40fca4 <ascii_strlower_n@plt+0xb89c>  // b.plast
  40fc68:	mov	w8, #0xffffffa6            	// #-90
  40fc6c:	ldr	x9, [x19, #8]
  40fc70:	cmp	x9, x24
  40fc74:	b.cc	40fd34 <ascii_strlower_n@plt+0xb92c>  // b.lo, b.ul, b.last
  40fc78:	cmp	x24, #0xb
  40fc7c:	mov	x20, x25
  40fc80:	b.ls	40fd58 <ascii_strlower_n@plt+0xb950>  // b.plast
  40fc84:	mov	w0, w8
  40fc88:	str	x24, [x20]
  40fc8c:	ldp	x20, x19, [sp, #64]
  40fc90:	ldp	x22, x21, [sp, #48]
  40fc94:	ldp	x24, x23, [sp, #32]
  40fc98:	ldr	x25, [sp, #16]
  40fc9c:	ldp	x29, x30, [sp], #80
  40fca0:	ret
  40fca4:	add	x23, x10, x8
  40fca8:	mov	x20, x2
  40fcac:	mov	x21, x1
  40fcb0:	mov	x0, x23
  40fcb4:	mov	w1, wzr
  40fcb8:	mov	x2, x22
  40fcbc:	str	x11, [x25]
  40fcc0:	bl	404148 <memchr@plt>
  40fcc4:	cbz	x0, 40fcd0 <ascii_strlower_n@plt+0xb8c8>
  40fcc8:	mov	w8, #0xffffffb6            	// #-74
  40fccc:	b	40fc6c <ascii_strlower_n@plt+0xb864>
  40fcd0:	mov	x0, x23
  40fcd4:	mov	x1, x22
  40fcd8:	bl	403ac8 <strndup@plt>
  40fcdc:	cbz	x0, 40fd00 <ascii_strlower_n@plt+0xb8f8>
  40fce0:	mov	x22, x0
  40fce4:	bl	404158 <utf8_is_valid@plt>
  40fce8:	cbz	x0, 40fd08 <ascii_strlower_n@plt+0xb900>
  40fcec:	mov	w8, wzr
  40fcf0:	mov	w0, wzr
  40fcf4:	str	x22, [x21]
  40fcf8:	cbnz	x20, 40fc84 <ascii_strlower_n@plt+0xb87c>
  40fcfc:	b	40fc8c <ascii_strlower_n@plt+0xb884>
  40fd00:	mov	w8, #0xfffffff4            	// #-12
  40fd04:	b	40fc6c <ascii_strlower_n@plt+0xb864>
  40fd08:	mov	x0, x22
  40fd0c:	bl	4039d8 <free@plt>
  40fd10:	b	40fcc8 <ascii_strlower_n@plt+0xb8c0>
  40fd14:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd18:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd1c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd20:	add	x1, x1, #0x428
  40fd24:	add	x2, x2, #0x36e
  40fd28:	add	x4, x4, #0xbee
  40fd2c:	mov	w3, #0x529                 	// #1321
  40fd30:	bl	403a98 <log_assert_failed_realm@plt>
  40fd34:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd38:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd3c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd40:	add	x1, x1, #0xac9
  40fd44:	add	x2, x2, #0x36e
  40fd48:	add	x4, x4, #0xa9d
  40fd4c:	mov	w3, #0x4bd                 	// #1213
  40fd50:	mov	w0, wzr
  40fd54:	bl	403a98 <log_assert_failed_realm@plt>
  40fd58:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd5c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd60:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fd64:	add	x1, x1, #0xad8
  40fd68:	add	x2, x2, #0x36e
  40fd6c:	add	x4, x4, #0xa9d
  40fd70:	mov	w3, #0x4be                 	// #1214
  40fd74:	mov	w0, wzr
  40fd78:	bl	403a98 <log_assert_failed_realm@plt>
  40fd7c:	stp	x29, x30, [sp, #-16]!
  40fd80:	mov	x29, sp
  40fd84:	cbz	x0, 40fe14 <ascii_strlower_n@plt+0xba0c>
  40fd88:	mov	x9, x0
  40fd8c:	ldr	x8, [x9, #24]!
  40fd90:	ldur	x12, [x9, #-16]
  40fd94:	add	x10, x8, #0x1
  40fd98:	cmp	x10, x12
  40fd9c:	b.hi	40fdc4 <ascii_strlower_n@plt+0xb9bc>  // b.pmore
  40fda0:	ldr	x11, [x0, #40]
  40fda4:	add	x13, x0, #0xa8
  40fda8:	str	x10, [x0, #24]
  40fdac:	cmp	x11, #0x0
  40fdb0:	csel	x13, x13, x11, eq  // eq = none
  40fdb4:	ldrb	w11, [x13, x8]
  40fdb8:	add	x14, x10, x11
  40fdbc:	cmp	x14, x12
  40fdc0:	b.ls	40fdec <ascii_strlower_n@plt+0xb9e4>  // b.plast
  40fdc4:	cmp	x12, x8
  40fdc8:	b.cc	40fe34 <ascii_strlower_n@plt+0xba2c>  // b.lo, b.ul, b.last
  40fdcc:	cmp	x8, #0xb
  40fdd0:	b.ls	40fe58 <ascii_strlower_n@plt+0xba50>  // b.plast
  40fdd4:	mov	w10, #0xffffffa6            	// #-90
  40fdd8:	mov	x3, x9
  40fddc:	mov	w0, w10
  40fde0:	str	x8, [x3]
  40fde4:	ldp	x29, x30, [sp], #16
  40fde8:	ret
  40fdec:	cbz	x1, 40fdf8 <ascii_strlower_n@plt+0xb9f0>
  40fdf0:	add	x10, x13, x10
  40fdf4:	str	x10, [x1]
  40fdf8:	str	x14, [x9]
  40fdfc:	cbz	x2, 40fe04 <ascii_strlower_n@plt+0xb9fc>
  40fe00:	str	x11, [x2]
  40fe04:	mov	w10, wzr
  40fe08:	mov	w0, wzr
  40fe0c:	cbnz	x3, 40fddc <ascii_strlower_n@plt+0xb9d4>
  40fe10:	b	40fde4 <ascii_strlower_n@plt+0xb9dc>
  40fe14:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe18:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe1c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe20:	add	x1, x1, #0x428
  40fe24:	add	x2, x2, #0x36e
  40fe28:	add	x4, x4, #0xc29
  40fe2c:	mov	w3, #0x54e                 	// #1358
  40fe30:	bl	403a98 <log_assert_failed_realm@plt>
  40fe34:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe38:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe3c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe40:	add	x1, x1, #0xac9
  40fe44:	add	x2, x2, #0x36e
  40fe48:	add	x4, x4, #0xa9d
  40fe4c:	mov	w3, #0x4bd                 	// #1213
  40fe50:	mov	w0, wzr
  40fe54:	bl	403a98 <log_assert_failed_realm@plt>
  40fe58:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe5c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe60:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40fe64:	add	x1, x1, #0xad8
  40fe68:	add	x2, x2, #0x36e
  40fe6c:	add	x4, x4, #0xa9d
  40fe70:	mov	w3, #0x4be                 	// #1214
  40fe74:	mov	w0, wzr
  40fe78:	bl	403a98 <log_assert_failed_realm@plt>
  40fe7c:	sub	sp, sp, #0x90
  40fe80:	stp	x29, x30, [sp, #48]
  40fe84:	add	x29, sp, #0x30
  40fe88:	stp	x28, x27, [sp, #64]
  40fe8c:	stp	x26, x25, [sp, #80]
  40fe90:	stp	x24, x23, [sp, #96]
  40fe94:	stp	x22, x21, [sp, #112]
  40fe98:	stp	x20, x19, [sp, #128]
  40fe9c:	stp	xzr, xzr, [x29, #-16]
  40fea0:	cbz	x0, 4100b4 <ascii_strlower_n@plt+0xbcac>
  40fea4:	cbz	x1, 4100d4 <ascii_strlower_n@plt+0xbccc>
  40fea8:	ldrb	w9, [x0, #160]
  40feac:	ldr	x20, [x0, #24]
  40feb0:	ldr	x8, [x0, #8]
  40feb4:	mov	x19, x0
  40feb8:	tst	w9, #0x4
  40febc:	add	x21, x20, #0x1
  40fec0:	cset	w9, eq  // eq = none
  40fec4:	cmp	x21, x8
  40fec8:	b.ls	40ff18 <ascii_strlower_n@plt+0xbb10>  // b.plast
  40fecc:	mov	w22, #0xffffffa6            	// #-90
  40fed0:	ldur	x0, [x29, #-8]
  40fed4:	bl	4039d8 <free@plt>
  40fed8:	cbz	x19, 40fef4 <ascii_strlower_n@plt+0xbaec>
  40fedc:	ldr	x8, [x19, #8]
  40fee0:	cmp	x8, x20
  40fee4:	b.cc	4100f8 <ascii_strlower_n@plt+0xbcf0>  // b.lo, b.ul, b.last
  40fee8:	cmp	x20, #0xb
  40feec:	b.ls	41011c <ascii_strlower_n@plt+0xbd14>  // b.plast
  40fef0:	str	x20, [x19, #24]
  40fef4:	mov	w0, w22
  40fef8:	ldp	x20, x19, [sp, #128]
  40fefc:	ldp	x22, x21, [sp, #112]
  40ff00:	ldp	x24, x23, [sp, #96]
  40ff04:	ldp	x26, x25, [sp, #80]
  40ff08:	ldp	x28, x27, [sp, #64]
  40ff0c:	ldp	x29, x30, [sp, #48]
  40ff10:	add	sp, sp, #0x90
  40ff14:	ret
  40ff18:	and	w9, w9, w2
  40ff1c:	eor	w9, w9, #0x1
  40ff20:	mov	x24, xzr
  40ff24:	mov	x25, xzr
  40ff28:	add	x26, x19, #0xa8
  40ff2c:	mov	w27, #0x1                   	// #1
  40ff30:	stur	w9, [x29, #-20]
  40ff34:	mov	x9, x20
  40ff38:	mov	x23, x20
  40ff3c:	stp	x1, x3, [sp, #8]
  40ff40:	b	40ff68 <ascii_strlower_n@plt+0xbb60>
  40ff44:	cmp	x24, #0x0
  40ff48:	csel	x24, x9, x24, eq  // eq = none
  40ff4c:	mov	x23, x8
  40ff50:	str	x8, [x19, #24]
  40ff54:	ldr	x9, [x19, #24]
  40ff58:	ldr	x8, [x19, #8]
  40ff5c:	add	x21, x9, #0x1
  40ff60:	cmp	x21, x8
  40ff64:	b.hi	40fecc <ascii_strlower_n@plt+0xbac4>  // b.pmore
  40ff68:	ldr	x10, [x19, #40]
  40ff6c:	str	x21, [x19, #24]
  40ff70:	cmp	x10, #0x0
  40ff74:	csel	x28, x26, x10, eq  // eq = none
  40ff78:	ldrb	w22, [x28, x9]
  40ff7c:	cbz	x22, 410048 <ascii_strlower_n@plt+0xbc40>
  40ff80:	cmp	w22, #0x3f
  40ff84:	b.hi	410000 <ascii_strlower_n@plt+0xbbf8>  // b.pmore
  40ff88:	add	x9, x21, x22
  40ff8c:	cmp	x9, x8
  40ff90:	b.hi	40fecc <ascii_strlower_n@plt+0xbac4>  // b.pmore
  40ff94:	mvn	w8, w27
  40ff98:	and	x8, x8, #0x1
  40ff9c:	add	x8, x25, x8
  40ffa0:	add	x2, x8, #0xfd
  40ffa4:	sub	x0, x29, #0x8
  40ffa8:	sub	x1, x29, #0x10
  40ffac:	mov	w3, #0x1                   	// #1
  40ffb0:	str	x9, [x19, #24]
  40ffb4:	bl	404168 <greedy_realloc@plt>
  40ffb8:	cbz	x0, 410098 <ascii_strlower_n@plt+0xbc90>
  40ffbc:	add	x0, x28, x21
  40ffc0:	tbnz	w27, #0, 40ffd8 <ascii_strlower_n@plt+0xbbd0>
  40ffc4:	ldur	x8, [x29, #-8]
  40ffc8:	add	x9, x25, #0x1
  40ffcc:	mov	w10, #0x2e                  	// #46
  40ffd0:	strb	w10, [x8, x25]
  40ffd4:	mov	x25, x9
  40ffd8:	ldur	x8, [x29, #-8]
  40ffdc:	mov	w3, #0xfd                  	// #253
  40ffe0:	mov	x1, x22
  40ffe4:	add	x2, x8, x25
  40ffe8:	bl	404178 <dns_label_escape@plt>
  40ffec:	mov	w22, w0
  40fff0:	tbnz	w0, #31, 40fed0 <ascii_strlower_n@plt+0xbac8>
  40fff4:	mov	w27, wzr
  40fff8:	add	x25, x25, w22, uxtw
  40fffc:	b	40ff54 <ascii_strlower_n@plt+0xbb4c>
  410000:	ldur	w10, [x29, #-20]
  410004:	cmp	w22, #0xc0
  410008:	cset	w9, cc  // cc = lo, ul, last
  41000c:	orr	w9, w10, w9
  410010:	tbnz	w9, #0, 4100a0 <ascii_strlower_n@plt+0xbc98>
  410014:	add	x9, x21, #0x1
  410018:	cmp	x9, x8
  41001c:	b.hi	40fecc <ascii_strlower_n@plt+0xbac4>  // b.pmore
  410020:	str	x9, [x19, #24]
  410024:	ldrb	w8, [x28, x21]
  410028:	and	x10, x22, #0x3f
  41002c:	mov	w22, #0xffffffb6            	// #-74
  410030:	bfi	x8, x10, #8, #6
  410034:	cmp	x8, #0xc
  410038:	b.cc	40fed0 <ascii_strlower_n@plt+0xbac8>  // b.lo, b.ul, b.last
  41003c:	cmp	x8, x23
  410040:	b.cc	40ff44 <ascii_strlower_n@plt+0xbb3c>  // b.lo, b.ul, b.last
  410044:	b	40fed0 <ascii_strlower_n@plt+0xbac8>
  410048:	add	x2, x25, #0x1
  41004c:	sub	x0, x29, #0x8
  410050:	sub	x1, x29, #0x10
  410054:	mov	w3, #0x1                   	// #1
  410058:	bl	404168 <greedy_realloc@plt>
  41005c:	cbz	x0, 410098 <ascii_strlower_n@plt+0xbc90>
  410060:	ldur	x8, [x29, #-8]
  410064:	strb	wzr, [x8, x25]
  410068:	cbz	x24, 410070 <ascii_strlower_n@plt+0xbc68>
  41006c:	str	x24, [x19, #24]
  410070:	ldur	x8, [x29, #-8]
  410074:	ldr	x9, [sp, #8]
  410078:	stur	xzr, [x29, #-8]
  41007c:	str	x8, [x9]
  410080:	ldr	x8, [sp, #16]
  410084:	cbz	x8, 4100a8 <ascii_strlower_n@plt+0xbca0>
  410088:	mov	x19, xzr
  41008c:	mov	w22, wzr
  410090:	str	x20, [x8]
  410094:	b	40fed0 <ascii_strlower_n@plt+0xbac8>
  410098:	mov	w22, #0xfffffff4            	// #-12
  41009c:	b	40fed0 <ascii_strlower_n@plt+0xbac8>
  4100a0:	mov	w22, #0xffffffb6            	// #-74
  4100a4:	b	40fed0 <ascii_strlower_n@plt+0xbac8>
  4100a8:	mov	x19, xzr
  4100ac:	mov	w22, wzr
  4100b0:	b	40fed0 <ascii_strlower_n@plt+0xbac8>
  4100b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100b8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100bc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100c0:	add	x1, x1, #0x428
  4100c4:	add	x2, x2, #0x36e
  4100c8:	add	x4, x4, #0xc78
  4100cc:	mov	w3, #0x56f                 	// #1391
  4100d0:	bl	403a98 <log_assert_failed_realm@plt>
  4100d4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100d8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100dc:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100e0:	add	x1, x1, #0xcb8
  4100e4:	add	x2, x2, #0x36e
  4100e8:	add	x4, x4, #0xc78
  4100ec:	mov	w3, #0x570                 	// #1392
  4100f0:	mov	w0, wzr
  4100f4:	bl	403a98 <log_assert_failed_realm@plt>
  4100f8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4100fc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410100:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410104:	add	x1, x1, #0xac9
  410108:	add	x2, x2, #0x36e
  41010c:	add	x4, x4, #0xa9d
  410110:	mov	w3, #0x4bd                 	// #1213
  410114:	mov	w0, wzr
  410118:	bl	403a98 <log_assert_failed_realm@plt>
  41011c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410120:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410124:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410128:	add	x1, x1, #0xad8
  41012c:	add	x2, x2, #0x36e
  410130:	add	x4, x4, #0xa9d
  410134:	mov	w3, #0x4be                 	// #1214
  410138:	mov	w0, wzr
  41013c:	bl	403a98 <log_assert_failed_realm@plt>
  410140:	sub	sp, sp, #0x50
  410144:	stp	x29, x30, [sp, #16]
  410148:	stp	x24, x23, [sp, #32]
  41014c:	stp	x22, x21, [sp, #48]
  410150:	stp	x20, x19, [sp, #64]
  410154:	add	x29, sp, #0x10
  410158:	str	xzr, [sp, #8]
  41015c:	cbz	x0, 410298 <ascii_strlower_n@plt+0xbe90>
  410160:	mov	x22, x1
  410164:	cbz	x1, 4102b8 <ascii_strlower_n@plt+0xbeb0>
  410168:	ldr	x24, [x0, #24]
  41016c:	mov	x20, x3
  410170:	mov	x21, x2
  410174:	add	x1, sp, #0x8
  410178:	mov	w2, #0x1                   	// #1
  41017c:	mov	x3, xzr
  410180:	mov	x19, x0
  410184:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  410188:	tbnz	w0, #31, 4101c8 <ascii_strlower_n@plt+0xbdc0>
  41018c:	ldr	x9, [x19, #24]
  410190:	ldr	x11, [x19, #8]
  410194:	add	x8, x9, #0x2
  410198:	cmp	x8, x11
  41019c:	b.hi	4101c0 <ascii_strlower_n@plt+0xbdb8>  // b.pmore
  4101a0:	ldr	x10, [x19, #40]
  4101a4:	add	x13, x19, #0xa8
  4101a8:	add	x12, x9, #0x4
  4101ac:	str	x8, [x19, #24]
  4101b0:	cmp	x10, #0x0
  4101b4:	csel	x10, x13, x10, eq  // eq = none
  4101b8:	cmp	x12, x11
  4101bc:	b.ls	41020c <ascii_strlower_n@plt+0xbe04>  // b.plast
  4101c0:	mov	w23, #0xffffffa6            	// #-90
  4101c4:	b	4101cc <ascii_strlower_n@plt+0xbdc4>
  4101c8:	mov	w23, w0
  4101cc:	ldr	x0, [sp, #8]
  4101d0:	bl	4039d8 <free@plt>
  4101d4:	cbz	x19, 4101f0 <ascii_strlower_n@plt+0xbde8>
  4101d8:	ldr	x8, [x19, #8]
  4101dc:	cmp	x8, x24
  4101e0:	b.cc	4102dc <ascii_strlower_n@plt+0xbed4>  // b.lo, b.ul, b.last
  4101e4:	cmp	x24, #0xb
  4101e8:	b.ls	410300 <ascii_strlower_n@plt+0xbef8>  // b.plast
  4101ec:	str	x24, [x19, #24]
  4101f0:	mov	w0, w23
  4101f4:	ldp	x20, x19, [sp, #64]
  4101f8:	ldp	x22, x21, [sp, #48]
  4101fc:	ldp	x24, x23, [sp, #32]
  410200:	ldp	x29, x30, [sp, #16]
  410204:	add	sp, sp, #0x50
  410208:	ret
  41020c:	ldrh	w9, [x10, x9]
  410210:	str	x12, [x19, #24]
  410214:	ldr	w11, [x19, #4]
  410218:	ldrh	w8, [x10, x8]
  41021c:	mov	w12, #0x2900                	// #10496
  410220:	ldr	x2, [sp, #8]
  410224:	cmp	w11, #0x1
  410228:	rev	w8, w8
  41022c:	cset	w10, ne  // ne = any
  410230:	cmp	w9, w12
  410234:	asr	w11, w8, #16
  410238:	cset	w12, eq  // eq = none
  41023c:	cmp	w11, #0x0
  410240:	orr	w10, w12, w10
  410244:	cset	w11, ge  // ge = tcont
  410248:	orr	w23, w11, w10
  41024c:	rev16	w1, w9
  410250:	lsr	w9, w8, #16
  410254:	ubfx	w8, w8, #16, #15
  410258:	cmp	w23, #0x0
  41025c:	csel	w0, w9, w8, ne  // ne = any
  410260:	bl	412260 <ascii_strlower_n@plt+0xde58>
  410264:	cbz	x0, 410290 <ascii_strlower_n@plt+0xbe88>
  410268:	str	xzr, [sp, #8]
  41026c:	str	x0, [x22]
  410270:	cbz	x21, 41027c <ascii_strlower_n@plt+0xbe74>
  410274:	eor	w8, w23, #0x1
  410278:	strb	w8, [x21]
  41027c:	mov	x19, xzr
  410280:	mov	w23, wzr
  410284:	cbz	x20, 4101cc <ascii_strlower_n@plt+0xbdc4>
  410288:	str	x24, [x20]
  41028c:	b	4101cc <ascii_strlower_n@plt+0xbdc4>
  410290:	mov	w23, #0xfffffff4            	// #-12
  410294:	b	4101cc <ascii_strlower_n@plt+0xbdc4>
  410298:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41029c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102a0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102a4:	add	x1, x1, #0x428
  4102a8:	add	x2, x2, #0x36e
  4102ac:	add	x4, x4, #0xcbd
  4102b0:	mov	w3, #0x626                 	// #1574
  4102b4:	bl	403a98 <log_assert_failed_realm@plt>
  4102b8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4102bc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102c0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102c4:	add	x1, x1, #0xcb6
  4102c8:	add	x2, x2, #0x36e
  4102cc:	add	x4, x4, #0xcbd
  4102d0:	mov	w3, #0x627                 	// #1575
  4102d4:	mov	w0, wzr
  4102d8:	bl	403a98 <log_assert_failed_realm@plt>
  4102dc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102e0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102e4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4102e8:	add	x1, x1, #0xac9
  4102ec:	add	x2, x2, #0x36e
  4102f0:	add	x4, x4, #0xa9d
  4102f4:	mov	w3, #0x4bd                 	// #1213
  4102f8:	mov	w0, wzr
  4102fc:	bl	403a98 <log_assert_failed_realm@plt>
  410300:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410304:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  410308:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41030c:	add	x1, x1, #0xad8
  410310:	add	x2, x2, #0x36e
  410314:	add	x4, x4, #0xa9d
  410318:	mov	w3, #0x4be                 	// #1214
  41031c:	mov	w0, wzr
  410320:	bl	403a98 <log_assert_failed_realm@plt>
  410324:	sub	sp, sp, #0xc0
  410328:	stp	x29, x30, [sp, #96]
  41032c:	add	x29, sp, #0x60
  410330:	stp	x28, x27, [sp, #112]
  410334:	stp	x26, x25, [sp, #128]
  410338:	stp	x24, x23, [sp, #144]
  41033c:	stp	x22, x21, [sp, #160]
  410340:	stp	x20, x19, [sp, #176]
  410344:	stur	xzr, [x29, #-8]
  410348:	cbz	x0, 41107c <ascii_strlower_n@plt+0xcc74>
  41034c:	mov	x23, x1
  410350:	cbz	x1, 41109c <ascii_strlower_n@plt+0xcc94>
  410354:	mov	x27, x0
  410358:	ldr	x26, [x27, #24]!
  41035c:	mov	x21, x3
  410360:	mov	x22, x2
  410364:	sub	x1, x29, #0x8
  410368:	sub	x2, x29, #0xc
  41036c:	mov	x3, xzr
  410370:	mov	x19, x0
  410374:	bl	410140 <ascii_strlower_n@plt+0xbd38>
  410378:	tbnz	w0, #31, 410410 <ascii_strlower_n@plt+0xc008>
  41037c:	ldur	x8, [x29, #-8]
  410380:	ldrh	w0, [x8, #4]
  410384:	bl	418ff0 <ascii_strlower_n@plt+0x14be8>
  410388:	tbz	w0, #0, 410404 <ascii_strlower_n@plt+0xbffc>
  41038c:	ldur	x8, [x29, #-8]
  410390:	ldrh	w0, [x8, #6]
  410394:	bl	418fc8 <ascii_strlower_n@plt+0x14bc0>
  410398:	tbz	w0, #0, 410404 <ascii_strlower_n@plt+0xbffc>
  41039c:	ldur	x0, [x29, #-8]
  4103a0:	bl	413104 <ascii_strlower_n@plt+0xecfc>
  4103a4:	mov	x20, x0
  4103a8:	cbz	x0, 410898 <ascii_strlower_n@plt+0xc490>
  4103ac:	mov	x25, x19
  4103b0:	ldr	x28, [x25, #8]!
  4103b4:	ldr	x8, [x25, #16]
  4103b8:	add	x9, x8, #0x4
  4103bc:	cmp	x9, x28
  4103c0:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4103c4:	mov	x17, x19
  4103c8:	ldr	x10, [x17, #40]!
  4103cc:	add	x16, x17, #0x80
  4103d0:	cmp	x10, #0x0
  4103d4:	csel	x10, x16, x10, eq  // eq = none
  4103d8:	stur	x9, [x17, #-16]
  4103dc:	ldr	w8, [x10, x8]
  4103e0:	rev	w8, w8
  4103e4:	bic	w8, w8, w8, asr #31
  4103e8:	str	w8, [x20, #24]
  4103ec:	ldur	x9, [x17, #-16]
  4103f0:	add	x24, x9, #0x2
  4103f4:	cmp	x24, x28
  4103f8:	b.ls	41046c <ascii_strlower_n@plt+0xc064>  // b.plast
  4103fc:	mov	w24, #0xffffffa6            	// #-90
  410400:	b	410418 <ascii_strlower_n@plt+0xc010>
  410404:	mov	x20, xzr
  410408:	mov	w24, #0xffffffb6            	// #-74
  41040c:	b	410418 <ascii_strlower_n@plt+0xc010>
  410410:	mov	w24, w0
  410414:	mov	x20, xzr
  410418:	ldr	x8, [x19, #8]
  41041c:	cmp	x8, x26
  410420:	b.cc	4110c0 <ascii_strlower_n@plt+0xccb8>  // b.lo, b.ul, b.last
  410424:	cmp	x26, #0xb
  410428:	b.ls	4110e4 <ascii_strlower_n@plt+0xccdc>  // b.plast
  41042c:	str	x26, [x27]
  410430:	ldur	x0, [x29, #-8]
  410434:	cbz	x0, 41043c <ascii_strlower_n@plt+0xc034>
  410438:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  41043c:	cbz	x20, 410448 <ascii_strlower_n@plt+0xc040>
  410440:	mov	x0, x20
  410444:	bl	413398 <ascii_strlower_n@plt+0xef90>
  410448:	mov	w0, w24
  41044c:	ldp	x20, x19, [sp, #176]
  410450:	ldp	x22, x21, [sp, #160]
  410454:	ldp	x24, x23, [sp, #144]
  410458:	ldp	x26, x25, [sp, #128]
  41045c:	ldp	x28, x27, [sp, #112]
  410460:	ldp	x29, x30, [sp, #96]
  410464:	add	sp, sp, #0xc0
  410468:	ret
  41046c:	ldr	x8, [x17]
  410470:	str	x24, [x27]
  410474:	cmp	x8, #0x0
  410478:	csel	x8, x16, x8, eq  // eq = none
  41047c:	ldrh	w10, [x8, x9]
  410480:	rev16	w18, w10
  410484:	add	x15, x24, x18
  410488:	cmp	x15, x28
  41048c:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410490:	ldr	x11, [x20, #8]
  410494:	mov	x0, x15
  410498:	ldrh	w12, [x11, #6]
  41049c:	sub	w11, w12, #0x1
  4104a0:	cmp	w11, #0x62
  4104a4:	b.hi	410618 <ascii_strlower_n@plt+0xc210>  // b.pmore
  4104a8:	adrp	x12, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4104ac:	add	x12, x12, #0x986
  4104b0:	adr	x13, 4104c0 <ascii_strlower_n@plt+0xc0b8>
  4104b4:	ldrh	w14, [x12, x11, lsl #1]
  4104b8:	add	x13, x13, x14, lsl #2
  4104bc:	br	x13
  4104c0:	stur	x15, [x29, #-24]
  4104c4:	add	x1, x20, #0x50
  4104c8:	mov	w2, #0x1                   	// #1
  4104cc:	mov	x0, x19
  4104d0:	mov	x3, xzr
  4104d4:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  4104d8:	mov	w24, w0
  4104dc:	ldur	x15, [x29, #-24]
  4104e0:	tbnz	w24, #31, 410418 <ascii_strlower_n@plt+0xc010>
  4104e4:	ldr	x8, [x27]
  4104e8:	cmp	x8, x15
  4104ec:	b.ne	410408 <ascii_strlower_n@plt+0xc000>  // b.any
  4104f0:	str	x20, [x23]
  4104f4:	cbz	x22, 410500 <ascii_strlower_n@plt+0xc0f8>
  4104f8:	ldurb	w8, [x29, #-12]
  4104fc:	strb	w8, [x22]
  410500:	cbz	x21, 410508 <ascii_strlower_n@plt+0xc100>
  410504:	str	x26, [x21]
  410508:	mov	w24, wzr
  41050c:	mov	x20, xzr
  410510:	ldur	x0, [x29, #-8]
  410514:	cbnz	x0, 410438 <ascii_strlower_n@plt+0xc030>
  410518:	b	41043c <ascii_strlower_n@plt+0xc034>
  41051c:	cbz	w10, 410dc4 <ascii_strlower_n@plt+0xc9bc>
  410520:	cmp	x24, x15
  410524:	b.cs	4104e4 <ascii_strlower_n@plt+0xc0dc>  // b.hs, b.nlast
  410528:	mov	x25, xzr
  41052c:	add	x8, x20, #0x50
  410530:	str	x8, [sp, #8]
  410534:	stur	x15, [x29, #-24]
  410538:	stp	x17, x16, [sp, #16]
  41053c:	b	410554 <ascii_strlower_n@plt+0xc14c>
  410540:	ldr	x9, [sp, #32]
  410544:	str	x10, [x25, #16]
  410548:	cmp	x9, x15
  41054c:	str	x25, [x8]
  410550:	b.cs	4104e4 <ascii_strlower_n@plt+0xc0dc>  // b.hs, b.nlast
  410554:	cmp	x24, x28
  410558:	b.cs	410de0 <ascii_strlower_n@plt+0xc9d8>  // b.hs, b.nlast
  41055c:	ldr	x8, [x17]
  410560:	add	x10, x24, #0x1
  410564:	str	x10, [x27]
  410568:	stur	x10, [x29, #-40]
  41056c:	cmp	x8, #0x0
  410570:	csel	x8, x16, x8, eq  // eq = none
  410574:	ldrb	w9, [x8, x24]
  410578:	str	x8, [sp, #48]
  41057c:	add	x8, x10, x9
  410580:	cmp	x8, x28
  410584:	b.hi	410de0 <ascii_strlower_n@plt+0xc9d8>  // b.pmore
  410588:	add	x1, x9, #0x19
  41058c:	mov	w0, #0x1                   	// #1
  410590:	stp	x8, x25, [sp, #32]
  410594:	mov	x24, x8
  410598:	str	x8, [x27]
  41059c:	stur	x9, [x29, #-32]
  4105a0:	bl	404068 <calloc@plt>
  4105a4:	cbz	x0, 410898 <ascii_strlower_n@plt+0xc490>
  4105a8:	ldp	x8, x2, [x29, #-40]
  4105ac:	ldr	x9, [sp, #48]
  4105b0:	mov	x25, x0
  4105b4:	add	x0, x0, #0x18
  4105b8:	add	x1, x9, x8
  4105bc:	bl	403c68 <memcpy@plt>
  4105c0:	ldur	x8, [x29, #-32]
  4105c4:	ldr	x10, [sp, #40]
  4105c8:	str	x8, [x25]
  4105cc:	cbz	x10, 4105f0 <ascii_strlower_n@plt+0xc1e8>
  4105d0:	mov	x8, x10
  4105d4:	ldr	x9, [x8, #8]!
  4105d8:	ldur	x15, [x29, #-24]
  4105dc:	ldp	x17, x16, [sp, #16]
  4105e0:	str	x9, [x25, #8]
  4105e4:	cbz	x9, 410540 <ascii_strlower_n@plt+0xc138>
  4105e8:	str	x25, [x9, #16]
  4105ec:	b	410540 <ascii_strlower_n@plt+0xc138>
  4105f0:	ldp	x8, x17, [sp, #8]
  4105f4:	ldur	x15, [x29, #-24]
  4105f8:	ldp	x16, x9, [sp, #24]
  4105fc:	ldr	x8, [x8]
  410600:	str	x8, [x25, #8]
  410604:	cbz	x8, 41060c <ascii_strlower_n@plt+0xc204>
  410608:	str	x25, [x8, #16]
  41060c:	ldr	x8, [sp, #8]
  410610:	str	xzr, [x25, #16]
  410614:	b	410548 <ascii_strlower_n@plt+0xc140>
  410618:	cmp	w12, #0x101
  41061c:	b.ne	410858 <ascii_strlower_n@plt+0xc450>  // b.any
  410620:	add	x9, x9, #0x3
  410624:	cmp	x9, x28
  410628:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  41062c:	stp	x17, x16, [sp, #16]
  410630:	str	x9, [x19, #24]
  410634:	ldrb	w8, [x8, x24]
  410638:	stur	x0, [x29, #-32]
  41063c:	add	x1, x20, #0x58
  410640:	mov	x0, x19
  410644:	mov	x2, xzr
  410648:	mov	x28, x15
  41064c:	strb	w8, [x20, #80]
  410650:	bl	40fc0c <ascii_strlower_n@plt+0xb804>
  410654:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  410658:	ldr	x8, [x27]
  41065c:	subs	x24, x28, x8
  410660:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410664:	ldr	x9, [x25]
  410668:	mov	x10, x28
  41066c:	cmp	x28, x9
  410670:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410674:	ldr	x9, [sp, #16]
  410678:	ldur	x10, [x29, #-32]
  41067c:	ldr	x9, [x9]
  410680:	str	x10, [x27]
  410684:	cbz	x24, 410fa4 <ascii_strlower_n@plt+0xcb9c>
  410688:	ldr	x10, [sp, #24]
  41068c:	cmp	x9, #0x0
  410690:	mov	x1, x24
  410694:	csel	x9, x10, x9, eq  // eq = none
  410698:	add	x0, x9, x8
  41069c:	bl	404188 <memdup@plt>
  4106a0:	cbnz	x0, 410fa8 <ascii_strlower_n@plt+0xcba0>
  4106a4:	b	410898 <ascii_strlower_n@plt+0xc490>
  4106a8:	add	x9, x9, #0x6
  4106ac:	cmp	x9, x28
  4106b0:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4106b4:	str	x9, [x27]
  4106b8:	ldr	w8, [x8, x24]
  4106bc:	str	w8, [x20, #80]
  4106c0:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  4106c4:	add	x1, x20, #0x50
  4106c8:	mov	w2, #0x1                   	// #1
  4106cc:	mov	x0, x19
  4106d0:	mov	x3, xzr
  4106d4:	mov	x28, x17
  4106d8:	str	x16, [sp, #24]
  4106dc:	stur	x15, [x29, #-24]
  4106e0:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  4106e4:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  4106e8:	add	x1, x20, #0x58
  4106ec:	mov	w2, #0x1                   	// #1
  4106f0:	mov	x0, x19
  4106f4:	mov	x3, xzr
  4106f8:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  4106fc:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  410700:	ldr	x8, [x27]
  410704:	ldr	x9, [x25]
  410708:	add	x11, x8, #0x4
  41070c:	cmp	x11, x9
  410710:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410714:	ldr	x10, [x28]
  410718:	ldr	x12, [sp, #24]
  41071c:	str	x11, [x27]
  410720:	cmp	x10, #0x0
  410724:	csel	x10, x12, x10, eq  // eq = none
  410728:	ldr	w13, [x10, x8]
  41072c:	add	x12, x8, #0x8
  410730:	cmp	x12, x9
  410734:	rev	w13, w13
  410738:	str	w13, [x20, #96]
  41073c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410740:	str	x12, [x27]
  410744:	ldr	w13, [x10, x11]
  410748:	add	x11, x8, #0xc
  41074c:	cmp	x11, x9
  410750:	rev	w13, w13
  410754:	str	w13, [x20, #100]
  410758:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  41075c:	str	x11, [x27]
  410760:	ldr	w13, [x10, x12]
  410764:	add	x12, x8, #0x10
  410768:	cmp	x12, x9
  41076c:	rev	w13, w13
  410770:	str	w13, [x20, #104]
  410774:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410778:	str	x12, [x27]
  41077c:	ldr	w11, [x10, x11]
  410780:	add	x8, x8, #0x14
  410784:	cmp	x8, x9
  410788:	rev	w11, w11
  41078c:	str	w11, [x20, #108]
  410790:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410794:	str	x8, [x27]
  410798:	ldr	w8, [x10, x12]
  41079c:	ldur	x15, [x29, #-24]
  4107a0:	rev	w8, w8
  4107a4:	str	w8, [x20, #112]
  4107a8:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  4107ac:	add	x1, x20, #0x50
  4107b0:	mov	x0, x19
  4107b4:	mov	x2, xzr
  4107b8:	stur	x15, [x29, #-24]
  4107bc:	bl	40fc0c <ascii_strlower_n@plt+0xb804>
  4107c0:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  4107c4:	add	x1, x20, #0x58
  4107c8:	mov	x0, x19
  4107cc:	mov	x2, xzr
  4107d0:	bl	40fc0c <ascii_strlower_n@plt+0xb804>
  4107d4:	b	4104d8 <ascii_strlower_n@plt+0xc0d0>
  4107d8:	add	x9, x9, #0x4
  4107dc:	cmp	x9, x28
  4107e0:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4107e4:	str	x9, [x19, #24]
  4107e8:	ldrh	w8, [x8, x24]
  4107ec:	stur	x15, [x29, #-24]
  4107f0:	rev	w8, w8
  4107f4:	lsr	w8, w8, #16
  4107f8:	strh	w8, [x20, #80]
  4107fc:	add	x1, x20, #0x58
  410800:	b	4104c8 <ascii_strlower_n@plt+0xc0c0>
  410804:	add	x9, x9, #0x12
  410808:	cmp	x9, x28
  41080c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410810:	str	x9, [x27]
  410814:	ldr	q0, [x8, x24]
  410818:	str	q0, [x20, #80]
  41081c:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  410820:	add	x9, x9, #0x3
  410824:	cmp	x9, x28
  410828:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  41082c:	str	x9, [x27]
  410830:	ldrb	w8, [x8, x24]
  410834:	cbz	w8, 410e08 <ascii_strlower_n@plt+0xca00>
  410838:	cmp	x24, #0xb
  41083c:	b.ls	4110e4 <ascii_strlower_n@plt+0xccdc>  // b.plast
  410840:	str	x24, [x27]
  410844:	ldrb	w8, [x20, #48]
  410848:	orr	w8, w8, #0x1
  41084c:	strb	w8, [x20, #48]
  410850:	ldr	x24, [x27]
  410854:	add	x0, x24, x18
  410858:	ldr	x8, [x25]
  41085c:	cmp	x0, x8
  410860:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410864:	ldr	x8, [x17]
  410868:	str	x0, [x27]
  41086c:	cbz	w10, 410dfc <ascii_strlower_n@plt+0xc9f4>
  410870:	cmp	x8, #0x0
  410874:	csel	x8, x16, x8, eq  // eq = none
  410878:	add	x0, x8, x24
  41087c:	mov	x1, x18
  410880:	mov	x25, x18
  410884:	mov	x24, x15
  410888:	bl	404188 <memdup@plt>
  41088c:	mov	x18, x25
  410890:	mov	x15, x24
  410894:	cbnz	x0, 410e00 <ascii_strlower_n@plt+0xc9f8>
  410898:	mov	w24, #0xfffffff4            	// #-12
  41089c:	b	410418 <ascii_strlower_n@plt+0xc010>
  4108a0:	add	x10, x9, #0x4
  4108a4:	cmp	x10, x28
  4108a8:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4108ac:	str	x10, [x27]
  4108b0:	ldrh	w12, [x8, x24]
  4108b4:	add	x11, x9, #0x6
  4108b8:	cmp	x11, x28
  4108bc:	rev	w12, w12
  4108c0:	lsr	w12, w12, #16
  4108c4:	strh	w12, [x20, #80]
  4108c8:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4108cc:	str	x11, [x27]
  4108d0:	ldrh	w10, [x8, x10]
  4108d4:	add	x9, x9, #0x8
  4108d8:	cmp	x9, x28
  4108dc:	stur	x15, [x29, #-24]
  4108e0:	rev	w10, w10
  4108e4:	lsr	w10, w10, #16
  4108e8:	strh	w10, [x20, #82]
  4108ec:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4108f0:	str	x9, [x19, #24]
  4108f4:	ldrh	w8, [x8, x11]
  4108f8:	rev	w8, w8
  4108fc:	lsr	w8, w8, #16
  410900:	strh	w8, [x20, #84]
  410904:	b	4107fc <ascii_strlower_n@plt+0xc3f4>
  410908:	add	x10, x9, #0x4
  41090c:	cmp	x10, x28
  410910:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410914:	str	x10, [x27]
  410918:	ldrh	w11, [x8, x24]
  41091c:	add	x9, x9, #0x5
  410920:	cmp	x9, x28
  410924:	rev	w11, w11
  410928:	lsr	w11, w11, #16
  41092c:	strh	w11, [x20, #80]
  410930:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410934:	str	x9, [x27]
  410938:	ldrb	w8, [x8, x10]
  41093c:	strb	w8, [x20, #82]
  410940:	ldr	x8, [x27]
  410944:	ldr	x10, [x25]
  410948:	add	x9, x8, #0x1
  41094c:	cmp	x9, x10
  410950:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410954:	ldr	x10, [x17]
  410958:	str	x9, [x27]
  41095c:	cmp	x10, #0x0
  410960:	csel	x9, x16, x10, eq  // eq = none
  410964:	ldrb	w8, [x9, x8]
  410968:	and	w9, w18, #0xffff
  41096c:	cmp	w9, #0x4
  410970:	strb	w8, [x20, #83]
  410974:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410978:	ldr	x8, [x27]
  41097c:	ldr	x10, [x25]
  410980:	sub	x24, x18, #0x4
  410984:	mov	x13, x18
  410988:	add	x9, x8, x24
  41098c:	cmp	x9, x10
  410990:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410994:	ldr	x10, [x17]
  410998:	mov	x12, x17
  41099c:	str	x9, [x27]
  4109a0:	cbz	x24, 410fb4 <ascii_strlower_n@plt+0xcbac>
  4109a4:	cmp	x10, #0x0
  4109a8:	csel	x9, x16, x10, eq  // eq = none
  4109ac:	add	x0, x9, x8
  4109b0:	mov	x1, x24
  4109b4:	mov	x28, x15
  4109b8:	bl	404188 <memdup@plt>
  4109bc:	cbz	x0, 410898 <ascii_strlower_n@plt+0xc490>
  4109c0:	stp	x0, x24, [x20, #88]
  4109c4:	mov	x15, x28
  4109c8:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  4109cc:	add	x9, x9, #0x3
  4109d0:	cmp	x9, x28
  4109d4:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4109d8:	str	x9, [x27]
  4109dc:	ldrb	w8, [x8, x24]
  4109e0:	strb	w8, [x20, #80]
  4109e4:	ldr	x8, [x27]
  4109e8:	ldr	x10, [x25]
  4109ec:	add	x9, x8, #0x1
  4109f0:	cmp	x9, x10
  4109f4:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  4109f8:	ldr	x10, [x17]
  4109fc:	str	x9, [x27]
  410a00:	cmp	x10, #0x0
  410a04:	csel	x9, x16, x10, eq  // eq = none
  410a08:	ldrb	w8, [x9, x8]
  410a0c:	and	w9, w18, #0xffff
  410a10:	cmp	w9, #0x2
  410a14:	strb	w8, [x20, #81]
  410a18:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410a1c:	ldr	x8, [x27]
  410a20:	ldr	x10, [x25]
  410a24:	sub	x25, x18, #0x2
  410a28:	stur	x15, [x29, #-24]
  410a2c:	add	x9, x8, x25
  410a30:	cmp	x9, x10
  410a34:	b.hi	410db4 <ascii_strlower_n@plt+0xc9ac>  // b.pmore
  410a38:	ldr	x10, [x17]
  410a3c:	str	x9, [x27]
  410a40:	cbnz	x25, 410f74 <ascii_strlower_n@plt+0xcb6c>
  410a44:	mov	x0, xzr
  410a48:	b	410f8c <ascii_strlower_n@plt+0xcb84>
  410a4c:	add	x10, x9, #0x4
  410a50:	cmp	x10, x28
  410a54:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410a58:	str	x10, [x27]
  410a5c:	ldrh	w11, [x8, x24]
  410a60:	add	x9, x9, #0x5
  410a64:	cmp	x9, x28
  410a68:	rev	w11, w11
  410a6c:	lsr	w11, w11, #16
  410a70:	strh	w11, [x20, #80]
  410a74:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410a78:	str	x9, [x27]
  410a7c:	ldrb	w8, [x8, x10]
  410a80:	strb	w8, [x20, #82]
  410a84:	ldr	x8, [x27]
  410a88:	ldr	x10, [x25]
  410a8c:	add	x9, x8, #0x1
  410a90:	cmp	x9, x10
  410a94:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410a98:	stp	x0, x15, [x29, #-32]
  410a9c:	ldr	x10, [x17]
  410aa0:	str	x9, [x27]
  410aa4:	str	x16, [sp, #24]
  410aa8:	cmp	x10, #0x0
  410aac:	csel	x9, x16, x10, eq  // eq = none
  410ab0:	ldrb	w8, [x9, x8]
  410ab4:	strb	w8, [x20, #83]
  410ab8:	ldr	x8, [x27]
  410abc:	ldr	x9, [x25]
  410ac0:	add	x11, x8, #0x4
  410ac4:	cmp	x11, x9
  410ac8:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410acc:	ldr	x10, [x17]
  410ad0:	ldr	x12, [sp, #24]
  410ad4:	str	x11, [x27]
  410ad8:	mov	x28, x17
  410adc:	cmp	x10, #0x0
  410ae0:	csel	x10, x12, x10, eq  // eq = none
  410ae4:	ldr	w13, [x10, x8]
  410ae8:	add	x12, x8, #0x8
  410aec:	cmp	x12, x9
  410af0:	rev	w13, w13
  410af4:	str	w13, [x20, #84]
  410af8:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410afc:	str	x12, [x27]
  410b00:	ldr	w13, [x10, x11]
  410b04:	add	x11, x8, #0xc
  410b08:	cmp	x11, x9
  410b0c:	rev	w13, w13
  410b10:	str	w13, [x20, #88]
  410b14:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410b18:	str	x11, [x27]
  410b1c:	ldr	w12, [x10, x12]
  410b20:	add	x8, x8, #0xe
  410b24:	cmp	x8, x9
  410b28:	rev	w12, w12
  410b2c:	str	w12, [x20, #92]
  410b30:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410b34:	str	x8, [x19, #24]
  410b38:	ldrh	w8, [x10, x11]
  410b3c:	add	x1, x20, #0x68
  410b40:	mov	x0, x19
  410b44:	mov	w2, wzr
  410b48:	rev	w8, w8
  410b4c:	lsr	w8, w8, #16
  410b50:	mov	x3, xzr
  410b54:	strh	w8, [x20, #96]
  410b58:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  410b5c:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  410b60:	ldr	x8, [x27]
  410b64:	ldur	x9, [x29, #-24]
  410b68:	subs	x9, x9, x8
  410b6c:	stur	x9, [x29, #-40]
  410b70:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410b74:	ldr	x9, [x25]
  410b78:	ldur	x10, [x29, #-24]
  410b7c:	cmp	x10, x9
  410b80:	b.ls	411028 <ascii_strlower_n@plt+0xcc20>  // b.plast
  410b84:	mov	w24, #0xffffffa6            	// #-90
  410b88:	ldr	x8, [x20, #120]
  410b8c:	stur	x8, [x29, #-40]
  410b90:	b	411070 <ascii_strlower_n@plt+0xcc68>
  410b94:	ldr	w8, [x19, #4]
  410b98:	add	x1, x20, #0x50
  410b9c:	mov	x0, x19
  410ba0:	mov	x3, xzr
  410ba4:	cmp	w8, #0x1
  410ba8:	cset	w2, eq  // eq = none
  410bac:	stur	x15, [x29, #-24]
  410bb0:	bl	40fe7c <ascii_strlower_n@plt+0xba74>
  410bb4:	tbnz	w0, #31, 410dd8 <ascii_strlower_n@plt+0xc9d0>
  410bb8:	ldr	x8, [x19, #24]
  410bbc:	add	x1, x20, #0x58
  410bc0:	ldur	x9, [x29, #-24]
  410bc4:	mov	x0, x19
  410bc8:	sub	x2, x9, x8
  410bcc:	bl	411108 <ascii_strlower_n@plt+0xcd00>
  410bd0:	b	4104d8 <ascii_strlower_n@plt+0xc0d0>
  410bd4:	add	x10, x9, #0x4
  410bd8:	cmp	x10, x28
  410bdc:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410be0:	str	x10, [x27]
  410be4:	ldrh	w11, [x8, x24]
  410be8:	add	x9, x9, #0x5
  410bec:	cmp	x9, x28
  410bf0:	rev	w11, w11
  410bf4:	lsr	w11, w11, #16
  410bf8:	strh	w11, [x20, #80]
  410bfc:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410c00:	str	x9, [x27]
  410c04:	ldrb	w8, [x8, x10]
  410c08:	strb	w8, [x20, #82]
  410c0c:	ldr	x8, [x27]
  410c10:	ldr	x10, [x25]
  410c14:	add	x9, x8, #0x1
  410c18:	cmp	x9, x10
  410c1c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410c20:	ldr	x10, [x17]
  410c24:	str	x9, [x27]
  410c28:	stur	x15, [x29, #-24]
  410c2c:	cmp	x10, #0x0
  410c30:	csel	x9, x16, x10, eq  // eq = none
  410c34:	ldrb	w8, [x9, x8]
  410c38:	and	w9, w18, #0xffff
  410c3c:	cmp	w9, #0x4
  410c40:	strb	w8, [x20, #83]
  410c44:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410c48:	ldr	x8, [x27]
  410c4c:	ldr	x10, [x25]
  410c50:	sub	x25, x18, #0x4
  410c54:	b	410da4 <ascii_strlower_n@plt+0xc99c>
  410c58:	add	x9, x9, #0x3
  410c5c:	cmp	x9, x28
  410c60:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410c64:	str	x9, [x27]
  410c68:	ldrb	w8, [x8, x24]
  410c6c:	strb	w8, [x20, #80]
  410c70:	ldr	x8, [x27]
  410c74:	ldr	x10, [x25]
  410c78:	add	x9, x8, #0x1
  410c7c:	cmp	x9, x10
  410c80:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410c84:	ldr	x10, [x17]
  410c88:	str	x9, [x27]
  410c8c:	cmp	x10, #0x0
  410c90:	csel	x9, x16, x10, eq  // eq = none
  410c94:	ldrb	w8, [x9, x8]
  410c98:	strb	w8, [x20, #81]
  410c9c:	ldr	x11, [x27]
  410ca0:	ldr	x8, [x25]
  410ca4:	add	x10, x11, #0x2
  410ca8:	cmp	x10, x8
  410cac:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410cb0:	ldr	x9, [x17]
  410cb4:	str	x10, [x27]
  410cb8:	stur	x15, [x29, #-24]
  410cbc:	str	x17, [sp, #16]
  410cc0:	cmp	x9, #0x0
  410cc4:	csel	x9, x16, x9, eq  // eq = none
  410cc8:	ldrh	w12, [x9, x11]
  410ccc:	add	x11, x11, #0x3
  410cd0:	cmp	x11, x8
  410cd4:	rev	w12, w12
  410cd8:	lsr	w12, w12, #16
  410cdc:	strh	w12, [x20, #82]
  410ce0:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410ce4:	str	x11, [x27]
  410ce8:	ldrb	w24, [x9, x10]
  410cec:	add	x10, x11, x24
  410cf0:	cmp	x10, x8
  410cf4:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410cf8:	mov	x28, x16
  410cfc:	str	x10, [x27]
  410d00:	cbz	w24, 410fc0 <ascii_strlower_n@plt+0xcbb8>
  410d04:	add	x0, x9, x11
  410d08:	mov	x1, x24
  410d0c:	bl	404188 <memdup@plt>
  410d10:	cbnz	x0, 410fc4 <ascii_strlower_n@plt+0xcbbc>
  410d14:	b	410898 <ascii_strlower_n@plt+0xc490>
  410d18:	add	x9, x9, #0x3
  410d1c:	cmp	x9, x28
  410d20:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410d24:	str	x9, [x27]
  410d28:	ldrb	w8, [x8, x24]
  410d2c:	strb	w8, [x20, #80]
  410d30:	ldr	x8, [x27]
  410d34:	ldr	x10, [x25]
  410d38:	add	x9, x8, #0x1
  410d3c:	cmp	x9, x10
  410d40:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410d44:	ldr	x10, [x17]
  410d48:	str	x9, [x27]
  410d4c:	cmp	x10, #0x0
  410d50:	csel	x9, x16, x10, eq  // eq = none
  410d54:	ldrb	w8, [x9, x8]
  410d58:	strb	w8, [x20, #81]
  410d5c:	ldr	x8, [x27]
  410d60:	ldr	x10, [x25]
  410d64:	add	x9, x8, #0x1
  410d68:	cmp	x9, x10
  410d6c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410d70:	ldr	x10, [x17]
  410d74:	str	x9, [x27]
  410d78:	stur	x15, [x29, #-24]
  410d7c:	cmp	x10, #0x0
  410d80:	csel	x9, x16, x10, eq  // eq = none
  410d84:	ldrb	w8, [x9, x8]
  410d88:	and	w9, w18, #0xffff
  410d8c:	cmp	w9, #0x3
  410d90:	strb	w8, [x20, #82]
  410d94:	b.cc	410408 <ascii_strlower_n@plt+0xc000>  // b.lo, b.ul, b.last
  410d98:	ldr	x8, [x27]
  410d9c:	ldr	x10, [x25]
  410da0:	sub	x25, x18, #0x3
  410da4:	mov	x13, x18
  410da8:	add	x9, x8, x25
  410dac:	cmp	x9, x10
  410db0:	b.ls	410f64 <ascii_strlower_n@plt+0xcb5c>  // b.plast
  410db4:	mov	w24, #0xffffffa6            	// #-90
  410db8:	ldr	x25, [x20, #96]
  410dbc:	cbnz	x25, 4104dc <ascii_strlower_n@plt+0xc0d4>
  410dc0:	b	410408 <ascii_strlower_n@plt+0xc000>
  410dc4:	add	x0, x20, #0x50
  410dc8:	mov	x24, x15
  410dcc:	bl	415c44 <ascii_strlower_n@plt+0x1183c>
  410dd0:	mov	x15, x24
  410dd4:	tbz	w0, #31, 4104e4 <ascii_strlower_n@plt+0xc0dc>
  410dd8:	mov	w24, w0
  410ddc:	b	410418 <ascii_strlower_n@plt+0xc010>
  410de0:	cmp	x28, x24
  410de4:	b.cc	4110c0 <ascii_strlower_n@plt+0xccb8>  // b.lo, b.ul, b.last
  410de8:	cmp	x24, #0xb
  410dec:	b.ls	4110e4 <ascii_strlower_n@plt+0xccdc>  // b.plast
  410df0:	str	x24, [x27]
  410df4:	mov	w24, #0xffffffa6            	// #-90
  410df8:	b	410418 <ascii_strlower_n@plt+0xc010>
  410dfc:	mov	x0, xzr
  410e00:	stp	x0, x18, [x20, #80]
  410e04:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  410e08:	strb	wzr, [x20, #80]
  410e0c:	ldr	x8, [x27]
  410e10:	ldr	x10, [x25]
  410e14:	add	x9, x8, #0x1
  410e18:	cmp	x9, x10
  410e1c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410e20:	ldr	x10, [x17]
  410e24:	str	x9, [x27]
  410e28:	cmp	x10, #0x0
  410e2c:	csel	x9, x16, x10, eq  // eq = none
  410e30:	ldrb	w8, [x9, x8]
  410e34:	cmp	w8, #0x9f
  410e38:	strb	w8, [x20, #81]
  410e3c:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410e40:	and	w9, w8, #0xf
  410e44:	cmp	w9, #0x9
  410e48:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410e4c:	mov	x13, x17
  410e50:	mov	x12, x16
  410e54:	cmp	w8, #0xf
  410e58:	b.hi	410e60 <ascii_strlower_n@plt+0xca58>  // b.pmore
  410e5c:	cbnz	w9, 410408 <ascii_strlower_n@plt+0xc000>
  410e60:	ldr	x8, [x27]
  410e64:	ldr	x10, [x25]
  410e68:	add	x9, x8, #0x1
  410e6c:	cmp	x9, x10
  410e70:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410e74:	ldr	x10, [x13]
  410e78:	str	x9, [x27]
  410e7c:	cmp	x10, #0x0
  410e80:	csel	x9, x12, x10, eq  // eq = none
  410e84:	ldrb	w8, [x9, x8]
  410e88:	cmp	w8, #0x9f
  410e8c:	strb	w8, [x20, #82]
  410e90:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410e94:	and	w9, w8, #0xf
  410e98:	cmp	w9, #0x9
  410e9c:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410ea0:	cmp	w8, #0xf
  410ea4:	b.hi	410eac <ascii_strlower_n@plt+0xcaa4>  // b.pmore
  410ea8:	cbnz	w9, 410408 <ascii_strlower_n@plt+0xc000>
  410eac:	ldr	x8, [x27]
  410eb0:	ldr	x10, [x25]
  410eb4:	add	x9, x8, #0x1
  410eb8:	cmp	x9, x10
  410ebc:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410ec0:	ldr	x10, [x13]
  410ec4:	str	x9, [x27]
  410ec8:	cmp	x10, #0x0
  410ecc:	csel	x9, x12, x10, eq  // eq = none
  410ed0:	ldrb	w8, [x9, x8]
  410ed4:	cmp	w8, #0x9f
  410ed8:	strb	w8, [x20, #83]
  410edc:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410ee0:	and	w9, w8, #0xf
  410ee4:	cmp	w9, #0x9
  410ee8:	b.hi	410408 <ascii_strlower_n@plt+0xc000>  // b.pmore
  410eec:	cmp	w8, #0xf
  410ef0:	b.hi	410ef8 <ascii_strlower_n@plt+0xcaf0>  // b.pmore
  410ef4:	cbnz	w9, 410408 <ascii_strlower_n@plt+0xc000>
  410ef8:	ldr	x8, [x27]
  410efc:	ldr	x9, [x25]
  410f00:	add	x11, x8, #0x4
  410f04:	cmp	x11, x9
  410f08:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410f0c:	ldr	x10, [x13]
  410f10:	str	x11, [x27]
  410f14:	cmp	x10, #0x0
  410f18:	csel	x10, x12, x10, eq  // eq = none
  410f1c:	ldr	w13, [x10, x8]
  410f20:	add	x12, x8, #0x8
  410f24:	cmp	x12, x9
  410f28:	rev	w13, w13
  410f2c:	str	w13, [x20, #84]
  410f30:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410f34:	str	x12, [x27]
  410f38:	ldr	w11, [x10, x11]
  410f3c:	add	x8, x8, #0xc
  410f40:	cmp	x8, x9
  410f44:	rev	w11, w11
  410f48:	str	w11, [x20, #88]
  410f4c:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410f50:	str	x8, [x27]
  410f54:	ldr	w8, [x10, x12]
  410f58:	rev	w8, w8
  410f5c:	str	w8, [x20, #92]
  410f60:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  410f64:	ldr	x10, [x17]
  410f68:	mov	x12, x17
  410f6c:	str	x9, [x27]
  410f70:	cbz	x25, 410a44 <ascii_strlower_n@plt+0xc63c>
  410f74:	cmp	x10, #0x0
  410f78:	csel	x9, x16, x10, eq  // eq = none
  410f7c:	add	x0, x9, x8
  410f80:	mov	x1, x25
  410f84:	bl	404188 <memdup@plt>
  410f88:	cbz	x0, 410f9c <ascii_strlower_n@plt+0xcb94>
  410f8c:	mov	w24, wzr
  410f90:	stp	x0, x25, [x20, #88]
  410f94:	cbnz	x25, 4104dc <ascii_strlower_n@plt+0xc0d4>
  410f98:	b	410408 <ascii_strlower_n@plt+0xc000>
  410f9c:	mov	w24, #0xfffffff4            	// #-12
  410fa0:	b	410db8 <ascii_strlower_n@plt+0xc9b0>
  410fa4:	mov	x0, xzr
  410fa8:	stp	x0, x24, [x20, #96]
  410fac:	mov	x15, x28
  410fb0:	b	4104e4 <ascii_strlower_n@plt+0xc0dc>
  410fb4:	add	x8, x20, #0x58
  410fb8:	stp	xzr, xzr, [x8]
  410fbc:	b	410408 <ascii_strlower_n@plt+0xc000>
  410fc0:	mov	x0, xzr
  410fc4:	stp	x0, x24, [x20, #88]
  410fc8:	ldr	x10, [x27]
  410fcc:	ldr	x9, [x25]
  410fd0:	add	x8, x10, #0x1
  410fd4:	cmp	x8, x9
  410fd8:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  410fdc:	ldr	x11, [sp, #16]
  410fe0:	ldr	x11, [x11]
  410fe4:	str	x8, [x27]
  410fe8:	cmp	x11, #0x0
  410fec:	csel	x11, x28, x11, eq  // eq = none
  410ff0:	ldrb	w24, [x11, x10]
  410ff4:	cbz	x24, 410408 <ascii_strlower_n@plt+0xc000>
  410ff8:	add	x10, x8, x24
  410ffc:	cmp	x10, x9
  411000:	b.hi	4103fc <ascii_strlower_n@plt+0xbff4>  // b.pmore
  411004:	add	x0, x11, x8
  411008:	mov	x1, x24
  41100c:	str	x10, [x27]
  411010:	bl	404188 <memdup@plt>
  411014:	cbz	x0, 410898 <ascii_strlower_n@plt+0xc490>
  411018:	stp	x0, x24, [x20, #104]
  41101c:	ldr	x8, [x19, #24]
  411020:	add	x1, x20, #0x78
  411024:	b	410bc0 <ascii_strlower_n@plt+0xc7b8>
  411028:	ldur	x10, [x29, #-32]
  41102c:	ldr	x9, [x28]
  411030:	str	x10, [x27]
  411034:	ldur	x10, [x29, #-40]
  411038:	cbz	x10, 411060 <ascii_strlower_n@plt+0xcc58>
  41103c:	ldr	x10, [sp, #24]
  411040:	ldur	x1, [x29, #-40]
  411044:	cmp	x9, #0x0
  411048:	csel	x9, x10, x9, eq  // eq = none
  41104c:	add	x0, x9, x8
  411050:	bl	404188 <memdup@plt>
  411054:	cbnz	x0, 411064 <ascii_strlower_n@plt+0xcc5c>
  411058:	mov	w24, #0xfffffff4            	// #-12
  41105c:	b	410b88 <ascii_strlower_n@plt+0xc780>
  411060:	mov	x0, xzr
  411064:	ldur	x8, [x29, #-40]
  411068:	mov	w24, wzr
  41106c:	stp	x0, x8, [x20, #112]
  411070:	ldur	x8, [x29, #-40]
  411074:	cbnz	x8, 4104dc <ascii_strlower_n@plt+0xc0d4>
  411078:	b	410408 <ascii_strlower_n@plt+0xc000>
  41107c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411080:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411084:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411088:	add	x1, x1, #0x428
  41108c:	add	x2, x2, #0x36e
  411090:	add	x4, x4, #0xd08
  411094:	mov	w3, #0x65e                 	// #1630
  411098:	bl	403a98 <log_assert_failed_realm@plt>
  41109c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4110a0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110a4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110a8:	add	x1, x1, #0xcb6
  4110ac:	add	x2, x2, #0x36e
  4110b0:	add	x4, x4, #0xd08
  4110b4:	mov	w3, #0x65f                 	// #1631
  4110b8:	mov	w0, wzr
  4110bc:	bl	403a98 <log_assert_failed_realm@plt>
  4110c0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110c4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110c8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110cc:	add	x1, x1, #0xac9
  4110d0:	add	x2, x2, #0x36e
  4110d4:	add	x4, x4, #0xa9d
  4110d8:	mov	w3, #0x4bd                 	// #1213
  4110dc:	mov	w0, wzr
  4110e0:	bl	403a98 <log_assert_failed_realm@plt>
  4110e4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110e8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110ec:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4110f0:	add	x1, x1, #0xad8
  4110f4:	add	x2, x2, #0x36e
  4110f8:	add	x4, x4, #0xa9d
  4110fc:	mov	w3, #0x4be                 	// #1214
  411100:	mov	w0, wzr
  411104:	bl	403a98 <log_assert_failed_realm@plt>
  411108:	sub	sp, sp, #0x70
  41110c:	stp	x29, x30, [sp, #16]
  411110:	stp	x28, x27, [sp, #32]
  411114:	stp	x26, x25, [sp, #48]
  411118:	stp	x24, x23, [sp, #64]
  41111c:	stp	x22, x21, [sp, #80]
  411120:	stp	x20, x19, [sp, #96]
  411124:	ldr	x22, [x0, #24]
  411128:	mov	x20, x1
  41112c:	mov	x19, x0
  411130:	add	x24, x0, #0xa8
  411134:	add	x21, x22, x2
  411138:	mov	w26, #0x5                   	// #5
  41113c:	mov	x23, x22
  411140:	add	x29, sp, #0x10
  411144:	stp	x24, x21, [sp]
  411148:	cmp	x23, x21
  41114c:	b.cs	4113d8 <ascii_strlower_n@plt+0xcfd0>  // b.hs, b.nlast
  411150:	cbz	x20, 411438 <ascii_strlower_n@plt+0xd030>
  411154:	mov	x0, x20
  411158:	bl	404198 <bitmap_ensure_allocated@plt>
  41115c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411160:	ldr	x11, [x19, #24]
  411164:	ldr	x8, [x19, #8]
  411168:	add	x12, x11, #0x1
  41116c:	cmp	x12, x8
  411170:	b.hi	41137c <ascii_strlower_n@plt+0xcf74>  // b.pmore
  411174:	ldr	x10, [x19, #40]
  411178:	add	x9, x11, #0x2
  41117c:	str	x12, [x19, #24]
  411180:	cmp	x10, #0x0
  411184:	csel	x10, x24, x10, eq  // eq = none
  411188:	cmp	x9, x8
  41118c:	b.hi	41137c <ascii_strlower_n@plt+0xcf74>  // b.pmore
  411190:	ldrb	w11, [x10, x11]
  411194:	str	x9, [x19, #24]
  411198:	ldrb	w27, [x10, x12]
  41119c:	sub	w12, w27, #0x1
  4111a0:	and	w12, w12, #0xff
  4111a4:	cmp	w12, #0x1f
  4111a8:	b.hi	411384 <ascii_strlower_n@plt+0xcf7c>  // b.pmore
  4111ac:	add	x12, x9, x27
  4111b0:	cmp	x12, x8
  4111b4:	b.hi	41137c <ascii_strlower_n@plt+0xcf74>  // b.pmore
  4111b8:	mov	w28, wzr
  4111bc:	add	x25, x10, x9
  4111c0:	lsl	w24, w11, #8
  4111c4:	str	x12, [x19, #24]
  4111c8:	b	4111e0 <ascii_strlower_n@plt+0xcdd8>
  4111cc:	mov	w8, #0x1                   	// #1
  4111d0:	add	w28, w28, #0x8
  4111d4:	subs	x27, x27, #0x1
  4111d8:	add	x25, x25, #0x1
  4111dc:	b.eq	411364 <ascii_strlower_n@plt+0xcf5c>  // b.none
  4111e0:	ldrsb	w8, [x25]
  4111e4:	cbz	w8, 4111d0 <ascii_strlower_n@plt+0xcdc8>
  4111e8:	tbz	w8, #31, 411210 <ascii_strlower_n@plt+0xce08>
  4111ec:	and	w8, w28, #0xff
  4111f0:	orr	w21, w24, w8
  4111f4:	mov	w0, w21
  4111f8:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  4111fc:	tbnz	w0, #0, 411210 <ascii_strlower_n@plt+0xce08>
  411200:	ldr	x0, [x20]
  411204:	mov	w1, w21
  411208:	bl	4041a8 <bitmap_set@plt>
  41120c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411210:	ldrb	w8, [x25]
  411214:	tbz	w8, #6, 411240 <ascii_strlower_n@plt+0xce38>
  411218:	orr	w8, w28, #0x1
  41121c:	and	w8, w8, #0xff
  411220:	orr	w21, w24, w8
  411224:	mov	w0, w21
  411228:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  41122c:	tbnz	w0, #0, 411240 <ascii_strlower_n@plt+0xce38>
  411230:	ldr	x0, [x20]
  411234:	mov	w1, w21
  411238:	bl	4041a8 <bitmap_set@plt>
  41123c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411240:	ldrb	w8, [x25]
  411244:	tbz	w8, #5, 411270 <ascii_strlower_n@plt+0xce68>
  411248:	orr	w8, w28, #0x2
  41124c:	and	w8, w8, #0xff
  411250:	orr	w21, w24, w8
  411254:	mov	w0, w21
  411258:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  41125c:	tbnz	w0, #0, 411270 <ascii_strlower_n@plt+0xce68>
  411260:	ldr	x0, [x20]
  411264:	mov	w1, w21
  411268:	bl	4041a8 <bitmap_set@plt>
  41126c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411270:	ldrb	w8, [x25]
  411274:	tbz	w8, #4, 4112a0 <ascii_strlower_n@plt+0xce98>
  411278:	orr	w8, w28, #0x3
  41127c:	and	w8, w8, #0xff
  411280:	orr	w21, w24, w8
  411284:	mov	w0, w21
  411288:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  41128c:	tbnz	w0, #0, 4112a0 <ascii_strlower_n@plt+0xce98>
  411290:	ldr	x0, [x20]
  411294:	mov	w1, w21
  411298:	bl	4041a8 <bitmap_set@plt>
  41129c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  4112a0:	ldrb	w8, [x25]
  4112a4:	tbz	w8, #3, 4112d0 <ascii_strlower_n@plt+0xcec8>
  4112a8:	orr	w8, w28, #0x4
  4112ac:	and	w8, w8, #0xff
  4112b0:	orr	w21, w24, w8
  4112b4:	mov	w0, w21
  4112b8:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  4112bc:	tbnz	w0, #0, 4112d0 <ascii_strlower_n@plt+0xcec8>
  4112c0:	ldr	x0, [x20]
  4112c4:	mov	w1, w21
  4112c8:	bl	4041a8 <bitmap_set@plt>
  4112cc:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  4112d0:	ldrb	w8, [x25]
  4112d4:	tbz	w8, #2, 411300 <ascii_strlower_n@plt+0xcef8>
  4112d8:	orr	w8, w28, w26
  4112dc:	and	w8, w8, #0xff
  4112e0:	orr	w21, w24, w8
  4112e4:	mov	w0, w21
  4112e8:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  4112ec:	tbnz	w0, #0, 411300 <ascii_strlower_n@plt+0xcef8>
  4112f0:	ldr	x0, [x20]
  4112f4:	mov	w1, w21
  4112f8:	bl	4041a8 <bitmap_set@plt>
  4112fc:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411300:	ldrb	w8, [x25]
  411304:	tbz	w8, #1, 411330 <ascii_strlower_n@plt+0xcf28>
  411308:	orr	w8, w28, #0x6
  41130c:	and	w8, w8, #0xff
  411310:	orr	w21, w24, w8
  411314:	mov	w0, w21
  411318:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  41131c:	tbnz	w0, #0, 411330 <ascii_strlower_n@plt+0xcf28>
  411320:	ldr	x0, [x20]
  411324:	mov	w1, w21
  411328:	bl	4041a8 <bitmap_set@plt>
  41132c:	tbnz	w0, #31, 411388 <ascii_strlower_n@plt+0xcf80>
  411330:	ldrb	w8, [x25]
  411334:	tbz	w8, #0, 4111cc <ascii_strlower_n@plt+0xcdc4>
  411338:	orr	w8, w28, #0x7
  41133c:	and	w8, w8, #0xff
  411340:	orr	w21, w24, w8
  411344:	mov	w0, w21
  411348:	bl	418f20 <ascii_strlower_n@plt+0x14b18>
  41134c:	tbnz	w0, #0, 4111cc <ascii_strlower_n@plt+0xcdc4>
  411350:	ldr	x0, [x20]
  411354:	mov	w1, w21
  411358:	bl	4041a8 <bitmap_set@plt>
  41135c:	tbz	w0, #31, 4111cc <ascii_strlower_n@plt+0xcdc4>
  411360:	b	411388 <ascii_strlower_n@plt+0xcf80>
  411364:	tbz	w8, #0, 411384 <ascii_strlower_n@plt+0xcf7c>
  411368:	ldr	x23, [x19, #24]
  41136c:	ldp	x24, x21, [sp]
  411370:	cmp	x23, x21
  411374:	b.ls	411148 <ascii_strlower_n@plt+0xcd40>  // b.plast
  411378:	b	4113e8 <ascii_strlower_n@plt+0xcfe0>
  41137c:	mov	w0, #0xffffffa6            	// #-90
  411380:	b	411388 <ascii_strlower_n@plt+0xcf80>
  411384:	mov	w0, #0xffffffb6            	// #-74
  411388:	ldr	x8, [x19, #8]
  41138c:	cmp	x8, x23
  411390:	b.cc	4113f0 <ascii_strlower_n@plt+0xcfe8>  // b.lo, b.ul, b.last
  411394:	cmp	x23, #0xb
  411398:	b.ls	411414 <ascii_strlower_n@plt+0xd00c>  // b.plast
  41139c:	str	x23, [x19, #24]
  4113a0:	ldr	x8, [x19, #8]
  4113a4:	cmp	x8, x22
  4113a8:	b.cc	4113f0 <ascii_strlower_n@plt+0xcfe8>  // b.lo, b.ul, b.last
  4113ac:	cmp	x22, #0xb
  4113b0:	b.ls	411414 <ascii_strlower_n@plt+0xd00c>  // b.plast
  4113b4:	str	x22, [x19, #24]
  4113b8:	ldp	x20, x19, [sp, #96]
  4113bc:	ldp	x22, x21, [sp, #80]
  4113c0:	ldp	x24, x23, [sp, #64]
  4113c4:	ldp	x26, x25, [sp, #48]
  4113c8:	ldp	x28, x27, [sp, #32]
  4113cc:	ldp	x29, x30, [sp, #16]
  4113d0:	add	sp, sp, #0x70
  4113d4:	ret
  4113d8:	cmp	x23, x21
  4113dc:	b.ne	4113e8 <ascii_strlower_n@plt+0xcfe0>  // b.any
  4113e0:	mov	w0, wzr
  4113e4:	b	4113b8 <ascii_strlower_n@plt+0xcfb0>
  4113e8:	mov	w0, #0xffffffb6            	// #-74
  4113ec:	b	4113a0 <ascii_strlower_n@plt+0xcf98>
  4113f0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4113f4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4113f8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4113fc:	add	x1, x1, #0xac9
  411400:	add	x2, x2, #0x36e
  411404:	add	x4, x4, #0xa9d
  411408:	mov	w3, #0x4bd                 	// #1213
  41140c:	mov	w0, wzr
  411410:	bl	403a98 <log_assert_failed_realm@plt>
  411414:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411418:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41141c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411420:	add	x1, x1, #0xad8
  411424:	add	x2, x2, #0x36e
  411428:	add	x4, x4, #0xa9d
  41142c:	mov	w3, #0x4be                 	// #1214
  411430:	mov	w0, wzr
  411434:	bl	403a98 <log_assert_failed_realm@plt>
  411438:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41143c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411440:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411444:	add	x1, x1, #0xecb
  411448:	add	x2, x2, #0x36e
  41144c:	add	x4, x4, #0xedc
  411450:	mov	w3, #0x5c9                 	// #1481
  411454:	mov	w0, wzr
  411458:	bl	403a98 <log_assert_failed_realm@plt>
  41145c:	sub	sp, sp, #0x80
  411460:	stp	x29, x30, [sp, #32]
  411464:	stp	x28, x27, [sp, #48]
  411468:	stp	x26, x25, [sp, #64]
  41146c:	stp	x24, x23, [sp, #80]
  411470:	stp	x22, x21, [sp, #96]
  411474:	stp	x20, x19, [sp, #112]
  411478:	ldrb	w8, [x0, #160]
  41147c:	add	x29, sp, #0x20
  411480:	tbnz	w8, #1, 4115b0 <ascii_strlower_n@plt+0xd1a8>
  411484:	ldr	x8, [x0, #8]
  411488:	mov	x19, x0
  41148c:	cmp	x8, #0xb
  411490:	b.ls	411ad8 <ascii_strlower_n@plt+0xd6d0>  // b.plast
  411494:	ldr	x8, [x19, #40]
  411498:	mov	w9, #0xc                   	// #12
  41149c:	add	x27, x19, #0xa8
  4114a0:	ldr	x26, [x19, #24]
  4114a4:	cmp	x8, #0x0
  4114a8:	str	x9, [x19, #24]
  4114ac:	csel	x8, x27, x8, eq  // eq = none
  4114b0:	ldrh	w8, [x8, #4]
  4114b4:	cbz	w8, 4115b8 <ascii_strlower_n@plt+0xd1b0>
  4114b8:	rev16	w23, w8
  4114bc:	and	x0, x23, #0xffff
  4114c0:	bl	41783c <ascii_strlower_n@plt+0x13434>
  4114c4:	mov	x20, x0
  4114c8:	cbz	x0, 4115c0 <ascii_strlower_n@plt+0xd1b8>
  4114cc:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4114d0:	ldr	x0, [x0, #2680]
  4114d4:	bl	4041b8 <internal_set_new@plt>
  4114d8:	cbz	x0, 4115cc <ascii_strlower_n@plt+0xd1c4>
  4114dc:	lsl	w1, w23, #1
  4114e0:	mov	x22, x0
  4114e4:	bl	4041c8 <internal_hashmap_reserve@plt>
  4114e8:	tbnz	w0, #31, 4115ec <ascii_strlower_n@plt+0xd1e4>
  4114ec:	mov	w24, wzr
  4114f0:	sub	x1, x29, #0x8
  4114f4:	sub	x2, x29, #0xc
  4114f8:	mov	x0, x19
  4114fc:	mov	x3, xzr
  411500:	stur	xzr, [x29, #-8]
  411504:	bl	410140 <ascii_strlower_n@plt+0xbd38>
  411508:	tbnz	w0, #31, 41158c <ascii_strlower_n@plt+0xd184>
  41150c:	ldurb	w8, [x29, #-12]
  411510:	cbnz	w8, 41155c <ascii_strlower_n@plt+0xd154>
  411514:	ldur	x8, [x29, #-8]
  411518:	ldrh	w0, [x8, #6]
  41151c:	bl	418f70 <ascii_strlower_n@plt+0x14b68>
  411520:	tbz	w0, #0, 41155c <ascii_strlower_n@plt+0xd154>
  411524:	ldur	x1, [x29, #-8]
  411528:	mov	x0, x22
  41152c:	bl	4041d8 <set_put@plt>
  411530:	tbnz	w0, #31, 41158c <ascii_strlower_n@plt+0xd184>
  411534:	cbz	w0, 4115a0 <ascii_strlower_n@plt+0xd198>
  411538:	ldur	x1, [x29, #-8]
  41153c:	mov	x0, x20
  411540:	bl	417978 <ascii_strlower_n@plt+0x13570>
  411544:	cmp	w0, #0x0
  411548:	lsr	w25, w0, #31
  41154c:	csel	w21, w0, w21, lt  // lt = tstop
  411550:	ldur	x0, [x29, #-8]
  411554:	cbnz	x0, 41156c <ascii_strlower_n@plt+0xd164>
  411558:	b	411570 <ascii_strlower_n@plt+0xd168>
  41155c:	mov	w21, #0xffffffb6            	// #-74
  411560:	mov	w25, #0x1                   	// #1
  411564:	ldur	x0, [x29, #-8]
  411568:	cbz	x0, 411570 <ascii_strlower_n@plt+0xd168>
  41156c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  411570:	orr	w8, w25, #0x4
  411574:	cmp	w8, #0x4
  411578:	b.ne	41160c <ascii_strlower_n@plt+0xd204>  // b.any
  41157c:	add	w24, w24, #0x1
  411580:	cmp	w24, w23
  411584:	b.cc	4114f0 <ascii_strlower_n@plt+0xd0e8>  // b.lo, b.ul, b.last
  411588:	b	411634 <ascii_strlower_n@plt+0xd22c>
  41158c:	mov	w25, #0x1                   	// #1
  411590:	mov	w21, w0
  411594:	ldur	x0, [x29, #-8]
  411598:	cbnz	x0, 41156c <ascii_strlower_n@plt+0xd164>
  41159c:	b	411570 <ascii_strlower_n@plt+0xd168>
  4115a0:	mov	w25, #0x4                   	// #4
  4115a4:	ldur	x0, [x29, #-8]
  4115a8:	cbnz	x0, 41156c <ascii_strlower_n@plt+0xd164>
  4115ac:	b	411570 <ascii_strlower_n@plt+0xd168>
  4115b0:	mov	w21, wzr
  4115b4:	b	411a84 <ascii_strlower_n@plt+0xd67c>
  4115b8:	mov	x20, xzr
  4115bc:	b	411644 <ascii_strlower_n@plt+0xd23c>
  4115c0:	mov	x24, xzr
  4115c4:	mov	w21, #0xfffffff4            	// #-12
  4115c8:	b	411a54 <ascii_strlower_n@plt+0xd64c>
  4115cc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4115d0:	adrp	x3, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4115d4:	add	x1, x1, #0x36e
  4115d8:	add	x3, x3, #0xf1e
  4115dc:	mov	w2, #0x85e                 	// #2142
  4115e0:	bl	403a28 <log_oom_internal@plt>
  4115e4:	mov	w21, w0
  4115e8:	b	41161c <ascii_strlower_n@plt+0xd214>
  4115ec:	mov	w21, w0
  4115f0:	mov	x0, x22
  4115f4:	mov	x1, xzr
  4115f8:	mov	x2, xzr
  4115fc:	bl	404088 <internal_hashmap_free@plt>
  411600:	mov	x0, x20
  411604:	bl	4178e4 <ascii_strlower_n@plt+0x134dc>
  411608:	b	411a44 <ascii_strlower_n@plt+0xd63c>
  41160c:	mov	x0, x22
  411610:	mov	x1, xzr
  411614:	mov	x2, xzr
  411618:	bl	404088 <internal_hashmap_free@plt>
  41161c:	mov	x0, x20
  411620:	bl	4178e4 <ascii_strlower_n@plt+0x134dc>
  411624:	mov	x20, xzr
  411628:	mov	x24, xzr
  41162c:	tbz	w21, #31, 411644 <ascii_strlower_n@plt+0xd23c>
  411630:	b	411a50 <ascii_strlower_n@plt+0xd648>
  411634:	mov	x0, x22
  411638:	mov	x1, xzr
  41163c:	mov	x2, xzr
  411640:	bl	404088 <internal_hashmap_free@plt>
  411644:	ldr	x8, [x19, #40]
  411648:	cmp	x8, #0x0
  41164c:	csel	x8, x27, x8, eq  // eq = none
  411650:	ldrh	w10, [x8, #8]
  411654:	ldrh	w9, [x8, #6]
  411658:	ldrh	w8, [x8, #10]
  41165c:	rev	w10, w10
  411660:	rev	w9, w9
  411664:	lsr	w10, w10, #16
  411668:	add	w9, w10, w9, lsr #16
  41166c:	rev	w8, w8
  411670:	adds	w24, w9, w8, lsr #16
  411674:	b.eq	4119f8 <ascii_strlower_n@plt+0xd5f0>  // b.none
  411678:	mov	x0, x24
  41167c:	bl	415dd4 <ascii_strlower_n@plt+0x119cc>
  411680:	mov	x22, x0
  411684:	cbz	x0, 411a00 <ascii_strlower_n@plt+0xd5f8>
  411688:	str	x26, [sp, #8]
  41168c:	mov	w25, wzr
  411690:	mov	w26, wzr
  411694:	mov	x23, xzr
  411698:	sub	x1, x29, #0x8
  41169c:	sub	x2, x29, #0xc
  4116a0:	mov	x0, x19
  4116a4:	mov	x3, xzr
  4116a8:	stur	xzr, [x29, #-8]
  4116ac:	sturb	wzr, [x29, #-12]
  4116b0:	bl	410324 <ascii_strlower_n@plt+0xbf1c>
  4116b4:	tbnz	w0, #31, 41172c <ascii_strlower_n@plt+0xd324>
  4116b8:	cbz	x23, 4116cc <ascii_strlower_n@plt+0xd2c4>
  4116bc:	ldur	x8, [x29, #-8]
  4116c0:	add	x1, x23, #0x8
  4116c4:	add	x0, x8, #0x8
  4116c8:	bl	412e80 <ascii_strlower_n@plt+0xea78>
  4116cc:	ldur	x1, [x29, #-8]
  4116d0:	ldr	x0, [x1, #8]
  4116d4:	ldrh	w8, [x0, #6]
  4116d8:	cmp	w8, #0x29
  4116dc:	b.ne	41175c <ascii_strlower_n@plt+0xd354>  // b.any
  4116e0:	ldr	x8, [x19, #88]
  4116e4:	cmp	x8, #0x0
  4116e8:	cset	w8, eq  // eq = none
  4116ec:	bic	w8, w8, w26
  4116f0:	tbnz	w8, #0, 4117d0 <ascii_strlower_n@plt+0xd3c8>
  4116f4:	mov	w0, wzr
  4116f8:	bl	4039a8 <log_get_max_level_realm@plt>
  4116fc:	cmp	w0, #0x7
  411700:	b.lt	411878 <ascii_strlower_n@plt+0xd470>  // b.tstop
  411704:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411708:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41170c:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411710:	mov	w0, #0x7                   	// #7
  411714:	mov	w3, #0x8a7                 	// #2215
  411718:	mov	w1, wzr
  41171c:	add	x2, x2, #0x36e
  411720:	add	x4, x4, #0xf3a
  411724:	add	x5, x5, #0xf54
  411728:	b	411874 <ascii_strlower_n@plt+0xd46c>
  41172c:	mov	w28, #0x1                   	// #1
  411730:	mov	w21, w0
  411734:	ldur	x0, [x29, #-8]
  411738:	cbz	x0, 411740 <ascii_strlower_n@plt+0xd338>
  41173c:	bl	413398 <ascii_strlower_n@plt+0xef90>
  411740:	orr	w8, w28, #0x4
  411744:	cmp	w8, #0x4
  411748:	b.ne	411a0c <ascii_strlower_n@plt+0xd604>  // b.any
  41174c:	add	w25, w25, #0x1
  411750:	cmp	w25, w24
  411754:	b.ne	411698 <ascii_strlower_n@plt+0xd290>  // b.any
  411758:	b	411aa8 <ascii_strlower_n@plt+0xd6a0>
  41175c:	ldr	x8, [x19, #40]
  411760:	ldurb	w10, [x29, #-12]
  411764:	ldr	w9, [x19, #4]
  411768:	ldr	w2, [x19, #96]
  41176c:	cmp	x8, #0x0
  411770:	csel	x8, x27, x8, eq  // eq = none
  411774:	ldrh	w8, [x8, #6]
  411778:	mov	x0, x22
  41177c:	rev	w8, w8
  411780:	cmp	w25, w8, lsr #16
  411784:	cset	w8, cc  // cc = lo, ul, last
  411788:	tst	w10, #0x1
  41178c:	ccmp	w9, #0x1, #0x0, eq  // eq = none
  411790:	mov	w9, #0x4                   	// #4
  411794:	csel	w3, w9, wzr, eq  // eq = none
  411798:	bfi	w3, w8, #1, #1
  41179c:	bl	415f00 <ascii_strlower_n@plt+0x11af8>
  4117a0:	cmp	w0, #0x0
  4117a4:	csel	w21, w0, w21, lt  // lt = tstop
  4117a8:	tbnz	w0, #31, 411914 <ascii_strlower_n@plt+0xd50c>
  4117ac:	mov	x0, x23
  4117b0:	bl	413398 <ascii_strlower_n@plt+0xef90>
  4117b4:	ldur	x0, [x29, #-8]
  4117b8:	bl	413350 <ascii_strlower_n@plt+0xef48>
  4117bc:	mov	x23, x0
  4117c0:	mov	w28, wzr
  4117c4:	ldur	x0, [x29, #-8]
  4117c8:	cbnz	x0, 41173c <ascii_strlower_n@plt+0xd334>
  4117cc:	b	411740 <ascii_strlower_n@plt+0xd338>
  4117d0:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  4117d4:	bl	4040e8 <dns_name_is_root@plt>
  4117d8:	tbz	w0, #0, 411840 <ascii_strlower_n@plt+0xd438>
  4117dc:	ldr	x8, [x19, #40]
  4117e0:	cmp	x8, #0x0
  4117e4:	csel	x9, x27, x8, eq  // eq = none
  4117e8:	ldrh	w10, [x9, #6]
  4117ec:	ldrh	w9, [x9, #8]
  4117f0:	rev	w10, w10
  4117f4:	rev	w9, w9
  4117f8:	lsr	w9, w9, #16
  4117fc:	add	w9, w9, w10, lsr #16
  411800:	cmp	w25, w9
  411804:	b.cs	41188c <ascii_strlower_n@plt+0xd484>  // b.hs, b.nlast
  411808:	mov	w0, wzr
  41180c:	bl	4039a8 <log_get_max_level_realm@plt>
  411810:	cmp	w0, #0x7
  411814:	b.lt	411878 <ascii_strlower_n@plt+0xd470>  // b.tstop
  411818:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41181c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411820:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411824:	mov	w0, #0x7                   	// #7
  411828:	mov	w3, #0x8b8                 	// #2232
  41182c:	mov	w1, wzr
  411830:	add	x2, x2, #0x36e
  411834:	add	x4, x4, #0xf3a
  411838:	add	x5, x5, #0xfab
  41183c:	b	411874 <ascii_strlower_n@plt+0xd46c>
  411840:	mov	w0, wzr
  411844:	bl	4039a8 <log_get_max_level_realm@plt>
  411848:	cmp	w0, #0x7
  41184c:	b.lt	411878 <ascii_strlower_n@plt+0xd470>  // b.tstop
  411850:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411854:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411858:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41185c:	mov	w0, #0x7                   	// #7
  411860:	mov	w3, #0x8af                 	// #2223
  411864:	mov	w1, wzr
  411868:	add	x2, x2, #0x36e
  41186c:	add	x4, x4, #0xf3a
  411870:	add	x5, x5, #0xf7d
  411874:	bl	4039b8 <log_internal_realm@plt>
  411878:	mov	w26, #0x1                   	// #1
  41187c:	mov	w28, #0x4                   	// #4
  411880:	ldur	x0, [x29, #-8]
  411884:	cbnz	x0, 41173c <ascii_strlower_n@plt+0xd334>
  411888:	b	411740 <ascii_strlower_n@plt+0xd338>
  41188c:	ldur	x0, [x29, #-8]
  411890:	cbz	x0, 411b20 <ascii_strlower_n@plt+0xd718>
  411894:	ldr	x9, [x0, #8]
  411898:	ldrh	w9, [x9, #6]
  41189c:	cmp	w9, #0x29
  4118a0:	b.ne	411b40 <ascii_strlower_n@plt+0xd738>  // b.any
  4118a4:	ldrb	w9, [x0, #26]
  4118a8:	lsl	w9, w9, #16
  4118ac:	cbz	w9, 411924 <ascii_strlower_n@plt+0xd51c>
  4118b0:	mov	w10, wzr
  4118b4:	cmp	x8, #0x0
  4118b8:	csel	x8, x27, x8, eq  // eq = none
  4118bc:	ldrb	w8, [x8, #2]
  4118c0:	tbnz	w8, #7, 4118d0 <ascii_strlower_n@plt+0xd4c8>
  4118c4:	bl	413350 <ascii_strlower_n@plt+0xef48>
  4118c8:	str	x0, [x19, #88]
  4118cc:	b	4117ac <ascii_strlower_n@plt+0xd3a4>
  4118d0:	cbz	w9, 4119bc <ascii_strlower_n@plt+0xd5b4>
  4118d4:	mov	w0, wzr
  4118d8:	bl	4039a8 <log_get_max_level_realm@plt>
  4118dc:	cmp	w0, #0x7
  4118e0:	b.lt	41190c <ascii_strlower_n@plt+0xd504>  // b.tstop
  4118e4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4118e8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4118ec:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4118f0:	mov	w0, #0x7                   	// #7
  4118f4:	mov	w3, #0x8c9                 	// #2249
  4118f8:	mov	w1, wzr
  4118fc:	add	x2, x2, #0x36e
  411900:	add	x4, x4, #0xf3a
  411904:	add	x5, x5, #0xfea
  411908:	bl	4039b8 <log_internal_realm@plt>
  41190c:	mov	w26, wzr
  411910:	mov	w21, #0xffffffb6            	// #-74
  411914:	mov	w28, #0x1                   	// #1
  411918:	ldur	x0, [x29, #-8]
  41191c:	cbnz	x0, 41173c <ascii_strlower_n@plt+0xd334>
  411920:	b	411740 <ascii_strlower_n@plt+0xd338>
  411924:	ldr	x10, [x0, #88]
  411928:	cbz	x10, 4118b4 <ascii_strlower_n@plt+0xd4ac>
  41192c:	ldr	x11, [x0, #80]
  411930:	mov	w12, wzr
  411934:	cmp	x10, #0x4
  411938:	b.cc	411984 <ascii_strlower_n@plt+0xd57c>  // b.lo, b.ul, b.last
  41193c:	ldrh	w13, [x11, #2]
  411940:	rev	w13, w13
  411944:	lsr	w13, w13, #16
  411948:	add	x13, x13, #0x4
  41194c:	cmp	x10, x13
  411950:	b.cc	411984 <ascii_strlower_n@plt+0xd57c>  // b.lo, b.ul, b.last
  411954:	ldrh	w14, [x11]
  411958:	add	x11, x11, x13
  41195c:	rev	w14, w14
  411960:	lsr	w14, w14, #16
  411964:	sub	w14, w14, #0x5
  411968:	cmp	w14, #0x3
  41196c:	cset	w14, cc  // cc = lo, ul, last
  411970:	subs	x10, x10, x13
  411974:	orr	w12, w12, w14
  411978:	b.ne	411934 <ascii_strlower_n@plt+0xd52c>  // b.any
  41197c:	and	w10, w12, #0x1
  411980:	b	4118b4 <ascii_strlower_n@plt+0xd4ac>
  411984:	mov	w0, wzr
  411988:	bl	4039a8 <log_get_max_level_realm@plt>
  41198c:	cmp	w0, #0x7
  411990:	b.lt	411878 <ascii_strlower_n@plt+0xd470>  // b.tstop
  411994:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411998:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41199c:	adrp	x5, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4119a0:	mov	w0, #0x7                   	// #7
  4119a4:	mov	w3, #0x8be                 	// #2238
  4119a8:	mov	w1, wzr
  4119ac:	add	x2, x2, #0x36e
  4119b0:	add	x4, x4, #0xf3a
  4119b4:	add	x5, x5, #0xfce
  4119b8:	b	411874 <ascii_strlower_n@plt+0xd46c>
  4119bc:	cbz	w10, 4118c4 <ascii_strlower_n@plt+0xd4bc>
  4119c0:	mov	w0, wzr
  4119c4:	bl	4039a8 <log_get_max_level_realm@plt>
  4119c8:	cmp	w0, #0x7
  4119cc:	b.lt	411878 <ascii_strlower_n@plt+0xd470>  // b.tstop
  4119d0:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4119d4:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4119d8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4119dc:	mov	w0, #0x7                   	// #7
  4119e0:	mov	w3, #0x8d6                 	// #2262
  4119e4:	mov	w1, wzr
  4119e8:	add	x2, x2, #0x36e
  4119ec:	add	x4, x4, #0xf3a
  4119f0:	add	x5, x5, #0x1b
  4119f4:	b	411874 <ascii_strlower_n@plt+0xd46c>
  4119f8:	mov	x24, xzr
  4119fc:	b	411a30 <ascii_strlower_n@plt+0xd628>
  411a00:	mov	x24, xzr
  411a04:	mov	w21, #0xfffffff4            	// #-12
  411a08:	b	411a20 <ascii_strlower_n@plt+0xd618>
  411a0c:	mov	x24, xzr
  411a10:	ldr	x26, [sp, #8]
  411a14:	cbz	x23, 411a20 <ascii_strlower_n@plt+0xd618>
  411a18:	mov	x0, x23
  411a1c:	bl	413398 <ascii_strlower_n@plt+0xef90>
  411a20:	cbz	x22, 411a2c <ascii_strlower_n@plt+0xd624>
  411a24:	mov	x0, x22
  411a28:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  411a2c:	tbnz	w21, #31, 411a50 <ascii_strlower_n@plt+0xd648>
  411a30:	ldrb	w8, [x19, #160]
  411a34:	mov	w21, wzr
  411a38:	stp	x20, x24, [x19, #72]
  411a3c:	orr	w8, w8, #0x2
  411a40:	strb	w8, [x19, #160]
  411a44:	mov	x24, xzr
  411a48:	mov	x20, xzr
  411a4c:	b	411a54 <ascii_strlower_n@plt+0xd64c>
  411a50:	cbz	x19, 411a6c <ascii_strlower_n@plt+0xd664>
  411a54:	ldr	x8, [x19, #8]
  411a58:	cmp	x8, x26
  411a5c:	b.cc	411ad8 <ascii_strlower_n@plt+0xd6d0>  // b.lo, b.ul, b.last
  411a60:	cmp	x26, #0xb
  411a64:	b.ls	411afc <ascii_strlower_n@plt+0xd6f4>  // b.plast
  411a68:	str	x26, [x19, #24]
  411a6c:	cbz	x24, 411a78 <ascii_strlower_n@plt+0xd670>
  411a70:	mov	x0, x24
  411a74:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  411a78:	cbz	x20, 411a84 <ascii_strlower_n@plt+0xd67c>
  411a7c:	mov	x0, x20
  411a80:	bl	4178e4 <ascii_strlower_n@plt+0x134dc>
  411a84:	mov	w0, w21
  411a88:	ldp	x20, x19, [sp, #112]
  411a8c:	ldp	x22, x21, [sp, #96]
  411a90:	ldp	x24, x23, [sp, #80]
  411a94:	ldp	x26, x25, [sp, #64]
  411a98:	ldp	x28, x27, [sp, #48]
  411a9c:	ldp	x29, x30, [sp, #32]
  411aa0:	add	sp, sp, #0x80
  411aa4:	ret
  411aa8:	tbz	w26, #0, 411ac0 <ascii_strlower_n@plt+0xd6b8>
  411aac:	ldr	x0, [x19, #88]
  411ab0:	bl	413398 <ascii_strlower_n@plt+0xef90>
  411ab4:	mov	w21, wzr
  411ab8:	str	x0, [x19, #88]
  411abc:	b	411ac4 <ascii_strlower_n@plt+0xd6bc>
  411ac0:	mov	w21, wzr
  411ac4:	mov	x24, x22
  411ac8:	mov	x22, xzr
  411acc:	ldr	x26, [sp, #8]
  411ad0:	cbnz	x23, 411a18 <ascii_strlower_n@plt+0xd610>
  411ad4:	b	411a20 <ascii_strlower_n@plt+0xd618>
  411ad8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411adc:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411ae0:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411ae4:	add	x1, x1, #0xac9
  411ae8:	add	x2, x2, #0x36e
  411aec:	add	x4, x4, #0xa9d
  411af0:	mov	w3, #0x4bd                 	// #1213
  411af4:	mov	w0, wzr
  411af8:	bl	403a98 <log_assert_failed_realm@plt>
  411afc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b00:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b04:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b08:	add	x1, x1, #0xad8
  411b0c:	add	x2, x2, #0x36e
  411b10:	add	x4, x4, #0xa9d
  411b14:	mov	w3, #0x4be                 	// #1214
  411b18:	mov	w0, wzr
  411b1c:	bl	403a98 <log_assert_failed_realm@plt>
  411b20:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b24:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b28:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411b2c:	add	x1, x1, #0x9e6
  411b30:	add	x2, x2, #0x36e
  411b34:	add	x4, x4, #0x43
  411b38:	mov	w3, #0x82b                 	// #2091
  411b3c:	bl	403a98 <log_assert_failed_realm@plt>
  411b40:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411b44:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411b48:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411b4c:	add	x1, x1, #0x73
  411b50:	add	x2, x2, #0x36e
  411b54:	add	x4, x4, #0x43
  411b58:	mov	w3, #0x82c                 	// #2092
  411b5c:	mov	w0, wzr
  411b60:	bl	403a98 <log_assert_failed_realm@plt>
  411b64:	stp	x29, x30, [sp, #-32]!
  411b68:	stp	x20, x19, [sp, #16]
  411b6c:	mov	x29, sp
  411b70:	cbz	x0, 411be0 <ascii_strlower_n@plt+0xd7d8>
  411b74:	mov	x19, x1
  411b78:	cbz	x1, 411c00 <ascii_strlower_n@plt+0xd7f8>
  411b7c:	ldr	x8, [x0, #40]
  411b80:	add	x9, x0, #0xa8
  411b84:	mov	x20, x0
  411b88:	cmp	x8, #0x0
  411b8c:	csel	x8, x9, x8, eq  // eq = none
  411b90:	ldrb	w8, [x8, #2]
  411b94:	tbnz	w8, #7, 411ba0 <ascii_strlower_n@plt+0xd798>
  411b98:	mov	w0, wzr
  411b9c:	b	411bd4 <ascii_strlower_n@plt+0xd7cc>
  411ba0:	mov	x0, x20
  411ba4:	bl	41145c <ascii_strlower_n@plt+0xd054>
  411ba8:	tbnz	w0, #31, 411bd4 <ascii_strlower_n@plt+0xd7cc>
  411bac:	ldr	x8, [x20, #72]
  411bb0:	cbz	x8, 411b98 <ascii_strlower_n@plt+0xd790>
  411bb4:	ldr	x9, [x8, #8]
  411bb8:	cmp	x9, #0x1
  411bbc:	b.ne	411b98 <ascii_strlower_n@plt+0xd790>  // b.any
  411bc0:	ldr	x0, [x8, #24]
  411bc4:	mov	x1, x19
  411bc8:	ldp	x20, x19, [sp, #16]
  411bcc:	ldp	x29, x30, [sp], #32
  411bd0:	b	412674 <ascii_strlower_n@plt+0xe26c>
  411bd4:	ldp	x20, x19, [sp, #16]
  411bd8:	ldp	x29, x30, [sp], #32
  411bdc:	ret
  411be0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411be4:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411be8:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411bec:	add	x1, x1, #0x428
  411bf0:	add	x2, x2, #0x36e
  411bf4:	add	x4, x4, #0xd55
  411bf8:	mov	w3, #0x919                 	// #2329
  411bfc:	bl	403a98 <log_assert_failed_realm@plt>
  411c00:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411c04:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411c08:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411c0c:	add	x1, x1, #0xd96
  411c10:	add	x2, x2, #0x36e
  411c14:	add	x4, x4, #0xd55
  411c18:	mov	w3, #0x91a                 	// #2330
  411c1c:	mov	w0, wzr
  411c20:	bl	403a98 <log_assert_failed_realm@plt>
  411c24:	stp	x29, x30, [sp, #-32]!
  411c28:	stp	x20, x19, [sp, #16]
  411c2c:	mov	x29, sp
  411c30:	cbz	x0, 411c70 <ascii_strlower_n@plt+0xd868>
  411c34:	mov	x19, x1
  411c38:	mov	x20, x0
  411c3c:	add	x0, x0, #0x8
  411c40:	mov	w1, #0x8                   	// #8
  411c44:	mov	x2, x19
  411c48:	bl	4041e8 <siphash24_compress@plt>
  411c4c:	ldr	x8, [x20, #40]
  411c50:	ldr	x1, [x20, #8]
  411c54:	add	x9, x20, #0xa8
  411c58:	mov	x2, x19
  411c5c:	ldp	x20, x19, [sp, #16]
  411c60:	cmp	x8, #0x0
  411c64:	csel	x0, x9, x8, eq  // eq = none
  411c68:	ldp	x29, x30, [sp], #32
  411c6c:	b	4041e8 <siphash24_compress@plt>
  411c70:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  411c74:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411c78:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411c7c:	add	x1, x1, #0xfaa
  411c80:	add	x2, x2, #0x36e
  411c84:	add	x4, x4, #0x91
  411c88:	mov	w3, #0x932                 	// #2354
  411c8c:	bl	403a98 <log_assert_failed_realm@plt>
  411c90:	ldr	x2, [x0, #8]
  411c94:	ldr	x8, [x1, #8]
  411c98:	cmp	x2, x8
  411c9c:	cset	w8, hi  // hi = pmore
  411ca0:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  411ca4:	cbz	w8, 411cb0 <ascii_strlower_n@plt+0xd8a8>
  411ca8:	mov	w0, w8
  411cac:	ret
  411cb0:	ldr	x8, [x0, #40]
  411cb4:	ldr	x10, [x1, #40]
  411cb8:	add	x9, x0, #0xa8
  411cbc:	add	x11, x1, #0xa8
  411cc0:	cmp	x8, #0x0
  411cc4:	csel	x0, x9, x8, eq  // eq = none
  411cc8:	cmp	x10, #0x0
  411ccc:	csel	x1, x11, x10, eq  // eq = none
  411cd0:	b	4041f8 <memcmp@plt>
  411cd4:	cmp	w0, #0x17
  411cd8:	b.ls	411ce4 <ascii_strlower_n@plt+0xd8dc>  // b.plast
  411cdc:	mov	x0, xzr
  411ce0:	ret
  411ce4:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  411ce8:	add	x8, x8, #0x2e0
  411cec:	ldr	x0, [x8, w0, uxtw #3]
  411cf0:	ret
  411cf4:	stp	x29, x30, [sp, #-16]!
  411cf8:	mov	x2, x0
  411cfc:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  411d00:	add	x0, x0, #0x2e0
  411d04:	mov	w1, #0x18                  	// #24
  411d08:	mov	x29, sp
  411d0c:	bl	404208 <string_table_lookup@plt>
  411d10:	ldp	x29, x30, [sp], #16
  411d14:	ret
  411d18:	cmp	w0, #0x2
  411d1c:	b.ls	411d28 <ascii_strlower_n@plt+0xd920>  // b.plast
  411d20:	mov	x0, xzr
  411d24:	ret
  411d28:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  411d2c:	add	x8, x8, #0x3a0
  411d30:	ldr	x0, [x8, w0, uxtw #3]
  411d34:	ret
  411d38:	stp	x29, x30, [sp, #-16]!
  411d3c:	mov	x2, x0
  411d40:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  411d44:	add	x0, x0, #0x3a0
  411d48:	mov	w1, #0x3                   	// #3
  411d4c:	mov	x29, sp
  411d50:	bl	404208 <string_table_lookup@plt>
  411d54:	ldp	x29, x30, [sp], #16
  411d58:	ret
  411d5c:	sub	sp, sp, #0x50
  411d60:	stp	x29, x30, [sp, #16]
  411d64:	stp	x24, x23, [sp, #32]
  411d68:	stp	x22, x21, [sp, #48]
  411d6c:	stp	x20, x19, [sp, #64]
  411d70:	add	x29, sp, #0x10
  411d74:	cbz	x0, 411e34 <ascii_strlower_n@plt+0xda2c>
  411d78:	mov	x20, x3
  411d7c:	cbz	x3, 411e54 <ascii_strlower_n@plt+0xda4c>
  411d80:	mov	w22, w2
  411d84:	tst	w2, #0xff
  411d88:	b.eq	411e78 <ascii_strlower_n@plt+0xda70>  // b.none
  411d8c:	ldr	x21, [x0, #8]
  411d90:	mov	w24, w1
  411d94:	add	x2, sp, #0x8
  411d98:	mov	w1, #0x1                   	// #1
  411d9c:	mov	x3, xzr
  411da0:	mov	x19, x0
  411da4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  411da8:	tbnz	w0, #31, 411e08 <ascii_strlower_n@plt+0xda00>
  411dac:	ldr	x8, [sp, #8]
  411db0:	add	x2, sp, #0x8
  411db4:	mov	w1, #0x1                   	// #1
  411db8:	mov	x0, x19
  411dbc:	mov	x3, xzr
  411dc0:	strb	w24, [x8]
  411dc4:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  411dc8:	tbnz	w0, #31, 411e08 <ascii_strlower_n@plt+0xda00>
  411dcc:	ldr	x8, [sp, #8]
  411dd0:	add	x2, sp, #0x8
  411dd4:	mov	x0, x19
  411dd8:	mov	x3, xzr
  411ddc:	strb	w22, [x8]
  411de0:	and	x22, x22, #0xff
  411de4:	mov	x1, x22
  411de8:	bl	40dda4 <ascii_strlower_n@plt+0x999c>
  411dec:	tbnz	w0, #31, 411e08 <ascii_strlower_n@plt+0xda00>
  411df0:	ldr	x0, [sp, #8]
  411df4:	mov	x1, x20
  411df8:	mov	x2, x22
  411dfc:	bl	403c68 <memcpy@plt>
  411e00:	mov	w23, wzr
  411e04:	b	411e18 <ascii_strlower_n@plt+0xda10>
  411e08:	mov	w23, w0
  411e0c:	mov	x0, x19
  411e10:	mov	x1, x21
  411e14:	bl	40dc64 <ascii_strlower_n@plt+0x985c>
  411e18:	mov	w0, w23
  411e1c:	ldp	x20, x19, [sp, #64]
  411e20:	ldp	x22, x21, [sp, #48]
  411e24:	ldp	x24, x23, [sp, #32]
  411e28:	ldp	x29, x30, [sp, #16]
  411e2c:	add	sp, sp, #0x50
  411e30:	ret
  411e34:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e38:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e3c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e40:	add	x1, x1, #0x428
  411e44:	add	x2, x2, #0x36e
  411e48:	add	x4, x4, #0xe6f
  411e4c:	mov	w3, #0x26d                 	// #621
  411e50:	bl	403a98 <log_assert_failed_realm@plt>
  411e54:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e58:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e5c:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e60:	add	x1, x1, #0xecb
  411e64:	add	x2, x2, #0x36e
  411e68:	add	x4, x4, #0xe6f
  411e6c:	mov	w3, #0x26e                 	// #622
  411e70:	mov	w0, wzr
  411e74:	bl	403a98 <log_assert_failed_realm@plt>
  411e78:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e7c:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e80:	adrp	x4, 41d000 <ascii_strlower_n@plt+0x18bf8>
  411e84:	add	x1, x1, #0xed1
  411e88:	add	x2, x2, #0x36e
  411e8c:	add	x4, x4, #0xe6f
  411e90:	mov	w3, #0x26f                 	// #623
  411e94:	mov	w0, wzr
  411e98:	bl	403a98 <log_assert_failed_realm@plt>
  411e9c:	stp	x29, x30, [sp, #-64]!
  411ea0:	str	x23, [sp, #16]
  411ea4:	stp	x22, x21, [sp, #32]
  411ea8:	stp	x20, x19, [sp, #48]
  411eac:	mov	x29, sp
  411eb0:	cbz	x2, 411f10 <ascii_strlower_n@plt+0xdb08>
  411eb4:	mov	w21, w0
  411eb8:	mov	x0, x2
  411ebc:	mov	x19, x2
  411ec0:	mov	w20, w1
  411ec4:	bl	403d28 <strlen@plt>
  411ec8:	add	x1, x0, #0x11
  411ecc:	mov	w0, #0x1                   	// #1
  411ed0:	mov	w23, #0x1                   	// #1
  411ed4:	bl	404068 <calloc@plt>
  411ed8:	mov	x22, x0
  411edc:	cbz	x0, 411ef8 <ascii_strlower_n@plt+0xdaf0>
  411ee0:	add	x0, x22, #0x10
  411ee4:	mov	x1, x19
  411ee8:	str	w23, [x22]
  411eec:	strh	w21, [x22, #4]
  411ef0:	strh	w20, [x22, #6]
  411ef4:	bl	404218 <strcpy@plt>
  411ef8:	mov	x0, x22
  411efc:	ldp	x20, x19, [sp, #48]
  411f00:	ldp	x22, x21, [sp, #32]
  411f04:	ldr	x23, [sp, #16]
  411f08:	ldp	x29, x30, [sp], #64
  411f0c:	ret
  411f10:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  411f14:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411f18:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411f1c:	add	x1, x1, #0x137
  411f20:	add	x2, x2, #0x16d
  411f24:	add	x4, x4, #0x18b
  411f28:	mov	w3, #0x17                  	// #23
  411f2c:	mov	w0, wzr
  411f30:	bl	403a98 <log_assert_failed_realm@plt>
  411f34:	stp	x29, x30, [sp, #-64]!
  411f38:	str	x23, [sp, #16]
  411f3c:	stp	x22, x21, [sp, #32]
  411f40:	stp	x20, x19, [sp, #48]
  411f44:	mov	x29, sp
  411f48:	cbz	x0, 4120b0 <ascii_strlower_n@plt+0xdca8>
  411f4c:	mov	x20, x1
  411f50:	cbz	x1, 4120d0 <ascii_strlower_n@plt+0xdcc8>
  411f54:	ldr	x8, [x20, #8]
  411f58:	mov	x19, x0
  411f5c:	ldrh	w8, [x8, #6]
  411f60:	cmp	w8, #0x5
  411f64:	b.eq	411fc8 <ascii_strlower_n@plt+0xdbc0>  // b.none
  411f68:	cmp	w8, #0x27
  411f6c:	b.ne	4120f4 <ascii_strlower_n@plt+0xdcec>  // b.any
  411f70:	str	xzr, [x29, #24]
  411f74:	ldr	x8, [x19, #8]
  411f78:	add	x9, x19, #0x10
  411f7c:	cmp	x8, #0x0
  411f80:	csel	x21, x9, x8, eq  // eq = none
  411f84:	mov	x0, x21
  411f88:	bl	4040e8 <dns_name_is_root@plt>
  411f8c:	ldr	x8, [x20, #8]
  411f90:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  411f94:	add	x23, x23, #0x3a0
  411f98:	tst	w0, #0x1
  411f9c:	csel	x21, x23, x21, ne  // ne = any
  411fa0:	cbz	x8, 412014 <ascii_strlower_n@plt+0xdc0c>
  411fa4:	ldr	x9, [x8, #8]
  411fa8:	add	x8, x8, #0x10
  411fac:	cmp	x9, #0x0
  411fb0:	csel	x22, x8, x9, eq  // eq = none
  411fb4:	mov	x0, x22
  411fb8:	bl	4040e8 <dns_name_is_root@plt>
  411fbc:	tst	w0, #0x1
  411fc0:	csel	x1, x23, x22, ne  // ne = any
  411fc4:	b	412018 <ascii_strlower_n@plt+0xdc10>
  411fc8:	ldr	x20, [x20, #80]
  411fcc:	cbz	x20, 412118 <ascii_strlower_n@plt+0xdd10>
  411fd0:	ldrh	w21, [x19, #4]
  411fd4:	ldrh	w22, [x19, #6]
  411fd8:	mov	x0, x20
  411fdc:	bl	403d28 <strlen@plt>
  411fe0:	add	x1, x0, #0x11
  411fe4:	mov	w0, #0x1                   	// #1
  411fe8:	mov	w23, #0x1                   	// #1
  411fec:	bl	404068 <calloc@plt>
  411ff0:	mov	x19, x0
  411ff4:	cbz	x0, 412098 <ascii_strlower_n@plt+0xdc90>
  411ff8:	add	x0, x19, #0x10
  411ffc:	mov	x1, x20
  412000:	str	w23, [x19]
  412004:	strh	w21, [x19, #4]
  412008:	strh	w22, [x19, #6]
  41200c:	bl	404218 <strcpy@plt>
  412010:	b	412098 <ascii_strlower_n@plt+0xdc90>
  412014:	mov	x1, xzr
  412018:	ldr	x2, [x20, #80]
  41201c:	add	x3, x29, #0x18
  412020:	mov	x0, x21
  412024:	bl	404228 <dns_name_change_suffix@plt>
  412028:	tbnz	w0, #31, 41206c <ascii_strlower_n@plt+0xdc64>
  41202c:	cbz	w0, 412074 <ascii_strlower_n@plt+0xdc6c>
  412030:	ldr	x20, [x29, #24]
  412034:	cbz	x20, 41213c <ascii_strlower_n@plt+0xdd34>
  412038:	ldrh	w21, [x19, #4]
  41203c:	ldrh	w22, [x19, #6]
  412040:	mov	w0, #0x1                   	// #1
  412044:	mov	w1, #0x10                  	// #16
  412048:	mov	w23, #0x1                   	// #1
  41204c:	bl	404068 <calloc@plt>
  412050:	mov	x19, x0
  412054:	cbz	x0, 412090 <ascii_strlower_n@plt+0xdc88>
  412058:	str	w23, [x19]
  41205c:	strh	w21, [x19, #4]
  412060:	strh	w22, [x19, #6]
  412064:	str	x20, [x19, #8]
  412068:	b	412098 <ascii_strlower_n@plt+0xdc90>
  41206c:	mov	x19, xzr
  412070:	b	412098 <ascii_strlower_n@plt+0xdc90>
  412074:	ldr	w8, [x19]
  412078:	cbz	w8, 412160 <ascii_strlower_n@plt+0xdd58>
  41207c:	cmn	w8, #0x1
  412080:	b.eq	412184 <ascii_strlower_n@plt+0xdd7c>  // b.none
  412084:	add	w8, w8, #0x1
  412088:	str	w8, [x19]
  41208c:	b	412098 <ascii_strlower_n@plt+0xdc90>
  412090:	mov	x0, x20
  412094:	bl	4039d8 <free@plt>
  412098:	mov	x0, x19
  41209c:	ldp	x20, x19, [sp, #48]
  4120a0:	ldp	x22, x21, [sp, #32]
  4120a4:	ldr	x23, [sp, #16]
  4120a8:	ldp	x29, x30, [sp], #64
  4120ac:	ret
  4120b0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4120b4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120b8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120bc:	add	x1, x1, #0xd96
  4120c0:	add	x2, x2, #0x16d
  4120c4:	add	x4, x4, #0x1d2
  4120c8:	mov	w3, #0x2a                  	// #42
  4120cc:	bl	403a98 <log_assert_failed_realm@plt>
  4120d0:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4120d4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120d8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120dc:	add	x1, x1, #0xf8
  4120e0:	add	x2, x2, #0x16d
  4120e4:	add	x4, x4, #0x1d2
  4120e8:	mov	w3, #0x2b                  	// #43
  4120ec:	mov	w0, wzr
  4120f0:	bl	403a98 <log_assert_failed_realm@plt>
  4120f4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120f8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4120fc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412100:	add	x1, x1, #0x233
  412104:	add	x2, x2, #0x16d
  412108:	add	x4, x4, #0x1d2
  41210c:	mov	w3, #0x2d                  	// #45
  412110:	mov	w0, wzr
  412114:	bl	403a98 <log_assert_failed_realm@plt>
  412118:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  41211c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412120:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412124:	add	x1, x1, #0x137
  412128:	add	x2, x2, #0x16d
  41212c:	add	x4, x4, #0x18b
  412130:	mov	w3, #0x17                  	// #23
  412134:	mov	w0, wzr
  412138:	bl	403a98 <log_assert_failed_realm@plt>
  41213c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  412140:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412144:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412148:	add	x1, x1, #0x137
  41214c:	add	x2, x2, #0x16d
  412150:	add	x4, x4, #0x2c0
  412154:	mov	w3, #0x62                  	// #98
  412158:	mov	w0, wzr
  41215c:	bl	403a98 <log_assert_failed_realm@plt>
  412160:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412164:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412168:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41216c:	add	x1, x1, #0x35a
  412170:	add	x2, x2, #0x16d
  412174:	add	x4, x4, #0x323
  412178:	mov	w3, #0x79                  	// #121
  41217c:	mov	w0, wzr
  412180:	bl	403a98 <log_assert_failed_realm@plt>
  412184:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412188:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41218c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412190:	add	x1, x1, #0x309
  412194:	add	x2, x2, #0x16d
  412198:	add	x4, x4, #0x323
  41219c:	mov	w3, #0x77                  	// #119
  4121a0:	mov	w0, wzr
  4121a4:	bl	403a98 <log_assert_failed_realm@plt>
  4121a8:	cbz	x0, 4121e8 <ascii_strlower_n@plt+0xdde0>
  4121ac:	stp	x29, x30, [sp, #-32]!
  4121b0:	ldr	x8, [x0, #8]
  4121b4:	add	x9, x0, #0x10
  4121b8:	str	x19, [sp, #16]
  4121bc:	mov	x29, sp
  4121c0:	cmp	x8, #0x0
  4121c4:	csel	x19, x9, x8, eq  // eq = none
  4121c8:	mov	x0, x19
  4121cc:	bl	4040e8 <dns_name_is_root@plt>
  4121d0:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4121d4:	add	x8, x8, #0x3a0
  4121d8:	tst	w0, #0x1
  4121dc:	csel	x0, x8, x19, ne  // ne = any
  4121e0:	ldr	x19, [sp, #16]
  4121e4:	ldp	x29, x30, [sp], #32
  4121e8:	ret
  4121ec:	stp	x29, x30, [sp, #-16]!
  4121f0:	mov	x29, sp
  4121f4:	cbz	x0, 412210 <ascii_strlower_n@plt+0xde08>
  4121f8:	ldr	w8, [x0]
  4121fc:	cbz	w8, 412218 <ascii_strlower_n@plt+0xde10>
  412200:	cmn	w8, #0x1
  412204:	b.eq	41223c <ascii_strlower_n@plt+0xde34>  // b.none
  412208:	add	w8, w8, #0x1
  41220c:	str	w8, [x0]
  412210:	ldp	x29, x30, [sp], #16
  412214:	ret
  412218:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41221c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412220:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412224:	add	x1, x1, #0x35a
  412228:	add	x2, x2, #0x16d
  41222c:	add	x4, x4, #0x323
  412230:	mov	w3, #0x79                  	// #121
  412234:	mov	w0, wzr
  412238:	bl	403a98 <log_assert_failed_realm@plt>
  41223c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412240:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412244:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412248:	add	x1, x1, #0x309
  41224c:	add	x2, x2, #0x16d
  412250:	add	x4, x4, #0x323
  412254:	mov	w3, #0x77                  	// #119
  412258:	mov	w0, wzr
  41225c:	bl	403a98 <log_assert_failed_realm@plt>
  412260:	stp	x29, x30, [sp, #-48]!
  412264:	stp	x22, x21, [sp, #16]
  412268:	stp	x20, x19, [sp, #32]
  41226c:	mov	x29, sp
  412270:	cbz	x2, 4122b4 <ascii_strlower_n@plt+0xdeac>
  412274:	mov	w20, w1
  412278:	mov	w21, w0
  41227c:	mov	w0, #0x1                   	// #1
  412280:	mov	w1, #0x10                  	// #16
  412284:	mov	x19, x2
  412288:	mov	w22, #0x1                   	// #1
  41228c:	bl	404068 <calloc@plt>
  412290:	cbz	x0, 4122a4 <ascii_strlower_n@plt+0xde9c>
  412294:	str	w22, [x0]
  412298:	strh	w21, [x0, #4]
  41229c:	strh	w20, [x0, #6]
  4122a0:	str	x19, [x0, #8]
  4122a4:	ldp	x20, x19, [sp, #32]
  4122a8:	ldp	x22, x21, [sp, #16]
  4122ac:	ldp	x29, x30, [sp], #48
  4122b0:	ret
  4122b4:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4122b8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4122bc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4122c0:	add	x1, x1, #0x137
  4122c4:	add	x2, x2, #0x16d
  4122c8:	add	x4, x4, #0x2c0
  4122cc:	mov	w3, #0x62                  	// #98
  4122d0:	mov	w0, wzr
  4122d4:	bl	403a98 <log_assert_failed_realm@plt>
  4122d8:	stp	x29, x30, [sp, #-64]!
  4122dc:	str	x23, [sp, #16]
  4122e0:	stp	x22, x21, [sp, #32]
  4122e4:	stp	x20, x19, [sp, #48]
  4122e8:	mov	x29, sp
  4122ec:	cbz	x0, 4123d4 <ascii_strlower_n@plt+0xdfcc>
  4122f0:	mov	x20, x1
  4122f4:	cbz	x1, 4123f4 <ascii_strlower_n@plt+0xdfec>
  4122f8:	mov	x21, x2
  4122fc:	cbz	x2, 412418 <ascii_strlower_n@plt+0xe010>
  412300:	mov	x19, x0
  412304:	mov	x0, x21
  412308:	bl	4040e8 <dns_name_is_root@plt>
  41230c:	tbz	w0, #0, 412334 <ascii_strlower_n@plt+0xdf2c>
  412310:	ldr	w8, [x20]
  412314:	cbz	w8, 41243c <ascii_strlower_n@plt+0xe034>
  412318:	cmn	w8, #0x1
  41231c:	b.eq	412460 <ascii_strlower_n@plt+0xe058>  // b.none
  412320:	add	w8, w8, #0x1
  412324:	mov	w0, wzr
  412328:	str	w8, [x20]
  41232c:	str	x20, [x19]
  412330:	b	4123c0 <ascii_strlower_n@plt+0xdfb8>
  412334:	ldr	x8, [x20, #8]
  412338:	add	x9, x20, #0x10
  41233c:	cmp	x8, #0x0
  412340:	csel	x22, x9, x8, eq  // eq = none
  412344:	mov	x0, x22
  412348:	bl	4040e8 <dns_name_is_root@plt>
  41234c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412350:	add	x8, x8, #0x3a0
  412354:	tst	w0, #0x1
  412358:	csel	x0, x8, x22, ne  // ne = any
  41235c:	add	x3, x29, #0x18
  412360:	mov	x1, x21
  412364:	mov	w2, wzr
  412368:	bl	403df8 <dns_name_concat@plt>
  41236c:	tbnz	w0, #31, 4123c0 <ascii_strlower_n@plt+0xdfb8>
  412370:	ldr	x21, [x29, #24]
  412374:	cbz	x21, 412484 <ascii_strlower_n@plt+0xe07c>
  412378:	ldrh	w22, [x20, #4]
  41237c:	ldrh	w20, [x20, #6]
  412380:	mov	w0, #0x1                   	// #1
  412384:	mov	w1, #0x10                  	// #16
  412388:	mov	w23, #0x1                   	// #1
  41238c:	bl	404068 <calloc@plt>
  412390:	cbz	x0, 4123b4 <ascii_strlower_n@plt+0xdfac>
  412394:	mov	x8, x0
  412398:	mov	w0, wzr
  41239c:	str	w23, [x8]
  4123a0:	strh	w22, [x8, #4]
  4123a4:	strh	w20, [x8, #6]
  4123a8:	str	x21, [x8, #8]
  4123ac:	str	x8, [x19]
  4123b0:	b	4123c0 <ascii_strlower_n@plt+0xdfb8>
  4123b4:	mov	x0, x21
  4123b8:	bl	4039d8 <free@plt>
  4123bc:	mov	w0, #0xfffffff4            	// #-12
  4123c0:	ldp	x20, x19, [sp, #48]
  4123c4:	ldp	x22, x21, [sp, #32]
  4123c8:	ldr	x23, [sp, #16]
  4123cc:	ldp	x29, x30, [sp], #64
  4123d0:	ret
  4123d4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4123d8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4123dc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4123e0:	add	x1, x1, #0xcb6
  4123e4:	add	x2, x2, #0x16d
  4123e8:	add	x4, x4, #0x26c
  4123ec:	mov	w3, #0x48                  	// #72
  4123f0:	bl	403a98 <log_assert_failed_realm@plt>
  4123f4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4123f8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4123fc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412400:	add	x1, x1, #0xd96
  412404:	add	x2, x2, #0x16d
  412408:	add	x4, x4, #0x26c
  41240c:	mov	w3, #0x49                  	// #73
  412410:	mov	w0, wzr
  412414:	bl	403a98 <log_assert_failed_realm@plt>
  412418:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  41241c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412420:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412424:	add	x1, x1, #0x137
  412428:	add	x2, x2, #0x16d
  41242c:	add	x4, x4, #0x26c
  412430:	mov	w3, #0x4a                  	// #74
  412434:	mov	w0, wzr
  412438:	bl	403a98 <log_assert_failed_realm@plt>
  41243c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412440:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412444:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412448:	add	x1, x1, #0x35a
  41244c:	add	x2, x2, #0x16d
  412450:	add	x4, x4, #0x323
  412454:	mov	w3, #0x79                  	// #121
  412458:	mov	w0, wzr
  41245c:	bl	403a98 <log_assert_failed_realm@plt>
  412460:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412464:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412468:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41246c:	add	x1, x1, #0x309
  412470:	add	x2, x2, #0x16d
  412474:	add	x4, x4, #0x323
  412478:	mov	w3, #0x77                  	// #119
  41247c:	mov	w0, wzr
  412480:	bl	403a98 <log_assert_failed_realm@plt>
  412484:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  412488:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41248c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412490:	add	x1, x1, #0x137
  412494:	add	x2, x2, #0x16d
  412498:	add	x4, x4, #0x2c0
  41249c:	mov	w3, #0x62                  	// #98
  4124a0:	mov	w0, wzr
  4124a4:	bl	403a98 <log_assert_failed_realm@plt>
  4124a8:	stp	x29, x30, [sp, #-32]!
  4124ac:	str	x19, [sp, #16]
  4124b0:	mov	x29, sp
  4124b4:	cbz	x0, 4124ec <ascii_strlower_n@plt+0xe0e4>
  4124b8:	ldr	w9, [x0]
  4124bc:	mov	x19, x0
  4124c0:	subs	w8, w9, #0x1
  4124c4:	b.eq	4124dc <ascii_strlower_n@plt+0xe0d4>  // b.none
  4124c8:	cbz	w9, 4124fc <ascii_strlower_n@plt+0xe0f4>
  4124cc:	cmn	w9, #0x1
  4124d0:	b.eq	412520 <ascii_strlower_n@plt+0xe118>  // b.none
  4124d4:	str	w8, [x19]
  4124d8:	b	4124ec <ascii_strlower_n@plt+0xe0e4>
  4124dc:	ldr	x0, [x19, #8]
  4124e0:	bl	4039d8 <free@plt>
  4124e4:	mov	x0, x19
  4124e8:	bl	4039d8 <free@plt>
  4124ec:	ldr	x19, [sp, #16]
  4124f0:	mov	x0, xzr
  4124f4:	ldp	x29, x30, [sp], #32
  4124f8:	ret
  4124fc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412500:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412504:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412508:	add	x1, x1, #0x35a
  41250c:	add	x2, x2, #0x16d
  412510:	add	x4, x4, #0x367
  412514:	mov	w3, #0x84                  	// #132
  412518:	mov	w0, wzr
  41251c:	bl	403a98 <log_assert_failed_realm@plt>
  412520:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412524:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412528:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41252c:	add	x1, x1, #0x309
  412530:	add	x2, x2, #0x16d
  412534:	add	x4, x4, #0x367
  412538:	mov	w3, #0x83                  	// #131
  41253c:	mov	w0, wzr
  412540:	bl	403a98 <log_assert_failed_realm@plt>
  412544:	stp	x29, x30, [sp, #-16]!
  412548:	mov	x29, sp
  41254c:	cbz	x0, 412588 <ascii_strlower_n@plt+0xe180>
  412550:	ldrh	w8, [x0, #4]
  412554:	cmp	w8, #0x1
  412558:	b.ne	41257c <ascii_strlower_n@plt+0xe174>  // b.any
  41255c:	ldrh	w8, [x0, #6]
  412560:	cmp	w8, #0x1c
  412564:	b.eq	412570 <ascii_strlower_n@plt+0xe168>  // b.none
  412568:	cmp	w8, #0x1
  41256c:	b.ne	41257c <ascii_strlower_n@plt+0xe174>  // b.any
  412570:	mov	w0, #0x1                   	// #1
  412574:	ldp	x29, x30, [sp], #16
  412578:	ret
  41257c:	mov	w0, wzr
  412580:	ldp	x29, x30, [sp], #16
  412584:	ret
  412588:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41258c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412590:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412594:	add	x1, x1, #0xd96
  412598:	add	x2, x2, #0x16d
  41259c:	add	x4, x4, #0x3a2
  4125a0:	mov	w3, #0xa1                  	// #161
  4125a4:	bl	403a98 <log_assert_failed_realm@plt>
  4125a8:	stp	x29, x30, [sp, #-48]!
  4125ac:	stp	x22, x21, [sp, #16]
  4125b0:	stp	x20, x19, [sp, #32]
  4125b4:	mov	x29, sp
  4125b8:	cbz	x0, 412654 <ascii_strlower_n@plt+0xe24c>
  4125bc:	ldrh	w8, [x0, #6]
  4125c0:	mov	x19, x0
  4125c4:	cmp	w8, #0xc
  4125c8:	b.ne	41260c <ascii_strlower_n@plt+0xe204>  // b.any
  4125cc:	ldr	x8, [x19, #8]
  4125d0:	add	x21, x19, #0x10
  4125d4:	cmp	x8, #0x0
  4125d8:	csel	x20, x21, x8, eq  // eq = none
  4125dc:	mov	x0, x20
  4125e0:	bl	4040e8 <dns_name_is_root@plt>
  4125e4:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4125e8:	add	x22, x22, #0x3a0
  4125ec:	tst	w0, #0x1
  4125f0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4125f4:	csel	x0, x22, x20, ne  // ne = any
  4125f8:	add	x1, x1, #0x418
  4125fc:	bl	404238 <dns_name_endswith@plt>
  412600:	cbz	w0, 412614 <ascii_strlower_n@plt+0xe20c>
  412604:	mov	w0, #0x1                   	// #1
  412608:	b	412644 <ascii_strlower_n@plt+0xe23c>
  41260c:	mov	w0, wzr
  412610:	b	412644 <ascii_strlower_n@plt+0xe23c>
  412614:	ldr	x8, [x19, #8]
  412618:	cmp	x8, #0x0
  41261c:	csel	x19, x21, x8, eq  // eq = none
  412620:	mov	x0, x19
  412624:	bl	4040e8 <dns_name_is_root@plt>
  412628:	tst	w0, #0x1
  41262c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412630:	csel	x0, x22, x19, ne  // ne = any
  412634:	add	x1, x1, #0x423
  412638:	bl	404238 <dns_name_endswith@plt>
  41263c:	cmp	w0, #0x0
  412640:	cset	w0, ne  // ne = any
  412644:	ldp	x20, x19, [sp, #32]
  412648:	ldp	x22, x21, [sp, #16]
  41264c:	ldp	x29, x30, [sp], #48
  412650:	ret
  412654:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  412658:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41265c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412660:	add	x1, x1, #0xd96
  412664:	add	x2, x2, #0x16d
  412668:	add	x4, x4, #0x3dc
  41266c:	mov	w3, #0xa9                  	// #169
  412670:	bl	403a98 <log_assert_failed_realm@plt>
  412674:	stp	x29, x30, [sp, #-64]!
  412678:	cmp	x0, x1
  41267c:	str	x23, [sp, #16]
  412680:	stp	x22, x21, [sp, #32]
  412684:	stp	x20, x19, [sp, #48]
  412688:	mov	x29, sp
  41268c:	b.eq	4126ec <ascii_strlower_n@plt+0xe2e4>  // b.none
  412690:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412694:	mov	x19, x1
  412698:	mov	x20, x0
  41269c:	add	x23, x23, #0x3a0
  4126a0:	cbz	x0, 4126f4 <ascii_strlower_n@plt+0xe2ec>
  4126a4:	ldr	x8, [x20, #8]
  4126a8:	add	x9, x20, #0x10
  4126ac:	cmp	x8, #0x0
  4126b0:	csel	x21, x9, x8, eq  // eq = none
  4126b4:	mov	x0, x21
  4126b8:	bl	4040e8 <dns_name_is_root@plt>
  4126bc:	tst	w0, #0x1
  4126c0:	csel	x21, x23, x21, ne  // ne = any
  4126c4:	cbz	x19, 4126fc <ascii_strlower_n@plt+0xe2f4>
  4126c8:	ldr	x8, [x19, #8]
  4126cc:	add	x9, x19, #0x10
  4126d0:	cmp	x8, #0x0
  4126d4:	csel	x22, x9, x8, eq  // eq = none
  4126d8:	mov	x0, x22
  4126dc:	bl	4040e8 <dns_name_is_root@plt>
  4126e0:	tst	w0, #0x1
  4126e4:	csel	x1, x23, x22, ne  // ne = any
  4126e8:	b	412700 <ascii_strlower_n@plt+0xe2f8>
  4126ec:	mov	w0, #0x1                   	// #1
  4126f0:	b	412738 <ascii_strlower_n@plt+0xe330>
  4126f4:	mov	x21, xzr
  4126f8:	cbnz	x19, 4126c8 <ascii_strlower_n@plt+0xe2c0>
  4126fc:	mov	x1, xzr
  412700:	mov	x0, x21
  412704:	bl	404248 <dns_name_equal@plt>
  412708:	cmp	w0, #0x1
  41270c:	b.lt	412738 <ascii_strlower_n@plt+0xe330>  // b.tstop
  412710:	ldrh	w8, [x20, #4]
  412714:	ldrh	w9, [x19, #4]
  412718:	cmp	w8, w9
  41271c:	b.ne	412734 <ascii_strlower_n@plt+0xe32c>  // b.any
  412720:	ldrh	w8, [x20, #6]
  412724:	ldrh	w9, [x19, #6]
  412728:	cmp	w8, w9
  41272c:	cset	w0, eq  // eq = none
  412730:	b	412738 <ascii_strlower_n@plt+0xe330>
  412734:	mov	w0, wzr
  412738:	ldp	x20, x19, [sp, #48]
  41273c:	ldp	x22, x21, [sp, #32]
  412740:	ldr	x23, [sp, #16]
  412744:	ldp	x29, x30, [sp], #64
  412748:	ret
  41274c:	stp	x29, x30, [sp, #-80]!
  412750:	str	x25, [sp, #16]
  412754:	stp	x24, x23, [sp, #32]
  412758:	stp	x22, x21, [sp, #48]
  41275c:	stp	x20, x19, [sp, #64]
  412760:	mov	x29, sp
  412764:	cbz	x0, 4128b4 <ascii_strlower_n@plt+0xe4ac>
  412768:	mov	x19, x1
  41276c:	cbz	x1, 4128d4 <ascii_strlower_n@plt+0xe4cc>
  412770:	ldr	x8, [x19, #8]
  412774:	mov	x21, x0
  412778:	cmp	x8, x0
  41277c:	b.eq	4127bc <ascii_strlower_n@plt+0xe3b4>  // b.none
  412780:	ldrh	w10, [x8, #4]
  412784:	ldrh	w9, [x21, #4]
  412788:	mov	x20, x2
  41278c:	cmp	w10, w9
  412790:	b.eq	41279c <ascii_strlower_n@plt+0xe394>  // b.none
  412794:	cmp	w9, #0xff
  412798:	b.ne	4127b4 <ascii_strlower_n@plt+0xe3ac>  // b.any
  41279c:	ldrh	w10, [x8, #6]
  4127a0:	ldrh	w9, [x21, #6]
  4127a4:	cmp	w10, w9
  4127a8:	b.eq	4127c4 <ascii_strlower_n@plt+0xe3bc>  // b.none
  4127ac:	cmp	w9, #0xff
  4127b0:	b.eq	4127c4 <ascii_strlower_n@plt+0xe3bc>  // b.none
  4127b4:	mov	w22, wzr
  4127b8:	b	412898 <ascii_strlower_n@plt+0xe490>
  4127bc:	mov	w22, #0x1                   	// #1
  4127c0:	b	412898 <ascii_strlower_n@plt+0xe490>
  4127c4:	ldr	x9, [x8, #8]
  4127c8:	add	x8, x8, #0x10
  4127cc:	cmp	x9, #0x0
  4127d0:	csel	x22, x8, x9, eq  // eq = none
  4127d4:	mov	x0, x22
  4127d8:	bl	4040e8 <dns_name_is_root@plt>
  4127dc:	ldr	x8, [x21, #8]
  4127e0:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4127e4:	add	x24, x24, #0x3a0
  4127e8:	tst	w0, #0x1
  4127ec:	csel	x22, x24, x22, ne  // ne = any
  4127f0:	add	x25, x21, #0x10
  4127f4:	cmp	x8, #0x0
  4127f8:	csel	x23, x25, x8, eq  // eq = none
  4127fc:	mov	x0, x23
  412800:	bl	4040e8 <dns_name_is_root@plt>
  412804:	tst	w0, #0x1
  412808:	csel	x1, x24, x23, ne  // ne = any
  41280c:	mov	x0, x22
  412810:	bl	404248 <dns_name_equal@plt>
  412814:	mov	w22, w0
  412818:	cbnz	w0, 412898 <ascii_strlower_n@plt+0xe490>
  41281c:	cbz	x20, 4127b4 <ascii_strlower_n@plt+0xe3ac>
  412820:	str	xzr, [x29, #24]
  412824:	ldr	x8, [x21, #8]
  412828:	cmp	x8, #0x0
  41282c:	csel	x21, x25, x8, eq  // eq = none
  412830:	mov	x0, x21
  412834:	bl	4040e8 <dns_name_is_root@plt>
  412838:	tst	w0, #0x1
  41283c:	csel	x0, x24, x21, ne  // ne = any
  412840:	add	x3, x29, #0x18
  412844:	mov	x1, x20
  412848:	mov	w2, wzr
  41284c:	bl	403df8 <dns_name_concat@plt>
  412850:	tbnz	w0, #31, 41288c <ascii_strlower_n@plt+0xe484>
  412854:	ldr	x8, [x19, #8]
  412858:	cbz	x8, 412880 <ascii_strlower_n@plt+0xe478>
  41285c:	ldr	x9, [x8, #8]
  412860:	add	x8, x8, #0x10
  412864:	cmp	x9, #0x0
  412868:	csel	x19, x8, x9, eq  // eq = none
  41286c:	mov	x0, x19
  412870:	bl	4040e8 <dns_name_is_root@plt>
  412874:	tst	w0, #0x1
  412878:	csel	x0, x24, x19, ne  // ne = any
  41287c:	b	412884 <ascii_strlower_n@plt+0xe47c>
  412880:	mov	x0, xzr
  412884:	ldr	x1, [x29, #24]
  412888:	bl	404248 <dns_name_equal@plt>
  41288c:	mov	w22, w0
  412890:	ldr	x0, [x29, #24]
  412894:	bl	4039d8 <free@plt>
  412898:	mov	w0, w22
  41289c:	ldp	x20, x19, [sp, #64]
  4128a0:	ldp	x22, x21, [sp, #48]
  4128a4:	ldp	x24, x23, [sp, #32]
  4128a8:	ldr	x25, [sp, #16]
  4128ac:	ldp	x29, x30, [sp], #80
  4128b0:	ret
  4128b4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4128b8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4128bc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4128c0:	add	x1, x1, #0xd96
  4128c4:	add	x2, x2, #0x16d
  4128c8:	add	x4, x4, #0x42e
  4128cc:	mov	w3, #0xcb                  	// #203
  4128d0:	bl	403a98 <log_assert_failed_realm@plt>
  4128d4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4128d8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4128dc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4128e0:	add	x1, x1, #0x9e6
  4128e4:	add	x2, x2, #0x16d
  4128e8:	add	x4, x4, #0x42e
  4128ec:	mov	w3, #0xcc                  	// #204
  4128f0:	mov	w0, wzr
  4128f4:	bl	403a98 <log_assert_failed_realm@plt>
  4128f8:	sub	sp, sp, #0x50
  4128fc:	stp	x29, x30, [sp, #16]
  412900:	stp	x24, x23, [sp, #32]
  412904:	stp	x22, x21, [sp, #48]
  412908:	stp	x20, x19, [sp, #64]
  41290c:	add	x29, sp, #0x10
  412910:	cbz	x0, 412af4 <ascii_strlower_n@plt+0xe6ec>
  412914:	mov	x19, x1
  412918:	cbz	x1, 412b14 <ascii_strlower_n@plt+0xe70c>
  41291c:	ldrh	w9, [x19, #4]
  412920:	ldrh	w8, [x0, #4]
  412924:	mov	x20, x2
  412928:	mov	x21, x0
  41292c:	cmp	w9, w8
  412930:	b.eq	41293c <ascii_strlower_n@plt+0xe534>  // b.none
  412934:	cmp	w8, #0xff
  412938:	b.ne	412ad4 <ascii_strlower_n@plt+0xe6cc>  // b.any
  41293c:	ldrh	w8, [x19, #6]
  412940:	cmp	w8, #0x27
  412944:	b.eq	4129ac <ascii_strlower_n@plt+0xe5a4>  // b.none
  412948:	cmp	w8, #0x5
  41294c:	b.ne	412ad4 <ascii_strlower_n@plt+0xe6cc>  // b.any
  412950:	ldr	x8, [x21, #8]
  412954:	add	x9, x21, #0x10
  412958:	cmp	x8, #0x0
  41295c:	csel	x22, x9, x8, eq  // eq = none
  412960:	mov	x0, x22
  412964:	bl	4040e8 <dns_name_is_root@plt>
  412968:	ldr	x8, [x19, #8]
  41296c:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412970:	add	x24, x24, #0x3a0
  412974:	tst	w0, #0x1
  412978:	csel	x22, x24, x22, ne  // ne = any
  41297c:	add	x9, x19, #0x10
  412980:	cmp	x8, #0x0
  412984:	csel	x23, x9, x8, eq  // eq = none
  412988:	mov	x0, x23
  41298c:	bl	4040e8 <dns_name_is_root@plt>
  412990:	tst	w0, #0x1
  412994:	csel	x1, x24, x23, ne  // ne = any
  412998:	mov	x0, x22
  41299c:	bl	404248 <dns_name_equal@plt>
  4129a0:	mov	w22, w0
  4129a4:	cbnz	w0, 412ad8 <ascii_strlower_n@plt+0xe6d0>
  4129a8:	b	412a04 <ascii_strlower_n@plt+0xe5fc>
  4129ac:	ldr	x8, [x21, #8]
  4129b0:	add	x9, x21, #0x10
  4129b4:	cmp	x8, #0x0
  4129b8:	csel	x22, x9, x8, eq  // eq = none
  4129bc:	mov	x0, x22
  4129c0:	bl	4040e8 <dns_name_is_root@plt>
  4129c4:	ldr	x8, [x19, #8]
  4129c8:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4129cc:	add	x24, x24, #0x3a0
  4129d0:	tst	w0, #0x1
  4129d4:	csel	x22, x24, x22, ne  // ne = any
  4129d8:	add	x9, x19, #0x10
  4129dc:	cmp	x8, #0x0
  4129e0:	csel	x23, x9, x8, eq  // eq = none
  4129e4:	mov	x0, x23
  4129e8:	bl	4040e8 <dns_name_is_root@plt>
  4129ec:	tst	w0, #0x1
  4129f0:	csel	x1, x24, x23, ne  // ne = any
  4129f4:	mov	x0, x22
  4129f8:	bl	404238 <dns_name_endswith@plt>
  4129fc:	mov	w22, w0
  412a00:	cbnz	w0, 412ad8 <ascii_strlower_n@plt+0xe6d0>
  412a04:	cbz	x20, 412ad4 <ascii_strlower_n@plt+0xe6cc>
  412a08:	str	xzr, [sp, #8]
  412a0c:	ldr	x8, [x21, #8]
  412a10:	add	x9, x21, #0x10
  412a14:	cmp	x8, #0x0
  412a18:	csel	x21, x9, x8, eq  // eq = none
  412a1c:	mov	x0, x21
  412a20:	bl	4040e8 <dns_name_is_root@plt>
  412a24:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412a28:	add	x23, x23, #0x3a0
  412a2c:	tst	w0, #0x1
  412a30:	csel	x0, x23, x21, ne  // ne = any
  412a34:	add	x3, sp, #0x8
  412a38:	mov	x1, x20
  412a3c:	mov	w2, wzr
  412a40:	bl	403df8 <dns_name_concat@plt>
  412a44:	tbnz	w0, #31, 412ab8 <ascii_strlower_n@plt+0xe6b0>
  412a48:	ldrh	w8, [x19, #6]
  412a4c:	cmp	w8, #0x27
  412a50:	b.eq	412a8c <ascii_strlower_n@plt+0xe684>  // b.none
  412a54:	cmp	w8, #0x5
  412a58:	b.ne	412ac4 <ascii_strlower_n@plt+0xe6bc>  // b.any
  412a5c:	ldr	x8, [x19, #8]
  412a60:	ldr	x20, [sp, #8]
  412a64:	add	x9, x19, #0x10
  412a68:	cmp	x8, #0x0
  412a6c:	csel	x19, x9, x8, eq  // eq = none
  412a70:	mov	x0, x19
  412a74:	bl	4040e8 <dns_name_is_root@plt>
  412a78:	tst	w0, #0x1
  412a7c:	csel	x1, x23, x19, ne  // ne = any
  412a80:	mov	x0, x20
  412a84:	bl	404248 <dns_name_equal@plt>
  412a88:	b	412ab8 <ascii_strlower_n@plt+0xe6b0>
  412a8c:	ldr	x8, [x19, #8]
  412a90:	ldr	x20, [sp, #8]
  412a94:	add	x9, x19, #0x10
  412a98:	cmp	x8, #0x0
  412a9c:	csel	x19, x9, x8, eq  // eq = none
  412aa0:	mov	x0, x19
  412aa4:	bl	4040e8 <dns_name_is_root@plt>
  412aa8:	tst	w0, #0x1
  412aac:	csel	x1, x23, x19, ne  // ne = any
  412ab0:	mov	x0, x20
  412ab4:	bl	404238 <dns_name_endswith@plt>
  412ab8:	mov	w22, w0
  412abc:	mov	w19, wzr
  412ac0:	b	412ac8 <ascii_strlower_n@plt+0xe6c0>
  412ac4:	mov	w19, #0x1                   	// #1
  412ac8:	ldr	x0, [sp, #8]
  412acc:	bl	4039d8 <free@plt>
  412ad0:	cbz	w19, 412ad8 <ascii_strlower_n@plt+0xe6d0>
  412ad4:	mov	w22, wzr
  412ad8:	mov	w0, w22
  412adc:	ldp	x20, x19, [sp, #64]
  412ae0:	ldp	x22, x21, [sp, #48]
  412ae4:	ldp	x24, x23, [sp, #32]
  412ae8:	ldp	x29, x30, [sp, #16]
  412aec:	add	sp, sp, #0x50
  412af0:	ret
  412af4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  412af8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412afc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412b00:	add	x1, x1, #0xd96
  412b04:	add	x2, x2, #0x16d
  412b08:	add	x4, x4, #0x487
  412b0c:	mov	w3, #0xef                  	// #239
  412b10:	bl	403a98 <log_assert_failed_realm@plt>
  412b14:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  412b18:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412b1c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412b20:	add	x1, x1, #0xf8
  412b24:	add	x2, x2, #0x16d
  412b28:	add	x4, x4, #0x487
  412b2c:	mov	w3, #0xf0                  	// #240
  412b30:	mov	w0, wzr
  412b34:	bl	403a98 <log_assert_failed_realm@plt>
  412b38:	stp	x29, x30, [sp, #-48]!
  412b3c:	str	x21, [sp, #16]
  412b40:	stp	x20, x19, [sp, #32]
  412b44:	mov	x29, sp
  412b48:	cbz	x1, 412be0 <ascii_strlower_n@plt+0xe7d8>
  412b4c:	cbz	x0, 412c04 <ascii_strlower_n@plt+0xe7fc>
  412b50:	ldrh	w8, [x1, #4]
  412b54:	ldrh	w9, [x0, #4]
  412b58:	mov	x19, x1
  412b5c:	cmp	w8, w9
  412b60:	b.ne	412bcc <ascii_strlower_n@plt+0xe7c4>  // b.any
  412b64:	ldrh	w8, [x19, #6]
  412b68:	cmp	w8, #0x6
  412b6c:	b.ne	412bcc <ascii_strlower_n@plt+0xe7c4>  // b.any
  412b70:	ldr	x8, [x0, #8]
  412b74:	add	x9, x0, #0x10
  412b78:	cmp	x8, #0x0
  412b7c:	csel	x20, x9, x8, eq  // eq = none
  412b80:	mov	x0, x20
  412b84:	bl	4040e8 <dns_name_is_root@plt>
  412b88:	ldr	x8, [x19, #8]
  412b8c:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412b90:	add	x21, x21, #0x3a0
  412b94:	tst	w0, #0x1
  412b98:	csel	x20, x21, x20, ne  // ne = any
  412b9c:	add	x9, x19, #0x10
  412ba0:	cmp	x8, #0x0
  412ba4:	csel	x19, x9, x8, eq  // eq = none
  412ba8:	mov	x0, x19
  412bac:	bl	4040e8 <dns_name_is_root@plt>
  412bb0:	tst	w0, #0x1
  412bb4:	csel	x1, x21, x19, ne  // ne = any
  412bb8:	mov	x0, x20
  412bbc:	ldp	x20, x19, [sp, #32]
  412bc0:	ldr	x21, [sp, #16]
  412bc4:	ldp	x29, x30, [sp], #48
  412bc8:	b	404238 <dns_name_endswith@plt>
  412bcc:	ldp	x20, x19, [sp, #32]
  412bd0:	ldr	x21, [sp, #16]
  412bd4:	mov	w0, wzr
  412bd8:	ldp	x29, x30, [sp], #48
  412bdc:	ret
  412be0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412be4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412be8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412bec:	add	x1, x1, #0x4ef
  412bf0:	add	x2, x2, #0x16d
  412bf4:	add	x4, x4, #0x4f3
  412bf8:	mov	w3, #0x110                 	// #272
  412bfc:	mov	w0, wzr
  412c00:	bl	403a98 <log_assert_failed_realm@plt>
  412c04:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  412c08:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412c0c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412c10:	add	x1, x1, #0xd96
  412c14:	add	x2, x2, #0x16d
  412c18:	add	x4, x4, #0x4f3
  412c1c:	mov	w3, #0x111                 	// #273
  412c20:	bl	403a98 <log_assert_failed_realm@plt>
  412c24:	stp	x29, x30, [sp, #-48]!
  412c28:	str	x21, [sp, #16]
  412c2c:	stp	x20, x19, [sp, #32]
  412c30:	mov	x29, sp
  412c34:	cbz	x0, 412c9c <ascii_strlower_n@plt+0xe894>
  412c38:	ldr	x8, [x0, #8]
  412c3c:	add	x9, x0, #0x10
  412c40:	mov	x20, x0
  412c44:	mov	x19, x1
  412c48:	cmp	x8, #0x0
  412c4c:	csel	x21, x9, x8, eq  // eq = none
  412c50:	mov	x0, x21
  412c54:	bl	4040e8 <dns_name_is_root@plt>
  412c58:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412c5c:	add	x8, x8, #0x3a0
  412c60:	tst	w0, #0x1
  412c64:	csel	x0, x8, x21, ne  // ne = any
  412c68:	mov	x1, x19
  412c6c:	bl	404258 <dns_name_hash_func@plt>
  412c70:	add	x0, x20, #0x4
  412c74:	mov	w1, #0x2                   	// #2
  412c78:	mov	x2, x19
  412c7c:	bl	4041e8 <siphash24_compress@plt>
  412c80:	add	x0, x20, #0x6
  412c84:	mov	x2, x19
  412c88:	ldp	x20, x19, [sp, #32]
  412c8c:	ldr	x21, [sp, #16]
  412c90:	mov	w1, #0x2                   	// #2
  412c94:	ldp	x29, x30, [sp], #48
  412c98:	b	4041e8 <siphash24_compress@plt>
  412c9c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  412ca0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412ca4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412ca8:	add	x1, x1, #0x86a
  412cac:	add	x2, x2, #0x16d
  412cb0:	add	x4, x4, #0xc11
  412cb4:	mov	w3, #0x11f                 	// #287
  412cb8:	bl	403a98 <log_assert_failed_realm@plt>
  412cbc:	stp	x29, x30, [sp, #-64]!
  412cc0:	str	x23, [sp, #16]
  412cc4:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412cc8:	stp	x20, x19, [sp, #48]
  412ccc:	mov	x19, x1
  412cd0:	mov	x20, x0
  412cd4:	add	x23, x23, #0x3a0
  412cd8:	stp	x22, x21, [sp, #32]
  412cdc:	mov	x29, sp
  412ce0:	cbz	x0, 412d2c <ascii_strlower_n@plt+0xe924>
  412ce4:	ldr	x8, [x20, #8]
  412ce8:	add	x9, x20, #0x10
  412cec:	cmp	x8, #0x0
  412cf0:	csel	x21, x9, x8, eq  // eq = none
  412cf4:	mov	x0, x21
  412cf8:	bl	4040e8 <dns_name_is_root@plt>
  412cfc:	tst	w0, #0x1
  412d00:	csel	x21, x23, x21, ne  // ne = any
  412d04:	cbz	x19, 412d34 <ascii_strlower_n@plt+0xe92c>
  412d08:	ldr	x8, [x19, #8]
  412d0c:	add	x9, x19, #0x10
  412d10:	cmp	x8, #0x0
  412d14:	csel	x22, x9, x8, eq  // eq = none
  412d18:	mov	x0, x22
  412d1c:	bl	4040e8 <dns_name_is_root@plt>
  412d20:	tst	w0, #0x1
  412d24:	csel	x1, x23, x22, ne  // ne = any
  412d28:	b	412d38 <ascii_strlower_n@plt+0xe930>
  412d2c:	mov	x21, xzr
  412d30:	cbnz	x19, 412d08 <ascii_strlower_n@plt+0xe900>
  412d34:	mov	x1, xzr
  412d38:	mov	x0, x21
  412d3c:	bl	404268 <dns_name_compare_func@plt>
  412d40:	cbnz	w0, 412d70 <ascii_strlower_n@plt+0xe968>
  412d44:	ldrh	w8, [x20, #6]
  412d48:	ldrh	w9, [x19, #6]
  412d4c:	cmp	w8, w9
  412d50:	cset	w8, hi  // hi = pmore
  412d54:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  412d58:	cbnz	w0, 412d70 <ascii_strlower_n@plt+0xe968>
  412d5c:	ldrh	w8, [x20, #4]
  412d60:	ldrh	w9, [x19, #4]
  412d64:	cmp	w8, w9
  412d68:	cset	w8, hi  // hi = pmore
  412d6c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  412d70:	ldp	x20, x19, [sp, #48]
  412d74:	ldp	x22, x21, [sp, #32]
  412d78:	ldr	x23, [sp, #16]
  412d7c:	ldp	x29, x30, [sp], #64
  412d80:	ret
  412d84:	sub	sp, sp, #0x50
  412d88:	stp	x29, x30, [sp, #16]
  412d8c:	stp	x24, x23, [sp, #32]
  412d90:	stp	x22, x21, [sp, #48]
  412d94:	stp	x20, x19, [sp, #64]
  412d98:	mov	x21, x0
  412d9c:	ldrh	w0, [x0, #4]
  412da0:	add	x29, sp, #0x10
  412da4:	mov	x20, x2
  412da8:	mov	x19, x1
  412dac:	bl	4191e0 <ascii_strlower_n@plt+0x14dd8>
  412db0:	ldrh	w8, [x21, #6]
  412db4:	mov	x23, x0
  412db8:	mov	w0, w8
  412dbc:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  412dc0:	mov	x22, x0
  412dc4:	cbz	x21, 412df4 <ascii_strlower_n@plt+0xe9ec>
  412dc8:	ldr	x8, [x21, #8]
  412dcc:	add	x9, x21, #0x10
  412dd0:	cmp	x8, #0x0
  412dd4:	csel	x24, x9, x8, eq  // eq = none
  412dd8:	mov	x0, x24
  412ddc:	bl	4040e8 <dns_name_is_root@plt>
  412de0:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412de4:	add	x8, x8, #0x3a0
  412de8:	tst	w0, #0x1
  412dec:	csel	x3, x8, x24, ne  // ne = any
  412df0:	b	412df8 <ascii_strlower_n@plt+0xe9f0>
  412df4:	mov	x3, xzr
  412df8:	adrp	x8, 41a000 <ascii_strlower_n@plt+0x15bf8>
  412dfc:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412e00:	add	x8, x8, #0x9c
  412e04:	cmp	x23, #0x0
  412e08:	add	x9, x9, #0x557
  412e0c:	csel	x4, x8, x23, eq  // eq = none
  412e10:	csel	x5, x8, x9, ne  // ne = any
  412e14:	cbz	x23, 412e20 <ascii_strlower_n@plt+0xea18>
  412e18:	mov	w6, wzr
  412e1c:	b	412e24 <ascii_strlower_n@plt+0xea1c>
  412e20:	ldrh	w6, [x21, #4]
  412e24:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412e28:	cmp	x22, #0x0
  412e2c:	add	x9, x9, #0x55d
  412e30:	csel	x7, x8, x22, eq  // eq = none
  412e34:	csel	x8, x8, x9, ne  // ne = any
  412e38:	cbz	x22, 412e44 <ascii_strlower_n@plt+0xea3c>
  412e3c:	mov	w9, wzr
  412e40:	b	412e48 <ascii_strlower_n@plt+0xea40>
  412e44:	ldrh	w9, [x21, #6]
  412e48:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412e4c:	add	x2, x2, #0x542
  412e50:	mov	x0, x19
  412e54:	mov	x1, x20
  412e58:	str	w9, [sp, #8]
  412e5c:	str	x8, [sp]
  412e60:	bl	404278 <snprintf@plt>
  412e64:	mov	x0, x19
  412e68:	ldp	x20, x19, [sp, #64]
  412e6c:	ldp	x22, x21, [sp, #48]
  412e70:	ldp	x24, x23, [sp, #32]
  412e74:	ldp	x29, x30, [sp, #16]
  412e78:	add	sp, sp, #0x50
  412e7c:	ret
  412e80:	stp	x29, x30, [sp, #-80]!
  412e84:	str	x25, [sp, #16]
  412e88:	stp	x24, x23, [sp, #32]
  412e8c:	stp	x22, x21, [sp, #48]
  412e90:	stp	x20, x19, [sp, #64]
  412e94:	mov	x29, sp
  412e98:	cbz	x0, 413030 <ascii_strlower_n@plt+0xec28>
  412e9c:	mov	x20, x1
  412ea0:	cbz	x1, 413050 <ascii_strlower_n@plt+0xec48>
  412ea4:	ldr	x23, [x0]
  412ea8:	mov	x19, x0
  412eac:	cbz	x23, 412f80 <ascii_strlower_n@plt+0xeb78>
  412eb0:	ldr	x24, [x20]
  412eb4:	cbz	x24, 412f80 <ascii_strlower_n@plt+0xeb78>
  412eb8:	ldr	w8, [x23]
  412ebc:	cmn	w8, #0x1
  412ec0:	b.eq	412f80 <ascii_strlower_n@plt+0xeb78>  // b.none
  412ec4:	ldr	w8, [x24]
  412ec8:	cmn	w8, #0x1
  412ecc:	b.eq	412f80 <ascii_strlower_n@plt+0xeb78>  // b.none
  412ed0:	cmp	x23, x24
  412ed4:	b.eq	413028 <ascii_strlower_n@plt+0xec20>  // b.none
  412ed8:	ldr	x8, [x23, #8]
  412edc:	add	x9, x23, #0x10
  412ee0:	cmp	x8, #0x0
  412ee4:	csel	x21, x9, x8, eq  // eq = none
  412ee8:	mov	x0, x21
  412eec:	bl	4040e8 <dns_name_is_root@plt>
  412ef0:	ldr	x8, [x24, #8]
  412ef4:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412ef8:	add	x25, x25, #0x3a0
  412efc:	tst	w0, #0x1
  412f00:	csel	x21, x25, x21, ne  // ne = any
  412f04:	add	x9, x24, #0x10
  412f08:	cmp	x8, #0x0
  412f0c:	csel	x22, x9, x8, eq  // eq = none
  412f10:	mov	x0, x22
  412f14:	bl	4040e8 <dns_name_is_root@plt>
  412f18:	tst	w0, #0x1
  412f1c:	csel	x1, x25, x22, ne  // ne = any
  412f20:	mov	x0, x21
  412f24:	bl	404248 <dns_name_equal@plt>
  412f28:	cmp	w0, #0x1
  412f2c:	b.lt	412f80 <ascii_strlower_n@plt+0xeb78>  // b.tstop
  412f30:	ldrh	w8, [x23, #4]
  412f34:	ldrh	w9, [x24, #4]
  412f38:	cmp	w8, w9
  412f3c:	b.ne	412f80 <ascii_strlower_n@plt+0xeb78>  // b.any
  412f40:	ldrh	w8, [x23, #6]
  412f44:	ldrh	w9, [x24, #6]
  412f48:	cmp	w8, w9
  412f4c:	b.ne	412f80 <ascii_strlower_n@plt+0xeb78>  // b.any
  412f50:	ldr	x21, [x19]
  412f54:	ldr	x22, [x20]
  412f58:	ldr	w8, [x21]
  412f5c:	ldr	w9, [x22]
  412f60:	cmp	w8, w9
  412f64:	b.ls	412f9c <ascii_strlower_n@plt+0xeb94>  // b.plast
  412f68:	cbz	x22, 412fd0 <ascii_strlower_n@plt+0xebc8>
  412f6c:	subs	w8, w9, #0x1
  412f70:	b.eq	412fbc <ascii_strlower_n@plt+0xebb4>  // b.none
  412f74:	cbz	w9, 413074 <ascii_strlower_n@plt+0xec6c>
  412f78:	str	w8, [x22]
  412f7c:	b	412fd0 <ascii_strlower_n@plt+0xebc8>
  412f80:	mov	w0, wzr
  412f84:	ldp	x20, x19, [sp, #64]
  412f88:	ldp	x22, x21, [sp, #48]
  412f8c:	ldp	x24, x23, [sp, #32]
  412f90:	ldr	x25, [sp, #16]
  412f94:	ldp	x29, x30, [sp], #80
  412f98:	ret
  412f9c:	cbz	x21, 413008 <ascii_strlower_n@plt+0xec00>
  412fa0:	subs	w9, w8, #0x1
  412fa4:	b.eq	412ff4 <ascii_strlower_n@plt+0xebec>  // b.none
  412fa8:	cbz	w8, 413074 <ascii_strlower_n@plt+0xec6c>
  412fac:	cmn	w8, #0x1
  412fb0:	b.eq	4130e0 <ascii_strlower_n@plt+0xecd8>  // b.none
  412fb4:	str	w9, [x21]
  412fb8:	b	413008 <ascii_strlower_n@plt+0xec00>
  412fbc:	ldr	x0, [x22, #8]
  412fc0:	bl	4039d8 <free@plt>
  412fc4:	mov	x0, x22
  412fc8:	bl	4039d8 <free@plt>
  412fcc:	ldr	x21, [x19]
  412fd0:	cbz	x21, 412fec <ascii_strlower_n@plt+0xebe4>
  412fd4:	ldr	w8, [x21]
  412fd8:	cbz	w8, 413098 <ascii_strlower_n@plt+0xec90>
  412fdc:	cmn	w8, #0x1
  412fe0:	b.eq	4130bc <ascii_strlower_n@plt+0xecb4>  // b.none
  412fe4:	add	w8, w8, #0x1
  412fe8:	str	w8, [x21]
  412fec:	str	x21, [x20]
  412ff0:	b	413028 <ascii_strlower_n@plt+0xec20>
  412ff4:	ldr	x0, [x21, #8]
  412ff8:	bl	4039d8 <free@plt>
  412ffc:	mov	x0, x21
  413000:	bl	4039d8 <free@plt>
  413004:	ldr	x22, [x20]
  413008:	cbz	x22, 413024 <ascii_strlower_n@plt+0xec1c>
  41300c:	ldr	w8, [x22]
  413010:	cbz	w8, 413098 <ascii_strlower_n@plt+0xec90>
  413014:	cmn	w8, #0x1
  413018:	b.eq	4130bc <ascii_strlower_n@plt+0xecb4>  // b.none
  41301c:	add	w8, w8, #0x1
  413020:	str	w8, [x22]
  413024:	str	x22, [x19]
  413028:	mov	w0, #0x1                   	// #1
  41302c:	b	412f84 <ascii_strlower_n@plt+0xeb7c>
  413030:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413034:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413038:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41303c:	add	x1, x1, #0x562
  413040:	add	x2, x2, #0x16d
  413044:	add	x4, x4, #0x564
  413048:	mov	w3, #0x14d                 	// #333
  41304c:	bl	403a98 <log_assert_failed_realm@plt>
  413050:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  413054:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413058:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41305c:	add	x1, x1, #0x947
  413060:	add	x2, x2, #0x16d
  413064:	add	x4, x4, #0x564
  413068:	mov	w3, #0x14e                 	// #334
  41306c:	mov	w0, wzr
  413070:	bl	403a98 <log_assert_failed_realm@plt>
  413074:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413078:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41307c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413080:	add	x1, x1, #0x35a
  413084:	add	x2, x2, #0x16d
  413088:	add	x4, x4, #0x367
  41308c:	mov	w3, #0x84                  	// #132
  413090:	mov	w0, wzr
  413094:	bl	403a98 <log_assert_failed_realm@plt>
  413098:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41309c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130a0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130a4:	add	x1, x1, #0x35a
  4130a8:	add	x2, x2, #0x16d
  4130ac:	add	x4, x4, #0x323
  4130b0:	mov	w3, #0x79                  	// #121
  4130b4:	mov	w0, wzr
  4130b8:	bl	403a98 <log_assert_failed_realm@plt>
  4130bc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130c0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130c4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130c8:	add	x1, x1, #0x309
  4130cc:	add	x2, x2, #0x16d
  4130d0:	add	x4, x4, #0x323
  4130d4:	mov	w3, #0x77                  	// #119
  4130d8:	mov	w0, wzr
  4130dc:	bl	403a98 <log_assert_failed_realm@plt>
  4130e0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130e4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130e8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4130ec:	add	x1, x1, #0x309
  4130f0:	add	x2, x2, #0x16d
  4130f4:	add	x4, x4, #0x367
  4130f8:	mov	w3, #0x83                  	// #131
  4130fc:	mov	w0, wzr
  413100:	bl	403a98 <log_assert_failed_realm@plt>
  413104:	stp	x29, x30, [sp, #-32]!
  413108:	stp	x20, x19, [sp, #16]
  41310c:	mov	x19, x0
  413110:	mov	w0, #0x1                   	// #1
  413114:	mov	w1, #0x80                  	// #128
  413118:	mov	x29, sp
  41311c:	mov	w20, #0x1                   	// #1
  413120:	bl	404068 <calloc@plt>
  413124:	cbz	x0, 413154 <ascii_strlower_n@plt+0xed4c>
  413128:	str	w20, [x0]
  41312c:	cbz	x19, 413148 <ascii_strlower_n@plt+0xed40>
  413130:	ldr	w8, [x19]
  413134:	cbz	w8, 413160 <ascii_strlower_n@plt+0xed58>
  413138:	cmn	w8, #0x1
  41313c:	b.eq	413184 <ascii_strlower_n@plt+0xed7c>  // b.none
  413140:	add	w8, w8, #0x1
  413144:	str	w8, [x19]
  413148:	mov	x8, #0xffffffffffffffff    	// #-1
  41314c:	str	x19, [x0, #8]
  413150:	stp	x8, x8, [x0, #32]
  413154:	ldp	x20, x19, [sp, #16]
  413158:	ldp	x29, x30, [sp], #32
  41315c:	ret
  413160:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413164:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413168:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41316c:	add	x1, x1, #0x35a
  413170:	add	x2, x2, #0x16d
  413174:	add	x4, x4, #0x323
  413178:	mov	w3, #0x79                  	// #121
  41317c:	mov	w0, wzr
  413180:	bl	403a98 <log_assert_failed_realm@plt>
  413184:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413188:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41318c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413190:	add	x1, x1, #0x309
  413194:	add	x2, x2, #0x16d
  413198:	add	x4, x4, #0x323
  41319c:	mov	w3, #0x77                  	// #119
  4131a0:	mov	w0, wzr
  4131a4:	bl	403a98 <log_assert_failed_realm@plt>
  4131a8:	stp	x29, x30, [sp, #-64]!
  4131ac:	str	x23, [sp, #16]
  4131b0:	stp	x22, x21, [sp, #32]
  4131b4:	stp	x20, x19, [sp, #48]
  4131b8:	mov	x29, sp
  4131bc:	cbz	x2, 41329c <ascii_strlower_n@plt+0xee94>
  4131c0:	mov	w22, w0
  4131c4:	mov	x0, x2
  4131c8:	mov	x20, x2
  4131cc:	mov	w21, w1
  4131d0:	bl	403d28 <strlen@plt>
  4131d4:	add	x1, x0, #0x11
  4131d8:	mov	w0, #0x1                   	// #1
  4131dc:	mov	w23, #0x1                   	// #1
  4131e0:	bl	404068 <calloc@plt>
  4131e4:	cbz	x0, 413260 <ascii_strlower_n@plt+0xee58>
  4131e8:	mov	x19, x0
  4131ec:	str	w23, [x0]
  4131f0:	strh	w22, [x0, #4]
  4131f4:	strh	w21, [x0, #6]
  4131f8:	add	x0, x0, #0x10
  4131fc:	mov	x1, x20
  413200:	bl	404218 <strcpy@plt>
  413204:	mov	w0, #0x1                   	// #1
  413208:	mov	w1, #0x80                  	// #128
  41320c:	bl	404068 <calloc@plt>
  413210:	mov	x20, x0
  413214:	cbz	x0, 413268 <ascii_strlower_n@plt+0xee60>
  413218:	ldr	w8, [x19]
  41321c:	mov	w9, #0x1                   	// #1
  413220:	str	w9, [x20]
  413224:	cbz	w8, 413308 <ascii_strlower_n@plt+0xef00>
  413228:	cmn	w8, #0x1
  41322c:	b.eq	41332c <ascii_strlower_n@plt+0xef24>  // b.none
  413230:	add	w8, w8, #0x1
  413234:	mov	x9, #0xffffffffffffffff    	// #-1
  413238:	str	x19, [x20, #8]
  41323c:	str	w8, [x19]
  413240:	stp	x9, x9, [x20, #32]
  413244:	subs	w9, w8, #0x1
  413248:	b.eq	413274 <ascii_strlower_n@plt+0xee6c>  // b.none
  41324c:	cbz	w8, 4132c0 <ascii_strlower_n@plt+0xeeb8>
  413250:	cmn	w8, #0x1
  413254:	b.eq	4132e4 <ascii_strlower_n@plt+0xeedc>  // b.none
  413258:	str	w9, [x19]
  41325c:	b	413284 <ascii_strlower_n@plt+0xee7c>
  413260:	mov	x20, xzr
  413264:	b	413284 <ascii_strlower_n@plt+0xee7c>
  413268:	ldr	w8, [x19]
  41326c:	subs	w9, w8, #0x1
  413270:	b.ne	41324c <ascii_strlower_n@plt+0xee44>  // b.any
  413274:	ldr	x0, [x19, #8]
  413278:	bl	4039d8 <free@plt>
  41327c:	mov	x0, x19
  413280:	bl	4039d8 <free@plt>
  413284:	mov	x0, x20
  413288:	ldp	x20, x19, [sp, #48]
  41328c:	ldp	x22, x21, [sp, #32]
  413290:	ldr	x23, [sp, #16]
  413294:	ldp	x29, x30, [sp], #64
  413298:	ret
  41329c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4132a0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132a4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132a8:	add	x1, x1, #0x137
  4132ac:	add	x2, x2, #0x16d
  4132b0:	add	x4, x4, #0x18b
  4132b4:	mov	w3, #0x17                  	// #23
  4132b8:	mov	w0, wzr
  4132bc:	bl	403a98 <log_assert_failed_realm@plt>
  4132c0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132c4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132c8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132cc:	add	x1, x1, #0x35a
  4132d0:	add	x2, x2, #0x16d
  4132d4:	add	x4, x4, #0x367
  4132d8:	mov	w3, #0x84                  	// #132
  4132dc:	mov	w0, wzr
  4132e0:	bl	403a98 <log_assert_failed_realm@plt>
  4132e4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132e8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132ec:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4132f0:	add	x1, x1, #0x309
  4132f4:	add	x2, x2, #0x16d
  4132f8:	add	x4, x4, #0x367
  4132fc:	mov	w3, #0x83                  	// #131
  413300:	mov	w0, wzr
  413304:	bl	403a98 <log_assert_failed_realm@plt>
  413308:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41330c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413310:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413314:	add	x1, x1, #0x35a
  413318:	add	x2, x2, #0x16d
  41331c:	add	x4, x4, #0x323
  413320:	mov	w3, #0x79                  	// #121
  413324:	mov	w0, wzr
  413328:	bl	403a98 <log_assert_failed_realm@plt>
  41332c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413330:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413334:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413338:	add	x1, x1, #0x309
  41333c:	add	x2, x2, #0x16d
  413340:	add	x4, x4, #0x323
  413344:	mov	w3, #0x77                  	// #119
  413348:	mov	w0, wzr
  41334c:	bl	403a98 <log_assert_failed_realm@plt>
  413350:	stp	x29, x30, [sp, #-16]!
  413354:	mov	x29, sp
  413358:	cbz	x0, 41336c <ascii_strlower_n@plt+0xef64>
  41335c:	ldr	w8, [x0]
  413360:	cbz	w8, 413374 <ascii_strlower_n@plt+0xef6c>
  413364:	add	w8, w8, #0x1
  413368:	str	w8, [x0]
  41336c:	ldp	x29, x30, [sp], #16
  413370:	ret
  413374:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  413378:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41337c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413380:	add	x1, x1, #0x4e1
  413384:	add	x2, x2, #0x16d
  413388:	add	x4, x4, #0x5a8
  41338c:	mov	w3, #0x1ec                 	// #492
  413390:	mov	w0, wzr
  413394:	bl	403a98 <log_assert_failed_realm@plt>
  413398:	stp	x29, x30, [sp, #-32]!
  41339c:	stp	x20, x19, [sp, #16]
  4133a0:	mov	x29, sp
  4133a4:	cbz	x0, 413468 <ascii_strlower_n@plt+0xf060>
  4133a8:	ldr	w8, [x0]
  4133ac:	mov	x19, x0
  4133b0:	cbz	w8, 4134f8 <ascii_strlower_n@plt+0xf0f0>
  4133b4:	subs	w8, w8, #0x1
  4133b8:	str	w8, [x19]
  4133bc:	b.ne	413468 <ascii_strlower_n@plt+0xf060>  // b.any
  4133c0:	ldr	x8, [x19, #8]
  4133c4:	cbz	x8, 413458 <ascii_strlower_n@plt+0xf050>
  4133c8:	ldrh	w9, [x8, #6]
  4133cc:	sub	w8, w9, #0x1
  4133d0:	cmp	w8, #0x62
  4133d4:	b.hi	413494 <ascii_strlower_n@plt+0xf08c>  // b.pmore
  4133d8:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4133dc:	add	x9, x9, #0xa62
  4133e0:	adr	x10, 4133f0 <ascii_strlower_n@plt+0xefe8>
  4133e4:	ldrb	w11, [x9, x8]
  4133e8:	add	x10, x10, x11, lsl #2
  4133ec:	br	x10
  4133f0:	ldr	x0, [x19, #80]
  4133f4:	b	413404 <ascii_strlower_n@plt+0xeffc>
  4133f8:	ldr	x0, [x19, #80]
  4133fc:	bl	4039d8 <free@plt>
  413400:	ldr	x0, [x19, #88]
  413404:	bl	4039d8 <free@plt>
  413408:	ldrb	w8, [x19, #48]
  41340c:	tbz	w8, #0, 413418 <ascii_strlower_n@plt+0xf010>
  413410:	ldr	x0, [x19, #80]
  413414:	bl	4039d8 <free@plt>
  413418:	ldr	x0, [x19, #56]
  41341c:	bl	4039d8 <free@plt>
  413420:	ldr	x20, [x19, #8]
  413424:	cbz	x20, 413458 <ascii_strlower_n@plt+0xf050>
  413428:	ldr	w9, [x20]
  41342c:	subs	w8, w9, #0x1
  413430:	b.eq	413448 <ascii_strlower_n@plt+0xf040>  // b.none
  413434:	cbz	w9, 41351c <ascii_strlower_n@plt+0xf114>
  413438:	cmn	w9, #0x1
  41343c:	b.eq	413540 <ascii_strlower_n@plt+0xf138>  // b.none
  413440:	str	w8, [x20]
  413444:	b	413458 <ascii_strlower_n@plt+0xf050>
  413448:	ldr	x0, [x20, #8]
  41344c:	bl	4039d8 <free@plt>
  413450:	mov	x0, x20
  413454:	bl	4039d8 <free@plt>
  413458:	ldr	x0, [x19, #16]
  41345c:	bl	4039d8 <free@plt>
  413460:	mov	x0, x19
  413464:	bl	4039d8 <free@plt>
  413468:	ldp	x20, x19, [sp, #16]
  41346c:	mov	x0, xzr
  413470:	ldp	x29, x30, [sp], #32
  413474:	ret
  413478:	ldr	x0, [x19, #80]
  41347c:	cbz	x0, 413408 <ascii_strlower_n@plt+0xf000>
  413480:	ldr	x20, [x0, #8]
  413484:	bl	4039d8 <free@plt>
  413488:	mov	x0, x20
  41348c:	cbnz	x20, 413480 <ascii_strlower_n@plt+0xf078>
  413490:	b	413408 <ascii_strlower_n@plt+0xf000>
  413494:	cmp	w9, #0x101
  413498:	b.ne	4134ac <ascii_strlower_n@plt+0xf0a4>  // b.any
  41349c:	ldr	x0, [x19, #88]
  4134a0:	bl	4039d8 <free@plt>
  4134a4:	ldr	x0, [x19, #96]
  4134a8:	b	413404 <ascii_strlower_n@plt+0xeffc>
  4134ac:	ldrb	w8, [x19, #48]
  4134b0:	tbz	w8, #0, 4133f0 <ascii_strlower_n@plt+0xefe8>
  4134b4:	b	413408 <ascii_strlower_n@plt+0xf000>
  4134b8:	ldr	x0, [x19, #104]
  4134bc:	bl	4039d8 <free@plt>
  4134c0:	ldr	x0, [x19, #112]
  4134c4:	b	413404 <ascii_strlower_n@plt+0xeffc>
  4134c8:	ldr	x0, [x19, #104]
  4134cc:	bl	4039d8 <free@plt>
  4134d0:	ldr	x0, [x19, #88]
  4134d4:	bl	4039d8 <free@plt>
  4134d8:	ldr	x0, [x19, #120]
  4134dc:	bl	404288 <bitmap_free@plt>
  4134e0:	b	413408 <ascii_strlower_n@plt+0xf000>
  4134e4:	ldr	x0, [x19, #80]
  4134e8:	bl	4039d8 <free@plt>
  4134ec:	ldr	x0, [x19, #88]
  4134f0:	bl	404288 <bitmap_free@plt>
  4134f4:	b	413408 <ascii_strlower_n@plt+0xf000>
  4134f8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4134fc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413500:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413504:	add	x1, x1, #0x4e1
  413508:	add	x2, x2, #0x16d
  41350c:	add	x4, x4, #0x5e8
  413510:	mov	w3, #0x1ec                 	// #492
  413514:	mov	w0, wzr
  413518:	bl	403a98 <log_assert_failed_realm@plt>
  41351c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413520:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413524:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413528:	add	x1, x1, #0x35a
  41352c:	add	x2, x2, #0x16d
  413530:	add	x4, x4, #0x367
  413534:	mov	w3, #0x84                  	// #132
  413538:	mov	w0, wzr
  41353c:	bl	403a98 <log_assert_failed_realm@plt>
  413540:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413544:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413548:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41354c:	add	x1, x1, #0x309
  413550:	add	x2, x2, #0x16d
  413554:	add	x4, x4, #0x367
  413558:	mov	w3, #0x83                  	// #131
  41355c:	mov	w0, wzr
  413560:	bl	403a98 <log_assert_failed_realm@plt>
  413564:	stp	x29, x30, [sp, #-64]!
  413568:	mov	x29, sp
  41356c:	str	x23, [sp, #16]
  413570:	stp	x22, x21, [sp, #32]
  413574:	stp	x20, x19, [sp, #48]
  413578:	str	xzr, [x29, #24]
  41357c:	cbz	x0, 413698 <ascii_strlower_n@plt+0xf290>
  413580:	mov	x8, x2
  413584:	cbz	x2, 4136b8 <ascii_strlower_n@plt+0xf2b0>
  413588:	mov	x22, x3
  41358c:	cbz	x3, 4136dc <ascii_strlower_n@plt+0xf2d4>
  413590:	mov	x21, x0
  413594:	add	x2, x29, #0x18
  413598:	mov	w0, w1
  41359c:	mov	x1, x8
  4135a0:	bl	404298 <dns_name_reverse@plt>
  4135a4:	tbnz	w0, #31, 413620 <ascii_strlower_n@plt+0xf218>
  4135a8:	ldr	x20, [x29, #24]
  4135ac:	cbz	x20, 413700 <ascii_strlower_n@plt+0xf2f8>
  4135b0:	mov	w0, #0x1                   	// #1
  4135b4:	mov	w1, #0x10                  	// #16
  4135b8:	bl	404068 <calloc@plt>
  4135bc:	mov	x19, x0
  4135c0:	cbz	x0, 413630 <ascii_strlower_n@plt+0xf228>
  4135c4:	mov	x8, #0x100000001           	// #4294967297
  4135c8:	movk	x8, #0xc, lsl #48
  4135cc:	mov	w0, #0x1                   	// #1
  4135d0:	mov	w1, #0x80                  	// #128
  4135d4:	stp	x8, x20, [x19]
  4135d8:	str	xzr, [x29, #24]
  4135dc:	mov	w20, #0x1                   	// #1
  4135e0:	bl	404068 <calloc@plt>
  4135e4:	mov	x23, x0
  4135e8:	cbz	x0, 413634 <ascii_strlower_n@plt+0xf22c>
  4135ec:	mov	w8, #0x2                   	// #2
  4135f0:	mov	x9, #0xffffffffffffffff    	// #-1
  4135f4:	mov	x0, x22
  4135f8:	str	w20, [x23]
  4135fc:	str	x19, [x23, #8]
  413600:	str	w8, [x19]
  413604:	stp	x9, x9, [x23, #32]
  413608:	bl	403ae8 <strdup@plt>
  41360c:	str	x0, [x23, #80]
  413610:	cbz	x0, 413634 <ascii_strlower_n@plt+0xf22c>
  413614:	mov	w20, wzr
  413618:	str	x23, [x21]
  41361c:	b	413628 <ascii_strlower_n@plt+0xf220>
  413620:	mov	w20, w0
  413624:	mov	x19, xzr
  413628:	mov	x23, xzr
  41362c:	b	413638 <ascii_strlower_n@plt+0xf230>
  413630:	mov	x23, xzr
  413634:	mov	w20, #0xfffffff4            	// #-12
  413638:	ldr	x0, [x29, #24]
  41363c:	bl	4039d8 <free@plt>
  413640:	cbz	x23, 41364c <ascii_strlower_n@plt+0xf244>
  413644:	mov	x0, x23
  413648:	bl	413398 <ascii_strlower_n@plt+0xef90>
  41364c:	cbz	x19, 413680 <ascii_strlower_n@plt+0xf278>
  413650:	ldr	w9, [x19]
  413654:	subs	w8, w9, #0x1
  413658:	b.eq	413670 <ascii_strlower_n@plt+0xf268>  // b.none
  41365c:	cbz	w9, 413724 <ascii_strlower_n@plt+0xf31c>
  413660:	cmn	w9, #0x1
  413664:	b.eq	413748 <ascii_strlower_n@plt+0xf340>  // b.none
  413668:	str	w8, [x19]
  41366c:	b	413680 <ascii_strlower_n@plt+0xf278>
  413670:	ldr	x0, [x19, #8]
  413674:	bl	4039d8 <free@plt>
  413678:	mov	x0, x19
  41367c:	bl	4039d8 <free@plt>
  413680:	mov	w0, w20
  413684:	ldp	x20, x19, [sp, #48]
  413688:	ldp	x22, x21, [sp, #32]
  41368c:	ldr	x23, [sp, #16]
  413690:	ldp	x29, x30, [sp], #64
  413694:	ret
  413698:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  41369c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136a0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136a4:	add	x1, x1, #0xcb6
  4136a8:	add	x2, x2, #0x16d
  4136ac:	add	x4, x4, #0x62a
  4136b0:	mov	w3, #0x1f4                 	// #500
  4136b4:	bl	403a98 <log_assert_failed_realm@plt>
  4136b8:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4136bc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136c0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136c4:	add	x1, x1, #0x680
  4136c8:	add	x2, x2, #0x16d
  4136cc:	add	x4, x4, #0x62a
  4136d0:	mov	w3, #0x1f5                 	// #501
  4136d4:	mov	w0, wzr
  4136d8:	bl	403a98 <log_assert_failed_realm@plt>
  4136dc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136e0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136e4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4136e8:	add	x1, x1, #0x694
  4136ec:	add	x2, x2, #0x16d
  4136f0:	add	x4, x4, #0x62a
  4136f4:	mov	w3, #0x1f6                 	// #502
  4136f8:	mov	w0, wzr
  4136fc:	bl	403a98 <log_assert_failed_realm@plt>
  413700:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  413704:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413708:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41370c:	add	x1, x1, #0x137
  413710:	add	x2, x2, #0x16d
  413714:	add	x4, x4, #0x2c0
  413718:	mov	w3, #0x62                  	// #98
  41371c:	mov	w0, wzr
  413720:	bl	403a98 <log_assert_failed_realm@plt>
  413724:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413728:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41372c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413730:	add	x1, x1, #0x35a
  413734:	add	x2, x2, #0x16d
  413738:	add	x4, x4, #0x367
  41373c:	mov	w3, #0x84                  	// #132
  413740:	mov	w0, wzr
  413744:	bl	403a98 <log_assert_failed_realm@plt>
  413748:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41374c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413750:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413754:	add	x1, x1, #0x309
  413758:	add	x2, x2, #0x16d
  41375c:	add	x4, x4, #0x367
  413760:	mov	w3, #0x83                  	// #131
  413764:	mov	w0, wzr
  413768:	bl	403a98 <log_assert_failed_realm@plt>
  41376c:	stp	x29, x30, [sp, #-32]!
  413770:	stp	x20, x19, [sp, #16]
  413774:	mov	x29, sp
  413778:	cbz	x0, 413804 <ascii_strlower_n@plt+0xf3fc>
  41377c:	mov	x20, x2
  413780:	cbz	x2, 413824 <ascii_strlower_n@plt+0xf41c>
  413784:	mov	x19, x0
  413788:	cmp	w1, #0x2
  41378c:	b.eq	4137a4 <ascii_strlower_n@plt+0xf39c>  // b.none
  413790:	cmp	w1, #0xa
  413794:	b.eq	4137c8 <ascii_strlower_n@plt+0xf3c0>  // b.none
  413798:	cbz	w1, 413848 <ascii_strlower_n@plt+0xf440>
  41379c:	mov	w0, #0xffffff9f            	// #-97
  4137a0:	b	4137f8 <ascii_strlower_n@plt+0xf3f0>
  4137a4:	mov	w0, #0x1                   	// #1
  4137a8:	mov	w1, #0x1                   	// #1
  4137ac:	mov	x2, x3
  4137b0:	bl	4131a8 <ascii_strlower_n@plt+0xeda0>
  4137b4:	cbz	x0, 4137f4 <ascii_strlower_n@plt+0xf3ec>
  4137b8:	ldr	w9, [x20]
  4137bc:	mov	x8, x0
  4137c0:	str	w9, [x0, #80]
  4137c4:	b	4137e8 <ascii_strlower_n@plt+0xf3e0>
  4137c8:	mov	w0, #0x1                   	// #1
  4137cc:	mov	w1, #0x1c                  	// #28
  4137d0:	mov	x2, x3
  4137d4:	bl	4131a8 <ascii_strlower_n@plt+0xeda0>
  4137d8:	cbz	x0, 4137f4 <ascii_strlower_n@plt+0xf3ec>
  4137dc:	ldr	q0, [x20]
  4137e0:	mov	x8, x0
  4137e4:	str	q0, [x0, #80]
  4137e8:	mov	w0, wzr
  4137ec:	str	x8, [x19]
  4137f0:	b	4137f8 <ascii_strlower_n@plt+0xf3f0>
  4137f4:	mov	w0, #0xfffffff4            	// #-12
  4137f8:	ldp	x20, x19, [sp, #16]
  4137fc:	ldp	x29, x30, [sp], #32
  413800:	ret
  413804:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  413808:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41380c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413810:	add	x1, x1, #0xcb6
  413814:	add	x2, x2, #0x16d
  413818:	add	x4, x4, #0x69d
  41381c:	mov	w3, #0x212                 	// #530
  413820:	bl	403a98 <log_assert_failed_realm@plt>
  413824:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  413828:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41382c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413830:	add	x1, x1, #0x680
  413834:	add	x2, x2, #0x16d
  413838:	add	x4, x4, #0x69d
  41383c:	mov	w3, #0x213                 	// #531
  413840:	mov	w0, wzr
  413844:	bl	403a98 <log_assert_failed_realm@plt>
  413848:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41384c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413850:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413854:	add	x1, x1, #0x707
  413858:	add	x2, x2, #0x16d
  41385c:	add	x4, x4, #0x69d
  413860:	mov	w3, #0x214                 	// #532
  413864:	mov	w0, wzr
  413868:	bl	403a98 <log_assert_failed_realm@plt>
  41386c:	stp	x29, x30, [sp, #-32]!
  413870:	stp	x20, x19, [sp, #16]
  413874:	ldrb	w8, [x0, #48]
  413878:	ldrb	w9, [x1, #48]
  41387c:	mov	x29, sp
  413880:	and	w8, w8, #0x1
  413884:	and	w9, w9, #0x1
  413888:	cmp	w8, w9
  41388c:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413890:	mov	x19, x1
  413894:	mov	x20, x0
  413898:	cbnz	w8, 4139b0 <ascii_strlower_n@plt+0xf5a8>
  41389c:	ldr	x8, [x20, #8]
  4138a0:	ldrh	w9, [x8, #6]
  4138a4:	sub	w8, w9, #0x1
  4138a8:	cmp	w8, #0x62
  4138ac:	b.hi	413960 <ascii_strlower_n@plt+0xf558>  // b.pmore
  4138b0:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4138b4:	add	x9, x9, #0xac6
  4138b8:	adr	x10, 4138c8 <ascii_strlower_n@plt+0xf4c0>
  4138bc:	ldrh	w11, [x9, x8, lsl #1]
  4138c0:	add	x10, x10, x11, lsl #2
  4138c4:	br	x10
  4138c8:	ldr	x0, [x20, #80]
  4138cc:	ldr	x1, [x19, #80]
  4138d0:	ldp	x20, x19, [sp, #16]
  4138d4:	ldp	x29, x30, [sp], #32
  4138d8:	b	404248 <dns_name_equal@plt>
  4138dc:	ldrh	w8, [x20, #80]
  4138e0:	ldrh	w9, [x19, #80]
  4138e4:	cmp	w8, w9
  4138e8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  4138ec:	ldrb	w8, [x20, #82]
  4138f0:	ldrb	w9, [x19, #82]
  4138f4:	cmp	w8, w9
  4138f8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  4138fc:	ldrb	w8, [x20, #83]
  413900:	ldrb	w9, [x19, #83]
  413904:	cmp	w8, w9
  413908:	b.eq	413c14 <ascii_strlower_n@plt+0xf80c>  // b.none
  41390c:	b	413d68 <ascii_strlower_n@plt+0xf960>
  413910:	ldr	x20, [x20, #80]
  413914:	ldr	x19, [x19, #80]
  413918:	cmp	x20, x19
  41391c:	b.eq	413c3c <ascii_strlower_n@plt+0xf834>  // b.none
  413920:	cbz	x19, 413d78 <ascii_strlower_n@plt+0xf970>
  413924:	cbz	x20, 413d78 <ascii_strlower_n@plt+0xf970>
  413928:	ldr	x2, [x20]
  41392c:	ldr	x8, [x19]
  413930:	cmp	x2, x8
  413934:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413938:	add	x0, x20, #0x18
  41393c:	add	x1, x19, #0x18
  413940:	bl	4042a8 <bcmp@plt>
  413944:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413948:	ldr	x20, [x20, #8]
  41394c:	ldr	x19, [x19, #8]
  413950:	mov	w0, #0x1                   	// #1
  413954:	cmp	x20, x19
  413958:	b.ne	413920 <ascii_strlower_n@plt+0xf518>  // b.any
  41395c:	b	413d6c <ascii_strlower_n@plt+0xf964>
  413960:	cmp	w9, #0x101
  413964:	b.ne	4139b0 <ascii_strlower_n@plt+0xf5a8>  // b.any
  413968:	ldrb	w8, [x20, #80]
  41396c:	ldrb	w9, [x19, #80]
  413970:	cmp	w8, w9
  413974:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413978:	ldr	x0, [x20, #88]
  41397c:	ldr	x1, [x19, #88]
  413980:	bl	403b38 <strcmp@plt>
  413984:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413988:	ldr	x2, [x20, #104]
  41398c:	ldr	x8, [x19, #104]
  413990:	cmp	x2, x8
  413994:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413998:	cbz	x2, 413c3c <ascii_strlower_n@plt+0xf834>
  41399c:	ldr	x0, [x20, #96]
  4139a0:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  4139a4:	ldr	x1, [x19, #96]
  4139a8:	cbnz	x1, 4139d4 <ascii_strlower_n@plt+0xf5cc>
  4139ac:	b	413db4 <ascii_strlower_n@plt+0xf9ac>
  4139b0:	ldr	x2, [x20, #88]
  4139b4:	ldr	x8, [x19, #88]
  4139b8:	cmp	x2, x8
  4139bc:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  4139c0:	cbz	x2, 413c3c <ascii_strlower_n@plt+0xf834>
  4139c4:	ldr	x0, [x20, #80]
  4139c8:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  4139cc:	ldr	x1, [x19, #80]
  4139d0:	cbz	x1, 413db4 <ascii_strlower_n@plt+0xf9ac>
  4139d4:	bl	4042a8 <bcmp@plt>
  4139d8:	cmp	w0, #0x0
  4139dc:	cset	w0, eq  // eq = none
  4139e0:	b	413d6c <ascii_strlower_n@plt+0xf964>
  4139e4:	ldrb	w8, [x20, #80]
  4139e8:	ldrb	w9, [x19, #80]
  4139ec:	cmp	w8, w9
  4139f0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  4139f4:	ldrb	w8, [x20, #81]
  4139f8:	ldrb	w9, [x19, #81]
  4139fc:	cmp	w8, w9
  413a00:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413a04:	ldrb	w8, [x20, #82]
  413a08:	ldrb	w9, [x19, #82]
  413a0c:	cmp	w8, w9
  413a10:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413a14:	b	413c14 <ascii_strlower_n@plt+0xf80c>
  413a18:	ldp	x8, x9, [x20, #80]
  413a1c:	ldp	x10, x11, [x19, #80]
  413a20:	eor	x8, x8, x10
  413a24:	eor	x9, x9, x11
  413a28:	orr	x8, x8, x9
  413a2c:	cmp	x8, #0x0
  413a30:	b	4139dc <ascii_strlower_n@plt+0xf5d4>
  413a34:	ldrh	w8, [x20, #80]
  413a38:	ldrh	w9, [x19, #80]
  413a3c:	cmp	w8, w9
  413a40:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413a44:	ldr	x0, [x20, #88]
  413a48:	ldr	x1, [x19, #88]
  413a4c:	b	4138d0 <ascii_strlower_n@plt+0xf4c8>
  413a50:	ldr	x0, [x20, #80]
  413a54:	ldr	x1, [x19, #80]
  413a58:	bl	404248 <dns_name_equal@plt>
  413a5c:	cbz	w0, 413d6c <ascii_strlower_n@plt+0xf964>
  413a60:	ldr	x0, [x20, #88]
  413a64:	ldr	x1, [x19, #88]
  413a68:	bl	4042b8 <bitmap_equal@plt>
  413a6c:	and	w0, w0, #0x1
  413a70:	b	413d6c <ascii_strlower_n@plt+0xf964>
  413a74:	ldr	w8, [x20, #80]
  413a78:	ldr	w9, [x19, #80]
  413a7c:	cmp	w8, w9
  413a80:	b	4139dc <ascii_strlower_n@plt+0xf5d4>
  413a84:	ldr	x0, [x20, #80]
  413a88:	ldr	x1, [x19, #80]
  413a8c:	bl	404248 <dns_name_equal@plt>
  413a90:	cmp	w0, #0x1
  413a94:	b.lt	413d6c <ascii_strlower_n@plt+0xf964>  // b.tstop
  413a98:	ldr	x0, [x20, #88]
  413a9c:	ldr	x1, [x19, #88]
  413aa0:	bl	404248 <dns_name_equal@plt>
  413aa4:	cmp	w0, #0x1
  413aa8:	b.lt	413d6c <ascii_strlower_n@plt+0xf964>  // b.tstop
  413aac:	ldr	w8, [x20, #96]
  413ab0:	ldr	w9, [x19, #96]
  413ab4:	cmp	w8, w9
  413ab8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413abc:	ldr	w8, [x20, #100]
  413ac0:	ldr	w9, [x19, #100]
  413ac4:	cmp	w8, w9
  413ac8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413acc:	ldr	w8, [x20, #104]
  413ad0:	ldr	w9, [x19, #104]
  413ad4:	cmp	w8, w9
  413ad8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413adc:	ldr	w8, [x20, #108]
  413ae0:	ldr	w9, [x19, #108]
  413ae4:	cmp	w8, w9
  413ae8:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413aec:	ldr	w8, [x20, #112]
  413af0:	ldr	w9, [x19, #112]
  413af4:	cmp	w8, w9
  413af8:	b	4139dc <ascii_strlower_n@plt+0xf5d4>
  413afc:	ldrb	w8, [x20, #80]
  413b00:	ldrb	w9, [x19, #80]
  413b04:	cmp	w8, w9
  413b08:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413b0c:	ldrb	w8, [x20, #81]
  413b10:	ldrb	w9, [x19, #81]
  413b14:	cmp	w8, w9
  413b18:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413b1c:	ldrh	w8, [x20, #82]
  413b20:	ldrh	w9, [x19, #82]
  413b24:	cmp	w8, w9
  413b28:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413b2c:	ldr	x2, [x20, #96]
  413b30:	ldr	x8, [x19, #96]
  413b34:	cmp	x2, x8
  413b38:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413b3c:	cbz	x2, 413b58 <ascii_strlower_n@plt+0xf750>
  413b40:	ldr	x0, [x20, #88]
  413b44:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  413b48:	ldr	x1, [x19, #88]
  413b4c:	cbz	x1, 413db4 <ascii_strlower_n@plt+0xf9ac>
  413b50:	bl	4042a8 <bcmp@plt>
  413b54:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413b58:	ldr	x2, [x20, #112]
  413b5c:	ldr	x8, [x19, #112]
  413b60:	cmp	x2, x8
  413b64:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413b68:	cbz	x2, 413b84 <ascii_strlower_n@plt+0xf77c>
  413b6c:	ldr	x0, [x20, #104]
  413b70:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  413b74:	ldr	x1, [x19, #104]
  413b78:	cbz	x1, 413db4 <ascii_strlower_n@plt+0xf9ac>
  413b7c:	bl	4042a8 <bcmp@plt>
  413b80:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413b84:	ldr	x0, [x20, #120]
  413b88:	ldr	x1, [x19, #120]
  413b8c:	b	413a68 <ascii_strlower_n@plt+0xf660>
  413b90:	ldr	x0, [x20, #80]
  413b94:	ldr	x1, [x19, #80]
  413b98:	bl	4042c8 <strcasecmp@plt>
  413b9c:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413ba0:	ldr	x0, [x20, #88]
  413ba4:	ldr	x1, [x19, #88]
  413ba8:	bl	4042c8 <strcasecmp@plt>
  413bac:	b	4139d8 <ascii_strlower_n@plt+0xf5d0>
  413bb0:	ldr	x0, [x20, #88]
  413bb4:	ldr	x1, [x19, #88]
  413bb8:	bl	404248 <dns_name_equal@plt>
  413bbc:	cmp	w0, #0x1
  413bc0:	b.lt	413d6c <ascii_strlower_n@plt+0xf964>  // b.tstop
  413bc4:	ldrh	w8, [x20, #80]
  413bc8:	ldrh	w9, [x19, #80]
  413bcc:	cmp	w8, w9
  413bd0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413bd4:	ldrh	w8, [x20, #82]
  413bd8:	ldrh	w9, [x19, #82]
  413bdc:	cmp	w8, w9
  413be0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413be4:	ldrh	w8, [x20, #84]
  413be8:	ldrh	w9, [x19, #84]
  413bec:	cmp	w8, w9
  413bf0:	b	4139dc <ascii_strlower_n@plt+0xf5d4>
  413bf4:	ldrb	w8, [x20, #80]
  413bf8:	ldrb	w9, [x19, #80]
  413bfc:	cmp	w8, w9
  413c00:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c04:	ldrb	w8, [x20, #81]
  413c08:	ldrb	w9, [x19, #81]
  413c0c:	cmp	w8, w9
  413c10:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c14:	ldr	x2, [x20, #96]
  413c18:	ldr	x8, [x19, #96]
  413c1c:	cmp	x2, x8
  413c20:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c24:	cbz	x2, 413c3c <ascii_strlower_n@plt+0xf834>
  413c28:	ldr	x0, [x20, #88]
  413c2c:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  413c30:	ldr	x1, [x19, #88]
  413c34:	cbnz	x1, 4139d4 <ascii_strlower_n@plt+0xf5cc>
  413c38:	b	413db4 <ascii_strlower_n@plt+0xf9ac>
  413c3c:	mov	w0, #0x1                   	// #1
  413c40:	b	413d6c <ascii_strlower_n@plt+0xf964>
  413c44:	ldrh	w8, [x20, #80]
  413c48:	ldrh	w9, [x19, #80]
  413c4c:	cmp	w8, w9
  413c50:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c54:	ldrb	w8, [x20, #82]
  413c58:	ldrb	w9, [x19, #82]
  413c5c:	cmp	w8, w9
  413c60:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c64:	ldrb	w8, [x20, #83]
  413c68:	ldrb	w9, [x19, #83]
  413c6c:	cmp	w8, w9
  413c70:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c74:	ldr	w8, [x20, #84]
  413c78:	ldr	w9, [x19, #84]
  413c7c:	cmp	w8, w9
  413c80:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c84:	ldr	w8, [x20, #88]
  413c88:	ldr	w9, [x19, #88]
  413c8c:	cmp	w8, w9
  413c90:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413c94:	ldr	w8, [x20, #92]
  413c98:	ldr	w9, [x19, #92]
  413c9c:	cmp	w8, w9
  413ca0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413ca4:	ldrh	w8, [x20, #96]
  413ca8:	ldrh	w9, [x19, #96]
  413cac:	cmp	w8, w9
  413cb0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413cb4:	ldr	x2, [x20, #120]
  413cb8:	ldr	x8, [x19, #120]
  413cbc:	cmp	x2, x8
  413cc0:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413cc4:	cbz	x2, 413ce0 <ascii_strlower_n@plt+0xf8d8>
  413cc8:	ldr	x0, [x20, #112]
  413ccc:	cbz	x0, 413d94 <ascii_strlower_n@plt+0xf98c>
  413cd0:	ldr	x1, [x19, #112]
  413cd4:	cbz	x1, 413db4 <ascii_strlower_n@plt+0xf9ac>
  413cd8:	bl	4042a8 <bcmp@plt>
  413cdc:	cbnz	w0, 413d68 <ascii_strlower_n@plt+0xf960>
  413ce0:	ldr	x0, [x20, #104]
  413ce4:	ldr	x1, [x19, #104]
  413ce8:	bl	404248 <dns_name_equal@plt>
  413cec:	cmp	w0, #0x0
  413cf0:	cset	w0, ne  // ne = any
  413cf4:	b	413d6c <ascii_strlower_n@plt+0xf964>
  413cf8:	ldrb	w8, [x20, #80]
  413cfc:	ldrb	w9, [x19, #80]
  413d00:	cmp	w8, w9
  413d04:	b.ne	413dd8 <ascii_strlower_n@plt+0xf9d0>  // b.any
  413d08:	ldrb	w8, [x20, #81]
  413d0c:	ldrb	w9, [x19, #81]
  413d10:	cmp	w8, w9
  413d14:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413d18:	ldrb	w8, [x20, #82]
  413d1c:	ldrb	w9, [x19, #82]
  413d20:	cmp	w8, w9
  413d24:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413d28:	ldrb	w8, [x20, #83]
  413d2c:	ldrb	w9, [x19, #83]
  413d30:	cmp	w8, w9
  413d34:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413d38:	ldr	w8, [x20, #84]
  413d3c:	ldr	w9, [x19, #84]
  413d40:	cmp	w8, w9
  413d44:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413d48:	ldr	w8, [x20, #88]
  413d4c:	ldr	w9, [x19, #88]
  413d50:	cmp	w8, w9
  413d54:	b.ne	413d68 <ascii_strlower_n@plt+0xf960>  // b.any
  413d58:	ldr	w8, [x20, #92]
  413d5c:	ldr	w9, [x19, #92]
  413d60:	cmp	w8, w9
  413d64:	b	4139dc <ascii_strlower_n@plt+0xf5d4>
  413d68:	mov	w0, wzr
  413d6c:	ldp	x20, x19, [sp, #16]
  413d70:	ldp	x29, x30, [sp], #32
  413d74:	ret
  413d78:	cmp	x19, #0x0
  413d7c:	cset	w8, eq  // eq = none
  413d80:	cmp	x20, #0x0
  413d84:	cset	w9, eq  // eq = none
  413d88:	eor	w8, w8, w9
  413d8c:	eor	w0, w8, #0x1
  413d90:	b	413d6c <ascii_strlower_n@plt+0xf964>
  413d94:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413d98:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  413d9c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413da0:	add	x1, x1, #0xc5b
  413da4:	add	x2, x2, #0xddf
  413da8:	add	x4, x4, #0xc5e
  413dac:	mov	w3, #0x1c                  	// #28
  413db0:	bl	403a98 <log_assert_failed_realm@plt>
  413db4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413db8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  413dbc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413dc0:	add	x1, x1, #0xc92
  413dc4:	add	x2, x2, #0xddf
  413dc8:	add	x4, x4, #0xc5e
  413dcc:	mov	w3, #0x1d                  	// #29
  413dd0:	mov	w0, wzr
  413dd4:	bl	403a98 <log_assert_failed_realm@plt>
  413dd8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413ddc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413de0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413de4:	add	x1, x1, #0x70e
  413de8:	add	x2, x2, #0x16d
  413dec:	add	x4, x4, #0x72f
  413df0:	mov	w3, #0x26d                 	// #621
  413df4:	mov	w0, wzr
  413df8:	bl	403a98 <log_assert_failed_realm@plt>
  413dfc:	stp	x29, x30, [sp, #-32]!
  413e00:	cmp	x0, x1
  413e04:	stp	x20, x19, [sp, #16]
  413e08:	mov	x29, sp
  413e0c:	b.eq	413e50 <ascii_strlower_n@plt+0xfa48>  // b.none
  413e10:	mov	x20, x1
  413e14:	mov	x19, x0
  413e18:	cbz	x19, 413e60 <ascii_strlower_n@plt+0xfa58>
  413e1c:	cbz	x20, 413e60 <ascii_strlower_n@plt+0xfa58>
  413e20:	ldr	x2, [x19]
  413e24:	ldr	x8, [x20]
  413e28:	cmp	x2, x8
  413e2c:	b.ne	413e58 <ascii_strlower_n@plt+0xfa50>  // b.any
  413e30:	add	x0, x19, #0x18
  413e34:	add	x1, x20, #0x18
  413e38:	bl	4042a8 <bcmp@plt>
  413e3c:	cbnz	w0, 413e58 <ascii_strlower_n@plt+0xfa50>
  413e40:	ldr	x19, [x19, #8]
  413e44:	ldr	x20, [x20, #8]
  413e48:	cmp	x19, x20
  413e4c:	b.ne	413e18 <ascii_strlower_n@plt+0xfa10>  // b.any
  413e50:	mov	w0, #0x1                   	// #1
  413e54:	b	413e78 <ascii_strlower_n@plt+0xfa70>
  413e58:	mov	w0, wzr
  413e5c:	b	413e78 <ascii_strlower_n@plt+0xfa70>
  413e60:	cmp	x20, #0x0
  413e64:	cset	w8, eq  // eq = none
  413e68:	cmp	x19, #0x0
  413e6c:	cset	w9, eq  // eq = none
  413e70:	eor	w8, w9, w8
  413e74:	eor	w0, w8, #0x1
  413e78:	ldp	x20, x19, [sp, #16]
  413e7c:	ldp	x29, x30, [sp], #32
  413e80:	ret
  413e84:	stp	x29, x30, [sp, #-80]!
  413e88:	str	x25, [sp, #16]
  413e8c:	stp	x24, x23, [sp, #32]
  413e90:	stp	x22, x21, [sp, #48]
  413e94:	stp	x20, x19, [sp, #64]
  413e98:	mov	x29, sp
  413e9c:	cbz	x0, 413f98 <ascii_strlower_n@plt+0xfb90>
  413ea0:	mov	x19, x1
  413ea4:	cbz	x1, 413fb8 <ascii_strlower_n@plt+0xfbb0>
  413ea8:	mov	x20, x0
  413eac:	cmp	x0, x19
  413eb0:	b.eq	413f18 <ascii_strlower_n@plt+0xfb10>  // b.none
  413eb4:	ldr	x23, [x20, #8]
  413eb8:	ldr	x24, [x19, #8]
  413ebc:	cmp	x23, x24
  413ec0:	b.eq	413f5c <ascii_strlower_n@plt+0xfb54>  // b.none
  413ec4:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413ec8:	add	x25, x25, #0x3a0
  413ecc:	cbz	x23, 413f20 <ascii_strlower_n@plt+0xfb18>
  413ed0:	ldr	x8, [x23, #8]
  413ed4:	add	x9, x23, #0x10
  413ed8:	cmp	x8, #0x0
  413edc:	csel	x21, x9, x8, eq  // eq = none
  413ee0:	mov	x0, x21
  413ee4:	bl	4040e8 <dns_name_is_root@plt>
  413ee8:	tst	w0, #0x1
  413eec:	csel	x21, x25, x21, ne  // ne = any
  413ef0:	cbz	x24, 413f28 <ascii_strlower_n@plt+0xfb20>
  413ef4:	ldr	x8, [x24, #8]
  413ef8:	add	x9, x24, #0x10
  413efc:	cmp	x8, #0x0
  413f00:	csel	x22, x9, x8, eq  // eq = none
  413f04:	mov	x0, x22
  413f08:	bl	4040e8 <dns_name_is_root@plt>
  413f0c:	tst	w0, #0x1
  413f10:	csel	x1, x25, x22, ne  // ne = any
  413f14:	b	413f2c <ascii_strlower_n@plt+0xfb24>
  413f18:	mov	w0, #0x1                   	// #1
  413f1c:	b	413f80 <ascii_strlower_n@plt+0xfb78>
  413f20:	mov	x21, xzr
  413f24:	cbnz	x24, 413ef4 <ascii_strlower_n@plt+0xfaec>
  413f28:	mov	x1, xzr
  413f2c:	mov	x0, x21
  413f30:	bl	404248 <dns_name_equal@plt>
  413f34:	cmp	w0, #0x1
  413f38:	b.lt	413f80 <ascii_strlower_n@plt+0xfb78>  // b.tstop
  413f3c:	ldrh	w8, [x23, #4]
  413f40:	ldrh	w9, [x24, #4]
  413f44:	cmp	w8, w9
  413f48:	b.ne	413f7c <ascii_strlower_n@plt+0xfb74>  // b.any
  413f4c:	ldrh	w8, [x23, #6]
  413f50:	ldrh	w9, [x24, #6]
  413f54:	cmp	w8, w9
  413f58:	b.ne	413f7c <ascii_strlower_n@plt+0xfb74>  // b.any
  413f5c:	mov	x0, x20
  413f60:	mov	x1, x19
  413f64:	ldp	x20, x19, [sp, #64]
  413f68:	ldp	x22, x21, [sp, #48]
  413f6c:	ldp	x24, x23, [sp, #32]
  413f70:	ldr	x25, [sp, #16]
  413f74:	ldp	x29, x30, [sp], #80
  413f78:	b	41386c <ascii_strlower_n@plt+0xf464>
  413f7c:	mov	w0, wzr
  413f80:	ldp	x20, x19, [sp, #64]
  413f84:	ldp	x22, x21, [sp, #48]
  413f88:	ldp	x24, x23, [sp, #32]
  413f8c:	ldr	x25, [sp, #16]
  413f90:	ldp	x29, x30, [sp], #80
  413f94:	ret
  413f98:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413f9c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413fa0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413fa4:	add	x1, x1, #0x562
  413fa8:	add	x2, x2, #0x16d
  413fac:	add	x4, x4, #0x78b
  413fb0:	mov	w3, #0x2b3                 	// #691
  413fb4:	bl	403a98 <log_assert_failed_realm@plt>
  413fb8:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  413fbc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413fc0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  413fc4:	add	x1, x1, #0x947
  413fc8:	add	x2, x2, #0x16d
  413fcc:	add	x4, x4, #0x78b
  413fd0:	mov	w3, #0x2b4                 	// #692
  413fd4:	mov	w0, wzr
  413fd8:	bl	403a98 <log_assert_failed_realm@plt>
  413fdc:	stp	d11, d10, [sp, #-112]!
  413fe0:	stp	d9, d8, [sp, #16]
  413fe4:	stp	x29, x30, [sp, #32]
  413fe8:	stp	x28, x25, [sp, #48]
  413fec:	stp	x24, x23, [sp, #64]
  413ff0:	stp	x22, x21, [sp, #80]
  413ff4:	stp	x20, x19, [sp, #96]
  413ff8:	mov	x29, sp
  413ffc:	sub	sp, sp, #0x1b0
  414000:	stur	xzr, [x29, #-72]
  414004:	cbz	x0, 414a34 <ascii_strlower_n@plt+0x1062c>
  414008:	ldr	x20, [x0, #16]
  41400c:	mov	x19, x0
  414010:	cbnz	x20, 414990 <ascii_strlower_n@plt+0x10588>
  414014:	ldr	x0, [x19, #8]
  414018:	add	x1, sp, #0x50
  41401c:	mov	w2, #0x118                 	// #280
  414020:	bl	412d84 <ascii_strlower_n@plt+0xe97c>
  414024:	ldrb	w8, [x19, #48]
  414028:	tbnz	w8, #0, 414120 <ascii_strlower_n@plt+0xfd18>
  41402c:	ldr	x8, [x19, #8]
  414030:	ldrh	w9, [x8, #6]
  414034:	sub	w8, w9, #0x1
  414038:	cmp	w8, #0x62
  41403c:	b.hi	414090 <ascii_strlower_n@plt+0xfc88>  // b.pmore
  414040:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  414044:	add	x9, x9, #0xb8c
  414048:	adr	x10, 414058 <ascii_strlower_n@plt+0xfc50>
  41404c:	ldrh	w11, [x9, x8, lsl #1]
  414050:	add	x10, x10, x11, lsl #2
  414054:	br	x10
  414058:	ldr	x2, [x19, #80]
  41405c:	b	41473c <ascii_strlower_n@plt+0x10334>
  414060:	ldr	x20, [x19, #80]
  414064:	cbz	x20, 4144b8 <ascii_strlower_n@plt+0x100b0>
  414068:	mov	w8, #0x1                   	// #1
  41406c:	mov	x9, x20
  414070:	ldp	x10, x9, [x9]
  414074:	mov	w11, #0x3                   	// #3
  414078:	bfi	x11, x10, #2, #62
  41407c:	add	x8, x11, x8
  414080:	cbnz	x9, 414070 <ascii_strlower_n@plt+0xfc68>
  414084:	cmp	x8, #0x0
  414088:	csinc	x0, x8, xzr, ne  // ne = any
  41408c:	b	4144bc <ascii_strlower_n@plt+0x100b4>
  414090:	cmp	w9, #0x101
  414094:	b.ne	414120 <ascii_strlower_n@plt+0xfd18>  // b.any
  414098:	ldp	x0, x1, [x19, #96]
  41409c:	bl	4042d8 <octescape@plt>
  4140a0:	mov	x20, x0
  4140a4:	cbz	x0, 414990 <ascii_strlower_n@plt+0x10588>
  4140a8:	ldrb	w3, [x19, #80]
  4140ac:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4140b0:	adrp	x9, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4140b4:	ldr	x4, [x19, #88]
  4140b8:	add	x8, x8, #0x96e
  4140bc:	add	x9, x9, #0x9c
  4140c0:	adrp	x10, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4140c4:	cmp	w3, #0x0
  4140c8:	add	x10, x10, #0x981
  4140cc:	adrp	x11, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4140d0:	csel	x6, x9, x8, eq  // eq = none
  4140d4:	tst	w3, #0x80
  4140d8:	add	x11, x11, #0x44b
  4140dc:	csel	x7, x9, x10, eq  // eq = none
  4140e0:	tst	w3, #0x7f
  4140e4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4140e8:	and	w12, w3, #0x7f
  4140ec:	csel	x8, x9, x11, eq  // eq = none
  4140f0:	add	x1, x1, #0x956
  4140f4:	sub	x0, x29, #0x40
  4140f8:	add	x2, sp, #0x50
  4140fc:	mov	x5, x20
  414100:	str	w12, [sp, #8]
  414104:	str	x8, [sp]
  414108:	bl	403e18 <asprintf@plt>
  41410c:	mov	w21, w0
  414110:	mov	x0, x20
  414114:	bl	4039d8 <free@plt>
  414118:	tbz	w21, #31, 414758 <ascii_strlower_n@plt+0x10350>
  41411c:	b	41498c <ascii_strlower_n@plt+0x10584>
  414120:	ldp	x0, x1, [x19, #80]
  414124:	bl	4042e8 <hexmem@plt>
  414128:	stur	x0, [x29, #-72]
  41412c:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  414130:	ldr	x3, [x19, #88]
  414134:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414138:	mov	x4, x0
  41413c:	add	x1, x1, #0x98b
  414140:	sub	x0, x29, #0x40
  414144:	add	x2, sp, #0x50
  414148:	bl	403e18 <asprintf@plt>
  41414c:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414150:	b	41498c <ascii_strlower_n@plt+0x10584>
  414154:	ldr	x0, [x19, #88]
  414158:	bl	414af4 <ascii_strlower_n@plt+0x106ec>
  41415c:	stur	x0, [x29, #-72]
  414160:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  414164:	ldr	x3, [x19, #80]
  414168:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41416c:	mov	x4, x0
  414170:	add	x1, x1, #0x8d7
  414174:	b	414140 <ascii_strlower_n@plt+0xfd38>
  414178:	ldr	x8, [x19, #88]
  41417c:	ldrh	w3, [x19, #80]
  414180:	ldrh	w4, [x19, #82]
  414184:	ldrh	w5, [x19, #84]
  414188:	adrp	x9, 41b000 <ascii_strlower_n@plt+0x16bf8>
  41418c:	add	x9, x9, #0xe64
  414190:	cmp	x8, #0x0
  414194:	csel	x6, x9, x8, eq  // eq = none
  414198:	b	41432c <ascii_strlower_n@plt+0xff24>
  41419c:	ldp	x0, x1, [x19, #88]
  4141a0:	bl	4042e8 <hexmem@plt>
  4141a4:	stur	x0, [x29, #-72]
  4141a8:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  4141ac:	ldrb	w3, [x19, #80]
  4141b0:	ldrb	w4, [x19, #81]
  4141b4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4141b8:	mov	x5, x0
  4141bc:	add	x1, x1, #0x863
  4141c0:	sub	x0, x29, #0x40
  4141c4:	add	x2, sp, #0x50
  4141c8:	bl	403e18 <asprintf@plt>
  4141cc:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  4141d0:	b	41498c <ascii_strlower_n@plt+0x10584>
  4141d4:	mov	w1, #0x1                   	// #1
  4141d8:	mov	x0, x19
  4141dc:	bl	419324 <ascii_strlower_n@plt+0x14f1c>
  4141e0:	ldrb	w8, [x19, #83]
  4141e4:	mov	w21, w0
  4141e8:	cmp	x8, #0xff
  4141ec:	b.eq	414764 <ascii_strlower_n@plt+0x1035c>  // b.none
  4141f0:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  4141f4:	add	x9, x9, #0x3f8
  4141f8:	ldr	x0, [x9, x8, lsl #3]
  4141fc:	bl	403ae8 <strdup@plt>
  414200:	stur	x0, [x29, #-64]
  414204:	cbz	x0, 414844 <ascii_strlower_n@plt+0x1043c>
  414208:	mov	x20, x0
  41420c:	b	414780 <ascii_strlower_n@plt+0x10378>
  414210:	add	x1, x19, #0x50
  414214:	add	x2, sp, #0x40
  414218:	mov	w0, #0x2                   	// #2
  41421c:	str	xzr, [sp, #64]
  414220:	bl	403f68 <in_addr_to_string@plt>
  414224:	ldr	x2, [sp, #64]
  414228:	tbnz	w0, #31, 41484c <ascii_strlower_n@plt+0x10444>
  41422c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  414230:	add	x1, x1, #0x44b
  414234:	add	x0, sp, #0x50
  414238:	mov	x3, xzr
  41423c:	bl	403f58 <strjoin_real@plt>
  414240:	ldr	x8, [sp, #64]
  414244:	mov	x20, x0
  414248:	stur	x0, [x29, #-64]
  41424c:	mov	x0, x8
  414250:	bl	4039d8 <free@plt>
  414254:	cbnz	x20, 414758 <ascii_strlower_n@plt+0x10350>
  414258:	b	414990 <ascii_strlower_n@plt+0x10588>
  41425c:	ldrb	w0, [x19, #80]
  414260:	bl	419264 <ascii_strlower_n@plt+0x14e5c>
  414264:	ldrb	w8, [x19, #81]
  414268:	mov	x20, x0
  41426c:	mov	w0, w8
  414270:	bl	4192a4 <ascii_strlower_n@plt+0x14e9c>
  414274:	ldrb	w8, [x19, #82]
  414278:	mov	x21, x0
  41427c:	mov	w0, w8
  414280:	bl	4192e4 <ascii_strlower_n@plt+0x14edc>
  414284:	ldp	x8, x1, [x19, #88]
  414288:	mov	x22, x0
  41428c:	mov	x0, x8
  414290:	bl	4042e8 <hexmem@plt>
  414294:	stur	x0, [x29, #-72]
  414298:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  41429c:	ldrb	w3, [x19, #80]
  4142a0:	ldrb	w4, [x19, #81]
  4142a4:	ldrb	w5, [x19, #82]
  4142a8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4142ac:	mov	x6, x0
  4142b0:	add	x1, x1, #0x8f7
  4142b4:	sub	x0, x29, #0x40
  4142b8:	add	x2, sp, #0x50
  4142bc:	mov	x7, x20
  4142c0:	stp	x21, x22, [sp]
  4142c4:	bl	403e18 <asprintf@plt>
  4142c8:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  4142cc:	b	41498c <ascii_strlower_n@plt+0x10584>
  4142d0:	add	x1, x19, #0x50
  4142d4:	sub	x2, x29, #0x48
  4142d8:	mov	w0, #0xa                   	// #10
  4142dc:	bl	403f68 <in_addr_to_string@plt>
  4142e0:	tbnz	w0, #31, 41498c <ascii_strlower_n@plt+0x10584>
  4142e4:	ldur	x2, [x29, #-72]
  4142e8:	b	41473c <ascii_strlower_n@plt+0x10334>
  4142ec:	ldp	x2, x4, [x19, #80]
  4142f0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4142f4:	add	x1, x1, #0x44b
  4142f8:	add	x0, sp, #0x50
  4142fc:	mov	x3, x1
  414300:	mov	x5, xzr
  414304:	bl	403f58 <strjoin_real@plt>
  414308:	b	414750 <ascii_strlower_n@plt+0x10348>
  41430c:	ldp	x0, x1, [x19, #88]
  414310:	bl	4042e8 <hexmem@plt>
  414314:	stur	x0, [x29, #-72]
  414318:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  41431c:	ldrh	w3, [x19, #80]
  414320:	ldrb	w4, [x19, #82]
  414324:	ldrb	w5, [x19, #83]
  414328:	mov	x6, x0
  41432c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414330:	add	x1, x1, #0x81e
  414334:	sub	x0, x29, #0x40
  414338:	add	x2, sp, #0x50
  41433c:	bl	403e18 <asprintf@plt>
  414340:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414344:	b	41498c <ascii_strlower_n@plt+0x10584>
  414348:	ldp	x9, x10, [x19, #80]
  41434c:	adrp	x8, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414350:	ldp	w5, w6, [x19, #96]
  414354:	ldp	w7, w11, [x19, #104]
  414358:	ldr	w12, [x19, #112]
  41435c:	add	x8, x8, #0xe64
  414360:	cmp	x9, #0x0
  414364:	csel	x3, x8, x9, eq  // eq = none
  414368:	cmp	x10, #0x0
  41436c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414370:	csel	x4, x8, x10, eq  // eq = none
  414374:	add	x1, x1, #0x82d
  414378:	sub	x0, x29, #0x40
  41437c:	add	x2, sp, #0x50
  414380:	str	w12, [sp, #8]
  414384:	str	w11, [sp]
  414388:	bl	403e18 <asprintf@plt>
  41438c:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414390:	b	41498c <ascii_strlower_n@plt+0x10584>
  414394:	ldrb	w8, [x19, #80]
  414398:	cbnz	w8, 414a54 <ascii_strlower_n@plt+0x1064c>
  41439c:	ldp	w23, w20, [x19, #84]
  4143a0:	ldr	w10, [x19, #92]
  4143a4:	ldrb	w8, [x19, #81]
  4143a8:	ldrb	w25, [x19, #82]
  4143ac:	ldrb	w24, [x19, #83]
  4143b0:	mov	w11, #0x80000000            	// #-2147483648
  4143b4:	mov	w9, #0x967f                	// #38527
  4143b8:	eor	w12, w23, #0x80000000
  4143bc:	sub	w13, w11, w23
  4143c0:	cmp	w23, #0x0
  4143c4:	movk	w9, #0x98, lsl #16
  4143c8:	csel	w21, w12, w13, lt  // lt = tstop
  4143cc:	eor	w12, w20, #0x80000000
  4143d0:	sub	w11, w11, w20
  4143d4:	cmp	w20, #0x0
  4143d8:	csel	w22, w12, w11, lt  // lt = tstop
  4143dc:	cmp	w10, w9
  4143e0:	b.ls	4145d4 <ascii_strlower_n@plt+0x101cc>  // b.plast
  4143e4:	mov	w9, #0x6980                	// #27008
  4143e8:	movk	w9, #0xff67, lsl #16
  4143ec:	add	w9, w10, w9
  4143f0:	ucvtf	d8, w9
  4143f4:	b	4145e4 <ascii_strlower_n@plt+0x101dc>
  4143f8:	ldrh	w3, [x19, #80]
  4143fc:	ldr	x4, [x19, #88]
  414400:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414404:	add	x1, x1, #0x845
  414408:	sub	x0, x29, #0x40
  41440c:	add	x2, sp, #0x50
  414410:	bl	403e18 <asprintf@plt>
  414414:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414418:	b	41498c <ascii_strlower_n@plt+0x10584>
  41441c:	ldrh	w0, [x19, #80]
  414420:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  414424:	ldrb	w8, [x19, #82]
  414428:	mov	x21, x0
  41442c:	cmp	x8, #0xff
  414430:	b.eq	414854 <ascii_strlower_n@plt+0x1044c>  // b.none
  414434:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  414438:	add	x9, x9, #0x3f8
  41443c:	ldr	x0, [x9, x8, lsl #3]
  414440:	bl	403ae8 <strdup@plt>
  414444:	stur	x0, [x29, #-64]
  414448:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  41444c:	mov	x20, x0
  414450:	b	414870 <ascii_strlower_n@plt+0x10468>
  414454:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  414458:	add	x1, x1, #0x3e3
  41445c:	sub	x0, x29, #0x40
  414460:	add	x2, sp, #0x50
  414464:	bl	403e18 <asprintf@plt>
  414468:	tbnz	w0, #31, 41498c <ascii_strlower_n@plt+0x10584>
  41446c:	ldp	x21, x22, [x19, #80]
  414470:	mov	w20, w0
  414474:	bl	4042f8 <columns@plt>
  414478:	mov	w5, w0
  41447c:	sub	x0, x29, #0x40
  414480:	mov	w4, #0x8                   	// #8
  414484:	mov	w1, w20
  414488:	mov	x2, x21
  41448c:	mov	x3, x22
  414490:	bl	404308 <base64_append@plt>
  414494:	tbz	w0, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414498:	b	41498c <ascii_strlower_n@plt+0x10584>
  41449c:	ldr	x1, [x19, #96]
  4144a0:	cbz	x1, 4148f8 <ascii_strlower_n@plt+0x104f0>
  4144a4:	ldr	x0, [x19, #88]
  4144a8:	bl	4042e8 <hexmem@plt>
  4144ac:	mov	x20, x0
  4144b0:	cbnz	x0, 4148fc <ascii_strlower_n@plt+0x104f4>
  4144b4:	b	414990 <ascii_strlower_n@plt+0x10588>
  4144b8:	mov	w0, #0x1                   	// #1
  4144bc:	bl	4040c8 <malloc@plt>
  4144c0:	cbz	x0, 4145c8 <ascii_strlower_n@plt+0x101c0>
  4144c4:	mov	x2, x0
  4144c8:	mov	x11, x0
  4144cc:	cbz	x20, 4145bc <ascii_strlower_n@plt+0x101b4>
  4144d0:	mov	w10, #0x851f                	// #34079
  4144d4:	mov	w12, #0xcccd                	// #52429
  4144d8:	mov	w8, #0x22                  	// #34
  4144dc:	mov	w9, #0x5c                  	// #92
  4144e0:	movk	w10, #0x51eb, lsl #16
  4144e4:	movk	w12, #0xcccc, lsl #16
  4144e8:	mov	w13, #0xa                   	// #10
  4144ec:	mov	w14, #0x20                  	// #32
  4144f0:	mov	x11, x2
  4144f4:	mov	x15, x20
  4144f8:	b	414508 <ascii_strlower_n@plt+0x10100>
  4144fc:	strb	w8, [x11], #1
  414500:	ldr	x15, [x15, #8]
  414504:	cbz	x15, 4145bc <ascii_strlower_n@plt+0x101b4>
  414508:	cmp	x15, x20
  41450c:	b.eq	414514 <ascii_strlower_n@plt+0x1010c>  // b.none
  414510:	strb	w14, [x11], #1
  414514:	strb	w8, [x11], #1
  414518:	ldr	x16, [x15]
  41451c:	cbz	x16, 4144fc <ascii_strlower_n@plt+0x100f4>
  414520:	mov	x16, xzr
  414524:	add	x17, x15, #0x18
  414528:	b	414594 <ascii_strlower_n@plt+0x1018c>
  41452c:	strb	w9, [x11]
  414530:	ldrb	w18, [x17, x16]
  414534:	mul	x18, x18, x10
  414538:	lsr	x18, x18, #37
  41453c:	orr	w18, w18, #0x30
  414540:	strb	w18, [x11, #1]
  414544:	ldrb	w18, [x17, x16]
  414548:	mul	x18, x18, x12
  41454c:	lsr	x18, x18, #35
  414550:	mul	x0, x18, x12
  414554:	lsr	x0, x0, #35
  414558:	msub	w18, w0, w13, w18
  41455c:	orr	w18, w18, #0x30
  414560:	strb	w18, [x11, #2]
  414564:	ldrb	w18, [x17, x16]
  414568:	umull	x0, w18, w12
  41456c:	lsr	x0, x0, #35
  414570:	msub	w18, w0, w13, w18
  414574:	orr	w18, w18, #0x30
  414578:	add	x0, x11, #0x4
  41457c:	strb	w18, [x11, #3]
  414580:	ldr	x18, [x15]
  414584:	add	x16, x16, #0x1
  414588:	mov	x11, x0
  41458c:	cmp	x16, x18
  414590:	b.cs	4144fc <ascii_strlower_n@plt+0x100f4>  // b.hs, b.nlast
  414594:	ldrb	w18, [x17, x16]
  414598:	cmp	w18, #0x22
  41459c:	b.eq	41452c <ascii_strlower_n@plt+0x10124>  // b.none
  4145a0:	sub	w0, w18, #0x20
  4145a4:	and	w0, w0, #0xff
  4145a8:	cmp	w0, #0x5f
  4145ac:	b.cs	41452c <ascii_strlower_n@plt+0x10124>  // b.hs, b.nlast
  4145b0:	add	x0, x11, #0x1
  4145b4:	strb	w18, [x11]
  4145b8:	b	414580 <ascii_strlower_n@plt+0x10178>
  4145bc:	strb	wzr, [x11]
  4145c0:	stur	x2, [x29, #-72]
  4145c4:	b	41473c <ascii_strlower_n@plt+0x10334>
  4145c8:	mov	x20, xzr
  4145cc:	stur	xzr, [x29, #-72]
  4145d0:	b	414990 <ascii_strlower_n@plt+0x10588>
  4145d4:	sub	w9, w9, w10
  4145d8:	add	w9, w9, #0x1
  4145dc:	ucvtf	d0, w9
  4145e0:	fneg	d8, d0
  4145e4:	lsr	w9, w8, #4
  4145e8:	and	w8, w8, #0xf
  4145ec:	scvtf	d0, w8
  4145f0:	scvtf	d9, w9
  4145f4:	bl	404318 <exp10@plt>
  4145f8:	and	w9, w25, #0xf
  4145fc:	fmul	d9, d0, d9
  414600:	lsr	w8, w25, #4
  414604:	scvtf	d0, w9
  414608:	scvtf	d10, w8
  41460c:	bl	404318 <exp10@plt>
  414610:	and	w9, w24, #0xf
  414614:	fmul	d10, d0, d10
  414618:	lsr	w8, w24, #4
  41461c:	scvtf	d0, w9
  414620:	scvtf	d11, w8
  414624:	bl	404318 <exp10@plt>
  414628:	mov	w8, #0xb273                	// #45683
  41462c:	movk	w8, #0x45e7, lsl #16
  414630:	cmp	w23, #0x0
  414634:	mov	w14, #0x53                  	// #83
  414638:	mov	w15, #0x4e                  	// #78
  41463c:	csel	w4, w15, w14, lt  // lt = tstop
  414640:	smull	x14, w21, w8
  414644:	mov	w9, #0xbe59                	// #48729
  414648:	smull	x8, w22, w8
  41464c:	lsr	x15, x14, #32
  414650:	lsr	x14, x14, #63
  414654:	movk	w9, #0x4a90, lsl #16
  414658:	mov	w12, #0xea60                	// #60000
  41465c:	add	w14, w14, w15, asr #14
  414660:	lsr	x15, x8, #32
  414664:	lsr	x8, x8, #63
  414668:	mov	w10, #0x8889                	// #34953
  41466c:	add	w8, w8, w15, asr #14
  414670:	smull	x15, w21, w9
  414674:	smull	x9, w22, w9
  414678:	msub	w17, w14, w12, w21
  41467c:	fmul	d5, d0, d11
  414680:	movk	w10, #0x8888, lsl #16
  414684:	scvtf	d0, w17
  414688:	lsr	x17, x9, #32
  41468c:	lsr	x9, x9, #63
  414690:	mov	x13, #0x400000000000        	// #70368744177664
  414694:	add	w5, w9, w17, asr #20
  414698:	smull	x9, w14, w10
  41469c:	smull	x10, w8, w10
  4146a0:	movk	x13, #0x408f, lsl #48
  4146a4:	msub	w12, w8, w12, w22
  4146a8:	lsr	x9, x9, #32
  4146ac:	lsr	x10, x10, #32
  4146b0:	mov	w16, #0x57                  	// #87
  4146b4:	fmov	d1, x13
  4146b8:	mov	w13, #0x45                  	// #69
  4146bc:	cmp	w20, #0x0
  4146c0:	scvtf	d2, w12
  4146c4:	lsr	x12, x15, #32
  4146c8:	lsr	x15, x15, #63
  4146cc:	add	w9, w9, w14
  4146d0:	add	w10, w10, w8
  4146d4:	mov	x18, #0x4059000000000000    	// #4636737291354636288
  4146d8:	csel	w7, w13, w16, lt  // lt = tstop
  4146dc:	add	w2, w15, w12, asr #20
  4146e0:	asr	w12, w9, #5
  4146e4:	asr	w13, w10, #5
  4146e8:	mov	w11, #0x3c                  	// #60
  4146ec:	fmov	d6, x18
  4146f0:	add	w9, w12, w9, lsr #31
  4146f4:	add	w10, w13, w10, lsr #31
  4146f8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4146fc:	fdiv	d0, d0, d1
  414700:	fdiv	d1, d2, d1
  414704:	fdiv	d2, d8, d6
  414708:	fdiv	d3, d9, d6
  41470c:	fdiv	d4, d10, d6
  414710:	msub	w3, w9, w11, w14
  414714:	msub	w6, w10, w11, w8
  414718:	fdiv	d5, d5, d6
  41471c:	add	x1, x1, #0xc95
  414720:	sub	x0, x29, #0x40
  414724:	bl	403e18 <asprintf@plt>
  414728:	ldur	x8, [x29, #-64]
  41472c:	cmp	w0, #0x0
  414730:	csel	x2, xzr, x8, lt  // lt = tstop
  414734:	stur	x2, [x29, #-72]
  414738:	cbz	x2, 41498c <ascii_strlower_n@plt+0x10584>
  41473c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  414740:	add	x1, x1, #0x44b
  414744:	add	x0, sp, #0x50
  414748:	mov	x3, xzr
  41474c:	bl	403f58 <strjoin_real@plt>
  414750:	stur	x0, [x29, #-64]
  414754:	cbz	x0, 41498c <ascii_strlower_n@plt+0x10584>
  414758:	ldur	x20, [x29, #-64]
  41475c:	str	x20, [x19, #16]
  414760:	b	414990 <ascii_strlower_n@plt+0x10588>
  414764:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414768:	add	x1, x1, #0xa2c
  41476c:	sub	x0, x29, #0x40
  414770:	mov	w2, #0xff                  	// #255
  414774:	bl	403e18 <asprintf@plt>
  414778:	tbnz	w0, #31, 414844 <ascii_strlower_n@plt+0x1043c>
  41477c:	ldur	x20, [x29, #-64]
  414780:	ldrh	w3, [x19, #80]
  414784:	ldrb	w4, [x19, #82]
  414788:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41478c:	add	x1, x1, #0x863
  414790:	sub	x0, x29, #0x40
  414794:	add	x2, sp, #0x50
  414798:	mov	x5, x20
  41479c:	bl	403e18 <asprintf@plt>
  4147a0:	tbnz	w0, #31, 414984 <ascii_strlower_n@plt+0x1057c>
  4147a4:	ldp	x23, x24, [x19, #88]
  4147a8:	mov	w22, w0
  4147ac:	bl	4042f8 <columns@plt>
  4147b0:	mov	w5, w0
  4147b4:	sub	x0, x29, #0x40
  4147b8:	mov	w4, #0x8                   	// #8
  4147bc:	mov	w1, w22
  4147c0:	mov	x2, x23
  4147c4:	mov	x3, x24
  4147c8:	bl	404308 <base64_append@plt>
  4147cc:	tbnz	w0, #31, 414984 <ascii_strlower_n@plt+0x1057c>
  4147d0:	ldrh	w8, [x19, #80]
  4147d4:	adrp	x9, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4147d8:	adrp	x10, 41a000 <ascii_strlower_n@plt+0x15bf8>
  4147dc:	ldur	x2, [x29, #-64]
  4147e0:	add	x9, x9, #0x8a1
  4147e4:	add	x10, x10, #0x9c
  4147e8:	adrp	x11, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4147ec:	tst	w8, #0x1
  4147f0:	add	x11, x11, #0x8a6
  4147f4:	adrp	x12, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4147f8:	csel	x3, x10, x9, eq  // eq = none
  4147fc:	tst	w8, #0x80
  414800:	add	x12, x12, #0x8ae
  414804:	csel	x4, x10, x11, eq  // eq = none
  414808:	tst	w8, #0x100
  41480c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414810:	csel	x5, x10, x12, eq  // eq = none
  414814:	and	w6, w21, #0xffff
  414818:	add	x1, x1, #0x86f
  41481c:	add	x0, sp, #0x40
  414820:	bl	403e18 <asprintf@plt>
  414824:	tbnz	w0, #31, 414984 <ascii_strlower_n@plt+0x1057c>
  414828:	ldur	x0, [x29, #-64]
  41482c:	bl	4039d8 <free@plt>
  414830:	ldr	x8, [sp, #64]
  414834:	mov	x0, x20
  414838:	stur	x8, [x29, #-64]
  41483c:	bl	4039d8 <free@plt>
  414840:	b	414758 <ascii_strlower_n@plt+0x10350>
  414844:	mov	x20, xzr
  414848:	b	414984 <ascii_strlower_n@plt+0x1057c>
  41484c:	mov	x0, x2
  414850:	b	414988 <ascii_strlower_n@plt+0x10580>
  414854:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414858:	add	x1, x1, #0xa2c
  41485c:	sub	x0, x29, #0x40
  414860:	mov	w2, #0xff                  	// #255
  414864:	bl	403e18 <asprintf@plt>
  414868:	tbnz	w0, #31, 41498c <ascii_strlower_n@plt+0x10584>
  41486c:	ldur	x20, [x29, #-64]
  414870:	ldr	w8, [x19, #88]
  414874:	sub	x0, x29, #0x8
  414878:	sub	x1, x29, #0x40
  41487c:	stur	x8, [x29, #-8]
  414880:	bl	404328 <gmtime_r@plt>
  414884:	cbz	x0, 414984 <ascii_strlower_n@plt+0x1057c>
  414888:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41488c:	add	x2, x2, #0xcc9
  414890:	add	x0, sp, #0x40
  414894:	sub	x3, x29, #0x40
  414898:	mov	w1, #0xf                   	// #15
  41489c:	bl	404338 <strftime@plt>
  4148a0:	cbz	x0, 414984 <ascii_strlower_n@plt+0x1057c>
  4148a4:	ldr	w8, [x19, #92]
  4148a8:	sub	x0, x29, #0x8
  4148ac:	sub	x1, x29, #0x40
  4148b0:	stur	x8, [x29, #-8]
  4148b4:	bl	404328 <gmtime_r@plt>
  4148b8:	cbz	x0, 414984 <ascii_strlower_n@plt+0x1057c>
  4148bc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4148c0:	add	x2, x2, #0xcc9
  4148c4:	add	x0, sp, #0x30
  4148c8:	sub	x3, x29, #0x40
  4148cc:	mov	w1, #0xf                   	// #15
  4148d0:	bl	404338 <strftime@plt>
  4148d4:	cbz	x0, 414984 <ascii_strlower_n@plt+0x1057c>
  4148d8:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4148dc:	cmp	x21, #0x0
  4148e0:	add	x8, x8, #0x55d
  4148e4:	cset	w4, eq  // eq = none
  4148e8:	csel	x3, x21, x8, ne  // ne = any
  4148ec:	cbz	x21, 4149c0 <ascii_strlower_n@plt+0x105b8>
  4148f0:	mov	w5, wzr
  4148f4:	b	4149c4 <ascii_strlower_n@plt+0x105bc>
  4148f8:	mov	x20, xzr
  4148fc:	ldp	x0, x1, [x19, #104]
  414900:	mov	w2, wzr
  414904:	bl	404348 <base32hexmem@plt>
  414908:	cbz	x0, 414984 <ascii_strlower_n@plt+0x1057c>
  41490c:	mov	x21, x0
  414910:	ldr	x0, [x19, #120]
  414914:	bl	414af4 <ascii_strlower_n@plt+0x106ec>
  414918:	stur	x0, [x29, #-72]
  41491c:	cbz	x0, 41497c <ascii_strlower_n@plt+0x10574>
  414920:	ldr	x9, [x19, #96]
  414924:	ldrb	w3, [x19, #80]
  414928:	ldrb	w4, [x19, #81]
  41492c:	ldrh	w5, [x19, #82]
  414930:	adrp	x10, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414934:	add	x10, x10, #0x8f5
  414938:	cmp	x9, #0x0
  41493c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414940:	mov	x8, x0
  414944:	csel	x6, x10, x20, eq  // eq = none
  414948:	add	x1, x1, #0x8e0
  41494c:	sub	x0, x29, #0x40
  414950:	add	x2, sp, #0x50
  414954:	mov	x7, x21
  414958:	str	x8, [sp]
  41495c:	bl	403e18 <asprintf@plt>
  414960:	mov	w22, w0
  414964:	mov	x0, x21
  414968:	bl	4039d8 <free@plt>
  41496c:	mov	x0, x20
  414970:	bl	4039d8 <free@plt>
  414974:	tbz	w22, #31, 414758 <ascii_strlower_n@plt+0x10350>
  414978:	b	41498c <ascii_strlower_n@plt+0x10584>
  41497c:	mov	x0, x21
  414980:	bl	4039d8 <free@plt>
  414984:	mov	x0, x20
  414988:	bl	4039d8 <free@plt>
  41498c:	mov	x20, xzr
  414990:	ldur	x0, [x29, #-72]
  414994:	bl	4039d8 <free@plt>
  414998:	mov	x0, x20
  41499c:	add	sp, sp, #0x1b0
  4149a0:	ldp	x20, x19, [sp, #96]
  4149a4:	ldp	x22, x21, [sp, #80]
  4149a8:	ldp	x24, x23, [sp, #64]
  4149ac:	ldp	x28, x25, [sp, #48]
  4149b0:	ldp	x29, x30, [sp, #32]
  4149b4:	ldp	d9, d8, [sp, #16]
  4149b8:	ldp	d11, d10, [sp], #112
  4149bc:	ret
  4149c0:	ldrh	w5, [x19, #80]
  4149c4:	ldrh	w9, [x19, #96]
  4149c8:	ldr	x10, [x19, #104]
  4149cc:	ldrb	w7, [x19, #83]
  4149d0:	ldr	w8, [x19, #84]
  4149d4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4149d8:	str	x10, [sp, #32]
  4149dc:	str	w9, [sp, #24]
  4149e0:	add	x9, sp, #0x30
  4149e4:	add	x10, sp, #0x40
  4149e8:	add	x1, x1, #0x8b8
  4149ec:	sub	x0, x29, #0x40
  4149f0:	add	x2, sp, #0x50
  4149f4:	mov	x6, x20
  4149f8:	stp	x10, x9, [sp, #8]
  4149fc:	str	w8, [sp]
  414a00:	bl	403e18 <asprintf@plt>
  414a04:	tbnz	w0, #31, 414984 <ascii_strlower_n@plt+0x1057c>
  414a08:	ldp	x22, x23, [x19, #112]
  414a0c:	mov	w21, w0
  414a10:	bl	4042f8 <columns@plt>
  414a14:	mov	w5, w0
  414a18:	sub	x0, x29, #0x40
  414a1c:	mov	w4, #0x8                   	// #8
  414a20:	mov	w1, w21
  414a24:	mov	x2, x22
  414a28:	mov	x3, x23
  414a2c:	bl	404308 <base64_append@plt>
  414a30:	b	41410c <ascii_strlower_n@plt+0xfd04>
  414a34:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  414a38:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414a3c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414a40:	add	x1, x1, #0x9e6
  414a44:	add	x2, x2, #0x16d
  414a48:	add	x4, x4, #0x7df
  414a4c:	mov	w3, #0x338                 	// #824
  414a50:	bl	403a98 <log_assert_failed_realm@plt>
  414a54:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414a58:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414a5c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414a60:	add	x1, x1, #0x84e
  414a64:	add	x2, x2, #0x16d
  414a68:	add	x4, x4, #0x7df
  414a6c:	mov	w3, #0x396                 	// #918
  414a70:	mov	w0, wzr
  414a74:	bl	403a98 <log_assert_failed_realm@plt>
  414a78:	stp	x29, x30, [sp, #-32]!
  414a7c:	cmp	w0, #0xff
  414a80:	str	x19, [sp, #16]
  414a84:	mov	x29, sp
  414a88:	b.ls	414a94 <ascii_strlower_n@plt+0x1068c>  // b.plast
  414a8c:	mov	w0, #0xffffffde            	// #-34
  414a90:	b	414ae8 <ascii_strlower_n@plt+0x106e0>
  414a94:	mov	x19, x1
  414a98:	b.ne	414abc <ascii_strlower_n@plt+0x106b4>  // b.any
  414a9c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414aa0:	add	x1, x1, #0xa2c
  414aa4:	add	x0, x29, #0x18
  414aa8:	mov	w2, #0xff                  	// #255
  414aac:	bl	403e18 <asprintf@plt>
  414ab0:	tbnz	w0, #31, 414ae4 <ascii_strlower_n@plt+0x106dc>
  414ab4:	ldr	x8, [x29, #24]
  414ab8:	b	414ad8 <ascii_strlower_n@plt+0x106d0>
  414abc:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  414ac0:	add	x8, x8, #0x3f8
  414ac4:	ldr	x0, [x8, w0, uxtw #3]
  414ac8:	bl	403ae8 <strdup@plt>
  414acc:	str	x0, [x29, #24]
  414ad0:	cbz	x0, 414ae4 <ascii_strlower_n@plt+0x106dc>
  414ad4:	mov	x8, x0
  414ad8:	mov	w0, wzr
  414adc:	str	x8, [x19]
  414ae0:	b	414ae8 <ascii_strlower_n@plt+0x106e0>
  414ae4:	mov	w0, #0xfffffff4            	// #-12
  414ae8:	ldr	x19, [sp, #16]
  414aec:	ldp	x29, x30, [sp], #32
  414af0:	ret
  414af4:	sub	sp, sp, #0x50
  414af8:	stp	x29, x30, [sp, #48]
  414afc:	add	x29, sp, #0x30
  414b00:	add	x1, sp, #0x18
  414b04:	add	x2, sp, #0x14
  414b08:	stp	x20, x19, [sp, #64]
  414b0c:	mov	x19, x0
  414b10:	stur	xzr, [x29, #-8]
  414b14:	str	wzr, [sp, #24]
  414b18:	bl	404138 <bitmap_iterate@plt>
  414b1c:	mov	w8, w0
  414b20:	mov	x0, xzr
  414b24:	tbz	w8, #0, 414b9c <ascii_strlower_n@plt+0x10794>
  414b28:	adrp	x20, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414b2c:	add	x20, x20, #0xcd6
  414b30:	b	414b60 <ascii_strlower_n@plt+0x10758>
  414b34:	ldr	w0, [sp, #20]
  414b38:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  414b3c:	mov	x1, x0
  414b40:	sub	x0, x29, #0x8
  414b44:	bl	403a78 <strv_extend@plt>
  414b48:	tbnz	w0, #31, 414b90 <ascii_strlower_n@plt+0x10788>
  414b4c:	add	x1, sp, #0x18
  414b50:	add	x2, sp, #0x14
  414b54:	mov	x0, x19
  414b58:	bl	404138 <bitmap_iterate@plt>
  414b5c:	tbz	w0, #0, 414b98 <ascii_strlower_n@plt+0x10790>
  414b60:	ldr	w0, [sp, #20]
  414b64:	bl	4189f4 <ascii_strlower_n@plt+0x145ec>
  414b68:	cbnz	x0, 414b34 <ascii_strlower_n@plt+0x1072c>
  414b6c:	ldr	w2, [sp, #20]
  414b70:	add	x0, sp, #0x8
  414b74:	mov	x1, x20
  414b78:	bl	403e18 <asprintf@plt>
  414b7c:	tbnz	w0, #31, 414b90 <ascii_strlower_n@plt+0x10788>
  414b80:	ldr	x1, [sp, #8]
  414b84:	sub	x0, x29, #0x8
  414b88:	bl	403f48 <strv_consume@plt>
  414b8c:	tbz	w0, #31, 414b4c <ascii_strlower_n@plt+0x10744>
  414b90:	mov	x19, xzr
  414b94:	b	414bd8 <ascii_strlower_n@plt+0x107d0>
  414b98:	ldur	x0, [x29, #-8]
  414b9c:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  414ba0:	add	x1, x1, #0x44b
  414ba4:	mov	x2, xzr
  414ba8:	bl	404358 <strv_join_prefix@plt>
  414bac:	mov	x19, x0
  414bb0:	cbz	x0, 414bd8 <ascii_strlower_n@plt+0x107d0>
  414bb4:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414bb8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414bbc:	add	x0, x0, #0xcdd
  414bc0:	add	x2, x2, #0xce0
  414bc4:	mov	x1, x19
  414bc8:	mov	x3, xzr
  414bcc:	bl	403f58 <strjoin_real@plt>
  414bd0:	mov	x20, x0
  414bd4:	b	414bdc <ascii_strlower_n@plt+0x107d4>
  414bd8:	mov	x20, xzr
  414bdc:	mov	x0, x19
  414be0:	bl	4039d8 <free@plt>
  414be4:	ldur	x0, [x29, #-8]
  414be8:	cbz	x0, 414bf0 <ascii_strlower_n@plt+0x107e8>
  414bec:	bl	403aa8 <strv_free@plt>
  414bf0:	mov	x0, x20
  414bf4:	ldp	x20, x19, [sp, #64]
  414bf8:	ldp	x29, x30, [sp, #48]
  414bfc:	add	sp, sp, #0x50
  414c00:	ret
  414c04:	stp	x29, x30, [sp, #-16]!
  414c08:	mov	x29, sp
  414c0c:	cbz	x0, 414c74 <ascii_strlower_n@plt+0x1086c>
  414c10:	cbz	x1, 414c94 <ascii_strlower_n@plt+0x1088c>
  414c14:	ldrb	w8, [x0, #48]
  414c18:	tbnz	w8, #0, 414c5c <ascii_strlower_n@plt+0x10854>
  414c1c:	ldr	x8, [x0, #8]
  414c20:	ldrh	w8, [x8, #6]
  414c24:	sub	w8, w8, #0x1
  414c28:	cmp	w8, #0x62
  414c2c:	b.hi	414c5c <ascii_strlower_n@plt+0x10854>  // b.pmore
  414c30:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  414c34:	add	x9, x9, #0xc52
  414c38:	adr	x10, 414c4c <ascii_strlower_n@plt+0x10844>
  414c3c:	ldrb	w11, [x9, x8]
  414c40:	add	x10, x10, x11, lsl #2
  414c44:	mov	x8, #0xffffffffffffffea    	// #-22
  414c48:	br	x10
  414c4c:	ldr	x8, [x0, #88]
  414c50:	str	x8, [x1]
  414c54:	ldr	x8, [x0, #96]
  414c58:	b	414c68 <ascii_strlower_n@plt+0x10860>
  414c5c:	ldr	x8, [x0, #80]
  414c60:	str	x8, [x1]
  414c64:	ldr	x8, [x0, #88]
  414c68:	mov	x0, x8
  414c6c:	ldp	x29, x30, [sp], #16
  414c70:	ret
  414c74:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  414c78:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414c7c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414c80:	add	x1, x1, #0x9e6
  414c84:	add	x2, x2, #0x16d
  414c88:	add	x4, x4, #0x998
  414c8c:	mov	w3, #0x497                 	// #1175
  414c90:	bl	403a98 <log_assert_failed_realm@plt>
  414c94:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414c98:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414c9c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414ca0:	add	x1, x1, #0x9da
  414ca4:	add	x2, x2, #0x16d
  414ca8:	add	x4, x4, #0x998
  414cac:	mov	w3, #0x498                 	// #1176
  414cb0:	mov	w0, wzr
  414cb4:	bl	403a98 <log_assert_failed_realm@plt>
  414cb8:	sub	sp, sp, #0xe0
  414cbc:	add	x8, sp, #0x18
  414cc0:	movi	v0.2d, #0x0
  414cc4:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  414cc8:	stur	q0, [x8, #152]
  414ccc:	stur	q0, [x8, #136]
  414cd0:	stur	q0, [x8, #120]
  414cd4:	stp	q0, q0, [sp, #112]
  414cd8:	stp	q0, q0, [sp, #80]
  414cdc:	stp	q0, q0, [sp, #48]
  414ce0:	stur	q0, [sp, #32]
  414ce4:	ldr	d0, [x9, #3456]
  414ce8:	tst	w1, #0x1
  414cec:	mov	w8, #0x5                   	// #5
  414cf0:	mov	w9, #0xd                   	// #13
  414cf4:	csel	w8, w9, w8, ne  // ne = any
  414cf8:	stp	x29, x30, [sp, #192]
  414cfc:	stp	x20, x19, [sp, #208]
  414d00:	add	x29, sp, #0xc0
  414d04:	str	d0, [sp, #24]
  414d08:	strb	w8, [sp, #184]
  414d0c:	cbz	x0, 414db4 <ascii_strlower_n@plt+0x109ac>
  414d10:	ldr	x8, [x0, #56]
  414d14:	mov	w20, w1
  414d18:	mov	x19, x0
  414d1c:	cbz	x8, 414d2c <ascii_strlower_n@plt+0x10924>
  414d20:	ldrb	w8, [x19, #48]
  414d24:	eor	w8, w20, w8, lsr #1
  414d28:	tbz	w8, #0, 414da0 <ascii_strlower_n@plt+0x10998>
  414d2c:	add	x0, sp, #0x18
  414d30:	add	x3, sp, #0x10
  414d34:	add	x4, sp, #0x8
  414d38:	mov	x1, x19
  414d3c:	mov	w2, wzr
  414d40:	bl	40eb24 <ascii_strlower_n@plt+0xa71c>
  414d44:	tbnz	w0, #31, 414da4 <ascii_strlower_n@plt+0x1099c>
  414d48:	ldr	x8, [sp, #16]
  414d4c:	cbnz	x8, 414dd4 <ascii_strlower_n@plt+0x109cc>
  414d50:	ldr	x8, [sp, #64]
  414d54:	cbz	x8, 414df8 <ascii_strlower_n@plt+0x109f0>
  414d58:	ldr	x0, [x19, #56]
  414d5c:	bl	4039d8 <free@plt>
  414d60:	ldr	x8, [sp, #64]
  414d64:	ldrb	w9, [x19, #48]
  414d68:	tst	w20, #0x1
  414d6c:	mov	w10, #0x2                   	// #2
  414d70:	str	x8, [x19, #56]
  414d74:	ldr	x8, [sp, #32]
  414d78:	csel	w10, w10, wzr, ne  // ne = any
  414d7c:	and	w9, w9, #0xfffffffd
  414d80:	orr	w9, w9, w10
  414d84:	str	x8, [x19, #64]
  414d88:	ldr	x8, [sp, #8]
  414d8c:	add	x0, sp, #0x18
  414d90:	strb	w9, [x19, #48]
  414d94:	str	x8, [x19, #72]
  414d98:	str	xzr, [sp, #64]
  414d9c:	bl	40d9a4 <ascii_strlower_n@plt+0x959c>
  414da0:	mov	w0, wzr
  414da4:	ldp	x20, x19, [sp, #208]
  414da8:	ldp	x29, x30, [sp, #192]
  414dac:	add	sp, sp, #0xe0
  414db0:	ret
  414db4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  414db8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414dbc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414dc0:	add	x1, x1, #0x9e6
  414dc4:	add	x2, x2, #0x16d
  414dc8:	add	x4, x4, #0x9de
  414dcc:	mov	w3, #0x4cb                 	// #1227
  414dd0:	bl	403a98 <log_assert_failed_realm@plt>
  414dd4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414dd8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414ddc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414de0:	add	x1, x1, #0xa21
  414de4:	add	x2, x2, #0x16d
  414de8:	add	x4, x4, #0x9de
  414dec:	mov	w3, #0x4dc                 	// #1244
  414df0:	mov	w0, wzr
  414df4:	bl	403a98 <log_assert_failed_realm@plt>
  414df8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414dfc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414e00:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414e04:	add	x1, x1, #0xa2c
  414e08:	add	x2, x2, #0x16d
  414e0c:	add	x4, x4, #0x9de
  414e10:	mov	w3, #0x4dd                 	// #1245
  414e14:	mov	w0, wzr
  414e18:	bl	403a98 <log_assert_failed_realm@plt>
  414e1c:	stp	x29, x30, [sp, #-48]!
  414e20:	str	x21, [sp, #16]
  414e24:	stp	x20, x19, [sp, #32]
  414e28:	mov	x29, sp
  414e2c:	cbz	x0, 414ec4 <ascii_strlower_n@plt+0x10abc>
  414e30:	mov	x19, x1
  414e34:	cbz	x1, 414ee4 <ascii_strlower_n@plt+0x10adc>
  414e38:	ldr	w1, [x0, #40]
  414e3c:	mov	x20, x0
  414e40:	cmn	w1, #0x1
  414e44:	b.eq	414e80 <ascii_strlower_n@plt+0x10a78>  // b.none
  414e48:	ldr	x8, [x20, #8]
  414e4c:	cbz	x8, 414e88 <ascii_strlower_n@plt+0x10a80>
  414e50:	ldr	x9, [x8, #8]
  414e54:	add	x8, x8, #0x10
  414e58:	cmp	x9, #0x0
  414e5c:	csel	x21, x8, x9, eq  // eq = none
  414e60:	mov	x0, x21
  414e64:	bl	4040e8 <dns_name_is_root@plt>
  414e68:	ldr	w1, [x20, #40]
  414e6c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414e70:	add	x8, x8, #0x3a0
  414e74:	tst	w0, #0x1
  414e78:	csel	x0, x8, x21, ne  // ne = any
  414e7c:	b	414e8c <ascii_strlower_n@plt+0x10a84>
  414e80:	mov	w0, #0xffffffc3            	// #-61
  414e84:	b	414eb4 <ascii_strlower_n@plt+0x10aac>
  414e88:	mov	x0, xzr
  414e8c:	add	x2, x29, #0x18
  414e90:	str	x0, [x29, #24]
  414e94:	bl	404368 <dns_name_skip@plt>
  414e98:	tbnz	w0, #31, 414eb4 <ascii_strlower_n@plt+0x10aac>
  414e9c:	cbz	w0, 414eb0 <ascii_strlower_n@plt+0x10aa8>
  414ea0:	ldr	x8, [x29, #24]
  414ea4:	mov	w0, wzr
  414ea8:	str	x8, [x19]
  414eac:	b	414eb4 <ascii_strlower_n@plt+0x10aac>
  414eb0:	mov	w0, #0xffffffea            	// #-22
  414eb4:	ldp	x20, x19, [sp, #32]
  414eb8:	ldr	x21, [sp, #16]
  414ebc:	ldp	x29, x30, [sp], #48
  414ec0:	ret
  414ec4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  414ec8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414ecc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414ed0:	add	x1, x1, #0x9e6
  414ed4:	add	x2, x2, #0x16d
  414ed8:	add	x4, x4, #0xa39
  414edc:	mov	w3, #0x4ef                 	// #1263
  414ee0:	bl	403a98 <log_assert_failed_realm@plt>
  414ee4:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414ee8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414eec:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414ef0:	add	x1, x1, #0xcb6
  414ef4:	add	x2, x2, #0x16d
  414ef8:	add	x4, x4, #0xa39
  414efc:	mov	w3, #0x4f0                 	// #1264
  414f00:	mov	w0, wzr
  414f04:	bl	403a98 <log_assert_failed_realm@plt>
  414f08:	stp	x29, x30, [sp, #-48]!
  414f0c:	str	x21, [sp, #16]
  414f10:	stp	x20, x19, [sp, #32]
  414f14:	mov	x29, sp
  414f18:	cbz	x0, 414fb0 <ascii_strlower_n@plt+0x10ba8>
  414f1c:	mov	x19, x1
  414f20:	cbz	x1, 414fd0 <ascii_strlower_n@plt+0x10bc8>
  414f24:	ldr	w1, [x0, #44]
  414f28:	mov	x20, x0
  414f2c:	cmn	w1, #0x1
  414f30:	b.eq	414f6c <ascii_strlower_n@plt+0x10b64>  // b.none
  414f34:	ldr	x8, [x20, #8]
  414f38:	cbz	x8, 414f74 <ascii_strlower_n@plt+0x10b6c>
  414f3c:	ldr	x9, [x8, #8]
  414f40:	add	x8, x8, #0x10
  414f44:	cmp	x9, #0x0
  414f48:	csel	x21, x8, x9, eq  // eq = none
  414f4c:	mov	x0, x21
  414f50:	bl	4040e8 <dns_name_is_root@plt>
  414f54:	ldr	w1, [x20, #44]
  414f58:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414f5c:	add	x8, x8, #0x3a0
  414f60:	tst	w0, #0x1
  414f64:	csel	x0, x8, x21, ne  // ne = any
  414f68:	b	414f78 <ascii_strlower_n@plt+0x10b70>
  414f6c:	mov	w0, #0xffffffc3            	// #-61
  414f70:	b	414fa0 <ascii_strlower_n@plt+0x10b98>
  414f74:	mov	x0, xzr
  414f78:	add	x2, x29, #0x18
  414f7c:	str	x0, [x29, #24]
  414f80:	bl	404368 <dns_name_skip@plt>
  414f84:	tbnz	w0, #31, 414fa0 <ascii_strlower_n@plt+0x10b98>
  414f88:	cbz	w0, 414f9c <ascii_strlower_n@plt+0x10b94>
  414f8c:	ldr	x8, [x29, #24]
  414f90:	mov	w0, wzr
  414f94:	str	x8, [x19]
  414f98:	b	414fa0 <ascii_strlower_n@plt+0x10b98>
  414f9c:	mov	w0, #0xffffffea            	// #-22
  414fa0:	ldp	x20, x19, [sp, #32]
  414fa4:	ldr	x21, [sp, #16]
  414fa8:	ldp	x29, x30, [sp], #48
  414fac:	ret
  414fb0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  414fb4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414fb8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414fbc:	add	x1, x1, #0x9e6
  414fc0:	add	x2, x2, #0x16d
  414fc4:	add	x4, x4, #0xa7c
  414fc8:	mov	w3, #0x506                 	// #1286
  414fcc:	bl	403a98 <log_assert_failed_realm@plt>
  414fd0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  414fd4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414fd8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  414fdc:	add	x1, x1, #0xcb6
  414fe0:	add	x2, x2, #0x16d
  414fe4:	add	x4, x4, #0xa7c
  414fe8:	mov	w3, #0x507                 	// #1287
  414fec:	mov	w0, wzr
  414ff0:	bl	403a98 <log_assert_failed_realm@plt>
  414ff4:	stp	x29, x30, [sp, #-48]!
  414ff8:	str	x21, [sp, #16]
  414ffc:	stp	x20, x19, [sp, #32]
  415000:	mov	x29, sp
  415004:	cbz	x0, 415098 <ascii_strlower_n@plt+0x10c90>
  415008:	mov	x19, x1
  41500c:	ldr	w1, [x0, #40]
  415010:	mov	x20, x0
  415014:	cmn	w1, #0x1
  415018:	b.eq	415054 <ascii_strlower_n@plt+0x10c4c>  // b.none
  41501c:	ldr	x8, [x20, #8]
  415020:	cbz	x8, 41505c <ascii_strlower_n@plt+0x10c54>
  415024:	ldr	x9, [x8, #8]
  415028:	add	x8, x8, #0x10
  41502c:	cmp	x9, #0x0
  415030:	csel	x21, x8, x9, eq  // eq = none
  415034:	mov	x0, x21
  415038:	bl	4040e8 <dns_name_is_root@plt>
  41503c:	ldr	w1, [x20, #40]
  415040:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415044:	add	x8, x8, #0x3a0
  415048:	tst	w0, #0x1
  41504c:	csel	x0, x8, x21, ne  // ne = any
  415050:	b	415060 <ascii_strlower_n@plt+0x10c58>
  415054:	mov	w0, #0xffffffc3            	// #-61
  415058:	b	415088 <ascii_strlower_n@plt+0x10c80>
  41505c:	mov	x0, xzr
  415060:	add	x2, x29, #0x18
  415064:	str	x0, [x29, #24]
  415068:	bl	404368 <dns_name_skip@plt>
  41506c:	tbnz	w0, #31, 415088 <ascii_strlower_n@plt+0x10c80>
  415070:	cbz	w0, 415084 <ascii_strlower_n@plt+0x10c7c>
  415074:	ldr	x1, [x29, #24]
  415078:	mov	x0, x19
  41507c:	bl	404248 <dns_name_equal@plt>
  415080:	b	415088 <ascii_strlower_n@plt+0x10c80>
  415084:	mov	w0, #0xffffffea            	// #-22
  415088:	ldp	x20, x19, [sp, #32]
  41508c:	ldr	x21, [sp, #16]
  415090:	ldp	x29, x30, [sp], #48
  415094:	ret
  415098:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41509c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4150a0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4150a4:	add	x1, x1, #0x9e6
  4150a8:	add	x2, x2, #0x16d
  4150ac:	add	x4, x4, #0xabf
  4150b0:	mov	w3, #0x51d                 	// #1309
  4150b4:	bl	403a98 <log_assert_failed_realm@plt>
  4150b8:	stp	x29, x30, [sp, #-32]!
  4150bc:	str	x19, [sp, #16]
  4150c0:	mov	x29, sp
  4150c4:	cbz	x0, 415154 <ascii_strlower_n@plt+0x10d4c>
  4150c8:	ldr	w8, [x0, #44]
  4150cc:	cmn	w8, #0x1
  4150d0:	b.eq	41511c <ascii_strlower_n@plt+0x10d14>  // b.none
  4150d4:	cmp	w8, #0x1
  4150d8:	b.eq	4150e8 <ascii_strlower_n@plt+0x10ce0>  // b.none
  4150dc:	cbnz	w8, 415124 <ascii_strlower_n@plt+0x10d1c>
  4150e0:	mov	w0, wzr
  4150e4:	b	415148 <ascii_strlower_n@plt+0x10d40>
  4150e8:	ldr	x8, [x0, #8]
  4150ec:	cbz	x8, 41512c <ascii_strlower_n@plt+0x10d24>
  4150f0:	ldr	x9, [x8, #8]
  4150f4:	add	x8, x8, #0x10
  4150f8:	cmp	x9, #0x0
  4150fc:	csel	x19, x8, x9, eq  // eq = none
  415100:	mov	x0, x19
  415104:	bl	4040e8 <dns_name_is_root@plt>
  415108:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41510c:	add	x8, x8, #0x3a0
  415110:	tst	w0, #0x1
  415114:	csel	x0, x8, x19, ne  // ne = any
  415118:	b	415130 <ascii_strlower_n@plt+0x10d28>
  41511c:	mov	w0, #0xffffffc3            	// #-61
  415120:	b	415148 <ascii_strlower_n@plt+0x10d40>
  415124:	mov	w0, #0x1                   	// #1
  415128:	b	415148 <ascii_strlower_n@plt+0x10d40>
  41512c:	mov	x0, xzr
  415130:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  415134:	add	x1, x1, #0x1b4
  415138:	bl	404378 <dns_name_startswith@plt>
  41513c:	tbnz	w0, #31, 415148 <ascii_strlower_n@plt+0x10d40>
  415140:	cmp	w0, #0x0
  415144:	cset	w0, eq  // eq = none
  415148:	ldr	x19, [sp, #16]
  41514c:	ldp	x29, x30, [sp], #32
  415150:	ret
  415154:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415158:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41515c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415160:	add	x1, x1, #0x9e6
  415164:	add	x2, x2, #0x16d
  415168:	add	x4, x4, #0xb04
  41516c:	mov	w3, #0x529                 	// #1321
  415170:	bl	403a98 <log_assert_failed_realm@plt>
  415174:	sub	sp, sp, #0x40
  415178:	stp	x29, x30, [sp, #16]
  41517c:	stp	x22, x21, [sp, #32]
  415180:	stp	x20, x19, [sp, #48]
  415184:	add	x29, sp, #0x10
  415188:	cbz	x0, 415554 <ascii_strlower_n@plt+0x1114c>
  41518c:	ldr	x22, [x0, #8]
  415190:	mov	x20, x0
  415194:	cbz	x22, 415574 <ascii_strlower_n@plt+0x1116c>
  415198:	ldr	x8, [x22, #8]
  41519c:	add	x9, x22, #0x10
  4151a0:	mov	x19, x1
  4151a4:	cmp	x8, #0x0
  4151a8:	csel	x21, x9, x8, eq  // eq = none
  4151ac:	mov	x0, x21
  4151b0:	bl	4040e8 <dns_name_is_root@plt>
  4151b4:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4151b8:	add	x8, x8, #0x3a0
  4151bc:	tst	w0, #0x1
  4151c0:	csel	x0, x8, x21, ne  // ne = any
  4151c4:	mov	x1, x19
  4151c8:	bl	404258 <dns_name_hash_func@plt>
  4151cc:	add	x0, x22, #0x4
  4151d0:	mov	w1, #0x2                   	// #2
  4151d4:	mov	x2, x19
  4151d8:	bl	4041e8 <siphash24_compress@plt>
  4151dc:	add	x0, x22, #0x6
  4151e0:	mov	w1, #0x2                   	// #2
  4151e4:	mov	x2, x19
  4151e8:	bl	4041e8 <siphash24_compress@plt>
  4151ec:	ldrb	w8, [x20, #48]
  4151f0:	tbnz	w8, #0, 4152c4 <ascii_strlower_n@plt+0x10ebc>
  4151f4:	ldr	x8, [x20, #8]
  4151f8:	ldrh	w9, [x8, #6]
  4151fc:	sub	w8, w9, #0x1
  415200:	cmp	w8, #0x62
  415204:	b.hi	415298 <ascii_strlower_n@plt+0x10e90>  // b.pmore
  415208:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41520c:	add	x9, x9, #0xcb5
  415210:	adr	x10, 415220 <ascii_strlower_n@plt+0x10e18>
  415214:	ldrb	w11, [x9, x8]
  415218:	add	x10, x10, x11, lsl #2
  41521c:	br	x10
  415220:	ldr	x0, [x20, #80]
  415224:	b	4153d4 <ascii_strlower_n@plt+0x10fcc>
  415228:	add	x0, x20, #0x50
  41522c:	mov	w1, #0x2                   	// #2
  415230:	mov	x2, x19
  415234:	bl	4041e8 <siphash24_compress@plt>
  415238:	add	x0, x20, #0x52
  41523c:	mov	w1, #0x1                   	// #1
  415240:	mov	x2, x19
  415244:	bl	4041e8 <siphash24_compress@plt>
  415248:	add	x0, x20, #0x53
  41524c:	b	415478 <ascii_strlower_n@plt+0x11070>
  415250:	ldr	x20, [x20, #80]
  415254:	cbz	x20, 415284 <ascii_strlower_n@plt+0x10e7c>
  415258:	ldr	x1, [x20]
  41525c:	add	x0, x20, #0x18
  415260:	mov	x2, x19
  415264:	bl	4041e8 <siphash24_compress@plt>
  415268:	sub	x0, x29, #0x4
  41526c:	mov	w1, #0x1                   	// #1
  415270:	mov	x2, x19
  415274:	sturb	wzr, [x29, #-4]
  415278:	bl	4041e8 <siphash24_compress@plt>
  41527c:	ldr	x20, [x20, #8]
  415280:	cbnz	x20, 415258 <ascii_strlower_n@plt+0x10e50>
  415284:	ldp	x20, x19, [sp, #48]
  415288:	ldp	x22, x21, [sp, #32]
  41528c:	ldp	x29, x30, [sp, #16]
  415290:	add	sp, sp, #0x40
  415294:	ret
  415298:	cmp	w9, #0x101
  41529c:	b.ne	4152c4 <ascii_strlower_n@plt+0x10ebc>  // b.any
  4152a0:	add	x0, x20, #0x50
  4152a4:	mov	w1, #0x1                   	// #1
  4152a8:	mov	x2, x19
  4152ac:	bl	4041e8 <siphash24_compress@plt>
  4152b0:	ldr	x0, [x20, #88]
  4152b4:	mov	x1, x19
  4152b8:	bl	404388 <string_hash_func@plt>
  4152bc:	ldp	x0, x1, [x20, #96]
  4152c0:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  4152c4:	ldp	x0, x1, [x20, #80]
  4152c8:	mov	x2, x19
  4152cc:	ldp	x20, x19, [sp, #48]
  4152d0:	ldp	x22, x21, [sp, #32]
  4152d4:	ldp	x29, x30, [sp, #16]
  4152d8:	add	sp, sp, #0x40
  4152dc:	b	4041e8 <siphash24_compress@plt>
  4152e0:	ldr	x0, [x20, #80]
  4152e4:	mov	x1, x19
  4152e8:	bl	404388 <string_hash_func@plt>
  4152ec:	ldr	x0, [x20, #88]
  4152f0:	mov	x1, x19
  4152f4:	ldp	x20, x19, [sp, #48]
  4152f8:	ldp	x22, x21, [sp, #32]
  4152fc:	ldp	x29, x30, [sp, #16]
  415300:	add	sp, sp, #0x40
  415304:	b	404388 <string_hash_func@plt>
  415308:	add	x0, x20, #0x50
  41530c:	mov	w1, #0x2                   	// #2
  415310:	mov	x2, x19
  415314:	bl	4041e8 <siphash24_compress@plt>
  415318:	add	x0, x20, #0x52
  41531c:	mov	w1, #0x2                   	// #2
  415320:	mov	x2, x19
  415324:	bl	4041e8 <siphash24_compress@plt>
  415328:	add	x0, x20, #0x54
  41532c:	b	4153c4 <ascii_strlower_n@plt+0x10fbc>
  415330:	add	x0, x20, #0x50
  415334:	mov	w1, #0x1                   	// #1
  415338:	mov	x2, x19
  41533c:	bl	4041e8 <siphash24_compress@plt>
  415340:	add	x0, x20, #0x51
  415344:	mov	w1, #0x1                   	// #1
  415348:	mov	x2, x19
  41534c:	bl	4041e8 <siphash24_compress@plt>
  415350:	add	x0, x20, #0x52
  415354:	b	415478 <ascii_strlower_n@plt+0x11070>
  415358:	add	x0, x20, #0x50
  41535c:	b	41545c <ascii_strlower_n@plt+0x11054>
  415360:	ldr	x0, [x20, #80]
  415364:	mov	x1, x19
  415368:	bl	404258 <dns_name_hash_func@plt>
  41536c:	ldr	x0, [x20, #88]
  415370:	mov	x1, x19
  415374:	bl	404258 <dns_name_hash_func@plt>
  415378:	add	x0, x20, #0x60
  41537c:	mov	w1, #0x4                   	// #4
  415380:	mov	x2, x19
  415384:	bl	4041e8 <siphash24_compress@plt>
  415388:	add	x0, x20, #0x64
  41538c:	mov	w1, #0x4                   	// #4
  415390:	mov	x2, x19
  415394:	bl	4041e8 <siphash24_compress@plt>
  415398:	add	x0, x20, #0x68
  41539c:	mov	w1, #0x4                   	// #4
  4153a0:	mov	x2, x19
  4153a4:	bl	4041e8 <siphash24_compress@plt>
  4153a8:	add	x0, x20, #0x6c
  4153ac:	mov	w1, #0x4                   	// #4
  4153b0:	mov	x2, x19
  4153b4:	bl	4041e8 <siphash24_compress@plt>
  4153b8:	add	x0, x20, #0x70
  4153bc:	b	41545c <ascii_strlower_n@plt+0x11054>
  4153c0:	add	x0, x20, #0x50
  4153c4:	mov	w1, #0x2                   	// #2
  4153c8:	mov	x2, x19
  4153cc:	bl	4041e8 <siphash24_compress@plt>
  4153d0:	ldr	x0, [x20, #88]
  4153d4:	mov	x1, x19
  4153d8:	ldp	x20, x19, [sp, #48]
  4153dc:	ldp	x22, x21, [sp, #32]
  4153e0:	ldp	x29, x30, [sp, #16]
  4153e4:	add	sp, sp, #0x40
  4153e8:	b	404258 <dns_name_hash_func@plt>
  4153ec:	add	x0, x20, #0x50
  4153f0:	mov	w1, #0x10                  	// #16
  4153f4:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  4153f8:	add	x0, x20, #0x50
  4153fc:	mov	w1, #0x1                   	// #1
  415400:	mov	x2, x19
  415404:	bl	4041e8 <siphash24_compress@plt>
  415408:	add	x0, x20, #0x51
  41540c:	mov	w1, #0x1                   	// #1
  415410:	mov	x2, x19
  415414:	bl	4041e8 <siphash24_compress@plt>
  415418:	add	x0, x20, #0x52
  41541c:	mov	w1, #0x1                   	// #1
  415420:	mov	x2, x19
  415424:	bl	4041e8 <siphash24_compress@plt>
  415428:	add	x0, x20, #0x53
  41542c:	mov	w1, #0x1                   	// #1
  415430:	mov	x2, x19
  415434:	bl	4041e8 <siphash24_compress@plt>
  415438:	add	x0, x20, #0x54
  41543c:	mov	w1, #0x4                   	// #4
  415440:	mov	x2, x19
  415444:	bl	4041e8 <siphash24_compress@plt>
  415448:	add	x0, x20, #0x58
  41544c:	mov	w1, #0x4                   	// #4
  415450:	mov	x2, x19
  415454:	bl	4041e8 <siphash24_compress@plt>
  415458:	add	x0, x20, #0x5c
  41545c:	mov	w1, #0x4                   	// #4
  415460:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  415464:	add	x0, x20, #0x50
  415468:	mov	w1, #0x1                   	// #1
  41546c:	mov	x2, x19
  415470:	bl	4041e8 <siphash24_compress@plt>
  415474:	add	x0, x20, #0x51
  415478:	mov	w1, #0x1                   	// #1
  41547c:	mov	x2, x19
  415480:	bl	4041e8 <siphash24_compress@plt>
  415484:	ldp	x0, x1, [x20, #88]
  415488:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  41548c:	add	x0, x20, #0x50
  415490:	mov	w1, #0x2                   	// #2
  415494:	mov	x2, x19
  415498:	bl	4041e8 <siphash24_compress@plt>
  41549c:	add	x0, x20, #0x52
  4154a0:	mov	w1, #0x1                   	// #1
  4154a4:	mov	x2, x19
  4154a8:	bl	4041e8 <siphash24_compress@plt>
  4154ac:	add	x0, x20, #0x53
  4154b0:	mov	w1, #0x1                   	// #1
  4154b4:	mov	x2, x19
  4154b8:	bl	4041e8 <siphash24_compress@plt>
  4154bc:	add	x0, x20, #0x54
  4154c0:	mov	w1, #0x4                   	// #4
  4154c4:	mov	x2, x19
  4154c8:	bl	4041e8 <siphash24_compress@plt>
  4154cc:	add	x0, x20, #0x58
  4154d0:	mov	w1, #0x4                   	// #4
  4154d4:	mov	x2, x19
  4154d8:	bl	4041e8 <siphash24_compress@plt>
  4154dc:	add	x0, x20, #0x5c
  4154e0:	mov	w1, #0x4                   	// #4
  4154e4:	mov	x2, x19
  4154e8:	bl	4041e8 <siphash24_compress@plt>
  4154ec:	add	x0, x20, #0x60
  4154f0:	mov	w1, #0x2                   	// #2
  4154f4:	mov	x2, x19
  4154f8:	bl	4041e8 <siphash24_compress@plt>
  4154fc:	ldr	x0, [x20, #104]
  415500:	mov	x1, x19
  415504:	bl	404258 <dns_name_hash_func@plt>
  415508:	ldp	x0, x1, [x20, #112]
  41550c:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  415510:	add	x0, x20, #0x50
  415514:	mov	w1, #0x1                   	// #1
  415518:	mov	x2, x19
  41551c:	bl	4041e8 <siphash24_compress@plt>
  415520:	add	x0, x20, #0x51
  415524:	mov	w1, #0x1                   	// #1
  415528:	mov	x2, x19
  41552c:	bl	4041e8 <siphash24_compress@plt>
  415530:	add	x0, x20, #0x52
  415534:	mov	w1, #0x2                   	// #2
  415538:	mov	x2, x19
  41553c:	bl	4041e8 <siphash24_compress@plt>
  415540:	ldp	x0, x1, [x20, #88]
  415544:	mov	x2, x19
  415548:	bl	4041e8 <siphash24_compress@plt>
  41554c:	ldp	x0, x1, [x20, #104]
  415550:	b	4152c8 <ascii_strlower_n@plt+0x10ec0>
  415554:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415558:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41555c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415560:	add	x1, x1, #0x9e6
  415564:	add	x2, x2, #0x16d
  415568:	add	x4, x4, #0xb3e
  41556c:	mov	w3, #0x53e                 	// #1342
  415570:	bl	403a98 <log_assert_failed_realm@plt>
  415574:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415578:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41557c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415580:	add	x1, x1, #0x86a
  415584:	add	x2, x2, #0x16d
  415588:	add	x4, x4, #0xc11
  41558c:	mov	w3, #0x11f                 	// #287
  415590:	mov	w0, wzr
  415594:	bl	403a98 <log_assert_failed_realm@plt>
  415598:	stp	x29, x30, [sp, #-80]!
  41559c:	stp	x24, x23, [sp, #32]
  4155a0:	stp	x22, x21, [sp, #48]
  4155a4:	stp	x20, x19, [sp, #64]
  4155a8:	ldr	x23, [x0, #8]
  4155ac:	ldr	x24, [x1, #8]
  4155b0:	str	x25, [sp, #16]
  4155b4:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4155b8:	mov	x19, x1
  4155bc:	mov	x20, x0
  4155c0:	add	x25, x25, #0x3a0
  4155c4:	mov	x29, sp
  4155c8:	cbz	x23, 415614 <ascii_strlower_n@plt+0x1120c>
  4155cc:	ldr	x8, [x23, #8]
  4155d0:	add	x9, x23, #0x10
  4155d4:	cmp	x8, #0x0
  4155d8:	csel	x21, x9, x8, eq  // eq = none
  4155dc:	mov	x0, x21
  4155e0:	bl	4040e8 <dns_name_is_root@plt>
  4155e4:	tst	w0, #0x1
  4155e8:	csel	x21, x25, x21, ne  // ne = any
  4155ec:	cbz	x24, 41561c <ascii_strlower_n@plt+0x11214>
  4155f0:	ldr	x8, [x24, #8]
  4155f4:	add	x9, x24, #0x10
  4155f8:	cmp	x8, #0x0
  4155fc:	csel	x22, x9, x8, eq  // eq = none
  415600:	mov	x0, x22
  415604:	bl	4040e8 <dns_name_is_root@plt>
  415608:	tst	w0, #0x1
  41560c:	csel	x1, x25, x22, ne  // ne = any
  415610:	b	415620 <ascii_strlower_n@plt+0x11218>
  415614:	mov	x21, xzr
  415618:	cbnz	x24, 4155f0 <ascii_strlower_n@plt+0x111e8>
  41561c:	mov	x1, xzr
  415620:	mov	x0, x21
  415624:	bl	404268 <dns_name_compare_func@plt>
  415628:	cbnz	w0, 415688 <ascii_strlower_n@plt+0x11280>
  41562c:	ldrh	w8, [x23, #6]
  415630:	ldrh	w9, [x24, #6]
  415634:	cmp	w8, w9
  415638:	cset	w8, hi  // hi = pmore
  41563c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  415640:	cbnz	w0, 415660 <ascii_strlower_n@plt+0x11258>
  415644:	ldrh	w8, [x23, #4]
  415648:	ldrh	w9, [x24, #4]
  41564c:	cmp	w8, w9
  415650:	cset	w0, hi  // hi = pmore
  415654:	b.cs	415660 <ascii_strlower_n@plt+0x11258>  // b.hs, b.nlast
  415658:	mov	w0, #0xffffffff            	// #-1
  41565c:	b	415688 <ascii_strlower_n@plt+0x11280>
  415660:	cbnz	w0, 415688 <ascii_strlower_n@plt+0x11280>
  415664:	mov	x0, x20
  415668:	mov	x1, x19
  41566c:	bl	413e84 <ascii_strlower_n@plt+0xfa7c>
  415670:	cbz	w0, 41567c <ascii_strlower_n@plt+0x11274>
  415674:	mov	w0, wzr
  415678:	b	415688 <ascii_strlower_n@plt+0x11280>
  41567c:	cmp	x20, x19
  415680:	cset	w8, hi  // hi = pmore
  415684:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  415688:	ldp	x20, x19, [sp, #64]
  41568c:	ldp	x22, x21, [sp, #48]
  415690:	ldp	x24, x23, [sp, #32]
  415694:	ldr	x25, [sp, #16]
  415698:	ldp	x29, x30, [sp], #80
  41569c:	ret
  4156a0:	stp	x29, x30, [sp, #-48]!
  4156a4:	stp	x22, x21, [sp, #16]
  4156a8:	stp	x20, x19, [sp, #32]
  4156ac:	mov	x29, sp
  4156b0:	cbz	x0, 415a44 <ascii_strlower_n@plt+0x1163c>
  4156b4:	ldr	x21, [x0, #8]
  4156b8:	mov	x20, x0
  4156bc:	mov	w0, #0x1                   	// #1
  4156c0:	mov	w1, #0x80                  	// #128
  4156c4:	mov	w22, #0x1                   	// #1
  4156c8:	bl	404068 <calloc@plt>
  4156cc:	mov	x19, x0
  4156d0:	cbz	x0, 415a24 <ascii_strlower_n@plt+0x1161c>
  4156d4:	str	w22, [x19]
  4156d8:	cbz	x21, 4156fc <ascii_strlower_n@plt+0x112f4>
  4156dc:	ldr	w8, [x21]
  4156e0:	cbz	w8, 415a64 <ascii_strlower_n@plt+0x1165c>
  4156e4:	cmn	w8, #0x1
  4156e8:	b.eq	415a88 <ascii_strlower_n@plt+0x11680>  // b.none
  4156ec:	add	w8, w8, #0x1
  4156f0:	str	w8, [x21]
  4156f4:	ldrb	w8, [x19, #48]
  4156f8:	b	415700 <ascii_strlower_n@plt+0x112f8>
  4156fc:	mov	w8, wzr
  415700:	str	x21, [x19, #8]
  415704:	ldr	w9, [x20, #24]
  415708:	str	w9, [x19, #24]
  41570c:	ldr	x9, [x20, #32]
  415710:	str	x9, [x19, #32]
  415714:	ldr	x9, [x20, #40]
  415718:	str	x9, [x19, #40]
  41571c:	ldrb	w9, [x20, #48]
  415720:	bfxil	w8, w9, #0, #1
  415724:	strb	w8, [x19, #48]
  415728:	tbnz	w9, #0, 415838 <ascii_strlower_n@plt+0x11430>
  41572c:	ldrh	w9, [x21, #6]
  415730:	sub	w8, w9, #0x1
  415734:	cmp	w8, #0x62
  415738:	b.hi	4157fc <ascii_strlower_n@plt+0x113f4>  // b.pmore
  41573c:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  415740:	add	x9, x9, #0xd18
  415744:	adr	x10, 415754 <ascii_strlower_n@plt+0x1134c>
  415748:	ldrb	w11, [x9, x8]
  41574c:	add	x10, x10, x11, lsl #2
  415750:	br	x10
  415754:	ldr	x0, [x20, #80]
  415758:	bl	403ae8 <strdup@plt>
  41575c:	str	x0, [x19, #80]
  415760:	cbnz	x0, 415a24 <ascii_strlower_n@plt+0x1161c>
  415764:	b	415a18 <ascii_strlower_n@plt+0x11610>
  415768:	ldr	q0, [x20, #80]
  41576c:	str	q0, [x19, #80]
  415770:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  415774:	ldrh	w8, [x20, #80]
  415778:	strh	w8, [x19, #80]
  41577c:	ldrb	w8, [x20, #82]
  415780:	strb	w8, [x19, #82]
  415784:	ldrb	w8, [x20, #83]
  415788:	strb	w8, [x19, #83]
  41578c:	b	41588c <ascii_strlower_n@plt+0x11484>
  415790:	ldr	x21, [x20, #80]
  415794:	cbz	x21, 415a14 <ascii_strlower_n@plt+0x1160c>
  415798:	mov	x22, xzr
  41579c:	mov	x20, xzr
  4157a0:	b	4157b8 <ascii_strlower_n@plt+0x113b0>
  4157a4:	str	x22, [x0, #16]
  4157a8:	str	x0, [x22, #8]
  4157ac:	ldr	x21, [x21, #8]
  4157b0:	mov	x22, x0
  4157b4:	cbz	x21, 415a38 <ascii_strlower_n@plt+0x11630>
  4157b8:	ldr	x8, [x21]
  4157bc:	mov	x0, x21
  4157c0:	add	x1, x8, #0x19
  4157c4:	bl	404188 <memdup@plt>
  4157c8:	cbz	x0, 4159fc <ascii_strlower_n@plt+0x115f4>
  4157cc:	cbz	x22, 4157e4 <ascii_strlower_n@plt+0x113dc>
  4157d0:	ldr	x8, [x22, #8]
  4157d4:	str	x8, [x0, #8]
  4157d8:	cbz	x8, 4157a4 <ascii_strlower_n@plt+0x1139c>
  4157dc:	str	x0, [x8, #16]
  4157e0:	b	4157a4 <ascii_strlower_n@plt+0x1139c>
  4157e4:	str	x20, [x0, #8]
  4157e8:	cbz	x20, 4157f0 <ascii_strlower_n@plt+0x113e8>
  4157ec:	str	x0, [x20, #16]
  4157f0:	str	xzr, [x0, #16]
  4157f4:	mov	x20, x0
  4157f8:	b	4157ac <ascii_strlower_n@plt+0x113a4>
  4157fc:	cmp	w9, #0x101
  415800:	b.ne	415838 <ascii_strlower_n@plt+0x11430>  // b.any
  415804:	ldrb	w8, [x20, #80]
  415808:	strb	w8, [x19, #80]
  41580c:	ldr	x0, [x20, #88]
  415810:	bl	403ae8 <strdup@plt>
  415814:	str	x0, [x19, #88]
  415818:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  41581c:	ldp	x0, x1, [x20, #96]
  415820:	bl	404188 <memdup@plt>
  415824:	str	x0, [x19, #96]
  415828:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  41582c:	ldr	x8, [x20, #104]
  415830:	str	x8, [x19, #104]
  415834:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  415838:	ldp	x0, x1, [x20, #80]
  41583c:	bl	404188 <memdup@plt>
  415840:	str	x0, [x19, #80]
  415844:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  415848:	ldr	x8, [x20, #88]
  41584c:	str	x8, [x19, #88]
  415850:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  415854:	ldrb	w8, [x20, #80]
  415858:	strb	w8, [x19, #80]
  41585c:	ldrb	w8, [x20, #81]
  415860:	strb	w8, [x19, #81]
  415864:	ldrb	w8, [x20, #82]
  415868:	strb	w8, [x19, #82]
  41586c:	b	41588c <ascii_strlower_n@plt+0x11484>
  415870:	ldrh	w8, [x20, #80]
  415874:	strh	w8, [x19, #80]
  415878:	b	415914 <ascii_strlower_n@plt+0x1150c>
  41587c:	ldrb	w8, [x20, #80]
  415880:	strb	w8, [x19, #80]
  415884:	ldrb	w8, [x20, #81]
  415888:	strb	w8, [x19, #81]
  41588c:	ldp	x0, x1, [x20, #88]
  415890:	bl	404188 <memdup@plt>
  415894:	str	x0, [x19, #88]
  415898:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  41589c:	ldr	x8, [x20, #96]
  4158a0:	str	x8, [x19, #96]
  4158a4:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  4158a8:	ldr	w8, [x20, #80]
  4158ac:	str	w8, [x19, #80]
  4158b0:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  4158b4:	ldr	x0, [x20, #80]
  4158b8:	bl	403ae8 <strdup@plt>
  4158bc:	str	x0, [x19, #80]
  4158c0:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  4158c4:	ldr	x0, [x20, #88]
  4158c8:	bl	403ae8 <strdup@plt>
  4158cc:	str	x0, [x19, #88]
  4158d0:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  4158d4:	ldr	q0, [x20, #96]
  4158d8:	str	q0, [x19, #96]
  4158dc:	ldr	w8, [x20, #112]
  4158e0:	str	w8, [x19, #112]
  4158e4:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  4158e8:	ldr	x0, [x20, #80]
  4158ec:	bl	403ae8 <strdup@plt>
  4158f0:	str	x0, [x19, #80]
  4158f4:	cbnz	x0, 415914 <ascii_strlower_n@plt+0x1150c>
  4158f8:	b	415a18 <ascii_strlower_n@plt+0x11610>
  4158fc:	ldrh	w8, [x20, #80]
  415900:	strh	w8, [x19, #80]
  415904:	ldrh	w8, [x20, #82]
  415908:	strh	w8, [x19, #82]
  41590c:	ldrh	w8, [x20, #84]
  415910:	strh	w8, [x19, #84]
  415914:	ldr	x0, [x20, #88]
  415918:	bl	403ae8 <strdup@plt>
  41591c:	str	x0, [x19, #88]
  415920:	cbnz	x0, 415a24 <ascii_strlower_n@plt+0x1161c>
  415924:	b	415a18 <ascii_strlower_n@plt+0x11610>
  415928:	ldrb	w8, [x20, #80]
  41592c:	strb	w8, [x19, #80]
  415930:	ldrb	w8, [x20, #81]
  415934:	strb	w8, [x19, #81]
  415938:	ldrh	w8, [x20, #82]
  41593c:	strh	w8, [x19, #82]
  415940:	ldp	x0, x1, [x20, #88]
  415944:	bl	404188 <memdup@plt>
  415948:	str	x0, [x19, #88]
  41594c:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  415950:	ldp	x8, x0, [x20, #96]
  415954:	str	x8, [x19, #96]
  415958:	ldr	x1, [x20, #112]
  41595c:	bl	404188 <memdup@plt>
  415960:	ldr	x8, [x19, #112]
  415964:	str	x0, [x19, #104]
  415968:	cbz	x8, 415a18 <ascii_strlower_n@plt+0x11610>
  41596c:	ldp	x8, x0, [x20, #112]
  415970:	str	x8, [x19, #112]
  415974:	bl	404398 <bitmap_copy@plt>
  415978:	str	x0, [x19, #120]
  41597c:	cbnz	x0, 415a24 <ascii_strlower_n@plt+0x1161c>
  415980:	b	415a18 <ascii_strlower_n@plt+0x11610>
  415984:	ldrh	w8, [x20, #80]
  415988:	strh	w8, [x19, #80]
  41598c:	ldrb	w8, [x20, #82]
  415990:	strb	w8, [x19, #82]
  415994:	ldrb	w8, [x20, #83]
  415998:	strb	w8, [x19, #83]
  41599c:	ldur	x8, [x20, #84]
  4159a0:	stur	x8, [x19, #84]
  4159a4:	ldr	w8, [x20, #92]
  4159a8:	str	w8, [x19, #92]
  4159ac:	ldrh	w8, [x20, #96]
  4159b0:	strh	w8, [x19, #96]
  4159b4:	ldr	x0, [x20, #104]
  4159b8:	bl	403ae8 <strdup@plt>
  4159bc:	str	x0, [x19, #104]
  4159c0:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  4159c4:	ldp	x0, x1, [x20, #112]
  4159c8:	bl	404188 <memdup@plt>
  4159cc:	str	x0, [x19, #112]
  4159d0:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  4159d4:	ldr	x8, [x20, #120]
  4159d8:	str	x8, [x19, #120]
  4159dc:	b	415a24 <ascii_strlower_n@plt+0x1161c>
  4159e0:	ldr	x0, [x20, #80]
  4159e4:	bl	403ae8 <strdup@plt>
  4159e8:	str	x0, [x19, #80]
  4159ec:	cbz	x0, 415a18 <ascii_strlower_n@plt+0x11610>
  4159f0:	ldr	x0, [x20, #88]
  4159f4:	bl	404398 <bitmap_copy@plt>
  4159f8:	b	41591c <ascii_strlower_n@plt+0x11514>
  4159fc:	cbz	x20, 415a14 <ascii_strlower_n@plt+0x1160c>
  415a00:	ldr	x21, [x20, #8]
  415a04:	mov	x0, x20
  415a08:	bl	4039d8 <free@plt>
  415a0c:	mov	x20, x21
  415a10:	cbnz	x21, 415a00 <ascii_strlower_n@plt+0x115f8>
  415a14:	str	xzr, [x19, #80]
  415a18:	mov	x0, x19
  415a1c:	bl	413398 <ascii_strlower_n@plt+0xef90>
  415a20:	mov	x19, xzr
  415a24:	mov	x0, x19
  415a28:	ldp	x20, x19, [sp, #32]
  415a2c:	ldp	x22, x21, [sp, #16]
  415a30:	ldp	x29, x30, [sp], #48
  415a34:	ret
  415a38:	str	x20, [x19, #80]
  415a3c:	cbnz	x20, 415a24 <ascii_strlower_n@plt+0x1161c>
  415a40:	b	415a18 <ascii_strlower_n@plt+0x11610>
  415a44:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415a48:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a4c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a50:	add	x1, x1, #0x9e6
  415a54:	add	x2, x2, #0x16d
  415a58:	add	x4, x4, #0xb8e
  415a5c:	mov	w3, #0x5df                 	// #1503
  415a60:	bl	403a98 <log_assert_failed_realm@plt>
  415a64:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a68:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a6c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a70:	add	x1, x1, #0x35a
  415a74:	add	x2, x2, #0x16d
  415a78:	add	x4, x4, #0x323
  415a7c:	mov	w3, #0x79                  	// #121
  415a80:	mov	w0, wzr
  415a84:	bl	403a98 <log_assert_failed_realm@plt>
  415a88:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a8c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a90:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415a94:	add	x1, x1, #0x309
  415a98:	add	x2, x2, #0x16d
  415a9c:	add	x4, x4, #0x323
  415aa0:	mov	w3, #0x77                  	// #119
  415aa4:	mov	w0, wzr
  415aa8:	bl	403a98 <log_assert_failed_realm@plt>
  415aac:	stp	x29, x30, [sp, #-48]!
  415ab0:	str	x21, [sp, #16]
  415ab4:	stp	x20, x19, [sp, #32]
  415ab8:	mov	x29, sp
  415abc:	cbz	x0, 415b28 <ascii_strlower_n@plt+0x11720>
  415ac0:	mov	x20, x0
  415ac4:	mov	x21, xzr
  415ac8:	mov	x19, xzr
  415acc:	b	415ae4 <ascii_strlower_n@plt+0x116dc>
  415ad0:	str	x21, [x0, #16]
  415ad4:	str	x0, [x21, #8]
  415ad8:	ldr	x20, [x20, #8]
  415adc:	mov	x21, x0
  415ae0:	cbz	x20, 415b48 <ascii_strlower_n@plt+0x11740>
  415ae4:	ldr	x8, [x20]
  415ae8:	mov	x0, x20
  415aec:	add	x1, x8, #0x19
  415af0:	bl	404188 <memdup@plt>
  415af4:	cbz	x0, 415b30 <ascii_strlower_n@plt+0x11728>
  415af8:	cbz	x21, 415b10 <ascii_strlower_n@plt+0x11708>
  415afc:	ldr	x8, [x21, #8]
  415b00:	str	x8, [x0, #8]
  415b04:	cbz	x8, 415ad0 <ascii_strlower_n@plt+0x116c8>
  415b08:	str	x0, [x8, #16]
  415b0c:	b	415ad0 <ascii_strlower_n@plt+0x116c8>
  415b10:	str	x19, [x0, #8]
  415b14:	cbz	x19, 415b1c <ascii_strlower_n@plt+0x11714>
  415b18:	str	x0, [x19, #16]
  415b1c:	str	xzr, [x0, #16]
  415b20:	mov	x19, x0
  415b24:	b	415ad8 <ascii_strlower_n@plt+0x116d0>
  415b28:	mov	x19, xzr
  415b2c:	b	415b48 <ascii_strlower_n@plt+0x11740>
  415b30:	cbz	x19, 415b48 <ascii_strlower_n@plt+0x11740>
  415b34:	ldr	x20, [x19, #8]
  415b38:	mov	x0, x19
  415b3c:	bl	4039d8 <free@plt>
  415b40:	mov	x19, x20
  415b44:	cbnz	x20, 415b34 <ascii_strlower_n@plt+0x1172c>
  415b48:	mov	x0, x19
  415b4c:	ldp	x20, x19, [sp, #32]
  415b50:	ldr	x21, [sp, #16]
  415b54:	ldp	x29, x30, [sp], #48
  415b58:	ret
  415b5c:	stp	x29, x30, [sp, #-48]!
  415b60:	str	x21, [sp, #16]
  415b64:	stp	x20, x19, [sp, #32]
  415b68:	mov	x29, sp
  415b6c:	cbz	x0, 415bf4 <ascii_strlower_n@plt+0x117ec>
  415b70:	mov	x19, x0
  415b74:	ldr	x0, [x0]
  415b78:	ldr	x8, [x0, #8]
  415b7c:	ldrh	w8, [x8, #6]
  415b80:	cmp	w8, #0x29
  415b84:	b.ne	415b90 <ascii_strlower_n@plt+0x11788>  // b.any
  415b88:	mov	w0, #0xffffffea            	// #-22
  415b8c:	b	415bdc <ascii_strlower_n@plt+0x117d4>
  415b90:	ldr	w8, [x0, #24]
  415b94:	cmp	w8, w1
  415b98:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  415b9c:	b.ls	415bb4 <ascii_strlower_n@plt+0x117ac>  // b.plast
  415ba0:	ldr	w8, [x0]
  415ba4:	cmp	w8, #0x1
  415ba8:	b.ne	415bbc <ascii_strlower_n@plt+0x117b4>  // b.any
  415bac:	str	w21, [x0, #24]
  415bb0:	b	415bd8 <ascii_strlower_n@plt+0x117d0>
  415bb4:	mov	w0, wzr
  415bb8:	b	415bdc <ascii_strlower_n@plt+0x117d4>
  415bbc:	bl	4156a0 <ascii_strlower_n@plt+0x11298>
  415bc0:	cbz	x0, 415bec <ascii_strlower_n@plt+0x117e4>
  415bc4:	str	w21, [x0, #24]
  415bc8:	mov	x20, x0
  415bcc:	ldr	x0, [x19]
  415bd0:	bl	413398 <ascii_strlower_n@plt+0xef90>
  415bd4:	str	x20, [x19]
  415bd8:	mov	w0, #0x1                   	// #1
  415bdc:	ldp	x20, x19, [sp, #32]
  415be0:	ldr	x21, [sp, #16]
  415be4:	ldp	x29, x30, [sp], #48
  415be8:	ret
  415bec:	mov	w0, #0xfffffff4            	// #-12
  415bf0:	b	415bdc <ascii_strlower_n@plt+0x117d4>
  415bf4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415bf8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415bfc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415c00:	add	x1, x1, #0x9e6
  415c04:	add	x2, x2, #0x16d
  415c08:	add	x4, x4, #0xbcf
  415c0c:	mov	w3, #0x6a0                 	// #1696
  415c10:	bl	403a98 <log_assert_failed_realm@plt>
  415c14:	stp	x29, x30, [sp, #-32]!
  415c18:	str	x19, [sp, #16]
  415c1c:	mov	x29, sp
  415c20:	cbz	x0, 415c34 <ascii_strlower_n@plt+0x1182c>
  415c24:	ldr	x19, [x0, #8]
  415c28:	bl	4039d8 <free@plt>
  415c2c:	mov	x0, x19
  415c30:	cbnz	x19, 415c24 <ascii_strlower_n@plt+0x1181c>
  415c34:	ldr	x19, [sp, #16]
  415c38:	mov	x0, xzr
  415c3c:	ldp	x29, x30, [sp], #32
  415c40:	ret
  415c44:	stp	x29, x30, [sp, #-32]!
  415c48:	str	x19, [sp, #16]
  415c4c:	mov	x19, x0
  415c50:	mov	w0, #0x1                   	// #1
  415c54:	mov	w1, #0x19                  	// #25
  415c58:	mov	x29, sp
  415c5c:	bl	404068 <calloc@plt>
  415c60:	cbz	x0, 415c74 <ascii_strlower_n@plt+0x1186c>
  415c64:	mov	x8, x0
  415c68:	mov	w0, wzr
  415c6c:	str	x8, [x19]
  415c70:	b	415c78 <ascii_strlower_n@plt+0x11870>
  415c74:	mov	w0, #0xfffffff4            	// #-12
  415c78:	ldr	x19, [sp, #16]
  415c7c:	ldp	x29, x30, [sp], #32
  415c80:	ret
  415c84:	stp	x29, x30, [sp, #-32]!
  415c88:	mov	x29, sp
  415c8c:	str	x19, [sp, #16]
  415c90:	str	wzr, [x29, #28]
  415c94:	cbz	x0, 415cdc <ascii_strlower_n@plt+0x118d4>
  415c98:	mov	x19, x0
  415c9c:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415ca0:	add	x0, x0, #0x3f8
  415ca4:	mov	w1, #0xff                  	// #255
  415ca8:	mov	x2, x19
  415cac:	bl	404208 <string_table_lookup@plt>
  415cb0:	tbz	w0, #31, 415ce0 <ascii_strlower_n@plt+0x118d8>
  415cb4:	add	x2, x29, #0x1c
  415cb8:	mov	x0, x19
  415cbc:	mov	w1, wzr
  415cc0:	bl	4043a8 <safe_atou_full@plt>
  415cc4:	ldr	w8, [x29, #28]
  415cc8:	mov	w9, #0xffffffff            	// #-1
  415ccc:	cmp	w8, #0x100
  415cd0:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  415cd4:	csinv	w0, w8, wzr, gt
  415cd8:	b	415ce0 <ascii_strlower_n@plt+0x118d8>
  415cdc:	mov	w0, #0xffffffff            	// #-1
  415ce0:	ldr	x19, [sp, #16]
  415ce4:	ldp	x29, x30, [sp], #32
  415ce8:	ret
  415cec:	stp	x29, x30, [sp, #-32]!
  415cf0:	cmp	w0, #0xff
  415cf4:	str	x19, [sp, #16]
  415cf8:	mov	x29, sp
  415cfc:	b.ls	415d08 <ascii_strlower_n@plt+0x11900>  // b.plast
  415d00:	mov	w0, #0xffffffde            	// #-34
  415d04:	b	415d60 <ascii_strlower_n@plt+0x11958>
  415d08:	mov	w2, w0
  415d0c:	mov	x19, x1
  415d10:	cmp	w0, #0x4
  415d14:	b.gt	415d38 <ascii_strlower_n@plt+0x11930>
  415d18:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415d1c:	add	x8, x8, #0xbf0
  415d20:	ldr	x0, [x8, w2, uxtw #3]
  415d24:	bl	403ae8 <strdup@plt>
  415d28:	str	x0, [x29, #24]
  415d2c:	cbz	x0, 415d5c <ascii_strlower_n@plt+0x11954>
  415d30:	mov	x8, x0
  415d34:	b	415d50 <ascii_strlower_n@plt+0x11948>
  415d38:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  415d3c:	add	x1, x1, #0xa2c
  415d40:	add	x0, x29, #0x18
  415d44:	bl	403e18 <asprintf@plt>
  415d48:	tbnz	w0, #31, 415d5c <ascii_strlower_n@plt+0x11954>
  415d4c:	ldr	x8, [x29, #24]
  415d50:	mov	w0, wzr
  415d54:	str	x8, [x19]
  415d58:	b	415d60 <ascii_strlower_n@plt+0x11958>
  415d5c:	mov	w0, #0xfffffff4            	// #-12
  415d60:	ldr	x19, [sp, #16]
  415d64:	ldp	x29, x30, [sp], #32
  415d68:	ret
  415d6c:	stp	x29, x30, [sp, #-32]!
  415d70:	mov	x29, sp
  415d74:	str	x19, [sp, #16]
  415d78:	str	wzr, [x29, #28]
  415d7c:	cbz	x0, 415dc4 <ascii_strlower_n@plt+0x119bc>
  415d80:	mov	x19, x0
  415d84:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415d88:	add	x0, x0, #0xbf0
  415d8c:	mov	w1, #0x5                   	// #5
  415d90:	mov	x2, x19
  415d94:	bl	404208 <string_table_lookup@plt>
  415d98:	tbz	w0, #31, 415dc8 <ascii_strlower_n@plt+0x119c0>
  415d9c:	add	x2, x29, #0x1c
  415da0:	mov	x0, x19
  415da4:	mov	w1, wzr
  415da8:	bl	4043a8 <safe_atou_full@plt>
  415dac:	ldr	w8, [x29, #28]
  415db0:	mov	w9, #0xffffffff            	// #-1
  415db4:	cmp	w8, #0x100
  415db8:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  415dbc:	csinv	w0, w8, wzr, gt
  415dc0:	b	415dc8 <ascii_strlower_n@plt+0x119c0>
  415dc4:	mov	w0, #0xffffffff            	// #-1
  415dc8:	ldr	x19, [sp, #16]
  415dcc:	ldp	x29, x30, [sp], #32
  415dd0:	ret
  415dd4:	stp	x29, x30, [sp, #-32]!
  415dd8:	lsl	x8, x0, #4
  415ddc:	stp	x20, x19, [sp, #16]
  415de0:	mov	x19, x0
  415de4:	add	x1, x8, #0x18
  415de8:	mov	w0, #0x1                   	// #1
  415dec:	mov	x29, sp
  415df0:	mov	w20, #0x1                   	// #1
  415df4:	bl	404068 <calloc@plt>
  415df8:	cbz	x0, 415e04 <ascii_strlower_n@plt+0x119fc>
  415dfc:	str	w20, [x0]
  415e00:	str	x19, [x0, #16]
  415e04:	ldp	x20, x19, [sp, #16]
  415e08:	ldp	x29, x30, [sp], #32
  415e0c:	ret
  415e10:	stp	x29, x30, [sp, #-16]!
  415e14:	mov	x29, sp
  415e18:	cbz	x0, 415e2c <ascii_strlower_n@plt+0x11a24>
  415e1c:	ldr	w8, [x0]
  415e20:	cbz	w8, 415e34 <ascii_strlower_n@plt+0x11a2c>
  415e24:	add	w8, w8, #0x1
  415e28:	str	w8, [x0]
  415e2c:	ldp	x29, x30, [sp], #16
  415e30:	ret
  415e34:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415e38:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415e3c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415e40:	add	x1, x1, #0x4e1
  415e44:	add	x2, x2, #0xdb2
  415e48:	add	x4, x4, #0xdd4
  415e4c:	mov	w3, #0x2b                  	// #43
  415e50:	mov	w0, wzr
  415e54:	bl	403a98 <log_assert_failed_realm@plt>
  415e58:	stp	x29, x30, [sp, #-48]!
  415e5c:	str	x21, [sp, #16]
  415e60:	stp	x20, x19, [sp, #32]
  415e64:	mov	x29, sp
  415e68:	cbz	x0, 415ec8 <ascii_strlower_n@plt+0x11ac0>
  415e6c:	ldr	w8, [x0]
  415e70:	mov	x19, x0
  415e74:	cbz	w8, 415edc <ascii_strlower_n@plt+0x11ad4>
  415e78:	subs	w8, w8, #0x1
  415e7c:	str	w8, [x19]
  415e80:	b.ne	415ec8 <ascii_strlower_n@plt+0x11ac0>  // b.any
  415e84:	ldr	x8, [x19, #8]
  415e88:	cbz	x8, 415ec0 <ascii_strlower_n@plt+0x11ab8>
  415e8c:	ldr	x0, [x19, #24]
  415e90:	bl	413398 <ascii_strlower_n@plt+0xef90>
  415e94:	ldr	x8, [x19, #8]
  415e98:	cmp	x8, #0x2
  415e9c:	b.cc	415ec0 <ascii_strlower_n@plt+0x11ab8>  // b.lo, b.ul, b.last
  415ea0:	add	x20, x19, #0x28
  415ea4:	mov	w21, #0x1                   	// #1
  415ea8:	ldr	x0, [x20], #16
  415eac:	bl	413398 <ascii_strlower_n@plt+0xef90>
  415eb0:	ldr	x8, [x19, #8]
  415eb4:	add	x21, x21, #0x1
  415eb8:	cmp	x21, x8
  415ebc:	b.cc	415ea8 <ascii_strlower_n@plt+0x11aa0>  // b.lo, b.ul, b.last
  415ec0:	mov	x0, x19
  415ec4:	bl	4039d8 <free@plt>
  415ec8:	ldp	x20, x19, [sp, #32]
  415ecc:	ldr	x21, [sp, #16]
  415ed0:	mov	x0, xzr
  415ed4:	ldp	x29, x30, [sp], #48
  415ed8:	ret
  415edc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  415ee0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415ee4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415ee8:	add	x1, x1, #0x4e1
  415eec:	add	x2, x2, #0xdb2
  415ef0:	add	x4, x4, #0xdfb
  415ef4:	mov	w3, #0x2b                  	// #43
  415ef8:	mov	w0, wzr
  415efc:	bl	403a98 <log_assert_failed_realm@plt>
  415f00:	stp	x29, x30, [sp, #-80]!
  415f04:	str	x25, [sp, #16]
  415f08:	stp	x24, x23, [sp, #32]
  415f0c:	stp	x22, x21, [sp, #48]
  415f10:	stp	x20, x19, [sp, #64]
  415f14:	mov	x29, sp
  415f18:	cbz	x1, 416058 <ascii_strlower_n@plt+0x11c50>
  415f1c:	mov	x22, x0
  415f20:	cbz	x0, 416034 <ascii_strlower_n@plt+0x11c2c>
  415f24:	ldr	w8, [x22]
  415f28:	cmp	w8, #0x1
  415f2c:	b.ls	415f38 <ascii_strlower_n@plt+0x11b30>  // b.plast
  415f30:	mov	w0, #0xfffffff0            	// #-16
  415f34:	b	416038 <ascii_strlower_n@plt+0x11c30>
  415f38:	ldr	x8, [x22, #8]
  415f3c:	mov	w19, w3
  415f40:	mov	w21, w2
  415f44:	mov	x20, x1
  415f48:	cbz	x8, 416000 <ascii_strlower_n@plt+0x11bf8>
  415f4c:	mov	x24, xzr
  415f50:	add	x23, x22, #0x18
  415f54:	b	415f6c <ascii_strlower_n@plt+0x11b64>
  415f58:	ldr	x25, [x22, #8]
  415f5c:	add	x24, x24, #0x1
  415f60:	add	x23, x23, #0x10
  415f64:	cmp	x24, x25
  415f68:	b.cs	416004 <ascii_strlower_n@plt+0x11bfc>  // b.hs, b.nlast
  415f6c:	ldr	w8, [x23, #8]
  415f70:	cmp	w8, w21
  415f74:	b.ne	415f58 <ascii_strlower_n@plt+0x11b50>  // b.any
  415f78:	ldr	x8, [x23]
  415f7c:	ldr	x1, [x20, #8]
  415f80:	ldr	x0, [x8, #8]
  415f84:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  415f88:	tbnz	w0, #31, 416038 <ascii_strlower_n@plt+0x11c30>
  415f8c:	cbz	w0, 415f58 <ascii_strlower_n@plt+0x11b50>
  415f90:	ldr	x0, [x23]
  415f94:	ldr	w8, [x20, #24]
  415f98:	ldr	w9, [x0, #24]
  415f9c:	cmp	w8, #0x0
  415fa0:	cset	w8, eq  // eq = none
  415fa4:	cmp	w9, #0x0
  415fa8:	cset	w9, eq  // eq = none
  415fac:	eor	w8, w8, w9
  415fb0:	tbnz	w8, #0, 416050 <ascii_strlower_n@plt+0x11c48>
  415fb4:	mov	x1, x20
  415fb8:	bl	41386c <ascii_strlower_n@plt+0xf464>
  415fbc:	tbnz	w0, #31, 416038 <ascii_strlower_n@plt+0x11c30>
  415fc0:	cbz	w0, 415f58 <ascii_strlower_n@plt+0x11b50>
  415fc4:	ldr	x8, [x23]
  415fc8:	ldr	w9, [x20, #24]
  415fcc:	ldr	w8, [x8, #24]
  415fd0:	cmp	w9, w8
  415fd4:	b.ls	415fec <ascii_strlower_n@plt+0x11be4>  // b.plast
  415fd8:	mov	x0, x20
  415fdc:	bl	413350 <ascii_strlower_n@plt+0xef48>
  415fe0:	ldr	x0, [x23]
  415fe4:	bl	413398 <ascii_strlower_n@plt+0xef90>
  415fe8:	str	x20, [x23]
  415fec:	ldr	w8, [x23, #12]
  415ff0:	mov	w0, wzr
  415ff4:	orr	w8, w8, w19
  415ff8:	str	w8, [x23, #12]
  415ffc:	b	416038 <ascii_strlower_n@plt+0x11c30>
  416000:	mov	x25, xzr
  416004:	ldr	x8, [x22, #16]
  416008:	cmp	x25, x8
  41600c:	b.cs	416034 <ascii_strlower_n@plt+0x11c2c>  // b.hs, b.nlast
  416010:	add	x8, x25, #0x1
  416014:	mov	x0, x20
  416018:	str	x8, [x22, #8]
  41601c:	bl	413350 <ascii_strlower_n@plt+0xef48>
  416020:	add	x8, x22, x25, lsl #4
  416024:	str	x0, [x8, #24]
  416028:	mov	w0, #0x1                   	// #1
  41602c:	stp	w21, w19, [x8, #32]
  416030:	b	416038 <ascii_strlower_n@plt+0x11c30>
  416034:	mov	w0, #0xffffffe4            	// #-28
  416038:	ldp	x20, x19, [sp, #64]
  41603c:	ldp	x22, x21, [sp, #48]
  416040:	ldp	x24, x23, [sp, #32]
  416044:	ldr	x25, [sp, #16]
  416048:	ldp	x29, x30, [sp], #80
  41604c:	ret
  416050:	mov	w0, #0xffffffea            	// #-22
  416054:	b	416038 <ascii_strlower_n@plt+0x11c30>
  416058:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41605c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416060:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416064:	add	x1, x1, #0x9e6
  416068:	add	x2, x2, #0xdb2
  41606c:	add	x4, x4, #0xe24
  416070:	mov	w3, #0x51                  	// #81
  416074:	mov	w0, wzr
  416078:	bl	403a98 <log_assert_failed_realm@plt>
  41607c:	stp	x29, x30, [sp, #-48]!
  416080:	stp	x22, x21, [sp, #16]
  416084:	stp	x20, x19, [sp, #32]
  416088:	mov	x29, sp
  41608c:	cbz	x0, 4160e0 <ascii_strlower_n@plt+0x11cd8>
  416090:	mov	x21, x1
  416094:	cbz	x1, 416100 <ascii_strlower_n@plt+0x11cf8>
  416098:	mov	w1, #0x1                   	// #1
  41609c:	mov	w19, w3
  4160a0:	mov	w20, w2
  4160a4:	mov	x22, x0
  4160a8:	bl	416124 <ascii_strlower_n@plt+0x11d1c>
  4160ac:	tbnz	w0, #31, 4160d0 <ascii_strlower_n@plt+0x11cc8>
  4160b0:	ldr	x0, [x22]
  4160b4:	mov	x1, x21
  4160b8:	mov	w2, w20
  4160bc:	mov	w3, w19
  4160c0:	ldp	x20, x19, [sp, #32]
  4160c4:	ldp	x22, x21, [sp, #16]
  4160c8:	ldp	x29, x30, [sp], #48
  4160cc:	b	415f00 <ascii_strlower_n@plt+0x11af8>
  4160d0:	ldp	x20, x19, [sp, #32]
  4160d4:	ldp	x22, x21, [sp, #16]
  4160d8:	ldp	x29, x30, [sp], #48
  4160dc:	ret
  4160e0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4160e4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4160e8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4160ec:	add	x1, x1, #0x562
  4160f0:	add	x2, x2, #0xdb2
  4160f4:	add	x4, x4, #0xe6e
  4160f8:	mov	w3, #0x8d                  	// #141
  4160fc:	bl	403a98 <log_assert_failed_realm@plt>
  416100:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  416104:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416108:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41610c:	add	x1, x1, #0x9e6
  416110:	add	x2, x2, #0xdb2
  416114:	add	x4, x4, #0xe6e
  416118:	mov	w3, #0x8e                  	// #142
  41611c:	mov	w0, wzr
  416120:	bl	403a98 <log_assert_failed_realm@plt>
  416124:	stp	x29, x30, [sp, #-80]!
  416128:	stp	x26, x25, [sp, #16]
  41612c:	stp	x24, x23, [sp, #32]
  416130:	stp	x22, x21, [sp, #48]
  416134:	stp	x20, x19, [sp, #64]
  416138:	mov	x29, sp
  41613c:	cbz	x0, 4162b4 <ascii_strlower_n@plt+0x11eac>
  416140:	mov	x21, x1
  416144:	cbz	x1, 416268 <ascii_strlower_n@plt+0x11e60>
  416148:	ldr	x20, [x0]
  41614c:	mov	x19, x0
  416150:	cbz	x20, 41620c <ascii_strlower_n@plt+0x11e04>
  416154:	ldr	w8, [x20]
  416158:	ldr	x9, [x20, #8]
  41615c:	cmp	w8, #0x1
  416160:	add	x22, x9, x21
  416164:	b.ls	416230 <ascii_strlower_n@plt+0x11e28>  // b.plast
  416168:	mov	w1, #0x18                  	// #24
  41616c:	bfi	x1, x22, #5, #59
  416170:	mov	w0, #0x1                   	// #1
  416174:	mov	w23, #0x1                   	// #1
  416178:	bl	404068 <calloc@plt>
  41617c:	cbz	x0, 416270 <ascii_strlower_n@plt+0x11e68>
  416180:	lsl	x8, x22, #1
  416184:	str	w23, [x0]
  416188:	str	x8, [x0, #16]
  41618c:	ldr	x8, [x20, #8]
  416190:	mov	x21, x0
  416194:	cbz	x8, 41628c <ascii_strlower_n@plt+0x11e84>
  416198:	ldr	x0, [x20, #24]
  41619c:	cbz	x0, 4161e8 <ascii_strlower_n@plt+0x11de0>
  4161a0:	mov	x22, xzr
  4161a4:	add	x23, x20, #0x28
  4161a8:	ldp	x24, x8, [x21, #8]
  4161ac:	cmp	x24, x8
  4161b0:	b.cs	416278 <ascii_strlower_n@plt+0x11e70>  // b.hs, b.nlast
  4161b4:	ldp	w25, w26, [x23, #-8]
  4161b8:	add	x8, x24, #0x1
  4161bc:	str	x8, [x21, #8]
  4161c0:	bl	413350 <ascii_strlower_n@plt+0xef48>
  4161c4:	add	x8, x21, x24, lsl #4
  4161c8:	str	x0, [x8, #24]
  4161cc:	stp	w25, w26, [x8, #32]
  4161d0:	ldr	x8, [x20, #8]
  4161d4:	add	x22, x22, #0x1
  4161d8:	cmp	x22, x8
  4161dc:	b.cs	416288 <ascii_strlower_n@plt+0x11e80>  // b.hs, b.nlast
  4161e0:	ldr	x0, [x23], #16
  4161e4:	cbnz	x0, 4161a8 <ascii_strlower_n@plt+0x11da0>
  4161e8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4161ec:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4161f0:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4161f4:	add	x1, x1, #0x9e6
  4161f8:	add	x2, x2, #0xdb2
  4161fc:	add	x4, x4, #0x32f
  416200:	mov	w3, #0x2e                  	// #46
  416204:	mov	w0, wzr
  416208:	bl	403a98 <log_assert_failed_realm@plt>
  41620c:	lsl	x8, x21, #4
  416210:	add	x1, x8, #0x18
  416214:	mov	w0, #0x1                   	// #1
  416218:	mov	w20, #0x1                   	// #1
  41621c:	bl	404068 <calloc@plt>
  416220:	cbz	x0, 416270 <ascii_strlower_n@plt+0x11e68>
  416224:	mov	x8, x0
  416228:	str	w20, [x0]
  41622c:	b	416258 <ascii_strlower_n@plt+0x11e50>
  416230:	ldr	x8, [x20, #16]
  416234:	cmp	x8, x22
  416238:	b.cs	416268 <ascii_strlower_n@plt+0x11e60>  // b.hs, b.nlast
  41623c:	mov	w1, #0x18                  	// #24
  416240:	bfi	x1, x22, #5, #59
  416244:	mov	x0, x20
  416248:	bl	4040b8 <realloc@plt>
  41624c:	cbz	x0, 416270 <ascii_strlower_n@plt+0x11e68>
  416250:	mov	x8, x0
  416254:	lsl	x21, x22, #1
  416258:	mov	w0, wzr
  41625c:	str	x21, [x8, #16]
  416260:	str	x8, [x19]
  416264:	b	41629c <ascii_strlower_n@plt+0x11e94>
  416268:	mov	w0, wzr
  41626c:	b	41629c <ascii_strlower_n@plt+0x11e94>
  416270:	mov	w0, #0xfffffff4            	// #-12
  416274:	b	41629c <ascii_strlower_n@plt+0x11e94>
  416278:	mov	x0, x21
  41627c:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416280:	mov	w0, #0xffffffe4            	// #-28
  416284:	b	41629c <ascii_strlower_n@plt+0x11e94>
  416288:	ldr	x20, [x19]
  41628c:	mov	x0, x20
  416290:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416294:	mov	w0, wzr
  416298:	str	x21, [x19]
  41629c:	ldp	x20, x19, [sp, #64]
  4162a0:	ldp	x22, x21, [sp, #48]
  4162a4:	ldp	x24, x23, [sp, #32]
  4162a8:	ldp	x26, x25, [sp, #16]
  4162ac:	ldp	x29, x30, [sp], #80
  4162b0:	ret
  4162b4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4162b8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4162bc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4162c0:	add	x1, x1, #0x562
  4162c4:	add	x2, x2, #0xdb2
  4162c8:	add	x4, x4, #0x26e
  4162cc:	mov	w3, #0x28d                 	// #653
  4162d0:	bl	403a98 <log_assert_failed_realm@plt>
  4162d4:	stp	x29, x30, [sp, #-64]!
  4162d8:	str	x23, [sp, #16]
  4162dc:	mov	x23, x1
  4162e0:	stp	x22, x21, [sp, #32]
  4162e4:	mov	w22, w2
  4162e8:	mov	x21, x0
  4162ec:	mov	w0, #0x1                   	// #1
  4162f0:	mov	w1, #0x6                   	// #6
  4162f4:	mov	x2, x23
  4162f8:	stp	x20, x19, [sp, #48]
  4162fc:	mov	x29, sp
  416300:	mov	w20, w3
  416304:	bl	4131a8 <ascii_strlower_n@plt+0xeda0>
  416308:	cbz	x0, 416368 <ascii_strlower_n@plt+0x11f60>
  41630c:	mov	x19, x0
  416310:	str	w22, [x0, #24]
  416314:	mov	x0, x23
  416318:	bl	403ae8 <strdup@plt>
  41631c:	str	x0, [x19, #80]
  416320:	cbz	x0, 416370 <ascii_strlower_n@plt+0x11f68>
  416324:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416328:	add	x0, x0, #0xec0
  41632c:	mov	x1, x23
  416330:	mov	x2, xzr
  416334:	bl	403f58 <strjoin_real@plt>
  416338:	str	x0, [x19, #88]
  41633c:	cbz	x0, 416370 <ascii_strlower_n@plt+0x11f68>
  416340:	movi	v0.4s, #0x1
  416344:	mov	w3, #0x1                   	// #1
  416348:	mov	x0, x21
  41634c:	mov	x1, x19
  416350:	mov	w2, w20
  416354:	str	q0, [x19, #96]
  416358:	str	w22, [x19, #112]
  41635c:	bl	415f00 <ascii_strlower_n@plt+0x11af8>
  416360:	mov	w20, w0
  416364:	b	416374 <ascii_strlower_n@plt+0x11f6c>
  416368:	mov	w20, #0xfffffff4            	// #-12
  41636c:	b	41637c <ascii_strlower_n@plt+0x11f74>
  416370:	mov	w20, #0xfffffff4            	// #-12
  416374:	mov	x0, x19
  416378:	bl	413398 <ascii_strlower_n@plt+0xef90>
  41637c:	mov	w0, w20
  416380:	ldp	x20, x19, [sp, #48]
  416384:	ldp	x22, x21, [sp, #32]
  416388:	ldr	x23, [sp, #16]
  41638c:	ldp	x29, x30, [sp], #64
  416390:	ret
  416394:	stp	x29, x30, [sp, #-80]!
  416398:	stp	x26, x25, [sp, #16]
  41639c:	stp	x24, x23, [sp, #32]
  4163a0:	stp	x22, x21, [sp, #48]
  4163a4:	stp	x20, x19, [sp, #64]
  4163a8:	mov	x29, sp
  4163ac:	cbz	x1, 416488 <ascii_strlower_n@plt+0x12080>
  4163b0:	mov	x19, x2
  4163b4:	mov	x21, x0
  4163b8:	cbz	x0, 416454 <ascii_strlower_n@plt+0x1204c>
  4163bc:	ldr	x8, [x21, #8]
  4163c0:	mov	x20, x1
  4163c4:	cbz	x8, 416444 <ascii_strlower_n@plt+0x1203c>
  4163c8:	ldr	x1, [x21, #24]
  4163cc:	ldr	w26, [x21, #36]
  4163d0:	ldr	x8, [x21, #8]
  4163d4:	cbz	x8, 416454 <ascii_strlower_n@plt+0x1204c>
  4163d8:	mov	w22, wzr
  4163dc:	mov	w23, wzr
  4163e0:	mov	x24, xzr
  4163e4:	add	x25, x21, #0x28
  4163e8:	b	416400 <ascii_strlower_n@plt+0x11ff8>
  4163ec:	ldr	x1, [x25]
  4163f0:	ldr	w26, [x25, #12]
  4163f4:	cmp	x24, x8
  4163f8:	add	x25, x25, #0x10
  4163fc:	b.cs	41645c <ascii_strlower_n@plt+0x12054>  // b.hs, b.nlast
  416400:	mov	x0, x20
  416404:	mov	x2, xzr
  416408:	bl	41274c <ascii_strlower_n@plt+0xe344>
  41640c:	tbnz	w0, #31, 416468 <ascii_strlower_n@plt+0x12060>
  416410:	cbz	w0, 416428 <ascii_strlower_n@plt+0x12020>
  416414:	cbz	x19, 416480 <ascii_strlower_n@plt+0x12078>
  416418:	tst	w22, #0x1
  41641c:	csinv	w8, w23, wzr, ne  // ne = any
  416420:	and	w23, w8, w26
  416424:	mov	w22, #0x1                   	// #1
  416428:	ldr	x8, [x21, #8]
  41642c:	add	x24, x24, #0x1
  416430:	cmp	x24, x8
  416434:	b.cc	4163ec <ascii_strlower_n@plt+0x11fe4>  // b.lo, b.ul, b.last
  416438:	mov	x1, xzr
  41643c:	mov	w26, wzr
  416440:	b	4163f4 <ascii_strlower_n@plt+0x11fec>
  416444:	mov	x1, xzr
  416448:	mov	w26, wzr
  41644c:	ldr	x8, [x21, #8]
  416450:	cbnz	x8, 4163d8 <ascii_strlower_n@plt+0x11fd0>
  416454:	mov	w22, wzr
  416458:	mov	w23, wzr
  41645c:	cbz	x19, 416464 <ascii_strlower_n@plt+0x1205c>
  416460:	str	w23, [x19]
  416464:	and	w0, w22, #0x1
  416468:	ldp	x20, x19, [sp, #64]
  41646c:	ldp	x22, x21, [sp, #48]
  416470:	ldp	x24, x23, [sp, #32]
  416474:	ldp	x26, x25, [sp, #16]
  416478:	ldp	x29, x30, [sp], #80
  41647c:	ret
  416480:	mov	w0, #0x1                   	// #1
  416484:	b	416468 <ascii_strlower_n@plt+0x12060>
  416488:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41648c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416490:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416494:	add	x1, x1, #0xd96
  416498:	add	x2, x2, #0xdb2
  41649c:	add	x4, x4, #0xec6
  4164a0:	mov	w3, #0xb7                  	// #183
  4164a4:	mov	w0, wzr
  4164a8:	bl	403a98 <log_assert_failed_realm@plt>
  4164ac:	cbz	x0, 416524 <ascii_strlower_n@plt+0x1211c>
  4164b0:	ldr	x8, [x0, #8]
  4164b4:	cbz	x8, 4164c8 <ascii_strlower_n@plt+0x120c0>
  4164b8:	ldr	x11, [x0, #24]
  4164bc:	ldr	x8, [x0, #8]
  4164c0:	cbnz	x8, 4164d4 <ascii_strlower_n@plt+0x120cc>
  4164c4:	b	416520 <ascii_strlower_n@plt+0x12118>
  4164c8:	mov	x11, xzr
  4164cc:	ldr	x8, [x0, #8]
  4164d0:	cbz	x8, 416520 <ascii_strlower_n@plt+0x12118>
  4164d4:	mov	x9, xzr
  4164d8:	add	x10, x0, #0x28
  4164dc:	mov	w0, #0x1                   	// #1
  4164e0:	b	4164f4 <ascii_strlower_n@plt+0x120ec>
  4164e4:	ldr	x11, [x10]
  4164e8:	cmp	x8, x9
  4164ec:	add	x10, x10, #0x10
  4164f0:	b.eq	416520 <ascii_strlower_n@plt+0x12118>  // b.none
  4164f4:	ldr	x11, [x11, #8]
  4164f8:	ldrh	w11, [x11, #6]
  4164fc:	cmp	w11, #0x2f
  416500:	b.eq	416524 <ascii_strlower_n@plt+0x1211c>  // b.none
  416504:	cmp	w11, #0x32
  416508:	b.eq	416524 <ascii_strlower_n@plt+0x1211c>  // b.none
  41650c:	add	x9, x9, #0x1
  416510:	cmp	x9, x8
  416514:	b.cc	4164e4 <ascii_strlower_n@plt+0x120dc>  // b.lo, b.ul, b.last
  416518:	mov	x11, xzr
  41651c:	b	4164e8 <ascii_strlower_n@plt+0x120e0>
  416520:	mov	w0, wzr
  416524:	ret
  416528:	sub	sp, sp, #0x40
  41652c:	stp	x29, x30, [sp, #16]
  416530:	stp	x22, x21, [sp, #32]
  416534:	stp	x20, x19, [sp, #48]
  416538:	add	x29, sp, #0x10
  41653c:	cbz	x0, 4165d8 <ascii_strlower_n@plt+0x121d0>
  416540:	ldr	x8, [x0, #8]
  416544:	mov	x19, x1
  416548:	mov	x20, x0
  41654c:	cbz	x8, 416554 <ascii_strlower_n@plt+0x1214c>
  416550:	ldr	x8, [x20, #24]
  416554:	ldr	x9, [x20, #8]
  416558:	cbz	x9, 4165d4 <ascii_strlower_n@plt+0x121cc>
  41655c:	mov	x21, xzr
  416560:	add	x22, x20, #0x28
  416564:	b	416578 <ascii_strlower_n@plt+0x12170>
  416568:	ldr	x8, [x22]
  41656c:	cmp	x21, x9
  416570:	add	x22, x22, #0x10
  416574:	b.cs	4165d4 <ascii_strlower_n@plt+0x121cc>  // b.hs, b.nlast
  416578:	ldr	x0, [x8, #8]
  41657c:	ldrh	w8, [x0, #6]
  416580:	cmp	w8, #0x32
  416584:	b.ne	4165bc <ascii_strlower_n@plt+0x121b4>  // b.any
  416588:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  41658c:	str	x0, [sp, #8]
  416590:	add	x0, sp, #0x8
  416594:	mov	w2, #0x3f                  	// #63
  416598:	mov	x1, xzr
  41659c:	mov	w3, wzr
  4165a0:	bl	404108 <dns_label_unescape@plt>
  4165a4:	tbnz	w0, #31, 4165d8 <ascii_strlower_n@plt+0x121d0>
  4165a8:	cbz	w0, 4165bc <ascii_strlower_n@plt+0x121b4>
  4165ac:	ldr	x0, [sp, #8]
  4165b0:	mov	x1, x19
  4165b4:	bl	404248 <dns_name_equal@plt>
  4165b8:	cbnz	w0, 4165d8 <ascii_strlower_n@plt+0x121d0>
  4165bc:	ldr	x9, [x20, #8]
  4165c0:	add	x21, x21, #0x1
  4165c4:	cmp	x21, x9
  4165c8:	b.cc	416568 <ascii_strlower_n@plt+0x12160>  // b.lo, b.ul, b.last
  4165cc:	mov	x8, xzr
  4165d0:	b	41656c <ascii_strlower_n@plt+0x12164>
  4165d4:	mov	w0, wzr
  4165d8:	ldp	x20, x19, [sp, #48]
  4165dc:	ldp	x22, x21, [sp, #32]
  4165e0:	ldp	x29, x30, [sp, #16]
  4165e4:	add	sp, sp, #0x40
  4165e8:	ret
  4165ec:	sub	sp, sp, #0x70
  4165f0:	stp	x29, x30, [sp, #16]
  4165f4:	stp	x28, x27, [sp, #32]
  4165f8:	stp	x26, x25, [sp, #48]
  4165fc:	stp	x24, x23, [sp, #64]
  416600:	stp	x22, x21, [sp, #80]
  416604:	stp	x20, x19, [sp, #96]
  416608:	add	x29, sp, #0x10
  41660c:	cbz	x1, 416738 <ascii_strlower_n@plt+0x12330>
  416610:	ldrh	w8, [x1, #6]
  416614:	mov	x21, x1
  416618:	mov	x22, x0
  41661c:	mov	w0, wzr
  416620:	cmp	w8, #0x6
  416624:	b.eq	416718 <ascii_strlower_n@plt+0x12310>  // b.none
  416628:	cbz	x22, 416718 <ascii_strlower_n@plt+0x12310>
  41662c:	ldr	x8, [x22, #8]
  416630:	mov	x20, x2
  416634:	str	x3, [sp, #8]
  416638:	cbz	x8, 4166dc <ascii_strlower_n@plt+0x122d4>
  41663c:	ldr	x28, [x22, #24]
  416640:	ldr	w24, [x22, #36]
  416644:	ldr	x8, [x22, #8]
  416648:	cbz	x8, 4166ec <ascii_strlower_n@plt+0x122e4>
  41664c:	mov	x25, xzr
  416650:	mov	w19, wzr
  416654:	mov	x26, xzr
  416658:	add	x27, x22, #0x28
  41665c:	b	416674 <ascii_strlower_n@plt+0x1226c>
  416660:	ldr	x28, [x27]
  416664:	ldr	w24, [x27, #12]
  416668:	cmp	x26, x8
  41666c:	add	x27, x27, #0x10
  416670:	b.cs	4166f4 <ascii_strlower_n@plt+0x122ec>  // b.hs, b.nlast
  416674:	ldr	x1, [x28, #8]
  416678:	mov	x0, x21
  41667c:	bl	412b38 <ascii_strlower_n@plt+0xe730>
  416680:	tbnz	w0, #31, 416718 <ascii_strlower_n@plt+0x12310>
  416684:	cbz	w0, 4166c0 <ascii_strlower_n@plt+0x122b8>
  416688:	cbz	x25, 4166b8 <ascii_strlower_n@plt+0x122b0>
  41668c:	ldr	x0, [x28, #8]
  416690:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  416694:	ldr	x8, [x25, #8]
  416698:	mov	x23, x0
  41669c:	mov	x0, x8
  4166a0:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  4166a4:	mov	x1, x0
  4166a8:	mov	x0, x23
  4166ac:	bl	404238 <dns_name_endswith@plt>
  4166b0:	tbnz	w0, #31, 416718 <ascii_strlower_n@plt+0x12310>
  4166b4:	cbnz	w0, 4166c0 <ascii_strlower_n@plt+0x122b8>
  4166b8:	mov	x25, x28
  4166bc:	mov	w19, w24
  4166c0:	ldr	x8, [x22, #8]
  4166c4:	add	x26, x26, #0x1
  4166c8:	cmp	x26, x8
  4166cc:	b.cc	416660 <ascii_strlower_n@plt+0x12258>  // b.lo, b.ul, b.last
  4166d0:	mov	x28, xzr
  4166d4:	mov	w24, wzr
  4166d8:	b	416668 <ascii_strlower_n@plt+0x12260>
  4166dc:	mov	x28, xzr
  4166e0:	mov	w24, wzr
  4166e4:	ldr	x8, [x22, #8]
  4166e8:	cbnz	x8, 41664c <ascii_strlower_n@plt+0x12244>
  4166ec:	mov	w19, wzr
  4166f0:	mov	x25, xzr
  4166f4:	cbz	x25, 416714 <ascii_strlower_n@plt+0x1230c>
  4166f8:	cbz	x20, 416700 <ascii_strlower_n@plt+0x122f8>
  4166fc:	str	x25, [x20]
  416700:	ldr	x8, [sp, #8]
  416704:	cbz	x8, 41670c <ascii_strlower_n@plt+0x12304>
  416708:	str	w19, [x8]
  41670c:	mov	w0, #0x1                   	// #1
  416710:	b	416718 <ascii_strlower_n@plt+0x12310>
  416714:	mov	w0, wzr
  416718:	ldp	x20, x19, [sp, #96]
  41671c:	ldp	x22, x21, [sp, #80]
  416720:	ldp	x24, x23, [sp, #64]
  416724:	ldp	x26, x25, [sp, #48]
  416728:	ldp	x28, x27, [sp, #32]
  41672c:	ldp	x29, x30, [sp, #16]
  416730:	add	sp, sp, #0x70
  416734:	ret
  416738:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  41673c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416740:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416744:	add	x1, x1, #0xd96
  416748:	add	x2, x2, #0xdb2
  41674c:	add	x4, x4, #0xf16
  416750:	mov	w3, #0xfc                  	// #252
  416754:	mov	w0, wzr
  416758:	bl	403a98 <log_assert_failed_realm@plt>
  41675c:	stp	x29, x30, [sp, #-80]!
  416760:	stp	x26, x25, [sp, #16]
  416764:	stp	x24, x23, [sp, #32]
  416768:	stp	x22, x21, [sp, #48]
  41676c:	stp	x20, x19, [sp, #64]
  416770:	mov	x29, sp
  416774:	cbz	x1, 416854 <ascii_strlower_n@plt+0x1244c>
  416778:	mov	x22, x0
  41677c:	ldrh	w0, [x1, #6]
  416780:	mov	x19, x3
  416784:	mov	x20, x2
  416788:	mov	x21, x1
  41678c:	bl	419000 <ascii_strlower_n@plt+0x14bf8>
  416790:	mov	w8, w0
  416794:	mov	w0, wzr
  416798:	tbz	w8, #0, 41683c <ascii_strlower_n@plt+0x12434>
  41679c:	cbz	x22, 41683c <ascii_strlower_n@plt+0x12434>
  4167a0:	ldr	x8, [x22, #8]
  4167a4:	cbz	x8, 4167bc <ascii_strlower_n@plt+0x123b4>
  4167a8:	ldr	x23, [x22, #24]
  4167ac:	ldr	w24, [x22, #36]
  4167b0:	ldr	x8, [x22, #8]
  4167b4:	cbnz	x8, 4167cc <ascii_strlower_n@plt+0x123c4>
  4167b8:	b	416820 <ascii_strlower_n@plt+0x12418>
  4167bc:	mov	x23, xzr
  4167c0:	mov	w24, wzr
  4167c4:	ldr	x8, [x22, #8]
  4167c8:	cbz	x8, 416820 <ascii_strlower_n@plt+0x12418>
  4167cc:	mov	x25, xzr
  4167d0:	add	x26, x22, #0x28
  4167d4:	b	4167ec <ascii_strlower_n@plt+0x123e4>
  4167d8:	ldr	x23, [x26]
  4167dc:	ldr	w24, [x26, #12]
  4167e0:	cmp	x25, x8
  4167e4:	add	x26, x26, #0x10
  4167e8:	b.cs	416820 <ascii_strlower_n@plt+0x12418>  // b.hs, b.nlast
  4167ec:	ldr	x1, [x23, #8]
  4167f0:	mov	x0, x21
  4167f4:	mov	x2, xzr
  4167f8:	bl	4128f8 <ascii_strlower_n@plt+0xe4f0>
  4167fc:	tbnz	w0, #31, 41683c <ascii_strlower_n@plt+0x12434>
  416800:	cbnz	w0, 416828 <ascii_strlower_n@plt+0x12420>
  416804:	ldr	x8, [x22, #8]
  416808:	add	x25, x25, #0x1
  41680c:	cmp	x25, x8
  416810:	b.cc	4167d8 <ascii_strlower_n@plt+0x123d0>  // b.lo, b.ul, b.last
  416814:	mov	x23, xzr
  416818:	mov	w24, wzr
  41681c:	b	4167e0 <ascii_strlower_n@plt+0x123d8>
  416820:	mov	w0, wzr
  416824:	b	41683c <ascii_strlower_n@plt+0x12434>
  416828:	cbz	x20, 416830 <ascii_strlower_n@plt+0x12428>
  41682c:	str	x23, [x20]
  416830:	cbz	x19, 416838 <ascii_strlower_n@plt+0x12430>
  416834:	str	w24, [x19]
  416838:	mov	w0, #0x1                   	// #1
  41683c:	ldp	x20, x19, [sp, #64]
  416840:	ldp	x22, x21, [sp, #48]
  416844:	ldp	x24, x23, [sp, #32]
  416848:	ldp	x26, x25, [sp, #16]
  41684c:	ldp	x29, x30, [sp], #80
  416850:	ret
  416854:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  416858:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41685c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416860:	add	x1, x1, #0xd96
  416864:	add	x2, x2, #0xdb2
  416868:	add	x4, x4, #0xf7b
  41686c:	mov	w3, #0x125                 	// #293
  416870:	mov	w0, wzr
  416874:	bl	403a98 <log_assert_failed_realm@plt>
  416878:	stp	x29, x30, [sp, #-96]!
  41687c:	str	x27, [sp, #16]
  416880:	stp	x26, x25, [sp, #32]
  416884:	stp	x24, x23, [sp, #48]
  416888:	stp	x22, x21, [sp, #64]
  41688c:	stp	x20, x19, [sp, #80]
  416890:	mov	x29, sp
  416894:	cbz	x2, 416a2c <ascii_strlower_n@plt+0x12624>
  416898:	mov	x19, x2
  41689c:	mov	x20, x1
  4168a0:	mov	x22, x0
  4168a4:	cbz	x0, 416958 <ascii_strlower_n@plt+0x12550>
  4168a8:	ldr	x8, [x22, #8]
  4168ac:	cbz	x8, 416958 <ascii_strlower_n@plt+0x12550>
  4168b0:	cbz	x20, 416978 <ascii_strlower_n@plt+0x12570>
  4168b4:	ldr	x9, [x20, #8]
  4168b8:	cbz	x9, 416978 <ascii_strlower_n@plt+0x12570>
  4168bc:	add	x23, x9, x8
  4168c0:	lsl	x8, x23, #4
  4168c4:	add	x1, x8, #0x18
  4168c8:	mov	w0, #0x1                   	// #1
  4168cc:	mov	w24, #0x1                   	// #1
  4168d0:	bl	404068 <calloc@plt>
  4168d4:	cbz	x0, 416994 <ascii_strlower_n@plt+0x1258c>
  4168d8:	str	w24, [x0]
  4168dc:	str	x23, [x0, #16]
  4168e0:	mov	x21, x0
  4168e4:	ldr	x0, [x22, #24]
  4168e8:	cbz	x0, 416934 <ascii_strlower_n@plt+0x1252c>
  4168ec:	mov	x23, xzr
  4168f0:	add	x24, x22, #0x28
  4168f4:	ldp	x25, x8, [x21, #8]
  4168f8:	cmp	x25, x8
  4168fc:	b.cs	41699c <ascii_strlower_n@plt+0x12594>  // b.hs, b.nlast
  416900:	ldp	w26, w27, [x24, #-8]
  416904:	add	x8, x25, #0x1
  416908:	str	x8, [x21, #8]
  41690c:	bl	413350 <ascii_strlower_n@plt+0xef48>
  416910:	add	x8, x21, x25, lsl #4
  416914:	str	x0, [x8, #24]
  416918:	stp	w26, w27, [x8, #32]
  41691c:	ldr	x8, [x22, #8]
  416920:	add	x23, x23, #0x1
  416924:	cmp	x23, x8
  416928:	b.cs	4169a4 <ascii_strlower_n@plt+0x1259c>  // b.hs, b.nlast
  41692c:	ldr	x0, [x24], #16
  416930:	cbnz	x0, 4168f4 <ascii_strlower_n@plt+0x124ec>
  416934:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  416938:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41693c:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  416940:	add	x1, x1, #0x9e6
  416944:	add	x2, x2, #0xdb2
  416948:	add	x4, x4, #0x32f
  41694c:	mov	w3, #0x2e                  	// #46
  416950:	mov	w0, wzr
  416954:	bl	403a98 <log_assert_failed_realm@plt>
  416958:	cbz	x20, 41696c <ascii_strlower_n@plt+0x12564>
  41695c:	ldr	w8, [x20]
  416960:	cbz	w8, 416a50 <ascii_strlower_n@plt+0x12648>
  416964:	add	w8, w8, #0x1
  416968:	str	w8, [x20]
  41696c:	mov	w23, wzr
  416970:	str	x20, [x19]
  416974:	b	416a0c <ascii_strlower_n@plt+0x12604>
  416978:	ldr	w8, [x22]
  41697c:	cbz	w8, 416a50 <ascii_strlower_n@plt+0x12648>
  416980:	add	w8, w8, #0x1
  416984:	mov	w23, wzr
  416988:	str	w8, [x22]
  41698c:	str	x22, [x19]
  416990:	b	416a0c <ascii_strlower_n@plt+0x12604>
  416994:	mov	w23, #0xfffffff4            	// #-12
  416998:	b	416a0c <ascii_strlower_n@plt+0x12604>
  41699c:	mov	w23, #0xffffffe4            	// #-28
  4169a0:	b	4169f8 <ascii_strlower_n@plt+0x125f0>
  4169a4:	ldr	x8, [x20, #8]
  4169a8:	cbz	x8, 416a04 <ascii_strlower_n@plt+0x125fc>
  4169ac:	ldr	x1, [x20, #24]
  4169b0:	ldp	w2, w3, [x20, #32]
  4169b4:	mov	x0, x21
  4169b8:	bl	415f00 <ascii_strlower_n@plt+0x11af8>
  4169bc:	tbnz	w0, #31, 4169f4 <ascii_strlower_n@plt+0x125ec>
  4169c0:	mov	x22, xzr
  4169c4:	add	x8, x20, #0x34
  4169c8:	ldr	x9, [x20, #8]
  4169cc:	add	x22, x22, #0x1
  4169d0:	cmp	x22, x9
  4169d4:	b.cs	416a04 <ascii_strlower_n@plt+0x125fc>  // b.hs, b.nlast
  4169d8:	ldur	x1, [x8, #-12]
  4169dc:	ldp	w2, w3, [x8, #-4]
  4169e0:	mov	x0, x21
  4169e4:	add	x24, x8, #0x10
  4169e8:	bl	415f00 <ascii_strlower_n@plt+0x11af8>
  4169ec:	mov	x8, x24
  4169f0:	tbz	w0, #31, 4169c8 <ascii_strlower_n@plt+0x125c0>
  4169f4:	mov	w23, w0
  4169f8:	mov	x0, x21
  4169fc:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416a00:	b	416a0c <ascii_strlower_n@plt+0x12604>
  416a04:	mov	w23, wzr
  416a08:	str	x21, [x19]
  416a0c:	mov	w0, w23
  416a10:	ldp	x20, x19, [sp, #80]
  416a14:	ldp	x22, x21, [sp, #64]
  416a18:	ldp	x24, x23, [sp, #48]
  416a1c:	ldp	x26, x25, [sp, #32]
  416a20:	ldr	x27, [sp, #16]
  416a24:	ldp	x29, x30, [sp], #96
  416a28:	ret
  416a2c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  416a30:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416a34:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416a38:	add	x1, x1, #0xcb6
  416a3c:	add	x2, x2, #0xdb2
  416a40:	add	x4, x4, #0xfeb
  416a44:	mov	w3, #0x13f                 	// #319
  416a48:	mov	w0, wzr
  416a4c:	bl	403a98 <log_assert_failed_realm@plt>
  416a50:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  416a54:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416a58:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416a5c:	add	x1, x1, #0x4e1
  416a60:	add	x2, x2, #0xdb2
  416a64:	add	x4, x4, #0xdd4
  416a68:	mov	w3, #0x2b                  	// #43
  416a6c:	mov	w0, wzr
  416a70:	bl	403a98 <log_assert_failed_realm@plt>
  416a74:	stp	x29, x30, [sp, #-32]!
  416a78:	str	x19, [sp, #16]
  416a7c:	mov	x29, sp
  416a80:	cbz	x0, 416ab8 <ascii_strlower_n@plt+0x126b0>
  416a84:	mov	x19, x0
  416a88:	ldr	x0, [x0]
  416a8c:	add	x2, x29, #0x18
  416a90:	bl	416878 <ascii_strlower_n@plt+0x12470>
  416a94:	tbnz	w0, #31, 416aac <ascii_strlower_n@plt+0x126a4>
  416a98:	ldr	x0, [x19]
  416a9c:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416aa0:	ldr	x8, [x29, #24]
  416aa4:	mov	w0, wzr
  416aa8:	str	x8, [x19]
  416aac:	ldr	x19, [sp, #16]
  416ab0:	ldp	x29, x30, [sp], #32
  416ab4:	ret
  416ab8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416abc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416ac0:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  416ac4:	add	x1, x1, #0x562
  416ac8:	add	x2, x2, #0xdb2
  416acc:	add	x4, x4, #0x28
  416ad0:	mov	w3, #0x160                 	// #352
  416ad4:	bl	403a98 <log_assert_failed_realm@plt>
  416ad8:	sub	sp, sp, #0x60
  416adc:	stp	x29, x30, [sp, #16]
  416ae0:	stp	x26, x25, [sp, #32]
  416ae4:	stp	x24, x23, [sp, #48]
  416ae8:	stp	x22, x21, [sp, #64]
  416aec:	stp	x20, x19, [sp, #80]
  416af0:	add	x29, sp, #0x10
  416af4:	cbz	x0, 416d88 <ascii_strlower_n@plt+0x12980>
  416af8:	mov	x20, x1
  416afc:	cbz	x1, 416da8 <ascii_strlower_n@plt+0x129a0>
  416b00:	ldr	x9, [x0]
  416b04:	mov	x19, x0
  416b08:	cbz	x9, 416bb0 <ascii_strlower_n@plt+0x127a8>
  416b0c:	ldr	x8, [x9, #8]
  416b10:	cbz	x8, 416b18 <ascii_strlower_n@plt+0x12710>
  416b14:	ldr	x8, [x9, #24]
  416b18:	ldr	x9, [x9, #8]
  416b1c:	mov	w21, wzr
  416b20:	mov	w22, wzr
  416b24:	mov	x23, xzr
  416b28:	mov	w25, #0x28                  	// #40
  416b2c:	b	416b3c <ascii_strlower_n@plt+0x12734>
  416b30:	ldr	x8, [x10, x25]
  416b34:	add	x25, x25, #0x10
  416b38:	cbz	x10, 416b94 <ascii_strlower_n@plt+0x1278c>
  416b3c:	cmp	x23, x9
  416b40:	b.cs	416b94 <ascii_strlower_n@plt+0x1278c>  // b.hs, b.nlast
  416b44:	ldr	x0, [x8, #8]
  416b48:	mov	x1, x20
  416b4c:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  416b50:	mov	w24, w0
  416b54:	tbnz	w0, #31, 416d58 <ascii_strlower_n@plt+0x12950>
  416b58:	cmp	w24, #0x0
  416b5c:	cset	w8, ne  // ne = any
  416b60:	cset	w9, eq  // eq = none
  416b64:	orr	w21, w21, w8
  416b68:	orr	w22, w22, w9
  416b6c:	tbz	w21, #0, 416b74 <ascii_strlower_n@plt+0x1276c>
  416b70:	tbnz	w22, #0, 416bb8 <ascii_strlower_n@plt+0x127b0>
  416b74:	ldr	x10, [x19]
  416b78:	add	x23, x23, #0x1
  416b7c:	ldr	x9, [x10, #8]
  416b80:	cmp	x23, x9
  416b84:	b.cc	416b30 <ascii_strlower_n@plt+0x12728>  // b.lo, b.ul, b.last
  416b88:	mov	x8, xzr
  416b8c:	add	x25, x25, #0x10
  416b90:	cbnz	x10, 416b3c <ascii_strlower_n@plt+0x12734>
  416b94:	tbz	w21, #0, 416bb0 <ascii_strlower_n@plt+0x127a8>
  416b98:	ldr	x21, [x19]
  416b9c:	tbnz	w22, #0, 416bbc <ascii_strlower_n@plt+0x127b4>
  416ba0:	mov	x0, x21
  416ba4:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416ba8:	str	xzr, [x19]
  416bac:	b	416d54 <ascii_strlower_n@plt+0x1294c>
  416bb0:	mov	w24, wzr
  416bb4:	b	416d58 <ascii_strlower_n@plt+0x12950>
  416bb8:	ldr	x21, [x19]
  416bbc:	ldr	w8, [x21]
  416bc0:	ldr	x23, [x21, #8]
  416bc4:	cmp	w8, #0x1
  416bc8:	b.ls	416c08 <ascii_strlower_n@plt+0x12800>  // b.plast
  416bcc:	lsl	x8, x23, #4
  416bd0:	add	x1, x8, #0x18
  416bd4:	mov	w0, #0x1                   	// #1
  416bd8:	mov	w24, #0x1                   	// #1
  416bdc:	bl	404068 <calloc@plt>
  416be0:	cbz	x0, 416ca4 <ascii_strlower_n@plt+0x1289c>
  416be4:	str	w24, [x0]
  416be8:	str	x23, [x0, #16]
  416bec:	ldr	x8, [x21, #8]
  416bf0:	mov	x22, x0
  416bf4:	cbz	x8, 416cac <ascii_strlower_n@plt+0x128a4>
  416bf8:	ldr	x23, [x21, #24]
  416bfc:	ldr	d0, [x21, #32]
  416c00:	cbnz	x8, 416cb8 <ascii_strlower_n@plt+0x128b0>
  416c04:	b	416d48 <ascii_strlower_n@plt+0x12940>
  416c08:	cbz	x23, 416d54 <ascii_strlower_n@plt+0x1294c>
  416c0c:	mov	x22, xzr
  416c10:	eor	x23, xzr, #0xfffffffffffffff
  416c14:	add	x8, x21, x22, lsl #4
  416c18:	ldr	x8, [x8, #24]
  416c1c:	mov	x1, x20
  416c20:	ldr	x0, [x8, #8]
  416c24:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  416c28:	mov	w24, w0
  416c2c:	tbnz	w0, #31, 416d58 <ascii_strlower_n@plt+0x12950>
  416c30:	cbz	w24, 416c84 <ascii_strlower_n@plt+0x1287c>
  416c34:	ldr	x8, [x19]
  416c38:	lsl	x21, x22, #4
  416c3c:	add	x8, x8, x21
  416c40:	ldr	x0, [x8, #24]
  416c44:	bl	413398 <ascii_strlower_n@plt+0xef90>
  416c48:	ldr	x8, [x19]
  416c4c:	ldr	x9, [x8, #8]
  416c50:	add	x8, x8, x21
  416c54:	add	x0, x8, #0x18
  416c58:	add	x1, x8, #0x28
  416c5c:	add	x8, x9, x23
  416c60:	lsl	x2, x8, #4
  416c64:	bl	4043b8 <memmove@plt>
  416c68:	ldr	x21, [x19]
  416c6c:	ldr	x8, [x21, #8]
  416c70:	sub	x8, x8, #0x1
  416c74:	cmp	x22, x8
  416c78:	str	x8, [x21, #8]
  416c7c:	b.cc	416c14 <ascii_strlower_n@plt+0x1280c>  // b.lo, b.ul, b.last
  416c80:	b	416d54 <ascii_strlower_n@plt+0x1294c>
  416c84:	ldr	x21, [x19]
  416c88:	add	x22, x22, #0x1
  416c8c:	mov	w24, #0x1                   	// #1
  416c90:	ldr	x8, [x21, #8]
  416c94:	cmp	x22, x8
  416c98:	b.cs	416d58 <ascii_strlower_n@plt+0x12950>  // b.hs, b.nlast
  416c9c:	eor	x23, x22, #0xfffffffffffffff
  416ca0:	b	416c14 <ascii_strlower_n@plt+0x1280c>
  416ca4:	mov	w24, #0xfffffff4            	// #-12
  416ca8:	b	416d58 <ascii_strlower_n@plt+0x12950>
  416cac:	mov	x23, xzr
  416cb0:	movi	v0.2d, #0x0
  416cb4:	cbz	x8, 416d48 <ascii_strlower_n@plt+0x12940>
  416cb8:	mov	x25, xzr
  416cbc:	mov	x26, xzr
  416cc0:	b	416cdc <ascii_strlower_n@plt+0x128d4>
  416cc4:	add	x9, x21, x25
  416cc8:	ldr	x23, [x9, #40]
  416ccc:	ldr	d0, [x9, #48]
  416cd0:	cmp	x26, x8
  416cd4:	add	x25, x25, #0x10
  416cd8:	b.cs	416d48 <ascii_strlower_n@plt+0x12940>  // b.hs, b.nlast
  416cdc:	ldr	x0, [x23, #8]
  416ce0:	mov	x1, x20
  416ce4:	str	q0, [sp]
  416ce8:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  416cec:	mov	w24, w0
  416cf0:	tbnz	w0, #31, 416d7c <ascii_strlower_n@plt+0x12974>
  416cf4:	cbnz	w24, 416d24 <ascii_strlower_n@plt+0x1291c>
  416cf8:	ldp	x21, x8, [x22, #8]
  416cfc:	cmp	x21, x8
  416d00:	b.cs	416d78 <ascii_strlower_n@plt+0x12970>  // b.hs, b.nlast
  416d04:	add	x8, x21, #0x1
  416d08:	mov	x0, x23
  416d0c:	str	x8, [x22, #8]
  416d10:	bl	413350 <ascii_strlower_n@plt+0xef48>
  416d14:	ldr	q0, [sp]
  416d18:	add	x8, x22, x21, lsl #4
  416d1c:	str	x0, [x8, #24]
  416d20:	str	d0, [x8, #32]
  416d24:	ldr	x21, [x19]
  416d28:	add	x26, x26, #0x1
  416d2c:	ldr	x8, [x21, #8]
  416d30:	cmp	x26, x8
  416d34:	b.cc	416cc4 <ascii_strlower_n@plt+0x128bc>  // b.lo, b.ul, b.last
  416d38:	cbz	x21, 416d48 <ascii_strlower_n@plt+0x12940>
  416d3c:	mov	x23, xzr
  416d40:	movi	v0.2d, #0x0
  416d44:	b	416cd0 <ascii_strlower_n@plt+0x128c8>
  416d48:	mov	x0, x21
  416d4c:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416d50:	str	x22, [x19]
  416d54:	mov	w24, #0x1                   	// #1
  416d58:	mov	w0, w24
  416d5c:	ldp	x20, x19, [sp, #80]
  416d60:	ldp	x22, x21, [sp, #64]
  416d64:	ldp	x24, x23, [sp, #48]
  416d68:	ldp	x26, x25, [sp, #32]
  416d6c:	ldp	x29, x30, [sp, #16]
  416d70:	add	sp, sp, #0x60
  416d74:	ret
  416d78:	mov	w24, #0xffffffe4            	// #-28
  416d7c:	mov	x0, x22
  416d80:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416d84:	b	416d58 <ascii_strlower_n@plt+0x12950>
  416d88:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416d8c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416d90:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  416d94:	add	x1, x1, #0x562
  416d98:	add	x2, x2, #0xdb2
  416d9c:	add	x4, x4, #0x59
  416da0:	mov	w3, #0x172                 	// #370
  416da4:	bl	403a98 <log_assert_failed_realm@plt>
  416da8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  416dac:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416db0:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  416db4:	add	x1, x1, #0xd96
  416db8:	add	x2, x2, #0xdb2
  416dbc:	add	x4, x4, #0x59
  416dc0:	mov	w3, #0x173                 	// #371
  416dc4:	mov	w0, wzr
  416dc8:	bl	403a98 <log_assert_failed_realm@plt>
  416dcc:	sub	sp, sp, #0x60
  416dd0:	stp	x29, x30, [sp, #16]
  416dd4:	stp	x26, x25, [sp, #32]
  416dd8:	stp	x24, x23, [sp, #48]
  416ddc:	stp	x22, x21, [sp, #64]
  416de0:	stp	x20, x19, [sp, #80]
  416de4:	add	x29, sp, #0x10
  416de8:	cbz	x0, 417080 <ascii_strlower_n@plt+0x12c78>
  416dec:	mov	x20, x1
  416df0:	cbz	x1, 4170a0 <ascii_strlower_n@plt+0x12c98>
  416df4:	ldr	x8, [x0]
  416df8:	mov	x19, x0
  416dfc:	cbz	x8, 416ea8 <ascii_strlower_n@plt+0x12aa0>
  416e00:	ldr	x9, [x8, #8]
  416e04:	cbz	x9, 416e10 <ascii_strlower_n@plt+0x12a08>
  416e08:	ldr	x0, [x8, #24]
  416e0c:	b	416e14 <ascii_strlower_n@plt+0x12a0c>
  416e10:	mov	x0, xzr
  416e14:	ldr	x8, [x8, #8]
  416e18:	mov	w21, wzr
  416e1c:	mov	w22, wzr
  416e20:	mov	x23, xzr
  416e24:	mov	w25, #0x28                  	// #40
  416e28:	b	416e38 <ascii_strlower_n@plt+0x12a30>
  416e2c:	ldr	x0, [x9, x25]
  416e30:	add	x25, x25, #0x10
  416e34:	cbz	x9, 416e8c <ascii_strlower_n@plt+0x12a84>
  416e38:	cmp	x23, x8
  416e3c:	b.cs	416e8c <ascii_strlower_n@plt+0x12a84>  // b.hs, b.nlast
  416e40:	mov	x1, x20
  416e44:	bl	413e84 <ascii_strlower_n@plt+0xfa7c>
  416e48:	mov	w24, w0
  416e4c:	tbnz	w0, #31, 417050 <ascii_strlower_n@plt+0x12c48>
  416e50:	cmp	w24, #0x0
  416e54:	cset	w8, ne  // ne = any
  416e58:	cset	w9, eq  // eq = none
  416e5c:	orr	w21, w21, w8
  416e60:	orr	w22, w22, w9
  416e64:	tbz	w21, #0, 416e6c <ascii_strlower_n@plt+0x12a64>
  416e68:	tbnz	w22, #0, 416eb0 <ascii_strlower_n@plt+0x12aa8>
  416e6c:	ldr	x9, [x19]
  416e70:	add	x23, x23, #0x1
  416e74:	ldr	x8, [x9, #8]
  416e78:	cmp	x23, x8
  416e7c:	b.cc	416e2c <ascii_strlower_n@plt+0x12a24>  // b.lo, b.ul, b.last
  416e80:	mov	x0, xzr
  416e84:	add	x25, x25, #0x10
  416e88:	cbnz	x9, 416e38 <ascii_strlower_n@plt+0x12a30>
  416e8c:	tbz	w21, #0, 416ea8 <ascii_strlower_n@plt+0x12aa0>
  416e90:	ldr	x21, [x19]
  416e94:	tbnz	w22, #0, 416eb4 <ascii_strlower_n@plt+0x12aac>
  416e98:	mov	x0, x21
  416e9c:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  416ea0:	str	xzr, [x19]
  416ea4:	b	41704c <ascii_strlower_n@plt+0x12c44>
  416ea8:	mov	w24, wzr
  416eac:	b	417050 <ascii_strlower_n@plt+0x12c48>
  416eb0:	ldr	x21, [x19]
  416eb4:	ldr	w8, [x21]
  416eb8:	ldr	x23, [x21, #8]
  416ebc:	cmp	w8, #0x1
  416ec0:	b.ls	416f00 <ascii_strlower_n@plt+0x12af8>  // b.plast
  416ec4:	lsl	x8, x23, #4
  416ec8:	add	x1, x8, #0x18
  416ecc:	mov	w0, #0x1                   	// #1
  416ed0:	mov	w24, #0x1                   	// #1
  416ed4:	bl	404068 <calloc@plt>
  416ed8:	cbz	x0, 416f98 <ascii_strlower_n@plt+0x12b90>
  416edc:	str	w24, [x0]
  416ee0:	str	x23, [x0, #16]
  416ee4:	ldr	x8, [x21, #8]
  416ee8:	mov	x22, x0
  416eec:	cbz	x8, 416fa0 <ascii_strlower_n@plt+0x12b98>
  416ef0:	ldr	x23, [x21, #24]
  416ef4:	ldr	d0, [x21, #32]
  416ef8:	cbnz	x8, 416fac <ascii_strlower_n@plt+0x12ba4>
  416efc:	b	417040 <ascii_strlower_n@plt+0x12c38>
  416f00:	cbz	x23, 41704c <ascii_strlower_n@plt+0x12c44>
  416f04:	mov	x22, xzr
  416f08:	eor	x23, xzr, #0xfffffffffffffff
  416f0c:	add	x8, x21, x22, lsl #4
  416f10:	ldr	x0, [x8, #24]
  416f14:	mov	x1, x20
  416f18:	bl	413e84 <ascii_strlower_n@plt+0xfa7c>
  416f1c:	mov	w24, w0
  416f20:	tbnz	w0, #31, 417050 <ascii_strlower_n@plt+0x12c48>
  416f24:	cbz	w24, 416f78 <ascii_strlower_n@plt+0x12b70>
  416f28:	ldr	x8, [x19]
  416f2c:	lsl	x21, x22, #4
  416f30:	add	x8, x8, x21
  416f34:	ldr	x0, [x8, #24]
  416f38:	bl	413398 <ascii_strlower_n@plt+0xef90>
  416f3c:	ldr	x8, [x19]
  416f40:	ldr	x9, [x8, #8]
  416f44:	add	x8, x8, x21
  416f48:	add	x0, x8, #0x18
  416f4c:	add	x1, x8, #0x28
  416f50:	add	x8, x9, x23
  416f54:	lsl	x2, x8, #4
  416f58:	bl	4043b8 <memmove@plt>
  416f5c:	ldr	x21, [x19]
  416f60:	ldr	x8, [x21, #8]
  416f64:	sub	x8, x8, #0x1
  416f68:	cmp	x22, x8
  416f6c:	str	x8, [x21, #8]
  416f70:	b.cc	416f0c <ascii_strlower_n@plt+0x12b04>  // b.lo, b.ul, b.last
  416f74:	b	41704c <ascii_strlower_n@plt+0x12c44>
  416f78:	ldr	x21, [x19]
  416f7c:	add	x22, x22, #0x1
  416f80:	mov	w24, #0x1                   	// #1
  416f84:	ldr	x8, [x21, #8]
  416f88:	cmp	x22, x8
  416f8c:	b.cs	417050 <ascii_strlower_n@plt+0x12c48>  // b.hs, b.nlast
  416f90:	eor	x23, x22, #0xfffffffffffffff
  416f94:	b	416f0c <ascii_strlower_n@plt+0x12b04>
  416f98:	mov	w24, #0xfffffff4            	// #-12
  416f9c:	b	417050 <ascii_strlower_n@plt+0x12c48>
  416fa0:	mov	x23, xzr
  416fa4:	movi	v0.2d, #0x0
  416fa8:	cbz	x8, 417040 <ascii_strlower_n@plt+0x12c38>
  416fac:	mov	x25, xzr
  416fb0:	mov	x26, xzr
  416fb4:	b	416fd0 <ascii_strlower_n@plt+0x12bc8>
  416fb8:	add	x9, x21, x25
  416fbc:	ldr	x23, [x9, #40]
  416fc0:	ldr	d0, [x9, #48]
  416fc4:	cmp	x26, x8
  416fc8:	add	x25, x25, #0x10
  416fcc:	b.cs	417040 <ascii_strlower_n@plt+0x12c38>  // b.hs, b.nlast
  416fd0:	mov	x0, x23
  416fd4:	mov	x1, x20
  416fd8:	str	q0, [sp]
  416fdc:	bl	413e84 <ascii_strlower_n@plt+0xfa7c>
  416fe0:	mov	w24, w0
  416fe4:	tbnz	w0, #31, 417074 <ascii_strlower_n@plt+0x12c6c>
  416fe8:	cbnz	w24, 41701c <ascii_strlower_n@plt+0x12c14>
  416fec:	cbz	x23, 4170c4 <ascii_strlower_n@plt+0x12cbc>
  416ff0:	ldp	x21, x8, [x22, #8]
  416ff4:	cmp	x21, x8
  416ff8:	b.cs	417070 <ascii_strlower_n@plt+0x12c68>  // b.hs, b.nlast
  416ffc:	add	x8, x21, #0x1
  417000:	mov	x0, x23
  417004:	str	x8, [x22, #8]
  417008:	bl	413350 <ascii_strlower_n@plt+0xef48>
  41700c:	ldr	q0, [sp]
  417010:	add	x8, x22, x21, lsl #4
  417014:	str	x0, [x8, #24]
  417018:	str	d0, [x8, #32]
  41701c:	ldr	x21, [x19]
  417020:	add	x26, x26, #0x1
  417024:	ldr	x8, [x21, #8]
  417028:	cmp	x26, x8
  41702c:	b.cc	416fb8 <ascii_strlower_n@plt+0x12bb0>  // b.lo, b.ul, b.last
  417030:	cbz	x21, 417040 <ascii_strlower_n@plt+0x12c38>
  417034:	mov	x23, xzr
  417038:	movi	v0.2d, #0x0
  41703c:	b	416fc4 <ascii_strlower_n@plt+0x12bbc>
  417040:	mov	x0, x21
  417044:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  417048:	str	x22, [x19]
  41704c:	mov	w24, #0x1                   	// #1
  417050:	mov	w0, w24
  417054:	ldp	x20, x19, [sp, #80]
  417058:	ldp	x22, x21, [sp, #64]
  41705c:	ldp	x24, x23, [sp, #48]
  417060:	ldp	x26, x25, [sp, #32]
  417064:	ldp	x29, x30, [sp, #16]
  417068:	add	sp, sp, #0x60
  41706c:	ret
  417070:	mov	w24, #0xffffffe4            	// #-28
  417074:	mov	x0, x22
  417078:	bl	415e58 <ascii_strlower_n@plt+0x11a50>
  41707c:	b	417050 <ascii_strlower_n@plt+0x12c48>
  417080:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417084:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417088:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41708c:	add	x1, x1, #0x562
  417090:	add	x2, x2, #0xdb2
  417094:	add	x4, x4, #0x9c
  417098:	mov	w3, #0x1c7                 	// #455
  41709c:	bl	403a98 <log_assert_failed_realm@plt>
  4170a0:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4170a4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4170a8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4170ac:	add	x1, x1, #0xdb
  4170b0:	add	x2, x2, #0xdb2
  4170b4:	add	x4, x4, #0x9c
  4170b8:	mov	w3, #0x1c8                 	// #456
  4170bc:	mov	w0, wzr
  4170c0:	bl	403a98 <log_assert_failed_realm@plt>
  4170c4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4170c8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4170cc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4170d0:	add	x1, x1, #0x9e6
  4170d4:	add	x2, x2, #0xdb2
  4170d8:	add	x4, x4, #0x32f
  4170dc:	mov	w3, #0x2e                  	// #46
  4170e0:	mov	w0, wzr
  4170e4:	bl	403a98 <log_assert_failed_realm@plt>
  4170e8:	stp	x29, x30, [sp, #-96]!
  4170ec:	str	x27, [sp, #16]
  4170f0:	stp	x26, x25, [sp, #32]
  4170f4:	stp	x24, x23, [sp, #48]
  4170f8:	stp	x22, x21, [sp, #64]
  4170fc:	stp	x20, x19, [sp, #80]
  417100:	mov	x29, sp
  417104:	cbz	x0, 4171ec <ascii_strlower_n@plt+0x12de4>
  417108:	mov	x20, x2
  41710c:	cbz	x2, 41720c <ascii_strlower_n@plt+0x12e04>
  417110:	mov	x21, x1
  417114:	cbz	x1, 4171cc <ascii_strlower_n@plt+0x12dc4>
  417118:	ldr	x8, [x21, #8]
  41711c:	mov	w19, w3
  417120:	mov	x22, x0
  417124:	cbz	x8, 41713c <ascii_strlower_n@plt+0x12d34>
  417128:	ldr	x23, [x21, #24]
  41712c:	ldp	w24, w27, [x21, #32]
  417130:	ldr	x8, [x21, #8]
  417134:	cbnz	x8, 417150 <ascii_strlower_n@plt+0x12d48>
  417138:	b	4171cc <ascii_strlower_n@plt+0x12dc4>
  41713c:	mov	w24, wzr
  417140:	mov	x23, xzr
  417144:	mov	w27, wzr
  417148:	ldr	x8, [x21, #8]
  41714c:	cbz	x8, 4171cc <ascii_strlower_n@plt+0x12dc4>
  417150:	mov	x25, xzr
  417154:	add	x26, x21, #0x34
  417158:	b	417170 <ascii_strlower_n@plt+0x12d68>
  41715c:	ldur	x23, [x26, #-12]
  417160:	ldp	w24, w27, [x26, #-4]
  417164:	cmp	x25, x8
  417168:	add	x26, x26, #0x10
  41716c:	b.cs	4171cc <ascii_strlower_n@plt+0x12dc4>  // b.hs, b.nlast
  417170:	ldr	x0, [x23, #8]
  417174:	mov	x1, x20
  417178:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  41717c:	tbnz	w0, #31, 4171d0 <ascii_strlower_n@plt+0x12dc8>
  417180:	cbz	w0, 4171ac <ascii_strlower_n@plt+0x12da4>
  417184:	mov	w1, #0x1                   	// #1
  417188:	mov	x0, x22
  41718c:	bl	416124 <ascii_strlower_n@plt+0x11d1c>
  417190:	tbnz	w0, #31, 4171d0 <ascii_strlower_n@plt+0x12dc8>
  417194:	ldr	x0, [x22]
  417198:	orr	w3, w27, w19
  41719c:	mov	x1, x23
  4171a0:	mov	w2, w24
  4171a4:	bl	415f00 <ascii_strlower_n@plt+0x11af8>
  4171a8:	tbnz	w0, #31, 4171d0 <ascii_strlower_n@plt+0x12dc8>
  4171ac:	ldr	x8, [x21, #8]
  4171b0:	add	x25, x25, #0x1
  4171b4:	cmp	x25, x8
  4171b8:	b.cc	41715c <ascii_strlower_n@plt+0x12d54>  // b.lo, b.ul, b.last
  4171bc:	mov	w24, wzr
  4171c0:	mov	x23, xzr
  4171c4:	mov	w27, wzr
  4171c8:	b	417164 <ascii_strlower_n@plt+0x12d5c>
  4171cc:	mov	w0, wzr
  4171d0:	ldp	x20, x19, [sp, #80]
  4171d4:	ldp	x22, x21, [sp, #64]
  4171d8:	ldp	x24, x23, [sp, #48]
  4171dc:	ldp	x26, x25, [sp, #32]
  4171e0:	ldr	x27, [sp, #16]
  4171e4:	ldp	x29, x30, [sp], #96
  4171e8:	ret
  4171ec:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4171f0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4171f4:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4171f8:	add	x1, x1, #0x562
  4171fc:	add	x2, x2, #0xdb2
  417200:	add	x4, x4, #0xde
  417204:	mov	w3, #0x21b                 	// #539
  417208:	bl	403a98 <log_assert_failed_realm@plt>
  41720c:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417210:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417214:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417218:	add	x1, x1, #0xd96
  41721c:	add	x2, x2, #0xdb2
  417220:	add	x4, x4, #0xde
  417224:	mov	w3, #0x21c                 	// #540
  417228:	mov	w0, wzr
  41722c:	bl	403a98 <log_assert_failed_realm@plt>
  417230:	stp	x29, x30, [sp, #-32]!
  417234:	stp	x20, x19, [sp, #16]
  417238:	mov	x29, sp
  41723c:	cbz	x0, 417280 <ascii_strlower_n@plt+0x12e78>
  417240:	mov	x20, x1
  417244:	cbz	x1, 4172a0 <ascii_strlower_n@plt+0x12e98>
  417248:	mov	x19, x2
  41724c:	cbz	x2, 4172c4 <ascii_strlower_n@plt+0x12ebc>
  417250:	ldr	x1, [x20]
  417254:	mov	x2, x19
  417258:	bl	4170e8 <ascii_strlower_n@plt+0x12ce0>
  41725c:	tbnz	w0, #31, 417274 <ascii_strlower_n@plt+0x12e6c>
  417260:	mov	x0, x20
  417264:	mov	x1, x19
  417268:	ldp	x20, x19, [sp, #16]
  41726c:	ldp	x29, x30, [sp], #32
  417270:	b	416ad8 <ascii_strlower_n@plt+0x126d0>
  417274:	ldp	x20, x19, [sp, #16]
  417278:	ldp	x29, x30, [sp], #32
  41727c:	ret
  417280:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417284:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417288:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41728c:	add	x1, x1, #0x13c
  417290:	add	x2, x2, #0xdb2
  417294:	add	x4, x4, #0x13f
  417298:	mov	w3, #0x238                 	// #568
  41729c:	bl	403a98 <log_assert_failed_realm@plt>
  4172a0:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4172a4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4172a8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4172ac:	add	x1, x1, #0x19e
  4172b0:	add	x2, x2, #0xdb2
  4172b4:	add	x4, x4, #0x13f
  4172b8:	mov	w3, #0x239                 	// #569
  4172bc:	mov	w0, wzr
  4172c0:	bl	403a98 <log_assert_failed_realm@plt>
  4172c4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4172c8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4172cc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4172d0:	add	x1, x1, #0xd96
  4172d4:	add	x2, x2, #0xdb2
  4172d8:	add	x4, x4, #0x13f
  4172dc:	mov	w3, #0x23a                 	// #570
  4172e0:	mov	w0, wzr
  4172e4:	bl	403a98 <log_assert_failed_realm@plt>
  4172e8:	stp	x29, x30, [sp, #-80]!
  4172ec:	str	x25, [sp, #16]
  4172f0:	stp	x24, x23, [sp, #32]
  4172f4:	stp	x22, x21, [sp, #48]
  4172f8:	stp	x20, x19, [sp, #64]
  4172fc:	mov	x29, sp
  417300:	cbz	x0, 4173f4 <ascii_strlower_n@plt+0x12fec>
  417304:	ldr	x8, [x0, #8]
  417308:	mov	x19, x0
  41730c:	cmp	x8, #0x2
  417310:	b.cc	4173f4 <ascii_strlower_n@plt+0x12fec>  // b.lo, b.ul, b.last
  417314:	lsr	x9, x8, #60
  417318:	cbnz	x9, 417410 <ascii_strlower_n@plt+0x13008>
  41731c:	cmp	x8, #0x40, lsl #12
  417320:	b.hi	41741c <ascii_strlower_n@plt+0x13014>  // b.pmore
  417324:	mov	x9, sp
  417328:	sub	x21, x8, #0x1
  41732c:	sub	x20, x9, x8, lsl #4
  417330:	mov	sp, x20
  417334:	mov	x22, xzr
  417338:	mov	x23, xzr
  41733c:	and	w24, w1, #0x1
  417340:	add	x25, x19, #0x18
  417344:	b	41736c <ascii_strlower_n@plt+0x12f64>
  417348:	add	x9, x23, #0x1
  41734c:	mov	x8, x23
  417350:	mov	x23, x9
  417354:	ldr	q0, [x25], #16
  417358:	add	x22, x22, #0x1
  41735c:	str	q0, [x20, x8, lsl #4]
  417360:	ldr	x8, [x19, #8]
  417364:	cmp	x22, x8
  417368:	b.cs	4173d8 <ascii_strlower_n@plt+0x12fd0>  // b.hs, b.nlast
  41736c:	ldr	x8, [x25]
  417370:	ldr	x9, [x8, #8]
  417374:	ldrh	w10, [x9, #4]
  417378:	cmp	w10, #0x1
  41737c:	b.ne	417348 <ascii_strlower_n@plt+0x12f40>  // b.any
  417380:	ldrh	w9, [x9, #6]
  417384:	cmp	w9, #0x1
  417388:	b.ne	4173ac <ascii_strlower_n@plt+0x12fa4>  // b.any
  41738c:	add	x1, x8, #0x50
  417390:	mov	w0, #0x2                   	// #2
  417394:	bl	4043c8 <in_addr_is_link_local@plt>
  417398:	cmp	w0, w24
  41739c:	b.ne	4173c8 <ascii_strlower_n@plt+0x12fc0>  // b.any
  4173a0:	ldr	x8, [x25]
  4173a4:	ldr	x9, [x8, #8]
  4173a8:	ldrh	w9, [x9, #6]
  4173ac:	cmp	w9, #0x1c
  4173b0:	b.ne	417348 <ascii_strlower_n@plt+0x12f40>  // b.any
  4173b4:	add	x1, x8, #0x50
  4173b8:	mov	w0, #0xa                   	// #10
  4173bc:	bl	4043c8 <in_addr_is_link_local@plt>
  4173c0:	cmp	w0, w24
  4173c4:	b.eq	417348 <ascii_strlower_n@plt+0x12f40>  // b.none
  4173c8:	sub	x9, x21, #0x1
  4173cc:	mov	x8, x21
  4173d0:	mov	x21, x9
  4173d4:	b	417354 <ascii_strlower_n@plt+0x12f4c>
  4173d8:	add	x9, x21, #0x1
  4173dc:	cmp	x23, x9
  4173e0:	b.ne	417440 <ascii_strlower_n@plt+0x13038>  // b.any
  4173e4:	lsl	x2, x8, #4
  4173e8:	add	x0, x19, #0x18
  4173ec:	mov	x1, x20
  4173f0:	bl	403c68 <memcpy@plt>
  4173f4:	mov	sp, x29
  4173f8:	ldp	x20, x19, [sp, #64]
  4173fc:	ldp	x22, x21, [sp, #48]
  417400:	ldp	x24, x23, [sp, #32]
  417404:	ldr	x25, [sp, #16]
  417408:	ldp	x29, x30, [sp], #80
  41740c:	ret
  417410:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417414:	add	x1, x1, #0x1a3
  417418:	b	417424 <ascii_strlower_n@plt+0x1301c>
  41741c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417420:	add	x1, x1, #0x20a
  417424:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417428:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41742c:	add	x2, x2, #0xdb2
  417430:	add	x4, x4, #0x1d7
  417434:	mov	w3, #0x253                 	// #595
  417438:	mov	w0, wzr
  41743c:	bl	403a98 <log_assert_failed_realm@plt>
  417440:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417444:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417448:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41744c:	add	x1, x1, #0x232
  417450:	add	x2, x2, #0xdb2
  417454:	add	x4, x4, #0x1d7
  417458:	mov	w3, #0x260                 	// #608
  41745c:	mov	w0, wzr
  417460:	bl	403a98 <log_assert_failed_realm@plt>
  417464:	stp	x29, x30, [sp, #-48]!
  417468:	str	x21, [sp, #16]
  41746c:	stp	x20, x19, [sp, #32]
  417470:	mov	x29, sp
  417474:	cbz	x0, 417518 <ascii_strlower_n@plt+0x13110>
  417478:	mov	x20, x1
  41747c:	cbz	x1, 4174fc <ascii_strlower_n@plt+0x130f4>
  417480:	mov	x19, x0
  417484:	ldr	x0, [x0]
  417488:	cbz	x0, 4174a0 <ascii_strlower_n@plt+0x13098>
  41748c:	ldr	w8, [x0]
  417490:	cmp	w8, #0x1
  417494:	b.ls	4174c4 <ascii_strlower_n@plt+0x130bc>  // b.plast
  417498:	mov	w0, #0xfffffff0            	// #-16
  41749c:	b	417508 <ascii_strlower_n@plt+0x13100>
  4174a0:	lsl	x8, x20, #4
  4174a4:	add	x1, x8, #0x18
  4174a8:	mov	w0, #0x1                   	// #1
  4174ac:	mov	w21, #0x1                   	// #1
  4174b0:	bl	404068 <calloc@plt>
  4174b4:	cbz	x0, 417504 <ascii_strlower_n@plt+0x130fc>
  4174b8:	mov	x8, x0
  4174bc:	str	w21, [x0]
  4174c0:	b	4174ec <ascii_strlower_n@plt+0x130e4>
  4174c4:	ldp	x8, x9, [x0, #8]
  4174c8:	add	x20, x8, x20
  4174cc:	cmp	x9, x20
  4174d0:	b.cs	4174fc <ascii_strlower_n@plt+0x130f4>  // b.hs, b.nlast
  4174d4:	mov	w1, #0x18                  	// #24
  4174d8:	bfi	x1, x20, #5, #59
  4174dc:	bl	4040b8 <realloc@plt>
  4174e0:	cbz	x0, 417504 <ascii_strlower_n@plt+0x130fc>
  4174e4:	mov	x8, x0
  4174e8:	lsl	x20, x20, #1
  4174ec:	mov	w0, wzr
  4174f0:	str	x20, [x8, #16]
  4174f4:	str	x8, [x19]
  4174f8:	b	417508 <ascii_strlower_n@plt+0x13100>
  4174fc:	mov	w0, wzr
  417500:	b	417508 <ascii_strlower_n@plt+0x13100>
  417504:	mov	w0, #0xfffffff4            	// #-12
  417508:	ldp	x20, x19, [sp, #32]
  41750c:	ldr	x21, [sp, #16]
  417510:	ldp	x29, x30, [sp], #48
  417514:	ret
  417518:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41751c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417520:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417524:	add	x1, x1, #0x562
  417528:	add	x2, x2, #0xdb2
  41752c:	add	x4, x4, #0x241
  417530:	mov	w3, #0x267                 	// #615
  417534:	bl	403a98 <log_assert_failed_realm@plt>
  417538:	stp	x29, x30, [sp, #-96]!
  41753c:	stp	x28, x27, [sp, #16]
  417540:	stp	x26, x25, [sp, #32]
  417544:	stp	x24, x23, [sp, #48]
  417548:	stp	x22, x21, [sp, #64]
  41754c:	stp	x20, x19, [sp, #80]
  417550:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  417554:	ldr	x8, [x8, #2688]
  417558:	cmp	x1, #0x0
  41755c:	mov	x29, sp
  417560:	ldr	x8, [x8]
  417564:	csel	x20, x8, x1, eq  // eq = none
  417568:	cbz	x0, 4176cc <ascii_strlower_n@plt+0x132c4>
  41756c:	ldr	x8, [x0, #8]
  417570:	mov	x19, x0
  417574:	cbz	x8, 41758c <ascii_strlower_n@plt+0x13184>
  417578:	ldr	x24, [x19, #24]
  41757c:	ldp	w28, w27, [x19, #32]
  417580:	ldr	x8, [x19, #8]
  417584:	cbnz	x8, 4175a0 <ascii_strlower_n@plt+0x13198>
  417588:	b	4176cc <ascii_strlower_n@plt+0x132c4>
  41758c:	mov	w28, wzr
  417590:	mov	x24, xzr
  417594:	mov	w27, wzr
  417598:	ldr	x8, [x19, #8]
  41759c:	cbz	x8, 4176cc <ascii_strlower_n@plt+0x132c4>
  4175a0:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4175a4:	adrp	x22, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4175a8:	adrp	x23, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4175ac:	mov	x25, xzr
  4175b0:	add	x26, x19, #0x34
  4175b4:	add	x21, x21, #0xdb2
  4175b8:	add	x22, x22, #0x2a4
  4175bc:	add	x23, x23, #0x2b7
  4175c0:	b	4175d8 <ascii_strlower_n@plt+0x131d0>
  4175c4:	ldur	x24, [x26, #-12]
  4175c8:	ldp	w28, w27, [x26, #-4]
  4175cc:	cmp	x25, x8
  4175d0:	add	x26, x26, #0x10
  4175d4:	b.cs	4176cc <ascii_strlower_n@plt+0x132c4>  // b.hs, b.nlast
  4175d8:	mov	w0, #0x9                   	// #9
  4175dc:	mov	x1, x20
  4175e0:	bl	403d38 <fputc@plt>
  4175e4:	mov	x0, x24
  4175e8:	bl	413fdc <ascii_strlower_n@plt+0xfbd4>
  4175ec:	cbz	x0, 417660 <ascii_strlower_n@plt+0x13258>
  4175f0:	mov	x1, x20
  4175f4:	bl	4043d8 <fputs@plt>
  4175f8:	and	w8, w27, #0x7
  4175fc:	orr	w8, w8, w28
  417600:	cbz	w8, 41761c <ascii_strlower_n@plt+0x13214>
  417604:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417608:	mov	w1, #0x2                   	// #2
  41760c:	mov	w2, #0x1                   	// #1
  417610:	add	x0, x0, #0x2b4
  417614:	mov	x3, x20
  417618:	bl	403f78 <fwrite@plt>
  41761c:	cbz	w28, 41762c <ascii_strlower_n@plt+0x13224>
  417620:	mov	x0, x23
  417624:	mov	w1, w28
  417628:	bl	403a58 <printf@plt>
  41762c:	tbnz	w27, #0, 417690 <ascii_strlower_n@plt+0x13288>
  417630:	tbnz	w27, #1, 4176ac <ascii_strlower_n@plt+0x132a4>
  417634:	tbz	w27, #2, 417650 <ascii_strlower_n@plt+0x13248>
  417638:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41763c:	mov	w1, #0xd                   	// #13
  417640:	mov	w2, #0x1                   	// #1
  417644:	add	x0, x0, #0x2dc
  417648:	mov	x3, x20
  41764c:	bl	403f78 <fwrite@plt>
  417650:	mov	w0, #0xa                   	// #10
  417654:	mov	x1, x20
  417658:	bl	403d38 <fputc@plt>
  41765c:	b	417670 <ascii_strlower_n@plt+0x13268>
  417660:	mov	w2, #0x2b8                 	// #696
  417664:	mov	x1, x21
  417668:	mov	x3, x22
  41766c:	bl	403a28 <log_oom_internal@plt>
  417670:	ldr	x8, [x19, #8]
  417674:	add	x25, x25, #0x1
  417678:	cmp	x25, x8
  41767c:	b.cc	4175c4 <ascii_strlower_n@plt+0x131bc>  // b.lo, b.ul, b.last
  417680:	mov	w28, wzr
  417684:	mov	x24, xzr
  417688:	mov	w27, wzr
  41768c:	b	4175cc <ascii_strlower_n@plt+0x131c4>
  417690:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417694:	mov	w1, #0xe                   	// #14
  417698:	mov	w2, #0x1                   	// #1
  41769c:	add	x0, x0, #0x2c3
  4176a0:	mov	x3, x20
  4176a4:	bl	403f78 <fwrite@plt>
  4176a8:	tbz	w27, #1, 417634 <ascii_strlower_n@plt+0x1322c>
  4176ac:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4176b0:	mov	w1, #0x9                   	// #9
  4176b4:	mov	w2, #0x1                   	// #1
  4176b8:	add	x0, x0, #0x2d2
  4176bc:	mov	x3, x20
  4176c0:	bl	403f78 <fwrite@plt>
  4176c4:	tbnz	w27, #2, 417638 <ascii_strlower_n@plt+0x13230>
  4176c8:	b	417650 <ascii_strlower_n@plt+0x13248>
  4176cc:	ldp	x20, x19, [sp, #80]
  4176d0:	ldp	x22, x21, [sp, #64]
  4176d4:	ldp	x24, x23, [sp, #48]
  4176d8:	ldp	x26, x25, [sp, #32]
  4176dc:	ldp	x28, x27, [sp, #16]
  4176e0:	ldp	x29, x30, [sp], #96
  4176e4:	ret
  4176e8:	sub	sp, sp, #0x50
  4176ec:	stp	x29, x30, [sp, #16]
  4176f0:	stp	x24, x23, [sp, #32]
  4176f4:	stp	x22, x21, [sp, #48]
  4176f8:	stp	x20, x19, [sp, #64]
  4176fc:	add	x29, sp, #0x10
  417700:	cbz	x1, 417818 <ascii_strlower_n@plt+0x13410>
  417704:	ldr	x8, [x1, #8]
  417708:	mov	x19, x1
  41770c:	mov	x20, x0
  417710:	ldrh	w8, [x8, #6]
  417714:	cmp	w8, #0x5
  417718:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41771c:	b.eq	4177e8 <ascii_strlower_n@plt+0x133e0>  // b.none
  417720:	ldr	x8, [x20, #8]
  417724:	cbz	x8, 41772c <ascii_strlower_n@plt+0x13324>
  417728:	ldr	x8, [x20, #24]
  41772c:	ldr	x9, [x20, #8]
  417730:	cbz	x9, 4177e8 <ascii_strlower_n@plt+0x133e0>
  417734:	mov	x23, xzr
  417738:	add	x24, x20, #0x28
  41773c:	b	417750 <ascii_strlower_n@plt+0x13348>
  417740:	ldr	x8, [x24]
  417744:	cmp	x23, x9
  417748:	add	x24, x24, #0x10
  41774c:	b.cs	4177e8 <ascii_strlower_n@plt+0x133e0>  // b.hs, b.nlast
  417750:	str	xzr, [sp, #8]
  417754:	ldr	x0, [x8, #8]
  417758:	ldrh	w9, [x0, #6]
  41775c:	cmp	w9, #0x27
  417760:	b.ne	4177c8 <ascii_strlower_n@plt+0x133c0>  // b.any
  417764:	ldr	x9, [x19, #8]
  417768:	ldrh	w10, [x0, #4]
  41776c:	ldrh	w9, [x9, #4]
  417770:	cmp	w10, w9
  417774:	b.ne	4177c8 <ascii_strlower_n@plt+0x133c0>  // b.any
  417778:	ldr	x21, [x19, #80]
  41777c:	ldr	x22, [x8, #80]
  417780:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417784:	mov	x2, x0
  417788:	add	x3, sp, #0x8
  41778c:	mov	x0, x21
  417790:	mov	x1, x22
  417794:	bl	404228 <dns_name_change_suffix@plt>
  417798:	mov	w21, w0
  41779c:	tbnz	w0, #31, 41780c <ascii_strlower_n@plt+0x13404>
  4177a0:	cbz	w21, 4177c8 <ascii_strlower_n@plt+0x133c0>
  4177a4:	ldr	x0, [x19, #8]
  4177a8:	ldr	x21, [sp, #8]
  4177ac:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  4177b0:	mov	x1, x0
  4177b4:	mov	x0, x21
  4177b8:	bl	404248 <dns_name_equal@plt>
  4177bc:	mov	w21, w0
  4177c0:	tbnz	w0, #31, 41780c <ascii_strlower_n@plt+0x13404>
  4177c4:	cbnz	w21, 417808 <ascii_strlower_n@plt+0x13400>
  4177c8:	ldr	x0, [sp, #8]
  4177cc:	bl	4039d8 <free@plt>
  4177d0:	ldr	x9, [x20, #8]
  4177d4:	add	x23, x23, #0x1
  4177d8:	cmp	x23, x9
  4177dc:	b.cc	417740 <ascii_strlower_n@plt+0x13338>  // b.lo, b.ul, b.last
  4177e0:	mov	x8, xzr
  4177e4:	b	417744 <ascii_strlower_n@plt+0x1333c>
  4177e8:	mov	w21, wzr
  4177ec:	mov	w0, w21
  4177f0:	ldp	x20, x19, [sp, #64]
  4177f4:	ldp	x22, x21, [sp, #48]
  4177f8:	ldp	x24, x23, [sp, #32]
  4177fc:	ldp	x29, x30, [sp, #16]
  417800:	add	sp, sp, #0x50
  417804:	ret
  417808:	mov	w21, #0x1                   	// #1
  41780c:	ldr	x0, [sp, #8]
  417810:	bl	4039d8 <free@plt>
  417814:	b	4177ec <ascii_strlower_n@plt+0x133e4>
  417818:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  41781c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417820:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417824:	add	x1, x1, #0xf8
  417828:	add	x2, x2, #0xdb2
  41782c:	add	x4, x4, #0x2ea
  417830:	mov	w3, #0x2d2                 	// #722
  417834:	mov	w0, wzr
  417838:	bl	403a98 <log_assert_failed_realm@plt>
  41783c:	stp	x29, x30, [sp, #-32]!
  417840:	stp	x20, x19, [sp, #16]
  417844:	mov	x29, sp
  417848:	cbz	x0, 41787c <ascii_strlower_n@plt+0x13474>
  41784c:	lsl	x8, x0, #3
  417850:	mov	x19, x0
  417854:	add	x1, x8, #0x18
  417858:	mov	w0, #0x1                   	// #1
  41785c:	mov	w20, #0x1                   	// #1
  417860:	bl	404068 <calloc@plt>
  417864:	cbz	x0, 417870 <ascii_strlower_n@plt+0x13468>
  417868:	str	w20, [x0]
  41786c:	str	x19, [x0, #16]
  417870:	ldp	x20, x19, [sp, #16]
  417874:	ldp	x29, x30, [sp], #32
  417878:	ret
  41787c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417880:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417884:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417888:	add	x1, x1, #0x37d
  41788c:	add	x2, x2, #0x386
  417890:	add	x4, x4, #0x3aa
  417894:	mov	w3, #0xb                   	// #11
  417898:	bl	403a98 <log_assert_failed_realm@plt>
  41789c:	stp	x29, x30, [sp, #-16]!
  4178a0:	mov	x29, sp
  4178a4:	cbz	x0, 4178b8 <ascii_strlower_n@plt+0x134b0>
  4178a8:	ldr	w8, [x0]
  4178ac:	cbz	w8, 4178c0 <ascii_strlower_n@plt+0x134b8>
  4178b0:	add	w8, w8, #0x1
  4178b4:	str	w8, [x0]
  4178b8:	ldp	x29, x30, [sp], #16
  4178bc:	ret
  4178c0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4178c4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4178c8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4178cc:	add	x1, x1, #0x4e1
  4178d0:	add	x2, x2, #0x386
  4178d4:	add	x4, x4, #0x3d0
  4178d8:	mov	w3, #0x21                  	// #33
  4178dc:	mov	w0, wzr
  4178e0:	bl	403a98 <log_assert_failed_realm@plt>
  4178e4:	stp	x29, x30, [sp, #-48]!
  4178e8:	str	x21, [sp, #16]
  4178ec:	stp	x20, x19, [sp, #32]
  4178f0:	mov	x29, sp
  4178f4:	cbz	x0, 417940 <ascii_strlower_n@plt+0x13538>
  4178f8:	ldr	w8, [x0]
  4178fc:	mov	x19, x0
  417900:	cbz	w8, 417954 <ascii_strlower_n@plt+0x1354c>
  417904:	subs	w8, w8, #0x1
  417908:	str	w8, [x19]
  41790c:	b.ne	417940 <ascii_strlower_n@plt+0x13538>  // b.any
  417910:	ldr	x8, [x19, #8]
  417914:	cbz	x8, 417938 <ascii_strlower_n@plt+0x13530>
  417918:	mov	x20, xzr
  41791c:	add	x21, x19, #0x18
  417920:	ldr	x0, [x21, x20, lsl #3]
  417924:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  417928:	ldr	x8, [x19, #8]
  41792c:	add	x20, x20, #0x1
  417930:	cmp	x20, x8
  417934:	b.cc	417920 <ascii_strlower_n@plt+0x13518>  // b.lo, b.ul, b.last
  417938:	mov	x0, x19
  41793c:	bl	4039d8 <free@plt>
  417940:	ldp	x20, x19, [sp, #32]
  417944:	ldr	x21, [sp, #16]
  417948:	mov	x0, xzr
  41794c:	ldp	x29, x30, [sp], #48
  417950:	ret
  417954:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417958:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41795c:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417960:	add	x1, x1, #0x4e1
  417964:	add	x2, x2, #0x386
  417968:	add	x4, x4, #0x3fd
  41796c:	mov	w3, #0x21                  	// #33
  417970:	mov	w0, wzr
  417974:	bl	403a98 <log_assert_failed_realm@plt>
  417978:	stp	x29, x30, [sp, #-32]!
  41797c:	str	x19, [sp, #16]
  417980:	mov	x29, sp
  417984:	cbz	x1, 4179d4 <ascii_strlower_n@plt+0x135cc>
  417988:	mov	x19, x0
  41798c:	cbz	x0, 4179f8 <ascii_strlower_n@plt+0x135f0>
  417990:	ldp	x8, x9, [x19, #8]
  417994:	cmp	x8, x9
  417998:	b.cs	4179c4 <ascii_strlower_n@plt+0x135bc>  // b.hs, b.nlast
  41799c:	mov	x0, x1
  4179a0:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  4179a4:	ldr	x9, [x19, #8]
  4179a8:	mov	x8, x0
  4179ac:	mov	w0, wzr
  4179b0:	add	x10, x9, #0x1
  4179b4:	add	x9, x19, x9, lsl #3
  4179b8:	str	x10, [x19, #8]
  4179bc:	str	x8, [x9, #24]
  4179c0:	b	4179c8 <ascii_strlower_n@plt+0x135c0>
  4179c4:	mov	w0, #0xffffffe4            	// #-28
  4179c8:	ldr	x19, [sp, #16]
  4179cc:	ldp	x29, x30, [sp], #32
  4179d0:	ret
  4179d4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4179d8:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4179dc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4179e0:	add	x1, x1, #0xd96
  4179e4:	add	x2, x2, #0x386
  4179e8:	add	x4, x4, #0x42c
  4179ec:	mov	w3, #0x26                  	// #38
  4179f0:	mov	w0, wzr
  4179f4:	bl	403a98 <log_assert_failed_realm@plt>
  4179f8:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4179fc:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417a00:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417a04:	add	x1, x1, #0x466
  417a08:	add	x2, x2, #0x386
  417a0c:	add	x4, x4, #0x42c
  417a10:	mov	w3, #0x27                  	// #39
  417a14:	mov	w0, wzr
  417a18:	bl	403a98 <log_assert_failed_realm@plt>
  417a1c:	stp	x29, x30, [sp, #-48]!
  417a20:	stp	x22, x21, [sp, #16]
  417a24:	stp	x20, x19, [sp, #32]
  417a28:	mov	x29, sp
  417a2c:	cbz	x1, 417ac0 <ascii_strlower_n@plt+0x136b8>
  417a30:	mov	x19, x0
  417a34:	cbz	x0, 417aa4 <ascii_strlower_n@plt+0x1369c>
  417a38:	ldr	x8, [x19, #8]
  417a3c:	mov	x20, x1
  417a40:	cbz	x8, 417a70 <ascii_strlower_n@plt+0x13668>
  417a44:	mov	x21, xzr
  417a48:	add	x22, x19, #0x18
  417a4c:	ldr	x0, [x22, x21, lsl #3]
  417a50:	mov	x1, x20
  417a54:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  417a58:	tbnz	w0, #31, 417aa8 <ascii_strlower_n@plt+0x136a0>
  417a5c:	cbnz	w0, 417ab8 <ascii_strlower_n@plt+0x136b0>
  417a60:	ldr	x8, [x19, #8]
  417a64:	add	x21, x21, #0x1
  417a68:	cmp	x21, x8
  417a6c:	b.cc	417a4c <ascii_strlower_n@plt+0x13644>  // b.lo, b.ul, b.last
  417a70:	ldr	x9, [x19, #16]
  417a74:	cmp	x8, x9
  417a78:	b.cs	417aa4 <ascii_strlower_n@plt+0x1369c>  // b.hs, b.nlast
  417a7c:	mov	x0, x20
  417a80:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  417a84:	ldr	x9, [x19, #8]
  417a88:	mov	x8, x0
  417a8c:	mov	w0, wzr
  417a90:	add	x10, x9, #0x1
  417a94:	add	x9, x19, x9, lsl #3
  417a98:	str	x10, [x19, #8]
  417a9c:	str	x8, [x9, #24]
  417aa0:	b	417aa8 <ascii_strlower_n@plt+0x136a0>
  417aa4:	mov	w0, #0xffffffe4            	// #-28
  417aa8:	ldp	x20, x19, [sp, #32]
  417aac:	ldp	x22, x21, [sp, #16]
  417ab0:	ldp	x29, x30, [sp], #48
  417ab4:	ret
  417ab8:	mov	w0, wzr
  417abc:	b	417aa8 <ascii_strlower_n@plt+0x136a0>
  417ac0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417ac4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417ac8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417acc:	add	x1, x1, #0xd96
  417ad0:	add	x2, x2, #0x386
  417ad4:	add	x4, x4, #0x468
  417ad8:	mov	w3, #0x33                  	// #51
  417adc:	mov	w0, wzr
  417ae0:	bl	403a98 <log_assert_failed_realm@plt>
  417ae4:	stp	x29, x30, [sp, #-64]!
  417ae8:	str	x23, [sp, #16]
  417aec:	stp	x22, x21, [sp, #32]
  417af0:	stp	x20, x19, [sp, #48]
  417af4:	mov	x29, sp
  417af8:	cbz	x1, 417b58 <ascii_strlower_n@plt+0x13750>
  417afc:	mov	x21, x0
  417b00:	cbz	x0, 417b40 <ascii_strlower_n@plt+0x13738>
  417b04:	ldr	x8, [x21, #8]
  417b08:	cbz	x8, 417b40 <ascii_strlower_n@plt+0x13738>
  417b0c:	mov	x19, x2
  417b10:	mov	x20, x1
  417b14:	mov	x22, xzr
  417b18:	add	x23, x21, #0x18
  417b1c:	ldr	x0, [x23, x22, lsl #3]
  417b20:	mov	x1, x20
  417b24:	mov	x2, x19
  417b28:	bl	41274c <ascii_strlower_n@plt+0xe344>
  417b2c:	cbnz	w0, 417b44 <ascii_strlower_n@plt+0x1373c>
  417b30:	ldr	x8, [x21, #8]
  417b34:	add	x22, x22, #0x1
  417b38:	cmp	x22, x8
  417b3c:	b.cc	417b1c <ascii_strlower_n@plt+0x13714>  // b.lo, b.ul, b.last
  417b40:	mov	w0, wzr
  417b44:	ldp	x20, x19, [sp, #48]
  417b48:	ldp	x22, x21, [sp, #32]
  417b4c:	ldr	x23, [sp, #16]
  417b50:	ldp	x29, x30, [sp], #64
  417b54:	ret
  417b58:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417b5c:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417b60:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417b64:	add	x1, x1, #0x9e6
  417b68:	add	x2, x2, #0x386
  417b6c:	add	x4, x4, #0x49e
  417b70:	mov	w3, #0x47                  	// #71
  417b74:	mov	w0, wzr
  417b78:	bl	403a98 <log_assert_failed_realm@plt>
  417b7c:	stp	x29, x30, [sp, #-64]!
  417b80:	str	x23, [sp, #16]
  417b84:	stp	x22, x21, [sp, #32]
  417b88:	stp	x20, x19, [sp, #48]
  417b8c:	mov	x29, sp
  417b90:	cbz	x1, 417c18 <ascii_strlower_n@plt+0x13810>
  417b94:	mov	x21, x0
  417b98:	cbz	x0, 417c00 <ascii_strlower_n@plt+0x137f8>
  417b9c:	ldr	x8, [x1, #8]
  417ba0:	mov	x19, x2
  417ba4:	mov	x20, x1
  417ba8:	ldrh	w8, [x8, #6]
  417bac:	cmp	w8, #0x27
  417bb0:	b.eq	417bbc <ascii_strlower_n@plt+0x137b4>  // b.none
  417bb4:	cmp	w8, #0x5
  417bb8:	b.ne	417c00 <ascii_strlower_n@plt+0x137f8>  // b.any
  417bbc:	ldr	x8, [x21, #8]
  417bc0:	cbz	x8, 417c00 <ascii_strlower_n@plt+0x137f8>
  417bc4:	mov	x22, xzr
  417bc8:	add	x23, x21, #0x18
  417bcc:	ldr	x8, [x23, x22, lsl #3]
  417bd0:	ldrh	w0, [x8, #6]
  417bd4:	bl	419000 <ascii_strlower_n@plt+0x14bf8>
  417bd8:	tbz	w0, #0, 417c00 <ascii_strlower_n@plt+0x137f8>
  417bdc:	ldr	x0, [x23, x22, lsl #3]
  417be0:	ldr	x1, [x20, #8]
  417be4:	mov	x2, x19
  417be8:	bl	4128f8 <ascii_strlower_n@plt+0xe4f0>
  417bec:	cbnz	w0, 417c04 <ascii_strlower_n@plt+0x137fc>
  417bf0:	ldr	x8, [x21, #8]
  417bf4:	add	x22, x22, #0x1
  417bf8:	cmp	x22, x8
  417bfc:	b.cc	417bcc <ascii_strlower_n@plt+0x137c4>  // b.lo, b.ul, b.last
  417c00:	mov	w0, wzr
  417c04:	ldp	x20, x19, [sp, #48]
  417c08:	ldp	x22, x21, [sp, #32]
  417c0c:	ldr	x23, [sp, #16]
  417c10:	ldp	x29, x30, [sp], #64
  417c14:	ret
  417c18:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417c1c:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417c20:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417c24:	add	x1, x1, #0x9e6
  417c28:	add	x2, x2, #0x386
  417c2c:	add	x4, x4, #0x4ec
  417c30:	mov	w3, #0x59                  	// #89
  417c34:	mov	w0, wzr
  417c38:	bl	403a98 <log_assert_failed_realm@plt>
  417c3c:	stp	x29, x30, [sp, #-48]!
  417c40:	stp	x22, x21, [sp, #16]
  417c44:	stp	x20, x19, [sp, #32]
  417c48:	mov	x29, sp
  417c4c:	cbz	x0, 417cd4 <ascii_strlower_n@plt+0x138cc>
  417c50:	ldr	x8, [x0, #8]
  417c54:	mov	w9, #0xfffe                	// #65534
  417c58:	mov	x19, x0
  417c5c:	sub	x8, x8, #0x1
  417c60:	cmp	x8, x9
  417c64:	b.ls	417c70 <ascii_strlower_n@plt+0x13868>  // b.plast
  417c68:	mov	w0, wzr
  417c6c:	b	417cd4 <ascii_strlower_n@plt+0x138cc>
  417c70:	ldr	x0, [x19, #24]
  417c74:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417c78:	cbz	x0, 417cd4 <ascii_strlower_n@plt+0x138cc>
  417c7c:	ldr	x8, [x19, #8]
  417c80:	cbz	x8, 417cd0 <ascii_strlower_n@plt+0x138c8>
  417c84:	mov	x20, x0
  417c88:	mov	x21, xzr
  417c8c:	add	x22, x19, #0x18
  417c90:	ldr	x0, [x22, x21, lsl #3]
  417c94:	cbz	x0, 417ce4 <ascii_strlower_n@plt+0x138dc>
  417c98:	cbz	x21, 417cb4 <ascii_strlower_n@plt+0x138ac>
  417c9c:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417ca0:	mov	x1, x20
  417ca4:	bl	404248 <dns_name_equal@plt>
  417ca8:	cmp	w0, #0x1
  417cac:	b.lt	417cd4 <ascii_strlower_n@plt+0x138cc>  // b.tstop
  417cb0:	ldr	x0, [x22, x21, lsl #3]
  417cb4:	ldrh	w0, [x0, #6]
  417cb8:	bl	418f70 <ascii_strlower_n@plt+0x14b68>
  417cbc:	tbz	w0, #0, 417c68 <ascii_strlower_n@plt+0x13860>
  417cc0:	ldr	x8, [x19, #8]
  417cc4:	add	x21, x21, #0x1
  417cc8:	cmp	x21, x8
  417ccc:	b.cc	417c90 <ascii_strlower_n@plt+0x13888>  // b.lo, b.ul, b.last
  417cd0:	mov	w0, #0x1                   	// #1
  417cd4:	ldp	x20, x19, [sp, #32]
  417cd8:	ldp	x22, x21, [sp, #16]
  417cdc:	ldp	x29, x30, [sp], #48
  417ce0:	ret
  417ce4:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417ce8:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417cec:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417cf0:	add	x1, x1, #0x546
  417cf4:	add	x2, x2, #0x386
  417cf8:	add	x4, x4, #0x551
  417cfc:	mov	w3, #0x82                  	// #130
  417d00:	bl	403a98 <log_assert_failed_realm@plt>
  417d04:	stp	x29, x30, [sp, #-48]!
  417d08:	stp	x22, x21, [sp, #16]
  417d0c:	stp	x20, x19, [sp, #32]
  417d10:	mov	x29, sp
  417d14:	cbz	x1, 417d68 <ascii_strlower_n@plt+0x13960>
  417d18:	mov	x20, x0
  417d1c:	cbz	x0, 417d54 <ascii_strlower_n@plt+0x1394c>
  417d20:	ldr	x8, [x20, #8]
  417d24:	cbz	x8, 417d54 <ascii_strlower_n@plt+0x1394c>
  417d28:	mov	x19, x1
  417d2c:	mov	x21, xzr
  417d30:	add	x22, x20, #0x18
  417d34:	ldr	x0, [x22, x21, lsl #3]
  417d38:	mov	x1, x19
  417d3c:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  417d40:	cbnz	w0, 417d58 <ascii_strlower_n@plt+0x13950>
  417d44:	ldr	x8, [x20, #8]
  417d48:	add	x21, x21, #0x1
  417d4c:	cmp	x21, x8
  417d50:	b.cc	417d34 <ascii_strlower_n@plt+0x1392c>  // b.lo, b.ul, b.last
  417d54:	mov	w0, wzr
  417d58:	ldp	x20, x19, [sp, #32]
  417d5c:	ldp	x22, x21, [sp, #16]
  417d60:	ldp	x29, x30, [sp], #48
  417d64:	ret
  417d68:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417d6c:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417d70:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417d74:	add	x1, x1, #0x86a
  417d78:	add	x2, x2, #0x386
  417d7c:	add	x4, x4, #0x584
  417d80:	mov	w3, #0x95                  	// #149
  417d84:	mov	w0, wzr
  417d88:	bl	403a98 <log_assert_failed_realm@plt>
  417d8c:	stp	x29, x30, [sp, #-64]!
  417d90:	cmp	x0, x1
  417d94:	stp	x24, x23, [sp, #16]
  417d98:	stp	x22, x21, [sp, #32]
  417d9c:	stp	x20, x19, [sp, #48]
  417da0:	mov	x29, sp
  417da4:	b.eq	417e9c <ascii_strlower_n@plt+0x13a94>  // b.none
  417da8:	mov	x19, x1
  417dac:	mov	x20, x0
  417db0:	cbz	x0, 417e88 <ascii_strlower_n@plt+0x13a80>
  417db4:	ldr	x8, [x20, #8]
  417db8:	cbz	x19, 417e90 <ascii_strlower_n@plt+0x13a88>
  417dbc:	cbz	x8, 417e1c <ascii_strlower_n@plt+0x13a14>
  417dc0:	mov	x22, xzr
  417dc4:	add	x23, x19, #0x18
  417dc8:	add	x8, x20, x22, lsl #3
  417dcc:	ldr	x21, [x8, #24]
  417dd0:	cbz	x21, 417ebc <ascii_strlower_n@plt+0x13ab4>
  417dd4:	ldr	x8, [x19, #8]
  417dd8:	cbz	x8, 417ea4 <ascii_strlower_n@plt+0x13a9c>
  417ddc:	mov	x24, xzr
  417de0:	ldr	x0, [x23, x24, lsl #3]
  417de4:	mov	x1, x21
  417de8:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  417dec:	cbnz	w0, 417e04 <ascii_strlower_n@plt+0x139fc>
  417df0:	ldr	x8, [x19, #8]
  417df4:	add	x24, x24, #0x1
  417df8:	cmp	x24, x8
  417dfc:	b.cc	417de0 <ascii_strlower_n@plt+0x139d8>  // b.lo, b.ul, b.last
  417e00:	b	417ea4 <ascii_strlower_n@plt+0x13a9c>
  417e04:	cmp	w0, #0x1
  417e08:	b.lt	417ea8 <ascii_strlower_n@plt+0x13aa0>  // b.tstop
  417e0c:	ldr	x8, [x20, #8]
  417e10:	add	x22, x22, #0x1
  417e14:	cmp	x22, x8
  417e18:	b.cc	417dc8 <ascii_strlower_n@plt+0x139c0>  // b.lo, b.ul, b.last
  417e1c:	ldr	x8, [x19, #8]
  417e20:	cbz	x8, 417e9c <ascii_strlower_n@plt+0x13a94>
  417e24:	mov	x22, xzr
  417e28:	add	x23, x20, #0x18
  417e2c:	add	x8, x19, x22, lsl #3
  417e30:	ldr	x21, [x8, #24]
  417e34:	cbz	x21, 417ebc <ascii_strlower_n@plt+0x13ab4>
  417e38:	ldr	x8, [x20, #8]
  417e3c:	cbz	x8, 417ea4 <ascii_strlower_n@plt+0x13a9c>
  417e40:	mov	x24, xzr
  417e44:	ldr	x0, [x23, x24, lsl #3]
  417e48:	mov	x1, x21
  417e4c:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  417e50:	cbnz	w0, 417e68 <ascii_strlower_n@plt+0x13a60>
  417e54:	ldr	x8, [x20, #8]
  417e58:	add	x24, x24, #0x1
  417e5c:	cmp	x24, x8
  417e60:	b.cc	417e44 <ascii_strlower_n@plt+0x13a3c>  // b.lo, b.ul, b.last
  417e64:	b	417ea4 <ascii_strlower_n@plt+0x13a9c>
  417e68:	cmp	w0, #0x0
  417e6c:	b.le	417ea8 <ascii_strlower_n@plt+0x13aa0>
  417e70:	ldr	x8, [x19, #8]
  417e74:	add	x22, x22, #0x1
  417e78:	mov	w0, #0x1                   	// #1
  417e7c:	cmp	x22, x8
  417e80:	b.cc	417e2c <ascii_strlower_n@plt+0x13a24>  // b.lo, b.ul, b.last
  417e84:	b	417ea8 <ascii_strlower_n@plt+0x13aa0>
  417e88:	cbz	x19, 417e9c <ascii_strlower_n@plt+0x13a94>
  417e8c:	ldr	x8, [x19, #8]
  417e90:	cmp	x8, #0x0
  417e94:	cset	w0, eq  // eq = none
  417e98:	b	417ea8 <ascii_strlower_n@plt+0x13aa0>
  417e9c:	mov	w0, #0x1                   	// #1
  417ea0:	b	417ea8 <ascii_strlower_n@plt+0x13aa0>
  417ea4:	mov	w0, wzr
  417ea8:	ldp	x20, x19, [sp, #48]
  417eac:	ldp	x22, x21, [sp, #32]
  417eb0:	ldp	x24, x23, [sp, #16]
  417eb4:	ldp	x29, x30, [sp], #64
  417eb8:	ret
  417ebc:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  417ec0:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417ec4:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  417ec8:	add	x1, x1, #0x86a
  417ecc:	add	x2, x2, #0x386
  417ed0:	add	x4, x4, #0x584
  417ed4:	mov	w3, #0x95                  	// #149
  417ed8:	mov	w0, wzr
  417edc:	bl	403a98 <log_assert_failed_realm@plt>
  417ee0:	stp	x29, x30, [sp, #-96]!
  417ee4:	str	x27, [sp, #16]
  417ee8:	stp	x26, x25, [sp, #32]
  417eec:	stp	x24, x23, [sp, #48]
  417ef0:	stp	x22, x21, [sp, #64]
  417ef4:	stp	x20, x19, [sp, #80]
  417ef8:	mov	x29, sp
  417efc:	cbz	x1, 418168 <ascii_strlower_n@plt+0x13d60>
  417f00:	mov	x19, x2
  417f04:	cbz	x2, 41818c <ascii_strlower_n@plt+0x13d84>
  417f08:	ldr	x8, [x1, #8]
  417f0c:	mov	x20, x1
  417f10:	mov	x21, x0
  417f14:	ldrh	w8, [x8, #6]
  417f18:	cmp	w8, #0x27
  417f1c:	b.eq	417f28 <ascii_strlower_n@plt+0x13b20>  // b.none
  417f20:	cmp	w8, #0x5
  417f24:	b.ne	4181b0 <ascii_strlower_n@plt+0x13da8>  // b.any
  417f28:	cbz	x21, 417ffc <ascii_strlower_n@plt+0x13bf4>
  417f2c:	ldr	x9, [x21, #8]
  417f30:	cbz	x9, 417ffc <ascii_strlower_n@plt+0x13bf4>
  417f34:	add	x24, x20, #0x50
  417f38:	mov	w25, #0x3                   	// #3
  417f3c:	ldr	x22, [x21, x25, lsl #3]
  417f40:	and	w8, w8, #0xffff
  417f44:	cmp	w8, #0x5
  417f48:	mov	x8, x24
  417f4c:	str	xzr, [x29, #24]
  417f50:	b.eq	417f90 <ascii_strlower_n@plt+0x13b88>  // b.none
  417f54:	mov	x0, x22
  417f58:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417f5c:	ldr	x8, [x20, #8]
  417f60:	mov	x23, x0
  417f64:	mov	x0, x8
  417f68:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417f6c:	ldr	x2, [x20, #80]
  417f70:	mov	x1, x0
  417f74:	add	x3, x29, #0x18
  417f78:	mov	x0, x23
  417f7c:	bl	404228 <dns_name_change_suffix@plt>
  417f80:	mov	w23, w0
  417f84:	tbnz	w0, #31, 417fd8 <ascii_strlower_n@plt+0x13bd0>
  417f88:	cbz	w23, 417fb0 <ascii_strlower_n@plt+0x13ba8>
  417f8c:	add	x8, x29, #0x18
  417f90:	ldr	x23, [x8]
  417f94:	mov	x0, x22
  417f98:	bl	4121a8 <ascii_strlower_n@plt+0xdda0>
  417f9c:	mov	x1, x23
  417fa0:	bl	404248 <dns_name_equal@plt>
  417fa4:	mov	w23, w0
  417fa8:	tbnz	w0, #31, 417fd8 <ascii_strlower_n@plt+0x13bd0>
  417fac:	cbz	w23, 417fe4 <ascii_strlower_n@plt+0x13bdc>
  417fb0:	ldr	x0, [x29, #24]
  417fb4:	bl	4039d8 <free@plt>
  417fb8:	ldr	x8, [x21, #8]
  417fbc:	sub	x9, x25, #0x2
  417fc0:	cmp	x9, x8
  417fc4:	b.cs	417ffc <ascii_strlower_n@plt+0x13bf4>  // b.hs, b.nlast
  417fc8:	ldr	x8, [x20, #8]
  417fcc:	add	x25, x25, #0x1
  417fd0:	ldrh	w8, [x8, #6]
  417fd4:	b	417f3c <ascii_strlower_n@plt+0x13b34>
  417fd8:	mov	w24, wzr
  417fdc:	mov	w22, #0x1                   	// #1
  417fe0:	b	417fec <ascii_strlower_n@plt+0x13be4>
  417fe4:	mov	w22, wzr
  417fe8:	mov	w24, #0x1                   	// #1
  417fec:	ldr	x0, [x29, #24]
  417ff0:	bl	4039d8 <free@plt>
  417ff4:	cbz	w24, 418004 <ascii_strlower_n@plt+0x13bfc>
  417ff8:	cbz	w22, 418024 <ascii_strlower_n@plt+0x13c1c>
  417ffc:	mov	w23, wzr
  418000:	str	xzr, [x19]
  418004:	mov	w0, w23
  418008:	ldp	x20, x19, [sp, #80]
  41800c:	ldp	x22, x21, [sp, #64]
  418010:	ldp	x24, x23, [sp, #48]
  418014:	ldp	x26, x25, [sp, #32]
  418018:	ldr	x27, [sp, #16]
  41801c:	ldp	x29, x30, [sp], #96
  418020:	ret
  418024:	ldr	x23, [x21, #8]
  418028:	cbz	x23, 4181d4 <ascii_strlower_n@plt+0x13dcc>
  41802c:	lsl	x8, x23, #3
  418030:	add	x1, x8, #0x18
  418034:	mov	w0, #0x1                   	// #1
  418038:	mov	w24, #0x1                   	// #1
  41803c:	bl	404068 <calloc@plt>
  418040:	cbz	x0, 418100 <ascii_strlower_n@plt+0x13cf8>
  418044:	str	w24, [x0]
  418048:	str	x23, [x0, #16]
  41804c:	mov	x22, x0
  418050:	ldr	x0, [x21, #24]
  418054:	mov	x1, x20
  418058:	bl	411f34 <ascii_strlower_n@plt+0xdb2c>
  41805c:	cbz	x0, 4180f8 <ascii_strlower_n@plt+0x13cf0>
  418060:	mov	x24, x0
  418064:	mov	x25, xzr
  418068:	add	x26, x22, #0x18
  41806c:	ldr	x8, [x22, #8]
  418070:	cbz	x8, 4180a0 <ascii_strlower_n@plt+0x13c98>
  418074:	mov	x27, xzr
  418078:	ldr	x0, [x26, x27, lsl #3]
  41807c:	mov	x1, x24
  418080:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  418084:	mov	w23, w0
  418088:	tbnz	w0, #31, 418118 <ascii_strlower_n@plt+0x13d10>
  41808c:	cbnz	w23, 4180c8 <ascii_strlower_n@plt+0x13cc0>
  418090:	ldr	x8, [x22, #8]
  418094:	add	x27, x27, #0x1
  418098:	cmp	x27, x8
  41809c:	b.cc	418078 <ascii_strlower_n@plt+0x13c70>  // b.lo, b.ul, b.last
  4180a0:	ldr	x9, [x22, #16]
  4180a4:	cmp	x8, x9
  4180a8:	b.cs	418114 <ascii_strlower_n@plt+0x13d0c>  // b.hs, b.nlast
  4180ac:	mov	x0, x24
  4180b0:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  4180b4:	ldr	x8, [x22, #8]
  4180b8:	add	x9, x8, #0x1
  4180bc:	add	x8, x22, x8, lsl #3
  4180c0:	str	x9, [x22, #8]
  4180c4:	str	x0, [x8, #24]
  4180c8:	mov	x0, x24
  4180cc:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  4180d0:	ldr	x8, [x21, #8]
  4180d4:	add	x25, x25, #0x1
  4180d8:	cmp	x25, x8
  4180dc:	b.cs	418108 <ascii_strlower_n@plt+0x13d00>  // b.hs, b.nlast
  4180e0:	add	x8, x21, x25, lsl #3
  4180e4:	ldr	x0, [x8, #24]
  4180e8:	mov	x1, x20
  4180ec:	bl	411f34 <ascii_strlower_n@plt+0xdb2c>
  4180f0:	mov	x24, x0
  4180f4:	cbnz	x0, 41806c <ascii_strlower_n@plt+0x13c64>
  4180f8:	mov	w23, #0xfffffff4            	// #-12
  4180fc:	b	418120 <ascii_strlower_n@plt+0x13d18>
  418100:	mov	w23, #0xfffffff4            	// #-12
  418104:	b	418004 <ascii_strlower_n@plt+0x13bfc>
  418108:	str	x22, [x19]
  41810c:	mov	w23, #0x1                   	// #1
  418110:	b	418004 <ascii_strlower_n@plt+0x13bfc>
  418114:	mov	w23, #0xffffffe4            	// #-28
  418118:	mov	x0, x24
  41811c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418120:	ldr	w8, [x22]
  418124:	cbz	w8, 4181f8 <ascii_strlower_n@plt+0x13df0>
  418128:	subs	w8, w8, #0x1
  41812c:	str	w8, [x22]
  418130:	b.ne	418004 <ascii_strlower_n@plt+0x13bfc>  // b.any
  418134:	ldr	x8, [x22, #8]
  418138:	cbz	x8, 41815c <ascii_strlower_n@plt+0x13d54>
  41813c:	mov	x19, xzr
  418140:	add	x20, x22, #0x18
  418144:	ldr	x0, [x20, x19, lsl #3]
  418148:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  41814c:	ldr	x8, [x22, #8]
  418150:	add	x19, x19, #0x1
  418154:	cmp	x19, x8
  418158:	b.cc	418144 <ascii_strlower_n@plt+0x13d3c>  // b.lo, b.ul, b.last
  41815c:	mov	x0, x22
  418160:	bl	4039d8 <free@plt>
  418164:	b	418004 <ascii_strlower_n@plt+0x13bfc>
  418168:	adrp	x1, 41a000 <ascii_strlower_n@plt+0x15bf8>
  41816c:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418170:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418174:	add	x1, x1, #0xf8
  418178:	add	x2, x2, #0x386
  41817c:	add	x4, x4, #0x5c5
  418180:	mov	w3, #0xc6                  	// #198
  418184:	mov	w0, wzr
  418188:	bl	403a98 <log_assert_failed_realm@plt>
  41818c:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  418190:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418194:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418198:	add	x1, x1, #0xcb6
  41819c:	add	x2, x2, #0x386
  4181a0:	add	x4, x4, #0x5c5
  4181a4:	mov	w3, #0xc7                  	// #199
  4181a8:	mov	w0, wzr
  4181ac:	bl	403a98 <log_assert_failed_realm@plt>
  4181b0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4181b4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4181b8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4181bc:	add	x1, x1, #0x233
  4181c0:	add	x2, x2, #0x386
  4181c4:	add	x4, x4, #0x5c5
  4181c8:	mov	w3, #0xc8                  	// #200
  4181cc:	mov	w0, wzr
  4181d0:	bl	403a98 <log_assert_failed_realm@plt>
  4181d4:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4181d8:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4181dc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4181e0:	add	x1, x1, #0x37d
  4181e4:	add	x2, x2, #0x386
  4181e8:	add	x4, x4, #0x3aa
  4181ec:	mov	w3, #0xb                   	// #11
  4181f0:	mov	w0, wzr
  4181f4:	bl	403a98 <log_assert_failed_realm@plt>
  4181f8:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4181fc:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418200:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418204:	add	x1, x1, #0x4e1
  418208:	add	x2, x2, #0x386
  41820c:	add	x4, x4, #0x3fd
  418210:	mov	w3, #0x21                  	// #33
  418214:	mov	w0, wzr
  418218:	bl	403a98 <log_assert_failed_realm@plt>
  41821c:	cbz	x0, 418230 <ascii_strlower_n@plt+0x13e28>
  418220:	ldr	x8, [x0, #8]
  418224:	cbz	x8, 418230 <ascii_strlower_n@plt+0x13e28>
  418228:	ldr	x0, [x0, #24]
  41822c:	b	4121a8 <ascii_strlower_n@plt+0xdda0>
  418230:	mov	x0, xzr
  418234:	ret
  418238:	sub	sp, sp, #0x60
  41823c:	stp	x29, x30, [sp, #16]
  418240:	stp	x26, x25, [sp, #32]
  418244:	stp	x24, x23, [sp, #48]
  418248:	stp	x22, x21, [sp, #64]
  41824c:	stp	x20, x19, [sp, #80]
  418250:	add	x29, sp, #0x10
  418254:	str	xzr, [sp, #8]
  418258:	cbz	x0, 4184b0 <ascii_strlower_n@plt+0x140a8>
  41825c:	mov	x21, x2
  418260:	cbz	x2, 4184d0 <ascii_strlower_n@plt+0x140c8>
  418264:	mov	w23, w1
  418268:	mov	x19, xzr
  41826c:	cmp	w1, #0xa
  418270:	mov	w22, #0xffffff9f            	// #-97
  418274:	b.hi	418440 <ascii_strlower_n@plt+0x14038>  // b.pmore
  418278:	mov	w8, #0x1                   	// #1
  41827c:	lsl	w8, w8, w23
  418280:	mov	w9, #0x405                 	// #1029
  418284:	tst	w8, w9
  418288:	b.eq	418440 <ascii_strlower_n@plt+0x14038>  // b.none
  41828c:	mov	x20, x0
  418290:	tbz	w3, #0, 4182c4 <ascii_strlower_n@plt+0x13ebc>
  418294:	add	x1, sp, #0x8
  418298:	mov	x0, x21
  41829c:	bl	4043e8 <dns_name_apply_idna@plt>
  4182a0:	mov	w22, w0
  4182a4:	tbnz	w0, #31, 41840c <ascii_strlower_n@plt+0x14004>
  4182a8:	cbz	w22, 41841c <ascii_strlower_n@plt+0x14014>
  4182ac:	ldr	x19, [sp, #8]
  4182b0:	mov	x0, x21
  4182b4:	mov	x1, x19
  4182b8:	bl	403b38 <strcmp@plt>
  4182bc:	mov	x21, x19
  4182c0:	cbz	w0, 41841c <ascii_strlower_n@plt+0x14014>
  4182c4:	cmp	w23, #0x0
  4182c8:	mov	w24, #0x1                   	// #1
  4182cc:	cinc	x22, x24, eq  // eq = none
  4182d0:	lsl	x8, x22, #3
  4182d4:	add	x1, x8, #0x18
  4182d8:	mov	w0, #0x1                   	// #1
  4182dc:	bl	404068 <calloc@plt>
  4182e0:	mov	x19, x0
  4182e4:	cbz	x0, 418414 <ascii_strlower_n@plt+0x1400c>
  4182e8:	cmp	w23, #0xa
  4182ec:	str	w24, [x19]
  4182f0:	str	x22, [x19, #16]
  4182f4:	b.ne	41837c <ascii_strlower_n@plt+0x13f74>  // b.any
  4182f8:	mov	w0, #0x1                   	// #1
  4182fc:	mov	w1, #0x1c                  	// #28
  418300:	mov	x2, x21
  418304:	bl	411e9c <ascii_strlower_n@plt+0xda94>
  418308:	cbz	x0, 418414 <ascii_strlower_n@plt+0x1400c>
  41830c:	ldr	x8, [x19, #8]
  418310:	mov	x21, x0
  418314:	cbz	x8, 418348 <ascii_strlower_n@plt+0x13f40>
  418318:	mov	x23, xzr
  41831c:	add	x24, x19, #0x18
  418320:	ldr	x0, [x24, x23, lsl #3]
  418324:	mov	x1, x21
  418328:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  41832c:	mov	w22, w0
  418330:	tbnz	w0, #31, 41842c <ascii_strlower_n@plt+0x14024>
  418334:	cbnz	w22, 418370 <ascii_strlower_n@plt+0x13f68>
  418338:	ldr	x8, [x19, #8]
  41833c:	add	x23, x23, #0x1
  418340:	cmp	x23, x8
  418344:	b.cc	418320 <ascii_strlower_n@plt+0x13f18>  // b.lo, b.ul, b.last
  418348:	ldr	x9, [x19, #16]
  41834c:	cmp	x8, x9
  418350:	b.cs	418428 <ascii_strlower_n@plt+0x14020>  // b.hs, b.nlast
  418354:	mov	x0, x21
  418358:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  41835c:	ldr	x8, [x19, #8]
  418360:	add	x9, x8, #0x1
  418364:	add	x8, x19, x8, lsl #3
  418368:	str	x9, [x19, #8]
  41836c:	str	x0, [x8, #24]
  418370:	mov	x0, x21
  418374:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418378:	b	418404 <ascii_strlower_n@plt+0x13ffc>
  41837c:	mov	w0, #0x1                   	// #1
  418380:	mov	w1, #0x1                   	// #1
  418384:	mov	x2, x21
  418388:	bl	411e9c <ascii_strlower_n@plt+0xda94>
  41838c:	cbz	x0, 418414 <ascii_strlower_n@plt+0x1400c>
  418390:	ldr	x8, [x19, #8]
  418394:	mov	x24, x0
  418398:	cbz	x8, 4183cc <ascii_strlower_n@plt+0x13fc4>
  41839c:	mov	x25, xzr
  4183a0:	add	x26, x19, #0x18
  4183a4:	ldr	x0, [x26, x25, lsl #3]
  4183a8:	mov	x1, x24
  4183ac:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  4183b0:	mov	w22, w0
  4183b4:	tbnz	w0, #31, 418438 <ascii_strlower_n@plt+0x14030>
  4183b8:	cbnz	w22, 4183f4 <ascii_strlower_n@plt+0x13fec>
  4183bc:	ldr	x8, [x19, #8]
  4183c0:	add	x25, x25, #0x1
  4183c4:	cmp	x25, x8
  4183c8:	b.cc	4183a4 <ascii_strlower_n@plt+0x13f9c>  // b.lo, b.ul, b.last
  4183cc:	ldr	x9, [x19, #16]
  4183d0:	cmp	x8, x9
  4183d4:	b.cs	418434 <ascii_strlower_n@plt+0x1402c>  // b.hs, b.nlast
  4183d8:	mov	x0, x24
  4183dc:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  4183e0:	ldr	x8, [x19, #8]
  4183e4:	add	x9, x8, #0x1
  4183e8:	add	x8, x19, x8, lsl #3
  4183ec:	str	x9, [x19, #8]
  4183f0:	str	x0, [x8, #24]
  4183f4:	mov	x0, x24
  4183f8:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  4183fc:	cmp	w23, #0x2
  418400:	b.ne	4182f8 <ascii_strlower_n@plt+0x13ef0>  // b.any
  418404:	mov	w22, wzr
  418408:	str	x19, [x20]
  41840c:	mov	x19, xzr
  418410:	b	418440 <ascii_strlower_n@plt+0x14038>
  418414:	mov	w22, #0xfffffff4            	// #-12
  418418:	b	418440 <ascii_strlower_n@plt+0x14038>
  41841c:	mov	x19, xzr
  418420:	mov	w22, #0xffffff8e            	// #-114
  418424:	b	418440 <ascii_strlower_n@plt+0x14038>
  418428:	mov	w22, #0xffffffe4            	// #-28
  41842c:	mov	x0, x21
  418430:	b	41843c <ascii_strlower_n@plt+0x14034>
  418434:	mov	w22, #0xffffffe4            	// #-28
  418438:	mov	x0, x24
  41843c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418440:	ldr	x0, [sp, #8]
  418444:	bl	4039d8 <free@plt>
  418448:	cbz	x19, 418490 <ascii_strlower_n@plt+0x14088>
  41844c:	ldr	w8, [x19]
  418450:	cbz	w8, 4184f4 <ascii_strlower_n@plt+0x140ec>
  418454:	subs	w8, w8, #0x1
  418458:	str	w8, [x19]
  41845c:	b.ne	418490 <ascii_strlower_n@plt+0x14088>  // b.any
  418460:	ldr	x8, [x19, #8]
  418464:	cbz	x8, 418488 <ascii_strlower_n@plt+0x14080>
  418468:	mov	x20, xzr
  41846c:	add	x21, x19, #0x18
  418470:	ldr	x0, [x21, x20, lsl #3]
  418474:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418478:	ldr	x8, [x19, #8]
  41847c:	add	x20, x20, #0x1
  418480:	cmp	x20, x8
  418484:	b.cc	418470 <ascii_strlower_n@plt+0x14068>  // b.lo, b.ul, b.last
  418488:	mov	x0, x19
  41848c:	bl	4039d8 <free@plt>
  418490:	mov	w0, w22
  418494:	ldp	x20, x19, [sp, #80]
  418498:	ldp	x22, x21, [sp, #64]
  41849c:	ldp	x24, x23, [sp, #48]
  4184a0:	ldp	x26, x25, [sp, #32]
  4184a4:	ldp	x29, x30, [sp, #16]
  4184a8:	add	sp, sp, #0x60
  4184ac:	ret
  4184b0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4184b4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4184b8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4184bc:	add	x1, x1, #0xcb6
  4184c0:	add	x2, x2, #0x386
  4184c4:	add	x4, x4, #0x61f
  4184c8:	mov	w3, #0x115                 	// #277
  4184cc:	bl	403a98 <log_assert_failed_realm@plt>
  4184d0:	adrp	x1, 41c000 <ascii_strlower_n@plt+0x17bf8>
  4184d4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4184d8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4184dc:	add	x1, x1, #0x137
  4184e0:	add	x2, x2, #0x386
  4184e4:	add	x4, x4, #0x61f
  4184e8:	mov	w3, #0x116                 	// #278
  4184ec:	mov	w0, wzr
  4184f0:	bl	403a98 <log_assert_failed_realm@plt>
  4184f4:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4184f8:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4184fc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418500:	add	x1, x1, #0x4e1
  418504:	add	x2, x2, #0x386
  418508:	add	x4, x4, #0x3fd
  41850c:	mov	w3, #0x21                  	// #33
  418510:	mov	w0, wzr
  418514:	bl	403a98 <log_assert_failed_realm@plt>
  418518:	sub	sp, sp, #0x50
  41851c:	stp	x29, x30, [sp, #16]
  418520:	stp	x24, x23, [sp, #32]
  418524:	stp	x22, x21, [sp, #48]
  418528:	stp	x20, x19, [sp, #64]
  41852c:	add	x29, sp, #0x10
  418530:	str	xzr, [sp, #8]
  418534:	cbz	x0, 4186d0 <ascii_strlower_n@plt+0x142c8>
  418538:	mov	x8, x2
  41853c:	cbz	x2, 4186f0 <ascii_strlower_n@plt+0x142e8>
  418540:	mov	x19, xzr
  418544:	cmp	w1, #0xa
  418548:	mov	w21, #0xffffff9f            	// #-97
  41854c:	b.hi	418644 <ascii_strlower_n@plt+0x1423c>  // b.pmore
  418550:	mov	w9, #0x1                   	// #1
  418554:	lsl	w9, w9, w1
  418558:	mov	w10, #0x405                 	// #1029
  41855c:	tst	w9, w10
  418560:	mov	x20, x19
  418564:	b.eq	418658 <ascii_strlower_n@plt+0x14250>  // b.none
  418568:	mov	x22, x0
  41856c:	add	x2, sp, #0x8
  418570:	mov	w0, w1
  418574:	mov	x1, x8
  418578:	bl	404298 <dns_name_reverse@plt>
  41857c:	tbnz	w0, #31, 418628 <ascii_strlower_n@plt+0x14220>
  418580:	mov	w0, #0x1                   	// #1
  418584:	mov	w1, #0x20                  	// #32
  418588:	mov	w19, #0x1                   	// #1
  41858c:	bl	404068 <calloc@plt>
  418590:	mov	x20, x0
  418594:	cbz	x0, 418638 <ascii_strlower_n@plt+0x14230>
  418598:	ldr	x2, [sp, #8]
  41859c:	mov	w0, #0x1                   	// #1
  4185a0:	mov	w1, #0xc                   	// #12
  4185a4:	str	w19, [x20]
  4185a8:	str	x19, [x20, #16]
  4185ac:	bl	412260 <ascii_strlower_n@plt+0xde58>
  4185b0:	mov	x19, x0
  4185b4:	cbz	x0, 41864c <ascii_strlower_n@plt+0x14244>
  4185b8:	ldr	x8, [x20, #8]
  4185bc:	str	xzr, [sp, #8]
  4185c0:	cbz	x8, 4185f4 <ascii_strlower_n@plt+0x141ec>
  4185c4:	mov	x23, xzr
  4185c8:	add	x24, x20, #0x18
  4185cc:	ldr	x0, [x24, x23, lsl #3]
  4185d0:	mov	x1, x19
  4185d4:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  4185d8:	mov	w21, w0
  4185dc:	tbnz	w0, #31, 418658 <ascii_strlower_n@plt+0x14250>
  4185e0:	cbnz	w21, 41861c <ascii_strlower_n@plt+0x14214>
  4185e4:	ldr	x8, [x20, #8]
  4185e8:	add	x23, x23, #0x1
  4185ec:	cmp	x23, x8
  4185f0:	b.cc	4185cc <ascii_strlower_n@plt+0x141c4>  // b.lo, b.ul, b.last
  4185f4:	ldr	x9, [x20, #16]
  4185f8:	cmp	x8, x9
  4185fc:	b.cs	418654 <ascii_strlower_n@plt+0x1424c>  // b.hs, b.nlast
  418600:	mov	x0, x19
  418604:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  418608:	ldr	x8, [x20, #8]
  41860c:	add	x9, x8, #0x1
  418610:	add	x8, x20, x8, lsl #3
  418614:	str	x9, [x20, #8]
  418618:	str	x0, [x8, #24]
  41861c:	mov	w21, wzr
  418620:	str	x20, [x22]
  418624:	b	418630 <ascii_strlower_n@plt+0x14228>
  418628:	mov	w21, w0
  41862c:	mov	x19, xzr
  418630:	mov	x20, xzr
  418634:	b	418658 <ascii_strlower_n@plt+0x14250>
  418638:	mov	x19, xzr
  41863c:	mov	w21, #0xfffffff4            	// #-12
  418640:	b	418658 <ascii_strlower_n@plt+0x14250>
  418644:	mov	x20, x19
  418648:	b	418658 <ascii_strlower_n@plt+0x14250>
  41864c:	mov	w21, #0xfffffff4            	// #-12
  418650:	b	418658 <ascii_strlower_n@plt+0x14250>
  418654:	mov	w21, #0xffffffe4            	// #-28
  418658:	ldr	x0, [sp, #8]
  41865c:	bl	4039d8 <free@plt>
  418660:	cbz	x20, 4186a8 <ascii_strlower_n@plt+0x142a0>
  418664:	ldr	w8, [x20]
  418668:	cbz	w8, 418714 <ascii_strlower_n@plt+0x1430c>
  41866c:	subs	w8, w8, #0x1
  418670:	str	w8, [x20]
  418674:	b.ne	4186a8 <ascii_strlower_n@plt+0x142a0>  // b.any
  418678:	ldr	x8, [x20, #8]
  41867c:	cbz	x8, 4186a0 <ascii_strlower_n@plt+0x14298>
  418680:	mov	x22, xzr
  418684:	add	x23, x20, #0x18
  418688:	ldr	x0, [x23, x22, lsl #3]
  41868c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418690:	ldr	x8, [x20, #8]
  418694:	add	x22, x22, #0x1
  418698:	cmp	x22, x8
  41869c:	b.cc	418688 <ascii_strlower_n@plt+0x14280>  // b.lo, b.ul, b.last
  4186a0:	mov	x0, x20
  4186a4:	bl	4039d8 <free@plt>
  4186a8:	cbz	x19, 4186b4 <ascii_strlower_n@plt+0x142ac>
  4186ac:	mov	x0, x19
  4186b0:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  4186b4:	mov	w0, w21
  4186b8:	ldp	x20, x19, [sp, #64]
  4186bc:	ldp	x22, x21, [sp, #48]
  4186c0:	ldp	x24, x23, [sp, #32]
  4186c4:	ldp	x29, x30, [sp, #16]
  4186c8:	add	sp, sp, #0x50
  4186cc:	ret
  4186d0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4186d4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4186d8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4186dc:	add	x1, x1, #0xcb6
  4186e0:	add	x2, x2, #0x386
  4186e4:	add	x4, x4, #0x666
  4186e8:	mov	w3, #0x150                 	// #336
  4186ec:	bl	403a98 <log_assert_failed_realm@plt>
  4186f0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4186f4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4186f8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4186fc:	add	x1, x1, #0x562
  418700:	add	x2, x2, #0x386
  418704:	add	x4, x4, #0x666
  418708:	mov	w3, #0x151                 	// #337
  41870c:	mov	w0, wzr
  418710:	bl	403a98 <log_assert_failed_realm@plt>
  418714:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  418718:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41871c:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418720:	add	x1, x1, #0x4e1
  418724:	add	x2, x2, #0x386
  418728:	add	x4, x4, #0x3fd
  41872c:	mov	w3, #0x21                  	// #33
  418730:	mov	w0, wzr
  418734:	bl	403a98 <log_assert_failed_realm@plt>
  418738:	sub	sp, sp, #0x60
  41873c:	stp	x29, x30, [sp, #16]
  418740:	stp	x26, x25, [sp, #32]
  418744:	stp	x24, x23, [sp, #48]
  418748:	stp	x22, x21, [sp, #64]
  41874c:	stp	x20, x19, [sp, #80]
  418750:	add	x29, sp, #0x10
  418754:	stp	xzr, xzr, [sp]
  418758:	cbz	x0, 4189b0 <ascii_strlower_n@plt+0x145a8>
  41875c:	mov	x23, x3
  418760:	cbz	x3, 4187c0 <ascii_strlower_n@plt+0x143b8>
  418764:	mov	w24, w4
  418768:	mov	x20, x2
  41876c:	mov	x19, x1
  418770:	mov	x21, x0
  418774:	cbz	x2, 4187bc <ascii_strlower_n@plt+0x143b4>
  418778:	tbz	w5, #0, 41879c <ascii_strlower_n@plt+0x14394>
  41877c:	add	x1, sp, #0x8
  418780:	mov	x0, x23
  418784:	bl	4043e8 <dns_name_apply_idna@plt>
  418788:	mov	w22, w0
  41878c:	tbnz	w0, #31, 418908 <ascii_strlower_n@plt+0x14500>
  418790:	ldr	x8, [sp, #8]
  418794:	cmp	w22, #0x0
  418798:	csel	x23, x23, x8, eq  // eq = none
  41879c:	mov	x3, sp
  4187a0:	mov	x0, x19
  4187a4:	mov	x1, x20
  4187a8:	mov	x2, x23
  4187ac:	bl	4043f8 <dns_service_join@plt>
  4187b0:	tbnz	w0, #31, 418904 <ascii_strlower_n@plt+0x144fc>
  4187b4:	ldr	x23, [sp]
  4187b8:	b	4187d0 <ascii_strlower_n@plt+0x143c8>
  4187bc:	cbz	x19, 4187d0 <ascii_strlower_n@plt+0x143c8>
  4187c0:	mov	x20, xzr
  4187c4:	mov	x19, xzr
  4187c8:	mov	w22, #0xffffffea            	// #-22
  4187cc:	b	41892c <ascii_strlower_n@plt+0x14524>
  4187d0:	tst	w24, #0x1
  4187d4:	mov	w20, #0x1                   	// #1
  4187d8:	cinc	x22, x20, ne  // ne = any
  4187dc:	lsl	x8, x22, #3
  4187e0:	add	x1, x8, #0x18
  4187e4:	mov	w0, #0x1                   	// #1
  4187e8:	bl	404068 <calloc@plt>
  4187ec:	mov	x19, x0
  4187f0:	cbz	x0, 418914 <ascii_strlower_n@plt+0x1450c>
  4187f4:	mov	w0, #0x1                   	// #1
  4187f8:	mov	w1, #0x21                  	// #33
  4187fc:	mov	x2, x23
  418800:	str	w20, [x19]
  418804:	str	x22, [x19, #16]
  418808:	bl	411e9c <ascii_strlower_n@plt+0xda94>
  41880c:	mov	x20, x0
  418810:	cbz	x0, 418920 <ascii_strlower_n@plt+0x14518>
  418814:	ldr	x8, [x19, #8]
  418818:	cbz	x8, 41884c <ascii_strlower_n@plt+0x14444>
  41881c:	mov	x25, xzr
  418820:	add	x26, x19, #0x18
  418824:	ldr	x0, [x26, x25, lsl #3]
  418828:	mov	x1, x20
  41882c:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  418830:	mov	w22, w0
  418834:	tbnz	w0, #31, 41892c <ascii_strlower_n@plt+0x14524>
  418838:	cbnz	w22, 418874 <ascii_strlower_n@plt+0x1446c>
  41883c:	ldr	x8, [x19, #8]
  418840:	add	x25, x25, #0x1
  418844:	cmp	x25, x8
  418848:	b.cc	418824 <ascii_strlower_n@plt+0x1441c>  // b.lo, b.ul, b.last
  41884c:	ldr	x9, [x19, #16]
  418850:	cmp	x8, x9
  418854:	b.cs	418928 <ascii_strlower_n@plt+0x14520>  // b.hs, b.nlast
  418858:	mov	x0, x20
  41885c:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  418860:	ldr	x8, [x19, #8]
  418864:	add	x9, x8, #0x1
  418868:	add	x8, x19, x8, lsl #3
  41886c:	str	x9, [x19, #8]
  418870:	str	x0, [x8, #24]
  418874:	tbz	w24, #0, 4188f8 <ascii_strlower_n@plt+0x144f0>
  418878:	mov	x0, x20
  41887c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418880:	mov	w0, #0x1                   	// #1
  418884:	mov	w1, #0x10                  	// #16
  418888:	mov	x2, x23
  41888c:	bl	411e9c <ascii_strlower_n@plt+0xda94>
  418890:	mov	x20, x0
  418894:	cbz	x0, 418920 <ascii_strlower_n@plt+0x14518>
  418898:	ldr	x8, [x19, #8]
  41889c:	cbz	x8, 4188d0 <ascii_strlower_n@plt+0x144c8>
  4188a0:	mov	x23, xzr
  4188a4:	add	x24, x19, #0x18
  4188a8:	ldr	x0, [x24, x23, lsl #3]
  4188ac:	mov	x1, x20
  4188b0:	bl	412674 <ascii_strlower_n@plt+0xe26c>
  4188b4:	mov	w22, w0
  4188b8:	tbnz	w0, #31, 41892c <ascii_strlower_n@plt+0x14524>
  4188bc:	cbnz	w22, 4188f8 <ascii_strlower_n@plt+0x144f0>
  4188c0:	ldr	x8, [x19, #8]
  4188c4:	add	x23, x23, #0x1
  4188c8:	cmp	x23, x8
  4188cc:	b.cc	4188a8 <ascii_strlower_n@plt+0x144a0>  // b.lo, b.ul, b.last
  4188d0:	ldr	x9, [x19, #16]
  4188d4:	cmp	x8, x9
  4188d8:	b.cs	418928 <ascii_strlower_n@plt+0x14520>  // b.hs, b.nlast
  4188dc:	mov	x0, x20
  4188e0:	bl	4121ec <ascii_strlower_n@plt+0xdde4>
  4188e4:	ldr	x8, [x19, #8]
  4188e8:	add	x9, x8, #0x1
  4188ec:	add	x8, x19, x8, lsl #3
  4188f0:	str	x9, [x19, #8]
  4188f4:	str	x0, [x8, #24]
  4188f8:	mov	w22, wzr
  4188fc:	str	x19, [x21]
  418900:	b	41890c <ascii_strlower_n@plt+0x14504>
  418904:	mov	w22, w0
  418908:	mov	x20, xzr
  41890c:	mov	x19, xzr
  418910:	b	41892c <ascii_strlower_n@plt+0x14524>
  418914:	mov	x20, xzr
  418918:	mov	w22, #0xfffffff4            	// #-12
  41891c:	b	41892c <ascii_strlower_n@plt+0x14524>
  418920:	mov	w22, #0xfffffff4            	// #-12
  418924:	b	41892c <ascii_strlower_n@plt+0x14524>
  418928:	mov	w22, #0xffffffe4            	// #-28
  41892c:	ldr	x0, [sp]
  418930:	bl	4039d8 <free@plt>
  418934:	ldr	x0, [sp, #8]
  418938:	bl	4039d8 <free@plt>
  41893c:	cbz	x19, 418984 <ascii_strlower_n@plt+0x1457c>
  418940:	ldr	w8, [x19]
  418944:	cbz	w8, 4189d0 <ascii_strlower_n@plt+0x145c8>
  418948:	subs	w8, w8, #0x1
  41894c:	str	w8, [x19]
  418950:	b.ne	418984 <ascii_strlower_n@plt+0x1457c>  // b.any
  418954:	ldr	x8, [x19, #8]
  418958:	cbz	x8, 41897c <ascii_strlower_n@plt+0x14574>
  41895c:	mov	x21, xzr
  418960:	add	x23, x19, #0x18
  418964:	ldr	x0, [x23, x21, lsl #3]
  418968:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  41896c:	ldr	x8, [x19, #8]
  418970:	add	x21, x21, #0x1
  418974:	cmp	x21, x8
  418978:	b.cc	418964 <ascii_strlower_n@plt+0x1455c>  // b.lo, b.ul, b.last
  41897c:	mov	x0, x19
  418980:	bl	4039d8 <free@plt>
  418984:	cbz	x20, 418990 <ascii_strlower_n@plt+0x14588>
  418988:	mov	x0, x20
  41898c:	bl	4124a8 <ascii_strlower_n@plt+0xe0a0>
  418990:	mov	w0, w22
  418994:	ldp	x20, x19, [sp, #80]
  418998:	ldp	x22, x21, [sp, #64]
  41899c:	ldp	x24, x23, [sp, #48]
  4189a0:	ldp	x26, x25, [sp, #32]
  4189a4:	ldp	x29, x30, [sp, #16]
  4189a8:	add	sp, sp, #0x60
  4189ac:	ret
  4189b0:	adrp	x1, 41b000 <ascii_strlower_n@plt+0x16bf8>
  4189b4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4189b8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4189bc:	add	x1, x1, #0xcb6
  4189c0:	add	x2, x2, #0x386
  4189c4:	add	x4, x4, #0x6b5
  4189c8:	mov	w3, #0x17b                 	// #379
  4189cc:	bl	403a98 <log_assert_failed_realm@plt>
  4189d0:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4189d4:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4189d8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4189dc:	add	x1, x1, #0x4e1
  4189e0:	add	x2, x2, #0x386
  4189e4:	add	x4, x4, #0x3fd
  4189e8:	mov	w3, #0x21                  	// #33
  4189ec:	mov	w0, wzr
  4189f0:	bl	403a98 <log_assert_failed_realm@plt>
  4189f4:	sub	w8, w0, #0x1
  4189f8:	cmp	w8, #0x100
  4189fc:	b.hi	418a2c <ascii_strlower_n@plt+0x14624>  // b.pmore
  418a00:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418a04:	add	x9, x9, #0xd88
  418a08:	adr	x10, 418a20 <ascii_strlower_n@plt+0x14618>
  418a0c:	ldrb	w11, [x9, x8]
  418a10:	add	x10, x10, x11, lsl #2
  418a14:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a18:	add	x0, x0, #0x71a
  418a1c:	br	x10
  418a20:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a24:	add	x0, x0, #0x71c
  418a28:	ret
  418a2c:	cmp	w0, #0x8, lsl #12
  418a30:	b.eq	418dc0 <ascii_strlower_n@plt+0x149b8>  // b.none
  418a34:	mov	w8, #0x8001                	// #32769
  418a38:	cmp	w0, w8
  418a3c:	b.ne	418a4c <ascii_strlower_n@plt+0x14644>  // b.any
  418a40:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a44:	add	x0, x0, #0x88b
  418a48:	ret
  418a4c:	mov	x0, xzr
  418a50:	ret
  418a54:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a58:	add	x0, x0, #0x71f
  418a5c:	ret
  418a60:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a64:	add	x0, x0, #0x722
  418a68:	ret
  418a6c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a70:	add	x0, x0, #0x725
  418a74:	ret
  418a78:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a7c:	add	x0, x0, #0x72b
  418a80:	ret
  418a84:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a88:	add	x0, x0, #0x72f
  418a8c:	ret
  418a90:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418a94:	add	x0, x0, #0x732
  418a98:	ret
  418a9c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418aa0:	add	x0, x0, #0x735
  418aa4:	ret
  418aa8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418aac:	add	x0, x0, #0x738
  418ab0:	ret
  418ab4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ab8:	add	x0, x0, #0x73d
  418abc:	ret
  418ac0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ac4:	add	x0, x0, #0x741
  418ac8:	ret
  418acc:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ad0:	add	x0, x0, #0x745
  418ad4:	ret
  418ad8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418adc:	add	x0, x0, #0x74b
  418ae0:	ret
  418ae4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ae8:	add	x0, x0, #0x751
  418aec:	ret
  418af0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418af4:	add	x0, x0, #0x754
  418af8:	ret
  418afc:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b00:	add	x0, x0, #0x758
  418b04:	ret
  418b08:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b0c:	add	x0, x0, #0x75b
  418b10:	ret
  418b14:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b18:	add	x0, x0, #0x761
  418b1c:	ret
  418b20:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b24:	add	x0, x0, #0x765
  418b28:	ret
  418b2c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b30:	add	x0, x0, #0x76a
  418b34:	ret
  418b38:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b3c:	add	x0, x0, #0x76d
  418b40:	ret
  418b44:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b48:	add	x0, x0, #0x772
  418b4c:	ret
  418b50:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b54:	add	x0, x0, #0x77b
  418b58:	ret
  418b5c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b60:	add	x0, x0, #0x77f
  418b64:	ret
  418b68:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b6c:	add	x0, x0, #0x783
  418b70:	ret
  418b74:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b78:	add	x0, x0, #0x786
  418b7c:	ret
  418b80:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b84:	add	x0, x0, #0x78b
  418b88:	ret
  418b8c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b90:	add	x0, x0, #0x790
  418b94:	ret
  418b98:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418b9c:	add	x0, x0, #0x794
  418ba0:	ret
  418ba4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ba8:	add	x0, x0, #0x798
  418bac:	ret
  418bb0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bb4:	add	x0, x0, #0x79c
  418bb8:	ret
  418bbc:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bc0:	add	x0, x0, #0x7a3
  418bc4:	ret
  418bc8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bcc:	add	x0, x0, #0x7a7
  418bd0:	ret
  418bd4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bd8:	add	x0, x0, #0x7ac
  418bdc:	ret
  418be0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418be4:	add	x0, x0, #0x7b2
  418be8:	ret
  418bec:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bf0:	add	x0, x0, #0x7b5
  418bf4:	ret
  418bf8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418bfc:	add	x0, x0, #0x7ba
  418c00:	ret
  418c04:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c08:	add	x0, x0, #0x7bd
  418c0c:	ret
  418c10:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c14:	add	x0, x0, #0x7c3
  418c18:	ret
  418c1c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c20:	add	x0, x0, #0x7c8
  418c24:	ret
  418c28:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c2c:	add	x0, x0, #0x7cc
  418c30:	ret
  418c34:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c38:	add	x0, x0, #0x7d0
  418c3c:	ret
  418c40:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c44:	add	x0, x0, #0x7d3
  418c48:	ret
  418c4c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c50:	add	x0, x0, #0x7d9
  418c54:	ret
  418c58:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c5c:	add	x0, x0, #0x7e2
  418c60:	ret
  418c64:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c68:	add	x0, x0, #0x7e8
  418c6c:	ret
  418c70:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c74:	add	x0, x0, #0x7ed
  418c78:	ret
  418c7c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c80:	add	x0, x0, #0x7f4
  418c84:	ret
  418c88:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c8c:	add	x0, x0, #0x7fa
  418c90:	ret
  418c94:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418c98:	add	x0, x0, #0x800
  418c9c:	ret
  418ca0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ca4:	add	x0, x0, #0x80b
  418ca8:	ret
  418cac:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cb0:	add	x0, x0, #0x810
  418cb4:	ret
  418cb8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cbc:	add	x0, x0, #0x814
  418cc0:	ret
  418cc4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cc8:	add	x0, x0, #0x81a
  418ccc:	ret
  418cd0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cd4:	add	x0, x0, #0x81f
  418cd8:	ret
  418cdc:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418ce0:	add	x0, x0, #0x826
  418ce4:	ret
  418ce8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cec:	add	x0, x0, #0x82a
  418cf0:	ret
  418cf4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418cf8:	add	x0, x0, #0x832
  418cfc:	ret
  418d00:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d04:	add	x0, x0, #0x83d
  418d08:	ret
  418d0c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d10:	add	x0, x0, #0x841
  418d14:	ret
  418d18:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d1c:	add	x0, x0, #0x845
  418d20:	ret
  418d24:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d28:	add	x0, x0, #0x849
  418d2c:	ret
  418d30:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d34:	add	x0, x0, #0x84d
  418d38:	ret
  418d3c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d40:	add	x0, x0, #0x850
  418d44:	ret
  418d48:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d4c:	add	x0, x0, #0x856
  418d50:	ret
  418d54:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d58:	add	x0, x0, #0x85c
  418d5c:	ret
  418d60:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d64:	add	x0, x0, #0x861
  418d68:	ret
  418d6c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d70:	add	x0, x0, #0x866
  418d74:	ret
  418d78:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d7c:	add	x0, x0, #0x86b
  418d80:	ret
  418d84:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d88:	add	x0, x0, #0x870
  418d8c:	ret
  418d90:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418d94:	add	x0, x0, #0x876
  418d98:	ret
  418d9c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418da0:	add	x0, x0, #0x87c
  418da4:	ret
  418da8:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418dac:	add	x0, x0, #0x880
  418db0:	ret
  418db4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418db8:	add	x0, x0, #0x884
  418dbc:	ret
  418dc0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418dc4:	add	x0, x0, #0x888
  418dc8:	ret
  418dcc:	stp	x29, x30, [sp, #-32]!
  418dd0:	str	x19, [sp, #16]
  418dd4:	mov	x29, sp
  418dd8:	cbz	x0, 418f00 <ascii_strlower_n@plt+0x14af8>
  418ddc:	mov	x19, x0
  418de0:	bl	403d28 <strlen@plt>
  418de4:	sub	x8, x0, #0x1
  418de8:	cmp	x8, #0x9
  418dec:	b.hi	418eb4 <ascii_strlower_n@plt+0x14aac>  // b.pmore
  418df0:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418df4:	cmp	w0, #0x1
  418df8:	add	x9, x9, #0xe89
  418dfc:	b.ne	418e08 <ascii_strlower_n@plt+0x14a00>  // b.any
  418e00:	mov	w10, #0x1                   	// #1
  418e04:	b	418e14 <ascii_strlower_n@plt+0x14a0c>
  418e08:	ldrb	w10, [x19, #1]
  418e0c:	ldrb	w10, [x9, x10]
  418e10:	add	w10, w10, w0
  418e14:	ldrb	w11, [x19]
  418e18:	ldrb	w8, [x19, x8]
  418e1c:	ldrb	w12, [x9, x11]
  418e20:	ldrb	w8, [x9, x8]
  418e24:	add	x9, x12, w10, uxtw
  418e28:	add	x8, x9, x8
  418e2c:	cmp	w8, #0xb1
  418e30:	b.hi	418eb4 <ascii_strlower_n@plt+0x14aac>  // b.pmore
  418e34:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  418e38:	lsl	x10, x8, #4
  418e3c:	add	x9, x9, #0xc18
  418e40:	ldr	x12, [x9, x10]
  418e44:	cbz	x12, 418eb4 <ascii_strlower_n@plt+0x14aac>
  418e48:	ldrb	w13, [x12]
  418e4c:	eor	w10, w13, w11
  418e50:	tst	w10, #0xffffffdf
  418e54:	b.ne	418eb4 <ascii_strlower_n@plt+0x14aac>  // b.any
  418e58:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418e5c:	add	x10, x10, #0xf89
  418e60:	ldrb	w14, [x10, x11]
  418e64:	ldrb	w13, [x10, x13]
  418e68:	cmp	w14, w13
  418e6c:	cset	w13, eq  // eq = none
  418e70:	cbz	w11, 418ea4 <ascii_strlower_n@plt+0x14a9c>
  418e74:	b.ne	418ea4 <ascii_strlower_n@plt+0x14a9c>  // b.any
  418e78:	add	x11, x12, #0x1
  418e7c:	add	x12, x19, #0x1
  418e80:	ldrb	w16, [x12], #1
  418e84:	ldrb	w13, [x11], #1
  418e88:	ldrb	w14, [x10, x16]
  418e8c:	ldrb	w15, [x10, x13]
  418e90:	cmp	w14, w15
  418e94:	cset	w13, eq  // eq = none
  418e98:	cbz	x16, 418ea4 <ascii_strlower_n@plt+0x14a9c>
  418e9c:	cmp	w14, w15
  418ea0:	b.eq	418e80 <ascii_strlower_n@plt+0x14a78>  // b.none
  418ea4:	cbz	w13, 418eb4 <ascii_strlower_n@plt+0x14aac>
  418ea8:	add	x8, x9, x8, lsl #4
  418eac:	ldr	w0, [x8, #8]
  418eb0:	b	418ed0 <ascii_strlower_n@plt+0x14ac8>
  418eb4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  418eb8:	add	x1, x1, #0x55d
  418ebc:	mov	w2, #0x4                   	// #4
  418ec0:	mov	x0, x19
  418ec4:	bl	403fb8 <strncasecmp@plt>
  418ec8:	cbz	w0, 418edc <ascii_strlower_n@plt+0x14ad4>
  418ecc:	mov	w0, #0xffffffff            	// #-1
  418ed0:	ldr	x19, [sp, #16]
  418ed4:	ldp	x29, x30, [sp], #32
  418ed8:	ret
  418edc:	add	x0, x19, #0x4
  418ee0:	add	x2, x29, #0x1c
  418ee4:	mov	w1, wzr
  418ee8:	bl	4043a8 <safe_atou_full@plt>
  418eec:	tbnz	w0, #31, 418ecc <ascii_strlower_n@plt+0x14ac4>
  418ef0:	ldr	w0, [x29, #28]
  418ef4:	cmp	w0, #0x10, lsl #12
  418ef8:	b.cc	418ed0 <ascii_strlower_n@plt+0x14ac8>  // b.lo, b.ul, b.last
  418efc:	b	418ecc <ascii_strlower_n@plt+0x14ac4>
  418f00:	adrp	x1, 419000 <ascii_strlower_n@plt+0x14bf8>
  418f04:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418f08:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  418f0c:	add	x1, x1, #0xfaa
  418f10:	add	x2, x2, #0x892
  418f14:	add	x4, x4, #0x8a9
  418f18:	mov	w3, #0x18                  	// #24
  418f1c:	bl	403a98 <log_assert_failed_realm@plt>
  418f20:	and	w8, w0, #0xffff
  418f24:	sub	w9, w8, #0xf9
  418f28:	cmp	w9, #0x6
  418f2c:	b.hi	418f4c <ascii_strlower_n@plt+0x14b44>  // b.pmore
  418f30:	mov	w10, #0x1                   	// #1
  418f34:	lsl	w9, w10, w9
  418f38:	mov	w10, #0x4f                  	// #79
  418f3c:	tst	w9, w10
  418f40:	b.eq	418f4c <ascii_strlower_n@plt+0x14b44>  // b.none
  418f44:	mov	w0, #0x1                   	// #1
  418f48:	ret
  418f4c:	cmp	w8, #0x29
  418f50:	b.eq	418f44 <ascii_strlower_n@plt+0x14b3c>  // b.none
  418f54:	cbz	w8, 418f44 <ascii_strlower_n@plt+0x14b3c>
  418f58:	mov	w0, wzr
  418f5c:	ret
  418f60:	and	w8, w0, #0xffff
  418f64:	cmp	w8, #0xff
  418f68:	cset	w0, eq  // eq = none
  418f6c:	ret
  418f70:	and	w8, w0, #0xffff
  418f74:	cmp	w8, #0x2e
  418f78:	b.hi	418f98 <ascii_strlower_n@plt+0x14b90>  // b.pmore
  418f7c:	and	x9, x0, #0xffff
  418f80:	mov	w10, #0x1                   	// #1
  418f84:	lsl	x9, x10, x9
  418f88:	mov	x10, #0x1                   	// #1
  418f8c:	movk	x10, #0x4200, lsl #32
  418f90:	tst	x9, x10
  418f94:	b.ne	418fa4 <ascii_strlower_n@plt+0x14b9c>  // b.any
  418f98:	sub	w8, w8, #0xf9
  418f9c:	cmp	w8, #0x2
  418fa0:	b.cs	418fac <ascii_strlower_n@plt+0x14ba4>  // b.hs, b.nlast
  418fa4:	mov	w0, wzr
  418fa8:	ret
  418fac:	mov	w0, #0x1                   	// #1
  418fb0:	ret
  418fb4:	and	w8, w0, #0xffff
  418fb8:	sub	w8, w8, #0xfb
  418fbc:	cmp	w8, #0x2
  418fc0:	cset	w0, cc  // cc = lo, ul, last
  418fc4:	ret
  418fc8:	sub	w8, w0, #0xfb
  418fcc:	and	w9, w8, #0xffff
  418fd0:	cmp	w9, #0x4
  418fd4:	b.hi	418fe8 <ascii_strlower_n@plt+0x14be0>  // b.pmore
  418fd8:	mov	w9, #0xc                   	// #12
  418fdc:	lsr	w8, w9, w8
  418fe0:	and	w0, w8, #0x1
  418fe4:	ret
  418fe8:	mov	w0, #0x1                   	// #1
  418fec:	ret
  418ff0:	and	w8, w0, #0xffff
  418ff4:	cmp	w8, #0xff
  418ff8:	cset	w0, ne  // ne = any
  418ffc:	ret
  419000:	and	w9, w0, #0xffff
  419004:	mov	w8, w0
  419008:	cmp	w9, #0x32
  41900c:	mov	w0, wzr
  419010:	b.hi	419038 <ascii_strlower_n@plt+0x14c30>  // b.pmore
  419014:	and	x8, x8, #0xffff
  419018:	mov	w10, #0x1                   	// #1
  41901c:	lsl	x8, x10, x8
  419020:	mov	x10, #0x21                  	// #33
  419024:	movk	x10, #0x4300, lsl #16
  419028:	movk	x10, #0xc280, lsl #32
  41902c:	movk	x10, #0x4, lsl #48
  419030:	tst	x8, x10
  419034:	b.ne	419058 <ascii_strlower_n@plt+0x14c50>  // b.any
  419038:	sub	w8, w9, #0xf9
  41903c:	cmp	w8, #0x6
  419040:	b.hi	41905c <ascii_strlower_n@plt+0x14c54>  // b.pmore
  419044:	mov	w9, #0x1                   	// #1
  419048:	lsl	w8, w9, w8
  41904c:	mov	w9, #0x4f                  	// #79
  419050:	tst	w8, w9
  419054:	b.eq	41905c <ascii_strlower_n@plt+0x14c54>  // b.none
  419058:	ret
  41905c:	mov	w0, #0x1                   	// #1
  419060:	ret
  419064:	and	w9, w0, #0xffff
  419068:	mov	w8, w0
  41906c:	cmp	w9, #0x32
  419070:	mov	w0, wzr
  419074:	b.ls	4190a0 <ascii_strlower_n@plt+0x14c98>  // b.plast
  419078:	sub	w8, w9, #0xf9
  41907c:	cmp	w8, #0x6
  419080:	b.hi	419098 <ascii_strlower_n@plt+0x14c90>  // b.pmore
  419084:	mov	w9, #0x1                   	// #1
  419088:	lsl	w8, w9, w8
  41908c:	mov	w9, #0x4f                  	// #79
  419090:	tst	w8, w9
  419094:	b.ne	4190c0 <ascii_strlower_n@plt+0x14cb8>  // b.any
  419098:	mov	w0, #0x1                   	// #1
  41909c:	ret
  4190a0:	and	x8, x8, #0xffff
  4190a4:	mov	w10, #0x1                   	// #1
  4190a8:	lsl	x8, x10, x8
  4190ac:	mov	x10, #0x41                  	// #65
  4190b0:	movk	x10, #0x280, lsl #32
  4190b4:	movk	x10, #0x4, lsl #48
  4190b8:	tst	x8, x10
  4190bc:	b.eq	419078 <ascii_strlower_n@plt+0x14c70>  // b.none
  4190c0:	ret
  4190c4:	sub	w8, w0, #0x2
  4190c8:	and	w9, w8, #0xffff
  4190cc:	cmp	w9, #0x31
  4190d0:	b.hi	4190ec <ascii_strlower_n@plt+0x14ce4>  // b.pmore
  4190d4:	mov	x9, #0x11                  	// #17
  4190d8:	movk	x9, #0x4000, lsl #32
  4190dc:	movk	x9, #0x2, lsl #48
  4190e0:	lsr	x8, x9, x8
  4190e4:	and	w0, w8, #0x1
  4190e8:	ret
  4190ec:	mov	w0, wzr
  4190f0:	ret
  4190f4:	sub	w8, w0, #0x2b
  4190f8:	and	w9, w8, #0xffff
  4190fc:	cmp	w9, #0x8
  419100:	b.hi	419114 <ascii_strlower_n@plt+0x14d0c>  // b.pmore
  419104:	mov	w9, #0x1b9                 	// #441
  419108:	lsr	w8, w9, w8
  41910c:	and	w0, w8, #0x1
  419110:	ret
  419114:	mov	w0, wzr
  419118:	ret
  41911c:	and	w8, w0, #0xffff
  419120:	cmp	w8, #0x26
  419124:	b.hi	419150 <ascii_strlower_n@plt+0x14d48>  // b.pmore
  419128:	and	x9, x0, #0xffff
  41912c:	mov	w10, #0x1                   	// #1
  419130:	lsl	x9, x10, x9
  419134:	mov	x10, #0x4f98                	// #20376
  419138:	movk	x10, #0x4000, lsl #16
  41913c:	movk	x10, #0x40, lsl #32
  419140:	tst	x9, x10
  419144:	b.eq	419150 <ascii_strlower_n@plt+0x14d48>  // b.none
  419148:	mov	w0, #0x1                   	// #1
  41914c:	ret
  419150:	sub	w8, w8, #0xfd
  419154:	cmp	w8, #0x2
  419158:	b.cc	419148 <ascii_strlower_n@plt+0x14d40>  // b.lo, b.ul, b.last
  41915c:	mov	w0, wzr
  419160:	ret
  419164:	and	w8, w0, #0xffff
  419168:	cmp	w8, #0x3d
  41916c:	b.hi	419194 <ascii_strlower_n@plt+0x14d8c>  // b.pmore
  419170:	and	x9, x0, #0xffff
  419174:	mov	w10, #0x1                   	// #1
  419178:	lsl	x9, x10, x9
  41917c:	mov	x10, #0x382000000000        	// #61710090108928
  419180:	movk	x10, #0x3011, lsl #48
  419184:	tst	x9, x10
  419188:	b.eq	419194 <ascii_strlower_n@plt+0x14d8c>  // b.none
  41918c:	mov	w0, #0x1                   	// #1
  419190:	ret
  419194:	cmp	w8, #0x101
  419198:	b.eq	41918c <ascii_strlower_n@plt+0x14d84>  // b.none
  41919c:	mov	w0, wzr
  4191a0:	ret
  4191a4:	and	w8, w0, #0xffff
  4191a8:	cmp	w8, #0x1
  4191ac:	b.eq	4191c8 <ascii_strlower_n@plt+0x14dc0>  // b.none
  4191b0:	cmp	w8, #0xff
  4191b4:	b.eq	4191d0 <ascii_strlower_n@plt+0x14dc8>  // b.none
  4191b8:	cmp	w8, #0x1c
  4191bc:	b.ne	4191d8 <ascii_strlower_n@plt+0x14dd0>  // b.any
  4191c0:	mov	w0, #0xa                   	// #10
  4191c4:	ret
  4191c8:	mov	w0, #0x2                   	// #2
  4191cc:	ret
  4191d0:	mov	w0, wzr
  4191d4:	ret
  4191d8:	mov	w0, #0xffffffea            	// #-22
  4191dc:	ret
  4191e0:	and	w8, w0, #0xffff
  4191e4:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4191e8:	add	x9, x9, #0x87c
  4191ec:	adrp	x10, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4191f0:	cmp	w8, #0xff
  4191f4:	add	x10, x10, #0x8d0
  4191f8:	csel	x9, x9, xzr, eq  // eq = none
  4191fc:	cmp	w8, #0x1
  419200:	csel	x0, x10, x9, eq  // eq = none
  419204:	ret
  419208:	stp	x29, x30, [sp, #-32]!
  41920c:	str	x19, [sp, #16]
  419210:	mov	x29, sp
  419214:	cbz	x0, 41924c <ascii_strlower_n@plt+0x14e44>
  419218:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41921c:	add	x1, x1, #0x8d0
  419220:	mov	x19, x0
  419224:	bl	4042c8 <strcasecmp@plt>
  419228:	cbz	w0, 419254 <ascii_strlower_n@plt+0x14e4c>
  41922c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419230:	add	x1, x1, #0x87c
  419234:	mov	x0, x19
  419238:	bl	4042c8 <strcasecmp@plt>
  41923c:	cmp	w0, #0x0
  419240:	mov	w8, #0xff                  	// #255
  419244:	csinv	w0, w8, wzr, eq  // eq = none
  419248:	b	419258 <ascii_strlower_n@plt+0x14e50>
  41924c:	mov	w0, #0xffffffff            	// #-1
  419250:	b	419258 <ascii_strlower_n@plt+0x14e50>
  419254:	mov	w0, #0x1                   	// #1
  419258:	ldr	x19, [sp, #16]
  41925c:	ldp	x29, x30, [sp], #32
  419260:	ret
  419264:	add	w8, w0, #0x1
  419268:	and	w9, w8, #0xff
  41926c:	cmp	w9, #0x5
  419270:	b.cs	419288 <ascii_strlower_n@plt+0x14e80>  // b.hs, b.nlast
  419274:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  419278:	sxtb	x8, w8
  41927c:	add	x9, x9, #0x738
  419280:	ldr	x0, [x9, x8, lsl #3]
  419284:	ret
  419288:	and	w8, w0, #0xff
  41928c:	sub	w8, w8, #0x4
  419290:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419294:	add	x9, x9, #0x931
  419298:	cmp	w8, #0xfb
  41929c:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  4192a0:	ret
  4192a4:	add	w8, w0, #0x1
  4192a8:	and	w9, w8, #0xff
  4192ac:	cmp	w9, #0x3
  4192b0:	b.cs	4192c8 <ascii_strlower_n@plt+0x14ec0>  // b.hs, b.nlast
  4192b4:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4192b8:	sxtb	x8, w8
  4192bc:	add	x9, x9, #0x760
  4192c0:	ldr	x0, [x9, x8, lsl #3]
  4192c4:	ret
  4192c8:	and	w8, w0, #0xff
  4192cc:	sub	w8, w8, #0x2
  4192d0:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4192d4:	add	x9, x9, #0x931
  4192d8:	cmp	w8, #0xfd
  4192dc:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  4192e0:	ret
  4192e4:	add	w8, w0, #0x1
  4192e8:	and	w9, w8, #0xff
  4192ec:	cmp	w9, #0x4
  4192f0:	b.cs	419308 <ascii_strlower_n@plt+0x14f00>  // b.hs, b.nlast
  4192f4:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4192f8:	sxtb	x8, w8
  4192fc:	add	x9, x9, #0x778
  419300:	ldr	x0, [x9, x8, lsl #3]
  419304:	ret
  419308:	and	w8, w0, #0xff
  41930c:	sub	w8, w8, #0x3
  419310:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419314:	add	x9, x9, #0x931
  419318:	cmp	w8, #0xfc
  41931c:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  419320:	ret
  419324:	stp	x29, x30, [sp, #-16]!
  419328:	mov	x29, sp
  41932c:	cbz	x0, 4193dc <ascii_strlower_n@plt+0x14fd4>
  419330:	ldr	x8, [x0, #8]
  419334:	ldrh	w8, [x8, #6]
  419338:	cmp	w8, #0x30
  41933c:	b.ne	4193fc <ascii_strlower_n@plt+0x14ff4>  // b.any
  419340:	ldrh	w8, [x0, #80]
  419344:	ldrh	w10, [x0, #82]
  419348:	ldr	x9, [x0, #96]
  41934c:	tst	w1, #0x1
  419350:	and	w11, w8, #0xffffff7f
  419354:	lsl	w10, w10, #16
  419358:	csel	w8, w11, w8, ne  // ne = any
  41935c:	rev	w10, w10
  419360:	add	w8, w10, w8
  419364:	cbz	x9, 4193d0 <ascii_strlower_n@plt+0x14fc8>
  419368:	ldr	x10, [x0, #88]
  41936c:	cmp	x9, #0x1
  419370:	b.ne	41937c <ascii_strlower_n@plt+0x14f74>  // b.any
  419374:	mov	x11, xzr
  419378:	b	4193b0 <ascii_strlower_n@plt+0x14fa8>
  41937c:	and	x11, x9, #0xfffffffffffffffe
  419380:	mov	w12, wzr
  419384:	add	x13, x10, #0x1
  419388:	mov	x14, x11
  41938c:	ldurb	w15, [x13, #-1]
  419390:	ldrb	w16, [x13], #2
  419394:	subs	x14, x14, #0x2
  419398:	add	w8, w8, w15, lsl #8
  41939c:	add	w12, w12, w16
  4193a0:	b.ne	41938c <ascii_strlower_n@plt+0x14f84>  // b.any
  4193a4:	cmp	x9, x11
  4193a8:	add	w8, w12, w8
  4193ac:	b.eq	4193d0 <ascii_strlower_n@plt+0x14fc8>  // b.none
  4193b0:	ldrb	w12, [x10, x11]
  4193b4:	tst	x11, #0x1
  4193b8:	add	x11, x11, #0x1
  4193bc:	lsl	w13, w12, #8
  4193c0:	csel	w12, w13, w12, eq  // eq = none
  4193c4:	cmp	x11, x9
  4193c8:	add	w8, w12, w8
  4193cc:	b.cc	4193b0 <ascii_strlower_n@plt+0x14fa8>  // b.lo, b.ul, b.last
  4193d0:	add	w0, w8, w8, lsr #16
  4193d4:	ldp	x29, x30, [sp], #16
  4193d8:	ret
  4193dc:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4193e0:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4193e4:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4193e8:	add	x1, x1, #0x983
  4193ec:	add	x2, x2, #0x98d
  4193f0:	add	x4, x4, #0x9af
  4193f4:	mov	w3, #0x2a                  	// #42
  4193f8:	bl	403a98 <log_assert_failed_realm@plt>
  4193fc:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419400:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419404:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419408:	add	x1, x1, #0x9e2
  41940c:	add	x2, x2, #0x98d
  419410:	add	x4, x4, #0x9af
  419414:	mov	w3, #0x2b                  	// #43
  419418:	mov	w0, wzr
  41941c:	bl	403a98 <log_assert_failed_realm@plt>
  419420:	sub	sp, sp, #0x50
  419424:	cmp	x2, #0x2
  419428:	stp	x29, x30, [sp, #16]
  41942c:	stp	x24, x23, [sp, #32]
  419430:	stp	x22, x21, [sp, #48]
  419434:	stp	x20, x19, [sp, #64]
  419438:	add	x29, sp, #0x10
  41943c:	str	x0, [sp, #8]
  419440:	b.cs	41944c <ascii_strlower_n@plt+0x15044>  // b.hs, b.nlast
  419444:	mov	w21, #0xffffff97            	// #-105
  419448:	b	419504 <ascii_strlower_n@plt+0x150fc>
  41944c:	add	x0, sp, #0x8
  419450:	mov	w3, wzr
  419454:	mov	x20, x2
  419458:	mov	x19, x1
  41945c:	bl	404108 <dns_label_unescape@plt>
  419460:	mov	w21, w0
  419464:	tbnz	w0, #31, 419504 <ascii_strlower_n@plt+0x150fc>
  419468:	mov	x23, xzr
  41946c:	mov	w24, #0x2e                  	// #46
  419470:	cbz	w21, 4194dc <ascii_strlower_n@plt+0x150d4>
  419474:	mov	w22, w21
  419478:	add	x8, x22, #0x2
  41947c:	cmp	x20, x8
  419480:	b.cc	419444 <ascii_strlower_n@plt+0x1503c>  // b.lo, b.ul, b.last
  419484:	mov	w1, #0x2e                  	// #46
  419488:	mov	x0, x19
  41948c:	mov	x2, x22
  419490:	bl	404148 <memchr@plt>
  419494:	cbnz	x0, 4194e8 <ascii_strlower_n@plt+0x150e0>
  419498:	mov	x0, x19
  41949c:	mov	x1, x22
  4194a0:	bl	404408 <ascii_strlower_n@plt>
  4194a4:	add	w8, w21, #0x1
  4194a8:	sxtw	x8, w8
  4194ac:	strb	w24, [x19, x22]
  4194b0:	add	x19, x19, x8
  4194b4:	sub	x20, x20, x8
  4194b8:	add	x0, sp, #0x8
  4194bc:	mov	x1, x19
  4194c0:	mov	x2, x20
  4194c4:	mov	w3, wzr
  4194c8:	add	x23, x23, x8
  4194cc:	bl	404108 <dns_label_unescape@plt>
  4194d0:	mov	w21, w0
  4194d4:	tbz	w0, #31, 419470 <ascii_strlower_n@plt+0x15068>
  4194d8:	b	419504 <ascii_strlower_n@plt+0x150fc>
  4194dc:	cbz	x23, 4194f0 <ascii_strlower_n@plt+0x150e8>
  4194e0:	mov	w21, w23
  4194e4:	b	419504 <ascii_strlower_n@plt+0x150fc>
  4194e8:	mov	w21, #0xffffffea            	// #-22
  4194ec:	b	419504 <ascii_strlower_n@plt+0x150fc>
  4194f0:	cmp	x20, #0x2
  4194f4:	b.ls	419520 <ascii_strlower_n@plt+0x15118>  // b.plast
  4194f8:	mov	w8, #0x2e                  	// #46
  4194fc:	strh	w8, [x19]
  419500:	mov	w21, #0x1                   	// #1
  419504:	mov	w0, w21
  419508:	ldp	x20, x19, [sp, #64]
  41950c:	ldp	x22, x21, [sp, #48]
  419510:	ldp	x24, x23, [sp, #32]
  419514:	ldp	x29, x30, [sp, #16]
  419518:	add	sp, sp, #0x50
  41951c:	ret
  419520:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419524:	adrp	x2, 41f000 <ascii_strlower_n@plt+0x1abf8>
  419528:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  41952c:	add	x1, x1, #0xa07
  419530:	add	x2, x2, #0x98d
  419534:	add	x4, x4, #0xa16
  419538:	mov	w3, #0x65                  	// #101
  41953c:	mov	w0, wzr
  419540:	bl	403a98 <log_assert_failed_realm@plt>
  419544:	mov	w0, #0xffffffa1            	// #-95
  419548:	ret
  41954c:	mov	w0, #0xffffffa1            	// #-95
  419550:	ret
  419554:	mov	w0, #0xffffffa1            	// #-95
  419558:	ret
  41955c:	mov	w0, #0xffffffa1            	// #-95
  419560:	ret
  419564:	mov	w0, #0xffffffa1            	// #-95
  419568:	ret
  41956c:	mov	w0, #0xffffffa1            	// #-95
  419570:	ret
  419574:	mov	w0, #0xffffffa1            	// #-95
  419578:	ret
  41957c:	mov	w0, #0xffffffa1            	// #-95
  419580:	ret
  419584:	mov	w0, #0xffffffa1            	// #-95
  419588:	ret
  41958c:	mov	w0, #0xffffffa1            	// #-95
  419590:	ret
  419594:	cmp	w0, #0xa
  419598:	b.ls	4195a4 <ascii_strlower_n@plt+0x1519c>  // b.plast
  41959c:	mov	x0, xzr
  4195a0:	ret
  4195a4:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4195a8:	add	x8, x8, #0x798
  4195ac:	ldr	x0, [x8, w0, uxtw #3]
  4195b0:	ret
  4195b4:	stp	x29, x30, [sp, #-16]!
  4195b8:	mov	x2, x0
  4195bc:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4195c0:	add	x0, x0, #0x798
  4195c4:	mov	w1, #0xb                   	// #11
  4195c8:	mov	x29, sp
  4195cc:	bl	404208 <string_table_lookup@plt>
  4195d0:	ldp	x29, x30, [sp], #16
  4195d4:	ret
  4195d8:	cmp	w0, #0x3
  4195dc:	b.ls	4195e8 <ascii_strlower_n@plt+0x151e0>  // b.plast
  4195e0:	mov	x0, xzr
  4195e4:	ret
  4195e8:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4195ec:	add	x8, x8, #0x7f0
  4195f0:	ldr	x0, [x8, w0, uxtw #3]
  4195f4:	ret
  4195f8:	stp	x29, x30, [sp, #-16]!
  4195fc:	mov	x2, x0
  419600:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  419604:	add	x0, x0, #0x7f0
  419608:	mov	w1, #0x4                   	// #4
  41960c:	mov	x29, sp
  419610:	bl	404208 <string_table_lookup@plt>
  419614:	ldp	x29, x30, [sp], #16
  419618:	ret
  41961c:	udf	#0
  419620:	stp	x29, x30, [sp, #-64]!
  419624:	mov	x29, sp
  419628:	stp	x19, x20, [sp, #16]
  41962c:	adrp	x20, 43e000 <ascii_strlower_n@plt+0x39bf8>
  419630:	add	x20, x20, #0x2c0
  419634:	stp	x21, x22, [sp, #32]
  419638:	adrp	x21, 43e000 <ascii_strlower_n@plt+0x39bf8>
  41963c:	add	x21, x21, #0x2b8
  419640:	sub	x20, x20, x21
  419644:	mov	w22, w0
  419648:	stp	x23, x24, [sp, #48]
  41964c:	mov	x23, x1
  419650:	mov	x24, x2
  419654:	bl	403920 <__libc_start_main@plt-0x38>
  419658:	cmp	xzr, x20, asr #3
  41965c:	b.eq	419688 <ascii_strlower_n@plt+0x15280>  // b.none
  419660:	asr	x20, x20, #3
  419664:	mov	x19, #0x0                   	// #0
  419668:	ldr	x3, [x21, x19, lsl #3]
  41966c:	mov	x2, x24
  419670:	add	x19, x19, #0x1
  419674:	mov	x1, x23
  419678:	mov	w0, w22
  41967c:	blr	x3
  419680:	cmp	x20, x19
  419684:	b.ne	419668 <ascii_strlower_n@plt+0x15260>  // b.any
  419688:	ldp	x19, x20, [sp, #16]
  41968c:	ldp	x21, x22, [sp, #32]
  419690:	ldp	x23, x24, [sp, #48]
  419694:	ldp	x29, x30, [sp], #64
  419698:	ret
  41969c:	nop
  4196a0:	ret

Disassembly of section .fini:

00000000004196a4 <.fini>:
  4196a4:	stp	x29, x30, [sp, #-16]!
  4196a8:	mov	x29, sp
  4196ac:	ldp	x29, x30, [sp], #16
  4196b0:	ret
