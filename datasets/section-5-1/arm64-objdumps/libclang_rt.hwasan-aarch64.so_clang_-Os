
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.hwasan-aarch64.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006978 <.init>:
    6978:	stp	x29, x30, [sp, #-16]!
    697c:	mov	x29, sp
    6980:	bl	6e88 <__sanitizer_print_memory_profile@plt+0x28>
    6984:	ldp	x29, x30, [sp], #16
    6988:	ret

Disassembly of section .plt:

0000000000006990 <_Unwind_Backtrace@plt-0x20>:
    6990:	stp	x16, x30, [sp, #-16]!
    6994:	adrp	x16, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    6998:	ldr	x17, [x16, #4088]
    699c:	add	x16, x16, #0xff8
    69a0:	br	x17
    69a4:	nop
    69a8:	nop
    69ac:	nop

00000000000069b0 <_Unwind_Backtrace@plt>:
    69b0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16]
    69b8:	add	x16, x16, #0x0
    69bc:	br	x17

00000000000069c0 <__sanitizer_report_error_summary@plt>:
    69c0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #8]
    69c8:	add	x16, x16, #0x8
    69cc:	br	x17

00000000000069d0 <memcpy@plt>:
    69d0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #16]
    69d8:	add	x16, x16, #0x10
    69dc:	br	x17

00000000000069e0 <__sanitizer_on_print@plt>:
    69e0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #24]
    69e8:	add	x16, x16, #0x18
    69ec:	br	x17

00000000000069f0 <__hwasan_handle_vfork@plt>:
    69f0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #32]
    69f8:	add	x16, x16, #0x20
    69fc:	br	x17

0000000000006a00 <sched_getaffinity@plt>:
    6a00:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #40]
    6a08:	add	x16, x16, #0x28
    6a0c:	br	x17

0000000000006a10 <__hwasan_default_options@plt>:
    6a10:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #48]
    6a18:	add	x16, x16, #0x30
    6a1c:	br	x17

0000000000006a20 <execv@plt>:
    6a20:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #56]
    6a28:	add	x16, x16, #0x38
    6a2c:	br	x17

0000000000006a30 <pipe@plt>:
    6a30:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #64]
    6a38:	add	x16, x16, #0x40
    6a3c:	br	x17

0000000000006a40 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6a40:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #72]
    6a48:	add	x16, x16, #0x48
    6a4c:	br	x17

0000000000006a50 <__sanitizer_malloc_hook@plt>:
    6a50:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #80]
    6a58:	add	x16, x16, #0x50
    6a5c:	br	x17

0000000000006a60 <dlvsym@plt>:
    6a60:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #88]
    6a68:	add	x16, x16, #0x58
    6a6c:	br	x17

0000000000006a70 <pthread_getattr_np@plt>:
    6a70:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #96]
    6a78:	add	x16, x16, #0x60
    6a7c:	br	x17

0000000000006a80 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6a80:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #104]
    6a88:	add	x16, x16, #0x68
    6a8c:	br	x17

0000000000006a90 <__sanitizer_symbolize_demangle@plt>:
    6a90:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #112]
    6a98:	add	x16, x16, #0x70
    6a9c:	br	x17

0000000000006aa0 <sigprocmask@plt>:
    6aa0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #120]
    6aa8:	add	x16, x16, #0x78
    6aac:	br	x17

0000000000006ab0 <pthread_attr_init@plt>:
    6ab0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #128]
    6ab8:	add	x16, x16, #0x80
    6abc:	br	x17

0000000000006ac0 <real_pthread_attr_getstack@plt>:
    6ac0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #136]
    6ac8:	add	x16, x16, #0x88
    6acc:	br	x17

0000000000006ad0 <sleep@plt>:
    6ad0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #144]
    6ad8:	add	x16, x16, #0x90
    6adc:	br	x17

0000000000006ae0 <dlsym@plt>:
    6ae0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #152]
    6ae8:	add	x16, x16, #0x98
    6aec:	br	x17

0000000000006af0 <memset@plt>:
    6af0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #160]
    6af8:	add	x16, x16, #0xa0
    6afc:	br	x17

0000000000006b00 <__sanitizer_symbolize_data@plt>:
    6b00:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #168]
    6b08:	add	x16, x16, #0xa8
    6b0c:	br	x17

0000000000006b10 <isatty@plt>:
    6b10:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #176]
    6b18:	add	x16, x16, #0xb0
    6b1c:	br	x17

0000000000006b20 <dlerror@plt>:
    6b20:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #184]
    6b28:	add	x16, x16, #0xb8
    6b2c:	br	x17

0000000000006b30 <__cxa_finalize@plt>:
    6b30:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #192]
    6b38:	add	x16, x16, #0xc0
    6b3c:	br	x17

0000000000006b40 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6b40:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #200]
    6b48:	add	x16, x16, #0xc8
    6b4c:	br	x17

0000000000006b50 <getrusage@plt>:
    6b50:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #208]
    6b58:	add	x16, x16, #0xd0
    6b5c:	br	x17

0000000000006b60 <pthread_attr_destroy@plt>:
    6b60:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #216]
    6b68:	add	x16, x16, #0xd8
    6b6c:	br	x17

0000000000006b70 <real_clock_gettime@plt>:
    6b70:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #224]
    6b78:	add	x16, x16, #0xe0
    6b7c:	br	x17

0000000000006b80 <__cxa_demangle@plt>:
    6b80:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #232]
    6b88:	add	x16, x16, #0xe8
    6b8c:	br	x17

0000000000006b90 <__sanitizer_symbolize_code@plt>:
    6b90:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #240]
    6b98:	add	x16, x16, #0xf0
    6b9c:	br	x17

0000000000006ba0 <dl_iterate_phdr@plt>:
    6ba0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #248]
    6ba8:	add	x16, x16, #0xf8
    6bac:	br	x17

0000000000006bb0 <__sanitizer_dump_coverage@plt>:
    6bb0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #256]
    6bb8:	add	x16, x16, #0x100
    6bbc:	br	x17

0000000000006bc0 <__interceptor_sigsetjmp@plt>:
    6bc0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #264]
    6bc8:	add	x16, x16, #0x108
    6bcc:	br	x17

0000000000006bd0 <__sanitizer_get_allocated_size@plt>:
    6bd0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #272]
    6bd8:	add	x16, x16, #0x110
    6bdc:	br	x17

0000000000006be0 <clock_gettime@plt>:
    6be0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #280]
    6be8:	add	x16, x16, #0x118
    6bec:	br	x17

0000000000006bf0 <__sanitizer_symbolize_flush@plt>:
    6bf0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #288]
    6bf8:	add	x16, x16, #0x120
    6bfc:	br	x17

0000000000006c00 <pthread_setspecific@plt>:
    6c00:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #296]
    6c08:	add	x16, x16, #0x128
    6c0c:	br	x17

0000000000006c10 <__hwasan_tag_mismatch4@plt>:
    6c10:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #304]
    6c18:	add	x16, x16, #0x130
    6c1c:	br	x17

0000000000006c20 <__ubsan_on_report@plt>:
    6c20:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #312]
    6c28:	add	x16, x16, #0x138
    6c2c:	br	x17

0000000000006c30 <__hwasan_thread_enter@plt>:
    6c30:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #320]
    6c38:	add	x16, x16, #0x140
    6c3c:	br	x17

0000000000006c40 <__dynamic_cast@plt>:
    6c40:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #328]
    6c48:	add	x16, x16, #0x148
    6c4c:	br	x17

0000000000006c50 <__cxa_atexit@plt>:
    6c50:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #336]
    6c58:	add	x16, x16, #0x150
    6c5c:	br	x17

0000000000006c60 <snprintf@plt>:
    6c60:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #344]
    6c68:	add	x16, x16, #0x158
    6c6c:	br	x17

0000000000006c70 <pthread_attr_getstack@plt>:
    6c70:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #352]
    6c78:	add	x16, x16, #0x160
    6c7c:	br	x17

0000000000006c80 <__hwasan_test_shadow@plt>:
    6c80:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #360]
    6c88:	add	x16, x16, #0x168
    6c8c:	br	x17

0000000000006c90 <pthread_attr_setstacksize@plt>:
    6c90:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #368]
    6c98:	add	x16, x16, #0x170
    6c9c:	br	x17

0000000000006ca0 <_Unwind_GetIP@plt>:
    6ca0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #376]
    6ca8:	add	x16, x16, #0x178
    6cac:	br	x17

0000000000006cb0 <madvise@plt>:
    6cb0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #384]
    6cb8:	add	x16, x16, #0x180
    6cbc:	br	x17

0000000000006cc0 <usleep@plt>:
    6cc0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #392]
    6cc8:	add	x16, x16, #0x188
    6ccc:	br	x17

0000000000006cd0 <memmove@plt>:
    6cd0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #400]
    6cd8:	add	x16, x16, #0x190
    6cdc:	br	x17

0000000000006ce0 <__sched_cpucount@plt>:
    6ce0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #408]
    6ce8:	add	x16, x16, #0x198
    6cec:	br	x17

0000000000006cf0 <__hwasan_init@plt>:
    6cf0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #416]
    6cf8:	add	x16, x16, #0x1a0
    6cfc:	br	x17

0000000000006d00 <__errno_location@plt>:
    6d00:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #424]
    6d08:	add	x16, x16, #0x1a8
    6d0c:	br	x17

0000000000006d10 <sched_yield@plt>:
    6d10:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #432]
    6d18:	add	x16, x16, #0x1b0
    6d1c:	br	x17

0000000000006d20 <syslog@plt>:
    6d20:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #440]
    6d28:	add	x16, x16, #0x1b8
    6d2c:	br	x17

0000000000006d30 <__extenddftf2@plt>:
    6d30:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #448]
    6d38:	add	x16, x16, #0x1c0
    6d3c:	br	x17

0000000000006d40 <pthread_key_create@plt>:
    6d40:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #456]
    6d48:	add	x16, x16, #0x1c8
    6d4c:	br	x17

0000000000006d50 <__ubsan_handle_cfi_bad_type@plt>:
    6d50:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d54:	ldr	x17, [x16, #464]
    6d58:	add	x16, x16, #0x1d0
    6d5c:	br	x17

0000000000006d60 <setrlimit@plt>:
    6d60:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d64:	ldr	x17, [x16, #472]
    6d68:	add	x16, x16, #0x1d8
    6d6c:	br	x17

0000000000006d70 <getauxval@plt>:
    6d70:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d74:	ldr	x17, [x16, #480]
    6d78:	add	x16, x16, #0x1e0
    6d7c:	br	x17

0000000000006d80 <__hwasan_handle_longjmp@plt>:
    6d80:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d84:	ldr	x17, [x16, #488]
    6d88:	add	x16, x16, #0x1e8
    6d8c:	br	x17

0000000000006d90 <__sanitizer_free_hook@plt>:
    6d90:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6d94:	ldr	x17, [x16, #496]
    6d98:	add	x16, x16, #0x1f0
    6d9c:	br	x17

0000000000006da0 <abort@plt>:
    6da0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6da4:	ldr	x17, [x16, #504]
    6da8:	add	x16, x16, #0x1f8
    6dac:	br	x17

0000000000006db0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6db0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6db4:	ldr	x17, [x16, #512]
    6db8:	add	x16, x16, #0x200
    6dbc:	br	x17

0000000000006dc0 <sysconf@plt>:
    6dc0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6dc4:	ldr	x17, [x16, #520]
    6dc8:	add	x16, x16, #0x208
    6dcc:	br	x17

0000000000006dd0 <__extendsftf2@plt>:
    6dd0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6dd4:	ldr	x17, [x16, #528]
    6dd8:	add	x16, x16, #0x210
    6ddc:	br	x17

0000000000006de0 <pthread_self@plt>:
    6de0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6de4:	ldr	x17, [x16, #536]
    6de8:	add	x16, x16, #0x218
    6dec:	br	x17

0000000000006df0 <getuid@plt>:
    6df0:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6df4:	ldr	x17, [x16, #544]
    6df8:	add	x16, x16, #0x220
    6dfc:	br	x17

0000000000006e00 <__ubsan_default_options@plt>:
    6e00:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e04:	ldr	x17, [x16, #552]
    6e08:	add	x16, x16, #0x228
    6e0c:	br	x17

0000000000006e10 <getrlimit@plt>:
    6e10:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e14:	ldr	x17, [x16, #560]
    6e18:	add	x16, x16, #0x230
    6e1c:	br	x17

0000000000006e20 <sigaltstack@plt>:
    6e20:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e24:	ldr	x17, [x16, #568]
    6e28:	add	x16, x16, #0x238
    6e2c:	br	x17

0000000000006e30 <__gmon_start__@plt>:
    6e30:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e34:	ldr	x17, [x16, #576]
    6e38:	add	x16, x16, #0x240
    6e3c:	br	x17

0000000000006e40 <sigaction@plt>:
    6e40:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e44:	ldr	x17, [x16, #584]
    6e48:	add	x16, x16, #0x248
    6e4c:	br	x17

0000000000006e50 <__sanitizer_set_report_path@plt>:
    6e50:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e54:	ldr	x17, [x16, #592]
    6e58:	add	x16, x16, #0x250
    6e5c:	br	x17

0000000000006e60 <__sanitizer_print_memory_profile@plt>:
    6e60:	adrp	x16, 52000 <_Unwind_Backtrace@GCC_3.3>
    6e64:	ldr	x17, [x16, #600]
    6e68:	add	x16, x16, #0x258
    6e6c:	br	x17

Disassembly of section .text:

0000000000006e70 <__hwasan_init_frames@@Base-0x2e0>:
    6e70:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6e74:	strb	wzr, [x8, #3360]
    6e78:	ret
    6e7c:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    6e80:	add	x0, x0, #0xab0
    6e84:	b	1a144 <__sanitizer_set_report_fd@@Base+0x3b00>
    6e88:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    6e8c:	ldr	x0, [x0, #4032]
    6e90:	cbz	x0, 6e98 <__sanitizer_print_memory_profile@plt+0x38>
    6e94:	b	6e30 <__gmon_start__@plt>
    6e98:	ret
    6e9c:	nop
    6ea0:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6ea4:	add	x0, x0, #0xc90
    6ea8:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6eac:	add	x1, x1, #0xc90
    6eb0:	cmp	x1, x0
    6eb4:	b.eq	6ecc <__sanitizer_print_memory_profile@plt+0x6c>  // b.none
    6eb8:	adrp	x1, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    6ebc:	ldr	x1, [x1, #3976]
    6ec0:	cbz	x1, 6ecc <__sanitizer_print_memory_profile@plt+0x6c>
    6ec4:	mov	x16, x1
    6ec8:	br	x16
    6ecc:	ret
    6ed0:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6ed4:	add	x0, x0, #0xc90
    6ed8:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6edc:	add	x1, x1, #0xc90
    6ee0:	sub	x1, x1, x0
    6ee4:	lsr	x2, x1, #63
    6ee8:	add	x1, x2, x1, asr #3
    6eec:	cmp	xzr, x1, asr #1
    6ef0:	asr	x1, x1, #1
    6ef4:	b.eq	6f0c <__sanitizer_print_memory_profile@plt+0xac>  // b.none
    6ef8:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    6efc:	ldr	x2, [x2, #4040]
    6f00:	cbz	x2, 6f0c <__sanitizer_print_memory_profile@plt+0xac>
    6f04:	mov	x16, x2
    6f08:	br	x16
    6f0c:	ret
    6f10:	stp	x29, x30, [sp, #-32]!
    6f14:	mov	x29, sp
    6f18:	str	x19, [sp, #16]
    6f1c:	adrp	x19, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    6f20:	ldrb	w0, [x19, #3264]
    6f24:	cbnz	w0, 6f4c <__sanitizer_print_memory_profile@plt+0xec>
    6f28:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    6f2c:	ldr	x0, [x0, #3752]
    6f30:	cbz	x0, 6f40 <__sanitizer_print_memory_profile@plt+0xe0>
    6f34:	adrp	x0, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
    6f38:	ldr	x0, [x0, #608]
    6f3c:	bl	6b30 <__cxa_finalize@plt>
    6f40:	bl	6ea0 <__sanitizer_print_memory_profile@plt+0x40>
    6f44:	mov	w0, #0x1                   	// #1
    6f48:	strb	w0, [x19, #3264]
    6f4c:	ldr	x19, [sp, #16]
    6f50:	ldp	x29, x30, [sp], #32
    6f54:	ret
    6f58:	b	6ed0 <__sanitizer_print_memory_profile@plt+0x70>
    6f5c:	str	x30, [sp, #-16]!
    6f60:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    6f64:	cbz	x0, 6f7c <__sanitizer_print_memory_profile@plt+0x11c>
    6f68:	ldr	w8, [x0, #44]
    6f6c:	add	w8, w8, #0x1
    6f70:	str	w8, [x0, #44]
    6f74:	ldr	x30, [sp], #16
    6f78:	ret
    6f7c:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    6f80:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    6f84:	add	x0, x0, #0xef0
    6f88:	add	x2, x2, #0xf2f
    6f8c:	mov	w1, #0x29                  	// #41
    6f90:	mov	x3, xzr
    6f94:	mov	x4, xzr
    6f98:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    6f9c:	str	x30, [sp, #-16]!
    6fa0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    6fa4:	cbz	x0, 6fbc <__sanitizer_print_memory_profile@plt+0x15c>
    6fa8:	ldr	w8, [x0, #44]
    6fac:	sub	w8, w8, #0x1
    6fb0:	str	w8, [x0, #44]
    6fb4:	ldr	x30, [sp], #16
    6fb8:	ret
    6fbc:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    6fc0:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    6fc4:	add	x0, x0, #0xef0
    6fc8:	add	x2, x2, #0xf2f
    6fcc:	mov	w1, #0x2e                  	// #46
    6fd0:	mov	x3, xzr
    6fd4:	mov	x4, xzr
    6fd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    6fdc:	str	x30, [sp, #-16]!
    6fe0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    6fe4:	cbz	x0, 6ff4 <__sanitizer_print_memory_profile@plt+0x194>
    6fe8:	ldr	w8, [x0, #44]
    6fec:	cmp	w8, #0x0
    6ff0:	cset	w0, ne  // ne = any
    6ff4:	ldr	x30, [sp], #16
    6ff8:	ret
    6ffc:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7000:	add	x0, x0, #0xcc8
    7004:	ret
    7008:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    700c:	ldr	d0, [x8, #3776]
    7010:	mov	w9, #0x1000                	// #4096
    7014:	str	w9, [x0, #8]
    7018:	adrp	x9, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    701c:	str	d0, [x0]
    7020:	ldr	q0, [x9, #3792]
    7024:	mov	w8, #0x1                   	// #1
    7028:	mov	w9, #0x400                 	// #1024
    702c:	stp	xzr, xzr, [x0, #40]
    7030:	strb	w8, [x0, #12]
    7034:	strb	w8, [x0, #32]
    7038:	str	w9, [x0, #36]
    703c:	str	q0, [x0, #16]
    7040:	strb	wzr, [x0, #56]
    7044:	ret
    7048:	ret
    704c:	str	x30, [sp, #-64]!
    7050:	stp	x24, x23, [sp, #16]
    7054:	stp	x22, x21, [sp, #32]
    7058:	stp	x20, x19, [sp, #48]
    705c:	mov	w20, w5
    7060:	mov	w24, w4
    7064:	mov	x23, x3
    7068:	mov	x19, x2
    706c:	mov	x21, x1
    7070:	mov	x22, x0
    7074:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    7078:	cbz	x0, 70b0 <__sanitizer_print_memory_profile@plt+0x250>
    707c:	tbz	w24, #0, 70b8 <__sanitizer_print_memory_profile@plt+0x258>
    7080:	ldp	x5, x6, [x0, #8]
    7084:	mov	x0, x22
    7088:	mov	w1, w20
    708c:	mov	x2, x21
    7090:	mov	x3, x19
    7094:	ldp	x20, x19, [sp, #48]
    7098:	ldp	x22, x21, [sp, #32]
    709c:	ldp	x24, x23, [sp, #16]
    70a0:	mov	w7, #0x1                   	// #1
    70a4:	mov	x4, xzr
    70a8:	ldr	x30, [sp], #64
    70ac:	b	248c8 <__sanitizer_cov_pcs_init@@Base+0x1694>
    70b0:	str	wzr, [x22, #8]
    70b4:	b	7104 <__sanitizer_print_memory_profile@plt+0x2a4>
    70b8:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    70bc:	cbz	x0, 7118 <__sanitizer_print_memory_profile@plt+0x2b8>
    70c0:	ldr	w8, [x0, #44]
    70c4:	mov	w1, w20
    70c8:	mov	x2, x21
    70cc:	mov	x3, x19
    70d0:	add	w8, w8, #0x1
    70d4:	str	w8, [x0, #44]
    70d8:	mov	x0, x22
    70dc:	mov	x4, x23
    70e0:	mov	x5, xzr
    70e4:	mov	x6, xzr
    70e8:	mov	w7, wzr
    70ec:	bl	248c8 <__sanitizer_cov_pcs_init@@Base+0x1694>
    70f0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    70f4:	cbz	x0, 7130 <__sanitizer_print_memory_profile@plt+0x2d0>
    70f8:	ldr	w8, [x0, #44]
    70fc:	sub	w8, w8, #0x1
    7100:	str	w8, [x0, #44]
    7104:	ldp	x20, x19, [sp, #48]
    7108:	ldp	x22, x21, [sp, #32]
    710c:	ldp	x24, x23, [sp, #16]
    7110:	ldr	x30, [sp], #64
    7114:	ret
    7118:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    711c:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7120:	add	x0, x0, #0xef0
    7124:	add	x2, x2, #0xf2f
    7128:	mov	w1, #0x29                  	// #41
    712c:	b	7144 <__sanitizer_print_memory_profile@plt+0x2e4>
    7130:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7134:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7138:	add	x0, x0, #0xef0
    713c:	add	x2, x2, #0xf2f
    7140:	mov	w1, #0x2e                  	// #46
    7144:	mov	x3, xzr
    7148:	mov	x4, xzr
    714c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000007150 <__hwasan_init_frames@@Base>:
    7150:	ret

0000000000007154 <__hwasan_init_static@@Base>:
    7154:	stp	x30, x19, [sp, #-16]!
    7158:	bl	c01c <__sanitizer_get_allocated_size@@Base+0x2048>
    715c:	adrp	x19, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7160:	ldr	w8, [x19, #3340]
    7164:	cbnz	w8, 7188 <__hwasan_init_static@@Base+0x34>
    7168:	bl	d084 <__interceptor_vfork@@Base+0x40>
    716c:	bl	d11c <__interceptor_vfork@@Base+0xd8>
    7170:	tbz	w0, #0, 71a8 <__hwasan_init_static@@Base+0x54>
    7174:	bl	d668 <__interceptor_vfork@@Base+0x624>
    7178:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    717c:	bl	88ec <__sanitizer_print_stack_trace@@Base+0x94>
    7180:	mov	w8, #0x1                   	// #1
    7184:	str	w8, [x19, #3340]
    7188:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    718c:	ldr	x8, [x8, #3776]
    7190:	mov	x0, xzr
    7194:	ldr	x9, [x8, #32]
    7198:	ldrh	w2, [x8, #56]
    719c:	add	x1, x8, x9
    71a0:	ldp	x30, x19, [sp], #16
    71a4:	b	71bc <__hwasan_init_static@@Base+0x68>
    71a8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    71ac:	add	x0, x0, #0x11a
    71b0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    71b4:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
    71b8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    71bc:	str	x30, [sp, #-96]!
    71c0:	stp	x28, x27, [sp, #16]
    71c4:	stp	x26, x25, [sp, #32]
    71c8:	stp	x24, x23, [sp, #48]
    71cc:	stp	x22, x21, [sp, #64]
    71d0:	stp	x20, x19, [sp, #80]
    71d4:	tst	w2, #0xffff
    71d8:	b.eq	73c0 <__hwasan_init_static@@Base+0x26c>  // b.none
    71dc:	mov	w21, w2
    71e0:	adrp	x22, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    71e4:	mov	x20, x1
    71e8:	mov	x19, x0
    71ec:	mov	x25, xzr
    71f0:	and	x26, x21, #0xffff
    71f4:	mov	w27, #0x38                  	// #56
    71f8:	add	x22, x22, #0x20a
    71fc:	b	720c <__hwasan_init_static@@Base+0xb8>
    7200:	add	x25, x25, #0x1
    7204:	cmp	x25, x26
    7208:	b.eq	73c0 <__hwasan_init_static@@Base+0x26c>  // b.none
    720c:	mul	x8, x25, x27
    7210:	ldr	w8, [x20, x8]
    7214:	cmp	w8, #0x4
    7218:	b.ne	7200 <__hwasan_init_static@@Base+0xac>  // b.any
    721c:	madd	x9, x25, x27, x20
    7220:	ldr	x8, [x9, #40]
    7224:	cmp	x8, #0x1
    7228:	b.lt	7200 <__hwasan_init_static@@Base+0xac>  // b.tstop
    722c:	ldr	x9, [x9, #16]
    7230:	add	x23, x9, x19
    7234:	add	x28, x23, x8
    7238:	b	7254 <__hwasan_init_static@@Base+0x100>
    723c:	ldr	w8, [x23, #4]
    7240:	add	x8, x8, #0x3
    7244:	and	x8, x8, #0x1fffffffc
    7248:	add	x23, x24, x8
    724c:	cmp	x23, x28
    7250:	b.cs	7200 <__hwasan_init_static@@Base+0xac>  // b.hs, b.nlast
    7254:	ldr	w8, [x23]
    7258:	ldr	w9, [x23, #8]
    725c:	add	x0, x23, #0xc
    7260:	add	x8, x8, #0x3
    7264:	and	x8, x8, #0x1fffffffc
    7268:	cmp	w9, #0x3
    726c:	add	x24, x0, x8
    7270:	b.ne	723c <__hwasan_init_static@@Base+0xe8>  // b.any
    7274:	mov	x1, x22
    7278:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    727c:	cbnz	w0, 723c <__hwasan_init_static@@Base+0xe8>
    7280:	and	w8, w21, #0xffff
    7284:	cmp	w8, #0x1
    7288:	and	x8, x21, #0xffff
    728c:	b.hi	72a0 <__hwasan_init_static@@Base+0x14c>  // b.pmore
    7290:	mov	x9, xzr
    7294:	mov	x10, xzr
    7298:	mov	x11, #0xffffffffffffffff    	// #-1
    729c:	b	73dc <__hwasan_init_static@@Base+0x288>
    72a0:	and	x9, x8, #0xfffe
    72a4:	mov	x10, xzr
    72a8:	mov	x11, xzr
    72ac:	add	x13, x20, #0x38
    72b0:	mov	x12, #0xffffffffffffffff    	// #-1
    72b4:	mov	x15, x9
    72b8:	mov	x14, #0xffffffffffffffff    	// #-1
    72bc:	b	7324 <__hwasan_init_static@@Base+0x1d0>
    72c0:	cmp	w17, #0x1
    72c4:	add	x17, x0, x1
    72c8:	add	x1, x18, x2
    72cc:	cset	w2, eq  // eq = none
    72d0:	cmp	w16, #0x1
    72d4:	cset	w16, eq  // eq = none
    72d8:	cmp	x12, x0
    72dc:	cset	w3, hi  // hi = pmore
    72e0:	cmp	x14, x18
    72e4:	cset	w4, hi  // hi = pmore
    72e8:	cmp	x10, x17
    72ec:	cset	w5, cc  // cc = lo, ul, last
    72f0:	cmp	x11, x1
    72f4:	cset	w6, cc  // cc = lo, ul, last
    72f8:	tst	w16, w5
    72fc:	csel	x10, x17, x10, ne  // ne = any
    7300:	tst	w2, w6
    7304:	csel	x11, x1, x11, ne  // ne = any
    7308:	tst	w16, w3
    730c:	csel	x12, x0, x12, ne  // ne = any
    7310:	tst	w2, w4
    7314:	csel	x14, x18, x14, ne  // ne = any
    7318:	subs	x15, x15, #0x2
    731c:	add	x13, x13, #0x70
    7320:	b.eq	737c <__hwasan_init_static@@Base+0x228>  // b.none
    7324:	ldur	w16, [x13, #-56]
    7328:	ldr	w17, [x13]
    732c:	cmp	w16, #0x1
    7330:	b.ne	7364 <__hwasan_init_static@@Base+0x210>  // b.any
    7334:	ldur	x18, [x13, #-40]
    7338:	cmp	w17, #0x1
    733c:	b.eq	736c <__hwasan_init_static@@Base+0x218>  // b.none
    7340:	cmp	w16, #0x1
    7344:	b.ne	734c <__hwasan_init_static@@Base+0x1f8>  // b.any
    7348:	ldur	x1, [x13, #-16]
    734c:	add	x0, x18, x19
    7350:	cmp	w17, #0x1
    7354:	add	x18, x2, x19
    7358:	b.ne	72c0 <__hwasan_init_static@@Base+0x16c>  // b.any
    735c:	ldr	x2, [x13, #40]
    7360:	b	72c0 <__hwasan_init_static@@Base+0x16c>
    7364:	cmp	w17, #0x1
    7368:	b.ne	7340 <__hwasan_init_static@@Base+0x1ec>  // b.any
    736c:	ldr	x2, [x13, #16]
    7370:	cmp	w16, #0x1
    7374:	b.ne	734c <__hwasan_init_static@@Base+0x1f8>  // b.any
    7378:	b	7348 <__hwasan_init_static@@Base+0x1f4>
    737c:	cmp	x10, x11
    7380:	csel	x10, x10, x11, hi  // hi = pmore
    7384:	cmp	x12, x14
    7388:	csel	x11, x12, x14, cc  // cc = lo, ul, last
    738c:	cmp	x9, x8
    7390:	b.ne	73dc <__hwasan_init_static@@Base+0x288>  // b.any
    7394:	sub	x8, x10, x11
    7398:	mov	x9, #0x100000000           	// #4294967296
    739c:	cmp	x8, x9
    73a0:	b.hi	7478 <__hwasan_init_static@@Base+0x324>  // b.pmore
    73a4:	mov	x8, #0x1                   	// #1
    73a8:	movk	x8, #0x1, lsl #48
    73ac:	cmp	x10, x8
    73b0:	b.cs	7488 <__hwasan_init_static@@Base+0x334>  // b.hs, b.nlast
    73b4:	ldpsw	x8, x9, [x24]
    73b8:	cmp	w8, w9
    73bc:	b.ne	7428 <__hwasan_init_static@@Base+0x2d4>  // b.any
    73c0:	ldp	x20, x19, [sp, #80]
    73c4:	ldp	x22, x21, [sp, #64]
    73c8:	ldp	x24, x23, [sp, #48]
    73cc:	ldp	x26, x25, [sp, #32]
    73d0:	ldp	x28, x27, [sp, #16]
    73d4:	ldr	x30, [sp], #96
    73d8:	ret
    73dc:	mov	w12, #0x38                  	// #56
    73e0:	madd	x12, x9, x12, x20
    73e4:	sub	x8, x8, x9
    73e8:	b	73f8 <__hwasan_init_static@@Base+0x2a4>
    73ec:	subs	x8, x8, #0x1
    73f0:	add	x12, x12, #0x38
    73f4:	b.eq	7394 <__hwasan_init_static@@Base+0x240>  // b.none
    73f8:	ldr	w9, [x12]
    73fc:	cmp	w9, #0x1
    7400:	b.ne	73ec <__hwasan_init_static@@Base+0x298>  // b.any
    7404:	ldr	x9, [x12, #16]
    7408:	ldr	x13, [x12, #40]
    740c:	add	x9, x9, x19
    7410:	add	x13, x9, x13
    7414:	cmp	x11, x9
    7418:	csel	x11, x9, x11, hi  // hi = pmore
    741c:	cmp	x10, x13
    7420:	csel	x10, x13, x10, cc  // cc = lo, ul, last
    7424:	b	73ec <__hwasan_init_static@@Base+0x298>
    7428:	add	x21, x23, x9
    742c:	add	x22, x23, x8
    7430:	b	7440 <__hwasan_init_static@@Base+0x2ec>
    7434:	add	x22, x22, #0x8
    7438:	cmp	x22, x21
    743c:	b.eq	73c0 <__hwasan_init_static@@Base+0x26c>  // b.none
    7440:	ldp	w8, w23, [x22]
    7444:	sxtw	x8, w8
    7448:	add	x19, x8, x22
    744c:	and	x20, x23, #0xfffff0
    7450:	ubfx	x2, x23, #24, #8
    7454:	mov	x0, x19
    7458:	mov	x1, x20
    745c:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    7460:	ands	x2, x23, #0xf
    7464:	b.eq	7434 <__hwasan_init_static@@Base+0x2e0>  // b.none
    7468:	add	x0, x20, x19
    746c:	mov	w1, #0x10                  	// #16
    7470:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    7474:	b	7434 <__hwasan_init_static@@Base+0x2e0>
    7478:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    747c:	add	x0, x0, #0x226
    7480:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    7484:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    7488:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    748c:	add	x0, x0, #0x25c
    7490:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    7494:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

0000000000007498 <__hwasan_init@@Base>:
    7498:	sub	sp, sp, #0x190
    749c:	stp	x29, x30, [sp, #304]
    74a0:	stp	x28, x27, [sp, #320]
    74a4:	stp	x26, x25, [sp, #336]
    74a8:	stp	x24, x23, [sp, #352]
    74ac:	stp	x22, x21, [sp, #368]
    74b0:	stp	x20, x19, [sp, #384]
    74b4:	adrp	x10, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    74b8:	ldrb	w8, [x10, #3344]
    74bc:	cbnz	w8, 7b10 <__hwasan_init@@Base+0x678>
    74c0:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    74c4:	ldr	w8, [x8, #3336]
    74c8:	cbnz	w8, 7af0 <__hwasan_init@@Base+0x658>
    74cc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    74d0:	ldr	x8, [x8, #4024]
    74d4:	adrp	x9, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    74d8:	mov	w20, #0x1                   	// #1
    74dc:	add	x9, x9, #0xf5f
    74e0:	strb	w20, [x10, #3344]
    74e4:	str	x9, [x8]
    74e8:	bl	20934 <__sanitizer_sandbox_on_notify@@Base+0x2b4>
    74ec:	bl	13e30 <__sanitizer_report_error_summary@@Base+0x5e0>
    74f0:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    74f4:	ldr	x19, [x19, #4056]
    74f8:	mov	x0, x19
    74fc:	bl	16664 <__sanitizer_set_report_fd@@Base+0x20>
    7500:	add	x0, sp, #0x38
    7504:	mov	x1, x19
    7508:	bl	1675c <__sanitizer_set_report_fd@@Base+0x118>
    750c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7510:	add	x0, x0, #0x29a
    7514:	bl	19d40 <__sanitizer_set_report_fd@@Base+0x36fc>
    7518:	str	x0, [sp, #64]
    751c:	mov	w8, #0x14                  	// #20
    7520:	mov	w9, #0x63                  	// #99
    7524:	mov	w10, #0x8000                	// #32768
    7528:	mov	w11, #0x2                   	// #2
    752c:	add	x1, sp, #0x38
    7530:	mov	x0, x19
    7534:	strb	w20, [sp, #91]
    7538:	strb	wzr, [sp, #124]
    753c:	strb	w20, [sp, #177]
    7540:	str	w8, [sp, #92]
    7544:	str	w9, [sp, #280]
    7548:	str	x10, [sp, #160]
    754c:	str	w11, [sp, #144]
    7550:	bl	1675c <__sanitizer_set_report_fd@@Base+0x118>
    7554:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7558:	ldr	d0, [x8, #3776]
    755c:	adrp	x29, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7560:	add	x29, x29, #0xcc8
    7564:	adrp	x9, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7568:	mov	x24, x29
    756c:	str	d0, [x24], #8
    7570:	ldr	q0, [x9, #3792]
    7574:	mov	w8, #0x1000                	// #4096
    7578:	mov	w9, #0x400                 	// #1024
    757c:	mov	x19, x29
    7580:	mov	x22, x29
    7584:	mov	x23, x29
    7588:	mov	x28, x29
    758c:	str	w8, [x24]
    7590:	mov	x25, x29
    7594:	mov	x27, x29
    7598:	mov	x8, x29
    759c:	strb	w20, [x19, #12]!
    75a0:	str	q0, [x22, #16]!
    75a4:	strb	w20, [x23, #32]!
    75a8:	str	w9, [x28, #36]!
    75ac:	str	xzr, [x25, #48]!
    75b0:	str	xzr, [x27, #40]!
    75b4:	strb	wzr, [x8, #56]!
    75b8:	add	x0, sp, #0x38
    75bc:	str	x8, [sp, #16]
    75c0:	bl	186bc <__sanitizer_set_report_fd@@Base+0x2078>
    75c4:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    75c8:	ldr	x20, [x20, #3624]
    75cc:	mov	w1, #0x10                  	// #16
    75d0:	mov	x0, x20
    75d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    75d8:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    75dc:	add	x26, x26, #0x630
    75e0:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    75e4:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    75e8:	mov	x2, x0
    75ec:	stp	x26, x29, [x0]
    75f0:	add	x1, x1, #0x2ce
    75f4:	add	x3, x3, #0x2de
    75f8:	add	x0, sp, #0x38
    75fc:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7600:	mov	w1, #0x10                  	// #16
    7604:	mov	x0, x20
    7608:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    760c:	adrp	x21, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    7610:	add	x8, x29, #0x1
    7614:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7618:	add	x21, x21, #0xcf
    761c:	mov	x2, x0
    7620:	stp	x26, x8, [x0]
    7624:	add	x1, x1, #0x304
    7628:	add	x0, sp, #0x38
    762c:	mov	x3, x21
    7630:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7634:	mov	w1, #0x10                  	// #16
    7638:	mov	x0, x20
    763c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7640:	add	x8, x29, #0x2
    7644:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7648:	mov	x2, x0
    764c:	stp	x26, x8, [x0]
    7650:	add	x1, x1, #0x312
    7654:	add	x0, sp, #0x38
    7658:	mov	x3, x21
    765c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7660:	mov	w1, #0x10                  	// #16
    7664:	mov	x0, x20
    7668:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    766c:	add	x8, x29, #0x3
    7670:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7674:	mov	x2, x0
    7678:	stp	x26, x8, [x0]
    767c:	add	x1, x1, #0x31e
    7680:	add	x0, sp, #0x38
    7684:	mov	x3, x21
    7688:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    768c:	mov	w1, #0x10                  	// #16
    7690:	mov	x0, x20
    7694:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7698:	add	x8, x29, #0x4
    769c:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    76a0:	mov	x2, x0
    76a4:	stp	x26, x8, [x0]
    76a8:	add	x1, x1, #0x32a
    76ac:	add	x0, sp, #0x38
    76b0:	mov	x3, x21
    76b4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    76b8:	mov	w1, #0x10                  	// #16
    76bc:	mov	x0, x20
    76c0:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    76c4:	add	x8, x29, #0x5
    76c8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    76cc:	mov	x2, x0
    76d0:	stp	x26, x8, [x0]
    76d4:	add	x1, x1, #0x338
    76d8:	add	x0, sp, #0x38
    76dc:	mov	x3, x21
    76e0:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    76e4:	mov	w1, #0x10                  	// #16
    76e8:	mov	x0, x20
    76ec:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    76f0:	add	x8, x29, #0x6
    76f4:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    76f8:	mov	x2, x0
    76fc:	stp	x26, x8, [x0]
    7700:	add	x1, x1, #0x33f
    7704:	add	x0, sp, #0x38
    7708:	mov	x3, x21
    770c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7710:	mov	w1, #0x10                  	// #16
    7714:	mov	x0, x20
    7718:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    771c:	add	x8, x29, #0x7
    7720:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7724:	mov	x2, x0
    7728:	stp	x26, x8, [x0]
    772c:	add	x1, x1, #0x359
    7730:	add	x0, sp, #0x38
    7734:	mov	x3, x21
    7738:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    773c:	mov	w1, #0x10                  	// #16
    7740:	mov	x0, x20
    7744:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7748:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    774c:	add	x21, x21, #0x650
    7750:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7754:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7758:	mov	x2, x0
    775c:	stp	x21, x24, [x0]
    7760:	add	x1, x1, #0x365
    7764:	add	x3, x3, #0x37a
    7768:	add	x0, sp, #0x38
    776c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7770:	mov	w1, #0x10                  	// #16
    7774:	mov	x0, x20
    7778:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    777c:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7780:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7784:	mov	x2, x0
    7788:	stp	x26, x19, [x0]
    778c:	add	x1, x1, #0x3fa
    7790:	add	x3, x3, #0x411
    7794:	add	x0, sp, #0x38
    7798:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    779c:	mov	w1, #0x10                  	// #16
    77a0:	mov	x0, x20
    77a4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    77a8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    77ac:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    77b0:	mov	x2, x0
    77b4:	stp	x21, x22, [x0]
    77b8:	add	x1, x1, #0x49e
    77bc:	add	x3, x3, #0x4b1
    77c0:	add	x0, sp, #0x38
    77c4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    77c8:	mov	w1, #0x10                  	// #16
    77cc:	mov	x0, x20
    77d0:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    77d4:	add	x8, x29, #0x14
    77d8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    77dc:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    77e0:	mov	x2, x0
    77e4:	stp	x21, x8, [x0]
    77e8:	add	x1, x1, #0x52f
    77ec:	add	x3, x3, #0x540
    77f0:	add	x0, sp, #0x38
    77f4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    77f8:	mov	w1, #0x10                  	// #16
    77fc:	mov	x0, x20
    7800:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7804:	add	x8, x29, #0x18
    7808:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    780c:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7810:	mov	x2, x0
    7814:	stp	x21, x8, [x0]
    7818:	add	x1, x1, #0x56f
    781c:	add	x3, x3, #0x57e
    7820:	add	x0, sp, #0x38
    7824:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7828:	mov	w1, #0x10                  	// #16
    782c:	mov	x0, x20
    7830:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7834:	add	x8, x29, #0x1c
    7838:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    783c:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7840:	mov	x2, x0
    7844:	stp	x21, x8, [x0]
    7848:	add	x1, x1, #0x5a5
    784c:	add	x3, x3, #0x5b7
    7850:	add	x0, sp, #0x38
    7854:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7858:	mov	w1, #0x10                  	// #16
    785c:	mov	x0, x20
    7860:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7864:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7868:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    786c:	mov	x2, x0
    7870:	stp	x26, x23, [x0]
    7874:	add	x1, x1, #0x640
    7878:	add	x3, x3, #0x654
    787c:	add	x0, sp, #0x38
    7880:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7884:	mov	w1, #0x10                  	// #16
    7888:	mov	x0, x20
    788c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    7890:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7894:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7898:	mov	x2, x0
    789c:	stp	x21, x28, [x0]
    78a0:	add	x1, x1, #0x681
    78a4:	add	x3, x3, #0x694
    78a8:	add	x0, sp, #0x38
    78ac:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    78b0:	mov	w1, #0x10                  	// #16
    78b4:	mov	x0, x20
    78b8:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    78bc:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    78c0:	add	x19, x19, #0x670
    78c4:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    78c8:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    78cc:	mov	x2, x0
    78d0:	stp	x19, x27, [x0]
    78d4:	add	x1, x1, #0x716
    78d8:	add	x3, x3, #0x729
    78dc:	add	x0, sp, #0x38
    78e0:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    78e4:	mov	w1, #0x10                  	// #16
    78e8:	mov	x0, x20
    78ec:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    78f0:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    78f4:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    78f8:	mov	x2, x0
    78fc:	stp	x19, x25, [x0]
    7900:	add	x1, x1, #0x754
    7904:	add	x3, x3, #0x768
    7908:	add	x0, sp, #0x38
    790c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7910:	mov	w1, #0x10                  	// #16
    7914:	mov	x0, x20
    7918:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
    791c:	ldr	x8, [sp, #16]
    7920:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7924:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7928:	mov	x2, x0
    792c:	stp	x26, x8, [x0]
    7930:	add	x1, x1, #0x794
    7934:	add	x3, x3, #0x7a7
    7938:	add	x0, sp, #0x38
    793c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
    7940:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7944:	ldr	x19, [x19, #4056]
    7948:	add	x0, sp, #0x38
    794c:	mov	x1, x19
    7950:	bl	16ad0 <__sanitizer_set_report_fd@@Base+0x48c>
    7954:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7958:	ldr	x20, [x20, #3696]
    795c:	mov	x0, x20
    7960:	bl	2a5c8 <__ubsan_default_options@@Base+0xc>
    7964:	add	x0, sp, #0x18
    7968:	bl	186bc <__sanitizer_set_report_fd@@Base+0x2078>
    796c:	add	x0, sp, #0x18
    7970:	mov	x1, x20
    7974:	bl	2a5e0 <__ubsan_default_options@@Base+0x24>
    7978:	add	x0, sp, #0x18
    797c:	mov	x1, x19
    7980:	bl	16ad0 <__sanitizer_set_report_fd@@Base+0x48c>
    7984:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7988:	ldr	x8, [x8, #3632]
    798c:	cbz	x8, 79a4 <__hwasan_init@@Base+0x50c>
    7990:	bl	6a10 <__hwasan_default_options@plt>
    7994:	mov	x1, x0
    7998:	add	x0, sp, #0x38
    799c:	mov	x2, xzr
    79a0:	bl	18454 <__sanitizer_set_report_fd@@Base+0x1e10>
    79a4:	bl	2a5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5930>
    79a8:	mov	x1, x0
    79ac:	add	x0, sp, #0x18
    79b0:	mov	x2, xzr
    79b4:	bl	18454 <__sanitizer_set_report_fd@@Base+0x1e10>
    79b8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    79bc:	add	x1, x1, #0x2b1
    79c0:	add	x0, sp, #0x38
    79c4:	bl	18350 <__sanitizer_set_report_fd@@Base+0x1d0c>
    79c8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    79cc:	add	x1, x1, #0x2c0
    79d0:	add	x0, sp, #0x18
    79d4:	bl	18350 <__sanitizer_set_report_fd@@Base+0x1d0c>
    79d8:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    79dc:	ldr	x19, [x19, #4056]
    79e0:	mov	x0, x19
    79e4:	bl	17a18 <__sanitizer_set_report_fd@@Base+0x13d4>
    79e8:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    79ec:	ldr	x20, [x20, #3808]
    79f0:	ldr	w8, [x20]
    79f4:	cbz	w8, 79fc <__hwasan_init@@Base+0x564>
    79f8:	bl	17c94 <__sanitizer_set_report_fd@@Base+0x1650>
    79fc:	ldrb	w8, [x19, #122]
    7a00:	cbz	w8, 7a0c <__hwasan_init@@Base+0x574>
    7a04:	add	x0, sp, #0x38
    7a08:	bl	17d58 <__sanitizer_set_report_fd@@Base+0x1714>
    7a0c:	adrp	x0, 7000 <__sanitizer_print_memory_profile@plt+0x1a0>
    7a10:	add	x0, x0, #0xb44
    7a14:	bl	20120 <__sanitizer_on_print@@Base+0x36d0>
    7a18:	ldr	x0, [x19, #40]
    7a1c:	bl	6e50 <__sanitizer_set_report_path@plt>
    7a20:	bl	da44 <__hwasan_thread_exit@@Base+0x1e4>
    7a24:	bl	211a4 <__sanitizer_sandbox_on_notify@@Base+0xb24>
    7a28:	adrp	x21, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7a2c:	ldr	w8, [x21, #3340]
    7a30:	cbnz	w8, 7a54 <__hwasan_init@@Base+0x5bc>
    7a34:	bl	d084 <__interceptor_vfork@@Base+0x40>
    7a38:	bl	d11c <__interceptor_vfork@@Base+0xd8>
    7a3c:	tbz	w0, #0, 7b30 <__hwasan_init@@Base+0x698>
    7a40:	bl	d668 <__interceptor_vfork@@Base+0x624>
    7a44:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    7a48:	bl	88ec <__sanitizer_print_stack_trace@@Base+0x94>
    7a4c:	mov	w8, #0x1                   	// #1
    7a50:	str	w8, [x21, #3340]
    7a54:	adrp	x0, 8000 <__hwasan_load1_noabort@@Base+0x4>
    7a58:	add	x0, x0, #0x8c8
    7a5c:	mov	x1, xzr
    7a60:	bl	6ba0 <dl_iterate_phdr@plt>
    7a64:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    7a68:	bl	10c94 <__hwasan_tag_mismatch_v2@@Base+0x44>
    7a6c:	bl	d6ec <__interceptor_vfork@@Base+0x6a8>
    7a70:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7a74:	ldr	x0, [x0, #3960]
    7a78:	bl	1ca44 <__sanitizer_set_report_fd@@Base+0x6400>
    7a7c:	bl	20fd0 <__sanitizer_sandbox_on_notify@@Base+0x950>
    7a80:	bl	cf94 <__interceptor_fork@@Base+0x74>
    7a84:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7a88:	ldr	x0, [x0, #3760]
    7a8c:	bl	21550 <__sanitizer_sandbox_on_notify@@Base+0xed0>
    7a90:	bl	d7d0 <__interceptor_vfork@@Base+0x78c>
    7a94:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
    7a98:	adrp	x1, 6000 <__hwasan_tls@@Base+0x6000>
    7a9c:	adrp	x2, 6000 <__hwasan_tls@@Base+0x6000>
    7aa0:	add	x1, x1, #0xf5c
    7aa4:	add	x2, x2, #0xf9c
    7aa8:	bl	2566c <__sanitizer_get_module_and_offset_for_pc@@Base+0x9e4>
    7aac:	ldrb	w0, [x19, #169]
    7ab0:	ldr	x1, [x19, #176]
    7ab4:	bl	22ca4 <__sanitizer_sandbox_on_notify@@Base+0x2624>
    7ab8:	bl	d9b4 <__hwasan_thread_exit@@Base+0x154>
    7abc:	bl	d8dc <__hwasan_thread_exit@@Base+0x7c>
    7ac0:	bl	8f0c <__sanitizer_print_stack_trace@@Base+0x6b4>
    7ac4:	bl	2a560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d8>
    7ac8:	ldr	w8, [x20]
    7acc:	cbz	w8, 7adc <__hwasan_init@@Base+0x644>
    7ad0:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7ad4:	add	x0, x0, #0xf72
    7ad8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    7adc:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7ae0:	strb	wzr, [x8, #3344]
    7ae4:	mov	w8, #0x1                   	// #1
    7ae8:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7aec:	str	w8, [x9, #3336]
    7af0:	ldp	x20, x19, [sp, #384]
    7af4:	ldp	x22, x21, [sp, #368]
    7af8:	ldp	x24, x23, [sp, #352]
    7afc:	ldp	x26, x25, [sp, #336]
    7b00:	ldp	x28, x27, [sp, #320]
    7b04:	ldp	x29, x30, [sp, #304]
    7b08:	add	sp, sp, #0x190
    7b0c:	ret
    7b10:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7b14:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7b18:	add	x0, x0, #0xef0
    7b1c:	add	x2, x2, #0xf3c
    7b20:	mov	w1, #0x162                 	// #354
    7b24:	mov	x3, xzr
    7b28:	mov	x4, xzr
    7b2c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    7b30:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7b34:	add	x0, x0, #0x11a
    7b38:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    7b3c:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
    7b40:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    7b44:	stp	x29, x30, [sp, #-32]!
    7b48:	str	x28, [sp, #16]
    7b4c:	mov	x29, sp
    7b50:	sub	sp, sp, #0x820
    7b54:	mov	x5, x4
    7b58:	mov	x4, x3
    7b5c:	mov	x3, x2
    7b60:	mov	w2, w1
    7b64:	mov	x1, x0
    7b68:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    7b6c:	add	x0, x0, #0x882
    7b70:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    7b74:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    7b78:	ldr	w9, [x9, #3336]
    7b7c:	add	x8, sp, #0x8
    7b80:	add	x8, x8, #0x10
    7b84:	stp	x8, xzr, [sp, #8]
    7b88:	str	xzr, [sp, #2072]
    7b8c:	cbz	w9, 7bbc <__hwasan_init@@Base+0x724>
    7b90:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    7b94:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7b98:	ldr	x8, [x8, #4056]
    7b9c:	mov	x1, x0
    7ba0:	add	x0, sp, #0x8
    7ba4:	mov	w5, #0x100                 	// #256
    7ba8:	ldrb	w4, [x8, #33]
    7bac:	mov	x2, x29
    7bb0:	mov	x3, xzr
    7bb4:	str	x29, [sp, #2072]
    7bb8:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    7bbc:	add	x0, sp, #0x8
    7bc0:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    7bc4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

0000000000007bc8 <__hwasan_library_loaded@@Base>:
    7bc8:	b	71bc <__hwasan_init_static@@Base+0x68>

0000000000007bcc <__hwasan_library_unloaded@@Base>:
    7bcc:	stp	x30, x21, [sp, #-32]!
    7bd0:	stp	x20, x19, [sp, #16]
    7bd4:	tst	w2, #0xffff
    7bd8:	b.eq	7c20 <__hwasan_library_unloaded@@Base+0x54>  // b.none
    7bdc:	mov	w19, w2
    7be0:	mov	x20, x1
    7be4:	mov	x21, x0
    7be8:	b	7bfc <__hwasan_library_unloaded@@Base+0x30>
    7bec:	sub	w19, w19, #0x1
    7bf0:	tst	w19, #0xffff
    7bf4:	add	x20, x20, #0x38
    7bf8:	b.eq	7c20 <__hwasan_library_unloaded@@Base+0x54>  // b.none
    7bfc:	ldr	w8, [x20]
    7c00:	cmp	w8, #0x1
    7c04:	b.ne	7bec <__hwasan_library_unloaded@@Base+0x20>  // b.any
    7c08:	ldr	x8, [x20, #16]
    7c0c:	ldr	x1, [x20, #40]
    7c10:	mov	w2, wzr
    7c14:	add	x0, x8, x21
    7c18:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
    7c1c:	b	7bec <__hwasan_library_unloaded@@Base+0x20>
    7c20:	ldp	x20, x19, [sp, #16]
    7c24:	ldp	x30, x21, [sp], #32
    7c28:	ret

0000000000007c2c <__hwasan_print_shadow@@Base>:
    7c2c:	stp	x30, x23, [sp, #-48]!
    7c30:	stp	x22, x21, [sp, #16]
    7c34:	stp	x20, x19, [sp, #32]
    7c38:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7c3c:	ldr	x20, [x20, #3840]
    7c40:	and	x8, x0, #0xffffffffffffff
    7c44:	add	x2, x8, x1
    7c48:	lsr	x3, x0, #56
    7c4c:	ldr	x9, [x20]
    7c50:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7c54:	sub	x10, x2, #0x1
    7c58:	add	x0, x0, #0xf90
    7c5c:	mov	x1, x8
    7c60:	add	x21, x9, x8, lsr #4
    7c64:	add	x22, x9, x10, lsr #4
    7c68:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    7c6c:	cmp	x21, x22
    7c70:	b.hi	7ca0 <__hwasan_print_shadow@@Base+0x74>  // b.pmore
    7c74:	adrp	x19, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    7c78:	lsl	x23, x21, #4
    7c7c:	add	x19, x19, #0xfc3
    7c80:	ldr	x8, [x20]
    7c84:	ldrb	w2, [x21], #1
    7c88:	mov	x0, x19
    7c8c:	sub	x1, x23, x8, lsl #4
    7c90:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    7c94:	cmp	x21, x22
    7c98:	add	x23, x23, #0x10
    7c9c:	b.ls	7c80 <__hwasan_print_shadow@@Base+0x54>  // b.plast
    7ca0:	ldp	x20, x19, [sp, #32]
    7ca4:	ldp	x22, x21, [sp, #16]
    7ca8:	ldp	x30, x23, [sp], #48
    7cac:	ret

0000000000007cb0 <__hwasan_test_shadow@@Base>:
    7cb0:	cbz	x1, 7d08 <__hwasan_test_shadow@@Base+0x58>
    7cb4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7cb8:	ldr	x8, [x8, #3840]
    7cbc:	and	x10, x0, #0xffffffffffffff
    7cc0:	ubfx	x11, x0, #4, #52
    7cc4:	ldr	x9, [x8]
    7cc8:	add	x8, x1, x10
    7ccc:	sub	x12, x8, #0x1
    7cd0:	add	x8, x9, x11
    7cd4:	add	x9, x9, x12, lsr #4
    7cd8:	cmp	x8, x9
    7cdc:	b.hi	7d08 <__hwasan_test_shadow@@Base+0x58>  // b.pmore
    7ce0:	lsl	x11, x11, #4
    7ce4:	sub	x10, x11, x10
    7ce8:	lsr	x11, x0, #56
    7cec:	ldrb	w12, [x8]
    7cf0:	cmp	w12, w11
    7cf4:	b.ne	7d10 <__hwasan_test_shadow@@Base+0x60>  // b.any
    7cf8:	add	x8, x8, #0x1
    7cfc:	cmp	x8, x9
    7d00:	add	x10, x10, #0x10
    7d04:	b.ls	7cec <__hwasan_test_shadow@@Base+0x3c>  // b.plast
    7d08:	mov	x0, #0xffffffffffffffff    	// #-1
    7d0c:	ret
    7d10:	bic	x0, x10, x10, asr #63
    7d14:	ret

0000000000007d18 <__sanitizer_unaligned_load16@@Base>:
    7d18:	ldrh	w0, [x0]
    7d1c:	ret

0000000000007d20 <__sanitizer_unaligned_load32@@Base>:
    7d20:	ldr	w0, [x0]
    7d24:	ret

0000000000007d28 <__sanitizer_unaligned_load64@@Base>:
    7d28:	ldr	x0, [x0]
    7d2c:	ret

0000000000007d30 <__sanitizer_unaligned_store16@@Base>:
    7d30:	strh	w1, [x0]
    7d34:	ret

0000000000007d38 <__sanitizer_unaligned_store32@@Base>:
    7d38:	str	w1, [x0]
    7d3c:	ret

0000000000007d40 <__sanitizer_unaligned_store64@@Base>:
    7d40:	str	x1, [x0]
    7d44:	ret

0000000000007d48 <__hwasan_loadN@@Base>:
    7d48:	cbz	x1, 7dc4 <__hwasan_loadN@@Base+0x7c>
    7d4c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7d50:	ldr	x8, [x8, #3840]
    7d54:	and	x9, x0, #0xffffffffffffff
    7d58:	add	x10, x9, x1
    7d5c:	ldr	x8, [x8]
    7d60:	add	x9, x8, x9, lsr #4
    7d64:	add	x8, x8, x10, lsr #4
    7d68:	cmp	x9, x8
    7d6c:	b.cs	7d88 <__hwasan_loadN@@Base+0x40>  // b.hs, b.nlast
    7d70:	lsr	x10, x0, #56
    7d74:	ldrb	w11, [x9], #1
    7d78:	cmp	w11, w10
    7d7c:	b.ne	7dc8 <__hwasan_loadN@@Base+0x80>  // b.any
    7d80:	cmp	x8, x9
    7d84:	b.ne	7d74 <__hwasan_loadN@@Base+0x2c>  // b.any
    7d88:	add	x9, x1, x0
    7d8c:	ands	x10, x9, #0xf
    7d90:	b.eq	7dc4 <__hwasan_loadN@@Base+0x7c>  // b.none
    7d94:	ldrb	w11, [x8]
    7d98:	lsr	x8, x9, #56
    7d9c:	cmp	w11, w8
    7da0:	b.eq	7dc4 <__hwasan_loadN@@Base+0x7c>  // b.none
    7da4:	cmp	w11, #0xf
    7da8:	b.hi	7dcc <__hwasan_loadN@@Base+0x84>  // b.pmore
    7dac:	cmp	x10, x11
    7db0:	b.hi	7dcc <__hwasan_loadN@@Base+0x84>  // b.pmore
    7db4:	orr	x9, x9, #0xf
    7db8:	ldrb	w9, [x9]
    7dbc:	cmp	w9, w8
    7dc0:	b.ne	7dcc <__hwasan_loadN@@Base+0x84>  // b.any
    7dc4:	ret
    7dc8:	brk	#0x90f
    7dcc:	brk	#0x90f

0000000000007dd0 <__hwasan_load1@@Base>:
    7dd0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7dd4:	ldr	x8, [x8, #3840]
    7dd8:	ubfx	x9, x0, #4, #52
    7ddc:	ldr	x8, [x8]
    7de0:	ldrb	w9, [x8, x9]
    7de4:	lsr	x8, x0, #56
    7de8:	cmp	w9, w8
    7dec:	b.eq	7e14 <__hwasan_load1@@Base+0x44>  // b.none
    7df0:	cmp	w9, #0xf
    7df4:	b.hi	7e18 <__hwasan_load1@@Base+0x48>  // b.pmore
    7df8:	and	x10, x0, #0xf
    7dfc:	cmp	x10, x9
    7e00:	b.cs	7e18 <__hwasan_load1@@Base+0x48>  // b.hs, b.nlast
    7e04:	orr	x9, x0, #0xf
    7e08:	ldrb	w9, [x9]
    7e0c:	cmp	w9, w8
    7e10:	b.ne	7e18 <__hwasan_load1@@Base+0x48>  // b.any
    7e14:	ret
    7e18:	brk	#0x900

0000000000007e1c <__hwasan_load2@@Base>:
    7e1c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7e20:	ldr	x8, [x8, #3840]
    7e24:	ubfx	x9, x0, #4, #52
    7e28:	ldr	x8, [x8]
    7e2c:	ldrb	w9, [x8, x9]
    7e30:	lsr	x8, x0, #56
    7e34:	cmp	w9, w8
    7e38:	b.eq	7e64 <__hwasan_load2@@Base+0x48>  // b.none
    7e3c:	cmp	w9, #0xf
    7e40:	b.hi	7e68 <__hwasan_load2@@Base+0x4c>  // b.pmore
    7e44:	and	x10, x0, #0xf
    7e48:	add	x10, x10, #0x2
    7e4c:	cmp	x10, x9
    7e50:	b.hi	7e68 <__hwasan_load2@@Base+0x4c>  // b.pmore
    7e54:	orr	x9, x0, #0xf
    7e58:	ldrb	w9, [x9]
    7e5c:	cmp	w9, w8
    7e60:	b.ne	7e68 <__hwasan_load2@@Base+0x4c>  // b.any
    7e64:	ret
    7e68:	brk	#0x901

0000000000007e6c <__hwasan_load4@@Base>:
    7e6c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7e70:	ldr	x8, [x8, #3840]
    7e74:	ubfx	x9, x0, #4, #52
    7e78:	ldr	x8, [x8]
    7e7c:	ldrb	w9, [x8, x9]
    7e80:	lsr	x8, x0, #56
    7e84:	cmp	w9, w8
    7e88:	b.eq	7eb4 <__hwasan_load4@@Base+0x48>  // b.none
    7e8c:	cmp	w9, #0xf
    7e90:	b.hi	7eb8 <__hwasan_load4@@Base+0x4c>  // b.pmore
    7e94:	and	x10, x0, #0xf
    7e98:	add	x10, x10, #0x4
    7e9c:	cmp	x10, x9
    7ea0:	b.hi	7eb8 <__hwasan_load4@@Base+0x4c>  // b.pmore
    7ea4:	orr	x9, x0, #0xf
    7ea8:	ldrb	w9, [x9]
    7eac:	cmp	w9, w8
    7eb0:	b.ne	7eb8 <__hwasan_load4@@Base+0x4c>  // b.any
    7eb4:	ret
    7eb8:	brk	#0x902

0000000000007ebc <__hwasan_load8@@Base>:
    7ebc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7ec0:	ldr	x8, [x8, #3840]
    7ec4:	ubfx	x9, x0, #4, #52
    7ec8:	ldr	x8, [x8]
    7ecc:	ldrb	w9, [x8, x9]
    7ed0:	lsr	x8, x0, #56
    7ed4:	cmp	w9, w8
    7ed8:	b.eq	7f04 <__hwasan_load8@@Base+0x48>  // b.none
    7edc:	cmp	w9, #0xf
    7ee0:	b.hi	7f08 <__hwasan_load8@@Base+0x4c>  // b.pmore
    7ee4:	and	x10, x0, #0xf
    7ee8:	add	x10, x10, #0x8
    7eec:	cmp	x10, x9
    7ef0:	b.hi	7f08 <__hwasan_load8@@Base+0x4c>  // b.pmore
    7ef4:	orr	x9, x0, #0xf
    7ef8:	ldrb	w9, [x9]
    7efc:	cmp	w9, w8
    7f00:	b.ne	7f08 <__hwasan_load8@@Base+0x4c>  // b.any
    7f04:	ret
    7f08:	brk	#0x903

0000000000007f0c <__hwasan_load16@@Base>:
    7f0c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7f10:	ldr	x8, [x8, #3840]
    7f14:	ubfx	x9, x0, #4, #52
    7f18:	ldr	x8, [x8]
    7f1c:	ldrb	w9, [x8, x9]
    7f20:	lsr	x8, x0, #56
    7f24:	cmp	w9, w8
    7f28:	b.eq	7f54 <__hwasan_load16@@Base+0x48>  // b.none
    7f2c:	cmp	w9, #0xf
    7f30:	b.hi	7f58 <__hwasan_load16@@Base+0x4c>  // b.pmore
    7f34:	mov	w10, #0x10                  	// #16
    7f38:	bfxil	x10, x0, #0, #4
    7f3c:	cmp	x10, x9
    7f40:	b.hi	7f58 <__hwasan_load16@@Base+0x4c>  // b.pmore
    7f44:	orr	x9, x0, #0xf
    7f48:	ldrb	w9, [x9]
    7f4c:	cmp	w9, w8
    7f50:	b.ne	7f58 <__hwasan_load16@@Base+0x4c>  // b.any
    7f54:	ret
    7f58:	brk	#0x904

0000000000007f5c <__hwasan_loadN_noabort@@Base>:
    7f5c:	cbz	x1, 7ff0 <__hwasan_loadN_noabort@@Base+0x94>
    7f60:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    7f64:	ldr	x8, [x8, #3840]
    7f68:	and	x9, x0, #0xffffffffffffff
    7f6c:	add	x10, x9, x1
    7f70:	ldr	x8, [x8]
    7f74:	add	x9, x8, x9, lsr #4
    7f78:	add	x8, x8, x10, lsr #4
    7f7c:	cmp	x9, x8
    7f80:	b.cs	7fb4 <__hwasan_loadN_noabort@@Base+0x58>  // b.hs, b.nlast
    7f84:	lsr	x10, x0, #56
    7f88:	ldrb	w11, [x9]
    7f8c:	cmp	w11, w10
    7f90:	b.ne	7fa4 <__hwasan_loadN_noabort@@Base+0x48>  // b.any
    7f94:	add	x9, x9, #0x1
    7f98:	cmp	x8, x9
    7f9c:	b.ne	7f88 <__hwasan_loadN_noabort@@Base+0x2c>  // b.any
    7fa0:	b	7fb4 <__hwasan_loadN_noabort@@Base+0x58>
    7fa4:	brk	#0x92f
    7fa8:	add	x9, x9, #0x1
    7fac:	cmp	x8, x9
    7fb0:	b.ne	7f88 <__hwasan_loadN_noabort@@Base+0x2c>  // b.any
    7fb4:	add	x9, x1, x0
    7fb8:	ands	x10, x9, #0xf
    7fbc:	b.eq	7ff0 <__hwasan_loadN_noabort@@Base+0x94>  // b.none
    7fc0:	ldrb	w11, [x8]
    7fc4:	lsr	x8, x9, #56
    7fc8:	cmp	w11, w8
    7fcc:	b.eq	7ff0 <__hwasan_loadN_noabort@@Base+0x94>  // b.none
    7fd0:	cmp	w11, #0xf
    7fd4:	b.hi	7ff4 <__hwasan_loadN_noabort@@Base+0x98>  // b.pmore
    7fd8:	cmp	x10, x11
    7fdc:	b.hi	7ff4 <__hwasan_loadN_noabort@@Base+0x98>  // b.pmore
    7fe0:	orr	x9, x9, #0xf
    7fe4:	ldrb	w9, [x9]
    7fe8:	cmp	w9, w8
    7fec:	b.ne	7ff4 <__hwasan_loadN_noabort@@Base+0x98>  // b.any
    7ff0:	ret
    7ff4:	brk	#0x92f
    7ff8:	ret

0000000000007ffc <__hwasan_load1_noabort@@Base>:
    7ffc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8000:	ldr	x8, [x8, #3840]
    8004:	ubfx	x9, x0, #4, #52
    8008:	ldr	x8, [x8]
    800c:	ldrb	w9, [x8, x9]
    8010:	lsr	x8, x0, #56
    8014:	cmp	w9, w8
    8018:	b.eq	8040 <__hwasan_load1_noabort@@Base+0x44>  // b.none
    801c:	cmp	w9, #0xf
    8020:	b.hi	8044 <__hwasan_load1_noabort@@Base+0x48>  // b.pmore
    8024:	and	x10, x0, #0xf
    8028:	cmp	x10, x9
    802c:	b.cs	8044 <__hwasan_load1_noabort@@Base+0x48>  // b.hs, b.nlast
    8030:	orr	x9, x0, #0xf
    8034:	ldrb	w9, [x9]
    8038:	cmp	w9, w8
    803c:	b.ne	8044 <__hwasan_load1_noabort@@Base+0x48>  // b.any
    8040:	ret
    8044:	brk	#0x920
    8048:	ret

000000000000804c <__hwasan_load2_noabort@@Base>:
    804c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8050:	ldr	x8, [x8, #3840]
    8054:	ubfx	x9, x0, #4, #52
    8058:	ldr	x8, [x8]
    805c:	ldrb	w9, [x8, x9]
    8060:	lsr	x8, x0, #56
    8064:	cmp	w9, w8
    8068:	b.eq	8094 <__hwasan_load2_noabort@@Base+0x48>  // b.none
    806c:	cmp	w9, #0xf
    8070:	b.hi	8098 <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    8074:	and	x10, x0, #0xf
    8078:	add	x10, x10, #0x2
    807c:	cmp	x10, x9
    8080:	b.hi	8098 <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    8084:	orr	x9, x0, #0xf
    8088:	ldrb	w9, [x9]
    808c:	cmp	w9, w8
    8090:	b.ne	8098 <__hwasan_load2_noabort@@Base+0x4c>  // b.any
    8094:	ret
    8098:	brk	#0x921
    809c:	ret

00000000000080a0 <__hwasan_load4_noabort@@Base>:
    80a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    80a4:	ldr	x8, [x8, #3840]
    80a8:	ubfx	x9, x0, #4, #52
    80ac:	ldr	x8, [x8]
    80b0:	ldrb	w9, [x8, x9]
    80b4:	lsr	x8, x0, #56
    80b8:	cmp	w9, w8
    80bc:	b.eq	80e8 <__hwasan_load4_noabort@@Base+0x48>  // b.none
    80c0:	cmp	w9, #0xf
    80c4:	b.hi	80ec <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    80c8:	and	x10, x0, #0xf
    80cc:	add	x10, x10, #0x4
    80d0:	cmp	x10, x9
    80d4:	b.hi	80ec <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    80d8:	orr	x9, x0, #0xf
    80dc:	ldrb	w9, [x9]
    80e0:	cmp	w9, w8
    80e4:	b.ne	80ec <__hwasan_load4_noabort@@Base+0x4c>  // b.any
    80e8:	ret
    80ec:	brk	#0x922
    80f0:	ret

00000000000080f4 <__hwasan_load8_noabort@@Base>:
    80f4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    80f8:	ldr	x8, [x8, #3840]
    80fc:	ubfx	x9, x0, #4, #52
    8100:	ldr	x8, [x8]
    8104:	ldrb	w9, [x8, x9]
    8108:	lsr	x8, x0, #56
    810c:	cmp	w9, w8
    8110:	b.eq	813c <__hwasan_load8_noabort@@Base+0x48>  // b.none
    8114:	cmp	w9, #0xf
    8118:	b.hi	8140 <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    811c:	and	x10, x0, #0xf
    8120:	add	x10, x10, #0x8
    8124:	cmp	x10, x9
    8128:	b.hi	8140 <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    812c:	orr	x9, x0, #0xf
    8130:	ldrb	w9, [x9]
    8134:	cmp	w9, w8
    8138:	b.ne	8140 <__hwasan_load8_noabort@@Base+0x4c>  // b.any
    813c:	ret
    8140:	brk	#0x923
    8144:	ret

0000000000008148 <__hwasan_load16_noabort@@Base>:
    8148:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    814c:	ldr	x8, [x8, #3840]
    8150:	ubfx	x9, x0, #4, #52
    8154:	ldr	x8, [x8]
    8158:	ldrb	w9, [x8, x9]
    815c:	lsr	x8, x0, #56
    8160:	cmp	w9, w8
    8164:	b.eq	8190 <__hwasan_load16_noabort@@Base+0x48>  // b.none
    8168:	cmp	w9, #0xf
    816c:	b.hi	8194 <__hwasan_load16_noabort@@Base+0x4c>  // b.pmore
    8170:	mov	w10, #0x10                  	// #16
    8174:	bfxil	x10, x0, #0, #4
    8178:	cmp	x10, x9
    817c:	b.hi	8194 <__hwasan_load16_noabort@@Base+0x4c>  // b.pmore
    8180:	orr	x9, x0, #0xf
    8184:	ldrb	w9, [x9]
    8188:	cmp	w9, w8
    818c:	b.ne	8194 <__hwasan_load16_noabort@@Base+0x4c>  // b.any
    8190:	ret
    8194:	brk	#0x924
    8198:	ret

000000000000819c <__hwasan_storeN@@Base>:
    819c:	cbz	x1, 8218 <__hwasan_storeN@@Base+0x7c>
    81a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    81a4:	ldr	x8, [x8, #3840]
    81a8:	and	x9, x0, #0xffffffffffffff
    81ac:	add	x10, x9, x1
    81b0:	ldr	x8, [x8]
    81b4:	add	x9, x8, x9, lsr #4
    81b8:	add	x8, x8, x10, lsr #4
    81bc:	cmp	x9, x8
    81c0:	b.cs	81dc <__hwasan_storeN@@Base+0x40>  // b.hs, b.nlast
    81c4:	lsr	x10, x0, #56
    81c8:	ldrb	w11, [x9], #1
    81cc:	cmp	w11, w10
    81d0:	b.ne	821c <__hwasan_storeN@@Base+0x80>  // b.any
    81d4:	cmp	x8, x9
    81d8:	b.ne	81c8 <__hwasan_storeN@@Base+0x2c>  // b.any
    81dc:	add	x9, x1, x0
    81e0:	ands	x10, x9, #0xf
    81e4:	b.eq	8218 <__hwasan_storeN@@Base+0x7c>  // b.none
    81e8:	ldrb	w11, [x8]
    81ec:	lsr	x8, x9, #56
    81f0:	cmp	w11, w8
    81f4:	b.eq	8218 <__hwasan_storeN@@Base+0x7c>  // b.none
    81f8:	cmp	w11, #0xf
    81fc:	b.hi	8220 <__hwasan_storeN@@Base+0x84>  // b.pmore
    8200:	cmp	x10, x11
    8204:	b.hi	8220 <__hwasan_storeN@@Base+0x84>  // b.pmore
    8208:	orr	x9, x9, #0xf
    820c:	ldrb	w9, [x9]
    8210:	cmp	w9, w8
    8214:	b.ne	8220 <__hwasan_storeN@@Base+0x84>  // b.any
    8218:	ret
    821c:	brk	#0x91f
    8220:	brk	#0x91f

0000000000008224 <__hwasan_store1@@Base>:
    8224:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8228:	ldr	x8, [x8, #3840]
    822c:	ubfx	x9, x0, #4, #52
    8230:	ldr	x8, [x8]
    8234:	ldrb	w9, [x8, x9]
    8238:	lsr	x8, x0, #56
    823c:	cmp	w9, w8
    8240:	b.eq	8268 <__hwasan_store1@@Base+0x44>  // b.none
    8244:	cmp	w9, #0xf
    8248:	b.hi	826c <__hwasan_store1@@Base+0x48>  // b.pmore
    824c:	and	x10, x0, #0xf
    8250:	cmp	x10, x9
    8254:	b.cs	826c <__hwasan_store1@@Base+0x48>  // b.hs, b.nlast
    8258:	orr	x9, x0, #0xf
    825c:	ldrb	w9, [x9]
    8260:	cmp	w9, w8
    8264:	b.ne	826c <__hwasan_store1@@Base+0x48>  // b.any
    8268:	ret
    826c:	brk	#0x910

0000000000008270 <__hwasan_store2@@Base>:
    8270:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8274:	ldr	x8, [x8, #3840]
    8278:	ubfx	x9, x0, #4, #52
    827c:	ldr	x8, [x8]
    8280:	ldrb	w9, [x8, x9]
    8284:	lsr	x8, x0, #56
    8288:	cmp	w9, w8
    828c:	b.eq	82b8 <__hwasan_store2@@Base+0x48>  // b.none
    8290:	cmp	w9, #0xf
    8294:	b.hi	82bc <__hwasan_store2@@Base+0x4c>  // b.pmore
    8298:	and	x10, x0, #0xf
    829c:	add	x10, x10, #0x2
    82a0:	cmp	x10, x9
    82a4:	b.hi	82bc <__hwasan_store2@@Base+0x4c>  // b.pmore
    82a8:	orr	x9, x0, #0xf
    82ac:	ldrb	w9, [x9]
    82b0:	cmp	w9, w8
    82b4:	b.ne	82bc <__hwasan_store2@@Base+0x4c>  // b.any
    82b8:	ret
    82bc:	brk	#0x911

00000000000082c0 <__hwasan_store4@@Base>:
    82c0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    82c4:	ldr	x8, [x8, #3840]
    82c8:	ubfx	x9, x0, #4, #52
    82cc:	ldr	x8, [x8]
    82d0:	ldrb	w9, [x8, x9]
    82d4:	lsr	x8, x0, #56
    82d8:	cmp	w9, w8
    82dc:	b.eq	8308 <__hwasan_store4@@Base+0x48>  // b.none
    82e0:	cmp	w9, #0xf
    82e4:	b.hi	830c <__hwasan_store4@@Base+0x4c>  // b.pmore
    82e8:	and	x10, x0, #0xf
    82ec:	add	x10, x10, #0x4
    82f0:	cmp	x10, x9
    82f4:	b.hi	830c <__hwasan_store4@@Base+0x4c>  // b.pmore
    82f8:	orr	x9, x0, #0xf
    82fc:	ldrb	w9, [x9]
    8300:	cmp	w9, w8
    8304:	b.ne	830c <__hwasan_store4@@Base+0x4c>  // b.any
    8308:	ret
    830c:	brk	#0x912

0000000000008310 <__hwasan_store8@@Base>:
    8310:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8314:	ldr	x8, [x8, #3840]
    8318:	ubfx	x9, x0, #4, #52
    831c:	ldr	x8, [x8]
    8320:	ldrb	w9, [x8, x9]
    8324:	lsr	x8, x0, #56
    8328:	cmp	w9, w8
    832c:	b.eq	8358 <__hwasan_store8@@Base+0x48>  // b.none
    8330:	cmp	w9, #0xf
    8334:	b.hi	835c <__hwasan_store8@@Base+0x4c>  // b.pmore
    8338:	and	x10, x0, #0xf
    833c:	add	x10, x10, #0x8
    8340:	cmp	x10, x9
    8344:	b.hi	835c <__hwasan_store8@@Base+0x4c>  // b.pmore
    8348:	orr	x9, x0, #0xf
    834c:	ldrb	w9, [x9]
    8350:	cmp	w9, w8
    8354:	b.ne	835c <__hwasan_store8@@Base+0x4c>  // b.any
    8358:	ret
    835c:	brk	#0x913

0000000000008360 <__hwasan_store16@@Base>:
    8360:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8364:	ldr	x8, [x8, #3840]
    8368:	ubfx	x9, x0, #4, #52
    836c:	ldr	x8, [x8]
    8370:	ldrb	w9, [x8, x9]
    8374:	lsr	x8, x0, #56
    8378:	cmp	w9, w8
    837c:	b.eq	83a8 <__hwasan_store16@@Base+0x48>  // b.none
    8380:	cmp	w9, #0xf
    8384:	b.hi	83ac <__hwasan_store16@@Base+0x4c>  // b.pmore
    8388:	mov	w10, #0x10                  	// #16
    838c:	bfxil	x10, x0, #0, #4
    8390:	cmp	x10, x9
    8394:	b.hi	83ac <__hwasan_store16@@Base+0x4c>  // b.pmore
    8398:	orr	x9, x0, #0xf
    839c:	ldrb	w9, [x9]
    83a0:	cmp	w9, w8
    83a4:	b.ne	83ac <__hwasan_store16@@Base+0x4c>  // b.any
    83a8:	ret
    83ac:	brk	#0x914

00000000000083b0 <__hwasan_storeN_noabort@@Base>:
    83b0:	cbz	x1, 8444 <__hwasan_storeN_noabort@@Base+0x94>
    83b4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    83b8:	ldr	x8, [x8, #3840]
    83bc:	and	x9, x0, #0xffffffffffffff
    83c0:	add	x10, x9, x1
    83c4:	ldr	x8, [x8]
    83c8:	add	x9, x8, x9, lsr #4
    83cc:	add	x8, x8, x10, lsr #4
    83d0:	cmp	x9, x8
    83d4:	b.cs	8408 <__hwasan_storeN_noabort@@Base+0x58>  // b.hs, b.nlast
    83d8:	lsr	x10, x0, #56
    83dc:	ldrb	w11, [x9]
    83e0:	cmp	w11, w10
    83e4:	b.ne	83f8 <__hwasan_storeN_noabort@@Base+0x48>  // b.any
    83e8:	add	x9, x9, #0x1
    83ec:	cmp	x8, x9
    83f0:	b.ne	83dc <__hwasan_storeN_noabort@@Base+0x2c>  // b.any
    83f4:	b	8408 <__hwasan_storeN_noabort@@Base+0x58>
    83f8:	brk	#0x93f
    83fc:	add	x9, x9, #0x1
    8400:	cmp	x8, x9
    8404:	b.ne	83dc <__hwasan_storeN_noabort@@Base+0x2c>  // b.any
    8408:	add	x9, x1, x0
    840c:	ands	x10, x9, #0xf
    8410:	b.eq	8444 <__hwasan_storeN_noabort@@Base+0x94>  // b.none
    8414:	ldrb	w11, [x8]
    8418:	lsr	x8, x9, #56
    841c:	cmp	w11, w8
    8420:	b.eq	8444 <__hwasan_storeN_noabort@@Base+0x94>  // b.none
    8424:	cmp	w11, #0xf
    8428:	b.hi	8448 <__hwasan_storeN_noabort@@Base+0x98>  // b.pmore
    842c:	cmp	x10, x11
    8430:	b.hi	8448 <__hwasan_storeN_noabort@@Base+0x98>  // b.pmore
    8434:	orr	x9, x9, #0xf
    8438:	ldrb	w9, [x9]
    843c:	cmp	w9, w8
    8440:	b.ne	8448 <__hwasan_storeN_noabort@@Base+0x98>  // b.any
    8444:	ret
    8448:	brk	#0x93f
    844c:	ret

0000000000008450 <__hwasan_store1_noabort@@Base>:
    8450:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8454:	ldr	x8, [x8, #3840]
    8458:	ubfx	x9, x0, #4, #52
    845c:	ldr	x8, [x8]
    8460:	ldrb	w9, [x8, x9]
    8464:	lsr	x8, x0, #56
    8468:	cmp	w9, w8
    846c:	b.eq	8494 <__hwasan_store1_noabort@@Base+0x44>  // b.none
    8470:	cmp	w9, #0xf
    8474:	b.hi	8498 <__hwasan_store1_noabort@@Base+0x48>  // b.pmore
    8478:	and	x10, x0, #0xf
    847c:	cmp	x10, x9
    8480:	b.cs	8498 <__hwasan_store1_noabort@@Base+0x48>  // b.hs, b.nlast
    8484:	orr	x9, x0, #0xf
    8488:	ldrb	w9, [x9]
    848c:	cmp	w9, w8
    8490:	b.ne	8498 <__hwasan_store1_noabort@@Base+0x48>  // b.any
    8494:	ret
    8498:	brk	#0x930
    849c:	ret

00000000000084a0 <__hwasan_store2_noabort@@Base>:
    84a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    84a4:	ldr	x8, [x8, #3840]
    84a8:	ubfx	x9, x0, #4, #52
    84ac:	ldr	x8, [x8]
    84b0:	ldrb	w9, [x8, x9]
    84b4:	lsr	x8, x0, #56
    84b8:	cmp	w9, w8
    84bc:	b.eq	84e8 <__hwasan_store2_noabort@@Base+0x48>  // b.none
    84c0:	cmp	w9, #0xf
    84c4:	b.hi	84ec <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    84c8:	and	x10, x0, #0xf
    84cc:	add	x10, x10, #0x2
    84d0:	cmp	x10, x9
    84d4:	b.hi	84ec <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    84d8:	orr	x9, x0, #0xf
    84dc:	ldrb	w9, [x9]
    84e0:	cmp	w9, w8
    84e4:	b.ne	84ec <__hwasan_store2_noabort@@Base+0x4c>  // b.any
    84e8:	ret
    84ec:	brk	#0x931
    84f0:	ret

00000000000084f4 <__hwasan_store4_noabort@@Base>:
    84f4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    84f8:	ldr	x8, [x8, #3840]
    84fc:	ubfx	x9, x0, #4, #52
    8500:	ldr	x8, [x8]
    8504:	ldrb	w9, [x8, x9]
    8508:	lsr	x8, x0, #56
    850c:	cmp	w9, w8
    8510:	b.eq	853c <__hwasan_store4_noabort@@Base+0x48>  // b.none
    8514:	cmp	w9, #0xf
    8518:	b.hi	8540 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    851c:	and	x10, x0, #0xf
    8520:	add	x10, x10, #0x4
    8524:	cmp	x10, x9
    8528:	b.hi	8540 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    852c:	orr	x9, x0, #0xf
    8530:	ldrb	w9, [x9]
    8534:	cmp	w9, w8
    8538:	b.ne	8540 <__hwasan_store4_noabort@@Base+0x4c>  // b.any
    853c:	ret
    8540:	brk	#0x932
    8544:	ret

0000000000008548 <__hwasan_store8_noabort@@Base>:
    8548:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    854c:	ldr	x8, [x8, #3840]
    8550:	ubfx	x9, x0, #4, #52
    8554:	ldr	x8, [x8]
    8558:	ldrb	w9, [x8, x9]
    855c:	lsr	x8, x0, #56
    8560:	cmp	w9, w8
    8564:	b.eq	8590 <__hwasan_store8_noabort@@Base+0x48>  // b.none
    8568:	cmp	w9, #0xf
    856c:	b.hi	8594 <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    8570:	and	x10, x0, #0xf
    8574:	add	x10, x10, #0x8
    8578:	cmp	x10, x9
    857c:	b.hi	8594 <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    8580:	orr	x9, x0, #0xf
    8584:	ldrb	w9, [x9]
    8588:	cmp	w9, w8
    858c:	b.ne	8594 <__hwasan_store8_noabort@@Base+0x4c>  // b.any
    8590:	ret
    8594:	brk	#0x933
    8598:	ret

000000000000859c <__hwasan_store16_noabort@@Base>:
    859c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    85a0:	ldr	x8, [x8, #3840]
    85a4:	ubfx	x9, x0, #4, #52
    85a8:	ldr	x8, [x8]
    85ac:	ldrb	w9, [x8, x9]
    85b0:	lsr	x8, x0, #56
    85b4:	cmp	w9, w8
    85b8:	b.eq	85e4 <__hwasan_store16_noabort@@Base+0x48>  // b.none
    85bc:	cmp	w9, #0xf
    85c0:	b.hi	85e8 <__hwasan_store16_noabort@@Base+0x4c>  // b.pmore
    85c4:	mov	w10, #0x10                  	// #16
    85c8:	bfxil	x10, x0, #0, #4
    85cc:	cmp	x10, x9
    85d0:	b.hi	85e8 <__hwasan_store16_noabort@@Base+0x4c>  // b.pmore
    85d4:	orr	x9, x0, #0xf
    85d8:	ldrb	w9, [x9]
    85dc:	cmp	w9, w8
    85e0:	b.ne	85e8 <__hwasan_store16_noabort@@Base+0x4c>  // b.any
    85e4:	ret
    85e8:	brk	#0x934
    85ec:	ret

00000000000085f0 <__hwasan_tag_memory@@Base>:
    85f0:	mov	w8, w1
    85f4:	mov	x1, x2
    85f8:	mov	w2, w8
    85fc:	b	e2e8 <__hwasan_memmove@@Base+0x168>

0000000000008600 <__hwasan_tag_pointer@@Base>:
    8600:	bfi	x0, x1, #56, #8
    8604:	ret

0000000000008608 <__hwasan_handle_longjmp@@Base>:
    8608:	stp	x29, x30, [sp, #-16]!
    860c:	mov	x29, sp
    8610:	lsr	x8, x0, #56
    8614:	cbnz	x8, 865c <__hwasan_handle_longjmp@@Base+0x54>
    8618:	mov	x2, x0
    861c:	subs	x3, x0, x29
    8620:	b.cc	8648 <__hwasan_handle_longjmp@@Base+0x40>  // b.lo, b.ul, b.last
    8624:	mov	w8, #0x1                   	// #1
    8628:	movk	w8, #0x400, lsl #16
    862c:	cmp	x3, x8
    8630:	b.cs	8648 <__hwasan_handle_longjmp@@Base+0x40>  // b.hs, b.nlast
    8634:	mov	x0, x29
    8638:	mov	x1, x3
    863c:	mov	w2, wzr
    8640:	ldp	x29, x30, [sp], #16
    8644:	b	e420 <__hwasan_memmove@@Base+0x2a0>
    8648:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    864c:	add	x0, x0, #0xff5
    8650:	mov	x1, x29
    8654:	ldp	x29, x30, [sp], #16
    8658:	b	1cafc <__sanitizer_on_print@@Base+0xac>
    865c:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    8660:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    8664:	add	x0, x0, #0xef0
    8668:	add	x2, x2, #0xfce
    866c:	mov	w1, #0x228                 	// #552
    8670:	mov	x3, xzr
    8674:	mov	x4, xzr
    8678:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000867c <__hwasan_handle_vfork@@Base>:
    867c:	stp	x30, x19, [sp, #-16]!
    8680:	mov	x19, x0
    8684:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8688:	cbz	x0, 86cc <__hwasan_handle_vfork@@Base+0x50>
    868c:	ldp	x1, x3, [x0, #8]
    8690:	cmp	x1, x19
    8694:	b.ls	86b8 <__hwasan_handle_vfork@@Base+0x3c>  // b.plast
    8698:	sub	x8, x3, #0x1
    869c:	cmp	x8, x19
    86a0:	b.cs	86b8 <__hwasan_handle_vfork@@Base+0x3c>  // b.hs, b.nlast
    86a4:	sub	x1, x19, x3
    86a8:	mov	x0, x3
    86ac:	mov	w2, wzr
    86b0:	ldp	x30, x19, [sp], #16
    86b4:	b	e420 <__hwasan_memmove@@Base+0x2a0>
    86b8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    86bc:	add	x0, x0, #0x8a
    86c0:	mov	x2, x19
    86c4:	ldp	x30, x19, [sp], #16
    86c8:	b	1cafc <__sanitizer_on_print@@Base+0xac>
    86cc:	adrp	x0, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    86d0:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    86d4:	add	x0, x0, #0xef0
    86d8:	add	x2, x2, #0xf2f
    86dc:	mov	w1, #0x23a                 	// #570
    86e0:	mov	x3, xzr
    86e4:	mov	x4, xzr
    86e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    86ec:	b	d8a8 <__hwasan_thread_exit@@Base+0x48>

00000000000086f0 <__hwasan_print_memory_usage@@Base>:
    86f0:	sub	sp, sp, #0x70
    86f4:	stp	x30, x23, [sp, #64]
    86f8:	stp	x22, x21, [sp, #80]
    86fc:	stp	x20, x19, [sp, #96]
    8700:	add	x0, sp, #0x10
    8704:	mov	w1, #0x1000                	// #4096
    8708:	stp	xzr, xzr, [sp, #24]
    870c:	str	xzr, [sp, #16]
    8710:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    8714:	ldr	x8, [sp, #32]
    8718:	cmp	x8, #0xfff
    871c:	b.hi	8754 <__hwasan_print_memory_usage@@Base+0x64>  // b.pmore
    8720:	ldr	x9, [sp, #24]
    8724:	cmp	x9, #0xfff
    8728:	b.hi	873c <__hwasan_print_memory_usage@@Base+0x4c>  // b.pmore
    872c:	add	x0, sp, #0x10
    8730:	mov	w1, #0x1000                	// #4096
    8734:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    8738:	ldr	x8, [sp, #32]
    873c:	ldr	x9, [sp, #16]
    8740:	mov	w10, #0x1000                	// #4096
    8744:	sub	x2, x10, x8
    8748:	mov	w1, wzr
    874c:	add	x0, x9, x8
    8750:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    8754:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    8758:	ldr	q0, [x8, #3808]
    875c:	ldr	x8, [sp, #16]
    8760:	str	q0, [sp, #32]
    8764:	strb	wzr, [x8]
    8768:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    876c:	mov	x19, x0
    8770:	add	x0, x0, #0x48
    8774:	mov	w8, #0x1                   	// #1
    8778:	ldaxrb	w9, [x0]
    877c:	stlxrb	w10, w8, [x0]
    8780:	cbnz	w10, 8778 <__hwasan_print_memory_usage@@Base+0x88>
    8784:	cbz	w9, 878c <__hwasan_print_memory_usage@@Base+0x9c>
    8788:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    878c:	ldp	x20, x21, [x19, #56]
    8790:	dmb	ish
    8794:	strb	wzr, [x19, #72]
    8798:	bl	237fc <__sanitizer_cov_pcs_init@@Base+0x5c8>
    879c:	mov	x22, x0
    87a0:	add	x0, sp, #0x30
    87a4:	bl	8e7c <__sanitizer_print_stack_trace@@Base+0x624>
    87a8:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
    87ac:	mov	x23, x0
    87b0:	bl	20e34 <__sanitizer_sandbox_on_notify@@Base+0x7b4>
    87b4:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    87b8:	ldrsw	x9, [x9, #3300]
    87bc:	ldr	x8, [x19, #16]
    87c0:	mov	w10, #0x18                  	// #24
    87c4:	orr	x11, xzr, #0x10
    87c8:	madd	x10, x9, x10, x11
    87cc:	cmp	w9, #0x0
    87d0:	ldp	x12, x7, [x22]
    87d4:	csel	x9, xzr, x10, eq  // eq = none
    87d8:	ldr	x10, [sp, #56]
    87dc:	add	x8, x8, x9
    87e0:	add	x8, x8, #0xa80
    87e4:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    87e8:	mov	x3, x0
    87ec:	mul	x6, x8, x20
    87f0:	add	x1, x1, #0x963
    87f4:	add	x0, sp, #0x10
    87f8:	mov	x2, x23
    87fc:	mov	x4, x20
    8800:	mov	x5, x21
    8804:	stp	x12, x10, [sp]
    8808:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    880c:	ldr	x1, [sp, #16]
    8810:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
    8814:	add	x0, x0, #0x22b
    8818:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    881c:	ldp	x0, x1, [sp, #16]
    8820:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    8824:	ldp	x20, x19, [sp, #96]
    8828:	ldp	x22, x21, [sp, #80]
    882c:	ldp	x30, x23, [sp, #64]
    8830:	add	sp, sp, #0x70
    8834:	ret

0000000000008838 <__hwasan_generate_tag@@Base>:
    8838:	str	x30, [sp, #-16]!
    883c:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8840:	cbz	x0, 884c <__hwasan_generate_tag@@Base+0x14>
    8844:	ldr	x30, [sp], #16
    8848:	b	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    884c:	mov	w0, #0xbb                  	// #187
    8850:	ldr	x30, [sp], #16
    8854:	ret

0000000000008858 <__sanitizer_print_stack_trace@@Base>:
    8858:	stp	x29, x30, [sp, #-32]!
    885c:	str	x28, [sp, #16]
    8860:	mov	x29, sp
    8864:	sub	sp, sp, #0x820
    8868:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    886c:	ldr	w9, [x9, #3336]
    8870:	add	x8, sp, #0x8
    8874:	add	x8, x8, #0x10
    8878:	stp	x8, xzr, [sp, #8]
    887c:	str	xzr, [sp, #2072]
    8880:	cbz	w9, 88b0 <__sanitizer_print_stack_trace@@Base+0x58>
    8884:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    8888:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    888c:	ldr	x8, [x8, #4056]
    8890:	mov	x1, x0
    8894:	add	x0, sp, #0x8
    8898:	mov	w5, #0x100                 	// #256
    889c:	ldrb	w4, [x8, #33]
    88a0:	mov	x2, x29
    88a4:	mov	x3, xzr
    88a8:	str	x29, [sp, #2072]
    88ac:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    88b0:	add	x0, sp, #0x8
    88b4:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    88b8:	add	sp, sp, #0x820
    88bc:	ldr	x28, [sp, #16]
    88c0:	ldp	x29, x30, [sp], #32
    88c4:	ret
    88c8:	str	x30, [sp, #-16]!
    88cc:	ldr	x8, [x0]
    88d0:	ldr	x1, [x0, #16]
    88d4:	ldrh	w2, [x0, #24]
    88d8:	mov	x0, x8
    88dc:	bl	71bc <__hwasan_init_static@@Base+0x68>
    88e0:	mov	w0, wzr
    88e4:	ldr	x30, [sp], #16
    88e8:	ret
    88ec:	str	x30, [sp, #-32]!
    88f0:	stp	x20, x19, [sp, #16]
    88f4:	mov	x19, x0
    88f8:	add	x0, x0, #0x30
    88fc:	mov	w8, #0x1                   	// #1
    8900:	ldaxrb	w9, [x0]
    8904:	stlxrb	w10, w8, [x0]
    8908:	cbnz	w10, 8900 <__sanitizer_print_stack_trace@@Base+0xa8>
    890c:	cbz	w9, 8914 <__sanitizer_print_stack_trace@@Base+0xbc>
    8910:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    8914:	ldr	x20, [x19, #32]
    8918:	cbz	x20, 893c <__sanitizer_print_stack_trace@@Base+0xe4>
    891c:	ldr	x9, [x19, #16]
    8920:	ldr	x8, [x20, #2664]
    8924:	mov	w1, wzr
    8928:	sub	x0, x20, x9
    892c:	add	x2, x9, #0xa80
    8930:	str	x8, [x19, #32]
    8934:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    8938:	b	8970 <__sanitizer_print_stack_trace@@Base+0x118>
    893c:	ldr	x8, [x19, #16]
    8940:	ldr	x9, [x19]
    8944:	lsl	x10, x8, #1
    8948:	sub	x10, x10, #0x1
    894c:	tst	x10, x9
    8950:	b.ne	89e4 <__sanitizer_print_stack_trace@@Base+0x18c>  // b.any
    8954:	ldr	x10, [x19, #24]
    8958:	ldr	x11, [x19, #8]
    895c:	add	x10, x10, x9
    8960:	cmp	x10, x11
    8964:	str	x10, [x19]
    8968:	b.hi	89fc <__sanitizer_print_stack_trace@@Base+0x1a4>  // b.pmore
    896c:	add	x20, x9, x8
    8970:	ldr	x8, [x19, #40]
    8974:	mov	x0, x20
    8978:	str	x8, [x20, #2664]
    897c:	str	x20, [x19, #40]
    8980:	dmb	ish
    8984:	strb	wzr, [x19, #48]
    8988:	ldr	x2, [x19, #16]
    898c:	sub	x1, x20, x2
    8990:	bl	10e80 <__hwasan_tag_mismatch_v2@@Base+0x230>
    8994:	add	x0, x19, #0x48
    8998:	mov	w8, #0x1                   	// #1
    899c:	ldaxrb	w9, [x0]
    89a0:	stlxrb	w10, w8, [x0]
    89a4:	cbnz	w10, 899c <__sanitizer_print_stack_trace@@Base+0x144>
    89a8:	cbz	w9, 89b0 <__sanitizer_print_stack_trace@@Base+0x158>
    89ac:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    89b0:	ldp	x8, x9, [x19, #56]
    89b4:	mov	x0, x20
    89b8:	add	x8, x8, #0x1
    89bc:	str	x8, [x19, #56]
    89c0:	ldp	x8, x10, [x20, #8]
    89c4:	sub	x8, x8, x10
    89c8:	add	x8, x8, x9
    89cc:	str	x8, [x19, #64]
    89d0:	dmb	ish
    89d4:	strb	wzr, [x19, #72]
    89d8:	ldp	x20, x19, [sp, #16]
    89dc:	ldr	x30, [sp], #32
    89e0:	ret
    89e4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    89e8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    89ec:	add	x0, x0, #0x154
    89f0:	add	x2, x2, #0x19d
    89f4:	mov	w1, #0xc0                  	// #192
    89f8:	b	8a10 <__sanitizer_print_stack_trace@@Base+0x1b8>
    89fc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8a00:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8a04:	add	x0, x0, #0x154
    8a08:	add	x2, x2, #0x1c6
    8a0c:	mov	w1, #0xc3                  	// #195
    8a10:	mov	x3, xzr
    8a14:	mov	x4, xzr
    8a18:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    8a1c:	stp	x30, x21, [sp, #-32]!
    8a20:	stp	x20, x19, [sp, #16]
    8a24:	mov	x19, x0
    8a28:	mov	w20, wzr
    8a2c:	mov	w21, #0x1                   	// #1
    8a30:	b	8a38 <__sanitizer_print_stack_trace@@Base+0x1e0>
    8a34:	add	w20, w20, #0x1
    8a38:	cmp	w20, #0x9
    8a3c:	b.hi	8a4c <__sanitizer_print_stack_trace@@Base+0x1f4>  // b.pmore
    8a40:	ldrb	w8, [x19]
    8a44:	cbnz	w8, 8a34 <__sanitizer_print_stack_trace@@Base+0x1dc>
    8a48:	b	8a58 <__sanitizer_print_stack_trace@@Base+0x200>
    8a4c:	bl	19c08 <__sanitizer_set_report_fd@@Base+0x35c4>
    8a50:	ldrb	w8, [x19]
    8a54:	cbnz	w8, 8a34 <__sanitizer_print_stack_trace@@Base+0x1dc>
    8a58:	ldaxrb	w8, [x19]
    8a5c:	stlxrb	w9, w21, [x19]
    8a60:	cbnz	w9, 8a58 <__sanitizer_print_stack_trace@@Base+0x200>
    8a64:	cbnz	w8, 8a34 <__sanitizer_print_stack_trace@@Base+0x1dc>
    8a68:	ldp	x20, x19, [sp, #16]
    8a6c:	ldp	x30, x21, [sp], #32
    8a70:	ret
    8a74:	str	x30, [sp, #-32]!
    8a78:	stp	x20, x19, [sp, #16]
    8a7c:	ldr	x20, [x0, #8]
    8a80:	mov	x19, x1
    8a84:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8a88:	add	x1, x1, #0x3ed
    8a8c:	mov	x0, x19
    8a90:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8a94:	cbz	w0, 8b1c <__sanitizer_print_stack_trace@@Base+0x2c4>
    8a98:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8a9c:	add	x1, x1, #0x821
    8aa0:	mov	x0, x19
    8aa4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8aa8:	cbz	w0, 8b1c <__sanitizer_print_stack_trace@@Base+0x2c4>
    8aac:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8ab0:	add	x1, x1, #0x5dc
    8ab4:	mov	x0, x19
    8ab8:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8abc:	cbz	w0, 8b1c <__sanitizer_print_stack_trace@@Base+0x2c4>
    8ac0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    8ac4:	add	x1, x1, #0x6d7
    8ac8:	mov	x0, x19
    8acc:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8ad0:	cbz	w0, 8b30 <__sanitizer_print_stack_trace@@Base+0x2d8>
    8ad4:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8ad8:	add	x1, x1, #0x824
    8adc:	mov	x0, x19
    8ae0:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8ae4:	cbz	w0, 8b30 <__sanitizer_print_stack_trace@@Base+0x2d8>
    8ae8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8aec:	add	x1, x1, #0x5cc
    8af0:	mov	x0, x19
    8af4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
    8af8:	cbz	w0, 8b30 <__sanitizer_print_stack_trace@@Base+0x2d8>
    8afc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8b00:	add	x0, x0, #0x7f5
    8b04:	mov	x1, x19
    8b08:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    8b0c:	mov	w0, wzr
    8b10:	ldp	x20, x19, [sp, #16]
    8b14:	ldr	x30, [sp], #32
    8b18:	ret
    8b1c:	strb	wzr, [x20]
    8b20:	mov	w0, #0x1                   	// #1
    8b24:	ldp	x20, x19, [sp, #16]
    8b28:	ldr	x30, [sp], #32
    8b2c:	ret
    8b30:	mov	w0, #0x1                   	// #1
    8b34:	strb	w0, [x20]
    8b38:	ldp	x20, x19, [sp, #16]
    8b3c:	ldr	x30, [sp], #32
    8b40:	ret
    8b44:	stp	x30, x19, [sp, #-16]!
    8b48:	ldr	x8, [x0, #8]
    8b4c:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8b50:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8b54:	mov	x19, x2
    8b58:	ldrb	w8, [x8]
    8b5c:	add	x9, x9, #0x5cc
    8b60:	add	x10, x10, #0x5dc
    8b64:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    8b68:	cmp	w8, #0x0
    8b6c:	csel	x3, x10, x9, eq  // eq = none
    8b70:	add	x2, x2, #0xba0
    8b74:	mov	x0, x1
    8b78:	mov	x1, x19
    8b7c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
    8b80:	sxtw	x8, w0
    8b84:	cmp	x8, x19
    8b88:	cset	w0, cc  // cc = lo, ul, last
    8b8c:	ldp	x30, x19, [sp], #16
    8b90:	ret
    8b94:	str	x30, [sp, #-32]!
    8b98:	stp	x20, x19, [sp, #16]
    8b9c:	mov	x19, x1
    8ba0:	mov	x20, x0
    8ba4:	add	x1, sp, #0x8
    8ba8:	mov	w2, #0xa                   	// #10
    8bac:	mov	x0, x19
    8bb0:	bl	187c4 <__sanitizer_set_report_fd@@Base+0x2180>
    8bb4:	ldr	x8, [x20, #8]
    8bb8:	str	w0, [x8]
    8bbc:	ldr	x8, [sp, #8]
    8bc0:	ldrb	w20, [x8]
    8bc4:	cbz	w20, 8bd8 <__sanitizer_print_stack_trace@@Base+0x380>
    8bc8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8bcc:	add	x0, x0, #0x828
    8bd0:	mov	x1, x19
    8bd4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    8bd8:	cmp	w20, #0x0
    8bdc:	ldp	x20, x19, [sp, #16]
    8be0:	cset	w0, eq  // eq = none
    8be4:	ldr	x30, [sp], #32
    8be8:	ret
    8bec:	stp	x30, x19, [sp, #-16]!
    8bf0:	ldr	x8, [x0, #8]
    8bf4:	mov	x19, x2
    8bf8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    8bfc:	mov	x0, x1
    8c00:	ldr	w3, [x8]
    8c04:	add	x2, x2, #0x268
    8c08:	mov	x1, x19
    8c0c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
    8c10:	sxtw	x8, w0
    8c14:	cmp	x8, x19
    8c18:	cset	w0, cc  // cc = lo, ul, last
    8c1c:	ldp	x30, x19, [sp], #16
    8c20:	ret
    8c24:	str	x30, [sp, #-32]!
    8c28:	stp	x20, x19, [sp, #16]
    8c2c:	mov	x19, x1
    8c30:	mov	x20, x0
    8c34:	add	x1, sp, #0x8
    8c38:	mov	w2, #0xa                   	// #10
    8c3c:	mov	x0, x19
    8c40:	bl	187c4 <__sanitizer_set_report_fd@@Base+0x2180>
    8c44:	ldr	x8, [x20, #8]
    8c48:	str	x0, [x8]
    8c4c:	ldr	x8, [sp, #8]
    8c50:	ldrb	w20, [x8]
    8c54:	cbz	w20, 8c68 <__sanitizer_print_stack_trace@@Base+0x410>
    8c58:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8c5c:	add	x0, x0, #0x853
    8c60:	mov	x1, x19
    8c64:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    8c68:	cmp	w20, #0x0
    8c6c:	ldp	x20, x19, [sp, #16]
    8c70:	cset	w0, eq  // eq = none
    8c74:	ldr	x30, [sp], #32
    8c78:	ret
    8c7c:	stp	x30, x19, [sp, #-16]!
    8c80:	ldr	x8, [x0, #8]
    8c84:	mov	x19, x2
    8c88:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8c8c:	mov	x0, x1
    8c90:	ldr	x3, [x8]
    8c94:	add	x2, x2, #0x87f
    8c98:	mov	x1, x19
    8c9c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
    8ca0:	sxtw	x8, w0
    8ca4:	cmp	x8, x19
    8ca8:	cset	w0, cc  // cc = lo, ul, last
    8cac:	ldp	x30, x19, [sp], #16
    8cb0:	ret
    8cb4:	stp	x30, x21, [sp, #-32]!
    8cb8:	stp	x20, x19, [sp, #16]
    8cbc:	cbz	x1, 8d44 <__sanitizer_print_stack_trace@@Base+0x4ec>
    8cc0:	ldr	x3, [x0, #16]
    8cc4:	mov	x20, x1
    8cc8:	mov	x19, x0
    8ccc:	cmp	x3, x1
    8cd0:	b.hi	8d64 <__sanitizer_print_stack_trace@@Base+0x50c>  // b.pmore
    8cd4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8cd8:	ldr	x21, [x21, #4016]
    8cdc:	ldr	x0, [x21]
    8ce0:	cbnz	x0, 8cec <__sanitizer_print_stack_trace@@Base+0x494>
    8ce4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    8ce8:	str	x0, [x21]
    8cec:	sub	x8, x0, #0x1
    8cf0:	tst	x0, x8
    8cf4:	b.ne	8d80 <__sanitizer_print_stack_trace@@Base+0x528>  // b.any
    8cf8:	add	x8, x20, x0
    8cfc:	sub	x8, x8, #0x1
    8d00:	neg	x9, x0
    8d04:	and	x20, x8, x9
    8d08:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d0c:	add	x1, x1, #0x950
    8d10:	mov	x0, x20
    8d14:	mov	w2, wzr
    8d18:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
    8d1c:	ldr	x1, [x19]
    8d20:	ldr	x2, [x19, #16]
    8d24:	mov	x21, x0
    8d28:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
    8d2c:	ldp	x0, x1, [x19]
    8d30:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    8d34:	stp	x21, x20, [x19]
    8d38:	ldp	x20, x19, [sp, #16]
    8d3c:	ldp	x30, x21, [sp], #32
    8d40:	ret
    8d44:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d48:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d4c:	add	x0, x0, #0x8be
    8d50:	add	x2, x2, #0x919
    8d54:	mov	w1, #0x20b                 	// #523
    8d58:	mov	x3, xzr
    8d5c:	mov	x4, xzr
    8d60:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    8d64:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d68:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d6c:	add	x0, x0, #0x8be
    8d70:	add	x2, x2, #0x932
    8d74:	mov	w1, #0x20c                 	// #524
    8d78:	mov	x4, x20
    8d7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    8d80:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    8d84:	add	x0, x0, #0x20f
    8d88:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    8d8c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    8d90:	ldr	x8, [x0, #8]
    8d94:	cbz	x8, 8db0 <__sanitizer_print_stack_trace@@Base+0x558>
    8d98:	ldr	w9, [x8, #4]
    8d9c:	cbz	w9, 8db0 <__sanitizer_print_stack_trace@@Base+0x558>
    8da0:	ldr	w8, [x8]
    8da4:	tst	w8, #0x7fffffff
    8da8:	cset	w0, ne  // ne = any
    8dac:	ret
    8db0:	mov	w0, wzr
    8db4:	ret
    8db8:	ldr	x8, [x0, #8]
    8dbc:	cbz	x8, 8dc8 <__sanitizer_print_stack_trace@@Base+0x570>
    8dc0:	ldr	w8, [x8]
    8dc4:	tbnz	w8, #31, 8dd0 <__sanitizer_print_stack_trace@@Base+0x578>
    8dc8:	ldr	x0, [x0]
    8dcc:	ret
    8dd0:	ldr	x9, [x0]
    8dd4:	and	w10, w8, #0xf
    8dd8:	mov	w11, #0x10                  	// #16
    8ddc:	sub	w10, w11, w10
    8de0:	tst	w8, #0xf
    8de4:	csel	w8, wzr, w10, eq  // eq = none
    8de8:	add	x0, x9, x8
    8dec:	ret
    8df0:	ldp	x8, x10, [x0]
    8df4:	ldr	w9, [x10]
    8df8:	cbz	x10, 8e18 <__sanitizer_print_stack_trace@@Base+0x5c0>
    8dfc:	tbz	w9, #31, 8e18 <__sanitizer_print_stack_trace@@Base+0x5c0>
    8e00:	and	w10, w9, #0xf
    8e04:	mov	w11, #0x10                  	// #16
    8e08:	sub	w10, w11, w10
    8e0c:	tst	w9, #0xf
    8e10:	csel	w10, wzr, w10, eq  // eq = none
    8e14:	add	x8, x8, x10
    8e18:	and	x9, x9, #0x7fffffff
    8e1c:	add	x0, x8, x9
    8e20:	ret
    8e24:	ldr	x8, [x0, #8]
    8e28:	ldr	w8, [x8]
    8e2c:	and	x0, x8, #0x7fffffff
    8e30:	ret
    8e34:	ldr	x8, [x0, #8]
    8e38:	ldr	w0, [x8, #4]
    8e3c:	ret
    8e40:	ldr	x1, [x0]
    8e44:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    8e48:	add	x0, x0, #0xd40
    8e4c:	b	a1fc <__sanitizer_get_allocated_size@@Base+0x228>
    8e50:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    8e54:	ldr	x8, [x0]
    8e58:	ldr	x9, [x9, #3424]
    8e5c:	mov	x10, #0x2000000000          	// #137438953472
    8e60:	cmp	x9, x8
    8e64:	add	x9, x9, x10
    8e68:	cset	w10, ls  // ls = plast
    8e6c:	cmp	x9, x8
    8e70:	cset	w8, hi  // hi = pmore
    8e74:	and	w0, w10, w8
    8e78:	ret
    8e7c:	stp	x30, x19, [sp, #-16]!
    8e80:	mov	w2, #0x10                  	// #16
    8e84:	mov	w1, wzr
    8e88:	mov	x19, x0
    8e8c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    8e90:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    8e94:	add	x8, x8, #0x0
    8e98:	mov	w9, #0x1                   	// #1
    8e9c:	ldaxrb	w10, [x8]
    8ea0:	stlxrb	w11, w9, [x8]
    8ea4:	cbnz	w11, 8e9c <__sanitizer_print_stack_trace@@Base+0x644>
    8ea8:	cbz	w10, 8eb8 <__sanitizer_print_stack_trace@@Base+0x660>
    8eac:	adrp	x0, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    8eb0:	add	x0, x0, #0x0
    8eb4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    8eb8:	ldp	x9, x8, [x19]
    8ebc:	adrp	x10, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    8ec0:	add	x10, x10, #0xfe0
    8ec4:	mov	x11, x10
    8ec8:	ldr	x12, [x11, #16]
    8ecc:	add	x9, x12, x9
    8ed0:	str	x9, [x19]
    8ed4:	ldr	x12, [x11, #24]
    8ed8:	add	x8, x12, x8
    8edc:	str	x8, [x19, #8]
    8ee0:	ldr	x11, [x11]
    8ee4:	cmp	x11, x10
    8ee8:	b.ne	8ec8 <__sanitizer_print_stack_trace@@Base+0x670>  // b.any
    8eec:	bic	x9, x9, x9, asr #63
    8ef0:	bic	x8, x8, x8, asr #63
    8ef4:	adrp	x10, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    8ef8:	stp	x9, x8, [x19]
    8efc:	dmb	ish
    8f00:	strb	wzr, [x10]
    8f04:	ldp	x30, x19, [sp], #16
    8f08:	ret
    8f0c:	str	x30, [sp, #-32]!
    8f10:	stp	x20, x19, [sp, #16]
    8f14:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    8f18:	ldrb	w8, [x0, #6]
    8f1c:	adrp	x19, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    8f20:	add	x19, x19, #0xd24
    8f24:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    8f28:	eor	w8, w8, #0x1
    8f2c:	strb	w8, [x19]
    8f30:	ldr	x20, [x20, #4056]
    8f34:	ldrb	w0, [x20, #59]
    8f38:	bl	12064 <_ZdaPvRKSt9nothrow_t@@Base+0x890>
    8f3c:	ldr	w1, [x20, #164]
    8f40:	add	x0, x19, #0x1c
    8f44:	bl	a2d0 <__sanitizer_get_allocated_size@@Base+0x2fc>
    8f48:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f4c:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f50:	strb	w0, [x19, #12]
    8f54:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f58:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f5c:	strb	w0, [x19, #13]
    8f60:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f64:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f68:	strb	w0, [x19, #14]
    8f6c:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f70:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f74:	strb	w0, [x19, #15]
    8f78:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f7c:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f80:	strb	w0, [x19, #16]
    8f84:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f88:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f8c:	strb	w0, [x19, #17]
    8f90:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8f94:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8f98:	strb	w0, [x19, #18]
    8f9c:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fa0:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fa4:	strb	w0, [x19, #19]
    8fa8:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fac:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fb0:	strb	w0, [x19, #20]
    8fb4:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fb8:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fbc:	strb	w0, [x19, #21]
    8fc0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fc4:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fc8:	strb	w0, [x19, #22]
    8fcc:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fd0:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fd4:	strb	w0, [x19, #23]
    8fd8:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fdc:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fe0:	strb	w0, [x19, #24]
    8fe4:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8fe8:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8fec:	strb	w0, [x19, #25]
    8ff0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    8ff4:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    8ff8:	strb	w0, [x19, #26]
    8ffc:	ldp	x20, x19, [sp, #16]
    9000:	ldr	x30, [sp], #32
    9004:	ret
    9008:	stp	x30, x23, [sp, #-48]!
    900c:	stp	x22, x21, [sp, #16]
    9010:	stp	x20, x19, [sp, #32]
    9014:	adrp	x21, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9018:	mov	x19, x0
    901c:	mov	w20, #0x1                   	// #1
    9020:	mov	w23, #0x50                  	// #80
    9024:	add	x21, x21, #0xd40
    9028:	madd	x22, x20, x23, x19
    902c:	ldr	w8, [x22]
    9030:	cbnz	w8, 904c <__sanitizer_print_stack_trace@@Base+0x7f4>
    9034:	add	x20, x20, #0x1
    9038:	cmp	x20, #0x20
    903c:	b.eq	9070 <__sanitizer_print_stack_trace@@Base+0x818>  // b.none
    9040:	madd	x22, x20, x23, x19
    9044:	ldr	w8, [x22]
    9048:	cbz	w8, 9034 <__sanitizer_print_stack_trace@@Base+0x7dc>
    904c:	mov	w4, w8
    9050:	mov	x0, x19
    9054:	mov	x1, x22
    9058:	mov	x2, x21
    905c:	mov	x3, x20
    9060:	bl	b35c <__sanitizer_get_allocated_size@@Base+0x1388>
    9064:	ldr	w8, [x22]
    9068:	cbnz	w8, 904c <__sanitizer_print_stack_trace@@Base+0x7f4>
    906c:	b	9034 <__sanitizer_print_stack_trace@@Base+0x7dc>
    9070:	ldp	x20, x19, [sp, #32]
    9074:	ldp	x22, x21, [sp, #16]
    9078:	ldp	x30, x23, [sp], #48
    907c:	ret
    9080:	stp	x30, x19, [sp, #-16]!
    9084:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9088:	ldr	x8, [x8, #3424]
    908c:	mov	x1, x0
    9090:	cmp	x8, x0
    9094:	b.hi	90cc <__sanitizer_print_stack_trace@@Base+0x874>  // b.pmore
    9098:	mov	x9, #0x2000000000          	// #137438953472
    909c:	add	x9, x8, x9
    90a0:	cmp	x9, x1
    90a4:	b.ls	90cc <__sanitizer_print_stack_trace@@Base+0x874>  // b.plast
    90a8:	sub	x10, x1, x8
    90ac:	ubfx	x11, x10, #32, #5
    90b0:	cmp	x11, #0x1f
    90b4:	b.eq	9170 <__sanitizer_print_stack_trace@@Base+0x918>  // b.none
    90b8:	cmp	x11, #0x11
    90bc:	b.cs	9100 <__sanitizer_print_stack_trace@@Base+0x8a8>  // b.hs, b.nlast
    90c0:	cbz	x11, 913c <__sanitizer_print_stack_trace@@Base+0x8e4>
    90c4:	lsl	x12, x11, #5
    90c8:	b	911c <__sanitizer_print_stack_trace@@Base+0x8c4>
    90cc:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    90d0:	add	x0, x0, #0xd70
    90d4:	bl	bee4 <__sanitizer_get_allocated_size@@Base+0x1f10>
    90d8:	mov	x19, x0
    90dc:	cbz	x19, 9160 <__sanitizer_print_stack_trace@@Base+0x908>
    90e0:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    90e4:	add	x0, x0, #0xd40
    90e8:	mov	x1, x19
    90ec:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    90f0:	mov	x1, x0
    90f4:	mov	x0, x19
    90f8:	ldp	x30, x19, [sp], #16
    90fc:	ret
    9100:	sub	x12, x11, #0x10
    9104:	mov	w13, #0x200                 	// #512
    9108:	lsr	x14, x12, #1
    910c:	lsl	x13, x13, x14
    9110:	lsr	x14, x13, #1
    9114:	and	x12, x12, #0x1
    9118:	madd	x12, x14, x12, x13
    911c:	mov	w13, #0xc0                  	// #192
    9120:	madd	x9, x11, x13, x9
    9124:	ldr	x11, [x9, #120]
    9128:	udiv	w9, w10, w12
    912c:	mul	x9, x12, x9
    9130:	add	x12, x9, x12
    9134:	cmp	x11, x12
    9138:	b.cs	9150 <__sanitizer_print_stack_trace@@Base+0x8f8>  // b.hs, b.nlast
    913c:	mov	x1, xzr
    9140:	mov	x19, xzr
    9144:	mov	x0, x19
    9148:	ldp	x30, x19, [sp], #16
    914c:	ret
    9150:	and	x10, x10, #0xffffffff00000000
    9154:	add	x8, x10, x8
    9158:	add	x19, x8, x9
    915c:	cbnz	x19, 90e0 <__sanitizer_print_stack_trace@@Base+0x888>
    9160:	mov	x1, xzr
    9164:	mov	x0, x19
    9168:	ldp	x30, x19, [sp], #16
    916c:	ret
    9170:	mov	w12, #0x40                  	// #64
    9174:	b	911c <__sanitizer_print_stack_trace@@Base+0x8c4>
    9178:	stp	x30, x19, [sp, #-16]!
    917c:	mov	x8, x0
    9180:	mov	w2, #0x8                   	// #8
    9184:	mov	x0, x1
    9188:	mov	x1, x8
    918c:	mov	w3, wzr
    9190:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9194:	mov	x19, x0
    9198:	cbz	x0, 91a8 <__sanitizer_print_stack_trace@@Base+0x950>
    919c:	mov	x0, x19
    91a0:	ldp	x30, x19, [sp], #16
    91a4:	ret
    91a8:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    91ac:	mov	x0, x19
    91b0:	ldp	x30, x19, [sp], #16
    91b4:	ret
    91b8:	str	x30, [sp, #-80]!
    91bc:	stp	x26, x25, [sp, #16]
    91c0:	stp	x24, x23, [sp, #32]
    91c4:	stp	x22, x21, [sp, #48]
    91c8:	stp	x20, x19, [sp, #64]
    91cc:	mov	w8, #0x80000001            	// #-2147483647
    91d0:	mov	x22, x1
    91d4:	cmp	x1, x8
    91d8:	mov	x21, x0
    91dc:	b.cc	9200 <__sanitizer_print_stack_trace@@Base+0x9a8>  // b.lo, b.ul, b.last
    91e0:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    91e4:	tbz	w0, #0, 9440 <__sanitizer_print_stack_trace@@Base+0xbe8>
    91e8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    91ec:	add	x0, x0, #0xa41
    91f0:	mov	x1, x22
    91f4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    91f8:	mov	x21, xzr
    91fc:	b	93e4 <__sanitizer_print_stack_trace@@Base+0xb8c>
    9200:	cmp	x2, #0x10
    9204:	mov	w8, #0x10                  	// #16
    9208:	csel	x24, x2, x8, hi  // hi = pmore
    920c:	cmp	x22, #0x0
    9210:	csinc	x20, x22, xzr, ne  // ne = any
    9214:	add	x8, x20, #0xf
    9218:	and	x19, x8, #0xfffffffffffffff0
    921c:	cmp	x19, x20
    9220:	b.cc	9450 <__sanitizer_print_stack_trace@@Base+0xbf8>  // b.lo, b.ul, b.last
    9224:	mov	w25, w3
    9228:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    922c:	mov	x23, x0
    9230:	cbz	x0, 934c <__sanitizer_print_stack_trace@@Base+0xaf4>
    9234:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9238:	add	x1, x23, #0x38
    923c:	add	x0, x0, #0xd40
    9240:	mov	x2, x19
    9244:	mov	x3, x24
    9248:	bl	a4a4 <__sanitizer_get_allocated_size@@Base+0x4d0>
    924c:	mov	x24, x0
    9250:	cbz	x0, 9398 <__sanitizer_print_stack_trace@@Base+0xb40>
    9254:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9258:	add	x0, x0, #0xd40
    925c:	mov	x1, x24
    9260:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    9264:	ldr	w8, [x0]
    9268:	mov	x26, x0
    926c:	bfxil	w8, w22, #0, #31
    9270:	str	w8, [x0]
    9274:	ldp	x0, x1, [x21]
    9278:	bl	23814 <__sanitizer_cov_pcs_init@@Base+0x5e0>
    927c:	ldr	w8, [x26]
    9280:	and	w8, w8, #0x7fffffff
    9284:	stp	w8, w0, [x26]
    9288:	tbz	w25, #0, 929c <__sanitizer_print_stack_trace@@Base+0xa44>
    928c:	mov	x0, x24
    9290:	mov	w1, wzr
    9294:	mov	x2, x19
    9298:	b	92cc <__sanitizer_print_stack_trace@@Base+0xa74>
    929c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    92a0:	ldr	w8, [x0, #8]
    92a4:	cmp	w8, #0x1
    92a8:	b.lt	92d0 <__sanitizer_print_stack_trace@@Base+0xa78>  // b.tstop
    92ac:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    92b0:	ldrsw	x8, [x0, #8]
    92b4:	cmp	x19, x8
    92b8:	csel	x25, x19, x8, cc  // cc = lo, ul, last
    92bc:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    92c0:	ldr	w1, [x0, #20]
    92c4:	mov	x0, x24
    92c8:	mov	x2, x25
    92cc:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    92d0:	cmp	x19, x22
    92d4:	b.eq	92f0 <__sanitizer_print_stack_trace@@Base+0xa98>  // b.none
    92d8:	mvn	x8, x22
    92dc:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    92e0:	add	x0, x24, x22
    92e4:	add	x2, x19, x8
    92e8:	add	x1, x1, #0xd30
    92ec:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
    92f0:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    92f4:	ldrb	w8, [x0, #1]
    92f8:	cbnz	w8, 9308 <__sanitizer_print_stack_trace@@Base+0xab0>
    92fc:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    9300:	ldrb	w8, [x0, #2]
    9304:	cbz	w8, 9344 <__sanitizer_print_stack_trace@@Base+0xaec>
    9308:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    930c:	ldrb	w8, [x8, #3364]
    9310:	cbz	w8, 9344 <__sanitizer_print_stack_trace@@Base+0xaec>
    9314:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    9318:	ldrb	w8, [x0, #1]
    931c:	cbz	w8, 93ac <__sanitizer_print_stack_trace@@Base+0xb54>
    9320:	mov	x0, x21
    9324:	mov	x1, x22
    9328:	bl	a0e4 <__sanitizer_get_allocated_size@@Base+0x110>
    932c:	tbz	w0, #0, 93ac <__sanitizer_print_stack_trace@@Base+0xb54>
    9330:	cbz	x23, 9400 <__sanitizer_print_stack_trace@@Base+0xba8>
    9334:	mov	x0, x23
    9338:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    933c:	mov	w22, w0
    9340:	b	9404 <__sanitizer_print_stack_trace@@Base+0xbac>
    9344:	mov	x21, x24
    9348:	b	93c0 <__sanitizer_print_stack_trace@@Base+0xb68>
    934c:	adrp	x26, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9350:	add	x26, x26, #0xd20
    9354:	mov	w8, #0x1                   	// #1
    9358:	ldaxrb	w9, [x26]
    935c:	stlxrb	w10, w8, [x26]
    9360:	cbnz	w10, 9358 <__sanitizer_print_stack_trace@@Base+0xb00>
    9364:	cbz	w9, 9374 <__sanitizer_print_stack_trace@@Base+0xb1c>
    9368:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    936c:	add	x0, x0, #0xd20
    9370:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    9374:	add	x0, x26, #0x20
    9378:	add	x1, x26, #0x2e8
    937c:	mov	x2, x19
    9380:	mov	x3, x24
    9384:	bl	a4a4 <__sanitizer_get_allocated_size@@Base+0x4d0>
    9388:	dmb	ish
    938c:	strb	wzr, [x26]
    9390:	mov	x24, x0
    9394:	cbnz	x0, 9254 <__sanitizer_print_stack_trace@@Base+0x9fc>
    9398:	bl	12040 <_ZdaPvRKSt9nothrow_t@@Base+0x86c>
    939c:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    93a0:	tbz	w0, #0, 9470 <__sanitizer_print_stack_trace@@Base+0xc18>
    93a4:	mov	x21, xzr
    93a8:	b	93e4 <__sanitizer_print_stack_trace@@Base+0xb8c>
    93ac:	mov	x0, x24
    93b0:	mov	x1, x19
    93b4:	mov	w2, wzr
    93b8:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    93bc:	mov	x21, x0
    93c0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    93c4:	ldr	x8, [x8, #3656]
    93c8:	cbz	x8, 93d8 <__sanitizer_print_stack_trace@@Base+0xb80>
    93cc:	mov	x0, x21
    93d0:	mov	x1, x19
    93d4:	bl	6a50 <__sanitizer_malloc_hook@plt>
    93d8:	mov	x0, x21
    93dc:	mov	x1, x19
    93e0:	bl	13ff0 <__sanitizer_report_error_summary@@Base+0x7a0>
    93e4:	mov	x0, x21
    93e8:	ldp	x20, x19, [sp, #64]
    93ec:	ldp	x22, x21, [sp, #48]
    93f0:	ldp	x24, x23, [sp, #32]
    93f4:	ldp	x26, x25, [sp, #16]
    93f8:	ldr	x30, [sp], #80
    93fc:	ret
    9400:	mov	w22, #0xbb                  	// #187
    9404:	and	x23, x20, #0xfffffffffffffff0
    9408:	mov	x0, x24
    940c:	mov	x1, x23
    9410:	mov	w2, w22
    9414:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    9418:	cmp	x23, x20
    941c:	mov	x21, x0
    9420:	b.eq	93c0 <__sanitizer_print_stack_trace@@Base+0xb68>  // b.none
    9424:	add	x23, x24, x23
    9428:	and	w2, w20, #0xf
    942c:	mov	w1, #0x10                  	// #16
    9430:	mov	x0, x23
    9434:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    9438:	strb	w22, [x23, #15]
    943c:	b	93c0 <__sanitizer_print_stack_trace@@Base+0xb68>
    9440:	mov	w1, #0x80000000            	// #-2147483648
    9444:	mov	x0, x22
    9448:	mov	x2, x21
    944c:	bl	23624 <__sanitizer_cov_pcs_init@@Base+0x3f0>
    9450:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    9454:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    9458:	add	x0, x0, #0x9cd
    945c:	add	x2, x2, #0xa7d
    9460:	mov	w1, #0x62                  	// #98
    9464:	mov	x3, x19
    9468:	mov	x4, x20
    946c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    9470:	mov	x0, x19
    9474:	mov	x1, x21
    9478:	bl	23674 <__sanitizer_cov_pcs_init@@Base+0x440>
    947c:	stp	x30, x21, [sp, #-32]!
    9480:	stp	x20, x19, [sp, #16]
    9484:	mov	x20, x1
    9488:	mov	x21, x0
    948c:	umulh	x8, x1, x0
    9490:	mov	x19, x2
    9494:	cbnz	x8, 94bc <__sanitizer_print_stack_trace@@Base+0xc64>
    9498:	mul	x1, x20, x21
    949c:	mov	w2, #0x8                   	// #8
    94a0:	mov	w3, #0x1                   	// #1
    94a4:	mov	x0, x19
    94a8:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    94ac:	cbz	x0, 94c4 <__sanitizer_print_stack_trace@@Base+0xc6c>
    94b0:	ldp	x20, x19, [sp, #16]
    94b4:	ldp	x30, x21, [sp], #32
    94b8:	ret
    94bc:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    94c0:	tbz	w0, #0, 94d8 <__sanitizer_print_stack_trace@@Base+0xc80>
    94c4:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    94c8:	mov	x0, xzr
    94cc:	ldp	x20, x19, [sp, #16]
    94d0:	ldp	x30, x21, [sp], #32
    94d4:	ret
    94d8:	mov	x0, x21
    94dc:	mov	x1, x20
    94e0:	mov	x2, x19
    94e4:	bl	23448 <__sanitizer_cov_pcs_init@@Base+0x214>
    94e8:	stp	x30, x23, [sp, #-48]!
    94ec:	stp	x22, x21, [sp, #16]
    94f0:	stp	x20, x19, [sp, #32]
    94f4:	mov	x19, x2
    94f8:	mov	x21, x1
    94fc:	cbz	x0, 95b4 <__sanitizer_print_stack_trace@@Base+0xd5c>
    9500:	mov	x20, x0
    9504:	cbz	x21, 95d8 <__sanitizer_print_stack_trace@@Base+0xd80>
    9508:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    950c:	ldr	x8, [x8, #3840]
    9510:	ubfx	x9, x20, #4, #52
    9514:	ldr	x8, [x8]
    9518:	ldrb	w9, [x8, x9]
    951c:	lsr	x8, x20, #56
    9520:	cmp	w9, w8
    9524:	b.eq	9558 <__sanitizer_print_stack_trace@@Base+0xd00>  // b.none
    9528:	cmp	w9, #0xf
    952c:	b.hi	954c <__sanitizer_print_stack_trace@@Base+0xcf4>  // b.pmore
    9530:	and	x10, x20, #0xf
    9534:	cmp	x10, x9
    9538:	b.cs	954c <__sanitizer_print_stack_trace@@Base+0xcf4>  // b.hs, b.nlast
    953c:	orr	x9, x20, #0xf
    9540:	ldrb	w9, [x9]
    9544:	cmp	w9, w8
    9548:	b.eq	9558 <__sanitizer_print_stack_trace@@Base+0xd00>  // b.none
    954c:	mov	x0, x19
    9550:	mov	x1, x20
    9554:	bl	ef90 <__hwasan_memmove@@Base+0xe10>
    9558:	mov	w2, #0x8                   	// #8
    955c:	mov	x0, x19
    9560:	mov	x1, x21
    9564:	mov	w3, wzr
    9568:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    956c:	mov	x22, x0
    9570:	cbz	x0, 95d0 <__sanitizer_print_stack_trace@@Base+0xd78>
    9574:	and	x23, x20, #0xffffffffffffff
    9578:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    957c:	add	x0, x0, #0xd40
    9580:	mov	x1, x23
    9584:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    9588:	ldr	w8, [x0]
    958c:	and	x0, x22, #0xffffffffffffff
    9590:	mov	x1, x23
    9594:	and	x8, x8, #0x7fffffff
    9598:	cmp	x8, x21
    959c:	csel	x2, x21, x8, hi  // hi = pmore
    95a0:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
    95a4:	mov	x0, x19
    95a8:	mov	x1, x20
    95ac:	bl	95fc <__sanitizer_print_stack_trace@@Base+0xda4>
    95b0:	b	95e8 <__sanitizer_print_stack_trace@@Base+0xd90>
    95b4:	mov	w2, #0x8                   	// #8
    95b8:	mov	x0, x19
    95bc:	mov	x1, x21
    95c0:	mov	w3, wzr
    95c4:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    95c8:	mov	x22, x0
    95cc:	cbnz	x0, 95e8 <__sanitizer_print_stack_trace@@Base+0xd90>
    95d0:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    95d4:	b	95e8 <__sanitizer_print_stack_trace@@Base+0xd90>
    95d8:	mov	x0, x19
    95dc:	mov	x1, x20
    95e0:	bl	95fc <__sanitizer_print_stack_trace@@Base+0xda4>
    95e4:	mov	x22, xzr
    95e8:	mov	x0, x22
    95ec:	ldp	x20, x19, [sp, #32]
    95f0:	ldp	x22, x21, [sp, #16]
    95f4:	ldp	x30, x23, [sp], #48
    95f8:	ret
    95fc:	str	x30, [sp, #-96]!
    9600:	stp	x28, x27, [sp, #16]
    9604:	stp	x26, x25, [sp, #32]
    9608:	stp	x24, x23, [sp, #48]
    960c:	stp	x22, x21, [sp, #64]
    9610:	stp	x20, x19, [sp, #80]
    9614:	mov	x19, x1
    9618:	cbz	x1, 99b8 <__sanitizer_print_stack_trace@@Base+0x1160>
    961c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    9620:	ldr	x8, [x8, #3952]
    9624:	mov	x24, x0
    9628:	cbz	x8, 9634 <__sanitizer_print_stack_trace@@Base+0xddc>
    962c:	mov	x0, x19
    9630:	bl	6d90 <__sanitizer_free_hook@plt>
    9634:	mov	x0, x19
    9638:	bl	14084 <__sanitizer_report_error_summary@@Base+0x834>
    963c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    9640:	ldr	x8, [x8, #3840]
    9644:	ubfx	x9, x19, #4, #52
    9648:	ldr	x8, [x8]
    964c:	ldrb	w9, [x8, x9]
    9650:	lsr	x8, x19, #56
    9654:	cmp	w9, w8
    9658:	b.eq	968c <__sanitizer_print_stack_trace@@Base+0xe34>  // b.none
    965c:	cmp	w9, #0xf
    9660:	b.hi	9680 <__sanitizer_print_stack_trace@@Base+0xe28>  // b.pmore
    9664:	and	x10, x19, #0xf
    9668:	cmp	x10, x9
    966c:	b.cs	9680 <__sanitizer_print_stack_trace@@Base+0xe28>  // b.hs, b.nlast
    9670:	orr	x9, x19, #0xf
    9674:	ldrb	w9, [x9]
    9678:	cmp	w9, w8
    967c:	b.eq	968c <__sanitizer_print_stack_trace@@Base+0xe34>  // b.none
    9680:	mov	x0, x24
    9684:	mov	x1, x19
    9688:	bl	ef90 <__hwasan_memmove@@Base+0xe10>
    968c:	adrp	x21, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9690:	and	x20, x19, #0xfffffffffffff0
    9694:	add	x21, x21, #0xd40
    9698:	mov	x0, x21
    969c:	mov	x1, x20
    96a0:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    96a4:	mov	x26, x0
    96a8:	ldr	w8, [x0]
    96ac:	ldp	x0, x1, [x24]
    96b0:	and	x22, x8, #0x7fffffff
    96b4:	bl	23814 <__sanitizer_cov_pcs_init@@Base+0x5e0>
    96b8:	cmp	w22, #0x0
    96bc:	csinc	w4, w22, wzr, ne  // ne = any
    96c0:	add	w8, w4, #0xf
    96c4:	and	x25, x8, #0xfffffff0
    96c8:	cmp	x25, x4
    96cc:	b.cc	99d8 <__sanitizer_print_stack_trace@@Base+0x1180>  // b.lo, b.ul, b.last
    96d0:	ldr	w28, [x26, #4]
    96d4:	mov	w23, w0
    96d8:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    96dc:	cmp	x25, x22
    96e0:	b.eq	9734 <__sanitizer_print_stack_trace@@Base+0xedc>  // b.none
    96e4:	cbz	w22, 9734 <__sanitizer_print_stack_trace@@Base+0xedc>
    96e8:	ldrb	w8, [x0, #12]
    96ec:	cbz	w8, 9734 <__sanitizer_print_stack_trace@@Base+0xedc>
    96f0:	mvn	x8, x22
    96f4:	add	x3, x25, x8
    96f8:	cmp	x3, #0x10
    96fc:	b.cs	99f4 <__sanitizer_print_stack_trace@@Base+0x119c>  // b.hs, b.nlast
    9700:	cbz	x3, 9734 <__sanitizer_print_stack_trace@@Base+0xedc>
    9704:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9708:	add	x0, x20, x22
    970c:	add	x1, x1, #0xd30
    9710:	mov	x2, x3
    9714:	bl	18960 <__sanitizer_set_report_fd@@Base+0x231c>
    9718:	cbz	w0, 9734 <__sanitizer_print_stack_trace@@Base+0xedc>
    971c:	adrp	x3, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9720:	add	x3, x3, #0xd30
    9724:	mov	x0, x24
    9728:	mov	x1, x19
    972c:	mov	x2, x22
    9730:	bl	100bc <__hwasan_memmove@@Base+0x1f3c>
    9734:	ldr	w8, [x26]
    9738:	and	w8, w8, #0x80000000
    973c:	stp	w8, wzr, [x26]
    9740:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    9744:	mov	x26, x0
    9748:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    974c:	ldr	w8, [x0, #16]
    9750:	cmp	w8, #0x1
    9754:	b.lt	977c <__sanitizer_print_stack_trace@@Base+0xf24>  // b.tstop
    9758:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    975c:	ldrsw	x8, [x0, #16]
    9760:	cmp	x25, x8
    9764:	csel	x27, x25, x8, cc  // cc = lo, ul, last
    9768:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    976c:	ldr	w1, [x0, #24]
    9770:	mov	x0, x20
    9774:	mov	x2, x27
    9778:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    977c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    9780:	ldrb	w8, [x0, #2]
    9784:	cbz	w8, 97d0 <__sanitizer_print_stack_trace@@Base+0xf78>
    9788:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    978c:	ldr	x27, [x0, #40]
    9790:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    9794:	ldr	x8, [x0, #48]
    9798:	orr	x9, x8, x27
    979c:	cbnz	x9, 990c <__sanitizer_print_stack_trace@@Base+0x10b4>
    97a0:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    97a4:	ldrb	w8, [x8, #3364]
    97a8:	cbz	w8, 97d0 <__sanitizer_print_stack_trace@@Base+0xf78>
    97ac:	cbz	x26, 97c0 <__sanitizer_print_stack_trace@@Base+0xf68>
    97b0:	mov	x0, x26
    97b4:	bl	10ddc <__hwasan_tag_mismatch_v2@@Base+0x18c>
    97b8:	mov	w2, w0
    97bc:	b	97c4 <__sanitizer_print_stack_trace@@Base+0xf6c>
    97c0:	mov	w2, #0xbc                  	// #188
    97c4:	mov	x0, x20
    97c8:	mov	x1, x25
    97cc:	bl	e2e8 <__hwasan_memmove@@Base+0x168>
    97d0:	cbz	x26, 981c <__sanitizer_print_stack_trace@@Base+0xfc4>
    97d4:	cbz	x20, 9810 <__sanitizer_print_stack_trace@@Base+0xfb8>
    97d8:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    97dc:	ldr	x9, [x8, #3424]
    97e0:	subs	x8, x20, x9
    97e4:	b.cc	9880 <__sanitizer_print_stack_trace@@Base+0x1028>  // b.lo, b.ul, b.last
    97e8:	mov	x10, #0x2000000000          	// #137438953472
    97ec:	add	x9, x9, x10
    97f0:	cmp	x9, x20
    97f4:	b.ls	9880 <__sanitizer_print_stack_trace@@Base+0x1028>  // b.plast
    97f8:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    97fc:	add	x0, x26, #0x38
    9800:	ubfx	x2, x8, #32, #5
    9804:	add	x1, x1, #0xd40
    9808:	mov	x3, x20
    980c:	bl	b0a8 <__sanitizer_get_allocated_size@@Base+0x10d4>
    9810:	ldr	x8, [x26, #2648]
    9814:	cbnz	x8, 989c <__sanitizer_print_stack_trace@@Base+0x1044>
    9818:	b	98f0 <__sanitizer_print_stack_trace@@Base+0x1098>
    981c:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9820:	add	x8, x8, #0xd20
    9824:	mov	w9, #0x1                   	// #1
    9828:	ldaxrb	w10, [x8]
    982c:	stlxrb	w11, w9, [x8]
    9830:	cbnz	w11, 9828 <__sanitizer_print_stack_trace@@Base+0xfd0>
    9834:	cbz	w10, 9844 <__sanitizer_print_stack_trace@@Base+0xfec>
    9838:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    983c:	add	x0, x0, #0xd20
    9840:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    9844:	cbz	x20, 98e4 <__sanitizer_print_stack_trace@@Base+0x108c>
    9848:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    984c:	ldr	x9, [x8, #3424]
    9850:	subs	x8, x20, x9
    9854:	b.cc	98d0 <__sanitizer_print_stack_trace@@Base+0x1078>  // b.lo, b.ul, b.last
    9858:	mov	x10, #0x2000000000          	// #137438953472
    985c:	add	x9, x9, x10
    9860:	cmp	x9, x20
    9864:	b.ls	98d0 <__sanitizer_print_stack_trace@@Base+0x1078>  // b.plast
    9868:	ubfx	x2, x8, #32, #5
    986c:	add	x0, x21, #0x2c8
    9870:	mov	x1, x21
    9874:	mov	x3, x20
    9878:	bl	b0a8 <__sanitizer_get_allocated_size@@Base+0x10d4>
    987c:	b	98e4 <__sanitizer_print_stack_trace@@Base+0x108c>
    9880:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9884:	add	x0, x0, #0xd70
    9888:	add	x1, x0, #0x270
    988c:	mov	x2, x20
    9890:	bl	b22c <__sanitizer_get_allocated_size@@Base+0x1258>
    9894:	ldr	x8, [x26, #2648]
    9898:	cbz	x8, 98f0 <__sanitizer_print_stack_trace@@Base+0x1098>
    989c:	mov	x9, x8
    98a0:	ldr	x10, [x9, #8]!
    98a4:	str	x19, [x10]
    98a8:	stp	w28, w23, [x10, #8]
    98ac:	str	w22, [x10, #16]
    98b0:	ldr	x10, [x9]
    98b4:	sub	x10, x10, #0x18
    98b8:	cmp	x10, x9
    98bc:	str	x10, [x9]
    98c0:	b.hi	98f0 <__sanitizer_print_stack_trace@@Base+0x1098>  // b.pmore
    98c4:	ldr	x9, [x8]
    98c8:	str	x9, [x8, #8]
    98cc:	b	98f0 <__sanitizer_print_stack_trace@@Base+0x1098>
    98d0:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    98d4:	add	x0, x0, #0xd70
    98d8:	add	x1, x0, #0x270
    98dc:	mov	x2, x20
    98e0:	bl	b22c <__sanitizer_get_allocated_size@@Base+0x1258>
    98e4:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    98e8:	dmb	ish
    98ec:	strb	wzr, [x8, #3360]
    98f0:	ldp	x20, x19, [sp, #80]
    98f4:	ldp	x22, x21, [sp, #64]
    98f8:	ldp	x24, x23, [sp, #48]
    98fc:	ldp	x26, x25, [sp, #32]
    9900:	ldp	x28, x27, [sp, #16]
    9904:	ldr	x30, [sp], #96
    9908:	ret
    990c:	ldr	w10, [x24, #8]
    9910:	mov	w11, #0x7                   	// #7
    9914:	mov	w12, #0xb28c                	// #45708
    9918:	mov	w9, #0xe995                	// #59797
    991c:	cmp	w10, #0x7
    9920:	movk	w12, #0x9747, lsl #16
    9924:	csel	w10, w10, w11, cc  // cc = lo, ul, last
    9928:	movk	w9, #0x5bd1, lsl #16
    992c:	eor	w11, w10, w12
    9930:	cmp	w10, #0x2
    9934:	mul	w11, w11, w9
    9938:	b.cc	996c <__sanitizer_print_stack_trace@@Base+0x1114>  // b.lo, b.ul, b.last
    993c:	ldr	x12, [x24]
    9940:	mov	w13, #0x1                   	// #1
    9944:	ldr	x14, [x12, x13, lsl #3]
    9948:	mul	w11, w11, w9
    994c:	add	x13, x13, #0x1
    9950:	cmp	x13, x10
    9954:	and	w14, w14, #0xfff
    9958:	mul	w14, w14, w9
    995c:	eor	w14, w14, w14, lsr #24
    9960:	mul	w14, w14, w9
    9964:	eor	w11, w14, w11
    9968:	b.cc	9944 <__sanitizer_print_stack_trace@@Base+0x10ec>  // b.lo, b.ul, b.last
    996c:	eor	w10, w11, w11, lsr #13
    9970:	mul	w9, w10, w9
    9974:	eor	w9, w9, w9, lsr #15
    9978:	cmp	x27, x9
    997c:	b.hi	97d0 <__sanitizer_print_stack_trace@@Base+0xf78>  // b.pmore
    9980:	cmp	x8, x9
    9984:	b.cc	97d0 <__sanitizer_print_stack_trace@@Base+0xf78>  // b.lo, b.ul, b.last
    9988:	str	x9, [sp, #8]
    998c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    9990:	ldrb	w8, [x0, #56]
    9994:	cbz	w8, 97a0 <__sanitizer_print_stack_trace@@Base+0xf48>
    9998:	ldr	x1, [sp, #8]
    999c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    99a0:	add	x0, x0, #0x16
    99a4:	mov	x2, xzr
    99a8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    99ac:	mov	x0, x24
    99b0:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    99b4:	b	97a0 <__sanitizer_print_stack_trace@@Base+0xf48>
    99b8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    99bc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    99c0:	add	x0, x0, #0x9cd
    99c4:	add	x2, x2, #0x26
    99c8:	mov	w1, #0xb7                  	// #183
    99cc:	mov	x3, x19
    99d0:	mov	x4, xzr
    99d4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    99d8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    99dc:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    99e0:	add	x0, x0, #0x9cd
    99e4:	add	x2, x2, #0xa7d
    99e8:	mov	w1, #0x62                  	// #98
    99ec:	mov	x3, x25
    99f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    99f4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    99f8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    99fc:	add	x0, x0, #0x9cd
    9a00:	add	x2, x2, #0x3c
    9a04:	mov	w1, #0xcb                  	// #203
    9a08:	mov	w4, #0x10                  	// #16
    9a0c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    9a10:	stp	x30, x21, [sp, #-32]!
    9a14:	stp	x20, x19, [sp, #16]
    9a18:	mov	x19, x3
    9a1c:	mov	x20, x2
    9a20:	mov	x21, x1
    9a24:	umulh	x8, x2, x1
    9a28:	cbnz	x8, 9a40 <__sanitizer_print_stack_trace@@Base+0x11e8>
    9a2c:	mul	x1, x20, x21
    9a30:	mov	x2, x19
    9a34:	ldp	x20, x19, [sp, #16]
    9a38:	ldp	x30, x21, [sp], #32
    9a3c:	b	94e8 <__sanitizer_print_stack_trace@@Base+0xc90>
    9a40:	bl	6d00 <__errno_location@plt>
    9a44:	mov	w8, #0xc                   	// #12
    9a48:	str	w8, [x0]
    9a4c:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    9a50:	tbz	w0, #0, 9a64 <__sanitizer_print_stack_trace@@Base+0x120c>
    9a54:	ldp	x20, x19, [sp, #16]
    9a58:	mov	x0, xzr
    9a5c:	ldp	x30, x21, [sp], #32
    9a60:	ret
    9a64:	mov	x0, x21
    9a68:	mov	x1, x20
    9a6c:	mov	x2, x19
    9a70:	bl	23498 <__sanitizer_cov_pcs_init@@Base+0x264>
    9a74:	stp	x30, x21, [sp, #-32]!
    9a78:	stp	x20, x19, [sp, #16]
    9a7c:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    9a80:	ldr	x21, [x21, #4016]
    9a84:	mov	x19, x1
    9a88:	mov	x20, x0
    9a8c:	ldr	x2, [x21]
    9a90:	cbnz	x2, 9aa0 <__sanitizer_print_stack_trace@@Base+0x1248>
    9a94:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    9a98:	mov	x2, x0
    9a9c:	str	x0, [x21]
    9aa0:	mov	x0, x19
    9aa4:	mov	x1, x20
    9aa8:	mov	w3, wzr
    9aac:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9ab0:	mov	x19, x0
    9ab4:	cbz	x0, 9ac8 <__sanitizer_print_stack_trace@@Base+0x1270>
    9ab8:	mov	x0, x19
    9abc:	ldp	x20, x19, [sp, #16]
    9ac0:	ldp	x30, x21, [sp], #32
    9ac4:	ret
    9ac8:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    9acc:	mov	x0, x19
    9ad0:	ldp	x20, x19, [sp, #16]
    9ad4:	ldp	x30, x21, [sp], #32
    9ad8:	ret
    9adc:	stp	x30, x21, [sp, #-32]!
    9ae0:	stp	x20, x19, [sp, #16]
    9ae4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    9ae8:	ldr	x21, [x21, #4016]
    9aec:	mov	x19, x1
    9af0:	mov	x20, x0
    9af4:	ldr	x2, [x21]
    9af8:	cbnz	x2, 9b08 <__sanitizer_print_stack_trace@@Base+0x12b0>
    9afc:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    9b00:	mov	x2, x0
    9b04:	str	x0, [x21]
    9b08:	sub	x8, x2, #0x1
    9b0c:	tst	x2, x8
    9b10:	b.ne	9b84 <__sanitizer_print_stack_trace@@Base+0x132c>  // b.any
    9b14:	add	x8, x20, x2
    9b18:	sub	x8, x8, #0x1
    9b1c:	neg	x9, x2
    9b20:	and	x8, x8, x9
    9b24:	cmp	x8, x20
    9b28:	b.cc	9b50 <__sanitizer_print_stack_trace@@Base+0x12f8>  // b.lo, b.ul, b.last
    9b2c:	cmp	x20, #0x0
    9b30:	csel	x1, x2, x8, eq  // eq = none
    9b34:	mov	x0, x19
    9b38:	mov	w3, wzr
    9b3c:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9b40:	cbz	x0, 9b70 <__sanitizer_print_stack_trace@@Base+0x1318>
    9b44:	ldp	x20, x19, [sp, #16]
    9b48:	ldp	x30, x21, [sp], #32
    9b4c:	ret
    9b50:	bl	6d00 <__errno_location@plt>
    9b54:	mov	w8, #0xc                   	// #12
    9b58:	str	w8, [x0]
    9b5c:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    9b60:	tbnz	w0, #0, 9b74 <__sanitizer_print_stack_trace@@Base+0x131c>
    9b64:	mov	x0, x20
    9b68:	mov	x1, x19
    9b6c:	bl	234e8 <__sanitizer_cov_pcs_init@@Base+0x2b4>
    9b70:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    9b74:	mov	x0, xzr
    9b78:	ldp	x20, x19, [sp, #16]
    9b7c:	ldp	x30, x21, [sp], #32
    9b80:	ret
    9b84:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    9b88:	add	x0, x0, #0x20f
    9b8c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    9b90:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    9b94:	stp	x30, x21, [sp, #-32]!
    9b98:	stp	x20, x19, [sp, #16]
    9b9c:	mov	x20, x0
    9ba0:	fmov	d0, x20
    9ba4:	cnt	v0.8b, v0.8b
    9ba8:	uaddlv	h0, v0.8b
    9bac:	fmov	w8, s0
    9bb0:	mov	x19, x2
    9bb4:	cmp	x8, #0x1
    9bb8:	mov	x21, x1
    9bbc:	b.ne	9bf0 <__sanitizer_print_stack_trace@@Base+0x1398>  // b.any
    9bc0:	sub	x8, x20, #0x1
    9bc4:	and	x8, x8, x21
    9bc8:	cbnz	x8, 9bf0 <__sanitizer_print_stack_trace@@Base+0x1398>
    9bcc:	mov	x0, x19
    9bd0:	mov	x1, x21
    9bd4:	mov	x2, x20
    9bd8:	mov	w3, wzr
    9bdc:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9be0:	cbz	x0, 9c14 <__sanitizer_print_stack_trace@@Base+0x13bc>
    9be4:	ldp	x20, x19, [sp, #16]
    9be8:	ldp	x30, x21, [sp], #32
    9bec:	ret
    9bf0:	bl	6d00 <__errno_location@plt>
    9bf4:	mov	w8, #0x16                  	// #22
    9bf8:	str	w8, [x0]
    9bfc:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    9c00:	tbnz	w0, #0, 9c18 <__sanitizer_print_stack_trace@@Base+0x13c0>
    9c04:	mov	x0, x21
    9c08:	mov	x1, x20
    9c0c:	mov	x2, x19
    9c10:	bl	23588 <__sanitizer_cov_pcs_init@@Base+0x354>
    9c14:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    9c18:	mov	x0, xzr
    9c1c:	ldp	x20, x19, [sp, #16]
    9c20:	ldp	x30, x21, [sp], #32
    9c24:	ret
    9c28:	str	x30, [sp, #-32]!
    9c2c:	stp	x20, x19, [sp, #16]
    9c30:	sub	x8, x0, #0x1
    9c34:	mov	x19, x2
    9c38:	mov	x20, x0
    9c3c:	tst	x0, x8
    9c40:	b.ne	9c64 <__sanitizer_print_stack_trace@@Base+0x140c>  // b.any
    9c44:	mov	x0, x19
    9c48:	mov	x2, x20
    9c4c:	mov	w3, wzr
    9c50:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9c54:	cbz	x0, 9c84 <__sanitizer_print_stack_trace@@Base+0x142c>
    9c58:	ldp	x20, x19, [sp, #16]
    9c5c:	ldr	x30, [sp], #32
    9c60:	ret
    9c64:	bl	6d00 <__errno_location@plt>
    9c68:	mov	w8, #0x16                  	// #22
    9c6c:	str	w8, [x0]
    9c70:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    9c74:	tbnz	w0, #0, 9c88 <__sanitizer_print_stack_trace@@Base+0x1430>
    9c78:	mov	x0, x20
    9c7c:	mov	x1, x19
    9c80:	bl	23540 <__sanitizer_cov_pcs_init@@Base+0x30c>
    9c84:	bl	206a4 <__sanitizer_sandbox_on_notify@@Base+0x24>
    9c88:	mov	x0, xzr
    9c8c:	ldp	x20, x19, [sp, #16]
    9c90:	ldr	x30, [sp], #32
    9c94:	ret
    9c98:	stp	x30, x21, [sp, #-32]!
    9c9c:	stp	x20, x19, [sp, #16]
    9ca0:	mov	x19, x1
    9ca4:	fmov	d0, x19
    9ca8:	cnt	v0.8b, v0.8b
    9cac:	uaddlv	h0, v0.8b
    9cb0:	fmov	w8, s0
    9cb4:	mov	x20, x3
    9cb8:	cmp	x8, #0x1
    9cbc:	b.ne	9d08 <__sanitizer_print_stack_trace@@Base+0x14b0>  // b.any
    9cc0:	and	x8, x19, #0x7
    9cc4:	cbnz	x8, 9d08 <__sanitizer_print_stack_trace@@Base+0x14b0>
    9cc8:	mov	x21, x0
    9ccc:	mov	x0, x20
    9cd0:	mov	x1, x2
    9cd4:	mov	x2, x19
    9cd8:	mov	w3, wzr
    9cdc:	bl	91b8 <__sanitizer_print_stack_trace@@Base+0x960>
    9ce0:	cbz	x0, 9d20 <__sanitizer_print_stack_trace@@Base+0x14c8>
    9ce4:	sub	x9, x19, #0x1
    9ce8:	mov	x8, x0
    9cec:	tst	x9, x0
    9cf0:	b.ne	9d30 <__sanitizer_print_stack_trace@@Base+0x14d8>  // b.any
    9cf4:	mov	w0, wzr
    9cf8:	str	x8, [x21]
    9cfc:	ldp	x20, x19, [sp, #16]
    9d00:	ldp	x30, x21, [sp], #32
    9d04:	ret
    9d08:	bl	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x87c>
    9d0c:	tbz	w0, #0, 9d50 <__sanitizer_print_stack_trace@@Base+0x14f8>
    9d10:	mov	w0, #0x16                  	// #22
    9d14:	ldp	x20, x19, [sp, #16]
    9d18:	ldp	x30, x21, [sp], #32
    9d1c:	ret
    9d20:	mov	w0, #0xc                   	// #12
    9d24:	ldp	x20, x19, [sp, #16]
    9d28:	ldp	x30, x21, [sp], #32
    9d2c:	ret
    9d30:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    9d34:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    9d38:	add	x0, x0, #0x9cd
    9d3c:	add	x2, x2, #0xa16
    9d40:	mov	w1, #0x16d                 	// #365
    9d44:	mov	x3, xzr
    9d48:	mov	x4, xzr
    9d4c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    9d50:	mov	x0, x19
    9d54:	mov	x1, x20
    9d58:	bl	235d8 <__sanitizer_cov_pcs_init@@Base+0x3a4>
    9d5c:	mov	x8, x0
    9d60:	mov	x0, x1
    9d64:	mov	x1, x8
    9d68:	b	95fc <__sanitizer_print_stack_trace@@Base+0xda4>

0000000000009d6c <__hwasan_enable_allocator_tagging@@Base>:
    9d6c:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9d70:	mov	w9, #0x1                   	// #1
    9d74:	strb	w9, [x8, #3364]
    9d78:	ret

0000000000009d7c <__hwasan_disable_allocator_tagging@@Base>:
    9d7c:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9d80:	strb	wzr, [x8, #3364]
    9d84:	ret

0000000000009d88 <__sanitizer_get_current_allocated_bytes@@Base>:
    9d88:	sub	sp, sp, #0x20
    9d8c:	str	x30, [sp, #16]
    9d90:	mov	x0, sp
    9d94:	mov	w2, #0x10                  	// #16
    9d98:	mov	w1, wzr
    9d9c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    9da0:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9da4:	add	x8, x8, #0x0
    9da8:	mov	w9, #0x1                   	// #1
    9dac:	ldaxrb	w10, [x8]
    9db0:	stlxrb	w11, w9, [x8]
    9db4:	cbnz	w11, 9dac <__sanitizer_get_current_allocated_bytes@@Base+0x24>
    9db8:	cbz	w10, 9dc8 <__sanitizer_get_current_allocated_bytes@@Base+0x40>
    9dbc:	adrp	x0, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9dc0:	add	x0, x0, #0x0
    9dc4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    9dc8:	ldp	x8, x9, [sp]
    9dcc:	adrp	x10, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9dd0:	add	x10, x10, #0xfe0
    9dd4:	mov	x11, x10
    9dd8:	ldr	x12, [x11, #16]
    9ddc:	ldr	x13, [x11, #24]
    9de0:	ldr	x11, [x11]
    9de4:	add	x8, x12, x8
    9de8:	add	x9, x13, x9
    9dec:	cmp	x11, x10
    9df0:	b.ne	9dd8 <__sanitizer_get_current_allocated_bytes@@Base+0x50>  // b.any
    9df4:	bic	x8, x8, x8, asr #63
    9df8:	bic	x9, x9, x9, asr #63
    9dfc:	adrp	x10, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9e00:	stp	x8, x9, [sp]
    9e04:	dmb	ish
    9e08:	strb	wzr, [x10]
    9e0c:	ldr	x0, [sp]
    9e10:	ldr	x30, [sp, #16]
    9e14:	add	sp, sp, #0x20
    9e18:	ret

0000000000009e1c <__sanitizer_get_heap_size@@Base>:
    9e1c:	sub	sp, sp, #0x20
    9e20:	str	x30, [sp, #16]
    9e24:	mov	x0, sp
    9e28:	mov	w2, #0x10                  	// #16
    9e2c:	mov	w1, wzr
    9e30:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    9e34:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9e38:	add	x8, x8, #0x0
    9e3c:	mov	w9, #0x1                   	// #1
    9e40:	ldaxrb	w10, [x8]
    9e44:	stlxrb	w11, w9, [x8]
    9e48:	cbnz	w11, 9e40 <__sanitizer_get_heap_size@@Base+0x24>
    9e4c:	cbz	w10, 9e5c <__sanitizer_get_heap_size@@Base+0x40>
    9e50:	adrp	x0, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9e54:	add	x0, x0, #0x0
    9e58:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    9e5c:	ldp	x8, x9, [sp]
    9e60:	adrp	x10, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9e64:	add	x10, x10, #0xfe0
    9e68:	mov	x11, x10
    9e6c:	ldr	x12, [x11, #16]
    9e70:	ldr	x13, [x11, #24]
    9e74:	ldr	x11, [x11]
    9e78:	add	x8, x12, x8
    9e7c:	add	x9, x13, x9
    9e80:	cmp	x11, x10
    9e84:	b.ne	9e6c <__sanitizer_get_heap_size@@Base+0x50>  // b.any
    9e88:	bic	x8, x8, x8, asr #63
    9e8c:	bic	x9, x9, x9, asr #63
    9e90:	adrp	x10, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    9e94:	stp	x8, x9, [sp]
    9e98:	dmb	ish
    9e9c:	strb	wzr, [x10]
    9ea0:	ldp	x0, x30, [sp, #8]
    9ea4:	add	sp, sp, #0x20
    9ea8:	ret

0000000000009eac <__sanitizer_get_free_bytes@@Base>:
    9eac:	mov	w0, #0x1                   	// #1
    9eb0:	ret

0000000000009eb4 <__sanitizer_get_unmapped_bytes@@Base>:
    9eb4:	mov	w0, #0x1                   	// #1
    9eb8:	ret

0000000000009ebc <__sanitizer_get_estimated_allocated_size@@Base>:
    9ebc:	ret

0000000000009ec0 <__sanitizer_get_ownership@@Base>:
    9ec0:	stp	x30, x21, [sp, #-32]!
    9ec4:	stp	x20, x19, [sp, #16]
    9ec8:	ands	x20, x0, #0xffffffffffffff
    9ecc:	b.eq	9f94 <__sanitizer_get_ownership@@Base+0xd4>  // b.none
    9ed0:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9ed4:	ldr	x8, [x8, #3424]
    9ed8:	mov	x19, x0
    9edc:	subs	x10, x20, x8
    9ee0:	b.cc	9f14 <__sanitizer_get_ownership@@Base+0x54>  // b.lo, b.ul, b.last
    9ee4:	mov	x9, #0x2000000000          	// #137438953472
    9ee8:	add	x9, x8, x9
    9eec:	cmp	x9, x20
    9ef0:	b.ls	9f14 <__sanitizer_get_ownership@@Base+0x54>  // b.plast
    9ef4:	ubfx	x11, x10, #32, #5
    9ef8:	cmp	x11, #0x1f
    9efc:	b.eq	9fcc <__sanitizer_get_ownership@@Base+0x10c>  // b.none
    9f00:	cmp	x11, #0x11
    9f04:	b.cs	9f2c <__sanitizer_get_ownership@@Base+0x6c>  // b.hs, b.nlast
    9f08:	cbz	x11, 9fc4 <__sanitizer_get_ownership@@Base+0x104>
    9f0c:	lsl	x12, x11, #5
    9f10:	b	9f48 <__sanitizer_get_ownership@@Base+0x88>
    9f14:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9f18:	add	x0, x0, #0xd70
    9f1c:	mov	x1, x20
    9f20:	bl	bee4 <__sanitizer_get_allocated_size@@Base+0x1f10>
    9f24:	mov	x21, x0
    9f28:	b	9f74 <__sanitizer_get_ownership@@Base+0xb4>
    9f2c:	sub	x12, x11, #0x10
    9f30:	mov	w13, #0x200                 	// #512
    9f34:	lsr	x14, x12, #1
    9f38:	lsl	x13, x13, x14
    9f3c:	lsr	x14, x13, #1
    9f40:	and	x12, x12, #0x1
    9f44:	madd	x12, x14, x12, x13
    9f48:	mov	w14, #0xc0                  	// #192
    9f4c:	madd	x9, x11, x14, x9
    9f50:	ldr	x9, [x9, #120]
    9f54:	udiv	w13, w10, w12
    9f58:	and	x10, x10, #0xffffffff00000000
    9f5c:	add	x8, x10, x8
    9f60:	mul	x10, x12, x13
    9f64:	add	x11, x10, x12
    9f68:	add	x8, x8, x10
    9f6c:	cmp	x9, x11
    9f70:	csel	x21, xzr, x8, cc  // cc = lo, ul, last
    9f74:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9f78:	add	x0, x0, #0xd40
    9f7c:	mov	x1, x20
    9f80:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    9f84:	ldr	w8, [x0]
    9f88:	tbnz	w8, #31, 9fa4 <__sanitizer_get_ownership@@Base+0xe4>
    9f8c:	cmp	x21, x20
    9f90:	b.eq	9fb0 <__sanitizer_get_ownership@@Base+0xf0>  // b.none
    9f94:	mov	w0, wzr
    9f98:	ldp	x20, x19, [sp, #16]
    9f9c:	ldp	x30, x21, [sp], #32
    9fa0:	ret
    9fa4:	and	x9, x19, #0xfffffffffffff0
    9fa8:	cmp	x21, x9
    9fac:	b.ne	9f94 <__sanitizer_get_ownership@@Base+0xd4>  // b.any
    9fb0:	tst	w8, #0x7fffffff
    9fb4:	cset	w0, ne  // ne = any
    9fb8:	ldp	x20, x19, [sp, #16]
    9fbc:	ldp	x30, x21, [sp], #32
    9fc0:	ret
    9fc4:	mov	x21, xzr
    9fc8:	b	9f74 <__sanitizer_get_ownership@@Base+0xb4>
    9fcc:	mov	w12, #0x40                  	// #64
    9fd0:	b	9f48 <__sanitizer_get_ownership@@Base+0x88>

0000000000009fd4 <__sanitizer_get_allocated_size@@Base>:
    9fd4:	stp	x30, x21, [sp, #-32]!
    9fd8:	stp	x20, x19, [sp, #16]
    9fdc:	ands	x20, x0, #0xffffffffffffff
    9fe0:	b.eq	a0a8 <__sanitizer_get_allocated_size@@Base+0xd4>  // b.none
    9fe4:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    9fe8:	ldr	x8, [x8, #3424]
    9fec:	mov	x19, x0
    9ff0:	subs	x10, x20, x8
    9ff4:	b.cc	a028 <__sanitizer_get_allocated_size@@Base+0x54>  // b.lo, b.ul, b.last
    9ff8:	mov	x9, #0x2000000000          	// #137438953472
    9ffc:	add	x9, x8, x9
    a000:	cmp	x9, x20
    a004:	b.ls	a028 <__sanitizer_get_allocated_size@@Base+0x54>  // b.plast
    a008:	ubfx	x11, x10, #32, #5
    a00c:	cmp	x11, #0x1f
    a010:	b.eq	a0dc <__sanitizer_get_allocated_size@@Base+0x108>  // b.none
    a014:	cmp	x11, #0x11
    a018:	b.cs	a040 <__sanitizer_get_allocated_size@@Base+0x6c>  // b.hs, b.nlast
    a01c:	cbz	x11, a0d4 <__sanitizer_get_allocated_size@@Base+0x100>
    a020:	lsl	x12, x11, #5
    a024:	b	a05c <__sanitizer_get_allocated_size@@Base+0x88>
    a028:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    a02c:	add	x0, x0, #0xd70
    a030:	mov	x1, x20
    a034:	bl	bee4 <__sanitizer_get_allocated_size@@Base+0x1f10>
    a038:	mov	x21, x0
    a03c:	b	a088 <__sanitizer_get_allocated_size@@Base+0xb4>
    a040:	sub	x12, x11, #0x10
    a044:	mov	w13, #0x200                 	// #512
    a048:	lsr	x14, x12, #1
    a04c:	lsl	x13, x13, x14
    a050:	lsr	x14, x13, #1
    a054:	and	x12, x12, #0x1
    a058:	madd	x12, x14, x12, x13
    a05c:	mov	w14, #0xc0                  	// #192
    a060:	madd	x9, x11, x14, x9
    a064:	ldr	x9, [x9, #120]
    a068:	udiv	w13, w10, w12
    a06c:	and	x10, x10, #0xffffffff00000000
    a070:	add	x8, x10, x8
    a074:	mul	x10, x12, x13
    a078:	add	x11, x10, x12
    a07c:	add	x8, x8, x10
    a080:	cmp	x9, x11
    a084:	csel	x21, xzr, x8, cc  // cc = lo, ul, last
    a088:	adrp	x0, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
    a08c:	add	x0, x0, #0xd40
    a090:	mov	x1, x20
    a094:	bl	a384 <__sanitizer_get_allocated_size@@Base+0x3b0>
    a098:	ldr	w8, [x0]
    a09c:	tbnz	w8, #31, a0b8 <__sanitizer_get_allocated_size@@Base+0xe4>
    a0a0:	cmp	x21, x20
    a0a4:	b.eq	a0c4 <__sanitizer_get_allocated_size@@Base+0xf0>  // b.none
    a0a8:	mov	x0, xzr
    a0ac:	ldp	x20, x19, [sp, #16]
    a0b0:	ldp	x30, x21, [sp], #32
    a0b4:	ret
    a0b8:	and	x9, x19, #0xfffffffffffff0
    a0bc:	cmp	x21, x9
    a0c0:	b.ne	a0a8 <__sanitizer_get_allocated_size@@Base+0xd4>  // b.any
    a0c4:	and	x0, x8, #0x7fffffff
    a0c8:	ldp	x20, x19, [sp, #16]
    a0cc:	ldp	x30, x21, [sp], #32
    a0d0:	ret
    a0d4:	mov	x21, xzr
    a0d8:	b	a088 <__sanitizer_get_allocated_size@@Base+0xb4>
    a0dc:	mov	w12, #0x40                  	// #64
    a0e0:	b	a05c <__sanitizer_get_allocated_size@@Base+0x88>
    a0e4:	sub	sp, sp, #0x30
    a0e8:	stp	x30, x21, [sp, #16]
    a0ec:	stp	x20, x19, [sp, #32]
    a0f0:	mov	x20, x1
    a0f4:	mov	x19, x0
    a0f8:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    a0fc:	ldr	x21, [x0, #40]
    a100:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    a104:	mov	x8, x0
    a108:	mov	w0, #0x1                   	// #1
    a10c:	cbz	x19, a11c <__sanitizer_get_allocated_size@@Base+0x148>
    a110:	ldr	x8, [x8, #48]
    a114:	orr	x9, x8, x21
    a118:	cbnz	x9, a12c <__sanitizer_get_allocated_size@@Base+0x158>
    a11c:	ldp	x20, x19, [sp, #32]
    a120:	ldp	x30, x21, [sp, #16]
    a124:	add	sp, sp, #0x30
    a128:	ret
    a12c:	ldr	w10, [x19, #8]
    a130:	mov	w9, #0xe995                	// #59797
    a134:	movk	w9, #0x5bd1, lsl #16
    a138:	mov	w11, #0x7                   	// #7
    a13c:	mov	w12, #0xb28c                	// #45708
    a140:	cmp	w10, #0x7
    a144:	movk	w12, #0x9747, lsl #16
    a148:	mul	w13, w20, w9
    a14c:	csel	w10, w10, w11, cc  // cc = lo, ul, last
    a150:	eor	w13, w13, w13, lsr #24
    a154:	eor	w11, w10, w12
    a158:	mul	w13, w13, w9
    a15c:	mul	w11, w11, w9
    a160:	cmp	w10, #0x2
    a164:	eor	w11, w11, w13
    a168:	b.cc	a19c <__sanitizer_get_allocated_size@@Base+0x1c8>  // b.lo, b.ul, b.last
    a16c:	ldr	x12, [x19]
    a170:	mov	w13, #0x1                   	// #1
    a174:	ldr	x14, [x12, x13, lsl #3]
    a178:	mul	w11, w11, w9
    a17c:	add	x13, x13, #0x1
    a180:	cmp	x13, x10
    a184:	and	w14, w14, #0xfff
    a188:	mul	w14, w14, w9
    a18c:	eor	w14, w14, w14, lsr #24
    a190:	mul	w14, w14, w9
    a194:	eor	w11, w14, w11
    a198:	b.cc	a174 <__sanitizer_get_allocated_size@@Base+0x1a0>  // b.lo, b.ul, b.last
    a19c:	eor	w10, w11, w11, lsr #13
    a1a0:	mul	w9, w10, w9
    a1a4:	eor	w9, w9, w9, lsr #15
    a1a8:	cmp	x21, x9
    a1ac:	mov	w0, wzr
    a1b0:	b.hi	a11c <__sanitizer_get_allocated_size@@Base+0x148>  // b.pmore
    a1b4:	cmp	x8, x9
    a1b8:	str	x9, [sp, #8]
    a1bc:	b.cc	a11c <__sanitizer_get_allocated_size@@Base+0x148>  // b.lo, b.ul, b.last
    a1c0:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    a1c4:	ldrb	w8, [x0, #56]
    a1c8:	cbz	w8, a1e8 <__sanitizer_get_allocated_size@@Base+0x214>
    a1cc:	ldr	x1, [sp, #8]
    a1d0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    a1d4:	add	x0, x0, #0x16
    a1d8:	mov	x2, x20
    a1dc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    a1e0:	mov	x0, x19
    a1e4:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    a1e8:	mov	w0, #0x1                   	// #1
    a1ec:	ldp	x20, x19, [sp, #32]
    a1f0:	ldp	x30, x21, [sp, #16]
    a1f4:	add	sp, sp, #0x30
    a1f8:	ret
    a1fc:	str	x30, [sp, #-16]!
    a200:	ldr	x8, [x0, #32]
    a204:	cmp	x8, x1
    a208:	b.hi	a240 <__sanitizer_get_allocated_size@@Base+0x26c>  // b.pmore
    a20c:	mov	x9, #0x2000000000          	// #137438953472
    a210:	add	x9, x8, x9
    a214:	cmp	x9, x1
    a218:	b.ls	a240 <__sanitizer_get_allocated_size@@Base+0x26c>  // b.plast
    a21c:	sub	x8, x1, x8
    a220:	ubfx	x9, x8, #32, #5
    a224:	cmp	x9, #0x1f
    a228:	b.eq	a294 <__sanitizer_get_allocated_size@@Base+0x2c0>  // b.none
    a22c:	subs	x8, x9, #0x10
    a230:	b.hi	a274 <__sanitizer_get_allocated_size@@Base+0x2a0>  // b.pmore
    a234:	lsl	x0, x9, #5
    a238:	ldr	x30, [sp], #16
    a23c:	ret
    a240:	ldr	x8, [x0, #48]
    a244:	sub	x9, x8, #0x1
    a248:	tst	x9, x1
    a24c:	b.ne	a2a0 <__sanitizer_get_allocated_size@@Base+0x2cc>  // b.any
    a250:	tst	x8, x9
    a254:	b.ne	a2c0 <__sanitizer_get_allocated_size@@Base+0x2ec>  // b.any
    a258:	sub	x10, x1, x8
    a25c:	ldr	x10, [x10, #16]
    a260:	neg	x8, x8
    a264:	add	x9, x10, x9
    a268:	and	x0, x9, x8
    a26c:	ldr	x30, [sp], #16
    a270:	ret
    a274:	lsr	x9, x8, #1
    a278:	mov	w10, #0x200                 	// #512
    a27c:	lsl	x9, x10, x9
    a280:	lsr	x10, x9, #1
    a284:	and	x8, x8, #0x1
    a288:	madd	x0, x10, x8, x9
    a28c:	ldr	x30, [sp], #16
    a290:	ret
    a294:	mov	w0, #0x40                  	// #64
    a298:	ldr	x30, [sp], #16
    a29c:	ret
    a2a0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a2a4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a2a8:	add	x0, x0, #0xe3b
    a2ac:	add	x2, x2, #0xfd8
    a2b0:	mov	w1, #0x12d                 	// #301
    a2b4:	mov	x3, xzr
    a2b8:	mov	x4, xzr
    a2bc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a2c0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a2c4:	add	x0, x0, #0x20f
    a2c8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    a2cc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    a2d0:	stp	x30, x21, [sp, #-32]!
    a2d4:	stp	x20, x19, [sp, #16]
    a2d8:	add	x21, x0, #0x2a0
    a2dc:	mov	w20, w1
    a2e0:	mov	x19, x0
    a2e4:	mov	w2, #0x28                  	// #40
    a2e8:	mov	x0, x21
    a2ec:	mov	w1, wzr
    a2f0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    a2f4:	mov	x0, x19
    a2f8:	mov	w1, w20
    a2fc:	str	x21, [x19, #672]
    a300:	str	x21, [x19, #680]
    a304:	bl	bdb8 <__sanitizer_get_allocated_size@@Base+0x1de4>
    a308:	add	x0, x19, #0x30
    a30c:	mov	w2, #0x270                 	// #624
    a310:	mov	w1, wzr
    a314:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    a318:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a31c:	ldr	x20, [x20, #4016]
    a320:	ldr	x0, [x20]
    a324:	cbnz	x0, a330 <__sanitizer_get_allocated_size@@Base+0x35c>
    a328:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    a32c:	str	x0, [x20]
    a330:	str	x0, [x19, #48]
    a334:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a338:	ldr	x8, [x8, #3944]
    a33c:	add	x0, x19, #0x40
    a340:	mov	w1, #0x800000              	// #8388608
    a344:	mov	x3, xzr
    a348:	ldr	x2, [x8]
    a34c:	bl	21960 <__sanitizer_sandbox_on_notify@@Base+0x12e0>
    a350:	cbz	x0, a364 <__sanitizer_get_allocated_size@@Base+0x390>
    a354:	str	x0, [x19, #56]
    a358:	ldp	x20, x19, [sp, #16]
    a35c:	ldp	x30, x21, [sp], #32
    a360:	ret
    a364:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a368:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    a36c:	add	x0, x0, #0xe3b
    a370:	add	x2, x2, #0x275
    a374:	mov	w1, #0x25                  	// #37
    a378:	mov	x3, xzr
    a37c:	mov	x4, xzr
    a380:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a384:	str	x30, [sp, #-32]!
    a388:	stp	x20, x19, [sp, #16]
    a38c:	ldr	x8, [x0, #32]
    a390:	mov	x20, x0
    a394:	mov	x19, x1
    a398:	cmp	x8, x1
    a39c:	b.hi	a3d0 <__sanitizer_get_allocated_size@@Base+0x3fc>  // b.pmore
    a3a0:	mov	x9, #0x2000000000          	// #137438953472
    a3a4:	add	x9, x8, x9
    a3a8:	cmp	x9, x19
    a3ac:	b.ls	a3d0 <__sanitizer_get_allocated_size@@Base+0x3fc>  // b.plast
    a3b0:	sub	x9, x19, x8
    a3b4:	ubfx	x10, x9, #32, #5
    a3b8:	cmp	x10, #0x1f
    a3bc:	b.eq	a464 <__sanitizer_get_allocated_size@@Base+0x490>  // b.none
    a3c0:	subs	x11, x10, #0x10
    a3c4:	b.hi	a428 <__sanitizer_get_allocated_size@@Base+0x454>  // b.pmore
    a3c8:	lsl	x11, x10, #5
    a3cc:	b	a440 <__sanitizer_get_allocated_size@@Base+0x46c>
    a3d0:	ldr	x8, [x20, #48]
    a3d4:	sub	x9, x8, #0x1
    a3d8:	tst	x9, x19
    a3dc:	b.eq	a40c <__sanitizer_get_allocated_size@@Base+0x438>  // b.none
    a3e0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a3e4:	ldr	x8, [x8, #4024]
    a3e8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    a3ec:	add	x0, x0, #0x282
    a3f0:	mov	x2, x19
    a3f4:	ldr	x1, [x8]
    a3f8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    a3fc:	ldr	x8, [x20, #48]
    a400:	sub	x9, x8, #0x1
    a404:	tst	x9, x19
    a408:	b.ne	a484 <__sanitizer_get_allocated_size@@Base+0x4b0>  // b.any
    a40c:	tst	x9, x19
    a410:	b.ne	a46c <__sanitizer_get_allocated_size@@Base+0x498>  // b.any
    a414:	sub	x8, x19, x8
    a418:	add	x0, x8, #0x20
    a41c:	ldp	x20, x19, [sp, #16]
    a420:	ldr	x30, [sp], #32
    a424:	ret
    a428:	lsr	x12, x11, #1
    a42c:	mov	w13, #0x200                 	// #512
    a430:	lsl	x12, x13, x12
    a434:	lsr	x13, x12, #1
    a438:	and	x11, x11, #0x1
    a43c:	madd	x11, x13, x11, x12
    a440:	udiv	w9, w9, w11
    a444:	add	x8, x8, x10, lsl #32
    a448:	sub	x8, x8, w9, uxtw #3
    a44c:	mov	w9, #0xfff8                	// #65528
    a450:	movk	w9, #0xdfff, lsl #16
    a454:	add	x0, x8, x9
    a458:	ldp	x20, x19, [sp, #16]
    a45c:	ldr	x30, [sp], #32
    a460:	ret
    a464:	mov	w11, #0x40                  	// #64
    a468:	b	a440 <__sanitizer_get_allocated_size@@Base+0x46c>
    a46c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a470:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a474:	add	x0, x0, #0xe3b
    a478:	add	x2, x2, #0xfd8
    a47c:	mov	w1, #0x12d                 	// #301
    a480:	b	a498 <__sanitizer_get_allocated_size@@Base+0x4c4>
    a484:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a488:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    a48c:	add	x0, x0, #0xe3b
    a490:	add	x2, x2, #0x296
    a494:	mov	w1, #0xb1                  	// #177
    a498:	mov	x3, xzr
    a49c:	mov	x4, xzr
    a4a0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a4a4:	sub	sp, sp, #0x30
    a4a8:	stp	x30, x19, [sp, #32]
    a4ac:	cmp	x2, #0x0
    a4b0:	csinc	x2, x2, xzr, ne  // ne = any
    a4b4:	mvn	x8, x2
    a4b8:	mov	x19, x3
    a4bc:	cmp	x8, x3
    a4c0:	b.cs	a4e8 <__sanitizer_get_allocated_size@@Base+0x514>  // b.hs, b.nlast
    a4c4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a4c8:	ldr	x8, [x8, #4024]
    a4cc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a4d0:	add	x0, x0, #0xa96
    a4d4:	mov	x3, x19
    a4d8:	ldr	x1, [x8]
    a4dc:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    a4e0:	mov	x0, xzr
    a4e4:	b	a5f0 <__sanitizer_get_allocated_size@@Base+0x61c>
    a4e8:	mov	x8, x0
    a4ec:	cmp	x19, #0x9
    a4f0:	mov	x9, x2
    a4f4:	b.cc	a514 <__sanitizer_get_allocated_size@@Base+0x540>  // b.lo, b.ul, b.last
    a4f8:	sub	x9, x19, #0x1
    a4fc:	tst	x19, x9
    a500:	b.ne	a638 <__sanitizer_get_allocated_size@@Base+0x664>  // b.any
    a504:	add	x9, x19, x2
    a508:	sub	x9, x9, #0x1
    a50c:	neg	x10, x19
    a510:	and	x9, x9, x10
    a514:	cmp	x19, #0x10, lsl #12
    a518:	b.hi	a53c <__sanitizer_get_allocated_size@@Base+0x568>  // b.pmore
    a51c:	mov	w10, #0x10001               	// #65537
    a520:	cmp	x9, x10
    a524:	b.cs	a53c <__sanitizer_get_allocated_size@@Base+0x568>  // b.hs, b.nlast
    a528:	cmp	x9, #0x200
    a52c:	b.hi	a558 <__sanitizer_get_allocated_size@@Base+0x584>  // b.pmore
    a530:	add	x9, x9, #0x1f
    a534:	lsr	x3, x9, #5
    a538:	b	a588 <__sanitizer_get_allocated_size@@Base+0x5b4>
    a53c:	add	x0, x8, #0x30
    a540:	add	x1, x8, #0x2a0
    a544:	mov	x3, x19
    a548:	bl	a69c <__sanitizer_get_allocated_size@@Base+0x6c8>
    a54c:	cmp	x19, #0x9
    a550:	b.cs	a5e4 <__sanitizer_get_allocated_size@@Base+0x610>  // b.hs, b.nlast
    a554:	b	a5f0 <__sanitizer_get_allocated_size@@Base+0x61c>
    a558:	clz	x10, x9
    a55c:	eor	x10, x10, #0x3f
    a560:	mov	w11, #0xffffffff            	// #-1
    a564:	sub	x12, x10, #0x1
    a568:	lsr	x13, x9, x12
    a56c:	lsl	w11, w11, w12
    a570:	and	x12, x13, #0x1
    a574:	mvn	w11, w11
    a578:	bfi	x12, x10, #1, #7
    a57c:	tst	x9, x11
    a580:	cinc	x9, x12, ne  // ne = any
    a584:	sub	x3, x9, #0x2
    a588:	cbz	x3, a648 <__sanitizer_get_allocated_size@@Base+0x674>
    a58c:	cmp	x3, #0x20
    a590:	b.cs	a664 <__sanitizer_get_allocated_size@@Base+0x690>  // b.hs, b.nlast
    a594:	mov	w9, #0x50                  	// #80
    a598:	madd	x9, x3, x9, x1
    a59c:	ldr	w10, [x9]
    a5a0:	cbz	w10, a5fc <__sanitizer_get_allocated_size@@Base+0x628>
    a5a4:	sub	w10, w10, #0x1
    a5a8:	mov	w11, #0x50                  	// #80
    a5ac:	str	w10, [x9]
    a5b0:	madd	x9, x3, x11, x1
    a5b4:	add	x10, x9, w10, uxtw #2
    a5b8:	ldr	x9, [x9, #8]
    a5bc:	ldr	w10, [x10, #16]
    a5c0:	ldr	x11, [x1, #2576]
    a5c4:	add	x9, x11, x9
    a5c8:	str	x9, [x1, #2576]
    a5cc:	ldr	x8, [x8, #32]
    a5d0:	lsl	x9, x10, #4
    a5d4:	add	x9, x9, x3, lsl #32
    a5d8:	add	x0, x9, x8
    a5dc:	cmp	x19, #0x9
    a5e0:	b.cc	a5f0 <__sanitizer_get_allocated_size@@Base+0x61c>  // b.lo, b.ul, b.last
    a5e4:	sub	x8, x19, #0x1
    a5e8:	ands	x3, x8, x0
    a5ec:	b.ne	a680 <__sanitizer_get_allocated_size@@Base+0x6ac>  // b.any
    a5f0:	ldp	x30, x19, [sp, #32]
    a5f4:	add	sp, sp, #0x30
    a5f8:	ret
    a5fc:	stp	x8, x1, [sp, #16]
    a600:	mov	x0, x1
    a604:	mov	x1, x9
    a608:	mov	x2, x8
    a60c:	stp	x9, x3, [sp]
    a610:	bl	a97c <__sanitizer_get_allocated_size@@Base+0x9a8>
    a614:	tbz	w0, #0, a628 <__sanitizer_get_allocated_size@@Base+0x654>
    a618:	ldp	x9, x3, [sp]
    a61c:	ldp	x8, x1, [sp, #16]
    a620:	ldr	w10, [x9]
    a624:	b	a5a4 <__sanitizer_get_allocated_size@@Base+0x5d0>
    a628:	mov	x0, xzr
    a62c:	cmp	x19, #0x9
    a630:	b.cs	a5e4 <__sanitizer_get_allocated_size@@Base+0x610>  // b.hs, b.nlast
    a634:	b	a5f0 <__sanitizer_get_allocated_size@@Base+0x61c>
    a638:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a63c:	add	x0, x0, #0x20f
    a640:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    a644:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    a648:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a64c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a650:	add	x0, x0, #0xb98
    a654:	add	x2, x2, #0xc02
    a658:	mov	w1, #0x22                  	// #34
    a65c:	mov	x4, xzr
    a660:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a664:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a668:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a66c:	add	x0, x0, #0xb98
    a670:	add	x2, x2, #0xc1a
    a674:	mov	w1, #0x23                  	// #35
    a678:	mov	w4, #0x20                  	// #32
    a67c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a680:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a684:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a688:	add	x0, x0, #0xaf6
    a68c:	add	x2, x2, #0xb5d
    a690:	mov	w1, #0x49                  	// #73
    a694:	mov	x4, xzr
    a698:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a69c:	stp	x30, x25, [sp, #-64]!
    a6a0:	stp	x24, x23, [sp, #16]
    a6a4:	stp	x22, x21, [sp, #32]
    a6a8:	stp	x20, x19, [sp, #48]
    a6ac:	sub	x25, x3, #0x1
    a6b0:	tst	x3, x25
    a6b4:	b.ne	a89c <__sanitizer_get_allocated_size@@Base+0x8c8>  // b.any
    a6b8:	ldr	x8, [x0]
    a6bc:	mov	x20, x0
    a6c0:	sub	x9, x8, #0x1
    a6c4:	tst	x8, x9
    a6c8:	b.ne	a8b4 <__sanitizer_get_allocated_size@@Base+0x8e0>  // b.any
    a6cc:	add	x9, x2, x8
    a6d0:	neg	x10, x8
    a6d4:	sub	x9, x9, #0x1
    a6d8:	cmp	x8, x3
    a6dc:	and	x9, x9, x10
    a6e0:	add	x8, x9, x8
    a6e4:	csel	x9, x3, xzr, cc  // cc = lo, ul, last
    a6e8:	add	x21, x8, x9
    a6ec:	mov	x22, x3
    a6f0:	mov	x23, x2
    a6f4:	cmp	x21, x2
    a6f8:	b.cs	a720 <__sanitizer_get_allocated_size@@Base+0x74c>  // b.hs, b.nlast
    a6fc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a700:	ldr	x8, [x8, #4024]
    a704:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a708:	add	x0, x0, #0xec6
    a70c:	mov	x2, x21
    a710:	ldr	x1, [x8]
    a714:	mov	x3, x22
    a718:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    a71c:	b	a858 <__sanitizer_get_allocated_size@@Base+0x884>
    a720:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    a724:	ldr	x8, [x8, #3944]
    a728:	mov	x19, x1
    a72c:	mov	x0, x21
    a730:	ldr	x1, [x8]
    a734:	bl	1b4a8 <__sanitizer_set_report_fd@@Base+0x4e64>
    a738:	cbz	x0, a858 <__sanitizer_get_allocated_size@@Base+0x884>
    a73c:	ldr	x8, [x20]
    a740:	mov	x24, x0
    a744:	sub	x8, x8, #0x1
    a748:	tst	x8, x0
    a74c:	b.ne	a8c4 <__sanitizer_get_allocated_size@@Base+0x8f0>  // b.any
    a750:	bl	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    a754:	ldr	x8, [x20]
    a758:	add	x9, x8, x24
    a75c:	and	x10, x9, x25
    a760:	sub	x10, x22, x10
    a764:	tst	x9, x25
    a768:	csel	x10, xzr, x10, eq  // eq = none
    a76c:	add	x22, x10, x9
    a770:	tst	x22, x25
    a774:	b.ne	a8dc <__sanitizer_get_allocated_size@@Base+0x908>  // b.any
    a778:	sub	x9, x8, #0x1
    a77c:	tst	x22, x9
    a780:	b.ne	a8f4 <__sanitizer_get_allocated_size@@Base+0x920>  // b.any
    a784:	add	x3, x22, x23
    a788:	cmp	x3, x24
    a78c:	b.cc	a90c <__sanitizer_get_allocated_size@@Base+0x938>  // b.lo, b.ul, b.last
    a790:	add	x4, x21, x24
    a794:	cmp	x3, x4
    a798:	b.hi	a928 <__sanitizer_get_allocated_size@@Base+0x954>  // b.pmore
    a79c:	sub	x25, x22, x8
    a7a0:	stp	x21, x23, [x25, #8]
    a7a4:	str	x24, [x25]
    a7a8:	cbz	x21, a940 <__sanitizer_get_allocated_size@@Base+0x96c>
    a7ac:	clz	x8, x21
    a7b0:	add	x0, x20, #0x268
    a7b4:	eor	x23, x8, #0x3f
    a7b8:	mov	w8, #0x1                   	// #1
    a7bc:	ldaxrb	w9, [x0]
    a7c0:	stlxrb	w10, w8, [x0]
    a7c4:	cbnz	w10, a7bc <__sanitizer_get_allocated_size@@Base+0x7e8>
    a7c8:	cbz	w9, a7d0 <__sanitizer_get_allocated_size@@Base+0x7fc>
    a7cc:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    a7d0:	ldr	x3, [x20, #56]
    a7d4:	cmp	x3, #0x100, lsl #12
    a7d8:	b.cs	a960 <__sanitizer_get_allocated_size@@Base+0x98c>  // b.hs, b.nlast
    a7dc:	ldr	x8, [x20, #48]
    a7e0:	cmp	x8, x3
    a7e4:	b.eq	a874 <__sanitizer_get_allocated_size@@Base+0x8a0>  // b.none
    a7e8:	add	x8, x3, #0x1
    a7ec:	str	x8, [x20, #56]
    a7f0:	str	x3, [x25, #24]
    a7f4:	ldr	x8, [x20, #8]
    a7f8:	str	x25, [x8, x3, lsl #3]
    a7fc:	ldr	x8, [x20, #72]!
    a800:	ldp	x9, x10, [x20, #16]
    a804:	add	x8, x8, #0x1
    a808:	str	x8, [x20]
    a80c:	sturb	wzr, [x20, #-8]
    a810:	add	x8, x9, x21
    a814:	cmp	x10, x8
    a818:	str	x8, [x20, #16]
    a81c:	csel	x8, x10, x8, hi  // hi = pmore
    a820:	add	x11, x20, x23, lsl #3
    a824:	str	x8, [x20, #24]
    a828:	ldr	x8, [x11, #32]
    a82c:	add	x8, x8, #0x1
    a830:	str	x8, [x11, #32]
    a834:	ldr	x8, [x19, #16]
    a838:	add	x8, x8, x21
    a83c:	str	x8, [x19, #16]
    a840:	ldr	x8, [x19, #24]
    a844:	add	x8, x8, x21
    a848:	str	x8, [x19, #24]
    a84c:	dmb	ish
    a850:	strb	wzr, [x20, #544]
    a854:	b	a85c <__sanitizer_get_allocated_size@@Base+0x888>
    a858:	mov	x22, xzr
    a85c:	mov	x0, x22
    a860:	ldp	x20, x19, [sp, #48]
    a864:	ldp	x22, x21, [sp, #32]
    a868:	ldp	x24, x23, [sp, #16]
    a86c:	ldp	x30, x25, [sp], #64
    a870:	ret
    a874:	ldr	x8, [x20, #16]
    a878:	add	x0, x20, #0x10
    a87c:	mov	w2, #0x20000               	// #131072
    a880:	add	x1, x8, x3, lsl #3
    a884:	mov	x3, xzr
    a888:	bl	21a04 <__sanitizer_sandbox_on_notify@@Base+0x1384>
    a88c:	ldp	x8, x3, [x20, #48]
    a890:	add	x8, x8, #0x4, lsl #12
    a894:	str	x8, [x20, #48]
    a898:	b	a7e8 <__sanitizer_get_allocated_size@@Base+0x814>
    a89c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8a0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8a4:	add	x0, x0, #0xe3b
    a8a8:	add	x2, x2, #0xea3
    a8ac:	mov	w1, #0x56                  	// #86
    a8b0:	b	a954 <__sanitizer_get_allocated_size@@Base+0x980>
    a8b4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8b8:	add	x0, x0, #0x20f
    a8bc:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    a8c0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    a8c4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8c8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8cc:	add	x0, x0, #0xe3b
    a8d0:	add	x2, x2, #0xf27
    a8d4:	mov	w1, #0x65                  	// #101
    a8d8:	b	a954 <__sanitizer_get_allocated_size@@Base+0x980>
    a8dc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8e0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8e4:	add	x0, x0, #0xe3b
    a8e8:	add	x2, x2, #0xf51
    a8ec:	mov	w1, #0x6b                  	// #107
    a8f0:	b	a954 <__sanitizer_get_allocated_size@@Base+0x980>
    a8f4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8f8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a8fc:	add	x0, x0, #0xe3b
    a900:	add	x2, x2, #0xf76
    a904:	mov	w1, #0x6c                  	// #108
    a908:	b	a954 <__sanitizer_get_allocated_size@@Base+0x980>
    a90c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a910:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a914:	add	x0, x0, #0xe3b
    a918:	add	x2, x2, #0xf9c
    a91c:	mov	w1, #0x6d                  	// #109
    a920:	mov	x4, x24
    a924:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a928:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a92c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a930:	add	x0, x0, #0xe3b
    a934:	add	x2, x2, #0xfba
    a938:	mov	w1, #0x6e                  	// #110
    a93c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a940:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a944:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a948:	add	x0, x0, #0x8be
    a94c:	add	x2, x2, #0xe2b
    a950:	mov	w1, #0x160                 	// #352
    a954:	mov	x3, xzr
    a958:	mov	x4, xzr
    a95c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a960:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a964:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    a968:	add	x0, x0, #0xe3b
    a96c:	add	x2, x2, #0xffc
    a970:	mov	w1, #0x2a                  	// #42
    a974:	mov	w4, #0x100000              	// #1048576
    a978:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    a97c:	str	x30, [sp, #-32]!
    a980:	stp	x20, x19, [sp, #16]
    a984:	ldr	w9, [x1, #4]
    a988:	mov	x8, x3
    a98c:	mov	x19, x1
    a990:	cbz	w9, a9c8 <__sanitizer_get_allocated_size@@Base+0x9f4>
    a994:	lsr	w20, w9, #1
    a998:	add	x1, x0, #0xa00
    a99c:	add	x3, x19, #0x10
    a9a0:	mov	x0, x2
    a9a4:	mov	x2, x8
    a9a8:	mov	x4, x20
    a9ac:	bl	aa64 <__sanitizer_get_allocated_size@@Base+0xa90>
    a9b0:	tbz	w0, #0, a9e4 <__sanitizer_get_allocated_size@@Base+0xa10>
    a9b4:	mov	w0, #0x1                   	// #1
    a9b8:	str	w20, [x19]
    a9bc:	ldp	x20, x19, [sp, #16]
    a9c0:	ldr	x30, [sp], #32
    a9c4:	ret
    a9c8:	add	x9, x0, #0x58
    a9cc:	mov	x10, #0xfffffffffffffff1    	// #-15
    a9d0:	mov	w11, #0x20                  	// #32
    a9d4:	mov	w12, #0x400                 	// #1024
    a9d8:	mov	w13, #0x8                   	// #8
    a9dc:	mov	w14, #0x200                 	// #512
    a9e0:	b	aa2c <__sanitizer_get_allocated_size@@Base+0xa58>
    a9e4:	mov	w0, wzr
    a9e8:	ldp	x20, x19, [sp, #16]
    a9ec:	ldr	x30, [sp], #32
    a9f0:	ret
    a9f4:	mov	w15, #0x40                  	// #64
    a9f8:	udiv	w16, w12, w15
    a9fc:	cmp	w16, #0x8
    aa00:	str	x15, [x9]
    aa04:	csel	x15, x16, x13, cc  // cc = lo, ul, last
    aa08:	cmp	x15, #0x0
    aa0c:	csinc	w15, w15, wzr, ne  // ne = any
    aa10:	add	x10, x10, #0x1
    aa14:	lsl	w15, w15, #1
    aa18:	add	x11, x11, #0x20
    aa1c:	cmp	x10, #0x10
    aa20:	stur	w15, [x9, #-4]
    aa24:	add	x9, x9, #0x50
    aa28:	b.eq	aa5c <__sanitizer_get_allocated_size@@Base+0xa88>  // b.none
    aa2c:	cmp	x10, #0xf
    aa30:	b.eq	a9f4 <__sanitizer_get_allocated_size@@Base+0xa20>  // b.none
    aa34:	add	x15, x10, #0x10
    aa38:	cmp	x15, #0x11
    aa3c:	mov	x15, x11
    aa40:	b.cc	a9f8 <__sanitizer_get_allocated_size@@Base+0xa24>  // b.lo, b.ul, b.last
    aa44:	lsr	x15, x10, #1
    aa48:	lsl	x15, x14, x15
    aa4c:	lsr	x16, x15, #1
    aa50:	and	x17, x10, #0x1
    aa54:	madd	x15, x16, x17, x15
    aa58:	b	a9f8 <__sanitizer_get_allocated_size@@Base+0xa24>
    aa5c:	ldr	w9, [x19, #4]
    aa60:	b	a994 <__sanitizer_get_allocated_size@@Base+0x9c0>
    aa64:	stp	x30, x27, [sp, #-80]!
    aa68:	stp	x26, x25, [sp, #16]
    aa6c:	stp	x24, x23, [sp, #32]
    aa70:	stp	x22, x21, [sp, #48]
    aa74:	stp	x20, x19, [sp, #64]
    aa78:	ldr	x26, [x0, #32]
    aa7c:	mov	x8, #0x2000000000          	// #137438953472
    aa80:	mov	x24, x0
    aa84:	mov	x19, x4
    aa88:	add	x25, x26, x8
    aa8c:	mov	w8, #0xc0                  	// #192
    aa90:	madd	x20, x2, x8, x25
    aa94:	mov	x0, x20
    aa98:	mov	x22, x3
    aa9c:	mov	x21, x2
    aaa0:	mov	x23, x1
    aaa4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
    aaa8:	mov	x27, x20
    aaac:	ldr	x9, [x27, #88]!
    aab0:	subs	x8, x9, x19
    aab4:	b.cc	ab88 <__sanitizer_get_allocated_size@@Base+0xbb4>  // b.lo, b.ul, b.last
    aab8:	str	x8, [x27]
    aabc:	cbz	x19, ab18 <__sanitizer_get_allocated_size@@Base+0xb44>
    aac0:	mov	w9, #0xe0000000            	// #-536870912
    aac4:	bfi	x9, x21, #32, #32
    aac8:	cmp	x19, #0x7
    aacc:	add	x9, x9, x26
    aad0:	b.ls	aaf4 <__sanitizer_get_allocated_size@@Base+0xb20>  // b.plast
    aad4:	add	x10, x8, x19
    aad8:	add	x10, x9, x10, lsl #2
    aadc:	cmp	x10, x22
    aae0:	add	x11, x9, x8, lsl #2
    aae4:	b.ls	ab54 <__sanitizer_get_allocated_size@@Base+0xb80>  // b.plast
    aae8:	add	x10, x22, x19, lsl #2
    aaec:	cmp	x11, x10
    aaf0:	b.cs	ab54 <__sanitizer_get_allocated_size@@Base+0xb80>  // b.hs, b.nlast
    aaf4:	mov	x10, xzr
    aaf8:	add	x8, x10, x8
    aafc:	sub	x11, x19, x10
    ab00:	add	x12, x22, x10, lsl #2
    ab04:	add	x8, x9, x8, lsl #2
    ab08:	ldr	w9, [x8], #4
    ab0c:	subs	x11, x11, #0x1
    ab10:	str	w9, [x12], #4
    ab14:	b.ne	ab08 <__sanitizer_get_allocated_size@@Base+0xb34>  // b.any
    ab18:	mov	w8, #0xc0                  	// #192
    ab1c:	madd	x8, x21, x8, x25
    ab20:	ldr	x9, [x8, #144]
    ab24:	add	x9, x9, x19
    ab28:	mov	w19, #0x1                   	// #1
    ab2c:	str	x9, [x8, #144]
    ab30:	mov	x0, x20
    ab34:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
    ab38:	mov	w0, w19
    ab3c:	ldp	x20, x19, [sp, #64]
    ab40:	ldp	x22, x21, [sp, #48]
    ab44:	ldp	x24, x23, [sp, #32]
    ab48:	ldp	x26, x25, [sp, #16]
    ab4c:	ldp	x30, x27, [sp], #80
    ab50:	ret
    ab54:	and	x10, x19, #0xfffffffffffffff8
    ab58:	add	x11, x11, #0x10
    ab5c:	add	x12, x22, #0x10
    ab60:	mov	x13, x10
    ab64:	ldp	q0, q1, [x11, #-16]
    ab68:	add	x11, x11, #0x20
    ab6c:	subs	x13, x13, #0x8
    ab70:	stp	q0, q1, [x12, #-16]
    ab74:	add	x12, x12, #0x20
    ab78:	b.ne	ab64 <__sanitizer_get_allocated_size@@Base+0xb90>  // b.any
    ab7c:	cmp	x10, x19
    ab80:	b.ne	aaf8 <__sanitizer_get_allocated_size@@Base+0xb24>  // b.any
    ab84:	b	ab18 <__sanitizer_get_allocated_size@@Base+0xb44>
    ab88:	sub	x4, x19, x9
    ab8c:	mov	x0, x24
    ab90:	mov	x1, x23
    ab94:	mov	x2, x21
    ab98:	mov	x3, x20
    ab9c:	bl	ac18 <__sanitizer_get_allocated_size@@Base+0xc44>
    aba0:	tbz	w0, #0, abb8 <__sanitizer_get_allocated_size@@Base+0xbe4>
    aba4:	ldr	x3, [x27]
    aba8:	subs	x8, x3, x19
    abac:	b.cc	abc0 <__sanitizer_get_allocated_size@@Base+0xbec>  // b.lo, b.ul, b.last
    abb0:	str	x8, [x27]
    abb4:	b	aac0 <__sanitizer_get_allocated_size@@Base+0xaec>
    abb8:	mov	w19, wzr
    abbc:	b	ab30 <__sanitizer_get_allocated_size@@Base+0xb5c>
    abc0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    abc4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    abc8:	add	x0, x0, #0xc39
    abcc:	add	x2, x2, #0xca1
    abd0:	mov	w1, #0x93                  	// #147
    abd4:	mov	x4, x19
    abd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    abdc:	cmp	x0, #0x1f
    abe0:	b.eq	ac10 <__sanitizer_get_allocated_size@@Base+0xc3c>  // b.none
    abe4:	subs	x8, x0, #0x10
    abe8:	b.hi	abf4 <__sanitizer_get_allocated_size@@Base+0xc20>  // b.pmore
    abec:	lsl	x0, x0, #5
    abf0:	ret
    abf4:	lsr	x9, x8, #1
    abf8:	mov	w10, #0x200                 	// #512
    abfc:	lsl	x9, x10, x9
    ac00:	lsr	x10, x9, #1
    ac04:	and	x8, x8, #0x1
    ac08:	madd	x0, x10, x8, x9
    ac0c:	ret
    ac10:	mov	w0, #0x40                  	// #64
    ac14:	ret
    ac18:	str	x30, [sp, #-96]!
    ac1c:	stp	x28, x27, [sp, #16]
    ac20:	stp	x26, x25, [sp, #32]
    ac24:	stp	x24, x23, [sp, #48]
    ac28:	stp	x22, x21, [sp, #64]
    ac2c:	stp	x20, x19, [sp, #80]
    ac30:	ldr	x9, [x0, #32]
    ac34:	mov	x19, x3
    ac38:	mov	x20, x0
    ac3c:	mov	x21, x2
    ac40:	cmp	x2, #0x1f
    ac44:	mov	x22, x1
    ac48:	b.eq	af2c <__sanitizer_get_allocated_size@@Base+0xf58>  // b.none
    ac4c:	subs	x8, x21, #0x10
    ac50:	b.hi	ac5c <__sanitizer_get_allocated_size@@Base+0xc88>  // b.pmore
    ac54:	lsl	x25, x21, #5
    ac58:	b	ac74 <__sanitizer_get_allocated_size@@Base+0xca0>
    ac5c:	lsr	x10, x8, #1
    ac60:	mov	w11, #0x200                 	// #512
    ac64:	lsl	x10, x11, x10
    ac68:	lsr	x11, x10, #1
    ac6c:	and	x8, x8, #0x1
    ac70:	madd	x25, x11, x8, x10
    ac74:	ldr	x10, [x19, #104]
    ac78:	ldr	x8, [x19, #120]
    ac7c:	add	x26, x9, x21, lsl #32
    ac80:	mov	w27, #0xe0000001            	// #-536870911
    ac84:	madd	x23, x25, x4, x10
    ac88:	cmp	x23, x8
    ac8c:	b.ls	ad04 <__sanitizer_get_allocated_size@@Base+0xd30>  // b.plast
    ac90:	cbz	x8, af34 <__sanitizer_get_allocated_size@@Base+0xf60>
    ac94:	ldr	x10, [x19, #128]
    ac98:	mvn	x9, x8
    ac9c:	add	x9, x23, x9
    aca0:	add	x9, x9, #0x10, lsl #12
    aca4:	and	x23, x9, #0xffffffffffff0000
    aca8:	add	x9, x10, x8
    acac:	add	x9, x9, x23
    acb0:	cmp	x9, x27
    acb4:	b.cs	af4c <__sanitizer_get_allocated_size@@Base+0xf78>  // b.hs, b.nlast
    acb8:	add	x24, x8, x26
    acbc:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    acc0:	add	x3, x3, #0xcce
    acc4:	mov	x0, x20
    acc8:	mov	x1, x24
    accc:	mov	x2, x23
    acd0:	bl	219f4 <__sanitizer_sandbox_on_notify@@Base+0x1374>
    acd4:	cbz	x0, af10 <__sanitizer_get_allocated_size@@Base+0xf3c>
    acd8:	mov	x4, x0
    acdc:	cmp	x0, x24
    ace0:	b.ne	b004 <__sanitizer_get_allocated_size@@Base+0x1030>  // b.any
    ace4:	bl	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    ace8:	ldr	x8, [x22, #24]
    acec:	add	x8, x8, x23
    acf0:	str	x8, [x22, #24]
    acf4:	ldr	x8, [x19, #120]
    acf8:	ldr	x10, [x19, #104]
    acfc:	add	x8, x8, x23
    ad00:	str	x8, [x19, #120]
    ad04:	sub	x28, x8, x10
    ad08:	ldr	x10, [x19, #112]
    ad0c:	ldr	x9, [x19, #128]
    ad10:	udiv	x24, x28, x25
    ad14:	lsl	x23, x24, #3
    ad18:	add	x10, x10, x23
    ad1c:	subs	x10, x10, x9
    ad20:	b.ls	ad8c <__sanitizer_get_allocated_size@@Base+0xdb8>  // b.plast
    ad24:	mov	w11, #0xffff                	// #65535
    ad28:	add	x10, x10, x11
    ad2c:	ands	x22, x10, #0xffffffffffff0000
    ad30:	b.eq	ad8c <__sanitizer_get_allocated_size@@Base+0xdb8>  // b.none
    ad34:	add	x8, x9, x8
    ad38:	add	x8, x8, x22
    ad3c:	cmp	x8, x27
    ad40:	b.cs	af94 <__sanitizer_get_allocated_size@@Base+0xfc0>  // b.hs, b.nlast
    ad44:	sub	x8, x26, x22
    ad48:	sub	x8, x8, x9
    ad4c:	mov	w9, #0xe0000000            	// #-536870912
    ad50:	add	x21, x8, x9
    ad54:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    ad58:	add	x3, x3, #0xcee
    ad5c:	mov	x0, x20
    ad60:	mov	x1, x21
    ad64:	mov	x2, x22
    ad68:	bl	219f4 <__sanitizer_sandbox_on_notify@@Base+0x1374>
    ad6c:	cbz	x0, af10 <__sanitizer_get_allocated_size@@Base+0xf3c>
    ad70:	mov	x4, x0
    ad74:	cmp	x0, x21
    ad78:	b.ne	b08c <__sanitizer_get_allocated_size@@Base+0x10b8>  // b.any
    ad7c:	bl	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    ad80:	ldr	x8, [x19, #128]
    ad84:	add	x8, x8, x22
    ad88:	str	x8, [x19, #128]
    ad8c:	ldp	x9, x8, [x19, #88]
    ad90:	add	x27, x9, x24
    ad94:	lsl	x9, x27, #2
    ad98:	cmp	x8, x9
    ad9c:	b.cs	ae08 <__sanitizer_get_allocated_size@@Base+0xe34>  // b.hs, b.nlast
    ada0:	mov	w10, #0xffff                	// #65535
    ada4:	add	x9, x9, x10
    ada8:	and	x21, x9, #0xffffffffffff0000
    adac:	mov	w9, #0x1                   	// #1
    adb0:	movk	w9, #0x2000, lsl #16
    adb4:	cmp	x21, x9
    adb8:	b.cs	b050 <__sanitizer_get_allocated_size@@Base+0x107c>  // b.hs, b.nlast
    adbc:	mov	w9, #0xe0000000            	// #-536870912
    adc0:	add	x26, x26, x9
    adc4:	add	x22, x26, x8
    adc8:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    adcc:	sub	x2, x21, x8
    add0:	add	x3, x3, #0xe0d
    add4:	mov	x0, x20
    add8:	mov	x1, x22
    addc:	bl	219f4 <__sanitizer_sandbox_on_notify@@Base+0x1374>
    ade0:	cbz	x0, af10 <__sanitizer_get_allocated_size@@Base+0xf3c>
    ade4:	mov	x4, x0
    ade8:	cmp	x0, x22
    adec:	b.ne	b070 <__sanitizer_get_allocated_size@@Base+0x109c>  // b.any
    adf0:	bl	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    adf4:	str	x21, [x19, #96]
    adf8:	ldr	x8, [x19, #104]
    adfc:	cmp	x25, x28
    ae00:	b.ls	ae1c <__sanitizer_get_allocated_size@@Base+0xe48>  // b.plast
    ae04:	b	aed0 <__sanitizer_get_allocated_size@@Base+0xefc>
    ae08:	mov	w8, #0xe0000000            	// #-536870912
    ae0c:	add	x26, x26, x8
    ae10:	ldr	x8, [x19, #104]
    ae14:	cmp	x25, x28
    ae18:	b.hi	aed0 <__sanitizer_get_allocated_size@@Base+0xefc>  // b.pmore
    ae1c:	cmp	x24, #0x1
    ae20:	csinc	x11, x24, xzr, hi  // hi = pmore
    ae24:	cmp	x11, #0x3
    ae28:	b.hi	ae38 <__sanitizer_get_allocated_size@@Base+0xe64>  // b.pmore
    ae2c:	mov	x9, xzr
    ae30:	mov	x10, x8
    ae34:	b	aeb0 <__sanitizer_get_allocated_size@@Base+0xedc>
    ae38:	lsl	x13, x25, #1
    ae3c:	movi	v1.2d, #0x0
    ae40:	add	x15, x13, x25
    ae44:	fmov	d3, x13
    ae48:	and	x9, x11, #0xfffffffffffffffc
    ae4c:	dup	v2.2d, x8
    ae50:	lsl	x14, x25, #2
    ae54:	mov	v1.d[1], x25
    ae58:	mov	v3.d[1], x15
    ae5c:	mov	x12, xzr
    ae60:	madd	x10, x9, x25, x8
    ae64:	dup	v0.2d, x14
    ae68:	add	v1.2d, v2.2d, v1.2d
    ae6c:	add	v2.2d, v2.2d, v3.2d
    ae70:	sub	x13, x26, #0xc
    ae74:	shrn	v3.2s, v1.2d, #4
    ae78:	mvn	x14, x12
    ae7c:	shrn2	v3.4s, v2.2d, #4
    ae80:	add	x12, x12, #0x4
    ae84:	add	x14, x27, x14
    ae88:	rev64	v3.4s, v3.4s
    ae8c:	add	v1.2d, v1.2d, v0.2d
    ae90:	cmp	x12, x9
    ae94:	lsl	x14, x14, #2
    ae98:	ext	v3.16b, v3.16b, v3.16b, #8
    ae9c:	add	v2.2d, v2.2d, v0.2d
    aea0:	str	q3, [x13, x14]
    aea4:	b.ne	ae74 <__sanitizer_get_allocated_size@@Base+0xea0>  // b.any
    aea8:	cmp	x11, x9
    aeac:	b.eq	aed0 <__sanitizer_get_allocated_size@@Base+0xefc>  // b.none
    aeb0:	mvn	x12, x9
    aeb4:	add	x9, x9, #0x1
    aeb8:	lsr	x11, x10, #4
    aebc:	add	x12, x27, x12
    aec0:	cmp	x9, x24
    aec4:	add	x10, x10, x25
    aec8:	str	w11, [x26, x12, lsl #2]
    aecc:	b.cc	aeb0 <__sanitizer_get_allocated_size@@Base+0xedc>  // b.lo, b.ul, b.last
    aed0:	ldr	x9, [x19, #88]
    aed4:	ldr	x4, [x19, #120]
    aed8:	madd	x3, x24, x25, x8
    aedc:	str	x3, [x19, #104]
    aee0:	add	x8, x9, x24
    aee4:	cmp	x3, x4
    aee8:	str	x8, [x19, #88]
    aeec:	b.hi	b020 <__sanitizer_get_allocated_size@@Base+0x104c>  // b.pmore
    aef0:	ldr	x8, [x19, #112]
    aef4:	ldr	x4, [x19, #128]
    aef8:	add	x3, x8, x23
    aefc:	cmp	x3, x4
    af00:	str	x3, [x19, #112]
    af04:	b.hi	b038 <__sanitizer_get_allocated_size@@Base+0x1064>  // b.pmore
    af08:	mov	w0, #0x1                   	// #1
    af0c:	strb	wzr, [x19, #140]
    af10:	ldp	x20, x19, [sp, #80]
    af14:	ldp	x22, x21, [sp, #64]
    af18:	ldp	x24, x23, [sp, #48]
    af1c:	ldp	x26, x25, [sp, #32]
    af20:	ldp	x28, x27, [sp, #16]
    af24:	ldr	x30, [sp], #96
    af28:	ret
    af2c:	mov	w25, #0x40                  	// #64
    af30:	b	ac74 <__sanitizer_get_allocated_size@@Base+0xca0>
    af34:	ldr	w8, [x20, #40]
    af38:	tbnz	w8, #31, af8c <__sanitizer_get_allocated_size@@Base+0xfb8>
    af3c:	bl	21004 <__sanitizer_sandbox_on_notify@@Base+0x984>
    af40:	ldr	x8, [x19, #120]
    af44:	str	x0, [x19, #176]
    af48:	b	ac94 <__sanitizer_get_allocated_size@@Base+0xcc0>
    af4c:	ldrb	w8, [x19, #140]
    af50:	cbnz	w8, aff4 <__sanitizer_get_allocated_size@@Base+0x1020>
    af54:	mov	w8, #0x1                   	// #1
    af58:	strb	w8, [x19, #140]
    af5c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    af60:	ldr	x8, [x8, #4024]
    af64:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    af68:	add	x0, x0, #0xd7e
    af6c:	ldr	x1, [x8]
    af70:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    af74:	cmp	x21, #0x1f
    af78:	b.eq	affc <__sanitizer_get_allocated_size@@Base+0x1028>  // b.none
    af7c:	subs	x8, x21, #0x10
    af80:	b.hi	afcc <__sanitizer_get_allocated_size@@Base+0xff8>  // b.pmore
    af84:	lsl	x2, x21, #5
    af88:	b	afe4 <__sanitizer_get_allocated_size@@Base+0x1010>
    af8c:	mov	x8, xzr
    af90:	b	ac94 <__sanitizer_get_allocated_size@@Base+0xcc0>
    af94:	ldrb	w8, [x19, #140]
    af98:	cbnz	w8, aff4 <__sanitizer_get_allocated_size@@Base+0x1020>
    af9c:	mov	w8, #0x1                   	// #1
    afa0:	strb	w8, [x19, #140]
    afa4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    afa8:	ldr	x8, [x8, #4024]
    afac:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    afb0:	add	x0, x0, #0xd7e
    afb4:	ldr	x1, [x8]
    afb8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    afbc:	cmp	x21, #0x1f
    afc0:	b.eq	affc <__sanitizer_get_allocated_size@@Base+0x1028>  // b.none
    afc4:	subs	x8, x21, #0x10
    afc8:	b.ls	af84 <__sanitizer_get_allocated_size@@Base+0xfb0>  // b.plast
    afcc:	lsr	x9, x8, #1
    afd0:	mov	w10, #0x200                 	// #512
    afd4:	lsl	x9, x10, x9
    afd8:	lsr	x10, x9, #1
    afdc:	and	x8, x8, #0x1
    afe0:	madd	x2, x10, x8, x9
    afe4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    afe8:	add	x0, x0, #0xd92
    afec:	mov	w1, #0x1000                	// #4096
    aff0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    aff4:	mov	w0, wzr
    aff8:	b	af10 <__sanitizer_get_allocated_size@@Base+0xf3c>
    affc:	mov	w2, #0x40                  	// #64
    b000:	b	afe4 <__sanitizer_get_allocated_size@@Base+0x1010>
    b004:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b008:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b00c:	add	x0, x0, #0xc39
    b010:	add	x2, x2, #0xdc7
    b014:	mov	w1, #0x281                 	// #641
    b018:	mov	x3, x24
    b01c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b020:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b024:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b028:	add	x0, x0, #0xc39
    b02c:	add	x2, x2, #0xd12
    b030:	mov	w1, #0x2f9                 	// #761
    b034:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b038:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b03c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b040:	add	x0, x0, #0xc39
    b044:	add	x2, x2, #0xd48
    b048:	mov	w1, #0x2fb                 	// #763
    b04c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b050:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b054:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b058:	add	x0, x0, #0xc39
    b05c:	add	x2, x2, #0xddd
    b060:	mov	w1, #0x295                 	// #661
    b064:	mov	w4, #0x20000000            	// #536870912
    b068:	mov	x3, x21
    b06c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b070:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b074:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b078:	add	x0, x0, #0xc39
    b07c:	add	x2, x2, #0xdc7
    b080:	mov	w1, #0x281                 	// #641
    b084:	mov	x3, x22
    b088:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b08c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b090:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b094:	add	x0, x0, #0xc39
    b098:	add	x2, x2, #0xdc7
    b09c:	mov	w1, #0x281                 	// #641
    b0a0:	mov	x3, x21
    b0a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b0a8:	stp	x30, x23, [sp, #-48]!
    b0ac:	stp	x22, x21, [sp, #16]
    b0b0:	stp	x20, x19, [sp, #32]
    b0b4:	cbz	x2, b1ec <__sanitizer_get_allocated_size@@Base+0x1218>
    b0b8:	mov	x19, x2
    b0bc:	cmp	x2, #0x20
    b0c0:	b.cs	b20c <__sanitizer_get_allocated_size@@Base+0x1238>  // b.hs, b.nlast
    b0c4:	mov	w8, #0x50                  	// #80
    b0c8:	madd	x23, x19, x8, x0
    b0cc:	mov	x8, x23
    b0d0:	ldr	w9, [x8, #4]!
    b0d4:	mov	x21, x3
    b0d8:	mov	x22, x1
    b0dc:	mov	x20, x0
    b0e0:	cbz	w9, b138 <__sanitizer_get_allocated_size@@Base+0x1164>
    b0e4:	ldr	w8, [x23]
    b0e8:	cmp	w8, w9
    b0ec:	b.eq	b1cc <__sanitizer_get_allocated_size@@Base+0x11f8>  // b.none
    b0f0:	ldr	x9, [x22, #32]
    b0f4:	sub	x10, x21, x19, lsl #32
    b0f8:	add	w11, w8, #0x1
    b0fc:	mov	w12, #0x50                  	// #80
    b100:	str	w11, [x23]
    b104:	madd	x11, x19, x12, x20
    b108:	sub	x9, x10, x9
    b10c:	add	x8, x11, w8, uxtw #2
    b110:	lsr	x9, x9, #4
    b114:	str	w9, [x8, #16]
    b118:	ldr	x8, [x11, #8]
    b11c:	ldr	x9, [x20, #2576]
    b120:	sub	x8, x9, x8
    b124:	str	x8, [x20, #2576]
    b128:	ldp	x20, x19, [sp, #32]
    b12c:	ldp	x22, x21, [sp, #16]
    b130:	ldp	x30, x23, [sp], #48
    b134:	ret
    b138:	add	x9, x20, #0x58
    b13c:	mov	x10, #0xfffffffffffffff1    	// #-15
    b140:	mov	w11, #0x20                  	// #32
    b144:	mov	w12, #0x400                 	// #1024
    b148:	mov	w13, #0x8                   	// #8
    b14c:	mov	w14, #0x200                 	// #512
    b150:	b	b18c <__sanitizer_get_allocated_size@@Base+0x11b8>
    b154:	mov	w15, #0x40                  	// #64
    b158:	udiv	w16, w12, w15
    b15c:	cmp	w16, #0x8
    b160:	str	x15, [x9]
    b164:	csel	x15, x16, x13, cc  // cc = lo, ul, last
    b168:	cmp	x15, #0x0
    b16c:	csinc	w15, w15, wzr, ne  // ne = any
    b170:	add	x10, x10, #0x1
    b174:	lsl	w15, w15, #1
    b178:	add	x11, x11, #0x20
    b17c:	cmp	x10, #0x10
    b180:	stur	w15, [x9, #-4]
    b184:	add	x9, x9, #0x50
    b188:	b.eq	b1bc <__sanitizer_get_allocated_size@@Base+0x11e8>  // b.none
    b18c:	cmp	x10, #0xf
    b190:	b.eq	b154 <__sanitizer_get_allocated_size@@Base+0x1180>  // b.none
    b194:	add	x15, x10, #0x10
    b198:	cmp	x15, #0x11
    b19c:	mov	x15, x11
    b1a0:	b.cc	b158 <__sanitizer_get_allocated_size@@Base+0x1184>  // b.lo, b.ul, b.last
    b1a4:	lsr	x15, x10, #1
    b1a8:	lsl	x15, x14, x15
    b1ac:	lsr	x16, x15, #1
    b1b0:	and	x17, x10, #0x1
    b1b4:	madd	x15, x16, x17, x15
    b1b8:	b	b158 <__sanitizer_get_allocated_size@@Base+0x1184>
    b1bc:	ldr	w9, [x8]
    b1c0:	ldr	w8, [x23]
    b1c4:	cmp	w8, w9
    b1c8:	b.ne	b0f0 <__sanitizer_get_allocated_size@@Base+0x111c>  // b.any
    b1cc:	lsr	w4, w9, #1
    b1d0:	mov	x0, x20
    b1d4:	mov	x1, x23
    b1d8:	mov	x2, x22
    b1dc:	mov	x3, x19
    b1e0:	bl	b35c <__sanitizer_get_allocated_size@@Base+0x1388>
    b1e4:	ldr	w8, [x23]
    b1e8:	b	b0f0 <__sanitizer_get_allocated_size@@Base+0x111c>
    b1ec:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b1f0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b1f4:	add	x0, x0, #0xb98
    b1f8:	add	x2, x2, #0xc02
    b1fc:	mov	w1, #0x31                  	// #49
    b200:	mov	x3, xzr
    b204:	mov	x4, xzr
    b208:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b20c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b210:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b214:	add	x0, x0, #0xb98
    b218:	add	x2, x2, #0xc1a
    b21c:	mov	w1, #0x32                  	// #50
    b220:	mov	w4, #0x20                  	// #32
    b224:	mov	x3, x19
    b228:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b22c:	stp	x30, x21, [sp, #-32]!
    b230:	stp	x20, x19, [sp, #16]
    b234:	ldr	x8, [x0]
    b238:	sub	x9, x8, #0x1
    b23c:	tst	x9, x2
    b240:	b.ne	b304 <__sanitizer_get_allocated_size@@Base+0x1330>  // b.any
    b244:	mov	x20, x0
    b248:	mov	x21, x1
    b24c:	sub	x19, x2, x8
    b250:	add	x0, x0, #0x268
    b254:	mov	w8, #0x1                   	// #1
    b258:	ldaxrb	w9, [x0]
    b25c:	stlxrb	w10, w8, [x0]
    b260:	cbnz	w10, b258 <__sanitizer_get_allocated_size@@Base+0x1284>
    b264:	cbz	w9, b26c <__sanitizer_get_allocated_size@@Base+0x1298>
    b268:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    b26c:	ldr	x3, [x19, #24]
    b270:	ldr	x9, [x20, #8]
    b274:	ldr	x8, [x9, x3, lsl #3]
    b278:	cmp	x8, x19
    b27c:	b.ne	b324 <__sanitizer_get_allocated_size@@Base+0x1350>  // b.any
    b280:	ldr	x4, [x20, #56]
    b284:	cmp	x3, x4
    b288:	b.cs	b344 <__sanitizer_get_allocated_size@@Base+0x1370>  // b.hs, b.nlast
    b28c:	sub	x8, x4, #0x1
    b290:	str	x8, [x20, #56]
    b294:	ldr	x8, [x9, x8, lsl #3]
    b298:	lsl	x10, x3, #3
    b29c:	mov	w2, wzr
    b2a0:	str	x8, [x9, x10]
    b2a4:	ldr	x8, [x20, #8]
    b2a8:	ldr	x8, [x8, x10]
    b2ac:	str	x3, [x8, #24]
    b2b0:	ldp	x8, x9, [x20, #80]
    b2b4:	strb	wzr, [x20, #64]
    b2b8:	add	x8, x8, #0x1
    b2bc:	str	x8, [x20, #80]
    b2c0:	ldr	x8, [x19, #8]
    b2c4:	sub	x9, x9, x8
    b2c8:	str	x9, [x20, #88]
    b2cc:	ldr	x9, [x21, #16]
    b2d0:	sub	x9, x9, x8
    b2d4:	str	x9, [x21, #16]
    b2d8:	ldr	x9, [x21, #24]
    b2dc:	sub	x8, x9, x8
    b2e0:	str	x8, [x21, #24]
    b2e4:	dmb	ish
    b2e8:	strb	wzr, [x20, #616]
    b2ec:	ldp	x0, x1, [x19]
    b2f0:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
    b2f4:	ldp	x0, x1, [x19]
    b2f8:	ldp	x20, x19, [sp, #16]
    b2fc:	ldp	x30, x21, [sp], #32
    b300:	b	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    b304:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b308:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b30c:	add	x0, x0, #0xe3b
    b310:	add	x2, x2, #0xfd8
    b314:	mov	w1, #0x12d                 	// #301
    b318:	mov	x3, xzr
    b31c:	mov	x4, xzr
    b320:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b324:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b328:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    b32c:	add	x0, x0, #0xe3b
    b330:	add	x2, x2, #0x1c7
    b334:	mov	w1, #0x8b                  	// #139
    b338:	mov	x3, x8
    b33c:	mov	x4, x19
    b340:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b344:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b348:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    b34c:	add	x0, x0, #0xe3b
    b350:	add	x2, x2, #0x1e1
    b354:	mov	w1, #0x8c                  	// #140
    b358:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b35c:	str	x30, [sp, #-16]!
    b360:	mov	x8, x3
    b364:	ldr	w3, [x1]
    b368:	subs	x10, x3, x4
    b36c:	b.cc	b394 <__sanitizer_get_allocated_size@@Base+0x13c0>  // b.lo, b.ul, b.last
    b370:	add	x9, x0, #0xa00
    b374:	add	x11, x1, x10, lsl #2
    b378:	add	x3, x11, #0x10
    b37c:	str	w10, [x1]
    b380:	mov	x0, x2
    b384:	mov	x1, x9
    b388:	mov	x2, x8
    b38c:	ldr	x30, [sp], #16
    b390:	b	b3ac <__sanitizer_get_allocated_size@@Base+0x13d8>
    b394:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b398:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    b39c:	add	x0, x0, #0xb98
    b3a0:	add	x2, x2, #0x61
    b3a4:	mov	w1, #0x6f                  	// #111
    b3a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b3ac:	sub	sp, sp, #0x70
    b3b0:	stp	x29, x30, [sp, #16]
    b3b4:	stp	x28, x27, [sp, #32]
    b3b8:	stp	x26, x25, [sp, #48]
    b3bc:	stp	x24, x23, [sp, #64]
    b3c0:	stp	x22, x21, [sp, #80]
    b3c4:	stp	x20, x19, [sp, #96]
    b3c8:	ldr	x8, [x0, #32]
    b3cc:	mov	w10, #0xe0000000            	// #-536870912
    b3d0:	mov	x9, #0x2000000000          	// #137438953472
    b3d4:	bfi	x10, x2, #32, #32
    b3d8:	add	x24, x8, x9
    b3dc:	add	x29, x10, x8
    b3e0:	mov	w8, #0xc0                  	// #192
    b3e4:	madd	x27, x2, x8, x24
    b3e8:	mov	x20, x0
    b3ec:	mov	x0, x27
    b3f0:	mov	x21, x4
    b3f4:	mov	x25, x3
    b3f8:	mov	x19, x2
    b3fc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
    b400:	mov	x26, x27
    b404:	ldr	x23, [x26, #88]!
    b408:	mov	x22, x27
    b40c:	ldr	x8, [x22, #96]!
    b410:	add	x28, x23, x21
    b414:	lsl	x9, x28, #2
    b418:	cmp	x8, x9
    b41c:	b.cs	b478 <__sanitizer_get_allocated_size@@Base+0x14a4>  // b.hs, b.nlast
    b420:	mov	w10, #0xffff                	// #65535
    b424:	add	x9, x9, x10
    b428:	stp	x25, x24, [sp]
    b42c:	and	x24, x9, #0xffffffffffff0000
    b430:	mov	w9, #0x1                   	// #1
    b434:	movk	w9, #0x2000, lsl #16
    b438:	cmp	x24, x9
    b43c:	b.cs	b548 <__sanitizer_get_allocated_size@@Base+0x1574>  // b.hs, b.nlast
    b440:	add	x25, x8, x29
    b444:	adrp	x3, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b448:	sub	x2, x24, x8
    b44c:	add	x3, x3, #0xe0d
    b450:	mov	x0, x20
    b454:	mov	x1, x25
    b458:	bl	219f4 <__sanitizer_sandbox_on_notify@@Base+0x1374>
    b45c:	cbz	x0, b568 <__sanitizer_get_allocated_size@@Base+0x1594>
    b460:	mov	x4, x0
    b464:	cmp	x0, x25
    b468:	b.ne	b598 <__sanitizer_get_allocated_size@@Base+0x15c4>  // b.any
    b46c:	bl	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    b470:	str	x24, [x22]
    b474:	ldp	x25, x24, [sp]
    b478:	cbz	x21, b4c8 <__sanitizer_get_allocated_size@@Base+0x14f4>
    b47c:	cmp	x21, #0x7
    b480:	b.ls	b4a4 <__sanitizer_get_allocated_size@@Base+0x14d0>  // b.plast
    b484:	add	x10, x29, x23, lsl #2
    b488:	add	x8, x25, x21, lsl #2
    b48c:	cmp	x10, x8
    b490:	b.cs	b514 <__sanitizer_get_allocated_size@@Base+0x1540>  // b.hs, b.nlast
    b494:	add	x8, x23, x21
    b498:	add	x8, x29, x8, lsl #2
    b49c:	cmp	x8, x25
    b4a0:	b.ls	b514 <__sanitizer_get_allocated_size@@Base+0x1540>  // b.plast
    b4a4:	mov	x8, xzr
    b4a8:	sub	x9, x21, x8
    b4ac:	add	x10, x25, x8, lsl #2
    b4b0:	add	x8, x8, x23
    b4b4:	add	x8, x29, x8, lsl #2
    b4b8:	ldr	w11, [x10], #4
    b4bc:	subs	x9, x9, #0x1
    b4c0:	str	w11, [x8], #4
    b4c4:	b.ne	b4b8 <__sanitizer_get_allocated_size@@Base+0x14e4>  // b.any
    b4c8:	mov	w8, #0xc0                  	// #192
    b4cc:	str	x28, [x26]
    b4d0:	madd	x8, x19, x8, x24
    b4d4:	ldr	x9, [x8, #152]
    b4d8:	mov	x0, x20
    b4dc:	mov	x1, x19
    b4e0:	mov	w2, wzr
    b4e4:	add	x9, x9, x21
    b4e8:	str	x9, [x8, #152]
    b4ec:	bl	b5b4 <__sanitizer_get_allocated_size@@Base+0x15e0>
    b4f0:	mov	x0, x27
    b4f4:	ldp	x20, x19, [sp, #96]
    b4f8:	ldp	x22, x21, [sp, #80]
    b4fc:	ldp	x24, x23, [sp, #64]
    b500:	ldp	x26, x25, [sp, #48]
    b504:	ldp	x28, x27, [sp, #32]
    b508:	ldp	x29, x30, [sp, #16]
    b50c:	add	sp, sp, #0x70
    b510:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
    b514:	and	x8, x21, #0xfffffffffffffff8
    b518:	add	x9, x25, #0x10
    b51c:	add	x10, x10, #0x10
    b520:	mov	x11, x8
    b524:	ldp	q0, q1, [x9, #-16]
    b528:	add	x9, x9, #0x20
    b52c:	subs	x11, x11, #0x8
    b530:	stp	q0, q1, [x10, #-16]
    b534:	add	x10, x10, #0x20
    b538:	b.ne	b524 <__sanitizer_get_allocated_size@@Base+0x1550>  // b.any
    b53c:	cmp	x8, x21
    b540:	b.ne	b4a8 <__sanitizer_get_allocated_size@@Base+0x14d4>  // b.any
    b544:	b	b4c8 <__sanitizer_get_allocated_size@@Base+0x14f4>
    b548:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b54c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b550:	add	x0, x0, #0xc39
    b554:	add	x2, x2, #0xddd
    b558:	mov	w1, #0x295                 	// #661
    b55c:	mov	w4, #0x20000000            	// #536870912
    b560:	mov	x3, x24
    b564:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b568:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    b56c:	ldr	x8, [x8, #4024]
    b570:	mov	x0, x19
    b574:	ldr	x20, [x8]
    b578:	bl	abdc <__sanitizer_get_allocated_size@@Base+0xc08>
    b57c:	mov	x3, x0
    b580:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    b584:	add	x0, x0, #0x7b
    b588:	mov	x1, x20
    b58c:	mov	x2, x19
    b590:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    b594:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    b598:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b59c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b5a0:	add	x0, x0, #0xc39
    b5a4:	add	x2, x2, #0xdc7
    b5a8:	mov	w1, #0x281                 	// #641
    b5ac:	mov	x3, x25
    b5b0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    b5b4:	sub	sp, sp, #0x70
    b5b8:	stp	x30, x27, [sp, #32]
    b5bc:	stp	x26, x25, [sp, #48]
    b5c0:	stp	x24, x23, [sp, #64]
    b5c4:	stp	x22, x21, [sp, #80]
    b5c8:	stp	x20, x19, [sp, #96]
    b5cc:	ldr	x8, [x0, #32]
    b5d0:	mov	w24, w2
    b5d4:	mov	x21, x0
    b5d8:	mov	x19, x1
    b5dc:	cmp	x1, #0x1f
    b5e0:	mov	x9, #0x2000000000          	// #137438953472
    b5e4:	b.eq	b748 <__sanitizer_get_allocated_size@@Base+0x1774>  // b.none
    b5e8:	subs	x10, x19, #0x10
    b5ec:	b.hi	b5f8 <__sanitizer_get_allocated_size@@Base+0x1624>  // b.pmore
    b5f0:	lsl	x20, x19, #5
    b5f4:	b	b610 <__sanitizer_get_allocated_size@@Base+0x163c>
    b5f8:	lsr	x11, x10, #1
    b5fc:	mov	w12, #0x200                 	// #512
    b600:	lsl	x11, x12, x11
    b604:	lsr	x12, x11, #1
    b608:	and	x10, x10, #0x1
    b60c:	madd	x20, x12, x10, x11
    b610:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    b614:	ldr	x23, [x23, #4016]
    b618:	add	x25, x8, x9
    b61c:	ldr	x22, [x23]
    b620:	cbnz	x22, b630 <__sanitizer_get_allocated_size@@Base+0x165c>
    b624:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    b628:	mov	x22, x0
    b62c:	str	x0, [x23]
    b630:	mov	w8, #0xc0                  	// #192
    b634:	madd	x8, x19, x8, x25
    b638:	ldr	x23, [x8, #88]
    b63c:	mul	x8, x23, x20
    b640:	cmp	x8, x22
    b644:	b.cc	b72c <__sanitizer_get_allocated_size@@Base+0x1758>  // b.lo, b.ul, b.last
    b648:	mov	w8, #0xc0                  	// #192
    b64c:	madd	x26, x19, x8, x25
    b650:	ldr	x8, [x26, #160]!
    b654:	mov	x27, x26
    b658:	ldr	x9, [x27, #-8]!
    b65c:	sub	x8, x9, x8
    b660:	mul	x8, x8, x20
    b664:	cmp	x8, x22
    b668:	b.cc	b72c <__sanitizer_get_allocated_size@@Base+0x1758>  // b.lo, b.ul, b.last
    b66c:	tbnz	w24, #0, b69c <__sanitizer_get_allocated_size@@Base+0x16c8>
    b670:	ldr	w8, [x21, #40]
    b674:	tbnz	w8, #31, b72c <__sanitizer_get_allocated_size@@Base+0x1758>
    b678:	mov	w9, #0xc0                  	// #192
    b67c:	madd	x9, x19, x9, x25
    b680:	ldr	x9, [x9, #176]
    b684:	mov	w10, #0x4240                	// #16960
    b688:	movk	w10, #0xf, lsl #16
    b68c:	madd	x24, x8, x10, x9
    b690:	bl	21004 <__sanitizer_sandbox_on_notify@@Base+0x984>
    b694:	cmp	x24, x0
    b698:	b.hi	b72c <__sanitizer_get_allocated_size@@Base+0x1758>  // b.pmore
    b69c:	ldr	x8, [x21, #32]
    b6a0:	sub	x9, x22, #0x1
    b6a4:	tst	x22, x9
    b6a8:	stp	xzr, xzr, [sp, #16]
    b6ac:	add	x8, x8, x19, lsl #32
    b6b0:	stp	x21, x8, [sp]
    b6b4:	b.ne	b750 <__sanitizer_get_allocated_size@@Base+0x177c>  // b.any
    b6b8:	mov	w9, #0xc0                  	// #192
    b6bc:	madd	x9, x19, x9, x25
    b6c0:	ldr	x9, [x9, #104]
    b6c4:	mov	w10, #0xe0000000            	// #-536870912
    b6c8:	add	x0, x8, x10
    b6cc:	mov	x4, sp
    b6d0:	add	x8, x22, x9
    b6d4:	sub	x8, x8, #0x1
    b6d8:	neg	x9, x22
    b6dc:	and	x8, x8, x9
    b6e0:	udiv	x3, x8, x22
    b6e4:	mov	x1, x23
    b6e8:	mov	x2, x20
    b6ec:	bl	b760 <__sanitizer_get_allocated_size@@Base+0x178c>
    b6f0:	ldr	x8, [sp, #16]
    b6f4:	cbz	x8, b71c <__sanitizer_get_allocated_size@@Base+0x1748>
    b6f8:	ldr	x9, [x27]
    b6fc:	mov	w10, #0xc0                  	// #192
    b700:	str	x9, [x26]
    b704:	madd	x9, x19, x10, x25
    b708:	ldr	x10, [x9, #168]
    b70c:	add	x8, x10, x8
    b710:	str	x8, [x9, #168]
    b714:	ldr	x8, [sp, #24]
    b718:	str	x8, [x9, #184]
    b71c:	bl	21004 <__sanitizer_sandbox_on_notify@@Base+0x984>
    b720:	mov	w8, #0xc0                  	// #192
    b724:	madd	x8, x19, x8, x25
    b728:	str	x0, [x8, #176]
    b72c:	ldp	x20, x19, [sp, #96]
    b730:	ldp	x22, x21, [sp, #80]
    b734:	ldp	x24, x23, [sp, #64]
    b738:	ldp	x26, x25, [sp, #48]
    b73c:	ldp	x30, x27, [sp, #32]
    b740:	add	sp, sp, #0x70
    b744:	ret
    b748:	mov	w20, #0x40                  	// #64
    b74c:	b	b610 <__sanitizer_get_allocated_size@@Base+0x163c>
    b750:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    b754:	add	x0, x0, #0x20f
    b758:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    b75c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    b760:	sub	sp, sp, #0xb0
    b764:	stp	x29, x30, [sp, #80]
    b768:	stp	x28, x27, [sp, #96]
    b76c:	stp	x26, x25, [sp, #112]
    b770:	stp	x24, x23, [sp, #128]
    b774:	stp	x22, x21, [sp, #144]
    b778:	stp	x20, x19, [sp, #160]
    b77c:	adrp	x27, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    b780:	ldr	x27, [x27, #4016]
    b784:	mov	x19, x4
    b788:	mov	x25, x3
    b78c:	mov	x21, x2
    b790:	ldr	x22, [x27]
    b794:	mov	x23, x1
    b798:	mov	x24, x0
    b79c:	cbz	x22, b7cc <__sanitizer_get_allocated_size@@Base+0x17f8>
    b7a0:	cmp	x22, x21
    b7a4:	b.cc	b7e0 <__sanitizer_get_allocated_size@@Base+0x180c>  // b.lo, b.ul, b.last
    b7a8:	udiv	x20, x22, x21
    b7ac:	msub	x8, x20, x21, x22
    b7b0:	cbz	x8, b800 <__sanitizer_get_allocated_size@@Base+0x182c>
    b7b4:	udiv	x9, x21, x8
    b7b8:	msub	x8, x9, x8, x21
    b7bc:	cbz	x8, b7fc <__sanitizer_get_allocated_size@@Base+0x1828>
    b7c0:	mov	w28, wzr
    b7c4:	add	x20, x20, #0x2
    b7c8:	b	b804 <__sanitizer_get_allocated_size@@Base+0x1830>
    b7cc:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    b7d0:	mov	x22, x0
    b7d4:	str	x0, [x27]
    b7d8:	cmp	x22, x21
    b7dc:	b.cs	b7a8 <__sanitizer_get_allocated_size@@Base+0x17d4>  // b.hs, b.nlast
    b7e0:	udiv	x8, x21, x22
    b7e4:	msub	x8, x8, x22, x21
    b7e8:	mov	w9, #0x1                   	// #1
    b7ec:	cmp	x8, #0x0
    b7f0:	cset	w28, eq  // eq = none
    b7f4:	cinc	x20, x9, ne  // ne = any
    b7f8:	b	b804 <__sanitizer_get_allocated_size@@Base+0x1830>
    b7fc:	add	x20, x20, #0x1
    b800:	mov	w28, #0x1                   	// #1
    b804:	add	x0, sp, #0x10
    b808:	mov	x1, x25
    b80c:	mov	x2, x20
    b810:	mov	x3, x19
    b814:	bl	bbcc <__sanitizer_get_allocated_size@@Base+0x1bf8>
    b818:	ldr	x8, [sp, #72]
    b81c:	cbz	x8, bb74 <__sanitizer_get_allocated_size@@Base+0x1ba0>
    b820:	lsr	x25, x22, #4
    b824:	sub	x9, x25, #0x1
    b828:	tst	x25, x9
    b82c:	b.ne	bb94 <__sanitizer_get_allocated_size@@Base+0x1bc0>  // b.any
    b830:	cbz	x25, bbac <__sanitizer_get_allocated_size@@Base+0x1bd8>
    b834:	rbit	x9, x25
    b838:	lsr	x1, x21, #4
    b83c:	cmp	x22, x21
    b840:	clz	x9, x9
    b844:	b.cc	b854 <__sanitizer_get_allocated_size@@Base+0x1880>  // b.lo, b.ul, b.last
    b848:	udiv	x10, x22, x21
    b84c:	msub	x10, x10, x21, x22
    b850:	cbz	x10, b8c4 <__sanitizer_get_allocated_size@@Base+0x18f0>
    b854:	cbz	x23, b904 <__sanitizer_get_allocated_size@@Base+0x1930>
    b858:	mov	x10, xzr
    b85c:	sub	x11, x1, #0x1
    b860:	mov	w12, #0x1                   	// #1
    b864:	b	b874 <__sanitizer_get_allocated_size@@Base+0x18a0>
    b868:	add	x10, x10, #0x1
    b86c:	cmp	x10, x23
    b870:	b.eq	b904 <__sanitizer_get_allocated_size@@Base+0x1930>  // b.none
    b874:	ldr	w14, [x24, x10, lsl #2]
    b878:	lsr	x13, x14, x9
    b87c:	add	x14, x11, x14
    b880:	lsr	x14, x14, x9
    b884:	cmp	x14, x13
    b888:	b.cc	b868 <__sanitizer_get_allocated_size@@Base+0x1894>  // b.lo, b.ul, b.last
    b88c:	ldp	x15, x16, [sp, #40]
    b890:	ldr	x17, [sp, #24]
    b894:	lsr	x15, x13, x15
    b898:	lsl	x15, x15, #3
    b89c:	ldr	x18, [x8, x15]
    b8a0:	and	x16, x16, x13
    b8a4:	lsl	x16, x16, x17
    b8a8:	add	x13, x13, #0x1
    b8ac:	lsl	x16, x12, x16
    b8b0:	add	x16, x16, x18
    b8b4:	cmp	x13, x14
    b8b8:	str	x16, [x8, x15]
    b8bc:	b.ls	b88c <__sanitizer_get_allocated_size@@Base+0x18b8>  // b.plast
    b8c0:	b	b868 <__sanitizer_get_allocated_size@@Base+0x1894>
    b8c4:	cbz	x23, b904 <__sanitizer_get_allocated_size@@Base+0x1930>
    b8c8:	mov	w10, #0x1                   	// #1
    b8cc:	ldr	w11, [x24], #4
    b8d0:	ldp	x12, x13, [sp, #40]
    b8d4:	ldr	x14, [sp, #24]
    b8d8:	subs	x23, x23, #0x1
    b8dc:	lsr	x11, x11, x9
    b8e0:	lsr	x12, x11, x12
    b8e4:	lsl	x12, x12, #3
    b8e8:	ldr	x15, [x8, x12]
    b8ec:	and	x11, x13, x11
    b8f0:	lsl	x11, x11, x14
    b8f4:	lsl	x11, x10, x11
    b8f8:	add	x11, x11, x15
    b8fc:	str	x11, [x8, x12]
    b900:	b.ne	b8cc <__sanitizer_get_allocated_size@@Base+0x18f8>  // b.any
    b904:	ldr	x0, [x27]
    b908:	cbnz	x0, b91c <__sanitizer_get_allocated_size@@Base+0x1948>
    b90c:	mov	x23, x1
    b910:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    b914:	mov	x1, x23
    b918:	str	x0, [x27]
    b91c:	lsr	x8, x0, #4
    b920:	sub	x9, x8, #0x1
    b924:	tst	x8, x9
    b928:	b.ne	bb94 <__sanitizer_get_allocated_size@@Base+0x1bc0>  // b.any
    b92c:	cbz	x8, bbac <__sanitizer_get_allocated_size@@Base+0x1bd8>
    b930:	rbit	x8, x8
    b934:	clz	x8, x8
    b938:	str	x8, [sp, #8]
    b93c:	cbz	w28, b9fc <__sanitizer_get_allocated_size@@Base+0x1a28>
    b940:	ldr	x9, [sp, #16]
    b944:	cbz	x9, bb64 <__sanitizer_get_allocated_size@@Base+0x1b90>
    b948:	mov	x24, xzr
    b94c:	mov	x27, xzr
    b950:	mov	w8, wzr
    b954:	b	b970 <__sanitizer_get_allocated_size@@Base+0x199c>
    b958:	tst	w8, #0xff
    b95c:	csinc	w8, w8, wzr, ne  // ne = any
    b960:	csel	x27, x24, x27, eq  // eq = none
    b964:	add	x24, x24, #0x1
    b968:	cmp	x24, x9
    b96c:	b.cs	bb1c <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.hs, b.nlast
    b970:	ldp	x10, x12, [sp, #40]
    b974:	ldr	x11, [sp, #72]
    b978:	lsr	x10, x24, x10
    b97c:	ldr	x10, [x11, x10, lsl #3]
    b980:	ldp	x13, x11, [sp, #24]
    b984:	and	x12, x12, x24
    b988:	lsl	x12, x12, x13
    b98c:	lsr	x10, x10, x12
    b990:	and	x10, x10, x11
    b994:	cmp	x10, x20
    b998:	b.eq	b958 <__sanitizer_get_allocated_size@@Base+0x1984>  // b.none
    b99c:	tst	w8, #0xff
    b9a0:	b.eq	b9e8 <__sanitizer_get_allocated_size@@Base+0x1a14>  // b.none
    b9a4:	ldr	x10, [sp, #8]
    b9a8:	ldr	x9, [x19, #8]
    b9ac:	lsl	x8, x27, x10
    b9b0:	lsl	x10, x24, x10
    b9b4:	ubfiz	x8, x8, #4, #32
    b9b8:	ubfiz	x10, x10, #4, #32
    b9bc:	add	x21, x9, x8
    b9c0:	add	x22, x9, x10
    b9c4:	mov	x0, x21
    b9c8:	mov	x1, x22
    b9cc:	bl	210ec <__sanitizer_sandbox_on_notify@@Base+0xa6c>
    b9d0:	ldp	x8, x9, [x19, #16]
    b9d4:	sub	x10, x22, x21
    b9d8:	add	x8, x8, #0x1
    b9dc:	add	x9, x10, x9
    b9e0:	stp	x8, x9, [x19, #16]
    b9e4:	ldr	x9, [sp, #16]
    b9e8:	mov	w8, wzr
    b9ec:	add	x24, x24, #0x1
    b9f0:	cmp	x24, x9
    b9f4:	b.cc	b970 <__sanitizer_get_allocated_size@@Base+0x199c>  // b.lo, b.ul, b.last
    b9f8:	b	bb1c <__sanitizer_get_allocated_size@@Base+0x1b48>
    b9fc:	cmp	x22, x21
    ba00:	b.ls	ba14 <__sanitizer_get_allocated_size@@Base+0x1a40>  // b.plast
    ba04:	udiv	x22, x25, x1
    ba08:	ldr	x9, [sp, #16]
    ba0c:	cbnz	x9, ba20 <__sanitizer_get_allocated_size@@Base+0x1a4c>
    ba10:	b	bb64 <__sanitizer_get_allocated_size@@Base+0x1b90>
    ba14:	mov	w22, #0x1                   	// #1
    ba18:	ldr	x9, [sp, #16]
    ba1c:	cbz	x9, bb64 <__sanitizer_get_allocated_size@@Base+0x1b90>
    ba20:	mov	x24, xzr
    ba24:	mov	x28, xzr
    ba28:	mov	x10, xzr
    ba2c:	mov	x27, xzr
    ba30:	mov	w8, wzr
    ba34:	mul	x29, x22, x1
    ba38:	b	ba58 <__sanitizer_get_allocated_size@@Base+0x1a84>
    ba3c:	tst	w8, #0xff
    ba40:	csinc	w8, w8, wzr, ne  // ne = any
    ba44:	csel	x27, x24, x27, eq  // eq = none
    ba48:	add	x24, x24, #0x1
    ba4c:	cmp	x24, x9
    ba50:	mov	x10, x26
    ba54:	b.cs	bb1c <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.hs, b.nlast
    ba58:	add	x26, x10, x25
    ba5c:	cmp	x28, x26
    ba60:	b.cs	ba84 <__sanitizer_get_allocated_size@@Base+0x1ab0>  // b.hs, b.nlast
    ba64:	cmp	x28, x10
    ba68:	add	x28, x28, x29
    ba6c:	cinc	x10, x22, hi  // hi = pmore
    ba70:	cmp	x28, x26
    ba74:	b.cs	ba88 <__sanitizer_get_allocated_size@@Base+0x1ab4>  // b.hs, b.nlast
    ba78:	add	x10, x10, #0x1
    ba7c:	add	x28, x28, x1
    ba80:	b	ba88 <__sanitizer_get_allocated_size@@Base+0x1ab4>
    ba84:	mov	x10, x22
    ba88:	ldp	x11, x13, [sp, #40]
    ba8c:	ldr	x12, [sp, #72]
    ba90:	lsr	x11, x24, x11
    ba94:	ldr	x11, [x12, x11, lsl #3]
    ba98:	ldp	x14, x12, [sp, #24]
    ba9c:	and	x13, x13, x24
    baa0:	lsl	x13, x13, x14
    baa4:	lsr	x11, x11, x13
    baa8:	and	x11, x11, x12
    baac:	cmp	x11, x10
    bab0:	b.eq	ba3c <__sanitizer_get_allocated_size@@Base+0x1a68>  // b.none
    bab4:	tst	w8, #0xff
    bab8:	b.eq	bb08 <__sanitizer_get_allocated_size@@Base+0x1b34>  // b.none
    babc:	ldr	x10, [sp, #8]
    bac0:	ldr	x9, [x19, #8]
    bac4:	mov	x23, x1
    bac8:	lsl	x8, x27, x10
    bacc:	lsl	x10, x24, x10
    bad0:	ubfiz	x8, x8, #4, #32
    bad4:	ubfiz	x10, x10, #4, #32
    bad8:	add	x20, x9, x8
    badc:	add	x21, x9, x10
    bae0:	mov	x0, x20
    bae4:	mov	x1, x21
    bae8:	bl	210ec <__sanitizer_sandbox_on_notify@@Base+0xa6c>
    baec:	ldp	x8, x9, [x19, #16]
    baf0:	sub	x10, x21, x20
    baf4:	mov	x1, x23
    baf8:	add	x8, x8, #0x1
    bafc:	add	x9, x10, x9
    bb00:	stp	x8, x9, [x19, #16]
    bb04:	ldr	x9, [sp, #16]
    bb08:	mov	w8, wzr
    bb0c:	add	x24, x24, #0x1
    bb10:	cmp	x24, x9
    bb14:	mov	x10, x26
    bb18:	b.cc	ba58 <__sanitizer_get_allocated_size@@Base+0x1a84>  // b.lo, b.ul, b.last
    bb1c:	tst	w8, #0xff
    bb20:	b.eq	bb64 <__sanitizer_get_allocated_size@@Base+0x1b90>  // b.none
    bb24:	ldr	x10, [sp, #8]
    bb28:	ldr	x9, [x19, #8]
    bb2c:	lsl	x8, x27, x10
    bb30:	lsl	x10, x24, x10
    bb34:	ubfiz	x8, x8, #4, #32
    bb38:	ubfiz	x10, x10, #4, #32
    bb3c:	add	x20, x9, x8
    bb40:	add	x21, x9, x10
    bb44:	mov	x0, x20
    bb48:	mov	x1, x21
    bb4c:	bl	210ec <__sanitizer_sandbox_on_notify@@Base+0xa6c>
    bb50:	ldp	x8, x9, [x19, #16]
    bb54:	sub	x10, x21, x20
    bb58:	add	x8, x8, #0x1
    bb5c:	add	x9, x10, x9
    bb60:	stp	x8, x9, [x19, #16]
    bb64:	ldr	x0, [sp, #72]
    bb68:	cbz	x0, bb74 <__sanitizer_get_allocated_size@@Base+0x1ba0>
    bb6c:	ldr	x1, [sp, #64]
    bb70:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    bb74:	ldp	x20, x19, [sp, #160]
    bb78:	ldp	x22, x21, [sp, #144]
    bb7c:	ldp	x24, x23, [sp, #128]
    bb80:	ldp	x26, x25, [sp, #112]
    bb84:	ldp	x28, x27, [sp, #96]
    bb88:	ldp	x29, x30, [sp, #80]
    bb8c:	add	sp, sp, #0xb0
    bb90:	ret
    bb94:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bb98:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bb9c:	add	x0, x0, #0x8be
    bba0:	add	x2, x2, #0x1ac
    bba4:	mov	w1, #0x19d                 	// #413
    bba8:	b	bbc0 <__sanitizer_get_allocated_size@@Base+0x1bec>
    bbac:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bbb0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bbb4:	add	x0, x0, #0x8be
    bbb8:	add	x2, x2, #0xe2b
    bbbc:	mov	w1, #0x171                 	// #369
    bbc0:	mov	x3, xzr
    bbc4:	mov	x4, xzr
    bbc8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bbcc:	stp	x30, x19, [sp, #-16]!
    bbd0:	str	x1, [x0]
    bbd4:	str	x3, [x0, #40]
    bbd8:	cbz	x1, bce4 <__sanitizer_get_allocated_size@@Base+0x1d10>
    bbdc:	cbz	x2, bcfc <__sanitizer_get_allocated_size@@Base+0x1d28>
    bbe0:	clz	x8, x2
    bbe4:	mov	w9, #0x40                  	// #64
    bbe8:	mov	w10, #0x3f                  	// #63
    bbec:	sub	x3, x9, x8
    bbf0:	sub	x8, x10, x8
    bbf4:	mov	x19, x0
    bbf8:	tst	x3, x8
    bbfc:	b.eq	bc34 <__sanitizer_get_allocated_size@@Base+0x1c60>  // b.none
    bc00:	clz	x8, x3
    bc04:	eor	x9, x8, #0x3f
    bc08:	mov	w8, #0x2                   	// #2
    bc0c:	lsl	x8, x8, x9
    bc10:	cmp	x8, x3
    bc14:	b.ls	bd64 <__sanitizer_get_allocated_size@@Base+0x1d90>  // b.plast
    bc18:	mov	w10, #0x1                   	// #1
    bc1c:	lsl	x4, x10, x9
    bc20:	cmp	x4, x3
    bc24:	b.cs	bd80 <__sanitizer_get_allocated_size@@Base+0x1dac>  // b.hs, b.nlast
    bc28:	cmp	x8, #0x41
    bc2c:	b.cs	bd98 <__sanitizer_get_allocated_size@@Base+0x1dc4>  // b.hs, b.nlast
    bc30:	mov	x3, x8
    bc34:	sub	x8, x3, #0x1
    bc38:	tst	x3, x8
    bc3c:	b.ne	bccc <__sanitizer_get_allocated_size@@Base+0x1cf8>  // b.any
    bc40:	cbz	x3, bd1c <__sanitizer_get_allocated_size@@Base+0x1d48>
    bc44:	rbit	x8, x3
    bc48:	neg	x9, x3
    bc4c:	mov	x10, #0xffffffffffffffff    	// #-1
    bc50:	mov	w11, #0x40                  	// #64
    bc54:	clz	x8, x8
    bc58:	lsr	x9, x10, x9
    bc5c:	cmp	x8, #0x7
    bc60:	lsr	x3, x11, x8
    bc64:	stp	x8, x9, [x19, #8]
    bc68:	b.cs	bd38 <__sanitizer_get_allocated_size@@Base+0x1d64>  // b.hs, b.nlast
    bc6c:	sub	x8, x3, #0x1
    bc70:	tst	x3, x8
    bc74:	b.ne	bccc <__sanitizer_get_allocated_size@@Base+0x1cf8>  // b.any
    bc78:	rbit	x9, x3
    bc7c:	mov	w10, #0x1                   	// #1
    bc80:	clz	x9, x9
    bc84:	lsl	x10, x10, x9
    bc88:	sub	x11, x10, #0x1
    bc8c:	tst	x10, x11
    bc90:	stp	x9, x8, [x19, #24]
    bc94:	b.ne	bd54 <__sanitizer_get_allocated_size@@Base+0x1d80>  // b.any
    bc98:	add	x8, x1, x10
    bc9c:	sub	x8, x8, #0x1
    bca0:	neg	x10, x10
    bca4:	and	x8, x8, x10
    bca8:	lsr	x8, x8, x9
    bcac:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bcb0:	lsl	x0, x8, #3
    bcb4:	add	x1, x1, #0x194
    bcb8:	str	x0, [x19, #48]
    bcbc:	bl	1b4a8 <__sanitizer_set_report_fd@@Base+0x4e64>
    bcc0:	str	x0, [x19, #56]
    bcc4:	ldp	x30, x19, [sp], #16
    bcc8:	ret
    bccc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bcd0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bcd4:	add	x0, x0, #0x8be
    bcd8:	add	x2, x2, #0x1ac
    bcdc:	mov	w1, #0x19d                 	// #413
    bce0:	b	bd10 <__sanitizer_get_allocated_size@@Base+0x1d3c>
    bce4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bce8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bcec:	add	x0, x0, #0xc39
    bcf0:	add	x2, x2, #0xe0
    bcf4:	mov	w1, #0x14e                 	// #334
    bcf8:	b	bd10 <__sanitizer_get_allocated_size@@Base+0x1d3c>
    bcfc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd00:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bd04:	add	x0, x0, #0xc39
    bd08:	add	x2, x2, #0xf9
    bd0c:	mov	w1, #0x14f                 	// #335
    bd10:	mov	x3, xzr
    bd14:	mov	x4, xzr
    bd18:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bd1c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd20:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd24:	add	x0, x0, #0x8be
    bd28:	add	x2, x2, #0xe2b
    bd2c:	mov	w1, #0x171                 	// #369
    bd30:	mov	x4, xzr
    bd34:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bd38:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd3c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bd40:	add	x0, x0, #0xc39
    bd44:	add	x2, x2, #0x13c
    bd48:	mov	w1, #0x15a                 	// #346
    bd4c:	mov	x4, xzr
    bd50:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bd54:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd58:	add	x0, x0, #0x20f
    bd5c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    bd60:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    bd64:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd68:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bd6c:	add	x0, x0, #0x8be
    bd70:	add	x2, x2, #0x156
    bd74:	mov	w1, #0x18a                 	// #394
    bd78:	mov	x4, x8
    bd7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bd80:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd84:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bd88:	add	x0, x0, #0x8be
    bd8c:	add	x2, x2, #0x178
    bd90:	mov	w1, #0x18b                 	// #395
    bd94:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bd98:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bd9c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bda0:	add	x0, x0, #0xc39
    bda4:	add	x2, x2, #0x10f
    bda8:	mov	w1, #0x155                 	// #341
    bdac:	mov	w4, #0x40                  	// #64
    bdb0:	mov	x3, x8
    bdb4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bdb8:	stp	x30, x23, [sp, #-48]!
    bdbc:	stp	x22, x21, [sp, #16]
    bdc0:	stp	x20, x19, [sp, #32]
    bdc4:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    bdc8:	ldr	x22, [x22, #4016]
    bdcc:	mov	w20, w1
    bdd0:	mov	x19, x0
    bdd4:	ldr	x8, [x22]
    bdd8:	cbnz	x8, bde8 <__sanitizer_get_allocated_size@@Base+0x1e14>
    bddc:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    bde0:	mov	x8, x0
    bde4:	str	x0, [x22]
    bde8:	sub	x9, x8, #0x1
    bdec:	tst	x8, x9
    bdf0:	b.ne	be94 <__sanitizer_get_allocated_size@@Base+0x1ec0>  // b.any
    bdf4:	adrp	x11, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    bdf8:	ldr	x11, [x11, #3768]
    bdfc:	mov	w9, #0x17ff                	// #6143
    be00:	neg	x10, x8
    be04:	add	x8, x8, x9
    be08:	ldr	x2, [x11]
    be0c:	and	x8, x8, x10
    be10:	mov	x23, #0x2000000000          	// #137438953472
    be14:	add	x1, x8, x23
    be18:	mov	x0, x19
    be1c:	mov	x3, xzr
    be20:	bl	21960 <__sanitizer_sandbox_on_notify@@Base+0x12e0>
    be24:	cmn	x0, #0x1
    be28:	str	x0, [x19, #32]
    be2c:	b.eq	bea4 <__sanitizer_get_allocated_size@@Base+0x1ed0>  // b.none
    be30:	str	w20, [x19, #40]
    be34:	mov	x21, x0
    be38:	ldr	x0, [x22]
    be3c:	cbnz	x0, be48 <__sanitizer_get_allocated_size@@Base+0x1e74>
    be40:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    be44:	str	x0, [x22]
    be48:	sub	x8, x0, #0x1
    be4c:	tst	x0, x8
    be50:	b.ne	be94 <__sanitizer_get_allocated_size@@Base+0x1ec0>  // b.any
    be54:	mov	w8, #0x17ff                	// #6143
    be58:	add	x20, x21, x23
    be5c:	add	x8, x0, x8
    be60:	neg	x9, x0
    be64:	adrp	x3, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    be68:	and	x2, x8, x9
    be6c:	add	x3, x3, #0x21e
    be70:	mov	x0, x19
    be74:	mov	x1, x20
    be78:	bl	21a04 <__sanitizer_sandbox_on_notify@@Base+0x1384>
    be7c:	cmp	x0, x20
    be80:	b.ne	bec4 <__sanitizer_get_allocated_size@@Base+0x1ef0>  // b.any
    be84:	ldp	x20, x19, [sp, #32]
    be88:	ldp	x22, x21, [sp, #16]
    be8c:	ldp	x30, x23, [sp], #48
    be90:	b	7048 <__sanitizer_print_memory_profile@plt+0x1e8>
    be94:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    be98:	add	x0, x0, #0x20f
    be9c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    bea0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    bea4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bea8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    beac:	add	x0, x0, #0xc39
    beb0:	add	x2, x2, #0x1f9
    beb4:	mov	w1, #0x50                  	// #80
    beb8:	mov	x3, #0xffffffffffffffff    	// #-1
    bebc:	mov	x4, #0xffffffffffffffff    	// #-1
    bec0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bec4:	mov	x4, x0
    bec8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    becc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bed0:	add	x0, x0, #0xc39
    bed4:	add	x2, x2, #0x23e
    bed8:	mov	w1, #0x287                 	// #647
    bedc:	mov	x3, x20
    bee0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bee4:	stp	x30, x21, [sp, #-32]!
    bee8:	stp	x20, x19, [sp, #16]
    beec:	mov	x20, x1
    bef0:	mov	x21, x0
    bef4:	add	x19, x0, #0x268
    bef8:	mov	w8, #0x1                   	// #1
    befc:	ldaxrb	w9, [x19]
    bf00:	stlxrb	w10, w8, [x19]
    bf04:	cbnz	w10, befc <__sanitizer_get_allocated_size@@Base+0x1f28>
    bf08:	cbz	w9, bf14 <__sanitizer_get_allocated_size@@Base+0x1f40>
    bf0c:	mov	x0, x19
    bf10:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    bf14:	ldr	x8, [x21, #56]
    bf18:	cbz	x8, bf98 <__sanitizer_get_allocated_size@@Base+0x1fc4>
    bf1c:	ldr	x9, [x21, #8]
    bf20:	mov	x3, xzr
    bf24:	mov	x10, xzr
    bf28:	ldr	x11, [x9, x10, lsl #3]
    bf2c:	sub	x12, x20, x3
    bf30:	add	x10, x10, #0x1
    bf34:	subs	x13, x20, x11
    bf38:	cmp	x13, x12
    bf3c:	csel	x12, x11, x3, cc  // cc = lo, ul, last
    bf40:	cmp	x20, x11
    bf44:	csel	x3, x3, x12, cc  // cc = lo, ul, last
    bf48:	cmp	x10, x8
    bf4c:	b.cc	bf28 <__sanitizer_get_allocated_size@@Base+0x1f54>  // b.lo, b.ul, b.last
    bf50:	cbz	x3, bf98 <__sanitizer_get_allocated_size@@Base+0x1fc4>
    bf54:	ldr	x4, [x3]
    bf58:	cmp	x3, x4
    bf5c:	b.cc	bfb0 <__sanitizer_get_allocated_size@@Base+0x1fdc>  // b.lo, b.ul, b.last
    bf60:	ldr	x8, [x3, #8]
    bf64:	add	x4, x8, x4
    bf68:	cmp	x3, x4
    bf6c:	b.cs	bfc8 <__sanitizer_get_allocated_size@@Base+0x1ff4>  // b.hs, b.nlast
    bf70:	cmp	x3, x20
    bf74:	b.hi	bfe0 <__sanitizer_get_allocated_size@@Base+0x200c>  // b.pmore
    bf78:	cmp	x4, x20
    bf7c:	b.ls	bf98 <__sanitizer_get_allocated_size@@Base+0x1fc4>  // b.plast
    bf80:	ldr	x8, [x21]
    bf84:	sub	x9, x8, #0x1
    bf88:	tst	x9, x3
    bf8c:	b.ne	bffc <__sanitizer_get_allocated_size@@Base+0x2028>  // b.any
    bf90:	add	x0, x8, x3
    bf94:	b	bf9c <__sanitizer_get_allocated_size@@Base+0x1fc8>
    bf98:	mov	x0, xzr
    bf9c:	dmb	ish
    bfa0:	strb	wzr, [x19]
    bfa4:	ldp	x20, x19, [sp, #16]
    bfa8:	ldp	x30, x21, [sp], #32
    bfac:	ret
    bfb0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bfb4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bfb8:	add	x0, x0, #0xe3b
    bfbc:	add	x2, x2, #0x2d2
    bfc0:	mov	w1, #0xc7                  	// #199
    bfc4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bfc8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bfcc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bfd0:	add	x0, x0, #0xe3b
    bfd4:	add	x2, x2, #0x2f6
    bfd8:	mov	w1, #0xc8                  	// #200
    bfdc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bfe0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    bfe4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    bfe8:	add	x0, x0, #0xe3b
    bfec:	add	x2, x2, #0x327
    bff0:	mov	w1, #0xc9                  	// #201
    bff4:	mov	x4, x20
    bff8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    bffc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    c000:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c004:	add	x0, x0, #0xe3b
    c008:	add	x2, x2, #0x342
    c00c:	mov	w1, #0x135                 	// #309
    c010:	mov	x3, xzr
    c014:	mov	x4, xzr
    c018:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    c01c:	ret
    c020:	stp	x30, x23, [sp, #-48]!
    c024:	stp	x22, x21, [sp, #16]
    c028:	stp	x20, x19, [sp, #32]
    c02c:	mov	x19, x0
    c030:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    c034:	lsl	x4, x0, #4
    c038:	mov	x8, #0x100000001           	// #4294967297
    c03c:	cmp	x4, x8
    c040:	b.cs	c0f4 <__sanitizer_get_allocated_size@@Base+0x2120>  // b.hs, b.nlast
    c044:	sub	x8, x0, #0x1
    c048:	tst	x0, x8
    c04c:	b.ne	c110 <__sanitizer_get_allocated_size@@Base+0x213c>  // b.any
    c050:	add	x8, x19, x0
    c054:	neg	x9, x0
    c058:	sub	x8, x8, #0x1
    c05c:	and	x23, x8, x9
    c060:	mov	x8, #0x200000000           	// #8589934592
    c064:	add	x21, x23, x8
    c068:	mov	x0, x21
    c06c:	bl	219d8 <__sanitizer_sandbox_on_notify@@Base+0x1358>
    c070:	mov	x19, x0
    c074:	cmn	x0, #0x1
    c078:	b.eq	c120 <__sanitizer_get_allocated_size@@Base+0x214c>  // b.none
    c07c:	mov	x8, #0x1ffffffff           	// #8589934591
    c080:	add	x8, x19, x8
    c084:	and	x20, x8, #0xffffffff00000000
    c088:	mov	x8, #0xffffffff00000000    	// #-4294967296
    c08c:	add	x8, x20, x8
    c090:	subs	x22, x8, x19
    c094:	b.eq	c0b4 <__sanitizer_get_allocated_size@@Base+0x20e0>  // b.none
    c098:	b.cc	c140 <__sanitizer_get_allocated_size@@Base+0x216c>  // b.lo, b.ul, b.last
    c09c:	mov	x0, x19
    c0a0:	mov	x1, x22
    c0a4:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
    c0a8:	mov	x1, xzr
    c0ac:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
    c0b0:	tbnz	w0, #0, c158 <__sanitizer_get_allocated_size@@Base+0x2184>
    c0b4:	add	x22, x20, x23
    c0b8:	add	x8, x21, x19
    c0bc:	subs	x19, x8, x22
    c0c0:	b.eq	c0e0 <__sanitizer_get_allocated_size@@Base+0x210c>  // b.none
    c0c4:	b.cc	c140 <__sanitizer_get_allocated_size@@Base+0x216c>  // b.lo, b.ul, b.last
    c0c8:	mov	x0, x22
    c0cc:	mov	x1, x19
    c0d0:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
    c0d4:	mov	x1, xzr
    c0d8:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
    c0dc:	tbnz	w0, #0, c17c <__sanitizer_get_allocated_size@@Base+0x21a8>
    c0e0:	mov	x0, x20
    c0e4:	ldp	x20, x19, [sp, #32]
    c0e8:	ldp	x22, x21, [sp, #16]
    c0ec:	ldp	x30, x23, [sp], #48
    c0f0:	ret
    c0f4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c0f8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c0fc:	add	x0, x0, #0x36c
    c100:	add	x2, x2, #0x3ba
    c104:	mov	w1, #0x30                  	// #48
    c108:	mov	x3, #0x100000000           	// #4294967296
    c10c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    c110:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    c114:	add	x0, x0, #0x20f
    c118:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    c11c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    c120:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c124:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c128:	add	x0, x0, #0x36c
    c12c:	add	x2, x2, #0x3dd
    c130:	mov	w1, #0x38                  	// #56
    c134:	mov	x4, #0xffffffffffffffff    	// #-1
    c138:	mov	x3, x19
    c13c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    c140:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c144:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c148:	add	x0, x0, #0x36c
    c14c:	add	x2, x2, #0x3fb
    c150:	mov	w1, #0x20                  	// #32
    c154:	b	c1b4 <__sanitizer_get_allocated_size@@Base+0x21e0>
    c158:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c15c:	ldr	x8, [x8, #4024]
    c160:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c164:	add	x0, x0, #0x411
    c168:	mov	x2, x22
    c16c:	ldr	x1, [x8]
    c170:	mov	x3, x22
    c174:	mov	x4, x19
    c178:	b	c19c <__sanitizer_get_allocated_size@@Base+0x21c8>
    c17c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c180:	ldr	x8, [x8, #4024]
    c184:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c188:	add	x0, x0, #0x411
    c18c:	mov	x2, x19
    c190:	ldr	x1, [x8]
    c194:	mov	x3, x19
    c198:	mov	x4, x22
    c19c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    c1a0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c1a4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c1a8:	add	x0, x0, #0x36c
    c1ac:	add	x2, x2, #0x44c
    c1b0:	mov	w1, #0x25                  	// #37
    c1b4:	mov	x3, xzr
    c1b8:	mov	x4, xzr
    c1bc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000c1c0 <__hwasan_personality_wrapper@@Base>:
    c1c0:	stp	x30, x23, [sp, #-48]!
    c1c4:	stp	x22, x21, [sp, #16]
    c1c8:	stp	x20, x19, [sp, #32]
    c1cc:	mov	x19, x7
    c1d0:	mov	x21, x6
    c1d4:	mov	x20, x4
    c1d8:	mov	w23, w1
    c1dc:	cbz	x5, c1f8 <__hwasan_personality_wrapper@@Base+0x38>
    c1e0:	mov	w1, w23
    c1e4:	mov	x4, x20
    c1e8:	blr	x5
    c1ec:	mov	w22, w0
    c1f0:	tbnz	w23, #1, c200 <__hwasan_personality_wrapper@@Base+0x40>
    c1f4:	b	c22c <__hwasan_personality_wrapper@@Base+0x6c>
    c1f8:	mov	w22, #0x8                   	// #8
    c1fc:	tbz	w23, #1, c22c <__hwasan_personality_wrapper@@Base+0x6c>
    c200:	cmp	w22, #0x8
    c204:	b.ne	c22c <__hwasan_personality_wrapper@@Base+0x6c>  // b.any
    c208:	mov	w1, #0x1d                  	// #29
    c20c:	mov	x0, x20
    c210:	blr	x21
    c214:	mov	x21, x0
    c218:	mov	x0, x20
    c21c:	blr	x19
    c220:	sub	x1, x21, x0
    c224:	mov	w2, wzr
    c228:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
    c22c:	mov	w0, w22
    c230:	ldp	x20, x19, [sp, #32]
    c234:	ldp	x22, x21, [sp, #16]
    c238:	ldp	x30, x23, [sp], #48
    c23c:	ret

000000000000c240 <__interceptor_posix_memalign@@Base>:
    c240:	stp	x29, x30, [sp, #-48]!
    c244:	stp	x28, x21, [sp, #16]
    c248:	stp	x20, x19, [sp, #32]
    c24c:	mov	x29, sp
    c250:	sub	sp, sp, #0x820
    c254:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c258:	ldr	x9, [x9, #3904]
    c25c:	add	x8, sp, #0x8
    c260:	mov	x19, x2
    c264:	mov	x20, x1
    c268:	ldr	w9, [x9]
    c26c:	mov	x21, x0
    c270:	add	x8, x8, #0x10
    c274:	stp	x8, xzr, [sp, #8]
    c278:	str	xzr, [sp, #2072]
    c27c:	cbz	w9, c2d4 <__interceptor_posix_memalign@@Base+0x94>
    c280:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c284:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c288:	ldr	x8, [x8, #4056]
    c28c:	mov	x1, x0
    c290:	ldr	w5, [x8, #36]
    c294:	ldrb	w8, [x8, #34]
    c298:	cmp	w5, #0x0
    c29c:	csel	x9, xzr, x29, eq  // eq = none
    c2a0:	cmp	w5, #0x1
    c2a4:	str	x9, [sp, #2072]
    c2a8:	b.hi	c2bc <__interceptor_posix_memalign@@Base+0x7c>  // b.pmore
    c2ac:	b.ne	c2b4 <__interceptor_posix_memalign@@Base+0x74>  // b.any
    c2b0:	str	x1, [sp, #24]
    c2b4:	str	w5, [sp, #16]
    c2b8:	b	c2d4 <__interceptor_posix_memalign@@Base+0x94>
    c2bc:	cmp	w8, #0x0
    c2c0:	cset	w4, ne  // ne = any
    c2c4:	add	x0, sp, #0x8
    c2c8:	mov	x2, x29
    c2cc:	mov	x3, xzr
    c2d0:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c2d4:	cbz	x21, c300 <__interceptor_posix_memalign@@Base+0xc0>
    c2d8:	add	x3, sp, #0x8
    c2dc:	mov	x0, x21
    c2e0:	mov	x1, x20
    c2e4:	mov	x2, x19
    c2e8:	bl	9c98 <__sanitizer_print_stack_trace@@Base+0x1440>
    c2ec:	add	sp, sp, #0x820
    c2f0:	ldp	x20, x19, [sp, #32]
    c2f4:	ldp	x28, x21, [sp, #16]
    c2f8:	ldp	x29, x30, [sp], #48
    c2fc:	ret
    c300:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c304:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c308:	add	x0, x0, #0x46e
    c30c:	add	x2, x2, #0x4ba
    c310:	mov	w1, #0x4a                  	// #74
    c314:	mov	x3, xzr
    c318:	mov	x4, xzr
    c31c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000c320 <__interceptor_memalign@@Base>:
    c320:	stp	x29, x30, [sp, #-48]!
    c324:	str	x28, [sp, #16]
    c328:	stp	x20, x19, [sp, #32]
    c32c:	mov	x29, sp
    c330:	sub	sp, sp, #0x820
    c334:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c338:	ldr	x9, [x9, #3904]
    c33c:	add	x8, sp, #0x8
    c340:	mov	x19, x1
    c344:	mov	x20, x0
    c348:	ldr	w9, [x9]
    c34c:	add	x8, x8, #0x10
    c350:	stp	x8, xzr, [sp, #8]
    c354:	str	xzr, [sp, #2072]
    c358:	cbz	w9, c3b0 <__interceptor_memalign@@Base+0x90>
    c35c:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c360:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c364:	ldr	x8, [x8, #4056]
    c368:	mov	x1, x0
    c36c:	ldr	w5, [x8, #36]
    c370:	ldrb	w8, [x8, #34]
    c374:	cmp	w5, #0x0
    c378:	csel	x9, xzr, x29, eq  // eq = none
    c37c:	cmp	w5, #0x1
    c380:	str	x9, [sp, #2072]
    c384:	b.hi	c398 <__interceptor_memalign@@Base+0x78>  // b.pmore
    c388:	b.ne	c390 <__interceptor_memalign@@Base+0x70>  // b.any
    c38c:	str	x1, [sp, #24]
    c390:	str	w5, [sp, #16]
    c394:	b	c3b0 <__interceptor_memalign@@Base+0x90>
    c398:	cmp	w8, #0x0
    c39c:	cset	w4, ne  // ne = any
    c3a0:	add	x0, sp, #0x8
    c3a4:	mov	x2, x29
    c3a8:	mov	x3, xzr
    c3ac:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c3b0:	add	x2, sp, #0x8
    c3b4:	mov	x0, x20
    c3b8:	mov	x1, x19
    c3bc:	bl	9c28 <__sanitizer_print_stack_trace@@Base+0x13d0>
    c3c0:	add	sp, sp, #0x820
    c3c4:	ldp	x20, x19, [sp, #32]
    c3c8:	ldr	x28, [sp, #16]
    c3cc:	ldp	x29, x30, [sp], #48
    c3d0:	ret

000000000000c3d4 <__interceptor_aligned_alloc@@Base>:
    c3d4:	stp	x29, x30, [sp, #-48]!
    c3d8:	str	x28, [sp, #16]
    c3dc:	stp	x20, x19, [sp, #32]
    c3e0:	mov	x29, sp
    c3e4:	sub	sp, sp, #0x820
    c3e8:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c3ec:	ldr	x9, [x9, #3904]
    c3f0:	add	x8, sp, #0x8
    c3f4:	mov	x19, x1
    c3f8:	mov	x20, x0
    c3fc:	ldr	w9, [x9]
    c400:	add	x8, x8, #0x10
    c404:	stp	x8, xzr, [sp, #8]
    c408:	str	xzr, [sp, #2072]
    c40c:	cbz	w9, c464 <__interceptor_aligned_alloc@@Base+0x90>
    c410:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c414:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c418:	ldr	x8, [x8, #4056]
    c41c:	mov	x1, x0
    c420:	ldr	w5, [x8, #36]
    c424:	ldrb	w8, [x8, #34]
    c428:	cmp	w5, #0x0
    c42c:	csel	x9, xzr, x29, eq  // eq = none
    c430:	cmp	w5, #0x1
    c434:	str	x9, [sp, #2072]
    c438:	b.hi	c44c <__interceptor_aligned_alloc@@Base+0x78>  // b.pmore
    c43c:	b.ne	c444 <__interceptor_aligned_alloc@@Base+0x70>  // b.any
    c440:	str	x1, [sp, #24]
    c444:	str	w5, [sp, #16]
    c448:	b	c464 <__interceptor_aligned_alloc@@Base+0x90>
    c44c:	cmp	w8, #0x0
    c450:	cset	w4, ne  // ne = any
    c454:	add	x0, sp, #0x8
    c458:	mov	x2, x29
    c45c:	mov	x3, xzr
    c460:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c464:	add	x2, sp, #0x8
    c468:	mov	x0, x20
    c46c:	mov	x1, x19
    c470:	bl	9b94 <__sanitizer_print_stack_trace@@Base+0x133c>
    c474:	add	sp, sp, #0x820
    c478:	ldp	x20, x19, [sp, #32]
    c47c:	ldr	x28, [sp, #16]
    c480:	ldp	x29, x30, [sp], #48
    c484:	ret

000000000000c488 <__interceptor___libc_memalign@@Base>:
    c488:	stp	x29, x30, [sp, #-48]!
    c48c:	str	x28, [sp, #16]
    c490:	stp	x20, x19, [sp, #32]
    c494:	mov	x29, sp
    c498:	sub	sp, sp, #0x820
    c49c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c4a0:	ldr	x9, [x9, #3904]
    c4a4:	add	x8, sp, #0x8
    c4a8:	mov	x19, x1
    c4ac:	mov	x20, x0
    c4b0:	ldr	w9, [x9]
    c4b4:	add	x8, x8, #0x10
    c4b8:	stp	x8, xzr, [sp, #8]
    c4bc:	str	xzr, [sp, #2072]
    c4c0:	cbz	w9, c518 <__interceptor___libc_memalign@@Base+0x90>
    c4c4:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c4c8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c4cc:	ldr	x8, [x8, #4056]
    c4d0:	mov	x1, x0
    c4d4:	ldr	w5, [x8, #36]
    c4d8:	ldrb	w8, [x8, #34]
    c4dc:	cmp	w5, #0x0
    c4e0:	csel	x9, xzr, x29, eq  // eq = none
    c4e4:	cmp	w5, #0x1
    c4e8:	str	x9, [sp, #2072]
    c4ec:	b.hi	c500 <__interceptor___libc_memalign@@Base+0x78>  // b.pmore
    c4f0:	b.ne	c4f8 <__interceptor___libc_memalign@@Base+0x70>  // b.any
    c4f4:	str	x1, [sp, #24]
    c4f8:	str	w5, [sp, #16]
    c4fc:	b	c518 <__interceptor___libc_memalign@@Base+0x90>
    c500:	cmp	w8, #0x0
    c504:	cset	w4, ne  // ne = any
    c508:	add	x0, sp, #0x8
    c50c:	mov	x2, x29
    c510:	mov	x3, xzr
    c514:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c518:	add	x2, sp, #0x8
    c51c:	mov	x0, x20
    c520:	mov	x1, x19
    c524:	bl	9c28 <__sanitizer_print_stack_trace@@Base+0x13d0>
    c528:	mov	x20, x0
    c52c:	cbz	x0, c53c <__interceptor___libc_memalign@@Base+0xb4>
    c530:	mov	x0, x20
    c534:	mov	x1, x19
    c538:	bl	1eef0 <__sanitizer_on_print@@Base+0x24a0>
    c53c:	mov	x0, x20
    c540:	add	sp, sp, #0x820
    c544:	ldp	x20, x19, [sp, #32]
    c548:	ldr	x28, [sp, #16]
    c54c:	ldp	x29, x30, [sp], #48
    c550:	ret

000000000000c554 <__interceptor_valloc@@Base>:
    c554:	stp	x29, x30, [sp, #-32]!
    c558:	stp	x28, x19, [sp, #16]
    c55c:	mov	x29, sp
    c560:	sub	sp, sp, #0x820
    c564:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c568:	ldr	x9, [x9, #3904]
    c56c:	add	x8, sp, #0x8
    c570:	mov	x19, x0
    c574:	add	x8, x8, #0x10
    c578:	ldr	w9, [x9]
    c57c:	stp	x8, xzr, [sp, #8]
    c580:	str	xzr, [sp, #2072]
    c584:	cbz	w9, c5dc <__interceptor_valloc@@Base+0x88>
    c588:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c58c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c590:	ldr	x8, [x8, #4056]
    c594:	mov	x1, x0
    c598:	ldr	w5, [x8, #36]
    c59c:	ldrb	w8, [x8, #34]
    c5a0:	cmp	w5, #0x0
    c5a4:	csel	x9, xzr, x29, eq  // eq = none
    c5a8:	cmp	w5, #0x1
    c5ac:	str	x9, [sp, #2072]
    c5b0:	b.hi	c5c4 <__interceptor_valloc@@Base+0x70>  // b.pmore
    c5b4:	b.ne	c5bc <__interceptor_valloc@@Base+0x68>  // b.any
    c5b8:	str	x1, [sp, #24]
    c5bc:	str	w5, [sp, #16]
    c5c0:	b	c5dc <__interceptor_valloc@@Base+0x88>
    c5c4:	cmp	w8, #0x0
    c5c8:	cset	w4, ne  // ne = any
    c5cc:	add	x0, sp, #0x8
    c5d0:	mov	x2, x29
    c5d4:	mov	x3, xzr
    c5d8:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c5dc:	add	x1, sp, #0x8
    c5e0:	mov	x0, x19
    c5e4:	bl	9a74 <__sanitizer_print_stack_trace@@Base+0x121c>
    c5e8:	add	sp, sp, #0x820
    c5ec:	ldp	x28, x19, [sp, #16]
    c5f0:	ldp	x29, x30, [sp], #32
    c5f4:	ret

000000000000c5f8 <__interceptor_pvalloc@@Base>:
    c5f8:	stp	x29, x30, [sp, #-32]!
    c5fc:	stp	x28, x19, [sp, #16]
    c600:	mov	x29, sp
    c604:	sub	sp, sp, #0x820
    c608:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c60c:	ldr	x9, [x9, #3904]
    c610:	add	x8, sp, #0x8
    c614:	mov	x19, x0
    c618:	add	x8, x8, #0x10
    c61c:	ldr	w9, [x9]
    c620:	stp	x8, xzr, [sp, #8]
    c624:	str	xzr, [sp, #2072]
    c628:	cbz	w9, c680 <__interceptor_pvalloc@@Base+0x88>
    c62c:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c630:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c634:	ldr	x8, [x8, #4056]
    c638:	mov	x1, x0
    c63c:	ldr	w5, [x8, #36]
    c640:	ldrb	w8, [x8, #34]
    c644:	cmp	w5, #0x0
    c648:	csel	x9, xzr, x29, eq  // eq = none
    c64c:	cmp	w5, #0x1
    c650:	str	x9, [sp, #2072]
    c654:	b.hi	c668 <__interceptor_pvalloc@@Base+0x70>  // b.pmore
    c658:	b.ne	c660 <__interceptor_pvalloc@@Base+0x68>  // b.any
    c65c:	str	x1, [sp, #24]
    c660:	str	w5, [sp, #16]
    c664:	b	c680 <__interceptor_pvalloc@@Base+0x88>
    c668:	cmp	w8, #0x0
    c66c:	cset	w4, ne  // ne = any
    c670:	add	x0, sp, #0x8
    c674:	mov	x2, x29
    c678:	mov	x3, xzr
    c67c:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c680:	add	x1, sp, #0x8
    c684:	mov	x0, x19
    c688:	bl	9adc <__sanitizer_print_stack_trace@@Base+0x1284>
    c68c:	add	sp, sp, #0x820
    c690:	ldp	x28, x19, [sp, #16]
    c694:	ldp	x29, x30, [sp], #32
    c698:	ret

000000000000c69c <__interceptor_free@@Base>:
    c69c:	stp	x29, x30, [sp, #-32]!
    c6a0:	stp	x28, x19, [sp, #16]
    c6a4:	mov	x29, sp
    c6a8:	sub	sp, sp, #0x820
    c6ac:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c6b0:	ldr	x9, [x9, #3904]
    c6b4:	add	x8, sp, #0x8
    c6b8:	mov	x19, x0
    c6bc:	add	x8, x8, #0x10
    c6c0:	ldr	w9, [x9]
    c6c4:	stp	x8, xzr, [sp, #8]
    c6c8:	str	xzr, [sp, #2072]
    c6cc:	cbz	w9, c708 <__interceptor_free@@Base+0x6c>
    c6d0:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c6d4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c6d8:	ldr	x8, [x8, #4056]
    c6dc:	mov	x1, x0
    c6e0:	ldr	w5, [x8, #36]
    c6e4:	ldrb	w8, [x8, #34]
    c6e8:	cmp	w5, #0x0
    c6ec:	csel	x9, xzr, x29, eq  // eq = none
    c6f0:	cmp	w5, #0x1
    c6f4:	str	x9, [sp, #2072]
    c6f8:	b.hi	c71c <__interceptor_free@@Base+0x80>  // b.pmore
    c6fc:	b.ne	c704 <__interceptor_free@@Base+0x68>  // b.any
    c700:	str	x1, [sp, #24]
    c704:	str	w5, [sp, #16]
    c708:	cbnz	x19, c738 <__interceptor_free@@Base+0x9c>
    c70c:	add	sp, sp, #0x820
    c710:	ldp	x28, x19, [sp, #16]
    c714:	ldp	x29, x30, [sp], #32
    c718:	ret
    c71c:	cmp	w8, #0x0
    c720:	cset	w4, ne  // ne = any
    c724:	add	x0, sp, #0x8
    c728:	mov	x2, x29
    c72c:	mov	x3, xzr
    c730:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c734:	cbz	x19, c70c <__interceptor_free@@Base+0x70>
    c738:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    c73c:	add	x8, x8, #0xa28
    c740:	sub	x8, x19, x8
    c744:	cmp	x8, #0x2, lsl #12
    c748:	b.cc	c70c <__interceptor_free@@Base+0x70>  // b.lo, b.ul, b.last
    c74c:	add	x1, sp, #0x8
    c750:	mov	x0, x19
    c754:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
    c758:	add	sp, sp, #0x820
    c75c:	ldp	x28, x19, [sp, #16]
    c760:	ldp	x29, x30, [sp], #32
    c764:	ret

000000000000c768 <__interceptor_cfree@@Base>:
    c768:	stp	x29, x30, [sp, #-32]!
    c76c:	stp	x28, x19, [sp, #16]
    c770:	mov	x29, sp
    c774:	sub	sp, sp, #0x820
    c778:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c77c:	ldr	x9, [x9, #3904]
    c780:	add	x8, sp, #0x8
    c784:	mov	x19, x0
    c788:	add	x8, x8, #0x10
    c78c:	ldr	w9, [x9]
    c790:	stp	x8, xzr, [sp, #8]
    c794:	str	xzr, [sp, #2072]
    c798:	cbz	w9, c7d4 <__interceptor_cfree@@Base+0x6c>
    c79c:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c7a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c7a4:	ldr	x8, [x8, #4056]
    c7a8:	mov	x1, x0
    c7ac:	ldr	w5, [x8, #36]
    c7b0:	ldrb	w8, [x8, #34]
    c7b4:	cmp	w5, #0x0
    c7b8:	csel	x9, xzr, x29, eq  // eq = none
    c7bc:	cmp	w5, #0x1
    c7c0:	str	x9, [sp, #2072]
    c7c4:	b.hi	c7e8 <__interceptor_cfree@@Base+0x80>  // b.pmore
    c7c8:	b.ne	c7d0 <__interceptor_cfree@@Base+0x68>  // b.any
    c7cc:	str	x1, [sp, #24]
    c7d0:	str	w5, [sp, #16]
    c7d4:	cbnz	x19, c804 <__interceptor_cfree@@Base+0x9c>
    c7d8:	add	sp, sp, #0x820
    c7dc:	ldp	x28, x19, [sp, #16]
    c7e0:	ldp	x29, x30, [sp], #32
    c7e4:	ret
    c7e8:	cmp	w8, #0x0
    c7ec:	cset	w4, ne  // ne = any
    c7f0:	add	x0, sp, #0x8
    c7f4:	mov	x2, x29
    c7f8:	mov	x3, xzr
    c7fc:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c800:	cbz	x19, c7d8 <__interceptor_cfree@@Base+0x70>
    c804:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    c808:	add	x8, x8, #0xa28
    c80c:	sub	x8, x19, x8
    c810:	cmp	x8, #0x2, lsl #12
    c814:	b.cc	c7d8 <__interceptor_cfree@@Base+0x70>  // b.lo, b.ul, b.last
    c818:	add	x1, sp, #0x8
    c81c:	mov	x0, x19
    c820:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
    c824:	add	sp, sp, #0x820
    c828:	ldp	x28, x19, [sp, #16]
    c82c:	ldp	x29, x30, [sp], #32
    c830:	ret

000000000000c834 <__interceptor_malloc_usable_size@@Base>:
    c834:	b	6bd0 <__sanitizer_get_allocated_size@plt>

000000000000c838 <__interceptor_mallinfo@@Base>:
    c838:	mov	w2, #0x28                  	// #40
    c83c:	mov	x0, x8
    c840:	mov	w1, wzr
    c844:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>

000000000000c848 <__interceptor_mallopt@@Base>:
    c848:	mov	w0, wzr
    c84c:	ret

000000000000c850 <__interceptor_malloc_stats@@Base>:
    c850:	ret

000000000000c854 <__interceptor_calloc@@Base>:
    c854:	stp	x29, x30, [sp, #-48]!
    c858:	stp	x28, x21, [sp, #16]
    c85c:	stp	x20, x19, [sp, #32]
    c860:	mov	x29, sp
    c864:	sub	sp, sp, #0x820
    c868:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c86c:	ldr	x21, [x21, #3904]
    c870:	add	x8, sp, #0x8
    c874:	mov	x19, x1
    c878:	mov	x20, x0
    c87c:	ldr	w9, [x21]
    c880:	add	x8, x8, #0x10
    c884:	stp	x8, xzr, [sp, #8]
    c888:	str	xzr, [sp, #2072]
    c88c:	cbz	w9, c900 <__interceptor_calloc@@Base+0xac>
    c890:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c894:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c898:	ldr	x8, [x8, #4056]
    c89c:	mov	x1, x0
    c8a0:	ldr	w5, [x8, #36]
    c8a4:	ldrb	w8, [x8, #34]
    c8a8:	cmp	w5, #0x0
    c8ac:	csel	x9, xzr, x29, eq  // eq = none
    c8b0:	cmp	w5, #0x1
    c8b4:	str	x9, [sp, #2072]
    c8b8:	b.hi	c8cc <__interceptor_calloc@@Base+0x78>  // b.pmore
    c8bc:	b.ne	c8c4 <__interceptor_calloc@@Base+0x70>  // b.any
    c8c0:	str	x1, [sp, #24]
    c8c4:	str	w5, [sp, #16]
    c8c8:	b	c8e4 <__interceptor_calloc@@Base+0x90>
    c8cc:	cmp	w8, #0x0
    c8d0:	cset	w4, ne  // ne = any
    c8d4:	add	x0, sp, #0x8
    c8d8:	mov	x2, x29
    c8dc:	mov	x3, xzr
    c8e0:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c8e4:	ldr	w8, [x21]
    c8e8:	cbz	w8, c900 <__interceptor_calloc@@Base+0xac>
    c8ec:	add	x2, sp, #0x8
    c8f0:	mov	x0, x20
    c8f4:	mov	x1, x19
    c8f8:	bl	947c <__sanitizer_print_stack_trace@@Base+0xc24>
    c8fc:	b	c92c <__interceptor_calloc@@Base+0xd8>
    c900:	adrp	x9, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    c904:	ldr	x8, [x9, #2656]
    c908:	orr	x10, xzr, #0x7
    c90c:	madd	x10, x19, x20, x10
    c910:	add	x3, x8, x10, lsr #3
    c914:	cmp	x3, #0x400
    c918:	str	x3, [x9, #2656]
    c91c:	b.cs	c940 <__interceptor_calloc@@Base+0xec>  // b.hs, b.nlast
    c920:	adrp	x9, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    c924:	add	x9, x9, #0xa28
    c928:	add	x0, x9, x8, lsl #3
    c92c:	add	sp, sp, #0x820
    c930:	ldp	x20, x19, [sp, #32]
    c934:	ldp	x28, x21, [sp, #16]
    c938:	ldp	x29, x30, [sp], #48
    c93c:	ret
    c940:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c944:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    c948:	add	x0, x0, #0x46e
    c94c:	add	x2, x2, #0x4f7
    c950:	mov	w1, #0x3c                  	// #60
    c954:	mov	w4, #0x400                 	// #1024
    c958:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000c95c <__interceptor_realloc@@Base>:
    c95c:	stp	x29, x30, [sp, #-48]!
    c960:	stp	x28, x21, [sp, #16]
    c964:	stp	x20, x19, [sp, #32]
    c968:	mov	x29, sp
    c96c:	sub	sp, sp, #0x820
    c970:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c974:	ldr	x21, [x21, #3904]
    c978:	add	x8, sp, #0x8
    c97c:	mov	x20, x1
    c980:	mov	x19, x0
    c984:	ldr	w9, [x21]
    c988:	add	x8, x8, #0x10
    c98c:	stp	x8, xzr, [sp, #8]
    c990:	str	xzr, [sp, #2072]
    c994:	cbz	w9, c9ec <__interceptor_realloc@@Base+0x90>
    c998:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    c99c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    c9a0:	ldr	x8, [x8, #4056]
    c9a4:	mov	x1, x0
    c9a8:	ldr	w5, [x8, #36]
    c9ac:	ldrb	w8, [x8, #34]
    c9b0:	cmp	w5, #0x0
    c9b4:	csel	x9, xzr, x29, eq  // eq = none
    c9b8:	cmp	w5, #0x1
    c9bc:	str	x9, [sp, #2072]
    c9c0:	b.hi	c9d4 <__interceptor_realloc@@Base+0x78>  // b.pmore
    c9c4:	b.ne	c9cc <__interceptor_realloc@@Base+0x70>  // b.any
    c9c8:	str	x1, [sp, #24]
    c9cc:	str	w5, [sp, #16]
    c9d0:	b	c9ec <__interceptor_realloc@@Base+0x90>
    c9d4:	cmp	w8, #0x0
    c9d8:	cset	w4, ne  // ne = any
    c9dc:	add	x0, sp, #0x8
    c9e0:	mov	x2, x29
    c9e4:	mov	x3, xzr
    c9e8:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    c9ec:	adrp	x8, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    c9f0:	add	x8, x8, #0xa28
    c9f4:	sub	x9, x19, x8
    c9f8:	lsr	x9, x9, #13
    c9fc:	cbz	x9, ca2c <__interceptor_realloc@@Base+0xd0>
    ca00:	add	x2, sp, #0x8
    ca04:	mov	x0, x19
    ca08:	mov	x1, x20
    ca0c:	bl	94e8 <__sanitizer_print_stack_trace@@Base+0xc90>
    ca10:	mov	x21, x0
    ca14:	mov	x0, x21
    ca18:	add	sp, sp, #0x820
    ca1c:	ldp	x20, x19, [sp, #32]
    ca20:	ldp	x28, x21, [sp, #16]
    ca24:	ldp	x29, x30, [sp], #48
    ca28:	ret
    ca2c:	ldr	w10, [x21]
    ca30:	sub	x9, x8, x19
    ca34:	add	x9, x9, #0x400
    ca38:	cmp	x9, x20
    ca3c:	csel	x9, x20, x9, hi  // hi = pmore
    ca40:	cbz	w10, ca68 <__interceptor_realloc@@Base+0x10c>
    ca44:	add	x1, sp, #0x8
    ca48:	mov	x0, x20
    ca4c:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
    ca50:	mov	x21, x0
    ca54:	mov	x0, x21
    ca58:	mov	x1, x19
    ca5c:	mov	x2, x20
    ca60:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
    ca64:	b	ca14 <__interceptor_realloc@@Base+0xb8>
    ca68:	adrp	x11, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    ca6c:	ldr	x10, [x11, #2656]
    ca70:	add	x12, x9, #0x7
    ca74:	add	x3, x10, x12, lsr #3
    ca78:	cmp	x3, #0x400
    ca7c:	str	x3, [x11, #2656]
    ca80:	b.cs	ca90 <__interceptor_realloc@@Base+0x134>  // b.hs, b.nlast
    ca84:	add	x21, x8, x10, lsl #3
    ca88:	mov	x20, x9
    ca8c:	b	ca54 <__interceptor_realloc@@Base+0xf8>
    ca90:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ca94:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ca98:	add	x0, x0, #0x46e
    ca9c:	add	x2, x2, #0x4f7
    caa0:	mov	w1, #0x3c                  	// #60
    caa4:	mov	w4, #0x400                 	// #1024
    caa8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000caac <__interceptor_reallocarray@@Base>:
    caac:	stp	x29, x30, [sp, #-48]!
    cab0:	stp	x28, x21, [sp, #16]
    cab4:	stp	x20, x19, [sp, #32]
    cab8:	mov	x29, sp
    cabc:	sub	sp, sp, #0x820
    cac0:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cac4:	ldr	x9, [x9, #3904]
    cac8:	add	x8, sp, #0x8
    cacc:	mov	x19, x2
    cad0:	mov	x20, x1
    cad4:	ldr	w9, [x9]
    cad8:	mov	x21, x0
    cadc:	add	x8, x8, #0x10
    cae0:	stp	x8, xzr, [sp, #8]
    cae4:	str	xzr, [sp, #2072]
    cae8:	cbz	w9, cb40 <__interceptor_reallocarray@@Base+0x94>
    caec:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    caf0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    caf4:	ldr	x8, [x8, #4056]
    caf8:	mov	x1, x0
    cafc:	ldr	w5, [x8, #36]
    cb00:	ldrb	w8, [x8, #34]
    cb04:	cmp	w5, #0x0
    cb08:	csel	x9, xzr, x29, eq  // eq = none
    cb0c:	cmp	w5, #0x1
    cb10:	str	x9, [sp, #2072]
    cb14:	b.hi	cb28 <__interceptor_reallocarray@@Base+0x7c>  // b.pmore
    cb18:	b.ne	cb20 <__interceptor_reallocarray@@Base+0x74>  // b.any
    cb1c:	str	x1, [sp, #24]
    cb20:	str	w5, [sp, #16]
    cb24:	b	cb40 <__interceptor_reallocarray@@Base+0x94>
    cb28:	cmp	w8, #0x0
    cb2c:	cset	w4, ne  // ne = any
    cb30:	add	x0, sp, #0x8
    cb34:	mov	x2, x29
    cb38:	mov	x3, xzr
    cb3c:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    cb40:	add	x3, sp, #0x8
    cb44:	mov	x0, x21
    cb48:	mov	x1, x20
    cb4c:	mov	x2, x19
    cb50:	bl	9a10 <__sanitizer_print_stack_trace@@Base+0x11b8>
    cb54:	add	sp, sp, #0x820
    cb58:	ldp	x20, x19, [sp, #32]
    cb5c:	ldp	x28, x21, [sp, #16]
    cb60:	ldp	x29, x30, [sp], #48
    cb64:	ret

000000000000cb68 <__interceptor_malloc@@Base>:
    cb68:	stp	x29, x30, [sp, #-48]!
    cb6c:	str	x28, [sp, #16]
    cb70:	stp	x20, x19, [sp, #32]
    cb74:	mov	x29, sp
    cb78:	sub	sp, sp, #0x820
    cb7c:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cb80:	ldr	x20, [x20, #3904]
    cb84:	add	x8, sp, #0x8
    cb88:	mov	x19, x0
    cb8c:	add	x8, x8, #0x10
    cb90:	ldr	w9, [x20]
    cb94:	stp	x8, xzr, [sp, #8]
    cb98:	str	xzr, [sp, #2072]
    cb9c:	cbz	w9, cbf4 <__interceptor_malloc@@Base+0x8c>
    cba0:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
    cba4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cba8:	ldr	x8, [x8, #4056]
    cbac:	mov	x1, x0
    cbb0:	ldr	w5, [x8, #36]
    cbb4:	ldrb	w8, [x8, #34]
    cbb8:	cmp	w5, #0x0
    cbbc:	csel	x9, xzr, x29, eq  // eq = none
    cbc0:	cmp	w5, #0x1
    cbc4:	str	x9, [sp, #2072]
    cbc8:	b.hi	cbdc <__interceptor_malloc@@Base+0x74>  // b.pmore
    cbcc:	b.ne	cbd4 <__interceptor_malloc@@Base+0x6c>  // b.any
    cbd0:	str	x1, [sp, #24]
    cbd4:	str	w5, [sp, #16]
    cbd8:	b	cbf4 <__interceptor_malloc@@Base+0x8c>
    cbdc:	cmp	w8, #0x0
    cbe0:	cset	w4, ne  // ne = any
    cbe4:	add	x0, sp, #0x8
    cbe8:	mov	x2, x29
    cbec:	mov	x3, xzr
    cbf0:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    cbf4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cbf8:	ldr	x8, [x8, #3816]
    cbfc:	ldrb	w9, [x8]
    cc00:	ldr	w8, [x20]
    cc04:	cbnz	w9, cc0c <__interceptor_malloc@@Base+0xa4>
    cc08:	cbz	w8, cc30 <__interceptor_malloc@@Base+0xc8>
    cc0c:	cbz	w8, cc3c <__interceptor_malloc@@Base+0xd4>
    cc10:	add	x1, sp, #0x8
    cc14:	mov	x0, x19
    cc18:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
    cc1c:	add	sp, sp, #0x820
    cc20:	ldp	x20, x19, [sp, #32]
    cc24:	ldr	x28, [sp, #16]
    cc28:	ldp	x29, x30, [sp], #48
    cc2c:	ret
    cc30:	bl	6cf0 <__hwasan_init@plt>
    cc34:	ldr	w8, [x20]
    cc38:	cbnz	w8, cc10 <__interceptor_malloc@@Base+0xa8>
    cc3c:	adrp	x9, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cc40:	ldr	x8, [x9, #2656]
    cc44:	add	x10, x19, #0x7
    cc48:	add	x3, x8, x10, lsr #3
    cc4c:	cmp	x3, #0x400
    cc50:	str	x3, [x9, #2656]
    cc54:	b.cs	cc68 <__interceptor_malloc@@Base+0x100>  // b.hs, b.nlast
    cc58:	adrp	x9, 55000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e8>
    cc5c:	add	x9, x9, #0xa28
    cc60:	add	x0, x9, x8, lsl #3
    cc64:	b	cc1c <__interceptor_malloc@@Base+0xb4>
    cc68:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cc6c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cc70:	add	x0, x0, #0x46e
    cc74:	add	x2, x2, #0x4f7
    cc78:	mov	w1, #0x3c                  	// #60
    cc7c:	mov	w4, #0x400                 	// #1024
    cc80:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000cc84 <__interceptor_pthread_create@@Base>:
    cc84:	stp	x30, x23, [sp, #-48]!
    cc88:	stp	x22, x21, [sp, #16]
    cc8c:	stp	x20, x19, [sp, #32]
    cc90:	mov	x21, x3
    cc94:	mov	x22, x2
    cc98:	mov	x19, x1
    cc9c:	mov	x20, x0
    cca0:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    cca4:	ldr	w8, [x0, #2680]
    cca8:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    ccac:	add	w8, w8, #0x1
    ccb0:	str	w8, [x0, #2680]
    ccb4:	ldr	x23, [x23, #4016]
    ccb8:	ldr	x0, [x23]
    ccbc:	cbnz	x0, ccc8 <__interceptor_pthread_create@@Base+0x44>
    ccc0:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    ccc4:	str	x0, [x23]
    ccc8:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cccc:	add	x1, x1, #0x4ce
    ccd0:	mov	w2, wzr
    ccd4:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
    ccd8:	stp	x22, x21, [x0]
    ccdc:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cce0:	ldr	x8, [x8, #2600]
    cce4:	adrp	x2, c000 <__sanitizer_get_allocated_size@@Base+0x202c>
    cce8:	mov	x3, x0
    ccec:	and	x0, x20, #0xffffffffffffff
    ccf0:	and	x1, x19, #0xffffffffffffff
    ccf4:	add	x2, x2, #0xd24
    ccf8:	blr	x8
    ccfc:	mov	w19, w0
    cd00:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    cd04:	ldr	w8, [x0, #2680]
    cd08:	sub	w8, w8, #0x1
    cd0c:	str	w8, [x0, #2680]
    cd10:	mov	w0, w19
    cd14:	ldp	x20, x19, [sp, #32]
    cd18:	ldp	x22, x21, [sp, #16]
    cd1c:	ldp	x30, x23, [sp], #48
    cd20:	ret
    cd24:	sub	sp, sp, #0x30
    cd28:	stp	x30, x21, [sp, #16]
    cd2c:	stp	x20, x19, [sp, #32]
    cd30:	mov	x19, x0
    cd34:	bl	6c30 <__hwasan_thread_enter@plt>
    cd38:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cd3c:	ldr	x21, [x21, #4016]
    cd40:	ldp	x0, x20, [x19]
    cd44:	ldr	x1, [x21]
    cd48:	str	x0, [sp, #8]
    cd4c:	cbnz	x1, cd5c <__interceptor_pthread_create@@Base+0xd8>
    cd50:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    cd54:	mov	x1, x0
    cd58:	str	x0, [x21]
    cd5c:	mov	x0, x19
    cd60:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    cd64:	mov	x0, x20
    cd68:	ldr	x1, [sp, #8]
    cd6c:	ldp	x20, x19, [sp, #32]
    cd70:	ldp	x30, x21, [sp, #16]
    cd74:	add	sp, sp, #0x30
    cd78:	br	x1
    cd7c:	stp	x30, x19, [sp, #-16]!
    cd80:	mov	x19, x0
    cd84:	cbz	w1, cdb0 <__interceptor_pthread_create@@Base+0x12c>
    cd88:	add	x2, x19, #0xb8
    cd8c:	mov	w0, wzr
    cd90:	mov	x1, xzr
    cd94:	bl	6aa0 <sigprocmask@plt>
    cd98:	cmp	w0, #0x0
    cd9c:	cset	w8, eq  // eq = none
    cda0:	str	w8, [x19, #176]
    cda4:	mov	w0, wzr
    cda8:	ldp	x30, x19, [sp], #16
    cdac:	ret
    cdb0:	mov	w8, wzr
    cdb4:	str	w8, [x19, #176]
    cdb8:	mov	w0, wzr
    cdbc:	ldp	x30, x19, [sp], #16
    cdc0:	ret

000000000000cdc4 <__interceptor_siglongjmp@@Base>:
    cdc4:	str	x30, [sp, #-32]!
    cdc8:	stp	x20, x19, [sp, #16]
    cdcc:	ldr	w8, [x0, #176]
    cdd0:	mov	x19, x0
    cdd4:	mov	w20, w1
    cdd8:	cbz	w8, cdec <__interceptor_siglongjmp@@Base+0x28>
    cddc:	add	x1, x19, #0xb8
    cde0:	mov	w0, #0x2                   	// #2
    cde4:	mov	x2, xzr
    cde8:	bl	6aa0 <sigprocmask@plt>
    cdec:	ldr	x0, [x19, #104]
    cdf0:	bl	6d80 <__hwasan_handle_longjmp@plt>
    cdf4:	mov	x0, x19
    cdf8:	sxtw	x1, w20
    cdfc:	ldp	x19, x20, [x0]
    ce00:	ldp	x21, x22, [x0, #16]
    ce04:	ldp	x23, x24, [x0, #32]
    ce08:	ldp	x25, x26, [x0, #48]
    ce0c:	ldp	x27, x28, [x0, #64]
    ce10:	ldp	x29, x30, [x0, #80]
    ce14:	ldp	d8, d9, [x0, #112]
    ce18:	ldp	d10, d11, [x0, #128]
    ce1c:	ldp	d12, d13, [x0, #144]
    ce20:	ldp	d14, d15, [x0, #160]
    ce24:	ldr	x5, [x0, #104]
    ce28:	mov	sp, x5
    ce2c:	cmp	x1, #0x0
    ce30:	mov	x0, #0x1                   	// #1
    ce34:	csel	x0, x1, x0, ne  // ne = any
    ce38:	br	x30
    ce3c:	ldp	x20, x19, [sp, #16]
    ce40:	ldr	x30, [sp], #32
    ce44:	ret

000000000000ce48 <__interceptor___libc_longjmp@@Base>:
    ce48:	str	x30, [sp, #-32]!
    ce4c:	stp	x20, x19, [sp, #16]
    ce50:	mov	x19, x0
    ce54:	ldr	x0, [x0, #104]
    ce58:	mov	w20, w1
    ce5c:	bl	6d80 <__hwasan_handle_longjmp@plt>
    ce60:	mov	x0, x19
    ce64:	sxtw	x1, w20
    ce68:	ldp	x19, x20, [x0]
    ce6c:	ldp	x21, x22, [x0, #16]
    ce70:	ldp	x23, x24, [x0, #32]
    ce74:	ldp	x25, x26, [x0, #48]
    ce78:	ldp	x27, x28, [x0, #64]
    ce7c:	ldp	x29, x30, [x0, #80]
    ce80:	ldp	d8, d9, [x0, #112]
    ce84:	ldp	d10, d11, [x0, #128]
    ce88:	ldp	d12, d13, [x0, #144]
    ce8c:	ldp	d14, d15, [x0, #160]
    ce90:	ldr	x5, [x0, #104]
    ce94:	mov	sp, x5
    ce98:	cmp	x1, #0x0
    ce9c:	mov	x0, #0x1                   	// #1
    cea0:	csel	x0, x1, x0, ne  // ne = any
    cea4:	br	x30
    cea8:	ldp	x20, x19, [sp, #16]
    ceac:	ldr	x30, [sp], #32
    ceb0:	ret

000000000000ceb4 <__interceptor_longjmp@@Base>:
    ceb4:	str	x30, [sp, #-32]!
    ceb8:	stp	x20, x19, [sp, #16]
    cebc:	mov	x19, x0
    cec0:	ldr	x0, [x0, #104]
    cec4:	mov	w20, w1
    cec8:	bl	6d80 <__hwasan_handle_longjmp@plt>
    cecc:	mov	x0, x19
    ced0:	sxtw	x1, w20
    ced4:	ldp	x19, x20, [x0]
    ced8:	ldp	x21, x22, [x0, #16]
    cedc:	ldp	x23, x24, [x0, #32]
    cee0:	ldp	x25, x26, [x0, #48]
    cee4:	ldp	x27, x28, [x0, #64]
    cee8:	ldp	x29, x30, [x0, #80]
    ceec:	ldp	d8, d9, [x0, #112]
    cef0:	ldp	d10, d11, [x0, #128]
    cef4:	ldp	d12, d13, [x0, #144]
    cef8:	ldp	d14, d15, [x0, #160]
    cefc:	ldr	x5, [x0, #104]
    cf00:	mov	sp, x5
    cf04:	cmp	x1, #0x0
    cf08:	mov	x0, #0x1                   	// #1
    cf0c:	csel	x0, x1, x0, ne  // ne = any
    cf10:	br	x30
    cf14:	ldp	x20, x19, [sp, #16]
    cf18:	ldr	x30, [sp], #32
    cf1c:	ret

000000000000cf20 <__interceptor_fork@@Base>:
    cf20:	stp	x30, x19, [sp, #-16]!
    cf24:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cf28:	ldr	x8, [x8, #3816]
    cf2c:	ldrb	w8, [x8]
    cf30:	cbnz	w8, cf6c <__interceptor_fork@@Base+0x4c>
    cf34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cf38:	ldr	x8, [x8, #3904]
    cf3c:	ldr	w8, [x8]
    cf40:	cbnz	w8, cf48 <__interceptor_fork@@Base+0x28>
    cf44:	bl	6cf0 <__hwasan_init@plt>
    cf48:	bl	2392c <__sanitizer_cov_pcs_init@@Base+0x6f8>
    cf4c:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cf50:	ldr	x8, [x8, #2640]
    cf54:	blr	x8
    cf58:	mov	w19, w0
    cf5c:	bl	239cc <__sanitizer_cov_pcs_init@@Base+0x798>
    cf60:	mov	w0, w19
    cf64:	ldp	x30, x19, [sp], #16
    cf68:	ret
    cf6c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cf70:	adrp	x2, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
    cf74:	add	x0, x0, #0x46e
    cf78:	add	x2, x2, #0xf3c
    cf7c:	mov	w1, #0x13c                 	// #316
    cf80:	mov	x3, xzr
    cf84:	mov	x4, xzr
    cf88:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    cf8c:	mov	w0, wzr
    cf90:	ret
    cf94:	stp	x30, x19, [sp, #-16]!
    cf98:	adrp	x19, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cf9c:	ldrb	w8, [x19, #2648]
    cfa0:	cmp	w8, #0x1
    cfa4:	b.eq	d024 <__interceptor_fork@@Base+0x104>  // b.none
    cfa8:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cfac:	adrp	x3, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cfb0:	ldr	x2, [x2, #3648]
    cfb4:	ldr	x3, [x3, #3888]
    cfb8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cfbc:	adrp	x1, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cfc0:	add	x0, x0, #0x4f2
    cfc4:	add	x1, x1, #0xa50
    cfc8:	bl	11880 <_ZdaPvRKSt9nothrow_t@@Base+0xac>
    cfcc:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cfd0:	adrp	x3, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cfd4:	ldr	x2, [x2, #3984]
    cfd8:	ldr	x3, [x3, #3824]
    cfdc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    cfe0:	adrp	x1, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    cfe4:	add	x0, x0, #0x4f1
    cfe8:	add	x1, x1, #0xa30
    cfec:	bl	11880 <_ZdaPvRKSt9nothrow_t@@Base+0xac>
    cff0:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cff4:	adrp	x3, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    cff8:	ldr	x2, [x2, #3680]
    cffc:	ldr	x3, [x3, #3704]
    d000:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d004:	adrp	x1, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d008:	add	x0, x0, #0x4ce
    d00c:	add	x1, x1, #0xa28
    d010:	bl	11880 <_ZdaPvRKSt9nothrow_t@@Base+0xac>
    d014:	mov	w8, #0x1                   	// #1
    d018:	strb	w8, [x19, #2648]
    d01c:	ldp	x30, x19, [sp], #16
    d020:	ret
    d024:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d028:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d02c:	add	x0, x0, #0x46e
    d030:	add	x2, x2, #0x4dd
    d034:	mov	w1, #0x150                 	// #336
    d038:	mov	w3, #0x1                   	// #1
    d03c:	mov	x4, xzr
    d040:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000000d044 <__interceptor_vfork@@Base>:
    d044:	stp	xzr, x30, [sp, #-16]!
    d048:	bl	86ec <__hwasan_handle_vfork@@Base+0x70>
    d04c:	ldp	xzr, x30, [sp], #16
    d050:	str	x30, [x0]
    d054:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d058:	ldr	x0, [x0, #2608]
    d05c:	blr	x0
    d060:	stp	x0, xzr, [sp, #-16]!
    d064:	cmp	x0, #0x0
    d068:	b.eq	d074 <__interceptor_vfork@@Base+0x30>  // b.none
    d06c:	add	x0, sp, #0x10
    d070:	bl	69f0 <__hwasan_handle_vfork@plt>
    d074:	bl	86ec <__hwasan_handle_vfork@@Base+0x70>
    d078:	ldr	x30, [x0]
    d07c:	ldp	x0, xzr, [sp], #16
    d080:	ret
    d084:	str	x30, [sp, #-16]!
    d088:	mov	w0, #0x38                  	// #56
    d08c:	mov	x1, xzr
    d090:	mov	x2, xzr
    d094:	mov	x3, xzr
    d098:	mov	x4, xzr
    d09c:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
    d0a0:	cmn	x0, #0x1
    d0a4:	b.ne	d0b8 <__interceptor_vfork@@Base+0x74>  // b.any
    d0a8:	bl	6d00 <__errno_location@plt>
    d0ac:	ldr	w8, [x0]
    d0b0:	cmp	w8, #0x16
    d0b4:	b.eq	d10c <__interceptor_vfork@@Base+0xc8>  // b.none
    d0b8:	mov	w0, #0x37                  	// #55
    d0bc:	mov	w1, #0x1                   	// #1
    d0c0:	mov	x2, xzr
    d0c4:	mov	x3, xzr
    d0c8:	mov	x4, xzr
    d0cc:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
    d0d0:	cmn	x0, #0x1
    d0d4:	b.eq	d0fc <__interceptor_vfork@@Base+0xb8>  // b.none
    d0d8:	mov	w0, #0x38                  	// #56
    d0dc:	mov	x1, xzr
    d0e0:	mov	x2, xzr
    d0e4:	mov	x3, xzr
    d0e8:	mov	x4, xzr
    d0ec:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
    d0f0:	cbz	x0, d0fc <__interceptor_vfork@@Base+0xb8>
    d0f4:	ldr	x30, [sp], #16
    d0f8:	ret
    d0fc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d100:	add	x0, x0, #0x56f
    d104:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d108:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    d10c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d110:	add	x0, x0, #0x529
    d114:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d118:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    d11c:	stp	x30, x23, [sp, #-48]!
    d120:	stp	x22, x21, [sp, #16]
    d124:	stp	x20, x19, [sp, #32]
    d128:	bl	1a8ac <__sanitizer_set_report_fd@@Base+0x4268>
    d12c:	mov	x19, x0
    d130:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d134:	lsl	x8, x0, #4
    d138:	sub	x8, x8, #0x1
    d13c:	adrp	x23, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d140:	orr	x8, x8, x19
    d144:	add	x23, x23, #0xa70
    d148:	lsr	x0, x8, #4
    d14c:	str	x8, [x23]
    d150:	bl	c020 <__sanitizer_get_allocated_size@@Base+0x204c>
    d154:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d158:	ldr	x8, [x8, #3840]
    d15c:	ldr	x10, [x23]
    d160:	sub	x9, x0, #0x1
    d164:	str	x0, [x8]
    d168:	add	x8, x0, x9, lsr #4
    d16c:	stp	x9, x8, [x23, #8]
    d170:	add	x8, x0, x10, lsr #4
    d174:	stp	x0, x8, [x23, #24]
    d178:	add	x8, x0, x8, lsr #4
    d17c:	cmp	x9, x8
    d180:	csel	x8, x9, x8, hi  // hi = pmore
    d184:	add	x8, x8, #0x1
    d188:	sub	x9, x8, x0
    d18c:	lsl	x19, x9, #4
    d190:	stp	x8, x19, [x23, #40]
    d194:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d198:	udiv	x8, x19, x0
    d19c:	msub	x3, x8, x0, x19
    d1a0:	cbnz	x3, d3f4 <__interceptor_vfork@@Base+0x3b0>
    d1a4:	adrp	x19, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d1a8:	add	x19, x19, #0xa90
    d1ac:	ldr	x8, [x19, #16]
    d1b0:	ldr	x4, [x19]
    d1b4:	cmp	x8, x4
    d1b8:	b.ls	d410 <__interceptor_vfork@@Base+0x3cc>  // b.plast
    d1bc:	adrp	x9, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d1c0:	ldr	x9, [x9, #2712]
    d1c4:	cmp	x4, x9
    d1c8:	b.ls	d42c <__interceptor_vfork@@Base+0x3e8>  // b.plast
    d1cc:	adrp	x22, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d1d0:	ldr	x4, [x22, #2680]
    d1d4:	cmp	x9, x4
    d1d8:	b.ls	d44c <__interceptor_vfork@@Base+0x408>  // b.plast
    d1dc:	cbz	x4, d468 <__interceptor_vfork@@Base+0x424>
    d1e0:	adrp	x20, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d1e4:	add	x20, x20, #0xa80
    d1e8:	ldp	x3, x9, [x20]
    d1ec:	cmp	x3, x9
    d1f0:	b.ls	d484 <__interceptor_vfork@@Base+0x440>  // b.plast
    d1f4:	cmp	x9, x4
    d1f8:	b.ls	d4a0 <__interceptor_vfork@@Base+0x45c>  // b.plast
    d1fc:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d200:	ldr	x10, [x10, #3808]
    d204:	adrp	x21, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d208:	add	x21, x21, #0xa78
    d20c:	ldr	w10, [x10]
    d210:	cbz	w10, d35c <__interceptor_vfork@@Base+0x318>
    d214:	ldr	x2, [x23]
    d218:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d21c:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d220:	add	x0, x0, #0x96b
    d224:	add	x4, x4, #0x8bc
    d228:	mov	w3, #0xa                   	// #10
    d22c:	mov	x1, x8
    d230:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d234:	ldr	x2, [x23, #32]
    d238:	ldr	x4, [x23, #48]
    d23c:	add	x8, x2, #0x1
    d240:	cmp	x8, x4
    d244:	b.cs	d274 <__interceptor_vfork@@Base+0x230>  // b.hs, b.nlast
    d248:	sub	x2, x4, #0x1
    d24c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d250:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d254:	add	x0, x0, #0x96b
    d258:	add	x4, x4, #0x8c4
    d25c:	mov	w3, #0xa                   	// #10
    d260:	mov	x1, x8
    d264:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d268:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d26c:	ldr	x2, [x8, #2704]
    d270:	b	d278 <__interceptor_vfork@@Base+0x234>
    d274:	b.ne	d4bc <__interceptor_vfork@@Base+0x478>  // b.any
    d278:	ldr	x1, [x20, #24]
    d27c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d280:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d284:	add	x0, x0, #0x96b
    d288:	add	x4, x4, #0x8fa
    d28c:	mov	w3, #0xa                   	// #10
    d290:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d294:	ldr	x2, [x20]
    d298:	ldr	x4, [x20, #24]
    d29c:	add	x1, x2, #0x1
    d2a0:	cmp	x1, x4
    d2a4:	b.cs	d2d0 <__interceptor_vfork@@Base+0x28c>  // b.hs, b.nlast
    d2a8:	sub	x2, x4, #0x1
    d2ac:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d2b0:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d2b4:	add	x0, x0, #0x96b
    d2b8:	add	x4, x4, #0x8c4
    d2bc:	mov	w3, #0xa                   	// #10
    d2c0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d2c4:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d2c8:	ldr	x2, [x8, #2688]
    d2cc:	b	d2e0 <__interceptor_vfork@@Base+0x29c>
    d2d0:	ldr	x8, [x22, #2680]
    d2d4:	add	x3, x8, #0x1
    d2d8:	cmp	x3, x4
    d2dc:	b.ne	d4d8 <__interceptor_vfork@@Base+0x494>  // b.any
    d2e0:	ldr	x1, [x21, #16]
    d2e4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d2e8:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d2ec:	add	x0, x0, #0x96b
    d2f0:	add	x4, x4, #0x930
    d2f4:	mov	w3, #0xa                   	// #10
    d2f8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d2fc:	ldr	x2, [x21]
    d300:	ldr	x4, [x21, #16]
    d304:	add	x8, x2, #0x1
    d308:	cmp	x8, x4
    d30c:	b.cs	d338 <__interceptor_vfork@@Base+0x2f4>  // b.hs, b.nlast
    d310:	sub	x2, x4, #0x1
    d314:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d318:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d31c:	add	x0, x0, #0x96b
    d320:	add	x4, x4, #0x8c4
    d324:	mov	w3, #0xa                   	// #10
    d328:	mov	x1, x8
    d32c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d330:	ldr	x2, [x22, #2680]
    d334:	b	d33c <__interceptor_vfork@@Base+0x2f8>
    d338:	b.ne	d4f0 <__interceptor_vfork@@Base+0x4ac>  // b.any
    d33c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d340:	adrp	x4, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d344:	add	x0, x0, #0x96b
    d348:	add	x4, x4, #0x964
    d34c:	mov	w3, #0xa                   	// #10
    d350:	mov	x1, xzr
    d354:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    d358:	ldp	x3, x9, [x20]
    d35c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d360:	add	x2, x2, #0x753
    d364:	mov	x0, x9
    d368:	mov	x1, x3
    d36c:	bl	d50c <__interceptor_vfork@@Base+0x4c8>
    d370:	ldp	x1, x0, [x21, #24]
    d374:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d378:	add	x2, x2, #0x75e
    d37c:	bl	d50c <__interceptor_vfork@@Base+0x4c8>
    d380:	ldr	x8, [x21]
    d384:	ldr	x9, [x21, #16]
    d388:	add	x0, x8, #0x1
    d38c:	cmp	x0, x9
    d390:	b.cs	d3a0 <__interceptor_vfork@@Base+0x35c>  // b.hs, b.nlast
    d394:	mvn	x8, x8
    d398:	add	x1, x9, x8
    d39c:	bl	d5c8 <__interceptor_vfork@@Base+0x584>
    d3a0:	ldr	x8, [x20]
    d3a4:	ldr	x9, [x20, #24]
    d3a8:	add	x0, x8, #0x1
    d3ac:	cmp	x0, x9
    d3b0:	b.cs	d3c0 <__interceptor_vfork@@Base+0x37c>  // b.hs, b.nlast
    d3b4:	mvn	x8, x8
    d3b8:	add	x1, x9, x8
    d3bc:	bl	d5c8 <__interceptor_vfork@@Base+0x584>
    d3c0:	ldr	x8, [x19]
    d3c4:	ldr	x9, [x19, #16]
    d3c8:	add	x0, x8, #0x1
    d3cc:	cmp	x0, x9
    d3d0:	b.cs	d3e0 <__interceptor_vfork@@Base+0x39c>  // b.hs, b.nlast
    d3d4:	mvn	x8, x8
    d3d8:	add	x1, x9, x8
    d3dc:	bl	d5c8 <__interceptor_vfork@@Base+0x584>
    d3e0:	ldp	x20, x19, [sp, #32]
    d3e4:	ldp	x22, x21, [sp, #16]
    d3e8:	mov	w0, #0x1                   	// #1
    d3ec:	ldp	x30, x23, [sp], #48
    d3f0:	ret
    d3f4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d3f8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d3fc:	add	x0, x0, #0x5f6
    d400:	add	x2, x2, #0x63b
    d404:	mov	w1, #0xd2                  	// #210
    d408:	mov	x4, xzr
    d40c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d410:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d414:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d418:	add	x0, x0, #0x5f6
    d41c:	add	x2, x2, #0x66d
    d420:	mov	w1, #0xd3                  	// #211
    d424:	mov	x3, x8
    d428:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d42c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d430:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d434:	add	x0, x0, #0x5f6
    d438:	add	x2, x2, #0x694
    d43c:	mov	w1, #0xd4                  	// #212
    d440:	mov	x3, x4
    d444:	mov	x4, x9
    d448:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d44c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d450:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d454:	add	x0, x0, #0x5f6
    d458:	add	x2, x2, #0x6be
    d45c:	mov	w1, #0xd5                  	// #213
    d460:	mov	x3, x9
    d464:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d468:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d46c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d470:	add	x0, x0, #0x5f6
    d474:	add	x2, x2, #0x6e4
    d478:	mov	w1, #0xd6                  	// #214
    d47c:	mov	x3, xzr
    d480:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d484:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d488:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d48c:	add	x0, x0, #0x5f6
    d490:	add	x2, x2, #0x706
    d494:	mov	w1, #0xd7                  	// #215
    d498:	mov	x4, x9
    d49c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d4a0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4a4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4a8:	add	x0, x0, #0x5f6
    d4ac:	add	x2, x2, #0x72e
    d4b0:	mov	w1, #0xd8                  	// #216
    d4b4:	mov	x3, x9
    d4b8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d4bc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4c0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4c4:	add	x0, x0, #0x5f6
    d4c8:	add	x2, x2, #0x8ce
    d4cc:	mov	w1, #0x78                  	// #120
    d4d0:	mov	x3, x8
    d4d4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d4d8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4dc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4e0:	add	x0, x0, #0x5f6
    d4e4:	add	x2, x2, #0x905
    d4e8:	mov	w1, #0x7d                  	// #125
    d4ec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d4f0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4f4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d4f8:	add	x0, x0, #0x5f6
    d4fc:	add	x2, x2, #0x93a
    d500:	mov	w1, #0x82                  	// #130
    d504:	mov	x3, x8
    d508:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d50c:	str	x30, [sp, #-48]!
    d510:	stp	x22, x21, [sp, #16]
    d514:	stp	x20, x19, [sp, #32]
    d518:	mov	x19, x2
    d51c:	mov	x21, x1
    d520:	mov	x20, x0
    d524:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d528:	udiv	x8, x20, x0
    d52c:	msub	x3, x8, x0, x20
    d530:	cbnz	x3, d57c <__interceptor_vfork@@Base+0x538>
    d534:	add	x22, x21, #0x1
    d538:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d53c:	udiv	x8, x22, x0
    d540:	msub	x3, x8, x0, x22
    d544:	cbnz	x3, d598 <__interceptor_vfork@@Base+0x554>
    d548:	sub	x8, x21, x20
    d54c:	add	x21, x8, #0x1
    d550:	mov	x0, x21
    d554:	bl	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
    d558:	mov	x0, x20
    d55c:	mov	x1, x21
    d560:	mov	x2, x19
    d564:	bl	21820 <__sanitizer_sandbox_on_notify@@Base+0x11a0>
    d568:	tbz	w0, #0, d5b4 <__interceptor_vfork@@Base+0x570>
    d56c:	ldp	x20, x19, [sp, #32]
    d570:	ldp	x22, x21, [sp, #16]
    d574:	ldr	x30, [sp], #48
    d578:	ret
    d57c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d580:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d584:	add	x0, x0, #0x5f6
    d588:	add	x2, x2, #0x983
    d58c:	mov	w1, #0x3d                  	// #61
    d590:	mov	x4, xzr
    d594:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d598:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d59c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d5a0:	add	x0, x0, #0x5f6
    d5a4:	add	x2, x2, #0x9ad
    d5a8:	mov	w1, #0x3e                  	// #62
    d5ac:	mov	x4, xzr
    d5b0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d5b4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d5b8:	add	x0, x0, #0x9dd
    d5bc:	mov	x1, x21
    d5c0:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    d5c4:	bl	213f8 <__sanitizer_sandbox_on_notify@@Base+0xd78>
    d5c8:	str	x30, [sp, #-64]!
    d5cc:	stp	x24, x23, [sp, #16]
    d5d0:	stp	x22, x21, [sp, #32]
    d5d4:	stp	x20, x19, [sp, #48]
    d5d8:	cbz	x1, d638 <__interceptor_vfork@@Base+0x5f4>
    d5dc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d5e0:	add	x2, x2, #0xa3e
    d5e4:	mov	x20, x1
    d5e8:	mov	x19, x0
    d5ec:	bl	219c8 <__sanitizer_sandbox_on_notify@@Base+0x1348>
    d5f0:	cmp	x0, x19
    d5f4:	b.eq	d638 <__interceptor_vfork@@Base+0x5f4>  // b.none
    d5f8:	cbnz	x19, d64c <__interceptor_vfork@@Base+0x608>
    d5fc:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d600:	adrp	x22, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d604:	mov	x21, x0
    d608:	neg	x23, x0
    d60c:	add	x22, x22, #0xa3e
    d610:	subs	x24, x20, x21
    d614:	b.ls	d64c <__interceptor_vfork@@Base+0x608>  // b.plast
    d618:	add	x19, x19, x21
    d61c:	add	x1, x23, x20
    d620:	mov	x0, x19
    d624:	mov	x2, x22
    d628:	bl	219c8 <__sanitizer_sandbox_on_notify@@Base+0x1348>
    d62c:	cmp	x19, x0
    d630:	mov	x20, x24
    d634:	b.ne	d610 <__interceptor_vfork@@Base+0x5cc>  // b.any
    d638:	ldp	x20, x19, [sp, #48]
    d63c:	ldp	x22, x21, [sp, #32]
    d640:	ldp	x24, x23, [sp, #16]
    d644:	ldr	x30, [sp], #64
    d648:	ret
    d64c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d650:	add	x2, x19, x20
    d654:	add	x0, x0, #0xa49
    d658:	mov	x1, x19
    d65c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    d660:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
    d664:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    d668:	stp	x30, x21, [sp, #-32]!
    d66c:	stp	x20, x19, [sp, #16]
    d670:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d674:	ldr	x21, [x21, #3840]
    d678:	ldr	x8, [x21]
    d67c:	cbz	x8, d6cc <__interceptor_vfork@@Base+0x688>
    d680:	bl	1b2cc <__sanitizer_set_report_fd@@Base+0x4c88>
    d684:	ldr	x8, [x21]
    d688:	mov	x9, #0xffffffff00000000    	// #-4294967296
    d68c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d690:	add	x2, x2, #0x79c
    d694:	add	x19, x8, x9
    d698:	sub	x20, x8, x0
    d69c:	sub	x1, x20, #0x1
    d6a0:	mov	x0, x19
    d6a4:	bl	d50c <__interceptor_vfork@@Base+0x4c8>
    d6a8:	ldr	x8, [x21]
    d6ac:	mov	x0, x20
    d6b0:	sub	x1, x8, x20
    d6b4:	bl	d5c8 <__interceptor_vfork@@Base+0x584>
    d6b8:	sub	x1, x20, x19
    d6bc:	mov	x0, x19
    d6c0:	ldp	x20, x19, [sp, #16]
    d6c4:	ldp	x30, x21, [sp], #32
    d6c8:	b	111c0 <__hwasan_tag_mismatch_v2@@Base+0x570>
    d6cc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d6d0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d6d4:	add	x0, x0, #0x5f6
    d6d8:	add	x2, x2, #0x76a
    d6dc:	mov	w1, #0xee                  	// #238
    d6e0:	mov	x3, xzr
    d6e4:	mov	x4, xzr
    d6e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d6ec:	stp	x30, x21, [sp, #-32]!
    d6f0:	stp	x20, x19, [sp, #16]
    d6f4:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d6f8:	add	x8, x8, #0xa80
    d6fc:	ldp	x8, x19, [x8]
    d700:	sub	x8, x8, x19
    d704:	add	x20, x8, #0x1
    d708:	mov	x0, x19
    d70c:	mov	x1, x20
    d710:	bl	2116c <__sanitizer_sandbox_on_notify@@Base+0xaec>
    d714:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d718:	ldr	x21, [x21, #4056]
    d71c:	ldrb	w8, [x21, #187]
    d720:	cbz	w8, d730 <__interceptor_vfork@@Base+0x6ec>
    d724:	mov	x0, x19
    d728:	mov	x1, x20
    d72c:	bl	21188 <__sanitizer_sandbox_on_notify@@Base+0xb08>
    d730:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d734:	add	x8, x8, #0xa90
    d738:	ldp	x8, x19, [x8]
    d73c:	sub	x8, x8, x19
    d740:	add	x20, x8, #0x1
    d744:	mov	x0, x19
    d748:	mov	x1, x20
    d74c:	bl	2116c <__sanitizer_sandbox_on_notify@@Base+0xaec>
    d750:	ldrb	w8, [x21, #187]
    d754:	cbz	w8, d76c <__interceptor_vfork@@Base+0x728>
    d758:	mov	x0, x19
    d75c:	mov	x1, x20
    d760:	ldp	x20, x19, [sp, #16]
    d764:	ldp	x30, x21, [sp], #32
    d768:	b	21188 <__sanitizer_sandbox_on_notify@@Base+0xb08>
    d76c:	ldp	x20, x19, [sp, #16]
    d770:	ldp	x30, x21, [sp], #32
    d774:	ret
    d778:	str	x30, [sp, #-16]!
    d77c:	lsr	x8, x0, #56
    d780:	cbnz	x8, d7b0 <__interceptor_vfork@@Base+0x76c>
    d784:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d788:	add	x8, x8, #0xa78
    d78c:	ldr	x9, [x8, #40]
    d790:	ldr	x8, [x8]
    d794:	cmp	x9, x0
    d798:	cset	w9, ls  // ls = plast
    d79c:	cmp	x8, x0
    d7a0:	cset	w8, cs  // cs = hs, nlast
    d7a4:	orr	w0, w9, w8
    d7a8:	ldr	x30, [sp], #16
    d7ac:	ret
    d7b0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d7b4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d7b8:	add	x0, x0, #0x5f6
    d7bc:	add	x2, x2, #0x7ab
    d7c0:	mov	w1, #0x108                 	// #264
    d7c4:	mov	x3, xzr
    d7c8:	mov	x4, xzr
    d7cc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d7d0:	adrp	x0, d000 <__interceptor_fork@@Base+0xe0>
    d7d4:	add	x0, x0, #0x7dc
    d7d8:	b	2ee98 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4b8>
    d7dc:	str	x30, [sp, #-32]!
    d7e0:	stp	x20, x19, [sp, #16]
    d7e4:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d7e8:	ldr	x19, [x19, #4056]
    d7ec:	ldr	w8, [x19, #64]
    d7f0:	cbz	w8, d7f8 <__interceptor_vfork@@Base+0x7b4>
    d7f4:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
    d7f8:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    d7fc:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d800:	ldrb	w8, [x0, #3]
    d804:	ldr	x20, [x20, #3856]
    d808:	cbz	w8, d828 <__interceptor_vfork@@Base+0x7e4>
    d80c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    d810:	ldrb	w8, [x0, #5]
    d814:	cbnz	w8, d824 <__interceptor_vfork@@Base+0x7e0>
    d818:	ldr	w8, [x20]
    d81c:	cmp	w8, #0x1
    d820:	b.lt	d83c <__interceptor_vfork@@Base+0x7f8>  // b.tstop
    d824:	bl	ef8c <__hwasan_memmove@@Base+0xe0c>
    d828:	ldr	w8, [x20]
    d82c:	cmp	w8, #0x1
    d830:	b.lt	d83c <__interceptor_vfork@@Base+0x7f8>  // b.tstop
    d834:	ldr	w0, [x19, #224]
    d838:	cbnz	w0, d848 <__interceptor_vfork@@Base+0x804>
    d83c:	ldp	x20, x19, [sp, #16]
    d840:	ldr	x30, [sp], #32
    d844:	ret
    d848:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>

000000000000d84c <__hwasan_thread_enter@@Base>:
    d84c:	str	x30, [sp, #-16]!
    d850:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d854:	bl	88ec <__sanitizer_print_stack_trace@@Base+0x94>
    d858:	ldr	x30, [sp], #16
    d85c:	b	10c94 <__hwasan_tag_mismatch_v2@@Base+0x44>

000000000000d860 <__hwasan_thread_exit@@Base>:
    d860:	stp	x30, x19, [sp, #-16]!
    d864:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d868:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d86c:	ldr	x8, [x8, #3992]
    d870:	mrs	x9, tpidr_el0
    d874:	ldr	x10, [x0, #16]
    d878:	ldr	x8, [x9, x8]
    d87c:	neg	x9, x10, lsl #1
    d880:	and	x8, x8, x9
    d884:	and	x8, x8, #0xfffffffffffffe
    d888:	adds	x19, x8, x10
    d88c:	b.eq	d8a0 <__hwasan_thread_exit@@Base+0x40>  // b.none
    d890:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d894:	mov	x1, x19
    d898:	ldp	x30, x19, [sp], #16
    d89c:	b	dd78 <__hwasan_tag_mismatch4@@Base+0x1a0>
    d8a0:	ldp	x30, x19, [sp], #16
    d8a4:	ret
    d8a8:	str	x30, [sp, #-16]!
    d8ac:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d8b0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d8b4:	ldr	x8, [x8, #3992]
    d8b8:	mrs	x9, tpidr_el0
    d8bc:	ldr	x10, [x0, #16]
    d8c0:	ldr	x8, [x9, x8]
    d8c4:	neg	x9, x10, lsl #1
    d8c8:	and	x8, x8, x9
    d8cc:	and	x8, x8, #0xfffffffffffffe
    d8d0:	add	x0, x8, x10
    d8d4:	ldr	x30, [sp], #16
    d8d8:	ret
    d8dc:	str	x30, [sp, #-16]!
    d8e0:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d8e4:	ldrb	w8, [x8, #2664]
    d8e8:	cmp	w8, #0x1
    d8ec:	b.ne	d904 <__hwasan_thread_exit@@Base+0xa4>  // b.any
    d8f0:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d8f4:	ldr	w0, [x8, #2668]
    d8f8:	mov	w1, #0x4                   	// #4
    d8fc:	bl	6c00 <pthread_setspecific@plt>
    d900:	cbnz	w0, d90c <__hwasan_thread_exit@@Base+0xac>
    d904:	ldr	x30, [sp], #16
    d908:	ret
    d90c:	sxtw	x4, w0
    d910:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d914:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d918:	add	x0, x0, #0x5f6
    d91c:	add	x2, x2, #0x7d0
    d920:	mov	w1, #0x131                 	// #305
    d924:	mov	x3, xzr
    d928:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d92c:	stp	x30, x19, [sp, #-16]!
    d930:	cmp	x0, #0x2
    d934:	b.cc	d970 <__hwasan_thread_exit@@Base+0x110>  // b.lo, b.ul, b.last
    d938:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d93c:	ldr	w8, [x8, #2668]
    d940:	sub	x1, x0, #0x1
    d944:	mov	w0, w8
    d948:	bl	6c00 <pthread_setspecific@plt>
    d94c:	cbz	w0, d9ac <__hwasan_thread_exit@@Base+0x14c>
    d950:	sxtw	x4, w0
    d954:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d958:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d95c:	add	x0, x0, #0x5f6
    d960:	add	x2, x2, #0x824
    d964:	mov	w1, #0x137                 	// #311
    d968:	mov	x3, xzr
    d96c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    d970:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d974:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    d978:	ldr	x8, [x8, #3992]
    d97c:	mrs	x9, tpidr_el0
    d980:	ldr	x10, [x0, #16]
    d984:	ldr	x8, [x9, x8]
    d988:	neg	x9, x10, lsl #1
    d98c:	and	x8, x8, x9
    d990:	and	x8, x8, #0xfffffffffffffe
    d994:	adds	x19, x8, x10
    d998:	b.eq	d9ac <__hwasan_thread_exit@@Base+0x14c>  // b.none
    d99c:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    d9a0:	mov	x1, x19
    d9a4:	ldp	x30, x19, [sp], #16
    d9a8:	b	dd78 <__hwasan_tag_mismatch4@@Base+0x1a0>
    d9ac:	ldp	x30, x19, [sp], #16
    d9b0:	ret
    d9b4:	str	x30, [sp, #-16]!
    d9b8:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d9bc:	ldrb	w8, [x8, #2664]
    d9c0:	cmp	w8, #0x1
    d9c4:	b.eq	d9f0 <__hwasan_thread_exit@@Base+0x190>  // b.none
    d9c8:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
    d9cc:	add	x0, x0, #0xa68
    d9d0:	mov	w8, #0x1                   	// #1
    d9d4:	adrp	x1, d000 <__interceptor_fork@@Base+0xe0>
    d9d8:	strb	w8, [x0], #4
    d9dc:	add	x1, x1, #0x92c
    d9e0:	bl	6d40 <pthread_key_create@plt>
    d9e4:	cbnz	w0, da10 <__hwasan_thread_exit@@Base+0x1b0>
    d9e8:	ldr	x30, [sp], #16
    d9ec:	ret
    d9f0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d9f4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    d9f8:	add	x0, x0, #0x5f6
    d9fc:	add	x2, x2, #0x868
    da00:	mov	w1, #0x13e                 	// #318
    da04:	mov	x3, xzr
    da08:	mov	x4, xzr
    da0c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    da10:	sxtw	x4, w0
    da14:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    da18:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    da1c:	add	x0, x0, #0x5f6
    da20:	add	x2, x2, #0x883
    da24:	mov	w1, #0x140                 	// #320
    da28:	mov	x3, xzr
    da2c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    da30:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    da34:	ldr	x8, [x8, #3992]
    da38:	mrs	x9, tpidr_el0
    da3c:	add	x0, x9, x8
    da40:	ret
    da44:	ret
    da48:	sub	sp, sp, #0xa0
    da4c:	stp	x30, x25, [sp, #96]
    da50:	stp	x24, x23, [sp, #112]
    da54:	stp	x22, x21, [sp, #128]
    da58:	stp	x20, x19, [sp, #144]
    da5c:	mov	x19, x2
    da60:	cmp	w0, #0x5
    da64:	mov	x20, x1
    da68:	b.ne	db5c <__hwasan_thread_exit@@Base+0x2fc>  // b.any
    da6c:	ldr	x8, [x20, #16]
    da70:	ldr	w8, [x8]
    da74:	and	w9, w8, #0x1fe000
    da78:	cmp	w9, #0x12, lsl #12
    da7c:	b.ne	db5c <__hwasan_thread_exit@@Base+0x2fc>  // b.any
    da80:	ldr	x21, [x19, #184]
    da84:	ubfx	x9, x8, #5, #4
    da88:	cmp	w9, #0x5
    da8c:	b.cs	db4c <__hwasan_thread_exit@@Base+0x2ec>  // b.hs, b.nlast
    da90:	mov	w10, #0x1                   	// #1
    da94:	lsl	x22, x10, x9
    da98:	ubfx	w23, w8, #9, #1
    da9c:	add	x0, sp, #0x18
    daa0:	ubfx	w24, w8, #10, #1
    daa4:	eor	w25, w23, #0x1
    daa8:	stp	x20, x19, [sp, #24]
    daac:	bl	1c204 <__sanitizer_set_report_fd@@Base+0x5bc0>
    dab0:	str	x0, [sp, #40]
    dab4:	add	x0, sp, #0x18
    dab8:	bl	1c210 <__sanitizer_set_report_fd@@Base+0x5bcc>
    dabc:	and	w8, w0, #0x1
    dac0:	add	x0, sp, #0x18
    dac4:	strb	w8, [sp, #72]
    dac8:	bl	1adf4 <__sanitizer_set_report_fd@@Base+0x47b0>
    dacc:	str	w0, [sp, #76]
    dad0:	add	x0, sp, #0x18
    dad4:	bl	1ae40 <__sanitizer_set_report_fd@@Base+0x47fc>
    dad8:	and	w8, w0, #0x1
    dadc:	add	x0, sp, #0x18
    dae0:	strb	w8, [sp, #80]
    dae4:	bl	1ae6c <__sanitizer_set_report_fd@@Base+0x4828>
    dae8:	ldr	w8, [sp, #88]
    daec:	ldrb	w9, [sp, #92]
    daf0:	ldr	x0, [sp, #48]
    daf4:	stp	x21, x22, [sp]
    daf8:	strb	w23, [sp, #16]
    dafc:	strb	w25, [sp, #17]
    db00:	strb	w24, [sp, #18]
    db04:	stur	w8, [sp, #19]
    db08:	strb	w9, [sp, #23]
    db0c:	bl	242a8 <__sanitizer_cov_pcs_init@@Base+0x1074>
    db10:	ldr	x2, [sp, #64]
    db14:	mov	x1, x0
    db18:	mov	x0, sp
    db1c:	mov	x3, x19
    db20:	mov	x4, xzr
    db24:	bl	dc40 <__hwasan_tag_mismatch4@@Base+0x68>
    db28:	ldr	x8, [x19, #440]
    db2c:	add	x8, x8, #0x4
    db30:	str	x8, [x19, #440]
    db34:	ldp	x20, x19, [sp, #144]
    db38:	ldp	x22, x21, [sp, #128]
    db3c:	ldp	x24, x23, [sp, #112]
    db40:	ldp	x30, x25, [sp, #96]
    db44:	add	sp, sp, #0xa0
    db48:	ret
    db4c:	cmp	w9, #0xf
    db50:	b.ne	db5c <__hwasan_thread_exit@@Base+0x2fc>  // b.any
    db54:	ldr	x22, [x19, #192]
    db58:	b	da98 <__hwasan_thread_exit@@Base+0x238>
    db5c:	bl	19cc4 <__sanitizer_set_report_fd@@Base+0x3680>
    db60:	mov	x2, x0
    db64:	mov	x0, x20
    db68:	mov	x1, x19
    db6c:	ldp	x20, x19, [sp, #144]
    db70:	ldp	x22, x21, [sp, #128]
    db74:	ldp	x24, x23, [sp, #112]
    db78:	ldp	x30, x25, [sp, #96]
    db7c:	adrp	x3, d000 <__interceptor_fork@@Base+0xe0>
    db80:	add	x3, x3, #0xb90
    db84:	mov	x4, xzr
    db88:	add	sp, sp, #0xa0
    db8c:	b	28e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41f0>
    db90:	str	x30, [sp, #-32]!
    db94:	stp	x20, x19, [sp, #16]
    db98:	mov	x19, x0
    db9c:	ldr	x0, [x0, #24]
    dba0:	mov	x20, x2
    dba4:	bl	242a8 <__sanitizer_cov_pcs_init@@Base+0x1074>
    dba8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    dbac:	ldr	x2, [x19, #40]
    dbb0:	ldr	x3, [x19, #8]
    dbb4:	ldr	x8, [x8, #4056]
    dbb8:	mov	x1, x0
    dbbc:	mov	x0, x20
    dbc0:	mov	w5, #0x100                 	// #256
    dbc4:	ldrb	w4, [x8, #33]
    dbc8:	str	x2, [x20, #2064]
    dbcc:	ldp	x20, x19, [sp, #16]
    dbd0:	ldr	x30, [sp], #32
    dbd4:	b	704c <__sanitizer_print_memory_profile@plt+0x1ec>

000000000000dbd8 <__hwasan_tag_mismatch4@@Base>:
    dbd8:	sub	sp, sp, #0x30
    dbdc:	stp	x29, x30, [sp, #32]
    dbe0:	add	x29, sp, #0x20
    dbe4:	and	x9, x1, #0xf
    dbe8:	mov	w10, #0x1                   	// #1
    dbec:	ldur	w11, [x29, #-8]
    dbf0:	ldurb	w12, [x29, #-4]
    dbf4:	and	w8, w1, #0xff
    dbf8:	lsl	w10, w10, w9
    dbfc:	cmp	x9, #0xf
    dc00:	ubfx	w9, w8, #4, #1
    dc04:	csel	x10, x3, x10, eq  // eq = none
    dc08:	mov	x4, x2
    dc0c:	ubfx	w8, w8, #5, #1
    dc10:	eor	w13, w9, #0x1
    dc14:	stp	x0, x10, [sp]
    dc18:	mov	x0, sp
    dc1c:	mov	x1, x30
    dc20:	mov	x2, x29
    dc24:	mov	x3, xzr
    dc28:	strb	w9, [sp, #16]
    dc2c:	strb	w8, [sp, #18]
    dc30:	strb	w13, [sp, #17]
    dc34:	stur	w11, [sp, #19]
    dc38:	strb	w12, [sp, #23]
    dc3c:	bl	dc40 <__hwasan_tag_mismatch4@@Base+0x68>
    dc40:	sub	sp, sp, #0x60
    dc44:	stp	xzr, x30, [sp, #24]
    dc48:	stp	x24, x23, [sp, #48]
    dc4c:	stp	x22, x21, [sp, #64]
    dc50:	stp	x20, x19, [sp, #80]
    dc54:	mov	x23, x1
    dc58:	mov	x20, x0
    dc5c:	add	x0, sp, #0x8
    dc60:	mov	w1, #0x1                   	// #1
    dc64:	mov	x19, x4
    dc68:	mov	x21, x3
    dc6c:	mov	x22, x2
    dc70:	stp	xzr, xzr, [sp, #8]
    dc74:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
    dc78:	ldr	x8, [sp, #24]
    dc7c:	cbnz	x8, dcc4 <__hwasan_tag_mismatch4@@Base+0xec>
    dc80:	ldr	x8, [sp, #16]
    dc84:	cmp	x8, #0x817
    dc88:	b.hi	dca0 <__hwasan_tag_mismatch4@@Base+0xc8>  // b.pmore
    dc8c:	add	x0, sp, #0x8
    dc90:	mov	w1, #0x1                   	// #1
    dc94:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
    dc98:	ldr	x8, [sp, #24]
    dc9c:	b	dca4 <__hwasan_tag_mismatch4@@Base+0xcc>
    dca0:	mov	x8, xzr
    dca4:	ldr	x9, [sp, #8]
    dca8:	mov	w11, #0x1                   	// #1
    dcac:	mov	w10, #0x818                 	// #2072
    dcb0:	sub	x11, x11, x8
    dcb4:	madd	x0, x8, x10, x9
    dcb8:	mul	x2, x11, x10
    dcbc:	mov	w1, wzr
    dcc0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    dcc4:	ldr	x24, [sp, #8]
    dcc8:	mov	w8, #0x1                   	// #1
    dccc:	str	x8, [sp, #24]
    dcd0:	mov	w5, #0x100                 	// #256
    dcd4:	add	x8, x24, #0x10
    dcd8:	stp	x8, xzr, [x24]
    dcdc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    dce0:	ldr	x8, [x8, #4056]
    dce4:	mov	x0, x24
    dce8:	mov	x1, x23
    dcec:	mov	x2, x22
    dcf0:	ldrb	w4, [x8, #33]
    dcf4:	mov	x3, x21
    dcf8:	str	x22, [x24, #2064]
    dcfc:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
    dd00:	cbz	x19, dd24 <__hwasan_tag_mismatch4@@Base+0x14c>
    dd04:	ldr	x8, [x24]
    dd08:	cbz	x8, dd24 <__hwasan_tag_mismatch4@@Base+0x14c>
    dd0c:	ldr	w9, [x24, #8]
    dd10:	cbz	w9, dd24 <__hwasan_tag_mismatch4@@Base+0x14c>
    dd14:	add	x8, x8, #0x8
    dd18:	sub	w9, w9, #0x1
    dd1c:	str	x8, [x24]
    dd20:	str	w9, [x24, #8]
    dd24:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    dd28:	ldrb	w8, [x0, #4]
    dd2c:	cbz	w8, dd38 <__hwasan_tag_mismatch4@@Base+0x160>
    dd30:	mov	w4, #0x1                   	// #1
    dd34:	b	dd44 <__hwasan_tag_mismatch4@@Base+0x16c>
    dd38:	ldrb	w8, [x20, #18]
    dd3c:	cmp	w8, #0x0
    dd40:	cset	w4, eq  // eq = none
    dd44:	ldp	x1, x2, [x20]
    dd48:	ldrb	w3, [x20, #16]
    dd4c:	mov	x0, x24
    dd50:	mov	x5, x19
    dd54:	bl	10500 <__hwasan_memmove@@Base+0x2380>
    dd58:	ldp	x0, x1, [sp, #8]
    dd5c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    dd60:	ldp	x20, x19, [sp, #80]
    dd64:	ldp	x22, x21, [sp, #64]
    dd68:	ldp	x24, x23, [sp, #48]
    dd6c:	ldr	x30, [sp, #32]
    dd70:	add	sp, sp, #0x60
    dd74:	ret
    dd78:	str	x30, [sp, #-32]!
    dd7c:	stp	x20, x19, [sp, #16]
    dd80:	mov	x20, x1
    dd84:	mov	x19, x0
    dd88:	add	x0, x0, #0x48
    dd8c:	mov	w8, #0x1                   	// #1
    dd90:	ldaxrb	w9, [x0]
    dd94:	stlxrb	w10, w8, [x0]
    dd98:	cbnz	w10, dd90 <__hwasan_tag_mismatch4@@Base+0x1b8>
    dd9c:	cbz	w9, dda4 <__hwasan_tag_mismatch4@@Base+0x1cc>
    dda0:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    dda4:	ldp	x8, x9, [x19, #56]
    dda8:	mov	x0, x20
    ddac:	sub	x8, x8, #0x1
    ddb0:	str	x8, [x19, #56]
    ddb4:	ldp	x8, x10, [x20, #8]
    ddb8:	sub	x8, x10, x8
    ddbc:	add	x8, x8, x9
    ddc0:	str	x8, [x19, #64]
    ddc4:	dmb	ish
    ddc8:	strb	wzr, [x19, #72]
    ddcc:	bl	11104 <__hwasan_tag_mismatch_v2@@Base+0x4b4>
    ddd0:	add	x0, x19, #0x30
    ddd4:	mov	w8, #0x1                   	// #1
    ddd8:	ldaxrb	w9, [x0]
    dddc:	stlxrb	w10, w8, [x0]
    dde0:	cbnz	w10, ddd8 <__hwasan_tag_mismatch4@@Base+0x200>
    dde4:	cbz	w9, ddec <__hwasan_tag_mismatch4@@Base+0x214>
    dde8:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    ddec:	add	x9, x19, #0x28
    ddf0:	mov	x8, x9
    ddf4:	ldr	x9, [x9]
    ddf8:	cmp	x9, x20
    ddfc:	add	x9, x9, #0xa68
    de00:	b.ne	ddf0 <__hwasan_tag_mismatch4@@Base+0x218>  // b.any
    de04:	cbz	x20, de40 <__hwasan_tag_mismatch4@@Base+0x268>
    de08:	ldr	x9, [x20, #2664]
    de0c:	str	x9, [x8]
    de10:	ldr	x8, [x19, #32]
    de14:	str	x8, [x20, #2664]
    de18:	ldp	x8, x9, [x19, #16]
    de1c:	str	x20, [x19, #32]
    de20:	sub	x0, x20, x8
    de24:	add	x1, x0, x9
    de28:	bl	210ec <__sanitizer_sandbox_on_notify@@Base+0xa6c>
    de2c:	dmb	ish
    de30:	strb	wzr, [x19, #48]
    de34:	ldp	x20, x19, [sp, #16]
    de38:	ldr	x30, [sp], #32
    de3c:	ret
    de40:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    de44:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    de48:	add	x0, x0, #0x154
    de4c:	add	x2, x2, #0xaa3
    de50:	mov	w1, #0x59                  	// #89
    de54:	mov	x3, xzr
    de58:	mov	x4, xzr
    de5c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    de60:	stp	x30, x21, [sp, #-32]!
    de64:	stp	x20, x19, [sp, #16]
    de68:	cbz	x1, df00 <__hwasan_tag_mismatch4@@Base+0x328>
    de6c:	ldr	x3, [x0, #16]
    de70:	mov	x20, x1
    de74:	mov	x19, x0
    de78:	cmp	x3, x1
    de7c:	b.hi	df20 <__hwasan_tag_mismatch4@@Base+0x348>  // b.pmore
    de80:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    de84:	ldr	x21, [x21, #4016]
    de88:	ldr	x0, [x21]
    de8c:	cbnz	x0, de98 <__hwasan_tag_mismatch4@@Base+0x2c0>
    de90:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    de94:	str	x0, [x21]
    de98:	sub	x8, x0, #0x1
    de9c:	tst	x0, x8
    dea0:	b.ne	df3c <__hwasan_tag_mismatch4@@Base+0x364>  // b.any
    dea4:	mov	w8, #0x818                 	// #2072
    dea8:	mul	x8, x20, x8
    deac:	add	x8, x8, x0
    deb0:	sub	x8, x8, #0x1
    deb4:	neg	x9, x0
    deb8:	and	x20, x8, x9
    debc:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    dec0:	add	x1, x1, #0x950
    dec4:	mov	x0, x20
    dec8:	mov	w2, wzr
    decc:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
    ded0:	ldr	x8, [x19, #16]
    ded4:	ldr	x1, [x19]
    ded8:	mov	w9, #0x818                 	// #2072
    dedc:	mov	x21, x0
    dee0:	mul	x2, x8, x9
    dee4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
    dee8:	ldp	x0, x1, [x19]
    deec:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    def0:	stp	x21, x20, [x19]
    def4:	ldp	x20, x19, [sp, #16]
    def8:	ldp	x30, x21, [sp], #32
    defc:	ret
    df00:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    df04:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    df08:	add	x0, x0, #0x8be
    df0c:	add	x2, x2, #0x919
    df10:	mov	w1, #0x20b                 	// #523
    df14:	mov	x3, xzr
    df18:	mov	x4, xzr
    df1c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    df20:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    df24:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    df28:	add	x0, x0, #0x8be
    df2c:	add	x2, x2, #0x932
    df30:	mov	w1, #0x20c                 	// #524
    df34:	mov	x4, x20
    df38:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    df3c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    df40:	add	x0, x0, #0x20f
    df44:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    df48:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000000df4c <__hwasan_memset@@Base>:
    df4c:	mov	w8, w1
    df50:	cbz	x2, dff4 <__hwasan_memset@@Base+0xa8>
    df54:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    df58:	ldr	x9, [x9, #3840]
    df5c:	ldr	x10, [x9]
    df60:	and	x9, x0, #0xffffffffffffff
    df64:	add	x12, x9, x2
    df68:	add	x11, x10, x9, lsr #4
    df6c:	add	x10, x10, x12, lsr #4
    df70:	cmp	x11, x10
    df74:	b.cs	dfac <__hwasan_memset@@Base+0x60>  // b.hs, b.nlast
    df78:	lsr	x12, x0, #56
    df7c:	ldrb	w13, [x11]
    df80:	cmp	w13, w12
    df84:	b.ne	df98 <__hwasan_memset@@Base+0x4c>  // b.any
    df88:	add	x11, x11, #0x1
    df8c:	cmp	x10, x11
    df90:	b.ne	df7c <__hwasan_memset@@Base+0x30>  // b.any
    df94:	b	dfac <__hwasan_memset@@Base+0x60>
    df98:	mov	x1, x2
    df9c:	brk	#0x93f
    dfa0:	add	x11, x11, #0x1
    dfa4:	cmp	x10, x11
    dfa8:	b.ne	df7c <__hwasan_memset@@Base+0x30>  // b.any
    dfac:	add	x11, x0, x2
    dfb0:	ands	x12, x11, #0xf
    dfb4:	b.eq	dfe8 <__hwasan_memset@@Base+0x9c>  // b.none
    dfb8:	ldrb	w13, [x10]
    dfbc:	lsr	x10, x11, #56
    dfc0:	cmp	w13, w10
    dfc4:	b.eq	dfe8 <__hwasan_memset@@Base+0x9c>  // b.none
    dfc8:	cmp	w13, #0xf
    dfcc:	b.hi	e004 <__hwasan_memset@@Base+0xb8>  // b.pmore
    dfd0:	cmp	x12, x13
    dfd4:	b.hi	e004 <__hwasan_memset@@Base+0xb8>  // b.pmore
    dfd8:	orr	x11, x11, #0xf
    dfdc:	ldrb	w11, [x11]
    dfe0:	cmp	w11, w10
    dfe4:	b.ne	e004 <__hwasan_memset@@Base+0xb8>  // b.any
    dfe8:	mov	x0, x9
    dfec:	mov	w1, w8
    dff0:	b	6af0 <memset@plt>
    dff4:	and	x9, x0, #0xffffffffffffff
    dff8:	mov	x0, x9
    dffc:	mov	w1, w8
    e000:	b	6af0 <memset@plt>
    e004:	mov	x1, x2
    e008:	brk	#0x93f
    e00c:	mov	x0, x9
    e010:	mov	w1, w8
    e014:	b	6af0 <memset@plt>

000000000000e018 <__hwasan_memcpy@@Base>:
    e018:	mov	x8, x1
    e01c:	cbz	x2, e158 <__hwasan_memcpy@@Base+0x140>
    e020:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e024:	ldr	x10, [x10, #3840]
    e028:	and	x9, x0, #0xffffffffffffff
    e02c:	add	x13, x9, x2
    e030:	ldr	x11, [x10]
    e034:	add	x12, x11, x9, lsr #4
    e038:	add	x11, x11, x13, lsr #4
    e03c:	cmp	x12, x11
    e040:	b.cs	e078 <__hwasan_memcpy@@Base+0x60>  // b.hs, b.nlast
    e044:	lsr	x13, x0, #56
    e048:	ldrb	w14, [x12]
    e04c:	cmp	w14, w13
    e050:	b.ne	e064 <__hwasan_memcpy@@Base+0x4c>  // b.any
    e054:	add	x12, x12, #0x1
    e058:	cmp	x11, x12
    e05c:	b.ne	e048 <__hwasan_memcpy@@Base+0x30>  // b.any
    e060:	b	e078 <__hwasan_memcpy@@Base+0x60>
    e064:	mov	x1, x2
    e068:	brk	#0x93f
    e06c:	add	x12, x12, #0x1
    e070:	cmp	x11, x12
    e074:	b.ne	e048 <__hwasan_memcpy@@Base+0x30>  // b.any
    e078:	add	x12, x0, x2
    e07c:	ands	x13, x12, #0xf
    e080:	b.eq	e0bc <__hwasan_memcpy@@Base+0xa4>  // b.none
    e084:	ldrb	w14, [x11]
    e088:	lsr	x11, x12, #56
    e08c:	cmp	w14, w11
    e090:	b.eq	e0bc <__hwasan_memcpy@@Base+0xa4>  // b.none
    e094:	cmp	w14, #0xf
    e098:	b.hi	e0b4 <__hwasan_memcpy@@Base+0x9c>  // b.pmore
    e09c:	cmp	x13, x14
    e0a0:	b.hi	e0b4 <__hwasan_memcpy@@Base+0x9c>  // b.pmore
    e0a4:	orr	x12, x12, #0xf
    e0a8:	ldrb	w12, [x12]
    e0ac:	cmp	w12, w11
    e0b0:	b.eq	e0bc <__hwasan_memcpy@@Base+0xa4>  // b.none
    e0b4:	mov	x1, x2
    e0b8:	brk	#0x93f
    e0bc:	ldr	x10, [x10]
    e0c0:	and	x11, x8, #0xffffffffffffff
    e0c4:	add	x12, x11, x2
    e0c8:	add	x11, x10, x11, lsr #4
    e0cc:	add	x10, x10, x12, lsr #4
    e0d0:	cmp	x11, x10
    e0d4:	b.cs	e110 <__hwasan_memcpy@@Base+0xf8>  // b.hs, b.nlast
    e0d8:	lsr	x12, x8, #56
    e0dc:	ldrb	w13, [x11]
    e0e0:	cmp	w13, w12
    e0e4:	b.ne	e0f8 <__hwasan_memcpy@@Base+0xe0>  // b.any
    e0e8:	add	x11, x11, #0x1
    e0ec:	cmp	x10, x11
    e0f0:	b.ne	e0dc <__hwasan_memcpy@@Base+0xc4>  // b.any
    e0f4:	b	e110 <__hwasan_memcpy@@Base+0xf8>
    e0f8:	mov	x0, x8
    e0fc:	mov	x1, x2
    e100:	brk	#0x92f
    e104:	add	x11, x11, #0x1
    e108:	cmp	x10, x11
    e10c:	b.ne	e0dc <__hwasan_memcpy@@Base+0xc4>  // b.any
    e110:	add	x11, x8, x2
    e114:	ands	x12, x11, #0xf
    e118:	b.eq	e14c <__hwasan_memcpy@@Base+0x134>  // b.none
    e11c:	ldrb	w13, [x10]
    e120:	lsr	x10, x11, #56
    e124:	cmp	w13, w10
    e128:	b.eq	e14c <__hwasan_memcpy@@Base+0x134>  // b.none
    e12c:	cmp	w13, #0xf
    e130:	b.hi	e168 <__hwasan_memcpy@@Base+0x150>  // b.pmore
    e134:	cmp	x12, x13
    e138:	b.hi	e168 <__hwasan_memcpy@@Base+0x150>  // b.pmore
    e13c:	orr	x11, x11, #0xf
    e140:	ldrb	w11, [x11]
    e144:	cmp	w11, w10
    e148:	b.ne	e168 <__hwasan_memcpy@@Base+0x150>  // b.any
    e14c:	and	x1, x8, #0xffffffffffffff
    e150:	mov	x0, x9
    e154:	b	69d0 <memcpy@plt>
    e158:	and	x9, x0, #0xffffffffffffff
    e15c:	and	x1, x8, #0xffffffffffffff
    e160:	mov	x0, x9
    e164:	b	69d0 <memcpy@plt>
    e168:	mov	x0, x8
    e16c:	mov	x1, x2
    e170:	brk	#0x92f
    e174:	and	x1, x8, #0xffffffffffffff
    e178:	mov	x0, x9
    e17c:	b	69d0 <memcpy@plt>

000000000000e180 <__hwasan_memmove@@Base>:
    e180:	mov	x8, x1
    e184:	cbz	x2, e2c0 <__hwasan_memmove@@Base+0x140>
    e188:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e18c:	ldr	x10, [x10, #3840]
    e190:	and	x9, x0, #0xffffffffffffff
    e194:	add	x13, x9, x2
    e198:	ldr	x11, [x10]
    e19c:	add	x12, x11, x9, lsr #4
    e1a0:	add	x11, x11, x13, lsr #4
    e1a4:	cmp	x12, x11
    e1a8:	b.cs	e1e0 <__hwasan_memmove@@Base+0x60>  // b.hs, b.nlast
    e1ac:	lsr	x13, x0, #56
    e1b0:	ldrb	w14, [x12]
    e1b4:	cmp	w14, w13
    e1b8:	b.ne	e1cc <__hwasan_memmove@@Base+0x4c>  // b.any
    e1bc:	add	x12, x12, #0x1
    e1c0:	cmp	x11, x12
    e1c4:	b.ne	e1b0 <__hwasan_memmove@@Base+0x30>  // b.any
    e1c8:	b	e1e0 <__hwasan_memmove@@Base+0x60>
    e1cc:	mov	x1, x2
    e1d0:	brk	#0x93f
    e1d4:	add	x12, x12, #0x1
    e1d8:	cmp	x11, x12
    e1dc:	b.ne	e1b0 <__hwasan_memmove@@Base+0x30>  // b.any
    e1e0:	add	x12, x0, x2
    e1e4:	ands	x13, x12, #0xf
    e1e8:	b.eq	e224 <__hwasan_memmove@@Base+0xa4>  // b.none
    e1ec:	ldrb	w14, [x11]
    e1f0:	lsr	x11, x12, #56
    e1f4:	cmp	w14, w11
    e1f8:	b.eq	e224 <__hwasan_memmove@@Base+0xa4>  // b.none
    e1fc:	cmp	w14, #0xf
    e200:	b.hi	e21c <__hwasan_memmove@@Base+0x9c>  // b.pmore
    e204:	cmp	x13, x14
    e208:	b.hi	e21c <__hwasan_memmove@@Base+0x9c>  // b.pmore
    e20c:	orr	x12, x12, #0xf
    e210:	ldrb	w12, [x12]
    e214:	cmp	w12, w11
    e218:	b.eq	e224 <__hwasan_memmove@@Base+0xa4>  // b.none
    e21c:	mov	x1, x2
    e220:	brk	#0x93f
    e224:	ldr	x10, [x10]
    e228:	and	x11, x8, #0xffffffffffffff
    e22c:	add	x12, x11, x2
    e230:	add	x11, x10, x11, lsr #4
    e234:	add	x10, x10, x12, lsr #4
    e238:	cmp	x11, x10
    e23c:	b.cs	e278 <__hwasan_memmove@@Base+0xf8>  // b.hs, b.nlast
    e240:	lsr	x12, x8, #56
    e244:	ldrb	w13, [x11]
    e248:	cmp	w13, w12
    e24c:	b.ne	e260 <__hwasan_memmove@@Base+0xe0>  // b.any
    e250:	add	x11, x11, #0x1
    e254:	cmp	x10, x11
    e258:	b.ne	e244 <__hwasan_memmove@@Base+0xc4>  // b.any
    e25c:	b	e278 <__hwasan_memmove@@Base+0xf8>
    e260:	mov	x0, x8
    e264:	mov	x1, x2
    e268:	brk	#0x92f
    e26c:	add	x11, x11, #0x1
    e270:	cmp	x10, x11
    e274:	b.ne	e244 <__hwasan_memmove@@Base+0xc4>  // b.any
    e278:	add	x11, x8, x2
    e27c:	ands	x12, x11, #0xf
    e280:	b.eq	e2b4 <__hwasan_memmove@@Base+0x134>  // b.none
    e284:	ldrb	w13, [x10]
    e288:	lsr	x10, x11, #56
    e28c:	cmp	w13, w10
    e290:	b.eq	e2b4 <__hwasan_memmove@@Base+0x134>  // b.none
    e294:	cmp	w13, #0xf
    e298:	b.hi	e2d0 <__hwasan_memmove@@Base+0x150>  // b.pmore
    e29c:	cmp	x12, x13
    e2a0:	b.hi	e2d0 <__hwasan_memmove@@Base+0x150>  // b.pmore
    e2a4:	orr	x11, x11, #0xf
    e2a8:	ldrb	w11, [x11]
    e2ac:	cmp	w11, w10
    e2b0:	b.ne	e2d0 <__hwasan_memmove@@Base+0x150>  // b.any
    e2b4:	and	x1, x8, #0xffffffffffffff
    e2b8:	mov	x0, x9
    e2bc:	b	6cd0 <memmove@plt>
    e2c0:	and	x9, x0, #0xffffffffffffff
    e2c4:	and	x1, x8, #0xffffffffffffff
    e2c8:	mov	x0, x9
    e2cc:	b	6cd0 <memmove@plt>
    e2d0:	mov	x0, x8
    e2d4:	mov	x1, x2
    e2d8:	brk	#0x92f
    e2dc:	and	x1, x8, #0xffffffffffffff
    e2e0:	mov	x0, x9
    e2e4:	b	6cd0 <memmove@plt>
    e2e8:	str	x30, [sp, #-64]!
    e2ec:	stp	x24, x23, [sp, #16]
    e2f0:	stp	x22, x21, [sp, #32]
    e2f4:	stp	x20, x19, [sp, #48]
    e2f8:	tst	x0, #0xf
    e2fc:	b.ne	e3d8 <__hwasan_memmove@@Base+0x258>  // b.any
    e300:	mov	x22, x1
    e304:	tst	x1, #0xf
    e308:	b.ne	e3f0 <__hwasan_memmove@@Base+0x270>  // b.any
    e30c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e310:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e314:	ldr	x9, [x9, #3840]
    e318:	ldr	x23, [x23, #4016]
    e31c:	mov	w19, w2
    e320:	mov	x20, x0
    e324:	ldr	x21, [x9]
    e328:	ldr	x8, [x23]
    e32c:	cbnz	x8, e33c <__hwasan_memmove@@Base+0x1bc>
    e330:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    e334:	mov	x8, x0
    e338:	str	x0, [x23]
    e33c:	sub	x9, x8, #0x1
    e340:	tst	x8, x9
    e344:	b.ne	e410 <__hwasan_memmove@@Base+0x290>  // b.any
    e348:	add	x0, x21, x20, lsr #4
    e34c:	ands	w21, w19, #0xff
    e350:	lsr	x2, x22, #4
    e354:	b.ne	e388 <__hwasan_memmove@@Base+0x208>  // b.any
    e358:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e35c:	ldr	x10, [x10, #4056]
    e360:	add	x9, x0, x8
    e364:	neg	x8, x8
    e368:	sub	x9, x9, #0x1
    e36c:	ldr	x10, [x10, #104]
    e370:	and	x22, x9, x8
    e374:	add	x24, x0, x2
    e378:	and	x23, x24, x8
    e37c:	add	x8, x10, x22
    e380:	cmp	x23, x8
    e384:	b.cs	e3ac <__hwasan_memmove@@Base+0x22c>  // b.hs, b.nlast
    e388:	mov	w1, w21
    e38c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    e390:	bfi	x20, x19, #56, #8
    e394:	mov	x0, x20
    e398:	ldp	x20, x19, [sp, #48]
    e39c:	ldp	x22, x21, [sp, #32]
    e3a0:	ldp	x24, x23, [sp, #16]
    e3a4:	ldr	x30, [sp], #64
    e3a8:	ret
    e3ac:	sub	x2, x22, x0
    e3b0:	mov	w1, w21
    e3b4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    e3b8:	sub	x2, x24, x23
    e3bc:	mov	x0, x23
    e3c0:	mov	w1, w21
    e3c4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    e3c8:	mov	x0, x22
    e3cc:	mov	x1, x23
    e3d0:	bl	210ec <__sanitizer_sandbox_on_notify@@Base+0xa6c>
    e3d4:	b	e390 <__hwasan_memmove@@Base+0x210>
    e3d8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e3dc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e3e0:	add	x0, x0, #0xac9
    e3e4:	add	x2, x2, #0xb12
    e3e8:	mov	w1, #0x17                  	// #23
    e3ec:	b	e404 <__hwasan_memmove@@Base+0x284>
    e3f0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e3f4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e3f8:	add	x0, x0, #0xac9
    e3fc:	add	x2, x2, #0xb3c
    e400:	mov	w1, #0x18                  	// #24
    e404:	mov	x3, xzr
    e408:	mov	x4, xzr
    e40c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    e410:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    e414:	add	x0, x0, #0x20f
    e418:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
    e41c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
    e420:	add	x9, x0, x1
    e424:	add	x9, x9, #0xf
    e428:	and	x8, x0, #0xfffffffffffffff0
    e42c:	and	x9, x9, #0xfffffffffffffff0
    e430:	sub	x1, x9, x8
    e434:	mov	x0, x8
    e438:	b	e2e8 <__hwasan_memmove@@Base+0x168>
    e43c:	b	10898 <__hwasan_memmove@@Base+0x2718>
    e440:	str	x30, [sp, #-16]!
    e444:	cbz	x0, e4f0 <__hwasan_memmove@@Base+0x370>
    e448:	ldr	x11, [x0]
    e44c:	sub	x8, x11, x0
    e450:	adds	x12, x8, #0x8
    e454:	b.eq	e4f8 <__hwasan_memmove@@Base+0x378>  // b.none
    e458:	ldr	x10, [x0, #8]
    e45c:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e460:	asr	x12, x12, #3
    e464:	movk	x13, #0xaaab
    e468:	sub	x11, x11, x10
    e46c:	asr	x11, x11, #3
    e470:	mov	x9, xzr
    e474:	mov	x8, xzr
    e478:	mul	x3, x12, x13
    e47c:	mul	x11, x11, x13
    e480:	mov	x12, #0xffffffffffffffe8    	// #-24
    e484:	b	e498 <__hwasan_memmove@@Base+0x318>
    e488:	cmp	x13, x3
    e48c:	add	x9, x9, #0x18
    e490:	mov	x8, x13
    e494:	b.cs	e4f8 <__hwasan_memmove@@Base+0x378>  // b.hs, b.nlast
    e498:	cmp	x3, x8
    e49c:	b.eq	e504 <__hwasan_memmove@@Base+0x384>  // b.none
    e4a0:	add	x13, x8, #0x1
    e4a4:	cmp	x13, x11
    e4a8:	csel	x15, x3, xzr, gt
    e4ac:	madd	x14, x15, x12, x10
    e4b0:	add	x16, x14, x9
    e4b4:	ldr	x14, [x16, #24]
    e4b8:	cmp	x14, x1
    e4bc:	b.hi	e488 <__hwasan_memmove@@Base+0x308>  // b.pmore
    e4c0:	ldr	w16, [x16, #40]
    e4c4:	add	x17, x14, x16
    e4c8:	cmp	x17, x1
    e4cc:	b.ls	e488 <__hwasan_memmove@@Base+0x308>  // b.plast
    e4d0:	mov	x11, #0xffffffffffffffe8    	// #-24
    e4d4:	madd	x10, x15, x11, x10
    e4d8:	add	x9, x10, x9
    e4dc:	ldr	x10, [x9, #32]
    e4e0:	ldr	w9, [x9, #44]
    e4e4:	add	x0, x8, #0x1
    e4e8:	stp	x14, x10, [x2]
    e4ec:	stp	w16, w9, [x2, #16]
    e4f0:	ldr	x30, [sp], #16
    e4f4:	ret
    e4f8:	mov	x0, xzr
    e4fc:	ldr	x30, [sp], #16
    e500:	ret
    e504:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e508:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e50c:	add	x0, x0, #0x39f
    e510:	add	x2, x2, #0x4c4
    e514:	mov	w1, #0x38                  	// #56
    e518:	mov	x4, x3
    e51c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    e520:	sub	sp, sp, #0x120
    e524:	stp	x29, x30, [sp, #192]
    e528:	stp	x28, x27, [sp, #208]
    e52c:	stp	x26, x25, [sp, #224]
    e530:	stp	x24, x23, [sp, #240]
    e534:	stp	x22, x21, [sp, #256]
    e538:	stp	x20, x19, [sp, #272]
    e53c:	str	x2, [sp, #48]
    e540:	mov	x20, x0
    e544:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
    e548:	and	x26, x20, #0xffffffffffffff
    e54c:	mov	w19, w0
    e550:	mov	x0, x26
    e554:	bl	9080 <__sanitizer_print_stack_trace@@Base+0x828>
    e558:	stp	x0, x1, [sp, #176]
    e55c:	add	x0, sp, #0xb0
    e560:	bl	8db8 <__sanitizer_print_stack_trace@@Base+0x560>
    e564:	adrp	x21, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    e568:	adrp	x27, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e56c:	adrp	x28, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e570:	add	x21, x21, #0xcf
    e574:	add	x27, x27, #0x1fd
    e578:	add	x28, x28, #0x207
    e57c:	cbz	x0, e600 <__hwasan_memmove@@Base+0x480>
    e580:	mov	x22, x0
    e584:	add	x0, sp, #0xb0
    e588:	bl	8e40 <__sanitizer_print_stack_trace@@Base+0x5e8>
    e58c:	mov	x23, x0
    e590:	add	x0, sp, #0xb0
    e594:	bl	8e50 <__sanitizer_print_stack_trace@@Base+0x5f8>
    e598:	adrp	x8, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e59c:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    e5a0:	add	x8, x8, #0xba3
    e5a4:	add	x9, x9, #0x45d
    e5a8:	tst	w0, #0x1
    e5ac:	add	x0, sp, #0xb0
    e5b0:	csel	x24, x9, x8, ne  // ne = any
    e5b4:	bl	8d90 <__sanitizer_print_stack_trace@@Base+0x538>
    e5b8:	adrp	x8, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e5bc:	adrp	x9, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e5c0:	add	x8, x8, #0xba9
    e5c4:	add	x9, x9, #0xbab
    e5c8:	tst	w0, #0x1
    e5cc:	csel	x5, x9, x8, ne  // ne = any
    e5d0:	tst	w19, #0x1
    e5d4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e5d8:	sub	x7, x26, x22
    e5dc:	add	x3, x23, x22
    e5e0:	csel	x1, x27, x21, ne  // ne = any
    e5e4:	csel	x8, x28, x21, ne  // ne = any
    e5e8:	add	x0, x0, #0xb69
    e5ec:	mov	x2, x22
    e5f0:	mov	x4, x24
    e5f4:	mov	x6, x23
    e5f8:	str	x8, [sp]
    e5fc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e600:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    e604:	ldr	x8, [x8, #3840]
    e608:	mov	x9, xzr
    e60c:	lsr	x13, x20, #56
    e610:	str	x13, [sp, #72]
    e614:	ldr	x8, [x8]
    e618:	add	x10, x8, x26, lsr #4
    e61c:	mov	x24, x10
    e620:	mov	x25, x10
    e624:	b	e638 <__hwasan_memmove@@Base+0x4b8>
    e628:	add	x9, x9, #0x1
    e62c:	cmp	w9, #0x3e8
    e630:	add	x25, x25, #0x1
    e634:	b.eq	e784 <__hwasan_memmove@@Base+0x604>  // b.none
    e638:	ldrb	w11, [x24]
    e63c:	cmp	w11, w13
    e640:	b.eq	e6a0 <__hwasan_memmove@@Base+0x520>  // b.none
    e644:	sub	w11, w11, #0x1
    e648:	cmp	w11, #0xe
    e64c:	b.hi	e664 <__hwasan_memmove@@Base+0x4e4>  // b.pmore
    e650:	sub	x11, x24, x8
    e654:	lsl	x11, x11, #4
    e658:	ldrb	w11, [x11, #15]
    e65c:	cmp	w11, w13
    e660:	b.eq	e6a0 <__hwasan_memmove@@Base+0x520>  // b.none
    e664:	add	x11, x10, x9
    e668:	ldrb	w12, [x11]
    e66c:	sub	x24, x24, #0x1
    e670:	cmp	w12, w13
    e674:	b.eq	e6a4 <__hwasan_memmove@@Base+0x524>  // b.none
    e678:	sub	w12, w12, #0x1
    e67c:	cmp	w12, #0xe
    e680:	b.hi	e628 <__hwasan_memmove@@Base+0x4a8>  // b.pmore
    e684:	sub	x11, x11, x8
    e688:	lsl	x11, x11, #4
    e68c:	ldrb	w11, [x11, #15]
    e690:	cmp	w11, w13
    e694:	b.ne	e628 <__hwasan_memmove@@Base+0x4a8>  // b.any
    e698:	add	x25, x10, x9
    e69c:	b	e6a4 <__hwasan_memmove@@Base+0x524>
    e6a0:	mov	x25, x24
    e6a4:	sub	x8, x25, x8
    e6a8:	lsl	x22, x8, #4
    e6ac:	mov	x0, x22
    e6b0:	bl	9080 <__sanitizer_print_stack_trace@@Base+0x828>
    e6b4:	stp	x0, x1, [sp, #160]
    e6b8:	add	x0, sp, #0xa0
    e6bc:	bl	8d90 <__sanitizer_print_stack_trace@@Base+0x538>
    e6c0:	tbz	w0, #0, e6f8 <__hwasan_memmove@@Base+0x578>
    e6c4:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    e6c8:	tst	w19, #0x1
    e6cc:	add	x8, x8, #0xcf
    e6d0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e6d4:	csel	x1, x27, x8, ne  // ne = any
    e6d8:	add	x0, x0, #0xba0
    e6dc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e6e0:	add	x0, sp, #0xa0
    e6e4:	cmp	x25, x24
    e6e8:	b.eq	e78c <__hwasan_memmove@@Base+0x60c>  // b.none
    e6ec:	bl	8db8 <__sanitizer_print_stack_trace@@Base+0x560>
    e6f0:	sub	x22, x0, x26
    e6f4:	b	e794 <__hwasan_memmove@@Base+0x614>
    e6f8:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
    e6fc:	add	x2, sp, #0x98
    e700:	add	x3, sp, #0x90
    e704:	mov	x1, x22
    e708:	mov	x23, x0
    e70c:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
    e710:	tbz	w0, #0, e784 <__hwasan_memmove@@Base+0x604>
    e714:	add	x0, sp, #0x50
    e718:	bl	255ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x924>
    e71c:	add	x2, sp, #0x50
    e720:	mov	x0, x23
    e724:	mov	x1, x22
    e728:	bl	25e38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11b0>
    e72c:	adrp	x8, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    e730:	adrp	x9, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    e734:	add	x8, x8, #0x724
    e738:	add	x9, x9, #0x762
    e73c:	tbz	w0, #0, e858 <__hwasan_memmove@@Base+0x6d8>
    e740:	ldr	x6, [sp, #128]
    e744:	cbz	x6, e858 <__hwasan_memmove@@Base+0x6d8>
    e748:	ldr	x4, [sp, #136]
    e74c:	ldr	x5, [sp, #120]
    e750:	ldr	x11, [sp, #152]
    e754:	sub	x10, x6, x26
    e758:	add	x7, x4, x6
    e75c:	cmp	x25, x24
    e760:	sub	x12, x26, x7
    e764:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e768:	csel	x2, x12, x10, eq  // eq = none
    e76c:	csel	x3, x9, x8, eq  // eq = none
    e770:	add	x0, x0, #0xbf3
    e774:	mov	x1, x26
    e778:	str	x11, [sp]
    e77c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e780:	b	e874 <__hwasan_memmove@@Base+0x6f4>
    e784:	mov	w25, wzr
    e788:	b	e878 <__hwasan_memmove@@Base+0x6f8>
    e78c:	bl	8df0 <__sanitizer_print_stack_trace@@Base+0x598>
    e790:	sub	x22, x26, x0
    e794:	adrp	x8, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    e798:	adrp	x9, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    e79c:	add	x8, x8, #0x724
    e7a0:	add	x9, x9, #0x762
    e7a4:	cmp	x25, x24
    e7a8:	add	x0, sp, #0xa0
    e7ac:	csel	x23, x9, x8, eq  // eq = none
    e7b0:	bl	8e24 <__sanitizer_print_stack_trace@@Base+0x5cc>
    e7b4:	mov	x24, x0
    e7b8:	add	x0, sp, #0xa0
    e7bc:	bl	8db8 <__sanitizer_print_stack_trace@@Base+0x560>
    e7c0:	mov	x25, x0
    e7c4:	add	x0, sp, #0xa0
    e7c8:	bl	8df0 <__sanitizer_print_stack_trace@@Base+0x598>
    e7cc:	mov	x6, x0
    e7d0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e7d4:	add	x0, x0, #0xbb5
    e7d8:	mov	x1, x26
    e7dc:	mov	x2, x22
    e7e0:	mov	x3, x23
    e7e4:	mov	x4, x24
    e7e8:	mov	x5, x25
    e7ec:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e7f0:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e7f4:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    e7f8:	adrp	x22, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e7fc:	add	x8, x8, #0x210
    e800:	tst	w19, #0x1
    e804:	add	x9, x9, #0xcf
    e808:	add	x22, x22, #0xba0
    e80c:	csel	x1, x8, x9, ne  // ne = any
    e810:	mov	x0, x22
    e814:	csel	x23, x28, x9, ne  // ne = any
    e818:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e81c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e820:	add	x0, x0, #0x53b
    e824:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e828:	mov	x0, x22
    e82c:	mov	x1, x23
    e830:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e834:	add	x0, sp, #0xa0
    e838:	bl	8e34 <__sanitizer_print_stack_trace@@Base+0x5dc>
    e83c:	cbz	w0, ef2c <__hwasan_memmove@@Base+0xdac>
    e840:	bl	2385c <__sanitizer_cov_pcs_init@@Base+0x628>
    e844:	cbz	x0, ef4c <__hwasan_memmove@@Base+0xdcc>
    e848:	stp	x0, x1, [sp, #80]
    e84c:	add	x0, sp, #0x50
    e850:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    e854:	b	e874 <__hwasan_memmove@@Base+0x6f4>
    e858:	ldp	x4, x3, [sp, #144]
    e85c:	cmp	x25, x24
    e860:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e864:	csel	x2, x9, x8, eq  // eq = none
    e868:	add	x0, x0, #0xc43
    e86c:	mov	x1, x26
    e870:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e874:	mov	w25, #0x1                   	// #1
    e878:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    e87c:	mov	x22, x0
    e880:	add	x21, x0, #0x30
    e884:	mov	w8, #0x1                   	// #1
    e888:	ldaxrb	w9, [x21]
    e88c:	stlxrb	w10, w8, [x21]
    e890:	cbnz	w10, e888 <__hwasan_memmove@@Base+0x708>
    e894:	cbz	w9, e8a0 <__hwasan_memmove@@Base+0x720>
    e898:	mov	x0, x21
    e89c:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    e8a0:	ldr	x24, [x22, #40]
    e8a4:	str	x21, [sp, #16]
    e8a8:	cbz	x24, ee48 <__hwasan_memmove@@Base+0xcc8>
    e8ac:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e8b0:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    e8b4:	tst	w19, #0x1
    e8b8:	add	x8, x8, #0x210
    e8bc:	add	x9, x9, #0xcf
    e8c0:	csel	x10, x27, x9, ne  // ne = any
    e8c4:	csel	x8, x8, x9, ne  // ne = any
    e8c8:	mov	x13, #0xffffffffffffffe8    	// #-24
    e8cc:	stp	x8, x10, [sp, #32]
    e8d0:	csel	x8, x28, x9, ne  // ne = any
    e8d4:	str	x8, [sp, #64]
    e8d8:	str	x26, [sp, #24]
    e8dc:	b	e900 <__hwasan_memmove@@Base+0x780>
    e8e0:	ldp	x0, x1, [sp, #80]
    e8e4:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    e8e8:	ldr	w25, [sp, #60]
    e8ec:	ldr	x26, [sp, #24]
    e8f0:	mov	x13, #0xffffffffffffffe8    	// #-24
    e8f4:	add	w25, w25, #0x1
    e8f8:	ldr	x24, [x24, #2664]
    e8fc:	cbz	x24, ee48 <__hwasan_memmove@@Base+0xcc8>
    e900:	ldr	x8, [x24, #2648]
    e904:	cbz	x8, ea90 <__hwasan_memmove@@Base+0x910>
    e908:	ldr	x9, [x8]
    e90c:	sub	x10, x9, x8
    e910:	adds	x10, x10, #0x8
    e914:	b.eq	ea90 <__hwasan_memmove@@Base+0x910>  // b.none
    e918:	ldr	x8, [x8, #8]
    e91c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    e920:	asr	x10, x10, #3
    e924:	movk	x11, #0xaaab
    e928:	sub	x9, x9, x8
    e92c:	asr	x9, x9, #3
    e930:	mov	x21, xzr
    e934:	mul	x3, x10, x11
    e938:	mul	x9, x9, x11
    e93c:	b	e950 <__hwasan_memmove@@Base+0x7d0>
    e940:	cmp	x10, x3
    e944:	add	x8, x8, #0x18
    e948:	mov	x21, x10
    e94c:	b.cs	ea90 <__hwasan_memmove@@Base+0x910>  // b.hs, b.nlast
    e950:	cmp	x3, x21
    e954:	b.eq	eef0 <__hwasan_memmove@@Base+0xd70>  // b.none
    e958:	add	x10, x21, #0x1
    e95c:	cmp	x10, x9
    e960:	csel	x11, x3, xzr, gt
    e964:	madd	x11, x11, x13, x8
    e968:	ldr	x23, [x11, #24]
    e96c:	cmp	x23, x20
    e970:	b.hi	e940 <__hwasan_memmove@@Base+0x7c0>  // b.pmore
    e974:	ldr	w27, [x11, #40]
    e978:	add	x12, x23, x27
    e97c:	cmp	x12, x20
    e980:	b.ls	e940 <__hwasan_memmove@@Base+0x7c0>  // b.plast
    e984:	ldr	x1, [sp, #40]
    e988:	ldp	w22, w19, [x11, #32]
    e98c:	adrp	x28, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    e990:	add	x28, x28, #0xba0
    e994:	mov	x0, x28
    e998:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e99c:	and	x4, x23, #0xffffffffffffff
    e9a0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e9a4:	sub	x2, x26, x4
    e9a8:	add	x5, x4, x27
    e9ac:	add	x0, x0, #0x4d9
    e9b0:	mov	x1, x26
    e9b4:	mov	w3, w27
    e9b8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e9bc:	ldr	x1, [sp, #32]
    e9c0:	mov	x0, x28
    e9c4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e9c8:	ldr	x1, [x24, #2672]
    e9cc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    e9d0:	add	x0, x0, #0x514
    e9d4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e9d8:	ldr	x1, [sp, #64]
    e9dc:	mov	x0, x28
    e9e0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    e9e4:	cbz	w19, ef2c <__hwasan_memmove@@Base+0xdac>
    e9e8:	mov	w0, w19
    e9ec:	bl	2385c <__sanitizer_cov_pcs_init@@Base+0x628>
    e9f0:	cbz	x0, ef4c <__hwasan_memmove@@Base+0xdcc>
    e9f4:	stp	x0, x1, [sp, #80]
    e9f8:	add	x0, sp, #0x50
    e9fc:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    ea00:	ldr	x1, [sp, #32]
    ea04:	adrp	x19, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ea08:	add	x19, x19, #0xba0
    ea0c:	mov	x0, x19
    ea10:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ea14:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ea18:	add	x0, x0, #0x530
    ea1c:	mov	x1, x24
    ea20:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ea24:	ldr	x1, [sp, #64]
    ea28:	mov	x0, x19
    ea2c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ea30:	cbz	w22, ef2c <__hwasan_memmove@@Base+0xdac>
    ea34:	mov	w0, w22
    ea38:	bl	2385c <__sanitizer_cov_pcs_init@@Base+0x628>
    ea3c:	cbz	x0, ef4c <__hwasan_memmove@@Base+0xdcc>
    ea40:	stp	x0, x1, [sp, #80]
    ea44:	add	x0, sp, #0x50
    ea48:	add	x19, x21, #0x1
    ea4c:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    ea50:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    ea54:	ldr	w2, [x0, #28]
    ea58:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ea5c:	add	x0, x0, #0x54c
    ea60:	mov	x1, x19
    ea64:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ea68:	ldrb	w8, [x24, #2684]
    ea6c:	cbnz	w8, ea88 <__hwasan_memmove@@Base+0x908>
    ea70:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ea74:	mov	w8, #0x1                   	// #1
    ea78:	mov	x0, x24
    ea7c:	add	x1, x1, #0x37e
    ea80:	strb	w8, [x24, #2684]
    ea84:	bl	11090 <__hwasan_tag_mismatch_v2@@Base+0x440>
    ea88:	add	w25, w25, #0x1
    ea8c:	mov	x13, #0xffffffffffffffe8    	// #-24
    ea90:	ldr	x8, [x24, #16]
    ea94:	cmp	x8, x26
    ea98:	b.hi	e8f8 <__hwasan_memmove@@Base+0x778>  // b.pmore
    ea9c:	ldr	x8, [x24, #8]
    eaa0:	cmp	x8, x26
    eaa4:	b.ls	e8f8 <__hwasan_memmove@@Base+0x778>  // b.plast
    eaa8:	ldr	x1, [sp, #40]
    eaac:	adrp	x19, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    eab0:	add	x19, x19, #0xba0
    eab4:	mov	x0, x19
    eab8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    eabc:	ldr	x2, [x24, #2672]
    eac0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    eac4:	add	x0, x0, #0x577
    eac8:	mov	x1, x26
    eacc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ead0:	ldr	x1, [sp, #64]
    ead4:	mov	x0, x19
    ead8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    eadc:	ldrb	w8, [x24, #2684]
    eae0:	cbz	w8, eaf8 <__hwasan_memmove@@Base+0x978>
    eae4:	str	w25, [sp, #60]
    eae8:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    eaec:	ldr	x8, [sp, #48]
    eaf0:	cbnz	x8, eb20 <__hwasan_memmove@@Base+0x9a0>
    eaf4:	b	eb2c <__hwasan_memmove@@Base+0x9ac>
    eaf8:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    eafc:	mov	w8, #0x1                   	// #1
    eb00:	mov	x0, x24
    eb04:	add	x1, x1, #0x37e
    eb08:	strb	w8, [x24, #2684]
    eb0c:	bl	11090 <__hwasan_tag_mismatch_v2@@Base+0x440>
    eb10:	str	w25, [sp, #60]
    eb14:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
    eb18:	ldr	x8, [sp, #48]
    eb1c:	cbz	x8, eb2c <__hwasan_memmove@@Base+0x9ac>
    eb20:	ldr	x27, [sp, #48]
    eb24:	cmp	x0, x24
    eb28:	b.eq	eb30 <__hwasan_memmove@@Base+0x9b0>  // b.none
    eb2c:	ldr	x27, [x24, #2656]
    eb30:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    eb34:	ldr	x8, [x27]
    eb38:	ldrsw	x10, [x0, #36]
    eb3c:	lsr	x9, x8, #56
    eb40:	lsl	x4, x9, #9
    eb44:	cmp	x4, x10
    eb48:	csel	x28, x10, x4, hi  // hi = pmore
    eb4c:	cbz	x28, eca8 <__hwasan_memmove@@Base+0xb28>
    eb50:	mov	x22, xzr
    eb54:	cbz	x9, ef6c <__hwasan_memmove@@Base+0xdec>
    eb58:	mov	w21, wzr
    eb5c:	neg	x9, x9, lsl #12
    eb60:	and	x10, x8, #0xffffffffffffff
    eb64:	and	x8, x9, x8
    eb68:	and	x8, x8, #0xfffffffffff000
    eb6c:	sub	x9, x10, x8
    eb70:	mvn	x10, x22
    eb74:	add	x9, x10, x9, asr #3
    eb78:	and	x10, x4, x9, asr #63
    eb7c:	add	x9, x10, x9
    eb80:	add	x25, x8, x9, lsl #3
    eb84:	ldr	x23, [x25]
    eb88:	cbz	x23, eca4 <__hwasan_memmove@@Base+0xb24>
    eb8c:	and	x19, x23, #0xffffffffffff
    eb90:	stp	xzr, xzr, [sp, #112]
    eb94:	str	xzr, [sp, #104]
    eb98:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
    eb9c:	add	x2, sp, #0x50
    eba0:	mov	x1, x19
    eba4:	bl	25f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1284>
    eba8:	tbz	w0, #0, ec78 <__hwasan_memmove@@Base+0xaf8>
    ebac:	ldr	x8, [sp, #120]
    ebb0:	cbz	x8, ec70 <__hwasan_memmove@@Base+0xaf0>
    ebb4:	lsr	x9, x23, #44
    ebb8:	ldr	x23, [sp, #104]
    ebbc:	ldr	x10, [sp, #72]
    ebc0:	and	x9, x9, #0xffff0
    ebc4:	sub	x29, x20, x9
    ebc8:	mov	w9, #0x38                  	// #56
    ebcc:	mov	x19, xzr
    ebd0:	lsr	x25, x25, #3
    ebd4:	mul	x26, x8, x9
    ebd8:	b	ec0c <__hwasan_memmove@@Base+0xa8c>
    ebdc:	add	x8, x23, x19
    ebe0:	ldp	x2, x1, [x8]
    ebe4:	ldr	x3, [x8, #16]
    ebe8:	ldr	w4, [x8, #24]
    ebec:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ebf0:	add	x0, x0, #0x5cd
    ebf4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ebf8:	ldr	x10, [sp, #72]
    ebfc:	mov	w21, #0x1                   	// #1
    ec00:	add	x19, x19, #0x38
    ec04:	cmp	x26, x19
    ec08:	b.eq	ec70 <__hwasan_memmove@@Base+0xaf0>  // b.none
    ec0c:	add	x8, x23, x19
    ec10:	ldrb	w9, [x8, #28]
    ec14:	cbz	w9, ec00 <__hwasan_memmove@@Base+0xa80>
    ec18:	ldrb	w8, [x8, #29]
    ec1c:	cbz	w8, ec00 <__hwasan_memmove@@Base+0xa80>
    ec20:	add	x8, x23, x19
    ec24:	ldrb	w9, [x8, #30]
    ec28:	cbz	w9, ec00 <__hwasan_memmove@@Base+0xa80>
    ec2c:	ldrb	w8, [x8, #48]
    ec30:	and	w9, w25, #0xff
    ec34:	eor	w8, w8, w9
    ec38:	cmp	w10, w8
    ec3c:	b.ne	ec00 <__hwasan_memmove@@Base+0xa80>  // b.any
    ec40:	add	x8, x23, x19
    ec44:	ldr	w9, [x8, #32]
    ec48:	ldr	x8, [x8, #40]
    ec4c:	sub	w9, w29, w9
    ec50:	and	x9, x9, #0xfffff
    ec54:	cmp	x9, x8
    ec58:	b.cs	ec00 <__hwasan_memmove@@Base+0xa80>  // b.hs, b.nlast
    ec5c:	tbnz	w21, #0, ebdc <__hwasan_memmove@@Base+0xa5c>
    ec60:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ec64:	add	x0, x0, #0x5a6
    ec68:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ec6c:	b	ebdc <__hwasan_memmove@@Base+0xa5c>
    ec70:	add	x0, sp, #0x50
    ec74:	bl	255f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x970>
    ec78:	ldp	x0, x1, [sp, #104]
    ec7c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    ec80:	add	x22, x22, #0x1
    ec84:	cmp	x22, x28
    ec88:	b.cs	eca4 <__hwasan_memmove@@Base+0xb24>  // b.hs, b.nlast
    ec8c:	ldr	x8, [x27]
    ec90:	lsr	x9, x8, #56
    ec94:	lsl	x4, x9, #9
    ec98:	cmp	x4, x22
    ec9c:	b.hi	eb5c <__hwasan_memmove@@Base+0x9dc>  // b.pmore
    eca0:	b	ef70 <__hwasan_memmove@@Base+0xdf0>
    eca4:	tbnz	w21, #0, e8e8 <__hwasan_memmove@@Base+0x768>
    eca8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    ecac:	ldr	x8, [x8, #4016]
    ecb0:	ldr	x0, [x8]
    ecb4:	cbz	x0, ece4 <__hwasan_memmove@@Base+0xb64>
    ecb8:	lsl	x22, x0, #1
    ecbc:	stp	xzr, xzr, [sp, #88]
    ecc0:	str	xzr, [sp, #80]
    ecc4:	cbz	x22, ed04 <__hwasan_memmove@@Base+0xb84>
    ecc8:	add	x0, sp, #0x50
    eccc:	mov	x1, x22
    ecd0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    ecd4:	ldr	x8, [sp, #96]
    ecd8:	cmp	x8, x22
    ecdc:	b.cc	ed10 <__hwasan_memmove@@Base+0xb90>  // b.lo, b.ul, b.last
    ece0:	b	ed40 <__hwasan_memmove@@Base+0xbc0>
    ece4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    ece8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    ecec:	ldr	x8, [x8, #4016]
    ecf0:	str	x0, [x8]
    ecf4:	lsl	x22, x0, #1
    ecf8:	stp	xzr, xzr, [sp, #88]
    ecfc:	str	xzr, [sp, #80]
    ed00:	cbnz	x22, ecc8 <__hwasan_memmove@@Base+0xb48>
    ed04:	mov	x8, xzr
    ed08:	cmp	x8, x22
    ed0c:	b.cs	ed40 <__hwasan_memmove@@Base+0xbc0>  // b.hs, b.nlast
    ed10:	ldr	x9, [sp, #88]
    ed14:	cmp	x9, x22
    ed18:	b.cs	ed2c <__hwasan_memmove@@Base+0xbac>  // b.hs, b.nlast
    ed1c:	add	x0, sp, #0x50
    ed20:	mov	x1, x22
    ed24:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    ed28:	ldr	x8, [sp, #96]
    ed2c:	ldr	x9, [sp, #80]
    ed30:	sub	x2, x22, x8
    ed34:	mov	w1, wzr
    ed38:	add	x0, x9, x8
    ed3c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    ed40:	stp	x22, xzr, [sp, #96]
    ed44:	cbz	x22, ef0c <__hwasan_memmove@@Base+0xd8c>
    ed48:	ldr	x8, [sp, #80]
    ed4c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ed50:	add	x0, x0, #0x5df
    ed54:	strb	wzr, [x8]
    ed58:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ed5c:	cbz	x28, e8e0 <__hwasan_memmove@@Base+0x760>
    ed60:	mov	x22, xzr
    ed64:	mov	x21, #0xffffffffffffffff    	// #-1
    ed68:	ldr	x8, [x27]
    ed6c:	lsr	x9, x8, #56
    ed70:	lsl	x4, x9, #9
    ed74:	cmp	x4, x22
    ed78:	b.ls	ef70 <__hwasan_memmove@@Base+0xdf0>  // b.plast
    ed7c:	neg	x9, x9, lsl #12
    ed80:	and	x9, x8, x9
    ed84:	and	x9, x9, #0xfffffffffff000
    ed88:	and	x8, x8, #0xffffffffffffff
    ed8c:	sub	x8, x8, x9
    ed90:	asr	x8, x8, #3
    ed94:	add	x10, x21, x8
    ed98:	and	x10, x4, x10, asr #63
    ed9c:	add	x8, x10, x8
    eda0:	add	x8, x21, x8
    eda4:	add	x2, x9, x8, lsl #3
    eda8:	ldr	x3, [x2]
    edac:	cbz	x3, e8e0 <__hwasan_memmove@@Base+0x760>
    edb0:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    edb4:	add	x0, sp, #0x50
    edb8:	add	x1, x1, #0x5fd
    edbc:	and	x19, x3, #0xffffffffffff
    edc0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    edc4:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
    edc8:	mov	x1, x19
    edcc:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
    edd0:	cbz	x0, ee10 <__hwasan_memmove@@Base+0xc90>
    edd4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    edd8:	ldr	x8, [x8, #4056]
    eddc:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ede0:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    ede4:	mov	x19, x0
    ede8:	ldrb	w4, [x8, #189]
    edec:	ldr	x5, [x8, #24]
    edf0:	add	x3, x0, #0x8
    edf4:	add	x0, sp, #0x50
    edf8:	add	x1, x1, #0x61e
    edfc:	mov	w2, wzr
    ee00:	add	x6, x6, #0xcf
    ee04:	bl	24d0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
    ee08:	mov	x0, x19
    ee0c:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
    ee10:	ldr	x1, [sp, #80]
    ee14:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ee18:	add	x0, x0, #0xba0
    ee1c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    ee20:	ldr	x8, [sp, #96]
    ee24:	cbz	x8, ef0c <__hwasan_memmove@@Base+0xd8c>
    ee28:	ldr	x8, [sp, #80]
    ee2c:	add	x22, x22, #0x1
    ee30:	cmp	x22, x28
    ee34:	sub	x21, x21, #0x1
    ee38:	strb	wzr, [x8]
    ee3c:	str	xzr, [sp, #104]
    ee40:	b.cc	ed68 <__hwasan_memmove@@Base+0xbe8>  // b.lo, b.ul, b.last
    ee44:	b	e8e0 <__hwasan_memmove@@Base+0x760>
    ee48:	dmb	ish
    ee4c:	ldr	x8, [sp, #16]
    ee50:	strb	wzr, [x8]
    ee54:	bl	111b4 <__hwasan_tag_mismatch_v2@@Base+0x564>
    ee58:	mov	x20, x0
    ee5c:	add	x19, x0, #0x30
    ee60:	mov	w8, #0x1                   	// #1
    ee64:	ldaxrb	w9, [x19]
    ee68:	stlxrb	w10, w8, [x19]
    ee6c:	cbnz	w10, ee64 <__hwasan_memmove@@Base+0xce4>
    ee70:	cbz	w9, ee7c <__hwasan_memmove@@Base+0xcfc>
    ee74:	mov	x0, x19
    ee78:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
    ee7c:	ldr	x20, [x20, #40]
    ee80:	cbz	x20, eeb8 <__hwasan_memmove@@Base+0xd38>
    ee84:	adrp	x21, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ee88:	mov	w22, #0x1                   	// #1
    ee8c:	add	x21, x21, #0x37e
    ee90:	b	ee9c <__hwasan_memmove@@Base+0xd1c>
    ee94:	ldr	x20, [x20, #2664]
    ee98:	cbz	x20, eeb8 <__hwasan_memmove@@Base+0xd38>
    ee9c:	ldrb	w8, [x20, #2684]
    eea0:	cbnz	w8, ee94 <__hwasan_memmove@@Base+0xd14>
    eea4:	mov	x0, x20
    eea8:	mov	x1, x21
    eeac:	strb	w22, [x20, #2684]
    eeb0:	bl	11090 <__hwasan_tag_mismatch_v2@@Base+0x440>
    eeb4:	b	ee94 <__hwasan_memmove@@Base+0xd14>
    eeb8:	dmb	ish
    eebc:	strb	wzr, [x19]
    eec0:	cbnz	w25, eed0 <__hwasan_memmove@@Base+0xd50>
    eec4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    eec8:	add	x0, x0, #0xc7e
    eecc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    eed0:	ldp	x20, x19, [sp, #272]
    eed4:	ldp	x22, x21, [sp, #256]
    eed8:	ldp	x24, x23, [sp, #240]
    eedc:	ldp	x26, x25, [sp, #224]
    eee0:	ldp	x28, x27, [sp, #208]
    eee4:	ldp	x29, x30, [sp, #192]
    eee8:	add	sp, sp, #0x120
    eeec:	ret
    eef0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    eef4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    eef8:	add	x0, x0, #0x39f
    eefc:	add	x2, x2, #0x4c4
    ef00:	mov	w1, #0x38                  	// #56
    ef04:	mov	x4, x3
    ef08:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    ef0c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
    ef10:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ef14:	add	x0, x0, #0x8be
    ef18:	add	x2, x2, #0x1eb
    ef1c:	mov	w1, #0x1c5                 	// #453
    ef20:	mov	x3, xzr
    ef24:	mov	x4, xzr
    ef28:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    ef2c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ef30:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ef34:	add	x0, x0, #0xd55
    ef38:	add	x2, x2, #0x21a
    ef3c:	mov	w1, #0x53                  	// #83
    ef40:	mov	x3, xzr
    ef44:	mov	x4, xzr
    ef48:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    ef4c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    ef50:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ef54:	add	x0, x0, #0xd55
    ef58:	add	x2, x2, #0x228
    ef5c:	mov	w1, #0x55                  	// #85
    ef60:	mov	x3, xzr
    ef64:	mov	x4, xzr
    ef68:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    ef6c:	mov	x4, xzr
    ef70:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ef74:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    ef78:	add	x0, x0, #0x39f
    ef7c:	add	x2, x2, #0x4c4
    ef80:	mov	w1, #0x8f                  	// #143
    ef84:	mov	x3, x22
    ef88:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
    ef8c:	ret
    ef90:	sub	sp, sp, #0x80
    ef94:	stp	x30, x27, [sp, #48]
    ef98:	stp	x26, x25, [sp, #64]
    ef9c:	stp	x24, x23, [sp, #80]
    efa0:	stp	x22, x21, [sp, #96]
    efa4:	stp	x20, x19, [sp, #112]
    efa8:	mov	x20, x1
    efac:	mov	x19, x0
    efb0:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
    efb4:	ldrb	w1, [x0, #4]
    efb8:	add	x0, sp, #0x8
    efbc:	bl	1097c <__hwasan_memmove@@Base+0x27fc>
    efc0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    efc4:	ldr	x8, [x8, #3840]
    efc8:	and	x24, x20, #0xffffffffffffff
    efcc:	lsr	x23, x20, #56
    efd0:	ldr	x8, [x8]
    efd4:	add	x21, x8, x24, lsr #4
    efd8:	ldrb	w22, [x21]
    efdc:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
    efe0:	adrp	x27, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    efe4:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    efe8:	mov	w25, w0
    efec:	add	x27, x27, #0xcf
    eff0:	add	x8, x8, #0x23d
    eff4:	tst	w0, #0x1
    eff8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    effc:	csel	x1, x8, x27, ne  // ne = any
    f000:	add	x0, x0, #0xba0
    f004:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f008:	ldr	w8, [x19, #8]
    f00c:	cbz	w8, f01c <__hwasan_memmove@@Base+0xe9c>
    f010:	ldr	x8, [x19]
    f014:	ldr	x4, [x8]
    f018:	b	f020 <__hwasan_memmove@@Base+0xea0>
    f01c:	mov	x4, xzr
    f020:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f024:	ldr	x8, [x8, #4024]
    f028:	adrp	x26, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f02c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f030:	add	x26, x26, #0xcbb
    f034:	ldr	x1, [x8]
    f038:	add	x0, x0, #0xcc8
    f03c:	mov	x2, x26
    f040:	mov	x3, x24
    f044:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
    f048:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f04c:	add	x8, x8, #0x247
    f050:	tst	w25, #0x1
    f054:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f058:	csel	x1, x8, x27, ne  // ne = any
    f05c:	add	x24, x24, #0xba0
    f060:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f064:	add	x8, x8, #0x207
    f068:	mov	x0, x24
    f06c:	csel	x25, x8, x27, ne  // ne = any
    f070:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f074:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f078:	add	x0, x0, #0xcee
    f07c:	mov	w1, w23
    f080:	mov	w2, w22
    f084:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f088:	mov	x0, x24
    f08c:	mov	x1, x25
    f090:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f094:	mov	x0, x19
    f098:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
    f09c:	mov	x0, x20
    f0a0:	mov	x2, xzr
    f0a4:	bl	e520 <__hwasan_memmove@@Base+0x3a0>
    f0a8:	mov	x0, x21
    f0ac:	bl	f0e4 <__hwasan_memmove@@Base+0xf64>
    f0b0:	mov	x0, x26
    f0b4:	mov	x1, x19
    f0b8:	mov	x2, xzr
    f0bc:	bl	283f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>
    f0c0:	add	x0, sp, #0x8
    f0c4:	bl	10a44 <__hwasan_memmove@@Base+0x28c4>
    f0c8:	ldp	x20, x19, [sp, #112]
    f0cc:	ldp	x22, x21, [sp, #96]
    f0d0:	ldp	x24, x23, [sp, #80]
    f0d4:	ldp	x26, x25, [sp, #64]
    f0d8:	ldp	x30, x27, [sp, #48]
    f0dc:	add	sp, sp, #0x80
    f0e0:	ret
    f0e4:	sub	sp, sp, #0x110
    f0e8:	stp	x29, x30, [sp, #176]
    f0ec:	stp	x28, x27, [sp, #192]
    f0f0:	stp	x26, x25, [sp, #208]
    f0f4:	stp	x24, x23, [sp, #224]
    f0f8:	stp	x22, x21, [sp, #240]
    f0fc:	stp	x20, x19, [sp, #256]
    f100:	mov	x23, x0
    f104:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f108:	add	x0, x0, #0x251
    f10c:	mov	w1, #0x10                  	// #16
    f110:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f114:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f118:	ldr	x19, [x19, #4016]
    f11c:	ldr	x0, [x19]
    f120:	cbz	x0, f150 <__hwasan_memmove@@Base+0xfd0>
    f124:	lsl	x19, x0, #3
    f128:	stp	xzr, xzr, [sp, #152]
    f12c:	str	xzr, [sp, #144]
    f130:	cbz	x19, f168 <__hwasan_memmove@@Base+0xfe8>
    f134:	add	x0, sp, #0x90
    f138:	mov	x1, x19
    f13c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    f140:	ldr	x8, [sp, #160]
    f144:	cmp	x8, x19
    f148:	b.cc	f174 <__hwasan_memmove@@Base+0xff4>  // b.lo, b.ul, b.last
    f14c:	b	f1a4 <__hwasan_memmove@@Base+0x1024>
    f150:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    f154:	str	x0, [x19]
    f158:	lsl	x19, x0, #3
    f15c:	stp	xzr, xzr, [sp, #152]
    f160:	str	xzr, [sp, #144]
    f164:	cbnz	x19, f134 <__hwasan_memmove@@Base+0xfb4>
    f168:	mov	x8, xzr
    f16c:	cmp	x8, x19
    f170:	b.cs	f1a4 <__hwasan_memmove@@Base+0x1024>  // b.hs, b.nlast
    f174:	ldr	x9, [sp, #152]
    f178:	cmp	x9, x19
    f17c:	b.cs	f190 <__hwasan_memmove@@Base+0x1010>  // b.hs, b.nlast
    f180:	add	x0, sp, #0x90
    f184:	mov	x1, x19
    f188:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    f18c:	ldr	x8, [sp, #160]
    f190:	ldr	x9, [sp, #144]
    f194:	sub	x2, x19, x8
    f198:	mov	w1, wzr
    f19c:	add	x0, x9, x8
    f1a0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    f1a4:	stp	x19, xzr, [sp, #160]
    f1a8:	cbz	x19, 1009c <__hwasan_memmove@@Base+0x1f1c>
    f1ac:	and	x25, x23, #0xfffffffffffffff0
    f1b0:	sub	x9, x25, #0x80
    f1b4:	str	x9, [sp, #136]
    f1b8:	sub	x9, x23, x25
    f1bc:	add	x10, x9, #0x80
    f1c0:	str	x10, [sp, #128]
    f1c4:	add	x10, x9, #0x7f
    f1c8:	str	x10, [sp, #120]
    f1cc:	add	x10, x9, #0x71
    f1d0:	str	x10, [sp, #112]
    f1d4:	add	x10, x9, #0x7e
    f1d8:	str	x10, [sp, #104]
    f1dc:	add	x10, x9, #0x72
    f1e0:	str	x10, [sp, #96]
    f1e4:	add	x10, x9, #0x7d
    f1e8:	str	x10, [sp, #88]
    f1ec:	add	x10, x9, #0x73
    f1f0:	str	x10, [sp, #80]
    f1f4:	add	x10, x9, #0x7c
    f1f8:	str	x10, [sp, #72]
    f1fc:	add	x10, x9, #0x74
    f200:	str	x10, [sp, #64]
    f204:	add	x10, x9, #0x7b
    f208:	str	x10, [sp, #56]
    f20c:	add	x10, x9, #0x75
    f210:	ldr	x8, [sp, #144]
    f214:	str	x10, [sp, #48]
    f218:	add	x10, x9, #0x7a
    f21c:	str	x10, [sp, #40]
    f220:	add	x10, x9, #0x76
    f224:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f228:	adrp	x19, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f22c:	adrp	x28, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f230:	adrp	x29, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f234:	adrp	x26, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
    f238:	adrp	x21, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    f23c:	str	x10, [sp, #32]
    f240:	add	x10, x9, #0x79
    f244:	mov	x20, xzr
    f248:	add	x24, x24, #0xdd2
    f24c:	add	x19, x19, #0xba0
    f250:	add	x28, x28, #0xdd3
    f254:	add	x29, x29, #0x37c
    f258:	add	x26, x26, #0x2c3
    f25c:	add	x21, x21, #0x2ef
    f260:	str	x10, [sp, #24]
    f264:	add	x10, x9, #0x77
    f268:	add	x22, x9, #0x78
    f26c:	stp	x9, x10, [sp, #8]
    f270:	strb	wzr, [x8]
    f274:	ldr	x8, [sp, #136]
    f278:	subs	x27, x20, #0x80
    f27c:	add	x0, sp, #0x90
    f280:	mov	x1, x19
    f284:	add	x23, x8, x20
    f288:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f28c:	add	x8, x8, #0x375
    f290:	csel	x2, x8, x24, eq  // eq = none
    f294:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f298:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f29c:	add	x0, sp, #0x90
    f2a0:	add	x1, x1, #0x378
    f2a4:	mov	x2, x23
    f2a8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f2ac:	ldr	x8, [sp, #128]
    f2b0:	add	x0, sp, #0x90
    f2b4:	mov	x1, x19
    f2b8:	cmp	x8, x20
    f2bc:	csel	x2, x29, x28, eq  // eq = none
    f2c0:	csel	x24, x26, x28, eq  // eq = none
    f2c4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f2c8:	ldrb	w2, [x23]
    f2cc:	add	x0, sp, #0x90
    f2d0:	mov	x1, x21
    f2d4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f2d8:	add	x0, sp, #0x90
    f2dc:	mov	x1, x19
    f2e0:	mov	x2, x24
    f2e4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f2e8:	ldr	x8, [sp, #120]
    f2ec:	add	x0, sp, #0x90
    f2f0:	mov	x1, x19
    f2f4:	cmp	x8, x20
    f2f8:	csel	x2, x29, x28, eq  // eq = none
    f2fc:	csel	x24, x26, x28, eq  // eq = none
    f300:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f304:	ldrb	w2, [x23, #1]
    f308:	add	x0, sp, #0x90
    f30c:	mov	x1, x21
    f310:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f314:	add	x0, sp, #0x90
    f318:	mov	x1, x19
    f31c:	mov	x2, x24
    f320:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f324:	ldr	x8, [sp, #104]
    f328:	add	x0, sp, #0x90
    f32c:	mov	x1, x19
    f330:	cmp	x8, x20
    f334:	csel	x2, x29, x28, eq  // eq = none
    f338:	csel	x24, x26, x28, eq  // eq = none
    f33c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f340:	ldrb	w2, [x23, #2]
    f344:	add	x0, sp, #0x90
    f348:	mov	x1, x21
    f34c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f350:	add	x0, sp, #0x90
    f354:	mov	x1, x19
    f358:	mov	x2, x24
    f35c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f360:	ldr	x8, [sp, #88]
    f364:	add	x0, sp, #0x90
    f368:	mov	x1, x19
    f36c:	cmp	x8, x20
    f370:	csel	x2, x29, x28, eq  // eq = none
    f374:	csel	x24, x26, x28, eq  // eq = none
    f378:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f37c:	ldrb	w2, [x23, #3]
    f380:	add	x0, sp, #0x90
    f384:	mov	x1, x21
    f388:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f38c:	add	x0, sp, #0x90
    f390:	mov	x1, x19
    f394:	mov	x2, x24
    f398:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f39c:	ldr	x8, [sp, #72]
    f3a0:	add	x0, sp, #0x90
    f3a4:	mov	x1, x19
    f3a8:	cmp	x8, x20
    f3ac:	csel	x2, x29, x28, eq  // eq = none
    f3b0:	csel	x24, x26, x28, eq  // eq = none
    f3b4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f3b8:	ldrb	w2, [x23, #4]
    f3bc:	add	x0, sp, #0x90
    f3c0:	mov	x1, x21
    f3c4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f3c8:	add	x0, sp, #0x90
    f3cc:	mov	x1, x19
    f3d0:	mov	x2, x24
    f3d4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f3d8:	ldr	x8, [sp, #56]
    f3dc:	add	x0, sp, #0x90
    f3e0:	mov	x1, x19
    f3e4:	cmp	x8, x20
    f3e8:	csel	x2, x29, x28, eq  // eq = none
    f3ec:	csel	x24, x26, x28, eq  // eq = none
    f3f0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f3f4:	ldrb	w2, [x23, #5]
    f3f8:	add	x0, sp, #0x90
    f3fc:	mov	x1, x21
    f400:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f404:	add	x0, sp, #0x90
    f408:	mov	x1, x19
    f40c:	mov	x2, x24
    f410:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f414:	ldr	x8, [sp, #40]
    f418:	add	x0, sp, #0x90
    f41c:	mov	x1, x19
    f420:	cmp	x8, x20
    f424:	csel	x2, x29, x28, eq  // eq = none
    f428:	csel	x24, x26, x28, eq  // eq = none
    f42c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f430:	ldrb	w2, [x23, #6]
    f434:	add	x0, sp, #0x90
    f438:	mov	x1, x21
    f43c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f440:	add	x0, sp, #0x90
    f444:	mov	x1, x19
    f448:	mov	x2, x24
    f44c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f450:	ldr	x8, [sp, #24]
    f454:	add	x0, sp, #0x90
    f458:	mov	x1, x19
    f45c:	cmp	x8, x20
    f460:	csel	x2, x29, x28, eq  // eq = none
    f464:	csel	x24, x26, x28, eq  // eq = none
    f468:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f46c:	ldrb	w2, [x23, #7]
    f470:	add	x0, sp, #0x90
    f474:	mov	x1, x21
    f478:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f47c:	add	x0, sp, #0x90
    f480:	mov	x1, x19
    f484:	mov	x2, x24
    f488:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f48c:	cmp	x22, x20
    f490:	csel	x2, x29, x28, eq  // eq = none
    f494:	add	x0, sp, #0x90
    f498:	mov	x1, x19
    f49c:	csel	x24, x26, x28, eq  // eq = none
    f4a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f4a4:	ldrb	w2, [x23, #8]
    f4a8:	add	x0, sp, #0x90
    f4ac:	mov	x1, x21
    f4b0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f4b4:	add	x0, sp, #0x90
    f4b8:	mov	x1, x19
    f4bc:	mov	x2, x24
    f4c0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f4c4:	ldr	x8, [sp, #16]
    f4c8:	add	x0, sp, #0x90
    f4cc:	mov	x1, x19
    f4d0:	cmp	x8, x20
    f4d4:	csel	x2, x29, x28, eq  // eq = none
    f4d8:	csel	x24, x26, x28, eq  // eq = none
    f4dc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f4e0:	ldrb	w2, [x23, #9]
    f4e4:	add	x0, sp, #0x90
    f4e8:	mov	x1, x21
    f4ec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f4f0:	add	x0, sp, #0x90
    f4f4:	mov	x1, x19
    f4f8:	mov	x2, x24
    f4fc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f500:	ldr	x8, [sp, #32]
    f504:	add	x0, sp, #0x90
    f508:	mov	x1, x19
    f50c:	cmp	x8, x20
    f510:	csel	x2, x29, x28, eq  // eq = none
    f514:	csel	x24, x26, x28, eq  // eq = none
    f518:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f51c:	ldrb	w2, [x23, #10]
    f520:	add	x0, sp, #0x90
    f524:	mov	x1, x21
    f528:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f52c:	add	x0, sp, #0x90
    f530:	mov	x1, x19
    f534:	mov	x2, x24
    f538:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f53c:	ldr	x8, [sp, #48]
    f540:	add	x0, sp, #0x90
    f544:	mov	x1, x19
    f548:	cmp	x8, x20
    f54c:	csel	x2, x29, x28, eq  // eq = none
    f550:	csel	x24, x26, x28, eq  // eq = none
    f554:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f558:	ldrb	w2, [x23, #11]
    f55c:	add	x0, sp, #0x90
    f560:	mov	x1, x21
    f564:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f568:	add	x0, sp, #0x90
    f56c:	mov	x1, x19
    f570:	mov	x2, x24
    f574:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f578:	ldr	x8, [sp, #64]
    f57c:	add	x0, sp, #0x90
    f580:	mov	x1, x19
    f584:	cmp	x8, x20
    f588:	csel	x2, x29, x28, eq  // eq = none
    f58c:	csel	x24, x26, x28, eq  // eq = none
    f590:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f594:	ldrb	w2, [x23, #12]
    f598:	add	x0, sp, #0x90
    f59c:	mov	x1, x21
    f5a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f5a4:	add	x0, sp, #0x90
    f5a8:	mov	x1, x19
    f5ac:	mov	x2, x24
    f5b0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f5b4:	ldr	x8, [sp, #80]
    f5b8:	add	x0, sp, #0x90
    f5bc:	mov	x1, x19
    f5c0:	cmp	x8, x20
    f5c4:	csel	x2, x29, x28, eq  // eq = none
    f5c8:	csel	x24, x26, x28, eq  // eq = none
    f5cc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f5d0:	ldrb	w2, [x23, #13]
    f5d4:	add	x0, sp, #0x90
    f5d8:	mov	x1, x21
    f5dc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f5e0:	add	x0, sp, #0x90
    f5e4:	mov	x1, x19
    f5e8:	mov	x2, x24
    f5ec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f5f0:	ldr	x8, [sp, #96]
    f5f4:	add	x0, sp, #0x90
    f5f8:	mov	x1, x19
    f5fc:	cmp	x8, x20
    f600:	csel	x2, x29, x28, eq  // eq = none
    f604:	csel	x24, x26, x28, eq  // eq = none
    f608:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f60c:	ldrb	w2, [x23, #14]
    f610:	add	x0, sp, #0x90
    f614:	mov	x1, x21
    f618:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f61c:	add	x0, sp, #0x90
    f620:	mov	x1, x19
    f624:	mov	x2, x24
    f628:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f62c:	ldr	x8, [sp, #112]
    f630:	add	x0, sp, #0x90
    f634:	mov	x1, x19
    f638:	cmp	x8, x20
    f63c:	csel	x2, x29, x28, eq  // eq = none
    f640:	csel	x24, x26, x28, eq  // eq = none
    f644:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f648:	ldrb	w2, [x23, #15]
    f64c:	add	x0, sp, #0x90
    f650:	mov	x1, x21
    f654:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f658:	add	x0, sp, #0x90
    f65c:	mov	x1, x19
    f660:	mov	x2, x24
    f664:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f668:	add	x24, x24, #0xdd2
    f66c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f670:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    f674:	add	x0, sp, #0x90
    f678:	add	x1, x1, #0xce
    f67c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f680:	cmp	x27, #0x80
    f684:	add	x20, x20, #0x10
    f688:	b.lt	f274 <__hwasan_memmove@@Base+0x10f4>  // b.tstop
    f68c:	ldr	x1, [sp, #144]
    f690:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f694:	add	x0, x0, #0xba0
    f698:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f69c:	ldp	x0, x1, [sp, #144]
    f6a0:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
    f6a4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f6a8:	add	x0, x0, #0x29b
    f6ac:	mov	w1, #0x10                  	// #16
    f6b0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
    f6b4:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f6b8:	ldr	x19, [x19, #4016]
    f6bc:	ldr	x0, [x19]
    f6c0:	cbz	x0, f6f8 <__hwasan_memmove@@Base+0x1578>
    f6c4:	lsl	x19, x0, #3
    f6c8:	stp	xzr, xzr, [sp, #152]
    f6cc:	str	xzr, [sp, #144]
    f6d0:	cbz	x19, f710 <__hwasan_memmove@@Base+0x1590>
    f6d4:	add	x0, sp, #0x90
    f6d8:	mov	x1, x19
    f6dc:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    f6e0:	ldr	x8, [sp, #160]
    f6e4:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f6e8:	add	x9, x9, #0x375
    f6ec:	cmp	x8, x19
    f6f0:	b.cc	f724 <__hwasan_memmove@@Base+0x15a4>  // b.lo, b.ul, b.last
    f6f4:	b	f75c <__hwasan_memmove@@Base+0x15dc>
    f6f8:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
    f6fc:	str	x0, [x19]
    f700:	lsl	x19, x0, #3
    f704:	stp	xzr, xzr, [sp, #152]
    f708:	str	xzr, [sp, #144]
    f70c:	cbnz	x19, f6d4 <__hwasan_memmove@@Base+0x1554>
    f710:	mov	x8, xzr
    f714:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f718:	add	x9, x9, #0x375
    f71c:	cmp	x8, x19
    f720:	b.cs	f75c <__hwasan_memmove@@Base+0x15dc>  // b.hs, b.nlast
    f724:	ldr	x9, [sp, #152]
    f728:	cmp	x9, x19
    f72c:	b.cs	f740 <__hwasan_memmove@@Base+0x15c0>  // b.hs, b.nlast
    f730:	add	x0, sp, #0x90
    f734:	mov	x1, x19
    f738:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
    f73c:	ldr	x8, [sp, #160]
    f740:	ldr	x9, [sp, #144]
    f744:	sub	x2, x19, x8
    f748:	mov	w1, wzr
    f74c:	add	x0, x9, x8
    f750:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
    f754:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f758:	add	x9, x9, #0x375
    f75c:	stp	x19, xzr, [sp, #160]
    f760:	cbz	x19, 1009c <__hwasan_memmove@@Base+0x1f1c>
    f764:	ldr	x11, [sp, #8]
    f768:	ldr	x8, [sp, #144]
    f76c:	adrp	x19, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f770:	mov	x20, xzr
    f774:	add	x10, x11, #0x10
    f778:	str	x10, [sp, #136]
    f77c:	add	x10, x11, #0xf
    f780:	str	x10, [sp, #128]
    f784:	add	x10, x11, #0x3
    f788:	str	x10, [sp, #120]
    f78c:	add	x10, x11, #0xb
    f790:	str	x10, [sp, #112]
    f794:	add	x10, x11, #0xa
    f798:	str	x10, [sp, #104]
    f79c:	add	x10, x11, #0x4
    f7a0:	str	x10, [sp, #96]
    f7a4:	add	x10, x11, #0x9
    f7a8:	str	x10, [sp, #88]
    f7ac:	add	x10, x11, #0x8
    f7b0:	str	x10, [sp, #80]
    f7b4:	add	x10, x11, #0x7
    f7b8:	str	x10, [sp, #72]
    f7bc:	add	x10, x11, #0x5
    f7c0:	add	x24, x11, #0x1
    f7c4:	add	x22, x11, #0xe
    f7c8:	add	x21, x11, #0x2
    f7cc:	add	x27, x11, #0xd
    f7d0:	add	x23, x11, #0xc
    f7d4:	str	x10, [sp, #64]
    f7d8:	add	x10, x11, #0x6
    f7dc:	add	x19, x19, #0xba0
    f7e0:	stp	x24, x10, [sp, #48]
    f7e4:	strb	wzr, [x8]
    f7e8:	stp	x21, x27, [sp, #24]
    f7ec:	str	x23, [sp, #16]
    f7f0:	b	f844 <__hwasan_memmove@@Base+0x16c4>
    f7f4:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    f7f8:	add	x0, sp, #0x90
    f7fc:	add	x1, x1, #0xcce
    f800:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f804:	ldr	x24, [sp, #48]
    f808:	add	x0, sp, #0x90
    f80c:	mov	x1, x19
    f810:	cmp	x24, x20
    f814:	csel	x2, x26, x28, eq  // eq = none
    f818:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f81c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
    f820:	add	x0, sp, #0x90
    f824:	add	x1, x1, #0xce
    f828:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f82c:	ldr	x8, [sp, #40]
    f830:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f834:	add	x20, x20, #0x10
    f838:	add	x9, x9, #0x375
    f83c:	cmp	x8, #0x10
    f840:	b.ge	10058 <__hwasan_memmove@@Base+0x1ed8>  // b.tcont
    f844:	subs	x8, x20, #0x10
    f848:	str	x8, [sp, #40]
    f84c:	adrp	x8, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
    f850:	add	x8, x8, #0xdd2
    f854:	add	x27, x25, x20
    f858:	csel	x2, x9, x8, eq  // eq = none
    f85c:	add	x0, sp, #0x90
    f860:	mov	x1, x19
    f864:	mov	x23, x26
    f868:	mov	x21, x22
    f86c:	sub	x24, x27, #0x10
    f870:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f874:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
    f878:	add	x0, sp, #0x90
    f87c:	add	x1, x1, #0x378
    f880:	mov	x2, x24
    f884:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f888:	ldr	x8, [sp, #136]
    f88c:	add	x0, sp, #0x90
    f890:	mov	x1, x19
    f894:	mov	x26, x29
    f898:	cmp	x8, x20
    f89c:	csel	x2, x29, x28, eq  // eq = none
    f8a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f8a4:	ldurb	w8, [x27, #-16]
    f8a8:	sub	w8, w8, #0x1
    f8ac:	cmp	w8, #0xf
    f8b0:	b.hi	f8e0 <__hwasan_memmove@@Base+0x1760>  // b.pmore
    f8b4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f8b8:	ldr	x8, [x8, #3840]
    f8bc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    f8c0:	add	x0, sp, #0x90
    f8c4:	add	x1, x1, #0x2ef
    f8c8:	ldr	x8, [x8]
    f8cc:	sub	x8, x24, x8
    f8d0:	lsl	x8, x8, #4
    f8d4:	ldrb	w2, [x8, #15]
    f8d8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f8dc:	b	f8f0 <__hwasan_memmove@@Base+0x1770>
    f8e0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    f8e4:	add	x0, sp, #0x90
    f8e8:	add	x1, x1, #0xcce
    f8ec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f8f0:	ldr	x8, [sp, #136]
    f8f4:	add	x0, sp, #0x90
    f8f8:	mov	x1, x19
    f8fc:	cmp	x8, x20
    f900:	csel	x2, x23, x28, eq  // eq = none
    f904:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f908:	ldr	x8, [sp, #128]
    f90c:	add	x0, sp, #0x90
    f910:	mov	x1, x19
    f914:	add	x24, x25, x20
    f918:	cmp	x8, x20
    f91c:	csel	x2, x26, x28, eq  // eq = none
    f920:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f924:	ldrb	w8, [x24, #-15]!
    f928:	sub	w8, w8, #0x1
    f92c:	cmp	w8, #0xf
    f930:	b.hi	f960 <__hwasan_memmove@@Base+0x17e0>  // b.pmore
    f934:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f938:	ldr	x8, [x8, #3840]
    f93c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    f940:	add	x0, sp, #0x90
    f944:	add	x1, x1, #0x2ef
    f948:	ldr	x8, [x8]
    f94c:	sub	x8, x24, x8
    f950:	lsl	x8, x8, #4
    f954:	ldrb	w2, [x8, #15]
    f958:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f95c:	b	f970 <__hwasan_memmove@@Base+0x17f0>
    f960:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    f964:	add	x0, sp, #0x90
    f968:	add	x1, x1, #0xcce
    f96c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f970:	ldr	x8, [sp, #128]
    f974:	add	x0, sp, #0x90
    f978:	mov	x1, x19
    f97c:	mov	x22, x21
    f980:	cmp	x8, x20
    f984:	csel	x2, x23, x28, eq  // eq = none
    f988:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f98c:	cmp	x21, x20
    f990:	csel	x2, x26, x28, eq  // eq = none
    f994:	add	x0, sp, #0x90
    f998:	mov	x1, x19
    f99c:	add	x24, x25, x20
    f9a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f9a4:	ldrb	w8, [x24, #-14]!
    f9a8:	ldr	x21, [sp, #24]
    f9ac:	sub	w8, w8, #0x1
    f9b0:	cmp	w8, #0xf
    f9b4:	b.hi	f9e4 <__hwasan_memmove@@Base+0x1864>  // b.pmore
    f9b8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    f9bc:	ldr	x8, [x8, #3840]
    f9c0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    f9c4:	add	x0, sp, #0x90
    f9c8:	add	x1, x1, #0x2ef
    f9cc:	ldr	x8, [x8]
    f9d0:	sub	x8, x24, x8
    f9d4:	lsl	x8, x8, #4
    f9d8:	ldrb	w2, [x8, #15]
    f9dc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f9e0:	b	f9f4 <__hwasan_memmove@@Base+0x1874>
    f9e4:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    f9e8:	add	x0, sp, #0x90
    f9ec:	add	x1, x1, #0xcce
    f9f0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    f9f4:	ldr	x27, [sp, #32]
    f9f8:	cmp	x22, x20
    f9fc:	csel	x2, x23, x28, eq  // eq = none
    fa00:	add	x0, sp, #0x90
    fa04:	mov	x1, x19
    fa08:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fa0c:	cmp	x27, x20
    fa10:	csel	x2, x26, x28, eq  // eq = none
    fa14:	add	x0, sp, #0x90
    fa18:	mov	x1, x19
    fa1c:	add	x24, x25, x20
    fa20:	mov	x29, x26
    fa24:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fa28:	ldrb	w8, [x24, #-13]!
    fa2c:	sub	w8, w8, #0x1
    fa30:	cmp	w8, #0xf
    fa34:	b.hi	fa64 <__hwasan_memmove@@Base+0x18e4>  // b.pmore
    fa38:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fa3c:	ldr	x8, [x8, #3840]
    fa40:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fa44:	add	x0, sp, #0x90
    fa48:	add	x1, x1, #0x2ef
    fa4c:	ldr	x8, [x8]
    fa50:	sub	x8, x24, x8
    fa54:	lsl	x8, x8, #4
    fa58:	ldrb	w2, [x8, #15]
    fa5c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fa60:	b	fa74 <__hwasan_memmove@@Base+0x18f4>
    fa64:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fa68:	add	x0, sp, #0x90
    fa6c:	add	x1, x1, #0xcce
    fa70:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fa74:	cmp	x27, x20
    fa78:	csel	x2, x23, x28, eq  // eq = none
    fa7c:	add	x0, sp, #0x90
    fa80:	mov	x1, x19
    fa84:	mov	x26, x23
    fa88:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fa8c:	ldr	x23, [sp, #16]
    fa90:	add	x0, sp, #0x90
    fa94:	mov	x1, x19
    fa98:	add	x24, x25, x20
    fa9c:	cmp	x23, x20
    faa0:	csel	x2, x29, x28, eq  // eq = none
    faa4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    faa8:	ldrb	w8, [x24, #-12]!
    faac:	sub	w8, w8, #0x1
    fab0:	cmp	w8, #0xf
    fab4:	b.hi	fae4 <__hwasan_memmove@@Base+0x1964>  // b.pmore
    fab8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fabc:	ldr	x8, [x8, #3840]
    fac0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fac4:	add	x0, sp, #0x90
    fac8:	add	x1, x1, #0x2ef
    facc:	ldr	x8, [x8]
    fad0:	sub	x8, x24, x8
    fad4:	lsl	x8, x8, #4
    fad8:	ldrb	w2, [x8, #15]
    fadc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fae0:	b	faf4 <__hwasan_memmove@@Base+0x1974>
    fae4:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fae8:	add	x0, sp, #0x90
    faec:	add	x1, x1, #0xcce
    faf0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    faf4:	cmp	x23, x20
    faf8:	csel	x2, x26, x28, eq  // eq = none
    fafc:	add	x0, sp, #0x90
    fb00:	mov	x1, x19
    fb04:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fb08:	ldr	x8, [sp, #112]
    fb0c:	add	x0, sp, #0x90
    fb10:	mov	x1, x19
    fb14:	add	x24, x25, x20
    fb18:	cmp	x8, x20
    fb1c:	csel	x2, x29, x28, eq  // eq = none
    fb20:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fb24:	ldrb	w8, [x24, #-11]!
    fb28:	sub	w8, w8, #0x1
    fb2c:	cmp	w8, #0xf
    fb30:	b.hi	fb60 <__hwasan_memmove@@Base+0x19e0>  // b.pmore
    fb34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fb38:	ldr	x8, [x8, #3840]
    fb3c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fb40:	add	x0, sp, #0x90
    fb44:	add	x1, x1, #0x2ef
    fb48:	ldr	x8, [x8]
    fb4c:	sub	x8, x24, x8
    fb50:	lsl	x8, x8, #4
    fb54:	ldrb	w2, [x8, #15]
    fb58:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fb5c:	b	fb70 <__hwasan_memmove@@Base+0x19f0>
    fb60:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fb64:	add	x0, sp, #0x90
    fb68:	add	x1, x1, #0xcce
    fb6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fb70:	ldr	x8, [sp, #112]
    fb74:	add	x0, sp, #0x90
    fb78:	mov	x1, x19
    fb7c:	cmp	x8, x20
    fb80:	csel	x2, x26, x28, eq  // eq = none
    fb84:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fb88:	ldr	x8, [sp, #104]
    fb8c:	add	x0, sp, #0x90
    fb90:	mov	x1, x19
    fb94:	add	x24, x25, x20
    fb98:	cmp	x8, x20
    fb9c:	csel	x2, x29, x28, eq  // eq = none
    fba0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fba4:	ldrb	w8, [x24, #-10]!
    fba8:	sub	w8, w8, #0x1
    fbac:	cmp	w8, #0xf
    fbb0:	b.hi	fbe0 <__hwasan_memmove@@Base+0x1a60>  // b.pmore
    fbb4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fbb8:	ldr	x8, [x8, #3840]
    fbbc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fbc0:	add	x0, sp, #0x90
    fbc4:	add	x1, x1, #0x2ef
    fbc8:	ldr	x8, [x8]
    fbcc:	sub	x8, x24, x8
    fbd0:	lsl	x8, x8, #4
    fbd4:	ldrb	w2, [x8, #15]
    fbd8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fbdc:	b	fbf0 <__hwasan_memmove@@Base+0x1a70>
    fbe0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fbe4:	add	x0, sp, #0x90
    fbe8:	add	x1, x1, #0xcce
    fbec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fbf0:	ldr	x8, [sp, #104]
    fbf4:	add	x0, sp, #0x90
    fbf8:	mov	x1, x19
    fbfc:	cmp	x8, x20
    fc00:	csel	x2, x26, x28, eq  // eq = none
    fc04:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fc08:	ldr	x8, [sp, #88]
    fc0c:	add	x0, sp, #0x90
    fc10:	mov	x1, x19
    fc14:	add	x24, x25, x20
    fc18:	cmp	x8, x20
    fc1c:	csel	x2, x29, x28, eq  // eq = none
    fc20:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fc24:	ldrb	w8, [x24, #-9]!
    fc28:	sub	w8, w8, #0x1
    fc2c:	cmp	w8, #0xf
    fc30:	b.hi	fc60 <__hwasan_memmove@@Base+0x1ae0>  // b.pmore
    fc34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fc38:	ldr	x8, [x8, #3840]
    fc3c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fc40:	add	x0, sp, #0x90
    fc44:	add	x1, x1, #0x2ef
    fc48:	ldr	x8, [x8]
    fc4c:	sub	x8, x24, x8
    fc50:	lsl	x8, x8, #4
    fc54:	ldrb	w2, [x8, #15]
    fc58:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fc5c:	b	fc70 <__hwasan_memmove@@Base+0x1af0>
    fc60:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fc64:	add	x0, sp, #0x90
    fc68:	add	x1, x1, #0xcce
    fc6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fc70:	ldr	x8, [sp, #88]
    fc74:	add	x0, sp, #0x90
    fc78:	mov	x1, x19
    fc7c:	cmp	x8, x20
    fc80:	csel	x2, x26, x28, eq  // eq = none
    fc84:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fc88:	ldr	x8, [sp, #80]
    fc8c:	add	x0, sp, #0x90
    fc90:	mov	x1, x19
    fc94:	add	x24, x25, x20
    fc98:	cmp	x8, x20
    fc9c:	csel	x2, x29, x28, eq  // eq = none
    fca0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fca4:	ldrb	w8, [x24, #-8]!
    fca8:	sub	w8, w8, #0x1
    fcac:	cmp	w8, #0xf
    fcb0:	b.hi	fce0 <__hwasan_memmove@@Base+0x1b60>  // b.pmore
    fcb4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fcb8:	ldr	x8, [x8, #3840]
    fcbc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fcc0:	add	x0, sp, #0x90
    fcc4:	add	x1, x1, #0x2ef
    fcc8:	ldr	x8, [x8]
    fccc:	sub	x8, x24, x8
    fcd0:	lsl	x8, x8, #4
    fcd4:	ldrb	w2, [x8, #15]
    fcd8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fcdc:	b	fcf0 <__hwasan_memmove@@Base+0x1b70>
    fce0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fce4:	add	x0, sp, #0x90
    fce8:	add	x1, x1, #0xcce
    fcec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fcf0:	ldr	x8, [sp, #80]
    fcf4:	add	x0, sp, #0x90
    fcf8:	mov	x1, x19
    fcfc:	cmp	x8, x20
    fd00:	csel	x2, x26, x28, eq  // eq = none
    fd04:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fd08:	ldr	x8, [sp, #72]
    fd0c:	add	x0, sp, #0x90
    fd10:	mov	x1, x19
    fd14:	add	x24, x25, x20
    fd18:	cmp	x8, x20
    fd1c:	csel	x2, x29, x28, eq  // eq = none
    fd20:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fd24:	ldrb	w8, [x24, #-7]!
    fd28:	sub	w8, w8, #0x1
    fd2c:	cmp	w8, #0xf
    fd30:	b.hi	fd60 <__hwasan_memmove@@Base+0x1be0>  // b.pmore
    fd34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fd38:	ldr	x8, [x8, #3840]
    fd3c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fd40:	add	x0, sp, #0x90
    fd44:	add	x1, x1, #0x2ef
    fd48:	ldr	x8, [x8]
    fd4c:	sub	x8, x24, x8
    fd50:	lsl	x8, x8, #4
    fd54:	ldrb	w2, [x8, #15]
    fd58:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fd5c:	b	fd70 <__hwasan_memmove@@Base+0x1bf0>
    fd60:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fd64:	add	x0, sp, #0x90
    fd68:	add	x1, x1, #0xcce
    fd6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fd70:	ldr	x8, [sp, #72]
    fd74:	add	x0, sp, #0x90
    fd78:	mov	x1, x19
    fd7c:	cmp	x8, x20
    fd80:	csel	x2, x26, x28, eq  // eq = none
    fd84:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fd88:	ldr	x8, [sp, #56]
    fd8c:	add	x0, sp, #0x90
    fd90:	mov	x1, x19
    fd94:	add	x24, x25, x20
    fd98:	cmp	x8, x20
    fd9c:	csel	x2, x29, x28, eq  // eq = none
    fda0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fda4:	ldrb	w8, [x24, #-6]!
    fda8:	sub	w8, w8, #0x1
    fdac:	cmp	w8, #0xf
    fdb0:	b.hi	fde0 <__hwasan_memmove@@Base+0x1c60>  // b.pmore
    fdb4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fdb8:	ldr	x8, [x8, #3840]
    fdbc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fdc0:	add	x0, sp, #0x90
    fdc4:	add	x1, x1, #0x2ef
    fdc8:	ldr	x8, [x8]
    fdcc:	sub	x8, x24, x8
    fdd0:	lsl	x8, x8, #4
    fdd4:	ldrb	w2, [x8, #15]
    fdd8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fddc:	b	fdf0 <__hwasan_memmove@@Base+0x1c70>
    fde0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fde4:	add	x0, sp, #0x90
    fde8:	add	x1, x1, #0xcce
    fdec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fdf0:	ldr	x8, [sp, #56]
    fdf4:	add	x0, sp, #0x90
    fdf8:	mov	x1, x19
    fdfc:	cmp	x8, x20
    fe00:	csel	x2, x26, x28, eq  // eq = none
    fe04:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fe08:	ldr	x8, [sp, #64]
    fe0c:	add	x0, sp, #0x90
    fe10:	mov	x1, x19
    fe14:	add	x24, x25, x20
    fe18:	cmp	x8, x20
    fe1c:	csel	x2, x29, x28, eq  // eq = none
    fe20:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fe24:	ldrb	w8, [x24, #-5]!
    fe28:	sub	w8, w8, #0x1
    fe2c:	cmp	w8, #0xf
    fe30:	b.hi	fe60 <__hwasan_memmove@@Base+0x1ce0>  // b.pmore
    fe34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    fe38:	ldr	x8, [x8, #3840]
    fe3c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fe40:	add	x0, sp, #0x90
    fe44:	add	x1, x1, #0x2ef
    fe48:	ldr	x8, [x8]
    fe4c:	sub	x8, x24, x8
    fe50:	lsl	x8, x8, #4
    fe54:	ldrb	w2, [x8, #15]
    fe58:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fe5c:	b	fe70 <__hwasan_memmove@@Base+0x1cf0>
    fe60:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fe64:	add	x0, sp, #0x90
    fe68:	add	x1, x1, #0xcce
    fe6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fe70:	ldr	x8, [sp, #64]
    fe74:	add	x0, sp, #0x90
    fe78:	mov	x1, x19
    fe7c:	cmp	x8, x20
    fe80:	csel	x2, x26, x28, eq  // eq = none
    fe84:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fe88:	ldr	x8, [sp, #96]
    fe8c:	add	x0, sp, #0x90
    fe90:	mov	x1, x19
    fe94:	add	x24, x25, x20
    fe98:	cmp	x8, x20
    fe9c:	csel	x2, x29, x28, eq  // eq = none
    fea0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fea4:	ldrb	w8, [x24, #-4]!
    fea8:	sub	w8, w8, #0x1
    feac:	cmp	w8, #0xf
    feb0:	b.hi	fee0 <__hwasan_memmove@@Base+0x1d60>  // b.pmore
    feb4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    feb8:	ldr	x8, [x8, #3840]
    febc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    fec0:	add	x0, sp, #0x90
    fec4:	add	x1, x1, #0x2ef
    fec8:	ldr	x8, [x8]
    fecc:	sub	x8, x24, x8
    fed0:	lsl	x8, x8, #4
    fed4:	ldrb	w2, [x8, #15]
    fed8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fedc:	b	fef0 <__hwasan_memmove@@Base+0x1d70>
    fee0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    fee4:	add	x0, sp, #0x90
    fee8:	add	x1, x1, #0xcce
    feec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    fef0:	ldr	x8, [sp, #96]
    fef4:	add	x0, sp, #0x90
    fef8:	mov	x1, x19
    fefc:	cmp	x8, x20
    ff00:	csel	x2, x26, x28, eq  // eq = none
    ff04:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ff08:	ldr	x8, [sp, #120]
    ff0c:	add	x0, sp, #0x90
    ff10:	mov	x1, x19
    ff14:	add	x24, x25, x20
    ff18:	cmp	x8, x20
    ff1c:	csel	x2, x29, x28, eq  // eq = none
    ff20:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ff24:	ldrb	w8, [x24, #-3]!
    ff28:	sub	w8, w8, #0x1
    ff2c:	cmp	w8, #0xf
    ff30:	b.hi	ff60 <__hwasan_memmove@@Base+0x1de0>  // b.pmore
    ff34:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    ff38:	ldr	x8, [x8, #3840]
    ff3c:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    ff40:	add	x0, sp, #0x90
    ff44:	add	x1, x1, #0x2ef
    ff48:	ldr	x8, [x8]
    ff4c:	sub	x8, x24, x8
    ff50:	lsl	x8, x8, #4
    ff54:	ldrb	w2, [x8, #15]
    ff58:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ff5c:	b	ff70 <__hwasan_memmove@@Base+0x1df0>
    ff60:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    ff64:	add	x0, sp, #0x90
    ff68:	add	x1, x1, #0xcce
    ff6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ff70:	ldr	x8, [sp, #120]
    ff74:	add	x0, sp, #0x90
    ff78:	mov	x1, x19
    ff7c:	cmp	x8, x20
    ff80:	csel	x2, x26, x28, eq  // eq = none
    ff84:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ff88:	cmp	x21, x20
    ff8c:	csel	x2, x29, x28, eq  // eq = none
    ff90:	add	x0, sp, #0x90
    ff94:	mov	x1, x19
    ff98:	add	x24, x25, x20
    ff9c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ffa0:	ldrb	w8, [x24, #-2]!
    ffa4:	sub	w8, w8, #0x1
    ffa8:	cmp	w8, #0xf
    ffac:	b.hi	ffdc <__hwasan_memmove@@Base+0x1e5c>  // b.pmore
    ffb0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
    ffb4:	ldr	x8, [x8, #3840]
    ffb8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
    ffbc:	add	x0, sp, #0x90
    ffc0:	add	x1, x1, #0x2ef
    ffc4:	ldr	x8, [x8]
    ffc8:	sub	x8, x24, x8
    ffcc:	lsl	x8, x8, #4
    ffd0:	ldrb	w2, [x8, #15]
    ffd4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ffd8:	b	ffec <__hwasan_memmove@@Base+0x1e6c>
    ffdc:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
    ffe0:	add	x0, sp, #0x90
    ffe4:	add	x1, x1, #0xcce
    ffe8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
    ffec:	cmp	x21, x20
    fff0:	csel	x2, x26, x28, eq  // eq = none
    fff4:	add	x0, sp, #0x90
    fff8:	mov	x1, x19
    fffc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10000:	ldr	x8, [sp, #48]
   10004:	add	x0, sp, #0x90
   10008:	mov	x1, x19
   1000c:	add	x24, x25, x20
   10010:	cmp	x8, x20
   10014:	csel	x2, x29, x28, eq  // eq = none
   10018:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   1001c:	ldrb	w8, [x24, #-1]!
   10020:	sub	w8, w8, #0x1
   10024:	cmp	w8, #0xf
   10028:	b.hi	f7f4 <__hwasan_memmove@@Base+0x1674>  // b.pmore
   1002c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10030:	ldr	x8, [x8, #3840]
   10034:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   10038:	add	x0, sp, #0x90
   1003c:	add	x1, x1, #0x2ef
   10040:	ldr	x8, [x8]
   10044:	sub	x8, x24, x8
   10048:	lsl	x8, x8, #4
   1004c:	ldrb	w2, [x8, #15]
   10050:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10054:	b	f804 <__hwasan_memmove@@Base+0x1684>
   10058:	ldr	x1, [sp, #144]
   1005c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10060:	add	x0, x0, #0xba0
   10064:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10068:	ldp	x0, x1, [sp, #144]
   1006c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   10070:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10074:	add	x0, x0, #0x2f1
   10078:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1007c:	ldp	x20, x19, [sp, #256]
   10080:	ldp	x22, x21, [sp, #240]
   10084:	ldp	x24, x23, [sp, #224]
   10088:	ldp	x26, x25, [sp, #208]
   1008c:	ldp	x28, x27, [sp, #192]
   10090:	ldp	x29, x30, [sp, #176]
   10094:	add	sp, sp, #0x110
   10098:	ret
   1009c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   100a0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   100a4:	add	x0, x0, #0x8be
   100a8:	add	x2, x2, #0x1eb
   100ac:	mov	w1, #0x1c5                 	// #453
   100b0:	mov	x3, xzr
   100b4:	mov	x4, xzr
   100b8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   100bc:	sub	sp, sp, #0xc0
   100c0:	str	x30, [sp, #96]
   100c4:	stp	x28, x27, [sp, #112]
   100c8:	stp	x26, x25, [sp, #128]
   100cc:	stp	x24, x23, [sp, #144]
   100d0:	stp	x22, x21, [sp, #160]
   100d4:	stp	x20, x19, [sp, #176]
   100d8:	mov	x21, x3
   100dc:	mov	x23, x2
   100e0:	mov	x20, x1
   100e4:	mov	x19, x0
   100e8:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   100ec:	ldrb	w1, [x0, #4]
   100f0:	add	x0, sp, #0x38
   100f4:	bl	1097c <__hwasan_memmove@@Base+0x27fc>
   100f8:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   100fc:	adrp	x27, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   10100:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10104:	add	x27, x27, #0xcf
   10108:	add	x8, x8, #0x23d
   1010c:	tst	w0, #0x1
   10110:	mov	w25, w0
   10114:	csel	x1, x8, x27, ne  // ne = any
   10118:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1011c:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10120:	add	x0, x0, #0xba0
   10124:	add	x8, x8, #0x207
   10128:	and	x20, x20, #0xffffffffffffff
   1012c:	csel	x24, x8, x27, ne  // ne = any
   10130:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10134:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10138:	ldr	x26, [x26, #4024]
   1013c:	add	x22, x20, x23
   10140:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10144:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10148:	ldr	x1, [x26]
   1014c:	add	x2, x2, #0xd09
   10150:	add	x0, x0, #0xd25
   10154:	mov	x3, x20
   10158:	mov	x4, x22
   1015c:	mov	x5, x23
   10160:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   10164:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10168:	add	x0, x0, #0xb9f
   1016c:	mov	x1, x24
   10170:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10174:	mov	x0, x19
   10178:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   1017c:	mov	x0, x20
   10180:	bl	9080 <__sanitizer_print_stack_trace@@Base+0x828>
   10184:	stp	x0, x1, [sp, #40]
   10188:	add	x0, sp, #0x28
   1018c:	bl	8db8 <__sanitizer_print_stack_trace@@Base+0x560>
   10190:	cbz	x0, 101ec <__hwasan_memmove@@Base+0x206c>
   10194:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10198:	tst	w25, #0x1
   1019c:	adrp	x25, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   101a0:	add	x8, x8, #0x210
   101a4:	add	x25, x25, #0xba0
   101a8:	csel	x1, x8, x27, ne  // ne = any
   101ac:	mov	x0, x25
   101b0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   101b4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   101b8:	add	x0, x0, #0x53b
   101bc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   101c0:	mov	x0, x25
   101c4:	mov	x1, x24
   101c8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   101cc:	add	x0, sp, #0x28
   101d0:	bl	8e34 <__sanitizer_print_stack_trace@@Base+0x5dc>
   101d4:	cbz	w0, 104c8 <__hwasan_memmove@@Base+0x2348>
   101d8:	bl	2385c <__sanitizer_cov_pcs_init@@Base+0x628>
   101dc:	cbz	x0, 104e0 <__hwasan_memmove@@Base+0x2360>
   101e0:	stp	x0, x1, [sp, #8]
   101e4:	add	x0, sp, #0x8
   101e8:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   101ec:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   101f0:	ldr	x24, [x24, #4016]
   101f4:	ldr	x0, [x24]
   101f8:	cbz	x0, 10228 <__hwasan_memmove@@Base+0x20a8>
   101fc:	lsl	x24, x0, #3
   10200:	stp	xzr, xzr, [sp, #16]
   10204:	str	xzr, [sp, #8]
   10208:	cbz	x24, 10240 <__hwasan_memmove@@Base+0x20c0>
   1020c:	add	x0, sp, #0x8
   10210:	mov	x1, x24
   10214:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   10218:	ldr	x8, [sp, #24]
   1021c:	cmp	x8, x24
   10220:	b.cc	1024c <__hwasan_memmove@@Base+0x20cc>  // b.lo, b.ul, b.last
   10224:	b	1027c <__hwasan_memmove@@Base+0x20fc>
   10228:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1022c:	str	x0, [x24]
   10230:	lsl	x24, x0, #3
   10234:	stp	xzr, xzr, [sp, #16]
   10238:	str	xzr, [sp, #8]
   1023c:	cbnz	x24, 1020c <__hwasan_memmove@@Base+0x208c>
   10240:	mov	x8, xzr
   10244:	cmp	x8, x24
   10248:	b.cs	1027c <__hwasan_memmove@@Base+0x20fc>  // b.hs, b.nlast
   1024c:	ldr	x9, [sp, #16]
   10250:	cmp	x9, x24
   10254:	b.cs	10268 <__hwasan_memmove@@Base+0x20e8>  // b.hs, b.nlast
   10258:	add	x0, sp, #0x8
   1025c:	mov	x1, x24
   10260:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   10264:	ldr	x8, [sp, #24]
   10268:	ldr	x9, [sp, #8]
   1026c:	sub	x2, x24, x8
   10270:	mov	w1, wzr
   10274:	add	x0, x9, x8
   10278:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1027c:	stp	x24, xzr, [sp, #24]
   10280:	cbz	x24, 10490 <__hwasan_memmove@@Base+0x2310>
   10284:	ldr	x8, [sp, #8]
   10288:	mov	w9, #0x10                  	// #16
   1028c:	and	x25, x23, #0xf
   10290:	sub	x23, x9, x25
   10294:	strb	wzr, [x8]
   10298:	cbz	x25, 104a8 <__hwasan_memmove@@Base+0x2328>
   1029c:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   102a0:	add	x1, x1, #0xd9b
   102a4:	add	x0, sp, #0x8
   102a8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   102ac:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   102b0:	add	x24, x24, #0xdab
   102b4:	mov	x27, x25
   102b8:	add	x0, sp, #0x8
   102bc:	mov	x1, x24
   102c0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   102c4:	subs	x27, x27, #0x1
   102c8:	b.ne	102b8 <__hwasan_memmove@@Base+0x2138>  // b.any
   102cc:	cbz	x23, 102f8 <__hwasan_memmove@@Base+0x2178>
   102d0:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   102d4:	orr	x27, x25, #0xfffffffffffffff0
   102d8:	add	x24, x24, #0xdaf
   102dc:	mov	x28, x22
   102e0:	ldrb	w2, [x28], #1
   102e4:	add	x0, sp, #0x8
   102e8:	mov	x1, x24
   102ec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   102f0:	adds	x27, x27, #0x1
   102f4:	b.cc	102e0 <__hwasan_memmove@@Base+0x2160>  // b.lo, b.ul, b.last
   102f8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   102fc:	add	x1, x1, #0xce
   10300:	add	x0, sp, #0x8
   10304:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10308:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1030c:	add	x1, x1, #0xdb5
   10310:	add	x0, sp, #0x8
   10314:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10318:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1031c:	mov	x27, xzr
   10320:	add	x24, x24, #0xdab
   10324:	add	x0, sp, #0x8
   10328:	mov	x1, x24
   1032c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10330:	add	x27, x27, #0x1
   10334:	cmp	x27, x25
   10338:	b.cc	10324 <__hwasan_memmove@@Base+0x21a4>  // b.lo, b.ul, b.last
   1033c:	cbz	x23, 10368 <__hwasan_memmove@@Base+0x21e8>
   10340:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10344:	orr	x27, x25, #0xfffffffffffffff0
   10348:	add	x24, x24, #0xdaf
   1034c:	mov	x28, x21
   10350:	ldrb	w2, [x28], #1
   10354:	add	x0, sp, #0x8
   10358:	mov	x1, x24
   1035c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10360:	adds	x27, x27, #0x1
   10364:	b.cc	10350 <__hwasan_memmove@@Base+0x21d0>  // b.lo, b.ul, b.last
   10368:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   1036c:	add	x1, x1, #0xce
   10370:	add	x0, sp, #0x8
   10374:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10378:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1037c:	add	x1, x1, #0xdc5
   10380:	add	x0, sp, #0x8
   10384:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10388:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1038c:	mov	x27, xzr
   10390:	add	x24, x24, #0xdd1
   10394:	add	x0, sp, #0x8
   10398:	mov	x1, x24
   1039c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   103a0:	add	x27, x27, #0x1
   103a4:	cmp	x27, x25
   103a8:	b.cc	10394 <__hwasan_memmove@@Base+0x2214>  // b.lo, b.ul, b.last
   103ac:	cbz	x23, 103f0 <__hwasan_memmove@@Base+0x2270>
   103b0:	orr	x24, x25, #0xfffffffffffffff0
   103b4:	adrp	x25, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   103b8:	adrp	x27, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   103bc:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   103c0:	add	x25, x25, #0xdd5
   103c4:	add	x27, x27, #0xdd2
   103c8:	add	x23, x23, #0xd32
   103cc:	ldrb	w8, [x21], #1
   103d0:	ldrb	w9, [x22], #1
   103d4:	add	x0, sp, #0x8
   103d8:	mov	x1, x23
   103dc:	cmp	w8, w9
   103e0:	csel	x2, x27, x25, eq  // eq = none
   103e4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   103e8:	adds	x24, x24, #0x1
   103ec:	b.cc	103cc <__hwasan_memmove@@Base+0x224c>  // b.lo, b.ul, b.last
   103f0:	ldr	x3, [x26]
   103f4:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   103f8:	add	x1, x1, #0xdd8
   103fc:	add	x0, sp, #0x8
   10400:	mov	w2, #0x10                  	// #16
   10404:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   10408:	ldr	x1, [sp, #8]
   1040c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10410:	add	x0, x0, #0xba0
   10414:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10418:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   1041c:	ldrb	w8, [x0, #2684]
   10420:	cbnz	w8, 10438 <__hwasan_memmove@@Base+0x22b8>
   10424:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10428:	mov	w8, #0x1                   	// #1
   1042c:	add	x1, x1, #0x37e
   10430:	strb	w8, [x0, #2684]
   10434:	bl	11090 <__hwasan_tag_mismatch_v2@@Base+0x440>
   10438:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1043c:	ldr	x8, [x8, #3840]
   10440:	ldr	x8, [x8]
   10444:	add	x0, x8, x20, lsr #4
   10448:	bl	f0e4 <__hwasan_memmove@@Base+0xf64>
   1044c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10450:	add	x0, x0, #0xd09
   10454:	mov	x1, x19
   10458:	mov	x2, xzr
   1045c:	bl	283f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>
   10460:	ldp	x0, x1, [sp, #8]
   10464:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   10468:	add	x0, sp, #0x38
   1046c:	bl	10a44 <__hwasan_memmove@@Base+0x28c4>
   10470:	ldp	x20, x19, [sp, #176]
   10474:	ldp	x22, x21, [sp, #160]
   10478:	ldp	x24, x23, [sp, #144]
   1047c:	ldp	x26, x25, [sp, #128]
   10480:	ldp	x28, x27, [sp, #112]
   10484:	ldr	x30, [sp, #96]
   10488:	add	sp, sp, #0xc0
   1048c:	ret
   10490:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   10494:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10498:	add	x0, x0, #0x8be
   1049c:	add	x2, x2, #0x1eb
   104a0:	mov	w1, #0x1c5                 	// #453
   104a4:	b	104f4 <__hwasan_memmove@@Base+0x2374>
   104a8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   104ac:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   104b0:	add	x0, x0, #0xd55
   104b4:	add	x2, x2, #0x3c
   104b8:	mov	w1, #0x1cd                 	// #461
   104bc:	mov	w4, #0x10                  	// #16
   104c0:	mov	x3, x23
   104c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   104c8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   104cc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   104d0:	add	x0, x0, #0xd55
   104d4:	add	x2, x2, #0x21a
   104d8:	mov	w1, #0x53                  	// #83
   104dc:	b	104f4 <__hwasan_memmove@@Base+0x2374>
   104e0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   104e4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   104e8:	add	x0, x0, #0xd55
   104ec:	add	x2, x2, #0x228
   104f0:	mov	w1, #0x55                  	// #85
   104f4:	mov	x3, xzr
   104f8:	mov	x4, xzr
   104fc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10500:	sub	sp, sp, #0xa0
   10504:	stp	x29, x30, [sp, #64]
   10508:	stp	x28, x27, [sp, #80]
   1050c:	stp	x26, x25, [sp, #96]
   10510:	stp	x24, x23, [sp, #112]
   10514:	stp	x22, x21, [sp, #128]
   10518:	stp	x20, x19, [sp, #144]
   1051c:	mov	x21, x1
   10520:	mov	x19, x0
   10524:	and	w1, w4, #0x1
   10528:	add	x0, sp, #0x18
   1052c:	mov	x23, x5
   10530:	mov	w26, w3
   10534:	mov	x22, x2
   10538:	bl	1097c <__hwasan_memmove@@Base+0x27fc>
   1053c:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   10540:	ldr	x20, [x0, #2656]
   10544:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10548:	add	x2, x2, #0x387
   1054c:	ldr	x8, [x20]
   10550:	lsr	x8, x8, #56
   10554:	lsl	x1, x8, #13
   10558:	lsl	x0, x8, #12
   1055c:	bl	1b59c <__sanitizer_set_report_fd@@Base+0x4f58>
   10560:	ldr	x8, [x20]
   10564:	mov	x24, x0
   10568:	lsr	x9, x8, #44
   1056c:	and	x25, x9, #0xff000
   10570:	neg	x9, x25
   10574:	and	x8, x8, x9
   10578:	and	x1, x8, #0xfffffffffff000
   1057c:	mov	x2, x25
   10580:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   10584:	add	x0, sp, #0x10
   10588:	mov	x1, x24
   1058c:	mov	x2, x25
   10590:	bl	10ac0 <__hwasan_memmove@@Base+0x2940>
   10594:	ldr	x8, [x20]
   10598:	lsr	x10, x8, #44
   1059c:	and	x10, x10, #0xff000
   105a0:	neg	x10, x10
   105a4:	and	x9, x8, #0xffffffffffffff
   105a8:	and	x8, x8, x10
   105ac:	ldrb	w10, [sp, #23]
   105b0:	and	x8, x8, #0xfffffffffff000
   105b4:	sub	x8, x9, x8
   105b8:	add	x8, x24, x8
   105bc:	orr	x8, x8, x10, lsl #56
   105c0:	str	x8, [sp, #16]
   105c4:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   105c8:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   105cc:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   105d0:	mov	w25, w0
   105d4:	add	x9, x9, #0xcf
   105d8:	add	x8, x8, #0x23d
   105dc:	tst	w0, #0x1
   105e0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   105e4:	csel	x1, x8, x9, ne  // ne = any
   105e8:	add	x0, x0, #0xba0
   105ec:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   105f0:	ldr	w8, [x19, #8]
   105f4:	and	x28, x21, #0xffffffffffffff
   105f8:	mov	w24, w26
   105fc:	str	x23, [sp, #8]
   10600:	cbz	w8, 10610 <__hwasan_memmove@@Base+0x2490>
   10604:	ldr	x8, [x19]
   10608:	ldr	x4, [x8]
   1060c:	b	10614 <__hwasan_memmove@@Base+0x2494>
   10610:	mov	x4, xzr
   10614:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10618:	ldr	x8, [x8, #4024]
   1061c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10620:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10624:	add	x0, x0, #0xcc8
   10628:	ldr	x1, [x8]
   1062c:	add	x2, x2, #0xf42
   10630:	mov	x3, x28
   10634:	str	x4, [sp]
   10638:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1063c:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   10640:	mov	x26, x0
   10644:	mov	x0, x21
   10648:	mov	x1, x22
   1064c:	bl	6c80 <__hwasan_test_shadow@plt>
   10650:	tbnz	x0, #63, 107c0 <__hwasan_memmove@@Base+0x2640>
   10654:	mov	x29, x0
   10658:	cmp	x0, x22
   1065c:	b.ge	107c0 <__hwasan_memmove@@Base+0x2640>  // b.tcont
   10660:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10664:	ldr	x8, [x8, #3840]
   10668:	add	x9, x29, x28
   1066c:	tst	w25, #0x1
   10670:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10674:	ldr	x8, [x8]
   10678:	add	x0, x0, #0xba0
   1067c:	lsr	x20, x21, #56
   10680:	add	x27, x8, x9, lsr #4
   10684:	ldrb	w23, [x27]
   10688:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1068c:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   10690:	add	x8, x8, #0x247
   10694:	add	x9, x9, #0xcf
   10698:	csel	x1, x8, x9, ne  // ne = any
   1069c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   106a0:	ldr	x6, [x26, #2672]
   106a4:	adrp	x8, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   106a8:	adrp	x9, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   106ac:	add	x8, x8, #0xfd6
   106b0:	add	x9, x9, #0xfd0
   106b4:	tst	w24, #0x1
   106b8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   106bc:	csel	x1, x9, x8, ne  // ne = any
   106c0:	add	x0, x0, #0xf91
   106c4:	mov	x2, x22
   106c8:	mov	x3, x28
   106cc:	mov	w4, w20
   106d0:	mov	w5, w23
   106d4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   106d8:	cbz	x29, 106f8 <__hwasan_memmove@@Base+0x2578>
   106dc:	add	x8, x29, #0x10
   106e0:	cmp	x8, x22
   106e4:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   106e8:	csel	x2, x22, x8, hi  // hi = pmore
   106ec:	add	x0, x0, #0xfdb
   106f0:	mov	x1, x29
   106f4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   106f8:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   106fc:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   10700:	add	x8, x8, #0x207
   10704:	tst	w25, #0x1
   10708:	add	x9, x9, #0xcf
   1070c:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   10710:	csel	x1, x8, x9, ne  // ne = any
   10714:	add	x0, x0, #0xba0
   10718:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1071c:	mov	x0, x19
   10720:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   10724:	add	x2, sp, #0x10
   10728:	mov	x0, x21
   1072c:	bl	e520 <__hwasan_memmove@@Base+0x3a0>
   10730:	ldrb	w8, [x26, #2684]
   10734:	cbnz	w8, 10750 <__hwasan_memmove@@Base+0x25d0>
   10738:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1073c:	mov	w8, #0x1                   	// #1
   10740:	add	x1, x1, #0x37e
   10744:	mov	x0, x26
   10748:	strb	w8, [x26, #2684]
   1074c:	bl	11090 <__hwasan_tag_mismatch_v2@@Base+0x440>
   10750:	mov	x0, x27
   10754:	bl	f0e4 <__hwasan_memmove@@Base+0xf64>
   10758:	ldr	x0, [sp, #8]
   1075c:	cbz	x0, 10768 <__hwasan_memmove@@Base+0x25e8>
   10760:	ldr	x1, [sp]
   10764:	bl	107e0 <__hwasan_memmove@@Base+0x2660>
   10768:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1076c:	add	x0, x0, #0xf42
   10770:	mov	x1, x19
   10774:	mov	x2, xzr
   10778:	bl	283f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>
   1077c:	ldr	x8, [sp, #16]
   10780:	lsr	x9, x8, #44
   10784:	and	x1, x9, #0xff000
   10788:	neg	x9, x1
   1078c:	and	x8, x8, x9
   10790:	and	x0, x8, #0xfffffffffff000
   10794:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   10798:	add	x0, sp, #0x18
   1079c:	bl	10a44 <__hwasan_memmove@@Base+0x28c4>
   107a0:	ldp	x20, x19, [sp, #144]
   107a4:	ldp	x22, x21, [sp, #128]
   107a8:	ldp	x24, x23, [sp, #112]
   107ac:	ldp	x26, x25, [sp, #96]
   107b0:	ldp	x28, x27, [sp, #80]
   107b4:	ldp	x29, x30, [sp, #64]
   107b8:	add	sp, sp, #0xa0
   107bc:	ret
   107c0:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   107c4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   107c8:	add	x0, x0, #0xd55
   107cc:	add	x2, x2, #0xf4f
   107d0:	mov	w1, #0x205                 	// #517
   107d4:	mov	x3, xzr
   107d8:	mov	x4, xzr
   107dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   107e0:	stp	x30, x19, [sp, #-16]!
   107e4:	mov	x19, x0
   107e8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   107ec:	add	x0, x0, #0x9
   107f0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   107f4:	ldp	x1, x2, [x19]
   107f8:	ldp	x3, x4, [x19, #16]
   107fc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10800:	add	x0, x0, #0x38
   10804:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10808:	ldp	x1, x2, [x19, #32]
   1080c:	ldp	x3, x4, [x19, #48]
   10810:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10814:	add	x0, x0, #0x70
   10818:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1081c:	ldp	x1, x2, [x19, #64]
   10820:	ldp	x3, x4, [x19, #80]
   10824:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10828:	add	x0, x0, #0xa8
   1082c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10830:	ldp	x1, x2, [x19, #96]
   10834:	ldp	x3, x4, [x19, #112]
   10838:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1083c:	add	x0, x0, #0xe0
   10840:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10844:	ldp	x1, x2, [x19, #128]
   10848:	ldp	x3, x4, [x19, #144]
   1084c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10850:	add	x0, x0, #0x118
   10854:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10858:	ldp	x1, x2, [x19, #160]
   1085c:	ldp	x3, x4, [x19, #176]
   10860:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10864:	add	x0, x0, #0x150
   10868:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1086c:	ldp	x1, x2, [x19, #192]
   10870:	ldp	x3, x4, [x19, #208]
   10874:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10878:	add	x0, x0, #0x188
   1087c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10880:	ldp	x1, x2, [x19, #224]
   10884:	ldr	x3, [x19, #240]
   10888:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1088c:	add	x0, x0, #0x1c0
   10890:	ldp	x30, x19, [sp], #16
   10894:	b	1ca54 <__sanitizer_on_print@@Base+0x4>
   10898:	str	x30, [sp, #-64]!
   1089c:	stp	x24, x23, [sp, #16]
   108a0:	stp	x22, x21, [sp, #32]
   108a4:	stp	x20, x19, [sp, #48]
   108a8:	mov	x19, x0
   108ac:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   108b0:	add	x0, x0, #0xab0
   108b4:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   108b8:	adrp	x23, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   108bc:	ldr	x8, [x23, #2728]
   108c0:	cbz	x8, 10948 <__hwasan_memmove@@Base+0x27c8>
   108c4:	mov	x0, x19
   108c8:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   108cc:	ldr	x21, [x23, #2728]
   108d0:	mov	x20, x0
   108d4:	ldr	x24, [x21, #16]
   108d8:	mov	x8, x21
   108dc:	add	x22, x24, x0
   108e0:	cmp	x24, x22
   108e4:	b.cs	10920 <__hwasan_memmove@@Base+0x27a0>  // b.hs, b.nlast
   108e8:	ldr	x8, [x21, #8]
   108ec:	cmp	x8, x22
   108f0:	mov	x8, x24
   108f4:	b.cs	10908 <__hwasan_memmove@@Base+0x2788>  // b.hs, b.nlast
   108f8:	mov	x0, x21
   108fc:	mov	x1, x22
   10900:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   10904:	ldr	x8, [x21, #16]
   10908:	ldr	x9, [x21]
   1090c:	sub	x2, x22, x8
   10910:	mov	w1, wzr
   10914:	add	x0, x9, x8
   10918:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1091c:	ldr	x8, [x23, #2728]
   10920:	str	x22, [x21, #16]
   10924:	ldr	x4, [x8, #16]
   10928:	sub	x3, x24, #0x1
   1092c:	cmp	x4, x3
   10930:	b.ls	10964 <__hwasan_memmove@@Base+0x27e4>  // b.plast
   10934:	ldr	x8, [x8]
   10938:	mov	x1, x19
   1093c:	mov	x2, x20
   10940:	add	x0, x8, x3
   10944:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   10948:	ldp	x20, x19, [sp, #48]
   1094c:	ldp	x22, x21, [sp, #32]
   10950:	ldp	x24, x23, [sp, #16]
   10954:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10958:	add	x0, x0, #0xab0
   1095c:	ldr	x30, [sp], #64
   10960:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   10964:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   10968:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1096c:	add	x0, x0, #0x8be
   10970:	add	x2, x2, #0x1eb
   10974:	mov	w1, #0x1c5                 	// #453
   10978:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1097c:	str	x30, [sp, #-48]!
   10980:	stp	x22, x21, [sp, #16]
   10984:	stp	x20, x19, [sp, #32]
   10988:	mov	w19, w1
   1098c:	mov	x21, x0
   10990:	and	w22, w1, #0x1
   10994:	bl	28ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   10998:	mov	x20, x21
   1099c:	str	xzr, [x20, #8]!
   109a0:	mov	w1, #0x1                   	// #1
   109a4:	mov	x0, x20
   109a8:	stp	xzr, xzr, [x20, #8]
   109ac:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   109b0:	ldr	x8, [x20, #16]
   109b4:	cbnz	x8, 109f0 <__hwasan_memmove@@Base+0x2870>
   109b8:	ldr	x8, [x21, #16]
   109bc:	cbz	x8, 109c8 <__hwasan_memmove@@Base+0x2848>
   109c0:	mov	x8, xzr
   109c4:	b	109d8 <__hwasan_memmove@@Base+0x2858>
   109c8:	mov	w1, #0x1                   	// #1
   109cc:	mov	x0, x20
   109d0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   109d4:	ldr	x8, [x21, #24]
   109d8:	ldr	x9, [x20]
   109dc:	mov	w10, #0x1                   	// #1
   109e0:	sub	x2, x10, x8
   109e4:	mov	w1, wzr
   109e8:	add	x0, x9, x8
   109ec:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   109f0:	mov	w8, #0x1                   	// #1
   109f4:	str	x8, [x21, #24]
   109f8:	strb	w22, [x21, #32]
   109fc:	adrp	x21, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10a00:	add	x21, x21, #0xab0
   10a04:	mov	x0, x21
   10a08:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   10a0c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10a10:	ldr	x8, [x8, #3856]
   10a14:	tst	w19, #0x1
   10a18:	csel	x10, x20, xzr, ne  // ne = any
   10a1c:	adrp	x11, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10a20:	ldr	w9, [x8]
   10a24:	str	x10, [x11, #2728]
   10a28:	mov	x0, x21
   10a2c:	add	w9, w9, #0x1
   10a30:	str	w9, [x8]
   10a34:	ldp	x20, x19, [sp, #32]
   10a38:	ldp	x22, x21, [sp, #16]
   10a3c:	ldr	x30, [sp], #48
   10a40:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   10a44:	stp	x30, x19, [sp, #-16]!
   10a48:	mov	x19, x0
   10a4c:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10a50:	add	x0, x0, #0xab0
   10a54:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   10a58:	ldrb	w8, [x19, #32]
   10a5c:	cbz	w8, 10a68 <__hwasan_memmove@@Base+0x28e8>
   10a60:	ldr	x0, [x19, #8]
   10a64:	bl	20fe8 <__sanitizer_sandbox_on_notify@@Base+0x968>
   10a68:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10a6c:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10a70:	add	x0, x0, #0xab0
   10a74:	str	xzr, [x8, #2728]
   10a78:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   10a7c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   10a80:	ldr	x8, [x8, #4056]
   10a84:	ldr	w8, [x8, #64]
   10a88:	cmp	w8, #0x1
   10a8c:	b.gt	10a9c <__hwasan_memmove@@Base+0x291c>
   10a90:	ldrb	w9, [x19, #32]
   10a94:	cbz	w9, 10aa8 <__hwasan_memmove@@Base+0x2928>
   10a98:	cbz	w8, 10abc <__hwasan_memmove@@Base+0x293c>
   10a9c:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
   10aa0:	ldrb	w8, [x19, #32]
   10aa4:	cbnz	w8, 10abc <__hwasan_memmove@@Base+0x293c>
   10aa8:	ldp	x0, x1, [x19, #8]
   10aac:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   10ab0:	mov	x0, x19
   10ab4:	ldp	x30, x19, [sp], #16
   10ab8:	b	28fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4340>
   10abc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   10ac0:	str	x30, [sp, #-16]!
   10ac4:	sub	x9, x2, #0x1
   10ac8:	tst	x2, x9
   10acc:	b.ne	10b1c <__hwasan_memmove@@Base+0x299c>  // b.any
   10ad0:	mov	x8, x2
   10ad4:	cmp	x2, #0xfff
   10ad8:	b.ls	10b3c <__hwasan_memmove@@Base+0x29bc>  // b.plast
   10adc:	cmp	x8, #0x80, lsl #12
   10ae0:	b.hi	10b5c <__hwasan_memmove@@Base+0x29dc>  // b.pmore
   10ae4:	ands	x3, x8, #0xfff
   10ae8:	b.ne	10b7c <__hwasan_memmove@@Base+0x29fc>  // b.any
   10aec:	ands	x3, x8, #0x7
   10af0:	b.ne	10b98 <__hwasan_memmove@@Base+0x2a18>  // b.any
   10af4:	lsl	x9, x8, #1
   10af8:	udiv	x10, x1, x9
   10afc:	msub	x3, x10, x9, x1
   10b00:	cbnz	x3, 10bb4 <__hwasan_memmove@@Base+0x2a34>
   10b04:	lsl	x8, x8, #44
   10b08:	and	x8, x8, #0xff00000000000000
   10b0c:	orr	x8, x8, x1
   10b10:	str	x8, [x0]
   10b14:	ldr	x30, [sp], #16
   10b18:	ret
   10b1c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b20:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b24:	add	x0, x0, #0x39f
   10b28:	add	x2, x2, #0x3ff
   10b2c:	mov	w1, #0x5f                  	// #95
   10b30:	mov	x3, xzr
   10b34:	mov	x4, xzr
   10b38:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10b3c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b40:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b44:	add	x0, x0, #0x39f
   10b48:	add	x2, x2, #0x41d
   10b4c:	mov	w1, #0x60                  	// #96
   10b50:	mov	w4, #0x1000                	// #4096
   10b54:	mov	x3, x8
   10b58:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10b5c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b60:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b64:	add	x0, x0, #0x39f
   10b68:	add	x2, x2, #0x440
   10b6c:	mov	w1, #0x61                  	// #97
   10b70:	mov	w4, #0x80000               	// #524288
   10b74:	mov	x3, x8
   10b78:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10b7c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b80:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b84:	add	x0, x0, #0x39f
   10b88:	add	x2, x2, #0x465
   10b8c:	mov	w1, #0x62                  	// #98
   10b90:	mov	x4, xzr
   10b94:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10b98:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10b9c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10ba0:	add	x0, x0, #0x39f
   10ba4:	add	x2, x2, #0x47e
   10ba8:	mov	w1, #0x63                  	// #99
   10bac:	mov	x4, xzr
   10bb0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10bb4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10bb8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10bbc:	add	x0, x0, #0x39f
   10bc0:	add	x2, x2, #0x49c
   10bc4:	mov	w1, #0x64                  	// #100
   10bc8:	mov	x4, xzr
   10bcc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000010bd0 <__interceptor_setjmp@@Base>:
   10bd0:	mov	x1, #0x0                   	// #0
   10bd4:	b	6bc0 <__interceptor_sigsetjmp@plt>

0000000000010bd8 <__interceptor_sigsetjmp@@Base>:
   10bd8:	stp	x19, x20, [x0]
   10bdc:	stp	x21, x22, [x0, #16]
   10be0:	stp	x23, x24, [x0, #32]
   10be4:	stp	x25, x26, [x0, #48]
   10be8:	stp	x27, x28, [x0, #64]
   10bec:	stp	x29, x30, [x0, #80]
   10bf0:	stp	d8, d9, [x0, #112]
   10bf4:	stp	d10, d11, [x0, #128]
   10bf8:	stp	d12, d13, [x0, #144]
   10bfc:	stp	d14, d15, [x0, #160]
   10c00:	mov	x2, sp
   10c04:	str	x2, [x0, #104]
   10c08:	b	cd7c <__interceptor_pthread_create@@Base+0xf8>

0000000000010c0c <__hwasan_tag_mismatch@@Base>:
   10c0c:	mov	x16, #0x1                   	// #1
   10c10:	and	x17, x1, #0xf
   10c14:	lsl	x16, x16, x17
   10c18:	and	x17, x0, #0xf
   10c1c:	add	x17, x16, x17
   10c20:	ubfx	x16, x0, #4, #52
   10c24:	ldrb	w16, [x9, x16]
   10c28:	cmp	w16, #0xf
   10c2c:	b.hi	10c50 <__hwasan_tag_mismatch_v2@@Base>  // b.pmore
   10c30:	cmp	w16, w17
   10c34:	b.cc	10c50 <__hwasan_tag_mismatch_v2@@Base>  // b.lo, b.ul, b.last
   10c38:	orr	x16, x0, #0xf
   10c3c:	ldrb	w16, [x16]
   10c40:	cmp	x16, x0, lsr #56
   10c44:	b.ne	10c50 <__hwasan_tag_mismatch_v2@@Base>  // b.any
   10c48:	ldp	x0, x1, [sp], #256
   10c4c:	ret

0000000000010c50 <__hwasan_tag_mismatch_v2@@Base>:
   10c50:	add	x29, sp, #0xe8
   10c54:	str	x28, [sp, #224]
   10c58:	stp	x26, x27, [sp, #208]
   10c5c:	stp	x24, x25, [sp, #192]
   10c60:	stp	x22, x23, [sp, #176]
   10c64:	stp	x20, x21, [sp, #160]
   10c68:	stp	x18, x19, [sp, #144]
   10c6c:	stp	x16, x17, [sp, #128]
   10c70:	stp	x14, x15, [sp, #112]
   10c74:	stp	x12, x13, [sp, #96]
   10c78:	stp	x10, x11, [sp, #80]
   10c7c:	stp	x8, x9, [sp, #64]
   10c80:	stp	x6, x7, [sp, #48]
   10c84:	stp	x4, x5, [sp, #32]
   10c88:	stp	x2, x3, [sp, #16]
   10c8c:	mov	x2, sp
   10c90:	bl	6c10 <__hwasan_tag_mismatch4@plt>
   10c94:	stp	x29, x30, [sp, #-32]!
   10c98:	str	x19, [sp, #16]
   10c9c:	mov	x29, sp
   10ca0:	mov	x19, x0
   10ca4:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   10ca8:	ldrb	w8, [x0, #7]
   10cac:	cbz	w8, 10cfc <__hwasan_tag_mismatch_v2@@Base+0xac>
   10cb0:	add	x0, x29, #0x1c
   10cb4:	mov	w1, #0x4                   	// #4
   10cb8:	mov	w2, wzr
   10cbc:	bl	1aee4 <__sanitizer_set_report_fd@@Base+0x48a0>
   10cc0:	tbz	w0, #0, 10cd0 <__hwasan_tag_mismatch_v2@@Base+0x80>
   10cc4:	ldr	w8, [x29, #28]
   10cc8:	cbz	w8, 10cb0 <__hwasan_tag_mismatch_v2@@Base+0x60>
   10ccc:	b	10ce8 <__hwasan_tag_mismatch_v2@@Base+0x98>
   10cd0:	bl	19ce4 <__sanitizer_set_report_fd@@Base+0x36a0>
   10cd4:	lsr	x8, x0, #12
   10cd8:	lsr	x9, x29, #4
   10cdc:	eor	w8, w9, w8
   10ce0:	str	w8, [x29, #28]
   10ce4:	cbz	w8, 10cb0 <__hwasan_tag_mismatch_v2@@Base+0x60>
   10ce8:	mov	w8, w8
   10cec:	ldr	w9, [x19, #2680]
   10cf0:	str	w8, [x19, #48]
   10cf4:	cbnz	w9, 10db0 <__hwasan_tag_mismatch_v2@@Base+0x160>
   10cf8:	b	10d24 <__hwasan_tag_mismatch_v2@@Base+0xd4>
   10cfc:	ldr	x8, [x19, #2672]
   10d00:	ldr	w9, [x19, #2680]
   10d04:	str	w8, [x19, #48]
   10d08:	cbnz	w9, 10db0 <__hwasan_tag_mismatch_v2@@Base+0x160>
   10d0c:	b	10d24 <__hwasan_tag_mismatch_v2@@Base+0xd4>
   10d10:	and	w8, w9, #0xff
   10d14:	lsr	w9, w9, #8
   10d18:	str	w9, [x19, #52]
   10d1c:	tst	w8, #0xff
   10d20:	b.ne	10d6c <__hwasan_tag_mismatch_v2@@Base+0x11c>  // b.any
   10d24:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   10d28:	ldrb	w8, [x0, #7]
   10d2c:	cbz	w8, 10d54 <__hwasan_tag_mismatch_v2@@Base+0x104>
   10d30:	ldr	w9, [x19, #52]
   10d34:	cbnz	w9, 10d10 <__hwasan_tag_mismatch_v2@@Base+0xc0>
   10d38:	ldr	w8, [x19, #48]
   10d3c:	eor	w8, w8, w8, lsl #13
   10d40:	eor	w8, w8, w8, lsr #17
   10d44:	eor	w9, w8, w8, lsl #5
   10d48:	stp	w9, w9, [x19, #48]
   10d4c:	cbnz	w9, 10d10 <__hwasan_tag_mismatch_v2@@Base+0xc0>
   10d50:	b	10dbc <__hwasan_tag_mismatch_v2@@Base+0x16c>
   10d54:	ldr	w8, [x19, #48]
   10d58:	add	w8, w8, #0x1
   10d5c:	and	w9, w8, #0xff
   10d60:	str	w9, [x19, #48]
   10d64:	tst	w8, #0xff
   10d68:	b.eq	10d24 <__hwasan_tag_mismatch_v2@@Base+0xd4>  // b.none
   10d6c:	ldr	x9, [x19, #2656]
   10d70:	mov	w10, wzr
   10d74:	ldr	x11, [x9]
   10d78:	and	x11, x11, #0xffffffffffffff
   10d7c:	str	xzr, [x11], #8
   10d80:	ldr	x12, [x9]
   10d84:	add	w10, w10, #0x1
   10d88:	and	w13, w10, #0xff
   10d8c:	cmp	w13, w8, uxtb
   10d90:	lsr	x14, x12, #44
   10d94:	mvn	w14, w14
   10d98:	orr	x14, x14, #0xfffffffffff00fff
   10d9c:	and	x12, x12, #0xff00000000000000
   10da0:	and	x11, x11, x14
   10da4:	orr	x11, x11, x12
   10da8:	str	x11, [x9]
   10dac:	b.ne	10d78 <__hwasan_tag_mismatch_v2@@Base+0x128>  // b.any
   10db0:	ldr	x19, [sp, #16]
   10db4:	ldp	x29, x30, [sp], #32
   10db8:	ret
   10dbc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10dc0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10dc4:	add	x0, x0, #0x626
   10dc8:	add	x2, x2, #0x784
   10dcc:	mov	w1, #0x75                  	// #117
   10dd0:	mov	x3, xzr
   10dd4:	mov	x4, xzr
   10dd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10ddc:	stp	x30, x19, [sp, #-16]!
   10de0:	ldr	w8, [x0, #2680]
   10de4:	cbz	w8, 10df4 <__hwasan_tag_mismatch_v2@@Base+0x1a4>
   10de8:	mov	w0, wzr
   10dec:	ldp	x30, x19, [sp], #16
   10df0:	ret
   10df4:	mov	x19, x0
   10df8:	b	10e10 <__hwasan_tag_mismatch_v2@@Base+0x1c0>
   10dfc:	and	w0, w8, #0xff
   10e00:	lsr	w8, w8, #8
   10e04:	str	w8, [x19, #52]
   10e08:	tst	w0, #0xff
   10e0c:	b.ne	10e58 <__hwasan_tag_mismatch_v2@@Base+0x208>  // b.any
   10e10:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   10e14:	ldrb	w8, [x0, #7]
   10e18:	cbz	w8, 10e40 <__hwasan_tag_mismatch_v2@@Base+0x1f0>
   10e1c:	ldr	w8, [x19, #52]
   10e20:	cbnz	w8, 10dfc <__hwasan_tag_mismatch_v2@@Base+0x1ac>
   10e24:	ldr	w8, [x19, #48]
   10e28:	eor	w8, w8, w8, lsl #13
   10e2c:	eor	w8, w8, w8, lsr #17
   10e30:	eor	w8, w8, w8, lsl #5
   10e34:	stp	w8, w8, [x19, #48]
   10e38:	cbnz	w8, 10dfc <__hwasan_tag_mismatch_v2@@Base+0x1ac>
   10e3c:	b	10e60 <__hwasan_tag_mismatch_v2@@Base+0x210>
   10e40:	ldr	w8, [x19, #48]
   10e44:	add	w0, w8, #0x1
   10e48:	and	w8, w0, #0xff
   10e4c:	str	w8, [x19, #48]
   10e50:	tst	w0, #0xff
   10e54:	b.eq	10e10 <__hwasan_tag_mismatch_v2@@Base+0x1c0>  // b.none
   10e58:	ldp	x30, x19, [sp], #16
   10e5c:	ret
   10e60:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10e64:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10e68:	add	x0, x0, #0x626
   10e6c:	add	x2, x2, #0x784
   10e70:	mov	w1, #0x75                  	// #117
   10e74:	mov	x3, xzr
   10e78:	mov	x4, xzr
   10e7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   10e80:	sub	sp, sp, #0x50
   10e84:	str	x30, [sp, #32]
   10e88:	stp	x22, x21, [sp, #48]
   10e8c:	stp	x20, x19, [sp, #64]
   10e90:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   10e94:	ldr	x9, [x8, #2824]
   10e98:	mov	x20, x2
   10e9c:	mov	x21, x1
   10ea0:	mov	x19, x0
   10ea4:	add	x10, x9, #0x1
   10ea8:	str	x10, [x8, #2824]
   10eac:	str	x9, [x0, #2672]
   10eb0:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   10eb4:	ldrsw	x8, [x0, #28]
   10eb8:	cbz	w8, 10ee8 <__hwasan_tag_mismatch_v2@@Base+0x298>
   10ebc:	add	x8, x8, x8, lsl #1
   10ec0:	lsl	x22, x8, #3
   10ec4:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10ec8:	add	x0, x22, #0x10
   10ecc:	add	x1, x1, #0x79e
   10ed0:	mov	w2, wzr
   10ed4:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   10ed8:	add	x8, x22, x0
   10edc:	sub	x8, x8, #0x8
   10ee0:	stp	x8, x8, [x0]
   10ee4:	str	x0, [x19, #2648]
   10ee8:	bl	d8dc <__hwasan_thread_exit@@Base+0x7c>
   10eec:	bl	da30 <__hwasan_thread_exit@@Base+0x1d0>
   10ef0:	mov	x1, x21
   10ef4:	mov	x2, x20
   10ef8:	mov	x22, x0
   10efc:	bl	10ac0 <__hwasan_memmove@@Base+0x2940>
   10f00:	str	x22, [x19, #2656]
   10f04:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   10f08:	cmp	x0, x19
   10f0c:	b.ne	11038 <__hwasan_tag_mismatch_v2@@Base+0x3e8>  // b.any
   10f10:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   10f14:	ldr	w8, [x0, #2680]
   10f18:	add	x1, x19, #0x10
   10f1c:	add	x3, x19, #0x18
   10f20:	add	x2, sp, #0x18
   10f24:	add	w8, w8, #0x1
   10f28:	str	w8, [x0, #2680]
   10f2c:	ldr	x8, [x19, #2672]
   10f30:	add	x4, sp, #0x28
   10f34:	cmp	x8, #0x0
   10f38:	cset	w0, eq  // eq = none
   10f3c:	bl	20a48 <__sanitizer_sandbox_on_notify@@Base+0x3c8>
   10f40:	ldr	x8, [sp, #24]
   10f44:	ldp	x0, x9, [x19, #16]
   10f48:	add	x8, x8, x0
   10f4c:	str	x8, [x19, #8]
   10f50:	ldr	x10, [sp, #40]
   10f54:	add	x9, x10, x9
   10f58:	str	x9, [x19, #32]
   10f5c:	cbz	x0, 10f8c <__hwasan_tag_mismatch_v2@@Base+0x33c>
   10f60:	add	x9, sp, #0x14
   10f64:	cmp	x0, x9
   10f68:	b.hi	11020 <__hwasan_tag_mismatch_v2@@Base+0x3d0>  // b.pmore
   10f6c:	cmp	x8, x9
   10f70:	b.ls	11020 <__hwasan_tag_mismatch_v2@@Base+0x3d0>  // b.plast
   10f74:	bl	d778 <__interceptor_vfork@@Base+0x734>
   10f78:	tbz	w0, #0, 11058 <__hwasan_tag_mismatch_v2@@Base+0x408>
   10f7c:	ldr	x8, [x19, #8]
   10f80:	sub	x0, x8, #0x1
   10f84:	bl	d778 <__interceptor_vfork@@Base+0x734>
   10f88:	tbz	w0, #0, 11070 <__hwasan_tag_mismatch_v2@@Base+0x420>
   10f8c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   10f90:	ldrb	w8, [x0]
   10f94:	cbz	w8, 10ffc <__hwasan_tag_mismatch_v2@@Base+0x3ac>
   10f98:	ldr	x2, [x19, #2672]
   10f9c:	cbnz	x2, 10fd4 <__hwasan_tag_mismatch_v2@@Base+0x384>
   10fa0:	ldr	x8, [x19, #2648]
   10fa4:	ldr	x9, [x19, #2656]
   10fa8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10fac:	add	x0, x0, #0x6fd
   10fb0:	ldr	x10, [x8]
   10fb4:	ldr	x9, [x9]
   10fb8:	mov	w1, #0xa80                 	// #2688
   10fbc:	sub	x8, x10, x8
   10fc0:	lsr	x9, x9, #44
   10fc4:	add	x2, x8, #0x18
   10fc8:	and	x3, x9, #0xff000
   10fcc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10fd0:	ldr	x2, [x19, #2672]
   10fd4:	ldp	x5, x4, [x19, #8]
   10fd8:	ldp	x7, x8, [x19, #24]
   10fdc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10fe0:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   10fe4:	sub	x6, x5, x4
   10fe8:	add	x0, x0, #0x755
   10fec:	add	x1, x1, #0x73b
   10ff0:	mov	x3, x19
   10ff4:	str	x8, [sp]
   10ff8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   10ffc:	bl	d8a8 <__hwasan_thread_exit@@Base+0x48>
   11000:	ldr	w8, [x0, #2680]
   11004:	ldr	x30, [sp, #32]
   11008:	sub	w8, w8, #0x1
   1100c:	str	w8, [x0, #2680]
   11010:	ldp	x20, x19, [sp, #64]
   11014:	ldp	x22, x21, [sp, #48]
   11018:	add	sp, sp, #0x50
   1101c:	ret
   11020:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11024:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11028:	add	x0, x0, #0x626
   1102c:	add	x2, x2, #0x68f
   11030:	mov	w1, #0x3f                  	// #63
   11034:	b	11084 <__hwasan_tag_mismatch_v2@@Base+0x434>
   11038:	mov	x3, x0
   1103c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11040:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11044:	add	x0, x0, #0x626
   11048:	add	x2, x2, #0x66c
   1104c:	mov	w1, #0x31                  	// #49
   11050:	mov	x4, x19
   11054:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11058:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1105c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11060:	add	x0, x0, #0x626
   11064:	add	x2, x2, #0x6b6
   11068:	mov	w1, #0x40                  	// #64
   1106c:	b	11084 <__hwasan_tag_mismatch_v2@@Base+0x434>
   11070:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11074:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11078:	add	x0, x0, #0x626
   1107c:	add	x2, x2, #0x6d9
   11080:	mov	w1, #0x41                  	// #65
   11084:	mov	x3, xzr
   11088:	mov	x4, xzr
   1108c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11090:	sub	sp, sp, #0x20
   11094:	str	x30, [sp, #16]
   11098:	ldp	x5, x4, [x0, #8]
   1109c:	ldr	x2, [x0, #2672]
   110a0:	ldp	x7, x8, [x0, #24]
   110a4:	mov	x3, x0
   110a8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   110ac:	sub	x6, x5, x4
   110b0:	add	x0, x0, #0x755
   110b4:	str	x8, [sp]
   110b8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   110bc:	ldr	x30, [sp, #16]
   110c0:	add	sp, sp, #0x20
   110c4:	ret
   110c8:	stp	x30, x19, [sp, #-16]!
   110cc:	mov	x19, x0
   110d0:	ldp	x8, x0, [x0, #8]
   110d4:	subs	x1, x8, x0
   110d8:	b.eq	110e4 <__hwasan_tag_mismatch_v2@@Base+0x494>  // b.none
   110dc:	mov	w2, wzr
   110e0:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
   110e4:	ldp	x0, x8, [x19, #24]
   110e8:	subs	x1, x8, x0
   110ec:	b.ne	110f8 <__hwasan_tag_mismatch_v2@@Base+0x4a8>  // b.any
   110f0:	ldp	x30, x19, [sp], #16
   110f4:	ret
   110f8:	mov	w2, wzr
   110fc:	ldp	x30, x19, [sp], #16
   11100:	b	e420 <__hwasan_memmove@@Base+0x2a0>
   11104:	sub	sp, sp, #0x20
   11108:	stp	x30, x19, [sp, #16]
   1110c:	mov	x19, x0
   11110:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   11114:	ldrb	w8, [x0]
   11118:	cbz	w8, 11148 <__hwasan_tag_mismatch_v2@@Base+0x4f8>
   1111c:	ldp	x5, x4, [x19, #8]
   11120:	ldr	x2, [x19, #2672]
   11124:	ldp	x7, x8, [x19, #24]
   11128:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1112c:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11130:	sub	x6, x5, x4
   11134:	add	x0, x0, #0x755
   11138:	add	x1, x1, #0x748
   1113c:	mov	x3, x19
   11140:	str	x8, [sp]
   11144:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   11148:	add	x0, x19, #0x38
   1114c:	bl	9008 <__sanitizer_print_stack_trace@@Base+0x7b0>
   11150:	ldp	x8, x0, [x19, #8]
   11154:	subs	x1, x8, x0
   11158:	b.ne	1118c <__hwasan_tag_mismatch_v2@@Base+0x53c>  // b.any
   1115c:	ldp	x0, x8, [x19, #24]
   11160:	subs	x1, x8, x0
   11164:	b.ne	111a0 <__hwasan_tag_mismatch_v2@@Base+0x550>  // b.any
   11168:	ldr	x0, [x19, #2648]
   1116c:	cbz	x0, 11180 <__hwasan_tag_mismatch_v2@@Base+0x530>
   11170:	ldr	x8, [x0]
   11174:	sub	x8, x8, x0
   11178:	add	x1, x8, #0x18
   1117c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   11180:	ldp	x30, x19, [sp, #16]
   11184:	add	sp, sp, #0x20
   11188:	b	1eafc <__sanitizer_on_print@@Base+0x20ac>
   1118c:	mov	w2, wzr
   11190:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
   11194:	ldp	x0, x8, [x19, #24]
   11198:	subs	x1, x8, x0
   1119c:	b.eq	11168 <__hwasan_tag_mismatch_v2@@Base+0x518>  // b.none
   111a0:	mov	w2, wzr
   111a4:	bl	e420 <__hwasan_memmove@@Base+0x2a0>
   111a8:	ldr	x0, [x19, #2648]
   111ac:	cbnz	x0, 11170 <__hwasan_tag_mismatch_v2@@Base+0x520>
   111b0:	b	11180 <__hwasan_tag_mismatch_v2@@Base+0x530>
   111b4:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   111b8:	ldr	x0, [x8, #2832]
   111bc:	ret
   111c0:	str	x30, [sp, #-32]!
   111c4:	stp	x20, x19, [sp, #16]
   111c8:	adrp	x8, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   111cc:	ldr	x8, [x8, #2832]
   111d0:	cbnz	x8, 11200 <__hwasan_tag_mismatch_v2@@Base+0x5b0>
   111d4:	adrp	x20, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   111d8:	add	x20, x20, #0xb10
   111dc:	add	x19, x20, #0x10
   111e0:	mov	x2, x1
   111e4:	mov	x1, x0
   111e8:	mov	x0, x19
   111ec:	bl	11220 <__hwasan_tag_mismatch_v2@@Base+0x5d0>
   111f0:	str	x19, [x20]
   111f4:	ldp	x20, x19, [sp, #16]
   111f8:	ldr	x30, [sp], #32
   111fc:	ret
   11200:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11204:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11208:	add	x0, x0, #0x7a9
   1120c:	add	x2, x2, #0x7f4
   11210:	mov	w1, #0xa                   	// #10
   11214:	mov	x3, xzr
   11218:	mov	x4, xzr
   1121c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11220:	stp	x30, x19, [sp, #-16]!
   11224:	add	x8, x2, x1
   11228:	mov	x19, x0
   1122c:	stp	xzr, xzr, [x0, #32]
   11230:	stp	x1, x8, [x0]
   11234:	strb	wzr, [x0, #48]
   11238:	strb	wzr, [x0, #72]
   1123c:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   11240:	ldrsw	x8, [x0, #36]
   11244:	lsl	x8, x8, #3
   11248:	cmp	x8, #0x2, lsl #12
   1124c:	b.ls	11280 <__hwasan_tag_mismatch_v2@@Base+0x630>  // b.plast
   11250:	cmp	x8, #0x4, lsl #12
   11254:	b.ls	11288 <__hwasan_tag_mismatch_v2@@Base+0x638>  // b.plast
   11258:	cmp	x8, #0x8, lsl #12
   1125c:	b.ls	11290 <__hwasan_tag_mismatch_v2@@Base+0x640>  // b.plast
   11260:	cmp	x8, #0x10, lsl #12
   11264:	b.ls	11298 <__hwasan_tag_mismatch_v2@@Base+0x648>  // b.plast
   11268:	cmp	x8, #0x20, lsl #12
   1126c:	b.ls	112a0 <__hwasan_tag_mismatch_v2@@Base+0x650>  // b.plast
   11270:	cmp	x8, #0x40, lsl #12
   11274:	b.hi	112ec <__hwasan_tag_mismatch_v2@@Base+0x69c>  // b.pmore
   11278:	mov	w8, #0x40000               	// #262144
   1127c:	b	112a4 <__hwasan_tag_mismatch_v2@@Base+0x654>
   11280:	mov	w8, #0x2000                	// #8192
   11284:	b	112a4 <__hwasan_tag_mismatch_v2@@Base+0x654>
   11288:	mov	w8, #0x4000                	// #16384
   1128c:	b	112a4 <__hwasan_tag_mismatch_v2@@Base+0x654>
   11290:	mov	w8, #0x8000                	// #32768
   11294:	b	112a4 <__hwasan_tag_mismatch_v2@@Base+0x654>
   11298:	mov	w8, #0x10000               	// #65536
   1129c:	b	112a4 <__hwasan_tag_mismatch_v2@@Base+0x654>
   112a0:	mov	w8, #0x20000               	// #131072
   112a4:	lsl	x9, x8, #1
   112a8:	sub	x10, x9, #0x1
   112ac:	tst	x9, x10
   112b0:	str	x8, [x19, #16]
   112b4:	b.ne	112dc <__hwasan_tag_mismatch_v2@@Base+0x68c>  // b.any
   112b8:	mov	w10, #0xa80                 	// #2688
   112bc:	orr	x8, x8, x10
   112c0:	add	x8, x8, x9
   112c4:	sub	x8, x8, #0x1
   112c8:	neg	x9, x9
   112cc:	and	x8, x8, x9
   112d0:	str	x8, [x19, #24]
   112d4:	ldp	x30, x19, [sp], #16
   112d8:	ret
   112dc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   112e0:	add	x0, x0, #0x20f
   112e4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   112e8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   112ec:	bl	6ffc <__sanitizer_print_memory_profile@plt+0x19c>
   112f0:	ldr	w1, [x0, #36]
   112f4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   112f8:	add	x0, x0, #0x81d
   112fc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   11300:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   11304:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11308:	add	x0, x0, #0x154
   1130c:	add	x2, x2, #0x83f
   11310:	mov	w1, #0x41                  	// #65
   11314:	mov	x3, xzr
   11318:	mov	x4, xzr
   1131c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000011320 <_Znwm@@Base>:
   11320:	stp	x29, x30, [sp, #-32]!
   11324:	stp	x28, x19, [sp, #16]
   11328:	mov	x29, sp
   1132c:	sub	sp, sp, #0x820
   11330:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11334:	ldr	x9, [x9, #3904]
   11338:	add	x8, sp, #0x8
   1133c:	mov	x19, x0
   11340:	add	x8, x8, #0x10
   11344:	ldr	w9, [x9]
   11348:	stp	x8, xzr, [sp, #8]
   1134c:	str	xzr, [sp, #2072]
   11350:	cbz	w9, 113a8 <_Znwm@@Base+0x88>
   11354:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   11358:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1135c:	ldr	x8, [x8, #4056]
   11360:	mov	x1, x0
   11364:	ldr	w5, [x8, #36]
   11368:	ldrb	w8, [x8, #34]
   1136c:	cmp	w5, #0x0
   11370:	csel	x9, xzr, x29, eq  // eq = none
   11374:	cmp	w5, #0x1
   11378:	str	x9, [sp, #2072]
   1137c:	b.hi	11390 <_Znwm@@Base+0x70>  // b.pmore
   11380:	b.ne	11388 <_Znwm@@Base+0x68>  // b.any
   11384:	str	x1, [sp, #24]
   11388:	str	w5, [sp, #16]
   1138c:	b	113a8 <_Znwm@@Base+0x88>
   11390:	cmp	w8, #0x0
   11394:	cset	w4, ne  // ne = any
   11398:	add	x0, sp, #0x8
   1139c:	mov	x2, x29
   113a0:	mov	x3, xzr
   113a4:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   113a8:	add	x1, sp, #0x8
   113ac:	mov	x0, x19
   113b0:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
   113b4:	cbz	x0, 113c8 <_Znwm@@Base+0xa8>
   113b8:	add	sp, sp, #0x820
   113bc:	ldp	x28, x19, [sp, #16]
   113c0:	ldp	x29, x30, [sp], #32
   113c4:	ret
   113c8:	add	x1, sp, #0x8
   113cc:	mov	x0, x19
   113d0:	bl	23674 <__sanitizer_cov_pcs_init@@Base+0x440>

00000000000113d4 <_Znam@@Base>:
   113d4:	stp	x29, x30, [sp, #-32]!
   113d8:	stp	x28, x19, [sp, #16]
   113dc:	mov	x29, sp
   113e0:	sub	sp, sp, #0x820
   113e4:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   113e8:	ldr	x9, [x9, #3904]
   113ec:	add	x8, sp, #0x8
   113f0:	mov	x19, x0
   113f4:	add	x8, x8, #0x10
   113f8:	ldr	w9, [x9]
   113fc:	stp	x8, xzr, [sp, #8]
   11400:	str	xzr, [sp, #2072]
   11404:	cbz	w9, 1145c <_Znam@@Base+0x88>
   11408:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   1140c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11410:	ldr	x8, [x8, #4056]
   11414:	mov	x1, x0
   11418:	ldr	w5, [x8, #36]
   1141c:	ldrb	w8, [x8, #34]
   11420:	cmp	w5, #0x0
   11424:	csel	x9, xzr, x29, eq  // eq = none
   11428:	cmp	w5, #0x1
   1142c:	str	x9, [sp, #2072]
   11430:	b.hi	11444 <_Znam@@Base+0x70>  // b.pmore
   11434:	b.ne	1143c <_Znam@@Base+0x68>  // b.any
   11438:	str	x1, [sp, #24]
   1143c:	str	w5, [sp, #16]
   11440:	b	1145c <_Znam@@Base+0x88>
   11444:	cmp	w8, #0x0
   11448:	cset	w4, ne  // ne = any
   1144c:	add	x0, sp, #0x8
   11450:	mov	x2, x29
   11454:	mov	x3, xzr
   11458:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   1145c:	add	x1, sp, #0x8
   11460:	mov	x0, x19
   11464:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
   11468:	cbz	x0, 1147c <_Znam@@Base+0xa8>
   1146c:	add	sp, sp, #0x820
   11470:	ldp	x28, x19, [sp, #16]
   11474:	ldp	x29, x30, [sp], #32
   11478:	ret
   1147c:	add	x1, sp, #0x8
   11480:	mov	x0, x19
   11484:	bl	23674 <__sanitizer_cov_pcs_init@@Base+0x440>

0000000000011488 <_ZnwmRKSt9nothrow_t@@Base>:
   11488:	stp	x29, x30, [sp, #-32]!
   1148c:	stp	x28, x19, [sp, #16]
   11490:	mov	x29, sp
   11494:	sub	sp, sp, #0x820
   11498:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1149c:	ldr	x9, [x9, #3904]
   114a0:	add	x8, sp, #0x8
   114a4:	mov	x19, x0
   114a8:	add	x8, x8, #0x10
   114ac:	ldr	w9, [x9]
   114b0:	stp	x8, xzr, [sp, #8]
   114b4:	str	xzr, [sp, #2072]
   114b8:	cbz	w9, 11510 <_ZnwmRKSt9nothrow_t@@Base+0x88>
   114bc:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   114c0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   114c4:	ldr	x8, [x8, #4056]
   114c8:	mov	x1, x0
   114cc:	ldr	w5, [x8, #36]
   114d0:	ldrb	w8, [x8, #34]
   114d4:	cmp	w5, #0x0
   114d8:	csel	x9, xzr, x29, eq  // eq = none
   114dc:	cmp	w5, #0x1
   114e0:	str	x9, [sp, #2072]
   114e4:	b.hi	114f8 <_ZnwmRKSt9nothrow_t@@Base+0x70>  // b.pmore
   114e8:	b.ne	114f0 <_ZnwmRKSt9nothrow_t@@Base+0x68>  // b.any
   114ec:	str	x1, [sp, #24]
   114f0:	str	w5, [sp, #16]
   114f4:	b	11510 <_ZnwmRKSt9nothrow_t@@Base+0x88>
   114f8:	cmp	w8, #0x0
   114fc:	cset	w4, ne  // ne = any
   11500:	add	x0, sp, #0x8
   11504:	mov	x2, x29
   11508:	mov	x3, xzr
   1150c:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   11510:	add	x1, sp, #0x8
   11514:	mov	x0, x19
   11518:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
   1151c:	add	sp, sp, #0x820
   11520:	ldp	x28, x19, [sp, #16]
   11524:	ldp	x29, x30, [sp], #32
   11528:	ret

000000000001152c <_ZnamRKSt9nothrow_t@@Base>:
   1152c:	stp	x29, x30, [sp, #-32]!
   11530:	stp	x28, x19, [sp, #16]
   11534:	mov	x29, sp
   11538:	sub	sp, sp, #0x820
   1153c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11540:	ldr	x9, [x9, #3904]
   11544:	add	x8, sp, #0x8
   11548:	mov	x19, x0
   1154c:	add	x8, x8, #0x10
   11550:	ldr	w9, [x9]
   11554:	stp	x8, xzr, [sp, #8]
   11558:	str	xzr, [sp, #2072]
   1155c:	cbz	w9, 115b4 <_ZnamRKSt9nothrow_t@@Base+0x88>
   11560:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   11564:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11568:	ldr	x8, [x8, #4056]
   1156c:	mov	x1, x0
   11570:	ldr	w5, [x8, #36]
   11574:	ldrb	w8, [x8, #34]
   11578:	cmp	w5, #0x0
   1157c:	csel	x9, xzr, x29, eq  // eq = none
   11580:	cmp	w5, #0x1
   11584:	str	x9, [sp, #2072]
   11588:	b.hi	1159c <_ZnamRKSt9nothrow_t@@Base+0x70>  // b.pmore
   1158c:	b.ne	11594 <_ZnamRKSt9nothrow_t@@Base+0x68>  // b.any
   11590:	str	x1, [sp, #24]
   11594:	str	w5, [sp, #16]
   11598:	b	115b4 <_ZnamRKSt9nothrow_t@@Base+0x88>
   1159c:	cmp	w8, #0x0
   115a0:	cset	w4, ne  // ne = any
   115a4:	add	x0, sp, #0x8
   115a8:	mov	x2, x29
   115ac:	mov	x3, xzr
   115b0:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   115b4:	add	x1, sp, #0x8
   115b8:	mov	x0, x19
   115bc:	bl	9178 <__sanitizer_print_stack_trace@@Base+0x920>
   115c0:	add	sp, sp, #0x820
   115c4:	ldp	x28, x19, [sp, #16]
   115c8:	ldp	x29, x30, [sp], #32
   115cc:	ret

00000000000115d0 <_ZdlPv@@Base>:
   115d0:	stp	x29, x30, [sp, #-32]!
   115d4:	stp	x28, x19, [sp, #16]
   115d8:	mov	x29, sp
   115dc:	sub	sp, sp, #0x820
   115e0:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   115e4:	ldr	x9, [x9, #3904]
   115e8:	add	x8, sp, #0x8
   115ec:	mov	x19, x0
   115f0:	add	x8, x8, #0x10
   115f4:	ldr	w9, [x9]
   115f8:	stp	x8, xzr, [sp, #8]
   115fc:	str	xzr, [sp, #2072]
   11600:	cbz	w9, 1163c <_ZdlPv@@Base+0x6c>
   11604:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   11608:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1160c:	ldr	x8, [x8, #4056]
   11610:	mov	x1, x0
   11614:	ldr	w5, [x8, #36]
   11618:	ldrb	w8, [x8, #34]
   1161c:	cmp	w5, #0x0
   11620:	csel	x9, xzr, x29, eq  // eq = none
   11624:	cmp	w5, #0x1
   11628:	str	x9, [sp, #2072]
   1162c:	b.hi	1165c <_ZdlPv@@Base+0x8c>  // b.pmore
   11630:	b.ne	11638 <_ZdlPv@@Base+0x68>  // b.any
   11634:	str	x1, [sp, #24]
   11638:	str	w5, [sp, #16]
   1163c:	cbz	x19, 1164c <_ZdlPv@@Base+0x7c>
   11640:	add	x1, sp, #0x8
   11644:	mov	x0, x19
   11648:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
   1164c:	add	sp, sp, #0x820
   11650:	ldp	x28, x19, [sp, #16]
   11654:	ldp	x29, x30, [sp], #32
   11658:	ret
   1165c:	cmp	w8, #0x0
   11660:	cset	w4, ne  // ne = any
   11664:	add	x0, sp, #0x8
   11668:	mov	x2, x29
   1166c:	mov	x3, xzr
   11670:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   11674:	cbnz	x19, 11640 <_ZdlPv@@Base+0x70>
   11678:	b	1164c <_ZdlPv@@Base+0x7c>

000000000001167c <_ZdaPv@@Base>:
   1167c:	stp	x29, x30, [sp, #-32]!
   11680:	stp	x28, x19, [sp, #16]
   11684:	mov	x29, sp
   11688:	sub	sp, sp, #0x820
   1168c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11690:	ldr	x9, [x9, #3904]
   11694:	add	x8, sp, #0x8
   11698:	mov	x19, x0
   1169c:	add	x8, x8, #0x10
   116a0:	ldr	w9, [x9]
   116a4:	stp	x8, xzr, [sp, #8]
   116a8:	str	xzr, [sp, #2072]
   116ac:	cbz	w9, 116e8 <_ZdaPv@@Base+0x6c>
   116b0:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   116b4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   116b8:	ldr	x8, [x8, #4056]
   116bc:	mov	x1, x0
   116c0:	ldr	w5, [x8, #36]
   116c4:	ldrb	w8, [x8, #34]
   116c8:	cmp	w5, #0x0
   116cc:	csel	x9, xzr, x29, eq  // eq = none
   116d0:	cmp	w5, #0x1
   116d4:	str	x9, [sp, #2072]
   116d8:	b.hi	11708 <_ZdaPv@@Base+0x8c>  // b.pmore
   116dc:	b.ne	116e4 <_ZdaPv@@Base+0x68>  // b.any
   116e0:	str	x1, [sp, #24]
   116e4:	str	w5, [sp, #16]
   116e8:	cbz	x19, 116f8 <_ZdaPv@@Base+0x7c>
   116ec:	add	x1, sp, #0x8
   116f0:	mov	x0, x19
   116f4:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
   116f8:	add	sp, sp, #0x820
   116fc:	ldp	x28, x19, [sp, #16]
   11700:	ldp	x29, x30, [sp], #32
   11704:	ret
   11708:	cmp	w8, #0x0
   1170c:	cset	w4, ne  // ne = any
   11710:	add	x0, sp, #0x8
   11714:	mov	x2, x29
   11718:	mov	x3, xzr
   1171c:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   11720:	cbnz	x19, 116ec <_ZdaPv@@Base+0x70>
   11724:	b	116f8 <_ZdaPv@@Base+0x7c>

0000000000011728 <_ZdlPvRKSt9nothrow_t@@Base>:
   11728:	stp	x29, x30, [sp, #-32]!
   1172c:	stp	x28, x19, [sp, #16]
   11730:	mov	x29, sp
   11734:	sub	sp, sp, #0x820
   11738:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1173c:	ldr	x9, [x9, #3904]
   11740:	add	x8, sp, #0x8
   11744:	mov	x19, x0
   11748:	add	x8, x8, #0x10
   1174c:	ldr	w9, [x9]
   11750:	stp	x8, xzr, [sp, #8]
   11754:	str	xzr, [sp, #2072]
   11758:	cbz	w9, 11794 <_ZdlPvRKSt9nothrow_t@@Base+0x6c>
   1175c:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   11760:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11764:	ldr	x8, [x8, #4056]
   11768:	mov	x1, x0
   1176c:	ldr	w5, [x8, #36]
   11770:	ldrb	w8, [x8, #34]
   11774:	cmp	w5, #0x0
   11778:	csel	x9, xzr, x29, eq  // eq = none
   1177c:	cmp	w5, #0x1
   11780:	str	x9, [sp, #2072]
   11784:	b.hi	117b4 <_ZdlPvRKSt9nothrow_t@@Base+0x8c>  // b.pmore
   11788:	b.ne	11790 <_ZdlPvRKSt9nothrow_t@@Base+0x68>  // b.any
   1178c:	str	x1, [sp, #24]
   11790:	str	w5, [sp, #16]
   11794:	cbz	x19, 117a4 <_ZdlPvRKSt9nothrow_t@@Base+0x7c>
   11798:	add	x1, sp, #0x8
   1179c:	mov	x0, x19
   117a0:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
   117a4:	add	sp, sp, #0x820
   117a8:	ldp	x28, x19, [sp, #16]
   117ac:	ldp	x29, x30, [sp], #32
   117b0:	ret
   117b4:	cmp	w8, #0x0
   117b8:	cset	w4, ne  // ne = any
   117bc:	add	x0, sp, #0x8
   117c0:	mov	x2, x29
   117c4:	mov	x3, xzr
   117c8:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   117cc:	cbnz	x19, 11798 <_ZdlPvRKSt9nothrow_t@@Base+0x70>
   117d0:	b	117a4 <_ZdlPvRKSt9nothrow_t@@Base+0x7c>

00000000000117d4 <_ZdaPvRKSt9nothrow_t@@Base>:
   117d4:	stp	x29, x30, [sp, #-32]!
   117d8:	stp	x28, x19, [sp, #16]
   117dc:	mov	x29, sp
   117e0:	sub	sp, sp, #0x820
   117e4:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   117e8:	ldr	x9, [x9, #3904]
   117ec:	add	x8, sp, #0x8
   117f0:	mov	x19, x0
   117f4:	add	x8, x8, #0x10
   117f8:	ldr	w9, [x9]
   117fc:	stp	x8, xzr, [sp, #8]
   11800:	str	xzr, [sp, #2072]
   11804:	cbz	w9, 11840 <_ZdaPvRKSt9nothrow_t@@Base+0x6c>
   11808:	bl	242b0 <__sanitizer_cov_pcs_init@@Base+0x107c>
   1180c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11810:	ldr	x8, [x8, #4056]
   11814:	mov	x1, x0
   11818:	ldr	w5, [x8, #36]
   1181c:	ldrb	w8, [x8, #34]
   11820:	cmp	w5, #0x0
   11824:	csel	x9, xzr, x29, eq  // eq = none
   11828:	cmp	w5, #0x1
   1182c:	str	x9, [sp, #2072]
   11830:	b.hi	11860 <_ZdaPvRKSt9nothrow_t@@Base+0x8c>  // b.pmore
   11834:	b.ne	1183c <_ZdaPvRKSt9nothrow_t@@Base+0x68>  // b.any
   11838:	str	x1, [sp, #24]
   1183c:	str	w5, [sp, #16]
   11840:	cbz	x19, 11850 <_ZdaPvRKSt9nothrow_t@@Base+0x7c>
   11844:	add	x1, sp, #0x8
   11848:	mov	x0, x19
   1184c:	bl	9d5c <__sanitizer_print_stack_trace@@Base+0x1504>
   11850:	add	sp, sp, #0x820
   11854:	ldp	x28, x19, [sp, #16]
   11858:	ldp	x29, x30, [sp], #32
   1185c:	ret
   11860:	cmp	w8, #0x0
   11864:	cset	w4, ne  // ne = any
   11868:	add	x0, sp, #0x8
   1186c:	mov	x2, x29
   11870:	mov	x3, xzr
   11874:	bl	704c <__sanitizer_print_memory_profile@plt+0x1ec>
   11878:	cbnz	x19, 11844 <_ZdaPvRKSt9nothrow_t@@Base+0x70>
   1187c:	b	11850 <_ZdaPvRKSt9nothrow_t@@Base+0x7c>
   11880:	str	x30, [sp, #-48]!
   11884:	stp	x22, x21, [sp, #16]
   11888:	stp	x20, x19, [sp, #32]
   1188c:	mov	x22, x0
   11890:	mov	x19, x1
   11894:	mov	x0, #0xffffffffffffffff    	// #-1
   11898:	mov	x1, x22
   1189c:	mov	x20, x3
   118a0:	mov	x21, x2
   118a4:	bl	6ae0 <dlsym@plt>
   118a8:	cbnz	x0, 118bc <_ZdaPvRKSt9nothrow_t@@Base+0xe8>
   118ac:	mov	x1, x22
   118b0:	bl	6ae0 <dlsym@plt>
   118b4:	cmp	x0, x20
   118b8:	csel	x0, xzr, x0, eq  // eq = none
   118bc:	cmp	x0, #0x0
   118c0:	str	x0, [x19]
   118c4:	cset	w8, ne  // ne = any
   118c8:	cmp	x21, x20
   118cc:	ldp	x20, x19, [sp, #32]
   118d0:	ldp	x22, x21, [sp, #16]
   118d4:	cset	w9, eq  // eq = none
   118d8:	and	w8, w9, w8
   118dc:	mov	w0, w8
   118e0:	ldr	x30, [sp], #48
   118e4:	ret
   118e8:	stp	x30, x21, [sp, #-32]!
   118ec:	stp	x20, x19, [sp, #16]
   118f0:	mov	x21, x2
   118f4:	mov	x2, x1
   118f8:	mov	x1, x0
   118fc:	mov	x0, #0xffffffffffffffff    	// #-1
   11900:	mov	x19, x4
   11904:	mov	x20, x3
   11908:	bl	6a60 <dlvsym@plt>
   1190c:	cmp	x0, #0x0
   11910:	str	x0, [x21]
   11914:	cset	w8, ne  // ne = any
   11918:	cmp	x20, x19
   1191c:	ldp	x20, x19, [sp, #16]
   11920:	cset	w9, eq  // eq = none
   11924:	and	w8, w9, w8
   11928:	mov	w0, w8
   1192c:	ldp	x30, x21, [sp], #32
   11930:	ret
   11934:	stp	x30, x21, [sp, #-32]!
   11938:	stp	x20, x19, [sp, #16]
   1193c:	adrp	x21, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   11940:	ldrb	w8, [x21, #1016]
   11944:	dmb	ish
   11948:	cbnz	w8, 11a3c <_ZdaPvRKSt9nothrow_t@@Base+0x268>
   1194c:	adrp	x19, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11950:	adrp	x8, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   11954:	add	x19, x19, #0xb80
   11958:	add	x8, x8, #0x3fc
   1195c:	mov	w9, #0x1                   	// #1
   11960:	ldaxrb	w10, [x8]
   11964:	stlxrb	w11, w9, [x8]
   11968:	cbnz	w11, 11960 <_ZdaPvRKSt9nothrow_t@@Base+0x18c>
   1196c:	cbz	w10, 1197c <_ZdaPvRKSt9nothrow_t@@Base+0x1a8>
   11970:	adrp	x0, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   11974:	add	x0, x0, #0x3fc
   11978:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1197c:	ldrb	w8, [x21, #1016]
   11980:	cbnz	w8, 11a30 <_ZdaPvRKSt9nothrow_t@@Base+0x25c>
   11984:	mov	w8, #0x1008                	// #4104
   11988:	movk	w8, #0xc, lsl #16
   1198c:	add	x20, x19, x8
   11990:	mov	w2, #0x28                  	// #40
   11994:	mov	x0, x20
   11998:	mov	w1, wzr
   1199c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   119a0:	mov	w8, #0x1010                	// #4112
   119a4:	movk	w8, #0xc, lsl #16
   119a8:	mov	w2, #0x80000               	// #524288
   119ac:	mov	x0, x19
   119b0:	mov	w1, wzr
   119b4:	str	x20, [x20]
   119b8:	str	x20, [x19, x8]
   119bc:	mov	w20, #0x80000               	// #524288
   119c0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   119c4:	mov	w8, #0x40                  	// #64
   119c8:	movk	w8, #0x8, lsl #16
   119cc:	add	x0, x19, x8
   119d0:	mov	w2, #0xd80                 	// #3456
   119d4:	mov	w1, wzr
   119d8:	strb	wzr, [x19, x20]
   119dc:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   119e0:	mov	w8, #0xdc0                 	// #3520
   119e4:	movk	w8, #0x8, lsl #16
   119e8:	mov	w2, #0x248                 	// #584
   119ec:	add	x0, x19, x8
   119f0:	movk	w2, #0x4, lsl #16
   119f4:	mov	w1, wzr
   119f8:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   119fc:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11a00:	ldr	x19, [x19, #4016]
   11a04:	ldr	x0, [x19]
   11a08:	cbnz	x0, 11a14 <_ZdaPvRKSt9nothrow_t@@Base+0x240>
   11a0c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   11a10:	str	x0, [x19]
   11a14:	adrp	x8, d8000 <__hwasan_shadow_memory_dynamic_address@@Base+0x832e8>
   11a18:	add	x8, x8, #0x940
   11a1c:	add	x10, x8, #0x10
   11a20:	mov	w9, #0x1                   	// #1
   11a24:	stp	x0, x10, [x8]
   11a28:	dmb	ish
   11a2c:	strb	w9, [x21, #1016]
   11a30:	adrp	x8, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   11a34:	dmb	ish
   11a38:	strb	wzr, [x8, #1020]
   11a3c:	ldp	x20, x19, [sp, #16]
   11a40:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11a44:	add	x0, x0, #0xb80
   11a48:	ldp	x30, x21, [sp], #32
   11a4c:	ret
   11a50:	stp	x30, x21, [sp, #-32]!
   11a54:	stp	x20, x19, [sp, #16]
   11a58:	cmn	x0, #0x9
   11a5c:	b.ls	11a70 <_ZdaPvRKSt9nothrow_t@@Base+0x29c>  // b.plast
   11a60:	mov	x0, xzr
   11a64:	ldp	x20, x19, [sp, #16]
   11a68:	ldp	x30, x21, [sp], #32
   11a6c:	ret
   11a70:	cmp	x2, #0x0
   11a74:	mov	w8, #0x8                   	// #8
   11a78:	mov	x21, x1
   11a7c:	add	x19, x0, #0x8
   11a80:	csel	x20, x8, x2, eq  // eq = none
   11a84:	cbz	x1, 11ac8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f4>
   11a88:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11a8c:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11a90:	add	x0, x0, #0xb80
   11a94:	mov	x1, x21
   11a98:	mov	x2, x19
   11a9c:	mov	x3, x20
   11aa0:	bl	12080 <_ZdaPvRKSt9nothrow_t@@Base+0x8ac>
   11aa4:	cbz	x0, 11b20 <_ZdaPvRKSt9nothrow_t@@Base+0x34c>
   11aa8:	mov	x8, #0xc041                	// #49217
   11aac:	movk	x8, #0xbceb, lsl #16
   11ab0:	movk	x8, #0xb03a, lsl #32
   11ab4:	movk	x8, #0x6a6c, lsl #48
   11ab8:	str	x8, [x0], #8
   11abc:	ldp	x20, x19, [sp, #16]
   11ac0:	ldp	x30, x21, [sp], #32
   11ac4:	ret
   11ac8:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11acc:	add	x8, x8, #0xbd0
   11ad0:	mov	w9, #0x1                   	// #1
   11ad4:	ldaxrb	w10, [x8]
   11ad8:	stlxrb	w11, w9, [x8]
   11adc:	cbnz	w11, 11ad4 <_ZdaPvRKSt9nothrow_t@@Base+0x300>
   11ae0:	cbz	w10, 11af0 <_ZdaPvRKSt9nothrow_t@@Base+0x31c>
   11ae4:	adrp	x0, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11ae8:	add	x0, x0, #0xbd0
   11aec:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   11af0:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11af4:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11af8:	adrp	x1, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11afc:	add	x0, x0, #0xb80
   11b00:	add	x1, x1, #0xbd8
   11b04:	mov	x2, x19
   11b08:	mov	x3, x20
   11b0c:	bl	12080 <_ZdaPvRKSt9nothrow_t@@Base+0x8ac>
   11b10:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11b14:	dmb	ish
   11b18:	strb	wzr, [x8, #3024]
   11b1c:	cbnz	x0, 11aa8 <_ZdaPvRKSt9nothrow_t@@Base+0x2d4>
   11b20:	mov	x0, x19
   11b24:	bl	11b28 <_ZdaPvRKSt9nothrow_t@@Base+0x354>
   11b28:	str	x30, [sp, #-16]!
   11b2c:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11b30:	mov	w9, #0x1                   	// #1
   11b34:	strb	w9, [x8, #3016]
   11b38:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11b3c:	ldr	x8, [x8, #4024]
   11b40:	mov	x2, x0
   11b44:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11b48:	add	x0, x0, #0xdc1
   11b4c:	ldr	x1, [x8]
   11b50:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   11b54:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   11b58:	stp	x30, x21, [sp, #-32]!
   11b5c:	stp	x20, x19, [sp, #16]
   11b60:	mov	x21, x2
   11b64:	cbz	x0, 11b80 <_ZdaPvRKSt9nothrow_t@@Base+0x3ac>
   11b68:	cmn	x1, #0x9
   11b6c:	b.ls	11b98 <_ZdaPvRKSt9nothrow_t@@Base+0x3c4>  // b.plast
   11b70:	mov	x0, xzr
   11b74:	ldp	x20, x19, [sp, #16]
   11b78:	ldp	x30, x21, [sp], #32
   11b7c:	ret
   11b80:	ldp	x20, x19, [sp, #16]
   11b84:	mov	x0, x1
   11b88:	mov	x1, x21
   11b8c:	mov	x2, xzr
   11b90:	ldp	x30, x21, [sp], #32
   11b94:	b	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   11b98:	mov	x20, x0
   11b9c:	ldr	x4, [x20, #-8]!
   11ba0:	mov	x8, #0xc041                	// #49217
   11ba4:	movk	x8, #0xbceb, lsl #16
   11ba8:	movk	x8, #0xb03a, lsl #32
   11bac:	movk	x8, #0x6a6c, lsl #48
   11bb0:	cmp	x4, x8
   11bb4:	b.ne	11c58 <_ZdaPvRKSt9nothrow_t@@Base+0x484>  // b.any
   11bb8:	add	x19, x1, #0x8
   11bbc:	cbz	x21, 11bf4 <_ZdaPvRKSt9nothrow_t@@Base+0x420>
   11bc0:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11bc4:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11bc8:	add	x0, x0, #0xb80
   11bcc:	mov	w4, #0x8                   	// #8
   11bd0:	mov	x1, x21
   11bd4:	mov	x2, x20
   11bd8:	mov	x3, x19
   11bdc:	bl	130e4 <_ZdaPvRKSt9nothrow_t@@Base+0x1910>
   11be0:	cbz	x0, 11c50 <_ZdaPvRKSt9nothrow_t@@Base+0x47c>
   11be4:	add	x0, x0, #0x8
   11be8:	ldp	x20, x19, [sp, #16]
   11bec:	ldp	x30, x21, [sp], #32
   11bf0:	ret
   11bf4:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11bf8:	add	x8, x8, #0xbd0
   11bfc:	mov	w9, #0x1                   	// #1
   11c00:	ldaxrb	w10, [x8]
   11c04:	stlxrb	w11, w9, [x8]
   11c08:	cbnz	w11, 11c00 <_ZdaPvRKSt9nothrow_t@@Base+0x42c>
   11c0c:	cbz	w10, 11c1c <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   11c10:	adrp	x0, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11c14:	add	x0, x0, #0xbd0
   11c18:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   11c1c:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11c20:	adrp	x0, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11c24:	adrp	x1, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11c28:	add	x0, x0, #0xb80
   11c2c:	add	x1, x1, #0xbd8
   11c30:	mov	w4, #0x8                   	// #8
   11c34:	mov	x2, x20
   11c38:	mov	x3, x19
   11c3c:	bl	130e4 <_ZdaPvRKSt9nothrow_t@@Base+0x1910>
   11c40:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11c44:	dmb	ish
   11c48:	strb	wzr, [x8, #3024]
   11c4c:	cbnz	x0, 11be4 <_ZdaPvRKSt9nothrow_t@@Base+0x410>
   11c50:	mov	x0, x19
   11c54:	bl	11b28 <_ZdaPvRKSt9nothrow_t@@Base+0x354>
   11c58:	mov	x3, #0xc041                	// #49217
   11c5c:	movk	x3, #0xbceb, lsl #16
   11c60:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11c64:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11c68:	movk	x3, #0xb03a, lsl #32
   11c6c:	add	x0, x0, #0x872
   11c70:	add	x2, x2, #0x8c8
   11c74:	mov	w1, #0xa6                  	// #166
   11c78:	movk	x3, #0x6a6c, lsl #48
   11c7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11c80:	mov	x8, x3
   11c84:	mov	x3, x2
   11c88:	mov	x2, x1
   11c8c:	umulh	x9, x1, x3
   11c90:	cbnz	x9, 11ca0 <_ZdaPvRKSt9nothrow_t@@Base+0x4cc>
   11c94:	mul	x1, x3, x2
   11c98:	mov	x2, x8
   11c9c:	b	11b58 <_ZdaPvRKSt9nothrow_t@@Base+0x384>
   11ca0:	str	x30, [sp, #-16]!
   11ca4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11ca8:	ldr	x8, [x8, #4024]
   11cac:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11cb0:	add	x0, x0, #0x8ef
   11cb4:	ldr	x1, [x8]
   11cb8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   11cbc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   11cc0:	str	x30, [sp, #-32]!
   11cc4:	stp	x20, x19, [sp, #16]
   11cc8:	mov	x3, x1
   11ccc:	mov	x8, x0
   11cd0:	umulh	x9, x0, x1
   11cd4:	cbnz	x9, 11d14 <_ZdaPvRKSt9nothrow_t@@Base+0x540>
   11cd8:	mul	x19, x3, x8
   11cdc:	mov	x1, x2
   11ce0:	mov	x0, x19
   11ce4:	mov	x2, xzr
   11ce8:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   11cec:	mov	x20, x0
   11cf0:	cbz	x0, 11d04 <_ZdaPvRKSt9nothrow_t@@Base+0x530>
   11cf4:	mov	x0, x20
   11cf8:	mov	w1, wzr
   11cfc:	mov	x2, x19
   11d00:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   11d04:	mov	x0, x20
   11d08:	ldp	x20, x19, [sp, #16]
   11d0c:	ldr	x30, [sp], #32
   11d10:	ret
   11d14:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11d18:	ldr	x9, [x9, #4024]
   11d1c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11d20:	add	x0, x0, #0x95b
   11d24:	mov	x2, x8
   11d28:	ldr	x1, [x9]
   11d2c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   11d30:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   11d34:	str	x30, [sp, #-32]!
   11d38:	stp	x20, x19, [sp, #16]
   11d3c:	cbz	x0, 11e68 <_ZdaPvRKSt9nothrow_t@@Base+0x694>
   11d40:	mov	x19, x0
   11d44:	ldr	x4, [x19, #-8]!
   11d48:	mov	x8, #0xc041                	// #49217
   11d4c:	movk	x8, #0xbceb, lsl #16
   11d50:	movk	x8, #0xb03a, lsl #32
   11d54:	movk	x8, #0x6a6c, lsl #48
   11d58:	cmp	x4, x8
   11d5c:	b.ne	11eb4 <_ZdaPvRKSt9nothrow_t@@Base+0x6e0>  // b.any
   11d60:	mov	x20, x1
   11d64:	str	xzr, [x19]
   11d68:	cbz	x1, 11dd4 <_ZdaPvRKSt9nothrow_t@@Base+0x600>
   11d6c:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11d70:	lsr	x8, x19, #48
   11d74:	cbnz	x8, 11db0 <_ZdaPvRKSt9nothrow_t@@Base+0x5dc>
   11d78:	adrp	x9, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11d7c:	lsr	x8, x19, #32
   11d80:	add	x9, x9, #0xb80
   11d84:	ldr	x11, [x9, x8, lsl #3]
   11d88:	dmb	ish
   11d8c:	cbz	x11, 11db0 <_ZdaPvRKSt9nothrow_t@@Base+0x5dc>
   11d90:	ubfx	x10, x19, #20, #12
   11d94:	ldrb	w11, [x11, x10]
   11d98:	cbz	w11, 11db0 <_ZdaPvRKSt9nothrow_t@@Base+0x5dc>
   11d9c:	ldr	x8, [x9, x8, lsl #3]
   11da0:	dmb	ish
   11da4:	cbz	x8, 11e74 <_ZdaPvRKSt9nothrow_t@@Base+0x6a0>
   11da8:	ldrb	w2, [x8, x10]
   11dac:	b	11e78 <_ZdaPvRKSt9nothrow_t@@Base+0x6a4>
   11db0:	mov	x2, x19
   11db4:	ldp	x20, x19, [sp, #16]
   11db8:	adrp	x0, d8000 <__hwasan_shadow_memory_dynamic_address@@Base+0x832e8>
   11dbc:	mov	w8, #0x248                 	// #584
   11dc0:	add	x0, x0, #0x940
   11dc4:	movk	w8, #0x4, lsl #16
   11dc8:	add	x1, x0, x8
   11dcc:	ldr	x30, [sp], #32
   11dd0:	b	133ec <_ZdaPvRKSt9nothrow_t@@Base+0x1c18>
   11dd4:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11dd8:	add	x8, x8, #0xbd0
   11ddc:	mov	w9, #0x1                   	// #1
   11de0:	ldaxrb	w10, [x8]
   11de4:	stlxrb	w11, w9, [x8]
   11de8:	cbnz	w11, 11de0 <_ZdaPvRKSt9nothrow_t@@Base+0x60c>
   11dec:	cbz	w10, 11dfc <_ZdaPvRKSt9nothrow_t@@Base+0x628>
   11df0:	adrp	x0, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11df4:	add	x0, x0, #0xbd0
   11df8:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   11dfc:	bl	11934 <_ZdaPvRKSt9nothrow_t@@Base+0x160>
   11e00:	lsr	x8, x19, #48
   11e04:	cbnz	x8, 11e40 <_ZdaPvRKSt9nothrow_t@@Base+0x66c>
   11e08:	adrp	x9, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11e0c:	lsr	x8, x19, #32
   11e10:	add	x9, x9, #0xb80
   11e14:	ldr	x11, [x9, x8, lsl #3]
   11e18:	dmb	ish
   11e1c:	cbz	x11, 11e40 <_ZdaPvRKSt9nothrow_t@@Base+0x66c>
   11e20:	ubfx	x10, x19, #20, #12
   11e24:	ldrb	w11, [x11, x10]
   11e28:	cbz	w11, 11e40 <_ZdaPvRKSt9nothrow_t@@Base+0x66c>
   11e2c:	ldr	x8, [x9, x8, lsl #3]
   11e30:	dmb	ish
   11e34:	cbz	x8, 11e94 <_ZdaPvRKSt9nothrow_t@@Base+0x6c0>
   11e38:	ldrb	w2, [x8, x10]
   11e3c:	b	11e98 <_ZdaPvRKSt9nothrow_t@@Base+0x6c4>
   11e40:	adrp	x0, d8000 <__hwasan_shadow_memory_dynamic_address@@Base+0x832e8>
   11e44:	mov	w8, #0x248                 	// #584
   11e48:	add	x0, x0, #0x940
   11e4c:	movk	w8, #0x4, lsl #16
   11e50:	add	x1, x0, x8
   11e54:	mov	x2, x19
   11e58:	bl	133ec <_ZdaPvRKSt9nothrow_t@@Base+0x1c18>
   11e5c:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11e60:	dmb	ish
   11e64:	strb	wzr, [x8, #3024]
   11e68:	ldp	x20, x19, [sp, #16]
   11e6c:	ldr	x30, [sp], #32
   11e70:	ret
   11e74:	mov	x2, xzr
   11e78:	mov	x0, x20
   11e7c:	mov	x3, x19
   11e80:	ldp	x20, x19, [sp, #16]
   11e84:	adrp	x1, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11e88:	add	x1, x1, #0xb80
   11e8c:	ldr	x30, [sp], #32
   11e90:	b	12cbc <_ZdaPvRKSt9nothrow_t@@Base+0x14e8>
   11e94:	mov	x2, xzr
   11e98:	adrp	x0, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11e9c:	adrp	x1, 57000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e8>
   11ea0:	add	x0, x0, #0xbd8
   11ea4:	add	x1, x1, #0xb80
   11ea8:	mov	x3, x19
   11eac:	bl	12cbc <_ZdaPvRKSt9nothrow_t@@Base+0x14e8>
   11eb0:	b	11e5c <_ZdaPvRKSt9nothrow_t@@Base+0x688>
   11eb4:	mov	x3, #0xc041                	// #49217
   11eb8:	movk	x3, #0xbceb, lsl #16
   11ebc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11ec0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11ec4:	movk	x3, #0xb03a, lsl #32
   11ec8:	add	x0, x0, #0x872
   11ecc:	add	x2, x2, #0x8c8
   11ed0:	mov	w1, #0xca                  	// #202
   11ed4:	movk	x3, #0x6a6c, lsl #48
   11ed8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11edc:	stp	x30, x21, [sp, #-32]!
   11ee0:	stp	x20, x19, [sp, #16]
   11ee4:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   11ee8:	ldr	x9, [x8, #632]
   11eec:	sub	x8, x9, #0x1
   11ef0:	tst	x9, x8
   11ef4:	b.ne	11fa4 <_ZdaPvRKSt9nothrow_t@@Base+0x7d0>  // b.any
   11ef8:	mov	x19, x0
   11efc:	ldp	x8, x0, [x0]
   11f00:	add	x10, x1, x9
   11f04:	sub	x10, x10, #0x1
   11f08:	neg	x9, x9
   11f0c:	and	x21, x10, x9
   11f10:	sub	x9, x8, x0
   11f14:	cmp	x9, x21
   11f18:	b.ge	11f84 <_ZdaPvRKSt9nothrow_t@@Base+0x7b0>  // b.tcont
   11f1c:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   11f20:	ldr	x20, [x20, #4016]
   11f24:	ldr	x0, [x20]
   11f28:	cbnz	x0, 11f34 <_ZdaPvRKSt9nothrow_t@@Base+0x760>
   11f2c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   11f30:	str	x0, [x20]
   11f34:	sub	x8, x0, #0x1
   11f38:	tst	x0, x8
   11f3c:	b.ne	11fa4 <_ZdaPvRKSt9nothrow_t@@Base+0x7d0>  // b.any
   11f40:	add	x8, x21, x0
   11f44:	sub	x8, x8, #0x1
   11f48:	neg	x9, x0
   11f4c:	and	x20, x8, x9
   11f50:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11f54:	add	x1, x1, #0x9c1
   11f58:	mov	x0, x20
   11f5c:	mov	w2, wzr
   11f60:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   11f64:	add	x8, x0, x20
   11f68:	stp	x8, x0, [x19]
   11f6c:	adrp	x9, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   11f70:	ldr	x9, [x9, #3008]
   11f74:	cbz	x9, 11f84 <_ZdaPvRKSt9nothrow_t@@Base+0x7b0>
   11f78:	mov	x1, x20
   11f7c:	blr	x9
   11f80:	ldp	x8, x0, [x19]
   11f84:	sub	x8, x8, x0
   11f88:	cmp	x8, x21
   11f8c:	b.lt	11fb4 <_ZdaPvRKSt9nothrow_t@@Base+0x7e0>  // b.tstop
   11f90:	add	x8, x0, x21
   11f94:	str	x8, [x19, #8]
   11f98:	ldp	x20, x19, [sp, #16]
   11f9c:	ldp	x30, x21, [sp], #32
   11fa0:	ret
   11fa4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   11fa8:	add	x0, x0, #0x20f
   11fac:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   11fb0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   11fb4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11fb8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   11fbc:	add	x0, x0, #0x872
   11fc0:	add	x2, x2, #0x9ca
   11fc4:	mov	w1, #0xe1                  	// #225
   11fc8:	mov	x3, xzr
   11fcc:	mov	x4, xzr
   11fd0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   11fd4:	str	x30, [sp, #-16]!
   11fd8:	sub	x8, x0, #0x1
   11fdc:	tst	x0, x8
   11fe0:	b.ne	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x82c>  // b.any
   11fe4:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   11fe8:	ldr	x9, [x8, #632]
   11fec:	cmp	x9, x0
   11ff0:	csel	x9, x0, x9, cc  // cc = lo, ul, last
   11ff4:	str	x9, [x8, #632]
   11ff8:	ldr	x30, [sp], #16
   11ffc:	ret
   12000:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12004:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12008:	add	x0, x0, #0x872
   1200c:	add	x2, x2, #0xea3
   12010:	mov	w1, #0xe8                  	// #232
   12014:	mov	x3, xzr
   12018:	mov	x4, xzr
   1201c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12020:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   12024:	str	x0, [x8, #3008]
   12028:	ret
   1202c:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   12030:	ldrb	w8, [x8, #3016]
   12034:	cmp	w8, #0x0
   12038:	cset	w0, ne  // ne = any
   1203c:	ret
   12040:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   12044:	mov	w9, #0x1                   	// #1
   12048:	strb	w9, [x8, #3016]
   1204c:	ret
   12050:	adrp	x8, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   12054:	ldrb	w8, [x8, #3020]
   12058:	cmp	w8, #0x0
   1205c:	cset	w0, ne  // ne = any
   12060:	ret
   12064:	and	w8, w0, #0x1
   12068:	adrp	x9, 118000 <__hwasan_shadow_memory_dynamic_address@@Base+0xc32e8>
   1206c:	strb	w8, [x9, #3020]
   12070:	ret
   12074:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12078:	add	x0, x0, #0xa07
   1207c:	b	1cafc <__sanitizer_on_print@@Base+0xac>
   12080:	sub	sp, sp, #0x20
   12084:	stp	x30, x19, [sp, #16]
   12088:	cmp	x2, #0x0
   1208c:	csinc	x2, x2, xzr, ne  // ne = any
   12090:	mvn	x8, x2
   12094:	mov	x19, x3
   12098:	cmp	x8, x3
   1209c:	b.cs	120c4 <_ZdaPvRKSt9nothrow_t@@Base+0x8f0>  // b.hs, b.nlast
   120a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   120a4:	ldr	x8, [x8, #4024]
   120a8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   120ac:	add	x0, x0, #0xa96
   120b0:	mov	x3, x19
   120b4:	ldr	x1, [x8]
   120b8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   120bc:	mov	x0, xzr
   120c0:	b	121d4 <_ZdaPvRKSt9nothrow_t@@Base+0xa00>
   120c4:	mov	x8, x0
   120c8:	cmp	x19, #0x9
   120cc:	mov	x9, x2
   120d0:	b.cc	120f0 <_ZdaPvRKSt9nothrow_t@@Base+0x91c>  // b.lo, b.ul, b.last
   120d4:	sub	x9, x19, #0x1
   120d8:	tst	x19, x9
   120dc:	b.ne	12214 <_ZdaPvRKSt9nothrow_t@@Base+0xa40>  // b.any
   120e0:	add	x9, x19, x2
   120e4:	sub	x9, x9, #0x1
   120e8:	neg	x10, x19
   120ec:	and	x9, x9, x10
   120f0:	cmp	x19, #0x20, lsl #12
   120f4:	b.hi	1211c <_ZdaPvRKSt9nothrow_t@@Base+0x948>  // b.pmore
   120f8:	mov	w10, #0x1                   	// #1
   120fc:	movk	w10, #0x2, lsl #16
   12100:	cmp	x9, x10
   12104:	b.cs	1211c <_ZdaPvRKSt9nothrow_t@@Base+0x948>  // b.hs, b.nlast
   12108:	cmp	x9, #0x100
   1210c:	b.hi	12148 <_ZdaPvRKSt9nothrow_t@@Base+0x974>  // b.pmore
   12110:	add	x9, x9, #0xf
   12114:	lsr	x3, x9, #4
   12118:	b	12178 <_ZdaPvRKSt9nothrow_t@@Base+0x9a4>
   1211c:	mov	w9, #0xdc0                 	// #3520
   12120:	mov	w10, #0x1008                	// #4104
   12124:	movk	w9, #0x8, lsl #16
   12128:	movk	w10, #0xc, lsl #16
   1212c:	add	x0, x8, x9
   12130:	add	x1, x8, x10
   12134:	mov	x3, x19
   12138:	bl	12278 <_ZdaPvRKSt9nothrow_t@@Base+0xaa4>
   1213c:	cmp	x19, #0x9
   12140:	b.cs	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x9f4>  // b.hs, b.nlast
   12144:	b	121d4 <_ZdaPvRKSt9nothrow_t@@Base+0xa00>
   12148:	clz	x10, x9
   1214c:	eor	x10, x10, #0x3f
   12150:	mov	w11, #0xffffffff            	// #-1
   12154:	sub	x12, x10, #0x2
   12158:	lsr	x13, x9, x12
   1215c:	lsl	w11, w11, w12
   12160:	and	x12, x13, #0x3
   12164:	mvn	w11, w11
   12168:	bfi	x12, x10, #2, #7
   1216c:	tst	x9, x11
   12170:	cinc	x9, x12, ne  // ne = any
   12174:	sub	x3, x9, #0x10
   12178:	cbz	x3, 12224 <_ZdaPvRKSt9nothrow_t@@Base+0xa50>
   1217c:	cmp	x3, #0x36
   12180:	b.cs	12240 <_ZdaPvRKSt9nothrow_t@@Base+0xa6c>  // b.hs, b.nlast
   12184:	add	x9, x1, x3, lsl #10
   12188:	ldr	x10, [x9]
   1218c:	cbz	x10, 121e0 <_ZdaPvRKSt9nothrow_t@@Base+0xa0c>
   12190:	sub	x8, x10, #0x1
   12194:	add	x11, x9, #0x20
   12198:	str	x8, [x9]
   1219c:	add	x10, x11, x10, lsl #3
   121a0:	ldur	x10, [x10, #-16]
   121a4:	mov	w12, #0xd810                	// #55312
   121a8:	ldr	x0, [x11, x8, lsl #3]
   121ac:	prfm	pldl1keep, [x10]
   121b0:	ldr	x8, [x9, #16]
   121b4:	ldr	x9, [x1, x12]
   121b8:	add	x8, x9, x8
   121bc:	str	x8, [x1, x12]
   121c0:	cmp	x19, #0x9
   121c4:	b.cc	121d4 <_ZdaPvRKSt9nothrow_t@@Base+0xa00>  // b.lo, b.ul, b.last
   121c8:	sub	x8, x19, #0x1
   121cc:	ands	x3, x8, x0
   121d0:	b.ne	1225c <_ZdaPvRKSt9nothrow_t@@Base+0xa88>  // b.any
   121d4:	ldp	x30, x19, [sp, #16]
   121d8:	add	sp, sp, #0x20
   121dc:	ret
   121e0:	stp	x9, x1, [sp]
   121e4:	mov	x0, x1
   121e8:	mov	x1, x9
   121ec:	mov	x2, x8
   121f0:	bl	12524 <_ZdaPvRKSt9nothrow_t@@Base+0xd50>
   121f4:	tbz	w0, #0, 12204 <_ZdaPvRKSt9nothrow_t@@Base+0xa30>
   121f8:	ldp	x9, x1, [sp]
   121fc:	ldr	x10, [x9]
   12200:	b	12190 <_ZdaPvRKSt9nothrow_t@@Base+0x9bc>
   12204:	mov	x0, xzr
   12208:	cmp	x19, #0x9
   1220c:	b.cs	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x9f4>  // b.hs, b.nlast
   12210:	b	121d4 <_ZdaPvRKSt9nothrow_t@@Base+0xa00>
   12214:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12218:	add	x0, x0, #0x20f
   1221c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   12220:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   12224:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12228:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1222c:	add	x0, x0, #0xab8
   12230:	add	x2, x2, #0xc02
   12234:	mov	w1, #0x99                  	// #153
   12238:	mov	x4, xzr
   1223c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12240:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12244:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12248:	add	x0, x0, #0xab8
   1224c:	add	x2, x2, #0xc1a
   12250:	mov	w1, #0x9a                  	// #154
   12254:	mov	w4, #0x36                  	// #54
   12258:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1225c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12260:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12264:	add	x0, x0, #0xa5b
   12268:	add	x2, x2, #0xb5d
   1226c:	mov	w1, #0x49                  	// #73
   12270:	mov	x4, xzr
   12274:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12278:	stp	x30, x25, [sp, #-64]!
   1227c:	stp	x24, x23, [sp, #16]
   12280:	stp	x22, x21, [sp, #32]
   12284:	stp	x20, x19, [sp, #48]
   12288:	sub	x24, x3, #0x1
   1228c:	tst	x3, x24
   12290:	b.ne	12444 <_ZdaPvRKSt9nothrow_t@@Base+0xc70>  // b.any
   12294:	ldr	x8, [x0]
   12298:	mov	x21, x0
   1229c:	sub	x9, x8, #0x1
   122a0:	tst	x8, x9
   122a4:	b.ne	1245c <_ZdaPvRKSt9nothrow_t@@Base+0xc88>  // b.any
   122a8:	add	x9, x2, x8
   122ac:	neg	x10, x8
   122b0:	sub	x9, x9, #0x1
   122b4:	cmp	x8, x3
   122b8:	and	x9, x9, x10
   122bc:	add	x8, x9, x8
   122c0:	csel	x9, x3, xzr, cc  // cc = lo, ul, last
   122c4:	add	x20, x8, x9
   122c8:	mov	x22, x3
   122cc:	mov	x23, x2
   122d0:	cmp	x20, x2
   122d4:	b.cs	122fc <_ZdaPvRKSt9nothrow_t@@Base+0xb28>  // b.hs, b.nlast
   122d8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   122dc:	ldr	x8, [x8, #4024]
   122e0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   122e4:	add	x0, x0, #0xec6
   122e8:	mov	x2, x20
   122ec:	ldr	x1, [x8]
   122f0:	mov	x3, x22
   122f4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   122f8:	b	12428 <_ZdaPvRKSt9nothrow_t@@Base+0xc54>
   122fc:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   12300:	mov	x19, x1
   12304:	ldr	x1, [x8, #624]
   12308:	mov	x0, x20
   1230c:	bl	1b4a8 <__sanitizer_set_report_fd@@Base+0x4e64>
   12310:	cbz	x0, 12428 <_ZdaPvRKSt9nothrow_t@@Base+0xc54>
   12314:	ldr	x9, [x21]
   12318:	mov	x8, x0
   1231c:	sub	x10, x9, #0x1
   12320:	tst	x10, x0
   12324:	b.ne	1246c <_ZdaPvRKSt9nothrow_t@@Base+0xc98>  // b.any
   12328:	add	x11, x9, x8
   1232c:	and	x12, x11, x24
   12330:	sub	x12, x22, x12
   12334:	tst	x11, x24
   12338:	csel	x12, xzr, x12, eq  // eq = none
   1233c:	add	x22, x12, x11
   12340:	tst	x22, x24
   12344:	b.ne	12484 <_ZdaPvRKSt9nothrow_t@@Base+0xcb0>  // b.any
   12348:	tst	x22, x10
   1234c:	b.ne	1249c <_ZdaPvRKSt9nothrow_t@@Base+0xcc8>  // b.any
   12350:	add	x3, x22, x23
   12354:	cmp	x3, x8
   12358:	b.cc	124b4 <_ZdaPvRKSt9nothrow_t@@Base+0xce0>  // b.lo, b.ul, b.last
   1235c:	add	x4, x20, x8
   12360:	cmp	x3, x4
   12364:	b.hi	124d0 <_ZdaPvRKSt9nothrow_t@@Base+0xcfc>  // b.pmore
   12368:	sub	x24, x22, x9
   1236c:	stp	x20, x23, [x24, #8]
   12370:	str	x8, [x24]
   12374:	cbz	x20, 124e8 <_ZdaPvRKSt9nothrow_t@@Base+0xd14>
   12378:	mov	w8, #0x10                  	// #16
   1237c:	movk	w8, #0x4, lsl #16
   12380:	clz	x9, x20
   12384:	add	x23, x21, x8
   12388:	eor	x25, x9, #0x3f
   1238c:	add	x0, x23, #0x230
   12390:	mov	w8, #0x1                   	// #1
   12394:	ldaxrb	w9, [x0]
   12398:	stlxrb	w10, w8, [x0]
   1239c:	cbnz	w10, 12394 <_ZdaPvRKSt9nothrow_t@@Base+0xbc0>
   123a0:	cbz	w9, 123a8 <_ZdaPvRKSt9nothrow_t@@Base+0xbd4>
   123a4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   123a8:	ldr	x3, [x23]
   123ac:	cmp	x3, #0x8, lsl #12
   123b0:	b.cs	12508 <_ZdaPvRKSt9nothrow_t@@Base+0xd34>  // b.hs, b.nlast
   123b4:	add	x8, x3, #0x1
   123b8:	str	x8, [x23]
   123bc:	str	x3, [x24, #24]
   123c0:	ldr	x8, [x21, #8]
   123c4:	mov	w10, #0x40                  	// #64
   123c8:	add	x9, x21, x25, lsl #3
   123cc:	movk	w10, #0x4, lsl #16
   123d0:	str	x24, [x8, x3, lsl #3]
   123d4:	ldp	x11, x12, [x23, #32]
   123d8:	ldr	x8, [x23, #16]
   123dc:	strb	wzr, [x23, #8]
   123e0:	add	x11, x11, x20
   123e4:	add	x8, x8, #0x1
   123e8:	cmp	x12, x11
   123ec:	str	x8, [x23, #16]
   123f0:	csel	x8, x12, x11, hi  // hi = pmore
   123f4:	stp	x11, x8, [x23, #32]
   123f8:	ldr	x8, [x9, x10]
   123fc:	add	x8, x8, #0x1
   12400:	str	x8, [x9, x10]
   12404:	ldr	x8, [x19, #16]
   12408:	add	x8, x8, x20
   1240c:	str	x8, [x19, #16]
   12410:	ldr	x8, [x19, #24]
   12414:	add	x8, x8, x20
   12418:	str	x8, [x19, #24]
   1241c:	dmb	ish
   12420:	strb	wzr, [x23, #560]
   12424:	b	1242c <_ZdaPvRKSt9nothrow_t@@Base+0xc58>
   12428:	mov	x22, xzr
   1242c:	mov	x0, x22
   12430:	ldp	x20, x19, [sp, #48]
   12434:	ldp	x22, x21, [sp, #32]
   12438:	ldp	x24, x23, [sp, #16]
   1243c:	ldp	x30, x25, [sp], #64
   12440:	ret
   12444:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12448:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1244c:	add	x0, x0, #0xd63
   12450:	add	x2, x2, #0xea3
   12454:	mov	w1, #0x56                  	// #86
   12458:	b	124fc <_ZdaPvRKSt9nothrow_t@@Base+0xd28>
   1245c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12460:	add	x0, x0, #0x20f
   12464:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   12468:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1246c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12470:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12474:	add	x0, x0, #0xd63
   12478:	add	x2, x2, #0xf27
   1247c:	mov	w1, #0x65                  	// #101
   12480:	b	124fc <_ZdaPvRKSt9nothrow_t@@Base+0xd28>
   12484:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12488:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1248c:	add	x0, x0, #0xd63
   12490:	add	x2, x2, #0xf51
   12494:	mov	w1, #0x6b                  	// #107
   12498:	b	124fc <_ZdaPvRKSt9nothrow_t@@Base+0xd28>
   1249c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   124a0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   124a4:	add	x0, x0, #0xd63
   124a8:	add	x2, x2, #0xf76
   124ac:	mov	w1, #0x6c                  	// #108
   124b0:	b	124fc <_ZdaPvRKSt9nothrow_t@@Base+0xd28>
   124b4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   124b8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   124bc:	add	x0, x0, #0xd63
   124c0:	add	x2, x2, #0xf9c
   124c4:	mov	w1, #0x6d                  	// #109
   124c8:	mov	x4, x8
   124cc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   124d0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   124d4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   124d8:	add	x0, x0, #0xd63
   124dc:	add	x2, x2, #0xfba
   124e0:	mov	w1, #0x6e                  	// #110
   124e4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   124e8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   124ec:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   124f0:	add	x0, x0, #0xb2f
   124f4:	add	x2, x2, #0xe2b
   124f8:	mov	w1, #0x160                 	// #352
   124fc:	mov	x3, xzr
   12500:	mov	x4, xzr
   12504:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12508:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1250c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12510:	add	x0, x0, #0xd63
   12514:	add	x2, x2, #0xffc
   12518:	mov	w1, #0x16                  	// #22
   1251c:	mov	w4, #0x8000                	// #32768
   12520:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12524:	str	x30, [sp, #-48]!
   12528:	stp	x22, x21, [sp, #16]
   1252c:	stp	x20, x19, [sp, #32]
   12530:	ldr	x8, [x1, #8]
   12534:	mov	x21, x3
   12538:	mov	x19, x2
   1253c:	mov	x22, x1
   12540:	mov	x20, x0
   12544:	cbz	x8, 12634 <_ZdaPvRKSt9nothrow_t@@Base+0xe60>
   12548:	mov	w8, #0xd800                	// #55296
   1254c:	add	x1, x20, x8
   12550:	mov	x0, x19
   12554:	mov	x2, x20
   12558:	mov	x3, x21
   1255c:	bl	126f8 <_ZdaPvRKSt9nothrow_t@@Base+0xf24>
   12560:	cbz	x0, 125f0 <_ZdaPvRKSt9nothrow_t@@Base+0xe1c>
   12564:	ldr	x8, [x0, #8]
   12568:	mov	x3, x0
   1256c:	cbz	x8, 126d8 <_ZdaPvRKSt9nothrow_t@@Base+0xf04>
   12570:	cmp	x8, #0x3
   12574:	b.ls	125a4 <_ZdaPvRKSt9nothrow_t@@Base+0xdd0>  // b.plast
   12578:	lsl	x9, x8, #3
   1257c:	add	x11, x9, x3
   12580:	add	x10, x22, #0x20
   12584:	add	x11, x11, #0x10
   12588:	cmp	x11, x10
   1258c:	b.ls	12600 <_ZdaPvRKSt9nothrow_t@@Base+0xe2c>  // b.plast
   12590:	add	x9, x9, x22
   12594:	add	x9, x9, #0x20
   12598:	add	x10, x3, #0x10
   1259c:	cmp	x9, x10
   125a0:	b.ls	12600 <_ZdaPvRKSt9nothrow_t@@Base+0xe2c>  // b.plast
   125a4:	mov	x9, xzr
   125a8:	lsl	x10, x9, #3
   125ac:	add	x11, x10, x22
   125b0:	add	x12, x10, x3
   125b4:	sub	x9, x8, x9
   125b8:	add	x10, x11, #0x20
   125bc:	add	x11, x12, #0x10
   125c0:	ldr	x12, [x11], #8
   125c4:	subs	x9, x9, #0x1
   125c8:	str	x12, [x10], #8
   125cc:	b.ne	125c0 <_ZdaPvRKSt9nothrow_t@@Base+0xdec>  // b.any
   125d0:	str	x8, [x22]
   125d4:	add	x8, x20, x21, lsl #10
   125d8:	ldr	x2, [x8, #24]
   125dc:	cbz	x2, 125ec <_ZdaPvRKSt9nothrow_t@@Base+0xe18>
   125e0:	mov	x0, x20
   125e4:	mov	x1, x19
   125e8:	bl	12cbc <_ZdaPvRKSt9nothrow_t@@Base+0x14e8>
   125ec:	mov	w0, #0x1                   	// #1
   125f0:	ldp	x20, x19, [sp, #32]
   125f4:	ldp	x22, x21, [sp, #16]
   125f8:	ldr	x30, [sp], #48
   125fc:	ret
   12600:	and	x9, x8, #0xfffffffffffffffc
   12604:	add	x10, x3, #0x20
   12608:	add	x11, x22, #0x30
   1260c:	mov	x12, x9
   12610:	ldp	q0, q1, [x10, #-16]
   12614:	add	x10, x10, #0x20
   12618:	subs	x12, x12, #0x4
   1261c:	stp	q0, q1, [x11, #-16]
   12620:	add	x11, x11, #0x20
   12624:	b.ne	12610 <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>  // b.any
   12628:	cmp	x8, x9
   1262c:	b.ne	125a8 <_ZdaPvRKSt9nothrow_t@@Base+0xdd4>  // b.any
   12630:	b	125d0 <_ZdaPvRKSt9nothrow_t@@Base+0xdfc>
   12634:	add	x8, x20, #0x418
   12638:	mov	w9, #0x1                   	// #1
   1263c:	mov	w10, #0x10                  	// #16
   12640:	mov	w11, #0x4000                	// #16384
   12644:	mov	w12, #0x40                  	// #64
   12648:	mov	w13, #0x3e                  	// #62
   1264c:	mov	w14, #0x14                  	// #20
   12650:	mov	w15, #0x100                 	// #256
   12654:	b	126a8 <_ZdaPvRKSt9nothrow_t@@Base+0xed4>
   12658:	mov	w16, #0x200                 	// #512
   1265c:	udiv	w17, w11, w16
   12660:	cmp	w17, #0x40
   12664:	csel	x17, x17, x12, cc  // cc = lo, ul, last
   12668:	cmp	x17, #0x0
   1266c:	csinc	x17, x17, xzr, ne  // ne = any
   12670:	cmp	x17, #0x3e
   12674:	csel	x17, x17, x13, cc  // cc = lo, ul, last
   12678:	lsl	x18, x17, #1
   1267c:	lsl	x17, x17, #3
   12680:	add	x17, x17, #0x10
   12684:	cmp	x16, x17
   12688:	add	x10, x10, #0x10
   1268c:	stp	x18, x16, [x8, #-16]
   12690:	csel	x16, x14, xzr, cc  // cc = lo, ul, last
   12694:	add	x9, x9, #0x1
   12698:	cmp	x10, #0x360
   1269c:	str	x16, [x8]
   126a0:	add	x8, x8, #0x400
   126a4:	b.eq	12548 <_ZdaPvRKSt9nothrow_t@@Base+0xd74>  // b.none
   126a8:	cmp	x10, #0x350
   126ac:	b.eq	12658 <_ZdaPvRKSt9nothrow_t@@Base+0xe84>  // b.none
   126b0:	cmp	x9, #0x11
   126b4:	mov	x16, x10
   126b8:	b.cc	1265c <_ZdaPvRKSt9nothrow_t@@Base+0xe88>  // b.lo, b.ul, b.last
   126bc:	sub	x16, x9, #0x10
   126c0:	lsr	x17, x16, #2
   126c4:	lsl	x17, x15, x17
   126c8:	lsr	x18, x17, #2
   126cc:	and	x16, x16, #0x3
   126d0:	madd	x16, x18, x16, x17
   126d4:	b	1265c <_ZdaPvRKSt9nothrow_t@@Base+0xe88>
   126d8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   126dc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   126e0:	add	x0, x0, #0xab8
   126e4:	add	x2, x2, #0xb18
   126e8:	mov	w1, #0xf0                  	// #240
   126ec:	mov	x3, xzr
   126f0:	mov	x4, xzr
   126f4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   126f8:	stp	x30, x25, [sp, #-64]!
   126fc:	stp	x24, x23, [sp, #16]
   12700:	stp	x22, x21, [sp, #32]
   12704:	stp	x20, x19, [sp, #48]
   12708:	mov	w9, #0x40                  	// #64
   1270c:	add	x8, x0, x3, lsl #6
   12710:	movk	w9, #0x8, lsl #16
   12714:	mov	x20, x3
   12718:	mov	x22, x2
   1271c:	mov	x23, x1
   12720:	mov	x21, x0
   12724:	add	x19, x8, x9
   12728:	mov	w8, #0x1                   	// #1
   1272c:	ldaxrb	w9, [x19]
   12730:	stlxrb	w10, w8, [x19]
   12734:	cbnz	w10, 1272c <_ZdaPvRKSt9nothrow_t@@Base+0xf58>
   12738:	cbz	w9, 12744 <_ZdaPvRKSt9nothrow_t@@Base+0xf70>
   1273c:	mov	x0, x19
   12740:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   12744:	mov	w8, #0x48                  	// #72
   12748:	add	x25, x21, x20, lsl #6
   1274c:	movk	w8, #0x8, lsl #16
   12750:	add	x24, x25, x8
   12754:	ldr	x8, [x24]
   12758:	cbnz	x8, 12780 <_ZdaPvRKSt9nothrow_t@@Base+0xfac>
   1275c:	mov	x0, x21
   12760:	mov	x1, x23
   12764:	mov	x2, x22
   12768:	mov	x3, x19
   1276c:	mov	x4, x20
   12770:	bl	127f4 <_ZdaPvRKSt9nothrow_t@@Base+0x1020>
   12774:	tbz	w0, #0, 127cc <_ZdaPvRKSt9nothrow_t@@Base+0xff8>
   12778:	ldr	x8, [x24]
   1277c:	cbz	x8, 127d4 <_ZdaPvRKSt9nothrow_t@@Base+0x1000>
   12780:	mov	w9, #0x50                  	// #80
   12784:	movk	w9, #0x8, lsl #16
   12788:	ldr	x0, [x25, x9]
   1278c:	ldr	x10, [x0]
   12790:	str	x10, [x25, x9]
   12794:	cbnz	x10, 127a8 <_ZdaPvRKSt9nothrow_t@@Base+0xfd4>
   12798:	mov	w10, #0x58                  	// #88
   1279c:	add	x9, x21, x20, lsl #6
   127a0:	movk	w10, #0x8, lsl #16
   127a4:	str	xzr, [x9, x10]
   127a8:	sub	x8, x8, #0x1
   127ac:	str	x8, [x24]
   127b0:	dmb	ish
   127b4:	strb	wzr, [x19]
   127b8:	ldp	x20, x19, [sp, #48]
   127bc:	ldp	x22, x21, [sp, #32]
   127c0:	ldp	x24, x23, [sp, #16]
   127c4:	ldp	x30, x25, [sp], #64
   127c8:	ret
   127cc:	mov	x0, xzr
   127d0:	b	127b0 <_ZdaPvRKSt9nothrow_t@@Base+0xfdc>
   127d4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   127d8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   127dc:	add	x0, x0, #0xcb4
   127e0:	add	x2, x2, #0xd03
   127e4:	mov	w1, #0x41                  	// #65
   127e8:	mov	x3, xzr
   127ec:	mov	x4, xzr
   127f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   127f4:	stp	x29, x30, [sp, #-96]!
   127f8:	stp	x28, x27, [sp, #16]
   127fc:	stp	x26, x25, [sp, #32]
   12800:	stp	x24, x23, [sp, #48]
   12804:	stp	x22, x21, [sp, #64]
   12808:	stp	x20, x19, [sp, #80]
   1280c:	sub	sp, sp, #0x1a0
   12810:	mov	x20, x2
   12814:	mov	x2, x4
   12818:	mov	x22, x4
   1281c:	mov	x19, x3
   12820:	mov	x21, x0
   12824:	bl	12b8c <_ZdaPvRKSt9nothrow_t@@Base+0x13b8>
   12828:	cbz	x0, 12b20 <_ZdaPvRKSt9nothrow_t@@Base+0x134c>
   1282c:	mov	x23, x0
   12830:	cmp	x22, #0x35
   12834:	b.ne	12840 <_ZdaPvRKSt9nothrow_t@@Base+0x106c>  // b.any
   12838:	mov	w12, #0x200                 	// #512
   1283c:	b	1286c <_ZdaPvRKSt9nothrow_t@@Base+0x1098>
   12840:	subs	x8, x22, #0x10
   12844:	b.hi	12850 <_ZdaPvRKSt9nothrow_t@@Base+0x107c>  // b.pmore
   12848:	lsl	x12, x22, #4
   1284c:	b	12868 <_ZdaPvRKSt9nothrow_t@@Base+0x1094>
   12850:	lsr	x9, x8, #2
   12854:	mov	w10, #0x100                 	// #256
   12858:	lsl	x9, x10, x9
   1285c:	lsr	x10, x9, #2
   12860:	and	x8, x8, #0x3
   12864:	madd	x12, x10, x8, x9
   12868:	cbz	x12, 12b48 <_ZdaPvRKSt9nothrow_t@@Base+0x1374>
   1286c:	mov	w8, #0x4000                	// #16384
   12870:	udiv	w8, w8, w12
   12874:	mov	w9, #0x40                  	// #64
   12878:	cmp	w8, #0x40
   1287c:	csel	x8, x8, x9, cc  // cc = lo, ul, last
   12880:	cmp	x8, #0x0
   12884:	csinc	x8, x8, xzr, ne  // ne = any
   12888:	cmp	x8, #0x3e
   1288c:	mov	w9, #0x3e                  	// #62
   12890:	csel	x25, x8, x9, cc  // cc = lo, ul, last
   12894:	mov	w8, #0x100000              	// #1048576
   12898:	udiv	x8, x8, x12
   1289c:	madd	x27, x8, x12, x23
   128a0:	cmp	x23, x27
   128a4:	b.cs	12b1c <_ZdaPvRKSt9nothrow_t@@Base+0x1348>  // b.hs, b.nlast
   128a8:	add	x9, x20, x22, lsl #10
   128ac:	mov	w10, #0xd810                	// #55312
   128b0:	mov	x24, xzr
   128b4:	mov	x8, xzr
   128b8:	add	x28, x9, #0x18
   128bc:	add	x29, x20, x10
   128c0:	add	x13, sp, #0x20
   128c4:	stp	x21, x22, [sp, #16]
   128c8:	b	128dc <_ZdaPvRKSt9nothrow_t@@Base+0x1108>
   128cc:	mov	x24, xzr
   128d0:	add	x23, x23, x12
   128d4:	cmp	x23, x27
   128d8:	b.cs	129e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1214>  // b.hs, b.nlast
   128dc:	mov	x9, x24
   128e0:	add	x24, x24, #0x1
   128e4:	cmp	x24, #0x30
   128e8:	str	x23, [x13, x9, lsl #3]
   128ec:	b.ne	128d0 <_ZdaPvRKSt9nothrow_t@@Base+0x10fc>  // b.any
   128f0:	mov	x22, #0xffffffffffffffff    	// #-1
   128f4:	add	x21, sp, #0x20
   128f8:	b	12924 <_ZdaPvRKSt9nothrow_t@@Base+0x1150>
   128fc:	ldr	x10, [x19, #24]
   12900:	add	x9, x9, #0x1
   12904:	str	x8, [x10]
   12908:	str	x8, [x19, #24]
   1290c:	mov	x8, xzr
   12910:	str	x9, [x19, #8]
   12914:	add	x22, x22, #0x1
   12918:	cmp	x22, #0x2f
   1291c:	add	x21, x21, #0x8
   12920:	b.cs	128cc <_ZdaPvRKSt9nothrow_t@@Base+0x10f8>  // b.hs, b.nlast
   12924:	cbz	x8, 12934 <_ZdaPvRKSt9nothrow_t@@Base+0x1160>
   12928:	ldr	x26, [x21]
   1292c:	ldr	x9, [x8, #8]
   12930:	b	12990 <_ZdaPvRKSt9nothrow_t@@Base+0x11bc>
   12934:	ldr	x26, [x21]
   12938:	ldr	x3, [x28]
   1293c:	mov	x8, x26
   12940:	cbz	x3, 12984 <_ZdaPvRKSt9nothrow_t@@Base+0x11b0>
   12944:	cmp	x3, #0x36
   12948:	b.cs	12b50 <_ZdaPvRKSt9nothrow_t@@Base+0x137c>  // b.hs, b.nlast
   1294c:	add	x24, x20, x3, lsl #10
   12950:	ldr	x8, [x24]
   12954:	cbz	x8, 129c0 <_ZdaPvRKSt9nothrow_t@@Base+0x11ec>
   12958:	sub	x9, x8, #0x1
   1295c:	add	x10, x24, #0x20
   12960:	str	x9, [x24]
   12964:	add	x8, x10, x8, lsl #3
   12968:	ldur	x11, [x8, #-16]
   1296c:	ldr	x8, [x10, x9, lsl #3]
   12970:	prfm	pldl1keep, [x11]
   12974:	ldr	x9, [x24, #16]
   12978:	ldr	x10, [x29]
   1297c:	add	x9, x10, x9
   12980:	str	x9, [x29]
   12984:	cbz	x8, 12b40 <_ZdaPvRKSt9nothrow_t@@Base+0x136c>
   12988:	mov	x9, xzr
   1298c:	str	xzr, [x8, #8]
   12990:	add	x10, x9, #0x1
   12994:	add	x9, x8, x9, lsl #3
   12998:	cmp	x10, x25
   1299c:	str	x10, [x8, #8]
   129a0:	str	x26, [x9, #16]
   129a4:	b.ne	12914 <_ZdaPvRKSt9nothrow_t@@Base+0x1140>  // b.any
   129a8:	ldr	x9, [x19, #8]
   129ac:	str	xzr, [x8]
   129b0:	cbnz	x9, 128fc <_ZdaPvRKSt9nothrow_t@@Base+0x1128>
   129b4:	stp	x8, x8, [x19, #16]
   129b8:	mov	w9, #0x1                   	// #1
   129bc:	b	1290c <_ZdaPvRKSt9nothrow_t@@Base+0x1138>
   129c0:	ldr	x2, [sp, #16]
   129c4:	mov	x0, x20
   129c8:	mov	x1, x24
   129cc:	str	x12, [sp, #8]
   129d0:	bl	12524 <_ZdaPvRKSt9nothrow_t@@Base+0xd50>
   129d4:	tbz	w0, #0, 12b40 <_ZdaPvRKSt9nothrow_t@@Base+0x136c>
   129d8:	ldr	x8, [x24]
   129dc:	ldr	x12, [sp, #8]
   129e0:	add	x13, sp, #0x20
   129e4:	b	12958 <_ZdaPvRKSt9nothrow_t@@Base+0x1184>
   129e8:	cbz	x24, 12ae4 <_ZdaPvRKSt9nothrow_t@@Base+0x1310>
   129ec:	ldr	x9, [sp, #24]
   129f0:	mov	w10, #0xd810                	// #55312
   129f4:	add	x23, x20, x10
   129f8:	add	x26, sp, #0x20
   129fc:	add	x9, x20, x9, lsl #10
   12a00:	add	x21, x9, #0x18
   12a04:	b	12a2c <_ZdaPvRKSt9nothrow_t@@Base+0x1258>
   12a08:	ldr	x10, [x19, #24]
   12a0c:	add	x9, x9, #0x1
   12a10:	str	x8, [x10]
   12a14:	str	x8, [x19, #24]
   12a18:	mov	x8, xzr
   12a1c:	str	x9, [x19, #8]
   12a20:	subs	x24, x24, #0x1
   12a24:	add	x26, x26, #0x8
   12a28:	b.eq	12ae4 <_ZdaPvRKSt9nothrow_t@@Base+0x1310>  // b.none
   12a2c:	cbz	x8, 12a3c <_ZdaPvRKSt9nothrow_t@@Base+0x1268>
   12a30:	ldr	x27, [x26]
   12a34:	ldr	x9, [x8, #8]
   12a38:	b	12a98 <_ZdaPvRKSt9nothrow_t@@Base+0x12c4>
   12a3c:	ldr	x27, [x26]
   12a40:	ldr	x3, [x21]
   12a44:	mov	x8, x27
   12a48:	cbz	x3, 12a8c <_ZdaPvRKSt9nothrow_t@@Base+0x12b8>
   12a4c:	cmp	x3, #0x36
   12a50:	b.cs	12b50 <_ZdaPvRKSt9nothrow_t@@Base+0x137c>  // b.hs, b.nlast
   12a54:	add	x22, x20, x3, lsl #10
   12a58:	ldr	x8, [x22]
   12a5c:	cbz	x8, 12ac8 <_ZdaPvRKSt9nothrow_t@@Base+0x12f4>
   12a60:	sub	x9, x8, #0x1
   12a64:	add	x10, x22, #0x20
   12a68:	str	x9, [x22]
   12a6c:	add	x8, x10, x8, lsl #3
   12a70:	ldur	x11, [x8, #-16]
   12a74:	ldr	x8, [x10, x9, lsl #3]
   12a78:	prfm	pldl1keep, [x11]
   12a7c:	ldr	x9, [x22, #16]
   12a80:	ldr	x10, [x23]
   12a84:	add	x9, x10, x9
   12a88:	str	x9, [x23]
   12a8c:	cbz	x8, 12b40 <_ZdaPvRKSt9nothrow_t@@Base+0x136c>
   12a90:	mov	x9, xzr
   12a94:	str	xzr, [x8, #8]
   12a98:	add	x10, x9, #0x1
   12a9c:	add	x9, x8, x9, lsl #3
   12aa0:	cmp	x10, x25
   12aa4:	str	x10, [x8, #8]
   12aa8:	str	x27, [x9, #16]
   12aac:	b.ne	12a20 <_ZdaPvRKSt9nothrow_t@@Base+0x124c>  // b.any
   12ab0:	ldr	x9, [x19, #8]
   12ab4:	str	xzr, [x8]
   12ab8:	cbnz	x9, 12a08 <_ZdaPvRKSt9nothrow_t@@Base+0x1234>
   12abc:	stp	x8, x8, [x19, #16]
   12ac0:	mov	w9, #0x1                   	// #1
   12ac4:	b	12a18 <_ZdaPvRKSt9nothrow_t@@Base+0x1244>
   12ac8:	ldr	x2, [sp, #16]
   12acc:	mov	x0, x20
   12ad0:	mov	x1, x22
   12ad4:	bl	12524 <_ZdaPvRKSt9nothrow_t@@Base+0xd50>
   12ad8:	tbz	w0, #0, 12b40 <_ZdaPvRKSt9nothrow_t@@Base+0x136c>
   12adc:	ldr	x8, [x22]
   12ae0:	b	12a60 <_ZdaPvRKSt9nothrow_t@@Base+0x128c>
   12ae4:	cbz	x8, 12b1c <_ZdaPvRKSt9nothrow_t@@Base+0x1348>
   12ae8:	ldr	x9, [x8, #8]
   12aec:	cbz	x9, 12b6c <_ZdaPvRKSt9nothrow_t@@Base+0x1398>
   12af0:	ldr	x9, [x19, #8]
   12af4:	str	xzr, [x8]
   12af8:	cbz	x9, 12b10 <_ZdaPvRKSt9nothrow_t@@Base+0x133c>
   12afc:	ldr	x10, [x19, #24]
   12b00:	str	x8, [x10]
   12b04:	str	x8, [x19, #24]
   12b08:	add	x8, x9, #0x1
   12b0c:	b	12b18 <_ZdaPvRKSt9nothrow_t@@Base+0x1344>
   12b10:	stp	x8, x8, [x19, #16]
   12b14:	mov	w8, #0x1                   	// #1
   12b18:	str	x8, [x19, #8]
   12b1c:	mov	w0, #0x1                   	// #1
   12b20:	add	sp, sp, #0x1a0
   12b24:	ldp	x20, x19, [sp, #80]
   12b28:	ldp	x22, x21, [sp, #64]
   12b2c:	ldp	x24, x23, [sp, #48]
   12b30:	ldp	x26, x25, [sp, #32]
   12b34:	ldp	x28, x27, [sp, #16]
   12b38:	ldp	x29, x30, [sp], #96
   12b3c:	ret
   12b40:	mov	w0, wzr
   12b44:	b	12b20 <_ZdaPvRKSt9nothrow_t@@Base+0x134c>
   12b48:	mov	x25, xzr
   12b4c:	b	12894 <_ZdaPvRKSt9nothrow_t@@Base+0x10c0>
   12b50:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12b54:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12b58:	add	x0, x0, #0xab8
   12b5c:	add	x2, x2, #0xc1a
   12b60:	mov	w1, #0x9a                  	// #154
   12b64:	mov	w4, #0x36                  	// #54
   12b68:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12b6c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12b70:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12b74:	add	x0, x0, #0xb80
   12b78:	add	x2, x2, #0xb18
   12b7c:	mov	w1, #0x174                 	// #372
   12b80:	mov	x3, xzr
   12b84:	mov	x4, xzr
   12b88:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12b8c:	stp	x30, x23, [sp, #-48]!
   12b90:	stp	x22, x21, [sp, #16]
   12b94:	stp	x20, x19, [sp, #32]
   12b98:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   12b9c:	mov	x19, x2
   12ba0:	ldr	x2, [x8, #616]
   12ba4:	mov	x22, x1
   12ba8:	mov	x21, x0
   12bac:	mov	w0, #0x100000              	// #1048576
   12bb0:	mov	w1, #0x100000              	// #1048576
   12bb4:	bl	1b59c <__sanitizer_set_report_fd@@Base+0x4f58>
   12bb8:	mov	x20, x0
   12bbc:	cbz	x0, 12c4c <_ZdaPvRKSt9nothrow_t@@Base+0x1478>
   12bc0:	ldr	x8, [x22, #24]
   12bc4:	tst	x20, #0xfffff
   12bc8:	add	x8, x8, #0x100, lsl #12
   12bcc:	str	x8, [x22, #24]
   12bd0:	b.ne	12c60 <_ZdaPvRKSt9nothrow_t@@Base+0x148c>  // b.any
   12bd4:	lsr	x8, x20, #48
   12bd8:	cbnz	x8, 12c80 <_ZdaPvRKSt9nothrow_t@@Base+0x14ac>
   12bdc:	lsr	x23, x20, #32
   12be0:	ldr	x0, [x21, x23, lsl #3]
   12be4:	dmb	ish
   12be8:	cbnz	x0, 12c3c <_ZdaPvRKSt9nothrow_t@@Base+0x1468>
   12bec:	add	x22, x21, #0x80, lsl #12
   12bf0:	mov	w8, #0x1                   	// #1
   12bf4:	ldaxrb	w9, [x22]
   12bf8:	stlxrb	w10, w8, [x22]
   12bfc:	cbnz	w10, 12bf4 <_ZdaPvRKSt9nothrow_t@@Base+0x1420>
   12c00:	cbz	w9, 12c0c <_ZdaPvRKSt9nothrow_t@@Base+0x1438>
   12c04:	mov	x0, x22
   12c08:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   12c0c:	ldr	x0, [x21, x23, lsl #3]
   12c10:	dmb	ish
   12c14:	cbnz	x0, 12c34 <_ZdaPvRKSt9nothrow_t@@Base+0x1460>
   12c18:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12c1c:	add	x1, x1, #0xc82
   12c20:	mov	w0, #0x1000                	// #4096
   12c24:	mov	w2, wzr
   12c28:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   12c2c:	dmb	ish
   12c30:	str	x0, [x21, x23, lsl #3]
   12c34:	dmb	ish
   12c38:	strb	wzr, [x22]
   12c3c:	ubfx	x8, x20, #20, #12
   12c40:	ldrb	w4, [x0, x8]
   12c44:	cbnz	x4, 12ca0 <_ZdaPvRKSt9nothrow_t@@Base+0x14cc>
   12c48:	strb	w19, [x0, x8]
   12c4c:	mov	x0, x20
   12c50:	ldp	x20, x19, [sp, #32]
   12c54:	ldp	x22, x21, [sp, #16]
   12c58:	ldp	x30, x23, [sp], #48
   12c5c:	ret
   12c60:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12c64:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12c68:	add	x0, x0, #0xb80
   12c6c:	add	x2, x2, #0xbde
   12c70:	mov	w1, #0x131                 	// #305
   12c74:	mov	x3, xzr
   12c78:	mov	x4, xzr
   12c7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12c80:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12c84:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12c88:	lsr	x3, x20, #20
   12c8c:	add	x0, x0, #0xb80
   12c90:	add	x2, x2, #0xc92
   12c94:	mov	w1, #0x121                 	// #289
   12c98:	mov	w4, #0x10000000            	// #268435456
   12c9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12ca0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12ca4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12ca8:	add	x0, x0, #0xc05
   12cac:	add	x2, x2, #0xc61
   12cb0:	mov	w1, #0x47                  	// #71
   12cb4:	mov	x3, xzr
   12cb8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12cbc:	str	x30, [sp, #-48]!
   12cc0:	stp	x22, x21, [sp, #16]
   12cc4:	stp	x20, x19, [sp, #32]
   12cc8:	mov	x19, x2
   12ccc:	cbz	x2, 12e04 <_ZdaPvRKSt9nothrow_t@@Base+0x1630>
   12cd0:	cmp	x19, #0x36
   12cd4:	b.cs	12e24 <_ZdaPvRKSt9nothrow_t@@Base+0x1650>  // b.hs, b.nlast
   12cd8:	add	x22, x0, x19, lsl #10
   12cdc:	mov	x8, x22
   12ce0:	ldr	x9, [x8, #8]!
   12ce4:	mov	x21, x3
   12ce8:	mov	x2, x1
   12cec:	mov	x20, x0
   12cf0:	cbz	x9, 12d38 <_ZdaPvRKSt9nothrow_t@@Base+0x1564>
   12cf4:	ldr	x8, [x22]
   12cf8:	cmp	x8, x9
   12cfc:	b.eq	12dec <_ZdaPvRKSt9nothrow_t@@Base+0x1618>  // b.none
   12d00:	add	x10, x20, x19, lsl #10
   12d04:	add	x9, x8, #0x1
   12d08:	add	x8, x10, x8, lsl #3
   12d0c:	mov	w11, #0xd810                	// #55312
   12d10:	str	x9, [x22]
   12d14:	str	x21, [x8, #32]
   12d18:	ldr	x8, [x10, #16]
   12d1c:	ldr	x9, [x20, x11]
   12d20:	sub	x8, x9, x8
   12d24:	str	x8, [x20, x11]
   12d28:	ldp	x20, x19, [sp, #32]
   12d2c:	ldp	x22, x21, [sp, #16]
   12d30:	ldr	x30, [sp], #48
   12d34:	ret
   12d38:	add	x9, x20, #0x418
   12d3c:	mov	w10, #0x1                   	// #1
   12d40:	mov	w11, #0x10                  	// #16
   12d44:	mov	w12, #0x4000                	// #16384
   12d48:	mov	w13, #0x40                  	// #64
   12d4c:	mov	w14, #0x3e                  	// #62
   12d50:	mov	w15, #0x14                  	// #20
   12d54:	mov	w16, #0x100                 	// #256
   12d58:	b	12dac <_ZdaPvRKSt9nothrow_t@@Base+0x15d8>
   12d5c:	mov	w17, #0x200                 	// #512
   12d60:	udiv	w18, w12, w17
   12d64:	cmp	w18, #0x40
   12d68:	csel	x18, x18, x13, cc  // cc = lo, ul, last
   12d6c:	cmp	x18, #0x0
   12d70:	csinc	x18, x18, xzr, ne  // ne = any
   12d74:	cmp	x18, #0x3e
   12d78:	csel	x18, x18, x14, cc  // cc = lo, ul, last
   12d7c:	lsl	x0, x18, #1
   12d80:	lsl	x18, x18, #3
   12d84:	add	x18, x18, #0x10
   12d88:	cmp	x17, x18
   12d8c:	add	x11, x11, #0x10
   12d90:	stp	x0, x17, [x9, #-16]
   12d94:	csel	x17, x15, xzr, cc  // cc = lo, ul, last
   12d98:	add	x10, x10, #0x1
   12d9c:	cmp	x11, #0x360
   12da0:	str	x17, [x9]
   12da4:	add	x9, x9, #0x400
   12da8:	b.eq	12ddc <_ZdaPvRKSt9nothrow_t@@Base+0x1608>  // b.none
   12dac:	cmp	x11, #0x350
   12db0:	b.eq	12d5c <_ZdaPvRKSt9nothrow_t@@Base+0x1588>  // b.none
   12db4:	cmp	x10, #0x11
   12db8:	mov	x17, x11
   12dbc:	b.cc	12d60 <_ZdaPvRKSt9nothrow_t@@Base+0x158c>  // b.lo, b.ul, b.last
   12dc0:	sub	x17, x10, #0x10
   12dc4:	lsr	x18, x17, #2
   12dc8:	lsl	x18, x16, x18
   12dcc:	lsr	x0, x18, #2
   12dd0:	and	x17, x17, #0x3
   12dd4:	madd	x17, x0, x17, x18
   12dd8:	b	12d60 <_ZdaPvRKSt9nothrow_t@@Base+0x158c>
   12ddc:	ldr	x9, [x8]
   12de0:	ldr	x8, [x22]
   12de4:	cmp	x8, x9
   12de8:	b.ne	12d00 <_ZdaPvRKSt9nothrow_t@@Base+0x152c>  // b.any
   12dec:	mov	x0, x20
   12df0:	mov	x1, x22
   12df4:	mov	x3, x19
   12df8:	bl	12e44 <_ZdaPvRKSt9nothrow_t@@Base+0x1670>
   12dfc:	ldr	x8, [x22]
   12e00:	b	12d00 <_ZdaPvRKSt9nothrow_t@@Base+0x152c>
   12e04:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12e08:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12e0c:	add	x0, x0, #0xab8
   12e10:	add	x2, x2, #0xc02
   12e14:	mov	w1, #0xa8                  	// #168
   12e18:	mov	x3, xzr
   12e1c:	mov	x4, xzr
   12e20:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12e24:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12e28:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12e2c:	add	x0, x0, #0xab8
   12e30:	add	x2, x2, #0xc1a
   12e34:	mov	w1, #0xa9                  	// #169
   12e38:	mov	w4, #0x36                  	// #54
   12e3c:	mov	x3, x19
   12e40:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   12e44:	stp	x30, x25, [sp, #-64]!
   12e48:	stp	x24, x23, [sp, #16]
   12e4c:	stp	x22, x21, [sp, #32]
   12e50:	stp	x20, x19, [sp, #48]
   12e54:	ldp	x25, x8, [x1]
   12e58:	add	x9, x0, x3, lsl #10
   12e5c:	mov	x19, x3
   12e60:	ldr	x3, [x9, #24]
   12e64:	lsr	x8, x8, #1
   12e68:	cmp	x8, x25
   12e6c:	mov	x20, x2
   12e70:	mov	x21, x1
   12e74:	mov	x22, x0
   12e78:	csel	x24, x8, x25, cc  // cc = lo, ul, last
   12e7c:	cbz	x3, 12ecc <_ZdaPvRKSt9nothrow_t@@Base+0x16f8>
   12e80:	cmp	x3, #0x36
   12e84:	b.cs	12fec <_ZdaPvRKSt9nothrow_t@@Base+0x1818>  // b.hs, b.nlast
   12e88:	add	x23, x22, x3, lsl #10
   12e8c:	ldr	x8, [x23]
   12e90:	cbz	x8, 12fb4 <_ZdaPvRKSt9nothrow_t@@Base+0x17e0>
   12e94:	sub	x9, x8, #0x1
   12e98:	add	x10, x23, #0x20
   12e9c:	str	x9, [x23]
   12ea0:	add	x8, x10, x8, lsl #3
   12ea4:	ldur	x8, [x8, #-16]
   12ea8:	mov	w11, #0xd810                	// #55312
   12eac:	ldr	x3, [x10, x9, lsl #3]
   12eb0:	prfm	pldl1keep, [x8]
   12eb4:	ldr	x8, [x23, #16]
   12eb8:	ldr	x9, [x22, x11]
   12ebc:	add	x8, x9, x8
   12ec0:	str	x8, [x22, x11]
   12ec4:	cbnz	x3, 12edc <_ZdaPvRKSt9nothrow_t@@Base+0x1708>
   12ec8:	b	12fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x17fc>
   12ecc:	sub	x8, x25, x24
   12ed0:	add	x8, x21, x8, lsl #3
   12ed4:	ldr	x3, [x8, #32]
   12ed8:	cbz	x3, 12fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x17fc>
   12edc:	str	x24, [x3, #8]
   12ee0:	cbz	x24, 12f48 <_ZdaPvRKSt9nothrow_t@@Base+0x1774>
   12ee4:	cmp	x24, #0x4
   12ee8:	b.cc	12f20 <_ZdaPvRKSt9nothrow_t@@Base+0x174c>  // b.lo, b.ul, b.last
   12eec:	lsl	x9, x25, #3
   12ef0:	add	x8, x9, #0x20
   12ef4:	add	x10, x3, #0x10
   12ef8:	add	x11, x21, x8
   12efc:	cmp	x11, x10
   12f00:	b.ls	12f78 <_ZdaPvRKSt9nothrow_t@@Base+0x17a4>  // b.plast
   12f04:	lsl	x10, x24, #3
   12f08:	add	x11, x10, x3
   12f0c:	sub	x8, x8, x10
   12f10:	add	x10, x11, #0x10
   12f14:	add	x8, x21, x8
   12f18:	cmp	x8, x10
   12f1c:	b.cs	12f78 <_ZdaPvRKSt9nothrow_t@@Base+0x17a4>  // b.hs, b.nlast
   12f20:	mov	x8, xzr
   12f24:	sub	x9, x8, x24
   12f28:	add	x8, x3, x8, lsl #3
   12f2c:	add	x10, x21, x25, lsl #3
   12f30:	add	x8, x8, #0x10
   12f34:	add	x10, x10, #0x20
   12f38:	ldr	x11, [x10, x9, lsl #3]
   12f3c:	adds	x9, x9, #0x1
   12f40:	str	x11, [x8], #8
   12f44:	b.cc	12f38 <_ZdaPvRKSt9nothrow_t@@Base+0x1764>  // b.lo, b.ul, b.last
   12f48:	ldr	x8, [x21]
   12f4c:	mov	w9, #0xd800                	// #55296
   12f50:	add	x1, x22, x9
   12f54:	mov	x0, x20
   12f58:	sub	x8, x8, x24
   12f5c:	str	x8, [x21]
   12f60:	mov	x2, x19
   12f64:	ldp	x20, x19, [sp, #48]
   12f68:	ldp	x22, x21, [sp, #32]
   12f6c:	ldp	x24, x23, [sp, #16]
   12f70:	ldp	x30, x25, [sp], #64
   12f74:	b	13008 <_ZdaPvRKSt9nothrow_t@@Base+0x1834>
   12f78:	sub	x9, x9, x24, lsl #3
   12f7c:	and	x8, x24, #0x7ffffffffffffffc
   12f80:	add	x9, x9, x21
   12f84:	add	x9, x9, #0x30
   12f88:	add	x10, x3, #0x20
   12f8c:	mov	x11, x8
   12f90:	ldp	q0, q1, [x9, #-16]
   12f94:	subs	x11, x11, #0x4
   12f98:	add	x9, x9, #0x20
   12f9c:	stp	q0, q1, [x10, #-16]
   12fa0:	add	x10, x10, #0x20
   12fa4:	b.ne	12f90 <_ZdaPvRKSt9nothrow_t@@Base+0x17bc>  // b.any
   12fa8:	cmp	x24, x8
   12fac:	b.eq	12f48 <_ZdaPvRKSt9nothrow_t@@Base+0x1774>  // b.none
   12fb0:	b	12f24 <_ZdaPvRKSt9nothrow_t@@Base+0x1750>
   12fb4:	mov	x0, x22
   12fb8:	mov	x1, x23
   12fbc:	mov	x2, x20
   12fc0:	bl	12524 <_ZdaPvRKSt9nothrow_t@@Base+0xd50>
   12fc4:	tbz	w0, #0, 12fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x17fc>
   12fc8:	ldr	x8, [x23]
   12fcc:	b	12e94 <_ZdaPvRKSt9nothrow_t@@Base+0x16c0>
   12fd0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   12fd4:	ldr	x8, [x8, #4024]
   12fd8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12fdc:	add	x0, x0, #0xd17
   12fe0:	ldr	x1, [x8]
   12fe4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   12fe8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   12fec:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   12ff0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   12ff4:	add	x0, x0, #0xab8
   12ff8:	add	x2, x2, #0xc1a
   12ffc:	mov	w1, #0x9a                  	// #154
   13000:	mov	w4, #0x36                  	// #54
   13004:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13008:	str	x30, [sp, #-48]!
   1300c:	stp	x22, x21, [sp, #16]
   13010:	stp	x20, x19, [sp, #32]
   13014:	ldr	x8, [x3, #8]
   13018:	cbz	x8, 130c4 <_ZdaPvRKSt9nothrow_t@@Base+0x18f0>
   1301c:	mov	w9, #0x40                  	// #64
   13020:	add	x8, x0, x2, lsl #6
   13024:	movk	w9, #0x8, lsl #16
   13028:	mov	x20, x3
   1302c:	mov	x21, x2
   13030:	mov	x22, x0
   13034:	add	x19, x8, x9
   13038:	mov	w8, #0x1                   	// #1
   1303c:	ldaxrb	w9, [x19]
   13040:	stlxrb	w10, w8, [x19]
   13044:	cbnz	w10, 1303c <_ZdaPvRKSt9nothrow_t@@Base+0x1868>
   13048:	cbz	w9, 13054 <_ZdaPvRKSt9nothrow_t@@Base+0x1880>
   1304c:	mov	x0, x19
   13050:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   13054:	mov	w8, #0x48                  	// #72
   13058:	add	x9, x22, x21, lsl #6
   1305c:	movk	w8, #0x8, lsl #16
   13060:	add	x8, x9, x8
   13064:	ldr	x10, [x8]
   13068:	cbz	x10, 13088 <_ZdaPvRKSt9nothrow_t@@Base+0x18b4>
   1306c:	mov	w11, #0x50                  	// #80
   13070:	movk	w11, #0x8, lsl #16
   13074:	ldr	x12, [x9, x11]
   13078:	str	x12, [x20]
   1307c:	str	x20, [x9, x11]
   13080:	add	x9, x10, #0x1
   13084:	b	130a8 <_ZdaPvRKSt9nothrow_t@@Base+0x18d4>
   13088:	mov	w10, #0x58                  	// #88
   1308c:	mov	w11, #0x50                  	// #80
   13090:	movk	w10, #0x8, lsl #16
   13094:	movk	w11, #0x8, lsl #16
   13098:	str	xzr, [x20]
   1309c:	str	x20, [x9, x10]
   130a0:	str	x20, [x9, x11]
   130a4:	mov	w9, #0x1                   	// #1
   130a8:	str	x9, [x8]
   130ac:	dmb	ish
   130b0:	strb	wzr, [x19]
   130b4:	ldp	x20, x19, [sp, #32]
   130b8:	ldp	x22, x21, [sp, #16]
   130bc:	ldr	x30, [sp], #48
   130c0:	ret
   130c4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   130c8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   130cc:	add	x0, x0, #0xb80
   130d0:	add	x2, x2, #0xb18
   130d4:	mov	w1, #0xb8                  	// #184
   130d8:	mov	x3, xzr
   130dc:	mov	x4, xzr
   130e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   130e4:	stp	x30, x25, [sp, #-64]!
   130e8:	stp	x24, x23, [sp, #16]
   130ec:	stp	x22, x21, [sp, #32]
   130f0:	stp	x20, x19, [sp, #48]
   130f4:	mov	x22, x4
   130f8:	mov	x23, x3
   130fc:	mov	x21, x1
   13100:	mov	x20, x0
   13104:	cbz	x2, 131c4 <_ZdaPvRKSt9nothrow_t@@Base+0x19f0>
   13108:	mov	x19, x2
   1310c:	cbz	x23, 1320c <_ZdaPvRKSt9nothrow_t@@Base+0x1a38>
   13110:	lsr	x25, x19, #48
   13114:	cbnz	x25, 13138 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>
   13118:	lsr	x8, x19, #29
   1311c:	and	x8, x8, #0x7fffffff8
   13120:	ldr	x8, [x20, x8]
   13124:	dmb	ish
   13128:	cbz	x8, 13138 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>
   1312c:	ubfx	x9, x19, #20, #12
   13130:	ldrb	w8, [x8, x9]
   13134:	cbnz	w8, 13150 <_ZdaPvRKSt9nothrow_t@@Base+0x197c>
   13138:	mov	w8, #0xdc0                 	// #3520
   1313c:	movk	w8, #0x8, lsl #16
   13140:	add	x0, x20, x8
   13144:	mov	x1, x19
   13148:	bl	13524 <_ZdaPvRKSt9nothrow_t@@Base+0x1d50>
   1314c:	cbz	x0, 132b0 <_ZdaPvRKSt9nothrow_t@@Base+0x1adc>
   13150:	mov	x0, x20
   13154:	mov	x1, x19
   13158:	bl	132d0 <_ZdaPvRKSt9nothrow_t@@Base+0x1afc>
   1315c:	mov	x24, x0
   13160:	mov	x0, x20
   13164:	mov	x1, x21
   13168:	mov	x2, x23
   1316c:	mov	x3, x22
   13170:	bl	12080 <_ZdaPvRKSt9nothrow_t@@Base+0x8ac>
   13174:	mov	x22, x0
   13178:	cbz	x0, 13190 <_ZdaPvRKSt9nothrow_t@@Base+0x19bc>
   1317c:	cmp	x24, x23
   13180:	csel	x2, x23, x24, hi  // hi = pmore
   13184:	mov	x0, x22
   13188:	mov	x1, x19
   1318c:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   13190:	cbnz	x25, 131e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1a14>
   13194:	lsr	x8, x19, #32
   13198:	ldr	x10, [x20, x8, lsl #3]
   1319c:	dmb	ish
   131a0:	cbz	x10, 131e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1a14>
   131a4:	ubfx	x9, x19, #20, #12
   131a8:	ldrb	w10, [x10, x9]
   131ac:	cbz	w10, 131e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1a14>
   131b0:	ldr	x8, [x20, x8, lsl #3]
   131b4:	dmb	ish
   131b8:	cbz	x8, 1326c <_ZdaPvRKSt9nothrow_t@@Base+0x1a98>
   131bc:	ldrb	w2, [x8, x9]
   131c0:	b	13270 <_ZdaPvRKSt9nothrow_t@@Base+0x1a9c>
   131c4:	mov	x0, x20
   131c8:	mov	x1, x21
   131cc:	mov	x2, x23
   131d0:	mov	x3, x22
   131d4:	ldp	x20, x19, [sp, #48]
   131d8:	ldp	x22, x21, [sp, #32]
   131dc:	ldp	x24, x23, [sp, #16]
   131e0:	ldp	x30, x25, [sp], #64
   131e4:	b	12080 <_ZdaPvRKSt9nothrow_t@@Base+0x8ac>
   131e8:	mov	w8, #0xdc0                 	// #3520
   131ec:	mov	w9, #0x1008                	// #4104
   131f0:	movk	w8, #0x8, lsl #16
   131f4:	movk	w9, #0xc, lsl #16
   131f8:	add	x0, x20, x8
   131fc:	add	x1, x20, x9
   13200:	mov	x2, x19
   13204:	bl	133ec <_ZdaPvRKSt9nothrow_t@@Base+0x1c18>
   13208:	b	13280 <_ZdaPvRKSt9nothrow_t@@Base+0x1aac>
   1320c:	lsr	x8, x19, #48
   13210:	cbnz	x8, 13244 <_ZdaPvRKSt9nothrow_t@@Base+0x1a70>
   13214:	lsr	x8, x19, #32
   13218:	ldr	x10, [x20, x8, lsl #3]
   1321c:	dmb	ish
   13220:	cbz	x10, 13244 <_ZdaPvRKSt9nothrow_t@@Base+0x1a70>
   13224:	ubfx	x9, x19, #20, #12
   13228:	ldrb	w10, [x10, x9]
   1322c:	cbz	w10, 13244 <_ZdaPvRKSt9nothrow_t@@Base+0x1a70>
   13230:	ldr	x8, [x20, x8, lsl #3]
   13234:	dmb	ish
   13238:	cbz	x8, 13298 <_ZdaPvRKSt9nothrow_t@@Base+0x1ac4>
   1323c:	ldrb	w2, [x8, x9]
   13240:	b	1329c <_ZdaPvRKSt9nothrow_t@@Base+0x1ac8>
   13244:	mov	w8, #0xdc0                 	// #3520
   13248:	mov	w9, #0x1008                	// #4104
   1324c:	movk	w8, #0x8, lsl #16
   13250:	movk	w9, #0xc, lsl #16
   13254:	add	x0, x20, x8
   13258:	add	x1, x20, x9
   1325c:	mov	x2, x19
   13260:	bl	133ec <_ZdaPvRKSt9nothrow_t@@Base+0x1c18>
   13264:	mov	x22, xzr
   13268:	b	13280 <_ZdaPvRKSt9nothrow_t@@Base+0x1aac>
   1326c:	mov	x2, xzr
   13270:	mov	x0, x21
   13274:	mov	x1, x20
   13278:	mov	x3, x19
   1327c:	bl	12cbc <_ZdaPvRKSt9nothrow_t@@Base+0x14e8>
   13280:	mov	x0, x22
   13284:	ldp	x20, x19, [sp, #48]
   13288:	ldp	x22, x21, [sp, #32]
   1328c:	ldp	x24, x23, [sp, #16]
   13290:	ldp	x30, x25, [sp], #64
   13294:	ret
   13298:	mov	x2, xzr
   1329c:	mov	x0, x21
   132a0:	mov	x1, x20
   132a4:	mov	x3, x19
   132a8:	bl	12cbc <_ZdaPvRKSt9nothrow_t@@Base+0x14e8>
   132ac:	b	13264 <_ZdaPvRKSt9nothrow_t@@Base+0x1a90>
   132b0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   132b4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   132b8:	add	x0, x0, #0xa5b
   132bc:	add	x2, x2, #0xe10
   132c0:	mov	w1, #0x69                  	// #105
   132c4:	mov	x3, xzr
   132c8:	mov	x4, xzr
   132cc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   132d0:	str	x30, [sp, #-16]!
   132d4:	lsr	x8, x1, #48
   132d8:	cbnz	x8, 13330 <_ZdaPvRKSt9nothrow_t@@Base+0x1b5c>
   132dc:	lsr	x8, x1, #32
   132e0:	ldr	x10, [x0, x8, lsl #3]
   132e4:	dmb	ish
   132e8:	cbz	x10, 13330 <_ZdaPvRKSt9nothrow_t@@Base+0x1b5c>
   132ec:	ubfx	x9, x1, #20, #12
   132f0:	ldrb	w10, [x10, x9]
   132f4:	cbz	w10, 13330 <_ZdaPvRKSt9nothrow_t@@Base+0x1b5c>
   132f8:	ldr	x10, [x0, x8, lsl #3]
   132fc:	dmb	ish
   13300:	cbz	x10, 133cc <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   13304:	ldrb	w10, [x10, x9]
   13308:	cbz	w10, 133cc <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   1330c:	ldr	x8, [x0, x8, lsl #3]
   13310:	dmb	ish
   13314:	cbz	x8, 13374 <_ZdaPvRKSt9nothrow_t@@Base+0x1ba0>
   13318:	ldrb	w8, [x8, x9]
   1331c:	cmp	x8, #0x35
   13320:	b.ne	1336c <_ZdaPvRKSt9nothrow_t@@Base+0x1b98>  // b.any
   13324:	mov	w0, #0x200                 	// #512
   13328:	ldr	x30, [sp], #16
   1332c:	ret
   13330:	mov	w8, #0xdc0                 	// #3520
   13334:	movk	w8, #0x8, lsl #16
   13338:	ldr	x8, [x0, x8]
   1333c:	sub	x9, x8, #0x1
   13340:	tst	x9, x1
   13344:	b.ne	133a4 <_ZdaPvRKSt9nothrow_t@@Base+0x1bd0>  // b.any
   13348:	tst	x8, x9
   1334c:	b.ne	133bc <_ZdaPvRKSt9nothrow_t@@Base+0x1be8>  // b.any
   13350:	sub	x10, x1, x8
   13354:	ldr	x10, [x10, #16]
   13358:	neg	x8, x8
   1335c:	add	x9, x10, x9
   13360:	and	x0, x9, x8
   13364:	ldr	x30, [sp], #16
   13368:	ret
   1336c:	cmp	w8, #0x10
   13370:	b.hi	13380 <_ZdaPvRKSt9nothrow_t@@Base+0x1bac>  // b.pmore
   13374:	lsl	x0, x8, #4
   13378:	ldr	x30, [sp], #16
   1337c:	ret
   13380:	sub	x8, x8, #0x10
   13384:	mov	w9, #0x100                 	// #256
   13388:	lsr	x10, x8, #2
   1338c:	lsl	x9, x9, x10
   13390:	lsr	x10, x9, #2
   13394:	and	x8, x8, #0x3
   13398:	madd	x0, x10, x8, x9
   1339c:	ldr	x30, [sp], #16
   133a0:	ret
   133a4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   133a8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   133ac:	add	x0, x0, #0xd63
   133b0:	add	x2, x2, #0xfd8
   133b4:	mov	w1, #0x12d                 	// #301
   133b8:	b	133e0 <_ZdaPvRKSt9nothrow_t@@Base+0x1c0c>
   133bc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   133c0:	add	x0, x0, #0x20f
   133c4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   133c8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   133cc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   133d0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   133d4:	add	x0, x0, #0xb80
   133d8:	add	x2, x2, #0xe10
   133dc:	mov	w1, #0xd7                  	// #215
   133e0:	mov	x3, xzr
   133e4:	mov	x4, xzr
   133e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   133ec:	str	x30, [sp, #-48]!
   133f0:	stp	x22, x21, [sp, #16]
   133f4:	stp	x20, x19, [sp, #32]
   133f8:	ldr	x8, [x0]
   133fc:	sub	x9, x8, #0x1
   13400:	tst	x9, x2
   13404:	b.ne	134cc <_ZdaPvRKSt9nothrow_t@@Base+0x1cf8>  // b.any
   13408:	mov	w9, #0x10                  	// #16
   1340c:	movk	w9, #0x4, lsl #16
   13410:	add	x22, x0, x9
   13414:	mov	x21, x0
   13418:	mov	x20, x1
   1341c:	sub	x19, x2, x8
   13420:	add	x0, x22, #0x230
   13424:	mov	w8, #0x1                   	// #1
   13428:	ldaxrb	w9, [x0]
   1342c:	stlxrb	w10, w8, [x0]
   13430:	cbnz	w10, 13428 <_ZdaPvRKSt9nothrow_t@@Base+0x1c54>
   13434:	cbz	w9, 1343c <_ZdaPvRKSt9nothrow_t@@Base+0x1c68>
   13438:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1343c:	ldr	x3, [x19, #24]
   13440:	ldr	x9, [x21, #8]
   13444:	ldr	x8, [x9, x3, lsl #3]
   13448:	cmp	x8, x19
   1344c:	b.ne	134ec <_ZdaPvRKSt9nothrow_t@@Base+0x1d18>  // b.any
   13450:	ldr	x4, [x22]
   13454:	cmp	x3, x4
   13458:	b.cs	1350c <_ZdaPvRKSt9nothrow_t@@Base+0x1d38>  // b.hs, b.nlast
   1345c:	sub	x8, x4, #0x1
   13460:	str	x8, [x22]
   13464:	ldr	x8, [x9, x8, lsl #3]
   13468:	lsl	x10, x3, #3
   1346c:	str	x8, [x9, x10]
   13470:	ldr	x8, [x21, #8]
   13474:	ldr	x8, [x8, x10]
   13478:	str	x3, [x8, #24]
   1347c:	ldp	x8, x9, [x22, #24]
   13480:	strb	wzr, [x22, #8]
   13484:	add	x8, x8, #0x1
   13488:	str	x8, [x22, #24]
   1348c:	ldr	x8, [x19, #8]
   13490:	sub	x9, x9, x8
   13494:	str	x9, [x22, #32]
   13498:	ldr	x9, [x20, #16]
   1349c:	sub	x9, x9, x8
   134a0:	str	x9, [x20, #16]
   134a4:	ldr	x9, [x20, #24]
   134a8:	sub	x8, x9, x8
   134ac:	str	x8, [x20, #24]
   134b0:	dmb	ish
   134b4:	strb	wzr, [x22, #560]
   134b8:	ldp	x0, x1, [x19]
   134bc:	ldp	x20, x19, [sp, #32]
   134c0:	ldp	x22, x21, [sp, #16]
   134c4:	ldr	x30, [sp], #48
   134c8:	b	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   134cc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   134d0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   134d4:	add	x0, x0, #0xd63
   134d8:	add	x2, x2, #0xfd8
   134dc:	mov	w1, #0x12d                 	// #301
   134e0:	mov	x3, xzr
   134e4:	mov	x4, xzr
   134e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   134ec:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   134f0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   134f4:	add	x0, x0, #0xd63
   134f8:	add	x2, x2, #0x1c7
   134fc:	mov	w1, #0x8b                  	// #139
   13500:	mov	x3, x8
   13504:	mov	x4, x19
   13508:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1350c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13510:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   13514:	add	x0, x0, #0xd63
   13518:	add	x2, x2, #0x1e1
   1351c:	mov	w1, #0x8c                  	// #140
   13520:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13524:	str	x30, [sp, #-48]!
   13528:	stp	x22, x21, [sp, #16]
   1352c:	stp	x20, x19, [sp, #32]
   13530:	mov	w8, #0x10                  	// #16
   13534:	mov	w9, #0x240                 	// #576
   13538:	movk	w8, #0x4, lsl #16
   1353c:	movk	w9, #0x4, lsl #16
   13540:	mov	x20, x1
   13544:	mov	x21, x0
   13548:	add	x22, x0, x8
   1354c:	add	x19, x0, x9
   13550:	mov	w8, #0x1                   	// #1
   13554:	ldaxrb	w9, [x19]
   13558:	stlxrb	w10, w8, [x19]
   1355c:	cbnz	w10, 13554 <_ZdaPvRKSt9nothrow_t@@Base+0x1d80>
   13560:	cbz	w9, 1356c <_ZdaPvRKSt9nothrow_t@@Base+0x1d98>
   13564:	mov	x0, x19
   13568:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1356c:	ldr	x8, [x22]
   13570:	cbz	x8, 135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1e1c>
   13574:	ldr	x9, [x21, #8]
   13578:	mov	x3, xzr
   1357c:	mov	x10, xzr
   13580:	ldr	x11, [x9, x10, lsl #3]
   13584:	sub	x12, x20, x3
   13588:	add	x10, x10, #0x1
   1358c:	subs	x13, x20, x11
   13590:	cmp	x13, x12
   13594:	csel	x12, x11, x3, cc  // cc = lo, ul, last
   13598:	cmp	x20, x11
   1359c:	csel	x3, x3, x12, cc  // cc = lo, ul, last
   135a0:	cmp	x10, x8
   135a4:	b.cc	13580 <_ZdaPvRKSt9nothrow_t@@Base+0x1dac>  // b.lo, b.ul, b.last
   135a8:	cbz	x3, 135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1e1c>
   135ac:	ldr	x4, [x3]
   135b0:	cmp	x3, x4
   135b4:	b.cc	1360c <_ZdaPvRKSt9nothrow_t@@Base+0x1e38>  // b.lo, b.ul, b.last
   135b8:	ldr	x8, [x3, #8]
   135bc:	add	x4, x8, x4
   135c0:	cmp	x3, x4
   135c4:	b.cs	13624 <_ZdaPvRKSt9nothrow_t@@Base+0x1e50>  // b.hs, b.nlast
   135c8:	cmp	x3, x20
   135cc:	b.hi	1363c <_ZdaPvRKSt9nothrow_t@@Base+0x1e68>  // b.pmore
   135d0:	cmp	x4, x20
   135d4:	b.ls	135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1e1c>  // b.plast
   135d8:	ldr	x8, [x21]
   135dc:	sub	x9, x8, #0x1
   135e0:	tst	x9, x3
   135e4:	b.ne	13658 <_ZdaPvRKSt9nothrow_t@@Base+0x1e84>  // b.any
   135e8:	add	x0, x8, x3
   135ec:	b	135f4 <_ZdaPvRKSt9nothrow_t@@Base+0x1e20>
   135f0:	mov	x0, xzr
   135f4:	dmb	ish
   135f8:	strb	wzr, [x19]
   135fc:	ldp	x20, x19, [sp, #32]
   13600:	ldp	x22, x21, [sp, #16]
   13604:	ldr	x30, [sp], #48
   13608:	ret
   1360c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13610:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   13614:	add	x0, x0, #0xd63
   13618:	add	x2, x2, #0x2d2
   1361c:	mov	w1, #0xc7                  	// #199
   13620:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13624:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13628:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1362c:	add	x0, x0, #0xd63
   13630:	add	x2, x2, #0x2f6
   13634:	mov	w1, #0xc8                  	// #200
   13638:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1363c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13640:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   13644:	add	x0, x0, #0xd63
   13648:	add	x2, x2, #0x327
   1364c:	mov	w1, #0xc9                  	// #201
   13650:	mov	x4, x20
   13654:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13658:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1365c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   13660:	add	x0, x0, #0xd63
   13664:	add	x2, x2, #0x342
   13668:	mov	w1, #0x135                 	// #309
   1366c:	mov	x3, xzr
   13670:	mov	x4, xzr
   13674:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13678:	str	x30, [sp, #-16]!
   1367c:	adrp	x8, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13680:	ldrb	w9, [x8, #1064]
   13684:	tbnz	w9, #0, 136dc <_ZdaPvRKSt9nothrow_t@@Base+0x1f08>
   13688:	tbnz	w4, #0, 136dc <_ZdaPvRKSt9nothrow_t@@Base+0x1f08>
   1368c:	adrp	x9, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   13690:	mov	x5, x1
   13694:	ldr	x1, [x9, #640]
   13698:	mov	w6, w3
   1369c:	mov	x3, x0
   136a0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   136a4:	mov	w9, #0x1                   	// #1
   136a8:	add	x0, x0, #0xe65
   136ac:	mov	x4, x3
   136b0:	strb	w9, [x8, #1064]
   136b4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   136b8:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
   136bc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   136c0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   136c4:	add	x0, x0, #0xea6
   136c8:	add	x2, x2, #0xef9
   136cc:	mov	w1, #0x36                  	// #54
   136d0:	mov	x3, xzr
   136d4:	mov	x4, xzr
   136d8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   136dc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   136e0:	add	x0, x0, #0xe4e
   136e4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   136e8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   136ec:	stp	x30, x21, [sp, #-32]!
   136f0:	stp	x20, x19, [sp, #16]
   136f4:	mov	x19, x0
   136f8:	cbz	x0, 1374c <_ZdaPvRKSt9nothrow_t@@Base+0x1f78>
   136fc:	mov	x20, x1
   13700:	cbz	x1, 1374c <_ZdaPvRKSt9nothrow_t@@Base+0x1f78>
   13704:	mov	x0, x19
   13708:	mov	x1, x20
   1370c:	bl	19254 <__sanitizer_set_report_fd@@Base+0x2c10>
   13710:	cbz	x0, 13724 <_ZdaPvRKSt9nothrow_t@@Base+0x1f50>
   13714:	mov	x21, x0
   13718:	mov	x0, x20
   1371c:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13720:	add	x19, x21, x0
   13724:	ldrb	w8, [x19]
   13728:	cmp	w8, #0x2e
   1372c:	b.ne	1374c <_ZdaPvRKSt9nothrow_t@@Base+0x1f78>  // b.any
   13730:	ldrb	w8, [x19, #1]
   13734:	add	x9, x19, #0x2
   13738:	cmp	w8, #0x2f
   1373c:	csel	x0, x9, x19, eq  // eq = none
   13740:	ldp	x20, x19, [sp, #16]
   13744:	ldp	x30, x21, [sp], #32
   13748:	ret
   1374c:	mov	x0, x19
   13750:	ldp	x20, x19, [sp, #16]
   13754:	ldp	x30, x21, [sp], #32
   13758:	ret
   1375c:	cbz	x0, 1377c <_ZdaPvRKSt9nothrow_t@@Base+0x1fa8>
   13760:	stp	x30, x19, [sp, #-16]!
   13764:	mov	w1, #0x2f                  	// #47
   13768:	mov	x19, x0
   1376c:	bl	18d80 <__sanitizer_set_report_fd@@Base+0x273c>
   13770:	cmp	x0, #0x0
   13774:	csinc	x0, x19, x0, eq  // eq = none
   13778:	ldp	x30, x19, [sp], #16
   1377c:	ret
   13780:	sub	sp, sp, #0x40
   13784:	str	x30, [sp, #32]
   13788:	stp	x20, x19, [sp, #48]
   1378c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   13790:	ldr	x8, [x8, #4056]
   13794:	ldrb	w8, [x8, #60]
   13798:	cbz	w8, 13840 <_ZdaPvRKSt9nothrow_t@@Base+0x206c>
   1379c:	mov	x20, x1
   137a0:	mov	x19, x0
   137a4:	mov	x0, sp
   137a8:	mov	w1, #0x400                 	// #1024
   137ac:	stp	xzr, xzr, [sp, #8]
   137b0:	str	xzr, [sp]
   137b4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   137b8:	ldr	x8, [sp, #16]
   137bc:	cmp	x8, #0x3ff
   137c0:	b.hi	137f8 <_ZdaPvRKSt9nothrow_t@@Base+0x2024>  // b.pmore
   137c4:	ldr	x9, [sp, #8]
   137c8:	cmp	x9, #0x3ff
   137cc:	b.hi	137e0 <_ZdaPvRKSt9nothrow_t@@Base+0x200c>  // b.pmore
   137d0:	mov	x0, sp
   137d4:	mov	w1, #0x400                 	// #1024
   137d8:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   137dc:	ldr	x8, [sp, #16]
   137e0:	ldr	x9, [sp]
   137e4:	mov	w10, #0x400                 	// #1024
   137e8:	sub	x2, x10, x8
   137ec:	mov	w1, wzr
   137f0:	add	x0, x9, x8
   137f4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   137f8:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   137fc:	ldr	q0, [x8, #3632]
   13800:	ldr	x8, [sp]
   13804:	cmp	x20, #0x0
   13808:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1380c:	str	q0, [sp, #16]
   13810:	strb	wzr, [x8]
   13814:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   13818:	ldr	x8, [x8, #640]
   1381c:	add	x1, x1, #0xf1a
   13820:	mov	x0, sp
   13824:	mov	x3, x19
   13828:	csel	x2, x8, x20, eq  // eq = none
   1382c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   13830:	ldr	x0, [sp]
   13834:	bl	69c0 <__sanitizer_report_error_summary@plt>
   13838:	ldp	x0, x1, [sp]
   1383c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   13840:	ldp	x20, x19, [sp, #48]
   13844:	ldr	x30, [sp, #32]
   13848:	add	sp, sp, #0x40
   1384c:	ret

0000000000013850 <__sanitizer_report_error_summary@@Base>:
   13850:	adrp	x8, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   13854:	add	x8, x8, #0x22b
   13858:	mov	x1, x0
   1385c:	mov	x0, x8
   13860:	b	1ca54 <__sanitizer_on_print@@Base+0x4>
   13864:	stp	x30, x19, [sp, #-16]!
   13868:	cbz	x0, 138e4 <__sanitizer_report_error_summary@@Base+0x94>
   1386c:	ldrb	w8, [x0]
   13870:	mov	x3, x0
   13874:	cbz	w8, 138dc <__sanitizer_report_error_summary@@Base+0x8c>
   13878:	mov	x19, x3
   1387c:	cmp	x3, x19
   13880:	b.cc	138ec <__sanitizer_report_error_summary@@Base+0x9c>  // b.lo, b.ul, b.last
   13884:	and	w9, w8, #0xff
   13888:	cmp	w9, #0x1b
   1388c:	b.ne	138c0 <__sanitizer_report_error_summary@@Base+0x70>  // b.any
   13890:	ldrb	w9, [x3, #1]
   13894:	cmp	w9, #0x5b
   13898:	b.ne	138c0 <__sanitizer_report_error_summary@@Base+0x70>  // b.any
   1389c:	mov	w1, #0x6d                  	// #109
   138a0:	mov	x0, x3
   138a4:	bl	18d28 <__sanitizer_set_report_fd@@Base+0x26e4>
   138a8:	mov	x3, x0
   138ac:	ldrb	w8, [x3], #1
   138b0:	cbz	w8, 138e0 <__sanitizer_report_error_summary@@Base+0x90>
   138b4:	ldrb	w8, [x3]
   138b8:	cbnz	w8, 1387c <__sanitizer_report_error_summary@@Base+0x2c>
   138bc:	b	138e0 <__sanitizer_report_error_summary@@Base+0x90>
   138c0:	cmp	x3, x19
   138c4:	b.eq	138cc <__sanitizer_report_error_summary@@Base+0x7c>  // b.none
   138c8:	strb	w8, [x19]
   138cc:	ldrb	w8, [x3, #1]!
   138d0:	add	x19, x19, #0x1
   138d4:	cbnz	w8, 1387c <__sanitizer_report_error_summary@@Base+0x2c>
   138d8:	b	138e0 <__sanitizer_report_error_summary@@Base+0x90>
   138dc:	mov	x19, x3
   138e0:	strb	wzr, [x19]
   138e4:	ldp	x30, x19, [sp], #16
   138e8:	ret
   138ec:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   138f0:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   138f4:	add	x0, x0, #0xea6
   138f8:	add	x2, x2, #0xf2a
   138fc:	mov	w1, #0x69                  	// #105
   13900:	mov	x4, x19
   13904:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   13908:	stp	x30, x21, [sp, #-32]!
   1390c:	stp	x20, x19, [sp, #16]
   13910:	mov	x20, x0
   13914:	ldr	x0, [x0]
   13918:	mov	x21, x1
   1391c:	mov	x1, xzr
   13920:	mov	x19, x2
   13924:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   13928:	add	x0, x20, #0x1c
   1392c:	mov	w2, #0x10                  	// #16
   13930:	mov	w1, wzr
   13934:	stp	xzr, xzr, [x20, #8]
   13938:	str	xzr, [x20]
   1393c:	str	wzr, [x20, #24]
   13940:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   13944:	ldr	x8, [x20, #48]
   13948:	strb	wzr, [x20, #44]
   1394c:	cbnz	x8, 13980 <__sanitizer_report_error_summary@@Base+0x130>
   13950:	mov	x0, x21
   13954:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   13958:	stp	x0, x19, [x20]
   1395c:	ldp	x20, x19, [sp, #16]
   13960:	ldp	x30, x21, [sp], #32
   13964:	ret
   13968:	sub	x8, x8, #0x1
   1396c:	mov	x1, xzr
   13970:	str	x8, [x20, #48]
   13974:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   13978:	ldr	x8, [x20, #48]
   1397c:	cbz	x8, 13950 <__sanitizer_report_error_summary@@Base+0x100>
   13980:	ldr	x0, [x20, #56]
   13984:	ldr	x9, [x0]
   13988:	str	x9, [x20, #56]
   1398c:	cbnz	x9, 13968 <__sanitizer_report_error_summary@@Base+0x118>
   13990:	str	xzr, [x20, #64]
   13994:	b	13968 <__sanitizer_report_error_summary@@Base+0x118>
   13998:	stp	x30, x19, [sp, #-16]!
   1399c:	mov	x19, x0
   139a0:	ldr	x0, [x0]
   139a4:	mov	x1, xzr
   139a8:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   139ac:	add	x0, x19, #0x1c
   139b0:	mov	w2, #0x10                  	// #16
   139b4:	mov	w1, wzr
   139b8:	stp	xzr, xzr, [x19, #8]
   139bc:	str	xzr, [x19]
   139c0:	str	wzr, [x19, #24]
   139c4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   139c8:	ldr	x8, [x19, #48]
   139cc:	strb	wzr, [x19, #44]
   139d0:	cbnz	x8, 139f4 <__sanitizer_report_error_summary@@Base+0x1a4>
   139d4:	ldp	x30, x19, [sp], #16
   139d8:	ret
   139dc:	sub	x8, x8, #0x1
   139e0:	mov	x1, xzr
   139e4:	str	x8, [x19, #48]
   139e8:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   139ec:	ldr	x8, [x19, #48]
   139f0:	cbz	x8, 139d4 <__sanitizer_report_error_summary@@Base+0x184>
   139f4:	ldr	x0, [x19, #56]
   139f8:	ldr	x9, [x0]
   139fc:	str	x9, [x19, #56]
   13a00:	cbnz	x9, 139dc <__sanitizer_report_error_summary@@Base+0x18c>
   13a04:	str	xzr, [x19, #64]
   13a08:	b	139dc <__sanitizer_report_error_summary@@Base+0x18c>
   13a0c:	stp	x30, x25, [sp, #-64]!
   13a10:	stp	x24, x23, [sp, #16]
   13a14:	stp	x22, x21, [sp, #32]
   13a18:	stp	x20, x19, [sp, #48]
   13a1c:	mov	x20, x0
   13a20:	ldr	x0, [x0]
   13a24:	mov	x23, x1
   13a28:	mov	x1, xzr
   13a2c:	mov	x19, x4
   13a30:	mov	w21, w3
   13a34:	mov	x22, x2
   13a38:	and	w25, w5, #0x1
   13a3c:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   13a40:	add	x24, x20, #0x1c
   13a44:	mov	w2, #0x10                  	// #16
   13a48:	mov	x0, x24
   13a4c:	mov	w1, wzr
   13a50:	stp	xzr, xzr, [x20, #8]
   13a54:	str	xzr, [x20]
   13a58:	str	wzr, [x20, #24]
   13a5c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   13a60:	ldr	x8, [x20, #48]
   13a64:	strb	wzr, [x20, #44]
   13a68:	cbnz	x8, 13abc <__sanitizer_report_error_summary@@Base+0x26c>
   13a6c:	mov	x0, x23
   13a70:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   13a74:	stp	x0, x22, [x20]
   13a78:	mov	w2, #0x10                  	// #16
   13a7c:	mov	x0, x24
   13a80:	mov	x1, x19
   13a84:	str	w21, [x20, #24]
   13a88:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   13a8c:	strb	w25, [x20, #44]
   13a90:	ldp	x20, x19, [sp, #48]
   13a94:	ldp	x22, x21, [sp, #32]
   13a98:	ldp	x24, x23, [sp, #16]
   13a9c:	ldp	x30, x25, [sp], #64
   13aa0:	ret
   13aa4:	sub	x8, x8, #0x1
   13aa8:	mov	x1, xzr
   13aac:	str	x8, [x20, #48]
   13ab0:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   13ab4:	ldr	x8, [x20, #48]
   13ab8:	cbz	x8, 13a6c <__sanitizer_report_error_summary@@Base+0x21c>
   13abc:	ldr	x0, [x20, #56]
   13ac0:	ldr	x9, [x0]
   13ac4:	str	x9, [x20, #56]
   13ac8:	cbnz	x9, 13aa4 <__sanitizer_report_error_summary@@Base+0x254>
   13acc:	str	xzr, [x20, #64]
   13ad0:	b	13aa4 <__sanitizer_report_error_summary@@Base+0x254>
   13ad4:	stp	x30, x25, [sp, #-64]!
   13ad8:	stp	x24, x23, [sp, #16]
   13adc:	stp	x22, x21, [sp, #32]
   13ae0:	stp	x20, x19, [sp, #48]
   13ae4:	mov	x19, x2
   13ae8:	mov	x25, x1
   13aec:	mov	x20, x0
   13af0:	mov	w0, #0x30                  	// #48
   13af4:	mov	x1, xzr
   13af8:	mov	x2, xzr
   13afc:	mov	x23, x5
   13b00:	mov	w24, w4
   13b04:	mov	w21, w3
   13b08:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   13b0c:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   13b10:	add	x10, x10, #0xcf
   13b14:	cmp	x23, #0x0
   13b18:	mov	x22, x0
   13b1c:	and	w8, w21, #0x1
   13b20:	and	w9, w24, #0x1
   13b24:	stp	xzr, x25, [x0]
   13b28:	str	x19, [x0, #16]
   13b2c:	add	x0, x0, #0x1a
   13b30:	csel	x1, x10, x23, eq  // eq = none
   13b34:	mov	w2, #0x10                  	// #16
   13b38:	strb	w8, [x22, #24]
   13b3c:	strb	w9, [x22, #25]
   13b40:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   13b44:	ldr	x8, [x20, #48]
   13b48:	str	xzr, [x22]
   13b4c:	cbz	x8, 13b6c <__sanitizer_report_error_summary@@Base+0x31c>
   13b50:	ldr	x9, [x20, #64]
   13b54:	add	x8, x8, #0x1
   13b58:	str	x22, [x9]
   13b5c:	str	x22, [x20, #64]
   13b60:	str	x8, [x20, #48]
   13b64:	tbnz	w21, #0, 13b7c <__sanitizer_report_error_summary@@Base+0x32c>
   13b68:	b	13b8c <__sanitizer_report_error_summary@@Base+0x33c>
   13b6c:	stp	x22, x22, [x20, #56]
   13b70:	mov	w8, #0x1                   	// #1
   13b74:	str	x8, [x20, #48]
   13b78:	tbz	w21, #0, 13b8c <__sanitizer_report_error_summary@@Base+0x33c>
   13b7c:	ldr	x8, [x20, #16]
   13b80:	cmp	x8, x19
   13b84:	b.cs	13b8c <__sanitizer_report_error_summary@@Base+0x33c>  // b.hs, b.nlast
   13b88:	str	x19, [x20, #16]
   13b8c:	ldp	x20, x19, [sp, #48]
   13b90:	ldp	x22, x21, [sp, #32]
   13b94:	ldp	x24, x23, [sp, #16]
   13b98:	ldp	x30, x25, [sp], #64
   13b9c:	ret
   13ba0:	ldr	x8, [x0, #56]
   13ba4:	cbnz	x8, 13bb8 <__sanitizer_report_error_summary@@Base+0x368>
   13ba8:	mov	w0, wzr
   13bac:	ret
   13bb0:	ldr	x8, [x8]
   13bb4:	cbz	x8, 13ba8 <__sanitizer_report_error_summary@@Base+0x358>
   13bb8:	ldr	x9, [x8, #8]
   13bbc:	cmp	x9, x1
   13bc0:	b.hi	13bb0 <__sanitizer_report_error_summary@@Base+0x360>  // b.pmore
   13bc4:	ldr	x9, [x8, #16]
   13bc8:	cmp	x9, x1
   13bcc:	b.ls	13bb0 <__sanitizer_report_error_summary@@Base+0x360>  // b.plast
   13bd0:	mov	w0, #0x1                   	// #1
   13bd4:	ret
   13bd8:	str	x30, [sp, #-16]!
   13bdc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   13be0:	ldr	x8, [x8, #4056]
   13be4:	ldr	x9, [x8, #128]
   13be8:	cbz	x9, 13c10 <__sanitizer_report_error_summary@@Base+0x3c0>
   13bec:	adrp	x9, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13bf0:	add	x9, x9, #0x430
   13bf4:	ldaxr	x10, [x9]
   13bf8:	add	x10, x10, x0
   13bfc:	stlxr	w11, x10, [x9]
   13c00:	cbnz	w11, 13bf4 <__sanitizer_report_error_summary@@Base+0x3a4>
   13c04:	ldr	x8, [x8, #128]
   13c08:	cmp	x8, x10, lsr #20
   13c0c:	b.ls	13c18 <__sanitizer_report_error_summary@@Base+0x3c8>  // b.plast
   13c10:	ldr	x30, [sp], #16
   13c14:	ret
   13c18:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13c1c:	add	x0, x0, #0xf39
   13c20:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   13c24:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   13c28:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   13c2c:	ldr	x8, [x8, #4056]
   13c30:	ldr	x8, [x8, #128]
   13c34:	cbz	x8, 13c54 <__sanitizer_report_error_summary@@Base+0x404>
   13c38:	adrp	x9, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13c3c:	neg	x8, x0
   13c40:	add	x9, x9, #0x430
   13c44:	ldaxr	x10, [x9]
   13c48:	add	x10, x10, x8
   13c4c:	stlxr	w11, x10, [x9]
   13c50:	cbnz	w11, 13c44 <__sanitizer_report_error_summary@@Base+0x3f4>
   13c54:	ret
   13c58:	stp	x30, x27, [sp, #-80]!
   13c5c:	stp	x26, x25, [sp, #16]
   13c60:	stp	x24, x23, [sp, #32]
   13c64:	stp	x22, x21, [sp, #48]
   13c68:	stp	x20, x19, [sp, #64]
   13c6c:	cbz	x1, 13d88 <__sanitizer_report_error_summary@@Base+0x538>
   13c70:	ldrb	w8, [x1]
   13c74:	mov	x19, x1
   13c78:	cbz	w8, 13d94 <__sanitizer_report_error_summary@@Base+0x544>
   13c7c:	cbz	x0, 13c98 <__sanitizer_report_error_summary@@Base+0x448>
   13c80:	mov	x9, x0
   13c84:	ldrb	w8, [x9], #1
   13c88:	cmp	w8, #0x5e
   13c8c:	cset	w8, eq  // eq = none
   13c90:	csel	x26, x9, x0, eq  // eq = none
   13c94:	b	13ca0 <__sanitizer_report_error_summary@@Base+0x450>
   13c98:	mov	w8, wzr
   13c9c:	mov	x26, xzr
   13ca0:	mov	w23, #0x2a                  	// #42
   13ca4:	mov	w24, #0x24                  	// #36
   13ca8:	cbz	x26, 13d90 <__sanitizer_report_error_summary@@Base+0x540>
   13cac:	mov	w9, wzr
   13cb0:	mov	x20, x26
   13cb4:	mov	w25, w8
   13cb8:	ldrb	w8, [x20]
   13cbc:	cmp	w8, #0x2a
   13cc0:	b.ne	13cd8 <__sanitizer_report_error_summary@@Base+0x488>  // b.any
   13cc4:	mov	w25, wzr
   13cc8:	mov	w9, #0x1                   	// #1
   13ccc:	ldrb	w8, [x20, #1]!
   13cd0:	cmp	w8, #0x2a
   13cd4:	b.eq	13cc4 <__sanitizer_report_error_summary@@Base+0x474>  // b.none
   13cd8:	cbz	w8, 13d90 <__sanitizer_report_error_summary@@Base+0x540>
   13cdc:	ldrb	w10, [x19]
   13ce0:	cmp	w8, #0x24
   13ce4:	b.eq	13db0 <__sanitizer_report_error_summary@@Base+0x560>  // b.none
   13ce8:	cbz	w10, 13d88 <__sanitizer_report_error_summary@@Base+0x538>
   13cec:	mov	w1, #0x2a                  	// #42
   13cf0:	mov	x0, x20
   13cf4:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   13cf8:	mov	x22, x0
   13cfc:	mov	w1, #0x24                  	// #36
   13d00:	mov	x0, x20
   13d04:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   13d08:	mov	x21, x0
   13d0c:	cbz	x22, 13d20 <__sanitizer_report_error_summary@@Base+0x4d0>
   13d10:	cmp	x21, x22
   13d14:	ccmp	x21, #0x0, #0x4, cc  // cc = lo, ul, last
   13d18:	csel	x26, x21, x22, ne  // ne = any
   13d1c:	b	13d28 <__sanitizer_report_error_summary@@Base+0x4d8>
   13d20:	mov	x26, x21
   13d24:	cbz	x21, 13d80 <__sanitizer_report_error_summary@@Base+0x530>
   13d28:	strb	wzr, [x26]
   13d2c:	mov	w27, #0x1                   	// #1
   13d30:	mov	x0, x19
   13d34:	mov	x1, x20
   13d38:	bl	19254 <__sanitizer_set_report_fd@@Base+0x2c10>
   13d3c:	mov	x22, x0
   13d40:	mov	x0, x20
   13d44:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13d48:	cbz	w27, 13d58 <__sanitizer_report_error_summary@@Base+0x508>
   13d4c:	cmp	x26, x21
   13d50:	csel	w8, w24, w23, eq  // eq = none
   13d54:	strb	w8, [x26]
   13d58:	mov	w8, wzr
   13d5c:	cbz	x22, 13d94 <__sanitizer_report_error_summary@@Base+0x544>
   13d60:	add	x9, x22, x0
   13d64:	cmp	x22, x19
   13d68:	mov	x19, x9
   13d6c:	b.eq	13ca8 <__sanitizer_report_error_summary@@Base+0x458>  // b.none
   13d70:	eor	w10, w25, #0x1
   13d74:	mov	x19, x9
   13d78:	tbnz	w10, #0, 13ca8 <__sanitizer_report_error_summary@@Base+0x458>
   13d7c:	b	13d94 <__sanitizer_report_error_summary@@Base+0x544>
   13d80:	mov	w27, wzr
   13d84:	b	13d30 <__sanitizer_report_error_summary@@Base+0x4e0>
   13d88:	mov	w8, wzr
   13d8c:	b	13d94 <__sanitizer_report_error_summary@@Base+0x544>
   13d90:	mov	w8, #0x1                   	// #1
   13d94:	ldp	x20, x19, [sp, #64]
   13d98:	ldp	x22, x21, [sp, #48]
   13d9c:	ldp	x24, x23, [sp, #32]
   13da0:	ldp	x26, x25, [sp, #16]
   13da4:	and	w0, w8, #0x1
   13da8:	ldp	x30, x27, [sp], #80
   13dac:	ret
   13db0:	cmp	w10, #0x0
   13db4:	cset	w8, eq  // eq = none
   13db8:	orr	w8, w9, w8
   13dbc:	b	13d94 <__sanitizer_report_error_summary@@Base+0x544>
   13dc0:	adrp	x0, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13dc4:	add	x0, x0, #0x438
   13dc8:	ret
   13dcc:	stp	x30, x21, [sp, #-32]!
   13dd0:	stp	x20, x19, [sp, #16]
   13dd4:	adrp	x19, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13dd8:	add	x19, x19, #0x438
   13ddc:	mov	w1, #0x1000                	// #4096
   13de0:	mov	x0, x19
   13de4:	bl	1a998 <__sanitizer_set_report_fd@@Base+0x4354>
   13de8:	mov	w1, #0x2f                  	// #47
   13dec:	mov	x0, x19
   13df0:	bl	18d80 <__sanitizer_set_report_fd@@Base+0x273c>
   13df4:	cmp	x0, #0x0
   13df8:	csinc	x20, x19, x0, eq  // eq = none
   13dfc:	mov	x0, x20
   13e00:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13e04:	cmp	x20, x19
   13e08:	b.eq	13e24 <__sanitizer_report_error_summary@@Base+0x5d4>  // b.none
   13e0c:	mov	x21, x0
   13e10:	mov	x0, x19
   13e14:	mov	x1, x20
   13e18:	mov	x2, x21
   13e1c:	bl	18a14 <__sanitizer_set_report_fd@@Base+0x23d0>
   13e20:	strb	wzr, [x19, x21]
   13e24:	ldp	x20, x19, [sp, #16]
   13e28:	ldp	x30, x21, [sp], #32
   13e2c:	ret
   13e30:	stp	x30, x21, [sp, #-32]!
   13e34:	stp	x20, x19, [sp, #16]
   13e38:	adrp	x8, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13e3c:	ldrb	w8, [x8, #1080]
   13e40:	cbz	w8, 13e50 <__sanitizer_report_error_summary@@Base+0x600>
   13e44:	ldp	x20, x19, [sp, #16]
   13e48:	ldp	x30, x21, [sp], #32
   13e4c:	ret
   13e50:	adrp	x0, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13e54:	add	x0, x0, #0x438
   13e58:	mov	w1, #0x1000                	// #4096
   13e5c:	bl	1a8fc <__sanitizer_set_report_fd@@Base+0x42b8>
   13e60:	adrp	x19, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13e64:	add	x19, x19, #0x438
   13e68:	mov	w1, #0x1000                	// #4096
   13e6c:	mov	x0, x19
   13e70:	bl	1a998 <__sanitizer_set_report_fd@@Base+0x4354>
   13e74:	mov	w1, #0x2f                  	// #47
   13e78:	mov	x0, x19
   13e7c:	bl	18d80 <__sanitizer_set_report_fd@@Base+0x273c>
   13e80:	cmp	x0, #0x0
   13e84:	csinc	x20, x19, x0, eq  // eq = none
   13e88:	mov	x0, x20
   13e8c:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13e90:	cmp	x20, x19
   13e94:	b.eq	13e44 <__sanitizer_report_error_summary@@Base+0x5f4>  // b.none
   13e98:	mov	x21, x0
   13e9c:	mov	x0, x19
   13ea0:	mov	x1, x20
   13ea4:	mov	x2, x21
   13ea8:	bl	18a14 <__sanitizer_set_report_fd@@Base+0x23d0>
   13eac:	strb	wzr, [x19, x21]
   13eb0:	ldp	x20, x19, [sp, #16]
   13eb4:	ldp	x30, x21, [sp], #32
   13eb8:	ret
   13ebc:	stp	x30, x23, [sp, #-48]!
   13ec0:	stp	x22, x21, [sp, #16]
   13ec4:	stp	x20, x19, [sp, #32]
   13ec8:	adrp	x8, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13ecc:	ldrb	w8, [x8, #1080]
   13ed0:	mov	x20, x1
   13ed4:	mov	x19, x0
   13ed8:	cbnz	w8, 13f3c <__sanitizer_report_error_summary@@Base+0x6ec>
   13edc:	adrp	x0, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13ee0:	add	x0, x0, #0x438
   13ee4:	mov	w1, #0x1000                	// #4096
   13ee8:	bl	1a8fc <__sanitizer_set_report_fd@@Base+0x42b8>
   13eec:	adrp	x21, 126000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e8>
   13ef0:	add	x21, x21, #0x438
   13ef4:	mov	w1, #0x1000                	// #4096
   13ef8:	mov	x0, x21
   13efc:	bl	1a998 <__sanitizer_set_report_fd@@Base+0x4354>
   13f00:	mov	w1, #0x2f                  	// #47
   13f04:	mov	x0, x21
   13f08:	bl	18d80 <__sanitizer_set_report_fd@@Base+0x273c>
   13f0c:	cmp	x0, #0x0
   13f10:	csinc	x22, x21, x0, eq  // eq = none
   13f14:	mov	x0, x22
   13f18:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13f1c:	cmp	x22, x21
   13f20:	b.eq	13f3c <__sanitizer_report_error_summary@@Base+0x6ec>  // b.none
   13f24:	mov	x23, x0
   13f28:	mov	x0, x21
   13f2c:	mov	x1, x22
   13f30:	mov	x2, x23
   13f34:	bl	18a14 <__sanitizer_set_report_fd@@Base+0x23d0>
   13f38:	strb	wzr, [x21, x23]
   13f3c:	adrp	x0, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13f40:	add	x0, x0, #0x438
   13f44:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   13f48:	sub	x8, x20, #0x1
   13f4c:	cmp	x0, x8
   13f50:	csel	x21, x0, x8, cc  // cc = lo, ul, last
   13f54:	cbz	x20, 13f74 <__sanitizer_report_error_summary@@Base+0x724>
   13f58:	adrp	x1, 127000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e8>
   13f5c:	add	x1, x1, #0x438
   13f60:	mov	x0, x19
   13f64:	mov	x2, x21
   13f68:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   13f6c:	strb	wzr, [x19, x21]
   13f70:	b	13f78 <__sanitizer_report_error_summary@@Base+0x728>
   13f74:	mov	x21, xzr
   13f78:	mov	x0, x21
   13f7c:	ldp	x20, x19, [sp, #32]
   13f80:	ldp	x22, x21, [sp, #16]
   13f84:	ldp	x30, x23, [sp], #48
   13f88:	ret
   13f8c:	str	x30, [sp, #-32]!
   13f90:	stp	x20, x19, [sp, #16]
   13f94:	bl	19e64 <__sanitizer_set_report_fd@@Base+0x3820>
   13f98:	cbz	x0, 13fe4 <__sanitizer_report_error_summary@@Base+0x794>
   13f9c:	mov	x19, x0
   13fa0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   13fa4:	add	x0, x0, #0xf6e
   13fa8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   13fac:	ldr	x1, [x19]
   13fb0:	cbz	x1, 13fd0 <__sanitizer_report_error_summary@@Base+0x780>
   13fb4:	add	x20, x19, #0x8
   13fb8:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   13fbc:	add	x19, x19, #0xd32
   13fc0:	mov	x0, x19
   13fc4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   13fc8:	ldr	x1, [x20], #8
   13fcc:	cbnz	x1, 13fc0 <__sanitizer_report_error_summary@@Base+0x770>
   13fd0:	ldp	x20, x19, [sp, #16]
   13fd4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   13fd8:	add	x0, x0, #0xcd
   13fdc:	ldr	x30, [sp], #32
   13fe0:	b	1ca54 <__sanitizer_on_print@@Base+0x4>
   13fe4:	ldp	x20, x19, [sp, #16]
   13fe8:	ldr	x30, [sp], #32
   13fec:	ret
   13ff0:	str	x30, [sp, #-32]!
   13ff4:	stp	x20, x19, [sp, #16]
   13ff8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   13ffc:	ldr	x8, [x8, #1080]
   14000:	cbz	x8, 14078 <__sanitizer_report_error_summary@@Base+0x828>
   14004:	mov	x19, x1
   14008:	mov	x20, x0
   1400c:	blr	x8
   14010:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   14014:	ldr	x8, [x8, #1096]
   14018:	cbz	x8, 14078 <__sanitizer_report_error_summary@@Base+0x828>
   1401c:	mov	x0, x20
   14020:	mov	x1, x19
   14024:	blr	x8
   14028:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1402c:	ldr	x8, [x8, #1112]
   14030:	cbz	x8, 14078 <__sanitizer_report_error_summary@@Base+0x828>
   14034:	mov	x0, x20
   14038:	mov	x1, x19
   1403c:	blr	x8
   14040:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   14044:	ldr	x8, [x8, #1128]
   14048:	cbz	x8, 14078 <__sanitizer_report_error_summary@@Base+0x828>
   1404c:	mov	x0, x20
   14050:	mov	x1, x19
   14054:	blr	x8
   14058:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1405c:	ldr	x2, [x8, #1144]
   14060:	cbz	x2, 14078 <__sanitizer_report_error_summary@@Base+0x828>
   14064:	mov	x0, x20
   14068:	mov	x1, x19
   1406c:	ldp	x20, x19, [sp, #16]
   14070:	ldr	x30, [sp], #32
   14074:	br	x2
   14078:	ldp	x20, x19, [sp, #16]
   1407c:	ldr	x30, [sp], #32
   14080:	ret
   14084:	stp	x30, x19, [sp, #-16]!
   14088:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1408c:	ldr	x8, [x8, #1088]
   14090:	cbz	x8, 140f0 <__sanitizer_report_error_summary@@Base+0x8a0>
   14094:	mov	x19, x0
   14098:	blr	x8
   1409c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   140a0:	ldr	x8, [x8, #1104]
   140a4:	cbz	x8, 140f0 <__sanitizer_report_error_summary@@Base+0x8a0>
   140a8:	mov	x0, x19
   140ac:	blr	x8
   140b0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   140b4:	ldr	x8, [x8, #1120]
   140b8:	cbz	x8, 140f0 <__sanitizer_report_error_summary@@Base+0x8a0>
   140bc:	mov	x0, x19
   140c0:	blr	x8
   140c4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   140c8:	ldr	x8, [x8, #1136]
   140cc:	cbz	x8, 140f0 <__sanitizer_report_error_summary@@Base+0x8a0>
   140d0:	mov	x0, x19
   140d4:	blr	x8
   140d8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   140dc:	ldr	x1, [x8, #1152]
   140e0:	cbz	x1, 140f0 <__sanitizer_report_error_summary@@Base+0x8a0>
   140e4:	mov	x0, x19
   140e8:	ldp	x30, x19, [sp], #16
   140ec:	br	x1
   140f0:	ldp	x30, x19, [sp], #16
   140f4:	ret

00000000000140f8 <__sanitizer_acquire_crash_state@@Base>:
   140f8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   140fc:	add	x8, x8, #0x488
   14100:	mov	w9, #0x1                   	// #1
   14104:	ldaxrb	w10, [x8]
   14108:	stlxrb	w11, w9, [x8]
   1410c:	cbnz	w11, 14104 <__sanitizer_acquire_crash_state@@Base+0xc>
   14110:	cmp	w10, #0x0
   14114:	cset	w0, eq  // eq = none
   14118:	ret

000000000001411c <__sanitizer_install_malloc_and_free_hooks@@Base>:
   1411c:	mov	w8, wzr
   14120:	cbz	x0, 1417c <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   14124:	cbz	x1, 1417c <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   14128:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1412c:	add	x8, x8, #0x438
   14130:	ldr	x9, [x8]
   14134:	cbz	x9, 14184 <__sanitizer_install_malloc_and_free_hooks@@Base+0x68>
   14138:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1413c:	add	x9, x9, #0x448
   14140:	ldr	x10, [x9]
   14144:	cbz	x10, 14190 <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   14148:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1414c:	add	x9, x9, #0x458
   14150:	ldr	x10, [x9]
   14154:	cbz	x10, 14198 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c>
   14158:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1415c:	add	x9, x9, #0x468
   14160:	ldr	x10, [x9]
   14164:	cbz	x10, 141a0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x84>
   14168:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1416c:	add	x9, x9, #0x478
   14170:	ldr	x10, [x9]
   14174:	cbz	x10, 141a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
   14178:	mov	w8, wzr
   1417c:	mov	w0, w8
   14180:	ret
   14184:	mov	w10, wzr
   14188:	mov	x9, x8
   1418c:	b	141ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
   14190:	mov	w10, #0x1                   	// #1
   14194:	b	141ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
   14198:	mov	w10, #0x2                   	// #2
   1419c:	b	141ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
   141a0:	mov	w10, #0x3                   	// #3
   141a4:	b	141ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
   141a8:	mov	w10, #0x4                   	// #4
   141ac:	str	x0, [x9]
   141b0:	add	x8, x8, w10, uxtw #4
   141b4:	add	w0, w10, #0x1
   141b8:	str	x1, [x8, #8]
   141bc:	ret
   141c0:	stp	x30, x19, [sp, #-16]!
   141c4:	mov	x19, x0
   141c8:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   141cc:	mov	w0, #0xa50                 	// #2640
   141d0:	add	x1, x1, #0xf79
   141d4:	movk	w0, #0x41, lsl #16
   141d8:	mov	w2, wzr
   141dc:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   141e0:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   141e4:	add	x9, x9, #0x690
   141e8:	str	x9, [x0]
   141ec:	strb	wzr, [x0, #8]
   141f0:	ldrb	w10, [x19]
   141f4:	mov	w9, #0xa40                 	// #2624
   141f8:	movk	w9, #0x41, lsl #16
   141fc:	mov	w11, #0xa48                 	// #2632
   14200:	mov	x8, xzr
   14204:	movk	w11, #0x41, lsl #16
   14208:	add	x9, x0, x9
   1420c:	strb	w10, [x0, x11]
   14210:	stp	xzr, xzr, [x0, #16]
   14214:	str	xzr, [x0, #544]
   14218:	add	x10, x0, x8
   1421c:	add	x8, x8, #0x410
   14220:	cmp	x8, #0x208, lsl #12
   14224:	str	xzr, [x10, #1584]
   14228:	str	xzr, [x10, #2104]
   1422c:	b.ne	14218 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfc>  // b.any
   14230:	str	xzr, [x9]
   14234:	ldp	x30, x19, [sp], #16
   14238:	ret
   1423c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   14240:	add	x9, x9, #0x690
   14244:	str	x9, [x0]
   14248:	strb	wzr, [x0, #8]
   1424c:	ldrb	w10, [x1]
   14250:	mov	w9, #0xa40                 	// #2624
   14254:	movk	w9, #0x41, lsl #16
   14258:	mov	w11, #0xa48                 	// #2632
   1425c:	mov	x8, xzr
   14260:	movk	w11, #0x41, lsl #16
   14264:	add	x9, x0, x9
   14268:	strb	w10, [x0, x11]
   1426c:	stp	xzr, xzr, [x0, #16]
   14270:	str	xzr, [x0, #544]
   14274:	add	x10, x0, x8
   14278:	add	x8, x8, #0x410
   1427c:	cmp	x8, #0x208, lsl #12
   14280:	str	xzr, [x10, #1584]
   14284:	str	xzr, [x10, #2104]
   14288:	b.ne	14274 <__sanitizer_install_malloc_and_free_hooks@@Base+0x158>  // b.any
   1428c:	str	xzr, [x9]
   14290:	ret
   14294:	mov	x0, xzr
   14298:	ret
   1429c:	ret
   142a0:	stp	x30, x19, [sp, #-16]!
   142a4:	mov	x19, x1
   142a8:	mov	w0, #0x8b8                 	// #2232
   142ac:	mov	x1, xzr
   142b0:	mov	x2, xzr
   142b4:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   142b8:	stp	x19, xzr, [x0]
   142bc:	str	xzr, [x0, #528]
   142c0:	str	xzr, [x0, #1048]
   142c4:	str	xzr, [x0, #1568]
   142c8:	strb	wzr, [x0, #2224]
   142cc:	ldp	x30, x19, [sp], #16
   142d0:	ret
   142d4:	mov	x0, x1
   142d8:	mov	x1, xzr
   142dc:	b	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   142e0:	stp	x30, x19, [sp, #-16]!
   142e4:	str	xzr, [x2]
   142e8:	ldr	x8, [x1]
   142ec:	mov	x0, x1
   142f0:	mov	x19, x2
   142f4:	ldr	x8, [x8]
   142f8:	blr	x8
   142fc:	str	w0, [x19, #8]
   14300:	ldp	x30, x19, [sp], #16
   14304:	ret
   14308:	stp	x30, x21, [sp, #-32]!
   1430c:	stp	x20, x19, [sp, #16]
   14310:	ldr	x8, [x2]
   14314:	mov	x20, x2
   14318:	mov	x19, x1
   1431c:	add	x21, x0, #0x10
   14320:	cbz	x8, 1434c <__sanitizer_install_malloc_and_free_hooks@@Base+0x230>
   14324:	ldr	x9, [x21]
   14328:	and	x8, x8, #0xfffffffffffff000
   1432c:	cmp	x8, x9
   14330:	b.ne	1434c <__sanitizer_install_malloc_and_free_hooks@@Base+0x230>  // b.any
   14334:	ldr	x9, [x19, #528]
   14338:	cmp	x9, x8
   1433c:	b.ne	1436c <__sanitizer_install_malloc_and_free_hooks@@Base+0x250>  // b.any
   14340:	ldp	x20, x19, [sp, #16]
   14344:	ldp	x30, x21, [sp], #32
   14348:	ret
   1434c:	mov	x0, x21
   14350:	mov	x1, x20
   14354:	bl	14b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>
   14358:	str	x0, [x20]
   1435c:	ldr	x8, [x21]
   14360:	ldr	x9, [x19, #528]
   14364:	cmp	x9, x8
   14368:	b.eq	14340 <__sanitizer_install_malloc_and_free_hooks@@Base+0x224>  // b.none
   1436c:	str	xzr, [x19, #8]
   14370:	str	x8, [x19, #528]
   14374:	str	xzr, [x19, #1048]
   14378:	str	xzr, [x19, #1568]
   1437c:	ldp	x20, x19, [sp, #16]
   14380:	ldp	x30, x21, [sp], #32
   14384:	ret
   14388:	str	x30, [sp, #-80]!
   1438c:	stp	x26, x25, [sp, #16]
   14390:	stp	x24, x23, [sp, #32]
   14394:	stp	x22, x21, [sp, #48]
   14398:	stp	x20, x19, [sp, #64]
   1439c:	ldr	x25, [x1, #16]
   143a0:	mov	x22, x25
   143a4:	ldr	x8, [x22, #8]!
   143a8:	cbz	x8, 14524 <__sanitizer_install_malloc_and_free_hooks@@Base+0x408>
   143ac:	ldr	x12, [x2]
   143b0:	mov	x19, x2
   143b4:	mov	x20, x1
   143b8:	mov	x21, x0
   143bc:	add	x23, x0, #0x10
   143c0:	cbz	x12, 1443c <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>
   143c4:	ldr	x8, [x25, #528]
   143c8:	and	x9, x12, #0xfffffffffffff000
   143cc:	cmp	x8, x9
   143d0:	b.ne	1443c <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>  // b.any
   143d4:	ldr	x9, [x23]
   143d8:	cmp	x8, x9
   143dc:	b.ne	1443c <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>  // b.any
   143e0:	ldr	x8, [x25, #1568]
   143e4:	cbz	x8, 14524 <__sanitizer_install_malloc_and_free_hooks@@Base+0x408>
   143e8:	lsr	x11, x12, #6
   143ec:	mov	w13, #0x1                   	// #1
   143f0:	ubfx	x9, x12, #6, #6
   143f4:	add	x10, x25, #0x420
   143f8:	lsl	x11, x13, x11
   143fc:	lsl	x12, x13, x12
   14400:	mov	w13, #0x208                 	// #520
   14404:	ldr	w14, [x10]
   14408:	madd	x15, x14, x13, x21
   1440c:	ldr	x15, [x15, #1584]
   14410:	tst	x15, x11
   14414:	b.eq	1443c <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>  // b.none
   14418:	madd	x14, x14, x13, x21
   1441c:	add	x14, x14, x9, lsl #3
   14420:	ldr	x14, [x14, #1592]
   14424:	tst	x14, x12
   14428:	b.eq	1443c <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>  // b.none
   1442c:	subs	x8, x8, #0x1
   14430:	add	x10, x10, #0x8
   14434:	b.ne	14404 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e8>  // b.any
   14438:	b	14524 <__sanitizer_install_malloc_and_free_hooks@@Base+0x408>
   1443c:	add	x24, x21, #0x8
   14440:	mov	w8, #0x1                   	// #1
   14444:	ldaxrb	w9, [x24]
   14448:	stlxrb	w10, w8, [x24]
   1444c:	cbnz	w10, 14444 <__sanitizer_install_malloc_and_free_hooks@@Base+0x328>
   14450:	cbz	w9, 1445c <__sanitizer_install_malloc_and_free_hooks@@Base+0x340>
   14454:	mov	x0, x24
   14458:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1445c:	ldr	x8, [x19]
   14460:	cbz	x8, 1453c <__sanitizer_install_malloc_and_free_hooks@@Base+0x420>
   14464:	ldr	x9, [x23]
   14468:	and	x3, x8, #0xfffffffffffff000
   1446c:	cmp	x3, x9
   14470:	b.ne	1453c <__sanitizer_install_malloc_and_free_hooks@@Base+0x420>  // b.any
   14474:	ldr	x9, [x25, #528]
   14478:	cmp	x9, x3
   1447c:	b.ne	14560 <__sanitizer_install_malloc_and_free_hooks@@Base+0x444>  // b.any
   14480:	cmp	x8, #0xfff
   14484:	b.ls	14578 <__sanitizer_install_malloc_and_free_hooks@@Base+0x45c>  // b.plast
   14488:	and	x4, x8, #0xfffffffffffff000
   1448c:	cmp	x3, x4
   14490:	b.ne	14598 <__sanitizer_install_malloc_and_free_hooks@@Base+0x47c>  // b.any
   14494:	ldr	x9, [x22]
   14498:	lsr	x10, x8, #6
   1449c:	lsr	x9, x9, x10
   144a0:	tbz	w9, #0, 144b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x39c>
   144a4:	ubfx	x9, x8, #6, #6
   144a8:	add	x9, x25, x9, lsl #3
   144ac:	ldr	x9, [x9, #16]
   144b0:	lsr	x9, x9, x8
   144b4:	tbnz	w9, #0, 1451c <__sanitizer_install_malloc_and_free_hooks@@Base+0x400>
   144b8:	add	x0, x21, #0x630
   144bc:	and	x1, x8, #0xfff
   144c0:	mov	x2, x22
   144c4:	bl	15560 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1444>
   144c8:	tbz	w0, #0, 1451c <__sanitizer_install_malloc_and_free_hooks@@Base+0x400>
   144cc:	ldr	x8, [x20]
   144d0:	ldr	x25, [x19]
   144d4:	mov	x0, x20
   144d8:	ldr	x8, [x8]
   144dc:	blr	x8
   144e0:	ldr	x8, [x20]
   144e4:	mov	w26, w0
   144e8:	mov	x0, x20
   144ec:	ldr	x8, [x8, #8]
   144f0:	blr	x8
   144f4:	mov	w4, w0
   144f8:	mov	x0, x23
   144fc:	mov	x1, x22
   14500:	mov	x2, x25
   14504:	mov	w3, w26
   14508:	bl	14fb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe94>
   1450c:	mov	x0, x21
   14510:	mov	x1, x20
   14514:	mov	x2, x19
   14518:	bl	145b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x494>
   1451c:	dmb	ish
   14520:	strb	wzr, [x24]
   14524:	ldp	x20, x19, [sp, #64]
   14528:	ldp	x22, x21, [sp, #48]
   1452c:	ldp	x24, x23, [sp, #32]
   14530:	ldp	x26, x25, [sp, #16]
   14534:	ldr	x30, [sp], #80
   14538:	ret
   1453c:	mov	x0, x23
   14540:	mov	x1, x19
   14544:	bl	14b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>
   14548:	str	x0, [x19]
   1454c:	ldr	x3, [x23]
   14550:	mov	x8, x0
   14554:	ldr	x9, [x25, #528]
   14558:	cmp	x9, x3
   1455c:	b.eq	14480 <__sanitizer_install_malloc_and_free_hooks@@Base+0x364>  // b.none
   14560:	str	xzr, [x25, #8]
   14564:	str	x3, [x25, #528]
   14568:	str	xzr, [x25, #1048]
   1456c:	str	xzr, [x25, #1568]
   14570:	cmp	x8, #0xfff
   14574:	b.hi	14488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x36c>  // b.pmore
   14578:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1457c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14580:	add	x0, x0, #0x4e
   14584:	add	x2, x2, #0x16d
   14588:	mov	w1, #0x16e                 	// #366
   1458c:	mov	w4, #0x1000                	// #4096
   14590:	mov	x3, x8
   14594:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14598:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1459c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   145a0:	add	x0, x0, #0x4e
   145a4:	add	x2, x2, #0x184
   145a8:	mov	w1, #0x16f                 	// #367
   145ac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   145b0:	sub	sp, sp, #0x110
   145b4:	stp	x29, x30, [sp, #176]
   145b8:	stp	x28, x27, [sp, #192]
   145bc:	stp	x26, x25, [sp, #208]
   145c0:	stp	x24, x23, [sp, #224]
   145c4:	stp	x22, x21, [sp, #240]
   145c8:	stp	x20, x19, [sp, #256]
   145cc:	ldr	x22, [x1, #16]
   145d0:	mov	x21, x2
   145d4:	ldr	x2, [x2]
   145d8:	add	x20, x0, #0x10
   145dc:	mov	x19, x0
   145e0:	add	x1, x22, #0x8
   145e4:	add	x3, sp, #0x10
   145e8:	mov	w4, #0x14                  	// #20
   145ec:	mov	x0, x20
   145f0:	bl	15108 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfec>
   145f4:	cbz	x0, 14718 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5fc>
   145f8:	ldr	x8, [x21]
   145fc:	ldr	x4, [sp, #16]
   14600:	cmp	x8, x4
   14604:	b.ne	1477c <__sanitizer_install_malloc_and_free_hooks@@Base+0x660>  // b.any
   14608:	cmp	x0, #0x14
   1460c:	mov	w10, #0x14                  	// #20
   14610:	mov	w9, #0x1                   	// #1
   14614:	csel	x21, x0, x10, cc  // cc = lo, ul, last
   14618:	cmp	x8, #0x1, lsl #12
   1461c:	strb	w9, [x22, #2224]
   14620:	str	w21, [x22, #1576]
   14624:	b.cc	146f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5dc>  // b.lo, b.ul, b.last
   14628:	cmp	x21, #0x1
   1462c:	mov	w25, #0x8a40                	// #35392
   14630:	add	x22, x22, #0x64c
   14634:	mov	w23, #0x1                   	// #1
   14638:	add	x24, sp, #0x10
   1463c:	movk	w25, #0x20, lsl #16
   14640:	cset	w9, ne  // ne = any
   14644:	mov	w26, #0xffffffff            	// #-1
   14648:	ldr	x3, [x20]
   1464c:	and	x4, x8, #0xfffffffffffff000
   14650:	cmp	x3, x4
   14654:	b.ne	14744 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.any
   14658:	ldr	x9, [x24, x9, lsl #3]
   1465c:	cmp	x9, #0xfff
   14660:	b.ls	1475c <__sanitizer_install_malloc_and_free_hooks@@Base+0x640>  // b.plast
   14664:	and	x4, x9, #0xfffffffffffff000
   14668:	cmp	x3, x4
   1466c:	b.ne	14744 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.any
   14670:	and	x10, x8, #0xfff
   14674:	and	x11, x9, #0xfff
   14678:	add	x10, x19, x10, lsl #3
   1467c:	add	x11, x19, x11, lsl #3
   14680:	ldr	x27, [x10, x25]
   14684:	ldr	x28, [x11, x25]
   14688:	add	x3, sp, #0xc
   1468c:	add	x4, sp, #0x8
   14690:	add	x5, sp, #0x4
   14694:	mov	x0, x20
   14698:	mov	x1, x8
   1469c:	mov	x2, x9
   146a0:	stp	w26, w26, [sp, #8]
   146a4:	str	wzr, [sp, #4]
   146a8:	bl	15328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x120c>
   146ac:	ldrsw	x8, [sp, #4]
   146b0:	cmp	x23, x21
   146b4:	stur	x8, [x22, #-28]
   146b8:	ldr	x8, [x27, #16]
   146bc:	stur	x8, [x22, #-20]
   146c0:	ldr	x8, [x28, #16]
   146c4:	stur	x8, [x22, #-12]
   146c8:	ldr	w8, [sp, #8]
   146cc:	stur	w8, [x22, #-4]
   146d0:	ldr	w8, [sp, #12]
   146d4:	str	w8, [x22]
   146d8:	b.cs	14724 <__sanitizer_install_malloc_and_free_hooks@@Base+0x608>  // b.hs, b.nlast
   146dc:	ldr	x8, [x24, x23, lsl #3]
   146e0:	add	x23, x23, #0x1
   146e4:	udiv	x9, x23, x21
   146e8:	msub	x9, x9, x21, x23
   146ec:	cmp	x8, #0x1, lsl #12
   146f0:	add	x22, x22, #0x20
   146f4:	b.cs	14648 <__sanitizer_install_malloc_and_free_hooks@@Base+0x52c>  // b.hs, b.nlast
   146f8:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   146fc:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14700:	add	x0, x0, #0x4e
   14704:	add	x2, x2, #0x16d
   14708:	mov	w1, #0x16e                 	// #366
   1470c:	mov	w4, #0x1000                	// #4096
   14710:	mov	x3, x8
   14714:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14718:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1471c:	add	x0, x0, #0xf8b
   14720:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   14724:	ldp	x20, x19, [sp, #256]
   14728:	ldp	x22, x21, [sp, #240]
   1472c:	ldp	x24, x23, [sp, #224]
   14730:	ldp	x26, x25, [sp, #208]
   14734:	ldp	x28, x27, [sp, #192]
   14738:	ldp	x29, x30, [sp, #176]
   1473c:	add	sp, sp, #0x110
   14740:	ret
   14744:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14748:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1474c:	add	x0, x0, #0x4e
   14750:	add	x2, x2, #0x184
   14754:	mov	w1, #0x16f                 	// #367
   14758:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1475c:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14760:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14764:	add	x0, x0, #0x4e
   14768:	add	x2, x2, #0x16d
   1476c:	mov	w1, #0x16e                 	// #366
   14770:	mov	w4, #0x1000                	// #4096
   14774:	mov	x3, x9
   14778:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1477c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   14780:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14784:	add	x0, x0, #0xfb0
   14788:	add	x2, x2, #0xf
   1478c:	mov	w1, #0x80                  	// #128
   14790:	mov	x3, x8
   14794:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14798:	str	x30, [sp, #-96]!
   1479c:	stp	x28, x27, [sp, #16]
   147a0:	stp	x26, x25, [sp, #32]
   147a4:	stp	x24, x23, [sp, #48]
   147a8:	stp	x22, x21, [sp, #64]
   147ac:	stp	x20, x19, [sp, #80]
   147b0:	mov	w8, #0xa48                 	// #2632
   147b4:	movk	w8, #0x41, lsl #16
   147b8:	ldrb	w8, [x0, x8]
   147bc:	ldr	x28, [x1, #16]
   147c0:	mov	w23, w4
   147c4:	mov	w25, w3
   147c8:	mov	x22, x1
   147cc:	mov	x26, x0
   147d0:	mov	x21, x2
   147d4:	cbz	w8, 147f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d4>
   147d8:	ldr	x8, [x22]
   147dc:	mov	x0, x22
   147e0:	ldr	x8, [x8]
   147e4:	blr	x8
   147e8:	mov	w19, w0
   147ec:	b	147f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d8>
   147f0:	mov	w19, wzr
   147f4:	mov	x20, x28
   147f8:	ldr	x10, [x20, #8]!
   147fc:	ldr	x9, [x21]
   14800:	ldr	x8, [x20, #520]
   14804:	cbz	x10, 1495c <__sanitizer_install_malloc_and_free_hooks@@Base+0x840>
   14808:	add	x24, x26, #0x10
   1480c:	cbz	x9, 1488c <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>
   14810:	and	x2, x9, #0xfffffffffffff000
   14814:	cmp	x8, x2
   14818:	b.ne	1488c <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.any
   1481c:	ldr	x10, [x24]
   14820:	cmp	x8, x10
   14824:	b.ne	1488c <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.any
   14828:	ldr	x8, [x28, #1568]
   1482c:	cbz	x8, 14880 <__sanitizer_install_malloc_and_free_hooks@@Base+0x764>
   14830:	lsr	x12, x9, #6
   14834:	mov	w13, #0x1                   	// #1
   14838:	ubfx	x10, x9, #6, #6
   1483c:	add	x11, x28, #0x420
   14840:	lsl	x12, x13, x12
   14844:	lsl	x13, x13, x9
   14848:	mov	w14, #0x208                 	// #520
   1484c:	ldr	w15, [x11]
   14850:	madd	x16, x15, x14, x26
   14854:	ldr	x16, [x16, #1584]
   14858:	tst	x16, x12
   1485c:	b.eq	1488c <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.none
   14860:	madd	x15, x15, x14, x26
   14864:	add	x15, x15, x10, lsl #3
   14868:	ldr	x15, [x15, #1592]
   1486c:	tst	x15, x13
   14870:	b.eq	1488c <__sanitizer_install_malloc_and_free_hooks@@Base+0x770>  // b.none
   14874:	subs	x8, x8, #0x1
   14878:	add	x11, x11, #0x8
   1487c:	b.ne	1484c <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>  // b.any
   14880:	and	x1, x9, #0xfff
   14884:	mov	x0, x20
   14888:	b	14978 <__sanitizer_install_malloc_and_free_hooks@@Base+0x85c>
   1488c:	add	x26, x26, #0x8
   14890:	mov	w8, #0x1                   	// #1
   14894:	ldaxrb	w9, [x26]
   14898:	stlxrb	w10, w8, [x26]
   1489c:	cbnz	w10, 14894 <__sanitizer_install_malloc_and_free_hooks@@Base+0x778>
   148a0:	cbz	w9, 148ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x790>
   148a4:	mov	x0, x26
   148a8:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   148ac:	ldr	x27, [x21]
   148b0:	cbz	x27, 148d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7bc>
   148b4:	ldr	x8, [x24]
   148b8:	and	x3, x27, #0xfffffffffffff000
   148bc:	cmp	x3, x8
   148c0:	b.ne	148d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7bc>  // b.any
   148c4:	ldr	x8, [x28, #528]
   148c8:	cmp	x8, x3
   148cc:	b.ne	148fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x7e0>  // b.any
   148d0:	tbnz	w25, #0, 14910 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f4>
   148d4:	b	14948 <__sanitizer_install_malloc_and_free_hooks@@Base+0x82c>
   148d8:	mov	x0, x24
   148dc:	mov	x1, x21
   148e0:	bl	14b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>
   148e4:	str	x0, [x21]
   148e8:	ldr	x3, [x24]
   148ec:	mov	x27, x0
   148f0:	ldr	x8, [x28, #528]
   148f4:	cmp	x8, x3
   148f8:	b.eq	148d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b4>  // b.none
   148fc:	str	xzr, [x28, #8]
   14900:	str	x3, [x28, #528]
   14904:	str	xzr, [x28, #1048]
   14908:	str	xzr, [x28, #1568]
   1490c:	tbz	w25, #0, 14948 <__sanitizer_install_malloc_and_free_hooks@@Base+0x82c>
   14910:	cmp	x27, #0xfff
   14914:	b.ls	14a4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x930>  // b.plast
   14918:	and	x4, x27, #0xfffffffffffff000
   1491c:	cmp	x3, x4
   14920:	b.ne	14a88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x96c>  // b.any
   14924:	ldr	x8, [x20]
   14928:	lsr	x9, x27, #6
   1492c:	lsr	x8, x8, x9
   14930:	tbz	w8, #0, 14948 <__sanitizer_install_malloc_and_free_hooks@@Base+0x82c>
   14934:	ubfx	x8, x27, #6, #6
   14938:	add	x8, x28, x8, lsl #3
   1493c:	ldr	x8, [x8, #16]
   14940:	lsr	x8, x8, x27
   14944:	tbnz	w8, #0, 14aa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x984>
   14948:	tbz	w23, #0, 14998 <__sanitizer_install_malloc_and_free_hooks@@Base+0x87c>
   1494c:	mov	x8, x3
   14950:	cmp	x3, x8
   14954:	b.ne	149f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8d4>  // b.any
   14958:	b	14a00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8e4>
   1495c:	cbz	x8, 14808 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6ec>
   14960:	and	x10, x9, #0xfffffffffffff000
   14964:	cmp	x8, x10
   14968:	b.ne	14808 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6ec>  // b.any
   1496c:	and	x1, x9, #0xfff
   14970:	mov	x0, x20
   14974:	mov	x2, x8
   14978:	mov	w3, w19
   1497c:	ldp	x20, x19, [sp, #80]
   14980:	ldp	x22, x21, [sp, #64]
   14984:	ldp	x24, x23, [sp, #48]
   14988:	ldp	x26, x25, [sp, #32]
   1498c:	ldp	x28, x27, [sp, #16]
   14990:	ldr	x30, [sp], #96
   14994:	b	15bec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ad0>
   14998:	mov	w23, w19
   1499c:	cbnz	w19, 149b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x898>
   149a0:	ldr	x8, [x22]
   149a4:	mov	x0, x22
   149a8:	ldr	x8, [x8]
   149ac:	blr	x8
   149b0:	mov	w23, w0
   149b4:	ldr	x8, [x22]
   149b8:	mov	x0, x22
   149bc:	ldr	x8, [x8, #8]
   149c0:	blr	x8
   149c4:	mov	w4, w0
   149c8:	mov	x0, x24
   149cc:	mov	x1, x20
   149d0:	mov	x2, x27
   149d4:	mov	w3, w23
   149d8:	bl	14fb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe94>
   149dc:	ldr	x27, [x21]
   149e0:	ldr	x8, [x24]
   149e4:	ldr	x3, [x28, #528]
   149e8:	cmp	x3, x8
   149ec:	b.eq	14a00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8e4>  // b.none
   149f0:	str	xzr, [x28, #8]
   149f4:	str	x8, [x28, #528]
   149f8:	str	xzr, [x28, #1048]
   149fc:	str	xzr, [x28, #1568]
   14a00:	cmp	x27, #0xfff
   14a04:	b.ls	14a4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x930>  // b.plast
   14a08:	and	x4, x27, #0xfffffffffffff000
   14a0c:	cmp	x8, x4
   14a10:	b.ne	14a6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x950>  // b.any
   14a14:	and	x1, x27, #0xfff
   14a18:	mov	x0, x20
   14a1c:	mov	x2, x8
   14a20:	mov	w3, w19
   14a24:	bl	15bec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ad0>
   14a28:	dmb	ish
   14a2c:	strb	wzr, [x26]
   14a30:	ldp	x20, x19, [sp, #80]
   14a34:	ldp	x22, x21, [sp, #64]
   14a38:	ldp	x24, x23, [sp, #48]
   14a3c:	ldp	x26, x25, [sp, #32]
   14a40:	ldp	x28, x27, [sp, #16]
   14a44:	ldr	x30, [sp], #96
   14a48:	ret
   14a4c:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a50:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a54:	add	x0, x0, #0x4e
   14a58:	add	x2, x2, #0x16d
   14a5c:	mov	w1, #0x16e                 	// #366
   14a60:	mov	w4, #0x1000                	// #4096
   14a64:	mov	x3, x27
   14a68:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14a6c:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a70:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a74:	add	x0, x0, #0x4e
   14a78:	add	x2, x2, #0x184
   14a7c:	mov	w1, #0x16f                 	// #367
   14a80:	mov	x3, x8
   14a84:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14a88:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a8c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14a90:	add	x0, x0, #0x4e
   14a94:	add	x2, x2, #0x184
   14a98:	mov	w1, #0x16f                 	// #367
   14a9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14aa0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   14aa4:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14aa8:	add	x0, x0, #0xfb0
   14aac:	add	x2, x2, #0x28
   14ab0:	mov	w1, #0xa6                  	// #166
   14ab4:	mov	x3, xzr
   14ab8:	mov	x4, xzr
   14abc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14ac0:	ldr	x8, [x1, #16]
   14ac4:	ldr	x9, [x2]
   14ac8:	ldr	x10, [x8, #528]
   14acc:	and	x11, x9, #0xfffffffffffff000
   14ad0:	cmp	x10, x11
   14ad4:	b.ne	14ae4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c8>  // b.any
   14ad8:	add	x0, x8, #0x8
   14adc:	and	x1, x9, #0xfff
   14ae0:	b	15d44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c28>
   14ae4:	ret
   14ae8:	stp	x30, x21, [sp, #-32]!
   14aec:	stp	x20, x19, [sp, #16]
   14af0:	ldr	x8, [x2]
   14af4:	cbz	x8, 14b4c <__sanitizer_install_malloc_and_free_hooks@@Base+0xa30>
   14af8:	mov	x19, x2
   14afc:	mov	x21, x0
   14b00:	add	x20, x0, #0x8
   14b04:	mov	w8, #0x1                   	// #1
   14b08:	ldaxrb	w9, [x20]
   14b0c:	stlxrb	w10, w8, [x20]
   14b10:	cbnz	w10, 14b08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9ec>
   14b14:	cbz	w9, 14b20 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa04>
   14b18:	mov	x0, x20
   14b1c:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   14b20:	ldr	x1, [x19]
   14b24:	cbz	x1, 14b40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa24>
   14b28:	add	x0, x21, #0x10
   14b2c:	ldr	x8, [x0]
   14b30:	and	x9, x1, #0xfffffffffffff000
   14b34:	cmp	x9, x8
   14b38:	b.ne	14b40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa24>  // b.any
   14b3c:	bl	15444 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1328>
   14b40:	str	xzr, [x19]
   14b44:	dmb	ish
   14b48:	strb	wzr, [x20]
   14b4c:	ldp	x20, x19, [sp, #16]
   14b50:	ldp	x30, x21, [sp], #32
   14b54:	ret
   14b58:	ldr	x8, [x1, #16]
   14b5c:	ldrb	w9, [x8, #2224]
   14b60:	cbz	w9, 14b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa54>
   14b64:	add	x0, x8, #0x628
   14b68:	strb	wzr, [x8, #2224]
   14b6c:	ret
   14b70:	mov	x0, xzr
   14b74:	ret
   14b78:	sub	sp, sp, #0x20
   14b7c:	str	x30, [sp, #16]
   14b80:	ldr	x8, [x0, #8]
   14b84:	cbz	x8, 14bdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xac0>
   14b88:	rbit	x9, x8
   14b8c:	clz	x9, x9
   14b90:	mov	w10, #0x1                   	// #1
   14b94:	lsl	x10, x10, x9
   14b98:	bic	x11, x8, x10
   14b9c:	mov	x12, x0
   14ba0:	str	x11, [x12, #8]!
   14ba4:	add	x11, x12, x9, lsl #3
   14ba8:	ldr	x13, [x11, #8]!
   14bac:	cbz	x13, 14f5c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe40>
   14bb0:	rbit	x12, x13
   14bb4:	clz	x12, x12
   14bb8:	mov	w14, #0x1                   	// #1
   14bbc:	lsl	x14, x14, x12
   14bc0:	bics	x13, x13, x14
   14bc4:	str	x13, [x11]
   14bc8:	b.eq	14bd4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xab8>  // b.none
   14bcc:	orr	x8, x10, x8
   14bd0:	str	x8, [x0, #8]
   14bd4:	orr	x8, x12, x9, lsl #6
   14bd8:	b	14e00 <__sanitizer_install_malloc_and_free_hooks@@Base+0xce4>
   14bdc:	ldr	x9, [x0, #528]
   14be0:	mov	w8, #0xa30                 	// #2608
   14be4:	movk	w8, #0x41, lsl #16
   14be8:	add	x8, x0, x8
   14bec:	cbz	x9, 14e24 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd08>
   14bf0:	ldr	x10, [x8]
   14bf4:	subs	x9, x10, #0x1
   14bf8:	b.mi	14cc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbac>  // b.first
   14bfc:	mov	w11, #0xa20                 	// #2592
   14c00:	add	x12, x0, x10, lsl #4
   14c04:	movk	w11, #0x21, lsl #16
   14c08:	add	x12, x12, x11
   14c0c:	b	14c44 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb28>
   14c10:	ldr	q0, [x12]
   14c14:	add	x10, x0, x10, lsl #4
   14c18:	str	q0, [sp]
   14c1c:	ldr	q0, [x10, x11]
   14c20:	str	q0, [x12]
   14c24:	ldr	q0, [sp]
   14c28:	str	q0, [x10, x11]
   14c2c:	ldr	x10, [x8]
   14c30:	sub	x10, x10, #0x1
   14c34:	str	x10, [x8]
   14c38:	sub	x9, x9, #0x1
   14c3c:	sub	x12, x12, #0x10
   14c40:	tbnz	x9, #63, 14cc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xba4>
   14c44:	ldrh	w3, [x12]
   14c48:	cmp	x3, #0x1, lsl #12
   14c4c:	b.hi	14f40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe24>  // b.pmore
   14c50:	lsr	x13, x3, #12
   14c54:	add	x14, x0, x13, lsl #3
   14c58:	ldr	x14, [x14, #528]
   14c5c:	lsr	x15, x3, #6
   14c60:	lsr	x14, x14, x15
   14c64:	tbz	w14, #0, 14c80 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb64>
   14c68:	ubfx	x14, x3, #6, #6
   14c6c:	add	x13, x0, x13, lsl #9
   14c70:	add	x13, x13, x14, lsl #3
   14c74:	ldr	x13, [x13, #536]
   14c78:	lsr	x13, x13, x3
   14c7c:	tbnz	w13, #0, 14c10 <__sanitizer_install_malloc_and_free_hooks@@Base+0xaf4>
   14c80:	ldrh	w3, [x12, #2]
   14c84:	cmp	x3, #0x1, lsl #12
   14c88:	b.hi	14f40 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe24>  // b.pmore
   14c8c:	lsr	x13, x3, #12
   14c90:	add	x14, x0, x13, lsl #3
   14c94:	ldr	x14, [x14, #528]
   14c98:	lsr	x15, x3, #6
   14c9c:	lsr	x14, x14, x15
   14ca0:	tbz	w14, #0, 14c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb1c>
   14ca4:	ubfx	x14, x3, #6, #6
   14ca8:	add	x13, x0, x13, lsl #9
   14cac:	add	x13, x13, x14, lsl #3
   14cb0:	ldr	x13, [x13, #536]
   14cb4:	lsr	x13, x13, x3
   14cb8:	tbnz	w13, #0, 14c10 <__sanitizer_install_malloc_and_free_hooks@@Base+0xaf4>
   14cbc:	b	14c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb1c>
   14cc0:	ldr	x8, [x0, #8]
   14cc4:	cbnz	x8, 14f90 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe74>
   14cc8:	ldr	x8, [x0, #528]
   14ccc:	mov	x9, xzr
   14cd0:	mov	w10, #0x208                 	// #520
   14cd4:	mov	w11, #0x1                   	// #1
   14cd8:	b	14ce8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbcc>
   14cdc:	add	x9, x9, #0x1
   14ce0:	cmp	x9, #0x1, lsl #12
   14ce4:	b.eq	14d48 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc2c>  // b.none
   14ce8:	madd	x14, x9, x10, x0
   14cec:	ldr	x12, [x14, #1568]
   14cf0:	ands	x13, x8, x12
   14cf4:	b.eq	14cdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xbc0>  // b.none
   14cf8:	add	x14, x14, #0x620
   14cfc:	b	14d04 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbe8>
   14d00:	cbz	x13, 14cdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xbc0>
   14d04:	rbit	x15, x13
   14d08:	clz	x15, x15
   14d0c:	madd	x16, x9, x10, x0
   14d10:	lsl	x17, x15, #3
   14d14:	add	x16, x16, x17
   14d18:	add	x17, x0, x17
   14d1c:	ldr	x18, [x16, #1576]
   14d20:	ldr	x17, [x17, #536]
   14d24:	lsl	x15, x11, x15
   14d28:	bic	x13, x13, x15
   14d2c:	bics	x17, x18, x17
   14d30:	str	x17, [x16, #1576]
   14d34:	b.ne	14d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbe4>  // b.any
   14d38:	mvn	x15, x15
   14d3c:	and	x12, x12, x15
   14d40:	str	x12, [x14]
   14d44:	b	14d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbe4>
   14d48:	cbz	x8, 14f74 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe58>
   14d4c:	mov	x11, xzr
   14d50:	mov	w10, #0x1                   	// #1
   14d54:	b	14d78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc5c>
   14d58:	mov	x13, xzr
   14d5c:	str	xzr, [x11]
   14d60:	add	x12, x0, x12, lsl #3
   14d64:	ldr	x12, [x12, #536]
   14d68:	orr	x12, x12, x13
   14d6c:	str	x12, [x11]
   14d70:	mov	x11, x9
   14d74:	cbz	x8, 14dac <__sanitizer_install_malloc_and_free_hooks@@Base+0xc90>
   14d78:	rbit	x9, x8
   14d7c:	clz	x12, x9
   14d80:	lsl	x9, x10, x12
   14d84:	mov	x13, x0
   14d88:	bic	x8, x8, x9
   14d8c:	orr	x9, x9, x11
   14d90:	str	x9, [x13, #8]!
   14d94:	add	x13, x13, x12, lsl #3
   14d98:	cmp	x9, x11
   14d9c:	add	x11, x13, #0x8
   14da0:	b.ne	14d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc3c>  // b.any
   14da4:	ldr	x13, [x11]
   14da8:	b	14d60 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc44>
   14dac:	rbit	x8, x9
   14db0:	mov	w10, #0x1                   	// #1
   14db4:	clz	x8, x8
   14db8:	lsl	x10, x10, x8
   14dbc:	mov	x11, x0
   14dc0:	bic	x12, x9, x10
   14dc4:	str	x12, [x11, #8]!
   14dc8:	str	xzr, [x11, #520]
   14dcc:	add	x12, x11, x8, lsl #3
   14dd0:	ldr	x13, [x12, #8]!
   14dd4:	cbz	x13, 14f5c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe40>
   14dd8:	rbit	x11, x13
   14ddc:	clz	x11, x11
   14de0:	mov	w14, #0x1                   	// #1
   14de4:	lsl	x14, x14, x11
   14de8:	bics	x13, x13, x14
   14dec:	str	x13, [x12]
   14df0:	b.eq	14dfc <__sanitizer_install_malloc_and_free_hooks@@Base+0xce0>  // b.none
   14df4:	orr	x9, x10, x9
   14df8:	str	x9, [x0, #8]
   14dfc:	orr	x8, x11, x8, lsl #6
   14e00:	mov	w10, #0x8a30                	// #35376
   14e04:	add	x9, x0, x8, lsl #3
   14e08:	movk	w10, #0x20, lsl #16
   14e0c:	str	x1, [x9, x10]
   14e10:	ldr	x9, [x0]
   14e14:	add	x0, x9, x8
   14e18:	ldr	x30, [sp, #16]
   14e1c:	add	sp, sp, #0x20
   14e20:	ret
   14e24:	ldr	x9, [x0]
   14e28:	add	x11, x0, #0x108
   14e2c:	movi	v0.2d, #0xffffffffffffffff
   14e30:	mov	x12, x0
   14e34:	add	x9, x9, #0x1, lsl #12
   14e38:	mov	x10, xzr
   14e3c:	str	xzr, [x0, #528]
   14e40:	str	x9, [x0]
   14e44:	str	q0, [x12, #8]!
   14e48:	stur	q0, [x0, #24]
   14e4c:	stur	q0, [x0, #40]
   14e50:	stur	q0, [x0, #56]
   14e54:	stur	q0, [x0, #72]
   14e58:	stur	q0, [x0, #88]
   14e5c:	stur	q0, [x0, #104]
   14e60:	stur	q0, [x0, #120]
   14e64:	stur	q0, [x0, #136]
   14e68:	stur	q0, [x0, #152]
   14e6c:	stur	q0, [x0, #168]
   14e70:	stur	q0, [x0, #184]
   14e74:	stur	q0, [x0, #200]
   14e78:	stur	q0, [x0, #216]
   14e7c:	stur	q0, [x0, #232]
   14e80:	stur	q0, [x0, #248]
   14e84:	stp	q0, q0, [x11]
   14e88:	stp	q0, q0, [x11, #32]
   14e8c:	stp	q0, q0, [x11, #64]
   14e90:	stp	q0, q0, [x11, #96]
   14e94:	stp	q0, q0, [x11, #128]
   14e98:	stp	q0, q0, [x11, #160]
   14e9c:	stp	q0, q0, [x11, #192]
   14ea0:	stp	q0, q0, [x11, #224]
   14ea4:	mov	x11, #0xffffffffffffffff    	// #-1
   14ea8:	str	x11, [x12, #512]
   14eac:	add	x11, x0, x10
   14eb0:	add	x10, x10, #0x410
   14eb4:	cmp	x10, #0x208, lsl #12
   14eb8:	str	xzr, [x11, #1568]
   14ebc:	str	xzr, [x11, #2088]
   14ec0:	b.ne	14eac <__sanitizer_install_malloc_and_free_hooks@@Base+0xd90>  // b.any
   14ec4:	str	xzr, [x8]
   14ec8:	ldr	x8, [x0, #8]
   14ecc:	cbz	x8, 14f78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe5c>
   14ed0:	rbit	x10, x8
   14ed4:	clz	x10, x10
   14ed8:	mov	w11, #0x1                   	// #1
   14edc:	lsl	x11, x11, x10
   14ee0:	bic	x12, x8, x11
   14ee4:	mov	x13, x0
   14ee8:	str	x12, [x13, #8]!
   14eec:	add	x13, x13, x10, lsl #3
   14ef0:	ldr	x14, [x13, #8]!
   14ef4:	cbz	x14, 14f5c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe40>
   14ef8:	rbit	x12, x14
   14efc:	clz	x12, x12
   14f00:	mov	w15, #0x1                   	// #1
   14f04:	lsl	x15, x15, x12
   14f08:	bics	x14, x14, x15
   14f0c:	str	x14, [x13]
   14f10:	b.eq	14f1c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe00>  // b.none
   14f14:	orr	x8, x11, x8
   14f18:	str	x8, [x0, #8]
   14f1c:	orr	x8, x12, x10, lsl #6
   14f20:	mov	w10, #0x8a30                	// #35376
   14f24:	movk	w10, #0x20, lsl #16
   14f28:	add	x11, x0, x8, lsl #3
   14f2c:	add	x0, x8, x9
   14f30:	str	x1, [x11, x10]
   14f34:	ldr	x30, [sp, #16]
   14f38:	add	sp, sp, #0x20
   14f3c:	ret
   14f40:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f44:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f48:	add	x0, x0, #0xce
   14f4c:	add	x2, x2, #0x137
   14f50:	mov	w1, #0x144                 	// #324
   14f54:	mov	w4, #0x1000                	// #4096
   14f58:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14f5c:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f60:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   14f64:	add	x0, x0, #0xce
   14f68:	add	x2, x2, #0xd03
   14f6c:	mov	w1, #0x31                  	// #49
   14f70:	b	14fa4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe88>
   14f74:	str	xzr, [x0, #528]
   14f78:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f7c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   14f80:	add	x0, x0, #0xce
   14f84:	add	x2, x2, #0x83f
   14f88:	mov	w1, #0xc0                  	// #192
   14f8c:	b	14fa4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe88>
   14f90:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f94:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   14f98:	add	x0, x0, #0x4e
   14f9c:	add	x2, x2, #0xaa
   14fa0:	mov	w1, #0xa5                  	// #165
   14fa4:	mov	x3, xzr
   14fa8:	mov	x4, xzr
   14fac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   14fb0:	sub	sp, sp, #0x180
   14fb4:	stp	x29, x30, [sp, #320]
   14fb8:	stp	x24, x23, [sp, #336]
   14fbc:	stp	x22, x21, [sp, #352]
   14fc0:	stp	x20, x19, [sp, #368]
   14fc4:	mov	w20, w3
   14fc8:	ldr	x3, [x0]
   14fcc:	ldr	x8, [x1, #520]
   14fd0:	mov	w19, w4
   14fd4:	mov	x21, x1
   14fd8:	mov	x22, x0
   14fdc:	cmp	x8, x3
   14fe0:	mov	x8, x2
   14fe4:	b.eq	14ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xedc>  // b.none
   14fe8:	str	xzr, [x21]
   14fec:	str	x3, [x21, #520]
   14ff0:	str	xzr, [x21, #1040]
   14ff4:	str	xzr, [x21, #1560]
   14ff8:	cmp	x8, #0xfff
   14ffc:	b.ls	150d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfb4>  // b.plast
   15000:	and	x4, x8, #0xfffffffffffff000
   15004:	cmp	x3, x4
   15008:	b.ne	150f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfd4>  // b.any
   1500c:	and	x23, x8, #0xfff
   15010:	add	x0, x22, #0x620
   15014:	mov	x3, sp
   15018:	mov	w4, #0x28                  	// #40
   1501c:	mov	x1, x21
   15020:	mov	x2, x23
   15024:	mov	x24, sp
   15028:	bl	1584c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
   1502c:	cbz	x0, 150b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf9c>
   15030:	mov	w10, #0xa30                 	// #2608
   15034:	movk	w10, #0x41, lsl #16
   15038:	mov	w11, #0xa30                 	// #2608
   1503c:	mov	x8, xzr
   15040:	add	x9, x21, #0x41c
   15044:	add	x10, x22, x10
   15048:	movk	w11, #0x21, lsl #16
   1504c:	b	15080 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf64>
   15050:	ldr	w14, [x15]
   15054:	add	x15, x12, #0x1
   15058:	add	x12, x22, x12, lsl #4
   1505c:	add	x12, x12, x11
   15060:	str	x15, [x10]
   15064:	strh	w13, [x12]
   15068:	strh	w23, [x12, #2]
   1506c:	stp	w14, w20, [x12, #4]
   15070:	str	w19, [x12, #12]
   15074:	add	x8, x8, #0x1
   15078:	cmp	x8, x0
   1507c:	b.eq	150b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf9c>  // b.none
   15080:	ldr	x12, [x10]
   15084:	lsr	x13, x12, #17
   15088:	cbnz	x13, 15074 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf58>
   1508c:	ldr	x14, [x21, #1560]
   15090:	ldr	x13, [x24, x8, lsl #3]
   15094:	cbz	x14, 15054 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf38>
   15098:	mov	x15, x9
   1509c:	ldur	w16, [x15, #-4]
   150a0:	cmp	w16, w13
   150a4:	b.eq	15050 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf34>  // b.none
   150a8:	subs	x14, x14, #0x1
   150ac:	add	x15, x15, #0x8
   150b0:	b.ne	1509c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf80>  // b.any
   150b4:	b	15054 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf38>
   150b8:	ldp	x20, x19, [sp, #368]
   150bc:	ldp	x22, x21, [sp, #352]
   150c0:	ldp	x24, x23, [sp, #336]
   150c4:	ldp	x29, x30, [sp, #320]
   150c8:	add	sp, sp, #0x180
   150cc:	ret
   150d0:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   150d4:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   150d8:	add	x0, x0, #0x4e
   150dc:	add	x2, x2, #0x16d
   150e0:	mov	w1, #0x16e                 	// #366
   150e4:	mov	w4, #0x1000                	// #4096
   150e8:	mov	x3, x8
   150ec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   150f0:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   150f4:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   150f8:	add	x0, x0, #0x4e
   150fc:	add	x2, x2, #0x184
   15100:	mov	w1, #0x16f                 	// #367
   15104:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15108:	str	x30, [sp, #-80]!
   1510c:	stp	x26, x25, [sp, #16]
   15110:	stp	x24, x23, [sp, #32]
   15114:	stp	x22, x21, [sp, #48]
   15118:	stp	x20, x19, [sp, #64]
   1511c:	mov	x20, x3
   15120:	ldr	x8, [x0]
   15124:	ldr	x3, [x1, #520]
   15128:	cmp	x3, x8
   1512c:	b.ne	152b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1194>  // b.any
   15130:	add	x23, x0, #0x418
   15134:	str	xzr, [x23]
   15138:	ldr	x9, [x1]
   1513c:	mov	x22, x4
   15140:	mov	x21, x0
   15144:	mov	x19, x2
   15148:	cbz	x9, 151ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1090>
   1514c:	mov	x12, xzr
   15150:	mov	w10, #0x1                   	// #1
   15154:	b	15178 <__sanitizer_install_malloc_and_free_hooks@@Base+0x105c>
   15158:	mov	x14, xzr
   1515c:	str	xzr, [x12]
   15160:	add	x13, x1, x13, lsl #3
   15164:	ldr	x13, [x13, #8]
   15168:	orr	x13, x13, x14
   1516c:	str	x13, [x12]
   15170:	mov	x12, x11
   15174:	cbz	x9, 151b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1094>
   15178:	rbit	x11, x9
   1517c:	clz	x13, x11
   15180:	add	x14, x21, #0x418
   15184:	lsl	x11, x10, x13
   15188:	add	x14, x14, x13, lsl #3
   1518c:	bic	x9, x9, x11
   15190:	orr	x11, x11, x12
   15194:	cmp	x11, x12
   15198:	add	x12, x14, #0x8
   1519c:	str	x11, [x21, #1048]
   151a0:	b.ne	15158 <__sanitizer_install_malloc_and_free_hooks@@Base+0x103c>  // b.any
   151a4:	ldr	x14, [x12]
   151a8:	b	15160 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1044>
   151ac:	mov	x11, xzr
   151b0:	cmp	x19, #0xfff
   151b4:	b.ls	152cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x11b0>  // b.plast
   151b8:	and	x4, x19, #0xfffffffffffff000
   151bc:	cmp	x8, x4
   151c0:	b.ne	152ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d0>  // b.any
   151c4:	ubfx	x8, x19, #6, #6
   151c8:	lsr	x9, x11, x8
   151cc:	tbz	w9, #0, 151e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10c4>
   151d0:	add	x8, x21, x8, lsl #3
   151d4:	ldr	x8, [x8, #1056]
   151d8:	lsr	x8, x8, x19
   151dc:	tbnz	w8, #0, 15308 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11ec>
   151e0:	cbz	x22, 1521c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1100>
   151e4:	and	x25, x19, #0xfff
   151e8:	add	x26, x21, #0x620
   151ec:	mov	w24, #0x1                   	// #1
   151f0:	mov	x0, x26
   151f4:	mov	x1, x25
   151f8:	mov	x2, x23
   151fc:	mov	x3, x20
   15200:	mov	x4, x24
   15204:	bl	15a68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x194c>
   15208:	cmp	x24, x0
   1520c:	b.eq	1523c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1120>  // b.none
   15210:	add	x24, x24, #0x1
   15214:	cmp	x24, x22
   15218:	b.ls	151f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10d4>  // b.plast
   1521c:	mov	x24, xzr
   15220:	mov	x0, x24
   15224:	ldp	x20, x19, [sp, #64]
   15228:	ldp	x22, x21, [sp, #48]
   1522c:	ldp	x24, x23, [sp, #32]
   15230:	ldp	x26, x25, [sp, #16]
   15234:	ldr	x30, [sp], #80
   15238:	ret
   1523c:	cbz	x24, 15220 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1104>
   15240:	mov	x8, xzr
   15244:	ldr	x3, [x20, x8, lsl #3]
   15248:	cmp	x3, #0x1, lsl #12
   1524c:	b.cs	15294 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1178>  // b.hs, b.nlast
   15250:	ldr	x9, [x21]
   15254:	add	x9, x9, x3
   15258:	str	x9, [x20, x8, lsl #3]
   1525c:	add	x8, x8, #0x1
   15260:	cmp	x24, x8
   15264:	b.ne	15244 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1128>  // b.any
   15268:	cbz	x24, 15220 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1104>
   1526c:	ldr	x3, [x20]
   15270:	cmp	x3, x19
   15274:	b.eq	15220 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1104>  // b.none
   15278:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1527c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15280:	add	x0, x0, #0x4e
   15284:	add	x2, x2, #0x1d0
   15288:	mov	w1, #0x13f                 	// #319
   1528c:	mov	x4, x19
   15290:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15294:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15298:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1529c:	add	x0, x0, #0x4e
   152a0:	add	x2, x2, #0x122
   152a4:	mov	w1, #0x16b                 	// #363
   152a8:	mov	w4, #0x1000                	// #4096
   152ac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   152b0:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152b4:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152b8:	add	x0, x0, #0x4e
   152bc:	add	x2, x2, #0x14d
   152c0:	mov	w1, #0x6b                  	// #107
   152c4:	mov	x4, x8
   152c8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   152cc:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152d0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152d4:	add	x0, x0, #0x4e
   152d8:	add	x2, x2, #0x16d
   152dc:	mov	w1, #0x16e                 	// #366
   152e0:	mov	w4, #0x1000                	// #4096
   152e4:	mov	x3, x19
   152e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   152ec:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152f0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   152f4:	add	x0, x0, #0x4e
   152f8:	add	x2, x2, #0x184
   152fc:	mov	w1, #0x16f                 	// #367
   15300:	mov	x3, x8
   15304:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15308:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1530c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15310:	add	x0, x0, #0x4e
   15314:	add	x2, x2, #0x1b0
   15318:	mov	w1, #0x13a                 	// #314
   1531c:	mov	x3, xzr
   15320:	mov	x4, xzr
   15324:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15328:	str	x30, [sp, #-16]!
   1532c:	mov	x9, x1
   15330:	cmp	x1, #0xfff
   15334:	b.ls	15404 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12e8>  // b.plast
   15338:	ldr	x10, [x0]
   1533c:	and	x11, x9, #0xfffffffffffff000
   15340:	cmp	x10, x11
   15344:	b.ne	153e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12c8>  // b.any
   15348:	mov	x8, x2
   1534c:	cmp	x2, #0xfff
   15350:	b.ls	15424 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1308>  // b.plast
   15354:	and	x11, x8, #0xfffffffffffff000
   15358:	cmp	x10, x11
   1535c:	b.ne	153e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12c8>  // b.any
   15360:	mov	w10, #0xa30                 	// #2608
   15364:	movk	w10, #0x41, lsl #16
   15368:	ldr	x10, [x0, x10]
   1536c:	cbz	x10, 153d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12bc>
   15370:	and	x12, x8, #0xfff
   15374:	mov	w8, #0xa38                 	// #2616
   15378:	movk	w8, #0x21, lsl #16
   1537c:	mov	x11, xzr
   15380:	and	x9, x9, #0xfff
   15384:	add	x8, x0, x8
   15388:	b	1539c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1280>
   1538c:	add	x11, x11, #0x1
   15390:	cmp	x11, x10
   15394:	add	x8, x8, #0x10
   15398:	b.cs	153d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12bc>  // b.hs, b.nlast
   1539c:	ldurh	w13, [x8, #-8]
   153a0:	cmp	x9, x13
   153a4:	b.ne	1538c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1270>  // b.any
   153a8:	ldurh	w13, [x8, #-6]
   153ac:	cmp	x12, x13
   153b0:	b.ne	1538c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1270>  // b.any
   153b4:	ldur	w9, [x8, #-4]
   153b8:	mov	w0, #0x1                   	// #1
   153bc:	str	w9, [x3]
   153c0:	ldr	w9, [x8]
   153c4:	str	w9, [x4]
   153c8:	ldr	w8, [x8, #4]
   153cc:	str	w8, [x5]
   153d0:	ldr	x30, [sp], #16
   153d4:	ret
   153d8:	mov	w0, wzr
   153dc:	ldr	x30, [sp], #16
   153e0:	ret
   153e4:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   153e8:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   153ec:	add	x0, x0, #0x4e
   153f0:	add	x2, x2, #0x184
   153f4:	mov	w1, #0x16f                 	// #367
   153f8:	mov	x3, x10
   153fc:	mov	x4, x11
   15400:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15404:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15408:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1540c:	add	x0, x0, #0x4e
   15410:	add	x2, x2, #0x16d
   15414:	mov	w1, #0x16e                 	// #366
   15418:	mov	w4, #0x1000                	// #4096
   1541c:	mov	x3, x9
   15420:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15424:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15428:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1542c:	add	x0, x0, #0x4e
   15430:	add	x2, x2, #0x16d
   15434:	mov	w1, #0x16e                 	// #366
   15438:	mov	w4, #0x1000                	// #4096
   1543c:	mov	x3, x8
   15440:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15444:	str	x30, [sp, #-16]!
   15448:	mov	x8, x1
   1544c:	cmp	x1, #0xfff
   15450:	b.ls	15508 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13ec>  // b.plast
   15454:	ldr	x3, [x0]
   15458:	and	x4, x8, #0xfffffffffffff000
   1545c:	cmp	x3, x4
   15460:	b.ne	15528 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140c>  // b.any
   15464:	ldr	x9, [x0, #8]
   15468:	ubfx	x10, x8, #6, #6
   1546c:	mov	w11, #0x1                   	// #1
   15470:	lsl	x11, x11, x10
   15474:	tst	x9, x11
   15478:	and	x9, x8, #0x3f
   1547c:	b.eq	15490 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1374>  // b.none
   15480:	add	x12, x0, x10, lsl #3
   15484:	ldr	x12, [x12, #16]
   15488:	lsr	x12, x12, x9
   1548c:	tbnz	w12, #0, 15540 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1424>
   15490:	ldr	x12, [x0, #528]
   15494:	tst	x12, x11
   15498:	b.eq	154d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13b8>  // b.none
   1549c:	add	x10, x0, x10, lsl #3
   154a0:	ldr	x11, [x10, #536]
   154a4:	mov	w12, #0x1                   	// #1
   154a8:	lsl	x9, x12, x9
   154ac:	orr	x9, x11, x9
   154b0:	cmp	x9, x11
   154b4:	str	x9, [x10, #536]
   154b8:	b.ne	154f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13d4>  // b.any
   154bc:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   154c0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   154c4:	add	x0, x0, #0x4e
   154c8:	add	x2, x2, #0x2e2
   154cc:	mov	w1, #0xbf                  	// #191
   154d0:	b	15554 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1438>
   154d4:	orr	x11, x12, x11
   154d8:	add	x12, x0, #0x210
   154dc:	mov	w13, #0x1                   	// #1
   154e0:	add	x10, x12, x10, lsl #3
   154e4:	lsl	x9, x13, x9
   154e8:	str	x11, [x0, #528]
   154ec:	str	x9, [x10, #8]
   154f0:	and	x8, x8, #0xfff
   154f4:	mov	w9, #0x208                 	// #520
   154f8:	madd	x8, x8, x9, x0
   154fc:	str	xzr, [x8, #1568]
   15500:	ldr	x30, [sp], #16
   15504:	ret
   15508:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1550c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15510:	add	x0, x0, #0x4e
   15514:	add	x2, x2, #0x16d
   15518:	mov	w1, #0x16e                 	// #366
   1551c:	mov	w4, #0x1000                	// #4096
   15520:	mov	x3, x8
   15524:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15528:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1552c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15530:	add	x0, x0, #0x4e
   15534:	add	x2, x2, #0x184
   15538:	mov	w1, #0x16f                 	// #367
   1553c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15540:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15544:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15548:	add	x0, x0, #0x4e
   1554c:	add	x2, x2, #0x2b9
   15550:	mov	w1, #0xbe                  	// #190
   15554:	mov	x3, xzr
   15558:	mov	x4, xzr
   1555c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15560:	str	x30, [sp, #-16]!
   15564:	add	x8, x0, #0x208, lsl #12
   15568:	mov	w9, #0x208                 	// #520
   1556c:	str	xzr, [x8]
   15570:	mul	x9, x1, x9
   15574:	ldr	x10, [x0, x9]
   15578:	mov	x3, x1
   1557c:	cbz	x10, 155ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x14d0>
   15580:	mov	w12, #0x8008                	// #32776
   15584:	mov	w9, #0x208                 	// #520
   15588:	mov	x14, xzr
   1558c:	mov	w11, #0x1                   	// #1
   15590:	movk	w12, #0x20, lsl #16
   15594:	madd	x13, x3, x9, x0
   15598:	b	155bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a0>
   1559c:	mov	x16, xzr
   155a0:	str	xzr, [x14]
   155a4:	add	x15, x13, x15, lsl #3
   155a8:	ldr	x15, [x15, #8]
   155ac:	orr	x15, x15, x16
   155b0:	str	x15, [x14]
   155b4:	mov	x14, x9
   155b8:	cbz	x10, 155f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x14d4>
   155bc:	rbit	x9, x10
   155c0:	clz	x15, x9
   155c4:	lsl	x9, x11, x15
   155c8:	add	x16, x0, x15, lsl #3
   155cc:	bic	x10, x10, x9
   155d0:	orr	x9, x9, x14
   155d4:	cmp	x9, x14
   155d8:	add	x14, x16, x12
   155dc:	str	x9, [x8]
   155e0:	b.ne	1559c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1480>  // b.any
   155e4:	ldr	x16, [x14]
   155e8:	b	155a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1488>
   155ec:	mov	x9, xzr
   155f0:	cmp	x3, #0x1, lsl #12
   155f4:	str	xzr, [x8, #520]
   155f8:	b.hi	15830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1714>  // b.pmore
   155fc:	lsr	x10, x3, #12
   15600:	mov	w13, #0x8208                	// #33288
   15604:	add	x11, x0, x10, lsl #3
   15608:	movk	w13, #0x20, lsl #16
   1560c:	add	x14, x11, x13
   15610:	ldr	x15, [x14]
   15614:	lsr	x12, x3, #6
   15618:	mov	w13, #0x1                   	// #1
   1561c:	lsl	x16, x13, x12
   15620:	ubfx	x11, x3, #6, #6
   15624:	tst	x15, x16
   15628:	and	x12, x3, #0x3f
   1562c:	b.eq	15648 <__sanitizer_install_malloc_and_free_hooks@@Base+0x152c>  // b.none
   15630:	add	x13, x0, x10, lsl #9
   15634:	mov	w14, #0x8210                	// #33296
   15638:	add	x13, x13, x11, lsl #3
   1563c:	movk	w14, #0x20, lsl #16
   15640:	ldr	x13, [x13, x14]
   15644:	b	15668 <__sanitizer_install_malloc_and_free_hooks@@Base+0x154c>
   15648:	orr	x15, x15, x16
   1564c:	add	x16, x0, x10, lsl #9
   15650:	str	x15, [x14]
   15654:	mov	w15, #0x8210                	// #33296
   15658:	mov	x13, xzr
   1565c:	add	x14, x16, x11, lsl #3
   15660:	movk	w15, #0x20, lsl #16
   15664:	str	xzr, [x14, x15]
   15668:	add	x10, x0, x10, lsl #9
   1566c:	mov	w14, #0x1                   	// #1
   15670:	add	x10, x10, x11, lsl #3
   15674:	lsl	x11, x14, x12
   15678:	mov	w12, #0x8210                	// #33296
   1567c:	orr	x11, x13, x11
   15680:	movk	w12, #0x20, lsl #16
   15684:	str	x11, [x10, x12]
   15688:	cbz	x9, 157a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1688>
   1568c:	mov	w11, #0x8008                	// #32776
   15690:	mov	w12, #0x8210                	// #33296
   15694:	mov	w10, #0x1                   	// #1
   15698:	movk	w11, #0x20, lsl #16
   1569c:	movk	w12, #0x20, lsl #16
   156a0:	mov	w13, #0x208                 	// #520
   156a4:	b	156b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1594>
   156a8:	mov	x9, x14
   156ac:	cbz	x9, 157a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1688>
   156b0:	rbit	x14, x9
   156b4:	clz	x15, x14
   156b8:	lsl	x17, x10, x15
   156bc:	add	x16, x0, x15, lsl #3
   156c0:	bic	x14, x9, x17
   156c4:	str	x14, [x8]
   156c8:	add	x1, x16, x11
   156cc:	ldr	x3, [x1]
   156d0:	cbz	x3, 15814 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16f8>
   156d4:	rbit	x16, x3
   156d8:	clz	x16, x16
   156dc:	lsl	x18, x10, x16
   156e0:	bics	x3, x3, x18
   156e4:	str	x3, [x1]
   156e8:	b.eq	156f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15d8>  // b.none
   156ec:	orr	x14, x17, x9
   156f0:	str	x14, [x8]
   156f4:	ldr	x9, [x8, #520]
   156f8:	tst	x9, x17
   156fc:	b.eq	1572c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1610>  // b.none
   15700:	add	x9, x0, x15, lsl #3
   15704:	ldr	x17, [x9, x12]
   15708:	orr	x18, x17, x18
   1570c:	cmp	x18, x17
   15710:	str	x18, [x9, x12]
   15714:	b.eq	156a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x158c>  // b.none
   15718:	orr	x15, x16, x15, lsl #6
   1571c:	mul	x9, x15, x13
   15720:	ldr	x16, [x0, x9]
   15724:	cbnz	x16, 15774 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1658>
   15728:	b	156a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x158c>
   1572c:	orr	x9, x9, x17
   15730:	add	x17, x0, x15, lsl #3
   15734:	str	x9, [x8, #520]
   15738:	str	x18, [x17, x12]
   1573c:	orr	x15, x16, x15, lsl #6
   15740:	mul	x9, x15, x13
   15744:	ldr	x16, [x0, x9]
   15748:	cbnz	x16, 15774 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1658>
   1574c:	b	156a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x158c>
   15750:	mov	x18, xzr
   15754:	str	xzr, [x14]
   15758:	madd	x1, x15, x13, x0
   1575c:	add	x17, x1, x17, lsl #3
   15760:	ldr	x17, [x17, #8]
   15764:	orr	x17, x17, x18
   15768:	str	x17, [x14]
   1576c:	mov	x14, x9
   15770:	cbz	x16, 156ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1590>
   15774:	rbit	x9, x16
   15778:	clz	x17, x9
   1577c:	lsl	x9, x10, x17
   15780:	add	x18, x0, x17, lsl #3
   15784:	bic	x16, x16, x9
   15788:	orr	x9, x9, x14
   1578c:	cmp	x9, x14
   15790:	add	x14, x18, x11
   15794:	str	x9, [x8]
   15798:	b.ne	15750 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1634>  // b.any
   1579c:	ldr	x18, [x14]
   157a0:	b	15758 <__sanitizer_install_malloc_and_free_hooks@@Base+0x163c>
   157a4:	ldr	x9, [x2]
   157a8:	ldr	x8, [x8, #520]
   157ac:	ands	x9, x8, x9
   157b0:	b.eq	15808 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16ec>  // b.none
   157b4:	mov	w11, #0x8210                	// #33296
   157b8:	mov	w10, #0x1                   	// #1
   157bc:	movk	w11, #0x20, lsl #16
   157c0:	b	157cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x16b0>
   157c4:	bic	x9, x9, x12
   157c8:	cbz	x9, 15808 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16ec>
   157cc:	rbit	x12, x9
   157d0:	clz	x13, x12
   157d4:	lsl	x12, x10, x13
   157d8:	tst	x12, x8
   157dc:	b.eq	157c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a8>  // b.none
   157e0:	lsl	x13, x13, #3
   157e4:	add	x14, x2, x13
   157e8:	add	x13, x0, x13
   157ec:	ldr	x14, [x14, #8]
   157f0:	ldr	x13, [x13, x11]
   157f4:	tst	x13, x14
   157f8:	b.eq	157c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a8>  // b.none
   157fc:	mov	w0, #0x1                   	// #1
   15800:	ldr	x30, [sp], #16
   15804:	ret
   15808:	mov	w0, wzr
   1580c:	ldr	x30, [sp], #16
   15810:	ret
   15814:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15818:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1581c:	add	x0, x0, #0xce
   15820:	add	x2, x2, #0xd03
   15824:	mov	w1, #0x31                  	// #49
   15828:	mov	x4, xzr
   1582c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15830:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15834:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15838:	add	x0, x0, #0xce
   1583c:	add	x2, x2, #0x137
   15840:	mov	w1, #0x144                 	// #324
   15844:	mov	w4, #0x1000                	// #4096
   15848:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1584c:	str	x30, [sp, #-16]!
   15850:	add	x10, x0, #0x208, lsl #12
   15854:	str	xzr, [x10]
   15858:	ldr	x8, [x1]
   1585c:	cbz	x8, 159c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18ac>
   15860:	mov	w13, #0x8008                	// #32776
   15864:	mov	x9, x2
   15868:	mov	x11, xzr
   1586c:	mov	w12, #0x1                   	// #1
   15870:	movk	w13, #0x20, lsl #16
   15874:	b	15894 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1778>
   15878:	mov	x16, xzr
   1587c:	str	xzr, [x15]
   15880:	add	x14, x1, x14, lsl #3
   15884:	ldr	x14, [x14, #8]
   15888:	orr	x14, x14, x16
   1588c:	str	x14, [x15]
   15890:	cbz	x8, 158c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17ac>
   15894:	mov	x15, x11
   15898:	rbit	x11, x8
   1589c:	clz	x14, x11
   158a0:	lsl	x11, x12, x14
   158a4:	add	x16, x0, x14, lsl #3
   158a8:	bic	x8, x8, x11
   158ac:	orr	x11, x11, x15
   158b0:	cmp	x11, x15
   158b4:	add	x15, x16, x13
   158b8:	str	x11, [x10]
   158bc:	b.ne	15878 <__sanitizer_install_malloc_and_free_hooks@@Base+0x175c>  // b.any
   158c0:	ldr	x16, [x15]
   158c4:	b	15880 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1764>
   158c8:	cmp	x9, #0x1, lsl #12
   158cc:	b.hi	159d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18b8>  // b.pmore
   158d0:	lsr	x16, x9, #6
   158d4:	mov	w17, #0x1                   	// #1
   158d8:	mov	w15, #0x8008                	// #32776
   158dc:	mov	x8, xzr
   158e0:	lsr	x12, x9, #12
   158e4:	ubfx	x13, x9, #6, #6
   158e8:	mov	w14, #0x1                   	// #1
   158ec:	movk	w15, #0x20, lsl #16
   158f0:	lsl	x16, x17, x16
   158f4:	lsl	x9, x17, x9
   158f8:	mov	w17, #0x208                 	// #520
   158fc:	b	15908 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17ec>
   15900:	ldr	x11, [x10]
   15904:	cbz	x11, 159c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18ac>
   15908:	rbit	x18, x11
   1590c:	clz	x18, x18
   15910:	lsl	x1, x14, x18
   15914:	add	x2, x0, x18, lsl #3
   15918:	bic	x5, x11, x1
   1591c:	str	x5, [x10]
   15920:	add	x2, x2, x15
   15924:	ldr	x6, [x2]
   15928:	cbz	x6, 15a04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18e8>
   1592c:	rbit	x5, x6
   15930:	clz	x5, x5
   15934:	lsl	x7, x14, x5
   15938:	bics	x6, x6, x7
   1593c:	str	x6, [x2]
   15940:	b.eq	1594c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1830>  // b.none
   15944:	orr	x11, x1, x11
   15948:	str	x11, [x10]
   1594c:	orr	x11, x5, x18, lsl #6
   15950:	madd	x18, x11, x17, x0
   15954:	add	x1, x18, x12, lsl #3
   15958:	ldr	x2, [x1]
   1595c:	tst	x2, x16
   15960:	b.eq	15978 <__sanitizer_install_malloc_and_free_hooks@@Base+0x185c>  // b.none
   15964:	madd	x18, x11, x17, x0
   15968:	add	x18, x18, x12, lsl #9
   1596c:	add	x18, x18, x13, lsl #3
   15970:	ldr	x18, [x18, #8]
   15974:	b	15994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1878>
   15978:	orr	x2, x2, x16
   1597c:	madd	x5, x11, x17, x0
   15980:	str	x2, [x1]
   15984:	add	x1, x5, x12, lsl #9
   15988:	mov	x18, xzr
   1598c:	add	x1, x1, x13, lsl #3
   15990:	str	xzr, [x1, #8]
   15994:	madd	x2, x11, x17, x0
   15998:	add	x2, x2, x12, lsl #9
   1599c:	orr	x1, x18, x9
   159a0:	add	x2, x2, x13, lsl #3
   159a4:	cmp	x8, x4
   159a8:	str	x1, [x2, #8]
   159ac:	b.cs	15900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17e4>  // b.hs, b.nlast
   159b0:	cmp	x1, x18
   159b4:	b.eq	15900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17e4>  // b.none
   159b8:	add	x18, x8, #0x1
   159bc:	str	x11, [x3, x8, lsl #3]
   159c0:	mov	x8, x18
   159c4:	b	15900 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17e4>
   159c8:	mov	x0, x8
   159cc:	ldr	x30, [sp], #16
   159d0:	ret
   159d4:	rbit	x8, x11
   159d8:	mov	w12, #0x1                   	// #1
   159dc:	clz	x14, x8
   159e0:	mov	w13, #0x8008                	// #32776
   159e4:	lsl	x8, x12, x14
   159e8:	movk	w13, #0x20, lsl #16
   159ec:	add	x12, x0, x14, lsl #3
   159f0:	bic	x14, x11, x8
   159f4:	str	x14, [x10]
   159f8:	add	x12, x12, x13
   159fc:	ldr	x13, [x12]
   15a00:	cbnz	x13, 15a24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1908>
   15a04:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15a08:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   15a0c:	add	x0, x0, #0xce
   15a10:	add	x2, x2, #0xd03
   15a14:	mov	w1, #0x31                  	// #49
   15a18:	mov	x3, xzr
   15a1c:	mov	x4, xzr
   15a20:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15a24:	rbit	x14, x13
   15a28:	clz	x14, x14
   15a2c:	mov	w15, #0x1                   	// #1
   15a30:	lsl	x14, x15, x14
   15a34:	bics	x13, x13, x14
   15a38:	str	x13, [x12]
   15a3c:	b.eq	15a48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x192c>  // b.none
   15a40:	orr	x8, x8, x11
   15a44:	str	x8, [x10]
   15a48:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15a4c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15a50:	add	x0, x0, #0xce
   15a54:	add	x2, x2, #0x137
   15a58:	mov	w1, #0x144                 	// #324
   15a5c:	mov	w4, #0x1000                	// #4096
   15a60:	mov	x3, x9
   15a64:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15a68:	stp	x29, x30, [sp, #-96]!
   15a6c:	stp	x28, x27, [sp, #16]
   15a70:	stp	x26, x25, [sp, #32]
   15a74:	stp	x24, x23, [sp, #48]
   15a78:	stp	x22, x21, [sp, #64]
   15a7c:	stp	x20, x19, [sp, #80]
   15a80:	cbz	x4, 15b84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a68>
   15a84:	mov	x19, x1
   15a88:	cmp	x1, #0x1, lsl #12
   15a8c:	str	x1, [x3]
   15a90:	b.hi	15bcc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ab0>  // b.pmore
   15a94:	lsr	x8, x19, #12
   15a98:	ldr	x9, [x2, x8, lsl #3]
   15a9c:	lsr	x10, x19, #6
   15aa0:	mov	x20, x2
   15aa4:	mov	x21, x0
   15aa8:	lsr	x9, x9, x10
   15aac:	tbz	w9, #0, 15ad0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19b4>
   15ab0:	ubfx	x9, x19, #6, #6
   15ab4:	add	x8, x20, x8, lsl #9
   15ab8:	add	x8, x8, x9, lsl #3
   15abc:	ldr	x8, [x8, #8]
   15ac0:	lsr	x8, x8, x19
   15ac4:	tbz	w8, #0, 15ad0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19b4>
   15ac8:	mov	w0, #0x1                   	// #1
   15acc:	b	15b90 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a74>
   15ad0:	mov	w8, #0x208                 	// #520
   15ad4:	mov	x25, xzr
   15ad8:	mov	x28, xzr
   15adc:	mov	x24, xzr
   15ae0:	mov	x27, xzr
   15ae4:	add	x22, x3, #0x8
   15ae8:	sub	x23, x4, #0x1
   15aec:	madd	x26, x19, x8, x21
   15af0:	mov	w29, #0x1                   	// #1
   15af4:	b	15b3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a20>
   15af8:	mov	x27, xzr
   15afc:	rbit	x8, x25
   15b00:	clz	x8, x8
   15b04:	lsl	x9, x28, #6
   15b08:	lsl	x10, x29, x8
   15b0c:	add	x9, x9, x24, lsl #12
   15b10:	bic	x25, x25, x10
   15b14:	orr	x1, x8, x9
   15b18:	orr	x8, x25, x27
   15b1c:	cmp	x8, #0x0
   15b20:	mov	x0, x21
   15b24:	mov	x2, x20
   15b28:	mov	x3, x22
   15b2c:	mov	x4, x23
   15b30:	cinc	x24, x24, eq  // eq = none
   15b34:	bl	15a68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x194c>
   15b38:	cbnz	x0, 15b8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a70>
   15b3c:	cbz	x27, 15b48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a2c>
   15b40:	cbnz	x25, 15afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x19e0>
   15b44:	b	15b58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a3c>
   15b48:	cbnz	x24, 15b84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a68>
   15b4c:	ldr	x27, [x26]
   15b50:	cbz	x27, 15b84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a68>
   15b54:	cbnz	x25, 15af8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19dc>
   15b58:	mov	w9, #0x208                 	// #520
   15b5c:	rbit	x8, x27
   15b60:	madd	x9, x19, x9, x21
   15b64:	clz	x28, x8
   15b68:	add	x8, x9, x24, lsl #9
   15b6c:	add	x8, x8, x28, lsl #3
   15b70:	ldr	x25, [x8, #8]
   15b74:	cbz	x25, 15bac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a90>
   15b78:	lsl	x8, x29, x28
   15b7c:	bic	x27, x27, x8
   15b80:	b	15afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x19e0>
   15b84:	mov	x0, xzr
   15b88:	b	15b90 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a74>
   15b8c:	add	x0, x0, #0x1
   15b90:	ldp	x20, x19, [sp, #80]
   15b94:	ldp	x22, x21, [sp, #64]
   15b98:	ldp	x24, x23, [sp, #48]
   15b9c:	ldp	x26, x25, [sp, #32]
   15ba0:	ldp	x28, x27, [sp, #16]
   15ba4:	ldp	x29, x30, [sp], #96
   15ba8:	ret
   15bac:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15bb0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15bb4:	add	x0, x0, #0xce
   15bb8:	add	x2, x2, #0x1ec
   15bbc:	mov	w1, #0x133                 	// #307
   15bc0:	mov	x3, xzr
   15bc4:	mov	x4, xzr
   15bc8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15bcc:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15bd0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15bd4:	add	x0, x0, #0xce
   15bd8:	add	x2, x2, #0x137
   15bdc:	mov	w1, #0x144                 	// #324
   15be0:	mov	w4, #0x1000                	// #4096
   15be4:	mov	x3, x19
   15be8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15bec:	str	x30, [sp, #-16]!
   15bf0:	ldr	x9, [x0, #520]
   15bf4:	cmp	x9, x2
   15bf8:	b.ne	15cc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bac>  // b.any
   15bfc:	mov	x8, x1
   15c00:	cmp	x1, #0x1, lsl #12
   15c04:	b.hi	15ce8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bcc>  // b.pmore
   15c08:	lsr	x9, x8, #12
   15c0c:	ldr	x12, [x0, x9, lsl #3]
   15c10:	lsr	x10, x8, #6
   15c14:	mov	w13, #0x1                   	// #1
   15c18:	lsl	x13, x13, x10
   15c1c:	ubfx	x11, x8, #6, #6
   15c20:	tst	x12, x13
   15c24:	and	x10, x8, #0x3f
   15c28:	b.eq	15c7c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b60>  // b.none
   15c2c:	add	x9, x0, x9, lsl #9
   15c30:	add	x9, x9, x11, lsl #3
   15c34:	ldr	x11, [x9, #8]
   15c38:	mov	w12, #0x1                   	// #1
   15c3c:	lsl	x10, x12, x10
   15c40:	orr	x10, x11, x10
   15c44:	cmp	x10, x11
   15c48:	str	x10, [x9, #8]
   15c4c:	b.ne	15c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b7c>  // b.any
   15c50:	ldr	x3, [x0, #1040]
   15c54:	cmp	x3, #0x40
   15c58:	b.cs	15d28 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c0c>  // b.hs, b.nlast
   15c5c:	mov	w9, wzr
   15c60:	add	x10, x3, #0x1
   15c64:	add	x11, x0, x3, lsl #3
   15c68:	str	x10, [x0, #1040]
   15c6c:	str	x8, [x11, #528]
   15c70:	mov	w0, w9
   15c74:	ldr	x30, [sp], #16
   15c78:	ret
   15c7c:	orr	x12, x12, x13
   15c80:	add	x13, x0, x9, lsl #9
   15c84:	mov	w14, #0x1                   	// #1
   15c88:	str	x12, [x0, x9, lsl #3]
   15c8c:	add	x9, x13, x11, lsl #3
   15c90:	lsl	x10, x14, x10
   15c94:	str	x10, [x9, #8]
   15c98:	ldr	x9, [x0, #1560]
   15c9c:	cmp	x9, #0x40
   15ca0:	b.cs	15d08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bec>  // b.hs, b.nlast
   15ca4:	add	x10, x9, #0x1
   15ca8:	add	x9, x0, x9, lsl #3
   15cac:	str	x10, [x0, #1560]
   15cb0:	str	w8, [x9, #1048]
   15cb4:	str	w3, [x9, #1052]
   15cb8:	mov	w9, #0x1                   	// #1
   15cbc:	mov	w0, w9
   15cc0:	ldr	x30, [sp], #16
   15cc4:	ret
   15cc8:	mov	x4, x2
   15ccc:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15cd0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15cd4:	add	x0, x0, #0x4e
   15cd8:	add	x2, x2, #0x14d
   15cdc:	mov	w1, #0x3c                  	// #60
   15ce0:	mov	x3, x9
   15ce4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15ce8:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15cec:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15cf0:	add	x0, x0, #0xce
   15cf4:	add	x2, x2, #0x137
   15cf8:	mov	w1, #0x144                 	// #324
   15cfc:	mov	w4, #0x1000                	// #4096
   15d00:	mov	x3, x8
   15d04:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15d08:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15d0c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15d10:	add	x0, x0, #0x4e
   15d14:	add	x2, x2, #0x259
   15d18:	mov	w1, #0x43                  	// #67
   15d1c:	mov	w4, #0x40                  	// #64
   15d20:	mov	x3, x9
   15d24:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15d28:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15d2c:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15d30:	add	x0, x0, #0x4e
   15d34:	add	x2, x2, #0x206
   15d38:	mov	w1, #0x3f                  	// #63
   15d3c:	mov	w4, #0x40                  	// #64
   15d40:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15d44:	str	x30, [sp, #-16]!
   15d48:	ldr	x8, [x0, #1040]
   15d4c:	mov	x3, x1
   15d50:	cbz	x8, 15d9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c80>
   15d54:	mov	x10, x8
   15d58:	subs	x9, x10, #0x1
   15d5c:	b.mi	15d9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c80>  // b.first
   15d60:	add	x10, x0, x10, lsl #3
   15d64:	ldr	x10, [x10, #520]
   15d68:	cmp	x10, x3
   15d6c:	mov	x10, x9
   15d70:	b.ne	15d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c3c>  // b.any
   15d74:	sub	x8, x8, #0x1
   15d78:	add	x9, x0, x9, lsl #3
   15d7c:	str	x8, [x0, #1040]
   15d80:	add	x8, x0, x8, lsl #3
   15d84:	ldr	x10, [x8, #528]
   15d88:	ldr	x11, [x9, #528]
   15d8c:	str	x10, [x9, #528]
   15d90:	str	x11, [x8, #528]
   15d94:	ldr	x30, [sp], #16
   15d98:	ret
   15d9c:	cmp	x3, #0x1, lsl #12
   15da0:	b.hi	15e54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d38>  // b.pmore
   15da4:	lsr	x8, x3, #12
   15da8:	ldr	x9, [x0, x8, lsl #3]
   15dac:	lsr	x10, x3, #6
   15db0:	mov	w11, #0x1                   	// #1
   15db4:	lsl	x10, x11, x10
   15db8:	tst	x9, x10
   15dbc:	b.eq	15dec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cd0>  // b.none
   15dc0:	ubfx	x11, x3, #6, #6
   15dc4:	add	x12, x0, x8, lsl #9
   15dc8:	add	x13, x12, x11, lsl #3
   15dcc:	ldr	x11, [x13, #8]
   15dd0:	mov	w12, #0x1                   	// #1
   15dd4:	lsl	x12, x12, x3
   15dd8:	bics	x12, x11, x12
   15ddc:	str	x12, [x13, #8]
   15de0:	b.eq	15df4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cd8>  // b.none
   15de4:	cmp	x12, x11
   15de8:	b.ne	15e04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ce8>  // b.any
   15dec:	ldr	x30, [sp], #16
   15df0:	ret
   15df4:	bic	x9, x9, x10
   15df8:	cmp	x12, x11
   15dfc:	str	x9, [x0, x8, lsl #3]
   15e00:	b.eq	15dec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cd0>  // b.none
   15e04:	ldr	x8, [x0, #1560]
   15e08:	cbz	x8, 15dec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cd0>
   15e0c:	add	x9, x0, x8, lsl #3
   15e10:	add	x9, x9, #0x418
   15e14:	sub	x10, x8, #0x1
   15e18:	tbnz	x10, #63, 15dec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cd0>
   15e1c:	ldr	w11, [x9, #-8]!
   15e20:	sub	x10, x10, #0x1
   15e24:	cmp	w11, w3
   15e28:	b.ne	15e18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cfc>  // b.any
   15e2c:	add	x8, x0, x8, lsl #3
   15e30:	ldr	x10, [x8, #1040]
   15e34:	ldr	x11, [x9]
   15e38:	str	x10, [x9]
   15e3c:	str	x11, [x8, #1040]
   15e40:	ldr	x8, [x0, #1560]
   15e44:	sub	x8, x8, #0x1
   15e48:	str	x8, [x0, #1560]
   15e4c:	ldr	x30, [sp], #16
   15e50:	ret
   15e54:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15e58:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15e5c:	add	x0, x0, #0xce
   15e60:	add	x2, x2, #0x137
   15e64:	mov	w1, #0x144                 	// #324
   15e68:	mov	w4, #0x1000                	// #4096
   15e6c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15e70:	mov	x8, x0
   15e74:	mov	w0, #0x2                   	// #2
   15e78:	mov	x2, x1
   15e7c:	mov	x1, x8
   15e80:	mov	x3, xzr
   15e84:	mov	x4, xzr
   15e88:	b	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   15e8c:	stp	x30, x19, [sp, #-16]!
   15e90:	mov	x19, x0
   15e94:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   15e98:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   15e9c:	add	x8, x8, #0x288
   15ea0:	mov	x2, x0
   15ea4:	mov	x0, x8
   15ea8:	mov	x1, x19
   15eac:	ldp	x30, x19, [sp], #16
   15eb0:	b	1c00c <__sanitizer_set_report_fd@@Base+0x59c8>
   15eb4:	stp	x30, x21, [sp, #-32]!
   15eb8:	stp	x20, x19, [sp, #16]
   15ebc:	ldr	x8, [x0]
   15ec0:	ldrb	w3, [x8]
   15ec4:	cmp	x3, #0x1
   15ec8:	b.ne	15fac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e90>  // b.any
   15ecc:	ldr	w8, [x0, #8]
   15ed0:	mov	x19, x0
   15ed4:	sub	w8, w8, #0x1
   15ed8:	cmp	w8, #0x2
   15edc:	b.cc	15fa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e84>  // b.lo, b.ul, b.last
   15ee0:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   15ee4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   15ee8:	ldr	x8, [x8, #3736]
   15eec:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   15ef0:	ldr	x9, [x9, #3728]
   15ef4:	ldr	x10, [x8]
   15ef8:	ldr	w8, [x19, #8]
   15efc:	ldr	x9, [x9]
   15f00:	cmp	x0, x10
   15f04:	csel	x21, x9, x0, eq  // eq = none
   15f08:	cmn	w8, #0x1
   15f0c:	b.eq	15f24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e08>  // b.none
   15f10:	ldr	x9, [x19, #8208]
   15f14:	cmp	x9, x21
   15f18:	b.eq	15fa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e84>  // b.none
   15f1c:	mov	w0, w8
   15f20:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   15f24:	bl	13dc0 <__sanitizer_report_error_summary@@Base+0x570>
   15f28:	mov	w8, #0x100c                	// #4108
   15f2c:	add	x20, x19, x8
   15f30:	add	x3, x19, #0xc
   15f34:	cbz	x0, 15f68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e4c>
   15f38:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   15f3c:	ldr	x8, [x8, #4056]
   15f40:	ldrb	w8, [x8, #48]
   15f44:	cbz	w8, 15f68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e4c>
   15f48:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15f4c:	mov	x4, x0
   15f50:	add	x2, x2, #0x310
   15f54:	mov	w1, #0x1000                	// #4096
   15f58:	mov	x0, x20
   15f5c:	mov	x5, x21
   15f60:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   15f64:	b	15f80 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e64>
   15f68:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15f6c:	add	x2, x2, #0x313
   15f70:	mov	w1, #0x1000                	// #4096
   15f74:	mov	x0, x20
   15f78:	mov	x4, x21
   15f7c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   15f80:	mov	w1, #0x1                   	// #1
   15f84:	mov	x0, x20
   15f88:	mov	x2, xzr
   15f8c:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   15f90:	cmn	w0, #0x1
   15f94:	str	w0, [x19, #8]
   15f98:	b.eq	15fc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1eac>  // b.none
   15f9c:	str	x21, [x19, #8208]
   15fa0:	ldp	x20, x19, [sp, #16]
   15fa4:	ldp	x30, x21, [sp], #32
   15fa8:	ret
   15fac:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15fb0:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15fb4:	add	x0, x0, #0x411
   15fb8:	add	x2, x2, #0x461
   15fbc:	mov	w1, #0x2b                  	// #43
   15fc0:	mov	w4, #0x1                   	// #1
   15fc4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   15fc8:	adrp	x19, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   15fcc:	add	x19, x19, #0x31a
   15fd0:	mov	x0, x19
   15fd4:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   15fd8:	mov	x2, x0
   15fdc:	mov	w0, #0x2                   	// #2
   15fe0:	mov	x1, x19
   15fe4:	mov	x3, xzr
   15fe8:	mov	x4, xzr
   15fec:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   15ff0:	mov	x0, x20
   15ff4:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   15ff8:	mov	x2, x0
   15ffc:	mov	w0, #0x2                   	// #2
   16000:	mov	x1, x20
   16004:	mov	x3, xzr
   16008:	mov	x4, xzr
   1600c:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   16010:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   16014:	sub	sp, sp, #0x30
   16018:	stp	x30, x21, [sp, #16]
   1601c:	stp	x20, x19, [sp, #32]
   16020:	cbz	x1, 160dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fc0>
   16024:	mov	x21, x0
   16028:	mov	x0, x1
   1602c:	mov	x19, x1
   16030:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   16034:	cmp	x0, #0xf9d
   16038:	b.cs	160ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fd0>  // b.hs, b.nlast
   1603c:	ldr	x20, [x21]
   16040:	mov	w8, #0x1                   	// #1
   16044:	ldaxrb	w9, [x20]
   16048:	stlxrb	w10, w8, [x20]
   1604c:	cbnz	w10, 16044 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f28>
   16050:	cbz	w9, 1605c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f40>
   16054:	mov	x0, x20
   16058:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1605c:	ldr	w0, [x21, #8]
   16060:	add	w8, w0, #0x1
   16064:	cmp	w8, #0x3
   16068:	b.hi	16074 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f58>  // b.pmore
   1606c:	cmp	w8, #0x1
   16070:	b.ne	16078 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f5c>  // b.any
   16074:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   16078:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1607c:	mov	w8, #0xffffffff            	// #-1
   16080:	add	x1, x1, #0x361
   16084:	mov	x0, x19
   16088:	str	w8, [x21, #8]
   1608c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   16090:	cbz	w0, 160c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fa8>
   16094:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16098:	add	x1, x1, #0x368
   1609c:	mov	x0, x19
   160a0:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   160a4:	cbz	w0, 160cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fb0>
   160a8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   160ac:	add	x0, x21, #0xc
   160b0:	add	x2, x2, #0xba0
   160b4:	mov	w1, #0x1000                	// #4096
   160b8:	mov	x3, x19
   160bc:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   160c0:	b	160d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fb8>
   160c4:	mov	w8, #0x1                   	// #1
   160c8:	b	160d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fb4>
   160cc:	mov	w8, #0x2                   	// #2
   160d0:	str	w8, [x21, #8]
   160d4:	dmb	ish
   160d8:	strb	wzr, [x20]
   160dc:	ldp	x20, x19, [sp, #32]
   160e0:	ldp	x30, x21, [sp, #16]
   160e4:	add	sp, sp, #0x30
   160e8:	ret
   160ec:	ldrb	w1, [x19]
   160f0:	ldrb	w2, [x19, #1]
   160f4:	ldrb	w3, [x19, #2]
   160f8:	ldrb	w4, [x19, #3]
   160fc:	ldrb	w5, [x19, #4]
   16100:	ldrb	w6, [x19, #5]
   16104:	ldrb	w7, [x19, #6]
   16108:	ldrb	w8, [x19, #7]
   1610c:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16110:	add	x0, x0, #0x333
   16114:	str	w8, [sp]
   16118:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1611c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   16120:	sub	sp, sp, #0x60
   16124:	stp	x30, x27, [sp, #16]
   16128:	stp	x26, x25, [sp, #32]
   1612c:	stp	x24, x23, [sp, #48]
   16130:	stp	x22, x21, [sp, #64]
   16134:	stp	x20, x19, [sp, #80]
   16138:	str	xzr, [x1]
   1613c:	str	xzr, [x2]
   16140:	str	xzr, [x3]
   16144:	cbz	x4, 16250 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2134>
   16148:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1614c:	ldr	x25, [x25, #4016]
   16150:	mov	x24, x0
   16154:	mov	x20, x5
   16158:	mov	x21, x4
   1615c:	ldr	x0, [x25]
   16160:	mov	x23, x3
   16164:	mov	x19, x2
   16168:	mov	x22, x1
   1616c:	cbnz	x0, 16178 <__sanitizer_install_malloc_and_free_hooks@@Base+0x205c>
   16170:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   16174:	str	x0, [x25]
   16178:	cmp	x0, x21
   1617c:	adrp	x26, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16180:	csel	x25, x0, x21, cc  // cc = lo, ul, last
   16184:	add	x26, x26, #0x36f
   16188:	ldr	x0, [x22]
   1618c:	ldr	x1, [x19]
   16190:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   16194:	mov	x0, x25
   16198:	mov	x1, x26
   1619c:	mov	w2, wzr
   161a0:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   161a4:	str	x0, [x22]
   161a8:	mov	x0, x24
   161ac:	mov	w1, wzr
   161b0:	mov	x2, x20
   161b4:	str	x25, [x19]
   161b8:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   161bc:	cmn	w0, #0x1
   161c0:	b.eq	16270 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2154>  // b.none
   161c4:	mov	w27, w0
   161c8:	mov	x8, xzr
   161cc:	str	xzr, [x23]
   161d0:	subs	x2, x25, x8
   161d4:	b.ls	16214 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20f8>  // b.plast
   161d8:	ldr	x9, [x22]
   161dc:	add	x3, sp, #0x8
   161e0:	mov	w0, w27
   161e4:	mov	x4, x20
   161e8:	add	x1, x9, x8
   161ec:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x5514>
   161f0:	tbz	w0, #0, 1622c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2110>
   161f4:	ldr	x9, [sp, #8]
   161f8:	ldr	x8, [x23]
   161fc:	add	x8, x8, x9
   16200:	str	x8, [x23]
   16204:	cbz	x9, 16248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x212c>
   16208:	cmp	x8, x21
   1620c:	b.ne	161d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20b4>  // b.any
   16210:	b	16248 <__sanitizer_install_malloc_and_free_hooks@@Base+0x212c>
   16214:	mov	w0, w27
   16218:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   1621c:	lsl	x8, x25, #1
   16220:	cmp	x8, x21
   16224:	csel	x25, x8, x21, cc  // cc = lo, ul, last
   16228:	b	16188 <__sanitizer_install_malloc_and_free_hooks@@Base+0x206c>
   1622c:	ldr	x0, [x22]
   16230:	ldr	x1, [x19]
   16234:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   16238:	mov	w0, w27
   1623c:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   16240:	mov	w0, wzr
   16244:	b	16254 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2138>
   16248:	mov	w0, w27
   1624c:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   16250:	mov	w0, #0x1                   	// #1
   16254:	ldp	x20, x19, [sp, #80]
   16258:	ldp	x22, x21, [sp, #64]
   1625c:	ldp	x24, x23, [sp, #48]
   16260:	ldp	x26, x25, [sp, #32]
   16264:	ldp	x30, x27, [sp, #16]
   16268:	add	sp, sp, #0x60
   1626c:	ret
   16270:	ldr	x0, [x22]
   16274:	ldr	x1, [x19]
   16278:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1627c:	mov	w0, wzr
   16280:	b	16254 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2138>
   16284:	sub	sp, sp, #0x50
   16288:	stp	x30, x25, [sp, #16]
   1628c:	stp	x24, x23, [sp, #32]
   16290:	stp	x22, x21, [sp, #48]
   16294:	stp	x20, x19, [sp, #64]
   16298:	str	xzr, [x1, #16]
   1629c:	cbz	x2, 163d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22bc>
   162a0:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   162a4:	ldr	x24, [x24, #4016]
   162a8:	mov	x22, x3
   162ac:	mov	x21, x2
   162b0:	mov	x19, x1
   162b4:	ldr	x23, [x24]
   162b8:	mov	x20, x0
   162bc:	cbnz	x23, 162cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x21b0>
   162c0:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   162c4:	mov	x23, x0
   162c8:	str	x0, [x24]
   162cc:	mov	x0, x20
   162d0:	mov	w1, wzr
   162d4:	mov	x2, x22
   162d8:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   162dc:	cmn	w0, #0x1
   162e0:	b.eq	163e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22cc>  // b.none
   162e4:	mov	w24, w0
   162e8:	mov	x20, xzr
   162ec:	cmp	x20, x21
   162f0:	b.cs	16390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2274>  // b.hs, b.nlast
   162f4:	ldr	x8, [x19, #16]
   162f8:	cmp	x20, x8
   162fc:	b.cs	16308 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21ec>  // b.hs, b.nlast
   16300:	mov	x25, x8
   16304:	b	16358 <__sanitizer_install_malloc_and_free_hooks@@Base+0x223c>
   16308:	lsl	x9, x20, #1
   1630c:	cmp	x23, x9
   16310:	csel	x9, x23, x9, hi  // hi = pmore
   16314:	cmp	x9, x21
   16318:	csel	x25, x9, x21, cc  // cc = lo, ul, last
   1631c:	cmp	x8, x25
   16320:	b.cs	16354 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2238>  // b.hs, b.nlast
   16324:	ldr	x9, [x19, #8]
   16328:	cmp	x9, x25
   1632c:	b.cs	16340 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2224>  // b.hs, b.nlast
   16330:	mov	x0, x19
   16334:	mov	x1, x25
   16338:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1633c:	ldr	x8, [x19, #16]
   16340:	ldr	x9, [x19]
   16344:	sub	x2, x25, x8
   16348:	mov	w1, wzr
   1634c:	add	x0, x9, x8
   16350:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   16354:	str	x25, [x19, #16]
   16358:	subs	x2, x25, x20
   1635c:	b.ls	16404 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22e8>  // b.plast
   16360:	cmp	x25, x21
   16364:	b.hi	16424 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2308>  // b.pmore
   16368:	ldr	x8, [x19]
   1636c:	add	x3, sp, #0x8
   16370:	mov	w0, w24
   16374:	mov	x4, x22
   16378:	add	x1, x8, x20
   1637c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x5514>
   16380:	tbz	w0, #0, 163e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c4>
   16384:	ldr	x8, [sp, #8]
   16388:	add	x20, x8, x20
   1638c:	cbnz	x8, 162ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x21d0>
   16390:	mov	w0, w24
   16394:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   16398:	ldr	x8, [x19, #16]
   1639c:	cmp	x8, x20
   163a0:	b.cs	163d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22b8>  // b.hs, b.nlast
   163a4:	ldr	x9, [x19, #8]
   163a8:	cmp	x9, x20
   163ac:	b.cs	163c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22a4>  // b.hs, b.nlast
   163b0:	mov	x0, x19
   163b4:	mov	x1, x20
   163b8:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   163bc:	ldr	x8, [x19, #16]
   163c0:	ldr	x9, [x19]
   163c4:	sub	x2, x20, x8
   163c8:	mov	w1, wzr
   163cc:	add	x0, x9, x8
   163d0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   163d4:	str	x20, [x19, #16]
   163d8:	mov	w0, #0x1                   	// #1
   163dc:	b	163ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x22d0>
   163e0:	mov	w0, w24
   163e4:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   163e8:	mov	w0, wzr
   163ec:	ldp	x20, x19, [sp, #64]
   163f0:	ldp	x22, x21, [sp, #48]
   163f4:	ldp	x24, x23, [sp, #32]
   163f8:	ldp	x30, x25, [sp, #16]
   163fc:	add	sp, sp, #0x50
   16400:	ret
   16404:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16408:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1640c:	add	x0, x0, #0x380
   16410:	add	x2, x2, #0x3d1
   16414:	mov	w1, #0x99                  	// #153
   16418:	mov	x3, x20
   1641c:	mov	x4, x25
   16420:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   16424:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16428:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1642c:	add	x0, x0, #0x380
   16430:	add	x2, x2, #0x3f1
   16434:	mov	w1, #0x9a                  	// #154
   16438:	mov	x3, x25
   1643c:	mov	x4, x21
   16440:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   16444:	sub	sp, sp, #0x60
   16448:	stp	x30, x25, [sp, #32]
   1644c:	stp	x24, x23, [sp, #48]
   16450:	stp	x22, x21, [sp, #64]
   16454:	stp	x20, x19, [sp, #80]
   16458:	mov	x19, x0
   1645c:	bl	19c60 <__sanitizer_set_report_fd@@Base+0x361c>
   16460:	tbz	w0, #0, 16480 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2364>
   16464:	mov	x0, x19
   16468:	ldp	x20, x19, [sp, #80]
   1646c:	ldp	x22, x21, [sp, #64]
   16470:	ldp	x24, x23, [sp, #48]
   16474:	ldp	x30, x25, [sp, #32]
   16478:	add	sp, sp, #0x60
   1647c:	b	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   16480:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   16484:	add	x0, x0, #0x2ac
   16488:	bl	19d40 <__sanitizer_set_report_fd@@Base+0x36fc>
   1648c:	cbz	x0, 165c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24a4>
   16490:	mov	x21, x0
   16494:	mov	x0, x19
   16498:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1649c:	mov	x20, x0
   164a0:	add	x0, sp, #0x8
   164a4:	mov	w1, #0x1000                	// #4096
   164a8:	stp	xzr, xzr, [sp, #16]
   164ac:	str	xzr, [sp, #8]
   164b0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   164b4:	ldr	x8, [sp, #24]
   164b8:	cmp	x8, #0xfff
   164bc:	b.hi	164f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23d8>  // b.pmore
   164c0:	ldr	x9, [sp, #16]
   164c4:	cmp	x9, #0xfff
   164c8:	b.hi	164dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x23c0>  // b.pmore
   164cc:	add	x0, sp, #0x8
   164d0:	mov	w1, #0x1000                	// #4096
   164d4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   164d8:	ldr	x8, [sp, #24]
   164dc:	ldr	x9, [sp, #8]
   164e0:	mov	w10, #0x1000                	// #4096
   164e4:	sub	x2, x10, x8
   164e8:	mov	w1, wzr
   164ec:	add	x0, x9, x8
   164f0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   164f4:	mov	w8, #0x1000                	// #4096
   164f8:	add	x24, x20, #0x2
   164fc:	mov	w25, #0x2f                  	// #47
   16500:	str	x8, [sp, #24]
   16504:	b	16514 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23f8>
   16508:	ldrb	w8, [x22], #1
   1650c:	mov	x21, x22
   16510:	cbz	w8, 165b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2494>
   16514:	mov	w1, #0x3a                  	// #58
   16518:	mov	x0, x21
   1651c:	bl	18d28 <__sanitizer_set_report_fd@@Base+0x26e4>
   16520:	sub	x23, x0, x21
   16524:	add	x8, x24, x23
   16528:	mov	x22, x0
   1652c:	cmp	x8, #0x1, lsl #12
   16530:	b.hi	16508 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23ec>  // b.pmore
   16534:	ldr	x0, [sp, #8]
   16538:	mov	x1, x21
   1653c:	mov	x2, x23
   16540:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   16544:	ldr	x4, [sp, #24]
   16548:	cmp	x4, x23
   1654c:	b.ls	165e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24c4>  // b.plast
   16550:	ldr	x8, [sp, #8]
   16554:	add	x21, x23, #0x1
   16558:	strb	w25, [x8, x23]
   1655c:	ldr	x4, [sp, #24]
   16560:	cmp	x4, x21
   16564:	b.ls	165fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x24e0>  // b.plast
   16568:	ldr	x8, [sp, #8]
   1656c:	mov	x1, x19
   16570:	mov	x2, x20
   16574:	add	x0, x8, x21
   16578:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1657c:	ldr	x4, [sp, #24]
   16580:	add	x3, x21, x20
   16584:	cmp	x4, x3
   16588:	b.ls	16618 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24fc>  // b.plast
   1658c:	ldr	x8, [sp, #8]
   16590:	strb	wzr, [x8, x3]
   16594:	ldr	x0, [sp, #8]
   16598:	bl	19c60 <__sanitizer_set_report_fd@@Base+0x361c>
   1659c:	tbz	w0, #0, 16508 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23ec>
   165a0:	ldr	x0, [sp, #8]
   165a4:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   165a8:	mov	x19, x0
   165ac:	b	165b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2498>
   165b0:	mov	x19, xzr
   165b4:	ldp	x0, x1, [sp, #8]
   165b8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   165bc:	b	165c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24a8>
   165c0:	mov	x19, xzr
   165c4:	mov	x0, x19
   165c8:	ldp	x20, x19, [sp, #80]
   165cc:	ldp	x22, x21, [sp, #64]
   165d0:	ldp	x24, x23, [sp, #48]
   165d4:	ldp	x30, x25, [sp, #32]
   165d8:	add	sp, sp, #0x60
   165dc:	ret
   165e0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   165e4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   165e8:	add	x0, x0, #0xb2f
   165ec:	add	x2, x2, #0x1eb
   165f0:	mov	w1, #0x1c5                 	// #453
   165f4:	mov	x3, x23
   165f8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   165fc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   16600:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   16604:	add	x0, x0, #0xb2f
   16608:	add	x2, x2, #0x1eb
   1660c:	mov	w1, #0x1c5                 	// #453
   16610:	mov	x3, x21
   16614:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   16618:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1661c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   16620:	add	x0, x0, #0xb2f
   16624:	add	x2, x2, #0x1eb
   16628:	mov	w1, #0x1c5                 	// #453
   1662c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000016630 <__sanitizer_set_report_path@@Base>:
   16630:	adrp	x8, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   16634:	add	x8, x8, #0x288
   16638:	mov	x1, x0
   1663c:	mov	x0, x8
   16640:	b	16014 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>

0000000000016644 <__sanitizer_set_report_fd@@Base>:
   16644:	stp	x30, x19, [sp, #-16]!
   16648:	adrp	x19, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   1664c:	add	x19, x19, #0x290
   16650:	str	w0, [x19]
   16654:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   16658:	str	x0, [x19, #8200]
   1665c:	ldp	x30, x19, [sp], #16
   16660:	ret
   16664:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   16668:	mov	x10, #0x10000               	// #65536
   1666c:	add	x9, x9, #0xcf
   16670:	movk	x10, #0x1, lsl #32
   16674:	stp	x9, x10, [x0, #24]
   16678:	adrp	x9, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1667c:	movi	v0.2d, #0x0
   16680:	stp	q0, q0, [x0, #128]
   16684:	ldr	q0, [x9, #1184]
   16688:	adrp	x11, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   1668c:	adrp	x10, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16690:	mov	w9, #0x101                 	// #257
   16694:	add	x11, x11, #0x368
   16698:	stur	q0, [x0, #72]
   1669c:	ldr	d0, [x10, #1216]
   166a0:	adrp	x10, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   166a4:	strh	w9, [x0, #96]
   166a8:	mov	w9, #0x1388                	// #5000
   166ac:	str	x11, [x0, #40]
   166b0:	mov	w11, #0x10000               	// #65536
   166b4:	add	x10, x10, #0x4c8
   166b8:	str	w9, [x0, #164]
   166bc:	mov	w9, #0x100                 	// #256
   166c0:	stp	x11, x10, [x0, #104]
   166c4:	adrp	x10, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   166c8:	movk	w9, #0x101, lsl #16
   166cc:	add	x10, x10, #0x9c5
   166d0:	str	w9, [x0, #184]
   166d4:	adrp	x9, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   166d8:	str	x10, [x0, #176]
   166dc:	adrp	x10, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   166e0:	str	d0, [x0, #88]
   166e4:	ldr	q0, [x9, #1200]
   166e8:	mov	w8, #0x1                   	// #1
   166ec:	add	x10, x10, #0x4cd
   166f0:	mov	x12, #0x10100000000         	// #1103806595072
   166f4:	strb	w8, [x0]
   166f8:	strb	w8, [x0, #60]
   166fc:	strb	w8, [x0, #68]
   16700:	strb	w8, [x0, #98]
   16704:	strh	w8, [x0, #168]
   16708:	strh	w8, [x0, #188]
   1670c:	mov	x8, #0x1                   	// #1
   16710:	str	x10, [x0, #200]
   16714:	adrp	x10, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16718:	movk	x12, #0x1, lsl #48
   1671c:	movk	x8, #0x100, lsl #32
   16720:	add	x10, x10, #0x4d5
   16724:	mov	w9, #0x100                 	// #256
   16728:	str	xzr, [x0, #8]
   1672c:	strb	wzr, [x0, #16]
   16730:	strh	wzr, [x0, #48]
   16734:	str	wzr, [x0, #64]
   16738:	stur	x12, [x0, #52]
   1673c:	strh	wzr, [x0, #120]
   16740:	strb	wzr, [x0, #122]
   16744:	strb	wzr, [x0, #160]
   16748:	str	wzr, [x0, #192]
   1674c:	stp	x8, x10, [x0, #224]
   16750:	str	q0, [x0, #208]
   16754:	str	w9, [x0, #240]
   16758:	ret
   1675c:	mov	w2, #0xf8                  	// #248
   16760:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   16764:	sub	sp, sp, #0x80
   16768:	stp	x29, x30, [sp, #32]
   1676c:	stp	x28, x27, [sp, #48]
   16770:	stp	x26, x25, [sp, #64]
   16774:	stp	x24, x23, [sp, #80]
   16778:	stp	x22, x21, [sp, #96]
   1677c:	stp	x20, x19, [sp, #112]
   16780:	add	x8, x1, x2
   16784:	sub	x21, x8, #0x1
   16788:	cmp	x21, x1
   1678c:	mov	x20, x1
   16790:	cset	w9, hi  // hi = pmore
   16794:	b.ls	169d0 <__sanitizer_set_report_fd@@Base+0x38c>  // b.plast
   16798:	ldrb	w8, [x0]
   1679c:	mov	x19, x0
   167a0:	cbz	w8, 169d0 <__sanitizer_set_report_fd@@Base+0x38c>
   167a4:	add	x9, x2, x20
   167a8:	mov	x22, sp
   167ac:	mov	w23, #0x6667                	// #26215
   167b0:	movk	w23, #0x6666, lsl #16
   167b4:	mov	w24, #0xa                   	// #10
   167b8:	mov	x25, #0xfffffffffffffffe    	// #-2
   167bc:	sub	x26, x9, #0x3
   167c0:	add	x27, x22, #0x30
   167c4:	add	x28, x22, #0x20
   167c8:	mov	w29, #0x25                  	// #37
   167cc:	b	167ec <__sanitizer_set_report_fd@@Base+0x1a8>
   167d0:	strb	w8, [x20], #1
   167d4:	mov	x19, x9
   167d8:	cmp	x20, x21
   167dc:	cset	w9, cc  // cc = lo, ul, last
   167e0:	b.cs	169d0 <__sanitizer_set_report_fd@@Base+0x38c>  // b.hs, b.nlast
   167e4:	ldrb	w8, [x19]
   167e8:	cbz	w8, 169d0 <__sanitizer_set_report_fd@@Base+0x38c>
   167ec:	and	w9, w8, #0xff
   167f0:	cmp	w9, #0x25
   167f4:	add	x9, x19, #0x1
   167f8:	b.ne	167d0 <__sanitizer_set_report_fd@@Base+0x18c>  // b.any
   167fc:	ldrb	w8, [x9]
   16800:	cmp	w8, #0x70
   16804:	b.eq	16854 <__sanitizer_set_report_fd@@Base+0x210>  // b.none
   16808:	cmp	w8, #0x62
   1680c:	b.ne	169a0 <__sanitizer_set_report_fd@@Base+0x35c>  // b.any
   16810:	bl	13dc0 <__sanitizer_report_error_summary@@Base+0x570>
   16814:	cbz	x0, 169f8 <__sanitizer_set_report_fd@@Base+0x3b4>
   16818:	cmp	x20, x21
   1681c:	b.cs	16840 <__sanitizer_set_report_fd@@Base+0x1fc>  // b.hs, b.nlast
   16820:	ldrb	w9, [x0]
   16824:	cbz	w9, 16840 <__sanitizer_set_report_fd@@Base+0x1fc>
   16828:	add	x8, x0, #0x1
   1682c:	strb	w9, [x20], #1
   16830:	ldrb	w9, [x8], #1
   16834:	cmp	x20, x21
   16838:	b.cs	16840 <__sanitizer_set_report_fd@@Base+0x1fc>  // b.hs, b.nlast
   1683c:	cbnz	w9, 1682c <__sanitizer_set_report_fd@@Base+0x1e8>
   16840:	add	x19, x19, #0x2
   16844:	cmp	x20, x21
   16848:	cset	w9, cc  // cc = lo, ul, last
   1684c:	b.cc	167e4 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
   16850:	b	169d0 <__sanitizer_set_report_fd@@Base+0x38c>
   16854:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   16858:	mov	x13, xzr
   1685c:	mov	x11, #0xfffffffffffffffe    	// #-2
   16860:	mov	x8, x27
   16864:	mov	x9, x8
   16868:	smull	x8, w0, w23
   1686c:	add	w14, w0, #0x9
   16870:	cmp	w14, #0x12
   16874:	lsr	x14, x8, #63
   16878:	asr	x8, x8, #34
   1687c:	add	w15, w8, w14
   16880:	mov	x12, x13
   16884:	msub	w8, w15, w24, w0
   16888:	sub	x13, x13, #0x1
   1688c:	add	x10, x22, x12
   16890:	add	x11, x11, #0x1
   16894:	add	w14, w8, #0x30
   16898:	sub	x8, x9, #0x1
   1689c:	mov	w0, w15
   168a0:	strb	w14, [x10, #31]
   168a4:	b.hi	16864 <__sanitizer_set_report_fd@@Base+0x220>  // b.pmore
   168a8:	add	x10, x13, #0x1
   168ac:	cmp	x10, #0x0
   168b0:	b.gt	169b8 <__sanitizer_set_report_fd@@Base+0x374>
   168b4:	cmp	x20, x21
   168b8:	b.cs	169b8 <__sanitizer_set_report_fd@@Base+0x374>  // b.hs, b.nlast
   168bc:	mov	x8, x20
   168c0:	strb	w14, [x8], #1
   168c4:	tbz	x10, #63, 169bc <__sanitizer_set_report_fd@@Base+0x378>
   168c8:	cmp	x8, x21
   168cc:	b.cs	169bc <__sanitizer_set_report_fd@@Base+0x378>  // b.hs, b.nlast
   168d0:	sub	x15, x26, x20
   168d4:	sub	x16, x25, x13
   168d8:	cmp	x15, x16
   168dc:	csel	x14, x15, x16, cc  // cc = lo, ul, last
   168e0:	add	x14, x14, #0x1
   168e4:	cmp	x14, #0x20
   168e8:	b.cc	16980 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
   168ec:	cmp	x15, x16
   168f0:	csel	x16, x15, x16, cc  // cc = lo, ul, last
   168f4:	cmp	x15, x11
   168f8:	csel	x17, x15, x11, cc  // cc = lo, ul, last
   168fc:	add	x17, x22, x17
   16900:	add	x17, x17, x13
   16904:	add	x17, x17, #0x22
   16908:	cmp	x8, x17
   1690c:	b.cs	16928 <__sanitizer_set_report_fd@@Base+0x2e4>  // b.hs, b.nlast
   16910:	add	x16, x20, x16
   16914:	add	x17, x22, x13
   16918:	add	x16, x16, #0x2
   1691c:	add	x17, x17, #0x21
   16920:	cmp	x17, x16
   16924:	b.cc	16980 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
   16928:	cmp	x15, x11
   1692c:	mvn	x10, x12
   16930:	csel	x11, x15, x11, cc  // cc = lo, ul, last
   16934:	cmp	x15, x10
   16938:	add	x10, x11, #0x1
   1693c:	csinv	x11, x15, x12, cc  // cc = lo, ul, last
   16940:	and	x10, x10, #0xffffffffffffffe0
   16944:	and	x16, x14, #0xffffffffffffffe0
   16948:	add	x11, x11, #0x1
   1694c:	add	x10, x10, x13
   16950:	add	x17, x20, #0x11
   16954:	add	x8, x8, x16
   16958:	add	x10, x10, #0x1
   1695c:	and	x11, x11, #0xffffffffffffffe0
   16960:	ldp	q0, q1, [x9, #-16]
   16964:	add	x9, x9, #0x20
   16968:	subs	x11, x11, #0x20
   1696c:	stp	q0, q1, [x17, #-16]
   16970:	add	x17, x17, #0x20
   16974:	b.ne	16960 <__sanitizer_set_report_fd@@Base+0x31c>  // b.any
   16978:	cmp	x14, x16
   1697c:	b.eq	169bc <__sanitizer_set_report_fd@@Base+0x378>  // b.none
   16980:	ldrb	w9, [x28, x10]
   16984:	cmn	x10, #0x2
   16988:	strb	w9, [x8], #1
   1698c:	b.gt	169bc <__sanitizer_set_report_fd@@Base+0x378>
   16990:	cmp	x8, x21
   16994:	add	x10, x10, #0x1
   16998:	b.cc	16980 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
   1699c:	b	169bc <__sanitizer_set_report_fd@@Base+0x378>
   169a0:	strb	w29, [x20], #1
   169a4:	mov	x19, x9
   169a8:	cmp	x20, x21
   169ac:	cset	w9, cc  // cc = lo, ul, last
   169b0:	b.cc	167e4 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
   169b4:	b	169d0 <__sanitizer_set_report_fd@@Base+0x38c>
   169b8:	mov	x8, x20
   169bc:	add	x19, x19, #0x2
   169c0:	mov	x20, x8
   169c4:	cmp	x20, x21
   169c8:	cset	w9, cc  // cc = lo, ul, last
   169cc:	b.cc	167e4 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
   169d0:	tbz	w9, #0, 16a10 <__sanitizer_set_report_fd@@Base+0x3cc>
   169d4:	strb	wzr, [x20]
   169d8:	ldp	x20, x19, [sp, #112]
   169dc:	ldp	x22, x21, [sp, #96]
   169e0:	ldp	x24, x23, [sp, #80]
   169e4:	ldp	x26, x25, [sp, #64]
   169e8:	ldp	x28, x27, [sp, #48]
   169ec:	ldp	x29, x30, [sp, #32]
   169f0:	add	sp, sp, #0x80
   169f4:	ret
   169f8:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   169fc:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16a00:	add	x0, x0, #0x4dc
   16a04:	add	x2, x2, #0x52e
   16a08:	mov	w1, #0x2f                  	// #47
   16a0c:	b	16a24 <__sanitizer_set_report_fd@@Base+0x3e0>
   16a10:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16a14:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16a18:	add	x0, x0, #0x4dc
   16a1c:	add	x2, x2, #0x53e
   16a20:	mov	w1, #0x47                  	// #71
   16a24:	mov	x3, xzr
   16a28:	mov	x4, xzr
   16a2c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   16a30:	str	x30, [sp, #-48]!
   16a34:	stp	x22, x21, [sp, #16]
   16a38:	stp	x20, x19, [sp, #32]
   16a3c:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16a40:	ldr	x20, [x20, #3624]
   16a44:	mov	x19, x0
   16a48:	mov	w1, #0x20                  	// #32
   16a4c:	mov	x0, x20
   16a50:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16a54:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16a58:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   16a5c:	add	x21, x21, #0x6f0
   16a60:	add	x22, x22, #0xcf
   16a64:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16a68:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16a6c:	mov	x2, x0
   16a70:	strb	wzr, [x0, #16]
   16a74:	stp	x21, x19, [x0]
   16a78:	str	x22, [x0, #24]
   16a7c:	add	x1, x1, #0x55b
   16a80:	add	x3, x3, #0x563
   16a84:	mov	x0, x19
   16a88:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16a8c:	mov	w1, #0x20                  	// #32
   16a90:	mov	x0, x20
   16a94:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16a98:	mov	w8, #0x1                   	// #1
   16a9c:	stp	x21, x19, [x0]
   16aa0:	strb	w8, [x0, #16]
   16aa4:	str	x22, [x0, #24]
   16aa8:	mov	x2, x0
   16aac:	mov	x0, x19
   16ab0:	ldp	x20, x19, [sp, #32]
   16ab4:	ldp	x22, x21, [sp, #16]
   16ab8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16abc:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ac0:	add	x1, x1, #0x589
   16ac4:	add	x3, x3, #0x59b
   16ac8:	ldr	x30, [sp], #48
   16acc:	b	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16ad0:	str	x30, [sp, #-80]!
   16ad4:	stp	x26, x25, [sp, #16]
   16ad8:	stp	x24, x23, [sp, #32]
   16adc:	stp	x22, x21, [sp, #48]
   16ae0:	stp	x20, x19, [sp, #64]
   16ae4:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16ae8:	ldr	x20, [x20, #3624]
   16aec:	mov	x21, x1
   16af0:	mov	x19, x0
   16af4:	mov	w1, #0x10                  	// #16
   16af8:	mov	x0, x20
   16afc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16b00:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16b04:	add	x22, x22, #0x630
   16b08:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b0c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b10:	mov	x2, x0
   16b14:	stp	x22, x21, [x0]
   16b18:	add	x1, x1, #0x5d0
   16b1c:	add	x3, x3, #0x5da
   16b20:	mov	x0, x19
   16b24:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16b28:	mov	w1, #0x10                  	// #16
   16b2c:	mov	x0, x20
   16b30:	add	x24, x21, #0x8
   16b34:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16b38:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16b3c:	add	x23, x23, #0x710
   16b40:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b44:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b48:	mov	x2, x0
   16b4c:	stp	x23, x24, [x0]
   16b50:	add	x1, x1, #0x64c
   16b54:	add	x3, x3, #0x665
   16b58:	mov	x0, x19
   16b5c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16b60:	mov	w1, #0x10                  	// #16
   16b64:	mov	x0, x20
   16b68:	add	x24, x21, #0x10
   16b6c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16b70:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b74:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16b78:	mov	x2, x0
   16b7c:	stp	x22, x24, [x0]
   16b80:	add	x1, x1, #0x6bb
   16b84:	add	x3, x3, #0x6cb
   16b88:	mov	x0, x19
   16b8c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16b90:	mov	w1, #0x10                  	// #16
   16b94:	mov	x0, x20
   16b98:	add	x24, x21, #0x18
   16b9c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16ba0:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ba4:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ba8:	mov	x2, x0
   16bac:	stp	x23, x24, [x0]
   16bb0:	add	x1, x1, #0x765
   16bb4:	add	x3, x3, #0x777
   16bb8:	mov	x0, x19
   16bbc:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16bc0:	mov	w1, #0x10                  	// #16
   16bc4:	mov	x0, x20
   16bc8:	add	x24, x21, #0x20
   16bcc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16bd0:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16bd4:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16bd8:	mov	x2, x0
   16bdc:	stp	x22, x24, [x0]
   16be0:	add	x1, x1, #0x7ac
   16be4:	add	x3, x3, #0x7c1
   16be8:	mov	x0, x19
   16bec:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16bf0:	mov	w1, #0x10                  	// #16
   16bf4:	mov	x0, x20
   16bf8:	add	x24, x21, #0x21
   16bfc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16c00:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c04:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c08:	mov	x2, x0
   16c0c:	stp	x22, x24, [x0]
   16c10:	add	x1, x1, #0x815
   16c14:	add	x3, x3, #0x82a
   16c18:	mov	x0, x19
   16c1c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16c20:	mov	w1, #0x10                  	// #16
   16c24:	mov	x0, x20
   16c28:	add	x24, x21, #0x22
   16c2c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16c30:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c34:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c38:	mov	x2, x0
   16c3c:	stp	x22, x24, [x0]
   16c40:	add	x1, x1, #0x873
   16c44:	add	x3, x3, #0x889
   16c48:	mov	x0, x19
   16c4c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16c50:	mov	w1, #0x10                  	// #16
   16c54:	mov	x0, x20
   16c58:	add	x24, x21, #0x23
   16c5c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16c60:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c64:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c68:	mov	x2, x0
   16c6c:	stp	x22, x24, [x0]
   16c70:	add	x1, x1, #0x8d1
   16c74:	add	x3, x3, #0x8de
   16c78:	mov	x0, x19
   16c7c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16c80:	mov	w1, #0x10                  	// #16
   16c84:	mov	x0, x20
   16c88:	add	x25, x21, #0x24
   16c8c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16c90:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16c94:	add	x24, x24, #0x650
   16c98:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16c9c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ca0:	mov	x2, x0
   16ca4:	stp	x24, x25, [x0]
   16ca8:	add	x1, x1, #0x903
   16cac:	add	x3, x3, #0x917
   16cb0:	mov	x0, x19
   16cb4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16cb8:	mov	w1, #0x10                  	// #16
   16cbc:	mov	x0, x20
   16cc0:	add	x25, x21, #0x28
   16cc4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16cc8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ccc:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16cd0:	mov	x2, x0
   16cd4:	stp	x23, x25, [x0]
   16cd8:	add	x1, x1, #0x959
   16cdc:	add	x3, x3, #0x962
   16ce0:	mov	x0, x19
   16ce4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16ce8:	mov	w1, #0x10                  	// #16
   16cec:	mov	x0, x20
   16cf0:	add	x25, x21, #0x30
   16cf4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16cf8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16cfc:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d00:	mov	x2, x0
   16d04:	stp	x22, x25, [x0]
   16d08:	add	x1, x1, #0x9c7
   16d0c:	add	x3, x3, #0x9d4
   16d10:	mov	x0, x19
   16d14:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16d18:	mov	w1, #0x10                  	// #16
   16d1c:	mov	x0, x20
   16d20:	add	x25, x21, #0x31
   16d24:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16d28:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d2c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d30:	mov	x2, x0
   16d34:	stp	x22, x25, [x0]
   16d38:	add	x1, x1, #0xa48
   16d3c:	add	x3, x3, #0xa56
   16d40:	mov	x0, x19
   16d44:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16d48:	mov	w1, #0x10                  	// #16
   16d4c:	mov	x0, x20
   16d50:	add	x25, x21, #0x34
   16d54:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16d58:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d5c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d60:	mov	x2, x0
   16d64:	stp	x24, x25, [x0]
   16d68:	add	x1, x1, #0xaa2
   16d6c:	add	x3, x3, #0xaac
   16d70:	mov	x0, x19
   16d74:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16d78:	mov	w1, #0x10                  	// #16
   16d7c:	mov	x0, x20
   16d80:	add	x25, x21, #0x38
   16d84:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16d88:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d8c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16d90:	mov	x2, x0
   16d94:	stp	x22, x25, [x0]
   16d98:	add	x1, x1, #0xaf1
   16d9c:	add	x3, x3, #0xafb
   16da0:	mov	x0, x19
   16da4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16da8:	mov	w1, #0x10                  	// #16
   16dac:	mov	x0, x20
   16db0:	add	x25, x21, #0x39
   16db4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16db8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16dbc:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16dc0:	mov	x2, x0
   16dc4:	stp	x22, x25, [x0]
   16dc8:	add	x1, x1, #0xb68
   16dcc:	add	x3, x3, #0xb75
   16dd0:	mov	x0, x19
   16dd4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16dd8:	mov	w1, #0x10                  	// #16
   16ddc:	mov	x0, x20
   16de0:	add	x25, x21, #0x3a
   16de4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16de8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16dec:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16df0:	mov	x2, x0
   16df4:	stp	x22, x25, [x0]
   16df8:	add	x1, x1, #0xb93
   16dfc:	add	x3, x3, #0xba6
   16e00:	mov	x0, x19
   16e04:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16e08:	mov	w1, #0x10                  	// #16
   16e0c:	mov	x0, x20
   16e10:	add	x25, x21, #0x3b
   16e14:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16e18:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e1c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e20:	mov	x2, x0
   16e24:	stp	x22, x25, [x0]
   16e28:	add	x1, x1, #0xc45
   16e2c:	add	x3, x3, #0xc5f
   16e30:	mov	x0, x19
   16e34:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16e38:	mov	w1, #0x10                  	// #16
   16e3c:	mov	x0, x20
   16e40:	add	x25, x21, #0x3c
   16e44:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16e48:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e4c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e50:	mov	x2, x0
   16e54:	stp	x22, x25, [x0]
   16e58:	add	x1, x1, #0xcab
   16e5c:	add	x3, x3, #0xcb9
   16e60:	mov	x0, x19
   16e64:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16e68:	mov	w1, #0x10                  	// #16
   16e6c:	mov	x0, x20
   16e70:	add	x25, x21, #0x40
   16e74:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16e78:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e7c:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16e80:	mov	x2, x0
   16e84:	stp	x24, x25, [x0]
   16e88:	add	x1, x1, #0xd02
   16e8c:	add	x3, x3, #0xd13
   16e90:	mov	x0, x19
   16e94:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16e98:	mov	w1, #0x10                  	// #16
   16e9c:	mov	x0, x20
   16ea0:	add	x25, x21, #0x44
   16ea4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16ea8:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16eac:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16eb0:	mov	x2, x0
   16eb4:	stp	x22, x25, [x0]
   16eb8:	add	x1, x1, #0xd77
   16ebc:	add	x3, x3, #0xd84
   16ec0:	mov	x0, x19
   16ec4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16ec8:	mov	w1, #0x10                  	// #16
   16ecc:	mov	x0, x20
   16ed0:	add	x26, x21, #0x48
   16ed4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16ed8:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   16edc:	add	x25, x25, #0x730
   16ee0:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ee4:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16ee8:	mov	x2, x0
   16eec:	stp	x25, x26, [x0]
   16ef0:	add	x1, x1, #0xd9c
   16ef4:	add	x3, x3, #0xda8
   16ef8:	mov	x0, x19
   16efc:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16f00:	mov	w1, #0x10                  	// #16
   16f04:	mov	x0, x20
   16f08:	add	x26, x21, #0x4c
   16f0c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16f10:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16f14:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16f18:	mov	x2, x0
   16f1c:	stp	x25, x26, [x0]
   16f20:	add	x1, x1, #0xe63
   16f24:	add	x3, x3, #0xe71
   16f28:	mov	x0, x19
   16f2c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16f30:	mov	w1, #0x10                  	// #16
   16f34:	mov	x0, x20
   16f38:	add	x26, x21, #0x50
   16f3c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16f40:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16f44:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16f48:	mov	x2, x0
   16f4c:	stp	x25, x26, [x0]
   16f50:	add	x1, x1, #0xf2b
   16f54:	add	x3, x3, #0xf38
   16f58:	mov	x0, x19
   16f5c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16f60:	mov	w1, #0x10                  	// #16
   16f64:	mov	x0, x20
   16f68:	add	x26, x21, #0x54
   16f6c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16f70:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   16f74:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   16f78:	mov	x2, x0
   16f7c:	stp	x25, x26, [x0]
   16f80:	add	x1, x1, #0xff3
   16f84:	add	x3, x3, #0x1
   16f88:	mov	x0, x19
   16f8c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16f90:	mov	w1, #0x10                  	// #16
   16f94:	mov	x0, x20
   16f98:	add	x26, x21, #0x58
   16f9c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16fa0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   16fa4:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   16fa8:	mov	x2, x0
   16fac:	stp	x25, x26, [x0]
   16fb0:	add	x1, x1, #0xbb
   16fb4:	add	x3, x3, #0xca
   16fb8:	mov	x0, x19
   16fbc:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16fc0:	mov	w1, #0x10                  	// #16
   16fc4:	mov	x0, x20
   16fc8:	add	x26, x21, #0x5c
   16fcc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   16fd0:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   16fd4:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   16fd8:	mov	x2, x0
   16fdc:	stp	x25, x26, [x0]
   16fe0:	add	x1, x1, #0x185
   16fe4:	add	x3, x3, #0x193
   16fe8:	mov	x0, x19
   16fec:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   16ff0:	mov	w1, #0x10                  	// #16
   16ff4:	mov	x0, x20
   16ff8:	add	x25, x21, #0x60
   16ffc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17000:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17004:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17008:	mov	x2, x0
   1700c:	stp	x22, x25, [x0]
   17010:	add	x1, x1, #0x24d
   17014:	add	x3, x3, #0x265
   17018:	mov	x0, x19
   1701c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17020:	mov	w1, #0x10                  	// #16
   17024:	mov	x0, x20
   17028:	add	x25, x21, #0x61
   1702c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17030:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17034:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17038:	mov	x2, x0
   1703c:	stp	x22, x25, [x0]
   17040:	add	x1, x1, #0x2cf
   17044:	add	x3, x3, #0x2df
   17048:	mov	x0, x19
   1704c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17050:	mov	w1, #0x10                  	// #16
   17054:	mov	x0, x20
   17058:	add	x25, x21, #0x62
   1705c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17060:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17064:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17068:	mov	x2, x0
   1706c:	stp	x22, x25, [x0]
   17070:	add	x1, x1, #0x311
   17074:	add	x3, x3, #0x322
   17078:	mov	x0, x19
   1707c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17080:	mov	w1, #0x10                  	// #16
   17084:	mov	x0, x20
   17088:	add	x26, x21, #0x68
   1708c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17090:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   17094:	add	x25, x25, #0x670
   17098:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1709c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   170a0:	mov	x2, x0
   170a4:	stp	x25, x26, [x0]
   170a8:	add	x1, x1, #0x349
   170ac:	add	x3, x3, #0x365
   170b0:	mov	x0, x19
   170b4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   170b8:	mov	w1, #0x10                  	// #16
   170bc:	mov	x0, x20
   170c0:	add	x26, x21, #0x70
   170c4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   170c8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   170cc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   170d0:	mov	x2, x0
   170d4:	stp	x23, x26, [x0]
   170d8:	add	x1, x1, #0x3da
   170dc:	add	x3, x3, #0x3e0
   170e0:	mov	x0, x19
   170e4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   170e8:	mov	w1, #0x10                  	// #16
   170ec:	mov	x0, x20
   170f0:	add	x26, x21, #0x78
   170f4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   170f8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   170fc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17100:	mov	x2, x0
   17104:	stp	x22, x26, [x0]
   17108:	add	x1, x1, #0x407
   1710c:	add	x3, x3, #0x41b
   17110:	mov	x0, x19
   17114:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17118:	mov	w1, #0x10                  	// #16
   1711c:	mov	x0, x20
   17120:	add	x26, x21, #0x79
   17124:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17128:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1712c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17130:	mov	x2, x0
   17134:	stp	x22, x26, [x0]
   17138:	add	x1, x1, #0x45f
   1713c:	add	x3, x3, #0x476
   17140:	mov	x0, x19
   17144:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17148:	mov	w1, #0x10                  	// #16
   1714c:	mov	x0, x20
   17150:	add	x26, x21, #0x7a
   17154:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17158:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1715c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17160:	mov	x2, x0
   17164:	stp	x22, x26, [x0]
   17168:	add	x1, x1, #0x490
   1716c:	add	x3, x3, #0x495
   17170:	mov	x0, x19
   17174:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17178:	mov	w1, #0x10                  	// #16
   1717c:	mov	x0, x20
   17180:	add	x26, x21, #0x80
   17184:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17188:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1718c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17190:	mov	x2, x0
   17194:	stp	x25, x26, [x0]
   17198:	add	x1, x1, #0xf60
   1719c:	add	x3, x3, #0x4b2
   171a0:	mov	x0, x19
   171a4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   171a8:	mov	w1, #0x10                  	// #16
   171ac:	mov	x0, x20
   171b0:	add	x26, x21, #0x88
   171b4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   171b8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   171bc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   171c0:	mov	x2, x0
   171c4:	stp	x25, x26, [x0]
   171c8:	add	x1, x1, #0x528
   171cc:	add	x3, x3, #0x53a
   171d0:	mov	x0, x19
   171d4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   171d8:	mov	w1, #0x10                  	// #16
   171dc:	mov	x0, x20
   171e0:	add	x26, x21, #0x90
   171e4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   171e8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   171ec:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   171f0:	mov	x2, x0
   171f4:	stp	x25, x26, [x0]
   171f8:	add	x1, x1, #0x5d3
   171fc:	add	x3, x3, #0x5e5
   17200:	mov	x0, x19
   17204:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17208:	mov	w1, #0x10                  	// #16
   1720c:	mov	x0, x20
   17210:	add	x26, x21, #0x98
   17214:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17218:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1721c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17220:	mov	x2, x0
   17224:	stp	x25, x26, [x0]
   17228:	add	x1, x1, #0x745
   1722c:	add	x3, x3, #0x75c
   17230:	mov	x0, x19
   17234:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17238:	mov	w1, #0x10                  	// #16
   1723c:	mov	x0, x20
   17240:	add	x25, x21, #0xa0
   17244:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17248:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1724c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17250:	mov	x2, x0
   17254:	stp	x22, x25, [x0]
   17258:	add	x1, x1, #0x7d3
   1725c:	add	x3, x3, #0x7e0
   17260:	mov	x0, x19
   17264:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17268:	mov	w1, #0x10                  	// #16
   1726c:	mov	x0, x20
   17270:	add	x25, x21, #0xa4
   17274:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17278:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1727c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17280:	mov	x2, x0
   17284:	stp	x24, x25, [x0]
   17288:	add	x1, x1, #0x806
   1728c:	add	x3, x3, #0x82a
   17290:	mov	x0, x19
   17294:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17298:	mov	w1, #0x10                  	// #16
   1729c:	mov	x0, x20
   172a0:	add	x25, x21, #0xa8
   172a4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   172a8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   172ac:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   172b0:	mov	x2, x0
   172b4:	stp	x22, x25, [x0]
   172b8:	add	x1, x1, #0x8f8
   172bc:	add	x3, x3, #0x910
   172c0:	mov	x0, x19
   172c4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   172c8:	mov	w1, #0x10                  	// #16
   172cc:	mov	x0, x20
   172d0:	add	x25, x21, #0xa9
   172d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   172d8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   172dc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   172e0:	mov	x2, x0
   172e4:	stp	x22, x25, [x0]
   172e8:	add	x1, x1, #0x969
   172ec:	add	x3, x3, #0x972
   172f0:	mov	x0, x19
   172f4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   172f8:	mov	w1, #0x10                  	// #16
   172fc:	mov	x0, x20
   17300:	add	x25, x21, #0xb0
   17304:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17308:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1730c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17310:	mov	x2, x0
   17314:	stp	x23, x25, [x0]
   17318:	add	x1, x1, #0x9f1
   1731c:	add	x3, x3, #0x9fe
   17320:	mov	x0, x19
   17324:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17328:	mov	w1, #0x10                  	// #16
   1732c:	mov	x0, x20
   17330:	add	x25, x21, #0xb8
   17334:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17338:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1733c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17340:	mov	x2, x0
   17344:	stp	x22, x25, [x0]
   17348:	add	x1, x1, #0xa46
   1734c:	add	x3, x3, #0xa59
   17350:	mov	x0, x19
   17354:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17358:	mov	w1, #0x10                  	// #16
   1735c:	mov	x0, x20
   17360:	add	x25, x21, #0xb9
   17364:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17368:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1736c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17370:	mov	x2, x0
   17374:	stp	x22, x25, [x0]
   17378:	add	x1, x1, #0xabb
   1737c:	add	x3, x3, #0xace
   17380:	mov	x0, x19
   17384:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17388:	mov	w1, #0x10                  	// #16
   1738c:	mov	x0, x20
   17390:	add	x25, x21, #0xba
   17394:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17398:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1739c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   173a0:	mov	x2, x0
   173a4:	stp	x22, x25, [x0]
   173a8:	add	x1, x1, #0xaf2
   173ac:	add	x3, x3, #0xb03
   173b0:	mov	x0, x19
   173b4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   173b8:	mov	w1, #0x10                  	// #16
   173bc:	mov	x0, x20
   173c0:	add	x25, x21, #0xbb
   173c4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   173c8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   173cc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   173d0:	mov	x2, x0
   173d4:	stp	x22, x25, [x0]
   173d8:	add	x1, x1, #0xbd3
   173dc:	add	x3, x3, #0xbe5
   173e0:	mov	x0, x19
   173e4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   173e8:	mov	w1, #0x10                  	// #16
   173ec:	mov	x0, x20
   173f0:	add	x25, x21, #0xbc
   173f4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   173f8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   173fc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17400:	mov	x2, x0
   17404:	stp	x22, x25, [x0]
   17408:	add	x1, x1, #0xc2b
   1740c:	add	x3, x3, #0xc43
   17410:	mov	x0, x19
   17414:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17418:	mov	w1, #0x10                  	// #16
   1741c:	mov	x0, x20
   17420:	add	x25, x21, #0xbd
   17424:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17428:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1742c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17430:	mov	x2, x0
   17434:	stp	x22, x25, [x0]
   17438:	add	x1, x1, #0xc7a
   1743c:	add	x3, x3, #0xc8d
   17440:	mov	x0, x19
   17444:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17448:	mov	w1, #0x10                  	// #16
   1744c:	mov	x0, x20
   17450:	add	x25, x21, #0xc0
   17454:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17458:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1745c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17460:	mov	x2, x0
   17464:	stp	x24, x25, [x0]
   17468:	add	x1, x1, #0xcd1
   1746c:	add	x3, x3, #0xce4
   17470:	mov	x0, x19
   17474:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17478:	mov	w1, #0x10                  	// #16
   1747c:	mov	x0, x20
   17480:	add	x25, x21, #0xc8
   17484:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17488:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1748c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17490:	mov	x2, x0
   17494:	stp	x23, x25, [x0]
   17498:	add	x1, x1, #0xdb2
   1749c:	add	x3, x3, #0xdc5
   174a0:	mov	x0, x19
   174a4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   174a8:	mov	w1, #0x10                  	// #16
   174ac:	mov	x0, x20
   174b0:	add	x25, x21, #0xd0
   174b4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   174b8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   174bc:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   174c0:	mov	x2, x0
   174c4:	stp	x22, x25, [x0]
   174c8:	add	x1, x1, #0xe52
   174cc:	add	x3, x3, #0xe6b
   174d0:	mov	x0, x19
   174d4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   174d8:	mov	w1, #0x10                  	// #16
   174dc:	mov	x0, x20
   174e0:	add	x25, x21, #0xd1
   174e4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   174e8:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   174ec:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   174f0:	mov	x2, x0
   174f4:	stp	x22, x25, [x0]
   174f8:	add	x1, x1, #0xea2
   174fc:	add	x3, x3, #0xeb7
   17500:	mov	x0, x19
   17504:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17508:	mov	w1, #0x10                  	// #16
   1750c:	mov	x0, x20
   17510:	add	x25, x21, #0xd2
   17514:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17518:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1751c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17520:	mov	x2, x0
   17524:	stp	x22, x25, [x0]
   17528:	add	x1, x1, #0xef7
   1752c:	add	x3, x3, #0xf08
   17530:	mov	x0, x19
   17534:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17538:	mov	w1, #0x10                  	// #16
   1753c:	mov	x0, x20
   17540:	add	x25, x21, #0xd3
   17544:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17548:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1754c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17550:	mov	x2, x0
   17554:	stp	x22, x25, [x0]
   17558:	add	x1, x1, #0xf5e
   1755c:	add	x3, x3, #0xf6f
   17560:	mov	x0, x19
   17564:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17568:	mov	w1, #0x10                  	// #16
   1756c:	mov	x0, x20
   17570:	add	x25, x21, #0xd4
   17574:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17578:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1757c:	adrp	x3, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   17580:	mov	x2, x0
   17584:	stp	x22, x25, [x0]
   17588:	add	x1, x1, #0xfc1
   1758c:	add	x3, x3, #0xfd2
   17590:	mov	x0, x19
   17594:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17598:	mov	w1, #0x10                  	// #16
   1759c:	mov	x0, x20
   175a0:	add	x25, x21, #0xd5
   175a4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   175a8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   175ac:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   175b0:	mov	x2, x0
   175b4:	stp	x22, x25, [x0]
   175b8:	add	x1, x1, #0x1d
   175bc:	add	x3, x3, #0x2f
   175c0:	mov	x0, x19
   175c4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   175c8:	mov	w1, #0x10                  	// #16
   175cc:	mov	x0, x20
   175d0:	add	x25, x21, #0xd6
   175d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   175d8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   175dc:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   175e0:	mov	x2, x0
   175e4:	stp	x22, x25, [x0]
   175e8:	add	x1, x1, #0x76
   175ec:	add	x3, x3, #0x87
   175f0:	mov	x0, x19
   175f4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   175f8:	mov	w1, #0x10                  	// #16
   175fc:	mov	x0, x20
   17600:	add	x25, x21, #0xd7
   17604:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17608:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1760c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17610:	mov	x2, x0
   17614:	stp	x22, x25, [x0]
   17618:	add	x1, x1, #0xda
   1761c:	add	x3, x3, #0xec
   17620:	mov	x0, x19
   17624:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17628:	mov	w1, #0x10                  	// #16
   1762c:	mov	x0, x20
   17630:	add	x25, x21, #0xd8
   17634:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17638:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1763c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17640:	mov	x2, x0
   17644:	stp	x22, x25, [x0]
   17648:	add	x1, x1, #0x134
   1764c:	add	x3, x3, #0x145
   17650:	mov	x0, x19
   17654:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17658:	mov	w1, #0x10                  	// #16
   1765c:	mov	x0, x20
   17660:	add	x25, x21, #0xd9
   17664:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17668:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1766c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17670:	mov	x2, x0
   17674:	stp	x22, x25, [x0]
   17678:	add	x1, x1, #0x1a4
   1767c:	add	x3, x3, #0x1b5
   17680:	mov	x0, x19
   17684:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17688:	mov	w1, #0x10                  	// #16
   1768c:	mov	x0, x20
   17690:	add	x25, x21, #0xda
   17694:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17698:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1769c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   176a0:	mov	x2, x0
   176a4:	stp	x22, x25, [x0]
   176a8:	add	x1, x1, #0x1fb
   176ac:	add	x3, x3, #0x209
   176b0:	mov	x0, x19
   176b4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   176b8:	mov	w1, #0x10                  	// #16
   176bc:	mov	x0, x20
   176c0:	add	x25, x21, #0xdb
   176c4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   176c8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   176cc:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   176d0:	mov	x2, x0
   176d4:	stp	x22, x25, [x0]
   176d8:	add	x1, x1, #0x261
   176dc:	add	x3, x3, #0x272
   176e0:	mov	x0, x19
   176e4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   176e8:	mov	w1, #0x10                  	// #16
   176ec:	mov	x0, x20
   176f0:	add	x25, x21, #0xdc
   176f4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   176f8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   176fc:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17700:	mov	x2, x0
   17704:	stp	x22, x25, [x0]
   17708:	add	x1, x1, #0x2ab
   1770c:	add	x3, x3, #0x2bc
   17710:	mov	x0, x19
   17714:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17718:	mov	w1, #0x10                  	// #16
   1771c:	mov	x0, x20
   17720:	add	x25, x21, #0xdd
   17724:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17728:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1772c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17730:	mov	x2, x0
   17734:	stp	x22, x25, [x0]
   17738:	add	x1, x1, #0x313
   1773c:	add	x3, x3, #0x322
   17740:	mov	x0, x19
   17744:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17748:	mov	w1, #0x10                  	// #16
   1774c:	mov	x0, x20
   17750:	add	x25, x21, #0xde
   17754:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17758:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1775c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17760:	mov	x2, x0
   17764:	stp	x22, x25, [x0]
   17768:	add	x1, x1, #0x368
   1776c:	add	x3, x3, #0x377
   17770:	mov	x0, x19
   17774:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17778:	mov	w1, #0x10                  	// #16
   1777c:	mov	x0, x20
   17780:	add	x25, x21, #0xdf
   17784:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17788:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1778c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17790:	mov	x2, x0
   17794:	stp	x22, x25, [x0]
   17798:	add	x1, x1, #0x3bd
   1779c:	add	x3, x3, #0x3d0
   177a0:	mov	x0, x19
   177a4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   177a8:	mov	w1, #0x10                  	// #16
   177ac:	mov	x0, x20
   177b0:	add	x25, x21, #0xe0
   177b4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   177b8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   177bc:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   177c0:	mov	x2, x0
   177c4:	stp	x24, x25, [x0]
   177c8:	add	x1, x1, #0x420
   177cc:	add	x3, x3, #0x429
   177d0:	mov	x0, x19
   177d4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   177d8:	mov	w1, #0x10                  	// #16
   177dc:	mov	x0, x20
   177e0:	add	x24, x21, #0xe4
   177e4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   177e8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   177ec:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   177f0:	mov	x2, x0
   177f4:	stp	x22, x24, [x0]
   177f8:	add	x1, x1, #0x465
   177fc:	add	x3, x3, #0x474
   17800:	mov	x0, x19
   17804:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17808:	mov	w1, #0x10                  	// #16
   1780c:	mov	x0, x20
   17810:	add	x24, x21, #0xe5
   17814:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17818:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1781c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17820:	mov	x2, x0
   17824:	stp	x22, x24, [x0]
   17828:	add	x1, x1, #0x4c7
   1782c:	add	x3, x3, #0x4da
   17830:	mov	x0, x19
   17834:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17838:	mov	w1, #0x10                  	// #16
   1783c:	mov	x0, x20
   17840:	add	x24, x21, #0xe6
   17844:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17848:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1784c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17850:	mov	x2, x0
   17854:	stp	x22, x24, [x0]
   17858:	add	x1, x1, #0x53b
   1785c:	add	x3, x3, #0x549
   17860:	mov	x0, x19
   17864:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17868:	mov	w1, #0x10                  	// #16
   1786c:	mov	x0, x20
   17870:	add	x24, x21, #0xe7
   17874:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17878:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1787c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17880:	mov	x2, x0
   17884:	stp	x22, x24, [x0]
   17888:	add	x1, x1, #0x572
   1788c:	add	x3, x3, #0x582
   17890:	mov	x0, x19
   17894:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17898:	mov	w1, #0x10                  	// #16
   1789c:	mov	x0, x20
   178a0:	add	x24, x21, #0xe8
   178a4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   178a8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   178ac:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   178b0:	mov	x2, x0
   178b4:	stp	x23, x24, [x0]
   178b8:	add	x1, x1, #0x5a1
   178bc:	add	x3, x3, #0x5ad
   178c0:	mov	x0, x19
   178c4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   178c8:	mov	w1, #0x10                  	// #16
   178cc:	mov	x0, x20
   178d0:	add	x23, x21, #0xf0
   178d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   178d8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   178dc:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   178e0:	mov	x2, x0
   178e4:	stp	x22, x23, [x0]
   178e8:	add	x1, x1, #0x5c3
   178ec:	add	x3, x3, #0x5da
   178f0:	mov	x0, x19
   178f4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   178f8:	mov	w1, #0x10                  	// #16
   178fc:	mov	x0, x20
   17900:	add	x23, x21, #0xf1
   17904:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17908:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1790c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17910:	mov	x2, x0
   17914:	stp	x22, x23, [x0]
   17918:	add	x1, x1, #0x61e
   1791c:	add	x3, x3, #0x62d
   17920:	mov	x0, x19
   17924:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17928:	mov	w1, #0x10                  	// #16
   1792c:	mov	x0, x20
   17930:	add	x23, x21, #0xf2
   17934:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17938:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1793c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17940:	mov	x2, x0
   17944:	stp	x22, x23, [x0]
   17948:	add	x1, x1, #0x686
   1794c:	add	x3, x3, #0x698
   17950:	mov	x0, x19
   17954:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17958:	mov	w1, #0x10                  	// #16
   1795c:	mov	x0, x20
   17960:	add	x21, x21, #0xf3
   17964:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17968:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1796c:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17970:	mov	x2, x0
   17974:	stp	x22, x21, [x0]
   17978:	add	x1, x1, #0x6e9
   1797c:	add	x3, x3, #0x708
   17980:	mov	x0, x19
   17984:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17988:	mov	w1, #0x20                  	// #32
   1798c:	mov	x0, x20
   17990:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17994:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   17998:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   1799c:	add	x21, x21, #0x6f0
   179a0:	add	x22, x22, #0xcf
   179a4:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   179a8:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   179ac:	mov	x2, x0
   179b0:	strb	wzr, [x0, #16]
   179b4:	stp	x21, x19, [x0]
   179b8:	str	x22, [x0, #24]
   179bc:	add	x1, x1, #0x55b
   179c0:	add	x3, x3, #0x563
   179c4:	mov	x0, x19
   179c8:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   179cc:	mov	w1, #0x20                  	// #32
   179d0:	mov	x0, x20
   179d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   179d8:	mov	w8, #0x1                   	// #1
   179dc:	stp	x21, x19, [x0]
   179e0:	strb	w8, [x0, #16]
   179e4:	str	x22, [x0, #24]
   179e8:	mov	x2, x0
   179ec:	mov	x0, x19
   179f0:	ldp	x20, x19, [sp, #64]
   179f4:	ldp	x22, x21, [sp, #48]
   179f8:	ldp	x24, x23, [sp, #32]
   179fc:	ldp	x26, x25, [sp, #16]
   17a00:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   17a04:	adrp	x3, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   17a08:	add	x1, x1, #0x589
   17a0c:	add	x3, x3, #0x59b
   17a10:	ldr	x30, [sp], #80
   17a14:	b	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   17a18:	ldrb	w8, [x0, #231]
   17a1c:	ldrb	w9, [x0, #169]
   17a20:	adrp	x11, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   17a24:	ldr	w10, [x0, #52]
   17a28:	ldr	x11, [x11, #3808]
   17a2c:	orr	w8, w9, w8
   17a30:	strb	w8, [x0, #169]
   17a34:	str	w10, [x11]
   17a38:	ret
   17a3c:	stp	x30, x21, [sp, #-32]!
   17a40:	stp	x20, x19, [sp, #16]
   17a44:	mov	x20, x1
   17a48:	mov	x19, x0
   17a4c:	str	x1, [x0, #24]
   17a50:	mov	w1, #0x25                  	// #37
   17a54:	mov	x0, x20
   17a58:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   17a5c:	cbz	x0, 17ab8 <__sanitizer_set_report_fd@@Base+0x1474>
   17a60:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17a64:	add	x1, x1, #0x74b
   17a68:	mov	w0, #0x1000                	// #4096
   17a6c:	mov	w2, wzr
   17a70:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   17a74:	mov	x21, x0
   17a78:	mov	w2, #0x1000                	// #4096
   17a7c:	mov	x0, x20
   17a80:	mov	x1, x21
   17a84:	bl	16764 <__sanitizer_set_report_fd@@Base+0x120>
   17a88:	ldr	x0, [x19, #8]
   17a8c:	ldrb	w2, [x19, #16]
   17a90:	mov	x1, x21
   17a94:	bl	1851c <__sanitizer_set_report_fd@@Base+0x1ed8>
   17a98:	mov	w19, w0
   17a9c:	mov	w1, #0x1000                	// #4096
   17aa0:	mov	x0, x21
   17aa4:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   17aa8:	and	w0, w19, #0x1
   17aac:	ldp	x20, x19, [sp, #16]
   17ab0:	ldp	x30, x21, [sp], #32
   17ab4:	ret
   17ab8:	ldr	x0, [x19, #8]
   17abc:	ldrb	w2, [x19, #16]
   17ac0:	mov	x1, x20
   17ac4:	ldp	x20, x19, [sp, #16]
   17ac8:	ldp	x30, x21, [sp], #32
   17acc:	b	1851c <__sanitizer_set_report_fd@@Base+0x1ed8>
   17ad0:	stp	x30, x19, [sp, #-16]!
   17ad4:	ldr	x3, [x0, #24]
   17ad8:	mov	x19, x2
   17adc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   17ae0:	mov	x0, x1
   17ae4:	add	x2, x2, #0xba0
   17ae8:	mov	x1, x19
   17aec:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   17af0:	sxtw	x8, w0
   17af4:	cmp	x8, x19
   17af8:	cset	w0, cc  // cc = lo, ul, last
   17afc:	ldp	x30, x19, [sp], #16
   17b00:	ret
   17b04:	ldr	x8, [x0, #8]
   17b08:	mov	w0, #0x1                   	// #1
   17b0c:	str	x1, [x8]
   17b10:	ret
   17b14:	stp	x30, x19, [sp, #-16]!
   17b18:	ldr	x8, [x0, #8]
   17b1c:	mov	x19, x2
   17b20:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   17b24:	mov	x0, x1
   17b28:	ldr	x3, [x8]
   17b2c:	add	x2, x2, #0xba0
   17b30:	mov	x1, x19
   17b34:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   17b38:	sxtw	x8, w0
   17b3c:	cmp	x8, x19
   17b40:	cset	w0, cc  // cc = lo, ul, last
   17b44:	ldp	x30, x19, [sp], #16
   17b48:	ret
   17b4c:	str	x30, [sp, #-32]!
   17b50:	stp	x20, x19, [sp, #16]
   17b54:	mov	x20, x1
   17b58:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   17b5c:	mov	x19, x0
   17b60:	add	x1, x1, #0x3ed
   17b64:	mov	x0, x20
   17b68:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17b6c:	cbz	w0, 17c1c <__sanitizer_set_report_fd@@Base+0x15d8>
   17b70:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   17b74:	add	x1, x1, #0x821
   17b78:	mov	x0, x20
   17b7c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17b80:	cbz	w0, 17c1c <__sanitizer_set_report_fd@@Base+0x15d8>
   17b84:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   17b88:	add	x1, x1, #0x5dc
   17b8c:	mov	x0, x20
   17b90:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17b94:	cbz	w0, 17c1c <__sanitizer_set_report_fd@@Base+0x15d8>
   17b98:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   17b9c:	add	x1, x1, #0x6d7
   17ba0:	mov	x0, x20
   17ba4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17ba8:	cbz	w0, 17c38 <__sanitizer_set_report_fd@@Base+0x15f4>
   17bac:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   17bb0:	add	x1, x1, #0x824
   17bb4:	mov	x0, x20
   17bb8:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17bbc:	cbz	w0, 17c38 <__sanitizer_set_report_fd@@Base+0x15f4>
   17bc0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   17bc4:	add	x1, x1, #0x5cc
   17bc8:	mov	x0, x20
   17bcc:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17bd0:	cbz	w0, 17c38 <__sanitizer_set_report_fd@@Base+0x15f4>
   17bd4:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   17bd8:	add	x1, x1, #0xbf9
   17bdc:	mov	x0, x20
   17be0:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17be4:	cbz	w0, 17c40 <__sanitizer_set_report_fd@@Base+0x15fc>
   17be8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17bec:	add	x1, x1, #0x75e
   17bf0:	mov	x0, x20
   17bf4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   17bf8:	cbz	w0, 17c40 <__sanitizer_set_report_fd@@Base+0x15fc>
   17bfc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17c00:	add	x0, x0, #0x768
   17c04:	mov	x1, x20
   17c08:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17c0c:	mov	w0, wzr
   17c10:	ldp	x20, x19, [sp, #16]
   17c14:	ldr	x30, [sp], #32
   17c18:	ret
   17c1c:	mov	w8, wzr
   17c20:	ldr	x9, [x19, #8]
   17c24:	mov	w0, #0x1                   	// #1
   17c28:	str	w8, [x9]
   17c2c:	ldp	x20, x19, [sp, #16]
   17c30:	ldr	x30, [sp], #32
   17c34:	ret
   17c38:	mov	w8, #0x1                   	// #1
   17c3c:	b	17c20 <__sanitizer_set_report_fd@@Base+0x15dc>
   17c40:	ldr	x8, [x19, #8]
   17c44:	mov	w9, #0x2                   	// #2
   17c48:	mov	w0, #0x1                   	// #1
   17c4c:	str	w9, [x8]
   17c50:	ldp	x20, x19, [sp, #16]
   17c54:	ldr	x30, [sp], #32
   17c58:	ret
   17c5c:	stp	x30, x19, [sp, #-16]!
   17c60:	ldr	x8, [x0, #8]
   17c64:	mov	x19, x2
   17c68:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   17c6c:	mov	x0, x1
   17c70:	ldr	w3, [x8]
   17c74:	add	x2, x2, #0x268
   17c78:	mov	x1, x19
   17c7c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   17c80:	sxtw	x8, w0
   17c84:	cmp	x8, x19
   17c88:	cset	w0, cc  // cc = lo, ul, last
   17c8c:	ldp	x30, x19, [sp], #16
   17c90:	ret
   17c94:	str	x30, [sp, #-48]!
   17c98:	stp	x22, x21, [sp, #16]
   17c9c:	stp	x20, x19, [sp, #32]
   17ca0:	adrp	x20, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   17ca4:	ldr	w1, [x20, #1592]
   17ca8:	cbz	w1, 17cf8 <__sanitizer_set_report_fd@@Base+0x16b4>
   17cac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17cb0:	add	x0, x0, #0x924
   17cb4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17cb8:	ldr	w8, [x20, #1592]
   17cbc:	cmp	w8, #0x1
   17cc0:	b.lt	17cf4 <__sanitizer_set_report_fd@@Base+0x16b0>  // b.tstop
   17cc4:	adrp	x22, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   17cc8:	adrp	x19, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17ccc:	mov	x21, xzr
   17cd0:	add	x22, x22, #0x598
   17cd4:	add	x19, x19, #0x94d
   17cd8:	ldr	x1, [x22, x21, lsl #3]
   17cdc:	mov	x0, x19
   17ce0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17ce4:	ldrsw	x8, [x22, #160]
   17ce8:	add	x21, x21, #0x1
   17cec:	cmp	x21, x8
   17cf0:	b.lt	17cd8 <__sanitizer_set_report_fd@@Base+0x1694>  // b.tstop
   17cf4:	str	wzr, [x20, #1592]
   17cf8:	ldp	x20, x19, [sp, #32]
   17cfc:	ldp	x22, x21, [sp, #16]
   17d00:	ldr	x30, [sp], #48
   17d04:	ret
   17d08:	stp	x30, x21, [sp, #-32]!
   17d0c:	stp	x20, x19, [sp, #16]
   17d10:	mov	x19, x1
   17d14:	mov	x0, x1
   17d18:	mov	x1, x2
   17d1c:	bl	18fa8 <__sanitizer_set_report_fd@@Base+0x2964>
   17d20:	mov	x20, x0
   17d24:	add	x1, x0, #0x1
   17d28:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   17d2c:	add	x0, x0, #0x588
   17d30:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17d34:	mov	x1, x19
   17d38:	mov	x2, x20
   17d3c:	mov	x21, x0
   17d40:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   17d44:	strb	wzr, [x21, x20]
   17d48:	ldp	x20, x19, [sp, #16]
   17d4c:	mov	x0, x21
   17d50:	ldp	x30, x21, [sp], #32
   17d54:	ret
   17d58:	sub	sp, sp, #0xc0
   17d5c:	str	x30, [sp, #128]
   17d60:	stp	x24, x23, [sp, #144]
   17d64:	stp	x22, x21, [sp, #160]
   17d68:	stp	x20, x19, [sp, #176]
   17d6c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   17d70:	ldr	x8, [x8, #4024]
   17d74:	mov	x19, x0
   17d78:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17d7c:	add	x0, x0, #0x79e
   17d80:	ldr	x1, [x8]
   17d84:	strb	wzr, [sp, #127]
   17d88:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17d8c:	ldr	w8, [x19, #8]
   17d90:	cmp	w8, #0x1
   17d94:	b.lt	17e14 <__sanitizer_set_report_fd@@Base+0x17d0>  // b.tstop
   17d98:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17d9c:	adrp	x24, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   17da0:	adrp	x20, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17da4:	mov	x21, xzr
   17da8:	mov	x22, xzr
   17dac:	add	x23, x23, #0x83a
   17db0:	add	x24, x24, #0xcf
   17db4:	add	x20, x20, #0x845
   17db8:	ldr	x8, [x19]
   17dbc:	mov	x1, sp
   17dc0:	mov	w2, #0x80                  	// #128
   17dc4:	add	x8, x8, x21
   17dc8:	ldr	x0, [x8, #16]
   17dcc:	ldr	x8, [x0]
   17dd0:	ldr	x8, [x8, #8]
   17dd4:	blr	x8
   17dd8:	ldrb	w3, [sp, #127]
   17ddc:	cbnz	x3, 17e2c <__sanitizer_set_report_fd@@Base+0x17e8>
   17de0:	ldr	x8, [x19]
   17de4:	tst	w0, #0x1
   17de8:	csel	x3, x24, x23, ne  // ne = any
   17dec:	mov	x4, sp
   17df0:	add	x8, x8, x21
   17df4:	ldp	x1, x2, [x8]
   17df8:	mov	x0, x20
   17dfc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17e00:	ldrsw	x8, [x19, #8]
   17e04:	add	x22, x22, #0x1
   17e08:	add	x21, x21, #0x18
   17e0c:	cmp	x22, x8
   17e10:	b.lt	17db8 <__sanitizer_set_report_fd@@Base+0x1774>  // b.tstop
   17e14:	ldp	x20, x19, [sp, #176]
   17e18:	ldp	x22, x21, [sp, #160]
   17e1c:	ldp	x24, x23, [sp, #144]
   17e20:	ldr	x30, [sp, #128]
   17e24:	add	sp, sp, #0xc0
   17e28:	ret
   17e2c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17e30:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17e34:	add	x0, x0, #0x7b7
   17e38:	add	x2, x2, #0x80f
   17e3c:	mov	w1, #0x40                  	// #64
   17e40:	mov	x4, xzr
   17e44:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   17e48:	str	x30, [sp, #-16]!
   17e4c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   17e50:	ldr	x8, [x8, #4024]
   17e54:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   17e58:	mov	x2, x1
   17e5c:	add	x0, x0, #0x867
   17e60:	ldr	x8, [x8]
   17e64:	mov	x1, x8
   17e68:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   17e6c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   17e70:	sub	w8, w1, #0x9
   17e74:	and	w9, w8, #0xff
   17e78:	cmp	w9, #0x31
   17e7c:	b.hi	17e9c <__sanitizer_set_report_fd@@Base+0x1858>  // b.pmore
   17e80:	mov	x9, #0x13                  	// #19
   17e84:	movk	x9, #0x80, lsl #16
   17e88:	movk	x9, #0x8, lsl #32
   17e8c:	movk	x9, #0x2, lsl #48
   17e90:	lsr	x8, x9, x8
   17e94:	and	w0, w8, #0x1
   17e98:	ret
   17e9c:	mov	w0, wzr
   17ea0:	ret
   17ea4:	ldp	x8, x9, [x0, #16]
   17ea8:	mov	x11, #0x2600                	// #9728
   17eac:	movk	x11, #0x1001, lsl #32
   17eb0:	mov	w10, #0x1                   	// #1
   17eb4:	movk	x11, #0x400, lsl #48
   17eb8:	ldrb	w12, [x8, x9]
   17ebc:	cmp	w12, #0x3a
   17ec0:	b.hi	17ee4 <__sanitizer_set_report_fd@@Base+0x18a0>  // b.pmore
   17ec4:	lsl	x12, x10, x12
   17ec8:	tst	x12, x11
   17ecc:	b.eq	17ee4 <__sanitizer_set_report_fd@@Base+0x18a0>  // b.none
   17ed0:	add	x9, x9, #0x1
   17ed4:	str	x9, [x0, #24]
   17ed8:	ldrb	w12, [x8, x9]
   17edc:	cmp	w12, #0x3a
   17ee0:	b.ls	17ec4 <__sanitizer_set_report_fd@@Base+0x1880>  // b.plast
   17ee4:	ret
   17ee8:	stp	x30, x23, [sp, #-48]!
   17eec:	stp	x22, x21, [sp, #16]
   17ef0:	stp	x20, x19, [sp, #32]
   17ef4:	ldp	x9, x8, [x0, #16]
   17ef8:	mov	x13, #0x2601                	// #9729
   17efc:	movk	x13, #0x1001, lsl #32
   17f00:	mov	x2, x1
   17f04:	mov	x19, x0
   17f08:	mov	x1, xzr
   17f0c:	mov	w10, #0x1                   	// #1
   17f10:	add	x11, x9, x8
   17f14:	add	x12, x8, #0x1
   17f18:	movk	x13, #0x400, lsl #48
   17f1c:	ldrb	w14, [x11, x1]
   17f20:	cmp	w14, #0x3d
   17f24:	b.hi	17f3c <__sanitizer_set_report_fd@@Base+0x18f8>  // b.pmore
   17f28:	cmp	x14, #0x3d
   17f2c:	b.eq	17f58 <__sanitizer_set_report_fd@@Base+0x1914>  // b.none
   17f30:	lsl	x14, x10, x14
   17f34:	tst	x14, x13
   17f38:	b.ne	18168 <__sanitizer_set_report_fd@@Base+0x1b24>  // b.any
   17f3c:	add	x14, x12, x1
   17f40:	str	x14, [x19, #24]
   17f44:	add	x1, x1, #0x1
   17f48:	ldrb	w14, [x11, x1]
   17f4c:	cmp	w14, #0x3d
   17f50:	b.ls	17f28 <__sanitizer_set_report_fd@@Base+0x18e4>  // b.plast
   17f54:	b	17f3c <__sanitizer_set_report_fd@@Base+0x18f8>
   17f58:	add	x21, x9, x8
   17f5c:	mov	x0, x21
   17f60:	bl	18fa8 <__sanitizer_set_report_fd@@Base+0x2964>
   17f64:	mov	x22, x0
   17f68:	add	x1, x0, #0x1
   17f6c:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   17f70:	add	x0, x0, #0x588
   17f74:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   17f78:	mov	x1, x21
   17f7c:	mov	x2, x22
   17f80:	mov	x20, x0
   17f84:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   17f88:	strb	wzr, [x20, x22]
   17f8c:	ldp	x9, x8, [x19, #16]
   17f90:	add	x10, x8, #0x1
   17f94:	str	x10, [x19, #24]
   17f98:	add	x21, x9, x10
   17f9c:	ldrb	w10, [x21]
   17fa0:	cmp	w10, #0x22
   17fa4:	b.eq	17fb0 <__sanitizer_set_report_fd@@Base+0x196c>  // b.none
   17fa8:	cmp	w10, #0x27
   17fac:	b.ne	18058 <__sanitizer_set_report_fd@@Base+0x1a14>  // b.any
   17fb0:	add	x11, x8, #0x2
   17fb4:	str	x11, [x19, #24]
   17fb8:	ldrb	w13, [x9, x11]
   17fbc:	cmp	w13, #0x0
   17fc0:	cset	w10, eq  // eq = none
   17fc4:	cbz	w13, 17ffc <__sanitizer_set_report_fd@@Base+0x19b8>
   17fc8:	ldrb	w12, [x21]
   17fcc:	cmp	w13, w12
   17fd0:	b.eq	17ffc <__sanitizer_set_report_fd@@Base+0x19b8>  // b.none
   17fd4:	add	x11, x8, #0x3
   17fd8:	str	x11, [x19, #24]
   17fdc:	ldrb	w13, [x9, x11]
   17fe0:	add	x11, x11, #0x1
   17fe4:	cmp	w13, #0x0
   17fe8:	cset	w10, eq  // eq = none
   17fec:	cbz	w13, 17ff8 <__sanitizer_set_report_fd@@Base+0x19b4>
   17ff0:	cmp	w13, w12
   17ff4:	b.ne	17fd8 <__sanitizer_set_report_fd@@Base+0x1994>  // b.any
   17ff8:	sub	x11, x11, #0x1
   17ffc:	cbnz	w10, 181b0 <__sanitizer_set_report_fd@@Base+0x1b6c>
   18000:	add	x21, x21, #0x1
   18004:	sub	x8, x11, x8
   18008:	sub	x1, x8, #0x2
   1800c:	mov	x0, x21
   18010:	bl	18fa8 <__sanitizer_set_report_fd@@Base+0x2964>
   18014:	mov	x23, x0
   18018:	add	x1, x0, #0x1
   1801c:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   18020:	add	x0, x0, #0x588
   18024:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   18028:	mov	x1, x21
   1802c:	mov	x2, x23
   18030:	mov	x22, x0
   18034:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   18038:	strb	wzr, [x22, x23]
   1803c:	ldr	x8, [x19, #24]
   18040:	add	x8, x8, #0x1
   18044:	str	x8, [x19, #24]
   18048:	ldr	w8, [x19, #8]
   1804c:	cmp	w8, #0x1
   18050:	b.ge	180e0 <__sanitizer_set_report_fd@@Base+0x1a9c>  // b.tcont
   18054:	b	18110 <__sanitizer_set_report_fd@@Base+0x1acc>
   18058:	mov	x12, #0x2601                	// #9729
   1805c:	add	x8, x8, #0x2
   18060:	movk	x12, #0x1001, lsl #32
   18064:	mov	x1, xzr
   18068:	mov	w11, #0x1                   	// #1
   1806c:	add	x9, x9, x8
   18070:	movk	x12, #0x400, lsl #48
   18074:	b	18088 <__sanitizer_set_report_fd@@Base+0x1a44>
   18078:	add	x10, x8, x1
   1807c:	str	x10, [x19, #24]
   18080:	ldrb	w10, [x9, x1]
   18084:	add	x1, x1, #0x1
   18088:	and	w13, w10, #0xff
   1808c:	cmp	w13, #0x3a
   18090:	and	x10, x10, #0xff
   18094:	b.hi	18078 <__sanitizer_set_report_fd@@Base+0x1a34>  // b.pmore
   18098:	lsl	x10, x11, x10
   1809c:	tst	x10, x12
   180a0:	b.eq	18078 <__sanitizer_set_report_fd@@Base+0x1a34>  // b.none
   180a4:	mov	x0, x21
   180a8:	bl	18fa8 <__sanitizer_set_report_fd@@Base+0x2964>
   180ac:	mov	x23, x0
   180b0:	add	x1, x0, #0x1
   180b4:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   180b8:	add	x0, x0, #0x588
   180bc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   180c0:	mov	x1, x21
   180c4:	mov	x2, x23
   180c8:	mov	x22, x0
   180cc:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   180d0:	strb	wzr, [x22, x23]
   180d4:	ldr	w8, [x19, #8]
   180d8:	cmp	w8, #0x1
   180dc:	b.lt	18110 <__sanitizer_set_report_fd@@Base+0x1acc>  // b.tstop
   180e0:	mov	x21, xzr
   180e4:	mov	x23, xzr
   180e8:	ldr	x8, [x19]
   180ec:	mov	x0, x20
   180f0:	ldr	x1, [x8, x21]
   180f4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   180f8:	cbz	w0, 18138 <__sanitizer_set_report_fd@@Base+0x1af4>
   180fc:	ldrsw	x8, [x19, #8]
   18100:	add	x23, x23, #0x1
   18104:	add	x21, x21, #0x18
   18108:	cmp	x23, x8
   1810c:	b.lt	180e8 <__sanitizer_set_report_fd@@Base+0x1aa4>  // b.tstop
   18110:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   18114:	ldrsw	x3, [x8, #1592]
   18118:	cmp	w3, #0x14
   1811c:	b.cs	18194 <__sanitizer_set_report_fd@@Base+0x1b50>  // b.hs, b.nlast
   18120:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   18124:	add	w8, w3, #0x1
   18128:	add	x9, x9, #0x598
   1812c:	str	w8, [x9, #160]
   18130:	str	x20, [x9, x3, lsl #3]
   18134:	b	18158 <__sanitizer_set_report_fd@@Base+0x1b14>
   18138:	ldr	x8, [x19]
   1813c:	mov	x1, x22
   18140:	add	x8, x8, x21
   18144:	ldr	x0, [x8, #16]
   18148:	ldr	x8, [x0]
   1814c:	ldr	x8, [x8]
   18150:	blr	x8
   18154:	tbz	w0, #0, 181bc <__sanitizer_set_report_fd@@Base+0x1b78>
   18158:	ldp	x20, x19, [sp, #32]
   1815c:	ldp	x22, x21, [sp, #16]
   18160:	ldp	x30, x23, [sp], #48
   18164:	ret
   18168:	cbnz	x2, 18178 <__sanitizer_set_report_fd@@Base+0x1b34>
   1816c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18170:	add	x1, x1, #0x895
   18174:	bl	17e48 <__sanitizer_set_report_fd@@Base+0x1804>
   18178:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1817c:	ldr	x8, [x8, #4024]
   18180:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18184:	add	x0, x0, #0x876
   18188:	ldr	x1, [x8]
   1818c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   18190:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   18194:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18198:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1819c:	add	x0, x0, #0x7b7
   181a0:	add	x2, x2, #0x955
   181a4:	mov	w1, #0x1f                  	// #31
   181a8:	mov	w4, #0x14                  	// #20
   181ac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   181b0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   181b4:	add	x1, x1, #0x8a2
   181b8:	bl	17e48 <__sanitizer_set_report_fd@@Base+0x1804>
   181bc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   181c0:	add	x1, x1, #0x8b6
   181c4:	bl	17e48 <__sanitizer_set_report_fd@@Base+0x1804>
   181c8:	stp	x30, x23, [sp, #-48]!
   181cc:	stp	x22, x21, [sp, #16]
   181d0:	stp	x20, x19, [sp, #32]
   181d4:	ldr	w8, [x0, #8]
   181d8:	mov	x19, x1
   181dc:	cmp	w8, #0x1
   181e0:	b.lt	1821c <__sanitizer_set_report_fd@@Base+0x1bd8>  // b.tstop
   181e4:	mov	x20, x2
   181e8:	mov	x21, x0
   181ec:	mov	x22, xzr
   181f0:	mov	x23, xzr
   181f4:	ldr	x8, [x21]
   181f8:	mov	x0, x19
   181fc:	ldr	x1, [x8, x22]
   18200:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   18204:	cbz	w0, 18254 <__sanitizer_set_report_fd@@Base+0x1c10>
   18208:	ldrsw	x8, [x21, #8]
   1820c:	add	x23, x23, #0x1
   18210:	add	x22, x22, #0x18
   18214:	cmp	x23, x8
   18218:	b.lt	181f4 <__sanitizer_set_report_fd@@Base+0x1bb0>  // b.tstop
   1821c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   18220:	ldrsw	x3, [x8, #1592]
   18224:	cmp	w3, #0x14
   18228:	b.cs	1827c <__sanitizer_set_report_fd@@Base+0x1c38>  // b.hs, b.nlast
   1822c:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   18230:	add	w8, w3, #0x1
   18234:	add	x9, x9, #0x598
   18238:	str	w8, [x9, #160]
   1823c:	str	x19, [x9, x3, lsl #3]
   18240:	ldp	x20, x19, [sp, #32]
   18244:	ldp	x22, x21, [sp, #16]
   18248:	mov	w0, #0x1                   	// #1
   1824c:	ldp	x30, x23, [sp], #48
   18250:	ret
   18254:	ldr	x8, [x21]
   18258:	mov	x1, x20
   1825c:	ldp	x20, x19, [sp, #32]
   18260:	add	x8, x8, x22
   18264:	ldr	x0, [x8, #16]
   18268:	ldp	x22, x21, [sp, #16]
   1826c:	ldr	x8, [x0]
   18270:	ldr	x2, [x8]
   18274:	ldp	x30, x23, [sp], #48
   18278:	br	x2
   1827c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18280:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18284:	add	x0, x0, #0x7b7
   18288:	add	x2, x2, #0x955
   1828c:	mov	w1, #0x1f                  	// #31
   18290:	mov	w4, #0x14                  	// #20
   18294:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   18298:	str	x30, [sp, #-48]!
   1829c:	stp	x22, x21, [sp, #16]
   182a0:	stp	x20, x19, [sp, #32]
   182a4:	mov	x22, #0x2600                	// #9728
   182a8:	movk	x22, #0x1001, lsl #32
   182ac:	mov	x19, x1
   182b0:	mov	x20, x0
   182b4:	mov	w21, #0x1                   	// #1
   182b8:	movk	x22, #0x400, lsl #48
   182bc:	ldp	x8, x9, [x20, #16]
   182c0:	ldrb	w10, [x8, x9]
   182c4:	cmp	w10, #0x3a
   182c8:	b.hi	182f4 <__sanitizer_set_report_fd@@Base+0x1cb0>  // b.pmore
   182cc:	lsl	x11, x21, x10
   182d0:	tst	x11, x22
   182d4:	b.eq	182f0 <__sanitizer_set_report_fd@@Base+0x1cac>  // b.none
   182d8:	add	x9, x9, #0x1
   182dc:	str	x9, [x20, #24]
   182e0:	ldrb	w10, [x8, x9]
   182e4:	cmp	w10, #0x3a
   182e8:	b.ls	182cc <__sanitizer_set_report_fd@@Base+0x1c88>  // b.plast
   182ec:	b	182f4 <__sanitizer_set_report_fd@@Base+0x1cb0>
   182f0:	cbz	x10, 18314 <__sanitizer_set_report_fd@@Base+0x1cd0>
   182f4:	mov	x0, x20
   182f8:	mov	x1, x19
   182fc:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x18a4>
   18300:	ldp	x8, x9, [x20, #16]
   18304:	ldrb	w10, [x8, x9]
   18308:	cmp	w10, #0x3a
   1830c:	b.ls	182cc <__sanitizer_set_report_fd@@Base+0x1c88>  // b.plast
   18310:	b	182f4 <__sanitizer_set_report_fd@@Base+0x1cb0>
   18314:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   18318:	ldr	x8, [x8, #4056]
   1831c:	ldr	w9, [x8, #36]
   18320:	cmp	w9, #0x0
   18324:	b.le	18338 <__sanitizer_set_report_fd@@Base+0x1cf4>
   18328:	ldp	x20, x19, [sp, #32]
   1832c:	ldp	x22, x21, [sp, #16]
   18330:	ldr	x30, [sp], #48
   18334:	ret
   18338:	mov	w9, #0x1                   	// #1
   1833c:	str	w9, [x8, #36]
   18340:	ldp	x20, x19, [sp, #32]
   18344:	ldp	x22, x21, [sp, #16]
   18348:	ldr	x30, [sp], #48
   1834c:	ret
   18350:	sub	sp, sp, #0x40
   18354:	stp	x30, x23, [sp, #16]
   18358:	stp	x22, x21, [sp, #32]
   1835c:	stp	x20, x19, [sp, #48]
   18360:	mov	x19, x0
   18364:	mov	x0, x1
   18368:	mov	x20, x1
   1836c:	bl	19d40 <__sanitizer_set_report_fd@@Base+0x36fc>
   18370:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   18374:	ldr	x8, [x8, #3808]
   18378:	mov	x21, x0
   1837c:	ldr	w8, [x8]
   18380:	cbz	w8, 183a4 <__sanitizer_set_report_fd@@Base+0x1d60>
   18384:	adrp	x8, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18388:	add	x8, x8, #0x8d3
   1838c:	cmp	x21, #0x0
   18390:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18394:	csel	x2, x8, x21, eq  // eq = none
   18398:	add	x0, x0, #0x8cb
   1839c:	mov	x1, x20
   183a0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   183a4:	cbz	x21, 18440 <__sanitizer_set_report_fd@@Base+0x1dfc>
   183a8:	ldr	q0, [x19, #16]
   183ac:	mov	x23, #0x2600                	// #9728
   183b0:	movk	x23, #0x1001, lsl #32
   183b4:	mov	x8, xzr
   183b8:	mov	w22, #0x1                   	// #1
   183bc:	movk	x23, #0x400, lsl #48
   183c0:	str	q0, [sp]
   183c4:	stp	x21, xzr, [x19, #16]
   183c8:	ldrb	w9, [x21, x8]
   183cc:	cmp	w9, #0x3a
   183d0:	b.ls	183ec <__sanitizer_set_report_fd@@Base+0x1da8>  // b.plast
   183d4:	b	183fc <__sanitizer_set_report_fd@@Base+0x1db8>
   183d8:	add	x8, x8, #0x1
   183dc:	str	x8, [x19, #24]
   183e0:	ldrb	w9, [x21, x8]
   183e4:	cmp	w9, #0x3a
   183e8:	b.hi	183fc <__sanitizer_set_report_fd@@Base+0x1db8>  // b.pmore
   183ec:	lsl	x10, x22, x9
   183f0:	tst	x10, x23
   183f4:	b.ne	183d8 <__sanitizer_set_report_fd@@Base+0x1d94>  // b.any
   183f8:	cbz	x9, 1841c <__sanitizer_set_report_fd@@Base+0x1dd8>
   183fc:	mov	x0, x19
   18400:	mov	x1, x20
   18404:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x18a4>
   18408:	ldp	x21, x8, [x19, #16]
   1840c:	ldrb	w9, [x21, x8]
   18410:	cmp	w9, #0x3a
   18414:	b.ls	183ec <__sanitizer_set_report_fd@@Base+0x1da8>  // b.plast
   18418:	b	183fc <__sanitizer_set_report_fd@@Base+0x1db8>
   1841c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   18420:	ldr	x8, [x8, #4056]
   18424:	ldr	w9, [x8, #36]
   18428:	cmp	w9, #0x0
   1842c:	b.gt	18438 <__sanitizer_set_report_fd@@Base+0x1df4>
   18430:	mov	w9, #0x1                   	// #1
   18434:	str	w9, [x8, #36]
   18438:	ldr	q0, [sp]
   1843c:	str	q0, [x19, #16]
   18440:	ldp	x20, x19, [sp, #48]
   18444:	ldp	x22, x21, [sp, #32]
   18448:	ldp	x30, x23, [sp, #16]
   1844c:	add	sp, sp, #0x40
   18450:	ret
   18454:	cbz	x1, 18518 <__sanitizer_set_report_fd@@Base+0x1ed4>
   18458:	sub	sp, sp, #0x40
   1845c:	str	x30, [sp, #16]
   18460:	stp	x22, x21, [sp, #32]
   18464:	stp	x20, x19, [sp, #48]
   18468:	ldr	q0, [x0, #16]
   1846c:	mov	x22, #0x2600                	// #9728
   18470:	movk	x22, #0x1001, lsl #32
   18474:	mov	x20, x2
   18478:	mov	x19, x0
   1847c:	mov	x8, xzr
   18480:	mov	w21, #0x1                   	// #1
   18484:	movk	x22, #0x400, lsl #48
   18488:	str	q0, [sp]
   1848c:	stp	x1, xzr, [x0, #16]
   18490:	ldrb	w9, [x1, x8]
   18494:	cmp	w9, #0x3a
   18498:	b.ls	184b4 <__sanitizer_set_report_fd@@Base+0x1e70>  // b.plast
   1849c:	b	184c4 <__sanitizer_set_report_fd@@Base+0x1e80>
   184a0:	add	x8, x8, #0x1
   184a4:	str	x8, [x19, #24]
   184a8:	ldrb	w9, [x1, x8]
   184ac:	cmp	w9, #0x3a
   184b0:	b.hi	184c4 <__sanitizer_set_report_fd@@Base+0x1e80>  // b.pmore
   184b4:	lsl	x10, x21, x9
   184b8:	tst	x10, x22
   184bc:	b.ne	184a0 <__sanitizer_set_report_fd@@Base+0x1e5c>  // b.any
   184c0:	cbz	x9, 184e4 <__sanitizer_set_report_fd@@Base+0x1ea0>
   184c4:	mov	x0, x19
   184c8:	mov	x1, x20
   184cc:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x18a4>
   184d0:	ldp	x1, x8, [x19, #16]
   184d4:	ldrb	w9, [x1, x8]
   184d8:	cmp	w9, #0x3a
   184dc:	b.ls	184b4 <__sanitizer_set_report_fd@@Base+0x1e70>  // b.plast
   184e0:	b	184c4 <__sanitizer_set_report_fd@@Base+0x1e80>
   184e4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   184e8:	ldr	x8, [x8, #4056]
   184ec:	ldr	w9, [x8, #36]
   184f0:	cmp	w9, #0x0
   184f4:	b.gt	18500 <__sanitizer_set_report_fd@@Base+0x1ebc>
   184f8:	mov	w9, #0x1                   	// #1
   184fc:	str	w9, [x8, #36]
   18500:	ldr	q0, [sp]
   18504:	ldr	x30, [sp, #16]
   18508:	str	q0, [x19, #16]
   1850c:	ldp	x20, x19, [sp, #48]
   18510:	ldp	x22, x21, [sp, #32]
   18514:	add	sp, sp, #0x40
   18518:	ret
   1851c:	sub	sp, sp, #0x60
   18520:	str	x30, [sp, #48]
   18524:	stp	x22, x21, [sp, #64]
   18528:	stp	x20, x19, [sp, #80]
   1852c:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   18530:	ldr	x22, [x22, #4016]
   18534:	mov	w21, w2
   18538:	mov	x19, x1
   1853c:	mov	x20, x0
   18540:	ldr	x8, [x22]
   18544:	cbnz	x8, 18554 <__sanitizer_set_report_fd@@Base+0x1f10>
   18548:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1854c:	mov	x8, x0
   18550:	str	x0, [x22]
   18554:	cmp	x8, #0x8, lsl #12
   18558:	mov	w9, #0x8000                	// #32768
   1855c:	csel	x4, x8, x9, hi  // hi = pmore
   18560:	add	x1, sp, #0x38
   18564:	add	x2, sp, #0x28
   18568:	add	x3, sp, #0x18
   1856c:	add	x5, sp, #0x24
   18570:	mov	x0, x19
   18574:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   18578:	tbz	w0, #0, 185f8 <__sanitizer_set_report_fd@@Base+0x1fb4>
   1857c:	ldr	x8, [sp, #56]
   18580:	cbz	x8, 18644 <__sanitizer_set_report_fd@@Base+0x2000>
   18584:	ldr	q0, [x20, #16]
   18588:	mov	x22, #0x2600                	// #9728
   1858c:	movk	x22, #0x1001, lsl #32
   18590:	mov	x9, xzr
   18594:	mov	w21, #0x1                   	// #1
   18598:	movk	x22, #0x400, lsl #48
   1859c:	str	q0, [sp]
   185a0:	stp	x8, xzr, [x20, #16]
   185a4:	ldrb	w10, [x8, x9]
   185a8:	cmp	w10, #0x3a
   185ac:	b.ls	185c8 <__sanitizer_set_report_fd@@Base+0x1f84>  // b.plast
   185b0:	b	185d8 <__sanitizer_set_report_fd@@Base+0x1f94>
   185b4:	add	x9, x9, #0x1
   185b8:	str	x9, [x20, #24]
   185bc:	ldrb	w10, [x8, x9]
   185c0:	cmp	w10, #0x3a
   185c4:	b.hi	185d8 <__sanitizer_set_report_fd@@Base+0x1f94>  // b.pmore
   185c8:	lsl	x11, x21, x10
   185cc:	tst	x11, x22
   185d0:	b.ne	185b4 <__sanitizer_set_report_fd@@Base+0x1f70>  // b.any
   185d4:	cbz	x10, 18618 <__sanitizer_set_report_fd@@Base+0x1fd4>
   185d8:	mov	x0, x20
   185dc:	mov	x1, x19
   185e0:	bl	17ee8 <__sanitizer_set_report_fd@@Base+0x18a4>
   185e4:	ldp	x8, x9, [x20, #16]
   185e8:	ldrb	w10, [x8, x9]
   185ec:	cmp	w10, #0x3a
   185f0:	b.ls	185c8 <__sanitizer_set_report_fd@@Base+0x1f84>  // b.plast
   185f4:	b	185d8 <__sanitizer_set_report_fd@@Base+0x1f94>
   185f8:	tbnz	w21, #0, 18650 <__sanitizer_set_report_fd@@Base+0x200c>
   185fc:	ldr	w2, [sp, #36]
   18600:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   18604:	add	x0, x0, #0x8db
   18608:	mov	x1, x19
   1860c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   18610:	mov	w0, wzr
   18614:	b	18654 <__sanitizer_set_report_fd@@Base+0x2010>
   18618:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1861c:	ldr	x8, [x8, #4056]
   18620:	ldr	w9, [x8, #36]
   18624:	cmp	w9, #0x0
   18628:	b.gt	18634 <__sanitizer_set_report_fd@@Base+0x1ff0>
   1862c:	mov	w9, #0x1                   	// #1
   18630:	str	w9, [x8, #36]
   18634:	ldr	q0, [sp]
   18638:	str	q0, [x20, #16]
   1863c:	ldr	x0, [sp, #56]
   18640:	b	18648 <__sanitizer_set_report_fd@@Base+0x2004>
   18644:	mov	x0, xzr
   18648:	ldr	x1, [sp, #40]
   1864c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   18650:	mov	w0, #0x1                   	// #1
   18654:	ldp	x20, x19, [sp, #80]
   18658:	ldp	x22, x21, [sp, #64]
   1865c:	ldr	x30, [sp, #48]
   18660:	add	sp, sp, #0x60
   18664:	ret
   18668:	str	x30, [sp, #-16]!
   1866c:	mov	x8, x3
   18670:	ldrsw	x3, [x0, #8]
   18674:	cmp	w3, #0xc8
   18678:	b.cs	186a0 <__sanitizer_set_report_fd@@Base+0x205c>  // b.hs, b.nlast
   1867c:	ldr	x9, [x0]
   18680:	mov	w10, #0x18                  	// #24
   18684:	add	w11, w3, #0x1
   18688:	madd	x9, x3, x10, x9
   1868c:	stp	x1, x8, [x9]
   18690:	str	x2, [x9, #16]
   18694:	str	w11, [x0, #8]
   18698:	ldr	x30, [sp], #16
   1869c:	ret
   186a0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   186a4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   186a8:	add	x0, x0, #0x7b7
   186ac:	add	x2, x2, #0x907
   186b0:	mov	w1, #0xb4                  	// #180
   186b4:	mov	w4, #0xc8                  	// #200
   186b8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   186bc:	stp	x30, x19, [sp, #-16]!
   186c0:	mov	x19, x0
   186c4:	str	wzr, [x0, #8]
   186c8:	stp	xzr, xzr, [x0, #16]
   186cc:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   186d0:	add	x0, x0, #0x588
   186d4:	mov	w1, #0x12c0                	// #4800
   186d8:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   186dc:	str	x0, [x19]
   186e0:	ldp	x30, x19, [sp], #16
   186e4:	ret
   186e8:	b	186f0 <__sanitizer_set_report_fd@@Base+0x20ac>
   186ec:	add	x0, x0, #0x1
   186f0:	ldrb	w8, [x0]
   186f4:	sub	w9, w8, #0x9
   186f8:	cmp	w9, #0x5
   186fc:	b.cc	186ec <__sanitizer_set_report_fd@@Base+0x20a8>  // b.lo, b.ul, b.last
   18700:	cmp	w8, #0x20
   18704:	b.eq	186ec <__sanitizer_set_report_fd@@Base+0x20a8>  // b.none
   18708:	cmp	w8, #0x2b
   1870c:	b.eq	18734 <__sanitizer_set_report_fd@@Base+0x20f0>  // b.none
   18710:	cmp	w8, #0x2d
   18714:	b.ne	18738 <__sanitizer_set_report_fd@@Base+0x20f4>  // b.any
   18718:	mov	w8, #0xffffffff            	// #-1
   1871c:	ldrb	w11, [x0, #1]!
   18720:	sub	w9, w11, #0x30
   18724:	cmp	w9, #0x9
   18728:	b.ls	1874c <__sanitizer_set_report_fd@@Base+0x2108>  // b.plast
   1872c:	mov	x10, xzr
   18730:	b	1879c <__sanitizer_set_report_fd@@Base+0x2158>
   18734:	add	x0, x0, #0x1
   18738:	mov	w8, #0x1                   	// #1
   1873c:	ldrb	w11, [x0]
   18740:	sub	w9, w11, #0x30
   18744:	cmp	w9, #0x9
   18748:	b.hi	1872c <__sanitizer_set_report_fd@@Base+0x20e8>  // b.pmore
   1874c:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
   18750:	movk	x12, #0x999a
   18754:	mov	x10, xzr
   18758:	add	x9, x0, #0x1
   1875c:	movk	x12, #0x1999, lsl #48
   18760:	mov	w13, #0x2f                  	// #47
   18764:	add	x14, x10, x10, lsl #2
   18768:	cmp	x10, x12
   1876c:	and	x10, x11, #0xff
   18770:	ldrb	w11, [x9], #1
   18774:	lsl	x14, x14, #1
   18778:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
   1877c:	sub	x15, x13, x10
   18780:	add	x10, x10, x14
   18784:	cmp	x14, x15
   18788:	sub	x10, x10, #0x30
   1878c:	sub	w14, w11, #0x30
   18790:	csinv	x10, x10, xzr, ls  // ls = plast
   18794:	cmp	w14, #0xa
   18798:	b.cc	18764 <__sanitizer_set_report_fd@@Base+0x2120>  // b.lo, b.ul, b.last
   1879c:	cmp	w8, #0x1
   187a0:	b.lt	187b4 <__sanitizer_set_report_fd@@Base+0x2170>  // b.tstop
   187a4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   187a8:	cmp	x10, x8
   187ac:	csel	x0, x10, x8, cc  // cc = lo, ul, last
   187b0:	ret
   187b4:	cmp	x10, #0x0
   187b8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   187bc:	csneg	x0, x8, x10, lt  // lt = tstop
   187c0:	ret
   187c4:	str	x30, [sp, #-16]!
   187c8:	cmp	w2, #0xa
   187cc:	b.eq	187f4 <__sanitizer_set_report_fd@@Base+0x21b0>  // b.none
   187d0:	sxtw	x3, w2
   187d4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   187d8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   187dc:	add	x0, x0, #0x981
   187e0:	add	x2, x2, #0x9d2
   187e4:	mov	w1, #0xe7                  	// #231
   187e8:	mov	w4, #0xa                   	// #10
   187ec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   187f0:	add	x0, x0, #0x1
   187f4:	ldrb	w8, [x0]
   187f8:	sub	w9, w8, #0x9
   187fc:	cmp	w9, #0x5
   18800:	b.cc	187f0 <__sanitizer_set_report_fd@@Base+0x21ac>  // b.lo, b.ul, b.last
   18804:	cmp	w8, #0x20
   18808:	b.eq	187f0 <__sanitizer_set_report_fd@@Base+0x21ac>  // b.none
   1880c:	cmp	w8, #0x2b
   18810:	b.eq	18838 <__sanitizer_set_report_fd@@Base+0x21f4>  // b.none
   18814:	cmp	w8, #0x2d
   18818:	b.ne	188a8 <__sanitizer_set_report_fd@@Base+0x2264>  // b.any
   1881c:	add	x9, x0, #0x1
   18820:	mov	w8, #0xffffffff            	// #-1
   18824:	ldrb	w12, [x9]
   18828:	sub	w10, w12, #0x30
   1882c:	cmp	w10, #0x9
   18830:	b.ls	18850 <__sanitizer_set_report_fd@@Base+0x220c>  // b.plast
   18834:	b	188c0 <__sanitizer_set_report_fd@@Base+0x227c>
   18838:	add	x9, x0, #0x1
   1883c:	mov	w8, #0x1                   	// #1
   18840:	ldrb	w12, [x9]
   18844:	sub	w10, w12, #0x30
   18848:	cmp	w10, #0x9
   1884c:	b.hi	188c0 <__sanitizer_set_report_fd@@Base+0x227c>  // b.pmore
   18850:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
   18854:	movk	x11, #0x999a
   18858:	mov	x10, xzr
   1885c:	movk	x11, #0x1999, lsl #48
   18860:	mov	w13, #0x2f                  	// #47
   18864:	add	x14, x10, x10, lsl #2
   18868:	cmp	x10, x11
   1886c:	and	x10, x12, #0xff
   18870:	ldrb	w12, [x9, #1]!
   18874:	lsl	x14, x14, #1
   18878:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
   1887c:	sub	x15, x13, x10
   18880:	add	x10, x14, x10
   18884:	cmp	x14, x15
   18888:	sub	x10, x10, #0x30
   1888c:	sub	w14, w12, #0x30
   18890:	csinv	x10, x10, xzr, ls  // ls = plast
   18894:	cmp	w14, #0xa
   18898:	b.cc	18864 <__sanitizer_set_report_fd@@Base+0x2220>  // b.lo, b.ul, b.last
   1889c:	mov	w11, #0x1                   	// #1
   188a0:	cbnz	x1, 188cc <__sanitizer_set_report_fd@@Base+0x2288>
   188a4:	b	188d8 <__sanitizer_set_report_fd@@Base+0x2294>
   188a8:	mov	w8, #0x1                   	// #1
   188ac:	mov	x9, x0
   188b0:	ldrb	w12, [x9]
   188b4:	sub	w10, w12, #0x30
   188b8:	cmp	w10, #0x9
   188bc:	b.ls	18850 <__sanitizer_set_report_fd@@Base+0x220c>  // b.plast
   188c0:	mov	x10, xzr
   188c4:	mov	w11, wzr
   188c8:	cbz	x1, 188d8 <__sanitizer_set_report_fd@@Base+0x2294>
   188cc:	cmp	w11, #0x0
   188d0:	csel	x9, x9, x0, ne  // ne = any
   188d4:	str	x9, [x1]
   188d8:	cmp	w8, #0x1
   188dc:	b.lt	188f4 <__sanitizer_set_report_fd@@Base+0x22b0>  // b.tstop
   188e0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   188e4:	cmp	x10, x8
   188e8:	csel	x0, x10, x8, cc  // cc = lo, ul, last
   188ec:	ldr	x30, [sp], #16
   188f0:	ret
   188f4:	cmp	x10, #0x0
   188f8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   188fc:	csneg	x0, x8, x10, lt  // lt = tstop
   18900:	ldr	x30, [sp], #16
   18904:	ret
   18908:	cbz	x2, 18924 <__sanitizer_set_report_fd@@Base+0x22e0>
   1890c:	ldrb	w8, [x0]
   18910:	cmp	w8, w1
   18914:	b.eq	18928 <__sanitizer_set_report_fd@@Base+0x22e4>  // b.none
   18918:	subs	x2, x2, #0x1
   1891c:	add	x0, x0, #0x1
   18920:	b.ne	1890c <__sanitizer_set_report_fd@@Base+0x22c8>  // b.any
   18924:	mov	x0, xzr
   18928:	ret
   1892c:	cbz	x2, 18958 <__sanitizer_set_report_fd@@Base+0x2314>
   18930:	mov	x8, x0
   18934:	mov	x0, xzr
   18938:	mov	x9, x8
   1893c:	ldrb	w10, [x9], #1
   18940:	cmp	w10, w1
   18944:	csel	x0, x8, x0, eq  // eq = none
   18948:	subs	x2, x2, #0x1
   1894c:	mov	x8, x9
   18950:	b.ne	1893c <__sanitizer_set_report_fd@@Base+0x22f8>  // b.any
   18954:	ret
   18958:	mov	x0, xzr
   1895c:	ret
   18960:	cbz	x2, 18984 <__sanitizer_set_report_fd@@Base+0x2340>
   18964:	ldrb	w8, [x0]
   18968:	ldrb	w9, [x1]
   1896c:	cmp	w8, w9
   18970:	b.ne	1898c <__sanitizer_set_report_fd@@Base+0x2348>  // b.any
   18974:	add	x0, x0, #0x1
   18978:	subs	x2, x2, #0x1
   1897c:	add	x1, x1, #0x1
   18980:	b.ne	18964 <__sanitizer_set_report_fd@@Base+0x2320>  // b.any
   18984:	mov	w0, wzr
   18988:	ret
   1898c:	mov	w8, #0xffffffff            	// #-1
   18990:	cneg	w0, w8, cs  // cs = hs, nlast
   18994:	ret
   18998:	cbz	x2, 189dc <__sanitizer_set_report_fd@@Base+0x2398>
   1899c:	cmp	x2, #0x1f
   189a0:	b.ls	189bc <__sanitizer_set_report_fd@@Base+0x2378>  // b.plast
   189a4:	add	x8, x1, x2
   189a8:	cmp	x8, x0
   189ac:	b.ls	189e0 <__sanitizer_set_report_fd@@Base+0x239c>  // b.plast
   189b0:	add	x8, x0, x2
   189b4:	cmp	x8, x1
   189b8:	b.ls	189e0 <__sanitizer_set_report_fd@@Base+0x239c>  // b.plast
   189bc:	mov	x8, xzr
   189c0:	sub	x9, x2, x8
   189c4:	add	x10, x0, x8
   189c8:	add	x8, x1, x8
   189cc:	ldrb	w11, [x8], #1
   189d0:	subs	x9, x9, #0x1
   189d4:	strb	w11, [x10], #1
   189d8:	b.ne	189cc <__sanitizer_set_report_fd@@Base+0x2388>  // b.any
   189dc:	ret
   189e0:	and	x8, x2, #0xffffffffffffffe0
   189e4:	add	x9, x1, #0x10
   189e8:	add	x10, x0, #0x10
   189ec:	mov	x11, x8
   189f0:	ldp	q0, q1, [x9, #-16]
   189f4:	add	x9, x9, #0x20
   189f8:	subs	x11, x11, #0x20
   189fc:	stp	q0, q1, [x10, #-16]
   18a00:	add	x10, x10, #0x20
   18a04:	b.ne	189f0 <__sanitizer_set_report_fd@@Base+0x23ac>  // b.any
   18a08:	cmp	x8, x2
   18a0c:	b.ne	189c0 <__sanitizer_set_report_fd@@Base+0x237c>  // b.any
   18a10:	b	189dc <__sanitizer_set_report_fd@@Base+0x2398>
   18a14:	cmp	x0, x1
   18a18:	b.cs	18a68 <__sanitizer_set_report_fd@@Base+0x2424>  // b.hs, b.nlast
   18a1c:	cmp	x2, #0x1
   18a20:	b.lt	18a90 <__sanitizer_set_report_fd@@Base+0x244c>  // b.tstop
   18a24:	cmp	x2, #0x20
   18a28:	b.cc	18a44 <__sanitizer_set_report_fd@@Base+0x2400>  // b.lo, b.ul, b.last
   18a2c:	add	x8, x1, x2
   18a30:	cmp	x8, x0
   18a34:	b.ls	18a94 <__sanitizer_set_report_fd@@Base+0x2450>  // b.plast
   18a38:	add	x8, x0, x2
   18a3c:	cmp	x8, x1
   18a40:	b.ls	18a94 <__sanitizer_set_report_fd@@Base+0x2450>  // b.plast
   18a44:	mov	x8, xzr
   18a48:	sub	x9, x2, x8
   18a4c:	add	x10, x0, x8
   18a50:	add	x8, x1, x8
   18a54:	ldrb	w11, [x8], #1
   18a58:	subs	x9, x9, #0x1
   18a5c:	strb	w11, [x10], #1
   18a60:	b.ne	18a54 <__sanitizer_set_report_fd@@Base+0x2410>  // b.any
   18a64:	b	18a90 <__sanitizer_set_report_fd@@Base+0x244c>
   18a68:	b.ls	18a90 <__sanitizer_set_report_fd@@Base+0x244c>  // b.plast
   18a6c:	subs	x8, x2, #0x1
   18a70:	b.lt	18a90 <__sanitizer_set_report_fd@@Base+0x244c>  // b.tstop
   18a74:	ldrb	w9, [x1, x8]
   18a78:	add	x10, x8, #0x1
   18a7c:	sub	x11, x8, #0x1
   18a80:	cmp	x10, #0x1
   18a84:	strb	w9, [x0, x8]
   18a88:	mov	x8, x11
   18a8c:	b.gt	18a74 <__sanitizer_set_report_fd@@Base+0x2430>
   18a90:	ret
   18a94:	and	x8, x2, #0xffffffffffffffe0
   18a98:	add	x9, x1, #0x10
   18a9c:	add	x10, x0, #0x10
   18aa0:	mov	x11, x8
   18aa4:	ldp	q0, q1, [x9, #-16]
   18aa8:	add	x9, x9, #0x20
   18aac:	subs	x11, x11, #0x20
   18ab0:	stp	q0, q1, [x10, #-16]
   18ab4:	add	x10, x10, #0x20
   18ab8:	b.ne	18aa4 <__sanitizer_set_report_fd@@Base+0x2460>  // b.any
   18abc:	cmp	x8, x2
   18ac0:	b.eq	18a90 <__sanitizer_set_report_fd@@Base+0x244c>  // b.none
   18ac4:	b	18a48 <__sanitizer_set_report_fd@@Base+0x2404>
   18ac8:	orr	w8, w0, w2
   18acc:	tst	x8, #0xf
   18ad0:	b.eq	18aec <__sanitizer_set_report_fd@@Base+0x24a8>  // b.none
   18ad4:	cbz	x2, 18b5c <__sanitizer_set_report_fd@@Base+0x2518>
   18ad8:	mov	x8, x0
   18adc:	subs	x2, x2, #0x1
   18ae0:	strb	w1, [x8], #1
   18ae4:	b.ne	18adc <__sanitizer_set_report_fd@@Base+0x2498>  // b.any
   18ae8:	b	18b5c <__sanitizer_set_report_fd@@Base+0x2518>
   18aec:	and	x9, x2, #0xfffffffffffffff8
   18af0:	add	x8, x0, x9
   18af4:	cmp	x8, x0
   18af8:	b.ls	18b5c <__sanitizer_set_report_fd@@Base+0x2518>  // b.plast
   18afc:	sxtw	x10, w1
   18b00:	sub	x11, x9, #0x1
   18b04:	orr	x9, x10, x10, lsl #8
   18b08:	orr	x9, x9, x9, lsl #16
   18b0c:	cmp	x11, #0x30
   18b10:	orr	x9, x9, x9, lsl #32
   18b14:	mov	x10, x0
   18b18:	b.cc	18b50 <__sanitizer_set_report_fd@@Base+0x250c>  // b.lo, b.ul, b.last
   18b1c:	lsr	x10, x11, #4
   18b20:	add	x11, x10, #0x1
   18b24:	and	x12, x11, #0x1ffffffffffffffc
   18b28:	dup	v0.2d, x9
   18b2c:	add	x10, x0, x12, lsl #4
   18b30:	add	x13, x0, #0x20
   18b34:	mov	x14, x12
   18b38:	stp	q0, q0, [x13, #-32]
   18b3c:	stp	q0, q0, [x13], #64
   18b40:	subs	x14, x14, #0x4
   18b44:	b.ne	18b38 <__sanitizer_set_report_fd@@Base+0x24f4>  // b.any
   18b48:	cmp	x11, x12
   18b4c:	b.eq	18b5c <__sanitizer_set_report_fd@@Base+0x2518>  // b.none
   18b50:	stp	x9, x9, [x10], #16
   18b54:	cmp	x10, x8
   18b58:	b.cc	18b50 <__sanitizer_set_report_fd@@Base+0x250c>  // b.lo, b.ul, b.last
   18b5c:	ret
   18b60:	ldrb	w9, [x0]
   18b64:	cbz	w9, 18bac <__sanitizer_set_report_fd@@Base+0x2568>
   18b68:	ldrb	w10, [x1], #1
   18b6c:	mov	x8, xzr
   18b70:	cmp	w10, w9, uxtb
   18b74:	b.eq	18ba4 <__sanitizer_set_report_fd@@Base+0x2560>  // b.none
   18b78:	mov	x11, x1
   18b7c:	mov	w12, w10
   18b80:	tst	w12, #0xff
   18b84:	b.eq	18b98 <__sanitizer_set_report_fd@@Base+0x2554>  // b.none
   18b88:	ldrb	w12, [x11], #1
   18b8c:	cmp	w12, w9, uxtb
   18b90:	b.ne	18b80 <__sanitizer_set_report_fd@@Base+0x253c>  // b.any
   18b94:	b	18ba4 <__sanitizer_set_report_fd@@Base+0x2560>
   18b98:	add	x8, x8, #0x1
   18b9c:	ldrb	w9, [x0, x8]
   18ba0:	cbnz	w9, 18b70 <__sanitizer_set_report_fd@@Base+0x252c>
   18ba4:	mov	x0, x8
   18ba8:	ret
   18bac:	mov	x0, xzr
   18bb0:	ret
   18bb4:	ldrb	w8, [x0]
   18bb8:	cmp	w8, w1, uxtb
   18bbc:	b.eq	18bd4 <__sanitizer_set_report_fd@@Base+0x2590>  // b.none
   18bc0:	tst	w8, #0xff
   18bc4:	b.eq	18bd8 <__sanitizer_set_report_fd@@Base+0x2594>  // b.none
   18bc8:	ldrb	w8, [x0, #1]!
   18bcc:	cmp	w8, w1, uxtb
   18bd0:	b.ne	18bc0 <__sanitizer_set_report_fd@@Base+0x257c>  // b.any
   18bd4:	ret
   18bd8:	mov	x0, xzr
   18bdc:	ret
   18be0:	str	x30, [sp, #-32]!
   18be4:	stp	x20, x19, [sp, #16]
   18be8:	mov	x19, x0
   18bec:	mov	x20, #0xffffffffffffffff    	// #-1
   18bf0:	add	x8, x19, x20
   18bf4:	ldrb	w8, [x8, #1]
   18bf8:	add	x20, x20, #0x1
   18bfc:	cbnz	w8, 18bf0 <__sanitizer_set_report_fd@@Base+0x25ac>
   18c00:	add	x0, x20, #0x1
   18c04:	mov	x1, xzr
   18c08:	mov	x2, xzr
   18c0c:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   18c10:	cbz	x20, 18c7c <__sanitizer_set_report_fd@@Base+0x2638>
   18c14:	cmp	x20, #0x20
   18c18:	b.cc	18c34 <__sanitizer_set_report_fd@@Base+0x25f0>  // b.lo, b.ul, b.last
   18c1c:	add	x8, x19, x20
   18c20:	cmp	x0, x8
   18c24:	b.cs	18c3c <__sanitizer_set_report_fd@@Base+0x25f8>  // b.hs, b.nlast
   18c28:	add	x8, x0, x20
   18c2c:	cmp	x8, x19
   18c30:	b.ls	18c3c <__sanitizer_set_report_fd@@Base+0x25f8>  // b.plast
   18c34:	mov	x8, xzr
   18c38:	b	18c68 <__sanitizer_set_report_fd@@Base+0x2624>
   18c3c:	and	x8, x20, #0xffffffffffffffe0
   18c40:	add	x9, x19, #0x10
   18c44:	add	x10, x0, #0x10
   18c48:	mov	x11, x8
   18c4c:	ldp	q0, q1, [x9, #-16]
   18c50:	add	x9, x9, #0x20
   18c54:	subs	x11, x11, #0x20
   18c58:	stp	q0, q1, [x10, #-16]
   18c5c:	add	x10, x10, #0x20
   18c60:	b.ne	18c4c <__sanitizer_set_report_fd@@Base+0x2608>  // b.any
   18c64:	b	18c74 <__sanitizer_set_report_fd@@Base+0x2630>
   18c68:	ldrb	w9, [x19, x8]
   18c6c:	strb	w9, [x0, x8]
   18c70:	add	x8, x8, #0x1
   18c74:	cmp	x20, x8
   18c78:	b.ne	18c68 <__sanitizer_set_report_fd@@Base+0x2624>  // b.any
   18c7c:	strb	wzr, [x0, x20]
   18c80:	ldp	x20, x19, [sp, #16]
   18c84:	ldr	x30, [sp], #32
   18c88:	ret
   18c8c:	mov	x8, xzr
   18c90:	ldrb	w9, [x0, x8]
   18c94:	add	x8, x8, #0x1
   18c98:	cbnz	w9, 18c90 <__sanitizer_set_report_fd@@Base+0x264c>
   18c9c:	sub	x0, x8, #0x1
   18ca0:	ret
   18ca4:	ldrb	w8, [x0]
   18ca8:	ldrb	w11, [x1]
   18cac:	cmp	w8, w11
   18cb0:	b.ne	18cd4 <__sanitizer_set_report_fd@@Base+0x2690>  // b.any
   18cb4:	add	x9, x0, #0x1
   18cb8:	add	x10, x1, #0x1
   18cbc:	tst	w8, #0xff
   18cc0:	b.eq	18ce4 <__sanitizer_set_report_fd@@Base+0x26a0>  // b.none
   18cc4:	ldrb	w8, [x9], #1
   18cc8:	ldrb	w11, [x10], #1
   18ccc:	cmp	w8, w11
   18cd0:	b.eq	18cbc <__sanitizer_set_report_fd@@Base+0x2678>  // b.none
   18cd4:	cmp	w8, w11
   18cd8:	mov	w8, #0xffffffff            	// #-1
   18cdc:	cneg	w0, w8, cs  // cs = hs, nlast
   18ce0:	ret
   18ce4:	mov	w0, wzr
   18ce8:	ret
   18cec:	cbz	x2, 18d14 <__sanitizer_set_report_fd@@Base+0x26d0>
   18cf0:	ldrb	w8, [x0]
   18cf4:	ldrb	w9, [x1]
   18cf8:	cmp	w8, w9
   18cfc:	b.ne	18d1c <__sanitizer_set_report_fd@@Base+0x26d8>  // b.any
   18d00:	cbz	w8, 18d14 <__sanitizer_set_report_fd@@Base+0x26d0>
   18d04:	add	x0, x0, #0x1
   18d08:	subs	x2, x2, #0x1
   18d0c:	add	x1, x1, #0x1
   18d10:	b.ne	18cf0 <__sanitizer_set_report_fd@@Base+0x26ac>  // b.any
   18d14:	mov	w0, wzr
   18d18:	ret
   18d1c:	mov	w8, #0xffffffff            	// #-1
   18d20:	cneg	w0, w8, cs  // cs = hs, nlast
   18d24:	ret
   18d28:	ldrb	w9, [x0]
   18d2c:	cmp	w9, w1, uxtb
   18d30:	b.ne	18d38 <__sanitizer_set_report_fd@@Base+0x26f4>  // b.any
   18d34:	ret
   18d38:	mov	w10, w9
   18d3c:	mov	x8, x0
   18d40:	tst	w10, #0xff
   18d44:	b.eq	18d5c <__sanitizer_set_report_fd@@Base+0x2718>  // b.none
   18d48:	ldrb	w10, [x8, #1]!
   18d4c:	cmp	w10, w1, uxtb
   18d50:	b.ne	18d40 <__sanitizer_set_report_fd@@Base+0x26fc>  // b.any
   18d54:	mov	x0, x8
   18d58:	ret
   18d5c:	mov	x8, xzr
   18d60:	cbz	w9, 18d74 <__sanitizer_set_report_fd@@Base+0x2730>
   18d64:	add	x9, x0, #0x1
   18d68:	ldrb	w10, [x9, x8]
   18d6c:	add	x8, x8, #0x1
   18d70:	cbnz	w10, 18d68 <__sanitizer_set_report_fd@@Base+0x2724>
   18d74:	add	x8, x0, x8
   18d78:	mov	x0, x8
   18d7c:	ret
   18d80:	ldrb	w9, [x0]
   18d84:	cbz	w9, 18da4 <__sanitizer_set_report_fd@@Base+0x2760>
   18d88:	mov	x8, xzr
   18d8c:	cmp	w1, w9, uxtb
   18d90:	csel	x8, x0, x8, eq  // eq = none
   18d94:	ldrb	w9, [x0, #1]!
   18d98:	cbnz	w9, 18d8c <__sanitizer_set_report_fd@@Base+0x2748>
   18d9c:	mov	x0, x8
   18da0:	ret
   18da4:	mov	x8, xzr
   18da8:	mov	x0, x8
   18dac:	ret
   18db0:	mov	x8, xzr
   18db4:	ldrb	w9, [x1, x8]
   18db8:	add	x8, x8, #0x1
   18dbc:	cbnz	w9, 18db4 <__sanitizer_set_report_fd@@Base+0x2770>
   18dc0:	mov	x9, xzr
   18dc4:	cbz	x2, 18dec <__sanitizer_set_report_fd@@Base+0x27a8>
   18dc8:	ldrb	w10, [x0, x9]
   18dcc:	cbz	w10, 18dec <__sanitizer_set_report_fd@@Base+0x27a8>
   18dd0:	add	x9, x9, #0x1
   18dd4:	cmp	x2, x9
   18dd8:	b.ne	18dc8 <__sanitizer_set_report_fd@@Base+0x2784>  // b.any
   18ddc:	mov	x9, x2
   18de0:	add	x8, x9, x8
   18de4:	sub	x0, x8, #0x1
   18de8:	ret
   18dec:	cmp	x9, x2
   18df0:	b.ne	18e04 <__sanitizer_set_report_fd@@Base+0x27c0>  // b.any
   18df4:	mov	x9, x2
   18df8:	add	x8, x9, x8
   18dfc:	sub	x0, x8, #0x1
   18e00:	ret
   18e04:	sub	x11, x8, #0x1
   18e08:	sub	x12, x2, x9
   18e0c:	cmp	x11, x12
   18e10:	add	x10, x0, x9
   18e14:	b.cs	18e54 <__sanitizer_set_report_fd@@Base+0x2810>  // b.hs, b.nlast
   18e18:	cmp	x10, x1
   18e1c:	b.cs	18eb8 <__sanitizer_set_report_fd@@Base+0x2874>  // b.hs, b.nlast
   18e20:	cmp	x8, #0x1
   18e24:	b.lt	18de0 <__sanitizer_set_report_fd@@Base+0x279c>  // b.tstop
   18e28:	cmp	x8, #0x20
   18e2c:	b.cc	18e4c <__sanitizer_set_report_fd@@Base+0x2808>  // b.lo, b.ul, b.last
   18e30:	add	x11, x1, x8
   18e34:	cmp	x10, x11
   18e38:	b.cs	18f28 <__sanitizer_set_report_fd@@Base+0x28e4>  // b.hs, b.nlast
   18e3c:	add	x11, x0, x9
   18e40:	add	x11, x11, x8
   18e44:	cmp	x11, x1
   18e48:	b.ls	18f28 <__sanitizer_set_report_fd@@Base+0x28e4>  // b.plast
   18e4c:	mov	x11, xzr
   18e50:	b	18f90 <__sanitizer_set_report_fd@@Base+0x294c>
   18e54:	cmp	x10, x1
   18e58:	sub	x11, x12, #0x1
   18e5c:	b.cs	18ee8 <__sanitizer_set_report_fd@@Base+0x28a4>  // b.hs, b.nlast
   18e60:	cmp	x11, #0x1
   18e64:	b.lt	18f14 <__sanitizer_set_report_fd@@Base+0x28d0>  // b.tstop
   18e68:	cmp	x11, #0x20
   18e6c:	b.cc	18e8c <__sanitizer_set_report_fd@@Base+0x2848>  // b.lo, b.ul, b.last
   18e70:	add	x12, x1, x11
   18e74:	cmp	x10, x12
   18e78:	b.cs	18f58 <__sanitizer_set_report_fd@@Base+0x2914>  // b.hs, b.nlast
   18e7c:	add	x10, x2, x0
   18e80:	sub	x10, x10, #0x1
   18e84:	cmp	x10, x1
   18e88:	b.ls	18f58 <__sanitizer_set_report_fd@@Base+0x2914>  // b.plast
   18e8c:	mov	x10, xzr
   18e90:	add	x11, x10, x9
   18e94:	sub	x12, x11, x2
   18e98:	add	x11, x0, x11
   18e9c:	add	x12, x12, #0x1
   18ea0:	add	x10, x1, x10
   18ea4:	ldrb	w13, [x10], #1
   18ea8:	adds	x12, x12, #0x1
   18eac:	strb	w13, [x11], #1
   18eb0:	b.cc	18ea4 <__sanitizer_set_report_fd@@Base+0x2860>  // b.lo, b.ul, b.last
   18eb4:	b	18f14 <__sanitizer_set_report_fd@@Base+0x28d0>
   18eb8:	cmp	x8, #0x1
   18ebc:	b.lt	18de0 <__sanitizer_set_report_fd@@Base+0x279c>  // b.tstop
   18ec0:	cmp	x10, x1
   18ec4:	b.ls	18de0 <__sanitizer_set_report_fd@@Base+0x279c>  // b.plast
   18ec8:	ldrb	w12, [x1, x11]
   18ecc:	add	x13, x11, #0x1
   18ed0:	sub	x14, x11, #0x1
   18ed4:	cmp	x13, #0x1
   18ed8:	strb	w12, [x10, x11]
   18edc:	mov	x11, x14
   18ee0:	b.gt	18ec8 <__sanitizer_set_report_fd@@Base+0x2884>
   18ee4:	b	18de0 <__sanitizer_set_report_fd@@Base+0x279c>
   18ee8:	b.ls	18f14 <__sanitizer_set_report_fd@@Base+0x28d0>  // b.plast
   18eec:	cmp	x11, #0x1
   18ef0:	b.lt	18f14 <__sanitizer_set_report_fd@@Base+0x28d0>  // b.tstop
   18ef4:	add	x10, x2, x0
   18ef8:	sub	x10, x10, #0x2
   18efc:	sub	x11, x1, #0x2
   18f00:	ldrb	w13, [x11, x12]
   18f04:	sub	x12, x12, #0x1
   18f08:	cmp	x12, #0x1
   18f0c:	strb	w13, [x10], #-1
   18f10:	b.gt	18f00 <__sanitizer_set_report_fd@@Base+0x28bc>
   18f14:	add	x10, x2, x0
   18f18:	sturb	wzr, [x10, #-1]
   18f1c:	add	x8, x9, x8
   18f20:	sub	x0, x8, #0x1
   18f24:	ret
   18f28:	and	x11, x8, #0xffffffffffffffe0
   18f2c:	add	x13, x9, x0
   18f30:	add	x12, x1, #0x10
   18f34:	add	x13, x13, #0x10
   18f38:	mov	x14, x11
   18f3c:	ldp	q0, q1, [x12, #-16]
   18f40:	add	x12, x12, #0x20
   18f44:	subs	x14, x14, #0x20
   18f48:	stp	q0, q1, [x13, #-16]
   18f4c:	add	x13, x13, #0x20
   18f50:	b.ne	18f3c <__sanitizer_set_report_fd@@Base+0x28f8>  // b.any
   18f54:	b	18f9c <__sanitizer_set_report_fd@@Base+0x2958>
   18f58:	and	x10, x11, #0xffffffffffffffe0
   18f5c:	add	x13, x9, x0
   18f60:	add	x12, x1, #0x10
   18f64:	add	x13, x13, #0x10
   18f68:	mov	x14, x10
   18f6c:	ldp	q0, q1, [x12, #-16]
   18f70:	add	x12, x12, #0x20
   18f74:	subs	x14, x14, #0x20
   18f78:	stp	q0, q1, [x13, #-16]
   18f7c:	add	x13, x13, #0x20
   18f80:	b.ne	18f6c <__sanitizer_set_report_fd@@Base+0x2928>  // b.any
   18f84:	cmp	x11, x10
   18f88:	b.eq	18f14 <__sanitizer_set_report_fd@@Base+0x28d0>  // b.none
   18f8c:	b	18e90 <__sanitizer_set_report_fd@@Base+0x284c>
   18f90:	ldrb	w12, [x1, x11]
   18f94:	strb	w12, [x10, x11]
   18f98:	add	x11, x11, #0x1
   18f9c:	cmp	x8, x11
   18fa0:	b.ne	18f90 <__sanitizer_set_report_fd@@Base+0x294c>  // b.any
   18fa4:	b	18de0 <__sanitizer_set_report_fd@@Base+0x279c>
   18fa8:	cbz	x1, 18fd0 <__sanitizer_set_report_fd@@Base+0x298c>
   18fac:	mov	x8, x0
   18fb0:	mov	x0, xzr
   18fb4:	ldrb	w9, [x8, x0]
   18fb8:	cbz	w9, 18fcc <__sanitizer_set_report_fd@@Base+0x2988>
   18fbc:	add	x0, x0, #0x1
   18fc0:	cmp	x1, x0
   18fc4:	b.ne	18fb4 <__sanitizer_set_report_fd@@Base+0x2970>  // b.any
   18fc8:	mov	x0, x1
   18fcc:	ret
   18fd0:	mov	x0, xzr
   18fd4:	ret
   18fd8:	sub	x8, x0, #0x1
   18fdc:	ldrb	w9, [x8, #1]!
   18fe0:	cbnz	w9, 18fdc <__sanitizer_set_report_fd@@Base+0x2998>
   18fe4:	mov	x9, xzr
   18fe8:	cbz	x2, 19008 <__sanitizer_set_report_fd@@Base+0x29c4>
   18fec:	ldrb	w10, [x1, x9]
   18ff0:	cbz	w10, 19008 <__sanitizer_set_report_fd@@Base+0x29c4>
   18ff4:	strb	w10, [x8, x9]
   18ff8:	add	x9, x9, #0x1
   18ffc:	cmp	x2, x9
   19000:	b.ne	18fec <__sanitizer_set_report_fd@@Base+0x29a8>  // b.any
   19004:	mov	x9, x2
   19008:	strb	wzr, [x8, x9]
   1900c:	ret
   19010:	mov	x9, xzr
   19014:	ldrb	w8, [x1, x9]
   19018:	add	x9, x9, #0x1
   1901c:	cbnz	w8, 19014 <__sanitizer_set_report_fd@@Base+0x29d0>
   19020:	sub	x8, x9, #0x1
   19024:	cmp	x8, x2
   19028:	b.cs	19064 <__sanitizer_set_report_fd@@Base+0x2a20>  // b.hs, b.nlast
   1902c:	cmp	x0, x1
   19030:	b.cs	190c4 <__sanitizer_set_report_fd@@Base+0x2a80>  // b.hs, b.nlast
   19034:	cmp	x9, #0x1
   19038:	b.lt	1919c <__sanitizer_set_report_fd@@Base+0x2b58>  // b.tstop
   1903c:	cmp	x9, #0x20
   19040:	b.cc	1905c <__sanitizer_set_report_fd@@Base+0x2a18>  // b.lo, b.ul, b.last
   19044:	add	x10, x1, x9
   19048:	cmp	x10, x0
   1904c:	b.ls	19128 <__sanitizer_set_report_fd@@Base+0x2ae4>  // b.plast
   19050:	add	x10, x0, x9
   19054:	cmp	x10, x1
   19058:	b.ls	19128 <__sanitizer_set_report_fd@@Base+0x2ae4>  // b.plast
   1905c:	mov	x10, xzr
   19060:	b	19188 <__sanitizer_set_report_fd@@Base+0x2b44>
   19064:	cbz	x2, 1919c <__sanitizer_set_report_fd@@Base+0x2b58>
   19068:	cmp	x0, x1
   1906c:	sub	x9, x2, #0x1
   19070:	b.cs	190f4 <__sanitizer_set_report_fd@@Base+0x2ab0>  // b.hs, b.nlast
   19074:	cmp	x9, #0x1
   19078:	b.lt	1911c <__sanitizer_set_report_fd@@Base+0x2ad8>  // b.tstop
   1907c:	cmp	x9, #0x20
   19080:	b.cc	1909c <__sanitizer_set_report_fd@@Base+0x2a58>  // b.lo, b.ul, b.last
   19084:	add	x10, x1, x9
   19088:	cmp	x10, x0
   1908c:	b.ls	19154 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.plast
   19090:	add	x10, x0, x9
   19094:	cmp	x10, x1
   19098:	b.ls	19154 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.plast
   1909c:	mov	x10, xzr
   190a0:	mvn	x12, x10
   190a4:	add	x11, x0, x10
   190a8:	add	x12, x12, x2
   190ac:	add	x10, x1, x10
   190b0:	ldrb	w13, [x10], #1
   190b4:	subs	x12, x12, #0x1
   190b8:	strb	w13, [x11], #1
   190bc:	b.ne	190b0 <__sanitizer_set_report_fd@@Base+0x2a6c>  // b.any
   190c0:	b	1911c <__sanitizer_set_report_fd@@Base+0x2ad8>
   190c4:	b.ls	1919c <__sanitizer_set_report_fd@@Base+0x2b58>  // b.plast
   190c8:	cmp	x9, #0x1
   190cc:	b.lt	1919c <__sanitizer_set_report_fd@@Base+0x2b58>  // b.tstop
   190d0:	mov	x9, x8
   190d4:	ldrb	w10, [x1, x9]
   190d8:	add	x11, x9, #0x1
   190dc:	sub	x12, x9, #0x1
   190e0:	cmp	x11, #0x1
   190e4:	strb	w10, [x0, x9]
   190e8:	mov	x9, x12
   190ec:	b.gt	190d4 <__sanitizer_set_report_fd@@Base+0x2a90>
   190f0:	b	1919c <__sanitizer_set_report_fd@@Base+0x2b58>
   190f4:	b.ls	1911c <__sanitizer_set_report_fd@@Base+0x2ad8>  // b.plast
   190f8:	cmp	x9, #0x1
   190fc:	b.lt	1911c <__sanitizer_set_report_fd@@Base+0x2ad8>  // b.tstop
   19100:	sub	x10, x0, #0x2
   19104:	sub	x11, x1, #0x2
   19108:	ldrb	w12, [x11, x2]
   1910c:	strb	w12, [x10, x2]
   19110:	sub	x2, x2, #0x1
   19114:	cmp	x2, #0x1
   19118:	b.gt	19108 <__sanitizer_set_report_fd@@Base+0x2ac4>
   1911c:	strb	wzr, [x0, x9]
   19120:	mov	x0, x8
   19124:	ret
   19128:	and	x10, x9, #0xffffffffffffffe0
   1912c:	add	x11, x1, #0x10
   19130:	add	x12, x0, #0x10
   19134:	mov	x13, x10
   19138:	ldp	q0, q1, [x11, #-16]
   1913c:	add	x11, x11, #0x20
   19140:	subs	x13, x13, #0x20
   19144:	stp	q0, q1, [x12, #-16]
   19148:	add	x12, x12, #0x20
   1914c:	b.ne	19138 <__sanitizer_set_report_fd@@Base+0x2af4>  // b.any
   19150:	b	19194 <__sanitizer_set_report_fd@@Base+0x2b50>
   19154:	and	x10, x9, #0xffffffffffffffe0
   19158:	add	x11, x1, #0x10
   1915c:	add	x12, x0, #0x10
   19160:	mov	x13, x10
   19164:	ldp	q0, q1, [x11, #-16]
   19168:	add	x11, x11, #0x20
   1916c:	subs	x13, x13, #0x20
   19170:	stp	q0, q1, [x12, #-16]
   19174:	add	x12, x12, #0x20
   19178:	b.ne	19164 <__sanitizer_set_report_fd@@Base+0x2b20>  // b.any
   1917c:	cmp	x9, x10
   19180:	b.eq	1911c <__sanitizer_set_report_fd@@Base+0x2ad8>  // b.none
   19184:	b	190a0 <__sanitizer_set_report_fd@@Base+0x2a5c>
   19188:	ldrb	w11, [x1, x10]
   1918c:	strb	w11, [x0, x10]
   19190:	add	x10, x10, #0x1
   19194:	cmp	x9, x10
   19198:	b.ne	19188 <__sanitizer_set_report_fd@@Base+0x2b44>  // b.any
   1919c:	mov	x0, x8
   191a0:	ret
   191a4:	mov	x10, xzr
   191a8:	cbz	x2, 191c8 <__sanitizer_set_report_fd@@Base+0x2b84>
   191ac:	ldrb	w8, [x1, x10]
   191b0:	cbz	w8, 191c8 <__sanitizer_set_report_fd@@Base+0x2b84>
   191b4:	strb	w8, [x0, x10]
   191b8:	add	x10, x10, #0x1
   191bc:	cmp	x2, x10
   191c0:	b.ne	191ac <__sanitizer_set_report_fd@@Base+0x2b68>  // b.any
   191c4:	mov	x10, x2
   191c8:	add	x8, x0, x10
   191cc:	sub	x9, x2, x10
   191d0:	orr	w11, w9, w8
   191d4:	tst	x11, #0xf
   191d8:	b.eq	191f0 <__sanitizer_set_report_fd@@Base+0x2bac>  // b.none
   191dc:	cbz	x9, 19250 <__sanitizer_set_report_fd@@Base+0x2c0c>
   191e0:	subs	x9, x9, #0x1
   191e4:	strb	wzr, [x8], #1
   191e8:	b.ne	191e0 <__sanitizer_set_report_fd@@Base+0x2b9c>  // b.any
   191ec:	b	19250 <__sanitizer_set_report_fd@@Base+0x2c0c>
   191f0:	and	x11, x9, #0xfffffffffffffff8
   191f4:	add	x9, x8, x11
   191f8:	cmp	x9, x8
   191fc:	b.ls	19250 <__sanitizer_set_report_fd@@Base+0x2c0c>  // b.plast
   19200:	sub	x11, x11, #0x1
   19204:	cmp	x11, #0x30
   19208:	b.cc	19244 <__sanitizer_set_report_fd@@Base+0x2c00>  // b.lo, b.ul, b.last
   1920c:	lsr	x11, x11, #4
   19210:	add	x12, x10, x0
   19214:	add	x10, x11, #0x1
   19218:	and	x11, x10, #0x1ffffffffffffffc
   1921c:	add	x12, x12, #0x20
   19220:	add	x8, x8, x11, lsl #4
   19224:	movi	v0.2d, #0x0
   19228:	mov	x13, x11
   1922c:	stp	q0, q0, [x12, #-32]
   19230:	stp	q0, q0, [x12], #64
   19234:	subs	x13, x13, #0x4
   19238:	b.ne	1922c <__sanitizer_set_report_fd@@Base+0x2be8>  // b.any
   1923c:	cmp	x10, x11
   19240:	b.eq	19250 <__sanitizer_set_report_fd@@Base+0x2c0c>  // b.none
   19244:	stp	xzr, xzr, [x8], #16
   19248:	cmp	x8, x9
   1924c:	b.cc	19244 <__sanitizer_set_report_fd@@Base+0x2c00>  // b.lo, b.ul, b.last
   19250:	ret
   19254:	mov	x8, xzr
   19258:	ldrb	w9, [x0, x8]
   1925c:	mov	x10, x8
   19260:	add	x8, x8, #0x1
   19264:	cbnz	w9, 19258 <__sanitizer_set_report_fd@@Base+0x2c14>
   19268:	mov	x11, xzr
   1926c:	ldrb	w9, [x1, x11]
   19270:	add	x11, x11, #0x1
   19274:	cbnz	w9, 1926c <__sanitizer_set_report_fd@@Base+0x2c28>
   19278:	sub	x9, x11, #0x1
   1927c:	cmp	x10, x9
   19280:	b.cs	1928c <__sanitizer_set_report_fd@@Base+0x2c48>  // b.hs, b.nlast
   19284:	mov	x0, xzr
   19288:	ret
   1928c:	cmp	x11, #0x1
   19290:	b.ne	19298 <__sanitizer_set_report_fd@@Base+0x2c54>  // b.any
   19294:	ret
   19298:	mov	x10, xzr
   1929c:	sub	x11, x8, x11
   192a0:	mov	x12, x0
   192a4:	mov	x13, xzr
   192a8:	add	x8, x0, x10
   192ac:	ldrb	w14, [x12, x13]
   192b0:	ldrb	w15, [x1, x13]
   192b4:	cmp	w14, w15
   192b8:	b.ne	192cc <__sanitizer_set_report_fd@@Base+0x2c88>  // b.any
   192bc:	add	x13, x13, #0x1
   192c0:	cmp	x9, x13
   192c4:	b.ne	192ac <__sanitizer_set_report_fd@@Base+0x2c68>  // b.any
   192c8:	b	192e0 <__sanitizer_set_report_fd@@Base+0x2c9c>
   192cc:	add	x10, x10, #0x1
   192d0:	mov	x8, xzr
   192d4:	cmp	x10, x11
   192d8:	add	x12, x12, #0x1
   192dc:	b.ls	192a4 <__sanitizer_set_report_fd@@Base+0x2c60>  // b.plast
   192e0:	mov	x0, x8
   192e4:	ret
   192e8:	str	x30, [sp, #-16]!
   192ec:	mov	x8, #0x1                   	// #1
   192f0:	movk	x8, #0x100, lsl #32
   192f4:	mov	x3, x1
   192f8:	cmp	x1, x8
   192fc:	b.cs	194b8 <__sanitizer_set_report_fd@@Base+0x2e74>  // b.hs, b.nlast
   19300:	add	x12, x0, #0x7
   19304:	add	x8, x0, x3
   19308:	and	x11, x12, #0xfffffffffffffff8
   1930c:	mov	x10, xzr
   19310:	cmp	x11, x0
   19314:	and	x9, x8, #0xfffffffffffffff8
   19318:	b.ls	193b0 <__sanitizer_set_report_fd@@Base+0x2d6c>  // b.plast
   1931c:	cbz	x3, 193b0 <__sanitizer_set_report_fd@@Base+0x2d6c>
   19320:	add	x10, x0, #0x1
   19324:	cmp	x8, x10
   19328:	mvn	x13, x0
   1932c:	csinc	x15, x8, x0, hi  // hi = pmore
   19330:	add	x14, x11, x13
   19334:	add	x13, x15, x13
   19338:	cmp	x14, x13
   1933c:	csel	x13, x14, x13, cc  // cc = lo, ul, last
   19340:	add	x14, x13, #0x1
   19344:	cmp	x14, #0x1
   19348:	b.hi	19358 <__sanitizer_set_report_fd@@Base+0x2d14>  // b.pmore
   1934c:	mov	x10, xzr
   19350:	mov	x13, x0
   19354:	b	19390 <__sanitizer_set_report_fd@@Base+0x2d4c>
   19358:	and	x17, x14, #0xfffffffffffffffe
   1935c:	mov	x15, xzr
   19360:	mov	x16, xzr
   19364:	add	x13, x0, x17
   19368:	mov	x18, x17
   1936c:	ldurb	w1, [x10, #-1]
   19370:	ldrb	w2, [x10], #2
   19374:	subs	x18, x18, #0x2
   19378:	orr	x15, x15, x1
   1937c:	orr	x16, x16, x2
   19380:	b.ne	1936c <__sanitizer_set_report_fd@@Base+0x2d28>  // b.any
   19384:	cmp	x17, x14
   19388:	orr	x10, x16, x15
   1938c:	b.eq	193b0 <__sanitizer_set_report_fd@@Base+0x2d6c>  // b.none
   19390:	add	x13, x13, #0x1
   19394:	ldurb	w14, [x13, #-1]
   19398:	cmp	x13, x11
   1939c:	orr	x10, x10, x14
   193a0:	b.cs	193b0 <__sanitizer_set_report_fd@@Base+0x2d6c>  // b.hs, b.nlast
   193a4:	cmp	x13, x8
   193a8:	add	x13, x13, #0x1
   193ac:	b.cc	19394 <__sanitizer_set_report_fd@@Base+0x2d50>  // b.lo, b.ul, b.last
   193b0:	cmp	x11, x9
   193b4:	b.cs	19438 <__sanitizer_set_report_fd@@Base+0x2df4>  // b.hs, b.nlast
   193b8:	orr	x12, x12, #0x7
   193bc:	eor	x12, x12, #0xfffffffffffffff8
   193c0:	add	x12, x9, x12
   193c4:	cmp	x12, #0x17
   193c8:	b.hi	193d4 <__sanitizer_set_report_fd@@Base+0x2d90>  // b.pmore
   193cc:	mov	x12, x11
   193d0:	b	19428 <__sanitizer_set_report_fd@@Base+0x2de4>
   193d4:	lsr	x12, x12, #3
   193d8:	movi	v1.2d, #0x0
   193dc:	add	x13, x12, #0x1
   193e0:	mov	v1.d[0], x10
   193e4:	and	x10, x13, #0x3ffffffffffffffc
   193e8:	movi	v0.2d, #0x0
   193ec:	add	x12, x11, x10, lsl #3
   193f0:	add	x11, x11, #0x10
   193f4:	mov	x14, x10
   193f8:	ldp	q2, q3, [x11, #-16]
   193fc:	subs	x14, x14, #0x4
   19400:	add	x11, x11, #0x20
   19404:	orr	v1.16b, v2.16b, v1.16b
   19408:	orr	v0.16b, v3.16b, v0.16b
   1940c:	b.ne	193f8 <__sanitizer_set_report_fd@@Base+0x2db4>  // b.any
   19410:	orr	v0.16b, v0.16b, v1.16b
   19414:	dup	v1.2d, v0.d[1]
   19418:	orr	v0.16b, v0.16b, v1.16b
   1941c:	cmp	x13, x10
   19420:	fmov	x10, d0
   19424:	b.eq	19438 <__sanitizer_set_report_fd@@Base+0x2df4>  // b.none
   19428:	ldr	x11, [x12], #8
   1942c:	cmp	x12, x9
   19430:	orr	x10, x11, x10
   19434:	b.cc	19428 <__sanitizer_set_report_fd@@Base+0x2de4>  // b.lo, b.ul, b.last
   19438:	cmp	x9, x0
   1943c:	b.cc	194a8 <__sanitizer_set_report_fd@@Base+0x2e64>  // b.lo, b.ul, b.last
   19440:	cmp	x8, x9
   19444:	b.ls	194a8 <__sanitizer_set_report_fd@@Base+0x2e64>  // b.plast
   19448:	sub	x11, x3, x9
   1944c:	add	x12, x0, x11
   19450:	cmp	x12, #0x2
   19454:	b.cs	19460 <__sanitizer_set_report_fd@@Base+0x2e1c>  // b.hs, b.nlast
   19458:	mov	x11, x9
   1945c:	b	19498 <__sanitizer_set_report_fd@@Base+0x2e54>
   19460:	and	x14, x12, #0xfffffffffffffffe
   19464:	mov	x13, xzr
   19468:	add	x11, x9, x14
   1946c:	add	x9, x9, #0x1
   19470:	mov	x15, x14
   19474:	ldurb	w16, [x9, #-1]
   19478:	ldrb	w17, [x9], #2
   1947c:	subs	x15, x15, #0x2
   19480:	orr	x10, x10, x16
   19484:	orr	x13, x13, x17
   19488:	b.ne	19474 <__sanitizer_set_report_fd@@Base+0x2e30>  // b.any
   1948c:	cmp	x14, x12
   19490:	orr	x10, x13, x10
   19494:	b.eq	194a8 <__sanitizer_set_report_fd@@Base+0x2e64>  // b.none
   19498:	ldrb	w9, [x11], #1
   1949c:	cmp	x8, x11
   194a0:	orr	x10, x10, x9
   194a4:	b.ne	19498 <__sanitizer_set_report_fd@@Base+0x2e54>  // b.any
   194a8:	cmp	x10, #0x0
   194ac:	cset	w0, eq  // eq = none
   194b0:	ldr	x30, [sp], #16
   194b4:	ret
   194b8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   194bc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   194c0:	add	x0, x0, #0x981
   194c4:	add	x2, x2, #0x9e5
   194c8:	mov	w1, #0x106                 	// #262
   194cc:	mov	x4, #0x10000000000         	// #1099511627776
   194d0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   194d4:	mov	w8, #0x4810                	// #18448
   194d8:	add	x0, x0, x8
   194dc:	b	1a144 <__sanitizer_set_report_fd@@Base+0x3b00>
   194e0:	str	x30, [sp, #-48]!
   194e4:	stp	x22, x21, [sp, #16]
   194e8:	stp	x20, x19, [sp, #32]
   194ec:	mov	w8, #0x4810                	// #18448
   194f0:	add	x19, x0, x8
   194f4:	mov	x20, x0
   194f8:	mov	x0, x19
   194fc:	mov	x21, x1
   19500:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   19504:	ldr	x22, [x20, #18536]
   19508:	cmp	x22, #0x400
   1950c:	b.cs	1954c <__sanitizer_set_report_fd@@Base+0x2f08>  // b.hs, b.nlast
   19510:	add	x8, x22, #0x1
   19514:	mov	x0, x21
   19518:	str	x8, [x20, #18536]
   1951c:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   19520:	add	x8, x20, x22, lsl #5
   19524:	mov	w9, #0x4888                	// #18568
   19528:	str	x0, [x8, #18544]
   1952c:	str	xzr, [x8, #18560]
   19530:	str	xzr, [x8, #18552]
   19534:	strb	wzr, [x8, x9]
   19538:	mov	x0, x19
   1953c:	ldp	x20, x19, [sp, #32]
   19540:	ldp	x22, x21, [sp, #16]
   19544:	ldr	x30, [sp], #48
   19548:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1954c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   19550:	ldr	x8, [x8, #4024]
   19554:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19558:	add	x0, x0, #0xa02
   1955c:	mov	w2, #0x400                 	// #1024
   19560:	ldr	x1, [x8]
   19564:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   19568:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1956c:	sub	sp, sp, #0xb0
   19570:	stp	x29, x30, [sp, #80]
   19574:	stp	x28, x27, [sp, #96]
   19578:	stp	x26, x25, [sp, #112]
   1957c:	stp	x24, x23, [sp, #128]
   19580:	stp	x22, x21, [sp, #144]
   19584:	stp	x20, x19, [sp, #160]
   19588:	mov	w8, #0x4810                	// #18448
   1958c:	add	x23, x0, x8
   19590:	mov	x20, x0
   19594:	mov	x0, x23
   19598:	mov	x21, x1
   1959c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   195a0:	add	x0, sp, #0x30
   195a4:	mov	w1, #0x1000                	// #4096
   195a8:	stp	xzr, xzr, [sp, #56]
   195ac:	str	xzr, [sp, #48]
   195b0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   195b4:	ldr	x8, [sp, #64]
   195b8:	cmp	x8, #0xfff
   195bc:	b.hi	195f4 <__sanitizer_set_report_fd@@Base+0x2fb0>  // b.pmore
   195c0:	ldr	x9, [sp, #56]
   195c4:	cmp	x9, #0xfff
   195c8:	b.hi	195dc <__sanitizer_set_report_fd@@Base+0x2f98>  // b.pmore
   195cc:	add	x0, sp, #0x30
   195d0:	mov	w1, #0x1000                	// #4096
   195d4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   195d8:	ldr	x8, [sp, #64]
   195dc:	ldr	x9, [sp, #48]
   195e0:	mov	w10, #0x1000                	// #4096
   195e4:	sub	x2, x10, x8
   195e8:	mov	w1, wzr
   195ec:	add	x0, x9, x8
   195f0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   195f4:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
   195f8:	ldr	q0, [x8, #3808]
   195fc:	ldr	x8, [sp, #48]
   19600:	str	q0, [sp, #64]
   19604:	strb	wzr, [x8]
   19608:	cbz	x21, 19694 <__sanitizer_set_report_fd@@Base+0x3050>
   1960c:	ldr	x8, [sp, #64]
   19610:	ldr	x1, [sp, #48]
   19614:	mov	x0, x21
   19618:	sub	x2, x8, #0x1
   1961c:	bl	19bb8 <__sanitizer_set_report_fd@@Base+0x3574>
   19620:	cbz	x0, 19694 <__sanitizer_set_report_fd@@Base+0x3050>
   19624:	ldr	x8, [sp, #64]
   19628:	cbz	x8, 199e4 <__sanitizer_set_report_fd@@Base+0x33a0>
   1962c:	ldr	x8, [sp, #48]
   19630:	ldrb	w8, [x8]
   19634:	cbz	w8, 19694 <__sanitizer_set_report_fd@@Base+0x3050>
   19638:	ldr	x8, [x20, #18536]
   1963c:	cbz	x8, 19694 <__sanitizer_set_report_fd@@Base+0x3050>
   19640:	mov	w8, #0x4888                	// #18568
   19644:	mov	x19, xzr
   19648:	add	x22, x20, x8
   1964c:	b	19664 <__sanitizer_set_report_fd@@Base+0x3020>
   19650:	ldr	x8, [x20, #18536]
   19654:	add	x19, x19, #0x1
   19658:	add	x22, x22, #0x20
   1965c:	cmp	x19, x8
   19660:	b.cs	19694 <__sanitizer_set_report_fd@@Base+0x3050>  // b.hs, b.nlast
   19664:	ldrb	w8, [x22]
   19668:	cbnz	w8, 19650 <__sanitizer_set_report_fd@@Base+0x300c>
   1966c:	ldur	x8, [x22, #-8]
   19670:	cbnz	x8, 19650 <__sanitizer_set_report_fd@@Base+0x300c>
   19674:	ldur	x0, [x22, #-24]
   19678:	mov	x1, x21
   1967c:	bl	13c58 <__sanitizer_report_error_summary@@Base+0x408>
   19680:	tbz	w0, #0, 19650 <__sanitizer_set_report_fd@@Base+0x300c>
   19684:	ldr	x0, [sp, #48]
   19688:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   1968c:	stur	x0, [x22, #-8]
   19690:	b	19650 <__sanitizer_set_report_fd@@Base+0x300c>
   19694:	add	x0, sp, #0x10
   19698:	str	x23, [sp, #8]
   1969c:	strb	wzr, [sp, #40]
   196a0:	bl	20b4c <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   196a4:	ldr	x8, [x20, #18536]
   196a8:	cbz	x8, 19804 <__sanitizer_set_report_fd@@Base+0x31c0>
   196ac:	mov	x23, xzr
   196b0:	b	196c4 <__sanitizer_set_report_fd@@Base+0x3080>
   196b4:	ldr	x8, [x20, #18536]
   196b8:	add	x23, x23, #0x1
   196bc:	cmp	x23, x8
   196c0:	b.cs	19804 <__sanitizer_set_report_fd@@Base+0x31c0>  // b.hs, b.nlast
   196c4:	ldr	x8, [sp, #32]
   196c8:	add	x25, x20, x23, lsl #5
   196cc:	mov	w9, #0x4870                	// #18544
   196d0:	add	x19, x25, x9
   196d4:	mov	w29, wzr
   196d8:	cbz	x8, 197cc <__sanitizer_set_report_fd@@Base+0x3188>
   196dc:	ldr	x27, [sp, #16]
   196e0:	mov	w9, #0x4880                	// #18560
   196e4:	add	x28, x25, x9
   196e8:	mov	w9, #0x4888                	// #18568
   196ec:	add	x26, x25, x9
   196f0:	mov	w9, #0x48                  	// #72
   196f4:	madd	x21, x8, x9, x27
   196f8:	mov	w8, #0x4878                	// #18552
   196fc:	add	x24, x25, x8
   19700:	b	19710 <__sanitizer_set_report_fd@@Base+0x30cc>
   19704:	add	x27, x27, #0x48
   19708:	cmp	x27, x21
   1970c:	b.eq	197cc <__sanitizer_set_report_fd@@Base+0x3188>  // b.none
   19710:	ldr	x22, [x27, #56]
   19714:	cbnz	x22, 19724 <__sanitizer_set_report_fd@@Base+0x30e0>
   19718:	b	19704 <__sanitizer_set_report_fd@@Base+0x30c0>
   1971c:	ldr	x22, [x22]
   19720:	cbz	x22, 19704 <__sanitizer_set_report_fd@@Base+0x30c0>
   19724:	ldrb	w8, [x22, #24]
   19728:	cbz	w8, 1971c <__sanitizer_set_report_fd@@Base+0x30d8>
   1972c:	ldr	x0, [x19]
   19730:	ldr	x1, [x27]
   19734:	bl	13c58 <__sanitizer_report_error_summary@@Base+0x408>
   19738:	tbz	w0, #0, 19750 <__sanitizer_set_report_fd@@Base+0x310c>
   1973c:	tbnz	w29, #0, 19984 <__sanitizer_set_report_fd@@Base+0x3340>
   19740:	ldrb	w8, [x26]
   19744:	cbz	w8, 19768 <__sanitizer_set_report_fd@@Base+0x3124>
   19748:	mov	w29, #0x1                   	// #1
   1974c:	b	1971c <__sanitizer_set_report_fd@@Base+0x30d8>
   19750:	ldr	x0, [x28]
   19754:	cbz	x0, 1971c <__sanitizer_set_report_fd@@Base+0x30d8>
   19758:	ldr	x1, [x27]
   1975c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   19760:	cbnz	w0, 1971c <__sanitizer_set_report_fd@@Base+0x30d8>
   19764:	b	1973c <__sanitizer_set_report_fd@@Base+0x30f8>
   19768:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1976c:	ldr	x8, [x8, #3808]
   19770:	ldr	w8, [x8]
   19774:	cbz	w8, 1978c <__sanitizer_set_report_fd@@Base+0x3148>
   19778:	ldr	x1, [x19]
   1977c:	ldr	x2, [x27]
   19780:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19784:	add	x0, x0, #0xa80
   19788:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1978c:	mov	w8, #0x1                   	// #1
   19790:	strb	w8, [x26]
   19794:	ldr	x0, [x27]
   19798:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   1979c:	str	x0, [x24]
   197a0:	ldr	x3, [x20]
   197a4:	cmp	x3, #0x80
   197a8:	b.cs	199c8 <__sanitizer_set_report_fd@@Base+0x3384>  // b.hs, b.nlast
   197ac:	ldur	q0, [x22, #8]
   197b0:	add	x8, x20, x3, lsl #4
   197b4:	add	x9, x3, #0x1
   197b8:	mov	w29, #0x1                   	// #1
   197bc:	stur	q0, [x8, #8]
   197c0:	dmb	ish
   197c4:	str	x9, [x20]
   197c8:	b	19704 <__sanitizer_set_report_fd@@Base+0x30c0>
   197cc:	tbnz	w29, #0, 196b4 <__sanitizer_set_report_fd@@Base+0x3070>
   197d0:	mov	w8, #0x4888                	// #18568
   197d4:	ldrb	w8, [x25, x8]
   197d8:	cbz	w8, 196b4 <__sanitizer_set_report_fd@@Base+0x3070>
   197dc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   197e0:	ldr	x8, [x8, #4024]
   197e4:	add	x9, x20, x23, lsl #5
   197e8:	ldr	x2, [x9, #18552]
   197ec:	ldr	x3, [x19]
   197f0:	ldr	x1, [x8]
   197f4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   197f8:	add	x0, x0, #0xb64
   197fc:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   19800:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   19804:	mov	w8, #0xc870                	// #51312
   19808:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1980c:	ldrb	w8, [x20, x8]
   19810:	ldr	x22, [x22, #3808]
   19814:	cbz	w8, 1992c <__sanitizer_set_report_fd@@Base+0x32e8>
   19818:	ldr	x8, [sp, #32]
   1981c:	cbz	x8, 1992c <__sanitizer_set_report_fd@@Base+0x32e8>
   19820:	ldr	x19, [sp, #16]
   19824:	mov	w9, #0x48                  	// #72
   19828:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1982c:	add	x23, x20, #0x818
   19830:	madd	x24, x8, x9, x19
   19834:	add	x21, x21, #0xbbc
   19838:	b	19848 <__sanitizer_set_report_fd@@Base+0x3204>
   1983c:	add	x19, x19, #0x48
   19840:	cmp	x19, x24
   19844:	b.eq	1992c <__sanitizer_set_report_fd@@Base+0x32e8>  // b.none
   19848:	ldrb	w8, [x19, #44]
   1984c:	cbz	w8, 1983c <__sanitizer_set_report_fd@@Base+0x31f8>
   19850:	ldr	x25, [x19, #56]
   19854:	cbnz	x25, 19864 <__sanitizer_set_report_fd@@Base+0x3220>
   19858:	b	1983c <__sanitizer_set_report_fd@@Base+0x31f8>
   1985c:	ldr	x25, [x25]
   19860:	cbz	x25, 1983c <__sanitizer_set_report_fd@@Base+0x31f8>
   19864:	ldrb	w8, [x25, #24]
   19868:	cbz	w8, 1985c <__sanitizer_set_report_fd@@Base+0x3218>
   1986c:	ldr	x8, [x25, #8]
   19870:	ldr	x9, [x20, #2056]
   19874:	dmb	ish
   19878:	cbz	x9, 198ec <__sanitizer_set_report_fd@@Base+0x32a8>
   1987c:	mov	x10, x23
   19880:	b	19890 <__sanitizer_set_report_fd@@Base+0x324c>
   19884:	subs	x9, x9, #0x1
   19888:	add	x10, x10, #0x10
   1988c:	b.eq	198ec <__sanitizer_set_report_fd@@Base+0x32a8>  // b.none
   19890:	ldur	x11, [x10, #-8]
   19894:	cmp	x11, x8
   19898:	b.hi	19884 <__sanitizer_set_report_fd@@Base+0x3240>  // b.pmore
   1989c:	ldr	x11, [x10]
   198a0:	cmp	x11, x8
   198a4:	b.ls	19884 <__sanitizer_set_report_fd@@Base+0x3240>  // b.plast
   198a8:	ldr	x9, [x25, #16]
   198ac:	ldr	x8, [x20, #2056]
   198b0:	dmb	ish
   198b4:	cbz	x8, 198ec <__sanitizer_set_report_fd@@Base+0x32a8>
   198b8:	sub	x9, x9, #0x1
   198bc:	mov	x10, x23
   198c0:	b	198d0 <__sanitizer_set_report_fd@@Base+0x328c>
   198c4:	subs	x8, x8, #0x1
   198c8:	add	x10, x10, #0x10
   198cc:	b.eq	198ec <__sanitizer_set_report_fd@@Base+0x32a8>  // b.none
   198d0:	ldur	x11, [x10, #-8]
   198d4:	cmp	x11, x9
   198d8:	b.hi	198c4 <__sanitizer_set_report_fd@@Base+0x3280>  // b.pmore
   198dc:	ldr	x11, [x10]
   198e0:	cmp	x11, x9
   198e4:	b.ls	198c4 <__sanitizer_set_report_fd@@Base+0x3280>  // b.plast
   198e8:	b	1985c <__sanitizer_set_report_fd@@Base+0x3218>
   198ec:	ldr	w8, [x22]
   198f0:	cbz	w8, 19904 <__sanitizer_set_report_fd@@Base+0x32c0>
   198f4:	ldp	x1, x2, [x25, #8]
   198f8:	ldr	x3, [x19]
   198fc:	mov	x0, x21
   19900:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   19904:	ldr	x3, [x20, #2056]
   19908:	cmp	x3, #0x400
   1990c:	b.cs	199ac <__sanitizer_set_report_fd@@Base+0x3368>  // b.hs, b.nlast
   19910:	ldur	q0, [x25, #8]
   19914:	add	x8, x20, x3, lsl #4
   19918:	add	x9, x3, #0x1
   1991c:	str	q0, [x8, #2064]
   19920:	dmb	ish
   19924:	str	x9, [x20, #2056]
   19928:	b	1985c <__sanitizer_set_report_fd@@Base+0x3218>
   1992c:	ldr	x8, [sp, #32]
   19930:	cbz	x8, 19954 <__sanitizer_set_report_fd@@Base+0x3310>
   19934:	ldr	x20, [sp, #16]
   19938:	add	x8, x8, x8, lsl #3
   1993c:	lsl	x19, x8, #3
   19940:	mov	x0, x20
   19944:	bl	13998 <__sanitizer_report_error_summary@@Base+0x148>
   19948:	subs	x19, x19, #0x48
   1994c:	add	x20, x20, #0x48
   19950:	b.ne	19940 <__sanitizer_set_report_fd@@Base+0x32fc>  // b.any
   19954:	ldp	x0, x1, [sp, #48]
   19958:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1995c:	ldr	x0, [sp, #8]
   19960:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   19964:	ldp	x20, x19, [sp, #160]
   19968:	ldp	x22, x21, [sp, #144]
   1996c:	ldp	x24, x23, [sp, #128]
   19970:	ldp	x26, x25, [sp, #112]
   19974:	ldp	x28, x27, [sp, #96]
   19978:	ldp	x29, x30, [sp, #80]
   1997c:	add	sp, sp, #0xb0
   19980:	ret
   19984:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   19988:	ldr	x8, [x8, #4024]
   1998c:	ldr	x2, [x19]
   19990:	ldr	x3, [x24]
   19994:	ldr	x4, [x27]
   19998:	ldr	x1, [x8]
   1999c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   199a0:	add	x0, x0, #0xa2c
   199a4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   199a8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   199ac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   199b0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   199b4:	add	x0, x0, #0xabf
   199b8:	add	x2, x2, #0xbef
   199bc:	mov	w1, #0x70                  	// #112
   199c0:	mov	w4, #0x400                 	// #1024
   199c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   199c8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   199cc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   199d0:	add	x0, x0, #0xabf
   199d4:	add	x2, x2, #0xb15
   199d8:	mov	w1, #0x53                  	// #83
   199dc:	mov	w4, #0x80                  	// #128
   199e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   199e4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   199e8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   199ec:	add	x0, x0, #0xb2f
   199f0:	add	x2, x2, #0x1eb
   199f4:	mov	w1, #0x1c5                 	// #453
   199f8:	mov	x3, xzr
   199fc:	mov	x4, xzr
   19a00:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   19a04:	mov	x1, xzr
   19a08:	b	1956c <__sanitizer_set_report_fd@@Base+0x2f28>
   19a0c:	cmn	x0, #0xfff
   19a10:	b.cc	19a28 <__sanitizer_set_report_fd@@Base+0x33e4>  // b.lo, b.ul, b.last
   19a14:	cbz	x1, 19a20 <__sanitizer_set_report_fd@@Base+0x33dc>
   19a18:	neg	w8, w0
   19a1c:	str	w8, [x1]
   19a20:	mov	w0, #0x1                   	// #1
   19a24:	ret
   19a28:	mov	w0, wzr
   19a2c:	ret
   19a30:	mov	w8, #0xde                  	// #222
   19a34:	sxtw	x2, w2
   19a38:	sxtw	x3, w3
   19a3c:	sxtw	x4, w4
   19a40:	svc	#0x0
   19a44:	ret
   19a48:	mov	w8, #0xd7                  	// #215
   19a4c:	svc	#0x0
   19a50:	ret
   19a54:	mov	w8, #0xe2                  	// #226
   19a58:	sxtw	x2, w2
   19a5c:	svc	#0x0
   19a60:	ret
   19a64:	mov	w8, #0x39                  	// #57
   19a68:	sxtw	x0, w0
   19a6c:	svc	#0x0
   19a70:	ret
   19a74:	mov	x9, x0
   19a78:	mov	x0, #0xffffffffffffff9c    	// #-100
   19a7c:	sxtw	x2, w1
   19a80:	mov	w8, #0x38                  	// #56
   19a84:	mov	x1, x9
   19a88:	svc	#0x0
   19a8c:	ret
   19a90:	mov	x9, x0
   19a94:	sxtw	x10, w1
   19a98:	mov	x0, #0xffffffffffffff9c    	// #-100
   19a9c:	mov	w3, w2
   19aa0:	mov	w8, #0x38                  	// #56
   19aa4:	mov	x1, x9
   19aa8:	mov	x2, x10
   19aac:	svc	#0x0
   19ab0:	ret
   19ab4:	sxtw	x9, w0
   19ab8:	mov	x0, x9
   19abc:	mov	w8, #0x3f                  	// #63
   19ac0:	svc	#0x0
   19ac4:	cmn	x0, #0xfff
   19ac8:	b.cc	19ad4 <__sanitizer_set_report_fd@@Base+0x3490>  // b.lo, b.ul, b.last
   19acc:	cmn	w0, #0x4
   19ad0:	b.eq	19ab8 <__sanitizer_set_report_fd@@Base+0x3474>  // b.none
   19ad4:	ret
   19ad8:	sxtw	x9, w0
   19adc:	mov	x0, x9
   19ae0:	mov	w8, #0x40                  	// #64
   19ae4:	svc	#0x0
   19ae8:	cmn	x0, #0xfff
   19aec:	b.cc	19af8 <__sanitizer_set_report_fd@@Base+0x34b4>  // b.lo, b.ul, b.last
   19af0:	cmn	w0, #0x4
   19af4:	b.eq	19adc <__sanitizer_set_report_fd@@Base+0x3498>  // b.none
   19af8:	ret
   19afc:	sxtw	x9, w0
   19b00:	mov	x0, x9
   19b04:	mov	w8, #0x2e                  	// #46
   19b08:	svc	#0x0
   19b0c:	cmn	x0, #0xfff
   19b10:	b.cc	19b1c <__sanitizer_set_report_fd@@Base+0x34d8>  // b.lo, b.ul, b.last
   19b14:	cmn	w0, #0x4
   19b18:	b.eq	19b00 <__sanitizer_set_report_fd@@Base+0x34bc>  // b.none
   19b1c:	ret
   19b20:	mov	x2, x1
   19b24:	mov	x1, x0
   19b28:	mov	x0, #0xffffffffffffff9c    	// #-100
   19b2c:	mov	w8, #0x4f                  	// #79
   19b30:	mov	x3, xzr
   19b34:	svc	#0x0
   19b38:	ret
   19b3c:	mov	x2, x1
   19b40:	mov	x1, x0
   19b44:	mov	x0, #0xffffffffffffff9c    	// #-100
   19b48:	mov	w8, #0x4f                  	// #79
   19b4c:	mov	w3, #0x100                 	// #256
   19b50:	svc	#0x0
   19b54:	ret
   19b58:	mov	w8, #0x50                  	// #80
   19b5c:	sxtw	x0, w0
   19b60:	svc	#0x0
   19b64:	ret
   19b68:	sub	sp, sp, #0x80
   19b6c:	mov	x1, sp
   19b70:	sxtw	x0, w0
   19b74:	mov	w8, #0x50                  	// #80
   19b78:	svc	#0x0
   19b7c:	ldr	x8, [sp, #48]
   19b80:	cmp	x0, #0x0
   19b84:	csinv	x0, x8, xzr, eq  // eq = none
   19b88:	add	sp, sp, #0x80
   19b8c:	ret
   19b90:	mov	w8, #0x17                  	// #23
   19b94:	sxtw	x0, w0
   19b98:	svc	#0x0
   19b9c:	ret
   19ba0:	mov	w8, #0x18                  	// #24
   19ba4:	sxtw	x0, w0
   19ba8:	sxtw	x1, w1
   19bac:	mov	x2, xzr
   19bb0:	svc	#0x0
   19bb4:	ret
   19bb8:	mov	x3, x2
   19bbc:	mov	x2, x1
   19bc0:	mov	x1, x0
   19bc4:	mov	x0, #0xffffffffffffff9c    	// #-100
   19bc8:	mov	w8, #0x4e                  	// #78
   19bcc:	svc	#0x0
   19bd0:	ret
   19bd4:	mov	x1, x0
   19bd8:	mov	x0, #0xffffffffffffff9c    	// #-100
   19bdc:	mov	w8, #0x23                  	// #35
   19be0:	mov	x2, xzr
   19be4:	svc	#0x0
   19be8:	ret
   19bec:	mov	x3, x1
   19bf0:	mov	x1, x0
   19bf4:	mov	x0, #0xffffffffffffff9c    	// #-100
   19bf8:	mov	w8, #0x26                  	// #38
   19bfc:	mov	x2, #0xffffffffffffff9c    	// #-100
   19c00:	svc	#0x0
   19c04:	ret
   19c08:	mov	w8, #0x7c                  	// #124
   19c0c:	svc	#0x0
   19c10:	ret
   19c14:	str	x30, [sp, #-16]!
   19c18:	mov	w8, #0x5e                  	// #94
   19c1c:	sxtw	x0, w0
   19c20:	svc	#0x0
   19c24:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   19c28:	sub	sp, sp, #0x10
   19c2c:	mov	w8, w0
   19c30:	mov	x0, sp
   19c34:	stp	x8, xzr, [sp]
   19c38:	mov	x1, sp
   19c3c:	mov	w8, #0x65                  	// #101
   19c40:	svc	#0x0
   19c44:	ldr	w8, [sp], #16
   19c48:	cmp	w0, #0x0
   19c4c:	csel	w0, wzr, w8, eq  // eq = none
   19c50:	ret
   19c54:	mov	w8, #0xdd                  	// #221
   19c58:	svc	#0x0
   19c5c:	ret
   19c60:	sub	sp, sp, #0x90
   19c64:	stp	x30, x19, [sp, #128]
   19c68:	mov	x19, x0
   19c6c:	bl	1ba88 <__sanitizer_set_report_fd@@Base+0x5444>
   19c70:	tbz	w0, #0, 19c84 <__sanitizer_set_report_fd@@Base+0x3640>
   19c74:	mov	w0, wzr
   19c78:	ldp	x30, x19, [sp, #128]
   19c7c:	add	sp, sp, #0x90
   19c80:	ret
   19c84:	mov	x0, #0xffffffffffffff9c    	// #-100
   19c88:	mov	x1, x19
   19c8c:	mov	x3, xzr
   19c90:	mov	x2, sp
   19c94:	mov	w8, #0x4f                  	// #79
   19c98:	svc	#0x0
   19c9c:	ldr	w8, [sp, #16]
   19ca0:	cmp	x0, #0x0
   19ca4:	cset	w9, eq  // eq = none
   19ca8:	and	w8, w8, #0xf000
   19cac:	cmp	w8, #0x8, lsl #12
   19cb0:	cset	w8, eq  // eq = none
   19cb4:	and	w0, w9, w8
   19cb8:	ldp	x30, x19, [sp, #128]
   19cbc:	add	sp, sp, #0x90
   19cc0:	ret
   19cc4:	mov	w8, #0xb2                  	// #178
   19cc8:	svc	#0x0
   19ccc:	ret
   19cd0:	mov	w8, #0x83                  	// #131
   19cd4:	sxtw	x0, w0
   19cd8:	sxtw	x2, w2
   19cdc:	svc	#0x0
   19ce0:	ret
   19ce4:	sub	sp, sp, #0x20
   19ce8:	str	x30, [sp, #16]
   19cec:	mov	x0, sp
   19cf0:	mov	w2, #0x10                  	// #16
   19cf4:	mov	w1, wzr
   19cf8:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   19cfc:	mov	x0, sp
   19d00:	mov	x1, xzr
   19d04:	mov	w8, #0xa9                  	// #169
   19d08:	svc	#0x0
   19d0c:	ldp	x8, x9, [sp]
   19d10:	mov	w10, #0xca00                	// #51712
   19d14:	ldr	x30, [sp, #16]
   19d18:	movk	w10, #0x3b9a, lsl #16
   19d1c:	mul	x8, x8, x10
   19d20:	mov	w10, #0x3e8                 	// #1000
   19d24:	madd	x0, x9, x10, x8
   19d28:	add	sp, sp, #0x20
   19d2c:	ret
   19d30:	mov	w8, #0x71                  	// #113
   19d34:	sxtw	x0, w0
   19d38:	svc	#0x0
   19d3c:	ret
   19d40:	sub	sp, sp, #0x40
   19d44:	stp	x30, x23, [sp, #16]
   19d48:	stp	x22, x21, [sp, #32]
   19d4c:	stp	x20, x19, [sp, #48]
   19d50:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19d54:	ldrb	w8, [x8, #1608]
   19d58:	mov	x19, x0
   19d5c:	tbnz	w8, #0, 19d9c <__sanitizer_set_report_fd@@Base+0x3758>
   19d60:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19d64:	add	x8, x8, #0x648
   19d68:	mov	w9, #0x1                   	// #1
   19d6c:	mov	x1, x8
   19d70:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19d74:	strb	w9, [x1], #8
   19d78:	add	x3, x8, #0x10
   19d7c:	add	x0, x0, #0xc48
   19d80:	add	x2, sp, #0x8
   19d84:	mov	w4, #0x4000000             	// #67108864
   19d88:	mov	x5, xzr
   19d8c:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   19d90:	tbnz	w0, #0, 19d9c <__sanitizer_set_report_fd@@Base+0x3758>
   19d94:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19d98:	str	xzr, [x8, #1616]
   19d9c:	adrp	x23, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19da0:	add	x23, x23, #0x650
   19da4:	ldr	x8, [x23]
   19da8:	mov	x0, xzr
   19dac:	cbz	x8, 19e44 <__sanitizer_set_report_fd@@Base+0x3800>
   19db0:	ldr	x8, [x23, #8]
   19db4:	cbz	x8, 19e44 <__sanitizer_set_report_fd@@Base+0x3800>
   19db8:	mov	x0, x19
   19dbc:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   19dc0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19dc4:	ldr	x21, [x8, #1616]
   19dc8:	ldrb	w8, [x21]
   19dcc:	cbz	w8, 19e40 <__sanitizer_set_report_fd@@Base+0x37fc>
   19dd0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   19dd4:	ldr	x2, [x8, #1624]
   19dd8:	mov	x20, x0
   19ddc:	mov	x0, x21
   19de0:	mov	w1, wzr
   19de4:	bl	18908 <__sanitizer_set_report_fd@@Base+0x22c4>
   19de8:	cbz	x0, 19e44 <__sanitizer_set_report_fd@@Base+0x3800>
   19dec:	mov	x22, x0
   19df0:	mov	x0, x21
   19df4:	mov	x1, x19
   19df8:	mov	x2, x20
   19dfc:	bl	18960 <__sanitizer_set_report_fd@@Base+0x231c>
   19e00:	cbnz	w0, 19e10 <__sanitizer_set_report_fd@@Base+0x37cc>
   19e04:	ldrb	w8, [x21, x20]
   19e08:	cmp	w8, #0x3d
   19e0c:	b.eq	19e58 <__sanitizer_set_report_fd@@Base+0x3814>  // b.none
   19e10:	ldrb	w8, [x22, #1]!
   19e14:	cbz	w8, 19e40 <__sanitizer_set_report_fd@@Base+0x37fc>
   19e18:	ldp	x9, x8, [x23]
   19e1c:	mov	x0, x22
   19e20:	mov	w1, wzr
   19e24:	mov	x21, x22
   19e28:	sub	x8, x8, x22
   19e2c:	add	x2, x8, x9
   19e30:	bl	18908 <__sanitizer_set_report_fd@@Base+0x22c4>
   19e34:	mov	x22, x0
   19e38:	cbnz	x0, 19df0 <__sanitizer_set_report_fd@@Base+0x37ac>
   19e3c:	b	19e44 <__sanitizer_set_report_fd@@Base+0x3800>
   19e40:	mov	x0, xzr
   19e44:	ldp	x20, x19, [sp, #48]
   19e48:	ldp	x22, x21, [sp, #32]
   19e4c:	ldp	x30, x23, [sp, #16]
   19e50:	add	sp, sp, #0x40
   19e54:	ret
   19e58:	add	x8, x21, x20
   19e5c:	add	x0, x8, #0x1
   19e60:	b	19e44 <__sanitizer_set_report_fd@@Base+0x3800>
   19e64:	sub	sp, sp, #0x30
   19e68:	str	x30, [sp, #16]
   19e6c:	stp	x20, x19, [sp, #32]
   19e70:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   19e74:	ldr	x8, [x8, #4048]
   19e78:	cbz	x8, 19e88 <__sanitizer_set_report_fd@@Base+0x3844>
   19e7c:	ldr	x8, [x8]
   19e80:	add	x19, x8, #0x8
   19e84:	b	19f98 <__sanitizer_set_report_fd@@Base+0x3954>
   19e88:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   19e8c:	add	x1, x1, #0x12
   19e90:	mov	w0, #0x3e80                	// #16000
   19e94:	mov	w2, wzr
   19e98:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   19e9c:	mov	x19, x0
   19ea0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19ea4:	add	x0, x0, #0xe68
   19ea8:	add	x1, sp, #0x18
   19eac:	add	x2, sp, #0x8
   19eb0:	mov	x3, sp
   19eb4:	mov	w4, #0x100000              	// #1048576
   19eb8:	mov	x5, xzr
   19ebc:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   19ec0:	mov	x10, x19
   19ec4:	tbz	w0, #0, 19f0c <__sanitizer_set_report_fd@@Base+0x38c8>
   19ec8:	ldr	x9, [sp, #24]
   19ecc:	mov	w8, #0x1                   	// #1
   19ed0:	str	x9, [x19]
   19ed4:	mov	w9, #0x1                   	// #1
   19ed8:	ldr	x10, [sp, #24]
   19edc:	ldrb	w11, [x10, x8]
   19ee0:	add	x8, x8, #0x1
   19ee4:	cbnz	w11, 19edc <__sanitizer_set_report_fd@@Base+0x3898>
   19ee8:	add	x11, x10, x8
   19eec:	ldrb	w12, [x11]
   19ef0:	add	x10, x19, w9, uxtw #3
   19ef4:	cbz	w12, 19f0c <__sanitizer_set_report_fd@@Base+0x38c8>
   19ef8:	cmp	w9, #0x7d0
   19efc:	str	x11, [x10]
   19f00:	b.cs	19fac <__sanitizer_set_report_fd@@Base+0x3968>  // b.hs, b.nlast
   19f04:	add	w9, w9, #0x1
   19f08:	b	19ed8 <__sanitizer_set_report_fd@@Base+0x3894>
   19f0c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   19f10:	add	x1, x1, #0x12
   19f14:	mov	w0, #0x3e80                	// #16000
   19f18:	mov	w2, wzr
   19f1c:	str	xzr, [x10]
   19f20:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   19f24:	mov	x20, x0
   19f28:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19f2c:	add	x0, x0, #0xc48
   19f30:	add	x1, sp, #0x18
   19f34:	add	x2, sp, #0x8
   19f38:	mov	x3, sp
   19f3c:	mov	w4, #0x100000              	// #1048576
   19f40:	mov	x5, xzr
   19f44:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   19f48:	mov	x10, x20
   19f4c:	tbz	w0, #0, 19f94 <__sanitizer_set_report_fd@@Base+0x3950>
   19f50:	ldr	x9, [sp, #24]
   19f54:	mov	w8, #0x1                   	// #1
   19f58:	str	x9, [x20]
   19f5c:	mov	w9, #0x1                   	// #1
   19f60:	ldr	x10, [sp, #24]
   19f64:	ldrb	w11, [x10, x8]
   19f68:	add	x8, x8, #0x1
   19f6c:	cbnz	w11, 19f64 <__sanitizer_set_report_fd@@Base+0x3920>
   19f70:	add	x11, x10, x8
   19f74:	ldrb	w12, [x11]
   19f78:	add	x10, x20, w9, uxtw #3
   19f7c:	cbz	w12, 19f94 <__sanitizer_set_report_fd@@Base+0x3950>
   19f80:	cmp	w9, #0x7d0
   19f84:	str	x11, [x10]
   19f88:	b.cs	19fac <__sanitizer_set_report_fd@@Base+0x3968>  // b.hs, b.nlast
   19f8c:	add	w9, w9, #0x1
   19f90:	b	19f60 <__sanitizer_set_report_fd@@Base+0x391c>
   19f94:	str	xzr, [x10]
   19f98:	mov	x0, x19
   19f9c:	ldp	x20, x19, [sp, #32]
   19fa0:	ldr	x30, [sp, #16]
   19fa4:	add	sp, sp, #0x30
   19fa8:	ret
   19fac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   19fb0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   19fb4:	mov	w3, w9
   19fb8:	add	x0, x0, #0xc5b
   19fbc:	add	x2, x2, #0x23
   19fc0:	mov	w1, #0x243                 	// #579
   19fc4:	mov	w4, #0x7cf                 	// #1999
   19fc8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   19fcc:	sub	sp, sp, #0x30
   19fd0:	stp	x30, x19, [sp, #32]
   19fd4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   19fd8:	ldr	x8, [x8, #4048]
   19fdc:	cbz	x8, 1a004 <__sanitizer_set_report_fd@@Base+0x39c0>
   19fe0:	ldr	x8, [x8]
   19fe4:	ldr	x9, [x8]
   19fe8:	lsl	x9, x9, #32
   19fec:	add	x8, x8, x9, asr #29
   19ff0:	add	x19, x8, #0x10
   19ff4:	mov	x0, x19
   19ff8:	ldp	x30, x19, [sp, #32]
   19ffc:	add	sp, sp, #0x30
   1a000:	ret
   1a004:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1a008:	add	x1, x1, #0x12
   1a00c:	mov	w0, #0x3e80                	// #16000
   1a010:	mov	w2, wzr
   1a014:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1a018:	mov	x19, x0
   1a01c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a020:	add	x0, x0, #0xe68
   1a024:	add	x1, sp, #0x18
   1a028:	add	x2, sp, #0x10
   1a02c:	add	x3, sp, #0x8
   1a030:	mov	w4, #0x100000              	// #1048576
   1a034:	mov	x5, xzr
   1a038:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1a03c:	mov	x10, x19
   1a040:	tbz	w0, #0, 1a088 <__sanitizer_set_report_fd@@Base+0x3a44>
   1a044:	ldr	x9, [sp, #24]
   1a048:	mov	w8, #0x1                   	// #1
   1a04c:	str	x9, [x19]
   1a050:	mov	w9, #0x1                   	// #1
   1a054:	ldr	x10, [sp, #24]
   1a058:	ldrb	w11, [x10, x8]
   1a05c:	add	x8, x8, #0x1
   1a060:	cbnz	w11, 1a058 <__sanitizer_set_report_fd@@Base+0x3a14>
   1a064:	add	x11, x10, x8
   1a068:	ldrb	w12, [x11]
   1a06c:	add	x10, x19, w9, uxtw #3
   1a070:	cbz	w12, 1a088 <__sanitizer_set_report_fd@@Base+0x3a44>
   1a074:	cmp	w9, #0x7d0
   1a078:	str	x11, [x10]
   1a07c:	b.cs	1a124 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.hs, b.nlast
   1a080:	add	w9, w9, #0x1
   1a084:	b	1a054 <__sanitizer_set_report_fd@@Base+0x3a10>
   1a088:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1a08c:	add	x1, x1, #0x12
   1a090:	mov	w0, #0x3e80                	// #16000
   1a094:	mov	w2, wzr
   1a098:	str	xzr, [x10]
   1a09c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1a0a0:	mov	x19, x0
   1a0a4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a0a8:	add	x0, x0, #0xc48
   1a0ac:	add	x1, sp, #0x18
   1a0b0:	add	x2, sp, #0x10
   1a0b4:	add	x3, sp, #0x8
   1a0b8:	mov	w4, #0x100000              	// #1048576
   1a0bc:	mov	x5, xzr
   1a0c0:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1a0c4:	mov	x10, x19
   1a0c8:	tbz	w0, #0, 1a110 <__sanitizer_set_report_fd@@Base+0x3acc>
   1a0cc:	ldr	x9, [sp, #24]
   1a0d0:	mov	w8, #0x1                   	// #1
   1a0d4:	str	x9, [x19]
   1a0d8:	mov	w9, #0x1                   	// #1
   1a0dc:	ldr	x10, [sp, #24]
   1a0e0:	ldrb	w11, [x10, x8]
   1a0e4:	add	x8, x8, #0x1
   1a0e8:	cbnz	w11, 1a0e0 <__sanitizer_set_report_fd@@Base+0x3a9c>
   1a0ec:	add	x11, x10, x8
   1a0f0:	ldrb	w12, [x11]
   1a0f4:	add	x10, x19, w9, uxtw #3
   1a0f8:	cbz	w12, 1a110 <__sanitizer_set_report_fd@@Base+0x3acc>
   1a0fc:	cmp	w9, #0x7d0
   1a100:	str	x11, [x10]
   1a104:	b.cs	1a124 <__sanitizer_set_report_fd@@Base+0x3ae0>  // b.hs, b.nlast
   1a108:	add	w9, w9, #0x1
   1a10c:	b	1a0dc <__sanitizer_set_report_fd@@Base+0x3a98>
   1a110:	str	xzr, [x10]
   1a114:	mov	x0, x19
   1a118:	ldp	x30, x19, [sp, #32]
   1a11c:	add	sp, sp, #0x30
   1a120:	ret
   1a124:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a128:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1a12c:	mov	w3, w9
   1a130:	add	x0, x0, #0xc5b
   1a134:	add	x2, x2, #0x23
   1a138:	mov	w1, #0x243                 	// #579
   1a13c:	mov	w4, #0x7cf                 	// #1999
   1a140:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a144:	mov	w2, #0x58                  	// #88
   1a148:	mov	w1, wzr
   1a14c:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a150:	str	x30, [sp, #-16]!
   1a154:	ldr	x3, [x0, #80]
   1a158:	cbnz	x3, 1a1c4 <__sanitizer_set_report_fd@@Base+0x3b80>
   1a15c:	mov	x9, x0
   1a160:	mov	w8, #0x1                   	// #1
   1a164:	ldaxr	w10, [x9]
   1a168:	stlxr	w11, w8, [x9]
   1a16c:	cbnz	w11, 1a164 <__sanitizer_set_report_fd@@Base+0x3b20>
   1a170:	cbz	w10, 1a1bc <__sanitizer_set_report_fd@@Base+0x3b78>
   1a174:	mov	w8, #0x2                   	// #2
   1a178:	ldaxr	w10, [x9]
   1a17c:	stlxr	w11, w8, [x9]
   1a180:	cbnz	w11, 1a178 <__sanitizer_set_report_fd@@Base+0x3b34>
   1a184:	cbz	w10, 1a1bc <__sanitizer_set_report_fd@@Base+0x3b78>
   1a188:	mov	w10, #0x2                   	// #2
   1a18c:	mov	x3, xzr
   1a190:	mov	x4, xzr
   1a194:	mov	x5, xzr
   1a198:	mov	x0, x9
   1a19c:	mov	w8, #0x62                  	// #98
   1a1a0:	mov	w1, #0x80                  	// #128
   1a1a4:	mov	w2, #0x2                   	// #2
   1a1a8:	svc	#0x0
   1a1ac:	ldaxr	w8, [x9]
   1a1b0:	stlxr	w11, w10, [x9]
   1a1b4:	cbnz	w11, 1a1ac <__sanitizer_set_report_fd@@Base+0x3b68>
   1a1b8:	cbnz	w8, 1a198 <__sanitizer_set_report_fd@@Base+0x3b54>
   1a1bc:	ldr	x30, [sp], #16
   1a1c0:	ret
   1a1c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a1c8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a1cc:	add	x0, x0, #0xc5b
   1a1d0:	add	x2, x2, #0xcad
   1a1d4:	mov	w1, #0x288                 	// #648
   1a1d8:	mov	x4, xzr
   1a1dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a1e0:	str	x30, [sp, #-16]!
   1a1e4:	dmb	ish
   1a1e8:	ldaxr	w8, [x0]
   1a1ec:	stlxr	w9, wzr, [x0]
   1a1f0:	cbnz	w9, 1a1e8 <__sanitizer_set_report_fd@@Base+0x3ba4>
   1a1f4:	cmp	w8, #0x2
   1a1f8:	b.eq	1a208 <__sanitizer_set_report_fd@@Base+0x3bc4>  // b.none
   1a1fc:	cbz	w8, 1a22c <__sanitizer_set_report_fd@@Base+0x3be8>
   1a200:	ldr	x30, [sp], #16
   1a204:	ret
   1a208:	mov	w8, #0x62                  	// #98
   1a20c:	mov	w1, #0x81                  	// #129
   1a210:	mov	w2, #0x1                   	// #1
   1a214:	mov	x3, xzr
   1a218:	mov	x4, xzr
   1a21c:	mov	x5, xzr
   1a220:	svc	#0x0
   1a224:	ldr	x30, [sp], #16
   1a228:	ret
   1a22c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a230:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a234:	add	x0, x0, #0xc5b
   1a238:	add	x2, x2, #0xcc1
   1a23c:	mov	w1, #0x29b                 	// #667
   1a240:	mov	x3, xzr
   1a244:	mov	x4, xzr
   1a248:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a24c:	str	x30, [sp, #-16]!
   1a250:	ldr	w8, [x0]
   1a254:	cbz	w8, 1a260 <__sanitizer_set_report_fd@@Base+0x3c1c>
   1a258:	ldr	x30, [sp], #16
   1a25c:	ret
   1a260:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a264:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a268:	add	x0, x0, #0xc5b
   1a26c:	add	x2, x2, #0xcda
   1a270:	mov	w1, #0x2a9                 	// #681
   1a274:	mov	x3, xzr
   1a278:	mov	x4, xzr
   1a27c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a280:	mov	w8, #0x75                  	// #117
   1a284:	sxtw	x0, w0
   1a288:	sxtw	x1, w1
   1a28c:	svc	#0x0
   1a290:	ret
   1a294:	mov	w8, #0x104                 	// #260
   1a298:	sxtw	x0, w0
   1a29c:	sxtw	x2, w2
   1a2a0:	mov	x3, xzr
   1a2a4:	svc	#0x0
   1a2a8:	ret
   1a2ac:	mov	w8, #0xac                  	// #172
   1a2b0:	svc	#0x0
   1a2b4:	ret
   1a2b8:	mov	w8, #0xad                  	// #173
   1a2bc:	svc	#0x0
   1a2c0:	ret
   1a2c4:	mov	w2, w2
   1a2c8:	sxtw	x0, w0
   1a2cc:	mov	w8, #0x3d                  	// #61
   1a2d0:	svc	#0x0
   1a2d4:	ret
   1a2d8:	mov	w8, #0x3e                  	// #62
   1a2dc:	sxtw	x0, w0
   1a2e0:	sxtw	x2, w2
   1a2e4:	svc	#0x0
   1a2e8:	ret
   1a2ec:	mov	w8, #0xa7                  	// #167
   1a2f0:	sxtw	x0, w0
   1a2f4:	svc	#0x0
   1a2f8:	ret
   1a2fc:	mov	w8, #0x84                  	// #132
   1a300:	svc	#0x0
   1a304:	ret
   1a308:	mov	w0, #0x11                  	// #17
   1a30c:	mov	w8, #0xdc                  	// #220
   1a310:	mov	x1, xzr
   1a314:	svc	#0x0
   1a318:	ret
   1a31c:	sub	sp, sp, #0x70
   1a320:	stp	x30, x23, [sp, #64]
   1a324:	stp	x22, x21, [sp, #80]
   1a328:	stp	x20, x19, [sp, #96]
   1a32c:	mov	x19, x2
   1a330:	mov	x20, x1
   1a334:	mov	w21, w0
   1a338:	add	x0, sp, #0x20
   1a33c:	mov	w2, #0x20                  	// #32
   1a340:	mov	w1, wzr
   1a344:	add	x22, sp, #0x20
   1a348:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a34c:	mov	x0, sp
   1a350:	mov	w2, #0x20                  	// #32
   1a354:	mov	w1, wzr
   1a358:	mov	x23, sp
   1a35c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a360:	cbz	x20, 1a390 <__sanitizer_set_report_fd@@Base+0x3d4c>
   1a364:	ldr	x8, [x20]
   1a368:	add	x0, x22, #0x18
   1a36c:	add	x1, x20, #0x8
   1a370:	mov	w2, #0x8                   	// #8
   1a374:	str	x8, [sp, #32]
   1a378:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1a37c:	ldrsw	x8, [x20, #136]
   1a380:	orr	x8, x8, #0x4000000
   1a384:	str	x8, [sp, #40]
   1a388:	ldr	x8, [x20, #144]
   1a38c:	str	x8, [sp, #48]
   1a390:	cmp	x20, #0x0
   1a394:	sxtw	x0, w21
   1a398:	csel	x1, x22, xzr, ne  // ne = any
   1a39c:	cmp	x19, #0x0
   1a3a0:	csel	x2, x23, xzr, ne  // ne = any
   1a3a4:	mov	w8, #0x86                  	// #134
   1a3a8:	mov	w3, #0x8                   	// #8
   1a3ac:	svc	#0x0
   1a3b0:	mov	x20, x0
   1a3b4:	cbz	x19, 1a3e8 <__sanitizer_set_report_fd@@Base+0x3da4>
   1a3b8:	cbnz	x20, 1a3e8 <__sanitizer_set_report_fd@@Base+0x3da4>
   1a3bc:	ldr	x8, [sp]
   1a3c0:	mov	x9, sp
   1a3c4:	add	x0, x19, #0x8
   1a3c8:	add	x1, x9, #0x18
   1a3cc:	mov	w2, #0x8                   	// #8
   1a3d0:	str	x8, [x19]
   1a3d4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1a3d8:	ldr	x8, [sp, #8]
   1a3dc:	str	w8, [x19, #136]
   1a3e0:	ldr	x8, [sp, #16]
   1a3e4:	str	x8, [x19, #144]
   1a3e8:	mov	w0, w20
   1a3ec:	ldp	x20, x19, [sp, #96]
   1a3f0:	ldp	x22, x21, [sp, #80]
   1a3f4:	ldp	x30, x23, [sp, #64]
   1a3f8:	add	sp, sp, #0x70
   1a3fc:	ret
   1a400:	mov	w8, #0x87                  	// #135
   1a404:	sxtw	x0, w0
   1a408:	mov	w3, #0x8                   	// #8
   1a40c:	svc	#0x0
   1a410:	ret
   1a414:	mov	w1, #0xff                  	// #255
   1a418:	mov	w2, #0x80                  	// #128
   1a41c:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a420:	mov	w2, #0x80                  	// #128
   1a424:	mov	w1, wzr
   1a428:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a42c:	str	x30, [sp, #-16]!
   1a430:	sub	w8, w1, #0x1
   1a434:	cmp	w8, #0x400
   1a438:	sxtw	x3, w8
   1a43c:	b.cs	1a464 <__sanitizer_set_report_fd@@Base+0x3e20>  // b.hs, b.nlast
   1a440:	lsr	x8, x3, #3
   1a444:	ldrb	w9, [x0, x8]
   1a448:	and	w10, w3, #0x7
   1a44c:	mov	w11, #0x1                   	// #1
   1a450:	lsl	w10, w11, w10
   1a454:	bic	w9, w9, w10
   1a458:	strb	w9, [x0, x8]
   1a45c:	ldr	x30, [sp], #16
   1a460:	ret
   1a464:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a468:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a46c:	add	x0, x0, #0xc5b
   1a470:	add	x2, x2, #0xd16
   1a474:	mov	w1, #0x364                 	// #868
   1a478:	mov	w4, #0x400                 	// #1024
   1a47c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a480:	str	x30, [sp, #-16]!
   1a484:	sub	w8, w1, #0x1
   1a488:	cmp	w8, #0x400
   1a48c:	sxtw	x3, w8
   1a490:	b.cs	1a4b0 <__sanitizer_set_report_fd@@Base+0x3e6c>  // b.hs, b.nlast
   1a494:	lsr	x8, x3, #3
   1a498:	ldrb	w8, [x0, x8]
   1a49c:	and	w9, w3, #0x7
   1a4a0:	lsr	w8, w8, w9
   1a4a4:	and	w0, w8, #0x1
   1a4a8:	ldr	x30, [sp], #16
   1a4ac:	ret
   1a4b0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a4b4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a4b8:	add	x0, x0, #0xc5b
   1a4bc:	add	x2, x2, #0xd16
   1a4c0:	mov	w1, #0x36e                 	// #878
   1a4c4:	mov	w4, #0x400                 	// #1024
   1a4c8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a4cc:	sub	sp, sp, #0x70
   1a4d0:	stp	x30, x21, [sp, #80]
   1a4d4:	stp	x20, x19, [sp, #96]
   1a4d8:	mov	w8, #0xffffffff            	// #-1
   1a4dc:	mov	x21, x0
   1a4e0:	stp	w1, w8, [x0]
   1a4e4:	str	xzr, [x21, #8]!
   1a4e8:	mov	w19, w1
   1a4ec:	mov	x20, x0
   1a4f0:	stp	xzr, xzr, [x0, #16]
   1a4f4:	mov	w1, #0x1000                	// #4096
   1a4f8:	mov	x0, x21
   1a4fc:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1a500:	ldr	x8, [x20, #24]
   1a504:	cmp	x8, #0xfff
   1a508:	b.hi	1a540 <__sanitizer_set_report_fd@@Base+0x3efc>  // b.pmore
   1a50c:	ldr	x9, [x20, #16]
   1a510:	cmp	x9, #0xfff
   1a514:	b.hi	1a528 <__sanitizer_set_report_fd@@Base+0x3ee4>  // b.pmore
   1a518:	mov	w1, #0x1000                	// #4096
   1a51c:	mov	x0, x21
   1a520:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1a524:	ldr	x8, [x20, #24]
   1a528:	ldr	x9, [x21]
   1a52c:	mov	w10, #0x1000                	// #4096
   1a530:	sub	x2, x10, x8
   1a534:	mov	w1, wzr
   1a538:	add	x0, x9, x8
   1a53c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a540:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a544:	mov	w8, #0x1000                	// #4096
   1a548:	add	x2, x2, #0xd38
   1a54c:	mov	x0, sp
   1a550:	mov	w1, #0x50                  	// #80
   1a554:	mov	w3, w19
   1a558:	str	x8, [x20, #24]
   1a55c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1a560:	mov	w8, #0x38                  	// #56
   1a564:	mov	x0, #0xffffffffffffff9c    	// #-100
   1a568:	mov	x1, sp
   1a56c:	mov	w2, #0x4000                	// #16384
   1a570:	svc	#0x0
   1a574:	mov	x8, #0xfffffffffffff001    	// #-4095
   1a578:	cmp	x8, w0, sxtw
   1a57c:	str	w0, [x20, #4]
   1a580:	b.hi	1a594 <__sanitizer_set_report_fd@@Base+0x3f50>  // b.pmore
   1a584:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a588:	add	x0, x0, #0xd47
   1a58c:	mov	w1, w19
   1a590:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1a594:	ldp	x20, x19, [sp, #96]
   1a598:	ldp	x30, x21, [sp, #80]
   1a59c:	add	sp, sp, #0x70
   1a5a0:	ret
   1a5a4:	str	x30, [sp, #-80]!
   1a5a8:	stp	x26, x25, [sp, #16]
   1a5ac:	stp	x24, x23, [sp, #32]
   1a5b0:	stp	x22, x21, [sp, #48]
   1a5b4:	stp	x20, x19, [sp, #64]
   1a5b8:	mov	x19, x0
   1a5bc:	ldrsw	x0, [x0, #4]
   1a5c0:	cmn	w0, #0x1, lsl #12
   1a5c4:	b.hi	1a74c <__sanitizer_set_report_fd@@Base+0x4108>  // b.pmore
   1a5c8:	mov	x20, x1
   1a5cc:	mov	x1, xzr
   1a5d0:	mov	x2, xzr
   1a5d4:	mov	w8, #0x3e                  	// #62
   1a5d8:	svc	#0x0
   1a5dc:	add	x21, x19, #0x8
   1a5e0:	mov	w22, #0x2                   	// #2
   1a5e4:	mov	w8, #0x1                   	// #1
   1a5e8:	str	xzr, [x20, #16]
   1a5ec:	b	1a610 <__sanitizer_set_report_fd@@Base+0x3fcc>
   1a5f0:	ldr	x9, [x21]
   1a5f4:	sub	x2, x22, x8
   1a5f8:	mov	w1, wzr
   1a5fc:	add	x0, x9, x8
   1a600:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a604:	mov	w8, wzr
   1a608:	str	x22, [x19, #24]
   1a60c:	mov	w22, #0x1                   	// #1
   1a610:	ldp	x23, x9, [x19, #16]
   1a614:	mov	w24, w8
   1a618:	subs	x2, x23, x9
   1a61c:	b.ls	1a630 <__sanitizer_set_report_fd@@Base+0x3fec>  // b.plast
   1a620:	ldr	x8, [x21]
   1a624:	mov	w1, wzr
   1a628:	add	x0, x8, x9
   1a62c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1a630:	cmp	x23, #0xfff
   1a634:	str	x23, [x19, #24]
   1a638:	b.ls	1a76c <__sanitizer_set_report_fd@@Base+0x4128>  // b.plast
   1a63c:	ldrsw	x0, [x19, #4]
   1a640:	ldr	x1, [x19, #8]
   1a644:	and	x2, x23, #0xffffffff
   1a648:	mov	w8, #0x3d                  	// #61
   1a64c:	svc	#0x0
   1a650:	cbz	x0, 1a750 <__sanitizer_set_report_fd@@Base+0x410c>
   1a654:	mov	x23, x0
   1a658:	cmn	x0, #0xfff
   1a65c:	b.cs	1a73c <__sanitizer_set_report_fd@@Base+0x40f8>  // b.hs, b.nlast
   1a660:	ldr	x0, [x21]
   1a664:	mov	w25, w22
   1a668:	add	x26, x0, x23
   1a66c:	cmp	x0, x26
   1a670:	b.cc	1a6c8 <__sanitizer_set_report_fd@@Base+0x4084>  // b.lo, b.ul, b.last
   1a674:	mov	w8, wzr
   1a678:	mov	w22, #0x1                   	// #1
   1a67c:	tbz	w24, #0, 1a610 <__sanitizer_set_report_fd@@Base+0x3fcc>
   1a680:	ldr	x8, [x19, #24]
   1a684:	sub	x9, x8, #0x400
   1a688:	cmp	x23, x9
   1a68c:	b.ls	1a708 <__sanitizer_set_report_fd@@Base+0x40c4>  // b.plast
   1a690:	lsl	x22, x8, #1
   1a694:	cmp	x8, x22
   1a698:	b.cs	1a604 <__sanitizer_set_report_fd@@Base+0x3fc0>  // b.hs, b.nlast
   1a69c:	ldr	x9, [x19, #16]
   1a6a0:	cmp	x9, x22
   1a6a4:	b.cs	1a5f0 <__sanitizer_set_report_fd@@Base+0x3fac>  // b.hs, b.nlast
   1a6a8:	mov	x0, x21
   1a6ac:	mov	x1, x22
   1a6b0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1a6b4:	ldr	x8, [x19, #24]
   1a6b8:	b	1a5f0 <__sanitizer_set_report_fd@@Base+0x3fac>
   1a6bc:	cmp	x22, x26
   1a6c0:	mov	x0, x22
   1a6c4:	b.cs	1a674 <__sanitizer_set_report_fd@@Base+0x4030>  // b.hs, b.nlast
   1a6c8:	ldr	x9, [x0]
   1a6cc:	ldrh	w8, [x0, #16]
   1a6d0:	cmp	x9, #0x1
   1a6d4:	add	x22, x0, x8
   1a6d8:	csinc	w25, w25, wzr, ne  // ne = any
   1a6dc:	cbz	x9, 1a6bc <__sanitizer_set_report_fd@@Base+0x4078>
   1a6e0:	ldrb	w8, [x0, #19]!
   1a6e4:	sub	w8, w8, #0x30
   1a6e8:	cmp	w8, #0x9
   1a6ec:	b.hi	1a6bc <__sanitizer_set_report_fd@@Base+0x4078>  // b.pmore
   1a6f0:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   1a6f4:	str	x0, [sp, #8]
   1a6f8:	add	x1, sp, #0x8
   1a6fc:	mov	x0, x20
   1a700:	bl	1afbc <__sanitizer_set_report_fd@@Base+0x4978>
   1a704:	b	1a6bc <__sanitizer_set_report_fd@@Base+0x4078>
   1a708:	ldr	x9, [x20, #16]
   1a70c:	mov	w8, wzr
   1a710:	mov	w22, w25
   1a714:	cbz	x9, 1a610 <__sanitizer_set_report_fd@@Base+0x3fcc>
   1a718:	ldr	x8, [x20]
   1a71c:	mov	x0, x19
   1a720:	add	x8, x8, x9, lsl #3
   1a724:	ldur	w1, [x8, #-8]
   1a728:	bl	1a78c <__sanitizer_set_report_fd@@Base+0x4148>
   1a72c:	tst	w0, #0x1
   1a730:	mov	w8, wzr
   1a734:	csinc	w22, w25, wzr, ne  // ne = any
   1a738:	b	1a610 <__sanitizer_set_report_fd@@Base+0x3fcc>
   1a73c:	ldr	w1, [x19]
   1a740:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a744:	add	x0, x0, #0xd8d
   1a748:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1a74c:	mov	w22, wzr
   1a750:	mov	w0, w22
   1a754:	ldp	x20, x19, [sp, #64]
   1a758:	ldp	x22, x21, [sp, #48]
   1a75c:	ldp	x24, x23, [sp, #32]
   1a760:	ldp	x26, x25, [sp, #16]
   1a764:	ldr	x30, [sp], #80
   1a768:	ret
   1a76c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a770:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a774:	add	x0, x0, #0xc5b
   1a778:	add	x2, x2, #0xd6e
   1a77c:	mov	w1, #0x398                 	// #920
   1a780:	mov	w4, #0x1000                	// #4096
   1a784:	mov	x3, x23
   1a788:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a78c:	sub	sp, sp, #0x70
   1a790:	str	x30, [sp, #80]
   1a794:	stp	x20, x19, [sp, #96]
   1a798:	mov	x19, x0
   1a79c:	ldr	w3, [x19], #8
   1a7a0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a7a4:	mov	x20, x0
   1a7a8:	mov	w4, w1
   1a7ac:	add	x2, x2, #0xdbf
   1a7b0:	mov	x0, sp
   1a7b4:	mov	w1, #0x50                  	// #80
   1a7b8:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1a7bc:	mov	x0, sp
   1a7c0:	mov	w2, #0x4000000             	// #67108864
   1a7c4:	mov	x1, x19
   1a7c8:	mov	x3, xzr
   1a7cc:	bl	16284 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2168>
   1a7d0:	tbz	w0, #0, 1a830 <__sanitizer_set_report_fd@@Base+0x41ec>
   1a7d4:	ldr	x8, [x20, #24]
   1a7d8:	cbz	x8, 1a830 <__sanitizer_set_report_fd@@Base+0x41ec>
   1a7dc:	add	x1, sp, #0x5c
   1a7e0:	mov	x0, x19
   1a7e4:	strb	wzr, [sp, #92]
   1a7e8:	bl	1b0c4 <__sanitizer_set_report_fd@@Base+0x4a80>
   1a7ec:	ldr	x0, [x19]
   1a7f0:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1a7f4:	add	x1, x1, #0x6d
   1a7f8:	bl	19254 <__sanitizer_set_report_fd@@Base+0x2c10>
   1a7fc:	cbz	x0, 1a820 <__sanitizer_set_report_fd@@Base+0x41dc>
   1a800:	mov	x19, x0
   1a804:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1a808:	add	x0, x0, #0x6d
   1a80c:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1a810:	add	x0, x19, x0
   1a814:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   1a818:	cmp	w0, #0x0
   1a81c:	cset	w0, ne  // ne = any
   1a820:	ldp	x20, x19, [sp, #96]
   1a824:	ldr	x30, [sp, #80]
   1a828:	add	sp, sp, #0x70
   1a82c:	ret
   1a830:	mov	w0, wzr
   1a834:	ldp	x20, x19, [sp, #96]
   1a838:	ldr	x30, [sp, #80]
   1a83c:	add	sp, sp, #0x70
   1a840:	ret
   1a844:	mov	x9, x0
   1a848:	ldrsw	x0, [x0, #4]
   1a84c:	cmn	w0, #0x1, lsl #12
   1a850:	b.hi	1a85c <__sanitizer_set_report_fd@@Base+0x4218>  // b.pmore
   1a854:	mov	w8, #0x39                  	// #57
   1a858:	svc	#0x0
   1a85c:	ldp	x0, x1, [x9, #8]
   1a860:	b	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1a864:	stp	x29, x30, [sp, #-16]!
   1a868:	mov	x29, sp
   1a86c:	cbz	x29, 1a88c <__sanitizer_set_report_fd@@Base+0x4248>
   1a870:	clz	x8, x29
   1a874:	neg	x8, x8
   1a878:	mov	x9, #0xffffffffffffffff    	// #-1
   1a87c:	lsl	x8, x9, x8
   1a880:	mvn	x0, x8
   1a884:	ldp	x29, x30, [sp], #16
   1a888:	ret
   1a88c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1a890:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1a894:	add	x0, x0, #0xb2f
   1a898:	add	x2, x2, #0xe2b
   1a89c:	mov	w1, #0x160                 	// #352
   1a8a0:	mov	x3, xzr
   1a8a4:	mov	x4, xzr
   1a8a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a8ac:	stp	x29, x30, [sp, #-16]!
   1a8b0:	mov	x29, sp
   1a8b4:	cbz	x29, 1a8d4 <__sanitizer_set_report_fd@@Base+0x4290>
   1a8b8:	clz	x8, x29
   1a8bc:	neg	x8, x8
   1a8c0:	mov	x9, #0xffffffffffffffff    	// #-1
   1a8c4:	lsl	x8, x9, x8
   1a8c8:	mvn	x0, x8
   1a8cc:	ldp	x29, x30, [sp], #16
   1a8d0:	ret
   1a8d4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1a8d8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1a8dc:	add	x0, x0, #0xb2f
   1a8e0:	add	x2, x2, #0xe2b
   1a8e4:	mov	w1, #0x160                 	// #352
   1a8e8:	mov	x3, xzr
   1a8ec:	mov	x4, xzr
   1a8f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a8f4:	mov	w0, #0x6                   	// #6
   1a8f8:	b	6d70 <getauxval@plt>
   1a8fc:	str	x30, [sp, #-32]!
   1a900:	stp	x20, x19, [sp, #16]
   1a904:	mov	x19, x1
   1a908:	mov	x20, x0
   1a90c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a910:	mov	x0, #0xffffffffffffff9c    	// #-100
   1a914:	add	x1, x1, #0xdd7
   1a918:	mov	w8, #0x4e                  	// #78
   1a91c:	mov	x2, x20
   1a920:	mov	x3, x19
   1a924:	svc	#0x0
   1a928:	mov	x3, x0
   1a92c:	cmn	x0, #0xfff
   1a930:	b.cc	1a96c <__sanitizer_set_report_fd@@Base+0x4328>  // b.lo, b.ul, b.last
   1a934:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a938:	neg	w1, w3
   1a93c:	add	x0, x0, #0xde6
   1a940:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1a944:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1a948:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a94c:	add	x2, x2, #0xba0
   1a950:	add	x3, x3, #0xdd7
   1a954:	mov	x0, x20
   1a958:	mov	x1, x19
   1a95c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1a960:	sxtw	x3, w0
   1a964:	cmp	x3, x19
   1a968:	b.cs	1a97c <__sanitizer_set_report_fd@@Base+0x4338>  // b.hs, b.nlast
   1a96c:	ldp	x20, x19, [sp, #16]
   1a970:	mov	x0, x3
   1a974:	ldr	x30, [sp], #32
   1a978:	ret
   1a97c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a980:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a984:	add	x0, x0, #0xc5b
   1a988:	add	x2, x2, #0xe46
   1a98c:	mov	w1, #0x45c                 	// #1116
   1a990:	mov	x4, x19
   1a994:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1a998:	sub	sp, sp, #0x30
   1a99c:	str	x30, [sp, #16]
   1a9a0:	stp	x20, x19, [sp, #32]
   1a9a4:	mov	x20, x0
   1a9a8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1a9ac:	mov	x19, x1
   1a9b0:	add	x0, x0, #0xe68
   1a9b4:	add	x1, sp, #0x18
   1a9b8:	add	x2, sp, #0x8
   1a9bc:	mov	x3, sp
   1a9c0:	mov	w4, #0x100000              	// #1048576
   1a9c4:	mov	x5, xzr
   1a9c8:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1a9cc:	tbz	w0, #0, 1a9fc <__sanitizer_set_report_fd@@Base+0x43b8>
   1a9d0:	ldr	x1, [sp, #24]
   1a9d4:	mov	x0, x20
   1a9d8:	mov	x2, x19
   1a9dc:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   1a9e0:	ldr	x0, [sp, #24]
   1a9e4:	ldr	x1, [sp, #8]
   1a9e8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1a9ec:	mov	x0, x20
   1a9f0:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1a9f4:	mov	x3, x0
   1a9f8:	b	1aa5c <__sanitizer_set_report_fd@@Base+0x4418>
   1a9fc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aa00:	mov	x0, #0xffffffffffffff9c    	// #-100
   1aa04:	add	x1, x1, #0xdd7
   1aa08:	mov	w8, #0x4e                  	// #78
   1aa0c:	mov	x2, x20
   1aa10:	mov	x3, x19
   1aa14:	svc	#0x0
   1aa18:	mov	x3, x0
   1aa1c:	cmn	x0, #0xfff
   1aa20:	b.cc	1aa5c <__sanitizer_set_report_fd@@Base+0x4418>  // b.lo, b.ul, b.last
   1aa24:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aa28:	neg	w1, w3
   1aa2c:	add	x0, x0, #0xde6
   1aa30:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1aa34:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1aa38:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aa3c:	add	x2, x2, #0xba0
   1aa40:	add	x3, x3, #0xdd7
   1aa44:	mov	x0, x20
   1aa48:	mov	x1, x19
   1aa4c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1aa50:	sxtw	x3, w0
   1aa54:	cmp	x3, x19
   1aa58:	b.cs	1aa70 <__sanitizer_set_report_fd@@Base+0x442c>  // b.hs, b.nlast
   1aa5c:	ldp	x20, x19, [sp, #32]
   1aa60:	ldr	x30, [sp, #16]
   1aa64:	mov	x0, x3
   1aa68:	add	sp, sp, #0x30
   1aa6c:	ret
   1aa70:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aa74:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aa78:	add	x0, x0, #0xc5b
   1aa7c:	add	x2, x2, #0xe46
   1aa80:	mov	w1, #0x45c                 	// #1116
   1aa84:	mov	x4, x19
   1aa88:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1aa8c:	stp	x30, x21, [sp, #-32]!
   1aa90:	stp	x20, x19, [sp, #16]
   1aa94:	mov	x19, x1
   1aa98:	sub	x20, x0, #0x1
   1aa9c:	ldrb	w8, [x20, #1]!
   1aaa0:	cbnz	w8, 1aa9c <__sanitizer_set_report_fd@@Base+0x4458>
   1aaa4:	cmp	x20, x0
   1aaa8:	b.ls	1aad0 <__sanitizer_set_report_fd@@Base+0x448c>  // b.plast
   1aaac:	sub	x8, x20, #0x1
   1aab0:	cmp	x8, x0
   1aab4:	ldrb	w9, [x8], #-1
   1aab8:	b.ls	1aac4 <__sanitizer_set_report_fd@@Base+0x4480>  // b.plast
   1aabc:	cmp	w9, #0x2f
   1aac0:	b.ne	1aab0 <__sanitizer_set_report_fd@@Base+0x446c>  // b.any
   1aac4:	add	x10, x8, #0x2
   1aac8:	cmp	w9, #0x2f
   1aacc:	csinc	x20, x10, x8, eq  // eq = none
   1aad0:	mov	x0, x19
   1aad4:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1aad8:	mov	x21, x0
   1aadc:	mov	x0, x20
   1aae0:	mov	x1, x19
   1aae4:	mov	x2, x21
   1aae8:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   1aaec:	cbz	w0, 1ab00 <__sanitizer_set_report_fd@@Base+0x44bc>
   1aaf0:	mov	w0, wzr
   1aaf4:	ldp	x20, x19, [sp, #16]
   1aaf8:	ldp	x30, x21, [sp], #32
   1aafc:	ret
   1ab00:	ldrb	w8, [x20, x21]
   1ab04:	sub	w8, w8, #0x2d
   1ab08:	cmp	w8, #0x2
   1ab0c:	cset	w0, cc  // cc = lo, ul, last
   1ab10:	ldp	x20, x19, [sp, #16]
   1ab14:	ldp	x30, x21, [sp], #32
   1ab18:	ret
   1ab1c:	stp	x30, x27, [sp, #-80]!
   1ab20:	stp	x26, x25, [sp, #16]
   1ab24:	stp	x24, x23, [sp, #32]
   1ab28:	stp	x22, x21, [sp, #48]
   1ab2c:	stp	x20, x19, [sp, #64]
   1ab30:	cbz	x0, 1ac5c <__sanitizer_set_report_fd@@Base+0x4618>
   1ab34:	ldr	x21, [x0]
   1ab38:	ldrh	w9, [x21, #56]
   1ab3c:	ldrh	w8, [x21, #54]
   1ab40:	mul	x9, x8, x9
   1ab44:	cbz	x9, 1ac34 <__sanitizer_set_report_fd@@Base+0x45f0>
   1ab48:	ldr	x11, [x21, #32]
   1ab4c:	mov	x19, x1
   1ab50:	mov	x10, xzr
   1ab54:	add	x22, x21, x11
   1ab58:	add	x23, x22, x9
   1ab5c:	mov	x11, #0xffffffffffffffff    	// #-1
   1ab60:	b	1ab70 <__sanitizer_set_report_fd@@Base+0x452c>
   1ab64:	add	x10, x10, x8
   1ab68:	cmp	x9, x10
   1ab6c:	b.eq	1ab90 <__sanitizer_set_report_fd@@Base+0x454c>  // b.none
   1ab70:	ldr	w12, [x22, x10]
   1ab74:	cmp	w12, #0x1
   1ab78:	b.ne	1ab64 <__sanitizer_set_report_fd@@Base+0x4520>  // b.any
   1ab7c:	add	x12, x22, x10
   1ab80:	ldr	x12, [x12, #16]
   1ab84:	cmp	x11, x12
   1ab88:	csel	x11, x12, x11, hi  // hi = pmore
   1ab8c:	b	1ab64 <__sanitizer_set_report_fd@@Base+0x4520>
   1ab90:	cbz	x9, 1ac34 <__sanitizer_set_report_fd@@Base+0x45f0>
   1ab94:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ab98:	ldr	x25, [x25, #4016]
   1ab9c:	sub	x24, x21, x11
   1aba0:	b	1abb0 <__sanitizer_set_report_fd@@Base+0x456c>
   1aba4:	add	x22, x22, w8, uxth
   1aba8:	cmp	x22, x23
   1abac:	b.eq	1ac34 <__sanitizer_set_report_fd@@Base+0x45f0>  // b.none
   1abb0:	ldr	w9, [x22]
   1abb4:	cmp	w9, #0x1
   1abb8:	b.ne	1aba4 <__sanitizer_set_report_fd@@Base+0x4560>  // b.any
   1abbc:	ldr	x8, [x22, #16]
   1abc0:	ldr	x0, [x25]
   1abc4:	ldr	x26, [x22, #40]
   1abc8:	add	x27, x8, x24
   1abcc:	cbz	x0, 1abdc <__sanitizer_set_report_fd@@Base+0x4598>
   1abd0:	neg	x8, x0
   1abd4:	and	x20, x27, x8
   1abd8:	b	1ac00 <__sanitizer_set_report_fd@@Base+0x45bc>
   1abdc:	mov	w0, #0x6                   	// #6
   1abe0:	bl	6d70 <getauxval@plt>
   1abe4:	neg	x8, x0
   1abe8:	and	x20, x27, x8
   1abec:	str	x0, [x25]
   1abf0:	cbnz	x0, 1ac00 <__sanitizer_set_report_fd@@Base+0x45bc>
   1abf4:	mov	w0, #0x6                   	// #6
   1abf8:	bl	6d70 <getauxval@plt>
   1abfc:	str	x0, [x25]
   1ac00:	sub	x8, x0, #0x1
   1ac04:	tst	x0, x8
   1ac08:	b.ne	1ac4c <__sanitizer_set_report_fd@@Base+0x4608>  // b.any
   1ac0c:	add	x8, x26, x27
   1ac10:	add	x8, x8, x0
   1ac14:	sub	x8, x8, #0x1
   1ac18:	neg	x9, x0
   1ac1c:	and	x8, x8, x9
   1ac20:	sub	x1, x8, x20
   1ac24:	mov	x0, x20
   1ac28:	blr	x19
   1ac2c:	ldrh	w8, [x21, #54]
   1ac30:	b	1aba4 <__sanitizer_set_report_fd@@Base+0x4560>
   1ac34:	ldp	x20, x19, [sp, #64]
   1ac38:	ldp	x22, x21, [sp, #48]
   1ac3c:	ldp	x24, x23, [sp, #32]
   1ac40:	ldp	x26, x25, [sp, #16]
   1ac44:	ldp	x30, x27, [sp], #80
   1ac48:	ret
   1ac4c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1ac50:	add	x0, x0, #0x20f
   1ac54:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1ac58:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1ac5c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1ac60:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1ac64:	add	x0, x0, #0xc5b
   1ac68:	add	x2, x2, #0xe7b
   1ac6c:	mov	w1, #0x481                 	// #1153
   1ac70:	mov	x3, xzr
   1ac74:	mov	x4, xzr
   1ac78:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ac7c:	str	x30, [sp, #-16]!
   1ac80:	cbz	x0, 1acd4 <__sanitizer_set_report_fd@@Base+0x4690>
   1ac84:	cbz	x1, 1acd4 <__sanitizer_set_report_fd@@Base+0x4690>
   1ac88:	ands	x8, x1, #0xf
   1ac8c:	b.ne	1ace0 <__sanitizer_set_report_fd@@Base+0x469c>  // b.any
   1ac90:	str	x0, [x1, #-16]!
   1ac94:	str	x3, [x1, #8]
   1ac98:	mov	w2, w2
   1ac9c:	mov	x0, x2
   1aca0:	mov	x2, x4
   1aca4:	mov	x3, x5
   1aca8:	mov	x4, x6
   1acac:	mov	x8, #0xdc                  	// #220
   1acb0:	svc	#0x0
   1acb4:	cmp	x0, #0x0
   1acb8:	b.ne	1accc <__sanitizer_set_report_fd@@Base+0x4688>  // b.any
   1acbc:	ldp	x1, x0, [sp], #16
   1acc0:	blr	x1
   1acc4:	mov	x8, #0x5d                  	// #93
   1acc8:	svc	#0x0
   1accc:	ldr	x30, [sp], #16
   1acd0:	ret
   1acd4:	mov	x0, #0xffffffffffffffea    	// #-22
   1acd8:	ldr	x30, [sp], #16
   1acdc:	ret
   1ace0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1ace4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1ace8:	add	x0, x0, #0xc5b
   1acec:	add	x2, x2, #0xe92
   1acf0:	mov	w1, #0x537                 	// #1335
   1acf4:	mov	x3, xzr
   1acf8:	mov	x4, x8
   1acfc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ad00:	sub	w8, w0, #0x4
   1ad04:	cmp	w8, #0x7
   1ad08:	b.hi	1ad18 <__sanitizer_set_report_fd@@Base+0x46d4>  // b.pmore
   1ad0c:	mov	w9, #0x9f                  	// #159
   1ad10:	lsr	w9, w9, w8
   1ad14:	tbnz	w9, #0, 1ad20 <__sanitizer_set_report_fd@@Base+0x46dc>
   1ad18:	mov	w0, wzr
   1ad1c:	ret
   1ad20:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ad24:	add	x9, x9, #0x740
   1ad28:	ldr	x8, [x9, w8, sxtw #3]
   1ad2c:	ldr	w0, [x8]
   1ad30:	cmp	w0, #0x1
   1ad34:	b.ne	1ad4c <__sanitizer_set_report_fd@@Base+0x4708>  // b.any
   1ad38:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ad3c:	ldr	x8, [x8, #4056]
   1ad40:	ldrb	w8, [x8, #96]
   1ad44:	cbz	w8, 1ad50 <__sanitizer_set_report_fd@@Base+0x470c>
   1ad48:	mov	w0, #0x1                   	// #1
   1ad4c:	ret
   1ad50:	mov	w0, #0x2                   	// #2
   1ad54:	ret
   1ad58:	sub	sp, sp, #0x130
   1ad5c:	stp	x29, x30, [sp, #272]
   1ad60:	stp	x20, x19, [sp, #288]
   1ad64:	mov	x19, x1
   1ad68:	mov	x20, x0
   1ad6c:	add	x0, sp, #0x90
   1ad70:	mov	w1, #0xff                  	// #255
   1ad74:	mov	w2, #0x80                  	// #128
   1ad78:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1ad7c:	ldrb	w8, [sp, #148]
   1ad80:	mov	w0, #0x2                   	// #2
   1ad84:	add	x1, sp, #0x90
   1ad88:	add	x2, sp, #0x10
   1ad8c:	and	w8, w8, #0xfe
   1ad90:	strb	w8, [sp, #148]
   1ad94:	mov	w8, #0x87                  	// #135
   1ad98:	mov	w3, #0x8                   	// #8
   1ad9c:	svc	#0x0
   1ada0:	add	x0, sp, #0x8
   1ada4:	mov	x1, xzr
   1ada8:	mov	x2, x20
   1adac:	mov	x3, x19
   1adb0:	bl	6db0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1adb4:	mov	w0, #0x2                   	// #2
   1adb8:	add	x1, sp, #0x10
   1adbc:	mov	w8, #0x87                  	// #135
   1adc0:	mov	x2, xzr
   1adc4:	mov	w3, #0x8                   	// #8
   1adc8:	svc	#0x0
   1adcc:	ldr	x0, [sp, #8]
   1add0:	ldp	x20, x19, [sp, #288]
   1add4:	ldp	x29, x30, [sp, #272]
   1add8:	add	sp, sp, #0x130
   1addc:	ret
   1ade0:	str	x30, [sp, #-16]!
   1ade4:	mov	x1, xzr
   1ade8:	bl	6b40 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1adec:	ldr	x30, [sp], #16
   1adf0:	ret
   1adf4:	ldr	x9, [x0, #8]
   1adf8:	ldr	w8, [x9, #468]
   1adfc:	cbz	w8, 1ae24 <__sanitizer_set_report_fd@@Base+0x47e0>
   1ae00:	mov	w10, #0x5201                	// #20993
   1ae04:	add	x9, x9, #0x1d0
   1ae08:	movk	w10, #0x4553, lsl #16
   1ae0c:	ldr	w11, [x9]
   1ae10:	cmp	w11, w10
   1ae14:	b.eq	1ae2c <__sanitizer_set_report_fd@@Base+0x47e8>  // b.none
   1ae18:	add	x9, x9, w8, uxtw
   1ae1c:	ldr	w8, [x9, #4]
   1ae20:	cbnz	w8, 1ae0c <__sanitizer_set_report_fd@@Base+0x47c8>
   1ae24:	mov	w0, wzr
   1ae28:	ret
   1ae2c:	ldrb	w8, [x9, #8]
   1ae30:	tst	w8, #0x40
   1ae34:	mov	w8, #0x1                   	// #1
   1ae38:	cinc	w0, w8, ne  // ne = any
   1ae3c:	ret
   1ae40:	ldr	x8, [x0]
   1ae44:	ldr	w9, [x8]
   1ae48:	cmp	w9, #0xb
   1ae4c:	b.ne	1ae60 <__sanitizer_set_report_fd@@Base+0x481c>  // b.any
   1ae50:	ldr	w8, [x8, #8]
   1ae54:	cmp	w8, #0x80
   1ae58:	cset	w0, ne  // ne = any
   1ae5c:	ret
   1ae60:	mov	w0, wzr
   1ae64:	ret
   1ae68:	ret
   1ae6c:	ldr	x8, [x0, #8]
   1ae70:	ldr	x9, [x8, #416]
   1ae74:	str	x9, [x0, #40]
   1ae78:	ldr	q0, [x8, #432]
   1ae7c:	ext	v0.16b, v0.16b, v0.16b, #8
   1ae80:	stur	q0, [x0, #24]
   1ae84:	ret
   1ae88:	ret
   1ae8c:	ret
   1ae90:	ret
   1ae94:	ret
   1ae98:	ret
   1ae9c:	tbnz	w1, #3, 1aea4 <__sanitizer_set_report_fd@@Base+0x4860>
   1aea0:	ret
   1aea4:	str	x30, [sp, #-16]!
   1aea8:	mov	x2, x0
   1aeac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aeb0:	add	x0, x0, #0xeb6
   1aeb4:	mov	x1, x2
   1aeb8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1aebc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1aec0:	str	x30, [sp, #-16]!
   1aec4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aec8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5620>
   1aecc:	add	x0, x0, #0xc5b
   1aed0:	add	x2, x2, #0xfc9
   1aed4:	mov	w1, #0x83a                 	// #2106
   1aed8:	mov	x3, xzr
   1aedc:	mov	x4, xzr
   1aee0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1aee4:	mov	x10, x0
   1aee8:	mov	w0, wzr
   1aeec:	cbz	x10, 1afb8 <__sanitizer_set_report_fd@@Base+0x4974>
   1aef0:	sub	x8, x1, #0x1
   1aef4:	mov	x9, x1
   1aef8:	cmp	x8, #0xff
   1aefc:	b.hi	1afb8 <__sanitizer_set_report_fd@@Base+0x4974>  // b.pmore
   1af00:	adrp	x11, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1af04:	ldrb	w8, [x11, #1600]
   1af08:	cbnz	w8, 1af48 <__sanitizer_set_report_fd@@Base+0x4904>
   1af0c:	mvn	w8, w2
   1af10:	mov	x0, x10
   1af14:	and	x2, x8, #0x1
   1af18:	mov	w8, #0x116                 	// #278
   1af1c:	mov	x1, x9
   1af20:	svc	#0x0
   1af24:	cmn	x0, #0xfff
   1af28:	b.cc	1af40 <__sanitizer_set_report_fd@@Base+0x48fc>  // b.lo, b.ul, b.last
   1af2c:	cmn	w0, #0x26
   1af30:	b.ne	1af40 <__sanitizer_set_report_fd@@Base+0x48fc>  // b.any
   1af34:	mov	w8, #0x1                   	// #1
   1af38:	strb	w8, [x11, #1600]
   1af3c:	b	1af48 <__sanitizer_set_report_fd@@Base+0x4904>
   1af40:	cmp	x0, x9
   1af44:	b.eq	1afb4 <__sanitizer_set_report_fd@@Base+0x4970>  // b.none
   1af48:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1af4c:	mov	x0, #0xffffffffffffff9c    	// #-100
   1af50:	add	x1, x1, #0x5
   1af54:	mov	w8, #0x38                  	// #56
   1af58:	mov	x2, xzr
   1af5c:	svc	#0x0
   1af60:	cmn	x0, #0x1, lsl #12
   1af64:	b.ls	1af70 <__sanitizer_set_report_fd@@Base+0x492c>  // b.plast
   1af68:	mov	w0, wzr
   1af6c:	ret
   1af70:	sxtw	x11, w0
   1af74:	mov	x0, x11
   1af78:	mov	w8, #0x3f                  	// #63
   1af7c:	mov	x1, x10
   1af80:	mov	x2, x9
   1af84:	svc	#0x0
   1af88:	cmn	x0, #0xfff
   1af8c:	b.cc	1af98 <__sanitizer_set_report_fd@@Base+0x4954>  // b.lo, b.ul, b.last
   1af90:	cmn	w0, #0x4
   1af94:	b.eq	1af74 <__sanitizer_set_report_fd@@Base+0x4930>  // b.none
   1af98:	cmn	x0, #0x1, lsl #12
   1af9c:	b.ls	1afa8 <__sanitizer_set_report_fd@@Base+0x4964>  // b.plast
   1afa0:	mov	w0, wzr
   1afa4:	ret
   1afa8:	mov	x0, x11
   1afac:	mov	w8, #0x39                  	// #57
   1afb0:	svc	#0x0
   1afb4:	mov	w0, #0x1                   	// #1
   1afb8:	ret
   1afbc:	str	x30, [sp, #-32]!
   1afc0:	stp	x20, x19, [sp, #16]
   1afc4:	ldp	x8, x3, [x0, #8]
   1afc8:	lsr	x4, x8, #3
   1afcc:	cmp	x3, x4
   1afd0:	b.hi	1b058 <__sanitizer_set_report_fd@@Base+0x4a14>  // b.pmore
   1afd4:	mov	x19, x0
   1afd8:	mov	x20, x1
   1afdc:	b.ne	1b034 <__sanitizer_set_report_fd@@Base+0x49f0>  // b.any
   1afe0:	adds	x3, x3, #0x1
   1afe4:	b.cs	1b070 <__sanitizer_set_report_fd@@Base+0x4a2c>  // b.hs, b.nlast
   1afe8:	sub	x8, x3, #0x1
   1afec:	tst	x3, x8
   1aff0:	b.ne	1affc <__sanitizer_set_report_fd@@Base+0x49b8>  // b.any
   1aff4:	mov	x8, x3
   1aff8:	b	1b024 <__sanitizer_set_report_fd@@Base+0x49e0>
   1affc:	clz	x8, x3
   1b000:	eor	x9, x8, #0x3f
   1b004:	mov	w8, #0x2                   	// #2
   1b008:	lsl	x8, x8, x9
   1b00c:	cmp	x8, x3
   1b010:	b.ls	1b090 <__sanitizer_set_report_fd@@Base+0x4a4c>  // b.plast
   1b014:	mov	w10, #0x1                   	// #1
   1b018:	lsl	x4, x10, x9
   1b01c:	cmp	x4, x3
   1b020:	b.cs	1b0ac <__sanitizer_set_report_fd@@Base+0x4a68>  // b.hs, b.nlast
   1b024:	mov	x0, x19
   1b028:	mov	x1, x8
   1b02c:	bl	1b1c8 <__sanitizer_set_report_fd@@Base+0x4b84>
   1b030:	ldr	x3, [x19, #16]
   1b034:	add	x9, x3, #0x1
   1b038:	ldr	x8, [x19]
   1b03c:	str	x9, [x19, #16]
   1b040:	mov	x1, x20
   1b044:	ldp	x20, x19, [sp, #16]
   1b048:	add	x0, x8, x3, lsl #3
   1b04c:	mov	w2, #0x8                   	// #8
   1b050:	ldr	x30, [sp], #32
   1b054:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1b058:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b05c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b060:	add	x0, x0, #0xb2f
   1b064:	add	x2, x2, #0x41
   1b068:	mov	w1, #0x1cd                 	// #461
   1b06c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b070:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b074:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b078:	add	x0, x0, #0xb2f
   1b07c:	add	x2, x2, #0x5d
   1b080:	mov	w1, #0x186                 	// #390
   1b084:	mov	x3, xzr
   1b088:	mov	x4, xzr
   1b08c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b090:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b094:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b098:	add	x0, x0, #0xb2f
   1b09c:	add	x2, x2, #0x156
   1b0a0:	mov	w1, #0x18a                 	// #394
   1b0a4:	mov	x4, x8
   1b0a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b0ac:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b0b0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b0b4:	add	x0, x0, #0xb2f
   1b0b8:	add	x2, x2, #0x178
   1b0bc:	mov	w1, #0x18b                 	// #395
   1b0c0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b0c4:	str	x30, [sp, #-32]!
   1b0c8:	stp	x20, x19, [sp, #16]
   1b0cc:	ldp	x4, x3, [x0, #8]
   1b0d0:	cmp	x3, x4
   1b0d4:	b.hi	1b15c <__sanitizer_set_report_fd@@Base+0x4b18>  // b.pmore
   1b0d8:	mov	x19, x0
   1b0dc:	mov	x20, x1
   1b0e0:	b.ne	1b138 <__sanitizer_set_report_fd@@Base+0x4af4>  // b.any
   1b0e4:	adds	x3, x3, #0x1
   1b0e8:	b.cs	1b174 <__sanitizer_set_report_fd@@Base+0x4b30>  // b.hs, b.nlast
   1b0ec:	sub	x8, x3, #0x1
   1b0f0:	tst	x3, x8
   1b0f4:	b.ne	1b100 <__sanitizer_set_report_fd@@Base+0x4abc>  // b.any
   1b0f8:	mov	x8, x3
   1b0fc:	b	1b128 <__sanitizer_set_report_fd@@Base+0x4ae4>
   1b100:	clz	x8, x3
   1b104:	eor	x9, x8, #0x3f
   1b108:	mov	w8, #0x2                   	// #2
   1b10c:	lsl	x8, x8, x9
   1b110:	cmp	x8, x3
   1b114:	b.ls	1b194 <__sanitizer_set_report_fd@@Base+0x4b50>  // b.plast
   1b118:	mov	w10, #0x1                   	// #1
   1b11c:	lsl	x4, x10, x9
   1b120:	cmp	x4, x3
   1b124:	b.cs	1b1b0 <__sanitizer_set_report_fd@@Base+0x4b6c>  // b.hs, b.nlast
   1b128:	mov	x0, x19
   1b12c:	mov	x1, x8
   1b130:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1b134:	ldr	x3, [x19, #16]
   1b138:	add	x9, x3, #0x1
   1b13c:	ldr	x8, [x19]
   1b140:	str	x9, [x19, #16]
   1b144:	mov	x1, x20
   1b148:	ldp	x20, x19, [sp, #16]
   1b14c:	add	x0, x8, x3
   1b150:	mov	w2, #0x1                   	// #1
   1b154:	ldr	x30, [sp], #32
   1b158:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1b15c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b160:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b164:	add	x0, x0, #0xb2f
   1b168:	add	x2, x2, #0x41
   1b16c:	mov	w1, #0x1cd                 	// #461
   1b170:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b174:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b178:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b17c:	add	x0, x0, #0xb2f
   1b180:	add	x2, x2, #0x5d
   1b184:	mov	w1, #0x186                 	// #390
   1b188:	mov	x3, xzr
   1b18c:	mov	x4, xzr
   1b190:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b194:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b198:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b19c:	add	x0, x0, #0xb2f
   1b1a0:	add	x2, x2, #0x156
   1b1a4:	mov	w1, #0x18a                 	// #394
   1b1a8:	mov	x4, x8
   1b1ac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b1b0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b1b4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b1b8:	add	x0, x0, #0xb2f
   1b1bc:	add	x2, x2, #0x178
   1b1c0:	mov	w1, #0x18b                 	// #395
   1b1c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b1c8:	stp	x30, x21, [sp, #-32]!
   1b1cc:	stp	x20, x19, [sp, #16]
   1b1d0:	cbz	x1, 1b264 <__sanitizer_set_report_fd@@Base+0x4c20>
   1b1d4:	ldr	x3, [x0, #16]
   1b1d8:	mov	x20, x1
   1b1dc:	mov	x19, x0
   1b1e0:	cmp	x3, x1
   1b1e4:	b.hi	1b284 <__sanitizer_set_report_fd@@Base+0x4c40>  // b.pmore
   1b1e8:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b1ec:	ldr	x21, [x21, #4016]
   1b1f0:	ldr	x0, [x21]
   1b1f4:	cbnz	x0, 1b204 <__sanitizer_set_report_fd@@Base+0x4bc0>
   1b1f8:	mov	w0, #0x6                   	// #6
   1b1fc:	bl	6d70 <getauxval@plt>
   1b200:	str	x0, [x21]
   1b204:	sub	x8, x0, #0x1
   1b208:	tst	x0, x8
   1b20c:	b.ne	1b2a0 <__sanitizer_set_report_fd@@Base+0x4c5c>  // b.any
   1b210:	lsl	x8, x20, #3
   1b214:	add	x8, x8, x0
   1b218:	sub	x8, x8, #0x1
   1b21c:	neg	x9, x0
   1b220:	and	x20, x8, x9
   1b224:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b228:	add	x1, x1, #0x950
   1b22c:	mov	x0, x20
   1b230:	mov	w2, wzr
   1b234:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1b238:	ldr	x8, [x19, #16]
   1b23c:	ldr	x1, [x19]
   1b240:	mov	x21, x0
   1b244:	lsl	x2, x8, #3
   1b248:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1b24c:	ldp	x0, x1, [x19]
   1b250:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1b254:	stp	x21, x20, [x19]
   1b258:	ldp	x20, x19, [sp, #16]
   1b25c:	ldp	x30, x21, [sp], #32
   1b260:	ret
   1b264:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b268:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b26c:	add	x0, x0, #0xb2f
   1b270:	add	x2, x2, #0x919
   1b274:	mov	w1, #0x20b                 	// #523
   1b278:	mov	x3, xzr
   1b27c:	mov	x4, xzr
   1b280:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b284:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b288:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b28c:	add	x0, x0, #0xb2f
   1b290:	add	x2, x2, #0x932
   1b294:	mov	w1, #0x20c                 	// #524
   1b298:	mov	x4, x20
   1b29c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b2a0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b2a4:	add	x0, x0, #0x20f
   1b2a8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1b2ac:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1b2b0:	cmp	w0, #0xa
   1b2b4:	cset	w8, eq  // eq = none
   1b2b8:	cmp	w0, #0x2
   1b2bc:	lsl	x8, x8, #4
   1b2c0:	mov	w9, #0x4                   	// #4
   1b2c4:	csel	x0, x9, x8, eq  // eq = none
   1b2c8:	ret
   1b2cc:	b	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b2d0:	str	x30, [sp, #-48]!
   1b2d4:	stp	x22, x21, [sp, #16]
   1b2d8:	stp	x20, x19, [sp, #32]
   1b2dc:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b2e0:	ldr	x22, [x22, #4016]
   1b2e4:	mov	w20, w2
   1b2e8:	mov	x19, x1
   1b2ec:	mov	x21, x0
   1b2f0:	ldr	x8, [x22]
   1b2f4:	cbnz	x8, 1b304 <__sanitizer_set_report_fd@@Base+0x4cc0>
   1b2f8:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b2fc:	mov	x8, x0
   1b300:	str	x0, [x22]
   1b304:	sub	x9, x8, #0x1
   1b308:	tst	x8, x9
   1b30c:	b.ne	1b38c <__sanitizer_set_report_fd@@Base+0x4d48>  // b.any
   1b310:	add	x9, x21, x8
   1b314:	neg	x8, x8
   1b318:	sub	x9, x9, #0x1
   1b31c:	and	x21, x9, x8
   1b320:	mov	w10, #0x22                  	// #34
   1b324:	add	x2, sp, #0xc
   1b328:	mov	x0, x19
   1b32c:	mov	x1, x21
   1b330:	str	w10, [sp, #12]
   1b334:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x5c1c>
   1b338:	ldr	w3, [sp, #12]
   1b33c:	mov	w4, w0
   1b340:	mov	w2, #0x3                   	// #3
   1b344:	mov	x0, xzr
   1b348:	mov	x1, x21
   1b34c:	mov	x5, xzr
   1b350:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1b354:	mov	x1, xzr
   1b358:	mov	x22, x0
   1b35c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b360:	add	x1, sp, #0x8
   1b364:	mov	x0, x22
   1b368:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b36c:	tbnz	w0, #0, 1b39c <__sanitizer_set_report_fd@@Base+0x4d58>
   1b370:	mov	x0, x21
   1b374:	bl	13bd8 <__sanitizer_report_error_summary@@Base+0x388>
   1b378:	mov	x0, x22
   1b37c:	ldp	x20, x19, [sp, #32]
   1b380:	ldp	x22, x21, [sp, #16]
   1b384:	ldr	x30, [sp], #48
   1b388:	ret
   1b38c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b390:	add	x0, x0, #0x20f
   1b394:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1b398:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1b39c:	ldr	w3, [sp, #8]
   1b3a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b3a4:	and	w4, w20, #0x1
   1b3a8:	add	x2, x2, #0xac
   1b3ac:	mov	x0, x21
   1b3b0:	mov	x1, x19
   1b3b4:	bl	13678 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>
   1b3b8:	sub	sp, sp, #0x30
   1b3bc:	stp	x30, x21, [sp, #16]
   1b3c0:	stp	x20, x19, [sp, #32]
   1b3c4:	mov	w19, w2
   1b3c8:	mov	x21, x0
   1b3cc:	add	x2, sp, #0xc
   1b3d0:	mov	x0, x4
   1b3d4:	mov	x20, x1
   1b3d8:	str	w3, [sp, #12]
   1b3dc:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x5c1c>
   1b3e0:	ldr	w3, [sp, #12]
   1b3e4:	mov	w4, w0
   1b3e8:	mov	x0, x21
   1b3ec:	mov	x1, x20
   1b3f0:	mov	w2, w19
   1b3f4:	mov	x5, xzr
   1b3f8:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1b3fc:	mov	x1, xzr
   1b400:	mov	x19, x0
   1b404:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b408:	mov	x0, x19
   1b40c:	ldp	x20, x19, [sp, #32]
   1b410:	ldp	x30, x21, [sp, #16]
   1b414:	add	sp, sp, #0x30
   1b418:	ret
   1b41c:	str	x30, [sp, #-32]!
   1b420:	stp	x20, x19, [sp, #16]
   1b424:	cbz	x0, 1b458 <__sanitizer_set_report_fd@@Base+0x4e14>
   1b428:	mov	x19, x1
   1b42c:	cbz	x1, 1b458 <__sanitizer_set_report_fd@@Base+0x4e14>
   1b430:	mov	x1, x19
   1b434:	mov	x20, x0
   1b438:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
   1b43c:	mov	x1, xzr
   1b440:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b444:	tbnz	w0, #0, 1b464 <__sanitizer_set_report_fd@@Base+0x4e20>
   1b448:	mov	x0, x19
   1b44c:	ldp	x20, x19, [sp, #16]
   1b450:	ldr	x30, [sp], #32
   1b454:	b	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
   1b458:	ldp	x20, x19, [sp, #16]
   1b45c:	ldr	x30, [sp], #32
   1b460:	ret
   1b464:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b468:	ldr	x8, [x8, #4024]
   1b46c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b470:	add	x0, x0, #0xb5
   1b474:	mov	x2, x19
   1b478:	ldr	x1, [x8]
   1b47c:	mov	x3, x19
   1b480:	mov	x4, x20
   1b484:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1b488:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b48c:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b490:	add	x0, x0, #0xf5
   1b494:	add	x2, x2, #0x44c
   1b498:	mov	w1, #0x3d                  	// #61
   1b49c:	mov	x3, xzr
   1b4a0:	mov	x4, xzr
   1b4a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b4a8:	sub	sp, sp, #0x30
   1b4ac:	stp	x30, x21, [sp, #16]
   1b4b0:	stp	x20, x19, [sp, #32]
   1b4b4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b4b8:	ldr	x21, [x21, #4016]
   1b4bc:	mov	x19, x1
   1b4c0:	mov	x20, x0
   1b4c4:	ldr	x8, [x21]
   1b4c8:	cbnz	x8, 1b4d8 <__sanitizer_set_report_fd@@Base+0x4e94>
   1b4cc:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b4d0:	mov	x8, x0
   1b4d4:	str	x0, [x21]
   1b4d8:	sub	x9, x8, #0x1
   1b4dc:	tst	x8, x9
   1b4e0:	b.ne	1b574 <__sanitizer_set_report_fd@@Base+0x4f30>  // b.any
   1b4e4:	add	x9, x20, x8
   1b4e8:	neg	x8, x8
   1b4ec:	sub	x9, x9, #0x1
   1b4f0:	and	x20, x9, x8
   1b4f4:	mov	w10, #0x22                  	// #34
   1b4f8:	add	x2, sp, #0xc
   1b4fc:	mov	x0, x19
   1b500:	mov	x1, x20
   1b504:	str	w10, [sp, #12]
   1b508:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x5c1c>
   1b50c:	ldr	w3, [sp, #12]
   1b510:	mov	w4, w0
   1b514:	mov	w2, #0x3                   	// #3
   1b518:	mov	x0, xzr
   1b51c:	mov	x1, x20
   1b520:	mov	x5, xzr
   1b524:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1b528:	mov	x1, xzr
   1b52c:	mov	x21, x0
   1b530:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b534:	add	x1, sp, #0x8
   1b538:	mov	x0, x21
   1b53c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b540:	tbnz	w0, #0, 1b560 <__sanitizer_set_report_fd@@Base+0x4f1c>
   1b544:	mov	x0, x20
   1b548:	bl	13bd8 <__sanitizer_report_error_summary@@Base+0x388>
   1b54c:	mov	x0, x21
   1b550:	ldp	x20, x19, [sp, #32]
   1b554:	ldp	x30, x21, [sp, #16]
   1b558:	add	sp, sp, #0x30
   1b55c:	ret
   1b560:	ldr	w3, [sp, #8]
   1b564:	cmp	w3, #0xc
   1b568:	b.ne	1b584 <__sanitizer_set_report_fd@@Base+0x4f40>  // b.any
   1b56c:	mov	x21, xzr
   1b570:	b	1b54c <__sanitizer_set_report_fd@@Base+0x4f08>
   1b574:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b578:	add	x0, x0, #0x20f
   1b57c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1b580:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1b584:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b588:	add	x2, x2, #0xac
   1b58c:	mov	x0, x20
   1b590:	mov	x1, x19
   1b594:	mov	w4, wzr
   1b598:	bl	13678 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>
   1b59c:	stp	x30, x23, [sp, #-48]!
   1b5a0:	stp	x22, x21, [sp, #16]
   1b5a4:	stp	x20, x19, [sp, #32]
   1b5a8:	sub	x8, x0, #0x1
   1b5ac:	tst	x0, x8
   1b5b0:	b.ne	1b688 <__sanitizer_set_report_fd@@Base+0x5044>  // b.any
   1b5b4:	sub	x23, x1, #0x1
   1b5b8:	mov	x19, x1
   1b5bc:	tst	x1, x23
   1b5c0:	b.ne	1b6a0 <__sanitizer_set_report_fd@@Base+0x505c>  // b.any
   1b5c4:	add	x22, x19, x0
   1b5c8:	mov	x20, x0
   1b5cc:	mov	x0, x22
   1b5d0:	mov	x1, x2
   1b5d4:	bl	1b4a8 <__sanitizer_set_report_fd@@Base+0x4e64>
   1b5d8:	cbz	x0, 1b680 <__sanitizer_set_report_fd@@Base+0x503c>
   1b5dc:	mov	x21, x0
   1b5e0:	tst	x23, x0
   1b5e4:	b.eq	1b630 <__sanitizer_set_report_fd@@Base+0x4fec>  // b.none
   1b5e8:	add	x8, x23, x21
   1b5ec:	neg	x9, x19
   1b5f0:	and	x19, x8, x9
   1b5f4:	subs	x23, x19, x21
   1b5f8:	b.eq	1b61c <__sanitizer_set_report_fd@@Base+0x4fd8>  // b.none
   1b5fc:	mov	x0, x21
   1b600:	mov	x1, x23
   1b604:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
   1b608:	mov	x1, xzr
   1b60c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b610:	tbnz	w0, #0, 1b6b8 <__sanitizer_set_report_fd@@Base+0x5074>
   1b614:	mov	x0, x23
   1b618:	bl	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
   1b61c:	add	x8, x22, x21
   1b620:	add	x21, x19, x20
   1b624:	subs	x20, x8, x21
   1b628:	b.ne	1b644 <__sanitizer_set_report_fd@@Base+0x5000>  // b.any
   1b62c:	b	1b66c <__sanitizer_set_report_fd@@Base+0x5028>
   1b630:	mov	x19, x21
   1b634:	add	x8, x22, x21
   1b638:	add	x21, x19, x20
   1b63c:	subs	x20, x8, x21
   1b640:	b.eq	1b66c <__sanitizer_set_report_fd@@Base+0x5028>  // b.none
   1b644:	cbz	x21, 1b66c <__sanitizer_set_report_fd@@Base+0x5028>
   1b648:	cbz	x20, 1b66c <__sanitizer_set_report_fd@@Base+0x5028>
   1b64c:	mov	x0, x21
   1b650:	mov	x1, x20
   1b654:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
   1b658:	mov	x1, xzr
   1b65c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b660:	tbnz	w0, #0, 1b6d8 <__sanitizer_set_report_fd@@Base+0x5094>
   1b664:	mov	x0, x20
   1b668:	bl	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
   1b66c:	mov	x0, x19
   1b670:	ldp	x20, x19, [sp, #32]
   1b674:	ldp	x22, x21, [sp, #16]
   1b678:	ldp	x30, x23, [sp], #48
   1b67c:	ret
   1b680:	mov	x19, xzr
   1b684:	b	1b66c <__sanitizer_set_report_fd@@Base+0x5028>
   1b688:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b68c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1b690:	add	x0, x0, #0xf5
   1b694:	add	x2, x2, #0x3ff
   1b698:	mov	w1, #0x55                  	// #85
   1b69c:	b	1b710 <__sanitizer_set_report_fd@@Base+0x50cc>
   1b6a0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b6a4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b6a8:	add	x0, x0, #0xf5
   1b6ac:	add	x2, x2, #0xea3
   1b6b0:	mov	w1, #0x56                  	// #86
   1b6b4:	b	1b710 <__sanitizer_set_report_fd@@Base+0x50cc>
   1b6b8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b6bc:	ldr	x8, [x8, #4024]
   1b6c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b6c4:	add	x0, x0, #0xb5
   1b6c8:	mov	x2, x23
   1b6cc:	ldr	x1, [x8]
   1b6d0:	mov	x3, x23
   1b6d4:	b	1b6f4 <__sanitizer_set_report_fd@@Base+0x50b0>
   1b6d8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b6dc:	ldr	x8, [x8, #4024]
   1b6e0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b6e4:	add	x0, x0, #0xb5
   1b6e8:	mov	x2, x20
   1b6ec:	ldr	x1, [x8]
   1b6f0:	mov	x3, x20
   1b6f4:	mov	x4, x21
   1b6f8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1b6fc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b700:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1b704:	add	x0, x0, #0xf5
   1b708:	add	x2, x2, #0x44c
   1b70c:	mov	w1, #0x3d                  	// #61
   1b710:	mov	x3, xzr
   1b714:	mov	x4, xzr
   1b718:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1b71c:	sub	sp, sp, #0x30
   1b720:	stp	x30, x21, [sp, #16]
   1b724:	stp	x20, x19, [sp, #32]
   1b728:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b72c:	ldr	x21, [x21, #4016]
   1b730:	mov	x19, x1
   1b734:	mov	x20, x0
   1b738:	ldr	x8, [x21]
   1b73c:	cbnz	x8, 1b74c <__sanitizer_set_report_fd@@Base+0x5108>
   1b740:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b744:	mov	x8, x0
   1b748:	str	x0, [x21]
   1b74c:	sub	x9, x8, #0x1
   1b750:	tst	x8, x9
   1b754:	b.ne	1b7d4 <__sanitizer_set_report_fd@@Base+0x5190>  // b.any
   1b758:	add	x9, x20, x8
   1b75c:	neg	x8, x8
   1b760:	sub	x9, x9, #0x1
   1b764:	and	x20, x9, x8
   1b768:	mov	w10, #0x4022                	// #16418
   1b76c:	add	x2, sp, #0xc
   1b770:	mov	x0, x19
   1b774:	mov	x1, x20
   1b778:	str	w10, [sp, #12]
   1b77c:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x5c1c>
   1b780:	ldr	w3, [sp, #12]
   1b784:	mov	w4, w0
   1b788:	mov	w2, #0x3                   	// #3
   1b78c:	mov	x0, xzr
   1b790:	mov	x1, x20
   1b794:	mov	x5, xzr
   1b798:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1b79c:	mov	x1, xzr
   1b7a0:	mov	x21, x0
   1b7a4:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b7a8:	add	x1, sp, #0x8
   1b7ac:	mov	x0, x21
   1b7b0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b7b4:	tbnz	w0, #0, 1b7e4 <__sanitizer_set_report_fd@@Base+0x51a0>
   1b7b8:	mov	x0, x20
   1b7bc:	bl	13bd8 <__sanitizer_report_error_summary@@Base+0x388>
   1b7c0:	mov	x0, x21
   1b7c4:	ldp	x20, x19, [sp, #32]
   1b7c8:	ldp	x30, x21, [sp, #16]
   1b7cc:	add	sp, sp, #0x30
   1b7d0:	ret
   1b7d4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b7d8:	add	x0, x0, #0x20f
   1b7dc:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1b7e0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1b7e4:	ldr	w3, [sp, #8]
   1b7e8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b7ec:	add	x2, x2, #0x147
   1b7f0:	mov	x0, x20
   1b7f4:	mov	x1, x19
   1b7f8:	mov	w4, wzr
   1b7fc:	bl	13678 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>
   1b800:	mov	x3, x2
   1b804:	mov	w2, wzr
   1b808:	b	1b80c <__sanitizer_set_report_fd@@Base+0x51c8>
   1b80c:	sub	sp, sp, #0x60
   1b810:	stp	x30, x23, [sp, #48]
   1b814:	stp	x22, x21, [sp, #64]
   1b818:	stp	x20, x19, [sp, #80]
   1b81c:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b820:	ldr	x23, [x23, #4016]
   1b824:	mov	x22, x3
   1b828:	mov	w19, w2
   1b82c:	mov	x20, x1
   1b830:	ldr	x8, [x23]
   1b834:	mov	x21, x0
   1b838:	cbnz	x8, 1b848 <__sanitizer_set_report_fd@@Base+0x5204>
   1b83c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b840:	mov	x8, x0
   1b844:	str	x0, [x23]
   1b848:	sub	x9, x8, #0x1
   1b84c:	tst	x8, x9
   1b850:	b.ne	1b900 <__sanitizer_set_report_fd@@Base+0x52bc>  // b.any
   1b854:	add	x9, x20, x8
   1b858:	sub	x10, x9, #0x1
   1b85c:	neg	x9, x8
   1b860:	and	x20, x10, x9
   1b864:	cbnz	x8, 1b874 <__sanitizer_set_report_fd@@Base+0x5230>
   1b868:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1b86c:	neg	x9, x0
   1b870:	str	x0, [x23]
   1b874:	mov	w8, #0x32                  	// #50
   1b878:	add	x2, sp, #0x4
   1b87c:	mov	x0, x22
   1b880:	mov	x1, x20
   1b884:	and	x21, x9, x21
   1b888:	str	w8, [sp, #4]
   1b88c:	bl	1c260 <__sanitizer_set_report_fd@@Base+0x5c1c>
   1b890:	ldr	w3, [sp, #4]
   1b894:	mov	w4, w0
   1b898:	mov	w2, #0x3                   	// #3
   1b89c:	mov	x0, x21
   1b8a0:	mov	x1, x20
   1b8a4:	mov	x5, xzr
   1b8a8:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1b8ac:	mov	x1, xzr
   1b8b0:	mov	x22, x0
   1b8b4:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b8b8:	add	x1, sp, #0x2c
   1b8bc:	mov	x0, x22
   1b8c0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1b8c4:	tbnz	w0, #0, 1b8e8 <__sanitizer_set_report_fd@@Base+0x52a4>
   1b8c8:	mov	x0, x20
   1b8cc:	bl	13bd8 <__sanitizer_report_error_summary@@Base+0x388>
   1b8d0:	mov	x0, x22
   1b8d4:	ldp	x20, x19, [sp, #80]
   1b8d8:	ldp	x22, x21, [sp, #64]
   1b8dc:	ldp	x30, x23, [sp, #48]
   1b8e0:	add	sp, sp, #0x60
   1b8e4:	ret
   1b8e8:	ldr	w8, [sp, #44]
   1b8ec:	cmp	w8, #0xc
   1b8f0:	b.ne	1b910 <__sanitizer_set_report_fd@@Base+0x52cc>  // b.any
   1b8f4:	tbz	w19, #0, 1b910 <__sanitizer_set_report_fd@@Base+0x52cc>
   1b8f8:	mov	x22, xzr
   1b8fc:	b	1b8d0 <__sanitizer_set_report_fd@@Base+0x528c>
   1b900:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1b904:	add	x0, x0, #0x20f
   1b908:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1b90c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1b910:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b914:	add	x2, x2, #0x2d6
   1b918:	add	x0, sp, #0x4
   1b91c:	mov	w1, #0x28                  	// #40
   1b920:	mov	x3, x21
   1b924:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1b928:	ldr	w3, [sp, #44]
   1b92c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b930:	add	x2, x2, #0xac
   1b934:	add	x1, sp, #0x4
   1b938:	mov	x0, x20
   1b93c:	mov	w4, wzr
   1b940:	bl	13678 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>
   1b944:	mov	x3, x2
   1b948:	mov	w2, #0x1                   	// #1
   1b94c:	b	1b80c <__sanitizer_set_report_fd@@Base+0x51c8>
   1b950:	str	x30, [sp, #-16]!
   1b954:	mov	w2, wzr
   1b958:	bl	19a54 <__sanitizer_set_report_fd@@Base+0x3410>
   1b95c:	cmp	w0, #0x0
   1b960:	cset	w0, eq  // eq = none
   1b964:	ldr	x30, [sp], #16
   1b968:	ret
   1b96c:	str	x30, [sp, #-16]!
   1b970:	mov	w2, #0x1                   	// #1
   1b974:	bl	19a54 <__sanitizer_set_report_fd@@Base+0x3410>
   1b978:	cmp	w0, #0x0
   1b97c:	cset	w0, eq  // eq = none
   1b980:	ldr	x30, [sp], #16
   1b984:	ret
   1b988:	ret
   1b98c:	sub	sp, sp, #0x30
   1b990:	stp	x30, x21, [sp, #16]
   1b994:	stp	x20, x19, [sp, #32]
   1b998:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1b99c:	ldr	x8, [x8, #4056]
   1b9a0:	mov	x20, x2
   1b9a4:	mov	w21, w1
   1b9a8:	mov	x19, x0
   1b9ac:	ldrb	w8, [x8, #243]
   1b9b0:	cbz	w8, 1b9cc <__sanitizer_set_report_fd@@Base+0x5388>
   1b9b4:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1b9b8:	add	x1, x1, #0x274
   1b9bc:	mov	w2, #0x6                   	// #6
   1b9c0:	mov	x0, x19
   1b9c4:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   1b9c8:	cbz	w0, 1ba04 <__sanitizer_set_report_fd@@Base+0x53c0>
   1b9cc:	cmp	w21, #0x1
   1b9d0:	mov	w8, #0x241                 	// #577
   1b9d4:	csel	w8, w8, wzr, eq  // eq = none
   1b9d8:	cmp	w21, #0x2
   1b9dc:	mov	w9, #0x42                  	// #66
   1b9e0:	csel	w1, w9, w8, eq  // eq = none
   1b9e4:	mov	w2, #0x1b0                 	// #432
   1b9e8:	mov	x0, x19
   1b9ec:	bl	19a90 <__sanitizer_set_report_fd@@Base+0x344c>
   1b9f0:	mov	x19, x0
   1b9f4:	sxtw	x0, w0
   1b9f8:	mov	x1, x20
   1b9fc:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1ba00:	tbz	w0, #0, 1ba0c <__sanitizer_set_report_fd@@Base+0x53c8>
   1ba04:	mov	w19, #0xffffffff            	// #-1
   1ba08:	b	1ba74 <__sanitizer_set_report_fd@@Base+0x5430>
   1ba0c:	cmp	w19, #0x2
   1ba10:	b.gt	1ba74 <__sanitizer_set_report_fd@@Base+0x5430>
   1ba14:	add	x0, sp, #0xc
   1ba18:	mov	w2, #0x3                   	// #3
   1ba1c:	mov	w1, wzr
   1ba20:	add	x20, sp, #0xc
   1ba24:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1ba28:	mov	w21, #0x1                   	// #1
   1ba2c:	mov	w0, w19
   1ba30:	strb	w21, [x20, w19, sxtw]
   1ba34:	bl	19b90 <__sanitizer_set_report_fd@@Base+0x354c>
   1ba38:	mov	x19, x0
   1ba3c:	cmp	w19, #0x3
   1ba40:	b.lt	1ba2c <__sanitizer_set_report_fd@@Base+0x53e8>  // b.tstop
   1ba44:	ldrb	w8, [sp, #12]
   1ba48:	cbz	w8, 1ba54 <__sanitizer_set_report_fd@@Base+0x5410>
   1ba4c:	mov	w0, wzr
   1ba50:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1ba54:	ldrb	w8, [sp, #13]
   1ba58:	cbz	w8, 1ba64 <__sanitizer_set_report_fd@@Base+0x5420>
   1ba5c:	mov	w0, #0x1                   	// #1
   1ba60:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1ba64:	ldrb	w8, [sp, #14]
   1ba68:	cbz	w8, 1ba74 <__sanitizer_set_report_fd@@Base+0x5430>
   1ba6c:	mov	w0, #0x2                   	// #2
   1ba70:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1ba74:	mov	w0, w19
   1ba78:	ldp	x20, x19, [sp, #32]
   1ba7c:	ldp	x30, x21, [sp, #16]
   1ba80:	add	sp, sp, #0x30
   1ba84:	ret
   1ba88:	str	x30, [sp, #-16]!
   1ba8c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ba90:	ldr	x8, [x8, #4056]
   1ba94:	ldrb	w8, [x8, #243]
   1ba98:	cbz	w8, 1babc <__sanitizer_set_report_fd@@Base+0x5478>
   1ba9c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1baa0:	add	x1, x1, #0x274
   1baa4:	mov	w2, #0x6                   	// #6
   1baa8:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   1baac:	cmp	w0, #0x0
   1bab0:	cset	w0, eq  // eq = none
   1bab4:	ldr	x30, [sp], #16
   1bab8:	ret
   1babc:	mov	w0, wzr
   1bac0:	ldr	x30, [sp], #16
   1bac4:	ret
   1bac8:	sub	sp, sp, #0x30
   1bacc:	stp	x30, x21, [sp, #16]
   1bad0:	stp	x20, x19, [sp, #32]
   1bad4:	mov	w19, w0
   1bad8:	cmp	w0, #0x2
   1badc:	b.gt	1bb40 <__sanitizer_set_report_fd@@Base+0x54fc>
   1bae0:	add	x0, sp, #0xc
   1bae4:	mov	w2, #0x3                   	// #3
   1bae8:	mov	w1, wzr
   1baec:	add	x20, sp, #0xc
   1baf0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1baf4:	mov	w21, #0x1                   	// #1
   1baf8:	mov	w0, w19
   1bafc:	strb	w21, [x20, w19, sxtw]
   1bb00:	bl	19b90 <__sanitizer_set_report_fd@@Base+0x354c>
   1bb04:	mov	x19, x0
   1bb08:	cmp	w19, #0x3
   1bb0c:	b.lt	1baf8 <__sanitizer_set_report_fd@@Base+0x54b4>  // b.tstop
   1bb10:	ldrb	w8, [sp, #12]
   1bb14:	cbz	w8, 1bb20 <__sanitizer_set_report_fd@@Base+0x54dc>
   1bb18:	mov	w0, wzr
   1bb1c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1bb20:	ldrb	w8, [sp, #13]
   1bb24:	cbz	w8, 1bb30 <__sanitizer_set_report_fd@@Base+0x54ec>
   1bb28:	mov	w0, #0x1                   	// #1
   1bb2c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1bb30:	ldrb	w8, [sp, #14]
   1bb34:	cbz	w8, 1bb40 <__sanitizer_set_report_fd@@Base+0x54fc>
   1bb38:	mov	w0, #0x2                   	// #2
   1bb3c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1bb40:	mov	w0, w19
   1bb44:	ldp	x20, x19, [sp, #32]
   1bb48:	ldp	x30, x21, [sp, #16]
   1bb4c:	add	sp, sp, #0x30
   1bb50:	ret
   1bb54:	b	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1bb58:	stp	x30, x21, [sp, #-32]!
   1bb5c:	stp	x20, x19, [sp, #16]
   1bb60:	mov	x21, x4
   1bb64:	mov	x19, x3
   1bb68:	bl	19ab4 <__sanitizer_set_report_fd@@Base+0x3470>
   1bb6c:	mov	x1, x21
   1bb70:	mov	x20, x0
   1bb74:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1bb78:	tbz	w0, #0, 1bb8c <__sanitizer_set_report_fd@@Base+0x5548>
   1bb7c:	mov	w0, wzr
   1bb80:	ldp	x20, x19, [sp, #16]
   1bb84:	ldp	x30, x21, [sp], #32
   1bb88:	ret
   1bb8c:	cbz	x19, 1bb94 <__sanitizer_set_report_fd@@Base+0x5550>
   1bb90:	str	x20, [x19]
   1bb94:	mov	w0, #0x1                   	// #1
   1bb98:	ldp	x20, x19, [sp, #16]
   1bb9c:	ldp	x30, x21, [sp], #32
   1bba0:	ret
   1bba4:	stp	x30, x21, [sp, #-32]!
   1bba8:	stp	x20, x19, [sp, #16]
   1bbac:	mov	x21, x4
   1bbb0:	mov	x19, x3
   1bbb4:	bl	19ad8 <__sanitizer_set_report_fd@@Base+0x3494>
   1bbb8:	mov	x1, x21
   1bbbc:	mov	x20, x0
   1bbc0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1bbc4:	tbz	w0, #0, 1bbd8 <__sanitizer_set_report_fd@@Base+0x5594>
   1bbc8:	mov	w0, wzr
   1bbcc:	ldp	x20, x19, [sp, #16]
   1bbd0:	ldp	x30, x21, [sp], #32
   1bbd4:	ret
   1bbd8:	cbz	x19, 1bbe0 <__sanitizer_set_report_fd@@Base+0x559c>
   1bbdc:	str	x20, [x19]
   1bbe0:	mov	w0, #0x1                   	// #1
   1bbe4:	ldp	x20, x19, [sp, #16]
   1bbe8:	ldp	x30, x21, [sp], #32
   1bbec:	ret
   1bbf0:	str	x30, [sp, #-48]!
   1bbf4:	stp	x22, x21, [sp, #16]
   1bbf8:	stp	x20, x19, [sp, #32]
   1bbfc:	mov	x19, x1
   1bc00:	mov	w1, wzr
   1bc04:	mov	x2, xzr
   1bc08:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   1bc0c:	cmn	w0, #0x1
   1bc10:	b.eq	1bca0 <__sanitizer_set_report_fd@@Base+0x565c>  // b.none
   1bc14:	mov	w20, w0
   1bc18:	bl	19b68 <__sanitizer_set_report_fd@@Base+0x3524>
   1bc1c:	cbz	x0, 1bcb8 <__sanitizer_set_report_fd@@Base+0x5674>
   1bc20:	mov	x21, x0
   1bc24:	cmn	x0, #0x1
   1bc28:	b.eq	1bcd8 <__sanitizer_set_report_fd@@Base+0x5694>  // b.none
   1bc2c:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1bc30:	ldr	x22, [x22, #4016]
   1bc34:	ldr	x0, [x22]
   1bc38:	cbnz	x0, 1bc44 <__sanitizer_set_report_fd@@Base+0x5600>
   1bc3c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1bc40:	str	x0, [x22]
   1bc44:	sub	x8, x0, #0x1
   1bc48:	tst	x0, x8
   1bc4c:	b.ne	1bcf8 <__sanitizer_set_report_fd@@Base+0x56b4>  // b.any
   1bc50:	add	x8, x21, x0
   1bc54:	sub	x8, x8, #0x1
   1bc58:	neg	x9, x0
   1bc5c:	and	x1, x8, x9
   1bc60:	mov	w2, #0x1                   	// #1
   1bc64:	mov	w3, #0x2                   	// #2
   1bc68:	mov	x0, xzr
   1bc6c:	mov	w4, w20
   1bc70:	mov	x5, xzr
   1bc74:	str	x1, [x19]
   1bc78:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1bc7c:	mov	x1, xzr
   1bc80:	mov	x19, x0
   1bc84:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1bc88:	tst	w0, #0x1
   1bc8c:	csel	x0, xzr, x19, ne  // ne = any
   1bc90:	ldp	x20, x19, [sp, #32]
   1bc94:	ldp	x22, x21, [sp, #16]
   1bc98:	ldr	x30, [sp], #48
   1bc9c:	ret
   1bca0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bca4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bca8:	add	x0, x0, #0xf5
   1bcac:	add	x2, x2, #0x15a
   1bcb0:	mov	w1, #0xc2                  	// #194
   1bcb4:	b	1bccc <__sanitizer_set_report_fd@@Base+0x5688>
   1bcb8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bcbc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bcc0:	add	x0, x0, #0xf5
   1bcc4:	add	x2, x2, #0x190
   1bcc8:	mov	w1, #0xc5                  	// #197
   1bccc:	mov	x3, xzr
   1bcd0:	mov	x4, xzr
   1bcd4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1bcd8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bcdc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bce0:	add	x0, x0, #0xf5
   1bce4:	add	x2, x2, #0x176
   1bce8:	mov	w1, #0xc4                  	// #196
   1bcec:	mov	x3, #0xffffffffffffffff    	// #-1
   1bcf0:	mov	x4, #0xffffffffffffffff    	// #-1
   1bcf4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1bcf8:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1bcfc:	add	x0, x0, #0x20f
   1bd00:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1bd04:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1bd08:	str	x30, [sp, #-48]!
   1bd0c:	stp	x22, x21, [sp, #16]
   1bd10:	stp	x20, x19, [sp, #32]
   1bd14:	mov	x19, x3
   1bd18:	mov	w21, w2
   1bd1c:	cmp	x0, #0x0
   1bd20:	mov	w8, #0x11                  	// #17
   1bd24:	csinc	w3, w8, wzr, ne  // ne = any
   1bd28:	mov	w2, #0x3                   	// #3
   1bd2c:	mov	w4, w21
   1bd30:	mov	x5, x19
   1bd34:	mov	x20, x1
   1bd38:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   1bd3c:	add	x1, sp, #0xc
   1bd40:	mov	x22, x0
   1bd44:	str	wzr, [sp, #12]
   1bd48:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1bd4c:	tbz	w0, #0, 1bd74 <__sanitizer_set_report_fd@@Base+0x5730>
   1bd50:	ldr	w5, [sp, #12]
   1bd54:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bd58:	add	x0, x0, #0x1a2
   1bd5c:	mov	w1, w21
   1bd60:	mov	x2, x19
   1bd64:	mov	x3, x20
   1bd68:	mov	x4, x22
   1bd6c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1bd70:	mov	x22, xzr
   1bd74:	mov	x0, x22
   1bd78:	ldp	x20, x19, [sp, #32]
   1bd7c:	ldp	x22, x21, [sp, #16]
   1bd80:	ldr	x30, [sp], #48
   1bd84:	ret
   1bd88:	sub	sp, sp, #0x90
   1bd8c:	stp	x30, x21, [sp, #112]
   1bd90:	stp	x20, x19, [sp, #128]
   1bd94:	mov	x19, x1
   1bd98:	mov	x20, x0
   1bd9c:	add	x0, sp, #0x50
   1bda0:	mov	w1, #0x1                   	// #1
   1bda4:	mov	w21, #0x1                   	// #1
   1bda8:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   1bdac:	add	x0, sp, #0x50
   1bdb0:	bl	1d5fc <__sanitizer_on_print@@Base+0xbac>
   1bdb4:	tbnz	w0, #0, 1be44 <__sanitizer_set_report_fd@@Base+0x5800>
   1bdb8:	add	x0, sp, #0x50
   1bdbc:	mov	x1, sp
   1bdc0:	stp	xzr, xzr, [sp, #24]
   1bdc4:	str	xzr, [sp, #72]
   1bdc8:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1bdcc:	tbz	w0, #0, 1be40 <__sanitizer_set_report_fd@@Base+0x57fc>
   1bdd0:	cmp	x20, x19
   1bdd4:	b.ls	1be0c <__sanitizer_set_report_fd@@Base+0x57c8>  // b.plast
   1bdd8:	mov	w21, #0x1                   	// #1
   1bddc:	ldp	x8, x9, [sp]
   1bde0:	cmp	x8, x9
   1bde4:	b.ne	1be60 <__sanitizer_set_report_fd@@Base+0x581c>  // b.any
   1bde8:	add	x0, sp, #0x50
   1bdec:	mov	x1, sp
   1bdf0:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1bdf4:	tbnz	w0, #0, 1bddc <__sanitizer_set_report_fd@@Base+0x5798>
   1bdf8:	b	1be44 <__sanitizer_set_report_fd@@Base+0x5800>
   1bdfc:	add	x0, sp, #0x50
   1be00:	mov	x1, sp
   1be04:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1be08:	tbz	w0, #0, 1be40 <__sanitizer_set_report_fd@@Base+0x57fc>
   1be0c:	ldp	x8, x9, [sp]
   1be10:	cmp	x8, x9
   1be14:	b.eq	1bdfc <__sanitizer_set_report_fd@@Base+0x57b8>  // b.none
   1be18:	cbz	x9, 1be64 <__sanitizer_set_report_fd@@Base+0x5820>
   1be1c:	sub	x9, x9, #0x1
   1be20:	cmp	x8, x9
   1be24:	b.hi	1be90 <__sanitizer_set_report_fd@@Base+0x584c>  // b.pmore
   1be28:	cmp	x8, x19
   1be2c:	b.hi	1bdfc <__sanitizer_set_report_fd@@Base+0x57b8>  // b.pmore
   1be30:	cmp	x9, x20
   1be34:	b.cc	1bdfc <__sanitizer_set_report_fd@@Base+0x57b8>  // b.lo, b.ul, b.last
   1be38:	mov	w21, wzr
   1be3c:	b	1be44 <__sanitizer_set_report_fd@@Base+0x5800>
   1be40:	mov	w21, #0x1                   	// #1
   1be44:	add	x0, sp, #0x50
   1be48:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   1be4c:	mov	w0, w21
   1be50:	ldp	x20, x19, [sp, #128]
   1be54:	ldp	x30, x21, [sp, #112]
   1be58:	add	sp, sp, #0x90
   1be5c:	ret
   1be60:	cbnz	x9, 1be84 <__sanitizer_set_report_fd@@Base+0x5840>
   1be64:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1be68:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1be6c:	add	x0, x0, #0xf5
   1be70:	add	x2, x2, #0x1df
   1be74:	mov	w1, #0xea                  	// #234
   1be78:	mov	x3, xzr
   1be7c:	mov	x4, xzr
   1be80:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1be84:	sub	x9, x9, #0x1
   1be88:	cmp	x8, x9
   1be8c:	b.ls	1beb0 <__sanitizer_set_report_fd@@Base+0x586c>  // b.plast
   1be90:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1be94:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1be98:	add	x0, x0, #0xf5
   1be9c:	add	x2, x2, #0x2ee
   1bea0:	mov	w1, #0xda                  	// #218
   1bea4:	mov	x3, xzr
   1bea8:	mov	x4, xzr
   1beac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1beb0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1beb4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1beb8:	add	x0, x0, #0xf5
   1bebc:	add	x2, x2, #0x308
   1bec0:	mov	w1, #0xdb                  	// #219
   1bec4:	mov	x3, xzr
   1bec8:	mov	x4, xzr
   1becc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1bed0:	sub	sp, sp, #0x90
   1bed4:	str	x30, [sp, #112]
   1bed8:	stp	x20, x19, [sp, #128]
   1bedc:	add	x0, sp, #0x50
   1bee0:	mov	w1, #0x1                   	// #1
   1bee4:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   1bee8:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1beec:	add	x1, x1, #0x1f8
   1bef0:	mov	w0, #0xfff                 	// #4095
   1bef4:	mov	w2, wzr
   1bef8:	mov	w20, #0xfff                 	// #4095
   1befc:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1bf00:	mov	x19, x0
   1bf04:	stp	x0, x20, [sp, #24]
   1bf08:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bf0c:	add	x0, x0, #0x207
   1bf10:	str	xzr, [sp, #72]
   1bf14:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1bf18:	add	x0, sp, #0x50
   1bf1c:	mov	x1, sp
   1bf20:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1bf24:	tbz	w0, #0, 1bf50 <__sanitizer_set_report_fd@@Base+0x590c>
   1bf28:	adrp	x20, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bf2c:	add	x20, x20, #0x224
   1bf30:	ldp	x1, x2, [sp]
   1bf34:	ldr	x3, [sp, #24]
   1bf38:	mov	x0, x20
   1bf3c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1bf40:	add	x0, sp, #0x50
   1bf44:	mov	x1, sp
   1bf48:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1bf4c:	tbnz	w0, #0, 1bf30 <__sanitizer_set_report_fd@@Base+0x58ec>
   1bf50:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bf54:	add	x0, x0, #0x22f
   1bf58:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1bf5c:	cbz	x19, 1bf80 <__sanitizer_set_report_fd@@Base+0x593c>
   1bf60:	mov	w1, #0xfff                 	// #4095
   1bf64:	mov	x0, x19
   1bf68:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
   1bf6c:	mov	x1, xzr
   1bf70:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1bf74:	tbnz	w0, #0, 1bf98 <__sanitizer_set_report_fd@@Base+0x5954>
   1bf78:	mov	w0, #0xfff                 	// #4095
   1bf7c:	bl	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
   1bf80:	add	x0, sp, #0x50
   1bf84:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   1bf88:	ldp	x20, x19, [sp, #128]
   1bf8c:	ldr	x30, [sp, #112]
   1bf90:	add	sp, sp, #0x90
   1bf94:	ret
   1bf98:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1bf9c:	ldr	x8, [x8, #4024]
   1bfa0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bfa4:	add	x0, x0, #0xb5
   1bfa8:	mov	w2, #0xfff                 	// #4095
   1bfac:	ldr	x1, [x8]
   1bfb0:	mov	w3, #0xfff                 	// #4095
   1bfb4:	mov	x4, x19
   1bfb8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1bfbc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bfc0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1bfc4:	add	x0, x0, #0xf5
   1bfc8:	add	x2, x2, #0x44c
   1bfcc:	mov	w1, #0x3d                  	// #61
   1bfd0:	mov	x3, xzr
   1bfd4:	mov	x4, xzr
   1bfd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1bfdc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1bfe0:	add	x0, x0, #0x24b
   1bfe4:	b	19d40 <__sanitizer_set_report_fd@@Base+0x36fc>
   1bfe8:	and	w8, w0, #0xff
   1bfec:	cmp	w8, #0x2f
   1bff0:	cset	w0, eq  // eq = none
   1bff4:	ret
   1bff8:	cbz	x0, 1c008 <__sanitizer_set_report_fd@@Base+0x59c4>
   1bffc:	ldrb	w8, [x0]
   1c000:	cmp	w8, #0x2f
   1c004:	cset	w0, eq  // eq = none
   1c008:	ret
   1c00c:	str	x30, [sp, #-48]!
   1c010:	stp	x22, x21, [sp, #16]
   1c014:	stp	x20, x19, [sp, #32]
   1c018:	ldr	x19, [x0]
   1c01c:	mov	x20, x2
   1c020:	mov	x21, x1
   1c024:	mov	x22, x0
   1c028:	mov	w8, #0x1                   	// #1
   1c02c:	ldaxrb	w9, [x19]
   1c030:	stlxrb	w10, w8, [x19]
   1c034:	cbnz	w10, 1c02c <__sanitizer_set_report_fd@@Base+0x59e8>
   1c038:	cbz	w9, 1c044 <__sanitizer_set_report_fd@@Base+0x5a00>
   1c03c:	mov	x0, x19
   1c040:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1c044:	mov	x0, x22
   1c048:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   1c04c:	ldr	w0, [x22, #8]
   1c050:	mov	x1, x21
   1c054:	mov	x2, x20
   1c058:	bl	19ad8 <__sanitizer_set_report_fd@@Base+0x3494>
   1c05c:	dmb	ish
   1c060:	strb	wzr, [x19]
   1c064:	ldp	x20, x19, [sp, #32]
   1c068:	ldp	x22, x21, [sp, #16]
   1c06c:	ldr	x30, [sp], #48
   1c070:	ret
   1c074:	sub	sp, sp, #0xc0
   1c078:	str	x30, [sp, #144]
   1c07c:	stp	x22, x21, [sp, #160]
   1c080:	stp	x20, x19, [sp, #176]
   1c084:	mov	x20, x1
   1c088:	mov	x21, x0
   1c08c:	add	x0, sp, #0x70
   1c090:	mov	w1, wzr
   1c094:	mov	x19, x2
   1c098:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   1c09c:	add	x0, sp, #0x50
   1c0a0:	mov	w1, #0x1000                	// #4096
   1c0a4:	stp	xzr, xzr, [sp, #88]
   1c0a8:	str	xzr, [sp, #80]
   1c0ac:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1c0b0:	ldr	x8, [sp, #96]
   1c0b4:	cmp	x8, #0xfff
   1c0b8:	b.hi	1c0f0 <__sanitizer_set_report_fd@@Base+0x5aac>  // b.pmore
   1c0bc:	ldr	x9, [sp, #88]
   1c0c0:	cmp	x9, #0xfff
   1c0c4:	b.hi	1c0d8 <__sanitizer_set_report_fd@@Base+0x5a94>  // b.pmore
   1c0c8:	add	x0, sp, #0x50
   1c0cc:	mov	w1, #0x1000                	// #4096
   1c0d0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1c0d4:	ldr	x8, [sp, #96]
   1c0d8:	ldr	x9, [sp, #80]
   1c0dc:	mov	w10, #0x1000                	// #4096
   1c0e0:	sub	x2, x10, x8
   1c0e4:	mov	w1, wzr
   1c0e8:	add	x0, x9, x8
   1c0ec:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1c0f0:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
   1c0f4:	ldr	q0, [x8, #3808]
   1c0f8:	ldr	x8, [sp, #80]
   1c0fc:	mov	w9, #0x1000                	// #4096
   1c100:	add	x0, sp, #0x70
   1c104:	str	q0, [sp, #96]
   1c108:	strb	wzr, [x8]
   1c10c:	ldr	x8, [sp, #80]
   1c110:	mov	x1, sp
   1c114:	str	xzr, [sp, #72]
   1c118:	stp	x8, x9, [sp, #24]
   1c11c:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1c120:	mov	w22, wzr
   1c124:	tbnz	w0, #0, 1c13c <__sanitizer_set_report_fd@@Base+0x5af8>
   1c128:	b	1c170 <__sanitizer_set_report_fd@@Base+0x5b2c>
   1c12c:	add	x0, sp, #0x70
   1c130:	mov	x1, sp
   1c134:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1c138:	tbz	w0, #0, 1c16c <__sanitizer_set_report_fd@@Base+0x5b28>
   1c13c:	ldrb	w8, [sp, #40]
   1c140:	tbz	w8, #2, 1c12c <__sanitizer_set_report_fd@@Base+0x5ae8>
   1c144:	ldr	x1, [sp, #24]
   1c148:	mov	x0, x21
   1c14c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   1c150:	cbnz	w0, 1c12c <__sanitizer_set_report_fd@@Base+0x5ae8>
   1c154:	ldr	x8, [sp]
   1c158:	mov	w22, #0x1                   	// #1
   1c15c:	str	x8, [x20]
   1c160:	ldr	x8, [sp, #8]
   1c164:	str	x8, [x19]
   1c168:	b	1c170 <__sanitizer_set_report_fd@@Base+0x5b2c>
   1c16c:	mov	w22, wzr
   1c170:	ldr	x19, [sp, #80]
   1c174:	cbz	x19, 1c1a0 <__sanitizer_set_report_fd@@Base+0x5b5c>
   1c178:	ldr	x20, [sp, #88]
   1c17c:	cbz	x20, 1c1a0 <__sanitizer_set_report_fd@@Base+0x5b5c>
   1c180:	mov	x0, x19
   1c184:	mov	x1, x20
   1c188:	bl	19a48 <__sanitizer_set_report_fd@@Base+0x3404>
   1c18c:	mov	x1, xzr
   1c190:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   1c194:	tbnz	w0, #0, 1c1c0 <__sanitizer_set_report_fd@@Base+0x5b7c>
   1c198:	mov	x0, x20
   1c19c:	bl	13c28 <__sanitizer_report_error_summary@@Base+0x3d8>
   1c1a0:	add	x0, sp, #0x70
   1c1a4:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   1c1a8:	mov	w0, w22
   1c1ac:	ldp	x20, x19, [sp, #176]
   1c1b0:	ldp	x22, x21, [sp, #160]
   1c1b4:	ldr	x30, [sp, #144]
   1c1b8:	add	sp, sp, #0xc0
   1c1bc:	ret
   1c1c0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1c1c4:	ldr	x8, [x8, #4024]
   1c1c8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c1cc:	add	x0, x0, #0xb5
   1c1d0:	mov	x2, x20
   1c1d4:	ldr	x1, [x8]
   1c1d8:	mov	x3, x20
   1c1dc:	mov	x4, x19
   1c1e0:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1c1e4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c1e8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1c1ec:	add	x0, x0, #0xf5
   1c1f0:	add	x2, x2, #0x44c
   1c1f4:	mov	w1, #0x3d                  	// #61
   1c1f8:	mov	x3, xzr
   1c1fc:	mov	x4, xzr
   1c200:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1c204:	ldr	x8, [x0]
   1c208:	ldr	x0, [x8, #16]
   1c20c:	ret
   1c210:	ldr	x8, [x0]
   1c214:	ldr	w8, [x8]
   1c218:	cmp	w8, #0xb
   1c21c:	cset	w0, eq  // eq = none
   1c220:	ret
   1c224:	ldr	x8, [x0]
   1c228:	ldr	w0, [x8]
   1c22c:	ret
   1c230:	ldr	x8, [x0]
   1c234:	ldr	w8, [x8]
   1c238:	sub	w8, w8, #0x4
   1c23c:	cmp	w8, #0x7
   1c240:	b.hi	1c254 <__sanitizer_set_report_fd@@Base+0x5c10>  // b.pmore
   1c244:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1c248:	add	x9, x9, #0x780
   1c24c:	ldr	x0, [x9, w8, sxtw #3]
   1c250:	ret
   1c254:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c258:	add	x0, x0, #0x265
   1c25c:	ret
   1c260:	sub	sp, sp, #0x110
   1c264:	str	x29, [sp, #208]
   1c268:	stp	x30, x23, [sp, #224]
   1c26c:	stp	x22, x21, [sp, #240]
   1c270:	stp	x20, x19, [sp, #256]
   1c274:	mov	w21, #0xffffffff            	// #-1
   1c278:	cbz	x0, 1c374 <__sanitizer_set_report_fd@@Base+0x5d30>
   1c27c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1c280:	ldr	x8, [x8, #4056]
   1c284:	ldrb	w8, [x8, #223]
   1c288:	cbz	w8, 1c374 <__sanitizer_set_report_fd@@Base+0x5d30>
   1c28c:	mov	x19, x2
   1c290:	mov	x20, x1
   1c294:	mov	x22, x0
   1c298:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1c29c:	cmp	x0, #0xbe
   1c2a0:	b.cs	1c390 <__sanitizer_set_report_fd@@Base+0x5d4c>  // b.hs, b.nlast
   1c2a4:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   1c2a8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c2ac:	mov	x3, x0
   1c2b0:	add	x2, x2, #0x2b3
   1c2b4:	add	x0, sp, #0x8
   1c2b8:	mov	w1, #0xc8                  	// #200
   1c2bc:	mov	x4, x22
   1c2c0:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1c2c4:	mov	w1, #0x242                 	// #578
   1c2c8:	add	x0, sp, #0x8
   1c2cc:	movk	w1, #0x8, lsl #16
   1c2d0:	mov	w2, #0x1c0                 	// #448
   1c2d4:	bl	19a90 <__sanitizer_set_report_fd@@Base+0x344c>
   1c2d8:	mov	x21, x0
   1c2dc:	cmp	w21, #0x2
   1c2e0:	b.gt	1c344 <__sanitizer_set_report_fd@@Base+0x5d00>
   1c2e4:	add	x0, sp, #0xdc
   1c2e8:	mov	w2, #0x3                   	// #3
   1c2ec:	mov	w1, wzr
   1c2f0:	add	x22, sp, #0xdc
   1c2f4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1c2f8:	mov	w23, #0x1                   	// #1
   1c2fc:	mov	w0, w21
   1c300:	strb	w23, [x22, w21, sxtw]
   1c304:	bl	19b90 <__sanitizer_set_report_fd@@Base+0x354c>
   1c308:	mov	x21, x0
   1c30c:	cmp	w21, #0x3
   1c310:	b.lt	1c2fc <__sanitizer_set_report_fd@@Base+0x5cb8>  // b.tstop
   1c314:	ldrb	w8, [sp, #220]
   1c318:	cbz	w8, 1c324 <__sanitizer_set_report_fd@@Base+0x5ce0>
   1c31c:	mov	w0, wzr
   1c320:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1c324:	ldrb	w8, [sp, #221]
   1c328:	cbz	w8, 1c334 <__sanitizer_set_report_fd@@Base+0x5cf0>
   1c32c:	mov	w0, #0x1                   	// #1
   1c330:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1c334:	ldrb	w8, [sp, #222]
   1c338:	cbz	w8, 1c344 <__sanitizer_set_report_fd@@Base+0x5d00>
   1c33c:	mov	w0, #0x2                   	// #2
   1c340:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   1c344:	mov	w0, w21
   1c348:	mov	x1, x20
   1c34c:	bl	19afc <__sanitizer_set_report_fd@@Base+0x34b8>
   1c350:	lsl	x8, x0, #32
   1c354:	cbnz	x8, 1c3b0 <__sanitizer_set_report_fd@@Base+0x5d6c>
   1c358:	add	x0, sp, #0x8
   1c35c:	bl	19bd4 <__sanitizer_set_report_fd@@Base+0x3590>
   1c360:	lsl	x8, x0, #32
   1c364:	cbnz	x8, 1c3d0 <__sanitizer_set_report_fd@@Base+0x5d8c>
   1c368:	ldr	w8, [x19]
   1c36c:	and	w8, w8, #0xffffffdf
   1c370:	str	w8, [x19]
   1c374:	mov	w0, w21
   1c378:	ldp	x20, x19, [sp, #256]
   1c37c:	ldp	x22, x21, [sp, #240]
   1c380:	ldp	x30, x23, [sp, #224]
   1c384:	ldr	x29, [sp, #208]
   1c388:	add	sp, sp, #0x110
   1c38c:	ret
   1c390:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c394:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c398:	add	x0, x0, #0xf5
   1c39c:	add	x2, x2, #0x27b
   1c3a0:	mov	w1, #0x15b                 	// #347
   1c3a4:	mov	x3, xzr
   1c3a8:	mov	x4, xzr
   1c3ac:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1c3b0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c3b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c3b8:	asr	x4, x8, #32
   1c3bc:	add	x0, x0, #0xf5
   1c3c0:	add	x2, x2, #0x2c5
   1c3c4:	mov	w1, #0x162                 	// #354
   1c3c8:	mov	x3, xzr
   1c3cc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1c3d0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c3d4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c3d8:	asr	x4, x8, #32
   1c3dc:	add	x0, x0, #0xf5
   1c3e0:	add	x2, x2, #0x2c5
   1c3e4:	mov	w1, #0x164                 	// #356
   1c3e8:	mov	x3, xzr
   1c3ec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1c3f0:	ret
   1c3f4:	sub	sp, sp, #0x70
   1c3f8:	stp	x29, x30, [sp, #16]
   1c3fc:	stp	x28, x27, [sp, #32]
   1c400:	stp	x26, x25, [sp, #48]
   1c404:	stp	x24, x23, [sp, #64]
   1c408:	stp	x22, x21, [sp, #80]
   1c40c:	stp	x20, x19, [sp, #96]
   1c410:	str	x0, [sp, #8]
   1c414:	cbz	x2, 1ca14 <__sanitizer_set_report_fd@@Base+0x63d0>
   1c418:	cmp	w1, #0x0
   1c41c:	b.le	1ca24 <__sanitizer_set_report_fd@@Base+0x63e0>
   1c420:	sub	w8, w1, #0x1
   1c424:	adrp	x25, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c428:	adrp	x28, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c42c:	mov	x20, x3
   1c430:	mov	x22, x2
   1c434:	mov	w19, wzr
   1c438:	mov	w23, #0x1                   	// #1
   1c43c:	mov	w24, #0xa                   	// #10
   1c440:	add	x25, x25, #0x515
   1c444:	mov	w26, #0x20                  	// #32
   1c448:	add	x28, x28, #0x322
   1c44c:	mov	w29, #0x10                  	// #16
   1c450:	add	x21, x0, w8, sxtw
   1c454:	mov	w27, #0x78                  	// #120
   1c458:	b	1c478 <__sanitizer_set_report_fd@@Base+0x5e34>
   1c45c:	ldr	w8, [x8]
   1c460:	strb	w8, [x9]
   1c464:	ldr	x8, [sp, #8]
   1c468:	add	x8, x8, #0x1
   1c46c:	str	x8, [sp, #8]
   1c470:	add	w19, w19, #0x1
   1c474:	add	x22, x22, #0x1
   1c478:	ldrb	w8, [x22]
   1c47c:	cmp	w8, #0x25
   1c480:	b.eq	1c49c <__sanitizer_set_report_fd@@Base+0x5e58>  // b.none
   1c484:	cbz	w8, 1c980 <__sanitizer_set_report_fd@@Base+0x633c>
   1c488:	ldr	x9, [sp, #8]
   1c48c:	cmp	x9, x21
   1c490:	b.cs	1c470 <__sanitizer_set_report_fd@@Base+0x5e2c>  // b.hs, b.nlast
   1c494:	strb	w8, [x9]
   1c498:	b	1c464 <__sanitizer_set_report_fd@@Base+0x5e20>
   1c49c:	mov	x10, x22
   1c4a0:	ldrb	w9, [x10, #1]!
   1c4a4:	add	x11, x22, #0x2
   1c4a8:	cmp	w9, #0x2d
   1c4ac:	cinc	x8, x23, eq  // eq = none
   1c4b0:	ldrb	w8, [x22, x8]
   1c4b4:	csel	x12, x11, x10, eq  // eq = none
   1c4b8:	sub	w11, w8, #0x30
   1c4bc:	cmp	w11, #0x9
   1c4c0:	b.hi	1c4f8 <__sanitizer_set_report_fd@@Base+0x5eb4>  // b.pmore
   1c4c4:	mov	w4, wzr
   1c4c8:	mov	w13, w8
   1c4cc:	ldrb	w10, [x12, #1]!
   1c4d0:	mul	w14, w4, w24
   1c4d4:	add	w13, w14, w13, uxtb
   1c4d8:	sub	w4, w13, #0x30
   1c4dc:	sub	w14, w10, #0x30
   1c4e0:	cmp	w14, #0xa
   1c4e4:	mov	w13, w10
   1c4e8:	b.cc	1c4cc <__sanitizer_set_report_fd@@Base+0x5e88>  // b.lo, b.ul, b.last
   1c4ec:	cmp	w10, #0x2e
   1c4f0:	b.ne	1c53c <__sanitizer_set_report_fd@@Base+0x5ef8>  // b.any
   1c4f4:	b	1c508 <__sanitizer_set_report_fd@@Base+0x5ec4>
   1c4f8:	mov	w4, wzr
   1c4fc:	mov	w10, w8
   1c500:	cmp	w10, #0x2e
   1c504:	b.ne	1c53c <__sanitizer_set_report_fd@@Base+0x5ef8>  // b.any
   1c508:	ldrb	w10, [x12, #1]
   1c50c:	cmp	w10, #0x2a
   1c510:	b.ne	1c53c <__sanitizer_set_report_fd@@Base+0x5ef8>  // b.any
   1c514:	ldrsw	x10, [x20, #24]
   1c518:	add	x12, x12, #0x2
   1c51c:	tbz	w10, #31, 1c544 <__sanitizer_set_report_fd@@Base+0x5f00>
   1c520:	add	w13, w10, #0x8
   1c524:	cmn	w10, #0x8
   1c528:	str	w13, [x20, #24]
   1c52c:	b.gt	1c544 <__sanitizer_set_report_fd@@Base+0x5f00>
   1c530:	ldr	x13, [x20, #8]
   1c534:	add	x10, x13, x10
   1c538:	b	1c550 <__sanitizer_set_report_fd@@Base+0x5f0c>
   1c53c:	mov	w10, #0xffffffff            	// #-1
   1c540:	b	1c554 <__sanitizer_set_report_fd@@Base+0x5f10>
   1c544:	ldr	x10, [x20]
   1c548:	add	x13, x10, #0x8
   1c54c:	str	x13, [x20]
   1c550:	ldr	w10, [x10]
   1c554:	mov	x14, x12
   1c558:	ldrb	w13, [x14], #1
   1c55c:	cmp	w13, #0x7a
   1c560:	csel	x14, x12, x14, ne  // ne = any
   1c564:	b.eq	1c588 <__sanitizer_set_report_fd@@Base+0x5f44>  // b.none
   1c568:	ldrb	w12, [x14]
   1c56c:	cmp	w12, #0x6c
   1c570:	b.ne	1c588 <__sanitizer_set_report_fd@@Base+0x5f44>  // b.any
   1c574:	ldrb	w12, [x14, #1]
   1c578:	cmp	w12, #0x6c
   1c57c:	cset	w12, eq  // eq = none
   1c580:	lsl	x15, x12, #1
   1c584:	b	1c590 <__sanitizer_set_report_fd@@Base+0x5f4c>
   1c588:	mov	w12, wzr
   1c58c:	mov	x15, xzr
   1c590:	add	x22, x14, x15
   1c594:	ldrb	w15, [x22]
   1c598:	cmp	w13, #0x7a
   1c59c:	and	w16, w11, #0xff
   1c5a0:	cset	w14, eq  // eq = none
   1c5a4:	cmp	w16, #0xa
   1c5a8:	cset	w16, cc  // cc = lo, ul, last
   1c5ac:	cmp	w9, #0x2d
   1c5b0:	orr	w14, w14, w12
   1c5b4:	b.eq	1c5fc <__sanitizer_set_report_fd@@Base+0x5fb8>  // b.none
   1c5b8:	tbz	w10, #31, 1c5fc <__sanitizer_set_report_fd@@Base+0x5fb8>
   1c5bc:	sub	w17, w15, #0x58
   1c5c0:	cmp	w17, #0x20
   1c5c4:	orr	w16, w16, w14
   1c5c8:	b.hi	1c73c <__sanitizer_set_report_fd@@Base+0x60f8>  // b.pmore
   1c5cc:	adr	x15, 1c5dc <__sanitizer_set_report_fd@@Base+0x5f98>
   1c5d0:	ldrb	w18, [x28, x17]
   1c5d4:	add	x15, x15, x18, lsl #2
   1c5d8:	br	x15
   1c5dc:	ldrsw	x9, [x20, #24]
   1c5e0:	cbz	w12, 1c6fc <__sanitizer_set_report_fd@@Base+0x60b8>
   1c5e4:	tbz	w9, #31, 1c728 <__sanitizer_set_report_fd@@Base+0x60e4>
   1c5e8:	add	w10, w9, #0x8
   1c5ec:	cmn	w9, #0x8
   1c5f0:	str	w10, [x20, #24]
   1c5f4:	b.gt	1c728 <__sanitizer_set_report_fd@@Base+0x60e4>
   1c5f8:	b	1c718 <__sanitizer_set_report_fd@@Base+0x60d4>
   1c5fc:	cmp	w15, #0x73
   1c600:	b.ne	1c9dc <__sanitizer_set_report_fd@@Base+0x6398>  // b.any
   1c604:	cbnz	w14, 1c9cc <__sanitizer_set_report_fd@@Base+0x6388>
   1c608:	cmp	w9, #0x2d
   1c60c:	b.eq	1c61c <__sanitizer_set_report_fd@@Base+0x5fd8>  // b.none
   1c610:	and	w8, w11, #0xff
   1c614:	cmp	w8, #0x9
   1c618:	b.ls	1c9f4 <__sanitizer_set_report_fd@@Base+0x63b0>  // b.plast
   1c61c:	ldrsw	x11, [x20, #24]
   1c620:	cmp	w9, #0x2d
   1c624:	cneg	w8, w4, eq  // eq = none
   1c628:	tbz	w11, #31, 1c648 <__sanitizer_set_report_fd@@Base+0x6004>
   1c62c:	add	w9, w11, #0x8
   1c630:	cmn	w11, #0x8
   1c634:	str	w9, [x20, #24]
   1c638:	b.gt	1c648 <__sanitizer_set_report_fd@@Base+0x6004>
   1c63c:	ldr	x9, [x20, #8]
   1c640:	add	x11, x9, x11
   1c644:	b	1c654 <__sanitizer_set_report_fd@@Base+0x6010>
   1c648:	ldr	x11, [x20]
   1c64c:	add	x9, x11, #0x8
   1c650:	str	x9, [x20]
   1c654:	ldr	x11, [x11]
   1c658:	mov	w9, wzr
   1c65c:	cmp	x11, #0x0
   1c660:	csel	x12, x25, x11, eq  // eq = none
   1c664:	cbz	w10, 1c6ac <__sanitizer_set_report_fd@@Base+0x6068>
   1c668:	ldrb	w14, [x12]
   1c66c:	cbz	w14, 1c6ac <__sanitizer_set_report_fd@@Base+0x6068>
   1c670:	ldr	x13, [sp, #8]
   1c674:	mov	x11, xzr
   1c678:	add	x12, x12, #0x1
   1c67c:	cmp	x13, x21
   1c680:	b.cs	1c694 <__sanitizer_set_report_fd@@Base+0x6050>  // b.hs, b.nlast
   1c684:	strb	w14, [x13]
   1c688:	ldr	x9, [sp, #8]
   1c68c:	add	x13, x9, #0x1
   1c690:	str	x13, [sp, #8]
   1c694:	add	x9, x11, #0x1
   1c698:	cmp	w9, w10
   1c69c:	b.cs	1c6ac <__sanitizer_set_report_fd@@Base+0x6068>  // b.hs, b.nlast
   1c6a0:	ldrb	w14, [x12, x11]
   1c6a4:	mov	x11, x9
   1c6a8:	cbnz	w14, 1c67c <__sanitizer_set_report_fd@@Base+0x6038>
   1c6ac:	neg	w10, w9
   1c6b0:	cmp	w8, w10
   1c6b4:	b.ge	1c6f0 <__sanitizer_set_report_fd@@Base+0x60ac>  // b.tcont
   1c6b8:	ldr	x10, [sp, #8]
   1c6bc:	neg	w8, w8
   1c6c0:	sub	w9, w8, w9
   1c6c4:	b	1c6d0 <__sanitizer_set_report_fd@@Base+0x608c>
   1c6c8:	subs	w9, w9, #0x1
   1c6cc:	b.eq	1c6ec <__sanitizer_set_report_fd@@Base+0x60a8>  // b.none
   1c6d0:	cmp	x10, x21
   1c6d4:	b.cs	1c6c8 <__sanitizer_set_report_fd@@Base+0x6084>  // b.hs, b.nlast
   1c6d8:	strb	w26, [x10]
   1c6dc:	ldr	x10, [sp, #8]
   1c6e0:	add	x10, x10, #0x1
   1c6e4:	str	x10, [sp, #8]
   1c6e8:	b	1c6c8 <__sanitizer_set_report_fd@@Base+0x6084>
   1c6ec:	mov	w9, w8
   1c6f0:	add	w19, w9, w19
   1c6f4:	add	x22, x22, #0x1
   1c6f8:	b	1c478 <__sanitizer_set_report_fd@@Base+0x5e34>
   1c6fc:	cmp	w13, #0x7a
   1c700:	b.ne	1c880 <__sanitizer_set_report_fd@@Base+0x623c>  // b.any
   1c704:	tbz	w9, #31, 1c728 <__sanitizer_set_report_fd@@Base+0x60e4>
   1c708:	add	w10, w9, #0x8
   1c70c:	cmn	w9, #0x8
   1c710:	str	w10, [x20, #24]
   1c714:	b.gt	1c728 <__sanitizer_set_report_fd@@Base+0x60e4>
   1c718:	ldr	x10, [x20, #8]
   1c71c:	add	x9, x10, x9
   1c720:	ldr	x2, [x9]
   1c724:	b	1c8b0 <__sanitizer_set_report_fd@@Base+0x626c>
   1c728:	ldr	x9, [x20]
   1c72c:	add	x10, x9, #0x8
   1c730:	str	x10, [x20]
   1c734:	ldr	x2, [x9]
   1c738:	b	1c8b0 <__sanitizer_set_report_fd@@Base+0x626c>
   1c73c:	cmp	w15, #0x25
   1c740:	b.ne	1c9cc <__sanitizer_set_report_fd@@Base+0x6388>  // b.any
   1c744:	cbnz	w16, 1c9cc <__sanitizer_set_report_fd@@Base+0x6388>
   1c748:	ldr	x8, [sp, #8]
   1c74c:	cmp	x8, x21
   1c750:	b.cs	1c470 <__sanitizer_set_report_fd@@Base+0x5e2c>  // b.hs, b.nlast
   1c754:	mov	w9, #0x25                  	// #37
   1c758:	strb	w9, [x8]
   1c75c:	b	1c464 <__sanitizer_set_report_fd@@Base+0x5e20>
   1c760:	ldrsw	x9, [x20, #24]
   1c764:	cbz	w12, 1c8dc <__sanitizer_set_report_fd@@Base+0x6298>
   1c768:	tbz	w9, #31, 1c908 <__sanitizer_set_report_fd@@Base+0x62c4>
   1c76c:	add	w10, w9, #0x8
   1c770:	cmn	w9, #0x8
   1c774:	str	w10, [x20, #24]
   1c778:	b.gt	1c908 <__sanitizer_set_report_fd@@Base+0x62c4>
   1c77c:	b	1c8f8 <__sanitizer_set_report_fd@@Base+0x62b4>
   1c780:	cbnz	w16, 1c9cc <__sanitizer_set_report_fd@@Base+0x6388>
   1c784:	ldrsw	x8, [x20, #24]
   1c788:	tbz	w8, #31, 1c7ec <__sanitizer_set_report_fd@@Base+0x61a8>
   1c78c:	add	w9, w8, #0x8
   1c790:	cmn	w8, #0x8
   1c794:	str	w9, [x20, #24]
   1c798:	b.gt	1c7ec <__sanitizer_set_report_fd@@Base+0x61a8>
   1c79c:	ldr	x9, [x20, #8]
   1c7a0:	add	x9, x9, x8
   1c7a4:	ldr	x8, [sp, #8]
   1c7a8:	ldr	x2, [x9]
   1c7ac:	cmp	x8, x21
   1c7b0:	b.cc	1c808 <__sanitizer_set_report_fd@@Base+0x61c4>  // b.lo, b.ul, b.last
   1c7b4:	b	1c81c <__sanitizer_set_report_fd@@Base+0x61d8>
   1c7b8:	cbnz	w16, 1c9cc <__sanitizer_set_report_fd@@Base+0x6388>
   1c7bc:	ldrsw	x8, [x20, #24]
   1c7c0:	tbz	w8, #31, 1c864 <__sanitizer_set_report_fd@@Base+0x6220>
   1c7c4:	add	w9, w8, #0x8
   1c7c8:	cmn	w8, #0x8
   1c7cc:	str	w9, [x20, #24]
   1c7d0:	b.gt	1c864 <__sanitizer_set_report_fd@@Base+0x6220>
   1c7d4:	ldr	x9, [x20, #8]
   1c7d8:	add	x8, x9, x8
   1c7dc:	ldr	x9, [sp, #8]
   1c7e0:	cmp	x9, x21
   1c7e4:	b.cs	1c470 <__sanitizer_set_report_fd@@Base+0x5e2c>  // b.hs, b.nlast
   1c7e8:	b	1c45c <__sanitizer_set_report_fd@@Base+0x5e18>
   1c7ec:	ldr	x9, [x20]
   1c7f0:	add	x8, x9, #0x8
   1c7f4:	str	x8, [x20]
   1c7f8:	ldr	x8, [sp, #8]
   1c7fc:	ldr	x2, [x9]
   1c800:	cmp	x8, x21
   1c804:	b.cs	1c81c <__sanitizer_set_report_fd@@Base+0x61d8>  // b.hs, b.nlast
   1c808:	mov	w9, #0x30                  	// #48
   1c80c:	strb	w9, [x8]
   1c810:	ldr	x8, [sp, #8]
   1c814:	add	x8, x8, #0x1
   1c818:	str	x8, [sp, #8]
   1c81c:	cmp	x8, x21
   1c820:	b.cs	1c834 <__sanitizer_set_report_fd@@Base+0x61f0>  // b.hs, b.nlast
   1c824:	strb	w27, [x8]
   1c828:	ldr	x8, [sp, #8]
   1c82c:	add	x8, x8, #0x1
   1c830:	str	x8, [sp, #8]
   1c834:	add	x0, sp, #0x8
   1c838:	mov	w3, #0x10                  	// #16
   1c83c:	mov	w4, #0xc                   	// #12
   1c840:	mov	w5, #0x1                   	// #1
   1c844:	mov	x1, x21
   1c848:	mov	w6, wzr
   1c84c:	mov	w7, wzr
   1c850:	bl	1ccc0 <__sanitizer_on_print@@Base+0x270>
   1c854:	add	w8, w19, w0
   1c858:	add	w19, w8, #0x2
   1c85c:	add	x22, x22, #0x1
   1c860:	b	1c478 <__sanitizer_set_report_fd@@Base+0x5e34>
   1c864:	ldr	x8, [x20]
   1c868:	add	x9, x8, #0x8
   1c86c:	str	x9, [x20]
   1c870:	ldr	x9, [sp, #8]
   1c874:	cmp	x9, x21
   1c878:	b.cs	1c470 <__sanitizer_set_report_fd@@Base+0x5e2c>  // b.hs, b.nlast
   1c87c:	b	1c45c <__sanitizer_set_report_fd@@Base+0x5e18>
   1c880:	tbz	w9, #31, 1c8a0 <__sanitizer_set_report_fd@@Base+0x625c>
   1c884:	add	w10, w9, #0x8
   1c888:	cmn	w9, #0x8
   1c88c:	str	w10, [x20, #24]
   1c890:	b.gt	1c8a0 <__sanitizer_set_report_fd@@Base+0x625c>
   1c894:	ldr	x10, [x20, #8]
   1c898:	add	x9, x10, x9
   1c89c:	b	1c8ac <__sanitizer_set_report_fd@@Base+0x6268>
   1c8a0:	ldr	x9, [x20]
   1c8a4:	add	x10, x9, #0x8
   1c8a8:	str	x10, [x20]
   1c8ac:	ldr	w2, [x9]
   1c8b0:	ldrb	w9, [x22]
   1c8b4:	cmp	w8, #0x30
   1c8b8:	cset	w5, eq  // eq = none
   1c8bc:	add	x0, sp, #0x8
   1c8c0:	cmp	w9, #0x58
   1c8c4:	cset	w7, eq  // eq = none
   1c8c8:	cmp	w9, #0x75
   1c8cc:	csel	w3, w24, w29, eq  // eq = none
   1c8d0:	mov	x1, x21
   1c8d4:	mov	w6, wzr
   1c8d8:	b	1c970 <__sanitizer_set_report_fd@@Base+0x632c>
   1c8dc:	cmp	w13, #0x7a
   1c8e0:	b.ne	1c91c <__sanitizer_set_report_fd@@Base+0x62d8>  // b.any
   1c8e4:	tbz	w9, #31, 1c908 <__sanitizer_set_report_fd@@Base+0x62c4>
   1c8e8:	add	w10, w9, #0x8
   1c8ec:	cmn	w9, #0x8
   1c8f0:	str	w10, [x20, #24]
   1c8f4:	b.gt	1c908 <__sanitizer_set_report_fd@@Base+0x62c4>
   1c8f8:	ldr	x10, [x20, #8]
   1c8fc:	add	x9, x10, x9
   1c900:	ldr	x9, [x9]
   1c904:	b	1c94c <__sanitizer_set_report_fd@@Base+0x6308>
   1c908:	ldr	x9, [x20]
   1c90c:	add	x10, x9, #0x8
   1c910:	str	x10, [x20]
   1c914:	ldr	x9, [x9]
   1c918:	b	1c94c <__sanitizer_set_report_fd@@Base+0x6308>
   1c91c:	tbz	w9, #31, 1c93c <__sanitizer_set_report_fd@@Base+0x62f8>
   1c920:	add	w10, w9, #0x8
   1c924:	cmn	w9, #0x8
   1c928:	str	w10, [x20, #24]
   1c92c:	b.gt	1c93c <__sanitizer_set_report_fd@@Base+0x62f8>
   1c930:	ldr	x10, [x20, #8]
   1c934:	add	x9, x10, x9
   1c938:	b	1c948 <__sanitizer_set_report_fd@@Base+0x6304>
   1c93c:	ldr	x9, [x20]
   1c940:	add	x10, x9, #0x8
   1c944:	str	x10, [x20]
   1c948:	ldrsw	x9, [x9]
   1c94c:	cmp	w8, #0x30
   1c950:	cset	w5, eq  // eq = none
   1c954:	cmp	x9, #0x0
   1c958:	cneg	x2, x9, mi  // mi = first
   1c95c:	lsr	x6, x9, #63
   1c960:	add	x0, sp, #0x8
   1c964:	mov	w3, #0xa                   	// #10
   1c968:	mov	x1, x21
   1c96c:	mov	w7, wzr
   1c970:	bl	1ccc0 <__sanitizer_on_print@@Base+0x270>
   1c974:	add	w19, w0, w19
   1c978:	add	x22, x22, #0x1
   1c97c:	b	1c478 <__sanitizer_set_report_fd@@Base+0x5e34>
   1c980:	ldr	x8, [sp, #8]
   1c984:	cmp	x8, x21
   1c988:	b.hi	1ca34 <__sanitizer_set_report_fd@@Base+0x63f0>  // b.pmore
   1c98c:	add	x9, x21, #0x1
   1c990:	cmp	x8, x9
   1c994:	b.cs	1c9a8 <__sanitizer_set_report_fd@@Base+0x6364>  // b.hs, b.nlast
   1c998:	strb	wzr, [x8]
   1c99c:	ldr	x8, [sp, #8]
   1c9a0:	add	x8, x8, #0x1
   1c9a4:	str	x8, [sp, #8]
   1c9a8:	mov	w0, w19
   1c9ac:	ldp	x20, x19, [sp, #96]
   1c9b0:	ldp	x22, x21, [sp, #80]
   1c9b4:	ldp	x24, x23, [sp, #64]
   1c9b8:	ldp	x26, x25, [sp, #48]
   1c9bc:	ldp	x28, x27, [sp, #32]
   1c9c0:	ldp	x29, x30, [sp, #16]
   1c9c4:	add	sp, sp, #0x70
   1c9c8:	ret
   1c9cc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c9d0:	add	x0, x0, #0x343
   1c9d4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1c9d8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1c9dc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c9e0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c9e4:	add	x0, x0, #0x3a8
   1c9e8:	add	x2, x2, #0x3fb
   1c9ec:	mov	w1, #0xaa                  	// #170
   1c9f0:	b	1ca08 <__sanitizer_set_report_fd@@Base+0x63c4>
   1c9f4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c9f8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1c9fc:	add	x0, x0, #0x3a8
   1ca00:	add	x2, x2, #0x43b
   1ca04:	mov	w1, #0xc7                  	// #199
   1ca08:	mov	x3, xzr
   1ca0c:	mov	x4, xzr
   1ca10:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ca14:	adrp	x0, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   1ca18:	add	x0, x0, #0xdbe
   1ca1c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1ca20:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1ca24:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ca28:	add	x0, x0, #0x398
   1ca2c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1ca30:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1ca34:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ca38:	add	x0, x0, #0x464
   1ca3c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1ca40:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1ca44:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ca48:	str	x0, [x8, #1664]
   1ca4c:	ret

000000000001ca50 <__sanitizer_on_print@@Base>:
   1ca50:	ret
   1ca54:	sub	sp, sp, #0x110
   1ca58:	stp	x29, x30, [sp, #256]
   1ca5c:	mov	x9, #0xffffffffffffffc8    	// #-56
   1ca60:	mov	x10, sp
   1ca64:	add	x11, sp, #0x88
   1ca68:	movk	x9, #0xff80, lsl #32
   1ca6c:	add	x12, sp, #0x110
   1ca70:	add	x10, x10, #0x80
   1ca74:	add	x11, x11, #0x38
   1ca78:	stp	x10, x9, [sp, #240]
   1ca7c:	stp	x12, x11, [sp, #224]
   1ca80:	stp	q0, q1, [sp]
   1ca84:	ldp	q1, q0, [sp, #224]
   1ca88:	mov	x8, x0
   1ca8c:	stp	x1, x2, [sp, #136]
   1ca90:	add	x2, sp, #0xc0
   1ca94:	mov	w0, wzr
   1ca98:	mov	x1, x8
   1ca9c:	stp	x3, x4, [sp, #152]
   1caa0:	stp	x5, x6, [sp, #168]
   1caa4:	str	x7, [sp, #184]
   1caa8:	stp	q2, q3, [sp, #32]
   1caac:	stp	q4, q5, [sp, #64]
   1cab0:	stp	q6, q7, [sp, #96]
   1cab4:	stp	q1, q0, [sp, #192]
   1cab8:	bl	1cac8 <__sanitizer_on_print@@Base+0x78>
   1cabc:	ldp	x29, x30, [sp, #256]
   1cac0:	add	sp, sp, #0x110
   1cac4:	ret
   1cac8:	sub	sp, sp, #0x1c0
   1cacc:	stp	x29, x30, [sp, #432]
   1cad0:	ldp	q1, q0, [x2]
   1cad4:	mov	x8, x1
   1cad8:	and	w0, w0, #0x1
   1cadc:	add	x1, sp, #0x20
   1cae0:	mov	x3, sp
   1cae4:	mov	x2, x8
   1cae8:	stp	q1, q0, [sp]
   1caec:	bl	1cfa8 <__sanitizer_on_print@@Base+0x558>
   1caf0:	ldp	x29, x30, [sp, #432]
   1caf4:	add	sp, sp, #0x1c0
   1caf8:	ret
   1cafc:	sub	sp, sp, #0x110
   1cb00:	stp	x29, x30, [sp, #256]
   1cb04:	mov	x9, #0xffffffffffffffc8    	// #-56
   1cb08:	mov	x10, sp
   1cb0c:	add	x11, sp, #0x88
   1cb10:	movk	x9, #0xff80, lsl #32
   1cb14:	add	x12, sp, #0x110
   1cb18:	add	x10, x10, #0x80
   1cb1c:	add	x11, x11, #0x38
   1cb20:	stp	x10, x9, [sp, #240]
   1cb24:	stp	x12, x11, [sp, #224]
   1cb28:	stp	q0, q1, [sp]
   1cb2c:	ldp	q1, q0, [sp, #224]
   1cb30:	mov	x8, x0
   1cb34:	stp	x1, x2, [sp, #136]
   1cb38:	add	x2, sp, #0xc0
   1cb3c:	mov	w0, #0x1                   	// #1
   1cb40:	mov	x1, x8
   1cb44:	stp	x3, x4, [sp, #152]
   1cb48:	stp	x5, x6, [sp, #168]
   1cb4c:	str	x7, [sp, #184]
   1cb50:	stp	q2, q3, [sp, #32]
   1cb54:	stp	q4, q5, [sp, #64]
   1cb58:	stp	q6, q7, [sp, #96]
   1cb5c:	stp	q1, q0, [sp, #192]
   1cb60:	bl	1cac8 <__sanitizer_on_print@@Base+0x78>
   1cb64:	ldp	x29, x30, [sp, #256]
   1cb68:	add	sp, sp, #0x110
   1cb6c:	ret
   1cb70:	sub	sp, sp, #0x100
   1cb74:	mov	x8, #0xffffffffffffffd8    	// #-40
   1cb78:	mov	x9, sp
   1cb7c:	add	x10, sp, #0x88
   1cb80:	movk	x8, #0xff80, lsl #32
   1cb84:	add	x11, sp, #0x100
   1cb88:	add	x9, x9, #0x80
   1cb8c:	add	x10, x10, #0x28
   1cb90:	stp	x8, x30, [sp, #232]
   1cb94:	stp	x10, x9, [sp, #216]
   1cb98:	str	x11, [sp, #208]
   1cb9c:	stp	q1, q2, [sp, #16]
   1cba0:	str	q0, [sp]
   1cba4:	ldp	q1, q0, [sp, #208]
   1cba8:	stp	x3, x4, [sp, #136]
   1cbac:	add	x3, sp, #0xb0
   1cbb0:	stp	x5, x6, [sp, #152]
   1cbb4:	str	x7, [sp, #168]
   1cbb8:	stp	q3, q4, [sp, #48]
   1cbbc:	stp	q5, q6, [sp, #80]
   1cbc0:	str	q7, [sp, #112]
   1cbc4:	stp	q1, q0, [sp, #176]
   1cbc8:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1cbcc:	ldr	x30, [sp, #240]
   1cbd0:	add	sp, sp, #0x100
   1cbd4:	ret
   1cbd8:	sub	sp, sp, #0x110
   1cbdc:	str	x29, [sp, #240]
   1cbe0:	stp	x30, x19, [sp, #256]
   1cbe4:	stp	q4, q5, [sp, #64]
   1cbe8:	stp	q2, q3, [sp, #32]
   1cbec:	stp	q0, q1, [sp]
   1cbf0:	stp	x6, x7, [sp, #160]
   1cbf4:	stp	x4, x5, [sp, #144]
   1cbf8:	stp	x2, x3, [sp, #128]
   1cbfc:	stp	q6, q7, [sp, #96]
   1cc00:	ldp	x4, x3, [x0, #16]
   1cc04:	cmp	x3, x4
   1cc08:	b.cs	1cc90 <__sanitizer_on_print@@Base+0x240>  // b.hs, b.nlast
   1cc0c:	mov	x8, #0xffffffffffffffd0    	// #-48
   1cc10:	mov	x10, sp
   1cc14:	add	x11, sp, #0x80
   1cc18:	movk	x8, #0xff80, lsl #32
   1cc1c:	add	x9, sp, #0x110
   1cc20:	add	x10, x10, #0x80
   1cc24:	add	x11, x11, #0x30
   1cc28:	stp	x10, x8, [sp, #224]
   1cc2c:	stp	x9, x11, [sp, #208]
   1cc30:	ldr	x8, [x0]
   1cc34:	ldr	x9, [x0, #24]
   1cc38:	ldr	w10, [x0, #16]
   1cc3c:	ldp	q0, q1, [sp, #208]
   1cc40:	mov	x19, x0
   1cc44:	mov	x2, x1
   1cc48:	add	x0, x8, x9
   1cc4c:	sub	w1, w10, w9
   1cc50:	add	x3, sp, #0xb0
   1cc54:	stp	q0, q1, [sp, #176]
   1cc58:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1cc5c:	ldr	x8, [x19]
   1cc60:	ldr	x9, [x19, #24]
   1cc64:	add	x0, x8, x9
   1cc68:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1cc6c:	ldp	x4, x8, [x19, #16]
   1cc70:	add	x3, x8, x0
   1cc74:	cmp	x3, x4
   1cc78:	str	x3, [x19, #24]
   1cc7c:	b.cs	1cca8 <__sanitizer_on_print@@Base+0x258>  // b.hs, b.nlast
   1cc80:	ldp	x30, x19, [sp, #256]
   1cc84:	ldr	x29, [sp, #240]
   1cc88:	add	sp, sp, #0x110
   1cc8c:	ret
   1cc90:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cc94:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cc98:	add	x0, x0, #0x3a8
   1cc9c:	add	x2, x2, #0x475
   1cca0:	mov	w1, #0x15d                 	// #349
   1cca4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1cca8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ccac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ccb0:	add	x0, x0, #0x3a8
   1ccb4:	add	x2, x2, #0x475
   1ccb8:	mov	w1, #0x163                 	// #355
   1ccbc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ccc0:	sub	sp, sp, #0x140
   1ccc4:	str	x29, [sp, #240]
   1ccc8:	stp	x30, x25, [sp, #256]
   1cccc:	stp	x24, x23, [sp, #272]
   1ccd0:	stp	x22, x21, [sp, #288]
   1ccd4:	stp	x20, x19, [sp, #304]
   1ccd8:	and	w8, w3, #0xff
   1ccdc:	mov	w21, w7
   1cce0:	mov	w22, w5
   1cce4:	mov	x19, x1
   1cce8:	cmp	w8, #0xa
   1ccec:	mov	x20, x0
   1ccf0:	b.eq	1ccfc <__sanitizer_on_print@@Base+0x2ac>  // b.none
   1ccf4:	cmp	w8, #0x10
   1ccf8:	b.ne	1cf68 <__sanitizer_on_print@@Base+0x518>  // b.any
   1ccfc:	cmp	w8, #0xa
   1cd00:	b.eq	1cd08 <__sanitizer_on_print@@Base+0x2b8>  // b.none
   1cd04:	tbnz	w6, #0, 1cf78 <__sanitizer_on_print@@Base+0x528>
   1cd08:	cbnz	x2, 1cd10 <__sanitizer_on_print@@Base+0x2c0>
   1cd0c:	tbnz	w6, #0, 1cf88 <__sanitizer_on_print@@Base+0x538>
   1cd10:	and	w8, w4, #0xff
   1cd14:	cmp	w8, #0x1e
   1cd18:	b.cs	1cf98 <__sanitizer_on_print@@Base+0x548>  // b.hs, b.nlast
   1cd1c:	tst	w4, #0xff
   1cd20:	cset	w8, ne  // ne = any
   1cd24:	mov	w24, wzr
   1cd28:	and	w8, w8, w6
   1cd2c:	eor	w23, w6, #0x1
   1cd30:	tbz	w22, #0, 1cd5c <__sanitizer_on_print@@Base+0x30c>
   1cd34:	tbnz	w23, #0, 1cd5c <__sanitizer_on_print@@Base+0x30c>
   1cd38:	ldr	x9, [x20]
   1cd3c:	cmp	x9, x19
   1cd40:	b.cs	1cd58 <__sanitizer_on_print@@Base+0x308>  // b.hs, b.nlast
   1cd44:	mov	w10, #0x2d                  	// #45
   1cd48:	strb	w10, [x9]
   1cd4c:	ldr	x9, [x20]
   1cd50:	add	x9, x9, #0x1
   1cd54:	str	x9, [x20]
   1cd58:	mov	w24, #0x1                   	// #1
   1cd5c:	mov	x9, xzr
   1cd60:	sbfx	w10, w8, #0, #1
   1cd64:	sub	w11, w4, w8
   1cd68:	and	x12, x3, #0xff
   1cd6c:	mov	w8, #0xffffffff            	// #-1
   1cd70:	mov	x13, sp
   1cd74:	cmp	x9, #0xf0
   1cd78:	b.eq	1cf58 <__sanitizer_on_print@@Base+0x508>  // b.none
   1cd7c:	udiv	x14, x2, x12
   1cd80:	msub	x15, x14, x12, x2
   1cd84:	cmp	x2, x12
   1cd88:	str	x15, [x13, x9]
   1cd8c:	add	x9, x9, #0x8
   1cd90:	add	w8, w8, #0x1
   1cd94:	mov	x2, x14
   1cd98:	b.cs	1cd74 <__sanitizer_on_print@@Base+0x324>  // b.hs, b.nlast
   1cd9c:	add	w12, w8, #0x1
   1cda0:	and	w25, w11, #0xff
   1cda4:	cmp	w25, w12
   1cda8:	b.ls	1cdd4 <__sanitizer_on_print@@Base+0x384>  // b.plast
   1cdac:	mov	x8, sp
   1cdb0:	add	w10, w4, w10
   1cdb4:	add	x0, x8, x9
   1cdb8:	and	x8, x10, #0xff
   1cdbc:	lsl	x8, x8, #3
   1cdc0:	sub	x2, x8, x9
   1cdc4:	mov	w1, wzr
   1cdc8:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1cdcc:	mov	w12, w25
   1cdd0:	b	1cddc <__sanitizer_on_print@@Base+0x38c>
   1cdd4:	cmp	w12, #0x1
   1cdd8:	b.lt	1ce94 <__sanitizer_on_print@@Base+0x444>  // b.tstop
   1cddc:	mov	w8, w12
   1cde0:	add	w0, w24, w12
   1cde4:	tbz	w22, #0, 1ce34 <__sanitizer_on_print@@Base+0x3e4>
   1cde8:	mov	x9, sp
   1cdec:	sub	x9, x9, #0x8
   1cdf0:	mov	w10, #0x30                  	// #48
   1cdf4:	b	1ce08 <__sanitizer_on_print@@Base+0x3b8>
   1cdf8:	add	x11, x8, #0x1
   1cdfc:	cmp	x11, #0x1
   1ce00:	add	w24, w24, #0x1
   1ce04:	b.le	1cea4 <__sanitizer_on_print@@Base+0x454>
   1ce08:	ldr	x11, [x9, x8, lsl #3]
   1ce0c:	cbnz	x11, 1ce90 <__sanitizer_on_print@@Base+0x440>
   1ce10:	ldr	x11, [x20]
   1ce14:	sub	x8, x8, #0x1
   1ce18:	cmp	x11, x19
   1ce1c:	b.cs	1cdf8 <__sanitizer_on_print@@Base+0x3a8>  // b.hs, b.nlast
   1ce20:	strb	w10, [x11]
   1ce24:	ldr	x11, [x20]
   1ce28:	add	x11, x11, #0x1
   1ce2c:	str	x11, [x20]
   1ce30:	b	1cdf8 <__sanitizer_on_print@@Base+0x3a8>
   1ce34:	mov	x10, sp
   1ce38:	mov	w9, #0x20                  	// #32
   1ce3c:	sub	x10, x10, #0x8
   1ce40:	mov	w11, #0x30                  	// #48
   1ce44:	b	1ce5c <__sanitizer_on_print@@Base+0x40c>
   1ce48:	add	x8, x12, #0x1
   1ce4c:	cmp	x8, #0x1
   1ce50:	add	w24, w24, #0x1
   1ce54:	mov	x8, x12
   1ce58:	b.le	1cea4 <__sanitizer_on_print@@Base+0x454>
   1ce5c:	ldr	x12, [x10, x8, lsl #3]
   1ce60:	cbnz	x12, 1ce90 <__sanitizer_on_print@@Base+0x440>
   1ce64:	ldr	x13, [x20]
   1ce68:	sub	x12, x8, #0x1
   1ce6c:	cmp	x13, x19
   1ce70:	b.cs	1ce48 <__sanitizer_on_print@@Base+0x3f8>  // b.hs, b.nlast
   1ce74:	cmp	x8, #0x1
   1ce78:	csel	w8, w11, w9, eq  // eq = none
   1ce7c:	strb	w8, [x13]
   1ce80:	ldr	x8, [x20]
   1ce84:	add	x8, x8, #0x1
   1ce88:	str	x8, [x20]
   1ce8c:	b	1ce48 <__sanitizer_on_print@@Base+0x3f8>
   1ce90:	sub	w8, w8, #0x1
   1ce94:	mov	w0, w24
   1ce98:	orr	w9, w23, w22
   1ce9c:	tbz	w9, #0, 1ceb0 <__sanitizer_on_print@@Base+0x460>
   1cea0:	b	1ced4 <__sanitizer_on_print@@Base+0x484>
   1cea4:	mov	w8, #0xffffffff            	// #-1
   1cea8:	orr	w9, w23, w22
   1ceac:	tbnz	w9, #0, 1ced4 <__sanitizer_on_print@@Base+0x484>
   1ceb0:	ldr	x9, [x20]
   1ceb4:	cmp	x9, x19
   1ceb8:	b.cs	1ced0 <__sanitizer_on_print@@Base+0x480>  // b.hs, b.nlast
   1cebc:	mov	w10, #0x2d                  	// #45
   1cec0:	strb	w10, [x9]
   1cec4:	ldr	x9, [x20]
   1cec8:	add	x9, x9, #0x1
   1cecc:	str	x9, [x20]
   1ced0:	add	w0, w0, #0x1
   1ced4:	tbnz	w8, #31, 1cf3c <__sanitizer_on_print@@Base+0x4ec>
   1ced8:	tst	w21, #0x1
   1cedc:	mov	w10, #0x57                  	// #87
   1cee0:	mov	w11, #0x37                  	// #55
   1cee4:	mov	w8, w8
   1cee8:	mov	x9, sp
   1ceec:	csel	w10, w11, w10, ne  // ne = any
   1cef0:	mov	w11, #0x30                  	// #48
   1cef4:	b	1cf08 <__sanitizer_on_print@@Base+0x4b8>
   1cef8:	cmp	x8, #0x0
   1cefc:	sub	x8, x8, #0x1
   1cf00:	add	w0, w0, #0x1
   1cf04:	b.le	1cf3c <__sanitizer_on_print@@Base+0x4ec>
   1cf08:	ldr	x12, [x20]
   1cf0c:	cmp	x12, x19
   1cf10:	b.cs	1cef8 <__sanitizer_on_print@@Base+0x4a8>  // b.hs, b.nlast
   1cf14:	ldr	x13, [x9, x8, lsl #3]
   1cf18:	and	w14, w13, #0xfe
   1cf1c:	cmp	w14, #0xa
   1cf20:	csel	w14, w11, w10, cc  // cc = lo, ul, last
   1cf24:	add	w13, w14, w13
   1cf28:	strb	w13, [x12]
   1cf2c:	ldr	x12, [x20]
   1cf30:	add	x12, x12, #0x1
   1cf34:	str	x12, [x20]
   1cf38:	b	1cef8 <__sanitizer_on_print@@Base+0x4a8>
   1cf3c:	ldp	x20, x19, [sp, #304]
   1cf40:	ldp	x22, x21, [sp, #288]
   1cf44:	ldp	x24, x23, [sp, #272]
   1cf48:	ldp	x30, x25, [sp, #256]
   1cf4c:	ldr	x29, [sp, #240]
   1cf50:	add	sp, sp, #0x140
   1cf54:	ret
   1cf58:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cf5c:	add	x0, x0, #0x4f8
   1cf60:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1cf64:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1cf68:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cf6c:	add	x0, x0, #0x48e
   1cf70:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1cf74:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1cf78:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cf7c:	add	x0, x0, #0x4a7
   1cf80:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1cf84:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1cf88:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cf8c:	add	x0, x0, #0x4bf
   1cf90:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1cf94:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1cf98:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1cf9c:	add	x0, x0, #0x4db
   1cfa0:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1cfa4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1cfa8:	sub	sp, sp, #0x80
   1cfac:	stp	x30, x25, [sp, #64]
   1cfb0:	stp	x24, x23, [sp, #80]
   1cfb4:	stp	x22, x21, [sp, #96]
   1cfb8:	stp	x20, x19, [sp, #112]
   1cfbc:	ldp	q1, q0, [x3]
   1cfc0:	mov	x21, x3
   1cfc4:	mov	x20, x2
   1cfc8:	mov	x19, x1
   1cfcc:	stp	q1, q0, [sp, #32]
   1cfd0:	tbz	w0, #0, 1d134 <__sanitizer_on_print@@Base+0x6e4>
   1cfd4:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   1cfd8:	mov	x22, x0
   1cfdc:	bl	13dc0 <__sanitizer_report_error_summary@@Base+0x570>
   1cfe0:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1cfe4:	ldr	x24, [x24, #4056]
   1cfe8:	mov	x3, x0
   1cfec:	mov	w0, wzr
   1cff0:	cbz	x3, 1d018 <__sanitizer_on_print@@Base+0x5c8>
   1cff4:	ldrb	w8, [x24, #48]
   1cff8:	cbz	w8, 1d018 <__sanitizer_on_print@@Base+0x5c8>
   1cffc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d000:	add	x2, x2, #0x523
   1d004:	mov	w1, #0x190                 	// #400
   1d008:	mov	x0, x19
   1d00c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1d010:	cmp	w0, #0x18f
   1d014:	b.gt	1d078 <__sanitizer_on_print@@Base+0x628>
   1d018:	sxtw	x25, w0
   1d01c:	mov	w23, #0x190                 	// #400
   1d020:	add	x8, x19, x25
   1d024:	sub	w9, w23, w0
   1d028:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d02c:	sxtw	x1, w9
   1d030:	add	x2, x2, #0x548
   1d034:	mov	x0, x8
   1d038:	mov	w3, w22
   1d03c:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1d040:	add	x22, x25, w0, sxtw
   1d044:	cmp	w22, #0x18f
   1d048:	b.gt	1d078 <__sanitizer_on_print@@Base+0x628>
   1d04c:	ldp	q1, q0, [x21]
   1d050:	add	x0, x19, x22
   1d054:	sub	w1, w23, w22
   1d058:	mov	x3, sp
   1d05c:	mov	x2, x20
   1d060:	stp	q1, q0, [sp]
   1d064:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1d068:	add	w8, w0, w22
   1d06c:	cmp	w8, #0x190
   1d070:	mov	x22, x19
   1d074:	b.lt	1d1a4 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   1d078:	ldp	q1, q0, [sp, #32]
   1d07c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d080:	add	x1, x1, #0x51c
   1d084:	mov	w0, #0x4000                	// #16384
   1d088:	mov	w2, wzr
   1d08c:	stp	q1, q0, [x21]
   1d090:	mov	w25, #0x4000                	// #16384
   1d094:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1d098:	mov	x22, x0
   1d09c:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   1d0a0:	mov	x23, x0
   1d0a4:	bl	13dc0 <__sanitizer_report_error_summary@@Base+0x570>
   1d0a8:	mov	x3, x0
   1d0ac:	mov	w0, wzr
   1d0b0:	cbz	x3, 1d0d8 <__sanitizer_on_print@@Base+0x688>
   1d0b4:	ldrb	w8, [x24, #48]
   1d0b8:	cbz	w8, 1d0d8 <__sanitizer_on_print@@Base+0x688>
   1d0bc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d0c0:	add	x2, x2, #0x523
   1d0c4:	mov	w1, #0x4000                	// #16384
   1d0c8:	mov	x0, x22
   1d0cc:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1d0d0:	cmp	w0, #0x4, lsl #12
   1d0d4:	b.ge	1d204 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   1d0d8:	sxtw	x24, w0
   1d0dc:	sub	w8, w25, w0
   1d0e0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d0e4:	add	x0, x22, x24
   1d0e8:	sxtw	x1, w8
   1d0ec:	add	x2, x2, #0x548
   1d0f0:	mov	w3, w23
   1d0f4:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   1d0f8:	add	x24, x24, w0, sxtw
   1d0fc:	cmp	w24, #0x4, lsl #12
   1d100:	b.ge	1d204 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   1d104:	ldp	q0, q1, [x21]
   1d108:	mov	w23, #0x4000                	// #16384
   1d10c:	add	x0, x22, x24
   1d110:	sub	w1, w23, w24
   1d114:	mov	x3, sp
   1d118:	mov	x2, x20
   1d11c:	stp	q0, q1, [sp]
   1d120:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1d124:	add	w8, w0, w24
   1d128:	cmp	w8, #0x4, lsl #12
   1d12c:	b.lt	1d1a4 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   1d130:	b	1d204 <__sanitizer_on_print@@Base+0x7b4>
   1d134:	ldp	q1, q0, [x21]
   1d138:	mov	x3, sp
   1d13c:	mov	w1, #0x190                 	// #400
   1d140:	mov	x0, x19
   1d144:	mov	x2, x20
   1d148:	stp	q1, q0, [sp]
   1d14c:	mov	w23, #0x190                 	// #400
   1d150:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1d154:	cmp	w0, #0x190
   1d158:	mov	x22, x19
   1d15c:	b.lt	1d1a4 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   1d160:	ldp	q1, q0, [sp, #32]
   1d164:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d168:	add	x1, x1, #0x51c
   1d16c:	mov	w0, #0x4000                	// #16384
   1d170:	mov	w2, wzr
   1d174:	stp	q1, q0, [x21]
   1d178:	mov	w23, #0x4000                	// #16384
   1d17c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1d180:	ldp	q0, q1, [x21]
   1d184:	mov	x3, sp
   1d188:	mov	w1, #0x4000                	// #16384
   1d18c:	mov	x2, x20
   1d190:	mov	x22, x0
   1d194:	stp	q0, q1, [sp]
   1d198:	bl	1c3f4 <__sanitizer_set_report_fd@@Base+0x5db0>
   1d19c:	cmp	w0, #0x4, lsl #12
   1d1a0:	b.ge	1d204 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   1d1a4:	mov	x0, x22
   1d1a8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1d1ac:	mov	x0, x22
   1d1b0:	bl	13864 <__sanitizer_report_error_summary@@Base+0x14>
   1d1b4:	mov	x0, x22
   1d1b8:	bl	69e0 <__sanitizer_on_print@plt>
   1d1bc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d1c0:	ldr	x8, [x8, #1664]
   1d1c4:	cbz	x8, 1d1d0 <__sanitizer_on_print@@Base+0x780>
   1d1c8:	mov	x0, x22
   1d1cc:	blr	x8
   1d1d0:	mov	x0, x22
   1d1d4:	bl	20fec <__sanitizer_sandbox_on_notify@@Base+0x96c>
   1d1d8:	cmp	x22, x19
   1d1dc:	b.eq	1d1ec <__sanitizer_on_print@@Base+0x79c>  // b.none
   1d1e0:	mov	x0, x22
   1d1e4:	mov	x1, x23
   1d1e8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1d1ec:	ldp	x20, x19, [sp, #112]
   1d1f0:	ldp	x22, x21, [sp, #96]
   1d1f4:	ldp	x24, x23, [sp, #80]
   1d1f8:	ldp	x30, x25, [sp, #64]
   1d1fc:	add	sp, sp, #0x80
   1d200:	ret
   1d204:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d208:	add	x0, x0, #0x528
   1d20c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1d210:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1d214:	sub	w8, w0, #0x30
   1d218:	and	w8, w8, #0xff
   1d21c:	cmp	w8, #0x9
   1d220:	and	w8, w0, #0xff
   1d224:	b.hi	1d238 <__sanitizer_on_print@@Base+0x7e8>  // b.pmore
   1d228:	sub	w8, w8, #0x30
   1d22c:	cmp	w8, #0xa
   1d230:	cset	w0, cc  // cc = lo, ul, last
   1d234:	ret
   1d238:	sub	w9, w0, #0x61
   1d23c:	and	w9, w9, #0xff
   1d240:	cmp	w9, #0x5
   1d244:	b.hi	1d258 <__sanitizer_on_print@@Base+0x808>  // b.pmore
   1d248:	sub	w8, w8, #0x57
   1d24c:	cmp	w8, #0xa
   1d250:	cset	w0, cc  // cc = lo, ul, last
   1d254:	ret
   1d258:	sub	w9, w0, #0x41
   1d25c:	and	w9, w9, #0xff
   1d260:	sub	w8, w8, #0x37
   1d264:	cmp	w9, #0x6
   1d268:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
   1d26c:	cmp	w8, #0xa
   1d270:	cset	w0, cc  // cc = lo, ul, last
   1d274:	ret
   1d278:	mov	x8, x0
   1d27c:	ldr	x9, [x8]
   1d280:	mov	x0, xzr
   1d284:	mov	w10, #0xa                   	// #10
   1d288:	add	x9, x9, #0x1
   1d28c:	ldurb	w12, [x9, #-1]
   1d290:	sub	w11, w12, #0x30
   1d294:	cmp	w11, #0x9
   1d298:	b.ls	1d2ac <__sanitizer_on_print@@Base+0x85c>  // b.plast
   1d29c:	sub	w11, w12, #0x61
   1d2a0:	cmp	w11, #0x5
   1d2a4:	b.hi	1d2d4 <__sanitizer_on_print@@Base+0x884>  // b.pmore
   1d2a8:	sub	w11, w12, #0x57
   1d2ac:	cmp	w11, #0x9
   1d2b0:	b.hi	1d2ec <__sanitizer_on_print@@Base+0x89c>  // b.pmore
   1d2b4:	madd	x0, x0, x10, x11
   1d2b8:	str	x9, [x8]
   1d2bc:	add	x9, x9, #0x1
   1d2c0:	ldurb	w12, [x9, #-1]
   1d2c4:	sub	w11, w12, #0x30
   1d2c8:	cmp	w11, #0x9
   1d2cc:	b.hi	1d29c <__sanitizer_on_print@@Base+0x84c>  // b.pmore
   1d2d0:	b	1d2ac <__sanitizer_on_print@@Base+0x85c>
   1d2d4:	sub	w11, w12, #0x41
   1d2d8:	cmp	w11, #0x5
   1d2dc:	b.hi	1d2ec <__sanitizer_on_print@@Base+0x89c>  // b.pmore
   1d2e0:	sub	w11, w12, #0x37
   1d2e4:	cmp	w11, #0x9
   1d2e8:	b.ls	1d2b4 <__sanitizer_on_print@@Base+0x864>  // b.plast
   1d2ec:	ret
   1d2f0:	sub	w8, w0, #0x30
   1d2f4:	and	w8, w8, #0xff
   1d2f8:	cmp	w8, #0x9
   1d2fc:	and	w8, w0, #0xff
   1d300:	b.hi	1d314 <__sanitizer_on_print@@Base+0x8c4>  // b.pmore
   1d304:	sub	w8, w8, #0x30
   1d308:	cmp	w8, #0x10
   1d30c:	cset	w0, cc  // cc = lo, ul, last
   1d310:	ret
   1d314:	sub	w9, w0, #0x61
   1d318:	and	w9, w9, #0xff
   1d31c:	cmp	w9, #0x5
   1d320:	b.hi	1d334 <__sanitizer_on_print@@Base+0x8e4>  // b.pmore
   1d324:	sub	w8, w8, #0x57
   1d328:	cmp	w8, #0x10
   1d32c:	cset	w0, cc  // cc = lo, ul, last
   1d330:	ret
   1d334:	sub	w9, w0, #0x41
   1d338:	and	w9, w9, #0xff
   1d33c:	sub	w8, w8, #0x37
   1d340:	cmp	w9, #0x6
   1d344:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
   1d348:	cmp	w8, #0x10
   1d34c:	cset	w0, cc  // cc = lo, ul, last
   1d350:	ret
   1d354:	mov	x8, x0
   1d358:	ldr	x9, [x8]
   1d35c:	mov	x0, xzr
   1d360:	add	x9, x9, #0x1
   1d364:	ldurb	w11, [x9, #-1]
   1d368:	sub	w10, w11, #0x30
   1d36c:	cmp	w10, #0x9
   1d370:	b.ls	1d384 <__sanitizer_on_print@@Base+0x934>  // b.plast
   1d374:	sub	w10, w11, #0x61
   1d378:	cmp	w10, #0x5
   1d37c:	b.hi	1d398 <__sanitizer_on_print@@Base+0x948>  // b.pmore
   1d380:	sub	w10, w11, #0x57
   1d384:	cmp	w10, #0xf
   1d388:	b.hi	1d3b0 <__sanitizer_on_print@@Base+0x960>  // b.pmore
   1d38c:	add	x0, x10, x0, lsl #4
   1d390:	str	x9, [x8]
   1d394:	b	1d360 <__sanitizer_on_print@@Base+0x910>
   1d398:	sub	w10, w11, #0x41
   1d39c:	cmp	w10, #0x5
   1d3a0:	b.hi	1d3b0 <__sanitizer_on_print@@Base+0x960>  // b.pmore
   1d3a4:	sub	w10, w11, #0x37
   1d3a8:	cmp	w10, #0xf
   1d3ac:	b.ls	1d38c <__sanitizer_on_print@@Base+0x93c>  // b.plast
   1d3b0:	ret
   1d3b4:	str	x30, [sp, #-16]!
   1d3b8:	ldr	x9, [x0, #72]
   1d3bc:	cbnz	x9, 1d3e4 <__sanitizer_on_print@@Base+0x994>
   1d3c0:	mov	x8, x0
   1d3c4:	ldr	x9, [x8, #40]
   1d3c8:	mov	x0, x1
   1d3cc:	ldp	x1, x2, [x8]
   1d3d0:	mov	x5, xzr
   1d3d4:	ubfx	x3, x9, #2, #1
   1d3d8:	ubfx	x4, x9, #1, #1
   1d3dc:	ldr	x30, [sp], #16
   1d3e0:	b	13ad4 <__sanitizer_report_error_summary@@Base+0x284>
   1d3e4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d3e8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d3ec:	add	x0, x0, #0x54f
   1d3f0:	add	x2, x2, #0x5ab
   1d3f4:	mov	w1, #0x44                  	// #68
   1d3f8:	mov	x3, xzr
   1d3fc:	mov	x4, xzr
   1d400:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1d404:	sub	sp, sp, #0x40
   1d408:	str	x30, [sp, #32]
   1d40c:	stp	x20, x19, [sp, #48]
   1d410:	mov	x19, x0
   1d414:	tbz	w1, #0, 1d4ec <__sanitizer_on_print@@Base+0xa9c>
   1d418:	add	x0, sp, #0x8
   1d41c:	bl	1dc60 <__sanitizer_on_print@@Base+0x1210>
   1d420:	ldr	x8, [sp, #16]
   1d424:	cbz	x8, 1d480 <__sanitizer_on_print@@Base+0xa30>
   1d428:	adrp	x20, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d42c:	add	x20, x20, #0x688
   1d430:	mov	w8, #0x1                   	// #1
   1d434:	ldaxrb	w9, [x20]
   1d438:	stlxrb	w10, w8, [x20]
   1d43c:	cbnz	w10, 1d434 <__sanitizer_on_print@@Base+0x9e4>
   1d440:	cbz	w9, 1d450 <__sanitizer_on_print@@Base+0xa00>
   1d444:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d448:	add	x0, x0, #0x688
   1d44c:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1d450:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d454:	ldr	x1, [x8, #1688]
   1d458:	cbz	x1, 1d468 <__sanitizer_on_print@@Base+0xa18>
   1d45c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d460:	ldr	x0, [x8, #1680]
   1d464:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1d468:	ldur	q0, [sp, #8]
   1d46c:	ldr	x8, [sp, #24]
   1d470:	stur	q0, [x20, #8]
   1d474:	str	x8, [x20, #24]
   1d478:	dmb	ish
   1d47c:	strb	wzr, [x20]
   1d480:	mov	x0, x19
   1d484:	bl	1dc60 <__sanitizer_on_print@@Base+0x1210>
   1d488:	ldr	x8, [x19, #8]
   1d48c:	cbnz	x8, 1d4f4 <__sanitizer_on_print@@Base+0xaa4>
   1d490:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d494:	add	x8, x8, #0x688
   1d498:	mov	w9, #0x1                   	// #1
   1d49c:	ldaxrb	w10, [x8]
   1d4a0:	stlxrb	w11, w9, [x8]
   1d4a4:	cbnz	w11, 1d49c <__sanitizer_on_print@@Base+0xa4c>
   1d4a8:	cbz	w10, 1d4b8 <__sanitizer_on_print@@Base+0xa68>
   1d4ac:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d4b0:	add	x0, x0, #0x688
   1d4b4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1d4b8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d4bc:	ldr	x8, [x8, #1680]
   1d4c0:	cbz	x8, 1d4dc <__sanitizer_on_print@@Base+0xa8c>
   1d4c4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d4c8:	add	x8, x8, #0x690
   1d4cc:	ldr	x9, [x8, #16]
   1d4d0:	ldr	q0, [x8]
   1d4d4:	str	x9, [x19, #16]
   1d4d8:	str	q0, [x19]
   1d4dc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d4e0:	dmb	ish
   1d4e4:	strb	wzr, [x8, #1672]
   1d4e8:	b	1d4f4 <__sanitizer_on_print@@Base+0xaa4>
   1d4ec:	mov	x0, x19
   1d4f0:	bl	1dc60 <__sanitizer_on_print@@Base+0x1210>
   1d4f4:	ldr	x8, [x19]
   1d4f8:	ldr	x30, [sp, #32]
   1d4fc:	str	x8, [x19, #24]
   1d500:	ldp	x20, x19, [sp, #48]
   1d504:	add	sp, sp, #0x40
   1d508:	ret
   1d50c:	sub	sp, sp, #0x30
   1d510:	stp	x30, x19, [sp, #32]
   1d514:	add	x0, sp, #0x8
   1d518:	bl	1dc60 <__sanitizer_on_print@@Base+0x1210>
   1d51c:	ldr	x8, [sp, #16]
   1d520:	cbz	x8, 1d57c <__sanitizer_on_print@@Base+0xb2c>
   1d524:	adrp	x19, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d528:	add	x19, x19, #0x688
   1d52c:	mov	w8, #0x1                   	// #1
   1d530:	ldaxrb	w9, [x19]
   1d534:	stlxrb	w10, w8, [x19]
   1d538:	cbnz	w10, 1d530 <__sanitizer_on_print@@Base+0xae0>
   1d53c:	cbz	w9, 1d54c <__sanitizer_on_print@@Base+0xafc>
   1d540:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d544:	add	x0, x0, #0x688
   1d548:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1d54c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d550:	ldr	x1, [x8, #1688]
   1d554:	cbz	x1, 1d564 <__sanitizer_on_print@@Base+0xb14>
   1d558:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d55c:	ldr	x0, [x8, #1680]
   1d560:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1d564:	ldur	q0, [sp, #8]
   1d568:	ldr	x8, [sp, #24]
   1d56c:	stur	q0, [x19, #8]
   1d570:	str	x8, [x19, #24]
   1d574:	dmb	ish
   1d578:	strb	wzr, [x19]
   1d57c:	ldp	x30, x19, [sp, #32]
   1d580:	add	sp, sp, #0x30
   1d584:	ret
   1d588:	stp	x30, x19, [sp, #-16]!
   1d58c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d590:	mov	x19, x0
   1d594:	add	x8, x8, #0x688
   1d598:	mov	w9, #0x1                   	// #1
   1d59c:	ldaxrb	w10, [x8]
   1d5a0:	stlxrb	w11, w9, [x8]
   1d5a4:	cbnz	w11, 1d59c <__sanitizer_on_print@@Base+0xb4c>
   1d5a8:	cbz	w10, 1d5b8 <__sanitizer_on_print@@Base+0xb68>
   1d5ac:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d5b0:	add	x0, x0, #0x688
   1d5b4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   1d5b8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d5bc:	ldr	x8, [x8, #1680]
   1d5c0:	cbz	x8, 1d5dc <__sanitizer_on_print@@Base+0xb8c>
   1d5c4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d5c8:	add	x8, x8, #0x690
   1d5cc:	ldr	x9, [x8, #16]
   1d5d0:	ldr	q0, [x8]
   1d5d4:	str	x9, [x19, #16]
   1d5d8:	str	q0, [x19]
   1d5dc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d5e0:	dmb	ish
   1d5e4:	strb	wzr, [x8, #1672]
   1d5e8:	ldp	x30, x19, [sp], #16
   1d5ec:	ret
   1d5f0:	ldr	x8, [x0]
   1d5f4:	str	x8, [x0, #24]
   1d5f8:	ret
   1d5fc:	ldr	x8, [x0, #24]
   1d600:	cmp	x8, #0x0
   1d604:	cset	w0, eq  // eq = none
   1d608:	ret
   1d60c:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1d610:	mov	x8, x0
   1d614:	ldr	x0, [x0]
   1d618:	ldr	x9, [x9, #1680]
   1d61c:	cmp	x0, x9
   1d620:	b.eq	1d62c <__sanitizer_on_print@@Base+0xbdc>  // b.none
   1d624:	ldr	x1, [x8, #8]
   1d628:	b	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1d62c:	ret
   1d630:	sub	sp, sp, #0x100
   1d634:	str	x30, [sp, #192]
   1d638:	stp	x24, x23, [sp, #208]
   1d63c:	stp	x22, x21, [sp, #224]
   1d640:	stp	x20, x19, [sp, #240]
   1d644:	ldr	x8, [x0]
   1d648:	mov	x19, x1
   1d64c:	mov	x20, x0
   1d650:	mov	w1, #0x1000                	// #4096
   1d654:	str	x8, [x0, #24]
   1d658:	add	x0, sp, #0xa0
   1d65c:	stp	xzr, xzr, [sp, #168]
   1d660:	str	xzr, [sp, #160]
   1d664:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1d668:	ldr	x8, [sp, #176]
   1d66c:	cmp	x8, #0xfff
   1d670:	b.hi	1d6a8 <__sanitizer_on_print@@Base+0xc58>  // b.pmore
   1d674:	ldr	x9, [sp, #168]
   1d678:	cmp	x9, #0xfff
   1d67c:	b.hi	1d690 <__sanitizer_on_print@@Base+0xc40>  // b.pmore
   1d680:	add	x0, sp, #0xa0
   1d684:	mov	w1, #0x1000                	// #4096
   1d688:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1d68c:	ldr	x8, [sp, #176]
   1d690:	ldr	x9, [sp, #160]
   1d694:	mov	w10, #0x1000                	// #4096
   1d698:	sub	x2, x10, x8
   1d69c:	mov	w1, wzr
   1d6a0:	add	x0, x9, x8
   1d6a4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1d6a8:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
   1d6ac:	ldr	q0, [x8, #3808]
   1d6b0:	ldr	x8, [sp, #160]
   1d6b4:	add	x1, sp, #0x50
   1d6b8:	mov	x0, x20
   1d6bc:	str	q0, [sp, #176]
   1d6c0:	strb	wzr, [x8]
   1d6c4:	ldr	x8, [sp, #160]
   1d6c8:	ldr	x9, [sp, #176]
   1d6cc:	str	xzr, [sp, #152]
   1d6d0:	stp	x8, x9, [sp, #104]
   1d6d4:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1d6d8:	tbz	w0, #0, 1d794 <__sanitizer_on_print@@Base+0xd44>
   1d6dc:	add	x8, sp, #0x8
   1d6e0:	mov	x24, xzr
   1d6e4:	add	x21, x8, #0x1c
   1d6e8:	b	1d700 <__sanitizer_on_print@@Base+0xcb0>
   1d6ec:	add	x1, sp, #0x50
   1d6f0:	mov	x0, x20
   1d6f4:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   1d6f8:	sub	x24, x24, #0x1
   1d6fc:	tbz	w0, #0, 1d794 <__sanitizer_on_print@@Base+0xd44>
   1d700:	ldr	x22, [sp, #104]
   1d704:	ldrb	w8, [x22]
   1d708:	cbz	w8, 1d6ec <__sanitizer_on_print@@Base+0xc9c>
   1d70c:	ldr	x8, [sp, #80]
   1d710:	ldr	x9, [sp, #96]
   1d714:	cmp	x24, #0x0
   1d718:	movi	v0.2d, #0x0
   1d71c:	csel	x8, xzr, x8, eq  // eq = none
   1d720:	mov	w2, #0x10                  	// #16
   1d724:	mov	x0, x21
   1d728:	mov	w1, wzr
   1d72c:	str	xzr, [sp, #8]
   1d730:	stur	q0, [sp, #16]
   1d734:	str	wzr, [sp, #32]
   1d738:	sub	x23, x8, x9
   1d73c:	strb	wzr, [sp, #52]
   1d740:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1d744:	movi	v0.2d, #0x0
   1d748:	add	x0, sp, #0x8
   1d74c:	mov	x1, x22
   1d750:	mov	x2, x23
   1d754:	stur	q0, [sp, #64]
   1d758:	str	xzr, [sp, #56]
   1d75c:	bl	13908 <__sanitizer_report_error_summary@@Base+0xb8>
   1d760:	ldr	x8, [sp, #152]
   1d764:	cbnz	x8, 1d7b4 <__sanitizer_on_print@@Base+0xd64>
   1d768:	ldr	x8, [sp, #120]
   1d76c:	ldp	x1, x2, [sp, #80]
   1d770:	add	x0, sp, #0x8
   1d774:	mov	x5, xzr
   1d778:	ubfx	x3, x8, #2, #1
   1d77c:	ubfx	x4, x8, #1, #1
   1d780:	bl	13ad4 <__sanitizer_report_error_summary@@Base+0x284>
   1d784:	add	x1, sp, #0x8
   1d788:	mov	x0, x19
   1d78c:	bl	1da54 <__sanitizer_on_print@@Base+0x1004>
   1d790:	b	1d6ec <__sanitizer_on_print@@Base+0xc9c>
   1d794:	ldp	x0, x1, [sp, #160]
   1d798:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1d79c:	ldp	x20, x19, [sp, #240]
   1d7a0:	ldp	x22, x21, [sp, #224]
   1d7a4:	ldp	x24, x23, [sp, #208]
   1d7a8:	ldr	x30, [sp, #192]
   1d7ac:	add	sp, sp, #0x100
   1d7b0:	ret
   1d7b4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d7b8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d7bc:	add	x0, x0, #0x54f
   1d7c0:	add	x2, x2, #0x5ab
   1d7c4:	mov	w1, #0x44                  	// #68
   1d7c8:	mov	x3, xzr
   1d7cc:	mov	x4, xzr
   1d7d0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1d7d4:	sub	sp, sp, #0x60
   1d7d8:	stp	x30, xzr, [sp, #16]
   1d7dc:	stp	x26, x25, [sp, #32]
   1d7e0:	stp	x24, x23, [sp, #48]
   1d7e4:	stp	x22, x21, [sp, #64]
   1d7e8:	stp	x20, x19, [sp, #80]
   1d7ec:	mov	x21, x0
   1d7f0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d7f4:	mov	x19, x2
   1d7f8:	mov	x20, x1
   1d7fc:	add	x0, x0, #0x5bd
   1d800:	add	x1, sp, #0x18
   1d804:	add	x2, sp, #0x8
   1d808:	mov	x3, sp
   1d80c:	mov	w4, #0x4000000             	// #67108864
   1d810:	mov	x5, xzr
   1d814:	stp	xzr, xzr, [sp]
   1d818:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1d81c:	tbz	w0, #0, 1da38 <__sanitizer_on_print@@Base+0xfe8>
   1d820:	ldr	x8, [sp]
   1d824:	ldr	x22, [sp, #24]
   1d828:	cmp	x8, #0x1
   1d82c:	b.lt	1da2c <__sanitizer_on_print@@Base+0xfdc>  // b.tstop
   1d830:	adrp	x24, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1d834:	mov	w26, wzr
   1d838:	mov	x23, xzr
   1d83c:	add	x24, x24, #0x5ce
   1d840:	mov	w25, #0xa                   	// #10
   1d844:	ldrb	w9, [x22]
   1d848:	sub	w8, w9, #0x30
   1d84c:	cmp	w8, #0x9
   1d850:	b.ls	1d864 <__sanitizer_on_print@@Base+0xe14>  // b.plast
   1d854:	sub	w8, w9, #0x61
   1d858:	cmp	w8, #0x5
   1d85c:	b.hi	1d910 <__sanitizer_on_print@@Base+0xec0>  // b.pmore
   1d860:	sub	w8, w9, #0x57
   1d864:	cmp	w8, #0xf
   1d868:	b.hi	1d928 <__sanitizer_on_print@@Base+0xed8>  // b.pmore
   1d86c:	mov	x23, xzr
   1d870:	add	x8, x22, #0x1
   1d874:	sub	w10, w9, #0x30
   1d878:	and	w10, w10, #0xff
   1d87c:	cmp	w10, #0x9
   1d880:	and	w9, w9, #0xff
   1d884:	b.hi	1d898 <__sanitizer_on_print@@Base+0xe48>  // b.pmore
   1d888:	sub	w10, w9, #0x30
   1d88c:	cmp	w10, #0xf
   1d890:	b.ls	1d8cc <__sanitizer_on_print@@Base+0xe7c>  // b.plast
   1d894:	b	1d8dc <__sanitizer_on_print@@Base+0xe8c>
   1d898:	sub	w10, w9, #0x61
   1d89c:	cmp	w10, #0x5
   1d8a0:	b.hi	1d8b4 <__sanitizer_on_print@@Base+0xe64>  // b.pmore
   1d8a4:	sub	w10, w9, #0x57
   1d8a8:	cmp	w10, #0xf
   1d8ac:	b.ls	1d8cc <__sanitizer_on_print@@Base+0xe7c>  // b.plast
   1d8b0:	b	1d8dc <__sanitizer_on_print@@Base+0xe8c>
   1d8b4:	sub	w10, w9, #0x41
   1d8b8:	cmp	w10, #0x5
   1d8bc:	b.hi	1d8dc <__sanitizer_on_print@@Base+0xe8c>  // b.pmore
   1d8c0:	sub	w10, w9, #0x37
   1d8c4:	cmp	w10, #0xf
   1d8c8:	b.hi	1d8dc <__sanitizer_on_print@@Base+0xe8c>  // b.pmore
   1d8cc:	mov	x22, x8
   1d8d0:	ldrb	w9, [x8], #1
   1d8d4:	add	x23, x10, x23, lsl #4
   1d8d8:	b	1d874 <__sanitizer_on_print@@Base+0xe24>
   1d8dc:	ldrb	w8, [x22]
   1d8e0:	cmp	w8, #0x2f
   1d8e4:	b.eq	1d904 <__sanitizer_on_print@@Base+0xeb4>  // b.none
   1d8e8:	cmp	w8, #0xb
   1d8ec:	b.cc	1d904 <__sanitizer_on_print@@Base+0xeb4>  // b.lo, b.ul, b.last
   1d8f0:	ldrb	w8, [x22, #1]!
   1d8f4:	cmp	w8, #0x2f
   1d8f8:	b.eq	1d904 <__sanitizer_on_print@@Base+0xeb4>  // b.none
   1d8fc:	cmp	w8, #0xa
   1d900:	b.hi	1d8f0 <__sanitizer_on_print@@Base+0xea0>  // b.pmore
   1d904:	cmp	w8, #0x2f
   1d908:	cset	w26, eq  // eq = none
   1d90c:	b	1da08 <__sanitizer_on_print@@Base+0xfb8>
   1d910:	sub	w8, w9, #0x41
   1d914:	cmp	w8, #0x5
   1d918:	b.hi	1d928 <__sanitizer_on_print@@Base+0xed8>  // b.pmore
   1d91c:	sub	w8, w9, #0x37
   1d920:	cmp	w8, #0xf
   1d924:	b.ls	1d86c <__sanitizer_on_print@@Base+0xe1c>  // b.plast
   1d928:	mov	w2, #0x4                   	// #4
   1d92c:	mov	x0, x22
   1d930:	mov	x1, x24
   1d934:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   1d938:	cbnz	w0, 1da08 <__sanitizer_on_print@@Base+0xfb8>
   1d93c:	b	1d950 <__sanitizer_on_print@@Base+0xf00>
   1d940:	sub	w8, w10, #0x57
   1d944:	cmp	w8, #0x9
   1d948:	b.ls	1d980 <__sanitizer_on_print@@Base+0xf30>  // b.plast
   1d94c:	add	x22, x22, #0x1
   1d950:	ldrb	w10, [x22]
   1d954:	sub	w8, w10, #0x30
   1d958:	cmp	w8, #0x9
   1d95c:	b.ls	1d944 <__sanitizer_on_print@@Base+0xef4>  // b.plast
   1d960:	sub	w8, w10, #0x61
   1d964:	cmp	w8, #0x5
   1d968:	b.ls	1d940 <__sanitizer_on_print@@Base+0xef0>  // b.plast
   1d96c:	sub	w8, w10, #0x41
   1d970:	cmp	w8, #0x5
   1d974:	b.hi	1d94c <__sanitizer_on_print@@Base+0xefc>  // b.pmore
   1d978:	sub	w8, w10, #0x37
   1d97c:	b	1d944 <__sanitizer_on_print@@Base+0xef4>
   1d980:	mov	x8, xzr
   1d984:	add	x9, x22, #0x1
   1d988:	sub	w11, w10, #0x30
   1d98c:	and	w11, w11, #0xff
   1d990:	cmp	w11, #0x9
   1d994:	and	w10, w10, #0xff
   1d998:	b.hi	1d9ac <__sanitizer_on_print@@Base+0xf5c>  // b.pmore
   1d99c:	sub	w11, w10, #0x30
   1d9a0:	cmp	w11, #0x9
   1d9a4:	b.ls	1d9e0 <__sanitizer_on_print@@Base+0xf90>  // b.plast
   1d9a8:	b	1d9f0 <__sanitizer_on_print@@Base+0xfa0>
   1d9ac:	sub	w11, w10, #0x61
   1d9b0:	cmp	w11, #0x5
   1d9b4:	b.hi	1d9c8 <__sanitizer_on_print@@Base+0xf78>  // b.pmore
   1d9b8:	sub	w11, w10, #0x57
   1d9bc:	cmp	w11, #0x9
   1d9c0:	b.ls	1d9e0 <__sanitizer_on_print@@Base+0xf90>  // b.plast
   1d9c4:	b	1d9f0 <__sanitizer_on_print@@Base+0xfa0>
   1d9c8:	sub	w11, w10, #0x41
   1d9cc:	cmp	w11, #0x5
   1d9d0:	b.hi	1d9f0 <__sanitizer_on_print@@Base+0xfa0>  // b.pmore
   1d9d4:	sub	w11, w10, #0x37
   1d9d8:	cmp	w11, #0x9
   1d9dc:	b.hi	1d9f0 <__sanitizer_on_print@@Base+0xfa0>  // b.pmore
   1d9e0:	mov	x22, x9
   1d9e4:	ldrb	w10, [x9], #1
   1d9e8:	madd	x8, x8, x25, x11
   1d9ec:	b	1d988 <__sanitizer_on_print@@Base+0xf38>
   1d9f0:	lsl	x1, x8, #10
   1d9f4:	and	w2, w26, #0x1
   1d9f8:	mov	x0, x23
   1d9fc:	mov	x3, x20
   1da00:	mov	x4, x19
   1da04:	blr	x21
   1da08:	ldrb	w8, [x22], #1
   1da0c:	cmp	w8, #0xa
   1da10:	b.ne	1da08 <__sanitizer_on_print@@Base+0xfb8>  // b.any
   1da14:	ldr	x8, [sp, #24]
   1da18:	ldr	x9, [sp]
   1da1c:	add	x9, x8, x9
   1da20:	cmp	x9, x22
   1da24:	b.hi	1d844 <__sanitizer_on_print@@Base+0xdf4>  // b.pmore
   1da28:	mov	x22, x8
   1da2c:	ldr	x1, [sp, #8]
   1da30:	mov	x0, x22
   1da34:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1da38:	ldp	x20, x19, [sp, #80]
   1da3c:	ldp	x22, x21, [sp, #64]
   1da40:	ldp	x24, x23, [sp, #48]
   1da44:	ldp	x26, x25, [sp, #32]
   1da48:	ldr	x30, [sp, #16]
   1da4c:	add	sp, sp, #0x60
   1da50:	ret
   1da54:	str	x30, [sp, #-32]!
   1da58:	stp	x20, x19, [sp, #16]
   1da5c:	ldp	x8, x3, [x0, #8]
   1da60:	mov	x9, #0xe38f                	// #58255
   1da64:	movk	x9, #0x8e38, lsl #16
   1da68:	movk	x9, #0x38e3, lsl #32
   1da6c:	movk	x9, #0xe38e, lsl #48
   1da70:	umulh	x8, x8, x9
   1da74:	lsr	x4, x8, #6
   1da78:	cmp	x3, x4
   1da7c:	b.hi	1db08 <__sanitizer_on_print@@Base+0x10b8>  // b.pmore
   1da80:	mov	x19, x0
   1da84:	mov	x20, x1
   1da88:	b.ne	1dae0 <__sanitizer_on_print@@Base+0x1090>  // b.any
   1da8c:	adds	x3, x3, #0x1
   1da90:	b.cs	1db20 <__sanitizer_on_print@@Base+0x10d0>  // b.hs, b.nlast
   1da94:	sub	x8, x3, #0x1
   1da98:	tst	x3, x8
   1da9c:	b.ne	1daa8 <__sanitizer_on_print@@Base+0x1058>  // b.any
   1daa0:	mov	x8, x3
   1daa4:	b	1dad0 <__sanitizer_on_print@@Base+0x1080>
   1daa8:	clz	x8, x3
   1daac:	eor	x9, x8, #0x3f
   1dab0:	mov	w8, #0x2                   	// #2
   1dab4:	lsl	x8, x8, x9
   1dab8:	cmp	x8, x3
   1dabc:	b.ls	1db40 <__sanitizer_on_print@@Base+0x10f0>  // b.plast
   1dac0:	mov	w10, #0x1                   	// #1
   1dac4:	lsl	x4, x10, x9
   1dac8:	cmp	x4, x3
   1dacc:	b.cs	1db5c <__sanitizer_on_print@@Base+0x110c>  // b.hs, b.nlast
   1dad0:	mov	x0, x19
   1dad4:	mov	x1, x8
   1dad8:	bl	1db74 <__sanitizer_on_print@@Base+0x1124>
   1dadc:	ldr	x3, [x19, #16]
   1dae0:	add	x9, x3, #0x1
   1dae4:	ldr	x8, [x19]
   1dae8:	str	x9, [x19, #16]
   1daec:	mov	x1, x20
   1daf0:	ldp	x20, x19, [sp, #16]
   1daf4:	mov	w10, #0x48                  	// #72
   1daf8:	madd	x0, x3, x10, x8
   1dafc:	mov	w2, #0x48                  	// #72
   1db00:	ldr	x30, [sp], #32
   1db04:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1db08:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1db0c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1db10:	add	x0, x0, #0xb2f
   1db14:	add	x2, x2, #0x41
   1db18:	mov	w1, #0x1cd                 	// #461
   1db1c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1db20:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1db24:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1db28:	add	x0, x0, #0xb2f
   1db2c:	add	x2, x2, #0x5d
   1db30:	mov	w1, #0x186                 	// #390
   1db34:	mov	x3, xzr
   1db38:	mov	x4, xzr
   1db3c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1db40:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1db44:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1db48:	add	x0, x0, #0xb2f
   1db4c:	add	x2, x2, #0x156
   1db50:	mov	w1, #0x18a                 	// #394
   1db54:	mov	x4, x8
   1db58:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1db5c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1db60:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1db64:	add	x0, x0, #0xb2f
   1db68:	add	x2, x2, #0x178
   1db6c:	mov	w1, #0x18b                 	// #395
   1db70:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1db74:	stp	x30, x21, [sp, #-32]!
   1db78:	stp	x20, x19, [sp, #16]
   1db7c:	cbz	x1, 1dc14 <__sanitizer_on_print@@Base+0x11c4>
   1db80:	ldr	x3, [x0, #16]
   1db84:	mov	x20, x1
   1db88:	mov	x19, x0
   1db8c:	cmp	x3, x1
   1db90:	b.hi	1dc34 <__sanitizer_on_print@@Base+0x11e4>  // b.pmore
   1db94:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1db98:	ldr	x21, [x21, #4016]
   1db9c:	ldr	x0, [x21]
   1dba0:	cbnz	x0, 1dbac <__sanitizer_on_print@@Base+0x115c>
   1dba4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1dba8:	str	x0, [x21]
   1dbac:	sub	x8, x0, #0x1
   1dbb0:	tst	x0, x8
   1dbb4:	b.ne	1dc50 <__sanitizer_on_print@@Base+0x1200>  // b.any
   1dbb8:	add	x8, x20, x20, lsl #3
   1dbbc:	lsl	x8, x8, #3
   1dbc0:	add	x8, x8, x0
   1dbc4:	sub	x8, x8, #0x1
   1dbc8:	neg	x9, x0
   1dbcc:	and	x20, x8, x9
   1dbd0:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1dbd4:	add	x1, x1, #0x950
   1dbd8:	mov	x0, x20
   1dbdc:	mov	w2, wzr
   1dbe0:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1dbe4:	ldr	x8, [x19, #16]
   1dbe8:	ldr	x1, [x19]
   1dbec:	mov	x21, x0
   1dbf0:	add	x8, x8, x8, lsl #3
   1dbf4:	lsl	x2, x8, #3
   1dbf8:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1dbfc:	ldp	x0, x1, [x19]
   1dc00:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1dc04:	stp	x21, x20, [x19]
   1dc08:	ldp	x20, x19, [sp, #16]
   1dc0c:	ldp	x30, x21, [sp], #32
   1dc10:	ret
   1dc14:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1dc18:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1dc1c:	add	x0, x0, #0xb2f
   1dc20:	add	x2, x2, #0x919
   1dc24:	mov	w1, #0x20b                 	// #523
   1dc28:	mov	x3, xzr
   1dc2c:	mov	x4, xzr
   1dc30:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1dc34:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1dc38:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1dc3c:	add	x0, x0, #0xb2f
   1dc40:	add	x2, x2, #0x932
   1dc44:	mov	w1, #0x20c                 	// #524
   1dc48:	mov	x4, x20
   1dc4c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1dc50:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1dc54:	add	x0, x0, #0x20f
   1dc58:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1dc5c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1dc60:	stp	x30, x19, [sp, #-16]!
   1dc64:	mov	x19, x0
   1dc68:	add	x2, x0, #0x8
   1dc6c:	add	x3, x0, #0x10
   1dc70:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dc74:	add	x0, x0, #0x5d3
   1dc78:	mov	w4, #0x4000000             	// #67108864
   1dc7c:	mov	x1, x19
   1dc80:	mov	x5, xzr
   1dc84:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1dc88:	tbnz	w0, #0, 1dc94 <__sanitizer_on_print@@Base+0x1244>
   1dc8c:	stp	xzr, xzr, [x19, #8]
   1dc90:	str	xzr, [x19]
   1dc94:	ldp	x30, x19, [sp], #16
   1dc98:	ret
   1dc9c:	str	x30, [sp, #-48]!
   1dca0:	stp	x22, x21, [sp, #16]
   1dca4:	stp	x20, x19, [sp, #32]
   1dca8:	mov	x20, x1
   1dcac:	mov	x19, x0
   1dcb0:	bl	1d5fc <__sanitizer_on_print@@Base+0xbac>
   1dcb4:	tbnz	w0, #0, 1dedc <__sanitizer_on_print@@Base+0x148c>
   1dcb8:	ldr	x8, [x19]
   1dcbc:	ldr	x9, [x19, #16]
   1dcc0:	ldr	x0, [x19, #24]!
   1dcc4:	add	x21, x8, x9
   1dcc8:	cmp	x0, x21
   1dccc:	b.cs	1dedc <__sanitizer_on_print@@Base+0x148c>  // b.hs, b.nlast
   1dcd0:	sub	x2, x21, x0
   1dcd4:	mov	w1, #0xa                   	// #10
   1dcd8:	bl	18908 <__sanitizer_set_report_fd@@Base+0x22c4>
   1dcdc:	cmp	x0, #0x0
   1dce0:	csel	x22, x21, x0, eq  // eq = none
   1dce4:	mov	x0, x19
   1dce8:	bl	1d354 <__sanitizer_on_print@@Base+0x904>
   1dcec:	str	x0, [x20]
   1dcf0:	ldr	x8, [x19]
   1dcf4:	add	x9, x8, #0x1
   1dcf8:	str	x9, [x19]
   1dcfc:	ldrb	w3, [x8]
   1dd00:	cmp	x3, #0x2d
   1dd04:	b.ne	1df4c <__sanitizer_on_print@@Base+0x14fc>  // b.any
   1dd08:	mov	x0, x19
   1dd0c:	bl	1d354 <__sanitizer_on_print@@Base+0x904>
   1dd10:	str	x0, [x20, #8]
   1dd14:	ldr	x8, [x19]
   1dd18:	add	x9, x8, #0x1
   1dd1c:	str	x9, [x19]
   1dd20:	ldrb	w3, [x8]
   1dd24:	cmp	x3, #0x20
   1dd28:	b.ne	1df68 <__sanitizer_on_print@@Base+0x1518>  // b.any
   1dd2c:	ldrb	w9, [x9]
   1dd30:	cmp	w9, #0x2d
   1dd34:	b.eq	1dd40 <__sanitizer_on_print@@Base+0x12f0>  // b.none
   1dd38:	cmp	w9, #0x72
   1dd3c:	b.ne	1df84 <__sanitizer_on_print@@Base+0x1534>  // b.any
   1dd40:	add	x10, x8, #0x2
   1dd44:	str	xzr, [x20, #40]
   1dd48:	str	x10, [x19]
   1dd4c:	ldrb	w9, [x8, #1]
   1dd50:	cmp	w9, #0x72
   1dd54:	mov	x9, xzr
   1dd58:	b.ne	1dd64 <__sanitizer_on_print@@Base+0x1314>  // b.any
   1dd5c:	mov	w9, #0x1                   	// #1
   1dd60:	str	x9, [x20, #40]
   1dd64:	ldrb	w10, [x10]
   1dd68:	cmp	w10, #0x2d
   1dd6c:	b.eq	1dd78 <__sanitizer_on_print@@Base+0x1328>  // b.none
   1dd70:	cmp	w10, #0x77
   1dd74:	b.ne	1df9c <__sanitizer_on_print@@Base+0x154c>  // b.any
   1dd78:	add	x10, x8, #0x3
   1dd7c:	str	x10, [x19]
   1dd80:	ldrb	w11, [x8, #2]
   1dd84:	cmp	w11, #0x77
   1dd88:	b.ne	1dd94 <__sanitizer_on_print@@Base+0x1344>  // b.any
   1dd8c:	orr	x9, x9, #0x2
   1dd90:	str	x9, [x20, #40]
   1dd94:	ldrb	w10, [x10]
   1dd98:	cmp	w10, #0x2d
   1dd9c:	b.eq	1dda8 <__sanitizer_on_print@@Base+0x1358>  // b.none
   1dda0:	cmp	w10, #0x78
   1dda4:	b.ne	1dfb4 <__sanitizer_on_print@@Base+0x1564>  // b.any
   1dda8:	add	x10, x8, #0x4
   1ddac:	str	x10, [x19]
   1ddb0:	ldrb	w11, [x8, #3]
   1ddb4:	cmp	w11, #0x78
   1ddb8:	b.ne	1ddc4 <__sanitizer_on_print@@Base+0x1374>  // b.any
   1ddbc:	orr	x9, x9, #0x4
   1ddc0:	str	x9, [x20, #40]
   1ddc4:	ldrb	w10, [x10]
   1ddc8:	cmp	w10, #0x70
   1ddcc:	b.eq	1ddd8 <__sanitizer_on_print@@Base+0x1388>  // b.none
   1ddd0:	cmp	w10, #0x73
   1ddd4:	b.ne	1dfcc <__sanitizer_on_print@@Base+0x157c>  // b.any
   1ddd8:	add	x10, x8, #0x5
   1dddc:	str	x10, [x19]
   1dde0:	ldrb	w10, [x8, #4]
   1dde4:	cmp	w10, #0x73
   1dde8:	b.ne	1ddf4 <__sanitizer_on_print@@Base+0x13a4>  // b.any
   1ddec:	orr	x9, x9, #0x8
   1ddf0:	str	x9, [x20, #40]
   1ddf4:	add	x9, x8, #0x6
   1ddf8:	str	x9, [x19]
   1ddfc:	ldrb	w3, [x8, #5]
   1de00:	cmp	x3, #0x20
   1de04:	b.ne	1dfec <__sanitizer_on_print@@Base+0x159c>  // b.any
   1de08:	mov	x0, x19
   1de0c:	bl	1d354 <__sanitizer_on_print@@Base+0x904>
   1de10:	str	x0, [x20, #16]
   1de14:	ldr	x8, [x19]
   1de18:	add	x9, x8, #0x1
   1de1c:	str	x9, [x19]
   1de20:	ldrb	w3, [x8]
   1de24:	cmp	x3, #0x20
   1de28:	b.ne	1e008 <__sanitizer_on_print@@Base+0x15b8>  // b.any
   1de2c:	mov	x0, x19
   1de30:	bl	1d354 <__sanitizer_on_print@@Base+0x904>
   1de34:	ldr	x8, [x19]
   1de38:	add	x9, x8, #0x1
   1de3c:	str	x9, [x19]
   1de40:	ldrb	w3, [x8]
   1de44:	cmp	x3, #0x3a
   1de48:	b.ne	1e024 <__sanitizer_on_print@@Base+0x15d4>  // b.any
   1de4c:	mov	x0, x19
   1de50:	bl	1d354 <__sanitizer_on_print@@Base+0x904>
   1de54:	ldr	x9, [x19]
   1de58:	add	x8, x9, #0x1
   1de5c:	str	x8, [x19]
   1de60:	ldrb	w3, [x9]
   1de64:	cmp	x3, #0x20
   1de68:	b.ne	1e040 <__sanitizer_on_print@@Base+0x15f0>  // b.any
   1de6c:	ldrb	w0, [x8]
   1de70:	bl	1d214 <__sanitizer_on_print@@Base+0x7c4>
   1de74:	tbz	w0, #0, 1de90 <__sanitizer_on_print@@Base+0x1440>
   1de78:	ldr	x8, [x19]
   1de7c:	add	x9, x8, #0x1
   1de80:	str	x9, [x19]
   1de84:	ldrb	w0, [x8, #1]
   1de88:	bl	1d214 <__sanitizer_on_print@@Base+0x7c4>
   1de8c:	tbnz	w0, #0, 1de78 <__sanitizer_on_print@@Base+0x1428>
   1de90:	ldr	x1, [x19]
   1de94:	cmp	x1, x22
   1de98:	b.cs	1def0 <__sanitizer_on_print@@Base+0x14a0>  // b.hs, b.nlast
   1de9c:	ldrb	w8, [x1]
   1dea0:	cmp	w8, #0x20
   1dea4:	mov	x8, x1
   1dea8:	b.ne	1def4 <__sanitizer_on_print@@Base+0x14a4>  // b.any
   1deac:	add	x8, x1, #0x1
   1deb0:	cmp	x22, x8
   1deb4:	str	x8, [x19]
   1deb8:	b.eq	1df3c <__sanitizer_on_print@@Base+0x14ec>  // b.none
   1debc:	ldrb	w9, [x8], #1
   1dec0:	cmp	w9, #0x20
   1dec4:	b.eq	1deb0 <__sanitizer_on_print@@Base+0x1460>  // b.none
   1dec8:	sub	x8, x8, #0x1
   1decc:	mov	x1, x8
   1ded0:	ldr	x0, [x20, #24]
   1ded4:	cbnz	x0, 1defc <__sanitizer_on_print@@Base+0x14ac>
   1ded8:	b	1df20 <__sanitizer_on_print@@Base+0x14d0>
   1dedc:	mov	w0, wzr
   1dee0:	ldp	x20, x19, [sp, #32]
   1dee4:	ldp	x22, x21, [sp, #16]
   1dee8:	ldr	x30, [sp], #48
   1deec:	ret
   1def0:	mov	x8, x1
   1def4:	ldr	x0, [x20, #24]
   1def8:	cbz	x0, 1df20 <__sanitizer_on_print@@Base+0x14d0>
   1defc:	ldr	x9, [x20, #32]
   1df00:	sub	x8, x22, x8
   1df04:	sub	x9, x9, #0x1
   1df08:	cmp	x8, x9
   1df0c:	csel	x21, x8, x9, cc  // cc = lo, ul, last
   1df10:	mov	x2, x21
   1df14:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   1df18:	ldr	x8, [x20, #24]
   1df1c:	strb	wzr, [x8, x21]
   1df20:	add	x8, x22, #0x1
   1df24:	mov	w0, #0x1                   	// #1
   1df28:	str	x8, [x19]
   1df2c:	ldp	x20, x19, [sp, #32]
   1df30:	ldp	x22, x21, [sp, #16]
   1df34:	ldr	x30, [sp], #48
   1df38:	ret
   1df3c:	mov	x1, x22
   1df40:	ldr	x0, [x20, #24]
   1df44:	cbnz	x0, 1defc <__sanitizer_on_print@@Base+0x14ac>
   1df48:	b	1df20 <__sanitizer_on_print@@Base+0x14d0>
   1df4c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df50:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df54:	add	x0, x0, #0x5e3
   1df58:	add	x2, x2, #0x63e
   1df5c:	mov	w1, #0x2a                  	// #42
   1df60:	mov	w4, #0x2d                  	// #45
   1df64:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1df68:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df6c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df70:	add	x0, x0, #0x5e3
   1df74:	add	x2, x2, #0x65e
   1df78:	mov	w1, #0x2c                  	// #44
   1df7c:	mov	w4, #0x20                  	// #32
   1df80:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1df84:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df88:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1df8c:	add	x0, x0, #0x5e3
   1df90:	add	x2, x2, #0x67e
   1df94:	mov	w1, #0x2d                  	// #45
   1df98:	b	1dfe0 <__sanitizer_on_print@@Base+0x1590>
   1df9c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfa0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfa4:	add	x0, x0, #0x5e3
   1dfa8:	add	x2, x2, #0x6ab
   1dfac:	mov	w1, #0x30                  	// #48
   1dfb0:	b	1dfe0 <__sanitizer_on_print@@Base+0x1590>
   1dfb4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfb8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfbc:	add	x0, x0, #0x5e3
   1dfc0:	add	x2, x2, #0x6d8
   1dfc4:	mov	w1, #0x32                  	// #50
   1dfc8:	b	1dfe0 <__sanitizer_on_print@@Base+0x1590>
   1dfcc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfd0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dfd4:	add	x0, x0, #0x5e3
   1dfd8:	add	x2, x2, #0x705
   1dfdc:	mov	w1, #0x34                  	// #52
   1dfe0:	mov	x3, xzr
   1dfe4:	mov	x4, xzr
   1dfe8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1dfec:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dff0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1dff4:	add	x0, x0, #0x5e3
   1dff8:	add	x2, x2, #0x65e
   1dffc:	mov	w1, #0x36                  	// #54
   1e000:	mov	w4, #0x20                  	// #32
   1e004:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e008:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e00c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e010:	add	x0, x0, #0x5e3
   1e014:	add	x2, x2, #0x65e
   1e018:	mov	w1, #0x38                  	// #56
   1e01c:	mov	w4, #0x20                  	// #32
   1e020:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e024:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e028:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e02c:	add	x0, x0, #0x5e3
   1e030:	add	x2, x2, #0x732
   1e034:	mov	w1, #0x3a                  	// #58
   1e038:	mov	w4, #0x3a                  	// #58
   1e03c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e040:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e044:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e048:	add	x0, x0, #0x5e3
   1e04c:	add	x2, x2, #0x65e
   1e050:	mov	w1, #0x3c                  	// #60
   1e054:	mov	w4, #0x20                  	// #32
   1e058:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e05c:	str	x30, [sp, #-16]!
   1e060:	mov	w8, #0x1                   	// #1
   1e064:	cmp	w2, #0x41
   1e068:	sxtw	x3, w2
   1e06c:	str	x1, [x0]
   1e070:	str	w2, [x0, #8]
   1e074:	stp	xzr, xzr, [x0, #24]
   1e078:	str	xzr, [x0, #16]
   1e07c:	strb	w8, [x0, #104]
   1e080:	b.cs	1e098 <__sanitizer_on_print@@Base+0x1648>  // b.hs, b.nlast
   1e084:	add	x0, x0, #0x28
   1e088:	mov	w1, wzr
   1e08c:	mov	x2, x3
   1e090:	ldr	x30, [sp], #16
   1e094:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1e098:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e09c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e0a0:	add	x0, x0, #0x752
   1e0a4:	add	x2, x2, #0x7ab
   1e0a8:	mov	w1, #0x1d                  	// #29
   1e0ac:	mov	w4, #0x40                  	// #64
   1e0b0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e0b4:	sub	sp, sp, #0x90
   1e0b8:	str	x30, [sp, #96]
   1e0bc:	stp	x22, x21, [sp, #112]
   1e0c0:	stp	x20, x19, [sp, #128]
   1e0c4:	ldrb	w8, [x1]
   1e0c8:	cbz	w8, 1e284 <__sanitizer_on_print@@Base+0x1834>
   1e0cc:	mov	x20, x1
   1e0d0:	mov	x19, x0
   1e0d4:	add	x0, sp, #0x20
   1e0d8:	mov	w1, #0x1000                	// #4096
   1e0dc:	stp	xzr, xzr, [sp, #40]
   1e0e0:	str	xzr, [sp, #32]
   1e0e4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1e0e8:	ldr	x8, [sp, #48]
   1e0ec:	cmp	x8, #0xfff
   1e0f0:	b.hi	1e128 <__sanitizer_on_print@@Base+0x16d8>  // b.pmore
   1e0f4:	ldr	x9, [sp, #40]
   1e0f8:	cmp	x9, #0xfff
   1e0fc:	b.hi	1e110 <__sanitizer_on_print@@Base+0x16c0>  // b.pmore
   1e100:	add	x0, sp, #0x20
   1e104:	mov	w1, #0x1000                	// #4096
   1e108:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1e10c:	ldr	x8, [sp, #48]
   1e110:	ldr	x9, [sp, #32]
   1e114:	mov	w10, #0x1000                	// #4096
   1e118:	sub	x2, x10, x8
   1e11c:	mov	w1, wzr
   1e120:	add	x0, x9, x8
   1e124:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1e128:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
   1e12c:	ldr	q0, [x8, #3808]
   1e130:	ldr	x8, [sp, #32]
   1e134:	mov	x0, x20
   1e138:	str	q0, [sp, #48]
   1e13c:	strb	wzr, [x8]
   1e140:	ldr	x21, [sp, #32]
   1e144:	ldr	x22, [sp, #48]
   1e148:	str	q0, [sp]
   1e14c:	bl	19c60 <__sanitizer_set_report_fd@@Base+0x361c>
   1e150:	tbnz	w0, #0, 1e224 <__sanitizer_on_print@@Base+0x17d4>
   1e154:	mov	x0, x20
   1e158:	bl	1bff8 <__sanitizer_set_report_fd@@Base+0x59b4>
   1e15c:	tbnz	w0, #0, 1e224 <__sanitizer_on_print@@Base+0x17d4>
   1e160:	add	x0, sp, #0x40
   1e164:	mov	w1, #0x1000                	// #4096
   1e168:	stp	xzr, xzr, [sp, #72]
   1e16c:	str	xzr, [sp, #64]
   1e170:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1e174:	ldr	x8, [sp, #80]
   1e178:	cmp	x8, #0xfff
   1e17c:	b.hi	1e1b4 <__sanitizer_on_print@@Base+0x1764>  // b.pmore
   1e180:	ldr	x9, [sp, #72]
   1e184:	cmp	x9, #0xfff
   1e188:	b.hi	1e19c <__sanitizer_on_print@@Base+0x174c>  // b.pmore
   1e18c:	add	x0, sp, #0x40
   1e190:	mov	w1, #0x1000                	// #4096
   1e194:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   1e198:	ldr	x8, [sp, #80]
   1e19c:	ldr	x9, [sp, #64]
   1e1a0:	mov	w10, #0x1000                	// #4096
   1e1a4:	sub	x2, x10, x8
   1e1a8:	mov	w1, wzr
   1e1ac:	add	x0, x9, x8
   1e1b0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1e1b4:	ldr	x8, [sp, #64]
   1e1b8:	ldr	q0, [sp]
   1e1bc:	str	q0, [sp, #80]
   1e1c0:	strb	wzr, [x8]
   1e1c4:	ldr	x0, [sp, #64]
   1e1c8:	ldr	x1, [sp, #80]
   1e1cc:	bl	13ebc <__sanitizer_report_error_summary@@Base+0x66c>
   1e1d0:	ldr	x8, [sp, #64]
   1e1d4:	cbz	x0, 1e298 <__sanitizer_on_print@@Base+0x1848>
   1e1d8:	mov	x0, x8
   1e1dc:	bl	1375c <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   1e1e0:	ldr	x1, [sp, #64]
   1e1e4:	sub	x9, x22, #0x1
   1e1e8:	sub	x8, x0, x1
   1e1ec:	cmp	x8, x9
   1e1f0:	csel	x2, x8, x9, cc  // cc = lo, ul, last
   1e1f4:	mov	x0, x21
   1e1f8:	bl	18fd8 <__sanitizer_set_report_fd@@Base+0x2994>
   1e1fc:	mov	x0, x21
   1e200:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1e204:	mvn	x8, x0
   1e208:	add	x2, x22, x8
   1e20c:	mov	x0, x21
   1e210:	mov	x1, x20
   1e214:	bl	18fd8 <__sanitizer_set_report_fd@@Base+0x2994>
   1e218:	ldp	x0, x1, [sp, #64]
   1e21c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1e220:	mov	x20, x21
   1e224:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e228:	ldr	x8, [x8, #3808]
   1e22c:	ldr	w8, [x8]
   1e230:	cbz	w8, 1e250 <__sanitizer_on_print@@Base+0x1800>
   1e234:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e238:	ldr	x8, [x8, #4024]
   1e23c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e240:	add	x0, x0, #0x7e2
   1e244:	mov	x2, x20
   1e248:	ldr	x1, [x8]
   1e24c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1e250:	add	x1, sp, #0x40
   1e254:	add	x2, sp, #0x68
   1e258:	add	x3, sp, #0x18
   1e25c:	mov	w4, #0x4000000             	// #67108864
   1e260:	mov	x0, x20
   1e264:	mov	x5, xzr
   1e268:	bl	16120 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>
   1e26c:	tbz	w0, #0, 1e2b8 <__sanitizer_on_print@@Base+0x1868>
   1e270:	ldr	x1, [sp, #64]
   1e274:	mov	x0, x19
   1e278:	bl	1e2d8 <__sanitizer_on_print@@Base+0x1888>
   1e27c:	ldp	x0, x1, [sp, #32]
   1e280:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1e284:	ldp	x20, x19, [sp, #128]
   1e288:	ldp	x22, x21, [sp, #112]
   1e28c:	ldr	x30, [sp, #96]
   1e290:	add	sp, sp, #0x90
   1e294:	ret
   1e298:	ldr	x1, [sp, #72]
   1e29c:	mov	x0, x8
   1e2a0:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1e2a4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e2a8:	ldr	x8, [x8, #3808]
   1e2ac:	ldr	w8, [x8]
   1e2b0:	cbnz	w8, 1e234 <__sanitizer_on_print@@Base+0x17e4>
   1e2b4:	b	1e250 <__sanitizer_on_print@@Base+0x1800>
   1e2b8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e2bc:	ldr	x8, [x8, #4024]
   1e2c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e2c4:	add	x0, x0, #0x807
   1e2c8:	mov	x2, x20
   1e2cc:	ldr	x1, [x8]
   1e2d0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1e2d4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1e2d8:	sub	sp, sp, #0x70
   1e2dc:	str	x30, [sp, #32]
   1e2e0:	stp	x26, x25, [sp, #48]
   1e2e4:	stp	x24, x23, [sp, #64]
   1e2e8:	stp	x22, x21, [sp, #80]
   1e2ec:	stp	x20, x19, [sp, #96]
   1e2f0:	ldrb	w3, [x0, #104]
   1e2f4:	cmp	x3, #0x1
   1e2f8:	b.ne	1e508 <__sanitizer_on_print@@Base+0x1ab8>  // b.any
   1e2fc:	mov	x25, #0x2200                	// #8704
   1e300:	mov	x19, x0
   1e304:	mov	x21, x1
   1e308:	add	x20, x0, #0x10
   1e30c:	mov	w24, #0x1                   	// #1
   1e310:	movk	x25, #0x1, lsl #32
   1e314:	b	1e38c <__sanitizer_on_print@@Base+0x193c>
   1e318:	mov	w26, wzr
   1e31c:	cmp	w26, w8
   1e320:	b.eq	1e4ec <__sanitizer_on_print@@Base+0x1a9c>  // b.none
   1e324:	mov	x0, sp
   1e328:	mov	w2, #0x20                  	// #32
   1e32c:	mov	w1, wzr
   1e330:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   1e334:	ldr	x8, [x19]
   1e338:	sub	x23, x23, x21
   1e33c:	add	x0, x23, #0x1
   1e340:	mov	x1, xzr
   1e344:	ldr	x8, [x8, w26, uxtw #3]
   1e348:	mov	x2, xzr
   1e34c:	str	x8, [sp]
   1e350:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   1e354:	mov	x1, x21
   1e358:	mov	x2, x23
   1e35c:	str	x0, [sp, #8]
   1e360:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1e364:	ldr	x8, [sp, #8]
   1e368:	mov	x1, sp
   1e36c:	mov	x0, x20
   1e370:	strb	wzr, [x8, x23]
   1e374:	bl	1e724 <__sanitizer_on_print@@Base+0x1cd4>
   1e378:	add	x8, x19, w26, uxtw
   1e37c:	strb	w24, [x8, #40]
   1e380:	ldrb	w8, [x22], #1
   1e384:	mov	x21, x22
   1e388:	cbz	w8, 1e4d0 <__sanitizer_on_print@@Base+0x1a80>
   1e38c:	cbnz	x21, 1e398 <__sanitizer_on_print@@Base+0x1948>
   1e390:	b	1e4d0 <__sanitizer_on_print@@Base+0x1a80>
   1e394:	add	x21, x21, #0x1
   1e398:	ldrb	w8, [x21]
   1e39c:	cmp	w8, #0x20
   1e3a0:	b.eq	1e394 <__sanitizer_on_print@@Base+0x1944>  // b.none
   1e3a4:	cmp	w8, #0x9
   1e3a8:	b.eq	1e394 <__sanitizer_on_print@@Base+0x1944>  // b.none
   1e3ac:	mov	w1, #0xa                   	// #10
   1e3b0:	mov	x0, x21
   1e3b4:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   1e3b8:	mov	x22, x0
   1e3bc:	cbz	x0, 1e3cc <__sanitizer_on_print@@Base+0x197c>
   1e3c0:	cmp	x22, x21
   1e3c4:	b.ne	1e3e0 <__sanitizer_on_print@@Base+0x1990>  // b.any
   1e3c8:	b	1e380 <__sanitizer_on_print@@Base+0x1930>
   1e3cc:	mov	x0, x21
   1e3d0:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   1e3d4:	add	x22, x21, x0
   1e3d8:	cmp	x22, x21
   1e3dc:	b.eq	1e380 <__sanitizer_on_print@@Base+0x1930>  // b.none
   1e3e0:	ldrb	w9, [x21]
   1e3e4:	cmp	w9, #0x23
   1e3e8:	b.eq	1e380 <__sanitizer_on_print@@Base+0x1930>  // b.none
   1e3ec:	mov	x23, x22
   1e3f0:	mov	x8, x22
   1e3f4:	ldrb	w10, [x8, #-1]!
   1e3f8:	cmp	w10, #0x20
   1e3fc:	b.hi	1e41c <__sanitizer_on_print@@Base+0x19cc>  // b.pmore
   1e400:	lsl	x10, x24, x10
   1e404:	tst	x10, x25
   1e408:	b.eq	1e41c <__sanitizer_on_print@@Base+0x19cc>  // b.none
   1e40c:	cmp	x21, x8
   1e410:	mov	x23, x8
   1e414:	b.ne	1e3f4 <__sanitizer_on_print@@Base+0x19a4>  // b.any
   1e418:	mov	x23, x21
   1e41c:	ldrsw	x8, [x19, #8]
   1e420:	cmp	w8, #0x1
   1e424:	b.lt	1e318 <__sanitizer_on_print@@Base+0x18c8>  // b.tstop
   1e428:	ldr	x11, [x19]
   1e42c:	mov	x10, xzr
   1e430:	mov	w26, wzr
   1e434:	ldr	x12, [x11, x10, lsl #3]
   1e438:	tst	w9, #0xff
   1e43c:	b.eq	1e478 <__sanitizer_on_print@@Base+0x1a28>  // b.none
   1e440:	mov	x13, xzr
   1e444:	ldrb	w14, [x12, x13]
   1e448:	cmp	w14, w9, uxtb
   1e44c:	b.ne	1e48c <__sanitizer_on_print@@Base+0x1a3c>  // b.any
   1e450:	add	x9, x21, x13
   1e454:	ldrb	w9, [x9, #1]
   1e458:	add	x13, x13, #0x1
   1e45c:	cbnz	w9, 1e444 <__sanitizer_on_print@@Base+0x19f4>
   1e460:	add	x12, x12, x13
   1e464:	add	x13, x21, x13
   1e468:	ldrb	w14, [x12]
   1e46c:	mov	w9, wzr
   1e470:	cbz	w14, 1e494 <__sanitizer_on_print@@Base+0x1a44>
   1e474:	b	1e4a0 <__sanitizer_on_print@@Base+0x1a50>
   1e478:	mov	x13, x21
   1e47c:	ldrb	w14, [x12]
   1e480:	mov	w9, wzr
   1e484:	cbz	w14, 1e494 <__sanitizer_on_print@@Base+0x1a44>
   1e488:	b	1e4a0 <__sanitizer_on_print@@Base+0x1a50>
   1e48c:	add	x13, x21, x13
   1e490:	cbnz	w14, 1e4a0 <__sanitizer_on_print@@Base+0x1a50>
   1e494:	and	w9, w9, #0xff
   1e498:	cmp	w9, #0x3a
   1e49c:	b.eq	1e4c4 <__sanitizer_on_print@@Base+0x1a74>  // b.none
   1e4a0:	add	x10, x10, #0x1
   1e4a4:	cmp	x10, x8
   1e4a8:	add	w26, w26, #0x1
   1e4ac:	b.ge	1e31c <__sanitizer_on_print@@Base+0x18cc>  // b.tcont
   1e4b0:	ldrb	w9, [x21]
   1e4b4:	ldr	x12, [x11, x10, lsl #3]
   1e4b8:	tst	w9, #0xff
   1e4bc:	b.ne	1e440 <__sanitizer_on_print@@Base+0x19f0>  // b.any
   1e4c0:	b	1e478 <__sanitizer_on_print@@Base+0x1a28>
   1e4c4:	add	x21, x13, #0x1
   1e4c8:	mov	w26, w10
   1e4cc:	b	1e31c <__sanitizer_on_print@@Base+0x18cc>
   1e4d0:	ldp	x20, x19, [sp, #96]
   1e4d4:	ldp	x22, x21, [sp, #80]
   1e4d8:	ldp	x24, x23, [sp, #64]
   1e4dc:	ldp	x26, x25, [sp, #48]
   1e4e0:	ldr	x30, [sp, #32]
   1e4e4:	add	sp, sp, #0x70
   1e4e8:	ret
   1e4ec:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e4f0:	ldr	x8, [x8, #4024]
   1e4f4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e4f8:	add	x0, x0, #0x848
   1e4fc:	ldr	x1, [x8]
   1e500:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   1e504:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1e508:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e50c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e510:	add	x0, x0, #0x752
   1e514:	add	x2, x2, #0x832
   1e518:	mov	w1, #0x76                  	// #118
   1e51c:	mov	x4, xzr
   1e520:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e524:	stp	x30, x25, [sp, #-64]!
   1e528:	stp	x24, x23, [sp, #16]
   1e52c:	stp	x22, x21, [sp, #32]
   1e530:	stp	x20, x19, [sp, #48]
   1e534:	ldr	w8, [x0, #8]
   1e538:	strb	wzr, [x0, #104]
   1e53c:	cmp	w8, #0x1
   1e540:	b.lt	1e5e8 <__sanitizer_on_print@@Base+0x1b98>  // b.tstop
   1e544:	mov	x19, x3
   1e548:	mov	x20, x2
   1e54c:	mov	x21, x1
   1e550:	mov	x22, x0
   1e554:	mov	x23, xzr
   1e558:	ldr	x8, [x22]
   1e55c:	mov	x0, x20
   1e560:	ldr	x1, [x8, x23, lsl #3]
   1e564:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   1e568:	cbz	w0, 1e580 <__sanitizer_on_print@@Base+0x1b30>
   1e56c:	ldrsw	x8, [x22, #8]
   1e570:	add	x23, x23, #0x1
   1e574:	cmp	x23, x8
   1e578:	b.lt	1e558 <__sanitizer_on_print@@Base+0x1b08>  // b.tstop
   1e57c:	b	1e5e8 <__sanitizer_on_print@@Base+0x1b98>
   1e580:	add	x8, x22, x23
   1e584:	ldrb	w8, [x8, #40]
   1e588:	cbz	w8, 1e5e8 <__sanitizer_on_print@@Base+0x1b98>
   1e58c:	ldr	x8, [x22, #32]
   1e590:	cbz	x8, 1e5e8 <__sanitizer_on_print@@Base+0x1b98>
   1e594:	mov	x23, xzr
   1e598:	mov	x24, xzr
   1e59c:	b	1e5b4 <__sanitizer_on_print@@Base+0x1b64>
   1e5a0:	ldr	x8, [x22, #32]
   1e5a4:	add	x24, x24, #0x1
   1e5a8:	add	x23, x23, #0x20
   1e5ac:	cmp	x24, x8
   1e5b0:	b.cs	1e5e8 <__sanitizer_on_print@@Base+0x1b98>  // b.hs, b.nlast
   1e5b4:	ldr	x25, [x22, #16]
   1e5b8:	mov	x1, x20
   1e5bc:	ldr	x0, [x25, x23]
   1e5c0:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   1e5c4:	cbnz	w0, 1e5a0 <__sanitizer_on_print@@Base+0x1b50>
   1e5c8:	add	x25, x25, x23
   1e5cc:	ldr	x0, [x25, #8]
   1e5d0:	mov	x1, x21
   1e5d4:	bl	13c58 <__sanitizer_report_error_summary@@Base+0x408>
   1e5d8:	tbz	w0, #0, 1e5a0 <__sanitizer_on_print@@Base+0x1b50>
   1e5dc:	mov	w0, #0x1                   	// #1
   1e5e0:	str	x25, [x19]
   1e5e4:	b	1e5ec <__sanitizer_on_print@@Base+0x1b9c>
   1e5e8:	mov	w0, wzr
   1e5ec:	ldp	x20, x19, [sp, #48]
   1e5f0:	ldp	x22, x21, [sp, #32]
   1e5f4:	ldp	x24, x23, [sp, #16]
   1e5f8:	ldp	x30, x25, [sp], #64
   1e5fc:	ret
   1e600:	stp	x30, x21, [sp, #-32]!
   1e604:	stp	x20, x19, [sp, #16]
   1e608:	ldr	w8, [x0, #8]
   1e60c:	cmp	w8, #0x1
   1e610:	b.lt	1e644 <__sanitizer_on_print@@Base+0x1bf4>  // b.tstop
   1e614:	mov	x19, x0
   1e618:	mov	x20, x1
   1e61c:	mov	x21, xzr
   1e620:	ldr	x8, [x19]
   1e624:	mov	x0, x20
   1e628:	ldr	x1, [x8, x21, lsl #3]
   1e62c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   1e630:	cbz	w0, 1e654 <__sanitizer_on_print@@Base+0x1c04>
   1e634:	ldrsw	x8, [x19, #8]
   1e638:	add	x21, x21, #0x1
   1e63c:	cmp	x21, x8
   1e640:	b.lt	1e620 <__sanitizer_on_print@@Base+0x1bd0>  // b.tstop
   1e644:	mov	w0, wzr
   1e648:	ldp	x20, x19, [sp, #16]
   1e64c:	ldp	x30, x21, [sp], #32
   1e650:	ret
   1e654:	add	x8, x19, x21
   1e658:	ldrb	w8, [x8, #40]
   1e65c:	cmp	w8, #0x0
   1e660:	cset	w0, ne  // ne = any
   1e664:	ldp	x20, x19, [sp, #16]
   1e668:	ldp	x30, x21, [sp], #32
   1e66c:	ret
   1e670:	ldr	x0, [x0, #32]
   1e674:	ret
   1e678:	str	x30, [sp, #-16]!
   1e67c:	ldr	x4, [x0, #32]
   1e680:	mov	x3, x1
   1e684:	cmp	x4, x1
   1e688:	b.ls	1e69c <__sanitizer_on_print@@Base+0x1c4c>  // b.plast
   1e68c:	ldr	x8, [x0, #16]
   1e690:	add	x0, x8, x3, lsl #5
   1e694:	ldr	x30, [sp], #16
   1e698:	ret
   1e69c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e6a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e6a4:	add	x0, x0, #0x752
   1e6a8:	add	x2, x2, #0x86a
   1e6ac:	mov	w1, #0xaa                  	// #170
   1e6b0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e6b4:	str	x30, [sp, #-48]!
   1e6b8:	stp	x22, x21, [sp, #16]
   1e6bc:	stp	x20, x19, [sp, #32]
   1e6c0:	ldr	x8, [x0, #32]
   1e6c4:	cbz	x8, 1e714 <__sanitizer_on_print@@Base+0x1cc4>
   1e6c8:	mov	x19, x0
   1e6cc:	mov	x20, x1
   1e6d0:	mov	x21, xzr
   1e6d4:	mov	x22, xzr
   1e6d8:	b	1e6ec <__sanitizer_on_print@@Base+0x1c9c>
   1e6dc:	add	x22, x22, #0x1
   1e6e0:	cmp	x22, x8
   1e6e4:	add	x21, x21, #0x20
   1e6e8:	b.cs	1e714 <__sanitizer_on_print@@Base+0x1cc4>  // b.hs, b.nlast
   1e6ec:	ldr	x9, [x19, #16]
   1e6f0:	add	x9, x9, x21
   1e6f4:	ldr	w10, [x9, #16]
   1e6f8:	cbz	w10, 1e6dc <__sanitizer_on_print@@Base+0x1c8c>
   1e6fc:	add	x1, sp, #0x8
   1e700:	mov	x0, x20
   1e704:	str	x9, [sp, #8]
   1e708:	bl	1e82c <__sanitizer_on_print@@Base+0x1ddc>
   1e70c:	ldr	x8, [x19, #32]
   1e710:	b	1e6dc <__sanitizer_on_print@@Base+0x1c8c>
   1e714:	ldp	x20, x19, [sp, #32]
   1e718:	ldp	x22, x21, [sp, #16]
   1e71c:	ldr	x30, [sp], #48
   1e720:	ret
   1e724:	str	x30, [sp, #-32]!
   1e728:	stp	x20, x19, [sp, #16]
   1e72c:	ldp	x8, x3, [x0, #8]
   1e730:	lsr	x4, x8, #5
   1e734:	cmp	x3, x4
   1e738:	b.hi	1e7c0 <__sanitizer_on_print@@Base+0x1d70>  // b.pmore
   1e73c:	mov	x19, x0
   1e740:	mov	x20, x1
   1e744:	b.ne	1e79c <__sanitizer_on_print@@Base+0x1d4c>  // b.any
   1e748:	adds	x3, x3, #0x1
   1e74c:	b.cs	1e7d8 <__sanitizer_on_print@@Base+0x1d88>  // b.hs, b.nlast
   1e750:	sub	x8, x3, #0x1
   1e754:	tst	x3, x8
   1e758:	b.ne	1e764 <__sanitizer_on_print@@Base+0x1d14>  // b.any
   1e75c:	mov	x8, x3
   1e760:	b	1e78c <__sanitizer_on_print@@Base+0x1d3c>
   1e764:	clz	x8, x3
   1e768:	eor	x9, x8, #0x3f
   1e76c:	mov	w8, #0x2                   	// #2
   1e770:	lsl	x8, x8, x9
   1e774:	cmp	x8, x3
   1e778:	b.ls	1e7f8 <__sanitizer_on_print@@Base+0x1da8>  // b.plast
   1e77c:	mov	w10, #0x1                   	// #1
   1e780:	lsl	x4, x10, x9
   1e784:	cmp	x4, x3
   1e788:	b.cs	1e814 <__sanitizer_on_print@@Base+0x1dc4>  // b.hs, b.nlast
   1e78c:	mov	x0, x19
   1e790:	mov	x1, x8
   1e794:	bl	1e934 <__sanitizer_on_print@@Base+0x1ee4>
   1e798:	ldr	x3, [x19, #16]
   1e79c:	add	x9, x3, #0x1
   1e7a0:	ldr	x8, [x19]
   1e7a4:	str	x9, [x19, #16]
   1e7a8:	mov	x1, x20
   1e7ac:	ldp	x20, x19, [sp, #16]
   1e7b0:	add	x0, x8, x3, lsl #5
   1e7b4:	mov	w2, #0x20                  	// #32
   1e7b8:	ldr	x30, [sp], #32
   1e7bc:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1e7c0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e7c4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e7c8:	add	x0, x0, #0xb2f
   1e7cc:	add	x2, x2, #0x41
   1e7d0:	mov	w1, #0x1cd                 	// #461
   1e7d4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e7d8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e7dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e7e0:	add	x0, x0, #0xb2f
   1e7e4:	add	x2, x2, #0x5d
   1e7e8:	mov	w1, #0x186                 	// #390
   1e7ec:	mov	x3, xzr
   1e7f0:	mov	x4, xzr
   1e7f4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e7f8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e7fc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1e800:	add	x0, x0, #0xb2f
   1e804:	add	x2, x2, #0x156
   1e808:	mov	w1, #0x18a                 	// #394
   1e80c:	mov	x4, x8
   1e810:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e814:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e818:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1e81c:	add	x0, x0, #0xb2f
   1e820:	add	x2, x2, #0x178
   1e824:	mov	w1, #0x18b                 	// #395
   1e828:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e82c:	str	x30, [sp, #-32]!
   1e830:	stp	x20, x19, [sp, #16]
   1e834:	ldp	x8, x3, [x0, #8]
   1e838:	lsr	x4, x8, #3
   1e83c:	cmp	x3, x4
   1e840:	b.hi	1e8c8 <__sanitizer_on_print@@Base+0x1e78>  // b.pmore
   1e844:	mov	x19, x0
   1e848:	mov	x20, x1
   1e84c:	b.ne	1e8a4 <__sanitizer_on_print@@Base+0x1e54>  // b.any
   1e850:	adds	x3, x3, #0x1
   1e854:	b.cs	1e8e0 <__sanitizer_on_print@@Base+0x1e90>  // b.hs, b.nlast
   1e858:	sub	x8, x3, #0x1
   1e85c:	tst	x3, x8
   1e860:	b.ne	1e86c <__sanitizer_on_print@@Base+0x1e1c>  // b.any
   1e864:	mov	x8, x3
   1e868:	b	1e894 <__sanitizer_on_print@@Base+0x1e44>
   1e86c:	clz	x8, x3
   1e870:	eor	x9, x8, #0x3f
   1e874:	mov	w8, #0x2                   	// #2
   1e878:	lsl	x8, x8, x9
   1e87c:	cmp	x8, x3
   1e880:	b.ls	1e900 <__sanitizer_on_print@@Base+0x1eb0>  // b.plast
   1e884:	mov	w10, #0x1                   	// #1
   1e888:	lsl	x4, x10, x9
   1e88c:	cmp	x4, x3
   1e890:	b.cs	1e91c <__sanitizer_on_print@@Base+0x1ecc>  // b.hs, b.nlast
   1e894:	mov	x0, x19
   1e898:	mov	x1, x8
   1e89c:	bl	1ea18 <__sanitizer_on_print@@Base+0x1fc8>
   1e8a0:	ldr	x3, [x19, #16]
   1e8a4:	add	x9, x3, #0x1
   1e8a8:	ldr	x8, [x19]
   1e8ac:	str	x9, [x19, #16]
   1e8b0:	mov	x1, x20
   1e8b4:	ldp	x20, x19, [sp, #16]
   1e8b8:	add	x0, x8, x3, lsl #3
   1e8bc:	mov	w2, #0x8                   	// #8
   1e8c0:	ldr	x30, [sp], #32
   1e8c4:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1e8c8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e8cc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e8d0:	add	x0, x0, #0xb2f
   1e8d4:	add	x2, x2, #0x41
   1e8d8:	mov	w1, #0x1cd                 	// #461
   1e8dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e8e0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e8e4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1e8e8:	add	x0, x0, #0xb2f
   1e8ec:	add	x2, x2, #0x5d
   1e8f0:	mov	w1, #0x186                 	// #390
   1e8f4:	mov	x3, xzr
   1e8f8:	mov	x4, xzr
   1e8fc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e900:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e904:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1e908:	add	x0, x0, #0xb2f
   1e90c:	add	x2, x2, #0x156
   1e910:	mov	w1, #0x18a                 	// #394
   1e914:	mov	x4, x8
   1e918:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e91c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e920:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1e924:	add	x0, x0, #0xb2f
   1e928:	add	x2, x2, #0x178
   1e92c:	mov	w1, #0x18b                 	// #395
   1e930:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e934:	stp	x30, x21, [sp, #-32]!
   1e938:	stp	x20, x19, [sp, #16]
   1e93c:	cbz	x1, 1e9cc <__sanitizer_on_print@@Base+0x1f7c>
   1e940:	ldr	x3, [x0, #16]
   1e944:	mov	x20, x1
   1e948:	mov	x19, x0
   1e94c:	cmp	x3, x1
   1e950:	b.hi	1e9ec <__sanitizer_on_print@@Base+0x1f9c>  // b.pmore
   1e954:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1e958:	ldr	x21, [x21, #4016]
   1e95c:	ldr	x0, [x21]
   1e960:	cbnz	x0, 1e96c <__sanitizer_on_print@@Base+0x1f1c>
   1e964:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1e968:	str	x0, [x21]
   1e96c:	sub	x8, x0, #0x1
   1e970:	tst	x0, x8
   1e974:	b.ne	1ea08 <__sanitizer_on_print@@Base+0x1fb8>  // b.any
   1e978:	lsl	x8, x20, #5
   1e97c:	add	x8, x8, x0
   1e980:	sub	x8, x8, #0x1
   1e984:	neg	x9, x0
   1e988:	and	x20, x8, x9
   1e98c:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1e990:	add	x1, x1, #0x950
   1e994:	mov	x0, x20
   1e998:	mov	w2, wzr
   1e99c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1e9a0:	ldr	x8, [x19, #16]
   1e9a4:	ldr	x1, [x19]
   1e9a8:	mov	x21, x0
   1e9ac:	lsl	x2, x8, #5
   1e9b0:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1e9b4:	ldp	x0, x1, [x19]
   1e9b8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1e9bc:	stp	x21, x20, [x19]
   1e9c0:	ldp	x20, x19, [sp, #16]
   1e9c4:	ldp	x30, x21, [sp], #32
   1e9c8:	ret
   1e9cc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e9d0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1e9d4:	add	x0, x0, #0xb2f
   1e9d8:	add	x2, x2, #0x919
   1e9dc:	mov	w1, #0x20b                 	// #523
   1e9e0:	mov	x3, xzr
   1e9e4:	mov	x4, xzr
   1e9e8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1e9ec:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1e9f0:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1e9f4:	add	x0, x0, #0xb2f
   1e9f8:	add	x2, x2, #0x932
   1e9fc:	mov	w1, #0x20c                 	// #524
   1ea00:	mov	x4, x20
   1ea04:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ea08:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1ea0c:	add	x0, x0, #0x20f
   1ea10:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1ea14:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1ea18:	stp	x30, x21, [sp, #-32]!
   1ea1c:	stp	x20, x19, [sp, #16]
   1ea20:	cbz	x1, 1eab0 <__sanitizer_on_print@@Base+0x2060>
   1ea24:	ldr	x3, [x0, #16]
   1ea28:	mov	x20, x1
   1ea2c:	mov	x19, x0
   1ea30:	cmp	x3, x1
   1ea34:	b.hi	1ead0 <__sanitizer_on_print@@Base+0x2080>  // b.pmore
   1ea38:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ea3c:	ldr	x21, [x21, #4016]
   1ea40:	ldr	x0, [x21]
   1ea44:	cbnz	x0, 1ea50 <__sanitizer_on_print@@Base+0x2000>
   1ea48:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   1ea4c:	str	x0, [x21]
   1ea50:	sub	x8, x0, #0x1
   1ea54:	tst	x0, x8
   1ea58:	b.ne	1eaec <__sanitizer_on_print@@Base+0x209c>  // b.any
   1ea5c:	lsl	x8, x20, #3
   1ea60:	add	x8, x8, x0
   1ea64:	sub	x8, x8, #0x1
   1ea68:	neg	x9, x0
   1ea6c:	and	x20, x8, x9
   1ea70:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1ea74:	add	x1, x1, #0x950
   1ea78:	mov	x0, x20
   1ea7c:	mov	w2, wzr
   1ea80:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1ea84:	ldr	x8, [x19, #16]
   1ea88:	ldr	x1, [x19]
   1ea8c:	mov	x21, x0
   1ea90:	lsl	x2, x8, #3
   1ea94:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1ea98:	ldp	x0, x1, [x19]
   1ea9c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1eaa0:	stp	x21, x20, [x19]
   1eaa4:	ldp	x20, x19, [sp, #16]
   1eaa8:	ldp	x30, x21, [sp], #32
   1eaac:	ret
   1eab0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1eab4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1eab8:	add	x0, x0, #0xb2f
   1eabc:	add	x2, x2, #0x919
   1eac0:	mov	w1, #0x20b                 	// #523
   1eac4:	mov	x3, xzr
   1eac8:	mov	x4, xzr
   1eacc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1ead0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1ead4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1ead8:	add	x0, x0, #0xb2f
   1eadc:	add	x2, x2, #0x932
   1eae0:	mov	w1, #0x20c                 	// #524
   1eae4:	mov	x4, x20
   1eae8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1eaec:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   1eaf0:	add	x0, x0, #0x20f
   1eaf4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   1eaf8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1eafc:	stp	x30, x21, [sp, #-32]!
   1eb00:	stp	x20, x19, [sp, #16]
   1eb04:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1eb08:	ldr	x8, [x8, #4056]
   1eb0c:	ldrb	w8, [x8, #121]
   1eb10:	cbz	w8, 1eba4 <__sanitizer_on_print@@Base+0x2154>
   1eb14:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1eb18:	ldr	x21, [x21, #3808]
   1eb1c:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1eb20:	ldr	w8, [x21]
   1eb24:	ldr	x19, [x19, #3600]
   1eb28:	mrs	x20, tpidr_el0
   1eb2c:	cmp	w8, #0x2
   1eb30:	b.cc	1eb48 <__sanitizer_on_print@@Base+0x20f8>  // b.lo, b.ul, b.last
   1eb34:	add	x1, x20, x19
   1eb38:	ldr	x2, [x1]
   1eb3c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1eb40:	add	x0, x0, #0x88b
   1eb44:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1eb48:	add	x8, x20, x19
   1eb4c:	ldr	x19, [x8]
   1eb50:	mov	x9, #0xffffffffffffffff    	// #-1
   1eb54:	str	x9, [x8]
   1eb58:	cbz	x19, 1eba4 <__sanitizer_on_print@@Base+0x2154>
   1eb5c:	ldr	x20, [x8, #8]
   1eb60:	ldr	w8, [x21]
   1eb64:	cmp	w8, #0x2
   1eb68:	b.cc	1eb80 <__sanitizer_on_print@@Base+0x2130>  // b.lo, b.ul, b.last
   1eb6c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1eb70:	add	x0, x0, #0x9cc
   1eb74:	mov	x1, x20
   1eb78:	mov	x2, x19
   1eb7c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1eb80:	lsl	x1, x19, #4
   1eb84:	mov	x0, x20
   1eb88:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1eb8c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1eb90:	add	x8, x8, #0x6a8
   1eb94:	ldaxr	x9, [x8]
   1eb98:	sub	x9, x9, #0x1
   1eb9c:	stlxr	w10, x9, [x8]
   1eba0:	cbnz	w10, 1eb94 <__sanitizer_on_print@@Base+0x2144>
   1eba4:	ldp	x20, x19, [sp, #16]
   1eba8:	ldp	x30, x21, [sp], #32
   1ebac:	ret
   1ebb0:	sub	sp, sp, #0x80
   1ebb4:	stp	x29, x30, [sp, #32]
   1ebb8:	stp	x28, x27, [sp, #48]
   1ebbc:	stp	x26, x25, [sp, #64]
   1ebc0:	stp	x24, x23, [sp, #80]
   1ebc4:	stp	x22, x21, [sp, #96]
   1ebc8:	stp	x20, x19, [sp, #112]
   1ebcc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ebd0:	ldr	x8, [x8, #4056]
   1ebd4:	ldrb	w8, [x8, #121]
   1ebd8:	cbz	w8, 1ed68 <__sanitizer_on_print@@Base+0x2318>
   1ebdc:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ebe0:	ldr	x26, [x26, #3600]
   1ebe4:	mrs	x28, tpidr_el0
   1ebe8:	ldr	x8, [x28, x26]
   1ebec:	cmn	x8, #0x1
   1ebf0:	b.eq	1ed68 <__sanitizer_on_print@@Base+0x2318>  // b.none
   1ebf4:	ldr	x25, [x0]
   1ebf8:	mov	x19, x3
   1ebfc:	mov	x20, x2
   1ec00:	mov	x21, x1
   1ec04:	add	x3, x25, #0x1
   1ec08:	mov	x22, x0
   1ec0c:	cmp	x8, x3
   1ec10:	b.cs	1ed54 <__sanitizer_on_print@@Base+0x2304>  // b.hs, b.nlast
   1ec14:	sub	x8, x3, #0x1
   1ec18:	tst	x3, x8
   1ec1c:	b.ne	1ec28 <__sanitizer_on_print@@Base+0x21d8>  // b.any
   1ec20:	mov	x4, x3
   1ec24:	b	1ec50 <__sanitizer_on_print@@Base+0x2200>
   1ec28:	clz	x8, x3
   1ec2c:	eor	x8, x8, #0x3f
   1ec30:	mov	w9, #0x2                   	// #2
   1ec34:	lsl	x4, x9, x8
   1ec38:	cmp	x4, x3
   1ec3c:	b.ls	1eebc <__sanitizer_on_print@@Base+0x246c>  // b.plast
   1ec40:	mov	w9, #0x1                   	// #1
   1ec44:	lsl	x8, x9, x8
   1ec48:	cmp	x8, x3
   1ec4c:	b.cs	1eed4 <__sanitizer_on_print@@Base+0x2484>  // b.hs, b.nlast
   1ec50:	cmp	x4, #0x100
   1ec54:	mov	w8, #0x100                 	// #256
   1ec58:	csel	x29, x4, x8, hi  // hi = pmore
   1ec5c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ec60:	lsl	x0, x29, #4
   1ec64:	add	x1, x1, #0x9f4
   1ec68:	mov	w2, wzr
   1ec6c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1ec70:	adrp	x27, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ec74:	mov	x23, x0
   1ec78:	add	x27, x27, #0x6a8
   1ec7c:	ldaxr	x24, [x27]
   1ec80:	add	x8, x24, #0x1
   1ec84:	stlxr	w9, x8, [x27]
   1ec88:	cbnz	w9, 1ec7c <__sanitizer_on_print@@Base+0x222c>
   1ec8c:	str	x20, [sp, #8]
   1ec90:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ec94:	ldr	x8, [x8, #3808]
   1ec98:	ldr	w8, [x8]
   1ec9c:	cmp	w8, #0x2
   1eca0:	b.cc	1ecb8 <__sanitizer_on_print@@Base+0x2268>  // b.lo, b.ul, b.last
   1eca4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1eca8:	add	x1, x28, x26
   1ecac:	add	x0, x0, #0xa00
   1ecb0:	mov	x2, x24
   1ecb4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ecb8:	cmp	x24, #0x100, lsl #12
   1ecbc:	str	x19, [sp, #16]
   1ecc0:	b.cs	1ee9c <__sanitizer_on_print@@Base+0x244c>  // b.hs, b.nlast
   1ecc4:	add	x19, x28, x26
   1ecc8:	mov	x20, x25
   1eccc:	ldr	x25, [x19]
   1ecd0:	cbz	x25, 1ed48 <__sanitizer_on_print@@Base+0x22f8>
   1ecd4:	ldr	x24, [x19, #8]
   1ecd8:	lsl	x26, x25, #4
   1ecdc:	mov	x0, x23
   1ece0:	mov	x2, x26
   1ece4:	mov	x1, x24
   1ece8:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   1ecec:	stp	x29, x23, [x19]
   1ecf0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ecf4:	ldr	x8, [x8, #3808]
   1ecf8:	ldr	w8, [x8]
   1ecfc:	cmp	w8, #0x2
   1ed00:	b.cc	1ed18 <__sanitizer_on_print@@Base+0x22c8>  // b.lo, b.ul, b.last
   1ed04:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ed08:	add	x0, x0, #0x9cc
   1ed0c:	mov	x1, x24
   1ed10:	mov	x2, x25
   1ed14:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ed18:	mov	x0, x24
   1ed1c:	mov	x1, x26
   1ed20:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   1ed24:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ed28:	ldr	x26, [x26, #3600]
   1ed2c:	mov	x25, x20
   1ed30:	ldp	x20, x19, [sp, #8]
   1ed34:	ldaxr	x8, [x27]
   1ed38:	sub	x8, x8, #0x1
   1ed3c:	stlxr	w9, x8, [x27]
   1ed40:	cbnz	w9, 1ed34 <__sanitizer_on_print@@Base+0x22e4>
   1ed44:	b	1ed54 <__sanitizer_on_print@@Base+0x2304>
   1ed48:	stp	x29, x23, [x19]
   1ed4c:	mov	x25, x20
   1ed50:	ldp	x20, x19, [sp, #8]
   1ed54:	add	x8, x28, x26
   1ed58:	ldr	x8, [x8, #8]
   1ed5c:	lsl	x9, x25, #4
   1ed60:	ldr	x8, [x8, x9]
   1ed64:	cbz	x8, 1ed8c <__sanitizer_on_print@@Base+0x233c>
   1ed68:	mov	x0, xzr
   1ed6c:	ldp	x20, x19, [sp, #112]
   1ed70:	ldp	x22, x21, [sp, #96]
   1ed74:	ldp	x24, x23, [sp, #80]
   1ed78:	ldp	x26, x25, [sp, #64]
   1ed7c:	ldp	x28, x27, [sp, #48]
   1ed80:	ldp	x29, x30, [sp, #32]
   1ed84:	add	sp, sp, #0x80
   1ed88:	ret
   1ed8c:	ldr	x3, [x22, #8]
   1ed90:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ed94:	sub	x5, x21, x3
   1ed98:	str	x5, [sp, #24]
   1ed9c:	ldr	x23, [x23, #3808]
   1eda0:	ldr	w8, [x23]
   1eda4:	cmp	w8, #0x2
   1eda8:	b.cc	1edd4 <__sanitizer_on_print@@Base+0x2384>  // b.lo, b.ul, b.last
   1edac:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1edb0:	ldr	x2, [x22]
   1edb4:	ldr	x7, [x8, #1704]
   1edb8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1edbc:	add	x0, x0, #0x8b0
   1edc0:	add	x6, sp, #0x18
   1edc4:	mov	x1, x22
   1edc8:	mov	x4, x21
   1edcc:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1edd0:	ldr	x5, [sp, #24]
   1edd4:	add	x8, x28, x26
   1edd8:	ldr	x9, [x8, #24]
   1eddc:	cmp	x9, x5
   1ede0:	b.ne	1ee0c <__sanitizer_on_print@@Base+0x23bc>  // b.any
   1ede4:	ldr	x19, [x8, #16]
   1ede8:	ldr	w8, [x23]
   1edec:	cmp	w8, #0x2
   1edf0:	b.cc	1ee84 <__sanitizer_on_print@@Base+0x2434>  // b.lo, b.ul, b.last
   1edf4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1edf8:	add	x0, x0, #0x8f9
   1edfc:	mov	x1, x5
   1ee00:	mov	x2, x19
   1ee04:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ee08:	b	1ee84 <__sanitizer_on_print@@Base+0x2434>
   1ee0c:	cmp	x5, x20
   1ee10:	b.cc	1ee3c <__sanitizer_on_print@@Base+0x23ec>  // b.lo, b.ul, b.last
   1ee14:	cmp	x5, x19
   1ee18:	b.cs	1ee3c <__sanitizer_on_print@@Base+0x23ec>  // b.hs, b.nlast
   1ee1c:	ldr	w8, [x23]
   1ee20:	cmp	w8, #0x2
   1ee24:	b.cc	1ee80 <__sanitizer_on_print@@Base+0x2430>  // b.lo, b.ul, b.last
   1ee28:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ee2c:	add	x0, x0, #0x92e
   1ee30:	mov	x1, x5
   1ee34:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ee38:	b	1ee80 <__sanitizer_on_print@@Base+0x2430>
   1ee3c:	and	x8, x5, #0xfff
   1ee40:	cmp	x8, #0x10
   1ee44:	b.ne	1ee68 <__sanitizer_on_print@@Base+0x2418>  // b.any
   1ee48:	ldp	x19, x1, [x5, #-16]
   1ee4c:	str	x1, [sp, #24]
   1ee50:	ldr	w8, [x23]
   1ee54:	cmp	w8, #0x2
   1ee58:	b.cc	1ee84 <__sanitizer_on_print@@Base+0x2434>  // b.lo, b.ul, b.last
   1ee5c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ee60:	add	x0, x0, #0x94e
   1ee64:	b	1ee00 <__sanitizer_on_print@@Base+0x23b0>
   1ee68:	ldr	w8, [x23]
   1ee6c:	cmp	w8, #0x2
   1ee70:	b.cc	1ee80 <__sanitizer_on_print@@Base+0x2430>  // b.lo, b.ul, b.last
   1ee74:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ee78:	add	x0, x0, #0x983
   1ee7c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ee80:	mov	x19, xzr
   1ee84:	add	x8, x28, x26
   1ee88:	ldr	x8, [x8, #8]
   1ee8c:	ldr	x9, [sp, #24]
   1ee90:	add	x0, x8, x25, lsl #4
   1ee94:	stp	x9, x19, [x0]
   1ee98:	b	1ed6c <__sanitizer_on_print@@Base+0x231c>
   1ee9c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1eea0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1eea4:	add	x0, x0, #0xa24
   1eea8:	add	x2, x2, #0xa7d
   1eeac:	mov	w1, #0x3d                  	// #61
   1eeb0:	mov	w4, #0x100000              	// #1048576
   1eeb4:	mov	x3, x24
   1eeb8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1eebc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1eec0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1eec4:	add	x0, x0, #0xb2f
   1eec8:	add	x2, x2, #0x156
   1eecc:	mov	w1, #0x18a                 	// #394
   1eed0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1eed4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1eed8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   1eedc:	add	x0, x0, #0xb2f
   1eee0:	add	x2, x2, #0x178
   1eee4:	mov	w1, #0x18b                 	// #395
   1eee8:	mov	x4, x8
   1eeec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1eef0:	str	x30, [sp, #-32]!
   1eef4:	stp	x20, x19, [sp, #16]
   1eef8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1eefc:	ldr	x8, [x8, #4056]
   1ef00:	ldrb	w8, [x8, #121]
   1ef04:	cbz	w8, 1ef4c <__sanitizer_on_print@@Base+0x24fc>
   1ef08:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ef0c:	ldr	x8, [x8, #3808]
   1ef10:	mov	x19, x1
   1ef14:	mov	x20, x0
   1ef18:	ldr	w8, [x8]
   1ef1c:	cmp	w8, #0x2
   1ef20:	b.cc	1ef38 <__sanitizer_on_print@@Base+0x24e8>  // b.lo, b.ul, b.last
   1ef24:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1ef28:	add	x0, x0, #0x9ae
   1ef2c:	mov	x1, x20
   1ef30:	mov	x2, x19
   1ef34:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1ef38:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ef3c:	ldr	x8, [x8, #3600]
   1ef40:	mrs	x9, tpidr_el0
   1ef44:	add	x8, x9, x8
   1ef48:	stp	x19, x20, [x8, #16]
   1ef4c:	ldp	x20, x19, [sp, #16]
   1ef50:	ldr	x30, [sp], #32
   1ef54:	ret
   1ef58:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ef5c:	ldr	x8, [x8, #3600]
   1ef60:	mrs	x9, tpidr_el0
   1ef64:	add	x0, x9, x8
   1ef68:	ret
   1ef6c:	ldr	x8, [x0]
   1ef70:	cmn	x8, #0x1
   1ef74:	cset	w0, eq  // eq = none
   1ef78:	ret
   1ef7c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1ef80:	add	x8, x8, #0x7d0
   1ef84:	str	w1, [x0, #8]
   1ef88:	str	xzr, [x0, #16]
   1ef8c:	str	wzr, [x0, #24]
   1ef90:	stp	xzr, xzr, [x0, #32]
   1ef94:	str	wzr, [x0, #112]
   1ef98:	strb	wzr, [x0, #116]
   1ef9c:	stp	xzr, xzr, [x0, #120]
   1efa0:	strb	wzr, [x0, #48]
   1efa4:	str	x8, [x0]
   1efa8:	dmb	ish
   1efac:	str	wzr, [x0, #136]
   1efb0:	ret
   1efb4:	str	x30, [sp, #-16]!
   1efb8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1efbc:	add	x8, x8, #0x7d0
   1efc0:	str	x8, [x0]
   1efc4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1efc8:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   1efcc:	add	x0, x0, #0xa9d
   1efd0:	add	x2, x2, #0x83f
   1efd4:	mov	w1, #0x1c                  	// #28
   1efd8:	mov	x3, xzr
   1efdc:	mov	x4, xzr
   1efe0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1efe4:	stp	x30, x19, [sp, #-16]!
   1efe8:	mov	x19, x0
   1efec:	strb	wzr, [x0, #48]!
   1eff0:	cbz	x1, 1f000 <__sanitizer_on_print@@Base+0x25b0>
   1eff4:	mov	w2, #0x40                  	// #64
   1eff8:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   1effc:	strb	wzr, [x19, #111]
   1f000:	ldp	x30, x19, [sp], #16
   1f004:	ret
   1f008:	str	x30, [sp, #-16]!
   1f00c:	ldr	w8, [x0, #112]
   1f010:	orr	w8, w8, #0x1
   1f014:	cmp	w8, #0x3
   1f018:	b.ne	1f038 <__sanitizer_on_print@@Base+0x25e8>  // b.any
   1f01c:	ldr	x8, [x0]
   1f020:	mov	w9, #0x4                   	// #4
   1f024:	str	w9, [x0, #112]
   1f028:	str	xzr, [x0, #40]
   1f02c:	ldr	x1, [x8]
   1f030:	ldr	x30, [sp], #16
   1f034:	br	x1
   1f038:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f03c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f040:	add	x0, x0, #0xa9d
   1f044:	add	x2, x2, #0xaf9
   1f048:	mov	w1, #0x29                  	// #41
   1f04c:	mov	x3, xzr
   1f050:	mov	x4, xzr
   1f054:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f058:	mov	w8, #0x1                   	// #1
   1f05c:	dmb	ish
   1f060:	str	w8, [x0, #136]
   1f064:	ret
   1f068:	ldr	w8, [x0, #136]
   1f06c:	dmb	ish
   1f070:	cmp	w8, #0x0
   1f074:	cset	w0, ne  // ne = any
   1f078:	ret
   1f07c:	str	x30, [sp, #-16]!
   1f080:	ldrb	w4, [x0, #116]
   1f084:	cbnz	x4, 1f0b0 <__sanitizer_on_print@@Base+0x2660>
   1f088:	ldr	w4, [x0, #112]
   1f08c:	cmp	w4, #0x3
   1f090:	b.ne	1f0cc <__sanitizer_on_print@@Base+0x267c>  // b.any
   1f094:	ldr	x8, [x0]
   1f098:	mov	w9, #0x4                   	// #4
   1f09c:	str	w9, [x0, #112]
   1f0a0:	str	xzr, [x0, #40]
   1f0a4:	ldr	x2, [x8, #8]
   1f0a8:	ldr	x30, [sp], #16
   1f0ac:	br	x2
   1f0b0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f0b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f0b8:	add	x0, x0, #0xa9d
   1f0bc:	add	x2, x2, #0xb44
   1f0c0:	mov	w1, #0x39                  	// #57
   1f0c4:	mov	x3, xzr
   1f0c8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f0cc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f0d0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f0d4:	add	x0, x0, #0xa9d
   1f0d8:	add	x2, x2, #0xb5e
   1f0dc:	mov	w1, #0x3a                  	// #58
   1f0e0:	mov	w3, #0x3                   	// #3
   1f0e4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f0e8:	ldrb	w8, [x0, #116]
   1f0ec:	cbz	w8, 1f0fc <__sanitizer_on_print@@Base+0x26ac>
   1f0f0:	ldr	w8, [x0, #112]
   1f0f4:	cmp	w8, #0x1
   1f0f8:	b.ne	1f104 <__sanitizer_on_print@@Base+0x26b4>  // b.any
   1f0fc:	mov	w8, #0x3                   	// #3
   1f100:	str	w8, [x0, #112]
   1f104:	ldr	x8, [x0]
   1f108:	ldr	x1, [x8, #16]
   1f10c:	br	x1
   1f110:	ldr	x9, [x0]
   1f114:	mov	w8, #0x2                   	// #2
   1f118:	str	w8, [x0, #112]
   1f11c:	str	x1, [x0, #32]
   1f120:	str	w2, [x0, #120]
   1f124:	ldr	x2, [x9, #24]
   1f128:	mov	x1, x3
   1f12c:	br	x2
   1f130:	ldr	w10, [x0, #8]
   1f134:	and	w8, w3, #0x1
   1f138:	mov	w9, #0x1                   	// #1
   1f13c:	str	w9, [x0, #112]
   1f140:	str	x1, [x0, #40]
   1f144:	str	x2, [x0, #16]
   1f148:	strb	w8, [x0, #116]
   1f14c:	cbz	w10, 1f154 <__sanitizer_on_print@@Base+0x2704>
   1f150:	str	w4, [x0, #124]
   1f154:	ldr	x8, [x0]
   1f158:	mov	x1, x5
   1f15c:	ldr	x2, [x8, #32]
   1f160:	br	x2
   1f164:	str	wzr, [x0, #112]
   1f168:	strb	wzr, [x0, #48]
   1f16c:	dmb	ish
   1f170:	str	wzr, [x0, #136]
   1f174:	ldr	x8, [x0]
   1f178:	ldr	x1, [x8, #40]
   1f17c:	br	x1
   1f180:	stp	x30, x19, [sp, #-16]!
   1f184:	mov	x19, x0
   1f188:	str	x1, [x0]
   1f18c:	stp	w2, w3, [x0, #8]
   1f190:	str	w4, [x0, #16]
   1f194:	add	x0, x0, #0x18
   1f198:	bl	1a144 <__sanitizer_set_report_fd@@Base+0x3b00>
   1f19c:	ldr	w8, [x19, #8]
   1f1a0:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f1a4:	movi	v0.2d, #0x0
   1f1a8:	add	x1, x1, #0xb85
   1f1ac:	lsl	x0, x8, #3
   1f1b0:	mov	w2, wzr
   1f1b4:	str	wzr, [x19, #112]
   1f1b8:	stur	q0, [x19, #120]
   1f1bc:	stur	q0, [x19, #136]
   1f1c0:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   1f1c4:	movi	v0.2d, #0x0
   1f1c8:	stur	q0, [x19, #168]
   1f1cc:	stp	x0, xzr, [x19, #152]
   1f1d0:	str	q0, [x19, #192]
   1f1d4:	str	xzr, [x19, #184]
   1f1d8:	ldp	x30, x19, [sp], #16
   1f1dc:	ret
   1f1e0:	stp	x30, x23, [sp, #-48]!
   1f1e4:	stp	x22, x21, [sp, #16]
   1f1e8:	stp	x20, x19, [sp, #32]
   1f1ec:	add	x20, x0, #0x18
   1f1f0:	mov	x21, x0
   1f1f4:	mov	x0, x20
   1f1f8:	mov	x19, x3
   1f1fc:	mov	x22, x2
   1f200:	mov	x23, x1
   1f204:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f208:	cbz	x23, 1f214 <__sanitizer_on_print@@Base+0x27c4>
   1f20c:	ldr	w8, [x21, #112]
   1f210:	str	x8, [x23]
   1f214:	cbz	x22, 1f220 <__sanitizer_on_print@@Base+0x27d0>
   1f218:	ldr	x8, [x21, #144]
   1f21c:	str	x8, [x22]
   1f220:	cbz	x19, 1f22c <__sanitizer_on_print@@Base+0x27dc>
   1f224:	ldr	x8, [x21, #128]
   1f228:	str	x8, [x19]
   1f22c:	mov	x0, x20
   1f230:	ldp	x20, x19, [sp, #32]
   1f234:	ldp	x22, x21, [sp, #16]
   1f238:	ldp	x30, x23, [sp], #48
   1f23c:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f240:	str	x30, [sp, #-32]!
   1f244:	stp	x20, x19, [sp, #16]
   1f248:	add	x20, x0, #0x18
   1f24c:	mov	x19, x0
   1f250:	mov	x0, x20
   1f254:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f258:	ldr	x19, [x19, #136]
   1f25c:	mov	x0, x20
   1f260:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f264:	mov	x0, x19
   1f268:	ldp	x20, x19, [sp, #16]
   1f26c:	ldr	x30, [sp], #32
   1f270:	ret
   1f274:	stp	x30, x25, [sp, #-64]!
   1f278:	stp	x24, x23, [sp, #16]
   1f27c:	stp	x22, x21, [sp, #32]
   1f280:	stp	x20, x19, [sp, #48]
   1f284:	add	x20, x0, #0x18
   1f288:	mov	x25, x0
   1f28c:	mov	x0, x20
   1f290:	mov	x19, x4
   1f294:	mov	w22, w3
   1f298:	mov	w24, w2
   1f29c:	mov	x23, x1
   1f2a0:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f2a4:	ldr	x8, [x25, #184]
   1f2a8:	cbz	x8, 1f304 <__sanitizer_on_print@@Base+0x28b4>
   1f2ac:	ldr	x0, [x25, #192]
   1f2b0:	ldr	x9, [x0, #128]
   1f2b4:	str	x9, [x25, #192]
   1f2b8:	cbz	x9, 1f2f4 <__sanitizer_on_print@@Base+0x28a4>
   1f2bc:	sub	x8, x8, #0x1
   1f2c0:	str	x8, [x25, #184]
   1f2c4:	cbz	x0, 1f304 <__sanitizer_on_print@@Base+0x28b4>
   1f2c8:	ldr	w21, [x0, #8]
   1f2cc:	cmn	w21, #0x1
   1f2d0:	b.ne	1f334 <__sanitizer_on_print@@Base+0x28e4>  // b.any
   1f2d4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f2d8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f2dc:	add	x0, x0, #0xa9d
   1f2e0:	add	x2, x2, #0xbd6
   1f2e4:	mov	w1, #0x9e                  	// #158
   1f2e8:	mov	w4, #0xffffffff            	// #-1
   1f2ec:	mov	x3, x21
   1f2f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f2f4:	str	xzr, [x25, #200]
   1f2f8:	sub	x8, x8, #0x1
   1f2fc:	str	x8, [x25, #184]
   1f300:	cbnz	x0, 1f2c8 <__sanitizer_on_print@@Base+0x2878>
   1f304:	ldr	w21, [x25, #112]
   1f308:	ldr	w2, [x25, #8]
   1f30c:	cmp	w21, w2
   1f310:	b.cs	1f404 <__sanitizer_on_print@@Base+0x29b4>  // b.hs, b.nlast
   1f314:	ldr	x8, [x25]
   1f318:	add	w9, w21, #0x1
   1f31c:	mov	w0, w21
   1f320:	str	w9, [x25, #112]
   1f324:	blr	x8
   1f328:	ldr	x8, [x25, #152]
   1f32c:	str	x0, [x8, x21, lsl #3]
   1f330:	cbz	x0, 1f420 <__sanitizer_on_print@@Base+0x29d0>
   1f334:	ldr	w4, [x25, #8]
   1f338:	cmp	w21, w4
   1f33c:	b.cs	1f3cc <__sanitizer_on_print@@Base+0x297c>  // b.hs, b.nlast
   1f340:	ldr	w3, [x0, #112]
   1f344:	cbnz	w3, 1f3e8 <__sanitizer_on_print@@Base+0x2998>
   1f348:	ldp	x8, x9, [x25, #128]
   1f34c:	add	x3, x8, #0x1
   1f350:	cmp	x9, x3
   1f354:	str	x3, [x25, #128]
   1f358:	b.cs	1f36c <__sanitizer_on_print@@Base+0x291c>  // b.hs, b.nlast
   1f35c:	add	x4, x9, #0x1
   1f360:	cmp	x8, x9
   1f364:	str	x4, [x25, #136]
   1f368:	b.ne	1f440 <__sanitizer_on_print@@Base+0x29f0>  // b.any
   1f36c:	ldr	x8, [x25, #120]
   1f370:	and	w9, w24, #0x1
   1f374:	add	x10, x8, #0x1
   1f378:	str	x10, [x25, #120]
   1f37c:	ldr	w11, [x0, #8]
   1f380:	mov	w10, #0x1                   	// #1
   1f384:	str	w10, [x0, #112]
   1f388:	str	x23, [x0, #40]
   1f38c:	str	x8, [x0, #16]
   1f390:	strb	w9, [x0, #116]
   1f394:	cbz	w11, 1f39c <__sanitizer_on_print@@Base+0x294c>
   1f398:	str	w22, [x0, #124]
   1f39c:	ldr	x8, [x0]
   1f3a0:	mov	x1, x19
   1f3a4:	ldr	x8, [x8, #32]
   1f3a8:	blr	x8
   1f3ac:	mov	x0, x20
   1f3b0:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f3b4:	mov	w0, w21
   1f3b8:	ldp	x20, x19, [sp, #48]
   1f3bc:	ldp	x22, x21, [sp, #32]
   1f3c0:	ldp	x24, x23, [sp, #16]
   1f3c4:	ldp	x30, x25, [sp], #64
   1f3c8:	ret
   1f3cc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f3d0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f3d4:	add	x0, x0, #0xa9d
   1f3d8:	add	x2, x2, #0xbf1
   1f3dc:	mov	w1, #0x9f                  	// #159
   1f3e0:	mov	x3, x21
   1f3e4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f3e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f3ec:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f3f0:	add	x0, x0, #0xa9d
   1f3f4:	add	x2, x2, #0xc0c
   1f3f8:	mov	w1, #0xa0                  	// #160
   1f3fc:	mov	x4, xzr
   1f400:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f404:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1f408:	ldr	x8, [x8, #4024]
   1f40c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f410:	add	x0, x0, #0xb94
   1f414:	ldr	x1, [x8]
   1f418:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1f41c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   1f420:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f424:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f428:	add	x0, x0, #0xa9d
   1f42c:	add	x2, x2, #0xbc4
   1f430:	mov	w1, #0x9d                  	// #157
   1f434:	mov	x3, xzr
   1f438:	mov	x4, xzr
   1f43c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f440:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f444:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f448:	add	x0, x0, #0xa9d
   1f44c:	add	x2, x2, #0xc38
   1f450:	mov	w1, #0xa4                  	// #164
   1f454:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f458:	ldr	x9, [x0, #184]
   1f45c:	cbz	x9, 1f480 <__sanitizer_on_print@@Base+0x2a30>
   1f460:	mov	x8, x0
   1f464:	ldr	x0, [x0, #192]
   1f468:	ldr	x10, [x0, #128]
   1f46c:	str	x10, [x8, #192]
   1f470:	cbz	x10, 1f488 <__sanitizer_on_print@@Base+0x2a38>
   1f474:	sub	x9, x9, #0x1
   1f478:	str	x9, [x8, #184]
   1f47c:	ret
   1f480:	mov	x0, xzr
   1f484:	ret
   1f488:	str	xzr, [x8, #200]
   1f48c:	sub	x9, x9, #0x1
   1f490:	str	x9, [x8, #184]
   1f494:	ret
   1f498:	str	x30, [sp, #-48]!
   1f49c:	stp	x22, x21, [sp, #16]
   1f4a0:	stp	x20, x19, [sp, #32]
   1f4a4:	mov	x21, x0
   1f4a8:	add	x0, x0, #0x18
   1f4ac:	mov	x19, x2
   1f4b0:	mov	x20, x1
   1f4b4:	bl	1a24c <__sanitizer_set_report_fd@@Base+0x3c08>
   1f4b8:	ldr	w8, [x21, #112]
   1f4bc:	cbz	w8, 1f4f0 <__sanitizer_on_print@@Base+0x2aa0>
   1f4c0:	mov	x22, xzr
   1f4c4:	b	1f4d4 <__sanitizer_on_print@@Base+0x2a84>
   1f4c8:	add	x22, x22, #0x1
   1f4cc:	cmp	x22, w8, uxtw
   1f4d0:	b.cs	1f4f0 <__sanitizer_on_print@@Base+0x2aa0>  // b.hs, b.nlast
   1f4d4:	ldr	x9, [x21, #152]
   1f4d8:	ldr	x0, [x9, x22, lsl #3]
   1f4dc:	cbz	x0, 1f4c8 <__sanitizer_on_print@@Base+0x2a78>
   1f4e0:	mov	x1, x19
   1f4e4:	blr	x20
   1f4e8:	ldr	w8, [x21, #112]
   1f4ec:	b	1f4c8 <__sanitizer_on_print@@Base+0x2a78>
   1f4f0:	ldp	x20, x19, [sp, #32]
   1f4f4:	ldp	x22, x21, [sp, #16]
   1f4f8:	ldr	x30, [sp], #48
   1f4fc:	ret
   1f500:	str	x30, [sp, #-64]!
   1f504:	stp	x24, x23, [sp, #16]
   1f508:	stp	x22, x21, [sp, #32]
   1f50c:	stp	x20, x19, [sp, #48]
   1f510:	add	x19, x0, #0x18
   1f514:	mov	x22, x0
   1f518:	mov	x0, x19
   1f51c:	mov	x20, x2
   1f520:	mov	x21, x1
   1f524:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f528:	ldr	w8, [x22, #112]
   1f52c:	cbz	w8, 1f568 <__sanitizer_on_print@@Base+0x2b18>
   1f530:	mov	x24, xzr
   1f534:	b	1f544 <__sanitizer_on_print@@Base+0x2af4>
   1f538:	add	x24, x24, #0x1
   1f53c:	cmp	x24, w8, uxtw
   1f540:	b.cs	1f568 <__sanitizer_on_print@@Base+0x2b18>  // b.hs, b.nlast
   1f544:	ldr	x9, [x22, #152]
   1f548:	ldr	x23, [x9, x24, lsl #3]
   1f54c:	cbz	x23, 1f538 <__sanitizer_on_print@@Base+0x2ae8>
   1f550:	mov	x0, x23
   1f554:	mov	x1, x20
   1f558:	blr	x21
   1f55c:	tbnz	w0, #0, 1f570 <__sanitizer_on_print@@Base+0x2b20>
   1f560:	ldr	w8, [x22, #112]
   1f564:	b	1f538 <__sanitizer_on_print@@Base+0x2ae8>
   1f568:	mov	w20, #0xffffffff            	// #-1
   1f56c:	b	1f574 <__sanitizer_on_print@@Base+0x2b24>
   1f570:	ldr	w20, [x23, #8]
   1f574:	mov	x0, x19
   1f578:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f57c:	mov	w0, w20
   1f580:	ldp	x20, x19, [sp, #48]
   1f584:	ldp	x22, x21, [sp, #32]
   1f588:	ldp	x24, x23, [sp, #16]
   1f58c:	ldr	x30, [sp], #64
   1f590:	ret
   1f594:	stp	x30, x23, [sp, #-48]!
   1f598:	stp	x22, x21, [sp, #16]
   1f59c:	stp	x20, x19, [sp, #32]
   1f5a0:	mov	x21, x0
   1f5a4:	add	x0, x0, #0x18
   1f5a8:	mov	x19, x2
   1f5ac:	mov	x20, x1
   1f5b0:	bl	1a24c <__sanitizer_set_report_fd@@Base+0x3c08>
   1f5b4:	ldr	w8, [x21, #112]
   1f5b8:	cbz	w8, 1f5f4 <__sanitizer_on_print@@Base+0x2ba4>
   1f5bc:	mov	x23, xzr
   1f5c0:	b	1f5d4 <__sanitizer_on_print@@Base+0x2b84>
   1f5c4:	ldr	w8, [x21, #112]
   1f5c8:	add	x23, x23, #0x1
   1f5cc:	cmp	x23, w8, uxtw
   1f5d0:	b.cs	1f5f4 <__sanitizer_on_print@@Base+0x2ba4>  // b.hs, b.nlast
   1f5d4:	ldr	x9, [x21, #152]
   1f5d8:	ldr	x22, [x9, x23, lsl #3]
   1f5dc:	cbz	x22, 1f5c8 <__sanitizer_on_print@@Base+0x2b78>
   1f5e0:	mov	x0, x22
   1f5e4:	mov	x1, x19
   1f5e8:	blr	x20
   1f5ec:	tbz	w0, #0, 1f5c4 <__sanitizer_on_print@@Base+0x2b74>
   1f5f0:	b	1f5f8 <__sanitizer_on_print@@Base+0x2ba8>
   1f5f4:	mov	x22, xzr
   1f5f8:	mov	x0, x22
   1f5fc:	ldp	x20, x19, [sp, #32]
   1f600:	ldp	x22, x21, [sp, #16]
   1f604:	ldp	x30, x23, [sp], #48
   1f608:	ret
   1f60c:	str	x30, [sp, #-32]!
   1f610:	stp	x20, x19, [sp, #16]
   1f614:	mov	x20, x0
   1f618:	add	x0, x0, #0x18
   1f61c:	mov	x19, x1
   1f620:	bl	1a24c <__sanitizer_set_report_fd@@Base+0x3c08>
   1f624:	ldr	w8, [x20, #112]
   1f628:	cbz	w8, 1f66c <__sanitizer_on_print@@Base+0x2c1c>
   1f62c:	ldr	x9, [x20, #152]
   1f630:	b	1f640 <__sanitizer_on_print@@Base+0x2bf0>
   1f634:	subs	x8, x8, #0x1
   1f638:	add	x9, x9, #0x8
   1f63c:	b.eq	1f66c <__sanitizer_on_print@@Base+0x2c1c>  // b.none
   1f640:	ldr	x0, [x9]
   1f644:	cbz	x0, 1f634 <__sanitizer_on_print@@Base+0x2be4>
   1f648:	ldr	x10, [x0, #32]
   1f64c:	cmp	x10, x19
   1f650:	b.ne	1f634 <__sanitizer_on_print@@Base+0x2be4>  // b.any
   1f654:	ldr	w10, [x0, #112]
   1f658:	tst	w10, #0xfffffffb
   1f65c:	b.eq	1f634 <__sanitizer_on_print@@Base+0x2be4>  // b.none
   1f660:	ldp	x20, x19, [sp, #16]
   1f664:	ldr	x30, [sp], #32
   1f668:	ret
   1f66c:	mov	x0, xzr
   1f670:	ldp	x20, x19, [sp, #16]
   1f674:	ldr	x30, [sp], #32
   1f678:	ret
   1f67c:	str	x30, [sp, #-48]!
   1f680:	stp	x22, x21, [sp, #16]
   1f684:	stp	x20, x19, [sp, #32]
   1f688:	add	x19, x0, #0x18
   1f68c:	mov	x21, x0
   1f690:	mov	x0, x19
   1f694:	mov	x20, x2
   1f698:	mov	w22, w1
   1f69c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f6a0:	ldr	w4, [x21, #112]
   1f6a4:	mov	w3, w22
   1f6a8:	cmp	w4, w22
   1f6ac:	b.ls	1f6f8 <__sanitizer_on_print@@Base+0x2ca8>  // b.plast
   1f6b0:	ldr	x8, [x21, #152]
   1f6b4:	ldr	x21, [x8, x3, lsl #3]
   1f6b8:	cbz	x21, 1f710 <__sanitizer_on_print@@Base+0x2cc0>
   1f6bc:	ldr	w4, [x21, #112]
   1f6c0:	cmp	w4, #0x2
   1f6c4:	b.ne	1f730 <__sanitizer_on_print@@Base+0x2ce0>  // b.any
   1f6c8:	mov	x0, x21
   1f6cc:	strb	wzr, [x0, #48]!
   1f6d0:	cbz	x20, 1f6e4 <__sanitizer_on_print@@Base+0x2c94>
   1f6d4:	mov	w2, #0x40                  	// #64
   1f6d8:	mov	x1, x20
   1f6dc:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   1f6e0:	strb	wzr, [x21, #111]
   1f6e4:	mov	x0, x19
   1f6e8:	ldp	x20, x19, [sp, #32]
   1f6ec:	ldp	x22, x21, [sp, #16]
   1f6f0:	ldr	x30, [sp], #48
   1f6f4:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f6f8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f6fc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f700:	add	x0, x0, #0xa9d
   1f704:	add	x2, x2, #0xc65
   1f708:	mov	w1, #0xd8                  	// #216
   1f70c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f710:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f714:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f718:	add	x0, x0, #0xa9d
   1f71c:	add	x2, x2, #0xbc4
   1f720:	mov	w1, #0xda                  	// #218
   1f724:	mov	x3, xzr
   1f728:	mov	x4, xzr
   1f72c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f730:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f734:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f738:	add	x0, x0, #0xa9d
   1f73c:	add	x2, x2, #0xc7f
   1f740:	mov	w1, #0xdc                  	// #220
   1f744:	mov	w3, #0x2                   	// #2
   1f748:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f74c:	str	x30, [sp, #-48]!
   1f750:	stp	x22, x21, [sp, #16]
   1f754:	stp	x20, x19, [sp, #32]
   1f758:	add	x19, x0, #0x18
   1f75c:	mov	x22, x0
   1f760:	mov	x0, x19
   1f764:	mov	x20, x2
   1f768:	mov	x21, x1
   1f76c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f770:	ldr	w8, [x22, #112]
   1f774:	cbz	w8, 1f7c8 <__sanitizer_on_print@@Base+0x2d78>
   1f778:	ldr	x9, [x22, #152]
   1f77c:	mov	x10, xzr
   1f780:	b	1f790 <__sanitizer_on_print@@Base+0x2d40>
   1f784:	add	x10, x10, #0x1
   1f788:	cmp	x10, x8
   1f78c:	b.cs	1f7c8 <__sanitizer_on_print@@Base+0x2d78>  // b.hs, b.nlast
   1f790:	ldr	x22, [x9, x10, lsl #3]
   1f794:	cbz	x22, 1f784 <__sanitizer_on_print@@Base+0x2d34>
   1f798:	ldr	x11, [x22, #40]
   1f79c:	cmp	x11, x21
   1f7a0:	b.ne	1f784 <__sanitizer_on_print@@Base+0x2d34>  // b.any
   1f7a4:	ldr	w11, [x22, #112]
   1f7a8:	cbz	w11, 1f784 <__sanitizer_on_print@@Base+0x2d34>
   1f7ac:	mov	x0, x22
   1f7b0:	strb	wzr, [x0, #48]!
   1f7b4:	cbz	x20, 1f7c8 <__sanitizer_on_print@@Base+0x2d78>
   1f7b8:	mov	w2, #0x40                  	// #64
   1f7bc:	mov	x1, x20
   1f7c0:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   1f7c4:	strb	wzr, [x22, #111]
   1f7c8:	mov	x0, x19
   1f7cc:	ldp	x20, x19, [sp, #32]
   1f7d0:	ldp	x22, x21, [sp, #16]
   1f7d4:	ldr	x30, [sp], #48
   1f7d8:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f7dc:	str	x30, [sp, #-48]!
   1f7e0:	stp	x22, x21, [sp, #16]
   1f7e4:	stp	x20, x19, [sp, #32]
   1f7e8:	add	x19, x0, #0x18
   1f7ec:	mov	x20, x0
   1f7f0:	mov	x0, x19
   1f7f4:	mov	x22, x2
   1f7f8:	mov	w21, w1
   1f7fc:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1f800:	ldr	w4, [x20, #112]
   1f804:	mov	w3, w21
   1f808:	cmp	w4, w21
   1f80c:	b.ls	1f8a8 <__sanitizer_on_print@@Base+0x2e58>  // b.plast
   1f810:	ldr	x8, [x20, #152]
   1f814:	ldr	x21, [x8, x3, lsl #3]
   1f818:	cbz	x21, 1f8c0 <__sanitizer_on_print@@Base+0x2e70>
   1f81c:	ldr	w8, [x21, #112]
   1f820:	cbz	w8, 1f870 <__sanitizer_on_print@@Base+0x2e20>
   1f824:	ldr	x8, [x21]
   1f828:	mov	x0, x21
   1f82c:	mov	x1, x22
   1f830:	ldr	x8, [x8, #48]
   1f834:	blr	x8
   1f838:	ldr	w8, [x21, #112]
   1f83c:	cmp	w8, #0x3
   1f840:	b.ne	1f88c <__sanitizer_on_print@@Base+0x2e3c>  // b.any
   1f844:	ldr	x8, [x21]
   1f848:	mov	w9, #0x4                   	// #4
   1f84c:	str	w9, [x21, #112]
   1f850:	str	xzr, [x21, #40]
   1f854:	ldr	x8, [x8]
   1f858:	mov	x0, x21
   1f85c:	blr	x8
   1f860:	mov	x0, x20
   1f864:	mov	x1, x21
   1f868:	bl	1f8e0 <__sanitizer_on_print@@Base+0x2e90>
   1f86c:	b	1f894 <__sanitizer_on_print@@Base+0x2e44>
   1f870:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1f874:	ldr	x8, [x8, #4024]
   1f878:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f87c:	add	x0, x0, #0xcc5
   1f880:	ldr	x1, [x8]
   1f884:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1f888:	b	1f894 <__sanitizer_on_print@@Base+0x2e44>
   1f88c:	mov	w8, #0x1                   	// #1
   1f890:	strb	w8, [x21, #116]
   1f894:	mov	x0, x19
   1f898:	ldp	x20, x19, [sp, #32]
   1f89c:	ldp	x22, x21, [sp, #16]
   1f8a0:	ldr	x30, [sp], #48
   1f8a4:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1f8a8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f8ac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f8b0:	add	x0, x0, #0xa9d
   1f8b4:	add	x2, x2, #0xc65
   1f8b8:	mov	w1, #0xee                  	// #238
   1f8bc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f8c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f8c4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f8c8:	add	x0, x0, #0xa9d
   1f8cc:	add	x2, x2, #0xbc4
   1f8d0:	mov	w1, #0xf0                  	// #240
   1f8d4:	mov	x3, xzr
   1f8d8:	mov	x4, xzr
   1f8dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1f8e0:	str	x30, [sp, #-32]!
   1f8e4:	stp	x20, x19, [sp, #16]
   1f8e8:	ldr	w8, [x1, #8]
   1f8ec:	cbz	w8, 1f920 <__sanitizer_on_print@@Base+0x2ed0>
   1f8f0:	ldr	x8, [x0, #160]
   1f8f4:	mov	x19, x0
   1f8f8:	str	xzr, [x1, #128]
   1f8fc:	cbz	x8, 1f92c <__sanitizer_on_print@@Base+0x2edc>
   1f900:	ldr	x9, [x19, #176]
   1f904:	add	x8, x8, #0x1
   1f908:	str	x1, [x9, #128]
   1f90c:	str	x1, [x19, #176]
   1f910:	ldr	w9, [x19, #12]
   1f914:	str	x8, [x19, #160]
   1f918:	cmp	x8, x9
   1f91c:	b.hi	1f944 <__sanitizer_on_print@@Base+0x2ef4>  // b.pmore
   1f920:	ldp	x20, x19, [sp, #16]
   1f924:	ldr	x30, [sp], #32
   1f928:	ret
   1f92c:	stp	x1, x1, [x19, #168]
   1f930:	mov	w8, #0x1                   	// #1
   1f934:	ldr	w9, [x19, #12]
   1f938:	str	x8, [x19, #160]
   1f93c:	cmp	x8, x9
   1f940:	b.ls	1f920 <__sanitizer_on_print@@Base+0x2ed0>  // b.plast
   1f944:	ldr	x20, [x19, #168]
   1f948:	ldr	x9, [x20, #128]
   1f94c:	str	x9, [x19, #168]
   1f950:	cbnz	x9, 1f958 <__sanitizer_on_print@@Base+0x2f08>
   1f954:	str	xzr, [x19, #176]
   1f958:	sub	x8, x8, #0x1
   1f95c:	str	x8, [x19, #160]
   1f960:	ldr	w3, [x20, #112]
   1f964:	cmp	w3, #0x4
   1f968:	b.ne	1f9ec <__sanitizer_on_print@@Base+0x2f9c>  // b.any
   1f96c:	str	wzr, [x20, #112]
   1f970:	strb	wzr, [x20, #48]
   1f974:	dmb	ish
   1f978:	str	wzr, [x20, #136]
   1f97c:	ldr	x8, [x20]
   1f980:	mov	x0, x20
   1f984:	ldr	x8, [x8, #40]
   1f988:	blr	x8
   1f98c:	ldr	w8, [x20, #24]
   1f990:	add	w8, w8, #0x1
   1f994:	str	w8, [x20, #24]
   1f998:	ldr	w9, [x19, #16]
   1f99c:	sub	w9, w9, #0x1
   1f9a0:	cmp	w9, w8
   1f9a4:	b.cc	1f920 <__sanitizer_on_print@@Base+0x2ed0>  // b.lo, b.ul, b.last
   1f9a8:	ldr	x8, [x19, #184]
   1f9ac:	str	xzr, [x20, #128]
   1f9b0:	cbz	x8, 1f9d4 <__sanitizer_on_print@@Base+0x2f84>
   1f9b4:	ldr	x9, [x19, #200]
   1f9b8:	add	x8, x8, #0x1
   1f9bc:	str	x20, [x9, #128]
   1f9c0:	str	x20, [x19, #200]
   1f9c4:	str	x8, [x19, #184]
   1f9c8:	ldp	x20, x19, [sp, #16]
   1f9cc:	ldr	x30, [sp], #32
   1f9d0:	ret
   1f9d4:	stp	x20, x20, [x19, #192]
   1f9d8:	mov	w8, #0x1                   	// #1
   1f9dc:	str	x8, [x19, #184]
   1f9e0:	ldp	x20, x19, [sp, #16]
   1f9e4:	ldr	x30, [sp], #32
   1f9e8:	ret
   1f9ec:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f9f0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1f9f4:	add	x0, x0, #0xa9d
   1f9f8:	add	x2, x2, #0xd99
   1f9fc:	mov	w1, #0x144                 	// #324
   1fa00:	mov	w4, #0x4                   	// #4
   1fa04:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fa08:	str	x30, [sp, #-64]!
   1fa0c:	stp	x24, x23, [sp, #16]
   1fa10:	stp	x22, x21, [sp, #32]
   1fa14:	stp	x20, x19, [sp, #48]
   1fa18:	add	x19, x0, #0x18
   1fa1c:	mov	x20, x0
   1fa20:	mov	x0, x19
   1fa24:	mov	x21, x2
   1fa28:	mov	w23, w1
   1fa2c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1fa30:	ldr	w8, [x20, #112]
   1fa34:	mov	w22, w23
   1fa38:	cmp	w8, w23
   1fa3c:	b.ls	1fa80 <__sanitizer_on_print@@Base+0x3030>  // b.plast
   1fa40:	ldr	x8, [x20, #152]
   1fa44:	ldr	x24, [x8, x22, lsl #3]
   1fa48:	cbz	x24, 1fb14 <__sanitizer_on_print@@Base+0x30c4>
   1fa4c:	ldr	w8, [x24, #112]
   1fa50:	cbz	w8, 1faa0 <__sanitizer_on_print@@Base+0x3050>
   1fa54:	ldr	w8, [x24, #136]
   1fa58:	dmb	ish
   1fa5c:	cbnz	w8, 1fabc <__sanitizer_on_print@@Base+0x306c>
   1fa60:	mov	x0, x19
   1fa64:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1fa68:	bl	19c08 <__sanitizer_set_report_fd@@Base+0x35c4>
   1fa6c:	mov	x0, x19
   1fa70:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1fa74:	ldr	w8, [x20, #112]
   1fa78:	cmp	w8, w23
   1fa7c:	b.hi	1fa40 <__sanitizer_on_print@@Base+0x2ff0>  // b.pmore
   1fa80:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fa84:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fa88:	mov	w4, w8
   1fa8c:	add	x0, x0, #0xa9d
   1fa90:	add	x2, x2, #0xc65
   1fa94:	mov	w1, #0x103                 	// #259
   1fa98:	mov	x3, x22
   1fa9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1faa0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   1faa4:	ldr	x8, [x8, #4024]
   1faa8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1faac:	add	x0, x0, #0xce8
   1fab0:	ldr	x1, [x8]
   1fab4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   1fab8:	b	1fafc <__sanitizer_on_print@@Base+0x30ac>
   1fabc:	ldrb	w4, [x24, #116]
   1fac0:	cbnz	x4, 1fb34 <__sanitizer_on_print@@Base+0x30e4>
   1fac4:	ldr	w4, [x24, #112]
   1fac8:	cmp	w4, #0x3
   1facc:	b.ne	1fb50 <__sanitizer_on_print@@Base+0x3100>  // b.any
   1fad0:	ldr	x8, [x24]
   1fad4:	mov	w9, #0x4                   	// #4
   1fad8:	str	w9, [x24, #112]
   1fadc:	str	xzr, [x24, #40]
   1fae0:	ldr	x8, [x8, #8]
   1fae4:	mov	x0, x24
   1fae8:	mov	x1, x21
   1faec:	blr	x8
   1faf0:	mov	x0, x20
   1faf4:	mov	x1, x24
   1faf8:	bl	1f8e0 <__sanitizer_on_print@@Base+0x2e90>
   1fafc:	mov	x0, x19
   1fb00:	ldp	x20, x19, [sp, #48]
   1fb04:	ldp	x22, x21, [sp, #32]
   1fb08:	ldp	x24, x23, [sp, #16]
   1fb0c:	ldr	x30, [sp], #64
   1fb10:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1fb14:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb18:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb1c:	add	x0, x0, #0xa9d
   1fb20:	add	x2, x2, #0xbc4
   1fb24:	mov	w1, #0x105                 	// #261
   1fb28:	mov	x3, xzr
   1fb2c:	mov	x4, xzr
   1fb30:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fb34:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb38:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb3c:	add	x0, x0, #0xa9d
   1fb40:	add	x2, x2, #0xb44
   1fb44:	mov	w1, #0x39                  	// #57
   1fb48:	mov	x3, xzr
   1fb4c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fb50:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb54:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fb58:	add	x0, x0, #0xa9d
   1fb5c:	add	x2, x2, #0xb5e
   1fb60:	mov	w1, #0x3a                  	// #58
   1fb64:	mov	w3, #0x3                   	// #3
   1fb68:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fb6c:	stp	x30, x21, [sp, #-32]!
   1fb70:	stp	x20, x19, [sp, #16]
   1fb74:	add	x19, x0, #0x18
   1fb78:	mov	x20, x0
   1fb7c:	mov	x0, x19
   1fb80:	mov	w21, w1
   1fb84:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1fb88:	ldr	x8, [x20, #128]
   1fb8c:	cbz	x8, 1fc70 <__sanitizer_on_print@@Base+0x3220>
   1fb90:	ldr	w4, [x20, #112]
   1fb94:	sub	x8, x8, #0x1
   1fb98:	mov	w3, w21
   1fb9c:	str	x8, [x20, #128]
   1fba0:	cmp	w4, w21
   1fba4:	b.ls	1fc88 <__sanitizer_on_print@@Base+0x3238>  // b.plast
   1fba8:	ldr	x8, [x20, #152]
   1fbac:	ldr	x21, [x8, x3, lsl #3]
   1fbb0:	cbz	x21, 1fca0 <__sanitizer_on_print@@Base+0x3250>
   1fbb4:	ldr	w3, [x21, #112]
   1fbb8:	cmp	w3, #0x2
   1fbbc:	b.ne	1fbe0 <__sanitizer_on_print@@Base+0x3190>  // b.any
   1fbc0:	ldr	x8, [x20, #144]
   1fbc4:	cbz	x8, 1fcec <__sanitizer_on_print@@Base+0x329c>
   1fbc8:	ldrb	w9, [x21, #116]
   1fbcc:	sub	x8, x8, #0x1
   1fbd0:	str	x8, [x20, #144]
   1fbd4:	cbz	w9, 1fc54 <__sanitizer_on_print@@Base+0x3204>
   1fbd8:	ldr	x8, [x21]
   1fbdc:	b	1fbf4 <__sanitizer_on_print@@Base+0x31a4>
   1fbe0:	cmp	w3, #0x1
   1fbe4:	b.ne	1fcb8 <__sanitizer_on_print@@Base+0x3268>  // b.any
   1fbe8:	ldr	x8, [x21]
   1fbec:	mov	w9, #0x3                   	// #3
   1fbf0:	str	w9, [x21, #112]
   1fbf4:	ldr	x8, [x8, #16]
   1fbf8:	mov	x0, x21
   1fbfc:	blr	x8
   1fc00:	ldr	w8, [x21, #112]
   1fc04:	orr	w8, w8, #0x1
   1fc08:	cmp	w8, #0x3
   1fc0c:	b.ne	1fcd4 <__sanitizer_on_print@@Base+0x3284>  // b.any
   1fc10:	ldr	x8, [x21]
   1fc14:	mov	w9, #0x4                   	// #4
   1fc18:	str	w9, [x21, #112]
   1fc1c:	str	xzr, [x21, #40]
   1fc20:	ldr	x8, [x8]
   1fc24:	mov	x0, x21
   1fc28:	blr	x8
   1fc2c:	mov	x0, x20
   1fc30:	mov	x1, x21
   1fc34:	bl	1f8e0 <__sanitizer_on_print@@Base+0x2e90>
   1fc38:	mov	w8, #0x1                   	// #1
   1fc3c:	dmb	ish
   1fc40:	str	w8, [x21, #136]
   1fc44:	mov	x0, x19
   1fc48:	ldp	x20, x19, [sp, #16]
   1fc4c:	ldp	x30, x21, [sp], #32
   1fc50:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1fc54:	ldr	x8, [x21]
   1fc58:	mov	w9, #0x3                   	// #3
   1fc5c:	str	w9, [x21, #112]
   1fc60:	mov	x0, x21
   1fc64:	ldr	x8, [x8, #16]
   1fc68:	blr	x8
   1fc6c:	b	1fc38 <__sanitizer_on_print@@Base+0x31e8>
   1fc70:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fc74:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fc78:	add	x0, x0, #0xa9d
   1fc7c:	add	x2, x2, #0xd09
   1fc80:	mov	w1, #0x11b                 	// #283
   1fc84:	b	1fd00 <__sanitizer_on_print@@Base+0x32b0>
   1fc88:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fc8c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fc90:	add	x0, x0, #0xa9d
   1fc94:	add	x2, x2, #0xc65
   1fc98:	mov	w1, #0x11d                 	// #285
   1fc9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fca0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fca4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fca8:	add	x0, x0, #0xa9d
   1fcac:	add	x2, x2, #0xbc4
   1fcb0:	mov	w1, #0x11f                 	// #287
   1fcb4:	b	1fd00 <__sanitizer_on_print@@Base+0x32b0>
   1fcb8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcbc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcc0:	add	x0, x0, #0xa9d
   1fcc4:	add	x2, x2, #0xd41
   1fcc8:	mov	w1, #0x126                 	// #294
   1fccc:	mov	w4, #0x1                   	// #1
   1fcd0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fcd4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcd8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcdc:	add	x0, x0, #0xa9d
   1fce0:	add	x2, x2, #0xaf9
   1fce4:	mov	w1, #0x29                  	// #41
   1fce8:	b	1fd00 <__sanitizer_on_print@@Base+0x32b0>
   1fcec:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcf0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fcf4:	add	x0, x0, #0xa9d
   1fcf8:	add	x2, x2, #0xd24
   1fcfc:	mov	w1, #0x122                 	// #290
   1fd00:	mov	x3, xzr
   1fd04:	mov	x4, xzr
   1fd08:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fd0c:	str	x30, [sp, #-64]!
   1fd10:	stp	x24, x23, [sp, #16]
   1fd14:	stp	x22, x21, [sp, #32]
   1fd18:	stp	x20, x19, [sp, #48]
   1fd1c:	add	x20, x0, #0x18
   1fd20:	mov	x23, x0
   1fd24:	mov	x0, x20
   1fd28:	mov	x19, x4
   1fd2c:	mov	w21, w3
   1fd30:	mov	x22, x2
   1fd34:	mov	w24, w1
   1fd38:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1fd3c:	ldr	x8, [x23, #144]
   1fd40:	ldr	w4, [x23, #112]
   1fd44:	mov	w3, w24
   1fd48:	add	x8, x8, #0x1
   1fd4c:	cmp	w4, w24
   1fd50:	str	x8, [x23, #144]
   1fd54:	b.ls	1fda8 <__sanitizer_on_print@@Base+0x3358>  // b.plast
   1fd58:	ldr	x8, [x23, #152]
   1fd5c:	ldr	x0, [x8, x3, lsl #3]
   1fd60:	cbz	x0, 1fdc0 <__sanitizer_on_print@@Base+0x3370>
   1fd64:	ldr	w4, [x0, #112]
   1fd68:	cmp	w4, #0x1
   1fd6c:	b.ne	1fde0 <__sanitizer_on_print@@Base+0x3390>  // b.any
   1fd70:	ldr	x9, [x0]
   1fd74:	mov	w8, #0x2                   	// #2
   1fd78:	str	w8, [x0, #112]
   1fd7c:	str	x22, [x0, #32]
   1fd80:	str	w21, [x0, #120]
   1fd84:	ldr	x8, [x9, #24]
   1fd88:	mov	x1, x19
   1fd8c:	blr	x8
   1fd90:	mov	x0, x20
   1fd94:	ldp	x20, x19, [sp, #48]
   1fd98:	ldp	x22, x21, [sp, #32]
   1fd9c:	ldp	x24, x23, [sp, #16]
   1fda0:	ldr	x30, [sp], #64
   1fda4:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1fda8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fdac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fdb0:	add	x0, x0, #0xa9d
   1fdb4:	add	x2, x2, #0xc65
   1fdb8:	mov	w1, #0x135                 	// #309
   1fdbc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fdc0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fdc4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fdc8:	add	x0, x0, #0xa9d
   1fdcc:	add	x2, x2, #0xbc4
   1fdd0:	mov	w1, #0x137                 	// #311
   1fdd4:	mov	x3, xzr
   1fdd8:	mov	x4, xzr
   1fddc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fde0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fde4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fde8:	add	x0, x0, #0xa9d
   1fdec:	add	x2, x2, #0xd6d
   1fdf0:	mov	w1, #0x138                 	// #312
   1fdf4:	mov	w3, #0x1                   	// #1
   1fdf8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fdfc:	str	x30, [sp, #-48]!
   1fe00:	stp	x22, x21, [sp, #16]
   1fe04:	stp	x20, x19, [sp, #32]
   1fe08:	add	x20, x0, #0x18
   1fe0c:	mov	x21, x0
   1fe10:	mov	x0, x20
   1fe14:	mov	x19, x2
   1fe18:	mov	w22, w1
   1fe1c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   1fe20:	ldr	w4, [x21, #112]
   1fe24:	mov	w3, w22
   1fe28:	cmp	w4, w22
   1fe2c:	b.ls	1fe6c <__sanitizer_on_print@@Base+0x341c>  // b.plast
   1fe30:	ldr	x8, [x21, #152]
   1fe34:	ldr	x8, [x8, x3, lsl #3]
   1fe38:	cbz	x8, 1fe84 <__sanitizer_on_print@@Base+0x3434>
   1fe3c:	ldr	w3, [x8, #112]
   1fe40:	cmp	w3, #0x4
   1fe44:	b.eq	1fea4 <__sanitizer_on_print@@Base+0x3454>  // b.none
   1fe48:	cbz	w3, 1fec0 <__sanitizer_on_print@@Base+0x3470>
   1fe4c:	ldr	x3, [x8, #40]
   1fe50:	cbnz	x3, 1fedc <__sanitizer_on_print@@Base+0x348c>
   1fe54:	str	x19, [x8, #40]
   1fe58:	mov	x0, x20
   1fe5c:	ldp	x20, x19, [sp, #32]
   1fe60:	ldp	x22, x21, [sp, #16]
   1fe64:	ldr	x30, [sp], #48
   1fe68:	b	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   1fe6c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fe70:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fe74:	add	x0, x0, #0xa9d
   1fe78:	add	x2, x2, #0xc65
   1fe7c:	mov	w1, #0x156                 	// #342
   1fe80:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fe84:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fe88:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fe8c:	add	x0, x0, #0xa9d
   1fe90:	add	x2, x2, #0xbc4
   1fe94:	mov	w1, #0x158                 	// #344
   1fe98:	mov	x3, xzr
   1fe9c:	mov	x4, xzr
   1fea0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fea4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fea8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1feac:	add	x0, x0, #0xa9d
   1feb0:	add	x2, x2, #0xdee
   1feb4:	mov	w1, #0x15a                 	// #346
   1feb8:	mov	w4, #0x4                   	// #4
   1febc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fec0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fec4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fec8:	add	x0, x0, #0xa9d
   1fecc:	add	x2, x2, #0xdc2
   1fed0:	mov	w1, #0x159                 	// #345
   1fed4:	mov	x4, xzr
   1fed8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fedc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fee0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   1fee4:	add	x0, x0, #0xa9d
   1fee8:	add	x2, x2, #0xe17
   1feec:	mov	w1, #0x15b                 	// #347
   1fef0:	mov	x4, xzr
   1fef4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   1fef8:	ret
   1fefc:	ret
   1ff00:	ret
   1ff04:	ret
   1ff08:	ret
   1ff0c:	ret
   1ff10:	ret
   1ff14:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff18:	add	x8, x8, #0x6c8
   1ff1c:	ldr	x9, [x8]
   1ff20:	cbz	x9, 1ff6c <__sanitizer_on_print@@Base+0x351c>
   1ff24:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff28:	add	x8, x8, #0x6d0
   1ff2c:	ldr	x9, [x8]
   1ff30:	cbz	x9, 1ff6c <__sanitizer_on_print@@Base+0x351c>
   1ff34:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff38:	add	x8, x8, #0x6d8
   1ff3c:	ldr	x9, [x8]
   1ff40:	cbz	x9, 1ff6c <__sanitizer_on_print@@Base+0x351c>
   1ff44:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff48:	add	x8, x8, #0x6e0
   1ff4c:	ldr	x9, [x8]
   1ff50:	cbz	x9, 1ff6c <__sanitizer_on_print@@Base+0x351c>
   1ff54:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff58:	add	x8, x8, #0x6e8
   1ff5c:	ldr	x9, [x8]
   1ff60:	cbz	x9, 1ff6c <__sanitizer_on_print@@Base+0x351c>
   1ff64:	mov	w0, wzr
   1ff68:	ret
   1ff6c:	str	x0, [x8]
   1ff70:	mov	w0, #0x1                   	// #1
   1ff74:	ret
   1ff78:	stp	x30, x19, [sp, #-16]!
   1ff7c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff80:	add	x8, x8, #0x6c8
   1ff84:	ldr	x9, [x8]
   1ff88:	cmp	x9, x0
   1ff8c:	b.eq	1ffec <__sanitizer_on_print@@Base+0x359c>  // b.none
   1ff90:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ff94:	add	x8, x8, #0x6d0
   1ff98:	ldr	x9, [x8]
   1ff9c:	cmp	x9, x0
   1ffa0:	b.eq	1fff4 <__sanitizer_on_print@@Base+0x35a4>  // b.none
   1ffa4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ffa8:	add	x8, x8, #0x6d8
   1ffac:	ldr	x9, [x8]
   1ffb0:	cmp	x9, x0
   1ffb4:	b.eq	1fffc <__sanitizer_on_print@@Base+0x35ac>  // b.none
   1ffb8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ffbc:	add	x8, x8, #0x6e0
   1ffc0:	ldr	x9, [x8]
   1ffc4:	cmp	x9, x0
   1ffc8:	b.eq	20004 <__sanitizer_on_print@@Base+0x35b4>  // b.none
   1ffcc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   1ffd0:	add	x8, x8, #0x6e8
   1ffd4:	ldr	x9, [x8]
   1ffd8:	cmp	x9, x0
   1ffdc:	b.eq	2000c <__sanitizer_on_print@@Base+0x35bc>  // b.none
   1ffe0:	mov	w0, wzr
   1ffe4:	ldp	x30, x19, [sp], #16
   1ffe8:	ret
   1ffec:	mov	w9, wzr
   1fff0:	b	20010 <__sanitizer_on_print@@Base+0x35c0>
   1fff4:	mov	w9, #0x1                   	// #1
   1fff8:	b	20010 <__sanitizer_on_print@@Base+0x35c0>
   1fffc:	mov	w9, #0x2                   	// #2
   20000:	b	20010 <__sanitizer_on_print@@Base+0x35c0>
   20004:	mov	w9, #0x3                   	// #3
   20008:	b	20010 <__sanitizer_on_print@@Base+0x35c0>
   2000c:	mov	w9, #0x4                   	// #4
   20010:	adrp	x19, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20014:	add	w10, w9, #0x1
   20018:	add	x19, x19, #0x6b0
   2001c:	mov	w11, #0x4                   	// #4
   20020:	add	x10, x19, w10, uxtw #3
   20024:	sub	w9, w11, w9
   20028:	add	x1, x10, #0x18
   2002c:	sbfiz	x2, x9, #3, #32
   20030:	mov	x0, x8
   20034:	bl	18a14 <__sanitizer_set_report_fd@@Base+0x23d0>
   20038:	str	xzr, [x19, #56]
   2003c:	mov	w0, #0x1                   	// #1
   20040:	ldp	x30, x19, [sp], #16
   20044:	ret
   20048:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2004c:	str	x0, [x8, #1720]
   20050:	ret
   20054:	str	x30, [sp, #-16]!
   20058:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2005c:	ldr	x8, [x8, #1720]
   20060:	cbnz	x8, 200b8 <__sanitizer_on_print@@Base+0x3668>
   20064:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20068:	ldr	x8, [x8, #1768]
   2006c:	cbnz	x8, 200c8 <__sanitizer_on_print@@Base+0x3678>
   20070:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20074:	ldr	x8, [x8, #1760]
   20078:	cbnz	x8, 200d8 <__sanitizer_on_print@@Base+0x3688>
   2007c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20080:	ldr	x8, [x8, #1752]
   20084:	cbnz	x8, 200e8 <__sanitizer_on_print@@Base+0x3698>
   20088:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2008c:	ldr	x8, [x8, #1744]
   20090:	cbnz	x8, 200f8 <__sanitizer_on_print@@Base+0x36a8>
   20094:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20098:	ldr	x8, [x8, #1736]
   2009c:	cbnz	x8, 20108 <__sanitizer_on_print@@Base+0x36b8>
   200a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   200a4:	ldr	x8, [x8, #4056]
   200a8:	ldrb	w9, [x8, #228]
   200ac:	cbnz	w9, 2011c <__sanitizer_on_print@@Base+0x36cc>
   200b0:	ldr	w0, [x8, #224]
   200b4:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>
   200b8:	blr	x8
   200bc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   200c0:	ldr	x8, [x8, #1768]
   200c4:	cbz	x8, 20070 <__sanitizer_on_print@@Base+0x3620>
   200c8:	blr	x8
   200cc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   200d0:	ldr	x8, [x8, #1760]
   200d4:	cbz	x8, 2007c <__sanitizer_on_print@@Base+0x362c>
   200d8:	blr	x8
   200dc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   200e0:	ldr	x8, [x8, #1752]
   200e4:	cbz	x8, 20088 <__sanitizer_on_print@@Base+0x3638>
   200e8:	blr	x8
   200ec:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   200f0:	ldr	x8, [x8, #1744]
   200f4:	cbz	x8, 20094 <__sanitizer_on_print@@Base+0x3644>
   200f8:	blr	x8
   200fc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20100:	ldr	x8, [x8, #1736]
   20104:	cbz	x8, 200a0 <__sanitizer_on_print@@Base+0x3650>
   20108:	blr	x8
   2010c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20110:	ldr	x8, [x8, #4056]
   20114:	ldrb	w9, [x8, #228]
   20118:	cbz	w9, 200b0 <__sanitizer_on_print@@Base+0x3660>
   2011c:	bl	213f8 <__sanitizer_sandbox_on_notify@@Base+0xd78>
   20120:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20124:	str	x0, [x8, #1728]
   20128:	ret
   2012c:	stp	x30, x23, [sp, #-48]!
   20130:	stp	x22, x21, [sp, #16]
   20134:	stp	x20, x19, [sp, #32]
   20138:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2013c:	mov	x19, x4
   20140:	mov	x20, x3
   20144:	mov	x21, x2
   20148:	mov	w22, w1
   2014c:	mov	x23, x0
   20150:	add	x8, x8, #0x6b0
   20154:	ldaxr	w9, [x8]
   20158:	add	w10, w9, #0x1
   2015c:	stlxr	w11, w10, [x8]
   20160:	cbnz	w11, 20154 <__sanitizer_on_print@@Base+0x3704>
   20164:	cmp	w9, #0xb
   20168:	b.cc	20178 <__sanitizer_on_print@@Base+0x3728>  // b.lo, b.ul, b.last
   2016c:	mov	w0, #0x2                   	// #2
   20170:	bl	213e8 <__sanitizer_sandbox_on_notify@@Base+0xd68>
   20174:	brk	#0x1
   20178:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2017c:	ldr	x8, [x8, #1728]
   20180:	cbz	x8, 2019c <__sanitizer_on_print@@Base+0x374c>
   20184:	mov	x0, x23
   20188:	mov	w1, w22
   2018c:	mov	x2, x21
   20190:	mov	x3, x20
   20194:	mov	x4, x19
   20198:	blr	x8
   2019c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   201a0:	add	x0, x0, #0xe3a
   201a4:	mov	x1, x23
   201a8:	mov	w2, w22
   201ac:	mov	x3, x21
   201b0:	mov	x4, x20
   201b4:	mov	x5, x19
   201b8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   201bc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

00000000000201c0 <__sanitizer_set_death_callback@@Base>:
   201c0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   201c4:	str	x0, [x8, #1720]
   201c8:	ret
   201cc:	str	x30, [sp, #-16]!
   201d0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   201d4:	ldr	x3, [x8, #1776]
   201d8:	cbnz	x3, 201e8 <__sanitizer_set_death_callback@@Base+0x28>
   201dc:	str	x0, [x8, #1776]
   201e0:	ldr	x30, [sp], #16
   201e4:	ret
   201e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   201ec:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   201f0:	add	x0, x0, #0xe90
   201f4:	add	x2, x2, #0xeeb
   201f8:	mov	w1, #0x17                  	// #23
   201fc:	mov	x4, xzr
   20200:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   20204:	mov	x0, xzr
   20208:	ret
   2020c:	sub	sp, sp, #0x80
   20210:	stp	d9, d8, [sp, #16]
   20214:	stp	x29, x30, [sp, #32]
   20218:	stp	x28, x27, [sp, #48]
   2021c:	stp	x26, x25, [sp, #64]
   20220:	stp	x24, x23, [sp, #80]
   20224:	stp	x22, x21, [sp, #96]
   20228:	stp	x20, x19, [sp, #112]
   2022c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20230:	ldr	x9, [x9, #4056]
   20234:	ldp	x8, x19, [x9, #136]
   20238:	ldrb	w26, [x9, #160]
   2023c:	cbnz	x8, 203b8 <__sanitizer_set_death_callback@@Base+0x1f8>
   20240:	adrp	x8, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20244:	adrp	x27, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20248:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2024c:	ldr	x27, [x27, #3808]
   20250:	ldr	x23, [x23, #4024]
   20254:	ldr	d8, [x8, #3696]
   20258:	mov	x22, #0xcccccccccccccccc    	// #-3689348814741910324
   2025c:	mov	w20, wzr
   20260:	mov	x24, xzr
   20264:	mov	x29, xzr
   20268:	mov	x28, xzr
   2026c:	mov	w21, #0xb                   	// #11
   20270:	movk	x22, #0xcccd
   20274:	b	20294 <__sanitizer_set_death_callback@@Base+0xd4>
   20278:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   2027c:	add	x0, x0, #0xfb2
   20280:	mov	x1, x24
   20284:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   20288:	mov	w0, #0x5a                  	// #90
   2028c:	mov	w1, #0x14                  	// #20
   20290:	bl	6e60 <__sanitizer_print_memory_profile@plt>
   20294:	ucvtf	d0, x24
   20298:	fmul	d9, d0, d8
   2029c:	mov	w0, #0x64                  	// #100
   202a0:	bl	213ec <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   202a4:	bl	20e34 <__sanitizer_sandbox_on_notify@@Base+0x7b4>
   202a8:	ldr	w8, [x27]
   202ac:	lsr	x24, x0, #20
   202b0:	cbz	w8, 20324 <__sanitizer_set_death_callback@@Base+0x164>
   202b4:	mul	x8, x28, x21
   202b8:	umulh	x8, x8, x22
   202bc:	cmp	x24, x8, lsr #3
   202c0:	b.hi	202d0 <__sanitizer_set_death_callback@@Base+0x110>  // b.pmore
   202c4:	bl	237fc <__sanitizer_cov_pcs_init@@Base+0x5c8>
   202c8:	cbnz	x0, 202f0 <__sanitizer_set_death_callback@@Base+0x130>
   202cc:	b	20324 <__sanitizer_set_death_callback@@Base+0x164>
   202d0:	ldr	x1, [x23]
   202d4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   202d8:	add	x0, x0, #0xf1b
   202dc:	mov	x2, x24
   202e0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   202e4:	mov	x28, x24
   202e8:	bl	237fc <__sanitizer_cov_pcs_init@@Base+0x5c8>
   202ec:	cbz	x0, 20324 <__sanitizer_set_death_callback@@Base+0x164>
   202f0:	ldr	x8, [x0, #8]
   202f4:	mul	x9, x29, x21
   202f8:	umulh	x9, x9, x22
   202fc:	mov	x25, x0
   20300:	cmp	x8, x9, lsr #3
   20304:	b.ls	20324 <__sanitizer_set_death_callback@@Base+0x164>  // b.plast
   20308:	ldr	x1, [x23]
   2030c:	ldr	x2, [x25]
   20310:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20314:	lsr	x3, x8, #20
   20318:	add	x0, x0, #0xf2b
   2031c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   20320:	ldr	x29, [x25, #8]
   20324:	cbz	x19, 20398 <__sanitizer_set_death_callback@@Base+0x1d8>
   20328:	cmp	x19, x24
   2032c:	cset	w8, cs  // cs = hs, nlast
   20330:	orr	w8, w20, w8
   20334:	tbz	w8, #0, 20368 <__sanitizer_set_death_callback@@Base+0x1a8>
   20338:	cmp	x19, x24
   2033c:	b.cc	20398 <__sanitizer_set_death_callback@@Base+0x1d8>  // b.lo, b.ul, b.last
   20340:	eor	w8, w20, #0x1
   20344:	tbnz	w8, #0, 20398 <__sanitizer_set_death_callback@@Base+0x1d8>
   20348:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2034c:	ldr	x8, [x8, #1776]
   20350:	cbz	x8, 2035c <__sanitizer_set_death_callback@@Base+0x19c>
   20354:	mov	w0, wzr
   20358:	blr	x8
   2035c:	mov	w20, wzr
   20360:	cbnz	w26, 2039c <__sanitizer_set_death_callback@@Base+0x1dc>
   20364:	b	2029c <__sanitizer_set_death_callback@@Base+0xdc>
   20368:	ldr	x1, [x23]
   2036c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20370:	add	x0, x0, #0xf83
   20374:	mov	x2, x19
   20378:	mov	x3, x24
   2037c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   20380:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20384:	ldr	x8, [x8, #1776]
   20388:	cbz	x8, 203ac <__sanitizer_set_death_callback@@Base+0x1ec>
   2038c:	mov	w0, #0x1                   	// #1
   20390:	mov	w20, #0x1                   	// #1
   20394:	blr	x8
   20398:	cbz	w26, 2029c <__sanitizer_set_death_callback@@Base+0xdc>
   2039c:	ucvtf	d0, x24
   203a0:	fcmp	d9, d0
   203a4:	b.pl	2029c <__sanitizer_set_death_callback@@Base+0xdc>  // b.nfrst
   203a8:	b	20278 <__sanitizer_set_death_callback@@Base+0xb8>
   203ac:	mov	w20, #0x1                   	// #1
   203b0:	cbnz	w26, 2039c <__sanitizer_set_death_callback@@Base+0x1dc>
   203b4:	b	2029c <__sanitizer_set_death_callback@@Base+0xdc>
   203b8:	str	x8, [sp, #8]
   203bc:	adrp	x8, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   203c0:	adrp	x27, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   203c4:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   203c8:	ldr	x27, [x27, #3808]
   203cc:	ldr	x22, [x22, #4024]
   203d0:	ldr	d8, [x8, #3696]
   203d4:	mov	x20, #0xcccccccccccccccc    	// #-3689348814741910324
   203d8:	mov	w23, wzr
   203dc:	mov	x21, xzr
   203e0:	mov	x29, xzr
   203e4:	mov	x28, xzr
   203e8:	mov	w24, #0xb                   	// #11
   203ec:	movk	x20, #0xcccd
   203f0:	ucvtf	d0, x21
   203f4:	fmul	d9, d0, d8
   203f8:	mov	w0, #0x64                  	// #100
   203fc:	bl	213ec <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   20400:	bl	20e34 <__sanitizer_sandbox_on_notify@@Base+0x7b4>
   20404:	ldr	w8, [x27]
   20408:	lsr	x21, x0, #20
   2040c:	cbz	w8, 20474 <__sanitizer_set_death_callback@@Base+0x2b4>
   20410:	mul	x8, x28, x24
   20414:	umulh	x8, x8, x20
   20418:	cmp	x21, x8, lsr #3
   2041c:	b.ls	20438 <__sanitizer_set_death_callback@@Base+0x278>  // b.plast
   20420:	ldr	x1, [x22]
   20424:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20428:	add	x0, x0, #0xf1b
   2042c:	mov	x2, x21
   20430:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   20434:	mov	x28, x21
   20438:	bl	237fc <__sanitizer_cov_pcs_init@@Base+0x5c8>
   2043c:	cbz	x0, 20474 <__sanitizer_set_death_callback@@Base+0x2b4>
   20440:	ldr	x8, [x0, #8]
   20444:	mul	x9, x29, x24
   20448:	umulh	x9, x9, x20
   2044c:	mov	x25, x0
   20450:	cmp	x8, x9, lsr #3
   20454:	b.ls	20474 <__sanitizer_set_death_callback@@Base+0x2b4>  // b.plast
   20458:	ldr	x1, [x22]
   2045c:	ldr	x2, [x25]
   20460:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20464:	lsr	x3, x8, #20
   20468:	add	x0, x0, #0xf2b
   2046c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   20470:	ldr	x29, [x25, #8]
   20474:	ldr	x8, [sp, #8]
   20478:	cmp	x8, x21
   2047c:	b.cc	20528 <__sanitizer_set_death_callback@@Base+0x368>  // b.lo, b.ul, b.last
   20480:	cbz	x19, 204f8 <__sanitizer_set_death_callback@@Base+0x338>
   20484:	cmp	x19, x21
   20488:	cset	w8, cs  // cs = hs, nlast
   2048c:	orr	w8, w23, w8
   20490:	tbz	w8, #0, 204c0 <__sanitizer_set_death_callback@@Base+0x300>
   20494:	cmp	x19, x21
   20498:	b.cc	204f8 <__sanitizer_set_death_callback@@Base+0x338>  // b.lo, b.ul, b.last
   2049c:	eor	w8, w23, #0x1
   204a0:	tbnz	w8, #0, 204f8 <__sanitizer_set_death_callback@@Base+0x338>
   204a4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   204a8:	ldr	x8, [x8, #1776]
   204ac:	cbz	x8, 204b8 <__sanitizer_set_death_callback@@Base+0x2f8>
   204b0:	mov	w0, wzr
   204b4:	blr	x8
   204b8:	mov	w23, wzr
   204bc:	b	204f8 <__sanitizer_set_death_callback@@Base+0x338>
   204c0:	ldr	x1, [x22]
   204c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   204c8:	add	x0, x0, #0xf83
   204cc:	mov	x2, x19
   204d0:	mov	x3, x21
   204d4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   204d8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   204dc:	ldr	x8, [x8, #1776]
   204e0:	cbnz	x8, 204ec <__sanitizer_set_death_callback@@Base+0x32c>
   204e4:	mov	w23, #0x1                   	// #1
   204e8:	b	204f8 <__sanitizer_set_death_callback@@Base+0x338>
   204ec:	mov	w0, #0x1                   	// #1
   204f0:	mov	w23, #0x1                   	// #1
   204f4:	blr	x8
   204f8:	cbz	w26, 203f8 <__sanitizer_set_death_callback@@Base+0x238>
   204fc:	ucvtf	d0, x21
   20500:	fcmp	d9, d0
   20504:	b.pl	203f8 <__sanitizer_set_death_callback@@Base+0x238>  // b.nfrst
   20508:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   2050c:	add	x0, x0, #0xfb2
   20510:	mov	x1, x21
   20514:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   20518:	mov	w0, #0x5a                  	// #90
   2051c:	mov	w1, #0x14                  	// #20
   20520:	bl	6e60 <__sanitizer_print_memory_profile@plt>
   20524:	b	203f0 <__sanitizer_set_death_callback@@Base+0x230>
   20528:	ldr	x1, [x22]
   2052c:	ldr	x2, [sp, #8]
   20530:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20534:	add	x0, x0, #0xf54
   20538:	mov	x3, x21
   2053c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   20540:	bl	1bed0 <__sanitizer_set_report_fd@@Base+0x588c>
   20544:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   20548:	sub	sp, sp, #0x40
   2054c:	str	x30, [sp, #32]
   20550:	stp	x20, x19, [sp, #48]
   20554:	mov	x19, x0
   20558:	mov	x0, sp
   2055c:	mov	w1, #0x10000               	// #65536
   20560:	stp	xzr, xzr, [sp, #8]
   20564:	str	xzr, [sp]
   20568:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   2056c:	ldr	x8, [sp, #16]
   20570:	lsr	x9, x8, #16
   20574:	cbnz	x9, 205ac <__sanitizer_set_death_callback@@Base+0x3ec>
   20578:	ldr	x9, [sp, #8]
   2057c:	lsr	x9, x9, #16
   20580:	cbnz	x9, 20594 <__sanitizer_set_death_callback@@Base+0x3d4>
   20584:	mov	x0, sp
   20588:	mov	w1, #0x10000               	// #65536
   2058c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   20590:	ldr	x8, [sp, #16]
   20594:	ldr	x9, [sp]
   20598:	mov	w10, #0x10000               	// #65536
   2059c:	sub	x2, x10, x8
   205a0:	mov	w1, wzr
   205a4:	add	x0, x9, x8
   205a8:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   205ac:	adrp	x8, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   205b0:	ldr	q0, [x8, #3712]
   205b4:	ldr	x8, [sp]
   205b8:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   205bc:	add	x1, x1, #0xba0
   205c0:	mov	x0, sp
   205c4:	mov	x2, x19
   205c8:	str	q0, [sp, #16]
   205cc:	strb	wzr, [x8]
   205d0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   205d4:	ldr	x19, [sp]
   205d8:	mov	w1, #0xa                   	// #10
   205dc:	mov	x0, x19
   205e0:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   205e4:	cbz	x0, 20610 <__sanitizer_set_death_callback@@Base+0x450>
   205e8:	mov	x20, x0
   205ec:	mov	x0, x19
   205f0:	strb	wzr, [x20], #1
   205f4:	bl	20fd4 <__sanitizer_sandbox_on_notify@@Base+0x954>
   205f8:	mov	w1, #0xa                   	// #10
   205fc:	mov	x0, x20
   20600:	mov	x19, x20
   20604:	bl	18bb4 <__sanitizer_set_report_fd@@Base+0x2570>
   20608:	mov	x20, x0
   2060c:	cbnz	x0, 205ec <__sanitizer_set_death_callback@@Base+0x42c>
   20610:	ldrb	w8, [x19]
   20614:	cbz	w8, 20620 <__sanitizer_set_death_callback@@Base+0x460>
   20618:	mov	x0, x19
   2061c:	bl	20fd4 <__sanitizer_sandbox_on_notify@@Base+0x954>
   20620:	ldp	x0, x1, [sp]
   20624:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   20628:	ldp	x20, x19, [sp, #48]
   2062c:	ldr	x30, [sp, #32]
   20630:	add	sp, sp, #0x40
   20634:	ret
   20638:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2063c:	ldr	x8, [x8, #4056]
   20640:	ldp	x9, x10, [x8, #136]
   20644:	orr	x9, x10, x9
   20648:	cbnz	x9, 20654 <__sanitizer_set_death_callback@@Base+0x494>
   2064c:	ldrb	w8, [x8, #160]
   20650:	cbz	w8, 20670 <__sanitizer_set_death_callback@@Base+0x4b0>
   20654:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20658:	ldr	x8, [x8, #3968]
   2065c:	cbz	x8, 20670 <__sanitizer_set_death_callback@@Base+0x4b0>
   20660:	adrp	x0, 20000 <__sanitizer_on_print@@Base+0x35b0>
   20664:	add	x0, x0, #0x20c
   20668:	mov	x1, xzr
   2066c:	b	1ad58 <__sanitizer_set_report_fd@@Base+0x4714>
   20670:	ret
   20674:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20678:	str	x0, [x8, #1784]
   2067c:	ret

0000000000020680 <__sanitizer_sandbox_on_notify@@Base>:
   20680:	str	x30, [sp, #-16]!
   20684:	bl	2181c <__sanitizer_sandbox_on_notify@@Base+0x119c>
   20688:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2068c:	ldr	x0, [x8, #1784]
   20690:	cbz	x0, 2069c <__sanitizer_sandbox_on_notify@@Base+0x1c>
   20694:	ldr	x30, [sp], #16
   20698:	br	x0
   2069c:	ldr	x30, [sp], #16
   206a0:	ret
   206a4:	str	x30, [sp, #-16]!
   206a8:	bl	6d00 <__errno_location@plt>
   206ac:	mov	w8, #0xc                   	// #12
   206b0:	str	w8, [x0]
   206b4:	ldr	x30, [sp], #16
   206b8:	ret
   206bc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   206c0:	ldr	x8, [x8, #3672]
   206c4:	cbz	x8, 206d8 <__sanitizer_sandbox_on_notify@@Base+0x58>
   206c8:	str	x30, [sp, #-16]!
   206cc:	bl	6a80 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   206d0:	ldr	x30, [sp], #16
   206d4:	ret
   206d8:	b	6e40 <sigaction@plt>
   206dc:	sub	sp, sp, #0xb0
   206e0:	str	x30, [sp, #128]
   206e4:	stp	x22, x21, [sp, #144]
   206e8:	stp	x20, x19, [sp, #160]
   206ec:	cbz	x1, 2083c <__sanitizer_sandbox_on_notify@@Base+0x1bc>
   206f0:	mov	x19, x2
   206f4:	cbz	x2, 20854 <__sanitizer_sandbox_on_notify@@Base+0x1d4>
   206f8:	mov	x20, x1
   206fc:	tbz	w0, #0, 20734 <__sanitizer_sandbox_on_notify@@Base+0xb4>
   20700:	add	x1, sp, #0x70
   20704:	mov	w0, #0x3                   	// #3
   20708:	bl	6e10 <getrlimit@plt>
   2070c:	cbnz	w0, 2086c <__sanitizer_sandbox_on_notify@@Base+0x1ec>
   20710:	add	x0, sp, #0x50
   20714:	mov	w1, #0x1                   	// #1
   20718:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   2071c:	add	x0, sp, #0x50
   20720:	bl	1d5fc <__sanitizer_on_print@@Base+0xbac>
   20724:	tbz	w0, #0, 20784 <__sanitizer_sandbox_on_notify@@Base+0x104>
   20728:	str	xzr, [x19]
   2072c:	str	xzr, [x20]
   20730:	b	20820 <__sanitizer_sandbox_on_notify@@Base+0x1a0>
   20734:	mov	x0, sp
   20738:	str	xzr, [sp, #80]
   2073c:	str	xzr, [sp, #112]
   20740:	bl	6ab0 <pthread_attr_init@plt>
   20744:	bl	6de0 <pthread_self@plt>
   20748:	mov	x1, sp
   2074c:	bl	6a70 <pthread_getattr_np@plt>
   20750:	cbnz	w0, 2088c <__sanitizer_sandbox_on_notify@@Base+0x20c>
   20754:	mov	x0, sp
   20758:	add	x1, sp, #0x70
   2075c:	add	x2, sp, #0x50
   20760:	bl	21aa0 <__sanitizer_sandbox_on_notify@@Base+0x1420>
   20764:	mov	x0, sp
   20768:	bl	6b60 <pthread_attr_destroy@plt>
   2076c:	ldr	x8, [sp, #112]
   20770:	ldr	x9, [sp, #80]
   20774:	add	x9, x9, x8
   20778:	str	x9, [x20]
   2077c:	str	x8, [x19]
   20780:	b	20828 <__sanitizer_sandbox_on_notify@@Base+0x1a8>
   20784:	add	x0, sp, #0x50
   20788:	mov	x1, sp
   2078c:	stp	xzr, xzr, [sp, #24]
   20790:	str	xzr, [sp, #72]
   20794:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   20798:	mov	x21, xzr
   2079c:	tbz	w0, #0, 207d8 <__sanitizer_sandbox_on_notify@@Base+0x158>
   207a0:	ldr	x8, [sp, #8]
   207a4:	add	x22, sp, #0x70
   207a8:	cmp	x8, x22
   207ac:	b.ls	207b8 <__sanitizer_sandbox_on_notify@@Base+0x138>  // b.plast
   207b0:	mov	x21, xzr
   207b4:	b	207d8 <__sanitizer_sandbox_on_notify@@Base+0x158>
   207b8:	add	x0, sp, #0x50
   207bc:	mov	x1, sp
   207c0:	mov	x21, x8
   207c4:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   207c8:	tbz	w0, #0, 207d8 <__sanitizer_sandbox_on_notify@@Base+0x158>
   207cc:	ldr	x8, [sp, #8]
   207d0:	cmp	x8, x22
   207d4:	b.ls	207b8 <__sanitizer_sandbox_on_notify@@Base+0x138>  // b.plast
   207d8:	ldr	x8, [sp]
   207dc:	add	x9, sp, #0x70
   207e0:	cmp	x8, x9
   207e4:	b.hi	208ac <__sanitizer_sandbox_on_notify@@Base+0x22c>  // b.pmore
   207e8:	ldr	x8, [sp, #8]
   207ec:	cmp	x8, x9
   207f0:	b.ls	208ac <__sanitizer_sandbox_on_notify@@Base+0x22c>  // b.plast
   207f4:	ldr	x9, [sp, #112]
   207f8:	sub	x10, x8, x21
   207fc:	mov	w11, #0x40000000            	// #1073741824
   20800:	str	x8, [x20]
   20804:	cmp	x9, x10
   20808:	csel	x9, x10, x9, hi  // hi = pmore
   2080c:	lsr	x10, x9, #30
   20810:	cmp	x10, #0x0
   20814:	csel	x9, x9, x11, eq  // eq = none
   20818:	sub	x8, x8, x9
   2081c:	str	x8, [x19]
   20820:	add	x0, sp, #0x50
   20824:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   20828:	ldp	x20, x19, [sp, #160]
   2082c:	ldp	x22, x21, [sp, #144]
   20830:	ldr	x30, [sp, #128]
   20834:	add	sp, sp, #0xb0
   20838:	ret
   2083c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20840:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20844:	add	x0, x0, #0xfcf
   20848:	add	x2, x2, #0x29
   2084c:	mov	w1, #0x60                  	// #96
   20850:	b	208c0 <__sanitizer_sandbox_on_notify@@Base+0x240>
   20854:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20858:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2085c:	add	x0, x0, #0xfcf
   20860:	add	x2, x2, #0x3e
   20864:	mov	w1, #0x61                  	// #97
   20868:	b	208c0 <__sanitizer_sandbox_on_notify@@Base+0x240>
   2086c:	sxtw	x3, w0
   20870:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20874:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20878:	add	x0, x0, #0xfcf
   2087c:	add	x2, x2, #0x56
   20880:	mov	w1, #0x65                  	// #101
   20884:	mov	x4, xzr
   20888:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2088c:	sxtw	x3, w0
   20890:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20894:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20898:	add	x0, x0, #0xfcf
   2089c:	add	x2, x2, #0xc1
   208a0:	mov	w1, #0x91                  	// #145
   208a4:	mov	x4, xzr
   208a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   208ac:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   208b0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   208b4:	add	x0, x0, #0xfcf
   208b8:	add	x2, x2, #0x80
   208bc:	mov	w1, #0x73                  	// #115
   208c0:	mov	x3, xzr
   208c4:	mov	x4, xzr
   208c8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   208cc:	sub	sp, sp, #0x30
   208d0:	str	x30, [sp, #16]
   208d4:	stp	x20, x19, [sp, #32]
   208d8:	mov	x19, x1
   208dc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   208e0:	mov	x20, x0
   208e4:	add	x1, x1, #0xf8
   208e8:	mov	x0, #0xffffffffffffffff    	// #-1
   208ec:	bl	6ae0 <dlsym@plt>
   208f0:	str	x0, [sp, #24]
   208f4:	cbz	x0, 20924 <__sanitizer_sandbox_on_notify@@Base+0x2a4>
   208f8:	add	x0, sp, #0x8
   208fc:	add	x1, sp, #0x18
   20900:	mov	w2, #0x8                   	// #8
   20904:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   20908:	ldr	x8, [sp, #8]
   2090c:	mov	w2, #0x1                   	// #1
   20910:	mov	x0, x20
   20914:	mov	x1, x19
   20918:	blr	x8
   2091c:	cmp	w0, #0x0
   20920:	cset	w0, eq  // eq = none
   20924:	ldp	x20, x19, [sp, #32]
   20928:	ldr	x30, [sp, #16]
   2092c:	add	sp, sp, #0x30
   20930:	ret
   20934:	sub	sp, sp, #0x30
   20938:	str	x30, [sp, #32]
   2093c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20940:	add	x1, x1, #0xff
   20944:	mov	x0, #0xffffffffffffffff    	// #-1
   20948:	bl	6ae0 <dlsym@plt>
   2094c:	str	x0, [sp, #40]
   20950:	add	x0, sp, #0x18
   20954:	add	x1, sp, #0x28
   20958:	mov	w2, #0x8                   	// #8
   2095c:	stp	xzr, xzr, [sp, #8]
   20960:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   20964:	ldr	x8, [sp, #24]
   20968:	cbz	x8, 209c0 <__sanitizer_sandbox_on_notify@@Base+0x340>
   2096c:	add	x0, sp, #0x10
   20970:	add	x1, sp, #0x8
   20974:	blr	x8
   20978:	ldr	x8, [sp, #8]
   2097c:	cmp	x8, #0xf
   20980:	b.hi	2098c <__sanitizer_sandbox_on_notify@@Base+0x30c>  // b.pmore
   20984:	mov	w8, #0x10                  	// #16
   20988:	str	x8, [sp, #8]
   2098c:	sub	x9, x8, #0x1
   20990:	tst	x8, x9
   20994:	b.ne	209e0 <__sanitizer_sandbox_on_notify@@Base+0x360>  // b.any
   20998:	ldr	x9, [sp, #16]
   2099c:	neg	x10, x8
   209a0:	ldr	x30, [sp, #32]
   209a4:	add	x8, x8, x9
   209a8:	sub	x8, x8, #0x1
   209ac:	and	x8, x8, x10
   209b0:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   209b4:	str	x8, [x9, #1792]
   209b8:	add	sp, sp, #0x30
   209bc:	ret
   209c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   209c4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   209c8:	add	x0, x0, #0xfcf
   209cc:	add	x2, x2, #0x20d
   209d0:	mov	w1, #0xd9                  	// #217
   209d4:	mov	x3, xzr
   209d8:	mov	x4, xzr
   209dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   209e0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   209e4:	add	x0, x0, #0x20f
   209e8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   209ec:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   209f0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   209f4:	ldr	x0, [x8, #1800]
   209f8:	cbz	x0, 20a00 <__sanitizer_sandbox_on_notify@@Base+0x380>
   209fc:	ret
   20a00:	mov	w0, #0x6f0                 	// #1776
   20a04:	str	x0, [x8, #1800]
   20a08:	ret
   20a0c:	mov	w0, #0x10                  	// #16
   20a10:	ret
   20a14:	adrp	x10, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20a18:	ldr	x9, [x10, #1800]
   20a1c:	mrs	x8, tpidr_el0
   20a20:	cbz	x9, 20a2c <__sanitizer_sandbox_on_notify@@Base+0x3ac>
   20a24:	sub	x0, x8, x9
   20a28:	ret
   20a2c:	mov	w9, #0x6f0                 	// #1776
   20a30:	str	x9, [x10, #1800]
   20a34:	sub	x0, x8, x9
   20a38:	ret
   20a3c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20a40:	ldr	x0, [x8, #1792]
   20a44:	ret
   20a48:	sub	sp, sp, #0x40
   20a4c:	stp	x30, x23, [sp, #16]
   20a50:	stp	x22, x21, [sp, #32]
   20a54:	stp	x20, x19, [sp, #48]
   20a58:	adrp	x10, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20a5c:	ldr	x9, [x10, #1800]
   20a60:	mov	x22, x4
   20a64:	mov	x19, x3
   20a68:	mov	x21, x2
   20a6c:	mov	x20, x1
   20a70:	mov	w23, w0
   20a74:	mrs	x8, tpidr_el0
   20a78:	cbnz	x9, 20a84 <__sanitizer_sandbox_on_notify@@Base+0x404>
   20a7c:	mov	w9, #0x6f0                 	// #1776
   20a80:	str	x9, [x10, #1800]
   20a84:	sub	x8, x8, x9
   20a88:	str	x8, [x19]
   20a8c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   20a90:	ldr	x8, [x8, #1792]
   20a94:	and	w0, w23, #0x1
   20a98:	add	x1, sp, #0x8
   20a9c:	mov	x2, sp
   20aa0:	str	x8, [x22]
   20aa4:	bl	206dc <__sanitizer_sandbox_on_notify@@Base+0x5c>
   20aa8:	ldp	x8, x9, [sp]
   20aac:	sub	x9, x9, x8
   20ab0:	str	x8, [x20]
   20ab4:	str	x9, [x21]
   20ab8:	tbnz	w23, #0, 20b04 <__sanitizer_sandbox_on_notify@@Base+0x484>
   20abc:	ldr	x10, [x19]
   20ac0:	ldr	x4, [x20]
   20ac4:	cmp	x10, x4
   20ac8:	b.ls	20b04 <__sanitizer_sandbox_on_notify@@Base+0x484>  // b.plast
   20acc:	add	x8, x4, x9
   20ad0:	cmp	x10, x8
   20ad4:	b.cs	20b04 <__sanitizer_sandbox_on_notify@@Base+0x484>  // b.hs, b.nlast
   20ad8:	ldr	x11, [x22]
   20adc:	add	x3, x11, x10
   20ae0:	cmp	x3, x4
   20ae4:	b.ls	20b18 <__sanitizer_sandbox_on_notify@@Base+0x498>  // b.plast
   20ae8:	cmp	x3, x8
   20aec:	b.hi	20b30 <__sanitizer_sandbox_on_notify@@Base+0x4b0>  // b.pmore
   20af0:	sub	x8, x9, x11
   20af4:	str	x8, [x21]
   20af8:	ldr	x9, [x20]
   20afc:	add	x8, x9, x8
   20b00:	str	x8, [x19]
   20b04:	ldp	x20, x19, [sp, #48]
   20b08:	ldp	x22, x21, [sp, #32]
   20b0c:	ldp	x30, x23, [sp, #16]
   20b10:	add	sp, sp, #0x40
   20b14:	ret
   20b18:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20b1c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20b20:	add	x0, x0, #0xfcf
   20b24:	add	x2, x2, #0x117
   20b28:	mov	w1, #0x202                 	// #514
   20b2c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   20b30:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20b34:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20b38:	add	x0, x0, #0xfcf
   20b3c:	add	x2, x2, #0x141
   20b40:	mov	w1, #0x203                 	// #515
   20b44:	mov	x4, x8
   20b48:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   20b4c:	sub	sp, sp, #0x30
   20b50:	stp	x30, x21, [sp, #16]
   20b54:	stp	x20, x19, [sp, #32]
   20b58:	ldrb	w8, [x0, #24]
   20b5c:	mov	x19, x0
   20b60:	cbz	w8, 20b94 <__sanitizer_sandbox_on_notify@@Base+0x514>
   20b64:	ldr	x8, [x19, #16]
   20b68:	cbz	x8, 20b8c <__sanitizer_sandbox_on_notify@@Base+0x50c>
   20b6c:	ldr	x20, [x19]
   20b70:	add	x8, x8, x8, lsl #3
   20b74:	lsl	x21, x8, #3
   20b78:	mov	x0, x20
   20b7c:	bl	13998 <__sanitizer_report_error_summary@@Base+0x148>
   20b80:	subs	x21, x21, #0x48
   20b84:	add	x20, x20, #0x48
   20b88:	b.ne	20b78 <__sanitizer_sandbox_on_notify@@Base+0x4f8>  // b.any
   20b8c:	str	xzr, [x19, #16]
   20b90:	b	20ba8 <__sanitizer_sandbox_on_notify@@Base+0x528>
   20b94:	mov	w1, #0x4000                	// #16384
   20b98:	mov	x0, x19
   20b9c:	stp	xzr, xzr, [x19, #8]
   20ba0:	str	xzr, [x19]
   20ba4:	bl	1db74 <__sanitizer_on_print@@Base+0x1124>
   20ba8:	adrp	x0, 20000 <__sanitizer_on_print@@Base+0x35b0>
   20bac:	mov	w8, #0x1                   	// #1
   20bb0:	add	x0, x0, #0xbd8
   20bb4:	mov	x1, sp
   20bb8:	strb	w8, [x19, #24]
   20bbc:	str	x19, [sp]
   20bc0:	strb	w8, [sp, #8]
   20bc4:	bl	6ba0 <dl_iterate_phdr@plt>
   20bc8:	ldp	x20, x19, [sp, #32]
   20bcc:	ldp	x30, x21, [sp, #16]
   20bd0:	add	sp, sp, #0x30
   20bd4:	ret
   20bd8:	sub	sp, sp, #0xa0
   20bdc:	str	x30, [sp, #112]
   20be0:	stp	x22, x21, [sp, #128]
   20be4:	stp	x20, x19, [sp, #144]
   20be8:	mov	x20, x0
   20bec:	add	x0, sp, #0x50
   20bf0:	mov	w1, #0x1000                	// #4096
   20bf4:	mov	x19, x2
   20bf8:	stp	xzr, xzr, [sp, #88]
   20bfc:	str	xzr, [sp, #80]
   20c00:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   20c04:	ldr	x8, [sp, #96]
   20c08:	cmp	x8, #0xfff
   20c0c:	b.hi	20c44 <__sanitizer_sandbox_on_notify@@Base+0x5c4>  // b.pmore
   20c10:	ldr	x9, [sp, #88]
   20c14:	cmp	x9, #0xfff
   20c18:	b.hi	20c2c <__sanitizer_sandbox_on_notify@@Base+0x5ac>  // b.pmore
   20c1c:	add	x0, sp, #0x50
   20c20:	mov	w1, #0x1000                	// #4096
   20c24:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   20c28:	ldr	x8, [sp, #96]
   20c2c:	ldr	x9, [sp, #80]
   20c30:	mov	w10, #0x1000                	// #4096
   20c34:	sub	x2, x10, x8
   20c38:	mov	w1, wzr
   20c3c:	add	x0, x9, x8
   20c40:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   20c44:	adrp	x8, 2e000 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xec>
   20c48:	ldr	q0, [x8, #3808]
   20c4c:	ldr	x8, [sp, #80]
   20c50:	str	q0, [sp, #96]
   20c54:	strb	wzr, [x8]
   20c58:	ldrb	w8, [x19, #8]
   20c5c:	cbz	w8, 20c74 <__sanitizer_sandbox_on_notify@@Base+0x5f4>
   20c60:	strb	wzr, [x19, #8]
   20c64:	ldr	x0, [sp, #80]
   20c68:	ldr	x1, [sp, #96]
   20c6c:	bl	13ebc <__sanitizer_report_error_summary@@Base+0x66c>
   20c70:	b	20c8c <__sanitizer_sandbox_on_notify@@Base+0x60c>
   20c74:	ldr	x2, [x20, #8]
   20c78:	cbz	x2, 20c8c <__sanitizer_sandbox_on_notify@@Base+0x60c>
   20c7c:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   20c80:	add	x1, x1, #0xba0
   20c84:	add	x0, sp, #0x50
   20c88:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   20c8c:	ldr	x8, [sp, #96]
   20c90:	cbz	x8, 20d80 <__sanitizer_sandbox_on_notify@@Base+0x700>
   20c94:	ldr	x0, [sp, #80]
   20c98:	ldrb	w8, [x0]
   20c9c:	cbz	w8, 20d60 <__sanitizer_sandbox_on_notify@@Base+0x6e0>
   20ca0:	add	x8, sp, #0x8
   20ca4:	movi	v0.2d, #0x0
   20ca8:	add	x0, x8, #0x1c
   20cac:	mov	w2, #0x10                  	// #16
   20cb0:	mov	w1, wzr
   20cb4:	str	xzr, [sp, #8]
   20cb8:	str	wzr, [sp, #32]
   20cbc:	strb	wzr, [sp, #52]
   20cc0:	stur	q0, [sp, #16]
   20cc4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   20cc8:	movi	v0.2d, #0x0
   20ccc:	stur	q0, [sp, #64]
   20cd0:	str	xzr, [sp, #56]
   20cd4:	ldr	x1, [sp, #80]
   20cd8:	ldr	x2, [x20]
   20cdc:	add	x0, sp, #0x8
   20ce0:	bl	13908 <__sanitizer_report_error_summary@@Base+0xb8>
   20ce4:	ldrh	w8, [x20, #24]
   20ce8:	cbz	w8, 20d50 <__sanitizer_sandbox_on_notify@@Base+0x6d0>
   20cec:	mov	x21, xzr
   20cf0:	mov	x22, xzr
   20cf4:	b	20d08 <__sanitizer_sandbox_on_notify@@Base+0x688>
   20cf8:	add	x22, x22, #0x1
   20cfc:	cmp	x22, w8, uxth
   20d00:	add	x21, x21, #0x38
   20d04:	b.cs	20d50 <__sanitizer_sandbox_on_notify@@Base+0x6d0>  // b.hs, b.nlast
   20d08:	ldr	x9, [x20, #16]
   20d0c:	ldr	w10, [x9, x21]
   20d10:	cmp	w10, #0x1
   20d14:	b.ne	20cf8 <__sanitizer_sandbox_on_notify@@Base+0x678>  // b.any
   20d18:	add	x9, x9, x21
   20d1c:	ldr	x8, [x20]
   20d20:	ldr	x10, [x9, #16]
   20d24:	ldr	w11, [x9, #4]
   20d28:	ldr	x9, [x9, #40]
   20d2c:	add	x0, sp, #0x8
   20d30:	add	x1, x10, x8
   20d34:	and	w3, w11, #0x1
   20d38:	add	x2, x1, x9
   20d3c:	ubfx	w4, w11, #1, #1
   20d40:	mov	x5, xzr
   20d44:	bl	13ad4 <__sanitizer_report_error_summary@@Base+0x284>
   20d48:	ldrh	w8, [x20, #24]
   20d4c:	b	20cf8 <__sanitizer_sandbox_on_notify@@Base+0x678>
   20d50:	ldr	x0, [x19]
   20d54:	add	x1, sp, #0x8
   20d58:	bl	1da54 <__sanitizer_on_print@@Base+0x1004>
   20d5c:	ldr	x0, [sp, #80]
   20d60:	ldr	x1, [sp, #88]
   20d64:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   20d68:	ldp	x20, x19, [sp, #144]
   20d6c:	ldp	x22, x21, [sp, #128]
   20d70:	ldr	x30, [sp, #112]
   20d74:	mov	w0, wzr
   20d78:	add	sp, sp, #0xa0
   20d7c:	ret
   20d80:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   20d84:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   20d88:	add	x0, x0, #0xb2f
   20d8c:	add	x2, x2, #0x1eb
   20d90:	mov	w1, #0x1c5                 	// #453
   20d94:	mov	x3, xzr
   20d98:	mov	x4, xzr
   20d9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   20da0:	sub	sp, sp, #0x40
   20da4:	stp	x30, x21, [sp, #32]
   20da8:	stp	x20, x19, [sp, #48]
   20dac:	ldrb	w8, [x0, #24]
   20db0:	mov	x19, x0
   20db4:	cbz	w8, 20de8 <__sanitizer_sandbox_on_notify@@Base+0x768>
   20db8:	ldr	x8, [x19, #16]
   20dbc:	cbz	x8, 20de0 <__sanitizer_sandbox_on_notify@@Base+0x760>
   20dc0:	ldr	x20, [x19]
   20dc4:	add	x8, x8, x8, lsl #3
   20dc8:	lsl	x21, x8, #3
   20dcc:	mov	x0, x20
   20dd0:	bl	13998 <__sanitizer_report_error_summary@@Base+0x148>
   20dd4:	subs	x21, x21, #0x48
   20dd8:	add	x20, x20, #0x48
   20ddc:	b.ne	20dcc <__sanitizer_sandbox_on_notify@@Base+0x74c>  // b.any
   20de0:	str	xzr, [x19, #16]
   20de4:	b	20dfc <__sanitizer_sandbox_on_notify@@Base+0x77c>
   20de8:	mov	w1, #0x4000                	// #16384
   20dec:	mov	x0, x19
   20df0:	stp	xzr, xzr, [x19, #8]
   20df4:	str	xzr, [x19]
   20df8:	bl	1db74 <__sanitizer_on_print@@Base+0x1124>
   20dfc:	mov	w8, #0x1                   	// #1
   20e00:	mov	x0, sp
   20e04:	mov	w1, #0x1                   	// #1
   20e08:	strb	w8, [x19, #24]
   20e0c:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   20e10:	mov	x0, sp
   20e14:	mov	x1, x19
   20e18:	bl	1d630 <__sanitizer_on_print@@Base+0xbe0>
   20e1c:	mov	x0, sp
   20e20:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   20e24:	ldp	x20, x19, [sp, #48]
   20e28:	ldp	x30, x21, [sp, #32]
   20e2c:	add	sp, sp, #0x40
   20e30:	ret
   20e34:	sub	sp, sp, #0xb0
   20e38:	stp	x30, x21, [sp, #144]
   20e3c:	stp	x20, x19, [sp, #160]
   20e40:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20e44:	ldr	x8, [x8, #4056]
   20e48:	ldrb	w8, [x8, #168]
   20e4c:	cbz	w8, 20ef4 <__sanitizer_sandbox_on_notify@@Base+0x874>
   20e50:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20e54:	add	x0, x0, #0x178
   20e58:	mov	w1, wzr
   20e5c:	mov	x2, xzr
   20e60:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   20e64:	cmn	w0, #0x1
   20e68:	b.eq	20ef4 <__sanitizer_sandbox_on_notify@@Base+0x874>  // b.none
   20e6c:	mov	x1, sp
   20e70:	mov	w2, #0x3f                  	// #63
   20e74:	mov	w19, w0
   20e78:	mov	x21, sp
   20e7c:	bl	19ab4 <__sanitizer_set_report_fd@@Base+0x3470>
   20e80:	mov	x20, x0
   20e84:	mov	w0, w19
   20e88:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   20e8c:	cmp	x20, #0x1
   20e90:	b.lt	20f20 <__sanitizer_sandbox_on_notify@@Base+0x8a0>  // b.tstop
   20e94:	strb	wzr, [x21, x20]
   20e98:	ldrb	w8, [x21], #1
   20e9c:	sub	w9, w8, #0x30
   20ea0:	cmp	w9, #0xa
   20ea4:	b.cc	20e98 <__sanitizer_sandbox_on_notify@@Base+0x818>  // b.lo, b.ul, b.last
   20ea8:	cbz	w8, 20f34 <__sanitizer_sandbox_on_notify@@Base+0x8b4>
   20eac:	ldrb	w8, [x21], #1
   20eb0:	sub	w9, w8, #0x30
   20eb4:	cbz	w8, 20ec4 <__sanitizer_sandbox_on_notify@@Base+0x844>
   20eb8:	and	w10, w9, #0xff
   20ebc:	cmp	w10, #0xa
   20ec0:	b.cs	20eac <__sanitizer_sandbox_on_notify@@Base+0x82c>  // b.hs, b.nlast
   20ec4:	cmp	w9, #0x9
   20ec8:	b.hi	20f64 <__sanitizer_sandbox_on_notify@@Base+0x8e4>  // b.pmore
   20ecc:	mov	x19, xzr
   20ed0:	mov	w9, #0xa                   	// #10
   20ed4:	mul	x10, x19, x9
   20ed8:	add	x10, x10, w8, uxtb
   20edc:	ldrb	w8, [x21], #1
   20ee0:	sub	x19, x10, #0x30
   20ee4:	sub	w11, w8, #0x30
   20ee8:	cmp	w11, #0xa
   20eec:	b.cc	20ed4 <__sanitizer_sandbox_on_notify@@Base+0x854>  // b.lo, b.ul, b.last
   20ef0:	b	20f38 <__sanitizer_sandbox_on_notify@@Base+0x8b8>
   20ef4:	mov	x1, sp
   20ef8:	mov	w0, wzr
   20efc:	bl	6b50 <getrusage@plt>
   20f00:	ldr	x8, [sp, #32]
   20f04:	cmp	w0, #0x0
   20f08:	lsl	x8, x8, #10
   20f0c:	csel	x0, x8, xzr, eq  // eq = none
   20f10:	ldp	x20, x19, [sp, #160]
   20f14:	ldp	x30, x21, [sp, #144]
   20f18:	add	sp, sp, #0xb0
   20f1c:	ret
   20f20:	mov	x0, xzr
   20f24:	ldp	x20, x19, [sp, #160]
   20f28:	ldp	x30, x21, [sp, #144]
   20f2c:	add	sp, sp, #0xb0
   20f30:	ret
   20f34:	mov	x19, xzr
   20f38:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20f3c:	ldr	x20, [x20, #4016]
   20f40:	ldr	x0, [x20]
   20f44:	cbnz	x0, 20f50 <__sanitizer_sandbox_on_notify@@Base+0x8d0>
   20f48:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   20f4c:	str	x0, [x20]
   20f50:	mul	x0, x0, x19
   20f54:	ldp	x20, x19, [sp, #160]
   20f58:	ldp	x30, x21, [sp, #144]
   20f5c:	add	sp, sp, #0xb0
   20f60:	ret
   20f64:	mov	x19, xzr
   20f68:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20f6c:	ldr	x20, [x20, #4016]
   20f70:	ldr	x0, [x20]
   20f74:	cbnz	x0, 20f50 <__sanitizer_sandbox_on_notify@@Base+0x8d0>
   20f78:	b	20f48 <__sanitizer_sandbox_on_notify@@Base+0x8c8>
   20f7c:	sub	sp, sp, #0x90
   20f80:	str	x30, [sp, #128]
   20f84:	mov	x2, sp
   20f88:	mov	w1, #0x80                  	// #128
   20f8c:	mov	w0, wzr
   20f90:	bl	6a00 <sched_getaffinity@plt>
   20f94:	cbnz	w0, 20fb0 <__sanitizer_sandbox_on_notify@@Base+0x930>
   20f98:	mov	x1, sp
   20f9c:	mov	w0, #0x80                  	// #128
   20fa0:	bl	6ce0 <__sched_cpucount@plt>
   20fa4:	ldr	x30, [sp, #128]
   20fa8:	add	sp, sp, #0x90
   20fac:	ret
   20fb0:	sxtw	x3, w0
   20fb4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   20fb8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   20fbc:	add	x0, x0, #0xfcf
   20fc0:	add	x2, x2, #0x189
   20fc4:	mov	w1, #0x2b9                 	// #697
   20fc8:	mov	x4, xzr
   20fcc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   20fd0:	ret
   20fd4:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   20fd8:	mov	x2, x0
   20fdc:	add	x1, x1, #0xba0
   20fe0:	mov	w0, #0x6                   	// #6
   20fe4:	b	6d20 <syslog@plt>
   20fe8:	ret
   20fec:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   20ff0:	ldr	x8, [x8, #4056]
   20ff4:	ldrb	w8, [x8, #49]
   20ff8:	cbz	w8, 21000 <__sanitizer_sandbox_on_notify@@Base+0x980>
   20ffc:	b	20548 <__sanitizer_set_death_callback@@Base+0x388>
   21000:	ret
   21004:	sub	sp, sp, #0x20
   21008:	str	x30, [sp, #16]
   2100c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21010:	ldr	x8, [x8, #4000]
   21014:	cbz	x8, 21044 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   21018:	ldr	x8, [x8]
   2101c:	cbz	x8, 21044 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   21020:	ldrb	w8, [x8]
   21024:	cbz	w8, 21044 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   21028:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2102c:	ldr	x8, [x8, #3784]
   21030:	mov	x1, sp
   21034:	mov	w0, #0x1                   	// #1
   21038:	cbz	x8, 2106c <__sanitizer_sandbox_on_notify@@Base+0x9ec>
   2103c:	bl	6b70 <real_clock_gettime@plt>
   21040:	b	21050 <__sanitizer_sandbox_on_notify@@Base+0x9d0>
   21044:	mov	x1, sp
   21048:	mov	w0, #0x1                   	// #1
   2104c:	bl	19d30 <__sanitizer_set_report_fd@@Base+0x36ec>
   21050:	ldp	x8, x9, [sp]
   21054:	ldr	x30, [sp, #16]
   21058:	mov	w10, #0xca00                	// #51712
   2105c:	movk	w10, #0x3b9a, lsl #16
   21060:	madd	x0, x8, x10, x9
   21064:	add	sp, sp, #0x20
   21068:	ret
   2106c:	bl	6be0 <clock_gettime@plt>
   21070:	b	21050 <__sanitizer_sandbox_on_notify@@Base+0x9d0>
   21074:	str	x30, [sp, #-32]!
   21078:	stp	x20, x19, [sp, #16]
   2107c:	mov	w0, #0x1f                  	// #31
   21080:	bl	6d70 <getauxval@plt>
   21084:	mov	x19, x0
   21088:	bl	19e64 <__sanitizer_set_report_fd@@Base+0x3820>
   2108c:	mov	x20, x0
   21090:	bl	19fcc <__sanitizer_set_report_fd@@Base+0x3988>
   21094:	mov	x2, x0
   21098:	mov	x0, x19
   2109c:	mov	x1, x20
   210a0:	bl	19c54 <__sanitizer_set_report_fd@@Base+0x3610>
   210a4:	add	x1, sp, #0xc
   210a8:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   210ac:	tbz	w0, #0, 210c4 <__sanitizer_sandbox_on_notify@@Base+0xa44>
   210b0:	ldr	w1, [sp, #12]
   210b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   210b8:	add	x0, x0, #0x1f4
   210bc:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   210c0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   210c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   210c8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   210cc:	add	x0, x0, #0xfcf
   210d0:	add	x2, x2, #0x1c5
   210d4:	mov	w1, #0x342                 	// #834
   210d8:	mov	w4, #0x1                   	// #1
   210dc:	mov	x3, xzr
   210e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   210e4:	b	6df0 <getuid@plt>
   210e8:	b	6de0 <pthread_self@plt>
   210ec:	stp	x30, x21, [sp, #-32]!
   210f0:	stp	x20, x19, [sp, #16]
   210f4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   210f8:	ldr	x21, [x21, #4016]
   210fc:	mov	x19, x1
   21100:	mov	x20, x0
   21104:	ldr	x8, [x21]
   21108:	cbnz	x8, 21118 <__sanitizer_sandbox_on_notify@@Base+0xa98>
   2110c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   21110:	mov	x8, x0
   21114:	str	x0, [x21]
   21118:	sub	x9, x8, #0x1
   2111c:	tst	x8, x9
   21120:	b.ne	2115c <__sanitizer_sandbox_on_notify@@Base+0xadc>  // b.any
   21124:	add	x9, x20, x8
   21128:	neg	x8, x8
   2112c:	sub	x9, x9, #0x1
   21130:	and	x0, x9, x8
   21134:	and	x8, x8, x19
   21138:	subs	x1, x8, x0
   2113c:	b.ls	21150 <__sanitizer_sandbox_on_notify@@Base+0xad0>  // b.plast
   21140:	ldp	x20, x19, [sp, #16]
   21144:	mov	w2, #0x4                   	// #4
   21148:	ldp	x30, x21, [sp], #32
   2114c:	b	6cb0 <madvise@plt>
   21150:	ldp	x20, x19, [sp, #16]
   21154:	ldp	x30, x21, [sp], #32
   21158:	ret
   2115c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   21160:	add	x0, x0, #0x20f
   21164:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   21168:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2116c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21170:	ldr	x8, [x8, #4056]
   21174:	ldrb	w8, [x8, #208]
   21178:	cmp	w8, #0x0
   2117c:	mov	w8, #0xe                   	// #14
   21180:	cinc	w2, w8, ne  // ne = any
   21184:	b	6cb0 <madvise@plt>
   21188:	str	x30, [sp, #-16]!
   2118c:	mov	w2, #0x10                  	// #16
   21190:	bl	6cb0 <madvise@plt>
   21194:	cmp	w0, #0x0
   21198:	cset	w0, eq  // eq = none
   2119c:	ldr	x30, [sp], #16
   211a0:	ret
   211a4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   211a8:	ldr	x8, [x8, #4056]
   211ac:	ldrb	w8, [x8, #186]
   211b0:	cbz	w8, 211c0 <__sanitizer_sandbox_on_notify@@Base+0xb40>
   211b4:	mov	w0, #0x4                   	// #4
   211b8:	mov	x1, xzr
   211bc:	b	211c4 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   211c0:	ret
   211c4:	sub	sp, sp, #0x30
   211c8:	str	x30, [sp, #16]
   211cc:	stp	x20, x19, [sp, #32]
   211d0:	mov	x20, x1
   211d4:	mov	x1, sp
   211d8:	mov	w19, w0
   211dc:	bl	6e10 <getrlimit@plt>
   211e0:	cbnz	w0, 21208 <__sanitizer_sandbox_on_notify@@Base+0xb88>
   211e4:	mov	x1, sp
   211e8:	mov	w0, w19
   211ec:	str	x20, [sp]
   211f0:	bl	6d60 <setrlimit@plt>
   211f4:	cbnz	w0, 21228 <__sanitizer_sandbox_on_notify@@Base+0xba8>
   211f8:	ldp	x20, x19, [sp, #32]
   211fc:	ldr	x30, [sp, #16]
   21200:	add	sp, sp, #0x30
   21204:	ret
   21208:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2120c:	ldr	x8, [x8, #4024]
   21210:	ldr	x19, [x8]
   21214:	bl	6d00 <__errno_location@plt>
   21218:	ldr	w2, [x0]
   2121c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21220:	add	x0, x0, #0x4d7
   21224:	b	21244 <__sanitizer_sandbox_on_notify@@Base+0xbc4>
   21228:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2122c:	ldr	x8, [x8, #4024]
   21230:	ldr	x19, [x8]
   21234:	bl	6d00 <__errno_location@plt>
   21238:	ldr	w2, [x0]
   2123c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21240:	add	x0, x0, #0x4f8
   21244:	mov	x1, x19
   21248:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2124c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   21250:	sub	sp, sp, #0x20
   21254:	str	x30, [sp, #16]
   21258:	mov	x1, sp
   2125c:	mov	w0, #0x3                   	// #3
   21260:	bl	6e10 <getrlimit@plt>
   21264:	cbnz	w0, 21280 <__sanitizer_sandbox_on_notify@@Base+0xc00>
   21268:	ldr	x8, [sp]
   2126c:	ldr	x30, [sp, #16]
   21270:	cmn	x8, #0x1
   21274:	cset	w0, eq  // eq = none
   21278:	add	sp, sp, #0x20
   2127c:	ret
   21280:	sxtw	x4, w0
   21284:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21288:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2128c:	add	x0, x0, #0x222
   21290:	add	x2, x2, #0x519
   21294:	mov	w1, #0x5c                  	// #92
   21298:	mov	x3, xzr
   2129c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   212a0:	sub	sp, sp, #0x20
   212a4:	str	x30, [sp, #16]
   212a8:	mov	x1, x0
   212ac:	mov	w0, #0x3                   	// #3
   212b0:	bl	211c4 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   212b4:	mov	x1, sp
   212b8:	mov	w0, #0x3                   	// #3
   212bc:	bl	6e10 <getrlimit@plt>
   212c0:	cbnz	w0, 212dc <__sanitizer_sandbox_on_notify@@Base+0xc5c>
   212c4:	ldr	x8, [sp]
   212c8:	cmn	x8, #0x1
   212cc:	b.eq	212fc <__sanitizer_sandbox_on_notify@@Base+0xc7c>  // b.none
   212d0:	ldr	x30, [sp, #16]
   212d4:	add	sp, sp, #0x20
   212d8:	ret
   212dc:	sxtw	x4, w0
   212e0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   212e4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   212e8:	add	x0, x0, #0x222
   212ec:	add	x2, x2, #0x519
   212f0:	mov	w1, #0x5c                  	// #92
   212f4:	mov	x3, xzr
   212f8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   212fc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21300:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21304:	add	x0, x0, #0x222
   21308:	add	x2, x2, #0x27c
   2130c:	mov	w1, #0x7a                  	// #122
   21310:	mov	x3, xzr
   21314:	mov	x4, xzr
   21318:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2131c:	sub	sp, sp, #0x20
   21320:	str	x30, [sp, #16]
   21324:	mov	x1, sp
   21328:	mov	w0, #0x9                   	// #9
   2132c:	bl	6e10 <getrlimit@plt>
   21330:	cbnz	w0, 2134c <__sanitizer_sandbox_on_notify@@Base+0xccc>
   21334:	ldr	x8, [sp]
   21338:	ldr	x30, [sp, #16]
   2133c:	cmn	x8, #0x1
   21340:	cset	w0, eq  // eq = none
   21344:	add	sp, sp, #0x20
   21348:	ret
   2134c:	sxtw	x4, w0
   21350:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21354:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21358:	add	x0, x0, #0x222
   2135c:	add	x2, x2, #0x519
   21360:	mov	w1, #0x5c                  	// #92
   21364:	mov	x3, xzr
   21368:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2136c:	sub	sp, sp, #0x20
   21370:	str	x30, [sp, #16]
   21374:	mov	w0, #0x9                   	// #9
   21378:	mov	x1, #0xffffffffffffffff    	// #-1
   2137c:	bl	211c4 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   21380:	mov	x1, sp
   21384:	mov	w0, #0x9                   	// #9
   21388:	bl	6e10 <getrlimit@plt>
   2138c:	cbnz	w0, 213a8 <__sanitizer_sandbox_on_notify@@Base+0xd28>
   21390:	ldr	x8, [sp]
   21394:	cmn	x8, #0x1
   21398:	b.ne	213c8 <__sanitizer_sandbox_on_notify@@Base+0xd48>  // b.any
   2139c:	ldr	x30, [sp, #16]
   213a0:	add	sp, sp, #0x20
   213a4:	ret
   213a8:	sxtw	x4, w0
   213ac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   213b0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   213b4:	add	x0, x0, #0x222
   213b8:	add	x2, x2, #0x519
   213bc:	mov	w1, #0x5c                  	// #92
   213c0:	mov	x3, xzr
   213c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   213c8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   213cc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   213d0:	add	x0, x0, #0x222
   213d4:	add	x2, x2, #0x29f
   213d8:	mov	w1, #0x84                  	// #132
   213dc:	mov	x3, xzr
   213e0:	mov	x4, xzr
   213e4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   213e8:	b	6ad0 <sleep@plt>
   213ec:	mov	w8, #0x3e8                 	// #1000
   213f0:	mul	w0, w0, w8
   213f4:	b	6cc0 <usleep@plt>
   213f8:	sub	sp, sp, #0xb0
   213fc:	str	x30, [sp, #160]
   21400:	mov	w0, #0x6                   	// #6
   21404:	bl	1ad00 <__sanitizer_set_report_fd@@Base+0x46bc>
   21408:	cbz	w0, 21430 <__sanitizer_sandbox_on_notify@@Base+0xdb0>
   2140c:	add	x0, sp, #0x8
   21410:	mov	w2, #0x98                  	// #152
   21414:	mov	w1, wzr
   21418:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2141c:	add	x1, sp, #0x8
   21420:	mov	w0, #0x6                   	// #6
   21424:	mov	x2, xzr
   21428:	str	xzr, [sp, #8]
   2142c:	bl	206bc <__sanitizer_sandbox_on_notify@@Base+0x3c>
   21430:	bl	6da0 <abort@plt>
   21434:	b	2ee98 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4b8>
   21438:	str	x30, [sp, #-16]!
   2143c:	bl	6b10 <isatty@plt>
   21440:	cmp	w0, #0x0
   21444:	cset	w0, ne  // ne = any
   21448:	ldr	x30, [sp], #16
   2144c:	ret
   21450:	sub	sp, sp, #0x40
   21454:	stp	x30, x19, [sp, #48]
   21458:	mov	x1, sp
   2145c:	mov	x0, xzr
   21460:	bl	6e20 <sigaltstack@plt>
   21464:	cbnz	w0, 214b0 <__sanitizer_sandbox_on_notify@@Base+0xe30>
   21468:	ldrb	w8, [sp, #8]
   2146c:	tbz	w8, #1, 214a4 <__sanitizer_sandbox_on_notify@@Base+0xe24>
   21470:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21474:	add	x1, x1, #0x2f1
   21478:	mov	w0, #0x10000               	// #65536
   2147c:	mov	w2, wzr
   21480:	mov	w19, #0x10000               	// #65536
   21484:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   21488:	str	x0, [sp, #24]
   2148c:	add	x0, sp, #0x18
   21490:	mov	x1, xzr
   21494:	str	wzr, [sp, #32]
   21498:	str	x19, [sp, #40]
   2149c:	bl	6e20 <sigaltstack@plt>
   214a0:	cbnz	w0, 214d0 <__sanitizer_sandbox_on_notify@@Base+0xe50>
   214a4:	ldp	x30, x19, [sp, #48]
   214a8:	add	sp, sp, #0x40
   214ac:	ret
   214b0:	sxtw	x4, w0
   214b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   214b8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   214bc:	add	x0, x0, #0x222
   214c0:	add	x2, x2, #0x2c4
   214c4:	mov	w1, #0xb0                  	// #176
   214c8:	mov	x3, xzr
   214cc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   214d0:	sxtw	x4, w0
   214d4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   214d8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   214dc:	add	x0, x0, #0x222
   214e0:	add	x2, x2, #0x309
   214e4:	mov	w1, #0xbb                  	// #187
   214e8:	mov	x3, xzr
   214ec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   214f0:	sub	sp, sp, #0x40
   214f4:	mov	w8, #0x2                   	// #2
   214f8:	mov	w9, #0x10000               	// #65536
   214fc:	add	x0, sp, #0x18
   21500:	mov	x1, sp
   21504:	str	xzr, [sp, #24]
   21508:	str	w8, [sp, #32]
   2150c:	stp	x9, x30, [sp, #40]
   21510:	bl	6e20 <sigaltstack@plt>
   21514:	cbnz	w0, 21530 <__sanitizer_sandbox_on_notify@@Base+0xeb0>
   21518:	ldr	x0, [sp]
   2151c:	ldr	x1, [sp, #16]
   21520:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   21524:	ldr	x30, [sp, #48]
   21528:	add	sp, sp, #0x40
   2152c:	ret
   21530:	sxtw	x4, w0
   21534:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21538:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2153c:	add	x0, x0, #0x222
   21540:	add	x2, x2, #0x336
   21544:	mov	w1, #0xc3                  	// #195
   21548:	mov	x3, xzr
   2154c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   21550:	stp	x30, x19, [sp, #-16]!
   21554:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21558:	ldr	x8, [x8, #4056]
   2155c:	mov	x19, x0
   21560:	ldrb	w8, [x8, #97]
   21564:	cbz	w8, 2156c <__sanitizer_sandbox_on_notify@@Base+0xeec>
   21568:	bl	21450 <__sanitizer_sandbox_on_notify@@Base+0xdd0>
   2156c:	mov	w0, #0xb                   	// #11
   21570:	mov	x1, x19
   21574:	bl	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   21578:	mov	w0, #0x7                   	// #7
   2157c:	mov	x1, x19
   21580:	bl	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   21584:	mov	w0, #0x6                   	// #6
   21588:	mov	x1, x19
   2158c:	bl	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   21590:	mov	w0, #0x8                   	// #8
   21594:	mov	x1, x19
   21598:	bl	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   2159c:	mov	w0, #0x4                   	// #4
   215a0:	mov	x1, x19
   215a4:	bl	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   215a8:	mov	w0, #0x5                   	// #5
   215ac:	mov	x1, x19
   215b0:	ldp	x30, x19, [sp], #16
   215b4:	b	215b8 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   215b8:	sub	sp, sp, #0xc0
   215bc:	str	x30, [sp, #160]
   215c0:	stp	x20, x19, [sp, #176]
   215c4:	mov	x20, x1
   215c8:	mov	w19, w0
   215cc:	bl	1ad00 <__sanitizer_set_report_fd@@Base+0x46bc>
   215d0:	cbz	w0, 21644 <__sanitizer_sandbox_on_notify@@Base+0xfc4>
   215d4:	add	x0, sp, #0x8
   215d8:	mov	w2, #0x98                  	// #152
   215dc:	mov	w1, wzr
   215e0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   215e4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   215e8:	ldr	x8, [x8, #4056]
   215ec:	mov	w9, #0x4                   	// #4
   215f0:	movk	w9, #0x4800, lsl #16
   215f4:	add	x1, sp, #0x8
   215f8:	ldrb	w8, [x8, #97]
   215fc:	mov	w0, w19
   21600:	mov	x2, xzr
   21604:	str	x20, [sp, #8]
   21608:	cmp	w8, #0x0
   2160c:	mov	w8, #0x4                   	// #4
   21610:	movk	w8, #0x4000, lsl #16
   21614:	csel	w8, w8, w9, eq  // eq = none
   21618:	str	w8, [sp, #144]
   2161c:	bl	206bc <__sanitizer_sandbox_on_notify@@Base+0x3c>
   21620:	cbnz	w0, 21654 <__sanitizer_sandbox_on_notify@@Base+0xfd4>
   21624:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21628:	ldr	x8, [x8, #3808]
   2162c:	ldr	w8, [x8]
   21630:	cbz	w8, 21644 <__sanitizer_sandbox_on_notify@@Base+0xfc4>
   21634:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21638:	add	x0, x0, #0x576
   2163c:	mov	w1, w19
   21640:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21644:	ldp	x20, x19, [sp, #176]
   21648:	ldr	x30, [sp, #160]
   2164c:	add	sp, sp, #0xc0
   21650:	ret
   21654:	sxtw	x4, w0
   21658:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2165c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21660:	add	x0, x0, #0x222
   21664:	add	x2, x2, #0x53c
   21668:	mov	w1, #0xd2                  	// #210
   2166c:	mov	x3, xzr
   21670:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   21674:	stp	x30, x21, [sp, #-32]!
   21678:	stp	x20, x19, [sp, #16]
   2167c:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21680:	ldr	x21, [x21, #4016]
   21684:	mov	x19, x0
   21688:	ldr	x20, [x19, #16]
   2168c:	ldr	x0, [x21]
   21690:	cbz	x0, 216a8 <__sanitizer_sandbox_on_notify@@Base+0x1028>
   21694:	ldr	x8, [x19, #32]
   21698:	add	x9, x0, x20
   2169c:	cmp	x9, x8
   216a0:	b.ls	21700 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.plast
   216a4:	b	216c0 <__sanitizer_sandbox_on_notify@@Base+0x1040>
   216a8:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   216ac:	str	x0, [x21]
   216b0:	ldr	x8, [x19, #32]
   216b4:	add	x9, x0, x20
   216b8:	cmp	x9, x8
   216bc:	b.ls	21700 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.plast
   216c0:	ldr	x9, [x19, #16]
   216c4:	mov	w10, #0xffff                	// #65535
   216c8:	add	x8, x8, x10
   216cc:	cmp	x9, x8
   216d0:	b.cs	21700 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.hs, b.nlast
   216d4:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   216d8:	ldr	x8, [x19]
   216dc:	ldr	x9, [x9, #3616]
   216e0:	ldr	w8, [x8, #8]
   216e4:	ldr	w9, [x9]
   216e8:	cmp	w8, w9
   216ec:	b.ne	21710 <__sanitizer_sandbox_on_notify@@Base+0x1090>  // b.any
   216f0:	mov	w0, #0x1                   	// #1
   216f4:	ldp	x20, x19, [sp, #16]
   216f8:	ldp	x30, x21, [sp], #32
   216fc:	ret
   21700:	mov	w0, wzr
   21704:	ldp	x20, x19, [sp, #16]
   21708:	ldp	x30, x21, [sp], #32
   2170c:	ret
   21710:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21714:	ldr	x9, [x9, #3640]
   21718:	ldr	w9, [x9]
   2171c:	cmp	w8, w9
   21720:	cset	w0, eq  // eq = none
   21724:	ldp	x20, x19, [sp, #16]
   21728:	ldp	x30, x21, [sp], #32
   2172c:	ret
   21730:	sub	sp, sp, #0x30
   21734:	stp	x30, x21, [sp, #16]
   21738:	stp	x20, x19, [sp, #32]
   2173c:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21740:	ldr	x21, [x21, #4016]
   21744:	mov	x19, x1
   21748:	mov	x20, x0
   2174c:	ldr	x8, [x21]
   21750:	cbnz	x8, 21760 <__sanitizer_sandbox_on_notify@@Base+0x10e0>
   21754:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   21758:	mov	x8, x0
   2175c:	str	x0, [x21]
   21760:	add	x8, x8, x8, lsl #2
   21764:	lsl	x4, x8, #1
   21768:	cmp	x4, x19
   2176c:	b.ls	217e4 <__sanitizer_sandbox_on_notify@@Base+0x1164>  // b.plast
   21770:	add	x0, sp, #0x8
   21774:	bl	6a30 <pipe@plt>
   21778:	cbz	w0, 21784 <__sanitizer_sandbox_on_notify@@Base+0x1104>
   2177c:	mov	w19, wzr
   21780:	b	217d0 <__sanitizer_sandbox_on_notify@@Base+0x1150>
   21784:	ldr	w0, [sp, #12]
   21788:	mov	x1, x20
   2178c:	mov	x2, x19
   21790:	bl	19ad8 <__sanitizer_set_report_fd@@Base+0x3494>
   21794:	add	x1, sp, #0x4
   21798:	mov	x20, x0
   2179c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   217a0:	tbz	w0, #0, 217b8 <__sanitizer_sandbox_on_notify@@Base+0x1138>
   217a4:	ldrsw	x4, [sp, #4]
   217a8:	cmp	w4, #0xe
   217ac:	b.ne	21800 <__sanitizer_sandbox_on_notify@@Base+0x1180>  // b.any
   217b0:	mov	w19, wzr
   217b4:	b	217c0 <__sanitizer_sandbox_on_notify@@Base+0x1140>
   217b8:	cmp	x20, x19
   217bc:	cset	w19, eq  // eq = none
   217c0:	ldr	w0, [sp, #8]
   217c4:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   217c8:	ldr	w0, [sp, #12]
   217cc:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   217d0:	mov	w0, w19
   217d4:	ldp	x20, x19, [sp, #32]
   217d8:	ldp	x30, x21, [sp, #16]
   217dc:	add	sp, sp, #0x30
   217e0:	ret
   217e4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   217e8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   217ec:	add	x0, x0, #0x222
   217f0:	add	x2, x2, #0x365
   217f4:	mov	w1, #0x118                 	// #280
   217f8:	mov	x3, x19
   217fc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   21800:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21804:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21808:	add	x0, x0, #0x222
   2180c:	add	x2, x2, #0x383
   21810:	mov	w1, #0x121                 	// #289
   21814:	mov	w3, #0xe                   	// #14
   21818:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2181c:	b	1d50c <__sanitizer_on_print@@Base+0xabc>
   21820:	str	x30, [sp, #-48]!
   21824:	stp	x22, x21, [sp, #16]
   21828:	stp	x20, x19, [sp, #32]
   2182c:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21830:	ldr	x22, [x22, #4016]
   21834:	mov	x19, x2
   21838:	mov	x20, x1
   2183c:	mov	x21, x0
   21840:	ldr	x8, [x22]
   21844:	cbnz	x8, 21854 <__sanitizer_sandbox_on_notify@@Base+0x11d4>
   21848:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   2184c:	mov	x8, x0
   21850:	str	x0, [x22]
   21854:	sub	x9, x8, #0x1
   21858:	tst	x8, x9
   2185c:	b.ne	21900 <__sanitizer_sandbox_on_notify@@Base+0x1280>  // b.any
   21860:	add	x9, x20, x8
   21864:	sub	x10, x9, #0x1
   21868:	neg	x9, x8
   2186c:	and	x20, x10, x9
   21870:	cbnz	x8, 21880 <__sanitizer_sandbox_on_notify@@Base+0x1200>
   21874:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   21878:	neg	x9, x0
   2187c:	str	x0, [x22]
   21880:	and	x21, x9, x21
   21884:	mov	w2, #0x3                   	// #3
   21888:	mov	w3, #0x4032                	// #16434
   2188c:	mov	x0, x21
   21890:	mov	x1, x20
   21894:	mov	x4, x19
   21898:	bl	1b3b8 <__sanitizer_set_report_fd@@Base+0x4d74>
   2189c:	add	x1, sp, #0xc
   218a0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   218a4:	tbz	w0, #0, 218e4 <__sanitizer_sandbox_on_notify@@Base+0x1264>
   218a8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   218ac:	ldr	x8, [x8, #4024]
   218b0:	ldr	w5, [sp, #12]
   218b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   218b8:	add	x0, x0, #0x59d
   218bc:	ldr	x1, [x8]
   218c0:	mov	x2, x20
   218c4:	mov	x3, x20
   218c8:	mov	x4, x21
   218cc:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   218d0:	mov	w0, wzr
   218d4:	ldp	x20, x19, [sp, #32]
   218d8:	ldp	x22, x21, [sp, #16]
   218dc:	ldr	x30, [sp], #48
   218e0:	ret
   218e4:	mov	x0, x20
   218e8:	bl	13bd8 <__sanitizer_report_error_summary@@Base+0x388>
   218ec:	mov	w0, #0x1                   	// #1
   218f0:	ldp	x20, x19, [sp, #32]
   218f4:	ldp	x22, x21, [sp, #16]
   218f8:	ldr	x30, [sp], #48
   218fc:	ret
   21900:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   21904:	add	x0, x0, #0x20f
   21908:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   2190c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   21910:	stp	x30, x21, [sp, #-32]!
   21914:	stp	x20, x19, [sp, #16]
   21918:	mov	x19, x1
   2191c:	mov	x20, x0
   21920:	bl	21820 <__sanitizer_sandbox_on_notify@@Base+0x11a0>
   21924:	mov	w21, w0
   21928:	tbz	w0, #0, 21950 <__sanitizer_sandbox_on_notify@@Base+0x12d0>
   2192c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21930:	ldr	x8, [x8, #4056]
   21934:	mov	x0, x20
   21938:	mov	x1, x19
   2193c:	ldrb	w8, [x8, #208]
   21940:	cmp	w8, #0x0
   21944:	mov	w8, #0xe                   	// #14
   21948:	cinc	w2, w8, ne  // ne = any
   2194c:	bl	6cb0 <madvise@plt>
   21950:	ldp	x20, x19, [sp, #16]
   21954:	and	w0, w21, #0x1
   21958:	ldp	x30, x21, [sp], #32
   2195c:	ret
   21960:	stp	x30, x21, [sp, #-32]!
   21964:	stp	x20, x19, [sp, #16]
   21968:	mov	x19, x2
   2196c:	mov	x21, x1
   21970:	mov	x20, x0
   21974:	cbz	x3, 21998 <__sanitizer_sandbox_on_notify@@Base+0x1318>
   21978:	mov	x8, x3
   2197c:	mov	w3, #0x4032                	// #16434
   21980:	mov	x0, x8
   21984:	mov	x1, x21
   21988:	mov	w2, wzr
   2198c:	mov	x4, x19
   21990:	bl	1b3b8 <__sanitizer_set_report_fd@@Base+0x4d74>
   21994:	b	219b4 <__sanitizer_sandbox_on_notify@@Base+0x1334>
   21998:	mov	w3, #0x4022                	// #16418
   2199c:	mov	w4, #0xffffffff            	// #-1
   219a0:	mov	x0, xzr
   219a4:	mov	x1, x21
   219a8:	mov	w2, wzr
   219ac:	mov	x5, xzr
   219b0:	bl	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   219b4:	stp	x0, x21, [x20]
   219b8:	str	x19, [x20, #16]
   219bc:	ldp	x20, x19, [sp, #16]
   219c0:	ldp	x30, x21, [sp], #32
   219c4:	ret
   219c8:	mov	x4, x2
   219cc:	mov	w3, #0x4032                	// #16434
   219d0:	mov	w2, wzr
   219d4:	b	1b3b8 <__sanitizer_set_report_fd@@Base+0x4d74>
   219d8:	mov	w3, #0x4022                	// #16418
   219dc:	mov	w4, #0xffffffff            	// #-1
   219e0:	mov	x1, x0
   219e4:	mov	x0, xzr
   219e8:	mov	w2, wzr
   219ec:	mov	x5, xzr
   219f0:	b	19a30 <__sanitizer_set_report_fd@@Base+0x33ec>
   219f4:	mov	x0, x1
   219f8:	mov	x1, x2
   219fc:	mov	x2, x3
   21a00:	b	1b944 <__sanitizer_set_report_fd@@Base+0x5300>
   21a04:	mov	x0, x1
   21a08:	mov	x1, x2
   21a0c:	mov	x2, x3
   21a10:	b	1b800 <__sanitizer_set_report_fd@@Base+0x51bc>
   21a14:	str	x30, [sp, #-16]!
   21a18:	ldr	x4, [x0, #8]
   21a1c:	mov	x8, x2
   21a20:	subs	x9, x4, x2
   21a24:	b.cc	21a6c <__sanitizer_sandbox_on_notify@@Base+0x13ec>  // b.lo, b.ul, b.last
   21a28:	ldr	x10, [x0]
   21a2c:	cmp	x10, x1
   21a30:	b.ne	21a48 <__sanitizer_sandbox_on_notify@@Base+0x13c8>  // b.any
   21a34:	add	x10, x8, x1
   21a38:	cmp	x4, x8
   21a3c:	csel	x10, xzr, x10, eq  // eq = none
   21a40:	str	x10, [x0]
   21a44:	b	21a58 <__sanitizer_sandbox_on_notify@@Base+0x13d8>
   21a48:	add	x3, x8, x1
   21a4c:	add	x4, x10, x4
   21a50:	cmp	x3, x4
   21a54:	b.ne	21a88 <__sanitizer_sandbox_on_notify@@Base+0x1408>  // b.any
   21a58:	str	x9, [x0, #8]
   21a5c:	mov	x0, x1
   21a60:	mov	x1, x8
   21a64:	ldr	x30, [sp], #16
   21a68:	b	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   21a6c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21a70:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21a74:	add	x0, x0, #0x222
   21a78:	add	x2, x2, #0x39d
   21a7c:	mov	w1, #0x16d                 	// #365
   21a80:	mov	x3, x8
   21a84:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   21a88:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21a8c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21a90:	add	x0, x0, #0x222
   21a94:	add	x2, x2, #0x3b3
   21a98:	mov	w1, #0x172                 	// #370
   21a9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   21aa0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21aa4:	ldr	x8, [x8, #3720]
   21aa8:	cbz	x8, 21abc <__sanitizer_sandbox_on_notify@@Base+0x143c>
   21aac:	str	x30, [sp, #-16]!
   21ab0:	bl	6ac0 <real_pthread_attr_getstack@plt>
   21ab4:	ldr	x30, [sp], #16
   21ab8:	ret
   21abc:	b	6c70 <pthread_attr_getstack@plt>
   21ac0:	sub	sp, sp, #0x40
   21ac4:	stp	x30, xzr, [sp, #16]
   21ac8:	stp	x22, x21, [sp, #32]
   21acc:	stp	x20, x19, [sp, #48]
   21ad0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21ad4:	ldr	x8, [x8, #3720]
   21ad8:	mov	x19, x0
   21adc:	add	x1, sp, #0x18
   21ae0:	add	x2, sp, #0x8
   21ae4:	str	xzr, [sp, #8]
   21ae8:	cbz	x8, 21af4 <__sanitizer_sandbox_on_notify@@Base+0x1474>
   21aec:	bl	6ac0 <real_pthread_attr_getstack@plt>
   21af0:	b	21af8 <__sanitizer_sandbox_on_notify@@Base+0x1478>
   21af4:	bl	6c70 <pthread_attr_getstack@plt>
   21af8:	ldr	x21, [sp, #24]
   21afc:	ldr	x22, [sp, #8]
   21b00:	bl	20a3c <__sanitizer_sandbox_on_notify@@Base+0x3bc>
   21b04:	ldr	x1, [sp, #8]
   21b08:	add	x20, x0, #0x20, lsl #12
   21b0c:	cmp	x1, x20
   21b10:	b.cs	21b74 <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.hs, b.nlast
   21b14:	cbz	x21, 21b44 <__sanitizer_sandbox_on_notify@@Base+0x14c4>
   21b18:	neg	x8, x22
   21b1c:	cmp	x21, x8
   21b20:	b.eq	21b44 <__sanitizer_sandbox_on_notify@@Base+0x14c4>  // b.none
   21b24:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21b28:	add	x0, x0, #0x41a
   21b2c:	mov	x2, x20
   21b30:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   21b34:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21b38:	add	x0, x0, #0x45a
   21b3c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   21b40:	b	21b74 <__sanitizer_sandbox_on_notify@@Base+0x14f4>
   21b44:	cbz	x1, 21b74 <__sanitizer_sandbox_on_notify@@Base+0x14f4>
   21b48:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21b4c:	ldr	x8, [x8, #3808]
   21b50:	ldr	w8, [x8]
   21b54:	cbz	w8, 21b68 <__sanitizer_sandbox_on_notify@@Base+0x14e8>
   21b58:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21b5c:	add	x0, x0, #0x3f0
   21b60:	mov	x2, x20
   21b64:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   21b68:	mov	x0, x19
   21b6c:	mov	x1, x20
   21b70:	bl	6c90 <pthread_attr_setstacksize@plt>
   21b74:	ldp	x20, x19, [sp, #48]
   21b78:	ldp	x22, x21, [sp, #32]
   21b7c:	ldr	x30, [sp, #16]
   21b80:	add	sp, sp, #0x40
   21b84:	ret
   21b88:	str	x30, [sp, #-64]!
   21b8c:	stp	x24, x23, [sp, #16]
   21b90:	stp	x22, x21, [sp, #32]
   21b94:	stp	x20, x19, [sp, #48]
   21b98:	mov	w19, w4
   21b9c:	mov	w22, w3
   21ba0:	mov	w23, w2
   21ba4:	mov	x20, x1
   21ba8:	mov	x21, x0
   21bac:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x3cc4>
   21bb0:	mov	w24, w0
   21bb4:	tbnz	w0, #31, 21c30 <__sanitizer_sandbox_on_notify@@Base+0x15b0>
   21bb8:	cbnz	w24, 21c50 <__sanitizer_sandbox_on_notify@@Base+0x15d0>
   21bbc:	cmn	w23, #0x1
   21bc0:	b.ne	21c98 <__sanitizer_sandbox_on_notify@@Base+0x1618>  // b.any
   21bc4:	cmn	w22, #0x1
   21bc8:	b.ne	21cbc <__sanitizer_sandbox_on_notify@@Base+0x163c>  // b.any
   21bcc:	cmn	w19, #0x1
   21bd0:	b.eq	21bf0 <__sanitizer_sandbox_on_notify@@Base+0x1570>  // b.none
   21bd4:	mov	w0, #0x2                   	// #2
   21bd8:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21bdc:	mov	w1, #0x2                   	// #2
   21be0:	mov	w0, w19
   21be4:	bl	19ba0 <__sanitizer_set_report_fd@@Base+0x355c>
   21be8:	mov	w0, w19
   21bec:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21bf0:	mov	w0, #0x4                   	// #4
   21bf4:	bl	6dc0 <sysconf@plt>
   21bf8:	mov	x19, x0
   21bfc:	cmp	w19, #0x3
   21c00:	b.lt	21c1c <__sanitizer_sandbox_on_notify@@Base+0x159c>  // b.tstop
   21c04:	mov	w0, w19
   21c08:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21c0c:	sub	w8, w19, #0x1
   21c10:	cmp	w19, #0x3
   21c14:	mov	w19, w8
   21c18:	b.gt	21c04 <__sanitizer_sandbox_on_notify@@Base+0x1584>
   21c1c:	mov	x0, x21
   21c20:	mov	x1, x20
   21c24:	bl	6a20 <execv@plt>
   21c28:	mov	w0, #0x1                   	// #1
   21c2c:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>
   21c30:	sxtw	x0, w24
   21c34:	add	x1, sp, #0xc
   21c38:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21c3c:	tbz	w0, #0, 21c50 <__sanitizer_sandbox_on_notify@@Base+0x15d0>
   21c40:	ldr	w1, [sp, #12]
   21c44:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21c48:	add	x0, x0, #0x488
   21c4c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21c50:	cmn	w23, #0x1
   21c54:	b.eq	21c60 <__sanitizer_sandbox_on_notify@@Base+0x15e0>  // b.none
   21c58:	mov	w0, w23
   21c5c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21c60:	cmn	w22, #0x1
   21c64:	b.eq	21c70 <__sanitizer_sandbox_on_notify@@Base+0x15f0>  // b.none
   21c68:	mov	w0, w22
   21c6c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21c70:	cmn	w19, #0x1
   21c74:	b.eq	21c80 <__sanitizer_sandbox_on_notify@@Base+0x1600>  // b.none
   21c78:	mov	w0, w19
   21c7c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21c80:	mov	w0, w24
   21c84:	ldp	x20, x19, [sp, #48]
   21c88:	ldp	x22, x21, [sp, #32]
   21c8c:	ldp	x24, x23, [sp, #16]
   21c90:	ldr	x30, [sp], #64
   21c94:	ret
   21c98:	mov	w0, wzr
   21c9c:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21ca0:	mov	w0, w23
   21ca4:	mov	w1, wzr
   21ca8:	bl	19ba0 <__sanitizer_set_report_fd@@Base+0x355c>
   21cac:	mov	w0, w23
   21cb0:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21cb4:	cmn	w22, #0x1
   21cb8:	b.eq	21bcc <__sanitizer_sandbox_on_notify@@Base+0x154c>  // b.none
   21cbc:	mov	w0, #0x1                   	// #1
   21cc0:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21cc4:	mov	w1, #0x1                   	// #1
   21cc8:	mov	w0, w22
   21ccc:	bl	19ba0 <__sanitizer_set_report_fd@@Base+0x355c>
   21cd0:	mov	w0, w22
   21cd4:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   21cd8:	cmn	w19, #0x1
   21cdc:	b.ne	21bd4 <__sanitizer_sandbox_on_notify@@Base+0x1554>  // b.any
   21ce0:	b	21bf0 <__sanitizer_sandbox_on_notify@@Base+0x1570>
   21ce4:	sub	sp, sp, #0x20
   21ce8:	stp	x30, x19, [sp, #16]
   21cec:	add	x1, sp, #0xc
   21cf0:	mov	w2, #0x1                   	// #1
   21cf4:	bl	1a294 <__sanitizer_set_report_fd@@Base+0x3c50>
   21cf8:	add	x1, sp, #0x8
   21cfc:	mov	x19, x0
   21d00:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21d04:	tbz	w0, #0, 21d38 <__sanitizer_sandbox_on_notify@@Base+0x16b8>
   21d08:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21d0c:	ldr	x8, [x8, #3808]
   21d10:	ldr	w8, [x8]
   21d14:	cbz	w8, 21d4c <__sanitizer_sandbox_on_notify@@Base+0x16cc>
   21d18:	ldr	w1, [sp, #8]
   21d1c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21d20:	add	x0, x0, #0x4ac
   21d24:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21d28:	mov	w0, wzr
   21d2c:	ldp	x30, x19, [sp, #16]
   21d30:	add	sp, sp, #0x20
   21d34:	ret
   21d38:	cmp	x19, #0x0
   21d3c:	cset	w0, eq  // eq = none
   21d40:	ldp	x30, x19, [sp, #16]
   21d44:	add	sp, sp, #0x20
   21d48:	ret
   21d4c:	mov	w0, wzr
   21d50:	ldp	x30, x19, [sp, #16]
   21d54:	add	sp, sp, #0x20
   21d58:	ret
   21d5c:	str	x30, [sp, #-16]!
   21d60:	add	x1, sp, #0xc
   21d64:	mov	w2, wzr
   21d68:	bl	1a294 <__sanitizer_set_report_fd@@Base+0x3c50>
   21d6c:	add	x1, sp, #0x8
   21d70:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21d74:	tbz	w0, #0, 21da4 <__sanitizer_sandbox_on_notify@@Base+0x1724>
   21d78:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21d7c:	ldr	x8, [x8, #3808]
   21d80:	ldr	w8, [x8]
   21d84:	cbz	w8, 21db0 <__sanitizer_sandbox_on_notify@@Base+0x1730>
   21d88:	ldr	w1, [sp, #8]
   21d8c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21d90:	add	x0, x0, #0x4ac
   21d94:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21d98:	mov	w0, #0xffffffff            	// #-1
   21d9c:	ldr	x30, [sp], #16
   21da0:	ret
   21da4:	ldr	w0, [sp, #12]
   21da8:	ldr	x30, [sp], #16
   21dac:	ret
   21db0:	mov	w0, #0xffffffff            	// #-1
   21db4:	ldr	x30, [sp], #16
   21db8:	ret
   21dbc:	cmp	w0, #0x1
   21dc0:	cset	w0, eq  // eq = none
   21dc4:	ret
   21dc8:	sub	sp, sp, #0x40
   21dcc:	str	x30, [sp, #16]
   21dd0:	stp	x22, x21, [sp, #32]
   21dd4:	stp	x20, x19, [sp, #48]
   21dd8:	ldr	x8, [x0, #32]
   21ddc:	mov	x20, x0
   21de0:	mov	x19, x1
   21de4:	cbz	x8, 21e04 <__sanitizer_sandbox_on_notify@@Base+0x1784>
   21de8:	ldr	x9, [x20, #16]
   21dec:	ldr	x10, [x9]
   21df0:	cmp	x10, x19
   21df4:	b.eq	21f18 <__sanitizer_sandbox_on_notify@@Base+0x1898>  // b.none
   21df8:	subs	x8, x8, #0x1
   21dfc:	add	x9, x9, #0x8
   21e00:	b.ne	21dec <__sanitizer_sandbox_on_notify@@Base+0x176c>  // b.any
   21e04:	mov	w0, #0x10                  	// #16
   21e08:	mov	w1, w19
   21e0c:	mov	x2, xzr
   21e10:	mov	x3, xzr
   21e14:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   21e18:	add	x1, sp, #0xc
   21e1c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21e20:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21e24:	ldr	x22, [x22, #3808]
   21e28:	ldr	w8, [x22]
   21e2c:	tbz	w0, #0, 21e4c <__sanitizer_sandbox_on_notify@@Base+0x17cc>
   21e30:	cbz	w8, 21f18 <__sanitizer_sandbox_on_notify@@Base+0x1898>
   21e34:	ldr	w2, [sp, #12]
   21e38:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21e3c:	add	x0, x0, #0x5e8
   21e40:	mov	x1, x19
   21e44:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21e48:	b	21f18 <__sanitizer_sandbox_on_notify@@Base+0x1898>
   21e4c:	cmp	w8, #0x2
   21e50:	b.cc	21e64 <__sanitizer_sandbox_on_notify@@Base+0x17e4>  // b.lo, b.ul, b.last
   21e54:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21e58:	add	x0, x0, #0x614
   21e5c:	mov	x1, x19
   21e60:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21e64:	add	x1, sp, #0x18
   21e68:	mov	w2, #0x40000000            	// #1073741824
   21e6c:	mov	w0, w19
   21e70:	bl	1a294 <__sanitizer_set_report_fd@@Base+0x3c50>
   21e74:	add	x1, sp, #0x8
   21e78:	mov	x21, x0
   21e7c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21e80:	tbz	w0, #0, 21e90 <__sanitizer_sandbox_on_notify@@Base+0x1810>
   21e84:	ldr	w8, [sp, #8]
   21e88:	cmp	w8, #0x4
   21e8c:	b.eq	21e64 <__sanitizer_sandbox_on_notify@@Base+0x17e4>  // b.none
   21e90:	add	x1, sp, #0x8
   21e94:	mov	x0, x21
   21e98:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21e9c:	tbnz	w0, #0, 21ee8 <__sanitizer_sandbox_on_notify@@Base+0x1868>
   21ea0:	ldr	w8, [sp, #24]
   21ea4:	and	w9, w8, #0xff
   21ea8:	cmp	w9, #0x7f
   21eac:	b.ne	21ed0 <__sanitizer_sandbox_on_notify@@Base+0x1850>  // b.any
   21eb0:	ubfx	x3, x8, #8, #8
   21eb4:	cmp	w3, #0x13
   21eb8:	b.eq	21ed0 <__sanitizer_sandbox_on_notify@@Base+0x1850>  // b.none
   21ebc:	mov	w0, #0x7                   	// #7
   21ec0:	mov	w1, w19
   21ec4:	mov	x2, xzr
   21ec8:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   21ecc:	b	21e64 <__sanitizer_sandbox_on_notify@@Base+0x17e4>
   21ed0:	add	x0, x20, #0x10
   21ed4:	add	x1, sp, #0x18
   21ed8:	str	x19, [sp, #24]
   21edc:	bl	1afbc <__sanitizer_set_report_fd@@Base+0x4978>
   21ee0:	mov	w0, #0x1                   	// #1
   21ee4:	b	21f1c <__sanitizer_sandbox_on_notify@@Base+0x189c>
   21ee8:	ldr	w8, [x22]
   21eec:	cbz	w8, 21f04 <__sanitizer_sandbox_on_notify@@Base+0x1884>
   21ef0:	ldr	w2, [sp, #8]
   21ef4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21ef8:	add	x0, x0, #0x62d
   21efc:	mov	x1, x19
   21f00:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   21f04:	mov	w0, #0x11                  	// #17
   21f08:	mov	w1, w19
   21f0c:	mov	x2, xzr
   21f10:	mov	x3, xzr
   21f14:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   21f18:	mov	w0, wzr
   21f1c:	ldp	x20, x19, [sp, #48]
   21f20:	ldp	x22, x21, [sp, #32]
   21f24:	ldr	x30, [sp, #16]
   21f28:	add	sp, sp, #0x40
   21f2c:	ret
   21f30:	ldr	x8, [x0, #24]
   21f34:	cbz	x8, 21f58 <__sanitizer_sandbox_on_notify@@Base+0x18d8>
   21f38:	ldr	x9, [x0, #8]
   21f3c:	mov	x10, xzr
   21f40:	ldr	x11, [x9, x10, lsl #3]
   21f44:	cmp	x11, x1
   21f48:	b.eq	21f60 <__sanitizer_sandbox_on_notify@@Base+0x18e0>  // b.none
   21f4c:	add	x10, x10, #0x1
   21f50:	cmp	x10, x8
   21f54:	b.cc	21f40 <__sanitizer_sandbox_on_notify@@Base+0x18c0>  // b.lo, b.ul, b.last
   21f58:	mov	w0, wzr
   21f5c:	ret
   21f60:	mov	w0, #0x1                   	// #1
   21f64:	ret
   21f68:	str	x30, [sp, #-16]!
   21f6c:	str	x1, [sp, #8]
   21f70:	add	x0, x0, #0x8
   21f74:	add	x1, sp, #0x8
   21f78:	bl	1afbc <__sanitizer_set_report_fd@@Base+0x4978>
   21f7c:	ldr	x30, [sp], #16
   21f80:	ret
   21f84:	str	x30, [sp, #-64]!
   21f88:	stp	x24, x23, [sp, #16]
   21f8c:	stp	x22, x21, [sp, #32]
   21f90:	stp	x20, x19, [sp, #48]
   21f94:	ldr	x8, [x0, #32]
   21f98:	cbz	x8, 2202c <__sanitizer_sandbox_on_notify@@Base+0x19ac>
   21f9c:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   21fa0:	ldr	x24, [x24, #3808]
   21fa4:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21fa8:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   21fac:	mov	x19, x0
   21fb0:	mov	x23, xzr
   21fb4:	add	x20, x20, #0x67c
   21fb8:	add	x21, x21, #0x662
   21fbc:	b	21fd0 <__sanitizer_sandbox_on_notify@@Base+0x1950>
   21fc0:	ldr	x8, [x19, #32]
   21fc4:	add	x23, x23, #0x1
   21fc8:	cmp	x23, x8
   21fcc:	b.cs	2202c <__sanitizer_sandbox_on_notify@@Base+0x19ac>  // b.hs, b.nlast
   21fd0:	ldr	x8, [x19, #16]
   21fd4:	mov	w0, #0x11                  	// #17
   21fd8:	mov	x2, xzr
   21fdc:	mov	x3, xzr
   21fe0:	ldr	x22, [x8, x23, lsl #3]
   21fe4:	mov	w1, w22
   21fe8:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   21fec:	add	x1, sp, #0xc
   21ff0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   21ff4:	ldr	w8, [x24]
   21ff8:	tbz	w0, #0, 22014 <__sanitizer_sandbox_on_notify@@Base+0x1994>
   21ffc:	cbz	w8, 21fc0 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   22000:	ldr	w2, [sp, #12]
   22004:	mov	x0, x20
   22008:	mov	w1, w22
   2200c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22010:	b	21fc0 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   22014:	cmp	w8, #0x2
   22018:	b.cc	21fc0 <__sanitizer_sandbox_on_notify@@Base+0x1940>  // b.lo, b.ul, b.last
   2201c:	mov	x0, x21
   22020:	mov	w1, w22
   22024:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22028:	b	21fc0 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   2202c:	ldp	x20, x19, [sp, #48]
   22030:	ldp	x22, x21, [sp, #32]
   22034:	ldp	x24, x23, [sp, #16]
   22038:	ldr	x30, [sp], #64
   2203c:	ret
   22040:	ldr	x0, [x0, #24]
   22044:	ret
   22048:	str	x30, [sp, #-16]!
   2204c:	ldr	x4, [x0, #24]
   22050:	mov	x3, x1
   22054:	cmp	x4, x1
   22058:	b.ls	2206c <__sanitizer_sandbox_on_notify@@Base+0x19ec>  // b.plast
   2205c:	ldr	x8, [x0, #8]
   22060:	ldr	x0, [x8, x3, lsl #3]
   22064:	ldr	x30, [sp], #16
   22068:	ret
   2206c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22070:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22074:	add	x0, x0, #0x6a9
   22078:	add	x2, x2, #0x77e
   2207c:	mov	w1, #0x204                 	// #516
   22080:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   22084:	str	x30, [sp, #-32]!
   22088:	stp	x20, x19, [sp, #16]
   2208c:	ldr	x8, [x0, #32]
   22090:	cbz	x8, 220c4 <__sanitizer_sandbox_on_notify@@Base+0x1a44>
   22094:	mov	x19, x0
   22098:	mov	x20, xzr
   2209c:	ldr	x8, [x19, #16]
   220a0:	mov	w0, #0x8                   	// #8
   220a4:	mov	x2, xzr
   220a8:	mov	x3, xzr
   220ac:	ldr	x1, [x8, x20, lsl #3]
   220b0:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   220b4:	ldr	x8, [x19, #32]
   220b8:	add	x20, x20, #0x1
   220bc:	cmp	x20, x8
   220c0:	b.cc	2209c <__sanitizer_sandbox_on_notify@@Base+0x1a1c>  // b.lo, b.ul, b.last
   220c4:	ldp	x20, x19, [sp, #16]
   220c8:	ldr	x30, [sp], #32
   220cc:	ret
   220d0:	sub	sp, sp, #0x80
   220d4:	str	x30, [sp, #64]
   220d8:	stp	x24, x23, [sp, #80]
   220dc:	stp	x22, x21, [sp, #96]
   220e0:	stp	x20, x19, [sp, #112]
   220e4:	ldr	w1, [x0, #40]
   220e8:	mov	x19, x0
   220ec:	add	x0, sp, #0x20
   220f0:	bl	1a4cc <__sanitizer_set_report_fd@@Base+0x3e88>
   220f4:	add	x0, sp, #0x8
   220f8:	mov	w1, #0x80                  	// #128
   220fc:	stp	xzr, xzr, [sp, #16]
   22100:	str	xzr, [sp, #8]
   22104:	bl	1b1c8 <__sanitizer_set_report_fd@@Base+0x4b84>
   22108:	mov	w20, wzr
   2210c:	add	x0, sp, #0x20
   22110:	add	x1, sp, #0x8
   22114:	bl	1a5a4 <__sanitizer_set_report_fd@@Base+0x3f60>
   22118:	cmp	w0, #0x1
   2211c:	b.eq	22134 <__sanitizer_sandbox_on_notify@@Base+0x1ab4>  // b.none
   22120:	cbz	w0, 22184 <__sanitizer_sandbox_on_notify@@Base+0x1b04>
   22124:	mov	w21, wzr
   22128:	ldr	x8, [sp, #24]
   2212c:	cbnz	x8, 22140 <__sanitizer_sandbox_on_notify@@Base+0x1ac0>
   22130:	b	22164 <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   22134:	mov	w21, #0x1                   	// #1
   22138:	ldr	x8, [sp, #24]
   2213c:	cbz	x8, 22164 <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   22140:	ldr	x22, [sp, #8]
   22144:	lsl	x23, x8, #3
   22148:	ldr	x1, [x22], #8
   2214c:	mov	x0, x19
   22150:	bl	21dc8 <__sanitizer_sandbox_on_notify@@Base+0x1748>
   22154:	tst	w0, #0x1
   22158:	csinc	w21, w21, wzr, eq  // eq = none
   2215c:	subs	x23, x23, #0x8
   22160:	b.ne	22148 <__sanitizer_sandbox_on_notify@@Base+0x1ac8>  // b.any
   22164:	cmp	w20, #0x1c
   22168:	b.hi	22174 <__sanitizer_sandbox_on_notify@@Base+0x1af4>  // b.pmore
   2216c:	add	w20, w20, #0x1
   22170:	tbnz	w21, #0, 2210c <__sanitizer_sandbox_on_notify@@Base+0x1a8c>
   22174:	ldr	x8, [x19, #32]
   22178:	cmp	x8, #0x0
   2217c:	cset	w19, ne  // ne = any
   22180:	b	2221c <__sanitizer_sandbox_on_notify@@Base+0x1b9c>
   22184:	ldr	x8, [x19, #32]
   22188:	cbz	x8, 22218 <__sanitizer_sandbox_on_notify@@Base+0x1b98>
   2218c:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22190:	ldr	x24, [x24, #3808]
   22194:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22198:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2219c:	mov	x23, xzr
   221a0:	add	x20, x20, #0x67c
   221a4:	add	x21, x21, #0x662
   221a8:	b	221bc <__sanitizer_sandbox_on_notify@@Base+0x1b3c>
   221ac:	ldr	x8, [x19, #32]
   221b0:	add	x23, x23, #0x1
   221b4:	cmp	x23, x8
   221b8:	b.cs	22218 <__sanitizer_sandbox_on_notify@@Base+0x1b98>  // b.hs, b.nlast
   221bc:	ldr	x8, [x19, #16]
   221c0:	mov	w0, #0x11                  	// #17
   221c4:	mov	x2, xzr
   221c8:	mov	x3, xzr
   221cc:	ldr	x22, [x8, x23, lsl #3]
   221d0:	mov	w1, w22
   221d4:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   221d8:	add	x1, sp, #0x4c
   221dc:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   221e0:	ldr	w8, [x24]
   221e4:	tbz	w0, #0, 22200 <__sanitizer_sandbox_on_notify@@Base+0x1b80>
   221e8:	cbz	w8, 221ac <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   221ec:	ldr	w2, [sp, #76]
   221f0:	mov	x0, x20
   221f4:	mov	w1, w22
   221f8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   221fc:	b	221ac <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   22200:	cmp	w8, #0x2
   22204:	b.cc	221ac <__sanitizer_sandbox_on_notify@@Base+0x1b2c>  // b.lo, b.ul, b.last
   22208:	mov	x0, x21
   2220c:	mov	w1, w22
   22210:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22214:	b	221ac <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   22218:	mov	w19, wzr
   2221c:	ldp	x0, x1, [sp, #8]
   22220:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   22224:	add	x0, sp, #0x20
   22228:	bl	1a844 <__sanitizer_set_report_fd@@Base+0x4200>
   2222c:	mov	w0, w19
   22230:	ldp	x20, x19, [sp, #112]
   22234:	ldp	x22, x21, [sp, #96]
   22238:	ldp	x24, x23, [sp, #80]
   2223c:	ldr	x30, [sp, #64]
   22240:	add	sp, sp, #0x80
   22244:	ret
   22248:	sub	sp, sp, #0xc0
   2224c:	stp	x30, x25, [sp, #128]
   22250:	stp	x24, x23, [sp, #144]
   22254:	stp	x22, x21, [sp, #160]
   22258:	stp	x20, x19, [sp, #176]
   2225c:	mov	x20, x1
   22260:	mov	x21, x0
   22264:	mov	w0, #0x3                   	// #3
   22268:	mov	x1, xzr
   2226c:	mov	x2, xzr
   22270:	mov	x3, xzr
   22274:	mov	x4, xzr
   22278:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
   2227c:	mov	x19, x0
   22280:	cbnz	w19, 2229c <__sanitizer_sandbox_on_notify@@Base+0x1c1c>
   22284:	mov	w0, #0x4                   	// #4
   22288:	mov	w1, #0x1                   	// #1
   2228c:	mov	x2, xzr
   22290:	mov	x3, xzr
   22294:	mov	x4, xzr
   22298:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
   2229c:	add	x8, sp, #0x8
   222a0:	add	x22, x8, #0x10
   222a4:	mov	x0, x22
   222a8:	bl	1a144 <__sanitizer_set_report_fd@@Base+0x3b00>
   222ac:	stp	x21, x20, [sp, #8]
   222b0:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   222b4:	str	x0, [sp, #120]
   222b8:	str	xzr, [sp, #112]
   222bc:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   222c0:	ldr	x20, [x20, #4016]
   222c4:	ldr	x23, [x20]
   222c8:	cbnz	x23, 222d8 <__sanitizer_sandbox_on_notify@@Base+0x1c58>
   222cc:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   222d0:	mov	x23, x0
   222d4:	str	x0, [x20]
   222d8:	add	x20, x23, #0x200, lsl #12
   222dc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   222e0:	add	x1, x1, #0x7d5
   222e4:	mov	x0, x20
   222e8:	mov	w2, wzr
   222ec:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   222f0:	mov	x1, x23
   222f4:	mov	x21, x0
   222f8:	bl	1b950 <__sanitizer_set_report_fd@@Base+0x530c>
   222fc:	tbz	w0, #0, 224fc <__sanitizer_sandbox_on_notify@@Base+0x1e7c>
   22300:	mov	x0, x22
   22304:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   22308:	adrp	x23, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2230c:	add	x23, x23, #0x718
   22310:	mov	x0, x23
   22314:	bl	1a414 <__sanitizer_set_report_fd@@Base+0x3dd0>
   22318:	mov	w1, #0x6                   	// #6
   2231c:	mov	x0, x23
   22320:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   22324:	mov	w1, #0x4                   	// #4
   22328:	mov	x0, x23
   2232c:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   22330:	mov	w1, #0x8                   	// #8
   22334:	mov	x0, x23
   22338:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   2233c:	mov	w1, #0xb                   	// #11
   22340:	mov	x0, x23
   22344:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   22348:	mov	w1, #0x7                   	// #7
   2234c:	mov	x0, x23
   22350:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   22354:	mov	w1, #0x18                  	// #24
   22358:	mov	x0, x23
   2235c:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   22360:	mov	w1, #0x19                  	// #25
   22364:	mov	x0, x23
   22368:	bl	1a42c <__sanitizer_set_report_fd@@Base+0x3de8>
   2236c:	add	x2, x23, #0x80
   22370:	mov	w0, wzr
   22374:	mov	x1, x23
   22378:	bl	1a400 <__sanitizer_set_report_fd@@Base+0x3dbc>
   2237c:	lsl	x8, x0, #32
   22380:	cbnz	x8, 2251c <__sanitizer_sandbox_on_notify@@Base+0x1e9c>
   22384:	adrp	x0, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   22388:	mov	w2, #0x700                 	// #1792
   2238c:	add	x1, x20, x21
   22390:	add	x0, x0, #0x53c
   22394:	add	x3, sp, #0x8
   22398:	movk	w2, #0x80, lsl #16
   2239c:	mov	x4, xzr
   223a0:	mov	x5, xzr
   223a4:	mov	x6, xzr
   223a8:	bl	1ac7c <__sanitizer_set_report_fd@@Base+0x4638>
   223ac:	adrp	x1, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   223b0:	mov	x23, x0
   223b4:	add	x1, x1, #0x798
   223b8:	mov	w0, #0x2                   	// #2
   223bc:	mov	x2, xzr
   223c0:	bl	1a400 <__sanitizer_set_report_fd@@Base+0x3dbc>
   223c4:	add	x1, sp, #0x4
   223c8:	mov	x0, x23
   223cc:	str	wzr, [sp, #4]
   223d0:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   223d4:	tbz	w0, #0, 22414 <__sanitizer_sandbox_on_notify@@Base+0x1d94>
   223d8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   223dc:	ldr	x8, [x8, #3808]
   223e0:	ldr	w8, [x8]
   223e4:	cbz	w8, 223f8 <__sanitizer_sandbox_on_notify@@Base+0x1d78>
   223e8:	ldr	w1, [sp, #4]
   223ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   223f0:	add	x0, x0, #0x720
   223f4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   223f8:	mov	x0, x22
   223fc:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   22400:	mov	x0, x21
   22404:	mov	x1, x20
   22408:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   2240c:	cbnz	w19, 224e4 <__sanitizer_sandbox_on_notify@@Base+0x1e64>
   22410:	b	224cc <__sanitizer_sandbox_on_notify@@Base+0x1e4c>
   22414:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22418:	ldr	x24, [x24, #3736]
   2241c:	str	x23, [x24]
   22420:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   22424:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22428:	ldr	x25, [x25, #3728]
   2242c:	mov	x1, x23
   22430:	mov	x2, xzr
   22434:	mov	x3, xzr
   22438:	str	x0, [x25]
   2243c:	mov	w0, #0x6d61                	// #28001
   22440:	movk	w0, #0x5961, lsl #16
   22444:	mov	x4, xzr
   22448:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
   2244c:	mov	x0, x22
   22450:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   22454:	ldr	x8, [sp, #112]
   22458:	cbnz	x8, 22478 <__sanitizer_sandbox_on_notify@@Base+0x1df8>
   2245c:	bl	6d10 <sched_yield@plt>
   22460:	ldr	x8, [sp, #112]
   22464:	cbz	x8, 2245c <__sanitizer_sandbox_on_notify@@Base+0x1ddc>
   22468:	b	22478 <__sanitizer_sandbox_on_notify@@Base+0x1df8>
   2246c:	ldr	w1, [sp, #4]
   22470:	cmp	w1, #0x4
   22474:	b.ne	22498 <__sanitizer_sandbox_on_notify@@Base+0x1e18>  // b.any
   22478:	mov	w2, #0x40000000            	// #1073741824
   2247c:	mov	w0, w23
   22480:	mov	x1, xzr
   22484:	bl	1a294 <__sanitizer_set_report_fd@@Base+0x3c50>
   22488:	add	x1, sp, #0x4
   2248c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   22490:	tbnz	w0, #0, 2246c <__sanitizer_sandbox_on_notify@@Base+0x1dec>
   22494:	b	224b4 <__sanitizer_sandbox_on_notify@@Base+0x1e34>
   22498:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2249c:	ldr	x8, [x8, #3808]
   224a0:	ldr	w8, [x8]
   224a4:	cbz	w8, 224b4 <__sanitizer_sandbox_on_notify@@Base+0x1e34>
   224a8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   224ac:	add	x0, x0, #0x74d
   224b0:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   224b4:	str	xzr, [x24]
   224b8:	str	xzr, [x25]
   224bc:	mov	x0, x21
   224c0:	mov	x1, x20
   224c4:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   224c8:	cbnz	w19, 224e4 <__sanitizer_sandbox_on_notify@@Base+0x1e64>
   224cc:	mov	w0, #0x4                   	// #4
   224d0:	mov	x1, xzr
   224d4:	mov	x2, xzr
   224d8:	mov	x3, xzr
   224dc:	mov	x4, xzr
   224e0:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
   224e4:	ldp	x20, x19, [sp, #176]
   224e8:	ldp	x22, x21, [sp, #160]
   224ec:	ldp	x24, x23, [sp, #144]
   224f0:	ldp	x30, x25, [sp, #128]
   224f4:	add	sp, sp, #0xc0
   224f8:	ret
   224fc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22500:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22504:	add	x0, x0, #0x6a9
   22508:	add	x2, x2, #0x7ea
   2250c:	mov	w1, #0x154                 	// #340
   22510:	mov	x3, xzr
   22514:	mov	x4, xzr
   22518:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2251c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22520:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22524:	asr	x3, x8, #32
   22528:	add	x0, x0, #0x6a9
   2252c:	add	x2, x2, #0x710
   22530:	mov	w1, #0x1ae                 	// #430
   22534:	mov	x4, xzr
   22538:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2253c:	sub	sp, sp, #0x150
   22540:	stp	x29, x30, [sp, #256]
   22544:	stp	x26, x25, [sp, #272]
   22548:	stp	x24, x23, [sp, #288]
   2254c:	stp	x22, x21, [sp, #304]
   22550:	stp	x20, x19, [sp, #320]
   22554:	mov	x19, x0
   22558:	mov	w0, #0x1                   	// #1
   2255c:	mov	w1, #0x9                   	// #9
   22560:	mov	x2, xzr
   22564:	mov	x3, xzr
   22568:	mov	x4, xzr
   2256c:	bl	1a2ec <__sanitizer_set_report_fd@@Base+0x3ca8>
   22570:	bl	1a2b8 <__sanitizer_set_report_fd@@Base+0x3c74>
   22574:	ldr	x8, [x19, #112]
   22578:	cmp	x0, x8
   2257c:	b.ne	228d8 <__sanitizer_sandbox_on_notify@@Base+0x2258>  // b.any
   22580:	add	x20, x19, #0x10
   22584:	mov	x0, x20
   22588:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   2258c:	mov	x0, x20
   22590:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   22594:	adrp	x0, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   22598:	add	x0, x0, #0x9b0
   2259c:	bl	1ff14 <__sanitizer_on_print@@Base+0x34c4>
   225a0:	tbz	w0, #0, 228e0 <__sanitizer_sandbox_on_notify@@Base+0x2260>
   225a4:	add	x21, sp, #0xb8
   225a8:	bl	1a2b8 <__sanitizer_set_report_fd@@Base+0x3c74>
   225ac:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   225b0:	add	x22, sp, #0xd0
   225b4:	mov	x20, x0
   225b8:	add	x23, x23, #0x818
   225bc:	movi	v0.2d, #0x0
   225c0:	add	x0, x22, #0x10
   225c4:	mov	w1, #0x400                 	// #1024
   225c8:	stp	x19, x23, [sp, #208]
   225cc:	stur	q0, [x21, #48]
   225d0:	str	xzr, [sp, #224]
   225d4:	bl	1b1c8 <__sanitizer_set_report_fd@@Base+0x4b84>
   225d8:	adrp	x24, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   225dc:	movi	v0.2d, #0x0
   225e0:	add	x0, sp, #0xb8
   225e4:	mov	w1, #0x2000                	// #8192
   225e8:	str	w20, [sp, #248]
   225ec:	stur	q0, [x21, #8]
   225f0:	str	x22, [x24, #1808]
   225f4:	str	xzr, [sp, #184]
   225f8:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   225fc:	ldr	x8, [sp, #200]
   22600:	lsr	x9, x8, #13
   22604:	cbnz	x9, 2263c <__sanitizer_sandbox_on_notify@@Base+0x1fbc>
   22608:	ldr	x9, [sp, #192]
   2260c:	lsr	x9, x9, #13
   22610:	cbnz	x9, 22624 <__sanitizer_sandbox_on_notify@@Base+0x1fa4>
   22614:	add	x0, sp, #0xb8
   22618:	mov	w1, #0x2000                	// #8192
   2261c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   22620:	ldr	x8, [sp, #200]
   22624:	ldr	x9, [sp, #184]
   22628:	mov	w10, #0x2000                	// #8192
   2262c:	sub	x2, x10, x8
   22630:	mov	w1, wzr
   22634:	add	x0, x9, x8
   22638:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2263c:	mov	w20, #0x2000                	// #8192
   22640:	add	x0, sp, #0xa0
   22644:	mov	w2, #0x18                  	// #24
   22648:	mov	w1, wzr
   2264c:	str	x20, [sp, #200]
   22650:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   22654:	ldr	x8, [sp, #184]
   22658:	add	x0, sp, #0xa0
   2265c:	mov	x1, xzr
   22660:	str	x20, [sp, #176]
   22664:	str	x8, [sp, #160]
   22668:	bl	1a2fc <__sanitizer_set_report_fd@@Base+0x3cb8>
   2266c:	add	x0, sp, #0x8
   22670:	mov	w2, #0x98                  	// #152
   22674:	mov	w1, wzr
   22678:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2267c:	adrp	x20, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   22680:	mov	w21, #0x4                   	// #4
   22684:	add	x20, x20, #0xa20
   22688:	movk	w21, #0x800, lsl #16
   2268c:	add	x1, sp, #0x8
   22690:	mov	w0, #0x6                   	// #6
   22694:	mov	x2, xzr
   22698:	str	x20, [sp, #8]
   2269c:	str	w21, [sp, #144]
   226a0:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   226a4:	add	x0, sp, #0x8
   226a8:	mov	w2, #0x98                  	// #152
   226ac:	mov	w1, wzr
   226b0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   226b4:	add	x1, sp, #0x8
   226b8:	mov	w0, #0x4                   	// #4
   226bc:	mov	x2, xzr
   226c0:	str	x20, [sp, #8]
   226c4:	str	w21, [sp, #144]
   226c8:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   226cc:	add	x0, sp, #0x8
   226d0:	mov	w2, #0x98                  	// #152
   226d4:	mov	w1, wzr
   226d8:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   226dc:	add	x1, sp, #0x8
   226e0:	mov	w0, #0x8                   	// #8
   226e4:	mov	x2, xzr
   226e8:	str	x20, [sp, #8]
   226ec:	str	w21, [sp, #144]
   226f0:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   226f4:	add	x0, sp, #0x8
   226f8:	mov	w2, #0x98                  	// #152
   226fc:	mov	w1, wzr
   22700:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   22704:	add	x1, sp, #0x8
   22708:	mov	w0, #0xb                   	// #11
   2270c:	mov	x2, xzr
   22710:	str	x20, [sp, #8]
   22714:	str	w21, [sp, #144]
   22718:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   2271c:	add	x0, sp, #0x8
   22720:	mov	w2, #0x98                  	// #152
   22724:	mov	w1, wzr
   22728:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2272c:	add	x1, sp, #0x8
   22730:	mov	w0, #0x7                   	// #7
   22734:	mov	x2, xzr
   22738:	str	x20, [sp, #8]
   2273c:	str	w21, [sp, #144]
   22740:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   22744:	add	x0, sp, #0x8
   22748:	mov	w2, #0x98                  	// #152
   2274c:	mov	w1, wzr
   22750:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   22754:	add	x1, sp, #0x8
   22758:	mov	w0, #0x18                  	// #24
   2275c:	mov	x2, xzr
   22760:	str	x20, [sp, #8]
   22764:	str	w21, [sp, #144]
   22768:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   2276c:	add	x0, sp, #0x8
   22770:	mov	w2, #0x98                  	// #152
   22774:	mov	w1, wzr
   22778:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2277c:	add	x1, sp, #0x8
   22780:	mov	w0, #0x19                  	// #25
   22784:	mov	x2, xzr
   22788:	str	x20, [sp, #8]
   2278c:	str	w21, [sp, #144]
   22790:	bl	1a31c <__sanitizer_set_report_fd@@Base+0x3cd8>
   22794:	add	x0, sp, #0xd0
   22798:	add	x20, sp, #0xd0
   2279c:	bl	220d0 <__sanitizer_sandbox_on_notify@@Base+0x1a50>
   227a0:	tbz	w0, #0, 22844 <__sanitizer_sandbox_on_notify@@Base+0x21c4>
   227a4:	ldp	x8, x1, [x19]
   227a8:	add	x0, x20, #0x8
   227ac:	blr	x8
   227b0:	ldr	x8, [sp, #240]
   227b4:	cbz	x8, 22884 <__sanitizer_sandbox_on_notify@@Base+0x2204>
   227b8:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   227bc:	ldr	x26, [x26, #3808]
   227c0:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   227c4:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   227c8:	mov	x25, xzr
   227cc:	add	x20, x20, #0x67c
   227d0:	add	x21, x21, #0x662
   227d4:	b	227e8 <__sanitizer_sandbox_on_notify@@Base+0x2168>
   227d8:	ldr	x8, [sp, #240]
   227dc:	add	x25, x25, #0x1
   227e0:	cmp	x25, x8
   227e4:	b.cs	22884 <__sanitizer_sandbox_on_notify@@Base+0x2204>  // b.hs, b.nlast
   227e8:	ldr	x8, [sp, #224]
   227ec:	mov	w0, #0x11                  	// #17
   227f0:	mov	x2, xzr
   227f4:	mov	x3, xzr
   227f8:	ldr	x22, [x8, x25, lsl #3]
   227fc:	mov	w1, w22
   22800:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   22804:	add	x1, sp, #0x8
   22808:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   2280c:	ldr	w8, [x26]
   22810:	tbz	w0, #0, 2282c <__sanitizer_sandbox_on_notify@@Base+0x21ac>
   22814:	cbz	w8, 227d8 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   22818:	ldr	w2, [sp, #8]
   2281c:	mov	x0, x20
   22820:	mov	w1, w22
   22824:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22828:	b	227d8 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   2282c:	cmp	w8, #0x2
   22830:	b.cc	227d8 <__sanitizer_sandbox_on_notify@@Base+0x2158>  // b.lo, b.ul, b.last
   22834:	mov	x0, x21
   22838:	mov	w1, w22
   2283c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22840:	b	227d8 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   22844:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22848:	ldr	x8, [x8, #3808]
   2284c:	ldr	w8, [x8]
   22850:	cbz	w8, 22860 <__sanitizer_sandbox_on_notify@@Base+0x21e0>
   22854:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22858:	add	x0, x0, #0x84f
   2285c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22860:	mov	w20, #0x3                   	// #3
   22864:	adrp	x0, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   22868:	add	x0, x0, #0x9b0
   2286c:	bl	1ff78 <__sanitizer_on_print@@Base+0x3528>
   22870:	tbnz	w0, #0, 22898 <__sanitizer_sandbox_on_notify@@Base+0x2218>
   22874:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22878:	add	x0, x0, #0x86b
   2287c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   22880:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   22884:	mov	w20, wzr
   22888:	adrp	x0, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   2288c:	add	x0, x0, #0x9b0
   22890:	bl	1ff78 <__sanitizer_on_print@@Base+0x3528>
   22894:	tbz	w0, #0, 22874 <__sanitizer_sandbox_on_notify@@Base+0x21f4>
   22898:	mov	w8, #0x1                   	// #1
   2289c:	str	xzr, [x24, #1808]
   228a0:	str	x8, [x19, #104]
   228a4:	ldp	x0, x1, [sp, #184]
   228a8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   228ac:	ldp	x0, x1, [sp, #224]
   228b0:	str	x23, [sp, #216]
   228b4:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   228b8:	mov	w0, w20
   228bc:	ldp	x20, x19, [sp, #320]
   228c0:	ldp	x22, x21, [sp, #304]
   228c4:	ldp	x24, x23, [sp, #288]
   228c8:	ldp	x26, x25, [sp, #272]
   228cc:	ldp	x29, x30, [sp, #256]
   228d0:	add	sp, sp, #0x150
   228d4:	ret
   228d8:	mov	w0, #0x4                   	// #4
   228dc:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>
   228e0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   228e4:	add	x0, x0, #0x827
   228e8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   228ec:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   228f0:	sub	sp, sp, #0x150
   228f4:	str	x29, [sp, #288]
   228f8:	stp	x30, x21, [sp, #304]
   228fc:	stp	x20, x19, [sp, #320]
   22900:	ldr	x8, [x0]
   22904:	mov	x20, x3
   22908:	mov	x19, x2
   2290c:	ldr	x8, [x8, #24]
   22910:	blr	x8
   22914:	mov	x21, x0
   22918:	add	x8, sp, #0x10
   2291c:	mov	w9, #0x110                 	// #272
   22920:	mov	x3, sp
   22924:	mov	w0, #0x4204                	// #16900
   22928:	mov	w2, #0x1                   	// #1
   2292c:	mov	w1, w21
   22930:	stp	x8, x9, [sp]
   22934:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   22938:	add	x1, sp, #0x12c
   2293c:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   22940:	tbz	w0, #0, 22978 <__sanitizer_sandbox_on_notify@@Base+0x22f8>
   22944:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22948:	ldr	x8, [x8, #3808]
   2294c:	ldr	w8, [x8]
   22950:	cbz	w8, 22968 <__sanitizer_sandbox_on_notify@@Base+0x22e8>
   22954:	ldr	w2, [sp, #300]
   22958:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2295c:	add	x0, x0, #0x7a1
   22960:	mov	w1, w21
   22964:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22968:	ldr	w8, [sp, #300]
   2296c:	cmp	w8, #0x3
   22970:	csetm	w0, eq  // eq = none
   22974:	b	22994 <__sanitizer_sandbox_on_notify@@Base+0x2314>
   22978:	ldr	x8, [sp, #264]
   2297c:	add	x1, sp, #0x10
   22980:	mov	w2, #0x110                 	// #272
   22984:	mov	x0, x19
   22988:	str	x8, [x20]
   2298c:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   22990:	mov	w0, #0x1                   	// #1
   22994:	ldp	x20, x19, [sp, #320]
   22998:	ldp	x30, x21, [sp, #304]
   2299c:	ldr	x29, [sp, #288]
   229a0:	add	sp, sp, #0x150
   229a4:	ret
   229a8:	mov	w0, #0x22                  	// #34
   229ac:	ret
   229b0:	stp	x30, x21, [sp, #-32]!
   229b4:	stp	x20, x19, [sp, #16]
   229b8:	adrp	x19, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   229bc:	ldr	x20, [x19, #1808]
   229c0:	cbz	x20, 22a14 <__sanitizer_sandbox_on_notify@@Base+0x2394>
   229c4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   229c8:	ldr	x8, [x8, #3736]
   229cc:	ldr	x21, [x8]
   229d0:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   229d4:	cmp	x21, x0
   229d8:	b.ne	22a14 <__sanitizer_sandbox_on_notify@@Base+0x2394>  // b.any
   229dc:	ldr	x8, [x20, #32]
   229e0:	cbz	x8, 22a10 <__sanitizer_sandbox_on_notify@@Base+0x2390>
   229e4:	mov	x21, xzr
   229e8:	ldr	x8, [x20, #16]
   229ec:	mov	w0, #0x8                   	// #8
   229f0:	mov	x2, xzr
   229f4:	mov	x3, xzr
   229f8:	ldr	x1, [x8, x21, lsl #3]
   229fc:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   22a00:	ldr	x8, [x20, #32]
   22a04:	add	x21, x21, #0x1
   22a08:	cmp	x21, x8
   22a0c:	b.cc	229e8 <__sanitizer_sandbox_on_notify@@Base+0x2368>  // b.lo, b.ul, b.last
   22a10:	str	xzr, [x19, #1808]
   22a14:	ldp	x20, x19, [sp, #16]
   22a18:	ldp	x30, x21, [sp], #32
   22a1c:	ret
   22a20:	sub	sp, sp, #0x90
   22a24:	str	x30, [sp, #64]
   22a28:	stp	x26, x25, [sp, #80]
   22a2c:	stp	x24, x23, [sp, #96]
   22a30:	stp	x22, x21, [sp, #112]
   22a34:	stp	x20, x19, [sp, #128]
   22a38:	mov	w19, w0
   22a3c:	mov	x0, sp
   22a40:	stp	x1, x2, [sp]
   22a44:	bl	1c204 <__sanitizer_set_report_fd@@Base+0x5bc0>
   22a48:	str	x0, [sp, #16]
   22a4c:	mov	x0, sp
   22a50:	bl	1c210 <__sanitizer_set_report_fd@@Base+0x5bcc>
   22a54:	and	w8, w0, #0x1
   22a58:	mov	x0, sp
   22a5c:	strb	w8, [sp, #48]
   22a60:	bl	1adf4 <__sanitizer_set_report_fd@@Base+0x47b0>
   22a64:	str	w0, [sp, #52]
   22a68:	mov	x0, sp
   22a6c:	bl	1ae40 <__sanitizer_set_report_fd@@Base+0x47fc>
   22a70:	and	w8, w0, #0x1
   22a74:	mov	x0, sp
   22a78:	strb	w8, [sp, #56]
   22a7c:	bl	1ae6c <__sanitizer_set_report_fd@@Base+0x4828>
   22a80:	ldp	x2, x3, [sp, #16]
   22a84:	ldr	x4, [sp, #32]
   22a88:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22a8c:	add	x0, x0, #0x896
   22a90:	mov	w1, w19
   22a94:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   22a98:	adrp	x24, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22a9c:	ldr	x23, [x24, #1808]
   22aa0:	cbz	x23, 22b8c <__sanitizer_sandbox_on_notify@@Base+0x250c>
   22aa4:	ldr	x8, [x23, #32]
   22aa8:	cmp	w19, #0x6
   22aac:	b.ne	22ae4 <__sanitizer_sandbox_on_notify@@Base+0x2464>  // b.any
   22ab0:	cbz	x8, 22b6c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   22ab4:	mov	x20, xzr
   22ab8:	ldr	x8, [x23, #16]
   22abc:	mov	w0, #0x8                   	// #8
   22ac0:	mov	x2, xzr
   22ac4:	mov	x3, xzr
   22ac8:	ldr	x1, [x8, x20, lsl #3]
   22acc:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   22ad0:	ldr	x8, [x23, #32]
   22ad4:	add	x20, x20, #0x1
   22ad8:	cmp	x20, x8
   22adc:	b.cc	22ab8 <__sanitizer_sandbox_on_notify@@Base+0x2438>  // b.lo, b.ul, b.last
   22ae0:	b	22b6c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   22ae4:	cbz	x8, 22b6c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   22ae8:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22aec:	ldr	x26, [x26, #3808]
   22af0:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22af4:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22af8:	mov	x25, xzr
   22afc:	add	x20, x20, #0x67c
   22b00:	add	x21, x21, #0x662
   22b04:	ldr	x8, [x23, #16]
   22b08:	mov	w0, #0x11                  	// #17
   22b0c:	mov	x2, xzr
   22b10:	mov	x3, xzr
   22b14:	ldr	x22, [x8, x25, lsl #3]
   22b18:	mov	w1, w22
   22b1c:	bl	1a280 <__sanitizer_set_report_fd@@Base+0x3c3c>
   22b20:	add	x1, sp, #0x4c
   22b24:	bl	19a0c <__sanitizer_set_report_fd@@Base+0x33c8>
   22b28:	ldr	w8, [x26]
   22b2c:	tbz	w0, #0, 22b48 <__sanitizer_sandbox_on_notify@@Base+0x24c8>
   22b30:	cbz	w8, 22b5c <__sanitizer_sandbox_on_notify@@Base+0x24dc>
   22b34:	ldr	w2, [sp, #76]
   22b38:	mov	x0, x20
   22b3c:	mov	w1, w22
   22b40:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22b44:	b	22b5c <__sanitizer_sandbox_on_notify@@Base+0x24dc>
   22b48:	cmp	w8, #0x2
   22b4c:	b.cc	22b5c <__sanitizer_sandbox_on_notify@@Base+0x24dc>  // b.lo, b.ul, b.last
   22b50:	mov	x0, x21
   22b54:	mov	w1, w22
   22b58:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   22b5c:	ldr	x8, [x23, #32]
   22b60:	add	x25, x25, #0x1
   22b64:	cmp	x25, x8
   22b68:	b.cc	22b04 <__sanitizer_sandbox_on_notify@@Base+0x2484>  // b.lo, b.ul, b.last
   22b6c:	adrp	x0, 22000 <__sanitizer_sandbox_on_notify@@Base+0x1980>
   22b70:	add	x0, x0, #0x9b0
   22b74:	bl	1ff78 <__sanitizer_on_print@@Base+0x3528>
   22b78:	tbz	w0, #0, 22b9c <__sanitizer_sandbox_on_notify@@Base+0x251c>
   22b7c:	str	xzr, [x24, #1808]
   22b80:	ldr	x8, [x23]
   22b84:	mov	w9, #0x1                   	// #1
   22b88:	str	x9, [x8, #104]
   22b8c:	cmp	w19, #0x6
   22b90:	mov	w8, #0x1                   	// #1
   22b94:	cinc	w0, w8, ne  // ne = any
   22b98:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>
   22b9c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22ba0:	add	x0, x0, #0x86b
   22ba4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   22ba8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   22bac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   22bb0:	add	x0, x0, #0xcf
   22bb4:	ret
   22bb8:	mov	w8, #0x1                   	// #1
   22bbc:	strh	w8, [x0]
   22bc0:	ret
   22bc4:	sub	sp, sp, #0x50
   22bc8:	str	x30, [sp, #32]
   22bcc:	stp	x22, x21, [sp, #48]
   22bd0:	stp	x20, x19, [sp, #64]
   22bd4:	adrp	x21, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22bd8:	add	x21, x21, #0x818
   22bdc:	mov	w8, #0x1                   	// #1
   22be0:	mov	x20, x21
   22be4:	mov	x0, sp
   22be8:	strh	w8, [x20], #1
   22bec:	bl	186bc <__sanitizer_set_report_fd@@Base+0x2078>
   22bf0:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22bf4:	ldr	x19, [x19, #3624]
   22bf8:	mov	w1, #0x10                  	// #16
   22bfc:	mov	x0, x19
   22c00:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   22c04:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22c08:	add	x22, x22, #0x630
   22c0c:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   22c10:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22c14:	mov	x2, x0
   22c18:	stp	x22, x21, [x0]
   22c1c:	add	x1, x1, #0x5d0
   22c20:	add	x3, x3, #0x8dc
   22c24:	mov	x0, sp
   22c28:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   22c2c:	mov	w1, #0x10                  	// #16
   22c30:	mov	x0, x19
   22c34:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   22c38:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   22c3c:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22c40:	mov	x2, x0
   22c44:	stp	x22, x20, [x0]
   22c48:	add	x1, x1, #0x490
   22c4c:	add	x3, x3, #0x92b
   22c50:	mov	x0, sp
   22c54:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   22c58:	bl	22bac <__sanitizer_sandbox_on_notify@@Base+0x252c>
   22c5c:	mov	x1, x0
   22c60:	mov	x0, sp
   22c64:	mov	x2, xzr
   22c68:	bl	18454 <__sanitizer_set_report_fd@@Base+0x1e10>
   22c6c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22c70:	add	x1, x1, #0x8cd
   22c74:	mov	x0, sp
   22c78:	bl	18350 <__sanitizer_set_report_fd@@Base+0x1d0c>
   22c7c:	bl	17c94 <__sanitizer_set_report_fd@@Base+0x1650>
   22c80:	ldrb	w8, [x20]
   22c84:	cbz	w8, 22c90 <__sanitizer_sandbox_on_notify@@Base+0x2610>
   22c88:	mov	x0, sp
   22c8c:	bl	17d58 <__sanitizer_set_report_fd@@Base+0x1714>
   22c90:	ldp	x20, x19, [sp, #64]
   22c94:	ldp	x22, x21, [sp, #48]
   22c98:	ldr	x30, [sp, #32]
   22c9c:	add	sp, sp, #0x50
   22ca0:	ret
   22ca4:	stp	x30, x19, [sp, #-16]!
   22ca8:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22cac:	ldrb	w9, [x8, #2080]
   22cb0:	cbz	w9, 22cbc <__sanitizer_sandbox_on_notify@@Base+0x263c>
   22cb4:	ldp	x30, x19, [sp], #16
   22cb8:	ret
   22cbc:	and	w9, w0, #0x1
   22cc0:	strb	w9, [x8, #2080]
   22cc4:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22cc8:	ldr	x19, [x19, #3896]
   22ccc:	mov	x0, x19
   22cd0:	bl	21434 <__sanitizer_sandbox_on_notify@@Base+0xdb4>
   22cd4:	mov	x0, x19
   22cd8:	ldp	x30, x19, [sp], #16
   22cdc:	b	1ff14 <__sanitizer_on_print@@Base+0x34c4>

0000000000022ce0 <__sanitizer_cov_dump@@Base>:
   22ce0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22ce4:	ldrb	w8, [x8, #2088]
   22ce8:	cbz	w8, 22d10 <__sanitizer_cov_dump@@Base+0x30>
   22cec:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   22cf0:	ldr	x8, [x8, #4056]
   22cf4:	ldrb	w8, [x8, #169]
   22cf8:	cbz	w8, 22d10 <__sanitizer_cov_dump@@Base+0x30>
   22cfc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22d00:	add	x8, x8, #0x830
   22d04:	ldr	x0, [x8]
   22d08:	ldr	x1, [x8, #16]
   22d0c:	b	6bb0 <__sanitizer_dump_coverage@plt>
   22d10:	ret

0000000000022d14 <__sanitizer_dump_coverage@@Base>:
   22d14:	cbz	x1, 22dd4 <__sanitizer_dump_coverage@@Base+0xc0>
   22d18:	sub	sp, sp, #0x70
   22d1c:	stp	x29, x30, [sp, #16]
   22d20:	stp	x28, x27, [sp, #32]
   22d24:	stp	x26, x25, [sp, #48]
   22d28:	stp	x24, x23, [sp, #64]
   22d2c:	stp	x22, x21, [sp, #80]
   22d30:	stp	x20, x19, [sp, #96]
   22d34:	mov	x19, x1
   22d38:	mov	x23, x0
   22d3c:	mov	w0, #0x1000                	// #4096
   22d40:	mov	x1, xzr
   22d44:	mov	x2, xzr
   22d48:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   22d4c:	str	x0, [sp, #8]
   22d50:	mov	w0, #0x1000                	// #4096
   22d54:	mov	x1, xzr
   22d58:	mov	x2, xzr
   22d5c:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   22d60:	lsl	x24, x19, #3
   22d64:	mov	x21, x0
   22d68:	mov	x0, x24
   22d6c:	mov	x1, xzr
   22d70:	mov	x2, xzr
   22d74:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   22d78:	mov	x1, x23
   22d7c:	mov	x2, x24
   22d80:	mov	x22, x0
   22d84:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   22d88:	cmp	x19, #0x1
   22d8c:	b.eq	22de0 <__sanitizer_dump_coverage@@Base+0xcc>  // b.none
   22d90:	mov	w8, #0x1                   	// #1
   22d94:	b	22da4 <__sanitizer_dump_coverage@@Base+0x90>
   22d98:	add	x8, x8, #0x1
   22d9c:	cmp	x8, x19
   22da0:	b.eq	22dd8 <__sanitizer_dump_coverage@@Base+0xc4>  // b.none
   22da4:	ldr	x9, [x22, x8, lsl #3]
   22da8:	mov	x10, x8
   22dac:	sub	x11, x10, #0x1
   22db0:	lsr	x11, x11, #1
   22db4:	ldr	x12, [x22, x11, lsl #3]
   22db8:	cmp	x12, x9
   22dbc:	b.cs	22d98 <__sanitizer_dump_coverage@@Base+0x84>  // b.hs, b.nlast
   22dc0:	str	x12, [x22, x10, lsl #3]
   22dc4:	mov	x10, x11
   22dc8:	str	x9, [x22, x11, lsl #3]
   22dcc:	cbnz	x11, 22dac <__sanitizer_dump_coverage@@Base+0x98>
   22dd0:	b	22d98 <__sanitizer_dump_coverage@@Base+0x84>
   22dd4:	ret
   22dd8:	subs	x8, x19, #0x1
   22ddc:	b.ne	22e08 <__sanitizer_dump_coverage@@Base+0xf4>  // b.any
   22de0:	adrp	x23, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   22de4:	mov	w28, wzr
   22de8:	mov	x20, xzr
   22dec:	mov	x26, xzr
   22df0:	mov	x27, xzr
   22df4:	add	x23, x23, #0x950
   22df8:	mov	x24, x22
   22dfc:	b	22ec4 <__sanitizer_dump_coverage@@Base+0x1b0>
   22e00:	subs	x8, x8, #0x1
   22e04:	b.eq	22de0 <__sanitizer_dump_coverage@@Base+0xcc>  // b.none
   22e08:	lsl	x10, x8, #3
   22e0c:	ldr	x11, [x22, x10]
   22e10:	ldr	x12, [x22]
   22e14:	mov	x9, xzr
   22e18:	str	x11, [x22]
   22e1c:	str	x12, [x22, x10]
   22e20:	mov	x10, xzr
   22e24:	mov	w12, #0x1                   	// #1
   22e28:	lsl	x11, x9, #1
   22e2c:	bfi	x12, x9, #1, #63
   22e30:	cmp	x12, x8
   22e34:	add	x11, x11, #0x2
   22e38:	b.cc	22e50 <__sanitizer_dump_coverage@@Base+0x13c>  // b.lo, b.ul, b.last
   22e3c:	cmp	x11, x8
   22e40:	b.cc	22e68 <__sanitizer_dump_coverage@@Base+0x154>  // b.lo, b.ul, b.last
   22e44:	cmp	x10, x9
   22e48:	b.ne	22e80 <__sanitizer_dump_coverage@@Base+0x16c>  // b.any
   22e4c:	b	22e00 <__sanitizer_dump_coverage@@Base+0xec>
   22e50:	ldr	x10, [x22, x9, lsl #3]
   22e54:	ldr	x13, [x22, x12, lsl #3]
   22e58:	cmp	x10, x13
   22e5c:	csel	x10, x12, x9, cc  // cc = lo, ul, last
   22e60:	cmp	x11, x8
   22e64:	b.cs	22e44 <__sanitizer_dump_coverage@@Base+0x130>  // b.hs, b.nlast
   22e68:	ldr	x12, [x22, x10, lsl #3]
   22e6c:	ldr	x13, [x22, x11, lsl #3]
   22e70:	cmp	x12, x13
   22e74:	csel	x10, x11, x10, cc  // cc = lo, ul, last
   22e78:	cmp	x10, x9
   22e7c:	b.eq	22e00 <__sanitizer_dump_coverage@@Base+0xec>  // b.none
   22e80:	lsl	x11, x10, #3
   22e84:	lsl	x9, x9, #3
   22e88:	ldr	x12, [x22, x11]
   22e8c:	ldr	x13, [x22, x9]
   22e90:	cmp	x10, x8
   22e94:	str	x12, [x22, x9]
   22e98:	mov	x9, x10
   22e9c:	str	x13, [x22, x11]
   22ea0:	b.cc	22e24 <__sanitizer_dump_coverage@@Base+0x110>  // b.lo, b.ul, b.last
   22ea4:	b	22e00 <__sanitizer_dump_coverage@@Base+0xec>
   22ea8:	mov	x0, x23
   22eac:	mov	x1, x25
   22eb0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   22eb4:	add	x26, x26, #0x1
   22eb8:	cmp	x26, x19
   22ebc:	add	x24, x24, #0x8
   22ec0:	b.cs	22f38 <__sanitizer_dump_coverage@@Base+0x224>  // b.hs, b.nlast
   22ec4:	ldr	x25, [x24]
   22ec8:	cbz	x25, 22eb4 <__sanitizer_dump_coverage@@Base+0x1a0>
   22ecc:	mov	x0, x25
   22ed0:	mov	x1, xzr
   22ed4:	mov	x2, xzr
   22ed8:	mov	x3, x24
   22edc:	bl	6a40 <__sanitizer_get_module_and_offset_for_pc@plt>
   22ee0:	cbz	w0, 22ea8 <__sanitizer_dump_coverage@@Base+0x194>
   22ee4:	ldr	x8, [x24]
   22ee8:	sub	x29, x25, x8
   22eec:	cmp	x29, x20
   22ef0:	b.ne	22efc <__sanitizer_dump_coverage@@Base+0x1e8>  // b.any
   22ef4:	eor	w8, w28, #0x1
   22ef8:	tbz	w8, #0, 22eb4 <__sanitizer_dump_coverage@@Base+0x1a0>
   22efc:	tbz	w28, #0, 22f14 <__sanitizer_dump_coverage@@Base+0x200>
   22f00:	ldr	x0, [sp, #8]
   22f04:	add	x2, x22, x27, lsl #3
   22f08:	sub	x3, x26, x27
   22f0c:	mov	x1, x21
   22f10:	bl	23238 <__sanitizer_cov_pcs_init@@Base+0x4>
   22f14:	mov	w2, #0x1000                	// #4096
   22f18:	mov	x0, x25
   22f1c:	mov	x1, x21
   22f20:	mov	x3, x24
   22f24:	bl	6a40 <__sanitizer_get_module_and_offset_for_pc@plt>
   22f28:	mov	w28, #0x1                   	// #1
   22f2c:	mov	x27, x26
   22f30:	mov	x20, x29
   22f34:	b	22eb4 <__sanitizer_dump_coverage@@Base+0x1a0>
   22f38:	tbz	w28, #0, 22f50 <__sanitizer_dump_coverage@@Base+0x23c>
   22f3c:	ldr	x0, [sp, #8]
   22f40:	add	x2, x22, x27, lsl #3
   22f44:	sub	x3, x19, x27
   22f48:	mov	x1, x21
   22f4c:	bl	23238 <__sanitizer_cov_pcs_init@@Base+0x4>
   22f50:	ldr	x0, [sp, #8]
   22f54:	mov	x1, xzr
   22f58:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   22f5c:	mov	x0, x21
   22f60:	mov	x1, xzr
   22f64:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   22f68:	mov	x0, x22
   22f6c:	ldp	x20, x19, [sp, #96]
   22f70:	ldp	x22, x21, [sp, #80]
   22f74:	ldp	x24, x23, [sp, #64]
   22f78:	ldp	x26, x25, [sp, #48]
   22f7c:	ldp	x28, x27, [sp, #32]
   22f80:	ldp	x29, x30, [sp, #16]
   22f84:	mov	x1, xzr
   22f88:	add	sp, sp, #0x70
   22f8c:	b	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>

0000000000022f90 <__sanitizer_cov_trace_pc_guard@@Base>:
   22f90:	str	x30, [sp, #-16]!
   22f94:	ldr	w8, [x0]
   22f98:	cbz	w8, 22fc0 <__sanitizer_cov_trace_pc_guard@@Base+0x30>
   22f9c:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22fa0:	ldr	x4, [x9, #2112]
   22fa4:	sub	w3, w8, #0x1
   22fa8:	cmp	x4, x3
   22fac:	b.ls	22fd8 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.plast
   22fb0:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   22fb4:	ldr	x8, [x8, #2096]
   22fb8:	ldr	x9, [x8, x3, lsl #3]
   22fbc:	cbz	x9, 22fc8 <__sanitizer_cov_trace_pc_guard@@Base+0x38>
   22fc0:	ldr	x30, [sp], #16
   22fc4:	ret
   22fc8:	sub	x9, x30, #0x1
   22fcc:	str	x9, [x8, x3, lsl #3]
   22fd0:	ldr	x30, [sp], #16
   22fd4:	ret
   22fd8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   22fdc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   22fe0:	add	x0, x0, #0xb2f
   22fe4:	add	x2, x2, #0x1eb
   22fe8:	mov	w1, #0x1c5                 	// #453
   22fec:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000022ff0 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   22ff0:	str	x30, [sp, #-48]!
   22ff4:	stp	x22, x21, [sp, #16]
   22ff8:	stp	x20, x19, [sp, #32]
   22ffc:	cmp	x0, x1
   23000:	b.eq	23010 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20>  // b.none
   23004:	ldr	w8, [x0]
   23008:	mov	x20, x0
   2300c:	cbz	w8, 23020 <__sanitizer_cov_trace_pc_guard_init@@Base+0x30>
   23010:	ldp	x20, x19, [sp, #32]
   23014:	ldp	x22, x21, [sp, #16]
   23018:	ldr	x30, [sp], #48
   2301c:	ret
   23020:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23024:	ldrb	w8, [x8, #2088]
   23028:	mov	x19, x1
   2302c:	adrp	x21, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23030:	cbz	w8, 2303c <__sanitizer_cov_trace_pc_guard_init@@Base+0x4c>
   23034:	ldr	x8, [x21, #2112]
   23038:	b	23064 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
   2303c:	adrp	x22, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23040:	add	x22, x22, #0x828
   23044:	mov	w8, #0x1                   	// #1
   23048:	strb	w8, [x22]
   2304c:	bl	22bc4 <__sanitizer_sandbox_on_notify@@Base+0x2544>
   23050:	stp	xzr, xzr, [x22, #16]
   23054:	str	xzr, [x22, #8]
   23058:	ldr	w9, [x20]
   2305c:	mov	x8, xzr
   23060:	cbnz	w9, 2315c <__sanitizer_cov_trace_pc_guard_init@@Base+0x16c>
   23064:	cmp	x20, x19
   23068:	b.cs	23084 <__sanitizer_cov_trace_pc_guard_init@@Base+0x94>  // b.hs, b.nlast
   2306c:	mvn	x9, x20
   23070:	add	x9, x19, x9
   23074:	cmp	x9, #0x1b
   23078:	b.hi	2308c <__sanitizer_cov_trace_pc_guard_init@@Base+0x9c>  // b.pmore
   2307c:	mov	w9, w8
   23080:	b	230e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf8>
   23084:	mov	w9, w8
   23088:	b	230f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>
   2308c:	adrp	x12, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23090:	ldr	q3, [x12, #2368]
   23094:	lsr	x9, x9, #2
   23098:	add	x11, x9, #0x1
   2309c:	dup	v2.4s, w8
   230a0:	and	x12, x11, #0x7ffffffffffffff8
   230a4:	add	x10, x20, #0x10
   230a8:	movi	v0.4s, #0x1
   230ac:	movi	v1.4s, #0x5
   230b0:	add	x20, x20, x12, lsl #2
   230b4:	add	w9, w8, w12
   230b8:	add	v2.4s, v2.4s, v3.4s
   230bc:	movi	v3.4s, #0x8
   230c0:	mov	x13, x12
   230c4:	add	v4.4s, v2.4s, v0.4s
   230c8:	add	v5.4s, v2.4s, v1.4s
   230cc:	add	v2.4s, v2.4s, v3.4s
   230d0:	subs	x13, x13, #0x8
   230d4:	stp	q4, q5, [x10, #-16]
   230d8:	add	x10, x10, #0x20
   230dc:	b.ne	230c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd4>  // b.any
   230e0:	cmp	x11, x12
   230e4:	b.eq	230f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   230e8:	add	w9, w9, #0x1
   230ec:	str	w9, [x20], #4
   230f0:	cmp	x20, x19
   230f4:	b.cc	230e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf8>  // b.lo, b.ul, b.last
   230f8:	mov	w19, w9
   230fc:	cmp	x8, x19
   23100:	b.cs	23148 <__sanitizer_cov_trace_pc_guard_init@@Base+0x158>  // b.hs, b.nlast
   23104:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23108:	ldr	x9, [x9, #2104]
   2310c:	cmp	x19, x9, lsr #3
   23110:	b.ls	2312c <__sanitizer_cov_trace_pc_guard_init@@Base+0x13c>  // b.plast
   23114:	adrp	x20, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23118:	add	x20, x20, #0x830
   2311c:	mov	x0, x20
   23120:	mov	x1, x19
   23124:	bl	23350 <__sanitizer_cov_pcs_init@@Base+0x11c>
   23128:	ldr	x8, [x20, #16]
   2312c:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23130:	ldr	x9, [x9, #2096]
   23134:	sub	x10, x19, x8
   23138:	lsl	x2, x10, #3
   2313c:	mov	w1, wzr
   23140:	add	x0, x9, x8, lsl #3
   23144:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   23148:	str	x19, [x21, #2112]
   2314c:	ldp	x20, x19, [sp, #32]
   23150:	ldp	x22, x21, [sp, #16]
   23154:	ldr	x30, [sp], #48
   23158:	ret
   2315c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23160:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23164:	add	x0, x0, #0x9b0
   23168:	add	x2, x2, #0xa6d
   2316c:	mov	w1, #0x78                  	// #120
   23170:	mov	x3, xzr
   23174:	mov	x4, xzr
   23178:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002317c <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   2317c:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23180:	ldrb	w8, [x8, #2088]
   23184:	cbz	w8, 231ac <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   23188:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2318c:	ldr	x8, [x8, #4056]
   23190:	ldrb	w8, [x8, #169]
   23194:	cbz	w8, 231ac <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   23198:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2319c:	add	x8, x8, #0x830
   231a0:	ldr	x0, [x8]
   231a4:	ldr	x1, [x8, #16]
   231a8:	b	6bb0 <__sanitizer_dump_coverage@plt>
   231ac:	ret

00000000000231b0 <__sanitizer_cov_reset@@Base>:
   231b0:	str	x30, [sp, #-16]!
   231b4:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   231b8:	ldr	x8, [x8, #2112]
   231bc:	cbz	x8, 231d8 <__sanitizer_cov_reset@@Base+0x28>
   231c0:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   231c4:	ldr	x0, [x9, #2096]
   231c8:	lsl	x2, x8, #3
   231cc:	mov	w1, wzr
   231d0:	ldr	x30, [sp], #16
   231d4:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   231d8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   231dc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   231e0:	add	x0, x0, #0xb2f
   231e4:	add	x2, x2, #0x1eb
   231e8:	mov	w1, #0x1c5                 	// #453
   231ec:	mov	x3, xzr
   231f0:	mov	x4, xzr
   231f4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

00000000000231f8 <__sanitizer_cov_trace_cmp@@Base>:
   231f8:	ret

00000000000231fc <__sanitizer_cov_trace_cmp1@@Base>:
   231fc:	ret

0000000000023200 <__sanitizer_cov_trace_cmp2@@Base>:
   23200:	ret

0000000000023204 <__sanitizer_cov_trace_cmp4@@Base>:
   23204:	ret

0000000000023208 <__sanitizer_cov_trace_cmp8@@Base>:
   23208:	ret

000000000002320c <__sanitizer_cov_trace_const_cmp1@@Base>:
   2320c:	ret

0000000000023210 <__sanitizer_cov_trace_const_cmp2@@Base>:
   23210:	ret

0000000000023214 <__sanitizer_cov_trace_const_cmp4@@Base>:
   23214:	ret

0000000000023218 <__sanitizer_cov_trace_const_cmp8@@Base>:
   23218:	ret

000000000002321c <__sanitizer_cov_trace_switch@@Base>:
   2321c:	ret

0000000000023220 <__sanitizer_cov_trace_div4@@Base>:
   23220:	ret

0000000000023224 <__sanitizer_cov_trace_div8@@Base>:
   23224:	ret

0000000000023228 <__sanitizer_cov_trace_gep@@Base>:
   23228:	ret

000000000002322c <__sanitizer_cov_trace_pc_indir@@Base>:
   2322c:	ret

0000000000023230 <__sanitizer_cov_8bit_counters_init@@Base>:
   23230:	ret

0000000000023234 <__sanitizer_cov_pcs_init@@Base>:
   23234:	ret
   23238:	sub	sp, sp, #0x40
   2323c:	stp	x30, x23, [sp, #16]
   23240:	stp	x22, x21, [sp, #32]
   23244:	stp	x20, x19, [sp, #48]
   23248:	mov	x20, x0
   2324c:	mov	x0, x1
   23250:	mov	x19, x3
   23254:	mov	x21, x2
   23258:	bl	1375c <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   2325c:	cbz	x0, 23330 <__sanitizer_cov_pcs_init@@Base+0xfc>
   23260:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23264:	ldr	x8, [x8, #4056]
   23268:	mov	x22, x0
   2326c:	ldr	x23, [x8, #176]
   23270:	bl	1a2ac <__sanitizer_set_report_fd@@Base+0x3c68>
   23274:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23278:	adrp	x6, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   2327c:	mov	x5, x0
   23280:	add	x2, x2, #0xa21
   23284:	add	x6, x6, #0x4d5
   23288:	mov	w1, #0x1000                	// #4096
   2328c:	mov	x0, x20
   23290:	mov	x3, x23
   23294:	mov	x4, x22
   23298:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   2329c:	add	x2, sp, #0xc
   232a0:	mov	w1, #0x1                   	// #1
   232a4:	mov	x0, x20
   232a8:	bl	1b98c <__sanitizer_set_report_fd@@Base+0x5348>
   232ac:	mov	w22, w0
   232b0:	cmn	w0, #0x1
   232b4:	b.ne	232cc <__sanitizer_cov_pcs_init@@Base+0x98>  // b.any
   232b8:	ldr	w2, [sp, #12]
   232bc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   232c0:	add	x0, x0, #0xa2e
   232c4:	mov	x1, x20
   232c8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   232cc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   232d0:	add	x1, x1, #0xa80
   232d4:	mov	w2, #0x8                   	// #8
   232d8:	mov	w0, w22
   232dc:	mov	x3, xzr
   232e0:	mov	x4, xzr
   232e4:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   232e8:	lsl	x2, x19, #3
   232ec:	mov	w0, w22
   232f0:	mov	x1, x21
   232f4:	mov	x3, xzr
   232f8:	mov	x4, xzr
   232fc:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   23300:	mov	w0, w22
   23304:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   23308:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2330c:	add	x0, x0, #0x988
   23310:	mov	x1, x20
   23314:	mov	x2, x19
   23318:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   2331c:	ldp	x20, x19, [sp, #48]
   23320:	ldp	x22, x21, [sp, #32]
   23324:	ldp	x30, x23, [sp, #16]
   23328:	add	sp, sp, #0x40
   2332c:	ret
   23330:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23334:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23338:	add	x0, x0, #0x9b0
   2333c:	add	x2, x2, #0xa11
   23340:	mov	w1, #0x29                  	// #41
   23344:	mov	x3, xzr
   23348:	mov	x4, xzr
   2334c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   23350:	stp	x30, x21, [sp, #-32]!
   23354:	stp	x20, x19, [sp, #16]
   23358:	cbz	x1, 233e8 <__sanitizer_cov_pcs_init@@Base+0x1b4>
   2335c:	ldr	x3, [x0, #16]
   23360:	mov	x20, x1
   23364:	mov	x19, x0
   23368:	cmp	x3, x1
   2336c:	b.hi	23408 <__sanitizer_cov_pcs_init@@Base+0x1d4>  // b.pmore
   23370:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23374:	ldr	x21, [x21, #4016]
   23378:	ldr	x0, [x21]
   2337c:	cbnz	x0, 23388 <__sanitizer_cov_pcs_init@@Base+0x154>
   23380:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   23384:	str	x0, [x21]
   23388:	sub	x8, x0, #0x1
   2338c:	tst	x0, x8
   23390:	b.ne	23424 <__sanitizer_cov_pcs_init@@Base+0x1f0>  // b.any
   23394:	lsl	x8, x20, #3
   23398:	add	x8, x8, x0
   2339c:	sub	x8, x8, #0x1
   233a0:	neg	x9, x0
   233a4:	and	x20, x8, x9
   233a8:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   233ac:	add	x1, x1, #0x950
   233b0:	mov	x0, x20
   233b4:	mov	w2, wzr
   233b8:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   233bc:	ldr	x8, [x19, #16]
   233c0:	ldr	x1, [x19]
   233c4:	mov	x21, x0
   233c8:	lsl	x2, x8, #3
   233cc:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   233d0:	ldp	x0, x1, [x19]
   233d4:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   233d8:	stp	x21, x20, [x19]
   233dc:	ldp	x20, x19, [sp, #16]
   233e0:	ldp	x30, x21, [sp], #32
   233e4:	ret
   233e8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   233ec:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   233f0:	add	x0, x0, #0xb2f
   233f4:	add	x2, x2, #0x919
   233f8:	mov	w1, #0x20b                 	// #523
   233fc:	mov	x3, xzr
   23400:	mov	x4, xzr
   23404:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   23408:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2340c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   23410:	add	x0, x0, #0xb2f
   23414:	add	x2, x2, #0x932
   23418:	mov	w1, #0x20c                 	// #524
   2341c:	mov	x4, x20
   23420:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   23424:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   23428:	add	x0, x0, #0x20f
   2342c:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   23430:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23434:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23438:	ldr	x8, [x8, #3872]
   2343c:	mrs	x9, tpidr_el0
   23440:	add	x0, x9, x8
   23444:	ret
   23448:	sub	sp, sp, #0x40
   2344c:	str	x30, [sp, #32]
   23450:	stp	x20, x19, [sp, #48]
   23454:	mov	x19, x1
   23458:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2345c:	mov	x20, x0
   23460:	add	x1, x1, #0xa88
   23464:	mov	x0, sp
   23468:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   2346c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23470:	ldr	x8, [x8, #4024]
   23474:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23478:	add	x0, x0, #0xa98
   2347c:	mov	x2, x20
   23480:	ldr	x1, [x8]
   23484:	mov	x3, x19
   23488:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2348c:	mov	x0, sp
   23490:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   23494:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23498:	sub	sp, sp, #0x40
   2349c:	str	x30, [sp, #32]
   234a0:	stp	x20, x19, [sp, #48]
   234a4:	mov	x19, x1
   234a8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   234ac:	mov	x20, x0
   234b0:	add	x1, x1, #0xafe
   234b4:	mov	x0, sp
   234b8:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   234bc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   234c0:	ldr	x8, [x8, #4024]
   234c4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   234c8:	add	x0, x0, #0xb14
   234cc:	mov	x2, x20
   234d0:	ldr	x1, [x8]
   234d4:	mov	x3, x19
   234d8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   234dc:	mov	x0, sp
   234e0:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   234e4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   234e8:	sub	sp, sp, #0x40
   234ec:	str	x30, [sp, #32]
   234f0:	stp	x20, x19, [sp, #48]
   234f4:	mov	x2, x1
   234f8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   234fc:	mov	x19, x0
   23500:	add	x1, x1, #0xb80
   23504:	mov	x0, sp
   23508:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   2350c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23510:	ldr	x8, [x8, #4024]
   23514:	ldr	x20, [x8]
   23518:	bl	23764 <__sanitizer_cov_pcs_init@@Base+0x530>
   2351c:	mov	x3, x0
   23520:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23524:	add	x0, x0, #0xb91
   23528:	mov	x1, x20
   2352c:	mov	x2, x19
   23530:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   23534:	mov	x0, sp
   23538:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   2353c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23540:	sub	sp, sp, #0x30
   23544:	stp	x30, x19, [sp, #32]
   23548:	mov	x2, x1
   2354c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23550:	mov	x19, x0
   23554:	add	x1, x1, #0xc0f
   23558:	mov	x0, sp
   2355c:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   23560:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23564:	ldr	x8, [x8, #4024]
   23568:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2356c:	add	x0, x0, #0xc2c
   23570:	mov	x2, x19
   23574:	ldr	x1, [x8]
   23578:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2357c:	mov	x0, sp
   23580:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   23584:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23588:	sub	sp, sp, #0x40
   2358c:	str	x30, [sp, #32]
   23590:	stp	x20, x19, [sp, #48]
   23594:	mov	x19, x1
   23598:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2359c:	mov	x20, x0
   235a0:	add	x1, x1, #0xc7c
   235a4:	mov	x0, sp
   235a8:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   235ac:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   235b0:	ldr	x8, [x8, #4024]
   235b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   235b8:	add	x0, x0, #0xc9c
   235bc:	mov	x2, x19
   235c0:	ldr	x1, [x8]
   235c4:	mov	x3, x20
   235c8:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   235cc:	mov	x0, sp
   235d0:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   235d4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   235d8:	sub	sp, sp, #0x30
   235dc:	stp	x30, x19, [sp, #32]
   235e0:	mov	x2, x1
   235e4:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   235e8:	mov	x19, x0
   235ec:	add	x1, x1, #0xd39
   235f0:	mov	x0, sp
   235f4:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   235f8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   235fc:	ldr	x8, [x8, #4024]
   23600:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23604:	add	x0, x0, #0xd5a
   23608:	mov	w3, #0x8                   	// #8
   2360c:	ldr	x1, [x8]
   23610:	mov	x2, x19
   23614:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   23618:	mov	x0, sp
   2361c:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   23620:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23624:	sub	sp, sp, #0x40
   23628:	str	x30, [sp, #32]
   2362c:	stp	x20, x19, [sp, #48]
   23630:	mov	x19, x1
   23634:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23638:	mov	x20, x0
   2363c:	add	x1, x1, #0xde2
   23640:	mov	x0, sp
   23644:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   23648:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2364c:	ldr	x8, [x8, #4024]
   23650:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23654:	add	x0, x0, #0xdfa
   23658:	mov	x2, x20
   2365c:	ldr	x1, [x8]
   23660:	mov	x3, x19
   23664:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   23668:	mov	x0, sp
   2366c:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   23670:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   23674:	sub	sp, sp, #0x30
   23678:	stp	x30, x19, [sp, #32]
   2367c:	mov	x2, x1
   23680:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23684:	mov	x19, x0
   23688:	add	x1, x1, #0xe4e
   2368c:	mov	x0, sp
   23690:	bl	236bc <__sanitizer_cov_pcs_init@@Base+0x488>
   23694:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23698:	ldr	x8, [x8, #4024]
   2369c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   236a0:	add	x0, x0, #0xe5c
   236a4:	mov	x2, x19
   236a8:	ldr	x1, [x8]
   236ac:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   236b0:	mov	x0, sp
   236b4:	bl	23710 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   236b8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   236bc:	stp	x30, x21, [sp, #-32]!
   236c0:	stp	x20, x19, [sp, #16]
   236c4:	mov	x19, x2
   236c8:	mov	x20, x1
   236cc:	mov	x21, x0
   236d0:	bl	28ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   236d4:	stp	x20, x19, [x21, #8]
   236d8:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   236dc:	and	w8, w0, #0x1
   236e0:	strb	w8, [x21, #24]
   236e4:	ldp	x20, x19, [sp, #16]
   236e8:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   236ec:	adrp	x10, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   236f0:	add	x9, x9, #0xcf
   236f4:	add	x10, x10, #0x23d
   236f8:	tst	w0, #0x1
   236fc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   23700:	csel	x1, x10, x9, ne  // ne = any
   23704:	add	x0, x0, #0xba0
   23708:	ldp	x30, x21, [sp], #32
   2370c:	b	1ca54 <__sanitizer_on_print@@Base+0x4>
   23710:	stp	x30, x19, [sp, #-16]!
   23714:	ldrb	w8, [x0, #24]
   23718:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2371c:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   23720:	mov	x19, x0
   23724:	add	x9, x9, #0x207
   23728:	add	x10, x10, #0xcf
   2372c:	cmp	w8, #0x0
   23730:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   23734:	csel	x1, x10, x9, eq  // eq = none
   23738:	add	x0, x0, #0xba0
   2373c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   23740:	ldr	x0, [x19, #16]
   23744:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   23748:	bl	12074 <_ZdaPvRKSt9nothrow_t@@Base+0x8a0>
   2374c:	ldp	x0, x1, [x19, #8]
   23750:	mov	x2, xzr
   23754:	bl	283f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>
   23758:	mov	x0, x19
   2375c:	ldp	x30, x19, [sp], #16
   23760:	b	28fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4340>
   23764:	stp	x30, x19, [sp, #-16]!
   23768:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2376c:	ldr	x19, [x19, #4016]
   23770:	ldr	x0, [x19]
   23774:	cbz	x0, 23780 <__sanitizer_cov_pcs_init@@Base+0x54c>
   23778:	ldp	x30, x19, [sp], #16
   2377c:	ret
   23780:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   23784:	str	x0, [x19]
   23788:	ldp	x30, x19, [sp], #16
   2378c:	ret
   23790:	ldr	x8, [x0]
   23794:	ldr	w0, [x8, #8]
   23798:	ret
   2379c:	ldr	x8, [x0]
   237a0:	ldr	w8, [x8, #12]
   237a4:	and	w0, w8, #0xfffff
   237a8:	ret
   237ac:	str	x30, [sp, #-16]!
   237b0:	ldr	x8, [x0]
   237b4:	add	x8, x8, #0xc
   237b8:	ldaxr	w9, [x8]
   237bc:	add	w10, w9, #0x1
   237c0:	stlxr	w11, w10, [x8]
   237c4:	cbnz	w11, 237b8 <__sanitizer_cov_pcs_init@@Base+0x584>
   237c8:	mvn	w8, w9
   237cc:	tst	w8, #0xfffff
   237d0:	b.eq	237dc <__sanitizer_cov_pcs_init@@Base+0x5a8>  // b.none
   237d4:	ldr	x30, [sp], #16
   237d8:	ret
   237dc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   237e0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   237e4:	add	x0, x0, #0xea2
   237e8:	add	x2, x2, #0xef9
   237ec:	mov	w1, #0x55                  	// #85
   237f0:	mov	w3, #0x100000              	// #1048576
   237f4:	mov	w4, #0x100000              	// #1048576
   237f8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   237fc:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23800:	mov	w9, #0x400                 	// #1024
   23804:	add	x8, x8, #0x848
   23808:	movk	w9, #0x80, lsl #16
   2380c:	add	x0, x8, x9
   23810:	ret
   23814:	str	x30, [sp, #-16]!
   23818:	mov	x2, x1
   2381c:	mov	x1, x0
   23820:	adrp	x0, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23824:	add	x0, x0, #0x848
   23828:	mov	x3, xzr
   2382c:	bl	23ca0 <__sanitizer_cov_pcs_init@@Base+0xa6c>
   23830:	cbz	x0, 23838 <__sanitizer_cov_pcs_init@@Base+0x604>
   23834:	ldr	w0, [x0, #8]
   23838:	ldr	x30, [sp], #16
   2383c:	ret
   23840:	adrp	x8, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23844:	add	x8, x8, #0x848
   23848:	mov	x2, x1
   2384c:	mov	x1, x0
   23850:	mov	x0, x8
   23854:	mov	x3, xzr
   23858:	b	23ca0 <__sanitizer_cov_pcs_init@@Base+0xa6c>
   2385c:	str	x30, [sp, #-16]!
   23860:	cbz	w0, 238d4 <__sanitizer_cov_pcs_init@@Base+0x6a0>
   23864:	tbnz	w0, #31, 2390c <__sanitizer_cov_pcs_init@@Base+0x6d8>
   23868:	lsr	w9, w0, #11
   2386c:	adrp	x10, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23870:	mov	x8, xzr
   23874:	and	w9, w9, #0x1ff000
   23878:	add	x10, x10, #0x848
   2387c:	b	2388c <__sanitizer_cov_pcs_init@@Base+0x658>
   23880:	add	x8, x8, #0x1
   23884:	cmp	x8, #0x1, lsl #12
   23888:	b.eq	238d4 <__sanitizer_cov_pcs_init@@Base+0x6a0>  // b.none
   2388c:	add	x11, x8, x9
   23890:	cmp	x11, #0x100, lsl #12
   23894:	b.cs	238ec <__sanitizer_cov_pcs_init@@Base+0x6b8>  // b.hs, b.nlast
   23898:	ldr	x11, [x10, x11, lsl #3]
   2389c:	ands	x11, x11, #0xfffffffffffffffe
   238a0:	b.eq	23880 <__sanitizer_cov_pcs_init@@Base+0x64c>  // b.none
   238a4:	ldr	w12, [x11, #8]
   238a8:	cmp	w12, w0
   238ac:	b.eq	238bc <__sanitizer_cov_pcs_init@@Base+0x688>  // b.none
   238b0:	ldr	x11, [x11]
   238b4:	cbnz	x11, 238a4 <__sanitizer_cov_pcs_init@@Base+0x670>
   238b8:	b	23880 <__sanitizer_cov_pcs_init@@Base+0x64c>
   238bc:	ldp	w9, w8, [x11, #16]
   238c0:	add	x0, x11, #0x18
   238c4:	lsl	x8, x8, #32
   238c8:	orr	x1, x9, x8
   238cc:	ldr	x30, [sp], #16
   238d0:	ret
   238d4:	mov	x8, xzr
   238d8:	mov	x9, xzr
   238dc:	mov	x0, xzr
   238e0:	orr	x1, x9, x8
   238e4:	ldr	x30, [sp], #16
   238e8:	ret
   238ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   238f0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   238f4:	and	x3, x11, #0xffffffff
   238f8:	add	x0, x0, #0xf29
   238fc:	add	x2, x2, #0xfe2
   23900:	mov	w1, #0x92                  	// #146
   23904:	mov	w4, #0x100000              	// #1048576
   23908:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2390c:	and	w3, w0, #0x7fffffff
   23910:	mov	w4, w0
   23914:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23918:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2391c:	add	x0, x0, #0xf29
   23920:	add	x2, x2, #0xfa6
   23924:	mov	w1, #0x8d                  	// #141
   23928:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2392c:	str	x30, [sp, #-48]!
   23930:	stp	x22, x21, [sp, #16]
   23934:	stp	x20, x19, [sp, #32]
   23938:	adrp	x20, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   2393c:	mov	x19, xzr
   23940:	add	x20, x20, #0x848
   23944:	b	23954 <__sanitizer_cov_pcs_init@@Base+0x720>
   23948:	add	x19, x19, #0x1
   2394c:	cmp	x19, #0x100, lsl #12
   23950:	b.eq	239bc <__sanitizer_cov_pcs_init@@Base+0x788>  // b.none
   23954:	mov	w21, wzr
   23958:	add	x22, x20, x19, lsl #3
   2395c:	ldr	x8, [x22]
   23960:	tbnz	w8, #0, 23974 <__sanitizer_cov_pcs_init@@Base+0x740>
   23964:	b	23980 <__sanitizer_cov_pcs_init@@Base+0x74c>
   23968:	add	w21, w21, #0x1
   2396c:	ldr	x8, [x22]
   23970:	tbz	w8, #0, 23980 <__sanitizer_cov_pcs_init@@Base+0x74c>
   23974:	cmp	w21, #0x9
   23978:	b.ls	23968 <__sanitizer_cov_pcs_init@@Base+0x734>  // b.plast
   2397c:	b	239a8 <__sanitizer_cov_pcs_init@@Base+0x774>
   23980:	orr	x9, x8, #0x1
   23984:	ldaxr	x10, [x22]
   23988:	cmp	x10, x8
   2398c:	b.ne	2399c <__sanitizer_cov_pcs_init@@Base+0x768>  // b.any
   23990:	stlxr	w10, x9, [x22]
   23994:	cbnz	w10, 23984 <__sanitizer_cov_pcs_init@@Base+0x750>
   23998:	b	23948 <__sanitizer_cov_pcs_init@@Base+0x714>
   2399c:	clrex
   239a0:	cmp	w21, #0x9
   239a4:	b.ls	23968 <__sanitizer_cov_pcs_init@@Base+0x734>  // b.plast
   239a8:	bl	19c08 <__sanitizer_set_report_fd@@Base+0x35c4>
   239ac:	add	w21, w21, #0x1
   239b0:	ldr	x8, [x22]
   239b4:	tbz	w8, #0, 23980 <__sanitizer_cov_pcs_init@@Base+0x74c>
   239b8:	b	23974 <__sanitizer_cov_pcs_init@@Base+0x740>
   239bc:	ldp	x20, x19, [sp, #32]
   239c0:	ldp	x22, x21, [sp, #16]
   239c4:	ldr	x30, [sp], #48
   239c8:	ret
   239cc:	adrp	x9, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   239d0:	mov	x8, xzr
   239d4:	add	x9, x9, #0x848
   239d8:	ldr	x10, [x9, x8]
   239dc:	dmb	ish
   239e0:	and	x10, x10, #0xfffffffffffffffe
   239e4:	str	x10, [x9, x8]
   239e8:	add	x8, x8, #0x8
   239ec:	cmp	x8, #0x800, lsl #12
   239f0:	b.ne	239d8 <__sanitizer_cov_pcs_init@@Base+0x7a4>  // b.any
   239f4:	ret
   239f8:	ldr	w8, [x0]
   239fc:	ldr	w9, [x1]
   23a00:	cmp	w8, w9
   23a04:	cset	w0, cc  // cc = lo, ul, last
   23a08:	ret
   23a0c:	sub	sp, sp, #0x40
   23a10:	str	x30, [sp, #16]
   23a14:	stp	x22, x21, [sp, #32]
   23a18:	stp	x20, x19, [sp, #48]
   23a1c:	adrp	x20, 128000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e8>
   23a20:	mov	w8, #0x400                 	// #1024
   23a24:	stp	xzr, xzr, [x0, #8]
   23a28:	str	xzr, [x0]
   23a2c:	add	x20, x20, #0x848
   23a30:	movk	w8, #0x80, lsl #16
   23a34:	ldr	x8, [x20, x8]
   23a38:	mov	x19, x0
   23a3c:	adds	x1, x8, #0x64
   23a40:	b.eq	23a4c <__sanitizer_cov_pcs_init@@Base+0x818>  // b.none
   23a44:	mov	x0, x19
   23a48:	bl	241c4 <__sanitizer_cov_pcs_init@@Base+0xf90>
   23a4c:	mov	x21, xzr
   23a50:	b	23a60 <__sanitizer_cov_pcs_init@@Base+0x82c>
   23a54:	add	x21, x21, #0x1
   23a58:	cmp	x21, #0x100, lsl #12
   23a5c:	b.eq	23a90 <__sanitizer_cov_pcs_init@@Base+0x85c>  // b.none
   23a60:	ldr	x8, [x20, x21, lsl #3]
   23a64:	ands	x22, x8, #0xfffffffffffffffe
   23a68:	b.eq	23a54 <__sanitizer_cov_pcs_init@@Base+0x820>  // b.none
   23a6c:	ldr	w8, [x22, #8]
   23a70:	mov	x1, sp
   23a74:	mov	x0, x19
   23a78:	str	x22, [sp, #8]
   23a7c:	str	w8, [sp]
   23a80:	bl	240bc <__sanitizer_cov_pcs_init@@Base+0xe88>
   23a84:	ldr	x22, [x22]
   23a88:	cbnz	x22, 23a6c <__sanitizer_cov_pcs_init@@Base+0x838>
   23a8c:	b	23a54 <__sanitizer_cov_pcs_init@@Base+0x820>
   23a90:	ldr	x9, [x19, #16]
   23a94:	cmp	x9, #0x2
   23a98:	b.cc	23bbc <__sanitizer_cov_pcs_init@@Base+0x988>  // b.lo, b.ul, b.last
   23a9c:	ldr	x8, [x19]
   23aa0:	mov	w10, #0x1                   	// #1
   23aa4:	b	23ab4 <__sanitizer_cov_pcs_init@@Base+0x880>
   23aa8:	add	x10, x10, #0x1
   23aac:	cmp	x10, x9
   23ab0:	b.eq	23bb4 <__sanitizer_cov_pcs_init@@Base+0x980>  // b.none
   23ab4:	mov	x12, x10
   23ab8:	sub	x11, x12, #0x1
   23abc:	lsr	x11, x11, #1
   23ac0:	add	x13, x8, x12, lsl #4
   23ac4:	add	x12, x8, x11, lsl #4
   23ac8:	ldr	w14, [x12]
   23acc:	ldr	w15, [x13]
   23ad0:	cmp	w14, w15
   23ad4:	b.cs	23aa8 <__sanitizer_cov_pcs_init@@Base+0x874>  // b.hs, b.nlast
   23ad8:	ldr	q0, [x13]
   23adc:	str	q0, [sp]
   23ae0:	ldr	q0, [x12]
   23ae4:	str	q0, [x13]
   23ae8:	ldr	q0, [sp]
   23aec:	str	q0, [x12]
   23af0:	mov	x12, x11
   23af4:	cbnz	x11, 23ab8 <__sanitizer_cov_pcs_init@@Base+0x884>
   23af8:	b	23aa8 <__sanitizer_cov_pcs_init@@Base+0x874>
   23afc:	ldr	q0, [x8]
   23b00:	lsl	x11, x9, #4
   23b04:	mov	x10, xzr
   23b08:	str	q0, [sp]
   23b0c:	ldr	q0, [x8, x11]
   23b10:	str	q0, [x8]
   23b14:	ldr	q0, [sp]
   23b18:	str	q0, [x8, x11]
   23b1c:	mov	x11, xzr
   23b20:	mov	w14, #0x1                   	// #1
   23b24:	lsl	x12, x10, #1
   23b28:	bfi	x14, x10, #1, #63
   23b2c:	add	x13, x12, #0x2
   23b30:	cmp	x14, x9
   23b34:	lsl	x12, x10, #4
   23b38:	b.cc	23b50 <__sanitizer_cov_pcs_init@@Base+0x91c>  // b.lo, b.ul, b.last
   23b3c:	cmp	x13, x9
   23b40:	b.cc	23b6c <__sanitizer_cov_pcs_init@@Base+0x938>  // b.lo, b.ul, b.last
   23b44:	cmp	x11, x10
   23b48:	b.ne	23b8c <__sanitizer_cov_pcs_init@@Base+0x958>  // b.any
   23b4c:	b	23bb4 <__sanitizer_cov_pcs_init@@Base+0x980>
   23b50:	lsl	x15, x14, #4
   23b54:	ldr	w11, [x8, x12]
   23b58:	ldr	w15, [x8, x15]
   23b5c:	cmp	w11, w15
   23b60:	csel	x11, x14, x10, cc  // cc = lo, ul, last
   23b64:	cmp	x13, x9
   23b68:	b.cs	23b44 <__sanitizer_cov_pcs_init@@Base+0x910>  // b.hs, b.nlast
   23b6c:	lsl	x14, x11, #4
   23b70:	lsl	x15, x13, #4
   23b74:	ldr	w14, [x8, x14]
   23b78:	ldr	w15, [x8, x15]
   23b7c:	cmp	w14, w15
   23b80:	csel	x11, x13, x11, cc  // cc = lo, ul, last
   23b84:	cmp	x11, x10
   23b88:	b.eq	23bb4 <__sanitizer_cov_pcs_init@@Base+0x980>  // b.none
   23b8c:	ldr	q0, [x8, x12]
   23b90:	lsl	x10, x11, #4
   23b94:	cmp	x11, x9
   23b98:	str	q0, [sp]
   23b9c:	ldr	q0, [x8, x10]
   23ba0:	str	q0, [x8, x12]
   23ba4:	ldr	q0, [sp]
   23ba8:	str	q0, [x8, x10]
   23bac:	mov	x10, x11
   23bb0:	b.cc	23b20 <__sanitizer_cov_pcs_init@@Base+0x8ec>  // b.lo, b.ul, b.last
   23bb4:	subs	x9, x9, #0x1
   23bb8:	b.ne	23afc <__sanitizer_cov_pcs_init@@Base+0x8c8>  // b.any
   23bbc:	ldp	x20, x19, [sp, #48]
   23bc0:	ldp	x22, x21, [sp, #32]
   23bc4:	ldr	x30, [sp, #16]
   23bc8:	add	sp, sp, #0x40
   23bcc:	ret
   23bd0:	str	x30, [sp, #-16]!
   23bd4:	ldr	x4, [x0, #16]
   23bd8:	cbz	x4, 23c54 <__sanitizer_cov_pcs_init@@Base+0xa20>
   23bdc:	mov	x3, xzr
   23be0:	mov	x10, x4
   23be4:	add	x8, x10, x3
   23be8:	lsr	x8, x8, #1
   23bec:	cmp	x4, x8
   23bf0:	b.ls	23c6c <__sanitizer_cov_pcs_init@@Base+0xa38>  // b.plast
   23bf4:	ldr	x9, [x0]
   23bf8:	lsl	x11, x8, #4
   23bfc:	ldr	w11, [x9, x11]
   23c00:	cmp	w11, w1
   23c04:	csel	x10, x10, x8, cc  // cc = lo, ul, last
   23c08:	csinc	x3, x3, x8, cs  // cs = hs, nlast
   23c0c:	cmp	x10, x3
   23c10:	b.hi	23be4 <__sanitizer_cov_pcs_init@@Base+0x9b0>  // b.pmore
   23c14:	cmp	x3, x4
   23c18:	b.hi	23c54 <__sanitizer_cov_pcs_init@@Base+0xa20>  // b.pmore
   23c1c:	cmp	x4, x3
   23c20:	b.ls	23c88 <__sanitizer_cov_pcs_init@@Base+0xa54>  // b.plast
   23c24:	lsl	x8, x3, #4
   23c28:	ldr	w8, [x9, x8]
   23c2c:	cmp	w8, w1
   23c30:	b.ne	23c54 <__sanitizer_cov_pcs_init@@Base+0xa20>  // b.any
   23c34:	add	x8, x9, x3, lsl #4
   23c38:	ldr	x9, [x8, #8]
   23c3c:	ldp	w8, w10, [x9, #16]
   23c40:	add	x0, x9, #0x18
   23c44:	lsl	x9, x10, #32
   23c48:	orr	x1, x9, x8
   23c4c:	ldr	x30, [sp], #16
   23c50:	ret
   23c54:	mov	x0, xzr
   23c58:	mov	x8, xzr
   23c5c:	mov	x9, xzr
   23c60:	orr	x1, x9, x8
   23c64:	ldr	x30, [sp], #16
   23c68:	ret
   23c6c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   23c70:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   23c74:	add	x0, x0, #0xb2f
   23c78:	add	x2, x2, #0x1eb
   23c7c:	mov	w1, #0x1c9                 	// #457
   23c80:	mov	x3, x8
   23c84:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   23c88:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   23c8c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   23c90:	add	x0, x0, #0xb2f
   23c94:	add	x2, x2, #0x1eb
   23c98:	mov	w1, #0x1c5                 	// #453
   23c9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   23ca0:	sub	sp, sp, #0x80
   23ca4:	stp	x29, x30, [sp, #32]
   23ca8:	stp	x28, x27, [sp, #48]
   23cac:	stp	x26, x25, [sp, #64]
   23cb0:	stp	x24, x23, [sp, #80]
   23cb4:	stp	x22, x21, [sp, #96]
   23cb8:	stp	x20, x19, [sp, #112]
   23cbc:	mov	x19, x3
   23cc0:	mov	x21, x2
   23cc4:	mov	x20, x1
   23cc8:	mov	x23, x0
   23ccc:	cbz	x3, 23cd4 <__sanitizer_cov_pcs_init@@Base+0xaa0>
   23cd0:	strb	wzr, [x19]
   23cd4:	mov	x24, xzr
   23cd8:	cbz	x20, 24038 <__sanitizer_cov_pcs_init@@Base+0xe04>
   23cdc:	cbz	w21, 24038 <__sanitizer_cov_pcs_init@@Base+0xe04>
   23ce0:	mov	w9, #0x400                 	// #1024
   23ce4:	movk	w9, #0x80, lsl #16
   23ce8:	mov	w10, #0xb28c                	// #45708
   23cec:	mov	w8, #0xe995                	// #59797
   23cf0:	movk	w10, #0x9747, lsl #16
   23cf4:	and	x28, x21, #0xffffffff
   23cf8:	add	x9, x23, x9
   23cfc:	lsr	x13, x21, #32
   23d00:	movk	w8, #0x5bd1, lsl #16
   23d04:	str	x9, [sp, #16]
   23d08:	eor	w10, w10, w21, lsl #3
   23d0c:	mov	x9, x20
   23d10:	mov	x11, x28
   23d14:	ldr	w12, [x9], #8
   23d18:	mul	w10, w10, w8
   23d1c:	subs	x11, x11, #0x1
   23d20:	mul	w12, w12, w8
   23d24:	eor	w12, w12, w12, lsr #24
   23d28:	mul	w12, w12, w8
   23d2c:	eor	w10, w12, w10
   23d30:	b.ne	23d14 <__sanitizer_cov_pcs_init@@Base+0xae0>  // b.any
   23d34:	eor	w9, w10, w10, lsr #13
   23d38:	mul	w26, w9, w8
   23d3c:	and	w8, w26, #0xfffff
   23d40:	eor	w11, w8, w26, lsr #15
   23d44:	add	x29, x23, w11, uxtw #3
   23d48:	ldr	x8, [x29]
   23d4c:	lsl	x22, x28, #3
   23d50:	ands	x27, x8, #0xfffffffffffffffe
   23d54:	b.eq	23db8 <__sanitizer_cov_pcs_init@@Base+0xb84>  // b.none
   23d58:	mov	x24, x27
   23d5c:	b	23d68 <__sanitizer_cov_pcs_init@@Base+0xb34>
   23d60:	ldr	x24, [x24]
   23d64:	cbz	x24, 23db8 <__sanitizer_cov_pcs_init@@Base+0xb84>
   23d68:	ldr	w8, [x24, #12]
   23d6c:	eor	w8, w8, w26
   23d70:	lsr	w8, w8, #20
   23d74:	cbnz	w8, 23d60 <__sanitizer_cov_pcs_init@@Base+0xb2c>
   23d78:	ldr	w8, [x24, #16]
   23d7c:	cmp	w8, w21
   23d80:	b.ne	23d60 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   23d84:	ldr	w8, [x24, #20]
   23d88:	cmp	w8, w13
   23d8c:	b.ne	23d60 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   23d90:	mov	x8, xzr
   23d94:	add	x9, x24, x8
   23d98:	ldr	x9, [x9, #24]
   23d9c:	ldr	x10, [x20, x8]
   23da0:	cmp	x9, x10
   23da4:	b.ne	23d60 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   23da8:	add	x8, x8, #0x8
   23dac:	cmp	x22, x8
   23db0:	b.ne	23d94 <__sanitizer_cov_pcs_init@@Base+0xb60>  // b.any
   23db4:	b	24038 <__sanitizer_cov_pcs_init@@Base+0xe04>
   23db8:	mov	w24, wzr
   23dbc:	str	x11, [sp, #8]
   23dc0:	str	x13, [sp, #24]
   23dc4:	ldr	x25, [x29]
   23dc8:	tbnz	w25, #0, 23ddc <__sanitizer_cov_pcs_init@@Base+0xba8>
   23dcc:	b	23de8 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   23dd0:	add	w24, w24, #0x1
   23dd4:	ldr	x25, [x29]
   23dd8:	tbz	w25, #0, 23de8 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   23ddc:	cmp	w24, #0x9
   23de0:	b.ls	23dd0 <__sanitizer_cov_pcs_init@@Base+0xb9c>  // b.plast
   23de4:	b	23e10 <__sanitizer_cov_pcs_init@@Base+0xbdc>
   23de8:	orr	x8, x25, #0x1
   23dec:	ldaxr	x9, [x29]
   23df0:	cmp	x9, x25
   23df4:	b.ne	23e04 <__sanitizer_cov_pcs_init@@Base+0xbd0>  // b.any
   23df8:	stlxr	w9, x8, [x29]
   23dfc:	cbnz	w9, 23dec <__sanitizer_cov_pcs_init@@Base+0xbb8>
   23e00:	b	23e28 <__sanitizer_cov_pcs_init@@Base+0xbf4>
   23e04:	clrex
   23e08:	cmp	w24, #0x9
   23e0c:	b.ls	23dd0 <__sanitizer_cov_pcs_init@@Base+0xb9c>  // b.plast
   23e10:	bl	19c08 <__sanitizer_set_report_fd@@Base+0x35c4>
   23e14:	ldr	x13, [sp, #24]
   23e18:	add	w24, w24, #0x1
   23e1c:	ldr	x25, [x29]
   23e20:	tbz	w25, #0, 23de8 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   23e24:	b	23ddc <__sanitizer_cov_pcs_init@@Base+0xba8>
   23e28:	cbz	x25, 23ea0 <__sanitizer_cov_pcs_init@@Base+0xc6c>
   23e2c:	cmp	x25, x27
   23e30:	b.eq	23ea0 <__sanitizer_cov_pcs_init@@Base+0xc6c>  // b.none
   23e34:	mov	x24, x25
   23e38:	b	23e44 <__sanitizer_cov_pcs_init@@Base+0xc10>
   23e3c:	ldr	x24, [x24]
   23e40:	cbz	x24, 23ea0 <__sanitizer_cov_pcs_init@@Base+0xc6c>
   23e44:	ldr	w8, [x24, #12]
   23e48:	eor	w8, w8, w26
   23e4c:	lsr	w8, w8, #20
   23e50:	cbnz	w8, 23e3c <__sanitizer_cov_pcs_init@@Base+0xc08>
   23e54:	ldr	w8, [x24, #16]
   23e58:	cmp	w8, w21
   23e5c:	b.ne	23e3c <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   23e60:	ldr	w8, [x24, #20]
   23e64:	cmp	w8, w13
   23e68:	b.ne	23e3c <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   23e6c:	mov	x8, xzr
   23e70:	lsl	x9, x8, #3
   23e74:	add	x10, x24, x9
   23e78:	ldr	x10, [x10, #24]
   23e7c:	ldr	x9, [x20, x9]
   23e80:	cmp	x10, x9
   23e84:	b.ne	23e3c <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   23e88:	add	x8, x8, #0x1
   23e8c:	cmp	x28, x8
   23e90:	b.ne	23e70 <__sanitizer_cov_pcs_init@@Base+0xc3c>  // b.any
   23e94:	dmb	ish
   23e98:	str	x25, [x29]
   23e9c:	b	24038 <__sanitizer_cov_pcs_init@@Base+0xe04>
   23ea0:	ldr	x8, [sp, #8]
   23ea4:	lsr	x8, x8, #12
   23ea8:	add	x9, x23, x8, lsl #2
   23eac:	add	x10, x9, #0x800, lsl #12
   23eb0:	ldaxr	w9, [x10]
   23eb4:	add	w9, w9, #0x1
   23eb8:	stlxr	w11, w9, [x10]
   23ebc:	cbnz	w11, 23eb0 <__sanitizer_cov_pcs_init@@Base+0xc7c>
   23ec0:	ldr	x11, [sp, #16]
   23ec4:	cmp	w9, #0x800, lsl #12
   23ec8:	ldr	x10, [x11]
   23ecc:	add	x10, x10, #0x1
   23ed0:	str	x10, [x11]
   23ed4:	b.cs	2405c <__sanitizer_cov_pcs_init@@Base+0xe28>  // b.hs, b.nlast
   23ed8:	orr	w23, w9, w8, lsl #23
   23edc:	cbz	w23, 2407c <__sanitizer_cov_pcs_init@@Base+0xe48>
   23ee0:	tbnz	w23, #31, 2409c <__sanitizer_cov_pcs_init@@Base+0xe68>
   23ee4:	adrp	x28, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23ee8:	mov	x8, #0x7fffffff8           	// #34359738360
   23eec:	ldr	x28, [x28, #3712]
   23ef0:	add	x8, x8, x21, lsl #3
   23ef4:	and	x8, x8, #0x7fffffff8
   23ef8:	add	x27, x8, #0x20
   23efc:	ldr	x24, [x28, #8]
   23f00:	dmb	ish
   23f04:	ldr	x9, [x28, #16]
   23f08:	dmb	ish
   23f0c:	cbz	x24, 23f40 <__sanitizer_cov_pcs_init@@Base+0xd0c>
   23f10:	add	x8, x24, x27
   23f14:	cmp	x8, x9
   23f18:	b.hi	23f40 <__sanitizer_cov_pcs_init@@Base+0xd0c>  // b.pmore
   23f1c:	add	x9, x28, #0x8
   23f20:	ldaxr	x10, [x9]
   23f24:	cmp	x10, x24
   23f28:	b.ne	23f38 <__sanitizer_cov_pcs_init@@Base+0xd04>  // b.any
   23f2c:	stlxr	w10, x8, [x9]
   23f30:	cbnz	w10, 23f1c <__sanitizer_cov_pcs_init@@Base+0xce8>
   23f34:	b	23ff4 <__sanitizer_cov_pcs_init@@Base+0xdc0>
   23f38:	clrex
   23f3c:	b	23efc <__sanitizer_cov_pcs_init@@Base+0xcc8>
   23f40:	ldaxrb	w8, [x28]
   23f44:	mov	w9, #0x1                   	// #1
   23f48:	stlxrb	w10, w9, [x28]
   23f4c:	cbnz	w10, 23f40 <__sanitizer_cov_pcs_init@@Base+0xd0c>
   23f50:	cbz	w8, 23f60 <__sanitizer_cov_pcs_init@@Base+0xd2c>
   23f54:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   23f58:	ldr	x0, [x0, #3712]
   23f5c:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   23f60:	cmp	x27, #0x10, lsl #12
   23f64:	mov	w8, #0x10000               	// #65536
   23f68:	csel	x8, x27, x8, hi  // hi = pmore
   23f6c:	str	x8, [sp, #8]
   23f70:	b	23fa4 <__sanitizer_cov_pcs_init@@Base+0xd70>
   23f74:	str	xzr, [x28, #8]
   23f78:	ldr	x24, [sp, #8]
   23f7c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   23f80:	add	x1, x1, #0xfd6
   23f84:	mov	w2, wzr
   23f88:	mov	x0, x24
   23f8c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   23f90:	add	x8, x24, x0
   23f94:	dmb	ish
   23f98:	str	x8, [x28, #16]
   23f9c:	dmb	ish
   23fa0:	str	x0, [x28, #8]
   23fa4:	ldr	x24, [x28, #8]
   23fa8:	dmb	ish
   23fac:	ldr	x9, [x28, #16]
   23fb0:	dmb	ish
   23fb4:	cbz	x24, 23f74 <__sanitizer_cov_pcs_init@@Base+0xd40>
   23fb8:	add	x8, x24, x27
   23fbc:	cmp	x8, x9
   23fc0:	b.hi	23f74 <__sanitizer_cov_pcs_init@@Base+0xd40>  // b.pmore
   23fc4:	ldp	x11, x13, [sp, #16]
   23fc8:	add	x9, x28, #0x8
   23fcc:	ldaxr	x10, [x9]
   23fd0:	cmp	x10, x24
   23fd4:	b.ne	23fe4 <__sanitizer_cov_pcs_init@@Base+0xdb0>  // b.any
   23fd8:	stlxr	w10, x8, [x9]
   23fdc:	cbnz	w10, 23fc8 <__sanitizer_cov_pcs_init@@Base+0xd94>
   23fe0:	b	23fec <__sanitizer_cov_pcs_init@@Base+0xdb8>
   23fe4:	clrex
   23fe8:	b	23fa4 <__sanitizer_cov_pcs_init@@Base+0xd70>
   23fec:	dmb	ish
   23ff0:	strb	wzr, [x28]
   23ff4:	ldr	x8, [x11, #8]
   23ff8:	and	w9, w26, #0xfff00000
   23ffc:	add	x0, x24, #0x18
   24000:	mov	x1, x20
   24004:	add	x8, x8, x27
   24008:	mov	x2, x22
   2400c:	str	x8, [x11, #8]
   24010:	str	w23, [x24, #8]
   24014:	str	w9, [x24, #12]
   24018:	stp	w21, w13, [x24, #16]
   2401c:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   24020:	str	x25, [x24]
   24024:	dmb	ish
   24028:	str	x24, [x29]
   2402c:	cbz	x19, 24038 <__sanitizer_cov_pcs_init@@Base+0xe04>
   24030:	mov	w8, #0x1                   	// #1
   24034:	strb	w8, [x19]
   24038:	mov	x0, x24
   2403c:	ldp	x20, x19, [sp, #112]
   24040:	ldp	x22, x21, [sp, #96]
   24044:	ldp	x24, x23, [sp, #80]
   24048:	ldp	x26, x25, [sp, #64]
   2404c:	ldp	x28, x27, [sp, #48]
   24050:	ldp	x29, x30, [sp, #32]
   24054:	add	sp, sp, #0x80
   24058:	ret
   2405c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24060:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24064:	mov	w3, w9
   24068:	add	x0, x0, #0xf29
   2406c:	add	x2, x2, #0xf82
   24070:	mov	w1, #0x78                  	// #120
   24074:	mov	w4, #0x800000              	// #8388608
   24078:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2407c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24080:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24084:	add	x0, x0, #0xf29
   24088:	add	x2, x2, #0xf96
   2408c:	mov	w1, #0x7a                  	// #122
   24090:	mov	x3, x23
   24094:	mov	x4, xzr
   24098:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2409c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   240a0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   240a4:	and	w3, w23, #0x7fffffff
   240a8:	add	x0, x0, #0xf29
   240ac:	add	x2, x2, #0xfa6
   240b0:	mov	w1, #0x7b                  	// #123
   240b4:	mov	x4, x23
   240b8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   240bc:	str	x30, [sp, #-32]!
   240c0:	stp	x20, x19, [sp, #16]
   240c4:	ldp	x8, x3, [x0, #8]
   240c8:	lsr	x4, x8, #4
   240cc:	cmp	x3, x4
   240d0:	b.hi	24158 <__sanitizer_cov_pcs_init@@Base+0xf24>  // b.pmore
   240d4:	mov	x19, x0
   240d8:	mov	x20, x1
   240dc:	b.ne	24134 <__sanitizer_cov_pcs_init@@Base+0xf00>  // b.any
   240e0:	adds	x3, x3, #0x1
   240e4:	b.cs	24170 <__sanitizer_cov_pcs_init@@Base+0xf3c>  // b.hs, b.nlast
   240e8:	sub	x8, x3, #0x1
   240ec:	tst	x3, x8
   240f0:	b.ne	240fc <__sanitizer_cov_pcs_init@@Base+0xec8>  // b.any
   240f4:	mov	x8, x3
   240f8:	b	24124 <__sanitizer_cov_pcs_init@@Base+0xef0>
   240fc:	clz	x8, x3
   24100:	eor	x9, x8, #0x3f
   24104:	mov	w8, #0x2                   	// #2
   24108:	lsl	x8, x8, x9
   2410c:	cmp	x8, x3
   24110:	b.ls	24190 <__sanitizer_cov_pcs_init@@Base+0xf5c>  // b.plast
   24114:	mov	w10, #0x1                   	// #1
   24118:	lsl	x4, x10, x9
   2411c:	cmp	x4, x3
   24120:	b.cs	241ac <__sanitizer_cov_pcs_init@@Base+0xf78>  // b.hs, b.nlast
   24124:	mov	x0, x19
   24128:	mov	x1, x8
   2412c:	bl	241c4 <__sanitizer_cov_pcs_init@@Base+0xf90>
   24130:	ldr	x3, [x19, #16]
   24134:	add	x9, x3, #0x1
   24138:	ldr	x8, [x19]
   2413c:	str	x9, [x19, #16]
   24140:	mov	x1, x20
   24144:	ldp	x20, x19, [sp, #16]
   24148:	add	x0, x8, x3, lsl #4
   2414c:	mov	w2, #0x10                  	// #16
   24150:	ldr	x30, [sp], #32
   24154:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   24158:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2415c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   24160:	add	x0, x0, #0xb2f
   24164:	add	x2, x2, #0x41
   24168:	mov	w1, #0x1cd                 	// #461
   2416c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24170:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24174:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   24178:	add	x0, x0, #0xb2f
   2417c:	add	x2, x2, #0x5d
   24180:	mov	w1, #0x186                 	// #390
   24184:	mov	x3, xzr
   24188:	mov	x4, xzr
   2418c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24190:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24194:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   24198:	add	x0, x0, #0xb2f
   2419c:	add	x2, x2, #0x156
   241a0:	mov	w1, #0x18a                 	// #394
   241a4:	mov	x4, x8
   241a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   241ac:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   241b0:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   241b4:	add	x0, x0, #0xb2f
   241b8:	add	x2, x2, #0x178
   241bc:	mov	w1, #0x18b                 	// #395
   241c0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   241c4:	stp	x30, x21, [sp, #-32]!
   241c8:	stp	x20, x19, [sp, #16]
   241cc:	cbz	x1, 2425c <__sanitizer_cov_pcs_init@@Base+0x1028>
   241d0:	ldr	x3, [x0, #16]
   241d4:	mov	x20, x1
   241d8:	mov	x19, x0
   241dc:	cmp	x3, x1
   241e0:	b.hi	2427c <__sanitizer_cov_pcs_init@@Base+0x1048>  // b.pmore
   241e4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   241e8:	ldr	x21, [x21, #4016]
   241ec:	ldr	x0, [x21]
   241f0:	cbnz	x0, 241fc <__sanitizer_cov_pcs_init@@Base+0xfc8>
   241f4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   241f8:	str	x0, [x21]
   241fc:	sub	x8, x0, #0x1
   24200:	tst	x0, x8
   24204:	b.ne	24298 <__sanitizer_cov_pcs_init@@Base+0x1064>  // b.any
   24208:	lsl	x8, x20, #4
   2420c:	add	x8, x8, x0
   24210:	sub	x8, x8, #0x1
   24214:	neg	x9, x0
   24218:	and	x20, x8, x9
   2421c:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   24220:	add	x1, x1, #0x950
   24224:	mov	x0, x20
   24228:	mov	w2, wzr
   2422c:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   24230:	ldr	x8, [x19, #16]
   24234:	ldr	x1, [x19]
   24238:	mov	x21, x0
   2423c:	lsl	x2, x8, #4
   24240:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   24244:	ldp	x0, x1, [x19]
   24248:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   2424c:	stp	x21, x20, [x19]
   24250:	ldp	x20, x19, [sp, #16]
   24254:	ldp	x30, x21, [sp], #32
   24258:	ret
   2425c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24260:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   24264:	add	x0, x0, #0xb2f
   24268:	add	x2, x2, #0x919
   2426c:	mov	w1, #0x20b                 	// #523
   24270:	mov	x3, xzr
   24274:	mov	x4, xzr
   24278:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2427c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24280:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   24284:	add	x0, x0, #0xb2f
   24288:	add	x2, x2, #0x932
   2428c:	mov	w1, #0x20c                 	// #524
   24290:	mov	x4, x20
   24294:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24298:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   2429c:	add	x0, x0, #0x20f
   242a0:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   242a4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   242a8:	add	x0, x0, #0x4
   242ac:	ret
   242b0:	mov	x0, x30
   242b4:	ret
   242b8:	stp	x30, x21, [sp, #-32]!
   242bc:	stp	x20, x19, [sp, #16]
   242c0:	cmp	x3, #0x0
   242c4:	cinc	x8, x2, ne  // ne = any
   242c8:	mov	x20, x3
   242cc:	and	x3, x8, #0xffffffff
   242d0:	cmp	x3, #0x101
   242d4:	str	w8, [x0, #8]
   242d8:	b.cs	2430c <__sanitizer_cov_pcs_init@@Base+0x10d8>  // b.hs, b.nlast
   242dc:	mov	x21, x2
   242e0:	mov	x19, x0
   242e4:	add	x0, x0, #0x10
   242e8:	lsl	x2, x2, #3
   242ec:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   242f0:	cbz	x20, 242fc <__sanitizer_cov_pcs_init@@Base+0x10c8>
   242f4:	add	x8, x19, x21, lsl #3
   242f8:	str	x20, [x8, #16]
   242fc:	str	xzr, [x19, #2064]
   24300:	ldp	x20, x19, [sp, #16]
   24304:	ldp	x30, x21, [sp], #32
   24308:	ret
   2430c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24310:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24314:	add	x0, x0, #0xff9
   24318:	add	x2, x2, #0x50
   2431c:	mov	w1, #0x23                  	// #35
   24320:	mov	w4, #0x100                 	// #256
   24324:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24328:	stp	x30, x25, [sp, #-64]!
   2432c:	stp	x24, x23, [sp, #16]
   24330:	stp	x22, x21, [sp, #32]
   24334:	stp	x20, x19, [sp, #48]
   24338:	mov	w21, w5
   2433c:	cmp	w5, #0x1
   24340:	b.ls	24438 <__sanitizer_cov_pcs_init@@Base+0x1204>  // b.plast
   24344:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   24348:	ldr	x25, [x25, #4016]
   2434c:	mov	x23, x0
   24350:	mov	x24, x4
   24354:	mov	x19, x3
   24358:	ldr	x0, [x25]
   2435c:	mov	x20, x2
   24360:	mov	x22, x1
   24364:	cbnz	x0, 24370 <__sanitizer_cov_pcs_init@@Base+0x113c>
   24368:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   2436c:	str	x0, [x25]
   24370:	mov	w8, #0x1                   	// #1
   24374:	cmp	x19, #0x1, lsl #12
   24378:	str	x22, [x23, #16]
   2437c:	str	w8, [x23, #8]
   24380:	b.cs	24398 <__sanitizer_cov_pcs_init@@Base+0x1164>  // b.hs, b.nlast
   24384:	ldp	x20, x19, [sp, #48]
   24388:	ldp	x22, x21, [sp, #32]
   2438c:	ldp	x24, x23, [sp, #16]
   24390:	ldp	x30, x25, [sp], #64
   24394:	ret
   24398:	cmp	x19, x24
   2439c:	b.ls	24458 <__sanitizer_cov_pcs_init@@Base+0x1224>  // b.plast
   243a0:	tst	x20, #0x7
   243a4:	b.ne	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.any
   243a8:	sub	x8, x19, #0x10
   243ac:	cmp	x8, x20
   243b0:	b.ls	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   243b4:	cmp	x20, x24
   243b8:	b.ls	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   243bc:	mov	w9, #0x1                   	// #1
   243c0:	cmp	w9, w21
   243c4:	b.cs	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.hs, b.nlast
   243c8:	ldr	x10, [x20, #8]
   243cc:	cmp	x10, x0
   243d0:	b.cc	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.lo, b.ul, b.last
   243d4:	cmp	x10, x22
   243d8:	b.eq	243ec <__sanitizer_cov_pcs_init@@Base+0x11b8>  // b.none
   243dc:	add	x11, x23, w9, uxtw #3
   243e0:	add	w9, w9, #0x1
   243e4:	str	w9, [x23, #8]
   243e8:	str	x10, [x11, #16]
   243ec:	cmp	x20, x19
   243f0:	b.cs	24418 <__sanitizer_cov_pcs_init@@Base+0x11e4>  // b.hs, b.nlast
   243f4:	ldr	x10, [x20]
   243f8:	tst	x10, #0x7
   243fc:	b.ne	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.any
   24400:	cmp	x8, x10
   24404:	b.ls	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   24408:	cmp	x10, x20
   2440c:	mov	x20, x10
   24410:	b.hi	243c0 <__sanitizer_cov_pcs_init@@Base+0x118c>  // b.pmore
   24414:	b	24384 <__sanitizer_cov_pcs_init@@Base+0x1150>
   24418:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2441c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24420:	add	x0, x0, #0xff9
   24424:	add	x2, x2, #0x9b
   24428:	mov	w1, #0x33                  	// #51
   2442c:	mov	x3, x19
   24430:	mov	x4, x20
   24434:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24438:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2443c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24440:	mov	w3, w21
   24444:	add	x0, x0, #0xff9
   24448:	add	x2, x2, #0x6f
   2444c:	mov	w1, #0x49                  	// #73
   24450:	mov	w4, #0x2                   	// #2
   24454:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24458:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   2445c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24460:	add	x0, x0, #0xff9
   24464:	add	x2, x2, #0x9b
   24468:	mov	w1, #0x33                  	// #51
   2446c:	mov	x3, x19
   24470:	mov	x4, x24
   24474:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24478:	str	x30, [sp, #-16]!
   2447c:	ldr	w4, [x0, #8]
   24480:	mov	x3, x1
   24484:	cmp	x4, x1
   24488:	b.ls	2453c <__sanitizer_cov_pcs_init@@Base+0x1308>  // b.plast
   2448c:	subs	w8, w4, w3
   24490:	str	w8, [x0, #8]
   24494:	b.eq	24504 <__sanitizer_cov_pcs_init@@Base+0x12d0>  // b.none
   24498:	cmp	w8, #0x3
   2449c:	b.ls	244d8 <__sanitizer_cov_pcs_init@@Base+0x12a4>  // b.plast
   244a0:	lsl	x10, x8, #3
   244a4:	lsl	x9, x3, #3
   244a8:	add	x12, x9, x10
   244ac:	add	x12, x12, x0
   244b0:	add	x11, x0, #0x10
   244b4:	add	x12, x12, #0x10
   244b8:	cmp	x12, x11
   244bc:	b.ls	2450c <__sanitizer_cov_pcs_init@@Base+0x12d8>  // b.plast
   244c0:	add	x10, x10, x0
   244c4:	add	x11, x9, x0
   244c8:	add	x10, x10, #0x10
   244cc:	add	x11, x11, #0x10
   244d0:	cmp	x11, x10
   244d4:	b.cs	2450c <__sanitizer_cov_pcs_init@@Base+0x12d8>  // b.hs, b.nlast
   244d8:	mov	x10, xzr
   244dc:	sub	x8, x8, x10
   244e0:	add	x9, x0, x10, lsl #3
   244e4:	add	x10, x10, x3
   244e8:	add	x10, x0, x10, lsl #3
   244ec:	add	x9, x9, #0x10
   244f0:	add	x10, x10, #0x10
   244f4:	ldr	x11, [x10], #8
   244f8:	subs	x8, x8, #0x1
   244fc:	str	x11, [x9], #8
   24500:	b.ne	244f4 <__sanitizer_cov_pcs_init@@Base+0x12c0>  // b.any
   24504:	ldr	x30, [sp], #16
   24508:	ret
   2450c:	and	x10, x8, #0xfffffffc
   24510:	mov	x11, x10
   24514:	mov	x12, x0
   24518:	add	x13, x12, x9
   2451c:	ldp	q1, q0, [x13, #16]
   24520:	subs	x11, x11, #0x4
   24524:	str	q0, [x12, #32]!
   24528:	stur	q1, [x12, #-16]
   2452c:	b.ne	24518 <__sanitizer_cov_pcs_init@@Base+0x12e4>  // b.any
   24530:	cmp	x10, x8
   24534:	b.ne	244dc <__sanitizer_cov_pcs_init@@Base+0x12a8>  // b.any
   24538:	b	24504 <__sanitizer_cov_pcs_init@@Base+0x12d0>
   2453c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7620>
   24540:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24544:	add	x0, x0, #0xff9
   24548:	add	x2, x2, #0x86
   2454c:	mov	w1, #0x74                  	// #116
   24550:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24554:	ldr	w9, [x0, #8]
   24558:	cmp	w9, #0x2
   2455c:	b.cc	245a8 <__sanitizer_cov_pcs_init@@Base+0x1374>  // b.lo, b.ul, b.last
   24560:	mov	x8, x0
   24564:	ldr	x8, [x8]
   24568:	mov	x0, xzr
   2456c:	mov	w10, #0x1                   	// #1
   24570:	ldr	x11, [x8, x10, lsl #3]
   24574:	ldr	x12, [x8, x0, lsl #3]
   24578:	sub	x13, x1, x11
   2457c:	subs	x11, x11, x1
   24580:	sub	x14, x1, x12
   24584:	csel	x11, x13, x11, cc  // cc = lo, ul, last
   24588:	subs	x12, x12, x1
   2458c:	csel	x12, x14, x12, cc  // cc = lo, ul, last
   24590:	cmp	x11, x12
   24594:	csel	x0, x10, x0, cc  // cc = lo, ul, last
   24598:	add	x10, x10, #0x1
   2459c:	cmp	x10, x9
   245a0:	b.cc	24570 <__sanitizer_cov_pcs_init@@Base+0x133c>  // b.lo, b.ul, b.last
   245a4:	ret
   245a8:	mov	x0, xzr
   245ac:	ret
   245b0:	sub	sp, sp, #0xa0
   245b4:	str	x30, [sp, #64]
   245b8:	stp	x28, x27, [sp, #80]
   245bc:	stp	x26, x25, [sp, #96]
   245c0:	stp	x24, x23, [sp, #112]
   245c4:	stp	x22, x21, [sp, #128]
   245c8:	stp	x20, x19, [sp, #144]
   245cc:	ldr	x8, [x0]
   245d0:	cbz	x8, 2461c <__sanitizer_cov_pcs_init@@Base+0x13e8>
   245d4:	ldr	w8, [x0, #8]
   245d8:	mov	x19, x0
   245dc:	cbz	w8, 2461c <__sanitizer_cov_pcs_init@@Base+0x13e8>
   245e0:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   245e4:	ldr	x21, [x21, #4016]
   245e8:	ldr	x0, [x21]
   245ec:	cbz	x0, 24644 <__sanitizer_cov_pcs_init@@Base+0x1410>
   245f0:	lsl	x20, x0, #1
   245f4:	stp	xzr, xzr, [sp, #40]
   245f8:	str	xzr, [sp, #32]
   245fc:	cbz	x20, 2465c <__sanitizer_cov_pcs_init@@Base+0x1428>
   24600:	add	x0, sp, #0x20
   24604:	mov	x1, x20
   24608:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   2460c:	ldr	x8, [sp, #48]
   24610:	cmp	x8, x20
   24614:	b.cc	24668 <__sanitizer_cov_pcs_init@@Base+0x1434>  // b.lo, b.ul, b.last
   24618:	b	24698 <__sanitizer_cov_pcs_init@@Base+0x1464>
   2461c:	ldp	x20, x19, [sp, #144]
   24620:	ldp	x22, x21, [sp, #128]
   24624:	ldp	x24, x23, [sp, #112]
   24628:	ldp	x26, x25, [sp, #96]
   2462c:	ldp	x28, x27, [sp, #80]
   24630:	ldr	x30, [sp, #64]
   24634:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24638:	add	x0, x0, #0xbc
   2463c:	add	sp, sp, #0xa0
   24640:	b	1ca54 <__sanitizer_on_print@@Base+0x4>
   24644:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   24648:	str	x0, [x21]
   2464c:	lsl	x20, x0, #1
   24650:	stp	xzr, xzr, [sp, #40]
   24654:	str	xzr, [sp, #32]
   24658:	cbnz	x20, 24600 <__sanitizer_cov_pcs_init@@Base+0x13cc>
   2465c:	mov	x8, xzr
   24660:	cmp	x8, x20
   24664:	b.cs	24698 <__sanitizer_cov_pcs_init@@Base+0x1464>  // b.hs, b.nlast
   24668:	ldr	x9, [sp, #40]
   2466c:	cmp	x9, x20
   24670:	b.cs	24684 <__sanitizer_cov_pcs_init@@Base+0x1450>  // b.hs, b.nlast
   24674:	add	x0, sp, #0x20
   24678:	mov	x1, x20
   2467c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24680:	ldr	x8, [sp, #48]
   24684:	ldr	x9, [sp, #32]
   24688:	sub	x2, x20, x8
   2468c:	mov	w1, wzr
   24690:	add	x0, x9, x8
   24694:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   24698:	stp	x20, xzr, [sp, #48]
   2469c:	cbz	x20, 24888 <__sanitizer_cov_pcs_init@@Base+0x1654>
   246a0:	ldr	x8, [sp, #32]
   246a4:	strb	wzr, [x8]
   246a8:	ldr	x20, [x21]
   246ac:	cbz	x20, 246d8 <__sanitizer_cov_pcs_init@@Base+0x14a4>
   246b0:	stp	xzr, xzr, [sp, #8]
   246b4:	str	xzr, [sp]
   246b8:	cbz	x20, 246f0 <__sanitizer_cov_pcs_init@@Base+0x14bc>
   246bc:	mov	x0, sp
   246c0:	mov	x1, x20
   246c4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   246c8:	ldr	x8, [sp, #16]
   246cc:	cmp	x8, x20
   246d0:	b.cc	246fc <__sanitizer_cov_pcs_init@@Base+0x14c8>  // b.lo, b.ul, b.last
   246d4:	b	2472c <__sanitizer_cov_pcs_init@@Base+0x14f8>
   246d8:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   246dc:	mov	x20, x0
   246e0:	str	x0, [x21]
   246e4:	stp	xzr, xzr, [sp, #8]
   246e8:	str	xzr, [sp]
   246ec:	cbnz	x20, 246bc <__sanitizer_cov_pcs_init@@Base+0x1488>
   246f0:	mov	x8, xzr
   246f4:	cmp	x8, x20
   246f8:	b.cs	2472c <__sanitizer_cov_pcs_init@@Base+0x14f8>  // b.hs, b.nlast
   246fc:	ldr	x9, [sp, #8]
   24700:	cmp	x9, x20
   24704:	b.cs	24718 <__sanitizer_cov_pcs_init@@Base+0x14e4>  // b.hs, b.nlast
   24708:	mov	x0, sp
   2470c:	mov	x1, x20
   24710:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24714:	ldr	x8, [sp, #16]
   24718:	ldr	x9, [sp]
   2471c:	sub	x2, x20, x8
   24720:	mov	w1, wzr
   24724:	add	x0, x9, x8
   24728:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2472c:	stp	x20, xzr, [sp, #16]
   24730:	cbz	x20, 24888 <__sanitizer_cov_pcs_init@@Base+0x1654>
   24734:	ldr	x8, [sp]
   24738:	strb	wzr, [x8]
   2473c:	ldr	w8, [x19, #8]
   24740:	cbz	w8, 24834 <__sanitizer_cov_pcs_init@@Base+0x1600>
   24744:	adrp	x25, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   24748:	ldr	x25, [x25, #4056]
   2474c:	adrp	x20, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24750:	adrp	x21, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   24754:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24758:	ldr	w26, [x25, #192]
   2475c:	mov	x27, xzr
   24760:	mov	x24, xzr
   24764:	add	x20, x20, #0xcf
   24768:	add	x21, x21, #0x22b
   2476c:	add	x22, x22, #0x141
   24770:	b	2478c <__sanitizer_cov_pcs_init@@Base+0x1558>
   24774:	mov	x0, x23
   24778:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2477c:	ldr	w8, [x19, #8]
   24780:	add	x24, x24, #0x1
   24784:	cmp	x24, x8
   24788:	b.cs	24834 <__sanitizer_cov_pcs_init@@Base+0x1600>  // b.hs, b.nlast
   2478c:	ldr	x8, [x19]
   24790:	ldr	x8, [x8, x24, lsl #3]
   24794:	cbz	x8, 24834 <__sanitizer_cov_pcs_init@@Base+0x1600>
   24798:	sub	x23, x8, #0x4
   2479c:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   247a0:	mov	x1, x23
   247a4:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   247a8:	mov	x23, x0
   247ac:	mov	x28, x0
   247b0:	cbnz	x0, 247c0 <__sanitizer_cov_pcs_init@@Base+0x158c>
   247b4:	b	248a8 <__sanitizer_cov_pcs_init@@Base+0x1674>
   247b8:	ldr	x28, [x28]
   247bc:	cbz	x28, 24774 <__sanitizer_cov_pcs_init@@Base+0x1540>
   247c0:	ldr	x8, [sp, #48]
   247c4:	cbz	x8, 24888 <__sanitizer_cov_pcs_init@@Base+0x1654>
   247c8:	ldr	x8, [sp, #32]
   247cc:	mov	x2, x27
   247d0:	add	x3, x28, #0x8
   247d4:	add	x0, sp, #0x20
   247d8:	strb	wzr, [x8]
   247dc:	ldr	x1, [x25, #200]
   247e0:	ldrb	w4, [x25, #189]
   247e4:	ldr	x5, [x25, #24]
   247e8:	mov	x6, x20
   247ec:	str	xzr, [sp, #56]
   247f0:	add	x27, x27, #0x1
   247f4:	bl	24d0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   247f8:	ldr	x1, [sp, #32]
   247fc:	mov	x0, x21
   24800:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   24804:	subs	w26, w26, #0x1
   24808:	b.lt	247b8 <__sanitizer_cov_pcs_init@@Base+0x1584>  // b.tstop
   2480c:	ldr	x8, [sp, #24]
   24810:	cbz	x8, 24820 <__sanitizer_cov_pcs_init@@Base+0x15ec>
   24814:	mov	x0, sp
   24818:	mov	x1, x22
   2481c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24820:	ldr	x1, [x28, #40]
   24824:	cbz	x1, 247b8 <__sanitizer_cov_pcs_init@@Base+0x1584>
   24828:	mov	x0, sp
   2482c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24830:	b	247b8 <__sanitizer_cov_pcs_init@@Base+0x1584>
   24834:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24838:	add	x0, x0, #0xce
   2483c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   24840:	ldr	x8, [sp, #24]
   24844:	cbz	x8, 24858 <__sanitizer_cov_pcs_init@@Base+0x1624>
   24848:	ldr	x1, [sp]
   2484c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24850:	add	x0, x0, #0x144
   24854:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   24858:	ldp	x0, x1, [sp]
   2485c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   24860:	ldp	x0, x1, [sp, #32]
   24864:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   24868:	ldp	x20, x19, [sp, #144]
   2486c:	ldp	x22, x21, [sp, #128]
   24870:	ldp	x24, x23, [sp, #112]
   24874:	ldp	x26, x25, [sp, #96]
   24878:	ldp	x28, x27, [sp, #80]
   2487c:	ldr	x30, [sp, #64]
   24880:	add	sp, sp, #0xa0
   24884:	ret
   24888:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2488c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24890:	add	x0, x0, #0xb2f
   24894:	add	x2, x2, #0x1eb
   24898:	mov	w1, #0x1c5                 	// #453
   2489c:	mov	x3, xzr
   248a0:	mov	x4, xzr
   248a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   248a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   248ac:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   248b0:	add	x0, x0, #0xd0
   248b4:	add	x2, x2, #0x12f
   248b8:	mov	w1, #0x23                  	// #35
   248bc:	mov	x3, xzr
   248c0:	mov	x4, xzr
   248c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   248c8:	cmp	w1, #0x0
   248cc:	mov	w8, w1
   248d0:	csel	x9, xzr, x3, eq  // eq = none
   248d4:	cmp	w1, #0x1
   248d8:	str	x9, [x0, #2064]
   248dc:	b.eq	248ec <__sanitizer_cov_pcs_init@@Base+0x16b8>  // b.none
   248e0:	cbnz	w8, 248f8 <__sanitizer_cov_pcs_init@@Base+0x16c4>
   248e4:	str	wzr, [x0, #8]
   248e8:	ret
   248ec:	str	w8, [x0, #8]
   248f0:	str	x2, [x0, #16]
   248f4:	ret
   248f8:	mov	x1, x2
   248fc:	tbz	w7, #0, 24914 <__sanitizer_cov_pcs_init@@Base+0x16e0>
   24900:	mov	x2, x3
   24904:	mov	x3, x5
   24908:	mov	x4, x6
   2490c:	mov	w5, w8
   24910:	b	24328 <__sanitizer_cov_pcs_init@@Base+0x10f4>
   24914:	cbz	x4, 24924 <__sanitizer_cov_pcs_init@@Base+0x16f0>
   24918:	mov	x2, x4
   2491c:	mov	w3, w8
   24920:	b	291b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4530>
   24924:	mov	w2, w8
   24928:	b	29064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>

000000000002492c <__sanitizer_symbolize_pc@@Base>:
   2492c:	sub	sp, sp, #0x70
   24930:	str	x30, [sp, #32]
   24934:	stp	x26, x25, [sp, #48]
   24938:	stp	x24, x23, [sp, #64]
   2493c:	stp	x22, x21, [sp, #80]
   24940:	stp	x20, x19, [sp, #96]
   24944:	cbz	x3, 24adc <__sanitizer_symbolize_pc@@Base+0x1b0>
   24948:	mov	x22, x3
   2494c:	mov	x19, x2
   24950:	mov	x20, x1
   24954:	sub	x21, x0, #0x4
   24958:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2495c:	mov	x1, x21
   24960:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   24964:	cbz	x0, 249a4 <__sanitizer_symbolize_pc@@Base+0x78>
   24968:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2496c:	ldr	x24, [x24, #4016]
   24970:	mov	x21, x0
   24974:	ldr	x23, [x24]
   24978:	cbz	x23, 249c4 <__sanitizer_symbolize_pc@@Base+0x98>
   2497c:	stp	xzr, xzr, [sp, #8]
   24980:	str	xzr, [sp]
   24984:	cbz	x23, 249dc <__sanitizer_symbolize_pc@@Base+0xb0>
   24988:	mov	x0, sp
   2498c:	mov	x1, x23
   24990:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24994:	ldr	x8, [sp, #16]
   24998:	cmp	x8, x23
   2499c:	b.cc	249e8 <__sanitizer_symbolize_pc@@Base+0xbc>  // b.lo, b.ul, b.last
   249a0:	b	24a18 <__sanitizer_symbolize_pc@@Base+0xec>
   249a4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   249a8:	add	x1, x1, #0x155
   249ac:	mov	x0, x19
   249b0:	mov	x2, x22
   249b4:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   249b8:	add	x8, x22, x19
   249bc:	sturb	wzr, [x8, #-1]
   249c0:	b	24adc <__sanitizer_symbolize_pc@@Base+0x1b0>
   249c4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   249c8:	mov	x23, x0
   249cc:	str	x0, [x24]
   249d0:	stp	xzr, xzr, [sp, #8]
   249d4:	str	xzr, [sp]
   249d8:	cbnz	x23, 24988 <__sanitizer_symbolize_pc@@Base+0x5c>
   249dc:	mov	x8, xzr
   249e0:	cmp	x8, x23
   249e4:	b.cs	24a18 <__sanitizer_symbolize_pc@@Base+0xec>  // b.hs, b.nlast
   249e8:	ldr	x9, [sp, #8]
   249ec:	cmp	x9, x23
   249f0:	b.cs	24a04 <__sanitizer_symbolize_pc@@Base+0xd8>  // b.hs, b.nlast
   249f4:	mov	x0, sp
   249f8:	mov	x1, x23
   249fc:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24a00:	ldr	x8, [sp, #16]
   24a04:	ldr	x9, [sp]
   24a08:	sub	x2, x23, x8
   24a0c:	mov	w1, wzr
   24a10:	add	x0, x9, x8
   24a14:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   24a18:	stp	x23, xzr, [sp, #16]
   24a1c:	cbz	x23, 24af8 <__sanitizer_symbolize_pc@@Base+0x1cc>
   24a20:	ldr	x8, [sp]
   24a24:	add	x9, x19, x22
   24a28:	sub	x25, x9, #0x1
   24a2c:	cmp	x25, x19
   24a30:	strb	wzr, [x8]
   24a34:	b.ls	24ac8 <__sanitizer_symbolize_pc@@Base+0x19c>  // b.plast
   24a38:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   24a3c:	ldr	x26, [x26, #4056]
   24a40:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24a44:	mov	w22, wzr
   24a48:	add	x23, x23, #0xcf
   24a4c:	ldr	x8, [sp, #16]
   24a50:	cbz	x8, 24af8 <__sanitizer_symbolize_pc@@Base+0x1cc>
   24a54:	ldr	x8, [sp]
   24a58:	add	x3, x21, #0x8
   24a5c:	mov	x0, sp
   24a60:	mov	x1, x20
   24a64:	strb	wzr, [x8]
   24a68:	ldrb	w4, [x26, #189]
   24a6c:	ldr	x5, [x26, #24]
   24a70:	mov	w2, w22
   24a74:	mov	x6, x23
   24a78:	str	xzr, [sp, #24]
   24a7c:	bl	24d0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   24a80:	ldr	x8, [sp, #24]
   24a84:	cbz	x8, 24ab4 <__sanitizer_symbolize_pc@@Base+0x188>
   24a88:	ldr	x1, [sp]
   24a8c:	mvn	x8, x19
   24a90:	add	x24, x8, x25
   24a94:	mov	x0, x19
   24a98:	mov	x2, x24
   24a9c:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   24aa0:	ldr	x8, [sp, #24]
   24aa4:	cmp	x24, x8
   24aa8:	csel	x8, x24, x8, cc  // cc = lo, ul, last
   24aac:	add	x19, x19, x8
   24ab0:	strb	wzr, [x19], #1
   24ab4:	ldr	x21, [x21]
   24ab8:	cbz	x21, 24ac8 <__sanitizer_symbolize_pc@@Base+0x19c>
   24abc:	cmp	x19, x25
   24ac0:	add	w22, w22, #0x1
   24ac4:	b.cc	24a4c <__sanitizer_symbolize_pc@@Base+0x120>  // b.lo, b.ul, b.last
   24ac8:	cmp	x19, x25
   24acc:	b.hi	24b18 <__sanitizer_symbolize_pc@@Base+0x1ec>  // b.pmore
   24ad0:	strb	wzr, [x19]
   24ad4:	ldp	x0, x1, [sp]
   24ad8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   24adc:	ldp	x20, x19, [sp, #96]
   24ae0:	ldp	x22, x21, [sp, #80]
   24ae4:	ldp	x24, x23, [sp, #64]
   24ae8:	ldp	x26, x25, [sp, #48]
   24aec:	ldr	x30, [sp, #32]
   24af0:	add	sp, sp, #0x70
   24af4:	ret
   24af8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24afc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24b00:	add	x0, x0, #0xb2f
   24b04:	add	x2, x2, #0x1eb
   24b08:	mov	w1, #0x1c5                 	// #453
   24b0c:	mov	x3, xzr
   24b10:	mov	x4, xzr
   24b14:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   24b18:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24b1c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24b20:	add	x0, x0, #0xd0
   24b24:	add	x2, x2, #0x167
   24b28:	mov	w1, #0x87                  	// #135
   24b2c:	mov	x3, xzr
   24b30:	mov	x4, xzr
   24b34:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000024b38 <__sanitizer_symbolize_global@@Base>:
   24b38:	sub	sp, sp, #0x90
   24b3c:	stp	x30, x23, [sp, #96]
   24b40:	stp	x22, x21, [sp, #112]
   24b44:	stp	x20, x19, [sp, #128]
   24b48:	cbz	x3, 24c54 <__sanitizer_symbolize_global@@Base+0x11c>
   24b4c:	mov	x22, x0
   24b50:	add	x0, sp, #0x20
   24b54:	mov	x19, x3
   24b58:	mov	x20, x2
   24b5c:	mov	x21, x1
   24b60:	strb	wzr, [x2]
   24b64:	bl	255ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x924>
   24b68:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   24b6c:	add	x2, sp, #0x20
   24b70:	mov	x1, x22
   24b74:	bl	25e38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11b0>
   24b78:	tbz	w0, #0, 24c54 <__sanitizer_symbolize_global@@Base+0x11c>
   24b7c:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   24b80:	ldr	x23, [x23, #4016]
   24b84:	ldr	x22, [x23]
   24b88:	cbz	x22, 24bb4 <__sanitizer_symbolize_global@@Base+0x7c>
   24b8c:	stp	xzr, xzr, [sp, #8]
   24b90:	str	xzr, [sp]
   24b94:	cbz	x22, 24bcc <__sanitizer_symbolize_global@@Base+0x94>
   24b98:	mov	x0, sp
   24b9c:	mov	x1, x22
   24ba0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24ba4:	ldr	x8, [sp, #16]
   24ba8:	cmp	x8, x22
   24bac:	b.cc	24bd8 <__sanitizer_symbolize_global@@Base+0xa0>  // b.lo, b.ul, b.last
   24bb0:	b	24c08 <__sanitizer_symbolize_global@@Base+0xd0>
   24bb4:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   24bb8:	mov	x22, x0
   24bbc:	str	x0, [x23]
   24bc0:	stp	xzr, xzr, [sp, #8]
   24bc4:	str	xzr, [sp]
   24bc8:	cbnz	x22, 24b98 <__sanitizer_symbolize_global@@Base+0x60>
   24bcc:	mov	x8, xzr
   24bd0:	cmp	x8, x22
   24bd4:	b.cs	24c08 <__sanitizer_symbolize_global@@Base+0xd0>  // b.hs, b.nlast
   24bd8:	ldr	x9, [sp, #8]
   24bdc:	cmp	x9, x22
   24be0:	b.cs	24bf4 <__sanitizer_symbolize_global@@Base+0xbc>  // b.hs, b.nlast
   24be4:	mov	x0, sp
   24be8:	mov	x1, x22
   24bec:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   24bf0:	ldr	x8, [sp, #16]
   24bf4:	ldr	x9, [sp]
   24bf8:	sub	x2, x22, x8
   24bfc:	mov	w1, wzr
   24c00:	add	x0, x9, x8
   24c04:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   24c08:	stp	x22, xzr, [sp, #16]
   24c0c:	cbz	x22, 24c68 <__sanitizer_symbolize_global@@Base+0x130>
   24c10:	ldr	x8, [sp]
   24c14:	mov	x0, sp
   24c18:	add	x2, sp, #0x20
   24c1c:	mov	x1, x21
   24c20:	strb	wzr, [x8]
   24c24:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   24c28:	ldr	x8, [x8, #4056]
   24c2c:	ldr	x3, [x8, #24]
   24c30:	bl	25314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>
   24c34:	ldr	x1, [sp]
   24c38:	mov	x0, x20
   24c3c:	mov	x2, x19
   24c40:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   24c44:	add	x8, x19, x20
   24c48:	sturb	wzr, [x8, #-1]
   24c4c:	ldp	x0, x1, [sp]
   24c50:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   24c54:	ldp	x20, x19, [sp, #128]
   24c58:	ldp	x22, x21, [sp, #112]
   24c5c:	ldp	x30, x23, [sp, #96]
   24c60:	add	sp, sp, #0x90
   24c64:	ret
   24c68:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24c6c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   24c70:	add	x0, x0, #0xb2f
   24c74:	add	x2, x2, #0x1eb
   24c78:	mov	w1, #0x1c5                 	// #453
   24c7c:	mov	x3, xzr
   24c80:	mov	x4, xzr
   24c84:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

0000000000024c88 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   24c88:	str	x30, [sp, #-48]!
   24c8c:	stp	x22, x21, [sp, #16]
   24c90:	stp	x20, x19, [sp, #32]
   24c94:	mov	x21, x3
   24c98:	mov	x19, x2
   24c9c:	mov	x20, x1
   24ca0:	mov	x22, x0
   24ca4:	str	xzr, [sp, #8]
   24ca8:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   24cac:	add	x2, sp, #0x8
   24cb0:	mov	x1, x22
   24cb4:	mov	x3, x21
   24cb8:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   24cbc:	tbz	w0, #0, 24cf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70>
   24cc0:	mov	w0, #0x1                   	// #1
   24cc4:	cbz	x20, 24ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>
   24cc8:	cbz	x19, 24ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>
   24ccc:	ldr	x1, [sp, #8]
   24cd0:	mov	x0, x20
   24cd4:	mov	x2, x19
   24cd8:	bl	191a4 <__sanitizer_set_report_fd@@Base+0x2b60>
   24cdc:	add	x8, x19, x20
   24ce0:	mov	w0, #0x1                   	// #1
   24ce4:	sturb	wzr, [x8, #-1]
   24ce8:	ldp	x20, x19, [sp, #32]
   24cec:	ldp	x22, x21, [sp, #16]
   24cf0:	ldr	x30, [sp], #48
   24cf4:	ret
   24cf8:	mov	w0, wzr
   24cfc:	ldp	x20, x19, [sp, #32]
   24d00:	ldp	x22, x21, [sp, #16]
   24d04:	ldr	x30, [sp], #48
   24d08:	ret
   24d0c:	sub	sp, sp, #0x70
   24d10:	stp	x29, x30, [sp, #16]
   24d14:	stp	x28, x27, [sp, #32]
   24d18:	stp	x26, x25, [sp, #48]
   24d1c:	stp	x24, x23, [sp, #64]
   24d20:	stp	x22, x21, [sp, #80]
   24d24:	stp	x20, x19, [sp, #96]
   24d28:	mov	x25, x1
   24d2c:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   24d30:	mov	x24, x0
   24d34:	add	x1, x1, #0x4cd
   24d38:	mov	x0, x25
   24d3c:	mov	x19, x6
   24d40:	mov	x20, x5
   24d44:	mov	w21, w4
   24d48:	mov	x22, x3
   24d4c:	str	w2, [sp, #12]
   24d50:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   24d54:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24d58:	add	x8, x8, #0x1ef
   24d5c:	cmp	w0, #0x0
   24d60:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24d64:	adrp	x27, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   24d68:	adrp	x26, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   24d6c:	csel	x29, x8, x25, eq  // eq = none
   24d70:	adrp	x25, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24d74:	add	x23, x23, #0x185
   24d78:	add	x27, x27, #0xba0
   24d7c:	add	x26, x26, #0x2e8
   24d80:	add	x25, x25, #0x200
   24d84:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24d88:	ldr	x2, [x22]
   24d8c:	mov	x0, x24
   24d90:	mov	x1, x26
   24d94:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24d98:	add	x29, x29, #0x1
   24d9c:	ldrb	w2, [x29]
   24da0:	cmp	w2, #0x25
   24da4:	b.eq	24dc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.none
   24da8:	cbz	w2, 250dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x454>
   24dac:	mov	x0, x24
   24db0:	mov	x1, x25
   24db4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24db8:	add	x29, x29, #0x1
   24dbc:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24dc0:	ldrb	w1, [x29, #1]!
   24dc4:	sub	w8, w1, #0x25
   24dc8:	cmp	w8, #0x4e
   24dcc:	b.hi	250fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x474>  // b.pmore
   24dd0:	adr	x9, 24d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100>
   24dd4:	ldrb	w10, [x23, x8]
   24dd8:	add	x9, x9, x10, lsl #2
   24ddc:	br	x9
   24de0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24de4:	mov	x0, x24
   24de8:	add	x1, x1, #0x203
   24dec:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24df0:	b	25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   24df4:	ldr	x8, [x22, #40]
   24df8:	cmn	x8, #0x1
   24dfc:	csel	x2, xzr, x8, eq  // eq = none
   24e00:	b	24d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x104>
   24e04:	ldr	w2, [sp, #12]
   24e08:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   24e0c:	mov	x0, x24
   24e10:	add	x1, x1, #0x316
   24e14:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24e18:	add	x29, x29, #0x1
   24e1c:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24e20:	ldr	w2, [x22, #56]
   24e24:	b	24ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>
   24e28:	ldr	x28, [x22, #32]
   24e2c:	cbz	x28, 25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   24e30:	cbz	x19, 24e64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dc>
   24e34:	mov	x0, x19
   24e38:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   24e3c:	mov	x27, x0
   24e40:	mov	x0, x28
   24e44:	mov	x1, x19
   24e48:	mov	x2, x27
   24e4c:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   24e50:	add	x8, x28, x27
   24e54:	adrp	x27, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   24e58:	cmp	w0, #0x0
   24e5c:	add	x27, x27, #0xba0
   24e60:	csel	x28, x8, x28, eq  // eq = none
   24e64:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24e68:	mov	x0, x24
   24e6c:	add	x1, x1, #0x206
   24e70:	mov	x2, x28
   24e74:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24e78:	ldr	x8, [x22, #48]
   24e7c:	cbnz	x8, 25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   24e80:	ldr	x2, [x22, #40]
   24e84:	cmn	x2, #0x1
   24e88:	b.eq	25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>  // b.none
   24e8c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24e90:	mov	x0, x24
   24e94:	add	x1, x1, #0x20c
   24e98:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24e9c:	add	x29, x29, #0x1
   24ea0:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24ea4:	ldr	w2, [x22, #60]
   24ea8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24eac:	mov	x0, x24
   24eb0:	add	x1, x1, #0x268
   24eb4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24eb8:	add	x29, x29, #0x1
   24ebc:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24ec0:	ldr	x0, [x22, #48]
   24ec4:	b	24f9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x314>
   24ec8:	ldr	x1, [x22, #48]
   24ecc:	cbnz	x1, 24f7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f4>
   24ed0:	ldr	x0, [x22, #8]
   24ed4:	cbz	x0, 25054 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc>
   24ed8:	ldr	x28, [x22, #16]
   24edc:	ldr	w27, [x22, #24]
   24ee0:	mov	x1, x20
   24ee4:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   24ee8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24eec:	mov	x2, x0
   24ef0:	mov	x0, x24
   24ef4:	add	x1, x1, #0x273
   24ef8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24efc:	cmp	w27, #0x8
   24f00:	b.hi	25110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488>  // b.pmore
   24f04:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24f08:	add	x10, x10, #0x1dd
   24f0c:	adr	x8, 25028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   24f10:	ldrb	w9, [x10, x27]
   24f14:	add	x8, x8, x9, lsl #2
   24f18:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24f1c:	add	x2, x2, #0x283
   24f20:	br	x8
   24f24:	ldr	x28, [x22, #32]
   24f28:	cbz	x28, 24f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   24f2c:	cbz	x19, 24f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   24f30:	mov	x0, x19
   24f34:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   24f38:	mov	x27, x0
   24f3c:	mov	x0, x28
   24f40:	mov	x1, x19
   24f44:	mov	x2, x27
   24f48:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   24f4c:	add	x8, x28, x27
   24f50:	adrp	x27, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   24f54:	cmp	w0, #0x0
   24f58:	add	x27, x27, #0xba0
   24f5c:	csel	x28, x8, x28, eq  // eq = none
   24f60:	mov	x0, x24
   24f64:	mov	x1, x27
   24f68:	mov	x2, x28
   24f6c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24f70:	add	x29, x29, #0x1
   24f74:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24f78:	ldr	x1, [x22, #48]
   24f7c:	ldp	w2, w3, [x22, #56]
   24f80:	and	w4, w21, #0x1
   24f84:	mov	x0, x24
   24f88:	mov	x5, x20
   24f8c:	bl	25130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   24f90:	add	x29, x29, #0x1
   24f94:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24f98:	ldr	x0, [x22, #8]
   24f9c:	mov	x1, x20
   24fa0:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   24fa4:	mov	x2, x0
   24fa8:	mov	x0, x24
   24fac:	mov	x1, x27
   24fb0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   24fb4:	add	x29, x29, #0x1
   24fb8:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   24fbc:	ldr	x2, [x22, #16]
   24fc0:	b	24d8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x104>
   24fc4:	ldr	x2, [x22]
   24fc8:	tbnz	x2, #60, 25034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   24fcc:	ldr	x0, [x22, #8]
   24fd0:	cbz	x0, 2503c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b4>
   24fd4:	bl	1375c <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   24fd8:	ldr	x28, [x22, #16]
   24fdc:	ldr	w27, [x22, #24]
   24fe0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24fe4:	add	x1, x1, #0xcf
   24fe8:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   24fec:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   24ff0:	mov	x2, x0
   24ff4:	mov	x0, x24
   24ff8:	add	x1, x1, #0x273
   24ffc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   25000:	cmp	w27, #0x8
   25004:	b.hi	25110 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488>  // b.pmore
   25008:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2500c:	add	x10, x10, #0x1d4
   25010:	adr	x8, 25028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   25014:	ldrb	w9, [x10, x27]
   25018:	add	x8, x8, x9, lsl #2
   2501c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25020:	add	x2, x2, #0x283
   25024:	br	x8
   25028:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2502c:	add	x2, x2, #0x288
   25030:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   25034:	add	x29, x29, #0x1
   25038:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   2503c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25040:	mov	x0, x24
   25044:	add	x1, x1, #0x226
   25048:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2504c:	add	x29, x29, #0x1
   25050:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   25054:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25058:	mov	x0, x24
   2505c:	add	x1, x1, #0x213
   25060:	b	24dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x164>
   25064:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25068:	add	x2, x2, #0x297
   2506c:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   25070:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25074:	add	x2, x2, #0x28f
   25078:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   2507c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25080:	add	x2, x2, #0x2aa
   25084:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   25088:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2508c:	add	x2, x2, #0x29d
   25090:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   25094:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25098:	add	x2, x2, #0x2a3
   2509c:	b	250a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   250a0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   250a4:	add	x2, x2, #0x5bb
   250a8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   250ac:	mov	x0, x24
   250b0:	add	x1, x1, #0x277
   250b4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   250b8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   250bc:	mov	x0, x24
   250c0:	add	x1, x1, #0x27b
   250c4:	mov	x2, x28
   250c8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   250cc:	adrp	x27, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   250d0:	add	x27, x27, #0xba0
   250d4:	add	x29, x29, #0x1
   250d8:	b	24d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   250dc:	ldp	x20, x19, [sp, #96]
   250e0:	ldp	x22, x21, [sp, #80]
   250e4:	ldp	x24, x23, [sp, #64]
   250e8:	ldp	x26, x25, [sp, #48]
   250ec:	ldp	x28, x27, [sp, #32]
   250f0:	ldp	x29, x30, [sp, #16]
   250f4:	add	sp, sp, #0x70
   250f8:	ret
   250fc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25100:	add	x0, x0, #0x22b
   25104:	mov	w2, w1
   25108:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2510c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   25110:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   25114:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25118:	add	x0, x0, #0xb2f
   2511c:	add	x2, x2, #0x2b1
   25120:	mov	w1, #0x2b8                 	// #696
   25124:	mov	x3, xzr
   25128:	mov	x4, xzr
   2512c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25130:	str	x30, [sp, #-48]!
   25134:	stp	x22, x21, [sp, #16]
   25138:	stp	x20, x19, [sp, #32]
   2513c:	mov	x19, x0
   25140:	mov	x0, x1
   25144:	mov	x1, x5
   25148:	mov	w22, w4
   2514c:	mov	w20, w3
   25150:	mov	w21, w2
   25154:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   25158:	cmp	w21, #0x1
   2515c:	mov	x2, x0
   25160:	b.lt	251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c>  // b.tstop
   25164:	tbz	w22, #0, 251b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c>
   25168:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2516c:	add	x1, x1, #0x265
   25170:	mov	x0, x19
   25174:	mov	w3, w21
   25178:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2517c:	cmp	w20, #0x1
   25180:	b.lt	25198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>  // b.tstop
   25184:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25188:	add	x1, x1, #0x26b
   2518c:	mov	x0, x19
   25190:	mov	w2, w20
   25194:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   25198:	mov	x0, x19
   2519c:	ldp	x20, x19, [sp, #32]
   251a0:	ldp	x22, x21, [sp, #16]
   251a4:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   251a8:	add	x1, x1, #0xcf7
   251ac:	ldr	x30, [sp], #48
   251b0:	b	1cbd8 <__sanitizer_on_print@@Base+0x188>
   251b4:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   251b8:	add	x1, x1, #0xba0
   251bc:	mov	x0, x19
   251c0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   251c4:	cmp	w21, #0x1
   251c8:	b.lt	25208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580>  // b.tstop
   251cc:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   251d0:	add	x1, x1, #0x26f
   251d4:	mov	x0, x19
   251d8:	mov	w2, w21
   251dc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   251e0:	cmp	w20, #0x1
   251e4:	b.lt	25208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580>  // b.tstop
   251e8:	mov	x0, x19
   251ec:	mov	w2, w20
   251f0:	ldp	x20, x19, [sp, #32]
   251f4:	ldp	x22, x21, [sp, #16]
   251f8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   251fc:	add	x1, x1, #0x26f
   25200:	ldr	x30, [sp], #48
   25204:	b	1cbd8 <__sanitizer_on_print@@Base+0x188>
   25208:	ldp	x20, x19, [sp, #32]
   2520c:	ldp	x22, x21, [sp, #16]
   25210:	ldr	x30, [sp], #48
   25214:	ret
   25218:	stp	x30, x21, [sp, #-32]!
   2521c:	stp	x20, x19, [sp, #16]
   25220:	mov	x20, x0
   25224:	mov	x0, x1
   25228:	mov	x1, x4
   2522c:	mov	w21, w3
   25230:	mov	x19, x2
   25234:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   25238:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2523c:	mov	x2, x0
   25240:	add	x1, x1, #0x273
   25244:	mov	x0, x20
   25248:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2524c:	cmp	w21, #0x8
   25250:	b.hi	252f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>  // b.pmore
   25254:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25258:	mov	w8, w21
   2525c:	add	x9, x9, #0x1e6
   25260:	adr	x10, 25278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f0>
   25264:	ldrb	w11, [x9, x8]
   25268:	add	x10, x10, x11, lsl #2
   2526c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25270:	add	x2, x2, #0x283
   25274:	br	x10
   25278:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2527c:	add	x2, x2, #0x288
   25280:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   25284:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25288:	add	x2, x2, #0x297
   2528c:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   25290:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25294:	add	x2, x2, #0x28f
   25298:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   2529c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252a0:	add	x2, x2, #0x2aa
   252a4:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   252a8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252ac:	add	x2, x2, #0x29d
   252b0:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   252b4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252b8:	add	x2, x2, #0x2a3
   252bc:	b	252c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   252c0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252c4:	add	x2, x2, #0x5bb
   252c8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252cc:	add	x1, x1, #0x277
   252d0:	mov	x0, x20
   252d4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   252d8:	mov	x0, x20
   252dc:	mov	x2, x19
   252e0:	ldp	x20, x19, [sp, #16]
   252e4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252e8:	add	x1, x1, #0x27b
   252ec:	ldp	x30, x21, [sp], #32
   252f0:	b	1cbd8 <__sanitizer_on_print@@Base+0x188>
   252f4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   252f8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   252fc:	add	x0, x0, #0xb2f
   25300:	add	x2, x2, #0x2b1
   25304:	mov	w1, #0x2b8                 	// #696
   25308:	mov	x3, xzr
   2530c:	mov	x4, xzr
   25310:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25314:	str	x30, [sp, #-80]!
   25318:	stp	x26, x25, [sp, #16]
   2531c:	stp	x24, x23, [sp, #32]
   25320:	stp	x22, x21, [sp, #48]
   25324:	stp	x20, x19, [sp, #64]
   25328:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2532c:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   25330:	adrp	x25, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25334:	adrp	x26, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25338:	mov	x19, x3
   2533c:	mov	x20, x2
   25340:	mov	x21, x1
   25344:	mov	x22, x0
   25348:	add	x23, x23, #0x203
   2534c:	add	x24, x24, #0xba0
   25350:	add	x25, x25, #0x268
   25354:	add	x26, x26, #0x200
   25358:	b	25370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   2535c:	ldr	x2, [x20, #32]
   25360:	mov	x0, x22
   25364:	mov	x1, x25
   25368:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2536c:	add	x21, x21, #0x1
   25370:	ldrb	w2, [x21]
   25374:	cmp	w2, #0x25
   25378:	b.eq	25394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c>  // b.none
   2537c:	cbz	w2, 25400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x778>
   25380:	mov	x0, x22
   25384:	mov	x1, x26
   25388:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2538c:	add	x21, x21, #0x1
   25390:	b	25370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   25394:	ldrb	w1, [x21, #1]!
   25398:	cmp	w1, #0x6b
   2539c:	b.gt	253bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x734>
   253a0:	cmp	w1, #0x25
   253a4:	b.ne	253e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x758>  // b.any
   253a8:	mov	x0, x22
   253ac:	mov	x1, x23
   253b0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   253b4:	add	x21, x21, #0x1
   253b8:	b	25370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   253bc:	cmp	w1, #0x6c
   253c0:	b.eq	2535c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d4>  // b.none
   253c4:	cmp	w1, #0x73
   253c8:	b.ne	25418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x790>  // b.any
   253cc:	ldr	x0, [x20, #24]
   253d0:	mov	x1, x19
   253d4:	bl	136ec <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>
   253d8:	mov	x2, x0
   253dc:	b	253ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x764>
   253e0:	cmp	w1, #0x67
   253e4:	b.ne	25418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x790>  // b.any
   253e8:	ldr	x2, [x20, #40]
   253ec:	mov	x0, x22
   253f0:	mov	x1, x24
   253f4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   253f8:	add	x21, x21, #0x1
   253fc:	b	25370 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   25400:	ldp	x20, x19, [sp, #64]
   25404:	ldp	x22, x21, [sp, #48]
   25408:	ldp	x24, x23, [sp, #32]
   2540c:	ldp	x26, x25, [sp, #16]
   25410:	ldr	x30, [sp], #80
   25414:	ret
   25418:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2541c:	add	x0, x0, #0x22b
   25420:	mov	w2, w1
   25424:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   25428:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2542c:	stp	x30, x19, [sp, #-16]!
   25430:	mov	w2, #0x40                  	// #64
   25434:	mov	w1, wzr
   25438:	mov	x19, x0
   2543c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   25440:	mov	x8, #0xffffffffffffffff    	// #-1
   25444:	str	x8, [x19, #40]
   25448:	ldp	x30, x19, [sp], #16
   2544c:	ret
   25450:	stp	x30, x19, [sp, #-16]!
   25454:	mov	x19, x0
   25458:	ldr	x0, [x0, #8]
   2545c:	mov	x1, xzr
   25460:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25464:	ldr	x0, [x19, #32]
   25468:	mov	x1, xzr
   2546c:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25470:	ldr	x0, [x19, #48]
   25474:	mov	x1, xzr
   25478:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   2547c:	mov	w2, #0x40                  	// #64
   25480:	mov	x0, x19
   25484:	mov	w1, wzr
   25488:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2548c:	mov	x8, #0xffffffffffffffff    	// #-1
   25490:	str	x8, [x19, #40]
   25494:	ldp	x30, x19, [sp], #16
   25498:	ret
   2549c:	stp	x30, x21, [sp, #-32]!
   254a0:	stp	x20, x19, [sp, #16]
   254a4:	mov	x21, x0
   254a8:	mov	x0, x1
   254ac:	mov	w19, w3
   254b0:	mov	x20, x2
   254b4:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   254b8:	stp	x0, x20, [x21, #8]
   254bc:	str	w19, [x21, #24]
   254c0:	ldp	x20, x19, [sp, #16]
   254c4:	ldp	x30, x21, [sp], #32
   254c8:	ret
   254cc:	stp	x30, x19, [sp, #-16]!
   254d0:	mov	x19, x0
   254d4:	str	xzr, [x0], #8
   254d8:	mov	w2, #0x40                  	// #64
   254dc:	mov	w1, wzr
   254e0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   254e4:	mov	x8, #0xffffffffffffffff    	// #-1
   254e8:	str	x8, [x19, #48]
   254ec:	ldp	x30, x19, [sp], #16
   254f0:	ret
   254f4:	str	x30, [sp, #-32]!
   254f8:	stp	x20, x19, [sp, #16]
   254fc:	mov	x19, x0
   25500:	mov	w0, #0x48                  	// #72
   25504:	mov	x1, xzr
   25508:	mov	x2, xzr
   2550c:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25510:	mov	x20, x0
   25514:	str	xzr, [x0], #8
   25518:	mov	w2, #0x40                  	// #64
   2551c:	mov	w1, wzr
   25520:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   25524:	mov	x8, #0xffffffffffffffff    	// #-1
   25528:	str	x8, [x20, #48]
   2552c:	str	x19, [x20, #8]
   25530:	mov	x0, x20
   25534:	ldp	x20, x19, [sp, #16]
   25538:	ldr	x30, [sp], #32
   2553c:	ret
   25540:	str	x30, [sp, #-32]!
   25544:	stp	x20, x19, [sp, #16]
   25548:	mov	x19, x0
   2554c:	ldr	x0, [x0, #16]
   25550:	mov	x1, xzr
   25554:	add	x20, x19, #0x8
   25558:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   2555c:	ldr	x0, [x19, #40]
   25560:	mov	x1, xzr
   25564:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25568:	ldr	x0, [x19, #56]
   2556c:	mov	x1, xzr
   25570:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25574:	mov	w2, #0x40                  	// #64
   25578:	mov	x0, x20
   2557c:	mov	w1, wzr
   25580:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   25584:	ldr	x0, [x19]
   25588:	mov	x8, #0xffffffffffffffff    	// #-1
   2558c:	str	x8, [x19, #48]
   25590:	cbz	x0, 25598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x910>
   25594:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   25598:	mov	x0, x19
   2559c:	ldp	x20, x19, [sp, #16]
   255a0:	mov	x1, xzr
   255a4:	ldr	x30, [sp], #32
   255a8:	b	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   255ac:	mov	w2, #0x40                  	// #64
   255b0:	mov	w1, wzr
   255b4:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   255b8:	stp	x30, x19, [sp, #-16]!
   255bc:	mov	x19, x0
   255c0:	ldr	x0, [x0]
   255c4:	mov	x1, xzr
   255c8:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   255cc:	ldr	x0, [x19, #24]
   255d0:	mov	x1, xzr
   255d4:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   255d8:	ldr	x0, [x19, #40]
   255dc:	mov	x1, xzr
   255e0:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   255e4:	mov	w2, #0x40                  	// #64
   255e8:	mov	x0, x19
   255ec:	mov	w1, wzr
   255f0:	ldp	x30, x19, [sp], #16
   255f4:	b	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   255f8:	stp	x30, x21, [sp, #-32]!
   255fc:	stp	x20, x19, [sp, #16]
   25600:	mov	x19, x0
   25604:	ldr	x0, [x0]
   25608:	mov	x1, xzr
   2560c:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25610:	ldr	x8, [x19, #40]
   25614:	cbz	x8, 25654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>
   25618:	ldr	x20, [x19, #24]
   2561c:	mov	w9, #0x38                  	// #56
   25620:	madd	x21, x8, x9, x20
   25624:	ldr	x0, [x20]
   25628:	mov	x1, xzr
   2562c:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25630:	ldr	x0, [x20, #8]
   25634:	mov	x1, xzr
   25638:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   2563c:	ldr	x0, [x20, #16]
   25640:	mov	x1, xzr
   25644:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25648:	add	x20, x20, #0x38
   2564c:	cmp	x20, x21
   25650:	b.ne	25624 <__sanitizer_get_module_and_offset_for_pc@@Base+0x99c>  // b.any
   25654:	str	xzr, [x19, #40]
   25658:	ldp	x20, x19, [sp, #16]
   2565c:	ldp	x30, x21, [sp], #32
   25660:	ret
   25664:	strb	wzr, [x0, #104]
   25668:	ret
   2566c:	str	x30, [sp, #-16]!
   25670:	ldr	x8, [x0, #224]
   25674:	cbnz	x8, 2568c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa04>
   25678:	ldr	x8, [x0, #232]
   2567c:	cbnz	x8, 2568c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa04>
   25680:	stp	x1, x2, [x0, #224]
   25684:	ldr	x30, [sp], #16
   25688:	ret
   2568c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25690:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25694:	add	x0, x0, #0x2d7
   25698:	add	x2, x2, #0x32e
   2569c:	mov	w1, #0x59                  	// #89
   256a0:	mov	x3, xzr
   256a4:	mov	x4, xzr
   256a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   256ac:	str	x30, [sp, #-48]!
   256b0:	stp	x22, x21, [sp, #16]
   256b4:	stp	x20, x19, [sp, #32]
   256b8:	mov	x19, x0
   256bc:	ldr	x0, [x0, #32]
   256c0:	mov	x21, x1
   256c4:	bl	1a24c <__sanitizer_set_report_fd@@Base+0x3c08>
   256c8:	mov	x20, x19
   256cc:	ldr	x0, [x20, #24]!
   256d0:	cbz	x0, 256e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa58>
   256d4:	mov	x1, x21
   256d8:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   256dc:	cbz	w0, 25764 <__sanitizer_get_module_and_offset_for_pc@@Base+0xadc>
   256e0:	ldr	x8, [x19, #16]
   256e4:	cbz	x8, 25710 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa88>
   256e8:	mov	x22, xzr
   256ec:	ldr	x8, [x19]
   256f0:	mov	x1, x21
   256f4:	ldr	x0, [x8, x22, lsl #3]
   256f8:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   256fc:	cbz	w0, 2573c <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   25700:	ldr	x8, [x19, #16]
   25704:	add	x22, x22, #0x1
   25708:	cmp	x22, x8
   2570c:	b.cc	256ec <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>  // b.lo, b.ul, b.last
   25710:	mov	x0, x21
   25714:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   25718:	str	x0, [x19, #24]
   2571c:	mov	x0, x19
   25720:	mov	x1, x20
   25724:	bl	25820 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb98>
   25728:	ldr	x0, [x19, #24]
   2572c:	ldp	x20, x19, [sp, #32]
   25730:	ldp	x22, x21, [sp, #16]
   25734:	ldr	x30, [sp], #48
   25738:	ret
   2573c:	ldr	x4, [x19, #16]
   25740:	cmp	x4, x22
   25744:	b.ls	25778 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf0>  // b.plast
   25748:	ldr	x8, [x19]
   2574c:	ldr	x0, [x8, x22, lsl #3]
   25750:	str	x0, [x19, #24]
   25754:	ldp	x20, x19, [sp, #32]
   25758:	ldp	x22, x21, [sp, #16]
   2575c:	ldr	x30, [sp], #48
   25760:	ret
   25764:	ldr	x0, [x20]
   25768:	ldp	x20, x19, [sp, #32]
   2576c:	ldp	x22, x21, [sp, #16]
   25770:	ldr	x30, [sp], #48
   25774:	ret
   25778:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2577c:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   25780:	add	x0, x0, #0xb2f
   25784:	add	x2, x2, #0x1eb
   25788:	mov	w1, #0x1c5                 	// #453
   2578c:	mov	x3, x22
   25790:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25794:	stp	x30, x21, [sp, #-32]!
   25798:	stp	x20, x19, [sp, #16]
   2579c:	mov	x19, x1
   257a0:	add	x21, x0, #0x70
   257a4:	movi	v0.2d, #0x0
   257a8:	mov	w1, #0x3e8                 	// #1000
   257ac:	mov	x20, x0
   257b0:	str	xzr, [x0]
   257b4:	stur	q0, [x0, #8]
   257b8:	stp	xzr, x21, [x0, #24]
   257bc:	bl	25928 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>
   257c0:	mov	x0, x21
   257c4:	strb	wzr, [x20, #64]
   257c8:	strb	wzr, [x20, #96]
   257cc:	strb	wzr, [x20, #104]
   257d0:	bl	1a144 <__sanitizer_set_report_fd@@Base+0x3b00>
   257d4:	ldr	q0, [x19]
   257d8:	ldr	x8, [x19, #16]
   257dc:	stur	q0, [x20, #200]
   257e0:	movi	v0.2d, #0x0
   257e4:	str	x8, [x20, #216]
   257e8:	str	q0, [x20, #224]
   257ec:	ldp	x20, x19, [sp, #16]
   257f0:	ldp	x30, x21, [sp], #32
   257f4:	ret
   257f8:	str	x1, [x0]
   257fc:	ldr	x0, [x1, #224]
   25800:	cbz	x0, 25808 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb80>
   25804:	br	x0
   25808:	ret
   2580c:	ldr	x8, [x0]
   25810:	ldr	x0, [x8, #232]
   25814:	cbz	x0, 2581c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb94>
   25818:	br	x0
   2581c:	ret
   25820:	str	x30, [sp, #-32]!
   25824:	stp	x20, x19, [sp, #16]
   25828:	ldp	x8, x3, [x0, #8]
   2582c:	lsr	x4, x8, #3
   25830:	cmp	x3, x4
   25834:	b.hi	258bc <__sanitizer_get_module_and_offset_for_pc@@Base+0xc34>  // b.pmore
   25838:	mov	x19, x0
   2583c:	mov	x20, x1
   25840:	b.ne	25898 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc10>  // b.any
   25844:	adds	x3, x3, #0x1
   25848:	b.cs	258d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4c>  // b.hs, b.nlast
   2584c:	sub	x8, x3, #0x1
   25850:	tst	x3, x8
   25854:	b.ne	25860 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbd8>  // b.any
   25858:	mov	x8, x3
   2585c:	b	25888 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc00>
   25860:	clz	x8, x3
   25864:	eor	x9, x8, #0x3f
   25868:	mov	w8, #0x2                   	// #2
   2586c:	lsl	x8, x8, x9
   25870:	cmp	x8, x3
   25874:	b.ls	258f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc6c>  // b.plast
   25878:	mov	w10, #0x1                   	// #1
   2587c:	lsl	x4, x10, x9
   25880:	cmp	x4, x3
   25884:	b.cs	25910 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc88>  // b.hs, b.nlast
   25888:	mov	x0, x19
   2588c:	mov	x1, x8
   25890:	bl	25928 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>
   25894:	ldr	x3, [x19, #16]
   25898:	add	x9, x3, #0x1
   2589c:	ldr	x8, [x19]
   258a0:	str	x9, [x19, #16]
   258a4:	mov	x1, x20
   258a8:	ldp	x20, x19, [sp, #16]
   258ac:	add	x0, x8, x3, lsl #3
   258b0:	mov	w2, #0x8                   	// #8
   258b4:	ldr	x30, [sp], #32
   258b8:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   258bc:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   258c0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   258c4:	add	x0, x0, #0xb2f
   258c8:	add	x2, x2, #0x41
   258cc:	mov	w1, #0x1cd                 	// #461
   258d0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   258d4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   258d8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   258dc:	add	x0, x0, #0xb2f
   258e0:	add	x2, x2, #0x5d
   258e4:	mov	w1, #0x186                 	// #390
   258e8:	mov	x3, xzr
   258ec:	mov	x4, xzr
   258f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   258f4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   258f8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   258fc:	add	x0, x0, #0xb2f
   25900:	add	x2, x2, #0x156
   25904:	mov	w1, #0x18a                 	// #394
   25908:	mov	x4, x8
   2590c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25910:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   25914:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   25918:	add	x0, x0, #0xb2f
   2591c:	add	x2, x2, #0x178
   25920:	mov	w1, #0x18b                 	// #395
   25924:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25928:	stp	x30, x21, [sp, #-32]!
   2592c:	stp	x20, x19, [sp, #16]
   25930:	cbz	x1, 259c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd38>
   25934:	ldr	x3, [x0, #16]
   25938:	mov	x20, x1
   2593c:	mov	x19, x0
   25940:	cmp	x3, x1
   25944:	b.hi	259e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.pmore
   25948:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2594c:	ldr	x21, [x21, #4016]
   25950:	ldr	x0, [x21]
   25954:	cbnz	x0, 25960 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcd8>
   25958:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   2595c:	str	x0, [x21]
   25960:	sub	x8, x0, #0x1
   25964:	tst	x0, x8
   25968:	b.ne	259fc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd74>  // b.any
   2596c:	lsl	x8, x20, #3
   25970:	add	x8, x8, x0
   25974:	sub	x8, x8, #0x1
   25978:	neg	x9, x0
   2597c:	and	x20, x8, x9
   25980:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   25984:	add	x1, x1, #0x950
   25988:	mov	x0, x20
   2598c:	mov	w2, wzr
   25990:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   25994:	ldr	x8, [x19, #16]
   25998:	ldr	x1, [x19]
   2599c:	mov	x21, x0
   259a0:	lsl	x2, x8, #3
   259a4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   259a8:	ldp	x0, x1, [x19]
   259ac:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   259b0:	stp	x21, x20, [x19]
   259b4:	ldp	x20, x19, [sp, #16]
   259b8:	ldp	x30, x21, [sp], #32
   259bc:	ret
   259c0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   259c4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   259c8:	add	x0, x0, #0xb2f
   259cc:	add	x2, x2, #0x919
   259d0:	mov	w1, #0x20b                 	// #523
   259d4:	mov	x3, xzr
   259d8:	mov	x4, xzr
   259dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   259e0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   259e4:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   259e8:	add	x0, x0, #0xb2f
   259ec:	add	x2, x2, #0x932
   259f0:	mov	w1, #0x20c                 	// #524
   259f4:	mov	x4, x20
   259f8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   259fc:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   25a00:	add	x0, x0, #0x20f
   25a04:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   25a08:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   25a0c:	mov	x0, xzr
   25a10:	ret
   25a14:	mov	w0, wzr
   25a18:	ret
   25a1c:	mov	w0, wzr
   25a20:	ret
   25a24:	mov	x0, xzr
   25a28:	ret
   25a2c:	mov	w0, wzr
   25a30:	ret
   25a34:	ret
   25a38:	str	x30, [sp, #-32]!
   25a3c:	stp	x20, x19, [sp, #16]
   25a40:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   25a44:	ldr	x19, [x19, #3936]
   25a48:	mov	w8, #0x1                   	// #1
   25a4c:	ldaxrb	w9, [x19]
   25a50:	stlxrb	w10, w8, [x19]
   25a54:	cbnz	w10, 25a4c <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc4>
   25a58:	cbz	w9, 25a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   25a5c:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   25a60:	ldr	x0, [x0, #3936]
   25a64:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   25a68:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   25a6c:	ldr	x20, [x20, #3880]
   25a70:	ldr	x0, [x20]
   25a74:	cbnz	x0, 25a84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdfc>
   25a78:	bl	27924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c9c>
   25a7c:	str	x0, [x20]
   25a80:	cbz	x0, 25a98 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe10>
   25a84:	dmb	ish
   25a88:	strb	wzr, [x19]
   25a8c:	ldp	x20, x19, [sp, #16]
   25a90:	ldr	x30, [sp], #32
   25a94:	ret
   25a98:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25a9c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   25aa0:	add	x0, x0, #0x365
   25aa4:	add	x2, x2, #0x3c4
   25aa8:	mov	w1, #0x18                  	// #24
   25aac:	mov	x3, xzr
   25ab0:	mov	x4, xzr
   25ab4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   25ab8:	stp	x30, x21, [sp, #-32]!
   25abc:	stp	x20, x19, [sp, #16]
   25ac0:	mov	x19, x2
   25ac4:	mov	x20, x0
   25ac8:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   25acc:	mov	x21, x0
   25ad0:	add	x0, x0, #0x1
   25ad4:	mov	x1, xzr
   25ad8:	mov	x2, xzr
   25adc:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25ae0:	mov	x1, x20
   25ae4:	mov	x2, x21
   25ae8:	str	x0, [x19]
   25aec:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   25af0:	ldr	x8, [x19]
   25af4:	add	x9, x20, x21
   25af8:	strb	wzr, [x8, x21]
   25afc:	mov	x8, x9
   25b00:	ldrb	w10, [x8], #1
   25b04:	ldp	x20, x19, [sp, #16]
   25b08:	cmp	w10, #0x0
   25b0c:	csel	x0, x9, x8, eq  // eq = none
   25b10:	ldp	x30, x21, [sp], #32
   25b14:	ret
   25b18:	str	x30, [sp, #-48]!
   25b1c:	stp	x22, x21, [sp, #16]
   25b20:	stp	x20, x19, [sp, #32]
   25b24:	mov	x19, x2
   25b28:	mov	x21, x0
   25b2c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   25b30:	mov	x22, x0
   25b34:	add	x0, x0, #0x1
   25b38:	mov	x1, xzr
   25b3c:	mov	x2, xzr
   25b40:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25b44:	mov	x1, x21
   25b48:	mov	x2, x22
   25b4c:	mov	x20, x0
   25b50:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   25b54:	add	x8, x21, x22
   25b58:	strb	wzr, [x20, x22]
   25b5c:	mov	x9, x8
   25b60:	ldrb	w10, [x9], #1
   25b64:	cmp	w10, #0x0
   25b68:	csel	x21, x8, x9, eq  // eq = none
   25b6c:	cbz	x20, 25b7c <__sanitizer_get_module_and_offset_for_pc@@Base+0xef4>
   25b70:	mov	x0, x20
   25b74:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   25b78:	str	w0, [x19]
   25b7c:	mov	x0, x20
   25b80:	mov	x1, xzr
   25b84:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25b88:	mov	x0, x21
   25b8c:	ldp	x20, x19, [sp, #32]
   25b90:	ldp	x22, x21, [sp, #16]
   25b94:	ldr	x30, [sp], #48
   25b98:	ret
   25b9c:	str	x30, [sp, #-48]!
   25ba0:	stp	x22, x21, [sp, #16]
   25ba4:	stp	x20, x19, [sp, #32]
   25ba8:	mov	x19, x2
   25bac:	mov	x21, x0
   25bb0:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   25bb4:	mov	x22, x0
   25bb8:	add	x0, x0, #0x1
   25bbc:	mov	x1, xzr
   25bc0:	mov	x2, xzr
   25bc4:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25bc8:	mov	x1, x21
   25bcc:	mov	x2, x22
   25bd0:	mov	x20, x0
   25bd4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   25bd8:	add	x8, x21, x22
   25bdc:	strb	wzr, [x20, x22]
   25be0:	mov	x9, x8
   25be4:	ldrb	w10, [x9], #1
   25be8:	cmp	w10, #0x0
   25bec:	csel	x21, x8, x9, eq  // eq = none
   25bf0:	cbz	x20, 25c00 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf78>
   25bf4:	mov	x0, x20
   25bf8:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   25bfc:	str	x0, [x19]
   25c00:	mov	x0, x20
   25c04:	mov	x1, xzr
   25c08:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25c0c:	mov	x0, x21
   25c10:	ldp	x20, x19, [sp, #32]
   25c14:	ldp	x22, x21, [sp, #16]
   25c18:	ldr	x30, [sp], #48
   25c1c:	ret
   25c20:	str	x30, [sp, #-48]!
   25c24:	stp	x22, x21, [sp, #16]
   25c28:	stp	x20, x19, [sp, #32]
   25c2c:	mov	x19, x2
   25c30:	mov	x21, x0
   25c34:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   25c38:	mov	x22, x0
   25c3c:	add	x0, x0, #0x1
   25c40:	mov	x1, xzr
   25c44:	mov	x2, xzr
   25c48:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25c4c:	mov	x1, x21
   25c50:	mov	x2, x22
   25c54:	mov	x20, x0
   25c58:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   25c5c:	add	x8, x21, x22
   25c60:	strb	wzr, [x20, x22]
   25c64:	mov	x9, x8
   25c68:	ldrb	w10, [x9], #1
   25c6c:	cmp	w10, #0x0
   25c70:	csel	x21, x8, x9, eq  // eq = none
   25c74:	cbz	x20, 25c84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   25c78:	mov	x0, x20
   25c7c:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   25c80:	str	x0, [x19]
   25c84:	mov	x0, x20
   25c88:	mov	x1, xzr
   25c8c:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   25c90:	mov	x0, x21
   25c94:	ldp	x20, x19, [sp, #32]
   25c98:	ldp	x22, x21, [sp, #16]
   25c9c:	ldr	x30, [sp], #48
   25ca0:	ret
   25ca4:	str	x30, [sp, #-48]!
   25ca8:	stp	x22, x21, [sp, #16]
   25cac:	stp	x20, x19, [sp, #32]
   25cb0:	mov	x21, x2
   25cb4:	mov	x19, x1
   25cb8:	mov	x20, x0
   25cbc:	bl	19254 <__sanitizer_set_report_fd@@Base+0x2c10>
   25cc0:	cbz	x0, 25ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   25cc4:	sub	x22, x0, x20
   25cc8:	b	25cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1050>
   25ccc:	mov	x0, x20
   25cd0:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   25cd4:	mov	x22, x0
   25cd8:	add	x0, x22, #0x1
   25cdc:	mov	x1, xzr
   25ce0:	mov	x2, xzr
   25ce4:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   25ce8:	mov	x1, x20
   25cec:	mov	x2, x22
   25cf0:	str	x0, [x21]
   25cf4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   25cf8:	ldr	x8, [x21]
   25cfc:	add	x20, x20, x22
   25d00:	strb	wzr, [x8, x22]
   25d04:	ldrb	w8, [x20]
   25d08:	cbz	w8, 25d18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1090>
   25d0c:	mov	x0, x19
   25d10:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   25d14:	add	x20, x20, x0
   25d18:	mov	x0, x20
   25d1c:	ldp	x20, x19, [sp, #32]
   25d20:	ldp	x22, x21, [sp, #16]
   25d24:	ldr	x30, [sp], #48
   25d28:	ret
   25d2c:	str	x30, [sp, #-64]!
   25d30:	stp	x24, x23, [sp, #16]
   25d34:	stp	x22, x21, [sp, #32]
   25d38:	stp	x20, x19, [sp, #48]
   25d3c:	add	x19, x0, #0x70
   25d40:	mov	x21, x0
   25d44:	mov	x0, x19
   25d48:	mov	x20, x1
   25d4c:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   25d50:	mov	x0, x20
   25d54:	bl	254f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   25d58:	mov	x22, x0
   25d5c:	mov	x0, x21
   25d60:	mov	x1, x20
   25d64:	bl	2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   25d68:	cbz	x0, 25dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   25d6c:	ldp	x1, x8, [x0]
   25d70:	ldr	w3, [x0, #24]
   25d74:	add	x0, x22, #0x8
   25d78:	sub	x2, x20, x8
   25d7c:	bl	2549c <__sanitizer_get_module_and_offset_for_pc@@Base+0x814>
   25d80:	ldr	x23, [x21, #208]
   25d84:	cbz	x23, 25dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   25d88:	add	x0, sp, #0x8
   25d8c:	mov	x1, x21
   25d90:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   25d94:	ldr	x8, [x23]
   25d98:	mov	x0, x23
   25d9c:	mov	x1, x20
   25da0:	mov	x2, x22
   25da4:	ldr	x8, [x8]
   25da8:	blr	x8
   25dac:	mov	w24, w0
   25db0:	add	x0, sp, #0x8
   25db4:	bl	2580c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   25db8:	tbnz	w24, #0, 25dc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   25dbc:	ldr	x23, [x23, #8]
   25dc0:	cbnz	x23, 25d88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1100>
   25dc4:	mov	x0, x19
   25dc8:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   25dcc:	mov	x0, x22
   25dd0:	ldp	x20, x19, [sp, #48]
   25dd4:	ldp	x22, x21, [sp, #32]
   25dd8:	ldp	x24, x23, [sp, #16]
   25ddc:	ldr	x30, [sp], #64
   25de0:	ret
   25de4:	str	x30, [sp, #-48]!
   25de8:	stp	x22, x21, [sp, #16]
   25dec:	stp	x20, x19, [sp, #32]
   25df0:	mov	x19, x4
   25df4:	mov	x20, x3
   25df8:	mov	x22, x2
   25dfc:	mov	x21, x1
   25e00:	bl	2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   25e04:	cbz	x0, 25e28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11a0>
   25e08:	ldr	x8, [x0]
   25e0c:	str	x8, [x22]
   25e10:	ldr	x8, [x0, #8]
   25e14:	sub	x8, x21, x8
   25e18:	str	x8, [x20]
   25e1c:	ldr	w8, [x0, #24]
   25e20:	mov	w0, #0x1                   	// #1
   25e24:	str	w8, [x19]
   25e28:	ldp	x20, x19, [sp, #32]
   25e2c:	ldp	x22, x21, [sp, #16]
   25e30:	ldr	x30, [sp], #48
   25e34:	ret
   25e38:	sub	sp, sp, #0x50
   25e3c:	stp	x30, x25, [sp, #16]
   25e40:	stp	x24, x23, [sp, #32]
   25e44:	stp	x22, x21, [sp, #48]
   25e48:	stp	x20, x19, [sp, #64]
   25e4c:	add	x19, x0, #0x70
   25e50:	mov	x22, x0
   25e54:	mov	x0, x19
   25e58:	mov	x20, x2
   25e5c:	mov	x21, x1
   25e60:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   25e64:	mov	x0, x22
   25e68:	mov	x1, x21
   25e6c:	bl	2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   25e70:	cbz	x0, 25ee4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x125c>
   25e74:	ldp	x23, x8, [x0]
   25e78:	ldr	w24, [x0, #24]
   25e7c:	mov	x0, x20
   25e80:	sub	x25, x21, x8
   25e84:	bl	255b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x930>
   25e88:	mov	x0, x23
   25e8c:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   25e90:	stp	x0, x25, [x20]
   25e94:	str	w24, [x20, #16]
   25e98:	ldr	x23, [x22, #208]
   25e9c:	cbz	x23, 25edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1254>
   25ea0:	add	x0, sp, #0x8
   25ea4:	mov	x1, x22
   25ea8:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   25eac:	ldr	x8, [x23]
   25eb0:	mov	x0, x23
   25eb4:	mov	x1, x21
   25eb8:	mov	x2, x20
   25ebc:	ldr	x8, [x8, #8]
   25ec0:	blr	x8
   25ec4:	mov	w24, w0
   25ec8:	add	x0, sp, #0x8
   25ecc:	bl	2580c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   25ed0:	tbnz	w24, #0, 25edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1254>
   25ed4:	ldr	x23, [x23, #8]
   25ed8:	cbnz	x23, 25ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1218>
   25edc:	mov	w20, #0x1                   	// #1
   25ee0:	b	25ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1260>
   25ee4:	mov	w20, wzr
   25ee8:	mov	x0, x19
   25eec:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   25ef0:	mov	w0, w20
   25ef4:	ldp	x20, x19, [sp, #64]
   25ef8:	ldp	x22, x21, [sp, #48]
   25efc:	ldp	x24, x23, [sp, #32]
   25f00:	ldp	x30, x25, [sp, #16]
   25f04:	add	sp, sp, #0x50
   25f08:	ret
   25f0c:	str	x30, [sp, #-64]!
   25f10:	stp	x24, x23, [sp, #16]
   25f14:	stp	x22, x21, [sp, #32]
   25f18:	stp	x20, x19, [sp, #48]
   25f1c:	add	x19, x0, #0x70
   25f20:	mov	x22, x0
   25f24:	mov	x0, x19
   25f28:	mov	x20, x2
   25f2c:	mov	x21, x1
   25f30:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   25f34:	mov	x0, x22
   25f38:	mov	x1, x21
   25f3c:	bl	2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   25f40:	cbz	x0, 25fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1328>
   25f44:	ldp	x8, x9, [x0]
   25f48:	sub	x9, x21, x9
   25f4c:	str	x9, [x20, #8]
   25f50:	ldr	w9, [x0, #24]
   25f54:	mov	x0, x8
   25f58:	str	w9, [x20, #16]
   25f5c:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   25f60:	str	x0, [x20]
   25f64:	ldr	x23, [x22, #208]
   25f68:	cbz	x23, 25fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>
   25f6c:	add	x0, sp, #0x8
   25f70:	mov	x1, x22
   25f74:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   25f78:	ldr	x8, [x23]
   25f7c:	mov	x0, x23
   25f80:	mov	x1, x21
   25f84:	mov	x2, x20
   25f88:	ldr	x8, [x8, #16]
   25f8c:	blr	x8
   25f90:	mov	w24, w0
   25f94:	add	x0, sp, #0x8
   25f98:	bl	2580c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   25f9c:	tbnz	w24, #0, 25fa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>
   25fa0:	ldr	x23, [x23, #8]
   25fa4:	cbnz	x23, 25f6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12e4>
   25fa8:	mov	w20, #0x1                   	// #1
   25fac:	b	25fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x132c>
   25fb0:	mov	w20, wzr
   25fb4:	mov	x0, x19
   25fb8:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   25fbc:	mov	w0, w20
   25fc0:	ldp	x20, x19, [sp, #48]
   25fc4:	ldp	x22, x21, [sp, #32]
   25fc8:	ldp	x24, x23, [sp, #16]
   25fcc:	ldr	x30, [sp], #64
   25fd0:	ret
   25fd4:	stp	x30, x23, [sp, #-48]!
   25fd8:	stp	x22, x21, [sp, #16]
   25fdc:	stp	x20, x19, [sp, #32]
   25fe0:	add	x19, x0, #0x70
   25fe4:	mov	x21, x0
   25fe8:	mov	x0, x19
   25fec:	mov	x22, x3
   25ff0:	mov	x20, x2
   25ff4:	mov	x23, x1
   25ff8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   25ffc:	mov	x0, x21
   26000:	mov	x1, x23
   26004:	bl	2614c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   26008:	cbz	x0, 26030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a8>
   2600c:	ldp	x1, x8, [x0]
   26010:	sub	x8, x23, x8
   26014:	str	x8, [x22]
   26018:	cbz	x20, 26028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a0>
   2601c:	mov	x0, x21
   26020:	bl	256ac <__sanitizer_get_module_and_offset_for_pc@@Base+0xa24>
   26024:	str	x0, [x20]
   26028:	mov	w20, #0x1                   	// #1
   2602c:	b	26034 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13ac>
   26030:	mov	w20, wzr
   26034:	mov	x0, x19
   26038:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   2603c:	mov	w0, w20
   26040:	ldp	x20, x19, [sp, #32]
   26044:	ldp	x22, x21, [sp, #16]
   26048:	ldp	x30, x23, [sp], #48
   2604c:	ret
   26050:	sub	sp, sp, #0x30
   26054:	stp	x30, x21, [sp, #16]
   26058:	stp	x20, x19, [sp, #32]
   2605c:	add	x19, x0, #0x70
   26060:	mov	x20, x0
   26064:	mov	x0, x19
   26068:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   2606c:	ldr	x21, [x20, #208]
   26070:	cbz	x21, 260a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1418>
   26074:	add	x0, sp, #0x8
   26078:	mov	x1, x20
   2607c:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   26080:	ldr	x8, [x21]
   26084:	mov	x0, x21
   26088:	ldr	x8, [x8, #24]
   2608c:	blr	x8
   26090:	add	x0, sp, #0x8
   26094:	bl	2580c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   26098:	ldr	x21, [x21, #8]
   2609c:	cbnz	x21, 26074 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13ec>
   260a0:	mov	x0, x19
   260a4:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   260a8:	ldp	x20, x19, [sp, #32]
   260ac:	ldp	x30, x21, [sp, #16]
   260b0:	add	sp, sp, #0x30
   260b4:	ret
   260b8:	sub	sp, sp, #0x40
   260bc:	stp	x30, x23, [sp, #16]
   260c0:	stp	x22, x21, [sp, #32]
   260c4:	stp	x20, x19, [sp, #48]
   260c8:	add	x19, x0, #0x70
   260cc:	mov	x21, x0
   260d0:	mov	x0, x19
   260d4:	mov	x20, x1
   260d8:	bl	1a150 <__sanitizer_set_report_fd@@Base+0x3b0c>
   260dc:	ldr	x22, [x21, #208]
   260e0:	cbz	x22, 2611c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1494>
   260e4:	add	x0, sp, #0x8
   260e8:	mov	x1, x21
   260ec:	bl	257f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   260f0:	ldr	x8, [x22]
   260f4:	mov	x0, x22
   260f8:	mov	x1, x20
   260fc:	ldr	x8, [x8, #32]
   26100:	blr	x8
   26104:	mov	x23, x0
   26108:	add	x0, sp, #0x8
   2610c:	bl	2580c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   26110:	cbnz	x23, 2612c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a4>
   26114:	ldr	x22, [x22, #8]
   26118:	cbnz	x22, 260e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x145c>
   2611c:	mov	x0, x21
   26120:	mov	x1, x20
   26124:	bl	2787c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bf4>
   26128:	mov	x23, x0
   2612c:	mov	x0, x19
   26130:	bl	1a1e0 <__sanitizer_set_report_fd@@Base+0x3b9c>
   26134:	mov	x0, x23
   26138:	ldp	x20, x19, [sp, #48]
   2613c:	ldp	x22, x21, [sp, #32]
   26140:	ldp	x30, x23, [sp, #16]
   26144:	add	sp, sp, #0x40
   26148:	ret
   2614c:	stp	x30, x25, [sp, #-64]!
   26150:	stp	x24, x23, [sp, #16]
   26154:	stp	x22, x21, [sp, #32]
   26158:	stp	x20, x19, [sp, #48]
   2615c:	ldrb	w8, [x0, #104]
   26160:	mov	x19, x0
   26164:	mov	x20, x1
   26168:	cbz	w8, 26184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14fc>
   2616c:	mov	x23, x19
   26170:	ldr	x8, [x23, #56]!
   26174:	sub	x21, x23, #0x10
   26178:	cbz	x8, 26200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1578>
   2617c:	mov	w24, wzr
   26180:	b	261ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1524>
   26184:	add	x21, x19, #0x28
   26188:	mov	x0, x21
   2618c:	bl	20b4c <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   26190:	add	x0, x19, #0x48
   26194:	bl	20da0 <__sanitizer_sandbox_on_notify@@Base+0x720>
   26198:	ldr	x8, [x19, #56]
   2619c:	cbz	x8, 262d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>
   261a0:	mov	w24, #0x1                   	// #1
   261a4:	strb	w24, [x19, #104]
   261a8:	add	x23, x19, #0x38
   261ac:	mov	x25, xzr
   261b0:	mov	x22, xzr
   261b4:	ldr	x8, [x19, #40]
   261b8:	mov	x1, x20
   261bc:	add	x0, x8, x25
   261c0:	bl	13ba0 <__sanitizer_report_error_summary@@Base+0x350>
   261c4:	tbnz	w0, #0, 261e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1558>
   261c8:	ldr	x8, [x23]
   261cc:	add	x22, x22, #0x1
   261d0:	add	x25, x25, #0x48
   261d4:	cmp	x22, x8
   261d8:	b.cc	261b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x152c>  // b.lo, b.ul, b.last
   261dc:	b	261fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1574>
   261e0:	ldr	x4, [x23]
   261e4:	cmp	x4, x22
   261e8:	b.ls	262e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>  // b.plast
   261ec:	ldr	x8, [x19, #40]
   261f0:	cbz	x8, 261fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1574>
   261f4:	add	x0, x8, x25
   261f8:	b	262c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   261fc:	tbnz	w24, #0, 26270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   26200:	mov	x0, x21
   26204:	bl	20b4c <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   26208:	add	x0, x19, #0x48
   2620c:	bl	20da0 <__sanitizer_sandbox_on_notify@@Base+0x720>
   26210:	ldr	x8, [x19, #56]
   26214:	cbz	x8, 262d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>
   26218:	mov	x24, xzr
   2621c:	mov	x22, xzr
   26220:	mov	w8, #0x1                   	// #1
   26224:	strb	w8, [x19, #104]
   26228:	ldr	x8, [x21]
   2622c:	mov	x1, x20
   26230:	add	x0, x8, x24
   26234:	bl	13ba0 <__sanitizer_report_error_summary@@Base+0x350>
   26238:	tbnz	w0, #0, 26254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15cc>
   2623c:	ldr	x8, [x23]
   26240:	add	x22, x22, #0x1
   26244:	add	x24, x24, #0x48
   26248:	cmp	x22, x8
   2624c:	b.cc	26228 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15a0>  // b.lo, b.ul, b.last
   26250:	b	26270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   26254:	ldr	x4, [x23]
   26258:	cmp	x4, x22
   2625c:	b.ls	262e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>  // b.plast
   26260:	ldr	x8, [x21]
   26264:	cbz	x8, 26270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   26268:	add	x0, x8, x24
   2626c:	b	262c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   26270:	ldr	x8, [x19, #88]
   26274:	cbz	x8, 262a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1620>
   26278:	mov	x22, xzr
   2627c:	mov	x21, xzr
   26280:	ldr	x8, [x19, #72]
   26284:	mov	x1, x20
   26288:	add	x0, x8, x22
   2628c:	bl	13ba0 <__sanitizer_report_error_summary@@Base+0x350>
   26290:	tbnz	w0, #0, 262b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1628>
   26294:	ldr	x8, [x19, #88]
   26298:	add	x21, x21, #0x1
   2629c:	add	x22, x22, #0x48
   262a0:	cmp	x21, x8
   262a4:	b.cc	26280 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15f8>  // b.lo, b.ul, b.last
   262a8:	mov	x0, xzr
   262ac:	b	262c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   262b0:	ldr	x4, [x19, #88]
   262b4:	cmp	x4, x21
   262b8:	b.ls	26304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x167c>  // b.plast
   262bc:	ldr	x8, [x19, #72]
   262c0:	add	x0, x8, x22
   262c4:	ldp	x20, x19, [sp, #48]
   262c8:	ldp	x22, x21, [sp, #32]
   262cc:	ldp	x24, x23, [sp, #16]
   262d0:	ldp	x30, x25, [sp], #64
   262d4:	ret
   262d8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   262dc:	add	x0, x0, #0x3db
   262e0:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   262e4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   262e8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   262ec:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   262f0:	add	x0, x0, #0xb2f
   262f4:	add	x2, x2, #0x590
   262f8:	mov	w1, #0x308                 	// #776
   262fc:	mov	x3, x22
   26300:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26304:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   26308:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2630c:	add	x0, x0, #0xb2f
   26310:	add	x2, x2, #0x590
   26314:	mov	w1, #0x308                 	// #776
   26318:	mov	x3, x21
   2631c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26320:	stp	x30, x19, [sp, #-16]!
   26324:	mov	x19, x0
   26328:	add	x0, x0, #0x28
   2632c:	bl	20b4c <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   26330:	add	x0, x19, #0x48
   26334:	bl	20da0 <__sanitizer_sandbox_on_notify@@Base+0x720>
   26338:	ldr	x8, [x19, #56]
   2633c:	cbz	x8, 26350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16c8>
   26340:	mov	w8, #0x1                   	// #1
   26344:	strb	w8, [x19, #104]
   26348:	ldp	x30, x19, [sp], #16
   2634c:	ret
   26350:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26354:	add	x0, x0, #0x3db
   26358:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   2635c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   26360:	str	x30, [sp, #-32]!
   26364:	stp	x20, x19, [sp, #16]
   26368:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2636c:	add	x8, x8, #0x880
   26370:	mov	x20, x1
   26374:	mov	x19, x0
   26378:	stp	x8, xzr, [x0]
   2637c:	mov	w1, #0x4028                	// #16424
   26380:	mov	x0, x2
   26384:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   26388:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2638c:	ldr	x9, [x9, #4008]
   26390:	mov	w8, #0x4020                	// #16416
   26394:	movi	v0.2d, #0xffffffffffffffff
   26398:	add	x8, x0, x8
   2639c:	add	x9, x9, #0x10
   263a0:	str	xzr, [x0, #16408]
   263a4:	str	d0, [x0, #16]
   263a8:	stp	x9, x20, [x0]
   263ac:	strh	wzr, [x8]
   263b0:	strb	wzr, [x8, #2]
   263b4:	cbz	x20, 263dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1754>
   263b8:	ldrb	w8, [x20]
   263bc:	cbz	w8, 263f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x176c>
   263c0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   263c4:	add	x8, x8, #0x8b8
   263c8:	str	x8, [x0]
   263cc:	str	x0, [x19, #16]
   263d0:	ldp	x20, x19, [sp, #16]
   263d4:	ldr	x30, [sp], #32
   263d8:	ret
   263dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   263e0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   263e4:	add	x0, x0, #0x365
   263e8:	add	x2, x2, #0x475
   263ec:	mov	w1, #0x1d0                 	// #464
   263f0:	b	26408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1780>
   263f4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   263f8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   263fc:	add	x0, x0, #0x365
   26400:	add	x2, x2, #0x486
   26404:	mov	w1, #0x1d1                 	// #465
   26408:	mov	x3, xzr
   2640c:	mov	x4, xzr
   26410:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26414:	str	x30, [sp, #-80]!
   26418:	stp	x26, x25, [sp, #16]
   2641c:	stp	x24, x23, [sp, #32]
   26420:	stp	x22, x21, [sp, #48]
   26424:	stp	x20, x19, [sp, #64]
   26428:	adrp	x20, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2642c:	adrp	x21, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26430:	mov	x19, x1
   26434:	mov	x22, x0
   26438:	mov	w26, #0x1                   	// #1
   2643c:	add	x20, x20, #0xce
   26440:	add	x21, x21, #0x408
   26444:	mov	x25, x1
   26448:	mov	x0, x22
   2644c:	mov	x1, x20
   26450:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26454:	mov	x23, x0
   26458:	add	x0, x0, #0x1
   2645c:	mov	x1, xzr
   26460:	mov	x2, xzr
   26464:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26468:	mov	x1, x22
   2646c:	mov	x2, x23
   26470:	mov	x24, x0
   26474:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26478:	add	x8, x22, x23
   2647c:	strb	wzr, [x24, x23]
   26480:	mov	x9, x8
   26484:	ldrb	w10, [x9], #1
   26488:	cmp	w10, #0x0
   2648c:	csel	x22, x8, x9, eq  // eq = none
   26490:	cbz	x24, 26550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18c8>
   26494:	ldrb	w8, [x24]
   26498:	cbz	w8, 26530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18a8>
   2649c:	tbz	w26, #0, 264a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   264a0:	mov	x23, x19
   264a4:	b	264cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1844>
   264a8:	ldr	x0, [x19, #8]
   264ac:	bl	254f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   264b0:	ldp	x1, x2, [x19, #16]
   264b4:	ldr	w3, [x19, #32]
   264b8:	mov	x23, x0
   264bc:	add	x0, x0, #0x8
   264c0:	bl	2549c <__sanitizer_get_module_and_offset_for_pc@@Base+0x814>
   264c4:	str	x23, [x25]
   264c8:	mov	x25, x23
   264cc:	add	x0, x23, #0x8
   264d0:	mov	x1, x22
   264d4:	str	x24, [x23, #40]
   264d8:	bl	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   264dc:	ldr	x8, [x23, #40]
   264e0:	mov	x22, x0
   264e4:	mov	x1, x21
   264e8:	mov	x0, x8
   264ec:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   264f0:	cbnz	w0, 26504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x187c>
   264f4:	ldr	x0, [x23, #40]
   264f8:	mov	x1, xzr
   264fc:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26500:	str	xzr, [x23, #40]
   26504:	ldr	x0, [x23, #56]
   26508:	mov	x1, x21
   2650c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   26510:	mov	w26, wzr
   26514:	cbnz	w0, 26448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c0>
   26518:	ldr	x0, [x23, #56]
   2651c:	mov	x1, xzr
   26520:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26524:	mov	w26, wzr
   26528:	str	xzr, [x23, #56]
   2652c:	b	26448 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c0>
   26530:	mov	x0, x24
   26534:	ldp	x20, x19, [sp, #64]
   26538:	ldp	x22, x21, [sp, #48]
   2653c:	ldp	x24, x23, [sp, #32]
   26540:	ldp	x26, x25, [sp, #16]
   26544:	mov	x1, xzr
   26548:	ldr	x30, [sp], #80
   2654c:	b	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26550:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26554:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26558:	add	x0, x0, #0x365
   2655c:	add	x2, x2, #0x3ef
   26560:	mov	w1, #0x148                 	// #328
   26564:	mov	x3, xzr
   26568:	mov	x4, xzr
   2656c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26570:	stp	x30, x23, [sp, #-48]!
   26574:	stp	x22, x21, [sp, #16]
   26578:	stp	x20, x19, [sp, #32]
   2657c:	mov	x21, x1
   26580:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26584:	mov	x19, x0
   26588:	add	x1, x1, #0xce
   2658c:	mov	x0, x21
   26590:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26594:	mov	x22, x0
   26598:	add	x0, x0, #0x1
   2659c:	mov	x1, xzr
   265a0:	mov	x2, xzr
   265a4:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   265a8:	mov	x1, x21
   265ac:	mov	x2, x22
   265b0:	mov	x20, x0
   265b4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   265b8:	add	x8, x21, x22
   265bc:	strb	wzr, [x20, x22]
   265c0:	mov	x9, x8
   265c4:	ldrb	w10, [x9], #1
   265c8:	cmp	w10, #0x0
   265cc:	csel	x21, x8, x9, eq  // eq = none
   265d0:	cbz	x20, 266e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a58>
   265d4:	mov	x0, x20
   265d8:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   265dc:	cbz	x0, 266c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a38>
   265e0:	add	x8, x20, x0
   265e4:	mov	x22, x8
   265e8:	ldrb	w9, [x8, #-1]!
   265ec:	cmp	x8, x20
   265f0:	b.ls	26600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>  // b.plast
   265f4:	sub	w10, w9, #0x30
   265f8:	cmp	w10, #0xa
   265fc:	b.cc	265e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x195c>  // b.lo, b.ul, b.last
   26600:	cmp	w9, #0x3a
   26604:	b.ne	26684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.any
   26608:	ldrb	w8, [x22]
   2660c:	sub	w8, w8, #0x30
   26610:	cmp	w8, #0x9
   26614:	b.hi	26684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.pmore
   26618:	ldr	w8, [x19, #56]
   2661c:	mov	x0, x22
   26620:	sub	x23, x22, #0x2
   26624:	str	w8, [x19, #60]
   26628:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   2662c:	str	w0, [x19, #56]
   26630:	sturb	wzr, [x22, #-1]
   26634:	ldrb	w8, [x23]
   26638:	mov	x22, x23
   2663c:	cmp	x23, x20
   26640:	b.ls	26654 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19cc>  // b.plast
   26644:	sub	w9, w8, #0x30
   26648:	cmp	w9, #0xa
   2664c:	sub	x23, x22, #0x1
   26650:	b.cc	26634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19ac>  // b.lo, b.ul, b.last
   26654:	cmp	w8, #0x3a
   26658:	b.ne	26684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.any
   2665c:	add	x0, x22, #0x1
   26660:	ldrb	w8, [x0]
   26664:	sub	w8, w8, #0x30
   26668:	cmp	w8, #0x9
   2666c:	b.hi	26684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.pmore
   26670:	ldr	w8, [x19, #56]
   26674:	str	w8, [x19, #60]
   26678:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   2667c:	str	w0, [x19, #56]
   26680:	strb	wzr, [x22]
   26684:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26688:	add	x1, x1, #0xcf
   2668c:	mov	x0, x20
   26690:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26694:	mov	x22, x0
   26698:	add	x0, x0, #0x1
   2669c:	mov	x1, xzr
   266a0:	mov	x2, xzr
   266a4:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   266a8:	mov	x1, x20
   266ac:	mov	x2, x22
   266b0:	str	x0, [x19, #48]
   266b4:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   266b8:	ldr	x8, [x19, #48]
   266bc:	strb	wzr, [x8, x22]
   266c0:	mov	x0, x20
   266c4:	mov	x1, xzr
   266c8:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   266cc:	mov	x0, x21
   266d0:	ldp	x20, x19, [sp, #32]
   266d4:	ldp	x22, x21, [sp, #16]
   266d8:	ldp	x30, x23, [sp], #48
   266dc:	ret
   266e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   266e4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   266e8:	add	x0, x0, #0x365
   266ec:	add	x2, x2, #0x5e2
   266f0:	mov	w1, #0x129                 	// #297
   266f4:	mov	x3, xzr
   266f8:	mov	x4, xzr
   266fc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26700:	str	x30, [sp, #-48]!
   26704:	stp	x22, x21, [sp, #16]
   26708:	stp	x20, x19, [sp, #32]
   2670c:	mov	x19, x1
   26710:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26714:	add	x1, x1, #0xce
   26718:	mov	x20, x0
   2671c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26720:	mov	x21, x0
   26724:	add	x0, x0, #0x1
   26728:	mov	x1, xzr
   2672c:	mov	x2, xzr
   26730:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26734:	mov	x1, x20
   26738:	mov	x2, x21
   2673c:	str	x0, [x19, #40]
   26740:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26744:	ldr	x8, [x19, #40]
   26748:	add	x9, x20, x21
   2674c:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   26750:	add	x1, x1, #0xdd3
   26754:	strb	wzr, [x8, x21]
   26758:	mov	x8, x9
   2675c:	ldrb	w10, [x8], #1
   26760:	cmp	w10, #0x0
   26764:	csel	x20, x9, x8, eq  // eq = none
   26768:	mov	x0, x20
   2676c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26770:	mov	x22, x0
   26774:	add	x0, x0, #0x1
   26778:	mov	x1, xzr
   2677c:	mov	x2, xzr
   26780:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26784:	mov	x1, x20
   26788:	mov	x2, x22
   2678c:	mov	x21, x0
   26790:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26794:	add	x8, x20, x22
   26798:	strb	wzr, [x21, x22]
   2679c:	mov	x9, x8
   267a0:	ldrb	w10, [x9], #1
   267a4:	cmp	w10, #0x0
   267a8:	csel	x20, x8, x9, eq  // eq = none
   267ac:	cbz	x21, 267bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b34>
   267b0:	mov	x0, x21
   267b4:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   267b8:	str	x0, [x19, #48]
   267bc:	mov	x0, x21
   267c0:	mov	x1, xzr
   267c4:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   267c8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   267cc:	add	x1, x1, #0xce
   267d0:	mov	x0, x20
   267d4:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   267d8:	mov	x22, x0
   267dc:	add	x0, x0, #0x1
   267e0:	mov	x1, xzr
   267e4:	mov	x2, xzr
   267e8:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   267ec:	mov	x1, x20
   267f0:	mov	x2, x22
   267f4:	mov	x21, x0
   267f8:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   267fc:	strb	wzr, [x21, x22]
   26800:	cbz	x21, 26810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   26804:	mov	x0, x21
   26808:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   2680c:	str	x0, [x19, #56]
   26810:	mov	x0, x21
   26814:	ldp	x20, x19, [sp, #32]
   26818:	ldp	x22, x21, [sp, #16]
   2681c:	mov	x1, xzr
   26820:	ldr	x30, [sp], #48
   26824:	b	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26828:	stp	x30, x19, [sp, #-16]!
   2682c:	mov	x19, x2
   26830:	ldr	x2, [x2, #16]
   26834:	ldr	x3, [x19, #24]
   26838:	ldr	w4, [x19, #32]
   2683c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26840:	add	x1, x1, #0x40b
   26844:	bl	26860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   26848:	cbz	x0, 26858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd0>
   2684c:	mov	x1, x19
   26850:	bl	26414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   26854:	mov	w0, #0x1                   	// #1
   26858:	ldp	x30, x19, [sp], #16
   2685c:	ret
   26860:	str	x30, [sp, #-32]!
   26864:	stp	x20, x19, [sp, #16]
   26868:	cbz	x2, 26970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce8>
   2686c:	cmp	w4, #0x8
   26870:	b.hi	26988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d00>  // b.pmore
   26874:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26878:	mov	w9, w4
   2687c:	add	x10, x10, #0x35c
   26880:	adr	x11, 268ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c24>
   26884:	ldrb	w12, [x10, x9]
   26888:	add	x11, x11, x12, lsl #2
   2688c:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26890:	mov	x6, x3
   26894:	mov	x8, x2
   26898:	mov	x3, x1
   2689c:	mov	x19, x0
   268a0:	add	x20, x0, #0x18
   268a4:	add	x5, x5, #0x283
   268a8:	br	x11
   268ac:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   268b0:	add	x2, x2, #0x432
   268b4:	mov	w1, #0x4000                	// #16384
   268b8:	mov	x0, x20
   268bc:	mov	x4, x8
   268c0:	mov	x5, x6
   268c4:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   268c8:	cmp	w0, #0x4, lsl #12
   268cc:	b.ge	26954 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ccc>  // b.tcont
   268d0:	ldr	x0, [x19, #16]
   268d4:	mov	x1, x20
   268d8:	ldp	x20, x19, [sp, #16]
   268dc:	ldr	x30, [sp], #32
   268e0:	b	26d04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>
   268e4:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   268e8:	add	x5, x5, #0x297
   268ec:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   268f0:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   268f4:	add	x5, x5, #0x288
   268f8:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   268fc:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26900:	add	x5, x5, #0x28f
   26904:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   26908:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2690c:	add	x5, x5, #0x2aa
   26910:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   26914:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26918:	add	x5, x5, #0x29d
   2691c:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   26920:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26924:	add	x5, x5, #0x2a3
   26928:	b	26934 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   2692c:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26930:	add	x5, x5, #0x5bb
   26934:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26938:	add	x2, x2, #0x463
   2693c:	mov	w1, #0x4000                	// #16384
   26940:	mov	x0, x20
   26944:	mov	x4, x8
   26948:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   2694c:	cmp	w0, #0x4, lsl #12
   26950:	b.lt	268d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c48>  // b.tstop
   26954:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26958:	add	x0, x0, #0x441
   2695c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   26960:	ldp	x20, x19, [sp, #16]
   26964:	mov	x0, xzr
   26968:	ldr	x30, [sp], #32
   2696c:	ret
   26970:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26974:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26978:	add	x0, x0, #0x365
   2697c:	add	x2, x2, #0x41b
   26980:	mov	w1, #0x1b5                 	// #437
   26984:	b	2699c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d14>
   26988:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2698c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26990:	add	x0, x0, #0xb2f
   26994:	add	x2, x2, #0x2b1
   26998:	mov	w1, #0x2b8                 	// #696
   2699c:	mov	x3, xzr
   269a0:	mov	x4, xzr
   269a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   269a8:	str	x30, [sp, #-32]!
   269ac:	stp	x20, x19, [sp, #16]
   269b0:	mov	x19, x2
   269b4:	ldr	x2, [x2]
   269b8:	ldr	x3, [x19, #8]
   269bc:	ldr	w4, [x19, #16]
   269c0:	mov	x20, x1
   269c4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   269c8:	add	x1, x1, #0x410
   269cc:	bl	26860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   269d0:	cbz	x0, 269f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d6c>
   269d4:	mov	x1, x19
   269d8:	bl	26700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   269dc:	ldr	x8, [x19, #8]
   269e0:	ldr	x9, [x19, #48]
   269e4:	mov	w0, #0x1                   	// #1
   269e8:	sub	x8, x20, x8
   269ec:	add	x8, x8, x9
   269f0:	str	x8, [x19, #48]
   269f4:	ldp	x20, x19, [sp, #16]
   269f8:	ldr	x30, [sp], #32
   269fc:	ret
   26a00:	sub	sp, sp, #0xd0
   26a04:	str	x30, [sp, #128]
   26a08:	stp	x26, x25, [sp, #144]
   26a0c:	stp	x24, x23, [sp, #160]
   26a10:	stp	x22, x21, [sp, #176]
   26a14:	stp	x20, x19, [sp, #192]
   26a18:	mov	x19, x2
   26a1c:	ldr	x2, [x2]
   26a20:	ldr	x3, [x19, #8]
   26a24:	ldr	w4, [x19, #16]
   26a28:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26a2c:	add	x1, x1, #0x415
   26a30:	bl	26860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   26a34:	cbz	x0, 26ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   26a38:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26a3c:	add	x1, x1, #0x408
   26a40:	mov	w2, #0x2                   	// #2
   26a44:	mov	x23, x0
   26a48:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   26a4c:	cbz	w0, 26ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   26a50:	ldrb	w8, [x23]
   26a54:	cbz	w8, 26ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   26a58:	adrp	x20, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26a5c:	adrp	x21, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26a60:	adrp	x22, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   26a64:	add	x19, x19, #0x18
   26a68:	add	x20, x20, #0xce
   26a6c:	add	x21, x21, #0x408
   26a70:	add	x22, x22, #0xdd3
   26a74:	b	26a98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e10>
   26a78:	mov	x0, x24
   26a7c:	mov	x1, xzr
   26a80:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26a84:	add	x1, sp, #0x40
   26a88:	mov	x0, x19
   26a8c:	bl	271d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2550>
   26a90:	ldrb	w8, [x26, x25]
   26a94:	cbz	w8, 26ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   26a98:	mov	x0, x23
   26a9c:	mov	x1, x20
   26aa0:	stp	xzr, xzr, [sp, #64]
   26aa4:	str	xzr, [sp, #80]
   26aa8:	str	wzr, [sp, #88]
   26aac:	strh	wzr, [sp, #92]
   26ab0:	strb	wzr, [sp, #94]
   26ab4:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26ab8:	mov	x24, x0
   26abc:	add	x0, x0, #0x1
   26ac0:	mov	x1, xzr
   26ac4:	mov	x2, xzr
   26ac8:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26acc:	mov	x1, x23
   26ad0:	mov	x2, x24
   26ad4:	str	x0, [sp, #64]
   26ad8:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26adc:	ldr	x8, [sp, #64]
   26ae0:	add	x9, x23, x24
   26ae4:	mov	x1, x20
   26ae8:	strb	wzr, [x8, x24]
   26aec:	mov	x8, x9
   26af0:	ldrb	w10, [x8], #1
   26af4:	cmp	w10, #0x0
   26af8:	csel	x23, x9, x8, eq  // eq = none
   26afc:	mov	x0, x23
   26b00:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26b04:	mov	x24, x0
   26b08:	add	x0, x0, #0x1
   26b0c:	mov	x1, xzr
   26b10:	mov	x2, xzr
   26b14:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26b18:	mov	x1, x23
   26b1c:	mov	x2, x24
   26b20:	str	x0, [sp, #72]
   26b24:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26b28:	ldr	x8, [sp, #72]
   26b2c:	add	x9, x23, x24
   26b30:	mov	x0, sp
   26b34:	strb	wzr, [x8, x24]
   26b38:	mov	x8, x9
   26b3c:	ldrb	w10, [x8], #1
   26b40:	cmp	w10, #0x0
   26b44:	csel	x23, x9, x8, eq  // eq = none
   26b48:	bl	2542c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a4>
   26b4c:	mov	x0, sp
   26b50:	mov	x1, x23
   26b54:	bl	26570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   26b58:	ldr	x8, [sp, #48]
   26b5c:	ldr	w9, [sp, #56]
   26b60:	mov	w2, #0x2                   	// #2
   26b64:	mov	x1, x21
   26b68:	mov	x23, x0
   26b6c:	str	x8, [sp, #80]
   26b70:	str	w9, [sp, #88]
   26b74:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   26b78:	cmp	w0, #0x0
   26b7c:	cset	w8, ne  // ne = any
   26b80:	mov	x0, x23
   26b84:	mov	x1, x22
   26b88:	strb	w8, [sp, #92]
   26b8c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26b90:	mov	x25, x0
   26b94:	add	x0, x0, #0x1
   26b98:	mov	x1, xzr
   26b9c:	mov	x2, xzr
   26ba0:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26ba4:	mov	x1, x23
   26ba8:	mov	x2, x25
   26bac:	mov	x24, x0
   26bb0:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26bb4:	add	x8, x23, x25
   26bb8:	strb	wzr, [x24, x25]
   26bbc:	mov	x9, x8
   26bc0:	ldrb	w10, [x9], #1
   26bc4:	cmp	w10, #0x0
   26bc8:	csel	x23, x8, x9, eq  // eq = none
   26bcc:	cbz	x24, 26bdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>
   26bd0:	mov	x0, x24
   26bd4:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   26bd8:	str	x0, [sp, #96]
   26bdc:	mov	x0, x24
   26be0:	mov	x1, xzr
   26be4:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26be8:	mov	w2, #0x2                   	// #2
   26bec:	mov	x0, x23
   26bf0:	mov	x1, x21
   26bf4:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   26bf8:	cmp	w0, #0x0
   26bfc:	cset	w8, ne  // ne = any
   26c00:	mov	x0, x23
   26c04:	mov	x1, x22
   26c08:	strb	w8, [sp, #93]
   26c0c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26c10:	mov	x25, x0
   26c14:	add	x0, x0, #0x1
   26c18:	mov	x1, xzr
   26c1c:	mov	x2, xzr
   26c20:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26c24:	mov	x1, x23
   26c28:	mov	x2, x25
   26c2c:	mov	x24, x0
   26c30:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26c34:	add	x8, x23, x25
   26c38:	strb	wzr, [x24, x25]
   26c3c:	mov	x9, x8
   26c40:	ldrb	w10, [x9], #1
   26c44:	cmp	w10, #0x0
   26c48:	csel	x23, x8, x9, eq  // eq = none
   26c4c:	cbz	x24, 26c5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd4>
   26c50:	mov	x0, x24
   26c54:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   26c58:	str	x0, [sp, #104]
   26c5c:	mov	x0, x24
   26c60:	mov	x1, xzr
   26c64:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   26c68:	mov	w2, #0x2                   	// #2
   26c6c:	mov	x0, x23
   26c70:	mov	x1, x21
   26c74:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   26c78:	cmp	w0, #0x0
   26c7c:	cset	w8, ne  // ne = any
   26c80:	mov	x0, x23
   26c84:	mov	x1, x20
   26c88:	strb	w8, [sp, #94]
   26c8c:	bl	18b60 <__sanitizer_set_report_fd@@Base+0x251c>
   26c90:	mov	x25, x0
   26c94:	add	x0, x0, #0x1
   26c98:	mov	x1, xzr
   26c9c:	mov	x2, xzr
   26ca0:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   26ca4:	mov	x1, x23
   26ca8:	mov	x2, x25
   26cac:	mov	x24, x0
   26cb0:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   26cb4:	add	x26, x23, x25
   26cb8:	strb	wzr, [x24, x25]
   26cbc:	mov	x8, x26
   26cc0:	ldrb	w9, [x8], #1
   26cc4:	cmp	w9, #0x0
   26cc8:	cset	w25, ne  // ne = any
   26ccc:	csel	x23, x26, x8, eq  // eq = none
   26cd0:	cbz	x24, 26a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df0>
   26cd4:	mov	x0, x24
   26cd8:	bl	186e8 <__sanitizer_set_report_fd@@Base+0x20a4>
   26cdc:	str	x0, [sp, #112]
   26ce0:	b	26a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df0>
   26ce4:	mov	w0, #0x1                   	// #1
   26ce8:	ldp	x20, x19, [sp, #192]
   26cec:	ldp	x22, x21, [sp, #176]
   26cf0:	ldp	x24, x23, [sp, #160]
   26cf4:	ldp	x26, x25, [sp, #144]
   26cf8:	ldr	x30, [sp, #128]
   26cfc:	add	sp, sp, #0xd0
   26d00:	ret
   26d04:	str	x30, [sp, #-64]!
   26d08:	stp	x24, x23, [sp, #16]
   26d0c:	stp	x22, x21, [sp, #32]
   26d10:	stp	x20, x19, [sp, #48]
   26d14:	mov	w8, #0x4020                	// #16416
   26d18:	add	x24, x0, x8
   26d1c:	ldrb	w8, [x24]
   26d20:	cbnz	w8, 26e50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c8>
   26d24:	ldr	x22, [x0, #8]
   26d28:	mov	x19, x0
   26d2c:	mov	x20, x1
   26d30:	bl	13dc0 <__sanitizer_report_error_summary@@Base+0x570>
   26d34:	cbz	x0, 26d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20d0>
   26d38:	mov	x21, x0
   26d3c:	mov	x0, x22
   26d40:	bl	1375c <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   26d44:	cbz	x0, 26d58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20d0>
   26d48:	mov	x1, x0
   26d4c:	mov	x0, x21
   26d50:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   26d54:	cbz	w0, 26e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f0>
   26d58:	ldr	x8, [x19, #16408]
   26d5c:	cmp	x8, #0x4
   26d60:	b.hi	26e48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c0>  // b.pmore
   26d64:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26d68:	add	x21, x19, #0x18
   26d6c:	add	x22, x22, #0x563
   26d70:	b	26d98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2110>
   26d74:	ldr	x8, [x19]
   26d78:	mov	x0, x19
   26d7c:	ldr	x8, [x8]
   26d80:	blr	x8
   26d84:	ldr	x8, [x19, #16408]
   26d88:	add	x8, x8, #0x1
   26d8c:	cmp	x8, #0x5
   26d90:	str	x8, [x19, #16408]
   26d94:	b.cs	26e48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c0>  // b.hs, b.nlast
   26d98:	ldr	w0, [x19, #16]
   26d9c:	cmn	w0, #0x1
   26da0:	b.eq	26e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>  // b.none
   26da4:	ldr	w8, [x19, #20]
   26da8:	cmn	w8, #0x1
   26dac:	b.eq	26e14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>  // b.none
   26db0:	mov	x0, x20
   26db4:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   26db8:	cbz	x0, 26dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2164>
   26dbc:	str	xzr, [sp, #8]
   26dc0:	mov	x23, x0
   26dc4:	ldr	w0, [x19, #20]
   26dc8:	add	x3, sp, #0x8
   26dcc:	mov	x1, x20
   26dd0:	mov	x2, x23
   26dd4:	mov	x4, xzr
   26dd8:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   26ddc:	tbz	w0, #0, 26e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a4>
   26de0:	ldr	x8, [sp, #8]
   26de4:	cmp	x8, x23
   26de8:	b.ne	26e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a4>  // b.any
   26dec:	ldr	x8, [x19]
   26df0:	mov	w2, #0x4000                	// #16384
   26df4:	mov	x0, x19
   26df8:	mov	x1, x21
   26dfc:	ldr	x8, [x8, #8]
   26e00:	blr	x8
   26e04:	tbnz	w0, #0, 26e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   26e08:	ldr	w0, [x19, #16]
   26e0c:	cmn	w0, #0x1
   26e10:	b.eq	26e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>  // b.none
   26e14:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   26e18:	ldr	w0, [x19, #20]
   26e1c:	cmn	w0, #0x1
   26e20:	b.eq	26d74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>  // b.none
   26e24:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   26e28:	b	26d74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>
   26e2c:	ldr	w1, [x19, #20]
   26e30:	mov	x0, x22
   26e34:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   26e38:	ldr	w0, [x19, #16]
   26e3c:	cmn	w0, #0x1
   26e40:	b.ne	26e14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>  // b.any
   26e44:	b	26e18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>
   26e48:	ldrb	w8, [x24]
   26e4c:	cbz	w8, 26e6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e4>
   26e50:	mov	x21, xzr
   26e54:	mov	x0, x21
   26e58:	ldp	x20, x19, [sp, #48]
   26e5c:	ldp	x22, x21, [sp, #32]
   26e60:	ldp	x24, x23, [sp, #16]
   26e64:	ldr	x30, [sp], #64
   26e68:	ret
   26e6c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26e70:	add	x0, x0, #0x4d6
   26e74:	b	26e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f8>
   26e78:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26e7c:	add	x0, x0, #0x49f
   26e80:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   26e84:	mov	x21, xzr
   26e88:	mov	w8, #0x1                   	// #1
   26e8c:	strb	w8, [x24]
   26e90:	b	26e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   26e94:	str	x30, [sp, #-16]!
   26e98:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   26e9c:	ldr	x10, [x10, #4008]
   26ea0:	mov	w8, #0x4020                	// #16416
   26ea4:	and	w9, w2, #0x1
   26ea8:	movi	v0.2d, #0xffffffffffffffff
   26eac:	add	x8, x0, x8
   26eb0:	add	x10, x10, #0x10
   26eb4:	str	xzr, [x0, #16408]
   26eb8:	str	d0, [x0, #16]
   26ebc:	stp	x10, x1, [x0]
   26ec0:	strh	wzr, [x8]
   26ec4:	strb	w9, [x8, #2]
   26ec8:	cbz	x1, 26edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2254>
   26ecc:	ldrb	w8, [x1]
   26ed0:	cbz	w8, 26ef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x226c>
   26ed4:	ldr	x30, [sp], #16
   26ed8:	ret
   26edc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26ee0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26ee4:	add	x0, x0, #0x365
   26ee8:	add	x2, x2, #0x475
   26eec:	mov	w1, #0x1d0                 	// #464
   26ef0:	b	26f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2280>
   26ef4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26ef8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26efc:	add	x0, x0, #0x365
   26f00:	add	x2, x2, #0x486
   26f04:	mov	w1, #0x1d1                 	// #465
   26f08:	mov	x3, xzr
   26f0c:	mov	x4, xzr
   26f10:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   26f14:	sub	sp, sp, #0x30
   26f18:	stp	x30, x21, [sp, #16]
   26f1c:	stp	x20, x19, [sp, #32]
   26f20:	ldr	w8, [x0, #16]
   26f24:	cmn	w8, #0x1
   26f28:	b.eq	26fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2338>  // b.none
   26f2c:	ldr	w8, [x0, #20]
   26f30:	mov	x19, x0
   26f34:	cmn	w8, #0x1
   26f38:	b.eq	26fc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2338>  // b.none
   26f3c:	mov	x0, x1
   26f40:	mov	x20, x1
   26f44:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   26f48:	cbz	x0, 26f7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>
   26f4c:	str	xzr, [sp, #8]
   26f50:	mov	x21, x0
   26f54:	ldr	w0, [x19, #20]
   26f58:	add	x3, sp, #0x8
   26f5c:	mov	x1, x20
   26f60:	mov	x2, x21
   26f64:	mov	x4, xzr
   26f68:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   26f6c:	tbz	w0, #0, 26fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>
   26f70:	ldr	x8, [sp, #8]
   26f74:	cmp	x8, x21
   26f78:	b.ne	26fb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>  // b.any
   26f7c:	mov	x20, x19
   26f80:	ldr	x8, [x20], #24
   26f84:	mov	w2, #0x4000                	// #16384
   26f88:	mov	x0, x19
   26f8c:	ldr	x8, [x8, #8]
   26f90:	mov	x1, x20
   26f94:	blr	x8
   26f98:	tst	w0, #0x1
   26f9c:	csel	x0, x20, xzr, ne  // ne = any
   26fa0:	ldp	x20, x19, [sp, #32]
   26fa4:	ldp	x30, x21, [sp, #16]
   26fa8:	add	sp, sp, #0x30
   26fac:	ret
   26fb0:	ldr	w1, [x19, #20]
   26fb4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   26fb8:	add	x0, x0, #0x563
   26fbc:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   26fc0:	mov	x0, xzr
   26fc4:	ldp	x20, x19, [sp, #32]
   26fc8:	ldp	x30, x21, [sp, #16]
   26fcc:	add	sp, sp, #0x30
   26fd0:	ret
   26fd4:	stp	x30, x19, [sp, #-16]!
   26fd8:	mov	x19, x0
   26fdc:	ldr	w0, [x0, #16]
   26fe0:	cmn	w0, #0x1
   26fe4:	b.eq	26fec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2364>  // b.none
   26fe8:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   26fec:	ldr	w0, [x19, #20]
   26ff0:	cmn	w0, #0x1
   26ff4:	b.eq	26ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2374>  // b.none
   26ff8:	bl	1bb54 <__sanitizer_set_report_fd@@Base+0x5510>
   26ffc:	ldr	x8, [x19]
   27000:	mov	x0, x19
   27004:	ldr	x1, [x8]
   27008:	ldp	x30, x19, [sp], #16
   2700c:	br	x1
   27010:	cbz	x2, 27058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d0>
   27014:	str	x30, [sp, #-32]!
   27018:	stp	x20, x19, [sp, #16]
   2701c:	str	xzr, [sp, #8]
   27020:	mov	x19, x0
   27024:	ldr	w0, [x0, #20]
   27028:	add	x3, sp, #0x8
   2702c:	mov	x4, xzr
   27030:	mov	x20, x2
   27034:	bl	1bba4 <__sanitizer_set_report_fd@@Base+0x5560>
   27038:	tbz	w0, #0, 27060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>
   2703c:	ldr	x8, [sp, #8]
   27040:	cmp	x8, x20
   27044:	b.ne	27060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.any
   27048:	mov	w0, #0x1                   	// #1
   2704c:	ldp	x20, x19, [sp, #16]
   27050:	ldr	x30, [sp], #32
   27054:	ret
   27058:	mov	w0, #0x1                   	// #1
   2705c:	ret
   27060:	ldr	w1, [x19, #20]
   27064:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27068:	add	x0, x0, #0x563
   2706c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27070:	mov	w0, wzr
   27074:	ldp	x20, x19, [sp, #16]
   27078:	ldr	x30, [sp], #32
   2707c:	ret
   27080:	str	x30, [sp, #-48]!
   27084:	stp	x22, x21, [sp, #16]
   27088:	stp	x20, x19, [sp, #32]
   2708c:	cbz	x2, 27154 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24cc>
   27090:	str	xzr, [sp, #8]
   27094:	mov	x21, x0
   27098:	ldr	w0, [x0, #16]
   2709c:	mov	x20, x2
   270a0:	sub	x2, x2, #0x1
   270a4:	add	x3, sp, #0x8
   270a8:	mov	x4, xzr
   270ac:	mov	x19, x1
   270b0:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x5514>
   270b4:	ldr	x8, [sp, #8]
   270b8:	cbz	x8, 2711c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   270bc:	tbz	w0, #0, 2711c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   270c0:	mov	x22, xzr
   270c4:	ldr	x9, [x21]
   270c8:	add	x22, x8, x22
   270cc:	mov	x0, x21
   270d0:	mov	x1, x19
   270d4:	ldr	x9, [x9, #16]
   270d8:	mov	x2, x22
   270dc:	blr	x9
   270e0:	tbnz	w0, #0, 27150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c8>
   270e4:	add	x8, x22, #0x1
   270e8:	cmp	x8, x20
   270ec:	b.eq	27140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24b8>  // b.none
   270f0:	str	xzr, [sp, #8]
   270f4:	ldr	w0, [x21, #16]
   270f8:	mvn	x8, x22
   270fc:	add	x1, x19, x22
   27100:	add	x2, x8, x20
   27104:	add	x3, sp, #0x8
   27108:	mov	x4, xzr
   2710c:	bl	1bb58 <__sanitizer_set_report_fd@@Base+0x5514>
   27110:	ldr	x8, [sp, #8]
   27114:	cbz	x8, 2711c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   27118:	tbnz	w0, #0, 270c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x243c>
   2711c:	ldr	w1, [x21, #16]
   27120:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27124:	add	x0, x0, #0x50f
   27128:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2712c:	mov	w0, wzr
   27130:	ldp	x20, x19, [sp, #32]
   27134:	ldp	x22, x21, [sp, #16]
   27138:	ldr	x30, [sp], #48
   2713c:	ret
   27140:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27144:	add	x0, x0, #0x53d
   27148:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2714c:	mov	x22, xzr
   27150:	strb	wzr, [x19, x22]
   27154:	mov	w0, #0x1                   	// #1
   27158:	ldp	x20, x19, [sp, #32]
   2715c:	ldp	x22, x21, [sp, #16]
   27160:	ldr	x30, [sp], #48
   27164:	ret
   27168:	mov	x0, xzr
   2716c:	ret
   27170:	cmp	x2, #0x2
   27174:	b.cc	27198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2510>  // b.lo, b.ul, b.last
   27178:	add	x8, x2, x1
   2717c:	ldurb	w9, [x8, #-1]
   27180:	cmp	w9, #0xa
   27184:	b.ne	27198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2510>  // b.any
   27188:	ldurb	w8, [x8, #-2]
   2718c:	cmp	w8, #0xa
   27190:	cset	w0, eq  // eq = none
   27194:	ret
   27198:	mov	w0, wzr
   2719c:	ret
   271a0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   271a4:	ldr	x8, [x8, #4056]
   271a8:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   271ac:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   271b0:	add	x9, x9, #0x5c1
   271b4:	ldrb	w8, [x8, #188]
   271b8:	add	x10, x10, #0x5d1
   271bc:	adrp	x11, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   271c0:	add	x11, x11, #0x5ac
   271c4:	cmp	w8, #0x0
   271c8:	csel	x8, x10, x9, eq  // eq = none
   271cc:	stp	x1, x8, [x2]
   271d0:	stp	x11, xzr, [x2, #16]
   271d4:	ret
   271d8:	str	x30, [sp, #-32]!
   271dc:	stp	x20, x19, [sp, #16]
   271e0:	ldp	x8, x3, [x0, #8]
   271e4:	mov	x9, #0x2493                	// #9363
   271e8:	movk	x9, #0x9249, lsl #16
   271ec:	movk	x9, #0x4924, lsl #32
   271f0:	lsr	x8, x8, #3
   271f4:	movk	x9, #0x2492, lsl #48
   271f8:	umulh	x4, x8, x9
   271fc:	cmp	x3, x4
   27200:	b.hi	2728c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2604>  // b.pmore
   27204:	mov	x19, x0
   27208:	mov	x20, x1
   2720c:	b.ne	27264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25dc>  // b.any
   27210:	adds	x3, x3, #0x1
   27214:	b.cs	272a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x261c>  // b.hs, b.nlast
   27218:	sub	x8, x3, #0x1
   2721c:	tst	x3, x8
   27220:	b.ne	2722c <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a4>  // b.any
   27224:	mov	x8, x3
   27228:	b	27254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25cc>
   2722c:	clz	x8, x3
   27230:	eor	x9, x8, #0x3f
   27234:	mov	w8, #0x2                   	// #2
   27238:	lsl	x8, x8, x9
   2723c:	cmp	x8, x3
   27240:	b.ls	272c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x263c>  // b.plast
   27244:	mov	w10, #0x1                   	// #1
   27248:	lsl	x4, x10, x9
   2724c:	cmp	x4, x3
   27250:	b.cs	272e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2658>  // b.hs, b.nlast
   27254:	mov	x0, x19
   27258:	mov	x1, x8
   2725c:	bl	272f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2670>
   27260:	ldr	x3, [x19, #16]
   27264:	add	x9, x3, #0x1
   27268:	ldr	x8, [x19]
   2726c:	str	x9, [x19, #16]
   27270:	mov	x1, x20
   27274:	ldp	x20, x19, [sp, #16]
   27278:	mov	w10, #0x38                  	// #56
   2727c:	madd	x0, x3, x10, x8
   27280:	mov	w2, #0x38                  	// #56
   27284:	ldr	x30, [sp], #32
   27288:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   2728c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   27290:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   27294:	add	x0, x0, #0xb2f
   27298:	add	x2, x2, #0x41
   2729c:	mov	w1, #0x1cd                 	// #461
   272a0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   272a4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   272a8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   272ac:	add	x0, x0, #0xb2f
   272b0:	add	x2, x2, #0x5d
   272b4:	mov	w1, #0x186                 	// #390
   272b8:	mov	x3, xzr
   272bc:	mov	x4, xzr
   272c0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   272c4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   272c8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   272cc:	add	x0, x0, #0xb2f
   272d0:	add	x2, x2, #0x156
   272d4:	mov	w1, #0x18a                 	// #394
   272d8:	mov	x4, x8
   272dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   272e0:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   272e4:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   272e8:	add	x0, x0, #0xb2f
   272ec:	add	x2, x2, #0x178
   272f0:	mov	w1, #0x18b                 	// #395
   272f4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   272f8:	stp	x30, x21, [sp, #-32]!
   272fc:	stp	x20, x19, [sp, #16]
   27300:	cbz	x1, 27398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   27304:	ldr	x3, [x0, #16]
   27308:	mov	x20, x1
   2730c:	mov	x19, x0
   27310:	cmp	x3, x1
   27314:	b.hi	273b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2730>  // b.pmore
   27318:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2731c:	ldr	x21, [x21, #4016]
   27320:	ldr	x0, [x21]
   27324:	cbnz	x0, 27330 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26a8>
   27328:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   2732c:	str	x0, [x21]
   27330:	sub	x8, x0, #0x1
   27334:	tst	x0, x8
   27338:	b.ne	273d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x274c>  // b.any
   2733c:	mov	w8, #0x38                  	// #56
   27340:	mul	x8, x20, x8
   27344:	add	x8, x8, x0
   27348:	sub	x8, x8, #0x1
   2734c:	neg	x9, x0
   27350:	and	x20, x8, x9
   27354:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   27358:	add	x1, x1, #0x950
   2735c:	mov	x0, x20
   27360:	mov	w2, wzr
   27364:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   27368:	ldr	x8, [x19, #16]
   2736c:	ldr	x1, [x19]
   27370:	mov	w9, #0x38                  	// #56
   27374:	mov	x21, x0
   27378:	mul	x2, x8, x9
   2737c:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   27380:	ldp	x0, x1, [x19]
   27384:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   27388:	stp	x21, x20, [x19]
   2738c:	ldp	x20, x19, [sp, #16]
   27390:	ldp	x30, x21, [sp], #32
   27394:	ret
   27398:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2739c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   273a0:	add	x0, x0, #0xb2f
   273a4:	add	x2, x2, #0x919
   273a8:	mov	w1, #0x20b                 	// #523
   273ac:	mov	x3, xzr
   273b0:	mov	x4, xzr
   273b4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   273b8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   273bc:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   273c0:	add	x0, x0, #0xb2f
   273c4:	add	x2, x2, #0x932
   273c8:	mov	w1, #0x20c                 	// #524
   273cc:	mov	x4, x20
   273d0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   273d4:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   273d8:	add	x0, x0, #0x20f
   273dc:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   273e0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   273e4:	stp	x30, x19, [sp, #-16]!
   273e8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   273ec:	ldr	x8, [x8, #3792]
   273f0:	mov	x19, x0
   273f4:	cbz	x8, 27418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>
   273f8:	mov	x0, x19
   273fc:	mov	x1, xzr
   27400:	mov	x2, xzr
   27404:	mov	x3, xzr
   27408:	bl	6b80 <__cxa_demangle@plt>
   2740c:	cbz	x0, 27418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>
   27410:	ldp	x30, x19, [sp], #16
   27414:	ret
   27418:	mov	x0, x19
   2741c:	ldp	x30, x19, [sp], #16
   27420:	ret
   27424:	sub	sp, sp, #0x20
   27428:	stp	x30, x19, [sp, #16]
   2742c:	cbz	x0, 27488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   27430:	ldrb	w8, [x0]
   27434:	mov	x19, x0
   27438:	cmp	w8, #0x5f
   2743c:	b.ne	27488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>  // b.any
   27440:	ldrb	w8, [x19, #1]
   27444:	cmp	w8, #0x54
   27448:	b.ne	27488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>  // b.any
   2744c:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   27450:	ldr	x0, [x8, #3192]
   27454:	cbz	x0, 27488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   27458:	str	x0, [sp, #8]
   2745c:	mov	x0, x19
   27460:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   27464:	mov	x1, x0
   27468:	mov	x0, x19
   2746c:	ldr	x5, [sp, #8]
   27470:	ldp	x30, x19, [sp, #16]
   27474:	mov	x2, xzr
   27478:	mov	x3, xzr
   2747c:	mov	w4, wzr
   27480:	add	sp, sp, #0x20
   27484:	br	x5
   27488:	ldp	x30, x19, [sp, #16]
   2748c:	mov	x0, xzr
   27490:	add	sp, sp, #0x20
   27494:	ret
   27498:	str	x30, [sp, #-32]!
   2749c:	stp	x20, x19, [sp, #16]
   274a0:	cbz	x0, 274f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2868>
   274a4:	ldrb	w8, [x0]
   274a8:	mov	x19, x0
   274ac:	cmp	w8, #0x5f
   274b0:	b.ne	274fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>  // b.any
   274b4:	ldrb	w8, [x19, #1]
   274b8:	cmp	w8, #0x54
   274bc:	b.ne	274fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>  // b.any
   274c0:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   274c4:	ldr	x20, [x8, #3192]
   274c8:	cbz	x20, 274fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>
   274cc:	mov	x0, x19
   274d0:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   274d4:	mov	x1, x0
   274d8:	mov	x0, x19
   274dc:	mov	x2, xzr
   274e0:	mov	x3, xzr
   274e4:	mov	w4, wzr
   274e8:	blr	x20
   274ec:	cbz	x0, 274fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>
   274f0:	ldp	x20, x19, [sp, #16]
   274f4:	ldr	x30, [sp], #32
   274f8:	ret
   274fc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27500:	ldr	x8, [x8, #3792]
   27504:	cbz	x8, 27520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2898>
   27508:	mov	x0, x19
   2750c:	mov	x1, xzr
   27510:	mov	x2, xzr
   27514:	mov	x3, xzr
   27518:	bl	6b80 <__cxa_demangle@plt>
   2751c:	cbnz	x0, 274f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2868>
   27520:	mov	x0, x19
   27524:	ldp	x20, x19, [sp, #16]
   27528:	ldr	x30, [sp], #32
   2752c:	ret
   27530:	sub	sp, sp, #0x90
   27534:	stp	x30, x23, [sp, #96]
   27538:	stp	x22, x21, [sp, #112]
   2753c:	stp	x20, x19, [sp, #128]
   27540:	mov	x19, x0
   27544:	ldr	x0, [x0, #8]
   27548:	mov	w8, #0x4021                	// #16417
   2754c:	add	x20, x19, x8
   27550:	bl	19c60 <__sanitizer_set_report_fd@@Base+0x361c>
   27554:	tbz	w0, #0, 275d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x294c>
   27558:	ldp	x8, x1, [x19]
   2755c:	add	x2, sp, #0x8
   27560:	mov	x0, x19
   27564:	ldr	x8, [x8, #24]
   27568:	blr	x8
   2756c:	ldrb	w8, [x20, #1]
   27570:	cbnz	w8, 277c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b38>
   27574:	add	x0, sp, #0x38
   27578:	add	x20, sp, #0x38
   2757c:	bl	6a30 <pipe@plt>
   27580:	cmn	w0, #0x1
   27584:	b.eq	27794 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0c>  // b.none
   27588:	ldp	w9, w8, [sp, #56]
   2758c:	cmp	w8, #0x2
   27590:	ccmp	w9, #0x2, #0x4, gt
   27594:	csel	x22, x20, xzr, gt
   27598:	add	x20, x20, #0x8
   2759c:	mov	x0, x20
   275a0:	bl	6a30 <pipe@plt>
   275a4:	cmn	w0, #0x1
   275a8:	b.eq	275f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2970>  // b.none
   275ac:	ldr	w8, [sp, #64]
   275b0:	cmp	w8, #0x3
   275b4:	b.lt	27604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x297c>  // b.tstop
   275b8:	ldr	w8, [sp, #68]
   275bc:	cmp	w8, #0x3
   275c0:	b.lt	27604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x297c>  // b.tstop
   275c4:	cbz	x22, 27600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2978>
   275c8:	add	x22, sp, #0x38
   275cc:	mov	w21, #0x1                   	// #1
   275d0:	b	276cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   275d4:	ldrb	w8, [x20]
   275d8:	cbnz	w8, 277a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   275dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   275e0:	add	x0, x0, #0x5fc
   275e4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   275e8:	mov	w8, #0x1                   	// #1
   275ec:	mov	w0, wzr
   275f0:	strb	w8, [x20]
   275f4:	b	277ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b24>
   275f8:	mov	w19, #0x1                   	// #1
   275fc:	b	27774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   27600:	mov	x22, x20
   27604:	add	x8, sp, #0x38
   27608:	add	x20, x8, #0x10
   2760c:	mov	x0, x20
   27610:	bl	6a30 <pipe@plt>
   27614:	cmn	w0, #0x1
   27618:	b.eq	27640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29b8>  // b.none
   2761c:	ldr	w8, [sp, #72]
   27620:	cmp	w8, #0x3
   27624:	b.lt	2764c <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c4>  // b.tstop
   27628:	ldr	w8, [sp, #76]
   2762c:	cmp	w8, #0x3
   27630:	b.lt	2764c <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c4>  // b.tstop
   27634:	cbz	x22, 27648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c0>
   27638:	mov	w21, #0x2                   	// #2
   2763c:	b	276cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   27640:	mov	w19, #0x2                   	// #2
   27644:	b	27774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   27648:	mov	x22, x20
   2764c:	add	x8, sp, #0x38
   27650:	add	x20, x8, #0x18
   27654:	mov	x0, x20
   27658:	bl	6a30 <pipe@plt>
   2765c:	cmn	w0, #0x1
   27660:	b.eq	27688 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a00>  // b.none
   27664:	ldr	w8, [sp, #80]
   27668:	cmp	w8, #0x3
   2766c:	b.lt	27694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a0c>  // b.tstop
   27670:	ldr	w8, [sp, #84]
   27674:	cmp	w8, #0x3
   27678:	b.lt	27694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a0c>  // b.tstop
   2767c:	cbz	x22, 27690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a08>
   27680:	mov	w21, #0x3                   	// #3
   27684:	b	276cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   27688:	mov	w19, #0x3                   	// #3
   2768c:	b	27774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   27690:	mov	x22, x20
   27694:	add	x8, sp, #0x38
   27698:	add	x20, x8, #0x20
   2769c:	mov	x0, x20
   276a0:	bl	6a30 <pipe@plt>
   276a4:	cmn	w0, #0x1
   276a8:	b.eq	27770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae8>  // b.none
   276ac:	ldr	w8, [sp, #88]
   276b0:	cmp	w8, #0x3
   276b4:	b.lt	276fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a74>  // b.tstop
   276b8:	ldr	w8, [sp, #92]
   276bc:	cmp	w8, #0x3
   276c0:	b.lt	276fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a74>  // b.tstop
   276c4:	cbz	x22, 277e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>
   276c8:	mov	w21, #0x4                   	// #4
   276cc:	add	x23, sp, #0x38
   276d0:	b	276e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a58>
   276d4:	subs	x21, x21, #0x1
   276d8:	add	x23, x23, #0x8
   276dc:	b.eq	27700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a78>  // b.none
   276e0:	cmp	x22, x23
   276e4:	b.eq	276d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>  // b.none
   276e8:	ldr	w0, [x23]
   276ec:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   276f0:	ldr	w0, [x23, #4]
   276f4:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   276f8:	b	276d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>
   276fc:	mov	x20, xzr
   27700:	cbz	x22, 27800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b78>
   27704:	cbz	x20, 277e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>
   27708:	ldp	w21, w3, [x22]
   2770c:	ldp	w2, w20, [x20]
   27710:	ldr	x0, [x19, #8]
   27714:	add	x1, sp, #0x8
   27718:	mov	w4, #0xffffffff            	// #-1
   2771c:	bl	21b88 <__sanitizer_sandbox_on_notify@@Base+0x1508>
   27720:	tbnz	w0, #31, 2774c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>
   27724:	mov	w22, w0
   27728:	stp	w21, w20, [x19, #16]
   2772c:	cbz	w0, 27820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b98>
   27730:	mov	w0, #0xa                   	// #10
   27734:	bl	213ec <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   27738:	mov	w0, w22
   2773c:	bl	21ce4 <__sanitizer_sandbox_on_notify@@Base+0x1664>
   27740:	tbz	w0, #0, 27760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad8>
   27744:	mov	w0, #0x1                   	// #1
   27748:	b	277ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b24>
   2774c:	mov	w0, w21
   27750:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   27754:	mov	w0, w20
   27758:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   2775c:	b	277a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   27760:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27764:	add	x0, x0, #0x70e
   27768:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2776c:	b	277a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   27770:	mov	w19, #0x4                   	// #4
   27774:	add	x8, sp, #0x38
   27778:	add	x20, x8, #0x4
   2777c:	ldur	w0, [x20, #-4]
   27780:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   27784:	ldr	w0, [x20], #8
   27788:	bl	19a64 <__sanitizer_set_report_fd@@Base+0x3420>
   2778c:	subs	x19, x19, #0x1
   27790:	b.ne	2777c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af4>  // b.any
   27794:	bl	6d00 <__errno_location@plt>
   27798:	ldr	w1, [x0]
   2779c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   277a0:	add	x0, x0, #0x6b0
   277a4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   277a8:	mov	w0, wzr
   277ac:	ldp	x20, x19, [sp, #128]
   277b0:	ldp	x22, x21, [sp, #112]
   277b4:	ldp	x30, x23, [sp, #96]
   277b8:	add	sp, sp, #0x90
   277bc:	ret
   277c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   277c4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   277c8:	add	x0, x0, #0x62b
   277cc:	add	x2, x2, #0x690
   277d0:	mov	w1, #0xa6                  	// #166
   277d4:	mov	x3, xzr
   277d8:	mov	x4, xzr
   277dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   277e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   277e4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   277e8:	add	x0, x0, #0x62b
   277ec:	add	x2, x2, #0x757
   277f0:	mov	w1, #0x85                  	// #133
   277f4:	mov	x3, xzr
   277f8:	mov	x4, xzr
   277fc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27800:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27804:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27808:	add	x0, x0, #0x62b
   2780c:	add	x2, x2, #0x747
   27810:	mov	w1, #0x84                  	// #132
   27814:	mov	x3, xzr
   27818:	mov	x4, xzr
   2781c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27820:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27824:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27828:	add	x0, x0, #0x62b
   2782c:	add	x2, x2, #0x6fe
   27830:	mov	w1, #0xbc                  	// #188
   27834:	mov	x3, xzr
   27838:	mov	x4, xzr
   2783c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27840:	cmp	x2, #0x9
   27844:	b.cs	27850 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bc8>  // b.hs, b.nlast
   27848:	mov	w0, wzr
   2784c:	ret
   27850:	str	x30, [sp, #-16]!
   27854:	add	x8, x1, x2
   27858:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2785c:	sub	x0, x8, #0x8
   27860:	add	x1, x1, #0xa6e
   27864:	mov	w2, #0x8                   	// #8
   27868:	bl	18960 <__sanitizer_set_report_fd@@Base+0x231c>
   2786c:	cmp	w0, #0x0
   27870:	cset	w0, eq  // eq = none
   27874:	ldr	x30, [sp], #16
   27878:	ret
   2787c:	str	x30, [sp, #-32]!
   27880:	stp	x20, x19, [sp, #16]
   27884:	cbz	x1, 27914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>
   27888:	ldrb	w8, [x1]
   2788c:	mov	x19, x1
   27890:	cmp	w8, #0x5f
   27894:	b.ne	278e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>  // b.any
   27898:	ldrb	w8, [x19, #1]
   2789c:	cmp	w8, #0x54
   278a0:	b.ne	278e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>  // b.any
   278a4:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   278a8:	ldr	x20, [x8, #3192]
   278ac:	cbz	x20, 278e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>
   278b0:	mov	x0, x19
   278b4:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   278b8:	mov	x1, x0
   278bc:	mov	x0, x19
   278c0:	mov	x2, xzr
   278c4:	mov	x3, xzr
   278c8:	mov	w4, wzr
   278cc:	blr	x20
   278d0:	cbz	x0, 278e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>
   278d4:	ldp	x20, x19, [sp, #16]
   278d8:	ldr	x30, [sp], #32
   278dc:	ret
   278e0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   278e4:	ldr	x8, [x8, #3792]
   278e8:	cbz	x8, 27904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c7c>
   278ec:	mov	x0, x19
   278f0:	mov	x1, xzr
   278f4:	mov	x2, xzr
   278f8:	mov	x3, xzr
   278fc:	bl	6b80 <__cxa_demangle@plt>
   27900:	cbnz	x0, 278d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>
   27904:	mov	x0, x19
   27908:	ldp	x20, x19, [sp, #16]
   2790c:	ldr	x30, [sp], #32
   27910:	ret
   27914:	mov	x0, xzr
   27918:	ldp	x20, x19, [sp, #16]
   2791c:	ldr	x30, [sp], #32
   27920:	ret
   27924:	sub	sp, sp, #0x50
   27928:	str	x30, [sp, #32]
   2792c:	stp	x22, x21, [sp, #48]
   27930:	stp	x20, x19, [sp, #64]
   27934:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27938:	ldr	x22, [x22, #4056]
   2793c:	ldrb	w8, [x22]
   27940:	cbz	w8, 27970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ce8>
   27944:	bl	1202c <_ZdaPvRKSt9nothrow_t@@Base+0x858>
   27948:	tbz	w0, #0, 2799c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d14>
   2794c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27950:	ldr	x8, [x8, #3808]
   27954:	ldr	w8, [x8]
   27958:	cmp	w8, #0x2
   2795c:	b.cc	27a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>  // b.lo, b.ul, b.last
   27960:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27964:	add	x0, x0, #0x781
   27968:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2796c:	b	27a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   27970:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27974:	ldr	x8, [x8, #3808]
   27978:	ldr	w8, [x8]
   2797c:	cmp	w8, #0x2
   27980:	b.cc	27990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>  // b.lo, b.ul, b.last
   27984:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27988:	add	x0, x0, #0x768
   2798c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27990:	mov	x19, xzr
   27994:	mov	x21, xzr
   27998:	b	27bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f28>
   2799c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   279a0:	ldr	x8, [x8, #3744]
   279a4:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   279a8:	ldr	x9, [x9, #3800]
   279ac:	cmp	x8, #0x0
   279b0:	cset	w8, eq  // eq = none
   279b4:	cmp	x9, #0x0
   279b8:	cset	w9, eq  // eq = none
   279bc:	orr	w8, w9, w8
   279c0:	tbnz	w8, #0, 27a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   279c4:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   279c8:	ldr	x0, [x0, #3920]
   279cc:	mov	w1, #0x4010                	// #16400
   279d0:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   279d4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   279d8:	add	x8, x8, #0x948
   279dc:	stp	x8, xzr, [x0]
   279e0:	cbz	x0, 27a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   279e4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   279e8:	ldr	x8, [x8, #3808]
   279ec:	mov	x19, x0
   279f0:	ldr	w8, [x8]
   279f4:	cmp	w8, #0x2
   279f8:	b.cc	27ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.lo, b.ul, b.last
   279fc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27a00:	add	x0, x0, #0x7b0
   27a04:	b	27a3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>
   27a08:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27a0c:	ldr	x20, [x20, #3920]
   27a10:	mov	x0, x20
   27a14:	bl	25a0c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd84>
   27a18:	cbz	x0, 27a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>
   27a1c:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27a20:	ldr	x8, [x8, #3808]
   27a24:	mov	x19, x0
   27a28:	ldr	w8, [x8]
   27a2c:	cmp	w8, #0x2
   27a30:	b.cc	27ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.lo, b.ul, b.last
   27a34:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27a38:	add	x0, x0, #0x7cc
   27a3c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27a40:	b	27ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>
   27a44:	ldr	x21, [x22, #8]
   27a48:	cbz	x21, 27a64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ddc>
   27a4c:	mov	x0, x21
   27a50:	bl	1375c <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   27a54:	ldrb	w8, [x21]
   27a58:	cbz	w8, 27b30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea8>
   27a5c:	mov	x19, x0
   27a60:	b	27a6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2de4>
   27a64:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27a68:	add	x19, x19, #0xcf
   27a6c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27a70:	add	x1, x1, #0x877
   27a74:	mov	x0, x19
   27a78:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   27a7c:	cbz	w0, 27ae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e58>
   27a80:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27a84:	add	x1, x1, #0x8b9
   27a88:	mov	x0, x19
   27a8c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   27a90:	cbz	w0, 27c30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa8>
   27a94:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   27a98:	add	x1, x1, #0x6c1
   27a9c:	mov	x0, x19
   27aa0:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   27aa4:	cbz	w0, 27b50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec8>
   27aa8:	cbnz	x21, 27c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb8>
   27aac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27ab0:	add	x0, x0, #0x877
   27ab4:	bl	16444 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2328>
   27ab8:	cbz	x0, 27bec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f64>
   27abc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27ac0:	ldr	x8, [x8, #3808]
   27ac4:	mov	x21, x0
   27ac8:	ldr	w8, [x8]
   27acc:	cmp	w8, #0x2
   27ad0:	b.cc	27b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>  // b.lo, b.ul, b.last
   27ad4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27ad8:	add	x0, x0, #0x9b3
   27adc:	b	27afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e74>
   27ae0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27ae4:	ldr	x8, [x8, #3808]
   27ae8:	ldr	w8, [x8]
   27aec:	cmp	w8, #0x2
   27af0:	b.cc	27b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>  // b.lo, b.ul, b.last
   27af4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27af8:	add	x0, x0, #0x887
   27afc:	mov	x1, x21
   27b00:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27b04:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27b08:	ldr	x20, [x20, #3920]
   27b0c:	mov	w1, #0x4018                	// #16408
   27b10:	mov	x0, x20
   27b14:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   27b18:	mov	x1, x21
   27b1c:	mov	x2, x20
   27b20:	mov	x19, x0
   27b24:	bl	26360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>
   27b28:	cbnz	x19, 27ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>
   27b2c:	b	27994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0c>
   27b30:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27b34:	ldr	x8, [x8, #3808]
   27b38:	ldr	w8, [x8]
   27b3c:	cmp	w8, #0x2
   27b40:	b.cc	27990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>  // b.lo, b.ul, b.last
   27b44:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27b48:	add	x0, x0, #0x84a
   27b4c:	b	2798c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d04>
   27b50:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27b54:	ldr	x8, [x8, #3808]
   27b58:	ldr	w8, [x8]
   27b5c:	cmp	w8, #0x2
   27b60:	b.cc	27b74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.lo, b.ul, b.last
   27b64:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27b68:	add	x0, x0, #0x8f0
   27b6c:	mov	x1, x21
   27b70:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27b74:	mov	w1, #0x38                  	// #56
   27b78:	mov	x0, x20
   27b7c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   27b80:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27b84:	add	x8, x8, #0x980
   27b88:	mov	x19, x0
   27b8c:	stp	x21, x20, [x0, #16]
   27b90:	stp	xzr, xzr, [x0, #40]
   27b94:	stp	x8, xzr, [x0]
   27b98:	str	xzr, [x0, #32]!
   27b9c:	mov	w1, #0x10                  	// #16
   27ba0:	bl	27ec8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   27ba4:	cbz	x19, 27994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0c>
   27ba8:	str	xzr, [x19, #8]
   27bac:	mov	w21, #0x1                   	// #1
   27bb0:	adrp	x0, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27bb4:	ldr	x0, [x0, #3920]
   27bb8:	mov	w1, #0xf0                  	// #240
   27bbc:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   27bc0:	add	x1, sp, #0x8
   27bc4:	mov	x20, x0
   27bc8:	stp	x21, x19, [sp, #8]
   27bcc:	str	x19, [sp, #24]
   27bd0:	bl	25794 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb0c>
   27bd4:	mov	x0, x20
   27bd8:	ldp	x20, x19, [sp, #64]
   27bdc:	ldp	x22, x21, [sp, #48]
   27be0:	ldr	x30, [sp, #32]
   27be4:	add	sp, sp, #0x50
   27be8:	ret
   27bec:	ldrb	w8, [x22, #16]
   27bf0:	cbz	w8, 27990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>
   27bf4:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   27bf8:	add	x0, x0, #0x6c1
   27bfc:	bl	16444 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2328>
   27c00:	mov	x21, x0
   27c04:	cbz	x0, 27c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa0>
   27c08:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27c0c:	ldr	x8, [x8, #3808]
   27c10:	ldr	w8, [x8]
   27c14:	cmp	w8, #0x2
   27c18:	b.cc	27b74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.lo, b.ul, b.last
   27c1c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c20:	add	x0, x0, #0x9d7
   27c24:	b	27b6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee4>
   27c28:	mov	x19, xzr
   27c2c:	b	27bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f28>
   27c30:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c34:	add	x0, x0, #0x8be
   27c38:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27c3c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   27c40:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c44:	add	x0, x0, #0x91c
   27c48:	mov	x1, x21
   27c4c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   27c50:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   27c54:	str	x30, [sp, #-16]!
   27c58:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   27c5c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c60:	add	x1, x1, #0xa46
   27c64:	mov	x0, xzr
   27c68:	bl	6ae0 <dlsym@plt>
   27c6c:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   27c70:	str	x0, [x8, #3192]
   27c74:	ldr	x30, [sp], #16
   27c78:	b	6b20 <dlerror@plt>
   27c7c:	str	x30, [sp, #-16]!
   27c80:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c84:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27c88:	add	x0, x0, #0x7ec
   27c8c:	add	x2, x2, #0x690
   27c90:	mov	w1, #0x5c                  	// #92
   27c94:	mov	x3, xzr
   27c98:	mov	x4, xzr
   27c9c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27ca0:	str	x30, [sp, #-16]!
   27ca4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27ca8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27cac:	add	x0, x0, #0x7ec
   27cb0:	add	x2, x2, #0x690
   27cb4:	mov	w1, #0x62                  	// #98
   27cb8:	mov	x3, xzr
   27cbc:	mov	x4, xzr
   27cc0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27cc4:	stp	x30, x19, [sp, #-16]!
   27cc8:	mov	x19, x1
   27ccc:	bl	27080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f8>
   27cd0:	tbz	w0, #0, 27d00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3078>
   27cd4:	ldrb	w8, [x19]
   27cd8:	cbz	w8, 27cf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x306c>
   27cdc:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27ce0:	add	x0, x19, #0x1
   27ce4:	add	x1, x1, #0xa6e
   27ce8:	bl	19254 <__sanitizer_set_report_fd@@Base+0x2c10>
   27cec:	cbz	x0, 27d0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3084>
   27cf0:	strb	wzr, [x0]
   27cf4:	mov	w0, #0x1                   	// #1
   27cf8:	ldp	x30, x19, [sp], #16
   27cfc:	ret
   27d00:	mov	w0, wzr
   27d04:	ldp	x30, x19, [sp], #16
   27d08:	ret
   27d0c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27d10:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27d14:	add	x0, x0, #0x62b
   27d18:	add	x2, x2, #0xa55
   27d1c:	mov	w1, #0xeb                  	// #235
   27d20:	mov	x3, xzr
   27d24:	mov	x4, xzr
   27d28:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27d2c:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   27d30:	add	x8, x8, #0xa68
   27d34:	stp	x1, x8, [x2]
   27d38:	ldr	x8, [x0, #16424]
   27d3c:	stp	x8, xzr, [x2, #16]
   27d40:	ret
   27d44:	stp	x30, x21, [sp, #-32]!
   27d48:	stp	x20, x19, [sp, #16]
   27d4c:	ldp	x8, x1, [x2, #16]
   27d50:	add	x20, x0, #0x10
   27d54:	mov	x19, x2
   27d58:	mov	w3, #0x4000                	// #16384
   27d5c:	mov	x0, x8
   27d60:	mov	x2, x20
   27d64:	bl	6b90 <__sanitizer_symbolize_code@plt>
   27d68:	mov	w21, w0
   27d6c:	tbz	w0, #0, 27d7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30f4>
   27d70:	mov	x0, x20
   27d74:	mov	x1, x19
   27d78:	bl	26414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   27d7c:	ldp	x20, x19, [sp, #16]
   27d80:	and	w0, w21, #0x1
   27d84:	ldp	x30, x21, [sp], #32
   27d88:	ret
   27d8c:	str	x30, [sp, #-48]!
   27d90:	stp	x22, x21, [sp, #16]
   27d94:	stp	x20, x19, [sp, #32]
   27d98:	mov	x20, x1
   27d9c:	ldp	x8, x1, [x2]
   27da0:	add	x22, x0, #0x10
   27da4:	mov	x19, x2
   27da8:	mov	w3, #0x4000                	// #16384
   27dac:	mov	x0, x8
   27db0:	mov	x2, x22
   27db4:	bl	6b00 <__sanitizer_symbolize_data@plt>
   27db8:	mov	w21, w0
   27dbc:	tbz	w0, #0, 27de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3158>
   27dc0:	mov	x0, x22
   27dc4:	mov	x1, x19
   27dc8:	bl	26700 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   27dcc:	ldr	x8, [x19, #8]
   27dd0:	ldr	x9, [x19, #48]
   27dd4:	sub	x8, x20, x8
   27dd8:	add	x8, x8, x9
   27ddc:	str	x8, [x19, #48]
   27de0:	and	w0, w21, #0x1
   27de4:	ldp	x20, x19, [sp, #32]
   27de8:	ldp	x22, x21, [sp, #16]
   27dec:	ldr	x30, [sp], #48
   27df0:	ret
   27df4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27df8:	ldr	x8, [x8, #3832]
   27dfc:	cbz	x8, 27e0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3184>
   27e00:	str	x30, [sp, #-16]!
   27e04:	bl	6bf0 <__sanitizer_symbolize_flush@plt>
   27e08:	ldr	x30, [sp], #16
   27e0c:	ret
   27e10:	stp	x30, x21, [sp, #-32]!
   27e14:	stp	x20, x19, [sp, #16]
   27e18:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27e1c:	ldr	x8, [x8, #3688]
   27e20:	mov	x19, x1
   27e24:	cbz	x8, 27e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
   27e28:	mov	w20, #0x400                 	// #1024
   27e2c:	mov	x0, x20
   27e30:	mov	x1, xzr
   27e34:	mov	x2, xzr
   27e38:	bl	11a50 <_ZdaPvRKSt9nothrow_t@@Base+0x27c>
   27e3c:	mov	x21, x0
   27e40:	mov	x0, x19
   27e44:	mov	x1, x21
   27e48:	mov	w2, w20
   27e4c:	bl	6a90 <__sanitizer_symbolize_demangle@plt>
   27e50:	sxtw	x8, w0
   27e54:	cmp	x20, x8
   27e58:	b.cs	27e84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31fc>  // b.hs, b.nlast
   27e5c:	mov	x0, x21
   27e60:	mov	x1, xzr
   27e64:	add	x20, x8, #0x1
   27e68:	bl	11d34 <_ZdaPvRKSt9nothrow_t@@Base+0x560>
   27e6c:	cmp	x20, #0x20, lsl #12
   27e70:	b.ls	27e2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a4>  // b.plast
   27e74:	mov	x0, x19
   27e78:	ldp	x20, x19, [sp, #16]
   27e7c:	ldp	x30, x21, [sp], #32
   27e80:	ret
   27e84:	mov	x19, x21
   27e88:	mov	x0, x19
   27e8c:	ldp	x20, x19, [sp, #16]
   27e90:	ldp	x30, x21, [sp], #32
   27e94:	ret
   27e98:	stp	x30, x19, [sp, #-16]!
   27e9c:	mov	x19, x2
   27ea0:	ldp	x1, x2, [x2, #16]
   27ea4:	bl	27fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3324>
   27ea8:	cbz	x0, 27eb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3230>
   27eac:	mov	x1, x19
   27eb0:	bl	26414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   27eb4:	mov	w0, #0x1                   	// #1
   27eb8:	ldp	x30, x19, [sp], #16
   27ebc:	ret
   27ec0:	mov	w0, wzr
   27ec4:	ret
   27ec8:	stp	x30, x21, [sp, #-32]!
   27ecc:	stp	x20, x19, [sp, #16]
   27ed0:	cbz	x1, 27f60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d8>
   27ed4:	ldr	x3, [x0, #16]
   27ed8:	mov	x20, x1
   27edc:	mov	x19, x0
   27ee0:	cmp	x3, x1
   27ee4:	b.hi	27f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f8>  // b.pmore
   27ee8:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   27eec:	ldr	x21, [x21, #4016]
   27ef0:	ldr	x0, [x21]
   27ef4:	cbnz	x0, 27f00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3278>
   27ef8:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   27efc:	str	x0, [x21]
   27f00:	sub	x8, x0, #0x1
   27f04:	tst	x0, x8
   27f08:	b.ne	27f9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3314>  // b.any
   27f0c:	lsl	x8, x20, #3
   27f10:	add	x8, x8, x0
   27f14:	sub	x8, x8, #0x1
   27f18:	neg	x9, x0
   27f1c:	and	x20, x8, x9
   27f20:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   27f24:	add	x1, x1, #0x950
   27f28:	mov	x0, x20
   27f2c:	mov	w2, wzr
   27f30:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   27f34:	ldr	x8, [x19, #16]
   27f38:	ldr	x1, [x19]
   27f3c:	mov	x21, x0
   27f40:	lsl	x2, x8, #3
   27f44:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   27f48:	ldp	x0, x1, [x19]
   27f4c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   27f50:	stp	x21, x20, [x19]
   27f54:	ldp	x20, x19, [sp, #16]
   27f58:	ldp	x30, x21, [sp], #32
   27f5c:	ret
   27f60:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   27f64:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   27f68:	add	x0, x0, #0xb2f
   27f6c:	add	x2, x2, #0x919
   27f70:	mov	w1, #0x20b                 	// #523
   27f74:	mov	x3, xzr
   27f78:	mov	x4, xzr
   27f7c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27f80:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   27f84:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   27f88:	add	x0, x0, #0xb2f
   27f8c:	add	x2, x2, #0x932
   27f90:	mov	w1, #0x20c                 	// #524
   27f94:	mov	x4, x20
   27f98:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   27f9c:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   27fa0:	add	x0, x0, #0x20f
   27fa4:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   27fa8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   27fac:	sub	sp, sp, #0x80
   27fb0:	stp	x30, x23, [sp, #80]
   27fb4:	stp	x22, x21, [sp, #96]
   27fb8:	stp	x20, x19, [sp, #112]
   27fbc:	str	xzr, [sp, #72]
   27fc0:	ldr	x8, [x0, #48]
   27fc4:	mov	x19, x2
   27fc8:	mov	x20, x1
   27fcc:	mov	x22, x0
   27fd0:	add	x21, x0, #0x20
   27fd4:	cbz	x8, 28024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x339c>
   27fd8:	mov	x23, xzr
   27fdc:	ldr	x8, [x21]
   27fe0:	mov	x0, x20
   27fe4:	ldr	x8, [x8, x23, lsl #3]
   27fe8:	ldr	x1, [x8, #16424]
   27fec:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   27ff0:	cbz	w0, 28008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3380>
   27ff4:	ldr	x8, [x22, #48]
   27ff8:	add	x23, x23, #0x1
   27ffc:	cmp	x23, x8
   28000:	b.cc	27fdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3354>  // b.lo, b.ul, b.last
   28004:	b	28024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x339c>
   28008:	ldr	x4, [x22, #48]
   2800c:	cmp	x4, x23
   28010:	b.ls	280d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>  // b.plast
   28014:	ldr	x8, [x21]
   28018:	ldr	x8, [x8, x23, lsl #3]
   2801c:	str	x8, [sp, #72]
   28020:	cbnz	x8, 2806c <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e4>
   28024:	ldr	x0, [x22, #24]
   28028:	mov	w1, #0x4030                	// #16432
   2802c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   28030:	ldr	x1, [x22, #16]
   28034:	mov	w2, wzr
   28038:	mov	x22, x0
   2803c:	bl	26e94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220c>
   28040:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28044:	add	x8, x8, #0x918
   28048:	mov	x0, x20
   2804c:	str	x8, [x22]
   28050:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   28054:	str	x0, [x22, #16424]
   28058:	add	x1, sp, #0x48
   2805c:	mov	x0, x21
   28060:	str	x22, [sp, #72]
   28064:	bl	280f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x346c>
   28068:	ldr	x8, [sp, #72]
   2806c:	ldr	x1, [x8, #16424]
   28070:	mov	x0, x20
   28074:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28078:	cbnz	w0, 280b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3430>
   2807c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28080:	add	x2, x2, #0xa39
   28084:	add	x0, sp, #0x8
   28088:	mov	w1, #0x40                  	// #64
   2808c:	mov	x4, #0xffffffffffffffff    	// #-1
   28090:	mov	x3, x19
   28094:	bl	1cb70 <__sanitizer_on_print@@Base+0x120>
   28098:	ldr	x0, [sp, #72]
   2809c:	add	x1, sp, #0x8
   280a0:	bl	26d04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>
   280a4:	ldp	x20, x19, [sp, #112]
   280a8:	ldp	x22, x21, [sp, #96]
   280ac:	ldp	x30, x23, [sp, #80]
   280b0:	add	sp, sp, #0x80
   280b4:	ret
   280b8:	sxtw	x4, w0
   280bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   280c0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   280c4:	add	x0, x0, #0x62b
   280c8:	add	x2, x2, #0x9f5
   280cc:	mov	w1, #0x129                 	// #297
   280d0:	mov	x3, xzr
   280d4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   280d8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   280dc:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   280e0:	add	x0, x0, #0xb2f
   280e4:	add	x2, x2, #0x1eb
   280e8:	mov	w1, #0x1c5                 	// #453
   280ec:	mov	x3, x23
   280f0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   280f4:	str	x30, [sp, #-32]!
   280f8:	stp	x20, x19, [sp, #16]
   280fc:	ldp	x8, x3, [x0, #8]
   28100:	lsr	x4, x8, #3
   28104:	cmp	x3, x4
   28108:	b.hi	28190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>  // b.pmore
   2810c:	mov	x19, x0
   28110:	mov	x20, x1
   28114:	b.ne	2816c <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e4>  // b.any
   28118:	adds	x3, x3, #0x1
   2811c:	b.cs	281a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3520>  // b.hs, b.nlast
   28120:	sub	x8, x3, #0x1
   28124:	tst	x3, x8
   28128:	b.ne	28134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34ac>  // b.any
   2812c:	mov	x8, x3
   28130:	b	2815c <__sanitizer_get_module_and_offset_for_pc@@Base+0x34d4>
   28134:	clz	x8, x3
   28138:	eor	x9, x8, #0x3f
   2813c:	mov	w8, #0x2                   	// #2
   28140:	lsl	x8, x8, x9
   28144:	cmp	x8, x3
   28148:	b.ls	281c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3540>  // b.plast
   2814c:	mov	w10, #0x1                   	// #1
   28150:	lsl	x4, x10, x9
   28154:	cmp	x4, x3
   28158:	b.cs	281e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>  // b.hs, b.nlast
   2815c:	mov	x0, x19
   28160:	mov	x1, x8
   28164:	bl	27ec8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   28168:	ldr	x3, [x19, #16]
   2816c:	add	x9, x3, #0x1
   28170:	ldr	x8, [x19]
   28174:	str	x9, [x19, #16]
   28178:	mov	x1, x20
   2817c:	ldp	x20, x19, [sp, #16]
   28180:	add	x0, x8, x3, lsl #3
   28184:	mov	w2, #0x8                   	// #8
   28188:	ldr	x30, [sp], #32
   2818c:	b	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   28190:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28194:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   28198:	add	x0, x0, #0xb2f
   2819c:	add	x2, x2, #0x41
   281a0:	mov	w1, #0x1cd                 	// #461
   281a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   281a8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   281ac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   281b0:	add	x0, x0, #0xb2f
   281b4:	add	x2, x2, #0x5d
   281b8:	mov	w1, #0x186                 	// #390
   281bc:	mov	x3, xzr
   281c0:	mov	x4, xzr
   281c4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   281c8:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   281cc:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   281d0:	add	x0, x0, #0xb2f
   281d4:	add	x2, x2, #0x156
   281d8:	mov	w1, #0x18a                 	// #394
   281dc:	mov	x4, x8
   281e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   281e4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   281e8:	adrp	x2, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   281ec:	add	x0, x0, #0xb2f
   281f0:	add	x2, x2, #0x178
   281f4:	mov	w1, #0x18b                 	// #395
   281f8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   281fc:	sub	sp, sp, #0x50
   28200:	str	x30, [sp, #32]
   28204:	stp	x22, x21, [sp, #48]
   28208:	stp	x20, x19, [sp, #64]
   2820c:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28210:	ldr	x22, [x22, #4056]
   28214:	ldrb	w8, [x22, #60]
   28218:	cbz	w8, 282e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3658>
   2821c:	mov	x20, x1
   28220:	mov	x21, x0
   28224:	mov	x0, sp
   28228:	mov	w1, #0x400                 	// #1024
   2822c:	mov	x19, x2
   28230:	stp	xzr, xzr, [sp, #8]
   28234:	str	xzr, [sp]
   28238:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   2823c:	ldr	x8, [sp, #16]
   28240:	cmp	x8, #0x3ff
   28244:	b.hi	2827c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f4>  // b.pmore
   28248:	ldr	x9, [sp, #8]
   2824c:	cmp	x9, #0x3ff
   28250:	b.hi	28264 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35dc>  // b.pmore
   28254:	mov	x0, sp
   28258:	mov	w1, #0x400                 	// #1024
   2825c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   28260:	ldr	x8, [sp, #16]
   28264:	ldr	x9, [sp]
   28268:	mov	w10, #0x400                 	// #1024
   2826c:	sub	x2, x10, x8
   28270:	mov	w1, wzr
   28274:	add	x0, x9, x8
   28278:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2827c:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28280:	ldr	q0, [x8, #3632]
   28284:	ldr	x8, [sp]
   28288:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2828c:	add	x1, x1, #0xd32
   28290:	mov	x0, sp
   28294:	mov	x2, x21
   28298:	str	q0, [sp, #16]
   2829c:	strb	wzr, [x8]
   282a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   282a4:	ldrb	w4, [x22, #189]
   282a8:	ldr	x5, [x22, #24]
   282ac:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   282b0:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   282b4:	add	x1, x1, #0xa77
   282b8:	add	x6, x6, #0xcf
   282bc:	mov	x0, sp
   282c0:	mov	w2, wzr
   282c4:	mov	x3, x20
   282c8:	bl	24d0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   282cc:	ldr	x0, [sp]
   282d0:	mov	x1, x19
   282d4:	bl	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   282d8:	ldp	x0, x1, [sp]
   282dc:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   282e0:	ldp	x20, x19, [sp, #64]
   282e4:	ldp	x22, x21, [sp, #48]
   282e8:	ldr	x30, [sp, #32]
   282ec:	add	sp, sp, #0x50
   282f0:	ret
   282f4:	str	x30, [sp, #-32]!
   282f8:	stp	x20, x19, [sp, #16]
   282fc:	ldr	x19, [x0]
   28300:	mov	x20, x0
   28304:	mov	w8, #0x1                   	// #1
   28308:	ldaxrb	w9, [x19]
   2830c:	stlxrb	w10, w8, [x19]
   28310:	cbnz	w10, 28308 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3680>
   28314:	cbz	w9, 28320 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   28318:	mov	x0, x19
   2831c:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   28320:	mov	x0, x20
   28324:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   28328:	ldr	w0, [x20, #8]
   2832c:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   28330:	dmb	ish
   28334:	strb	wzr, [x19]
   28338:	ldp	x20, x19, [sp, #16]
   2833c:	and	w0, w0, #0x1
   28340:	ldr	x30, [sp], #32
   28344:	ret
   28348:	str	x30, [sp, #-32]!
   2834c:	stp	x20, x19, [sp, #16]
   28350:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28354:	ldr	x8, [x8, #4056]
   28358:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2835c:	add	x1, x1, #0xa7d
   28360:	ldr	x19, [x8, #112]
   28364:	mov	x0, x19
   28368:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2836c:	cbz	w0, 28394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x370c>
   28370:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   28374:	add	x1, x1, #0x4c8
   28378:	mov	x0, x19
   2837c:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28380:	cbz	w0, 283a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x371c>
   28384:	mov	w0, wzr
   28388:	ldp	x20, x19, [sp, #16]
   2838c:	ldr	x30, [sp], #32
   28390:	ret
   28394:	mov	w0, #0x1                   	// #1
   28398:	ldp	x20, x19, [sp, #16]
   2839c:	ldr	x30, [sp], #32
   283a0:	ret
   283a4:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   283a8:	ldr	x20, [x20, #3928]
   283ac:	mov	w8, #0x1                   	// #1
   283b0:	ldr	x19, [x20]
   283b4:	ldaxrb	w9, [x19]
   283b8:	stlxrb	w10, w8, [x19]
   283bc:	cbnz	w10, 283b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x372c>
   283c0:	cbz	w9, 283cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3744>
   283c4:	mov	x0, x19
   283c8:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   283cc:	mov	x0, x20
   283d0:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   283d4:	ldr	w0, [x20, #8]
   283d8:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   283dc:	dmb	ish
   283e0:	strb	wzr, [x19]
   283e4:	and	w0, w0, #0x1
   283e8:	ldp	x20, x19, [sp, #16]
   283ec:	ldr	x30, [sp], #32
   283f0:	ret
   283f4:	stp	x30, x21, [sp, #-32]!
   283f8:	stp	x20, x19, [sp, #16]
   283fc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28400:	ldr	x8, [x8, #4056]
   28404:	ldrb	w8, [x8, #60]
   28408:	cbz	w8, 28458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37d0>
   2840c:	ldr	w8, [x1, #8]
   28410:	mov	x20, x0
   28414:	cbz	w8, 28464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   28418:	ldr	x8, [x1]
   2841c:	mov	x19, x2
   28420:	ldr	x8, [x8]
   28424:	sub	x21, x8, #0x4
   28428:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2842c:	mov	x1, x21
   28430:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   28434:	mov	x21, x0
   28438:	add	x1, x0, #0x8
   2843c:	mov	x0, x20
   28440:	mov	x2, x19
   28444:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   28448:	ldp	x20, x19, [sp, #16]
   2844c:	mov	x0, x21
   28450:	ldp	x30, x21, [sp], #32
   28454:	b	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   28458:	ldp	x20, x19, [sp, #16]
   2845c:	ldp	x30, x21, [sp], #32
   28460:	ret
   28464:	mov	x0, x20
   28468:	ldp	x20, x19, [sp, #16]
   2846c:	mov	x1, xzr
   28470:	ldp	x30, x21, [sp], #32
   28474:	b	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   28478:	mvn	w8, w0
   2847c:	tst	w8, #0x6
   28480:	b.ne	286e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a60>  // b.any
   28484:	sub	sp, sp, #0x60
   28488:	stp	x29, x30, [sp, #48]
   2848c:	stp	x22, x21, [sp, #64]
   28490:	stp	x20, x19, [sp, #80]
   28494:	add	x29, sp, #0x30
   28498:	mov	x19, x30
   2849c:	bl	28ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   284a0:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   284a4:	ldr	x22, [x22, #4056]
   284a8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   284ac:	add	x1, x1, #0xa7d
   284b0:	ldr	x20, [x22, #112]
   284b4:	mov	x0, x20
   284b8:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   284bc:	cbz	w0, 284dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3854>
   284c0:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   284c4:	add	x1, x1, #0x4c8
   284c8:	mov	x0, x20
   284cc:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   284d0:	cbz	w0, 284e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x385c>
   284d4:	mov	w21, wzr
   284d8:	b	28528 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   284dc:	mov	w21, #0x1                   	// #1
   284e0:	b	28528 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   284e4:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   284e8:	ldr	x21, [x21, #3928]
   284ec:	mov	w8, #0x1                   	// #1
   284f0:	ldr	x20, [x21]
   284f4:	ldaxrb	w9, [x20]
   284f8:	stlxrb	w10, w8, [x20]
   284fc:	cbnz	w10, 284f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x386c>
   28500:	cbz	w9, 2850c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3884>
   28504:	mov	x0, x20
   28508:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   2850c:	mov	x0, x21
   28510:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   28514:	ldr	w0, [x21, #8]
   28518:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   2851c:	dmb	ish
   28520:	strb	wzr, [x20]
   28524:	and	w21, w0, #0x1
   28528:	add	x0, sp, #0x18
   2852c:	mov	w1, #0x1                   	// #1
   28530:	stp	xzr, xzr, [sp, #32]
   28534:	str	xzr, [sp, #24]
   28538:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   2853c:	ldr	x8, [sp, #40]
   28540:	cbnz	x8, 28588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   28544:	ldr	x8, [sp, #32]
   28548:	cmp	x8, #0x817
   2854c:	b.hi	28564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38dc>  // b.pmore
   28550:	add	x0, sp, #0x18
   28554:	mov	w1, #0x1                   	// #1
   28558:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   2855c:	ldr	x8, [sp, #40]
   28560:	b	28568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38e0>
   28564:	mov	x8, xzr
   28568:	ldr	x9, [sp, #24]
   2856c:	mov	w11, #0x1                   	// #1
   28570:	mov	w10, #0x818                 	// #2072
   28574:	sub	x11, x11, x8
   28578:	madd	x0, x8, x10, x9
   2857c:	mul	x2, x11, x10
   28580:	mov	w1, wzr
   28584:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   28588:	ldr	x20, [sp, #24]
   2858c:	mov	w8, #0x1                   	// #1
   28590:	str	x8, [sp, #40]
   28594:	add	x8, x20, #0x10
   28598:	stp	x8, xzr, [x20]
   2859c:	str	xzr, [x20, #2064]
   285a0:	ldrb	w8, [x22, #33]
   285a4:	stp	xzr, xzr, [sp, #8]
   285a8:	cbz	w8, 285dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3954>
   285ac:	add	x1, sp, #0x10
   285b0:	add	x2, sp, #0x8
   285b4:	mov	w0, wzr
   285b8:	bl	206dc <__sanitizer_sandbox_on_notify@@Base+0x5c>
   285bc:	ldp	x6, x5, [sp, #8]
   285c0:	mov	w1, #0x100                 	// #256
   285c4:	mov	w7, #0x1                   	// #1
   285c8:	mov	x0, x20
   285cc:	mov	x2, x19
   285d0:	mov	x3, x29
   285d4:	mov	x4, xzr
   285d8:	b	285fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3974>
   285dc:	mov	w1, #0x100                 	// #256
   285e0:	mov	x0, x20
   285e4:	mov	x2, x19
   285e8:	mov	x3, xzr
   285ec:	mov	x4, xzr
   285f0:	mov	x5, xzr
   285f4:	mov	x6, xzr
   285f8:	mov	w7, wzr
   285fc:	bl	248c8 <__sanitizer_cov_pcs_init@@Base+0x1694>
   28600:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28604:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28608:	add	x8, x8, #0x23d
   2860c:	add	x9, x9, #0xcf
   28610:	cmp	w21, #0x0
   28614:	adrp	x19, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   28618:	csel	x1, x9, x8, eq  // eq = none
   2861c:	add	x19, x19, #0xba0
   28620:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28624:	add	x8, x8, #0x207
   28628:	mov	x0, x19
   2862c:	csel	x21, x9, x8, eq  // eq = none
   28630:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   28634:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28638:	ldr	x8, [x8, #4024]
   2863c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28640:	add	x0, x0, #0xa84
   28644:	ldr	x1, [x8]
   28648:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   2864c:	mov	x0, x19
   28650:	mov	x1, x21
   28654:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   28658:	mov	x0, x20
   2865c:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   28660:	ldrb	w8, [x22, #60]
   28664:	cbz	w8, 286bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a34>
   28668:	ldr	w8, [x20, #8]
   2866c:	cbz	w8, 286ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a24>
   28670:	ldr	x8, [x20]
   28674:	ldr	x8, [x8]
   28678:	sub	x19, x8, #0x4
   2867c:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   28680:	mov	x1, x19
   28684:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   28688:	mov	x19, x0
   2868c:	add	x1, x0, #0x8
   28690:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28694:	add	x0, x0, #0xab1
   28698:	mov	x2, xzr
   2869c:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   286a0:	mov	x0, x19
   286a4:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   286a8:	b	286bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a34>
   286ac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   286b0:	add	x0, x0, #0xab1
   286b4:	mov	x1, xzr
   286b8:	bl	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   286bc:	ldp	x0, x1, [sp, #24]
   286c0:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   286c4:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   286c8:	add	x8, x8, #0xc80
   286cc:	dmb	ish
   286d0:	strb	wzr, [x8]
   286d4:	str	xzr, [x8, #8]
   286d8:	ldp	x20, x19, [sp, #80]
   286dc:	ldp	x22, x21, [sp, #64]
   286e0:	ldp	x29, x30, [sp, #48]
   286e4:	add	sp, sp, #0x60
   286e8:	ret
   286ec:	stp	x30, x19, [sp, #-16]!
   286f0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   286f4:	ldr	x8, [x8, #4024]
   286f8:	ldr	x19, [x8]
   286fc:	mov	x0, x19
   28700:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   28704:	mov	x1, x0
   28708:	mov	x0, x19
   2870c:	bl	15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d54>
   28710:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28714:	add	x0, x0, #0xd36
   28718:	mov	w1, #0xe                   	// #14
   2871c:	ldp	x30, x19, [sp], #16
   28720:	b	15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d54>
   28724:	sub	sp, sp, #0xe0
   28728:	stp	x29, x30, [sp, #128]
   2872c:	stp	x28, x27, [sp, #144]
   28730:	stp	x26, x25, [sp, #160]
   28734:	stp	x24, x23, [sp, #176]
   28738:	stp	x22, x21, [sp, #192]
   2873c:	stp	x20, x19, [sp, #208]
   28740:	mov	x25, x3
   28744:	mov	x21, x2
   28748:	mov	w23, w1
   2874c:	mov	x19, x0
   28750:	bl	21674 <__sanitizer_sandbox_on_notify@@Base+0xff4>
   28754:	adrp	x29, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28758:	ldr	x29, [x29, #4056]
   2875c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28760:	mov	w24, w0
   28764:	add	x1, x1, #0xa7d
   28768:	ldr	x20, [x29, #112]
   2876c:	mov	x0, x20
   28770:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28774:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28778:	ldr	x26, [x26, #4024]
   2877c:	tbz	w24, #0, 287f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b68>
   28780:	cbz	w0, 287dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b54>
   28784:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   28788:	add	x1, x1, #0x4c8
   2878c:	mov	x0, x20
   28790:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28794:	cbnz	w0, 28810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b88>
   28798:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2879c:	ldr	x24, [x24, #3928]
   287a0:	mov	w8, #0x1                   	// #1
   287a4:	ldr	x20, [x24]
   287a8:	ldaxrb	w9, [x20]
   287ac:	stlxrb	w10, w8, [x20]
   287b0:	cbnz	w10, 287a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b20>
   287b4:	cbz	w9, 287c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b38>
   287b8:	mov	x0, x20
   287bc:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   287c0:	mov	x0, x24
   287c4:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   287c8:	ldr	w0, [x24, #8]
   287cc:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   287d0:	dmb	ish
   287d4:	strb	wzr, [x20]
   287d8:	tbz	w0, #0, 28810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b88>
   287dc:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   287e0:	adrp	x20, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   287e4:	add	x1, x1, #0x23d
   287e8:	add	x20, x20, #0x207
   287ec:	b	2881c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>
   287f0:	cbz	w0, 28898 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c10>
   287f4:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   287f8:	add	x1, x1, #0x4c8
   287fc:	mov	x0, x20
   28800:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28804:	cbz	w0, 288a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   28808:	mov	w20, wzr
   2880c:	b	288e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   28810:	adrp	x20, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28814:	add	x20, x20, #0xcf
   28818:	mov	x1, x20
   2881c:	adrp	x24, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   28820:	add	x24, x24, #0xba0
   28824:	mov	x0, x24
   28828:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   2882c:	ldr	x1, [x26]
   28830:	ldp	x3, x4, [x19, #16]
   28834:	ldp	x6, x5, [x19, #32]
   28838:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2883c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28840:	add	x0, x0, #0xac9
   28844:	add	x2, x2, #0xd71
   28848:	mov	w7, w23
   2884c:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28850:	mov	x0, x24
   28854:	mov	x1, x20
   28858:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   2885c:	add	x0, sp, #0x10
   28860:	mov	w1, #0x1                   	// #1
   28864:	stp	xzr, xzr, [sp, #24]
   28868:	str	xzr, [sp, #16]
   2886c:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   28870:	ldr	x8, [sp, #32]
   28874:	cbnz	x8, 28b1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e94>
   28878:	ldr	x8, [sp, #24]
   2887c:	cmp	x8, #0x817
   28880:	b.hi	28af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e70>  // b.pmore
   28884:	add	x0, sp, #0x10
   28888:	mov	w1, #0x1                   	// #1
   2888c:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   28890:	ldr	x8, [sp, #32]
   28894:	b	28afc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e74>
   28898:	mov	w20, #0x1                   	// #1
   2889c:	b	288e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   288a0:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   288a4:	ldr	x24, [x24, #3928]
   288a8:	mov	w8, #0x1                   	// #1
   288ac:	ldr	x20, [x24]
   288b0:	ldaxrb	w9, [x20]
   288b4:	stlxrb	w10, w8, [x20]
   288b8:	cbnz	w10, 288b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c28>
   288bc:	cbz	w9, 288c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   288c0:	mov	x0, x20
   288c4:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   288c8:	mov	x0, x24
   288cc:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   288d0:	ldr	w0, [x24, #8]
   288d4:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   288d8:	dmb	ish
   288dc:	strb	wzr, [x20]
   288e0:	and	w20, w0, #0x1
   288e4:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   288e8:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   288ec:	add	x8, x8, #0x23d
   288f0:	add	x22, x22, #0xcf
   288f4:	cmp	w20, #0x0
   288f8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   288fc:	csel	x1, x22, x8, eq  // eq = none
   28900:	add	x0, x0, #0xba0
   28904:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   28908:	mov	x0, x19
   2890c:	bl	1c230 <__sanitizer_set_report_fd@@Base+0x5bec>
   28910:	ldrb	w8, [x19, #48]
   28914:	mov	x24, x0
   28918:	cbz	w8, 28924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c9c>
   2891c:	ldrb	w8, [x19, #56]
   28920:	cbz	w8, 28948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc0>
   28924:	ldr	x1, [x26]
   28928:	ldp	x3, x4, [x19, #16]
   2892c:	ldp	x6, x5, [x19, #32]
   28930:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28934:	add	x0, x0, #0xb38
   28938:	mov	x2, x24
   2893c:	mov	w7, w23
   28940:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28944:	b	28968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ce0>
   28948:	ldr	x1, [x26]
   2894c:	ldp	x5, x4, [x19, #32]
   28950:	ldr	x3, [x19, #24]
   28954:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28958:	add	x0, x0, #0xafe
   2895c:	mov	x2, x24
   28960:	mov	w6, w23
   28964:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28968:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2896c:	add	x8, x8, #0x207
   28970:	cmp	w20, #0x0
   28974:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   28978:	csel	x1, x22, x8, eq  // eq = none
   2897c:	add	x0, x0, #0xba0
   28980:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   28984:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28988:	ldr	x20, [x20, #4016]
   2898c:	ldr	x22, [x19, #24]
   28990:	ldr	x0, [x20]
   28994:	cbz	x0, 289ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d24>
   28998:	cmp	x22, x0
   2899c:	b.cc	289bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d34>  // b.lo, b.ul, b.last
   289a0:	ldrb	w8, [x19, #48]
   289a4:	cbnz	w8, 289d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d48>
   289a8:	b	28a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>
   289ac:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   289b0:	str	x0, [x20]
   289b4:	cmp	x22, x0
   289b8:	b.cs	289a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d18>  // b.hs, b.nlast
   289bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   289c0:	add	x0, x0, #0xb75
   289c4:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   289c8:	ldrb	w8, [x19, #48]
   289cc:	cbz	w8, 28a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>
   289d0:	ldr	w8, [x19, #52]
   289d4:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   289d8:	adrp	x10, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   289dc:	add	x9, x9, #0xb98
   289e0:	add	x10, x10, #0xfd6
   289e4:	adrp	x11, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   289e8:	cmp	w8, #0x1
   289ec:	add	x11, x11, #0xfd0
   289f0:	csel	x9, x10, x9, eq  // eq = none
   289f4:	cmp	w8, #0x2
   289f8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   289fc:	csel	x1, x11, x9, eq  // eq = none
   28a00:	add	x0, x0, #0xba0
   28a04:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28a08:	ldrb	w8, [x19, #56]
   28a0c:	cbz	w8, 28a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db0>
   28a10:	ldr	x0, [x20]
   28a14:	ldr	x22, [x19, #16]
   28a18:	cbnz	x0, 28a24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d9c>
   28a1c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   28a20:	str	x0, [x20]
   28a24:	cmp	x22, x0
   28a28:	b.cs	28a44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>  // b.hs, b.nlast
   28a2c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28a30:	add	x0, x0, #0xc70
   28a34:	b	28a40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   28a38:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28a3c:	add	x0, x0, #0xbcd
   28a40:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28a44:	ldr	x22, [x19, #24]
   28a48:	add	x0, sp, #0x60
   28a4c:	mov	w1, #0x1                   	// #1
   28a50:	bl	1d404 <__sanitizer_on_print@@Base+0x9b4>
   28a54:	add	x0, sp, #0x60
   28a58:	add	x1, sp, #0x10
   28a5c:	stp	xzr, xzr, [sp, #40]
   28a60:	str	xzr, [sp, #88]
   28a64:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   28a68:	tbz	w0, #0, 28ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e2c>
   28a6c:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28a70:	add	x23, x23, #0xcbd
   28a74:	b	28a88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e00>
   28a78:	add	x0, sp, #0x60
   28a7c:	add	x1, sp, #0x10
   28a80:	bl	1dc9c <__sanitizer_on_print@@Base+0x124c>
   28a84:	tbz	w0, #0, 28ab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e2c>
   28a88:	ldr	x8, [sp, #16]
   28a8c:	cmp	x8, x22
   28a90:	b.hi	28a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>  // b.pmore
   28a94:	ldr	x8, [sp, #24]
   28a98:	cmp	x8, x22
   28a9c:	b.ls	28a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>  // b.plast
   28aa0:	ldrb	w8, [sp, #56]
   28aa4:	tbnz	w8, #2, 28a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>
   28aa8:	mov	x0, x23
   28aac:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28ab0:	b	28a78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>
   28ab4:	add	x0, sp, #0x60
   28ab8:	bl	1d60c <__sanitizer_on_print@@Base+0xbbc>
   28abc:	add	x0, sp, #0x60
   28ac0:	mov	w1, #0x1                   	// #1
   28ac4:	stp	xzr, xzr, [sp, #104]
   28ac8:	str	xzr, [sp, #96]
   28acc:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   28ad0:	ldr	x8, [sp, #112]
   28ad4:	cbnz	x8, 28bd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f4c>
   28ad8:	ldr	x8, [sp, #104]
   28adc:	cmp	x8, #0x817
   28ae0:	b.hi	28bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f28>  // b.pmore
   28ae4:	add	x0, sp, #0x60
   28ae8:	mov	w1, #0x1                   	// #1
   28aec:	bl	de60 <__hwasan_tag_mismatch4@@Base+0x288>
   28af0:	ldr	x8, [sp, #112]
   28af4:	b	28bb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f2c>
   28af8:	mov	x8, xzr
   28afc:	ldr	x9, [sp, #16]
   28b00:	mov	w11, #0x1                   	// #1
   28b04:	mov	w10, #0x818                 	// #2072
   28b08:	sub	x11, x11, x8
   28b0c:	madd	x0, x8, x10, x9
   28b10:	mul	x2, x11, x10
   28b14:	mov	w1, wzr
   28b18:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   28b1c:	ldr	x20, [sp, #16]
   28b20:	mov	w8, #0x1                   	// #1
   28b24:	str	x8, [sp, #32]
   28b28:	mov	x0, x19
   28b2c:	add	x8, x20, #0x10
   28b30:	mov	x1, x25
   28b34:	mov	x2, x20
   28b38:	stp	x8, xzr, [x20]
   28b3c:	str	xzr, [x20, #2064]
   28b40:	blr	x21
   28b44:	mov	x0, x20
   28b48:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   28b4c:	ldrb	w8, [x29, #60]
   28b50:	cbz	w8, 28ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>
   28b54:	ldr	w8, [x20, #8]
   28b58:	cbz	w8, 28b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f10>
   28b5c:	ldr	x8, [x20]
   28b60:	ldr	x8, [x8]
   28b64:	sub	x19, x8, #0x4
   28b68:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   28b6c:	mov	x1, x19
   28b70:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   28b74:	mov	x19, x0
   28b78:	add	x1, x0, #0x8
   28b7c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28b80:	add	x0, x0, #0xd71
   28b84:	mov	x2, xzr
   28b88:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   28b8c:	mov	x0, x19
   28b90:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   28b94:	b	28ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>
   28b98:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28b9c:	add	x0, x0, #0xd71
   28ba0:	mov	x1, xzr
   28ba4:	bl	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   28ba8:	ldp	x0, x1, [sp, #16]
   28bac:	b	28e54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>
   28bb0:	mov	x8, xzr
   28bb4:	ldr	x9, [sp, #96]
   28bb8:	mov	w11, #0x1                   	// #1
   28bbc:	mov	w10, #0x818                 	// #2072
   28bc0:	sub	x11, x11, x8
   28bc4:	madd	x0, x8, x10, x9
   28bc8:	mul	x2, x11, x10
   28bcc:	mov	w1, wzr
   28bd0:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   28bd4:	ldr	x23, [sp, #96]
   28bd8:	mov	w8, #0x1                   	// #1
   28bdc:	str	x8, [sp, #112]
   28be0:	mov	x0, x19
   28be4:	add	x8, x23, #0x10
   28be8:	mov	x1, x25
   28bec:	mov	x2, x23
   28bf0:	stp	x8, xzr, [x23]
   28bf4:	str	xzr, [x23, #2064]
   28bf8:	blr	x21
   28bfc:	mov	x0, x23
   28c00:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   28c04:	ldrb	w8, [x29, #240]
   28c08:	cbz	w8, 28ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4154>
   28c0c:	ldr	x0, [x20]
   28c10:	ldr	x21, [x19, #24]
   28c14:	cbnz	x0, 28c20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   28c18:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   28c1c:	str	x0, [x20]
   28c20:	cmp	x0, x21
   28c24:	b.hi	28ddc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4154>  // b.pmore
   28c28:	add	x0, sp, #0x10
   28c2c:	mov	w1, #0x400                 	// #1024
   28c30:	stp	xzr, xzr, [sp, #24]
   28c34:	str	xzr, [sp, #16]
   28c38:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   28c3c:	ldr	x8, [sp, #32]
   28c40:	cmp	x8, #0x3ff
   28c44:	b.hi	28c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff4>  // b.pmore
   28c48:	ldr	x9, [sp, #24]
   28c4c:	cmp	x9, #0x3ff
   28c50:	b.hi	28c64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fdc>  // b.pmore
   28c54:	add	x0, sp, #0x10
   28c58:	mov	w1, #0x400                 	// #1024
   28c5c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   28c60:	ldr	x8, [sp, #32]
   28c64:	ldr	x9, [sp, #16]
   28c68:	mov	w10, #0x400                 	// #1024
   28c6c:	sub	x2, x10, x8
   28c70:	mov	w1, wzr
   28c74:	add	x0, x9, x8
   28c78:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   28c7c:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28c80:	ldr	q0, [x8, #3632]
   28c84:	ldr	x8, [sp, #16]
   28c88:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28c8c:	add	x1, x1, #0xcf9
   28c90:	add	x0, sp, #0x10
   28c94:	str	q0, [sp, #32]
   28c98:	strb	wzr, [x8]
   28c9c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   28ca0:	mov	w1, #0x10                  	// #16
   28ca4:	mov	x0, x21
   28ca8:	bl	21730 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   28cac:	tbz	w0, #0, 28d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4114>
   28cb0:	stp	x19, x24, [sp]
   28cb4:	adrp	x24, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28cb8:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28cbc:	adrp	x26, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28cc0:	mov	x20, xzr
   28cc4:	add	x24, x24, #0xa7d
   28cc8:	add	x19, x19, #0xd2a
   28ccc:	add	x26, x26, #0xcf
   28cd0:	mov	w22, #0x1                   	// #1
   28cd4:	b	28d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4088>
   28cd8:	adrp	x3, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28cdc:	adrp	x6, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   28ce0:	add	x3, x3, #0x210
   28ce4:	add	x6, x6, #0x207
   28ce8:	lsr	w4, w27, #4
   28cec:	and	w5, w27, #0xf
   28cf0:	add	x0, sp, #0x10
   28cf4:	mov	x1, x19
   28cf8:	mov	x2, x26
   28cfc:	mov	x29, x28
   28d00:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   28d04:	add	x20, x20, #0x1
   28d08:	cmp	x20, #0x10
   28d0c:	b.eq	28da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>  // b.none
   28d10:	mov	x28, x29
   28d14:	ldr	x29, [x29, #112]
   28d18:	ldrb	w27, [x21, x20]
   28d1c:	mov	x1, x24
   28d20:	mov	x0, x29
   28d24:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28d28:	cbz	w0, 28cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4050>
   28d2c:	adrp	x1, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   28d30:	mov	x0, x29
   28d34:	add	x1, x1, #0x4c8
   28d38:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   28d3c:	cbnz	w0, 28d90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4108>
   28d40:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28d44:	ldr	x8, [x8, #3928]
   28d48:	ldr	x29, [x8]
   28d4c:	ldaxrb	w8, [x29]
   28d50:	stlxrb	w9, w22, [x29]
   28d54:	cbnz	w9, 28d4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x40c4>
   28d58:	mov	x25, x24
   28d5c:	cbz	w8, 28d68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40e0>
   28d60:	mov	x0, x29
   28d64:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   28d68:	adrp	x24, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28d6c:	ldr	x24, [x24, #3928]
   28d70:	mov	x0, x24
   28d74:	bl	15eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d98>
   28d78:	ldr	w0, [x24, #8]
   28d7c:	bl	21438 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   28d80:	dmb	ish
   28d84:	strb	wzr, [x29]
   28d88:	mov	x24, x25
   28d8c:	tbnz	w0, #0, 28cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4050>
   28d90:	mov	x3, x26
   28d94:	mov	x6, x26
   28d98:	b	28ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4060>
   28d9c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28da0:	add	x1, x1, #0xd1c
   28da4:	b	28dbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4134>
   28da8:	adrp	x26, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28dac:	ldr	x26, [x26, #4024]
   28db0:	ldp	x19, x24, [sp]
   28db4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28db8:	add	x1, x1, #0xce
   28dbc:	add	x0, sp, #0x10
   28dc0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   28dc4:	ldr	x1, [sp, #16]
   28dc8:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   28dcc:	add	x0, x0, #0xba0
   28dd0:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28dd4:	ldp	x0, x1, [sp, #16]
   28dd8:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   28ddc:	ldrb	w8, [x29, #241]
   28de0:	cbz	w8, 28dec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4164>
   28de4:	ldr	x0, [x19, #8]
   28de8:	bl	1ae68 <__sanitizer_set_report_fd@@Base+0x4824>
   28dec:	ldr	x1, [x26]
   28df0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28df4:	add	x0, x0, #0xc98
   28df8:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   28dfc:	ldrb	w8, [x29, #60]
   28e00:	cbz	w8, 28e50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   28e04:	ldr	w8, [x23, #8]
   28e08:	cbz	w8, 28e44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41bc>
   28e0c:	ldr	x8, [x23]
   28e10:	ldr	x8, [x8]
   28e14:	sub	x19, x8, #0x4
   28e18:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   28e1c:	mov	x1, x19
   28e20:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   28e24:	mov	x19, x0
   28e28:	add	x1, x0, #0x8
   28e2c:	mov	x0, x24
   28e30:	mov	x2, xzr
   28e34:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   28e38:	mov	x0, x19
   28e3c:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   28e40:	b	28e50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   28e44:	mov	x0, x24
   28e48:	mov	x1, xzr
   28e4c:	bl	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   28e50:	ldp	x0, x1, [sp, #96]
   28e54:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   28e58:	ldp	x20, x19, [sp, #208]
   28e5c:	ldp	x22, x21, [sp, #192]
   28e60:	ldp	x24, x23, [sp, #176]
   28e64:	ldp	x26, x25, [sp, #160]
   28e68:	ldp	x28, x27, [sp, #144]
   28e6c:	ldp	x29, x30, [sp, #128]
   28e70:	add	sp, sp, #0xe0
   28e74:	ret
   28e78:	sub	sp, sp, #0x70
   28e7c:	stp	x30, x23, [sp, #64]
   28e80:	stp	x22, x21, [sp, #80]
   28e84:	stp	x20, x19, [sp, #96]
   28e88:	mov	x19, x4
   28e8c:	mov	x20, x3
   28e90:	mov	w21, w2
   28e94:	mov	x22, x1
   28e98:	mov	x23, x0
   28e9c:	bl	286ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a64>
   28ea0:	bl	28ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   28ea4:	mov	x0, sp
   28ea8:	mov	x1, x23
   28eac:	mov	x2, x22
   28eb0:	bl	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4390>
   28eb4:	mov	x0, sp
   28eb8:	mov	w1, w21
   28ebc:	mov	x2, x20
   28ec0:	mov	x3, x19
   28ec4:	bl	28724 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a9c>
   28ec8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28ecc:	add	x0, x0, #0xabf
   28ed0:	bl	1cafc <__sanitizer_on_print@@Base+0xac>
   28ed4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   28ed8:	str	x30, [sp, #-32]!
   28edc:	stp	x20, x19, [sp, #16]
   28ee0:	bl	210e8 <__sanitizer_sandbox_on_notify@@Base+0xa68>
   28ee4:	adrp	x20, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   28ee8:	mov	x19, x0
   28eec:	add	x20, x20, #0xc88
   28ef0:	ldaxr	x8, [x20]
   28ef4:	cbnz	x8, 28f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4284>
   28ef8:	stlxr	w9, x19, [x20]
   28efc:	cbnz	w9, 28ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4268>
   28f00:	mov	w9, #0x1                   	// #1
   28f04:	tbz	w9, #0, 28f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   28f08:	b	28f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   28f0c:	clrex
   28f10:	mov	w9, wzr
   28f14:	tbz	w9, #0, 28f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   28f18:	b	28f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   28f1c:	clrex
   28f20:	mov	w9, wzr
   28f24:	tbnz	wzr, #0, 28f4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   28f28:	cmp	x8, x19
   28f2c:	b.eq	28f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4300>  // b.none
   28f30:	bl	19c08 <__sanitizer_set_report_fd@@Base+0x35c4>
   28f34:	ldaxr	x8, [x20]
   28f38:	cbnz	x8, 28f1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4294>
   28f3c:	stlxr	w9, x19, [x20]
   28f40:	cbnz	w9, 28f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42ac>
   28f44:	mov	w9, #0x1                   	// #1
   28f48:	tbz	w9, #0, 28f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   28f4c:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   28f50:	add	x8, x8, #0xc80
   28f54:	mov	w9, #0x1                   	// #1
   28f58:	ldaxrb	w10, [x8]
   28f5c:	stlxrb	w11, w9, [x8]
   28f60:	cbnz	w11, 28f58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42d0>
   28f64:	cbz	w10, 28f7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f4>
   28f68:	ldp	x20, x19, [sp, #16]
   28f6c:	adrp	x0, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   28f70:	add	x0, x0, #0xc80
   28f74:	ldr	x30, [sp], #32
   28f78:	b	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   28f7c:	ldp	x20, x19, [sp, #16]
   28f80:	ldr	x30, [sp], #32
   28f84:	ret
   28f88:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28f8c:	ldr	x8, [x8, #4024]
   28f90:	ldr	x19, [x8]
   28f94:	mov	x0, x19
   28f98:	bl	18c8c <__sanitizer_set_report_fd@@Base+0x2648>
   28f9c:	mov	x1, x0
   28fa0:	mov	x0, x19
   28fa4:	bl	15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d54>
   28fa8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   28fac:	add	x0, x0, #0xd45
   28fb0:	mov	w1, #0x2b                  	// #43
   28fb4:	bl	15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d54>
   28fb8:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   28fbc:	ldr	x8, [x8, #4056]
   28fc0:	ldr	w0, [x8, #224]
   28fc4:	bl	19c14 <__sanitizer_set_report_fd@@Base+0x35d0>
   28fc8:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   28fcc:	add	x8, x8, #0xc80
   28fd0:	dmb	ish
   28fd4:	strb	wzr, [x8]
   28fd8:	str	xzr, [x8, #8]
   28fdc:	ret
   28fe0:	str	x30, [sp, #-16]!
   28fe4:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   28fe8:	ldrb	w3, [x8, #3200]
   28fec:	cmp	x3, #0x1
   28ff0:	b.ne	28ffc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4374>  // b.any
   28ff4:	ldr	x30, [sp], #16
   28ff8:	ret
   28ffc:	adrp	x0, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   29000:	adrp	x2, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   29004:	add	x0, x0, #0x411
   29008:	add	x2, x2, #0x461
   2900c:	mov	w1, #0x2b                  	// #43
   29010:	mov	w4, #0x1                   	// #1
   29014:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29018:	stp	x30, x19, [sp, #-16]!
   2901c:	mov	x19, x0
   29020:	stp	x1, x2, [x0]
   29024:	bl	1c204 <__sanitizer_set_report_fd@@Base+0x5bc0>
   29028:	str	x0, [x19, #16]
   2902c:	mov	x0, x19
   29030:	bl	1c210 <__sanitizer_set_report_fd@@Base+0x5bcc>
   29034:	and	w8, w0, #0x1
   29038:	mov	x0, x19
   2903c:	strb	w8, [x19, #48]
   29040:	bl	1adf4 <__sanitizer_set_report_fd@@Base+0x47b0>
   29044:	str	w0, [x19, #52]
   29048:	mov	x0, x19
   2904c:	bl	1ae40 <__sanitizer_set_report_fd@@Base+0x47fc>
   29050:	and	w8, w0, #0x1
   29054:	strb	w8, [x19, #56]
   29058:	mov	x0, x19
   2905c:	ldp	x30, x19, [sp], #16
   29060:	b	1ae6c <__sanitizer_set_report_fd@@Base+0x4828>
   29064:	sub	sp, sp, #0x30
   29068:	str	x30, [sp, #16]
   2906c:	stp	x20, x19, [sp, #32]
   29070:	cmp	w2, #0x1
   29074:	b.ls	290e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4460>  // b.plast
   29078:	add	w8, w2, #0x1
   2907c:	mov	x20, x0
   29080:	str	wzr, [x0, #8]
   29084:	str	x0, [sp]
   29088:	cmp	w8, #0x100
   2908c:	mov	w8, #0x100                 	// #256
   29090:	adrp	x0, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4378>
   29094:	mov	x19, x1
   29098:	csinc	w8, w8, w2, cs  // cs = hs, nlast
   2909c:	add	x0, x0, #0x108
   290a0:	mov	x1, sp
   290a4:	str	w8, [sp, #8]
   290a8:	bl	69b0 <_Unwind_Backtrace@plt>
   290ac:	mov	x0, x20
   290b0:	mov	x1, x19
   290b4:	bl	24554 <__sanitizer_cov_pcs_init@@Base+0x1320>
   290b8:	mov	x1, x0
   290bc:	cbnz	x0, 290cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4444>
   290c0:	ldr	w8, [x20, #8]
   290c4:	cmp	w8, #0x1
   290c8:	cset	w1, hi  // hi = pmore
   290cc:	mov	x0, x20
   290d0:	bl	24478 <__sanitizer_cov_pcs_init@@Base+0x1244>
   290d4:	str	x19, [x20, #16]
   290d8:	ldp	x20, x19, [sp, #32]
   290dc:	ldr	x30, [sp, #16]
   290e0:	add	sp, sp, #0x30
   290e4:	ret
   290e8:	mov	w3, w2
   290ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   290f0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   290f4:	add	x0, x0, #0xd80
   290f8:	add	x2, x2, #0x6f
   290fc:	mov	w1, #0x7f                  	// #127
   29100:	mov	w4, #0x2                   	// #2
   29104:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29108:	stp	x30, x21, [sp, #-32]!
   2910c:	stp	x20, x19, [sp, #16]
   29110:	ldr	x8, [x1]
   29114:	ldr	w4, [x1, #8]
   29118:	ldr	w3, [x8, #8]
   2911c:	cmp	w3, w4
   29120:	b.cs	291a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4518>  // b.hs, b.nlast
   29124:	mov	x19, x1
   29128:	bl	6ca0 <_Unwind_GetIP@plt>
   2912c:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   29130:	ldr	x21, [x21, #4016]
   29134:	mov	x20, x0
   29138:	ldr	x8, [x21]
   2913c:	cbz	x8, 29158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d0>
   29140:	cmp	x20, x8
   29144:	b.cs	2916c <__sanitizer_get_module_and_offset_for_pc@@Base+0x44e4>  // b.hs, b.nlast
   29148:	mov	w0, #0x4                   	// #4
   2914c:	ldp	x20, x19, [sp, #16]
   29150:	ldp	x30, x21, [sp], #32
   29154:	ret
   29158:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   2915c:	mov	x8, x0
   29160:	str	x0, [x21]
   29164:	cmp	x20, x8
   29168:	b.cc	29148 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c0>  // b.lo, b.ul, b.last
   2916c:	ldr	x8, [x19]
   29170:	ldr	w9, [x8, #8]
   29174:	add	w10, w9, #0x1
   29178:	add	x9, x8, x9, lsl #3
   2917c:	str	w10, [x8, #8]
   29180:	str	x20, [x9, #16]
   29184:	ldr	w8, [x19, #8]
   29188:	cmp	w10, w8
   2918c:	cset	w8, eq  // eq = none
   29190:	lsl	w0, w8, #2
   29194:	ldp	x20, x19, [sp, #16]
   29198:	ldp	x30, x21, [sp], #32
   2919c:	ret
   291a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   291a4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   291a8:	add	x0, x0, #0xd80
   291ac:	add	x2, x2, #0xe27
   291b0:	mov	w1, #0x50                  	// #80
   291b4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   291b8:	sub	sp, sp, #0x60
   291bc:	str	x30, [sp, #32]
   291c0:	stp	x24, x23, [sp, #48]
   291c4:	stp	x22, x21, [sp, #64]
   291c8:	stp	x20, x19, [sp, #80]
   291cc:	cbz	x2, 2938c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4704>
   291d0:	cmp	w3, #0x1
   291d4:	mov	w21, w3
   291d8:	b.ls	293a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x471c>  // b.plast
   291dc:	adrp	x24, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   291e0:	ldr	x8, [x24, #3232]
   291e4:	mov	x19, x0
   291e8:	cbz	x8, 29254 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45cc>
   291ec:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   291f0:	ldr	x8, [x8, #3216]
   291f4:	mov	x22, x2
   291f8:	blr	x8
   291fc:	cbz	x0, 293c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x473c>
   29200:	mov	x23, x0
   29204:	add	x0, sp, #0x8
   29208:	stp	xzr, xzr, [sp, #16]
   2920c:	str	xzr, [sp, #8]
   29210:	bl	29404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x477c>
   29214:	ldr	x8, [sp, #24]
   29218:	cmp	x8, #0x100
   2921c:	b.cs	292b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x462c>  // b.hs, b.nlast
   29220:	add	x0, sp, #0x8
   29224:	bl	29404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x477c>
   29228:	ldr	x20, [sp, #8]
   2922c:	ldr	x8, [sp, #24]
   29230:	mov	w9, #0x18                  	// #24
   29234:	mov	w10, #0x100                 	// #256
   29238:	mov	w1, wzr
   2923c:	madd	x0, x8, x9, x20
   29240:	sub	x8, x10, x8
   29244:	add	x8, x8, x8, lsl #1
   29248:	lsl	x2, x8, #3
   2924c:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   29250:	b	292b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4630>
   29254:	add	w8, w3, #0x1
   29258:	cmp	w8, #0x100
   2925c:	mov	w8, #0x100                 	// #256
   29260:	adrp	x0, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4378>
   29264:	mov	x20, x1
   29268:	csinc	w8, w8, w3, cs  // cs = hs, nlast
   2926c:	add	x0, x0, #0x108
   29270:	add	x1, sp, #0x8
   29274:	str	wzr, [x19, #8]
   29278:	str	x19, [sp, #8]
   2927c:	str	w8, [sp, #16]
   29280:	bl	69b0 <_Unwind_Backtrace@plt>
   29284:	mov	x0, x19
   29288:	mov	x1, x20
   2928c:	bl	24554 <__sanitizer_cov_pcs_init@@Base+0x1320>
   29290:	mov	x1, x0
   29294:	cbnz	x0, 292a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x461c>
   29298:	ldr	w8, [x19, #8]
   2929c:	cmp	w8, #0x1
   292a0:	cset	w1, hi  // hi = pmore
   292a4:	mov	x0, x19
   292a8:	bl	24478 <__sanitizer_cov_pcs_init@@Base+0x1244>
   292ac:	str	x20, [x19, #16]
   292b0:	b	29374 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46ec>
   292b4:	ldr	x20, [sp, #8]
   292b8:	ldr	x8, [x24, #3232]
   292bc:	mov	w9, #0x100                 	// #256
   292c0:	mov	x0, xzr
   292c4:	mov	x1, x22
   292c8:	mov	x2, x23
   292cc:	mov	x3, x20
   292d0:	mov	x4, xzr
   292d4:	mov	x5, x21
   292d8:	str	x9, [sp, #24]
   292dc:	blr	x8
   292e0:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   292e4:	ldr	x8, [x8, #3224]
   292e8:	mov	x21, x0
   292ec:	mov	x0, x23
   292f0:	blr	x8
   292f4:	tbnz	x21, #63, 29368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46e0>
   292f8:	cmp	x21, #0x101
   292fc:	b.cs	293e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x475c>  // b.hs, b.nlast
   29300:	str	wzr, [x19, #8]
   29304:	cbz	x21, 29368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46e0>
   29308:	mov	x8, xzr
   2930c:	sub	x9, x21, #0x1
   29310:	add	x10, x19, #0x10
   29314:	mov	x11, x20
   29318:	ldr	x12, [x11]
   2931c:	cmp	x9, x8
   29320:	add	x12, x12, #0x2
   29324:	str	x12, [x10, x8, lsl #3]
   29328:	b.eq	29360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46d8>  // b.none
   2932c:	add	x8, x8, #0x1
   29330:	cmp	x8, #0x100
   29334:	add	x11, x11, #0x18
   29338:	b.ne	29318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4690>  // b.any
   2933c:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   29340:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   29344:	add	x0, x0, #0xb2f
   29348:	add	x2, x2, #0x1eb
   2934c:	mov	w1, #0x1c5                 	// #453
   29350:	mov	w3, #0x100                 	// #256
   29354:	mov	w4, #0x100                 	// #256
   29358:	str	w8, [x19, #8]
   2935c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29360:	add	w8, w8, #0x1
   29364:	str	w8, [x19, #8]
   29368:	ldr	x1, [sp, #16]
   2936c:	mov	x0, x20
   29370:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   29374:	ldp	x20, x19, [sp, #80]
   29378:	ldp	x22, x21, [sp, #64]
   2937c:	ldp	x24, x23, [sp, #48]
   29380:	ldr	x30, [sp, #32]
   29384:	add	sp, sp, #0x60
   29388:	ret
   2938c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29390:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29394:	add	x0, x0, #0xd80
   29398:	add	x2, x2, #0xde1
   2939c:	mov	w1, #0x98                  	// #152
   293a0:	b	293d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4750>
   293a4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293a8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293ac:	add	x0, x0, #0xd80
   293b0:	add	x2, x2, #0x6f
   293b4:	mov	w1, #0x99                  	// #153
   293b8:	mov	w4, #0x2                   	// #2
   293bc:	mov	x3, x21
   293c0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   293c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293c8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293cc:	add	x0, x0, #0xd80
   293d0:	add	x2, x2, #0xdf4
   293d4:	mov	w1, #0xa0                  	// #160
   293d8:	mov	x3, xzr
   293dc:	mov	x4, xzr
   293e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   293e4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293e8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   293ec:	add	x0, x0, #0xd80
   293f0:	add	x2, x2, #0xe03
   293f4:	mov	w1, #0xa8                  	// #168
   293f8:	mov	w4, #0x100                 	// #256
   293fc:	mov	x3, x21
   29400:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29404:	stp	x30, x21, [sp, #-32]!
   29408:	stp	x20, x19, [sp, #16]
   2940c:	ldr	x8, [x0, #8]
   29410:	lsr	x8, x8, #11
   29414:	cmp	x8, #0x2
   29418:	b.hi	29498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4810>  // b.pmore
   2941c:	ldr	x3, [x0, #16]
   29420:	mov	x19, x0
   29424:	cmp	x3, #0x101
   29428:	b.cs	294a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x481c>  // b.hs, b.nlast
   2942c:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   29430:	ldr	x20, [x20, #4016]
   29434:	ldr	x0, [x20]
   29438:	cbnz	x0, 29444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47bc>
   2943c:	bl	1a8f4 <__sanitizer_set_report_fd@@Base+0x42b0>
   29440:	str	x0, [x20]
   29444:	sub	x8, x0, #0x1
   29448:	tst	x0, x8
   2944c:	b.ne	294c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4838>  // b.any
   29450:	mov	w8, #0x17ff                	// #6143
   29454:	add	x8, x0, x8
   29458:	neg	x9, x0
   2945c:	and	x20, x8, x9
   29460:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   29464:	add	x1, x1, #0x950
   29468:	mov	x0, x20
   2946c:	mov	w2, wzr
   29470:	bl	1b2d0 <__sanitizer_set_report_fd@@Base+0x4c8c>
   29474:	ldr	x8, [x19, #16]
   29478:	ldr	x1, [x19]
   2947c:	mov	x21, x0
   29480:	add	x8, x8, x8, lsl #1
   29484:	lsl	x2, x8, #3
   29488:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   2948c:	ldp	x0, x1, [x19]
   29490:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   29494:	stp	x21, x20, [x19]
   29498:	ldp	x20, x19, [sp, #16]
   2949c:	ldp	x30, x21, [sp], #32
   294a0:	ret
   294a4:	adrp	x0, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   294a8:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   294ac:	add	x0, x0, #0xb2f
   294b0:	add	x2, x2, #0x932
   294b4:	mov	w1, #0x20c                 	// #524
   294b8:	mov	w4, #0x100                 	// #256
   294bc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   294c0:	adrp	x0, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   294c4:	add	x0, x0, #0x20f
   294c8:	bl	15e8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d70>
   294cc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   294d0:	sub	sp, sp, #0x40
   294d4:	stp	x30, xzr, [sp, #16]
   294d8:	stp	x22, x21, [sp, #32]
   294dc:	stp	x20, x19, [sp, #48]
   294e0:	mov	x19, x3
   294e4:	mov	x20, x2
   294e8:	mov	x21, x1
   294ec:	mov	x22, x0
   294f0:	str	xzr, [sp, #8]
   294f4:	tbz	w5, #0, 2952c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48a4>
   294f8:	add	x1, sp, #0x18
   294fc:	add	x2, sp, #0x8
   29500:	mov	w0, wzr
   29504:	bl	206dc <__sanitizer_sandbox_on_notify@@Base+0x5c>
   29508:	ldr	x5, [sp, #24]
   2950c:	ldr	x6, [sp, #8]
   29510:	mov	w7, #0x1                   	// #1
   29514:	mov	x0, x22
   29518:	mov	w1, w21
   2951c:	mov	x2, x20
   29520:	mov	x3, x19
   29524:	mov	x4, xzr
   29528:	b	29548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c0>
   2952c:	mov	x0, x22
   29530:	mov	w1, w21
   29534:	mov	x2, x20
   29538:	mov	x3, x19
   2953c:	mov	x5, xzr
   29540:	mov	x6, xzr
   29544:	mov	w7, wzr
   29548:	bl	248c8 <__sanitizer_cov_pcs_init@@Base+0x1694>
   2954c:	ldp	x20, x19, [sp, #48]
   29550:	ldp	x22, x21, [sp, #32]
   29554:	ldr	x30, [sp, #16]
   29558:	add	sp, sp, #0x40
   2955c:	ret
   29560:	stp	x30, x19, [sp, #-16]!
   29564:	mov	x19, x0
   29568:	bl	2a55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   2956c:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   29570:	mov	x1, x19
   29574:	ldp	x30, x19, [sp], #16
   29578:	b	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   2957c:	sub	sp, sp, #0x20
   29580:	str	x30, [sp, #16]
   29584:	ldr	w8, [x0, #320]
   29588:	cmp	w8, #0x8
   2958c:	b.eq	295c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x493c>  // b.none
   29590:	add	w9, w8, #0x1
   29594:	add	x8, x0, x8, lsl #5
   29598:	str	w9, [x0, #320]
   2959c:	str	wzr, [x8, #64]
   295a0:	ldr	w9, [sp, #12]
   295a4:	ldur	x10, [sp, #4]
   295a8:	ldr	x30, [sp, #16]
   295ac:	add	x11, x1, #0x4
   295b0:	str	w9, [x8, #76]
   295b4:	stur	x10, [x8, #68]
   295b8:	str	x11, [x8, #80]
   295bc:	add	sp, sp, #0x20
   295c0:	ret
   295c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   295c8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   295cc:	add	x0, x0, #0xf13
   295d0:	add	x2, x2, #0xf53
   295d4:	mov	w1, #0xc0                  	// #192
   295d8:	mov	x3, xzr
   295dc:	mov	x4, xzr
   295e0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   295e4:	sub	sp, sp, #0x40
   295e8:	stp	x30, x19, [sp, #48]
   295ec:	ldr	x8, [x1]
   295f0:	mov	x19, x0
   295f4:	ldrh	w9, [x8]
   295f8:	cmp	w9, #0x1
   295fc:	b.eq	29640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49b8>  // b.none
   29600:	cbnz	w9, 2968c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a04>
   29604:	ldrb	w8, [x8, #2]
   29608:	tbnz	w8, #0, 296d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a4c>
   2960c:	mov	x0, x1
   29610:	bl	2dbdc <__ubsan_get_current_report_data@@Base+0x1ec>
   29614:	ldr	w8, [x19, #320]
   29618:	cmp	w8, #0x8
   2961c:	b.eq	29720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   29620:	add	w9, w8, #0x1
   29624:	add	x8, x19, x8, lsl #5
   29628:	mov	w10, #0x2                   	// #2
   2962c:	str	w9, [x19, #320]
   29630:	str	w10, [x8, #64]
   29634:	ldr	w9, [sp, #32]
   29638:	ldr	x10, [sp, #24]
   2963c:	b	29704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a7c>
   29640:	mov	x0, x1
   29644:	bl	2de14 <__ubsan_get_current_report_data@@Base+0x424>
   29648:	ldr	w8, [x19, #320]
   2964c:	cmp	w8, #0x8
   29650:	b.eq	29720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   29654:	add	w9, w8, #0x1
   29658:	add	x8, x19, x8, lsl #5
   2965c:	mov	w10, #0x4                   	// #4
   29660:	str	w9, [x19, #320]
   29664:	str	w10, [x8, #64]
   29668:	ldr	w9, [sp, #20]
   2966c:	ldur	x10, [sp, #12]
   29670:	str	q0, [x8, #80]
   29674:	str	w9, [x8, #76]
   29678:	stur	x10, [x8, #68]
   2967c:	mov	x0, x19
   29680:	ldp	x30, x19, [sp, #48]
   29684:	add	sp, sp, #0x40
   29688:	ret
   2968c:	ldr	w8, [x19, #320]
   29690:	cmp	w8, #0x8
   29694:	b.eq	29720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   29698:	add	w9, w8, #0x1
   2969c:	add	x8, x19, x8, lsl #5
   296a0:	str	w9, [x19, #320]
   296a4:	str	wzr, [x8, #64]
   296a8:	ldr	w9, [sp, #8]
   296ac:	ldr	x10, [sp]
   296b0:	adrp	x11, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   296b4:	add	x11, x11, #0xe66
   296b8:	str	w9, [x8, #76]
   296bc:	stur	x10, [x8, #68]
   296c0:	str	x11, [x8, #80]
   296c4:	mov	x0, x19
   296c8:	ldp	x30, x19, [sp, #48]
   296cc:	add	sp, sp, #0x40
   296d0:	ret
   296d4:	mov	x0, x1
   296d8:	bl	2dad8 <__ubsan_get_current_report_data@@Base+0xe8>
   296dc:	ldr	w8, [x19, #320]
   296e0:	cmp	w8, #0x8
   296e4:	b.eq	29720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a98>  // b.none
   296e8:	add	w9, w8, #0x1
   296ec:	add	x8, x19, x8, lsl #5
   296f0:	mov	w10, #0x3                   	// #3
   296f4:	str	w9, [x19, #320]
   296f8:	str	w10, [x8, #64]
   296fc:	ldr	w9, [sp, #44]
   29700:	ldur	x10, [sp, #36]
   29704:	str	w9, [x8, #76]
   29708:	stur	x10, [x8, #68]
   2970c:	stp	x0, x1, [x8, #80]
   29710:	mov	x0, x19
   29714:	ldp	x30, x19, [sp, #48]
   29718:	add	sp, sp, #0x40
   2971c:	ret
   29720:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29724:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29728:	add	x0, x0, #0xf13
   2972c:	add	x2, x2, #0xf53
   29730:	mov	w1, #0xc0                  	// #192
   29734:	mov	x3, xzr
   29738:	mov	x4, xzr
   2973c:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29740:	sub	sp, sp, #0xe0
   29744:	stp	x29, x30, [sp, #128]
   29748:	stp	x28, x27, [sp, #144]
   2974c:	stp	x26, x25, [sp, #160]
   29750:	stp	x24, x23, [sp, #176]
   29754:	stp	x22, x21, [sp, #192]
   29758:	stp	x20, x19, [sp, #208]
   2975c:	mov	x21, x0
   29760:	bl	28fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4358>
   29764:	bl	28348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   29768:	mov	w19, w0
   2976c:	add	x0, sp, #0x60
   29770:	mov	w1, #0x400                 	// #1024
   29774:	stp	xzr, xzr, [sp, #104]
   29778:	str	xzr, [sp, #96]
   2977c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   29780:	ldr	x8, [sp, #112]
   29784:	cmp	x8, #0x3ff
   29788:	b.hi	297c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b38>  // b.pmore
   2978c:	ldr	x9, [sp, #104]
   29790:	cmp	x9, #0x3ff
   29794:	b.hi	297a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b20>  // b.pmore
   29798:	add	x0, sp, #0x60
   2979c:	mov	w1, #0x400                 	// #1024
   297a0:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   297a4:	ldr	x8, [sp, #112]
   297a8:	ldr	x9, [sp, #96]
   297ac:	mov	w10, #0x400                 	// #1024
   297b0:	sub	x2, x10, x8
   297b4:	mov	w1, wzr
   297b8:	add	x0, x9, x8
   297bc:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   297c0:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   297c4:	ldr	q0, [x8, #3632]
   297c8:	ldr	x8, [sp, #96]
   297cc:	str	q0, [sp, #112]
   297d0:	strb	wzr, [x8]
   297d4:	ldr	w8, [x21, #40]
   297d8:	str	q0, [sp, #16]
   297dc:	cbnz	w8, 29834 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bac>
   297e0:	ldr	x1, [x21, #48]
   297e4:	add	x2, x21, #0x40
   297e8:	add	x0, sp, #0x60
   297ec:	bl	29e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5180>
   297f0:	ldrsw	x8, [x21, #44]
   297f4:	cmp	w8, #0x20
   297f8:	b.cs	29dc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5140>  // b.hs, b.nlast
   297fc:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   29800:	add	x9, x9, #0x9a8
   29804:	ldr	x1, [x9, x8, lsl #3]
   29808:	add	x0, sp, #0x30
   2980c:	add	x3, sp, #0x60
   29810:	mov	x2, x21
   29814:	bl	2d8f8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x74>
   29818:	ldr	x8, [sp, #112]
   2981c:	cbz	x8, 29de8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5160>
   29820:	ldr	x8, [sp, #96]
   29824:	strb	wzr, [x8]
   29828:	ldp	x0, x1, [sp, #64]
   2982c:	str	xzr, [sp, #120]
   29830:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   29834:	adrp	x26, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29838:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2983c:	add	x26, x26, #0xcf
   29840:	add	x8, x8, #0x2c2
   29844:	tst	w19, #0x1
   29848:	csel	x20, x8, x26, ne  // ne = any
   2984c:	add	x0, sp, #0x60
   29850:	mov	x1, x20
   29854:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29858:	ldr	w8, [x21]
   2985c:	cmp	w8, #0x3
   29860:	b.hi	29924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c9c>  // b.pmore
   29864:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29868:	add	x9, x9, #0xe51
   2986c:	adr	x10, 2987c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf4>
   29870:	ldrb	w11, [x9, x8]
   29874:	add	x10, x10, x11, lsl #2
   29878:	br	x10
   2987c:	ldr	x1, [x21, #8]
   29880:	cbz	x1, 298a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c20>
   29884:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   29888:	ldr	x2, [x21, #16]
   2988c:	ldr	x8, [x8, #4056]
   29890:	add	x0, sp, #0x60
   29894:	lsr	x3, x2, #32
   29898:	ldrb	w4, [x8, #189]
   2989c:	ldr	x5, [x8, #24]
   298a0:	bl	25130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   298a4:	b	29924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c9c>
   298a8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   298ac:	add	x1, x1, #0xe66
   298b0:	add	x0, sp, #0x60
   298b4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   298b8:	b	29924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c9c>
   298bc:	ldr	x2, [x21, #24]
   298c0:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   298c4:	add	x1, x1, #0x87f
   298c8:	add	x0, sp, #0x60
   298cc:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   298d0:	b	29924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c9c>
   298d4:	ldr	x8, [x21, #32]
   298d8:	ldr	x1, [x8, #56]
   298dc:	cbz	x1, 29900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c78>
   298e0:	ldp	w2, w3, [x8, #64]
   298e4:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   298e8:	ldr	x8, [x8, #4056]
   298ec:	add	x0, sp, #0x60
   298f0:	ldrb	w4, [x8, #189]
   298f4:	ldr	x5, [x8, #24]
   298f8:	bl	25130 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   298fc:	b	29924 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c9c>
   29900:	ldr	x1, [x8, #16]
   29904:	cbz	x1, 29da0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5118>
   29908:	ldr	x2, [x8, #24]
   2990c:	ldr	w3, [x8, #32]
   29910:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   29914:	ldr	x8, [x8, #4056]
   29918:	add	x0, sp, #0x60
   2991c:	ldr	x4, [x8, #24]
   29920:	bl	25218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x590>
   29924:	adrp	x1, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   29928:	add	x1, x1, #0x37a
   2992c:	add	x0, sp, #0x60
   29930:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29934:	ldr	w9, [x21, #40]
   29938:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2993c:	add	x8, x8, #0x207
   29940:	cbz	w9, 29978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cf0>
   29944:	cmp	w9, #0x1
   29948:	b.ne	299a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d20>  // b.any
   2994c:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   29950:	tst	w19, #0x1
   29954:	add	x9, x9, #0x2c7
   29958:	csel	x23, x8, x26, ne  // ne = any
   2995c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29960:	csel	x2, x9, x26, ne  // ne = any
   29964:	add	x1, x1, #0xe87
   29968:	add	x0, sp, #0x60
   2996c:	mov	x3, x23
   29970:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29974:	b	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   29978:	adrp	x9, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2997c:	tst	w19, #0x1
   29980:	add	x9, x9, #0x23d
   29984:	csel	x23, x8, x26, ne  // ne = any
   29988:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2998c:	csel	x2, x9, x26, ne  // ne = any
   29990:	add	x1, x1, #0xe70
   29994:	add	x0, sp, #0x60
   29998:	mov	x3, x23
   2999c:	mov	x4, x20
   299a0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   299a4:	b	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d28>
   299a8:	tst	w19, #0x1
   299ac:	csel	x23, x8, x26, ne  // ne = any
   299b0:	ldr	x1, [x21, #48]
   299b4:	add	x22, x21, #0x40
   299b8:	add	x0, sp, #0x60
   299bc:	mov	x2, x22
   299c0:	bl	29e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5180>
   299c4:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   299c8:	add	x1, x1, #0x22b
   299cc:	add	x0, sp, #0x60
   299d0:	mov	x2, x23
   299d4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   299d8:	ldr	x1, [sp, #96]
   299dc:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   299e0:	add	x0, x0, #0xba0
   299e4:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   299e8:	ldr	w8, [x21]
   299ec:	cmp	w8, #0x2
   299f0:	b.ne	29d78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50f0>  // b.any
   299f4:	ldr	x20, [x21, #24]
   299f8:	ldr	w25, [x21, #416]
   299fc:	subs	x8, x20, #0x4
   29a00:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
   29a04:	adds	x9, x20, #0x4
   29a08:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
   29a0c:	cbz	w25, 29a58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd0>
   29a10:	add	x11, x21, #0x188
   29a14:	mov	x12, x25
   29a18:	mov	x10, x8
   29a1c:	ldur	w13, [x11, #-64]
   29a20:	cmp	w13, #0x2
   29a24:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29a28:	ldur	w13, [x11, #-24]
   29a2c:	cmp	w13, #0x2
   29a30:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29a34:	ldur	x13, [x11, #-40]
   29a38:	ldr	x14, [x11], #88
   29a3c:	cmp	x13, x10
   29a40:	csel	x10, x13, x10, cc  // cc = lo, ul, last
   29a44:	cmp	x14, x9
   29a48:	csel	x9, x14, x9, hi  // hi = pmore
   29a4c:	subs	x12, x12, #0x1
   29a50:	b.ne	29a1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d94>  // b.any
   29a54:	b	29a5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd4>
   29a58:	mov	x10, x8
   29a5c:	sub	x11, x9, x10
   29a60:	sub	x9, x9, #0x20
   29a64:	cmp	x9, x8
   29a68:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   29a6c:	cmp	x11, #0x20
   29a70:	csel	x24, x8, x10, hi  // hi = pmore
   29a74:	adds	x8, x24, #0x20
   29a78:	csinv	x29, x8, xzr, cc  // cc = lo, ul, last
   29a7c:	sub	x1, x29, x24
   29a80:	mov	x0, x24
   29a84:	bl	21730 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   29a88:	tbz	w0, #0, 29b98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f10>
   29a8c:	add	x0, sp, #0x30
   29a90:	mov	w1, #0x400                 	// #1024
   29a94:	stp	x25, xzr, [sp, #40]
   29a98:	str	x23, [sp, #8]
   29a9c:	add	x21, x21, #0x148
   29aa0:	stp	xzr, xzr, [sp, #56]
   29aa4:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   29aa8:	ldr	x8, [sp, #64]
   29aac:	cmp	x8, #0x3ff
   29ab0:	b.hi	29ae8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e60>  // b.pmore
   29ab4:	ldr	x9, [sp, #56]
   29ab8:	cmp	x9, #0x3ff
   29abc:	b.hi	29ad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e48>  // b.pmore
   29ac0:	add	x0, sp, #0x30
   29ac4:	mov	w1, #0x400                 	// #1024
   29ac8:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   29acc:	ldr	x8, [sp, #64]
   29ad0:	ldr	x9, [sp, #48]
   29ad4:	mov	w10, #0x400                 	// #1024
   29ad8:	sub	x2, x10, x8
   29adc:	mov	w1, wzr
   29ae0:	add	x0, x9, x8
   29ae4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   29ae8:	ldr	x8, [sp, #48]
   29aec:	ldr	q0, [sp, #16]
   29af0:	cmp	x29, x24
   29af4:	str	x21, [sp, #32]
   29af8:	str	x22, [sp]
   29afc:	str	q0, [sp, #64]
   29b00:	strb	wzr, [x8]
   29b04:	b.eq	29b44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ebc>  // b.none
   29b08:	adrp	x21, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   29b0c:	adrp	x22, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   29b10:	adrp	x25, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   29b14:	add	x21, x21, #0xdd3
   29b18:	add	x22, x22, #0xdd2
   29b1c:	add	x25, x25, #0x2ed
   29b20:	mov	x23, x24
   29b24:	tst	x23, #0x7
   29b28:	ldrb	w3, [x23], #1
   29b2c:	csel	x2, x22, x21, eq  // eq = none
   29b30:	add	x0, sp, #0x30
   29b34:	mov	x1, x25
   29b38:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29b3c:	cmp	x29, x23
   29b40:	b.ne	29b24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e9c>  // b.any
   29b44:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29b48:	add	x1, x1, #0xce
   29b4c:	add	x0, sp, #0x30
   29b50:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29b54:	adrp	x8, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   29b58:	add	x8, x8, #0x1fd
   29b5c:	tst	w19, #0x1
   29b60:	csel	x1, x8, x26, ne  // ne = any
   29b64:	add	x0, sp, #0x30
   29b68:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29b6c:	ldp	x1, x2, [sp, #32]
   29b70:	mov	x0, x24
   29b74:	bl	2a404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x577c>
   29b78:	cmp	x29, x24
   29b7c:	b.ne	29ba8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f20>  // b.any
   29b80:	ldr	x2, [sp, #8]
   29b84:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   29b88:	add	x1, x1, #0x22b
   29b8c:	add	x0, sp, #0x30
   29b90:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29b94:	b	29d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d8>
   29b98:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   29b9c:	add	x0, x0, #0x2d1
   29ba0:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   29ba4:	b	29d78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50f0>
   29ba8:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29bac:	mov	x26, x0
   29bb0:	mov	w21, #0x20                  	// #32
   29bb4:	mov	w22, #0x7e                  	// #126
   29bb8:	add	x19, x19, #0x200
   29bbc:	mov	w23, #0x5e                  	// #94
   29bc0:	mov	x25, x24
   29bc4:	b	29c08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f80>
   29bc8:	add	x0, sp, #0x30
   29bcc:	mov	x1, x19
   29bd0:	mov	w2, w28
   29bd4:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29bd8:	cmp	x20, x25
   29bdc:	csel	w2, w23, w27, eq  // eq = none
   29be0:	add	x0, sp, #0x30
   29be4:	mov	x1, x19
   29be8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29bec:	add	x0, sp, #0x30
   29bf0:	mov	x1, x19
   29bf4:	mov	w2, w27
   29bf8:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29bfc:	add	x25, x25, #0x1
   29c00:	cmp	x29, x25
   29c04:	b.eq	29c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5008>  // b.none
   29c08:	cbz	x26, 29c34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fac>
   29c0c:	ldr	w8, [x26, #40]
   29c10:	cmp	w8, #0x2
   29c14:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29c18:	ldr	x8, [x26, #64]
   29c1c:	cmp	x25, x8
   29c20:	b.ne	29c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fbc>  // b.any
   29c24:	ldp	x1, x2, [sp, #32]
   29c28:	mov	x0, x25
   29c2c:	bl	2a404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x577c>
   29c30:	mov	x26, x0
   29c34:	cmp	x25, x20
   29c38:	b.ls	29c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fb8>  // b.plast
   29c3c:	cbz	x26, 29c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5008>
   29c40:	cbz	x26, 29c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fe4>
   29c44:	ldr	w8, [x26]
   29c48:	cmp	w8, #0x2
   29c4c:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29c50:	ldr	x8, [x26, #24]
   29c54:	cmp	x8, x25
   29c58:	csel	w28, w22, w21, cc  // cc = lo, ul, last
   29c5c:	csel	w27, w21, w22, hi  // hi = pmore
   29c60:	tst	x25, #0x7
   29c64:	b.ne	29bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f40>  // b.any
   29c68:	b	29c7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ff4>
   29c6c:	mov	w28, #0x20                  	// #32
   29c70:	mov	w27, #0x20                  	// #32
   29c74:	tst	x25, #0x7
   29c78:	b.ne	29bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f40>  // b.any
   29c7c:	add	x0, sp, #0x30
   29c80:	mov	x1, x19
   29c84:	mov	w2, w28
   29c88:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29c8c:	b	29bc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f40>
   29c90:	ldr	x2, [sp, #8]
   29c94:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6620>
   29c98:	add	x1, x1, #0x22b
   29c9c:	add	x0, sp, #0x30
   29ca0:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29ca4:	ldp	x25, x23, [sp, #32]
   29ca8:	mov	w21, wzr
   29cac:	mov	x19, xzr
   29cb0:	mov	w20, #0x1                   	// #1
   29cb4:	cbz	x19, 29cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5048>
   29cb8:	ldr	w8, [x19, #40]
   29cbc:	cmp	w8, #0x2
   29cc0:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29cc4:	ldr	x8, [x19, #64]
   29cc8:	cmp	x24, x8
   29ccc:	b.ne	29ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5060>  // b.any
   29cd0:	mov	x0, x24
   29cd4:	mov	x1, x25
   29cd8:	mov	w2, w23
   29cdc:	bl	2a404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x577c>
   29ce0:	mov	x19, x0
   29ce4:	cbz	x0, 29d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d8>
   29ce8:	ldr	w9, [x19]
   29cec:	tst	x24, #0x7
   29cf0:	cinc	w8, w20, eq  // eq = none
   29cf4:	cmp	w9, #0x2
   29cf8:	b.ne	29da8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5120>  // b.any
   29cfc:	ldr	x9, [x19, #24]
   29d00:	add	w22, w8, w21
   29d04:	cmp	x24, x9
   29d08:	b.eq	29d20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5098>  // b.none
   29d0c:	add	x24, x24, #0x1
   29d10:	cmp	x29, x24
   29d14:	add	w21, w22, #0x2
   29d18:	b.ne	29cb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x502c>  // b.any
   29d1c:	b	29d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d8>
   29d20:	cbz	w22, 29d40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50b8>
   29d24:	adrp	x21, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   29d28:	add	x21, x21, #0xdd3
   29d2c:	add	x0, sp, #0x30
   29d30:	mov	x1, x21
   29d34:	sub	w22, w22, #0x1
   29d38:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29d3c:	cbnz	w22, 29d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x50a4>
   29d40:	ldr	x1, [x19, #80]
   29d44:	ldr	x2, [sp]
   29d48:	add	x0, sp, #0x30
   29d4c:	bl	29e08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5180>
   29d50:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29d54:	add	x1, x1, #0xce
   29d58:	add	x0, sp, #0x30
   29d5c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29d60:	ldr	x1, [sp, #48]
   29d64:	adrp	x0, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   29d68:	add	x0, x0, #0xba0
   29d6c:	bl	1ca54 <__sanitizer_on_print@@Base+0x4>
   29d70:	ldp	x0, x1, [sp, #48]
   29d74:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   29d78:	ldp	x0, x1, [sp, #96]
   29d7c:	bl	1b41c <__sanitizer_set_report_fd@@Base+0x4dd8>
   29d80:	ldp	x20, x19, [sp, #208]
   29d84:	ldp	x22, x21, [sp, #192]
   29d88:	ldp	x24, x23, [sp, #176]
   29d8c:	ldp	x26, x25, [sp, #160]
   29d90:	ldp	x28, x27, [sp, #144]
   29d94:	ldp	x29, x30, [sp, #128]
   29d98:	add	sp, sp, #0xe0
   29d9c:	ret
   29da0:	ldr	x2, [x8, #8]
   29da4:	b	298c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c38>
   29da8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29dac:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   29db0:	add	x0, x0, #0xf13
   29db4:	add	x2, x2, #0x2f4
   29db8:	mov	w1, #0x56                  	// #86
   29dbc:	mov	x3, xzr
   29dc0:	mov	x4, xzr
   29dc4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29dc8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29dcc:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   29dd0:	add	x0, x0, #0xe93
   29dd4:	add	x2, x2, #0x29d
   29dd8:	mov	w1, #0x42                  	// #66
   29ddc:	mov	x3, xzr
   29de0:	mov	x4, xzr
   29de4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29de8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29dec:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   29df0:	add	x0, x0, #0xf71
   29df4:	add	x2, x2, #0x1eb
   29df8:	mov	w1, #0x1c5                 	// #453
   29dfc:	mov	x3, xzr
   29e00:	mov	x4, xzr
   29e04:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   29e08:	sub	sp, sp, #0x80
   29e0c:	stp	x29, x30, [sp, #32]
   29e10:	stp	x28, x27, [sp, #48]
   29e14:	stp	x26, x25, [sp, #64]
   29e18:	stp	x24, x23, [sp, #80]
   29e1c:	stp	x22, x21, [sp, #96]
   29e20:	stp	x20, x19, [sp, #112]
   29e24:	adrp	x24, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29e28:	adrp	x22, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   29e2c:	adrp	x23, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29e30:	adrp	x27, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29e34:	adrp	x28, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   29e38:	adrp	x29, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29e3c:	mov	x19, x2
   29e40:	mov	x20, x1
   29e44:	mov	x21, x0
   29e48:	add	x24, x24, #0xe55
   29e4c:	add	x22, x22, #0xba0
   29e50:	add	x23, x23, #0xfcb
   29e54:	mov	x26, #0x8000000000000000    	// #-9223372036854775808
   29e58:	add	x27, x27, #0xfda
   29e5c:	add	x28, x28, #0x87f
   29e60:	add	x29, x29, #0x200
   29e64:	b	29e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f8>
   29e68:	add	x8, x19, x25, lsl #5
   29e6c:	ldr	x2, [x8, #16]
   29e70:	mov	x0, x21
   29e74:	mov	x1, x22
   29e78:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29e7c:	add	x20, x20, #0x1
   29e80:	ldrb	w2, [x20]
   29e84:	cmp	w2, #0x25
   29e88:	b.eq	29ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x521c>  // b.none
   29e8c:	cbz	w2, 29f88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5300>
   29e90:	mov	x0, x21
   29e94:	mov	x1, x29
   29e98:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29e9c:	add	x20, x20, #0x1
   29ea0:	b	29e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f8>
   29ea4:	ldrb	w8, [x20, #1]!
   29ea8:	sub	x25, x8, #0x30
   29eac:	lsl	x8, x25, #5
   29eb0:	ldr	w8, [x19, x8]
   29eb4:	cmp	w8, #0x5
   29eb8:	b.hi	29e7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f4>  // b.pmore
   29ebc:	adr	x9, 29e68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51e0>
   29ec0:	ldrb	w10, [x24, x8]
   29ec4:	add	x9, x9, x10, lsl #2
   29ec8:	br	x9
   29ecc:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   29ed0:	add	x8, x19, x25, lsl #5
   29ed4:	ldr	x1, [x8, #16]
   29ed8:	bl	260b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1430>
   29edc:	mov	x2, x0
   29ee0:	mov	x0, x21
   29ee4:	mov	x1, x23
   29ee8:	b	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f0>
   29eec:	add	x8, x19, x25, lsl #5
   29ef0:	ldp	x5, x3, [x8, #16]
   29ef4:	cbnz	x3, 29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e0>
   29ef8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29efc:	mov	x0, x21
   29f00:	add	x1, x1, #0xfd5
   29f04:	mov	x2, x5
   29f08:	b	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f0>
   29f0c:	add	x8, x19, x25, lsl #5
   29f10:	ldp	x5, x3, [x8, #16]
   29f14:	cmn	x5, x26
   29f18:	adcs	x8, x3, xzr
   29f1c:	cbnz	x8, 29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e0>
   29f20:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29f24:	mov	x0, x21
   29f28:	add	x1, x1, #0xfd0
   29f2c:	mov	x2, x5
   29f30:	b	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f0>
   29f34:	add	x8, x19, x25, lsl #5
   29f38:	ldr	q0, [x8, #16]
   29f3c:	mov	x0, sp
   29f40:	mov	w1, #0x20                  	// #32
   29f44:	mov	x2, x27
   29f48:	bl	6c60 <snprintf@plt>
   29f4c:	mov	x2, sp
   29f50:	b	29e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51e8>
   29f54:	add	x8, x19, x25, lsl #5
   29f58:	ldr	x2, [x8, #16]
   29f5c:	mov	x0, x21
   29f60:	mov	x1, x28
   29f64:	b	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f0>
   29f68:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   29f6c:	lsr	x2, x3, #32
   29f70:	lsr	x4, x5, #32
   29f74:	mov	x0, x21
   29f78:	add	x1, x1, #0xfde
   29f7c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   29f80:	add	x20, x20, #0x1
   29f84:	b	29e80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51f8>
   29f88:	ldp	x20, x19, [sp, #112]
   29f8c:	ldp	x22, x21, [sp, #96]
   29f90:	ldp	x24, x23, [sp, #80]
   29f94:	ldp	x26, x25, [sp, #64]
   29f98:	ldp	x28, x27, [sp, #48]
   29f9c:	ldp	x29, x30, [sp, #32]
   29fa0:	add	sp, sp, #0x80
   29fa4:	ret
   29fa8:	b	2a55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   29fac:	str	x30, [sp, #-48]!
   29fb0:	stp	x22, x21, [sp, #16]
   29fb4:	stp	x20, x19, [sp, #32]
   29fb8:	mov	w19, w3
   29fbc:	mov	x20, x2
   29fc0:	mov	x21, x1
   29fc4:	mov	x22, x0
   29fc8:	bl	2a55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   29fcc:	add	x0, x22, #0x1
   29fd0:	bl	28ed8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   29fd4:	ldr	x8, [x21, #16]
   29fd8:	ldr	q0, [x21]
   29fdc:	str	x8, [x22, #24]
   29fe0:	stur	q0, [x22, #8]
   29fe4:	ldr	x8, [x20, #32]
   29fe8:	ldp	q1, q0, [x20]
   29fec:	str	w19, [x22, #72]
   29ff0:	str	x8, [x22, #64]
   29ff4:	stp	q1, q0, [x22, #32]
   29ff8:	ldp	x20, x19, [sp, #32]
   29ffc:	ldp	x22, x21, [sp, #16]
   2a000:	ldr	x30, [sp], #48
   2a004:	ret
   2a008:	str	x29, [sp, #-64]!
   2a00c:	stp	x30, x23, [sp, #16]
   2a010:	stp	x22, x21, [sp, #32]
   2a014:	stp	x20, x19, [sp, #48]
   2a018:	sub	sp, sp, #0x820
   2a01c:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a020:	ldr	x22, [x22, #3696]
   2a024:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a028:	mov	x19, x0
   2a02c:	ldrb	w8, [x22, #1]
   2a030:	ldr	x23, [x23, #4056]
   2a034:	cbz	w8, 2a0bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5434>
   2a038:	ldp	x20, x21, [x19, #16]
   2a03c:	ldrb	w9, [x23, #33]
   2a040:	mov	x8, sp
   2a044:	add	x8, x8, #0x10
   2a048:	stp	x8, xzr, [sp]
   2a04c:	str	xzr, [sp, #2064]
   2a050:	str	xzr, [sp, #2088]
   2a054:	str	xzr, [sp, #2072]
   2a058:	cbz	w9, 2a090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   2a05c:	add	x1, sp, #0x828
   2a060:	add	x2, sp, #0x818
   2a064:	mov	w0, wzr
   2a068:	bl	206dc <__sanitizer_sandbox_on_notify@@Base+0x5c>
   2a06c:	ldr	x5, [sp, #2088]
   2a070:	ldr	x6, [sp, #2072]
   2a074:	mov	x0, sp
   2a078:	mov	w1, #0x100                 	// #256
   2a07c:	mov	w7, #0x1                   	// #1
   2a080:	mov	x2, x20
   2a084:	mov	x3, x21
   2a088:	mov	x4, xzr
   2a08c:	b	2a0b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   2a090:	mov	x0, sp
   2a094:	mov	w1, #0x100                 	// #256
   2a098:	mov	x2, x20
   2a09c:	mov	x3, x21
   2a0a0:	mov	x4, xzr
   2a0a4:	mov	x5, xzr
   2a0a8:	mov	x6, xzr
   2a0ac:	mov	w7, wzr
   2a0b0:	bl	248c8 <__sanitizer_cov_pcs_init@@Base+0x1694>
   2a0b4:	mov	x0, sp
   2a0b8:	bl	245b0 <__sanitizer_cov_pcs_init@@Base+0x137c>
   2a0bc:	ldrb	w8, [x23, #60]
   2a0c0:	cbz	w8, 2a16c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54e4>
   2a0c4:	ldrb	w8, [x22, #16]
   2a0c8:	ldr	w9, [x19, #72]
   2a0cc:	cmp	w8, #0x0
   2a0d0:	csel	w9, wzr, w9, eq  // eq = none
   2a0d4:	cmp	w9, #0x20
   2a0d8:	b.cs	2a1bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5534>  // b.hs, b.nlast
   2a0dc:	adrp	x10, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a0e0:	ldr	w8, [x19, #32]
   2a0e4:	add	x10, x10, #0x9a8
   2a0e8:	ldr	x20, [x10, w9, sxtw #3]
   2a0ec:	cmp	w8, #0x3
   2a0f0:	b.eq	2a194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x550c>  // b.none
   2a0f4:	cmp	w8, #0x1
   2a0f8:	b.ne	2a15c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54d4>  // b.any
   2a0fc:	ldr	x21, [x19, #40]
   2a100:	cbz	x21, 2a15c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54d4>
   2a104:	ldr	x23, [x19, #48]
   2a108:	mov	x0, sp
   2a10c:	bl	2542c <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a4>
   2a110:	mov	x0, x21
   2a114:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   2a118:	str	x0, [sp, #48]
   2a11c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a120:	lsr	x8, x23, #32
   2a124:	add	x0, x0, #0xcf
   2a128:	stp	w23, w8, [sp, #56]
   2a12c:	bl	18be0 <__sanitizer_set_report_fd@@Base+0x259c>
   2a130:	str	x0, [sp, #32]
   2a134:	bl	2a4b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x582c>
   2a138:	mov	x2, x0
   2a13c:	mov	x1, sp
   2a140:	mov	x0, x20
   2a144:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   2a148:	mov	x0, sp
   2a14c:	bl	25450 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c8>
   2a150:	ldrb	w8, [x22]
   2a154:	cbz	w8, 2a174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54ec>
   2a158:	b	2a1b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5530>
   2a15c:	bl	2a4b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x582c>
   2a160:	mov	x1, x0
   2a164:	mov	x0, x20
   2a168:	bl	13780 <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>
   2a16c:	ldrb	w8, [x22]
   2a170:	cbnz	w8, 2a1b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5530>
   2a174:	add	x0, x19, #0x1
   2a178:	bl	28fc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4340>
   2a17c:	add	sp, sp, #0x820
   2a180:	ldp	x20, x19, [sp, #48]
   2a184:	ldp	x22, x21, [sp, #32]
   2a188:	ldp	x30, x23, [sp, #16]
   2a18c:	ldr	x29, [sp], #64
   2a190:	ret
   2a194:	ldr	x8, [x19, #64]
   2a198:	add	x21, x8, #0x8
   2a19c:	bl	2a4b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x582c>
   2a1a0:	mov	x2, x0
   2a1a4:	mov	x0, x20
   2a1a8:	mov	x1, x21
   2a1ac:	bl	281fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   2a1b0:	ldrb	w8, [x22]
   2a1b4:	cbz	w8, 2a174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54ec>
   2a1b8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2a1bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a1c0:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a1c4:	add	x0, x0, #0xe93
   2a1c8:	add	x2, x2, #0x29d
   2a1cc:	mov	w1, #0x42                  	// #66
   2a1d0:	mov	x3, xzr
   2a1d4:	mov	x4, xzr
   2a1d8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2a1dc:	str	x30, [sp, #-32]!
   2a1e0:	stp	x20, x19, [sp, #16]
   2a1e4:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a1e8:	ldr	x4, [x8, #3264]
   2a1ec:	cbnz	x4, 2a230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55a8>
   2a1f0:	adrp	x20, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a1f4:	add	x20, x20, #0xcc0
   2a1f8:	adrp	x1, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
   2a1fc:	add	x19, x20, #0x40
   2a200:	add	x1, x1, #0xb28
   2a204:	mov	w2, #0x21                  	// #33
   2a208:	mov	x0, x19
   2a20c:	bl	1e05c <__sanitizer_on_print@@Base+0x160c>
   2a210:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a214:	ldr	x8, [x8, #3696]
   2a218:	str	x19, [x20]
   2a21c:	mov	x0, x19
   2a220:	ldp	x20, x19, [sp, #16]
   2a224:	ldr	x1, [x8, #8]
   2a228:	ldr	x30, [sp], #32
   2a22c:	b	1e0b4 <__sanitizer_on_print@@Base+0x1664>
   2a230:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a234:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a238:	add	x0, x0, #0xe93
   2a23c:	add	x2, x2, #0xed5
   2a240:	mov	w1, #0x196                 	// #406
   2a244:	mov	x3, xzr
   2a248:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2a24c:	sub	sp, sp, #0x20
   2a250:	stp	x30, x19, [sp, #16]
   2a254:	mov	x19, x0
   2a258:	bl	2a55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   2a25c:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a260:	ldr	x0, [x8, #3264]
   2a264:	cbz	x0, 2a28c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5604>
   2a268:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a26c:	add	x2, x2, #0xe5b
   2a270:	add	x3, sp, #0x8
   2a274:	mov	x1, x19
   2a278:	bl	1e524 <__sanitizer_on_print@@Base+0x1ad4>
   2a27c:	ldp	x30, x19, [sp, #16]
   2a280:	and	w0, w0, #0x1
   2a284:	add	sp, sp, #0x20
   2a288:	ret
   2a28c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a290:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a294:	add	x0, x0, #0xe93
   2a298:	add	x2, x2, #0xef8
   2a29c:	mov	w1, #0x19e                 	// #414
   2a2a0:	mov	x3, xzr
   2a2a4:	mov	x4, xzr
   2a2a8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2a2ac:	sub	sp, sp, #0x40
   2a2b0:	str	x30, [sp, #16]
   2a2b4:	stp	x22, x21, [sp, #32]
   2a2b8:	stp	x20, x19, [sp, #48]
   2a2bc:	mov	x21, x2
   2a2c0:	mov	x20, x1
   2a2c4:	mov	w19, w0
   2a2c8:	bl	2a55c <__sanitizer_get_module_and_offset_for_pc@@Base+0x58d4>
   2a2cc:	adrp	x22, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a2d0:	ldr	x0, [x22, #3264]
   2a2d4:	cbz	x0, 2a3cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5744>
   2a2d8:	cmp	w19, #0x20
   2a2dc:	b.cs	2a3e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x575c>  // b.hs, b.nlast
   2a2e0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a2e4:	add	x8, x8, #0xaa8
   2a2e8:	ldr	x19, [x8, w19, sxtw #3]
   2a2ec:	mov	x1, x19
   2a2f0:	bl	1e600 <__sanitizer_on_print@@Base+0x1bb0>
   2a2f4:	tbz	w0, #0, 2a358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d0>
   2a2f8:	str	xzr, [sp]
   2a2fc:	cbz	x21, 2a318 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5690>
   2a300:	ldr	x0, [x22, #3264]
   2a304:	mov	x3, sp
   2a308:	mov	x1, x21
   2a30c:	mov	x2, x19
   2a310:	bl	1e524 <__sanitizer_on_print@@Base+0x1ad4>
   2a314:	tbnz	w0, #0, 2a350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56c8>
   2a318:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2a31c:	add	x2, sp, #0x18
   2a320:	add	x3, sp, #0x8
   2a324:	mov	x1, x20
   2a328:	str	xzr, [sp, #24]
   2a32c:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   2a330:	ldr	x1, [sp, #24]
   2a334:	cbz	x1, 2a360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d8>
   2a338:	tbz	w0, #0, 2a360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d8>
   2a33c:	ldr	x0, [x22, #3264]
   2a340:	mov	x3, sp
   2a344:	mov	x2, x19
   2a348:	bl	1e524 <__sanitizer_on_print@@Base+0x1ad4>
   2a34c:	tbz	w0, #0, 2a360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56d8>
   2a350:	mov	w19, #0x1                   	// #1
   2a354:	b	2a3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x572c>
   2a358:	mov	w19, wzr
   2a35c:	b	2a3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x572c>
   2a360:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2a364:	mov	x1, x20
   2a368:	bl	25d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   2a36c:	mov	x20, x0
   2a370:	ldr	x0, [x22, #3264]
   2a374:	ldr	x1, [x20, #40]
   2a378:	mov	x3, sp
   2a37c:	mov	x2, x19
   2a380:	bl	1e524 <__sanitizer_on_print@@Base+0x1ad4>
   2a384:	tbz	w0, #0, 2a394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x570c>
   2a388:	mov	w19, #0x1                   	// #1
   2a38c:	cbnz	x20, 2a3ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5724>
   2a390:	b	2a3b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x572c>
   2a394:	ldr	x0, [x22, #3264]
   2a398:	ldr	x1, [x20, #56]
   2a39c:	mov	x3, sp
   2a3a0:	mov	x2, x19
   2a3a4:	bl	1e524 <__sanitizer_on_print@@Base+0x1ad4>
   2a3a8:	mov	w19, w0
   2a3ac:	mov	x0, x20
   2a3b0:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2a3b4:	and	w0, w19, #0x1
   2a3b8:	ldp	x20, x19, [sp, #48]
   2a3bc:	ldp	x22, x21, [sp, #32]
   2a3c0:	ldr	x30, [sp, #16]
   2a3c4:	add	sp, sp, #0x40
   2a3c8:	ret
   2a3cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a3d0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a3d4:	add	x0, x0, #0xe93
   2a3d8:	add	x2, x2, #0xef8
   2a3dc:	mov	w1, #0x1a5                 	// #421
   2a3e0:	b	2a3f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5770>
   2a3e4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a3e8:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a3ec:	add	x0, x0, #0xe93
   2a3f0:	add	x2, x2, #0x29d
   2a3f4:	mov	w1, #0x4d                  	// #77
   2a3f8:	mov	x3, xzr
   2a3fc:	mov	x4, xzr
   2a400:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2a404:	str	x30, [sp, #-16]!
   2a408:	cbz	w2, 2a488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5800>
   2a40c:	mov	x8, x0
   2a410:	mov	w10, wzr
   2a414:	mov	x0, xzr
   2a418:	mov	w9, #0x58                  	// #88
   2a41c:	b	2a430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57a8>
   2a420:	mov	x0, x11
   2a424:	add	w10, w10, #0x1
   2a428:	cmp	w2, w10
   2a42c:	b.eq	2a48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5804>  // b.none
   2a430:	umaddl	x11, w10, w9, x1
   2a434:	ldr	w12, [x11, #40]
   2a438:	cmp	w12, #0x2
   2a43c:	b.ne	2a494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580c>  // b.any
   2a440:	mov	w10, w10
   2a444:	madd	x12, x10, x9, x1
   2a448:	ldr	x12, [x12, #64]
   2a44c:	cmp	x12, x8
   2a450:	b.ls	2a424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x579c>  // b.plast
   2a454:	cbz	x0, 2a420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5798>
   2a458:	ldr	w12, [x0]
   2a45c:	cmp	w12, #0x2
   2a460:	b.ne	2a494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580c>  // b.any
   2a464:	ldr	w12, [x11]
   2a468:	cmp	w12, #0x2
   2a46c:	b.ne	2a494 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580c>  // b.any
   2a470:	madd	x13, x10, x9, x1
   2a474:	ldr	x12, [x0, #24]
   2a478:	ldr	x13, [x13, #24]
   2a47c:	cmp	x12, x13
   2a480:	b.hi	2a420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5798>  // b.pmore
   2a484:	b	2a424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x579c>
   2a488:	mov	x0, xzr
   2a48c:	ldr	x30, [sp], #16
   2a490:	ret
   2a494:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a498:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a49c:	add	x0, x0, #0xf13
   2a4a0:	add	x2, x2, #0x2f4
   2a4a4:	mov	w1, #0x56                  	// #86
   2a4a8:	mov	x3, xzr
   2a4ac:	mov	x4, xzr
   2a4b0:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2a4b4:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a4b8:	add	x0, x0, #0x3aa
   2a4bc:	ret
   2a4c0:	str	x30, [sp, #-32]!
   2a4c4:	stp	x20, x19, [sp, #16]
   2a4c8:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a4cc:	add	x8, x8, #0xd70
   2a4d0:	mov	w9, #0x1                   	// #1
   2a4d4:	ldaxrb	w10, [x8]
   2a4d8:	stlxrb	w11, w9, [x8]
   2a4dc:	cbnz	w11, 2a4d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x584c>
   2a4e0:	cbz	w10, 2a4f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5868>
   2a4e4:	adrp	x0, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a4e8:	add	x0, x0, #0xd70
   2a4ec:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   2a4f0:	adrp	x19, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a4f4:	ldrb	w8, [x19, #3441]
   2a4f8:	tbnz	w8, #0, 2a544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58bc>
   2a4fc:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a500:	ldr	x8, [x8, #4024]
   2a504:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a508:	add	x9, x9, #0x3aa
   2a50c:	str	x9, [x8]
   2a510:	bl	13e30 <__sanitizer_report_error_summary@@Base+0x5e0>
   2a514:	bl	2a704 <__ubsan_default_options@@Base+0x148>
   2a518:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a51c:	ldr	x20, [x20, #4056]
   2a520:	ldr	x0, [x20, #40]
   2a524:	bl	6e50 <__sanitizer_set_report_path@plt>
   2a528:	bl	20fd0 <__sanitizer_sandbox_on_notify@@Base+0x950>
   2a52c:	ldrb	w0, [x20, #169]
   2a530:	ldr	x1, [x20, #176]
   2a534:	bl	22ca4 <__sanitizer_sandbox_on_notify@@Base+0x2624>
   2a538:	bl	2a1dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5554>
   2a53c:	mov	w8, #0x1                   	// #1
   2a540:	strb	w8, [x19, #3441]
   2a544:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a548:	dmb	ish
   2a54c:	strb	wzr, [x8, #3440]
   2a550:	ldp	x20, x19, [sp, #16]
   2a554:	ldr	x30, [sp], #32
   2a558:	ret
   2a55c:	b	2a4c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5838>
   2a560:	stp	x30, x19, [sp, #-16]!
   2a564:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a568:	add	x8, x8, #0xd70
   2a56c:	mov	w9, #0x1                   	// #1
   2a570:	ldaxrb	w10, [x8]
   2a574:	stlxrb	w11, w9, [x8]
   2a578:	cbnz	w11, 2a570 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>
   2a57c:	cbz	w10, 2a58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5904>
   2a580:	adrp	x0, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a584:	add	x0, x0, #0xd70
   2a588:	bl	8a1c <__sanitizer_print_stack_trace@@Base+0x1c4>
   2a58c:	adrp	x19, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a590:	ldrb	w8, [x19, #3441]
   2a594:	tbnz	w8, #0, 2a5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x591c>
   2a598:	bl	2a1dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5554>
   2a59c:	mov	w8, #0x1                   	// #1
   2a5a0:	strb	w8, [x19, #3441]
   2a5a4:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a5a8:	dmb	ish
   2a5ac:	strb	wzr, [x8, #3440]
   2a5b0:	ldp	x30, x19, [sp], #16
   2a5b4:	ret
   2a5b8:	b	6e00 <__ubsan_default_options@plt>

000000000002a5bc <__ubsan_default_options@@Base>:
   2a5bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a5c0:	add	x0, x0, #0xcf
   2a5c4:	ret
   2a5c8:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a5cc:	add	x8, x8, #0xcf
   2a5d0:	strh	wzr, [x0]
   2a5d4:	str	x8, [x0, #8]
   2a5d8:	strh	wzr, [x0, #16]
   2a5dc:	ret
   2a5e0:	stp	x30, x23, [sp, #-48]!
   2a5e4:	stp	x22, x21, [sp, #16]
   2a5e8:	stp	x20, x19, [sp, #32]
   2a5ec:	adrp	x20, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a5f0:	ldr	x20, [x20, #3624]
   2a5f4:	mov	x21, x1
   2a5f8:	mov	x19, x0
   2a5fc:	mov	w1, #0x10                  	// #16
   2a600:	mov	x0, x20
   2a604:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   2a608:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a60c:	add	x22, x22, #0x630
   2a610:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   2a614:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a618:	mov	x2, x0
   2a61c:	stp	x22, x21, [x0]
   2a620:	add	x1, x1, #0x32a
   2a624:	add	x3, x3, #0x3c5
   2a628:	mov	x0, x19
   2a62c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   2a630:	mov	w1, #0x10                  	// #16
   2a634:	mov	x0, x20
   2a638:	add	x23, x21, #0x1
   2a63c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   2a640:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a644:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a648:	mov	x2, x0
   2a64c:	stp	x22, x23, [x0]
   2a650:	add	x1, x1, #0x3fd
   2a654:	add	x3, x3, #0x40e
   2a658:	mov	x0, x19
   2a65c:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   2a660:	mov	w1, #0x10                  	// #16
   2a664:	mov	x0, x20
   2a668:	add	x23, x21, #0x8
   2a66c:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   2a670:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a674:	add	x8, x8, #0x710
   2a678:	adrp	x1, 33000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4620>
   2a67c:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a680:	mov	x2, x0
   2a684:	stp	x8, x23, [x0]
   2a688:	add	x1, x1, #0xac1
   2a68c:	add	x3, x3, #0x43b
   2a690:	mov	x0, x19
   2a694:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   2a698:	mov	w1, #0x10                  	// #16
   2a69c:	mov	x0, x20
   2a6a0:	add	x23, x21, #0x10
   2a6a4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   2a6a8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a6ac:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a6b0:	mov	x2, x0
   2a6b4:	stp	x22, x23, [x0]
   2a6b8:	add	x1, x1, #0x453
   2a6bc:	add	x3, x3, #0x465
   2a6c0:	mov	x0, x19
   2a6c4:	bl	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   2a6c8:	mov	w1, #0x10                  	// #16
   2a6cc:	mov	x0, x20
   2a6d0:	add	x21, x21, #0x11
   2a6d4:	bl	11edc <_ZdaPvRKSt9nothrow_t@@Base+0x708>
   2a6d8:	stp	x22, x21, [x0]
   2a6dc:	mov	x2, x0
   2a6e0:	mov	x0, x19
   2a6e4:	ldp	x20, x19, [sp, #32]
   2a6e8:	ldp	x22, x21, [sp, #16]
   2a6ec:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a6f0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a6f4:	add	x1, x1, #0x4ab
   2a6f8:	add	x3, x3, #0x4c5
   2a6fc:	ldp	x30, x23, [sp], #48
   2a700:	b	18668 <__sanitizer_set_report_fd@@Base+0x2024>
   2a704:	sub	sp, sp, #0x120
   2a708:	stp	x29, x30, [sp, #256]
   2a70c:	stp	x20, x19, [sp, #272]
   2a710:	adrp	x19, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a714:	ldr	x19, [x19, #4056]
   2a718:	mov	x0, x19
   2a71c:	bl	16664 <__sanitizer_set_report_fd@@Base+0x20>
   2a720:	add	x0, sp, #0x8
   2a724:	mov	x1, x19
   2a728:	bl	1675c <__sanitizer_set_report_fd@@Base+0x118>
   2a72c:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a730:	add	x0, x0, #0x541
   2a734:	bl	19d40 <__sanitizer_set_report_fd@@Base+0x36fc>
   2a738:	str	x0, [sp, #16]
   2a73c:	add	x1, sp, #0x8
   2a740:	mov	x0, x19
   2a744:	bl	1675c <__sanitizer_set_report_fd@@Base+0x118>
   2a748:	adrp	x20, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2a74c:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2a750:	add	x20, x20, #0xd78
   2a754:	add	x8, x8, #0xcf
   2a758:	add	x0, sp, #0x8
   2a75c:	strh	wzr, [x20]
   2a760:	str	x8, [x20, #8]
   2a764:	strh	wzr, [x20, #16]
   2a768:	bl	186bc <__sanitizer_set_report_fd@@Base+0x2078>
   2a76c:	add	x0, sp, #0x8
   2a770:	mov	x1, x19
   2a774:	bl	16ad0 <__sanitizer_set_report_fd@@Base+0x48c>
   2a778:	add	x0, sp, #0x8
   2a77c:	mov	x1, x20
   2a780:	bl	2a5e0 <__ubsan_default_options@@Base+0x24>
   2a784:	bl	6e00 <__ubsan_default_options@plt>
   2a788:	mov	x1, x0
   2a78c:	add	x0, sp, #0x8
   2a790:	mov	x2, xzr
   2a794:	bl	18454 <__sanitizer_set_report_fd@@Base+0x1e10>
   2a798:	adrp	x1, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   2a79c:	add	x1, x1, #0x2c0
   2a7a0:	add	x0, sp, #0x8
   2a7a4:	bl	18350 <__sanitizer_set_report_fd@@Base+0x1d0c>
   2a7a8:	mov	x0, x19
   2a7ac:	bl	17a18 <__sanitizer_set_report_fd@@Base+0x13d4>
   2a7b0:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2a7b4:	ldr	x8, [x8, #3808]
   2a7b8:	ldr	w8, [x8]
   2a7bc:	cbz	w8, 2a7c4 <__ubsan_default_options@@Base+0x208>
   2a7c0:	bl	17c94 <__sanitizer_set_report_fd@@Base+0x1650>
   2a7c4:	ldrb	w8, [x19, #122]
   2a7c8:	cbz	w8, 2a7d4 <__ubsan_default_options@@Base+0x218>
   2a7cc:	add	x0, sp, #0x8
   2a7d0:	bl	17d58 <__sanitizer_set_report_fd@@Base+0x1714>
   2a7d4:	ldp	x20, x19, [sp, #272]
   2a7d8:	ldp	x29, x30, [sp, #256]
   2a7dc:	add	sp, sp, #0x120
   2a7e0:	ret
   2a7e4:	ldrb	w9, [x2]
   2a7e8:	cbz	w9, 2a7f4 <__ubsan_default_options@@Base+0x238>
   2a7ec:	mov	w0, wzr
   2a7f0:	ret
   2a7f4:	mov	x9, #0xfffffffeffffffff    	// #-4294967297
   2a7f8:	cmp	x1, x9
   2a7fc:	b.ls	2a808 <__ubsan_default_options@@Base+0x24c>  // b.plast
   2a800:	mov	w0, #0x1                   	// #1
   2a804:	ret
   2a808:	ldr	x1, [x2, #8]
   2a80c:	mov	x8, x0
   2a810:	mov	w0, w3
   2a814:	mov	x2, x8
   2a818:	b	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>

000000000002a81c <__ubsan_handle_type_mismatch_v1@@Base>:
   2a81c:	sub	sp, sp, #0x30
   2a820:	stp	x29, x30, [sp, #32]
   2a824:	add	x29, sp, #0x20
   2a828:	ldur	w8, [x29, #-8]
   2a82c:	ldur	w9, [x29, #-5]
   2a830:	mov	x2, sp
   2a834:	strb	wzr, [sp]
   2a838:	stur	w8, [sp, #1]
   2a83c:	str	w9, [sp, #4]
   2a840:	stp	x30, x29, [sp, #8]
   2a844:	bl	2a854 <__ubsan_handle_type_mismatch_v1@@Base+0x38>
   2a848:	ldp	x29, x30, [sp, #32]
   2a84c:	add	sp, sp, #0x30
   2a850:	ret
   2a854:	stp	x29, x30, [sp, #-96]!
   2a858:	stp	x28, x27, [sp, #16]
   2a85c:	stp	x26, x25, [sp, #32]
   2a860:	stp	x24, x23, [sp, #48]
   2a864:	stp	x22, x21, [sp, #64]
   2a868:	stp	x20, x19, [sp, #80]
   2a86c:	sub	sp, sp, #0x420
   2a870:	mov	x24, x2
   2a874:	mov	x19, x1
   2a878:	mov	x22, x0
   2a87c:	add	x8, x0, #0xc
   2a880:	mov	w9, #0xffffffff            	// #-1
   2a884:	ldaxr	w28, [x8]
   2a888:	stlxr	w10, w9, [x8]
   2a88c:	cbnz	w10, 2a884 <__ubsan_handle_type_mismatch_v1@@Base+0x68>
   2a890:	ldrb	w8, [x22, #24]
   2a894:	mov	w9, #0x1                   	// #1
   2a898:	ldr	x23, [x22]
   2a89c:	ldr	w29, [x22, #8]
   2a8a0:	lsl	x27, x9, x8
   2a8a4:	ldrb	w12, [x24]
   2a8a8:	sub	x8, x27, #0x1
   2a8ac:	mov	w10, #0x6                   	// #6
   2a8b0:	mov	w11, #0x8                   	// #8
   2a8b4:	tst	x8, x19
   2a8b8:	csel	w8, w11, w10, eq  // eq = none
   2a8bc:	cmp	x19, #0x0
   2a8c0:	csinc	w20, w8, wzr, ne  // ne = any
   2a8c4:	mov	x8, x23
   2a8c8:	cbz	w12, 2a8e0 <__ubsan_handle_type_mismatch_v1@@Base+0xc4>
   2a8cc:	add	x26, sp, #0x414
   2a8d0:	cbz	x8, 2a908 <__ubsan_handle_type_mismatch_v1@@Base+0xec>
   2a8d4:	mov	x21, xzr
   2a8d8:	mov	w25, #0x1                   	// #1
   2a8dc:	b	2a92c <__ubsan_handle_type_mismatch_v1@@Base+0x110>
   2a8e0:	cmn	w28, #0x1
   2a8e4:	b.eq	2abe0 <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>  // b.none
   2a8e8:	ldr	x1, [x24, #8]
   2a8ec:	mov	w0, w20
   2a8f0:	mov	x2, x23
   2a8f4:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2a8f8:	tbnz	w0, #0, 2abe0 <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>
   2a8fc:	ldr	x8, [x22]
   2a900:	add	x26, sp, #0x414
   2a904:	cbnz	x8, 2a8d4 <__ubsan_handle_type_mismatch_v1@@Base+0xb8>
   2a908:	ldr	x8, [x24, #8]
   2a90c:	cbz	x8, 2ac18 <__ubsan_handle_type_mismatch_v1@@Base+0x3fc>
   2a910:	sub	x0, x8, #0x4
   2a914:	bl	29560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d8>
   2a918:	mov	x21, x0
   2a91c:	mov	x23, xzr
   2a920:	mov	w29, wzr
   2a924:	mov	w28, wzr
   2a928:	mov	w25, #0x3                   	// #3
   2a92c:	ldr	q0, [x24]
   2a930:	ldr	x8, [x24, #16]
   2a934:	mov	w24, w29
   2a938:	bfi	x24, x28, #32, #32
   2a93c:	add	x0, sp, #0x3c0
   2a940:	add	x1, sp, #0x3a0
   2a944:	add	x2, sp, #0x378
   2a948:	mov	w3, w20
   2a94c:	str	w25, [sp, #888]
   2a950:	str	x23, [sp, #896]
   2a954:	str	x24, [sp, #904]
   2a958:	str	x8, [sp, #944]
   2a95c:	str	q0, [sp, #928]
   2a960:	str	x21, [sp, #920]
   2a964:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2a968:	cmp	w20, #0x8
   2a96c:	b.eq	2aac0 <__ubsan_handle_type_mismatch_v1@@Base+0x2a4>  // b.none
   2a970:	cmp	w20, #0x6
   2a974:	b.eq	2aa00 <__ubsan_handle_type_mismatch_v1@@Base+0x1e4>  // b.none
   2a978:	cmp	w20, #0x1
   2a97c:	b.ne	2ac00 <__ubsan_handle_type_mismatch_v1@@Base+0x3e4>  // b.any
   2a980:	adrp	x8, 32000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3620>
   2a984:	movi	v0.2d, #0x0
   2a988:	str	d0, [sp, #792]
   2a98c:	str	d0, [sp, #832]
   2a990:	ldr	d0, [x8, #1216]
   2a994:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2a998:	add	x9, x9, #0x6be
   2a99c:	str	w25, [sp, #448]
   2a9a0:	stp	x23, x24, [sp, #456]
   2a9a4:	str	x21, [sp, #480]
   2a9a8:	str	wzr, [sp, #776]
   2a9ac:	str	xzr, [sp, #784]
   2a9b0:	str	wzr, [sp, #816]
   2a9b4:	str	xzr, [sp, #824]
   2a9b8:	str	xzr, [sp, #856]
   2a9bc:	str	wzr, [sp, #864]
   2a9c0:	str	x9, [sp, #496]
   2a9c4:	str	d0, [sp, #488]
   2a9c8:	ldrb	w8, [x22, #25]
   2a9cc:	adrp	x9, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
   2a9d0:	add	x9, x9, #0xc30
   2a9d4:	ldr	x11, [x26]
   2a9d8:	ldr	x8, [x9, x8, lsl #3]
   2a9dc:	ldr	w9, [sp, #1052]
   2a9e0:	mov	w10, #0x1                   	// #1
   2a9e4:	str	w10, [sp, #768]
   2a9e8:	str	wzr, [sp, #512]
   2a9ec:	str	w9, [sp, #524]
   2a9f0:	add	x9, sp, #0x1c0
   2a9f4:	stur	x11, [x9, #68]
   2a9f8:	str	x8, [sp, #528]
   2a9fc:	b	2ab5c <__ubsan_handle_type_mismatch_v1@@Base+0x340>
   2aa00:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aa04:	movi	v0.2d, #0x0
   2aa08:	str	d0, [sp, #792]
   2aa0c:	str	d0, [sp, #832]
   2aa10:	ldr	d0, [x8, #1376]
   2aa14:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aa18:	add	x9, x9, #0x6d9
   2aa1c:	ldr	w8, [sp, #1052]
   2aa20:	str	w25, [sp, #448]
   2aa24:	stp	x23, x24, [sp, #456]
   2aa28:	str	x21, [sp, #480]
   2aa2c:	str	wzr, [sp, #776]
   2aa30:	str	xzr, [sp, #784]
   2aa34:	str	wzr, [sp, #816]
   2aa38:	str	xzr, [sp, #824]
   2aa3c:	str	xzr, [sp, #856]
   2aa40:	str	wzr, [sp, #864]
   2aa44:	str	x9, [sp, #496]
   2aa48:	str	d0, [sp, #488]
   2aa4c:	ldrb	w9, [x22, #25]
   2aa50:	add	x13, sp, #0x414
   2aa54:	str	w8, [sp, #524]
   2aa58:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
   2aa5c:	ldr	x10, [x13]
   2aa60:	add	x8, x8, #0xc30
   2aa64:	ldr	w11, [sp, #1052]
   2aa68:	ldr	x8, [x8, x9, lsl #3]
   2aa6c:	ldr	x9, [x13]
   2aa70:	add	x12, sp, #0x1c0
   2aa74:	str	wzr, [sp, #512]
   2aa78:	stur	x10, [x12, #68]
   2aa7c:	mov	w10, #0x5                   	// #5
   2aa80:	str	w10, [sp, #544]
   2aa84:	str	w11, [sp, #556]
   2aa88:	str	x8, [sp, #528]
   2aa8c:	ldr	x11, [x13]
   2aa90:	stur	x9, [x12, #100]
   2aa94:	ldr	w9, [sp, #1052]
   2aa98:	mov	w10, #0x3                   	// #3
   2aa9c:	mov	w8, #0x2                   	// #2
   2aaa0:	str	x19, [sp, #560]
   2aaa4:	str	w10, [sp, #768]
   2aaa8:	str	w8, [sp, #576]
   2aaac:	str	w9, [sp, #588]
   2aab0:	stur	x11, [x12, #132]
   2aab4:	str	xzr, [sp, #600]
   2aab8:	str	x27, [sp, #592]
   2aabc:	b	2ab5c <__ubsan_handle_type_mismatch_v1@@Base+0x340>
   2aac0:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aac4:	movi	v0.2d, #0x0
   2aac8:	str	d0, [sp, #792]
   2aacc:	str	d0, [sp, #832]
   2aad0:	ldr	d0, [x8, #1368]
   2aad4:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aad8:	add	x13, sp, #0x414
   2aadc:	ldr	w8, [sp, #1052]
   2aae0:	add	x9, x9, #0x720
   2aae4:	ldr	x10, [x13]
   2aae8:	str	w25, [sp, #448]
   2aaec:	stp	x23, x24, [sp, #456]
   2aaf0:	str	x21, [sp, #480]
   2aaf4:	str	wzr, [sp, #776]
   2aaf8:	str	xzr, [sp, #784]
   2aafc:	str	wzr, [sp, #816]
   2ab00:	str	xzr, [sp, #824]
   2ab04:	str	xzr, [sp, #856]
   2ab08:	str	wzr, [sp, #864]
   2ab0c:	str	x9, [sp, #496]
   2ab10:	str	d0, [sp, #488]
   2ab14:	ldrb	w9, [x22, #25]
   2ab18:	str	w8, [sp, #524]
   2ab1c:	add	x12, sp, #0x1c0
   2ab20:	mov	w8, #0x2                   	// #2
   2ab24:	str	wzr, [sp, #512]
   2ab28:	stur	x10, [x12, #68]
   2ab2c:	str	w8, [sp, #768]
   2ab30:	adrp	x8, 54000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25620>
   2ab34:	add	x8, x8, #0xc30
   2ab38:	ldr	w11, [sp, #1052]
   2ab3c:	ldr	x8, [x8, x9, lsl #3]
   2ab40:	ldr	x10, [x13]
   2ab44:	mov	w9, #0x5                   	// #5
   2ab48:	str	w9, [sp, #544]
   2ab4c:	str	w11, [sp, #556]
   2ab50:	str	x8, [sp, #528]
   2ab54:	stur	x10, [x12, #100]
   2ab58:	str	x19, [sp, #560]
   2ab5c:	ldr	x1, [x22, #16]
   2ab60:	add	x0, sp, #0x1c0
   2ab64:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2ab68:	add	x0, sp, #0x1c0
   2ab6c:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2ab70:	cbz	x19, 2abcc <__ubsan_handle_type_mismatch_v1@@Base+0x3b0>
   2ab74:	mov	w8, #0x2                   	// #2
   2ab78:	str	w8, [sp, #16]
   2ab7c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ab80:	movi	v0.2d, #0x0
   2ab84:	mov	w9, #0x1                   	// #1
   2ab88:	add	x8, x8, #0x7ce
   2ab8c:	add	x0, sp, #0x10
   2ab90:	str	xzr, [sp, #24]
   2ab94:	str	x19, [sp, #40]
   2ab98:	str	wzr, [sp, #336]
   2ab9c:	str	wzr, [sp, #344]
   2aba0:	str	xzr, [sp, #352]
   2aba4:	str	wzr, [sp, #384]
   2aba8:	str	xzr, [sp, #392]
   2abac:	str	xzr, [sp, #424]
   2abb0:	str	d0, [sp, #32]
   2abb4:	stp	w9, w20, [sp, #56]
   2abb8:	str	x8, [sp, #64]
   2abbc:	str	d0, [sp, #360]
   2abc0:	str	d0, [sp, #400]
   2abc4:	str	wzr, [sp, #432]
   2abc8:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2abcc:	add	x0, sp, #0x3c0
   2abd0:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2abd4:	cbz	x21, 2abe0 <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>
   2abd8:	mov	x0, x21
   2abdc:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2abe0:	add	sp, sp, #0x420
   2abe4:	ldp	x20, x19, [sp, #80]
   2abe8:	ldp	x22, x21, [sp, #64]
   2abec:	ldp	x24, x23, [sp, #48]
   2abf0:	ldp	x26, x25, [sp, #32]
   2abf4:	ldp	x28, x27, [sp, #16]
   2abf8:	ldp	x29, x30, [sp], #96
   2abfc:	ret
   2ac00:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ac04:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ac08:	add	x0, x0, #0x75f
   2ac0c:	add	x2, x2, #0x7a5
   2ac10:	mov	w1, #0x59                  	// #89
   2ac14:	b	2ac2c <__ubsan_handle_type_mismatch_v1@@Base+0x410>
   2ac18:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2ac1c:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ac20:	add	x0, x0, #0xf13
   2ac24:	add	x2, x2, #0x7e2
   2ac28:	mov	w1, #0x2c                  	// #44
   2ac2c:	mov	x3, xzr
   2ac30:	mov	x4, xzr
   2ac34:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002ac38 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
   2ac38:	sub	sp, sp, #0x30
   2ac3c:	stp	x29, x30, [sp, #32]
   2ac40:	add	x29, sp, #0x20
   2ac44:	ldur	w8, [x29, #-8]
   2ac48:	ldur	w9, [x29, #-5]
   2ac4c:	mov	w10, #0x1                   	// #1
   2ac50:	mov	x2, sp
   2ac54:	strb	w10, [sp]
   2ac58:	stur	w8, [sp, #1]
   2ac5c:	str	w9, [sp, #4]
   2ac60:	stp	x30, x29, [sp, #8]
   2ac64:	bl	2a854 <__ubsan_handle_type_mismatch_v1@@Base+0x38>
   2ac68:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002ac6c <__ubsan_handle_alignment_assumption@@Base>:
   2ac6c:	sub	sp, sp, #0x30
   2ac70:	stp	x29, x30, [sp, #32]
   2ac74:	add	x29, sp, #0x20
   2ac78:	ldur	w8, [x29, #-8]
   2ac7c:	ldur	w9, [x29, #-5]
   2ac80:	mov	x4, sp
   2ac84:	strb	wzr, [sp]
   2ac88:	stur	w8, [sp, #1]
   2ac8c:	str	w9, [sp, #4]
   2ac90:	stp	x30, x29, [sp, #8]
   2ac94:	bl	2aca4 <__ubsan_handle_alignment_assumption@@Base+0x38>
   2ac98:	ldp	x29, x30, [sp, #32]
   2ac9c:	add	sp, sp, #0x30
   2aca0:	ret
   2aca4:	stp	x29, x30, [sp, #-96]!
   2aca8:	stp	x28, x27, [sp, #16]
   2acac:	stp	x26, x25, [sp, #32]
   2acb0:	stp	x24, x23, [sp, #48]
   2acb4:	stp	x22, x21, [sp, #64]
   2acb8:	stp	x20, x19, [sp, #80]
   2acbc:	sub	sp, sp, #0x460
   2acc0:	mov	x24, x4
   2acc4:	mov	x19, x3
   2acc8:	mov	x21, x2
   2accc:	mov	x22, x1
   2acd0:	mov	x20, x0
   2acd4:	add	x25, sp, #0x3a8
   2acd8:	add	x9, x0, #0xc
   2acdc:	mov	w10, #0xffffffff            	// #-1
   2ace0:	ldaxr	w8, [x9]
   2ace4:	stlxr	w11, w10, [x9]
   2ace8:	cbnz	w11, 2ace0 <__ubsan_handle_alignment_assumption@@Base+0x74>
   2acec:	ldr	w27, [x20, #8]
   2acf0:	ldr	x23, [x20]
   2acf4:	add	x9, x20, #0x1c
   2acf8:	bfi	x27, x8, #32, #32
   2acfc:	mov	w8, #0xffffffff            	// #-1
   2ad00:	ldaxr	w28, [x9]
   2ad04:	stlxr	w10, w8, [x9]
   2ad08:	cbnz	w10, 2ad00 <__ubsan_handle_alignment_assumption@@Base+0x94>
   2ad0c:	ldr	x26, [x20, #16]
   2ad10:	ldrb	w8, [x24]
   2ad14:	ldr	w29, [x20, #24]
   2ad18:	cbz	w8, 2ae14 <__ubsan_handle_alignment_assumption@@Base+0x1a8>
   2ad1c:	ldr	q0, [x24]
   2ad20:	ldr	x8, [x24, #16]
   2ad24:	ldr	q1, [sp, #1088]
   2ad28:	mov	w9, #0x1                   	// #1
   2ad2c:	add	x0, sp, #0x3f0
   2ad30:	add	x1, sp, #0x3d0
   2ad34:	add	x2, sp, #0x3a8
   2ad38:	mov	w3, #0x7                   	// #7
   2ad3c:	str	x26, [sp, #8]
   2ad40:	str	x23, [sp, #944]
   2ad44:	str	x27, [sp, #952]
   2ad48:	str	w9, [sp, #936]
   2ad4c:	str	x8, [sp, #992]
   2ad50:	str	q0, [sp, #976]
   2ad54:	stur	q1, [x25, #24]
   2ad58:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2ad5c:	subs	x22, x22, x19
   2ad60:	b.eq	2b028 <__ubsan_handle_alignment_assumption@@Base+0x3bc>  // b.none
   2ad64:	rbit	x8, x22
   2ad68:	mov	w24, #0x1                   	// #1
   2ad6c:	clz	x25, x8
   2ad70:	sub	x26, x21, #0x1
   2ad74:	cbz	x19, 2ae38 <__ubsan_handle_alignment_assumption@@Base+0x1cc>
   2ad78:	ldr	q0, [sp, #1088]
   2ad7c:	ldr	w10, [sp, #1116]
   2ad80:	stp	x23, x27, [sp, #504]
   2ad84:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ad88:	add	x27, sp, #0x1f0
   2ad8c:	add	x11, sp, #0x3a8
   2ad90:	str	w24, [sp, #496]
   2ad94:	ldr	d2, [x8, #1384]
   2ad98:	stur	q0, [x27, #24]
   2ad9c:	str	w10, [sp, #572]
   2ada0:	ldur	x10, [x11, #172]
   2ada4:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ada8:	movi	v1.2d, #0x0
   2adac:	add	x8, x8, #0x834
   2adb0:	mov	w9, #0x2                   	// #2
   2adb4:	str	d1, [sp, #840]
   2adb8:	str	d1, [sp, #880]
   2adbc:	str	d2, [sp, #536]
   2adc0:	str	x8, [sp, #544]
   2adc4:	ldr	w8, [sp, #1116]
   2adc8:	str	w9, [sp, #560]
   2adcc:	str	wzr, [sp, #824]
   2add0:	str	xzr, [sp, #832]
   2add4:	str	wzr, [sp, #864]
   2add8:	str	xzr, [sp, #872]
   2addc:	str	xzr, [sp, #904]
   2ade0:	str	wzr, [sp, #912]
   2ade4:	stur	x10, [x27, #68]
   2ade8:	ldur	x10, [x11, #172]
   2adec:	str	q0, [sp, #464]
   2adf0:	str	xzr, [sp, #584]
   2adf4:	str	x21, [sp, #576]
   2adf8:	str	w9, [sp, #816]
   2adfc:	str	w9, [sp, #592]
   2ae00:	str	w8, [sp, #604]
   2ae04:	stur	x10, [x27, #100]
   2ae08:	str	xzr, [sp, #616]
   2ae0c:	str	x19, [sp, #608]
   2ae10:	b	2aeb4 <__ubsan_handle_alignment_assumption@@Base+0x248>
   2ae14:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2ae18:	cmp	x27, x8
   2ae1c:	b.hi	2b008 <__ubsan_handle_alignment_assumption@@Base+0x39c>  // b.pmore
   2ae20:	ldr	x1, [x24, #8]
   2ae24:	mov	w0, #0x7                   	// #7
   2ae28:	mov	x2, x23
   2ae2c:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2ae30:	tbz	w0, #0, 2ad1c <__ubsan_handle_alignment_assumption@@Base+0xb0>
   2ae34:	b	2b008 <__ubsan_handle_alignment_assumption@@Base+0x39c>
   2ae38:	ldr	q0, [sp, #1088]
   2ae3c:	stp	x23, x27, [sp, #504]
   2ae40:	add	x27, sp, #0x1f0
   2ae44:	str	w24, [sp, #496]
   2ae48:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ae4c:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ae50:	str	q0, [sp, #480]
   2ae54:	stur	q0, [x27, #24]
   2ae58:	movi	v0.2d, #0x0
   2ae5c:	add	x9, x9, #0x7f6
   2ae60:	str	d0, [sp, #840]
   2ae64:	str	d0, [sp, #880]
   2ae68:	ldr	d0, [x8, #1384]
   2ae6c:	add	x8, sp, #0x3a8
   2ae70:	ldur	x8, [x8, #172]
   2ae74:	str	x9, [sp, #544]
   2ae78:	ldr	w9, [sp, #1116]
   2ae7c:	mov	w10, #0x2                   	// #2
   2ae80:	str	wzr, [sp, #824]
   2ae84:	str	xzr, [sp, #832]
   2ae88:	str	wzr, [sp, #864]
   2ae8c:	str	xzr, [sp, #872]
   2ae90:	str	xzr, [sp, #904]
   2ae94:	str	wzr, [sp, #912]
   2ae98:	str	w24, [sp, #816]
   2ae9c:	str	w10, [sp, #560]
   2aea0:	str	w9, [sp, #572]
   2aea4:	str	d0, [sp, #536]
   2aea8:	stur	x8, [x27, #68]
   2aeac:	str	xzr, [sp, #584]
   2aeb0:	str	x21, [sp, #576]
   2aeb4:	ldr	x1, [x20, #32]
   2aeb8:	add	x0, sp, #0x1f0
   2aebc:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2aec0:	add	x0, sp, #0x1f0
   2aec4:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2aec8:	ldr	x9, [sp, #8]
   2aecc:	lsl	x21, x24, x25
   2aed0:	and	x20, x22, x26
   2aed4:	adrp	x23, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aed8:	cbz	x9, 2af38 <__ubsan_handle_alignment_assumption@@Base+0x2cc>
   2aedc:	ldr	q0, [sp, #16]
   2aee0:	mov	w8, #0x1                   	// #1
   2aee4:	str	w8, [sp, #32]
   2aee8:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2aeec:	stur	q0, [sp, #56]
   2aef0:	ldr	d0, [x23, #1392]
   2aef4:	movi	v1.2d, #0x0
   2aef8:	bfi	x29, x28, #32, #32
   2aefc:	add	x8, x8, #0x88b
   2af00:	add	x0, sp, #0x20
   2af04:	str	d1, [sp, #376]
   2af08:	str	d1, [sp, #416]
   2af0c:	str	wzr, [sp, #352]
   2af10:	str	wzr, [sp, #360]
   2af14:	str	xzr, [sp, #368]
   2af18:	str	wzr, [sp, #400]
   2af1c:	str	xzr, [sp, #408]
   2af20:	str	xzr, [sp, #440]
   2af24:	stp	x9, x29, [sp, #40]
   2af28:	str	x8, [sp, #80]
   2af2c:	str	d0, [sp, #72]
   2af30:	str	wzr, [sp, #448]
   2af34:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2af38:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2af3c:	add	x9, x9, #0x8b3
   2af40:	add	x12, sp, #0x3a8
   2af44:	ldr	d1, [x23, #1392]
   2af48:	str	x9, [sp, #544]
   2af4c:	ldur	x9, [x12, #172]
   2af50:	adrp	x10, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2af54:	adrp	x11, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2af58:	mov	w8, #0x2                   	// #2
   2af5c:	movi	v0.2d, #0x0
   2af60:	add	x10, x10, #0xcf
   2af64:	cmp	x19, #0x0
   2af68:	add	x11, x11, #0x8ec
   2af6c:	str	xzr, [sp, #504]
   2af70:	str	x22, [sp, #520]
   2af74:	str	xzr, [sp, #832]
   2af78:	str	wzr, [sp, #864]
   2af7c:	str	xzr, [sp, #872]
   2af80:	str	xzr, [sp, #904]
   2af84:	str	wzr, [sp, #912]
   2af88:	str	wzr, [sp, #824]
   2af8c:	str	wzr, [sp, #560]
   2af90:	str	w8, [sp, #496]
   2af94:	str	d0, [sp, #512]
   2af98:	str	d0, [sp, #840]
   2af9c:	str	d0, [sp, #880]
   2afa0:	csel	x10, x11, x10, ne  // ne = any
   2afa4:	ldr	w11, [sp, #1116]
   2afa8:	str	d1, [sp, #536]
   2afac:	stur	x9, [x27, #68]
   2afb0:	ldr	w9, [sp, #1116]
   2afb4:	str	w11, [sp, #572]
   2afb8:	ldur	x11, [x12, #172]
   2afbc:	ldur	x12, [x12, #172]
   2afc0:	str	w9, [sp, #604]
   2afc4:	ldr	w9, [sp, #1116]
   2afc8:	str	x10, [sp, #576]
   2afcc:	mov	w10, #0x3                   	// #3
   2afd0:	add	x0, sp, #0x1f0
   2afd4:	str	w8, [sp, #592]
   2afd8:	stur	x11, [x27, #100]
   2afdc:	str	xzr, [sp, #616]
   2afe0:	str	x21, [sp, #608]
   2afe4:	str	w10, [sp, #816]
   2afe8:	str	w8, [sp, #624]
   2afec:	str	w9, [sp, #636]
   2aff0:	stur	x12, [x27, #132]
   2aff4:	str	xzr, [sp, #648]
   2aff8:	str	x20, [sp, #640]
   2affc:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2b000:	add	x0, sp, #0x3f0
   2b004:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2b008:	add	sp, sp, #0x460
   2b00c:	ldp	x20, x19, [sp, #80]
   2b010:	ldp	x22, x21, [sp, #64]
   2b014:	ldp	x24, x23, [sp, #48]
   2b018:	ldp	x26, x25, [sp, #32]
   2b01c:	ldp	x28, x27, [sp, #16]
   2b020:	ldp	x29, x30, [sp], #96
   2b024:	ret
   2b028:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2b02c:	adrp	x2, 2f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x620>
   2b030:	add	x0, x0, #0xf71
   2b034:	add	x2, x2, #0xe2b
   2b038:	mov	w1, #0x171                 	// #369
   2b03c:	mov	x3, xzr
   2b040:	mov	x4, xzr
   2b044:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002b048 <__ubsan_handle_alignment_assumption_abort@@Base>:
   2b048:	sub	sp, sp, #0x30
   2b04c:	stp	x29, x30, [sp, #32]
   2b050:	add	x29, sp, #0x20
   2b054:	ldur	w8, [x29, #-8]
   2b058:	ldur	w9, [x29, #-5]
   2b05c:	mov	w10, #0x1                   	// #1
   2b060:	mov	x4, sp
   2b064:	strb	w10, [sp]
   2b068:	stur	w8, [sp, #1]
   2b06c:	str	w9, [sp, #4]
   2b070:	stp	x30, x29, [sp, #8]
   2b074:	bl	2aca4 <__ubsan_handle_alignment_assumption@@Base+0x38>
   2b078:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b07c <__ubsan_handle_add_overflow@@Base>:
   2b07c:	sub	sp, sp, #0x30
   2b080:	stp	x29, x30, [sp, #32]
   2b084:	add	x29, sp, #0x20
   2b088:	ldur	w8, [x29, #-8]
   2b08c:	ldur	w9, [x29, #-5]
   2b090:	ldr	x3, [x0, #16]
   2b094:	mov	x4, x2
   2b098:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b09c:	add	x2, x2, #0x6ba
   2b0a0:	mov	x5, sp
   2b0a4:	strb	wzr, [sp]
   2b0a8:	stur	w8, [sp, #1]
   2b0ac:	str	w9, [sp, #4]
   2b0b0:	stp	x30, x29, [sp, #8]
   2b0b4:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b0b8:	ldp	x29, x30, [sp, #32]
   2b0bc:	add	sp, sp, #0x30
   2b0c0:	ret
   2b0c4:	str	x29, [sp, #-96]!
   2b0c8:	stp	x30, x27, [sp, #16]
   2b0cc:	stp	x26, x25, [sp, #32]
   2b0d0:	stp	x24, x23, [sp, #48]
   2b0d4:	stp	x22, x21, [sp, #64]
   2b0d8:	stp	x20, x19, [sp, #80]
   2b0dc:	sub	sp, sp, #0x290
   2b0e0:	mov	x22, x5
   2b0e4:	mov	x20, x2
   2b0e8:	mov	x21, x1
   2b0ec:	mov	x19, x0
   2b0f0:	add	x25, sp, #0x284
   2b0f4:	add	x9, x0, #0xc
   2b0f8:	mov	w10, #0xffffffff            	// #-1
   2b0fc:	str	x3, [sp, #624]
   2b100:	str	x4, [sp, #632]
   2b104:	ldaxr	w8, [x9]
   2b108:	stlxr	w11, w10, [x9]
   2b10c:	cbnz	w11, 2b104 <__ubsan_handle_add_overflow@@Base+0x88>
   2b110:	ldr	x9, [x19, #16]
   2b114:	ldr	x24, [x19]
   2b118:	ldr	w27, [x19, #8]
   2b11c:	ldrh	w10, [x9]
   2b120:	cbz	w10, 2b13c <__ubsan_handle_add_overflow@@Base+0xc0>
   2b124:	mov	w26, wzr
   2b128:	mov	w23, #0xa                   	// #10
   2b12c:	ldrb	w9, [x22]
   2b130:	bfi	x27, x8, #32, #32
   2b134:	cbnz	w9, 2b17c <__ubsan_handle_add_overflow@@Base+0x100>
   2b138:	b	2b15c <__ubsan_handle_add_overflow@@Base+0xe0>
   2b13c:	ldrh	w9, [x9, #2]
   2b140:	and	w26, w9, #0x1
   2b144:	tst	w9, #0x1
   2b148:	mov	w9, #0x9                   	// #9
   2b14c:	cinc	w23, w9, eq  // eq = none
   2b150:	ldrb	w9, [x22]
   2b154:	bfi	x27, x8, #32, #32
   2b158:	cbnz	w9, 2b17c <__ubsan_handle_add_overflow@@Base+0x100>
   2b15c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2b160:	cmp	x27, x8
   2b164:	b.hi	2b2a8 <__ubsan_handle_add_overflow@@Base+0x22c>  // b.pmore
   2b168:	ldr	x1, [x22, #8]
   2b16c:	mov	w0, w23
   2b170:	mov	x2, x24
   2b174:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2b178:	tbnz	w0, #0, 2b2a8 <__ubsan_handle_add_overflow@@Base+0x22c>
   2b17c:	tbz	w26, #0, 2b290 <__ubsan_handle_add_overflow@@Base+0x214>
   2b180:	ldr	x8, [x22, #16]
   2b184:	ldr	q0, [x22]
   2b188:	mov	w22, #0x1                   	// #1
   2b18c:	add	x0, sp, #0x220
   2b190:	add	x1, sp, #0x200
   2b194:	add	x2, sp, #0x1d8
   2b198:	mov	w3, w23
   2b19c:	str	w22, [sp, #472]
   2b1a0:	str	x8, [sp, #528]
   2b1a4:	str	q0, [sp, #512]
   2b1a8:	stp	x24, x27, [sp, #480]
   2b1ac:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2b1b0:	movi	v0.2d, #0x0
   2b1b4:	str	d0, [sp, #376]
   2b1b8:	str	d0, [sp, #416]
   2b1bc:	ldr	q0, [sp, #16]
   2b1c0:	ldr	x11, [x25]
   2b1c4:	ldr	w12, [sp, #652]
   2b1c8:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2b1cc:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2b1d0:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2b1d4:	add	x8, x8, #0x21
   2b1d8:	add	x9, x9, #0x60
   2b1dc:	add	x10, x10, #0x62
   2b1e0:	cmp	w26, #0x0
   2b1e4:	str	x8, [sp, #80]
   2b1e8:	csel	x8, x10, x9, ne  // ne = any
   2b1ec:	str	w22, [sp, #32]
   2b1f0:	stp	x24, x27, [sp, #40]
   2b1f4:	stp	wzr, w23, [sp, #72]
   2b1f8:	str	wzr, [sp, #360]
   2b1fc:	str	xzr, [sp, #368]
   2b200:	str	wzr, [sp, #400]
   2b204:	str	xzr, [sp, #408]
   2b208:	str	xzr, [sp, #440]
   2b20c:	str	wzr, [sp, #448]
   2b210:	str	w22, [sp, #352]
   2b214:	str	wzr, [sp, #96]
   2b218:	str	x8, [sp, #112]
   2b21c:	stur	q0, [sp, #56]
   2b220:	str	w12, [sp, #108]
   2b224:	stur	x11, [sp, #100]
   2b228:	ldr	x8, [x19, #16]
   2b22c:	add	x0, sp, #0x20
   2b230:	mov	x1, sp
   2b234:	stp	x8, x21, [sp]
   2b238:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2b23c:	ldr	w8, [x0, #320]
   2b240:	cmp	w8, #0x8
   2b244:	b.eq	2b2c8 <__ubsan_handle_add_overflow@@Base+0x24c>  // b.none
   2b248:	add	w9, w8, #0x1
   2b24c:	add	x8, x0, x8, lsl #5
   2b250:	str	w9, [x0, #320]
   2b254:	str	wzr, [x8, #64]
   2b258:	ldr	w9, [sp, #652]
   2b25c:	ldr	x10, [x25]
   2b260:	add	x1, sp, #0x270
   2b264:	str	x20, [x8, #80]
   2b268:	str	w9, [x8, #76]
   2b26c:	stur	x10, [x8, #68]
   2b270:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2b274:	ldr	x1, [x19, #16]
   2b278:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2b27c:	add	x0, sp, #0x20
   2b280:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2b284:	add	x0, sp, #0x220
   2b288:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2b28c:	b	2b2a8 <__ubsan_handle_add_overflow@@Base+0x22c>
   2b290:	ldrb	w8, [x22]
   2b294:	cbnz	w8, 2b180 <__ubsan_handle_add_overflow@@Base+0x104>
   2b298:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2b29c:	ldr	x8, [x8, #3696]
   2b2a0:	ldrb	w8, [x8, #17]
   2b2a4:	cbz	w8, 2b180 <__ubsan_handle_add_overflow@@Base+0x104>
   2b2a8:	add	sp, sp, #0x290
   2b2ac:	ldp	x20, x19, [sp, #80]
   2b2b0:	ldp	x22, x21, [sp, #64]
   2b2b4:	ldp	x24, x23, [sp, #48]
   2b2b8:	ldp	x26, x25, [sp, #32]
   2b2bc:	ldp	x30, x27, [sp, #16]
   2b2c0:	ldr	x29, [sp], #96
   2b2c4:	ret
   2b2c8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2b2cc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2b2d0:	add	x0, x0, #0xf13
   2b2d4:	add	x2, x2, #0xf53
   2b2d8:	mov	w1, #0xc0                  	// #192
   2b2dc:	mov	x3, xzr
   2b2e0:	mov	x4, xzr
   2b2e4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002b2e8 <__ubsan_handle_add_overflow_abort@@Base>:
   2b2e8:	sub	sp, sp, #0x30
   2b2ec:	stp	x29, x30, [sp, #32]
   2b2f0:	add	x29, sp, #0x20
   2b2f4:	ldr	x3, [x0, #16]
   2b2f8:	ldur	w8, [x29, #-8]
   2b2fc:	ldur	w9, [x29, #-5]
   2b300:	mov	x4, x2
   2b304:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b308:	mov	w10, #0x1                   	// #1
   2b30c:	add	x2, x2, #0x6ba
   2b310:	mov	x5, sp
   2b314:	strb	w10, [sp]
   2b318:	stur	w8, [sp, #1]
   2b31c:	str	w9, [sp, #4]
   2b320:	stp	x30, x29, [sp, #8]
   2b324:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b328:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b32c <__ubsan_handle_sub_overflow@@Base>:
   2b32c:	sub	sp, sp, #0x30
   2b330:	stp	x29, x30, [sp, #32]
   2b334:	add	x29, sp, #0x20
   2b338:	ldur	w8, [x29, #-8]
   2b33c:	ldur	w9, [x29, #-5]
   2b340:	ldr	x3, [x0, #16]
   2b344:	mov	x4, x2
   2b348:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2b34c:	add	x2, x2, #0x142
   2b350:	mov	x5, sp
   2b354:	strb	wzr, [sp]
   2b358:	stur	w8, [sp, #1]
   2b35c:	str	w9, [sp, #4]
   2b360:	stp	x30, x29, [sp, #8]
   2b364:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b368:	ldp	x29, x30, [sp, #32]
   2b36c:	add	sp, sp, #0x30
   2b370:	ret

000000000002b374 <__ubsan_handle_sub_overflow_abort@@Base>:
   2b374:	sub	sp, sp, #0x30
   2b378:	stp	x29, x30, [sp, #32]
   2b37c:	add	x29, sp, #0x20
   2b380:	ldr	x3, [x0, #16]
   2b384:	ldur	w8, [x29, #-8]
   2b388:	ldur	w9, [x29, #-5]
   2b38c:	mov	x4, x2
   2b390:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2b394:	mov	w10, #0x1                   	// #1
   2b398:	add	x2, x2, #0x142
   2b39c:	mov	x5, sp
   2b3a0:	strb	w10, [sp]
   2b3a4:	stur	w8, [sp, #1]
   2b3a8:	str	w9, [sp, #4]
   2b3ac:	stp	x30, x29, [sp, #8]
   2b3b0:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b3b4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b3b8 <__ubsan_handle_mul_overflow@@Base>:
   2b3b8:	sub	sp, sp, #0x30
   2b3bc:	stp	x29, x30, [sp, #32]
   2b3c0:	add	x29, sp, #0x20
   2b3c4:	ldur	w8, [x29, #-8]
   2b3c8:	ldur	w9, [x29, #-5]
   2b3cc:	ldr	x3, [x0, #16]
   2b3d0:	mov	x4, x2
   2b3d4:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b3d8:	add	x2, x2, #0x6bc
   2b3dc:	mov	x5, sp
   2b3e0:	strb	wzr, [sp]
   2b3e4:	stur	w8, [sp, #1]
   2b3e8:	str	w9, [sp, #4]
   2b3ec:	stp	x30, x29, [sp, #8]
   2b3f0:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b3f4:	ldp	x29, x30, [sp, #32]
   2b3f8:	add	sp, sp, #0x30
   2b3fc:	ret

000000000002b400 <__ubsan_handle_mul_overflow_abort@@Base>:
   2b400:	sub	sp, sp, #0x30
   2b404:	stp	x29, x30, [sp, #32]
   2b408:	add	x29, sp, #0x20
   2b40c:	ldr	x3, [x0, #16]
   2b410:	ldur	w8, [x29, #-8]
   2b414:	ldur	w9, [x29, #-5]
   2b418:	mov	x4, x2
   2b41c:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b420:	mov	w10, #0x1                   	// #1
   2b424:	add	x2, x2, #0x6bc
   2b428:	mov	x5, sp
   2b42c:	strb	w10, [sp]
   2b430:	stur	w8, [sp, #1]
   2b434:	str	w9, [sp, #4]
   2b438:	stp	x30, x29, [sp, #8]
   2b43c:	bl	2b0c4 <__ubsan_handle_add_overflow@@Base+0x48>
   2b440:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b444 <__ubsan_handle_negate_overflow@@Base>:
   2b444:	sub	sp, sp, #0x30
   2b448:	stp	x29, x30, [sp, #32]
   2b44c:	add	x29, sp, #0x20
   2b450:	ldur	w8, [x29, #-8]
   2b454:	ldur	w9, [x29, #-5]
   2b458:	mov	x2, sp
   2b45c:	strb	wzr, [sp]
   2b460:	stur	w8, [sp, #1]
   2b464:	str	w9, [sp, #4]
   2b468:	stp	x30, x29, [sp, #8]
   2b46c:	bl	2b47c <__ubsan_handle_negate_overflow@@Base+0x38>
   2b470:	ldp	x29, x30, [sp, #32]
   2b474:	add	sp, sp, #0x30
   2b478:	ret
   2b47c:	str	x29, [sp, #-80]!
   2b480:	stp	x30, x25, [sp, #16]
   2b484:	stp	x24, x23, [sp, #32]
   2b488:	stp	x22, x21, [sp, #48]
   2b48c:	stp	x20, x19, [sp, #64]
   2b490:	sub	sp, sp, #0x280
   2b494:	mov	x23, x2
   2b498:	mov	x20, x1
   2b49c:	mov	x19, x0
   2b4a0:	add	x9, x0, #0xc
   2b4a4:	mov	w10, #0xffffffff            	// #-1
   2b4a8:	ldaxr	w8, [x9]
   2b4ac:	stlxr	w11, w10, [x9]
   2b4b0:	cbnz	w11, 2b4a8 <__ubsan_handle_negate_overflow@@Base+0x64>
   2b4b4:	ldr	x9, [x19, #16]
   2b4b8:	ldr	x22, [x19]
   2b4bc:	ldr	w24, [x19, #8]
   2b4c0:	ldrh	w10, [x9]
   2b4c4:	cbz	w10, 2b4e0 <__ubsan_handle_negate_overflow@@Base+0x9c>
   2b4c8:	mov	w25, wzr
   2b4cc:	mov	w21, #0xa                   	// #10
   2b4d0:	ldrb	w9, [x23]
   2b4d4:	bfi	x24, x8, #32, #32
   2b4d8:	cbnz	w9, 2b520 <__ubsan_handle_negate_overflow@@Base+0xdc>
   2b4dc:	b	2b500 <__ubsan_handle_negate_overflow@@Base+0xbc>
   2b4e0:	ldrh	w9, [x9, #2]
   2b4e4:	and	w25, w9, #0x1
   2b4e8:	tst	w9, #0x1
   2b4ec:	mov	w9, #0x9                   	// #9
   2b4f0:	cinc	w21, w9, eq  // eq = none
   2b4f4:	ldrb	w9, [x23]
   2b4f8:	bfi	x24, x8, #32, #32
   2b4fc:	cbnz	w9, 2b520 <__ubsan_handle_negate_overflow@@Base+0xdc>
   2b500:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2b504:	cmp	x24, x8
   2b508:	b.hi	2b60c <__ubsan_handle_negate_overflow@@Base+0x1c8>  // b.pmore
   2b50c:	ldr	x1, [x23, #8]
   2b510:	mov	w0, w21
   2b514:	mov	x2, x22
   2b518:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2b51c:	tbnz	w0, #0, 2b60c <__ubsan_handle_negate_overflow@@Base+0x1c8>
   2b520:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2b524:	ldr	x8, [x8, #3696]
   2b528:	ldrb	w8, [x8, #17]
   2b52c:	cmp	w8, #0x0
   2b530:	cset	w8, ne  // ne = any
   2b534:	bic	w8, w8, w25
   2b538:	tbnz	w8, #0, 2b60c <__ubsan_handle_negate_overflow@@Base+0x1c8>
   2b53c:	ldr	x8, [x23, #16]
   2b540:	ldr	q0, [x23]
   2b544:	mov	w23, #0x1                   	// #1
   2b548:	add	x0, sp, #0x230
   2b54c:	add	x1, sp, #0x210
   2b550:	add	x2, sp, #0x1e8
   2b554:	mov	w3, w21
   2b558:	str	w23, [sp, #488]
   2b55c:	str	x8, [sp, #544]
   2b560:	str	q0, [sp, #528]
   2b564:	stp	x22, x24, [sp, #496]
   2b568:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2b56c:	cbz	w25, 2b598 <__ubsan_handle_negate_overflow@@Base+0x154>
   2b570:	movi	v0.2d, #0x0
   2b574:	str	d0, [sp, #392]
   2b578:	str	d0, [sp, #432]
   2b57c:	ldr	q0, [sp, #32]
   2b580:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b584:	str	w23, [sp, #48]
   2b588:	stp	x22, x24, [sp, #56]
   2b58c:	stp	wzr, w21, [sp, #88]
   2b590:	add	x8, x8, #0x8f4
   2b594:	b	2b5bc <__ubsan_handle_negate_overflow@@Base+0x178>
   2b598:	movi	v0.2d, #0x0
   2b59c:	str	d0, [sp, #392]
   2b5a0:	str	d0, [sp, #432]
   2b5a4:	ldr	q0, [sp]
   2b5a8:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b5ac:	add	x8, x8, #0x95d
   2b5b0:	str	w23, [sp, #48]
   2b5b4:	stp	x22, x24, [sp, #56]
   2b5b8:	stp	wzr, w21, [sp, #88]
   2b5bc:	str	wzr, [sp, #368]
   2b5c0:	str	wzr, [sp, #376]
   2b5c4:	str	xzr, [sp, #384]
   2b5c8:	str	wzr, [sp, #416]
   2b5cc:	str	xzr, [sp, #424]
   2b5d0:	str	xzr, [sp, #456]
   2b5d4:	str	wzr, [sp, #464]
   2b5d8:	str	x8, [sp, #96]
   2b5dc:	stur	q0, [sp, #72]
   2b5e0:	ldr	x8, [x19, #16]
   2b5e4:	add	x0, sp, #0x30
   2b5e8:	add	x1, sp, #0x10
   2b5ec:	stp	x8, x20, [sp, #16]
   2b5f0:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2b5f4:	ldr	x1, [x19, #16]
   2b5f8:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2b5fc:	add	x0, sp, #0x30
   2b600:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2b604:	add	x0, sp, #0x230
   2b608:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2b60c:	add	sp, sp, #0x280
   2b610:	ldp	x20, x19, [sp, #64]
   2b614:	ldp	x22, x21, [sp, #48]
   2b618:	ldp	x24, x23, [sp, #32]
   2b61c:	ldp	x30, x25, [sp, #16]
   2b620:	ldr	x29, [sp], #80
   2b624:	ret

000000000002b628 <__ubsan_handle_negate_overflow_abort@@Base>:
   2b628:	sub	sp, sp, #0x30
   2b62c:	stp	x29, x30, [sp, #32]
   2b630:	add	x29, sp, #0x20
   2b634:	ldur	w8, [x29, #-8]
   2b638:	ldur	w9, [x29, #-5]
   2b63c:	mov	w10, #0x1                   	// #1
   2b640:	mov	x2, sp
   2b644:	strb	w10, [sp]
   2b648:	stur	w8, [sp, #1]
   2b64c:	str	w9, [sp, #4]
   2b650:	stp	x30, x29, [sp, #8]
   2b654:	bl	2b47c <__ubsan_handle_negate_overflow@@Base+0x38>
   2b658:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b65c <__ubsan_handle_divrem_overflow@@Base>:
   2b65c:	sub	sp, sp, #0x30
   2b660:	stp	x29, x30, [sp, #32]
   2b664:	add	x29, sp, #0x20
   2b668:	ldur	w8, [x29, #-8]
   2b66c:	ldur	w9, [x29, #-5]
   2b670:	mov	x3, sp
   2b674:	strb	wzr, [sp]
   2b678:	stur	w8, [sp, #1]
   2b67c:	str	w9, [sp, #4]
   2b680:	stp	x30, x29, [sp, #8]
   2b684:	bl	2b694 <__ubsan_handle_divrem_overflow@@Base+0x38>
   2b688:	ldp	x29, x30, [sp, #32]
   2b68c:	add	sp, sp, #0x30
   2b690:	ret
   2b694:	stp	x29, x30, [sp, #-64]!
   2b698:	stp	x24, x23, [sp, #16]
   2b69c:	stp	x22, x21, [sp, #32]
   2b6a0:	stp	x20, x19, [sp, #48]
   2b6a4:	sub	sp, sp, #0x440
   2b6a8:	mov	x21, x3
   2b6ac:	mov	x19, x0
   2b6b0:	add	x8, x0, #0xc
   2b6b4:	mov	w9, #0xffffffff            	// #-1
   2b6b8:	ldaxr	w24, [x8]
   2b6bc:	stlxr	w10, w9, [x8]
   2b6c0:	cbnz	w10, 2b6b8 <__ubsan_handle_divrem_overflow@@Base+0x5c>
   2b6c4:	ldr	x8, [x19, #16]
   2b6c8:	ldr	x20, [x19]
   2b6cc:	ldr	w23, [x19, #8]
   2b6d0:	str	x1, [sp, #1080]
   2b6d4:	str	x8, [sp, #1072]
   2b6d8:	str	x8, [sp, #1056]
   2b6dc:	str	x2, [sp, #1064]
   2b6e0:	ldrh	w9, [x8]
   2b6e4:	cbz	w9, 2b6fc <__ubsan_handle_divrem_overflow@@Base+0xa0>
   2b6e8:	mov	w22, #0xc                   	// #12
   2b6ec:	ldrb	w8, [x21]
   2b6f0:	bfi	x23, x24, #32, #32
   2b6f4:	cbnz	w8, 2b76c <__ubsan_handle_divrem_overflow@@Base+0x110>
   2b6f8:	b	2b74c <__ubsan_handle_divrem_overflow@@Base+0xf0>
   2b6fc:	ldrb	w8, [x8, #2]
   2b700:	tbnz	w8, #0, 2b718 <__ubsan_handle_divrem_overflow@@Base+0xbc>
   2b704:	mov	w22, #0xb                   	// #11
   2b708:	ldrb	w8, [x21]
   2b70c:	bfi	x23, x24, #32, #32
   2b710:	cbnz	w8, 2b76c <__ubsan_handle_divrem_overflow@@Base+0x110>
   2b714:	b	2b74c <__ubsan_handle_divrem_overflow@@Base+0xf0>
   2b718:	add	x0, sp, #0x420
   2b71c:	bl	2dad8 <__ubsan_get_current_report_data@@Base+0xe8>
   2b720:	and	x8, x0, x1
   2b724:	cmn	x8, #0x1
   2b728:	b.eq	2b73c <__ubsan_handle_divrem_overflow@@Base+0xe0>  // b.none
   2b72c:	ldr	x8, [x19, #16]
   2b730:	ldrh	w8, [x8]
   2b734:	cbnz	w8, 2b6e8 <__ubsan_handle_divrem_overflow@@Base+0x8c>
   2b738:	b	2b704 <__ubsan_handle_divrem_overflow@@Base+0xa8>
   2b73c:	mov	w22, #0x9                   	// #9
   2b740:	ldrb	w8, [x21]
   2b744:	bfi	x23, x24, #32, #32
   2b748:	cbnz	w8, 2b76c <__ubsan_handle_divrem_overflow@@Base+0x110>
   2b74c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2b750:	cmp	x23, x8
   2b754:	b.hi	2b870 <__ubsan_handle_divrem_overflow@@Base+0x214>  // b.pmore
   2b758:	ldr	x1, [x21, #8]
   2b75c:	mov	w0, w22
   2b760:	mov	x2, x20
   2b764:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2b768:	tbnz	w0, #0, 2b870 <__ubsan_handle_divrem_overflow@@Base+0x214>
   2b76c:	ldr	x8, [x21, #16]
   2b770:	ldr	q0, [x21]
   2b774:	mov	w21, #0x1                   	// #1
   2b778:	add	x0, sp, #0x3d0
   2b77c:	add	x1, sp, #0x3b0
   2b780:	add	x2, sp, #0x388
   2b784:	mov	w3, w22
   2b788:	str	w21, [sp, #904]
   2b78c:	str	x8, [sp, #960]
   2b790:	str	q0, [sp, #944]
   2b794:	str	x20, [sp, #912]
   2b798:	str	x23, [sp, #920]
   2b79c:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2b7a0:	cmp	w22, #0x9
   2b7a4:	b.ne	2b818 <__ubsan_handle_divrem_overflow@@Base+0x1bc>  // b.any
   2b7a8:	movi	v0.2d, #0x0
   2b7ac:	str	d0, [sp, #808]
   2b7b0:	str	d0, [sp, #848]
   2b7b4:	ldr	q0, [sp, #448]
   2b7b8:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b7bc:	add	x10, sp, #0xe9
   2b7c0:	str	w21, [sp, #464]
   2b7c4:	stp	x20, x23, [sp, #472]
   2b7c8:	str	wzr, [sp, #784]
   2b7cc:	str	wzr, [sp, #792]
   2b7d0:	str	xzr, [sp, #800]
   2b7d4:	str	wzr, [sp, #832]
   2b7d8:	stur	q0, [x10, #255]
   2b7dc:	ldr	d0, [x8, #1400]
   2b7e0:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b7e4:	add	x9, x9, #0x98d
   2b7e8:	add	x0, sp, #0x1d0
   2b7ec:	add	x1, sp, #0x430
   2b7f0:	str	xzr, [sp, #840]
   2b7f4:	str	xzr, [sp, #872]
   2b7f8:	str	x9, [sp, #512]
   2b7fc:	str	d0, [sp, #504]
   2b800:	str	wzr, [sp, #880]
   2b804:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2b808:	ldr	x1, [x19, #16]
   2b80c:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2b810:	add	x0, sp, #0x1d0
   2b814:	b	2b864 <__ubsan_handle_divrem_overflow@@Base+0x208>
   2b818:	movi	v0.2d, #0x0
   2b81c:	str	d0, [sp, #360]
   2b820:	str	d0, [sp, #400]
   2b824:	ldr	q0, [sp]
   2b828:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2b82c:	add	x8, x8, #0x9c3
   2b830:	add	x0, sp, #0x10
   2b834:	str	w21, [sp, #16]
   2b838:	stp	x20, x23, [sp, #24]
   2b83c:	stp	wzr, w22, [sp, #56]
   2b840:	str	wzr, [sp, #336]
   2b844:	str	wzr, [sp, #344]
   2b848:	str	xzr, [sp, #352]
   2b84c:	str	wzr, [sp, #384]
   2b850:	str	xzr, [sp, #392]
   2b854:	str	xzr, [sp, #424]
   2b858:	str	x8, [sp, #64]
   2b85c:	stur	q0, [sp, #40]
   2b860:	str	wzr, [sp, #432]
   2b864:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2b868:	add	x0, sp, #0x3d0
   2b86c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2b870:	add	sp, sp, #0x440
   2b874:	ldp	x20, x19, [sp, #48]
   2b878:	ldp	x22, x21, [sp, #32]
   2b87c:	ldp	x24, x23, [sp, #16]
   2b880:	ldp	x29, x30, [sp], #64
   2b884:	ret

000000000002b888 <__ubsan_handle_divrem_overflow_abort@@Base>:
   2b888:	sub	sp, sp, #0x30
   2b88c:	stp	x29, x30, [sp, #32]
   2b890:	add	x29, sp, #0x20
   2b894:	ldur	w8, [x29, #-8]
   2b898:	ldur	w9, [x29, #-5]
   2b89c:	mov	w10, #0x1                   	// #1
   2b8a0:	mov	x3, sp
   2b8a4:	strb	w10, [sp]
   2b8a8:	stur	w8, [sp, #1]
   2b8ac:	str	w9, [sp, #4]
   2b8b0:	stp	x30, x29, [sp, #8]
   2b8b4:	bl	2b694 <__ubsan_handle_divrem_overflow@@Base+0x38>
   2b8b8:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002b8bc <__ubsan_handle_shift_out_of_bounds@@Base>:
   2b8bc:	sub	sp, sp, #0x30
   2b8c0:	stp	x29, x30, [sp, #32]
   2b8c4:	add	x29, sp, #0x20
   2b8c8:	ldur	w8, [x29, #-8]
   2b8cc:	ldur	w9, [x29, #-5]
   2b8d0:	mov	x3, sp
   2b8d4:	strb	wzr, [sp]
   2b8d8:	stur	w8, [sp, #1]
   2b8dc:	str	w9, [sp, #4]
   2b8e0:	stp	x30, x29, [sp, #8]
   2b8e4:	bl	2b8f4 <__ubsan_handle_shift_out_of_bounds@@Base+0x38>
   2b8e8:	ldp	x29, x30, [sp, #32]
   2b8ec:	add	sp, sp, #0x30
   2b8f0:	ret
   2b8f4:	stp	x29, x30, [sp, #-64]!
   2b8f8:	stp	x24, x23, [sp, #16]
   2b8fc:	stp	x22, x21, [sp, #32]
   2b900:	stp	x20, x19, [sp, #48]
   2b904:	sub	sp, sp, #0x2c0
   2b908:	mov	x22, x3
   2b90c:	mov	x19, x0
   2b910:	add	x8, x0, #0xc
   2b914:	mov	w9, #0xffffffff            	// #-1
   2b918:	ldaxr	w24, [x8]
   2b91c:	stlxr	w10, w9, [x8]
   2b920:	cbnz	w10, 2b918 <__ubsan_handle_shift_out_of_bounds@@Base+0x5c>
   2b924:	ldr	x8, [x19, #16]
   2b928:	ldr	x20, [x19]
   2b92c:	ldr	w23, [x19, #8]
   2b930:	str	x1, [sp, #680]
   2b934:	str	x8, [sp, #672]
   2b938:	ldr	x8, [x19, #24]
   2b93c:	str	x2, [sp, #664]
   2b940:	str	x8, [sp, #656]
   2b944:	ldrh	w9, [x8]
   2b948:	cbnz	w9, 2b960 <__ubsan_handle_shift_out_of_bounds@@Base+0xa4>
   2b94c:	ldrb	w8, [x8, #2]
   2b950:	tbz	w8, #0, 2b960 <__ubsan_handle_shift_out_of_bounds@@Base+0xa4>
   2b954:	add	x0, sp, #0x290
   2b958:	bl	2dad8 <__ubsan_get_current_report_data@@Base+0xe8>
   2b95c:	tbnz	x1, #63, 2bb5c <__ubsan_handle_shift_out_of_bounds@@Base+0x2a0>
   2b960:	add	x0, sp, #0x290
   2b964:	bl	2dc84 <__ubsan_get_current_report_data@@Base+0x294>
   2b968:	ldr	x8, [x19, #16]
   2b96c:	ldrh	w9, [x8]
   2b970:	cbnz	w9, 2bc64 <__ubsan_handle_shift_out_of_bounds@@Base+0x3a8>
   2b974:	ldrh	w8, [x8, #2]
   2b978:	mov	w9, #0x1                   	// #1
   2b97c:	lsr	x8, x8, #1
   2b980:	lsl	w8, w9, w8
   2b984:	cmp	x0, x8
   2b988:	cset	w8, cc  // cc = lo, ul, last
   2b98c:	cmp	x1, #0x0
   2b990:	csel	w8, w8, wzr, eq  // eq = none
   2b994:	cmp	w8, #0x0
   2b998:	mov	w8, #0x12                  	// #18
   2b99c:	cinc	w21, w8, eq  // eq = none
   2b9a0:	ldrb	w8, [x22]
   2b9a4:	bfi	x23, x24, #32, #32
   2b9a8:	cbz	w8, 2bb6c <__ubsan_handle_shift_out_of_bounds@@Base+0x2b0>
   2b9ac:	ldr	x8, [x22, #16]
   2b9b0:	ldr	q0, [x22]
   2b9b4:	mov	w9, #0x1                   	// #1
   2b9b8:	add	x0, sp, #0x240
   2b9bc:	add	x1, sp, #0x220
   2b9c0:	add	x2, sp, #0x1f8
   2b9c4:	mov	w3, w21
   2b9c8:	str	w9, [sp, #504]
   2b9cc:	str	x8, [sp, #560]
   2b9d0:	str	q0, [sp, #544]
   2b9d4:	str	x20, [sp, #512]
   2b9d8:	str	x23, [sp, #520]
   2b9dc:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2b9e0:	cmp	w21, #0x13
   2b9e4:	b.ne	2bac0 <__ubsan_handle_shift_out_of_bounds@@Base+0x204>  // b.any
   2b9e8:	ldr	x8, [sp, #656]
   2b9ec:	ldrh	w9, [x8]
   2b9f0:	cbnz	w9, 2ba08 <__ubsan_handle_shift_out_of_bounds@@Base+0x14c>
   2b9f4:	ldrb	w8, [x8, #2]
   2b9f8:	tbz	w8, #0, 2ba08 <__ubsan_handle_shift_out_of_bounds@@Base+0x14c>
   2b9fc:	add	x0, sp, #0x290
   2ba00:	bl	2dad8 <__ubsan_get_current_report_data@@Base+0xe8>
   2ba04:	tbnz	x1, #63, 2bba4 <__ubsan_handle_shift_out_of_bounds@@Base+0x2e8>
   2ba08:	movi	v0.2d, #0x0
   2ba0c:	str	d0, [sp, #408]
   2ba10:	str	d0, [sp, #448]
   2ba14:	ldr	q0, [sp, #32]
   2ba18:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ba1c:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ba20:	mov	w8, #0x1                   	// #1
   2ba24:	stur	q0, [sp, #88]
   2ba28:	ldr	d0, [x9, #1408]
   2ba2c:	add	x10, x10, #0x9f2
   2ba30:	add	x0, sp, #0x40
   2ba34:	add	x1, sp, #0x290
   2ba38:	stp	x20, x23, [sp, #72]
   2ba3c:	str	wzr, [sp, #384]
   2ba40:	str	wzr, [sp, #392]
   2ba44:	str	xzr, [sp, #400]
   2ba48:	str	wzr, [sp, #432]
   2ba4c:	str	xzr, [sp, #440]
   2ba50:	str	xzr, [sp, #472]
   2ba54:	str	w8, [sp, #64]
   2ba58:	str	x10, [sp, #112]
   2ba5c:	str	d0, [sp, #104]
   2ba60:	str	wzr, [sp, #480]
   2ba64:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2ba68:	ldr	x9, [x19, #16]
   2ba6c:	ldrh	w8, [x9]
   2ba70:	cbnz	w8, 2bc64 <__ubsan_handle_shift_out_of_bounds@@Base+0x3a8>
   2ba74:	ldr	w8, [x0, #320]
   2ba78:	cmp	w8, #0x8
   2ba7c:	b.eq	2bc7c <__ubsan_handle_shift_out_of_bounds@@Base+0x3c0>  // b.none
   2ba80:	ldrh	w9, [x9, #2]
   2ba84:	add	w11, w8, #0x1
   2ba88:	add	x8, x0, x8, lsl #5
   2ba8c:	mov	w12, #0x2                   	// #2
   2ba90:	str	w11, [x0, #320]
   2ba94:	str	w12, [x8, #64]
   2ba98:	add	x12, sp, #0x1b5
   2ba9c:	ldr	w11, [sp, #700]
   2baa0:	ldur	x12, [x12, #255]
   2baa4:	mov	w10, #0x1                   	// #1
   2baa8:	lsr	w9, w9, #1
   2baac:	lsl	w9, w10, w9
   2bab0:	str	w11, [x8, #76]
   2bab4:	stur	x12, [x8, #68]
   2bab8:	stp	x9, xzr, [x8, #80]
   2babc:	b	2bb40 <__ubsan_handle_shift_out_of_bounds@@Base+0x284>
   2bac0:	ldr	x8, [sp, #672]
   2bac4:	ldrh	w9, [x8]
   2bac8:	cbnz	w9, 2bae0 <__ubsan_handle_shift_out_of_bounds@@Base+0x224>
   2bacc:	ldrb	w8, [x8, #2]
   2bad0:	tbz	w8, #0, 2bae0 <__ubsan_handle_shift_out_of_bounds@@Base+0x224>
   2bad4:	add	x0, sp, #0x2a0
   2bad8:	bl	2dad8 <__ubsan_get_current_report_data@@Base+0xe8>
   2badc:	tbnz	x1, #63, 2bc08 <__ubsan_handle_shift_out_of_bounds@@Base+0x34c>
   2bae0:	movi	v0.2d, #0x0
   2bae4:	str	d0, [sp, #408]
   2bae8:	str	d0, [sp, #448]
   2baec:	ldr	q0, [sp]
   2baf0:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2baf4:	mov	w8, #0x1                   	// #1
   2baf8:	add	x9, x9, #0xa44
   2bafc:	add	x0, sp, #0x40
   2bb00:	add	x1, sp, #0x2a0
   2bb04:	stp	x20, x23, [sp, #72]
   2bb08:	stp	wzr, w21, [sp, #104]
   2bb0c:	str	wzr, [sp, #384]
   2bb10:	str	wzr, [sp, #392]
   2bb14:	str	xzr, [sp, #400]
   2bb18:	str	wzr, [sp, #432]
   2bb1c:	str	xzr, [sp, #440]
   2bb20:	str	xzr, [sp, #472]
   2bb24:	str	w8, [sp, #64]
   2bb28:	str	x9, [sp, #112]
   2bb2c:	stur	q0, [sp, #88]
   2bb30:	str	wzr, [sp, #480]
   2bb34:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2bb38:	add	x1, sp, #0x290
   2bb3c:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2bb40:	ldr	x1, [x19, #16]
   2bb44:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2bb48:	add	x0, sp, #0x40
   2bb4c:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2bb50:	add	x0, sp, #0x240
   2bb54:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2bb58:	b	2bb8c <__ubsan_handle_shift_out_of_bounds@@Base+0x2d0>
   2bb5c:	mov	w21, #0x13                  	// #19
   2bb60:	ldrb	w8, [x22]
   2bb64:	bfi	x23, x24, #32, #32
   2bb68:	cbnz	w8, 2b9ac <__ubsan_handle_shift_out_of_bounds@@Base+0xf0>
   2bb6c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2bb70:	cmp	x23, x8
   2bb74:	b.hi	2bb8c <__ubsan_handle_shift_out_of_bounds@@Base+0x2d0>  // b.pmore
   2bb78:	ldr	x1, [x22, #8]
   2bb7c:	mov	w0, w21
   2bb80:	mov	x2, x20
   2bb84:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2bb88:	tbz	w0, #0, 2b9ac <__ubsan_handle_shift_out_of_bounds@@Base+0xf0>
   2bb8c:	add	sp, sp, #0x2c0
   2bb90:	ldp	x20, x19, [sp, #48]
   2bb94:	ldp	x22, x21, [sp, #32]
   2bb98:	ldp	x24, x23, [sp, #16]
   2bb9c:	ldp	x29, x30, [sp], #64
   2bba0:	ret
   2bba4:	movi	v0.2d, #0x0
   2bba8:	str	d0, [sp, #408]
   2bbac:	str	d0, [sp, #448]
   2bbb0:	ldr	q0, [sp, #48]
   2bbb4:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bbb8:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bbbc:	mov	w8, #0x1                   	// #1
   2bbc0:	stur	q0, [sp, #88]
   2bbc4:	ldr	d0, [x9, #1408]
   2bbc8:	add	x10, x10, #0x9d4
   2bbcc:	add	x0, sp, #0x40
   2bbd0:	add	x1, sp, #0x290
   2bbd4:	stp	x20, x23, [sp, #72]
   2bbd8:	str	wzr, [sp, #384]
   2bbdc:	str	wzr, [sp, #392]
   2bbe0:	str	xzr, [sp, #400]
   2bbe4:	str	wzr, [sp, #432]
   2bbe8:	str	xzr, [sp, #440]
   2bbec:	str	xzr, [sp, #472]
   2bbf0:	str	w8, [sp, #64]
   2bbf4:	str	x10, [sp, #112]
   2bbf8:	str	d0, [sp, #104]
   2bbfc:	str	wzr, [sp, #480]
   2bc00:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2bc04:	b	2bb48 <__ubsan_handle_shift_out_of_bounds@@Base+0x28c>
   2bc08:	movi	v0.2d, #0x0
   2bc0c:	str	d0, [sp, #408]
   2bc10:	str	d0, [sp, #448]
   2bc14:	ldr	q0, [sp, #16]
   2bc18:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bc1c:	mov	w8, #0x1                   	// #1
   2bc20:	add	x9, x9, #0xa24
   2bc24:	add	x0, sp, #0x40
   2bc28:	add	x1, sp, #0x2a0
   2bc2c:	stp	x20, x23, [sp, #72]
   2bc30:	stp	wzr, w21, [sp, #104]
   2bc34:	str	wzr, [sp, #384]
   2bc38:	str	wzr, [sp, #392]
   2bc3c:	str	xzr, [sp, #400]
   2bc40:	str	wzr, [sp, #432]
   2bc44:	str	xzr, [sp, #440]
   2bc48:	str	xzr, [sp, #472]
   2bc4c:	str	w8, [sp, #64]
   2bc50:	str	x9, [sp, #112]
   2bc54:	stur	q0, [sp, #88]
   2bc58:	str	wzr, [sp, #480]
   2bc5c:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2bc60:	b	2bb48 <__ubsan_handle_shift_out_of_bounds@@Base+0x28c>
   2bc64:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bc68:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bc6c:	add	x0, x0, #0xa83
   2bc70:	add	x2, x2, #0xac4
   2bc74:	mov	w1, #0x7c                  	// #124
   2bc78:	b	2bc90 <__ubsan_handle_shift_out_of_bounds@@Base+0x3d4>
   2bc7c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2bc80:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2bc84:	add	x0, x0, #0xf13
   2bc88:	add	x2, x2, #0xf53
   2bc8c:	mov	w1, #0xc0                  	// #192
   2bc90:	mov	x3, xzr
   2bc94:	mov	x4, xzr
   2bc98:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002bc9c <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
   2bc9c:	sub	sp, sp, #0x30
   2bca0:	stp	x29, x30, [sp, #32]
   2bca4:	add	x29, sp, #0x20
   2bca8:	ldur	w8, [x29, #-8]
   2bcac:	ldur	w9, [x29, #-5]
   2bcb0:	mov	w10, #0x1                   	// #1
   2bcb4:	mov	x3, sp
   2bcb8:	strb	w10, [sp]
   2bcbc:	stur	w8, [sp, #1]
   2bcc0:	str	w9, [sp, #4]
   2bcc4:	stp	x30, x29, [sp, #8]
   2bcc8:	bl	2b8f4 <__ubsan_handle_shift_out_of_bounds@@Base+0x38>
   2bccc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002bcd0 <__ubsan_handle_out_of_bounds@@Base>:
   2bcd0:	sub	sp, sp, #0x30
   2bcd4:	stp	x29, x30, [sp, #32]
   2bcd8:	add	x29, sp, #0x20
   2bcdc:	ldur	w8, [x29, #-8]
   2bce0:	ldur	w9, [x29, #-5]
   2bce4:	mov	x2, sp
   2bce8:	strb	wzr, [sp]
   2bcec:	stur	w8, [sp, #1]
   2bcf0:	str	w9, [sp, #4]
   2bcf4:	stp	x30, x29, [sp, #8]
   2bcf8:	bl	2bd08 <__ubsan_handle_out_of_bounds@@Base+0x38>
   2bcfc:	ldp	x29, x30, [sp, #32]
   2bd00:	add	sp, sp, #0x30
   2bd04:	ret
   2bd08:	str	x29, [sp, #-64]!
   2bd0c:	stp	x30, x23, [sp, #16]
   2bd10:	stp	x22, x21, [sp, #32]
   2bd14:	stp	x20, x19, [sp, #48]
   2bd18:	sub	sp, sp, #0x270
   2bd1c:	mov	x21, x2
   2bd20:	mov	x20, x1
   2bd24:	mov	x19, x0
   2bd28:	add	x9, x0, #0xc
   2bd2c:	mov	w10, #0xffffffff            	// #-1
   2bd30:	ldaxr	w8, [x9]
   2bd34:	stlxr	w11, w10, [x9]
   2bd38:	cbnz	w11, 2bd30 <__ubsan_handle_out_of_bounds@@Base+0x60>
   2bd3c:	ldr	w23, [x19, #8]
   2bd40:	ldrb	w9, [x21]
   2bd44:	ldr	x22, [x19]
   2bd48:	bfi	x23, x8, #32, #32
   2bd4c:	cbz	w9, 2be00 <__ubsan_handle_out_of_bounds@@Base+0x130>
   2bd50:	ldr	x8, [x21, #16]
   2bd54:	ldr	q0, [x21]
   2bd58:	mov	w21, #0x1                   	// #1
   2bd5c:	add	x0, sp, #0x220
   2bd60:	add	x1, sp, #0x200
   2bd64:	add	x2, sp, #0x1d8
   2bd68:	mov	w3, #0x14                  	// #20
   2bd6c:	str	w21, [sp, #472]
   2bd70:	str	x8, [sp, #528]
   2bd74:	str	q0, [sp, #512]
   2bd78:	stp	x22, x23, [sp, #480]
   2bd7c:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2bd80:	movi	v0.2d, #0x0
   2bd84:	ldr	x8, [x19, #24]
   2bd88:	str	d0, [sp, #360]
   2bd8c:	str	d0, [sp, #400]
   2bd90:	ldr	q0, [sp]
   2bd94:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bd98:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bd9c:	add	x10, x10, #0xadd
   2bda0:	stur	q0, [sp, #40]
   2bda4:	ldr	d0, [x9, #1416]
   2bda8:	add	x0, sp, #0x10
   2bdac:	add	x1, sp, #0x1c8
   2bdb0:	str	w21, [sp, #16]
   2bdb4:	stp	x22, x23, [sp, #24]
   2bdb8:	str	wzr, [sp, #336]
   2bdbc:	str	wzr, [sp, #344]
   2bdc0:	str	xzr, [sp, #352]
   2bdc4:	str	wzr, [sp, #384]
   2bdc8:	str	xzr, [sp, #392]
   2bdcc:	str	xzr, [sp, #424]
   2bdd0:	str	x10, [sp, #64]
   2bdd4:	stp	x8, x20, [sp, #456]
   2bdd8:	str	d0, [sp, #56]
   2bddc:	str	wzr, [sp, #432]
   2bde0:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2bde4:	ldr	x1, [x19, #16]
   2bde8:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2bdec:	add	x0, sp, #0x10
   2bdf0:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2bdf4:	add	x0, sp, #0x220
   2bdf8:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2bdfc:	b	2be20 <__ubsan_handle_out_of_bounds@@Base+0x150>
   2be00:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2be04:	cmp	x23, x8
   2be08:	b.hi	2be20 <__ubsan_handle_out_of_bounds@@Base+0x150>  // b.pmore
   2be0c:	ldr	x1, [x21, #8]
   2be10:	mov	w0, #0x14                  	// #20
   2be14:	mov	x2, x22
   2be18:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2be1c:	tbz	w0, #0, 2bd50 <__ubsan_handle_out_of_bounds@@Base+0x80>
   2be20:	add	sp, sp, #0x270
   2be24:	ldp	x20, x19, [sp, #48]
   2be28:	ldp	x22, x21, [sp, #32]
   2be2c:	ldp	x30, x23, [sp, #16]
   2be30:	ldr	x29, [sp], #64
   2be34:	ret

000000000002be38 <__ubsan_handle_out_of_bounds_abort@@Base>:
   2be38:	sub	sp, sp, #0x30
   2be3c:	stp	x29, x30, [sp, #32]
   2be40:	add	x29, sp, #0x20
   2be44:	ldur	w8, [x29, #-8]
   2be48:	ldur	w9, [x29, #-5]
   2be4c:	mov	w10, #0x1                   	// #1
   2be50:	mov	x2, sp
   2be54:	strb	w10, [sp]
   2be58:	stur	w8, [sp, #1]
   2be5c:	str	w9, [sp, #4]
   2be60:	stp	x30, x29, [sp, #8]
   2be64:	bl	2bd08 <__ubsan_handle_out_of_bounds@@Base+0x38>
   2be68:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002be6c <__ubsan_handle_builtin_unreachable@@Base>:
   2be6c:	sub	sp, sp, #0x30
   2be70:	stp	x29, x30, [sp, #32]
   2be74:	add	x29, sp, #0x20
   2be78:	ldur	w8, [x29, #-8]
   2be7c:	ldur	w9, [x29, #-5]
   2be80:	mov	w10, #0x1                   	// #1
   2be84:	mov	x1, sp
   2be88:	strb	w10, [sp]
   2be8c:	stur	w8, [sp, #1]
   2be90:	str	w9, [sp, #4]
   2be94:	stp	x30, x29, [sp, #8]
   2be98:	bl	2bea0 <__ubsan_handle_builtin_unreachable@@Base+0x34>
   2be9c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2bea0:	stp	x29, x30, [sp, #-32]!
   2bea4:	stp	x20, x19, [sp, #16]
   2bea8:	sub	sp, sp, #0x260
   2beac:	ldr	x8, [x1, #16]
   2beb0:	ldr	q0, [x1]
   2beb4:	mov	x19, x0
   2beb8:	mov	w20, #0x1                   	// #1
   2bebc:	str	x8, [sp, #512]
   2bec0:	str	q0, [sp, #496]
   2bec4:	ldr	q0, [x0]
   2bec8:	add	x8, sp, #0xd1
   2becc:	add	x0, sp, #0x210
   2bed0:	add	x1, sp, #0x1f0
   2bed4:	add	x2, sp, #0x1c8
   2bed8:	mov	w3, #0x15                  	// #21
   2bedc:	str	w20, [sp, #456]
   2bee0:	stur	q0, [x8, #255]
   2bee4:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2bee8:	ldr	q0, [x19]
   2beec:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bef0:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bef4:	movi	v1.2d, #0x0
   2bef8:	stur	q0, [sp, #24]
   2befc:	ldr	q0, [sp]
   2bf00:	add	x9, x9, #0xb00
   2bf04:	add	x0, sp, #0x10
   2bf08:	str	d1, [sp, #360]
   2bf0c:	stur	q0, [sp, #40]
   2bf10:	ldr	d0, [x8, #1424]
   2bf14:	str	d1, [sp, #400]
   2bf18:	str	w20, [sp, #16]
   2bf1c:	str	wzr, [sp, #336]
   2bf20:	str	wzr, [sp, #344]
   2bf24:	str	xzr, [sp, #352]
   2bf28:	str	wzr, [sp, #384]
   2bf2c:	str	xzr, [sp, #392]
   2bf30:	str	xzr, [sp, #424]
   2bf34:	str	x9, [sp, #64]
   2bf38:	str	d0, [sp, #56]
   2bf3c:	str	wzr, [sp, #432]
   2bf40:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2bf44:	add	x0, sp, #0x210
   2bf48:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2bf4c:	add	sp, sp, #0x260
   2bf50:	ldp	x20, x19, [sp, #16]
   2bf54:	ldp	x29, x30, [sp], #32
   2bf58:	ret

000000000002bf5c <__ubsan_handle_missing_return@@Base>:
   2bf5c:	sub	sp, sp, #0x30
   2bf60:	stp	x29, x30, [sp, #32]
   2bf64:	add	x29, sp, #0x20
   2bf68:	ldur	w8, [x29, #-8]
   2bf6c:	ldur	w9, [x29, #-5]
   2bf70:	mov	w10, #0x1                   	// #1
   2bf74:	mov	x1, sp
   2bf78:	strb	w10, [sp]
   2bf7c:	stur	w8, [sp, #1]
   2bf80:	str	w9, [sp, #4]
   2bf84:	stp	x30, x29, [sp, #8]
   2bf88:	bl	2bf90 <__ubsan_handle_missing_return@@Base+0x34>
   2bf8c:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2bf90:	stp	x29, x30, [sp, #-32]!
   2bf94:	stp	x20, x19, [sp, #16]
   2bf98:	sub	sp, sp, #0x260
   2bf9c:	ldr	x8, [x1, #16]
   2bfa0:	ldr	q0, [x1]
   2bfa4:	mov	x19, x0
   2bfa8:	mov	w20, #0x1                   	// #1
   2bfac:	str	x8, [sp, #512]
   2bfb0:	str	q0, [sp, #496]
   2bfb4:	ldr	q0, [x0]
   2bfb8:	add	x8, sp, #0xd1
   2bfbc:	add	x0, sp, #0x210
   2bfc0:	add	x1, sp, #0x1f0
   2bfc4:	add	x2, sp, #0x1c8
   2bfc8:	mov	w3, #0x16                  	// #22
   2bfcc:	str	w20, [sp, #456]
   2bfd0:	stur	q0, [x8, #255]
   2bfd4:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2bfd8:	ldr	q0, [x19]
   2bfdc:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bfe0:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2bfe4:	movi	v1.2d, #0x0
   2bfe8:	stur	q0, [sp, #24]
   2bfec:	ldr	q0, [sp]
   2bff0:	add	x9, x9, #0xb2f
   2bff4:	add	x0, sp, #0x10
   2bff8:	str	d1, [sp, #360]
   2bffc:	stur	q0, [sp, #40]
   2c000:	ldr	d0, [x8, #1432]
   2c004:	str	d1, [sp, #400]
   2c008:	str	w20, [sp, #16]
   2c00c:	str	wzr, [sp, #336]
   2c010:	str	wzr, [sp, #344]
   2c014:	str	xzr, [sp, #352]
   2c018:	str	wzr, [sp, #384]
   2c01c:	str	xzr, [sp, #392]
   2c020:	str	xzr, [sp, #424]
   2c024:	str	x9, [sp, #64]
   2c028:	str	d0, [sp, #56]
   2c02c:	str	wzr, [sp, #432]
   2c030:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2c034:	add	x0, sp, #0x210
   2c038:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2c03c:	add	sp, sp, #0x260
   2c040:	ldp	x20, x19, [sp, #16]
   2c044:	ldp	x29, x30, [sp], #32
   2c048:	ret

000000000002c04c <__ubsan_handle_vla_bound_not_positive@@Base>:
   2c04c:	sub	sp, sp, #0x30
   2c050:	stp	x29, x30, [sp, #32]
   2c054:	add	x29, sp, #0x20
   2c058:	ldur	w8, [x29, #-8]
   2c05c:	ldur	w9, [x29, #-5]
   2c060:	mov	x2, sp
   2c064:	strb	wzr, [sp]
   2c068:	stur	w8, [sp, #1]
   2c06c:	str	w9, [sp, #4]
   2c070:	stp	x30, x29, [sp, #8]
   2c074:	bl	2c084 <__ubsan_handle_vla_bound_not_positive@@Base+0x38>
   2c078:	ldp	x29, x30, [sp, #32]
   2c07c:	add	sp, sp, #0x30
   2c080:	ret
   2c084:	str	x29, [sp, #-64]!
   2c088:	stp	x30, x23, [sp, #16]
   2c08c:	stp	x22, x21, [sp, #32]
   2c090:	stp	x20, x19, [sp, #48]
   2c094:	sub	sp, sp, #0x270
   2c098:	mov	x21, x2
   2c09c:	mov	x19, x1
   2c0a0:	mov	x20, x0
   2c0a4:	add	x9, x0, #0xc
   2c0a8:	mov	w10, #0xffffffff            	// #-1
   2c0ac:	ldaxr	w8, [x9]
   2c0b0:	stlxr	w11, w10, [x9]
   2c0b4:	cbnz	w11, 2c0ac <__ubsan_handle_vla_bound_not_positive@@Base+0x60>
   2c0b8:	ldr	w23, [x20, #8]
   2c0bc:	ldrb	w9, [x21]
   2c0c0:	ldr	x22, [x20]
   2c0c4:	bfi	x23, x8, #32, #32
   2c0c8:	cbz	w9, 2c174 <__ubsan_handle_vla_bound_not_positive@@Base+0x128>
   2c0cc:	ldr	x8, [x21, #16]
   2c0d0:	ldr	q0, [x21]
   2c0d4:	mov	w21, #0x1                   	// #1
   2c0d8:	add	x0, sp, #0x220
   2c0dc:	add	x1, sp, #0x200
   2c0e0:	add	x2, sp, #0x1d8
   2c0e4:	mov	w3, #0x17                  	// #23
   2c0e8:	str	w21, [sp, #472]
   2c0ec:	str	x8, [sp, #528]
   2c0f0:	str	q0, [sp, #512]
   2c0f4:	stp	x22, x23, [sp, #480]
   2c0f8:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2c0fc:	movi	v0.2d, #0x0
   2c100:	str	d0, [sp, #376]
   2c104:	str	d0, [sp, #416]
   2c108:	ldr	q0, [sp, #16]
   2c10c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c110:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c114:	add	x9, x9, #0xb81
   2c118:	stur	q0, [sp, #56]
   2c11c:	ldr	d0, [x8, #1440]
   2c120:	str	w21, [sp, #32]
   2c124:	stp	x22, x23, [sp, #40]
   2c128:	str	wzr, [sp, #352]
   2c12c:	str	wzr, [sp, #360]
   2c130:	str	xzr, [sp, #368]
   2c134:	str	wzr, [sp, #400]
   2c138:	str	xzr, [sp, #408]
   2c13c:	str	xzr, [sp, #440]
   2c140:	str	wzr, [sp, #448]
   2c144:	str	x9, [sp, #80]
   2c148:	str	d0, [sp, #72]
   2c14c:	ldr	x8, [x20, #16]
   2c150:	add	x0, sp, #0x20
   2c154:	mov	x1, sp
   2c158:	stp	x8, x19, [sp]
   2c15c:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2c160:	add	x0, sp, #0x20
   2c164:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2c168:	add	x0, sp, #0x220
   2c16c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2c170:	b	2c194 <__ubsan_handle_vla_bound_not_positive@@Base+0x148>
   2c174:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2c178:	cmp	x23, x8
   2c17c:	b.hi	2c194 <__ubsan_handle_vla_bound_not_positive@@Base+0x148>  // b.pmore
   2c180:	ldr	x1, [x21, #8]
   2c184:	mov	w0, #0x17                  	// #23
   2c188:	mov	x2, x22
   2c18c:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2c190:	tbz	w0, #0, 2c0cc <__ubsan_handle_vla_bound_not_positive@@Base+0x80>
   2c194:	add	sp, sp, #0x270
   2c198:	ldp	x20, x19, [sp, #48]
   2c19c:	ldp	x22, x21, [sp, #32]
   2c1a0:	ldp	x30, x23, [sp, #16]
   2c1a4:	ldr	x29, [sp], #64
   2c1a8:	ret

000000000002c1ac <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
   2c1ac:	sub	sp, sp, #0x30
   2c1b0:	stp	x29, x30, [sp, #32]
   2c1b4:	add	x29, sp, #0x20
   2c1b8:	ldur	w8, [x29, #-8]
   2c1bc:	ldur	w9, [x29, #-5]
   2c1c0:	mov	w10, #0x1                   	// #1
   2c1c4:	mov	x2, sp
   2c1c8:	strb	w10, [sp]
   2c1cc:	stur	w8, [sp, #1]
   2c1d0:	str	w9, [sp, #4]
   2c1d4:	stp	x30, x29, [sp, #8]
   2c1d8:	bl	2c084 <__ubsan_handle_vla_bound_not_positive@@Base+0x38>
   2c1dc:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002c1e0 <__ubsan_handle_float_cast_overflow@@Base>:
   2c1e0:	sub	sp, sp, #0x30
   2c1e4:	stp	x29, x30, [sp, #32]
   2c1e8:	add	x29, sp, #0x20
   2c1ec:	ldur	w8, [x29, #-8]
   2c1f0:	ldur	w9, [x29, #-5]
   2c1f4:	mov	x2, sp
   2c1f8:	strb	wzr, [sp]
   2c1fc:	stur	w8, [sp, #1]
   2c200:	str	w9, [sp, #4]
   2c204:	stp	x30, x29, [sp, #8]
   2c208:	bl	2c218 <__ubsan_handle_float_cast_overflow@@Base+0x38>
   2c20c:	ldp	x29, x30, [sp, #32]
   2c210:	add	sp, sp, #0x30
   2c214:	ret
   2c218:	stp	x29, x30, [sp, #-80]!
   2c21c:	stp	x26, x25, [sp, #16]
   2c220:	stp	x24, x23, [sp, #32]
   2c224:	stp	x22, x21, [sp, #48]
   2c228:	stp	x20, x19, [sp, #64]
   2c22c:	sub	sp, sp, #0x260
   2c230:	mov	x22, x0
   2c234:	mov	x20, x2
   2c238:	mov	x19, x1
   2c23c:	add	x0, sp, #0x10
   2c240:	mov	w2, #0x8                   	// #8
   2c244:	mov	x1, x22
   2c248:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   2c24c:	ldr	x9, [sp, #16]
   2c250:	ldrb	w8, [x9, #1]
   2c254:	cmp	w8, #0xff
   2c258:	b.eq	2c2b0 <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.none
   2c25c:	ldrb	w9, [x9]
   2c260:	cmp	w9, #0xff
   2c264:	b.eq	2c2b0 <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.none
   2c268:	add	w8, w8, w9
   2c26c:	cmp	w8, #0x1
   2c270:	b.ls	2c2b0 <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.plast
   2c274:	add	x8, x22, #0xc
   2c278:	mov	w9, #0xffffffff            	// #-1
   2c27c:	ldaxr	w24, [x8]
   2c280:	stlxr	w10, w9, [x8]
   2c284:	cbnz	w10, 2c27c <__ubsan_handle_float_cast_overflow@@Base+0x9c>
   2c288:	ldr	x23, [x22]
   2c28c:	ldrb	w8, [x20]
   2c290:	ldr	w25, [x22, #8]
   2c294:	cbz	w8, 2c3b8 <__ubsan_handle_float_cast_overflow@@Base+0x1d8>
   2c298:	mov	x21, xzr
   2c29c:	add	x9, x22, #0x18
   2c2a0:	add	x22, x22, #0x10
   2c2a4:	lsl	x8, x24, #32
   2c2a8:	mov	w26, #0x1                   	// #1
   2c2ac:	b	2c2d8 <__ubsan_handle_float_cast_overflow@@Base+0xf8>
   2c2b0:	ldr	x8, [x20, #8]
   2c2b4:	cbz	x8, 2c3d8 <__ubsan_handle_float_cast_overflow@@Base+0x1f8>
   2c2b8:	sub	x0, x8, #0x4
   2c2bc:	bl	29560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d8>
   2c2c0:	mov	x21, x0
   2c2c4:	mov	x23, xzr
   2c2c8:	mov	x25, xzr
   2c2cc:	mov	x8, xzr
   2c2d0:	add	x9, x22, #0x8
   2c2d4:	mov	w26, #0x3                   	// #3
   2c2d8:	ldr	x24, [x9]
   2c2dc:	ldr	q0, [x20]
   2c2e0:	ldr	x9, [x20, #16]
   2c2e4:	ldr	x22, [x22]
   2c2e8:	orr	x20, x8, x25
   2c2ec:	add	x0, sp, #0x210
   2c2f0:	add	x1, sp, #0x1f0
   2c2f4:	add	x2, sp, #0x1c8
   2c2f8:	mov	w3, #0x18                  	// #24
   2c2fc:	str	w26, [sp, #456]
   2c300:	stp	x23, x20, [sp, #464]
   2c304:	str	x9, [sp, #512]
   2c308:	str	q0, [sp, #496]
   2c30c:	str	x21, [sp, #488]
   2c310:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2c314:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c318:	movi	v0.2d, #0x0
   2c31c:	str	d0, [sp, #360]
   2c320:	str	d0, [sp, #400]
   2c324:	ldr	d0, [x8, #1448]
   2c328:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c32c:	add	x9, x9, #0xbc0
   2c330:	add	x0, sp, #0x10
   2c334:	mov	x1, sp
   2c338:	str	w26, [sp, #16]
   2c33c:	stp	x23, x20, [sp, #24]
   2c340:	str	x21, [sp, #48]
   2c344:	str	wzr, [sp, #336]
   2c348:	str	wzr, [sp, #344]
   2c34c:	str	xzr, [sp, #352]
   2c350:	str	wzr, [sp, #384]
   2c354:	str	xzr, [sp, #392]
   2c358:	str	xzr, [sp, #424]
   2c35c:	str	wzr, [sp, #432]
   2c360:	str	x9, [sp, #64]
   2c364:	str	d0, [sp, #56]
   2c368:	stp	x22, x19, [sp]
   2c36c:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2c370:	mov	x1, x22
   2c374:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2c378:	mov	x1, x24
   2c37c:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2c380:	add	x0, sp, #0x10
   2c384:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2c388:	add	x0, sp, #0x210
   2c38c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2c390:	cbz	x21, 2c39c <__ubsan_handle_float_cast_overflow@@Base+0x1bc>
   2c394:	mov	x0, x21
   2c398:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2c39c:	add	sp, sp, #0x260
   2c3a0:	ldp	x20, x19, [sp, #64]
   2c3a4:	ldp	x22, x21, [sp, #48]
   2c3a8:	ldp	x24, x23, [sp, #32]
   2c3ac:	ldp	x26, x25, [sp, #16]
   2c3b0:	ldp	x29, x30, [sp], #80
   2c3b4:	ret
   2c3b8:	cmn	w24, #0x1
   2c3bc:	b.eq	2c39c <__ubsan_handle_float_cast_overflow@@Base+0x1bc>  // b.none
   2c3c0:	ldr	x1, [x20, #8]
   2c3c4:	mov	w0, #0x18                  	// #24
   2c3c8:	mov	x2, x23
   2c3cc:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2c3d0:	tbz	w0, #0, 2c298 <__ubsan_handle_float_cast_overflow@@Base+0xb8>
   2c3d4:	b	2c39c <__ubsan_handle_float_cast_overflow@@Base+0x1bc>
   2c3d8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2c3dc:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c3e0:	add	x0, x0, #0xf13
   2c3e4:	add	x2, x2, #0x7e2
   2c3e8:	mov	w1, #0x2c                  	// #44
   2c3ec:	mov	x3, xzr
   2c3f0:	mov	x4, xzr
   2c3f4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002c3f8 <__ubsan_handle_float_cast_overflow_abort@@Base>:
   2c3f8:	sub	sp, sp, #0x30
   2c3fc:	stp	x29, x30, [sp, #32]
   2c400:	add	x29, sp, #0x20
   2c404:	ldur	w8, [x29, #-8]
   2c408:	ldur	w9, [x29, #-5]
   2c40c:	mov	w10, #0x1                   	// #1
   2c410:	mov	x2, sp
   2c414:	strb	w10, [sp]
   2c418:	stur	w8, [sp, #1]
   2c41c:	str	w9, [sp, #4]
   2c420:	stp	x30, x29, [sp, #8]
   2c424:	bl	2c218 <__ubsan_handle_float_cast_overflow@@Base+0x38>
   2c428:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002c42c <__ubsan_handle_load_invalid_value@@Base>:
   2c42c:	sub	sp, sp, #0x30
   2c430:	stp	x29, x30, [sp, #32]
   2c434:	add	x29, sp, #0x20
   2c438:	ldur	w8, [x29, #-8]
   2c43c:	ldur	w9, [x29, #-5]
   2c440:	mov	x2, sp
   2c444:	strb	wzr, [sp]
   2c448:	stur	w8, [sp, #1]
   2c44c:	str	w9, [sp, #4]
   2c450:	stp	x30, x29, [sp, #8]
   2c454:	bl	2c464 <__ubsan_handle_load_invalid_value@@Base+0x38>
   2c458:	ldp	x29, x30, [sp, #32]
   2c45c:	add	sp, sp, #0x30
   2c460:	ret
   2c464:	str	x29, [sp, #-80]!
   2c468:	stp	x30, x25, [sp, #16]
   2c46c:	stp	x24, x23, [sp, #32]
   2c470:	stp	x22, x21, [sp, #48]
   2c474:	stp	x20, x19, [sp, #64]
   2c478:	sub	sp, sp, #0x270
   2c47c:	mov	x23, x2
   2c480:	mov	x20, x1
   2c484:	mov	x19, x0
   2c488:	add	x8, x0, #0xc
   2c48c:	mov	w9, #0xffffffff            	// #-1
   2c490:	ldaxr	w25, [x8]
   2c494:	stlxr	w10, w9, [x8]
   2c498:	cbnz	w10, 2c490 <__ubsan_handle_load_invalid_value@@Base+0x64>
   2c49c:	ldr	x8, [x19, #16]
   2c4a0:	ldr	x22, [x19]
   2c4a4:	ldr	w24, [x19, #8]
   2c4a8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c4ac:	add	x0, x8, #0x4
   2c4b0:	add	x1, x1, #0xbfb
   2c4b4:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2c4b8:	mov	w21, #0x19                  	// #25
   2c4bc:	cbz	w0, 2c4e0 <__ubsan_handle_load_invalid_value@@Base+0xb4>
   2c4c0:	ldr	x8, [x19, #16]
   2c4c4:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c4c8:	add	x1, x1, #0xc02
   2c4cc:	mov	w2, #0x6                   	// #6
   2c4d0:	add	x0, x8, #0x4
   2c4d4:	bl	18cec <__sanitizer_set_report_fd@@Base+0x26a8>
   2c4d8:	cmp	w0, #0x0
   2c4dc:	cinc	w21, w21, ne  // ne = any
   2c4e0:	ldrb	w8, [x23]
   2c4e4:	bfi	x24, x25, #32, #32
   2c4e8:	cbz	w8, 2c594 <__ubsan_handle_load_invalid_value@@Base+0x168>
   2c4ec:	ldr	x8, [x23, #16]
   2c4f0:	ldr	q0, [x23]
   2c4f4:	mov	w23, #0x1                   	// #1
   2c4f8:	add	x0, sp, #0x220
   2c4fc:	add	x1, sp, #0x200
   2c500:	add	x2, sp, #0x1d8
   2c504:	mov	w3, w21
   2c508:	str	w23, [sp, #472]
   2c50c:	str	x8, [sp, #528]
   2c510:	str	q0, [sp, #512]
   2c514:	stp	x22, x24, [sp, #480]
   2c518:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2c51c:	movi	v0.2d, #0x0
   2c520:	str	d0, [sp, #376]
   2c524:	str	d0, [sp, #416]
   2c528:	ldr	q0, [sp, #16]
   2c52c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c530:	add	x8, x8, #0xc09
   2c534:	str	w23, [sp, #32]
   2c538:	stp	x22, x24, [sp, #40]
   2c53c:	stp	wzr, w21, [sp, #72]
   2c540:	str	wzr, [sp, #352]
   2c544:	str	wzr, [sp, #360]
   2c548:	str	xzr, [sp, #368]
   2c54c:	str	wzr, [sp, #400]
   2c550:	str	xzr, [sp, #408]
   2c554:	str	xzr, [sp, #440]
   2c558:	str	wzr, [sp, #448]
   2c55c:	str	x8, [sp, #80]
   2c560:	stur	q0, [sp, #56]
   2c564:	ldr	x8, [x19, #16]
   2c568:	add	x0, sp, #0x20
   2c56c:	mov	x1, sp
   2c570:	stp	x8, x20, [sp]
   2c574:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2c578:	ldr	x1, [x19, #16]
   2c57c:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2c580:	add	x0, sp, #0x20
   2c584:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2c588:	add	x0, sp, #0x220
   2c58c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2c590:	b	2c5b4 <__ubsan_handle_load_invalid_value@@Base+0x188>
   2c594:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2c598:	cmp	x24, x8
   2c59c:	b.hi	2c5b4 <__ubsan_handle_load_invalid_value@@Base+0x188>  // b.pmore
   2c5a0:	ldr	x1, [x23, #8]
   2c5a4:	mov	w0, w21
   2c5a8:	mov	x2, x22
   2c5ac:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2c5b0:	tbz	w0, #0, 2c4ec <__ubsan_handle_load_invalid_value@@Base+0xc0>
   2c5b4:	add	sp, sp, #0x270
   2c5b8:	ldp	x20, x19, [sp, #64]
   2c5bc:	ldp	x22, x21, [sp, #48]
   2c5c0:	ldp	x24, x23, [sp, #32]
   2c5c4:	ldp	x30, x25, [sp, #16]
   2c5c8:	ldr	x29, [sp], #80
   2c5cc:	ret

000000000002c5d0 <__ubsan_handle_load_invalid_value_abort@@Base>:
   2c5d0:	sub	sp, sp, #0x30
   2c5d4:	stp	x29, x30, [sp, #32]
   2c5d8:	add	x29, sp, #0x20
   2c5dc:	ldur	w8, [x29, #-8]
   2c5e0:	ldur	w9, [x29, #-5]
   2c5e4:	mov	w10, #0x1                   	// #1
   2c5e8:	mov	x2, sp
   2c5ec:	strb	w10, [sp]
   2c5f0:	stur	w8, [sp, #1]
   2c5f4:	str	w9, [sp, #4]
   2c5f8:	stp	x30, x29, [sp, #8]
   2c5fc:	bl	2c464 <__ubsan_handle_load_invalid_value@@Base+0x38>
   2c600:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002c604 <__ubsan_handle_implicit_conversion@@Base>:
   2c604:	sub	sp, sp, #0x30
   2c608:	stp	x29, x30, [sp, #32]
   2c60c:	add	x29, sp, #0x20
   2c610:	ldur	w8, [x29, #-8]
   2c614:	ldur	w9, [x29, #-5]
   2c618:	mov	x3, x2
   2c61c:	mov	x2, x1
   2c620:	mov	x1, sp
   2c624:	strb	wzr, [sp]
   2c628:	stur	w8, [sp, #1]
   2c62c:	str	w9, [sp, #4]
   2c630:	stp	x30, x29, [sp, #8]
   2c634:	bl	2c644 <__ubsan_handle_implicit_conversion@@Base+0x40>
   2c638:	ldp	x29, x30, [sp, #32]
   2c63c:	add	sp, sp, #0x30
   2c640:	ret
   2c644:	stp	x29, x30, [sp, #-96]!
   2c648:	stp	x28, x27, [sp, #16]
   2c64c:	stp	x26, x25, [sp, #32]
   2c650:	stp	x24, x23, [sp, #48]
   2c654:	stp	x22, x21, [sp, #64]
   2c658:	stp	x20, x19, [sp, #80]
   2c65c:	sub	sp, sp, #0x2a0
   2c660:	mov	x19, x3
   2c664:	mov	x22, x2
   2c668:	mov	x23, x1
   2c66c:	add	x26, sp, #0x294
   2c670:	add	x9, x0, #0xc
   2c674:	mov	w10, #0xffffffff            	// #-1
   2c678:	ldaxr	w8, [x9]
   2c67c:	stlxr	w11, w10, [x9]
   2c680:	cbnz	w11, 2c678 <__ubsan_handle_implicit_conversion@@Base+0x74>
   2c684:	ldp	x21, x20, [x0, #16]
   2c688:	ldr	x24, [x0]
   2c68c:	ldr	w29, [x0, #8]
   2c690:	ldrh	w9, [x21]
   2c694:	cbz	w9, 2c6ec <__ubsan_handle_implicit_conversion@@Base+0xe8>
   2c698:	mov	w28, wzr
   2c69c:	ldrh	w9, [x20]
   2c6a0:	cbz	w9, 2c6fc <__ubsan_handle_implicit_conversion@@Base+0xf8>
   2c6a4:	mov	w27, wzr
   2c6a8:	ldrb	w9, [x0, #32]
   2c6ac:	cmp	w9, #0x4
   2c6b0:	b.hi	2c710 <__ubsan_handle_implicit_conversion@@Base+0x10c>  // b.pmore
   2c6b4:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c6b8:	add	x10, x10, #0x600
   2c6bc:	adr	x11, 2c6cc <__ubsan_handle_implicit_conversion@@Base+0xc8>
   2c6c0:	ldrb	w12, [x10, x9]
   2c6c4:	add	x11, x11, x12, lsl #2
   2c6c8:	br	x11
   2c6cc:	orr	w9, w28, w27
   2c6d0:	cmp	w9, #0x0
   2c6d4:	mov	w9, #0xe                   	// #14
   2c6d8:	cinc	w25, w9, ne  // ne = any
   2c6dc:	ldrb	w9, [x23]
   2c6e0:	bfi	x29, x8, #32, #32
   2c6e4:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c6e8:	b	2c770 <__ubsan_handle_implicit_conversion@@Base+0x16c>
   2c6ec:	ldrb	w9, [x21, #2]
   2c6f0:	and	w28, w9, #0x1
   2c6f4:	ldrh	w9, [x20]
   2c6f8:	cbnz	w9, 2c6a4 <__ubsan_handle_implicit_conversion@@Base+0xa0>
   2c6fc:	ldrb	w9, [x20, #2]
   2c700:	and	w27, w9, #0x1
   2c704:	ldrb	w9, [x0, #32]
   2c708:	cmp	w9, #0x4
   2c70c:	b.ls	2c6b4 <__ubsan_handle_implicit_conversion@@Base+0xb0>  // b.plast
   2c710:	mov	w25, wzr
   2c714:	ldrb	w9, [x23]
   2c718:	bfi	x29, x8, #32, #32
   2c71c:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c720:	b	2c770 <__ubsan_handle_implicit_conversion@@Base+0x16c>
   2c724:	mov	w25, #0x11                  	// #17
   2c728:	ldrb	w9, [x23]
   2c72c:	bfi	x29, x8, #32, #32
   2c730:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c734:	b	2c770 <__ubsan_handle_implicit_conversion@@Base+0x16c>
   2c738:	mov	w25, #0xf                   	// #15
   2c73c:	ldrb	w9, [x23]
   2c740:	bfi	x29, x8, #32, #32
   2c744:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c748:	b	2c770 <__ubsan_handle_implicit_conversion@@Base+0x16c>
   2c74c:	mov	w25, #0x10                  	// #16
   2c750:	ldrb	w9, [x23]
   2c754:	bfi	x29, x8, #32, #32
   2c758:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c75c:	b	2c770 <__ubsan_handle_implicit_conversion@@Base+0x16c>
   2c760:	mov	w25, #0xe                   	// #14
   2c764:	ldrb	w9, [x23]
   2c768:	bfi	x29, x8, #32, #32
   2c76c:	cbnz	w9, 2c790 <__ubsan_handle_implicit_conversion@@Base+0x18c>
   2c770:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2c774:	cmp	x29, x8
   2c778:	b.hi	2c960 <__ubsan_handle_implicit_conversion@@Base+0x35c>  // b.pmore
   2c77c:	ldr	x1, [x23, #8]
   2c780:	mov	w0, w25
   2c784:	mov	x2, x24
   2c788:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2c78c:	tbnz	w0, #0, 2c960 <__ubsan_handle_implicit_conversion@@Base+0x35c>
   2c790:	ldr	x8, [x23, #16]
   2c794:	ldr	q0, [x23]
   2c798:	mov	w23, #0x1                   	// #1
   2c79c:	add	x0, sp, #0x240
   2c7a0:	add	x1, sp, #0x220
   2c7a4:	add	x2, sp, #0x1f8
   2c7a8:	mov	w3, w25
   2c7ac:	str	w23, [sp, #504]
   2c7b0:	str	x8, [sp, #560]
   2c7b4:	str	q0, [sp, #544]
   2c7b8:	str	x24, [sp, #512]
   2c7bc:	str	x29, [sp, #520]
   2c7c0:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2c7c4:	movi	v0.2d, #0x0
   2c7c8:	str	d0, [sp, #408]
   2c7cc:	str	d0, [sp, #448]
   2c7d0:	ldr	q0, [sp, #48]
   2c7d4:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c7d8:	add	x8, x8, #0xc42
   2c7dc:	add	x0, sp, #0x40
   2c7e0:	mov	x1, x21
   2c7e4:	str	w23, [sp, #64]
   2c7e8:	stp	x24, x29, [sp, #72]
   2c7ec:	stp	wzr, w25, [sp, #104]
   2c7f0:	str	wzr, [sp, #384]
   2c7f4:	str	wzr, [sp, #392]
   2c7f8:	str	xzr, [sp, #400]
   2c7fc:	str	wzr, [sp, #432]
   2c800:	str	xzr, [sp, #440]
   2c804:	str	xzr, [sp, #472]
   2c808:	str	x8, [sp, #112]
   2c80c:	stur	q0, [sp, #88]
   2c810:	str	wzr, [sp, #480]
   2c814:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2c818:	add	x1, sp, #0x20
   2c81c:	stp	x21, x22, [sp, #32]
   2c820:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2c824:	ldrh	w8, [x21]
   2c828:	cbnz	w8, 2c998 <__ubsan_handle_implicit_conversion@@Base+0x394>
   2c82c:	ldr	w8, [x0, #320]
   2c830:	cmp	w8, #0x8
   2c834:	b.eq	2c980 <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   2c838:	ldrh	w9, [x21, #2]
   2c83c:	add	w11, w8, #0x1
   2c840:	add	x8, x0, x8, lsl #5
   2c844:	mov	w12, #0x2                   	// #2
   2c848:	str	w11, [x0, #320]
   2c84c:	str	w12, [x8, #64]
   2c850:	ldr	w11, [sp, #668]
   2c854:	ldr	x12, [x26]
   2c858:	mov	w10, #0x1                   	// #1
   2c85c:	lsr	w9, w9, #1
   2c860:	lsl	w9, w10, w9
   2c864:	str	w11, [x8, #76]
   2c868:	stur	x12, [x8, #68]
   2c86c:	stp	x9, xzr, [x8, #80]
   2c870:	ldr	w8, [x0, #320]
   2c874:	cmp	w8, #0x8
   2c878:	b.eq	2c980 <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   2c87c:	add	w9, w8, #0x1
   2c880:	add	x8, x0, x8, lsl #5
   2c884:	str	w9, [x0, #320]
   2c888:	str	wzr, [x8, #64]
   2c88c:	ldr	w9, [sp, #668]
   2c890:	ldr	x10, [x26]
   2c894:	adrp	x21, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c898:	adrp	x22, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2c89c:	add	x21, x21, #0xcb8
   2c8a0:	add	x22, x22, #0xcf
   2c8a4:	cmp	w28, #0x0
   2c8a8:	csel	x11, x22, x21, ne  // ne = any
   2c8ac:	mov	x1, x20
   2c8b0:	str	w9, [x8, #76]
   2c8b4:	stur	x10, [x8, #68]
   2c8b8:	str	x11, [x8, #80]
   2c8bc:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2c8c0:	add	x1, sp, #0x10
   2c8c4:	stp	x20, x19, [sp, #16]
   2c8c8:	bl	295e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x495c>
   2c8cc:	ldrh	w8, [x20]
   2c8d0:	cbnz	w8, 2c998 <__ubsan_handle_implicit_conversion@@Base+0x394>
   2c8d4:	ldr	w8, [x0, #320]
   2c8d8:	cmp	w8, #0x8
   2c8dc:	b.eq	2c980 <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   2c8e0:	ldrh	w9, [x20, #2]
   2c8e4:	add	w11, w8, #0x1
   2c8e8:	add	x8, x0, x8, lsl #5
   2c8ec:	mov	w12, #0x2                   	// #2
   2c8f0:	str	w11, [x0, #320]
   2c8f4:	str	w12, [x8, #64]
   2c8f8:	ldr	w11, [sp, #668]
   2c8fc:	ldr	x12, [x26]
   2c900:	mov	w10, #0x1                   	// #1
   2c904:	lsr	w9, w9, #1
   2c908:	lsl	w9, w10, w9
   2c90c:	str	w11, [x8, #76]
   2c910:	stur	x12, [x8, #68]
   2c914:	stp	x9, xzr, [x8, #80]
   2c918:	ldr	w8, [x0, #320]
   2c91c:	cmp	w8, #0x8
   2c920:	b.eq	2c980 <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   2c924:	add	w9, w8, #0x1
   2c928:	add	x8, x0, x8, lsl #5
   2c92c:	str	w9, [x0, #320]
   2c930:	str	wzr, [x8, #64]
   2c934:	ldr	w9, [sp, #668]
   2c938:	ldr	x10, [x26]
   2c93c:	cmp	w27, #0x0
   2c940:	csel	x11, x22, x21, ne  // ne = any
   2c944:	add	x0, sp, #0x40
   2c948:	str	w9, [x8, #76]
   2c94c:	stur	x10, [x8, #68]
   2c950:	str	x11, [x8, #80]
   2c954:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2c958:	add	x0, sp, #0x240
   2c95c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2c960:	add	sp, sp, #0x2a0
   2c964:	ldp	x20, x19, [sp, #80]
   2c968:	ldp	x22, x21, [sp, #64]
   2c96c:	ldp	x24, x23, [sp, #48]
   2c970:	ldp	x26, x25, [sp, #32]
   2c974:	ldp	x28, x27, [sp, #16]
   2c978:	ldp	x29, x30, [sp], #96
   2c97c:	ret
   2c980:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2c984:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2c988:	add	x0, x0, #0xf13
   2c98c:	add	x2, x2, #0xf53
   2c990:	mov	w1, #0xc0                  	// #192
   2c994:	b	2c9ac <__ubsan_handle_implicit_conversion@@Base+0x3a8>
   2c998:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c99c:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2c9a0:	add	x0, x0, #0xa83
   2c9a4:	add	x2, x2, #0xac4
   2c9a8:	mov	w1, #0x7c                  	// #124
   2c9ac:	mov	x3, xzr
   2c9b0:	mov	x4, xzr
   2c9b4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002c9b8 <__ubsan_handle_implicit_conversion_abort@@Base>:
   2c9b8:	sub	sp, sp, #0x30
   2c9bc:	stp	x29, x30, [sp, #32]
   2c9c0:	add	x29, sp, #0x20
   2c9c4:	ldur	w8, [x29, #-8]
   2c9c8:	ldur	w9, [x29, #-5]
   2c9cc:	mov	x3, x2
   2c9d0:	mov	x2, x1
   2c9d4:	mov	w10, #0x1                   	// #1
   2c9d8:	mov	x1, sp
   2c9dc:	strb	w10, [sp]
   2c9e0:	stur	w8, [sp, #1]
   2c9e4:	str	w9, [sp, #4]
   2c9e8:	stp	x30, x29, [sp, #8]
   2c9ec:	bl	2c644 <__ubsan_handle_implicit_conversion@@Base+0x40>
   2c9f0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002c9f4 <__ubsan_handle_invalid_builtin@@Base>:
   2c9f4:	sub	sp, sp, #0x30
   2c9f8:	stp	x29, x30, [sp, #32]
   2c9fc:	add	x29, sp, #0x20
   2ca00:	ldur	w8, [x29, #-8]
   2ca04:	ldur	w9, [x29, #-5]
   2ca08:	mov	w10, #0x1                   	// #1
   2ca0c:	mov	x1, sp
   2ca10:	strb	w10, [sp]
   2ca14:	stur	w8, [sp, #1]
   2ca18:	str	w9, [sp, #4]
   2ca1c:	stp	x30, x29, [sp, #8]
   2ca20:	bl	2ca30 <__ubsan_handle_invalid_builtin@@Base+0x3c>
   2ca24:	ldp	x29, x30, [sp, #32]
   2ca28:	add	sp, sp, #0x30
   2ca2c:	ret
   2ca30:	stp	x29, x30, [sp, #-48]!
   2ca34:	stp	x22, x21, [sp, #16]
   2ca38:	stp	x20, x19, [sp, #32]
   2ca3c:	sub	sp, sp, #0x270
   2ca40:	mov	x20, x1
   2ca44:	mov	x19, x0
   2ca48:	add	x9, x0, #0xc
   2ca4c:	mov	w10, #0xffffffff            	// #-1
   2ca50:	ldaxr	w8, [x9]
   2ca54:	stlxr	w11, w10, [x9]
   2ca58:	cbnz	w11, 2ca50 <__ubsan_handle_invalid_builtin@@Base+0x5c>
   2ca5c:	ldr	w22, [x19, #8]
   2ca60:	ldrb	w9, [x20]
   2ca64:	ldr	x21, [x19]
   2ca68:	bfi	x22, x8, #32, #32
   2ca6c:	cbz	w9, 2cb3c <__ubsan_handle_invalid_builtin@@Base+0x148>
   2ca70:	ldr	x8, [x20, #16]
   2ca74:	ldr	q0, [x20]
   2ca78:	mov	w20, #0x1                   	// #1
   2ca7c:	add	x0, sp, #0x210
   2ca80:	add	x1, sp, #0x1f0
   2ca84:	add	x2, sp, #0x1c8
   2ca88:	mov	w3, #0xd                   	// #13
   2ca8c:	str	w20, [sp, #456]
   2ca90:	str	x8, [sp, #512]
   2ca94:	str	q0, [sp, #496]
   2ca98:	stp	x21, x22, [sp, #464]
   2ca9c:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2caa0:	movi	v0.2d, #0x0
   2caa4:	str	d0, [sp, #360]
   2caa8:	str	d0, [sp, #400]
   2caac:	ldr	q0, [sp]
   2cab0:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cab4:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cab8:	add	x9, x9, #0xcbb
   2cabc:	stur	q0, [sp, #40]
   2cac0:	ldr	d0, [x8, #1456]
   2cac4:	str	x9, [sp, #64]
   2cac8:	add	x9, sp, #0x165
   2cacc:	ldur	x9, [x9, #255]
   2cad0:	str	w20, [sp, #16]
   2cad4:	stp	x21, x22, [sp, #24]
   2cad8:	str	wzr, [sp, #344]
   2cadc:	str	xzr, [sp, #352]
   2cae0:	str	wzr, [sp, #384]
   2cae4:	str	xzr, [sp, #392]
   2cae8:	str	xzr, [sp, #424]
   2caec:	str	wzr, [sp, #432]
   2caf0:	str	d0, [sp, #56]
   2caf4:	ldrb	w10, [x19, #16]
   2caf8:	stur	x9, [sp, #84]
   2cafc:	ldr	w9, [sp, #620]
   2cb00:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cb04:	adrp	x11, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cb08:	add	x8, x8, #0xcf3
   2cb0c:	add	x11, x11, #0xced
   2cb10:	cmp	w10, #0x0
   2cb14:	csel	x8, x11, x8, eq  // eq = none
   2cb18:	add	x0, sp, #0x10
   2cb1c:	str	w20, [sp, #336]
   2cb20:	str	wzr, [sp, #80]
   2cb24:	str	w9, [sp, #92]
   2cb28:	str	x8, [sp, #96]
   2cb2c:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2cb30:	add	x0, sp, #0x210
   2cb34:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2cb38:	b	2cb5c <__ubsan_handle_invalid_builtin@@Base+0x168>
   2cb3c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2cb40:	cmp	x22, x8
   2cb44:	b.hi	2cb5c <__ubsan_handle_invalid_builtin@@Base+0x168>  // b.pmore
   2cb48:	ldr	x1, [x20, #8]
   2cb4c:	mov	w0, #0xd                   	// #13
   2cb50:	mov	x2, x21
   2cb54:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2cb58:	tbz	w0, #0, 2ca70 <__ubsan_handle_invalid_builtin@@Base+0x7c>
   2cb5c:	add	sp, sp, #0x270
   2cb60:	ldp	x20, x19, [sp, #32]
   2cb64:	ldp	x22, x21, [sp, #16]
   2cb68:	ldp	x29, x30, [sp], #48
   2cb6c:	ret

000000000002cb70 <__ubsan_handle_invalid_builtin_abort@@Base>:
   2cb70:	sub	sp, sp, #0x30
   2cb74:	stp	x29, x30, [sp, #32]
   2cb78:	add	x29, sp, #0x20
   2cb7c:	ldur	w8, [x29, #-8]
   2cb80:	ldur	w9, [x29, #-5]
   2cb84:	mov	w10, #0x1                   	// #1
   2cb88:	mov	x1, sp
   2cb8c:	strb	w10, [sp]
   2cb90:	stur	w8, [sp, #1]
   2cb94:	str	w9, [sp, #4]
   2cb98:	stp	x30, x29, [sp, #8]
   2cb9c:	bl	2ca30 <__ubsan_handle_invalid_builtin@@Base+0x3c>
   2cba0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002cba4 <__ubsan_handle_nonnull_return_v1@@Base>:
   2cba4:	sub	sp, sp, #0x30
   2cba8:	stp	x29, x30, [sp, #32]
   2cbac:	add	x29, sp, #0x20
   2cbb0:	ldur	w8, [x29, #-8]
   2cbb4:	ldur	w9, [x29, #-5]
   2cbb8:	mov	x2, sp
   2cbbc:	mov	w3, #0x1                   	// #1
   2cbc0:	strb	wzr, [sp]
   2cbc4:	stur	w8, [sp, #1]
   2cbc8:	str	w9, [sp, #4]
   2cbcc:	stp	x30, x29, [sp, #8]
   2cbd0:	bl	2cbe0 <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   2cbd4:	ldp	x29, x30, [sp, #32]
   2cbd8:	add	sp, sp, #0x30
   2cbdc:	ret
   2cbe0:	str	x29, [sp, #-64]!
   2cbe4:	stp	x30, x23, [sp, #16]
   2cbe8:	stp	x22, x21, [sp, #32]
   2cbec:	stp	x20, x19, [sp, #48]
   2cbf0:	sub	sp, sp, #0x430
   2cbf4:	cbz	x1, 2cd98 <__ubsan_handle_nonnull_return_v1@@Base+0x1f4>
   2cbf8:	mov	w19, w3
   2cbfc:	mov	x21, x2
   2cc00:	mov	x20, x0
   2cc04:	add	x9, x1, #0xc
   2cc08:	mov	w10, #0xffffffff            	// #-1
   2cc0c:	ldaxr	w8, [x9]
   2cc10:	stlxr	w11, w10, [x9]
   2cc14:	cbnz	w11, 2cc0c <__ubsan_handle_nonnull_return_v1@@Base+0x68>
   2cc18:	ldr	w23, [x1, #8]
   2cc1c:	ldrb	w9, [x21]
   2cc20:	ldr	x22, [x1]
   2cc24:	bfi	x23, x8, #32, #32
   2cc28:	cbz	w9, 2cd60 <__ubsan_handle_nonnull_return_v1@@Base+0x1bc>
   2cc2c:	ldr	x8, [x21, #16]
   2cc30:	ldr	q0, [x21]
   2cc34:	mov	w21, #0x1                   	// #1
   2cc38:	add	x0, sp, #0x3d0
   2cc3c:	add	x1, sp, #0x3b0
   2cc40:	add	x2, sp, #0x388
   2cc44:	mov	w3, #0x1c                  	// #28
   2cc48:	str	w21, [sp, #904]
   2cc4c:	str	x8, [sp, #960]
   2cc50:	str	q0, [sp, #944]
   2cc54:	str	x22, [sp, #912]
   2cc58:	str	x23, [sp, #920]
   2cc5c:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2cc60:	movi	v0.2d, #0x0
   2cc64:	str	d0, [sp, #808]
   2cc68:	str	d0, [sp, #848]
   2cc6c:	ldr	q0, [sp, #448]
   2cc70:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cc74:	add	x10, sp, #0xe9
   2cc78:	str	w21, [sp, #464]
   2cc7c:	stp	x22, x23, [sp, #472]
   2cc80:	str	wzr, [sp, #784]
   2cc84:	str	wzr, [sp, #792]
   2cc88:	str	xzr, [sp, #800]
   2cc8c:	str	wzr, [sp, #832]
   2cc90:	stur	q0, [x10, #255]
   2cc94:	ldr	d0, [x8, #1464]
   2cc98:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cc9c:	add	x9, x9, #0xd2c
   2cca0:	add	x0, sp, #0x1d0
   2cca4:	str	xzr, [sp, #840]
   2cca8:	str	xzr, [sp, #872]
   2ccac:	str	x9, [sp, #512]
   2ccb0:	str	d0, [sp, #504]
   2ccb4:	str	wzr, [sp, #880]
   2ccb8:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2ccbc:	ldr	x8, [x20]
   2ccc0:	cbz	x8, 2cd54 <__ubsan_handle_nonnull_return_v1@@Base+0x1b0>
   2ccc4:	movi	v0.2d, #0x0
   2ccc8:	ldr	x9, [x20, #8]
   2cccc:	str	d0, [sp, #360]
   2ccd0:	str	d0, [sp, #400]
   2ccd4:	ldr	q0, [sp]
   2ccd8:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ccdc:	adrp	x12, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cce0:	tst	w19, #0x1
   2cce4:	stur	q0, [sp, #40]
   2cce8:	ldr	d0, [x10, #1472]
   2ccec:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ccf0:	adrp	x11, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2ccf4:	add	x12, x12, #0xd9a
   2ccf8:	add	x10, x10, #0xd80
   2ccfc:	add	x11, x11, #0xd6e
   2cd00:	csel	x10, x10, x12, ne  // ne = any
   2cd04:	add	x12, sp, #0x325
   2cd08:	str	x11, [sp, #64]
   2cd0c:	ldr	w11, [sp, #1068]
   2cd10:	ldur	x12, [x12, #255]
   2cd14:	add	x0, sp, #0x10
   2cd18:	str	w21, [sp, #16]
   2cd1c:	str	wzr, [sp, #344]
   2cd20:	str	xzr, [sp, #352]
   2cd24:	str	wzr, [sp, #384]
   2cd28:	str	xzr, [sp, #392]
   2cd2c:	str	xzr, [sp, #424]
   2cd30:	str	wzr, [sp, #432]
   2cd34:	str	w21, [sp, #336]
   2cd38:	str	wzr, [sp, #80]
   2cd3c:	stp	x8, x9, [sp, #24]
   2cd40:	str	w11, [sp, #92]
   2cd44:	stur	x12, [sp, #84]
   2cd48:	str	d0, [sp, #56]
   2cd4c:	str	x10, [sp, #96]
   2cd50:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2cd54:	add	x0, sp, #0x3d0
   2cd58:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2cd5c:	b	2cd80 <__ubsan_handle_nonnull_return_v1@@Base+0x1dc>
   2cd60:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2cd64:	cmp	x23, x8
   2cd68:	b.hi	2cd80 <__ubsan_handle_nonnull_return_v1@@Base+0x1dc>  // b.pmore
   2cd6c:	ldr	x1, [x21, #8]
   2cd70:	mov	w0, #0x1c                  	// #28
   2cd74:	mov	x2, x22
   2cd78:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2cd7c:	tbz	w0, #0, 2cc2c <__ubsan_handle_nonnull_return_v1@@Base+0x88>
   2cd80:	add	sp, sp, #0x430
   2cd84:	ldp	x20, x19, [sp, #48]
   2cd88:	ldp	x22, x21, [sp, #32]
   2cd8c:	ldp	x30, x23, [sp, #16]
   2cd90:	ldr	x29, [sp], #64
   2cd94:	ret
   2cd98:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cd9c:	adrp	x2, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cda0:	add	x0, x0, #0x75f
   2cda4:	add	x2, x2, #0xcf9
   2cda8:	mov	w1, #0x25c                 	// #604
   2cdac:	mov	x3, xzr
   2cdb0:	mov	x4, xzr
   2cdb4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002cdb8 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
   2cdb8:	sub	sp, sp, #0x30
   2cdbc:	stp	x29, x30, [sp, #32]
   2cdc0:	add	x29, sp, #0x20
   2cdc4:	ldur	w8, [x29, #-8]
   2cdc8:	ldur	w9, [x29, #-5]
   2cdcc:	mov	w10, #0x1                   	// #1
   2cdd0:	mov	x2, sp
   2cdd4:	mov	w3, #0x1                   	// #1
   2cdd8:	strb	w10, [sp]
   2cddc:	stur	w8, [sp, #1]
   2cde0:	str	w9, [sp, #4]
   2cde4:	stp	x30, x29, [sp, #8]
   2cde8:	bl	2cbe0 <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   2cdec:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002cdf0 <__ubsan_handle_nullability_return_v1@@Base>:
   2cdf0:	sub	sp, sp, #0x30
   2cdf4:	stp	x29, x30, [sp, #32]
   2cdf8:	add	x29, sp, #0x20
   2cdfc:	ldur	w8, [x29, #-8]
   2ce00:	ldur	w9, [x29, #-5]
   2ce04:	mov	x2, sp
   2ce08:	mov	w3, wzr
   2ce0c:	strb	wzr, [sp]
   2ce10:	stur	w8, [sp, #1]
   2ce14:	str	w9, [sp, #4]
   2ce18:	stp	x30, x29, [sp, #8]
   2ce1c:	bl	2cbe0 <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   2ce20:	ldp	x29, x30, [sp, #32]
   2ce24:	add	sp, sp, #0x30
   2ce28:	ret

000000000002ce2c <__ubsan_handle_nullability_return_v1_abort@@Base>:
   2ce2c:	sub	sp, sp, #0x30
   2ce30:	stp	x29, x30, [sp, #32]
   2ce34:	add	x29, sp, #0x20
   2ce38:	ldur	w8, [x29, #-8]
   2ce3c:	ldur	w9, [x29, #-5]
   2ce40:	mov	w10, #0x1                   	// #1
   2ce44:	mov	x2, sp
   2ce48:	mov	w3, wzr
   2ce4c:	strb	w10, [sp]
   2ce50:	stur	w8, [sp, #1]
   2ce54:	str	w9, [sp, #4]
   2ce58:	stp	x30, x29, [sp, #8]
   2ce5c:	bl	2cbe0 <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   2ce60:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002ce64 <__ubsan_handle_nonnull_arg@@Base>:
   2ce64:	sub	sp, sp, #0x30
   2ce68:	stp	x29, x30, [sp, #32]
   2ce6c:	add	x29, sp, #0x20
   2ce70:	ldur	w8, [x29, #-8]
   2ce74:	ldur	w9, [x29, #-5]
   2ce78:	mov	x1, sp
   2ce7c:	mov	w2, #0x1                   	// #1
   2ce80:	strb	wzr, [sp]
   2ce84:	stur	w8, [sp, #1]
   2ce88:	str	w9, [sp, #4]
   2ce8c:	stp	x30, x29, [sp, #8]
   2ce90:	bl	2cea0 <__ubsan_handle_nonnull_arg@@Base+0x3c>
   2ce94:	ldp	x29, x30, [sp, #32]
   2ce98:	add	sp, sp, #0x30
   2ce9c:	ret
   2cea0:	stp	x29, x30, [sp, #-64]!
   2cea4:	stp	x24, x23, [sp, #16]
   2cea8:	stp	x22, x21, [sp, #32]
   2ceac:	stp	x20, x19, [sp, #48]
   2ceb0:	sub	sp, sp, #0x280
   2ceb4:	mov	w19, w2
   2ceb8:	mov	x21, x1
   2cebc:	mov	x20, x0
   2cec0:	add	x23, sp, #0x274
   2cec4:	add	x9, x0, #0xc
   2cec8:	mov	w10, #0xffffffff            	// #-1
   2cecc:	ldaxr	w8, [x9]
   2ced0:	stlxr	w11, w10, [x9]
   2ced4:	cbnz	w11, 2cecc <__ubsan_handle_nonnull_arg@@Base+0x68>
   2ced8:	ldr	w24, [x20, #8]
   2cedc:	ldrb	w9, [x21]
   2cee0:	ldr	x22, [x20]
   2cee4:	bfi	x24, x8, #32, #32
   2cee8:	cbz	w9, 2d034 <__ubsan_handle_nonnull_arg@@Base+0x1d0>
   2ceec:	ldr	x8, [x21, #16]
   2cef0:	ldr	q0, [x21]
   2cef4:	mov	w21, #0x1                   	// #1
   2cef8:	add	x0, sp, #0x220
   2cefc:	add	x1, sp, #0x200
   2cf00:	add	x2, sp, #0x1d8
   2cf04:	mov	w3, #0x1d                  	// #29
   2cf08:	str	w21, [sp, #472]
   2cf0c:	str	x8, [sp, #528]
   2cf10:	str	q0, [sp, #512]
   2cf14:	stp	x22, x24, [sp, #480]
   2cf18:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2cf1c:	movi	v0.2d, #0x0
   2cf20:	str	d0, [sp, #376]
   2cf24:	str	d0, [sp, #416]
   2cf28:	ldr	q0, [sp, #16]
   2cf2c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cf30:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cf34:	add	x9, x9, #0xdba
   2cf38:	stur	q0, [sp, #56]
   2cf3c:	ldr	d0, [x8, #1480]
   2cf40:	str	w21, [sp, #32]
   2cf44:	stp	x22, x24, [sp, #40]
   2cf48:	str	wzr, [sp, #360]
   2cf4c:	str	xzr, [sp, #368]
   2cf50:	str	wzr, [sp, #400]
   2cf54:	str	xzr, [sp, #408]
   2cf58:	str	xzr, [sp, #440]
   2cf5c:	str	wzr, [sp, #448]
   2cf60:	str	x9, [sp, #80]
   2cf64:	str	d0, [sp, #72]
   2cf68:	ldr	w8, [sp, #636]
   2cf6c:	ldr	x11, [x23]
   2cf70:	ldrsw	x9, [x20, #32]
   2cf74:	mov	w10, #0x2                   	// #2
   2cf78:	add	x0, sp, #0x20
   2cf7c:	str	w10, [sp, #96]
   2cf80:	str	w8, [sp, #108]
   2cf84:	str	w21, [sp, #352]
   2cf88:	stur	x11, [sp, #100]
   2cf8c:	stp	x9, xzr, [sp, #112]
   2cf90:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2cf94:	ldr	x8, [x20, #16]
   2cf98:	cbz	x8, 2d028 <__ubsan_handle_nonnull_arg@@Base+0x1c4>
   2cf9c:	movi	v0.2d, #0x0
   2cfa0:	ldr	x9, [x20, #24]
   2cfa4:	str	d0, [sp, #376]
   2cfa8:	str	d0, [sp, #416]
   2cfac:	ldr	q0, [sp]
   2cfb0:	adrp	x11, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cfb4:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cfb8:	add	x11, x11, #0xd6e
   2cfbc:	stur	q0, [sp, #56]
   2cfc0:	ldr	d0, [x10, #1488]
   2cfc4:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cfc8:	str	x11, [sp, #80]
   2cfcc:	adrp	x11, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2cfd0:	tst	w19, #0x1
   2cfd4:	add	x10, x10, #0xe01
   2cfd8:	add	x11, x11, #0xd88
   2cfdc:	csel	x10, x11, x10, ne  // ne = any
   2cfe0:	ldr	w11, [sp, #636]
   2cfe4:	ldr	x12, [x23]
   2cfe8:	add	x0, sp, #0x20
   2cfec:	str	w21, [sp, #32]
   2cff0:	str	w21, [sp, #352]
   2cff4:	str	wzr, [sp, #360]
   2cff8:	str	xzr, [sp, #368]
   2cffc:	str	wzr, [sp, #400]
   2d000:	str	xzr, [sp, #408]
   2d004:	str	xzr, [sp, #440]
   2d008:	str	wzr, [sp, #448]
   2d00c:	str	wzr, [sp, #96]
   2d010:	stp	x8, x9, [sp, #40]
   2d014:	str	w11, [sp, #108]
   2d018:	stur	x12, [sp, #100]
   2d01c:	str	d0, [sp, #72]
   2d020:	str	x10, [sp, #112]
   2d024:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2d028:	add	x0, sp, #0x220
   2d02c:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2d030:	b	2d054 <__ubsan_handle_nonnull_arg@@Base+0x1f0>
   2d034:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2d038:	cmp	x24, x8
   2d03c:	b.hi	2d054 <__ubsan_handle_nonnull_arg@@Base+0x1f0>  // b.pmore
   2d040:	ldr	x1, [x21, #8]
   2d044:	mov	w0, #0x1d                  	// #29
   2d048:	mov	x2, x22
   2d04c:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2d050:	tbz	w0, #0, 2ceec <__ubsan_handle_nonnull_arg@@Base+0x88>
   2d054:	add	sp, sp, #0x280
   2d058:	ldp	x20, x19, [sp, #48]
   2d05c:	ldp	x22, x21, [sp, #32]
   2d060:	ldp	x24, x23, [sp, #16]
   2d064:	ldp	x29, x30, [sp], #64
   2d068:	ret

000000000002d06c <__ubsan_handle_nonnull_arg_abort@@Base>:
   2d06c:	sub	sp, sp, #0x30
   2d070:	stp	x29, x30, [sp, #32]
   2d074:	add	x29, sp, #0x20
   2d078:	ldur	w8, [x29, #-8]
   2d07c:	ldur	w9, [x29, #-5]
   2d080:	mov	w10, #0x1                   	// #1
   2d084:	mov	x1, sp
   2d088:	mov	w2, #0x1                   	// #1
   2d08c:	strb	w10, [sp]
   2d090:	stur	w8, [sp, #1]
   2d094:	str	w9, [sp, #4]
   2d098:	stp	x30, x29, [sp, #8]
   2d09c:	bl	2cea0 <__ubsan_handle_nonnull_arg@@Base+0x3c>
   2d0a0:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002d0a4 <__ubsan_handle_nullability_arg@@Base>:
   2d0a4:	sub	sp, sp, #0x30
   2d0a8:	stp	x29, x30, [sp, #32]
   2d0ac:	add	x29, sp, #0x20
   2d0b0:	ldur	w8, [x29, #-8]
   2d0b4:	ldur	w9, [x29, #-5]
   2d0b8:	mov	x1, sp
   2d0bc:	mov	w2, wzr
   2d0c0:	strb	wzr, [sp]
   2d0c4:	stur	w8, [sp, #1]
   2d0c8:	str	w9, [sp, #4]
   2d0cc:	stp	x30, x29, [sp, #8]
   2d0d0:	bl	2cea0 <__ubsan_handle_nonnull_arg@@Base+0x3c>
   2d0d4:	ldp	x29, x30, [sp, #32]
   2d0d8:	add	sp, sp, #0x30
   2d0dc:	ret

000000000002d0e0 <__ubsan_handle_nullability_arg_abort@@Base>:
   2d0e0:	sub	sp, sp, #0x30
   2d0e4:	stp	x29, x30, [sp, #32]
   2d0e8:	add	x29, sp, #0x20
   2d0ec:	ldur	w8, [x29, #-8]
   2d0f0:	ldur	w9, [x29, #-5]
   2d0f4:	mov	w10, #0x1                   	// #1
   2d0f8:	mov	x1, sp
   2d0fc:	mov	w2, wzr
   2d100:	strb	w10, [sp]
   2d104:	stur	w8, [sp, #1]
   2d108:	str	w9, [sp, #4]
   2d10c:	stp	x30, x29, [sp, #8]
   2d110:	bl	2cea0 <__ubsan_handle_nonnull_arg@@Base+0x3c>
   2d114:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002d118 <__ubsan_handle_pointer_overflow@@Base>:
   2d118:	sub	sp, sp, #0x30
   2d11c:	stp	x29, x30, [sp, #32]
   2d120:	add	x29, sp, #0x20
   2d124:	ldur	w8, [x29, #-8]
   2d128:	ldur	w9, [x29, #-5]
   2d12c:	mov	x3, sp
   2d130:	strb	wzr, [sp]
   2d134:	stur	w8, [sp, #1]
   2d138:	str	w9, [sp, #4]
   2d13c:	stp	x30, x29, [sp, #8]
   2d140:	bl	2d150 <__ubsan_handle_pointer_overflow@@Base+0x38>
   2d144:	ldp	x29, x30, [sp, #32]
   2d148:	add	sp, sp, #0x30
   2d14c:	ret
   2d150:	stp	x29, x30, [sp, #-80]!
   2d154:	stp	x26, x25, [sp, #16]
   2d158:	stp	x24, x23, [sp, #32]
   2d15c:	stp	x22, x21, [sp, #48]
   2d160:	stp	x20, x19, [sp, #64]
   2d164:	sub	sp, sp, #0x470
   2d168:	mov	x23, x3
   2d16c:	mov	x19, x2
   2d170:	mov	x20, x1
   2d174:	add	x25, sp, #0x464
   2d178:	add	x24, sp, #0x50
   2d17c:	add	x9, x0, #0xc
   2d180:	mov	w10, #0xffffffff            	// #-1
   2d184:	ldaxr	w8, [x9]
   2d188:	stlxr	w11, w10, [x9]
   2d18c:	cbnz	w11, 2d184 <__ubsan_handle_pointer_overflow@@Base+0x6c>
   2d190:	ldr	x22, [x0]
   2d194:	ldr	w26, [x0, #8]
   2d198:	orr	x9, x19, x20
   2d19c:	cbz	x9, 2d1bc <__ubsan_handle_pointer_overflow@@Base+0xa4>
   2d1a0:	cbnz	x20, 2d1d0 <__ubsan_handle_pointer_overflow@@Base+0xb8>
   2d1a4:	cbz	x19, 2d1d0 <__ubsan_handle_pointer_overflow@@Base+0xb8>
   2d1a8:	mov	w21, #0x3                   	// #3
   2d1ac:	ldrb	w9, [x23]
   2d1b0:	bfi	x26, x8, #32, #32
   2d1b4:	cbnz	w9, 2d20c <__ubsan_handle_pointer_overflow@@Base+0xf4>
   2d1b8:	b	2d1ec <__ubsan_handle_pointer_overflow@@Base+0xd4>
   2d1bc:	mov	w21, #0x2                   	// #2
   2d1c0:	ldrb	w9, [x23]
   2d1c4:	bfi	x26, x8, #32, #32
   2d1c8:	cbnz	w9, 2d20c <__ubsan_handle_pointer_overflow@@Base+0xf4>
   2d1cc:	b	2d1ec <__ubsan_handle_pointer_overflow@@Base+0xd4>
   2d1d0:	cmp	x19, #0x0
   2d1d4:	ccmp	x20, #0x0, #0x4, eq  // eq = none
   2d1d8:	mov	w9, #0x4                   	// #4
   2d1dc:	cinc	w21, w9, eq  // eq = none
   2d1e0:	ldrb	w9, [x23]
   2d1e4:	bfi	x26, x8, #32, #32
   2d1e8:	cbnz	w9, 2d20c <__ubsan_handle_pointer_overflow@@Base+0xf4>
   2d1ec:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2d1f0:	cmp	x26, x8
   2d1f4:	b.hi	2d498 <__ubsan_handle_pointer_overflow@@Base+0x380>  // b.pmore
   2d1f8:	ldr	x1, [x23, #8]
   2d1fc:	mov	w0, w21
   2d200:	mov	x2, x22
   2d204:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2d208:	tbnz	w0, #0, 2d498 <__ubsan_handle_pointer_overflow@@Base+0x380>
   2d20c:	ldr	x8, [x23, #16]
   2d210:	ldr	q0, [x23]
   2d214:	mov	w23, #0x1                   	// #1
   2d218:	add	x0, sp, #0x410
   2d21c:	add	x1, sp, #0x3f0
   2d220:	add	x2, sp, #0x3c8
   2d224:	mov	w3, w21
   2d228:	str	w23, [sp, #968]
   2d22c:	str	x8, [sp, #1024]
   2d230:	str	q0, [sp, #1008]
   2d234:	str	x22, [sp, #976]
   2d238:	str	x26, [sp, #984]
   2d23c:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2d240:	cmp	w21, #0x4
   2d244:	b.eq	2d2bc <__ubsan_handle_pointer_overflow@@Base+0x1a4>  // b.none
   2d248:	cmp	w21, #0x3
   2d24c:	b.eq	2d32c <__ubsan_handle_pointer_overflow@@Base+0x214>  // b.none
   2d250:	cmp	w21, #0x2
   2d254:	b.ne	2d3a0 <__ubsan_handle_pointer_overflow@@Base+0x288>  // b.any
   2d258:	movi	v0.2d, #0x0
   2d25c:	str	d0, [sp, #872]
   2d260:	str	d0, [sp, #912]
   2d264:	ldr	q0, [sp, #512]
   2d268:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d26c:	add	x11, sp, #0x129
   2d270:	str	x22, [sp, #536]
   2d274:	str	x26, [sp, #544]
   2d278:	str	wzr, [sp, #848]
   2d27c:	str	wzr, [sp, #856]
   2d280:	str	xzr, [sp, #864]
   2d284:	str	wzr, [sp, #896]
   2d288:	str	xzr, [sp, #904]
   2d28c:	stur	q0, [x11, #255]
   2d290:	ldr	d0, [x9, #1512]
   2d294:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d298:	mov	w8, #0x1                   	// #1
   2d29c:	add	x10, x10, #0xe1a
   2d2a0:	str	xzr, [sp, #936]
   2d2a4:	str	w8, [sp, #528]
   2d2a8:	str	x10, [sp, #576]
   2d2ac:	str	d0, [sp, #568]
   2d2b0:	str	wzr, [sp, #944]
   2d2b4:	add	x0, sp, #0x210
   2d2b8:	b	2d48c <__ubsan_handle_pointer_overflow@@Base+0x374>
   2d2bc:	movi	v0.2d, #0x0
   2d2c0:	str	d0, [sp, #424]
   2d2c4:	str	d0, [sp, #464]
   2d2c8:	ldr	q0, [sp, #48]
   2d2cc:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d2d0:	ldr	x11, [x25]
   2d2d4:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d2d8:	stur	q0, [sp, #104]
   2d2dc:	ldr	d0, [x8, #1496]
   2d2e0:	ldr	w8, [sp, #1132]
   2d2e4:	add	x9, x9, #0xe6b
   2d2e8:	mov	w10, #0x5                   	// #5
   2d2ec:	str	w23, [sp, #80]
   2d2f0:	stp	x22, x26, [sp, #88]
   2d2f4:	str	wzr, [sp, #408]
   2d2f8:	str	xzr, [sp, #416]
   2d2fc:	str	wzr, [sp, #448]
   2d300:	str	xzr, [sp, #456]
   2d304:	str	xzr, [sp, #488]
   2d308:	str	wzr, [sp, #496]
   2d30c:	str	w23, [sp, #400]
   2d310:	str	x9, [sp, #128]
   2d314:	str	w10, [sp, #144]
   2d318:	str	w8, [sp, #156]
   2d31c:	str	d0, [sp, #120]
   2d320:	stur	x11, [x24, #68]
   2d324:	str	x20, [sp, #160]
   2d328:	b	2d488 <__ubsan_handle_pointer_overflow@@Base+0x370>
   2d32c:	movi	v0.2d, #0x0
   2d330:	str	d0, [sp, #424]
   2d334:	str	d0, [sp, #464]
   2d338:	ldr	q0, [sp, #64]
   2d33c:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d340:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d344:	add	x10, x10, #0xe3f
   2d348:	stur	q0, [sp, #104]
   2d34c:	ldr	d0, [x9, #1504]
   2d350:	ldr	x11, [x25]
   2d354:	str	x10, [sp, #128]
   2d358:	ldr	w10, [sp, #1132]
   2d35c:	mov	w8, #0x1                   	// #1
   2d360:	mov	w9, #0x2                   	// #2
   2d364:	stp	x22, x26, [sp, #88]
   2d368:	str	wzr, [sp, #408]
   2d36c:	str	xzr, [sp, #416]
   2d370:	str	wzr, [sp, #448]
   2d374:	str	xzr, [sp, #456]
   2d378:	str	xzr, [sp, #488]
   2d37c:	str	wzr, [sp, #496]
   2d380:	str	w8, [sp, #80]
   2d384:	str	w8, [sp, #400]
   2d388:	str	w9, [sp, #144]
   2d38c:	str	w10, [sp, #156]
   2d390:	str	d0, [sp, #120]
   2d394:	stur	x11, [x24, #68]
   2d398:	stp	x19, xzr, [sp, #160]
   2d39c:	b	2d488 <__ubsan_handle_pointer_overflow@@Base+0x370>
   2d3a0:	lsr	x8, x20, #63
   2d3a4:	lsr	x9, x19, #63
   2d3a8:	cmp	w8, w9
   2d3ac:	b.ne	2d3e0 <__ubsan_handle_pointer_overflow@@Base+0x2c8>  // b.any
   2d3b0:	mov	w8, #0x1                   	// #1
   2d3b4:	cmp	x20, x19
   2d3b8:	b.ls	2d408 <__ubsan_handle_pointer_overflow@@Base+0x2f0>  // b.plast
   2d3bc:	movi	v0.2d, #0x0
   2d3c0:	str	d0, [sp, #424]
   2d3c4:	str	d0, [sp, #464]
   2d3c8:	ldr	q0, [sp, #32]
   2d3cc:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d3d0:	stp	x22, x26, [sp, #88]
   2d3d4:	stp	wzr, w21, [sp, #120]
   2d3d8:	add	x9, x9, #0xeb1
   2d3dc:	b	2d428 <__ubsan_handle_pointer_overflow@@Base+0x310>
   2d3e0:	movi	v0.2d, #0x0
   2d3e4:	str	d0, [sp, #424]
   2d3e8:	str	d0, [sp, #464]
   2d3ec:	ldr	q0, [sp]
   2d3f0:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d3f4:	mov	w8, #0x1                   	// #1
   2d3f8:	add	x9, x9, #0xf1c
   2d3fc:	stp	x22, x26, [sp, #88]
   2d400:	stp	wzr, w21, [sp, #120]
   2d404:	b	2d428 <__ubsan_handle_pointer_overflow@@Base+0x310>
   2d408:	movi	v0.2d, #0x0
   2d40c:	str	d0, [sp, #424]
   2d410:	str	d0, [sp, #464]
   2d414:	ldr	q0, [sp, #16]
   2d418:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d41c:	stp	x22, x26, [sp, #88]
   2d420:	stp	wzr, w21, [sp, #120]
   2d424:	add	x9, x9, #0xee4
   2d428:	str	w8, [sp, #80]
   2d42c:	ldr	w8, [sp, #1132]
   2d430:	ldr	x11, [x25]
   2d434:	str	x9, [sp, #128]
   2d438:	ldr	w9, [sp, #1132]
   2d43c:	ldr	x12, [x25]
   2d440:	mov	w10, #0x5                   	// #5
   2d444:	str	w8, [sp, #156]
   2d448:	mov	w8, #0x2                   	// #2
   2d44c:	str	xzr, [sp, #416]
   2d450:	str	wzr, [sp, #448]
   2d454:	str	xzr, [sp, #456]
   2d458:	str	xzr, [sp, #488]
   2d45c:	str	wzr, [sp, #496]
   2d460:	str	wzr, [sp, #408]
   2d464:	str	w10, [sp, #144]
   2d468:	stur	q0, [sp, #104]
   2d46c:	stur	x11, [x24, #68]
   2d470:	str	x20, [sp, #160]
   2d474:	str	w8, [sp, #400]
   2d478:	str	w10, [sp, #176]
   2d47c:	str	w9, [sp, #188]
   2d480:	stur	x12, [x24, #100]
   2d484:	str	x19, [sp, #192]
   2d488:	add	x0, sp, #0x50
   2d48c:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2d490:	add	x0, sp, #0x410
   2d494:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2d498:	add	sp, sp, #0x470
   2d49c:	ldp	x20, x19, [sp, #64]
   2d4a0:	ldp	x22, x21, [sp, #48]
   2d4a4:	ldp	x24, x23, [sp, #32]
   2d4a8:	ldp	x26, x25, [sp, #16]
   2d4ac:	ldp	x29, x30, [sp], #80
   2d4b0:	ret

000000000002d4b4 <__ubsan_handle_pointer_overflow_abort@@Base>:
   2d4b4:	sub	sp, sp, #0x30
   2d4b8:	stp	x29, x30, [sp, #32]
   2d4bc:	add	x29, sp, #0x20
   2d4c0:	ldur	w8, [x29, #-8]
   2d4c4:	ldur	w9, [x29, #-5]
   2d4c8:	mov	w10, #0x1                   	// #1
   2d4cc:	mov	x3, sp
   2d4d0:	strb	w10, [sp]
   2d4d4:	stur	w8, [sp, #1]
   2d4d8:	str	w9, [sp, #4]
   2d4dc:	stp	x30, x29, [sp, #8]
   2d4e0:	bl	2d150 <__ubsan_handle_pointer_overflow@@Base+0x38>
   2d4e4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002d4e8 <__ubsan_handle_cfi_check_fail@@Base>:
   2d4e8:	sub	sp, sp, #0x50
   2d4ec:	stp	x29, x30, [sp, #64]
   2d4f0:	add	x29, sp, #0x40
   2d4f4:	ldrb	w8, [x0]
   2d4f8:	and	w8, w8, #0xfe
   2d4fc:	cmp	w8, #0x4
   2d500:	b.ne	2d530 <__ubsan_handle_cfi_check_fail@@Base+0x48>  // b.any
   2d504:	ldur	w8, [x29, #-8]
   2d508:	ldur	w9, [x29, #-5]
   2d50c:	add	x2, sp, #0x20
   2d510:	strb	wzr, [sp, #32]
   2d514:	stur	w8, [sp, #33]
   2d518:	str	w9, [sp, #36]
   2d51c:	stp	x30, x29, [sp, #40]
   2d520:	bl	2d564 <__ubsan_handle_cfi_check_fail@@Base+0x7c>
   2d524:	ldp	x29, x30, [sp, #64]
   2d528:	add	sp, sp, #0x50
   2d52c:	ret
   2d530:	ldur	w8, [x29, #-8]
   2d534:	ldur	w9, [x29, #-5]
   2d538:	cmp	x2, #0x0
   2d53c:	cset	w2, ne  // ne = any
   2d540:	add	x3, sp, #0x8
   2d544:	strb	wzr, [sp, #8]
   2d548:	stur	w8, [sp, #9]
   2d54c:	str	w9, [sp, #12]
   2d550:	stp	x30, x29, [sp, #16]
   2d554:	bl	6d50 <__ubsan_handle_cfi_bad_type@plt>
   2d558:	ldp	x29, x30, [sp, #64]
   2d55c:	add	sp, sp, #0x50
   2d560:	ret
   2d564:	str	d8, [sp, #-80]!
   2d568:	str	x29, [sp, #8]
   2d56c:	stp	x30, x25, [sp, #16]
   2d570:	stp	x24, x23, [sp, #32]
   2d574:	stp	x22, x21, [sp, #48]
   2d578:	stp	x20, x19, [sp, #64]
   2d57c:	sub	sp, sp, #0x280
   2d580:	ldrb	w8, [x0]
   2d584:	and	w8, w8, #0xfe
   2d588:	cmp	w8, #0x4
   2d58c:	b.ne	2d860 <__ubsan_handle_cfi_check_fail@@Base+0x378>  // b.any
   2d590:	mov	x20, x2
   2d594:	mov	x22, x0
   2d598:	mov	x21, x1
   2d59c:	add	x9, x0, #0x14
   2d5a0:	mov	w10, #0xffffffff            	// #-1
   2d5a4:	ldaxr	w8, [x9]
   2d5a8:	stlxr	w11, w10, [x9]
   2d5ac:	cbnz	w11, 2d5a4 <__ubsan_handle_cfi_check_fail@@Base+0xbc>
   2d5b0:	ldr	w23, [x22, #16]
   2d5b4:	ldrb	w9, [x20]
   2d5b8:	ldr	x19, [x22, #8]
   2d5bc:	bfi	x23, x8, #32, #32
   2d5c0:	cbz	w9, 2d820 <__ubsan_handle_cfi_check_fail@@Base+0x338>
   2d5c4:	ldr	x8, [x20, #16]
   2d5c8:	ldr	q0, [x20]
   2d5cc:	mov	w24, #0x1                   	// #1
   2d5d0:	add	x0, sp, #0x220
   2d5d4:	add	x1, sp, #0x200
   2d5d8:	add	x2, sp, #0x1d8
   2d5dc:	mov	w3, #0x1f                  	// #31
   2d5e0:	str	w24, [sp, #472]
   2d5e4:	str	x8, [sp, #528]
   2d5e8:	str	q0, [sp, #512]
   2d5ec:	stp	x19, x23, [sp, #480]
   2d5f0:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2d5f4:	movi	v0.2d, #0x0
   2d5f8:	ldrb	w25, [x22]
   2d5fc:	str	d0, [sp, #376]
   2d600:	str	d0, [sp, #416]
   2d604:	ldr	q0, [sp, #16]
   2d608:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d60c:	str	w24, [sp, #32]
   2d610:	stp	x19, x23, [sp, #40]
   2d614:	stur	q0, [sp, #56]
   2d618:	ldr	d0, [x8, #1520]
   2d61c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d620:	add	x8, x8, #0xf96
   2d624:	str	wzr, [sp, #352]
   2d628:	str	wzr, [sp, #360]
   2d62c:	str	xzr, [sp, #368]
   2d630:	str	wzr, [sp, #400]
   2d634:	str	xzr, [sp, #408]
   2d638:	str	xzr, [sp, #440]
   2d63c:	str	x8, [sp, #80]
   2d640:	str	d0, [sp, #72]
   2d644:	str	wzr, [sp, #448]
   2d648:	ldr	x1, [x22, #24]
   2d64c:	add	x0, sp, #0x20
   2d650:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2d654:	ldr	w8, [x0, #320]
   2d658:	cmp	w8, #0x8
   2d65c:	b.eq	2d864 <__ubsan_handle_cfi_check_fail@@Base+0x37c>  // b.none
   2d660:	add	w11, w8, #0x1
   2d664:	add	x8, x0, x8, lsl #5
   2d668:	str	w11, [x0, #320]
   2d66c:	str	wzr, [x8, #64]
   2d670:	ldr	w11, [sp, #632]
   2d674:	ldr	x12, [sp, #624]
   2d678:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d67c:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d680:	add	x9, x9, #0xf7f
   2d684:	add	x10, x10, #0xf53
   2d688:	cmp	w25, #0x5
   2d68c:	csel	x9, x10, x9, eq  // eq = none
   2d690:	add	x0, sp, #0x20
   2d694:	str	w11, [x8, #76]
   2d698:	stur	x12, [x8, #68]
   2d69c:	str	x9, [x8, #80]
   2d6a0:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2d6a4:	mov	x0, x21
   2d6a8:	bl	29560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d8>
   2d6ac:	mov	w9, #0x3                   	// #3
   2d6b0:	ldr	x8, [x0, #40]
   2d6b4:	str	w9, [sp, #32]
   2d6b8:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d6bc:	adrp	x10, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d6c0:	add	x9, x9, #0xfda
   2d6c4:	ldr	d8, [x10, #1528]
   2d6c8:	ldr	x10, [sp, #624]
   2d6cc:	str	x9, [sp, #80]
   2d6d0:	ldr	w9, [sp, #632]
   2d6d4:	adrp	x25, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d6d8:	add	x25, x25, #0xfd0
   2d6dc:	cmp	x8, #0x0
   2d6e0:	mov	x21, x0
   2d6e4:	movi	v0.2d, #0x0
   2d6e8:	str	x0, [sp, #64]
   2d6ec:	csel	x8, x25, x8, eq  // eq = none
   2d6f0:	add	x0, sp, #0x20
   2d6f4:	str	xzr, [sp, #40]
   2d6f8:	str	w24, [sp, #352]
   2d6fc:	str	wzr, [sp, #360]
   2d700:	str	xzr, [sp, #368]
   2d704:	str	wzr, [sp, #400]
   2d708:	str	xzr, [sp, #408]
   2d70c:	str	xzr, [sp, #440]
   2d710:	str	wzr, [sp, #448]
   2d714:	str	wzr, [sp, #96]
   2d718:	str	d0, [sp, #48]
   2d71c:	str	d0, [sp, #376]
   2d720:	str	d0, [sp, #416]
   2d724:	str	w9, [sp, #108]
   2d728:	str	d8, [sp, #72]
   2d72c:	stur	x10, [sp, #100]
   2d730:	str	x8, [sp, #112]
   2d734:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2d738:	ldr	x8, [x21, #16]
   2d73c:	cmp	x8, #0x0
   2d740:	csel	x22, x25, x8, eq  // eq = none
   2d744:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2d748:	ldr	x1, [x20, #8]
   2d74c:	add	x2, sp, #0x20
   2d750:	add	x3, sp, #0x270
   2d754:	str	xzr, [sp, #32]
   2d758:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   2d75c:	ldr	x8, [sp, #32]
   2d760:	tst	w0, #0x1
   2d764:	mov	x1, x22
   2d768:	csel	x8, x8, xzr, ne  // ne = any
   2d76c:	cmp	x8, #0x0
   2d770:	csel	x20, x25, x8, eq  // eq = none
   2d774:	mov	x0, x20
   2d778:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2d77c:	cbz	w0, 2d808 <__ubsan_handle_cfi_check_fail@@Base+0x320>
   2d780:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2d784:	mov	w8, #0x1                   	// #1
   2d788:	add	x9, x9, #0xfea
   2d78c:	mov	w10, #0x2                   	// #2
   2d790:	ldr	q0, [sp]
   2d794:	str	w8, [sp, #32]
   2d798:	ldr	x8, [sp, #624]
   2d79c:	ldr	x11, [sp, #624]
   2d7a0:	str	x9, [sp, #80]
   2d7a4:	str	w10, [sp, #352]
   2d7a8:	ldr	w9, [sp, #632]
   2d7ac:	ldr	w10, [sp, #632]
   2d7b0:	movi	v1.2d, #0x0
   2d7b4:	add	x0, sp, #0x20
   2d7b8:	stp	x19, x23, [sp, #40]
   2d7bc:	str	d8, [sp, #72]
   2d7c0:	str	wzr, [sp, #360]
   2d7c4:	str	xzr, [sp, #368]
   2d7c8:	str	wzr, [sp, #400]
   2d7cc:	str	xzr, [sp, #408]
   2d7d0:	str	xzr, [sp, #440]
   2d7d4:	str	wzr, [sp, #448]
   2d7d8:	str	wzr, [sp, #96]
   2d7dc:	str	x20, [sp, #112]
   2d7e0:	str	wzr, [sp, #128]
   2d7e4:	str	d1, [sp, #376]
   2d7e8:	str	d1, [sp, #416]
   2d7ec:	stur	q0, [sp, #56]
   2d7f0:	str	w9, [sp, #108]
   2d7f4:	stur	x8, [sp, #100]
   2d7f8:	str	w10, [sp, #140]
   2d7fc:	stur	x11, [sp, #132]
   2d800:	str	x22, [sp, #144]
   2d804:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2d808:	cbz	x21, 2d814 <__ubsan_handle_cfi_check_fail@@Base+0x32c>
   2d80c:	mov	x0, x21
   2d810:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2d814:	add	x0, sp, #0x220
   2d818:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2d81c:	b	2d840 <__ubsan_handle_cfi_check_fail@@Base+0x358>
   2d820:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2d824:	cmp	x23, x8
   2d828:	b.hi	2d840 <__ubsan_handle_cfi_check_fail@@Base+0x358>  // b.pmore
   2d82c:	ldr	x1, [x20, #8]
   2d830:	mov	w0, #0x1f                  	// #31
   2d834:	mov	x2, x19
   2d838:	bl	2a2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5624>
   2d83c:	tbz	w0, #0, 2d5c4 <__ubsan_handle_cfi_check_fail@@Base+0xdc>
   2d840:	add	sp, sp, #0x280
   2d844:	ldp	x20, x19, [sp, #64]
   2d848:	ldp	x22, x21, [sp, #48]
   2d84c:	ldp	x24, x23, [sp, #32]
   2d850:	ldp	x30, x25, [sp, #16]
   2d854:	ldr	x29, [sp, #8]
   2d858:	ldr	d8, [sp], #80
   2d85c:	ret
   2d860:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2d864:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2d868:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2d86c:	add	x0, x0, #0xf13
   2d870:	add	x2, x2, #0xf53
   2d874:	mov	w1, #0xc0                  	// #192
   2d878:	mov	x3, xzr
   2d87c:	mov	x4, xzr
   2d880:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002d884 <__ubsan_handle_cfi_check_fail_abort@@Base>:
   2d884:	sub	sp, sp, #0x50
   2d888:	stp	x29, x30, [sp, #64]
   2d88c:	add	x29, sp, #0x40
   2d890:	ldrb	w8, [x0]
   2d894:	and	w8, w8, #0xfe
   2d898:	cmp	w8, #0x4
   2d89c:	b.ne	2d8c8 <__ubsan_handle_cfi_check_fail_abort@@Base+0x44>  // b.any
   2d8a0:	ldur	w8, [x29, #-8]
   2d8a4:	ldur	w9, [x29, #-5]
   2d8a8:	mov	w10, #0x1                   	// #1
   2d8ac:	add	x2, sp, #0x20
   2d8b0:	strb	w10, [sp, #32]
   2d8b4:	stur	w8, [sp, #33]
   2d8b8:	str	w9, [sp, #36]
   2d8bc:	stp	x30, x29, [sp, #40]
   2d8c0:	bl	2d564 <__ubsan_handle_cfi_check_fail@@Base+0x7c>
   2d8c4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2d8c8:	ldur	w9, [x29, #-8]
   2d8cc:	ldur	w10, [x29, #-5]
   2d8d0:	cmp	x2, #0x0
   2d8d4:	mov	w8, #0x1                   	// #1
   2d8d8:	cset	w2, ne  // ne = any
   2d8dc:	add	x3, sp, #0x8
   2d8e0:	strb	w8, [sp, #8]
   2d8e4:	stur	w9, [sp, #9]
   2d8e8:	str	w10, [sp, #12]
   2d8ec:	stp	x30, x29, [sp, #16]
   2d8f0:	bl	6d50 <__ubsan_handle_cfi_bad_type@plt>
   2d8f4:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2d8f8:	str	x30, [sp, #-48]!
   2d8fc:	stp	x22, x21, [sp, #16]
   2d900:	stp	x20, x19, [sp, #32]
   2d904:	stp	x1, x2, [x0]
   2d908:	ldr	x9, [x3, #24]
   2d90c:	mov	x21, x0
   2d910:	mov	x19, x3
   2d914:	mov	x20, x0
   2d918:	mov	x8, xzr
   2d91c:	str	xzr, [x21, #16]!
   2d920:	adds	x22, x9, #0x1
   2d924:	stp	xzr, xzr, [x21, #8]
   2d928:	b.cc	2d970 <__ubsan_handle_cfi_check_fail_abort@@Base+0xec>  // b.lo, b.ul, b.last
   2d92c:	cmp	x8, x22
   2d930:	b.cc	2d988 <__ubsan_handle_cfi_check_fail_abort@@Base+0x104>  // b.lo, b.ul, b.last
   2d934:	stp	x22, xzr, [x20, #32]
   2d938:	cbz	x22, 2d9c0 <__ubsan_handle_cfi_check_fail_abort@@Base+0x13c>
   2d93c:	ldr	x8, [x20, #16]
   2d940:	adrp	x9, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2d944:	adrp	x1, 30000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1620>
   2d948:	add	x1, x1, #0xba0
   2d94c:	strb	wzr, [x8]
   2d950:	str	x20, [x9, #3472]
   2d954:	ldr	x2, [x19]
   2d958:	mov	x0, x21
   2d95c:	bl	1cbd8 <__sanitizer_on_print@@Base+0x188>
   2d960:	ldp	x20, x19, [sp, #32]
   2d964:	ldp	x22, x21, [sp, #16]
   2d968:	ldr	x30, [sp], #48
   2d96c:	b	6c20 <__ubsan_on_report@plt>
   2d970:	mov	x0, x21
   2d974:	mov	x1, x22
   2d978:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   2d97c:	ldr	x8, [x20, #32]
   2d980:	cmp	x8, x22
   2d984:	b.cs	2d934 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>  // b.hs, b.nlast
   2d988:	ldr	x9, [x20, #24]
   2d98c:	cmp	x9, x22
   2d990:	b.cs	2d9a4 <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>  // b.hs, b.nlast
   2d994:	mov	x0, x21
   2d998:	mov	x1, x22
   2d99c:	bl	8cb4 <__sanitizer_print_stack_trace@@Base+0x45c>
   2d9a0:	ldr	x8, [x20, #32]
   2d9a4:	ldr	x9, [x21]
   2d9a8:	sub	x2, x22, x8
   2d9ac:	mov	w1, wzr
   2d9b0:	add	x0, x9, x8
   2d9b4:	bl	18ac8 <__sanitizer_set_report_fd@@Base+0x2484>
   2d9b8:	stp	x22, xzr, [x20, #32]
   2d9bc:	cbnz	x22, 2d93c <__ubsan_handle_cfi_check_fail_abort@@Base+0xb8>
   2d9c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2d9c4:	adrp	x2, 31000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2620>
   2d9c8:	add	x0, x0, #0xf71
   2d9cc:	add	x2, x2, #0x1eb
   2d9d0:	mov	w1, #0x1c5                 	// #453
   2d9d4:	mov	x3, xzr
   2d9d8:	mov	x4, xzr
   2d9dc:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2d9e0:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2d9e4:	str	x0, [x8, #3472]
   2d9e8:	ret

000000000002d9ec <__ubsan_on_report@@Base>:
   2d9ec:	ret

000000000002d9f0 <__ubsan_get_current_report_data@@Base>:
   2d9f0:	str	x30, [sp, #-16]!
   2d9f4:	cbz	x0, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2d9f8:	cbz	x1, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2d9fc:	cbz	x2, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2da00:	cbz	x3, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2da04:	cbz	x4, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2da08:	cbz	x5, 2dab8 <__ubsan_get_current_report_data@@Base+0xc8>
   2da0c:	adrp	x8, 928000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e8>
   2da10:	ldr	x8, [x8, #3472]
   2da14:	ldr	x9, [x8, #16]
   2da18:	ldrb	w10, [x9]
   2da1c:	sub	w11, w10, #0x61
   2da20:	cmp	w11, #0x19
   2da24:	b.hi	2da30 <__ubsan_get_current_report_data@@Base+0x40>  // b.pmore
   2da28:	sub	w10, w10, #0x20
   2da2c:	strb	w10, [x9]
   2da30:	ldr	x9, [x8]
   2da34:	str	x9, [x0]
   2da38:	ldr	x9, [x8, #16]
   2da3c:	str	x9, [x1]
   2da40:	ldr	x9, [x8, #8]
   2da44:	ldr	w10, [x9]
   2da48:	cmp	w10, #0x1
   2da4c:	b.ne	2da84 <__ubsan_get_current_report_data@@Base+0x94>  // b.any
   2da50:	ldp	x10, x9, [x9, #8]
   2da54:	str	x10, [x2]
   2da58:	str	w9, [x3]
   2da5c:	lsr	x9, x9, #32
   2da60:	str	w9, [x4]
   2da64:	ldr	x8, [x8, #8]
   2da68:	ldr	w9, [x8]
   2da6c:	cmp	w9, #0x2
   2da70:	b.eq	2daa8 <__ubsan_get_current_report_data@@Base+0xb8>  // b.none
   2da74:	mov	x8, xzr
   2da78:	str	x8, [x5]
   2da7c:	ldr	x30, [sp], #16
   2da80:	ret
   2da84:	adrp	x9, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2da88:	add	x9, x9, #0xe66
   2da8c:	str	x9, [x2]
   2da90:	str	wzr, [x4]
   2da94:	str	wzr, [x3]
   2da98:	ldr	x8, [x8, #8]
   2da9c:	ldr	w9, [x8]
   2daa0:	cmp	w9, #0x2
   2daa4:	b.ne	2da74 <__ubsan_get_current_report_data@@Base+0x84>  // b.any
   2daa8:	ldr	x8, [x8, #24]
   2daac:	str	x8, [x5]
   2dab0:	ldr	x30, [sp], #16
   2dab4:	ret
   2dab8:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dabc:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dac0:	add	x0, x0, #0x69
   2dac4:	add	x2, x2, #0xae
   2dac8:	mov	w1, #0x31                  	// #49
   2dacc:	mov	x3, xzr
   2dad0:	mov	x4, xzr
   2dad4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2dad8:	str	x30, [sp, #-16]!
   2dadc:	ldr	x8, [x0]
   2dae0:	ldrh	w9, [x8]
   2dae4:	cbnz	w9, 2dba4 <__ubsan_get_current_report_data@@Base+0x1b4>
   2dae8:	ldrh	w8, [x8, #2]
   2daec:	tbz	w8, #0, 2dba4 <__ubsan_get_current_report_data@@Base+0x1b4>
   2daf0:	lsr	w9, w8, #1
   2daf4:	mov	w10, #0x1                   	// #1
   2daf8:	cmp	w8, #0xd
   2dafc:	lsl	w8, w10, w9
   2db00:	b.hi	2db70 <__ubsan_get_current_report_data@@Base+0x180>  // b.pmore
   2db04:	ldr	x10, [x0, #8]
   2db08:	mov	w9, #0x80                  	// #128
   2db0c:	neg	w11, w8
   2db10:	sub	w8, w9, w8
   2db14:	neg	x9, x8
   2db18:	cmp	x8, #0x0
   2db1c:	sub	x12, x8, #0x40
   2db20:	lsr	x13, x10, x9
   2db24:	lsl	x14, x10, x8
   2db28:	csel	x13, xzr, x13, eq  // eq = none
   2db2c:	cmp	x12, #0x0
   2db30:	csel	x13, x14, x13, ge  // ge = tcont
   2db34:	cmp	x8, #0x0
   2db38:	lsl	x9, x13, x9
   2db3c:	lsl	x10, x10, x11
   2db40:	csel	x9, xzr, x9, eq  // eq = none
   2db44:	cmp	x12, #0x0
   2db48:	csel	x10, xzr, x10, ge  // ge = tcont
   2db4c:	lsr	x10, x10, x11
   2db50:	asr	x14, x13, x11
   2db54:	asr	x12, x13, #63
   2db58:	orr	x9, x10, x9
   2db5c:	asr	x8, x13, x8
   2db60:	csel	x1, x12, x14, ge  // ge = tcont
   2db64:	csel	x0, x8, x9, ge  // ge = tcont
   2db68:	ldr	x30, [sp], #16
   2db6c:	ret
   2db70:	cmp	w8, #0x80
   2db74:	b.eq	2db94 <__ubsan_get_current_report_data@@Base+0x1a4>  // b.none
   2db78:	cmp	w8, #0x40
   2db7c:	b.ne	2dbbc <__ubsan_get_current_report_data@@Base+0x1cc>  // b.any
   2db80:	ldr	x8, [x0, #8]
   2db84:	ldr	x0, [x8]
   2db88:	asr	x1, x0, #63
   2db8c:	ldr	x30, [sp], #16
   2db90:	ret
   2db94:	ldr	x8, [x0, #8]
   2db98:	ldp	x0, x1, [x8]
   2db9c:	ldr	x30, [sp], #16
   2dba0:	ret
   2dba4:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dba8:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dbac:	add	x0, x0, #0x101
   2dbb0:	add	x2, x2, #0x144
   2dbb4:	mov	w1, #0x17                  	// #23
   2dbb8:	b	2dbd0 <__ubsan_get_current_report_data@@Base+0x1e0>
   2dbbc:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dbc0:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dbc4:	add	x0, x0, #0x101
   2dbc8:	add	x2, x2, #0x16d
   2dbcc:	mov	w1, #0x28                  	// #40
   2dbd0:	mov	x3, xzr
   2dbd4:	mov	x4, xzr
   2dbd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2dbdc:	str	x30, [sp, #-16]!
   2dbe0:	ldr	x8, [x0]
   2dbe4:	ldrh	w9, [x8]
   2dbe8:	cbnz	w9, 2dc4c <__ubsan_get_current_report_data@@Base+0x25c>
   2dbec:	ldrh	w8, [x8, #2]
   2dbf0:	tbnz	w8, #0, 2dc4c <__ubsan_get_current_report_data@@Base+0x25c>
   2dbf4:	cmp	w8, #0xd
   2dbf8:	b.hi	2dc0c <__ubsan_get_current_report_data@@Base+0x21c>  // b.pmore
   2dbfc:	ldr	x0, [x0, #8]
   2dc00:	mov	x1, xzr
   2dc04:	ldr	x30, [sp], #16
   2dc08:	ret
   2dc0c:	lsr	w8, w8, #1
   2dc10:	mov	w9, #0x1                   	// #1
   2dc14:	lsl	w8, w9, w8
   2dc18:	cmp	w8, #0x80
   2dc1c:	b.eq	2dc3c <__ubsan_get_current_report_data@@Base+0x24c>  // b.none
   2dc20:	cmp	w8, #0x40
   2dc24:	b.ne	2dc64 <__ubsan_get_current_report_data@@Base+0x274>  // b.any
   2dc28:	ldr	x8, [x0, #8]
   2dc2c:	mov	x1, xzr
   2dc30:	ldr	x0, [x8]
   2dc34:	ldr	x30, [sp], #16
   2dc38:	ret
   2dc3c:	ldr	x8, [x0, #8]
   2dc40:	ldp	x0, x1, [x8]
   2dc44:	ldr	x30, [sp], #16
   2dc48:	ret
   2dc4c:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dc50:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dc54:	add	x0, x0, #0x101
   2dc58:	add	x2, x2, #0x194
   2dc5c:	mov	w1, #0x2c                  	// #44
   2dc60:	b	2dc78 <__ubsan_get_current_report_data@@Base+0x288>
   2dc64:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dc68:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dc6c:	add	x0, x0, #0x101
   2dc70:	add	x2, x2, #0x16d
   2dc74:	mov	w1, #0x38                  	// #56
   2dc78:	mov	x3, xzr
   2dc7c:	mov	x4, xzr
   2dc80:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2dc84:	str	x30, [sp, #-16]!
   2dc88:	ldr	x8, [x0]
   2dc8c:	ldrh	w9, [x8]
   2dc90:	cbnz	w9, 2dda0 <__ubsan_get_current_report_data@@Base+0x3b0>
   2dc94:	ldrh	w8, [x8, #2]
   2dc98:	tbnz	w8, #0, 2dcb4 <__ubsan_get_current_report_data@@Base+0x2c4>
   2dc9c:	cmp	w8, #0xd
   2dca0:	b.hi	2dd30 <__ubsan_get_current_report_data@@Base+0x340>  // b.pmore
   2dca4:	ldr	x0, [x0, #8]
   2dca8:	mov	x1, xzr
   2dcac:	ldr	x30, [sp], #16
   2dcb0:	ret
   2dcb4:	lsr	w9, w8, #1
   2dcb8:	mov	w10, #0x1                   	// #1
   2dcbc:	cmp	w8, #0xd
   2dcc0:	lsl	w8, w10, w9
   2dcc4:	b.hi	2dd60 <__ubsan_get_current_report_data@@Base+0x370>  // b.pmore
   2dcc8:	ldr	x10, [x0, #8]
   2dccc:	mov	w9, #0x80                  	// #128
   2dcd0:	neg	w11, w8
   2dcd4:	sub	w8, w9, w8
   2dcd8:	neg	x9, x8
   2dcdc:	cmp	x8, #0x0
   2dce0:	sub	x12, x8, #0x40
   2dce4:	lsr	x13, x10, x9
   2dce8:	lsl	x14, x10, x8
   2dcec:	csel	x13, xzr, x13, eq  // eq = none
   2dcf0:	cmp	x12, #0x0
   2dcf4:	csel	x13, x14, x13, ge  // ge = tcont
   2dcf8:	cmp	x8, #0x0
   2dcfc:	lsl	x9, x13, x9
   2dd00:	lsl	x10, x10, x11
   2dd04:	csel	x9, xzr, x9, eq  // eq = none
   2dd08:	cmp	x12, #0x0
   2dd0c:	csel	x10, xzr, x10, ge  // ge = tcont
   2dd10:	lsr	x10, x10, x11
   2dd14:	asr	x14, x13, x11
   2dd18:	asr	x12, x13, #63
   2dd1c:	orr	x9, x10, x9
   2dd20:	asr	x8, x13, x8
   2dd24:	csel	x1, x12, x14, ge  // ge = tcont
   2dd28:	csel	x0, x8, x9, ge  // ge = tcont
   2dd2c:	b	2dd94 <__ubsan_get_current_report_data@@Base+0x3a4>
   2dd30:	lsr	w8, w8, #1
   2dd34:	mov	w9, #0x1                   	// #1
   2dd38:	lsl	w8, w9, w8
   2dd3c:	cmp	w8, #0x80
   2dd40:	b.eq	2dd80 <__ubsan_get_current_report_data@@Base+0x390>  // b.none
   2dd44:	cmp	w8, #0x40
   2dd48:	b.ne	2dddc <__ubsan_get_current_report_data@@Base+0x3ec>  // b.any
   2dd4c:	ldr	x8, [x0, #8]
   2dd50:	mov	x1, xzr
   2dd54:	ldr	x0, [x8]
   2dd58:	ldr	x30, [sp], #16
   2dd5c:	ret
   2dd60:	cmp	w8, #0x80
   2dd64:	b.eq	2dd8c <__ubsan_get_current_report_data@@Base+0x39c>  // b.none
   2dd68:	cmp	w8, #0x40
   2dd6c:	b.ne	2ddf4 <__ubsan_get_current_report_data@@Base+0x404>  // b.any
   2dd70:	ldr	x8, [x0, #8]
   2dd74:	ldr	x0, [x8]
   2dd78:	asr	x1, x0, #63
   2dd7c:	b	2dd94 <__ubsan_get_current_report_data@@Base+0x3a4>
   2dd80:	ldr	x8, [x0, #8]
   2dd84:	ldp	x0, x1, [x8]
   2dd88:	b	2dd98 <__ubsan_get_current_report_data@@Base+0x3a8>
   2dd8c:	ldr	x8, [x0, #8]
   2dd90:	ldp	x0, x1, [x8]
   2dd94:	tbnz	x1, #63, 2ddb8 <__ubsan_get_current_report_data@@Base+0x3c8>
   2dd98:	ldr	x30, [sp], #16
   2dd9c:	ret
   2dda0:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dda4:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dda8:	add	x0, x0, #0x101
   2ddac:	add	x2, x2, #0x144
   2ddb0:	mov	w1, #0x17                  	// #23
   2ddb4:	b	2de08 <__ubsan_get_current_report_data@@Base+0x418>
   2ddb8:	mvn	x8, x1
   2ddbc:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2ddc0:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2ddc4:	lsr	x3, x8, #63
   2ddc8:	add	x0, x0, #0x101
   2ddcc:	add	x2, x2, #0x1bf
   2ddd0:	mov	w1, #0x3f                  	// #63
   2ddd4:	mov	x4, xzr
   2ddd8:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2dddc:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dde0:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dde4:	add	x0, x0, #0x101
   2dde8:	add	x2, x2, #0x16d
   2ddec:	mov	w1, #0x38                  	// #56
   2ddf0:	b	2de08 <__ubsan_get_current_report_data@@Base+0x418>
   2ddf4:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2ddf8:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2ddfc:	add	x0, x0, #0x101
   2de00:	add	x2, x2, #0x16d
   2de04:	mov	w1, #0x28                  	// #40
   2de08:	mov	x3, xzr
   2de0c:	mov	x4, xzr
   2de10:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>
   2de14:	sub	sp, sp, #0x20
   2de18:	str	x30, [sp, #16]
   2de1c:	ldr	x8, [x0]
   2de20:	ldrh	w9, [x8]
   2de24:	cmp	w9, #0x1
   2de28:	b.ne	2def4 <__ubsan_get_current_report_data@@Base+0x504>  // b.any
   2de2c:	ldrh	w8, [x8, #2]
   2de30:	subs	w9, w8, #0x40
   2de34:	b.hi	2de68 <__ubsan_get_current_report_data@@Base+0x478>  // b.pmore
   2de38:	b.eq	2dea0 <__ubsan_get_current_report_data@@Base+0x4b0>  // b.none
   2de3c:	cmp	w8, #0x20
   2de40:	b.ne	2dedc <__ubsan_get_current_report_data@@Base+0x4ec>  // b.any
   2de44:	add	x1, x0, #0x8
   2de48:	add	x0, sp, #0x1c
   2de4c:	mov	w2, #0x4                   	// #4
   2de50:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   2de54:	ldr	s0, [sp, #28]
   2de58:	bl	6dd0 <__extendsftf2@plt>
   2de5c:	ldr	x30, [sp, #16]
   2de60:	add	sp, sp, #0x20
   2de64:	ret
   2de68:	ror	w8, w9, #4
   2de6c:	cmp	w8, #0x4
   2de70:	b.hi	2dedc <__ubsan_get_current_report_data@@Base+0x4ec>  // b.pmore
   2de74:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2de78:	add	x9, x9, #0xfc
   2de7c:	adr	x10, 2de8c <__ubsan_get_current_report_data@@Base+0x49c>
   2de80:	ldrb	w11, [x9, x8]
   2de84:	add	x10, x10, x11, lsl #2
   2de88:	br	x10
   2de8c:	ldr	x8, [x0, #8]
   2de90:	ldr	q0, [x8]
   2de94:	ldr	x30, [sp, #16]
   2de98:	add	sp, sp, #0x20
   2de9c:	ret
   2dea0:	add	x1, x0, #0x8
   2dea4:	add	x0, sp, #0x8
   2dea8:	mov	w2, #0x8                   	// #8
   2deac:	bl	18998 <__sanitizer_set_report_fd@@Base+0x2354>
   2deb0:	ldr	d0, [sp, #8]
   2deb4:	bl	6d30 <__extenddftf2@plt>
   2deb8:	ldr	x30, [sp, #16]
   2debc:	add	sp, sp, #0x20
   2dec0:	ret
   2dec4:	ldr	x8, [x0, #8]
   2dec8:	ldr	d0, [x8]
   2decc:	bl	6d30 <__extenddftf2@plt>
   2ded0:	ldr	x30, [sp, #16]
   2ded4:	add	sp, sp, #0x20
   2ded8:	ret
   2dedc:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dee0:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2dee4:	add	x0, x0, #0x101
   2dee8:	add	x2, x2, #0x1f4
   2deec:	mov	w1, #0x6d                  	// #109
   2def0:	b	2df08 <__ubsan_get_current_report_data@@Base+0x518>
   2def4:	adrp	x0, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2def8:	adrp	x2, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2defc:	add	x0, x0, #0x101
   2df00:	add	x2, x2, #0x1d3
   2df04:	mov	w1, #0x47                  	// #71
   2df08:	mov	x3, xzr
   2df0c:	mov	x4, xzr
   2df10:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002df14 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
   2df14:	sub	sp, sp, #0x30
   2df18:	stp	x29, x30, [sp, #32]
   2df1c:	add	x29, sp, #0x20
   2df20:	ldur	w8, [x29, #-8]
   2df24:	ldur	w9, [x29, #-5]
   2df28:	mov	x3, sp
   2df2c:	strb	wzr, [sp]
   2df30:	stur	w8, [sp, #1]
   2df34:	str	w9, [sp, #4]
   2df38:	stp	x30, x29, [sp, #8]
   2df3c:	bl	2df4c <__ubsan_handle_dynamic_type_cache_miss@@Base+0x38>
   2df40:	ldp	x29, x30, [sp, #32]
   2df44:	add	sp, sp, #0x30
   2df48:	ret
   2df4c:	stp	x29, x30, [sp, #-64]!
   2df50:	stp	x24, x23, [sp, #16]
   2df54:	stp	x22, x21, [sp, #32]
   2df58:	stp	x20, x19, [sp, #48]
   2df5c:	sub	sp, sp, #0x2a0
   2df60:	ldr	x8, [x0, #24]
   2df64:	mov	x20, x0
   2df68:	mov	x19, x1
   2df6c:	mov	x0, x1
   2df70:	mov	x1, x8
   2df74:	mov	x21, x3
   2df78:	bl	2ea2c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4c>
   2df7c:	tbnz	w0, #0, 2dfe8 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd4>
   2df80:	add	x8, sp, #0x278
   2df84:	mov	x0, x19
   2df88:	bl	2ea24 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44>
   2df8c:	ldr	x0, [sp, #632]
   2df90:	cbz	x0, 2df9c <__ubsan_handle_dynamic_type_cache_miss@@Base+0x88>
   2df94:	bl	2a24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x55c4>
   2df98:	tbnz	w0, #0, 2dfe8 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd4>
   2df9c:	add	x24, sp, #0x294
   2dfa0:	add	x9, x20, #0xc
   2dfa4:	mov	w10, #0xffffffff            	// #-1
   2dfa8:	ldaxr	w8, [x9]
   2dfac:	stlxr	w11, w10, [x9]
   2dfb0:	cbnz	w11, 2dfa8 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x94>
   2dfb4:	ldr	w22, [x20, #8]
   2dfb8:	ldr	x23, [x20]
   2dfbc:	ldr	x9, [x21, #16]
   2dfc0:	ldr	q0, [x21]
   2dfc4:	bfi	x22, x8, #32, #32
   2dfc8:	add	x2, sp, #0x260
   2dfcc:	mov	w3, #0x1e                  	// #30
   2dfd0:	mov	x0, x23
   2dfd4:	mov	x1, x22
   2dfd8:	str	x9, [sp, #624]
   2dfdc:	str	q0, [sp, #608]
   2dfe0:	bl	2a7e4 <__ubsan_default_options@@Base+0x228>
   2dfe4:	tbz	w0, #0, 2e004 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xf0>
   2dfe8:	mov	w0, wzr
   2dfec:	add	sp, sp, #0x2a0
   2dff0:	ldp	x20, x19, [sp, #48]
   2dff4:	ldp	x22, x21, [sp, #32]
   2dff8:	ldp	x24, x23, [sp, #16]
   2dffc:	ldp	x29, x30, [sp], #64
   2e000:	ret
   2e004:	ldr	x8, [x21, #16]
   2e008:	ldr	q0, [x21]
   2e00c:	mov	w21, #0x1                   	// #1
   2e010:	add	x0, sp, #0x210
   2e014:	add	x1, sp, #0x1f0
   2e018:	add	x2, sp, #0x1c8
   2e01c:	mov	w3, #0x1e                  	// #30
   2e020:	str	w21, [sp, #456]
   2e024:	str	x8, [sp, #512]
   2e028:	str	q0, [sp, #496]
   2e02c:	stp	x23, x22, [sp, #464]
   2e030:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2e034:	movi	v0.2d, #0x0
   2e038:	str	d0, [sp, #360]
   2e03c:	str	d0, [sp, #400]
   2e040:	ldr	q0, [sp]
   2e044:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e048:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e04c:	str	w21, [sp, #16]
   2e050:	stur	q0, [sp, #40]
   2e054:	ldr	d0, [x8, #560]
   2e058:	stp	x23, x22, [sp, #24]
   2e05c:	add	x9, x9, #0x32e
   2e060:	str	wzr, [sp, #344]
   2e064:	str	xzr, [sp, #352]
   2e068:	str	wzr, [sp, #384]
   2e06c:	str	xzr, [sp, #392]
   2e070:	str	xzr, [sp, #424]
   2e074:	str	wzr, [sp, #432]
   2e078:	adrp	x8, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2e07c:	ldr	x8, [x8, #3608]
   2e080:	str	x9, [sp, #64]
   2e084:	ldr	w9, [sp, #668]
   2e088:	str	d0, [sp, #56]
   2e08c:	ldr	x10, [x24]
   2e090:	ldrb	w11, [x20, #32]
   2e094:	str	w9, [sp, #92]
   2e098:	mov	w9, #0x2                   	// #2
   2e09c:	str	w9, [sp, #336]
   2e0a0:	mov	w9, #0x5                   	// #5
   2e0a4:	stur	x10, [sp, #84]
   2e0a8:	ldr	w10, [sp, #668]
   2e0ac:	str	w9, [sp, #112]
   2e0b0:	ldr	x9, [x24]
   2e0b4:	ldr	x8, [x8, x11, lsl #3]
   2e0b8:	str	wzr, [sp, #80]
   2e0bc:	str	w10, [sp, #124]
   2e0c0:	stur	x9, [sp, #116]
   2e0c4:	str	x8, [sp, #96]
   2e0c8:	str	x19, [sp, #128]
   2e0cc:	ldr	x1, [x20, #16]
   2e0d0:	add	x0, sp, #0x10
   2e0d4:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2e0d8:	add	x0, sp, #0x10
   2e0dc:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e0e0:	ldr	x8, [sp, #632]
   2e0e4:	ldr	x9, [sp, #640]
   2e0e8:	cbz	x8, 2e1b4 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x2a0>
   2e0ec:	cbz	x9, 2e228 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x314>
   2e0f0:	sub	x10, x19, x9
   2e0f4:	stp	x9, xzr, [sp, #96]
   2e0f8:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e0fc:	add	x9, x9, #0x3f7
   2e100:	str	x8, [sp, #128]
   2e104:	ldr	x8, [x24]
   2e108:	str	x9, [sp, #64]
   2e10c:	mov	w9, #0x3                   	// #3
   2e110:	str	w9, [sp, #336]
   2e114:	ldr	w9, [sp, #668]
   2e118:	mov	w11, #0x2                   	// #2
   2e11c:	adrp	x12, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e120:	str	x10, [sp, #40]
   2e124:	mov	w10, #0x1                   	// #1
   2e128:	ldr	d1, [x12, #568]
   2e12c:	ldr	x12, [x24]
   2e130:	str	w10, [sp, #112]
   2e134:	str	w10, [sp, #144]
   2e138:	str	w10, [sp, #432]
   2e13c:	ldr	w10, [sp, #668]
   2e140:	str	w11, [sp, #16]
   2e144:	str	w11, [sp, #80]
   2e148:	str	w11, [sp, #344]
   2e14c:	str	w11, [sp, #384]
   2e150:	ldr	x11, [sp, #648]
   2e154:	ldr	x13, [x24]
   2e158:	stur	x8, [sp, #84]
   2e15c:	ldr	w8, [sp, #668]
   2e160:	str	w9, [sp, #92]
   2e164:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e168:	movi	v0.2d, #0x0
   2e16c:	add	x14, x19, #0x8
   2e170:	add	x9, x9, #0x43c
   2e174:	str	xzr, [sp, #24]
   2e178:	str	x19, [sp, #368]
   2e17c:	str	xzr, [sp, #352]
   2e180:	str	xzr, [sp, #392]
   2e184:	str	d0, [sp, #32]
   2e188:	str	d0, [sp, #360]
   2e18c:	str	d0, [sp, #400]
   2e190:	str	w10, [sp, #124]
   2e194:	stur	x12, [sp, #116]
   2e198:	str	w8, [sp, #156]
   2e19c:	stur	x13, [sp, #148]
   2e1a0:	str	x11, [sp, #160]
   2e1a4:	str	d1, [sp, #56]
   2e1a8:	str	x14, [sp, #408]
   2e1ac:	str	x9, [sp, #424]
   2e1b0:	b	2e334 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x420>
   2e1b4:	add	x8, x9, #0x100, lsl #12
   2e1b8:	cmp	x8, #0x200, lsl #12
   2e1bc:	b.ls	2e2b0 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x39c>  // b.plast
   2e1c0:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e1c4:	ldr	d1, [x9, #568]
   2e1c8:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e1cc:	add	x9, x9, #0x369
   2e1d0:	str	x9, [sp, #64]
   2e1d4:	mov	w9, #0x1                   	// #1
   2e1d8:	ldr	x10, [x24]
   2e1dc:	str	w9, [sp, #336]
   2e1e0:	str	w9, [sp, #80]
   2e1e4:	str	w9, [sp, #432]
   2e1e8:	ldr	w9, [sp, #668]
   2e1ec:	mov	w8, #0x2                   	// #2
   2e1f0:	str	w8, [sp, #16]
   2e1f4:	str	w8, [sp, #344]
   2e1f8:	str	w8, [sp, #384]
   2e1fc:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e200:	movi	v0.2d, #0x0
   2e204:	add	x11, x19, #0x8
   2e208:	add	x8, x8, #0x3a8
   2e20c:	str	xzr, [sp, #24]
   2e210:	str	x19, [sp, #40]
   2e214:	str	xzr, [sp, #96]
   2e218:	str	x19, [sp, #368]
   2e21c:	str	xzr, [sp, #352]
   2e220:	str	xzr, [sp, #392]
   2e224:	b	2e314 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x400>
   2e228:	str	x8, [sp, #96]
   2e22c:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e230:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e234:	add	x8, x8, #0x3d6
   2e238:	ldr	d1, [x10, #568]
   2e23c:	ldr	x11, [x24]
   2e240:	str	x8, [sp, #64]
   2e244:	ldr	w8, [sp, #668]
   2e248:	mov	w10, #0x1                   	// #1
   2e24c:	str	w10, [sp, #336]
   2e250:	str	w10, [sp, #80]
   2e254:	str	w10, [sp, #432]
   2e258:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e25c:	mov	w9, #0x2                   	// #2
   2e260:	movi	v0.2d, #0x0
   2e264:	add	x12, x19, #0x8
   2e268:	add	x10, x10, #0x3eb
   2e26c:	str	xzr, [sp, #24]
   2e270:	str	x19, [sp, #40]
   2e274:	str	x19, [sp, #368]
   2e278:	str	xzr, [sp, #352]
   2e27c:	str	xzr, [sp, #392]
   2e280:	str	w9, [sp, #16]
   2e284:	str	d0, [sp, #32]
   2e288:	str	w9, [sp, #344]
   2e28c:	str	d0, [sp, #360]
   2e290:	str	w9, [sp, #384]
   2e294:	str	d0, [sp, #400]
   2e298:	stur	x11, [sp, #84]
   2e29c:	str	w8, [sp, #92]
   2e2a0:	str	d1, [sp, #56]
   2e2a4:	str	x12, [sp, #408]
   2e2a8:	str	x10, [sp, #424]
   2e2ac:	b	2e334 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x420>
   2e2b0:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e2b4:	ldr	d1, [x9, #568]
   2e2b8:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e2bc:	add	x9, x9, #0x3be
   2e2c0:	str	x9, [sp, #64]
   2e2c4:	mov	w9, #0x1                   	// #1
   2e2c8:	ldr	x10, [x24]
   2e2cc:	str	w9, [sp, #336]
   2e2d0:	str	w9, [sp, #80]
   2e2d4:	str	w9, [sp, #432]
   2e2d8:	ldr	w9, [sp, #668]
   2e2dc:	mov	w8, #0x2                   	// #2
   2e2e0:	str	w8, [sp, #16]
   2e2e4:	str	w8, [sp, #344]
   2e2e8:	str	w8, [sp, #384]
   2e2ec:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e2f0:	str	xzr, [sp, #24]
   2e2f4:	movi	v0.2d, #0x0
   2e2f8:	str	x19, [sp, #40]
   2e2fc:	str	xzr, [sp, #96]
   2e300:	str	x19, [sp, #368]
   2e304:	add	x11, x19, #0x8
   2e308:	str	xzr, [sp, #352]
   2e30c:	str	xzr, [sp, #392]
   2e310:	add	x8, x8, #0x3c9
   2e314:	str	d0, [sp, #32]
   2e318:	str	d0, [sp, #360]
   2e31c:	str	d0, [sp, #400]
   2e320:	stur	x10, [sp, #84]
   2e324:	str	w9, [sp, #92]
   2e328:	str	d1, [sp, #56]
   2e32c:	str	x11, [sp, #408]
   2e330:	str	x8, [sp, #424]
   2e334:	add	x0, sp, #0x10
   2e338:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e33c:	add	x0, sp, #0x210
   2e340:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2e344:	mov	w0, #0x1                   	// #1
   2e348:	b	2dfec <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd8>

000000000002e34c <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
   2e34c:	sub	sp, sp, #0x30
   2e350:	stp	x29, x30, [sp, #32]
   2e354:	add	x29, sp, #0x20
   2e358:	ldur	w8, [x29, #-8]
   2e35c:	ldur	w9, [x29, #-5]
   2e360:	mov	x3, sp
   2e364:	strb	wzr, [sp]
   2e368:	stur	w8, [sp, #1]
   2e36c:	str	w9, [sp, #4]
   2e370:	stp	x30, x29, [sp, #8]
   2e374:	bl	2df4c <__ubsan_handle_dynamic_type_cache_miss@@Base+0x38>
   2e378:	tbnz	w0, #0, 2e388 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x3c>
   2e37c:	ldp	x29, x30, [sp, #32]
   2e380:	add	sp, sp, #0x30
   2e384:	ret
   2e388:	bl	20054 <__sanitizer_on_print@@Base+0x3604>

000000000002e38c <__ubsan_handle_cfi_bad_type@@Base>:
   2e38c:	str	x29, [sp, #-80]!
   2e390:	stp	x30, x25, [sp, #16]
   2e394:	stp	x24, x23, [sp, #32]
   2e398:	stp	x22, x21, [sp, #48]
   2e39c:	stp	x20, x19, [sp, #64]
   2e3a0:	sub	sp, sp, #0x460
   2e3a4:	mov	x21, x3
   2e3a8:	mov	w24, w2
   2e3ac:	mov	x22, x1
   2e3b0:	mov	x23, x0
   2e3b4:	add	x25, sp, #0x1d0
   2e3b8:	add	x9, x0, #0x14
   2e3bc:	mov	w10, #0xffffffff            	// #-1
   2e3c0:	ldaxr	w8, [x9]
   2e3c4:	stlxr	w11, w10, [x9]
   2e3c8:	cbnz	w11, 2e3c0 <__ubsan_handle_cfi_bad_type@@Base+0x34>
   2e3cc:	ldr	w19, [x23, #16]
   2e3d0:	ldr	x20, [x23, #8]
   2e3d4:	ldr	x9, [x21, #16]
   2e3d8:	ldr	q0, [x21]
   2e3dc:	bfi	x19, x8, #32, #32
   2e3e0:	add	x2, sp, #0x430
   2e3e4:	mov	w3, #0x1f                  	// #31
   2e3e8:	mov	x0, x20
   2e3ec:	mov	x1, x19
   2e3f0:	str	x9, [sp, #1088]
   2e3f4:	str	q0, [sp, #1072]
   2e3f8:	bl	2a7e4 <__ubsan_default_options@@Base+0x228>
   2e3fc:	tbnz	w0, #0, 2e768 <__ubsan_handle_cfi_bad_type@@Base+0x3dc>
   2e400:	ldr	x8, [x21, #16]
   2e404:	ldr	q0, [x21]
   2e408:	mov	w9, #0x1                   	// #1
   2e40c:	add	x0, sp, #0x3e0
   2e410:	add	x1, sp, #0x3c0
   2e414:	add	x2, sp, #0x398
   2e418:	mov	w3, #0x1f                  	// #31
   2e41c:	str	w9, [sp, #920]
   2e420:	str	x8, [sp, #976]
   2e424:	str	q0, [sp, #960]
   2e428:	str	x20, [sp, #928]
   2e42c:	str	x19, [sp, #936]
   2e430:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2e434:	tbz	w24, #0, 2e478 <__ubsan_handle_cfi_bad_type@@Base+0xec>
   2e438:	add	x8, sp, #0x380
   2e43c:	mov	x0, x22
   2e440:	bl	2ecf0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x310>
   2e444:	ldrb	w8, [x23]
   2e448:	sub	w8, w8, #0x1
   2e44c:	cmp	w8, #0x5
   2e450:	b.hi	2e494 <__ubsan_handle_cfi_bad_type@@Base+0x108>  // b.pmore
   2e454:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e458:	add	x9, x9, #0x250
   2e45c:	adr	x10, 2e46c <__ubsan_handle_cfi_bad_type@@Base+0xe0>
   2e460:	ldrb	w11, [x9, x8]
   2e464:	add	x10, x10, x11, lsl #2
   2e468:	br	x10
   2e46c:	adrp	x24, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e470:	add	x24, x24, #0x256
   2e474:	b	2e4c0 <__ubsan_handle_cfi_bad_type@@Base+0x134>
   2e478:	str	xzr, [sp, #904]
   2e47c:	str	xzr, [sp, #896]
   2e480:	str	xzr, [sp, #912]
   2e484:	ldrb	w8, [x23]
   2e488:	sub	w8, w8, #0x1
   2e48c:	cmp	w8, #0x5
   2e490:	b.ls	2e454 <__ubsan_handle_cfi_bad_type@@Base+0xc8>  // b.plast
   2e494:	adrp	x24, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e498:	add	x24, x24, #0x25a
   2e49c:	b	2e4c0 <__ubsan_handle_cfi_bad_type@@Base+0x134>
   2e4a0:	adrp	x24, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e4a4:	add	x24, x24, #0x27c
   2e4a8:	b	2e4c0 <__ubsan_handle_cfi_bad_type@@Base+0x134>
   2e4ac:	adrp	x24, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e4b0:	add	x24, x24, #0x267
   2e4b4:	b	2e4c0 <__ubsan_handle_cfi_bad_type@@Base+0x134>
   2e4b8:	adrp	x24, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e4bc:	add	x24, x24, #0xf57
   2e4c0:	ldr	q0, [sp, #448]
   2e4c4:	mov	w8, #0x1                   	// #1
   2e4c8:	stp	x20, x19, [sp, #472]
   2e4cc:	str	w8, [sp, #464]
   2e4d0:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e4d4:	stur	q0, [x25, #24]
   2e4d8:	movi	v0.2d, #0x0
   2e4dc:	str	d0, [sp, #808]
   2e4e0:	str	d0, [sp, #848]
   2e4e4:	ldr	d0, [x8, #1520]
   2e4e8:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e4ec:	add	x8, x8, #0x293
   2e4f0:	str	x8, [sp, #512]
   2e4f4:	str	wzr, [sp, #784]
   2e4f8:	str	wzr, [sp, #792]
   2e4fc:	str	xzr, [sp, #800]
   2e500:	str	wzr, [sp, #832]
   2e504:	str	xzr, [sp, #840]
   2e508:	str	xzr, [sp, #872]
   2e50c:	str	d0, [sp, #504]
   2e510:	str	wzr, [sp, #880]
   2e514:	ldr	x1, [x23, #24]
   2e518:	add	x0, sp, #0x1d0
   2e51c:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2e520:	ldr	w8, [x0, #320]
   2e524:	cmp	w8, #0x8
   2e528:	b.eq	2e788 <__ubsan_handle_cfi_bad_type@@Base+0x3fc>  // b.none
   2e52c:	add	w9, w8, #0x1
   2e530:	add	x8, x0, x8, lsl #5
   2e534:	str	w9, [x0, #320]
   2e538:	str	wzr, [x8, #64]
   2e53c:	ldr	w9, [sp, #1112]
   2e540:	ldr	x10, [sp, #1104]
   2e544:	str	x24, [x8, #80]
   2e548:	str	w9, [x8, #76]
   2e54c:	stur	x10, [x8, #68]
   2e550:	ldr	w8, [x0, #320]
   2e554:	cmp	w8, #0x8
   2e558:	b.eq	2e788 <__ubsan_handle_cfi_bad_type@@Base+0x3fc>  // b.none
   2e55c:	add	w9, w8, #0x1
   2e560:	add	x8, x0, x8, lsl #5
   2e564:	mov	w10, #0x5                   	// #5
   2e568:	str	w9, [x0, #320]
   2e56c:	str	w10, [x8, #64]
   2e570:	ldr	w9, [sp, #1112]
   2e574:	ldr	x10, [sp, #1104]
   2e578:	add	x0, sp, #0x1d0
   2e57c:	str	x22, [x8, #80]
   2e580:	str	w9, [x8, #76]
   2e584:	stur	x10, [x8, #68]
   2e588:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e58c:	ldr	x8, [sp, #896]
   2e590:	adrp	x23, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e594:	cbz	x8, 2e60c <__ubsan_handle_cfi_bad_type@@Base+0x280>
   2e598:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e59c:	mov	w9, #0x2                   	// #2
   2e5a0:	add	x10, x10, #0x2f0
   2e5a4:	ldr	d1, [x23, #1528]
   2e5a8:	str	w9, [sp, #464]
   2e5ac:	ldr	x9, [sp, #1104]
   2e5b0:	str	x10, [sp, #512]
   2e5b4:	ldr	w10, [sp, #1112]
   2e5b8:	movi	v0.2d, #0x0
   2e5bc:	mov	w11, #0x1                   	// #1
   2e5c0:	add	x0, sp, #0x1d0
   2e5c4:	str	xzr, [sp, #472]
   2e5c8:	str	x22, [sp, #488]
   2e5cc:	str	wzr, [sp, #792]
   2e5d0:	str	xzr, [sp, #800]
   2e5d4:	str	wzr, [sp, #832]
   2e5d8:	str	xzr, [sp, #840]
   2e5dc:	str	xzr, [sp, #872]
   2e5e0:	str	wzr, [sp, #880]
   2e5e4:	str	d0, [sp, #480]
   2e5e8:	str	d0, [sp, #808]
   2e5ec:	str	d0, [sp, #848]
   2e5f0:	str	w11, [sp, #784]
   2e5f4:	str	d1, [sp, #504]
   2e5f8:	str	w11, [sp, #528]
   2e5fc:	str	w10, [sp, #540]
   2e600:	stur	x9, [x25, #68]
   2e604:	str	x8, [sp, #544]
   2e608:	b	2e660 <__ubsan_handle_cfi_bad_type@@Base+0x2d4>
   2e60c:	ldr	d1, [x23, #1528]
   2e610:	mov	w8, #0x2                   	// #2
   2e614:	str	w8, [sp, #16]
   2e618:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e61c:	movi	v0.2d, #0x0
   2e620:	add	x8, x8, #0x2e1
   2e624:	str	xzr, [sp, #24]
   2e628:	str	x22, [sp, #40]
   2e62c:	str	wzr, [sp, #336]
   2e630:	str	wzr, [sp, #344]
   2e634:	str	xzr, [sp, #352]
   2e638:	str	wzr, [sp, #384]
   2e63c:	str	xzr, [sp, #392]
   2e640:	str	xzr, [sp, #424]
   2e644:	str	d0, [sp, #32]
   2e648:	str	x8, [sp, #64]
   2e64c:	str	d0, [sp, #360]
   2e650:	str	d0, [sp, #400]
   2e654:	str	d1, [sp, #56]
   2e658:	str	wzr, [sp, #432]
   2e65c:	add	x0, sp, #0x10
   2e660:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e664:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2e668:	add	x2, sp, #0x1d0
   2e66c:	add	x3, sp, #0x450
   2e670:	mov	x1, x22
   2e674:	str	xzr, [sp, #464]
   2e678:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   2e67c:	ldr	x8, [sp, #464]
   2e680:	tst	w0, #0x1
   2e684:	adrp	x24, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e688:	add	x24, x24, #0xfd0
   2e68c:	csel	x8, x8, xzr, ne  // ne = any
   2e690:	cmp	x8, #0x0
   2e694:	csel	x22, x24, x8, eq  // eq = none
   2e698:	bl	25a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   2e69c:	ldr	x1, [x21, #8]
   2e6a0:	add	x2, sp, #0x1d0
   2e6a4:	add	x3, sp, #0x450
   2e6a8:	str	xzr, [sp, #464]
   2e6ac:	bl	25fd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   2e6b0:	ldr	x8, [sp, #464]
   2e6b4:	tst	w0, #0x1
   2e6b8:	mov	x1, x22
   2e6bc:	csel	x8, x8, xzr, ne  // ne = any
   2e6c0:	cmp	x8, #0x0
   2e6c4:	csel	x21, x24, x8, eq  // eq = none
   2e6c8:	mov	x0, x21
   2e6cc:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2e6d0:	cbz	w0, 2e760 <__ubsan_handle_cfi_bad_type@@Base+0x3d4>
   2e6d4:	ldr	q0, [sp]
   2e6d8:	ldr	w10, [sp, #1112]
   2e6dc:	mov	w8, #0x1                   	// #1
   2e6e0:	str	w8, [sp, #464]
   2e6e4:	adrp	x8, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e6e8:	add	x8, x8, #0x305
   2e6ec:	stp	x20, x19, [sp, #472]
   2e6f0:	ldr	d1, [x23, #1528]
   2e6f4:	stur	q0, [x25, #24]
   2e6f8:	ldr	w11, [sp, #1112]
   2e6fc:	str	x8, [sp, #512]
   2e700:	str	w10, [sp, #540]
   2e704:	ldr	x8, [sp, #1104]
   2e708:	ldr	x10, [sp, #1104]
   2e70c:	movi	v0.2d, #0x0
   2e710:	mov	w9, #0x2                   	// #2
   2e714:	add	x0, sp, #0x1d0
   2e718:	str	d1, [sp, #504]
   2e71c:	str	wzr, [sp, #528]
   2e720:	str	wzr, [sp, #792]
   2e724:	str	xzr, [sp, #800]
   2e728:	str	d0, [sp, #808]
   2e72c:	str	wzr, [sp, #832]
   2e730:	str	xzr, [sp, #840]
   2e734:	str	d0, [sp, #848]
   2e738:	str	xzr, [sp, #872]
   2e73c:	str	wzr, [sp, #880]
   2e740:	stur	x8, [x25, #68]
   2e744:	str	x21, [sp, #544]
   2e748:	str	w9, [sp, #784]
   2e74c:	str	wzr, [sp, #560]
   2e750:	str	w11, [sp, #572]
   2e754:	stur	x10, [x25, #100]
   2e758:	str	x22, [sp, #576]
   2e75c:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e760:	add	x0, sp, #0x3e0
   2e764:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2e768:	add	sp, sp, #0x460
   2e76c:	ldp	x20, x19, [sp, #64]
   2e770:	ldp	x22, x21, [sp, #48]
   2e774:	ldp	x24, x23, [sp, #32]
   2e778:	ldp	x30, x25, [sp, #16]
   2e77c:	ldr	x29, [sp], #80
   2e780:	ret
   2e784:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2e788:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2e78c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2e790:	add	x0, x0, #0xf13
   2e794:	add	x2, x2, #0xf53
   2e798:	mov	w1, #0xc0                  	// #192
   2e79c:	mov	x3, xzr
   2e7a0:	mov	x4, xzr
   2e7a4:	bl	2012c <__sanitizer_on_print@@Base+0x36dc>

000000000002e7a8 <__ubsan_handle_function_type_mismatch_v1@@Base>:
   2e7a8:	sub	sp, sp, #0x30
   2e7ac:	stp	x29, x30, [sp, #32]
   2e7b0:	add	x29, sp, #0x20
   2e7b4:	ldur	w8, [x29, #-8]
   2e7b8:	ldur	w9, [x29, #-5]
   2e7bc:	mov	x4, sp
   2e7c0:	strb	wzr, [sp]
   2e7c4:	stur	w8, [sp, #1]
   2e7c8:	str	w9, [sp, #4]
   2e7cc:	stp	x30, x29, [sp, #8]
   2e7d0:	bl	2e7e0 <__ubsan_handle_function_type_mismatch_v1@@Base+0x38>
   2e7d4:	ldp	x29, x30, [sp, #32]
   2e7d8:	add	sp, sp, #0x30
   2e7dc:	ret
   2e7e0:	str	x29, [sp, #-80]!
   2e7e4:	stp	x30, x25, [sp, #16]
   2e7e8:	stp	x24, x23, [sp, #32]
   2e7ec:	stp	x22, x21, [sp, #48]
   2e7f0:	stp	x20, x19, [sp, #64]
   2e7f4:	sub	sp, sp, #0x290
   2e7f8:	mov	x21, x1
   2e7fc:	mov	x19, x0
   2e800:	mov	x0, x2
   2e804:	mov	x1, x3
   2e808:	mov	x23, x4
   2e80c:	bl	2ee48 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x468>
   2e810:	tbz	w0, #0, 2e81c <__ubsan_handle_function_type_mismatch_v1@@Base+0x74>
   2e814:	mov	w20, wzr
   2e818:	b	2e9c0 <__ubsan_handle_function_type_mismatch_v1@@Base+0x218>
   2e81c:	add	x25, sp, #0x284
   2e820:	add	x9, x19, #0xc
   2e824:	mov	w10, #0xffffffff            	// #-1
   2e828:	ldaxr	w8, [x9]
   2e82c:	stlxr	w11, w10, [x9]
   2e830:	cbnz	w11, 2e828 <__ubsan_handle_function_type_mismatch_v1@@Base+0x80>
   2e834:	ldr	w22, [x19, #8]
   2e838:	ldr	x24, [x19]
   2e83c:	ldr	x9, [x23, #16]
   2e840:	ldr	q0, [x23]
   2e844:	bfi	x22, x8, #32, #32
   2e848:	add	x2, sp, #0x260
   2e84c:	mov	w3, #0x1b                  	// #27
   2e850:	mov	x0, x24
   2e854:	mov	x1, x22
   2e858:	str	x9, [sp, #624]
   2e85c:	str	q0, [sp, #608]
   2e860:	bl	2a7e4 <__ubsan_default_options@@Base+0x228>
   2e864:	mov	w20, #0x1                   	// #1
   2e868:	tbnz	w0, #0, 2e9c0 <__ubsan_handle_function_type_mismatch_v1@@Base+0x218>
   2e86c:	ldr	x8, [x23, #16]
   2e870:	ldr	q0, [x23]
   2e874:	add	x0, sp, #0x210
   2e878:	add	x1, sp, #0x1f0
   2e87c:	add	x2, sp, #0x1c8
   2e880:	mov	w3, #0x1b                  	// #27
   2e884:	str	w20, [sp, #456]
   2e888:	str	x8, [sp, #512]
   2e88c:	str	q0, [sp, #496]
   2e890:	stp	x24, x22, [sp, #464]
   2e894:	bl	29fac <__sanitizer_get_module_and_offset_for_pc@@Base+0x5324>
   2e898:	mov	x0, x21
   2e89c:	bl	29560 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48d8>
   2e8a0:	ldr	q0, [sp]
   2e8a4:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e8a8:	ldr	x8, [x0, #40]
   2e8ac:	ldr	x11, [x25]
   2e8b0:	stur	q0, [sp, #40]
   2e8b4:	ldr	d0, [x10, #576]
   2e8b8:	adrp	x10, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e8bc:	add	x10, x10, #0x459
   2e8c0:	str	x10, [sp, #64]
   2e8c4:	ldr	w10, [sp, #652]
   2e8c8:	adrp	x9, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e8cc:	add	x9, x9, #0xfd0
   2e8d0:	cmp	x8, #0x0
   2e8d4:	stp	x24, x22, [sp, #24]
   2e8d8:	str	d0, [sp, #56]
   2e8dc:	movi	v0.2d, #0x0
   2e8e0:	csel	x22, x9, x8, eq  // eq = none
   2e8e4:	str	w20, [sp, #16]
   2e8e8:	str	wzr, [sp, #344]
   2e8ec:	str	xzr, [sp, #352]
   2e8f0:	str	wzr, [sp, #384]
   2e8f4:	str	xzr, [sp, #392]
   2e8f8:	str	xzr, [sp, #424]
   2e8fc:	str	wzr, [sp, #432]
   2e900:	str	w20, [sp, #336]
   2e904:	str	wzr, [sp, #80]
   2e908:	str	d0, [sp, #360]
   2e90c:	str	d0, [sp, #400]
   2e910:	str	w10, [sp, #92]
   2e914:	stur	x11, [sp, #84]
   2e918:	str	x22, [sp, #96]
   2e91c:	ldr	x1, [x19, #16]
   2e920:	mov	x21, x0
   2e924:	add	x0, sp, #0x10
   2e928:	bl	2957c <__sanitizer_get_module_and_offset_for_pc@@Base+0x48f4>
   2e92c:	add	x0, sp, #0x10
   2e930:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e934:	movi	v0.2d, #0x0
   2e938:	adrp	x9, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa620>
   2e93c:	str	d0, [sp, #32]
   2e940:	str	d0, [sp, #360]
   2e944:	str	d0, [sp, #400]
   2e948:	ldr	d0, [x9, #584]
   2e94c:	ldr	w9, [sp, #652]
   2e950:	ldr	x10, [x25]
   2e954:	mov	w8, #0x3                   	// #3
   2e958:	str	w8, [sp, #16]
   2e95c:	adrp	x8, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9620>
   2e960:	add	x8, x8, #0xfda
   2e964:	add	x0, sp, #0x10
   2e968:	str	xzr, [sp, #24]
   2e96c:	str	x21, [sp, #48]
   2e970:	str	w20, [sp, #336]
   2e974:	str	wzr, [sp, #344]
   2e978:	str	xzr, [sp, #352]
   2e97c:	str	wzr, [sp, #384]
   2e980:	str	xzr, [sp, #392]
   2e984:	str	xzr, [sp, #424]
   2e988:	str	wzr, [sp, #432]
   2e98c:	str	wzr, [sp, #80]
   2e990:	str	x8, [sp, #64]
   2e994:	str	w9, [sp, #92]
   2e998:	stur	x10, [sp, #84]
   2e99c:	str	d0, [sp, #56]
   2e9a0:	str	x22, [sp, #96]
   2e9a4:	bl	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>
   2e9a8:	cbz	x21, 2e9b4 <__ubsan_handle_function_type_mismatch_v1@@Base+0x20c>
   2e9ac:	mov	x0, x21
   2e9b0:	bl	25540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   2e9b4:	add	x0, sp, #0x210
   2e9b8:	bl	2a008 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5380>
   2e9bc:	mov	w20, #0x1                   	// #1
   2e9c0:	mov	w0, w20
   2e9c4:	add	sp, sp, #0x290
   2e9c8:	ldp	x20, x19, [sp, #64]
   2e9cc:	ldp	x22, x21, [sp, #48]
   2e9d0:	ldp	x24, x23, [sp, #32]
   2e9d4:	ldp	x30, x25, [sp, #16]
   2e9d8:	ldr	x29, [sp], #80
   2e9dc:	ret

000000000002e9e0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base>:
   2e9e0:	sub	sp, sp, #0x30
   2e9e4:	stp	x29, x30, [sp, #32]
   2e9e8:	add	x29, sp, #0x20
   2e9ec:	ldur	w8, [x29, #-8]
   2e9f0:	ldur	w9, [x29, #-5]
   2e9f4:	mov	w10, #0x1                   	// #1
   2e9f8:	mov	x4, sp
   2e9fc:	strb	w10, [sp]
   2ea00:	stur	w8, [sp, #1]
   2ea04:	str	w9, [sp, #4]
   2ea08:	stp	x30, x29, [sp, #8]
   2ea0c:	bl	2e7e0 <__ubsan_handle_function_type_mismatch_v1@@Base+0x38>
   2ea10:	tbnz	w0, #0, 2ea20 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x40>
   2ea14:	ldp	x29, x30, [sp, #32]
   2ea18:	add	sp, sp, #0x30
   2ea1c:	ret
   2ea20:	bl	20054 <__sanitizer_on_print@@Base+0x3604>
   2ea24:	ldr	x0, [x0]
   2ea28:	b	2ecf0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x310>
   2ea2c:	stp	x30, x23, [sp, #-48]!
   2ea30:	stp	x22, x21, [sp, #16]
   2ea34:	stp	x20, x19, [sp, #32]
   2ea38:	mov	x19, x2
   2ea3c:	and	w8, w19, #0xffff
   2ea40:	adrp	x9, 929000 <__ubsan_vptr_type_cache@@Base+0x268>
   2ea44:	eor	w12, w8, #0x1
   2ea48:	add	x9, x9, #0x198
   2ea4c:	add	x8, x9, w12, uxtw #3
   2ea50:	ldr	x10, [x8]
   2ea54:	mov	x20, x1
   2ea58:	mov	x22, x8
   2ea5c:	cbz	x10, 2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2ea60:	cmp	x10, x19
   2ea64:	b.eq	2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   2ea68:	ubfx	x10, x19, #16, #16
   2ea6c:	add	w11, w10, #0x1
   2ea70:	mov	w13, #0xfffeffff            	// #-65537
   2ea74:	add	w10, w11, w12
   2ea78:	add	w12, w10, w13
   2ea7c:	cmp	w10, #0x10, lsl #12
   2ea80:	csel	w12, w12, w10, hi  // hi = pmore
   2ea84:	add	x22, x9, w12, uxtw #3
   2ea88:	ldr	x10, [x22]
   2ea8c:	cbz	x10, 2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2ea90:	cmp	x10, x19
   2ea94:	b.eq	2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   2ea98:	add	w10, w12, w11
   2ea9c:	mov	w12, #0xfffeffff            	// #-65537
   2eaa0:	add	w12, w10, w12
   2eaa4:	cmp	w10, #0x10, lsl #12
   2eaa8:	csel	w12, w12, w10, hi  // hi = pmore
   2eaac:	add	x22, x9, w12, uxtw #3
   2eab0:	ldr	x10, [x22]
   2eab4:	cbz	x10, 2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2eab8:	cmp	x10, x19
   2eabc:	b.eq	2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   2eac0:	add	w10, w12, w11
   2eac4:	mov	w12, #0xfffeffff            	// #-65537
   2eac8:	add	w12, w10, w12
   2eacc:	cmp	w10, #0x10, lsl #12
   2ead0:	csel	w12, w12, w10, hi  // hi = pmore
   2ead4:	add	x22, x9, w12, uxtw #3
   2ead8:	ldr	x10, [x22]
   2eadc:	cbz	x10, 2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2eae0:	cmp	x10, x19
   2eae4:	b.eq	2eb14 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   2eae8:	add	w10, w12, w11
   2eaec:	mov	w11, #0xfffeffff            	// #-65537
   2eaf0:	add	w11, w10, w11
   2eaf4:	cmp	w10, #0x10, lsl #12
   2eaf8:	csel	w10, w11, w10, hi  // hi = pmore
   2eafc:	add	x9, x9, w10, uxtw #3
   2eb00:	ldr	x10, [x9]
   2eb04:	cmp	x10, x19
   2eb08:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   2eb0c:	csel	x22, x9, x8, eq  // eq = none
   2eb10:	ldr	x10, [x22]
   2eb14:	cmp	x10, x19
   2eb18:	b.ne	2eb40 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x160>  // b.any
   2eb1c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eb20:	ldr	x9, [x9, #3664]
   2eb24:	and	x8, x19, #0x7f
   2eb28:	mov	w0, #0x1                   	// #1
   2eb2c:	str	x19, [x9, x8, lsl #3]
   2eb30:	ldp	x20, x19, [sp, #32]
   2eb34:	ldp	x22, x21, [sp, #16]
   2eb38:	ldp	x30, x23, [sp], #48
   2eb3c:	ret
   2eb40:	ldr	x23, [x0]
   2eb44:	mov	w1, #0x10                  	// #16
   2eb48:	sub	x21, x23, #0x10
   2eb4c:	mov	x0, x21
   2eb50:	bl	21730 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   2eb54:	tbz	w0, #0, 2ebb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   2eb58:	ldur	x0, [x23, #-8]
   2eb5c:	cbz	x0, 2eb30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x150>
   2eb60:	ldr	x21, [x21]
   2eb64:	add	x8, x21, #0x100, lsl #12
   2eb68:	cmp	x8, #0x200, lsl #12
   2eb6c:	b.hi	2ebb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>  // b.pmore
   2eb70:	adrp	x1, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eb74:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eb78:	ldr	x1, [x1, #3864]
   2eb7c:	ldr	x2, [x2, #4064]
   2eb80:	mov	x3, xzr
   2eb84:	bl	6c40 <__dynamic_cast@plt>
   2eb88:	cbz	x0, 2eb30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x150>
   2eb8c:	neg	x2, x21
   2eb90:	mov	x1, x20
   2eb94:	bl	2ebc4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e4>
   2eb98:	tbz	w0, #0, 2ebb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   2eb9c:	adrp	x9, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eba0:	ldr	x9, [x9, #3664]
   2eba4:	and	x8, x19, #0x7f
   2eba8:	str	x19, [x22]
   2ebac:	b	2eb28 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x148>
   2ebb0:	mov	w0, wzr
   2ebb4:	ldp	x20, x19, [sp, #32]
   2ebb8:	ldp	x22, x21, [sp, #16]
   2ebbc:	ldp	x30, x23, [sp], #48
   2ebc0:	ret
   2ebc4:	stp	x30, x23, [sp, #-48]!
   2ebc8:	stp	x22, x21, [sp, #16]
   2ebcc:	stp	x20, x19, [sp, #32]
   2ebd0:	mov	x19, x1
   2ebd4:	mov	x21, x0
   2ebd8:	ldr	x0, [x0, #8]
   2ebdc:	ldr	x1, [x1, #8]
   2ebe0:	mov	x20, x2
   2ebe4:	cmp	x0, x1
   2ebe8:	b.eq	2ec48 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x268>  // b.none
   2ebec:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2ebf0:	adrp	x23, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2ebf4:	ldr	x22, [x22, #4064]
   2ebf8:	ldr	x23, [x23, #3912]
   2ebfc:	ldrb	w8, [x0]
   2ec00:	cmp	w8, #0x2a
   2ec04:	b.eq	2ec1c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23c>  // b.none
   2ec08:	ldrb	w8, [x1]
   2ec0c:	cmp	w8, #0x2a
   2ec10:	b.eq	2ec1c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23c>  // b.none
   2ec14:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2ec18:	cbz	w0, 2ec48 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x268>
   2ec1c:	mov	x0, x21
   2ec20:	mov	x1, x22
   2ec24:	mov	x2, x23
   2ec28:	mov	x3, xzr
   2ec2c:	bl	6c40 <__dynamic_cast@plt>
   2ec30:	cbz	x0, 2ec60 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   2ec34:	ldr	x21, [x0, #16]
   2ec38:	ldr	x1, [x19, #8]
   2ec3c:	ldr	x0, [x21, #8]
   2ec40:	cmp	x0, x1
   2ec44:	b.ne	2ebfc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x21c>  // b.any
   2ec48:	cmp	x20, #0x0
   2ec4c:	cset	w0, eq  // eq = none
   2ec50:	ldp	x20, x19, [sp, #32]
   2ec54:	ldp	x22, x21, [sp, #16]
   2ec58:	ldp	x30, x23, [sp], #48
   2ec5c:	ret
   2ec60:	adrp	x1, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2ec64:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2ec68:	ldr	x1, [x1, #4064]
   2ec6c:	ldr	x2, [x2, #3848]
   2ec70:	mov	x0, x21
   2ec74:	mov	x3, xzr
   2ec78:	bl	6c40 <__dynamic_cast@plt>
   2ec7c:	cbz	x0, 2ec50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x270>
   2ec80:	ldr	w8, [x0, #20]
   2ec84:	mov	x21, x0
   2ec88:	cbz	w8, 2ecc8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2e8>
   2ec8c:	mov	w8, wzr
   2ec90:	add	x9, x21, w8, uxtw #4
   2ec94:	ldr	x9, [x9, #32]
   2ec98:	tbnz	w9, #0, 2ecdc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2fc>
   2ec9c:	mov	w22, w8
   2eca0:	add	x8, x21, x22, lsl #4
   2eca4:	ldr	x0, [x8, #24]
   2eca8:	sub	x2, x20, x9, asr #8
   2ecac:	mov	x1, x19
   2ecb0:	bl	2ebc4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e4>
   2ecb4:	tbnz	w0, #0, 2ecdc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2fc>
   2ecb8:	ldr	w9, [x21, #20]
   2ecbc:	add	w8, w22, #0x1
   2ecc0:	cmp	w8, w9
   2ecc4:	b.ne	2ec90 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2b0>  // b.any
   2ecc8:	mov	w0, wzr
   2eccc:	ldp	x20, x19, [sp, #32]
   2ecd0:	ldp	x22, x21, [sp, #16]
   2ecd4:	ldp	x30, x23, [sp], #48
   2ecd8:	ret
   2ecdc:	mov	w0, #0x1                   	// #1
   2ece0:	ldp	x20, x19, [sp, #32]
   2ece4:	ldp	x22, x21, [sp, #16]
   2ece8:	ldp	x30, x23, [sp], #48
   2ecec:	ret
   2ecf0:	stp	x30, x21, [sp, #-32]!
   2ecf4:	stp	x20, x19, [sp, #16]
   2ecf8:	sub	x20, x0, #0x10
   2ecfc:	mov	x21, x0
   2ed00:	mov	w1, #0x10                  	// #16
   2ed04:	mov	x0, x20
   2ed08:	mov	x19, x8
   2ed0c:	bl	21730 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   2ed10:	tbz	w0, #0, 2ed4c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x36c>
   2ed14:	ldur	x21, [x21, #-8]
   2ed18:	cbz	x21, 2ed4c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x36c>
   2ed1c:	ldr	x20, [x20]
   2ed20:	add	x8, x20, #0x100, lsl #12
   2ed24:	cmp	x8, #0x200, lsl #12
   2ed28:	b.hi	2ed50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x370>  // b.pmore
   2ed2c:	neg	x20, x20
   2ed30:	mov	x0, x21
   2ed34:	mov	x1, x20
   2ed38:	bl	2ed84 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3a4>
   2ed3c:	ldr	x9, [x21, #8]
   2ed40:	cbz	x0, 2ed68 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   2ed44:	ldr	x8, [x0, #8]
   2ed48:	b	2ed70 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x390>
   2ed4c:	mov	x20, xzr
   2ed50:	mov	x8, xzr
   2ed54:	str	xzr, [x19]
   2ed58:	stp	x20, x8, [x19, #8]
   2ed5c:	ldp	x20, x19, [sp, #16]
   2ed60:	ldp	x30, x21, [sp], #32
   2ed64:	ret
   2ed68:	adrp	x8, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8620>
   2ed6c:	add	x8, x8, #0xe66
   2ed70:	str	x9, [x19]
   2ed74:	stp	x20, x8, [x19, #8]
   2ed78:	ldp	x20, x19, [sp, #16]
   2ed7c:	ldp	x30, x21, [sp], #32
   2ed80:	ret
   2ed84:	str	x30, [sp, #-48]!
   2ed88:	stp	x22, x21, [sp, #16]
   2ed8c:	stp	x20, x19, [sp, #32]
   2ed90:	mov	x20, x0
   2ed94:	cbz	x1, 2ee34 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   2ed98:	cbz	x20, 2ee34 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   2ed9c:	adrp	x21, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eda0:	adrp	x22, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eda4:	ldr	x21, [x21, #4064]
   2eda8:	ldr	x22, [x22, #3912]
   2edac:	mov	x19, x1
   2edb0:	mov	x0, x20
   2edb4:	mov	x1, x21
   2edb8:	mov	x2, x22
   2edbc:	mov	x3, xzr
   2edc0:	bl	6c40 <__dynamic_cast@plt>
   2edc4:	cbz	x0, 2edd4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3f4>
   2edc8:	ldr	x20, [x0, #16]
   2edcc:	cbnz	x20, 2edb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3d0>
   2edd0:	b	2ee34 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   2edd4:	adrp	x1, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2edd8:	adrp	x2, 51000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x22620>
   2eddc:	ldr	x1, [x1, #4064]
   2ede0:	ldr	x2, [x2, #3848]
   2ede4:	mov	x0, x20
   2ede8:	mov	x3, xzr
   2edec:	bl	6c40 <__dynamic_cast@plt>
   2edf0:	cbz	x0, 2ee30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   2edf4:	ldr	w21, [x0, #20]
   2edf8:	cbz	w21, 2ee30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   2edfc:	add	x22, x0, #0x20
   2ee00:	b	2ee10 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x430>
   2ee04:	subs	w21, w21, #0x1
   2ee08:	add	x22, x22, #0x10
   2ee0c:	b.eq	2ee30 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>  // b.none
   2ee10:	ldr	x8, [x22]
   2ee14:	tbnz	w8, #0, 2ee04 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x424>
   2ee18:	ldur	x0, [x22, #-8]
   2ee1c:	sub	x1, x19, x8, asr #8
   2ee20:	bl	2ed84 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3a4>
   2ee24:	cbz	x0, 2ee04 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x424>
   2ee28:	mov	x20, x0
   2ee2c:	b	2ee34 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   2ee30:	mov	x20, xzr
   2ee34:	mov	x0, x20
   2ee38:	ldp	x20, x19, [sp, #32]
   2ee3c:	ldp	x22, x21, [sp, #16]
   2ee40:	ldr	x30, [sp], #48
   2ee44:	ret
   2ee48:	str	x30, [sp, #-16]!
   2ee4c:	ldr	x0, [x0, #8]
   2ee50:	ldrb	w8, [x0]
   2ee54:	cmp	w8, #0x2a
   2ee58:	b.ne	2ee68 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x488>  // b.any
   2ee5c:	mov	w0, wzr
   2ee60:	ldr	x30, [sp], #16
   2ee64:	ret
   2ee68:	ldr	x1, [x1, #8]
   2ee6c:	ldrb	w8, [x1]
   2ee70:	cmp	w8, #0x2a
   2ee74:	b.ne	2ee84 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4a4>  // b.any
   2ee78:	mov	w0, wzr
   2ee7c:	ldr	x30, [sp], #16
   2ee80:	ret
   2ee84:	bl	18ca4 <__sanitizer_set_report_fd@@Base+0x2660>
   2ee88:	cmp	w0, #0x0
   2ee8c:	cset	w0, eq  // eq = none
   2ee90:	ldr	x30, [sp], #16
   2ee94:	ret
   2ee98:	adrp	x2, 52000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23620>
   2ee9c:	mov	x1, #0x0                   	// #0
   2eea0:	ldr	x2, [x2, #608]
   2eea4:	b	6c50 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000002eea8 <.fini>:
   2eea8:	stp	x29, x30, [sp, #-16]!
   2eeac:	mov	x29, sp
   2eeb0:	ldp	x29, x30, [sp], #16
   2eeb4:	ret
