
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ata_id_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400f48 <_init>:
  400f48:	stp	x29, x30, [sp, #-16]!
  400f4c:	mov	x29, sp
  400f50:	bl	4011c0 <call_weak_fn>
  400f54:	ldp	x29, x30, [sp], #16
  400f58:	ret

Disassembly of section .plt:

0000000000400f60 <__libc_start_main@plt-0x20>:
  400f60:	stp	x16, x30, [sp, #-16]!
  400f64:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400f68:	ldr	x17, [x16, #3840]
  400f6c:	add	x16, x16, #0xf00
  400f70:	br	x17
  400f74:	nop
  400f78:	nop
  400f7c:	nop

0000000000400f80 <__libc_start_main@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400f84:	ldr	x17, [x16, #3848]
  400f88:	add	x16, x16, #0xf08
  400f8c:	br	x17

0000000000400f90 <abort@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400f94:	ldr	x17, [x16, #3856]
  400f98:	add	x16, x16, #0xf10
  400f9c:	br	x17

0000000000400fa0 <__gmon_start__@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400fa4:	ldr	x17, [x16, #3864]
  400fa8:	add	x16, x16, #0xf18
  400fac:	br	x17

0000000000400fb0 <log_set_target@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400fb4:	ldr	x17, [x16, #3872]
  400fb8:	add	x16, x16, #0xf20
  400fbc:	br	x17

0000000000400fc0 <log_parse_environment_realm@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400fc4:	ldr	x17, [x16, #3880]
  400fc8:	add	x16, x16, #0xf28
  400fcc:	br	x17

0000000000400fd0 <log_open@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400fd4:	ldr	x17, [x16, #3888]
  400fd8:	add	x16, x16, #0xf30
  400fdc:	br	x17

0000000000400fe0 <getopt_long@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400fe4:	ldr	x17, [x16, #3896]
  400fe8:	add	x16, x16, #0xf38
  400fec:	br	x17

0000000000400ff0 <printf@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  400ff4:	ldr	x17, [x16, #3904]
  400ff8:	add	x16, x16, #0xf40
  400ffc:	br	x17

0000000000401000 <log_get_max_level_realm@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401004:	ldr	x17, [x16, #3912]
  401008:	add	x16, x16, #0xf48
  40100c:	br	x17

0000000000401010 <log_internal_realm@plt>:
  401010:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401014:	ldr	x17, [x16, #3920]
  401018:	add	x16, x16, #0xf50
  40101c:	br	x17

0000000000401020 <abs@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401024:	ldr	x17, [x16, #3928]
  401028:	add	x16, x16, #0xf58
  40102c:	br	x17

0000000000401030 <open64@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401034:	ldr	x17, [x16, #3936]
  401038:	add	x16, x16, #0xf60
  40103c:	br	x17

0000000000401040 <memcpy@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401044:	ldr	x17, [x16, #3944]
  401048:	add	x16, x16, #0xf68
  40104c:	br	x17

0000000000401050 <ioctl@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401054:	ldr	x17, [x16, #3952]
  401058:	add	x16, x16, #0xf70
  40105c:	br	x17

0000000000401060 <__errno_location@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401064:	ldr	x17, [x16, #3960]
  401068:	add	x16, x16, #0xf78
  40106c:	br	x17

0000000000401070 <safe_close@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401074:	ldr	x17, [x16, #3968]
  401078:	add	x16, x16, #0xf80
  40107c:	br	x17

0000000000401080 <udev_parse_config_full@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401084:	ldr	x17, [x16, #3976]
  401088:	add	x16, x16, #0xf88
  40108c:	br	x17

0000000000401090 <memset@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401094:	ldr	x17, [x16, #3984]
  401098:	add	x16, x16, #0xf90
  40109c:	br	x17

00000000004010a0 <strscpy@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010a4:	ldr	x17, [x16, #3992]
  4010a8:	add	x16, x16, #0xf98
  4010ac:	br	x17

00000000004010b0 <strchr@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010b4:	ldr	x17, [x16, #4000]
  4010b8:	add	x16, x16, #0xfa0
  4010bc:	br	x17

00000000004010c0 <sd_device_new_from_subsystem_sysname@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010c4:	ldr	x17, [x16, #4008]
  4010c8:	add	x16, x16, #0xfa8
  4010cc:	br	x17

00000000004010d0 <sd_device_get_sysattr_value@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010d4:	ldr	x17, [x16, #4016]
  4010d8:	add	x16, x16, #0xfb0
  4010dc:	br	x17

00000000004010e0 <sd_device_get_syspath@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010e4:	ldr	x17, [x16, #4024]
  4010e8:	add	x16, x16, #0xfb8
  4010ec:	br	x17

00000000004010f0 <strscpyl@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  4010f4:	ldr	x17, [x16, #4032]
  4010f8:	add	x16, x16, #0xfc0
  4010fc:	br	x17

0000000000401100 <sd_device_unref@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401104:	ldr	x17, [x16, #4040]
  401108:	add	x16, x16, #0xfc8
  40110c:	br	x17

0000000000401110 <log_assert_failed_realm@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401114:	ldr	x17, [x16, #4048]
  401118:	add	x16, x16, #0xfd0
  40111c:	br	x17

0000000000401120 <strspn@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401124:	ldr	x17, [x16, #4056]
  401128:	add	x16, x16, #0xfd8
  40112c:	br	x17

0000000000401130 <__ctype_b_loc@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401134:	ldr	x17, [x16, #4064]
  401138:	add	x16, x16, #0xfe0
  40113c:	br	x17

0000000000401140 <whitelisted_char_for_devnode@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401144:	ldr	x17, [x16, #4072]
  401148:	add	x16, x16, #0xfe8
  40114c:	br	x17

0000000000401150 <utf8_encoded_valid_unichar@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401154:	ldr	x17, [x16, #4080]
  401158:	add	x16, x16, #0xff0
  40115c:	br	x17

0000000000401160 <encode_devnode_name@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1b0c8>
  401164:	ldr	x17, [x16, #4088]
  401168:	add	x16, x16, #0xff8
  40116c:	br	x17

Disassembly of section .text:

0000000000401170 <_start>:
  401170:	mov	x29, #0x0                   	// #0
  401174:	mov	x30, #0x0                   	// #0
  401178:	mov	x5, x0
  40117c:	ldr	x1, [sp]
  401180:	add	x2, sp, #0x8
  401184:	mov	x6, sp
  401188:	movz	x0, #0x0, lsl #48
  40118c:	movk	x0, #0x0, lsl #32
  401190:	movk	x0, #0x40, lsl #16
  401194:	movk	x0, #0x1338
  401198:	movz	x3, #0x0, lsl #48
  40119c:	movk	x3, #0x0, lsl #32
  4011a0:	movk	x3, #0x40, lsl #16
  4011a4:	movk	x3, #0x3548
  4011a8:	movz	x4, #0x0, lsl #48
  4011ac:	movk	x4, #0x0, lsl #32
  4011b0:	movk	x4, #0x40, lsl #16
  4011b4:	movk	x4, #0x35c8
  4011b8:	bl	400f80 <__libc_start_main@plt>
  4011bc:	bl	400f90 <abort@plt>

00000000004011c0 <call_weak_fn>:
  4011c0:	adrp	x0, 41f000 <__FRAME_END__+0x1b0c8>
  4011c4:	ldr	x0, [x0, #3816]
  4011c8:	cbz	x0, 4011d0 <call_weak_fn+0x10>
  4011cc:	b	400fa0 <__gmon_start__@plt>
  4011d0:	ret

00000000004011d4 <deregister_tm_clones>:
  4011d4:	stp	x29, x30, [sp, #-32]!
  4011d8:	mov	x29, sp
  4011dc:	adrp	x0, 420000 <completed.8445>
  4011e0:	add	x0, x0, #0x0
  4011e4:	str	x0, [sp, #24]
  4011e8:	ldr	x0, [sp, #24]
  4011ec:	str	x0, [sp, #24]
  4011f0:	ldr	x1, [sp, #24]
  4011f4:	adrp	x0, 420000 <completed.8445>
  4011f8:	add	x0, x0, #0x0
  4011fc:	cmp	x1, x0
  401200:	b.eq	40123c <deregister_tm_clones+0x68>  // b.none
  401204:	adrp	x0, 403000 <util_path_encode+0xd4>
  401208:	add	x0, x0, #0x5e0
  40120c:	ldr	x0, [x0]
  401210:	str	x0, [sp, #16]
  401214:	ldr	x0, [sp, #16]
  401218:	str	x0, [sp, #16]
  40121c:	ldr	x0, [sp, #16]
  401220:	cmp	x0, #0x0
  401224:	b.eq	401240 <deregister_tm_clones+0x6c>  // b.none
  401228:	ldr	x1, [sp, #16]
  40122c:	adrp	x0, 420000 <completed.8445>
  401230:	add	x0, x0, #0x0
  401234:	blr	x1
  401238:	b	401240 <deregister_tm_clones+0x6c>
  40123c:	nop
  401240:	ldp	x29, x30, [sp], #32
  401244:	ret

0000000000401248 <register_tm_clones>:
  401248:	stp	x29, x30, [sp, #-48]!
  40124c:	mov	x29, sp
  401250:	adrp	x0, 420000 <completed.8445>
  401254:	add	x0, x0, #0x0
  401258:	str	x0, [sp, #40]
  40125c:	ldr	x0, [sp, #40]
  401260:	str	x0, [sp, #40]
  401264:	ldr	x1, [sp, #40]
  401268:	adrp	x0, 420000 <completed.8445>
  40126c:	add	x0, x0, #0x0
  401270:	sub	x0, x1, x0
  401274:	asr	x0, x0, #3
  401278:	lsr	x1, x0, #63
  40127c:	add	x0, x1, x0
  401280:	asr	x0, x0, #1
  401284:	str	x0, [sp, #32]
  401288:	ldr	x0, [sp, #32]
  40128c:	cmp	x0, #0x0
  401290:	b.eq	4012d0 <register_tm_clones+0x88>  // b.none
  401294:	adrp	x0, 403000 <util_path_encode+0xd4>
  401298:	add	x0, x0, #0x5e8
  40129c:	ldr	x0, [x0]
  4012a0:	str	x0, [sp, #24]
  4012a4:	ldr	x0, [sp, #24]
  4012a8:	str	x0, [sp, #24]
  4012ac:	ldr	x0, [sp, #24]
  4012b0:	cmp	x0, #0x0
  4012b4:	b.eq	4012d4 <register_tm_clones+0x8c>  // b.none
  4012b8:	ldr	x2, [sp, #24]
  4012bc:	ldr	x1, [sp, #32]
  4012c0:	adrp	x0, 420000 <completed.8445>
  4012c4:	add	x0, x0, #0x0
  4012c8:	blr	x2
  4012cc:	b	4012d4 <register_tm_clones+0x8c>
  4012d0:	nop
  4012d4:	ldp	x29, x30, [sp], #48
  4012d8:	ret

00000000004012dc <__do_global_dtors_aux>:
  4012dc:	stp	x29, x30, [sp, #-16]!
  4012e0:	mov	x29, sp
  4012e4:	adrp	x0, 420000 <completed.8445>
  4012e8:	add	x0, x0, #0x0
  4012ec:	ldrb	w0, [x0]
  4012f0:	and	x0, x0, #0xff
  4012f4:	cmp	x0, #0x0
  4012f8:	b.ne	401314 <__do_global_dtors_aux+0x38>  // b.any
  4012fc:	bl	4011d4 <deregister_tm_clones>
  401300:	adrp	x0, 420000 <completed.8445>
  401304:	add	x0, x0, #0x0
  401308:	mov	w1, #0x1                   	// #1
  40130c:	strb	w1, [x0]
  401310:	b	401318 <__do_global_dtors_aux+0x3c>
  401314:	nop
  401318:	ldp	x29, x30, [sp], #16
  40131c:	ret

0000000000401320 <frame_dummy>:
  401320:	stp	x29, x30, [sp, #-16]!
  401324:	mov	x29, sp
  401328:	bl	401248 <register_tm_clones>
  40132c:	nop
  401330:	ldp	x29, x30, [sp], #16
  401334:	ret

0000000000401338 <main>:
  401338:	stp	x29, x30, [sp, #-32]!
  40133c:	str	x28, [sp, #16]
  401340:	mov	x29, sp
  401344:	sub	sp, sp, #0x650
  401348:	sub	x8, x29, #0x10
  40134c:	mov	x9, xzr
  401350:	mov	w10, #0xffffffff            	// #-1
  401354:	mov	w11, #0x7                   	// #7
  401358:	mov	w12, #0x1                   	// #1
  40135c:	adrp	x13, 403000 <util_path_encode+0xd4>
  401360:	add	x13, x13, #0x74c
  401364:	add	x13, x13, #0x3
  401368:	adrp	x14, 403000 <util_path_encode+0xd4>
  40136c:	add	x14, x14, #0x768
  401370:	str	wzr, [x8, #12]
  401374:	str	w0, [x8, #8]
  401378:	str	x1, [x8]
  40137c:	str	x9, [sp, #240]
  401380:	str	wzr, [sp, #236]
  401384:	str	w10, [sp, #232]
  401388:	str	wzr, [sp, #224]
  40138c:	mov	w0, w11
  401390:	str	x8, [sp, #136]
  401394:	str	w12, [sp, #132]
  401398:	str	x13, [sp, #120]
  40139c:	str	x14, [sp, #112]
  4013a0:	bl	400fb0 <log_set_target@plt>
  4013a4:	bl	401f8c <udev_parse_config>
  4013a8:	ldr	w10, [sp, #132]
  4013ac:	mov	w0, w10
  4013b0:	bl	400fc0 <log_parse_environment_realm@plt>
  4013b4:	bl	400fd0 <log_open@plt>
  4013b8:	ldr	x8, [sp, #136]
  4013bc:	ldr	w0, [x8, #8]
  4013c0:	ldr	x1, [x8]
  4013c4:	adrp	x2, 403000 <util_path_encode+0xd4>
  4013c8:	add	x2, x2, #0x6c8
  4013cc:	adrp	x3, 403000 <util_path_encode+0xd4>
  4013d0:	add	x3, x3, #0x610
  4013d4:	mov	x9, xzr
  4013d8:	mov	x4, x9
  4013dc:	bl	400fe0 <getopt_long@plt>
  4013e0:	str	w0, [sp, #220]
  4013e4:	ldr	w10, [sp, #220]
  4013e8:	mov	w11, #0xffffffff            	// #-1
  4013ec:	cmp	w10, w11
  4013f0:	b.ne	4013f8 <main+0xc0>  // b.any
  4013f4:	b	401460 <main+0x128>
  4013f8:	ldr	w8, [sp, #220]
  4013fc:	cmp	w8, #0x68
  401400:	str	w8, [sp, #108]
  401404:	b.eq	401430 <main+0xf8>  // b.none
  401408:	b	40140c <main+0xd4>
  40140c:	ldr	w8, [sp, #108]
  401410:	cmp	w8, #0x78
  401414:	cset	w9, eq  // eq = none
  401418:	eor	w9, w9, #0x1
  40141c:	tbnz	w9, #0, 40145c <main+0x124>
  401420:	b	401424 <main+0xec>
  401424:	mov	w8, #0x1                   	// #1
  401428:	str	w8, [sp, #236]
  40142c:	b	40145c <main+0x124>
  401430:	adrp	x8, 420000 <completed.8445>
  401434:	add	x8, x8, #0x8
  401438:	ldr	x1, [x8]
  40143c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401440:	add	x0, x0, #0x6cb
  401444:	bl	400ff0 <printf@plt>
  401448:	ldr	x8, [sp, #136]
  40144c:	str	wzr, [x8, #12]
  401450:	mov	w9, #0x1                   	// #1
  401454:	str	w9, [sp, #216]
  401458:	b	401f44 <main+0xc0c>
  40145c:	b	4013b8 <main+0x80>
  401460:	ldr	x8, [sp, #136]
  401464:	ldr	x9, [x8]
  401468:	adrp	x10, 420000 <completed.8445>
  40146c:	add	x10, x10, #0x10
  401470:	ldrsw	x10, [x10]
  401474:	mov	x11, #0x8                   	// #8
  401478:	mul	x10, x11, x10
  40147c:	add	x9, x9, x10
  401480:	ldr	x9, [x9]
  401484:	str	x9, [sp, #240]
  401488:	ldr	x9, [sp, #240]
  40148c:	cbnz	x9, 40151c <main+0x1e4>
  401490:	mov	w8, #0x3                   	// #3
  401494:	str	w8, [sp, #212]
  401498:	str	wzr, [sp, #208]
  40149c:	mov	w8, #0x1                   	// #1
  4014a0:	str	w8, [sp, #204]
  4014a4:	ldr	w0, [sp, #204]
  4014a8:	bl	401000 <log_get_max_level_realm@plt>
  4014ac:	ldr	w8, [sp, #212]
  4014b0:	and	w8, w8, #0x7
  4014b4:	cmp	w0, w8
  4014b8:	b.lt	4014ec <main+0x1b4>  // b.tstop
  4014bc:	ldr	w8, [sp, #204]
  4014c0:	ldr	w9, [sp, #212]
  4014c4:	orr	w0, w9, w8, lsl #10
  4014c8:	ldr	w1, [sp, #208]
  4014cc:	ldr	x2, [sp, #120]
  4014d0:	mov	w3, #0x1b6                 	// #438
  4014d4:	ldr	x4, [sp, #112]
  4014d8:	adrp	x5, 403000 <util_path_encode+0xd4>
  4014dc:	add	x5, x5, #0x76d
  4014e0:	bl	401010 <log_internal_realm@plt>
  4014e4:	str	w0, [sp, #104]
  4014e8:	b	401500 <main+0x1c8>
  4014ec:	ldr	w0, [sp, #208]
  4014f0:	bl	401020 <abs@plt>
  4014f4:	mov	w8, wzr
  4014f8:	subs	w8, w8, w0, uxtb
  4014fc:	str	w8, [sp, #104]
  401500:	ldr	w8, [sp, #104]
  401504:	str	w8, [sp, #200]
  401508:	mov	w8, #0x1                   	// #1
  40150c:	ldr	x9, [sp, #136]
  401510:	str	w8, [x9, #12]
  401514:	str	w8, [sp, #216]
  401518:	b	401f44 <main+0xc0c>
  40151c:	ldr	x0, [sp, #240]
  401520:	mov	w1, #0x800                 	// #2048
  401524:	movk	w1, #0x8, lsl #16
  401528:	bl	401030 <open64@plt>
  40152c:	str	w0, [sp, #232]
  401530:	ldr	w8, [sp, #232]
  401534:	cmp	w8, #0x0
  401538:	cset	w8, ge  // ge = tcont
  40153c:	tbnz	w8, #0, 4015d0 <main+0x298>
  401540:	mov	w8, #0x3                   	// #3
  401544:	str	w8, [sp, #196]
  401548:	str	wzr, [sp, #192]
  40154c:	mov	w8, #0x1                   	// #1
  401550:	str	w8, [sp, #188]
  401554:	ldr	w0, [sp, #188]
  401558:	bl	401000 <log_get_max_level_realm@plt>
  40155c:	ldr	w8, [sp, #196]
  401560:	and	w8, w8, #0x7
  401564:	cmp	w0, w8
  401568:	b.lt	4015a0 <main+0x268>  // b.tstop
  40156c:	ldr	w8, [sp, #188]
  401570:	ldr	w9, [sp, #196]
  401574:	orr	w0, w9, w8, lsl #10
  401578:	ldr	w1, [sp, #192]
  40157c:	ldr	x6, [sp, #240]
  401580:	ldr	x2, [sp, #120]
  401584:	mov	w3, #0x1bc                 	// #444
  401588:	ldr	x4, [sp, #112]
  40158c:	adrp	x5, 403000 <util_path_encode+0xd4>
  401590:	add	x5, x5, #0x77f
  401594:	bl	401010 <log_internal_realm@plt>
  401598:	str	w0, [sp, #100]
  40159c:	b	4015b4 <main+0x27c>
  4015a0:	ldr	w0, [sp, #192]
  4015a4:	bl	401020 <abs@plt>
  4015a8:	mov	w8, wzr
  4015ac:	subs	w8, w8, w0, uxtb
  4015b0:	str	w8, [sp, #100]
  4015b4:	ldr	w8, [sp, #100]
  4015b8:	str	w8, [sp, #184]
  4015bc:	mov	w8, #0x1                   	// #1
  4015c0:	ldr	x9, [sp, #136]
  4015c4:	str	w8, [x9, #12]
  4015c8:	str	w8, [sp, #216]
  4015cc:	b	401f44 <main+0xc0c>
  4015d0:	ldr	w0, [sp, #232]
  4015d4:	add	x1, sp, #0x240
  4015d8:	add	x2, sp, #0xe0
  4015dc:	bl	401fc0 <disk_identify>
  4015e0:	cbnz	w0, 401718 <main+0x3e0>
  4015e4:	add	x8, sp, #0x240
  4015e8:	mov	x0, x8
  4015ec:	mov	w1, #0xa                   	// #10
  4015f0:	mov	x2, #0x14                  	// #20
  4015f4:	str	x8, [sp, #88]
  4015f8:	bl	402124 <disk_identify_fixup_string>
  4015fc:	ldr	x0, [sp, #88]
  401600:	mov	w1, #0x17                  	// #23
  401604:	mov	x2, #0x8                   	// #8
  401608:	bl	402124 <disk_identify_fixup_string>
  40160c:	ldr	x0, [sp, #88]
  401610:	mov	w1, #0x1b                  	// #27
  401614:	mov	x2, #0x28                  	// #40
  401618:	bl	402124 <disk_identify_fixup_string>
  40161c:	ldr	x0, [sp, #88]
  401620:	mov	w9, wzr
  401624:	mov	w1, w9
  401628:	bl	402174 <disk_identify_fixup_uint16>
  40162c:	ldr	x0, [sp, #88]
  401630:	mov	w1, #0x4b                  	// #75
  401634:	bl	402174 <disk_identify_fixup_uint16>
  401638:	ldr	x0, [sp, #88]
  40163c:	mov	w1, #0x4c                  	// #76
  401640:	bl	402174 <disk_identify_fixup_uint16>
  401644:	ldr	x0, [sp, #88]
  401648:	mov	w1, #0x52                  	// #82
  40164c:	bl	402174 <disk_identify_fixup_uint16>
  401650:	ldr	x0, [sp, #88]
  401654:	mov	w1, #0x53                  	// #83
  401658:	bl	402174 <disk_identify_fixup_uint16>
  40165c:	ldr	x0, [sp, #88]
  401660:	mov	w1, #0x54                  	// #84
  401664:	bl	402174 <disk_identify_fixup_uint16>
  401668:	ldr	x0, [sp, #88]
  40166c:	mov	w1, #0x55                  	// #85
  401670:	bl	402174 <disk_identify_fixup_uint16>
  401674:	ldr	x0, [sp, #88]
  401678:	mov	w1, #0x56                  	// #86
  40167c:	bl	402174 <disk_identify_fixup_uint16>
  401680:	ldr	x0, [sp, #88]
  401684:	mov	w1, #0x57                  	// #87
  401688:	bl	402174 <disk_identify_fixup_uint16>
  40168c:	ldr	x0, [sp, #88]
  401690:	mov	w1, #0x59                  	// #89
  401694:	bl	402174 <disk_identify_fixup_uint16>
  401698:	ldr	x0, [sp, #88]
  40169c:	mov	w1, #0x5a                  	// #90
  4016a0:	bl	402174 <disk_identify_fixup_uint16>
  4016a4:	ldr	x0, [sp, #88]
  4016a8:	mov	w1, #0x5b                  	// #91
  4016ac:	bl	402174 <disk_identify_fixup_uint16>
  4016b0:	ldr	x0, [sp, #88]
  4016b4:	mov	w1, #0x5e                  	// #94
  4016b8:	bl	402174 <disk_identify_fixup_uint16>
  4016bc:	ldr	x0, [sp, #88]
  4016c0:	mov	w1, #0x6c                  	// #108
  4016c4:	bl	402174 <disk_identify_fixup_uint16>
  4016c8:	ldr	x0, [sp, #88]
  4016cc:	mov	w1, #0x6d                  	// #109
  4016d0:	bl	402174 <disk_identify_fixup_uint16>
  4016d4:	ldr	x0, [sp, #88]
  4016d8:	mov	w1, #0x6e                  	// #110
  4016dc:	bl	402174 <disk_identify_fixup_uint16>
  4016e0:	ldr	x0, [sp, #88]
  4016e4:	mov	w1, #0x6f                  	// #111
  4016e8:	bl	402174 <disk_identify_fixup_uint16>
  4016ec:	ldr	x0, [sp, #88]
  4016f0:	mov	w1, #0x80                  	// #128
  4016f4:	bl	402174 <disk_identify_fixup_uint16>
  4016f8:	ldr	x0, [sp, #88]
  4016fc:	mov	w1, #0xd9                  	// #217
  401700:	bl	402174 <disk_identify_fixup_uint16>
  401704:	add	x0, sp, #0x440
  401708:	ldr	x1, [sp, #88]
  40170c:	mov	x2, #0x200                 	// #512
  401710:	bl	401040 <memcpy@plt>
  401714:	b	4017c8 <main+0x490>
  401718:	ldr	w0, [sp, #232]
  40171c:	mov	x1, #0x30d                 	// #781
  401720:	add	x2, sp, #0x440
  401724:	bl	401050 <ioctl@plt>
  401728:	cbz	w0, 4017c8 <main+0x490>
  40172c:	mov	w8, #0x7                   	// #7
  401730:	str	w8, [sp, #180]
  401734:	bl	401060 <__errno_location@plt>
  401738:	ldr	w8, [x0]
  40173c:	str	w8, [sp, #176]
  401740:	mov	w8, #0x1                   	// #1
  401744:	str	w8, [sp, #172]
  401748:	ldr	w0, [sp, #172]
  40174c:	bl	401000 <log_get_max_level_realm@plt>
  401750:	ldr	w8, [sp, #180]
  401754:	and	w8, w8, #0x7
  401758:	cmp	w0, w8
  40175c:	b.lt	401794 <main+0x45c>  // b.tstop
  401760:	ldr	w8, [sp, #172]
  401764:	ldr	w9, [sp, #180]
  401768:	orr	w0, w9, w8, lsl #10
  40176c:	ldr	w1, [sp, #176]
  401770:	ldr	x6, [sp, #240]
  401774:	ldr	x2, [sp, #120]
  401778:	mov	w3, #0x1df                 	// #479
  40177c:	ldr	x4, [sp, #112]
  401780:	adrp	x5, 403000 <util_path_encode+0xd4>
  401784:	add	x5, x5, #0x793
  401788:	bl	401010 <log_internal_realm@plt>
  40178c:	str	w0, [sp, #84]
  401790:	b	4017a8 <main+0x470>
  401794:	ldr	w0, [sp, #176]
  401798:	bl	401020 <abs@plt>
  40179c:	mov	w8, wzr
  4017a0:	subs	w8, w8, w0, uxtb
  4017a4:	str	w8, [sp, #84]
  4017a8:	ldr	w8, [sp, #84]
  4017ac:	str	w8, [sp, #168]
  4017b0:	mov	w8, #0x2                   	// #2
  4017b4:	ldr	x9, [sp, #136]
  4017b8:	str	w8, [x9, #12]
  4017bc:	mov	w8, #0x1                   	// #1
  4017c0:	str	w8, [sp, #216]
  4017c4:	b	401f44 <main+0xc0c>
  4017c8:	add	x8, sp, #0x440
  4017cc:	add	x1, x8, #0x36
  4017d0:	add	x9, sp, #0x217
  4017d4:	mov	x0, x9
  4017d8:	mov	x10, #0x28                  	// #40
  4017dc:	mov	x2, x10
  4017e0:	str	x8, [sp, #72]
  4017e4:	str	x9, [sp, #64]
  4017e8:	str	x10, [sp, #56]
  4017ec:	bl	401040 <memcpy@plt>
  4017f0:	mov	w11, #0x0                   	// #0
  4017f4:	ldr	x8, [sp, #64]
  4017f8:	strb	w11, [x8, #40]
  4017fc:	mov	x0, x8
  401800:	add	x1, sp, #0x117
  401804:	mov	x2, #0x100                 	// #256
  401808:	bl	403514 <udev_util_encode_string>
  40180c:	ldr	x8, [sp, #72]
  401810:	add	x9, x8, #0x36
  401814:	mov	x0, x9
  401818:	ldr	x1, [sp, #64]
  40181c:	ldr	x2, [sp, #56]
  401820:	bl	403138 <util_replace_whitespace>
  401824:	ldr	x8, [sp, #64]
  401828:	mov	x0, x8
  40182c:	mov	x9, xzr
  401830:	mov	x1, x9
  401834:	str	x9, [sp, #48]
  401838:	bl	403344 <util_replace_chars>
  40183c:	ldr	x8, [sp, #72]
  401840:	add	x9, x8, #0x14
  401844:	mov	x0, x9
  401848:	add	x9, sp, #0x102
  40184c:	mov	x1, x9
  401850:	mov	x2, #0x14                  	// #20
  401854:	str	x9, [sp, #40]
  401858:	bl	403138 <util_replace_whitespace>
  40185c:	ldr	x8, [sp, #40]
  401860:	mov	x0, x8
  401864:	ldr	x1, [sp, #48]
  401868:	bl	403344 <util_replace_chars>
  40186c:	ldr	x8, [sp, #72]
  401870:	add	x9, x8, #0x2e
  401874:	mov	x0, x9
  401878:	add	x9, sp, #0xf9
  40187c:	mov	x1, x9
  401880:	mov	x2, #0x8                   	// #8
  401884:	str	x9, [sp, #32]
  401888:	bl	403138 <util_replace_whitespace>
  40188c:	ldr	x8, [sp, #32]
  401890:	mov	x0, x8
  401894:	ldr	x1, [sp, #48]
  401898:	bl	403344 <util_replace_chars>
  40189c:	ldr	w11, [sp, #236]
  4018a0:	cbz	w11, 401f04 <main+0xbcc>
  4018a4:	adrp	x0, 403000 <util_path_encode+0xd4>
  4018a8:	add	x0, x0, #0x7b9
  4018ac:	bl	400ff0 <printf@plt>
  4018b0:	ldrh	w8, [sp, #1088]
  4018b4:	asr	w8, w8, #8
  4018b8:	and	w8, w8, #0x80
  4018bc:	cbz	w8, 40194c <main+0x614>
  4018c0:	ldrh	w8, [sp, #1088]
  4018c4:	asr	w8, w8, #8
  4018c8:	and	w8, w8, #0x1f
  4018cc:	subs	w8, w8, #0x0
  4018d0:	mov	w9, w8
  4018d4:	ubfx	x9, x9, #0, #32
  4018d8:	cmp	x9, #0x7
  4018dc:	str	x9, [sp, #24]
  4018e0:	b.hi	40193c <main+0x604>  // b.pmore
  4018e4:	adrp	x8, 403000 <util_path_encode+0xd4>
  4018e8:	add	x8, x8, #0x5f0
  4018ec:	ldr	x11, [sp, #24]
  4018f0:	ldrsw	x10, [x8, x11, lsl #2]
  4018f4:	add	x9, x8, x10
  4018f8:	br	x9
  4018fc:	adrp	x0, 403000 <util_path_encode+0xd4>
  401900:	add	x0, x0, #0x7c3
  401904:	bl	400ff0 <printf@plt>
  401908:	b	401948 <main+0x610>
  40190c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401910:	add	x0, x0, #0x7cf
  401914:	bl	400ff0 <printf@plt>
  401918:	b	401948 <main+0x610>
  40191c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401920:	add	x0, x0, #0x7c3
  401924:	bl	400ff0 <printf@plt>
  401928:	b	401948 <main+0x610>
  40192c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401930:	add	x0, x0, #0x7dd
  401934:	bl	400ff0 <printf@plt>
  401938:	b	401948 <main+0x610>
  40193c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401940:	add	x0, x0, #0x7ee
  401944:	bl	400ff0 <printf@plt>
  401948:	b	401958 <main+0x620>
  40194c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401950:	add	x0, x0, #0x7ff
  401954:	bl	400ff0 <printf@plt>
  401958:	adrp	x0, 403000 <util_path_encode+0xd4>
  40195c:	add	x0, x0, #0x80d
  401960:	bl	400ff0 <printf@plt>
  401964:	adrp	x8, 403000 <util_path_encode+0xd4>
  401968:	add	x8, x8, #0x819
  40196c:	mov	x0, x8
  401970:	add	x1, sp, #0x217
  401974:	bl	400ff0 <printf@plt>
  401978:	adrp	x8, 403000 <util_path_encode+0xd4>
  40197c:	add	x8, x8, #0x826
  401980:	mov	x0, x8
  401984:	add	x1, sp, #0x117
  401988:	bl	400ff0 <printf@plt>
  40198c:	adrp	x8, 403000 <util_path_encode+0xd4>
  401990:	add	x8, x8, #0x837
  401994:	mov	x0, x8
  401998:	add	x1, sp, #0xf9
  40199c:	bl	400ff0 <printf@plt>
  4019a0:	ldrb	w9, [sp, #258]
  4019a4:	cbz	w9, 4019dc <main+0x6a4>
  4019a8:	adrp	x0, 403000 <util_path_encode+0xd4>
  4019ac:	add	x0, x0, #0x847
  4019b0:	add	x1, sp, #0x217
  4019b4:	add	x8, sp, #0x102
  4019b8:	mov	x2, x8
  4019bc:	str	x8, [sp, #16]
  4019c0:	bl	400ff0 <printf@plt>
  4019c4:	adrp	x8, 403000 <util_path_encode+0xd4>
  4019c8:	add	x8, x8, #0x858
  4019cc:	mov	x0, x8
  4019d0:	ldr	x1, [sp, #16]
  4019d4:	bl	400ff0 <printf@plt>
  4019d8:	b	4019ec <main+0x6b4>
  4019dc:	adrp	x0, 403000 <util_path_encode+0xd4>
  4019e0:	add	x0, x0, #0x86c
  4019e4:	add	x1, sp, #0x217
  4019e8:	bl	400ff0 <printf@plt>
  4019ec:	ldrh	w8, [sp, #1252]
  4019f0:	and	w8, w8, #0x20
  4019f4:	cbz	w8, 401a28 <main+0x6f0>
  4019f8:	adrp	x0, 403000 <util_path_encode+0xd4>
  4019fc:	add	x0, x0, #0x87a
  401a00:	bl	400ff0 <printf@plt>
  401a04:	ldrh	w8, [sp, #1258]
  401a08:	mov	w9, wzr
  401a0c:	mov	w10, #0x1                   	// #1
  401a10:	tst	w8, #0x20
  401a14:	csel	w1, w10, w9, ne  // ne = any
  401a18:	adrp	x11, 403000 <util_path_encode+0xd4>
  401a1c:	add	x11, x11, #0x890
  401a20:	mov	x0, x11
  401a24:	bl	400ff0 <printf@plt>
  401a28:	ldrh	w8, [sp, #1252]
  401a2c:	and	w8, w8, #0x400
  401a30:	cbz	w8, 401a64 <main+0x72c>
  401a34:	adrp	x0, 403000 <util_path_encode+0xd4>
  401a38:	add	x0, x0, #0x8af
  401a3c:	bl	400ff0 <printf@plt>
  401a40:	ldrh	w8, [sp, #1258]
  401a44:	mov	w9, wzr
  401a48:	mov	w10, #0x1                   	// #1
  401a4c:	tst	w8, #0x400
  401a50:	csel	w1, w10, w9, ne  // ne = any
  401a54:	adrp	x11, 403000 <util_path_encode+0xd4>
  401a58:	add	x11, x11, #0x8c9
  401a5c:	mov	x0, x11
  401a60:	bl	400ff0 <printf@plt>
  401a64:	ldrh	w8, [sp, #1252]
  401a68:	and	w8, w8, #0x8
  401a6c:	cbz	w8, 401aa0 <main+0x768>
  401a70:	adrp	x0, 403000 <util_path_encode+0xd4>
  401a74:	add	x0, x0, #0x8ec
  401a78:	bl	400ff0 <printf@plt>
  401a7c:	ldrh	w8, [sp, #1258]
  401a80:	mov	w9, wzr
  401a84:	mov	w10, #0x1                   	// #1
  401a88:	tst	w8, #0x8
  401a8c:	csel	w1, w10, w9, ne  // ne = any
  401a90:	adrp	x11, 403000 <util_path_encode+0xd4>
  401a94:	add	x11, x11, #0x905
  401a98:	mov	x0, x11
  401a9c:	bl	400ff0 <printf@plt>
  401aa0:	ldrh	w8, [sp, #1252]
  401aa4:	and	w8, w8, #0x2
  401aa8:	cbz	w8, 401ba0 <main+0x868>
  401aac:	adrp	x0, 403000 <util_path_encode+0xd4>
  401ab0:	add	x0, x0, #0x927
  401ab4:	bl	400ff0 <printf@plt>
  401ab8:	ldrh	w8, [sp, #1258]
  401abc:	mov	w9, #0x2                   	// #2
  401ac0:	mov	w10, wzr
  401ac4:	mov	w11, #0x1                   	// #1
  401ac8:	tst	w8, #0x2
  401acc:	csel	w1, w11, w10, ne  // ne = any
  401ad0:	adrp	x12, 403000 <util_path_encode+0xd4>
  401ad4:	add	x12, x12, #0x946
  401ad8:	mov	x0, x12
  401adc:	str	w9, [sp, #12]
  401ae0:	bl	400ff0 <printf@plt>
  401ae4:	ldrh	w8, [sp, #1266]
  401ae8:	ldr	w9, [sp, #12]
  401aec:	mul	w1, w8, w9
  401af0:	adrp	x12, 403000 <util_path_encode+0xd4>
  401af4:	add	x12, x12, #0x96e
  401af8:	mov	x0, x12
  401afc:	bl	400ff0 <printf@plt>
  401b00:	ldrh	w8, [sp, #1258]
  401b04:	and	w8, w8, #0x2
  401b08:	cbz	w8, 401b34 <main+0x7fc>
  401b0c:	ldrh	w8, [sp, #1344]
  401b10:	and	w8, w8, #0x100
  401b14:	cbz	w8, 401b28 <main+0x7f0>
  401b18:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b1c:	add	x0, x0, #0x99d
  401b20:	bl	400ff0 <printf@plt>
  401b24:	b	401b34 <main+0x7fc>
  401b28:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b2c:	add	x0, x0, #0x9c8
  401b30:	bl	400ff0 <printf@plt>
  401b34:	ldrh	w8, [sp, #1344]
  401b38:	and	w8, w8, #0x20
  401b3c:	cbz	w8, 401b58 <main+0x820>
  401b40:	ldrh	w8, [sp, #1268]
  401b44:	mov	w9, #0x2                   	// #2
  401b48:	mul	w1, w8, w9
  401b4c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b50:	add	x0, x0, #0x9f0
  401b54:	bl	400ff0 <printf@plt>
  401b58:	ldrh	w8, [sp, #1344]
  401b5c:	and	w8, w8, #0x10
  401b60:	cbz	w8, 401b70 <main+0x838>
  401b64:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b68:	add	x0, x0, #0xa28
  401b6c:	bl	400ff0 <printf@plt>
  401b70:	ldrh	w8, [sp, #1344]
  401b74:	and	w8, w8, #0x8
  401b78:	cbz	w8, 401b88 <main+0x850>
  401b7c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b80:	add	x0, x0, #0xa4e
  401b84:	bl	400ff0 <printf@plt>
  401b88:	ldrh	w8, [sp, #1344]
  401b8c:	and	w8, w8, #0x4
  401b90:	cbz	w8, 401ba0 <main+0x868>
  401b94:	adrp	x0, 403000 <util_path_encode+0xd4>
  401b98:	add	x0, x0, #0xa74
  401b9c:	bl	400ff0 <printf@plt>
  401ba0:	ldrh	w8, [sp, #1252]
  401ba4:	and	w8, w8, #0x1
  401ba8:	cbz	w8, 401bdc <main+0x8a4>
  401bac:	adrp	x0, 403000 <util_path_encode+0xd4>
  401bb0:	add	x0, x0, #0xa9a
  401bb4:	bl	400ff0 <printf@plt>
  401bb8:	ldrh	w8, [sp, #1258]
  401bbc:	mov	w9, #0x1                   	// #1
  401bc0:	mov	w10, wzr
  401bc4:	tst	w8, #0x1
  401bc8:	csel	w1, w9, w10, ne  // ne = any
  401bcc:	adrp	x11, 403000 <util_path_encode+0xd4>
  401bd0:	add	x11, x11, #0xab6
  401bd4:	mov	x0, x11
  401bd8:	bl	400ff0 <printf@plt>
  401bdc:	ldrh	w8, [sp, #1254]
  401be0:	and	w8, w8, #0x200
  401be4:	cbz	w8, 401c48 <main+0x910>
  401be8:	adrp	x0, 403000 <util_path_encode+0xd4>
  401bec:	add	x0, x0, #0xadb
  401bf0:	bl	400ff0 <printf@plt>
  401bf4:	ldrh	w8, [sp, #1260]
  401bf8:	mov	w9, wzr
  401bfc:	mov	w10, #0x1                   	// #1
  401c00:	tst	w8, #0x200
  401c04:	csel	w1, w10, w9, ne  // ne = any
  401c08:	adrp	x11, 403000 <util_path_encode+0xd4>
  401c0c:	add	x11, x11, #0xaf5
  401c10:	mov	x0, x11
  401c14:	bl	400ff0 <printf@plt>
  401c18:	ldrh	w8, [sp, #1276]
  401c1c:	asr	w1, w8, #8
  401c20:	adrp	x11, 403000 <util_path_encode+0xd4>
  401c24:	add	x11, x11, #0xb18
  401c28:	mov	x0, x11
  401c2c:	bl	400ff0 <printf@plt>
  401c30:	ldrh	w8, [sp, #1276]
  401c34:	and	w1, w8, #0xff
  401c38:	adrp	x11, 403000 <util_path_encode+0xd4>
  401c3c:	add	x11, x11, #0xb4c
  401c40:	mov	x0, x11
  401c44:	bl	400ff0 <printf@plt>
  401c48:	ldrh	w8, [sp, #1254]
  401c4c:	and	w8, w8, #0x20
  401c50:	cbz	w8, 401c84 <main+0x94c>
  401c54:	adrp	x0, 403000 <util_path_encode+0xd4>
  401c58:	add	x0, x0, #0xb75
  401c5c:	bl	400ff0 <printf@plt>
  401c60:	ldrh	w8, [sp, #1260]
  401c64:	mov	w9, wzr
  401c68:	mov	w10, #0x1                   	// #1
  401c6c:	tst	w8, #0x20
  401c70:	csel	w1, w10, w9, ne  // ne = any
  401c74:	adrp	x11, 403000 <util_path_encode+0xd4>
  401c78:	add	x11, x11, #0xb90
  401c7c:	mov	x0, x11
  401c80:	bl	400ff0 <printf@plt>
  401c84:	ldrh	w8, [sp, #1254]
  401c88:	and	w8, w8, #0x8
  401c8c:	cbz	w8, 401ce0 <main+0x9a8>
  401c90:	adrp	x0, 403000 <util_path_encode+0xd4>
  401c94:	add	x0, x0, #0xbb4
  401c98:	bl	400ff0 <printf@plt>
  401c9c:	ldrh	w8, [sp, #1260]
  401ca0:	mov	w9, wzr
  401ca4:	mov	w10, #0x1                   	// #1
  401ca8:	tst	w8, #0x8
  401cac:	csel	w1, w10, w9, ne  // ne = any
  401cb0:	adrp	x11, 403000 <util_path_encode+0xd4>
  401cb4:	add	x11, x11, #0xbce
  401cb8:	mov	x0, x11
  401cbc:	bl	400ff0 <printf@plt>
  401cc0:	ldrh	w8, [sp, #1260]
  401cc4:	and	w8, w8, #0x8
  401cc8:	cbz	w8, 401ce0 <main+0x9a8>
  401ccc:	ldrh	w8, [sp, #1270]
  401cd0:	and	w1, w8, #0xff
  401cd4:	adrp	x0, 403000 <util_path_encode+0xd4>
  401cd8:	add	x0, x0, #0xbf1
  401cdc:	bl	400ff0 <printf@plt>
  401ce0:	ldrh	w8, [sp, #1254]
  401ce4:	and	w8, w8, #0x1
  401ce8:	cbz	w8, 401cf8 <main+0x9c0>
  401cec:	adrp	x0, 403000 <util_path_encode+0xd4>
  401cf0:	add	x0, x0, #0xc1a
  401cf4:	bl	400ff0 <printf@plt>
  401cf8:	add	x8, sp, #0x240
  401cfc:	ldrh	w9, [x8, #152]
  401d00:	strh	w9, [sp, #230]
  401d04:	mov	w9, #0x0                   	// #0
  401d08:	strb	w9, [sp, #167]
  401d0c:	ldrh	w9, [sp, #230]
  401d10:	str	w9, [sp, #8]
  401d14:	cbz	w9, 401d38 <main+0xa00>
  401d18:	b	401d1c <main+0x9e4>
  401d1c:	mov	w8, #0xffff                	// #65535
  401d20:	ldr	w9, [sp, #8]
  401d24:	cmp	w9, w8
  401d28:	cset	w8, eq  // eq = none
  401d2c:	eor	w8, w8, #0x1
  401d30:	tbnz	w8, #0, 401d44 <main+0xa0c>
  401d34:	b	401d38 <main+0xa00>
  401d38:	mov	w8, #0x1                   	// #1
  401d3c:	strb	w8, [sp, #167]
  401d40:	b	401d44 <main+0xa0c>
  401d44:	ldrb	w8, [sp, #167]
  401d48:	and	w8, w8, #0x1
  401d4c:	strb	w8, [sp, #166]
  401d50:	ldrb	w8, [sp, #166]
  401d54:	tbnz	w8, #0, 401d94 <main+0xa5c>
  401d58:	adrp	x0, 403000 <util_path_encode+0xd4>
  401d5c:	add	x0, x0, #0xc37
  401d60:	bl	400ff0 <printf@plt>
  401d64:	ldrh	w8, [sp, #230]
  401d68:	and	w8, w8, #0x4
  401d6c:	cbz	w8, 401d7c <main+0xa44>
  401d70:	adrp	x0, 403000 <util_path_encode+0xd4>
  401d74:	add	x0, x0, #0xc46
  401d78:	bl	400ff0 <printf@plt>
  401d7c:	ldrh	w8, [sp, #230]
  401d80:	and	w8, w8, #0x2
  401d84:	cbz	w8, 401d94 <main+0xa5c>
  401d88:	adrp	x0, 403000 <util_path_encode+0xd4>
  401d8c:	add	x0, x0, #0xc66
  401d90:	bl	400ff0 <printf@plt>
  401d94:	add	x8, sp, #0x240
  401d98:	ldrh	w9, [x8, #434]
  401d9c:	strh	w9, [sp, #230]
  401da0:	ldrh	w9, [sp, #230]
  401da4:	cmp	w9, #0x1
  401da8:	b.ne	401dbc <main+0xa84>  // b.any
  401dac:	adrp	x0, 403000 <util_path_encode+0xd4>
  401db0:	add	x0, x0, #0xc86
  401db4:	bl	400ff0 <printf@plt>
  401db8:	b	401de8 <main+0xab0>
  401dbc:	ldrh	w8, [sp, #230]
  401dc0:	cmp	w8, #0x401
  401dc4:	b.lt	401de8 <main+0xab0>  // b.tstop
  401dc8:	ldrh	w8, [sp, #230]
  401dcc:	mov	w9, #0xfffe                	// #65534
  401dd0:	cmp	w8, w9
  401dd4:	b.gt	401de8 <main+0xab0>
  401dd8:	ldrh	w1, [sp, #230]
  401ddc:	adrp	x0, 403000 <util_path_encode+0xd4>
  401de0:	add	x0, x0, #0xca2
  401de4:	bl	400ff0 <printf@plt>
  401de8:	add	x8, sp, #0x240
  401dec:	ldrh	w9, [x8, #216]
  401df0:	strh	w9, [sp, #230]
  401df4:	ldrh	w9, [sp, #230]
  401df8:	and	w9, w9, #0xf000
  401dfc:	cmp	w9, #0x5, lsl #12
  401e00:	b.ne	401e80 <main+0xb48>  // b.any
  401e04:	ldrh	w8, [sp, #792]
  401e08:	mov	w9, w8
  401e0c:	str	x9, [sp, #152]
  401e10:	ldr	x9, [sp, #152]
  401e14:	lsl	x9, x9, #16
  401e18:	str	x9, [sp, #152]
  401e1c:	ldrh	w8, [sp, #794]
  401e20:	mov	w9, w8
  401e24:	ldr	x10, [sp, #152]
  401e28:	orr	x9, x10, x9
  401e2c:	str	x9, [sp, #152]
  401e30:	ldr	x9, [sp, #152]
  401e34:	lsl	x9, x9, #16
  401e38:	str	x9, [sp, #152]
  401e3c:	ldrh	w8, [sp, #796]
  401e40:	mov	w9, w8
  401e44:	ldr	x10, [sp, #152]
  401e48:	orr	x9, x10, x9
  401e4c:	str	x9, [sp, #152]
  401e50:	ldr	x9, [sp, #152]
  401e54:	lsl	x9, x9, #16
  401e58:	str	x9, [sp, #152]
  401e5c:	ldrh	w8, [sp, #798]
  401e60:	mov	w9, w8
  401e64:	ldr	x10, [sp, #152]
  401e68:	orr	x9, x10, x9
  401e6c:	str	x9, [sp, #152]
  401e70:	ldr	x1, [sp, #152]
  401e74:	adrp	x0, 403000 <util_path_encode+0xd4>
  401e78:	add	x0, x0, #0xcbf
  401e7c:	bl	400ff0 <printf@plt>
  401e80:	mov	w8, #0x0                   	// #0
  401e84:	strb	w8, [sp, #151]
  401e88:	ldrh	w8, [sp, #576]
  401e8c:	mov	w9, #0x844a                	// #33866
  401e90:	cmp	w8, w9
  401e94:	str	w8, [sp, #4]
  401e98:	b.eq	401ebc <main+0xb84>  // b.none
  401e9c:	b	401ea0 <main+0xb68>
  401ea0:	mov	w8, #0x848a                	// #33930
  401ea4:	ldr	w9, [sp, #4]
  401ea8:	cmp	w9, w8
  401eac:	cset	w8, eq  // eq = none
  401eb0:	eor	w8, w8, #0x1
  401eb4:	tbnz	w8, #0, 401ec8 <main+0xb90>
  401eb8:	b	401ebc <main+0xb84>
  401ebc:	mov	w8, #0x1                   	// #1
  401ec0:	strb	w8, [sp, #151]
  401ec4:	b	401ec8 <main+0xb90>
  401ec8:	ldrb	w8, [sp, #151]
  401ecc:	and	w8, w8, #0x1
  401ed0:	strb	w8, [sp, #150]
  401ed4:	ldrb	w8, [sp, #150]
  401ed8:	tbnz	w8, #0, 401ef4 <main+0xbbc>
  401edc:	ldrh	w8, [sp, #742]
  401ee0:	mov	w9, #0xc004                	// #49156
  401ee4:	and	w8, w8, w9
  401ee8:	mov	w9, #0x4004                	// #16388
  401eec:	cmp	w8, w9
  401ef0:	b.ne	401f00 <main+0xbc8>  // b.any
  401ef4:	adrp	x0, 403000 <util_path_encode+0xd4>
  401ef8:	add	x0, x0, #0xced
  401efc:	bl	400ff0 <printf@plt>
  401f00:	b	401f34 <main+0xbfc>
  401f04:	ldrb	w8, [sp, #258]
  401f08:	cbz	w8, 401f24 <main+0xbec>
  401f0c:	adrp	x0, 403000 <util_path_encode+0xd4>
  401f10:	add	x0, x0, #0xcfb
  401f14:	add	x1, sp, #0x217
  401f18:	add	x2, sp, #0x102
  401f1c:	bl	400ff0 <printf@plt>
  401f20:	b	401f34 <main+0xbfc>
  401f24:	adrp	x0, 403000 <util_path_encode+0xd4>
  401f28:	add	x0, x0, #0xd02
  401f2c:	add	x1, sp, #0x217
  401f30:	bl	400ff0 <printf@plt>
  401f34:	ldr	x8, [sp, #136]
  401f38:	str	wzr, [x8, #12]
  401f3c:	mov	w9, #0x1                   	// #1
  401f40:	str	w9, [sp, #216]
  401f44:	add	x0, sp, #0xe8
  401f48:	bl	401f64 <closep>
  401f4c:	ldr	x8, [sp, #136]
  401f50:	ldr	w0, [x8, #12]
  401f54:	add	sp, sp, #0x650
  401f58:	ldr	x28, [sp, #16]
  401f5c:	ldp	x29, x30, [sp], #32
  401f60:	ret

0000000000401f64 <closep>:
  401f64:	sub	sp, sp, #0x20
  401f68:	stp	x29, x30, [sp, #16]
  401f6c:	add	x29, sp, #0x10
  401f70:	str	x0, [sp, #8]
  401f74:	ldr	x8, [sp, #8]
  401f78:	ldr	w0, [x8]
  401f7c:	bl	401070 <safe_close@plt>
  401f80:	ldp	x29, x30, [sp, #16]
  401f84:	add	sp, sp, #0x20
  401f88:	ret

0000000000401f8c <udev_parse_config>:
  401f8c:	sub	sp, sp, #0x20
  401f90:	stp	x29, x30, [sp, #16]
  401f94:	add	x29, sp, #0x10
  401f98:	mov	x8, xzr
  401f9c:	mov	x0, x8
  401fa0:	str	x0, [sp, #8]
  401fa4:	mov	x1, x8
  401fa8:	mov	x2, x8
  401fac:	ldr	x3, [sp, #8]
  401fb0:	bl	401080 <udev_parse_config_full@plt>
  401fb4:	ldp	x29, x30, [sp, #16]
  401fb8:	add	sp, sp, #0x20
  401fbc:	ret

0000000000401fc0 <disk_identify>:
  401fc0:	sub	sp, sp, #0x70
  401fc4:	stp	x29, x30, [sp, #96]
  401fc8:	add	x29, sp, #0x60
  401fcc:	mov	x8, #0x200                 	// #512
  401fd0:	stur	w0, [x29, #-4]
  401fd4:	stur	x1, [x29, #-16]
  401fd8:	stur	x2, [x29, #-24]
  401fdc:	str	wzr, [sp, #16]
  401fe0:	str	x8, [sp, #8]
  401fe4:	ldr	x8, [sp, #8]
  401fe8:	cmp	x8, #0x0
  401fec:	cset	w9, ls  // ls = plast
  401ff0:	tbnz	w9, #0, 402008 <disk_identify+0x48>
  401ff4:	ldur	x0, [x29, #-16]
  401ff8:	ldr	x2, [sp, #8]
  401ffc:	mov	w8, wzr
  402000:	mov	w1, w8
  402004:	bl	401090 <memset@plt>
  402008:	ldur	w0, [x29, #-4]
  40200c:	add	x1, sp, #0x20
  402010:	mov	x2, #0x24                  	// #36
  402014:	bl	4021d4 <disk_scsi_inquiry_command>
  402018:	stur	w0, [x29, #-28]
  40201c:	ldur	w8, [x29, #-28]
  402020:	cbz	w8, 402028 <disk_identify+0x68>
  402024:	b	402100 <disk_identify+0x140>
  402028:	ldrb	w8, [sp, #32]
  40202c:	and	w8, w8, #0x1f
  402030:	str	w8, [sp, #28]
  402034:	ldr	w8, [sp, #28]
  402038:	cmp	w8, #0x5
  40203c:	b.ne	402060 <disk_identify+0xa0>  // b.any
  402040:	mov	w8, #0x1                   	// #1
  402044:	str	w8, [sp, #16]
  402048:	ldur	w0, [x29, #-4]
  40204c:	ldur	x1, [x29, #-16]
  402050:	mov	x2, #0x200                 	// #512
  402054:	bl	402478 <disk_identify_packet_device_command>
  402058:	stur	w0, [x29, #-28]
  40205c:	b	4020a0 <disk_identify+0xe0>
  402060:	ldr	w8, [sp, #28]
  402064:	cbz	w8, 402080 <disk_identify+0xc0>
  402068:	mov	w8, #0xffffffff            	// #-1
  40206c:	stur	w8, [x29, #-28]
  402070:	bl	401060 <__errno_location@plt>
  402074:	mov	w8, #0x5                   	// #5
  402078:	str	w8, [x0]
  40207c:	b	402100 <disk_identify+0x140>
  402080:	ldur	w0, [x29, #-4]
  402084:	ldur	x1, [x29, #-16]
  402088:	mov	x2, #0x200                 	// #512
  40208c:	bl	4026f4 <disk_identify_command>
  402090:	stur	w0, [x29, #-28]
  402094:	ldur	w8, [x29, #-28]
  402098:	cbz	w8, 4020a0 <disk_identify+0xe0>
  40209c:	b	402100 <disk_identify+0x140>
  4020a0:	mov	w8, #0x1                   	// #1
  4020a4:	str	w8, [sp, #24]
  4020a8:	str	wzr, [sp, #20]
  4020ac:	ldr	w8, [sp, #20]
  4020b0:	cmp	w8, #0x200
  4020b4:	b.ge	4020e0 <disk_identify+0x120>  // b.tcont
  4020b8:	ldur	x8, [x29, #-16]
  4020bc:	ldrsw	x9, [sp, #20]
  4020c0:	ldrb	w10, [x8, x9]
  4020c4:	cbz	w10, 4020d0 <disk_identify+0x110>
  4020c8:	str	wzr, [sp, #24]
  4020cc:	b	4020e0 <disk_identify+0x120>
  4020d0:	ldr	w8, [sp, #20]
  4020d4:	add	w8, w8, #0x1
  4020d8:	str	w8, [sp, #20]
  4020dc:	b	4020ac <disk_identify+0xec>
  4020e0:	ldr	w8, [sp, #24]
  4020e4:	cbz	w8, 402100 <disk_identify+0x140>
  4020e8:	mov	w8, #0xffffffff            	// #-1
  4020ec:	stur	w8, [x29, #-28]
  4020f0:	bl	401060 <__errno_location@plt>
  4020f4:	mov	w8, #0x5                   	// #5
  4020f8:	str	w8, [x0]
  4020fc:	b	402100 <disk_identify+0x140>
  402100:	ldur	x8, [x29, #-24]
  402104:	cbz	x8, 402114 <disk_identify+0x154>
  402108:	ldr	w8, [sp, #16]
  40210c:	ldur	x9, [x29, #-24]
  402110:	str	w8, [x9]
  402114:	ldur	w0, [x29, #-28]
  402118:	ldp	x29, x30, [sp, #96]
  40211c:	add	sp, sp, #0x70
  402120:	ret

0000000000402124 <disk_identify_fixup_string>:
  402124:	sub	sp, sp, #0x30
  402128:	stp	x29, x30, [sp, #32]
  40212c:	add	x29, sp, #0x20
  402130:	mov	w8, #0x2                   	// #2
  402134:	stur	x0, [x29, #-8]
  402138:	stur	w1, [x29, #-12]
  40213c:	str	x2, [sp, #8]
  402140:	ldur	x0, [x29, #-8]
  402144:	ldur	w1, [x29, #-12]
  402148:	ldur	x9, [x29, #-8]
  40214c:	ldur	w10, [x29, #-12]
  402150:	mul	w8, w10, w8
  402154:	mov	w11, w8
  402158:	ubfx	x11, x11, #0, #32
  40215c:	add	x2, x9, x11
  402160:	ldr	x3, [sp, #8]
  402164:	bl	402998 <disk_identify_get_string>
  402168:	ldp	x29, x30, [sp, #32]
  40216c:	add	sp, sp, #0x30
  402170:	ret

0000000000402174 <disk_identify_fixup_uint16>:
  402174:	sub	sp, sp, #0x30
  402178:	stp	x29, x30, [sp, #32]
  40217c:	add	x29, sp, #0x20
  402180:	stur	x0, [x29, #-8]
  402184:	stur	w1, [x29, #-12]
  402188:	ldur	x8, [x29, #-8]
  40218c:	str	x8, [sp, #8]
  402190:	ldr	x8, [sp, #8]
  402194:	ldur	w9, [x29, #-12]
  402198:	mov	w10, w9
  40219c:	mov	x11, #0x2                   	// #2
  4021a0:	ldrh	w0, [x8, x10, lsl #1]
  4021a4:	str	x11, [sp]
  4021a8:	bl	402a40 <__uint16_identity>
  4021ac:	ldr	x8, [sp, #8]
  4021b0:	ldur	w9, [x29, #-12]
  4021b4:	mov	w10, w9
  4021b8:	ldr	x11, [sp]
  4021bc:	mul	x10, x11, x10
  4021c0:	add	x8, x8, x10
  4021c4:	strh	w0, [x8]
  4021c8:	ldp	x29, x30, [sp, #32]
  4021cc:	add	sp, sp, #0x30
  4021d0:	ret

00000000004021d4 <disk_scsi_inquiry_command>:
  4021d4:	sub	sp, sp, #0x180
  4021d8:	stp	x29, x30, [sp, #352]
  4021dc:	str	x28, [sp, #368]
  4021e0:	add	x29, sp, #0x160
  4021e4:	mov	w8, #0x12                  	// #18
  4021e8:	mov	w9, #0x0                   	// #0
  4021ec:	sub	x10, x29, #0x1e
  4021f0:	stur	w0, [x29, #-8]
  4021f4:	stur	x1, [x29, #-16]
  4021f8:	stur	x2, [x29, #-24]
  4021fc:	sturb	w8, [x29, #-30]
  402200:	strb	w9, [x10, #1]
  402204:	strb	w9, [x10, #2]
  402208:	ldur	x11, [x29, #-24]
  40220c:	lsr	x11, x11, #8
  402210:	strb	w11, [x10, #3]
  402214:	ldur	x12, [x29, #-24]
  402218:	and	x12, x12, #0xff
  40221c:	strb	w12, [x10, #4]
  402220:	add	x13, x10, #0x5
  402224:	add	x10, x10, #0x6
  402228:	str	x10, [sp, #24]
  40222c:	str	x13, [sp, #16]
  402230:	ldr	x8, [sp, #16]
  402234:	mov	w9, #0x0                   	// #0
  402238:	strb	w9, [x8]
  40223c:	add	x8, x8, #0x1
  402240:	ldr	x10, [sp, #24]
  402244:	cmp	x8, x10
  402248:	str	x8, [sp, #16]
  40224c:	b.ne	402230 <disk_scsi_inquiry_command+0x5c>  // b.any
  402250:	sub	x8, x29, #0x40
  402254:	mov	x0, x8
  402258:	mov	w9, wzr
  40225c:	mov	w1, w9
  402260:	mov	x2, #0x20                  	// #32
  402264:	str	x8, [sp, #8]
  402268:	bl	401090 <memset@plt>
  40226c:	add	x2, sp, #0x80
  402270:	mov	w9, #0x51                  	// #81
  402274:	str	w9, [sp, #128]
  402278:	str	wzr, [sp, #132]
  40227c:	str	wzr, [sp, #136]
  402280:	mov	w9, #0x6                   	// #6
  402284:	str	w9, [sp, #140]
  402288:	sub	x8, x29, #0x1e
  40228c:	str	x8, [sp, #144]
  402290:	str	xzr, [sp, #152]
  402294:	str	wzr, [sp, #160]
  402298:	str	wzr, [sp, #164]
  40229c:	str	wzr, [sp, #168]
  4022a0:	mov	w9, #0x20                  	// #32
  4022a4:	str	w9, [sp, #172]
  4022a8:	ldr	x8, [sp, #8]
  4022ac:	str	x8, [sp, #176]
  4022b0:	str	wzr, [sp, #184]
  4022b4:	str	wzr, [sp, #188]
  4022b8:	str	wzr, [sp, #192]
  4022bc:	ldur	x8, [x29, #-24]
  4022c0:	str	w8, [sp, #196]
  4022c4:	str	xzr, [sp, #200]
  4022c8:	ldur	x10, [x29, #-16]
  4022cc:	str	x10, [sp, #208]
  4022d0:	mov	w8, #0x7530                	// #30000
  4022d4:	str	w8, [sp, #216]
  4022d8:	str	wzr, [sp, #220]
  4022dc:	str	xzr, [sp, #224]
  4022e0:	str	wzr, [sp, #232]
  4022e4:	str	wzr, [sp, #236]
  4022e8:	str	wzr, [sp, #240]
  4022ec:	str	wzr, [sp, #244]
  4022f0:	str	wzr, [sp, #248]
  4022f4:	str	wzr, [sp, #252]
  4022f8:	str	wzr, [sp, #256]
  4022fc:	str	wzr, [sp, #260]
  402300:	str	wzr, [sp, #264]
  402304:	str	wzr, [sp, #268]
  402308:	str	xzr, [sp, #272]
  40230c:	str	wzr, [sp, #280]
  402310:	str	wzr, [sp, #284]
  402314:	ldur	w0, [x29, #-8]
  402318:	mov	x1, #0x2285                	// #8837
  40231c:	bl	401050 <ioctl@plt>
  402320:	str	w0, [sp, #124]
  402324:	ldr	w8, [sp, #124]
  402328:	cbz	w8, 402430 <disk_scsi_inquiry_command+0x25c>
  40232c:	bl	401060 <__errno_location@plt>
  402330:	ldr	w8, [x0]
  402334:	cmp	w8, #0x16
  402338:	b.ne	402424 <disk_scsi_inquiry_command+0x250>  // b.any
  40233c:	add	x8, sp, #0x20
  402340:	mov	w9, #0x53                  	// #83
  402344:	str	w9, [sp, #32]
  402348:	mov	w9, #0xfffffffd            	// #-3
  40234c:	str	w9, [sp, #36]
  402350:	mov	w9, #0x6                   	// #6
  402354:	strb	w9, [x8, #8]
  402358:	mov	w9, #0x20                  	// #32
  40235c:	strb	w9, [x8, #9]
  402360:	mov	w9, #0x0                   	// #0
  402364:	strh	w9, [x8, #10]
  402368:	ldur	x10, [x29, #-24]
  40236c:	str	w10, [sp, #44]
  402370:	ldur	x11, [x29, #-16]
  402374:	str	x11, [x8, #16]
  402378:	sub	x11, x29, #0x1e
  40237c:	str	x11, [x8, #24]
  402380:	sub	x11, x29, #0x40
  402384:	str	x11, [x8, #32]
  402388:	mov	w10, #0x7530                	// #30000
  40238c:	str	w10, [sp, #72]
  402390:	str	wzr, [sp, #76]
  402394:	str	wzr, [sp, #80]
  402398:	mov	x11, xzr
  40239c:	str	x11, [x8, #56]
  4023a0:	mov	w10, #0x0                   	// #0
  4023a4:	strb	w10, [x8, #64]
  4023a8:	strb	w10, [x8, #65]
  4023ac:	strb	w10, [x8, #66]
  4023b0:	strb	w10, [x8, #67]
  4023b4:	strh	w9, [x8, #68]
  4023b8:	strh	w9, [x8, #70]
  4023bc:	str	wzr, [sp, #104]
  4023c0:	str	wzr, [sp, #108]
  4023c4:	str	wzr, [sp, #112]
  4023c8:	ldur	w0, [x29, #-8]
  4023cc:	mov	x1, #0x2285                	// #8837
  4023d0:	mov	x2, x8
  4023d4:	bl	401050 <ioctl@plt>
  4023d8:	str	w0, [sp, #124]
  4023dc:	ldr	w9, [sp, #124]
  4023e0:	cbz	w9, 4023f0 <disk_scsi_inquiry_command+0x21c>
  4023e4:	ldr	w8, [sp, #124]
  4023e8:	stur	w8, [x29, #-4]
  4023ec:	b	402464 <disk_scsi_inquiry_command+0x290>
  4023f0:	ldrb	w8, [sp, #96]
  4023f4:	cbnz	w8, 402408 <disk_scsi_inquiry_command+0x234>
  4023f8:	ldrh	w8, [sp, #100]
  4023fc:	cbnz	w8, 402408 <disk_scsi_inquiry_command+0x234>
  402400:	ldrh	w8, [sp, #102]
  402404:	cbz	w8, 402420 <disk_scsi_inquiry_command+0x24c>
  402408:	bl	401060 <__errno_location@plt>
  40240c:	mov	w8, #0x5                   	// #5
  402410:	str	w8, [x0]
  402414:	mov	w8, #0xffffffff            	// #-1
  402418:	stur	w8, [x29, #-4]
  40241c:	b	402464 <disk_scsi_inquiry_command+0x290>
  402420:	b	402430 <disk_scsi_inquiry_command+0x25c>
  402424:	ldr	w8, [sp, #124]
  402428:	stur	w8, [x29, #-4]
  40242c:	b	402464 <disk_scsi_inquiry_command+0x290>
  402430:	ldr	w8, [sp, #244]
  402434:	cbnz	w8, 402448 <disk_scsi_inquiry_command+0x274>
  402438:	ldr	w8, [sp, #240]
  40243c:	cbnz	w8, 402448 <disk_scsi_inquiry_command+0x274>
  402440:	ldr	w8, [sp, #236]
  402444:	cbz	w8, 402460 <disk_scsi_inquiry_command+0x28c>
  402448:	bl	401060 <__errno_location@plt>
  40244c:	mov	w8, #0x5                   	// #5
  402450:	str	w8, [x0]
  402454:	mov	w8, #0xffffffff            	// #-1
  402458:	stur	w8, [x29, #-4]
  40245c:	b	402464 <disk_scsi_inquiry_command+0x290>
  402460:	stur	wzr, [x29, #-4]
  402464:	ldur	w0, [x29, #-4]
  402468:	ldr	x28, [sp, #368]
  40246c:	ldp	x29, x30, [sp, #352]
  402470:	add	sp, sp, #0x180
  402474:	ret

0000000000402478 <disk_identify_packet_device_command>:
  402478:	sub	sp, sp, #0x1b0
  40247c:	stp	x29, x30, [sp, #400]
  402480:	str	x28, [sp, #416]
  402484:	add	x29, sp, #0x190
  402488:	adrp	x8, 403000 <util_path_encode+0xd4>
  40248c:	add	x8, x8, #0xe37
  402490:	mov	x9, #0x20                  	// #32
  402494:	mov	w10, #0x51                  	// #81
  402498:	mov	w11, wzr
  40249c:	mov	w12, #0x10                  	// #16
  4024a0:	mov	w13, #0x20                  	// #32
  4024a4:	mov	w14, #0x7530                	// #30000
  4024a8:	mov	x15, #0x2285                	// #8837
  4024ac:	sub	x16, x29, #0x30
  4024b0:	sub	x17, x29, #0x50
  4024b4:	add	x18, sp, #0x98
  4024b8:	stur	w0, [x29, #-8]
  4024bc:	stur	x1, [x29, #-16]
  4024c0:	stur	x2, [x29, #-24]
  4024c4:	ldr	q0, [x8]
  4024c8:	stur	q0, [x29, #-48]
  4024cc:	mov	x0, x17
  4024d0:	mov	w1, w11
  4024d4:	mov	x2, x9
  4024d8:	str	w10, [sp, #52]
  4024dc:	str	w12, [sp, #48]
  4024e0:	str	w13, [sp, #44]
  4024e4:	str	w14, [sp, #40]
  4024e8:	str	x15, [sp, #32]
  4024ec:	str	x16, [sp, #24]
  4024f0:	str	x17, [sp, #16]
  4024f4:	str	x18, [sp, #8]
  4024f8:	bl	401090 <memset@plt>
  4024fc:	ldr	x8, [sp, #16]
  402500:	add	x9, x8, #0x8
  402504:	stur	x9, [x29, #-88]
  402508:	ldr	w10, [sp, #52]
  40250c:	str	w10, [sp, #152]
  402510:	str	wzr, [sp, #156]
  402514:	str	wzr, [sp, #160]
  402518:	ldr	w11, [sp, #48]
  40251c:	str	w11, [sp, #164]
  402520:	ldr	x9, [sp, #24]
  402524:	str	x9, [sp, #168]
  402528:	str	xzr, [sp, #176]
  40252c:	str	wzr, [sp, #184]
  402530:	str	wzr, [sp, #188]
  402534:	str	wzr, [sp, #192]
  402538:	ldr	w12, [sp, #44]
  40253c:	str	w12, [sp, #196]
  402540:	str	x8, [sp, #200]
  402544:	str	wzr, [sp, #208]
  402548:	str	wzr, [sp, #212]
  40254c:	str	wzr, [sp, #216]
  402550:	ldur	x8, [x29, #-24]
  402554:	str	w8, [sp, #220]
  402558:	str	xzr, [sp, #224]
  40255c:	ldur	x9, [x29, #-16]
  402560:	str	x9, [sp, #232]
  402564:	ldr	w8, [sp, #40]
  402568:	str	w8, [sp, #240]
  40256c:	str	wzr, [sp, #244]
  402570:	str	xzr, [sp, #248]
  402574:	str	wzr, [sp, #256]
  402578:	str	wzr, [sp, #260]
  40257c:	str	wzr, [sp, #264]
  402580:	str	wzr, [sp, #268]
  402584:	str	wzr, [sp, #272]
  402588:	str	wzr, [sp, #276]
  40258c:	str	wzr, [sp, #280]
  402590:	str	wzr, [sp, #284]
  402594:	str	wzr, [sp, #288]
  402598:	str	wzr, [sp, #292]
  40259c:	str	xzr, [sp, #296]
  4025a0:	str	wzr, [sp, #304]
  4025a4:	str	wzr, [sp, #308]
  4025a8:	ldur	w0, [x29, #-8]
  4025ac:	ldr	x1, [sp, #32]
  4025b0:	ldr	x2, [sp, #8]
  4025b4:	bl	401050 <ioctl@plt>
  4025b8:	str	w0, [sp, #148]
  4025bc:	ldr	w8, [sp, #148]
  4025c0:	cbz	w8, 402698 <disk_identify_packet_device_command+0x220>
  4025c4:	bl	401060 <__errno_location@plt>
  4025c8:	ldr	w8, [x0]
  4025cc:	cmp	w8, #0x16
  4025d0:	b.ne	40268c <disk_identify_packet_device_command+0x214>  // b.any
  4025d4:	add	x8, sp, #0x38
  4025d8:	mov	w9, #0x53                  	// #83
  4025dc:	str	w9, [sp, #56]
  4025e0:	mov	w9, #0xfffffffd            	// #-3
  4025e4:	str	w9, [sp, #60]
  4025e8:	mov	w9, #0x10                  	// #16
  4025ec:	strb	w9, [x8, #8]
  4025f0:	mov	w9, #0x20                  	// #32
  4025f4:	strb	w9, [x8, #9]
  4025f8:	mov	w9, #0x0                   	// #0
  4025fc:	strh	w9, [x8, #10]
  402600:	ldur	x10, [x29, #-24]
  402604:	str	w10, [sp, #68]
  402608:	ldur	x11, [x29, #-16]
  40260c:	str	x11, [x8, #16]
  402610:	sub	x11, x29, #0x30
  402614:	str	x11, [x8, #24]
  402618:	sub	x11, x29, #0x50
  40261c:	str	x11, [x8, #32]
  402620:	mov	w10, #0x7530                	// #30000
  402624:	str	w10, [sp, #96]
  402628:	str	wzr, [sp, #100]
  40262c:	str	wzr, [sp, #104]
  402630:	mov	x11, xzr
  402634:	str	x11, [x8, #56]
  402638:	mov	w10, #0x0                   	// #0
  40263c:	strb	w10, [x8, #64]
  402640:	strb	w10, [x8, #65]
  402644:	strb	w10, [x8, #66]
  402648:	strb	w10, [x8, #67]
  40264c:	strh	w9, [x8, #68]
  402650:	strh	w9, [x8, #70]
  402654:	str	wzr, [sp, #128]
  402658:	str	wzr, [sp, #132]
  40265c:	str	wzr, [sp, #136]
  402660:	ldur	w0, [x29, #-8]
  402664:	mov	x1, #0x2285                	// #8837
  402668:	mov	x2, x8
  40266c:	bl	401050 <ioctl@plt>
  402670:	str	w0, [sp, #148]
  402674:	ldr	w9, [sp, #148]
  402678:	cbz	w9, 402688 <disk_identify_packet_device_command+0x210>
  40267c:	ldr	w8, [sp, #148]
  402680:	stur	w8, [x29, #-4]
  402684:	b	4026e0 <disk_identify_packet_device_command+0x268>
  402688:	b	402698 <disk_identify_packet_device_command+0x220>
  40268c:	ldr	w8, [sp, #148]
  402690:	stur	w8, [x29, #-4]
  402694:	b	4026e0 <disk_identify_packet_device_command+0x268>
  402698:	ldurb	w8, [x29, #-80]
  40269c:	cmp	w8, #0x72
  4026a0:	b.ne	4026c4 <disk_identify_packet_device_command+0x24c>  // b.any
  4026a4:	ldur	x8, [x29, #-88]
  4026a8:	ldrb	w9, [x8]
  4026ac:	cmp	w9, #0x9
  4026b0:	b.ne	4026c4 <disk_identify_packet_device_command+0x24c>  // b.any
  4026b4:	ldur	x8, [x29, #-88]
  4026b8:	ldrb	w9, [x8, #1]
  4026bc:	cmp	w9, #0xc
  4026c0:	b.eq	4026dc <disk_identify_packet_device_command+0x264>  // b.none
  4026c4:	bl	401060 <__errno_location@plt>
  4026c8:	mov	w8, #0x5                   	// #5
  4026cc:	str	w8, [x0]
  4026d0:	mov	w8, #0xffffffff            	// #-1
  4026d4:	stur	w8, [x29, #-4]
  4026d8:	b	4026e0 <disk_identify_packet_device_command+0x268>
  4026dc:	stur	wzr, [x29, #-4]
  4026e0:	ldur	w0, [x29, #-4]
  4026e4:	ldr	x28, [sp, #416]
  4026e8:	ldp	x29, x30, [sp, #400]
  4026ec:	add	sp, sp, #0x1b0
  4026f0:	ret

00000000004026f4 <disk_identify_command>:
  4026f4:	sub	sp, sp, #0x1b0
  4026f8:	stp	x29, x30, [sp, #400]
  4026fc:	str	x28, [sp, #416]
  402700:	add	x29, sp, #0x190
  402704:	adrp	x8, 403000 <util_path_encode+0xd4>
  402708:	add	x8, x8, #0x6b0
  40270c:	mov	x9, #0x20                  	// #32
  402710:	mov	w10, #0x51                  	// #81
  402714:	mov	w11, wzr
  402718:	mov	w12, #0xc                   	// #12
  40271c:	mov	w13, #0x20                  	// #32
  402720:	mov	w14, #0x7530                	// #30000
  402724:	mov	x15, #0x2285                	// #8837
  402728:	sub	x16, x29, #0x28
  40272c:	sub	x17, x29, #0x50
  402730:	add	x18, sp, #0x98
  402734:	stur	w0, [x29, #-8]
  402738:	stur	x1, [x29, #-16]
  40273c:	stur	x2, [x29, #-24]
  402740:	ldr	x1, [x8]
  402744:	stur	x1, [x29, #-40]
  402748:	ldr	w0, [x8, #8]
  40274c:	stur	w0, [x29, #-32]
  402750:	mov	x0, x17
  402754:	mov	w1, w11
  402758:	mov	x2, x9
  40275c:	str	w10, [sp, #52]
  402760:	str	w12, [sp, #48]
  402764:	str	w13, [sp, #44]
  402768:	str	w14, [sp, #40]
  40276c:	str	x15, [sp, #32]
  402770:	str	x16, [sp, #24]
  402774:	str	x17, [sp, #16]
  402778:	str	x18, [sp, #8]
  40277c:	bl	401090 <memset@plt>
  402780:	ldr	x8, [sp, #16]
  402784:	add	x9, x8, #0x8
  402788:	stur	x9, [x29, #-88]
  40278c:	ldr	w10, [sp, #52]
  402790:	str	w10, [sp, #152]
  402794:	str	wzr, [sp, #156]
  402798:	str	wzr, [sp, #160]
  40279c:	ldr	w11, [sp, #48]
  4027a0:	str	w11, [sp, #164]
  4027a4:	ldr	x9, [sp, #24]
  4027a8:	str	x9, [sp, #168]
  4027ac:	str	xzr, [sp, #176]
  4027b0:	str	wzr, [sp, #184]
  4027b4:	str	wzr, [sp, #188]
  4027b8:	str	wzr, [sp, #192]
  4027bc:	ldr	w12, [sp, #44]
  4027c0:	str	w12, [sp, #196]
  4027c4:	str	x8, [sp, #200]
  4027c8:	str	wzr, [sp, #208]
  4027cc:	str	wzr, [sp, #212]
  4027d0:	str	wzr, [sp, #216]
  4027d4:	ldur	x8, [x29, #-24]
  4027d8:	str	w8, [sp, #220]
  4027dc:	str	xzr, [sp, #224]
  4027e0:	ldur	x9, [x29, #-16]
  4027e4:	str	x9, [sp, #232]
  4027e8:	ldr	w8, [sp, #40]
  4027ec:	str	w8, [sp, #240]
  4027f0:	str	wzr, [sp, #244]
  4027f4:	str	xzr, [sp, #248]
  4027f8:	str	wzr, [sp, #256]
  4027fc:	str	wzr, [sp, #260]
  402800:	str	wzr, [sp, #264]
  402804:	str	wzr, [sp, #268]
  402808:	str	wzr, [sp, #272]
  40280c:	str	wzr, [sp, #276]
  402810:	str	wzr, [sp, #280]
  402814:	str	wzr, [sp, #284]
  402818:	str	wzr, [sp, #288]
  40281c:	str	wzr, [sp, #292]
  402820:	str	xzr, [sp, #296]
  402824:	str	wzr, [sp, #304]
  402828:	str	wzr, [sp, #308]
  40282c:	ldur	w0, [x29, #-8]
  402830:	ldr	x1, [sp, #32]
  402834:	ldr	x2, [sp, #8]
  402838:	bl	401050 <ioctl@plt>
  40283c:	str	w0, [sp, #148]
  402840:	ldr	w8, [sp, #148]
  402844:	cbz	w8, 40291c <disk_identify_command+0x228>
  402848:	bl	401060 <__errno_location@plt>
  40284c:	ldr	w8, [x0]
  402850:	cmp	w8, #0x16
  402854:	b.ne	402910 <disk_identify_command+0x21c>  // b.any
  402858:	add	x8, sp, #0x38
  40285c:	mov	w9, #0x53                  	// #83
  402860:	str	w9, [sp, #56]
  402864:	mov	w9, #0xfffffffd            	// #-3
  402868:	str	w9, [sp, #60]
  40286c:	mov	w9, #0xc                   	// #12
  402870:	strb	w9, [x8, #8]
  402874:	mov	w9, #0x20                  	// #32
  402878:	strb	w9, [x8, #9]
  40287c:	mov	w9, #0x0                   	// #0
  402880:	strh	w9, [x8, #10]
  402884:	ldur	x10, [x29, #-24]
  402888:	str	w10, [sp, #68]
  40288c:	ldur	x11, [x29, #-16]
  402890:	str	x11, [x8, #16]
  402894:	sub	x11, x29, #0x28
  402898:	str	x11, [x8, #24]
  40289c:	sub	x11, x29, #0x50
  4028a0:	str	x11, [x8, #32]
  4028a4:	mov	w10, #0x7530                	// #30000
  4028a8:	str	w10, [sp, #96]
  4028ac:	str	wzr, [sp, #100]
  4028b0:	str	wzr, [sp, #104]
  4028b4:	mov	x11, xzr
  4028b8:	str	x11, [x8, #56]
  4028bc:	mov	w10, #0x0                   	// #0
  4028c0:	strb	w10, [x8, #64]
  4028c4:	strb	w10, [x8, #65]
  4028c8:	strb	w10, [x8, #66]
  4028cc:	strb	w10, [x8, #67]
  4028d0:	strh	w9, [x8, #68]
  4028d4:	strh	w9, [x8, #70]
  4028d8:	str	wzr, [sp, #128]
  4028dc:	str	wzr, [sp, #132]
  4028e0:	str	wzr, [sp, #136]
  4028e4:	ldur	w0, [x29, #-8]
  4028e8:	mov	x1, #0x2285                	// #8837
  4028ec:	mov	x2, x8
  4028f0:	bl	401050 <ioctl@plt>
  4028f4:	str	w0, [sp, #148]
  4028f8:	ldr	w9, [sp, #148]
  4028fc:	cbz	w9, 40290c <disk_identify_command+0x218>
  402900:	ldr	w8, [sp, #148]
  402904:	stur	w8, [x29, #-4]
  402908:	b	402984 <disk_identify_command+0x290>
  40290c:	b	40291c <disk_identify_command+0x228>
  402910:	ldr	w8, [sp, #148]
  402914:	stur	w8, [x29, #-4]
  402918:	b	402984 <disk_identify_command+0x290>
  40291c:	ldurb	w8, [x29, #-80]
  402920:	cmp	w8, #0x72
  402924:	b.ne	402948 <disk_identify_command+0x254>  // b.any
  402928:	ldur	x8, [x29, #-88]
  40292c:	ldrb	w9, [x8]
  402930:	cmp	w9, #0x9
  402934:	b.ne	402948 <disk_identify_command+0x254>  // b.any
  402938:	ldur	x8, [x29, #-88]
  40293c:	ldrb	w9, [x8, #1]
  402940:	cmp	w9, #0xc
  402944:	b.eq	402980 <disk_identify_command+0x28c>  // b.none
  402948:	ldurb	w8, [x29, #-80]
  40294c:	cmp	w8, #0x70
  402950:	b.ne	402968 <disk_identify_command+0x274>  // b.any
  402954:	ldurb	w8, [x29, #-68]
  402958:	cbnz	w8, 402968 <disk_identify_command+0x274>
  40295c:	ldurb	w8, [x29, #-67]
  402960:	cmp	w8, #0x1d
  402964:	b.eq	402980 <disk_identify_command+0x28c>  // b.none
  402968:	bl	401060 <__errno_location@plt>
  40296c:	mov	w8, #0x5                   	// #5
  402970:	str	w8, [x0]
  402974:	mov	w8, #0xffffffff            	// #-1
  402978:	stur	w8, [x29, #-4]
  40297c:	b	402984 <disk_identify_command+0x290>
  402980:	stur	wzr, [x29, #-4]
  402984:	ldur	w0, [x29, #-4]
  402988:	ldr	x28, [sp, #416]
  40298c:	ldp	x29, x30, [sp, #400]
  402990:	add	sp, sp, #0x1b0
  402994:	ret

0000000000402998 <disk_identify_get_string>:
  402998:	sub	sp, sp, #0x30
  40299c:	str	x0, [sp, #40]
  4029a0:	str	w1, [sp, #36]
  4029a4:	str	x2, [sp, #24]
  4029a8:	str	x3, [sp, #16]
  4029ac:	ldr	x8, [sp, #16]
  4029b0:	cmp	x8, #0x0
  4029b4:	cset	w9, ls  // ls = plast
  4029b8:	tbnz	w9, #0, 402a38 <disk_identify_get_string+0xa0>
  4029bc:	ldr	x8, [sp, #40]
  4029c0:	ldr	w9, [sp, #36]
  4029c4:	mov	w10, #0x2                   	// #2
  4029c8:	mul	w9, w9, w10
  4029cc:	add	w9, w9, #0x1
  4029d0:	ldrb	w9, [x8, w9, uxtw]
  4029d4:	str	w9, [sp, #12]
  4029d8:	ldr	x8, [sp, #40]
  4029dc:	ldr	w9, [sp, #36]
  4029e0:	mul	w9, w9, w10
  4029e4:	ldrb	w9, [x8, w9, uxtw]
  4029e8:	str	w9, [sp, #8]
  4029ec:	ldr	w9, [sp, #12]
  4029f0:	ldr	x8, [sp, #24]
  4029f4:	strb	w9, [x8]
  4029f8:	ldr	x8, [sp, #24]
  4029fc:	add	x8, x8, #0x1
  402a00:	str	x8, [sp, #24]
  402a04:	ldr	w9, [sp, #8]
  402a08:	ldr	x8, [sp, #24]
  402a0c:	strb	w9, [x8]
  402a10:	ldr	x8, [sp, #24]
  402a14:	add	x8, x8, #0x1
  402a18:	str	x8, [sp, #24]
  402a1c:	ldr	w9, [sp, #36]
  402a20:	add	w9, w9, #0x1
  402a24:	str	w9, [sp, #36]
  402a28:	ldr	x8, [sp, #16]
  402a2c:	subs	x8, x8, #0x2
  402a30:	str	x8, [sp, #16]
  402a34:	b	4029ac <disk_identify_get_string+0x14>
  402a38:	add	sp, sp, #0x30
  402a3c:	ret

0000000000402a40 <__uint16_identity>:
  402a40:	sub	sp, sp, #0x10
  402a44:	strh	w0, [sp, #14]
  402a48:	ldrh	w0, [sp, #14]
  402a4c:	add	sp, sp, #0x10
  402a50:	ret

0000000000402a54 <util_resolve_subsys_kernel>:
  402a54:	stp	x29, x30, [sp, #-32]!
  402a58:	str	x28, [sp, #16]
  402a5c:	mov	x29, sp
  402a60:	sub	sp, sp, #0x500
  402a64:	mov	x8, xzr
  402a68:	mov	w9, #0x1                   	// #1
  402a6c:	adrp	x10, 403000 <util_path_encode+0xd4>
  402a70:	add	x10, x10, #0xd06
  402a74:	add	x10, x10, #0x3
  402a78:	stur	x0, [x29, #-16]
  402a7c:	stur	x1, [x29, #-24]
  402a80:	stur	x2, [x29, #-32]
  402a84:	and	w9, w3, w9
  402a88:	sturb	w9, [x29, #-33]
  402a8c:	str	x8, [sp, #184]
  402a90:	ldur	x8, [x29, #-16]
  402a94:	ldrb	w9, [x8]
  402a98:	cmp	w9, #0x5b
  402a9c:	str	x10, [sp, #128]
  402aa0:	b.eq	402ab8 <util_resolve_subsys_kernel+0x64>  // b.none
  402aa4:	mov	w8, #0xffffffea            	// #-22
  402aa8:	stur	w8, [x29, #-4]
  402aac:	mov	w8, #0x1                   	// #1
  402ab0:	str	w8, [sp, #168]
  402ab4:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402ab8:	ldur	x2, [x29, #-16]
  402abc:	add	x8, sp, #0xdf
  402ac0:	mov	x0, x8
  402ac4:	mov	x1, #0x400                 	// #1024
  402ac8:	str	x8, [sp, #120]
  402acc:	bl	4010a0 <strscpy@plt>
  402ad0:	ldr	x8, [sp, #120]
  402ad4:	add	x9, x8, #0x1
  402ad8:	str	x9, [sp, #208]
  402adc:	ldr	x9, [sp, #208]
  402ae0:	mov	x0, x9
  402ae4:	mov	w1, #0x2f                  	// #47
  402ae8:	bl	4010b0 <strchr@plt>
  402aec:	str	x0, [sp, #200]
  402af0:	ldr	x8, [sp, #200]
  402af4:	cbnz	x8, 402b0c <util_resolve_subsys_kernel+0xb8>
  402af8:	mov	w8, #0xffffffea            	// #-22
  402afc:	stur	w8, [x29, #-4]
  402b00:	mov	w8, #0x1                   	// #1
  402b04:	str	w8, [sp, #168]
  402b08:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402b0c:	ldr	x8, [sp, #200]
  402b10:	mov	w9, #0x0                   	// #0
  402b14:	strb	w9, [x8]
  402b18:	ldr	x8, [sp, #200]
  402b1c:	add	x8, x8, #0x1
  402b20:	str	x8, [sp, #200]
  402b24:	ldr	x0, [sp, #200]
  402b28:	mov	w1, #0x5d                  	// #93
  402b2c:	bl	4010b0 <strchr@plt>
  402b30:	str	x0, [sp, #192]
  402b34:	ldr	x8, [sp, #192]
  402b38:	cbnz	x8, 402b50 <util_resolve_subsys_kernel+0xfc>
  402b3c:	mov	w8, #0xffffffea            	// #-22
  402b40:	stur	w8, [x29, #-4]
  402b44:	mov	w8, #0x1                   	// #1
  402b48:	str	w8, [sp, #168]
  402b4c:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402b50:	ldr	x8, [sp, #192]
  402b54:	mov	w9, #0x0                   	// #0
  402b58:	strb	w9, [x8]
  402b5c:	ldr	x8, [sp, #192]
  402b60:	add	x8, x8, #0x1
  402b64:	str	x8, [sp, #192]
  402b68:	ldr	x8, [sp, #192]
  402b6c:	ldrb	w9, [x8]
  402b70:	cmp	w9, #0x2f
  402b74:	b.ne	402b84 <util_resolve_subsys_kernel+0x130>  // b.any
  402b78:	ldr	x8, [sp, #192]
  402b7c:	add	x8, x8, #0x1
  402b80:	str	x8, [sp, #192]
  402b84:	ldr	x8, [sp, #192]
  402b88:	ldrb	w9, [x8]
  402b8c:	cbnz	w9, 402b98 <util_resolve_subsys_kernel+0x144>
  402b90:	mov	x8, xzr
  402b94:	str	x8, [sp, #192]
  402b98:	ldurb	w8, [x29, #-33]
  402b9c:	tbnz	w8, #0, 402ba4 <util_resolve_subsys_kernel+0x150>
  402ba0:	b	402bc0 <util_resolve_subsys_kernel+0x16c>
  402ba4:	ldr	x8, [sp, #192]
  402ba8:	cbnz	x8, 402bc0 <util_resolve_subsys_kernel+0x16c>
  402bac:	mov	w8, #0xffffffea            	// #-22
  402bb0:	stur	w8, [x29, #-4]
  402bb4:	mov	w8, #0x1                   	// #1
  402bb8:	str	w8, [sp, #168]
  402bbc:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402bc0:	ldr	x1, [sp, #208]
  402bc4:	ldr	x2, [sp, #200]
  402bc8:	add	x0, sp, #0xb8
  402bcc:	bl	4010c0 <sd_device_new_from_subsystem_sysname@plt>
  402bd0:	str	w0, [sp, #172]
  402bd4:	ldr	w8, [sp, #172]
  402bd8:	cmp	w8, #0x0
  402bdc:	cset	w8, ge  // ge = tcont
  402be0:	tbnz	w8, #0, 402bf8 <util_resolve_subsys_kernel+0x1a4>
  402be4:	ldr	w8, [sp, #172]
  402be8:	stur	w8, [x29, #-4]
  402bec:	mov	w8, #0x1                   	// #1
  402bf0:	str	w8, [sp, #168]
  402bf4:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402bf8:	ldurb	w8, [x29, #-33]
  402bfc:	tbnz	w8, #0, 402c04 <util_resolve_subsys_kernel+0x1b0>
  402c00:	b	402d18 <util_resolve_subsys_kernel+0x2c4>
  402c04:	ldr	x0, [sp, #184]
  402c08:	ldr	x1, [sp, #192]
  402c0c:	add	x2, sp, #0xb0
  402c10:	bl	4010d0 <sd_device_get_sysattr_value@plt>
  402c14:	str	w0, [sp, #172]
  402c18:	ldr	w8, [sp, #172]
  402c1c:	cmp	w8, #0x0
  402c20:	cset	w8, ge  // ge = tcont
  402c24:	tbnz	w8, #0, 402c4c <util_resolve_subsys_kernel+0x1f8>
  402c28:	ldr	w8, [sp, #172]
  402c2c:	mov	w9, #0xfffffffe            	// #-2
  402c30:	cmp	w8, w9
  402c34:	b.eq	402c4c <util_resolve_subsys_kernel+0x1f8>  // b.none
  402c38:	ldr	w8, [sp, #172]
  402c3c:	stur	w8, [x29, #-4]
  402c40:	mov	w8, #0x1                   	// #1
  402c44:	str	w8, [sp, #168]
  402c48:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402c4c:	ldr	w8, [sp, #172]
  402c50:	mov	w9, #0xfffffffe            	// #-2
  402c54:	cmp	w8, w9
  402c58:	b.ne	402c6c <util_resolve_subsys_kernel+0x218>  // b.any
  402c5c:	ldur	x8, [x29, #-24]
  402c60:	mov	w9, #0x0                   	// #0
  402c64:	strb	w9, [x8]
  402c68:	b	402c7c <util_resolve_subsys_kernel+0x228>
  402c6c:	ldur	x0, [x29, #-24]
  402c70:	ldur	x1, [x29, #-32]
  402c74:	ldr	x2, [sp, #176]
  402c78:	bl	4010a0 <strscpy@plt>
  402c7c:	mov	w8, #0x7                   	// #7
  402c80:	str	w8, [sp, #164]
  402c84:	str	wzr, [sp, #160]
  402c88:	str	wzr, [sp, #156]
  402c8c:	ldr	w0, [sp, #156]
  402c90:	bl	401000 <log_get_max_level_realm@plt>
  402c94:	ldr	w8, [sp, #164]
  402c98:	and	w8, w8, #0x7
  402c9c:	cmp	w0, w8
  402ca0:	b.lt	402cf8 <util_resolve_subsys_kernel+0x2a4>  // b.tstop
  402ca4:	ldr	w8, [sp, #156]
  402ca8:	ldr	w9, [sp, #164]
  402cac:	orr	w0, w9, w8, lsl #10
  402cb0:	ldr	w1, [sp, #160]
  402cb4:	ldr	x6, [sp, #208]
  402cb8:	ldr	x7, [sp, #200]
  402cbc:	ldr	x10, [sp, #192]
  402cc0:	ldur	x11, [x29, #-24]
  402cc4:	ldr	x2, [sp, #128]
  402cc8:	mov	w3, #0x42                  	// #66
  402ccc:	adrp	x4, 403000 <util_path_encode+0xd4>
  402cd0:	add	x4, x4, #0xd24
  402cd4:	adrp	x5, 403000 <util_path_encode+0xd4>
  402cd8:	add	x5, x5, #0xd3f
  402cdc:	mov	x12, sp
  402ce0:	str	x10, [x12]
  402ce4:	mov	x10, sp
  402ce8:	str	x11, [x10, #8]
  402cec:	bl	401010 <log_internal_realm@plt>
  402cf0:	str	w0, [sp, #116]
  402cf4:	b	402d0c <util_resolve_subsys_kernel+0x2b8>
  402cf8:	ldr	w0, [sp, #160]
  402cfc:	bl	401020 <abs@plt>
  402d00:	mov	w8, wzr
  402d04:	subs	w8, w8, w0, uxtb
  402d08:	str	w8, [sp, #116]
  402d0c:	ldr	w8, [sp, #116]
  402d10:	str	w8, [sp, #152]
  402d14:	b	402e94 <util_resolve_subsys_kernel+0x440>
  402d18:	ldr	x0, [sp, #184]
  402d1c:	add	x1, sp, #0xb0
  402d20:	bl	4010e0 <sd_device_get_syspath@plt>
  402d24:	str	w0, [sp, #172]
  402d28:	ldr	w8, [sp, #172]
  402d2c:	cmp	w8, #0x0
  402d30:	cset	w8, ge  // ge = tcont
  402d34:	tbnz	w8, #0, 402d4c <util_resolve_subsys_kernel+0x2f8>
  402d38:	ldr	w8, [sp, #172]
  402d3c:	stur	w8, [x29, #-4]
  402d40:	mov	w8, #0x1                   	// #1
  402d44:	str	w8, [sp, #168]
  402d48:	b	402ea0 <util_resolve_subsys_kernel+0x44c>
  402d4c:	ldur	x0, [x29, #-24]
  402d50:	ldur	x1, [x29, #-32]
  402d54:	ldr	x2, [sp, #176]
  402d58:	ldr	x8, [sp, #192]
  402d5c:	mov	x9, xzr
  402d60:	adrp	x10, 403000 <util_path_encode+0xd4>
  402d64:	add	x10, x10, #0xd59
  402d68:	cmp	x8, #0x0
  402d6c:	csel	x3, x10, x9, ne  // ne = any
  402d70:	ldr	x8, [sp, #192]
  402d74:	str	x0, [sp, #104]
  402d78:	str	x1, [sp, #96]
  402d7c:	str	x2, [sp, #88]
  402d80:	str	x3, [sp, #80]
  402d84:	str	x8, [sp, #72]
  402d88:	cbz	x8, 402d98 <util_resolve_subsys_kernel+0x344>
  402d8c:	ldr	x8, [sp, #72]
  402d90:	str	x8, [sp, #64]
  402d94:	b	402da0 <util_resolve_subsys_kernel+0x34c>
  402d98:	mov	x8, xzr
  402d9c:	str	x8, [sp, #64]
  402da0:	ldr	x8, [sp, #64]
  402da4:	ldr	x0, [sp, #104]
  402da8:	ldr	x1, [sp, #96]
  402dac:	ldr	x2, [sp, #88]
  402db0:	ldr	x3, [sp, #80]
  402db4:	mov	x4, x8
  402db8:	mov	x8, xzr
  402dbc:	mov	x5, x8
  402dc0:	bl	4010f0 <strscpyl@plt>
  402dc4:	mov	w9, #0x7                   	// #7
  402dc8:	str	w9, [sp, #148]
  402dcc:	str	wzr, [sp, #144]
  402dd0:	str	wzr, [sp, #140]
  402dd4:	ldr	w9, [sp, #140]
  402dd8:	mov	w0, w9
  402ddc:	bl	401000 <log_get_max_level_realm@plt>
  402de0:	ldr	w9, [sp, #148]
  402de4:	and	w9, w9, #0x7
  402de8:	cmp	w0, w9
  402dec:	b.lt	402e78 <util_resolve_subsys_kernel+0x424>  // b.tstop
  402df0:	ldr	w8, [sp, #140]
  402df4:	ldr	w9, [sp, #148]
  402df8:	orr	w0, w9, w8, lsl #10
  402dfc:	ldr	w1, [sp, #144]
  402e00:	ldr	x6, [sp, #208]
  402e04:	ldr	x7, [sp, #200]
  402e08:	ldr	x10, [sp, #192]
  402e0c:	str	w0, [sp, #60]
  402e10:	mov	x0, x10
  402e14:	str	w1, [sp, #56]
  402e18:	str	x6, [sp, #48]
  402e1c:	str	x7, [sp, #40]
  402e20:	bl	402ef0 <strempty>
  402e24:	ldur	x10, [x29, #-24]
  402e28:	ldr	w8, [sp, #60]
  402e2c:	str	x0, [sp, #32]
  402e30:	mov	w0, w8
  402e34:	ldr	w1, [sp, #56]
  402e38:	ldr	x2, [sp, #128]
  402e3c:	mov	w3, #0x49                  	// #73
  402e40:	adrp	x4, 403000 <util_path_encode+0xd4>
  402e44:	add	x4, x4, #0xd24
  402e48:	adrp	x5, 403000 <util_path_encode+0xd4>
  402e4c:	add	x5, x5, #0xd5b
  402e50:	ldr	x6, [sp, #48]
  402e54:	ldr	x7, [sp, #40]
  402e58:	mov	x11, sp
  402e5c:	ldr	x12, [sp, #32]
  402e60:	str	x12, [x11]
  402e64:	mov	x11, sp
  402e68:	str	x10, [x11, #8]
  402e6c:	bl	401010 <log_internal_realm@plt>
  402e70:	str	w0, [sp, #28]
  402e74:	b	402e8c <util_resolve_subsys_kernel+0x438>
  402e78:	ldr	w0, [sp, #144]
  402e7c:	bl	401020 <abs@plt>
  402e80:	mov	w8, wzr
  402e84:	subs	w8, w8, w0, uxtb
  402e88:	str	w8, [sp, #28]
  402e8c:	ldr	w8, [sp, #28]
  402e90:	str	w8, [sp, #136]
  402e94:	stur	wzr, [x29, #-4]
  402e98:	mov	w8, #0x1                   	// #1
  402e9c:	str	w8, [sp, #168]
  402ea0:	add	x0, sp, #0xb8
  402ea4:	bl	402ebc <sd_device_unrefp>
  402ea8:	ldur	w0, [x29, #-4]
  402eac:	add	sp, sp, #0x500
  402eb0:	ldr	x28, [sp, #16]
  402eb4:	ldp	x29, x30, [sp], #32
  402eb8:	ret

0000000000402ebc <sd_device_unrefp>:
  402ebc:	sub	sp, sp, #0x20
  402ec0:	stp	x29, x30, [sp, #16]
  402ec4:	add	x29, sp, #0x10
  402ec8:	str	x0, [sp, #8]
  402ecc:	ldr	x8, [sp, #8]
  402ed0:	ldr	x8, [x8]
  402ed4:	cbz	x8, 402ee4 <sd_device_unrefp+0x28>
  402ed8:	ldr	x8, [sp, #8]
  402edc:	ldr	x0, [x8]
  402ee0:	bl	401100 <sd_device_unref@plt>
  402ee4:	ldp	x29, x30, [sp, #16]
  402ee8:	add	sp, sp, #0x20
  402eec:	ret

0000000000402ef0 <strempty>:
  402ef0:	sub	sp, sp, #0x20
  402ef4:	str	x0, [sp, #24]
  402ef8:	ldr	x8, [sp, #24]
  402efc:	str	x8, [sp, #16]
  402f00:	cbz	x8, 402f10 <strempty+0x20>
  402f04:	ldr	x8, [sp, #16]
  402f08:	str	x8, [sp, #8]
  402f0c:	b	402f1c <strempty+0x2c>
  402f10:	adrp	x8, 403000 <util_path_encode+0xd4>
  402f14:	add	x8, x8, #0xe36
  402f18:	str	x8, [sp, #8]
  402f1c:	ldr	x8, [sp, #8]
  402f20:	mov	x0, x8
  402f24:	add	sp, sp, #0x20
  402f28:	ret

0000000000402f2c <util_path_encode>:
  402f2c:	sub	sp, sp, #0x40
  402f30:	stp	x29, x30, [sp, #48]
  402f34:	add	x29, sp, #0x30
  402f38:	adrp	x8, 403000 <util_path_encode+0xd4>
  402f3c:	add	x8, x8, #0xd06
  402f40:	add	x8, x8, #0x3
  402f44:	stur	x0, [x29, #-8]
  402f48:	stur	x1, [x29, #-16]
  402f4c:	str	x2, [sp, #24]
  402f50:	str	x8, [sp]
  402f54:	ldur	x8, [x29, #-8]
  402f58:	cmp	x8, #0x0
  402f5c:	cset	w9, ne  // ne = any
  402f60:	mov	w10, #0x1                   	// #1
  402f64:	eor	w9, w9, #0x1
  402f68:	eor	w9, w9, w10
  402f6c:	eor	w9, w9, w10
  402f70:	and	w9, w9, #0x1
  402f74:	mov	w0, w9
  402f78:	sxtw	x8, w0
  402f7c:	cbz	x8, 402fa4 <util_path_encode+0x78>
  402f80:	mov	w8, wzr
  402f84:	mov	w0, w8
  402f88:	adrp	x1, 403000 <util_path_encode+0xd4>
  402f8c:	add	x1, x1, #0xd74
  402f90:	ldr	x2, [sp]
  402f94:	mov	w3, #0x51                  	// #81
  402f98:	adrp	x4, 403000 <util_path_encode+0xd4>
  402f9c:	add	x4, x4, #0xd78
  402fa0:	bl	401110 <log_assert_failed_realm@plt>
  402fa4:	ldur	x8, [x29, #-16]
  402fa8:	cmp	x8, #0x0
  402fac:	cset	w9, ne  // ne = any
  402fb0:	mov	w10, #0x1                   	// #1
  402fb4:	eor	w9, w9, #0x1
  402fb8:	eor	w9, w9, w10
  402fbc:	eor	w9, w9, w10
  402fc0:	and	w9, w9, #0x1
  402fc4:	mov	w0, w9
  402fc8:	sxtw	x8, w0
  402fcc:	cbz	x8, 402ff4 <util_path_encode+0xc8>
  402fd0:	mov	w8, wzr
  402fd4:	mov	w0, w8
  402fd8:	adrp	x1, 403000 <util_path_encode+0xd4>
  402fdc:	add	x1, x1, #0xdae
  402fe0:	ldr	x2, [sp]
  402fe4:	mov	w3, #0x52                  	// #82
  402fe8:	adrp	x4, 403000 <util_path_encode+0xd4>
  402fec:	add	x4, x4, #0xd78
  402ff0:	bl	401110 <log_assert_failed_realm@plt>
  402ff4:	str	xzr, [sp, #16]
  402ff8:	str	xzr, [sp, #8]
  402ffc:	ldur	x8, [x29, #-8]
  403000:	ldr	x9, [sp, #16]
  403004:	ldrb	w10, [x8, x9]
  403008:	cbz	w10, 403114 <util_path_encode+0x1e8>
  40300c:	ldur	x8, [x29, #-8]
  403010:	ldr	x9, [sp, #16]
  403014:	ldrb	w10, [x8, x9]
  403018:	cmp	w10, #0x2f
  40301c:	b.ne	403064 <util_path_encode+0x138>  // b.any
  403020:	ldr	x8, [sp, #8]
  403024:	add	x8, x8, #0x4
  403028:	ldr	x9, [sp, #24]
  40302c:	cmp	x8, x9
  403030:	b.cc	40303c <util_path_encode+0x110>  // b.lo, b.ul, b.last
  403034:	str	xzr, [sp, #8]
  403038:	b	403114 <util_path_encode+0x1e8>
  40303c:	ldur	x8, [x29, #-16]
  403040:	ldr	x9, [sp, #8]
  403044:	adrp	x10, 403000 <util_path_encode+0xd4>
  403048:	add	x10, x10, #0xdb3
  40304c:	ldr	w11, [x10]
  403050:	str	w11, [x8, x9]
  403054:	ldr	x8, [sp, #8]
  403058:	add	x8, x8, #0x4
  40305c:	str	x8, [sp, #8]
  403060:	b	403104 <util_path_encode+0x1d8>
  403064:	ldur	x8, [x29, #-8]
  403068:	ldr	x9, [sp, #16]
  40306c:	ldrb	w10, [x8, x9]
  403070:	cmp	w10, #0x5c
  403074:	b.ne	4030bc <util_path_encode+0x190>  // b.any
  403078:	ldr	x8, [sp, #8]
  40307c:	add	x8, x8, #0x4
  403080:	ldr	x9, [sp, #24]
  403084:	cmp	x8, x9
  403088:	b.cc	403094 <util_path_encode+0x168>  // b.lo, b.ul, b.last
  40308c:	str	xzr, [sp, #8]
  403090:	b	403114 <util_path_encode+0x1e8>
  403094:	ldur	x8, [x29, #-16]
  403098:	ldr	x9, [sp, #8]
  40309c:	adrp	x10, 403000 <util_path_encode+0xd4>
  4030a0:	add	x10, x10, #0xdb8
  4030a4:	ldr	w11, [x10]
  4030a8:	str	w11, [x8, x9]
  4030ac:	ldr	x8, [sp, #8]
  4030b0:	add	x8, x8, #0x4
  4030b4:	str	x8, [sp, #8]
  4030b8:	b	403104 <util_path_encode+0x1d8>
  4030bc:	ldr	x8, [sp, #8]
  4030c0:	add	x8, x8, #0x1
  4030c4:	ldr	x9, [sp, #24]
  4030c8:	cmp	x8, x9
  4030cc:	b.cc	4030d8 <util_path_encode+0x1ac>  // b.lo, b.ul, b.last
  4030d0:	str	xzr, [sp, #8]
  4030d4:	b	403114 <util_path_encode+0x1e8>
  4030d8:	ldur	x8, [x29, #-8]
  4030dc:	ldr	x9, [sp, #16]
  4030e0:	add	x8, x8, x9
  4030e4:	ldrb	w10, [x8]
  4030e8:	ldur	x8, [x29, #-16]
  4030ec:	ldr	x9, [sp, #8]
  4030f0:	add	x8, x8, x9
  4030f4:	strb	w10, [x8]
  4030f8:	ldr	x8, [sp, #8]
  4030fc:	add	x8, x8, #0x1
  403100:	str	x8, [sp, #8]
  403104:	ldr	x8, [sp, #16]
  403108:	add	x8, x8, #0x1
  40310c:	str	x8, [sp, #16]
  403110:	b	402ffc <util_path_encode+0xd0>
  403114:	ldur	x8, [x29, #-16]
  403118:	ldr	x9, [sp, #8]
  40311c:	add	x8, x8, x9
  403120:	mov	w10, #0x0                   	// #0
  403124:	strb	w10, [x8]
  403128:	ldr	x0, [sp, #8]
  40312c:	ldp	x29, x30, [sp, #48]
  403130:	add	sp, sp, #0x40
  403134:	ret

0000000000403138 <util_replace_whitespace>:
  403138:	sub	sp, sp, #0x50
  40313c:	stp	x29, x30, [sp, #64]
  403140:	add	x29, sp, #0x40
  403144:	mov	w8, #0x0                   	// #0
  403148:	adrp	x9, 403000 <util_path_encode+0xd4>
  40314c:	add	x9, x9, #0xd06
  403150:	add	x9, x9, #0x3
  403154:	stur	x0, [x29, #-8]
  403158:	stur	x1, [x29, #-16]
  40315c:	stur	x2, [x29, #-24]
  403160:	sturb	w8, [x29, #-25]
  403164:	str	x9, [sp, #8]
  403168:	ldur	x8, [x29, #-8]
  40316c:	cmp	x8, #0x0
  403170:	cset	w9, ne  // ne = any
  403174:	mov	w10, #0x1                   	// #1
  403178:	eor	w9, w9, #0x1
  40317c:	eor	w9, w9, w10
  403180:	eor	w9, w9, w10
  403184:	and	w9, w9, #0x1
  403188:	mov	w0, w9
  40318c:	sxtw	x8, w0
  403190:	cbz	x8, 4031b8 <util_replace_whitespace+0x80>
  403194:	mov	w8, wzr
  403198:	mov	w0, w8
  40319c:	adrp	x1, 403000 <util_path_encode+0xd4>
  4031a0:	add	x1, x1, #0xdbd
  4031a4:	ldr	x2, [sp, #8]
  4031a8:	mov	w3, #0x84                  	// #132
  4031ac:	adrp	x4, 403000 <util_path_encode+0xd4>
  4031b0:	add	x4, x4, #0xdc1
  4031b4:	bl	401110 <log_assert_failed_realm@plt>
  4031b8:	ldur	x8, [x29, #-16]
  4031bc:	cmp	x8, #0x0
  4031c0:	cset	w9, ne  // ne = any
  4031c4:	mov	w10, #0x1                   	// #1
  4031c8:	eor	w9, w9, #0x1
  4031cc:	eor	w9, w9, w10
  4031d0:	eor	w9, w9, w10
  4031d4:	and	w9, w9, #0x1
  4031d8:	mov	w0, w9
  4031dc:	sxtw	x8, w0
  4031e0:	cbz	x8, 403208 <util_replace_whitespace+0xd0>
  4031e4:	mov	w8, wzr
  4031e8:	mov	w0, w8
  4031ec:	adrp	x1, 403000 <util_path_encode+0xd4>
  4031f0:	add	x1, x1, #0xdfe
  4031f4:	ldr	x2, [sp, #8]
  4031f8:	mov	w3, #0x85                  	// #133
  4031fc:	adrp	x4, 403000 <util_path_encode+0xd4>
  403200:	add	x4, x4, #0xdc1
  403204:	bl	401110 <log_assert_failed_realm@plt>
  403208:	ldur	x0, [x29, #-8]
  40320c:	adrp	x1, 403000 <util_path_encode+0xd4>
  403210:	add	x1, x1, #0xe01
  403214:	bl	401120 <strspn@plt>
  403218:	str	x0, [sp, #24]
  40321c:	str	xzr, [sp, #16]
  403220:	ldr	x8, [sp, #16]
  403224:	ldur	x9, [x29, #-24]
  403228:	mov	w10, #0x0                   	// #0
  40322c:	cmp	x8, x9
  403230:	str	w10, [sp, #4]
  403234:	b.cs	403268 <util_replace_whitespace+0x130>  // b.hs, b.nlast
  403238:	ldr	x8, [sp, #24]
  40323c:	ldur	x9, [x29, #-24]
  403240:	mov	w10, #0x0                   	// #0
  403244:	cmp	x8, x9
  403248:	str	w10, [sp, #4]
  40324c:	b.cs	403268 <util_replace_whitespace+0x130>  // b.hs, b.nlast
  403250:	ldur	x8, [x29, #-8]
  403254:	ldr	x9, [sp, #24]
  403258:	ldrb	w10, [x8, x9]
  40325c:	cmp	w10, #0x0
  403260:	cset	w10, ne  // ne = any
  403264:	str	w10, [sp, #4]
  403268:	ldr	w8, [sp, #4]
  40326c:	tbnz	w8, #0, 403274 <util_replace_whitespace+0x13c>
  403270:	b	403320 <util_replace_whitespace+0x1e8>
  403274:	bl	401130 <__ctype_b_loc@plt>
  403278:	ldr	x8, [x0]
  40327c:	ldur	x9, [x29, #-8]
  403280:	ldr	x10, [sp, #24]
  403284:	ldrb	w11, [x9, x10]
  403288:	ldrh	w11, [x8, w11, sxtw #1]
  40328c:	and	w11, w11, #0x2000
  403290:	cbz	w11, 4032a0 <util_replace_whitespace+0x168>
  403294:	mov	w8, #0x1                   	// #1
  403298:	sturb	w8, [x29, #-25]
  40329c:	b	403310 <util_replace_whitespace+0x1d8>
  4032a0:	ldurb	w8, [x29, #-25]
  4032a4:	tbnz	w8, #0, 4032ac <util_replace_whitespace+0x174>
  4032a8:	b	4032e8 <util_replace_whitespace+0x1b0>
  4032ac:	ldr	x8, [sp, #16]
  4032b0:	add	x8, x8, #0x1
  4032b4:	ldur	x9, [x29, #-24]
  4032b8:	cmp	x8, x9
  4032bc:	b.cc	4032c4 <util_replace_whitespace+0x18c>  // b.lo, b.ul, b.last
  4032c0:	b	403320 <util_replace_whitespace+0x1e8>
  4032c4:	ldur	x8, [x29, #-16]
  4032c8:	ldr	x9, [sp, #16]
  4032cc:	add	x10, x9, #0x1
  4032d0:	str	x10, [sp, #16]
  4032d4:	add	x8, x8, x9
  4032d8:	mov	w11, #0x5f                  	// #95
  4032dc:	strb	w11, [x8]
  4032e0:	mov	w11, #0x0                   	// #0
  4032e4:	sturb	w11, [x29, #-25]
  4032e8:	ldur	x8, [x29, #-8]
  4032ec:	ldr	x9, [sp, #24]
  4032f0:	add	x8, x8, x9
  4032f4:	ldrb	w10, [x8]
  4032f8:	ldur	x8, [x29, #-16]
  4032fc:	ldr	x9, [sp, #16]
  403300:	add	x11, x9, #0x1
  403304:	str	x11, [sp, #16]
  403308:	add	x8, x8, x9
  40330c:	strb	w10, [x8]
  403310:	ldr	x8, [sp, #24]
  403314:	add	x8, x8, #0x1
  403318:	str	x8, [sp, #24]
  40331c:	b	403220 <util_replace_whitespace+0xe8>
  403320:	ldur	x8, [x29, #-16]
  403324:	ldr	x9, [sp, #16]
  403328:	add	x8, x8, x9
  40332c:	mov	w10, #0x0                   	// #0
  403330:	strb	w10, [x8]
  403334:	ldr	x0, [sp, #16]
  403338:	ldp	x29, x30, [sp, #64]
  40333c:	add	sp, sp, #0x50
  403340:	ret

0000000000403344 <util_replace_chars>:
  403344:	sub	sp, sp, #0x40
  403348:	stp	x29, x30, [sp, #48]
  40334c:	add	x29, sp, #0x30
  403350:	adrp	x8, 403000 <util_path_encode+0xd4>
  403354:	add	x8, x8, #0xd06
  403358:	add	x2, x8, #0x3
  40335c:	stur	x0, [x29, #-8]
  403360:	stur	x1, [x29, #-16]
  403364:	str	xzr, [sp, #24]
  403368:	str	xzr, [sp, #16]
  40336c:	str	x2, [sp]
  403370:	ldur	x8, [x29, #-8]
  403374:	cmp	x8, #0x0
  403378:	cset	w9, ne  // ne = any
  40337c:	mov	w10, #0x1                   	// #1
  403380:	eor	w9, w9, #0x1
  403384:	eor	w9, w9, w10
  403388:	eor	w9, w9, w10
  40338c:	and	w9, w9, #0x1
  403390:	mov	w0, w9
  403394:	sxtw	x8, w0
  403398:	cbz	x8, 4033c0 <util_replace_chars+0x7c>
  40339c:	mov	w8, wzr
  4033a0:	mov	w0, w8
  4033a4:	adrp	x1, 403000 <util_path_encode+0xd4>
  4033a8:	add	x1, x1, #0xdbd
  4033ac:	ldr	x2, [sp]
  4033b0:	mov	w3, #0xa1                  	// #161
  4033b4:	adrp	x4, 403000 <util_path_encode+0xd4>
  4033b8:	add	x4, x4, #0xe06
  4033bc:	bl	401110 <log_assert_failed_realm@plt>
  4033c0:	ldur	x8, [x29, #-8]
  4033c4:	ldr	x9, [sp, #24]
  4033c8:	ldrb	w10, [x8, x9]
  4033cc:	cbz	w10, 403504 <util_replace_chars+0x1c0>
  4033d0:	ldur	x8, [x29, #-8]
  4033d4:	ldr	x9, [sp, #24]
  4033d8:	ldrb	w0, [x8, x9]
  4033dc:	ldur	x1, [x29, #-16]
  4033e0:	bl	401140 <whitelisted_char_for_devnode@plt>
  4033e4:	cbz	w0, 4033f8 <util_replace_chars+0xb4>
  4033e8:	ldr	x8, [sp, #24]
  4033ec:	add	x8, x8, #0x1
  4033f0:	str	x8, [sp, #24]
  4033f4:	b	4033c0 <util_replace_chars+0x7c>
  4033f8:	ldur	x8, [x29, #-8]
  4033fc:	ldr	x9, [sp, #24]
  403400:	ldrb	w10, [x8, x9]
  403404:	cmp	w10, #0x5c
  403408:	b.ne	403434 <util_replace_chars+0xf0>  // b.any
  40340c:	ldur	x8, [x29, #-8]
  403410:	ldr	x9, [sp, #24]
  403414:	add	x9, x9, #0x1
  403418:	ldrb	w10, [x8, x9]
  40341c:	cmp	w10, #0x78
  403420:	b.ne	403434 <util_replace_chars+0xf0>  // b.any
  403424:	ldr	x8, [sp, #24]
  403428:	add	x8, x8, #0x2
  40342c:	str	x8, [sp, #24]
  403430:	b	4033c0 <util_replace_chars+0x7c>
  403434:	ldur	x8, [x29, #-8]
  403438:	ldr	x9, [sp, #24]
  40343c:	add	x0, x8, x9
  403440:	mov	x1, #0xffffffffffffffff    	// #-1
  403444:	bl	401150 <utf8_encoded_valid_unichar@plt>
  403448:	str	w0, [sp, #12]
  40344c:	ldr	w10, [sp, #12]
  403450:	cmp	w10, #0x1
  403454:	b.le	40346c <util_replace_chars+0x128>
  403458:	ldrsw	x8, [sp, #12]
  40345c:	ldr	x9, [sp, #24]
  403460:	add	x8, x9, x8
  403464:	str	x8, [sp, #24]
  403468:	b	4033c0 <util_replace_chars+0x7c>
  40346c:	bl	401130 <__ctype_b_loc@plt>
  403470:	ldr	x8, [x0]
  403474:	ldur	x9, [x29, #-8]
  403478:	ldr	x10, [sp, #24]
  40347c:	ldrb	w11, [x9, x10]
  403480:	ldrh	w11, [x8, w11, sxtw #1]
  403484:	and	w11, w11, #0x2000
  403488:	cbz	w11, 4034d4 <util_replace_chars+0x190>
  40348c:	ldur	x8, [x29, #-16]
  403490:	cbz	x8, 4034d4 <util_replace_chars+0x190>
  403494:	ldur	x0, [x29, #-16]
  403498:	mov	w1, #0x20                  	// #32
  40349c:	bl	4010b0 <strchr@plt>
  4034a0:	cbz	x0, 4034d4 <util_replace_chars+0x190>
  4034a4:	ldur	x8, [x29, #-8]
  4034a8:	ldr	x9, [sp, #24]
  4034ac:	add	x8, x8, x9
  4034b0:	mov	w10, #0x20                  	// #32
  4034b4:	strb	w10, [x8]
  4034b8:	ldr	x8, [sp, #24]
  4034bc:	add	x8, x8, #0x1
  4034c0:	str	x8, [sp, #24]
  4034c4:	ldr	x8, [sp, #16]
  4034c8:	add	x8, x8, #0x1
  4034cc:	str	x8, [sp, #16]
  4034d0:	b	4033c0 <util_replace_chars+0x7c>
  4034d4:	ldur	x8, [x29, #-8]
  4034d8:	ldr	x9, [sp, #24]
  4034dc:	add	x8, x8, x9
  4034e0:	mov	w10, #0x5f                  	// #95
  4034e4:	strb	w10, [x8]
  4034e8:	ldr	x8, [sp, #24]
  4034ec:	add	x8, x8, #0x1
  4034f0:	str	x8, [sp, #24]
  4034f4:	ldr	x8, [sp, #16]
  4034f8:	add	x8, x8, #0x1
  4034fc:	str	x8, [sp, #16]
  403500:	b	4033c0 <util_replace_chars+0x7c>
  403504:	ldr	x0, [sp, #16]
  403508:	ldp	x29, x30, [sp, #48]
  40350c:	add	sp, sp, #0x40
  403510:	ret

0000000000403514 <udev_util_encode_string>:
  403514:	sub	sp, sp, #0x30
  403518:	stp	x29, x30, [sp, #32]
  40351c:	add	x29, sp, #0x20
  403520:	stur	x0, [x29, #-8]
  403524:	str	x1, [sp, #16]
  403528:	str	x2, [sp, #8]
  40352c:	ldur	x0, [x29, #-8]
  403530:	ldr	x1, [sp, #16]
  403534:	ldr	x2, [sp, #8]
  403538:	bl	401160 <encode_devnode_name@plt>
  40353c:	ldp	x29, x30, [sp, #32]
  403540:	add	sp, sp, #0x30
  403544:	ret

0000000000403548 <__libc_csu_init>:
  403548:	stp	x29, x30, [sp, #-64]!
  40354c:	mov	x29, sp
  403550:	stp	x19, x20, [sp, #16]
  403554:	adrp	x20, 41f000 <__FRAME_END__+0x1b0c8>
  403558:	add	x20, x20, #0xcc0
  40355c:	stp	x21, x22, [sp, #32]
  403560:	adrp	x21, 41f000 <__FRAME_END__+0x1b0c8>
  403564:	add	x21, x21, #0xcb8
  403568:	sub	x20, x20, x21
  40356c:	mov	w22, w0
  403570:	stp	x23, x24, [sp, #48]
  403574:	mov	x23, x1
  403578:	mov	x24, x2
  40357c:	bl	400f48 <_init>
  403580:	cmp	xzr, x20, asr #3
  403584:	b.eq	4035b0 <__libc_csu_init+0x68>  // b.none
  403588:	asr	x20, x20, #3
  40358c:	mov	x19, #0x0                   	// #0
  403590:	ldr	x3, [x21, x19, lsl #3]
  403594:	mov	x2, x24
  403598:	add	x19, x19, #0x1
  40359c:	mov	x1, x23
  4035a0:	mov	w0, w22
  4035a4:	blr	x3
  4035a8:	cmp	x20, x19
  4035ac:	b.ne	403590 <__libc_csu_init+0x48>  // b.any
  4035b0:	ldp	x19, x20, [sp, #16]
  4035b4:	ldp	x21, x22, [sp, #32]
  4035b8:	ldp	x23, x24, [sp, #48]
  4035bc:	ldp	x29, x30, [sp], #64
  4035c0:	ret
  4035c4:	nop

00000000004035c8 <__libc_csu_fini>:
  4035c8:	ret

Disassembly of section .fini:

00000000004035cc <_fini>:
  4035cc:	stp	x29, x30, [sp, #-16]!
  4035d0:	mov	x29, sp
  4035d4:	ldp	x29, x30, [sp], #16
  4035d8:	ret
