
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//re.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004e10 <.init>:
    4e10:	stp	x29, x30, [sp, #-16]!
    4e14:	mov	x29, sp
    4e18:	bl	5a10 <Perl__inverse_folds@plt+0x10>
    4e1c:	ldp	x29, x30, [sp], #16
    4e20:	ret

Disassembly of section .plt:

0000000000004e30 <Perl_save_sptr@plt-0x20>:
    4e30:	stp	x16, x30, [sp, #-16]!
    4e34:	adrp	x16, 91000 <boot_re@@Base+0x2f41c>
    4e38:	ldr	x17, [x16, #4088]
    4e3c:	add	x16, x16, #0xff8
    4e40:	br	x17
    4e44:	nop
    4e48:	nop
    4e4c:	nop

0000000000004e50 <Perl_save_sptr@plt>:
    4e50:	adrp	x16, 92000 <Perl_save_sptr>
    4e54:	ldr	x17, [x16]
    4e58:	add	x16, x16, #0x0
    4e5c:	br	x17

0000000000004e60 <memcpy@plt>:
    4e60:	adrp	x16, 92000 <Perl_save_sptr>
    4e64:	ldr	x17, [x16, #8]
    4e68:	add	x16, x16, #0x8
    4e6c:	br	x17

0000000000004e70 <memmove@plt>:
    4e70:	adrp	x16, 92000 <Perl_save_sptr>
    4e74:	ldr	x17, [x16, #16]
    4e78:	add	x16, x16, #0x10
    4e7c:	br	x17

0000000000004e80 <Perl_rninstr@plt>:
    4e80:	adrp	x16, 92000 <Perl_save_sptr>
    4e84:	ldr	x17, [x16, #24]
    4e88:	add	x16, x16, #0x18
    4e8c:	br	x17

0000000000004e90 <Perl_get_re_arg@plt>:
    4e90:	adrp	x16, 92000 <Perl_save_sptr>
    4e94:	ldr	x17, [x16, #32]
    4e98:	add	x16, x16, #0x20
    4e9c:	br	x17

0000000000004ea0 <Perl_sv_2iv_flags@plt>:
    4ea0:	adrp	x16, 92000 <Perl_save_sptr>
    4ea4:	ldr	x17, [x16, #40]
    4ea8:	add	x16, x16, #0x28
    4eac:	br	x17

0000000000004eb0 <Perl_repeatcpy@plt>:
    4eb0:	adrp	x16, 92000 <Perl_save_sptr>
    4eb4:	ldr	x17, [x16, #48]
    4eb8:	add	x16, x16, #0x30
    4ebc:	br	x17

0000000000004ec0 <Perl_sv_2bool_flags@plt>:
    4ec0:	adrp	x16, 92000 <Perl_save_sptr>
    4ec4:	ldr	x17, [x16, #56]
    4ec8:	add	x16, x16, #0x38
    4ecc:	br	x17

0000000000004ed0 <strlen@plt>:
    4ed0:	adrp	x16, 92000 <Perl_save_sptr>
    4ed4:	ldr	x17, [x16, #64]
    4ed8:	add	x16, x16, #0x40
    4edc:	br	x17

0000000000004ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>:
    4ee0:	adrp	x16, 92000 <Perl_save_sptr>
    4ee4:	ldr	x17, [x16, #72]
    4ee8:	add	x16, x16, #0x48
    4eec:	br	x17

0000000000004ef0 <Perl_sv_pvn_force_flags@plt>:
    4ef0:	adrp	x16, 92000 <Perl_save_sptr>
    4ef4:	ldr	x17, [x16, #80]
    4ef8:	add	x16, x16, #0x50
    4efc:	br	x17

0000000000004f00 <Perl_newRV_noinc@plt>:
    4f00:	adrp	x16, 92000 <Perl_save_sptr>
    4f04:	ldr	x17, [x16, #88]
    4f08:	add	x16, x16, #0x58
    4f0c:	br	x17

0000000000004f10 <Perl_mg_find_mglob@plt>:
    4f10:	adrp	x16, 92000 <Perl_save_sptr>
    4f14:	ldr	x17, [x16, #96]
    4f18:	add	x16, x16, #0x60
    4f1c:	br	x17

0000000000004f20 <Perl_grok_atoUV@plt>:
    4f20:	adrp	x16, 92000 <Perl_save_sptr>
    4f24:	ldr	x17, [x16, #104]
    4f28:	add	x16, x16, #0x68
    4f2c:	br	x17

0000000000004f30 <Perl_sv_2uv_flags@plt>:
    4f30:	adrp	x16, 92000 <Perl_save_sptr>
    4f34:	ldr	x17, [x16, #112]
    4f38:	add	x16, x16, #0x70
    4f3c:	br	x17

0000000000004f40 <Perl_stack_grow@plt>:
    4f40:	adrp	x16, 92000 <Perl_save_sptr>
    4f44:	ldr	x17, [x16, #120]
    4f48:	add	x16, x16, #0x78
    4f4c:	br	x17

0000000000004f50 <Perl__force_out_malformed_utf8_message@plt>:
    4f50:	adrp	x16, 92000 <Perl_save_sptr>
    4f54:	ldr	x17, [x16, #128]
    4f58:	add	x16, x16, #0x80
    4f5c:	br	x17

0000000000004f60 <Perl_sv_catpvn_flags@plt>:
    4f60:	adrp	x16, 92000 <Perl_save_sptr>
    4f64:	ldr	x17, [x16, #136]
    4f68:	add	x16, x16, #0x88
    4f6c:	br	x17

0000000000004f70 <Perl_deb@plt>:
    4f70:	adrp	x16, 92000 <Perl_save_sptr>
    4f74:	ldr	x17, [x16, #144]
    4f78:	add	x16, x16, #0x90
    4f7c:	br	x17

0000000000004f80 <Perl_get_and_check_backslash_N_name@plt>:
    4f80:	adrp	x16, 92000 <Perl_save_sptr>
    4f84:	ldr	x17, [x16, #152]
    4f88:	add	x16, x16, #0x98
    4f8c:	br	x17

0000000000004f90 <Perl_sv_utf8_downgrade@plt>:
    4f90:	adrp	x16, 92000 <Perl_save_sptr>
    4f94:	ldr	x17, [x16, #160]
    4f98:	add	x16, x16, #0xa0
    4f9c:	br	x17

0000000000004fa0 <Perl_newSVhek@plt>:
    4fa0:	adrp	x16, 92000 <Perl_save_sptr>
    4fa4:	ldr	x17, [x16, #168]
    4fa8:	add	x16, x16, #0xa8
    4fac:	br	x17

0000000000004fb0 <__cxa_finalize@plt>:
    4fb0:	adrp	x16, 92000 <Perl_save_sptr>
    4fb4:	ldr	x17, [x16, #176]
    4fb8:	add	x16, x16, #0xb0
    4fbc:	br	x17

0000000000004fc0 <Perl_pop_scope@plt>:
    4fc0:	adrp	x16, 92000 <Perl_save_sptr>
    4fc4:	ldr	x17, [x16, #184]
    4fc8:	add	x16, x16, #0xb8
    4fcc:	br	x17

0000000000004fd0 <Perl_av_shift@plt>:
    4fd0:	adrp	x16, 92000 <Perl_save_sptr>
    4fd4:	ldr	x17, [x16, #192]
    4fd8:	add	x16, x16, #0xc0
    4fdc:	br	x17

0000000000004fe0 <my_regdump@plt>:
    4fe0:	adrp	x16, 92000 <Perl_save_sptr>
    4fe4:	ldr	x17, [x16, #200]
    4fe8:	add	x16, x16, #0xc8
    4fec:	br	x17

0000000000004ff0 <Perl__is_utf8_perl_idstart_with_len@plt>:
    4ff0:	adrp	x16, 92000 <Perl_save_sptr>
    4ff4:	ldr	x17, [x16, #208]
    4ff8:	add	x16, x16, #0xd0
    4ffc:	br	x17

0000000000005000 <Perl_parse_uniprop_string@plt>:
    5000:	adrp	x16, 92000 <Perl_save_sptr>
    5004:	ldr	x17, [x16, #216]
    5008:	add	x16, x16, #0xd8
    500c:	br	x17

0000000000005010 <Perl_warn_nocontext@plt>:
    5010:	adrp	x16, 92000 <Perl_save_sptr>
    5014:	ldr	x17, [x16, #224]
    5018:	add	x16, x16, #0xe0
    501c:	br	x17

0000000000005020 <Perl_newSV@plt>:
    5020:	adrp	x16, 92000 <Perl_save_sptr>
    5024:	ldr	x17, [x16, #232]
    5028:	add	x16, x16, #0xe8
    502c:	br	x17

0000000000005030 <Perl_pad_push@plt>:
    5030:	adrp	x16, 92000 <Perl_save_sptr>
    5034:	ldr	x17, [x16, #240]
    5038:	add	x16, x16, #0xf0
    503c:	br	x17

0000000000005040 <__ctype_tolower_loc@plt>:
    5040:	adrp	x16, 92000 <Perl_save_sptr>
    5044:	ldr	x17, [x16, #248]
    5048:	add	x16, x16, #0xf8
    504c:	br	x17

0000000000005050 <Perl__warn_problematic_locale@plt>:
    5050:	adrp	x16, 92000 <Perl_save_sptr>
    5054:	ldr	x17, [x16, #256]
    5058:	add	x16, x16, #0x100
    505c:	br	x17

0000000000005060 <Perl_fbm_instr@plt>:
    5060:	adrp	x16, 92000 <Perl_save_sptr>
    5064:	ldr	x17, [x16, #264]
    5068:	add	x16, x16, #0x108
    506c:	br	x17

0000000000005070 <Perl_sv_magicext_mglob@plt>:
    5070:	adrp	x16, 92000 <Perl_save_sptr>
    5074:	ldr	x17, [x16, #272]
    5078:	add	x16, x16, #0x110
    507c:	br	x17

0000000000005080 <Perl_custom_op_get_field@plt>:
    5080:	adrp	x16, 92000 <Perl_save_sptr>
    5084:	ldr	x17, [x16, #280]
    5088:	add	x16, x16, #0x118
    508c:	br	x17

0000000000005090 <Perl__new_invlist@plt>:
    5090:	adrp	x16, 92000 <Perl_save_sptr>
    5094:	ldr	x17, [x16, #288]
    5098:	add	x16, x16, #0x120
    509c:	br	x17

00000000000050a0 <Perl_sv_force_normal_flags@plt>:
    50a0:	adrp	x16, 92000 <Perl_save_sptr>
    50a4:	ldr	x17, [x16, #296]
    50a8:	add	x16, x16, #0x128
    50ac:	br	x17

00000000000050b0 <__memcpy_chk@plt>:
    50b0:	adrp	x16, 92000 <Perl_save_sptr>
    50b4:	ldr	x17, [x16, #304]
    50b8:	add	x16, x16, #0x130
    50bc:	br	x17

00000000000050c0 <Perl_require_pv@plt>:
    50c0:	adrp	x16, 92000 <Perl_save_sptr>
    50c4:	ldr	x17, [x16, #312]
    50c8:	add	x16, x16, #0x138
    50cc:	br	x17

00000000000050d0 <Perl_vmess@plt>:
    50d0:	adrp	x16, 92000 <Perl_save_sptr>
    50d4:	ldr	x17, [x16, #320]
    50d8:	add	x16, x16, #0x140
    50dc:	br	x17

00000000000050e0 <Perl_re_printf@plt>:
    50e0:	adrp	x16, 92000 <Perl_save_sptr>
    50e4:	ldr	x17, [x16, #328]
    50e8:	add	x16, x16, #0x148
    50ec:	br	x17

00000000000050f0 <Perl_was_lvalue_sub@plt>:
    50f0:	adrp	x16, 92000 <Perl_save_sptr>
    50f4:	ldr	x17, [x16, #336]
    50f8:	add	x16, x16, #0x150
    50fc:	br	x17

0000000000005100 <malloc@plt>:
    5100:	adrp	x16, 92000 <Perl_save_sptr>
    5104:	ldr	x17, [x16, #344]
    5108:	add	x16, x16, #0x158
    510c:	br	x17

0000000000005110 <Perl_warner@plt>:
    5110:	adrp	x16, 92000 <Perl_save_sptr>
    5114:	ldr	x17, [x16, #352]
    5118:	add	x16, x16, #0x160
    511c:	br	x17

0000000000005120 <Perl_sv_catpvf@plt>:
    5120:	adrp	x16, 92000 <Perl_save_sptr>
    5124:	ldr	x17, [x16, #360]
    5128:	add	x16, x16, #0x168
    512c:	br	x17

0000000000005130 <Perl_sv_upgrade@plt>:
    5130:	adrp	x16, 92000 <Perl_save_sptr>
    5134:	ldr	x17, [x16, #368]
    5138:	add	x16, x16, #0x170
    513c:	br	x17

0000000000005140 <Perl_sv_pos_u2b_flags@plt>:
    5140:	adrp	x16, 92000 <Perl_save_sptr>
    5144:	ldr	x17, [x16, #376]
    5148:	add	x16, x16, #0x178
    514c:	br	x17

0000000000005150 <Perl_ck_warner@plt>:
    5150:	adrp	x16, 92000 <Perl_save_sptr>
    5154:	ldr	x17, [x16, #384]
    5158:	add	x16, x16, #0x180
    515c:	br	x17

0000000000005160 <Perl_fbm_compile@plt>:
    5160:	adrp	x16, 92000 <Perl_save_sptr>
    5164:	ldr	x17, [x16, #392]
    5168:	add	x16, x16, #0x188
    516c:	br	x17

0000000000005170 <Perl_sv_dup_inc@plt>:
    5170:	adrp	x16, 92000 <Perl_save_sptr>
    5174:	ldr	x17, [x16, #400]
    5178:	add	x16, x16, #0x190
    517c:	br	x17

0000000000005180 <Perl_reg_temp_copy@plt>:
    5180:	adrp	x16, 92000 <Perl_save_sptr>
    5184:	ldr	x17, [x16, #408]
    5188:	add	x16, x16, #0x198
    518c:	br	x17

0000000000005190 <Perl__is_utf8_char_helper@plt>:
    5190:	adrp	x16, 92000 <Perl_save_sptr>
    5194:	ldr	x17, [x16, #416]
    5198:	add	x16, x16, #0x1a0
    519c:	br	x17

00000000000051a0 <Perl_av_store@plt>:
    51a0:	adrp	x16, 92000 <Perl_save_sptr>
    51a4:	ldr	x17, [x16, #424]
    51a8:	add	x16, x16, #0x1a8
    51ac:	br	x17

00000000000051b0 <strncmp@plt>:
    51b0:	adrp	x16, 92000 <Perl_save_sptr>
    51b4:	ldr	x17, [x16, #432]
    51b8:	add	x16, x16, #0x1b0
    51bc:	br	x17

00000000000051c0 <Perl_sv_chop@plt>:
    51c0:	adrp	x16, 92000 <Perl_save_sptr>
    51c4:	ldr	x17, [x16, #440]
    51c8:	add	x16, x16, #0x1b8
    51cc:	br	x17

00000000000051d0 <my_reg_named_buff_firstkey@plt>:
    51d0:	adrp	x16, 92000 <Perl_save_sptr>
    51d4:	ldr	x17, [x16, #448]
    51d8:	add	x16, x16, #0x1c0
    51dc:	br	x17

00000000000051e0 <Perl_savestack_grow_cnt@plt>:
    51e0:	adrp	x16, 92000 <Perl_save_sptr>
    51e4:	ldr	x17, [x16, #456]
    51e8:	add	x16, x16, #0x1c8
    51ec:	br	x17

00000000000051f0 <memset@plt>:
    51f0:	adrp	x16, 92000 <Perl_save_sptr>
    51f4:	ldr	x17, [x16, #464]
    51f8:	add	x16, x16, #0x1d0
    51fc:	br	x17

0000000000005200 <Perl_sv_2pv_flags@plt>:
    5200:	adrp	x16, 92000 <Perl_save_sptr>
    5204:	ldr	x17, [x16, #472]
    5208:	add	x16, x16, #0x1d8
    520c:	br	x17

0000000000005210 <Perl_xs_boot_epilog@plt>:
    5210:	adrp	x16, 92000 <Perl_save_sptr>
    5214:	ldr	x17, [x16, #480]
    5218:	add	x16, x16, #0x1e0
    521c:	br	x17

0000000000005220 <Perl_sv_setsv_cow@plt>:
    5220:	adrp	x16, 92000 <Perl_save_sptr>
    5224:	ldr	x17, [x16, #488]
    5228:	add	x16, x16, #0x1e8
    522c:	br	x17

0000000000005230 <Perl_hv_iternext_flags@plt>:
    5230:	adrp	x16, 92000 <Perl_save_sptr>
    5234:	ldr	x17, [x16, #496]
    5238:	add	x16, x16, #0x1f0
    523c:	br	x17

0000000000005240 <Perl_grok_bslash_c@plt>:
    5240:	adrp	x16, 92000 <Perl_save_sptr>
    5244:	ldr	x17, [x16, #504]
    5248:	add	x16, x16, #0x1f8
    524c:	br	x17

0000000000005250 <Perl_safesysmalloc@plt>:
    5250:	adrp	x16, 92000 <Perl_save_sptr>
    5254:	ldr	x17, [x16, #512]
    5258:	add	x16, x16, #0x200
    525c:	br	x17

0000000000005260 <my_re_intuit_start@plt>:
    5260:	adrp	x16, 92000 <Perl_save_sptr>
    5264:	ldr	x17, [x16, #520]
    5268:	add	x16, x16, #0x208
    526c:	br	x17

0000000000005270 <Perl_sv_untaint@plt>:
    5270:	adrp	x16, 92000 <Perl_save_sptr>
    5274:	ldr	x17, [x16, #528]
    5278:	add	x16, x16, #0x210
    527c:	br	x17

0000000000005280 <calloc@plt>:
    5280:	adrp	x16, 92000 <Perl_save_sptr>
    5284:	ldr	x17, [x16, #536]
    5288:	add	x16, x16, #0x218
    528c:	br	x17

0000000000005290 <Perl_re_exec_indentf@plt>:
    5290:	adrp	x16, 92000 <Perl_save_sptr>
    5294:	ldr	x17, [x16, #544]
    5298:	add	x16, x16, #0x220
    529c:	br	x17

00000000000052a0 <Perl_ckwarn_d@plt>:
    52a0:	adrp	x16, 92000 <Perl_save_sptr>
    52a4:	ldr	x17, [x16, #552]
    52a8:	add	x16, x16, #0x228
    52ac:	br	x17

00000000000052b0 <Perl__invlist_invert@plt>:
    52b0:	adrp	x16, 92000 <Perl_save_sptr>
    52b4:	ldr	x17, [x16, #560]
    52b8:	add	x16, x16, #0x230
    52bc:	br	x17

00000000000052c0 <Perl_grok_bslash_o@plt>:
    52c0:	adrp	x16, 92000 <Perl_save_sptr>
    52c4:	ldr	x17, [x16, #568]
    52c8:	add	x16, x16, #0x238
    52cc:	br	x17

00000000000052d0 <realloc@plt>:
    52d0:	adrp	x16, 92000 <Perl_save_sptr>
    52d4:	ldr	x17, [x16, #576]
    52d8:	add	x16, x16, #0x240
    52dc:	br	x17

00000000000052e0 <Perl_grok_oct@plt>:
    52e0:	adrp	x16, 92000 <Perl_save_sptr>
    52e4:	ldr	x17, [x16, #584]
    52e8:	add	x16, x16, #0x248
    52ec:	br	x17

00000000000052f0 <Perl_cxinc@plt>:
    52f0:	adrp	x16, 92000 <Perl_save_sptr>
    52f4:	ldr	x17, [x16, #592]
    52f8:	add	x16, x16, #0x250
    52fc:	br	x17

0000000000005300 <__stack_chk_fail@plt>:
    5300:	adrp	x16, 92000 <Perl_save_sptr>
    5304:	ldr	x17, [x16, #600]
    5308:	add	x16, x16, #0x258
    530c:	br	x17

0000000000005310 <Perl_sv_setuv@plt>:
    5310:	adrp	x16, 92000 <Perl_save_sptr>
    5314:	ldr	x17, [x16, #608]
    5318:	add	x16, x16, #0x260
    531c:	br	x17

0000000000005320 <Perl__to_uni_fold_flags@plt>:
    5320:	adrp	x16, 92000 <Perl_save_sptr>
    5324:	ldr	x17, [x16, #616]
    5328:	add	x16, x16, #0x268
    532c:	br	x17

0000000000005330 <Perl__to_utf8_fold_flags@plt>:
    5330:	adrp	x16, 92000 <Perl_save_sptr>
    5334:	ldr	x17, [x16, #624]
    5338:	add	x16, x16, #0x270
    533c:	br	x17

0000000000005340 <Perl_sv_mortalcopy_flags@plt>:
    5340:	adrp	x16, 92000 <Perl_save_sptr>
    5344:	ldr	x17, [x16, #632]
    5348:	add	x16, x16, #0x278
    534c:	br	x17

0000000000005350 <Perl_isFOO_lc@plt>:
    5350:	adrp	x16, 92000 <Perl_save_sptr>
    5354:	ldr	x17, [x16, #640]
    5358:	add	x16, x16, #0x280
    535c:	br	x17

0000000000005360 <__gmon_start__@plt>:
    5360:	adrp	x16, 92000 <Perl_save_sptr>
    5364:	ldr	x17, [x16, #648]
    5368:	add	x16, x16, #0x288
    536c:	br	x17

0000000000005370 <Perl_amagic_call@plt>:
    5370:	adrp	x16, 92000 <Perl_save_sptr>
    5374:	ldr	x17, [x16, #656]
    5378:	add	x16, x16, #0x290
    537c:	br	x17

0000000000005380 <Perl_croak_xs_usage@plt>:
    5380:	adrp	x16, 92000 <Perl_save_sptr>
    5384:	ldr	x17, [x16, #664]
    5388:	add	x16, x16, #0x298
    538c:	br	x17

0000000000005390 <Perl_newSVpvn_flags@plt>:
    5390:	adrp	x16, 92000 <Perl_save_sptr>
    5394:	ldr	x17, [x16, #672]
    5398:	add	x16, x16, #0x2a0
    539c:	br	x17

00000000000053a0 <Perl__invlistEQ@plt>:
    53a0:	adrp	x16, 92000 <Perl_save_sptr>
    53a4:	ldr	x17, [x16, #680]
    53a8:	add	x16, x16, #0x2a8
    53ac:	br	x17

00000000000053b0 <Perl_savetmps@plt>:
    53b0:	adrp	x16, 92000 <Perl_save_sptr>
    53b4:	ldr	x17, [x16, #688]
    53b8:	add	x16, x16, #0x2b0
    53bc:	br	x17

00000000000053c0 <Perl_sv_grow@plt>:
    53c0:	adrp	x16, 92000 <Perl_save_sptr>
    53c4:	ldr	x17, [x16, #696]
    53c8:	add	x16, x16, #0x2b8
    53cc:	br	x17

00000000000053d0 <Perl_sv_utf8_upgrade_flags_grow@plt>:
    53d0:	adrp	x16, 92000 <Perl_save_sptr>
    53d4:	ldr	x17, [x16, #704]
    53d8:	add	x16, x16, #0x2c0
    53dc:	br	x17

00000000000053e0 <Perl_mg_size@plt>:
    53e0:	adrp	x16, 92000 <Perl_save_sptr>
    53e4:	ldr	x17, [x16, #712]
    53e8:	add	x16, x16, #0x2c8
    53ec:	br	x17

00000000000053f0 <Perl_pv_pretty@plt>:
    53f0:	adrp	x16, 92000 <Perl_save_sptr>
    53f4:	ldr	x17, [x16, #720]
    53f8:	add	x16, x16, #0x2d0
    53fc:	br	x17

0000000000005400 <Perl_foldEQ_utf8_flags@plt>:
    5400:	adrp	x16, 92000 <Perl_save_sptr>
    5404:	ldr	x17, [x16, #728]
    5408:	add	x16, x16, #0x2d8
    540c:	br	x17

0000000000005410 <Perl_croak_no_modify@plt>:
    5410:	adrp	x16, 92000 <Perl_save_sptr>
    5414:	ldr	x17, [x16, #736]
    5418:	add	x16, x16, #0x2e0
    541c:	br	x17

0000000000005420 <Perl_croak@plt>:
    5420:	adrp	x16, 92000 <Perl_save_sptr>
    5424:	ldr	x17, [x16, #744]
    5428:	add	x16, x16, #0x2e8
    542c:	br	x17

0000000000005430 <Perl_av_push@plt>:
    5430:	adrp	x16, 92000 <Perl_save_sptr>
    5434:	ldr	x17, [x16, #752]
    5438:	add	x16, x16, #0x2f0
    543c:	br	x17

0000000000005440 <Perl_sv_eq_flags@plt>:
    5440:	adrp	x16, 92000 <Perl_save_sptr>
    5444:	ldr	x17, [x16, #760]
    5448:	add	x16, x16, #0x2f8
    544c:	br	x17

0000000000005450 <Perl__add_range_to_invlist@plt>:
    5450:	adrp	x16, 92000 <Perl_save_sptr>
    5454:	ldr	x17, [x16, #768]
    5458:	add	x16, x16, #0x300
    545c:	br	x17

0000000000005460 <memcmp@plt>:
    5460:	adrp	x16, 92000 <Perl_save_sptr>
    5464:	ldr	x17, [x16, #776]
    5468:	add	x16, x16, #0x308
    546c:	br	x17

0000000000005470 <my_reg_named_buff_nextkey@plt>:
    5470:	adrp	x16, 92000 <Perl_save_sptr>
    5474:	ldr	x17, [x16, #784]
    5478:	add	x16, x16, #0x310
    547c:	br	x17

0000000000005480 <PerlIO_vprintf@plt>:
    5480:	adrp	x16, 92000 <Perl_save_sptr>
    5484:	ldr	x17, [x16, #792]
    5488:	add	x16, x16, #0x318
    548c:	br	x17

0000000000005490 <Perl_gv_fetchpvn_flags@plt>:
    5490:	adrp	x16, 92000 <Perl_save_sptr>
    5494:	ldr	x17, [x16, #800]
    5498:	add	x16, x16, #0x320
    549c:	br	x17

00000000000054a0 <strcmp@plt>:
    54a0:	adrp	x16, 92000 <Perl_save_sptr>
    54a4:	ldr	x17, [x16, #808]
    54a8:	add	x16, x16, #0x328
    54ac:	br	x17

00000000000054b0 <Perl_save_pushptr@plt>:
    54b0:	adrp	x16, 92000 <Perl_save_sptr>
    54b4:	ldr	x17, [x16, #816]
    54b8:	add	x16, x16, #0x330
    54bc:	br	x17

00000000000054c0 <Perl_safesyscalloc@plt>:
    54c0:	adrp	x16, 92000 <Perl_save_sptr>
    54c4:	ldr	x17, [x16, #824]
    54c8:	add	x16, x16, #0x338
    54cc:	br	x17

00000000000054d0 <__ctype_b_loc@plt>:
    54d0:	adrp	x16, 92000 <Perl_save_sptr>
    54d4:	ldr	x17, [x16, #832]
    54d8:	add	x16, x16, #0x340
    54dc:	br	x17

00000000000054e0 <Perl_reginitcolors@plt>:
    54e0:	adrp	x16, 92000 <Perl_save_sptr>
    54e4:	ldr	x17, [x16, #840]
    54e8:	add	x16, x16, #0x348
    54ec:	br	x17

00000000000054f0 <Perl_get_sv@plt>:
    54f0:	adrp	x16, 92000 <Perl_save_sptr>
    54f4:	ldr	x17, [x16, #848]
    54f8:	add	x16, x16, #0x350
    54fc:	br	x17

0000000000005500 <Perl_invlist_clone@plt>:
    5500:	adrp	x16, 92000 <Perl_save_sptr>
    5504:	ldr	x17, [x16, #856]
    5508:	add	x16, x16, #0x358
    550c:	br	x17

0000000000005510 <Perl_av_pop@plt>:
    5510:	adrp	x16, 92000 <Perl_save_sptr>
    5514:	ldr	x17, [x16, #864]
    5518:	add	x16, x16, #0x360
    551c:	br	x17

0000000000005520 <Perl_new_stackinfo@plt>:
    5520:	adrp	x16, 92000 <Perl_save_sptr>
    5524:	ldr	x17, [x16, #872]
    5528:	add	x16, x16, #0x368
    552c:	br	x17

0000000000005530 <Perl_croak_nocontext@plt>:
    5530:	adrp	x16, 92000 <Perl_save_sptr>
    5534:	ldr	x17, [x16, #880]
    5538:	add	x16, x16, #0x370
    553c:	br	x17

0000000000005540 <Perl_newXS_deffile@plt>:
    5540:	adrp	x16, 92000 <Perl_save_sptr>
    5544:	ldr	x17, [x16, #888]
    5548:	add	x16, x16, #0x378
    554c:	br	x17

0000000000005550 <free@plt>:
    5550:	adrp	x16, 92000 <Perl_save_sptr>
    5554:	ldr	x17, [x16, #896]
    5558:	add	x16, x16, #0x380
    555c:	br	x17

0000000000005560 <Perl_sv_peek@plt>:
    5560:	adrp	x16, 92000 <Perl_save_sptr>
    5564:	ldr	x17, [x16, #904]
    5568:	add	x16, x16, #0x388
    556c:	br	x17

0000000000005570 <my_reg_named_buff_all@plt>:
    5570:	adrp	x16, 92000 <Perl_save_sptr>
    5574:	ldr	x17, [x16, #912]
    5578:	add	x16, x16, #0x390
    557c:	br	x17

0000000000005580 <my_regprop@plt>:
    5580:	adrp	x16, 92000 <Perl_save_sptr>
    5584:	ldr	x17, [x16, #920]
    5588:	add	x16, x16, #0x398
    558c:	br	x17

0000000000005590 <Perl_mg_set@plt>:
    5590:	adrp	x16, 92000 <Perl_save_sptr>
    5594:	ldr	x17, [x16, #928]
    5598:	add	x16, x16, #0x3a0
    559c:	br	x17

00000000000055a0 <Perl_hv_iterinit@plt>:
    55a0:	adrp	x16, 92000 <Perl_save_sptr>
    55a4:	ldr	x17, [x16, #936]
    55a8:	add	x16, x16, #0x3a8
    55ac:	br	x17

00000000000055b0 <Perl_sv_setsv_flags@plt>:
    55b0:	adrp	x16, 92000 <Perl_save_sptr>
    55b4:	ldr	x17, [x16, #944]
    55b8:	add	x16, x16, #0x3b0
    55bc:	br	x17

00000000000055c0 <Perl_newXS_flags@plt>:
    55c0:	adrp	x16, 92000 <Perl_save_sptr>
    55c4:	ldr	x17, [x16, #952]
    55c8:	add	x16, x16, #0x3b8
    55cc:	br	x17

00000000000055d0 <Perl_sv_2mortal@plt>:
    55d0:	adrp	x16, 92000 <Perl_save_sptr>
    55d4:	ldr	x17, [x16, #960]
    55d8:	add	x16, x16, #0x3c0
    55dc:	br	x17

00000000000055e0 <Perl_mg_get@plt>:
    55e0:	adrp	x16, 92000 <Perl_save_sptr>
    55e4:	ldr	x17, [x16, #968]
    55e8:	add	x16, x16, #0x3c8
    55ec:	br	x17

00000000000055f0 <Perl_form@plt>:
    55f0:	adrp	x16, 92000 <Perl_save_sptr>
    55f4:	ldr	x17, [x16, #976]
    55f8:	add	x16, x16, #0x3d0
    55fc:	br	x17

0000000000005600 <Perl_hv_common@plt>:
    5600:	adrp	x16, 92000 <Perl_save_sptr>
    5604:	ldr	x17, [x16, #984]
    5608:	add	x16, x16, #0x3d8
    560c:	br	x17

0000000000005610 <strchr@plt>:
    5610:	adrp	x16, 92000 <Perl_save_sptr>
    5614:	ldr	x17, [x16, #992]
    5618:	add	x16, x16, #0x3e0
    561c:	br	x17

0000000000005620 <Perl_find_runcv@plt>:
    5620:	adrp	x16, 92000 <Perl_save_sptr>
    5624:	ldr	x17, [x16, #1000]
    5628:	add	x16, x16, #0x3e8
    562c:	br	x17

0000000000005630 <Perl_ck_warner_d@plt>:
    5630:	adrp	x16, 92000 <Perl_save_sptr>
    5634:	ldr	x17, [x16, #1008]
    5638:	add	x16, x16, #0x3f0
    563c:	br	x17

0000000000005640 <Perl_newSVuv@plt>:
    5640:	adrp	x16, 92000 <Perl_save_sptr>
    5644:	ldr	x17, [x16, #1016]
    5648:	add	x16, x16, #0x3f8
    564c:	br	x17

0000000000005650 <Perl_safesysfree@plt>:
    5650:	adrp	x16, 92000 <Perl_save_sptr>
    5654:	ldr	x17, [x16, #1024]
    5658:	add	x16, x16, #0x400
    565c:	br	x17

0000000000005660 <Perl_leave_scope@plt>:
    5660:	adrp	x16, 92000 <Perl_save_sptr>
    5664:	ldr	x17, [x16, #1032]
    5668:	add	x16, x16, #0x408
    566c:	br	x17

0000000000005670 <Perl_safesysrealloc@plt>:
    5670:	adrp	x16, 92000 <Perl_save_sptr>
    5674:	ldr	x17, [x16, #1040]
    5678:	add	x16, x16, #0x410
    567c:	br	x17

0000000000005680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>:
    5680:	adrp	x16, 92000 <Perl_save_sptr>
    5684:	ldr	x17, [x16, #1048]
    5688:	add	x16, x16, #0x418
    568c:	br	x17

0000000000005690 <Perl_sv_catsv_flags@plt>:
    5690:	adrp	x16, 92000 <Perl_save_sptr>
    5694:	ldr	x17, [x16, #1056]
    5698:	add	x16, x16, #0x420
    569c:	br	x17

00000000000056a0 <Perl_av_undef@plt>:
    56a0:	adrp	x16, 92000 <Perl_save_sptr>
    56a4:	ldr	x17, [x16, #1064]
    56a8:	add	x16, x16, #0x428
    56ac:	br	x17

00000000000056b0 <Perl_isSCRIPT_RUN@plt>:
    56b0:	adrp	x16, 92000 <Perl_save_sptr>
    56b4:	ldr	x17, [x16, #1072]
    56b8:	add	x16, x16, #0x430
    56bc:	br	x17

00000000000056c0 <Perl_save_re_context@plt>:
    56c0:	adrp	x16, 92000 <Perl_save_sptr>
    56c4:	ldr	x17, [x16, #1080]
    56c8:	add	x16, x16, #0x438
    56cc:	br	x17

00000000000056d0 <Perl_xs_handshake@plt>:
    56d0:	adrp	x16, 92000 <Perl_save_sptr>
    56d4:	ldr	x17, [x16, #1088]
    56d8:	add	x16, x16, #0x440
    56dc:	br	x17

00000000000056e0 <my_reg_named_buff_scalar@plt>:
    56e0:	adrp	x16, 92000 <Perl_save_sptr>
    56e4:	ldr	x17, [x16, #1096]
    56e8:	add	x16, x16, #0x448
    56ec:	br	x17

00000000000056f0 <Perl_av_fetch@plt>:
    56f0:	adrp	x16, 92000 <Perl_save_sptr>
    56f4:	ldr	x17, [x16, #1104]
    56f8:	add	x16, x16, #0x450
    56fc:	br	x17

0000000000005700 <Perl_sv_set_undef@plt>:
    5700:	adrp	x16, 92000 <Perl_save_sptr>
    5704:	ldr	x17, [x16, #1112]
    5708:	add	x16, x16, #0x458
    570c:	br	x17

0000000000005710 <Perl__invlist_union_maybe_complement_2nd@plt>:
    5710:	adrp	x16, 92000 <Perl_save_sptr>
    5714:	ldr	x17, [x16, #1120]
    5718:	add	x16, x16, #0x460
    571c:	br	x17

0000000000005720 <Perl_utf8_length@plt>:
    5720:	adrp	x16, 92000 <Perl_save_sptr>
    5724:	ldr	x17, [x16, #1128]
    5728:	add	x16, x16, #0x468
    572c:	br	x17

0000000000005730 <PerlIO_printf@plt>:
    5730:	adrp	x16, 92000 <Perl_save_sptr>
    5734:	ldr	x17, [x16, #1136]
    5738:	add	x16, x16, #0x470
    573c:	br	x17

0000000000005740 <my_reg_named_buff_fetch@plt>:
    5740:	adrp	x16, 92000 <Perl_save_sptr>
    5744:	ldr	x17, [x16, #1144]
    5748:	add	x16, x16, #0x478
    574c:	br	x17

0000000000005750 <memchr@plt>:
    5750:	adrp	x16, 92000 <Perl_save_sptr>
    5754:	ldr	x17, [x16, #1152]
    5758:	add	x16, x16, #0x480
    575c:	br	x17

0000000000005760 <Perl_free_tmps@plt>:
    5760:	adrp	x16, 92000 <Perl_save_sptr>
    5764:	ldr	x17, [x16, #1160]
    5768:	add	x16, x16, #0x488
    576c:	br	x17

0000000000005770 <my_reg_named_buff_exists@plt>:
    5770:	adrp	x16, 92000 <Perl_save_sptr>
    5774:	ldr	x17, [x16, #1168]
    5778:	add	x16, x16, #0x490
    577c:	br	x17

0000000000005780 <Perl__invlist_intersection_maybe_complement_2nd@plt>:
    5780:	adrp	x16, 92000 <Perl_save_sptr>
    5784:	ldr	x17, [x16, #1176]
    5788:	add	x16, x16, #0x498
    578c:	br	x17

0000000000005790 <Perl__get_regclass_nonbitmap_data@plt>:
    5790:	adrp	x16, 92000 <Perl_save_sptr>
    5794:	ldr	x17, [x16, #1184]
    5798:	add	x16, x16, #0x4a0
    579c:	br	x17

00000000000057a0 <Perl_hv_common_key_len@plt>:
    57a0:	adrp	x16, 92000 <Perl_save_sptr>
    57a4:	ldr	x17, [x16, #1192]
    57a8:	add	x16, x16, #0x4a8
    57ac:	br	x17

00000000000057b0 <Perl_eval_sv@plt>:
    57b0:	adrp	x16, 92000 <Perl_save_sptr>
    57b4:	ldr	x17, [x16, #1200]
    57b8:	add	x16, x16, #0x4b0
    57bc:	br	x17

00000000000057c0 <Perl_sv_setpvn@plt>:
    57c0:	adrp	x16, 92000 <Perl_save_sptr>
    57c4:	ldr	x17, [x16, #1208]
    57c8:	add	x16, x16, #0x4b8
    57cc:	br	x17

00000000000057d0 <Perl_mg_find@plt>:
    57d0:	adrp	x16, 92000 <Perl_save_sptr>
    57d4:	ldr	x17, [x16, #1216]
    57d8:	add	x16, x16, #0x4c0
    57dc:	br	x17

00000000000057e0 <Perl_newSV_type@plt>:
    57e0:	adrp	x16, 92000 <Perl_save_sptr>
    57e4:	ldr	x17, [x16, #1224]
    57e8:	add	x16, x16, #0x4c8
    57ec:	br	x17

00000000000057f0 <Perl_sv_catpv@plt>:
    57f0:	adrp	x16, 92000 <Perl_save_sptr>
    57f4:	ldr	x17, [x16, #1232]
    57f8:	add	x16, x16, #0x4d0
    57fc:	br	x17

0000000000005800 <Perl_op_refcnt_lock@plt>:
    5800:	adrp	x16, 92000 <Perl_save_sptr>
    5804:	ldr	x17, [x16, #1240]
    5808:	add	x16, x16, #0x4d8
    580c:	br	x17

0000000000005810 <Perl_report_uninit@plt>:
    5810:	adrp	x16, 92000 <Perl_save_sptr>
    5814:	ldr	x17, [x16, #1248]
    5818:	add	x16, x16, #0x4e0
    581c:	br	x17

0000000000005820 <Perl_sv_magic@plt>:
    5820:	adrp	x16, 92000 <Perl_save_sptr>
    5824:	ldr	x17, [x16, #1256]
    5828:	add	x16, x16, #0x4e8
    582c:	br	x17

0000000000005830 <Perl_sv_setpv_bufsize@plt>:
    5830:	adrp	x16, 92000 <Perl_save_sptr>
    5834:	ldr	x17, [x16, #1264]
    5838:	add	x16, x16, #0x4f0
    583c:	br	x17

0000000000005840 <Perl_av_exists@plt>:
    5840:	adrp	x16, 92000 <Perl_save_sptr>
    5844:	ldr	x17, [x16, #1272]
    5848:	add	x16, x16, #0x4f8
    584c:	br	x17

0000000000005850 <Perl_sv_len_utf8@plt>:
    5850:	adrp	x16, 92000 <Perl_save_sptr>
    5854:	ldr	x17, [x16, #1280]
    5858:	add	x16, x16, #0x500
    585c:	br	x17

0000000000005860 <Perl_sv_free2@plt>:
    5860:	adrp	x16, 92000 <Perl_save_sptr>
    5864:	ldr	x17, [x16, #1288]
    5868:	add	x16, x16, #0x508
    586c:	br	x17

0000000000005870 <Perl_ckwarn@plt>:
    5870:	adrp	x16, 92000 <Perl_save_sptr>
    5874:	ldr	x17, [x16, #1296]
    5878:	add	x16, x16, #0x510
    587c:	br	x17

0000000000005880 <Perl_push_scope@plt>:
    5880:	adrp	x16, 92000 <Perl_save_sptr>
    5884:	ldr	x17, [x16, #1304]
    5888:	add	x16, x16, #0x518
    588c:	br	x17

0000000000005890 <Perl_save_destructor_x@plt>:
    5890:	adrp	x16, 92000 <Perl_save_sptr>
    5894:	ldr	x17, [x16, #1312]
    5898:	add	x16, x16, #0x520
    589c:	br	x17

00000000000058a0 <Perl_regnext@plt>:
    58a0:	adrp	x16, 92000 <Perl_save_sptr>
    58a4:	ldr	x17, [x16, #1320]
    58a8:	add	x16, x16, #0x528
    58ac:	br	x17

00000000000058b0 <my_re_op_compile@plt>:
    58b0:	adrp	x16, 92000 <Perl_save_sptr>
    58b4:	ldr	x17, [x16, #1328]
    58b8:	add	x16, x16, #0x530
    58bc:	br	x17

00000000000058c0 <Perl__is_uni_FOO@plt>:
    58c0:	adrp	x16, 92000 <Perl_save_sptr>
    58c4:	ldr	x17, [x16, #1336]
    58c8:	add	x16, x16, #0x538
    58cc:	br	x17

00000000000058d0 <Perl_newSViv@plt>:
    58d0:	adrp	x16, 92000 <Perl_save_sptr>
    58d4:	ldr	x17, [x16, #1344]
    58d8:	add	x16, x16, #0x540
    58dc:	br	x17

00000000000058e0 <__assert_fail@plt>:
    58e0:	adrp	x16, 92000 <Perl_save_sptr>
    58e4:	ldr	x17, [x16, #1352]
    58e8:	add	x16, x16, #0x548
    58ec:	br	x17

00000000000058f0 <Perl_PerlIO_stderr@plt>:
    58f0:	adrp	x16, 92000 <Perl_save_sptr>
    58f4:	ldr	x17, [x16, #1360]
    58f8:	add	x16, x16, #0x550
    58fc:	br	x17

0000000000005900 <Perl_grok_bslash_x@plt>:
    5900:	adrp	x16, 92000 <Perl_save_sptr>
    5904:	ldr	x17, [x16, #1368]
    5908:	add	x16, x16, #0x558
    590c:	br	x17

0000000000005910 <Perl__to_fold_latin1@plt>:
    5910:	adrp	x16, 92000 <Perl_save_sptr>
    5914:	ldr	x17, [x16, #1376]
    5918:	add	x16, x16, #0x560
    591c:	br	x17

0000000000005920 <getenv@plt>:
    5920:	adrp	x16, 92000 <Perl_save_sptr>
    5924:	ldr	x17, [x16, #1384]
    5928:	add	x16, x16, #0x568
    592c:	br	x17

0000000000005930 <Perl_op_refcnt_unlock@plt>:
    5930:	adrp	x16, 92000 <Perl_save_sptr>
    5934:	ldr	x17, [x16, #1392]
    5938:	add	x16, x16, #0x570
    593c:	br	x17

0000000000005940 <Perl_re_indentf@plt>:
    5940:	adrp	x16, 92000 <Perl_save_sptr>
    5944:	ldr	x17, [x16, #1400]
    5948:	add	x16, x16, #0x578
    594c:	br	x17

0000000000005950 <Perl_gv_add_by_type@plt>:
    5950:	adrp	x16, 92000 <Perl_save_sptr>
    5954:	ldr	x17, [x16, #1408]
    5958:	add	x16, x16, #0x580
    595c:	br	x17

0000000000005960 <Perl_croak_popstack@plt>:
    5960:	adrp	x16, 92000 <Perl_save_sptr>
    5964:	ldr	x17, [x16, #1416]
    5968:	add	x16, x16, #0x588
    596c:	br	x17

0000000000005970 <Perl_sv_setiv@plt>:
    5970:	adrp	x16, 92000 <Perl_save_sptr>
    5974:	ldr	x17, [x16, #1424]
    5978:	add	x16, x16, #0x590
    597c:	br	x17

0000000000005980 <Perl_newSVsv_flags@plt>:
    5980:	adrp	x16, 92000 <Perl_save_sptr>
    5984:	ldr	x17, [x16, #1432]
    5988:	add	x16, x16, #0x598
    598c:	br	x17

0000000000005990 <Perl_newSVpvf@plt>:
    5990:	adrp	x16, 92000 <Perl_save_sptr>
    5994:	ldr	x17, [x16, #1440]
    5998:	add	x16, x16, #0x5a0
    599c:	br	x17

00000000000059a0 <Perl_newSVpvn@plt>:
    59a0:	adrp	x16, 92000 <Perl_save_sptr>
    59a4:	ldr	x17, [x16, #1448]
    59a8:	add	x16, x16, #0x5a8
    59ac:	br	x17

00000000000059b0 <Perl_sv_newmortal@plt>:
    59b0:	adrp	x16, 92000 <Perl_save_sptr>
    59b4:	ldr	x17, [x16, #1456]
    59b8:	add	x16, x16, #0x5b0
    59bc:	br	x17

00000000000059c0 <Perl__is_utf8_FOO_with_len@plt>:
    59c0:	adrp	x16, 92000 <Perl_save_sptr>
    59c4:	ldr	x17, [x16, #1464]
    59c8:	add	x16, x16, #0x5b8
    59cc:	br	x17

00000000000059d0 <Perl__invlist_search@plt>:
    59d0:	adrp	x16, 92000 <Perl_save_sptr>
    59d4:	ldr	x17, [x16, #1472]
    59d8:	add	x16, x16, #0x5c0
    59dc:	br	x17

00000000000059e0 <Perl_av_clear@plt>:
    59e0:	adrp	x16, 92000 <Perl_save_sptr>
    59e4:	ldr	x17, [x16, #1480]
    59e8:	add	x16, x16, #0x5c8
    59ec:	br	x17

00000000000059f0 <Perl_save_scalar@plt>:
    59f0:	adrp	x16, 92000 <Perl_save_sptr>
    59f4:	ldr	x17, [x16, #1488]
    59f8:	add	x16, x16, #0x5d0
    59fc:	br	x17

0000000000005a00 <Perl__inverse_folds@plt>:
    5a00:	adrp	x16, 92000 <Perl_save_sptr>
    5a04:	ldr	x17, [x16, #1496]
    5a08:	add	x16, x16, #0x5d8
    5a0c:	br	x17

Disassembly of section .text:

0000000000005a10 <Perl_re_exec_indentf@@Base-0x67c0>:
    5a10:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    5a14:	ldr	x0, [x0, #3896]
    5a18:	cbz	x0, 5a20 <Perl__inverse_folds@plt+0x20>
    5a1c:	b	5360 <__gmon_start__@plt>
    5a20:	ret
    5a24:	adrp	x0, 92000 <Perl_save_sptr>
    5a28:	add	x0, x0, #0x610
    5a2c:	adrp	x1, 92000 <Perl_save_sptr>
    5a30:	add	x1, x1, #0x610
    5a34:	cmp	x0, x1
    5a38:	b.eq	5a64 <Perl__inverse_folds@plt+0x64>  // b.none
    5a3c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    5a40:	ldr	x1, [x1, #3744]
    5a44:	cbz	x1, 5a64 <Perl__inverse_folds@plt+0x64>
    5a48:	stp	x29, x30, [sp, #-16]!
    5a4c:	mov	x29, sp
    5a50:	adrp	x0, 92000 <Perl_save_sptr>
    5a54:	add	x0, x0, #0x610
    5a58:	blr	x1
    5a5c:	ldp	x29, x30, [sp], #16
    5a60:	ret
    5a64:	ret
    5a68:	adrp	x0, 92000 <Perl_save_sptr>
    5a6c:	add	x0, x0, #0x610
    5a70:	adrp	x1, 92000 <Perl_save_sptr>
    5a74:	add	x1, x1, #0x610
    5a78:	sub	x0, x0, x1
    5a7c:	lsr	x1, x0, #63
    5a80:	add	x0, x1, x0, asr #3
    5a84:	cmp	xzr, x0, asr #1
    5a88:	b.eq	5ab8 <Perl__inverse_folds@plt+0xb8>  // b.none
    5a8c:	asr	x1, x0, #1
    5a90:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    5a94:	ldr	x2, [x2, #4056]
    5a98:	cbz	x2, 5ab8 <Perl__inverse_folds@plt+0xb8>
    5a9c:	stp	x29, x30, [sp, #-16]!
    5aa0:	mov	x29, sp
    5aa4:	adrp	x0, 92000 <Perl_save_sptr>
    5aa8:	add	x0, x0, #0x610
    5aac:	blr	x2
    5ab0:	ldp	x29, x30, [sp], #16
    5ab4:	ret
    5ab8:	ret
    5abc:	adrp	x0, 92000 <Perl_save_sptr>
    5ac0:	ldrb	w0, [x0, #1552]
    5ac4:	cbnz	w0, 5b00 <Perl__inverse_folds@plt+0x100>
    5ac8:	stp	x29, x30, [sp, #-16]!
    5acc:	mov	x29, sp
    5ad0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    5ad4:	ldr	x0, [x0, #3784]
    5ad8:	cbz	x0, 5ae8 <Perl__inverse_folds@plt+0xe8>
    5adc:	adrp	x0, 92000 <Perl_save_sptr>
    5ae0:	ldr	x0, [x0, #1504]
    5ae4:	bl	4fb0 <__cxa_finalize@plt>
    5ae8:	bl	5a24 <Perl__inverse_folds@plt+0x24>
    5aec:	adrp	x0, 92000 <Perl_save_sptr>
    5af0:	mov	w1, #0x1                   	// #1
    5af4:	strb	w1, [x0, #1552]
    5af8:	ldp	x29, x30, [sp], #16
    5afc:	ret
    5b00:	ret
    5b04:	stp	x29, x30, [sp, #-16]!
    5b08:	mov	x29, sp
    5b0c:	bl	5a68 <Perl__inverse_folds@plt+0x68>
    5b10:	ldp	x29, x30, [sp], #16
    5b14:	ret
    5b18:	stp	x29, x30, [sp, #-16]!
    5b1c:	mov	x29, sp
    5b20:	cbz	x0, 5b44 <Perl__inverse_folds@plt+0x144>
    5b24:	cbz	x1, 5b64 <Perl__inverse_folds@plt+0x164>
    5b28:	tbnz	w2, #31, 5b8c <Perl__inverse_folds@plt+0x18c>
    5b2c:	cbz	w2, 5b84 <Perl__inverse_folds@plt+0x184>
    5b30:	sub	w5, w2, #0x1
    5b34:	mov	x2, #0x0                   	// #0
    5b38:	adrp	x6, 91000 <boot_re@@Base+0x2f41c>
    5b3c:	ldr	x6, [x6, #3816]
    5b40:	b	5bbc <Perl__inverse_folds@plt+0x1bc>
    5b44:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5b48:	add	x3, x3, #0x330
    5b4c:	mov	w2, #0x953                 	// #2387
    5b50:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5b54:	add	x1, x1, #0xc80
    5b58:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5b5c:	add	x0, x0, #0xc90
    5b60:	bl	58e0 <__assert_fail@plt>
    5b64:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5b68:	add	x3, x3, #0x330
    5b6c:	mov	w2, #0x953                 	// #2387
    5b70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5b74:	add	x1, x1, #0xc80
    5b78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5b7c:	add	x0, x0, #0xc98
    5b80:	bl	58e0 <__assert_fail@plt>
    5b84:	mov	w0, #0x1                   	// #1
    5b88:	b	5be4 <Perl__inverse_folds@plt+0x1e4>
    5b8c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5b90:	add	x3, x3, #0x330
    5b94:	mov	w2, #0x955                 	// #2389
    5b98:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5b9c:	add	x1, x1, #0xc80
    5ba0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5ba4:	add	x0, x0, #0xca0
    5ba8:	bl	58e0 <__assert_fail@plt>
    5bac:	add	x3, x2, #0x1
    5bb0:	cmp	x2, x5
    5bb4:	b.eq	5be0 <Perl__inverse_folds@plt+0x1e0>  // b.none
    5bb8:	mov	x2, x3
    5bbc:	ldrb	w3, [x0, x2]
    5bc0:	ldrb	w4, [x1, x2]
    5bc4:	cmp	w3, w4
    5bc8:	b.eq	5bac <Perl__inverse_folds@plt+0x1ac>  // b.none
    5bcc:	ldrb	w4, [x6, w4, sxtw]
    5bd0:	cmp	w4, w3
    5bd4:	b.eq	5bac <Perl__inverse_folds@plt+0x1ac>  // b.none
    5bd8:	mov	w0, #0x0                   	// #0
    5bdc:	b	5be4 <Perl__inverse_folds@plt+0x1e4>
    5be0:	mov	w0, #0x1                   	// #1
    5be4:	ldp	x29, x30, [sp], #16
    5be8:	ret
    5bec:	stp	x29, x30, [sp, #-16]!
    5bf0:	mov	x29, sp
    5bf4:	cbz	x0, 5c18 <Perl__inverse_folds@plt+0x218>
    5bf8:	cbz	x1, 5c3c <Perl__inverse_folds@plt+0x23c>
    5bfc:	tbnz	w2, #31, 5c68 <Perl__inverse_folds@plt+0x268>
    5c00:	cbz	w2, 5c60 <Perl__inverse_folds@plt+0x260>
    5c04:	sub	w5, w2, #0x1
    5c08:	mov	x2, #0x0                   	// #0
    5c0c:	adrp	x6, 91000 <boot_re@@Base+0x2f41c>
    5c10:	ldr	x6, [x6, #3944]
    5c14:	b	5c9c <Perl__inverse_folds@plt+0x29c>
    5c18:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5c1c:	add	x3, x3, #0x330
    5c20:	add	x3, x3, #0x18
    5c24:	mov	w2, #0x91f                 	// #2335
    5c28:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5c2c:	add	x1, x1, #0xc80
    5c30:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5c34:	add	x0, x0, #0xc90
    5c38:	bl	58e0 <__assert_fail@plt>
    5c3c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5c40:	add	x3, x3, #0x330
    5c44:	add	x3, x3, #0x18
    5c48:	mov	w2, #0x91f                 	// #2335
    5c4c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5c50:	add	x1, x1, #0xc80
    5c54:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5c58:	add	x0, x0, #0xc98
    5c5c:	bl	58e0 <__assert_fail@plt>
    5c60:	mov	w0, #0x1                   	// #1
    5c64:	b	5cc4 <Perl__inverse_folds@plt+0x2c4>
    5c68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5c6c:	add	x3, x3, #0x330
    5c70:	add	x3, x3, #0x18
    5c74:	mov	w2, #0x921                 	// #2337
    5c78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5c7c:	add	x1, x1, #0xc80
    5c80:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5c84:	add	x0, x0, #0xca0
    5c88:	bl	58e0 <__assert_fail@plt>
    5c8c:	add	x3, x2, #0x1
    5c90:	cmp	x2, x5
    5c94:	b.eq	5cc0 <Perl__inverse_folds@plt+0x2c0>  // b.none
    5c98:	mov	x2, x3
    5c9c:	ldrb	w3, [x0, x2]
    5ca0:	ldrb	w4, [x1, x2]
    5ca4:	cmp	w3, w4
    5ca8:	b.eq	5c8c <Perl__inverse_folds@plt+0x28c>  // b.none
    5cac:	ldrb	w4, [x6, w4, sxtw]
    5cb0:	cmp	w4, w3
    5cb4:	b.eq	5c8c <Perl__inverse_folds@plt+0x28c>  // b.none
    5cb8:	mov	w0, #0x0                   	// #0
    5cbc:	b	5cc4 <Perl__inverse_folds@plt+0x2c4>
    5cc0:	mov	w0, #0x1                   	// #1
    5cc4:	ldp	x29, x30, [sp], #16
    5cc8:	ret
    5ccc:	stp	x29, x30, [sp, #-16]!
    5cd0:	mov	x29, sp
    5cd4:	cbz	x0, 5d00 <Perl__inverse_folds@plt+0x300>
    5cd8:	cbz	x1, 5d24 <Perl__inverse_folds@plt+0x324>
    5cdc:	tbnz	w2, #31, 5d50 <Perl__inverse_folds@plt+0x350>
    5ce0:	cbz	w2, 5d48 <Perl__inverse_folds@plt+0x348>
    5ce4:	sub	w5, w2, #0x1
    5ce8:	mov	x2, #0x0                   	// #0
    5cec:	adrp	x7, 91000 <boot_re@@Base+0x2f41c>
    5cf0:	ldr	x7, [x7, #3880]
    5cf4:	adrp	x6, 91000 <boot_re@@Base+0x2f41c>
    5cf8:	ldr	x6, [x6, #4048]
    5cfc:	b	5d78 <Perl__inverse_folds@plt+0x378>
    5d00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5d04:	add	x3, x3, #0x330
    5d08:	add	x3, x3, #0x28
    5d0c:	mov	w2, #0x1d8                 	// #472
    5d10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5d14:	add	x1, x1, #0xcb0
    5d18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5d1c:	add	x0, x0, #0xc90
    5d20:	bl	58e0 <__assert_fail@plt>
    5d24:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5d28:	add	x3, x3, #0x330
    5d2c:	add	x3, x3, #0x28
    5d30:	mov	w2, #0x1d8                 	// #472
    5d34:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5d38:	add	x1, x1, #0xcb0
    5d3c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5d40:	add	x0, x0, #0xc98
    5d44:	bl	58e0 <__assert_fail@plt>
    5d48:	mov	w0, #0x1                   	// #1
    5d4c:	b	5dd0 <Perl__inverse_folds@plt+0x3d0>
    5d50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5d54:	add	x3, x3, #0x330
    5d58:	add	x3, x3, #0x28
    5d5c:	mov	w2, #0x1da                 	// #474
    5d60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5d64:	add	x1, x1, #0xcb0
    5d68:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5d6c:	add	x0, x0, #0xca0
    5d70:	bl	58e0 <__assert_fail@plt>
    5d74:	mov	x2, x3
    5d78:	ldrb	w3, [x1, x2]
    5d7c:	ldr	w4, [x7, w3, sxtw #2]
    5d80:	tbnz	w4, #4, 5da8 <Perl__inverse_folds@plt+0x3a8>
    5d84:	ldrb	w4, [x0, x2]
    5d88:	ldrb	w4, [x6, w4, sxtw]
    5d8c:	cmp	w4, w3
    5d90:	b.ne	5dcc <Perl__inverse_folds@plt+0x3cc>  // b.any
    5d94:	add	x3, x2, #0x1
    5d98:	cmp	x2, x5
    5d9c:	b.ne	5d74 <Perl__inverse_folds@plt+0x374>  // b.any
    5da0:	mov	w0, #0x1                   	// #1
    5da4:	b	5dd0 <Perl__inverse_folds@plt+0x3d0>
    5da8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5dac:	add	x3, x3, #0x330
    5db0:	add	x3, x3, #0x28
    5db4:	mov	w2, #0x1dd                 	// #477
    5db8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5dbc:	add	x1, x1, #0xcb0
    5dc0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5dc4:	add	x0, x0, #0xcc0
    5dc8:	bl	58e0 <__assert_fail@plt>
    5dcc:	mov	w0, #0x0                   	// #0
    5dd0:	ldp	x29, x30, [sp], #16
    5dd4:	ret
    5dd8:	stp	x29, x30, [sp, #-16]!
    5ddc:	mov	x29, sp
    5de0:	cbz	x0, 5ec0 <Perl__inverse_folds@plt+0x4c0>
    5de4:	and	w2, w2, #0xff
    5de8:	and	w3, w3, #0xff
    5dec:	cbz	x1, 5ee4 <Perl__inverse_folds@plt+0x4e4>
    5df0:	cmp	x0, x1
    5df4:	b.hi	5f08 <Perl__inverse_folds@plt+0x508>  // b.pmore
    5df8:	bics	wzr, w2, w3
    5dfc:	b.ne	5f2c <Perl__inverse_folds@plt+0x52c>  // b.any
    5e00:	and	x6, x0, #0x7
    5e04:	sub	x5, x1, x0
    5e08:	orr	x4, x0, x0, lsr #1
    5e0c:	ubfx	x7, x0, #2, #1
    5e10:	orr	x4, x4, x7
    5e14:	and	x4, x4, #0x1
    5e18:	add	x4, x4, #0x1
    5e1c:	lsl	x4, x4, #3
    5e20:	sub	x4, x4, x6
    5e24:	cmp	x5, x4
    5e28:	b.cc	5e98 <Perl__inverse_folds@plt+0x498>  // b.lo, b.ul, b.last
    5e2c:	cbz	x6, 5e4c <Perl__inverse_folds@plt+0x44c>
    5e30:	ldrb	w4, [x0]
    5e34:	and	w4, w3, w4
    5e38:	cmp	w4, w2
    5e3c:	b.eq	5f98 <Perl__inverse_folds@plt+0x598>  // b.none
    5e40:	add	x0, x0, #0x1
    5e44:	tst	x0, #0x7
    5e48:	b.ne	5e30 <Perl__inverse_folds@plt+0x430>  // b.any
    5e4c:	and	x6, x2, #0xff
    5e50:	mov	x4, #0x101010101010101     	// #72340172838076673
    5e54:	mul	x6, x6, x4
    5e58:	and	x5, x3, #0xff
    5e5c:	mul	x5, x5, x4
    5e60:	mov	x8, #0x8080808080808080    	// #-9187201950435737472
    5e64:	ldr	x4, [x0]
    5e68:	and	x4, x5, x4
    5e6c:	eor	x4, x6, x4
    5e70:	orr	x4, x4, x4, lsl #1
    5e74:	orr	x4, x4, x4, lsl #2
    5e78:	orr	x4, x4, x4, lsl #4
    5e7c:	and	x7, x4, #0x8080808080808080
    5e80:	cmp	x7, x8
    5e84:	b.ne	5f50 <Perl__inverse_folds@plt+0x550>  // b.any
    5e88:	add	x0, x0, #0x8
    5e8c:	add	x4, x0, #0x8
    5e90:	cmp	x1, x4
    5e94:	b.cs	5e64 <Perl__inverse_folds@plt+0x464>  // b.hs, b.nlast
    5e98:	cmp	x1, x0
    5e9c:	b.ls	5f98 <Perl__inverse_folds@plt+0x598>  // b.plast
    5ea0:	ldrb	w4, [x0]
    5ea4:	and	w4, w3, w4
    5ea8:	cmp	w4, w2
    5eac:	b.eq	5f98 <Perl__inverse_folds@plt+0x598>  // b.none
    5eb0:	add	x0, x0, #0x1
    5eb4:	cmp	x1, x0
    5eb8:	b.ne	5ea0 <Perl__inverse_folds@plt+0x4a0>  // b.any
    5ebc:	b	5f98 <Perl__inverse_folds@plt+0x598>
    5ec0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5ec4:	add	x3, x3, #0x330
    5ec8:	add	x3, x3, #0x48
    5ecc:	mov	w2, #0x260                 	// #608
    5ed0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5ed4:	add	x1, x1, #0xcb0
    5ed8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5edc:	add	x0, x0, #0xce8
    5ee0:	bl	58e0 <__assert_fail@plt>
    5ee4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5ee8:	add	x3, x3, #0x330
    5eec:	add	x3, x3, #0x48
    5ef0:	mov	w2, #0x260                 	// #608
    5ef4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5ef8:	add	x1, x1, #0xcb0
    5efc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5f00:	add	x0, x0, #0xcd8
    5f04:	bl	58e0 <__assert_fail@plt>
    5f08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5f0c:	add	x3, x3, #0x330
    5f10:	add	x3, x3, #0x48
    5f14:	mov	w2, #0x262                 	// #610
    5f18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5f1c:	add	x1, x1, #0xcb0
    5f20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5f24:	add	x0, x0, #0xce0
    5f28:	bl	58e0 <__assert_fail@plt>
    5f2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5f30:	add	x3, x3, #0x330
    5f34:	add	x3, x3, #0x48
    5f38:	mov	w2, #0x263                 	// #611
    5f3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5f40:	add	x1, x1, #0xcb0
    5f44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5f48:	add	x0, x0, #0xcf0
    5f4c:	bl	58e0 <__assert_fail@plt>
    5f50:	mvn	x4, x4
    5f54:	ands	x4, x4, #0x8080808080808080
    5f58:	b.eq	5fa0 <Perl__inverse_folds@plt+0x5a0>  // b.none
    5f5c:	lsr	x1, x4, #1
    5f60:	sub	x2, x1, #0x1
    5f64:	eor	x1, x2, x1
    5f68:	add	x1, x1, #0x1
    5f6c:	lsr	x1, x1, #7
    5f70:	mov	x2, #0x373f                	// #14143
    5f74:	movk	x2, #0x272f, lsl #16
    5f78:	movk	x2, #0x171f, lsl #32
    5f7c:	movk	x2, #0x70f, lsl #48
    5f80:	mul	x1, x1, x2
    5f84:	lsr	x1, x1, #56
    5f88:	add	x1, x1, #0x1
    5f8c:	lsr	x1, x1, #3
    5f90:	sub	w1, w1, #0x1
    5f94:	add	x0, x0, x1
    5f98:	ldp	x29, x30, [sp], #16
    5f9c:	ret
    5fa0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5fa4:	add	x3, x3, #0x330
    5fa8:	add	x3, x3, #0x60
    5fac:	mov	w2, #0x201                 	// #513
    5fb0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    5fb4:	add	x1, x1, #0xc80
    5fb8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    5fbc:	add	x0, x0, #0xd08
    5fc0:	bl	58e0 <__assert_fail@plt>
    5fc4:	stp	x29, x30, [sp, #-16]!
    5fc8:	mov	x29, sp
    5fcc:	cbz	x0, 5ff0 <Perl__inverse_folds@plt+0x5f0>
    5fd0:	cbz	x1, 6014 <Perl__inverse_folds@plt+0x614>
    5fd4:	tbnz	w2, #31, 6040 <Perl__inverse_folds@plt+0x640>
    5fd8:	cbz	w2, 6038 <Perl__inverse_folds@plt+0x638>
    5fdc:	sub	w5, w2, #0x1
    5fe0:	mov	x2, #0x0                   	// #0
    5fe4:	adrp	x6, 91000 <boot_re@@Base+0x2f41c>
    5fe8:	ldr	x6, [x6, #3752]
    5fec:	b	6074 <Perl__inverse_folds@plt+0x674>
    5ff0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    5ff4:	add	x3, x3, #0x330
    5ff8:	add	x3, x3, #0x78
    5ffc:	mov	w2, #0x936                 	// #2358
    6000:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6004:	add	x1, x1, #0xc80
    6008:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    600c:	add	x0, x0, #0xc90
    6010:	bl	58e0 <__assert_fail@plt>
    6014:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6018:	add	x3, x3, #0x330
    601c:	add	x3, x3, #0x78
    6020:	mov	w2, #0x936                 	// #2358
    6024:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6028:	add	x1, x1, #0xc80
    602c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6030:	add	x0, x0, #0xc98
    6034:	bl	58e0 <__assert_fail@plt>
    6038:	mov	w0, #0x1                   	// #1
    603c:	b	609c <Perl__inverse_folds@plt+0x69c>
    6040:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6044:	add	x3, x3, #0x330
    6048:	add	x3, x3, #0x78
    604c:	mov	w2, #0x938                 	// #2360
    6050:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6054:	add	x1, x1, #0xc80
    6058:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    605c:	add	x0, x0, #0xca0
    6060:	bl	58e0 <__assert_fail@plt>
    6064:	add	x3, x2, #0x1
    6068:	cmp	x2, x5
    606c:	b.eq	6098 <Perl__inverse_folds@plt+0x698>  // b.none
    6070:	mov	x2, x3
    6074:	ldrb	w3, [x0, x2]
    6078:	ldrb	w4, [x1, x2]
    607c:	cmp	w3, w4
    6080:	b.eq	6064 <Perl__inverse_folds@plt+0x664>  // b.none
    6084:	ldrb	w4, [x6, w4, sxtw]
    6088:	cmp	w4, w3
    608c:	b.eq	6064 <Perl__inverse_folds@plt+0x664>  // b.none
    6090:	mov	w0, #0x0                   	// #0
    6094:	b	609c <Perl__inverse_folds@plt+0x69c>
    6098:	mov	w0, #0x1                   	// #1
    609c:	ldp	x29, x30, [sp], #16
    60a0:	ret
    60a4:	stp	x29, x30, [sp, #-16]!
    60a8:	mov	x29, sp
    60ac:	mov	x4, x0
    60b0:	ldr	x0, [x0, #104]
    60b4:	ldr	x2, [x0, #24]
    60b8:	ldr	w0, [x1, #4]
    60bc:	add	x0, x0, #0x2
    60c0:	ldr	x5, [x2, x0, lsl #3]
    60c4:	ldr	w8, [x5, #12]
    60c8:	and	w1, w8, #0xf
    60cc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    60d0:	ldr	x0, [x0, #3888]
    60d4:	ldrb	w0, [x0, w1, uxtw]
    60d8:	cbz	w0, 6118 <Perl__inverse_folds@plt+0x718>
    60dc:	and	w6, w8, #0xc000
    60e0:	cmp	w6, #0x8, lsl #12
    60e4:	b.eq	613c <Perl__inverse_folds@plt+0x73c>  // b.none
    60e8:	and	w8, w8, #0xff
    60ec:	cmp	w8, #0xf
    60f0:	b.eq	6170 <Perl__inverse_folds@plt+0x770>  // b.none
    60f4:	ldr	x7, [x5, #16]
    60f8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    60fc:	ldr	x0, [x0, #3712]
    6100:	ldrb	w0, [x0, w1, uxtw]
    6104:	cbz	w0, 61f0 <Perl__inverse_folds@plt+0x7f0>
    6108:	mov	w1, #0x0                   	// #0
    610c:	mov	x2, #0x0                   	// #0
    6110:	sub	w8, w8, #0x9
    6114:	b	61a8 <Perl__inverse_folds@plt+0x7a8>
    6118:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    611c:	add	x3, x3, #0x330
    6120:	add	x3, x3, #0x90
    6124:	mov	w2, #0x1028                	// #4136
    6128:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    612c:	add	x1, x1, #0xcb0
    6130:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6134:	add	x0, x0, #0xd10
    6138:	bl	58e0 <__assert_fail@plt>
    613c:	and	w0, w8, #0xff
    6140:	sub	w0, w0, #0x9
    6144:	cmp	w0, #0x1
    6148:	b.hi	60e8 <Perl__inverse_folds@plt+0x6e8>  // b.pmore
    614c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6150:	add	x3, x3, #0x330
    6154:	add	x3, x3, #0x90
    6158:	mov	w2, #0x1028                	// #4136
    615c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6160:	add	x1, x1, #0xcb0
    6164:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6168:	add	x0, x0, #0xd40
    616c:	bl	58e0 <__assert_fail@plt>
    6170:	ldr	x0, [x5]
    6174:	ldrb	w0, [x0, #129]
    6178:	tbnz	w0, #6, 60f4 <Perl__inverse_folds@plt+0x6f4>
    617c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6180:	add	x3, x3, #0x330
    6184:	add	x3, x3, #0x90
    6188:	mov	w2, #0x1028                	// #4136
    618c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6190:	add	x1, x1, #0xcb0
    6194:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6198:	add	x0, x0, #0xd58
    619c:	bl	58e0 <__assert_fail@plt>
    61a0:	add	w1, w1, #0x1
    61a4:	sxtw	x2, w1
    61a8:	cmp	w6, #0x8, lsl #12
    61ac:	b.eq	6214 <Perl__inverse_folds@plt+0x814>  // b.none
    61b0:	ldr	x3, [x5]
    61b4:	ldr	x3, [x3, #32]
    61b8:	cmp	x3, x2
    61bc:	b.le	6240 <Perl__inverse_folds@plt+0x840>
    61c0:	ldr	w0, [x7, w1, sxtw #2]
    61c4:	ldr	w2, [x4, #112]
    61c8:	cmp	w2, w0
    61cc:	b.lt	61a0 <Perl__inverse_folds@plt+0x7a0>  // b.tstop
    61d0:	ldr	x3, [x4, #120]
    61d4:	sbfiz	x2, x0, #1, #32
    61d8:	add	x2, x2, w0, sxtw
    61dc:	add	x2, x3, x2, lsl #3
    61e0:	ldr	x2, [x2, #8]
    61e4:	cmn	x2, #0x1
    61e8:	b.eq	61a0 <Perl__inverse_folds@plt+0x7a0>  // b.none
    61ec:	b	6244 <Perl__inverse_folds@plt+0x844>
    61f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    61f4:	add	x3, x3, #0x330
    61f8:	add	x3, x3, #0x90
    61fc:	mov	w2, #0x102c                	// #4140
    6200:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6204:	add	x1, x1, #0xcb0
    6208:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    620c:	add	x0, x0, #0xda0
    6210:	bl	58e0 <__assert_fail@plt>
    6214:	cmp	w8, #0x1
    6218:	b.hi	61b0 <Perl__inverse_folds@plt+0x7b0>  // b.pmore
    621c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6220:	add	x3, x3, #0x330
    6224:	add	x3, x3, #0x90
    6228:	mov	w2, #0x102c                	// #4140
    622c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6230:	add	x1, x1, #0xcb0
    6234:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6238:	add	x0, x0, #0xdd0
    623c:	bl	58e0 <__assert_fail@plt>
    6240:	mov	w0, #0x0                   	// #0
    6244:	ldp	x29, x30, [sp], #16
    6248:	ret
    624c:	sub	sp, sp, #0xa0
    6250:	stp	x29, x30, [sp, #48]
    6254:	add	x29, sp, #0x30
    6258:	stp	x19, x20, [sp, #64]
    625c:	stp	x21, x22, [sp, #80]
    6260:	stp	x23, x24, [sp, #96]
    6264:	stp	x25, x26, [sp, #112]
    6268:	stp	x27, x28, [sp, #128]
    626c:	mov	x21, x0
    6270:	mov	x20, x1
    6274:	and	w6, w6, #0xff
    6278:	str	w7, [sp, #152]
    627c:	ldr	x0, [x0, #1448]
    6280:	ldrb	w0, [x0]
    6284:	cbnz	w0, 62b4 <Perl__inverse_folds@plt+0x8b4>
    6288:	ldr	x0, [x21, #1464]
    628c:	ldrb	w0, [x0]
    6290:	cbnz	w0, 6320 <Perl__inverse_folds@plt+0x920>
    6294:	ldr	x0, [x21, #1480]
    6298:	ldrb	w0, [x0]
    629c:	cmp	w0, #0x0
    62a0:	cset	w28, ne  // ne = any
    62a4:	mov	w7, #0xa                   	// #10
    62a8:	mov	w0, #0x7                   	// #7
    62ac:	csel	w7, w7, w0, ne  // ne = any
    62b0:	b	62bc <Perl__inverse_folds@plt+0x8bc>
    62b4:	mov	w28, #0x1                   	// #1
    62b8:	mov	w7, #0xa                   	// #10
    62bc:	sub	x22, x3, x20
    62c0:	sxtw	x8, w7
    62c4:	cmp	x8, x22
    62c8:	csel	x8, x8, x22, le
    62cc:	mov	w1, w8
    62d0:	sub	x24, x20, x4
    62d4:	add	w7, w7, #0x5
    62d8:	sub	w0, w7, w8
    62dc:	sxtw	x0, w0
    62e0:	cmp	x0, x24
    62e4:	csel	x0, x0, x24, le
    62e8:	mov	w19, w0
    62ec:	cbz	x20, 632c <Perl__inverse_folds@plt+0x92c>
    62f0:	cbz	x2, 6350 <Perl__inverse_folds@plt+0x950>
    62f4:	cbz	x3, 6374 <Perl__inverse_folds@plt+0x974>
    62f8:	cbz	x4, 6398 <Perl__inverse_folds@plt+0x998>
    62fc:	cbz	x5, 63bc <Perl__inverse_folds@plt+0x9bc>
    6300:	cbz	w6, 63e0 <Perl__inverse_folds@plt+0x9e0>
    6304:	sub	x0, x20, w19, sxtw
    6308:	ldrb	w0, [x0]
    630c:	and	w0, w0, #0xc0
    6310:	cmp	w0, #0x80
    6314:	b.ne	67c4 <Perl__inverse_folds@plt+0xdc4>  // b.any
    6318:	add	w19, w19, #0x1
    631c:	b	6304 <Perl__inverse_folds@plt+0x904>
    6320:	mov	w28, #0x1                   	// #1
    6324:	mov	w7, #0xa                   	// #10
    6328:	b	62bc <Perl__inverse_folds@plt+0x8bc>
    632c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6330:	add	x3, x3, #0x330
    6334:	add	x3, x3, #0xb0
    6338:	mov	w2, #0xfee                 	// #4078
    633c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6340:	add	x1, x1, #0xcb0
    6344:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6348:	add	x0, x0, #0xdf0
    634c:	bl	58e0 <__assert_fail@plt>
    6350:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6354:	add	x3, x3, #0x330
    6358:	add	x3, x3, #0xb0
    635c:	mov	w2, #0xfee                 	// #4078
    6360:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6364:	add	x1, x1, #0xcb0
    6368:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    636c:	add	x0, x0, #0xe00
    6370:	bl	58e0 <__assert_fail@plt>
    6374:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6378:	add	x3, x3, #0x330
    637c:	add	x3, x3, #0xb0
    6380:	mov	w2, #0xfee                 	// #4078
    6384:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6388:	add	x1, x1, #0xcb0
    638c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6390:	add	x0, x0, #0xe08
    6394:	bl	58e0 <__assert_fail@plt>
    6398:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    639c:	add	x3, x3, #0x330
    63a0:	add	x3, x3, #0xb0
    63a4:	mov	w2, #0xfee                 	// #4078
    63a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    63ac:	add	x1, x1, #0xcb0
    63b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    63b4:	add	x0, x0, #0xe18
    63b8:	bl	58e0 <__assert_fail@plt>
    63bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    63c0:	add	x3, x3, #0x330
    63c4:	add	x3, x3, #0xb0
    63c8:	mov	w2, #0xfee                 	// #4078
    63cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    63d0:	add	x1, x1, #0xcb0
    63d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    63d8:	add	x0, x0, #0xe28
    63dc:	bl	58e0 <__assert_fail@plt>
    63e0:	sub	x5, x20, x5
    63e4:	sub	w5, w0, w5
    63e8:	add	w0, w8, w0
    63ec:	cmp	w0, w7
    63f0:	b.lt	67e4 <Perl__inverse_folds@plt+0xde4>  // b.tstop
    63f4:	cmp	w5, #0x0
    63f8:	csel	w5, w5, wzr, ge  // ge = tcont
    63fc:	cmp	w5, w19
    6400:	csel	w0, w5, w19, le
    6404:	str	w0, [sp, #156]
    6408:	add	x1, x21, #0xb88
    640c:	sxtw	x27, w19
    6410:	sub	x2, x20, x27
    6414:	sxtw	x23, w0
    6418:	ldr	x4, [x21, #3360]
    641c:	ldr	x5, [x21, #1480]
    6420:	ldr	x6, [x21, #1488]
    6424:	mov	w25, #0x8400                	// #33792
    6428:	b	6474 <Perl__inverse_folds@plt+0xa74>
    642c:	sub	w1, w1, #0x1
    6430:	ldrb	w0, [x20, w1, sxtw]
    6434:	and	w0, w0, #0xc0
    6438:	cmp	w0, #0x80
    643c:	b.eq	642c <Perl__inverse_folds@plt+0xa2c>  // b.none
    6440:	cmp	w5, #0x0
    6444:	csel	w5, w5, wzr, ge  // ge = tcont
    6448:	cmp	w5, w19
    644c:	csel	w0, w5, w19, le
    6450:	str	w0, [sp, #156]
    6454:	add	x1, x21, #0xb88
    6458:	sxtw	x27, w19
    645c:	sub	x2, x20, x27
    6460:	sxtw	x23, w0
    6464:	ldr	x4, [x21, #3360]
    6468:	ldr	x5, [x21, #1480]
    646c:	ldr	x6, [x21, #1488]
    6470:	mov	w25, #0x8500                	// #34048
    6474:	mov	w7, w25
    6478:	mov	x3, x23
    647c:	mov	x0, x21
    6480:	bl	53f0 <Perl_pv_pretty@plt>
    6484:	str	x0, [sp, #144]
    6488:	ldr	w0, [x21, #2964]
    648c:	and	w2, w0, #0xf
    6490:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    6494:	ldr	x1, [x1, #3888]
    6498:	ldrb	w1, [x1, w2, uxtw]
    649c:	cbz	w1, 6644 <Perl__inverse_folds@plt+0xc44>
    64a0:	and	w1, w0, #0xc000
    64a4:	cmp	w1, #0x8, lsl #12
    64a8:	b.eq	6668 <Perl__inverse_folds@plt+0xc68>  // b.none
    64ac:	and	w0, w0, #0xff
    64b0:	cmp	w0, #0xf
    64b4:	b.ne	64c4 <Perl__inverse_folds@plt+0xac4>  // b.any
    64b8:	ldr	x0, [x21, #2952]
    64bc:	ldrb	w0, [x0, #129]
    64c0:	tbz	w0, #6, 669c <Perl__inverse_folds@plt+0xc9c>
    64c4:	ldr	x0, [x21, #2952]
    64c8:	ldr	x26, [x0, #16]
    64cc:	ldr	w0, [sp, #156]
    64d0:	sub	w3, w19, w0
    64d4:	sub	x2, x23, x27
    64d8:	add	x19, x21, #0xba0
    64dc:	mov	w7, w25
    64e0:	ldr	x6, [x21, #1472]
    64e4:	ldr	x5, [x21, #1464]
    64e8:	ldr	x4, [x21, #3360]
    64ec:	sxtw	x3, w3
    64f0:	add	x2, x20, x2
    64f4:	mov	x1, x19
    64f8:	mov	x0, x21
    64fc:	bl	53f0 <Perl_pv_pretty@plt>
    6500:	mov	x23, x0
    6504:	ldr	w0, [x19, #12]
    6508:	and	w2, w0, #0xf
    650c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    6510:	ldr	x1, [x1, #3888]
    6514:	ldrb	w1, [x1, w2, uxtw]
    6518:	cbz	w1, 66c0 <Perl__inverse_folds@plt+0xcc0>
    651c:	and	w1, w0, #0xc000
    6520:	cmp	w1, #0x8, lsl #12
    6524:	b.eq	66e4 <Perl__inverse_folds@plt+0xce4>  // b.none
    6528:	and	w0, w0, #0xff
    652c:	cmp	w0, #0xf
    6530:	b.ne	6540 <Perl__inverse_folds@plt+0xb40>  // b.any
    6534:	ldr	x0, [x21, #2976]
    6538:	ldrb	w0, [x0, #129]
    653c:	tbz	w0, #6, 6718 <Perl__inverse_folds@plt+0xd18>
    6540:	ldr	x0, [x21, #2976]
    6544:	ldr	x19, [x0, #16]
    6548:	add	x0, x21, #0xbb8
    654c:	mov	w7, w25
    6550:	ldr	x6, [x21, #1456]
    6554:	ldr	x5, [x21, #1448]
    6558:	mov	x4, #0xa                   	// #10
    655c:	mov	x3, x22
    6560:	mov	x2, x20
    6564:	mov	x20, x0
    6568:	mov	x1, x0
    656c:	mov	x0, x21
    6570:	bl	53f0 <Perl_pv_pretty@plt>
    6574:	ldr	w1, [x20, #12]
    6578:	and	w3, w1, #0xf
    657c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    6580:	ldr	x2, [x2, #3888]
    6584:	ldrb	w2, [x2, w3, uxtw]
    6588:	cbz	w2, 673c <Perl__inverse_folds@plt+0xd3c>
    658c:	and	w2, w1, #0xc000
    6590:	cmp	w2, #0x8, lsl #12
    6594:	b.eq	6760 <Perl__inverse_folds@plt+0xd60>  // b.none
    6598:	and	w1, w1, #0xff
    659c:	cmp	w1, #0xf
    65a0:	b.eq	6794 <Perl__inverse_folds@plt+0xd94>  // b.none
    65a4:	ldr	x1, [x21, #3000]
    65a8:	ldr	x3, [x1, #16]
    65ac:	add	w1, w19, w26
    65b0:	add	w1, w1, w3
    65b4:	sxtw	x1, w1
    65b8:	adrp	x7, 61000 <my_regfree@@Base+0x250>
    65bc:	add	x2, x7, #0xde8
    65c0:	adrp	x7, 7d000 <boot_re@@Base+0x1b41c>
    65c4:	add	x7, x7, #0x20
    65c8:	cmp	w28, #0x0
    65cc:	csel	x7, x7, x2, ne  // ne = any
    65d0:	mov	x2, #0x13                  	// #19
    65d4:	sub	x2, x2, x1
    65d8:	cmp	x1, #0x14
    65dc:	csel	w1, w2, wzr, cc  // cc = lo, ul, last
    65e0:	ldr	w2, [sp, #152]
    65e4:	str	w2, [sp, #32]
    65e8:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
    65ec:	add	x2, x2, #0x20
    65f0:	str	x2, [sp, #24]
    65f4:	str	w1, [sp, #16]
    65f8:	str	x0, [sp, #8]
    65fc:	str	w3, [sp]
    6600:	mov	x6, x23
    6604:	mov	w5, w19
    6608:	ldr	x4, [sp, #144]
    660c:	mov	w3, w26
    6610:	mov	x2, x24
    6614:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6618:	add	x1, x1, #0xed0
    661c:	mov	x0, x21
    6620:	bl	50e0 <Perl_re_printf@plt>
    6624:	ldp	x19, x20, [sp, #64]
    6628:	ldp	x21, x22, [sp, #80]
    662c:	ldp	x23, x24, [sp, #96]
    6630:	ldp	x25, x26, [sp, #112]
    6634:	ldp	x27, x28, [sp, #128]
    6638:	ldp	x29, x30, [sp, #48]
    663c:	add	sp, sp, #0xa0
    6640:	ret
    6644:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6648:	add	x3, x3, #0x330
    664c:	add	x3, x3, #0xb0
    6650:	mov	w2, #0xfff                 	// #4095
    6654:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6658:	add	x1, x1, #0xcb0
    665c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6660:	add	x0, x0, #0xe40
    6664:	bl	58e0 <__assert_fail@plt>
    6668:	and	w1, w0, #0xff
    666c:	sub	w1, w1, #0x9
    6670:	cmp	w1, #0x1
    6674:	b.hi	64ac <Perl__inverse_folds@plt+0xaac>  // b.pmore
    6678:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    667c:	add	x3, x3, #0x330
    6680:	add	x3, x3, #0xb0
    6684:	mov	w2, #0xfff                 	// #4095
    6688:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    668c:	add	x1, x1, #0xcb0
    6690:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6694:	add	x0, x0, #0xe70
    6698:	bl	58e0 <__assert_fail@plt>
    669c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    66a0:	add	x3, x3, #0x330
    66a4:	add	x3, x3, #0xb0
    66a8:	mov	w2, #0xfff                 	// #4095
    66ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    66b0:	add	x1, x1, #0xcb0
    66b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    66b8:	add	x0, x0, #0xe88
    66bc:	bl	58e0 <__assert_fail@plt>
    66c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    66c4:	add	x3, x3, #0x330
    66c8:	add	x3, x3, #0xb0
    66cc:	mov	w2, #0x1002                	// #4098
    66d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    66d4:	add	x1, x1, #0xcb0
    66d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    66dc:	add	x0, x0, #0xe40
    66e0:	bl	58e0 <__assert_fail@plt>
    66e4:	and	w1, w0, #0xff
    66e8:	sub	w1, w1, #0x9
    66ec:	cmp	w1, #0x1
    66f0:	b.hi	6528 <Perl__inverse_folds@plt+0xb28>  // b.pmore
    66f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    66f8:	add	x3, x3, #0x330
    66fc:	add	x3, x3, #0xb0
    6700:	mov	w2, #0x1002                	// #4098
    6704:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6708:	add	x1, x1, #0xcb0
    670c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6710:	add	x0, x0, #0xe70
    6714:	bl	58e0 <__assert_fail@plt>
    6718:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    671c:	add	x3, x3, #0x330
    6720:	add	x3, x3, #0xb0
    6724:	mov	w2, #0x1002                	// #4098
    6728:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    672c:	add	x1, x1, #0xcb0
    6730:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6734:	add	x0, x0, #0xe88
    6738:	bl	58e0 <__assert_fail@plt>
    673c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6740:	add	x3, x3, #0x330
    6744:	add	x3, x3, #0xb0
    6748:	mov	w2, #0x1006                	// #4102
    674c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6750:	add	x1, x1, #0xcb0
    6754:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6758:	add	x0, x0, #0xe40
    675c:	bl	58e0 <__assert_fail@plt>
    6760:	and	w2, w1, #0xff
    6764:	sub	w2, w2, #0x9
    6768:	cmp	w2, #0x1
    676c:	b.hi	6598 <Perl__inverse_folds@plt+0xb98>  // b.pmore
    6770:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6774:	add	x3, x3, #0x330
    6778:	add	x3, x3, #0xb0
    677c:	mov	w2, #0x1006                	// #4102
    6780:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6784:	add	x1, x1, #0xcb0
    6788:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    678c:	add	x0, x0, #0xe70
    6790:	bl	58e0 <__assert_fail@plt>
    6794:	ldr	x1, [x21, #3000]
    6798:	ldrb	w1, [x1, #129]
    679c:	tbnz	w1, #6, 65a4 <Perl__inverse_folds@plt+0xba4>
    67a0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    67a4:	add	x3, x3, #0x330
    67a8:	add	x3, x3, #0xb0
    67ac:	mov	w2, #0x1006                	// #4102
    67b0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    67b4:	add	x1, x1, #0xcb0
    67b8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    67bc:	add	x0, x0, #0xe88
    67c0:	bl	58e0 <__assert_fail@plt>
    67c4:	sub	x5, x20, x5
    67c8:	sub	w5, w19, w5
    67cc:	add	w0, w19, w8
    67d0:	cmp	w7, w0
    67d4:	b.le	6430 <Perl__inverse_folds@plt+0xa30>
    67d8:	cmp	x22, w8, sxtw
    67dc:	b.le	6430 <Perl__inverse_folds@plt+0xa30>
    67e0:	b	67ec <Perl__inverse_folds@plt+0xdec>
    67e4:	cmp	x22, w8, sxtw
    67e8:	b.le	63f4 <Perl__inverse_folds@plt+0x9f4>
    67ec:	sub	w1, w7, w19
    67f0:	sxtw	x1, w1
    67f4:	cmp	x1, x22
    67f8:	csel	x1, x1, x22, le
    67fc:	cbnz	w6, 6430 <Perl__inverse_folds@plt+0xa30>
    6800:	b	63f4 <Perl__inverse_folds@plt+0x9f4>
    6804:	stp	x29, x30, [sp, #-96]!
    6808:	mov	x29, sp
    680c:	cbz	x1, 6888 <Perl__inverse_folds@plt+0xe88>
    6810:	stp	x19, x20, [sp, #16]
    6814:	stp	x21, x22, [sp, #32]
    6818:	stp	x23, x24, [sp, #48]
    681c:	stp	x25, x26, [sp, #64]
    6820:	mov	x21, x0
    6824:	mov	x20, x1
    6828:	mov	w19, #0x1                   	// #1
    682c:	mov	w25, #0x12                  	// #18
    6830:	mov	w24, #0x2                   	// #2
    6834:	mov	w23, #0x4000                	// #16384
    6838:	movk	w23, #0x40, lsl #16
    683c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
    6840:	ldr	x22, [x22, #3888]
    6844:	ldr	x3, [x20, #88]
    6848:	sbfiz	x2, x19, #2, #32
    684c:	add	x2, x2, w19, sxtw
    6850:	add	x2, x3, x2, lsl #3
    6854:	ldr	x1, [x2, #24]
    6858:	cbz	x1, 6864 <Perl__inverse_folds@plt+0xe64>
    685c:	ldr	x0, [x2, #32]
    6860:	cbz	x0, 68c0 <Perl__inverse_folds@plt+0xec0>
    6864:	sub	w19, w19, #0x1
    6868:	cmn	w19, #0x1
    686c:	b.ne	6844 <Perl__inverse_folds@plt+0xe44>  // b.any
    6870:	ldp	x19, x20, [sp, #16]
    6874:	ldp	x21, x22, [sp, #32]
    6878:	ldp	x23, x24, [sp, #48]
    687c:	ldp	x25, x26, [sp, #64]
    6880:	ldp	x29, x30, [sp], #96
    6884:	ret
    6888:	stp	x19, x20, [sp, #16]
    688c:	stp	x21, x22, [sp, #32]
    6890:	stp	x23, x24, [sp, #48]
    6894:	stp	x25, x26, [sp, #64]
    6898:	stp	x27, x28, [sp, #80]
    689c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    68a0:	add	x3, x3, #0x330
    68a4:	add	x3, x3, #0xc0
    68a8:	mov	w2, #0x2843                	// #10307
    68ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    68b0:	add	x1, x1, #0xcb0
    68b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    68b8:	add	x0, x0, #0xef0
    68bc:	bl	58e0 <__assert_fail@plt>
    68c0:	stp	x27, x28, [sp, #80]
    68c4:	mov	w2, w25
    68c8:	mov	x0, x21
    68cc:	bl	5980 <Perl_newSVsv_flags@plt>
    68d0:	mov	x27, x0
    68d4:	ldr	x1, [x20, #88]
    68d8:	sxtw	x28, w19
    68dc:	sbfiz	x26, x19, #2, #32
    68e0:	add	x0, x26, x28
    68e4:	add	x0, x1, x0, lsl #3
    68e8:	str	x27, [x0, #32]
    68ec:	mov	x3, #0x0                   	// #0
    68f0:	mov	w2, w24
    68f4:	mov	x1, x27
    68f8:	mov	x0, x21
    68fc:	bl	53d0 <Perl_sv_utf8_upgrade_flags_grow@plt>
    6900:	ldr	x0, [x20, #88]
    6904:	add	x26, x26, x28
    6908:	add	x26, x0, x26, lsl #3
    690c:	ldr	x0, [x26, #24]
    6910:	ldr	w1, [x0, #12]
    6914:	and	w2, w1, w23
    6918:	cmp	w2, #0x404, lsl #12
    691c:	b.eq	6948 <Perl__inverse_folds@plt+0xf48>  // b.none
    6920:	ldr	x1, [x20, #88]
    6924:	sbfiz	x0, x19, #2, #32
    6928:	add	x0, x0, w19, sxtw
    692c:	add	x0, x1, x0, lsl #3
    6930:	ldr	x2, [x0, #24]
    6934:	ldr	x0, [x1, #104]
    6938:	cmp	x2, x0
    693c:	b.eq	6c38 <Perl__inverse_folds@plt+0x1238>  // b.none
    6940:	ldp	x27, x28, [sp, #80]
    6944:	b	6864 <Perl__inverse_folds@plt+0xe64>
    6948:	and	w1, w1, #0xff
    694c:	cmp	w1, #0x6
    6950:	b.ls	6a28 <Perl__inverse_folds@plt+0x1028>  // b.plast
    6954:	ldr	x1, [x0]
    6958:	ldr	x1, [x1, #8]
    695c:	cbz	x1, 6920 <Perl__inverse_folds@plt+0xf20>
    6960:	ldrb	w1, [x1, #18]
    6964:	cmp	w1, #0x42
    6968:	b.ne	6a4c <Perl__inverse_folds@plt+0x104c>  // b.any
    696c:	ldr	x1, [x20, #88]
    6970:	sbfiz	x0, x19, #2, #32
    6974:	add	x0, x0, w19, sxtw
    6978:	add	x0, x1, x0, lsl #3
    697c:	ldr	x26, [x0, #24]
    6980:	ldr	w0, [x26, #12]
    6984:	and	w1, w0, #0xff
    6988:	cmp	w1, #0xb
    698c:	b.eq	6a5c <Perl__inverse_folds@plt+0x105c>  // b.none
    6990:	cmp	w1, #0xc
    6994:	b.eq	6a80 <Perl__inverse_folds@plt+0x1080>  // b.none
    6998:	mov	w2, #0x2200                	// #8704
    699c:	tst	w0, w2
    69a0:	b.ne	6aa4 <Perl__inverse_folds@plt+0x10a4>  // b.any
    69a4:	and	w0, w0, w23
    69a8:	cmp	w0, #0x404, lsl #12
    69ac:	b.ne	6afc <Perl__inverse_folds@plt+0x10fc>  // b.any
    69b0:	cmp	w1, #0x6
    69b4:	b.ls	6ac8 <Perl__inverse_folds@plt+0x10c8>  // b.plast
    69b8:	ldr	x0, [x26]
    69bc:	ldr	x0, [x0, #8]
    69c0:	cbz	x0, 6afc <Perl__inverse_folds@plt+0x10fc>
    69c4:	ldrb	w0, [x0, #18]
    69c8:	cmp	w0, #0x42
    69cc:	b.ne	6aec <Perl__inverse_folds@plt+0x10ec>  // b.any
    69d0:	ldr	x0, [x26]
    69d4:	ldrb	w0, [x0, #40]
    69d8:	cbz	w0, 6c24 <Perl__inverse_folds@plt+0x1224>
    69dc:	ldr	w0, [x27, #12]
    69e0:	and	w1, w0, #0xf
    69e4:	ldrb	w1, [x22, w1, uxtw]
    69e8:	cbz	w1, 6b20 <Perl__inverse_folds@plt+0x1120>
    69ec:	and	w1, w0, #0xc000
    69f0:	cmp	w1, #0x8, lsl #12
    69f4:	b.eq	6b44 <Perl__inverse_folds@plt+0x1144>  // b.none
    69f8:	and	w0, w0, #0xff
    69fc:	cmp	w0, #0xf
    6a00:	b.eq	6bbc <Perl__inverse_folds@plt+0x11bc>  // b.none
    6a04:	ldr	x1, [x27]
    6a08:	ldr	x0, [x1, #16]
    6a0c:	sub	x0, x0, #0x1
    6a10:	str	x0, [x1, #16]
    6a14:	mov	w2, #0xf                   	// #15
    6a18:	mov	x1, x27
    6a1c:	mov	x0, x21
    6a20:	bl	5160 <Perl_fbm_compile@plt>
    6a24:	b	6920 <Perl__inverse_folds@plt+0xf20>
    6a28:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6a2c:	add	x3, x3, #0x330
    6a30:	add	x3, x3, #0xc0
    6a34:	mov	w2, #0x284b                	// #10315
    6a38:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6a3c:	add	x1, x1, #0xcb0
    6a40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6a44:	add	x0, x0, #0xef8
    6a48:	bl	58e0 <__assert_fail@plt>
    6a4c:	mov	w1, #0x42                  	// #66
    6a50:	bl	57d0 <Perl_mg_find@plt>
    6a54:	cbnz	x0, 696c <Perl__inverse_folds@plt+0xf6c>
    6a58:	b	6920 <Perl__inverse_folds@plt+0xf20>
    6a5c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6a60:	add	x3, x3, #0x330
    6a64:	add	x3, x3, #0xc0
    6a68:	mov	w2, #0x284c                	// #10316
    6a6c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6a70:	add	x1, x1, #0xcb0
    6a74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6a78:	add	x0, x0, #0xf18
    6a7c:	bl	58e0 <__assert_fail@plt>
    6a80:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6a84:	add	x3, x3, #0x330
    6a88:	add	x3, x3, #0xc0
    6a8c:	mov	w2, #0x284c                	// #10316
    6a90:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6a94:	add	x1, x1, #0xcb0
    6a98:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6a9c:	add	x0, x0, #0xf38
    6aa0:	bl	58e0 <__assert_fail@plt>
    6aa4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6aa8:	add	x3, x3, #0x330
    6aac:	add	x3, x3, #0xc0
    6ab0:	mov	w2, #0x284c                	// #10316
    6ab4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6ab8:	add	x1, x1, #0xcb0
    6abc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6ac0:	add	x0, x0, #0xf58
    6ac4:	bl	58e0 <__assert_fail@plt>
    6ac8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6acc:	add	x3, x3, #0x330
    6ad0:	add	x3, x3, #0xc0
    6ad4:	mov	w2, #0x284c                	// #10316
    6ad8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6adc:	add	x1, x1, #0xcb0
    6ae0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6ae4:	add	x0, x0, #0xef8
    6ae8:	bl	58e0 <__assert_fail@plt>
    6aec:	mov	w1, #0x42                  	// #66
    6af0:	mov	x0, x26
    6af4:	bl	57d0 <Perl_mg_find@plt>
    6af8:	cbnz	x0, 69d0 <Perl__inverse_folds@plt+0xfd0>
    6afc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6b00:	add	x3, x3, #0x330
    6b04:	add	x3, x3, #0xc0
    6b08:	mov	w2, #0x284c                	// #10316
    6b0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6b10:	add	x1, x1, #0xcb0
    6b14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6b18:	add	x0, x0, #0xf80
    6b1c:	bl	58e0 <__assert_fail@plt>
    6b20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6b24:	add	x3, x3, #0x330
    6b28:	add	x3, x3, #0xc0
    6b2c:	mov	w2, #0x284f                	// #10319
    6b30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6b34:	add	x1, x1, #0xcb0
    6b38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6b3c:	add	x0, x0, #0xf98
    6b40:	bl	58e0 <__assert_fail@plt>
    6b44:	and	w2, w0, #0xff
    6b48:	sub	w2, w2, #0x9
    6b4c:	cmp	w2, #0x1
    6b50:	b.ls	6b98 <Perl__inverse_folds@plt+0x1198>  // b.plast
    6b54:	and	w0, w0, #0xff
    6b58:	cmp	w0, #0xf
    6b5c:	b.eq	6bbc <Perl__inverse_folds@plt+0x11bc>  // b.none
    6b60:	cmp	w1, #0x8, lsl #12
    6b64:	b.ne	6a04 <Perl__inverse_folds@plt+0x1004>  // b.any
    6b68:	sub	w0, w0, #0x9
    6b6c:	cmp	w0, #0x1
    6b70:	b.hi	6a04 <Perl__inverse_folds@plt+0x1004>  // b.pmore
    6b74:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6b78:	add	x3, x3, #0x330
    6b7c:	add	x3, x3, #0xc0
    6b80:	mov	w2, #0x284f                	// #10319
    6b84:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6b88:	add	x1, x1, #0xcb0
    6b8c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6b90:	add	x0, x0, #0xe70
    6b94:	bl	58e0 <__assert_fail@plt>
    6b98:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6b9c:	add	x3, x3, #0x330
    6ba0:	add	x3, x3, #0xc0
    6ba4:	mov	w2, #0x284f                	// #10319
    6ba8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6bac:	add	x1, x1, #0xcb0
    6bb0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6bb4:	add	x0, x0, #0xfc8
    6bb8:	bl	58e0 <__assert_fail@plt>
    6bbc:	ldr	x0, [x27]
    6bc0:	ldrb	w0, [x0, #129]
    6bc4:	tbz	w0, #6, 6c00 <Perl__inverse_folds@plt+0x1200>
    6bc8:	cmp	w1, #0x8, lsl #12
    6bcc:	b.ne	6a04 <Perl__inverse_folds@plt+0x1004>  // b.any
    6bd0:	ldr	x0, [x27]
    6bd4:	ldrb	w0, [x0, #129]
    6bd8:	tbnz	w0, #6, 6a04 <Perl__inverse_folds@plt+0x1004>
    6bdc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6be0:	add	x3, x3, #0x330
    6be4:	add	x3, x3, #0xc0
    6be8:	mov	w2, #0x284f                	// #10319
    6bec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6bf0:	add	x1, x1, #0xcb0
    6bf4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6bf8:	add	x0, x0, #0xe88
    6bfc:	bl	58e0 <__assert_fail@plt>
    6c00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6c04:	add	x3, x3, #0x330
    6c08:	add	x3, x3, #0xc0
    6c0c:	mov	w2, #0x284f                	// #10319
    6c10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6c14:	add	x1, x1, #0xcb0
    6c18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6c1c:	add	x0, x0, #0xfe0
    6c20:	bl	58e0 <__assert_fail@plt>
    6c24:	mov	w2, #0x0                   	// #0
    6c28:	mov	x1, x27
    6c2c:	mov	x0, x21
    6c30:	bl	5160 <Perl_fbm_compile@plt>
    6c34:	b	6920 <Perl__inverse_folds@plt+0xf20>
    6c38:	str	x27, [x1, #112]
    6c3c:	ldp	x27, x28, [sp, #80]
    6c40:	b	6864 <Perl__inverse_folds@plt+0xe64>
    6c44:	stp	x29, x30, [sp, #-16]!
    6c48:	mov	x29, sp
    6c4c:	cbz	x0, 6ca0 <Perl__inverse_folds@plt+0x12a0>
    6c50:	mov	x3, x0
    6c54:	cbz	x2, 6cc4 <Perl__inverse_folds@plt+0x12c4>
    6c58:	tbnz	x1, #63, 6ce8 <Perl__inverse_folds@plt+0x12e8>
    6c5c:	sub	x4, x1, #0x1
    6c60:	cmp	x1, #0x0
    6c64:	ccmp	x0, x2, #0x2, ne  // ne = any
    6c68:	b.cs	6c90 <Perl__inverse_folds@plt+0x1290>  // b.hs, b.nlast
    6c6c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    6c70:	ldr	x1, [x1, #4064]
    6c74:	ldrb	w0, [x3]
    6c78:	ldrb	w0, [x1, w0, sxtw]
    6c7c:	add	x3, x3, x0
    6c80:	cmp	x4, #0x0
    6c84:	sub	x4, x4, #0x1
    6c88:	ccmp	x2, x3, #0x0, ne  // ne = any
    6c8c:	b.hi	6c74 <Perl__inverse_folds@plt+0x1274>  // b.pmore
    6c90:	cmp	x4, #0x0
    6c94:	csel	x0, x3, xzr, lt  // lt = tstop
    6c98:	ldp	x29, x30, [sp], #16
    6c9c:	ret
    6ca0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6ca4:	add	x3, x3, #0x330
    6ca8:	add	x3, x3, #0xd8
    6cac:	mov	w2, #0x278c                	// #10124
    6cb0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6cb4:	add	x1, x1, #0xcb0
    6cb8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6cbc:	add	x0, x0, #0xce8
    6cc0:	bl	58e0 <__assert_fail@plt>
    6cc4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6cc8:	add	x3, x3, #0x330
    6ccc:	add	x3, x3, #0xd8
    6cd0:	mov	w2, #0x278c                	// #10124
    6cd4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6cd8:	add	x1, x1, #0xcb0
    6cdc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6ce0:	add	x0, x0, #0x20
    6ce4:	bl	58e0 <__assert_fail@plt>
    6ce8:	add	x4, x1, #0x1
    6cec:	mov	x0, #0x0                   	// #0
    6cf0:	cmp	x3, x2
    6cf4:	b.hi	6d20 <Perl__inverse_folds@plt+0x1320>  // b.pmore
    6cf8:	b	6c98 <Perl__inverse_folds@plt+0x1298>
    6cfc:	mov	x3, x0
    6d00:	ldrb	w0, [x3]
    6d04:	cmp	w0, #0xc1
    6d08:	b.ls	6d70 <Perl__inverse_folds@plt+0x1370>  // b.plast
    6d0c:	add	x1, x4, #0x1
    6d10:	cmp	x4, #0x0
    6d14:	ccmp	x3, x2, #0x0, ne  // ne = any
    6d18:	b.ls	6d7c <Perl__inverse_folds@plt+0x137c>  // b.plast
    6d1c:	mov	x4, x1
    6d20:	sub	x0, x3, #0x1
    6d24:	ldursb	w1, [x3, #-1]
    6d28:	mov	x3, x0
    6d2c:	tbz	w1, #31, 6d0c <Perl__inverse_folds@plt+0x130c>
    6d30:	cmp	x2, x0
    6d34:	b.cs	6d00 <Perl__inverse_folds@plt+0x1300>  // b.hs, b.nlast
    6d38:	ldrb	w1, [x0]
    6d3c:	and	w1, w1, #0xc0
    6d40:	cmp	w1, #0x80
    6d44:	b.ne	6cfc <Perl__inverse_folds@plt+0x12fc>  // b.any
    6d48:	sub	x0, x0, #0x1
    6d4c:	cmp	x2, x0
    6d50:	b.ne	6d38 <Perl__inverse_folds@plt+0x1338>  // b.any
    6d54:	ldrb	w1, [x0]
    6d58:	cmp	w1, #0xc1
    6d5c:	b.ls	6d70 <Perl__inverse_folds@plt+0x1370>  // b.plast
    6d60:	add	x1, x4, #0x1
    6d64:	cmp	x1, #0x0
    6d68:	csel	x0, x0, xzr, gt
    6d6c:	b	6c98 <Perl__inverse_folds@plt+0x1298>
    6d70:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6d74:	add	x0, x0, #0x28
    6d78:	bl	5530 <Perl_croak_nocontext@plt>
    6d7c:	mov	x0, x3
    6d80:	b	6d64 <Perl__inverse_folds@plt+0x1364>
    6d84:	stp	x29, x30, [sp, #-16]!
    6d88:	mov	x29, sp
    6d8c:	cbz	x0, 6de4 <Perl__inverse_folds@plt+0x13e4>
    6d90:	mov	x4, x0
    6d94:	cbz	x2, 6e08 <Perl__inverse_folds@plt+0x1408>
    6d98:	cbz	x3, 6e2c <Perl__inverse_folds@plt+0x142c>
    6d9c:	tbnz	x1, #63, 6e50 <Perl__inverse_folds@plt+0x1450>
    6da0:	sub	x2, x1, #0x1
    6da4:	cmp	x1, #0x0
    6da8:	ccmp	x0, x3, #0x2, ne  // ne = any
    6dac:	b.cs	6ddc <Perl__inverse_folds@plt+0x13dc>  // b.hs, b.nlast
    6db0:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
    6db4:	ldr	x4, [x4, #4064]
    6db8:	ldrb	w1, [x0]
    6dbc:	ldrb	w1, [x4, w1, sxtw]
    6dc0:	add	x0, x0, x1
    6dc4:	cmp	x3, x0
    6dc8:	cset	w1, hi  // hi = pmore
    6dcc:	cmp	x2, #0x0
    6dd0:	csel	w1, w1, wzr, ne  // ne = any
    6dd4:	sub	x2, x2, #0x1
    6dd8:	cbnz	w1, 6db8 <Perl__inverse_folds@plt+0x13b8>
    6ddc:	ldp	x29, x30, [sp], #16
    6de0:	ret
    6de4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6de8:	add	x3, x3, #0x330
    6dec:	add	x3, x3, #0xe8
    6df0:	mov	w2, #0x276e                	// #10094
    6df4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6df8:	add	x1, x1, #0xcb0
    6dfc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6e00:	add	x0, x0, #0xce8
    6e04:	bl	58e0 <__assert_fail@plt>
    6e08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6e0c:	add	x3, x3, #0x330
    6e10:	add	x3, x3, #0xe8
    6e14:	mov	w2, #0x276e                	// #10094
    6e18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6e1c:	add	x1, x1, #0xcb0
    6e20:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6e24:	add	x0, x0, #0x50
    6e28:	bl	58e0 <__assert_fail@plt>
    6e2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6e30:	add	x3, x3, #0x330
    6e34:	add	x3, x3, #0xe8
    6e38:	mov	w2, #0x276e                	// #10094
    6e3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6e40:	add	x1, x1, #0xcb0
    6e44:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6e48:	add	x0, x0, #0x58
    6e4c:	bl	58e0 <__assert_fail@plt>
    6e50:	add	x3, x1, #0x1
    6e54:	cmp	x0, x2
    6e58:	b.hi	6e88 <Perl__inverse_folds@plt+0x1488>  // b.pmore
    6e5c:	b	6ddc <Perl__inverse_folds@plt+0x13dc>
    6e60:	mov	x4, x0
    6e64:	ldrb	w0, [x4]
    6e68:	cmp	w0, #0xc1
    6e6c:	b.ls	6ec8 <Perl__inverse_folds@plt+0x14c8>  // b.plast
    6e70:	cmp	x4, x2
    6e74:	cset	w0, hi  // hi = pmore
    6e78:	cmp	x3, #0x0
    6e7c:	csel	w0, w0, wzr, ne  // ne = any
    6e80:	add	x3, x3, #0x1
    6e84:	cbz	w0, 6ed4 <Perl__inverse_folds@plt+0x14d4>
    6e88:	sub	x0, x4, #0x1
    6e8c:	ldursb	w1, [x4, #-1]
    6e90:	mov	x4, x0
    6e94:	tbz	w1, #31, 6e70 <Perl__inverse_folds@plt+0x1470>
    6e98:	cmp	x2, x0
    6e9c:	b.cs	6e64 <Perl__inverse_folds@plt+0x1464>  // b.hs, b.nlast
    6ea0:	ldrb	w1, [x0]
    6ea4:	and	w1, w1, #0xc0
    6ea8:	cmp	w1, #0x80
    6eac:	b.ne	6e60 <Perl__inverse_folds@plt+0x1460>  // b.any
    6eb0:	sub	x0, x0, #0x1
    6eb4:	cmp	x2, x0
    6eb8:	b.ne	6ea0 <Perl__inverse_folds@plt+0x14a0>  // b.any
    6ebc:	ldrb	w1, [x0]
    6ec0:	cmp	w1, #0xc1
    6ec4:	b.hi	6ddc <Perl__inverse_folds@plt+0x13dc>  // b.pmore
    6ec8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6ecc:	add	x0, x0, #0x28
    6ed0:	bl	5530 <Perl_croak_nocontext@plt>
    6ed4:	mov	x0, x4
    6ed8:	b	6ddc <Perl__inverse_folds@plt+0x13dc>
    6edc:	stp	x29, x30, [sp, #-16]!
    6ee0:	mov	x29, sp
    6ee4:	cbz	x0, 6f28 <Perl__inverse_folds@plt+0x1528>
    6ee8:	mov	x4, x0
    6eec:	cbz	x2, 6f4c <Perl__inverse_folds@plt+0x154c>
    6ef0:	tbnz	x1, #63, 6f70 <Perl__inverse_folds@plt+0x1570>
    6ef4:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
    6ef8:	ldr	x4, [x4, #4064]
    6efc:	cmp	x1, #0x0
    6f00:	ccmp	x0, x2, #0x2, ne  // ne = any
    6f04:	b.cs	6fe8 <Perl__inverse_folds@plt+0x15e8>  // b.hs, b.nlast
    6f08:	ldrb	w3, [x0]
    6f0c:	ldrb	w3, [x4, w3, sxtw]
    6f10:	add	x3, x0, x3
    6f14:	sub	x1, x1, #0x1
    6f18:	cmp	x2, x3
    6f1c:	b.cc	6fe8 <Perl__inverse_folds@plt+0x15e8>  // b.lo, b.ul, b.last
    6f20:	mov	x0, x3
    6f24:	b	6efc <Perl__inverse_folds@plt+0x14fc>
    6f28:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6f2c:	add	x3, x3, #0x330
    6f30:	add	x3, x3, #0xf8
    6f34:	mov	w2, #0x2750                	// #10064
    6f38:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6f3c:	add	x1, x1, #0xcb0
    6f40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    6f44:	add	x0, x0, #0xce8
    6f48:	bl	58e0 <__assert_fail@plt>
    6f4c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    6f50:	add	x3, x3, #0x330
    6f54:	add	x3, x3, #0xf8
    6f58:	mov	w2, #0x2750                	// #10064
    6f5c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    6f60:	add	x1, x1, #0xcb0
    6f64:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6f68:	add	x0, x0, #0x20
    6f6c:	bl	58e0 <__assert_fail@plt>
    6f70:	add	x3, x1, #0x1
    6f74:	cmp	x0, x2
    6f78:	b.hi	6fa8 <Perl__inverse_folds@plt+0x15a8>  // b.pmore
    6f7c:	b	6fe8 <Perl__inverse_folds@plt+0x15e8>
    6f80:	mov	x4, x0
    6f84:	ldrb	w0, [x4]
    6f88:	cmp	w0, #0xc1
    6f8c:	b.ls	6ff0 <Perl__inverse_folds@plt+0x15f0>  // b.plast
    6f90:	cmp	x4, x2
    6f94:	cset	w0, hi  // hi = pmore
    6f98:	cmp	x3, #0x0
    6f9c:	csel	w0, w0, wzr, ne  // ne = any
    6fa0:	add	x3, x3, #0x1
    6fa4:	cbz	w0, 6ffc <Perl__inverse_folds@plt+0x15fc>
    6fa8:	sub	x0, x4, #0x1
    6fac:	ldursb	w1, [x4, #-1]
    6fb0:	mov	x4, x0
    6fb4:	tbz	w1, #31, 6f90 <Perl__inverse_folds@plt+0x1590>
    6fb8:	cmp	x2, x0
    6fbc:	b.cs	6f84 <Perl__inverse_folds@plt+0x1584>  // b.hs, b.nlast
    6fc0:	ldrb	w1, [x0]
    6fc4:	and	w1, w1, #0xc0
    6fc8:	cmp	w1, #0x80
    6fcc:	b.ne	6f80 <Perl__inverse_folds@plt+0x1580>  // b.any
    6fd0:	sub	x0, x0, #0x1
    6fd4:	cmp	x2, x0
    6fd8:	b.ne	6fc0 <Perl__inverse_folds@plt+0x15c0>  // b.any
    6fdc:	ldrb	w1, [x0]
    6fe0:	cmp	w1, #0xc1
    6fe4:	b.ls	6ff0 <Perl__inverse_folds@plt+0x15f0>  // b.plast
    6fe8:	ldp	x29, x30, [sp], #16
    6fec:	ret
    6ff0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    6ff4:	add	x0, x0, #0x28
    6ff8:	bl	5530 <Perl_croak_nocontext@plt>
    6ffc:	mov	x0, x4
    7000:	b	6fe8 <Perl__inverse_folds@plt+0x15e8>
    7004:	stp	x29, x30, [sp, #-96]!
    7008:	mov	x29, sp
    700c:	cbz	x1, 7090 <Perl__inverse_folds@plt+0x1690>
    7010:	stp	x19, x20, [sp, #16]
    7014:	stp	x21, x22, [sp, #32]
    7018:	stp	x23, x24, [sp, #48]
    701c:	stp	x25, x26, [sp, #64]
    7020:	mov	x21, x0
    7024:	mov	x20, x1
    7028:	mov	w19, #0x1                   	// #1
    702c:	mov	w25, #0x12                  	// #18
    7030:	mov	w24, #0x1                   	// #1
    7034:	mov	w23, #0x4000                	// #16384
    7038:	movk	w23, #0x40, lsl #16
    703c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
    7040:	ldr	x22, [x22, #3888]
    7044:	ldr	x3, [x20, #88]
    7048:	sbfiz	x2, x19, #2, #32
    704c:	add	x2, x2, w19, sxtw
    7050:	add	x2, x3, x2, lsl #3
    7054:	ldr	x1, [x2, #32]
    7058:	cbz	x1, 7064 <Perl__inverse_folds@plt+0x1664>
    705c:	ldr	x0, [x2, #24]
    7060:	cbz	x0, 70c8 <Perl__inverse_folds@plt+0x16c8>
    7064:	sub	w19, w19, #0x1
    7068:	cmn	w19, #0x1
    706c:	b.ne	7044 <Perl__inverse_folds@plt+0x1644>  // b.any
    7070:	mov	w26, #0x1                   	// #1
    7074:	mov	w0, w26
    7078:	ldp	x19, x20, [sp, #16]
    707c:	ldp	x21, x22, [sp, #32]
    7080:	ldp	x23, x24, [sp, #48]
    7084:	ldp	x25, x26, [sp, #64]
    7088:	ldp	x29, x30, [sp], #96
    708c:	ret
    7090:	stp	x19, x20, [sp, #16]
    7094:	stp	x21, x22, [sp, #32]
    7098:	stp	x23, x24, [sp, #48]
    709c:	stp	x25, x26, [sp, #64]
    70a0:	str	x27, [sp, #80]
    70a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    70a8:	add	x3, x3, #0x330
    70ac:	add	x3, x3, #0x108
    70b0:	mov	w2, #0x2865                	// #10341
    70b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    70b8:	add	x1, x1, #0xcb0
    70bc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    70c0:	add	x0, x0, #0xef0
    70c4:	bl	58e0 <__assert_fail@plt>
    70c8:	str	x27, [sp, #80]
    70cc:	mov	w2, w25
    70d0:	mov	x0, x21
    70d4:	bl	5980 <Perl_newSVsv_flags@plt>
    70d8:	mov	x27, x0
    70dc:	mov	w2, w24
    70e0:	mov	x1, x0
    70e4:	mov	x0, x21
    70e8:	bl	4f90 <Perl_sv_utf8_downgrade@plt>
    70ec:	ands	w26, w0, #0xff
    70f0:	b.eq	7154 <Perl__inverse_folds@plt+0x1754>  // b.none
    70f4:	ldr	x1, [x20, #88]
    70f8:	sbfiz	x0, x19, #2, #32
    70fc:	add	x0, x0, w19, sxtw
    7100:	add	x0, x1, x0, lsl #3
    7104:	ldr	x0, [x0, #32]
    7108:	ldr	w1, [x0, #12]
    710c:	and	w2, w1, w23
    7110:	cmp	w2, #0x404, lsl #12
    7114:	b.eq	7184 <Perl__inverse_folds@plt+0x1784>  // b.none
    7118:	ldr	x3, [x20, #88]
    711c:	sxtw	x2, w19
    7120:	sbfiz	x1, x19, #2, #32
    7124:	add	x0, x1, x2
    7128:	add	x0, x3, x0, lsl #3
    712c:	str	x27, [x0, #24]
    7130:	ldr	x0, [x20, #88]
    7134:	add	x1, x1, x2
    7138:	add	x1, x0, x1, lsl #3
    713c:	ldr	x2, [x1, #32]
    7140:	ldr	x1, [x0, #112]
    7144:	cmp	x2, x1
    7148:	b.eq	7474 <Perl__inverse_folds@plt+0x1a74>  // b.none
    714c:	ldr	x27, [sp, #80]
    7150:	b	7064 <Perl__inverse_folds@plt+0x1664>
    7154:	ldr	w2, [x27, #8]
    7158:	cmp	w2, #0x1
    715c:	b.ls	7170 <Perl__inverse_folds@plt+0x1770>  // b.plast
    7160:	sub	w2, w2, #0x1
    7164:	str	w2, [x27, #8]
    7168:	ldr	x27, [sp, #80]
    716c:	b	7074 <Perl__inverse_folds@plt+0x1674>
    7170:	mov	x1, x27
    7174:	mov	x0, x21
    7178:	bl	5860 <Perl_sv_free2@plt>
    717c:	ldr	x27, [sp, #80]
    7180:	b	7074 <Perl__inverse_folds@plt+0x1674>
    7184:	and	w1, w1, #0xff
    7188:	cmp	w1, #0x6
    718c:	b.ls	7264 <Perl__inverse_folds@plt+0x1864>  // b.plast
    7190:	ldr	x1, [x0]
    7194:	ldr	x1, [x1, #8]
    7198:	cbz	x1, 7118 <Perl__inverse_folds@plt+0x1718>
    719c:	ldrb	w1, [x1, #18]
    71a0:	cmp	w1, #0x42
    71a4:	b.ne	7288 <Perl__inverse_folds@plt+0x1888>  // b.any
    71a8:	ldr	x1, [x20, #88]
    71ac:	sbfiz	x0, x19, #2, #32
    71b0:	add	x0, x0, w19, sxtw
    71b4:	add	x0, x1, x0, lsl #3
    71b8:	ldr	x26, [x0, #32]
    71bc:	ldr	w0, [x26, #12]
    71c0:	and	w1, w0, #0xff
    71c4:	cmp	w1, #0xb
    71c8:	b.eq	7298 <Perl__inverse_folds@plt+0x1898>  // b.none
    71cc:	cmp	w1, #0xc
    71d0:	b.eq	72bc <Perl__inverse_folds@plt+0x18bc>  // b.none
    71d4:	mov	w2, #0x2200                	// #8704
    71d8:	tst	w0, w2
    71dc:	b.ne	72e0 <Perl__inverse_folds@plt+0x18e0>  // b.any
    71e0:	and	w0, w0, w23
    71e4:	cmp	w0, #0x404, lsl #12
    71e8:	b.ne	7338 <Perl__inverse_folds@plt+0x1938>  // b.any
    71ec:	cmp	w1, #0x6
    71f0:	b.ls	7304 <Perl__inverse_folds@plt+0x1904>  // b.plast
    71f4:	ldr	x0, [x26]
    71f8:	ldr	x0, [x0, #8]
    71fc:	cbz	x0, 7338 <Perl__inverse_folds@plt+0x1938>
    7200:	ldrb	w0, [x0, #18]
    7204:	cmp	w0, #0x42
    7208:	b.ne	7328 <Perl__inverse_folds@plt+0x1928>  // b.any
    720c:	ldr	x0, [x26]
    7210:	ldrb	w0, [x0, #40]
    7214:	cbz	w0, 7460 <Perl__inverse_folds@plt+0x1a60>
    7218:	ldr	w0, [x27, #12]
    721c:	and	w1, w0, #0xf
    7220:	ldrb	w1, [x22, w1, uxtw]
    7224:	cbz	w1, 735c <Perl__inverse_folds@plt+0x195c>
    7228:	and	w1, w0, #0xc000
    722c:	cmp	w1, #0x8, lsl #12
    7230:	b.eq	7380 <Perl__inverse_folds@plt+0x1980>  // b.none
    7234:	and	w0, w0, #0xff
    7238:	cmp	w0, #0xf
    723c:	b.eq	73f8 <Perl__inverse_folds@plt+0x19f8>  // b.none
    7240:	ldr	x1, [x27]
    7244:	ldr	x0, [x1, #16]
    7248:	sub	x0, x0, #0x1
    724c:	str	x0, [x1, #16]
    7250:	mov	w2, #0xf                   	// #15
    7254:	mov	x1, x27
    7258:	mov	x0, x21
    725c:	bl	5160 <Perl_fbm_compile@plt>
    7260:	b	7118 <Perl__inverse_folds@plt+0x1718>
    7264:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7268:	add	x3, x3, #0x330
    726c:	add	x3, x3, #0x108
    7270:	mov	w2, #0x286f                	// #10351
    7274:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7278:	add	x1, x1, #0xcb0
    727c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7280:	add	x0, x0, #0xef8
    7284:	bl	58e0 <__assert_fail@plt>
    7288:	mov	w1, #0x42                  	// #66
    728c:	bl	57d0 <Perl_mg_find@plt>
    7290:	cbnz	x0, 71a8 <Perl__inverse_folds@plt+0x17a8>
    7294:	b	7118 <Perl__inverse_folds@plt+0x1718>
    7298:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    729c:	add	x3, x3, #0x330
    72a0:	add	x3, x3, #0x108
    72a4:	mov	w2, #0x2870                	// #10352
    72a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    72ac:	add	x1, x1, #0xcb0
    72b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    72b4:	add	x0, x0, #0xf18
    72b8:	bl	58e0 <__assert_fail@plt>
    72bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    72c0:	add	x3, x3, #0x330
    72c4:	add	x3, x3, #0x108
    72c8:	mov	w2, #0x2870                	// #10352
    72cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    72d0:	add	x1, x1, #0xcb0
    72d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    72d8:	add	x0, x0, #0xf38
    72dc:	bl	58e0 <__assert_fail@plt>
    72e0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    72e4:	add	x3, x3, #0x330
    72e8:	add	x3, x3, #0x108
    72ec:	mov	w2, #0x2870                	// #10352
    72f0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    72f4:	add	x1, x1, #0xcb0
    72f8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    72fc:	add	x0, x0, #0xf58
    7300:	bl	58e0 <__assert_fail@plt>
    7304:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7308:	add	x3, x3, #0x330
    730c:	add	x3, x3, #0x108
    7310:	mov	w2, #0x2870                	// #10352
    7314:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7318:	add	x1, x1, #0xcb0
    731c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7320:	add	x0, x0, #0xef8
    7324:	bl	58e0 <__assert_fail@plt>
    7328:	mov	w1, #0x42                  	// #66
    732c:	mov	x0, x26
    7330:	bl	57d0 <Perl_mg_find@plt>
    7334:	cbnz	x0, 720c <Perl__inverse_folds@plt+0x180c>
    7338:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    733c:	add	x3, x3, #0x330
    7340:	add	x3, x3, #0x108
    7344:	mov	w2, #0x2870                	// #10352
    7348:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    734c:	add	x1, x1, #0xcb0
    7350:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7354:	add	x0, x0, #0xf80
    7358:	bl	58e0 <__assert_fail@plt>
    735c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7360:	add	x3, x3, #0x330
    7364:	add	x3, x3, #0x108
    7368:	mov	w2, #0x2873                	// #10355
    736c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7370:	add	x1, x1, #0xcb0
    7374:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7378:	add	x0, x0, #0xf98
    737c:	bl	58e0 <__assert_fail@plt>
    7380:	and	w2, w0, #0xff
    7384:	sub	w2, w2, #0x9
    7388:	cmp	w2, #0x1
    738c:	b.ls	73d4 <Perl__inverse_folds@plt+0x19d4>  // b.plast
    7390:	and	w0, w0, #0xff
    7394:	cmp	w0, #0xf
    7398:	b.eq	73f8 <Perl__inverse_folds@plt+0x19f8>  // b.none
    739c:	cmp	w1, #0x8, lsl #12
    73a0:	b.ne	7240 <Perl__inverse_folds@plt+0x1840>  // b.any
    73a4:	sub	w0, w0, #0x9
    73a8:	cmp	w0, #0x1
    73ac:	b.hi	7240 <Perl__inverse_folds@plt+0x1840>  // b.pmore
    73b0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    73b4:	add	x3, x3, #0x330
    73b8:	add	x3, x3, #0x108
    73bc:	mov	w2, #0x2873                	// #10355
    73c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    73c4:	add	x1, x1, #0xcb0
    73c8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    73cc:	add	x0, x0, #0xe70
    73d0:	bl	58e0 <__assert_fail@plt>
    73d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    73d8:	add	x3, x3, #0x330
    73dc:	add	x3, x3, #0x108
    73e0:	mov	w2, #0x2873                	// #10355
    73e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    73e8:	add	x1, x1, #0xcb0
    73ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    73f0:	add	x0, x0, #0xfc8
    73f4:	bl	58e0 <__assert_fail@plt>
    73f8:	ldr	x0, [x27]
    73fc:	ldrb	w0, [x0, #129]
    7400:	tbz	w0, #6, 743c <Perl__inverse_folds@plt+0x1a3c>
    7404:	cmp	w1, #0x8, lsl #12
    7408:	b.ne	7240 <Perl__inverse_folds@plt+0x1840>  // b.any
    740c:	ldr	x0, [x27]
    7410:	ldrb	w0, [x0, #129]
    7414:	tbnz	w0, #6, 7240 <Perl__inverse_folds@plt+0x1840>
    7418:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    741c:	add	x3, x3, #0x330
    7420:	add	x3, x3, #0x108
    7424:	mov	w2, #0x2873                	// #10355
    7428:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    742c:	add	x1, x1, #0xcb0
    7430:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7434:	add	x0, x0, #0xe88
    7438:	bl	58e0 <__assert_fail@plt>
    743c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7440:	add	x3, x3, #0x330
    7444:	add	x3, x3, #0x108
    7448:	mov	w2, #0x2873                	// #10355
    744c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7450:	add	x1, x1, #0xcb0
    7454:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7458:	add	x0, x0, #0xfe0
    745c:	bl	58e0 <__assert_fail@plt>
    7460:	mov	w2, #0x0                   	// #0
    7464:	mov	x1, x27
    7468:	mov	x0, x21
    746c:	bl	5160 <Perl_fbm_compile@plt>
    7470:	b	7118 <Perl__inverse_folds@plt+0x1718>
    7474:	str	x27, [x0, #104]
    7478:	ldr	x27, [sp, #80]
    747c:	b	7064 <Perl__inverse_folds@plt+0x1664>
    7480:	stp	x29, x30, [sp, #-16]!
    7484:	mov	x29, sp
    7488:	bl	59d0 <Perl__invlist_search@plt>
    748c:	tbnz	x0, #63, 7498 <Perl__inverse_folds@plt+0x1a98>
    7490:	ldp	x29, x30, [sp], #16
    7494:	ret
    7498:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    749c:	add	x3, x3, #0x330
    74a0:	add	x3, x3, #0x120
    74a4:	mov	w2, #0x7e2                 	// #2018
    74a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    74ac:	add	x1, x1, #0xcb0
    74b0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    74b4:	add	x0, x0, #0x60
    74b8:	bl	58e0 <__assert_fail@plt>
    74bc:	stp	x29, x30, [sp, #-32]!
    74c0:	mov	x29, sp
    74c4:	str	x19, [sp, #16]
    74c8:	mov	x19, x0
    74cc:	ldr	x0, [x0, #288]
    74d0:	ldr	x0, [x0, #3952]
    74d4:	cbz	x0, 74e8 <Perl__inverse_folds@plt+0x1ae8>
    74d8:	str	x0, [x19, #288]
    74dc:	ldr	x19, [sp, #16]
    74e0:	ldp	x29, x30, [sp], #32
    74e4:	ret
    74e8:	mov	x0, #0xf78                 	// #3960
    74ec:	bl	5250 <Perl_safesysmalloc@plt>
    74f0:	ldr	x1, [x19, #288]
    74f4:	str	x1, [x0, #3944]
    74f8:	str	xzr, [x0, #3952]
    74fc:	str	x0, [x1, #3952]
    7500:	b	74d8 <Perl__inverse_folds@plt+0x1ad8>
    7504:	stp	x29, x30, [sp, #-48]!
    7508:	mov	x29, sp
    750c:	stp	x19, x20, [sp, #16]
    7510:	str	x21, [sp, #32]
    7514:	mov	x21, x0
    7518:	mov	x20, x1
    751c:	ldr	x19, [x1]
    7520:	ldr	x0, [x1, #24]
    7524:	bl	5650 <Perl_safesysfree@plt>
    7528:	cbz	x19, 75b8 <Perl__inverse_folds@plt+0x1bb8>
    752c:	ldr	x1, [x19, #24]
    7530:	cbz	x1, 7568 <Perl__inverse_folds@plt+0x1b68>
    7534:	ldr	x0, [x19]
    7538:	str	x1, [x0, #136]
    753c:	ldr	x1, [x19, #32]
    7540:	str	x1, [x0, #152]
    7544:	ldr	x1, [x19, #40]
    7548:	str	x1, [x0, #160]
    754c:	ldr	x1, [x19, #48]
    7550:	str	x1, [x0, #168]
    7554:	ldr	x1, [x19, #16]
    7558:	str	x1, [x0, #144]
    755c:	ldr	w1, [x0, #56]
    7560:	orr	w1, w1, #0x2000000
    7564:	str	w1, [x0, #56]
    7568:	ldr	x0, [x19, #64]
    756c:	cbz	x0, 7594 <Perl__inverse_folds@plt+0x1b94>
    7570:	ldr	x1, [x19, #72]
    7574:	str	x1, [x0, #24]
    7578:	ldr	x2, [x19, #64]
    757c:	ldrb	w0, [x2, #19]
    7580:	and	w0, w0, #0xffffffbf
    7584:	ldrb	w1, [x19, #80]
    7588:	and	w1, w1, #0x40
    758c:	orr	w0, w0, w1
    7590:	strb	w0, [x2, #19]
    7594:	ldr	x0, [x19, #8]
    7598:	str	x0, [x21, #168]
    759c:	ldr	x1, [x19, #56]
    75a0:	cbz	x1, 75b8 <Perl__inverse_folds@plt+0x1bb8>
    75a4:	ldr	w2, [x1, #8]
    75a8:	cmp	w2, #0x1
    75ac:	b.ls	75f4 <Perl__inverse_folds@plt+0x1bf4>  // b.plast
    75b0:	sub	w2, w2, #0x1
    75b4:	str	w2, [x1, #8]
    75b8:	ldr	x0, [x20, #8]
    75bc:	str	x0, [x21, #296]
    75c0:	ldr	x0, [x20, #16]
    75c4:	str	x0, [x21, #288]
    75c8:	ldr	x19, [x0, #3952]
    75cc:	cbz	x19, 75e4 <Perl__inverse_folds@plt+0x1be4>
    75d0:	str	xzr, [x0, #3952]
    75d4:	mov	x0, x19
    75d8:	ldr	x19, [x19, #3952]
    75dc:	bl	5650 <Perl_safesysfree@plt>
    75e0:	cbnz	x19, 75d4 <Perl__inverse_folds@plt+0x1bd4>
    75e4:	ldp	x19, x20, [sp, #16]
    75e8:	ldr	x21, [sp, #32]
    75ec:	ldp	x29, x30, [sp], #48
    75f0:	ret
    75f4:	mov	x0, x21
    75f8:	bl	5860 <Perl_sv_free2@plt>
    75fc:	b	75b8 <Perl__inverse_folds@plt+0x1bb8>
    7600:	stp	x29, x30, [sp, #-16]!
    7604:	mov	x29, sp
    7608:	cbz	x0, 76b0 <Perl__inverse_folds@plt+0x1cb0>
    760c:	and	w2, w2, #0xff
    7610:	cbz	x1, 76d4 <Perl__inverse_folds@plt+0x1cd4>
    7614:	cmp	x0, x1
    7618:	b.hi	76f8 <Perl__inverse_folds@plt+0x1cf8>  // b.pmore
    761c:	and	x5, x0, #0x7
    7620:	sub	x4, x1, x0
    7624:	orr	x3, x0, x0, lsr #1
    7628:	ubfx	x6, x0, #2, #1
    762c:	orr	x3, x3, x6
    7630:	and	x3, x3, #0x1
    7634:	add	x3, x3, #0x1
    7638:	lsl	x3, x3, #3
    763c:	sub	x3, x3, x5
    7640:	cmp	x4, x3
    7644:	b.cc	768c <Perl__inverse_folds@plt+0x1c8c>  // b.lo, b.ul, b.last
    7648:	cbz	x5, 7664 <Perl__inverse_folds@plt+0x1c64>
    764c:	ldrb	w3, [x0]
    7650:	cmp	w3, w2
    7654:	b.ne	7770 <Perl__inverse_folds@plt+0x1d70>  // b.any
    7658:	add	x0, x0, #0x1
    765c:	tst	x0, #0x7
    7660:	b.ne	764c <Perl__inverse_folds@plt+0x1c4c>  // b.any
    7664:	and	x4, x2, #0xff
    7668:	mov	x3, #0x101010101010101     	// #72340172838076673
    766c:	mul	x4, x4, x3
    7670:	ldr	x3, [x0]
    7674:	cmp	x3, x4
    7678:	b.ne	771c <Perl__inverse_folds@plt+0x1d1c>  // b.any
    767c:	add	x0, x0, #0x8
    7680:	add	x3, x0, #0x8
    7684:	cmp	x1, x3
    7688:	b.cs	7670 <Perl__inverse_folds@plt+0x1c70>  // b.hs, b.nlast
    768c:	cmp	x1, x0
    7690:	b.ls	7770 <Perl__inverse_folds@plt+0x1d70>  // b.plast
    7694:	ldrb	w3, [x0]
    7698:	cmp	w3, w2
    769c:	b.ne	7770 <Perl__inverse_folds@plt+0x1d70>  // b.any
    76a0:	add	x0, x0, #0x1
    76a4:	cmp	x1, x0
    76a8:	b.ne	7694 <Perl__inverse_folds@plt+0x1c94>  // b.any
    76ac:	b	7770 <Perl__inverse_folds@plt+0x1d70>
    76b0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    76b4:	add	x3, x3, #0x330
    76b8:	add	x3, x3, #0x140
    76bc:	mov	w2, #0x215                 	// #533
    76c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    76c4:	add	x1, x1, #0xcb0
    76c8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    76cc:	add	x0, x0, #0xce8
    76d0:	bl	58e0 <__assert_fail@plt>
    76d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    76d8:	add	x3, x3, #0x330
    76dc:	add	x3, x3, #0x140
    76e0:	mov	w2, #0x215                 	// #533
    76e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    76e8:	add	x1, x1, #0xcb0
    76ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    76f0:	add	x0, x0, #0xcd8
    76f4:	bl	58e0 <__assert_fail@plt>
    76f8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    76fc:	add	x3, x3, #0x330
    7700:	add	x3, x3, #0x140
    7704:	mov	w2, #0x217                 	// #535
    7708:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    770c:	add	x1, x1, #0xcb0
    7710:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7714:	add	x0, x0, #0xce0
    7718:	bl	58e0 <__assert_fail@plt>
    771c:	eor	x1, x3, x4
    7720:	orr	x1, x1, x1, lsl #1
    7724:	orr	x1, x1, x1, lsl #2
    7728:	orr	x1, x1, x1, lsl #4
    772c:	cbz	x1, 7778 <Perl__inverse_folds@plt+0x1d78>
    7730:	lsr	x1, x1, #1
    7734:	and	x1, x1, #0x4040404040404040
    7738:	sub	x2, x1, #0x1
    773c:	eor	x1, x2, x1
    7740:	add	x1, x1, #0x1
    7744:	lsr	x1, x1, #7
    7748:	mov	x2, #0x373f                	// #14143
    774c:	movk	x2, #0x272f, lsl #16
    7750:	movk	x2, #0x171f, lsl #32
    7754:	movk	x2, #0x70f, lsl #48
    7758:	mul	x1, x1, x2
    775c:	lsr	x1, x1, #56
    7760:	add	x1, x1, #0x1
    7764:	lsr	x1, x1, #3
    7768:	sub	w1, w1, #0x1
    776c:	add	x0, x0, x1
    7770:	ldp	x29, x30, [sp], #16
    7774:	ret
    7778:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    777c:	add	x3, x3, #0x330
    7780:	add	x3, x3, #0x60
    7784:	mov	w2, #0x201                 	// #513
    7788:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    778c:	add	x1, x1, #0xc80
    7790:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7794:	add	x0, x0, #0xd08
    7798:	bl	58e0 <__assert_fail@plt>
    779c:	stp	x29, x30, [sp, #-16]!
    77a0:	mov	x29, sp
    77a4:	cbz	x0, 786c <Perl__inverse_folds@plt+0x1e6c>
    77a8:	and	w2, w2, #0xff
    77ac:	and	w3, w3, #0xff
    77b0:	cbz	x1, 7890 <Perl__inverse_folds@plt+0x1e90>
    77b4:	cmp	x0, x1
    77b8:	b.hi	78b4 <Perl__inverse_folds@plt+0x1eb4>  // b.pmore
    77bc:	bics	wzr, w2, w3
    77c0:	b.ne	78d8 <Perl__inverse_folds@plt+0x1ed8>  // b.any
    77c4:	and	x6, x0, #0x7
    77c8:	sub	x5, x1, x0
    77cc:	orr	x4, x0, x0, lsr #1
    77d0:	ubfx	x7, x0, #2, #1
    77d4:	orr	x4, x4, x7
    77d8:	and	x4, x4, #0x1
    77dc:	add	x4, x4, #0x1
    77e0:	lsl	x4, x4, #3
    77e4:	sub	x4, x4, x6
    77e8:	cmp	x5, x4
    77ec:	b.cc	7844 <Perl__inverse_folds@plt+0x1e44>  // b.lo, b.ul, b.last
    77f0:	cbz	x6, 7810 <Perl__inverse_folds@plt+0x1e10>
    77f4:	ldrb	w4, [x0]
    77f8:	and	w4, w3, w4
    77fc:	cmp	w4, w2
    7800:	b.ne	7950 <Perl__inverse_folds@plt+0x1f50>  // b.any
    7804:	add	x0, x0, #0x1
    7808:	tst	x0, #0x7
    780c:	b.ne	77f4 <Perl__inverse_folds@plt+0x1df4>  // b.any
    7810:	and	x4, x2, #0xff
    7814:	mov	x5, #0x101010101010101     	// #72340172838076673
    7818:	mul	x4, x4, x5
    781c:	and	x6, x3, #0xff
    7820:	mul	x6, x6, x5
    7824:	ldr	x5, [x0]
    7828:	and	x5, x6, x5
    782c:	cmp	x4, x5
    7830:	b.ne	78fc <Perl__inverse_folds@plt+0x1efc>  // b.any
    7834:	add	x0, x0, #0x8
    7838:	add	x5, x0, #0x8
    783c:	cmp	x1, x5
    7840:	b.cs	7824 <Perl__inverse_folds@plt+0x1e24>  // b.hs, b.nlast
    7844:	cmp	x1, x0
    7848:	b.ls	7950 <Perl__inverse_folds@plt+0x1f50>  // b.plast
    784c:	ldrb	w4, [x0]
    7850:	and	w4, w3, w4
    7854:	cmp	w4, w2
    7858:	b.ne	7950 <Perl__inverse_folds@plt+0x1f50>  // b.any
    785c:	add	x0, x0, #0x1
    7860:	cmp	x1, x0
    7864:	b.ne	784c <Perl__inverse_folds@plt+0x1e4c>  // b.any
    7868:	b	7950 <Perl__inverse_folds@plt+0x1f50>
    786c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7870:	add	x3, x3, #0x330
    7874:	add	x3, x3, #0x150
    7878:	mov	w2, #0x2af                 	// #687
    787c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7880:	add	x1, x1, #0xcb0
    7884:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7888:	add	x0, x0, #0xce8
    788c:	bl	58e0 <__assert_fail@plt>
    7890:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7894:	add	x3, x3, #0x330
    7898:	add	x3, x3, #0x150
    789c:	mov	w2, #0x2af                 	// #687
    78a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    78a4:	add	x1, x1, #0xcb0
    78a8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    78ac:	add	x0, x0, #0xcd8
    78b0:	bl	58e0 <__assert_fail@plt>
    78b4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    78b8:	add	x3, x3, #0x330
    78bc:	add	x3, x3, #0x150
    78c0:	mov	w2, #0x2b1                 	// #689
    78c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    78c8:	add	x1, x1, #0xcb0
    78cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    78d0:	add	x0, x0, #0xce0
    78d4:	bl	58e0 <__assert_fail@plt>
    78d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    78dc:	add	x3, x3, #0x330
    78e0:	add	x3, x3, #0x150
    78e4:	mov	w2, #0x2b2                 	// #690
    78e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    78ec:	add	x1, x1, #0xcb0
    78f0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    78f4:	add	x0, x0, #0x70
    78f8:	bl	58e0 <__assert_fail@plt>
    78fc:	eor	x1, x4, x5
    7900:	orr	x1, x1, x1, lsl #1
    7904:	orr	x1, x1, x1, lsl #2
    7908:	orr	x1, x1, x1, lsl #4
    790c:	cbz	x1, 7958 <Perl__inverse_folds@plt+0x1f58>
    7910:	lsr	x1, x1, #1
    7914:	and	x1, x1, #0x4040404040404040
    7918:	sub	x2, x1, #0x1
    791c:	eor	x1, x2, x1
    7920:	add	x1, x1, #0x1
    7924:	lsr	x1, x1, #7
    7928:	mov	x2, #0x373f                	// #14143
    792c:	movk	x2, #0x272f, lsl #16
    7930:	movk	x2, #0x171f, lsl #32
    7934:	movk	x2, #0x70f, lsl #48
    7938:	mul	x1, x1, x2
    793c:	lsr	x1, x1, #56
    7940:	add	x1, x1, #0x1
    7944:	lsr	x1, x1, #3
    7948:	sub	w1, w1, #0x1
    794c:	add	x0, x0, x1
    7950:	ldp	x29, x30, [sp], #16
    7954:	ret
    7958:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    795c:	add	x3, x3, #0x330
    7960:	add	x3, x3, #0x60
    7964:	mov	w2, #0x201                 	// #513
    7968:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    796c:	add	x1, x1, #0xc80
    7970:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    7974:	add	x0, x0, #0xd08
    7978:	bl	58e0 <__assert_fail@plt>
    797c:	stp	x29, x30, [sp, #-112]!
    7980:	mov	x29, sp
    7984:	str	x0, [sp, #104]
    7988:	cbz	x1, 7a0c <Perl__inverse_folds@plt+0x200c>
    798c:	stp	x19, x20, [sp, #16]
    7990:	stp	x21, x22, [sp, #32]
    7994:	mov	x20, x1
    7998:	mov	x21, x2
    799c:	and	w3, w3, #0xff
    79a0:	and	w22, w4, #0xff
    79a4:	cbz	x2, 7a44 <Perl__inverse_folds@plt+0x2044>
    79a8:	ldr	x1, [x1]
    79ac:	mov	w0, #0x15                  	// #21
    79b0:	cmp	x1, x2
    79b4:	b.cs	7ba8 <Perl__inverse_folds@plt+0x21a8>  // b.hs, b.nlast
    79b8:	stp	x23, x24, [sp, #48]
    79bc:	cbnz	w3, 7a74 <Perl__inverse_folds@plt+0x2074>
    79c0:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
    79c4:	ldr	x23, [x23, #3952]
    79c8:	adrp	x19, 6d000 <boot_re@@Base+0xb41c>
    79cc:	add	x19, x19, #0x100
    79d0:	ldr	x1, [x20]
    79d4:	add	x0, x1, #0x1
    79d8:	str	x0, [x20]
    79dc:	cmp	x0, x21
    79e0:	b.cs	7ba0 <Perl__inverse_folds@plt+0x21a0>  // b.hs, b.nlast
    79e4:	ldrb	w1, [x1, #1]
    79e8:	ldr	x0, [x23]
    79ec:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    79f0:	ldr	w0, [x19, x0, lsl #2]
    79f4:	cbz	w22, 7bc8 <Perl__inverse_folds@plt+0x21c8>
    79f8:	and	w1, w0, #0xfffffffd
    79fc:	cmp	w1, #0x4
    7a00:	b.eq	79d0 <Perl__inverse_folds@plt+0x1fd0>  // b.none
    7a04:	ldp	x23, x24, [sp, #48]
    7a08:	b	7ba8 <Perl__inverse_folds@plt+0x21a8>
    7a0c:	stp	x19, x20, [sp, #16]
    7a10:	stp	x21, x22, [sp, #32]
    7a14:	stp	x23, x24, [sp, #48]
    7a18:	stp	x25, x26, [sp, #64]
    7a1c:	stp	x27, x28, [sp, #80]
    7a20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7a24:	add	x3, x3, #0x330
    7a28:	add	x3, x3, #0x168
    7a2c:	mov	w2, #0x14f9                	// #5369
    7a30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7a34:	add	x1, x1, #0xcb0
    7a38:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    7a3c:	add	x0, x0, #0x90
    7a40:	bl	58e0 <__assert_fail@plt>
    7a44:	stp	x23, x24, [sp, #48]
    7a48:	stp	x25, x26, [sp, #64]
    7a4c:	stp	x27, x28, [sp, #80]
    7a50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7a54:	add	x3, x3, #0x330
    7a58:	add	x3, x3, #0x168
    7a5c:	mov	w2, #0x14f9                	// #5369
    7a60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7a64:	add	x1, x1, #0xcb0
    7a68:	adrp	x0, 66000 <boot_re@@Base+0x441c>
    7a6c:	add	x0, x0, #0x660
    7a70:	bl	58e0 <__assert_fail@plt>
    7a74:	stp	x25, x26, [sp, #64]
    7a78:	stp	x27, x28, [sp, #80]
    7a7c:	adrp	x25, 91000 <boot_re@@Base+0x2f41c>
    7a80:	ldr	x25, [x25, #4064]
    7a84:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
    7a88:	ldr	x26, [x26, #3952]
    7a8c:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    7a90:	ldr	x27, [x28, #3824]
    7a94:	b	7ad8 <Perl__inverse_folds@plt+0x20d8>
    7a98:	mov	x5, #0x0                   	// #0
    7a9c:	mov	x4, #0x0                   	// #0
    7aa0:	mov	x2, #0x0                   	// #0
    7aa4:	mov	x1, x23
    7aa8:	mov	x0, x19
    7aac:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    7ab0:	mov	x1, x0
    7ab4:	mov	x0, x24
    7ab8:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    7abc:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
    7ac0:	add	x1, x1, #0x100
    7ac4:	ldr	w0, [x1, x0, lsl #2]
    7ac8:	cbz	w22, 7bb8 <Perl__inverse_folds@plt+0x21b8>
    7acc:	and	w1, w0, #0xfffffffd
    7ad0:	cmp	w1, #0x4
    7ad4:	b.ne	7b7c <Perl__inverse_folds@plt+0x217c>  // b.any
    7ad8:	ldr	x19, [x20]
    7adc:	ldrb	w0, [x19]
    7ae0:	ldrb	w0, [x25, w0, sxtw]
    7ae4:	add	x19, x19, x0
    7ae8:	str	x19, [x20]
    7aec:	cmp	x19, x21
    7af0:	b.cs	7b8c <Perl__inverse_folds@plt+0x218c>  // b.hs, b.nlast
    7af4:	ldr	x24, [x26]
    7af8:	sub	x23, x21, x19
    7afc:	mov	w1, #0x2c                  	// #44
    7b00:	ldr	x0, [sp, #104]
    7b04:	bl	52a0 <Perl_ckwarn_d@plt>
    7b08:	ands	w0, w0, #0xff
    7b0c:	mov	w3, #0x9e                  	// #158
    7b10:	csel	w3, w3, wzr, eq  // eq = none
    7b14:	add	x7, x19, x23
    7b18:	cmp	x19, x7
    7b1c:	b.cs	7a98 <Perl__inverse_folds@plt+0x2098>  // b.hs, b.nlast
    7b20:	mov	x0, x19
    7b24:	mov	x1, #0x0                   	// #0
    7b28:	mov	x6, #0x0                   	// #0
    7b2c:	mov	w9, #0xff                  	// #255
    7b30:	ldr	x8, [x28, #3824]
    7b34:	ldrb	w5, [x0]
    7b38:	ldrb	w2, [x27, w5, sxtw]
    7b3c:	and	x4, x2, #0xff
    7b40:	asr	w2, w9, w2
    7b44:	and	w2, w2, w5
    7b48:	sxtw	x2, w2
    7b4c:	bfi	x5, x1, #6, #58
    7b50:	cmp	x6, #0x0
    7b54:	csel	x1, x5, x2, ne  // ne = any
    7b58:	add	x2, x8, x4
    7b5c:	add	x2, x2, x6
    7b60:	ldrb	w6, [x2, #256]
    7b64:	cbz	x6, 7ab4 <Perl__inverse_folds@plt+0x20b4>
    7b68:	add	x0, x0, #0x1
    7b6c:	cmp	x6, #0x1
    7b70:	ccmp	x7, x0, #0x0, ne  // ne = any
    7b74:	b.hi	7b34 <Perl__inverse_folds@plt+0x2134>  // b.pmore
    7b78:	b	7a98 <Perl__inverse_folds@plt+0x2098>
    7b7c:	ldp	x23, x24, [sp, #48]
    7b80:	ldp	x25, x26, [sp, #64]
    7b84:	ldp	x27, x28, [sp, #80]
    7b88:	b	7ba8 <Perl__inverse_folds@plt+0x21a8>
    7b8c:	mov	w0, #0x15                  	// #21
    7b90:	ldp	x23, x24, [sp, #48]
    7b94:	ldp	x25, x26, [sp, #64]
    7b98:	ldp	x27, x28, [sp, #80]
    7b9c:	b	7ba8 <Perl__inverse_folds@plt+0x21a8>
    7ba0:	mov	w0, #0x15                  	// #21
    7ba4:	ldp	x23, x24, [sp, #48]
    7ba8:	ldp	x19, x20, [sp, #16]
    7bac:	ldp	x21, x22, [sp, #32]
    7bb0:	ldp	x29, x30, [sp], #112
    7bb4:	ret
    7bb8:	ldp	x23, x24, [sp, #48]
    7bbc:	ldp	x25, x26, [sp, #64]
    7bc0:	ldp	x27, x28, [sp, #80]
    7bc4:	b	7ba8 <Perl__inverse_folds@plt+0x21a8>
    7bc8:	ldp	x23, x24, [sp, #48]
    7bcc:	b	7ba8 <Perl__inverse_folds@plt+0x21a8>
    7bd0:	stp	x29, x30, [sp, #-96]!
    7bd4:	mov	x29, sp
    7bd8:	cbz	x1, 7c54 <Perl__inverse_folds@plt+0x2254>
    7bdc:	stp	x19, x20, [sp, #16]
    7be0:	stp	x21, x22, [sp, #32]
    7be4:	stp	x23, x24, [sp, #48]
    7be8:	mov	x24, x0
    7bec:	mov	x21, x1
    7bf0:	mov	x20, x2
    7bf4:	and	w3, w3, #0xff
    7bf8:	cbz	x2, 7c8c <Perl__inverse_folds@plt+0x228c>
    7bfc:	ldr	x0, [x2]
    7c00:	cmp	x0, x1
    7c04:	b.cc	7e28 <Perl__inverse_folds@plt+0x2428>  // b.lo, b.ul, b.last
    7c08:	cbnz	w3, 7cb8 <Perl__inverse_folds@plt+0x22b8>
    7c0c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
    7c10:	ldr	x22, [x22, #3792]
    7c14:	adrp	x19, 6e000 <boot_re@@Base+0xc41c>
    7c18:	add	x19, x19, #0xde0
    7c1c:	ldr	x0, [x20]
    7c20:	sub	x1, x0, #0x2
    7c24:	cmp	x21, x1
    7c28:	b.hi	7e0c <Perl__inverse_folds@plt+0x240c>  // b.pmore
    7c2c:	sub	x1, x0, #0x1
    7c30:	str	x1, [x20]
    7c34:	ldurb	w1, [x0, #-2]
    7c38:	ldr	x0, [x22]
    7c3c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    7c40:	ldr	w0, [x19, x0, lsl #2]
    7c44:	sub	w1, w0, #0x4
    7c48:	cmp	w1, #0x1
    7c4c:	b.ls	7c1c <Perl__inverse_folds@plt+0x221c>  // b.plast
    7c50:	b	7e14 <Perl__inverse_folds@plt+0x2414>
    7c54:	stp	x19, x20, [sp, #16]
    7c58:	stp	x21, x22, [sp, #32]
    7c5c:	stp	x23, x24, [sp, #48]
    7c60:	stp	x25, x26, [sp, #64]
    7c64:	stp	x27, x28, [sp, #80]
    7c68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7c6c:	add	x3, x3, #0x330
    7c70:	add	x3, x3, #0x180
    7c74:	mov	w2, #0x140c                	// #5132
    7c78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7c7c:	add	x1, x1, #0xcb0
    7c80:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    7c84:	add	x0, x0, #0x98
    7c88:	bl	58e0 <__assert_fail@plt>
    7c8c:	stp	x25, x26, [sp, #64]
    7c90:	stp	x27, x28, [sp, #80]
    7c94:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7c98:	add	x3, x3, #0x330
    7c9c:	add	x3, x3, #0x180
    7ca0:	mov	w2, #0x140c                	// #5132
    7ca4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7ca8:	add	x1, x1, #0xcb0
    7cac:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    7cb0:	add	x0, x0, #0x90
    7cb4:	bl	58e0 <__assert_fail@plt>
    7cb8:	mov	x2, x1
    7cbc:	mov	x1, #0xffffffffffffffff    	// #-1
    7cc0:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    7cc4:	mov	x19, x0
    7cc8:	cbz	x0, 7e30 <Perl__inverse_folds@plt+0x2430>
    7ccc:	stp	x25, x26, [sp, #64]
    7cd0:	stp	x27, x28, [sp, #80]
    7cd4:	mov	x28, #0xffffffffffffffff    	// #-1
    7cd8:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
    7cdc:	ldr	x26, [x26, #3792]
    7ce0:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    7ce4:	ldr	x25, [x27, #3824]
    7ce8:	b	7d50 <Perl__inverse_folds@plt+0x2350>
    7cec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7cf0:	add	x3, x3, #0x330
    7cf4:	add	x3, x3, #0x180
    7cf8:	mov	w2, #0x141f                	// #5151
    7cfc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7d00:	add	x1, x1, #0xcb0
    7d04:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    7d08:	add	x0, x0, #0xa0
    7d0c:	bl	58e0 <__assert_fail@plt>
    7d10:	mov	x5, #0x0                   	// #0
    7d14:	mov	x4, #0x0                   	// #0
    7d18:	mov	x2, #0x0                   	// #0
    7d1c:	sub	x1, x22, x19
    7d20:	mov	x0, x19
    7d24:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    7d28:	mov	x1, x0
    7d2c:	mov	x0, x23
    7d30:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    7d34:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
    7d38:	add	x1, x1, #0xde0
    7d3c:	ldr	w0, [x1, x0, lsl #2]
    7d40:	str	x22, [x20]
    7d44:	sub	w1, w0, #0x4
    7d48:	cmp	w1, #0x1
    7d4c:	b.hi	7dec <Perl__inverse_folds@plt+0x23ec>  // b.pmore
    7d50:	mov	x22, x19
    7d54:	mov	x2, x21
    7d58:	mov	x1, x28
    7d5c:	mov	x0, x19
    7d60:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    7d64:	mov	x19, x0
    7d68:	cbz	x0, 7df8 <Perl__inverse_folds@plt+0x23f8>
    7d6c:	cmp	x22, x0
    7d70:	b.ls	7cec <Perl__inverse_folds@plt+0x22ec>  // b.plast
    7d74:	ldr	x23, [x26]
    7d78:	mov	w1, #0x2c                  	// #44
    7d7c:	mov	x0, x24
    7d80:	bl	52a0 <Perl_ckwarn_d@plt>
    7d84:	ands	w0, w0, #0xff
    7d88:	mov	w3, #0x9e                  	// #158
    7d8c:	csel	w3, w3, wzr, eq  // eq = none
    7d90:	mov	x0, x19
    7d94:	mov	x1, #0x0                   	// #0
    7d98:	mov	x2, #0x0                   	// #0
    7d9c:	mov	w8, #0xff                  	// #255
    7da0:	ldr	x7, [x27, #3824]
    7da4:	ldrb	w5, [x0]
    7da8:	ldrb	w4, [x25, w5, sxtw]
    7dac:	and	x6, x4, #0xff
    7db0:	asr	w4, w8, w4
    7db4:	and	w4, w4, w5
    7db8:	sxtw	x4, w4
    7dbc:	bfi	x5, x1, #6, #58
    7dc0:	cmp	x2, #0x0
    7dc4:	csel	x1, x5, x4, ne  // ne = any
    7dc8:	add	x2, x7, x2
    7dcc:	add	x2, x2, x6
    7dd0:	ldrb	w2, [x2, #256]
    7dd4:	cbz	x2, 7d2c <Perl__inverse_folds@plt+0x232c>
    7dd8:	add	x0, x0, #0x1
    7ddc:	cmp	x2, #0x1
    7de0:	ccmp	x22, x0, #0x0, ne  // ne = any
    7de4:	b.hi	7da4 <Perl__inverse_folds@plt+0x23a4>  // b.pmore
    7de8:	b	7d10 <Perl__inverse_folds@plt+0x2310>
    7dec:	ldp	x25, x26, [sp, #64]
    7df0:	ldp	x27, x28, [sp, #80]
    7df4:	b	7e14 <Perl__inverse_folds@plt+0x2414>
    7df8:	str	x21, [x20]
    7dfc:	mov	w0, #0xf                   	// #15
    7e00:	ldp	x25, x26, [sp, #64]
    7e04:	ldp	x27, x28, [sp, #80]
    7e08:	b	7e14 <Perl__inverse_folds@plt+0x2414>
    7e0c:	str	x21, [x20]
    7e10:	mov	w0, #0xf                   	// #15
    7e14:	ldp	x19, x20, [sp, #16]
    7e18:	ldp	x21, x22, [sp, #32]
    7e1c:	ldp	x23, x24, [sp, #48]
    7e20:	ldp	x29, x30, [sp], #96
    7e24:	ret
    7e28:	mov	w0, #0xf                   	// #15
    7e2c:	b	7e14 <Perl__inverse_folds@plt+0x2414>
    7e30:	mov	w0, #0xf                   	// #15
    7e34:	b	7e14 <Perl__inverse_folds@plt+0x2414>
    7e38:	stp	x29, x30, [sp, #-160]!
    7e3c:	mov	x29, sp
    7e40:	stp	x19, x20, [sp, #16]
    7e44:	stp	x21, x22, [sp, #32]
    7e48:	stp	x23, x24, [sp, #48]
    7e4c:	stp	x25, x26, [sp, #64]
    7e50:	stp	x27, x28, [sp, #80]
    7e54:	mov	x22, x0
    7e58:	mov	w25, w1
    7e5c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    7e60:	ldr	x0, [x0, #3920]
    7e64:	ldr	x1, [x0]
    7e68:	str	x1, [sp, #152]
    7e6c:	mov	x1, #0x0                   	// #0
    7e70:	str	x4, [sp, #136]
    7e74:	cbz	x3, 7fe8 <Perl__inverse_folds@plt+0x25e8>
    7e78:	mov	w20, w2
    7e7c:	mov	x27, x3
    7e80:	mov	x19, x4
    7e84:	mov	x21, x5
    7e88:	and	w23, w6, #0xff
    7e8c:	cbz	x4, 800c <Perl__inverse_folds@plt+0x260c>
    7e90:	cbz	x5, 8030 <Perl__inverse_folds@plt+0x2630>
    7e94:	cmp	w25, #0xf
    7e98:	cset	w26, eq  // eq = none
    7e9c:	cmp	w2, #0xf
    7ea0:	csinc	w26, w26, wzr, ne  // ne = any
    7ea4:	cbnz	w26, 8054 <Perl__inverse_folds@plt+0x2654>
    7ea8:	cmp	w2, #0x6
    7eac:	cset	w24, eq  // eq = none
    7eb0:	cmp	w24, #0x0
    7eb4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
    7eb8:	b.eq	805c <Perl__inverse_folds@plt+0x265c>  // b.none
    7ebc:	and	w0, w25, #0xfffffffb
    7ec0:	cmp	w0, #0x2
    7ec4:	cset	w26, eq  // eq = none
    7ec8:	cmp	w25, #0xc
    7ecc:	csinc	w26, w26, wzr, ne  // ne = any
    7ed0:	cbnz	w26, 805c <Perl__inverse_folds@plt+0x265c>
    7ed4:	sub	w0, w2, #0x4
    7ed8:	cmp	w0, #0x1
    7edc:	b.ls	805c <Perl__inverse_folds@plt+0x265c>  // b.plast
    7ee0:	sub	w0, w25, #0x4
    7ee4:	cmp	w0, #0x1
    7ee8:	b.ls	8094 <Perl__inverse_folds@plt+0x2694>  // b.plast
    7eec:	cmp	w25, #0x1
    7ef0:	cset	w0, eq  // eq = none
    7ef4:	cmp	w20, #0x8
    7ef8:	csel	w28, w0, wzr, eq  // eq = none
    7efc:	cbnz	w28, 805c <Perl__inverse_folds@plt+0x265c>
    7f00:	cmp	w20, #0xe
    7f04:	csel	w0, w0, wzr, eq  // eq = none
    7f08:	str	w0, [sp, #116]
    7f0c:	cbnz	w0, 80e0 <Perl__inverse_folds@plt+0x26e0>
    7f10:	and	w0, w25, #0xfffffffb
    7f14:	cmp	w0, #0x2
    7f18:	cset	w0, eq  // eq = none
    7f1c:	cmp	w25, #0xc
    7f20:	csinc	w0, w0, wzr, ne  // ne = any
    7f24:	str	w0, [sp, #120]
    7f28:	cbz	w0, 7f44 <Perl__inverse_folds@plt+0x2544>
    7f2c:	mov	w3, w23
    7f30:	add	x2, sp, #0x88
    7f34:	mov	x1, x27
    7f38:	mov	x0, x22
    7f3c:	bl	7bd0 <Perl__inverse_folds@plt+0x21d0>
    7f40:	mov	w25, w0
    7f44:	cmp	w25, #0xd
    7f48:	b.eq	8124 <Perl__inverse_folds@plt+0x2724>  // b.none
    7f4c:	add	x26, sp, #0x88
    7f50:	cmp	w25, #0x3
    7f54:	b.ne	7f78 <Perl__inverse_folds@plt+0x2578>  // b.any
    7f58:	mov	w3, w23
    7f5c:	mov	x2, x26
    7f60:	mov	x1, x27
    7f64:	mov	x0, x22
    7f68:	bl	7bd0 <Perl__inverse_folds@plt+0x21d0>
    7f6c:	mov	w25, w0
    7f70:	cmp	w0, #0x3
    7f74:	b.eq	7f58 <Perl__inverse_folds@plt+0x2558>  // b.none
    7f78:	cmp	w25, #0xb
    7f7c:	cset	w26, eq  // eq = none
    7f80:	cmp	w25, #0x1
    7f84:	csinc	w26, w26, wzr, ne  // ne = any
    7f88:	cbz	w26, 805c <Perl__inverse_folds@plt+0x265c>
    7f8c:	ldr	w0, [sp, #120]
    7f90:	mov	w26, w0
    7f94:	cbnz	w0, 805c <Perl__inverse_folds@plt+0x265c>
    7f98:	b.eq	82e0 <Perl__inverse_folds@plt+0x28e0>  // b.none
    7f9c:	sub	w0, w20, #0xa
    7fa0:	cmp	w0, #0x1
    7fa4:	ldr	w26, [sp, #120]
    7fa8:	ccmp	w20, #0x1, #0x4, hi  // hi = pmore
    7fac:	b.eq	805c <Perl__inverse_folds@plt+0x265c>  // b.none
    7fb0:	ldr	w26, [sp, #116]
    7fb4:	cbnz	w26, 7fd0 <Perl__inverse_folds@plt+0x25d0>
    7fb8:	sub	w1, w20, #0x2
    7fbc:	sub	w0, w20, #0xc
    7fc0:	cmp	w1, #0x1
    7fc4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    7fc8:	ccmp	w24, #0x0, #0x0, hi  // hi = pmore
    7fcc:	b.ne	805c <Perl__inverse_folds@plt+0x265c>  // b.any
    7fd0:	sub	w0, w20, #0xc
    7fd4:	and	w20, w20, #0xfffffffb
    7fd8:	cmp	w0, #0x1
    7fdc:	ccmp	w20, #0x2, #0x4, hi  // hi = pmore
    7fe0:	cset	w26, ne  // ne = any
    7fe4:	b	805c <Perl__inverse_folds@plt+0x265c>
    7fe8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    7fec:	add	x3, x3, #0x330
    7ff0:	add	x3, x3, #0x190
    7ff4:	mov	w2, #0x1330                	// #4912
    7ff8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    7ffc:	add	x1, x1, #0xcb0
    8000:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8004:	add	x0, x0, #0x98
    8008:	bl	58e0 <__assert_fail@plt>
    800c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8010:	add	x3, x3, #0x330
    8014:	add	x3, x3, #0x190
    8018:	mov	w2, #0x1330                	// #4912
    801c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8020:	add	x1, x1, #0xcb0
    8024:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8028:	add	x0, x0, #0x90
    802c:	bl	58e0 <__assert_fail@plt>
    8030:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8034:	add	x3, x3, #0x330
    8038:	add	x3, x3, #0x190
    803c:	mov	w2, #0x1330                	// #4912
    8040:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8044:	add	x1, x1, #0xcb0
    8048:	adrp	x0, 66000 <boot_re@@Base+0x441c>
    804c:	add	x0, x0, #0x660
    8050:	bl	58e0 <__assert_fail@plt>
    8054:	cmp	w25, w2
    8058:	cset	w26, ne  // ne = any
    805c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    8060:	ldr	x0, [x0, #3920]
    8064:	ldr	x1, [sp, #152]
    8068:	ldr	x0, [x0]
    806c:	eor	x0, x1, x0
    8070:	cbnz	x0, 8308 <Perl__inverse_folds@plt+0x2908>
    8074:	mov	w0, w26
    8078:	ldp	x19, x20, [sp, #16]
    807c:	ldp	x21, x22, [sp, #32]
    8080:	ldp	x23, x24, [sp, #48]
    8084:	ldp	x25, x26, [sp, #64]
    8088:	ldp	x27, x28, [sp, #80]
    808c:	ldp	x29, x30, [sp], #160
    8090:	ret
    8094:	str	x4, [sp, #144]
    8098:	mov	w3, w23
    809c:	add	x2, sp, #0x90
    80a0:	mov	x1, x27
    80a4:	mov	x0, x22
    80a8:	bl	7bd0 <Perl__inverse_folds@plt+0x21d0>
    80ac:	cmp	w0, #0xf
    80b0:	ccmp	w0, #0xc, #0x4, ne  // ne = any
    80b4:	b.eq	80d0 <Perl__inverse_folds@plt+0x26d0>  // b.none
    80b8:	and	w1, w0, #0xfffffffb
    80bc:	cmp	w1, #0x2
    80c0:	b.eq	80d0 <Perl__inverse_folds@plt+0x26d0>  // b.none
    80c4:	ldr	x1, [sp, #144]
    80c8:	str	x1, [sp, #136]
    80cc:	mov	w25, w0
    80d0:	sub	w0, w0, #0x4
    80d4:	cmp	w0, #0x1
    80d8:	b.hi	7eec <Perl__inverse_folds@plt+0x24ec>  // b.pmore
    80dc:	b	805c <Perl__inverse_folds@plt+0x265c>
    80e0:	ldr	x0, [sp, #136]
    80e4:	str	x0, [sp, #144]
    80e8:	mov	w3, w23
    80ec:	add	x2, sp, #0x90
    80f0:	mov	x1, x27
    80f4:	mov	x0, x22
    80f8:	bl	7bd0 <Perl__inverse_folds@plt+0x21d0>
    80fc:	cmp	w0, #0xe
    8100:	cset	w1, eq  // eq = none
    8104:	cmp	w0, #0x7
    8108:	csinc	w0, w1, wzr, ne  // ne = any
    810c:	str	w0, [sp, #116]
    8110:	str	w0, [sp, #120]
    8114:	mov	w25, #0x1                   	// #1
    8118:	mov	w26, w28
    811c:	cbz	w0, 7f4c <Perl__inverse_folds@plt+0x254c>
    8120:	b	805c <Perl__inverse_folds@plt+0x265c>
    8124:	add	x26, sp, #0x88
    8128:	mov	w3, w23
    812c:	mov	x2, x26
    8130:	mov	x1, x27
    8134:	mov	x0, x22
    8138:	bl	7bd0 <Perl__inverse_folds@plt+0x21d0>
    813c:	mov	w25, w0
    8140:	cmp	w0, #0xd
    8144:	b.eq	8128 <Perl__inverse_folds@plt+0x2728>  // b.none
    8148:	mov	w0, #0x1                   	// #1
    814c:	str	w0, [sp, #116]
    8150:	b	7f4c <Perl__inverse_folds@plt+0x254c>
    8154:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    8158:	ldr	x27, [x27, #4064]
    815c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    8160:	ldr	x0, [x0, #3792]
    8164:	str	x0, [sp, #96]
    8168:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    816c:	ldr	x28, [x0, #3824]
    8170:	b	81b0 <Perl__inverse_folds@plt+0x27b0>
    8174:	mov	x5, #0x0                   	// #0
    8178:	mov	x4, #0x0                   	// #0
    817c:	mov	x2, #0x0                   	// #0
    8180:	mov	x1, x25
    8184:	mov	x0, x19
    8188:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    818c:	mov	x1, x0
    8190:	mov	x0, x26
    8194:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    8198:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
    819c:	add	x1, x1, #0xde0
    81a0:	ldr	w0, [x1, x0, lsl #2]
    81a4:	sub	w1, w0, #0x4
    81a8:	cmp	w1, #0x1
    81ac:	b.hi	8260 <Perl__inverse_folds@plt+0x2860>  // b.pmore
    81b0:	ldrb	w0, [x19]
    81b4:	ldrb	w0, [x27, w0, sxtw]
    81b8:	add	x19, x19, x0
    81bc:	cmp	x21, x19
    81c0:	b.ls	8254 <Perl__inverse_folds@plt+0x2854>  // b.plast
    81c4:	ldr	x0, [sp, #96]
    81c8:	ldr	x26, [x0]
    81cc:	sub	x25, x21, x19
    81d0:	mov	w1, #0x2c                  	// #44
    81d4:	mov	x0, x22
    81d8:	bl	52a0 <Perl_ckwarn_d@plt>
    81dc:	ands	w0, w0, #0xff
    81e0:	mov	w3, #0x9e                  	// #158
    81e4:	csel	w3, w3, wzr, eq  // eq = none
    81e8:	add	x7, x19, x25
    81ec:	cmp	x19, x7
    81f0:	b.cs	8174 <Perl__inverse_folds@plt+0x2774>  // b.hs, b.nlast
    81f4:	mov	x0, x19
    81f8:	mov	x1, #0x0                   	// #0
    81fc:	mov	x6, #0x0                   	// #0
    8200:	mov	w9, #0xff                  	// #255
    8204:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    8208:	ldr	x8, [x2, #3824]
    820c:	ldrb	w5, [x0]
    8210:	ldrb	w2, [x28, w5, sxtw]
    8214:	and	x4, x2, #0xff
    8218:	asr	w2, w9, w2
    821c:	and	w2, w2, w5
    8220:	sxtw	x2, w2
    8224:	bfi	x5, x1, #6, #58
    8228:	cmp	x6, #0x0
    822c:	csel	x1, x5, x2, ne  // ne = any
    8230:	add	x2, x8, x4
    8234:	add	x2, x2, x6
    8238:	ldrb	w6, [x2, #256]
    823c:	cbz	x6, 8190 <Perl__inverse_folds@plt+0x2790>
    8240:	add	x0, x0, #0x1
    8244:	cmp	x6, #0x1
    8248:	ccmp	x7, x0, #0x0, ne  // ne = any
    824c:	b.hi	820c <Perl__inverse_folds@plt+0x280c>  // b.pmore
    8250:	b	8174 <Perl__inverse_folds@plt+0x2774>
    8254:	mov	w0, #0xf                   	// #15
    8258:	b	8260 <Perl__inverse_folds@plt+0x2860>
    825c:	mov	w0, #0xf                   	// #15
    8260:	sub	w1, w0, #0x7
    8264:	tst	w1, #0xfffffffd
    8268:	cset	w26, ne  // ne = any
    826c:	and	w1, w0, #0xfffffffd
    8270:	cmp	w1, #0xc
    8274:	csel	w26, w26, wzr, ne  // ne = any
    8278:	cbz	w26, 82fc <Perl__inverse_folds@plt+0x28fc>
    827c:	cmp	w0, #0x6
    8280:	b.eq	7f9c <Perl__inverse_folds@plt+0x259c>  // b.none
    8284:	sub	w1, w0, #0x1
    8288:	and	w0, w0, #0xfffffffb
    828c:	cmp	w1, #0x1
    8290:	ccmp	w0, #0xb, #0x4, hi  // hi = pmore
    8294:	b.eq	7f9c <Perl__inverse_folds@plt+0x259c>  // b.none
    8298:	ldr	w0, [sp, #124]
    829c:	cmp	x21, x19
    82a0:	b.ls	8260 <Perl__inverse_folds@plt+0x2860>  // b.plast
    82a4:	cbnz	w23, 8154 <Perl__inverse_folds@plt+0x2754>
    82a8:	adrp	x0, 6e000 <boot_re@@Base+0xc41c>
    82ac:	add	x25, x0, #0xde0
    82b0:	add	x19, x19, #0x1
    82b4:	cmp	x21, x19
    82b8:	b.eq	825c <Perl__inverse_folds@plt+0x285c>  // b.none
    82bc:	ldrb	w1, [x19]
    82c0:	ldr	x0, [sp, #104]
    82c4:	ldr	x0, [x0]
    82c8:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    82cc:	ldr	w0, [x25, x0, lsl #2]
    82d0:	sub	w1, w0, #0x4
    82d4:	cmp	w1, #0x1
    82d8:	b.ls	82b0 <Perl__inverse_folds@plt+0x28b0>  // b.plast
    82dc:	b	8260 <Perl__inverse_folds@plt+0x2860>
    82e0:	mov	w0, w20
    82e4:	mov	w1, #0xf                   	// #15
    82e8:	str	w1, [sp, #124]
    82ec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    82f0:	ldr	x1, [x1, #3792]
    82f4:	str	x1, [sp, #104]
    82f8:	b	8260 <Perl__inverse_folds@plt+0x2860>
    82fc:	cmp	w0, #0x7
    8300:	b.eq	805c <Perl__inverse_folds@plt+0x265c>  // b.none
    8304:	b	7f9c <Perl__inverse_folds@plt+0x259c>
    8308:	bl	5300 <__stack_chk_fail@plt>
    830c:	stp	x29, x30, [sp, #-96]!
    8310:	mov	x29, sp
    8314:	cbz	x1, 83d4 <Perl__inverse_folds@plt+0x29d4>
    8318:	stp	x19, x20, [sp, #16]
    831c:	stp	x21, x22, [sp, #32]
    8320:	stp	x23, x24, [sp, #48]
    8324:	mov	x24, x0
    8328:	mov	x19, x1
    832c:	mov	x21, x2
    8330:	mov	x20, x3
    8334:	and	w22, w4, #0xff
    8338:	cbz	x2, 840c <Perl__inverse_folds@plt+0x2a0c>
    833c:	cbz	x3, 8438 <Perl__inverse_folds@plt+0x2a38>
    8340:	ldr	w23, [x1]
    8344:	cmp	w23, #0x16
    8348:	b.eq	837c <Perl__inverse_folds@plt+0x297c>  // b.none
    834c:	cbnz	w22, 8464 <Perl__inverse_folds@plt+0x2a64>
    8350:	ldr	x0, [x3]
    8354:	sub	x0, x0, #0x1
    8358:	str	x0, [x3]
    835c:	cmp	x0, x2
    8360:	cset	w0, hi  // hi = pmore
    8364:	add	w0, w0, #0x15
    8368:	str	w0, [x1]
    836c:	and	w0, w23, #0xfffffffd
    8370:	cmp	w0, #0x4
    8374:	ccmp	w23, #0x14, #0x4, ne  // ne = any
    8378:	b.ne	8604 <Perl__inverse_folds@plt+0x2c04>  // b.any
    837c:	ldr	x0, [x20]
    8380:	cmp	x0, x21
    8384:	b.cc	861c <Perl__inverse_folds@plt+0x2c1c>  // b.lo, b.ul, b.last
    8388:	cbnz	w22, 84a4 <Perl__inverse_folds@plt+0x2aa4>
    838c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
    8390:	ldr	x22, [x22, #3952]
    8394:	adrp	x19, 6d000 <boot_re@@Base+0xb41c>
    8398:	add	x19, x19, #0x100
    839c:	ldr	x0, [x20]
    83a0:	sub	x1, x0, #0x2
    83a4:	cmp	x21, x1
    83a8:	b.hi	85fc <Perl__inverse_folds@plt+0x2bfc>  // b.pmore
    83ac:	sub	x1, x0, #0x1
    83b0:	str	x1, [x20]
    83b4:	ldurb	w1, [x0, #-2]
    83b8:	ldr	x0, [x22]
    83bc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    83c0:	ldr	w23, [x19, x0, lsl #2]
    83c4:	and	w0, w23, #0xfffffffd
    83c8:	cmp	w0, #0x4
    83cc:	b.eq	839c <Perl__inverse_folds@plt+0x299c>  // b.none
    83d0:	b	8604 <Perl__inverse_folds@plt+0x2c04>
    83d4:	stp	x19, x20, [sp, #16]
    83d8:	stp	x21, x22, [sp, #32]
    83dc:	stp	x23, x24, [sp, #48]
    83e0:	stp	x25, x26, [sp, #64]
    83e4:	stp	x27, x28, [sp, #80]
    83e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    83ec:	add	x3, x3, #0x330
    83f0:	add	x3, x3, #0x198
    83f4:	mov	w2, #0x151f                	// #5407
    83f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    83fc:	add	x1, x1, #0xcb0
    8400:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8404:	add	x0, x0, #0xc8
    8408:	bl	58e0 <__assert_fail@plt>
    840c:	stp	x25, x26, [sp, #64]
    8410:	stp	x27, x28, [sp, #80]
    8414:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8418:	add	x3, x3, #0x330
    841c:	add	x3, x3, #0x198
    8420:	mov	w2, #0x151f                	// #5407
    8424:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8428:	add	x1, x1, #0xcb0
    842c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8430:	add	x0, x0, #0x98
    8434:	bl	58e0 <__assert_fail@plt>
    8438:	stp	x25, x26, [sp, #64]
    843c:	stp	x27, x28, [sp, #80]
    8440:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8444:	add	x3, x3, #0x330
    8448:	add	x3, x3, #0x198
    844c:	mov	w2, #0x151f                	// #5407
    8450:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8454:	add	x1, x1, #0xcb0
    8458:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    845c:	add	x0, x0, #0x90
    8460:	bl	58e0 <__assert_fail@plt>
    8464:	mov	x1, #0xffffffffffffffff    	// #-1
    8468:	ldr	x0, [x3]
    846c:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    8470:	str	x0, [x20]
    8474:	cbz	x0, 8484 <Perl__inverse_folds@plt+0x2a84>
    8478:	mov	w0, #0x16                  	// #22
    847c:	str	w0, [x19]
    8480:	b	836c <Perl__inverse_folds@plt+0x296c>
    8484:	mov	w0, #0x15                  	// #21
    8488:	str	w0, [x19]
    848c:	str	x21, [x20]
    8490:	and	w0, w23, #0xfffffffd
    8494:	cmp	w0, #0x4
    8498:	ccmp	w23, #0x14, #0x4, ne  // ne = any
    849c:	mov	x0, x21
    84a0:	b.ne	8604 <Perl__inverse_folds@plt+0x2c04>  // b.any
    84a4:	mov	x2, x21
    84a8:	mov	x1, #0xffffffffffffffff    	// #-1
    84ac:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    84b0:	mov	x19, x0
    84b4:	cbz	x0, 8624 <Perl__inverse_folds@plt+0x2c24>
    84b8:	stp	x25, x26, [sp, #64]
    84bc:	stp	x27, x28, [sp, #80]
    84c0:	mov	x28, #0xffffffffffffffff    	// #-1
    84c4:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
    84c8:	ldr	x26, [x26, #3952]
    84cc:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    84d0:	ldr	x25, [x27, #3824]
    84d4:	b	8540 <Perl__inverse_folds@plt+0x2b40>
    84d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    84dc:	add	x3, x3, #0x330
    84e0:	add	x3, x3, #0x198
    84e4:	mov	w2, #0x154e                	// #5454
    84e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    84ec:	add	x1, x1, #0xcb0
    84f0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    84f4:	add	x0, x0, #0xa0
    84f8:	bl	58e0 <__assert_fail@plt>
    84fc:	mov	x5, #0x0                   	// #0
    8500:	mov	x4, #0x0                   	// #0
    8504:	mov	x2, #0x0                   	// #0
    8508:	sub	x1, x22, x19
    850c:	mov	x0, x19
    8510:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    8514:	mov	x1, x0
    8518:	mov	x0, x23
    851c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    8520:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
    8524:	add	x1, x1, #0x100
    8528:	ldr	w23, [x1, x0, lsl #2]
    852c:	str	x22, [x20]
    8530:	and	w0, w23, #0xfffffffd
    8534:	cmp	w0, #0x4
    8538:	ccmp	w23, #0x14, #0x4, ne  // ne = any
    853c:	b.ne	85dc <Perl__inverse_folds@plt+0x2bdc>  // b.any
    8540:	mov	x22, x19
    8544:	mov	x2, x21
    8548:	mov	x1, x28
    854c:	mov	x0, x19
    8550:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    8554:	mov	x19, x0
    8558:	cbz	x0, 85e8 <Perl__inverse_folds@plt+0x2be8>
    855c:	cmp	x22, x0
    8560:	b.ls	84d8 <Perl__inverse_folds@plt+0x2ad8>  // b.plast
    8564:	ldr	x23, [x26]
    8568:	mov	w1, #0x2c                  	// #44
    856c:	mov	x0, x24
    8570:	bl	52a0 <Perl_ckwarn_d@plt>
    8574:	ands	w0, w0, #0xff
    8578:	mov	w3, #0x9e                  	// #158
    857c:	csel	w3, w3, wzr, eq  // eq = none
    8580:	mov	x0, x19
    8584:	mov	x1, #0x0                   	// #0
    8588:	mov	x6, #0x0                   	// #0
    858c:	mov	w8, #0xff                  	// #255
    8590:	ldr	x7, [x27, #3824]
    8594:	ldrb	w5, [x0]
    8598:	ldrb	w2, [x25, w5, sxtw]
    859c:	and	x4, x2, #0xff
    85a0:	asr	w2, w8, w2
    85a4:	and	w2, w2, w5
    85a8:	sxtw	x2, w2
    85ac:	bfi	x5, x1, #6, #58
    85b0:	cmp	x6, #0x0
    85b4:	csel	x1, x5, x2, ne  // ne = any
    85b8:	add	x2, x7, x4
    85bc:	add	x2, x2, x6
    85c0:	ldrb	w6, [x2, #256]
    85c4:	cbz	x6, 8518 <Perl__inverse_folds@plt+0x2b18>
    85c8:	add	x0, x0, #0x1
    85cc:	cmp	x22, x0
    85d0:	ccmp	x6, #0x1, #0x4, hi  // hi = pmore
    85d4:	b.ne	8594 <Perl__inverse_folds@plt+0x2b94>  // b.any
    85d8:	b	84fc <Perl__inverse_folds@plt+0x2afc>
    85dc:	ldp	x25, x26, [sp, #64]
    85e0:	ldp	x27, x28, [sp, #80]
    85e4:	b	8604 <Perl__inverse_folds@plt+0x2c04>
    85e8:	str	x21, [x20]
    85ec:	mov	w23, #0x15                  	// #21
    85f0:	ldp	x25, x26, [sp, #64]
    85f4:	ldp	x27, x28, [sp, #80]
    85f8:	b	8604 <Perl__inverse_folds@plt+0x2c04>
    85fc:	str	x21, [x20]
    8600:	mov	w23, #0x15                  	// #21
    8604:	mov	w0, w23
    8608:	ldp	x19, x20, [sp, #16]
    860c:	ldp	x21, x22, [sp, #32]
    8610:	ldp	x23, x24, [sp, #48]
    8614:	ldp	x29, x30, [sp], #96
    8618:	ret
    861c:	mov	w23, #0x15                  	// #21
    8620:	b	8604 <Perl__inverse_folds@plt+0x2c04>
    8624:	mov	w23, #0x15                  	// #21
    8628:	b	8604 <Perl__inverse_folds@plt+0x2c04>
    862c:	stp	x29, x30, [sp, #-144]!
    8630:	mov	x29, sp
    8634:	stp	x19, x20, [sp, #16]
    8638:	stp	x21, x22, [sp, #32]
    863c:	stp	x23, x24, [sp, #48]
    8640:	stp	x25, x26, [sp, #64]
    8644:	stp	x27, x28, [sp, #80]
    8648:	mov	x21, x0
    864c:	str	w1, [sp, #108]
    8650:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    8654:	ldr	x0, [x0, #3920]
    8658:	ldr	x1, [x0]
    865c:	str	x1, [sp, #136]
    8660:	mov	x1, #0x0                   	// #0
    8664:	str	x5, [sp, #120]
    8668:	str	x5, [sp, #128]
    866c:	cbz	x4, 8708 <Perl__inverse_folds@plt+0x2d08>
    8670:	mov	w25, w3
    8674:	mov	x20, x4
    8678:	mov	x24, x6
    867c:	and	w23, w7, #0xff
    8680:	cbz	x5, 872c <Perl__inverse_folds@plt+0x2d2c>
    8684:	cbz	x6, 8750 <Perl__inverse_folds@plt+0x2d50>
    8688:	adrp	x22, 6c000 <boot_re@@Base+0xa41c>
    868c:	add	x22, x22, #0x330
    8690:	add	x22, x22, #0x1b0
    8694:	mov	w26, w3
    8698:	add	x28, sp, #0x78
    869c:	add	x27, sp, #0x6c
    86a0:	mov	w0, w2
    86a4:	add	x1, x0, w2, uxtw #1
    86a8:	add	x1, x22, x1, lsl #3
    86ac:	sub	x1, x1, x0
    86b0:	ldrb	w19, [x1, x26]
    86b4:	cmp	w19, #0x7
    86b8:	b.hi	87bc <Perl__inverse_folds@plt+0x2dbc>  // b.pmore
    86bc:	cmp	w19, #0x5
    86c0:	b.hi	889c <Perl__inverse_folds@plt+0x2e9c>  // b.pmore
    86c4:	cmp	w19, #0x2
    86c8:	b.eq	8854 <Perl__inverse_folds@plt+0x2e54>  // b.none
    86cc:	b.ls	8774 <Perl__inverse_folds@plt+0x2d74>  // b.plast
    86d0:	cmp	w19, #0x3
    86d4:	b.eq	887c <Perl__inverse_folds@plt+0x2e7c>  // b.none
    86d8:	mov	w4, w23
    86dc:	add	x3, sp, #0x78
    86e0:	mov	x2, x20
    86e4:	add	x1, sp, #0x6c
    86e8:	mov	x0, x21
    86ec:	bl	830c <Perl__inverse_folds@plt+0x290c>
    86f0:	mov	w1, #0x0                   	// #0
    86f4:	cmp	w0, #0x7
    86f8:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    86fc:	cmp	w19, #0x5
    8700:	cset	w1, eq  // eq = none
    8704:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8708:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    870c:	add	x3, x3, #0x330
    8710:	add	x3, x3, #0x1a8
    8714:	mov	w2, #0x144f                	// #5199
    8718:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    871c:	add	x1, x1, #0xcb0
    8720:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8724:	add	x0, x0, #0x98
    8728:	bl	58e0 <__assert_fail@plt>
    872c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8730:	add	x3, x3, #0x330
    8734:	add	x3, x3, #0x1a8
    8738:	mov	w2, #0x144f                	// #5199
    873c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8740:	add	x1, x1, #0xcb0
    8744:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8748:	add	x0, x0, #0x90
    874c:	bl	58e0 <__assert_fail@plt>
    8750:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8754:	add	x3, x3, #0x330
    8758:	add	x3, x3, #0x1a8
    875c:	mov	w2, #0x144f                	// #5199
    8760:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8764:	add	x1, x1, #0xcb0
    8768:	adrp	x0, 66000 <boot_re@@Base+0x441c>
    876c:	add	x0, x0, #0x660
    8770:	bl	58e0 <__assert_fail@plt>
    8774:	cbz	w19, 89b4 <Perl__inverse_folds@plt+0x2fb4>
    8778:	mov	w1, #0x1                   	// #1
    877c:	cmp	w19, w1
    8780:	b.ne	8978 <Perl__inverse_folds@plt+0x2f78>  // b.any
    8784:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    8788:	ldr	x0, [x0, #3920]
    878c:	ldr	x2, [sp, #136]
    8790:	ldr	x0, [x0]
    8794:	eor	x0, x2, x0
    8798:	cbnz	x0, 89bc <Perl__inverse_folds@plt+0x2fbc>
    879c:	mov	w0, w1
    87a0:	ldp	x19, x20, [sp, #16]
    87a4:	ldp	x21, x22, [sp, #32]
    87a8:	ldp	x23, x24, [sp, #48]
    87ac:	ldp	x25, x26, [sp, #64]
    87b0:	ldp	x27, x28, [sp, #80]
    87b4:	ldp	x29, x30, [sp], #144
    87b8:	ret
    87bc:	cmp	w19, #0xd
    87c0:	b.hi	8808 <Perl__inverse_folds@plt+0x2e08>  // b.pmore
    87c4:	cmp	w19, #0xb
    87c8:	b.hi	8900 <Perl__inverse_folds@plt+0x2f00>  // b.pmore
    87cc:	cmp	w19, #0x9
    87d0:	b.ls	88cc <Perl__inverse_folds@plt+0x2ecc>  // b.plast
    87d4:	mov	w4, w23
    87d8:	add	x3, sp, #0x78
    87dc:	mov	x2, x20
    87e0:	add	x1, sp, #0x6c
    87e4:	mov	x0, x21
    87e8:	bl	830c <Perl__inverse_folds@plt+0x290c>
    87ec:	cmp	w0, #0x1
    87f0:	mov	w1, #0x0                   	// #0
    87f4:	ccmp	w0, #0x7, #0x4, ne  // ne = any
    87f8:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    87fc:	cmp	w19, #0xb
    8800:	cset	w1, eq  // eq = none
    8804:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8808:	cmp	w19, #0xf
    880c:	b.ls	8930 <Perl__inverse_folds@plt+0x2f30>  // b.plast
    8810:	sub	w0, w19, #0x10
    8814:	and	w0, w0, #0xff
    8818:	cmp	w0, #0x1
    881c:	b.hi	8978 <Perl__inverse_folds@plt+0x2f78>  // b.pmore
    8820:	mov	w19, #0x1                   	// #1
    8824:	add	x24, sp, #0x78
    8828:	add	x22, sp, #0x6c
    882c:	mov	w4, w23
    8830:	mov	x3, x24
    8834:	mov	x2, x20
    8838:	mov	x1, x22
    883c:	mov	x0, x21
    8840:	bl	830c <Perl__inverse_folds@plt+0x290c>
    8844:	cmp	w0, #0x10
    8848:	b.ne	8960 <Perl__inverse_folds@plt+0x2f60>  // b.any
    884c:	add	w19, w19, #0x1
    8850:	b	882c <Perl__inverse_folds@plt+0x2e2c>
    8854:	mov	w4, #0x0                   	// #0
    8858:	mov	w3, w23
    885c:	mov	x2, x24
    8860:	add	x1, sp, #0x80
    8864:	mov	x0, x21
    8868:	bl	797c <Perl__inverse_folds@plt+0x1f7c>
    886c:	and	w0, w0, #0xfffffffd
    8870:	cmp	w0, #0x4
    8874:	cset	w1, eq  // eq = none
    8878:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    887c:	mov	w4, w23
    8880:	mov	x3, x28
    8884:	mov	x2, x20
    8888:	mov	x1, x27
    888c:	mov	x0, x21
    8890:	bl	830c <Perl__inverse_folds@plt+0x290c>
    8894:	mov	w2, w0
    8898:	b	86a0 <Perl__inverse_folds@plt+0x2ca0>
    889c:	mov	w4, #0x1                   	// #1
    88a0:	mov	w3, w23
    88a4:	mov	x2, x24
    88a8:	add	x1, sp, #0x80
    88ac:	mov	x0, x21
    88b0:	bl	797c <Perl__inverse_folds@plt+0x1f7c>
    88b4:	mov	w1, #0x0                   	// #0
    88b8:	cmp	w0, #0x7
    88bc:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    88c0:	cmp	w19, #0x7
    88c4:	cset	w1, eq  // eq = none
    88c8:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    88cc:	mov	w4, #0x1                   	// #1
    88d0:	mov	w3, w23
    88d4:	mov	x2, x24
    88d8:	add	x1, sp, #0x80
    88dc:	mov	x0, x21
    88e0:	bl	797c <Perl__inverse_folds@plt+0x1f7c>
    88e4:	cmp	w0, #0x1
    88e8:	mov	w1, #0x0                   	// #0
    88ec:	ccmp	w0, #0x7, #0x4, ne  // ne = any
    88f0:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    88f4:	cmp	w19, #0x9
    88f8:	cset	w1, eq  // eq = none
    88fc:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8900:	mov	w4, w23
    8904:	add	x3, sp, #0x78
    8908:	mov	x2, x20
    890c:	add	x1, sp, #0x6c
    8910:	mov	x0, x21
    8914:	bl	830c <Perl__inverse_folds@plt+0x290c>
    8918:	mov	w1, #0x0                   	// #0
    891c:	cmp	w0, #0xe
    8920:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    8924:	cmp	w19, #0xd
    8928:	cset	w1, eq  // eq = none
    892c:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8930:	mov	w4, #0x1                   	// #1
    8934:	mov	w3, w23
    8938:	mov	x2, x24
    893c:	add	x1, sp, #0x80
    8940:	mov	x0, x21
    8944:	bl	797c <Perl__inverse_folds@plt+0x1f7c>
    8948:	mov	w1, #0x0                   	// #0
    894c:	cmp	w0, #0xe
    8950:	b.eq	8784 <Perl__inverse_folds@plt+0x2d84>  // b.none
    8954:	cmp	w19, #0xf
    8958:	cset	w1, eq  // eq = none
    895c:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8960:	cmp	w19, #0x0
    8964:	and	w19, w19, #0x1
    8968:	cneg	w19, w19, lt  // lt = tstop
    896c:	cmp	w19, #0x1
    8970:	cset	w1, ne  // ne = any
    8974:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    8978:	mov	w4, w19
    897c:	mov	w3, w25
    8980:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    8984:	add	x1, x1, #0xd8
    8988:	mov	x0, x21
    898c:	bl	50e0 <Perl_re_printf@plt>
    8990:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8994:	add	x3, x3, #0x330
    8998:	add	x3, x3, #0x1a8
    899c:	mov	w2, #0x14eb                	// #5355
    89a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    89a4:	add	x1, x1, #0xcb0
    89a8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    89ac:	add	x0, x0, #0x110
    89b0:	bl	58e0 <__assert_fail@plt>
    89b4:	mov	w1, #0x0                   	// #0
    89b8:	b	8784 <Perl__inverse_folds@plt+0x2d84>
    89bc:	bl	5300 <__stack_chk_fail@plt>
    89c0:	stp	x29, x30, [sp, #-80]!
    89c4:	mov	x29, sp
    89c8:	stp	x19, x20, [sp, #16]
    89cc:	stp	x21, x22, [sp, #32]
    89d0:	stp	x23, x24, [sp, #48]
    89d4:	str	x25, [sp, #64]
    89d8:	ldr	w24, [x1, #12]
    89dc:	ubfx	x24, x24, #29, #1
    89e0:	cbz	x3, 8aa4 <Perl__inverse_folds@plt+0x30a4>
    89e4:	mov	x19, x0
    89e8:	mov	x20, x1
    89ec:	and	w25, w2, #0xff
    89f0:	mov	x22, x3
    89f4:	mov	x21, x4
    89f8:	mov	x23, x5
    89fc:	cbz	x4, 8ac8 <Perl__inverse_folds@plt+0x30c8>
    8a00:	cbz	x5, 8aec <Perl__inverse_folds@plt+0x30ec>
    8a04:	ldrb	w0, [x0, #2601]
    8a08:	cbz	w0, 8b10 <Perl__inverse_folds@plt+0x3110>
    8a0c:	ldr	w0, [x19, #2964]
    8a10:	and	w2, w0, #0xf
    8a14:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    8a18:	ldr	x1, [x1, #3888]
    8a1c:	ldrb	w1, [x1, w2, uxtw]
    8a20:	cbz	w1, 8b1c <Perl__inverse_folds@plt+0x311c>
    8a24:	and	w1, w0, #0xc000
    8a28:	cmp	w1, #0x8, lsl #12
    8a2c:	b.eq	8b40 <Perl__inverse_folds@plt+0x3140>  // b.none
    8a30:	and	w0, w0, #0xff
    8a34:	cmp	w0, #0xf
    8a38:	b.ne	8a48 <Perl__inverse_folds@plt+0x3048>  // b.any
    8a3c:	ldr	x0, [x19, #2952]
    8a40:	ldrb	w0, [x0, #129]
    8a44:	tbz	w0, #6, 8b74 <Perl__inverse_folds@plt+0x3174>
    8a48:	ldr	x0, [x19, #2968]
    8a4c:	strb	wzr, [x0]
    8a50:	ldr	x0, [x19, #2952]
    8a54:	str	xzr, [x0, #16]
    8a58:	add	x1, x19, #0xb88
    8a5c:	ldr	x2, [x20, #16]
    8a60:	ldr	x6, [x20]
    8a64:	ldr	w0, [x20, #12]
    8a68:	and	w5, w0, #0xff
    8a6c:	cmp	w5, #0x8
    8a70:	b.eq	8bbc <Perl__inverse_folds@plt+0x31bc>  // b.none
    8a74:	mov	w3, #0x80ff                	// #33023
    8a78:	movk	w3, #0x100, lsl #16
    8a7c:	and	w3, w0, w3
    8a80:	mov	w4, #0xa                   	// #10
    8a84:	movk	w4, #0x100, lsl #16
    8a88:	cmp	w3, w4
    8a8c:	b.ne	8b98 <Perl__inverse_folds@plt+0x3198>  // b.any
    8a90:	mov	x3, x6
    8a94:	cmp	w5, #0xa
    8a98:	b.ne	8bc0 <Perl__inverse_folds@plt+0x31c0>  // b.any
    8a9c:	ldr	x3, [x6, #24]
    8aa0:	b	8bc0 <Perl__inverse_folds@plt+0x31c0>
    8aa4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8aa8:	add	x3, x3, #0x330
    8aac:	add	x3, x3, #0x3c8
    8ab0:	mov	w2, #0xfbf                 	// #4031
    8ab4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8ab8:	add	x1, x1, #0xcb0
    8abc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
    8ac0:	add	x0, x0, #0xe60
    8ac4:	bl	58e0 <__assert_fail@plt>
    8ac8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8acc:	add	x3, x3, #0x330
    8ad0:	add	x3, x3, #0x3c8
    8ad4:	mov	w2, #0xfbf                 	// #4031
    8ad8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8adc:	add	x1, x1, #0xcb0
    8ae0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8ae4:	add	x0, x0, #0x118
    8ae8:	bl	58e0 <__assert_fail@plt>
    8aec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8af0:	add	x3, x3, #0x330
    8af4:	add	x3, x3, #0x3c8
    8af8:	mov	w2, #0xfbf                 	// #4031
    8afc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8b00:	add	x1, x1, #0xcb0
    8b04:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8b08:	add	x0, x0, #0x120
    8b0c:	bl	58e0 <__assert_fail@plt>
    8b10:	mov	x0, x19
    8b14:	bl	54e0 <Perl_reginitcolors@plt>
    8b18:	b	8a0c <Perl__inverse_folds@plt+0x300c>
    8b1c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8b20:	add	x3, x3, #0x330
    8b24:	add	x3, x3, #0x3c8
    8b28:	mov	w2, #0xfc4                 	// #4036
    8b2c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8b30:	add	x1, x1, #0xcb0
    8b34:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8b38:	add	x0, x0, #0xd10
    8b3c:	bl	58e0 <__assert_fail@plt>
    8b40:	and	w1, w0, #0xff
    8b44:	sub	w1, w1, #0x9
    8b48:	cmp	w1, #0x1
    8b4c:	b.hi	8a30 <Perl__inverse_folds@plt+0x3030>  // b.pmore
    8b50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8b54:	add	x3, x3, #0x330
    8b58:	add	x3, x3, #0x3c8
    8b5c:	mov	w2, #0xfc4                 	// #4036
    8b60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8b64:	add	x1, x1, #0xcb0
    8b68:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8b6c:	add	x0, x0, #0xd40
    8b70:	bl	58e0 <__assert_fail@plt>
    8b74:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8b78:	add	x3, x3, #0x330
    8b7c:	add	x3, x3, #0x3c8
    8b80:	mov	w2, #0xfc4                 	// #4036
    8b84:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8b88:	add	x1, x1, #0xcb0
    8b8c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8b90:	add	x0, x0, #0xd58
    8b94:	bl	58e0 <__assert_fail@plt>
    8b98:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8b9c:	add	x3, x3, #0x330
    8ba0:	add	x3, x3, #0x3e0
    8ba4:	mov	w2, #0xb6                  	// #182
    8ba8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8bac:	add	x1, x1, #0xc80
    8bb0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8bb4:	add	x0, x0, #0x128
    8bb8:	bl	58e0 <__assert_fail@plt>
    8bbc:	mov	x3, x6
    8bc0:	ldrb	w8, [x3, #184]
    8bc4:	and	x8, x8, #0xf
    8bc8:	add	x2, x2, x8
    8bcc:	and	w4, w0, #0xf
    8bd0:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    8bd4:	ldr	x3, [x3, #3888]
    8bd8:	ldrb	w3, [x3, w4, uxtw]
    8bdc:	cbz	w3, 8cd0 <Perl__inverse_folds@plt+0x32d0>
    8be0:	and	w0, w0, #0xc000
    8be4:	cmp	w0, #0x8, lsl #12
    8be8:	b.eq	8cf4 <Perl__inverse_folds@plt+0x32f4>  // b.none
    8bec:	cmp	w5, #0xf
    8bf0:	b.eq	8d24 <Perl__inverse_folds@plt+0x3324>  // b.none
    8bf4:	ldr	x3, [x6, #16]
    8bf8:	sub	x3, x3, #0x1
    8bfc:	cmp	w24, #0x0
    8c00:	mov	w7, #0x8503                	// #34051
    8c04:	mov	w0, #0x8403                	// #33795
    8c08:	csel	w7, w7, w0, ne  // ne = any
    8c0c:	ldr	x6, [x19, #1456]
    8c10:	ldr	x5, [x19, #1448]
    8c14:	ldr	x4, [x19, #3360]
    8c18:	sub	x3, x3, x8
    8c1c:	mov	x0, x19
    8c20:	bl	53f0 <Perl_pv_pretty@plt>
    8c24:	mov	x20, x0
    8c28:	ldr	w1, [x19, #2988]
    8c2c:	and	w2, w1, #0xf
    8c30:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    8c34:	ldr	x0, [x0, #3888]
    8c38:	ldrb	w0, [x0, w2, uxtw]
    8c3c:	cbz	w0, 8d50 <Perl__inverse_folds@plt+0x3350>
    8c40:	and	w0, w1, #0xc000
    8c44:	cmp	w0, #0x8, lsl #12
    8c48:	b.eq	8d74 <Perl__inverse_folds@plt+0x3374>  // b.none
    8c4c:	and	w1, w1, #0xff
    8c50:	cmp	w1, #0xf
    8c54:	b.eq	8da8 <Perl__inverse_folds@plt+0x33a8>  // b.none
    8c58:	ldr	x0, [x19, #2992]
    8c5c:	strb	wzr, [x0]
    8c60:	ldr	x0, [x19, #2976]
    8c64:	str	xzr, [x0, #16]
    8c68:	add	x1, x19, #0xba0
    8c6c:	sub	x3, x21, x22
    8c70:	ldr	x4, [x19, #3360]
    8c74:	ldr	x5, [x19, #1448]
    8c78:	ldr	x6, [x19, #1456]
    8c7c:	cbnz	w25, 8e24 <Perl__inverse_folds@plt+0x3424>
    8c80:	mov	w7, #0x8403                	// #33795
    8c84:	mov	x2, x22
    8c88:	mov	x0, x19
    8c8c:	bl	53f0 <Perl_pv_pretty@plt>
    8c90:	mov	x6, x0
    8c94:	mov	x5, x20
    8c98:	ldr	x4, [x19, #1488]
    8c9c:	mov	x3, x23
    8ca0:	ldr	x2, [x19, #1480]
    8ca4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    8ca8:	add	x1, x1, #0x138
    8cac:	mov	x0, x19
    8cb0:	bl	50e0 <Perl_re_printf@plt>
    8cb4:	cbnz	w24, 8e84 <Perl__inverse_folds@plt+0x3484>
    8cb8:	ldp	x19, x20, [sp, #16]
    8cbc:	ldp	x21, x22, [sp, #32]
    8cc0:	ldp	x23, x24, [sp, #48]
    8cc4:	ldr	x25, [sp, #64]
    8cc8:	ldp	x29, x30, [sp], #80
    8ccc:	ret
    8cd0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8cd4:	add	x3, x3, #0x330
    8cd8:	add	x3, x3, #0x3c8
    8cdc:	mov	w2, #0xfc5                 	// #4037
    8ce0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8ce4:	add	x1, x1, #0xcb0
    8ce8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8cec:	add	x0, x0, #0xe40
    8cf0:	bl	58e0 <__assert_fail@plt>
    8cf4:	sub	w0, w5, #0x9
    8cf8:	cmp	w0, #0x1
    8cfc:	b.hi	8bec <Perl__inverse_folds@plt+0x31ec>  // b.pmore
    8d00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8d04:	add	x3, x3, #0x330
    8d08:	add	x3, x3, #0x3c8
    8d0c:	mov	w2, #0xfc5                 	// #4037
    8d10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8d14:	add	x1, x1, #0xcb0
    8d18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8d1c:	add	x0, x0, #0xe70
    8d20:	bl	58e0 <__assert_fail@plt>
    8d24:	ldrb	w0, [x6, #129]
    8d28:	tbnz	w0, #6, 8bf4 <Perl__inverse_folds@plt+0x31f4>
    8d2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8d30:	add	x3, x3, #0x330
    8d34:	add	x3, x3, #0x3c8
    8d38:	mov	w2, #0xfc5                 	// #4037
    8d3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8d40:	add	x1, x1, #0xcb0
    8d44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8d48:	add	x0, x0, #0xe88
    8d4c:	bl	58e0 <__assert_fail@plt>
    8d50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8d54:	add	x3, x3, #0x330
    8d58:	add	x3, x3, #0x3c8
    8d5c:	mov	w2, #0xfc7                 	// #4039
    8d60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8d64:	add	x1, x1, #0xcb0
    8d68:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8d6c:	add	x0, x0, #0xd10
    8d70:	bl	58e0 <__assert_fail@plt>
    8d74:	and	w0, w1, #0xff
    8d78:	sub	w0, w0, #0x9
    8d7c:	cmp	w0, #0x1
    8d80:	b.hi	8c4c <Perl__inverse_folds@plt+0x324c>  // b.pmore
    8d84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8d88:	add	x3, x3, #0x330
    8d8c:	add	x3, x3, #0x3c8
    8d90:	mov	w2, #0xfc7                 	// #4039
    8d94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8d98:	add	x1, x1, #0xcb0
    8d9c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8da0:	add	x0, x0, #0xd40
    8da4:	bl	58e0 <__assert_fail@plt>
    8da8:	ldr	x0, [x19, #2976]
    8dac:	ldrb	w0, [x0, #129]
    8db0:	tbnz	w0, #6, 8c58 <Perl__inverse_folds@plt+0x3258>
    8db4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8db8:	add	x3, x3, #0x330
    8dbc:	add	x3, x3, #0x3c8
    8dc0:	mov	w2, #0xfc7                 	// #4039
    8dc4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8dc8:	add	x1, x1, #0xcb0
    8dcc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8dd0:	add	x0, x0, #0xd58
    8dd4:	bl	58e0 <__assert_fail@plt>
    8dd8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
    8ddc:	add	x3, x3, #0x20
    8de0:	mov	x2, x3
    8de4:	adrp	x4, 62000 <boot_re@@Base+0x41c>
    8de8:	add	x4, x4, #0x110
    8dec:	b	8e70 <Perl__inverse_folds@plt+0x3470>
    8df0:	adrp	x3, 62000 <boot_re@@Base+0x41c>
    8df4:	add	x3, x3, #0x108
    8df8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
    8dfc:	add	x2, x2, #0xdf8
    8e00:	adrp	x4, 62000 <boot_re@@Base+0x41c>
    8e04:	add	x4, x4, #0x110
    8e08:	b	8e70 <Perl__inverse_folds@plt+0x3470>
    8e0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
    8e10:	add	x3, x3, #0x20
    8e14:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
    8e18:	add	x2, x2, #0xdf8
    8e1c:	mov	x4, x3
    8e20:	b	8e70 <Perl__inverse_folds@plt+0x3470>
    8e24:	mov	w7, #0x8503                	// #34051
    8e28:	mov	x2, x22
    8e2c:	mov	x0, x19
    8e30:	bl	53f0 <Perl_pv_pretty@plt>
    8e34:	mov	x6, x0
    8e38:	mov	x5, x20
    8e3c:	ldr	x4, [x19, #1488]
    8e40:	mov	x3, x23
    8e44:	ldr	x2, [x19, #1480]
    8e48:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    8e4c:	add	x1, x1, #0x138
    8e50:	mov	x0, x19
    8e54:	bl	50e0 <Perl_re_printf@plt>
    8e58:	cbnz	w24, 8df0 <Perl__inverse_folds@plt+0x33f0>
    8e5c:	cbnz	w25, 8dd8 <Perl__inverse_folds@plt+0x33d8>
    8e60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
    8e64:	add	x3, x3, #0x20
    8e68:	mov	x2, x3
    8e6c:	mov	x4, x3
    8e70:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    8e74:	add	x1, x1, #0x158
    8e78:	mov	x0, x19
    8e7c:	bl	50e0 <Perl_re_printf@plt>
    8e80:	b	8cb8 <Perl__inverse_folds@plt+0x32b8>
    8e84:	cbz	w25, 8e0c <Perl__inverse_folds@plt+0x340c>
    8e88:	adrp	x3, 62000 <boot_re@@Base+0x41c>
    8e8c:	add	x3, x3, #0x108
    8e90:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
    8e94:	add	x2, x2, #0xdf8
    8e98:	adrp	x4, 62000 <boot_re@@Base+0x41c>
    8e9c:	add	x4, x4, #0x110
    8ea0:	b	8e70 <Perl__inverse_folds@plt+0x3470>
    8ea4:	stp	x29, x30, [sp, #-64]!
    8ea8:	mov	x29, sp
    8eac:	stp	x19, x20, [sp, #16]
    8eb0:	stp	x21, x22, [sp, #32]
    8eb4:	str	x23, [sp, #48]
    8eb8:	mov	x22, x0
    8ebc:	mov	x21, x2
    8ec0:	mov	x20, x3
    8ec4:	mov	x23, x4
    8ec8:	ldr	x19, [x1]
    8ecc:	ldr	w1, [x1, #12]
    8ed0:	and	w0, w1, #0xff
    8ed4:	cmp	w0, #0x8
    8ed8:	b.eq	8f04 <Perl__inverse_folds@plt+0x3504>  // b.none
    8edc:	mov	w2, #0x80ff                	// #33023
    8ee0:	movk	w2, #0x100, lsl #16
    8ee4:	and	w1, w1, w2
    8ee8:	mov	w2, #0xa                   	// #10
    8eec:	movk	w2, #0x100, lsl #16
    8ef0:	cmp	w1, w2
    8ef4:	b.ne	8f60 <Perl__inverse_folds@plt+0x3560>  // b.any
    8ef8:	cmp	w0, #0xa
    8efc:	b.ne	8f04 <Perl__inverse_folds@plt+0x3504>  // b.any
    8f00:	ldr	x19, [x19, #24]
    8f04:	tbz	w5, #0, 9470 <Perl__inverse_folds@plt+0x3a70>
    8f08:	ldr	w2, [x23, #12]
    8f0c:	tbz	w2, #28, 9010 <Perl__inverse_folds@plt+0x3610>
    8f10:	ldr	x1, [x23]
    8f14:	ldr	x0, [x1, #24]
    8f18:	cbz	x0, 9008 <Perl__inverse_folds@plt+0x3608>
    8f1c:	and	w4, w2, #0xf
    8f20:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    8f24:	ldr	x3, [x3, #3888]
    8f28:	ldrb	w3, [x3, w4, uxtw]
    8f2c:	cbz	w3, 8f84 <Perl__inverse_folds@plt+0x3584>
    8f30:	and	w3, w2, #0xc000
    8f34:	cmp	w3, #0x8, lsl #12
    8f38:	b.eq	8fa8 <Perl__inverse_folds@plt+0x35a8>  // b.none
    8f3c:	and	w3, w2, #0xff
    8f40:	cmp	w3, #0xf
    8f44:	b.eq	8fdc <Perl__inverse_folds@plt+0x35dc>  // b.none
    8f48:	ldr	x1, [x23, #16]
    8f4c:	add	x0, x1, x0
    8f50:	ldurb	w0, [x0, #-1]
    8f54:	cmp	w0, #0xff
    8f58:	cset	w0, ne  // ne = any
    8f5c:	b	902c <Perl__inverse_folds@plt+0x362c>
    8f60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8f64:	add	x3, x3, #0x330
    8f68:	add	x3, x3, #0x3e0
    8f6c:	mov	w2, #0xb6                  	// #182
    8f70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8f74:	add	x1, x1, #0xc80
    8f78:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    8f7c:	add	x0, x0, #0x128
    8f80:	bl	58e0 <__assert_fail@plt>
    8f84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8f88:	add	x3, x3, #0x330
    8f8c:	add	x3, x3, #0x3e8
    8f90:	mov	w2, #0xc09                 	// #3081
    8f94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8f98:	add	x1, x1, #0xcb0
    8f9c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8fa0:	add	x0, x0, #0xd10
    8fa4:	bl	58e0 <__assert_fail@plt>
    8fa8:	and	w3, w2, #0xff
    8fac:	sub	w3, w3, #0x9
    8fb0:	cmp	w3, #0x1
    8fb4:	b.hi	8f3c <Perl__inverse_folds@plt+0x353c>  // b.pmore
    8fb8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8fbc:	add	x3, x3, #0x330
    8fc0:	add	x3, x3, #0x3e8
    8fc4:	mov	w2, #0xc09                 	// #3081
    8fc8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8fcc:	add	x1, x1, #0xcb0
    8fd0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    8fd4:	add	x0, x0, #0xd40
    8fd8:	bl	58e0 <__assert_fail@plt>
    8fdc:	ldrb	w1, [x1, #129]
    8fe0:	tbnz	w1, #6, 8f48 <Perl__inverse_folds@plt+0x3548>
    8fe4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    8fe8:	add	x3, x3, #0x330
    8fec:	add	x3, x3, #0x3e8
    8ff0:	mov	w2, #0xc09                 	// #3081
    8ff4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    8ff8:	add	x1, x1, #0xcb0
    8ffc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9000:	add	x0, x0, #0xd58
    9004:	bl	58e0 <__assert_fail@plt>
    9008:	mov	w0, #0x1                   	// #1
    900c:	b	902c <Perl__inverse_folds@plt+0x362c>
    9010:	mov	w1, #0x4c00                	// #19456
    9014:	movk	w1, #0xf01, lsl #16
    9018:	and	w1, w2, w1
    901c:	mov	w0, #0x0                   	// #0
    9020:	mov	w3, #0x4400                	// #17408
    9024:	cmp	w1, w3
    9028:	b.eq	90ac <Perl__inverse_folds@plt+0x36ac>  // b.none
    902c:	cbz	w0, 938c <Perl__inverse_folds@plt+0x398c>
    9030:	ldr	w0, [x22, #2368]
    9034:	tbnz	w0, #21, 917c <Perl__inverse_folds@plt+0x377c>
    9038:	ldr	x1, [x19, #144]
    903c:	cbz	x1, 9064 <Perl__inverse_folds@plt+0x3664>
    9040:	ldr	w0, [x1, #12]
    9044:	mov	w2, #0x4000                	// #16384
    9048:	movk	w2, #0x1000, lsl #16
    904c:	bics	wzr, w2, w0
    9050:	b.eq	9194 <Perl__inverse_folds@plt+0x3794>  // b.none
    9054:	mov	w2, #0x800                 	// #2048
    9058:	movk	w2, #0x1981, lsl #16
    905c:	tst	w0, w2
    9060:	b.ne	9340 <Perl__inverse_folds@plt+0x3940>  // b.any
    9064:	ldr	w0, [x19, #56]
    9068:	tbnz	w0, #25, 9350 <Perl__inverse_folds@plt+0x3950>
    906c:	mov	x2, x23
    9070:	ldr	x1, [x19, #144]
    9074:	mov	x0, x22
    9078:	bl	5220 <Perl_sv_setsv_cow@plt>
    907c:	str	x0, [x19, #144]
    9080:	ldr	x0, [x19, #144]
    9084:	ldr	x1, [x0, #16]
    9088:	str	x1, [x19, #136]
    908c:	ldr	w0, [x0, #12]
    9090:	tbz	w0, #14, 9368 <Perl__inverse_folds@plt+0x3968>
    9094:	sub	x20, x20, x21
    9098:	str	x20, [x19, #152]
    909c:	str	xzr, [x19, #160]
    90a0:	ldr	x0, [x19, #160]
    90a4:	str	x0, [x19, #168]
    90a8:	b	94a8 <Perl__inverse_folds@plt+0x3aa8>
    90ac:	and	w1, w2, #0xf
    90b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    90b4:	ldr	x0, [x0, #3888]
    90b8:	ldrb	w0, [x0, w1, uxtw]
    90bc:	cbz	w0, 90f4 <Perl__inverse_folds@plt+0x36f4>
    90c0:	and	w0, w2, #0xc000
    90c4:	cmp	w0, #0x8, lsl #12
    90c8:	b.eq	9118 <Perl__inverse_folds@plt+0x3718>  // b.none
    90cc:	and	w0, w2, #0xff
    90d0:	cmp	w0, #0xf
    90d4:	b.eq	914c <Perl__inverse_folds@plt+0x374c>  // b.none
    90d8:	ldr	x1, [x23]
    90dc:	ldr	x0, [x1, #16]
    90e0:	add	x0, x0, #0x1
    90e4:	ldr	x1, [x1, #24]
    90e8:	cmp	x0, x1
    90ec:	cset	w0, cc  // cc = lo, ul, last
    90f0:	b	902c <Perl__inverse_folds@plt+0x362c>
    90f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    90f8:	add	x3, x3, #0x330
    90fc:	add	x3, x3, #0x3e8
    9100:	mov	w2, #0xc09                 	// #3081
    9104:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9108:	add	x1, x1, #0xcb0
    910c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9110:	add	x0, x0, #0xe40
    9114:	bl	58e0 <__assert_fail@plt>
    9118:	and	w0, w2, #0xff
    911c:	sub	w0, w0, #0x9
    9120:	cmp	w0, #0x1
    9124:	b.hi	90cc <Perl__inverse_folds@plt+0x36cc>  // b.pmore
    9128:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    912c:	add	x3, x3, #0x330
    9130:	add	x3, x3, #0x3e8
    9134:	mov	w2, #0xc09                 	// #3081
    9138:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    913c:	add	x1, x1, #0xcb0
    9140:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9144:	add	x0, x0, #0xe70
    9148:	bl	58e0 <__assert_fail@plt>
    914c:	ldr	x0, [x23]
    9150:	ldrb	w0, [x0, #129]
    9154:	tbnz	w0, #6, 90d8 <Perl__inverse_folds@plt+0x36d8>
    9158:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    915c:	add	x3, x3, #0x330
    9160:	add	x3, x3, #0x3e8
    9164:	mov	w2, #0xc09                 	// #3081
    9168:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    916c:	add	x1, x1, #0xcb0
    9170:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9174:	add	x0, x0, #0xe88
    9178:	bl	58e0 <__assert_fail@plt>
    917c:	and	w2, w2, #0xff
    9180:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    9184:	add	x1, x1, #0x170
    9188:	mov	x0, x22
    918c:	bl	50e0 <Perl_re_printf@plt>
    9190:	b	9038 <Perl__inverse_folds@plt+0x3638>
    9194:	ldr	w2, [x23, #12]
    9198:	mov	w3, #0x4000                	// #16384
    919c:	movk	w3, #0x1000, lsl #16
    91a0:	bics	wzr, w3, w2
    91a4:	b.ne	9054 <Perl__inverse_folds@plt+0x3654>  // b.any
    91a8:	and	w4, w2, #0xf
    91ac:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    91b0:	ldr	x3, [x3, #3888]
    91b4:	ldrb	w3, [x3, w4, uxtw]
    91b8:	cbz	w3, 9230 <Perl__inverse_folds@plt+0x3830>
    91bc:	and	w3, w2, #0xc000
    91c0:	cmp	w3, #0x8, lsl #12
    91c4:	b.eq	9254 <Perl__inverse_folds@plt+0x3854>  // b.none
    91c8:	and	w2, w2, #0xff
    91cc:	cmp	w2, #0xf
    91d0:	b.eq	9288 <Perl__inverse_folds@plt+0x3888>  // b.none
    91d4:	ldr	x4, [x23, #16]
    91d8:	and	w3, w0, #0xf
    91dc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    91e0:	ldr	x2, [x2, #3888]
    91e4:	ldrb	w2, [x2, w3, uxtw]
    91e8:	cbz	w2, 92b8 <Perl__inverse_folds@plt+0x38b8>
    91ec:	and	w2, w0, #0xc000
    91f0:	cmp	w2, #0x8, lsl #12
    91f4:	b.eq	92dc <Perl__inverse_folds@plt+0x38dc>  // b.none
    91f8:	and	w2, w0, #0xff
    91fc:	cmp	w2, #0xf
    9200:	b.eq	9310 <Perl__inverse_folds@plt+0x3910>  // b.none
    9204:	ldr	x2, [x1, #16]
    9208:	cmp	x4, x2
    920c:	b.ne	9054 <Perl__inverse_folds@plt+0x3654>  // b.any
    9210:	ldr	w0, [x19, #56]
    9214:	tbz	w0, #25, 9080 <Perl__inverse_folds@plt+0x3680>
    9218:	ldr	x0, [x19, #136]
    921c:	bl	5650 <Perl_safesysfree@plt>
    9220:	ldr	w0, [x19, #56]
    9224:	and	w0, w0, #0xfdffffff
    9228:	str	w0, [x19, #56]
    922c:	b	9080 <Perl__inverse_folds@plt+0x3680>
    9230:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9234:	add	x3, x3, #0x330
    9238:	add	x3, x3, #0x3e8
    923c:	mov	w2, #0xc15                 	// #3093
    9240:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9244:	add	x1, x1, #0xcb0
    9248:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    924c:	add	x0, x0, #0xd10
    9250:	bl	58e0 <__assert_fail@plt>
    9254:	and	w3, w2, #0xff
    9258:	sub	w3, w3, #0x9
    925c:	cmp	w3, #0x1
    9260:	b.hi	91c8 <Perl__inverse_folds@plt+0x37c8>  // b.pmore
    9264:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9268:	add	x3, x3, #0x330
    926c:	add	x3, x3, #0x3e8
    9270:	mov	w2, #0xc15                 	// #3093
    9274:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9278:	add	x1, x1, #0xcb0
    927c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9280:	add	x0, x0, #0xd40
    9284:	bl	58e0 <__assert_fail@plt>
    9288:	ldr	x2, [x23]
    928c:	ldrb	w2, [x2, #129]
    9290:	tbnz	w2, #6, 91d4 <Perl__inverse_folds@plt+0x37d4>
    9294:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9298:	add	x3, x3, #0x330
    929c:	add	x3, x3, #0x3e8
    92a0:	mov	w2, #0xc15                 	// #3093
    92a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    92a8:	add	x1, x1, #0xcb0
    92ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    92b0:	add	x0, x0, #0xd58
    92b4:	bl	58e0 <__assert_fail@plt>
    92b8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    92bc:	add	x3, x3, #0x330
    92c0:	add	x3, x3, #0x3e8
    92c4:	mov	w2, #0xc15                 	// #3093
    92c8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    92cc:	add	x1, x1, #0xcb0
    92d0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    92d4:	add	x0, x0, #0xd10
    92d8:	bl	58e0 <__assert_fail@plt>
    92dc:	and	w2, w0, #0xff
    92e0:	sub	w2, w2, #0x9
    92e4:	cmp	w2, #0x1
    92e8:	b.hi	91f8 <Perl__inverse_folds@plt+0x37f8>  // b.pmore
    92ec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    92f0:	add	x3, x3, #0x330
    92f4:	add	x3, x3, #0x3e8
    92f8:	mov	w2, #0xc15                 	// #3093
    92fc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9300:	add	x1, x1, #0xcb0
    9304:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9308:	add	x0, x0, #0xd40
    930c:	bl	58e0 <__assert_fail@plt>
    9310:	ldr	x2, [x1]
    9314:	ldrb	w2, [x2, #129]
    9318:	tbnz	w2, #6, 9204 <Perl__inverse_folds@plt+0x3804>
    931c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9320:	add	x3, x3, #0x330
    9324:	add	x3, x3, #0x3e8
    9328:	mov	w2, #0xc15                 	// #3093
    932c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9330:	add	x1, x1, #0xcb0
    9334:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    9338:	add	x0, x0, #0xd58
    933c:	bl	58e0 <__assert_fail@plt>
    9340:	mov	w2, #0x4                   	// #4
    9344:	mov	x0, x22
    9348:	bl	50a0 <Perl_sv_force_normal_flags@plt>
    934c:	b	9064 <Perl__inverse_folds@plt+0x3664>
    9350:	ldr	x0, [x19, #136]
    9354:	bl	5650 <Perl_safesysfree@plt>
    9358:	ldr	w0, [x19, #56]
    935c:	and	w0, w0, #0xfdffffff
    9360:	str	w0, [x19, #56]
    9364:	b	906c <Perl__inverse_folds@plt+0x366c>
    9368:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    936c:	add	x3, x3, #0x330
    9370:	add	x3, x3, #0x3e8
    9374:	mov	w2, #0xc23                 	// #3107
    9378:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    937c:	add	x1, x1, #0xcb0
    9380:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9384:	add	x0, x0, #0x198
    9388:	bl	58e0 <__assert_fail@plt>
    938c:	subs	x20, x20, x21
    9390:	b.mi	93e0 <Perl__inverse_folds@plt+0x39e0>  // b.first
    9394:	ldr	w0, [x19, #56]
    9398:	tbz	w0, #25, 9418 <Perl__inverse_folds@plt+0x3a18>
    939c:	ldr	x0, [x19, #152]
    93a0:	cmp	x0, x20
    93a4:	b.lt	9404 <Perl__inverse_folds@plt+0x3a04>  // b.tstop
    93a8:	ldr	x0, [x19, #136]
    93ac:	cbz	x0, 9428 <Perl__inverse_folds@plt+0x3a28>
    93b0:	cbz	x21, 944c <Perl__inverse_folds@plt+0x3a4c>
    93b4:	mov	x2, x20
    93b8:	mov	x1, x21
    93bc:	bl	4e60 <memcpy@plt>
    93c0:	ldr	x0, [x19, #136]
    93c4:	strb	wzr, [x0, x20]
    93c8:	str	xzr, [x19, #160]
    93cc:	str	x20, [x19, #152]
    93d0:	ldr	w0, [x19, #56]
    93d4:	orr	w0, w0, #0x2000000
    93d8:	str	w0, [x19, #56]
    93dc:	b	90a0 <Perl__inverse_folds@plt+0x36a0>
    93e0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    93e4:	add	x3, x3, #0x330
    93e8:	add	x3, x3, #0x3e8
    93ec:	mov	w2, #0xc5b                 	// #3163
    93f0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    93f4:	add	x1, x1, #0xcb0
    93f8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    93fc:	add	x0, x0, #0x1b8
    9400:	bl	58e0 <__assert_fail@plt>
    9404:	add	x1, x20, #0x1
    9408:	ldr	x0, [x19, #136]
    940c:	bl	5670 <Perl_safesysrealloc@plt>
    9410:	str	x0, [x19, #136]
    9414:	b	93a8 <Perl__inverse_folds@plt+0x39a8>
    9418:	add	x0, x20, #0x1
    941c:	bl	5250 <Perl_safesysmalloc@plt>
    9420:	str	x0, [x19, #136]
    9424:	b	93a8 <Perl__inverse_folds@plt+0x39a8>
    9428:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    942c:	add	x3, x3, #0x330
    9430:	add	x3, x3, #0x3e8
    9434:	mov	w2, #0xc65                 	// #3173
    9438:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    943c:	add	x1, x1, #0xcb0
    9440:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9444:	add	x0, x0, #0x1f0
    9448:	bl	58e0 <__assert_fail@plt>
    944c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9450:	add	x3, x3, #0x330
    9454:	add	x3, x3, #0x3e8
    9458:	mov	w2, #0xc65                 	// #3173
    945c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9460:	add	x1, x1, #0xcb0
    9464:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9468:	add	x0, x0, #0x210
    946c:	bl	58e0 <__assert_fail@plt>
    9470:	ldr	x1, [x19, #144]
    9474:	cbz	x1, 948c <Perl__inverse_folds@plt+0x3a8c>
    9478:	ldr	w2, [x1, #12]
    947c:	mov	w0, #0x800                 	// #2048
    9480:	movk	w0, #0x1981, lsl #16
    9484:	tst	w2, w0
    9488:	b.ne	94bc <Perl__inverse_folds@plt+0x3abc>  // b.any
    948c:	ldr	w0, [x19, #56]
    9490:	tbnz	w0, #25, 94cc <Perl__inverse_folds@plt+0x3acc>
    9494:	str	x21, [x19, #136]
    9498:	str	xzr, [x19, #160]
    949c:	str	xzr, [x19, #168]
    94a0:	sub	x20, x20, x21
    94a4:	str	x20, [x19, #152]
    94a8:	ldp	x19, x20, [sp, #16]
    94ac:	ldp	x21, x22, [sp, #32]
    94b0:	ldr	x23, [sp, #48]
    94b4:	ldp	x29, x30, [sp], #64
    94b8:	ret
    94bc:	mov	w2, #0x4                   	// #4
    94c0:	mov	x0, x22
    94c4:	bl	50a0 <Perl_sv_force_normal_flags@plt>
    94c8:	b	948c <Perl__inverse_folds@plt+0x3a8c>
    94cc:	ldr	x0, [x19, #136]
    94d0:	bl	5650 <Perl_safesysfree@plt>
    94d4:	ldr	w0, [x19, #56]
    94d8:	and	w0, w0, #0xfdffffff
    94dc:	str	w0, [x19, #56]
    94e0:	b	9494 <Perl__inverse_folds@plt+0x3a94>
    94e4:	stp	x29, x30, [sp, #-64]!
    94e8:	mov	x29, sp
    94ec:	cbz	x1, 9560 <Perl__inverse_folds@plt+0x3b60>
    94f0:	stp	x19, x20, [sp, #16]
    94f4:	str	x23, [sp, #48]
    94f8:	mov	x23, x0
    94fc:	mov	x19, x1
    9500:	mov	x20, x2
    9504:	and	w3, w3, #0xff
    9508:	cbz	x2, 9590 <Perl__inverse_folds@plt+0x3b90>
    950c:	ldr	x0, [x2]
    9510:	cmp	x0, x1
    9514:	b.cc	96f0 <Perl__inverse_folds@plt+0x3cf0>  // b.lo, b.ul, b.last
    9518:	cbnz	w3, 95b8 <Perl__inverse_folds@plt+0x3bb8>
    951c:	sub	x1, x0, #0x2
    9520:	cmp	x19, x1
    9524:	b.hi	96e4 <Perl__inverse_folds@plt+0x3ce4>  // b.pmore
    9528:	sub	x1, x0, #0x1
    952c:	str	x1, [x2]
    9530:	ldurb	w1, [x0, #-2]
    9534:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9538:	ldr	x0, [x0, #3992]
    953c:	ldr	x0, [x0]
    9540:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9544:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
    9548:	add	x1, x1, #0xe48
    954c:	ldr	w0, [x1, x0, lsl #2]
    9550:	ldp	x19, x20, [sp, #16]
    9554:	ldr	x23, [sp, #48]
    9558:	ldp	x29, x30, [sp], #64
    955c:	ret
    9560:	stp	x19, x20, [sp, #16]
    9564:	stp	x21, x22, [sp, #32]
    9568:	str	x23, [sp, #48]
    956c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9570:	add	x3, x3, #0x330
    9574:	add	x3, x3, #0x408
    9578:	mov	w2, #0x12fd                	// #4861
    957c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9580:	add	x1, x1, #0xcb0
    9584:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9588:	add	x0, x0, #0x98
    958c:	bl	58e0 <__assert_fail@plt>
    9590:	stp	x21, x22, [sp, #32]
    9594:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9598:	add	x3, x3, #0x330
    959c:	add	x3, x3, #0x408
    95a0:	mov	w2, #0x12fd                	// #4861
    95a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    95a8:	add	x1, x1, #0xcb0
    95ac:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    95b0:	add	x0, x0, #0x90
    95b4:	bl	58e0 <__assert_fail@plt>
    95b8:	stp	x21, x22, [sp, #32]
    95bc:	mov	x2, x1
    95c0:	mov	x1, #0xffffffffffffffff    	// #-1
    95c4:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    95c8:	mov	x21, x0
    95cc:	cbz	x0, 96f8 <Perl__inverse_folds@plt+0x3cf8>
    95d0:	mov	x2, x19
    95d4:	mov	x1, #0xffffffffffffffff    	// #-1
    95d8:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    95dc:	mov	x22, x0
    95e0:	cbz	x0, 96d4 <Perl__inverse_folds@plt+0x3cd4>
    95e4:	cmp	x21, x0
    95e8:	b.ls	9680 <Perl__inverse_folds@plt+0x3c80>  // b.plast
    95ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    95f0:	ldr	x0, [x0, #3992]
    95f4:	ldr	x19, [x0]
    95f8:	mov	w1, #0x2c                  	// #44
    95fc:	mov	x0, x23
    9600:	bl	52a0 <Perl_ckwarn_d@plt>
    9604:	ands	w0, w0, #0xff
    9608:	mov	w3, #0x9e                  	// #158
    960c:	csel	w3, w3, wzr, eq  // eq = none
    9610:	mov	x0, x22
    9614:	mov	x1, #0x0                   	// #0
    9618:	mov	x2, #0x0                   	// #0
    961c:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
    9620:	ldr	x9, [x4, #3824]
    9624:	mov	w8, #0xff                  	// #255
    9628:	mov	x6, x9
    962c:	ldrb	w5, [x0]
    9630:	ldrb	w4, [x9, w5, sxtw]
    9634:	and	x7, x4, #0xff
    9638:	asr	w4, w8, w4
    963c:	and	w4, w4, w5
    9640:	sxtw	x4, w4
    9644:	bfi	x5, x1, #6, #58
    9648:	cmp	x2, #0x0
    964c:	csel	x1, x5, x4, ne  // ne = any
    9650:	add	x2, x6, x2
    9654:	add	x2, x2, x7
    9658:	ldrb	w2, [x2, #256]
    965c:	cbnz	x2, 96a4 <Perl__inverse_folds@plt+0x3ca4>
    9660:	mov	x0, x19
    9664:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9668:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
    966c:	add	x1, x1, #0xe48
    9670:	ldr	w0, [x1, x0, lsl #2]
    9674:	str	x21, [x20]
    9678:	ldp	x21, x22, [sp, #32]
    967c:	b	9550 <Perl__inverse_folds@plt+0x3b50>
    9680:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9684:	add	x3, x3, #0x330
    9688:	add	x3, x3, #0x408
    968c:	mov	w2, #0x130c                	// #4876
    9690:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9694:	add	x1, x1, #0xcb0
    9698:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    969c:	add	x0, x0, #0xa0
    96a0:	bl	58e0 <__assert_fail@plt>
    96a4:	add	x0, x0, #0x1
    96a8:	cmp	x2, #0x1
    96ac:	ccmp	x21, x0, #0x0, ne  // ne = any
    96b0:	b.hi	962c <Perl__inverse_folds@plt+0x3c2c>  // b.pmore
    96b4:	mov	x5, #0x0                   	// #0
    96b8:	mov	x4, #0x0                   	// #0
    96bc:	mov	x2, #0x0                   	// #0
    96c0:	sub	x1, x21, x22
    96c4:	mov	x0, x22
    96c8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    96cc:	mov	x1, x0
    96d0:	b	9660 <Perl__inverse_folds@plt+0x3c60>
    96d4:	str	x19, [x20]
    96d8:	mov	w0, #0x26                  	// #38
    96dc:	ldp	x21, x22, [sp, #32]
    96e0:	b	9550 <Perl__inverse_folds@plt+0x3b50>
    96e4:	str	x19, [x2]
    96e8:	mov	w0, #0x26                  	// #38
    96ec:	b	9550 <Perl__inverse_folds@plt+0x3b50>
    96f0:	mov	w0, #0x26                  	// #38
    96f4:	b	9550 <Perl__inverse_folds@plt+0x3b50>
    96f8:	mov	w0, #0x26                  	// #38
    96fc:	ldp	x21, x22, [sp, #32]
    9700:	b	9550 <Perl__inverse_folds@plt+0x3b50>
    9704:	stp	x29, x30, [sp, #-112]!
    9708:	mov	x29, sp
    970c:	stp	x19, x20, [sp, #16]
    9710:	stp	x21, x22, [sp, #32]
    9714:	stp	x23, x24, [sp, #48]
    9718:	stp	x25, x26, [sp, #64]
    971c:	stp	x27, x28, [sp, #80]
    9720:	mov	x21, x0
    9724:	mov	w25, w2
    9728:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    972c:	ldr	x0, [x0, #3920]
    9730:	ldr	x2, [x0]
    9734:	str	x2, [sp, #104]
    9738:	mov	x2, #0x0                   	// #0
    973c:	str	x4, [sp, #96]
    9740:	cbz	x3, 9834 <Perl__inverse_folds@plt+0x3e34>
    9744:	mov	x20, x3
    9748:	mov	x24, x5
    974c:	and	w22, w6, #0xff
    9750:	cbz	x4, 9858 <Perl__inverse_folds@plt+0x3e58>
    9754:	cbz	x5, 987c <Perl__inverse_folds@plt+0x3e7c>
    9758:	adrp	x23, 6c000 <boot_re@@Base+0xa41c>
    975c:	add	x23, x23, #0x330
    9760:	add	x23, x23, #0x420
    9764:	mov	w27, w25
    9768:	add	x26, sp, #0x60
    976c:	mov	w28, #0x0                   	// #0
    9770:	mov	w2, w1
    9774:	add	x0, x2, w1, uxtw #2
    9778:	add	x0, x23, x0, lsl #3
    977c:	sub	x0, x0, x2
    9780:	ldrb	w19, [x0, x27]
    9784:	cmp	w19, #0xa
    9788:	b.hi	98f4 <Perl__inverse_folds@plt+0x3ef4>  // b.pmore
    978c:	cmp	w19, #0x8
    9790:	b.hi	9a50 <Perl__inverse_folds@plt+0x4050>  // b.pmore
    9794:	cmp	w19, #0x3
    9798:	b.eq	9a08 <Perl__inverse_folds@plt+0x4008>  // b.none
    979c:	b.ls	98a8 <Perl__inverse_folds@plt+0x3ea8>  // b.plast
    97a0:	sub	w0, w19, #0x6
    97a4:	and	w0, w0, #0xff
    97a8:	cmp	w0, #0x2
    97ac:	b.hi	9c24 <Perl__inverse_folds@plt+0x4224>  // b.pmore
    97b0:	cmp	w25, #0x22
    97b4:	b.eq	9998 <Perl__inverse_folds@plt+0x3f98>  // b.none
    97b8:	add	x19, sp, #0x60
    97bc:	mov	w3, w22
    97c0:	mov	x2, x19
    97c4:	mov	x1, x20
    97c8:	mov	x0, x21
    97cc:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    97d0:	cmp	w0, #0x22
    97d4:	b.eq	97bc <Perl__inverse_folds@plt+0x3dbc>  // b.none
    97d8:	mov	w2, #0x1                   	// #1
    97dc:	cmp	w0, #0x25
    97e0:	b.eq	98bc <Perl__inverse_folds@plt+0x3ebc>  // b.none
    97e4:	adrp	x1, 6c000 <boot_re@@Base+0xa41c>
    97e8:	add	x1, x1, #0x330
    97ec:	add	x1, x1, w25, uxtw
    97f0:	ldrb	w1, [x1, #2382]
    97f4:	mov	w2, #0x0                   	// #0
    97f8:	cmp	w1, #0x8
    97fc:	b.eq	98bc <Perl__inverse_folds@plt+0x3ebc>  // b.none
    9800:	cmp	w0, #0x8
    9804:	b.eq	99bc <Perl__inverse_folds@plt+0x3fbc>  // b.none
    9808:	adrp	x1, 6c000 <boot_re@@Base+0xa41c>
    980c:	add	x1, x1, #0x330
    9810:	add	x1, x1, #0x420
    9814:	mov	w2, w0
    9818:	add	x0, x2, w0, uxtw #2
    981c:	add	x0, x1, x0, lsl #3
    9820:	sub	x0, x0, x2
    9824:	ldrb	w0, [x0, w25, uxtw]
    9828:	cmp	w0, #0x2
    982c:	cset	w2, ne  // ne = any
    9830:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9834:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9838:	add	x3, x3, #0x330
    983c:	add	x3, x3, #0x418
    9840:	mov	w2, #0x1206                	// #4614
    9844:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9848:	add	x1, x1, #0xcb0
    984c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9850:	add	x0, x0, #0x98
    9854:	bl	58e0 <__assert_fail@plt>
    9858:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    985c:	add	x3, x3, #0x330
    9860:	add	x3, x3, #0x418
    9864:	mov	w2, #0x1206                	// #4614
    9868:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    986c:	add	x1, x1, #0xcb0
    9870:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9874:	add	x0, x0, #0x90
    9878:	bl	58e0 <__assert_fail@plt>
    987c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9880:	add	x3, x3, #0x330
    9884:	add	x3, x3, #0x418
    9888:	mov	w2, #0x1206                	// #4614
    988c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9890:	add	x1, x1, #0xcb0
    9894:	adrp	x0, 66000 <boot_re@@Base+0x441c>
    9898:	add	x0, x0, #0x660
    989c:	bl	58e0 <__assert_fail@plt>
    98a0:	mov	w1, #0x0                   	// #0
    98a4:	b	9770 <Perl__inverse_folds@plt+0x3d70>
    98a8:	cmp	w19, #0x1
    98ac:	b.eq	9c64 <Perl__inverse_folds@plt+0x4264>  // b.none
    98b0:	and	w0, w19, #0xfffffffd
    98b4:	mov	w2, #0x0                   	// #0
    98b8:	cbnz	w0, 9c24 <Perl__inverse_folds@plt+0x4224>
    98bc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    98c0:	ldr	x0, [x0, #3920]
    98c4:	ldr	x1, [sp, #104]
    98c8:	ldr	x0, [x0]
    98cc:	eor	x0, x1, x0
    98d0:	cbnz	x0, 9c6c <Perl__inverse_folds@plt+0x426c>
    98d4:	mov	w0, w2
    98d8:	ldp	x19, x20, [sp, #16]
    98dc:	ldp	x21, x22, [sp, #32]
    98e0:	ldp	x23, x24, [sp, #48]
    98e4:	ldp	x25, x26, [sp, #64]
    98e8:	ldp	x27, x28, [sp, #80]
    98ec:	ldp	x29, x30, [sp], #112
    98f0:	ret
    98f4:	cmp	w19, #0x10
    98f8:	b.hi	993c <Perl__inverse_folds@plt+0x3f3c>  // b.pmore
    98fc:	cmp	w19, #0xe
    9900:	b.hi	9c18 <Perl__inverse_folds@plt+0x4218>  // b.pmore
    9904:	add	x23, sp, #0x60
    9908:	cmp	w19, #0xc
    990c:	b.ls	9b94 <Perl__inverse_folds@plt+0x4194>  // b.plast
    9910:	mov	w3, w22
    9914:	add	x2, sp, #0x60
    9918:	mov	x1, x20
    991c:	mov	x0, x21
    9920:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    9924:	mov	w2, #0x0                   	// #0
    9928:	cmp	w0, #0x10
    992c:	b.eq	98bc <Perl__inverse_folds@plt+0x3ebc>  // b.none
    9930:	cmp	w19, #0xe
    9934:	cset	w2, eq  // eq = none
    9938:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    993c:	sub	w0, w19, #0x20
    9940:	and	w0, w0, #0xff
    9944:	cmp	w0, #0x1
    9948:	b.hi	9c24 <Perl__inverse_folds@plt+0x4224>  // b.pmore
    994c:	sub	w0, w1, #0x6
    9950:	cmp	w0, #0x1
    9954:	b.ls	9bd0 <Perl__inverse_folds@plt+0x41d0>  // b.plast
    9958:	cmp	w1, #0x4
    995c:	ccmp	w1, #0x13, #0x4, ne  // ne = any
    9960:	add	x19, sp, #0x60
    9964:	b.ne	998c <Perl__inverse_folds@plt+0x3f8c>  // b.any
    9968:	mov	w3, w22
    996c:	mov	x2, x19
    9970:	mov	x1, x20
    9974:	mov	x0, x21
    9978:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    997c:	mov	w1, w0
    9980:	cmp	w0, #0x4
    9984:	ccmp	w0, #0x13, #0x4, ne  // ne = any
    9988:	b.eq	9968 <Perl__inverse_folds@plt+0x3f68>  // b.none
    998c:	cmp	w1, #0x1c
    9990:	cset	w2, ne  // ne = any
    9994:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9998:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    999c:	add	x3, x3, #0x330
    99a0:	add	x3, x3, #0x418
    99a4:	mov	w2, #0x121e                	// #4638
    99a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    99ac:	add	x1, x1, #0xcb0
    99b0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    99b4:	add	x0, x0, #0x230
    99b8:	bl	58e0 <__assert_fail@plt>
    99bc:	add	x19, sp, #0x60
    99c0:	mov	w3, w22
    99c4:	mov	x2, x19
    99c8:	mov	x1, x20
    99cc:	mov	x0, x21
    99d0:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    99d4:	cmp	w0, #0x8
    99d8:	b.eq	99c0 <Perl__inverse_folds@plt+0x3fc0>  // b.none
    99dc:	sub	w1, w0, #0x18
    99e0:	cmp	w1, #0x2
    99e4:	ccmp	w0, #0x5, #0x4, hi  // hi = pmore
    99e8:	b.eq	9a00 <Perl__inverse_folds@plt+0x4000>  // b.none
    99ec:	sub	w1, w0, #0x25
    99f0:	cmp	w0, #0x22
    99f4:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    99f8:	csel	w0, w0, wzr, hi  // hi = pmore
    99fc:	b	9808 <Perl__inverse_folds@plt+0x3e08>
    9a00:	mov	w0, #0x0                   	// #0
    9a04:	b	9808 <Perl__inverse_folds@plt+0x3e08>
    9a08:	mov	w3, w22
    9a0c:	mov	x2, x26
    9a10:	mov	x1, x20
    9a14:	mov	x0, x21
    9a18:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    9a1c:	mov	w1, w0
    9a20:	cmp	w0, #0x24
    9a24:	ccmp	w0, #0x8, #0x4, ne  // ne = any
    9a28:	b.eq	9a08 <Perl__inverse_folds@plt+0x4008>  // b.none
    9a2c:	sub	w0, w0, #0x18
    9a30:	cmp	w0, #0x2
    9a34:	ccmp	w1, #0x5, #0x4, hi  // hi = pmore
    9a38:	b.eq	98a0 <Perl__inverse_folds@plt+0x3ea0>  // b.none
    9a3c:	sub	w0, w1, #0x25
    9a40:	cmp	w1, #0x22
    9a44:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    9a48:	csel	w1, w1, w28, hi  // hi = pmore
    9a4c:	b	9770 <Perl__inverse_folds@plt+0x3d70>
    9a50:	ldr	x0, [sp, #96]
    9a54:	cmp	x24, x0
    9a58:	b.ls	9b24 <Perl__inverse_folds@plt+0x4124>  // b.plast
    9a5c:	cbz	w22, 9b60 <Perl__inverse_folds@plt+0x4160>
    9a60:	ldrb	w2, [x0]
    9a64:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    9a68:	ldr	x1, [x1, #4064]
    9a6c:	ldrb	w20, [x1, w2, sxtw]
    9a70:	add	x20, x0, x20
    9a74:	str	x20, [sp, #96]
    9a78:	cmp	x24, x20
    9a7c:	b.ls	9b24 <Perl__inverse_folds@plt+0x4124>  // b.plast
    9a80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9a84:	ldr	x0, [x0, #3992]
    9a88:	ldr	x22, [x0]
    9a8c:	sub	x24, x24, x20
    9a90:	mov	w1, #0x2c                  	// #44
    9a94:	mov	x0, x21
    9a98:	bl	52a0 <Perl_ckwarn_d@plt>
    9a9c:	ands	w0, w0, #0xff
    9aa0:	mov	w3, #0x9e                  	// #158
    9aa4:	csel	w3, w3, wzr, eq  // eq = none
    9aa8:	add	x8, x20, x24
    9aac:	cmp	x20, x8
    9ab0:	b.cs	9b40 <Perl__inverse_folds@plt+0x4140>  // b.hs, b.nlast
    9ab4:	mov	x7, x20
    9ab8:	mov	x1, #0x0                   	// #0
    9abc:	mov	x6, #0x0                   	// #0
    9ac0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9ac4:	ldr	x10, [x0, #3824]
    9ac8:	mov	w9, #0xff                  	// #255
    9acc:	mov	x0, x10
    9ad0:	ldrb	w5, [x7]
    9ad4:	ldrb	w2, [x10, w5, sxtw]
    9ad8:	and	x4, x2, #0xff
    9adc:	asr	w2, w9, w2
    9ae0:	and	w2, w2, w5
    9ae4:	sxtw	x2, w2
    9ae8:	bfi	x5, x1, #6, #58
    9aec:	cmp	x6, #0x0
    9af0:	csel	x1, x5, x2, ne  // ne = any
    9af4:	add	x2, x0, x4
    9af8:	add	x2, x2, x6
    9afc:	ldrb	w6, [x2, #256]
    9b00:	cbnz	x6, 9b30 <Perl__inverse_folds@plt+0x4130>
    9b04:	mov	x0, x22
    9b08:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9b0c:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
    9b10:	add	x1, x1, #0xe48
    9b14:	ldr	w0, [x1, x0, lsl #2]
    9b18:	mov	w2, #0x0                   	// #0
    9b1c:	cmp	w0, #0x1c
    9b20:	b.eq	98bc <Perl__inverse_folds@plt+0x3ebc>  // b.none
    9b24:	cmp	w19, #0xa
    9b28:	cset	w2, eq  // eq = none
    9b2c:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9b30:	add	x7, x7, #0x1
    9b34:	cmp	x6, #0x1
    9b38:	ccmp	x8, x7, #0x0, ne  // ne = any
    9b3c:	b.hi	9ad0 <Perl__inverse_folds@plt+0x40d0>  // b.pmore
    9b40:	mov	x5, #0x0                   	// #0
    9b44:	mov	x4, #0x0                   	// #0
    9b48:	mov	x2, #0x0                   	// #0
    9b4c:	mov	x1, x24
    9b50:	mov	x0, x20
    9b54:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    9b58:	mov	x1, x0
    9b5c:	b	9b04 <Perl__inverse_folds@plt+0x4104>
    9b60:	add	x1, x0, #0x1
    9b64:	str	x1, [sp, #96]
    9b68:	cmp	x24, x1
    9b6c:	b.ls	9b24 <Perl__inverse_folds@plt+0x4124>  // b.plast
    9b70:	ldrb	w1, [x0, #1]
    9b74:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9b78:	ldr	x0, [x0, #3992]
    9b7c:	ldr	x0, [x0]
    9b80:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9b84:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
    9b88:	add	x1, x1, #0xe48
    9b8c:	ldr	w0, [x1, x0, lsl #2]
    9b90:	b	9b18 <Perl__inverse_folds@plt+0x4118>
    9b94:	mov	w3, w22
    9b98:	mov	x2, x23
    9b9c:	mov	x1, x20
    9ba0:	mov	x0, x21
    9ba4:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    9ba8:	cmp	w0, #0x4
    9bac:	cset	w2, eq  // eq = none
    9bb0:	cmp	w0, #0x13
    9bb4:	csinc	w2, w2, wzr, ne  // ne = any
    9bb8:	cbnz	w2, 9b94 <Perl__inverse_folds@plt+0x4194>
    9bbc:	cmp	w0, #0x1c
    9bc0:	b.eq	98bc <Perl__inverse_folds@plt+0x3ebc>  // b.none
    9bc4:	cmp	w19, #0xc
    9bc8:	cset	w2, eq  // eq = none
    9bcc:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9bd0:	mov	w3, w22
    9bd4:	add	x2, sp, #0x60
    9bd8:	mov	x1, x20
    9bdc:	mov	x0, x21
    9be0:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    9be4:	mov	w1, w0
    9be8:	b	9958 <Perl__inverse_folds@plt+0x3f58>
    9bec:	add	w19, w19, #0x1
    9bf0:	mov	w3, w22
    9bf4:	mov	x2, x23
    9bf8:	mov	x1, x20
    9bfc:	mov	x0, x21
    9c00:	bl	94e4 <Perl__inverse_folds@plt+0x3ae4>
    9c04:	cmp	w0, #0x21
    9c08:	b.eq	9bec <Perl__inverse_folds@plt+0x41ec>  // b.none
    9c0c:	eor	w2, w19, #0x1
    9c10:	and	w2, w2, #0x1
    9c14:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9c18:	mov	w19, #0x1                   	// #1
    9c1c:	add	x23, sp, #0x60
    9c20:	b	9bf0 <Perl__inverse_folds@plt+0x41f0>
    9c24:	mov	w4, w19
    9c28:	mov	w3, w25
    9c2c:	mov	w2, w1
    9c30:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    9c34:	add	x1, x1, #0x248
    9c38:	mov	x0, x21
    9c3c:	bl	50e0 <Perl_re_printf@plt>
    9c40:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9c44:	add	x3, x3, #0x330
    9c48:	add	x3, x3, #0x418
    9c4c:	mov	w2, #0x12d3                	// #4819
    9c50:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9c54:	add	x1, x1, #0xcb0
    9c58:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    9c5c:	add	x0, x0, #0x110
    9c60:	bl	58e0 <__assert_fail@plt>
    9c64:	mov	w2, #0x1                   	// #1
    9c68:	b	98bc <Perl__inverse_folds@plt+0x3ebc>
    9c6c:	bl	5300 <__stack_chk_fail@plt>
    9c70:	stp	x29, x30, [sp, #-64]!
    9c74:	mov	x29, sp
    9c78:	cbz	x1, 9cec <Perl__inverse_folds@plt+0x42ec>
    9c7c:	stp	x19, x20, [sp, #16]
    9c80:	str	x23, [sp, #48]
    9c84:	mov	x23, x0
    9c88:	mov	x19, x1
    9c8c:	mov	x20, x2
    9c90:	and	w3, w3, #0xff
    9c94:	cbz	x2, 9d1c <Perl__inverse_folds@plt+0x431c>
    9c98:	ldr	x0, [x2]
    9c9c:	cmp	x0, x1
    9ca0:	b.cc	9e7c <Perl__inverse_folds@plt+0x447c>  // b.lo, b.ul, b.last
    9ca4:	cbnz	w3, 9d44 <Perl__inverse_folds@plt+0x4344>
    9ca8:	sub	x1, x0, #0x2
    9cac:	cmp	x19, x1
    9cb0:	b.hi	9e70 <Perl__inverse_folds@plt+0x4470>  // b.pmore
    9cb4:	sub	x1, x0, #0x1
    9cb8:	str	x1, [x2]
    9cbc:	ldurb	w1, [x0, #-2]
    9cc0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9cc4:	ldr	x0, [x0, #3720]
    9cc8:	ldr	x0, [x0]
    9ccc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9cd0:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
    9cd4:	add	x1, x1, #0x398
    9cd8:	ldr	w0, [x1, x0, lsl #2]
    9cdc:	ldp	x19, x20, [sp, #16]
    9ce0:	ldr	x23, [sp, #48]
    9ce4:	ldp	x29, x30, [sp], #64
    9ce8:	ret
    9cec:	stp	x19, x20, [sp, #16]
    9cf0:	stp	x21, x22, [sp, #32]
    9cf4:	str	x23, [sp, #48]
    9cf8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9cfc:	add	x3, x3, #0x330
    9d00:	add	x3, x3, #0xa18
    9d04:	mov	w2, #0x11c8                	// #4552
    9d08:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9d0c:	add	x1, x1, #0xcb0
    9d10:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9d14:	add	x0, x0, #0x98
    9d18:	bl	58e0 <__assert_fail@plt>
    9d1c:	stp	x21, x22, [sp, #32]
    9d20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9d24:	add	x3, x3, #0x330
    9d28:	add	x3, x3, #0xa18
    9d2c:	mov	w2, #0x11c8                	// #4552
    9d30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9d34:	add	x1, x1, #0xcb0
    9d38:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9d3c:	add	x0, x0, #0x90
    9d40:	bl	58e0 <__assert_fail@plt>
    9d44:	stp	x21, x22, [sp, #32]
    9d48:	mov	x2, x1
    9d4c:	mov	x1, #0xffffffffffffffff    	// #-1
    9d50:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    9d54:	mov	x21, x0
    9d58:	cbz	x0, 9e84 <Perl__inverse_folds@plt+0x4484>
    9d5c:	mov	x2, x19
    9d60:	mov	x1, #0xffffffffffffffff    	// #-1
    9d64:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
    9d68:	mov	x22, x0
    9d6c:	cbz	x0, 9e60 <Perl__inverse_folds@plt+0x4460>
    9d70:	cmp	x21, x0
    9d74:	b.ls	9e0c <Perl__inverse_folds@plt+0x440c>  // b.plast
    9d78:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9d7c:	ldr	x0, [x0, #3720]
    9d80:	ldr	x19, [x0]
    9d84:	mov	w1, #0x2c                  	// #44
    9d88:	mov	x0, x23
    9d8c:	bl	52a0 <Perl_ckwarn_d@plt>
    9d90:	ands	w0, w0, #0xff
    9d94:	mov	w3, #0x9e                  	// #158
    9d98:	csel	w3, w3, wzr, eq  // eq = none
    9d9c:	mov	x0, x22
    9da0:	mov	x1, #0x0                   	// #0
    9da4:	mov	x2, #0x0                   	// #0
    9da8:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
    9dac:	ldr	x9, [x4, #3824]
    9db0:	mov	w8, #0xff                  	// #255
    9db4:	mov	x6, x9
    9db8:	ldrb	w5, [x0]
    9dbc:	ldrb	w4, [x9, w5, sxtw]
    9dc0:	and	x7, x4, #0xff
    9dc4:	asr	w4, w8, w4
    9dc8:	and	w4, w4, w5
    9dcc:	sxtw	x4, w4
    9dd0:	bfi	x5, x1, #6, #58
    9dd4:	cmp	x2, #0x0
    9dd8:	csel	x1, x5, x4, ne  // ne = any
    9ddc:	add	x2, x6, x2
    9de0:	add	x2, x2, x7
    9de4:	ldrb	w2, [x2, #256]
    9de8:	cbnz	x2, 9e30 <Perl__inverse_folds@plt+0x4430>
    9dec:	mov	x0, x19
    9df0:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
    9df4:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
    9df8:	add	x1, x1, #0x398
    9dfc:	ldr	w0, [x1, x0, lsl #2]
    9e00:	str	x21, [x20]
    9e04:	ldp	x21, x22, [sp, #32]
    9e08:	b	9cdc <Perl__inverse_folds@plt+0x42dc>
    9e0c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9e10:	add	x3, x3, #0x330
    9e14:	add	x3, x3, #0xa18
    9e18:	mov	w2, #0x11d7                	// #4567
    9e1c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9e20:	add	x1, x1, #0xcb0
    9e24:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9e28:	add	x0, x0, #0xa0
    9e2c:	bl	58e0 <__assert_fail@plt>
    9e30:	add	x0, x0, #0x1
    9e34:	cmp	x2, #0x1
    9e38:	ccmp	x21, x0, #0x0, ne  // ne = any
    9e3c:	b.hi	9db8 <Perl__inverse_folds@plt+0x43b8>  // b.pmore
    9e40:	mov	x5, #0x0                   	// #0
    9e44:	mov	x4, #0x0                   	// #0
    9e48:	mov	x2, #0x0                   	// #0
    9e4c:	sub	x1, x21, x22
    9e50:	mov	x0, x22
    9e54:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    9e58:	mov	x1, x0
    9e5c:	b	9dec <Perl__inverse_folds@plt+0x43ec>
    9e60:	str	x19, [x20]
    9e64:	mov	w0, #0xf                   	// #15
    9e68:	ldp	x21, x22, [sp, #32]
    9e6c:	b	9cdc <Perl__inverse_folds@plt+0x42dc>
    9e70:	str	x19, [x2]
    9e74:	mov	w0, #0xf                   	// #15
    9e78:	b	9cdc <Perl__inverse_folds@plt+0x42dc>
    9e7c:	mov	w0, #0xf                   	// #15
    9e80:	b	9cdc <Perl__inverse_folds@plt+0x42dc>
    9e84:	mov	w0, #0xf                   	// #15
    9e88:	ldp	x21, x22, [sp, #32]
    9e8c:	b	9cdc <Perl__inverse_folds@plt+0x42dc>
    9e90:	stp	x29, x30, [sp, #-80]!
    9e94:	mov	x29, sp
    9e98:	stp	x19, x20, [sp, #16]
    9e9c:	mov	x20, x0
    9ea0:	mov	x19, x3
    9ea4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    9ea8:	ldr	x0, [x0, #3920]
    9eac:	ldr	x3, [x0]
    9eb0:	str	x3, [sp, #72]
    9eb4:	mov	x3, #0x0                   	// #0
    9eb8:	cbz	x19, 9f20 <Perl__inverse_folds@plt+0x4520>
    9ebc:	stp	x21, x22, [sp, #32]
    9ec0:	and	w21, w5, #0xff
    9ec4:	cbz	x4, 9f4c <Perl__inverse_folds@plt+0x454c>
    9ec8:	adrp	x0, 6c000 <boot_re@@Base+0xa41c>
    9ecc:	add	x0, x0, #0x330
    9ed0:	add	x0, x0, #0xa38
    9ed4:	ubfiz	x3, x1, #4, #32
    9ed8:	add	x3, x3, w1, uxtw
    9edc:	add	x0, x0, x3
    9ee0:	ldrb	w0, [x0, w2, uxtw]
    9ee4:	cmp	w0, #0x2
    9ee8:	b.eq	9ff8 <Perl__inverse_folds@plt+0x45f8>  // b.none
    9eec:	b.hi	9f74 <Perl__inverse_folds@plt+0x4574>  // b.pmore
    9ef0:	cmp	w0, #0x0
    9ef4:	cset	w0, ne  // ne = any
    9ef8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    9efc:	ldr	x1, [x1, #3920]
    9f00:	ldr	x2, [sp, #72]
    9f04:	ldr	x1, [x1]
    9f08:	eor	x1, x2, x1
    9f0c:	cbnz	x1, a078 <Perl__inverse_folds@plt+0x4678>
    9f10:	ldp	x21, x22, [sp, #32]
    9f14:	ldp	x19, x20, [sp, #16]
    9f18:	ldp	x29, x30, [sp], #80
    9f1c:	ret
    9f20:	stp	x21, x22, [sp, #32]
    9f24:	str	x23, [sp, #48]
    9f28:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9f2c:	add	x3, x3, #0x330
    9f30:	add	x3, x3, #0xa30
    9f34:	mov	w2, #0x1177                	// #4471
    9f38:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9f3c:	add	x1, x1, #0xcb0
    9f40:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9f44:	add	x0, x0, #0x98
    9f48:	bl	58e0 <__assert_fail@plt>
    9f4c:	str	x23, [sp, #48]
    9f50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9f54:	add	x3, x3, #0x330
    9f58:	add	x3, x3, #0xa30
    9f5c:	mov	w2, #0x1177                	// #4471
    9f60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9f64:	add	x1, x1, #0xcb0
    9f68:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    9f6c:	add	x0, x0, #0x90
    9f70:	bl	58e0 <__assert_fail@plt>
    9f74:	cmp	w0, #0x3
    9f78:	b.eq	a048 <Perl__inverse_folds@plt+0x4648>  // b.none
    9f7c:	cmp	w0, #0x4
    9f80:	b.ne	9fb4 <Perl__inverse_folds@plt+0x45b4>  // b.any
    9f84:	str	x4, [sp, #64]
    9f88:	add	x22, sp, #0x40
    9f8c:	mov	w3, w21
    9f90:	mov	x2, x22
    9f94:	mov	x1, x19
    9f98:	mov	x0, x20
    9f9c:	bl	9c70 <Perl__inverse_folds@plt+0x4270>
    9fa0:	cmp	w0, #0x3
    9fa4:	b.eq	9f8c <Perl__inverse_folds@plt+0x458c>  // b.none
    9fa8:	cmp	w0, #0xd
    9fac:	cset	w0, ne  // ne = any
    9fb0:	b	9ef8 <Perl__inverse_folds@plt+0x44f8>
    9fb4:	str	x23, [sp, #48]
    9fb8:	mov	w4, w0
    9fbc:	mov	w3, w2
    9fc0:	mov	w2, w1
    9fc4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    9fc8:	add	x1, x1, #0x278
    9fcc:	mov	x0, x20
    9fd0:	bl	50e0 <Perl_re_printf@plt>
    9fd4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    9fd8:	add	x3, x3, #0x330
    9fdc:	add	x3, x3, #0xa30
    9fe0:	mov	w2, #0x11bd                	// #4541
    9fe4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    9fe8:	add	x1, x1, #0xcb0
    9fec:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    9ff0:	add	x0, x0, #0x110
    9ff4:	bl	58e0 <__assert_fail@plt>
    9ff8:	str	x23, [sp, #48]
    9ffc:	str	x4, [sp, #64]
    a000:	mov	w22, #0x1                   	// #1
    a004:	add	x23, sp, #0x40
    a008:	b	a010 <Perl__inverse_folds@plt+0x4610>
    a00c:	add	w22, w22, #0x1
    a010:	mov	w3, w21
    a014:	mov	x2, x23
    a018:	mov	x1, x19
    a01c:	mov	x0, x20
    a020:	bl	9c70 <Perl__inverse_folds@plt+0x4270>
    a024:	cmp	w0, #0x9
    a028:	b.eq	a00c <Perl__inverse_folds@plt+0x460c>  // b.none
    a02c:	cmp	w22, #0x0
    a030:	and	w22, w22, #0x1
    a034:	cneg	w22, w22, lt  // lt = tstop
    a038:	cmp	w22, #0x1
    a03c:	cset	w0, ne  // ne = any
    a040:	ldr	x23, [sp, #48]
    a044:	b	9ef8 <Perl__inverse_folds@plt+0x44f8>
    a048:	str	x4, [sp, #64]
    a04c:	add	x22, sp, #0x40
    a050:	mov	w3, w21
    a054:	mov	x2, x22
    a058:	mov	x1, x19
    a05c:	mov	x0, x20
    a060:	bl	9c70 <Perl__inverse_folds@plt+0x4270>
    a064:	cmp	w0, #0x3
    a068:	b.eq	a050 <Perl__inverse_folds@plt+0x4650>  // b.none
    a06c:	cmp	w0, #0x10
    a070:	cset	w0, ne  // ne = any
    a074:	b	9ef8 <Perl__inverse_folds@plt+0x44f8>
    a078:	str	x23, [sp, #48]
    a07c:	bl	5300 <__stack_chk_fail@plt>
    a080:	stp	x29, x30, [sp, #-224]!
    a084:	mov	x29, sp
    a088:	stp	x19, x20, [sp, #16]
    a08c:	stp	x21, x22, [sp, #32]
    a090:	stp	x23, x24, [sp, #48]
    a094:	stp	x25, x26, [sp, #64]
    a098:	stp	x27, x28, [sp, #80]
    a09c:	mov	x22, x0
    a0a0:	mov	x20, x1
    a0a4:	str	x2, [sp, #104]
    a0a8:	str	x3, [sp, #120]
    a0ac:	mov	x23, x4
    a0b0:	str	x5, [sp, #128]
    a0b4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a0b8:	ldr	x0, [x0, #3920]
    a0bc:	ldr	x1, [x0]
    a0c0:	str	x1, [sp, #216]
    a0c4:	mov	x1, #0x0                   	// #0
    a0c8:	ldrb	w28, [x6, #90]
    a0cc:	ldrb	w27, [x6, #89]
    a0d0:	add	x19, x20, #0x4
    a0d4:	stp	xzr, xzr, [sp, #176]
    a0d8:	stp	xzr, xzr, [sp, #192]
    a0dc:	str	xzr, [sp, #208]
    a0e0:	ldrb	w1, [x20, #1]
    a0e4:	sub	w0, w1, #0x23
    a0e8:	and	w0, w0, #0xff
    a0ec:	cmp	w0, #0x1
    a0f0:	cset	w21, ls  // ls = plast
    a0f4:	cmp	w1, #0x2c
    a0f8:	csinc	w21, w21, wzr, ne  // ne = any
    a0fc:	cbz	w21, a2cc <Perl__inverse_folds@plt+0x48cc>
    a100:	cbnz	w27, a16c <Perl__inverse_folds@plt+0x476c>
    a104:	b.eq	a148 <Perl__inverse_folds@plt+0x4748>  // b.none
    a108:	ldrb	w24, [x20, #4]
    a10c:	mov	x25, x24
    a110:	cbz	w28, a2a4 <Perl__inverse_folds@plt+0x48a4>
    a114:	mov	x4, #0x0                   	// #0
    a118:	mov	x3, #0x0                   	// #0
    a11c:	mov	x2, x24
    a120:	ldr	x1, [sp, #120]
    a124:	mov	x0, x22
    a128:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
    a12c:	mov	x4, #0x0                   	// #0
    a130:	mov	x3, #0x0                   	// #0
    a134:	mov	x2, x25
    a138:	ldr	x1, [sp, #128]
    a13c:	mov	x0, x22
    a140:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
    a144:	b	a1c0 <Perl__inverse_folds@plt+0x47c0>
    a148:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    a14c:	add	x3, x3, #0x330
    a150:	add	x3, x3, #0xb60
    a154:	mov	w2, #0x108c                	// #4236
    a158:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    a15c:	add	x1, x1, #0xcb0
    a160:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    a164:	add	x0, x0, #0x2a8
    a168:	bl	58e0 <__assert_fail@plt>
    a16c:	cbz	w28, a23c <Perl__inverse_folds@plt+0x483c>
    a170:	ldr	x0, [sp, #120]
    a174:	cbz	x0, a1f4 <Perl__inverse_folds@plt+0x47f4>
    a178:	ldrb	w1, [x20, #4]
    a17c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a180:	ldr	x0, [x0, #4064]
    a184:	ldrb	w2, [x0, w1, sxtw]
    a188:	mov	x1, x19
    a18c:	ldr	x0, [sp, #120]
    a190:	bl	4e60 <memcpy@plt>
    a194:	ldr	x0, [sp, #128]
    a198:	cbz	x0, a218 <Perl__inverse_folds@plt+0x4818>
    a19c:	ldrb	w1, [x20, #4]
    a1a0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a1a4:	ldr	x0, [x0, #4064]
    a1a8:	ldrb	w2, [x0, w1, sxtw]
    a1ac:	mov	x1, x19
    a1b0:	ldr	x0, [sp, #128]
    a1b4:	bl	4e60 <memcpy@plt>
    a1b8:	mov	x24, #0xfffffffffffffc19    	// #-999
    a1bc:	mov	x25, #0xfffffffffffffc1a    	// #-998
    a1c0:	ldr	x0, [sp, #120]
    a1c4:	ldrb	w0, [x0]
    a1c8:	tst	x0, #0x80
    a1cc:	mov	w1, #0xfffffc19            	// #-999
    a1d0:	csel	w0, w0, w1, eq  // eq = none
    a1d4:	ldr	x1, [sp, #104]
    a1d8:	str	w0, [x1]
    a1dc:	ldr	x0, [sp, #128]
    a1e0:	ldrb	w0, [x0]
    a1e4:	tbnz	w0, #7, b64c <Perl__inverse_folds@plt+0x5c4c>
    a1e8:	str	w0, [x23]
    a1ec:	mov	w21, #0x1                   	// #1
    a1f0:	b	a368 <Perl__inverse_folds@plt+0x4968>
    a1f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    a1f8:	add	x3, x3, #0x330
    a1fc:	add	x3, x3, #0xb60
    a200:	mov	w2, #0x1090                	// #4240
    a204:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    a208:	add	x1, x1, #0xcb0
    a20c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    a210:	add	x0, x0, #0x2c8
    a214:	bl	58e0 <__assert_fail@plt>
    a218:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    a21c:	add	x3, x3, #0x330
    a220:	add	x3, x3, #0xb60
    a224:	mov	w2, #0x1091                	// #4241
    a228:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    a22c:	add	x1, x1, #0xcb0
    a230:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    a234:	add	x0, x0, #0x2e0
    a238:	bl	58e0 <__assert_fail@plt>
    a23c:	mov	w21, w28
    a240:	b.eq	a368 <Perl__inverse_folds@plt+0x4968>  // b.none
    a244:	ldrb	w24, [x20, #4]
    a248:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a24c:	ldr	x0, [x0, #4064]
    a250:	ldrb	w0, [x0, w24, sxtw]
    a254:	and	x2, x0, #0xff
    a258:	add	x19, x19, w0, uxtb
    a25c:	cmp	x2, #0x1
    a260:	b.eq	b67c <Perl__inverse_folds@plt+0x5c7c>  // b.none
    a264:	sub	w0, w0, #0x2
    a268:	mov	w1, #0x1f                  	// #31
    a26c:	asr	w0, w1, w0
    a270:	cmp	x2, #0x7
    a274:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
    a278:	and	w24, w24, w0
    a27c:	sxtw	x25, w24
    a280:	add	x20, x20, #0x5
    a284:	cmp	x19, x20
    a288:	b.ls	b694 <Perl__inverse_folds@plt+0x5c94>  // b.plast
    a28c:	ldrb	w0, [x20], #1
    a290:	bfi	x0, x25, #6, #58
    a294:	mov	x25, x0
    a298:	cmp	x19, x20
    a29c:	b.ne	a28c <Perl__inverse_folds@plt+0x488c>  // b.any
    a2a0:	mov	x24, x0
    a2a4:	cmp	x24, #0xff
    a2a8:	b.ls	b65c <Perl__inverse_folds@plt+0x5c5c>  // b.plast
    a2ac:	mov	w21, #0x0                   	// #0
    a2b0:	cmp	x25, #0xff
    a2b4:	b.hi	a368 <Perl__inverse_folds@plt+0x4968>  // b.pmore
    a2b8:	str	w25, [x23]
    a2bc:	ldr	x0, [sp, #104]
    a2c0:	str	w25, [x0]
    a2c4:	mov	w21, #0x1                   	// #1
    a2c8:	b	a368 <Perl__inverse_folds@plt+0x4968>
    a2cc:	ldrb	w0, [x20]
    a2d0:	add	x26, x19, w0, uxtb
    a2d4:	cmp	w1, #0x26
    a2d8:	b.eq	a3a0 <Perl__inverse_folds@plt+0x49a0>  // b.none
    a2dc:	cbnz	w27, a5fc <Perl__inverse_folds@plt+0x4bfc>
    a2e0:	cmp	w0, #0x2
    a2e4:	b.ls	b4d8 <Perl__inverse_folds@plt+0x5ad8>  // b.plast
    a2e8:	ldrb	w0, [x20, #4]
    a2ec:	and	w0, w0, #0xffffffdf
    a2f0:	and	w0, w0, #0xff
    a2f4:	cmp	w0, #0x46
    a2f8:	b.eq	b490 <Perl__inverse_folds@plt+0x5a90>  // b.none
    a2fc:	cmp	w0, #0x53
    a300:	b.eq	b4b8 <Perl__inverse_folds@plt+0x5ab8>  // b.none
    a304:	ldrb	w24, [x19]
    a308:	ldrb	w0, [x22, #1182]
    a30c:	cbnz	w0, b6b8 <Perl__inverse_folds@plt+0x5cb8>
    a310:	cbz	w28, b57c <Perl__inverse_folds@plt+0x5b7c>
    a314:	and	x1, x24, #0xff
    a318:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a31c:	ldr	x0, [x0, #3880]
    a320:	ldr	w0, [x0, x1, lsl #2]
    a324:	tbz	w0, #18, b57c <Perl__inverse_folds@plt+0x5b7c>
    a328:	ldrb	w0, [x20, #1]
    a32c:	cmp	w0, #0x26
    a330:	b.eq	b570 <Perl__inverse_folds@plt+0x5b70>  // b.none
    a334:	cmp	w0, #0x28
    a338:	mov	w1, #0x2b                  	// #43
    a33c:	ccmp	w0, w1, #0x4, ne  // ne = any
    a340:	mov	x0, #0x7f                  	// #127
    a344:	ccmp	x24, x0, #0x2, eq  // eq = none
    a348:	b.ls	b57c <Perl__inverse_folds@plt+0x5b7c>  // b.plast
    a34c:	cmp	x24, #0xff
    a350:	b.eq	b644 <Perl__inverse_folds@plt+0x5c44>  // b.none
    a354:	mov	w0, #0xfffffc18            	// #-1000
    a358:	ldr	x1, [sp, #104]
    a35c:	str	w0, [x1]
    a360:	str	w0, [x23]
    a364:	mov	w21, #0x1                   	// #1
    a368:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a36c:	ldr	x0, [x0, #3920]
    a370:	ldr	x1, [sp, #216]
    a374:	ldr	x0, [x0]
    a378:	eor	x0, x1, x0
    a37c:	cbnz	x0, b6f8 <Perl__inverse_folds@plt+0x5cf8>
    a380:	mov	w0, w21
    a384:	ldp	x19, x20, [sp, #16]
    a388:	ldp	x21, x22, [sp, #32]
    a38c:	ldp	x23, x24, [sp, #48]
    a390:	ldp	x25, x26, [sp, #64]
    a394:	ldp	x27, x28, [sp, #80]
    a398:	ldp	x29, x30, [sp], #224
    a39c:	ret
    a3a0:	cbnz	w27, a3cc <Perl__inverse_folds@plt+0x49cc>
    a3a4:	ldrb	w1, [x22, #1180]
    a3a8:	cbz	w1, a2e0 <Perl__inverse_folds@plt+0x48e0>
    a3ac:	ldrb	w1, [x20, #4]
    a3b0:	cmp	w1, #0xdf
    a3b4:	b.ne	a2e0 <Perl__inverse_folds@plt+0x48e0>  // b.any
    a3b8:	mov	w0, #0x73                  	// #115
    a3bc:	strb	w0, [sp, #177]
    a3c0:	strb	w0, [sp, #176]
    a3c4:	add	x19, sp, #0xb0
    a3c8:	b	b4dc <Perl__inverse_folds@plt+0x5adc>
    a3cc:	ldrb	w0, [x20, #4]
    a3d0:	tbnz	w0, #7, a40c <Perl__inverse_folds@plt+0x4a0c>
    a3d4:	mov	w25, #0x0                   	// #0
    a3d8:	add	x0, sp, #0xb0
    a3dc:	str	x0, [sp, #112]
    a3e0:	cmp	x19, x26
    a3e4:	b.cs	a670 <Perl__inverse_folds@plt+0x4c70>  // b.hs, b.nlast
    a3e8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    a3ec:	add	x0, x0, #0x20
    a3f0:	str	x0, [sp, #136]
    a3f4:	add	x0, sp, #0xa8
    a3f8:	str	x0, [sp, #144]
    a3fc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a400:	ldr	x0, [x0, #4064]
    a404:	str	x0, [sp, #152]
    a408:	b	a584 <Perl__inverse_folds@plt+0x4b84>
    a40c:	sub	w1, w0, #0xc2
    a410:	cmp	w1, #0x1
    a414:	b.ls	a3d4 <Perl__inverse_folds@plt+0x49d4>  // b.plast
    a418:	cmp	w0, #0xc4
    a41c:	b.eq	a460 <Perl__inverse_folds@plt+0x4a60>  // b.none
    a420:	cmp	w0, #0xc5
    a424:	b.eq	a47c <Perl__inverse_folds@plt+0x4a7c>  // b.none
    a428:	cmp	w0, #0xc7
    a42c:	b.eq	a49c <Perl__inverse_folds@plt+0x4a9c>  // b.none
    a430:	cmp	w0, #0xca
    a434:	b.eq	a4ac <Perl__inverse_folds@plt+0x4aac>  // b.none
    a438:	cmp	w0, #0xce
    a43c:	b.eq	a4bc <Perl__inverse_folds@plt+0x4abc>  // b.none
    a440:	cmp	w0, #0xe1
    a444:	b.eq	a4d4 <Perl__inverse_folds@plt+0x4ad4>  // b.none
    a448:	cmp	w0, #0xe2
    a44c:	b.eq	a500 <Perl__inverse_folds@plt+0x4b00>  // b.none
    a450:	cmp	w0, #0xef
    a454:	b.eq	a528 <Perl__inverse_folds@plt+0x4b28>  // b.none
    a458:	mov	w0, #0x0                   	// #0
    a45c:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a460:	ldrb	w0, [x20, #5]
    a464:	sub	w0, w0, #0xb0
    a468:	cmp	w0, #0x1
    a46c:	cset	w0, ls  // ls = plast
    a470:	cbnz	w0, a3d4 <Perl__inverse_folds@plt+0x49d4>
    a474:	str	x26, [sp, #112]
    a478:	b	a5f8 <Perl__inverse_folds@plt+0x4bf8>
    a47c:	ldrb	w1, [x20, #5]
    a480:	cmp	w1, #0x89
    a484:	mov	w0, #0xb8                  	// #184
    a488:	ccmp	w1, w0, #0x4, ne  // ne = any
    a48c:	cset	w0, eq  // eq = none
    a490:	cmp	w1, #0xbf
    a494:	csinc	w0, w0, wzr, ne  // ne = any
    a498:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a49c:	ldrb	w0, [x20, #5]
    a4a0:	cmp	w0, #0xb0
    a4a4:	cset	w0, eq  // eq = none
    a4a8:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a4ac:	ldrb	w0, [x20, #5]
    a4b0:	cmp	w0, #0xbc
    a4b4:	cset	w0, eq  // eq = none
    a4b8:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a4bc:	ldrb	w0, [x20, #5]
    a4c0:	and	w0, w0, #0xffffffdf
    a4c4:	and	w0, w0, #0xff
    a4c8:	cmp	w0, #0x9c
    a4cc:	cset	w0, eq  // eq = none
    a4d0:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a4d4:	ldrb	w0, [x20, #5]
    a4d8:	cmp	w0, #0xba
    a4dc:	b.eq	a4e8 <Perl__inverse_folds@plt+0x4ae8>  // b.none
    a4e0:	mov	w0, #0x0                   	// #0
    a4e4:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a4e8:	ldrb	w0, [x20, #6]
    a4ec:	sub	w1, w0, #0x96
    a4f0:	cmp	w0, #0x9e
    a4f4:	ccmp	w1, #0x4, #0x0, ne  // ne = any
    a4f8:	cset	w0, ls  // ls = plast
    a4fc:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a500:	ldrb	w0, [x20, #5]
    a504:	cmp	w0, #0x84
    a508:	b.eq	a514 <Perl__inverse_folds@plt+0x4b14>  // b.none
    a50c:	mov	w0, #0x0                   	// #0
    a510:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a514:	ldrb	w0, [x20, #6]
    a518:	sub	w0, w0, #0xaa
    a51c:	cmp	w0, #0x1
    a520:	cset	w0, ls  // ls = plast
    a524:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a528:	ldrb	w0, [x20, #5]
    a52c:	cmp	w0, #0xac
    a530:	b.eq	a53c <Perl__inverse_folds@plt+0x4b3c>  // b.none
    a534:	mov	w0, #0x0                   	// #0
    a538:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a53c:	ldrb	w0, [x20, #6]
    a540:	sub	w0, w0, #0x80
    a544:	cmp	w0, #0x6
    a548:	cset	w0, ls  // ls = plast
    a54c:	b	a470 <Perl__inverse_folds@plt+0x4a70>
    a550:	bl	5040 <__ctype_tolower_loc@plt>
    a554:	and	x24, x24, #0xff
    a558:	ldr	x0, [x0]
    a55c:	ldr	w1, [x0, x24, lsl #2]
    a560:	and	w1, w1, #0xff
    a564:	ldr	x0, [sp, #112]
    a568:	strb	w1, [x0], #1
    a56c:	add	x19, x19, #0x1
    a570:	str	x0, [sp, #112]
    a574:	add	w25, w25, #0x1
    a578:	cmp	w25, #0x2
    a57c:	ccmp	x19, x26, #0x2, le
    a580:	b.cs	a5f4 <Perl__inverse_folds@plt+0x4bf4>  // b.hs, b.nlast
    a584:	ldrb	w24, [x19]
    a588:	tbnz	w24, #7, a5ac <Perl__inverse_folds@plt+0x4bac>
    a58c:	ldrb	w0, [x22, #1182]
    a590:	cbnz	w0, a5ac <Perl__inverse_folds@plt+0x4bac>
    a594:	ldrb	w0, [x22, #1180]
    a598:	cbz	w0, a550 <Perl__inverse_folds@plt+0x4b50>
    a59c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a5a0:	ldr	x0, [x0, #4048]
    a5a4:	ldrb	w1, [x0, w24, sxtw]
    a5a8:	b	a564 <Perl__inverse_folds@plt+0x4b64>
    a5ac:	mov	w7, #0x0                   	// #0
    a5b0:	ldr	x6, [sp, #136]
    a5b4:	mov	w5, #0x3                   	// #3
    a5b8:	ldr	x4, [sp, #144]
    a5bc:	ldr	x24, [sp, #112]
    a5c0:	mov	x3, x24
    a5c4:	mov	x2, x26
    a5c8:	mov	x1, x19
    a5cc:	mov	x0, x22
    a5d0:	bl	5330 <Perl__to_utf8_fold_flags@plt>
    a5d4:	ldr	x0, [sp, #168]
    a5d8:	add	x0, x24, x0
    a5dc:	str	x0, [sp, #112]
    a5e0:	ldrb	w0, [x19]
    a5e4:	ldr	x1, [sp, #152]
    a5e8:	ldrb	w0, [x1, w0, sxtw]
    a5ec:	add	x19, x19, x0
    a5f0:	b	a574 <Perl__inverse_folds@plt+0x4b74>
    a5f4:	add	x19, sp, #0xb0
    a5f8:	ldr	x26, [sp, #112]
    a5fc:	sub	x26, x26, x19
    a600:	cmp	x26, #0x5
    a604:	b.le	ab64 <Perl__inverse_folds@plt+0x5164>
    a608:	ldrb	w0, [x19]
    a60c:	cmp	w0, #0x61
    a610:	b.eq	a678 <Perl__inverse_folds@plt+0x4c78>  // b.none
    a614:	cmp	w0, #0x66
    a618:	b.eq	a754 <Perl__inverse_folds@plt+0x4d54>  // b.none
    a61c:	cmp	w0, #0x68
    a620:	b.eq	a774 <Perl__inverse_folds@plt+0x4d74>  // b.none
    a624:	cmp	w0, #0x69
    a628:	b.eq	a790 <Perl__inverse_folds@plt+0x4d90>  // b.none
    a62c:	cmp	w0, #0x6a
    a630:	b.eq	a7ac <Perl__inverse_folds@plt+0x4dac>  // b.none
    a634:	cmp	w0, #0x73
    a638:	b.eq	a7c8 <Perl__inverse_folds@plt+0x4dc8>  // b.none
    a63c:	cmp	w0, #0x74
    a640:	b.eq	a7dc <Perl__inverse_folds@plt+0x4ddc>  // b.none
    a644:	sub	w1, w0, #0x77
    a648:	and	w1, w1, #0xfffffffd
    a64c:	tst	w1, #0xff
    a650:	b.ne	a7f8 <Perl__inverse_folds@plt+0x4df8>  // b.any
    a654:	ldrb	w0, [x19, #1]
    a658:	cmp	w0, #0xcc
    a65c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a660:	ldrb	w0, [x19, #2]
    a664:	cmp	w0, #0x8a
    a668:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a66c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a670:	add	x19, sp, #0xb0
    a674:	b	a684 <Perl__inverse_folds@plt+0x4c84>
    a678:	ldrb	w0, [x19, #1]
    a67c:	cmp	w0, #0xca
    a680:	b.eq	a744 <Perl__inverse_folds@plt+0x4d44>  // b.none
    a684:	ldrb	w24, [x19]
    a688:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    a68c:	ldr	x0, [x0, #4064]
    a690:	ldrb	w0, [x0, w24, sxtw]
    a694:	and	x3, x0, #0xff
    a698:	add	x1, x19, w0, uxtb
    a69c:	cmp	x3, #0x1
    a6a0:	b.eq	b6a4 <Perl__inverse_folds@plt+0x5ca4>  // b.none
    a6a4:	sub	w0, w0, #0x2
    a6a8:	mov	w2, #0x1f                  	// #31
    a6ac:	asr	w0, w2, w0
    a6b0:	cmp	x3, #0x7
    a6b4:	csel	w0, w0, wzr, cc  // cc = lo, ul, last
    a6b8:	and	w24, w24, w0
    a6bc:	sxtw	x24, w24
    a6c0:	add	x19, x19, #0x1
    a6c4:	cmp	x1, x19
    a6c8:	b.ls	a308 <Perl__inverse_folds@plt+0x4908>  // b.plast
    a6cc:	ldrb	w0, [x19], #1
    a6d0:	bfi	x0, x24, #6, #58
    a6d4:	mov	x24, x0
    a6d8:	cmp	x1, x19
    a6dc:	b.ne	a6cc <Perl__inverse_folds@plt+0x4ccc>  // b.any
    a6e0:	ldrb	w0, [x22, #1182]
    a6e4:	cbnz	w0, b540 <Perl__inverse_folds@plt+0x5b40>
    a6e8:	cmp	x24, #0xff
    a6ec:	b.ls	a310 <Perl__inverse_folds@plt+0x4910>  // b.plast
    a6f0:	add	x3, sp, #0xa8
    a6f4:	add	x2, sp, #0xa4
    a6f8:	mov	x1, x24
    a6fc:	mov	x0, x22
    a700:	bl	5a00 <Perl__inverse_folds@plt>
    a704:	cbz	x0, b6ac <Perl__inverse_folds@plt+0x5cac>
    a708:	cmp	x0, #0x1
    a70c:	b.ne	a354 <Perl__inverse_folds@plt+0x4954>  // b.any
    a710:	ldr	w25, [sp, #164]
    a714:	cmp	x25, #0xff
    a718:	b.hi	b6b0 <Perl__inverse_folds@plt+0x5cb0>  // b.pmore
    a71c:	ldrb	w0, [x20, #1]
    a720:	cmp	w0, #0x26
    a724:	b.eq	b560 <Perl__inverse_folds@plt+0x5b60>  // b.none
    a728:	cmp	w0, #0x28
    a72c:	mov	w1, #0x2b                  	// #43
    a730:	ccmp	w0, w1, #0x4, ne  // ne = any
    a734:	b.ne	b6b0 <Perl__inverse_folds@plt+0x5cb0>  // b.any
    a738:	cmp	x25, #0x7f
    a73c:	csel	x25, x25, x24, hi  // hi = pmore
    a740:	b	b6b0 <Perl__inverse_folds@plt+0x5cb0>
    a744:	ldrb	w0, [x19, #2]
    a748:	cmp	w0, #0xbe
    a74c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a750:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a754:	ldrb	w0, [x19, #1]
    a758:	cmp	w0, #0x66
    a75c:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    a760:	cmp	w0, #0x69
    a764:	mov	w1, #0x6c                  	// #108
    a768:	ccmp	w0, w1, #0x4, ne  // ne = any
    a76c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a770:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a774:	ldrb	w0, [x19, #1]
    a778:	cmp	w0, #0xcc
    a77c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a780:	ldrb	w0, [x19, #2]
    a784:	cmp	w0, #0xb1
    a788:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a78c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a790:	ldrb	w0, [x19, #1]
    a794:	cmp	w0, #0xcc
    a798:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a79c:	ldrb	w0, [x19, #2]
    a7a0:	cmp	w0, #0x87
    a7a4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a7a8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a7ac:	ldrb	w0, [x19, #1]
    a7b0:	cmp	w0, #0xcc
    a7b4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a7b8:	ldrb	w0, [x19, #2]
    a7bc:	cmp	w0, #0x8c
    a7c0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a7c4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a7c8:	ldrb	w0, [x19, #1]
    a7cc:	sub	w0, w0, #0x73
    a7d0:	cmp	w0, #0x1
    a7d4:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    a7d8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a7dc:	ldrb	w0, [x19, #1]
    a7e0:	cmp	w0, #0xcc
    a7e4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a7e8:	ldrb	w0, [x19, #2]
    a7ec:	cmp	w0, #0x88
    a7f0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a7f4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a7f8:	cmp	w0, #0xc5
    a7fc:	b.eq	a880 <Perl__inverse_folds@plt+0x4e80>  // b.none
    a800:	cmp	w0, #0xca
    a804:	b.eq	a8a8 <Perl__inverse_folds@plt+0x4ea8>  // b.none
    a808:	cmp	w0, #0xce
    a80c:	b.eq	a8c4 <Perl__inverse_folds@plt+0x4ec4>  // b.none
    a810:	cmp	w0, #0xcf
    a814:	b.eq	a9a8 <Perl__inverse_folds@plt+0x4fa8>  // b.none
    a818:	cmp	w0, #0xd5
    a81c:	b.eq	aaac <Perl__inverse_folds@plt+0x50ac>  // b.none
    a820:	cmp	w0, #0xe1
    a824:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a828:	ldrb	w0, [x19, #1]
    a82c:	cmp	w0, #0xbc
    a830:	b.eq	ab34 <Perl__inverse_folds@plt+0x5134>  // b.none
    a834:	cmp	w0, #0xbd
    a838:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a83c:	ldrb	w0, [x19, #2]
    a840:	and	w1, w0, #0xf8
    a844:	cmp	w1, #0xa0
    a848:	b.eq	a864 <Perl__inverse_folds@plt+0x4e64>  // b.none
    a84c:	and	w1, w0, #0xfffffffb
    a850:	and	w1, w1, #0xff
    a854:	cmp	w1, #0xb0
    a858:	mov	w1, #0xbc                  	// #188
    a85c:	ccmp	w0, w1, #0x4, ne  // ne = any
    a860:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a864:	ldrb	w0, [x19, #3]
    a868:	cmp	w0, #0xce
    a86c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a870:	ldrb	w0, [x19, #4]
    a874:	cmp	w0, #0xb9
    a878:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a87c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a880:	ldrb	w0, [x19, #1]
    a884:	cmp	w0, #0xbf
    a888:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a88c:	ldrb	w0, [x19, #2]
    a890:	cmp	w0, #0xc5
    a894:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a898:	ldrb	w0, [x19, #3]
    a89c:	cmp	w0, #0xbf
    a8a0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a8a4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a8a8:	ldrb	w0, [x19, #1]
    a8ac:	cmp	w0, #0xbc
    a8b0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a8b4:	ldrb	w0, [x19, #2]
    a8b8:	cmp	w0, #0x6e
    a8bc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a8c0:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a8c4:	ldrb	w0, [x19, #1]
    a8c8:	and	w1, w0, #0xfffffffd
    a8cc:	and	w1, w1, #0xff
    a8d0:	cmp	w1, #0xac
    a8d4:	b.eq	a90c <Perl__inverse_folds@plt+0x4f0c>  // b.none
    a8d8:	cmp	w0, #0xb1
    a8dc:	mov	w1, #0xb7                  	// #183
    a8e0:	ccmp	w0, w1, #0x4, ne  // ne = any
    a8e4:	b.ne	a938 <Perl__inverse_folds@plt+0x4f38>  // b.any
    a8e8:	ldrb	w0, [x19, #2]
    a8ec:	cmp	w0, #0xcd
    a8f0:	b.eq	a928 <Perl__inverse_folds@plt+0x4f28>  // b.none
    a8f4:	cmp	w0, #0xce
    a8f8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a8fc:	ldrb	w0, [x19, #3]
    a900:	cmp	w0, #0xb9
    a904:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a908:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a90c:	ldrb	w0, [x19, #2]
    a910:	cmp	w0, #0xce
    a914:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a918:	ldrb	w0, [x19, #3]
    a91c:	cmp	w0, #0xb9
    a920:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a924:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a928:	ldrb	w0, [x19, #3]
    a92c:	cmp	w0, #0x82
    a930:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a934:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a938:	cmp	w0, #0xb9
    a93c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a940:	ldrb	w0, [x19, #2]
    a944:	cmp	w0, #0xcc
    a948:	b.eq	a964 <Perl__inverse_folds@plt+0x4f64>  // b.none
    a94c:	cmp	w0, #0xcd
    a950:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a954:	ldrb	w0, [x19, #3]
    a958:	cmp	w0, #0x82
    a95c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a960:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a964:	ldrb	w0, [x19, #3]
    a968:	cmp	w0, #0x88
    a96c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a970:	ldrb	w0, [x19, #4]
    a974:	cmp	w0, #0xcc
    a978:	b.eq	a994 <Perl__inverse_folds@plt+0x4f94>  // b.none
    a97c:	cmp	w0, #0xcd
    a980:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a984:	ldrb	w0, [x19, #5]
    a988:	cmp	w0, #0x82
    a98c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a990:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a994:	ldrb	w0, [x19, #5]
    a998:	sub	w0, w0, #0x80
    a99c:	cmp	w0, #0x1
    a9a0:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    a9a4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a9a8:	ldrb	w0, [x19, #1]
    a9ac:	cmp	w0, #0x81
    a9b0:	b.eq	a9e8 <Perl__inverse_folds@plt+0x4fe8>  // b.none
    a9b4:	cmp	w0, #0x85
    a9b8:	b.eq	aa04 <Perl__inverse_folds@plt+0x5004>  // b.none
    a9bc:	cmp	w0, #0x89
    a9c0:	b.eq	aa78 <Perl__inverse_folds@plt+0x5078>  // b.none
    a9c4:	cmp	w0, #0x8e
    a9c8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a9cc:	ldrb	w0, [x19, #2]
    a9d0:	cmp	w0, #0xce
    a9d4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a9d8:	ldrb	w0, [x19, #3]
    a9dc:	cmp	w0, #0xb9
    a9e0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a9e4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    a9e8:	ldrb	w0, [x19, #2]
    a9ec:	cmp	w0, #0xcc
    a9f0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    a9f4:	ldrb	w0, [x19, #3]
    a9f8:	cmp	w0, #0x93
    a9fc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa00:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa04:	ldrb	w0, [x19, #2]
    aa08:	cmp	w0, #0xcc
    aa0c:	b.eq	aa28 <Perl__inverse_folds@plt+0x5028>  // b.none
    aa10:	cmp	w0, #0xcd
    aa14:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa18:	ldrb	w0, [x19, #3]
    aa1c:	cmp	w0, #0x82
    aa20:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa24:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa28:	ldrb	w0, [x19, #3]
    aa2c:	cmp	w0, #0x88
    aa30:	b.eq	aa40 <Perl__inverse_folds@plt+0x5040>  // b.none
    aa34:	cmp	w0, #0x93
    aa38:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa3c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa40:	ldrb	w0, [x19, #4]
    aa44:	cmp	w0, #0xcc
    aa48:	b.eq	aa64 <Perl__inverse_folds@plt+0x5064>  // b.none
    aa4c:	cmp	w0, #0xcd
    aa50:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa54:	ldrb	w0, [x19, #5]
    aa58:	cmp	w0, #0x82
    aa5c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa60:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa64:	ldrb	w0, [x19, #5]
    aa68:	sub	w0, w0, #0x80
    aa6c:	cmp	w0, #0x1
    aa70:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    aa74:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa78:	ldrb	w0, [x19, #2]
    aa7c:	cmp	w0, #0xcd
    aa80:	b.eq	aa9c <Perl__inverse_folds@plt+0x509c>  // b.none
    aa84:	cmp	w0, #0xce
    aa88:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa8c:	ldrb	w0, [x19, #3]
    aa90:	cmp	w0, #0xb9
    aa94:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aa98:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aa9c:	ldrb	w0, [x19, #3]
    aaa0:	cmp	w0, #0x82
    aaa4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aaa8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aaac:	ldrb	w0, [x19, #1]
    aab0:	cmp	w0, #0xa5
    aab4:	b.eq	aae4 <Perl__inverse_folds@plt+0x50e4>  // b.none
    aab8:	cmp	w0, #0xb4
    aabc:	b.eq	ab00 <Perl__inverse_folds@plt+0x5100>  // b.none
    aac0:	cmp	w0, #0xbe
    aac4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aac8:	ldrb	w0, [x19, #2]
    aacc:	cmp	w0, #0xd5
    aad0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aad4:	ldrb	w0, [x19, #3]
    aad8:	cmp	w0, #0xb6
    aadc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aae0:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aae4:	ldrb	w0, [x19, #2]
    aae8:	cmp	w0, #0xd6
    aaec:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aaf0:	ldrb	w0, [x19, #3]
    aaf4:	cmp	w0, #0x82
    aaf8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aafc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ab00:	ldrb	w0, [x19, #2]
    ab04:	cmp	w0, #0xd5
    ab08:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ab0c:	ldrb	w1, [x19, #3]
    ab10:	and	w0, w1, #0xfffffff7
    ab14:	and	w0, w0, #0xff
    ab18:	cmp	w1, #0xab
    ab1c:	mov	w2, #0xb6                  	// #182
    ab20:	ccmp	w1, w2, #0x4, ne  // ne = any
    ab24:	mov	w1, #0xa5                  	// #165
    ab28:	ccmp	w0, w1, #0x4, ne  // ne = any
    ab2c:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    ab30:	b	a684 <Perl__inverse_folds@plt+0x4c84>
    ab34:	ldrb	w0, [x19, #2]
    ab38:	mov	w1, #0xd8                  	// #216
    ab3c:	and	w0, w0, w1
    ab40:	cmp	w0, #0x80
    ab44:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ab48:	ldrb	w0, [x19, #3]
    ab4c:	cmp	w0, #0xce
    ab50:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ab54:	ldrb	w0, [x19, #4]
    ab58:	cmp	w0, #0xb9
    ab5c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ab60:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ab64:	b.ne	af70 <Perl__inverse_folds@plt+0x5570>  // b.any
    ab68:	ldrb	w0, [x19]
    ab6c:	cmp	w0, #0x61
    ab70:	b.eq	abd0 <Perl__inverse_folds@plt+0x51d0>  // b.none
    ab74:	cmp	w0, #0x66
    ab78:	b.eq	abec <Perl__inverse_folds@plt+0x51ec>  // b.none
    ab7c:	cmp	w0, #0x68
    ab80:	b.eq	ac0c <Perl__inverse_folds@plt+0x520c>  // b.none
    ab84:	cmp	w0, #0x69
    ab88:	b.eq	ac28 <Perl__inverse_folds@plt+0x5228>  // b.none
    ab8c:	cmp	w0, #0x6a
    ab90:	b.eq	ac44 <Perl__inverse_folds@plt+0x5244>  // b.none
    ab94:	cmp	w0, #0x73
    ab98:	b.eq	ac60 <Perl__inverse_folds@plt+0x5260>  // b.none
    ab9c:	cmp	w0, #0x74
    aba0:	b.eq	ac74 <Perl__inverse_folds@plt+0x5274>  // b.none
    aba4:	sub	w1, w0, #0x77
    aba8:	and	w1, w1, #0xfffffffd
    abac:	tst	w1, #0xff
    abb0:	b.ne	ac90 <Perl__inverse_folds@plt+0x5290>  // b.any
    abb4:	ldrb	w0, [x19, #1]
    abb8:	cmp	w0, #0xcc
    abbc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    abc0:	ldrb	w0, [x19, #2]
    abc4:	cmp	w0, #0x8a
    abc8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    abcc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    abd0:	ldrb	w0, [x19, #1]
    abd4:	cmp	w0, #0xca
    abd8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    abdc:	ldrb	w0, [x19, #2]
    abe0:	cmp	w0, #0xbe
    abe4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    abe8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    abec:	ldrb	w0, [x19, #1]
    abf0:	cmp	w0, #0x66
    abf4:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    abf8:	cmp	w0, #0x69
    abfc:	mov	w1, #0x6c                  	// #108
    ac00:	ccmp	w0, w1, #0x4, ne  // ne = any
    ac04:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac08:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac0c:	ldrb	w0, [x19, #1]
    ac10:	cmp	w0, #0xcc
    ac14:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac18:	ldrb	w0, [x19, #2]
    ac1c:	cmp	w0, #0xb1
    ac20:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac24:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac28:	ldrb	w0, [x19, #1]
    ac2c:	cmp	w0, #0xcc
    ac30:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac34:	ldrb	w0, [x19, #2]
    ac38:	cmp	w0, #0x87
    ac3c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac40:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac44:	ldrb	w0, [x19, #1]
    ac48:	cmp	w0, #0xcc
    ac4c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac50:	ldrb	w0, [x19, #2]
    ac54:	cmp	w0, #0x8c
    ac58:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac5c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac60:	ldrb	w0, [x19, #1]
    ac64:	sub	w0, w0, #0x73
    ac68:	cmp	w0, #0x1
    ac6c:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    ac70:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac74:	ldrb	w0, [x19, #1]
    ac78:	cmp	w0, #0xcc
    ac7c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac80:	ldrb	w0, [x19, #2]
    ac84:	cmp	w0, #0x88
    ac88:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ac8c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ac90:	cmp	w0, #0xc5
    ac94:	b.eq	ad18 <Perl__inverse_folds@plt+0x5318>  // b.none
    ac98:	cmp	w0, #0xca
    ac9c:	b.eq	ad40 <Perl__inverse_folds@plt+0x5340>  // b.none
    aca0:	cmp	w0, #0xce
    aca4:	b.eq	ad5c <Perl__inverse_folds@plt+0x535c>  // b.none
    aca8:	cmp	w0, #0xcf
    acac:	b.eq	adf4 <Perl__inverse_folds@plt+0x53f4>  // b.none
    acb0:	cmp	w0, #0xd5
    acb4:	b.eq	aeb8 <Perl__inverse_folds@plt+0x54b8>  // b.none
    acb8:	cmp	w0, #0xe1
    acbc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    acc0:	ldrb	w0, [x19, #1]
    acc4:	cmp	w0, #0xbc
    acc8:	b.eq	af40 <Perl__inverse_folds@plt+0x5540>  // b.none
    accc:	cmp	w0, #0xbd
    acd0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    acd4:	ldrb	w0, [x19, #2]
    acd8:	and	w1, w0, #0xf8
    acdc:	cmp	w1, #0xa0
    ace0:	b.eq	acfc <Perl__inverse_folds@plt+0x52fc>  // b.none
    ace4:	and	w1, w0, #0xfffffffb
    ace8:	and	w1, w1, #0xff
    acec:	cmp	w1, #0xb0
    acf0:	mov	w1, #0xbc                  	// #188
    acf4:	ccmp	w0, w1, #0x4, ne  // ne = any
    acf8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    acfc:	ldrb	w0, [x19, #3]
    ad00:	cmp	w0, #0xce
    ad04:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad08:	ldrb	w0, [x19, #4]
    ad0c:	cmp	w0, #0xb9
    ad10:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad14:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ad18:	ldrb	w0, [x19, #1]
    ad1c:	cmp	w0, #0xbf
    ad20:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad24:	ldrb	w0, [x19, #2]
    ad28:	cmp	w0, #0xc5
    ad2c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad30:	ldrb	w0, [x19, #3]
    ad34:	cmp	w0, #0xbf
    ad38:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad3c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ad40:	ldrb	w0, [x19, #1]
    ad44:	cmp	w0, #0xbc
    ad48:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad4c:	ldrb	w0, [x19, #2]
    ad50:	cmp	w0, #0x6e
    ad54:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad58:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ad5c:	ldrb	w0, [x19, #1]
    ad60:	and	w1, w0, #0xfffffffd
    ad64:	and	w1, w1, #0xff
    ad68:	cmp	w1, #0xac
    ad6c:	b.eq	ada4 <Perl__inverse_folds@plt+0x53a4>  // b.none
    ad70:	cmp	w0, #0xb1
    ad74:	mov	w1, #0xb7                  	// #183
    ad78:	ccmp	w0, w1, #0x4, ne  // ne = any
    ad7c:	b.ne	add0 <Perl__inverse_folds@plt+0x53d0>  // b.any
    ad80:	ldrb	w0, [x19, #2]
    ad84:	cmp	w0, #0xcd
    ad88:	b.eq	adc0 <Perl__inverse_folds@plt+0x53c0>  // b.none
    ad8c:	cmp	w0, #0xce
    ad90:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ad94:	ldrb	w0, [x19, #3]
    ad98:	cmp	w0, #0xb9
    ad9c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ada0:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ada4:	ldrb	w0, [x19, #2]
    ada8:	cmp	w0, #0xce
    adac:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    adb0:	ldrb	w0, [x19, #3]
    adb4:	cmp	w0, #0xb9
    adb8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    adbc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    adc0:	ldrb	w0, [x19, #3]
    adc4:	cmp	w0, #0x82
    adc8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    adcc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    add0:	cmp	w0, #0xb9
    add4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    add8:	ldrb	w0, [x19, #2]
    addc:	cmp	w0, #0xcd
    ade0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ade4:	ldrb	w0, [x19, #3]
    ade8:	cmp	w0, #0x82
    adec:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    adf0:	b	a354 <Perl__inverse_folds@plt+0x4954>
    adf4:	ldrb	w0, [x19, #1]
    adf8:	cmp	w0, #0x81
    adfc:	b.eq	ae34 <Perl__inverse_folds@plt+0x5434>  // b.none
    ae00:	cmp	w0, #0x85
    ae04:	b.eq	ae50 <Perl__inverse_folds@plt+0x5450>  // b.none
    ae08:	cmp	w0, #0x89
    ae0c:	b.eq	ae84 <Perl__inverse_folds@plt+0x5484>  // b.none
    ae10:	cmp	w0, #0x8e
    ae14:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae18:	ldrb	w0, [x19, #2]
    ae1c:	cmp	w0, #0xce
    ae20:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae24:	ldrb	w0, [x19, #3]
    ae28:	cmp	w0, #0xb9
    ae2c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae30:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ae34:	ldrb	w0, [x19, #2]
    ae38:	cmp	w0, #0xcc
    ae3c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae40:	ldrb	w0, [x19, #3]
    ae44:	cmp	w0, #0x93
    ae48:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae4c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ae50:	ldrb	w0, [x19, #2]
    ae54:	cmp	w0, #0xcc
    ae58:	b.eq	ae74 <Perl__inverse_folds@plt+0x5474>  // b.none
    ae5c:	cmp	w0, #0xcd
    ae60:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae64:	ldrb	w0, [x19, #3]
    ae68:	cmp	w0, #0x82
    ae6c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae70:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ae74:	ldrb	w0, [x19, #3]
    ae78:	cmp	w0, #0x93
    ae7c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae80:	b	a354 <Perl__inverse_folds@plt+0x4954>
    ae84:	ldrb	w0, [x19, #2]
    ae88:	cmp	w0, #0xcd
    ae8c:	b.eq	aea8 <Perl__inverse_folds@plt+0x54a8>  // b.none
    ae90:	cmp	w0, #0xce
    ae94:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    ae98:	ldrb	w0, [x19, #3]
    ae9c:	cmp	w0, #0xb9
    aea0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aea4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aea8:	ldrb	w0, [x19, #3]
    aeac:	cmp	w0, #0x82
    aeb0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aeb4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aeb8:	ldrb	w0, [x19, #1]
    aebc:	cmp	w0, #0xa5
    aec0:	b.eq	aef0 <Perl__inverse_folds@plt+0x54f0>  // b.none
    aec4:	cmp	w0, #0xb4
    aec8:	b.eq	af0c <Perl__inverse_folds@plt+0x550c>  // b.none
    aecc:	cmp	w0, #0xbe
    aed0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aed4:	ldrb	w0, [x19, #2]
    aed8:	cmp	w0, #0xd5
    aedc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aee0:	ldrb	w0, [x19, #3]
    aee4:	cmp	w0, #0xb6
    aee8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aeec:	b	a354 <Perl__inverse_folds@plt+0x4954>
    aef0:	ldrb	w0, [x19, #2]
    aef4:	cmp	w0, #0xd6
    aef8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aefc:	ldrb	w0, [x19, #3]
    af00:	cmp	w0, #0x82
    af04:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    af08:	b	a354 <Perl__inverse_folds@plt+0x4954>
    af0c:	ldrb	w0, [x19, #2]
    af10:	cmp	w0, #0xd5
    af14:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    af18:	ldrb	w1, [x19, #3]
    af1c:	and	w0, w1, #0xfffffff7
    af20:	and	w0, w0, #0xff
    af24:	cmp	w1, #0xb6
    af28:	mov	w2, #0xab                  	// #171
    af2c:	ccmp	w1, w2, #0x4, ne  // ne = any
    af30:	mov	w1, #0xa5                  	// #165
    af34:	ccmp	w0, w1, #0x4, ne  // ne = any
    af38:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    af3c:	b	a684 <Perl__inverse_folds@plt+0x4c84>
    af40:	ldrb	w0, [x19, #2]
    af44:	mov	w1, #0xd8                  	// #216
    af48:	and	w0, w0, w1
    af4c:	cmp	w0, #0x80
    af50:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    af54:	ldrb	w0, [x19, #3]
    af58:	cmp	w0, #0xce
    af5c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    af60:	ldrb	w0, [x19, #4]
    af64:	cmp	w0, #0xb9
    af68:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    af6c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    af70:	cmp	x26, #0x3
    af74:	b.le	b2f0 <Perl__inverse_folds@plt+0x58f0>
    af78:	ldrb	w0, [x19]
    af7c:	cmp	w0, #0x61
    af80:	b.eq	afe0 <Perl__inverse_folds@plt+0x55e0>  // b.none
    af84:	cmp	w0, #0x66
    af88:	b.eq	affc <Perl__inverse_folds@plt+0x55fc>  // b.none
    af8c:	cmp	w0, #0x68
    af90:	b.eq	b01c <Perl__inverse_folds@plt+0x561c>  // b.none
    af94:	cmp	w0, #0x69
    af98:	b.eq	b038 <Perl__inverse_folds@plt+0x5638>  // b.none
    af9c:	cmp	w0, #0x6a
    afa0:	b.eq	b054 <Perl__inverse_folds@plt+0x5654>  // b.none
    afa4:	cmp	w0, #0x73
    afa8:	b.eq	b070 <Perl__inverse_folds@plt+0x5670>  // b.none
    afac:	cmp	w0, #0x74
    afb0:	b.eq	b084 <Perl__inverse_folds@plt+0x5684>  // b.none
    afb4:	sub	w1, w0, #0x77
    afb8:	and	w1, w1, #0xfffffffd
    afbc:	tst	w1, #0xff
    afc0:	b.ne	b0a0 <Perl__inverse_folds@plt+0x56a0>  // b.any
    afc4:	ldrb	w0, [x19, #1]
    afc8:	cmp	w0, #0xcc
    afcc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    afd0:	ldrb	w0, [x19, #2]
    afd4:	cmp	w0, #0x8a
    afd8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    afdc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    afe0:	ldrb	w0, [x19, #1]
    afe4:	cmp	w0, #0xca
    afe8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    afec:	ldrb	w0, [x19, #2]
    aff0:	cmp	w0, #0xbe
    aff4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    aff8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    affc:	ldrb	w0, [x19, #1]
    b000:	cmp	w0, #0x66
    b004:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b008:	cmp	w0, #0x69
    b00c:	mov	w1, #0x6c                  	// #108
    b010:	ccmp	w0, w1, #0x4, ne  // ne = any
    b014:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b018:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b01c:	ldrb	w0, [x19, #1]
    b020:	cmp	w0, #0xcc
    b024:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b028:	ldrb	w0, [x19, #2]
    b02c:	cmp	w0, #0xb1
    b030:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b034:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b038:	ldrb	w0, [x19, #1]
    b03c:	cmp	w0, #0xcc
    b040:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b044:	ldrb	w0, [x19, #2]
    b048:	cmp	w0, #0x87
    b04c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b050:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b054:	ldrb	w0, [x19, #1]
    b058:	cmp	w0, #0xcc
    b05c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b060:	ldrb	w0, [x19, #2]
    b064:	cmp	w0, #0x8c
    b068:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b06c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b070:	ldrb	w0, [x19, #1]
    b074:	sub	w0, w0, #0x73
    b078:	cmp	w0, #0x1
    b07c:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    b080:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b084:	ldrb	w0, [x19, #1]
    b088:	cmp	w0, #0xcc
    b08c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b090:	ldrb	w0, [x19, #2]
    b094:	cmp	w0, #0x88
    b098:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b09c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b0a0:	cmp	w0, #0xc5
    b0a4:	b.eq	b100 <Perl__inverse_folds@plt+0x5700>  // b.none
    b0a8:	cmp	w0, #0xca
    b0ac:	b.eq	b128 <Perl__inverse_folds@plt+0x5728>  // b.none
    b0b0:	cmp	w0, #0xce
    b0b4:	b.eq	b144 <Perl__inverse_folds@plt+0x5744>  // b.none
    b0b8:	cmp	w0, #0xcf
    b0bc:	b.eq	b1dc <Perl__inverse_folds@plt+0x57dc>  // b.none
    b0c0:	cmp	w0, #0xd5
    b0c4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b0c8:	ldrb	w0, [x19, #1]
    b0cc:	cmp	w0, #0xa5
    b0d0:	b.eq	b2a0 <Perl__inverse_folds@plt+0x58a0>  // b.none
    b0d4:	cmp	w0, #0xb4
    b0d8:	b.eq	b2bc <Perl__inverse_folds@plt+0x58bc>  // b.none
    b0dc:	cmp	w0, #0xbe
    b0e0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b0e4:	ldrb	w0, [x19, #2]
    b0e8:	cmp	w0, #0xd5
    b0ec:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b0f0:	ldrb	w0, [x19, #3]
    b0f4:	cmp	w0, #0xb6
    b0f8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b0fc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b100:	ldrb	w0, [x19, #1]
    b104:	cmp	w0, #0xbf
    b108:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b10c:	ldrb	w0, [x19, #2]
    b110:	cmp	w0, #0xc5
    b114:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b118:	ldrb	w0, [x19, #3]
    b11c:	cmp	w0, #0xbf
    b120:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b124:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b128:	ldrb	w0, [x19, #1]
    b12c:	cmp	w0, #0xbc
    b130:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b134:	ldrb	w0, [x19, #2]
    b138:	cmp	w0, #0x6e
    b13c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b140:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b144:	ldrb	w0, [x19, #1]
    b148:	and	w1, w0, #0xfffffffd
    b14c:	and	w1, w1, #0xff
    b150:	cmp	w1, #0xac
    b154:	b.eq	b18c <Perl__inverse_folds@plt+0x578c>  // b.none
    b158:	cmp	w0, #0xb1
    b15c:	mov	w1, #0xb7                  	// #183
    b160:	ccmp	w0, w1, #0x4, ne  // ne = any
    b164:	b.ne	b1b8 <Perl__inverse_folds@plt+0x57b8>  // b.any
    b168:	ldrb	w0, [x19, #2]
    b16c:	cmp	w0, #0xcd
    b170:	b.eq	b1a8 <Perl__inverse_folds@plt+0x57a8>  // b.none
    b174:	cmp	w0, #0xce
    b178:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b17c:	ldrb	w0, [x19, #3]
    b180:	cmp	w0, #0xb9
    b184:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b188:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b18c:	ldrb	w0, [x19, #2]
    b190:	cmp	w0, #0xce
    b194:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b198:	ldrb	w0, [x19, #3]
    b19c:	cmp	w0, #0xb9
    b1a0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b1a4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b1a8:	ldrb	w0, [x19, #3]
    b1ac:	cmp	w0, #0x82
    b1b0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b1b4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b1b8:	cmp	w0, #0xb9
    b1bc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b1c0:	ldrb	w0, [x19, #2]
    b1c4:	cmp	w0, #0xcd
    b1c8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b1cc:	ldrb	w0, [x19, #3]
    b1d0:	cmp	w0, #0x82
    b1d4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b1d8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b1dc:	ldrb	w0, [x19, #1]
    b1e0:	cmp	w0, #0x81
    b1e4:	b.eq	b21c <Perl__inverse_folds@plt+0x581c>  // b.none
    b1e8:	cmp	w0, #0x85
    b1ec:	b.eq	b238 <Perl__inverse_folds@plt+0x5838>  // b.none
    b1f0:	cmp	w0, #0x89
    b1f4:	b.eq	b26c <Perl__inverse_folds@plt+0x586c>  // b.none
    b1f8:	cmp	w0, #0x8e
    b1fc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b200:	ldrb	w0, [x19, #2]
    b204:	cmp	w0, #0xce
    b208:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b20c:	ldrb	w0, [x19, #3]
    b210:	cmp	w0, #0xb9
    b214:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b218:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b21c:	ldrb	w0, [x19, #2]
    b220:	cmp	w0, #0xcc
    b224:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b228:	ldrb	w0, [x19, #3]
    b22c:	cmp	w0, #0x93
    b230:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b234:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b238:	ldrb	w0, [x19, #2]
    b23c:	cmp	w0, #0xcc
    b240:	b.eq	b25c <Perl__inverse_folds@plt+0x585c>  // b.none
    b244:	cmp	w0, #0xcd
    b248:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b24c:	ldrb	w0, [x19, #3]
    b250:	cmp	w0, #0x82
    b254:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b258:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b25c:	ldrb	w0, [x19, #3]
    b260:	cmp	w0, #0x93
    b264:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b268:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b26c:	ldrb	w0, [x19, #2]
    b270:	cmp	w0, #0xcd
    b274:	b.eq	b290 <Perl__inverse_folds@plt+0x5890>  // b.none
    b278:	cmp	w0, #0xce
    b27c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b280:	ldrb	w0, [x19, #3]
    b284:	cmp	w0, #0xb9
    b288:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b28c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b290:	ldrb	w0, [x19, #3]
    b294:	cmp	w0, #0x82
    b298:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b29c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b2a0:	ldrb	w0, [x19, #2]
    b2a4:	cmp	w0, #0xd6
    b2a8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b2ac:	ldrb	w0, [x19, #3]
    b2b0:	cmp	w0, #0x82
    b2b4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b2b8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b2bc:	ldrb	w0, [x19, #2]
    b2c0:	cmp	w0, #0xd5
    b2c4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b2c8:	ldrb	w1, [x19, #3]
    b2cc:	and	w0, w1, #0xfffffff7
    b2d0:	and	w0, w0, #0xff
    b2d4:	cmp	w1, #0xab
    b2d8:	mov	w2, #0xb6                  	// #182
    b2dc:	ccmp	w1, w2, #0x4, ne  // ne = any
    b2e0:	mov	w1, #0xa5                  	// #165
    b2e4:	ccmp	w0, w1, #0x4, ne  // ne = any
    b2e8:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b2ec:	b	a684 <Perl__inverse_folds@plt+0x4c84>
    b2f0:	b.ne	b440 <Perl__inverse_folds@plt+0x5a40>  // b.any
    b2f4:	ldrb	w0, [x19]
    b2f8:	cmp	w0, #0x61
    b2fc:	b.eq	b35c <Perl__inverse_folds@plt+0x595c>  // b.none
    b300:	cmp	w0, #0x66
    b304:	b.eq	b378 <Perl__inverse_folds@plt+0x5978>  // b.none
    b308:	cmp	w0, #0x68
    b30c:	b.eq	b398 <Perl__inverse_folds@plt+0x5998>  // b.none
    b310:	cmp	w0, #0x69
    b314:	b.eq	b3b4 <Perl__inverse_folds@plt+0x59b4>  // b.none
    b318:	cmp	w0, #0x6a
    b31c:	b.eq	b3d0 <Perl__inverse_folds@plt+0x59d0>  // b.none
    b320:	cmp	w0, #0x73
    b324:	b.eq	b3ec <Perl__inverse_folds@plt+0x59ec>  // b.none
    b328:	cmp	w0, #0x74
    b32c:	b.eq	b400 <Perl__inverse_folds@plt+0x5a00>  // b.none
    b330:	sub	w1, w0, #0x77
    b334:	and	w1, w1, #0xfffffffd
    b338:	tst	w1, #0xff
    b33c:	b.ne	b41c <Perl__inverse_folds@plt+0x5a1c>  // b.any
    b340:	ldrb	w0, [x19, #1]
    b344:	cmp	w0, #0xcc
    b348:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b34c:	ldrb	w0, [x19, #2]
    b350:	cmp	w0, #0x8a
    b354:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b358:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b35c:	ldrb	w0, [x19, #1]
    b360:	cmp	w0, #0xca
    b364:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b368:	ldrb	w0, [x19, #2]
    b36c:	cmp	w0, #0xbe
    b370:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b374:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b378:	ldrb	w0, [x19, #1]
    b37c:	cmp	w0, #0x66
    b380:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b384:	cmp	w0, #0x69
    b388:	mov	w1, #0x6c                  	// #108
    b38c:	ccmp	w0, w1, #0x4, ne  // ne = any
    b390:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b394:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b398:	ldrb	w0, [x19, #1]
    b39c:	cmp	w0, #0xcc
    b3a0:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3a4:	ldrb	w0, [x19, #2]
    b3a8:	cmp	w0, #0xb1
    b3ac:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3b0:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b3b4:	ldrb	w0, [x19, #1]
    b3b8:	cmp	w0, #0xcc
    b3bc:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3c0:	ldrb	w0, [x19, #2]
    b3c4:	cmp	w0, #0x87
    b3c8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3cc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b3d0:	ldrb	w0, [x19, #1]
    b3d4:	cmp	w0, #0xcc
    b3d8:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3dc:	ldrb	w0, [x19, #2]
    b3e0:	cmp	w0, #0x8c
    b3e4:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b3e8:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b3ec:	ldrb	w0, [x19, #1]
    b3f0:	sub	w0, w0, #0x73
    b3f4:	cmp	w0, #0x1
    b3f8:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    b3fc:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b400:	ldrb	w0, [x19, #1]
    b404:	cmp	w0, #0xcc
    b408:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b40c:	ldrb	w0, [x19, #2]
    b410:	cmp	w0, #0x88
    b414:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b418:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b41c:	cmp	w0, #0xca
    b420:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b424:	ldrb	w0, [x19, #1]
    b428:	cmp	w0, #0xbc
    b42c:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b430:	ldrb	w0, [x19, #2]
    b434:	cmp	w0, #0x6e
    b438:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b43c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b440:	cmp	x26, #0x1
    b444:	b.le	a684 <Perl__inverse_folds@plt+0x4c84>
    b448:	ldrb	w0, [x19]
    b44c:	cmp	w0, #0x66
    b450:	b.eq	b470 <Perl__inverse_folds@plt+0x5a70>  // b.none
    b454:	cmp	w0, #0x73
    b458:	b.ne	a684 <Perl__inverse_folds@plt+0x4c84>  // b.any
    b45c:	ldrb	w0, [x19, #1]
    b460:	sub	w0, w0, #0x73
    b464:	cmp	w0, #0x1
    b468:	b.hi	a684 <Perl__inverse_folds@plt+0x4c84>  // b.pmore
    b46c:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b470:	ldrb	w0, [x19, #1]
    b474:	cmp	w0, #0x66
    b478:	mov	w1, #0x69                  	// #105
    b47c:	ccmp	w0, w1, #0x4, ne  // ne = any
    b480:	mov	w1, #0x6c                  	// #108
    b484:	ccmp	w0, w1, #0x4, ne  // ne = any
    b488:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b48c:	b	a684 <Perl__inverse_folds@plt+0x4c84>
    b490:	ldrb	w0, [x20, #5]
    b494:	and	w0, w0, #0xffffffdf
    b498:	and	w0, w0, #0xff
    b49c:	cmp	w0, #0x46
    b4a0:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b4a4:	cmp	w0, #0x49
    b4a8:	mov	w1, #0x4c                  	// #76
    b4ac:	ccmp	w0, w1, #0x4, ne  // ne = any
    b4b0:	b.ne	a304 <Perl__inverse_folds@plt+0x4904>  // b.any
    b4b4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b4b8:	ldrb	w0, [x20, #5]
    b4bc:	sub	w1, w0, #0x53
    b4c0:	cmp	w1, #0x1
    b4c4:	b.ls	a354 <Perl__inverse_folds@plt+0x4954>  // b.plast
    b4c8:	sub	w0, w0, #0x73
    b4cc:	cmp	w0, #0x1
    b4d0:	b.hi	a304 <Perl__inverse_folds@plt+0x4904>  // b.pmore
    b4d4:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b4d8:	b.ne	a304 <Perl__inverse_folds@plt+0x4904>  // b.any
    b4dc:	ldrb	w0, [x19]
    b4e0:	and	w0, w0, #0xffffffdf
    b4e4:	and	w0, w0, #0xff
    b4e8:	cmp	w0, #0x46
    b4ec:	b.eq	b518 <Perl__inverse_folds@plt+0x5b18>  // b.none
    b4f0:	cmp	w0, #0x53
    b4f4:	b.ne	a304 <Perl__inverse_folds@plt+0x4904>  // b.any
    b4f8:	ldrb	w0, [x19, #1]
    b4fc:	sub	w1, w0, #0x53
    b500:	cmp	w1, #0x1
    b504:	b.ls	a354 <Perl__inverse_folds@plt+0x4954>  // b.plast
    b508:	sub	w0, w0, #0x73
    b50c:	cmp	w0, #0x1
    b510:	b.hi	a304 <Perl__inverse_folds@plt+0x4904>  // b.pmore
    b514:	b	a354 <Perl__inverse_folds@plt+0x4954>
    b518:	ldrb	w0, [x19, #1]
    b51c:	and	w0, w0, #0xffffffdf
    b520:	and	w0, w0, #0xff
    b524:	cmp	w0, #0x46
    b528:	mov	w1, #0x49                  	// #73
    b52c:	ccmp	w0, w1, #0x4, ne  // ne = any
    b530:	mov	w1, #0x4c                  	// #76
    b534:	ccmp	w0, w1, #0x4, ne  // ne = any
    b538:	b.eq	a354 <Perl__inverse_folds@plt+0x4954>  // b.none
    b53c:	b	a304 <Perl__inverse_folds@plt+0x4904>
    b540:	ldrb	w0, [x20, #1]
    b544:	cmp	w0, #0x26
    b548:	b.ne	a6e8 <Perl__inverse_folds@plt+0x4ce8>  // b.any
    b54c:	b	b6c4 <Perl__inverse_folds@plt+0x5cc4>
    b550:	cmp	x24, #0x69
    b554:	cset	x25, ne  // ne = any
    b558:	add	x25, x25, #0x130
    b55c:	b	a110 <Perl__inverse_folds@plt+0x4710>
    b560:	ldrb	w0, [x22, #1180]
    b564:	cmp	w0, #0x0
    b568:	csel	x25, x25, x24, ne  // ne = any
    b56c:	b	b6b0 <Perl__inverse_folds@plt+0x5cb0>
    b570:	ldrb	w0, [x22, #1180]
    b574:	cbnz	w0, a34c <Perl__inverse_folds@plt+0x494c>
    b578:	b	b5b8 <Perl__inverse_folds@plt+0x5bb8>
    b57c:	ldrb	w2, [x20, #1]
    b580:	cmp	w2, #0x29
    b584:	b.hi	b5c8 <Perl__inverse_folds@plt+0x5bc8>  // b.pmore
    b588:	cmp	w2, #0x26
    b58c:	b.hi	b610 <Perl__inverse_folds@plt+0x5c10>  // b.pmore
    b590:	cmp	w2, #0x25
    b594:	b.ne	b5b0 <Perl__inverse_folds@plt+0x5bb0>  // b.any
    b598:	cbnz	w27, b5e8 <Perl__inverse_folds@plt+0x5be8>
    b59c:	cbnz	w28, b610 <Perl__inverse_folds@plt+0x5c10>
    b5a0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    b5a4:	ldr	x0, [x0, #3944]
    b5a8:	ldrb	w25, [x0, x24]
    b5ac:	b	b684 <Perl__inverse_folds@plt+0x5c84>
    b5b0:	cmp	w2, #0x26
    b5b4:	b.ne	b5d8 <Perl__inverse_folds@plt+0x5bd8>  // b.any
    b5b8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    b5bc:	ldr	x0, [x0, #3816]
    b5c0:	ldrb	w25, [x0, x24]
    b5c4:	b	a110 <Perl__inverse_folds@plt+0x4710>
    b5c8:	cmp	w2, #0x2b
    b5cc:	b.eq	b60c <Perl__inverse_folds@plt+0x5c0c>  // b.none
    b5d0:	cmp	w2, #0x2d
    b5d4:	b.eq	a368 <Perl__inverse_folds@plt+0x4968>  // b.none
    b5d8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    b5dc:	add	x1, x1, #0x308
    b5e0:	mov	x0, x22
    b5e4:	bl	5420 <Perl_croak@plt>
    b5e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b5ec:	add	x3, x3, #0x330
    b5f0:	add	x3, x3, #0xb60
    b5f4:	mov	w2, #0x1130                	// #4400
    b5f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b5fc:	add	x1, x1, #0xcb0
    b600:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b604:	add	x0, x0, #0x2f8
    b608:	bl	58e0 <__assert_fail@plt>
    b60c:	cbnz	w27, b620 <Perl__inverse_folds@plt+0x5c20>
    b610:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    b614:	ldr	x0, [x0, #3752]
    b618:	ldrb	w25, [x0, x24]
    b61c:	b	a110 <Perl__inverse_folds@plt+0x4710>
    b620:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b624:	add	x3, x3, #0x330
    b628:	add	x3, x3, #0xb60
    b62c:	mov	w2, #0x113a                	// #4410
    b630:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b634:	add	x1, x1, #0xcb0
    b638:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b63c:	add	x0, x0, #0x2f8
    b640:	bl	58e0 <__assert_fail@plt>
    b644:	mov	x25, #0x178                 	// #376
    b648:	b	a114 <Perl__inverse_folds@plt+0x4714>
    b64c:	cmp	x25, x24
    b650:	cset	w0, ne  // ne = any
    b654:	sub	w0, w0, #0x3e7
    b658:	b	a1e8 <Perl__inverse_folds@plt+0x47e8>
    b65c:	mov	w0, w24
    b660:	ldr	x1, [sp, #104]
    b664:	str	w24, [x1]
    b668:	cmp	x25, #0xff
    b66c:	b.ls	b68c <Perl__inverse_folds@plt+0x5c8c>  // b.plast
    b670:	str	w0, [x23]
    b674:	mov	w21, #0x1                   	// #1
    b678:	b	a368 <Perl__inverse_folds@plt+0x4968>
    b67c:	and	x24, x24, #0xff
    b680:	mov	x25, x24
    b684:	ldr	x0, [sp, #104]
    b688:	str	w24, [x0]
    b68c:	mov	w0, w25
    b690:	b	b670 <Perl__inverse_folds@plt+0x5c70>
    b694:	mov	x24, x25
    b698:	b	b684 <Perl__inverse_folds@plt+0x5c84>
    b69c:	mov	x25, #0x69                  	// #105
    b6a0:	b	a110 <Perl__inverse_folds@plt+0x4710>
    b6a4:	and	x24, x24, #0xff
    b6a8:	b	a308 <Perl__inverse_folds@plt+0x4908>
    b6ac:	mov	x25, x24
    b6b0:	cbnz	w28, a114 <Perl__inverse_folds@plt+0x4714>
    b6b4:	b	a2ac <Perl__inverse_folds@plt+0x48ac>
    b6b8:	ldrb	w0, [x20, #1]
    b6bc:	cmp	w0, #0x26
    b6c0:	b.ne	a310 <Perl__inverse_folds@plt+0x4910>  // b.any
    b6c4:	and	x0, x24, #0xffffffffffffffdf
    b6c8:	cmp	x0, #0x49
    b6cc:	b.eq	b550 <Perl__inverse_folds@plt+0x5b50>  // b.none
    b6d0:	sub	x0, x24, #0x130
    b6d4:	cmp	x0, #0x1
    b6d8:	b.hi	a6e8 <Perl__inverse_folds@plt+0x4ce8>  // b.pmore
    b6dc:	cmp	x24, #0x130
    b6e0:	b.eq	b69c <Perl__inverse_folds@plt+0x5c9c>  // b.none
    b6e4:	cmp	x24, #0x131
    b6e8:	mov	x25, #0xfffffffffffffc1a    	// #-998
    b6ec:	mov	x0, #0x49                  	// #73
    b6f0:	csel	x25, x25, x0, ne  // ne = any
    b6f4:	b	a110 <Perl__inverse_folds@plt+0x4710>
    b6f8:	bl	5300 <__stack_chk_fail@plt>
    b6fc:	stp	x29, x30, [sp, #-64]!
    b700:	mov	x29, sp
    b704:	cbz	x2, b838 <Perl__inverse_folds@plt+0x5e38>
    b708:	stp	x19, x20, [sp, #16]
    b70c:	stp	x21, x22, [sp, #32]
    b710:	mov	x21, x0
    b714:	and	w22, w1, #0xff
    b718:	mov	x19, x2
    b71c:	mov	x20, x3
    b720:	cbz	x3, b868 <Perl__inverse_folds@plt+0x5e68>
    b724:	ldrb	w2, [x2]
    b728:	tbz	w2, #7, b890 <Perl__inverse_folds@plt+0x5e90>
    b72c:	and	w0, w2, #0xfe
    b730:	cmp	w0, #0xc2
    b734:	b.eq	b8ac <Perl__inverse_folds@plt+0x5eac>  // b.none
    b738:	ldrb	w0, [x21, #1180]
    b73c:	cbnz	w0, b978 <Perl__inverse_folds@plt+0x5f78>
    b740:	mov	w1, #0x3f                  	// #63
    b744:	mov	x0, x21
    b748:	bl	5870 <Perl_ckwarn@plt>
    b74c:	and	w0, w0, #0xff
    b750:	cbz	w0, b978 <Perl__inverse_folds@plt+0x5f78>
    b754:	str	x23, [sp, #48]
    b758:	cmp	x19, x20
    b75c:	b.cs	b900 <Perl__inverse_folds@plt+0x5f00>  // b.hs, b.nlast
    b760:	mov	w1, #0x2c                  	// #44
    b764:	mov	x0, x21
    b768:	bl	52a0 <Perl_ckwarn_d@plt>
    b76c:	ands	w0, w0, #0xff
    b770:	mov	w3, #0x9e                  	// #158
    b774:	csel	w3, w3, wzr, eq  // eq = none
    b778:	mov	x6, x19
    b77c:	mov	x23, #0x0                   	// #0
    b780:	mov	x4, #0x0                   	// #0
    b784:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    b788:	ldr	x8, [x0, #3824]
    b78c:	mov	w7, #0xff                  	// #255
    b790:	mov	x5, x8
    b794:	ldrb	w2, [x6]
    b798:	ldrb	w1, [x8, w2, sxtw]
    b79c:	and	x0, x1, #0xff
    b7a0:	asr	w1, w7, w1
    b7a4:	and	w1, w1, w2
    b7a8:	sxtw	x1, w1
    b7ac:	bfi	x2, x23, #6, #58
    b7b0:	cmp	x4, #0x0
    b7b4:	csel	x23, x2, x1, ne  // ne = any
    b7b8:	add	x0, x5, x0
    b7bc:	add	x0, x0, x4
    b7c0:	ldrb	w4, [x0, #256]
    b7c4:	cbnz	x4, b924 <Perl__inverse_folds@plt+0x5f24>
    b7c8:	cmp	x23, #0x0
    b7cc:	mov	x0, #0xfffd                	// #65533
    b7d0:	csel	x23, x23, x0, ne  // ne = any
    b7d4:	ldr	x1, [x21, #8]
    b7d8:	ldrh	w0, [x1, #32]
    b7dc:	and	w0, w0, #0x1ff
    b7e0:	cmp	w0, #0x17f
    b7e4:	b.eq	b954 <Perl__inverse_folds@plt+0x5f54>  // b.none
    b7e8:	ldrh	w1, [x1, #32]
    b7ec:	and	x1, x1, #0x1ff
    b7f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    b7f4:	ldr	x0, [x0, #4008]
    b7f8:	ldr	x4, [x0, x1, lsl #3]
    b7fc:	mov	x3, x23
    b800:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    b804:	add	x2, x2, #0x510
    b808:	mov	w1, #0x3f                  	// #63
    b80c:	mov	x0, x21
    b810:	bl	5110 <Perl_warner@plt>
    b814:	cmp	w22, #0xc
    b818:	b.eq	bb20 <Perl__inverse_folds@plt+0x6120>  // b.none
    b81c:	b.hi	b968 <Perl__inverse_folds@plt+0x5f68>  // b.pmore
    b820:	cmp	w22, #0xa
    b824:	b.eq	ba08 <Perl__inverse_folds@plt+0x6008>  // b.none
    b828:	cmp	w22, #0xb
    b82c:	b.ne	bca0 <Perl__inverse_folds@plt+0x62a0>  // b.any
    b830:	ldr	x23, [sp, #48]
    b834:	b	b994 <Perl__inverse_folds@plt+0x5f94>
    b838:	stp	x19, x20, [sp, #16]
    b83c:	stp	x21, x22, [sp, #32]
    b840:	str	x23, [sp, #48]
    b844:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b848:	add	x3, x3, #0x330
    b84c:	add	x3, x3, #0xb80
    b850:	mov	w2, #0x1f5                 	// #501
    b854:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b858:	add	x1, x1, #0xcb0
    b85c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b860:	add	x0, x0, #0x320
    b864:	bl	58e0 <__assert_fail@plt>
    b868:	str	x23, [sp, #48]
    b86c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b870:	add	x3, x3, #0x330
    b874:	add	x3, x3, #0xb80
    b878:	mov	w2, #0x1f5                 	// #501
    b87c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b880:	add	x1, x1, #0xcb0
    b884:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b888:	add	x0, x0, #0x240
    b88c:	bl	58e0 <__assert_fail@plt>
    b890:	mov	w1, w22
    b894:	bl	5350 <Perl_isFOO_lc@plt>
    b898:	and	w0, w0, #0xff
    b89c:	ldp	x19, x20, [sp, #16]
    b8a0:	ldp	x21, x22, [sp, #32]
    b8a4:	ldp	x29, x30, [sp], #64
    b8a8:	ret
    b8ac:	ldrb	w0, [x19, #1]
    b8b0:	and	w1, w0, #0xc0
    b8b4:	cmp	w1, #0x80
    b8b8:	b.ne	b8d8 <Perl__inverse_folds@plt+0x5ed8>  // b.any
    b8bc:	bfi	w0, w2, #6, #26
    b8c0:	mov	w2, w0
    b8c4:	mov	w1, w22
    b8c8:	mov	x0, x21
    b8cc:	bl	5350 <Perl_isFOO_lc@plt>
    b8d0:	and	w0, w0, #0xff
    b8d4:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    b8d8:	str	x23, [sp, #48]
    b8dc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b8e0:	add	x3, x3, #0x330
    b8e4:	add	x3, x3, #0xb80
    b8e8:	mov	w2, #0x1fc                 	// #508
    b8ec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b8f0:	add	x1, x1, #0xcb0
    b8f4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b8f8:	add	x0, x0, #0x330
    b8fc:	bl	58e0 <__assert_fail@plt>
    b900:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    b904:	add	x3, x3, #0x330
    b908:	add	x3, x3, #0xb80
    b90c:	mov	w2, #0x1ff                 	// #511
    b910:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    b914:	add	x1, x1, #0xcb0
    b918:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    b91c:	add	x0, x0, #0x4e0
    b920:	bl	58e0 <__assert_fail@plt>
    b924:	add	x6, x6, #0x1
    b928:	cmp	x4, #0x1
    b92c:	ccmp	x20, x6, #0x0, ne  // ne = any
    b930:	b.hi	b794 <Perl__inverse_folds@plt+0x5d94>  // b.pmore
    b934:	mov	x5, #0x0                   	// #0
    b938:	mov	x4, #0x0                   	// #0
    b93c:	mov	x2, #0x0                   	// #0
    b940:	sub	x1, x20, x19
    b944:	mov	x0, x19
    b948:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    b94c:	mov	x23, x0
    b950:	b	b7c8 <Perl__inverse_folds@plt+0x5dc8>
    b954:	mov	w2, #0x2                   	// #2
    b958:	mov	x0, x21
    b95c:	bl	5080 <Perl_custom_op_get_field@plt>
    b960:	mov	x4, x0
    b964:	b	b7fc <Perl__inverse_folds@plt+0x5dfc>
    b968:	cmp	w22, #0xf
    b96c:	b.ne	bca0 <Perl__inverse_folds@plt+0x62a0>  // b.any
    b970:	ldr	x23, [sp, #48]
    b974:	b	b9d8 <Perl__inverse_folds@plt+0x5fd8>
    b978:	cmp	w22, #0xc
    b97c:	b.eq	bb24 <Perl__inverse_folds@plt+0x6124>  // b.none
    b980:	b.hi	b9d0 <Perl__inverse_folds@plt+0x5fd0>  // b.pmore
    b984:	cmp	w22, #0xa
    b988:	b.eq	ba0c <Perl__inverse_folds@plt+0x600c>  // b.none
    b98c:	cmp	w22, #0xb
    b990:	b.ne	bb84 <Perl__inverse_folds@plt+0x6184>  // b.any
    b994:	ldrb	w1, [x19]
    b998:	cmp	w1, #0xe1
    b99c:	b.eq	babc <Perl__inverse_folds@plt+0x60bc>  // b.none
    b9a0:	cmp	w1, #0xe2
    b9a4:	b.eq	badc <Perl__inverse_folds@plt+0x60dc>  // b.none
    b9a8:	mov	w0, #0x0                   	// #0
    b9ac:	cmp	w1, #0xe3
    b9b0:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    b9b4:	ldrb	w1, [x19, #1]
    b9b8:	cmp	w1, #0x80
    b9bc:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    b9c0:	ldrb	w0, [x19, #2]
    b9c4:	cmp	w0, #0x80
    b9c8:	cset	w0, eq  // eq = none
    b9cc:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    b9d0:	cmp	w22, #0xf
    b9d4:	b.ne	bb84 <Perl__inverse_folds@plt+0x6184>  // b.any
    b9d8:	ldrb	w1, [x19]
    b9dc:	mov	w0, #0x0                   	// #0
    b9e0:	cmp	w1, #0xe2
    b9e4:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    b9e8:	ldrb	w1, [x19, #1]
    b9ec:	cmp	w1, #0x80
    b9f0:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    b9f4:	ldrb	w0, [x19, #2]
    b9f8:	sub	w0, w0, #0xa8
    b9fc:	cmp	w0, #0x1
    ba00:	cset	w0, ls  // ls = plast
    ba04:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    ba08:	ldr	x23, [sp, #48]
    ba0c:	ldrb	w1, [x19]
    ba10:	cmp	w1, #0xe1
    ba14:	b.eq	ba48 <Perl__inverse_folds@plt+0x6048>  // b.none
    ba18:	cmp	w1, #0xe2
    ba1c:	b.eq	ba68 <Perl__inverse_folds@plt+0x6068>  // b.none
    ba20:	mov	w0, #0x0                   	// #0
    ba24:	cmp	w1, #0xe3
    ba28:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    ba2c:	ldrb	w1, [x19, #1]
    ba30:	cmp	w1, #0x80
    ba34:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    ba38:	ldrb	w0, [x19, #2]
    ba3c:	cmp	w0, #0x80
    ba40:	cset	w0, eq  // eq = none
    ba44:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    ba48:	ldrb	w1, [x19, #1]
    ba4c:	mov	w0, #0x0                   	// #0
    ba50:	cmp	w1, #0x9a
    ba54:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    ba58:	ldrb	w0, [x19, #2]
    ba5c:	cmp	w0, #0x80
    ba60:	cset	w0, eq  // eq = none
    ba64:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    ba68:	ldrb	w1, [x19, #1]
    ba6c:	cmp	w1, #0x80
    ba70:	b.eq	ba90 <Perl__inverse_folds@plt+0x6090>  // b.none
    ba74:	mov	w0, #0x0                   	// #0
    ba78:	cmp	w1, #0x81
    ba7c:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    ba80:	ldrb	w0, [x19, #2]
    ba84:	cmp	w0, #0x9f
    ba88:	cset	w0, eq  // eq = none
    ba8c:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    ba90:	ldrb	w1, [x19, #2]
    ba94:	sub	w2, w1, #0x80
    ba98:	mov	w0, #0x1                   	// #1
    ba9c:	cmp	w2, #0xa
    baa0:	b.ls	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.plast
    baa4:	sub	w0, w1, #0xa8
    baa8:	cmp	w0, #0x1
    baac:	cset	w0, ls  // ls = plast
    bab0:	cmp	w1, #0xaf
    bab4:	csinc	w0, w0, wzr, ne  // ne = any
    bab8:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    babc:	ldrb	w1, [x19, #1]
    bac0:	mov	w0, #0x0                   	// #0
    bac4:	cmp	w1, #0x9a
    bac8:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    bacc:	ldrb	w0, [x19, #2]
    bad0:	cmp	w0, #0x80
    bad4:	cset	w0, eq  // eq = none
    bad8:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    badc:	ldrb	w1, [x19, #1]
    bae0:	cmp	w1, #0x80
    bae4:	b.eq	bb04 <Perl__inverse_folds@plt+0x6104>  // b.none
    bae8:	mov	w0, #0x0                   	// #0
    baec:	cmp	w1, #0x81
    baf0:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    baf4:	ldrb	w0, [x19, #2]
    baf8:	cmp	w0, #0x9f
    bafc:	cset	w0, eq  // eq = none
    bb00:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    bb04:	ldrb	w1, [x19, #2]
    bb08:	sub	w0, w1, #0x80
    bb0c:	cmp	w0, #0xa
    bb10:	cset	w0, ls  // ls = plast
    bb14:	cmp	w1, #0xaf
    bb18:	csinc	w0, w0, wzr, ne  // ne = any
    bb1c:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    bb20:	ldr	x23, [sp, #48]
    bb24:	ldrb	w1, [x19]
    bb28:	mov	w0, #0x0                   	// #0
    bb2c:	cmp	w1, #0xef
    bb30:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    bb34:	ldrb	w1, [x19, #1]
    bb38:	cmp	w1, #0xbc
    bb3c:	b.eq	bb60 <Perl__inverse_folds@plt+0x6160>  // b.none
    bb40:	mov	w0, #0x0                   	// #0
    bb44:	cmp	w1, #0xbd
    bb48:	b.ne	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.any
    bb4c:	ldrb	w0, [x19, #2]
    bb50:	sub	w0, w0, #0x81
    bb54:	cmp	w0, #0x5
    bb58:	cset	w0, ls  // ls = plast
    bb5c:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    bb60:	ldrb	w1, [x19, #2]
    bb64:	sub	w2, w1, #0x90
    bb68:	mov	w0, #0x1                   	// #1
    bb6c:	cmp	w2, #0x9
    bb70:	b.ls	b89c <Perl__inverse_folds@plt+0x5e9c>  // b.plast
    bb74:	sub	w1, w1, #0xa1
    bb78:	cmp	w1, #0x5
    bb7c:	cset	w0, ls  // ls = plast
    bb80:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    bb84:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    bb88:	ldr	x0, [x0, #3928]
    bb8c:	ldr	x22, [x0, w22, sxtw #3]
    bb90:	cmp	x19, x20
    bb94:	b.cs	bc20 <Perl__inverse_folds@plt+0x6220>  // b.hs, b.nlast
    bb98:	mov	w1, #0x2c                  	// #44
    bb9c:	mov	x0, x21
    bba0:	bl	52a0 <Perl_ckwarn_d@plt>
    bba4:	ands	w0, w0, #0xff
    bba8:	mov	w3, #0x9e                  	// #158
    bbac:	csel	w3, w3, wzr, eq  // eq = none
    bbb0:	mov	x0, x19
    bbb4:	mov	x1, #0x0                   	// #0
    bbb8:	mov	x6, #0x0                   	// #0
    bbbc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    bbc0:	ldr	x9, [x2, #3824]
    bbc4:	mov	w8, #0xff                  	// #255
    bbc8:	mov	x7, x9
    bbcc:	ldrb	w5, [x0]
    bbd0:	ldrb	w2, [x9, w5, sxtw]
    bbd4:	and	x4, x2, #0xff
    bbd8:	asr	w2, w8, w2
    bbdc:	and	w2, w2, w5
    bbe0:	sxtw	x2, w2
    bbe4:	bfi	x5, x1, #6, #58
    bbe8:	cmp	x6, #0x0
    bbec:	csel	x1, x5, x2, ne  // ne = any
    bbf0:	add	x2, x7, x4
    bbf4:	add	x2, x2, x6
    bbf8:	ldrb	w6, [x2, #256]
    bbfc:	cbnz	x6, bc48 <Perl__inverse_folds@plt+0x6248>
    bc00:	mov	x0, x22
    bc04:	bl	59d0 <Perl__invlist_search@plt>
    bc08:	cbz	x22, bc78 <Perl__inverse_folds@plt+0x6278>
    bc0c:	mvn	x1, x0
    bc10:	and	x1, x1, #0x1
    bc14:	cmp	x0, #0x0
    bc18:	csel	w0, w1, wzr, ge  // ge = tcont
    bc1c:	b	b89c <Perl__inverse_folds@plt+0x5e9c>
    bc20:	str	x23, [sp, #48]
    bc24:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    bc28:	add	x3, x3, #0x330
    bc2c:	add	x3, x3, #0xb80
    bc30:	mov	w2, #0x208                 	// #520
    bc34:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    bc38:	add	x1, x1, #0xcb0
    bc3c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    bc40:	add	x0, x0, #0x530
    bc44:	bl	58e0 <__assert_fail@plt>
    bc48:	add	x0, x0, #0x1
    bc4c:	cmp	x6, #0x1
    bc50:	ccmp	x20, x0, #0x0, ne  // ne = any
    bc54:	b.hi	bbcc <Perl__inverse_folds@plt+0x61cc>  // b.pmore
    bc58:	mov	x5, #0x0                   	// #0
    bc5c:	mov	x4, #0x0                   	// #0
    bc60:	mov	x2, #0x0                   	// #0
    bc64:	sub	x1, x20, x19
    bc68:	mov	x0, x19
    bc6c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    bc70:	mov	x1, x0
    bc74:	b	bc00 <Perl__inverse_folds@plt+0x6200>
    bc78:	str	x23, [sp, #48]
    bc7c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    bc80:	add	x3, x3, #0x330
    bc84:	add	x3, x3, #0xb90
    bc88:	mov	w2, #0x3f                  	// #63
    bc8c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    bc90:	add	x1, x1, #0x550
    bc94:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    bc98:	add	x0, x0, #0x568
    bc9c:	bl	58e0 <__assert_fail@plt>
    bca0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    bca4:	ldr	x0, [x0, #3928]
    bca8:	ldr	x22, [x0, w22, sxtw #3]
    bcac:	ldr	x23, [sp, #48]
    bcb0:	b	bb98 <Perl__inverse_folds@plt+0x6198>
    bcb4:	stp	x29, x30, [sp, #-112]!
    bcb8:	mov	x29, sp
    bcbc:	stp	x19, x20, [sp, #16]
    bcc0:	stp	x21, x22, [sp, #32]
    bcc4:	stp	x23, x24, [sp, #48]
    bcc8:	stp	x25, x26, [sp, #64]
    bccc:	stp	x27, x28, [sp, #80]
    bcd0:	mov	x24, x0
    bcd4:	mov	x26, x1
    bcd8:	mov	x19, x2
    bcdc:	mov	x23, x3
    bce0:	mov	x25, x4
    bce4:	and	w27, w5, #0xff
    bce8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    bcec:	ldr	x0, [x0, #3920]
    bcf0:	ldr	x1, [x0]
    bcf4:	str	x1, [sp, #104]
    bcf8:	mov	x1, #0x0                   	// #0
    bcfc:	ldrb	w0, [x2, #1]
    bd00:	mov	w21, #0x0                   	// #0
    bd04:	cmp	w0, #0x16
    bd08:	b.eq	bd10 <Perl__inverse_folds@plt+0x6310>  // b.none
    bd0c:	ldrb	w21, [x2]
    bd10:	ldrb	w22, [x23]
    bd14:	cbz	x25, bdac <Perl__inverse_folds@plt+0x63ac>
    bd18:	cmp	x22, #0x7f
    bd1c:	cset	w20, hi  // hi = pmore
    bd20:	ands	w20, w27, w20
    bd24:	b.ne	bdd0 <Perl__inverse_folds@plt+0x63d0>  // b.any
    bd28:	ldrb	w1, [x19, #1]
    bd2c:	cmp	w1, #0x16
    bd30:	b.eq	c160 <Perl__inverse_folds@plt+0x6760>  // b.none
    bd34:	add	x2, x19, #0x8
    bd38:	lsr	x0, x22, #3
    bd3c:	ldrb	w0, [x2, x0]
    bd40:	and	w3, w22, #0x7
    bd44:	lsr	w0, w0, w3
    bd48:	and	w20, w0, #0x1
    bd4c:	tbnz	w0, #0, bf10 <Perl__inverse_folds@plt+0x6510>
    bd50:	tst	x21, #0x80
    bd54:	ccmp	w1, #0x13, #0x0, ne  // ne = any
    bd58:	b.eq	c040 <Perl__inverse_folds@plt+0x6640>  // b.none
    bd5c:	tst	w21, #0x6
    bd60:	b.eq	c160 <Perl__inverse_folds@plt+0x6760>  // b.none
    bd64:	tbz	w21, #2, bd8c <Perl__inverse_folds@plt+0x638c>
    bd68:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    bd6c:	ldr	x0, [x0, #3816]
    bd70:	ldrb	w1, [x0, x22]
    bd74:	ubfx	x0, x1, #3, #5
    bd78:	ldrb	w0, [x2, x0]
    bd7c:	and	w1, w1, #0x7
    bd80:	lsr	w0, w0, w1
    bd84:	and	w20, w0, #0x1
    bd88:	tbnz	w0, #0, bf10 <Perl__inverse_folds@plt+0x6510>
    bd8c:	ldrb	w0, [x19]
    bd90:	tbz	w0, #1, c160 <Perl__inverse_folds@plt+0x6760>
    bd94:	ldr	w0, [x19, #40]
    bd98:	cbz	w0, c160 <Perl__inverse_folds@plt+0x6760>
    bd9c:	mov	w25, #0x0                   	// #0
    bda0:	mov	w20, #0x0                   	// #0
    bda4:	mov	w28, #0x1                   	// #1
    bda8:	b	c068 <Perl__inverse_folds@plt+0x6668>
    bdac:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    bdb0:	add	x3, x3, #0x330
    bdb4:	add	x3, x3, #0xba8
    bdb8:	mov	w2, #0x267b                	// #9851
    bdbc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    bdc0:	add	x1, x1, #0xcb0
    bdc4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    bdc8:	add	x0, x0, #0x570
    bdcc:	bl	58e0 <__assert_fail@plt>
    bdd0:	str	xzr, [sp, #96]
    bdd4:	cmp	x23, x25
    bdd8:	b.cs	bf60 <Perl__inverse_folds@plt+0x6560>  // b.hs, b.nlast
    bddc:	mov	x2, x23
    bde0:	mov	x22, #0x0                   	// #0
    bde4:	mov	x4, #0x0                   	// #0
    bde8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    bdec:	ldr	x7, [x0, #3824]
    bdf0:	mov	w6, #0xff                  	// #255
    bdf4:	mov	x5, x7
    bdf8:	ldrb	w3, [x2]
    bdfc:	ldrb	w1, [x7, w3, sxtw]
    be00:	and	x0, x1, #0xff
    be04:	asr	w1, w6, w1
    be08:	and	w1, w1, w3
    be0c:	sxtw	x1, w1
    be10:	bfi	x3, x22, #6, #58
    be14:	cmp	x4, #0x0
    be18:	csel	x22, x3, x1, ne  // ne = any
    be1c:	add	x0, x5, x0
    be20:	add	x0, x0, x4
    be24:	ldrb	w4, [x0, #256]
    be28:	cbnz	x4, bf50 <Perl__inverse_folds@plt+0x6550>
    be2c:	sub	x2, x2, x23
    be30:	add	x2, x2, #0x1
    be34:	str	x2, [sp, #96]
    be38:	ldr	x0, [sp, #96]
    be3c:	cmn	x0, #0x1
    be40:	b.eq	bf84 <Perl__inverse_folds@plt+0x6584>  // b.none
    be44:	cmp	x22, #0xff
    be48:	b.ls	bd28 <Perl__inverse_folds@plt+0x6328>  // b.plast
    be4c:	ldrb	w0, [x19, #1]
    be50:	sub	w0, w0, #0x14
    be54:	and	w0, w0, #0xff
    be58:	cmp	w0, #0x1
    be5c:	b.ls	bfc0 <Perl__inverse_folds@plt+0x65c0>  // b.plast
    be60:	tbnz	w21, #5, bee0 <Perl__inverse_folds@plt+0x64e0>
    be64:	ldr	w0, [x19, #4]
    be68:	mov	w20, #0x0                   	// #0
    be6c:	cmn	w0, #0x1
    be70:	b.eq	becc <Perl__inverse_folds@plt+0x64cc>  // b.none
    be74:	str	xzr, [sp, #96]
    be78:	mov	x6, #0x0                   	// #0
    be7c:	add	x5, sp, #0x60
    be80:	mov	x4, #0x0                   	// #0
    be84:	mov	w3, #0x1                   	// #1
    be88:	mov	x2, x19
    be8c:	mov	x1, x26
    be90:	mov	x0, x24
    be94:	bl	5790 <Perl__get_regclass_nonbitmap_data@plt>
    be98:	cbz	x0, beb8 <Perl__inverse_folds@plt+0x64b8>
    be9c:	ldrb	w20, [x24, #1182]
    bea0:	cbnz	w20, c0a8 <Perl__inverse_folds@plt+0x66a8>
    bea4:	mov	x1, x22
    bea8:	bl	59d0 <Perl__invlist_search@plt>
    beac:	tbnz	x0, #63, beb8 <Perl__inverse_folds@plt+0x64b8>
    beb0:	mov	w20, #0x1                   	// #1
    beb4:	tbz	w0, #0, becc <Perl__inverse_folds@plt+0x64cc>
    beb8:	ldr	x0, [sp, #96]
    bebc:	mov	w20, #0x0                   	// #0
    bec0:	cbz	x0, becc <Perl__inverse_folds@plt+0x64cc>
    bec4:	ldrb	w20, [x24, #1180]
    bec8:	cbnz	w20, c0f0 <Perl__inverse_folds@plt+0x66f0>
    becc:	ldrb	w0, [x24, #1182]
    bed0:	eor	w0, w0, #0x1
    bed4:	orr	w0, w20, w0
    bed8:	tst	w0, #0xff
    bedc:	b.eq	c1a0 <Perl__inverse_folds@plt+0x67a0>  // b.none
    bee0:	tst	x21, #0x80
    bee4:	mov	w0, #0x10ffff              	// #1114111
    bee8:	ccmp	x22, x0, #0x0, ne  // ne = any
    beec:	b.ls	bf10 <Perl__inverse_folds@plt+0x6510>  // b.plast
    bef0:	ldrb	w0, [x19, #1]
    bef4:	cmp	w0, #0x13
    bef8:	b.eq	bf10 <Perl__inverse_folds@plt+0x6510>  // b.none
    befc:	mov	w1, #0x30                  	// #48
    bf00:	mov	x0, x24
    bf04:	bl	52a0 <Perl_ckwarn_d@plt>
    bf08:	and	w0, w0, #0xff
    bf0c:	cbnz	w0, c118 <Perl__inverse_folds@plt+0x6718>
    bf10:	and	w21, w21, #0x1
    bf14:	cmp	w21, w20
    bf18:	cset	w0, ne  // ne = any
    bf1c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    bf20:	ldr	x1, [x1, #3920]
    bf24:	ldr	x2, [sp, #104]
    bf28:	ldr	x1, [x1]
    bf2c:	eor	x1, x2, x1
    bf30:	cbnz	x1, c1cc <Perl__inverse_folds@plt+0x67cc>
    bf34:	ldp	x19, x20, [sp, #16]
    bf38:	ldp	x21, x22, [sp, #32]
    bf3c:	ldp	x23, x24, [sp, #48]
    bf40:	ldp	x25, x26, [sp, #64]
    bf44:	ldp	x27, x28, [sp, #80]
    bf48:	ldp	x29, x30, [sp], #112
    bf4c:	ret
    bf50:	add	x2, x2, #0x1
    bf54:	cmp	x4, #0x1
    bf58:	ccmp	x25, x2, #0x0, ne  // ne = any
    bf5c:	b.hi	bdf8 <Perl__inverse_folds@plt+0x63f8>  // b.pmore
    bf60:	mov	x5, #0x0                   	// #0
    bf64:	mov	x4, #0x0                   	// #0
    bf68:	mov	w3, #0x10000               	// #65536
    bf6c:	add	x2, sp, #0x60
    bf70:	sub	x1, x25, x23
    bf74:	mov	x0, x23
    bf78:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    bf7c:	mov	x22, x0
    bf80:	b	be38 <Perl__inverse_folds@plt+0x6438>
    bf84:	mov	w4, #0x1                   	// #1
    bf88:	mov	w3, #0x0                   	// #0
    bf8c:	mov	x2, x25
    bf90:	mov	x1, x23
    bf94:	mov	x0, x24
    bf98:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    bf9c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    bfa0:	add	x3, x3, #0x330
    bfa4:	add	x3, x3, #0xba8
    bfa8:	mov	w2, #0x2687                	// #9863
    bfac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    bfb0:	add	x1, x1, #0xcb0
    bfb4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    bfb8:	add	x0, x0, #0x110
    bfbc:	bl	58e0 <__assert_fail@plt>
    bfc0:	and	w0, w21, #0xc
    bfc4:	cmp	w0, #0x8
    bfc8:	b.eq	be60 <Perl__inverse_folds@plt+0x6460>  // b.none
    bfcc:	ldrb	w0, [x24, #1180]
    bfd0:	cbnz	w0, be60 <Perl__inverse_folds@plt+0x6460>
    bfd4:	mov	w1, #0x3f                  	// #63
    bfd8:	mov	x0, x24
    bfdc:	bl	5870 <Perl_ckwarn@plt>
    bfe0:	and	w0, w0, #0xff
    bfe4:	cbz	w0, be60 <Perl__inverse_folds@plt+0x6460>
    bfe8:	ldr	x1, [x24, #8]
    bfec:	ldrh	w0, [x1, #32]
    bff0:	and	w0, w0, #0x1ff
    bff4:	cmp	w0, #0x17f
    bff8:	b.eq	c02c <Perl__inverse_folds@plt+0x662c>  // b.none
    bffc:	ldrh	w1, [x1, #32]
    c000:	and	x1, x1, #0x1ff
    c004:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    c008:	ldr	x0, [x0, #4008]
    c00c:	ldr	x4, [x0, x1, lsl #3]
    c010:	mov	x3, x22
    c014:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    c018:	add	x2, x2, #0x510
    c01c:	mov	w1, #0x3f                  	// #63
    c020:	mov	x0, x24
    c024:	bl	5110 <Perl_warner@plt>
    c028:	b	be60 <Perl__inverse_folds@plt+0x6460>
    c02c:	mov	w2, #0x2                   	// #2
    c030:	mov	x0, x24
    c034:	bl	5080 <Perl_custom_op_get_field@plt>
    c038:	mov	x4, x0
    c03c:	b	c010 <Perl__inverse_folds@plt+0x6610>
    c040:	eor	w20, w27, #0x1
    c044:	cmp	x22, #0x7f
    c048:	cset	w1, hi  // hi = pmore
    c04c:	ands	w20, w1, w20
    c050:	b.ne	bf10 <Perl__inverse_folds@plt+0x6510>  // b.any
    c054:	b	bd5c <Perl__inverse_folds@plt+0x635c>
    c058:	add	w20, w20, #0x1
    c05c:	eor	w25, w25, #0x1
    c060:	cmp	w20, #0x1e
    c064:	b.eq	c160 <Perl__inverse_folds@plt+0x6760>  // b.none
    c068:	lsl	w0, w28, w20
    c06c:	ldr	w1, [x19, #40]
    c070:	tst	w0, w1
    c074:	b.eq	c058 <Perl__inverse_folds@plt+0x6658>  // b.none
    c078:	add	w1, w20, w20, lsr #31
    c07c:	mov	w2, w22
    c080:	ubfx	x1, x1, #1, #8
    c084:	mov	x0, x24
    c088:	bl	5350 <Perl_isFOO_lc@plt>
    c08c:	cmp	w25, w0, uxtb
    c090:	b.eq	c058 <Perl__inverse_folds@plt+0x6658>  // b.none
    c094:	mov	w20, #0x1                   	// #1
    c098:	b	bf10 <Perl__inverse_folds@plt+0x6510>
    c09c:	ldrb	w0, [x24, #1180]
    c0a0:	cbz	w0, c198 <Perl__inverse_folds@plt+0x6798>
    c0a4:	b	be74 <Perl__inverse_folds@plt+0x6474>
    c0a8:	ldrb	w1, [x23]
    c0ac:	and	w2, w1, #0xffffffdf
    c0b0:	cmp	w2, #0x49
    c0b4:	b.ne	bea4 <Perl__inverse_folds@plt+0x64a4>  // b.any
    c0b8:	cmp	w1, #0x69
    c0bc:	b.eq	c0dc <Perl__inverse_folds@plt+0x66dc>  // b.none
    c0c0:	cmp	w1, #0x49
    c0c4:	b.ne	beb8 <Perl__inverse_folds@plt+0x64b8>  // b.any
    c0c8:	mov	x1, #0x131                 	// #305
    c0cc:	bl	59d0 <Perl__invlist_search@plt>
    c0d0:	tbnz	x0, #63, beb8 <Perl__inverse_folds@plt+0x64b8>
    c0d4:	tbz	w0, #0, becc <Perl__inverse_folds@plt+0x64cc>
    c0d8:	b	beb8 <Perl__inverse_folds@plt+0x64b8>
    c0dc:	mov	x1, #0x130                 	// #304
    c0e0:	bl	59d0 <Perl__invlist_search@plt>
    c0e4:	tbnz	x0, #63, beb8 <Perl__inverse_folds@plt+0x64b8>
    c0e8:	tbz	w0, #0, becc <Perl__inverse_folds@plt+0x64cc>
    c0ec:	b	beb8 <Perl__inverse_folds@plt+0x64b8>
    c0f0:	mov	x1, x22
    c0f4:	bl	59d0 <Perl__invlist_search@plt>
    c0f8:	mvn	x20, x0
    c0fc:	and	x20, x20, #0x1
    c100:	cmp	x0, #0x0
    c104:	csel	w20, w20, wzr, ge  // ge = tcont
    c108:	b	becc <Perl__inverse_folds@plt+0x64cc>
    c10c:	ldrb	w20, [x19, #21]
    c110:	ubfx	x20, x20, #1, #1
    c114:	b	bf10 <Perl__inverse_folds@plt+0x6510>
    c118:	mov	x3, x22
    c11c:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    c120:	add	x2, x2, #0x578
    c124:	mov	w1, #0x30                  	// #48
    c128:	mov	x0, x24
    c12c:	bl	5110 <Perl_warner@plt>
    c130:	b	bf10 <Perl__inverse_folds@plt+0x6510>
    c134:	str	xzr, [sp, #96]
    c138:	mov	x6, #0x0                   	// #0
    c13c:	add	x5, sp, #0x60
    c140:	mov	x4, #0x0                   	// #0
    c144:	mov	w3, #0x1                   	// #1
    c148:	mov	x2, x19
    c14c:	mov	x1, x26
    c150:	mov	x0, x24
    c154:	bl	5790 <Perl__get_regclass_nonbitmap_data@plt>
    c158:	cbnz	x0, be9c <Perl__inverse_folds@plt+0x649c>
    c15c:	b	beb8 <Perl__inverse_folds@plt+0x64b8>
    c160:	ldr	w0, [x19, #4]
    c164:	mov	w20, #0x0                   	// #0
    c168:	cmn	w0, #0x1
    c16c:	b.eq	becc <Perl__inverse_folds@plt+0x64cc>  // b.none
    c170:	tbz	w21, #6, c18c <Perl__inverse_folds@plt+0x678c>
    c174:	ldrb	w0, [x19, #1]
    c178:	cmp	w0, #0x13
    c17c:	b.ne	be74 <Perl__inverse_folds@plt+0x6474>  // b.any
    c180:	cmp	x22, #0x7f
    c184:	ccmp	w27, #0x0, #0x4, hi  // hi = pmore
    c188:	b.ne	c134 <Perl__inverse_folds@plt+0x6734>  // b.any
    c18c:	and	w0, w21, #0xc
    c190:	cmp	w0, #0xc
    c194:	b.eq	c09c <Perl__inverse_folds@plt+0x669c>  // b.none
    c198:	ldrb	w20, [x24, #1182]
    c19c:	cbz	w20, bf10 <Perl__inverse_folds@plt+0x6510>
    c1a0:	ubfx	x20, x21, #2, #1
    c1a4:	ands	w20, w27, w20
    c1a8:	b.eq	bee0 <Perl__inverse_folds@plt+0x64e0>  // b.none
    c1ac:	cmp	x22, #0x130
    c1b0:	b.eq	c10c <Perl__inverse_folds@plt+0x670c>  // b.none
    c1b4:	mov	w20, #0x0                   	// #0
    c1b8:	cmp	x22, #0x131
    c1bc:	b.ne	bee0 <Perl__inverse_folds@plt+0x64e0>  // b.any
    c1c0:	ldrb	w20, [x19, #17]
    c1c4:	ubfx	x20, x20, #1, #1
    c1c8:	b	bf10 <Perl__inverse_folds@plt+0x6510>
    c1cc:	bl	5300 <__stack_chk_fail@plt>

000000000000c1d0 <Perl_re_exec_indentf@@Base>:
    c1d0:	stp	x29, x30, [sp, #-304]!
    c1d4:	mov	x29, sp
    c1d8:	stp	x19, x20, [sp, #16]
    c1dc:	str	x21, [sp, #32]
    c1e0:	mov	x20, x1
    c1e4:	mov	w19, w2
    c1e8:	str	x3, [sp, #264]
    c1ec:	str	x4, [sp, #272]
    c1f0:	str	x5, [sp, #280]
    c1f4:	str	x6, [sp, #288]
    c1f8:	str	x7, [sp, #296]
    c1fc:	str	q0, [sp, #128]
    c200:	str	q1, [sp, #144]
    c204:	str	q2, [sp, #160]
    c208:	str	q3, [sp, #176]
    c20c:	str	q4, [sp, #192]
    c210:	str	q5, [sp, #208]
    c214:	str	q6, [sp, #224]
    c218:	str	q7, [sp, #240]
    c21c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    c220:	ldr	x1, [x1, #3920]
    c224:	ldr	x2, [x1]
    c228:	str	x2, [sp, #120]
    c22c:	mov	x2, #0x0                   	// #0
    c230:	bl	58f0 <Perl_PerlIO_stderr@plt>
    c234:	cbz	x20, c2e8 <Perl_re_exec_indentf@@Base+0x118>
    c238:	mov	x21, x0
    c23c:	add	x0, sp, #0x130
    c240:	str	x0, [sp, #88]
    c244:	str	x0, [sp, #96]
    c248:	add	x0, sp, #0x100
    c24c:	str	x0, [sp, #104]
    c250:	mov	w0, #0xffffffd8            	// #-40
    c254:	str	w0, [sp, #112]
    c258:	mov	w0, #0xffffff80            	// #-128
    c25c:	str	w0, [sp, #116]
    c260:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
    c264:	add	x3, x3, #0x20
    c268:	mov	w5, #0x6667                	// #26215
    c26c:	movk	w5, #0x6666, lsl #16
    c270:	smull	x5, w19, w5
    c274:	asr	x5, x5, #35
    c278:	sub	w5, w5, w19, asr #31
    c27c:	add	w5, w5, w5, lsl #2
    c280:	mov	x6, x3
    c284:	sub	w5, w19, w5, lsl #2
    c288:	mov	w4, w19
    c28c:	mov	w2, #0x1d                  	// #29
    c290:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    c294:	add	x1, x1, #0x5d8
    c298:	mov	x0, x21
    c29c:	bl	5730 <PerlIO_printf@plt>
    c2a0:	ldp	x0, x1, [sp, #88]
    c2a4:	stp	x0, x1, [sp, #48]
    c2a8:	ldp	x0, x1, [sp, #104]
    c2ac:	stp	x0, x1, [sp, #64]
    c2b0:	add	x2, sp, #0x30
    c2b4:	mov	x1, x20
    c2b8:	mov	x0, x21
    c2bc:	bl	5480 <PerlIO_vprintf@plt>
    c2c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    c2c4:	ldr	x1, [x1, #3920]
    c2c8:	ldr	x2, [sp, #120]
    c2cc:	ldr	x1, [x1]
    c2d0:	eor	x1, x2, x1
    c2d4:	cbnz	x1, c30c <Perl_re_exec_indentf@@Base+0x13c>
    c2d8:	ldp	x19, x20, [sp, #16]
    c2dc:	ldr	x21, [sp, #32]
    c2e0:	ldp	x29, x30, [sp], #304
    c2e4:	ret
    c2e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c2ec:	add	x3, x3, #0x330
    c2f0:	add	x3, x3, #0xbb8
    c2f4:	mov	w2, #0xf9e                 	// #3998
    c2f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c2fc:	add	x1, x1, #0xcb0
    c300:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c304:	add	x0, x0, #0x5d0
    c308:	bl	58e0 <__assert_fail@plt>
    c30c:	bl	5300 <__stack_chk_fail@plt>
    c310:	stp	x29, x30, [sp, #-112]!
    c314:	mov	x29, sp
    c318:	stp	x19, x20, [sp, #16]
    c31c:	stp	x21, x22, [sp, #32]
    c320:	stp	x23, x24, [sp, #48]
    c324:	mov	x19, x0
    c328:	mov	x20, x1
    c32c:	mov	x23, x2
    c330:	mov	w24, w3
    c334:	str	xzr, [sp, #104]
    c338:	ldr	x0, [x0, #224]
    c33c:	cbz	x0, c3a4 <Perl_re_exec_indentf@@Base+0x1d4>
    c340:	mov	w2, #0x1                   	// #1
    c344:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    c348:	add	x1, x1, #0x608
    c34c:	mov	x0, x19
    c350:	bl	54f0 <Perl_get_sv@plt>
    c354:	mov	x21, x0
    c358:	cbz	x0, c3a4 <Perl_re_exec_indentf@@Base+0x1d4>
    c35c:	ldr	w0, [x0, #12]
    c360:	tbz	w0, #8, c470 <Perl_re_exec_indentf@@Base+0x2a0>
    c364:	ldr	w1, [x21, #12]
    c368:	and	w0, w1, #0x3fff00
    c36c:	and	w0, w0, #0xffe001ff
    c370:	cmp	w0, #0x100
    c374:	b.ne	c4ec <Perl_re_exec_indentf@@Base+0x31c>  // b.any
    c378:	and	w2, w1, #0xf
    c37c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    c380:	ldr	x0, [x0, #3712]
    c384:	ldrb	w0, [x0, w2, uxtw]
    c388:	cbz	w0, c484 <Perl_re_exec_indentf@@Base+0x2b4>
    c38c:	and	w0, w1, #0xc000
    c390:	cmp	w0, #0x8, lsl #12
    c394:	b.eq	c4b0 <Perl_re_exec_indentf@@Base+0x2e0>  // b.none
    c398:	ldr	x0, [x21]
    c39c:	ldr	x0, [x0, #32]
    c3a0:	str	x0, [sp, #104]
    c3a4:	cbz	x20, c500 <Perl_re_exec_indentf@@Base+0x330>
    c3a8:	cbz	x23, c52c <Perl_re_exec_indentf@@Base+0x35c>
    c3ac:	ldr	x1, [x19, #40]
    c3b0:	ldr	w0, [x19, #48]
    c3b4:	sub	w2, w0, #0x1
    c3b8:	str	w2, [x19, #48]
    c3bc:	ldr	x22, [x1, w2, sxtw #3]
    c3c0:	and	x2, x22, #0x3f
    c3c4:	cmp	x2, #0x3
    c3c8:	b.ne	c558 <Perl_re_exec_indentf@@Base+0x388>  // b.any
    c3cc:	lsr	x22, x22, #6
    c3d0:	sub	w0, w0, #0x2
    c3d4:	str	w0, [x19, #48]
    c3d8:	sbfiz	x0, x0, #3, #32
    c3dc:	ldr	w0, [x1, x0]
    c3e0:	str	w0, [x20, #116]
    c3e4:	ldr	x1, [x19, #40]
    c3e8:	ldr	w0, [x19, #48]
    c3ec:	sub	w0, w0, #0x1
    c3f0:	str	w0, [x19, #48]
    c3f4:	sbfiz	x0, x0, #3, #32
    c3f8:	ldr	w0, [x1, x0]
    c3fc:	str	w0, [x20, #112]
    c400:	ldr	x1, [x19, #40]
    c404:	ldr	w0, [x19, #48]
    c408:	sub	w0, w0, #0x1
    c40c:	str	w0, [x19, #48]
    c410:	sbfiz	x0, x0, #3, #32
    c414:	ldr	w0, [x1, x0]
    c418:	str	w0, [x23]
    c41c:	sub	x22, x22, #0x3
    c420:	ldr	w0, [x19, #2368]
    c424:	tbnz	w0, #20, c430 <Perl_re_exec_indentf@@Base+0x260>
    c428:	ldr	x0, [sp, #104]
    c42c:	tbz	w0, #22, c584 <Perl_re_exec_indentf@@Base+0x3b4>
    c430:	cbnz	x22, c448 <Perl_re_exec_indentf@@Base+0x278>
    c434:	ldr	w0, [x20, #112]
    c438:	add	w0, w0, #0x1
    c43c:	ldr	w1, [x20, #96]
    c440:	cmp	w0, w1
    c444:	b.hi	c72c <Perl_re_exec_indentf@@Base+0x55c>  // b.pmore
    c448:	stp	x25, x26, [sp, #64]
    c44c:	str	x27, [sp, #80]
    c450:	ldr	x4, [x20, #120]
    c454:	mov	x3, x20
    c458:	mov	w2, w24
    c45c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    c460:	add	x1, x1, #0x658
    c464:	mov	x0, x19
    c468:	bl	5290 <Perl_re_exec_indentf@plt>
    c46c:	b	c58c <Perl_re_exec_indentf@@Base+0x3bc>
    c470:	mov	x2, #0xff08                	// #65288
    c474:	mov	x1, x21
    c478:	mov	x0, x19
    c47c:	bl	5310 <Perl_sv_setuv@plt>
    c480:	b	c364 <Perl_re_exec_indentf@@Base+0x194>
    c484:	stp	x25, x26, [sp, #64]
    c488:	str	x27, [sp, #80]
    c48c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c490:	add	x3, x3, #0x330
    c494:	add	x3, x3, #0xbd0
    c498:	mov	w2, #0x14b                 	// #331
    c49c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c4a0:	add	x1, x1, #0xcb0
    c4a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    c4a8:	add	x0, x0, #0xda0
    c4ac:	bl	58e0 <__assert_fail@plt>
    c4b0:	and	w0, w1, #0xff
    c4b4:	sub	w0, w0, #0x9
    c4b8:	cmp	w0, #0x1
    c4bc:	b.hi	c398 <Perl_re_exec_indentf@@Base+0x1c8>  // b.pmore
    c4c0:	stp	x25, x26, [sp, #64]
    c4c4:	str	x27, [sp, #80]
    c4c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c4cc:	add	x3, x3, #0x330
    c4d0:	add	x3, x3, #0xbd0
    c4d4:	mov	w2, #0x14b                 	// #331
    c4d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c4dc:	add	x1, x1, #0xcb0
    c4e0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    c4e4:	add	x0, x0, #0xdd0
    c4e8:	bl	58e0 <__assert_fail@plt>
    c4ec:	mov	w2, #0x2                   	// #2
    c4f0:	mov	x1, x21
    c4f4:	mov	x0, x19
    c4f8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    c4fc:	b	c3a0 <Perl_re_exec_indentf@@Base+0x1d0>
    c500:	stp	x25, x26, [sp, #64]
    c504:	str	x27, [sp, #80]
    c508:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c50c:	add	x3, x3, #0x330
    c510:	add	x3, x3, #0xbd0
    c514:	mov	w2, #0x14d                 	// #333
    c518:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c51c:	add	x1, x1, #0xcb0
    c520:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c524:	add	x0, x0, #0x618
    c528:	bl	58e0 <__assert_fail@plt>
    c52c:	stp	x25, x26, [sp, #64]
    c530:	str	x27, [sp, #80]
    c534:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c538:	add	x3, x3, #0x330
    c53c:	add	x3, x3, #0xbd0
    c540:	mov	w2, #0x14d                 	// #333
    c544:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c548:	add	x1, x1, #0xcb0
    c54c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c550:	add	x0, x0, #0x620
    c554:	bl	58e0 <__assert_fail@plt>
    c558:	stp	x25, x26, [sp, #64]
    c55c:	str	x27, [sp, #80]
    c560:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c564:	add	x3, x3, #0x330
    c568:	add	x3, x3, #0xbd0
    c56c:	mov	w2, #0x151                 	// #337
    c570:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c574:	add	x1, x1, #0xcb0
    c578:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c57c:	add	x0, x0, #0x630
    c580:	bl	58e0 <__assert_fail@plt>
    c584:	stp	x25, x26, [sp, #64]
    c588:	str	x27, [sp, #80]
    c58c:	ldr	w21, [x23]
    c590:	cbz	x22, c680 <Perl_re_exec_indentf@@Base+0x4b0>
    c594:	adrp	x26, 62000 <boot_re@@Base+0x41c>
    c598:	add	x26, x26, #0x5e8
    c59c:	adrp	x25, 62000 <boot_re@@Base+0x41c>
    c5a0:	add	x25, x25, #0x690
    c5a4:	adrp	x27, 7d000 <boot_re@@Base+0x1b41c>
    c5a8:	b	c5ec <Perl_re_exec_indentf@@Base+0x41c>
    c5ac:	ldr	x0, [x20, #120]
    c5b0:	add	x1, x0, x1
    c5b4:	ldr	x4, [x0, x4, lsl #3]
    c5b8:	ldr	x5, [x1, #16]
    c5bc:	ldr	x6, [x1, #8]
    c5c0:	ldr	w0, [x20, #112]
    c5c4:	cmp	w0, w21
    c5c8:	b.cc	c678 <Perl_re_exec_indentf@@Base+0x4a8>  // b.lo, b.ul, b.last
    c5cc:	add	x7, x27, #0x20
    c5d0:	mov	w2, w24
    c5d4:	mov	x1, x25
    c5d8:	mov	x0, x19
    c5dc:	bl	5290 <Perl_re_exec_indentf@plt>
    c5e0:	sub	w21, w21, #0x1
    c5e4:	subs	x22, x22, #0x3
    c5e8:	b.eq	c680 <Perl_re_exec_indentf@@Base+0x4b0>  // b.none
    c5ec:	ldr	x5, [x19, #40]
    c5f0:	ldr	w0, [x19, #48]
    c5f4:	sub	w0, w0, #0x1
    c5f8:	str	w0, [x19, #48]
    c5fc:	mov	w3, w21
    c600:	add	x4, x3, w21, uxtw #1
    c604:	lsl	x1, x4, #3
    c608:	ldr	x2, [x20, #120]
    c60c:	add	x2, x2, x1
    c610:	sbfiz	x0, x0, #3, #32
    c614:	ldrsw	x0, [x5, x0]
    c618:	str	x0, [x2, #16]
    c61c:	ldr	x2, [x19, #40]
    c620:	ldr	w0, [x19, #48]
    c624:	sub	w0, w0, #0x1
    c628:	str	w0, [x19, #48]
    c62c:	ldr	x2, [x2, w0, sxtw #3]
    c630:	ldr	x0, [x20, #120]
    c634:	str	x2, [x0, x4, lsl #3]
    c638:	ldr	x5, [x19, #40]
    c63c:	ldr	w0, [x19, #48]
    c640:	sub	w0, w0, #0x1
    c644:	str	w0, [x19, #48]
    c648:	ldr	w2, [x20, #112]
    c64c:	cmp	w2, w21
    c650:	b.cc	c75c <Perl_re_exec_indentf@@Base+0x58c>  // b.lo, b.ul, b.last
    c654:	ldr	x2, [x5, w0, sxtw #3]
    c658:	ldr	x0, [x20, #120]
    c65c:	add	x0, x0, x1
    c660:	str	x2, [x0, #8]
    c664:	ldr	w0, [x19, #2368]
    c668:	tbnz	w0, #20, c5ac <Perl_re_exec_indentf@@Base+0x3dc>
    c66c:	ldr	x0, [sp, #104]
    c670:	tbz	w0, #22, c5e0 <Perl_re_exec_indentf@@Base+0x410>
    c674:	b	c5ac <Perl_re_exec_indentf@@Base+0x3dc>
    c678:	mov	x7, x26
    c67c:	b	c5d0 <Perl_re_exec_indentf@@Base+0x400>
    c680:	ldr	w21, [x20, #112]
    c684:	add	w0, w21, #0x1
    c688:	add	w21, w21, #0x1
    c68c:	ldr	w1, [x20, #96]
    c690:	cmp	w1, w0
    c694:	b.cc	c788 <Perl_re_exec_indentf@@Base+0x5b8>  // b.lo, b.ul, b.last
    c698:	add	x22, x21, x21, lsl #1
    c69c:	lsl	x22, x22, #3
    c6a0:	mov	x25, #0xffffffffffffffff    	// #-1
    c6a4:	adrp	x27, 62000 <boot_re@@Base+0x41c>
    c6a8:	add	x27, x27, #0x600
    c6ac:	adrp	x26, 62000 <boot_re@@Base+0x41c>
    c6b0:	add	x26, x26, #0x5f8
    c6b4:	b	c6f0 <Perl_re_exec_indentf@@Base+0x520>
    c6b8:	ldr	w0, [x23]
    c6bc:	cmp	x21, x0
    c6c0:	csel	x4, x26, x27, hi  // hi = pmore
    c6c4:	mov	x3, x21
    c6c8:	mov	w2, w24
    c6cc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    c6d0:	add	x1, x1, #0x6b0
    c6d4:	mov	x0, x19
    c6d8:	bl	5290 <Perl_re_exec_indentf@plt>
    c6dc:	add	x21, x21, #0x1
    c6e0:	add	x22, x22, #0x18
    c6e4:	ldr	w0, [x20, #96]
    c6e8:	cmp	x0, x21
    c6ec:	b.cc	c724 <Perl_re_exec_indentf@@Base+0x554>  // b.lo, b.ul, b.last
    c6f0:	ldr	w0, [x23]
    c6f4:	cmp	x0, x21
    c6f8:	b.cs	c704 <Perl_re_exec_indentf@@Base+0x534>  // b.hs, b.nlast
    c6fc:	ldr	x0, [x20, #120]
    c700:	str	x25, [x0, x22]
    c704:	ldr	x0, [x20, #120]
    c708:	add	x0, x0, x22
    c70c:	str	x25, [x0, #8]
    c710:	ldr	w0, [x19, #2368]
    c714:	tbnz	w0, #20, c6b8 <Perl_re_exec_indentf@@Base+0x4e8>
    c718:	ldr	x0, [sp, #104]
    c71c:	tbz	w0, #22, c6dc <Perl_re_exec_indentf@@Base+0x50c>
    c720:	b	c6b8 <Perl_re_exec_indentf@@Base+0x4e8>
    c724:	ldp	x25, x26, [sp, #64]
    c728:	ldr	x27, [sp, #80]
    c72c:	ldp	x19, x20, [sp, #16]
    c730:	ldp	x21, x22, [sp, #32]
    c734:	ldp	x23, x24, [sp, #48]
    c738:	ldp	x29, x30, [sp], #112
    c73c:	ret
    c740:	ldr	x0, [x20, #120]
    c744:	add	x1, x0, x1
    c748:	ldr	x4, [x0, x4, lsl #3]
    c74c:	ldr	x5, [x1, #16]
    c750:	ldr	x6, [x1, #8]
    c754:	mov	x7, x26
    c758:	b	c5d0 <Perl_re_exec_indentf@@Base+0x400>
    c75c:	ldr	w0, [x19, #2368]
    c760:	tbnz	w0, #20, c740 <Perl_re_exec_indentf@@Base+0x570>
    c764:	ldr	x0, [sp, #104]
    c768:	tbz	w0, #22, c5e0 <Perl_re_exec_indentf@@Base+0x410>
    c76c:	ldr	x0, [x20, #120]
    c770:	add	x1, x0, x1
    c774:	ldr	x4, [x0, x4, lsl #3]
    c778:	ldr	x5, [x1, #16]
    c77c:	ldr	x6, [x1, #8]
    c780:	mov	x7, x26
    c784:	b	c5d0 <Perl_re_exec_indentf@@Base+0x400>
    c788:	ldp	x25, x26, [sp, #64]
    c78c:	ldr	x27, [sp, #80]
    c790:	b	c72c <Perl_re_exec_indentf@@Base+0x55c>
    c794:	stp	x29, x30, [sp, #-32]!
    c798:	mov	x29, sp
    c79c:	stp	x19, x20, [sp, #16]
    c7a0:	mov	x19, x0
    c7a4:	ldr	w20, [x0, #48]
    c7a8:	cbz	x1, c7d8 <Perl_re_exec_indentf@@Base+0x608>
    c7ac:	mov	w0, w2
    c7b0:	mov	x2, x3
    c7b4:	mov	w3, w4
    c7b8:	cbz	x2, c7fc <Perl_re_exec_indentf@@Base+0x62c>
    c7bc:	str	w0, [x19, #48]
    c7c0:	mov	x0, x19
    c7c4:	bl	c310 <Perl_re_exec_indentf@@Base+0x140>
    c7c8:	str	w20, [x19, #48]
    c7cc:	ldp	x19, x20, [sp, #16]
    c7d0:	ldp	x29, x30, [sp], #32
    c7d4:	ret
    c7d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c7dc:	add	x3, x3, #0x330
    c7e0:	add	x3, x3, #0xbe0
    c7e4:	mov	w2, #0x194                 	// #404
    c7e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c7ec:	add	x1, x1, #0xcb0
    c7f0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c7f4:	add	x0, x0, #0x618
    c7f8:	bl	58e0 <__assert_fail@plt>
    c7fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c800:	add	x3, x3, #0x330
    c804:	add	x3, x3, #0xbe0
    c808:	mov	w2, #0x194                 	// #404
    c80c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c810:	add	x1, x1, #0xcb0
    c814:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c818:	add	x0, x0, #0x620
    c81c:	bl	58e0 <__assert_fail@plt>
    c820:	sub	sp, sp, #0xe0
    c824:	stp	x29, x30, [sp, #16]
    c828:	add	x29, sp, #0x10
    c82c:	stp	x19, x20, [sp, #32]
    c830:	stp	x21, x22, [sp, #48]
    c834:	stp	x23, x24, [sp, #64]
    c838:	stp	x25, x26, [sp, #80]
    c83c:	stp	x27, x28, [sp, #96]
    c840:	mov	x23, x0
    c844:	str	x1, [sp, #120]
    c848:	mov	x25, x2
    c84c:	str	w7, [sp, #132]
    c850:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    c854:	ldr	x0, [x0, #3920]
    c858:	ldr	x2, [x0]
    c85c:	str	x2, [sp, #216]
    c860:	mov	x2, #0x0                   	// #0
    c864:	ldrb	w28, [x5, #90]
    c868:	cbz	x1, c8d4 <Perl_re_exec_indentf@@Base+0x704>
    c86c:	mov	x24, x3
    c870:	mov	x21, x4
    c874:	mov	x26, x5
    c878:	mov	w22, w6
    c87c:	cbz	x25, c8f8 <Perl_re_exec_indentf@@Base+0x728>
    c880:	cbz	x3, c91c <Perl_re_exec_indentf@@Base+0x74c>
    c884:	cbz	x4, c940 <Perl_re_exec_indentf@@Base+0x770>
    c888:	ldr	x19, [x25]
    c88c:	mov	w0, #0xffff                	// #65535
    c890:	cmp	w6, w0
    c894:	b.eq	c964 <Perl_re_exec_indentf@@Base+0x794>  // b.none
    c898:	cbnz	w28, e47c <Perl_re_exec_indentf@@Base+0x22ac>
    c89c:	sub	x0, x4, x19
    c8a0:	add	x27, x19, w6, sxtw
    c8a4:	cmp	x0, w6, sxtw
    c8a8:	csel	x27, x27, x4, gt
    c8ac:	ldrb	w0, [x3, #1]
    c8b0:	sub	w1, w0, #0x2
    c8b4:	cmp	w1, #0x61
    c8b8:	b.hi	e3c4 <Perl_re_exec_indentf@@Base+0x21f4>  // b.pmore
    c8bc:	adrp	x2, 6b000 <boot_re@@Base+0x941c>
    c8c0:	add	x2, x2, #0xdf0
    c8c4:	ldrh	w1, [x2, w1, uxtw #1]
    c8c8:	adr	x2, c8d4 <Perl_re_exec_indentf@@Base+0x704>
    c8cc:	add	x1, x2, w1, sxth #2
    c8d0:	br	x1
    c8d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c8d8:	add	x3, x3, #0x330
    c8dc:	add	x3, x3, #0xbf0
    c8e0:	mov	w2, #0x2433                	// #9267
    c8e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c8e8:	add	x1, x1, #0xcb0
    c8ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    c8f0:	add	x0, x0, #0xef0
    c8f4:	bl	58e0 <__assert_fail@plt>
    c8f8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c8fc:	add	x3, x3, #0x330
    c900:	add	x3, x3, #0xbf0
    c904:	mov	w2, #0x2433                	// #9267
    c908:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c90c:	add	x1, x1, #0xcb0
    c910:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c914:	add	x0, x0, #0x6d0
    c918:	bl	58e0 <__assert_fail@plt>
    c91c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c920:	add	x3, x3, #0x330
    c924:	add	x3, x3, #0xbf0
    c928:	mov	w2, #0x2433                	// #9267
    c92c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c930:	add	x1, x1, #0xcb0
    c934:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
    c938:	add	x0, x0, #0x418
    c93c:	bl	58e0 <__assert_fail@plt>
    c940:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    c944:	add	x3, x3, #0x330
    c948:	add	x3, x3, #0xbf0
    c94c:	mov	w2, #0x2433                	// #9267
    c950:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    c954:	add	x1, x1, #0xcb0
    c958:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    c95c:	add	x0, x0, #0x6e0
    c960:	bl	58e0 <__assert_fail@plt>
    c964:	ldrb	w0, [x3, #1]
    c968:	sub	w1, w0, #0x2
    c96c:	cmp	w1, #0x61
    c970:	b.hi	e3c4 <Perl_re_exec_indentf@@Base+0x21f4>  // b.pmore
    c974:	adrp	x2, 6b000 <boot_re@@Base+0x941c>
    c978:	add	x2, x2, #0xeb4
    c97c:	ldrh	w1, [x2, w1, uxtw #1]
    c980:	adr	x2, c98c <Perl_re_exec_indentf@@Base+0x7bc>
    c984:	add	x1, x2, w1, sxth #2
    c988:	br	x1
    c98c:	cbz	w28, c9d4 <Perl_re_exec_indentf@@Base+0x804>
    c990:	mov	w22, #0x7fffffff            	// #2147483647
    c994:	cmp	w22, #0x0
    c998:	mov	w20, #0x0                   	// #0
    c99c:	ccmp	x21, x19, #0x0, gt
    c9a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    c9a4:	ldr	x1, [x1, #4064]
    c9a8:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    c9ac:	ldrb	w0, [x19]
    c9b0:	cmp	w0, #0xa
    c9b4:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    c9b8:	ldrb	w0, [x1, w0, sxtw]
    c9bc:	add	x19, x19, x0
    c9c0:	add	w20, w20, #0x1
    c9c4:	cmp	x21, x19
    c9c8:	ccmp	w22, w20, #0x4, hi  // hi = pmore
    c9cc:	b.gt	c9ac <Perl_re_exec_indentf@@Base+0x7dc>
    c9d0:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    c9d4:	mov	w22, #0x7fffffff            	// #2147483647
    c9d8:	sub	x2, x21, x19
    c9dc:	mov	w1, #0xa                   	// #10
    c9e0:	mov	x0, x19
    c9e4:	bl	5750 <memchr@plt>
    c9e8:	cmp	x0, #0x0
    c9ec:	csel	x19, x0, x21, ne  // ne = any
    c9f0:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    c9f4:	mov	x21, x27
    c9f8:	b	c9d8 <Perl_re_exec_indentf@@Base+0x808>
    c9fc:	mov	w22, #0x7fffffff            	// #2147483647
    ca00:	cbz	w28, e3f4 <Perl_re_exec_indentf@@Base+0x2224>
    ca04:	cmp	w22, #0x0
    ca08:	ccmp	x21, x19, #0x0, gt
    ca0c:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    ca10:	mov	w20, #0x0                   	// #0
    ca14:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    ca18:	ldr	x1, [x1, #4064]
    ca1c:	ldrb	w0, [x19]
    ca20:	ldrb	w0, [x1, w0, sxtw]
    ca24:	add	x19, x19, x0
    ca28:	add	w20, w20, #0x1
    ca2c:	cmp	x21, x19
    ca30:	ccmp	w20, w22, #0x0, hi  // hi = pmore
    ca34:	b.lt	ca1c <Perl_re_exec_indentf@@Base+0x84c>  // b.tstop
    ca38:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    ca3c:	mov	x21, x27
    ca40:	b	ca00 <Perl_re_exec_indentf@@Base+0x830>
    ca44:	mov	x27, x4
    ca48:	mov	w22, #0x7fffffff            	// #2147483647
    ca4c:	ldr	x0, [x23, #1440]
    ca50:	cbnz	x0, cb48 <Perl_re_exec_indentf@@Base+0x978>
    ca54:	cbz	w28, cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    ca58:	ldrb	w0, [x19]
    ca5c:	cmp	w0, #0xc3
    ca60:	b.ls	cbc4 <Perl_re_exec_indentf@@Base+0x9f4>  // b.plast
    ca64:	ldrb	w0, [x23, #1180]
    ca68:	cbnz	w0, cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    ca6c:	mov	w1, #0x3f                  	// #63
    ca70:	mov	x0, x23
    ca74:	bl	5870 <Perl_ckwarn@plt>
    ca78:	and	w0, w0, #0xff
    ca7c:	cbz	w0, cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    ca80:	cmp	x21, x19
    ca84:	b.ls	cb50 <Perl_re_exec_indentf@@Base+0x980>  // b.plast
    ca88:	mov	w1, #0x2c                  	// #44
    ca8c:	mov	x0, x23
    ca90:	bl	52a0 <Perl_ckwarn_d@plt>
    ca94:	ands	w0, w0, #0xff
    ca98:	mov	w0, #0x9e                  	// #158
    ca9c:	csel	w3, w0, wzr, eq  // eq = none
    caa0:	mov	x6, x19
    caa4:	mov	x20, #0x0                   	// #0
    caa8:	mov	x4, #0x0                   	// #0
    caac:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    cab0:	ldr	x8, [x0, #3824]
    cab4:	mov	w7, #0xff                  	// #255
    cab8:	mov	x5, x8
    cabc:	ldrb	w2, [x6]
    cac0:	ldrb	w0, [x8, w2, sxtw]
    cac4:	and	x1, x0, #0xff
    cac8:	asr	w0, w7, w0
    cacc:	and	w0, w0, w2
    cad0:	sxtw	x0, w0
    cad4:	bfi	x2, x20, #6, #58
    cad8:	cmp	x4, #0x0
    cadc:	csel	x20, x2, x0, ne  // ne = any
    cae0:	add	x0, x5, x1
    cae4:	add	x0, x0, x4
    cae8:	ldrb	w4, [x0, #256]
    caec:	cbnz	x4, cb74 <Perl_re_exec_indentf@@Base+0x9a4>
    caf0:	cmp	x20, #0x0
    caf4:	mov	x0, #0xfffd                	// #65533
    caf8:	csel	x20, x20, x0, ne  // ne = any
    cafc:	ldr	x1, [x23, #8]
    cb00:	ldrh	w0, [x1, #32]
    cb04:	and	w0, w0, #0x1ff
    cb08:	cmp	w0, #0x17f
    cb0c:	b.eq	cba4 <Perl_re_exec_indentf@@Base+0x9d4>  // b.none
    cb10:	ldrh	w1, [x1, #32]
    cb14:	and	x1, x1, #0x1ff
    cb18:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    cb1c:	ldr	x0, [x0, #4008]
    cb20:	ldr	x4, [x0, x1, lsl #3]
    cb24:	mov	x3, x20
    cb28:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    cb2c:	add	x2, x2, #0x510
    cb30:	mov	w1, #0x3f                  	// #63
    cb34:	mov	x0, x23
    cb38:	bl	5110 <Perl_warner@plt>
    cb3c:	b	cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    cb40:	mov	x27, x21
    cb44:	b	ca4c <Perl_re_exec_indentf@@Base+0x87c>
    cb48:	bl	5050 <Perl__warn_problematic_locale@plt>
    cb4c:	b	ca54 <Perl_re_exec_indentf@@Base+0x884>
    cb50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cb54:	add	x3, x3, #0x330
    cb58:	add	x3, x3, #0xbf0
    cb5c:	mov	w2, #0x2473                	// #9331
    cb60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cb64:	add	x1, x1, #0xcb0
    cb68:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cb6c:	add	x0, x0, #0x6e8
    cb70:	bl	58e0 <__assert_fail@plt>
    cb74:	add	x6, x6, #0x1
    cb78:	cmp	x21, x6
    cb7c:	ccmp	x4, #0x1, #0x4, hi  // hi = pmore
    cb80:	b.ne	cabc <Perl_re_exec_indentf@@Base+0x8ec>  // b.any
    cb84:	mov	x5, #0x0                   	// #0
    cb88:	mov	x4, #0x0                   	// #0
    cb8c:	mov	x2, #0x0                   	// #0
    cb90:	sub	x1, x21, x19
    cb94:	mov	x0, x19
    cb98:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    cb9c:	mov	x20, x0
    cba0:	b	caf0 <Perl_re_exec_indentf@@Base+0x920>
    cba4:	mov	w2, #0x2                   	// #2
    cba8:	mov	x0, x23
    cbac:	bl	5080 <Perl_custom_op_get_field@plt>
    cbb0:	mov	x4, x0
    cbb4:	b	cb24 <Perl_re_exec_indentf@@Base+0x954>
    cbb8:	mov	x27, x4
    cbbc:	mov	w22, #0x7fffffff            	// #2147483647
    cbc0:	cbz	w28, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cbc4:	ldrb	w21, [x24]
    cbc8:	ldrb	w0, [x26, #89]
    cbcc:	cmp	w21, w0
    cbd0:	b.eq	cc20 <Perl_re_exec_indentf@@Base+0xa50>  // b.none
    cbd4:	ldrb	w2, [x24, #4]
    cbd8:	tbnz	w2, #7, cc58 <Perl_re_exec_indentf@@Base+0xa88>
    cbdc:	cbz	w28, cbf0 <Perl_re_exec_indentf@@Base+0xa20>
    cbe0:	sub	x1, x27, x19
    cbe4:	add	x0, x19, w22, sxtw
    cbe8:	cmp	x1, w22, sxtw
    cbec:	csel	x27, x0, x27, gt
    cbf0:	mov	x1, x27
    cbf4:	mov	x0, x19
    cbf8:	bl	7600 <Perl__inverse_folds@plt+0x1c00>
    cbfc:	mov	x19, x0
    cc00:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cc04:	mov	x27, x21
    cc08:	b	cbc0 <Perl_re_exec_indentf@@Base+0x9f0>
    cc0c:	mov	x27, x4
    cc10:	mov	w22, #0x7fffffff            	// #2147483647
    cc14:	b	cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    cc18:	mov	x27, x21
    cc1c:	b	cbc4 <Perl_re_exec_indentf@@Base+0x9f4>
    cc20:	ldrb	w2, [x24, #4]
    cc24:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    cc28:	ldr	x1, [x1, #4064]
    cc2c:	ldrb	w1, [x1, w2, sxtw]
    cc30:	cbnz	w1, cbd4 <Perl_re_exec_indentf@@Base+0xa04>
    cc34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cc38:	add	x3, x3, #0x330
    cc3c:	add	x3, x3, #0xbf0
    cc40:	mov	w2, #0x247e                	// #9342
    cc44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cc48:	add	x1, x1, #0xcb0
    cc4c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cc50:	add	x0, x0, #0x718
    cc54:	bl	58e0 <__assert_fail@plt>
    cc58:	cmp	w0, #0x0
    cc5c:	ccmp	w28, #0x0, #0x0, eq  // eq = none
    cc60:	b.eq	cbf0 <Perl_re_exec_indentf@@Base+0xa20>  // b.none
    cc64:	cbz	w0, cd5c <Perl_re_exec_indentf@@Base+0xb8c>
    cc68:	cbz	w28, ccd4 <Perl_re_exec_indentf@@Base+0xb04>
    cc6c:	cmp	w22, #0x0
    cc70:	mov	w20, #0x0                   	// #0
    cc74:	ccmp	x27, x19, #0x0, gt
    cc78:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    cc7c:	ldr	x0, [x0, #4064]
    cc80:	str	x0, [sp, #136]
    cc84:	add	x0, x24, #0x4
    cc88:	str	x0, [sp, #144]
    cc8c:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    cc90:	ldrb	w0, [x19]
    cc94:	ldr	x1, [sp, #136]
    cc98:	ldrb	w0, [x1, w0, sxtw]
    cc9c:	and	x28, x0, #0xff
    cca0:	cmp	w21, w0
    cca4:	b.cc	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.lo, b.ul, b.last
    cca8:	mov	x2, x28
    ccac:	ldr	x1, [sp, #144]
    ccb0:	mov	x0, x19
    ccb4:	bl	5460 <memcmp@plt>
    ccb8:	cbnz	w0, d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    ccbc:	add	x19, x19, x28
    ccc0:	add	w20, w20, #0x1
    ccc4:	cmp	w22, w20
    ccc8:	ccmp	x27, x19, #0x0, gt
    cccc:	b.hi	cc90 <Perl_re_exec_indentf@@Base+0xac0>  // b.pmore
    ccd0:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    ccd4:	cmp	w2, #0xc3
    ccd8:	b.hi	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.pmore
    ccdc:	and	w0, w2, #0xfe
    cce0:	cmp	w0, #0xc2
    cce4:	b.ne	cd14 <Perl_re_exec_indentf@@Base+0xb44>  // b.any
    cce8:	ldrb	w0, [x24, #5]
    ccec:	and	w1, w0, #0xc0
    ccf0:	cmp	w1, #0x80
    ccf4:	b.ne	cd38 <Perl_re_exec_indentf@@Base+0xb68>  // b.any
    ccf8:	bfi	w0, w2, #6, #26
    ccfc:	mov	w2, w0
    cd00:	mov	x1, x27
    cd04:	mov	x0, x19
    cd08:	bl	7600 <Perl__inverse_folds@plt+0x1c00>
    cd0c:	mov	x19, x0
    cd10:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cd14:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cd18:	add	x3, x3, #0x330
    cd1c:	add	x3, x3, #0xbf0
    cd20:	mov	w2, #0x24a1                	// #9377
    cd24:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cd28:	add	x1, x1, #0xcb0
    cd2c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cd30:	add	x0, x0, #0x758
    cd34:	bl	58e0 <__assert_fail@plt>
    cd38:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cd3c:	add	x3, x3, #0x330
    cd40:	add	x3, x3, #0xbf0
    cd44:	mov	w2, #0x24a1                	// #9377
    cd48:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cd4c:	add	x1, x1, #0xcb0
    cd50:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cd54:	add	x0, x0, #0x8a0
    cd58:	bl	58e0 <__assert_fail@plt>
    cd5c:	ubfx	x3, x2, #6, #2
    cd60:	orr	w3, w3, #0xc0
    cd64:	and	w0, w2, #0x3f
    cd68:	orr	w0, w0, #0x80
    cd6c:	cmp	w22, #0x0
    cd70:	b.le	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cd74:	add	x1, x19, #0x1
    cd78:	cmp	x27, x1
    cd7c:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    cd80:	sub	x2, x27, x19
    cd84:	sub	x2, x2, #0x2
    cd88:	and	x2, x2, #0xfffffffffffffffe
    cd8c:	add	x2, x2, #0x2
    cd90:	add	x2, x19, x2
    cd94:	mov	w20, #0x0                   	// #0
    cd98:	ldrb	w1, [x19]
    cd9c:	cmp	w1, w3
    cda0:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    cda4:	ldrb	w1, [x19, #1]
    cda8:	cmp	w1, w0
    cdac:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    cdb0:	add	x19, x19, #0x2
    cdb4:	add	w20, w20, #0x1
    cdb8:	cmp	w22, w20
    cdbc:	b.eq	e3e4 <Perl_re_exec_indentf@@Base+0x2214>  // b.none
    cdc0:	cmp	x19, x2
    cdc4:	b.ne	cd98 <Perl_re_exec_indentf@@Base+0xbc8>  // b.any
    cdc8:	mov	x19, x2
    cdcc:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    cdd0:	mov	x27, x4
    cdd4:	mov	w22, #0x7fffffff            	// #2147483647
    cdd8:	ldrb	w0, [x26, #89]
    cddc:	cbnz	w0, cea0 <Perl_re_exec_indentf@@Base+0xcd0>
    cde0:	ldrb	w0, [x26, #89]
    cde4:	eor	w0, w0, #0x1
    cde8:	tst	w28, w0
    cdec:	mov	x0, #0x29                  	// #41
    cdf0:	csinc	x0, x0, xzr, eq  // eq = none
    cdf4:	str	x0, [sp, #136]
    cdf8:	ldrb	w1, [x24]
    cdfc:	ldrb	w0, [x26, #89]
    ce00:	cmp	w1, w0
    ce04:	b.ne	ce1c <Perl_re_exec_indentf@@Base+0xc4c>  // b.any
    ce08:	ldrb	w1, [x24, #4]
    ce0c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    ce10:	ldr	x0, [x0, #4064]
    ce14:	ldrb	w0, [x0, w1, sxtw]
    ce18:	cbz	w0, cff0 <Perl_re_exec_indentf@@Base+0xe20>
    ce1c:	mov	x6, x26
    ce20:	add	x5, sp, #0xc8
    ce24:	add	x4, sp, #0xac
    ce28:	add	x3, sp, #0xb8
    ce2c:	add	x2, sp, #0xa8
    ce30:	mov	x1, x24
    ce34:	mov	x0, x23
    ce38:	bl	a080 <Perl__inverse_folds@plt+0x4680>
    ce3c:	and	w0, w0, #0xff
    ce40:	cbz	w0, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    ce44:	ldr	w2, [sp, #168]
    ce48:	cmn	w2, #0x3e8
    ce4c:	b.eq	d014 <Perl_re_exec_indentf@@Base+0xe44>  // b.none
    ce50:	cbz	w28, d300 <Perl_re_exec_indentf@@Base+0x1130>
    ce54:	ldr	w0, [sp, #172]
    ce58:	cmp	w2, w0
    ce5c:	b.eq	d1b8 <Perl_re_exec_indentf@@Base+0xfe8>  // b.none
    ce60:	cmp	w22, #0x0
    ce64:	ccmp	x27, x19, #0x0, gt
    ce68:	b.ls	d398 <Perl_re_exec_indentf@@Base+0x11c8>  // b.plast
    ce6c:	mov	w20, #0x0                   	// #0
    ce70:	cmp	x21, x19
    ce74:	b.cc	d2dc <Perl_re_exec_indentf@@Base+0x110c>  // b.lo, b.ul, b.last
    ce78:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    ce7c:	ldr	x0, [x0, #4064]
    ce80:	str	x0, [sp, #136]
    ce84:	add	x0, sp, #0xb8
    ce88:	str	x0, [sp, #144]
    ce8c:	add	x0, sp, #0xc8
    ce90:	str	x0, [sp, #152]
    ce94:	b	d290 <Perl_re_exec_indentf@@Base+0x10c0>
    ce98:	mov	x27, x21
    ce9c:	b	cdd8 <Perl_re_exec_indentf@@Base+0xc08>
    cea0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cea4:	add	x3, x3, #0x330
    cea8:	add	x3, x3, #0xbf0
    ceac:	mov	w2, #0x24bb                	// #9403
    ceb0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ceb4:	add	x1, x1, #0xcb0
    ceb8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cebc:	add	x0, x0, #0xb18
    cec0:	bl	58e0 <__assert_fail@plt>
    cec4:	mov	x27, x4
    cec8:	mov	w22, #0x7fffffff            	// #2147483647
    cecc:	b	cde0 <Perl_re_exec_indentf@@Base+0xc10>
    ced0:	mov	x27, x21
    ced4:	b	cde0 <Perl_re_exec_indentf@@Base+0xc10>
    ced8:	mov	x27, x4
    cedc:	mov	w22, #0x7fffffff            	// #2147483647
    cee0:	ldr	x0, [x23, #1440]
    cee4:	mov	x1, #0x2                   	// #2
    cee8:	str	x1, [sp, #136]
    ceec:	cbz	x0, cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cef0:	bl	5050 <Perl__warn_problematic_locale@plt>
    cef4:	mov	x0, #0x2                   	// #2
    cef8:	str	x0, [sp, #136]
    cefc:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cf00:	mov	x27, x21
    cf04:	b	cee0 <Perl_re_exec_indentf@@Base+0xd10>
    cf08:	mov	x27, x4
    cf0c:	mov	w22, #0x7fffffff            	// #2147483647
    cf10:	ldrb	w0, [x26, #89]
    cf14:	str	xzr, [sp, #136]
    cf18:	cbz	w0, cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cf1c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cf20:	add	x3, x3, #0x330
    cf24:	add	x3, x3, #0xbf0
    cf28:	mov	w2, #0x24ce                	// #9422
    cf2c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cf30:	add	x1, x1, #0xcb0
    cf34:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cf38:	add	x0, x0, #0xb18
    cf3c:	bl	58e0 <__assert_fail@plt>
    cf40:	mov	x27, x21
    cf44:	b	cf10 <Perl_re_exec_indentf@@Base+0xd40>
    cf48:	mov	x27, x4
    cf4c:	mov	w22, #0x7fffffff            	// #2147483647
    cf50:	cbz	w28, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cf54:	mov	x0, #0x2a                  	// #42
    cf58:	str	x0, [sp, #136]
    cf5c:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cf60:	mov	x27, x21
    cf64:	b	cf50 <Perl_re_exec_indentf@@Base+0xd80>
    cf68:	mov	x27, x4
    cf6c:	mov	w22, #0x7fffffff            	// #2147483647
    cf70:	cbz	w28, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    cf74:	ldrb	w0, [x26, #89]
    cf78:	mov	x1, #0x8                   	// #8
    cf7c:	str	x1, [sp, #136]
    cf80:	cbnz	w0, cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cf84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cf88:	add	x3, x3, #0x330
    cf8c:	add	x3, x3, #0xbf0
    cf90:	mov	w2, #0x24dd                	// #9437
    cf94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    cf98:	add	x1, x1, #0xcb0
    cf9c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    cfa0:	add	x0, x0, #0xb30
    cfa4:	bl	58e0 <__assert_fail@plt>
    cfa8:	mov	x27, x21
    cfac:	b	cf70 <Perl_re_exec_indentf@@Base+0xda0>
    cfb0:	mov	x27, x4
    cfb4:	mov	w22, #0x7fffffff            	// #2147483647
    cfb8:	mov	x0, #0x8                   	// #8
    cfbc:	str	x0, [sp, #136]
    cfc0:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cfc4:	mov	x27, x21
    cfc8:	b	cfb8 <Perl_re_exec_indentf@@Base+0xde8>
    cfcc:	mov	x27, x4
    cfd0:	mov	w22, #0x7fffffff            	// #2147483647
    cfd4:	str	xzr, [sp, #136]
    cfd8:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cfdc:	mov	x27, x21
    cfe0:	str	xzr, [sp, #136]
    cfe4:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cfe8:	str	xzr, [sp, #136]
    cfec:	b	cdf8 <Perl_re_exec_indentf@@Base+0xc28>
    cff0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    cff4:	add	x3, x3, #0x330
    cff8:	add	x3, x3, #0xbf0
    cffc:	mov	w2, #0x24eb                	// #9451
    d000:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    d004:	add	x1, x1, #0xcb0
    d008:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    d00c:	add	x0, x0, #0x718
    d010:	bl	58e0 <__assert_fail@plt>
    d014:	str	x21, [sp, #176]
    d018:	ldrb	w0, [x26, #89]
    d01c:	mov	x27, #0x1                   	// #1
    d020:	cbz	w0, d034 <Perl_re_exec_indentf@@Base+0xe64>
    d024:	ldrb	w1, [x24, #4]
    d028:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d02c:	ldr	x0, [x0, #4064]
    d030:	ldrb	w27, [x0, w1, sxtw]
    d034:	mov	w20, #0x0                   	// #0
    d038:	add	x0, x24, #0x4
    d03c:	str	x0, [sp, #144]
    d040:	add	x0, sp, #0xb0
    d044:	str	x0, [sp, #152]
    d048:	cmp	w22, #0x0
    d04c:	b.le	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d050:	ldr	w0, [sp, #136]
    d054:	str	w0, [sp, #8]
    d058:	ldrb	w0, [x26, #89]
    d05c:	strb	w0, [sp]
    d060:	mov	x7, x27
    d064:	mov	x6, #0x0                   	// #0
    d068:	ldr	x5, [sp, #144]
    d06c:	mov	w4, w28
    d070:	mov	x3, #0x0                   	// #0
    d074:	ldr	x2, [sp, #152]
    d078:	mov	x1, x19
    d07c:	mov	x0, x23
    d080:	bl	5400 <Perl_foldEQ_utf8_flags@plt>
    d084:	cbz	w0, d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d088:	ldr	x19, [sp, #176]
    d08c:	str	x21, [sp, #176]
    d090:	add	w20, w20, #0x1
    d094:	cmp	w22, w20
    d098:	b.ne	d050 <Perl_re_exec_indentf@@Base+0xe80>  // b.any
    d09c:	mov	w20, w22
    d0a0:	cbnz	w20, d0ac <Perl_re_exec_indentf@@Base+0xedc>
    d0a4:	ldr	x20, [x25]
    d0a8:	sub	w20, w19, w20
    d0ac:	str	x19, [x25]
    d0b0:	str	xzr, [sp, #176]
    d0b4:	ldr	x0, [x23, #224]
    d0b8:	cbz	x0, d120 <Perl_re_exec_indentf@@Base+0xf50>
    d0bc:	mov	w2, #0x1                   	// #1
    d0c0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    d0c4:	add	x1, x1, #0x608
    d0c8:	mov	x0, x23
    d0cc:	bl	54f0 <Perl_get_sv@plt>
    d0d0:	mov	x19, x0
    d0d4:	cbz	x0, d120 <Perl_re_exec_indentf@@Base+0xf50>
    d0d8:	ldr	w0, [x0, #12]
    d0dc:	tbz	w0, #8, e3fc <Perl_re_exec_indentf@@Base+0x222c>
    d0e0:	ldr	w1, [x19, #12]
    d0e4:	and	w0, w1, #0x3fff00
    d0e8:	and	w0, w0, #0xffe001ff
    d0ec:	cmp	w0, #0x100
    d0f0:	b.ne	e468 <Perl_re_exec_indentf@@Base+0x2298>  // b.any
    d0f4:	and	w2, w1, #0xf
    d0f8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d0fc:	ldr	x0, [x0, #3712]
    d100:	ldrb	w0, [x0, w2, uxtw]
    d104:	cbz	w0, e410 <Perl_re_exec_indentf@@Base+0x2240>
    d108:	and	w0, w1, #0xc000
    d10c:	cmp	w0, #0x8, lsl #12
    d110:	b.eq	e434 <Perl_re_exec_indentf@@Base+0x2264>  // b.none
    d114:	ldr	x0, [x19]
    d118:	ldr	x0, [x0, #32]
    d11c:	str	x0, [sp, #176]
    d120:	ldr	w0, [x23, #2368]
    d124:	tbnz	w0, #20, d134 <Perl_re_exec_indentf@@Base+0xf64>
    d128:	ldr	x0, [sp, #176]
    d12c:	tst	x0, #0xff00
    d130:	b.eq	d17c <Perl_re_exec_indentf@@Base+0xfac>  // b.none
    d134:	mov	x0, x23
    d138:	bl	59b0 <Perl_sv_newmortal@plt>
    d13c:	mov	x19, x0
    d140:	mov	x5, #0x0                   	// #0
    d144:	mov	x4, x26
    d148:	mov	x3, x24
    d14c:	mov	x2, x0
    d150:	ldr	x1, [sp, #120]
    d154:	mov	x0, x23
    d158:	bl	5580 <my_regprop@plt>
    d15c:	sxtw	x5, w22
    d160:	sxtw	x4, w20
    d164:	ldr	x3, [x19, #16]
    d168:	ldr	w2, [sp, #132]
    d16c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    d170:	add	x1, x1, #0x8c8
    d174:	mov	x0, x23
    d178:	bl	5290 <Perl_re_exec_indentf@plt>
    d17c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d180:	ldr	x0, [x0, #3920]
    d184:	ldr	x1, [sp, #216]
    d188:	ldr	x0, [x0]
    d18c:	eor	x0, x1, x0
    d190:	cbnz	x0, e4a4 <Perl_re_exec_indentf@@Base+0x22d4>
    d194:	mov	w0, w20
    d198:	ldp	x19, x20, [sp, #32]
    d19c:	ldp	x21, x22, [sp, #48]
    d1a0:	ldp	x23, x24, [sp, #64]
    d1a4:	ldp	x25, x26, [sp, #80]
    d1a8:	ldp	x27, x28, [sp, #96]
    d1ac:	ldp	x29, x30, [sp, #16]
    d1b0:	add	sp, sp, #0xe0
    d1b4:	ret
    d1b8:	cmp	w22, #0x0
    d1bc:	ccmp	x27, x19, #0x0, gt
    d1c0:	b.ls	d3a0 <Perl_re_exec_indentf@@Base+0x11d0>  // b.plast
    d1c4:	cmp	x21, x19
    d1c8:	b.cc	d24c <Perl_re_exec_indentf@@Base+0x107c>  // b.lo, b.ul, b.last
    d1cc:	mov	w20, #0x0                   	// #0
    d1d0:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    d1d4:	ldr	x0, [x28, #4064]
    d1d8:	str	x0, [sp, #144]
    d1dc:	add	x0, sp, #0xb8
    d1e0:	str	x0, [sp, #152]
    d1e4:	ldr	x28, [x28, #4064]
    d1e8:	ldrb	w0, [sp, #184]
    d1ec:	str	x0, [sp, #136]
    d1f0:	b	d218 <Perl_re_exec_indentf@@Base+0x1048>
    d1f4:	ldr	x0, [sp, #136]
    d1f8:	ldrb	w0, [x28, x0]
    d1fc:	add	x19, x19, x0
    d200:	add	w20, w20, #0x1
    d204:	cmp	x27, x19
    d208:	ccmp	w22, w20, #0x4, hi  // hi = pmore
    d20c:	b.le	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d210:	cmp	x21, x19
    d214:	b.cc	d24c <Perl_re_exec_indentf@@Base+0x107c>  // b.lo, b.ul, b.last
    d218:	sub	x0, x21, x19
    d21c:	cmp	x0, #0x0
    d220:	b.le	d1f4 <Perl_re_exec_indentf@@Base+0x1024>
    d224:	ldrb	w1, [x19]
    d228:	ldr	x2, [sp, #144]
    d22c:	ldrb	w2, [x2, w1, sxtw]
    d230:	cmp	x2, x0
    d234:	csel	x2, x2, x0, le
    d238:	ldr	x1, [sp, #152]
    d23c:	mov	x0, x19
    d240:	bl	5460 <memcmp@plt>
    d244:	cbz	w0, d1f4 <Perl_re_exec_indentf@@Base+0x1024>
    d248:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d24c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    d250:	add	x3, x3, #0x330
    d254:	add	x3, x3, #0xbf0
    d258:	mov	w2, #0x2502                	// #9474
    d25c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    d260:	add	x1, x1, #0xcb0
    d264:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    d268:	add	x0, x0, #0xb48
    d26c:	bl	58e0 <__assert_fail@plt>
    d270:	mov	x28, #0x0                   	// #0
    d274:	add	x19, x19, x28
    d278:	add	w20, w20, #0x1
    d27c:	cmp	x27, x19
    d280:	ccmp	w22, w20, #0x4, hi  // hi = pmore
    d284:	b.le	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d288:	cmp	x21, x19
    d28c:	b.cc	d2dc <Perl_re_exec_indentf@@Base+0x110c>  // b.lo, b.ul, b.last
    d290:	sub	x0, x21, x19
    d294:	cmp	x0, #0x0
    d298:	b.le	d270 <Perl_re_exec_indentf@@Base+0x10a0>
    d29c:	ldrb	w1, [x19]
    d2a0:	ldr	x2, [sp, #136]
    d2a4:	ldrb	w28, [x2, w1, sxtw]
    d2a8:	cmp	x28, x0
    d2ac:	csel	x28, x28, x0, le
    d2b0:	mov	x2, x28
    d2b4:	ldr	x1, [sp, #144]
    d2b8:	mov	x0, x19
    d2bc:	bl	5460 <memcmp@plt>
    d2c0:	cbz	w0, d274 <Perl_re_exec_indentf@@Base+0x10a4>
    d2c4:	mov	x2, x28
    d2c8:	ldr	x1, [sp, #152]
    d2cc:	mov	x0, x19
    d2d0:	bl	5460 <memcmp@plt>
    d2d4:	cbz	w0, d274 <Perl_re_exec_indentf@@Base+0x10a4>
    d2d8:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d2dc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    d2e0:	add	x3, x3, #0x330
    d2e4:	add	x3, x3, #0xbf0
    d2e8:	mov	w2, #0x250c                	// #9484
    d2ec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    d2f0:	add	x1, x1, #0xcb0
    d2f4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    d2f8:	add	x0, x0, #0xb48
    d2fc:	bl	58e0 <__assert_fail@plt>
    d300:	ldr	w1, [sp, #172]
    d304:	cmp	w2, w1
    d308:	b.eq	d358 <Perl_re_exec_indentf@@Base+0x1188>  // b.none
    d30c:	sxtb	w4, w2
    d310:	eor	w0, w4, w1
    d314:	ands	w0, w0, #0xff
    d318:	b.eq	d328 <Perl_re_exec_indentf@@Base+0x1158>  // b.none
    d31c:	sub	w3, w0, #0x1
    d320:	tst	w3, w0
    d324:	b.eq	d36c <Perl_re_exec_indentf@@Base+0x119c>  // b.none
    d328:	cmp	x27, x19
    d32c:	b.ls	d3a8 <Perl_re_exec_indentf@@Base+0x11d8>  // b.plast
    d330:	ldrb	w0, [x19]
    d334:	cmp	w2, w0
    d338:	ccmp	w1, w0, #0x4, ne  // ne = any
    d33c:	b.ne	d390 <Perl_re_exec_indentf@@Base+0x11c0>  // b.any
    d340:	add	x19, x19, #0x1
    d344:	cmp	x27, x19
    d348:	b.ne	d330 <Perl_re_exec_indentf@@Base+0x1160>  // b.any
    d34c:	mov	x19, x27
    d350:	mov	w20, #0x0                   	// #0
    d354:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d358:	mov	x1, x27
    d35c:	mov	x0, x19
    d360:	bl	7600 <Perl__inverse_folds@plt+0x1c00>
    d364:	mov	x19, x0
    d368:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d36c:	mvn	w0, w0
    d370:	and	w0, w0, #0xff
    d374:	mov	w3, w0
    d378:	and	w2, w4, w0
    d37c:	mov	x1, x27
    d380:	mov	x0, x19
    d384:	bl	779c <Perl__inverse_folds@plt+0x1d9c>
    d388:	mov	x19, x0
    d38c:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d390:	mov	w20, #0x0                   	// #0
    d394:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d398:	mov	w20, #0x0                   	// #0
    d39c:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d3a0:	mov	w20, #0x0                   	// #0
    d3a4:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d3a8:	mov	w20, #0x0                   	// #0
    d3ac:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d3b0:	mov	w22, #0x7fffffff            	// #2147483647
    d3b4:	ldr	x0, [x23, #1440]
    d3b8:	cbnz	x0, d438 <Perl_re_exec_indentf@@Base+0x1268>
    d3bc:	ldrb	w0, [x24]
    d3c0:	and	w0, w0, #0xc
    d3c4:	cmp	w0, #0x8
    d3c8:	b.eq	d440 <Perl_re_exec_indentf@@Base+0x1270>  // b.none
    d3cc:	cbz	w28, d474 <Perl_re_exec_indentf@@Base+0x12a4>
    d3d0:	cmp	w22, #0x0
    d3d4:	mov	w20, #0x0                   	// #0
    d3d8:	ccmp	x21, x19, #0x0, gt
    d3dc:	mov	w28, #0x1                   	// #1
    d3e0:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    d3e4:	ldr	x27, [x27, #4064]
    d3e8:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    d3ec:	mov	w5, w28
    d3f0:	mov	x4, x21
    d3f4:	mov	x3, x19
    d3f8:	mov	x2, x24
    d3fc:	ldr	x1, [sp, #120]
    d400:	mov	x0, x23
    d404:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
    d408:	and	w0, w0, #0xff
    d40c:	cbz	w0, d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d410:	ldrb	w0, [x19]
    d414:	ldrb	w0, [x27, w0, sxtw]
    d418:	add	x19, x19, x0
    d41c:	add	w20, w20, #0x1
    d420:	cmp	w22, w20
    d424:	ccmp	x21, x19, #0x0, gt
    d428:	b.hi	d3ec <Perl_re_exec_indentf@@Base+0x121c>  // b.pmore
    d42c:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d430:	mov	x21, x27
    d434:	b	d3b4 <Perl_re_exec_indentf@@Base+0x11e4>
    d438:	bl	5050 <Perl__warn_problematic_locale@plt>
    d43c:	b	d3bc <Perl_re_exec_indentf@@Base+0x11ec>
    d440:	ldrb	w0, [x23, #1180]
    d444:	cbnz	w0, d3cc <Perl_re_exec_indentf@@Base+0x11fc>
    d448:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
    d44c:	add	x2, x2, #0x330
    d450:	add	x2, x2, #0xc00
    d454:	mov	w1, #0x3f                  	// #63
    d458:	mov	x0, x23
    d45c:	bl	5150 <Perl_ck_warner@plt>
    d460:	b	d3cc <Perl_re_exec_indentf@@Base+0x11fc>
    d464:	mov	w22, #0x7fffffff            	// #2147483647
    d468:	b	d3cc <Perl_re_exec_indentf@@Base+0x11fc>
    d46c:	mov	x21, x27
    d470:	b	d3cc <Perl_re_exec_indentf@@Base+0x11fc>
    d474:	ldrb	w0, [x24]
    d478:	tst	w0, #0xffffffdf
    d47c:	b.ne	d4bc <Perl_re_exec_indentf@@Base+0x12ec>  // b.any
    d480:	cmp	x21, x19
    d484:	b.ls	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.plast
    d488:	ldrb	w0, [x19]
    d48c:	ubfx	x1, x0, #3, #5
    d490:	add	x1, x24, x1
    d494:	ldrb	w1, [x1, #8]
    d498:	and	w0, w0, #0x7
    d49c:	lsr	w0, w1, w0
    d4a0:	tbz	w0, #0, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d4a4:	add	x19, x19, #0x1
    d4a8:	cmp	x21, x19
    d4ac:	b.ne	d488 <Perl_re_exec_indentf@@Base+0x12b8>  // b.any
    d4b0:	mov	x19, x21
    d4b4:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d4b8:	mov	x19, x20
    d4bc:	cmp	x19, x21
    d4c0:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d4c4:	add	x20, x19, #0x1
    d4c8:	mov	w5, #0x0                   	// #0
    d4cc:	mov	x4, x20
    d4d0:	mov	x3, x19
    d4d4:	mov	x2, x24
    d4d8:	ldr	x1, [sp, #120]
    d4dc:	mov	x0, x23
    d4e0:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
    d4e4:	and	w0, w0, #0xff
    d4e8:	cbnz	w0, d4b8 <Perl_re_exec_indentf@@Base+0x12e8>
    d4ec:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d4f0:	mov	w22, #0x7fffffff            	// #2147483647
    d4f4:	cbz	w28, d508 <Perl_re_exec_indentf@@Base+0x1338>
    d4f8:	sub	x1, x21, x19
    d4fc:	add	x0, x19, w22, sxtw
    d500:	cmp	x1, w22, sxtw
    d504:	csel	x21, x0, x21, gt
    d508:	ldrb	w3, [x24]
    d50c:	ldrb	w2, [x24, #4]
    d510:	mov	x1, x21
    d514:	mov	x0, x19
    d518:	bl	779c <Perl__inverse_folds@plt+0x1d9c>
    d51c:	mov	x19, x0
    d520:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d524:	mov	x21, x27
    d528:	b	d4f4 <Perl_re_exec_indentf@@Base+0x1324>
    d52c:	mov	w22, #0x7fffffff            	// #2147483647
    d530:	cbz	w28, d588 <Perl_re_exec_indentf@@Base+0x13b8>
    d534:	cmp	w22, #0x0
    d538:	ccmp	x19, x21, #0x2, gt
    d53c:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d540:	ldrb	w4, [x24]
    d544:	ldr	w3, [x24, #4]
    d548:	mov	w20, #0x0                   	// #0
    d54c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    d550:	ldr	x2, [x2, #4064]
    d554:	ldrb	w0, [x19]
    d558:	and	w1, w0, w4
    d55c:	cmp	w1, w3
    d560:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    d564:	ldrb	w0, [x2, w0, sxtw]
    d568:	add	x19, x19, x0
    d56c:	add	w20, w20, #0x1
    d570:	cmp	w22, w20
    d574:	ccmp	x19, x21, #0x2, gt
    d578:	b.cc	d554 <Perl_re_exec_indentf@@Base+0x1384>  // b.lo, b.ul, b.last
    d57c:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d580:	mov	x21, x27
    d584:	b	d530 <Perl_re_exec_indentf@@Base+0x1360>
    d588:	ldrb	w3, [x24]
    d58c:	ldrb	w2, [x24, #4]
    d590:	mov	x1, x21
    d594:	mov	x0, x19
    d598:	bl	5dd8 <Perl__inverse_folds@plt+0x3d8>
    d59c:	mov	x19, x0
    d5a0:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d5a4:	mov	w22, #0x7fffffff            	// #2147483647
    d5a8:	cbz	w28, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d5ac:	ldrb	w0, [x24]
    d5b0:	cbnz	w0, d61c <Perl_re_exec_indentf@@Base+0x144c>
    d5b4:	cmp	w22, #0x0
    d5b8:	mov	w20, #0x0                   	// #0
    d5bc:	ccmp	x19, x21, #0x2, gt
    d5c0:	mov	w28, #0x1                   	// #1
    d5c4:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    d5c8:	ldr	x27, [x27, #4064]
    d5cc:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d5d0:	mov	w5, w28
    d5d4:	mov	x4, x21
    d5d8:	mov	x3, x19
    d5dc:	mov	x2, x24
    d5e0:	ldr	x1, [sp, #120]
    d5e4:	mov	x0, x23
    d5e8:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
    d5ec:	and	w0, w0, #0xff
    d5f0:	cbz	w0, d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d5f4:	ldrb	w0, [x19]
    d5f8:	ldrb	w0, [x27, w0, sxtw]
    d5fc:	add	x19, x19, x0
    d600:	add	w20, w20, #0x1
    d604:	cmp	w22, w20
    d608:	ccmp	x19, x21, #0x2, gt
    d60c:	b.cc	d5d0 <Perl_re_exec_indentf@@Base+0x1400>  // b.lo, b.ul, b.last
    d610:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d614:	mov	x21, x27
    d618:	b	d5a8 <Perl_re_exec_indentf@@Base+0x13d8>
    d61c:	cmp	w22, #0x0
    d620:	mov	w20, #0x0                   	// #0
    d624:	ccmp	x19, x21, #0x2, gt
    d628:	mov	w28, #0x1                   	// #1
    d62c:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
    d630:	ldr	x27, [x27, #4064]
    d634:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d638:	ldrb	w1, [x19]
    d63c:	ldrb	w0, [x24]
    d640:	cmp	w1, w0
    d644:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    d648:	mov	w5, w28
    d64c:	mov	x4, x21
    d650:	mov	x3, x19
    d654:	mov	x2, x24
    d658:	ldr	x1, [sp, #120]
    d65c:	mov	x0, x23
    d660:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
    d664:	and	w0, w0, #0xff
    d668:	cbz	w0, d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d66c:	ldrb	w0, [x19]
    d670:	ldrb	w0, [x27, w0, sxtw]
    d674:	add	x19, x19, x0
    d678:	add	w20, w20, #0x1
    d67c:	cmp	w22, w20
    d680:	ccmp	x19, x21, #0x2, gt
    d684:	b.cc	d638 <Perl_re_exec_indentf@@Base+0x1468>  // b.lo, b.ul, b.last
    d688:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d68c:	mov	w22, #0x7fffffff            	// #2147483647
    d690:	mov	w27, #0x1                   	// #1
    d694:	ldr	x0, [x23, #1440]
    d698:	cbnz	x0, d71c <Perl_re_exec_indentf@@Base+0x154c>
    d69c:	cbz	w28, d724 <Perl_re_exec_indentf@@Base+0x1554>
    d6a0:	cmp	w22, #0x0
    d6a4:	mov	w20, #0x0                   	// #0
    d6a8:	ccmp	x19, x21, #0x2, gt
    d6ac:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    d6b0:	ldr	x28, [x28, #4064]
    d6b4:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d6b8:	mov	x3, x21
    d6bc:	mov	x2, x19
    d6c0:	ldrb	w1, [x24]
    d6c4:	mov	x0, x23
    d6c8:	bl	b6fc <Perl__inverse_folds@plt+0x5cfc>
    d6cc:	cmp	w27, w0, uxtb
    d6d0:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    d6d4:	ldrb	w0, [x19]
    d6d8:	ldrb	w0, [x28, w0, sxtw]
    d6dc:	add	x19, x19, x0
    d6e0:	add	w20, w20, #0x1
    d6e4:	cmp	w22, w20
    d6e8:	ccmp	x19, x21, #0x2, gt
    d6ec:	b.cc	d6b8 <Perl_re_exec_indentf@@Base+0x14e8>  // b.lo, b.ul, b.last
    d6f0:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d6f4:	mov	x21, x27
    d6f8:	b	d690 <Perl_re_exec_indentf@@Base+0x14c0>
    d6fc:	mov	w22, #0x7fffffff            	// #2147483647
    d700:	mov	w27, #0x0                   	// #0
    d704:	b	d694 <Perl_re_exec_indentf@@Base+0x14c4>
    d708:	mov	w27, #0x0                   	// #0
    d70c:	b	d694 <Perl_re_exec_indentf@@Base+0x14c4>
    d710:	mov	x21, x27
    d714:	mov	w27, #0x0                   	// #0
    d718:	b	d694 <Perl_re_exec_indentf@@Base+0x14c4>
    d71c:	bl	5050 <Perl__warn_problematic_locale@plt>
    d720:	b	d69c <Perl_re_exec_indentf@@Base+0x14cc>
    d724:	cmp	x19, x21
    d728:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d72c:	ldrb	w2, [x19]
    d730:	ldrb	w1, [x24]
    d734:	mov	x0, x23
    d738:	bl	5350 <Perl_isFOO_lc@plt>
    d73c:	cmp	w27, w0, uxtb
    d740:	b.eq	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.none
    d744:	add	x19, x19, #0x1
    d748:	cmp	x19, x21
    d74c:	b.ne	d72c <Perl_re_exec_indentf@@Base+0x155c>  // b.any
    d750:	mov	x19, x21
    d754:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d758:	mov	w22, #0x7fffffff            	// #2147483647
    d75c:	cbz	w28, d7d0 <Perl_re_exec_indentf@@Base+0x1600>
    d760:	mov	w27, #0x0                   	// #0
    d764:	ldrb	w0, [x24]
    d768:	cmp	w0, #0xc
    d76c:	b.eq	da04 <Perl_re_exec_indentf@@Base+0x1834>  // b.none
    d770:	b.ls	d9a0 <Perl_re_exec_indentf@@Base+0x17d0>  // b.plast
    d774:	cmp	w0, #0xd
    d778:	b.eq	d9dc <Perl_re_exec_indentf@@Base+0x180c>  // b.none
    d77c:	cmp	w0, #0xf
    d780:	b.ne	da5c <Perl_re_exec_indentf@@Base+0x188c>  // b.any
    d784:	cmp	w22, #0x0
    d788:	mov	w20, #0x0                   	// #0
    d78c:	ccmp	x19, x21, #0x2, gt
    d790:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d794:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    d798:	ldr	x0, [x28, #4064]
    d79c:	str	x0, [sp, #136]
    d7a0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d7a4:	ldr	x0, [x0, #3880]
    d7a8:	str	x0, [sp, #144]
    d7ac:	b	e064 <Perl_re_exec_indentf@@Base+0x1e94>
    d7b0:	mov	x21, x27
    d7b4:	b	d75c <Perl_re_exec_indentf@@Base+0x158c>
    d7b8:	mov	w22, #0x7fffffff            	// #2147483647
    d7bc:	cbz	w28, d7d0 <Perl_re_exec_indentf@@Base+0x1600>
    d7c0:	sub	x1, x21, x19
    d7c4:	add	x0, x19, w22, sxtw
    d7c8:	cmp	x1, w22, sxtw
    d7cc:	csel	x21, x0, x21, gt
    d7d0:	cmp	x19, x21
    d7d4:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d7d8:	ldrb	w0, [x24]
    d7dc:	mov	w1, #0x1                   	// #1
    d7e0:	lsl	w1, w1, w0
    d7e4:	orr	w1, w1, #0x4000
    d7e8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    d7ec:	ldr	x2, [x2, #3880]
    d7f0:	ldrb	w0, [x19]
    d7f4:	ldr	w0, [x2, x0, lsl #2]
    d7f8:	bics	wzr, w1, w0
    d7fc:	b.ne	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.any
    d800:	add	x19, x19, #0x1
    d804:	cmp	x19, x21
    d808:	b.ne	d7f0 <Perl_re_exec_indentf@@Base+0x1620>  // b.any
    d80c:	mov	x19, x21
    d810:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d814:	mov	x21, x27
    d818:	b	d7bc <Perl_re_exec_indentf@@Base+0x15ec>
    d81c:	mov	w22, #0x7fffffff            	// #2147483647
    d820:	cbnz	w28, d998 <Perl_re_exec_indentf@@Base+0x17c8>
    d824:	cmp	x19, x21
    d828:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d82c:	ldrb	w0, [x24]
    d830:	mov	w1, #0x1                   	// #1
    d834:	lsl	w1, w1, w0
    d838:	orr	w1, w1, #0x4000
    d83c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    d840:	ldr	x2, [x2, #3880]
    d844:	ldrb	w0, [x19]
    d848:	ldr	w0, [x2, x0, lsl #2]
    d84c:	bics	wzr, w1, w0
    d850:	b.eq	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.none
    d854:	add	x19, x19, #0x1
    d858:	cmp	x19, x21
    d85c:	b.ne	d844 <Perl_re_exec_indentf@@Base+0x1674>  // b.any
    d860:	mov	x19, x21
    d864:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d868:	mov	x21, x27
    d86c:	b	d820 <Perl_re_exec_indentf@@Base+0x1650>
    d870:	mov	x27, x4
    d874:	mov	w22, #0x7fffffff            	// #2147483647
    d878:	cbz	w28, d8b4 <Perl_re_exec_indentf@@Base+0x16e4>
    d87c:	cmp	w22, #0x0
    d880:	ccmp	x19, x27, #0x2, gt
    d884:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d888:	mov	w20, #0x0                   	// #0
    d88c:	cmp	x21, x19
    d890:	b.ls	d900 <Perl_re_exec_indentf@@Base+0x1730>  // b.plast
    d894:	mov	w5, #0x1                   	// #1
    d898:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
    d89c:	ldr	x4, [x4, #3880]
    d8a0:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    d8a4:	ldr	x3, [x3, #4064]
    d8a8:	b	d8dc <Perl_re_exec_indentf@@Base+0x170c>
    d8ac:	mov	x27, x21
    d8b0:	b	d878 <Perl_re_exec_indentf@@Base+0x16a8>
    d8b4:	mov	x21, x27
    d8b8:	b	d824 <Perl_re_exec_indentf@@Base+0x1654>
    d8bc:	ldrb	w0, [x3, w0, sxtw]
    d8c0:	add	x19, x19, x0
    d8c4:	add	w20, w20, #0x1
    d8c8:	cmp	w22, w20
    d8cc:	ccmp	x19, x27, #0x2, gt
    d8d0:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    d8d4:	cmp	x21, x19
    d8d8:	b.ls	d900 <Perl_re_exec_indentf@@Base+0x1730>  // b.plast
    d8dc:	ldrb	w0, [x19]
    d8e0:	tbnz	w0, #7, d8bc <Perl_re_exec_indentf@@Base+0x16ec>
    d8e4:	ldrb	w1, [x24]
    d8e8:	lsl	w1, w5, w1
    d8ec:	orr	w1, w1, #0x4000
    d8f0:	ldr	w2, [x4, w0, sxtw #2]
    d8f4:	bics	wzr, w1, w2
    d8f8:	b.ne	d8bc <Perl_re_exec_indentf@@Base+0x16ec>  // b.any
    d8fc:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    d900:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    d904:	add	x3, x3, #0x330
    d908:	add	x3, x3, #0xbf0
    d90c:	mov	w2, #0x25c3                	// #9667
    d910:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    d914:	add	x1, x1, #0xcb0
    d918:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    d91c:	add	x0, x0, #0xb60
    d920:	bl	58e0 <__assert_fail@plt>
    d924:	mov	w22, #0x7fffffff            	// #2147483647
    d928:	mov	w27, #0x1                   	// #1
    d92c:	cbnz	w28, d764 <Perl_re_exec_indentf@@Base+0x1594>
    d930:	cmp	x19, x21
    d934:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d938:	ldrb	w2, [x24]
    d93c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    d940:	ldr	x1, [x1, #3880]
    d944:	ldrb	w0, [x19]
    d948:	ldr	w0, [x1, x0, lsl #2]
    d94c:	lsr	w0, w0, w2
    d950:	and	w0, w0, #0x1
    d954:	cmp	w27, w0
    d958:	b.eq	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.none
    d95c:	add	x19, x19, #0x1
    d960:	cmp	x19, x21
    d964:	b.ne	d944 <Perl_re_exec_indentf@@Base+0x1774>  // b.any
    d968:	mov	x19, x21
    d96c:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    d970:	mov	x21, x27
    d974:	b	d928 <Perl_re_exec_indentf@@Base+0x1758>
    d978:	mov	w22, #0x7fffffff            	// #2147483647
    d97c:	mov	w27, #0x0                   	// #0
    d980:	b	d92c <Perl_re_exec_indentf@@Base+0x175c>
    d984:	mov	w27, #0x0                   	// #0
    d988:	b	d92c <Perl_re_exec_indentf@@Base+0x175c>
    d98c:	mov	x21, x27
    d990:	mov	w27, #0x0                   	// #0
    d994:	b	d92c <Perl_re_exec_indentf@@Base+0x175c>
    d998:	mov	w27, #0x1                   	// #1
    d99c:	b	d764 <Perl_re_exec_indentf@@Base+0x1594>
    d9a0:	cmp	w0, #0xa
    d9a4:	b.eq	da30 <Perl_re_exec_indentf@@Base+0x1860>  // b.none
    d9a8:	cmp	w0, #0xb
    d9ac:	b.ne	da5c <Perl_re_exec_indentf@@Base+0x188c>  // b.any
    d9b0:	cmp	w22, #0x0
    d9b4:	mov	w20, #0x0                   	// #0
    d9b8:	ccmp	x19, x21, #0x2, gt
    d9bc:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d9c0:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    d9c4:	ldr	x0, [x28, #4064]
    d9c8:	str	x0, [sp, #136]
    d9cc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d9d0:	ldr	x0, [x0, #3880]
    d9d4:	str	x0, [sp, #144]
    d9d8:	b	de4c <Perl_re_exec_indentf@@Base+0x1c7c>
    d9dc:	cmp	w22, #0x0
    d9e0:	mov	w20, #0x0                   	// #0
    d9e4:	ccmp	x19, x21, #0x2, gt
    d9e8:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    d9ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    d9f0:	ldr	x0, [x0, #3880]
    d9f4:	str	x0, [sp, #136]
    d9f8:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    d9fc:	ldr	x28, [x28, #4064]
    da00:	b	e180 <Perl_re_exec_indentf@@Base+0x1fb0>
    da04:	cmp	w22, #0x0
    da08:	mov	w20, #0x0                   	// #0
    da0c:	ccmp	x19, x21, #0x2, gt
    da10:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    da14:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    da18:	ldr	x0, [x28, #4064]
    da1c:	str	x0, [sp, #144]
    da20:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    da24:	ldr	x0, [x0, #3880]
    da28:	str	x0, [sp, #136]
    da2c:	b	df88 <Perl_re_exec_indentf@@Base+0x1db8>
    da30:	cmp	w22, #0x0
    da34:	mov	w20, #0x0                   	// #0
    da38:	ccmp	x19, x21, #0x2, gt
    da3c:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    da40:	adrp	x28, 91000 <boot_re@@Base+0x2f41c>
    da44:	ldr	x0, [x28, #4064]
    da48:	str	x0, [sp, #136]
    da4c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    da50:	ldr	x0, [x0, #3880]
    da54:	str	x0, [sp, #144]
    da58:	b	dc98 <Perl_re_exec_indentf@@Base+0x1ac8>
    da5c:	cmp	w22, #0x0
    da60:	ccmp	x19, x21, #0x2, gt
    da64:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    da68:	str	w0, [sp, #144]
    da6c:	mov	w0, w0
    da70:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    da74:	ldr	x1, [x1, #3928]
    da78:	ldr	x28, [x1, x0, lsl #3]
    da7c:	mov	w20, #0x0                   	// #0
    da80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    da84:	ldr	x0, [x0, #3824]
    da88:	str	x0, [sp, #136]
    da8c:	b	db28 <Perl_re_exec_indentf@@Base+0x1958>
    da90:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    da94:	add	x3, x3, #0x330
    da98:	add	x3, x3, #0xc48
    da9c:	mov	w2, #0x710                 	// #1808
    daa0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    daa4:	add	x1, x1, #0xc80
    daa8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    daac:	add	x0, x0, #0xce8
    dab0:	bl	58e0 <__assert_fail@plt>
    dab4:	mov	x5, #0x0                   	// #0
    dab8:	mov	x4, #0x0                   	// #0
    dabc:	mov	x2, #0x0                   	// #0
    dac0:	sub	x1, x21, x19
    dac4:	mov	x0, x19
    dac8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    dacc:	mov	x1, x0
    dad0:	mov	x0, x28
    dad4:	bl	59d0 <Perl__invlist_search@plt>
    dad8:	cbz	x28, dbb0 <Perl_re_exec_indentf@@Base+0x19e0>
    dadc:	mvn	x1, x0
    dae0:	and	x1, x1, #0x1
    dae4:	cmp	x0, #0x0
    dae8:	csel	w0, w1, wzr, ge  // ge = tcont
    daec:	cmp	w0, w27
    daf0:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    daf4:	ldrb	w1, [x19]
    daf8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    dafc:	ldr	x0, [x0, #4064]
    db00:	ldrb	w0, [x0, w1, sxtw]
    db04:	add	x19, x19, x0
    db08:	add	w20, w20, #0x1
    db0c:	cmp	w22, w20
    db10:	ccmp	x19, x21, #0x2, gt
    db14:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    db18:	ldr	w1, [sp, #144]
    db1c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    db20:	ldr	x0, [x0, #3928]
    db24:	ldr	x28, [x0, x1, lsl #3]
    db28:	mov	w1, #0x2c                  	// #44
    db2c:	mov	x0, x23
    db30:	bl	52a0 <Perl_ckwarn_d@plt>
    db34:	ands	w0, w0, #0xff
    db38:	mov	w3, #0x9e                  	// #158
    db3c:	csel	w3, w3, wzr, eq  // eq = none
    db40:	cbz	x19, da90 <Perl_re_exec_indentf@@Base+0x18c0>
    db44:	cmp	x21, x19
    db48:	b.ls	dab4 <Perl_re_exec_indentf@@Base+0x18e4>  // b.plast
    db4c:	mov	x0, x19
    db50:	mov	x1, #0x0                   	// #0
    db54:	mov	x6, #0x0                   	// #0
    db58:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    db5c:	ldr	x7, [x2, #3824]
    db60:	ldrb	w5, [x0]
    db64:	ldr	x2, [sp, #136]
    db68:	ldrb	w2, [x2, w5, sxtw]
    db6c:	and	x4, x2, #0xff
    db70:	mov	w8, #0xff                  	// #255
    db74:	asr	w2, w8, w2
    db78:	and	w2, w2, w5
    db7c:	sxtw	x2, w2
    db80:	bfi	x5, x1, #6, #58
    db84:	cmp	x6, #0x0
    db88:	csel	x1, x5, x2, ne  // ne = any
    db8c:	add	x2, x7, x4
    db90:	add	x2, x2, x6
    db94:	ldrb	w6, [x2, #256]
    db98:	cbz	x6, dad0 <Perl_re_exec_indentf@@Base+0x1900>
    db9c:	add	x0, x0, #0x1
    dba0:	cmp	x6, #0x1
    dba4:	ccmp	x0, x21, #0x2, ne  // ne = any
    dba8:	b.cc	db60 <Perl_re_exec_indentf@@Base+0x1990>  // b.lo, b.ul, b.last
    dbac:	b	dab4 <Perl_re_exec_indentf@@Base+0x18e4>
    dbb0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    dbb4:	add	x3, x3, #0x330
    dbb8:	add	x3, x3, #0xb90
    dbbc:	mov	w2, #0x3f                  	// #63
    dbc0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    dbc4:	add	x1, x1, #0x550
    dbc8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    dbcc:	add	x0, x0, #0x568
    dbd0:	bl	58e0 <__assert_fail@plt>
    dbd4:	and	w0, w1, #0xfe
    dbd8:	cmp	w0, #0xc2
    dbdc:	b.eq	dc2c <Perl_re_exec_indentf@@Base+0x1a5c>  // b.none
    dbe0:	sub	x0, x21, x19
    dbe4:	ldr	x2, [sp, #136]
    dbe8:	ldrb	w2, [x2, w1, sxtw]
    dbec:	cmp	x0, x2
    dbf0:	b.lt	dcf8 <Perl_re_exec_indentf@@Base+0x1b28>  // b.tstop
    dbf4:	cmp	w1, #0xe1
    dbf8:	b.eq	dd18 <Perl_re_exec_indentf@@Base+0x1b48>  // b.none
    dbfc:	cmp	w1, #0xe2
    dc00:	b.eq	dd38 <Perl_re_exec_indentf@@Base+0x1b68>  // b.none
    dc04:	mov	w0, #0x0                   	// #0
    dc08:	cmp	w1, #0xe3
    dc0c:	b.ne	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>  // b.any
    dc10:	ldrb	w1, [x19, #1]
    dc14:	cmp	w1, #0x80
    dc18:	b.ne	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>  // b.any
    dc1c:	ldrb	w0, [x19, #2]
    dc20:	cmp	w0, #0x80
    dc24:	cset	w0, eq  // eq = none
    dc28:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dc2c:	sub	x0, x21, x19
    dc30:	cmp	x0, #0x1
    dc34:	b.le	dcd8 <Perl_re_exec_indentf@@Base+0x1b08>
    dc38:	ldrb	w0, [x19, #1]
    dc3c:	and	w2, w0, #0xc0
    dc40:	cmp	w2, #0x80
    dc44:	b.ne	dcd8 <Perl_re_exec_indentf@@Base+0x1b08>  // b.any
    dc48:	lsl	w2, w1, #6
    dc4c:	ubfiz	w1, w1, #6, #5
    dc50:	tst	x1, #0x700
    dc54:	b.ne	dcb4 <Perl_re_exec_indentf@@Base+0x1ae4>  // b.any
    dc58:	and	w0, w0, #0x3f
    dc5c:	orr	w0, w0, w2
    dc60:	and	x0, x0, #0xff
    dc64:	ldr	x1, [sp, #144]
    dc68:	ldr	w0, [x1, x0, lsl #2]
    dc6c:	ubfx	x0, x0, #10, #1
    dc70:	cmp	w27, w0
    dc74:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    dc78:	ldr	x0, [x28, #4064]
    dc7c:	ldrb	w1, [x19]
    dc80:	ldrb	w0, [x0, w1, sxtw]
    dc84:	add	x19, x19, x0
    dc88:	add	w20, w20, #0x1
    dc8c:	cmp	w22, w20
    dc90:	ccmp	x19, x21, #0x2, gt
    dc94:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    dc98:	ldrb	w1, [x19]
    dc9c:	tbnz	w1, #7, dbd4 <Perl_re_exec_indentf@@Base+0x1a04>
    dca0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    dca4:	ldr	x0, [x0, #3880]
    dca8:	ldr	w0, [x0, w1, sxtw #2]
    dcac:	ubfx	x0, x0, #10, #1
    dcb0:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dcb4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    dcb8:	add	x3, x3, #0x330
    dcbc:	add	x3, x3, #0xbf0
    dcc0:	mov	w2, #0x25f3                	// #9715
    dcc4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    dcc8:	add	x1, x1, #0xcb0
    dccc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    dcd0:	add	x0, x0, #0xb78
    dcd4:	bl	58e0 <__assert_fail@plt>
    dcd8:	mov	w4, #0x1                   	// #1
    dcdc:	mov	w3, #0x0                   	// #0
    dce0:	mov	x2, x21
    dce4:	mov	x1, x19
    dce8:	mov	x0, x23
    dcec:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    dcf0:	mov	w0, #0x0                   	// #0
    dcf4:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dcf8:	mov	w4, #0x1                   	// #1
    dcfc:	mov	w3, #0x0                   	// #0
    dd00:	mov	x2, x21
    dd04:	mov	x1, x19
    dd08:	mov	x0, x23
    dd0c:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    dd10:	mov	w0, #0x0                   	// #0
    dd14:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dd18:	ldrb	w1, [x19, #1]
    dd1c:	mov	w0, #0x0                   	// #0
    dd20:	cmp	w1, #0x9a
    dd24:	b.ne	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>  // b.any
    dd28:	ldrb	w0, [x19, #2]
    dd2c:	cmp	w0, #0x80
    dd30:	cset	w0, eq  // eq = none
    dd34:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dd38:	ldrb	w1, [x19, #1]
    dd3c:	cmp	w1, #0x80
    dd40:	b.eq	dd60 <Perl_re_exec_indentf@@Base+0x1b90>  // b.none
    dd44:	mov	w0, #0x0                   	// #0
    dd48:	cmp	w1, #0x81
    dd4c:	b.ne	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>  // b.any
    dd50:	ldrb	w0, [x19, #2]
    dd54:	cmp	w0, #0x9f
    dd58:	cset	w0, eq  // eq = none
    dd5c:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dd60:	ldrb	w1, [x19, #2]
    dd64:	sub	w2, w1, #0x80
    dd68:	mov	w0, #0x1                   	// #1
    dd6c:	cmp	w2, #0xa
    dd70:	b.ls	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>  // b.plast
    dd74:	sub	w0, w1, #0xa8
    dd78:	cmp	w1, #0xaf
    dd7c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    dd80:	cset	w0, ls  // ls = plast
    dd84:	b	dc70 <Perl_re_exec_indentf@@Base+0x1aa0>
    dd88:	and	w0, w1, #0xfe
    dd8c:	cmp	w0, #0xc2
    dd90:	b.eq	dde0 <Perl_re_exec_indentf@@Base+0x1c10>  // b.none
    dd94:	sub	x0, x21, x19
    dd98:	ldr	x2, [sp, #136]
    dd9c:	ldrb	w2, [x2, w1, sxtw]
    dda0:	cmp	x0, x2
    dda4:	b.lt	deac <Perl_re_exec_indentf@@Base+0x1cdc>  // b.tstop
    dda8:	cmp	w1, #0xe1
    ddac:	b.eq	decc <Perl_re_exec_indentf@@Base+0x1cfc>  // b.none
    ddb0:	cmp	w1, #0xe2
    ddb4:	b.eq	deec <Perl_re_exec_indentf@@Base+0x1d1c>  // b.none
    ddb8:	mov	w0, #0x0                   	// #0
    ddbc:	cmp	w1, #0xe3
    ddc0:	b.ne	de24 <Perl_re_exec_indentf@@Base+0x1c54>  // b.any
    ddc4:	ldrb	w1, [x19, #1]
    ddc8:	cmp	w1, #0x80
    ddcc:	b.ne	de24 <Perl_re_exec_indentf@@Base+0x1c54>  // b.any
    ddd0:	ldrb	w0, [x19, #2]
    ddd4:	cmp	w0, #0x80
    ddd8:	cset	w0, eq  // eq = none
    dddc:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    dde0:	sub	x0, x21, x19
    dde4:	cmp	x0, #0x1
    dde8:	b.le	de8c <Perl_re_exec_indentf@@Base+0x1cbc>
    ddec:	ldrb	w0, [x19, #1]
    ddf0:	and	w2, w0, #0xc0
    ddf4:	cmp	w2, #0x80
    ddf8:	b.ne	de8c <Perl_re_exec_indentf@@Base+0x1cbc>  // b.any
    ddfc:	lsl	w2, w1, #6
    de00:	ubfiz	w1, w1, #6, #5
    de04:	tst	x1, #0x700
    de08:	b.ne	de68 <Perl_re_exec_indentf@@Base+0x1c98>  // b.any
    de0c:	and	w0, w0, #0x3f
    de10:	orr	w0, w0, w2
    de14:	and	x0, x0, #0xff
    de18:	ldr	x1, [sp, #144]
    de1c:	ldr	w0, [x1, x0, lsl #2]
    de20:	ubfx	x0, x0, #11, #1
    de24:	cmp	w27, w0
    de28:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    de2c:	ldr	x0, [x28, #4064]
    de30:	ldrb	w1, [x19]
    de34:	ldrb	w0, [x0, w1, sxtw]
    de38:	add	x19, x19, x0
    de3c:	add	w20, w20, #0x1
    de40:	cmp	w22, w20
    de44:	ccmp	x19, x21, #0x2, gt
    de48:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    de4c:	ldrb	w1, [x19]
    de50:	tbnz	w1, #7, dd88 <Perl_re_exec_indentf@@Base+0x1bb8>
    de54:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    de58:	ldr	x0, [x0, #3880]
    de5c:	ldr	w0, [x0, w1, sxtw #2]
    de60:	ubfx	x0, x0, #11, #1
    de64:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    de68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    de6c:	add	x3, x3, #0x330
    de70:	add	x3, x3, #0xbf0
    de74:	mov	w2, #0x25fd                	// #9725
    de78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    de7c:	add	x1, x1, #0xcb0
    de80:	adrp	x0, 63000 <boot_re@@Base+0x141c>
    de84:	add	x0, x0, #0x528
    de88:	bl	58e0 <__assert_fail@plt>
    de8c:	mov	w4, #0x1                   	// #1
    de90:	mov	w3, #0x0                   	// #0
    de94:	mov	x2, x21
    de98:	mov	x1, x19
    de9c:	mov	x0, x23
    dea0:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    dea4:	mov	w0, #0x0                   	// #0
    dea8:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    deac:	mov	w4, #0x1                   	// #1
    deb0:	mov	w3, #0x0                   	// #0
    deb4:	mov	x2, x21
    deb8:	mov	x1, x19
    debc:	mov	x0, x23
    dec0:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    dec4:	mov	w0, #0x0                   	// #0
    dec8:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    decc:	ldrb	w1, [x19, #1]
    ded0:	mov	w0, #0x0                   	// #0
    ded4:	cmp	w1, #0x9a
    ded8:	b.ne	de24 <Perl_re_exec_indentf@@Base+0x1c54>  // b.any
    dedc:	ldrb	w0, [x19, #2]
    dee0:	cmp	w0, #0x80
    dee4:	cset	w0, eq  // eq = none
    dee8:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    deec:	ldrb	w1, [x19, #1]
    def0:	cmp	w1, #0x80
    def4:	b.eq	df14 <Perl_re_exec_indentf@@Base+0x1d44>  // b.none
    def8:	mov	w0, #0x0                   	// #0
    defc:	cmp	w1, #0x81
    df00:	b.ne	de24 <Perl_re_exec_indentf@@Base+0x1c54>  // b.any
    df04:	ldrb	w0, [x19, #2]
    df08:	cmp	w0, #0x9f
    df0c:	cset	w0, eq  // eq = none
    df10:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    df14:	ldrb	w1, [x19, #2]
    df18:	sub	w0, w1, #0x80
    df1c:	cmp	w0, #0xa
    df20:	cset	w0, ls  // ls = plast
    df24:	cmp	w1, #0xaf
    df28:	csinc	w0, w0, wzr, ne  // ne = any
    df2c:	b	de24 <Perl_re_exec_indentf@@Base+0x1c54>
    df30:	and	w2, w1, #0xfe
    df34:	mov	w0, #0x0                   	// #0
    df38:	cmp	w2, #0xc2
    df3c:	b.eq	df60 <Perl_re_exec_indentf@@Base+0x1d90>  // b.none
    df40:	sub	x0, x21, x19
    df44:	ldr	x2, [sp, #144]
    df48:	ldrb	w2, [x2, w1, sxtw]
    df4c:	cmp	x0, x2
    df50:	b.lt	dfa0 <Perl_re_exec_indentf@@Base+0x1dd0>  // b.tstop
    df54:	mov	w0, #0x0                   	// #0
    df58:	cmp	w1, #0xef
    df5c:	b.eq	dfc0 <Perl_re_exec_indentf@@Base+0x1df0>  // b.none
    df60:	cmp	w27, w0
    df64:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    df68:	ldr	x0, [x28, #4064]
    df6c:	ldrb	w1, [x19]
    df70:	ldrb	w0, [x0, w1, sxtw]
    df74:	add	x19, x19, x0
    df78:	add	w20, w20, #0x1
    df7c:	cmp	w22, w20
    df80:	ccmp	x19, x21, #0x2, gt
    df84:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    df88:	ldrb	w1, [x19]
    df8c:	tbnz	w1, #7, df30 <Perl_re_exec_indentf@@Base+0x1d60>
    df90:	ldr	x0, [sp, #136]
    df94:	ldr	w0, [x0, w1, sxtw #2]
    df98:	ubfx	x0, x0, #12, #1
    df9c:	b	df60 <Perl_re_exec_indentf@@Base+0x1d90>
    dfa0:	mov	w4, #0x1                   	// #1
    dfa4:	mov	w3, #0x0                   	// #0
    dfa8:	mov	x2, x21
    dfac:	mov	x1, x19
    dfb0:	mov	x0, x23
    dfb4:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    dfb8:	mov	w0, #0x0                   	// #0
    dfbc:	b	df60 <Perl_re_exec_indentf@@Base+0x1d90>
    dfc0:	ldrb	w1, [x19, #1]
    dfc4:	cmp	w1, #0xbc
    dfc8:	b.eq	dfec <Perl_re_exec_indentf@@Base+0x1e1c>  // b.none
    dfcc:	mov	w0, #0x0                   	// #0
    dfd0:	cmp	w1, #0xbd
    dfd4:	b.ne	df60 <Perl_re_exec_indentf@@Base+0x1d90>  // b.any
    dfd8:	ldrb	w0, [x19, #2]
    dfdc:	sub	w0, w0, #0x81
    dfe0:	cmp	w0, #0x5
    dfe4:	cset	w0, ls  // ls = plast
    dfe8:	b	df60 <Perl_re_exec_indentf@@Base+0x1d90>
    dfec:	ldrb	w1, [x19, #2]
    dff0:	sub	w2, w1, #0x90
    dff4:	mov	w0, #0x1                   	// #1
    dff8:	cmp	w2, #0x9
    dffc:	b.ls	df60 <Perl_re_exec_indentf@@Base+0x1d90>  // b.plast
    e000:	sub	w1, w1, #0xa1
    e004:	cmp	w1, #0x5
    e008:	cset	w0, ls  // ls = plast
    e00c:	b	df60 <Perl_re_exec_indentf@@Base+0x1d90>
    e010:	and	w0, w1, #0xfe
    e014:	cmp	w0, #0xc2
    e018:	b.eq	e080 <Perl_re_exec_indentf@@Base+0x1eb0>  // b.none
    e01c:	sub	x0, x21, x19
    e020:	ldr	x2, [sp, #136]
    e024:	ldrb	w2, [x2, w1, sxtw]
    e028:	cmp	x0, x2
    e02c:	b.lt	e10c <Perl_re_exec_indentf@@Base+0x1f3c>  // b.tstop
    e030:	mov	w0, #0x0                   	// #0
    e034:	cmp	w1, #0xe2
    e038:	b.eq	e12c <Perl_re_exec_indentf@@Base+0x1f5c>  // b.none
    e03c:	cmp	w27, w0
    e040:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    e044:	ldr	x0, [x28, #4064]
    e048:	ldrb	w1, [x19]
    e04c:	ldrb	w0, [x0, w1, sxtw]
    e050:	add	x19, x19, x0
    e054:	add	w20, w20, #0x1
    e058:	cmp	w22, w20
    e05c:	ccmp	x19, x21, #0x2, gt
    e060:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    e064:	ldrb	w1, [x19]
    e068:	tbnz	w1, #7, e010 <Perl_re_exec_indentf@@Base+0x1e40>
    e06c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    e070:	ldr	x0, [x0, #3880]
    e074:	ldr	w0, [x0, w1, sxtw #2]
    e078:	ubfx	x0, x0, #15, #1
    e07c:	b	e03c <Perl_re_exec_indentf@@Base+0x1e6c>
    e080:	sub	x0, x21, x19
    e084:	cmp	x0, #0x1
    e088:	b.le	e0ec <Perl_re_exec_indentf@@Base+0x1f1c>
    e08c:	ldrb	w0, [x19, #1]
    e090:	and	w2, w0, #0xc0
    e094:	cmp	w2, #0x80
    e098:	b.ne	e0ec <Perl_re_exec_indentf@@Base+0x1f1c>  // b.any
    e09c:	lsl	w2, w1, #6
    e0a0:	ubfiz	w1, w1, #6, #5
    e0a4:	tst	x1, #0x700
    e0a8:	b.ne	e0c8 <Perl_re_exec_indentf@@Base+0x1ef8>  // b.any
    e0ac:	and	w0, w0, #0x3f
    e0b0:	orr	w0, w0, w2
    e0b4:	and	x0, x0, #0xff
    e0b8:	ldr	x1, [sp, #144]
    e0bc:	ldr	w0, [x1, x0, lsl #2]
    e0c0:	ubfx	x0, x0, #15, #1
    e0c4:	b	e03c <Perl_re_exec_indentf@@Base+0x1e6c>
    e0c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e0cc:	add	x3, x3, #0x330
    e0d0:	add	x3, x3, #0xbf0
    e0d4:	mov	w2, #0x2611                	// #9745
    e0d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e0dc:	add	x1, x1, #0xcb0
    e0e0:	adrp	x0, 63000 <boot_re@@Base+0x141c>
    e0e4:	add	x0, x0, #0xed8
    e0e8:	bl	58e0 <__assert_fail@plt>
    e0ec:	mov	w4, #0x1                   	// #1
    e0f0:	mov	w3, #0x0                   	// #0
    e0f4:	mov	x2, x21
    e0f8:	mov	x1, x19
    e0fc:	mov	x0, x23
    e100:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    e104:	mov	w0, #0x0                   	// #0
    e108:	b	e03c <Perl_re_exec_indentf@@Base+0x1e6c>
    e10c:	mov	w4, #0x1                   	// #1
    e110:	mov	w3, #0x0                   	// #0
    e114:	mov	x2, x21
    e118:	mov	x1, x19
    e11c:	mov	x0, x23
    e120:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    e124:	mov	w0, #0x0                   	// #0
    e128:	b	e03c <Perl_re_exec_indentf@@Base+0x1e6c>
    e12c:	ldrb	w1, [x19, #1]
    e130:	cmp	w1, #0x80
    e134:	b.ne	e03c <Perl_re_exec_indentf@@Base+0x1e6c>  // b.any
    e138:	ldrb	w0, [x19, #2]
    e13c:	sub	w0, w0, #0xa8
    e140:	cmp	w0, #0x1
    e144:	cset	w0, ls  // ls = plast
    e148:	b	e03c <Perl_re_exec_indentf@@Base+0x1e6c>
    e14c:	and	w2, w1, #0xfe
    e150:	mov	w0, #0x0                   	// #0
    e154:	cmp	w2, #0xc2
    e158:	b.eq	e19c <Perl_re_exec_indentf@@Base+0x1fcc>  // b.none
    e15c:	cmp	w27, w0
    e160:	b.eq	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.none
    e164:	ldrb	w0, [x19]
    e168:	ldrb	w0, [x28, w0, sxtw]
    e16c:	add	x19, x19, x0
    e170:	add	w20, w20, #0x1
    e174:	cmp	w22, w20
    e178:	ccmp	x19, x21, #0x2, gt
    e17c:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    e180:	ldrb	w1, [x19]
    e184:	tbnz	w1, #7, e14c <Perl_re_exec_indentf@@Base+0x1f7c>
    e188:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    e18c:	ldr	x0, [x0, #3880]
    e190:	ldr	w0, [x0, w1, sxtw #2]
    e194:	ubfx	x0, x0, #13, #1
    e198:	b	e15c <Perl_re_exec_indentf@@Base+0x1f8c>
    e19c:	sub	x0, x21, x19
    e1a0:	cmp	x0, #0x1
    e1a4:	b.le	e1d0 <Perl_re_exec_indentf@@Base+0x2000>
    e1a8:	ldrb	w0, [x19, #1]
    e1ac:	and	w2, w0, #0xc0
    e1b0:	cmp	w2, #0x80
    e1b4:	b.ne	e1d0 <Perl_re_exec_indentf@@Base+0x2000>  // b.any
    e1b8:	bfi	w0, w1, #6, #26
    e1bc:	and	x0, x0, #0xff
    e1c0:	ldr	x1, [sp, #136]
    e1c4:	ldr	w0, [x1, x0, lsl #2]
    e1c8:	ubfx	x0, x0, #13, #1
    e1cc:	b	e15c <Perl_re_exec_indentf@@Base+0x1f8c>
    e1d0:	mov	w4, #0x1                   	// #1
    e1d4:	mov	w3, #0x0                   	// #0
    e1d8:	mov	x2, x21
    e1dc:	mov	x1, x19
    e1e0:	mov	x0, x23
    e1e4:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
    e1e8:	mov	w0, #0x0                   	// #0
    e1ec:	b	e15c <Perl_re_exec_indentf@@Base+0x1f8c>
    e1f0:	mov	x27, x4
    e1f4:	mov	w22, #0x7fffffff            	// #2147483647
    e1f8:	cbnz	w28, e218 <Perl_re_exec_indentf@@Base+0x2048>
    e1fc:	mov	w20, #0x0                   	// #0
    e200:	mov	w3, #0x1                   	// #1
    e204:	cmp	x21, x19
    e208:	b.hi	e370 <Perl_re_exec_indentf@@Base+0x21a0>  // b.pmore
    e20c:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    e210:	mov	x27, x21
    e214:	b	e1f8 <Perl_re_exec_indentf@@Base+0x2028>
    e218:	cmp	w22, #0x0
    e21c:	mov	w20, #0x0                   	// #0
    e220:	ccmp	x19, x27, #0x2, gt
    e224:	b.cs	d0a4 <Perl_re_exec_indentf@@Base+0xed4>  // b.hs, b.nlast
    e228:	mov	w3, #0x2                   	// #2
    e22c:	mov	w2, #0x1                   	// #1
    e230:	mov	w4, #0x3                   	// #3
    e234:	b	e250 <Perl_re_exec_indentf@@Base+0x2080>
    e238:	mov	w0, w2
    e23c:	add	x19, x19, w0, sxtw
    e240:	add	w20, w20, #0x1
    e244:	cmp	w20, w22
    e248:	ccmp	x19, x27, #0x2, lt  // lt = tstop
    e24c:	b.cs	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.hs, b.nlast
    e250:	sub	x0, x27, x19
    e254:	cmp	x0, #0x2
    e258:	b.le	e2d8 <Perl_re_exec_indentf@@Base+0x2108>
    e25c:	ldrb	w0, [x19]
    e260:	sub	w1, w0, #0xa
    e264:	cmp	w1, #0x2
    e268:	b.ls	e238 <Perl_re_exec_indentf@@Base+0x2068>  // b.plast
    e26c:	cmp	w0, #0xd
    e270:	b.eq	e2b0 <Perl_re_exec_indentf@@Base+0x20e0>  // b.none
    e274:	cmp	w0, #0xc2
    e278:	b.eq	e2c4 <Perl_re_exec_indentf@@Base+0x20f4>  // b.none
    e27c:	cmp	w0, #0xe2
    e280:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e284:	ldrb	w0, [x19, #1]
    e288:	cmp	w0, #0x80
    e28c:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e290:	ldrb	w0, [x19, #2]
    e294:	sub	w0, w0, #0xa8
    e298:	cmp	w0, #0x1
    e29c:	b.hi	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.pmore
    e2a0:	mov	w0, w4
    e2a4:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e2a8:	mov	w0, w2
    e2ac:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e2b0:	ldrb	w0, [x19, #1]
    e2b4:	cmp	w0, #0xa
    e2b8:	cset	w0, eq  // eq = none
    e2bc:	add	w0, w0, #0x1
    e2c0:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e2c4:	ldrb	w0, [x19, #1]
    e2c8:	cmp	w0, #0x85
    e2cc:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e2d0:	mov	w0, w3
    e2d4:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e2d8:	b.ne	e324 <Perl_re_exec_indentf@@Base+0x2154>  // b.any
    e2dc:	ldrb	w0, [x19]
    e2e0:	sub	w1, w0, #0xa
    e2e4:	cmp	w1, #0x2
    e2e8:	b.ls	e2a8 <Perl_re_exec_indentf@@Base+0x20d8>  // b.plast
    e2ec:	cmp	w0, #0xd
    e2f0:	b.eq	e310 <Perl_re_exec_indentf@@Base+0x2140>  // b.none
    e2f4:	cmp	w0, #0xc2
    e2f8:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e2fc:	ldrb	w0, [x19, #1]
    e300:	cmp	w0, #0x85
    e304:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e308:	mov	w0, w3
    e30c:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e310:	ldrb	w0, [x19, #1]
    e314:	cmp	w0, #0xa
    e318:	cset	w0, eq  // eq = none
    e31c:	add	w0, w0, #0x1
    e320:	b	e23c <Perl_re_exec_indentf@@Base+0x206c>
    e324:	cmp	x0, #0x0
    e328:	b.le	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    e32c:	ldrb	w1, [x19]
    e330:	sub	w1, w1, #0xa
    e334:	cmp	w1, #0x3
    e338:	cset	w0, ls  // ls = plast
    e33c:	b.ls	e23c <Perl_re_exec_indentf@@Base+0x206c>  // b.plast
    e340:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    e344:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e348:	ldrb	w0, [x19]
    e34c:	sub	w1, w0, #0xa
    e350:	cmp	w0, #0x85
    e354:	ccmp	w1, #0x3, #0x0, ne  // ne = any
    e358:	b.hi	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.pmore
    e35c:	mov	w0, w3
    e360:	add	x19, x19, w0, sxtw
    e364:	add	w20, w20, #0x1
    e368:	cmp	x21, x19
    e36c:	b.ls	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.plast
    e370:	sub	x0, x21, x19
    e374:	cmp	x0, #0x1
    e378:	b.le	e344 <Perl_re_exec_indentf@@Base+0x2174>
    e37c:	ldrb	w1, [x19]
    e380:	sub	w2, w1, #0xa
    e384:	cmp	w1, #0x85
    e388:	mov	w0, w3
    e38c:	ccmp	w2, #0x2, #0x0, ne  // ne = any
    e390:	b.ls	e360 <Perl_re_exec_indentf@@Base+0x2190>  // b.plast
    e394:	cmp	w1, #0xd
    e398:	b.ne	d0a0 <Perl_re_exec_indentf@@Base+0xed0>  // b.any
    e39c:	ldrb	w0, [x19, #1]
    e3a0:	cmp	w0, #0xa
    e3a4:	cset	w0, eq  // eq = none
    e3a8:	add	w0, w0, #0x1
    e3ac:	b	e360 <Perl_re_exec_indentf@@Base+0x2190>
    e3b0:	mov	w22, #0x7fffffff            	// #2147483647
    e3b4:	ldr	x0, [x23, #1440]
    e3b8:	cbz	x0, d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    e3bc:	bl	5050 <Perl__warn_problematic_locale@plt>
    e3c0:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    e3c4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    e3c8:	ldr	x1, [x1, #3776]
    e3cc:	ldr	x3, [x1, w0, sxtw #3]
    e3d0:	mov	w2, w0
    e3d4:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    e3d8:	add	x1, x1, #0x888
    e3dc:	mov	x0, x23
    e3e0:	bl	5420 <Perl_croak@plt>
    e3e4:	mov	w20, w22
    e3e8:	b	d0a0 <Perl_re_exec_indentf@@Base+0xed0>
    e3ec:	mov	w22, #0x7fffffff            	// #2147483647
    e3f0:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    e3f4:	mov	x19, x21
    e3f8:	b	d0a4 <Perl_re_exec_indentf@@Base+0xed4>
    e3fc:	mov	x2, #0xff08                	// #65288
    e400:	mov	x1, x19
    e404:	mov	x0, x23
    e408:	bl	5310 <Perl_sv_setuv@plt>
    e40c:	b	d0e0 <Perl_re_exec_indentf@@Base+0xf10>
    e410:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e414:	add	x3, x3, #0x330
    e418:	add	x3, x3, #0xbf0
    e41c:	mov	w2, #0x2657                	// #9815
    e420:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e424:	add	x1, x1, #0xcb0
    e428:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    e42c:	add	x0, x0, #0xda0
    e430:	bl	58e0 <__assert_fail@plt>
    e434:	and	w1, w1, #0xff
    e438:	sub	w1, w1, #0x9
    e43c:	cmp	w1, #0x1
    e440:	b.hi	d114 <Perl_re_exec_indentf@@Base+0xf44>  // b.pmore
    e444:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e448:	add	x3, x3, #0x330
    e44c:	add	x3, x3, #0xbf0
    e450:	mov	w2, #0x2657                	// #9815
    e454:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e458:	add	x1, x1, #0xcb0
    e45c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    e460:	add	x0, x0, #0xdd0
    e464:	bl	58e0 <__assert_fail@plt>
    e468:	mov	w2, #0x2                   	// #2
    e46c:	mov	x1, x19
    e470:	mov	x0, x23
    e474:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    e478:	b	d11c <Perl_re_exec_indentf@@Base+0xf4c>
    e47c:	ldrb	w0, [x3, #1]
    e480:	sub	w1, w0, #0x2
    e484:	cmp	w1, #0x61
    e488:	b.hi	e3c4 <Perl_re_exec_indentf@@Base+0x21f4>  // b.pmore
    e48c:	adrp	x2, 6b000 <boot_re@@Base+0x941c>
    e490:	add	x2, x2, #0xf78
    e494:	ldrh	w1, [x2, w1, uxtw #1]
    e498:	adr	x2, e4a4 <Perl_re_exec_indentf@@Base+0x22d4>
    e49c:	add	x1, x2, w1, sxth #2
    e4a0:	br	x1
    e4a4:	bl	5300 <__stack_chk_fail@plt>
    e4a8:	stp	x29, x30, [sp, #-128]!
    e4ac:	mov	x29, sp
    e4b0:	stp	x19, x20, [sp, #16]
    e4b4:	stp	x21, x22, [sp, #32]
    e4b8:	stp	x23, x24, [sp, #48]
    e4bc:	stp	x25, x26, [sp, #64]
    e4c0:	stp	x27, x28, [sp, #80]
    e4c4:	mov	x19, x0
    e4c8:	mov	x21, x1
    e4cc:	mov	w20, w2
    e4d0:	mov	w23, w3
    e4d4:	mov	w22, w4
    e4d8:	ldr	w0, [x0, #48]
    e4dc:	str	w0, [sp, #108]
    e4e0:	sub	w24, w3, w2
    e4e4:	add	w24, w24, w24, lsl #1
    e4e8:	add	w25, w24, #0x3
    e4ec:	sxtw	x27, w25
    e4f0:	sbfiz	x26, x25, #6, #32
    e4f4:	str	xzr, [sp, #120]
    e4f8:	ldr	x0, [x19, #224]
    e4fc:	cbz	x0, e564 <Perl_re_exec_indentf@@Base+0x2394>
    e500:	mov	w2, #0x1                   	// #1
    e504:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    e508:	add	x1, x1, #0x608
    e50c:	mov	x0, x19
    e510:	bl	54f0 <Perl_get_sv@plt>
    e514:	mov	x28, x0
    e518:	cbz	x0, e564 <Perl_re_exec_indentf@@Base+0x2394>
    e51c:	ldr	w0, [x0, #12]
    e520:	tbz	w0, #8, e5c0 <Perl_re_exec_indentf@@Base+0x23f0>
    e524:	ldr	w1, [x28, #12]
    e528:	and	w0, w1, #0x3fff00
    e52c:	and	w0, w0, #0xffe001ff
    e530:	cmp	w0, #0x100
    e534:	b.ne	e62c <Perl_re_exec_indentf@@Base+0x245c>  // b.any
    e538:	and	w2, w1, #0xf
    e53c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    e540:	ldr	x0, [x0, #3712]
    e544:	ldrb	w0, [x0, w2, uxtw]
    e548:	cbz	w0, e5d4 <Perl_re_exec_indentf@@Base+0x2404>
    e54c:	and	w0, w1, #0xc000
    e550:	cmp	w0, #0x8, lsl #12
    e554:	b.eq	e5f8 <Perl_re_exec_indentf@@Base+0x2428>  // b.none
    e558:	ldr	x0, [x28]
    e55c:	ldr	x0, [x0, #32]
    e560:	str	x0, [sp, #120]
    e564:	cbz	x21, e640 <Perl_re_exec_indentf@@Base+0x2470>
    e568:	tbnz	w24, #31, e664 <Perl_re_exec_indentf@@Base+0x2494>
    e56c:	tst	x27, #0xfc00000000000000
    e570:	b.ne	e684 <Perl_re_exec_indentf@@Base+0x24b4>  // b.any
    e574:	ldr	w0, [x19, #48]
    e578:	add	w0, w0, #0x1
    e57c:	add	w0, w0, w25
    e580:	ldr	w1, [x19, #52]
    e584:	cmp	w0, w1
    e588:	b.gt	e6a0 <Perl_re_exec_indentf@@Base+0x24d0>
    e58c:	ldr	w0, [x19, #2368]
    e590:	tbnz	w0, #20, e59c <Perl_re_exec_indentf@@Base+0x23cc>
    e594:	ldr	x0, [sp, #120]
    e598:	tbz	w0, #22, e5a4 <Perl_re_exec_indentf@@Base+0x23d4>
    e59c:	cmp	w23, w20
    e5a0:	b.gt	e6b0 <Perl_re_exec_indentf@@Base+0x24e0>
    e5a4:	add	w20, w20, #0x1
    e5a8:	mov	w24, w23
    e5ac:	cmp	w23, w20
    e5b0:	b.lt	e780 <Perl_re_exec_indentf@@Base+0x25b0>  // b.tstop
    e5b4:	adrp	x25, 64000 <boot_re@@Base+0x241c>
    e5b8:	add	x25, x25, #0x9c0
    e5bc:	b	e700 <Perl_re_exec_indentf@@Base+0x2530>
    e5c0:	mov	x2, #0xff08                	// #65288
    e5c4:	mov	x1, x28
    e5c8:	mov	x0, x19
    e5cc:	bl	5310 <Perl_sv_setuv@plt>
    e5d0:	b	e524 <Perl_re_exec_indentf@@Base+0x2354>
    e5d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e5d8:	add	x3, x3, #0x330
    e5dc:	add	x3, x3, #0xc60
    e5e0:	mov	w2, #0xdd                  	// #221
    e5e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e5e8:	add	x1, x1, #0xcb0
    e5ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    e5f0:	add	x0, x0, #0xda0
    e5f4:	bl	58e0 <__assert_fail@plt>
    e5f8:	and	w0, w1, #0xff
    e5fc:	sub	w0, w0, #0x9
    e600:	cmp	w0, #0x1
    e604:	b.hi	e558 <Perl_re_exec_indentf@@Base+0x2388>  // b.pmore
    e608:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e60c:	add	x3, x3, #0x330
    e610:	add	x3, x3, #0xc60
    e614:	mov	w2, #0xdd                  	// #221
    e618:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e61c:	add	x1, x1, #0xcb0
    e620:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    e624:	add	x0, x0, #0xdd0
    e628:	bl	58e0 <__assert_fail@plt>
    e62c:	mov	w2, #0x2                   	// #2
    e630:	mov	x1, x28
    e634:	mov	x0, x19
    e638:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    e63c:	b	e560 <Perl_re_exec_indentf@@Base+0x2390>
    e640:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    e644:	add	x3, x3, #0x330
    e648:	add	x3, x3, #0xc60
    e64c:	mov	w2, #0xdf                  	// #223
    e650:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    e654:	add	x1, x1, #0xcb0
    e658:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    e65c:	add	x0, x0, #0x618
    e660:	bl	58e0 <__assert_fail@plt>
    e664:	mov	w5, #0x3                   	// #3
    e668:	mov	w4, w20
    e66c:	mov	w3, w23
    e670:	mov	w2, w24
    e674:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    e678:	add	x1, x1, #0x8f0
    e67c:	mov	x0, x19
    e680:	bl	5420 <Perl_croak@plt>
    e684:	sxtw	x4, w20
    e688:	mov	w3, w23
    e68c:	mov	x2, x27
    e690:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    e694:	add	x1, x1, #0x950
    e698:	mov	x0, x19
    e69c:	bl	5420 <Perl_croak@plt>
    e6a0:	add	w1, w25, #0x1
    e6a4:	mov	x0, x19
    e6a8:	bl	51e0 <Perl_savestack_grow_cnt@plt>
    e6ac:	b	e58c <Perl_re_exec_indentf@@Base+0x23bc>
    e6b0:	ldr	x4, [x21, #120]
    e6b4:	mov	x3, x21
    e6b8:	mov	w2, w22
    e6bc:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    e6c0:	add	x1, x1, #0x990
    e6c4:	mov	x0, x19
    e6c8:	bl	5290 <Perl_re_exec_indentf@plt>
    e6cc:	b	e5a4 <Perl_re_exec_indentf@@Base+0x23d4>
    e6d0:	ldr	x1, [x21, #120]
    e6d4:	add	x0, x1, x0
    e6d8:	ldr	x6, [x0, #8]
    e6dc:	ldr	x5, [x0, #16]
    e6e0:	ldr	x4, [x1, x2, lsl #3]
    e6e4:	mov	w2, w22
    e6e8:	mov	x1, x25
    e6ec:	mov	x0, x19
    e6f0:	bl	5290 <Perl_re_exec_indentf@plt>
    e6f4:	add	w20, w20, #0x1
    e6f8:	cmp	w24, w20
    e6fc:	b.lt	e780 <Perl_re_exec_indentf@@Base+0x25b0>  // b.tstop
    e700:	sxtw	x3, w20
    e704:	add	x2, x3, w20, sxtw #1
    e708:	lsl	x0, x2, #3
    e70c:	ldr	x1, [x21, #120]
    e710:	add	x1, x1, x0
    e714:	ldr	x5, [x19, #40]
    e718:	ldr	w4, [x19, #48]
    e71c:	add	w6, w4, #0x1
    e720:	str	w6, [x19, #48]
    e724:	ldr	x1, [x1, #8]
    e728:	str	x1, [x5, w4, sxtw #3]
    e72c:	ldr	x5, [x21, #120]
    e730:	ldr	x4, [x19, #40]
    e734:	ldr	w1, [x19, #48]
    e738:	add	w6, w1, #0x1
    e73c:	str	w6, [x19, #48]
    e740:	ldr	x5, [x5, x2, lsl #3]
    e744:	str	x5, [x4, w1, sxtw #3]
    e748:	ldr	x1, [x21, #120]
    e74c:	add	x1, x1, x0
    e750:	ldr	x5, [x1, #16]
    e754:	ldr	x4, [x19, #40]
    e758:	ldr	w1, [x19, #48]
    e75c:	add	w6, w1, #0x1
    e760:	str	w6, [x19, #48]
    e764:	sbfiz	x1, x1, #3, #32
    e768:	str	w5, [x4, x1]
    e76c:	ldr	w1, [x19, #2368]
    e770:	tbnz	w1, #20, e6d0 <Perl_re_exec_indentf@@Base+0x2500>
    e774:	ldr	x1, [sp, #120]
    e778:	tbz	w1, #22, e6f4 <Perl_re_exec_indentf@@Base+0x2524>
    e77c:	b	e6d0 <Perl_re_exec_indentf@@Base+0x2500>
    e780:	ldr	x1, [x19, #40]
    e784:	ldr	w0, [x19, #48]
    e788:	add	w2, w0, #0x1
    e78c:	str	w2, [x19, #48]
    e790:	sbfiz	x0, x0, #3, #32
    e794:	str	w23, [x1, x0]
    e798:	ldr	w2, [x21, #112]
    e79c:	ldr	x1, [x19, #40]
    e7a0:	ldr	w0, [x19, #48]
    e7a4:	add	w3, w0, #0x1
    e7a8:	str	w3, [x19, #48]
    e7ac:	sbfiz	x0, x0, #3, #32
    e7b0:	str	w2, [x1, x0]
    e7b4:	ldr	w2, [x21, #116]
    e7b8:	ldr	x1, [x19, #40]
    e7bc:	ldr	w0, [x19, #48]
    e7c0:	add	w3, w0, #0x1
    e7c4:	str	w3, [x19, #48]
    e7c8:	sbfiz	x0, x0, #3, #32
    e7cc:	str	w2, [x1, x0]
    e7d0:	ldr	x1, [x19, #40]
    e7d4:	ldr	w0, [x19, #48]
    e7d8:	add	w2, w0, #0x1
    e7dc:	str	w2, [x19, #48]
    e7e0:	orr	x26, x26, #0x3
    e7e4:	str	x26, [x1, w0, sxtw #3]
    e7e8:	ldr	w0, [sp, #108]
    e7ec:	ldp	x19, x20, [sp, #16]
    e7f0:	ldp	x21, x22, [sp, #32]
    e7f4:	ldp	x23, x24, [sp, #48]
    e7f8:	ldp	x25, x26, [sp, #64]
    e7fc:	ldp	x27, x28, [sp, #80]
    e800:	ldp	x29, x30, [sp], #128
    e804:	ret
    e808:	sub	sp, sp, #0x210
    e80c:	stp	x29, x30, [sp, #32]
    e810:	add	x29, sp, #0x20
    e814:	stp	x19, x20, [sp, #48]
    e818:	stp	x21, x22, [sp, #64]
    e81c:	stp	x23, x24, [sp, #80]
    e820:	stp	x25, x26, [sp, #96]
    e824:	stp	x27, x28, [sp, #112]
    e828:	mov	x27, x0
    e82c:	mov	x26, x1
    e830:	str	x2, [sp, #296]
    e834:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    e838:	ldr	x0, [x0, #3920]
    e83c:	ldr	x1, [x0]
    e840:	str	x1, [sp, #520]
    e844:	mov	x1, #0x0                   	// #0
    e848:	ldr	x0, [x26]
    e84c:	ldr	x1, [x0]
    e850:	str	x1, [sp, #288]
    e854:	ldr	w0, [x0, #12]
    e858:	and	w1, w0, #0xff
    e85c:	cmp	w1, #0x8
    e860:	b.eq	e894 <Perl_re_exec_indentf@@Base+0x26c4>  // b.none
    e864:	mov	w2, #0x80ff                	// #33023
    e868:	movk	w2, #0x100, lsl #16
    e86c:	and	w0, w0, w2
    e870:	mov	w2, #0xa                   	// #10
    e874:	movk	w2, #0x100, lsl #16
    e878:	cmp	w0, w2
    e87c:	b.ne	ebf4 <Perl_re_exec_indentf@@Base+0x2a24>  // b.any
    e880:	cmp	w1, #0xa
    e884:	b.ne	e894 <Perl_re_exec_indentf@@Base+0x26c4>  // b.any
    e888:	ldr	x0, [sp, #288]
    e88c:	ldr	x0, [x0, #24]
    e890:	str	x0, [sp, #288]
    e894:	ldr	x0, [sp, #288]
    e898:	ldr	x25, [x0, #104]
    e89c:	str	xzr, [sp, #456]
    e8a0:	ldr	x0, [x27, #224]
    e8a4:	cbz	x0, e90c <Perl_re_exec_indentf@@Base+0x273c>
    e8a8:	mov	w2, #0x1                   	// #1
    e8ac:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    e8b0:	add	x1, x1, #0x608
    e8b4:	mov	x0, x27
    e8b8:	bl	54f0 <Perl_get_sv@plt>
    e8bc:	mov	x19, x0
    e8c0:	cbz	x0, e90c <Perl_re_exec_indentf@@Base+0x273c>
    e8c4:	ldr	w0, [x0, #12]
    e8c8:	tbz	w0, #8, ec18 <Perl_re_exec_indentf@@Base+0x2a48>
    e8cc:	ldr	w1, [x19, #12]
    e8d0:	and	w0, w1, #0x3fff00
    e8d4:	and	w0, w0, #0xffe001ff
    e8d8:	cmp	w0, #0x100
    e8dc:	b.ne	ec84 <Perl_re_exec_indentf@@Base+0x2ab4>  // b.any
    e8e0:	and	w2, w1, #0xf
    e8e4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    e8e8:	ldr	x0, [x0, #3712]
    e8ec:	ldrb	w0, [x0, w2, uxtw]
    e8f0:	cbz	w0, ec2c <Perl_re_exec_indentf@@Base+0x2a5c>
    e8f4:	and	w0, w1, #0xc000
    e8f8:	cmp	w0, #0x8, lsl #12
    e8fc:	b.eq	ec50 <Perl_re_exec_indentf@@Base+0x2a80>  // b.none
    e900:	ldr	x0, [x19]
    e904:	ldr	x0, [x0, #32]
    e908:	str	x0, [sp, #456]
    e90c:	ldr	x0, [sp, #296]
    e910:	cbz	x0, ec98 <Perl_re_exec_indentf@@Base+0x2ac8>
    e914:	str	xzr, [x26, #48]
    e918:	ldr	x4, [sp, #288]
    e91c:	ldr	x1, [x4, #120]
    e920:	ldr	x0, [sp, #296]
    e924:	ldr	x0, [x0]
    e928:	ldr	x2, [x26, #8]
    e92c:	sub	x0, x0, x2
    e930:	str	x0, [x1]
    e934:	str	wzr, [x4, #112]
    e938:	str	wzr, [x4, #116]
    e93c:	ldr	w2, [x4, #96]
    e940:	cbz	w2, e970 <Perl_re_exec_indentf@@Base+0x27a0>
    e944:	ldr	x0, [x4, #120]
    e948:	mov	w1, w2
    e94c:	cmp	w2, #0x0
    e950:	b.le	e970 <Perl_re_exec_indentf@@Base+0x27a0>
    e954:	mov	x2, #0xffffffffffffffff    	// #-1
    e958:	str	x2, [x0, #24]!
    e95c:	str	x2, [x0, #8]
    e960:	sub	w1, w1, #0x1
    e964:	ldr	w3, [x4, #112]
    e968:	cmp	w3, w1
    e96c:	b.lt	e958 <Perl_re_exec_indentf@@Base+0x2788>  // b.tstop
    e970:	ldr	w0, [x27, #2368]
    e974:	tbnz	w0, #20, e980 <Perl_re_exec_indentf@@Base+0x27b0>
    e978:	ldr	x0, [sp, #456]
    e97c:	tbz	w0, #19, e998 <Perl_re_exec_indentf@@Base+0x27c8>
    e980:	ldrsw	x3, [x27, #48]
    e984:	mov	w2, #0x0                   	// #0
    e988:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    e98c:	add	x1, x1, #0xa20
    e990:	mov	x0, x27
    e994:	bl	5290 <Perl_re_exec_indentf@plt>
    e998:	ldr	w0, [x27, #48]
    e99c:	str	w0, [sp, #432]
    e9a0:	ldr	x0, [sp, #296]
    e9a4:	ldr	x0, [x0]
    e9a8:	str	x0, [sp, #136]
    e9ac:	add	x25, x25, #0x2c
    e9b0:	ldrb	w0, [x26, #90]
    e9b4:	str	w0, [sp, #168]
    e9b8:	ldr	x0, [x26]
    e9bc:	str	x0, [sp, #280]
    e9c0:	ldr	x1, [x0]
    e9c4:	str	x1, [sp, #152]
    e9c8:	ldr	w0, [x0, #12]
    e9cc:	and	w1, w0, #0xff
    e9d0:	cmp	w1, #0x8
    e9d4:	b.eq	ea08 <Perl_re_exec_indentf@@Base+0x2838>  // b.none
    e9d8:	mov	w2, #0x80ff                	// #33023
    e9dc:	movk	w2, #0x100, lsl #16
    e9e0:	and	w0, w0, w2
    e9e4:	mov	w2, #0xa                   	// #10
    e9e8:	movk	w2, #0x100, lsl #16
    e9ec:	cmp	w0, w2
    e9f0:	b.ne	ecbc <Perl_re_exec_indentf@@Base+0x2aec>  // b.any
    e9f4:	cmp	w1, #0xa
    e9f8:	b.ne	ea08 <Perl_re_exec_indentf@@Base+0x2838>  // b.any
    e9fc:	ldr	x0, [sp, #152]
    ea00:	ldr	x0, [x0, #24]
    ea04:	str	x0, [sp, #152]
    ea08:	ldr	x2, [sp, #152]
    ea0c:	ldr	x0, [x2, #104]
    ea10:	str	x0, [sp, #208]
    ea14:	ldr	x0, [x26, #16]
    ea18:	str	x0, [sp, #128]
    ea1c:	ldr	w0, [x2, #96]
    ea20:	add	w0, w0, w0, lsl #1
    ea24:	cmp	w0, #0xa
    ea28:	mov	w1, #0xa                   	// #10
    ea2c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    ea30:	str	w0, [sp, #436]
    ea34:	ldr	w0, [x2, #100]
    ea38:	ubfx	x0, x0, #4, #1
    ea3c:	str	x0, [sp, #400]
    ea40:	ldr	x1, [x27, #1736]
    ea44:	ldr	w0, [x1, #12]
    ea48:	and	w2, w0, #0xff
    ea4c:	sub	w2, w2, #0x9
    ea50:	cmp	w2, #0x1
    ea54:	b.hi	ece0 <Perl_re_exec_indentf@@Base+0x2b10>  // b.pmore
    ea58:	and	w0, w0, #0xc000
    ea5c:	cmp	w0, #0x8, lsl #12
    ea60:	b.ne	ed04 <Perl_re_exec_indentf@@Base+0x2b34>  // b.any
    ea64:	ldr	x0, [x1, #16]
    ea68:	ldr	x2, [x0]
    ea6c:	cbz	x2, ed28 <Perl_re_exec_indentf@@Base+0x2b58>
    ea70:	ldr	x0, [x0]
    ea74:	str	x0, [sp, #360]
    ea78:	str	wzr, [sp, #452]
    ea7c:	ldrb	w0, [x26, #89]
    ea80:	str	w0, [sp, #256]
    ea84:	ldr	w0, [x27, #48]
    ea88:	str	w0, [sp, #408]
    ea8c:	str	xzr, [sp, #464]
    ea90:	ldr	x0, [x27, #224]
    ea94:	cbz	x0, eafc <Perl_re_exec_indentf@@Base+0x292c>
    ea98:	mov	w2, #0x1                   	// #1
    ea9c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
    eaa0:	add	x1, x1, #0x608
    eaa4:	mov	x0, x27
    eaa8:	bl	54f0 <Perl_get_sv@plt>
    eaac:	mov	x19, x0
    eab0:	cbz	x0, eafc <Perl_re_exec_indentf@@Base+0x292c>
    eab4:	ldr	w0, [x0, #12]
    eab8:	tbz	w0, #8, eda0 <Perl_re_exec_indentf@@Base+0x2bd0>
    eabc:	ldr	w1, [x19, #12]
    eac0:	and	w0, w1, #0x3fff00
    eac4:	and	w0, w0, #0xffe001ff
    eac8:	cmp	w0, #0x100
    eacc:	b.ne	ee0c <Perl_re_exec_indentf@@Base+0x2c3c>  // b.any
    ead0:	and	w2, w1, #0xf
    ead4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    ead8:	ldr	x0, [x0, #3712]
    eadc:	ldrb	w0, [x0, w2, uxtw]
    eae0:	cbz	w0, edb4 <Perl_re_exec_indentf@@Base+0x2be4>
    eae4:	and	w0, w1, #0xc000
    eae8:	cmp	w0, #0x8, lsl #12
    eaec:	b.eq	edd8 <Perl_re_exec_indentf@@Base+0x2c08>  // b.none
    eaf0:	ldr	x0, [x19]
    eaf4:	ldr	x0, [x0, #32]
    eaf8:	str	x0, [sp, #464]
    eafc:	ldr	x1, [sp, #360]
    eb00:	ldr	w0, [x1, #8]
    eb04:	add	w0, w0, #0x1
    eb08:	str	w0, [x1, #8]
    eb0c:	mov	w2, #0xb                   	// #11
    eb10:	mov	x0, x27
    eb14:	bl	54b0 <Perl_save_pushptr@plt>
    eb18:	ldr	x0, [sp, #136]
    eb1c:	cbz	x0, ee20 <Perl_re_exec_indentf@@Base+0x2c50>
    eb20:	ldr	x23, [x27, #296]
    eb24:	ldr	w0, [x27, #2368]
    eb28:	tbnz	w0, #20, eb34 <Perl_re_exec_indentf@@Base+0x2964>
    eb2c:	ldr	x0, [sp, #464]
    eb30:	tbz	w0, #1, eb7c <Perl_re_exec_indentf@@Base+0x29ac>
    eb34:	ldr	w0, [x27, #2368]
    eb38:	tbnz	w0, #20, eb48 <Perl_re_exec_indentf@@Base+0x2978>
    eb3c:	ldr	x0, [sp, #464]
    eb40:	tst	x0, #0xff00
    eb44:	b.eq	eb7c <Perl_re_exec_indentf@@Base+0x29ac>  // b.none
    eb48:	mov	w7, #0x0                   	// #0
    eb4c:	ldrb	w6, [sp, #168]
    eb50:	ldr	x1, [sp, #136]
    eb54:	mov	x5, x1
    eb58:	ldr	x4, [x26, #8]
    eb5c:	ldr	x3, [x26, #16]
    eb60:	mov	x2, x25
    eb64:	mov	x0, x27
    eb68:	bl	624c <Perl__inverse_folds@plt+0x84c>
    eb6c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    eb70:	add	x1, x1, #0xaa8
    eb74:	mov	x0, x27
    eb78:	bl	50e0 <Perl_re_printf@plt>
    eb7c:	ldr	x28, [sp, #136]
    eb80:	str	xzr, [sp, #184]
    eb84:	str	wzr, [sp, #316]
    eb88:	str	wzr, [sp, #260]
    eb8c:	str	wzr, [sp, #320]
    eb90:	str	xzr, [sp, #304]
    eb94:	str	xzr, [sp, #328]
    eb98:	str	xzr, [sp, #392]
    eb9c:	str	wzr, [sp, #376]
    eba0:	str	wzr, [sp, #172]
    eba4:	str	xzr, [sp, #232]
    eba8:	str	xzr, [sp, #176]
    ebac:	str	xzr, [sp, #160]
    ebb0:	mov	x19, #0x0                   	// #0
    ebb4:	str	wzr, [sp, #324]
    ebb8:	mov	w24, #0x0                   	// #0
    ebbc:	str	wzr, [sp, #412]
    ebc0:	str	wzr, [sp, #380]
    ebc4:	str	wzr, [sp, #312]
    ebc8:	str	xzr, [sp, #416]
    ebcc:	str	xzr, [sp, #336]
    ebd0:	str	xzr, [sp, #384]
    ebd4:	mov	x22, x27
    ebd8:	mov	x27, x26
    ebdc:	mov	w26, w24
    ebe0:	mov	x24, x25
    ebe4:	mov	x25, x23
    ebe8:	mov	x23, x28
    ebec:	mov	x28, x19
    ebf0:	b	189ec <Perl_re_exec_indentf@@Base+0xc81c>
    ebf4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ebf8:	add	x3, x3, #0x330
    ebfc:	add	x3, x3, #0x3e0
    ec00:	mov	w2, #0xb6                  	// #182
    ec04:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ec08:	add	x1, x1, #0xc80
    ec0c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    ec10:	add	x0, x0, #0x128
    ec14:	bl	58e0 <__assert_fail@plt>
    ec18:	mov	x2, #0xff08                	// #65288
    ec1c:	mov	x1, x19
    ec20:	mov	x0, x27
    ec24:	bl	5310 <Perl_sv_setuv@plt>
    ec28:	b	e8cc <Perl_re_exec_indentf@@Base+0x26fc>
    ec2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ec30:	add	x3, x3, #0x330
    ec34:	add	x3, x3, #0xc70
    ec38:	mov	w2, #0xf5b                 	// #3931
    ec3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ec40:	add	x1, x1, #0xcb0
    ec44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    ec48:	add	x0, x0, #0xda0
    ec4c:	bl	58e0 <__assert_fail@plt>
    ec50:	and	w0, w1, #0xff
    ec54:	sub	w0, w0, #0x9
    ec58:	cmp	w0, #0x1
    ec5c:	b.hi	e900 <Perl_re_exec_indentf@@Base+0x2730>  // b.pmore
    ec60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ec64:	add	x3, x3, #0x330
    ec68:	add	x3, x3, #0xc70
    ec6c:	mov	w2, #0xf5b                 	// #3931
    ec70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ec74:	add	x1, x1, #0xcb0
    ec78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    ec7c:	add	x0, x0, #0xdd0
    ec80:	bl	58e0 <__assert_fail@plt>
    ec84:	mov	w2, #0x2                   	// #2
    ec88:	mov	x1, x19
    ec8c:	mov	x0, x27
    ec90:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    ec94:	b	e908 <Perl_re_exec_indentf@@Base+0x2738>
    ec98:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ec9c:	add	x3, x3, #0x330
    eca0:	add	x3, x3, #0xc70
    eca4:	mov	w2, #0xf5d                 	// #3933
    eca8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ecac:	add	x1, x1, #0xcb0
    ecb0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    ecb4:	add	x0, x0, #0x6d0
    ecb8:	bl	58e0 <__assert_fail@plt>
    ecbc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ecc0:	add	x3, x3, #0x330
    ecc4:	add	x3, x3, #0x3e0
    ecc8:	mov	w2, #0xb6                  	// #182
    eccc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ecd0:	add	x1, x1, #0xc80
    ecd4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
    ecd8:	add	x0, x0, #0x128
    ecdc:	bl	58e0 <__assert_fail@plt>
    ece0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ece4:	add	x3, x3, #0x330
    ece8:	add	x3, x3, #0xc80
    ecec:	mov	w2, #0x1673                	// #5747
    ecf0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ecf4:	add	x1, x1, #0xcb0
    ecf8:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    ecfc:	add	x0, x0, #0xa48
    ed00:	bl	58e0 <__assert_fail@plt>
    ed04:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ed08:	add	x3, x3, #0x330
    ed0c:	add	x3, x3, #0xc80
    ed10:	mov	w2, #0x1673                	// #5747
    ed14:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ed18:	add	x1, x1, #0xcb0
    ed1c:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    ed20:	add	x0, x0, #0xa80
    ed24:	bl	58e0 <__assert_fail@plt>
    ed28:	mov	x0, x27
    ed2c:	bl	5950 <Perl_gv_add_by_type@plt>
    ed30:	ldr	w1, [x0, #12]
    ed34:	and	w2, w1, #0xff
    ed38:	sub	w2, w2, #0x9
    ed3c:	cmp	w2, #0x1
    ed40:	b.hi	ed58 <Perl_re_exec_indentf@@Base+0x2b88>  // b.pmore
    ed44:	and	w1, w1, #0xc000
    ed48:	cmp	w1, #0x8, lsl #12
    ed4c:	b.ne	ed7c <Perl_re_exec_indentf@@Base+0x2bac>  // b.any
    ed50:	ldr	x0, [x0, #16]
    ed54:	b	ea70 <Perl_re_exec_indentf@@Base+0x28a0>
    ed58:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ed5c:	add	x3, x3, #0x330
    ed60:	add	x3, x3, #0xc80
    ed64:	mov	w2, #0x1673                	// #5747
    ed68:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ed6c:	add	x1, x1, #0xcb0
    ed70:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    ed74:	add	x0, x0, #0xa48
    ed78:	bl	58e0 <__assert_fail@plt>
    ed7c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ed80:	add	x3, x3, #0x330
    ed84:	add	x3, x3, #0xc80
    ed88:	mov	w2, #0x1673                	// #5747
    ed8c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ed90:	add	x1, x1, #0xcb0
    ed94:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    ed98:	add	x0, x0, #0xa80
    ed9c:	bl	58e0 <__assert_fail@plt>
    eda0:	mov	x2, #0xff08                	// #65288
    eda4:	mov	x1, x19
    eda8:	mov	x0, x27
    edac:	bl	5310 <Perl_sv_setuv@plt>
    edb0:	b	eabc <Perl_re_exec_indentf@@Base+0x28ec>
    edb4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    edb8:	add	x3, x3, #0x330
    edbc:	add	x3, x3, #0xc80
    edc0:	mov	w2, #0x1697                	// #5783
    edc4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    edc8:	add	x1, x1, #0xcb0
    edcc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    edd0:	add	x0, x0, #0xda0
    edd4:	bl	58e0 <__assert_fail@plt>
    edd8:	and	w0, w1, #0xff
    eddc:	sub	w0, w0, #0x9
    ede0:	cmp	w0, #0x1
    ede4:	b.hi	eaf0 <Perl_re_exec_indentf@@Base+0x2920>  // b.pmore
    ede8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    edec:	add	x3, x3, #0x330
    edf0:	add	x3, x3, #0xc80
    edf4:	mov	w2, #0x1697                	// #5783
    edf8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    edfc:	add	x1, x1, #0xcb0
    ee00:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    ee04:	add	x0, x0, #0xdd0
    ee08:	bl	58e0 <__assert_fail@plt>
    ee0c:	mov	w2, #0x2                   	// #2
    ee10:	mov	x1, x19
    ee14:	mov	x0, x27
    ee18:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    ee1c:	b	eaf8 <Perl_re_exec_indentf@@Base+0x2928>
    ee20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    ee24:	add	x3, x3, #0x330
    ee28:	add	x3, x3, #0xc80
    ee2c:	mov	w2, #0x16a1                	// #5793
    ee30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    ee34:	add	x1, x1, #0xcb0
    ee38:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    ee3c:	add	x0, x0, #0xa98
    ee40:	bl	58e0 <__assert_fail@plt>
    ee44:	mov	x0, x22
    ee48:	bl	59b0 <Perl_sv_newmortal@plt>
    ee4c:	mov	x20, x0
    ee50:	mov	x1, x26
    ee54:	mov	x0, x22
    ee58:	bl	58a0 <Perl_regnext@plt>
    ee5c:	mov	x21, x0
    ee60:	mov	w7, w27
    ee64:	ldrb	w6, [sp, #168]
    ee68:	ldr	x5, [sp, #136]
    ee6c:	ldr	x4, [x24, #8]
    ee70:	ldr	x3, [x24, #16]
    ee74:	mov	x2, x26
    ee78:	mov	x1, x23
    ee7c:	mov	x0, x22
    ee80:	bl	624c <Perl__inverse_folds@plt+0x84c>
    ee84:	mov	x5, #0x0                   	// #0
    ee88:	mov	x4, x24
    ee8c:	mov	x3, x26
    ee90:	mov	x2, x20
    ee94:	ldr	x1, [sp, #152]
    ee98:	mov	x0, x22
    ee9c:	bl	5580 <my_regprop@plt>
    eea0:	mov	w2, #0x6667                	// #26215
    eea4:	movk	w2, #0x6666, lsl #16
    eea8:	smull	x2, w27, w2
    eeac:	asr	x2, x2, #35
    eeb0:	sub	w2, w2, w27, asr #31
    eeb4:	add	w2, w2, w2, lsl #2
    eeb8:	ldr	x0, [sp, #208]
    eebc:	add	x6, x0, #0x28
    eec0:	sub	x4, x26, x6
    eec4:	ldrb	w1, [x26, #1]
    eec8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    eecc:	ldr	x0, [x0, #3768]
    eed0:	ldrb	w0, [x0, w1, sxtw]
    eed4:	cmp	w0, #0x0
    eed8:	sub	x6, x21, x6
    eedc:	asr	x6, x6, #2
    eee0:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    eee4:	csel	x6, x6, xzr, ne  // ne = any
    eee8:	ldr	x5, [x20, #16]
    eeec:	asr	x4, x4, #2
    eef0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
    eef4:	add	x3, x3, #0x20
    eef8:	sub	w2, w27, w2, lsl #2
    eefc:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    ef00:	add	x1, x1, #0xab8
    ef04:	mov	x0, x22
    ef08:	bl	50e0 <Perl_re_printf@plt>
    ef0c:	b	18a30 <Perl_re_exec_indentf@@Base+0xc860>
    ef10:	ldr	x0, [x24, #8]
    ef14:	cmp	x23, x0
    ef18:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
    ef1c:	mov	w26, w27
    ef20:	mov	x27, x24
    ef24:	mov	x23, x0
    ef28:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    ef2c:	mov	w1, #0x1                   	// #1
    ef30:	ldr	x0, [x24, #8]
    ef34:	cmp	x23, x0
    ef38:	b.eq	18a80 <Perl_re_exec_indentf@@Base+0xc8b0>  // b.none
    ef3c:	cbz	w1, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
    ef40:	ldurb	w0, [x23, #-1]
    ef44:	cmp	w0, #0xa
    ef48:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
    ef4c:	mov	w26, w27
    ef50:	mov	x27, x24
    ef54:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    ef58:	mov	w1, #0x0                   	// #0
    ef5c:	b	ef30 <Perl_re_exec_indentf@@Base+0x2d60>
    ef60:	ldr	x0, [x24, #40]
    ef64:	cmp	x23, x0
    ef68:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
    ef6c:	mov	w26, w27
    ef70:	mov	x27, x24
    ef74:	mov	x23, x0
    ef78:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    ef7c:	mov	w26, w27
    ef80:	mov	x27, x24
    ef84:	ldr	x1, [sp, #152]
    ef88:	ldr	x0, [x1, #120]
    ef8c:	ldr	x0, [x0]
    ef90:	str	w0, [x25, #32]
    ef94:	ldr	x1, [x1, #120]
    ef98:	ldr	x0, [x24, #8]
    ef9c:	sub	x0, x23, x0
    efa0:	str	x0, [x1]
    efa4:	mov	w0, #0x8c                  	// #140
    efa8:	str	w0, [x25]
    efac:	ldr	x0, [sp, #128]
    efb0:	str	x0, [sp, #200]
    efb4:	str	x23, [sp, #192]
    efb8:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
    efbc:	ldr	x0, [sp, #152]
    efc0:	ldr	x0, [x0, #120]
    efc4:	ldrsw	x1, [x25, #32]
    efc8:	str	x1, [x0]
    efcc:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
    efd0:	mov	w0, #0x1                   	// #1
    efd4:	cmp	w0, #0x0
    efd8:	ccmp	w20, #0xa, #0x4, ne  // ne = any
    efdc:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
    efe0:	mov	w26, w27
    efe4:	mov	x27, x24
    efe8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    efec:	mov	w0, #0x0                   	// #0
    eff0:	mov	w20, #0xfffffff6            	// #-10
    eff4:	b	efd4 <Perl_re_exec_indentf@@Base+0x2e04>
    eff8:	cmp	w20, #0xa
    effc:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
    f000:	sub	x21, x21, x23
    f004:	cmp	x21, #0x1
    f008:	b.gt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
    f00c:	mov	w26, w27
    f010:	mov	x27, x24
    f014:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    f018:	mov	w0, #0x1                   	// #1
    f01c:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
    f020:	mov	w26, w27
    f024:	mov	x27, x24
    f028:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    f02c:	mov	w0, #0x0                   	// #0
    f030:	b	f01c <Perl_re_exec_indentf@@Base+0x2e4c>
    f034:	mov	w19, #0x1                   	// #1
    f038:	cmp	w20, #0x0
    f03c:	ldr	x0, [sp, #128]
    f040:	ccmp	x23, x0, #0x2, ge  // ge = tcont
    f044:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
    f048:	cbz	w19, 122a4 <Perl_re_exec_indentf@@Base+0x60d4>
    f04c:	ldr	w0, [sp, #168]
    f050:	cbz	w0, 188a0 <Perl_re_exec_indentf@@Base+0xc6d0>
    f054:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    f058:	ldr	x0, [x0, #4064]
    f05c:	ldrb	w0, [x0, w20, sxtw]
    f060:	add	x23, x23, x0
    f064:	ldr	x0, [sp, #128]
    f068:	cmp	x0, x23
    f06c:	b.cc	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.lo, b.ul, b.last
    f070:	mov	w26, w27
    f074:	mov	x27, x24
    f078:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    f07c:	mov	w19, #0x0                   	// #0
    f080:	mov	w20, #0xfffffff6            	// #-10
    f084:	b	f038 <Perl_re_exec_indentf@@Base+0x2e68>
    f088:	mov	w19, #0x1                   	// #1
    f08c:	cmp	w20, #0x0
    f090:	ccmp	w20, #0xa, #0x4, ge  // ge = tcont
    f094:	ldr	x0, [sp, #128]
    f098:	ccmp	x23, x0, #0x2, ne  // ne = any
    f09c:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
    f0a0:	b	f048 <Perl_re_exec_indentf@@Base+0x2e78>
    f0a4:	mov	w19, #0x0                   	// #0
    f0a8:	mov	w20, #0xfffffff6            	// #-10
    f0ac:	b	f08c <Perl_re_exec_indentf@@Base+0x2ebc>
    f0b0:	mov	w21, #0x1                   	// #1
    f0b4:	cmp	w21, #0x0
    f0b8:	ldr	x0, [sp, #128]
    f0bc:	ccmp	x23, x0, #0x2, ne  // ne = any
    f0c0:	b.cs	f120 <Perl_re_exec_indentf@@Base+0x2f50>  // b.hs, b.nlast
    f0c4:	sxtw	x0, w20
    f0c8:	add	x0, x26, x0, lsr #3
    f0cc:	ldrb	w0, [x0, #8]
    f0d0:	and	w1, w20, #0x7
    f0d4:	lsr	w0, w0, w1
    f0d8:	tbnz	w0, #0, f120 <Perl_re_exec_indentf@@Base+0x2f50>
    f0dc:	ldr	w0, [x22, #2368]
    f0e0:	tbnz	w0, #20, f0f0 <Perl_re_exec_indentf@@Base+0x2f20>
    f0e4:	ldr	x0, [sp, #464]
    f0e8:	tst	x0, #0xff00
    f0ec:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
    f0f0:	ldr	x4, [x22, #1488]
    f0f4:	ldr	x3, [x22, #1480]
    f0f8:	mov	w2, w27
    f0fc:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    f100:	add	x1, x1, #0xac8
    f104:	mov	x0, x22
    f108:	bl	5290 <Perl_re_exec_indentf@plt>
    f10c:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
    f110:	mov	w21, #0x0                   	// #0
    f114:	mov	w20, #0xfffffff6            	// #-10
    f118:	b	f0b4 <Perl_re_exec_indentf@@Base+0x2ee4>
    f11c:	mov	w21, #0x1                   	// #1
    f120:	ldrb	w0, [x26]
    f124:	cmp	w0, #0x23
    f128:	b.eq	f164 <Perl_re_exec_indentf@@Base+0x2f94>  // b.none
    f12c:	cmp	w0, #0x24
    f130:	b.eq	f218 <Perl_re_exec_indentf@@Base+0x3048>  // b.none
    f134:	cmp	w0, #0x28
    f138:	b.eq	f370 <Perl_re_exec_indentf@@Base+0x31a0>  // b.none
    f13c:	cmp	w0, #0x2a
    f140:	b.eq	f384 <Perl_re_exec_indentf@@Base+0x31b4>  // b.none
    f144:	ldr	w0, [sp, #168]
    f148:	cmp	w0, #0x0
    f14c:	cset	w19, eq  // eq = none
    f150:	add	w19, w19, #0x2
    f154:	b	f168 <Perl_re_exec_indentf@@Base+0x2f98>
    f158:	mov	w21, #0x0                   	// #0
    f15c:	mov	w20, #0xfffffff6            	// #-10
    f160:	b	f120 <Perl_re_exec_indentf@@Base+0x2f50>
    f164:	ldr	w19, [sp, #168]
    f168:	ldr	x0, [sp, #208]
    f16c:	ldr	x1, [x0, #24]
    f170:	ldr	w0, [x26, #4]
    f174:	add	x2, x1, w0, uxtw #3
    f178:	ldr	x2, [x2, #16]
    f17c:	str	x2, [sp, #368]
    f180:	add	w0, w0, #0x1
    f184:	add	x0, x0, #0x2
    f188:	ldr	x0, [x1, x0, lsl #3]
    f18c:	str	x0, [sp, #344]
    f190:	ldr	w0, [x2, #60]
    f194:	str	w0, [sp, #192]
    f198:	ldr	x0, [sp, #368]
    f19c:	ldr	x0, [x0, #32]
    f1a0:	cbz	x0, f464 <Perl_re_exec_indentf@@Base+0x3294>
    f1a4:	cmp	w20, #0x0
    f1a8:	ldr	x1, [sp, #128]
    f1ac:	ccmp	x23, x1, #0x2, ge  // ge = tcont
    f1b0:	b.cs	f1cc <Perl_re_exec_indentf@@Base+0x2ffc>  // b.hs, b.nlast
    f1b4:	sxtw	x1, w20
    f1b8:	lsr	x1, x1, #3
    f1bc:	ldrb	w0, [x0, x1]
    f1c0:	and	w1, w20, #0x7
    f1c4:	lsr	w0, w0, w1
    f1c8:	tbnz	w0, #0, f464 <Perl_re_exec_indentf@@Base+0x3294>
    f1cc:	ldr	x0, [sp, #368]
    f1d0:	ldr	x1, [x0, #16]
    f1d4:	ldr	x0, [sp, #192]
    f1d8:	ubfiz	x0, x0, #4, #32
    f1dc:	ldrh	w0, [x1, x0]
    f1e0:	cbnz	w0, f428 <Perl_re_exec_indentf@@Base+0x3258>
    f1e4:	ldr	w0, [x22, #2368]
    f1e8:	tbnz	w0, #20, f1f8 <Perl_re_exec_indentf@@Base+0x3028>
    f1ec:	ldr	x0, [sp, #464]
    f1f0:	tst	x0, #0xff00
    f1f4:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
    f1f8:	ldr	x4, [x22, #1488]
    f1fc:	ldr	x3, [x22, #1480]
    f200:	mov	w2, w27
    f204:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    f208:	add	x1, x1, #0xac8
    f20c:	mov	x0, x22
    f210:	bl	5290 <Perl_re_exec_indentf@plt>
    f214:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
    f218:	ldr	w0, [sp, #168]
    f21c:	mov	w19, #0x0                   	// #0
    f220:	cbz	w0, 199d0 <Perl_re_exec_indentf@@Base+0xd800>
    f224:	mov	w19, #0x6                   	// #6
    f228:	ldr	x0, [sp, #208]
    f22c:	ldr	x1, [x0, #24]
    f230:	ldr	w0, [x26, #4]
    f234:	add	x2, x1, w0, uxtw #3
    f238:	ldr	x2, [x2, #16]
    f23c:	str	x2, [sp, #368]
    f240:	add	w0, w0, #0x1
    f244:	add	x0, x0, #0x2
    f248:	ldr	x0, [x1, x0, lsl #3]
    f24c:	str	x0, [sp, #344]
    f250:	ldr	w0, [x2, #60]
    f254:	str	w0, [sp, #192]
    f258:	ldr	x0, [x22, #1440]
    f25c:	cbnz	x0, 19a08 <Perl_re_exec_indentf@@Base+0xd838>
    f260:	ldr	w0, [sp, #168]
    f264:	cmp	w0, #0x0
    f268:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    f26c:	b.eq	f198 <Perl_re_exec_indentf@@Base+0x2fc8>  // b.none
    f270:	and	w0, w20, #0xff
    f274:	cmp	w0, #0xc3
    f278:	b.ls	f198 <Perl_re_exec_indentf@@Base+0x2fc8>  // b.plast
    f27c:	ldrb	w0, [x26]
    f280:	cmp	w0, #0x24
    f284:	b.ne	f198 <Perl_re_exec_indentf@@Base+0x2fc8>  // b.any
    f288:	ldrb	w0, [x22, #1180]
    f28c:	cbnz	w0, f198 <Perl_re_exec_indentf@@Base+0x2fc8>
    f290:	mov	w1, #0x3f                  	// #63
    f294:	mov	x0, x22
    f298:	bl	5870 <Perl_ckwarn@plt>
    f29c:	and	w0, w0, #0xff
    f2a0:	cbz	w0, f198 <Perl_re_exec_indentf@@Base+0x2fc8>
    f2a4:	ldr	x0, [x24, #16]
    f2a8:	str	x0, [sp, #200]
    f2ac:	cmp	x23, x0
    f2b0:	b.cs	f398 <Perl_re_exec_indentf@@Base+0x31c8>  // b.hs, b.nlast
    f2b4:	mov	w1, #0x2c                  	// #44
    f2b8:	mov	x0, x22
    f2bc:	bl	52a0 <Perl_ckwarn_d@plt>
    f2c0:	ands	w0, w0, #0xff
    f2c4:	mov	w3, #0x9e                  	// #158
    f2c8:	csel	w3, w3, wzr, eq  // eq = none
    f2cc:	cbz	x23, f3bc <Perl_re_exec_indentf@@Base+0x31ec>
    f2d0:	mov	x5, x23
    f2d4:	mov	x21, #0x0                   	// #0
    f2d8:	mov	x0, #0x0                   	// #0
    f2dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    f2e0:	ldr	x7, [x1, #3824]
    f2e4:	mov	w6, #0xff                  	// #255
    f2e8:	mov	x4, x7
    f2ec:	ldrb	w2, [x5]
    f2f0:	ldrb	w1, [x7, w2, sxtw]
    f2f4:	and	x8, x1, #0xff
    f2f8:	asr	w1, w6, w1
    f2fc:	and	w1, w1, w2
    f300:	sxtw	x1, w1
    f304:	bfi	x2, x21, #6, #58
    f308:	cmp	x0, #0x0
    f30c:	csel	x21, x2, x1, ne  // ne = any
    f310:	add	x0, x4, x0
    f314:	add	x0, x0, x8
    f318:	ldrb	w0, [x0, #256]
    f31c:	cbnz	x0, f3e0 <Perl_re_exec_indentf@@Base+0x3210>
    f320:	cmp	x21, #0x0
    f324:	mov	x0, #0xfffd                	// #65533
    f328:	csel	x21, x21, x0, ne  // ne = any
    f32c:	ldr	x1, [x22, #8]
    f330:	ldrh	w0, [x1, #32]
    f334:	and	w0, w0, #0x1ff
    f338:	cmp	w0, #0x17f
    f33c:	b.eq	f414 <Perl_re_exec_indentf@@Base+0x3244>  // b.none
    f340:	ldrh	w1, [x1, #32]
    f344:	and	x1, x1, #0x1ff
    f348:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    f34c:	ldr	x0, [x0, #4008]
    f350:	ldr	x4, [x0, x1, lsl #3]
    f354:	mov	x3, x21
    f358:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    f35c:	add	x2, x2, #0x510
    f360:	mov	w1, #0x3f                  	// #63
    f364:	mov	x0, x22
    f368:	bl	5110 <Perl_warner@plt>
    f36c:	b	f198 <Perl_re_exec_indentf@@Base+0x2fc8>
    f370:	ldr	w0, [sp, #168]
    f374:	cmp	w0, #0x0
    f378:	cset	w19, eq  // eq = none
    f37c:	add	w19, w19, #0x4
    f380:	b	f168 <Perl_re_exec_indentf@@Base+0x2f98>
    f384:	ldr	w0, [sp, #168]
    f388:	mov	w19, #0x8                   	// #8
    f38c:	cbz	w0, 199d0 <Perl_re_exec_indentf@@Base+0xd800>
    f390:	mov	w19, #0x7                   	// #7
    f394:	b	f228 <Perl_re_exec_indentf@@Base+0x3058>
    f398:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    f39c:	add	x3, x3, #0x330
    f3a0:	add	x3, x3, #0xc80
    f3a4:	mov	w2, #0x175f                	// #5983
    f3a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    f3ac:	add	x1, x1, #0xcb0
    f3b0:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    f3b4:	add	x0, x0, #0xaf8
    f3b8:	bl	58e0 <__assert_fail@plt>
    f3bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    f3c0:	add	x3, x3, #0x330
    f3c4:	add	x3, x3, #0xc48
    f3c8:	mov	w2, #0x710                 	// #1808
    f3cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    f3d0:	add	x1, x1, #0xc80
    f3d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    f3d8:	add	x0, x0, #0xce8
    f3dc:	bl	58e0 <__assert_fail@plt>
    f3e0:	add	x5, x5, #0x1
    f3e4:	ldr	x1, [sp, #200]
    f3e8:	cmp	x1, x5
    f3ec:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
    f3f0:	b.ne	f2ec <Perl_re_exec_indentf@@Base+0x311c>  // b.any
    f3f4:	mov	x5, #0x0                   	// #0
    f3f8:	mov	x4, #0x0                   	// #0
    f3fc:	mov	x2, #0x0                   	// #0
    f400:	sub	x1, x1, x23
    f404:	mov	x0, x23
    f408:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    f40c:	mov	x21, x0
    f410:	b	f320 <Perl_re_exec_indentf@@Base+0x3150>
    f414:	mov	w2, #0x2                   	// #2
    f418:	mov	x0, x22
    f41c:	bl	5080 <Perl_custom_op_get_field@plt>
    f420:	mov	x4, x0
    f424:	b	f354 <Perl_re_exec_indentf@@Base+0x3184>
    f428:	ldr	w0, [x22, #2368]
    f42c:	tbnz	w0, #20, f43c <Perl_re_exec_indentf@@Base+0x326c>
    f430:	ldr	x0, [sp, #464]
    f434:	tst	x0, #0xff00
    f438:	b.eq	f458 <Perl_re_exec_indentf@@Base+0x3288>  // b.none
    f43c:	ldr	x4, [x22, #1488]
    f440:	ldr	x3, [x22, #1480]
    f444:	mov	w2, w27
    f448:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    f44c:	add	x1, x1, #0xb38
    f450:	mov	x0, x22
    f454:	bl	5290 <Perl_re_exec_indentf@plt>
    f458:	ldr	x0, [sp, #368]
    f45c:	ldr	x0, [x0, #40]
    f460:	cbz	x0, f50c <Perl_re_exec_indentf@@Base+0x333c>
    f464:	str	xzr, [sp, #472]
    f468:	str	xzr, [sp, #480]
    f46c:	ldr	x1, [sp, #368]
    f470:	ldr	x0, [x1, #40]
    f474:	str	x0, [x25, #64]
    f478:	str	x26, [x25, #72]
    f47c:	str	xzr, [x25, #80]
    f480:	strb	wzr, [x25, #56]
    f484:	strh	wzr, [x25, #92]
    f488:	ldr	w21, [sp, #192]
    f48c:	cmp	w21, #0x0
    f490:	ldr	x2, [sp, #128]
    f494:	ccmp	x23, x2, #0x2, ne  // ne = any
    f498:	b.hi	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.pmore
    f49c:	mov	w0, #0x6667                	// #26215
    f4a0:	movk	w0, #0x6666, lsl #16
    f4a4:	smull	x0, w27, w0
    f4a8:	asr	x0, x0, #35
    f4ac:	sub	w0, w0, w27, asr #31
    f4b0:	add	w0, w0, w0, lsl #2
    f4b4:	sub	w0, w27, w0, lsl #2
    f4b8:	str	w0, [sp, #264]
    f4bc:	mov	x20, x23
    f4c0:	str	xzr, [sp, #240]
    f4c4:	str	wzr, [sp, #192]
    f4c8:	mov	w3, #0x0                   	// #0
    f4cc:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
    f4d0:	add	x0, x0, #0x20
    f4d4:	str	x0, [sp, #248]
    f4d8:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    f4dc:	add	x0, x0, #0xb60
    f4e0:	str	x0, [sp, #272]
    f4e4:	add	x0, sp, #0x1f0
    f4e8:	str	x0, [sp, #424]
    f4ec:	str	x28, [sp, #440]
    f4f0:	str	w27, [sp, #216]
    f4f4:	mov	x28, x2
    f4f8:	str	x26, [sp, #224]
    f4fc:	str	x23, [sp, #352]
    f500:	mov	w23, w3
    f504:	mov	x27, x1
    f508:	b	ff6c <Perl_re_exec_indentf@@Base+0x3d9c>
    f50c:	mov	w26, w27
    f510:	mov	x27, x24
    f514:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
    f518:	str	x20, [x25, #80]
    f51c:	ldr	w1, [sp, #192]
    f520:	str	w1, [x25, #88]
    f524:	b	ffa8 <Perl_re_exec_indentf@@Base+0x3dd8>
    f528:	ldr	w0, [x22, #2368]
    f52c:	tbnz	w0, #20, f538 <Perl_re_exec_indentf@@Base+0x3368>
    f530:	ldr	x0, [sp, #464]
    f534:	tbz	w0, #10, f58c <Perl_re_exec_indentf@@Base+0x33bc>
    f538:	ldr	w7, [sp, #216]
    f53c:	ldrb	w6, [sp, #168]
    f540:	ldr	x5, [sp, #136]
    f544:	ldr	x4, [x24, #8]
    f548:	ldr	x3, [x24, #16]
    f54c:	ldr	x2, [sp, #224]
    f550:	mov	x1, x20
    f554:	mov	x0, x22
    f558:	bl	624c <Perl__inverse_folds@plt+0x84c>
    f55c:	mov	x0, x22
    f560:	bl	58f0 <Perl_PerlIO_stderr@plt>
    f564:	ldr	x4, [x22, #1480]
    f568:	cmp	w23, #0x0
    f56c:	mov	w6, #0x59                  	// #89
    f570:	mov	w1, #0x4e                  	// #78
    f574:	csel	w6, w6, w1, ne  // ne = any
    f578:	ldr	x5, [sp, #200]
    f57c:	ldr	x3, [sp, #248]
    f580:	ldr	w2, [sp, #264]
    f584:	ldr	x1, [sp, #272]
    f588:	bl	5730 <PerlIO_printf@plt>
    f58c:	cbz	w26, ff2c <Perl_re_exec_indentf@@Base+0x3d5c>
    f590:	ldr	x0, [sp, #480]
    f594:	cmp	x0, #0x0
    f598:	ccmp	x28, x20, #0x2, eq  // eq = none
    f59c:	b.ls	10014 <Perl_re_exec_indentf@@Base+0x3e44>  // b.plast
    f5a0:	cmp	w19, #0x4
    f5a4:	b.eq	fa3c <Perl_re_exec_indentf@@Base+0x386c>  // b.none
    f5a8:	b.ls	f5d0 <Perl_re_exec_indentf@@Base+0x3400>  // b.plast
    f5ac:	cmp	w19, #0x7
    f5b0:	b.eq	f8a0 <Perl_re_exec_indentf@@Base+0x36d0>  // b.none
    f5b4:	b.ls	f788 <Perl_re_exec_indentf@@Base+0x35b8>  // b.plast
    f5b8:	ldr	x0, [x22, #1440]
    f5bc:	mov	w3, #0x2                   	// #2
    f5c0:	cbz	x0, f5e8 <Perl_re_exec_indentf@@Base+0x3418>
    f5c4:	bl	5050 <Perl__warn_problematic_locale@plt>
    f5c8:	mov	w3, #0x2                   	// #2
    f5cc:	b	f5e8 <Perl_re_exec_indentf@@Base+0x3418>
    f5d0:	cmp	w19, #0x2
    f5d4:	b.eq	fa44 <Perl_re_exec_indentf@@Base+0x3874>  // b.none
    f5d8:	b.ls	f690 <Perl_re_exec_indentf@@Base+0x34c0>  // b.plast
    f5dc:	mov	w3, #0x2                   	// #2
    f5e0:	cmp	w19, #0x3
    f5e4:	b.ne	f70c <Perl_re_exec_indentf@@Base+0x353c>  // b.any
    f5e8:	ldr	x1, [sp, #480]
    f5ec:	cbz	x1, fcb4 <Perl_re_exec_indentf@@Base+0x3ae4>
    f5f0:	ldr	x0, [sp, #240]
    f5f4:	add	x8, x0, x1
    f5f8:	cbz	x0, fc64 <Perl_re_exec_indentf@@Base+0x3a94>
    f5fc:	ldr	x0, [sp, #240]
    f600:	cmp	x8, x0
    f604:	b.ls	fc98 <Perl_re_exec_indentf@@Base+0x3ac8>  // b.plast
    f608:	ldr	x6, [sp, #240]
    f60c:	mov	x0, #0x0                   	// #0
    f610:	mov	x2, #0x0                   	// #0
    f614:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    f618:	ldr	x10, [x3, #3824]
    f61c:	mov	w9, #0xff                  	// #255
    f620:	mov	x7, x10
    f624:	ldrb	w5, [x6]
    f628:	ldrb	w3, [x10, w5, sxtw]
    f62c:	and	x4, x3, #0xff
    f630:	asr	w3, w9, w3
    f634:	and	w3, w3, w5
    f638:	sxtw	x3, w3
    f63c:	bfi	x5, x0, #6, #58
    f640:	cmp	x2, #0x0
    f644:	csel	x0, x5, x3, ne  // ne = any
    f648:	add	x3, x7, x4
    f64c:	add	x2, x3, x2
    f650:	ldrb	w2, [x2, #256]
    f654:	cbnz	x2, fc88 <Perl_re_exec_indentf@@Base+0x3ab8>
    f658:	ldr	x1, [sp, #240]
    f65c:	sub	x6, x6, x1
    f660:	add	x6, x6, #0x1
    f664:	str	x6, [sp, #472]
    f668:	str	x0, [sp, #496]
    f66c:	ldr	x1, [sp, #472]
    f670:	ldr	x0, [sp, #480]
    f674:	sub	x0, x0, x1
    f678:	str	x0, [sp, #480]
    f67c:	ldr	x0, [sp, #240]
    f680:	add	x0, x0, x1
    f684:	str	x0, [sp, #240]
    f688:	str	xzr, [sp, #472]
    f68c:	b	f70c <Perl_re_exec_indentf@@Base+0x353c>
    f690:	cbz	w19, fe18 <Perl_re_exec_indentf@@Base+0x3c48>
    f694:	cmp	w19, #0x1
    f698:	b.ne	f70c <Perl_re_exec_indentf@@Base+0x353c>  // b.any
    f69c:	sub	x1, x28, x20
    f6a0:	cbz	x20, fdc8 <Perl_re_exec_indentf@@Base+0x3bf8>
    f6a4:	cmp	x28, x20
    f6a8:	b.ls	fdfc <Perl_re_exec_indentf@@Base+0x3c2c>  // b.plast
    f6ac:	mov	x6, x20
    f6b0:	mov	x0, #0x0                   	// #0
    f6b4:	mov	x2, #0x0                   	// #0
    f6b8:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
    f6bc:	ldr	x9, [x3, #3824]
    f6c0:	mov	w8, #0xff                  	// #255
    f6c4:	mov	x7, x9
    f6c8:	ldrb	w5, [x6]
    f6cc:	ldrb	w3, [x9, w5, sxtw]
    f6d0:	and	x4, x3, #0xff
    f6d4:	asr	w3, w8, w3
    f6d8:	and	w3, w3, w5
    f6dc:	sxtw	x3, w3
    f6e0:	bfi	x5, x0, #6, #58
    f6e4:	cmp	x2, #0x0
    f6e8:	csel	x0, x5, x3, ne  // ne = any
    f6ec:	add	x3, x7, x4
    f6f0:	add	x2, x3, x2
    f6f4:	ldrb	w2, [x2, #256]
    f6f8:	cbnz	x2, fdec <Perl_re_exec_indentf@@Base+0x3c1c>
    f6fc:	sub	x6, x6, x20
    f700:	add	x6, x6, #0x1
    f704:	str	x6, [sp, #472]
    f708:	str	x0, [sp, #496]
    f70c:	ldr	x0, [sp, #496]
    f710:	cmp	x0, #0xff
    f714:	b.ls	fe28 <Perl_re_exec_indentf@@Base+0x3c58>  // b.plast
    f718:	ldr	x0, [sp, #344]
    f71c:	cbz	x0, 195cc <Perl_re_exec_indentf@@Base+0xd3fc>
    f720:	mov	w6, #0x0                   	// #0
    f724:	mov	x5, #0x0                   	// #0
    f728:	mov	w4, #0x20                  	// #32
    f72c:	mov	w3, #0x8                   	// #8
    f730:	ldr	x2, [sp, #424]
    f734:	mov	x1, x0
    f738:	mov	x0, x22
    f73c:	bl	57a0 <Perl_hv_common_key_len@plt>
    f740:	cbz	x0, 195cc <Perl_re_exec_indentf@@Base+0xd3fc>
    f744:	ldr	x1, [x0]
    f748:	ldr	w2, [x1, #12]
    f74c:	and	w0, w2, #0x3fff00
    f750:	and	w0, w0, #0xffe001ff
    f754:	cmp	w0, #0x100
    f758:	b.ne	fee8 <Perl_re_exec_indentf@@Base+0x3d18>  // b.any
    f75c:	and	w3, w2, #0xf
    f760:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    f764:	ldr	x0, [x0, #3712]
    f768:	ldrb	w0, [x0, w3, uxtw]
    f76c:	cbz	w0, fe90 <Perl_re_exec_indentf@@Base+0x3cc0>
    f770:	and	w0, w2, #0xc000
    f774:	cmp	w0, #0x8, lsl #12
    f778:	b.eq	feb4 <Perl_re_exec_indentf@@Base+0x3ce4>  // b.none
    f77c:	ldr	x0, [x1]
    f780:	ldrh	w2, [x0, #32]
    f784:	b	fe30 <Perl_re_exec_indentf@@Base+0x3c60>
    f788:	cmp	w19, #0x5
    f78c:	b.eq	fc5c <Perl_re_exec_indentf@@Base+0x3a8c>  // b.none
    f790:	cmp	w19, #0x6
    f794:	b.ne	f70c <Perl_re_exec_indentf@@Base+0x353c>  // b.any
    f798:	ldr	x0, [x22, #1440]
    f79c:	cbnz	x0, fd58 <Perl_re_exec_indentf@@Base+0x3b88>
    f7a0:	ldr	w0, [sp, #168]
    f7a4:	cbz	w0, f69c <Perl_re_exec_indentf@@Base+0x34cc>
    f7a8:	ldrb	w0, [x20]
    f7ac:	cmp	w0, #0xc3
    f7b0:	b.ls	f898 <Perl_re_exec_indentf@@Base+0x36c8>  // b.plast
    f7b4:	ldrb	w0, [x22, #1180]
    f7b8:	cbnz	w0, f898 <Perl_re_exec_indentf@@Base+0x36c8>
    f7bc:	mov	w1, #0x3f                  	// #63
    f7c0:	mov	x0, x22
    f7c4:	bl	5870 <Perl_ckwarn@plt>
    f7c8:	and	w0, w0, #0xff
    f7cc:	cbz	w0, f898 <Perl_re_exec_indentf@@Base+0x36c8>
    f7d0:	cmp	x28, x20
    f7d4:	b.ls	fd60 <Perl_re_exec_indentf@@Base+0x3b90>  // b.plast
    f7d8:	mov	w1, #0x2c                  	// #44
    f7dc:	mov	x0, x22
    f7e0:	bl	52a0 <Perl_ckwarn_d@plt>
    f7e4:	ands	w0, w0, #0xff
    f7e8:	mov	w0, #0x9e                  	// #158
    f7ec:	csel	w3, w0, wzr, eq  // eq = none
    f7f0:	mov	x5, x20
    f7f4:	mov	x6, #0x0                   	// #0
    f7f8:	mov	x0, #0x0                   	// #0
    f7fc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    f800:	ldr	x8, [x1, #3824]
    f804:	mov	w7, #0xff                  	// #255
    f808:	mov	x4, x8
    f80c:	ldrb	w2, [x5]
    f810:	ldrb	w1, [x8, w2, sxtw]
    f814:	and	x9, x1, #0xff
    f818:	asr	w1, w7, w1
    f81c:	and	w1, w1, w2
    f820:	sxtw	x1, w1
    f824:	bfi	x2, x6, #6, #58
    f828:	cmp	x0, #0x0
    f82c:	csel	x6, x2, x1, ne  // ne = any
    f830:	add	x0, x4, x0
    f834:	add	x0, x0, x9
    f838:	ldrb	w0, [x0, #256]
    f83c:	cbnz	x0, fd84 <Perl_re_exec_indentf@@Base+0x3bb4>
    f840:	str	x6, [sp, #200]
    f844:	ldr	x1, [sp, #200]
    f848:	cmp	x1, #0x0
    f84c:	mov	x0, #0xfffd                	// #65533
    f850:	csel	x0, x1, x0, ne  // ne = any
    f854:	str	x0, [sp, #200]
    f858:	ldr	x1, [x22, #8]
    f85c:	ldrh	w0, [x1, #32]
    f860:	and	w0, w0, #0x1ff
    f864:	cmp	w0, #0x17f
    f868:	b.eq	fdb4 <Perl_re_exec_indentf@@Base+0x3be4>  // b.none
    f86c:	ldrh	w1, [x1, #32]
    f870:	and	x1, x1, #0x1ff
    f874:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    f878:	ldr	x0, [x0, #4008]
    f87c:	ldr	x4, [x0, x1, lsl #3]
    f880:	ldr	x3, [sp, #200]
    f884:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    f888:	add	x2, x2, #0x510
    f88c:	mov	w1, #0x3f                  	// #63
    f890:	mov	x0, x22
    f894:	bl	5110 <Perl_warner@plt>
    f898:	sub	x1, x28, x20
    f89c:	b	f6a4 <Perl_re_exec_indentf@@Base+0x34d4>
    f8a0:	ldr	x0, [x22, #1440]
    f8a4:	cbnz	x0, f9cc <Perl_re_exec_indentf@@Base+0x37fc>
    f8a8:	ldrb	w0, [x20]
    f8ac:	cmp	w0, #0xc3
    f8b0:	b.ls	faf0 <Perl_re_exec_indentf@@Base+0x3920>  // b.plast
    f8b4:	ldrb	w0, [x22, #1180]
    f8b8:	cbnz	w0, faf8 <Perl_re_exec_indentf@@Base+0x3928>
    f8bc:	mov	w1, #0x3f                  	// #63
    f8c0:	mov	x0, x22
    f8c4:	bl	5870 <Perl_ckwarn@plt>
    f8c8:	and	w0, w0, #0xff
    f8cc:	cbz	w0, fb00 <Perl_re_exec_indentf@@Base+0x3930>
    f8d0:	cmp	x28, x20
    f8d4:	b.ls	f9d4 <Perl_re_exec_indentf@@Base+0x3804>  // b.plast
    f8d8:	mov	w1, #0x2c                  	// #44
    f8dc:	mov	x0, x22
    f8e0:	bl	52a0 <Perl_ckwarn_d@plt>
    f8e4:	ands	w0, w0, #0xff
    f8e8:	mov	w0, #0x9e                  	// #158
    f8ec:	csel	w3, w0, wzr, eq  // eq = none
    f8f0:	mov	x5, x20
    f8f4:	mov	x6, #0x0                   	// #0
    f8f8:	mov	x0, #0x0                   	// #0
    f8fc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    f900:	ldr	x8, [x1, #3824]
    f904:	mov	w7, #0xff                  	// #255
    f908:	mov	x4, x8
    f90c:	ldrb	w2, [x5]
    f910:	ldrb	w1, [x8, w2, sxtw]
    f914:	and	x9, x1, #0xff
    f918:	asr	w1, w7, w1
    f91c:	and	w1, w1, w2
    f920:	sxtw	x1, w1
    f924:	bfi	x2, x6, #6, #58
    f928:	cmp	x0, #0x0
    f92c:	csel	x6, x2, x1, ne  // ne = any
    f930:	add	x0, x4, x0
    f934:	add	x0, x0, x9
    f938:	ldrb	w0, [x0, #256]
    f93c:	cbnz	x0, f9f8 <Perl_re_exec_indentf@@Base+0x3828>
    f940:	str	x6, [sp, #200]
    f944:	ldr	x1, [sp, #200]
    f948:	cmp	x1, #0x0
    f94c:	mov	x0, #0xfffd                	// #65533
    f950:	csel	x0, x1, x0, ne  // ne = any
    f954:	str	x0, [sp, #200]
    f958:	ldr	x1, [x22, #8]
    f95c:	ldrh	w0, [x1, #32]
    f960:	and	w0, w0, #0x1ff
    f964:	cmp	w0, #0x17f
    f968:	b.eq	fa28 <Perl_re_exec_indentf@@Base+0x3858>  // b.none
    f96c:	ldrh	w1, [x1, #32]
    f970:	and	x1, x1, #0x1ff
    f974:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
    f978:	ldr	x0, [x0, #4008]
    f97c:	ldr	x4, [x0, x1, lsl #3]
    f980:	ldr	x3, [sp, #200]
    f984:	adrp	x2, 62000 <boot_re@@Base+0x41c>
    f988:	add	x2, x2, #0x510
    f98c:	mov	w1, #0x3f                  	// #63
    f990:	mov	x0, x22
    f994:	bl	5110 <Perl_warner@plt>
    f998:	ldr	x1, [sp, #480]
    f99c:	cbnz	x1, fa50 <Perl_re_exec_indentf@@Base+0x3880>
    f9a0:	mov	w7, #0x0                   	// #0
    f9a4:	ldr	x6, [sp, #248]
    f9a8:	mov	w5, #0x2                   	// #2
    f9ac:	add	x4, sp, #0x1e0
    f9b0:	add	x3, sp, #0x1f8
    f9b4:	mov	x2, x28
    f9b8:	mov	x1, x20
    f9bc:	mov	x0, x22
    f9c0:	bl	5330 <Perl__to_utf8_fold_flags@plt>
    f9c4:	str	x0, [sp, #496]
    f9c8:	b	fb84 <Perl_re_exec_indentf@@Base+0x39b4>
    f9cc:	bl	5050 <Perl__warn_problematic_locale@plt>
    f9d0:	b	f8a8 <Perl_re_exec_indentf@@Base+0x36d8>
    f9d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    f9d8:	add	x3, x3, #0x330
    f9dc:	add	x3, x3, #0xc80
    f9e0:	mov	w2, #0x17b1                	// #6065
    f9e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    f9e8:	add	x1, x1, #0xcb0
    f9ec:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    f9f0:	add	x0, x0, #0xb88
    f9f4:	bl	58e0 <__assert_fail@plt>
    f9f8:	add	x5, x5, #0x1
    f9fc:	cmp	x28, x5
    fa00:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
    fa04:	b.ne	f90c <Perl_re_exec_indentf@@Base+0x373c>  // b.any
    fa08:	mov	x5, #0x0                   	// #0
    fa0c:	mov	x4, #0x0                   	// #0
    fa10:	mov	x2, #0x0                   	// #0
    fa14:	sub	x1, x28, x20
    fa18:	mov	x0, x20
    fa1c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    fa20:	str	x0, [sp, #200]
    fa24:	b	f944 <Perl_re_exec_indentf@@Base+0x3774>
    fa28:	mov	w2, #0x2                   	// #2
    fa2c:	mov	x0, x22
    fa30:	bl	5080 <Perl_custom_op_get_field@plt>
    fa34:	mov	x4, x0
    fa38:	b	f980 <Perl_re_exec_indentf@@Base+0x37b0>
    fa3c:	mov	w5, #0x6                   	// #6
    fa40:	b	fa48 <Perl_re_exec_indentf@@Base+0x3878>
    fa44:	mov	w5, #0x2                   	// #2
    fa48:	ldr	x1, [sp, #480]
    fa4c:	cbz	x1, fb58 <Perl_re_exec_indentf@@Base+0x3988>
    fa50:	ldr	x0, [sp, #240]
    fa54:	add	x8, x0, x1
    fa58:	cbz	x0, fb08 <Perl_re_exec_indentf@@Base+0x3938>
    fa5c:	ldr	x0, [sp, #240]
    fa60:	cmp	x8, x0
    fa64:	b.ls	fb3c <Perl_re_exec_indentf@@Base+0x396c>  // b.plast
    fa68:	ldr	x5, [sp, #240]
    fa6c:	mov	x0, #0x0                   	// #0
    fa70:	mov	x3, #0x0                   	// #0
    fa74:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
    fa78:	ldr	x10, [x2, #3824]
    fa7c:	mov	w9, #0xff                  	// #255
    fa80:	mov	x6, x10
    fa84:	ldrb	w4, [x5]
    fa88:	ldrb	w2, [x10, w4, sxtw]
    fa8c:	and	x7, x2, #0xff
    fa90:	asr	w2, w9, w2
    fa94:	and	w2, w2, w4
    fa98:	sxtw	x2, w2
    fa9c:	bfi	x4, x0, #6, #58
    faa0:	cmp	x3, #0x0
    faa4:	csel	x0, x4, x2, ne  // ne = any
    faa8:	add	x3, x6, x3
    faac:	add	x3, x3, x7
    fab0:	ldrb	w3, [x3, #256]
    fab4:	cbnz	x3, fb2c <Perl_re_exec_indentf@@Base+0x395c>
    fab8:	ldr	x1, [sp, #240]
    fabc:	sub	x5, x5, x1
    fac0:	add	x5, x5, #0x1
    fac4:	str	x5, [sp, #472]
    fac8:	str	x0, [sp, #496]
    facc:	ldr	x1, [sp, #472]
    fad0:	ldr	x0, [sp, #480]
    fad4:	sub	x0, x0, x1
    fad8:	str	x0, [sp, #480]
    fadc:	ldr	x0, [sp, #240]
    fae0:	add	x0, x0, x1
    fae4:	str	x0, [sp, #240]
    fae8:	str	xzr, [sp, #472]
    faec:	b	f70c <Perl_re_exec_indentf@@Base+0x353c>
    faf0:	mov	w5, #0x2                   	// #2
    faf4:	b	fa48 <Perl_re_exec_indentf@@Base+0x3878>
    faf8:	mov	w5, #0x2                   	// #2
    fafc:	b	fa48 <Perl_re_exec_indentf@@Base+0x3878>
    fb00:	mov	w5, #0x2                   	// #2
    fb04:	b	fa48 <Perl_re_exec_indentf@@Base+0x3878>
    fb08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fb0c:	add	x3, x3, #0x330
    fb10:	add	x3, x3, #0xc48
    fb14:	mov	w2, #0x710                 	// #1808
    fb18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fb1c:	add	x1, x1, #0xc80
    fb20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    fb24:	add	x0, x0, #0xce8
    fb28:	bl	58e0 <__assert_fail@plt>
    fb2c:	add	x5, x5, #0x1
    fb30:	cmp	x8, x5
    fb34:	ccmp	x3, #0x1, #0x4, hi  // hi = pmore
    fb38:	b.ne	fa84 <Perl_re_exec_indentf@@Base+0x38b4>  // b.any
    fb3c:	mov	x5, #0x0                   	// #0
    fb40:	mov	x4, #0x0                   	// #0
    fb44:	mov	w3, #0x0                   	// #0
    fb48:	add	x2, sp, #0x1d8
    fb4c:	ldr	x0, [sp, #240]
    fb50:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    fb54:	b	fac8 <Perl_re_exec_indentf@@Base+0x38f8>
    fb58:	mov	w7, #0x0                   	// #0
    fb5c:	ldr	x6, [sp, #248]
    fb60:	add	x4, sp, #0x1e0
    fb64:	add	x3, sp, #0x1f8
    fb68:	mov	x2, x28
    fb6c:	mov	x1, x20
    fb70:	mov	x0, x22
    fb74:	bl	5330 <Perl__to_utf8_fold_flags@plt>
    fb78:	str	x0, [sp, #496]
    fb7c:	cmp	x28, x20
    fb80:	b.cc	fc38 <Perl_re_exec_indentf@@Base+0x3a68>  // b.lo, b.ul, b.last
    fb84:	sub	x2, x28, x20
    fb88:	mov	x1, #0x0                   	// #0
    fb8c:	cmp	x2, #0x0
    fb90:	b.le	fbac <Perl_re_exec_indentf@@Base+0x39dc>
    fb94:	ldrb	w3, [x20]
    fb98:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
    fb9c:	ldr	x1, [x1, #4064]
    fba0:	ldrb	w1, [x1, w3, sxtw]
    fba4:	cmp	x1, x2
    fba8:	csel	x1, x1, x2, le
    fbac:	str	x1, [sp, #472]
    fbb0:	mov	x1, #0x1                   	// #1
    fbb4:	cmp	x0, #0x7f
    fbb8:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fbbc:	mov	x1, #0x2                   	// #2
    fbc0:	cmp	x0, #0x7ff
    fbc4:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fbc8:	mov	x1, #0x3                   	// #3
    fbcc:	mov	x2, #0xffff                	// #65535
    fbd0:	cmp	x0, x2
    fbd4:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fbd8:	mov	x1, #0x4                   	// #4
    fbdc:	mov	x2, #0x1fffff              	// #2097151
    fbe0:	cmp	x0, x2
    fbe4:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fbe8:	mov	x1, #0x5                   	// #5
    fbec:	mov	x2, #0x3ffffff             	// #67108863
    fbf0:	cmp	x0, x2
    fbf4:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fbf8:	mov	x1, #0x6                   	// #6
    fbfc:	mov	x2, #0x7fffffff            	// #2147483647
    fc00:	cmp	x0, x2
    fc04:	b.ls	fc1c <Perl_re_exec_indentf@@Base+0x3a4c>  // b.plast
    fc08:	mov	x1, #0xfffffffff           	// #68719476735
    fc0c:	cmp	x0, x1
    fc10:	mov	x1, #0x7                   	// #7
    fc14:	mov	x0, #0xd                   	// #13
    fc18:	csel	x1, x1, x0, ls  // ls = plast
    fc1c:	ldr	x0, [sp, #480]
    fc20:	sub	x0, x0, x1
    fc24:	str	x0, [sp, #480]
    fc28:	add	x0, sp, #0x1f8
    fc2c:	add	x0, x0, x1
    fc30:	str	x0, [sp, #240]
    fc34:	b	f70c <Perl_re_exec_indentf@@Base+0x353c>
    fc38:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fc3c:	add	x3, x3, #0x330
    fc40:	add	x3, x3, #0xc80
    fc44:	mov	w2, #0x17b1                	// #6065
    fc48:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fc4c:	add	x1, x1, #0xcb0
    fc50:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    fc54:	add	x0, x0, #0xbc0
    fc58:	bl	58e0 <__assert_fail@plt>
    fc5c:	mov	w3, #0x6                   	// #6
    fc60:	b	f5e8 <Perl_re_exec_indentf@@Base+0x3418>
    fc64:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fc68:	add	x3, x3, #0x330
    fc6c:	add	x3, x3, #0xc48
    fc70:	mov	w2, #0x710                 	// #1808
    fc74:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fc78:	add	x1, x1, #0xc80
    fc7c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    fc80:	add	x0, x0, #0xce8
    fc84:	bl	58e0 <__assert_fail@plt>
    fc88:	add	x6, x6, #0x1
    fc8c:	cmp	x8, x6
    fc90:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
    fc94:	b.ne	f624 <Perl_re_exec_indentf@@Base+0x3454>  // b.any
    fc98:	mov	x5, #0x0                   	// #0
    fc9c:	mov	x4, #0x0                   	// #0
    fca0:	mov	w3, #0x0                   	// #0
    fca4:	add	x2, sp, #0x1d8
    fca8:	ldr	x0, [sp, #240]
    fcac:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    fcb0:	b	f668 <Perl_re_exec_indentf@@Base+0x3498>
    fcb4:	mov	x0, #0x1                   	// #1
    fcb8:	str	x0, [sp, #472]
    fcbc:	add	x2, sp, #0x1e0
    fcc0:	add	x1, sp, #0x1f8
    fcc4:	ldrb	w0, [x20]
    fcc8:	bl	5910 <Perl__to_fold_latin1@plt>
    fccc:	str	x0, [sp, #496]
    fcd0:	mov	x1, #0x1                   	// #1
    fcd4:	cmp	x0, #0x7f
    fcd8:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fcdc:	mov	x1, #0x2                   	// #2
    fce0:	cmp	x0, #0x7ff
    fce4:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fce8:	mov	x1, #0x3                   	// #3
    fcec:	mov	x2, #0xffff                	// #65535
    fcf0:	cmp	x0, x2
    fcf4:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fcf8:	mov	x1, #0x4                   	// #4
    fcfc:	mov	x2, #0x1fffff              	// #2097151
    fd00:	cmp	x0, x2
    fd04:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fd08:	mov	x1, #0x5                   	// #5
    fd0c:	mov	x2, #0x3ffffff             	// #67108863
    fd10:	cmp	x0, x2
    fd14:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fd18:	mov	x1, #0x6                   	// #6
    fd1c:	mov	x2, #0x7fffffff            	// #2147483647
    fd20:	cmp	x0, x2
    fd24:	b.ls	fd3c <Perl_re_exec_indentf@@Base+0x3b6c>  // b.plast
    fd28:	mov	x1, #0xfffffffff           	// #68719476735
    fd2c:	cmp	x0, x1
    fd30:	mov	x1, #0x7                   	// #7
    fd34:	mov	x0, #0xd                   	// #13
    fd38:	csel	x1, x1, x0, ls  // ls = plast
    fd3c:	ldr	x0, [sp, #480]
    fd40:	sub	x0, x0, x1
    fd44:	str	x0, [sp, #480]
    fd48:	add	x0, sp, #0x1f8
    fd4c:	add	x0, x0, x1
    fd50:	str	x0, [sp, #240]
    fd54:	b	f70c <Perl_re_exec_indentf@@Base+0x353c>
    fd58:	bl	5050 <Perl__warn_problematic_locale@plt>
    fd5c:	b	f7a0 <Perl_re_exec_indentf@@Base+0x35d0>
    fd60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fd64:	add	x3, x3, #0x330
    fd68:	add	x3, x3, #0xc80
    fd6c:	mov	w2, #0x17b1                	// #6065
    fd70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fd74:	add	x1, x1, #0xcb0
    fd78:	adrp	x0, 64000 <boot_re@@Base+0x241c>
    fd7c:	add	x0, x0, #0xb88
    fd80:	bl	58e0 <__assert_fail@plt>
    fd84:	add	x5, x5, #0x1
    fd88:	cmp	x28, x5
    fd8c:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
    fd90:	b.ne	f80c <Perl_re_exec_indentf@@Base+0x363c>  // b.any
    fd94:	mov	x5, #0x0                   	// #0
    fd98:	mov	x4, #0x0                   	// #0
    fd9c:	mov	x2, #0x0                   	// #0
    fda0:	sub	x1, x28, x20
    fda4:	mov	x0, x20
    fda8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    fdac:	str	x0, [sp, #200]
    fdb0:	b	f844 <Perl_re_exec_indentf@@Base+0x3674>
    fdb4:	mov	w2, #0x2                   	// #2
    fdb8:	mov	x0, x22
    fdbc:	bl	5080 <Perl_custom_op_get_field@plt>
    fdc0:	mov	x4, x0
    fdc4:	b	f880 <Perl_re_exec_indentf@@Base+0x36b0>
    fdc8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fdcc:	add	x3, x3, #0x330
    fdd0:	add	x3, x3, #0xc48
    fdd4:	mov	w2, #0x710                 	// #1808
    fdd8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fddc:	add	x1, x1, #0xc80
    fde0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    fde4:	add	x0, x0, #0xce8
    fde8:	bl	58e0 <__assert_fail@plt>
    fdec:	add	x6, x6, #0x1
    fdf0:	cmp	x28, x6
    fdf4:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
    fdf8:	b.ne	f6c8 <Perl_re_exec_indentf@@Base+0x34f8>  // b.any
    fdfc:	mov	x5, #0x0                   	// #0
    fe00:	mov	x4, #0x0                   	// #0
    fe04:	mov	w3, #0x0                   	// #0
    fe08:	add	x2, sp, #0x1d8
    fe0c:	mov	x0, x20
    fe10:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
    fe14:	b	f708 <Perl_re_exec_indentf@@Base+0x3538>
    fe18:	ldrb	w0, [x20]
    fe1c:	str	x0, [sp, #496]
    fe20:	mov	x1, #0x1                   	// #1
    fe24:	str	x1, [sp, #472]
    fe28:	ldr	x1, [x27, #8]
    fe2c:	ldrh	w2, [x1, x0, lsl #1]
    fe30:	ldr	w0, [sp, #192]
    fe34:	add	w0, w0, #0x1
    fe38:	str	w0, [sp, #192]
    fe3c:	ldr	x0, [sp, #480]
    fe40:	cbz	x0, fe4c <Perl_re_exec_indentf@@Base+0x3c7c>
    fe44:	mov	w0, #0x1                   	// #1
    fe48:	strb	w0, [x25, #56]
    fe4c:	cbz	w2, ff0c <Perl_re_exec_indentf@@Base+0x3d3c>
    fe50:	ldrh	w0, [x27, #56]
    fe54:	mvn	w0, w0
    fe58:	add	w26, w0, w26
    fe5c:	adds	w26, w26, w2
    fe60:	b.mi	ff1c <Perl_re_exec_indentf@@Base+0x3d4c>  // b.first
    fe64:	ldr	w0, [x27, #4]
    fe68:	cmp	w26, w0
    fe6c:	b.cs	ff24 <Perl_re_exec_indentf@@Base+0x3d54>  // b.hs, b.nlast
    fe70:	sbfiz	x26, x26, #3, #32
    fe74:	ldr	x0, [x27, #24]
    fe78:	add	x1, x0, x26
    fe7c:	ldr	w1, [x1, #4]
    fe80:	cmp	w1, w21
    fe84:	b.eq	ff04 <Perl_re_exec_indentf@@Base+0x3d34>  // b.none
    fe88:	mov	w21, #0x0                   	// #0
    fe8c:	b	ff10 <Perl_re_exec_indentf@@Base+0x3d40>
    fe90:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fe94:	add	x3, x3, #0x330
    fe98:	add	x3, x3, #0xc80
    fe9c:	mov	w2, #0x17b1                	// #6065
    fea0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fea4:	add	x1, x1, #0xcb0
    fea8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    feac:	add	x0, x0, #0xda0
    feb0:	bl	58e0 <__assert_fail@plt>
    feb4:	and	w0, w2, #0xff
    feb8:	sub	w0, w0, #0x9
    febc:	cmp	w0, #0x1
    fec0:	b.hi	f77c <Perl_re_exec_indentf@@Base+0x35ac>  // b.pmore
    fec4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
    fec8:	add	x3, x3, #0x330
    fecc:	add	x3, x3, #0xc80
    fed0:	mov	w2, #0x17b1                	// #6065
    fed4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
    fed8:	add	x1, x1, #0xcb0
    fedc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
    fee0:	add	x0, x0, #0xdd0
    fee4:	bl	58e0 <__assert_fail@plt>
    fee8:	mov	w2, #0x2                   	// #2
    feec:	mov	x0, x22
    fef0:	bl	4ea0 <Perl_sv_2iv_flags@plt>
    fef4:	and	w2, w0, #0xffff
    fef8:	b	fe30 <Perl_re_exec_indentf@@Base+0x3c60>
    fefc:	mov	w2, #0x0                   	// #0
    ff00:	b	fe44 <Perl_re_exec_indentf@@Base+0x3c74>
    ff04:	ldr	w21, [x0, x26]
    ff08:	b	ff10 <Perl_re_exec_indentf@@Base+0x3d40>
    ff0c:	mov	w21, #0x0                   	// #0
    ff10:	ldr	x0, [sp, #472]
    ff14:	add	x20, x20, x0
    ff18:	b	ff34 <Perl_re_exec_indentf@@Base+0x3d64>
    ff1c:	mov	w21, #0x0                   	// #0
    ff20:	b	ff10 <Perl_re_exec_indentf@@Base+0x3d40>
    ff24:	mov	w21, #0x0                   	// #0
    ff28:	b	ff10 <Perl_re_exec_indentf@@Base+0x3d40>
    ff2c:	mov	w21, w26
    ff30:	mov	w2, #0x0                   	// #0
    ff34:	ldr	w0, [x22, #2368]
    ff38:	tbnz	w0, #20, ff44 <Perl_re_exec_indentf@@Base+0x3d74>
    ff3c:	ldr	x0, [sp, #464]
    ff40:	tbz	w0, #10, ff60 <Perl_re_exec_indentf@@Base+0x3d90>
    ff44:	ldr	x5, [x22, #1488]
    ff48:	mov	w4, w21
    ff4c:	ldr	x3, [sp, #496]
    ff50:	adrp	x1, 64000 <boot_re@@Base+0x241c>
    ff54:	add	x1, x1, #0xbd8
    ff58:	mov	x0, x22
    ff5c:	bl	50e0 <Perl_re_printf@plt>
    ff60:	cmp	w21, #0x0
    ff64:	ccmp	x28, x20, #0x0, ne  // ne = any
    ff68:	b.cc	10020 <Perl_re_exec_indentf@@Base+0x3e50>  // b.lo, b.ul, b.last
    ff6c:	mov	w0, w21
    ff70:	str	x0, [sp, #200]
    ff74:	ubfiz	x0, x21, #4, #32
    ff78:	ldr	x1, [x27, #16]
    ff7c:	add	x2, x1, x0
    ff80:	ldr	w26, [x2, #8]
    ff84:	str	xzr, [sp, #496]
    ff88:	ldrh	w0, [x1, x0]
    ff8c:	cbz	w0, f528 <Perl_re_exec_indentf@@Base+0x3358>
    ff90:	cbnz	w23, ffa8 <Perl_re_exec_indentf@@Base+0x3dd8>
    ff94:	ldrb	w1, [x25, #56]
    ff98:	cbz	w1, f518 <Perl_re_exec_indentf@@Base+0x3348>
    ff9c:	ldr	x1, [sp, #352]
    ffa0:	str	x1, [x25, #80]
    ffa4:	str	wzr, [x25, #88]
    ffa8:	ldrh	w1, [x25, #92]
    ffac:	cmp	w1, #0x0
    ffb0:	ccmp	w0, w1, #0x0, ne  // ne = any
    ffb4:	b.cs	ffbc <Perl_re_exec_indentf@@Base+0x3dec>  // b.hs, b.nlast
    ffb8:	strh	w0, [x25, #92]
    ffbc:	strh	w0, [x25, #94]
    ffc0:	ldr	w0, [x22, #2368]
    ffc4:	tst	x0, #0x100000
    ffc8:	b.ne	195ec <Perl_re_exec_indentf@@Base+0xd41c>  // b.any
    ffcc:	ldr	x0, [sp, #464]
    ffd0:	mov	w23, #0x1                   	// #1
    ffd4:	tbz	w0, #10, f58c <Perl_re_exec_indentf@@Base+0x33bc>
    ffd8:	ldr	w7, [sp, #216]
    ffdc:	ldrb	w6, [sp, #168]
    ffe0:	ldr	x5, [sp, #136]
    ffe4:	ldr	x4, [x24, #8]
    ffe8:	ldr	x3, [x24, #16]
    ffec:	ldr	x2, [sp, #224]
    fff0:	mov	x1, x20
    fff4:	mov	x0, x22
    fff8:	bl	624c <Perl__inverse_folds@plt+0x84c>
    fffc:	mov	x0, x22
   10000:	bl	58f0 <Perl_PerlIO_stderr@plt>
   10004:	ldr	x4, [x22, #1480]
   10008:	mov	w23, #0x1                   	// #1
   1000c:	mov	w6, #0x59                  	// #89
   10010:	b	f578 <Perl_re_exec_indentf@@Base+0x33a8>
   10014:	mov	w2, #0x0                   	// #0
   10018:	mov	w21, #0x0                   	// #0
   1001c:	b	ff34 <Perl_re_exec_indentf@@Base+0x3d64>
   10020:	ldr	x28, [sp, #440]
   10024:	ldr	w27, [sp, #216]
   10028:	ldr	x26, [sp, #224]
   1002c:	mov	w0, w23
   10030:	ldr	x23, [sp, #352]
   10034:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10038:	mov	w26, w27
   1003c:	mov	x27, x24
   10040:	ldrh	w0, [x25, #94]
   10044:	cbz	w0, 100a8 <Perl_re_exec_indentf@@Base+0x3ed8>
   10048:	ldr	x1, [sp, #368]
   1004c:	ldr	x2, [x1, #48]
   10050:	mov	w4, #0x0                   	// #0
   10054:	ubfiz	x1, x0, #1, #16
   10058:	add	x0, x1, w0, uxth
   1005c:	lsl	x0, x0, #2
   10060:	ldrh	w0, [x2, x0]
   10064:	add	w4, w4, #0x1
   10068:	cbnz	w0, 10054 <Perl_re_exec_indentf@@Base+0x3e84>
   1006c:	str	w4, [x25, #52]
   10070:	ldr	w0, [x22, #2368]
   10074:	tbnz	w0, #20, 10084 <Perl_re_exec_indentf@@Base+0x3eb4>
   10078:	ldr	x0, [sp, #464]
   1007c:	tst	x0, #0xff00
   10080:	b.eq	10250 <Perl_re_exec_indentf@@Base+0x4080>  // b.none
   10084:	ldr	x5, [x22, #1488]
   10088:	mov	w4, w4
   1008c:	ldr	x3, [x22, #1480]
   10090:	mov	w2, w26
   10094:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   10098:	add	x1, x1, #0xc08
   1009c:	mov	x0, x22
   100a0:	bl	5290 <Perl_re_exec_indentf@plt>
   100a4:	b	10250 <Perl_re_exec_indentf@@Base+0x4080>
   100a8:	mov	w4, #0x0                   	// #0
   100ac:	b	1006c <Perl_re_exec_indentf@@Base+0x3e9c>
   100b0:	ldr	x0, [x25, #64]
   100b4:	cbnz	x0, 100fc <Perl_re_exec_indentf@@Base+0x3f2c>
   100b8:	ldr	w0, [x25, #52]
   100bc:	sub	w0, w0, #0x1
   100c0:	str	w0, [x25, #52]
   100c4:	cbnz	w0, 101e4 <Perl_re_exec_indentf@@Base+0x4014>
   100c8:	ldr	w0, [x22, #2368]
   100cc:	tbnz	w0, #20, 100dc <Perl_re_exec_indentf@@Base+0x3f0c>
   100d0:	ldr	x0, [sp, #464]
   100d4:	tst	x0, #0xff00
   100d8:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
   100dc:	ldr	x4, [x22, #1488]
   100e0:	ldr	x3, [x22, #1480]
   100e4:	mov	w2, w27
   100e8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   100ec:	add	x1, x1, #0xca8
   100f0:	mov	x0, x22
   100f4:	bl	5290 <Perl_re_exec_indentf@plt>
   100f8:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   100fc:	ldr	w0, [x22, #2368]
   10100:	tbnz	w0, #20, 1010c <Perl_re_exec_indentf@@Base+0x3f3c>
   10104:	ldr	x0, [sp, #464]
   10108:	tbz	w0, #19, 1011c <Perl_re_exec_indentf@@Base+0x3f4c>
   1010c:	ldr	w3, [x25, #48]
   10110:	ldr	w4, [x22, #48]
   10114:	cmp	w3, w4
   10118:	b.ne	101b8 <Perl_re_exec_indentf@@Base+0x3fe8>  // b.any
   1011c:	ldr	w1, [x25, #48]
   10120:	ldr	w0, [x22, #48]
   10124:	cmp	w0, w1
   10128:	b.gt	101d8 <Perl_re_exec_indentf@@Base+0x4008>
   1012c:	ldr	w0, [x22, #2368]
   10130:	tbnz	w0, #20, 1013c <Perl_re_exec_indentf@@Base+0x3f6c>
   10134:	ldr	x0, [sp, #464]
   10138:	tbz	w0, #22, 10168 <Perl_re_exec_indentf@@Base+0x3f98>
   1013c:	ldr	w7, [x25, #44]
   10140:	ldr	x0, [sp, #152]
   10144:	ldr	w6, [x0, #112]
   10148:	ldr	w5, [x25, #40]
   1014c:	ldr	x4, [x0, #120]
   10150:	mov	x3, x0
   10154:	mov	w2, w27
   10158:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1015c:	add	x1, x1, #0xc60
   10160:	mov	x0, x22
   10164:	bl	5290 <Perl_re_exec_indentf@plt>
   10168:	ldr	x4, [sp, #152]
   1016c:	ldr	w1, [x4, #112]
   10170:	ldr	w0, [x25, #40]
   10174:	cmp	w1, w0
   10178:	b.ls	101a4 <Perl_re_exec_indentf@@Base+0x3fd4>  // b.plast
   1017c:	mov	x3, #0xffffffffffffffff    	// #-1
   10180:	ldr	x2, [x4, #120]
   10184:	ubfiz	x0, x1, #1, #32
   10188:	add	x0, x0, w1, uxtw
   1018c:	add	x0, x2, x0, lsl #3
   10190:	str	x3, [x0, #8]
   10194:	sub	w1, w1, #0x1
   10198:	ldr	w0, [x25, #40]
   1019c:	cmp	w1, w0
   101a0:	b.hi	10180 <Perl_re_exec_indentf@@Base+0x3fb0>  // b.pmore
   101a4:	ldr	x2, [sp, #152]
   101a8:	str	w1, [x2, #112]
   101ac:	ldr	w0, [x25, #44]
   101b0:	str	w0, [x2, #116]
   101b4:	b	100b8 <Perl_re_exec_indentf@@Base+0x3ee8>
   101b8:	sxtw	x4, w4
   101bc:	sxtw	x3, w3
   101c0:	mov	w2, w27
   101c4:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   101c8:	add	x1, x1, #0xc30
   101cc:	mov	x0, x22
   101d0:	bl	5290 <Perl_re_exec_indentf@plt>
   101d4:	b	1011c <Perl_re_exec_indentf@@Base+0x3f4c>
   101d8:	mov	x0, x22
   101dc:	bl	5660 <Perl_leave_scope@plt>
   101e0:	b	1012c <Perl_re_exec_indentf@@Base+0x3f5c>
   101e4:	mov	w26, w27
   101e8:	mov	x27, x24
   101ec:	ldrh	w3, [x25, #92]
   101f0:	ldr	x0, [sp, #208]
   101f4:	ldr	x1, [x0, #24]
   101f8:	ldr	x0, [x25, #72]
   101fc:	ldr	w0, [x0, #4]
   10200:	add	x0, x0, #0x2
   10204:	ldr	x0, [x1, x0, lsl #3]
   10208:	ldr	x4, [x0, #48]
   1020c:	ldrh	w0, [x25, #94]
   10210:	cbz	w0, 10248 <Perl_re_exec_indentf@@Base+0x4078>
   10214:	mov	w2, #0x0                   	// #0
   10218:	b	10230 <Perl_re_exec_indentf@@Base+0x4060>
   1021c:	ubfiz	x1, x0, #1, #16
   10220:	add	x0, x1, w0, uxth
   10224:	lsl	x0, x0, #2
   10228:	ldrh	w0, [x4, x0]
   1022c:	cbz	w0, 1024c <Perl_re_exec_indentf@@Base+0x407c>
   10230:	cmp	w3, w0
   10234:	b.cs	1021c <Perl_re_exec_indentf@@Base+0x404c>  // b.hs, b.nlast
   10238:	cmp	w2, #0x0
   1023c:	ccmp	w2, w0, #0x2, ne  // ne = any
   10240:	csel	w2, w2, w0, ls  // ls = plast
   10244:	b	1021c <Perl_re_exec_indentf@@Base+0x404c>
   10248:	mov	w2, w0
   1024c:	strh	w2, [x25, #92]
   10250:	ldr	w0, [sp, #376]
   10254:	cmp	w0, #0x0
   10258:	ldr	w0, [sp, #172]
   1025c:	csel	w0, w0, wzr, eq  // eq = none
   10260:	str	w0, [sp, #172]
   10264:	ldr	x0, [x25, #64]
   10268:	cbz	x0, 102b0 <Perl_re_exec_indentf@@Base+0x40e0>
   1026c:	ldr	x1, [sp, #152]
   10270:	ldr	w0, [x1, #112]
   10274:	str	w0, [x25, #40]
   10278:	ldr	w0, [x1, #116]
   1027c:	str	w0, [x25, #44]
   10280:	ldr	w0, [x22, #2368]
   10284:	tbnz	w0, #20, 10290 <Perl_re_exec_indentf@@Base+0x40c0>
   10288:	ldr	x0, [sp, #464]
   1028c:	tbz	w0, #19, 102a8 <Perl_re_exec_indentf@@Base+0x40d8>
   10290:	ldrsw	x3, [x22, #48]
   10294:	mov	w2, w26
   10298:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1029c:	add	x1, x1, #0xa20
   102a0:	mov	x0, x22
   102a4:	bl	5290 <Perl_re_exec_indentf@plt>
   102a8:	ldr	w0, [x22, #48]
   102ac:	str	w0, [x25, #48]
   102b0:	ldr	x0, [sp, #208]
   102b4:	ldr	x1, [x0, #24]
   102b8:	ldr	x0, [x25, #72]
   102bc:	ldr	w0, [x0, #4]
   102c0:	add	x0, x0, #0x2
   102c4:	ldr	x1, [x1, x0, lsl #3]
   102c8:	ldrh	w0, [x25, #92]
   102cc:	ldr	x2, [x1, #48]
   102d0:	add	x0, x0, x0, lsl #1
   102d4:	add	x0, x2, x0, lsl #2
   102d8:	ldr	w2, [x0, #4]
   102dc:	ldr	w0, [x1, #80]
   102e0:	sub	w1, w2, w0
   102e4:	ldr	w0, [x25, #88]
   102e8:	cmp	w1, w0
   102ec:	b.cc	10310 <Perl_re_exec_indentf@@Base+0x4140>  // b.lo, b.ul, b.last
   102f0:	sub	w20, w1, w0
   102f4:	ldr	x24, [x25, #80]
   102f8:	ldrb	w0, [x25, #56]
   102fc:	cbnz	w0, 10334 <Perl_re_exec_indentf@@Base+0x4164>
   10300:	ldr	w0, [sp, #168]
   10304:	cbnz	w0, 10524 <Perl_re_exec_indentf@@Base+0x4354>
   10308:	add	x24, x24, w20, uxtw
   1030c:	b	10564 <Perl_re_exec_indentf@@Base+0x4394>
   10310:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10314:	add	x3, x3, #0x330
   10318:	add	x3, x3, #0xc80
   1031c:	mov	w2, #0x181d                	// #6173
   10320:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10324:	add	x1, x1, #0xcb0
   10328:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   1032c:	add	x0, x0, #0xcc0
   10330:	bl	58e0 <__assert_fail@plt>
   10334:	cbz	w20, 10564 <Perl_re_exec_indentf@@Base+0x4394>
   10338:	add	x0, sp, #0x1f0
   1033c:	add	x1, sp, #0x1e0
   10340:	str	x1, [sp, #144]
   10344:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   10348:	ldr	x21, [x1, #3824]
   1034c:	str	x28, [sp, #192]
   10350:	str	x23, [sp, #200]
   10354:	mov	x23, x0
   10358:	b	104d8 <Perl_re_exec_indentf@@Base+0x4308>
   1035c:	add	x9, x24, #0xd
   10360:	cbz	x24, 103cc <Perl_re_exec_indentf@@Base+0x41fc>
   10364:	mov	x4, x24
   10368:	mov	x1, #0x0                   	// #0
   1036c:	mov	x0, #0x0                   	// #0
   10370:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   10374:	ldr	x8, [x2, #3824]
   10378:	mov	w7, #0xff                  	// #255
   1037c:	mov	x6, x8
   10380:	ldrb	w3, [x4]
   10384:	ldrb	w2, [x8, w3, sxtw]
   10388:	and	x5, x2, #0xff
   1038c:	asr	w2, w7, w2
   10390:	and	w2, w2, w3
   10394:	sxtw	x2, w2
   10398:	bfi	x3, x1, #6, #58
   1039c:	cmp	x0, #0x0
   103a0:	csel	x1, x3, x2, ne  // ne = any
   103a4:	add	x0, x6, x0
   103a8:	add	x0, x0, x5
   103ac:	ldrb	w0, [x0, #256]
   103b0:	cbnz	x0, 103f0 <Perl_re_exec_indentf@@Base+0x4220>
   103b4:	sub	x0, x4, x24
   103b8:	add	x0, x0, #0x1
   103bc:	str	x0, [sp, #496]
   103c0:	ldr	x0, [sp, #496]
   103c4:	add	x24, x24, x0
   103c8:	b	104e4 <Perl_re_exec_indentf@@Base+0x4314>
   103cc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   103d0:	add	x3, x3, #0x330
   103d4:	add	x3, x3, #0xc48
   103d8:	mov	w2, #0x710                 	// #1808
   103dc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   103e0:	add	x1, x1, #0xc80
   103e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   103e8:	add	x0, x0, #0xce8
   103ec:	bl	58e0 <__assert_fail@plt>
   103f0:	add	x4, x4, #0x1
   103f4:	cmp	x0, #0x1
   103f8:	ccmp	x9, x4, #0x0, ne  // ne = any
   103fc:	b.hi	10380 <Perl_re_exec_indentf@@Base+0x41b0>  // b.pmore
   10400:	mov	x5, #0x0                   	// #0
   10404:	mov	x4, #0x0                   	// #0
   10408:	mov	w3, #0x0                   	// #0
   1040c:	mov	x2, x23
   10410:	mov	x1, #0xd                   	// #13
   10414:	mov	x0, x24
   10418:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1041c:	mov	x1, x0
   10420:	b	103c0 <Perl_re_exec_indentf@@Base+0x41f0>
   10424:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10428:	add	x3, x3, #0x330
   1042c:	add	x3, x3, #0xc48
   10430:	mov	w2, #0x710                 	// #1808
   10434:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10438:	add	x1, x1, #0xc80
   1043c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   10440:	add	x0, x0, #0xce8
   10444:	bl	58e0 <__assert_fail@plt>
   10448:	sub	x2, x2, x19
   1044c:	add	x2, x2, #0x1
   10450:	str	x2, [sp, #496]
   10454:	ldr	x1, [sp, #496]
   10458:	add	x2, x19, x1
   1045c:	ldr	x0, [sp, #480]
   10460:	sub	x1, x0, x1
   10464:	str	x1, [sp, #480]
   10468:	cbz	x1, 104d4 <Perl_re_exec_indentf@@Base+0x4304>
   1046c:	subs	w20, w20, #0x1
   10470:	b.eq	1055c <Perl_re_exec_indentf@@Base+0x438c>  // b.none
   10474:	add	x3, x19, x0
   10478:	cbz	x2, 10424 <Perl_re_exec_indentf@@Base+0x4254>
   1047c:	mov	x19, x2
   10480:	mov	x2, x19
   10484:	mov	x0, x28
   10488:	cmp	x3, x19
   1048c:	b.ls	104b8 <Perl_re_exec_indentf@@Base+0x42e8>  // b.plast
   10490:	ldrb	w4, [x2]
   10494:	ldrb	w4, [x21, w4, sxtw]
   10498:	add	x0, x21, x0
   1049c:	add	x0, x0, x4
   104a0:	ldrb	w0, [x0, #256]
   104a4:	cbz	x0, 10448 <Perl_re_exec_indentf@@Base+0x4278>
   104a8:	add	x2, x2, #0x1
   104ac:	cmp	x0, #0x1
   104b0:	ccmp	x3, x2, #0x0, ne  // ne = any
   104b4:	b.hi	10490 <Perl_re_exec_indentf@@Base+0x42c0>  // b.pmore
   104b8:	mov	x5, x28
   104bc:	mov	x4, x28
   104c0:	mov	w3, #0x0                   	// #0
   104c4:	mov	x2, x23
   104c8:	mov	x0, x19
   104cc:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   104d0:	b	10454 <Perl_re_exec_indentf@@Base+0x4284>
   104d4:	cbz	w20, 10518 <Perl_re_exec_indentf@@Base+0x4348>
   104d8:	ldr	w0, [sp, #168]
   104dc:	cbnz	w0, 1035c <Perl_re_exec_indentf@@Base+0x418c>
   104e0:	ldrb	w1, [x24], #1
   104e4:	mov	w4, #0x2                   	// #2
   104e8:	ldr	x3, [sp, #144]
   104ec:	add	x2, sp, #0x1f8
   104f0:	mov	x0, x22
   104f4:	bl	5320 <Perl__to_uni_fold_flags@plt>
   104f8:	ldr	x1, [sp, #480]
   104fc:	cbz	x1, 104d4 <Perl_re_exec_indentf@@Base+0x4304>
   10500:	subs	w20, w20, #0x1
   10504:	b.eq	10550 <Perl_re_exec_indentf@@Base+0x4380>  // b.none
   10508:	add	x19, sp, #0x1f8
   1050c:	add	x3, x19, x1
   10510:	mov	x28, #0x0                   	// #0
   10514:	b	10480 <Perl_re_exec_indentf@@Base+0x42b0>
   10518:	ldr	x28, [sp, #192]
   1051c:	ldr	x23, [sp, #200]
   10520:	b	10564 <Perl_re_exec_indentf@@Base+0x4394>
   10524:	sub	w0, w20, #0x1
   10528:	cbz	w20, 10564 <Perl_re_exec_indentf@@Base+0x4394>
   1052c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   10530:	ldr	x2, [x2, #4064]
   10534:	ldrb	w1, [x24]
   10538:	ldrb	w1, [x2, w1, sxtw]
   1053c:	add	x24, x24, x1
   10540:	sub	w0, w0, #0x1
   10544:	cmn	w0, #0x1
   10548:	b.ne	10534 <Perl_re_exec_indentf@@Base+0x4364>  // b.any
   1054c:	b	10564 <Perl_re_exec_indentf@@Base+0x4394>
   10550:	ldr	x28, [sp, #192]
   10554:	ldr	x23, [sp, #200]
   10558:	b	10564 <Perl_re_exec_indentf@@Base+0x4394>
   1055c:	ldr	x28, [sp, #192]
   10560:	ldr	x23, [sp, #200]
   10564:	ldr	x1, [x25, #72]
   10568:	ldr	x0, [x25, #64]
   1056c:	cbz	x0, 10584 <Perl_re_exec_indentf@@Base+0x43b4>
   10570:	ldrh	w2, [x25, #92]
   10574:	ldrh	w0, [x0, x2, lsl #1]
   10578:	cbz	w0, 10584 <Perl_re_exec_indentf@@Base+0x43b4>
   1057c:	ubfiz	x0, x0, #2, #16
   10580:	b	1058c <Perl_re_exec_indentf@@Base+0x43bc>
   10584:	ldrh	w0, [x1, #2]
   10588:	lsl	x0, x0, #2
   1058c:	add	x0, x1, x0
   10590:	str	x0, [sp, #144]
   10594:	ldr	w0, [x22, #2368]
   10598:	tbnz	w0, #20, 105a8 <Perl_re_exec_indentf@@Base+0x43d8>
   1059c:	ldr	x0, [sp, #464]
   105a0:	tst	x0, #0xff00
   105a4:	b.eq	105c8 <Perl_re_exec_indentf@@Base+0x43f8>  // b.none
   105a8:	ldr	x5, [x22, #1488]
   105ac:	ldrh	w4, [x25, #92]
   105b0:	ldr	x3, [x22, #1480]
   105b4:	mov	w2, w26
   105b8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   105bc:	add	x1, x1, #0xd08
   105c0:	mov	x0, x22
   105c4:	bl	5290 <Perl_re_exec_indentf@plt>
   105c8:	ldr	w0, [x25, #52]
   105cc:	cmp	w0, #0x1
   105d0:	cset	w0, hi  // hi = pmore
   105d4:	ldr	w1, [sp, #400]
   105d8:	orr	w0, w0, w1
   105dc:	str	w0, [sp, #376]
   105e0:	cbnz	w0, 10708 <Perl_re_exec_indentf@@Base+0x4538>
   105e4:	ldr	x0, [x25, #64]
   105e8:	cbnz	x0, 10708 <Perl_re_exec_indentf@@Base+0x4538>
   105ec:	ldr	w0, [x22, #2368]
   105f0:	tbnz	w0, #20, 10600 <Perl_re_exec_indentf@@Base+0x4430>
   105f4:	ldr	x0, [sp, #464]
   105f8:	tst	x0, #0xff00
   105fc:	b.eq	18a90 <Perl_re_exec_indentf@@Base+0xc8c0>  // b.none
   10600:	ldr	x0, [sp, #208]
   10604:	ldr	x1, [x0, #24]
   10608:	ldr	x0, [x25, #72]
   1060c:	ldr	w0, [x0, #4]
   10610:	add	w0, w0, #0x2
   10614:	add	x0, x0, #0x2
   10618:	ldr	x1, [x1, x0, lsl #3]
   1061c:	cbz	x1, 195b8 <Perl_re_exec_indentf@@Base+0xd3e8>
   10620:	ldrh	w2, [x25, #92]
   10624:	sub	w2, w2, #0x1
   10628:	mov	w3, #0x0                   	// #0
   1062c:	sxtw	x2, w2
   10630:	mov	x0, x22
   10634:	bl	56f0 <Perl_av_fetch@plt>
   10638:	mov	x19, x0
   1063c:	cbz	x0, 195b8 <Perl_re_exec_indentf@@Base+0xd3e8>
   10640:	mov	x0, x22
   10644:	bl	59b0 <Perl_sv_newmortal@plt>
   10648:	mov	x23, x0
   1064c:	ldr	x20, [x22, #1480]
   10650:	ldrh	w21, [x25, #92]
   10654:	ldr	x1, [x19]
   10658:	ldr	w0, [x1, #12]
   1065c:	and	w0, w0, #0x3ffc00
   10660:	and	w0, w0, #0xffe007ff
   10664:	cmp	w0, #0x400
   10668:	b.ne	10728 <Perl_re_exec_indentf@@Base+0x4558>  // b.any
   1066c:	ldr	x2, [x1, #16]
   10670:	ldr	x1, [x19]
   10674:	ldr	w0, [x1, #12]
   10678:	and	w4, w0, #0xf
   1067c:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   10680:	ldr	x3, [x3, #3888]
   10684:	ldrb	w3, [x3, w4, uxtw]
   10688:	cbz	w3, 10740 <Perl_re_exec_indentf@@Base+0x4570>
   1068c:	and	w3, w0, #0xc000
   10690:	cmp	w3, #0x8, lsl #12
   10694:	b.eq	10764 <Perl_re_exec_indentf@@Base+0x4594>  // b.none
   10698:	and	w3, w0, #0xff
   1069c:	cmp	w3, #0xf
   106a0:	b.ne	106b0 <Perl_re_exec_indentf@@Base+0x44e0>  // b.any
   106a4:	ldr	x3, [x1]
   106a8:	ldrb	w3, [x3, #129]
   106ac:	tbz	w3, #6, 10798 <Perl_re_exec_indentf@@Base+0x45c8>
   106b0:	lsr	w0, w0, #21
   106b4:	and	w7, w0, #0x100
   106b8:	ldr	x0, [x1]
   106bc:	orr	w7, w7, #0x400
   106c0:	ldr	x6, [x22, #1456]
   106c4:	ldr	x5, [x22, #1448]
   106c8:	mov	x4, #0x0                   	// #0
   106cc:	ldr	x3, [x0, #16]
   106d0:	mov	x1, x23
   106d4:	mov	x0, x22
   106d8:	bl	53f0 <Perl_pv_pretty@plt>
   106dc:	mov	x5, x0
   106e0:	ldr	x6, [x22, #1488]
   106e4:	mov	w4, w21
   106e8:	mov	x3, x20
   106ec:	mov	w2, w26
   106f0:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   106f4:	add	x1, x1, #0xd30
   106f8:	mov	x0, x22
   106fc:	bl	5290 <Perl_re_exec_indentf@plt>
   10700:	mov	x23, x24
   10704:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   10708:	mov	w0, #0x66                  	// #102
   1070c:	str	w0, [x25]
   10710:	ldr	x0, [sp, #128]
   10714:	str	x0, [sp, #200]
   10718:	str	x23, [sp, #192]
   1071c:	mov	x23, x24
   10720:	str	wzr, [sp, #376]
   10724:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   10728:	mov	w3, #0x22                  	// #34
   1072c:	mov	x2, #0x0                   	// #0
   10730:	mov	x0, x22
   10734:	bl	5200 <Perl_sv_2pv_flags@plt>
   10738:	mov	x2, x0
   1073c:	b	10670 <Perl_re_exec_indentf@@Base+0x44a0>
   10740:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10744:	add	x3, x3, #0x330
   10748:	add	x3, x3, #0xc80
   1074c:	mov	w2, #0x186a                	// #6250
   10750:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10754:	add	x1, x1, #0xcb0
   10758:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1075c:	add	x0, x0, #0xe40
   10760:	bl	58e0 <__assert_fail@plt>
   10764:	and	w3, w0, #0xff
   10768:	sub	w3, w3, #0x9
   1076c:	cmp	w3, #0x1
   10770:	b.hi	10698 <Perl_re_exec_indentf@@Base+0x44c8>  // b.pmore
   10774:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10778:	add	x3, x3, #0x330
   1077c:	add	x3, x3, #0xc80
   10780:	mov	w2, #0x186a                	// #6250
   10784:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10788:	add	x1, x1, #0xcb0
   1078c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   10790:	add	x0, x0, #0xe70
   10794:	bl	58e0 <__assert_fail@plt>
   10798:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1079c:	add	x3, x3, #0x330
   107a0:	add	x3, x3, #0xc80
   107a4:	mov	w2, #0x186a                	// #6250
   107a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   107ac:	add	x1, x1, #0xcb0
   107b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   107b4:	add	x0, x0, #0xe88
   107b8:	bl	58e0 <__assert_fail@plt>
   107bc:	mov	w20, #0xfffffff6            	// #-10
   107c0:	ldr	x0, [x22, #1440]
   107c4:	cbnz	x0, 108bc <Perl_re_exec_indentf@@Base+0x46ec>
   107c8:	ldr	w0, [sp, #168]
   107cc:	cbz	w0, 19554 <Perl_re_exec_indentf@@Base+0xd384>
   107d0:	ldrb	w0, [x23]
   107d4:	cmp	w0, #0xc3
   107d8:	b.ls	10938 <Perl_re_exec_indentf@@Base+0x4768>  // b.plast
   107dc:	ldrb	w0, [x22, #1180]
   107e0:	cbnz	w0, 10938 <Perl_re_exec_indentf@@Base+0x4768>
   107e4:	mov	w1, #0x3f                  	// #63
   107e8:	mov	x0, x22
   107ec:	bl	5870 <Perl_ckwarn@plt>
   107f0:	and	w0, w0, #0xff
   107f4:	cbz	w0, 10938 <Perl_re_exec_indentf@@Base+0x4768>
   107f8:	ldr	x21, [x24, #16]
   107fc:	cmp	x23, x21
   10800:	b.cs	108c4 <Perl_re_exec_indentf@@Base+0x46f4>  // b.hs, b.nlast
   10804:	mov	w1, #0x2c                  	// #44
   10808:	mov	x0, x22
   1080c:	bl	52a0 <Perl_ckwarn_d@plt>
   10810:	ands	w0, w0, #0xff
   10814:	mov	w0, #0x9e                  	// #158
   10818:	csel	w3, w0, wzr, eq  // eq = none
   1081c:	mov	x5, x23
   10820:	mov	x19, #0x0                   	// #0
   10824:	mov	x0, #0x0                   	// #0
   10828:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1082c:	ldr	x8, [x1, #3824]
   10830:	mov	w7, #0xff                  	// #255
   10834:	mov	x4, x8
   10838:	ldrb	w2, [x5]
   1083c:	ldrb	w1, [x8, w2, sxtw]
   10840:	and	x6, x1, #0xff
   10844:	asr	w1, w7, w1
   10848:	and	w1, w1, w2
   1084c:	sxtw	x1, w1
   10850:	bfi	x2, x19, #6, #58
   10854:	cmp	x0, #0x0
   10858:	csel	x19, x2, x1, ne  // ne = any
   1085c:	add	x0, x4, x0
   10860:	add	x0, x0, x6
   10864:	ldrb	w0, [x0, #256]
   10868:	cbnz	x0, 108e8 <Perl_re_exec_indentf@@Base+0x4718>
   1086c:	cmp	x19, #0x0
   10870:	mov	x0, #0xfffd                	// #65533
   10874:	csel	x19, x19, x0, ne  // ne = any
   10878:	ldr	x1, [x22, #8]
   1087c:	ldrh	w0, [x1, #32]
   10880:	and	w0, w0, #0x1ff
   10884:	cmp	w0, #0x17f
   10888:	b.eq	10918 <Perl_re_exec_indentf@@Base+0x4748>  // b.none
   1088c:	ldrh	w1, [x1, #32]
   10890:	and	x1, x1, #0x1ff
   10894:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   10898:	ldr	x0, [x0, #4008]
   1089c:	ldr	x4, [x0, x1, lsl #3]
   108a0:	mov	x3, x19
   108a4:	adrp	x2, 62000 <boot_re@@Base+0x41c>
   108a8:	add	x2, x2, #0x510
   108ac:	mov	w1, #0x3f                  	// #63
   108b0:	mov	x0, x22
   108b4:	bl	5110 <Perl_warner@plt>
   108b8:	b	10938 <Perl_re_exec_indentf@@Base+0x4768>
   108bc:	bl	5050 <Perl__warn_problematic_locale@plt>
   108c0:	b	107c8 <Perl_re_exec_indentf@@Base+0x45f8>
   108c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   108c8:	add	x3, x3, #0x330
   108cc:	add	x3, x3, #0xc80
   108d0:	mov	w2, #0x1882                	// #6274
   108d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   108d8:	add	x1, x1, #0xcb0
   108dc:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   108e0:	add	x0, x0, #0xaf8
   108e4:	bl	58e0 <__assert_fail@plt>
   108e8:	add	x5, x5, #0x1
   108ec:	cmp	x21, x5
   108f0:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   108f4:	b.ne	10838 <Perl_re_exec_indentf@@Base+0x4668>  // b.any
   108f8:	mov	x5, #0x0                   	// #0
   108fc:	mov	x4, #0x0                   	// #0
   10900:	mov	x2, #0x0                   	// #0
   10904:	sub	x1, x21, x23
   10908:	mov	x0, x23
   1090c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   10910:	mov	x19, x0
   10914:	b	1086c <Perl_re_exec_indentf@@Base+0x469c>
   10918:	mov	w2, #0x2                   	// #2
   1091c:	mov	x0, x22
   10920:	bl	5080 <Perl_custom_op_get_field@plt>
   10924:	mov	x4, x0
   10928:	b	108a0 <Perl_re_exec_indentf@@Base+0x46d0>
   1092c:	mov	w20, #0xfffffff6            	// #-10
   10930:	ldr	w0, [sp, #168]
   10934:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10938:	mov	x0, x26
   1093c:	ldrb	w19, [x0], #4
   10940:	add	x3, x0, w19, uxtb
   10944:	ldr	w1, [sp, #168]
   10948:	ldr	w2, [sp, #256]
   1094c:	cmp	w1, w2
   10950:	b.eq	19570 <Perl_re_exec_indentf@@Base+0xd3a0>  // b.none
   10954:	cmp	x0, x3
   10958:	b.cs	18af0 <Perl_re_exec_indentf@@Base+0xc920>  // b.hs, b.nlast
   1095c:	ldr	x1, [sp, #128]
   10960:	cmp	x23, x1
   10964:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   10968:	mov	x2, x23
   1096c:	b	109cc <Perl_re_exec_indentf@@Base+0x47fc>
   10970:	mov	w20, #0xfffffff6            	// #-10
   10974:	mov	x0, x26
   10978:	ldrb	w19, [x0], #4
   1097c:	ldr	w1, [sp, #168]
   10980:	ldr	w2, [sp, #256]
   10984:	cmp	w1, w2
   10988:	b.eq	10bb0 <Perl_re_exec_indentf@@Base+0x49e0>  // b.none
   1098c:	add	x3, x0, w19, uxtb
   10990:	cbnz	w1, 10954 <Perl_re_exec_indentf@@Base+0x4784>
   10994:	cmp	x0, x3
   10998:	b.cs	18ae4 <Perl_re_exec_indentf@@Base+0xc914>  // b.hs, b.nlast
   1099c:	ldr	x1, [sp, #128]
   109a0:	cmp	x23, x1
   109a4:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   109a8:	mov	x2, x23
   109ac:	b	10acc <Perl_re_exec_indentf@@Base+0x48fc>
   109b0:	add	x2, x2, #0x1
   109b4:	add	x0, x0, #0x1
   109b8:	cmp	x0, x3
   109bc:	b.eq	10aa0 <Perl_re_exec_indentf@@Base+0x48d0>  // b.none
   109c0:	ldr	x1, [sp, #128]
   109c4:	cmp	x1, x2
   109c8:	b.ls	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.plast
   109cc:	ldrb	w1, [x2]
   109d0:	cmp	w1, #0xc3
   109d4:	b.hi	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.pmore
   109d8:	tbnz	w1, #7, 109ec <Perl_re_exec_indentf@@Base+0x481c>
   109dc:	ldrb	w4, [x0]
   109e0:	cmp	w4, w1
   109e4:	b.eq	109b0 <Perl_re_exec_indentf@@Base+0x47e0>  // b.none
   109e8:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   109ec:	and	w4, w1, #0xfe
   109f0:	cmp	w4, #0xc2
   109f4:	b.ne	10a34 <Perl_re_exec_indentf@@Base+0x4864>  // b.any
   109f8:	ldrb	w4, [x2, #1]
   109fc:	and	w5, w4, #0xc0
   10a00:	cmp	w5, #0x80
   10a04:	b.ne	10a58 <Perl_re_exec_indentf@@Base+0x4888>  // b.any
   10a08:	lsl	w5, w1, #6
   10a0c:	ubfiz	w1, w1, #6, #5
   10a10:	tst	x1, #0x700
   10a14:	b.ne	10a7c <Perl_re_exec_indentf@@Base+0x48ac>  // b.any
   10a18:	and	w4, w4, #0x3f
   10a1c:	orr	w4, w4, w5
   10a20:	ldrsb	w1, [x0]
   10a24:	cmp	w1, w4, sxtb
   10a28:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   10a2c:	add	x2, x2, #0x2
   10a30:	b	109b4 <Perl_re_exec_indentf@@Base+0x47e4>
   10a34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10a38:	add	x3, x3, #0x330
   10a3c:	add	x3, x3, #0xc80
   10a40:	mov	w2, #0x18ab                	// #6315
   10a44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10a48:	add	x1, x1, #0xcb0
   10a4c:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   10a50:	add	x0, x0, #0xd70
   10a54:	bl	58e0 <__assert_fail@plt>
   10a58:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10a5c:	add	x3, x3, #0x330
   10a60:	add	x3, x3, #0xc80
   10a64:	mov	w2, #0x18ab                	// #6315
   10a68:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10a6c:	add	x1, x1, #0xcb0
   10a70:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   10a74:	add	x0, x0, #0xec0
   10a78:	bl	58e0 <__assert_fail@plt>
   10a7c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10a80:	add	x3, x3, #0x330
   10a84:	add	x3, x3, #0xc80
   10a88:	mov	w2, #0x18ab                	// #6315
   10a8c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10a90:	add	x1, x1, #0xcb0
   10a94:	adrp	x0, 65000 <boot_re@@Base+0x341c>
   10a98:	add	x0, x0, #0x28
   10a9c:	bl	58e0 <__assert_fail@plt>
   10aa0:	mov	w26, w27
   10aa4:	mov	x27, x24
   10aa8:	mov	x23, x2
   10aac:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   10ab0:	add	x0, x0, #0x1
   10ab4:	add	x2, x2, #0x1
   10ab8:	cmp	x0, x3
   10abc:	b.cs	10ba0 <Perl_re_exec_indentf@@Base+0x49d0>  // b.hs, b.nlast
   10ac0:	ldr	x1, [sp, #128]
   10ac4:	cmp	x1, x2
   10ac8:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   10acc:	ldrb	w1, [x0]
   10ad0:	cmp	w1, #0xc3
   10ad4:	b.hi	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.pmore
   10ad8:	tbnz	w1, #7, 10aec <Perl_re_exec_indentf@@Base+0x491c>
   10adc:	ldrb	w4, [x2]
   10ae0:	cmp	w4, w1
   10ae4:	b.eq	10ab0 <Perl_re_exec_indentf@@Base+0x48e0>  // b.none
   10ae8:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10aec:	and	w4, w1, #0xfe
   10af0:	cmp	w4, #0xc2
   10af4:	b.ne	10b34 <Perl_re_exec_indentf@@Base+0x4964>  // b.any
   10af8:	ldrb	w4, [x0, #1]
   10afc:	and	w5, w4, #0xc0
   10b00:	cmp	w5, #0x80
   10b04:	b.ne	10b58 <Perl_re_exec_indentf@@Base+0x4988>  // b.any
   10b08:	lsl	w5, w1, #6
   10b0c:	ubfiz	w1, w1, #6, #5
   10b10:	tst	x1, #0x700
   10b14:	b.ne	10b7c <Perl_re_exec_indentf@@Base+0x49ac>  // b.any
   10b18:	and	w4, w4, #0x3f
   10b1c:	orr	w4, w4, w5
   10b20:	ldrsb	w1, [x2]
   10b24:	cmp	w1, w4, sxtb
   10b28:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   10b2c:	add	x0, x0, #0x2
   10b30:	b	10ab4 <Perl_re_exec_indentf@@Base+0x48e4>
   10b34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10b38:	add	x3, x3, #0x330
   10b3c:	add	x3, x3, #0xc80
   10b40:	mov	w2, #0x18c3                	// #6339
   10b44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10b48:	add	x1, x1, #0xcb0
   10b4c:	adrp	x0, 65000 <boot_re@@Base+0x341c>
   10b50:	add	x0, x0, #0x8f8
   10b54:	bl	58e0 <__assert_fail@plt>
   10b58:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10b5c:	add	x3, x3, #0x330
   10b60:	add	x3, x3, #0xc80
   10b64:	mov	w2, #0x18c3                	// #6339
   10b68:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10b6c:	add	x1, x1, #0xcb0
   10b70:	adrp	x0, 65000 <boot_re@@Base+0x341c>
   10b74:	add	x0, x0, #0xa48
   10b78:	bl	58e0 <__assert_fail@plt>
   10b7c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10b80:	add	x3, x3, #0x330
   10b84:	add	x3, x3, #0xc80
   10b88:	mov	w2, #0x18c3                	// #6339
   10b8c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10b90:	add	x1, x1, #0xcb0
   10b94:	adrp	x0, 65000 <boot_re@@Base+0x341c>
   10b98:	add	x0, x0, #0xbb0
   10b9c:	bl	58e0 <__assert_fail@plt>
   10ba0:	mov	w26, w27
   10ba4:	mov	x27, x24
   10ba8:	mov	x23, x2
   10bac:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   10bb0:	and	x1, x19, #0xff
   10bb4:	b	19574 <Perl_re_exec_indentf@@Base+0xd3a4>
   10bb8:	mov	w0, #0x1                   	// #1
   10bbc:	str	w0, [sp, #192]
   10bc0:	ldr	x0, [x22, #1440]
   10bc4:	cbnz	x0, 10c14 <Perl_re_exec_indentf@@Base+0x4a44>
   10bc8:	mov	x5, x26
   10bcc:	ldrb	w21, [x5], #4
   10bd0:	and	x2, x21, #0xff
   10bd4:	ldr	w0, [sp, #168]
   10bd8:	cmp	w0, #0x0
   10bdc:	ldr	w0, [sp, #256]
   10be0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   10be4:	b.ne	10e98 <Perl_re_exec_indentf@@Base+0x4cc8>  // b.any
   10be8:	adrp	x3, 5000 <Perl_parse_uniprop_string@plt>
   10bec:	add	x3, x3, #0xb18
   10bf0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   10bf4:	ldr	x1, [x1, #3816]
   10bf8:	mov	w0, #0x2                   	// #2
   10bfc:	ldrb	w4, [x22, #1180]
   10c00:	cbz	w4, 10e18 <Perl_re_exec_indentf@@Base+0x4c48>
   10c04:	b	10ccc <Perl_re_exec_indentf@@Base+0x4afc>
   10c08:	str	wzr, [sp, #192]
   10c0c:	mov	w20, #0xfffffff6            	// #-10
   10c10:	b	10bc0 <Perl_re_exec_indentf@@Base+0x49f0>
   10c14:	bl	5050 <Perl__warn_problematic_locale@plt>
   10c18:	b	10bc8 <Perl_re_exec_indentf@@Base+0x49f8>
   10c1c:	ldr	w0, [sp, #168]
   10c20:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10c24:	mov	w0, #0x2a                  	// #42
   10c28:	b	10cc4 <Perl_re_exec_indentf@@Base+0x4af4>
   10c2c:	ldr	w0, [sp, #168]
   10c30:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10c34:	ldr	w0, [sp, #256]
   10c38:	cbz	w0, 10c44 <Perl_re_exec_indentf@@Base+0x4a74>
   10c3c:	mov	w0, #0x8                   	// #8
   10c40:	b	10cc4 <Perl_re_exec_indentf@@Base+0x4af4>
   10c44:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10c48:	add	x3, x3, #0x330
   10c4c:	add	x3, x3, #0xc80
   10c50:	mov	w2, #0x18f9                	// #6393
   10c54:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10c58:	add	x1, x1, #0xcb0
   10c5c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   10c60:	add	x0, x0, #0x480
   10c64:	bl	58e0 <__assert_fail@plt>
   10c68:	ldr	w0, [sp, #256]
   10c6c:	cbnz	w0, 10c78 <Perl_re_exec_indentf@@Base+0x4aa8>
   10c70:	mov	w0, #0x0                   	// #0
   10c74:	b	10cc4 <Perl_re_exec_indentf@@Base+0x4af4>
   10c78:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10c7c:	add	x3, x3, #0x330
   10c80:	add	x3, x3, #0xc80
   10c84:	mov	w2, #0x18ff                	// #6399
   10c88:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10c8c:	add	x1, x1, #0xcb0
   10c90:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   10c94:	add	x0, x0, #0x2f8
   10c98:	bl	58e0 <__assert_fail@plt>
   10c9c:	mov	w0, #0x1                   	// #1
   10ca0:	str	w0, [sp, #192]
   10ca4:	ldr	w0, [sp, #256]
   10ca8:	cbnz	w0, 10d20 <Perl_re_exec_indentf@@Base+0x4b50>
   10cac:	ldr	w0, [sp, #168]
   10cb0:	eor	w0, w0, #0x1
   10cb4:	ldr	w1, [sp, #256]
   10cb8:	orr	w0, w1, w0
   10cbc:	cbnz	w0, 10dd4 <Perl_re_exec_indentf@@Base+0x4c04>
   10cc0:	mov	w0, #0x1                   	// #1
   10cc4:	mov	x5, x26
   10cc8:	ldrb	w21, [x5], #4
   10ccc:	ldr	x1, [sp, #128]
   10cd0:	str	x1, [sp, #496]
   10cd4:	str	w0, [sp, #8]
   10cd8:	ldrb	w0, [sp, #256]
   10cdc:	strb	w0, [sp]
   10ce0:	and	x7, x21, #0xff
   10ce4:	mov	x6, #0x0                   	// #0
   10ce8:	ldrb	w4, [sp, #168]
   10cec:	mov	x3, #0x0                   	// #0
   10cf0:	add	x2, sp, #0x1f0
   10cf4:	mov	x1, x23
   10cf8:	mov	x0, x22
   10cfc:	bl	5400 <Perl_foldEQ_utf8_flags@plt>
   10d00:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10d04:	mov	w26, w27
   10d08:	mov	x27, x24
   10d0c:	ldr	x23, [sp, #496]
   10d10:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   10d14:	str	wzr, [sp, #192]
   10d18:	mov	w20, #0xfffffff6            	// #-10
   10d1c:	b	10ca4 <Perl_re_exec_indentf@@Base+0x4ad4>
   10d20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10d24:	add	x3, x3, #0x330
   10d28:	add	x3, x3, #0xc80
   10d2c:	mov	w2, #0x190d                	// #6413
   10d30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10d34:	add	x1, x1, #0xcb0
   10d38:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   10d3c:	add	x0, x0, #0x2f8
   10d40:	bl	58e0 <__assert_fail@plt>
   10d44:	mov	w0, #0x1                   	// #1
   10d48:	str	w0, [sp, #192]
   10d4c:	b	10cac <Perl_re_exec_indentf@@Base+0x4adc>
   10d50:	str	wzr, [sp, #192]
   10d54:	mov	w20, #0xfffffff6            	// #-10
   10d58:	b	10cac <Perl_re_exec_indentf@@Base+0x4adc>
   10d5c:	mov	w0, #0x1                   	// #1
   10d60:	str	w0, [sp, #192]
   10d64:	ldr	w0, [sp, #256]
   10d68:	cbnz	w0, 10da0 <Perl_re_exec_indentf@@Base+0x4bd0>
   10d6c:	mov	x5, x26
   10d70:	ldrb	w21, [x5], #4
   10d74:	and	x2, x21, #0xff
   10d78:	ldr	w0, [sp, #168]
   10d7c:	cbnz	w0, 10e90 <Perl_re_exec_indentf@@Base+0x4cc0>
   10d80:	adrp	x3, 5000 <Perl_parse_uniprop_string@plt>
   10d84:	add	x3, x3, #0xbec
   10d88:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   10d8c:	ldr	x1, [x1, #3944]
   10d90:	b	10e18 <Perl_re_exec_indentf@@Base+0x4c48>
   10d94:	str	wzr, [sp, #192]
   10d98:	mov	w20, #0xfffffff6            	// #-10
   10d9c:	b	10d64 <Perl_re_exec_indentf@@Base+0x4b94>
   10da0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   10da4:	add	x3, x3, #0x330
   10da8:	add	x3, x3, #0xc80
   10dac:	mov	w2, #0x1920                	// #6432
   10db0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   10db4:	add	x1, x1, #0xcb0
   10db8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   10dbc:	add	x0, x0, #0x2f8
   10dc0:	bl	58e0 <__assert_fail@plt>
   10dc4:	mov	w0, #0x1                   	// #1
   10dc8:	str	w0, [sp, #192]
   10dcc:	mov	w0, #0x8                   	// #8
   10dd0:	b	10dd8 <Perl_re_exec_indentf@@Base+0x4c08>
   10dd4:	mov	w0, #0x29                  	// #41
   10dd8:	mov	x5, x26
   10ddc:	ldrb	w21, [x5], #4
   10de0:	and	x2, x21, #0xff
   10de4:	ldr	w1, [sp, #168]
   10de8:	cmp	w1, #0x0
   10dec:	ldr	w1, [sp, #256]
   10df0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   10df4:	mov	w1, #0x29                  	// #41
   10df8:	ccmp	w19, w1, #0x4, eq  // eq = none
   10dfc:	b.eq	10ccc <Perl_re_exec_indentf@@Base+0x4afc>  // b.none
   10e00:	cmp	w19, #0x26
   10e04:	b.eq	10e7c <Perl_re_exec_indentf@@Base+0x4cac>  // b.none
   10e08:	adrp	x3, 5000 <Perl_parse_uniprop_string@plt>
   10e0c:	add	x3, x3, #0xccc
   10e10:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   10e14:	ldr	x1, [x1, #3752]
   10e18:	ldrb	w0, [x26, #4]
   10e1c:	ldr	w4, [sp, #192]
   10e20:	cmp	w4, #0x0
   10e24:	ccmp	w0, w20, #0x4, ne  // ne = any
   10e28:	b.ne	10ea0 <Perl_re_exec_indentf@@Base+0x4cd0>  // b.any
   10e2c:	ldr	x0, [sp, #128]
   10e30:	sub	x0, x0, x23
   10e34:	cmp	x0, x2
   10e38:	b.lt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.tstop
   10e3c:	cmp	x2, #0x1
   10e40:	b.le	10e58 <Perl_re_exec_indentf@@Base+0x4c88>
   10e44:	mov	w2, w21
   10e48:	mov	x1, x5
   10e4c:	mov	x0, x23
   10e50:	blr	x3
   10e54:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   10e58:	mov	w26, w27
   10e5c:	mov	x27, x24
   10e60:	add	x23, x23, w21, uxtb
   10e64:	str	wzr, [sp, #256]
   10e68:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   10e6c:	str	wzr, [sp, #192]
   10e70:	mov	w20, #0xfffffff6            	// #-10
   10e74:	mov	w0, #0x8                   	// #8
   10e78:	b	10dd8 <Perl_re_exec_indentf@@Base+0x4c08>
   10e7c:	adrp	x3, 5000 <Perl_parse_uniprop_string@plt>
   10e80:	add	x3, x3, #0xccc
   10e84:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   10e88:	ldr	x1, [x1, #3752]
   10e8c:	b	10bfc <Perl_re_exec_indentf@@Base+0x4a2c>
   10e90:	mov	w0, #0x0                   	// #0
   10e94:	b	10ccc <Perl_re_exec_indentf@@Base+0x4afc>
   10e98:	mov	w0, #0x2                   	// #2
   10e9c:	b	10ccc <Perl_re_exec_indentf@@Base+0x4afc>
   10ea0:	ldrb	w1, [x1, w20, sxtw]
   10ea4:	cmp	w1, w0
   10ea8:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   10eac:	b	10e2c <Perl_re_exec_indentf@@Base+0x4c5c>
   10eb0:	mov	w19, #0x1                   	// #1
   10eb4:	mov	w21, w19
   10eb8:	b	198c0 <Perl_re_exec_indentf@@Base+0xd6f0>
   10ebc:	mov	w19, #0x0                   	// #0
   10ec0:	mov	w20, #0xfffffff6            	// #-10
   10ec4:	mov	w21, #0x1                   	// #1
   10ec8:	b	198c0 <Perl_re_exec_indentf@@Base+0xd6f0>
   10ecc:	bl	5050 <Perl__warn_problematic_locale@plt>
   10ed0:	b	198c8 <Perl_re_exec_indentf@@Base+0xd6f8>
   10ed4:	ldrb	w0, [x22, #1180]
   10ed8:	cbz	w0, 110a0 <Perl_re_exec_indentf@@Base+0x4ed0>
   10edc:	ldr	x1, [x24, #8]
   10ee0:	ldr	x0, [x24, #16]
   10ee4:	cmp	x1, x0
   10ee8:	b.cs	120f0 <Perl_re_exec_indentf@@Base+0x5f20>  // b.hs, b.nlast
   10eec:	ldr	w0, [sp, #168]
   10ef0:	cbz	w0, 11edc <Perl_re_exec_indentf@@Base+0x5d0c>
   10ef4:	ldrb	w0, [x26]
   10ef8:	cmp	w0, #0x2
   10efc:	b.eq	118fc <Perl_re_exec_indentf@@Base+0x572c>  // b.none
   10f00:	b.ls	1149c <Perl_re_exec_indentf@@Base+0x52cc>  // b.plast
   10f04:	cmp	w0, #0x3
   10f08:	b.eq	11b74 <Perl_re_exec_indentf@@Base+0x59a4>  // b.none
   10f0c:	cmp	w0, #0x4
   10f10:	b.ne	116a4 <Perl_re_exec_indentf@@Base+0x54d4>  // b.any
   10f14:	ldr	x2, [x24, #8]
   10f18:	cmp	x23, x2
   10f1c:	lsr	w0, w20, #31
   10f20:	csinc	w0, w0, wzr, ne  // ne = any
   10f24:	str	w0, [sp, #316]
   10f28:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   10f2c:	mov	x1, #0xffffffffffffffff    	// #-1
   10f30:	mov	x0, x23
   10f34:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   10f38:	mov	x19, x0
   10f3c:	ldr	x20, [x24, #16]
   10f40:	cmp	x0, x20
   10f44:	b.cs	11dec <Perl_re_exec_indentf@@Base+0x5c1c>  // b.hs, b.nlast
   10f48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   10f4c:	ldr	x0, [x0, #3952]
   10f50:	ldr	x0, [x0]
   10f54:	str	x0, [sp, #192]
   10f58:	mov	w1, #0x2c                  	// #44
   10f5c:	mov	x0, x22
   10f60:	bl	52a0 <Perl_ckwarn_d@plt>
   10f64:	ands	w0, w0, #0xff
   10f68:	mov	w0, #0x9e                  	// #158
   10f6c:	csel	w3, w0, wzr, eq  // eq = none
   10f70:	cbz	x19, 11e10 <Perl_re_exec_indentf@@Base+0x5c40>
   10f74:	mov	x6, x19
   10f78:	mov	x1, #0x0                   	// #0
   10f7c:	mov	x2, #0x0                   	// #0
   10f80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   10f84:	ldr	x9, [x0, #3824]
   10f88:	mov	w8, #0xff                  	// #255
   10f8c:	mov	x5, x9
   10f90:	ldrb	w4, [x6]
   10f94:	ldrb	w0, [x9, w4, sxtw]
   10f98:	and	x7, x0, #0xff
   10f9c:	asr	w0, w8, w0
   10fa0:	and	w0, w0, w4
   10fa4:	sxtw	x0, w0
   10fa8:	bfi	x4, x1, #6, #58
   10fac:	cmp	x2, #0x0
   10fb0:	csel	x1, x4, x0, ne  // ne = any
   10fb4:	add	x0, x5, x2
   10fb8:	add	x0, x0, x7
   10fbc:	ldrb	w2, [x0, #256]
   10fc0:	cbnz	x2, 11e34 <Perl_re_exec_indentf@@Base+0x5c64>
   10fc4:	ldr	x0, [sp, #192]
   10fc8:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   10fcc:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
   10fd0:	add	x1, x1, #0x100
   10fd4:	ldr	w0, [x1, x0, lsl #2]
   10fd8:	str	w0, [sp, #192]
   10fdc:	ldr	x19, [x24, #16]
   10fe0:	cmp	x23, x19
   10fe4:	b.cs	11e64 <Perl_re_exec_indentf@@Base+0x5c94>  // b.hs, b.nlast
   10fe8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   10fec:	ldr	x0, [x0, #3952]
   10ff0:	ldr	x20, [x0]
   10ff4:	mov	w1, #0x2c                  	// #44
   10ff8:	mov	x0, x22
   10ffc:	bl	52a0 <Perl_ckwarn_d@plt>
   11000:	ands	w0, w0, #0xff
   11004:	mov	w0, #0x9e                  	// #158
   11008:	csel	w3, w0, wzr, eq  // eq = none
   1100c:	cbz	x23, 11e88 <Perl_re_exec_indentf@@Base+0x5cb8>
   11010:	mov	x7, x23
   11014:	mov	x1, #0x0                   	// #0
   11018:	mov	x0, #0x0                   	// #0
   1101c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   11020:	ldr	x9, [x2, #3824]
   11024:	mov	w8, #0xff                  	// #255
   11028:	mov	x6, x9
   1102c:	ldrb	w5, [x7]
   11030:	ldrb	w2, [x9, w5, sxtw]
   11034:	and	x4, x2, #0xff
   11038:	asr	w2, w8, w2
   1103c:	and	w2, w2, w5
   11040:	sxtw	x2, w2
   11044:	bfi	x5, x1, #6, #58
   11048:	cmp	x0, #0x0
   1104c:	csel	x1, x5, x2, ne  // ne = any
   11050:	add	x2, x6, x4
   11054:	add	x0, x2, x0
   11058:	ldrb	w0, [x0, #256]
   1105c:	cbnz	x0, 11eac <Perl_re_exec_indentf@@Base+0x5cdc>
   11060:	mov	x0, x20
   11064:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11068:	ldrb	w7, [sp, #168]
   1106c:	ldr	x6, [x24, #16]
   11070:	mov	x5, x23
   11074:	ldr	x4, [x24, #8]
   11078:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
   1107c:	add	x1, x1, #0x100
   11080:	ldr	w3, [x1, x0, lsl #2]
   11084:	ldr	w2, [sp, #192]
   11088:	mov	w1, #0x16                  	// #22
   1108c:	mov	x0, x22
   11090:	bl	862c <Perl__inverse_folds@plt+0x2c2c>
   11094:	and	w0, w0, #0xff
   11098:	str	w0, [sp, #316]
   1109c:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   110a0:	adrp	x2, 66000 <boot_re@@Base+0x441c>
   110a4:	add	x2, x2, #0x490
   110a8:	mov	w1, #0x3f                  	// #63
   110ac:	mov	x0, x22
   110b0:	bl	5150 <Perl_ck_warner@plt>
   110b4:	b	10edc <Perl_re_exec_indentf@@Base+0x4d0c>
   110b8:	ldrb	w0, [x22, #1180]
   110bc:	cbz	w0, 11128 <Perl_re_exec_indentf@@Base+0x4f58>
   110c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   110c4:	ldr	x0, [x0, #3880]
   110c8:	ldr	w19, [x0, #40]
   110cc:	and	w19, w19, #0x1
   110d0:	tst	w20, #0x80000000
   110d4:	b.ne	1992c <Perl_re_exec_indentf@@Base+0xd75c>  // b.any
   110d8:	ldr	x2, [x24, #16]
   110dc:	cmp	x23, x2
   110e0:	b.cs	11264 <Perl_re_exec_indentf@@Base+0x5094>  // b.hs, b.nlast
   110e4:	ldrb	w20, [x23]
   110e8:	tbnz	w20, #7, 112ac <Perl_re_exec_indentf@@Base+0x50dc>
   110ec:	ldrb	w0, [x22, #1180]
   110f0:	cbz	w0, 11288 <Perl_re_exec_indentf@@Base+0x50b8>
   110f4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   110f8:	ldr	x0, [x0, #3880]
   110fc:	ldr	w0, [x0, w20, sxtw #2]
   11100:	and	w0, w0, #0x1
   11104:	cmp	w0, #0x0
   11108:	cset	w0, ne  // ne = any
   1110c:	cmp	w19, w0
   11110:	cset	w0, eq  // eq = none
   11114:	cmp	w0, w21
   11118:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   1111c:	mov	w26, w27
   11120:	mov	x27, x24
   11124:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   11128:	bl	54d0 <__ctype_b_loc@plt>
   1112c:	ldr	x0, [x0]
   11130:	ldrh	w19, [x0, #20]
   11134:	ubfx	x19, x19, #3, #1
   11138:	tbz	w20, #31, 110d8 <Perl_re_exec_indentf@@Base+0x4f08>
   1113c:	bl	54d0 <__ctype_b_loc@plt>
   11140:	ldr	x0, [x0]
   11144:	ldrh	w0, [x0, #20]
   11148:	ubfx	x0, x0, #3, #1
   1114c:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   11150:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11154:	add	x3, x3, #0x330
   11158:	add	x3, x3, #0xc80
   1115c:	mov	w2, #0x1960                	// #6496
   11160:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11164:	add	x1, x1, #0xcb0
   11168:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   1116c:	add	x0, x0, #0x4e0
   11170:	bl	58e0 <__assert_fail@plt>
   11174:	bl	54d0 <__ctype_b_loc@plt>
   11178:	and	x1, x19, #0xff
   1117c:	ldr	x0, [x0]
   11180:	ldrh	w0, [x0, x1, lsl #1]
   11184:	and	w0, w0, #0x8
   11188:	cmp	w19, #0x5f
   1118c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   11190:	cset	w19, ne  // ne = any
   11194:	tbz	w20, #31, 110d8 <Perl_re_exec_indentf@@Base+0x4f08>
   11198:	b	1113c <Perl_re_exec_indentf@@Base+0x4f6c>
   1119c:	and	w1, w19, #0xfe
   111a0:	cmp	w1, #0xc2
   111a4:	b.ne	11234 <Perl_re_exec_indentf@@Base+0x5064>  // b.any
   111a8:	ldr	x1, [sp, #192]
   111ac:	sub	x1, x1, x0
   111b0:	cmp	x1, #0x1
   111b4:	b.le	11214 <Perl_re_exec_indentf@@Base+0x5044>
   111b8:	ldrb	w2, [x0, #1]
   111bc:	str	w2, [sp, #200]
   111c0:	and	w1, w2, #0xc0
   111c4:	cmp	w1, #0x80
   111c8:	b.ne	11214 <Perl_re_exec_indentf@@Base+0x5044>  // b.any
   111cc:	ldrb	w0, [x22, #1180]
   111d0:	cbz	w0, 111f4 <Perl_re_exec_indentf@@Base+0x5024>
   111d4:	mov	w0, w2
   111d8:	bfi	w0, w19, #6, #26
   111dc:	and	x1, x0, #0xff
   111e0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   111e4:	ldr	x0, [x0, #3880]
   111e8:	ldr	w19, [x0, x1, lsl #2]
   111ec:	and	w19, w19, #0x1
   111f0:	b	19924 <Perl_re_exec_indentf@@Base+0xd754>
   111f4:	bl	54d0 <__ctype_b_loc@plt>
   111f8:	ldr	w1, [sp, #200]
   111fc:	bfi	w1, w19, #6, #26
   11200:	and	x1, x1, #0xff
   11204:	ldr	x0, [x0]
   11208:	ldrh	w19, [x0, x1, lsl #1]
   1120c:	ubfx	x19, x19, #3, #1
   11210:	b	11194 <Perl_re_exec_indentf@@Base+0x4fc4>
   11214:	mov	w4, #0x1                   	// #1
   11218:	mov	w3, #0x0                   	// #0
   1121c:	ldr	x2, [sp, #192]
   11220:	mov	x1, x0
   11224:	mov	x0, x22
   11228:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1122c:	mov	w0, #0x0                   	// #0
   11230:	b	1124c <Perl_re_exec_indentf@@Base+0x507c>
   11234:	ldr	x3, [sp, #192]
   11238:	mov	x2, x0
   1123c:	mov	w1, #0x0                   	// #0
   11240:	mov	x0, x22
   11244:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   11248:	and	w0, w0, #0xff
   1124c:	cmp	w0, #0x0
   11250:	cset	w19, ne  // ne = any
   11254:	tbz	w20, #31, 110d8 <Perl_re_exec_indentf@@Base+0x4f08>
   11258:	ldrb	w0, [x22, #1180]
   1125c:	cbz	w0, 1113c <Perl_re_exec_indentf@@Base+0x4f6c>
   11260:	b	1992c <Perl_re_exec_indentf@@Base+0xd75c>
   11264:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11268:	add	x3, x3, #0x330
   1126c:	add	x3, x3, #0xc80
   11270:	mov	w2, #0x1966                	// #6502
   11274:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11278:	add	x1, x1, #0xcb0
   1127c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11280:	add	x0, x0, #0x538
   11284:	bl	58e0 <__assert_fail@plt>
   11288:	bl	54d0 <__ctype_b_loc@plt>
   1128c:	and	x1, x20, #0xff
   11290:	ldr	x0, [x0]
   11294:	ldrh	w0, [x0, x1, lsl #1]
   11298:	and	w0, w0, #0x8
   1129c:	cmp	w20, #0x5f
   112a0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   112a4:	cset	w0, ne  // ne = any
   112a8:	b	11104 <Perl_re_exec_indentf@@Base+0x4f34>
   112ac:	and	w0, w20, #0xfe
   112b0:	cmp	w0, #0xc2
   112b4:	b.ne	1133c <Perl_re_exec_indentf@@Base+0x516c>  // b.any
   112b8:	sub	x0, x2, x23
   112bc:	cmp	x0, #0x1
   112c0:	b.le	11320 <Perl_re_exec_indentf@@Base+0x5150>
   112c4:	ldrb	w1, [x23, #1]
   112c8:	str	w1, [sp, #192]
   112cc:	and	w0, w1, #0xc0
   112d0:	cmp	w0, #0x80
   112d4:	b.ne	11320 <Perl_re_exec_indentf@@Base+0x5150>  // b.any
   112d8:	ldrb	w0, [x22, #1180]
   112dc:	cbz	w0, 11300 <Perl_re_exec_indentf@@Base+0x5130>
   112e0:	mov	w0, w1
   112e4:	bfi	w0, w20, #6, #26
   112e8:	and	x1, x0, #0xff
   112ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   112f0:	ldr	x0, [x0, #3880]
   112f4:	ldr	w0, [x0, x1, lsl #2]
   112f8:	and	w0, w0, #0x1
   112fc:	b	11104 <Perl_re_exec_indentf@@Base+0x4f34>
   11300:	bl	54d0 <__ctype_b_loc@plt>
   11304:	ldr	w1, [sp, #192]
   11308:	bfi	w1, w20, #6, #26
   1130c:	and	x1, x1, #0xff
   11310:	ldr	x0, [x0]
   11314:	ldrh	w0, [x0, x1, lsl #1]
   11318:	ubfx	x0, x0, #3, #1
   1131c:	b	11104 <Perl_re_exec_indentf@@Base+0x4f34>
   11320:	mov	w4, #0x1                   	// #1
   11324:	mov	w3, #0x0                   	// #0
   11328:	mov	x1, x23
   1132c:	mov	x0, x22
   11330:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   11334:	mov	w0, #0x0                   	// #0
   11338:	b	11104 <Perl_re_exec_indentf@@Base+0x4f34>
   1133c:	mov	x3, x2
   11340:	mov	x2, x23
   11344:	mov	w1, #0x0                   	// #0
   11348:	mov	x0, x22
   1134c:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   11350:	and	w0, w0, #0xff
   11354:	b	11104 <Perl_re_exec_indentf@@Base+0x4f34>
   11358:	ldr	x0, [x24, #8]
   1135c:	cmp	x23, x0
   11360:	b.eq	113a0 <Perl_re_exec_indentf@@Base+0x51d0>  // b.none
   11364:	ldurb	w19, [x23, #-1]
   11368:	ldrb	w0, [x22, #1180]
   1136c:	cbz	w0, 113d0 <Perl_re_exec_indentf@@Base+0x5200>
   11370:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11374:	ldr	x0, [x0, #3880]
   11378:	ldr	w19, [x0, w19, sxtw #2]
   1137c:	and	w19, w19, #0x1
   11380:	tst	w20, #0x80000000
   11384:	b.ne	1952c <Perl_re_exec_indentf@@Base+0xd35c>  // b.any
   11388:	and	x1, x20, #0xff
   1138c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11390:	ldr	x0, [x0, #3880]
   11394:	ldr	w0, [x0, x1, lsl #2]
   11398:	and	w0, w0, #0x1
   1139c:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   113a0:	ldrb	w0, [x22, #1180]
   113a4:	cbz	w0, 113bc <Perl_re_exec_indentf@@Base+0x51ec>
   113a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   113ac:	ldr	x0, [x0, #3880]
   113b0:	ldr	w19, [x0, #40]
   113b4:	and	w19, w19, #0x1
   113b8:	b	11380 <Perl_re_exec_indentf@@Base+0x51b0>
   113bc:	bl	54d0 <__ctype_b_loc@plt>
   113c0:	ldr	x0, [x0]
   113c4:	ldrh	w19, [x0, #20]
   113c8:	ubfx	x19, x19, #3, #1
   113cc:	b	113ec <Perl_re_exec_indentf@@Base+0x521c>
   113d0:	bl	54d0 <__ctype_b_loc@plt>
   113d4:	and	x1, x19, #0xff
   113d8:	ldr	x0, [x0]
   113dc:	ldrh	w0, [x0, x1, lsl #1]
   113e0:	ubfx	x0, x0, #3, #1
   113e4:	cmp	w19, #0x5f
   113e8:	csinc	w19, w0, wzr, ne  // ne = any
   113ec:	tst	w20, #0x80000000
   113f0:	b.ne	19540 <Perl_re_exec_indentf@@Base+0xd370>  // b.any
   113f4:	bl	54d0 <__ctype_b_loc@plt>
   113f8:	and	w1, w20, #0xff
   113fc:	and	x2, x20, #0xff
   11400:	ldr	x0, [x0]
   11404:	ldrh	w0, [x0, x2, lsl #1]
   11408:	ubfx	x0, x0, #3, #1
   1140c:	cmp	w1, #0x5f
   11410:	csinc	w0, w0, wzr, ne  // ne = any
   11414:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   11418:	mov	w19, #0x1                   	// #1
   1141c:	mov	w21, w19
   11420:	b	19954 <Perl_re_exec_indentf@@Base+0xd784>
   11424:	mov	w19, #0x0                   	// #0
   11428:	mov	w20, #0xfffffff6            	// #-10
   1142c:	mov	w21, #0x1                   	// #1
   11430:	b	19954 <Perl_re_exec_indentf@@Base+0xd784>
   11434:	mov	w21, #0x1                   	// #1
   11438:	b	1995c <Perl_re_exec_indentf@@Base+0xd78c>
   1143c:	mov	w20, #0xfffffff6            	// #-10
   11440:	mov	w21, #0x1                   	// #1
   11444:	b	1995c <Perl_re_exec_indentf@@Base+0xd78c>
   11448:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1144c:	ldr	x0, [x0, #3880]
   11450:	ldr	w1, [x0, #40]
   11454:	mov	w0, #0x4001                	// #16385
   11458:	bics	wzr, w0, w1
   1145c:	cset	w1, eq  // eq = none
   11460:	b	19984 <Perl_re_exec_indentf@@Base+0xd7b4>
   11464:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11468:	ldr	x0, [x0, #3880]
   1146c:	ldr	w2, [x0, #40]
   11470:	mov	w0, #0x4001                	// #16385
   11474:	bics	wzr, w0, w2
   11478:	cset	w0, eq  // eq = none
   1147c:	b	199a8 <Perl_re_exec_indentf@@Base+0xd7d8>
   11480:	mov	w19, #0x1                   	// #1
   11484:	mov	w21, #0x0                   	// #0
   11488:	b	10edc <Perl_re_exec_indentf@@Base+0x4d0c>
   1148c:	mov	w19, #0x0                   	// #0
   11490:	mov	w20, #0xfffffff6            	// #-10
   11494:	mov	w21, #0x0                   	// #0
   11498:	b	10edc <Perl_re_exec_indentf@@Base+0x4d0c>
   1149c:	cbz	w0, 11624 <Perl_re_exec_indentf@@Base+0x5454>
   114a0:	ldr	x2, [x24, #8]
   114a4:	cmp	x23, x2
   114a8:	lsr	w0, w20, #31
   114ac:	csinc	w0, w0, wzr, ne  // ne = any
   114b0:	str	w0, [sp, #316]
   114b4:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   114b8:	mov	x1, #0xffffffffffffffff    	// #-1
   114bc:	mov	x0, x23
   114c0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   114c4:	mov	x19, x0
   114c8:	ldr	x20, [x24, #16]
   114cc:	cmp	x0, x20
   114d0:	b.cs	1180c <Perl_re_exec_indentf@@Base+0x563c>  // b.hs, b.nlast
   114d4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   114d8:	ldr	x0, [x0, #3720]
   114dc:	ldr	x0, [x0]
   114e0:	str	x0, [sp, #192]
   114e4:	mov	w1, #0x2c                  	// #44
   114e8:	mov	x0, x22
   114ec:	bl	52a0 <Perl_ckwarn_d@plt>
   114f0:	ands	w0, w0, #0xff
   114f4:	mov	w0, #0x9e                  	// #158
   114f8:	csel	w3, w0, wzr, eq  // eq = none
   114fc:	cbz	x19, 11830 <Perl_re_exec_indentf@@Base+0x5660>
   11500:	mov	x7, x19
   11504:	mov	x1, #0x0                   	// #0
   11508:	mov	x0, #0x0                   	// #0
   1150c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   11510:	ldr	x9, [x2, #3824]
   11514:	mov	w8, #0xff                  	// #255
   11518:	mov	x6, x9
   1151c:	ldrb	w5, [x7]
   11520:	ldrb	w2, [x9, w5, sxtw]
   11524:	and	x4, x2, #0xff
   11528:	asr	w2, w8, w2
   1152c:	and	w2, w2, w5
   11530:	sxtw	x2, w2
   11534:	bfi	x5, x1, #6, #58
   11538:	cmp	x0, #0x0
   1153c:	csel	x1, x5, x2, ne  // ne = any
   11540:	add	x2, x6, x4
   11544:	add	x0, x2, x0
   11548:	ldrb	w0, [x0, #256]
   1154c:	cbnz	x0, 11854 <Perl_re_exec_indentf@@Base+0x5684>
   11550:	ldr	x0, [sp, #192]
   11554:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11558:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
   1155c:	add	x1, x1, #0x398
   11560:	ldr	w0, [x1, x0, lsl #2]
   11564:	str	w0, [sp, #192]
   11568:	ldr	x19, [x24, #16]
   1156c:	cmp	x23, x19
   11570:	b.cs	11884 <Perl_re_exec_indentf@@Base+0x56b4>  // b.hs, b.nlast
   11574:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11578:	ldr	x0, [x0, #3720]
   1157c:	ldr	x20, [x0]
   11580:	mov	w1, #0x2c                  	// #44
   11584:	mov	x0, x22
   11588:	bl	52a0 <Perl_ckwarn_d@plt>
   1158c:	ands	w0, w0, #0xff
   11590:	mov	w0, #0x9e                  	// #158
   11594:	csel	w3, w0, wzr, eq  // eq = none
   11598:	cbz	x23, 118a8 <Perl_re_exec_indentf@@Base+0x56d8>
   1159c:	mov	x6, x23
   115a0:	mov	x1, #0x0                   	// #0
   115a4:	mov	x2, #0x0                   	// #0
   115a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   115ac:	ldr	x9, [x0, #3824]
   115b0:	mov	w8, #0xff                  	// #255
   115b4:	mov	x5, x9
   115b8:	ldrb	w4, [x6]
   115bc:	ldrb	w0, [x9, w4, sxtw]
   115c0:	and	x7, x0, #0xff
   115c4:	asr	w0, w8, w0
   115c8:	and	w0, w0, w4
   115cc:	sxtw	x0, w0
   115d0:	bfi	x4, x1, #6, #58
   115d4:	cmp	x2, #0x0
   115d8:	csel	x1, x4, x0, ne  // ne = any
   115dc:	add	x0, x5, x2
   115e0:	add	x0, x0, x7
   115e4:	ldrb	w2, [x0, #256]
   115e8:	cbnz	x2, 118cc <Perl_re_exec_indentf@@Base+0x56fc>
   115ec:	mov	x0, x20
   115f0:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   115f4:	ldrb	w5, [sp, #168]
   115f8:	mov	x4, x23
   115fc:	ldr	x3, [x24, #8]
   11600:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
   11604:	add	x1, x1, #0x398
   11608:	ldr	w2, [x1, x0, lsl #2]
   1160c:	ldr	w1, [sp, #192]
   11610:	mov	x0, x22
   11614:	bl	9e90 <Perl__inverse_folds@plt+0x4490>
   11618:	and	w0, w0, #0xff
   1161c:	str	w0, [sp, #316]
   11620:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11624:	ldr	x2, [x24, #8]
   11628:	cmp	x23, x2
   1162c:	b.eq	11764 <Perl_re_exec_indentf@@Base+0x5594>  // b.none
   11630:	ldr	x20, [x24, #16]
   11634:	mov	x1, #0xffffffffffffffff    	// #-1
   11638:	mov	x0, x23
   1163c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   11640:	cmp	x20, x0
   11644:	b.ls	116c0 <Perl_re_exec_indentf@@Base+0x54f0>  // b.plast
   11648:	ldrb	w1, [x0]
   1164c:	tbnz	w1, #7, 116e4 <Perl_re_exec_indentf@@Base+0x5514>
   11650:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11654:	ldr	x0, [x0, #3880]
   11658:	ldr	w0, [x0, w1, sxtw #2]
   1165c:	and	w0, w0, #0x1
   11660:	cmp	w0, #0x0
   11664:	cset	w20, ne  // ne = any
   11668:	cbz	w19, 11698 <Perl_re_exec_indentf@@Base+0x54c8>
   1166c:	ldr	x2, [x24, #16]
   11670:	cmp	x23, x2
   11674:	b.cs	1176c <Perl_re_exec_indentf@@Base+0x559c>  // b.hs, b.nlast
   11678:	ldrb	w0, [x23]
   1167c:	tbnz	w0, #7, 11790 <Perl_re_exec_indentf@@Base+0x55c0>
   11680:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   11684:	ldr	x1, [x1, #3880]
   11688:	ldr	w0, [x1, w0, sxtw #2]
   1168c:	and	w0, w0, #0x1
   11690:	cmp	w0, #0x0
   11694:	cset	w19, ne  // ne = any
   11698:	cmp	w20, w19
   1169c:	cset	w0, ne  // ne = any
   116a0:	str	w0, [sp, #316]
   116a4:	ldr	w0, [sp, #316]
   116a8:	eor	w0, w0, #0x1
   116ac:	cmp	w0, w21
   116b0:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   116b4:	mov	w26, w27
   116b8:	mov	x27, x24
   116bc:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   116c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   116c4:	add	x3, x3, #0x330
   116c8:	add	x3, x3, #0xc80
   116cc:	mov	w2, #0x19b1                	// #6577
   116d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   116d4:	add	x1, x1, #0xcb0
   116d8:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   116dc:	add	x0, x0, #0x568
   116e0:	bl	58e0 <__assert_fail@plt>
   116e4:	and	w2, w1, #0xfe
   116e8:	cmp	w2, #0xc2
   116ec:	b.ne	11748 <Perl_re_exec_indentf@@Base+0x5578>  // b.any
   116f0:	sub	x2, x20, x0
   116f4:	cmp	x2, #0x1
   116f8:	b.le	11728 <Perl_re_exec_indentf@@Base+0x5558>
   116fc:	ldrb	w2, [x0, #1]
   11700:	and	w3, w2, #0xc0
   11704:	cmp	w3, #0x80
   11708:	b.ne	11728 <Perl_re_exec_indentf@@Base+0x5558>  // b.any
   1170c:	bfi	w2, w1, #6, #26
   11710:	and	x0, x2, #0xff
   11714:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   11718:	ldr	x1, [x1, #3880]
   1171c:	ldr	w0, [x1, x0, lsl #2]
   11720:	and	w0, w0, #0x1
   11724:	b	11660 <Perl_re_exec_indentf@@Base+0x5490>
   11728:	mov	w4, #0x1                   	// #1
   1172c:	mov	w3, #0x0                   	// #0
   11730:	mov	x2, x20
   11734:	mov	x1, x0
   11738:	mov	x0, x22
   1173c:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   11740:	mov	w20, #0x0                   	// #0
   11744:	b	11668 <Perl_re_exec_indentf@@Base+0x5498>
   11748:	mov	x3, x20
   1174c:	mov	x2, x0
   11750:	mov	w1, #0x0                   	// #0
   11754:	mov	x0, x22
   11758:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1175c:	and	w0, w0, #0xff
   11760:	b	11660 <Perl_re_exec_indentf@@Base+0x5490>
   11764:	mov	w20, #0x0                   	// #0
   11768:	b	11668 <Perl_re_exec_indentf@@Base+0x5498>
   1176c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11770:	add	x3, x3, #0x330
   11774:	add	x3, x3, #0xc80
   11778:	mov	w2, #0x19b8                	// #6584
   1177c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11780:	add	x1, x1, #0xcb0
   11784:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11788:	add	x0, x0, #0x5c0
   1178c:	bl	58e0 <__assert_fail@plt>
   11790:	and	w1, w0, #0xfe
   11794:	cmp	w1, #0xc2
   11798:	b.ne	117f0 <Perl_re_exec_indentf@@Base+0x5620>  // b.any
   1179c:	sub	x1, x2, x23
   117a0:	cmp	x1, #0x1
   117a4:	b.le	117d4 <Perl_re_exec_indentf@@Base+0x5604>
   117a8:	ldrb	w1, [x23, #1]
   117ac:	and	w3, w1, #0xc0
   117b0:	cmp	w3, #0x80
   117b4:	b.ne	117d4 <Perl_re_exec_indentf@@Base+0x5604>  // b.any
   117b8:	bfi	w1, w0, #6, #26
   117bc:	and	x0, x1, #0xff
   117c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   117c4:	ldr	x1, [x1, #3880]
   117c8:	ldr	w0, [x1, x0, lsl #2]
   117cc:	and	w0, w0, #0x1
   117d0:	b	11690 <Perl_re_exec_indentf@@Base+0x54c0>
   117d4:	mov	w4, #0x1                   	// #1
   117d8:	mov	w3, #0x0                   	// #0
   117dc:	mov	x1, x23
   117e0:	mov	x0, x22
   117e4:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   117e8:	mov	w19, #0x0                   	// #0
   117ec:	b	11698 <Perl_re_exec_indentf@@Base+0x54c8>
   117f0:	mov	x3, x2
   117f4:	mov	x2, x23
   117f8:	mov	w1, #0x0                   	// #0
   117fc:	mov	x0, x22
   11800:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   11804:	and	w0, w0, #0xff
   11808:	b	11690 <Perl_re_exec_indentf@@Base+0x54c0>
   1180c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11810:	add	x3, x3, #0x330
   11814:	add	x3, x3, #0xc80
   11818:	mov	w2, #0x19c5                	// #6597
   1181c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11820:	add	x1, x1, #0xcb0
   11824:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11828:	add	x0, x0, #0x5f0
   1182c:	bl	58e0 <__assert_fail@plt>
   11830:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11834:	add	x3, x3, #0x330
   11838:	add	x3, x3, #0xc48
   1183c:	mov	w2, #0x710                 	// #1808
   11840:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11844:	add	x1, x1, #0xc80
   11848:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1184c:	add	x0, x0, #0xce8
   11850:	bl	58e0 <__assert_fail@plt>
   11854:	add	x7, x7, #0x1
   11858:	cmp	x0, #0x1
   1185c:	ccmp	x20, x7, #0x0, ne  // ne = any
   11860:	b.hi	1151c <Perl_re_exec_indentf@@Base+0x534c>  // b.pmore
   11864:	mov	x5, #0x0                   	// #0
   11868:	mov	x4, #0x0                   	// #0
   1186c:	mov	x2, #0x0                   	// #0
   11870:	sub	x1, x20, x19
   11874:	mov	x0, x19
   11878:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1187c:	mov	x1, x0
   11880:	b	11550 <Perl_re_exec_indentf@@Base+0x5380>
   11884:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11888:	add	x3, x3, #0x330
   1188c:	add	x3, x3, #0xc80
   11890:	mov	w2, #0x19ca                	// #6602
   11894:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11898:	add	x1, x1, #0xcb0
   1189c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   118a0:	add	x0, x0, #0x640
   118a4:	bl	58e0 <__assert_fail@plt>
   118a8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   118ac:	add	x3, x3, #0x330
   118b0:	add	x3, x3, #0xc48
   118b4:	mov	w2, #0x710                 	// #1808
   118b8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   118bc:	add	x1, x1, #0xc80
   118c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   118c4:	add	x0, x0, #0xce8
   118c8:	bl	58e0 <__assert_fail@plt>
   118cc:	add	x6, x6, #0x1
   118d0:	cmp	x19, x6
   118d4:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
   118d8:	b.ne	115b8 <Perl_re_exec_indentf@@Base+0x53e8>  // b.any
   118dc:	mov	x5, #0x0                   	// #0
   118e0:	mov	x4, #0x0                   	// #0
   118e4:	mov	x2, #0x0                   	// #0
   118e8:	sub	x1, x19, x23
   118ec:	mov	x0, x23
   118f0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   118f4:	mov	x1, x0
   118f8:	b	115ec <Perl_re_exec_indentf@@Base+0x541c>
   118fc:	ldr	x2, [x24, #8]
   11900:	cmp	x23, x2
   11904:	b.eq	120f8 <Perl_re_exec_indentf@@Base+0x5f28>  // b.none
   11908:	mov	w0, #0x1                   	// #1
   1190c:	str	w0, [sp, #316]
   11910:	tbnz	w20, #31, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11914:	mov	x1, #0xffffffffffffffff    	// #-1
   11918:	mov	x0, x23
   1191c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   11920:	mov	x19, x0
   11924:	ldr	x20, [x24, #16]
   11928:	cmp	x0, x20
   1192c:	b.cs	11a84 <Perl_re_exec_indentf@@Base+0x58b4>  // b.hs, b.nlast
   11930:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11934:	ldr	x0, [x0, #3992]
   11938:	ldr	x0, [x0]
   1193c:	str	x0, [sp, #192]
   11940:	mov	w1, #0x2c                  	// #44
   11944:	mov	x0, x22
   11948:	bl	52a0 <Perl_ckwarn_d@plt>
   1194c:	ands	w0, w0, #0xff
   11950:	mov	w0, #0x9e                  	// #158
   11954:	csel	w3, w0, wzr, eq  // eq = none
   11958:	cbz	x19, 11aa8 <Perl_re_exec_indentf@@Base+0x58d8>
   1195c:	mov	x7, x19
   11960:	mov	x1, #0x0                   	// #0
   11964:	mov	x0, #0x0                   	// #0
   11968:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1196c:	ldr	x9, [x2, #3824]
   11970:	mov	w8, #0xff                  	// #255
   11974:	mov	x6, x9
   11978:	ldrb	w5, [x7]
   1197c:	ldrb	w2, [x9, w5, sxtw]
   11980:	and	x4, x2, #0xff
   11984:	asr	w2, w8, w2
   11988:	and	w2, w2, w5
   1198c:	sxtw	x2, w2
   11990:	bfi	x5, x1, #6, #58
   11994:	cmp	x0, #0x0
   11998:	csel	x1, x5, x2, ne  // ne = any
   1199c:	add	x2, x6, x4
   119a0:	add	x0, x2, x0
   119a4:	ldrb	w0, [x0, #256]
   119a8:	cbnz	x0, 11acc <Perl_re_exec_indentf@@Base+0x58fc>
   119ac:	ldr	x0, [sp, #192]
   119b0:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   119b4:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
   119b8:	add	x1, x1, #0xe48
   119bc:	ldr	w0, [x1, x0, lsl #2]
   119c0:	str	w0, [sp, #192]
   119c4:	ldr	x19, [x24, #16]
   119c8:	cmp	x23, x19
   119cc:	b.cs	11afc <Perl_re_exec_indentf@@Base+0x592c>  // b.hs, b.nlast
   119d0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   119d4:	ldr	x0, [x0, #3992]
   119d8:	ldr	x20, [x0]
   119dc:	mov	w1, #0x2c                  	// #44
   119e0:	mov	x0, x22
   119e4:	bl	52a0 <Perl_ckwarn_d@plt>
   119e8:	ands	w0, w0, #0xff
   119ec:	mov	w0, #0x9e                  	// #158
   119f0:	csel	w3, w0, wzr, eq  // eq = none
   119f4:	cbz	x23, 11b20 <Perl_re_exec_indentf@@Base+0x5950>
   119f8:	mov	x7, x23
   119fc:	mov	x1, #0x0                   	// #0
   11a00:	mov	x0, #0x0                   	// #0
   11a04:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   11a08:	ldr	x9, [x2, #3824]
   11a0c:	mov	w8, #0xff                  	// #255
   11a10:	mov	x6, x9
   11a14:	ldrb	w5, [x7]
   11a18:	ldrb	w2, [x9, w5, sxtw]
   11a1c:	and	x4, x2, #0xff
   11a20:	asr	w2, w8, w2
   11a24:	and	w2, w2, w5
   11a28:	sxtw	x2, w2
   11a2c:	bfi	x5, x1, #6, #58
   11a30:	cmp	x0, #0x0
   11a34:	csel	x1, x5, x2, ne  // ne = any
   11a38:	add	x2, x6, x4
   11a3c:	add	x0, x2, x0
   11a40:	ldrb	w0, [x0, #256]
   11a44:	cbnz	x0, 11b44 <Perl_re_exec_indentf@@Base+0x5974>
   11a48:	mov	x0, x20
   11a4c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11a50:	ldrb	w6, [sp, #168]
   11a54:	ldr	x5, [x24, #16]
   11a58:	mov	x4, x23
   11a5c:	ldr	x3, [x24, #8]
   11a60:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
   11a64:	add	x1, x1, #0xe48
   11a68:	ldr	w2, [x1, x0, lsl #2]
   11a6c:	ldr	w1, [sp, #192]
   11a70:	mov	x0, x22
   11a74:	bl	9704 <Perl__inverse_folds@plt+0x3d04>
   11a78:	and	w0, w0, #0xff
   11a7c:	str	w0, [sp, #316]
   11a80:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11a84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11a88:	add	x3, x3, #0x330
   11a8c:	add	x3, x3, #0xc80
   11a90:	mov	w2, #0x19da                	// #6618
   11a94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11a98:	add	x1, x1, #0xcb0
   11a9c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11aa0:	add	x0, x0, #0x5f0
   11aa4:	bl	58e0 <__assert_fail@plt>
   11aa8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11aac:	add	x3, x3, #0x330
   11ab0:	add	x3, x3, #0xc48
   11ab4:	mov	w2, #0x710                 	// #1808
   11ab8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11abc:	add	x1, x1, #0xc80
   11ac0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11ac4:	add	x0, x0, #0xce8
   11ac8:	bl	58e0 <__assert_fail@plt>
   11acc:	add	x7, x7, #0x1
   11ad0:	cmp	x0, #0x1
   11ad4:	ccmp	x20, x7, #0x0, ne  // ne = any
   11ad8:	b.hi	11978 <Perl_re_exec_indentf@@Base+0x57a8>  // b.pmore
   11adc:	mov	x5, #0x0                   	// #0
   11ae0:	mov	x4, #0x0                   	// #0
   11ae4:	mov	x2, #0x0                   	// #0
   11ae8:	sub	x1, x20, x19
   11aec:	mov	x0, x19
   11af0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11af4:	mov	x1, x0
   11af8:	b	119ac <Perl_re_exec_indentf@@Base+0x57dc>
   11afc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11b00:	add	x3, x3, #0x330
   11b04:	add	x3, x3, #0xc80
   11b08:	mov	w2, #0x19df                	// #6623
   11b0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11b10:	add	x1, x1, #0xcb0
   11b14:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11b18:	add	x0, x0, #0x640
   11b1c:	bl	58e0 <__assert_fail@plt>
   11b20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11b24:	add	x3, x3, #0x330
   11b28:	add	x3, x3, #0xc48
   11b2c:	mov	w2, #0x710                 	// #1808
   11b30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11b34:	add	x1, x1, #0xc80
   11b38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11b3c:	add	x0, x0, #0xce8
   11b40:	bl	58e0 <__assert_fail@plt>
   11b44:	add	x7, x7, #0x1
   11b48:	cmp	x19, x7
   11b4c:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   11b50:	b.ne	11a14 <Perl_re_exec_indentf@@Base+0x5844>  // b.any
   11b54:	mov	x5, #0x0                   	// #0
   11b58:	mov	x4, #0x0                   	// #0
   11b5c:	mov	x2, #0x0                   	// #0
   11b60:	sub	x1, x19, x23
   11b64:	mov	x0, x23
   11b68:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11b6c:	mov	x1, x0
   11b70:	b	11a48 <Perl_re_exec_indentf@@Base+0x5878>
   11b74:	ldr	x2, [x24, #8]
   11b78:	cmp	x23, x2
   11b7c:	cset	w0, eq  // eq = none
   11b80:	orr	w0, w0, w20, lsr #31
   11b84:	str	w0, [sp, #316]
   11b88:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11b8c:	mov	x1, #0xffffffffffffffff    	// #-1
   11b90:	mov	x0, x23
   11b94:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   11b98:	mov	x19, x0
   11b9c:	ldr	x20, [x24, #16]
   11ba0:	cmp	x0, x20
   11ba4:	b.cs	11cfc <Perl_re_exec_indentf@@Base+0x5b2c>  // b.hs, b.nlast
   11ba8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11bac:	ldr	x0, [x0, #3792]
   11bb0:	ldr	x0, [x0]
   11bb4:	str	x0, [sp, #192]
   11bb8:	mov	w1, #0x2c                  	// #44
   11bbc:	mov	x0, x22
   11bc0:	bl	52a0 <Perl_ckwarn_d@plt>
   11bc4:	ands	w0, w0, #0xff
   11bc8:	mov	w0, #0x9e                  	// #158
   11bcc:	csel	w3, w0, wzr, eq  // eq = none
   11bd0:	cbz	x19, 11d20 <Perl_re_exec_indentf@@Base+0x5b50>
   11bd4:	mov	x7, x19
   11bd8:	mov	x1, #0x0                   	// #0
   11bdc:	mov	x0, #0x0                   	// #0
   11be0:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   11be4:	ldr	x9, [x2, #3824]
   11be8:	mov	w8, #0xff                  	// #255
   11bec:	mov	x6, x9
   11bf0:	ldrb	w5, [x7]
   11bf4:	ldrb	w2, [x9, w5, sxtw]
   11bf8:	and	x4, x2, #0xff
   11bfc:	asr	w2, w8, w2
   11c00:	and	w2, w2, w5
   11c04:	sxtw	x2, w2
   11c08:	bfi	x5, x1, #6, #58
   11c0c:	cmp	x0, #0x0
   11c10:	csel	x1, x5, x2, ne  // ne = any
   11c14:	add	x2, x6, x4
   11c18:	add	x0, x2, x0
   11c1c:	ldrb	w0, [x0, #256]
   11c20:	cbnz	x0, 11d44 <Perl_re_exec_indentf@@Base+0x5b74>
   11c24:	ldr	x0, [sp, #192]
   11c28:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11c2c:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
   11c30:	add	x1, x1, #0xde0
   11c34:	ldr	w0, [x1, x0, lsl #2]
   11c38:	str	w0, [sp, #192]
   11c3c:	ldr	x19, [x24, #16]
   11c40:	cmp	x23, x19
   11c44:	b.cs	11d74 <Perl_re_exec_indentf@@Base+0x5ba4>  // b.hs, b.nlast
   11c48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11c4c:	ldr	x0, [x0, #3792]
   11c50:	ldr	x20, [x0]
   11c54:	mov	w1, #0x2c                  	// #44
   11c58:	mov	x0, x22
   11c5c:	bl	52a0 <Perl_ckwarn_d@plt>
   11c60:	ands	w0, w0, #0xff
   11c64:	mov	w0, #0x9e                  	// #158
   11c68:	csel	w3, w0, wzr, eq  // eq = none
   11c6c:	cbz	x23, 11d98 <Perl_re_exec_indentf@@Base+0x5bc8>
   11c70:	mov	x7, x23
   11c74:	mov	x1, #0x0                   	// #0
   11c78:	mov	x0, #0x0                   	// #0
   11c7c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   11c80:	ldr	x9, [x2, #3824]
   11c84:	mov	w8, #0xff                  	// #255
   11c88:	mov	x6, x9
   11c8c:	ldrb	w5, [x7]
   11c90:	ldrb	w2, [x9, w5, sxtw]
   11c94:	and	x4, x2, #0xff
   11c98:	asr	w2, w8, w2
   11c9c:	and	w2, w2, w5
   11ca0:	sxtw	x2, w2
   11ca4:	bfi	x5, x1, #6, #58
   11ca8:	cmp	x0, #0x0
   11cac:	csel	x1, x5, x2, ne  // ne = any
   11cb0:	add	x2, x6, x4
   11cb4:	add	x0, x2, x0
   11cb8:	ldrb	w0, [x0, #256]
   11cbc:	cbnz	x0, 11dbc <Perl_re_exec_indentf@@Base+0x5bec>
   11cc0:	mov	x0, x20
   11cc4:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11cc8:	ldrb	w6, [sp, #168]
   11ccc:	ldr	x5, [x24, #16]
   11cd0:	mov	x4, x23
   11cd4:	ldr	x3, [x24, #8]
   11cd8:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
   11cdc:	add	x1, x1, #0xde0
   11ce0:	ldr	w2, [x1, x0, lsl #2]
   11ce4:	ldr	w1, [sp, #192]
   11ce8:	mov	x0, x22
   11cec:	bl	7e38 <Perl__inverse_folds@plt+0x2438>
   11cf0:	and	w0, w0, #0xff
   11cf4:	str	w0, [sp, #316]
   11cf8:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11cfc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11d00:	add	x3, x3, #0x330
   11d04:	add	x3, x3, #0xc80
   11d08:	mov	w2, #0x19ed                	// #6637
   11d0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11d10:	add	x1, x1, #0xcb0
   11d14:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11d18:	add	x0, x0, #0x5f0
   11d1c:	bl	58e0 <__assert_fail@plt>
   11d20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11d24:	add	x3, x3, #0x330
   11d28:	add	x3, x3, #0xc48
   11d2c:	mov	w2, #0x710                 	// #1808
   11d30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11d34:	add	x1, x1, #0xc80
   11d38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11d3c:	add	x0, x0, #0xce8
   11d40:	bl	58e0 <__assert_fail@plt>
   11d44:	add	x7, x7, #0x1
   11d48:	cmp	x20, x7
   11d4c:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   11d50:	b.ne	11bf0 <Perl_re_exec_indentf@@Base+0x5a20>  // b.any
   11d54:	mov	x5, #0x0                   	// #0
   11d58:	mov	x4, #0x0                   	// #0
   11d5c:	mov	x2, #0x0                   	// #0
   11d60:	sub	x1, x20, x19
   11d64:	mov	x0, x19
   11d68:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11d6c:	mov	x1, x0
   11d70:	b	11c24 <Perl_re_exec_indentf@@Base+0x5a54>
   11d74:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11d78:	add	x3, x3, #0x330
   11d7c:	add	x3, x3, #0xc80
   11d80:	mov	w2, #0x19f2                	// #6642
   11d84:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11d88:	add	x1, x1, #0xcb0
   11d8c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11d90:	add	x0, x0, #0x640
   11d94:	bl	58e0 <__assert_fail@plt>
   11d98:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11d9c:	add	x3, x3, #0x330
   11da0:	add	x3, x3, #0xc48
   11da4:	mov	w2, #0x710                 	// #1808
   11da8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11dac:	add	x1, x1, #0xc80
   11db0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11db4:	add	x0, x0, #0xce8
   11db8:	bl	58e0 <__assert_fail@plt>
   11dbc:	add	x7, x7, #0x1
   11dc0:	cmp	x0, #0x1
   11dc4:	ccmp	x19, x7, #0x0, ne  // ne = any
   11dc8:	b.hi	11c8c <Perl_re_exec_indentf@@Base+0x5abc>  // b.pmore
   11dcc:	mov	x5, #0x0                   	// #0
   11dd0:	mov	x4, #0x0                   	// #0
   11dd4:	mov	x2, #0x0                   	// #0
   11dd8:	sub	x1, x19, x23
   11ddc:	mov	x0, x23
   11de0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11de4:	mov	x1, x0
   11de8:	b	11cc0 <Perl_re_exec_indentf@@Base+0x5af0>
   11dec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11df0:	add	x3, x3, #0x330
   11df4:	add	x3, x3, #0xc80
   11df8:	mov	w2, #0x1a01                	// #6657
   11dfc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11e00:	add	x1, x1, #0xcb0
   11e04:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11e08:	add	x0, x0, #0x5f0
   11e0c:	bl	58e0 <__assert_fail@plt>
   11e10:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11e14:	add	x3, x3, #0x330
   11e18:	add	x3, x3, #0xc48
   11e1c:	mov	w2, #0x710                 	// #1808
   11e20:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11e24:	add	x1, x1, #0xc80
   11e28:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11e2c:	add	x0, x0, #0xce8
   11e30:	bl	58e0 <__assert_fail@plt>
   11e34:	add	x6, x6, #0x1
   11e38:	cmp	x2, #0x1
   11e3c:	ccmp	x20, x6, #0x0, ne  // ne = any
   11e40:	b.hi	10f90 <Perl_re_exec_indentf@@Base+0x4dc0>  // b.pmore
   11e44:	mov	x5, #0x0                   	// #0
   11e48:	mov	x4, #0x0                   	// #0
   11e4c:	mov	x2, #0x0                   	// #0
   11e50:	sub	x1, x20, x19
   11e54:	mov	x0, x19
   11e58:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11e5c:	mov	x1, x0
   11e60:	b	10fc4 <Perl_re_exec_indentf@@Base+0x4df4>
   11e64:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11e68:	add	x3, x3, #0x330
   11e6c:	add	x3, x3, #0xc80
   11e70:	mov	w2, #0x1a06                	// #6662
   11e74:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11e78:	add	x1, x1, #0xcb0
   11e7c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   11e80:	add	x0, x0, #0x640
   11e84:	bl	58e0 <__assert_fail@plt>
   11e88:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   11e8c:	add	x3, x3, #0x330
   11e90:	add	x3, x3, #0xc48
   11e94:	mov	w2, #0x710                 	// #1808
   11e98:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   11e9c:	add	x1, x1, #0xc80
   11ea0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   11ea4:	add	x0, x0, #0xce8
   11ea8:	bl	58e0 <__assert_fail@plt>
   11eac:	add	x7, x7, #0x1
   11eb0:	cmp	x19, x7
   11eb4:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   11eb8:	b.ne	1102c <Perl_re_exec_indentf@@Base+0x4e5c>  // b.any
   11ebc:	mov	x5, #0x0                   	// #0
   11ec0:	mov	x4, #0x0                   	// #0
   11ec4:	mov	x2, #0x0                   	// #0
   11ec8:	sub	x1, x19, x23
   11ecc:	mov	x0, x23
   11ed0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   11ed4:	mov	x1, x0
   11ed8:	b	11060 <Perl_re_exec_indentf@@Base+0x4e90>
   11edc:	ldrb	w0, [x26]
   11ee0:	cmp	w0, #0x2
   11ee4:	b.eq	12008 <Perl_re_exec_indentf@@Base+0x5e38>  // b.none
   11ee8:	b.ls	11f70 <Perl_re_exec_indentf@@Base+0x5da0>  // b.plast
   11eec:	cmp	w0, #0x3
   11ef0:	b.eq	12080 <Perl_re_exec_indentf@@Base+0x5eb0>  // b.none
   11ef4:	cmp	w0, #0x4
   11ef8:	b.ne	116a4 <Perl_re_exec_indentf@@Base+0x54d4>  // b.any
   11efc:	cmp	x23, x1
   11f00:	cset	w0, eq  // eq = none
   11f04:	orr	w0, w0, w20, lsr #31
   11f08:	str	w0, [sp, #316]
   11f0c:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11f10:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   11f14:	ldr	x20, [x20, #3952]
   11f18:	ldurb	w1, [x23, #-1]
   11f1c:	ldr	x0, [x20]
   11f20:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11f24:	adrp	x19, 6d000 <boot_re@@Base+0xb41c>
   11f28:	add	x19, x19, #0x100
   11f2c:	ldr	w0, [x19, x0, lsl #2]
   11f30:	str	w0, [sp, #192]
   11f34:	ldrb	w1, [x23]
   11f38:	ldr	x0, [x20]
   11f3c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   11f40:	mov	w7, #0x0                   	// #0
   11f44:	ldr	x6, [x24, #16]
   11f48:	mov	x5, x23
   11f4c:	ldr	x4, [x24, #8]
   11f50:	ldr	w3, [x19, x0, lsl #2]
   11f54:	ldr	w2, [sp, #192]
   11f58:	mov	w1, #0x16                  	// #22
   11f5c:	mov	x0, x22
   11f60:	bl	862c <Perl__inverse_folds@plt+0x2c2c>
   11f64:	and	w0, w0, #0xff
   11f68:	str	w0, [sp, #316]
   11f6c:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11f70:	cbz	w0, 11fa0 <Perl_re_exec_indentf@@Base+0x5dd0>
   11f74:	cmp	x23, x1
   11f78:	cset	w0, eq  // eq = none
   11f7c:	orr	w0, w0, w20, lsr #31
   11f80:	str	w0, [sp, #316]
   11f84:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11f88:	ldurb	w1, [x23, #-1]
   11f8c:	mov	w0, #0x1                   	// #1
   11f90:	cmp	w1, #0xd
   11f94:	b.eq	11ff8 <Perl_re_exec_indentf@@Base+0x5e28>  // b.none
   11f98:	str	w0, [sp, #316]
   11f9c:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11fa0:	mov	w0, #0x0                   	// #0
   11fa4:	cmp	x23, x1
   11fa8:	b.eq	11fc0 <Perl_re_exec_indentf@@Base+0x5df0>  // b.none
   11fac:	ldurb	w1, [x23, #-1]
   11fb0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   11fb4:	ldr	x0, [x0, #3880]
   11fb8:	ldr	w0, [x0, x1, lsl #2]
   11fbc:	and	w0, w0, #0x1
   11fc0:	mov	w1, #0x0                   	// #0
   11fc4:	cbz	w19, 11fe8 <Perl_re_exec_indentf@@Base+0x5e18>
   11fc8:	sxtw	x2, w20
   11fcc:	tst	x2, #0xffffffffffffff00
   11fd0:	b.ne	11fe8 <Perl_re_exec_indentf@@Base+0x5e18>  // b.any
   11fd4:	and	x2, x20, #0xff
   11fd8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   11fdc:	ldr	x1, [x1, #3880]
   11fe0:	ldr	w1, [x1, x2, lsl #2]
   11fe4:	and	w1, w1, #0x1
   11fe8:	cmp	w1, w0
   11fec:	cset	w0, ne  // ne = any
   11ff0:	str	w0, [sp, #316]
   11ff4:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   11ff8:	ldrb	w0, [x23]
   11ffc:	cmp	w0, #0xa
   12000:	cset	w0, ne  // ne = any
   12004:	b	11f98 <Perl_re_exec_indentf@@Base+0x5dc8>
   12008:	ldr	w0, [sp, #168]
   1200c:	str	w0, [sp, #316]
   12010:	cmp	x23, x1
   12014:	b.eq	116a4 <Perl_re_exec_indentf@@Base+0x54d4>  // b.none
   12018:	mov	w0, #0x1                   	// #1
   1201c:	str	w0, [sp, #316]
   12020:	tbnz	w20, #31, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   12024:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   12028:	ldr	x20, [x20, #3992]
   1202c:	ldurb	w1, [x23, #-1]
   12030:	ldr	x0, [x20]
   12034:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   12038:	adrp	x19, 71000 <boot_re@@Base+0xf41c>
   1203c:	add	x19, x19, #0xe48
   12040:	ldr	w0, [x19, x0, lsl #2]
   12044:	str	w0, [sp, #192]
   12048:	ldrb	w1, [x23]
   1204c:	ldr	x0, [x20]
   12050:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   12054:	mov	w6, #0x0                   	// #0
   12058:	ldr	x5, [x24, #16]
   1205c:	mov	x4, x23
   12060:	ldr	x3, [x24, #8]
   12064:	ldr	w2, [x19, x0, lsl #2]
   12068:	ldr	w1, [sp, #192]
   1206c:	mov	x0, x22
   12070:	bl	9704 <Perl__inverse_folds@plt+0x3d04>
   12074:	and	w0, w0, #0xff
   12078:	str	w0, [sp, #316]
   1207c:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   12080:	cmp	x23, x1
   12084:	cset	w0, eq  // eq = none
   12088:	orr	w0, w0, w20, lsr #31
   1208c:	str	w0, [sp, #316]
   12090:	cbnz	w0, 116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   12094:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   12098:	ldr	x20, [x20, #3792]
   1209c:	ldurb	w1, [x23, #-1]
   120a0:	ldr	x0, [x20]
   120a4:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   120a8:	adrp	x19, 6e000 <boot_re@@Base+0xc41c>
   120ac:	add	x19, x19, #0xde0
   120b0:	ldr	w0, [x19, x0, lsl #2]
   120b4:	str	w0, [sp, #192]
   120b8:	ldrb	w1, [x23]
   120bc:	ldr	x0, [x20]
   120c0:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   120c4:	mov	w6, #0x0                   	// #0
   120c8:	ldr	x5, [x24, #16]
   120cc:	mov	x4, x23
   120d0:	ldr	x3, [x24, #8]
   120d4:	ldr	w2, [x19, x0, lsl #2]
   120d8:	ldr	w1, [sp, #192]
   120dc:	mov	x0, x22
   120e0:	bl	7e38 <Perl__inverse_folds@plt+0x2438>
   120e4:	and	w0, w0, #0xff
   120e8:	str	w0, [sp, #316]
   120ec:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   120f0:	str	wzr, [sp, #316]
   120f4:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   120f8:	str	wzr, [sp, #316]
   120fc:	b	116a4 <Perl_re_exec_indentf@@Base+0x54d4>
   12100:	mov	w19, #0x1                   	// #1
   12104:	ldr	x0, [x22, #1440]
   12108:	cbnz	x0, 1214c <Perl_re_exec_indentf@@Base+0x5f7c>
   1210c:	ldrb	w0, [x26]
   12110:	and	w0, w0, #0xc
   12114:	cmp	w0, #0x8
   12118:	b.ne	12158 <Perl_re_exec_indentf@@Base+0x5f88>  // b.any
   1211c:	ldrb	w0, [x22, #1180]
   12120:	cbnz	w0, 12158 <Perl_re_exec_indentf@@Base+0x5f88>
   12124:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   12128:	add	x2, x2, #0x330
   1212c:	add	x2, x2, #0xc00
   12130:	mov	w1, #0x3f                  	// #63
   12134:	mov	x0, x22
   12138:	bl	5150 <Perl_ck_warner@plt>
   1213c:	b	12158 <Perl_re_exec_indentf@@Base+0x5f88>
   12140:	mov	w19, #0x0                   	// #0
   12144:	mov	w20, #0xfffffff6            	// #-10
   12148:	b	12104 <Perl_re_exec_indentf@@Base+0x5f34>
   1214c:	bl	5050 <Perl__warn_problematic_locale@plt>
   12150:	b	1210c <Perl_re_exec_indentf@@Base+0x5f3c>
   12154:	mov	w19, #0x1                   	// #1
   12158:	cmp	w20, #0x0
   1215c:	ldr	x0, [sp, #128]
   12160:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   12164:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   12168:	ldr	w0, [sp, #168]
   1216c:	cbz	w0, 12178 <Perl_re_exec_indentf@@Base+0x5fa8>
   12170:	ldrsb	w0, [x23]
   12174:	tbnz	w0, #31, 121bc <Perl_re_exec_indentf@@Base+0x5fec>
   12178:	ldrb	w0, [x26]
   1217c:	tst	w0, #0xffffffdf
   12180:	b.ne	121bc <Perl_re_exec_indentf@@Base+0x5fec>  // b.any
   12184:	ldrb	w0, [x23]
   12188:	ubfx	x1, x0, #3, #5
   1218c:	add	x1, x26, x1
   12190:	ldrb	w1, [x1, #8]
   12194:	and	w0, w0, #0x7
   12198:	lsr	w0, w1, w0
   1219c:	tbz	w0, #0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   121a0:	mov	w26, w27
   121a4:	mov	x27, x24
   121a8:	add	x23, x23, #0x1
   121ac:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   121b0:	mov	w19, #0x0                   	// #0
   121b4:	mov	w20, #0xfffffff6            	// #-10
   121b8:	b	12158 <Perl_re_exec_indentf@@Base+0x5f88>
   121bc:	ldrb	w5, [sp, #168]
   121c0:	ldr	x4, [sp, #128]
   121c4:	mov	x3, x23
   121c8:	mov	x2, x26
   121cc:	ldr	x1, [sp, #152]
   121d0:	mov	x0, x22
   121d4:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   121d8:	and	w0, w0, #0xff
   121dc:	cbnz	w0, f048 <Perl_re_exec_indentf@@Base+0x2e78>
   121e0:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   121e4:	mov	w20, #0xfffffff6            	// #-10
   121e8:	tbnz	w20, #31, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   121ec:	ldrb	w0, [x23]
   121f0:	ldrb	w1, [x26]
   121f4:	and	w0, w0, w1
   121f8:	ldr	w1, [x26, #4]
   121fc:	cmp	w1, w0, uxtb
   12200:	ldr	x0, [sp, #128]
   12204:	ccmp	x23, x0, #0x2, eq  // eq = none
   12208:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   1220c:	mov	w26, w27
   12210:	mov	x27, x24
   12214:	add	x23, x23, #0x1
   12218:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   1221c:	mov	w19, #0x1                   	// #1
   12220:	tbnz	w20, #31, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   12224:	ldrb	w0, [x23]
   12228:	ldrb	w1, [x26]
   1222c:	and	w0, w0, w1
   12230:	ldr	w1, [x26, #4]
   12234:	cmp	w1, w0, uxtb
   12238:	ldr	x0, [sp, #128]
   1223c:	ccmp	x23, x0, #0x2, ne  // ne = any
   12240:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   12244:	b	f048 <Perl_re_exec_indentf@@Base+0x2e78>
   12248:	mov	w19, #0x0                   	// #0
   1224c:	mov	w20, #0xfffffff6            	// #-10
   12250:	b	12220 <Perl_re_exec_indentf@@Base+0x6050>
   12254:	mov	w21, #0x1                   	// #1
   12258:	ldr	w0, [sp, #168]
   1225c:	eor	w0, w0, #0x1
   12260:	orr	w0, w0, w20, lsr #31
   12264:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   12268:	ldrb	w0, [x26]
   1226c:	cbz	w0, 1227c <Perl_re_exec_indentf@@Base+0x60ac>
   12270:	ldrb	w1, [x23]
   12274:	cmp	w1, w0
   12278:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   1227c:	mov	w5, #0x1                   	// #1
   12280:	ldr	x4, [sp, #128]
   12284:	mov	x3, x23
   12288:	mov	x2, x26
   1228c:	ldr	x1, [sp, #152]
   12290:	mov	x0, x22
   12294:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   12298:	and	w0, w0, #0xff
   1229c:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   122a0:	cbnz	w21, f054 <Perl_re_exec_indentf@@Base+0x2e84>
   122a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   122a8:	add	x3, x3, #0x330
   122ac:	add	x3, x3, #0xc80
   122b0:	mov	w2, #0x233d                	// #9021
   122b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   122b8:	add	x1, x1, #0xcb0
   122bc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   122c0:	add	x0, x0, #0x890
   122c4:	bl	58e0 <__assert_fail@plt>
   122c8:	mov	w21, #0x0                   	// #0
   122cc:	mov	w20, #0xfffffff6            	// #-10
   122d0:	b	12258 <Perl_re_exec_indentf@@Base+0x6088>
   122d4:	mov	w21, #0x1                   	// #1
   122d8:	mov	w19, w21
   122dc:	b	19718 <Perl_re_exec_indentf@@Base+0xd548>
   122e0:	mov	w21, #0x0                   	// #0
   122e4:	mov	w20, #0xfffffff6            	// #-10
   122e8:	mov	w19, #0x1                   	// #1
   122ec:	b	19718 <Perl_re_exec_indentf@@Base+0xd548>
   122f0:	bl	5050 <Perl__warn_problematic_locale@plt>
   122f4:	b	19720 <Perl_re_exec_indentf@@Base+0xd550>
   122f8:	mov	w2, w20
   122fc:	ldrb	w1, [x26]
   12300:	mov	x0, x22
   12304:	bl	5350 <Perl_isFOO_lc@plt>
   12308:	cmp	w19, w0, uxtb
   1230c:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12310:	mov	w26, w27
   12314:	mov	x27, x24
   12318:	add	x23, x23, #0x1
   1231c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   12320:	ldr	x0, [x24, #16]
   12324:	sub	x0, x0, x23
   12328:	cmp	x0, #0x1
   1232c:	b.le	19758 <Perl_re_exec_indentf@@Base+0xd588>
   12330:	ldrb	w0, [x23, #1]
   12334:	and	w1, w0, #0xc0
   12338:	cmp	w1, #0x80
   1233c:	b.ne	19758 <Perl_re_exec_indentf@@Base+0xd588>  // b.any
   12340:	ldrb	w1, [x26]
   12344:	and	w2, w20, #0xfe
   12348:	cmp	w2, #0xc2
   1234c:	b.ne	123e4 <Perl_re_exec_indentf@@Base+0x6214>  // b.any
   12350:	lsl	w2, w20, #6
   12354:	ubfiz	w3, w20, #6, #5
   12358:	tst	x3, #0x700
   1235c:	b.ne	12408 <Perl_re_exec_indentf@@Base+0x6238>  // b.any
   12360:	and	w0, w0, #0x3f
   12364:	orr	w2, w0, w2
   12368:	mov	x0, x22
   1236c:	bl	5350 <Perl_isFOO_lc@plt>
   12370:	cmp	w19, w0, uxtb
   12374:	b.ne	122a0 <Perl_re_exec_indentf@@Base+0x60d0>  // b.any
   12378:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1237c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12380:	add	x3, x3, #0x330
   12384:	add	x3, x3, #0xc80
   12388:	mov	w2, #0x1aba                	// #6842
   1238c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12390:	add	x1, x1, #0xcb0
   12394:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   12398:	add	x0, x0, #0xaf8
   1239c:	bl	58e0 <__assert_fail@plt>
   123a0:	add	x5, x5, #0x1
   123a4:	cmp	x0, #0x1
   123a8:	ccmp	x21, x5, #0x0, ne  // ne = any
   123ac:	b.hi	197b4 <Perl_re_exec_indentf@@Base+0xd5e4>  // b.pmore
   123b0:	mov	x5, #0x0                   	// #0
   123b4:	mov	x4, #0x0                   	// #0
   123b8:	mov	x2, #0x0                   	// #0
   123bc:	sub	x1, x21, x23
   123c0:	mov	x0, x23
   123c4:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   123c8:	mov	x20, x0
   123cc:	b	197e8 <Perl_re_exec_indentf@@Base+0xd618>
   123d0:	mov	w2, #0x2                   	// #2
   123d4:	mov	x0, x22
   123d8:	bl	5080 <Perl_custom_op_get_field@plt>
   123dc:	mov	x4, x0
   123e0:	b	1981c <Perl_re_exec_indentf@@Base+0xd64c>
   123e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   123e8:	add	x3, x3, #0x330
   123ec:	add	x3, x3, #0xc80
   123f0:	mov	w2, #0x1ac2                	// #6850
   123f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   123f8:	add	x1, x1, #0xcb0
   123fc:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   12400:	add	x0, x0, #0x668
   12404:	bl	58e0 <__assert_fail@plt>
   12408:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1240c:	add	x3, x3, #0x330
   12410:	add	x3, x3, #0xc80
   12414:	mov	w2, #0x1ac2                	// #6850
   12418:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1241c:	add	x1, x1, #0xcb0
   12420:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   12424:	add	x0, x0, #0x7d8
   12428:	bl	58e0 <__assert_fail@plt>
   1242c:	mov	w19, #0x1                   	// #1
   12430:	b	1984c <Perl_re_exec_indentf@@Base+0xd67c>
   12434:	mov	w20, #0xfffffff6            	// #-10
   12438:	mov	w19, #0x1                   	// #1
   1243c:	b	1984c <Perl_re_exec_indentf@@Base+0xd67c>
   12440:	mov	w19, #0x1                   	// #1
   12444:	cmp	w20, #0x0
   12448:	ldr	x0, [sp, #128]
   1244c:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   12450:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   12454:	cmp	w20, #0x7f
   12458:	b.hi	f048 <Perl_re_exec_indentf@@Base+0x2e78>  // b.pmore
   1245c:	ldrb	w1, [x26]
   12460:	mov	w0, #0x1                   	// #1
   12464:	lsl	w0, w0, w1
   12468:	orr	w0, w0, #0x4000
   1246c:	and	x2, x20, #0xff
   12470:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   12474:	ldr	x1, [x1, #3880]
   12478:	ldr	w1, [x1, x2, lsl #2]
   1247c:	mov	w19, #0x1                   	// #1
   12480:	bics	wzr, w0, w1
   12484:	b.ne	19890 <Perl_re_exec_indentf@@Base+0xd6c0>  // b.any
   12488:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1248c:	mov	w19, #0x0                   	// #0
   12490:	mov	w20, #0xfffffff6            	// #-10
   12494:	b	12444 <Perl_re_exec_indentf@@Base+0x6274>
   12498:	mov	w19, #0x0                   	// #0
   1249c:	b	19854 <Perl_re_exec_indentf@@Base+0xd684>
   124a0:	mov	w20, #0xfffffff6            	// #-10
   124a4:	mov	w19, #0x0                   	// #0
   124a8:	b	19854 <Perl_re_exec_indentf@@Base+0xd684>
   124ac:	mov	w19, #0x1                   	// #1
   124b0:	b	196b4 <Perl_re_exec_indentf@@Base+0xd4e4>
   124b4:	mov	w20, #0xfffffff6            	// #-10
   124b8:	mov	w19, #0x1                   	// #1
   124bc:	b	196b4 <Perl_re_exec_indentf@@Base+0xd4e4>
   124c0:	ldrb	w0, [x23]
   124c4:	and	w0, w0, #0xfe
   124c8:	cmp	w0, #0xc2
   124cc:	b.eq	12514 <Perl_re_exec_indentf@@Base+0x6344>  // b.none
   124d0:	ldrb	w0, [x26]
   124d4:	cmp	w0, #0xc
   124d8:	b.eq	128dc <Perl_re_exec_indentf@@Base+0x670c>  // b.none
   124dc:	b.ls	125d0 <Perl_re_exec_indentf@@Base+0x6400>  // b.plast
   124e0:	cmp	w0, #0xe
   124e4:	b.ls	12970 <Perl_re_exec_indentf@@Base+0x67a0>  // b.plast
   124e8:	cmp	w0, #0xf
   124ec:	b.ne	12614 <Perl_re_exec_indentf@@Base+0x6444>  // b.any
   124f0:	ldrb	w1, [x23]
   124f4:	mov	w0, #0x0                   	// #0
   124f8:	cmp	w1, #0xe2
   124fc:	b.eq	12950 <Perl_re_exec_indentf@@Base+0x6780>  // b.none
   12500:	cmp	w19, w0
   12504:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12508:	mov	w26, w27
   1250c:	mov	x27, x24
   12510:	b	12798 <Perl_re_exec_indentf@@Base+0x65c8>
   12514:	sub	x21, x21, x23
   12518:	cmp	x21, #0x1
   1251c:	b.le	124d0 <Perl_re_exec_indentf@@Base+0x6300>
   12520:	ldrb	w0, [x23, #1]
   12524:	and	w1, w0, #0xc0
   12528:	cmp	w1, #0x80
   1252c:	b.ne	124d0 <Perl_re_exec_indentf@@Base+0x6300>  // b.any
   12530:	and	w1, w20, #0xfe
   12534:	cmp	w1, #0xc2
   12538:	b.ne	12588 <Perl_re_exec_indentf@@Base+0x63b8>  // b.any
   1253c:	lsl	w1, w20, #6
   12540:	ubfiz	w2, w20, #6, #5
   12544:	tst	x2, #0x700
   12548:	b.ne	125ac <Perl_re_exec_indentf@@Base+0x63dc>  // b.any
   1254c:	and	w0, w0, #0x3f
   12550:	orr	w0, w0, w1
   12554:	and	x0, x0, #0xff
   12558:	ldrb	w2, [x26]
   1255c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   12560:	ldr	x1, [x1, #3880]
   12564:	ldr	w0, [x1, x0, lsl #2]
   12568:	lsr	w0, w0, w2
   1256c:	and	w0, w0, #0x1
   12570:	cmp	w19, w0
   12574:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12578:	mov	w26, w27
   1257c:	mov	x27, x24
   12580:	add	x23, x23, #0x2
   12584:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   12588:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1258c:	add	x3, x3, #0x330
   12590:	add	x3, x3, #0xc80
   12594:	mov	w2, #0x1b11                	// #6929
   12598:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1259c:	add	x1, x1, #0xcb0
   125a0:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   125a4:	add	x0, x0, #0x1d8
   125a8:	bl	58e0 <__assert_fail@plt>
   125ac:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   125b0:	add	x3, x3, #0x330
   125b4:	add	x3, x3, #0xc80
   125b8:	mov	w2, #0x1b11                	// #6929
   125bc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   125c0:	add	x1, x1, #0xcb0
   125c4:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   125c8:	add	x0, x0, #0x348
   125cc:	bl	58e0 <__assert_fail@plt>
   125d0:	cmp	w0, #0xa
   125d4:	b.eq	12768 <Perl_re_exec_indentf@@Base+0x6598>  // b.none
   125d8:	cmp	w0, #0xb
   125dc:	b.ne	12614 <Perl_re_exec_indentf@@Base+0x6444>  // b.any
   125e0:	ldrb	w0, [x23]
   125e4:	cmp	w0, #0xe1
   125e8:	b.eq	12860 <Perl_re_exec_indentf@@Base+0x6690>  // b.none
   125ec:	cmp	w0, #0xe2
   125f0:	b.eq	12880 <Perl_re_exec_indentf@@Base+0x66b0>  // b.none
   125f4:	mov	w1, #0x0                   	// #0
   125f8:	cmp	w0, #0xe3
   125fc:	b.eq	128c0 <Perl_re_exec_indentf@@Base+0x66f0>  // b.none
   12600:	cmp	w19, w1
   12604:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12608:	mov	w26, w27
   1260c:	mov	x27, x24
   12610:	b	12798 <Perl_re_exec_indentf@@Base+0x65c8>
   12614:	mov	w0, w0
   12618:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1261c:	ldr	x1, [x1, #3928]
   12620:	ldr	x20, [x1, x0, lsl #3]
   12624:	ldr	x21, [x24, #16]
   12628:	cmp	x23, x21
   1262c:	b.cs	126cc <Perl_re_exec_indentf@@Base+0x64fc>  // b.hs, b.nlast
   12630:	mov	w1, #0x2c                  	// #44
   12634:	mov	x0, x22
   12638:	bl	52a0 <Perl_ckwarn_d@plt>
   1263c:	ands	w0, w0, #0xff
   12640:	mov	w0, #0x9e                  	// #158
   12644:	csel	w3, w0, wzr, eq  // eq = none
   12648:	cbz	x23, 126f0 <Perl_re_exec_indentf@@Base+0x6520>
   1264c:	mov	x6, x23
   12650:	mov	x1, #0x0                   	// #0
   12654:	mov	x2, #0x0                   	// #0
   12658:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1265c:	ldr	x9, [x0, #3824]
   12660:	mov	w8, #0xff                  	// #255
   12664:	mov	x5, x9
   12668:	ldrb	w4, [x6]
   1266c:	ldrb	w0, [x9, w4, sxtw]
   12670:	and	x7, x0, #0xff
   12674:	asr	w0, w8, w0
   12678:	and	w0, w0, w4
   1267c:	sxtw	x0, w0
   12680:	bfi	x4, x1, #6, #58
   12684:	cmp	x2, #0x0
   12688:	csel	x1, x4, x0, ne  // ne = any
   1268c:	add	x0, x5, x2
   12690:	add	x0, x0, x7
   12694:	ldrb	w2, [x0, #256]
   12698:	cbnz	x2, 12714 <Perl_re_exec_indentf@@Base+0x6544>
   1269c:	mov	x0, x20
   126a0:	bl	59d0 <Perl__invlist_search@plt>
   126a4:	cbz	x20, 12744 <Perl_re_exec_indentf@@Base+0x6574>
   126a8:	mvn	x1, x0
   126ac:	and	x1, x1, #0x1
   126b0:	cmp	x0, #0x0
   126b4:	csel	w0, w1, wzr, ge  // ge = tcont
   126b8:	cmp	w19, w0
   126bc:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   126c0:	mov	w26, w27
   126c4:	mov	x27, x24
   126c8:	b	12798 <Perl_re_exec_indentf@@Base+0x65c8>
   126cc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   126d0:	add	x3, x3, #0x330
   126d4:	add	x3, x3, #0xc80
   126d8:	mov	w2, #0x1b21                	// #6945
   126dc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   126e0:	add	x1, x1, #0xcb0
   126e4:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   126e8:	add	x0, x0, #0xd48
   126ec:	bl	58e0 <__assert_fail@plt>
   126f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   126f4:	add	x3, x3, #0x330
   126f8:	add	x3, x3, #0xc48
   126fc:	mov	w2, #0x710                 	// #1808
   12700:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12704:	add	x1, x1, #0xc80
   12708:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1270c:	add	x0, x0, #0xce8
   12710:	bl	58e0 <__assert_fail@plt>
   12714:	add	x6, x6, #0x1
   12718:	cmp	x2, #0x1
   1271c:	ccmp	x21, x6, #0x0, ne  // ne = any
   12720:	b.hi	12668 <Perl_re_exec_indentf@@Base+0x6498>  // b.pmore
   12724:	mov	x5, #0x0                   	// #0
   12728:	mov	x4, #0x0                   	// #0
   1272c:	mov	x2, #0x0                   	// #0
   12730:	sub	x1, x21, x23
   12734:	mov	x0, x23
   12738:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1273c:	mov	x1, x0
   12740:	b	1269c <Perl_re_exec_indentf@@Base+0x64cc>
   12744:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12748:	add	x3, x3, #0x330
   1274c:	add	x3, x3, #0xb90
   12750:	mov	w2, #0x3f                  	// #63
   12754:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   12758:	add	x1, x1, #0x550
   1275c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   12760:	add	x0, x0, #0x568
   12764:	bl	58e0 <__assert_fail@plt>
   12768:	ldrb	w0, [x23]
   1276c:	cmp	w0, #0xe1
   12770:	b.eq	127d4 <Perl_re_exec_indentf@@Base+0x6604>  // b.none
   12774:	cmp	w0, #0xe2
   12778:	b.eq	127f4 <Perl_re_exec_indentf@@Base+0x6624>  // b.none
   1277c:	mov	w1, #0x0                   	// #0
   12780:	cmp	w0, #0xe3
   12784:	b.eq	12844 <Perl_re_exec_indentf@@Base+0x6674>  // b.none
   12788:	cmp	w19, w1
   1278c:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12790:	mov	w26, w27
   12794:	mov	x27, x24
   12798:	ldr	x0, [x27, #16]
   1279c:	cmp	x23, x0
   127a0:	b.hi	12980 <Perl_re_exec_indentf@@Base+0x67b0>  // b.pmore
   127a4:	sub	x0, x0, x23
   127a8:	mov	x1, #0x0                   	// #0
   127ac:	cmp	x0, #0x0
   127b0:	b.le	127cc <Perl_re_exec_indentf@@Base+0x65fc>
   127b4:	ldrb	w2, [x23]
   127b8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   127bc:	ldr	x1, [x1, #4064]
   127c0:	ldrb	w1, [x1, w2, sxtw]
   127c4:	cmp	x1, x0
   127c8:	csel	x1, x1, x0, le
   127cc:	add	x23, x23, x1
   127d0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   127d4:	ldrb	w0, [x23, #1]
   127d8:	mov	w1, #0x0                   	// #0
   127dc:	cmp	w0, #0x9a
   127e0:	b.ne	12788 <Perl_re_exec_indentf@@Base+0x65b8>  // b.any
   127e4:	ldrb	w0, [x23, #2]
   127e8:	cmp	w0, #0x80
   127ec:	cset	w1, eq  // eq = none
   127f0:	b	12788 <Perl_re_exec_indentf@@Base+0x65b8>
   127f4:	ldrb	w0, [x23, #1]
   127f8:	cmp	w0, #0x80
   127fc:	b.eq	1281c <Perl_re_exec_indentf@@Base+0x664c>  // b.none
   12800:	mov	w1, #0x0                   	// #0
   12804:	cmp	w0, #0x81
   12808:	b.ne	12788 <Perl_re_exec_indentf@@Base+0x65b8>  // b.any
   1280c:	ldrb	w0, [x23, #2]
   12810:	cmp	w0, #0x9f
   12814:	cset	w1, eq  // eq = none
   12818:	b	12788 <Perl_re_exec_indentf@@Base+0x65b8>
   1281c:	ldrb	w0, [x23, #2]
   12820:	sub	w2, w0, #0x80
   12824:	mov	w1, #0x1                   	// #1
   12828:	cmp	w2, #0xa
   1282c:	b.ls	12788 <Perl_re_exec_indentf@@Base+0x65b8>  // b.plast
   12830:	sub	w1, w0, #0xa8
   12834:	cmp	w0, #0xaf
   12838:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1283c:	cset	w1, ls  // ls = plast
   12840:	b	12788 <Perl_re_exec_indentf@@Base+0x65b8>
   12844:	ldrb	w0, [x23, #1]
   12848:	cmp	w0, #0x80
   1284c:	b.ne	12788 <Perl_re_exec_indentf@@Base+0x65b8>  // b.any
   12850:	ldrb	w0, [x23, #2]
   12854:	cmp	w0, #0x80
   12858:	cset	w1, eq  // eq = none
   1285c:	b	12788 <Perl_re_exec_indentf@@Base+0x65b8>
   12860:	ldrb	w0, [x23, #1]
   12864:	mov	w1, #0x0                   	// #0
   12868:	cmp	w0, #0x9a
   1286c:	b.ne	12600 <Perl_re_exec_indentf@@Base+0x6430>  // b.any
   12870:	ldrb	w0, [x23, #2]
   12874:	cmp	w0, #0x80
   12878:	cset	w1, eq  // eq = none
   1287c:	b	12600 <Perl_re_exec_indentf@@Base+0x6430>
   12880:	ldrb	w0, [x23, #1]
   12884:	cmp	w0, #0x80
   12888:	b.eq	128a8 <Perl_re_exec_indentf@@Base+0x66d8>  // b.none
   1288c:	mov	w1, #0x0                   	// #0
   12890:	cmp	w0, #0x81
   12894:	b.ne	12600 <Perl_re_exec_indentf@@Base+0x6430>  // b.any
   12898:	ldrb	w0, [x23, #2]
   1289c:	cmp	w0, #0x9f
   128a0:	cset	w1, eq  // eq = none
   128a4:	b	12600 <Perl_re_exec_indentf@@Base+0x6430>
   128a8:	ldrb	w0, [x23, #2]
   128ac:	sub	w1, w0, #0x80
   128b0:	cmp	w0, #0xaf
   128b4:	ccmp	w1, #0xa, #0x0, ne  // ne = any
   128b8:	cset	w1, ls  // ls = plast
   128bc:	b	12600 <Perl_re_exec_indentf@@Base+0x6430>
   128c0:	ldrb	w0, [x23, #1]
   128c4:	cmp	w0, #0x80
   128c8:	b.ne	12600 <Perl_re_exec_indentf@@Base+0x6430>  // b.any
   128cc:	ldrb	w0, [x23, #2]
   128d0:	cmp	w0, #0x80
   128d4:	cset	w1, eq  // eq = none
   128d8:	b	12600 <Perl_re_exec_indentf@@Base+0x6430>
   128dc:	ldrb	w1, [x23]
   128e0:	mov	w0, #0x0                   	// #0
   128e4:	cmp	w1, #0xef
   128e8:	b.eq	12900 <Perl_re_exec_indentf@@Base+0x6730>  // b.none
   128ec:	cmp	w19, w0
   128f0:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   128f4:	mov	w26, w27
   128f8:	mov	x27, x24
   128fc:	b	12798 <Perl_re_exec_indentf@@Base+0x65c8>
   12900:	ldrb	w1, [x23, #1]
   12904:	cmp	w1, #0xbc
   12908:	b.eq	1292c <Perl_re_exec_indentf@@Base+0x675c>  // b.none
   1290c:	mov	w0, #0x0                   	// #0
   12910:	cmp	w1, #0xbd
   12914:	b.ne	128ec <Perl_re_exec_indentf@@Base+0x671c>  // b.any
   12918:	ldrb	w0, [x23, #2]
   1291c:	sub	w0, w0, #0x81
   12920:	cmp	w0, #0x5
   12924:	cset	w0, ls  // ls = plast
   12928:	b	128ec <Perl_re_exec_indentf@@Base+0x671c>
   1292c:	ldrb	w1, [x23, #2]
   12930:	sub	w2, w1, #0x90
   12934:	mov	w0, #0x1                   	// #1
   12938:	cmp	w2, #0x9
   1293c:	b.ls	128ec <Perl_re_exec_indentf@@Base+0x671c>  // b.plast
   12940:	sub	w1, w1, #0xa1
   12944:	cmp	w1, #0x5
   12948:	cset	w0, ls  // ls = plast
   1294c:	b	128ec <Perl_re_exec_indentf@@Base+0x671c>
   12950:	ldrb	w1, [x23, #1]
   12954:	cmp	w1, #0x80
   12958:	b.ne	12500 <Perl_re_exec_indentf@@Base+0x6330>  // b.any
   1295c:	ldrb	w0, [x23, #2]
   12960:	sub	w0, w0, #0xa8
   12964:	cmp	w0, #0x1
   12968:	cset	w0, ls  // ls = plast
   1296c:	b	12500 <Perl_re_exec_indentf@@Base+0x6330>
   12970:	cbz	w19, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   12974:	mov	w26, w27
   12978:	mov	x27, x24
   1297c:	b	12798 <Perl_re_exec_indentf@@Base+0x65c8>
   12980:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12984:	add	x3, x3, #0x330
   12988:	add	x3, x3, #0xc80
   1298c:	mov	w2, #0x1b4b                	// #6987
   12990:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12994:	add	x1, x1, #0xcb0
   12998:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   1299c:	add	x0, x0, #0xd88
   129a0:	bl	58e0 <__assert_fail@plt>
   129a4:	mov	w20, #0xfffffff6            	// #-10
   129a8:	cmp	w20, #0x0
   129ac:	ldr	x0, [sp, #128]
   129b0:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   129b4:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   129b8:	mov	w26, w27
   129bc:	mov	x27, x24
   129c0:	ldr	w0, [sp, #168]
   129c4:	cbnz	w0, 129f0 <Perl_re_exec_indentf@@Base+0x6820>
   129c8:	add	x0, x23, #0x1
   129cc:	cmp	w20, #0xd
   129d0:	ldr	x1, [sp, #128]
   129d4:	ccmp	x1, x0, #0x0, eq  // eq = none
   129d8:	b.ls	18a98 <Perl_re_exec_indentf@@Base+0xc8c8>  // b.plast
   129dc:	ldrb	w2, [x23, #1]
   129e0:	add	x1, x23, #0x2
   129e4:	cmp	w2, #0xa
   129e8:	csel	x23, x1, x0, eq  // eq = none
   129ec:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   129f0:	cmp	x23, x21
   129f4:	b.cs	12b94 <Perl_re_exec_indentf@@Base+0x69c4>  // b.hs, b.nlast
   129f8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   129fc:	ldr	x0, [x0, #3720]
   12a00:	ldr	x19, [x0]
   12a04:	mov	w1, #0x2c                  	// #44
   12a08:	mov	x0, x22
   12a0c:	bl	52a0 <Perl_ckwarn_d@plt>
   12a10:	ands	w0, w0, #0xff
   12a14:	mov	w3, #0x9e                  	// #158
   12a18:	csel	w3, w3, wzr, eq  // eq = none
   12a1c:	cbz	x23, 12bb8 <Perl_re_exec_indentf@@Base+0x69e8>
   12a20:	mov	x7, x23
   12a24:	mov	x1, #0x0                   	// #0
   12a28:	mov	x2, #0x0                   	// #0
   12a2c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12a30:	ldr	x9, [x0, #3824]
   12a34:	mov	w8, #0xff                  	// #255
   12a38:	mov	x6, x9
   12a3c:	ldrb	w5, [x7]
   12a40:	ldrb	w0, [x9, w5, sxtw]
   12a44:	and	x4, x0, #0xff
   12a48:	asr	w0, w8, w0
   12a4c:	and	w0, w0, w5
   12a50:	sxtw	x0, w0
   12a54:	bfi	x5, x1, #6, #58
   12a58:	cmp	x2, #0x0
   12a5c:	csel	x1, x5, x0, ne  // ne = any
   12a60:	add	x0, x6, x4
   12a64:	add	x0, x0, x2
   12a68:	ldrb	w2, [x0, #256]
   12a6c:	cbnz	x2, 12bdc <Perl_re_exec_indentf@@Base+0x6a0c>
   12a70:	mov	x0, x19
   12a74:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   12a78:	mov	x1, x0
   12a7c:	ldrb	w2, [x23]
   12a80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12a84:	ldr	x0, [x0, #4064]
   12a88:	ldrb	w0, [x0, w2, sxtw]
   12a8c:	add	x23, x23, x0
   12a90:	ldr	x0, [sp, #128]
   12a94:	cmp	x0, x23
   12a98:	b.ls	189e0 <Perl_re_exec_indentf@@Base+0xc810>  // b.plast
   12a9c:	adrp	x0, 74000 <boot_re@@Base+0x1241c>
   12aa0:	add	x0, x0, #0x398
   12aa4:	ldr	w0, [x0, x1, lsl #2]
   12aa8:	str	w0, [sp, #192]
   12aac:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12ab0:	ldr	x20, [x0, #3720]
   12ab4:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   12ab8:	ldr	x24, [x21, #3824]
   12abc:	ldr	x19, [x27, #16]
   12ac0:	cmp	x19, x23
   12ac4:	b.ls	12c0c <Perl_re_exec_indentf@@Base+0x6a3c>  // b.plast
   12ac8:	ldr	x0, [x20]
   12acc:	str	x0, [sp, #200]
   12ad0:	mov	w1, #0x2c                  	// #44
   12ad4:	mov	x0, x22
   12ad8:	bl	52a0 <Perl_ckwarn_d@plt>
   12adc:	ands	w0, w0, #0xff
   12ae0:	mov	w3, #0x9e                  	// #158
   12ae4:	csel	w3, w3, wzr, eq  // eq = none
   12ae8:	cbz	x23, 12c30 <Perl_re_exec_indentf@@Base+0x6a60>
   12aec:	mov	x6, x23
   12af0:	mov	x1, #0x0                   	// #0
   12af4:	mov	x2, #0x0                   	// #0
   12af8:	mov	w8, #0xff                  	// #255
   12afc:	ldr	x7, [x21, #3824]
   12b00:	ldrb	w5, [x6]
   12b04:	ldrb	w0, [x24, w5, sxtw]
   12b08:	and	x4, x0, #0xff
   12b0c:	asr	w0, w8, w0
   12b10:	and	w0, w0, w5
   12b14:	sxtw	x0, w0
   12b18:	bfi	x5, x1, #6, #58
   12b1c:	cmp	x2, #0x0
   12b20:	csel	x1, x5, x0, ne  // ne = any
   12b24:	add	x0, x7, x4
   12b28:	add	x0, x0, x2
   12b2c:	ldrb	w2, [x0, #256]
   12b30:	cbnz	x2, 12c54 <Perl_re_exec_indentf@@Base+0x6a84>
   12b34:	ldr	x0, [sp, #200]
   12b38:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   12b3c:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
   12b40:	add	x1, x1, #0x398
   12b44:	ldr	w19, [x1, x0, lsl #2]
   12b48:	mov	w5, #0x1                   	// #1
   12b4c:	mov	x4, x23
   12b50:	ldr	x3, [x27, #8]
   12b54:	mov	w2, w19
   12b58:	ldr	w1, [sp, #192]
   12b5c:	mov	x0, x22
   12b60:	bl	9e90 <Perl__inverse_folds@plt+0x4490>
   12b64:	and	w0, w0, #0xff
   12b68:	cbnz	w0, 189e0 <Perl_re_exec_indentf@@Base+0xc810>
   12b6c:	ldrb	w1, [x23]
   12b70:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12b74:	ldr	x0, [x0, #4064]
   12b78:	ldrb	w0, [x0, w1, sxtw]
   12b7c:	add	x23, x23, x0
   12b80:	ldr	x0, [sp, #128]
   12b84:	cmp	x0, x23
   12b88:	b.ls	189e0 <Perl_re_exec_indentf@@Base+0xc810>  // b.plast
   12b8c:	str	w19, [sp, #192]
   12b90:	b	12abc <Perl_re_exec_indentf@@Base+0x68ec>
   12b94:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12b98:	add	x3, x3, #0x330
   12b9c:	add	x3, x3, #0xc80
   12ba0:	mov	w2, #0x1b63                	// #7011
   12ba4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12ba8:	add	x1, x1, #0xcb0
   12bac:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   12bb0:	add	x0, x0, #0x640
   12bb4:	bl	58e0 <__assert_fail@plt>
   12bb8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12bbc:	add	x3, x3, #0x330
   12bc0:	add	x3, x3, #0xc48
   12bc4:	mov	w2, #0x710                 	// #1808
   12bc8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12bcc:	add	x1, x1, #0xc80
   12bd0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   12bd4:	add	x0, x0, #0xce8
   12bd8:	bl	58e0 <__assert_fail@plt>
   12bdc:	add	x7, x7, #0x1
   12be0:	cmp	x2, #0x1
   12be4:	ccmp	x21, x7, #0x0, ne  // ne = any
   12be8:	b.hi	12a3c <Perl_re_exec_indentf@@Base+0x686c>  // b.pmore
   12bec:	mov	x5, #0x0                   	// #0
   12bf0:	mov	x4, #0x0                   	// #0
   12bf4:	mov	x2, #0x0                   	// #0
   12bf8:	sub	x1, x21, x23
   12bfc:	mov	x0, x23
   12c00:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   12c04:	mov	x1, x0
   12c08:	b	12a70 <Perl_re_exec_indentf@@Base+0x68a0>
   12c0c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12c10:	add	x3, x3, #0x330
   12c14:	add	x3, x3, #0xc80
   12c18:	mov	w2, #0x1b6c                	// #7020
   12c1c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12c20:	add	x1, x1, #0xcb0
   12c24:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   12c28:	add	x0, x0, #0x640
   12c2c:	bl	58e0 <__assert_fail@plt>
   12c30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   12c34:	add	x3, x3, #0x330
   12c38:	add	x3, x3, #0xc48
   12c3c:	mov	w2, #0x710                 	// #1808
   12c40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   12c44:	add	x1, x1, #0xc80
   12c48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   12c4c:	add	x0, x0, #0xce8
   12c50:	bl	58e0 <__assert_fail@plt>
   12c54:	add	x6, x6, #0x1
   12c58:	cmp	x2, #0x1
   12c5c:	ccmp	x19, x6, #0x0, ne  // ne = any
   12c60:	b.hi	12b00 <Perl_re_exec_indentf@@Base+0x6930>  // b.pmore
   12c64:	mov	x5, #0x0                   	// #0
   12c68:	mov	x4, #0x0                   	// #0
   12c6c:	mov	x2, #0x0                   	// #0
   12c70:	sub	x1, x19, x23
   12c74:	mov	x0, x23
   12c78:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   12c7c:	mov	x1, x0
   12c80:	b	12b34 <Perl_re_exec_indentf@@Base+0x6964>
   12c84:	mov	w0, #0x1                   	// #1
   12c88:	str	w0, [sp, #200]
   12c8c:	ldr	x0, [x22, #1440]
   12c90:	cbnz	x0, 12cc4 <Perl_re_exec_indentf@@Base+0x6af4>
   12c94:	mov	x0, #0x2                   	// #2
   12c98:	str	x0, [sp, #192]
   12c9c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12ca0:	ldr	x0, [x0, #3816]
   12ca4:	str	x0, [sp, #216]
   12ca8:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12cac:	add	x19, x19, #0xb18
   12cb0:	mov	w21, #0x3e                  	// #62
   12cb4:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   12cb8:	str	wzr, [sp, #200]
   12cbc:	mov	w20, #0xfffffff6            	// #-10
   12cc0:	b	12c8c <Perl_re_exec_indentf@@Base+0x6abc>
   12cc4:	bl	5050 <Perl__warn_problematic_locale@plt>
   12cc8:	mov	x0, #0x2                   	// #2
   12ccc:	str	x0, [sp, #192]
   12cd0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12cd4:	ldr	x0, [x0, #3816]
   12cd8:	str	x0, [sp, #216]
   12cdc:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12ce0:	add	x19, x19, #0xb18
   12ce4:	mov	w21, #0x3e                  	// #62
   12ce8:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   12cec:	mov	w0, #0x1                   	// #1
   12cf0:	str	w0, [sp, #200]
   12cf4:	str	xzr, [sp, #192]
   12cf8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12cfc:	ldr	x0, [x0, #3752]
   12d00:	str	x0, [sp, #216]
   12d04:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12d08:	add	x19, x19, #0xfc4
   12d0c:	mov	w21, #0x3f                  	// #63
   12d10:	mov	x1, x26
   12d14:	ldr	x0, [sp, #152]
   12d18:	bl	60a4 <Perl__inverse_folds@plt+0x6a4>
   12d1c:	cbnz	w0, 12f60 <Perl_re_exec_indentf@@Base+0x6d90>
   12d20:	ldr	w0, [x22, #2368]
   12d24:	tbnz	w0, #20, 12d34 <Perl_re_exec_indentf@@Base+0x6b64>
   12d28:	ldr	x0, [sp, #464]
   12d2c:	tst	x0, #0xff00
   12d30:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
   12d34:	ldr	x4, [x22, #1488]
   12d38:	ldr	x3, [x22, #1480]
   12d3c:	mov	w2, w27
   12d40:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   12d44:	add	x1, x1, #0x940
   12d48:	mov	x0, x22
   12d4c:	bl	5290 <Perl_re_exec_indentf@plt>
   12d50:	ldr	w0, [sp, #172]
   12d54:	cbnz	w0, 18ec4 <Perl_re_exec_indentf@@Base+0xccf4>
   12d58:	cbz	w27, 192e0 <Perl_re_exec_indentf@@Base+0xd110>
   12d5c:	sub	x25, x25, #0x88
   12d60:	ldr	x0, [x22, #288]
   12d64:	cmp	x25, x0
   12d68:	b.cs	12d78 <Perl_re_exec_indentf@@Base+0x6ba8>  // b.hs, b.nlast
   12d6c:	ldr	x25, [x0, #3944]
   12d70:	str	x25, [x22, #288]
   12d74:	add	x25, x25, #0xee0
   12d78:	str	x25, [x22, #296]
   12d7c:	ldr	x23, [x25, #8]
   12d80:	ldr	x0, [x25, #16]
   12d84:	str	x0, [sp, #128]
   12d88:	ldr	x0, [x25, #24]
   12d8c:	str	x0, [sp, #184]
   12d90:	ldr	w0, [x22, #2368]
   12d94:	tbnz	w0, #20, 12da0 <Perl_re_exec_indentf@@Base+0x6bd0>
   12d98:	ldr	x0, [sp, #464]
   12d9c:	tbz	w0, #19, 18f34 <Perl_re_exec_indentf@@Base+0xcd64>
   12da0:	mov	w7, w27
   12da4:	ldrb	w6, [sp, #168]
   12da8:	ldr	x5, [sp, #136]
   12dac:	ldr	x4, [x24, #8]
   12db0:	ldr	x3, [x24, #16]
   12db4:	mov	x2, x26
   12db8:	mov	x1, x23
   12dbc:	mov	x0, x22
   12dc0:	bl	624c <Perl__inverse_folds@plt+0x84c>
   12dc4:	mov	w2, #0x6667                	// #26215
   12dc8:	movk	w2, #0x6666, lsl #16
   12dcc:	smull	x2, w27, w2
   12dd0:	asr	x2, x2, #35
   12dd4:	sub	w2, w2, w27, asr #31
   12dd8:	add	w2, w2, w2, lsl #2
   12ddc:	sub	w2, w27, w2, lsl #2
   12de0:	ldrsw	x1, [x25]
   12de4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12de8:	ldr	x0, [x0, #3776]
   12dec:	ldr	x4, [x0, x1, lsl #3]
   12df0:	cmp	x28, x25
   12df4:	ldr	x0, [sp, #160]
   12df8:	ccmp	x25, x0, #0x4, ne  // ne = any
   12dfc:	b.ne	18f04 <Perl_re_exec_indentf@@Base+0xcd34>  // b.any
   12e00:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   12e04:	add	x6, x6, #0x20
   12e08:	cmp	x28, x25
   12e0c:	b.ne	194ec <Perl_re_exec_indentf@@Base+0xd31c>  // b.any
   12e10:	ldr	x0, [sp, #160]
   12e14:	cmp	x25, x0
   12e18:	b.eq	194e4 <Perl_re_exec_indentf@@Base+0xd314>  // b.none
   12e1c:	adrp	x7, 7d000 <boot_re@@Base+0x1b41c>
   12e20:	add	x7, x7, #0x20
   12e24:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   12e28:	add	x6, x6, #0xa18
   12e2c:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   12e30:	add	x5, x5, #0xa10
   12e34:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   12e38:	add	x0, x0, #0x538
   12e3c:	b	18f18 <Perl_re_exec_indentf@@Base+0xcd48>
   12e40:	str	wzr, [sp, #200]
   12e44:	mov	w20, #0xfffffff6            	// #-10
   12e48:	b	12cf4 <Perl_re_exec_indentf@@Base+0x6b24>
   12e4c:	mov	w0, #0x1                   	// #1
   12e50:	str	w0, [sp, #200]
   12e54:	str	xzr, [sp, #192]
   12e58:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12e5c:	ldr	x0, [x0, #3944]
   12e60:	str	x0, [sp, #216]
   12e64:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12e68:	add	x19, x19, #0xbec
   12e6c:	mov	w21, #0x3d                  	// #61
   12e70:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   12e74:	str	wzr, [sp, #200]
   12e78:	mov	w20, #0xfffffff6            	// #-10
   12e7c:	b	12e54 <Perl_re_exec_indentf@@Base+0x6c84>
   12e80:	mov	w0, #0x1                   	// #1
   12e84:	str	w0, [sp, #200]
   12e88:	mov	x0, #0x1                   	// #1
   12e8c:	str	x0, [sp, #192]
   12e90:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12e94:	ldr	x0, [x0, #3752]
   12e98:	str	x0, [sp, #216]
   12e9c:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12ea0:	add	x19, x19, #0xfc4
   12ea4:	mov	w21, #0x40                  	// #64
   12ea8:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   12eac:	str	wzr, [sp, #200]
   12eb0:	mov	w20, #0xfffffff6            	// #-10
   12eb4:	mov	x0, #0x1                   	// #1
   12eb8:	str	x0, [sp, #192]
   12ebc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12ec0:	ldr	x0, [x0, #3752]
   12ec4:	str	x0, [sp, #216]
   12ec8:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12ecc:	add	x19, x19, #0xfc4
   12ed0:	mov	w21, #0x40                  	// #64
   12ed4:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   12ed8:	mov	w0, #0x1                   	// #1
   12edc:	str	w0, [sp, #200]
   12ee0:	ldr	x0, [x22, #1440]
   12ee4:	cbnz	x0, 12f14 <Perl_re_exec_indentf@@Base+0x6d44>
   12ee8:	mov	x0, #0x2                   	// #2
   12eec:	str	x0, [sp, #192]
   12ef0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12ef4:	ldr	x0, [x0, #3816]
   12ef8:	str	x0, [sp, #216]
   12efc:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12f00:	add	x19, x19, #0xb18
   12f04:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   12f08:	str	wzr, [sp, #200]
   12f0c:	mov	w20, #0xfffffff6            	// #-10
   12f10:	b	12ee0 <Perl_re_exec_indentf@@Base+0x6d10>
   12f14:	bl	5050 <Perl__warn_problematic_locale@plt>
   12f18:	mov	x0, #0x2                   	// #2
   12f1c:	str	x0, [sp, #192]
   12f20:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12f24:	ldr	x0, [x0, #3816]
   12f28:	str	x0, [sp, #216]
   12f2c:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12f30:	add	x19, x19, #0xb18
   12f34:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   12f38:	mov	w0, #0x1                   	// #1
   12f3c:	str	w0, [sp, #200]
   12f40:	str	xzr, [sp, #192]
   12f44:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   12f48:	ldr	x0, [x0, #3752]
   12f4c:	str	x0, [sp, #216]
   12f50:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   12f54:	add	x19, x19, #0xfc4
   12f58:	ldrb	w21, [x26, #1]
   12f5c:	ldr	w0, [x26, #4]
   12f60:	ubfiz	x1, x0, #1, #32
   12f64:	add	x1, x1, w0, uxtw
   12f68:	ldr	x5, [sp, #152]
   12f6c:	ldr	x2, [x5, #120]
   12f70:	add	x4, x2, x1, lsl #3
   12f74:	ldr	x3, [x2, x1, lsl #3]
   12f78:	ldr	x2, [x4, #8]
   12f7c:	ldr	w1, [x24, #72]
   12f80:	str	w1, [x24, #76]
   12f84:	ldr	w1, [x5, #112]
   12f88:	cmp	w0, w1
   12f8c:	b.hi	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.pmore
   12f90:	cmn	x3, #0x1
   12f94:	ccmn	x2, #0x1, #0x4, ne  // ne = any
   12f98:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   12f9c:	cmp	x3, x2
   12fa0:	b.eq	18afc <Perl_re_exec_indentf@@Base+0xc92c>  // b.none
   12fa4:	ldr	x4, [x24, #8]
   12fa8:	add	x0, x4, x3
   12fac:	cmp	w21, #0x3c
   12fb0:	b.eq	130a4 <Perl_re_exec_indentf@@Base+0x6ed4>  // b.none
   12fb4:	sub	w1, w21, #0x3e
   12fb8:	and	w1, w1, #0xff
   12fbc:	ldr	w5, [sp, #168]
   12fc0:	cmp	w5, #0x0
   12fc4:	ccmp	w1, #0x1, #0x0, eq  // eq = none
   12fc8:	b.hi	130a4 <Perl_re_exec_indentf@@Base+0x6ed4>  // b.pmore
   12fcc:	ldr	x1, [sp, #128]
   12fd0:	str	x1, [sp, #496]
   12fd4:	ldr	w1, [sp, #192]
   12fd8:	str	w1, [sp, #8]
   12fdc:	mov	w4, w5
   12fe0:	strb	w5, [sp]
   12fe4:	mov	x7, #0x0                   	// #0
   12fe8:	add	x6, sp, #0x1f0
   12fec:	mov	x5, x23
   12ff0:	sub	x3, x2, x3
   12ff4:	mov	x2, #0x0                   	// #0
   12ff8:	mov	x1, x0
   12ffc:	mov	x0, x22
   13000:	bl	5400 <Perl_foldEQ_utf8_flags@plt>
   13004:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   13008:	mov	w26, w27
   1300c:	mov	x27, x24
   13010:	ldr	x23, [sp, #496]
   13014:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   13018:	str	wzr, [sp, #200]
   1301c:	mov	w20, #0xfffffff6            	// #-10
   13020:	b	12f40 <Perl_re_exec_indentf@@Base+0x6d70>
   13024:	mov	w0, #0x1                   	// #1
   13028:	str	w0, [sp, #200]
   1302c:	str	xzr, [sp, #192]
   13030:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   13034:	ldr	x0, [x0, #3944]
   13038:	str	x0, [sp, #216]
   1303c:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   13040:	add	x19, x19, #0xbec
   13044:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   13048:	str	wzr, [sp, #200]
   1304c:	mov	w20, #0xfffffff6            	// #-10
   13050:	b	1302c <Perl_re_exec_indentf@@Base+0x6e5c>
   13054:	mov	w0, #0x1                   	// #1
   13058:	str	w0, [sp, #200]
   1305c:	mov	x0, #0x1                   	// #1
   13060:	str	x0, [sp, #192]
   13064:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   13068:	ldr	x0, [x0, #3752]
   1306c:	str	x0, [sp, #216]
   13070:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   13074:	add	x19, x19, #0xfc4
   13078:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   1307c:	str	wzr, [sp, #200]
   13080:	mov	w20, #0xfffffff6            	// #-10
   13084:	mov	x0, #0x1                   	// #1
   13088:	str	x0, [sp, #192]
   1308c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   13090:	ldr	x0, [x0, #3752]
   13094:	str	x0, [sp, #216]
   13098:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1309c:	add	x19, x19, #0xfc4
   130a0:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   130a4:	ldr	w1, [sp, #200]
   130a8:	cmp	w1, #0x0
   130ac:	ldr	x1, [sp, #128]
   130b0:	ccmp	x23, x1, #0x2, ne  // ne = any
   130b4:	b.cs	130dc <Perl_re_exec_indentf@@Base+0x6f0c>  // b.hs, b.nlast
   130b8:	ldrb	w1, [x4, x3]
   130bc:	cmp	w1, w20
   130c0:	b.eq	130dc <Perl_re_exec_indentf@@Base+0x6f0c>  // b.none
   130c4:	cmp	w21, #0x3c
   130c8:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   130cc:	ldr	x4, [sp, #216]
   130d0:	ldrb	w4, [x4, w20, sxtw]
   130d4:	cmp	w4, w1
   130d8:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   130dc:	sub	x2, x2, x3
   130e0:	add	x20, x23, x2
   130e4:	ldr	x1, [sp, #128]
   130e8:	cmp	x1, x20
   130ec:	b.cc	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.lo, b.ul, b.last
   130f0:	cmp	x2, #0x1
   130f4:	b.le	18aa0 <Perl_re_exec_indentf@@Base+0xc8d0>
   130f8:	cmp	w21, #0x3c
   130fc:	b.eq	13128 <Perl_re_exec_indentf@@Base+0x6f58>  // b.none
   13100:	mov	x1, x0
   13104:	mov	x0, x23
   13108:	blr	x19
   1310c:	cmp	w0, #0x0
   13110:	cset	w0, eq  // eq = none
   13114:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   13118:	mov	w26, w27
   1311c:	mov	x27, x24
   13120:	mov	x23, x20
   13124:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   13128:	mov	x1, x23
   1312c:	bl	5460 <memcmp@plt>
   13130:	cmp	w0, #0x0
   13134:	cset	w0, ne  // ne = any
   13138:	b	13114 <Perl_re_exec_indentf@@Base+0x6f44>
   1313c:	mov	x0, x24
   13140:	mov	x24, x26
   13144:	mov	w26, w27
   13148:	mov	x27, x0
   1314c:	ldr	w20, [x24, #4]
   13150:	ldr	x0, [sp, #176]
   13154:	cbz	x0, 13394 <Perl_re_exec_indentf@@Base+0x71c4>
   13158:	ldr	x0, [x0, #8]
   1315c:	cmp	x23, x0
   13160:	b.eq	1336c <Perl_re_exec_indentf@@Base+0x719c>  // b.none
   13164:	str	wzr, [sp, #324]
   13168:	ldrsw	x0, [x24, #8]
   1316c:	add	x24, x24, x0, lsl #2
   13170:	add	w0, w20, #0x1
   13174:	str	w0, [x25, #72]
   13178:	mov	w21, w20
   1317c:	ldr	x0, [sp, #152]
   13180:	ldr	x0, [x0, #128]
   13184:	ldr	x0, [x0, x21, lsl #3]
   13188:	cmp	x23, x0
   1318c:	b.eq	1339c <Perl_re_exec_indentf@@Base+0x71cc>  // b.none
   13190:	str	x0, [x25, #88]
   13194:	ldr	x0, [sp, #152]
   13198:	ldr	x0, [x0, #128]
   1319c:	str	x23, [x0, x21, lsl #3]
   131a0:	str	xzr, [sp, #488]
   131a4:	ldr	x0, [x22, #224]
   131a8:	cbz	x0, 13220 <Perl_re_exec_indentf@@Base+0x7050>
   131ac:	mov	w2, #0x1                   	// #1
   131b0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   131b4:	add	x1, x1, #0x608
   131b8:	mov	x0, x22
   131bc:	bl	54f0 <Perl_get_sv@plt>
   131c0:	mov	x19, x0
   131c4:	cbz	x0, 13220 <Perl_re_exec_indentf@@Base+0x7050>
   131c8:	ldr	w0, [x0, #12]
   131cc:	tbz	w0, #8, 133ac <Perl_re_exec_indentf@@Base+0x71dc>
   131d0:	ldr	w0, [x19, #12]
   131d4:	and	w1, w0, #0x3fff00
   131d8:	and	w1, w1, #0xffe001ff
   131dc:	cmp	w1, #0x100
   131e0:	b.ne	13408 <Perl_re_exec_indentf@@Base+0x7238>  // b.any
   131e4:	and	w2, w0, #0xf
   131e8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   131ec:	ldr	x1, [x1, #3712]
   131f0:	ldrb	w1, [x1, w2, uxtw]
   131f4:	cbz	w1, 133c0 <Perl_re_exec_indentf@@Base+0x71f0>
   131f8:	and	w1, w0, #0xc000
   131fc:	cmp	w1, #0x8, lsl #12
   13200:	b.ne	13214 <Perl_re_exec_indentf@@Base+0x7044>  // b.any
   13204:	and	w0, w0, #0xff
   13208:	sub	w0, w0, #0x9
   1320c:	cmp	w0, #0x1
   13210:	b.ls	133e4 <Perl_re_exec_indentf@@Base+0x7214>  // b.plast
   13214:	ldr	x0, [x19]
   13218:	ldr	x0, [x0, #32]
   1321c:	str	x0, [sp, #488]
   13220:	ldr	w0, [x22, #2368]
   13224:	tbnz	w0, #20, 13238 <Perl_re_exec_indentf@@Base+0x7068>
   13228:	ldr	x1, [sp, #488]
   1322c:	mov	x0, #0x280000              	// #2621440
   13230:	tst	x1, x0
   13234:	b.eq	13260 <Perl_re_exec_indentf@@Base+0x7090>  // b.none
   13238:	ldr	x0, [sp, #152]
   1323c:	ldr	x0, [x0, #128]
   13240:	ldr	x5, [x0, x21, lsl #3]
   13244:	mov	w4, w20
   13248:	ldr	x3, [x25, #88]
   1324c:	mov	w2, w26
   13250:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13254:	add	x1, x1, #0xe10
   13258:	mov	x0, x22
   1325c:	bl	5290 <Perl_re_exec_indentf@plt>
   13260:	mov	w4, w26
   13264:	ldr	w3, [sp, #452]
   13268:	mov	w2, #0x0                   	// #0
   1326c:	ldr	x1, [sp, #152]
   13270:	mov	x0, x22
   13274:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   13278:	str	w0, [x25, #64]
   1327c:	ldr	w0, [x22, #2368]
   13280:	tbnz	w0, #20, 1328c <Perl_re_exec_indentf@@Base+0x70bc>
   13284:	ldr	x0, [sp, #464]
   13288:	tbz	w0, #19, 132a4 <Perl_re_exec_indentf@@Base+0x70d4>
   1328c:	ldrsw	x3, [x22, #48]
   13290:	mov	w2, w26
   13294:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   13298:	add	x1, x1, #0xa20
   1329c:	mov	x0, x22
   132a0:	bl	5290 <Perl_re_exec_indentf@plt>
   132a4:	ldr	w0, [x22, #48]
   132a8:	str	w0, [x25, #68]
   132ac:	ldr	x19, [sp, #280]
   132b0:	str	wzr, [x27, #72]
   132b4:	ldr	w0, [x19, #12]
   132b8:	ubfx	x0, x0, #29, #1
   132bc:	str	w0, [sp, #256]
   132c0:	strb	w0, [x27, #89]
   132c4:	ldr	x0, [sp, #280]
   132c8:	str	x0, [x25, #56]
   132cc:	ldr	x0, [sp, #232]
   132d0:	str	x0, [x25, #40]
   132d4:	ldr	x0, [x27, #64]
   132d8:	cbz	x0, 13334 <Perl_re_exec_indentf@@Base+0x7164>
   132dc:	ldrb	w0, [x19, #12]
   132e0:	cmp	w0, #0x8
   132e4:	b.ne	14d3c <Perl_re_exec_indentf@@Base+0x8b6c>  // b.any
   132e8:	ldr	w0, [x19, #8]
   132ec:	add	w0, w0, #0x1
   132f0:	str	w0, [x19, #8]
   132f4:	ldr	x0, [x22, #280]
   132f8:	ldr	x1, [x0, #56]
   132fc:	ldr	x0, [x22, #2736]
   13300:	ldr	x1, [x0, x1, lsl #3]
   13304:	ldrb	w0, [x1, #12]
   13308:	cmp	w0, #0x8
   1330c:	b.ne	13324 <Perl_re_exec_indentf@@Base+0x7154>  // b.any
   13310:	ldr	w2, [x1, #8]
   13314:	cmp	w2, #0x1
   13318:	b.ls	14d60 <Perl_re_exec_indentf@@Base+0x8b90>  // b.plast
   1331c:	sub	w2, w2, #0x1
   13320:	str	w2, [x1, #8]
   13324:	ldr	x0, [x22, #280]
   13328:	ldr	x1, [x0, #56]
   1332c:	ldr	x0, [x22, #2736]
   13330:	str	x19, [x0, x1, lsl #3]
   13334:	ldr	x0, [sp, #144]
   13338:	str	x0, [x25, #80]
   1333c:	ldr	x0, [sp, #176]
   13340:	str	x0, [x25, #48]
   13344:	mov	w0, #0x6a                  	// #106
   13348:	str	w0, [x25]
   1334c:	str	x25, [sp, #176]
   13350:	ldr	x0, [sp, #128]
   13354:	str	x0, [sp, #200]
   13358:	str	x23, [sp, #192]
   1335c:	str	x24, [sp, #144]
   13360:	str	x19, [sp, #280]
   13364:	str	xzr, [sp, #232]
   13368:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   1336c:	ldr	w0, [sp, #324]
   13370:	add	w0, w0, #0x1
   13374:	str	w0, [sp, #324]
   13378:	ldr	w1, [sp, #436]
   1337c:	cmp	w1, w0
   13380:	b.cs	13168 <Perl_re_exec_indentf@@Base+0x6f98>  // b.hs, b.nlast
   13384:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13388:	add	x1, x1, #0xda8
   1338c:	mov	x0, x22
   13390:	bl	5420 <Perl_croak@plt>
   13394:	str	wzr, [sp, #324]
   13398:	b	13168 <Perl_re_exec_indentf@@Base+0x6f98>
   1339c:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   133a0:	add	x1, x1, #0xdf0
   133a4:	mov	x0, x22
   133a8:	bl	5420 <Perl_croak@plt>
   133ac:	mov	x2, #0xff08                	// #65288
   133b0:	mov	x1, x19
   133b4:	mov	x0, x22
   133b8:	bl	5310 <Perl_sv_setuv@plt>
   133bc:	b	131d0 <Perl_re_exec_indentf@@Base+0x7000>
   133c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   133c4:	add	x3, x3, #0x330
   133c8:	add	x3, x3, #0xc80
   133cc:	mov	w2, #0x1c3b                	// #7227
   133d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   133d4:	add	x1, x1, #0xcb0
   133d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   133dc:	add	x0, x0, #0xda0
   133e0:	bl	58e0 <__assert_fail@plt>
   133e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   133e8:	add	x3, x3, #0x330
   133ec:	add	x3, x3, #0xc80
   133f0:	mov	w2, #0x1c3b                	// #7227
   133f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   133f8:	add	x1, x1, #0xcb0
   133fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   13400:	add	x0, x0, #0xdd0
   13404:	bl	58e0 <__assert_fail@plt>
   13408:	mov	w2, #0x2                   	// #2
   1340c:	mov	x1, x19
   13410:	mov	x0, x22
   13414:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   13418:	b	1321c <Perl_re_exec_indentf@@Base+0x704c>
   1341c:	mov	x0, x24
   13420:	mov	x24, x26
   13424:	mov	w26, w27
   13428:	mov	x27, x0
   1342c:	ldr	x0, [sp, #176]
   13430:	cbz	x0, 13748 <Perl_re_exec_indentf@@Base+0x7578>
   13434:	ldr	x0, [x0, #8]
   13438:	cmp	x23, x0
   1343c:	b.eq	13720 <Perl_re_exec_indentf@@Base+0x7550>  // b.none
   13440:	str	wzr, [sp, #324]
   13444:	ldr	x0, [x22]
   13448:	str	x0, [sp, #216]
   1344c:	ldr	x0, [x22, #8]
   13450:	str	x0, [sp, #224]
   13454:	ldr	x0, [x22, #224]
   13458:	str	x0, [sp, #240]
   1345c:	mov	w4, w26
   13460:	ldr	w3, [sp, #452]
   13464:	mov	w2, #0x0                   	// #0
   13468:	ldr	x1, [sp, #152]
   1346c:	mov	x0, x22
   13470:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   13474:	ldr	w0, [x22, #2368]
   13478:	tbnz	w0, #20, 13484 <Perl_re_exec_indentf@@Base+0x72b4>
   1347c:	ldr	x0, [sp, #464]
   13480:	tbz	w0, #19, 1349c <Perl_re_exec_indentf@@Base+0x72cc>
   13484:	ldrsw	x3, [x22, #48]
   13488:	mov	w2, w26
   1348c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   13490:	add	x1, x1, #0xa20
   13494:	mov	x0, x22
   13498:	bl	5290 <Perl_re_exec_indentf@plt>
   1349c:	ldr	w0, [x22, #48]
   134a0:	str	w0, [x25, #68]
   134a4:	ldr	x0, [sp, #384]
   134a8:	cbz	x0, 13750 <Perl_re_exec_indentf@@Base+0x7580>
   134ac:	ldr	w0, [x24, #4]
   134b0:	ldr	x1, [sp, #208]
   134b4:	ldr	x2, [x1, #24]
   134b8:	ldr	x1, [x2, #8]
   134bc:	ldrb	w1, [x1, w0, uxtw]
   134c0:	cmp	w1, #0x72
   134c4:	b.eq	13764 <Perl_re_exec_indentf@@Base+0x7594>  // b.none
   134c8:	cmp	w1, #0x6c
   134cc:	b.eq	137e4 <Perl_re_exec_indentf@@Base+0x7614>  // b.none
   134d0:	cmp	w1, #0x4c
   134d4:	b.ne	13898 <Perl_re_exec_indentf@@Base+0x76c8>  // b.any
   134d8:	ldr	x1, [sp, #152]
   134dc:	ldr	x21, [x1, #192]
   134e0:	add	x0, x2, w0, uxtw #3
   134e4:	ldr	x0, [x0, #16]
   134e8:	str	x0, [sp, #192]
   134ec:	ldr	x0, [sp, #336]
   134f0:	cmp	x21, x0
   134f4:	b.eq	138bc <Perl_re_exec_indentf@@Base+0x76ec>  // b.none
   134f8:	ldr	x0, [sp, #384]
   134fc:	cmp	x0, x21
   13500:	mov	w0, #0xc0                  	// #192
   13504:	mov	w1, #0x40                  	// #64
   13508:	csel	w0, w0, w1, eq  // eq = none
   1350c:	str	w0, [sp, #200]
   13510:	mov	w2, #0x7                   	// #7
   13514:	ldr	x1, [x22, #304]
   13518:	mov	x0, x22
   1351c:	bl	54b0 <Perl_save_pushptr@plt>
   13520:	ldr	x0, [sp, #336]
   13524:	cbz	x0, 13a98 <Perl_re_exec_indentf@@Base+0x78c8>
   13528:	ldr	x0, [x21]
   1352c:	ldr	w1, [x0, #92]
   13530:	tbnz	w1, #3, 138d4 <Perl_re_exec_indentf@@Base+0x7704>
   13534:	ldr	x0, [x0, #72]
   13538:	str	x0, [sp, #248]
   1353c:	ldr	x0, [x22, #240]
   13540:	ldrsw	x20, [x0, #32]
   13544:	add	x20, x20, x20, lsl #1
   13548:	lsl	x20, x20, #5
   1354c:	ldr	x0, [x0, #8]
   13550:	str	x0, [sp, #264]
   13554:	add	x19, x0, x20
   13558:	ldrb	w0, [x0, x20]
   1355c:	tbz	w0, #4, 138f8 <Perl_re_exec_indentf@@Base+0x7728>
   13560:	and	w0, w0, #0xf
   13564:	cmp	w0, #0x9
   13568:	b.ne	1391c <Perl_re_exec_indentf@@Base+0x774c>  // b.any
   1356c:	ldr	x0, [x19, #56]
   13570:	str	x0, [x22, #304]
   13574:	cbz	x0, 1357c <Perl_re_exec_indentf@@Base+0x73ac>
   13578:	ldr	x0, [x0, #16]
   1357c:	str	x0, [x22, #16]
   13580:	ldr	x1, [x19, #64]
   13584:	ldrb	w0, [x1, #12]
   13588:	sub	w0, w0, #0xd
   1358c:	cmp	w0, #0x1
   13590:	b.hi	13940 <Perl_re_exec_indentf@@Base+0x7770>  // b.pmore
   13594:	ldr	x0, [x1]
   13598:	ldr	w2, [x19, #72]
   1359c:	str	w2, [x0, #96]
   135a0:	str	xzr, [x19, #64]
   135a4:	ldr	w2, [x1, #8]
   135a8:	cmp	w2, #0x1
   135ac:	b.ls	13964 <Perl_re_exec_indentf@@Base+0x7794>  // b.plast
   135b0:	sub	w2, w2, #0x1
   135b4:	str	w2, [x1, #8]
   135b8:	mov	w0, #0x19                  	// #25
   135bc:	ldr	w1, [sp, #200]
   135c0:	orr	w0, w1, w0
   135c4:	ldr	x1, [sp, #264]
   135c8:	strb	w0, [x1, x20]
   135cc:	ldr	x1, [x22, #8]
   135d0:	ldrb	w2, [x1, #34]
   135d4:	mov	w0, #0x81                  	// #129
   135d8:	tst	x2, #0x3
   135dc:	b.ne	135f0 <Perl_re_exec_indentf@@Base+0x7420>  // b.any
   135e0:	ldrb	w0, [x1, #35]
   135e4:	and	w0, w0, #0xffffff81
   135e8:	ands	w0, w0, #0xff
   135ec:	b.ne	13970 <Perl_re_exec_indentf@@Base+0x77a0>  // b.any
   135f0:	str	x21, [x19, #64]
   135f4:	ldrb	w1, [x21, #12]
   135f8:	sub	w1, w1, #0xd
   135fc:	cmp	w1, #0x1
   13600:	b.hi	13980 <Perl_re_exec_indentf@@Base+0x77b0>  // b.pmore
   13604:	ldr	x1, [x21]
   13608:	ldr	w1, [x1, #96]
   1360c:	str	w1, [x19, #72]
   13610:	ldr	x1, [x22, #304]
   13614:	str	x1, [x19, #56]
   13618:	str	xzr, [x19, #48]
   1361c:	ldr	w1, [x21, #8]
   13620:	add	w1, w1, #0x1
   13624:	str	w1, [x21, #8]
   13628:	ldr	x1, [x22, #8]
   1362c:	orr	w0, w0, #0x30
   13630:	ldrb	w1, [x1, #35]
   13634:	and	w0, w0, w1
   13638:	strh	w0, [x19, #2]
   1363c:	ldr	x0, [sp, #200]
   13640:	tbnz	w0, #7, 13664 <Perl_re_exec_indentf@@Base+0x7494>
   13644:	ldrb	w0, [x21, #12]
   13648:	sub	w0, w0, #0xd
   1364c:	cmp	w0, #0x1
   13650:	b.hi	139a4 <Perl_re_exec_indentf@@Base+0x77d4>  // b.pmore
   13654:	ldr	x1, [x21]
   13658:	ldr	w0, [x1, #96]
   1365c:	add	w0, w0, #0x1
   13660:	str	w0, [x1, #96]
   13664:	ldrb	w0, [x21, #12]
   13668:	sub	w0, w0, #0xd
   1366c:	cmp	w0, #0x1
   13670:	b.hi	139c8 <Perl_re_exec_indentf@@Base+0x77f8>  // b.pmore
   13674:	ldr	x0, [x21]
   13678:	ldr	w2, [x0, #96]
   1367c:	cmp	w2, #0x1
   13680:	b.gt	139ec <Perl_re_exec_indentf@@Base+0x781c>
   13684:	ldr	x0, [sp, #248]
   13688:	ldr	x0, [x0, #8]
   1368c:	ldr	x1, [x21]
   13690:	ldrsw	x1, [x1, #96]
   13694:	ldr	x0, [x0, x1, lsl #3]
   13698:	str	x0, [x22, #304]
   1369c:	ldr	x0, [x0, #16]
   136a0:	str	x0, [x22, #16]
   136a4:	ldr	w0, [x22, #2368]
   136a8:	tbnz	w0, #14, 13a34 <Perl_re_exec_indentf@@Base+0x7864>
   136ac:	ldr	x1, [x22, #240]
   136b0:	ldrsw	x0, [x1, #32]
   136b4:	ldr	x1, [x1, #8]
   136b8:	add	x0, x0, x0, lsl #1
   136bc:	add	x0, x1, x0, lsl #5
   136c0:	ldr	w1, [sp, #408]
   136c4:	str	w1, [x0, #4]
   136c8:	ldr	x0, [x22, #304]
   136cc:	str	x0, [sp, #416]
   136d0:	ldr	x0, [sp, #192]
   136d4:	ldr	x0, [x0, #40]
   136d8:	ldrh	w1, [x0, #32]
   136dc:	tst	x1, #0x1ff
   136e0:	b.ne	13f84 <Perl_re_exec_indentf@@Base+0x7db4>  // b.any
   136e4:	ldr	x1, [x0, #24]
   136e8:	cmp	x1, #0xc8
   136ec:	b.eq	13fa8 <Perl_re_exec_indentf@@Base+0x7dd8>  // b.none
   136f0:	cmp	x1, #0xc7
   136f4:	b.ne	14070 <Perl_re_exec_indentf@@Base+0x7ea0>  // b.any
   136f8:	ldr	x2, [x0, #40]
   136fc:	ldrh	w0, [x2, #32]
   13700:	and	w0, w0, #0x1ff
   13704:	cmp	w0, #0xc6
   13708:	b.ne	14094 <Perl_re_exec_indentf@@Base+0x7ec4>  // b.any
   1370c:	ldrb	w0, [x2, #33]
   13710:	mov	x1, #0x0                   	// #0
   13714:	tbz	w0, #6, 13fac <Perl_re_exec_indentf@@Base+0x7ddc>
   13718:	ldr	x1, [x2, #8]
   1371c:	b	13fac <Perl_re_exec_indentf@@Base+0x7ddc>
   13720:	ldr	w0, [sp, #324]
   13724:	add	w0, w0, #0x1
   13728:	str	w0, [sp, #324]
   1372c:	ldr	w1, [sp, #436]
   13730:	cmp	w1, w0
   13734:	b.cs	13444 <Perl_re_exec_indentf@@Base+0x7274>  // b.hs, b.nlast
   13738:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   1373c:	add	x1, x1, #0xe58
   13740:	mov	x0, x22
   13744:	bl	5420 <Perl_croak@plt>
   13748:	str	wzr, [sp, #324]
   1374c:	b	13444 <Perl_re_exec_indentf@@Base+0x7274>
   13750:	mov	x1, #0x0                   	// #0
   13754:	mov	x0, x22
   13758:	bl	5620 <Perl_find_runcv@plt>
   1375c:	str	x0, [sp, #384]
   13760:	b	134ac <Perl_re_exec_indentf@@Base+0x72dc>
   13764:	add	x1, x2, w0, uxtw #3
   13768:	ldr	x1, [x1, #16]
   1376c:	ldr	x4, [x1]
   13770:	ldr	w1, [x1, #12]
   13774:	and	w3, w1, #0xff
   13778:	cmp	w3, #0x8
   1377c:	b.eq	137a8 <Perl_re_exec_indentf@@Base+0x75d8>  // b.none
   13780:	mov	w5, #0x80ff                	// #33023
   13784:	movk	w5, #0x100, lsl #16
   13788:	and	w1, w1, w5
   1378c:	mov	w5, #0xa                   	// #10
   13790:	movk	w5, #0x100, lsl #16
   13794:	cmp	w1, w5
   13798:	b.ne	137c0 <Perl_re_exec_indentf@@Base+0x75f0>  // b.any
   1379c:	cmp	w3, #0xa
   137a0:	b.ne	137a8 <Perl_re_exec_indentf@@Base+0x75d8>  // b.any
   137a4:	ldr	x4, [x4, #24]
   137a8:	ldr	x21, [x4, #192]
   137ac:	add	w1, w0, #0x1
   137b0:	add	x1, x1, #0x2
   137b4:	ldr	x0, [x2, x1, lsl #3]
   137b8:	str	x0, [sp, #192]
   137bc:	b	134ec <Perl_re_exec_indentf@@Base+0x731c>
   137c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   137c4:	add	x3, x3, #0x330
   137c8:	add	x3, x3, #0x3e0
   137cc:	mov	w2, #0xb6                  	// #182
   137d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   137d4:	add	x1, x1, #0xc80
   137d8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   137dc:	add	x0, x0, #0x128
   137e0:	bl	58e0 <__assert_fail@plt>
   137e4:	add	x0, x2, w0, uxtw #3
   137e8:	ldr	x0, [x0, #16]
   137ec:	str	x0, [sp, #192]
   137f0:	ldr	x0, [sp, #384]
   137f4:	ldrb	w0, [x0, #12]
   137f8:	sub	w0, w0, #0xd
   137fc:	cmp	w0, #0x1
   13800:	b.hi	13850 <Perl_re_exec_indentf@@Base+0x7680>  // b.pmore
   13804:	ldr	x0, [sp, #384]
   13808:	ldr	x0, [x0]
   1380c:	ldr	w0, [x0, #96]
   13810:	cbz	w0, 13874 <Perl_re_exec_indentf@@Base+0x76a4>
   13814:	ldr	x0, [sp, #384]
   13818:	mov	x21, x0
   1381c:	mov	w1, #0xc0                  	// #192
   13820:	str	w1, [sp, #200]
   13824:	ldr	x1, [sp, #336]
   13828:	cmp	x0, x1
   1382c:	b.ne	13510 <Perl_re_exec_indentf@@Base+0x7340>  // b.any
   13830:	ldr	x0, [x22, #304]
   13834:	ldr	x21, [sp, #336]
   13838:	mov	w1, #0xc0                  	// #192
   1383c:	str	w1, [sp, #200]
   13840:	ldr	x1, [sp, #416]
   13844:	cmp	x1, x0
   13848:	b.ne	13510 <Perl_re_exec_indentf@@Base+0x7340>  // b.any
   1384c:	b	136c8 <Perl_re_exec_indentf@@Base+0x74f8>
   13850:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13854:	add	x3, x3, #0x330
   13858:	add	x3, x3, #0xc90
   1385c:	mov	w2, #0x40                  	// #64
   13860:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13864:	add	x1, x1, #0xc80
   13868:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   1386c:	add	x0, x0, #0xe88
   13870:	bl	58e0 <__assert_fail@plt>
   13874:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13878:	add	x3, x3, #0x330
   1387c:	add	x3, x3, #0xc80
   13880:	mov	w2, #0x1c70                	// #7280
   13884:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13888:	add	x1, x1, #0xcb0
   1388c:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13890:	add	x0, x0, #0xec0
   13894:	bl	58e0 <__assert_fail@plt>
   13898:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1389c:	add	x3, x3, #0x330
   138a0:	add	x3, x3, #0xc80
   138a4:	mov	w2, #0x1c74                	// #7284
   138a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   138ac:	add	x1, x1, #0xcb0
   138b0:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   138b4:	add	x0, x0, #0xed0
   138b8:	bl	58e0 <__assert_fail@plt>
   138bc:	ldr	x0, [x22, #304]
   138c0:	ldr	x1, [sp, #416]
   138c4:	cmp	x0, x1
   138c8:	b.eq	13f7c <Perl_re_exec_indentf@@Base+0x7dac>  // b.none
   138cc:	ldr	x21, [sp, #336]
   138d0:	b	134f8 <Perl_re_exec_indentf@@Base+0x7328>
   138d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   138d8:	add	x3, x3, #0x330
   138dc:	add	x3, x3, #0xc80
   138e0:	mov	w2, #0x1cae                	// #7342
   138e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   138e8:	add	x1, x1, #0xcb0
   138ec:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   138f0:	add	x0, x0, #0xef0
   138f4:	bl	58e0 <__assert_fail@plt>
   138f8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   138fc:	add	x3, x3, #0x330
   13900:	add	x3, x3, #0xc80
   13904:	mov	w2, #0x1cae                	// #7342
   13908:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1390c:	add	x1, x1, #0xcb0
   13910:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13914:	add	x0, x0, #0xf40
   13918:	bl	58e0 <__assert_fail@plt>
   1391c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13920:	add	x3, x3, #0x330
   13924:	add	x3, x3, #0xca0
   13928:	mov	w2, #0x811                 	// #2065
   1392c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13930:	add	x1, x1, #0xc80
   13934:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13938:	add	x0, x0, #0xf50
   1393c:	bl	58e0 <__assert_fail@plt>
   13940:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13944:	add	x3, x3, #0x330
   13948:	add	x3, x3, #0xc90
   1394c:	mov	w2, #0x40                  	// #64
   13950:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13954:	add	x1, x1, #0xc80
   13958:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   1395c:	add	x0, x0, #0xe88
   13960:	bl	58e0 <__assert_fail@plt>
   13964:	mov	x0, x22
   13968:	bl	5860 <Perl_sv_free2@plt>
   1396c:	b	135b8 <Perl_re_exec_indentf@@Base+0x73e8>
   13970:	mov	x0, x22
   13974:	bl	50f0 <Perl_was_lvalue_sub@plt>
   13978:	and	w0, w0, #0xff
   1397c:	b	135f0 <Perl_re_exec_indentf@@Base+0x7420>
   13980:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13984:	add	x3, x3, #0x330
   13988:	add	x3, x3, #0xc90
   1398c:	mov	w2, #0x40                  	// #64
   13990:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13994:	add	x1, x1, #0xc80
   13998:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   1399c:	add	x0, x0, #0xe88
   139a0:	bl	58e0 <__assert_fail@plt>
   139a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   139a8:	add	x3, x3, #0x330
   139ac:	add	x3, x3, #0xc90
   139b0:	mov	w2, #0x40                  	// #64
   139b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   139b8:	add	x1, x1, #0xc80
   139bc:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   139c0:	add	x0, x0, #0xe88
   139c4:	bl	58e0 <__assert_fail@plt>
   139c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   139cc:	add	x3, x3, #0x330
   139d0:	add	x3, x3, #0xc90
   139d4:	mov	w2, #0x40                  	// #64
   139d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   139dc:	add	x1, x1, #0xc80
   139e0:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   139e4:	add	x0, x0, #0xe88
   139e8:	bl	58e0 <__assert_fail@plt>
   139ec:	ldr	x19, [sp, #248]
   139f0:	mov	x1, x19
   139f4:	mov	x0, x22
   139f8:	bl	5030 <Perl_pad_push@plt>
   139fc:	ldr	x0, [x19, #8]
   13a00:	ldrb	w1, [x21, #12]
   13a04:	sub	w1, w1, #0xd
   13a08:	cmp	w1, #0x1
   13a0c:	b.ls	1368c <Perl_re_exec_indentf@@Base+0x74bc>  // b.plast
   13a10:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13a14:	add	x3, x3, #0x330
   13a18:	add	x3, x3, #0xc90
   13a1c:	mov	w2, #0x40                  	// #64
   13a20:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13a24:	add	x1, x1, #0xc80
   13a28:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13a2c:	add	x0, x0, #0xe88
   13a30:	bl	58e0 <__assert_fail@plt>
   13a34:	ldr	w0, [x22, #2368]
   13a38:	tbz	w0, #20, 136ac <Perl_re_exec_indentf@@Base+0x74dc>
   13a3c:	mov	x0, x22
   13a40:	bl	58f0 <Perl_PerlIO_stderr@plt>
   13a44:	ldr	x2, [x22, #304]
   13a48:	ldr	x3, [x22, #16]
   13a4c:	ldrb	w1, [x21, #12]
   13a50:	sub	w1, w1, #0xd
   13a54:	cmp	w1, #0x1
   13a58:	b.hi	13a74 <Perl_re_exec_indentf@@Base+0x78a4>  // b.pmore
   13a5c:	ldr	x1, [x21]
   13a60:	ldr	w4, [x1, #96]
   13a64:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13a68:	add	x1, x1, #0xf68
   13a6c:	bl	5730 <PerlIO_printf@plt>
   13a70:	b	136ac <Perl_re_exec_indentf@@Base+0x74dc>
   13a74:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13a78:	add	x3, x3, #0x330
   13a7c:	add	x3, x3, #0xc90
   13a80:	mov	w2, #0x40                  	// #64
   13a84:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13a88:	add	x1, x1, #0xc80
   13a8c:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13a90:	add	x0, x0, #0xe88
   13a94:	bl	58e0 <__assert_fail@plt>
   13a98:	ldr	x0, [x21]
   13a9c:	ldr	w1, [x0, #92]
   13aa0:	tbnz	w1, #3, 13d60 <Perl_re_exec_indentf@@Base+0x7b90>
   13aa4:	ldr	x0, [x0, #72]
   13aa8:	str	x0, [sp, #272]
   13aac:	ldr	x4, [x22, #760]
   13ab0:	ldrb	w0, [x4, #324]
   13ab4:	str	w0, [sp, #412]
   13ab8:	ldr	w0, [x22, #2368]
   13abc:	tbnz	w0, #2, 13d84 <Perl_re_exec_indentf@@Base+0x7bb4>
   13ac0:	ldr	x0, [x22, #760]
   13ac4:	mov	w1, #0x1                   	// #1
   13ac8:	strb	w1, [x0, #324]
   13acc:	ldr	x0, [x22, #240]
   13ad0:	ldr	x19, [x0, #24]
   13ad4:	ldr	w1, [x22, #2368]
   13ad8:	tbnz	w1, #2, 13dac <Perl_re_exec_indentf@@Base+0x7bdc>
   13adc:	cbz	x19, 13ddc <Perl_re_exec_indentf@@Base+0x7c0c>
   13ae0:	mov	w0, #0xa                   	// #10
   13ae4:	str	w0, [x19, #40]
   13ae8:	mov	w0, #0xffffffff            	// #-1
   13aec:	str	w0, [x19, #32]
   13af0:	ldr	x0, [x19]
   13af4:	ldr	x0, [x0]
   13af8:	str	xzr, [x0, #16]
   13afc:	ldr	x0, [x22, #232]
   13b00:	ldr	x1, [x0]
   13b04:	ldr	x0, [x22, #24]
   13b08:	ldr	x2, [sp, #216]
   13b0c:	sub	x0, x2, x0
   13b10:	asr	x0, x0, #3
   13b14:	str	x0, [x1, #16]
   13b18:	ldr	x0, [x19]
   13b1c:	ldr	x1, [x0, #16]
   13b20:	str	x1, [x22, #24]
   13b24:	ldr	x0, [x19]
   13b28:	ldr	x0, [x0]
   13b2c:	ldr	x0, [x0, #24]
   13b30:	add	x0, x1, x0, lsl #3
   13b34:	str	x0, [x22, #32]
   13b38:	ldr	x0, [x19]
   13b3c:	ldr	x0, [x0]
   13b40:	ldr	x0, [x0, #16]
   13b44:	add	x0, x1, x0, lsl #3
   13b48:	str	x0, [sp, #216]
   13b4c:	str	x0, [x22]
   13b50:	ldr	x0, [x19]
   13b54:	str	x0, [x22, #232]
   13b58:	str	x19, [x22, #240]
   13b5c:	ldr	x0, [x22, #120]
   13b60:	ldr	x1, [x22, #112]
   13b64:	sub	x0, x0, x1
   13b68:	asr	x0, x0, #2
   13b6c:	str	w0, [x19, #44]
   13b70:	mov	w0, #0x19                  	// #25
   13b74:	ldr	w1, [sp, #200]
   13b78:	orr	w0, w1, w0
   13b7c:	str	w0, [sp, #248]
   13b80:	ldr	x20, [x22]
   13b84:	ldr	w0, [x22, #48]
   13b88:	str	w0, [sp, #264]
   13b8c:	cbz	x20, 13e00 <Perl_re_exec_indentf@@Base+0x7c30>
   13b90:	ldr	x19, [x22, #240]
   13b94:	ldr	w0, [x19, #32]
   13b98:	ldr	w1, [x19, #36]
   13b9c:	cmp	w0, w1
   13ba0:	b.ge	13e24 <Perl_re_exec_indentf@@Base+0x7c54>  // b.tcont
   13ba4:	add	w0, w0, #0x1
   13ba8:	str	w0, [x19, #32]
   13bac:	ldr	x1, [x22, #240]
   13bb0:	ldrsw	x0, [x1, #32]
   13bb4:	add	x0, x0, x0, lsl #1
   13bb8:	lsl	x0, x0, #5
   13bbc:	ldr	x2, [x1, #8]
   13bc0:	add	x19, x2, x0
   13bc4:	ldrb	w1, [sp, #248]
   13bc8:	strb	w1, [x2, x0]
   13bcc:	mov	w1, #0x2                   	// #2
   13bd0:	strb	w1, [x19, #1]
   13bd4:	ldr	w1, [sp, #264]
   13bd8:	str	w1, [x19, #4]
   13bdc:	ldr	x1, [x22, #24]
   13be0:	sub	x1, x20, x1
   13be4:	asr	x1, x1, #3
   13be8:	str	w1, [x19, #8]
   13bec:	ldr	x1, [x22, #224]
   13bf0:	str	x1, [x19, #16]
   13bf4:	ldr	x1, [x22, #120]
   13bf8:	ldr	x3, [x22, #112]
   13bfc:	sub	x1, x1, x3
   13c00:	asr	x1, x1, #2
   13c04:	str	w1, [x19, #12]
   13c08:	ldr	w1, [x22, #64]
   13c0c:	str	w1, [x19, #40]
   13c10:	ldr	x1, [x22, #168]
   13c14:	str	x1, [x19, #24]
   13c18:	ldr	x1, [x22, #88]
   13c1c:	str	x1, [x19, #32]
   13c20:	ldr	x1, [x22, #80]
   13c24:	str	x1, [x22, #88]
   13c28:	ldr	w1, [x22, #2368]
   13c2c:	tbnz	w1, #2, 13e34 <Perl_re_exec_indentf@@Base+0x7c64>
   13c30:	ldr	x1, [x22, #8]
   13c34:	ldrb	w2, [x1, #34]
   13c38:	mov	w0, #0x81                  	// #129
   13c3c:	tst	x2, #0x3
   13c40:	b.ne	13c54 <Perl_re_exec_indentf@@Base+0x7a84>  // b.any
   13c44:	ldrb	w0, [x1, #35]
   13c48:	and	w0, w0, #0xffffff81
   13c4c:	ands	w0, w0, #0xff
   13c50:	b.ne	13e94 <Perl_re_exec_indentf@@Base+0x7cc4>  // b.any
   13c54:	str	x21, [x19, #64]
   13c58:	ldrb	w1, [x21, #12]
   13c5c:	sub	w1, w1, #0xd
   13c60:	cmp	w1, #0x1
   13c64:	b.hi	13ea4 <Perl_re_exec_indentf@@Base+0x7cd4>  // b.pmore
   13c68:	ldr	x1, [x21]
   13c6c:	ldr	w1, [x1, #96]
   13c70:	str	w1, [x19, #72]
   13c74:	ldr	x1, [x22, #304]
   13c78:	str	x1, [x19, #56]
   13c7c:	str	xzr, [x19, #48]
   13c80:	ldr	w1, [x21, #8]
   13c84:	add	w1, w1, #0x1
   13c88:	str	w1, [x21, #8]
   13c8c:	ldr	x1, [x22, #8]
   13c90:	orr	w0, w0, #0x30
   13c94:	ldrb	w1, [x1, #35]
   13c98:	and	w0, w0, w1
   13c9c:	strh	w0, [x19, #2]
   13ca0:	mov	w2, #0x12                  	// #18
   13ca4:	ldr	x1, [x22, #8]
   13ca8:	mov	x0, x22
   13cac:	bl	54b0 <Perl_save_pushptr@plt>
   13cb0:	ldr	x0, [sp, #200]
   13cb4:	tbnz	w0, #7, 13cd8 <Perl_re_exec_indentf@@Base+0x7b08>
   13cb8:	ldrb	w0, [x21, #12]
   13cbc:	sub	w0, w0, #0xd
   13cc0:	cmp	w0, #0x1
   13cc4:	b.hi	13ec8 <Perl_re_exec_indentf@@Base+0x7cf8>  // b.pmore
   13cc8:	ldr	x1, [x21]
   13ccc:	ldr	w0, [x1, #96]
   13cd0:	add	w0, w0, #0x1
   13cd4:	str	w0, [x1, #96]
   13cd8:	ldrb	w0, [x21, #12]
   13cdc:	sub	w0, w0, #0xd
   13ce0:	cmp	w0, #0x1
   13ce4:	b.hi	13eec <Perl_re_exec_indentf@@Base+0x7d1c>  // b.pmore
   13ce8:	ldr	x0, [x21]
   13cec:	ldr	w2, [x0, #96]
   13cf0:	cmp	w2, #0x1
   13cf4:	b.gt	13f10 <Perl_re_exec_indentf@@Base+0x7d40>
   13cf8:	ldr	x0, [sp, #272]
   13cfc:	ldr	x1, [x0, #8]
   13d00:	ldr	x0, [x21]
   13d04:	ldrsw	x0, [x0, #96]
   13d08:	ldr	x0, [x1, x0, lsl #3]
   13d0c:	str	x0, [x22, #304]
   13d10:	ldr	x0, [x0, #16]
   13d14:	str	x0, [x22, #16]
   13d18:	ldr	w0, [x22, #2368]
   13d1c:	tbz	w0, #14, 136ac <Perl_re_exec_indentf@@Base+0x74dc>
   13d20:	ldr	w0, [x22, #2368]
   13d24:	tbz	w0, #20, 136ac <Perl_re_exec_indentf@@Base+0x74dc>
   13d28:	mov	x0, x22
   13d2c:	bl	58f0 <Perl_PerlIO_stderr@plt>
   13d30:	ldr	x2, [x22, #304]
   13d34:	ldr	x3, [x22, #16]
   13d38:	ldrb	w1, [x21, #12]
   13d3c:	sub	w1, w1, #0xd
   13d40:	cmp	w1, #0x1
   13d44:	b.hi	13f58 <Perl_re_exec_indentf@@Base+0x7d88>  // b.pmore
   13d48:	ldr	x1, [x21]
   13d4c:	ldr	w4, [x1, #96]
   13d50:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13d54:	add	x1, x1, #0xf68
   13d58:	bl	5730 <PerlIO_printf@plt>
   13d5c:	b	136ac <Perl_re_exec_indentf@@Base+0x74dc>
   13d60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13d64:	add	x3, x3, #0x330
   13d68:	add	x3, x3, #0xc80
   13d6c:	mov	w2, #0x1cb1                	// #7345
   13d70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13d74:	add	x1, x1, #0xcb0
   13d78:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13d7c:	add	x0, x0, #0xef0
   13d80:	bl	58e0 <__assert_fail@plt>
   13d84:	mov	w6, #0x1cb1                	// #7345
   13d88:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   13d8c:	add	x5, x5, #0xcb0
   13d90:	mov	w3, #0x1                   	// #1
   13d94:	ldr	w2, [sp, #412]
   13d98:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13d9c:	add	x1, x1, #0xf90
   13da0:	mov	x0, x22
   13da4:	bl	4f70 <Perl_deb@plt>
   13da8:	b	13ac0 <Perl_re_exec_indentf@@Base+0x78f0>
   13dac:	mov	w2, #0x0                   	// #0
   13db0:	add	w2, w2, #0x1
   13db4:	ldr	x0, [x0, #16]
   13db8:	cbnz	x0, 13db0 <Perl_re_exec_indentf@@Base+0x7be0>
   13dbc:	mov	w4, #0x1cb1                	// #7345
   13dc0:	adrp	x3, 61000 <my_regfree@@Base+0x250>
   13dc4:	add	x3, x3, #0xcb0
   13dc8:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13dcc:	add	x1, x1, #0xfc0
   13dd0:	mov	x0, x22
   13dd4:	bl	4f70 <Perl_deb@plt>
   13dd8:	b	13adc <Perl_re_exec_indentf@@Base+0x790c>
   13ddc:	mov	w2, #0x14                  	// #20
   13de0:	mov	w1, #0x20                  	// #32
   13de4:	mov	x0, x22
   13de8:	bl	5520 <Perl_new_stackinfo@plt>
   13dec:	mov	x19, x0
   13df0:	ldr	x0, [x22, #240]
   13df4:	str	x0, [x19, #16]
   13df8:	str	x19, [x0, #24]
   13dfc:	b	13ae0 <Perl_re_exec_indentf@@Base+0x7910>
   13e00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13e04:	add	x3, x3, #0x330
   13e08:	add	x3, x3, #0xcb8
   13e0c:	mov	w2, #0x7b9                 	// #1977
   13e10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13e14:	add	x1, x1, #0xc80
   13e18:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13e1c:	add	x0, x0, #0xfe0
   13e20:	bl	58e0 <__assert_fail@plt>
   13e24:	mov	x0, x22
   13e28:	bl	52f0 <Perl_cxinc@plt>
   13e2c:	str	w0, [x19, #32]
   13e30:	b	13bac <Perl_re_exec_indentf@@Base+0x79dc>
   13e34:	ldrsw	x6, [x19, #40]
   13e38:	ldrb	w1, [x2, x0]
   13e3c:	and	x1, x1, #0xf
   13e40:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   13e44:	ldr	x0, [x0, #3728]
   13e48:	ldr	x4, [x0, x1, lsl #3]
   13e4c:	ldr	x0, [x22, #240]
   13e50:	ldrsw	x2, [x0, #32]
   13e54:	mov	w0, #0x7c8                 	// #1992
   13e58:	str	w0, [sp, #16]
   13e5c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   13e60:	add	x0, x0, #0xc80
   13e64:	str	x0, [sp, #8]
   13e68:	ldrsw	x0, [x19, #4]
   13e6c:	str	x0, [sp]
   13e70:	ldrsw	x7, [x22, #48]
   13e74:	ldrsw	x5, [x22, #64]
   13e78:	adrp	x3, 67000 <boot_re@@Base+0x541c>
   13e7c:	add	x3, x3, #0xfe8
   13e80:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   13e84:	add	x1, x1, #0xff0
   13e88:	mov	x0, x22
   13e8c:	bl	4f70 <Perl_deb@plt>
   13e90:	b	13c30 <Perl_re_exec_indentf@@Base+0x7a60>
   13e94:	mov	x0, x22
   13e98:	bl	50f0 <Perl_was_lvalue_sub@plt>
   13e9c:	and	w0, w0, #0xff
   13ea0:	b	13c54 <Perl_re_exec_indentf@@Base+0x7a84>
   13ea4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13ea8:	add	x3, x3, #0x330
   13eac:	add	x3, x3, #0xc90
   13eb0:	mov	w2, #0x40                  	// #64
   13eb4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13eb8:	add	x1, x1, #0xc80
   13ebc:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13ec0:	add	x0, x0, #0xe88
   13ec4:	bl	58e0 <__assert_fail@plt>
   13ec8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13ecc:	add	x3, x3, #0x330
   13ed0:	add	x3, x3, #0xc90
   13ed4:	mov	w2, #0x40                  	// #64
   13ed8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13edc:	add	x1, x1, #0xc80
   13ee0:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13ee4:	add	x0, x0, #0xe88
   13ee8:	bl	58e0 <__assert_fail@plt>
   13eec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13ef0:	add	x3, x3, #0x330
   13ef4:	add	x3, x3, #0xc90
   13ef8:	mov	w2, #0x40                  	// #64
   13efc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13f00:	add	x1, x1, #0xc80
   13f04:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13f08:	add	x0, x0, #0xe88
   13f0c:	bl	58e0 <__assert_fail@plt>
   13f10:	ldr	x19, [sp, #272]
   13f14:	mov	x1, x19
   13f18:	mov	x0, x22
   13f1c:	bl	5030 <Perl_pad_push@plt>
   13f20:	ldr	x1, [x19, #8]
   13f24:	ldrb	w0, [x21, #12]
   13f28:	sub	w0, w0, #0xd
   13f2c:	cmp	w0, #0x1
   13f30:	b.ls	13d00 <Perl_re_exec_indentf@@Base+0x7b30>  // b.plast
   13f34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13f38:	add	x3, x3, #0x330
   13f3c:	add	x3, x3, #0xc90
   13f40:	mov	w2, #0x40                  	// #64
   13f44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13f48:	add	x1, x1, #0xc80
   13f4c:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13f50:	add	x0, x0, #0xe88
   13f54:	bl	58e0 <__assert_fail@plt>
   13f58:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13f5c:	add	x3, x3, #0x330
   13f60:	add	x3, x3, #0xc90
   13f64:	mov	w2, #0x40                  	// #64
   13f68:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13f6c:	add	x1, x1, #0xc80
   13f70:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   13f74:	add	x0, x0, #0xe88
   13f78:	bl	58e0 <__assert_fail@plt>
   13f7c:	ldr	x21, [sp, #336]
   13f80:	b	136c8 <Perl_re_exec_indentf@@Base+0x74f8>
   13f84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   13f88:	add	x3, x3, #0x330
   13f8c:	add	x3, x3, #0xc80
   13f90:	mov	w2, #0x1cc6                	// #7366
   13f94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   13f98:	add	x1, x1, #0xcb0
   13f9c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   13fa0:	add	x0, x0, #0x28
   13fa4:	bl	58e0 <__assert_fail@plt>
   13fa8:	ldr	x1, [x0, #40]
   13fac:	ldrh	w0, [x1, #32]
   13fb0:	and	w0, w0, #0x1ff
   13fb4:	cmp	w0, #0x1
   13fb8:	b.eq	13fe4 <Perl_re_exec_indentf@@Base+0x7e14>  // b.none
   13fbc:	sub	w2, w0, #0xc3
   13fc0:	and	w2, w2, #0xffff
   13fc4:	cmp	w2, #0x1
   13fc8:	b.ls	13fe0 <Perl_re_exec_indentf@@Base+0x7e10>  // b.plast
   13fcc:	cbnz	w0, 140b8 <Perl_re_exec_indentf@@Base+0x7ee8>
   13fd0:	ldr	x0, [x1, #24]
   13fd4:	sub	x0, x0, #0xc3
   13fd8:	cmp	x0, #0x1
   13fdc:	b.hi	140b8 <Perl_re_exec_indentf@@Base+0x7ee8>  // b.pmore
   13fe0:	str	x1, [x22, #224]
   13fe4:	ldr	x0, [sp, #192]
   13fe8:	ldr	x20, [x0]
   13fec:	ldr	w0, [x22, #2368]
   13ff0:	tbnz	w0, #20, 13ffc <Perl_re_exec_indentf@@Base+0x7e2c>
   13ff4:	ldr	x0, [sp, #464]
   13ff8:	tbz	w0, #19, 14010 <Perl_re_exec_indentf@@Base+0x7e40>
   13ffc:	mov	x2, x20
   14000:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   14004:	add	x1, x1, #0x108
   14008:	mov	x0, x22
   1400c:	bl	50e0 <Perl_re_printf@plt>
   14010:	ldr	x0, [sp, #152]
   14014:	ldr	x1, [x0, #120]
   14018:	ldr	x0, [x27, #8]
   1401c:	sub	x0, x23, x0
   14020:	str	x0, [x1, #8]
   14024:	ldr	x0, [x27, #64]
   14028:	ldr	x2, [x0, #64]
   1402c:	cbz	x2, 141b4 <Perl_re_exec_indentf@@Base+0x7fe4>
   14030:	ldrb	w0, [x2, #18]
   14034:	cmp	w0, #0x67
   14038:	b.ne	140dc <Perl_re_exec_indentf@@Base+0x7f0c>  // b.any
   1403c:	ldr	x0, [x27, #32]
   14040:	ldr	w3, [x0, #12]
   14044:	tbz	w3, #10, 14168 <Perl_re_exec_indentf@@Base+0x7f98>
   14048:	tbnz	w3, #21, 14100 <Perl_re_exec_indentf@@Base+0x7f30>
   1404c:	ldr	x0, [x27, #8]
   14050:	sub	x0, x23, x0
   14054:	str	x0, [x2, #24]
   14058:	ldr	x0, [x27, #64]
   1405c:	ldr	x1, [x0, #64]
   14060:	ldrb	w0, [x1, #19]
   14064:	orr	w0, w0, #0x40
   14068:	strb	w0, [x1, #19]
   1406c:	b	141b4 <Perl_re_exec_indentf@@Base+0x7fe4>
   14070:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14074:	add	x3, x3, #0x330
   14078:	add	x3, x3, #0xc80
   1407c:	mov	w2, #0x1ccb                	// #7371
   14080:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14084:	add	x1, x1, #0xcb0
   14088:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1408c:	add	x0, x0, #0x40
   14090:	bl	58e0 <__assert_fail@plt>
   14094:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14098:	add	x3, x3, #0x330
   1409c:	add	x3, x3, #0xc80
   140a0:	mov	w2, #0x1ccd                	// #7373
   140a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   140a8:	add	x1, x1, #0xcb0
   140ac:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   140b0:	add	x0, x0, #0x58
   140b4:	bl	58e0 <__assert_fail@plt>
   140b8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   140bc:	add	x3, x3, #0x330
   140c0:	add	x3, x3, #0xc80
   140c4:	mov	w2, #0x1cd2                	// #7378
   140c8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   140cc:	add	x1, x1, #0xcb0
   140d0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   140d4:	add	x0, x0, #0x70
   140d8:	bl	58e0 <__assert_fail@plt>
   140dc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   140e0:	add	x3, x3, #0x330
   140e4:	add	x3, x3, #0xc80
   140e8:	mov	w2, #0x1ce4                	// #7396
   140ec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   140f0:	add	x1, x1, #0xcb0
   140f4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   140f8:	add	x0, x0, #0x120
   140fc:	bl	58e0 <__assert_fail@plt>
   14100:	and	w1, w3, #0xff
   14104:	cmp	w1, #0x6
   14108:	b.ls	1411c <Perl_re_exec_indentf@@Base+0x7f4c>  // b.plast
   1410c:	ldr	x0, [x0]
   14110:	ldr	x0, [x0, #8]
   14114:	cbnz	x0, 14148 <Perl_re_exec_indentf@@Base+0x7f78>
   14118:	b	1404c <Perl_re_exec_indentf@@Base+0x7e7c>
   1411c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14120:	add	x3, x3, #0x330
   14124:	add	x3, x3, #0xcc8
   14128:	mov	w2, #0x79f                 	// #1951
   1412c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14130:	add	x1, x1, #0xc80
   14134:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14138:	add	x0, x0, #0xef8
   1413c:	bl	58e0 <__assert_fail@plt>
   14140:	ldr	x0, [x0]
   14144:	cbz	x0, 1404c <Perl_re_exec_indentf@@Base+0x7e7c>
   14148:	ldrb	w1, [x0, #18]
   1414c:	cmp	w1, #0x74
   14150:	b.eq	14140 <Perl_re_exec_indentf@@Base+0x7f70>  // b.none
   14154:	ldrb	w1, [x0, #19]
   14158:	tbnz	w1, #2, 14140 <Perl_re_exec_indentf@@Base+0x7f70>
   1415c:	ldr	x1, [x0, #8]
   14160:	ldr	x1, [x1]
   14164:	cbz	x1, 14140 <Perl_re_exec_indentf@@Base+0x7f70>
   14168:	tbz	w3, #29, 1418c <Perl_re_exec_indentf@@Base+0x7fbc>
   1416c:	ldr	x0, [x22, #224]
   14170:	ldr	w0, [x0, #56]
   14174:	tbnz	w0, #3, 1418c <Perl_re_exec_indentf@@Base+0x7fbc>
   14178:	mov	x2, x23
   1417c:	ldr	x1, [x27, #8]
   14180:	mov	x0, x22
   14184:	bl	5720 <Perl_utf8_length@plt>
   14188:	b	14194 <Perl_re_exec_indentf@@Base+0x7fc4>
   1418c:	ldr	x0, [x27, #8]
   14190:	sub	x0, x23, x0
   14194:	ldr	x1, [x27, #64]
   14198:	ldr	x1, [x1, #64]
   1419c:	str	x0, [x1, #24]
   141a0:	ldr	x0, [x27, #64]
   141a4:	ldr	x1, [x0, #64]
   141a8:	ldrb	w0, [x1, #19]
   141ac:	and	w0, w0, #0xffffffbf
   141b0:	strb	w0, [x1, #19]
   141b4:	ldr	x19, [sp, #304]
   141b8:	cbz	x19, 141e4 <Perl_re_exec_indentf@@Base+0x8014>
   141bc:	mov	w2, #0x1                   	// #1
   141c0:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   141c4:	add	x1, x1, #0x158
   141c8:	mov	x0, x22
   141cc:	bl	54f0 <Perl_get_sv@plt>
   141d0:	mov	w3, #0x2                   	// #2
   141d4:	mov	x2, x19
   141d8:	mov	x1, x0
   141dc:	mov	x0, x22
   141e0:	bl	55b0 <Perl_sv_setsv_flags@plt>
   141e4:	ldr	x19, [x22, #24]
   141e8:	ldr	x0, [sp, #216]
   141ec:	sub	x19, x0, x19
   141f0:	str	x20, [x22, #8]
   141f4:	ldr	x1, [x22, #2376]
   141f8:	mov	x0, x22
   141fc:	blr	x1
   14200:	ldr	x0, [x22]
   14204:	ldr	x1, [x22, #24]
   14208:	sub	x1, x0, x1
   1420c:	cmp	x19, x1
   14210:	b.eq	142f4 <Perl_re_exec_indentf@@Base+0x8124>  // b.none
   14214:	ldr	x1, [x0], #-8
   14218:	str	x1, [sp, #480]
   1421c:	str	x0, [x22]
   14220:	str	xzr, [x22, #8]
   14224:	ldr	w0, [sp, #312]
   14228:	cbz	w0, 14300 <Perl_re_exec_indentf@@Base+0x8130>
   1422c:	ldr	w0, [sp, #312]
   14230:	cmp	w0, #0x1
   14234:	b.eq	14394 <Perl_re_exec_indentf@@Base+0x81c4>  // b.none
   14238:	ldr	x1, [sp, #480]
   1423c:	ldr	w0, [x1, #12]
   14240:	tbnz	w0, #21, 14678 <Perl_re_exec_indentf@@Base+0x84a8>
   14244:	ldr	x0, [sp, #480]
   14248:	ldr	w1, [x0, #12]
   1424c:	tbz	w1, #11, 147c8 <Perl_re_exec_indentf@@Base+0x85f8>
   14250:	and	w3, w1, #0xf
   14254:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   14258:	ldr	x2, [x2, #3840]
   1425c:	ldrb	w2, [x2, w3, uxtw]
   14260:	cbz	w2, 1468c <Perl_re_exec_indentf@@Base+0x84bc>
   14264:	and	w4, w1, #0xc000
   14268:	cmp	w4, #0x8, lsl #12
   1426c:	b.eq	146b0 <Perl_re_exec_indentf@@Base+0x84e0>  // b.none
   14270:	and	w2, w1, #0xff
   14274:	cmp	w2, #0xf
   14278:	b.eq	146e4 <Perl_re_exec_indentf@@Base+0x8514>  // b.none
   1427c:	ldr	x19, [x0, #16]
   14280:	ldr	w3, [x19, #12]
   14284:	tbz	w3, #20, 142b4 <Perl_re_exec_indentf@@Base+0x80e4>
   14288:	cmp	w4, #0x8, lsl #12
   1428c:	b.eq	14714 <Perl_re_exec_indentf@@Base+0x8544>  // b.none
   14290:	cmp	w2, #0xf
   14294:	b.eq	14744 <Perl_re_exec_indentf@@Base+0x8574>  // b.none
   14298:	and	w3, w3, #0xff
   1429c:	cmp	w3, #0x6
   142a0:	b.ls	14774 <Perl_re_exec_indentf@@Base+0x85a4>  // b.plast
   142a4:	ldr	x3, [x19]
   142a8:	ldr	x3, [x3]
   142ac:	ldr	w3, [x3, #12]
   142b0:	tbnz	w3, #28, 147ec <Perl_re_exec_indentf@@Base+0x861c>
   142b4:	cmp	w4, #0x8, lsl #12
   142b8:	b.eq	14798 <Perl_re_exec_indentf@@Base+0x85c8>  // b.none
   142bc:	cmp	w2, #0xf
   142c0:	b.ne	147cc <Perl_re_exec_indentf@@Base+0x85fc>  // b.any
   142c4:	ldr	x2, [x0]
   142c8:	ldrb	w2, [x2, #129]
   142cc:	tbnz	w2, #6, 147cc <Perl_re_exec_indentf@@Base+0x85fc>
   142d0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   142d4:	add	x3, x3, #0x330
   142d8:	add	x3, x3, #0xc80
   142dc:	mov	w2, #0x1d15                	// #7445
   142e0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   142e4:	add	x1, x1, #0xcb0
   142e8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   142ec:	add	x0, x0, #0x1a8
   142f0:	bl	58e0 <__assert_fail@plt>
   142f4:	add	x0, x22, #0x150
   142f8:	str	x0, [sp, #480]
   142fc:	b	14220 <Perl_re_exec_indentf@@Base+0x8050>
   14300:	ldr	x1, [x22, #1736]
   14304:	mov	x0, x22
   14308:	bl	59f0 <Perl_save_scalar@plt>
   1430c:	mov	x19, x0
   14310:	mov	w3, #0x2                   	// #2
   14314:	ldr	x2, [sp, #480]
   14318:	mov	x1, x0
   1431c:	mov	x0, x22
   14320:	bl	55b0 <Perl_sv_setsv_flags@plt>
   14324:	ldr	w0, [x19, #12]
   14328:	tbnz	w0, #22, 14384 <Perl_re_exec_indentf@@Base+0x81b4>
   1432c:	ldr	x0, [sp, #224]
   14330:	str	x0, [x22, #8]
   14334:	ldr	x0, [sp, #240]
   14338:	str	x0, [x22, #224]
   1433c:	mov	w4, w26
   14340:	add	x3, sp, #0x1c4
   14344:	ldr	w2, [x25, #68]
   14348:	ldr	x1, [sp, #152]
   1434c:	mov	x0, x22
   14350:	bl	c794 <Perl_re_exec_indentf@@Base+0x5c4>
   14354:	ldr	x0, [x22, #168]
   14358:	str	x0, [x22, #176]
   1435c:	ldr	x0, [x22, #280]
   14360:	str	x0, [x22, #168]
   14364:	str	wzr, [sp, #312]
   14368:	mov	w0, #0x68                  	// #104
   1436c:	str	w0, [x25]
   14370:	str	x21, [sp, #336]
   14374:	ldr	x0, [sp, #128]
   14378:	str	x0, [sp, #200]
   1437c:	str	x23, [sp, #192]
   14380:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   14384:	mov	x1, x19
   14388:	mov	x0, x22
   1438c:	bl	5590 <Perl_mg_set@plt>
   14390:	b	1432c <Perl_re_exec_indentf@@Base+0x815c>
   14394:	ldr	x1, [sp, #480]
   14398:	ldr	w0, [x1, #12]
   1439c:	tbnz	w0, #21, 143e4 <Perl_re_exec_indentf@@Base+0x8214>
   143a0:	ldr	x1, [sp, #480]
   143a4:	add	x2, x22, #0x138
   143a8:	sub	x0, x1, x2
   143ac:	asr	x0, x0, #3
   143b0:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   143b4:	movk	x3, #0xaaab
   143b8:	mul	x0, x0, x3
   143bc:	cmp	x0, #0x3
   143c0:	b.hi	143f0 <Perl_re_exec_indentf@@Base+0x8220>  // b.pmore
   143c4:	cmp	x1, x2
   143c8:	cset	w0, eq  // eq = none
   143cc:	str	w0, [sp, #312]
   143d0:	ldr	w0, [sp, #312]
   143d4:	cmp	w0, #0x0
   143d8:	cset	w0, ne  // ne = any
   143dc:	str	w0, [sp, #320]
   143e0:	b	1432c <Perl_re_exec_indentf@@Base+0x815c>
   143e4:	mov	x0, x22
   143e8:	bl	55e0 <Perl_mg_get@plt>
   143ec:	b	143a0 <Perl_re_exec_indentf@@Base+0x81d0>
   143f0:	ldr	w0, [x1, #12]
   143f4:	tst	w0, #0xff00
   143f8:	b.eq	14670 <Perl_re_exec_indentf@@Base+0x84a0>  // b.none
   143fc:	tbz	w0, #10, 14450 <Perl_re_exec_indentf@@Base+0x8280>
   14400:	ldr	x0, [x1]
   14404:	cbz	x0, 14448 <Perl_re_exec_indentf@@Base+0x8278>
   14408:	ldr	x0, [x0, #16]
   1440c:	cmp	x0, #0x1
   14410:	b.ls	14428 <Perl_re_exec_indentf@@Base+0x8258>  // b.plast
   14414:	ldr	w0, [sp, #312]
   14418:	cmp	w0, #0x0
   1441c:	cset	w0, ne  // ne = any
   14420:	str	w0, [sp, #312]
   14424:	b	143d0 <Perl_re_exec_indentf@@Base+0x8200>
   14428:	str	wzr, [sp, #312]
   1442c:	cbz	x0, 14414 <Perl_re_exec_indentf@@Base+0x8244>
   14430:	ldr	x0, [x1, #16]
   14434:	ldrb	w0, [x0]
   14438:	cmp	w0, #0x30
   1443c:	cset	w0, ne  // ne = any
   14440:	str	w0, [sp, #312]
   14444:	b	14414 <Perl_re_exec_indentf@@Base+0x8244>
   14448:	str	wzr, [sp, #312]
   1444c:	b	14414 <Perl_re_exec_indentf@@Base+0x8244>
   14450:	tbz	w0, #8, 144e4 <Perl_re_exec_indentf@@Base+0x8314>
   14454:	and	w3, w0, #0xf
   14458:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1445c:	ldr	x2, [x2, #3712]
   14460:	ldrb	w2, [x2, w3, uxtw]
   14464:	cbz	w2, 1448c <Perl_re_exec_indentf@@Base+0x82bc>
   14468:	and	w2, w0, #0xc000
   1446c:	cmp	w2, #0x8, lsl #12
   14470:	b.eq	144b0 <Perl_re_exec_indentf@@Base+0x82e0>  // b.none
   14474:	ldr	x0, [x1]
   14478:	ldr	x0, [x0, #32]
   1447c:	cmp	x0, #0x0
   14480:	cset	w0, ne  // ne = any
   14484:	str	w0, [sp, #312]
   14488:	b	143d0 <Perl_re_exec_indentf@@Base+0x8200>
   1448c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14490:	add	x3, x3, #0x330
   14494:	add	x3, x3, #0xc80
   14498:	mov	w2, #0x1d0a                	// #7434
   1449c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   144a0:	add	x1, x1, #0xcb0
   144a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   144a8:	add	x0, x0, #0xda0
   144ac:	bl	58e0 <__assert_fail@plt>
   144b0:	and	w0, w0, #0xff
   144b4:	sub	w0, w0, #0x9
   144b8:	cmp	w0, #0x1
   144bc:	b.hi	14474 <Perl_re_exec_indentf@@Base+0x82a4>  // b.pmore
   144c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   144c4:	add	x3, x3, #0x330
   144c8:	add	x3, x3, #0xc80
   144cc:	mov	w2, #0x1d0a                	// #7434
   144d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   144d4:	add	x1, x1, #0xcb0
   144d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   144dc:	add	x0, x0, #0xdd0
   144e0:	bl	58e0 <__assert_fail@plt>
   144e4:	tbz	w0, #11, 1454c <Perl_re_exec_indentf@@Base+0x837c>
   144e8:	and	w3, w0, #0xf
   144ec:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   144f0:	ldr	x2, [x2, #3840]
   144f4:	ldrb	w2, [x2, w3, uxtw]
   144f8:	cbz	w2, 14564 <Perl_re_exec_indentf@@Base+0x8394>
   144fc:	and	w4, w0, #0xc000
   14500:	cmp	w4, #0x8, lsl #12
   14504:	b.eq	14588 <Perl_re_exec_indentf@@Base+0x83b8>  // b.none
   14508:	and	w0, w0, #0xff
   1450c:	cmp	w0, #0xf
   14510:	b.eq	145bc <Perl_re_exec_indentf@@Base+0x83ec>  // b.none
   14514:	ldr	x3, [x1, #16]
   14518:	ldr	w2, [x3, #12]
   1451c:	tbz	w2, #20, 143d0 <Perl_re_exec_indentf@@Base+0x8200>
   14520:	cmp	w4, #0x8, lsl #12
   14524:	b.eq	145ec <Perl_re_exec_indentf@@Base+0x841c>  // b.none
   14528:	cmp	w0, #0xf
   1452c:	b.eq	1461c <Perl_re_exec_indentf@@Base+0x844c>  // b.none
   14530:	and	w2, w2, #0xff
   14534:	cmp	w2, #0x6
   14538:	b.ls	1464c <Perl_re_exec_indentf@@Base+0x847c>  // b.plast
   1453c:	ldr	x0, [x3]
   14540:	ldr	x0, [x0]
   14544:	ldr	w0, [x0, #12]
   14548:	tbz	w0, #28, 143d0 <Perl_re_exec_indentf@@Base+0x8200>
   1454c:	mov	w2, #0x0                   	// #0
   14550:	mov	x0, x22
   14554:	bl	4ec0 <Perl_sv_2bool_flags@plt>
   14558:	and	w0, w0, #0xff
   1455c:	str	w0, [sp, #312]
   14560:	b	143d0 <Perl_re_exec_indentf@@Base+0x8200>
   14564:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14568:	add	x3, x3, #0x330
   1456c:	add	x3, x3, #0xc80
   14570:	mov	w2, #0x1d0a                	// #7434
   14574:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14578:	add	x1, x1, #0xcb0
   1457c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14580:	add	x0, x0, #0x160
   14584:	bl	58e0 <__assert_fail@plt>
   14588:	and	w2, w0, #0xff
   1458c:	sub	w2, w2, #0x9
   14590:	cmp	w2, #0x1
   14594:	b.hi	14508 <Perl_re_exec_indentf@@Base+0x8338>  // b.pmore
   14598:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1459c:	add	x3, x3, #0x330
   145a0:	add	x3, x3, #0xc80
   145a4:	mov	w2, #0x1d0a                	// #7434
   145a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   145ac:	add	x1, x1, #0xcb0
   145b0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   145b4:	add	x0, x0, #0x190
   145b8:	bl	58e0 <__assert_fail@plt>
   145bc:	ldr	x2, [x1]
   145c0:	ldrb	w2, [x2, #129]
   145c4:	tbnz	w2, #6, 14514 <Perl_re_exec_indentf@@Base+0x8344>
   145c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   145cc:	add	x3, x3, #0x330
   145d0:	add	x3, x3, #0xc80
   145d4:	mov	w2, #0x1d0a                	// #7434
   145d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   145dc:	add	x1, x1, #0xcb0
   145e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   145e4:	add	x0, x0, #0x1a8
   145e8:	bl	58e0 <__assert_fail@plt>
   145ec:	sub	w4, w0, #0x9
   145f0:	cmp	w4, #0x1
   145f4:	b.hi	14528 <Perl_re_exec_indentf@@Base+0x8358>  // b.pmore
   145f8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   145fc:	add	x3, x3, #0x330
   14600:	add	x3, x3, #0xc80
   14604:	mov	w2, #0x1d0a                	// #7434
   14608:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1460c:	add	x1, x1, #0xcb0
   14610:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14614:	add	x0, x0, #0x190
   14618:	bl	58e0 <__assert_fail@plt>
   1461c:	ldr	x0, [x1]
   14620:	ldrb	w0, [x0, #129]
   14624:	tbnz	w0, #6, 14530 <Perl_re_exec_indentf@@Base+0x8360>
   14628:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1462c:	add	x3, x3, #0x330
   14630:	add	x3, x3, #0xc80
   14634:	mov	w2, #0x1d0a                	// #7434
   14638:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1463c:	add	x1, x1, #0xcb0
   14640:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14644:	add	x0, x0, #0x1a8
   14648:	bl	58e0 <__assert_fail@plt>
   1464c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14650:	add	x3, x3, #0x330
   14654:	add	x3, x3, #0xc80
   14658:	mov	w2, #0x1d0a                	// #7434
   1465c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14660:	add	x1, x1, #0xcb0
   14664:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14668:	add	x0, x0, #0x1f0
   1466c:	bl	58e0 <__assert_fail@plt>
   14670:	str	wzr, [sp, #312]
   14674:	b	143d0 <Perl_re_exec_indentf@@Base+0x8200>
   14678:	mov	w2, #0x2                   	// #2
   1467c:	mov	x0, x22
   14680:	bl	5340 <Perl_sv_mortalcopy_flags@plt>
   14684:	str	x0, [sp, #480]
   14688:	b	14244 <Perl_re_exec_indentf@@Base+0x8074>
   1468c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14690:	add	x3, x3, #0x330
   14694:	add	x3, x3, #0xc80
   14698:	mov	w2, #0x1d12                	// #7442
   1469c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   146a0:	add	x1, x1, #0xcb0
   146a4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   146a8:	add	x0, x0, #0x160
   146ac:	bl	58e0 <__assert_fail@plt>
   146b0:	and	w2, w1, #0xff
   146b4:	sub	w2, w2, #0x9
   146b8:	cmp	w2, #0x1
   146bc:	b.hi	14270 <Perl_re_exec_indentf@@Base+0x80a0>  // b.pmore
   146c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   146c4:	add	x3, x3, #0x330
   146c8:	add	x3, x3, #0xc80
   146cc:	mov	w2, #0x1d12                	// #7442
   146d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   146d4:	add	x1, x1, #0xcb0
   146d8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   146dc:	add	x0, x0, #0x190
   146e0:	bl	58e0 <__assert_fail@plt>
   146e4:	ldr	x3, [x0]
   146e8:	ldrb	w3, [x3, #129]
   146ec:	tbnz	w3, #6, 1427c <Perl_re_exec_indentf@@Base+0x80ac>
   146f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   146f4:	add	x3, x3, #0x330
   146f8:	add	x3, x3, #0xc80
   146fc:	mov	w2, #0x1d12                	// #7442
   14700:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14704:	add	x1, x1, #0xcb0
   14708:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1470c:	add	x0, x0, #0x1a8
   14710:	bl	58e0 <__assert_fail@plt>
   14714:	sub	w5, w2, #0x9
   14718:	cmp	w5, #0x1
   1471c:	b.hi	14290 <Perl_re_exec_indentf@@Base+0x80c0>  // b.pmore
   14720:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14724:	add	x3, x3, #0x330
   14728:	add	x3, x3, #0xc80
   1472c:	mov	w2, #0x1d12                	// #7442
   14730:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14734:	add	x1, x1, #0xcb0
   14738:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1473c:	add	x0, x0, #0x190
   14740:	bl	58e0 <__assert_fail@plt>
   14744:	ldr	x5, [x0]
   14748:	ldrb	w5, [x5, #129]
   1474c:	tbnz	w5, #6, 14298 <Perl_re_exec_indentf@@Base+0x80c8>
   14750:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14754:	add	x3, x3, #0x330
   14758:	add	x3, x3, #0xc80
   1475c:	mov	w2, #0x1d12                	// #7442
   14760:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14764:	add	x1, x1, #0xcb0
   14768:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1476c:	add	x0, x0, #0x1a8
   14770:	bl	58e0 <__assert_fail@plt>
   14774:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14778:	add	x3, x3, #0x330
   1477c:	add	x3, x3, #0xc80
   14780:	mov	w2, #0x1d12                	// #7442
   14784:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14788:	add	x1, x1, #0xcb0
   1478c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14790:	add	x0, x0, #0x1f0
   14794:	bl	58e0 <__assert_fail@plt>
   14798:	sub	w3, w2, #0x9
   1479c:	cmp	w3, #0x1
   147a0:	b.hi	142bc <Perl_re_exec_indentf@@Base+0x80ec>  // b.pmore
   147a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   147a8:	add	x3, x3, #0x330
   147ac:	add	x3, x3, #0xc80
   147b0:	mov	w2, #0x1d15                	// #7445
   147b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   147b8:	add	x1, x1, #0xcb0
   147bc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   147c0:	add	x0, x0, #0x190
   147c4:	bl	58e0 <__assert_fail@plt>
   147c8:	mov	x19, x0
   147cc:	ldrb	w2, [x19, #12]
   147d0:	cmp	w2, #0x8
   147d4:	b.eq	148ec <Perl_re_exec_indentf@@Base+0x871c>  // b.none
   147d8:	tbnz	w1, #22, 148d8 <Perl_re_exec_indentf@@Base+0x8708>
   147dc:	ldr	x1, [sp, #480]
   147e0:	ldr	w0, [x1, #12]
   147e4:	tst	w0, #0x700
   147e8:	b.eq	14a74 <Perl_re_exec_indentf@@Base+0x88a4>  // b.none
   147ec:	ldr	x0, [sp, #224]
   147f0:	str	x0, [x22, #8]
   147f4:	ldr	x0, [sp, #240]
   147f8:	str	x0, [x22, #224]
   147fc:	mov	w4, w26
   14800:	add	x3, sp, #0x1c4
   14804:	ldr	w2, [x25, #68]
   14808:	ldr	x1, [sp, #152]
   1480c:	mov	x0, x22
   14810:	bl	c794 <Perl_re_exec_indentf@@Base+0x5c4>
   14814:	ldr	x0, [x22, #168]
   14818:	str	x0, [x22, #176]
   1481c:	ldr	x0, [x22, #280]
   14820:	str	x0, [x22, #168]
   14824:	ldr	w0, [sp, #312]
   14828:	cmp	w0, #0x2
   1482c:	b.ne	14368 <Perl_re_exec_indentf@@Base+0x8198>  // b.any
   14830:	ldr	x1, [sp, #480]
   14834:	ldr	w0, [x1, #12]
   14838:	tbz	w0, #29, 14848 <Perl_re_exec_indentf@@Base+0x8678>
   1483c:	ldr	x2, [x22, #224]
   14840:	ldr	w2, [x2, #56]
   14844:	tbnz	w2, #3, 14b68 <Perl_re_exec_indentf@@Base+0x8998>
   14848:	ldr	x2, [sp, #152]
   1484c:	ldr	w0, [x2, #100]
   14850:	ands	w0, w0, #0x20
   14854:	mov	w1, #0x80000000            	// #-2147483648
   14858:	csel	w0, w0, w1, eq  // eq = none
   1485c:	ldr	x4, [x2, #32]
   14860:	cbz	x4, 14cf4 <Perl_re_exec_indentf@@Base+0x8b24>
   14864:	ldr	x8, [x4, #96]
   14868:	cbz	x8, 14cf4 <Perl_re_exec_indentf@@Base+0x8b24>
   1486c:	ldr	w7, [x24, #8]
   14870:	str	w0, [sp]
   14874:	mov	x6, #0x0                   	// #0
   14878:	mov	x5, #0x0                   	// #0
   1487c:	mov	x3, #0x0                   	// #0
   14880:	mov	w2, #0x1                   	// #1
   14884:	add	x1, sp, #0x1e0
   14888:	mov	x0, x22
   1488c:	blr	x8
   14890:	mov	x19, x0
   14894:	ldr	x1, [sp, #480]
   14898:	ldr	w0, [x1, #12]
   1489c:	mov	w2, #0x800                 	// #2048
   148a0:	movk	w2, #0x28, lsl #16
   148a4:	tst	w0, w2
   148a8:	b.ne	14944 <Perl_re_exec_indentf@@Base+0x8774>  // b.any
   148ac:	mov	w2, #0x8030000             	// #134414336
   148b0:	and	w0, w0, w2
   148b4:	cmp	w0, #0x20, lsl #12
   148b8:	b.eq	14944 <Perl_re_exec_indentf@@Base+0x8774>  // b.none
   148bc:	mov	w5, #0x0                   	// #0
   148c0:	mov	x4, #0x0                   	// #0
   148c4:	mov	w3, #0x72                  	// #114
   148c8:	mov	x2, x19
   148cc:	mov	x0, x22
   148d0:	bl	5820 <Perl_sv_magic@plt>
   148d4:	b	14944 <Perl_re_exec_indentf@@Base+0x8774>
   148d8:	mov	w1, #0x72                  	// #114
   148dc:	bl	57d0 <Perl_mg_find@plt>
   148e0:	cbz	x0, 147dc <Perl_re_exec_indentf@@Base+0x860c>
   148e4:	ldr	x19, [x0, #32]
   148e8:	cbz	x19, 147dc <Perl_re_exec_indentf@@Base+0x860c>
   148ec:	ldr	x0, [sp, #224]
   148f0:	str	x0, [x22, #8]
   148f4:	ldr	x0, [sp, #240]
   148f8:	str	x0, [x22, #224]
   148fc:	mov	w4, w26
   14900:	add	x3, sp, #0x1c4
   14904:	ldr	w2, [x25, #68]
   14908:	ldr	x1, [sp, #152]
   1490c:	mov	x0, x22
   14910:	bl	c794 <Perl_re_exec_indentf@@Base+0x5c4>
   14914:	ldr	x0, [x22, #168]
   14918:	str	x0, [x22, #176]
   1491c:	ldr	x0, [x22, #280]
   14920:	str	x0, [x22, #168]
   14924:	ldr	w0, [sp, #312]
   14928:	cmp	w0, #0x2
   1492c:	b.ne	14368 <Perl_re_exec_indentf@@Base+0x8198>  // b.any
   14930:	mov	x2, x19
   14934:	mov	x1, #0x0                   	// #0
   14938:	mov	x0, x22
   1493c:	bl	5180 <Perl_reg_temp_copy@plt>
   14940:	mov	x19, x0
   14944:	mov	w2, #0xb                   	// #11
   14948:	mov	x1, x19
   1494c:	mov	x0, x22
   14950:	bl	54b0 <Perl_save_pushptr@plt>
   14954:	ldr	x20, [x19]
   14958:	ldr	w0, [x19, #12]
   1495c:	and	w1, w0, #0xff
   14960:	cmp	w1, #0x8
   14964:	b.eq	14990 <Perl_re_exec_indentf@@Base+0x87c0>  // b.none
   14968:	mov	w2, #0x80ff                	// #33023
   1496c:	movk	w2, #0x100, lsl #16
   14970:	and	w0, w0, w2
   14974:	mov	w2, #0xa                   	// #10
   14978:	movk	w2, #0x100, lsl #16
   1497c:	cmp	w0, w2
   14980:	b.ne	14d18 <Perl_re_exec_indentf@@Base+0x8b48>  // b.any
   14984:	cmp	w1, #0xa
   14988:	b.ne	14990 <Perl_re_exec_indentf@@Base+0x87c0>  // b.any
   1498c:	ldr	x20, [x20, #24]
   14990:	ldr	w0, [x20, #56]
   14994:	and	w0, w0, #0xfdffffff
   14998:	str	w0, [x20, #56]
   1499c:	ldr	x1, [sp, #152]
   149a0:	ldr	x0, [x1, #136]
   149a4:	str	x0, [x20, #136]
   149a8:	ldr	x0, [x1, #152]
   149ac:	str	x0, [x20, #152]
   149b0:	ldr	x0, [x1, #160]
   149b4:	str	x0, [x20, #160]
   149b8:	ldr	x0, [x1, #168]
   149bc:	str	x0, [x20, #168]
   149c0:	str	wzr, [x20, #112]
   149c4:	str	wzr, [x20, #116]
   149c8:	ldr	x0, [x20, #104]
   149cc:	str	x0, [sp, #208]
   149d0:	ldr	w0, [x22, #2368]
   149d4:	tbnz	w0, #20, 149e4 <Perl_re_exec_indentf@@Base+0x8814>
   149d8:	ldr	x0, [sp, #464]
   149dc:	tst	x0, #0xff00
   149e0:	b.eq	14a04 <Perl_re_exec_indentf@@Base+0x8834>  // b.none
   149e4:	adrp	x5, 68000 <boot_re@@Base+0x641c>
   149e8:	add	x5, x5, #0x238
   149ec:	ldr	x4, [x27, #16]
   149f0:	mov	x3, x23
   149f4:	ldrb	w2, [sp, #168]
   149f8:	mov	x1, x19
   149fc:	mov	x0, x22
   14a00:	bl	89c0 <Perl__inverse_folds@plt+0x2fc0>
   14a04:	ldr	x0, [sp, #208]
   14a08:	add	x24, x0, #0x2c
   14a0c:	str	wzr, [x25, #72]
   14a10:	str	xzr, [x25, #88]
   14a14:	mov	w4, w26
   14a18:	ldr	w3, [sp, #452]
   14a1c:	mov	w2, #0x0                   	// #0
   14a20:	ldr	x1, [sp, #152]
   14a24:	mov	x0, x22
   14a28:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   14a2c:	str	w0, [x25, #64]
   14a30:	ldr	w0, [x22, #2368]
   14a34:	tbnz	w0, #20, 14a40 <Perl_re_exec_indentf@@Base+0x8870>
   14a38:	ldr	x0, [sp, #464]
   14a3c:	tbz	w0, #19, 14a58 <Perl_re_exec_indentf@@Base+0x8888>
   14a40:	ldrsw	x3, [x22, #48]
   14a44:	mov	w2, w26
   14a48:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   14a4c:	add	x1, x1, #0xa20
   14a50:	mov	x0, x22
   14a54:	bl	5290 <Perl_re_exec_indentf@plt>
   14a58:	ldr	w0, [x22, #48]
   14a5c:	str	w0, [x25, #68]
   14a60:	str	wzr, [sp, #452]
   14a64:	str	x20, [sp, #152]
   14a68:	str	x21, [sp, #336]
   14a6c:	str	wzr, [sp, #312]
   14a70:	b	132b0 <Perl_re_exec_indentf@@Base+0x70e0>
   14a74:	mov	w2, #0x2                   	// #2
   14a78:	mov	x0, x22
   14a7c:	bl	5340 <Perl_sv_mortalcopy_flags@plt>
   14a80:	mov	x1, x0
   14a84:	str	x0, [sp, #480]
   14a88:	ldr	w0, [x0, #12]
   14a8c:	mov	w2, #0x8f00                	// #36608
   14a90:	movk	w2, #0x19a1, lsl #16
   14a94:	and	w2, w0, w2
   14a98:	cmp	w2, #0x400
   14a9c:	b.ne	14b54 <Perl_re_exec_indentf@@Base+0x8984>  // b.any
   14aa0:	and	w3, w0, #0xf
   14aa4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   14aa8:	ldr	x2, [x2, #3888]
   14aac:	ldrb	w2, [x2, w3, uxtw]
   14ab0:	cbz	w2, 14afc <Perl_re_exec_indentf@@Base+0x892c>
   14ab4:	and	w2, w0, #0xc000
   14ab8:	cmp	w2, #0x8, lsl #12
   14abc:	b.eq	14b20 <Perl_re_exec_indentf@@Base+0x8950>  // b.none
   14ac0:	and	w0, w0, #0xff
   14ac4:	cmp	w0, #0xf
   14ac8:	b.ne	147ec <Perl_re_exec_indentf@@Base+0x861c>  // b.any
   14acc:	ldr	x0, [x1]
   14ad0:	ldrb	w0, [x0, #129]
   14ad4:	tbnz	w0, #6, 147ec <Perl_re_exec_indentf@@Base+0x861c>
   14ad8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14adc:	add	x3, x3, #0x330
   14ae0:	add	x3, x3, #0xc80
   14ae4:	mov	w2, #0x1d21                	// #7457
   14ae8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14aec:	add	x1, x1, #0xcb0
   14af0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14af4:	add	x0, x0, #0xd58
   14af8:	bl	58e0 <__assert_fail@plt>
   14afc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14b00:	add	x3, x3, #0x330
   14b04:	add	x3, x3, #0xc80
   14b08:	mov	w2, #0x1d21                	// #7457
   14b0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14b10:	add	x1, x1, #0xcb0
   14b14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14b18:	add	x0, x0, #0xd10
   14b1c:	bl	58e0 <__assert_fail@plt>
   14b20:	and	w2, w0, #0xff
   14b24:	sub	w2, w2, #0x9
   14b28:	cmp	w2, #0x1
   14b2c:	b.hi	14ac0 <Perl_re_exec_indentf@@Base+0x88f0>  // b.pmore
   14b30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14b34:	add	x3, x3, #0x330
   14b38:	add	x3, x3, #0xc80
   14b3c:	mov	w2, #0x1d21                	// #7457
   14b40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14b44:	add	x1, x1, #0xcb0
   14b48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14b4c:	add	x0, x0, #0xd40
   14b50:	bl	58e0 <__assert_fail@plt>
   14b54:	mov	w3, #0x2                   	// #2
   14b58:	mov	x2, #0x0                   	// #0
   14b5c:	mov	x0, x22
   14b60:	bl	4ef0 <Perl_sv_pvn_force_flags@plt>
   14b64:	b	147ec <Perl_re_exec_indentf@@Base+0x861c>
   14b68:	and	w2, w0, #0x3ffc00
   14b6c:	and	w2, w2, #0xffe007ff
   14b70:	cmp	w2, #0x400
   14b74:	b.ne	14cdc <Perl_re_exec_indentf@@Base+0x8b0c>  // b.any
   14b78:	and	w3, w0, #0xf
   14b7c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   14b80:	ldr	x2, [x2, #3888]
   14b84:	ldrb	w2, [x2, w3, uxtw]
   14b88:	cbz	w2, 14bcc <Perl_re_exec_indentf@@Base+0x89fc>
   14b8c:	and	w3, w0, #0xc000
   14b90:	cmp	w3, #0x8, lsl #12
   14b94:	b.eq	14bf0 <Perl_re_exec_indentf@@Base+0x8a20>  // b.none
   14b98:	and	w0, w0, #0xff
   14b9c:	cmp	w0, #0xf
   14ba0:	b.eq	14c74 <Perl_re_exec_indentf@@Base+0x8aa4>  // b.none
   14ba4:	ldr	x0, [x1]
   14ba8:	ldr	x0, [x0, #16]
   14bac:	str	x0, [sp, #496]
   14bb0:	ldr	x1, [x1, #16]
   14bb4:	mov	w3, #0x80000               	// #524288
   14bb8:	ldr	x2, [sp, #496]
   14bbc:	mov	x0, x22
   14bc0:	bl	5390 <Perl_newSVpvn_flags@plt>
   14bc4:	str	x0, [sp, #480]
   14bc8:	b	14848 <Perl_re_exec_indentf@@Base+0x8678>
   14bcc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14bd0:	add	x3, x3, #0x330
   14bd4:	add	x3, x3, #0xc80
   14bd8:	mov	w2, #0x1d48                	// #7496
   14bdc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14be0:	add	x1, x1, #0xcb0
   14be4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14be8:	add	x0, x0, #0xe40
   14bec:	bl	58e0 <__assert_fail@plt>
   14bf0:	and	w2, w0, #0xff
   14bf4:	sub	w2, w2, #0x9
   14bf8:	cmp	w2, #0x1
   14bfc:	b.ls	14c50 <Perl_re_exec_indentf@@Base+0x8a80>  // b.plast
   14c00:	and	w0, w0, #0xff
   14c04:	cmp	w0, #0xf
   14c08:	b.eq	14c74 <Perl_re_exec_indentf@@Base+0x8aa4>  // b.none
   14c0c:	ldr	x2, [x1]
   14c10:	ldr	x2, [x2, #16]
   14c14:	str	x2, [sp, #496]
   14c18:	cmp	w3, #0x8, lsl #12
   14c1c:	b.ne	14bb0 <Perl_re_exec_indentf@@Base+0x89e0>  // b.any
   14c20:	sub	w0, w0, #0x9
   14c24:	cmp	w0, #0x1
   14c28:	b.hi	14bb0 <Perl_re_exec_indentf@@Base+0x89e0>  // b.pmore
   14c2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14c30:	add	x3, x3, #0x330
   14c34:	add	x3, x3, #0xc80
   14c38:	mov	w2, #0x1d48                	// #7496
   14c3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14c40:	add	x1, x1, #0xcb0
   14c44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14c48:	add	x0, x0, #0xd40
   14c4c:	bl	58e0 <__assert_fail@plt>
   14c50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14c54:	add	x3, x3, #0x330
   14c58:	add	x3, x3, #0xc80
   14c5c:	mov	w2, #0x1d48                	// #7496
   14c60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14c64:	add	x1, x1, #0xcb0
   14c68:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14c6c:	add	x0, x0, #0xe70
   14c70:	bl	58e0 <__assert_fail@plt>
   14c74:	ldr	x0, [x1]
   14c78:	ldrb	w2, [x0, #129]
   14c7c:	tbz	w2, #6, 14cb8 <Perl_re_exec_indentf@@Base+0x8ae8>
   14c80:	ldr	x0, [x0, #16]
   14c84:	str	x0, [sp, #496]
   14c88:	ldr	x0, [x1]
   14c8c:	ldrb	w0, [x0, #129]
   14c90:	tbnz	w0, #6, 14bb0 <Perl_re_exec_indentf@@Base+0x89e0>
   14c94:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14c98:	add	x3, x3, #0x330
   14c9c:	add	x3, x3, #0xc80
   14ca0:	mov	w2, #0x1d48                	// #7496
   14ca4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14ca8:	add	x1, x1, #0xcb0
   14cac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14cb0:	add	x0, x0, #0xd58
   14cb4:	bl	58e0 <__assert_fail@plt>
   14cb8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14cbc:	add	x3, x3, #0x330
   14cc0:	add	x3, x3, #0xc80
   14cc4:	mov	w2, #0x1d48                	// #7496
   14cc8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14ccc:	add	x1, x1, #0xcb0
   14cd0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   14cd4:	add	x0, x0, #0xe88
   14cd8:	bl	58e0 <__assert_fail@plt>
   14cdc:	mov	w3, #0x2                   	// #2
   14ce0:	add	x2, sp, #0x1f0
   14ce4:	mov	x0, x22
   14ce8:	bl	5200 <Perl_sv_2pv_flags@plt>
   14cec:	mov	x1, x0
   14cf0:	b	14bb4 <Perl_re_exec_indentf@@Base+0x89e4>
   14cf4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14cf8:	add	x3, x3, #0x330
   14cfc:	add	x3, x3, #0xc80
   14d00:	mov	w2, #0x1d50                	// #7504
   14d04:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14d08:	add	x1, x1, #0xcb0
   14d0c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14d10:	add	x0, x0, #0x210
   14d14:	bl	58e0 <__assert_fail@plt>
   14d18:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14d1c:	add	x3, x3, #0x330
   14d20:	add	x3, x3, #0x3e0
   14d24:	mov	w2, #0xb6                  	// #182
   14d28:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14d2c:	add	x1, x1, #0xc80
   14d30:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   14d34:	add	x0, x0, #0x128
   14d38:	bl	58e0 <__assert_fail@plt>
   14d3c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   14d40:	add	x3, x3, #0x330
   14d44:	add	x3, x3, #0xc80
   14d48:	mov	w2, #0x1d8f                	// #7567
   14d4c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   14d50:	add	x1, x1, #0xcb0
   14d54:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   14d58:	add	x0, x0, #0x258
   14d5c:	bl	58e0 <__assert_fail@plt>
   14d60:	mov	x0, x22
   14d64:	bl	5860 <Perl_sv_free2@plt>
   14d68:	b	13324 <Perl_re_exec_indentf@@Base+0x7154>
   14d6c:	ldr	w0, [x22, #2368]
   14d70:	tbnz	w0, #20, 14d84 <Perl_re_exec_indentf@@Base+0x8bb4>
   14d74:	ldr	x1, [sp, #464]
   14d78:	mov	x0, #0x280000              	// #2621440
   14d7c:	tst	x1, x0
   14d80:	b.eq	14da0 <Perl_re_exec_indentf@@Base+0x8bd0>  // b.none
   14d84:	ldr	x4, [x25, #48]
   14d88:	ldr	x3, [sp, #176]
   14d8c:	mov	w2, w27
   14d90:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   14d94:	add	x1, x1, #0x280
   14d98:	mov	x0, x22
   14d9c:	bl	5290 <Perl_re_exec_indentf@plt>
   14da0:	ldr	x0, [sp, #176]
   14da4:	cbz	x0, 14e08 <Perl_re_exec_indentf@@Base+0x8c38>
   14da8:	ldr	w3, [x0, #72]
   14dac:	cbz	w3, 14e08 <Perl_re_exec_indentf@@Base+0x8c38>
   14db0:	ldr	w0, [x22, #2368]
   14db4:	tbnz	w0, #20, 14dc8 <Perl_re_exec_indentf@@Base+0x8bf8>
   14db8:	ldr	x1, [sp, #464]
   14dbc:	mov	x0, #0x280000              	// #2621440
   14dc0:	tst	x1, x0
   14dc4:	b.eq	14dec <Perl_re_exec_indentf@@Base+0x8c1c>  // b.none
   14dc8:	ldr	x0, [sp, #176]
   14dcc:	ldr	x5, [x0, #88]
   14dd0:	mov	x4, x0
   14dd4:	sub	w3, w3, #0x1
   14dd8:	mov	w2, w27
   14ddc:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   14de0:	add	x1, x1, #0x2a8
   14de4:	mov	x0, x22
   14de8:	bl	5290 <Perl_re_exec_indentf@plt>
   14dec:	ldr	x0, [sp, #176]
   14df0:	ldr	x2, [x0, #88]
   14df4:	ldr	w0, [x0, #72]
   14df8:	sub	w0, w0, #0x1
   14dfc:	ldr	x1, [sp, #152]
   14e00:	ldr	x1, [x1, #128]
   14e04:	str	x2, [x1, x0, lsl #3]
   14e08:	ldr	x1, [x25, #56]
   14e0c:	str	x1, [sp, #280]
   14e10:	ldr	w0, [x1, #12]
   14e14:	ubfx	x0, x0, #29, #1
   14e18:	str	w0, [sp, #256]
   14e1c:	strb	w0, [x24, #89]
   14e20:	ldr	x0, [x24, #64]
   14e24:	cbz	x0, 14e88 <Perl_re_exec_indentf@@Base+0x8cb8>
   14e28:	ldrb	w0, [x1, #12]
   14e2c:	cmp	w0, #0x8
   14e30:	b.ne	1501c <Perl_re_exec_indentf@@Base+0x8e4c>  // b.any
   14e34:	ldr	x1, [sp, #280]
   14e38:	ldr	w0, [x1, #8]
   14e3c:	add	w0, w0, #0x1
   14e40:	str	w0, [x1, #8]
   14e44:	ldr	x0, [x22, #280]
   14e48:	ldr	x1, [x0, #56]
   14e4c:	ldr	x0, [x22, #2736]
   14e50:	ldr	x1, [x0, x1, lsl #3]
   14e54:	ldrb	w0, [x1, #12]
   14e58:	cmp	w0, #0x8
   14e5c:	b.ne	14e74 <Perl_re_exec_indentf@@Base+0x8ca4>  // b.any
   14e60:	ldr	w2, [x1, #8]
   14e64:	cmp	w2, #0x1
   14e68:	b.ls	15040 <Perl_re_exec_indentf@@Base+0x8e70>  // b.plast
   14e6c:	sub	w2, w2, #0x1
   14e70:	str	w2, [x1, #8]
   14e74:	ldr	x0, [x22, #280]
   14e78:	ldr	x1, [x0, #56]
   14e7c:	ldr	x0, [x22, #2736]
   14e80:	ldr	x2, [sp, #280]
   14e84:	str	x2, [x0, x1, lsl #3]
   14e88:	ldr	x0, [sp, #280]
   14e8c:	ldr	x1, [x0]
   14e90:	str	x1, [sp, #152]
   14e94:	ldr	w0, [x0, #12]
   14e98:	and	w1, w0, #0xff
   14e9c:	cmp	w1, #0x8
   14ea0:	b.eq	14ed4 <Perl_re_exec_indentf@@Base+0x8d04>  // b.none
   14ea4:	mov	w2, #0x80ff                	// #33023
   14ea8:	movk	w2, #0x100, lsl #16
   14eac:	and	w0, w0, w2
   14eb0:	mov	w2, #0xa                   	// #10
   14eb4:	movk	w2, #0x100, lsl #16
   14eb8:	cmp	w0, w2
   14ebc:	b.ne	1504c <Perl_re_exec_indentf@@Base+0x8e7c>  // b.any
   14ec0:	cmp	w1, #0xa
   14ec4:	b.ne	14ed4 <Perl_re_exec_indentf@@Base+0x8d04>  // b.any
   14ec8:	ldr	x0, [sp, #152]
   14ecc:	ldr	x0, [x0, #24]
   14ed0:	str	x0, [sp, #152]
   14ed4:	ldr	x0, [sp, #152]
   14ed8:	ldr	x0, [x0, #104]
   14edc:	str	x0, [sp, #208]
   14ee0:	ldr	x0, [x22, #1736]
   14ee4:	ldr	w1, [x0, #12]
   14ee8:	and	w2, w1, #0xff
   14eec:	sub	w2, w2, #0x9
   14ef0:	cmp	w2, #0x1
   14ef4:	b.hi	15070 <Perl_re_exec_indentf@@Base+0x8ea0>  // b.pmore
   14ef8:	and	w1, w1, #0xc000
   14efc:	cmp	w1, #0x8, lsl #12
   14f00:	b.ne	15094 <Perl_re_exec_indentf@@Base+0x8ec4>  // b.any
   14f04:	ldr	x1, [x0, #16]
   14f08:	ldr	x19, [x1]
   14f0c:	cbz	x19, 19628 <Perl_re_exec_indentf@@Base+0xd458>
   14f10:	ldr	w0, [x19, #8]
   14f14:	add	w0, w0, #0x1
   14f18:	str	w0, [x19, #8]
   14f1c:	ldr	w1, [x25, #64]
   14f20:	ldr	w0, [x22, #48]
   14f24:	cmp	w0, w1
   14f28:	b.gt	19638 <Perl_re_exec_indentf@@Base+0xd468>
   14f2c:	ldr	x0, [x22, #1736]
   14f30:	ldr	w1, [x0, #12]
   14f34:	and	w2, w1, #0xff
   14f38:	sub	w2, w2, #0x9
   14f3c:	cmp	w2, #0x1
   14f40:	b.hi	150b8 <Perl_re_exec_indentf@@Base+0x8ee8>  // b.pmore
   14f44:	and	w1, w1, #0xc000
   14f48:	cmp	w1, #0x8, lsl #12
   14f4c:	b.ne	150dc <Perl_re_exec_indentf@@Base+0x8f0c>  // b.any
   14f50:	ldr	x0, [x0, #16]
   14f54:	ldr	x20, [x0]
   14f58:	mov	w3, #0x2                   	// #2
   14f5c:	mov	x2, x19
   14f60:	mov	x1, x20
   14f64:	mov	x0, x22
   14f68:	bl	55b0 <Perl_sv_setsv_flags@plt>
   14f6c:	ldr	w0, [x20, #12]
   14f70:	tbnz	w0, #22, 15100 <Perl_re_exec_indentf@@Base+0x8f30>
   14f74:	cbz	x19, 14f8c <Perl_re_exec_indentf@@Base+0x8dbc>
   14f78:	ldr	w2, [x19, #8]
   14f7c:	cmp	w2, #0x1
   14f80:	b.ls	15110 <Perl_re_exec_indentf@@Base+0x8f40>  // b.plast
   14f84:	sub	w2, w2, #0x1
   14f88:	str	w2, [x19, #8]
   14f8c:	ldr	x1, [x25, #48]
   14f90:	str	x1, [sp, #176]
   14f94:	ldr	x0, [x25, #40]
   14f98:	str	x0, [sp, #232]
   14f9c:	str	wzr, [x24, #72]
   14fa0:	ldr	w2, [sp, #324]
   14fa4:	cmp	w2, #0x0
   14fa8:	cset	w0, ne  // ne = any
   14fac:	sub	w0, w2, w0
   14fb0:	str	w0, [sp, #324]
   14fb4:	cbz	x1, 18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   14fb8:	ldr	w3, [x1, #72]
   14fbc:	cbz	w3, 18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   14fc0:	ldr	w0, [x22, #2368]
   14fc4:	tbnz	w0, #20, 14fd8 <Perl_re_exec_indentf@@Base+0x8e08>
   14fc8:	ldr	x1, [sp, #464]
   14fcc:	mov	x0, #0x280000              	// #2621440
   14fd0:	tst	x1, x0
   14fd4:	b.eq	14ffc <Perl_re_exec_indentf@@Base+0x8e2c>  // b.none
   14fd8:	ldr	x0, [sp, #176]
   14fdc:	ldr	x5, [x0, #8]
   14fe0:	mov	x4, x0
   14fe4:	sub	w3, w3, #0x1
   14fe8:	mov	w2, w27
   14fec:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   14ff0:	add	x1, x1, #0x2e0
   14ff4:	mov	x0, x22
   14ff8:	bl	5290 <Perl_re_exec_indentf@plt>
   14ffc:	ldr	x0, [sp, #176]
   15000:	ldr	x2, [x0, #8]
   15004:	ldr	w0, [x0, #72]
   15008:	sub	w0, w0, #0x1
   1500c:	ldr	x1, [sp, #152]
   15010:	ldr	x1, [x1, #128]
   15014:	str	x2, [x1, x0, lsl #3]
   15018:	b	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   1501c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15020:	add	x3, x3, #0x330
   15024:	add	x3, x3, #0xc80
   15028:	mov	w2, #0x1db3                	// #7603
   1502c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15030:	add	x1, x1, #0xcb0
   15034:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   15038:	add	x0, x0, #0x258
   1503c:	bl	58e0 <__assert_fail@plt>
   15040:	mov	x0, x22
   15044:	bl	5860 <Perl_sv_free2@plt>
   15048:	b	14e74 <Perl_re_exec_indentf@@Base+0x8ca4>
   1504c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15050:	add	x3, x3, #0x330
   15054:	add	x3, x3, #0x3e0
   15058:	mov	w2, #0xb6                  	// #182
   1505c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15060:	add	x1, x1, #0xc80
   15064:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   15068:	add	x0, x0, #0x128
   1506c:	bl	58e0 <__assert_fail@plt>
   15070:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15074:	add	x3, x3, #0x330
   15078:	add	x3, x3, #0xc80
   1507c:	mov	w2, #0x1db8                	// #7608
   15080:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15084:	add	x1, x1, #0xcb0
   15088:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   1508c:	add	x0, x0, #0xa48
   15090:	bl	58e0 <__assert_fail@plt>
   15094:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15098:	add	x3, x3, #0x330
   1509c:	add	x3, x3, #0xc80
   150a0:	mov	w2, #0x1db8                	// #7608
   150a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   150a8:	add	x1, x1, #0xcb0
   150ac:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   150b0:	add	x0, x0, #0xa80
   150b4:	bl	58e0 <__assert_fail@plt>
   150b8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   150bc:	add	x3, x3, #0x330
   150c0:	add	x3, x3, #0xc80
   150c4:	mov	w2, #0x1dbd                	// #7613
   150c8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   150cc:	add	x1, x1, #0xcb0
   150d0:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   150d4:	add	x0, x0, #0xa48
   150d8:	bl	58e0 <__assert_fail@plt>
   150dc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   150e0:	add	x3, x3, #0x330
   150e4:	add	x3, x3, #0xc80
   150e8:	mov	w2, #0x1dbd                	// #7613
   150ec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   150f0:	add	x1, x1, #0xcb0
   150f4:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   150f8:	add	x0, x0, #0xa80
   150fc:	bl	58e0 <__assert_fail@plt>
   15100:	mov	x1, x20
   15104:	mov	x0, x22
   15108:	bl	5590 <Perl_mg_set@plt>
   1510c:	b	14f74 <Perl_re_exec_indentf@@Base+0x8da4>
   15110:	mov	x1, x19
   15114:	mov	x0, x22
   15118:	bl	5860 <Perl_sv_free2@plt>
   1511c:	b	14f8c <Perl_re_exec_indentf@@Base+0x8dbc>
   15120:	ldr	w0, [x22, #2368]
   15124:	tbnz	w0, #20, 15130 <Perl_re_exec_indentf@@Base+0x8f60>
   15128:	ldr	x0, [sp, #464]
   1512c:	tbz	w0, #19, 15140 <Perl_re_exec_indentf@@Base+0x8f70>
   15130:	ldr	w3, [x25, #68]
   15134:	ldr	w4, [x22, #48]
   15138:	cmp	w3, w4
   1513c:	b.ne	1515c <Perl_re_exec_indentf@@Base+0x8f8c>  // b.any
   15140:	ldr	w1, [x25, #68]
   15144:	ldr	w0, [x22, #48]
   15148:	cmp	w0, w1
   1514c:	b.le	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15150:	mov	x0, x22
   15154:	bl	5660 <Perl_leave_scope@plt>
   15158:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1515c:	sxtw	x4, w4
   15160:	sxtw	x3, w3
   15164:	mov	w2, w27
   15168:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1516c:	add	x1, x1, #0xc30
   15170:	mov	x0, x22
   15174:	bl	5290 <Perl_re_exec_indentf@plt>
   15178:	b	15140 <Perl_re_exec_indentf@@Base+0x8f70>
   1517c:	ldr	w0, [x22, #2368]
   15180:	tbnz	w0, #20, 15194 <Perl_re_exec_indentf@@Base+0x8fc4>
   15184:	ldr	x1, [sp, #464]
   15188:	mov	x0, #0x280000              	// #2621440
   1518c:	tst	x1, x0
   15190:	b.eq	151b0 <Perl_re_exec_indentf@@Base+0x8fe0>  // b.none
   15194:	ldr	x4, [x25, #48]
   15198:	ldr	x3, [sp, #176]
   1519c:	mov	w2, w27
   151a0:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   151a4:	add	x1, x1, #0x318
   151a8:	mov	x0, x22
   151ac:	bl	5290 <Perl_re_exec_indentf@plt>
   151b0:	ldr	x0, [sp, #176]
   151b4:	cbz	x0, 15218 <Perl_re_exec_indentf@@Base+0x9048>
   151b8:	ldr	w3, [x0, #72]
   151bc:	cbz	w3, 15218 <Perl_re_exec_indentf@@Base+0x9048>
   151c0:	ldr	w0, [x22, #2368]
   151c4:	tbnz	w0, #20, 151d8 <Perl_re_exec_indentf@@Base+0x9008>
   151c8:	ldr	x1, [sp, #464]
   151cc:	mov	x0, #0x280000              	// #2621440
   151d0:	tst	x1, x0
   151d4:	b.eq	151fc <Perl_re_exec_indentf@@Base+0x902c>  // b.none
   151d8:	ldr	x0, [sp, #176]
   151dc:	ldr	x5, [x0, #88]
   151e0:	mov	x4, x0
   151e4:	sub	w3, w3, #0x1
   151e8:	mov	w2, w27
   151ec:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   151f0:	add	x1, x1, #0x340
   151f4:	mov	x0, x22
   151f8:	bl	5290 <Perl_re_exec_indentf@plt>
   151fc:	ldr	x0, [sp, #176]
   15200:	ldr	x2, [x0, #88]
   15204:	ldr	w0, [x0, #72]
   15208:	sub	w0, w0, #0x1
   1520c:	ldr	x1, [sp, #152]
   15210:	ldr	x1, [x1, #128]
   15214:	str	x2, [x1, x0, lsl #3]
   15218:	ldr	x1, [x25, #56]
   1521c:	str	x1, [sp, #280]
   15220:	ldr	w0, [x1, #12]
   15224:	ubfx	x0, x0, #29, #1
   15228:	str	w0, [sp, #256]
   1522c:	strb	w0, [x24, #89]
   15230:	ldr	x0, [x24, #64]
   15234:	cbz	x0, 15298 <Perl_re_exec_indentf@@Base+0x90c8>
   15238:	ldrb	w0, [x1, #12]
   1523c:	cmp	w0, #0x8
   15240:	b.ne	153c4 <Perl_re_exec_indentf@@Base+0x91f4>  // b.any
   15244:	ldr	x1, [sp, #280]
   15248:	ldr	w0, [x1, #8]
   1524c:	add	w0, w0, #0x1
   15250:	str	w0, [x1, #8]
   15254:	ldr	x0, [x22, #280]
   15258:	ldr	x1, [x0, #56]
   1525c:	ldr	x0, [x22, #2736]
   15260:	ldr	x1, [x0, x1, lsl #3]
   15264:	ldrb	w0, [x1, #12]
   15268:	cmp	w0, #0x8
   1526c:	b.ne	15284 <Perl_re_exec_indentf@@Base+0x90b4>  // b.any
   15270:	ldr	w2, [x1, #8]
   15274:	cmp	w2, #0x1
   15278:	b.ls	153e8 <Perl_re_exec_indentf@@Base+0x9218>  // b.plast
   1527c:	sub	w2, w2, #0x1
   15280:	str	w2, [x1, #8]
   15284:	ldr	x0, [x22, #280]
   15288:	ldr	x1, [x0, #56]
   1528c:	ldr	x0, [x22, #2736]
   15290:	ldr	x2, [sp, #280]
   15294:	str	x2, [x0, x1, lsl #3]
   15298:	ldr	x0, [sp, #280]
   1529c:	ldr	x1, [x0]
   152a0:	str	x1, [sp, #152]
   152a4:	ldr	w0, [x0, #12]
   152a8:	and	w1, w0, #0xff
   152ac:	cmp	w1, #0x8
   152b0:	b.eq	152e4 <Perl_re_exec_indentf@@Base+0x9114>  // b.none
   152b4:	mov	w2, #0x80ff                	// #33023
   152b8:	movk	w2, #0x100, lsl #16
   152bc:	and	w0, w0, w2
   152c0:	mov	w2, #0xa                   	// #10
   152c4:	movk	w2, #0x100, lsl #16
   152c8:	cmp	w0, w2
   152cc:	b.ne	153f4 <Perl_re_exec_indentf@@Base+0x9224>  // b.any
   152d0:	cmp	w1, #0xa
   152d4:	b.ne	152e4 <Perl_re_exec_indentf@@Base+0x9114>  // b.any
   152d8:	ldr	x0, [sp, #152]
   152dc:	ldr	x0, [x0, #24]
   152e0:	str	x0, [sp, #152]
   152e4:	ldr	x0, [sp, #152]
   152e8:	ldr	x0, [x0, #104]
   152ec:	str	x0, [sp, #208]
   152f0:	ldr	w0, [x22, #2368]
   152f4:	tbnz	w0, #20, 15300 <Perl_re_exec_indentf@@Base+0x9130>
   152f8:	ldr	x0, [sp, #464]
   152fc:	tbz	w0, #19, 15310 <Perl_re_exec_indentf@@Base+0x9140>
   15300:	ldr	w3, [x25, #68]
   15304:	ldr	w4, [x22, #48]
   15308:	cmp	w3, w4
   1530c:	b.ne	15418 <Perl_re_exec_indentf@@Base+0x9248>  // b.any
   15310:	ldr	w1, [x25, #68]
   15314:	ldr	w0, [x22, #48]
   15318:	cmp	w0, w1
   1531c:	b.gt	15438 <Perl_re_exec_indentf@@Base+0x9268>
   15320:	mov	w3, w27
   15324:	add	x2, sp, #0x1c4
   15328:	ldr	x1, [sp, #152]
   1532c:	mov	x0, x22
   15330:	bl	c310 <Perl_re_exec_indentf@@Base+0x140>
   15334:	ldr	x1, [x25, #48]
   15338:	str	x1, [sp, #176]
   1533c:	ldr	x0, [x25, #40]
   15340:	str	x0, [sp, #232]
   15344:	str	wzr, [x24, #72]
   15348:	ldr	w2, [sp, #324]
   1534c:	cmp	w2, #0x0
   15350:	cset	w0, ne  // ne = any
   15354:	sub	w0, w2, w0
   15358:	str	w0, [sp, #324]
   1535c:	cbz	x1, 12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   15360:	ldr	w3, [x1, #72]
   15364:	cbz	w3, 12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   15368:	ldr	w0, [x22, #2368]
   1536c:	tbnz	w0, #20, 15380 <Perl_re_exec_indentf@@Base+0x91b0>
   15370:	ldr	x1, [sp, #464]
   15374:	mov	x0, #0x280000              	// #2621440
   15378:	tst	x1, x0
   1537c:	b.eq	153a4 <Perl_re_exec_indentf@@Base+0x91d4>  // b.none
   15380:	ldr	x0, [sp, #176]
   15384:	ldr	x5, [x0, #8]
   15388:	mov	x4, x0
   1538c:	sub	w3, w3, #0x1
   15390:	mov	w2, w27
   15394:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15398:	add	x1, x1, #0x378
   1539c:	mov	x0, x22
   153a0:	bl	5290 <Perl_re_exec_indentf@plt>
   153a4:	ldr	x0, [sp, #176]
   153a8:	ldr	x2, [x0, #8]
   153ac:	ldr	w0, [x0, #72]
   153b0:	sub	w0, w0, #0x1
   153b4:	ldr	x1, [sp, #152]
   153b8:	ldr	x1, [x1, #128]
   153bc:	str	x2, [x1, x0, lsl #3]
   153c0:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   153c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   153c8:	add	x3, x3, #0x330
   153cc:	add	x3, x3, #0xc80
   153d0:	mov	w2, #0x1ddd                	// #7645
   153d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   153d8:	add	x1, x1, #0xcb0
   153dc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   153e0:	add	x0, x0, #0x258
   153e4:	bl	58e0 <__assert_fail@plt>
   153e8:	mov	x0, x22
   153ec:	bl	5860 <Perl_sv_free2@plt>
   153f0:	b	15284 <Perl_re_exec_indentf@@Base+0x90b4>
   153f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   153f8:	add	x3, x3, #0x330
   153fc:	add	x3, x3, #0x3e0
   15400:	mov	w2, #0xb6                  	// #182
   15404:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15408:	add	x1, x1, #0xc80
   1540c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   15410:	add	x0, x0, #0x128
   15414:	bl	58e0 <__assert_fail@plt>
   15418:	sxtw	x4, w4
   1541c:	sxtw	x3, w3
   15420:	mov	w2, w27
   15424:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   15428:	add	x1, x1, #0xc30
   1542c:	mov	x0, x22
   15430:	bl	5290 <Perl_re_exec_indentf@plt>
   15434:	b	15310 <Perl_re_exec_indentf@@Base+0x9140>
   15438:	mov	x0, x22
   1543c:	bl	5660 <Perl_leave_scope@plt>
   15440:	b	15320 <Perl_re_exec_indentf@@Base+0x9150>
   15444:	mov	x0, x24
   15448:	mov	x24, x26
   1544c:	mov	w26, w27
   15450:	mov	x27, x0
   15454:	ldr	w3, [x24, #4]
   15458:	str	w3, [sp, #380]
   1545c:	mov	w5, w3
   15460:	add	x0, x5, w3, uxtw #1
   15464:	lsl	x0, x0, #3
   15468:	ldr	x1, [sp, #152]
   1546c:	ldr	x1, [x1, #120]
   15470:	add	x1, x1, x0
   15474:	ldr	x2, [x27, #8]
   15478:	sub	x2, x23, x2
   1547c:	str	x2, [x1, #16]
   15480:	ldr	w1, [sp, #452]
   15484:	cmp	w3, w1
   15488:	b.ls	15490 <Perl_re_exec_indentf@@Base+0x92c0>  // b.plast
   1548c:	str	w3, [sp, #452]
   15490:	ldr	w1, [x22, #2368]
   15494:	tbnz	w1, #20, 154a0 <Perl_re_exec_indentf@@Base+0x92d0>
   15498:	ldr	x1, [sp, #464]
   1549c:	tbz	w1, #22, 189e0 <Perl_re_exec_indentf@@Base+0xc810>
   154a0:	ldr	x3, [sp, #152]
   154a4:	ldr	x4, [x3, #120]
   154a8:	add	x0, x4, x0
   154ac:	ldr	w7, [sp, #452]
   154b0:	ldr	x6, [x0, #16]
   154b4:	mov	w2, w26
   154b8:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   154bc:	add	x1, x1, #0x3b0
   154c0:	mov	x0, x22
   154c4:	bl	5290 <Perl_re_exec_indentf@plt>
   154c8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   154cc:	mov	x0, x24
   154d0:	mov	x24, x26
   154d4:	mov	w26, w27
   154d8:	mov	x27, x0
   154dc:	ldr	w19, [x24, #4]
   154e0:	mov	w5, w19
   154e4:	add	x3, x5, w19, uxtw #1
   154e8:	lsl	x0, x3, #3
   154ec:	ldr	x4, [sp, #152]
   154f0:	ldr	x1, [x4, #120]
   154f4:	add	x2, x1, x0
   154f8:	ldr	x2, [x2, #16]
   154fc:	str	x2, [x1, x3, lsl #3]
   15500:	ldr	x1, [x4, #120]
   15504:	add	x1, x1, x0
   15508:	ldr	x2, [x27, #8]
   1550c:	sub	x2, x23, x2
   15510:	str	x2, [x1, #8]
   15514:	ldr	w1, [x4, #112]
   15518:	cmp	w19, w1
   1551c:	b.ls	15524 <Perl_re_exec_indentf@@Base+0x9354>  // b.plast
   15520:	str	w19, [x4, #112]
   15524:	ldr	x1, [sp, #152]
   15528:	str	w19, [x1, #116]
   1552c:	ldr	w1, [x22, #2368]
   15530:	tbnz	w1, #20, 1553c <Perl_re_exec_indentf@@Base+0x936c>
   15534:	ldr	x1, [sp, #464]
   15538:	tbz	w1, #22, 15570 <Perl_re_exec_indentf@@Base+0x93a0>
   1553c:	ldr	x1, [sp, #152]
   15540:	ldr	x4, [x1, #120]
   15544:	add	x0, x4, x0
   15548:	ldr	x7, [x0, #8]
   1554c:	ldr	x6, [x4, x3, lsl #3]
   15550:	ldr	w0, [x1, #112]
   15554:	str	x0, [sp]
   15558:	mov	x3, x1
   1555c:	mov	w2, w26
   15560:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15564:	add	x1, x1, #0x3f8
   15568:	mov	x0, x22
   1556c:	bl	5290 <Perl_re_exec_indentf@plt>
   15570:	ldr	x0, [sp, #176]
   15574:	cbz	x0, 189e0 <Perl_re_exec_indentf@@Base+0xc810>
   15578:	ldr	w0, [x0, #72]
   1557c:	cbz	w0, 189e0 <Perl_re_exec_indentf@@Base+0xc810>
   15580:	add	w19, w19, #0x1
   15584:	cmp	w0, w19
   15588:	b.ne	189e0 <Perl_re_exec_indentf@@Base+0xc810>  // b.any
   1558c:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   15590:	ldrb	w3, [sp, #168]
   15594:	mov	x2, x23
   15598:	ldr	x1, [sp, #184]
   1559c:	mov	x0, x22
   155a0:	bl	56b0 <Perl_isSCRIPT_RUN@plt>
   155a4:	and	w0, w0, #0xff
   155a8:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   155ac:	mov	w26, w27
   155b0:	mov	x27, x24
   155b4:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   155b8:	ldrb	w0, [x26]
   155bc:	cbz	w0, 155d8 <Perl_re_exec_indentf@@Base+0x9408>
   155c0:	ldr	x0, [sp, #208]
   155c4:	ldr	x1, [x0, #24]
   155c8:	ldr	w0, [x26, #4]
   155cc:	add	x0, x0, #0x2
   155d0:	ldr	x0, [x1, x0, lsl #3]
   155d4:	str	x0, [sp, #304]
   155d8:	ldr	w0, [x26, #8]
   155dc:	cbnz	w0, 15748 <Perl_re_exec_indentf@@Base+0x9578>
   155e0:	ldr	x0, [sp, #176]
   155e4:	cbnz	x0, 17fb4 <Perl_re_exec_indentf@@Base+0xbde4>
   155e8:	ldr	x4, [x24, #24]
   155ec:	cmp	x23, x4
   155f0:	b.cs	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>  // b.hs, b.nlast
   155f4:	ldr	w0, [x22, #2368]
   155f8:	tbnz	w0, #20, 15608 <Perl_re_exec_indentf@@Base+0x9438>
   155fc:	ldr	x0, [sp, #464]
   15600:	tst	x0, #0xff00
   15604:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
   15608:	ldr	x5, [x22, #1488]
   1560c:	ldr	x0, [sp, #136]
   15610:	sub	x4, x4, x0
   15614:	sub	x3, x23, x0
   15618:	ldr	x2, [x22, #1480]
   1561c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15620:	add	x1, x1, #0x7a8
   15624:	mov	x0, x22
   15628:	bl	50e0 <Perl_re_printf@plt>
   1562c:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   15630:	mov	w26, w27
   15634:	ldr	x25, [sp, #192]
   15638:	mov	x27, x24
   1563c:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   15640:	mov	x1, x19
   15644:	mov	x0, x22
   15648:	bl	58a0 <Perl_regnext@plt>
   1564c:	mov	x19, x0
   15650:	cbz	x0, 15740 <Perl_re_exec_indentf@@Base+0x9570>
   15654:	ldrb	w0, [x19, #1]
   15658:	cbz	w0, 15760 <Perl_re_exec_indentf@@Base+0x9590>
   1565c:	cmp	w0, #0x39
   15660:	b.ne	15640 <Perl_re_exec_indentf@@Base+0x9470>  // b.any
   15664:	ldr	w20, [x19, #4]
   15668:	ldr	w0, [sp, #380]
   1566c:	cmp	w20, w0
   15670:	b.hi	15640 <Perl_re_exec_indentf@@Base+0x9470>  // b.pmore
   15674:	mov	w5, w20
   15678:	add	x3, x5, w20, uxtw #1
   1567c:	lsl	x0, x3, #3
   15680:	ldr	x1, [x25, #120]
   15684:	add	x2, x1, x0
   15688:	ldr	x2, [x2, #16]
   1568c:	str	x2, [x1, x3, lsl #3]
   15690:	ldr	x1, [x25, #120]
   15694:	add	x1, x1, x0
   15698:	ldr	x2, [x24, #8]
   1569c:	sub	x2, x23, x2
   156a0:	str	x2, [x1, #8]
   156a4:	ldr	w1, [x25, #112]
   156a8:	cmp	w20, w1
   156ac:	b.ls	156b4 <Perl_re_exec_indentf@@Base+0x94e4>  // b.plast
   156b0:	str	w20, [x25, #112]
   156b4:	str	w20, [x25, #116]
   156b8:	ldr	w1, [x22, #2368]
   156bc:	tbnz	w1, #20, 156c8 <Perl_re_exec_indentf@@Base+0x94f8>
   156c0:	ldr	x1, [sp, #464]
   156c4:	tbz	w1, #22, 156f4 <Perl_re_exec_indentf@@Base+0x9524>
   156c8:	ldr	x4, [x25, #120]
   156cc:	add	x0, x4, x0
   156d0:	ldr	x7, [x0, #8]
   156d4:	ldr	x6, [x4, x3, lsl #3]
   156d8:	ldr	w0, [x25, #112]
   156dc:	str	x0, [sp]
   156e0:	mov	x3, x25
   156e4:	mov	w2, w27
   156e8:	mov	x1, x21
   156ec:	mov	x0, x22
   156f0:	bl	5290 <Perl_re_exec_indentf@plt>
   156f4:	ldr	w0, [x26, #4]
   156f8:	cmp	w20, w0
   156fc:	b.eq	17fac <Perl_re_exec_indentf@@Base+0xbddc>  // b.none
   15700:	ldr	x0, [sp, #176]
   15704:	cbz	x0, 15640 <Perl_re_exec_indentf@@Base+0x9470>
   15708:	ldr	w0, [x0, #72]
   1570c:	cbz	w0, 1571c <Perl_re_exec_indentf@@Base+0x954c>
   15710:	add	w20, w20, #0x1
   15714:	cmp	w0, w20
   15718:	b.eq	15630 <Perl_re_exec_indentf@@Base+0x9460>  // b.none
   1571c:	mov	x1, x19
   15720:	mov	x0, x22
   15724:	bl	58a0 <Perl_regnext@plt>
   15728:	mov	x19, x0
   1572c:	cbnz	x0, 15654 <Perl_re_exec_indentf@@Base+0x9484>
   15730:	mov	w26, w27
   15734:	ldr	x25, [sp, #192]
   15738:	mov	x27, x24
   1573c:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   15740:	ldr	x25, [sp, #192]
   15744:	b	155e0 <Perl_re_exec_indentf@@Base+0x9410>
   15748:	mov	x19, x26
   1574c:	adrp	x21, 68000 <boot_re@@Base+0x641c>
   15750:	add	x21, x21, #0x3f8
   15754:	str	x25, [sp, #192]
   15758:	ldr	x25, [sp, #152]
   1575c:	b	15654 <Perl_re_exec_indentf@@Base+0x9484>
   15760:	ldr	x25, [sp, #192]
   15764:	b	155e0 <Perl_re_exec_indentf@@Base+0x9410>
   15768:	mov	x0, x24
   1576c:	mov	x24, x26
   15770:	mov	w26, w27
   15774:	mov	x27, x0
   15778:	ldr	w0, [x24, #4]
   1577c:	ldr	x3, [sp, #152]
   15780:	ldr	w2, [x3, #112]
   15784:	mov	w1, #0x0                   	// #0
   15788:	cmp	w0, w2
   1578c:	b.hi	157ac <Perl_re_exec_indentf@@Base+0x95dc>  // b.pmore
   15790:	ldr	x1, [x3, #120]
   15794:	ubfiz	x2, x0, #1, #32
   15798:	add	x0, x2, w0, uxtw
   1579c:	add	x0, x1, x0, lsl #3
   157a0:	ldr	x0, [x0, #8]
   157a4:	cmn	x0, #0x1
   157a8:	cset	w1, ne  // ne = any
   157ac:	str	w1, [sp, #320]
   157b0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   157b4:	mov	x0, x24
   157b8:	mov	x24, x26
   157bc:	mov	w26, w27
   157c0:	mov	x27, x0
   157c4:	mov	x1, x24
   157c8:	ldr	x0, [sp, #152]
   157cc:	bl	60a4 <Perl__inverse_folds@plt+0x6a4>
   157d0:	cmp	w0, #0x0
   157d4:	cset	w0, gt
   157d8:	str	w0, [sp, #320]
   157dc:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   157e0:	mov	x0, x24
   157e4:	mov	x24, x26
   157e8:	mov	w26, w27
   157ec:	mov	x27, x0
   157f0:	mov	w0, #0x0                   	// #0
   157f4:	ldr	x2, [sp, #176]
   157f8:	cbz	x2, 15814 <Perl_re_exec_indentf@@Base+0x9644>
   157fc:	ldr	w1, [x24, #4]
   15800:	mov	w0, #0x1                   	// #1
   15804:	cbz	w1, 15814 <Perl_re_exec_indentf@@Base+0x9644>
   15808:	ldr	w0, [x2, #72]
   1580c:	cmp	w0, w1
   15810:	cset	w0, eq  // eq = none
   15814:	str	w0, [sp, #320]
   15818:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   1581c:	mov	w26, w27
   15820:	mov	x27, x24
   15824:	str	wzr, [sp, #320]
   15828:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   1582c:	mov	x0, x24
   15830:	mov	x24, x26
   15834:	mov	w26, w27
   15838:	mov	x27, x0
   1583c:	ldr	w0, [x0, #72]
   15840:	str	w0, [x27, #76]
   15844:	ldr	w0, [sp, #320]
   15848:	cbz	w0, 15858 <Perl_re_exec_indentf@@Base+0x9688>
   1584c:	add	x0, x24, #0x8
   15850:	str	x0, [sp, #144]
   15854:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   15858:	ldr	w0, [x24, #4]
   1585c:	add	x2, x24, x0, lsl #2
   15860:	ldrb	w1, [x2, #1]
   15864:	add	x0, x2, #0x8
   15868:	cmp	w1, #0x4b
   1586c:	csel	x0, x0, x2, eq  // eq = none
   15870:	str	x0, [sp, #144]
   15874:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   15878:	mov	x0, x24
   1587c:	mov	x24, x26
   15880:	mov	w26, w27
   15884:	mov	x27, x0
   15888:	ldrb	w0, [x24]
   1588c:	str	w0, [sp, #312]
   15890:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   15894:	mov	x0, x24
   15898:	mov	x24, x26
   1589c:	mov	w26, w27
   158a0:	mov	x27, x0
   158a4:	ldrb	w1, [x24]
   158a8:	ldr	x0, [sp, #144]
   158ac:	cbz	x0, 1592c <Perl_re_exec_indentf@@Base+0x975c>
   158b0:	ldr	x0, [sp, #144]
   158b4:	ldurb	w0, [x0, #-3]
   158b8:	cmp	w0, #0x2f
   158bc:	b.eq	15950 <Perl_re_exec_indentf@@Base+0x9780>  // b.none
   158c0:	ldr	x0, [sp, #152]
   158c4:	ldr	w0, [x0, #112]
   158c8:	cmp	w0, w1
   158cc:	csel	w0, w0, w1, le
   158d0:	ldr	x1, [sp, #232]
   158d4:	str	x1, [x25, #40]
   158d8:	ldr	w1, [x22, #48]
   158dc:	str	w1, [x25, #64]
   158e0:	str	w0, [x25, #72]
   158e4:	str	x24, [x25, #48]
   158e8:	ldr	x1, [sp, #144]
   158ec:	str	x1, [x25, #56]
   158f0:	ldrb	w0, [sp, #260]
   158f4:	strb	w0, [x25, #68]
   158f8:	mov	w0, #0xffffffff            	// #-1
   158fc:	str	w0, [x25, #76]
   15900:	str	xzr, [x25, #80]
   15904:	sub	x0, x1, #0x4
   15908:	str	x0, [sp, #144]
   1590c:	mov	w0, #0x6c                  	// #108
   15910:	str	w0, [x25]
   15914:	str	x25, [sp, #232]
   15918:	ldr	x0, [sp, #128]
   1591c:	str	x0, [sp, #200]
   15920:	str	x23, [sp, #192]
   15924:	str	wzr, [sp, #260]
   15928:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   1592c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15930:	add	x3, x3, #0x330
   15934:	add	x3, x3, #0xc80
   15938:	mov	w2, #0x1ead                	// #7853
   1593c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15940:	add	x1, x1, #0xcb0
   15944:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   15948:	add	x0, x0, #0x438
   1594c:	bl	58e0 <__assert_fail@plt>
   15950:	ldr	x2, [sp, #144]
   15954:	ldr	w0, [x2, #4]
   15958:	add	x0, x2, x0, lsl #2
   1595c:	str	x0, [sp, #144]
   15960:	b	158c0 <Perl_re_exec_indentf@@Base+0x96f0>
   15964:	ldr	x0, [x25, #40]
   15968:	str	x0, [sp, #232]
   1596c:	b	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   15970:	ldr	w1, [x25, #64]
   15974:	ldr	w0, [x22, #48]
   15978:	cmp	w0, w1
   1597c:	b.gt	1598c <Perl_re_exec_indentf@@Base+0x97bc>
   15980:	ldr	x0, [x25, #40]
   15984:	str	x0, [sp, #232]
   15988:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1598c:	mov	x0, x22
   15990:	bl	5660 <Perl_leave_scope@plt>
   15994:	b	15980 <Perl_re_exec_indentf@@Base+0x97b0>
   15998:	ldr	x0, [sp, #232]
   1599c:	cbz	x0, 15b80 <Perl_re_exec_indentf@@Base+0x99b0>
   159a0:	ldr	x1, [sp, #232]
   159a4:	ldr	x0, [x1, #48]
   159a8:	ldrh	w19, [x0, #4]
   159ac:	ldrh	w21, [x0, #6]
   159b0:	add	x0, x0, #0x8
   159b4:	str	x0, [sp, #216]
   159b8:	ldr	w20, [x1, #76]
   159bc:	add	w20, w20, #0x1
   159c0:	str	w20, [x1, #76]
   159c4:	ldr	x0, [x1, #80]
   159c8:	str	x0, [x25, #56]
   159cc:	str	wzr, [x25, #64]
   159d0:	str	wzr, [x25, #68]
   159d4:	ldr	w0, [x22, #2368]
   159d8:	tbnz	w0, #20, 159e8 <Perl_re_exec_indentf@@Base+0x9818>
   159dc:	ldr	x0, [sp, #464]
   159e0:	tst	x0, #0xff00
   159e4:	b.eq	15a08 <Perl_re_exec_indentf@@Base+0x9838>  // b.none
   159e8:	mov	w5, w21
   159ec:	mov	w4, w19
   159f0:	sxtw	x3, w20
   159f4:	mov	w2, w27
   159f8:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   159fc:	add	x1, x1, #0x450
   15a00:	mov	x0, x22
   15a04:	bl	5290 <Perl_re_exec_indentf@plt>
   15a08:	cmp	w19, w20
   15a0c:	b.gt	15ba4 <Perl_re_exec_indentf@@Base+0x99d4>
   15a10:	ldr	x0, [sp, #232]
   15a14:	ldr	x19, [x0, #80]
   15a18:	cmp	x23, x19
   15a1c:	b.eq	15c20 <Perl_re_exec_indentf@@Base+0x9a50>  // b.none
   15a20:	ldrb	w0, [x26]
   15a24:	cbz	w0, 15cc8 <Perl_re_exec_indentf@@Base+0x9af8>
   15a28:	ldr	w1, [x24, #72]
   15a2c:	cbnz	w1, 15a58 <Perl_re_exec_indentf@@Base+0x9888>
   15a30:	ldr	x1, [x24, #16]
   15a34:	ldr	x2, [x24, #8]
   15a38:	sub	x1, x1, x2
   15a3c:	lsr	w0, w0, #4
   15a40:	madd	w0, w0, w1, w0
   15a44:	cmp	w0, #0x0
   15a48:	mov	w1, #0x7fffffff            	// #2147483647
   15a4c:	csel	w0, w0, w1, ge  // ge = tcont
   15a50:	str	w0, [x24, #72]
   15a54:	str	w0, [x24, #76]
   15a58:	ldr	w0, [x24, #76]
   15a5c:	sub	w1, w0, #0x1
   15a60:	str	w1, [x24, #76]
   15a64:	cbnz	w0, 15ad4 <Perl_re_exec_indentf@@Base+0x9904>
   15a68:	ldr	w0, [x24, #72]
   15a6c:	add	w1, w0, #0xe
   15a70:	adds	w0, w0, #0x7
   15a74:	csel	w0, w1, w0, mi  // mi = first
   15a78:	asr	w0, w0, #3
   15a7c:	str	w0, [sp, #192]
   15a80:	sxtw	x1, w0
   15a84:	ldr	x19, [x24, #56]
   15a88:	ldr	x0, [x19, #24]
   15a8c:	cbz	x0, 15c9c <Perl_re_exec_indentf@@Base+0x9acc>
   15a90:	ldr	x2, [x24, #80]
   15a94:	cmp	x1, x2
   15a98:	b.gt	15c5c <Perl_re_exec_indentf@@Base+0x9a8c>
   15a9c:	ldrsw	x2, [sp, #192]
   15aa0:	mov	w1, #0x0                   	// #0
   15aa4:	bl	51f0 <memset@plt>
   15aa8:	ldr	w0, [x22, #2368]
   15aac:	tbnz	w0, #20, 15abc <Perl_re_exec_indentf@@Base+0x98ec>
   15ab0:	ldr	x0, [sp, #464]
   15ab4:	tst	x0, #0xff00
   15ab8:	b.eq	15ad4 <Perl_re_exec_indentf@@Base+0x9904>  // b.none
   15abc:	ldr	x3, [x22, #1488]
   15ac0:	ldr	x2, [x22, #1480]
   15ac4:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15ac8:	add	x1, x1, #0x4d0
   15acc:	mov	x0, x22
   15ad0:	bl	50e0 <Perl_re_printf@plt>
   15ad4:	ldr	w0, [x24, #76]
   15ad8:	tbz	w0, #31, 15d58 <Perl_re_exec_indentf@@Base+0x9b88>
   15adc:	mov	w0, #0xffffffff            	// #-1
   15ae0:	str	w0, [x24, #76]
   15ae4:	ldrb	w1, [x26]
   15ae8:	ldr	x0, [x24, #8]
   15aec:	sub	x0, x23, x0
   15af0:	ubfx	x2, x1, #4, #4
   15af4:	and	w1, w1, #0xf
   15af8:	sub	w1, w1, #0x1
   15afc:	sxtw	x1, w1
   15b00:	madd	x0, x0, x2, x1
   15b04:	negs	x1, x0
   15b08:	and	x2, x0, #0x7
   15b0c:	and	x1, x1, #0x7
   15b10:	csneg	x1, x2, x1, mi  // mi = first
   15b14:	mov	w2, #0x1                   	// #1
   15b18:	lsl	w2, w2, w1
   15b1c:	add	x1, x0, #0x7
   15b20:	cmp	x0, #0x0
   15b24:	csel	x0, x1, x0, lt  // lt = tstop
   15b28:	asr	x0, x0, #3
   15b2c:	ldr	x1, [x24, #56]
   15b30:	ldr	x1, [x1, #24]
   15b34:	ldrb	w3, [x1, x0]
   15b38:	sxtw	x1, w2
   15b3c:	tst	x3, x1
   15b40:	b.eq	15cb4 <Perl_re_exec_indentf@@Base+0x9ae4>  // b.none
   15b44:	ldr	w0, [x22, #2368]
   15b48:	tbnz	w0, #20, 15b58 <Perl_re_exec_indentf@@Base+0x9988>
   15b4c:	ldr	x0, [sp, #464]
   15b50:	tst	x0, #0xff00
   15b54:	b.eq	15b6c <Perl_re_exec_indentf@@Base+0x999c>  // b.none
   15b58:	mov	w2, w27
   15b5c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15b60:	add	x1, x1, #0x518
   15b64:	mov	x0, x22
   15b68:	bl	5290 <Perl_re_exec_indentf@plt>
   15b6c:	ldr	x1, [sp, #232]
   15b70:	ldr	w0, [x1, #76]
   15b74:	sub	w0, w0, #0x1
   15b78:	str	w0, [x1, #76]
   15b7c:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15b80:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15b84:	add	x3, x3, #0x330
   15b88:	add	x3, x3, #0xc80
   15b8c:	mov	w2, #0x1edf                	// #7903
   15b90:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15b94:	add	x1, x1, #0xcb0
   15b98:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   15b9c:	add	x0, x0, #0x440
   15ba0:	bl	58e0 <__assert_fail@plt>
   15ba4:	mov	w26, w27
   15ba8:	mov	x27, x24
   15bac:	mov	w4, w26
   15bb0:	ldr	w3, [sp, #452]
   15bb4:	ldr	x19, [sp, #232]
   15bb8:	ldr	w2, [x19, #72]
   15bbc:	ldr	x1, [sp, #152]
   15bc0:	mov	x0, x22
   15bc4:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   15bc8:	str	w0, [x25, #48]
   15bcc:	str	x23, [x19, #80]
   15bd0:	ldr	w0, [x22, #2368]
   15bd4:	tbnz	w0, #20, 15be0 <Perl_re_exec_indentf@@Base+0x9a10>
   15bd8:	ldr	x0, [sp, #464]
   15bdc:	tbz	w0, #19, 15bf8 <Perl_re_exec_indentf@@Base+0x9a28>
   15be0:	ldrsw	x3, [x22, #48]
   15be4:	mov	w2, w26
   15be8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   15bec:	add	x1, x1, #0xa20
   15bf0:	mov	x0, x22
   15bf4:	bl	5290 <Perl_re_exec_indentf@plt>
   15bf8:	ldr	w0, [x22, #48]
   15bfc:	str	w0, [x25, #52]
   15c00:	mov	w0, #0x6e                  	// #110
   15c04:	str	w0, [x25]
   15c08:	ldr	x0, [sp, #128]
   15c0c:	str	x0, [sp, #200]
   15c10:	str	x23, [sp, #192]
   15c14:	ldr	x0, [sp, #216]
   15c18:	str	x0, [sp, #144]
   15c1c:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   15c20:	mov	w26, w27
   15c24:	mov	x27, x24
   15c28:	ldr	w0, [x22, #2368]
   15c2c:	tbnz	w0, #20, 15c40 <Perl_re_exec_indentf@@Base+0x9a70>
   15c30:	ldr	x0, [sp, #464]
   15c34:	mov	x23, x19
   15c38:	tst	x0, #0xff00
   15c3c:	b.eq	15f00 <Perl_re_exec_indentf@@Base+0x9d30>  // b.none
   15c40:	mov	w2, w26
   15c44:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15c48:	add	x1, x1, #0x478
   15c4c:	mov	x0, x22
   15c50:	bl	5290 <Perl_re_exec_indentf@plt>
   15c54:	mov	x23, x19
   15c58:	b	15f00 <Perl_re_exec_indentf@@Base+0x9d30>
   15c5c:	str	x1, [sp, #200]
   15c60:	bl	5670 <Perl_safesysrealloc@plt>
   15c64:	str	x0, [x19, #24]
   15c68:	ldr	x1, [sp, #200]
   15c6c:	str	x1, [x24, #80]
   15c70:	ldr	x0, [x19, #24]
   15c74:	cbnz	x0, 15a9c <Perl_re_exec_indentf@@Base+0x98cc>
   15c78:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   15c7c:	add	x3, x3, #0x330
   15c80:	add	x3, x3, #0xc80
   15c84:	mov	w2, #0x1f3a                	// #7994
   15c88:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   15c8c:	add	x1, x1, #0xcb0
   15c90:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   15c94:	add	x0, x0, #0x4b0
   15c98:	bl	58e0 <__assert_fail@plt>
   15c9c:	ldrsw	x0, [sp, #192]
   15ca0:	str	x0, [x24, #80]
   15ca4:	mov	x1, #0x1                   	// #1
   15ca8:	bl	54c0 <Perl_safesyscalloc@plt>
   15cac:	str	x0, [x19, #24]
   15cb0:	b	15aa8 <Perl_re_exec_indentf@@Base+0x98d8>
   15cb4:	mov	w26, w27
   15cb8:	mov	x27, x24
   15cbc:	str	w0, [x25, #64]
   15cc0:	str	w2, [x25, #68]
   15cc4:	b	15cd0 <Perl_re_exec_indentf@@Base+0x9b00>
   15cc8:	mov	w26, w27
   15ccc:	mov	x27, x24
   15cd0:	ldr	x0, [sp, #232]
   15cd4:	ldrb	w0, [x0, #68]
   15cd8:	cbnz	w0, 15d64 <Perl_re_exec_indentf@@Base+0x9b94>
   15cdc:	cmp	w21, w20
   15ce0:	b.le	15f00 <Perl_re_exec_indentf@@Base+0x9d30>
   15ce4:	mov	w4, w26
   15ce8:	ldr	w3, [sp, #452]
   15cec:	ldr	x19, [sp, #232]
   15cf0:	ldr	w2, [x19, #72]
   15cf4:	ldr	x1, [sp, #152]
   15cf8:	mov	x0, x22
   15cfc:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   15d00:	str	w0, [x25, #48]
   15d04:	str	x23, [x19, #80]
   15d08:	ldr	w0, [x22, #2368]
   15d0c:	tbnz	w0, #20, 15d18 <Perl_re_exec_indentf@@Base+0x9b48>
   15d10:	ldr	x0, [sp, #464]
   15d14:	tbz	w0, #19, 15d30 <Perl_re_exec_indentf@@Base+0x9b60>
   15d18:	ldrsw	x3, [x22, #48]
   15d1c:	mov	w2, w26
   15d20:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   15d24:	add	x1, x1, #0xa20
   15d28:	mov	x0, x22
   15d2c:	bl	5290 <Perl_re_exec_indentf@plt>
   15d30:	ldr	w0, [x22, #48]
   15d34:	str	w0, [x25, #52]
   15d38:	mov	w0, #0x72                  	// #114
   15d3c:	str	w0, [x25]
   15d40:	ldr	x0, [sp, #128]
   15d44:	str	x0, [sp, #200]
   15d48:	str	x23, [sp, #192]
   15d4c:	ldr	x0, [sp, #216]
   15d50:	str	x0, [sp, #144]
   15d54:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   15d58:	mov	w26, w27
   15d5c:	mov	x27, x24
   15d60:	b	15cd0 <Perl_re_exec_indentf@@Base+0x9b00>
   15d64:	ldr	x1, [sp, #232]
   15d68:	str	x1, [x25, #40]
   15d6c:	ldr	x0, [x1, #40]
   15d70:	ldr	x1, [x1, #56]
   15d74:	str	x1, [sp, #144]
   15d78:	mov	w1, #0x74                  	// #116
   15d7c:	str	w1, [x25]
   15d80:	str	x0, [sp, #232]
   15d84:	ldr	x0, [sp, #128]
   15d88:	str	x0, [sp, #200]
   15d8c:	str	x23, [sp, #192]
   15d90:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   15d94:	ldr	x0, [x25, #40]
   15d98:	str	x0, [sp, #232]
   15d9c:	b	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   15da0:	ldr	x1, [x25, #40]
   15da4:	str	x1, [sp, #232]
   15da8:	ldr	x0, [x25, #56]
   15dac:	str	x0, [x1, #80]
   15db0:	ldr	w0, [x1, #76]
   15db4:	sub	w0, w0, #0x1
   15db8:	str	w0, [x1, #76]
   15dbc:	ldr	w0, [x25, #68]
   15dc0:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15dc4:	ldr	x2, [x24, #56]
   15dc8:	ldrsw	x1, [x25, #64]
   15dcc:	ldr	x2, [x2, #24]
   15dd0:	ldrb	w3, [x2, x1]
   15dd4:	orr	w0, w0, w3
   15dd8:	strb	w0, [x2, x1]
   15ddc:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15de0:	ldr	w0, [x22, #2368]
   15de4:	tbnz	w0, #20, 15df0 <Perl_re_exec_indentf@@Base+0x9c20>
   15de8:	ldr	x0, [sp, #464]
   15dec:	tbz	w0, #19, 15e00 <Perl_re_exec_indentf@@Base+0x9c30>
   15df0:	ldr	w3, [x25, #52]
   15df4:	ldr	w4, [x22, #48]
   15df8:	cmp	w3, w4
   15dfc:	b.ne	15e60 <Perl_re_exec_indentf@@Base+0x9c90>  // b.any
   15e00:	ldr	w1, [x25, #52]
   15e04:	ldr	w0, [x22, #48]
   15e08:	cmp	w0, w1
   15e0c:	b.gt	15e80 <Perl_re_exec_indentf@@Base+0x9cb0>
   15e10:	mov	w3, w27
   15e14:	add	x2, sp, #0x1c4
   15e18:	ldr	x1, [sp, #152]
   15e1c:	mov	x0, x22
   15e20:	bl	c310 <Perl_re_exec_indentf@@Base+0x140>
   15e24:	ldr	x0, [x25, #56]
   15e28:	ldr	x1, [sp, #232]
   15e2c:	str	x0, [x1, #80]
   15e30:	ldr	w0, [x1, #76]
   15e34:	sub	w0, w0, #0x1
   15e38:	str	w0, [x1, #76]
   15e3c:	ldr	w0, [x25, #68]
   15e40:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15e44:	ldr	x2, [x24, #56]
   15e48:	ldrsw	x1, [x25, #64]
   15e4c:	ldr	x2, [x2, #24]
   15e50:	ldrb	w3, [x2, x1]
   15e54:	orr	w0, w0, w3
   15e58:	strb	w0, [x2, x1]
   15e5c:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   15e60:	sxtw	x4, w4
   15e64:	sxtw	x3, w3
   15e68:	mov	w2, w27
   15e6c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   15e70:	add	x1, x1, #0xc30
   15e74:	mov	x0, x22
   15e78:	bl	5290 <Perl_re_exec_indentf@plt>
   15e7c:	b	15e00 <Perl_re_exec_indentf@@Base+0x9c30>
   15e80:	mov	x0, x22
   15e84:	bl	5660 <Perl_leave_scope@plt>
   15e88:	b	15e10 <Perl_re_exec_indentf@@Base+0x9c40>
   15e8c:	mov	w26, w27
   15e90:	mov	x27, x24
   15e94:	ldr	w0, [x22, #2368]
   15e98:	tbnz	w0, #20, 15ea4 <Perl_re_exec_indentf@@Base+0x9cd4>
   15e9c:	ldr	x0, [sp, #464]
   15ea0:	tbz	w0, #19, 15eb4 <Perl_re_exec_indentf@@Base+0x9ce4>
   15ea4:	ldr	w3, [x25, #52]
   15ea8:	ldr	w4, [x22, #48]
   15eac:	cmp	w3, w4
   15eb0:	b.ne	15f60 <Perl_re_exec_indentf@@Base+0x9d90>  // b.any
   15eb4:	ldr	w1, [x25, #52]
   15eb8:	ldr	w0, [x22, #48]
   15ebc:	cmp	w0, w1
   15ec0:	b.gt	15f80 <Perl_re_exec_indentf@@Base+0x9db0>
   15ec4:	mov	w3, w26
   15ec8:	add	x2, sp, #0x1c4
   15ecc:	ldr	x1, [sp, #152]
   15ed0:	mov	x0, x22
   15ed4:	bl	c310 <Perl_re_exec_indentf@@Base+0x140>
   15ed8:	ldr	w0, [x22, #2368]
   15edc:	tbnz	w0, #20, 15eec <Perl_re_exec_indentf@@Base+0x9d1c>
   15ee0:	ldr	x0, [sp, #464]
   15ee4:	tst	x0, #0xff00
   15ee8:	b.eq	15f00 <Perl_re_exec_indentf@@Base+0x9d30>  // b.none
   15eec:	mov	w2, w26
   15ef0:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   15ef4:	add	x1, x1, #0x550
   15ef8:	mov	x0, x22
   15efc:	bl	5290 <Perl_re_exec_indentf@plt>
   15f00:	ldr	x0, [sp, #232]
   15f04:	ldr	w1, [x0, #76]
   15f08:	mov	w0, #0xfffe                	// #65534
   15f0c:	cmp	w1, w0
   15f10:	b.le	15f30 <Perl_re_exec_indentf@@Base+0x9d60>
   15f14:	mov	w1, #0x14                  	// #20
   15f18:	mov	x0, x22
   15f1c:	bl	5870 <Perl_ckwarn@plt>
   15f20:	and	w0, w0, #0xff
   15f24:	cbz	w0, 15f30 <Perl_re_exec_indentf@@Base+0x9d60>
   15f28:	ldrb	w0, [x27, #91]
   15f2c:	cbz	w0, 15f8c <Perl_re_exec_indentf@@Base+0x9dbc>
   15f30:	ldr	x1, [sp, #232]
   15f34:	str	x1, [x25, #40]
   15f38:	ldr	x0, [x1, #40]
   15f3c:	ldr	x1, [x1, #56]
   15f40:	str	x1, [sp, #144]
   15f44:	mov	w1, #0x76                  	// #118
   15f48:	str	w1, [x25]
   15f4c:	str	x0, [sp, #232]
   15f50:	ldr	x0, [sp, #128]
   15f54:	str	x0, [sp, #200]
   15f58:	str	x23, [sp, #192]
   15f5c:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   15f60:	sxtw	x4, w4
   15f64:	sxtw	x3, w3
   15f68:	mov	w2, w26
   15f6c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   15f70:	add	x1, x1, #0xc30
   15f74:	mov	x0, x22
   15f78:	bl	5290 <Perl_re_exec_indentf@plt>
   15f7c:	b	15eb4 <Perl_re_exec_indentf@@Base+0x9ce4>
   15f80:	mov	x0, x22
   15f84:	bl	5660 <Perl_leave_scope@plt>
   15f88:	b	15ec4 <Perl_re_exec_indentf@@Base+0x9cf4>
   15f8c:	mov	w0, #0x1                   	// #1
   15f90:	strb	w0, [x27, #91]
   15f94:	mov	w3, #0xfffe                	// #65534
   15f98:	adrp	x2, 68000 <boot_re@@Base+0x641c>
   15f9c:	add	x2, x2, #0x578
   15fa0:	mov	w1, #0x14                  	// #20
   15fa4:	mov	x0, x22
   15fa8:	bl	5110 <Perl_warner@plt>
   15fac:	b	15f30 <Perl_re_exec_indentf@@Base+0x9d60>
   15fb0:	ldr	x1, [x25, #40]
   15fb4:	str	x1, [sp, #232]
   15fb8:	ldr	w0, [x1, #76]
   15fbc:	ldr	x1, [x1, #48]
   15fc0:	ldrh	w1, [x1, #6]
   15fc4:	cmp	w0, w1
   15fc8:	b.lt	1604c <Perl_re_exec_indentf@@Base+0x9e7c>  // b.tstop
   15fcc:	mov	w1, #0xfffe                	// #65534
   15fd0:	cmp	w0, w1
   15fd4:	b.le	15ff4 <Perl_re_exec_indentf@@Base+0x9e24>
   15fd8:	mov	w1, #0x14                  	// #20
   15fdc:	mov	x0, x22
   15fe0:	bl	5870 <Perl_ckwarn@plt>
   15fe4:	and	w0, w0, #0xff
   15fe8:	cbz	w0, 15ff4 <Perl_re_exec_indentf@@Base+0x9e24>
   15fec:	ldrb	w0, [x24, #91]
   15ff0:	cbz	w0, 16028 <Perl_re_exec_indentf@@Base+0x9e58>
   15ff4:	ldr	x1, [sp, #232]
   15ff8:	ldr	w0, [x1, #76]
   15ffc:	sub	w0, w0, #0x1
   16000:	str	w0, [x1, #76]
   16004:	ldr	w0, [x25, #68]
   16008:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1600c:	ldr	x2, [x24, #56]
   16010:	ldrsw	x1, [x25, #64]
   16014:	ldr	x2, [x2, #24]
   16018:	ldrb	w3, [x2, x1]
   1601c:	orr	w0, w0, w3
   16020:	strb	w0, [x2, x1]
   16024:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   16028:	mov	w0, #0x1                   	// #1
   1602c:	strb	w0, [x24, #91]
   16030:	mov	w3, #0xfffe                	// #65534
   16034:	adrp	x2, 68000 <boot_re@@Base+0x641c>
   16038:	add	x2, x2, #0x578
   1603c:	mov	w1, #0x14                  	// #20
   16040:	mov	x0, x22
   16044:	bl	5110 <Perl_warner@plt>
   16048:	b	15ff4 <Perl_re_exec_indentf@@Base+0x9e24>
   1604c:	mov	w26, w27
   16050:	mov	x27, x24
   16054:	ldr	w0, [x22, #2368]
   16058:	tbnz	w0, #20, 16068 <Perl_re_exec_indentf@@Base+0x9e98>
   1605c:	ldr	x0, [sp, #464]
   16060:	tst	x0, #0xff00
   16064:	b.eq	1607c <Perl_re_exec_indentf@@Base+0x9eac>  // b.none
   16068:	mov	w2, w26
   1606c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16070:	add	x1, x1, #0x5b8
   16074:	mov	x0, x22
   16078:	bl	5290 <Perl_re_exec_indentf@plt>
   1607c:	ldr	x0, [sp, #232]
   16080:	str	x23, [x0, #80]
   16084:	mov	w4, w26
   16088:	ldr	w3, [sp, #452]
   1608c:	ldr	w2, [x0, #72]
   16090:	ldr	x1, [sp, #152]
   16094:	mov	x0, x22
   16098:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   1609c:	str	w0, [x25, #48]
   160a0:	ldr	w0, [x22, #2368]
   160a4:	tbnz	w0, #20, 160b0 <Perl_re_exec_indentf@@Base+0x9ee0>
   160a8:	ldr	x0, [sp, #464]
   160ac:	tbz	w0, #19, 160c8 <Perl_re_exec_indentf@@Base+0x9ef8>
   160b0:	ldrsw	x3, [x22, #48]
   160b4:	mov	w2, w26
   160b8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   160bc:	add	x1, x1, #0xa20
   160c0:	mov	x0, x22
   160c4:	bl	5290 <Perl_re_exec_indentf@plt>
   160c8:	ldr	w0, [x22, #48]
   160cc:	str	w0, [x25, #52]
   160d0:	ldr	x0, [x25, #40]
   160d4:	ldr	x0, [x0, #48]
   160d8:	add	x0, x0, #0x8
   160dc:	str	x0, [sp, #144]
   160e0:	mov	w0, #0x70                  	// #112
   160e4:	str	w0, [x25]
   160e8:	ldr	x0, [sp, #128]
   160ec:	str	x0, [sp, #200]
   160f0:	str	x23, [sp, #192]
   160f4:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   160f8:	mov	x0, x24
   160fc:	mov	x24, x26
   16100:	mov	w26, w27
   16104:	mov	x27, x0
   16108:	ldr	w0, [x24, #4]
   1610c:	add	x0, x24, x0, lsl #2
   16110:	cmp	x24, x0
   16114:	csel	x0, x0, xzr, ne  // ne = any
   16118:	str	x0, [sp, #144]
   1611c:	add	x24, x24, #0x4
   16120:	add	x24, x24, #0x4
   16124:	ldr	x1, [sp, #152]
   16128:	ldr	w0, [x1, #112]
   1612c:	str	w0, [x25, #40]
   16130:	ldr	w0, [x1, #116]
   16134:	str	w0, [x25, #44]
   16138:	ldr	x0, [sp, #144]
   1613c:	str	x0, [x25, #56]
   16140:	ldr	w0, [x22, #2368]
   16144:	tbnz	w0, #20, 16150 <Perl_re_exec_indentf@@Base+0x9f80>
   16148:	ldr	x0, [sp, #464]
   1614c:	tbz	w0, #19, 16168 <Perl_re_exec_indentf@@Base+0x9f98>
   16150:	ldrsw	x3, [x22, #48]
   16154:	mov	w2, w26
   16158:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1615c:	add	x1, x1, #0xa20
   16160:	mov	x0, x22
   16164:	bl	5290 <Perl_re_exec_indentf@plt>
   16168:	ldr	w0, [x22, #48]
   1616c:	str	w0, [x25, #48]
   16170:	ldr	w0, [sp, #400]
   16174:	cbz	w0, 161bc <Perl_re_exec_indentf@@Base+0x9fec>
   16178:	mov	w0, #0x78                  	// #120
   1617c:	str	w0, [x25]
   16180:	ldr	x0, [sp, #128]
   16184:	str	x0, [sp, #200]
   16188:	str	x23, [sp, #192]
   1618c:	str	x24, [sp, #144]
   16190:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   16194:	mov	x0, x24
   16198:	mov	x24, x26
   1619c:	mov	w26, w27
   161a0:	mov	x27, x0
   161a4:	b	16120 <Perl_re_exec_indentf@@Base+0x9f50>
   161a8:	mov	x0, x24
   161ac:	mov	x24, x26
   161b0:	mov	w26, w27
   161b4:	mov	x27, x0
   161b8:	b	16120 <Perl_re_exec_indentf@@Base+0x9f50>
   161bc:	mov	w0, #0x78                  	// #120
   161c0:	str	w0, [x25]
   161c4:	ldr	x0, [sp, #128]
   161c8:	str	x0, [sp, #200]
   161cc:	str	x23, [sp, #192]
   161d0:	str	x24, [sp, #144]
   161d4:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   161d8:	mov	x0, x24
   161dc:	mov	x24, x26
   161e0:	mov	w26, w27
   161e4:	mov	x27, x0
   161e8:	ldrb	w0, [x24]
   161ec:	str	xzr, [sp, #304]
   161f0:	cbz	w0, 1620c <Perl_re_exec_indentf@@Base+0xa03c>
   161f4:	ldr	x0, [sp, #208]
   161f8:	ldr	x1, [x0, #24]
   161fc:	ldr	w0, [x24, #4]
   16200:	add	x0, x0, #0x2
   16204:	ldr	x0, [x1, x0, lsl #3]
   16208:	str	x0, [sp, #304]
   1620c:	ldr	x0, [sp, #304]
   16210:	str	x0, [x25, #48]
   16214:	mov	w0, #0x8a                  	// #138
   16218:	str	w0, [x25]
   1621c:	ldr	x0, [sp, #128]
   16220:	str	x0, [sp, #200]
   16224:	str	x23, [sp, #192]
   16228:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   1622c:	ldr	x0, [x25, #48]
   16230:	cbz	x0, 18ea8 <Perl_re_exec_indentf@@Base+0xccd8>
   16234:	str	x0, [sp, #328]
   16238:	mov	w0, #0x1                   	// #1
   1623c:	str	w0, [sp, #376]
   16240:	str	w0, [sp, #172]
   16244:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   16248:	ldr	w0, [sp, #376]
   1624c:	cmp	w0, #0x0
   16250:	ldr	w0, [sp, #172]
   16254:	csel	w0, w0, wzr, eq  // eq = none
   16258:	str	w0, [sp, #172]
   1625c:	ldr	w0, [x22, #2368]
   16260:	tbnz	w0, #20, 1626c <Perl_re_exec_indentf@@Base+0xa09c>
   16264:	ldr	x0, [sp, #464]
   16268:	tbz	w0, #19, 1627c <Perl_re_exec_indentf@@Base+0xa0ac>
   1626c:	ldr	w3, [x25, #48]
   16270:	ldr	w4, [x22, #48]
   16274:	cmp	w3, w4
   16278:	b.ne	16374 <Perl_re_exec_indentf@@Base+0xa1a4>  // b.any
   1627c:	ldr	w1, [x25, #48]
   16280:	ldr	w0, [x22, #48]
   16284:	cmp	w0, w1
   16288:	b.gt	16394 <Perl_re_exec_indentf@@Base+0xa1c4>
   1628c:	ldr	w0, [x22, #2368]
   16290:	tbnz	w0, #20, 1629c <Perl_re_exec_indentf@@Base+0xa0cc>
   16294:	ldr	x0, [sp, #464]
   16298:	tbz	w0, #22, 162c8 <Perl_re_exec_indentf@@Base+0xa0f8>
   1629c:	ldr	w7, [x25, #44]
   162a0:	ldr	x0, [sp, #152]
   162a4:	ldr	w6, [x0, #112]
   162a8:	ldr	w5, [x25, #40]
   162ac:	ldr	x4, [x0, #120]
   162b0:	mov	x3, x0
   162b4:	mov	w2, w27
   162b8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   162bc:	add	x1, x1, #0xc60
   162c0:	mov	x0, x22
   162c4:	bl	5290 <Perl_re_exec_indentf@plt>
   162c8:	ldr	x4, [sp, #152]
   162cc:	ldr	w1, [x4, #112]
   162d0:	ldr	w0, [x25, #40]
   162d4:	cmp	w1, w0
   162d8:	b.ls	16304 <Perl_re_exec_indentf@@Base+0xa134>  // b.plast
   162dc:	mov	x3, #0xffffffffffffffff    	// #-1
   162e0:	ldr	x2, [x4, #120]
   162e4:	ubfiz	x0, x1, #1, #32
   162e8:	add	x0, x0, w1, uxtw
   162ec:	add	x0, x2, x0, lsl #3
   162f0:	str	x3, [x0, #8]
   162f4:	sub	w1, w1, #0x1
   162f8:	ldr	w0, [x25, #40]
   162fc:	cmp	w1, w0
   16300:	b.hi	162e0 <Perl_re_exec_indentf@@Base+0xa110>  // b.pmore
   16304:	ldr	x2, [sp, #152]
   16308:	str	w1, [x2, #112]
   1630c:	ldr	w0, [x25, #44]
   16310:	str	w0, [x2, #116]
   16314:	ldr	x26, [x25, #56]
   16318:	cbz	x26, 16338 <Perl_re_exec_indentf@@Base+0xa168>
   1631c:	ldrb	w0, [x26, #1]
   16320:	cmp	w0, #0x22
   16324:	cset	w1, ne  // ne = any
   16328:	cmp	w0, #0x47
   1632c:	csel	w0, w1, wzr, ne  // ne = any
   16330:	str	w0, [sp, #376]
   16334:	cbz	w0, 18ab0 <Perl_re_exec_indentf@@Base+0xc8e0>
   16338:	ldr	w0, [x22, #2368]
   1633c:	tbnz	w0, #20, 16350 <Perl_re_exec_indentf@@Base+0xa180>
   16340:	ldr	x0, [sp, #464]
   16344:	str	wzr, [sp, #376]
   16348:	tst	x0, #0xff00
   1634c:	b.eq	12d50 <Perl_re_exec_indentf@@Base+0x6b80>  // b.none
   16350:	ldr	x4, [x22, #1488]
   16354:	ldr	x3, [x22, #1480]
   16358:	mov	w2, w27
   1635c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16360:	add	x1, x1, #0x5e0
   16364:	mov	x0, x22
   16368:	bl	5290 <Perl_re_exec_indentf@plt>
   1636c:	str	wzr, [sp, #376]
   16370:	b	12d50 <Perl_re_exec_indentf@@Base+0x6b80>
   16374:	sxtw	x4, w4
   16378:	sxtw	x3, w3
   1637c:	mov	w2, w27
   16380:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   16384:	add	x1, x1, #0xc30
   16388:	mov	x0, x22
   1638c:	bl	5290 <Perl_re_exec_indentf@plt>
   16390:	b	1627c <Perl_re_exec_indentf@@Base+0xa0ac>
   16394:	mov	x0, x22
   16398:	bl	5660 <Perl_leave_scope@plt>
   1639c:	b	1628c <Perl_re_exec_indentf@@Base+0xa0bc>
   163a0:	mov	w26, w27
   163a4:	mov	x27, x24
   163a8:	mov	w0, #0x1                   	// #1
   163ac:	str	w0, [sp, #260]
   163b0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   163b4:	mov	w20, #0xfffffff6            	// #-10
   163b8:	str	x26, [x25, #88]
   163bc:	mov	x0, x26
   163c0:	ldr	x2, [sp, #152]
   163c4:	ldr	w1, [x2, #112]
   163c8:	str	w1, [x25, #52]
   163cc:	ldr	w1, [x2, #116]
   163d0:	str	w1, [x25, #56]
   163d4:	ldrb	w1, [x0], #8
   163d8:	cbz	w1, 163f8 <Perl_re_exec_indentf@@Base+0xa228>
   163dc:	ldr	w2, [sp, #452]
   163e0:	cmp	w1, w2
   163e4:	b.ls	163ec <Perl_re_exec_indentf@@Base+0xa21c>  // b.plast
   163e8:	str	w1, [sp, #452]
   163ec:	ldrh	w1, [x26, #10]
   163f0:	add	x26, x0, x1, lsl #2
   163f4:	b	163fc <Perl_re_exec_indentf@@Base+0xa22c>
   163f8:	mov	x26, x0
   163fc:	str	x26, [x25, #72]
   16400:	ldr	x0, [sp, #144]
   16404:	str	x0, [x25, #80]
   16408:	str	wzr, [x25, #60]
   1640c:	str	wzr, [x25, #64]
   16410:	ldrb	w0, [sp, #260]
   16414:	strb	w0, [x25, #68]
   16418:	mov	w0, #0xfffffc17            	// #-1001
   1641c:	str	w0, [x25, #40]
   16420:	ldr	w0, [x22, #2368]
   16424:	tbnz	w0, #20, 16430 <Perl_re_exec_indentf@@Base+0xa260>
   16428:	ldr	x0, [sp, #464]
   1642c:	tbz	w0, #19, 16448 <Perl_re_exec_indentf@@Base+0xa278>
   16430:	ldrsw	x3, [x22, #48]
   16434:	mov	w2, w27
   16438:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1643c:	add	x1, x1, #0xa20
   16440:	mov	x0, x22
   16444:	bl	5290 <Perl_re_exec_indentf@plt>
   16448:	ldr	w0, [x22, #48]
   1644c:	str	w0, [x25, #48]
   16450:	ldrb	w0, [x25, #68]
   16454:	cbz	w0, 1660c <Perl_re_exec_indentf@@Base+0xa43c>
   16458:	ldr	x0, [x25, #88]
   1645c:	ldrh	w0, [x0, #4]
   16460:	cmp	w0, #0x0
   16464:	cset	w0, eq  // eq = none
   16468:	str	w0, [sp, #260]
   1646c:	ldr	w0, [sp, #260]
   16470:	cbz	w0, 16624 <Perl_re_exec_indentf@@Base+0xa454>
   16474:	str	wzr, [sp, #260]
   16478:	ldr	w0, [x25, #40]
   1647c:	cmn	w0, #0x3e9
   16480:	b.eq	16830 <Perl_re_exec_indentf@@Base+0xa660>  // b.none
   16484:	ldr	w0, [x22, #2368]
   16488:	tbnz	w0, #20, 16498 <Perl_re_exec_indentf@@Base+0xa2c8>
   1648c:	ldr	x0, [sp, #464]
   16490:	tst	x0, #0xff00
   16494:	b.eq	164b0 <Perl_re_exec_indentf@@Base+0xa2e0>  // b.none
   16498:	ldrsw	x3, [x25, #64]
   1649c:	mov	w2, w27
   164a0:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   164a4:	add	x1, x1, #0x630
   164a8:	mov	x0, x22
   164ac:	bl	5290 <Perl_re_exec_indentf@plt>
   164b0:	tbnz	w20, #31, 1653c <Perl_re_exec_indentf@@Base+0xa36c>
   164b4:	ldr	w4, [x25, #40]
   164b8:	cmn	w4, #0x3e8
   164bc:	b.eq	1653c <Perl_re_exec_indentf@@Base+0xa36c>  // b.none
   164c0:	cmp	w20, #0x7f
   164c4:	ldr	w0, [sp, #168]
   164c8:	ccmp	w0, #0x0, #0x4, hi  // hi = pmore
   164cc:	b.eq	16ba4 <Perl_re_exec_indentf@@Base+0xa9d4>  // b.none
   164d0:	ldr	x0, [x24, #16]
   164d4:	cmp	x0, x23
   164d8:	b.cc	16a38 <Perl_re_exec_indentf@@Base+0xa868>  // b.lo, b.ul, b.last
   164dc:	sub	x0, x0, x23
   164e0:	cmp	x0, #0x0
   164e4:	b.le	1653c <Perl_re_exec_indentf@@Base+0xa36c>
   164e8:	add	x3, x25, #0x60
   164ec:	str	x3, [sp, #192]
   164f0:	ldrb	w21, [x23]
   164f4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   164f8:	ldr	x1, [x1, #4064]
   164fc:	ldrb	w20, [x1, w21, sxtw]
   16500:	and	x19, x20, #0xff
   16504:	cmp	x0, w20, uxtb
   16508:	csel	x19, x19, x0, ge  // ge = tcont
   1650c:	mov	x2, x19
   16510:	mov	x1, x3
   16514:	mov	x0, x23
   16518:	bl	5460 <memcmp@plt>
   1651c:	cbz	w0, 1653c <Perl_re_exec_indentf@@Base+0xa36c>
   16520:	add	x0, x25, #0x6e
   16524:	str	x0, [sp, #200]
   16528:	mov	x2, x19
   1652c:	mov	x1, x0
   16530:	mov	x0, x23
   16534:	bl	5460 <memcmp@plt>
   16538:	cbnz	w0, 16a5c <Perl_re_exec_indentf@@Base+0xa88c>
   1653c:	ldr	x0, [x25, #88]
   16540:	ldrb	w19, [x0]
   16544:	cbz	w19, 16ef4 <Perl_re_exec_indentf@@Base+0xad24>
   16548:	ldr	w0, [x25, #64]
   1654c:	cbz	w0, 16c04 <Perl_re_exec_indentf@@Base+0xaa34>
   16550:	ldrb	w0, [x24, #90]
   16554:	cbz	w0, 16bf4 <Perl_re_exec_indentf@@Base+0xaa24>
   16558:	ldr	w0, [x25, #60]
   1655c:	neg	w0, w0
   16560:	sxtw	x1, w0
   16564:	tbnz	w0, #31, 16bec <Perl_re_exec_indentf@@Base+0xaa1c>
   16568:	ldr	x2, [x24, #16]
   1656c:	mov	x0, x23
   16570:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   16574:	and	x5, x19, #0xff
   16578:	ubfiz	x1, x19, #1, #8
   1657c:	add	x1, x1, w19, uxtb
   16580:	lsl	x3, x1, #3
   16584:	ldr	x6, [sp, #152]
   16588:	ldr	x2, [x6, #120]
   1658c:	ldr	x4, [x24, #8]
   16590:	sub	x0, x0, x4
   16594:	str	x0, [x2, x1, lsl #3]
   16598:	ldr	x0, [x6, #120]
   1659c:	add	x0, x0, x3
   165a0:	ldr	x2, [x24, #8]
   165a4:	sub	x2, x23, x2
   165a8:	str	x2, [x0, #8]
   165ac:	ldr	w0, [x6, #112]
   165b0:	cmp	w19, w0
   165b4:	b.ls	165bc <Perl_re_exec_indentf@@Base+0xa3ec>  // b.plast
   165b8:	str	w19, [x6, #112]
   165bc:	ldr	x0, [sp, #152]
   165c0:	str	w19, [x0, #116]
   165c4:	ldr	w0, [x22, #2368]
   165c8:	tbnz	w0, #20, 165d4 <Perl_re_exec_indentf@@Base+0xa404>
   165cc:	ldr	x0, [sp, #464]
   165d0:	tbz	w0, #22, 16c20 <Perl_re_exec_indentf@@Base+0xaa50>
   165d4:	ldr	x0, [sp, #152]
   165d8:	ldr	x4, [x0, #120]
   165dc:	add	x3, x4, x3
   165e0:	ldr	x7, [x3, #8]
   165e4:	ldr	x6, [x4, x1, lsl #3]
   165e8:	mov	x3, x0
   165ec:	ldr	w0, [x0, #112]
   165f0:	str	x0, [sp]
   165f4:	mov	w2, w27
   165f8:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   165fc:	add	x1, x1, #0x3f8
   16600:	mov	x0, x22
   16604:	bl	5290 <Perl_re_exec_indentf@plt>
   16608:	b	16c20 <Perl_re_exec_indentf@@Base+0xaa50>
   1660c:	ldr	x0, [x25, #88]
   16610:	ldrh	w0, [x0, #6]
   16614:	cmp	w0, #0x0
   16618:	cset	w0, eq  // eq = none
   1661c:	str	w0, [sp, #260]
   16620:	b	1646c <Perl_re_exec_indentf@@Base+0xa29c>
   16624:	mov	w26, w27
   16628:	mov	x27, x24
   1662c:	ldr	x0, [x25, #72]
   16630:	str	x0, [sp, #144]
   16634:	mov	w0, #0x7a                  	// #122
   16638:	str	w0, [x25]
   1663c:	ldr	x0, [sp, #128]
   16640:	str	x0, [sp, #200]
   16644:	str	x23, [sp, #192]
   16648:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   1664c:	mov	w26, w27
   16650:	mov	x27, x24
   16654:	b	1662c <Perl_re_exec_indentf@@Base+0xa45c>
   16658:	mov	w26, w27
   1665c:	mov	x27, x24
   16660:	b	1662c <Perl_re_exec_indentf@@Base+0xa45c>
   16664:	mov	w20, #0xfffffff6            	// #-10
   16668:	ldr	w0, [x25, #64]
   1666c:	add	w0, w0, #0x1
   16670:	str	w0, [x25, #64]
   16674:	cmp	w0, #0x1
   16678:	b.eq	16708 <Perl_re_exec_indentf@@Base+0xa538>  // b.none
   1667c:	ldr	w0, [x22, #2368]
   16680:	tbnz	w0, #20, 16690 <Perl_re_exec_indentf@@Base+0xa4c0>
   16684:	ldr	x0, [sp, #464]
   16688:	tst	x0, #0xff00
   1668c:	b.eq	166ac <Perl_re_exec_indentf@@Base+0xa4dc>  // b.none
   16690:	ldrsw	x4, [x25, #60]
   16694:	ldrsw	x3, [x25, #64]
   16698:	mov	w2, w27
   1669c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   166a0:	add	x1, x1, #0x5f8
   166a4:	mov	x0, x22
   166a8:	bl	5290 <Perl_re_exec_indentf@plt>
   166ac:	ldr	x0, [sp, #176]
   166b0:	cbz	x0, 166d4 <Perl_re_exec_indentf@@Base+0xa504>
   166b4:	ldr	w0, [x0, #72]
   166b8:	cbz	w0, 166d4 <Perl_re_exec_indentf@@Base+0xa504>
   166bc:	ldr	x1, [x25, #88]
   166c0:	ldrb	w1, [x1]
   166c4:	cbz	w1, 166d4 <Perl_re_exec_indentf@@Base+0xa504>
   166c8:	add	w1, w1, #0x1
   166cc:	cmp	w0, w1
   166d0:	b.eq	17fc0 <Perl_re_exec_indentf@@Base+0xbdf0>  // b.none
   166d4:	ldrb	w0, [x25, #68]
   166d8:	cbz	w0, 16780 <Perl_re_exec_indentf@@Base+0xa5b0>
   166dc:	ldr	x0, [x25, #88]
   166e0:	ldrh	w0, [x0, #4]
   166e4:	mov	w1, #0xffff                	// #65535
   166e8:	cmp	w0, w1
   166ec:	b.eq	1664c <Perl_re_exec_indentf@@Base+0xa47c>  // b.none
   166f0:	ldr	w1, [x25, #64]
   166f4:	cmp	w0, w1
   166f8:	b.le	16478 <Perl_re_exec_indentf@@Base+0xa2a8>
   166fc:	mov	w26, w27
   16700:	mov	x27, x24
   16704:	b	1662c <Perl_re_exec_indentf@@Base+0xa45c>
   16708:	ldrb	w0, [x24, #90]
   1670c:	cbnz	w0, 1673c <Perl_re_exec_indentf@@Base+0xa56c>
   16710:	ldr	x0, [x25, #8]
   16714:	sub	x0, x23, x0
   16718:	str	w0, [x25, #60]
   1671c:	ldr	w0, [x25, #60]
   16720:	cbnz	w0, 1667c <Perl_re_exec_indentf@@Base+0xa4ac>
   16724:	ldrb	w0, [x25, #68]
   16728:	cbz	w0, 16774 <Perl_re_exec_indentf@@Base+0xa5a4>
   1672c:	ldr	x0, [x25, #88]
   16730:	ldrh	w0, [x0, #4]
   16734:	str	w0, [x25, #64]
   16738:	b	1667c <Perl_re_exec_indentf@@Base+0xa4ac>
   1673c:	ldr	x0, [x25, #8]
   16740:	cmp	x23, x0
   16744:	b.ls	1671c <Perl_re_exec_indentf@@Base+0xa54c>  // b.plast
   16748:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1674c:	ldr	x2, [x2, #4064]
   16750:	ldr	w1, [x25, #60]
   16754:	add	w1, w1, #0x1
   16758:	str	w1, [x25, #60]
   1675c:	ldrb	w1, [x0]
   16760:	ldrb	w1, [x2, w1, sxtw]
   16764:	add	x0, x0, x1
   16768:	cmp	x23, x0
   1676c:	b.hi	16750 <Perl_re_exec_indentf@@Base+0xa580>  // b.pmore
   16770:	b	1671c <Perl_re_exec_indentf@@Base+0xa54c>
   16774:	ldr	x0, [x25, #88]
   16778:	ldrh	w0, [x0, #6]
   1677c:	b	16734 <Perl_re_exec_indentf@@Base+0xa564>
   16780:	ldr	x0, [x25, #88]
   16784:	ldrh	w0, [x0, #6]
   16788:	b	166e4 <Perl_re_exec_indentf@@Base+0xa514>
   1678c:	mov	w20, #0xfffffff6            	// #-10
   16790:	ldr	w0, [x22, #2368]
   16794:	tbnz	w0, #20, 167a0 <Perl_re_exec_indentf@@Base+0xa5d0>
   16798:	ldr	x0, [sp, #464]
   1679c:	tbz	w0, #19, 167b0 <Perl_re_exec_indentf@@Base+0xa5e0>
   167a0:	ldr	w3, [x25, #48]
   167a4:	ldr	w4, [x22, #48]
   167a8:	cmp	w3, w4
   167ac:	b.ne	16804 <Perl_re_exec_indentf@@Base+0xa634>  // b.any
   167b0:	ldr	w1, [x25, #48]
   167b4:	ldr	w0, [x22, #48]
   167b8:	cmp	w0, w1
   167bc:	b.gt	16824 <Perl_re_exec_indentf@@Base+0xa654>
   167c0:	ldrb	w0, [x25, #68]
   167c4:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   167c8:	ldr	x0, [x25, #88]
   167cc:	ldrh	w1, [x0, #4]
   167d0:	ldr	w2, [x25, #64]
   167d4:	cmp	w2, w1
   167d8:	b.lt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.tstop
   167dc:	ldr	x1, [sp, #176]
   167e0:	cbz	x1, 16478 <Perl_re_exec_indentf@@Base+0xa2a8>
   167e4:	ldr	w1, [x1, #72]
   167e8:	cbz	w1, 16478 <Perl_re_exec_indentf@@Base+0xa2a8>
   167ec:	ldrb	w0, [x0]
   167f0:	cbz	w0, 16478 <Perl_re_exec_indentf@@Base+0xa2a8>
   167f4:	add	w0, w0, #0x1
   167f8:	cmp	w1, w0
   167fc:	b.ne	16478 <Perl_re_exec_indentf@@Base+0xa2a8>  // b.any
   16800:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   16804:	sxtw	x4, w4
   16808:	sxtw	x3, w3
   1680c:	mov	w2, w27
   16810:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   16814:	add	x1, x1, #0xc30
   16818:	mov	x0, x22
   1681c:	bl	5290 <Perl_re_exec_indentf@plt>
   16820:	b	167b0 <Perl_re_exec_indentf@@Base+0xa5e0>
   16824:	mov	x0, x22
   16828:	bl	5660 <Perl_leave_scope@plt>
   1682c:	b	167c0 <Perl_re_exec_indentf@@Base+0xa5f0>
   16830:	mov	w0, #0xfffffc18            	// #-1000
   16834:	str	w0, [x25, #44]
   16838:	str	w0, [x25, #40]
   1683c:	ldr	x1, [x25, #80]
   16840:	cbz	x1, 168bc <Perl_re_exec_indentf@@Base+0xa6ec>
   16844:	ldrb	w2, [x1, #1]
   16848:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1684c:	ldr	x0, [x0, #3768]
   16850:	ldrb	w0, [x0, w2, sxtw]
   16854:	cmp	w0, #0x23
   16858:	mov	w3, #0x3c                  	// #60
   1685c:	ccmp	w0, w3, #0x4, ne  // ne = any
   16860:	mov	w3, #0x38                  	// #56
   16864:	ccmp	w2, w3, #0x4, ne  // ne = any
   16868:	b.ne	168e0 <Perl_re_exec_indentf@@Base+0xa710>  // b.any
   1686c:	cmp	w0, #0x23
   16870:	mov	w2, #0x3c                  	// #60
   16874:	ccmp	w0, w2, #0x4, ne  // ne = any
   16878:	b.ne	16918 <Perl_re_exec_indentf@@Base+0xa748>  // b.any
   1687c:	ldrb	w2, [x1, #1]
   16880:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   16884:	ldr	x0, [x0, #3768]
   16888:	ldrb	w0, [x0, w2, sxtw]
   1688c:	cmp	w0, #0x23
   16890:	b.ne	16484 <Perl_re_exec_indentf@@Base+0xa2b4>  // b.any
   16894:	mov	x6, x24
   16898:	add	x5, x25, #0x6e
   1689c:	add	x4, x25, #0x2c
   168a0:	add	x3, x25, #0x60
   168a4:	add	x2, x25, #0x28
   168a8:	mov	x0, x22
   168ac:	bl	a080 <Perl__inverse_folds@plt+0x4680>
   168b0:	and	w0, w0, #0xff
   168b4:	cbnz	w0, 16484 <Perl_re_exec_indentf@@Base+0xa2b4>
   168b8:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   168bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   168c0:	add	x3, x3, #0x330
   168c4:	add	x3, x3, #0xc80
   168c8:	mov	w2, #0x2062                	// #8290
   168cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   168d0:	add	x1, x1, #0xcb0
   168d4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   168d8:	add	x0, x0, #0x628
   168dc:	bl	58e0 <__assert_fail@plt>
   168e0:	cmp	w2, #0x39
   168e4:	b.eq	1692c <Perl_re_exec_indentf@@Base+0xa75c>  // b.none
   168e8:	and	w4, w2, #0xfffffffd
   168ec:	and	w4, w4, #0xff
   168f0:	sub	w3, w2, #0x4d
   168f4:	and	w3, w3, #0xff
   168f8:	cmp	w4, #0x48
   168fc:	ccmp	w3, #0x1, #0x0, ne  // ne = any
   16900:	cset	w3, ls  // ls = plast
   16904:	cmp	w2, #0x62
   16908:	mov	w4, #0x32                  	// #50
   1690c:	ccmp	w2, w4, #0x4, ne  // ne = any
   16910:	csinc	w2, w3, wzr, ne  // ne = any
   16914:	cbz	w2, 1694c <Perl_re_exec_indentf@@Base+0xa77c>
   16918:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   1691c:	ldr	x6, [x4, #3768]
   16920:	mov	w5, #0x62                  	// #98
   16924:	mov	x4, x6
   16928:	b	169e8 <Perl_re_exec_indentf@@Base+0xa818>
   1692c:	ldr	x2, [sp, #176]
   16930:	cbz	x2, 16918 <Perl_re_exec_indentf@@Base+0xa748>
   16934:	ldr	w2, [x2, #72]
   16938:	cbz	w2, 16918 <Perl_re_exec_indentf@@Base+0xa748>
   1693c:	ldr	w3, [x1, #4]
   16940:	add	w3, w3, #0x1
   16944:	cmp	w2, w3
   16948:	b.ne	16918 <Perl_re_exec_indentf@@Base+0xa748>  // b.any
   1694c:	cmp	w0, #0x33
   16950:	b.ne	16484 <Perl_re_exec_indentf@@Base+0xa2b4>  // b.any
   16954:	ldrh	w0, [x1, #4]
   16958:	cbnz	w0, 16918 <Perl_re_exec_indentf@@Base+0xa748>
   1695c:	b	16484 <Perl_re_exec_indentf@@Base+0xa2b4>
   16960:	add	x1, x1, #0x4
   16964:	b	169e8 <Perl_re_exec_indentf@@Base+0xa818>
   16968:	ldrb	w0, [x1]
   1696c:	cbnz	w0, 16978 <Perl_re_exec_indentf@@Base+0xa7a8>
   16970:	add	x1, x1, #0x8
   16974:	b	169e8 <Perl_re_exec_indentf@@Base+0xa818>
   16978:	ldr	w0, [x1, #4]
   1697c:	add	x1, x1, x0, lsl #2
   16980:	b	169e8 <Perl_re_exec_indentf@@Base+0xa818>
   16984:	ldr	x2, [sp, #176]
   16988:	cbz	x2, 169a4 <Perl_re_exec_indentf@@Base+0xa7d4>
   1698c:	ldr	w2, [x2, #72]
   16990:	cbz	w2, 169a4 <Perl_re_exec_indentf@@Base+0xa7d4>
   16994:	ldr	w3, [x1, #4]
   16998:	add	w3, w3, #0x1
   1699c:	cmp	w2, w3
   169a0:	b.eq	169d0 <Perl_re_exec_indentf@@Base+0xa800>  // b.none
   169a4:	and	w2, w0, #0xffff
   169a8:	ldrb	w0, [x4, w0, sxtw]
   169ac:	cmp	w0, #0x33
   169b0:	b.eq	169e4 <Perl_re_exec_indentf@@Base+0xa814>  // b.none
   169b4:	cmp	w2, #0x32
   169b8:	b.eq	16960 <Perl_re_exec_indentf@@Base+0xa790>  // b.none
   169bc:	cmp	w2, #0x48
   169c0:	b.eq	16968 <Perl_re_exec_indentf@@Base+0xa798>  // b.none
   169c4:	ldrh	w0, [x1, #2]
   169c8:	add	x1, x1, x0, lsl #2
   169cc:	b	169e8 <Perl_re_exec_indentf@@Base+0xa818>
   169d0:	ldrb	w0, [x6, w0, sxtw]
   169d4:	cmp	w0, #0x33
   169d8:	b.ne	1687c <Perl_re_exec_indentf@@Base+0xa6ac>  // b.any
   169dc:	ldrh	w0, [x1, #4]
   169e0:	cbz	w0, 16484 <Perl_re_exec_indentf@@Base+0xa2b4>
   169e4:	add	x1, x1, #0x8
   169e8:	ldrb	w0, [x1, #1]
   169ec:	cmp	w0, #0x38
   169f0:	b.eq	169a4 <Perl_re_exec_indentf@@Base+0xa7d4>  // b.none
   169f4:	cmp	w0, #0x39
   169f8:	b.eq	16984 <Perl_re_exec_indentf@@Base+0xa7b4>  // b.none
   169fc:	and	w3, w0, #0xfffffffd
   16a00:	and	w3, w3, #0xff
   16a04:	sub	w2, w0, #0x4d
   16a08:	and	w2, w2, #0xff
   16a0c:	cmp	w3, #0x48
   16a10:	ccmp	w2, #0x1, #0x0, ne  // ne = any
   16a14:	cset	w2, ls  // ls = plast
   16a18:	cmp	w0, #0x32
   16a1c:	ccmp	w0, w5, #0x4, ne  // ne = any
   16a20:	csinc	w2, w2, wzr, ne  // ne = any
   16a24:	cbz	w2, 169d0 <Perl_re_exec_indentf@@Base+0xa800>
   16a28:	and	w2, w0, #0xffff
   16a2c:	cmp	w2, #0x4a
   16a30:	b.eq	169e4 <Perl_re_exec_indentf@@Base+0xa814>  // b.none
   16a34:	b	169a8 <Perl_re_exec_indentf@@Base+0xa7d8>
   16a38:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   16a3c:	add	x3, x3, #0x330
   16a40:	add	x3, x3, #0xc80
   16a44:	mov	w2, #0x207d                	// #8317
   16a48:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   16a4c:	add	x1, x1, #0xcb0
   16a50:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   16a54:	add	x0, x0, #0xd88
   16a58:	bl	58e0 <__assert_fail@plt>
   16a5c:	ldr	w0, [x22, #2368]
   16a60:	tbnz	w0, #20, 16a70 <Perl_re_exec_indentf@@Base+0xa8a0>
   16a64:	ldr	x0, [sp, #464]
   16a68:	mov	w19, #0x7d                  	// #125
   16a6c:	tbz	w0, #1, 18a14 <Perl_re_exec_indentf@@Base+0xc844>
   16a70:	and	x1, x20, #0xff
   16a74:	add	x2, x23, w20, uxtb
   16a78:	and	x3, x21, #0xff
   16a7c:	cmp	x1, #0x1
   16a80:	b.eq	16ac0 <Perl_re_exec_indentf@@Base+0xa8f0>  // b.none
   16a84:	sub	w20, w20, #0x2
   16a88:	mov	w0, #0x1f                  	// #31
   16a8c:	asr	w20, w0, w20
   16a90:	cmp	x1, #0x7
   16a94:	csel	w0, w20, wzr, cc  // cc = lo, ul, last
   16a98:	and	w21, w21, w0
   16a9c:	sxtw	x3, w21
   16aa0:	add	x0, x23, #0x1
   16aa4:	cmp	x2, x0
   16aa8:	b.ls	16ac0 <Perl_re_exec_indentf@@Base+0xa8f0>  // b.plast
   16aac:	ldrb	w1, [x0], #1
   16ab0:	bfi	x1, x3, #6, #58
   16ab4:	mov	x3, x1
   16ab8:	cmp	x2, x0
   16abc:	b.ne	16aac <Perl_re_exec_indentf@@Base+0xa8dc>  // b.any
   16ac0:	ldrb	w0, [x25, #96]
   16ac4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   16ac8:	ldr	x1, [x1, #4064]
   16acc:	ldrb	w1, [x1, w0, sxtw]
   16ad0:	and	x2, x1, #0xff
   16ad4:	ldr	x4, [sp, #192]
   16ad8:	add	x5, x4, w1, uxtb
   16adc:	and	x4, x0, #0xff
   16ae0:	cmp	x2, #0x1
   16ae4:	b.eq	16b24 <Perl_re_exec_indentf@@Base+0xa954>  // b.none
   16ae8:	sub	w1, w1, #0x2
   16aec:	mov	w4, #0x1f                  	// #31
   16af0:	asr	w4, w4, w1
   16af4:	cmp	x2, #0x7
   16af8:	csel	w4, w4, wzr, cc  // cc = lo, ul, last
   16afc:	and	w0, w0, w4
   16b00:	sxtw	x4, w0
   16b04:	add	x0, x25, #0x61
   16b08:	cmp	x5, x0
   16b0c:	b.ls	16b24 <Perl_re_exec_indentf@@Base+0xa954>  // b.plast
   16b10:	ldrb	w1, [x0], #1
   16b14:	bfi	x1, x4, #6, #58
   16b18:	mov	x4, x1
   16b1c:	cmp	x5, x0
   16b20:	b.ne	16b10 <Perl_re_exec_indentf@@Base+0xa940>  // b.any
   16b24:	ldrb	w0, [x25, #110]
   16b28:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   16b2c:	ldr	x1, [x1, #4064]
   16b30:	ldrb	w1, [x1, w0, sxtw]
   16b34:	and	x2, x1, #0xff
   16b38:	ldr	x5, [sp, #200]
   16b3c:	add	x6, x5, w1, uxtb
   16b40:	and	x5, x0, #0xff
   16b44:	cmp	x2, #0x1
   16b48:	b.eq	16b88 <Perl_re_exec_indentf@@Base+0xa9b8>  // b.none
   16b4c:	sub	w1, w1, #0x2
   16b50:	mov	w5, #0x1f                  	// #31
   16b54:	asr	w5, w5, w1
   16b58:	cmp	x2, #0x7
   16b5c:	csel	w5, w5, wzr, cc  // cc = lo, ul, last
   16b60:	and	w0, w0, w5
   16b64:	sxtw	x5, w0
   16b68:	add	x0, x25, #0x6f
   16b6c:	cmp	x6, x0
   16b70:	b.ls	16b88 <Perl_re_exec_indentf@@Base+0xa9b8>  // b.plast
   16b74:	ldrb	w1, [x0], #1
   16b78:	bfi	x1, x5, #6, #58
   16b7c:	mov	x5, x1
   16b80:	cmp	x6, x0
   16b84:	b.ne	16b74 <Perl_re_exec_indentf@@Base+0xa9a4>  // b.any
   16b88:	mov	w2, w27
   16b8c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16b90:	add	x1, x1, #0x658
   16b94:	mov	x0, x22
   16b98:	bl	5290 <Perl_re_exec_indentf@plt>
   16b9c:	mov	w19, #0x7d                  	// #125
   16ba0:	b	18a14 <Perl_re_exec_indentf@@Base+0xc844>
   16ba4:	cmp	w20, w4
   16ba8:	b.eq	1653c <Perl_re_exec_indentf@@Base+0xa36c>  // b.none
   16bac:	ldr	w5, [x25, #44]
   16bb0:	cmp	w20, w5
   16bb4:	b.eq	1653c <Perl_re_exec_indentf@@Base+0xa36c>  // b.none
   16bb8:	ldr	w0, [x22, #2368]
   16bbc:	tbnz	w0, #20, 16bcc <Perl_re_exec_indentf@@Base+0xa9fc>
   16bc0:	ldr	x0, [sp, #464]
   16bc4:	mov	w19, #0x7d                  	// #125
   16bc8:	tbz	w0, #1, 18a14 <Perl_re_exec_indentf@@Base+0xc844>
   16bcc:	mov	w3, w20
   16bd0:	mov	w2, w27
   16bd4:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16bd8:	add	x1, x1, #0x690
   16bdc:	mov	x0, x22
   16be0:	bl	5290 <Perl_re_exec_indentf@plt>
   16be4:	mov	w19, #0x7d                  	// #125
   16be8:	b	18a14 <Perl_re_exec_indentf@@Base+0xc844>
   16bec:	ldr	x2, [x24, #8]
   16bf0:	b	1656c <Perl_re_exec_indentf@@Base+0xa39c>
   16bf4:	ldr	w0, [x25, #60]
   16bf8:	neg	w0, w0
   16bfc:	add	x0, x23, w0, sxtw
   16c00:	b	16574 <Perl_re_exec_indentf@@Base+0xa3a4>
   16c04:	ldr	x0, [sp, #152]
   16c08:	ldr	x0, [x0, #120]
   16c0c:	ubfiz	x1, x19, #1, #8
   16c10:	add	x19, x1, w19, uxtb
   16c14:	add	x19, x0, x19, lsl #3
   16c18:	mov	x0, #0xffffffffffffffff    	// #-1
   16c1c:	str	x0, [x19, #8]
   16c20:	ldr	x0, [sp, #176]
   16c24:	cbz	x0, 16ef4 <Perl_re_exec_indentf@@Base+0xad24>
   16c28:	ldr	w1, [x0, #72]
   16c2c:	cbz	w1, 16ef4 <Perl_re_exec_indentf@@Base+0xad24>
   16c30:	ldr	x0, [x25, #88]
   16c34:	ldrb	w0, [x0]
   16c38:	cbz	w0, 16ef4 <Perl_re_exec_indentf@@Base+0xad24>
   16c3c:	add	w0, w0, #0x1
   16c40:	cmp	w1, w0
   16c44:	b.ne	16ef4 <Perl_re_exec_indentf@@Base+0xad24>  // b.any
   16c48:	ldr	w0, [x25, #64]
   16c4c:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   16c50:	mov	w26, w27
   16c54:	mov	x27, x24
   16c58:	ldr	x0, [sp, #176]
   16c5c:	ldr	w3, [x0, #72]
   16c60:	cbz	w3, 16cbc <Perl_re_exec_indentf@@Base+0xaaec>
   16c64:	ldr	w0, [x22, #2368]
   16c68:	tbnz	w0, #20, 16c7c <Perl_re_exec_indentf@@Base+0xaaac>
   16c6c:	ldr	x1, [sp, #464]
   16c70:	mov	x0, #0x280000              	// #2621440
   16c74:	tst	x1, x0
   16c78:	b.eq	16ca0 <Perl_re_exec_indentf@@Base+0xaad0>  // b.none
   16c7c:	ldr	x0, [sp, #176]
   16c80:	ldr	x5, [x0, #88]
   16c84:	mov	x4, x0
   16c88:	sub	w3, w3, #0x1
   16c8c:	mov	w2, w26
   16c90:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16c94:	add	x1, x1, #0x708
   16c98:	mov	x0, x22
   16c9c:	bl	5290 <Perl_re_exec_indentf@plt>
   16ca0:	ldr	x0, [sp, #176]
   16ca4:	ldr	x2, [x0, #88]
   16ca8:	ldr	w0, [x0, #72]
   16cac:	sub	w0, w0, #0x1
   16cb0:	ldr	x1, [sp, #152]
   16cb4:	ldr	x1, [x1, #128]
   16cb8:	str	x2, [x1, x0, lsl #3]
   16cbc:	ldr	x0, [sp, #280]
   16cc0:	str	x0, [x25, #56]
   16cc4:	mov	w4, w26
   16cc8:	ldr	w3, [sp, #452]
   16ccc:	mov	w2, #0x0                   	// #0
   16cd0:	ldr	x1, [sp, #152]
   16cd4:	mov	x0, x22
   16cd8:	bl	e4a8 <Perl_re_exec_indentf@@Base+0x22d8>
   16cdc:	str	w0, [x25, #64]
   16ce0:	ldr	x0, [sp, #176]
   16ce4:	ldr	x1, [x0, #56]
   16ce8:	str	x1, [sp, #280]
   16cec:	ldr	w0, [x1, #12]
   16cf0:	ubfx	x0, x0, #29, #1
   16cf4:	str	w0, [sp, #256]
   16cf8:	strb	w0, [x27, #89]
   16cfc:	ldr	x0, [x27, #64]
   16d00:	cbz	x0, 16d64 <Perl_re_exec_indentf@@Base+0xab94>
   16d04:	ldrb	w0, [x1, #12]
   16d08:	cmp	w0, #0x8
   16d0c:	b.ne	17fcc <Perl_re_exec_indentf@@Base+0xbdfc>  // b.any
   16d10:	ldr	x1, [sp, #280]
   16d14:	ldr	w0, [x1, #8]
   16d18:	add	w0, w0, #0x1
   16d1c:	str	w0, [x1, #8]
   16d20:	ldr	x0, [x22, #280]
   16d24:	ldr	x1, [x0, #56]
   16d28:	ldr	x0, [x22, #2736]
   16d2c:	ldr	x1, [x0, x1, lsl #3]
   16d30:	ldrb	w0, [x1, #12]
   16d34:	cmp	w0, #0x8
   16d38:	b.ne	16d50 <Perl_re_exec_indentf@@Base+0xab80>  // b.any
   16d3c:	ldr	w2, [x1, #8]
   16d40:	cmp	w2, #0x1
   16d44:	b.ls	17ff0 <Perl_re_exec_indentf@@Base+0xbe20>  // b.plast
   16d48:	sub	w2, w2, #0x1
   16d4c:	str	w2, [x1, #8]
   16d50:	ldr	x0, [x22, #280]
   16d54:	ldr	x1, [x0, #56]
   16d58:	ldr	x0, [x22, #2736]
   16d5c:	ldr	x2, [sp, #280]
   16d60:	str	x2, [x0, x1, lsl #3]
   16d64:	ldr	x0, [sp, #280]
   16d68:	ldr	x1, [x0]
   16d6c:	str	x1, [sp, #152]
   16d70:	ldr	w0, [x0, #12]
   16d74:	and	w1, w0, #0xff
   16d78:	cmp	w1, #0x8
   16d7c:	b.eq	16db0 <Perl_re_exec_indentf@@Base+0xabe0>  // b.none
   16d80:	mov	w2, #0x80ff                	// #33023
   16d84:	movk	w2, #0x100, lsl #16
   16d88:	and	w0, w0, w2
   16d8c:	mov	w2, #0xa                   	// #10
   16d90:	movk	w2, #0x100, lsl #16
   16d94:	cmp	w0, w2
   16d98:	b.ne	17ffc <Perl_re_exec_indentf@@Base+0xbe2c>  // b.any
   16d9c:	cmp	w1, #0xa
   16da0:	b.ne	16db0 <Perl_re_exec_indentf@@Base+0xabe0>  // b.any
   16da4:	ldr	x0, [sp, #152]
   16da8:	ldr	x0, [x0, #24]
   16dac:	str	x0, [sp, #152]
   16db0:	ldr	x0, [sp, #152]
   16db4:	ldr	x0, [x0, #104]
   16db8:	str	x0, [sp, #208]
   16dbc:	ldr	x0, [sp, #232]
   16dc0:	str	x0, [x25, #40]
   16dc4:	ldr	x0, [sp, #176]
   16dc8:	ldr	x0, [x0, #40]
   16dcc:	str	x0, [sp, #232]
   16dd0:	ldr	w0, [x22, #2368]
   16dd4:	tbnz	w0, #20, 16de0 <Perl_re_exec_indentf@@Base+0xac10>
   16dd8:	ldr	x0, [sp, #464]
   16ddc:	tbz	w0, #19, 16df8 <Perl_re_exec_indentf@@Base+0xac28>
   16de0:	ldrsw	x3, [x22, #48]
   16de4:	mov	w2, w26
   16de8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   16dec:	add	x1, x1, #0xa20
   16df0:	mov	x0, x22
   16df4:	bl	5290 <Perl_re_exec_indentf@plt>
   16df8:	ldr	w0, [x22, #48]
   16dfc:	str	w0, [x25, #68]
   16e00:	mov	w4, w26
   16e04:	add	x3, sp, #0x1c4
   16e08:	ldr	x19, [sp, #176]
   16e0c:	ldr	w2, [x19, #68]
   16e10:	ldr	x1, [sp, #152]
   16e14:	mov	x0, x22
   16e18:	bl	c794 <Perl_re_exec_indentf@@Base+0x5c4>
   16e1c:	str	x19, [x25, #48]
   16e20:	ldr	x0, [x19, #48]
   16e24:	str	x0, [sp, #176]
   16e28:	ldr	w0, [x22, #2368]
   16e2c:	tbnz	w0, #20, 16e3c <Perl_re_exec_indentf@@Base+0xac6c>
   16e30:	ldr	x0, [sp, #464]
   16e34:	tst	x0, #0xff00
   16e38:	b.eq	16e54 <Perl_re_exec_indentf@@Base+0xac84>  // b.none
   16e3c:	ldr	x3, [sp, #176]
   16e40:	mov	w2, w26
   16e44:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16e48:	add	x1, x1, #0x740
   16e4c:	mov	x0, x22
   16e50:	bl	5290 <Perl_re_exec_indentf@plt>
   16e54:	ldr	w1, [sp, #324]
   16e58:	cmp	w1, #0x0
   16e5c:	cset	w0, ne  // ne = any
   16e60:	sub	w0, w1, w0
   16e64:	str	w0, [sp, #324]
   16e68:	ldr	x0, [sp, #176]
   16e6c:	cbz	x0, 16ed0 <Perl_re_exec_indentf@@Base+0xad00>
   16e70:	ldr	w3, [x0, #72]
   16e74:	cbz	w3, 16ed0 <Perl_re_exec_indentf@@Base+0xad00>
   16e78:	ldr	w0, [x22, #2368]
   16e7c:	tbnz	w0, #20, 16e90 <Perl_re_exec_indentf@@Base+0xacc0>
   16e80:	ldr	x1, [sp, #464]
   16e84:	mov	x0, #0x280000              	// #2621440
   16e88:	tst	x1, x0
   16e8c:	b.eq	16eb4 <Perl_re_exec_indentf@@Base+0xace4>  // b.none
   16e90:	ldr	x0, [sp, #176]
   16e94:	ldr	x5, [x0, #8]
   16e98:	mov	x4, x0
   16e9c:	sub	w3, w3, #0x1
   16ea0:	mov	w2, w26
   16ea4:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   16ea8:	add	x1, x1, #0x770
   16eac:	mov	x0, x22
   16eb0:	bl	5290 <Perl_re_exec_indentf@plt>
   16eb4:	ldr	x0, [sp, #176]
   16eb8:	ldr	x2, [x0, #8]
   16ebc:	ldr	w0, [x0, #72]
   16ec0:	sub	w0, w0, #0x1
   16ec4:	ldr	x1, [sp, #152]
   16ec8:	ldr	x1, [x1, #128]
   16ecc:	str	x2, [x1, x0, lsl #3]
   16ed0:	ldr	x0, [x25, #48]
   16ed4:	ldr	x0, [x0, #80]
   16ed8:	str	x0, [sp, #144]
   16edc:	mov	w0, #0x6a                  	// #106
   16ee0:	str	w0, [x25]
   16ee4:	ldr	x0, [sp, #128]
   16ee8:	str	x0, [sp, #200]
   16eec:	str	x23, [sp, #192]
   16ef0:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   16ef4:	mov	w26, w27
   16ef8:	mov	x27, x24
   16efc:	ldr	x0, [x25, #80]
   16f00:	str	x0, [sp, #144]
   16f04:	mov	w0, #0x7c                  	// #124
   16f08:	str	w0, [x25]
   16f0c:	ldr	x0, [sp, #128]
   16f10:	str	x0, [sp, #200]
   16f14:	str	x23, [sp, #192]
   16f18:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   16f1c:	ldr	w0, [x22, #2368]
   16f20:	tbnz	w0, #20, 16f2c <Perl_re_exec_indentf@@Base+0xad5c>
   16f24:	ldr	x0, [sp, #464]
   16f28:	tbz	w0, #19, 16f3c <Perl_re_exec_indentf@@Base+0xad6c>
   16f2c:	ldr	w3, [x25, #48]
   16f30:	ldr	w4, [x22, #48]
   16f34:	cmp	w3, w4
   16f38:	b.ne	17008 <Perl_re_exec_indentf@@Base+0xae38>  // b.any
   16f3c:	ldr	w1, [x25, #48]
   16f40:	ldr	w0, [x22, #48]
   16f44:	cmp	w0, w1
   16f48:	b.gt	17028 <Perl_re_exec_indentf@@Base+0xae58>
   16f4c:	ldr	w0, [x22, #2368]
   16f50:	tbnz	w0, #20, 16f5c <Perl_re_exec_indentf@@Base+0xad8c>
   16f54:	ldr	x0, [sp, #464]
   16f58:	tbz	w0, #22, 16f88 <Perl_re_exec_indentf@@Base+0xadb8>
   16f5c:	ldr	w7, [x25, #56]
   16f60:	ldr	x0, [sp, #152]
   16f64:	ldr	w6, [x0, #112]
   16f68:	ldr	w5, [x25, #52]
   16f6c:	ldr	x4, [x0, #120]
   16f70:	mov	x3, x0
   16f74:	mov	w2, w27
   16f78:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   16f7c:	add	x1, x1, #0xc60
   16f80:	mov	x0, x22
   16f84:	bl	5290 <Perl_re_exec_indentf@plt>
   16f88:	ldr	x4, [sp, #152]
   16f8c:	ldr	w1, [x4, #112]
   16f90:	ldr	w0, [x25, #52]
   16f94:	cmp	w0, w1
   16f98:	b.cs	16fc4 <Perl_re_exec_indentf@@Base+0xadf4>  // b.hs, b.nlast
   16f9c:	mov	x3, #0xffffffffffffffff    	// #-1
   16fa0:	ldr	x2, [x4, #120]
   16fa4:	ubfiz	x0, x1, #1, #32
   16fa8:	add	x0, x0, w1, uxtw
   16fac:	add	x0, x2, x0, lsl #3
   16fb0:	str	x3, [x0, #8]
   16fb4:	sub	w1, w1, #0x1
   16fb8:	ldr	w0, [x25, #52]
   16fbc:	cmp	w1, w0
   16fc0:	b.hi	16fa0 <Perl_re_exec_indentf@@Base+0xadd0>  // b.pmore
   16fc4:	ldr	x2, [sp, #152]
   16fc8:	str	w1, [x2, #112]
   16fcc:	ldr	w0, [x25, #56]
   16fd0:	str	w0, [x2, #116]
   16fd4:	ldrb	w0, [x25, #68]
   16fd8:	cbz	w0, 17034 <Perl_re_exec_indentf@@Base+0xae64>
   16fdc:	ldr	x0, [x25, #88]
   16fe0:	ldrh	w0, [x0, #6]
   16fe4:	mov	w1, #0xffff                	// #65535
   16fe8:	cmp	w0, w1
   16fec:	b.eq	16658 <Perl_re_exec_indentf@@Base+0xa488>  // b.none
   16ff0:	ldr	w1, [x25, #64]
   16ff4:	cmp	w0, w1
   16ff8:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   16ffc:	mov	w26, w27
   17000:	mov	x27, x24
   17004:	b	1662c <Perl_re_exec_indentf@@Base+0xa45c>
   17008:	sxtw	x4, w4
   1700c:	sxtw	x3, w3
   17010:	mov	w2, w27
   17014:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17018:	add	x1, x1, #0xc30
   1701c:	mov	x0, x22
   17020:	bl	5290 <Perl_re_exec_indentf@plt>
   17024:	b	16f3c <Perl_re_exec_indentf@@Base+0xad6c>
   17028:	mov	x0, x22
   1702c:	bl	5660 <Perl_leave_scope@plt>
   17030:	b	16f4c <Perl_re_exec_indentf@@Base+0xad7c>
   17034:	ldr	w0, [x25, #64]
   17038:	ldr	x1, [x25, #88]
   1703c:	ldrh	w1, [x1, #4]
   17040:	cmp	w0, w1
   17044:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   17048:	sub	w0, w0, #0x1
   1704c:	str	w0, [x25, #64]
   17050:	ldrb	w0, [x24, #90]
   17054:	cbz	w0, 17098 <Perl_re_exec_indentf@@Base+0xaec8>
   17058:	ldr	w0, [x25, #60]
   1705c:	neg	w0, w0
   17060:	sxtw	x1, w0
   17064:	tbnz	w0, #31, 17090 <Perl_re_exec_indentf@@Base+0xaec0>
   17068:	ldr	x2, [x24, #16]
   1706c:	mov	x0, x23
   17070:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   17074:	mov	x23, x0
   17078:	ldr	x0, [x24, #16]
   1707c:	mov	w20, #0xfffffff6            	// #-10
   17080:	cmp	x0, x23
   17084:	b.ls	16478 <Perl_re_exec_indentf@@Base+0xa2a8>  // b.plast
   17088:	ldrb	w20, [x23]
   1708c:	b	16478 <Perl_re_exec_indentf@@Base+0xa2a8>
   17090:	ldr	x2, [x24, #8]
   17094:	b	1706c <Perl_re_exec_indentf@@Base+0xae9c>
   17098:	ldr	w0, [x25, #60]
   1709c:	neg	w0, w0
   170a0:	add	x23, x23, w0, sxtw
   170a4:	b	17078 <Perl_re_exec_indentf@@Base+0xaea8>
   170a8:	str	wzr, [x25, #32]
   170ac:	str	wzr, [x25, #76]
   170b0:	mov	w0, #0xffff                	// #65535
   170b4:	str	w0, [x25, #80]
   170b8:	add	x26, x26, #0x4
   170bc:	b	171b0 <Perl_re_exec_indentf@@Base+0xafe0>
   170c0:	str	wzr, [x25, #32]
   170c4:	mov	w0, #0x1                   	// #1
   170c8:	str	w0, [x25, #76]
   170cc:	mov	w0, #0xffff                	// #65535
   170d0:	str	w0, [x25, #80]
   170d4:	add	x26, x26, #0x4
   170d8:	b	171b0 <Perl_re_exec_indentf@@Base+0xafe0>
   170dc:	ldrb	w0, [x26]
   170e0:	str	w0, [x25, #32]
   170e4:	ldr	x2, [sp, #152]
   170e8:	ldr	w1, [x2, #112]
   170ec:	str	w1, [x25, #40]
   170f0:	ldr	w1, [x2, #116]
   170f4:	str	w1, [x25, #44]
   170f8:	ldr	w1, [sp, #452]
   170fc:	cmp	w0, w1
   17100:	b.ls	17108 <Perl_re_exec_indentf@@Base+0xaf38>  // b.plast
   17104:	str	w0, [sp, #452]
   17108:	ldrh	w0, [x26, #4]
   1710c:	str	w0, [x25, #76]
   17110:	ldrh	w0, [x26, #6]
   17114:	str	w0, [x25, #80]
   17118:	add	x1, x26, #0x8
   1711c:	mov	x0, x22
   17120:	bl	58a0 <Perl_regnext@plt>
   17124:	mov	x26, x0
   17128:	ldr	x0, [sp, #176]
   1712c:	cbz	x0, 171a0 <Perl_re_exec_indentf@@Base+0xafd0>
   17130:	ldr	w1, [x0, #72]
   17134:	cbz	w1, 171a0 <Perl_re_exec_indentf@@Base+0xafd0>
   17138:	ldr	w0, [x25, #32]
   1713c:	cbz	w0, 171a0 <Perl_re_exec_indentf@@Base+0xafd0>
   17140:	add	w0, w0, #0x1
   17144:	cmp	w1, w0
   17148:	b.ne	171a0 <Perl_re_exec_indentf@@Base+0xafd0>  // b.any
   1714c:	str	x23, [sp, #496]
   17150:	mov	w7, w27
   17154:	mov	w6, #0x1                   	// #1
   17158:	mov	x5, x24
   1715c:	ldr	x4, [sp, #128]
   17160:	mov	x3, x26
   17164:	add	x2, sp, #0x1f0
   17168:	ldr	x1, [sp, #152]
   1716c:	mov	x0, x22
   17170:	bl	c820 <Perl_re_exec_indentf@@Base+0x650>
   17174:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   17178:	mov	w26, w27
   1717c:	mov	x27, x24
   17180:	ldr	x23, [sp, #496]
   17184:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   17188:	str	wzr, [x25, #32]
   1718c:	ldrh	w0, [x26, #4]
   17190:	str	w0, [x25, #76]
   17194:	ldrh	w0, [x26, #6]
   17198:	str	w0, [x25, #80]
   1719c:	add	x26, x26, #0x8
   171a0:	ldr	w1, [x25, #76]
   171a4:	ldr	w0, [x25, #80]
   171a8:	cmp	w1, w0
   171ac:	b.gt	171fc <Perl_re_exec_indentf@@Base+0xb02c>
   171b0:	ldr	x0, [sp, #144]
   171b4:	ldrb	w0, [x0, #1]
   171b8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   171bc:	ldr	x1, [x1, #3768]
   171c0:	ldrb	w3, [x1, w0, sxtw]
   171c4:	cmp	w3, #0x23
   171c8:	cset	w2, ne  // ne = any
   171cc:	cmp	w3, #0x3c
   171d0:	csel	w1, w2, wzr, ne  // ne = any
   171d4:	cmp	w0, #0x38
   171d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   171dc:	b.ne	17220 <Perl_re_exec_indentf@@Base+0xb050>  // b.any
   171e0:	cbnz	w1, 172fc <Perl_re_exec_indentf@@Base+0xb12c>
   171e4:	ldr	x1, [sp, #144]
   171e8:	cbz	w2, 174f4 <Perl_re_exec_indentf@@Base+0xb324>
   171ec:	mov	w0, #0xfffffc18            	// #-1000
   171f0:	str	w0, [x25, #52]
   171f4:	str	w0, [x25, #48]
   171f8:	b	173d8 <Perl_re_exec_indentf@@Base+0xb208>
   171fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17200:	add	x3, x3, #0x330
   17204:	add	x3, x3, #0xc80
   17208:	mov	w2, #0x2105                	// #8453
   1720c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17210:	add	x1, x1, #0xcb0
   17214:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   17218:	add	x0, x0, #0x6c8
   1721c:	bl	58e0 <__assert_fail@plt>
   17220:	cmp	w0, #0x39
   17224:	b.eq	17270 <Perl_re_exec_indentf@@Base+0xb0a0>  // b.none
   17228:	and	w2, w0, #0xfffffffd
   1722c:	and	w2, w2, #0xff
   17230:	sub	w1, w0, #0x4d
   17234:	and	w1, w1, #0xff
   17238:	cmp	w2, #0x48
   1723c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   17240:	cset	w1, hi  // hi = pmore
   17244:	cmp	w0, #0x62
   17248:	mov	w2, #0x32                  	// #50
   1724c:	ccmp	w0, w2, #0x4, ne  // ne = any
   17250:	csel	w0, w1, wzr, ne  // ne = any
   17254:	ldr	x1, [sp, #144]
   17258:	cbnz	w0, 1729c <Perl_re_exec_indentf@@Base+0xb0cc>
   1725c:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   17260:	ldr	x6, [x4, #3768]
   17264:	mov	w5, #0x32                  	// #50
   17268:	mov	x4, x6
   1726c:	b	17368 <Perl_re_exec_indentf@@Base+0xb198>
   17270:	ldr	x0, [sp, #176]
   17274:	cbz	x0, 172ec <Perl_re_exec_indentf@@Base+0xb11c>
   17278:	ldr	w0, [x0, #72]
   1727c:	cbz	w0, 172f4 <Perl_re_exec_indentf@@Base+0xb124>
   17280:	ldr	x2, [sp, #144]
   17284:	ldr	w1, [x2, #4]
   17288:	add	w1, w1, #0x1
   1728c:	cmp	w0, w1
   17290:	b.eq	1729c <Perl_re_exec_indentf@@Base+0xb0cc>  // b.none
   17294:	mov	x1, x2
   17298:	b	1725c <Perl_re_exec_indentf@@Base+0xb08c>
   1729c:	cmp	w3, #0x33
   172a0:	b.eq	172b4 <Perl_re_exec_indentf@@Base+0xb0e4>  // b.none
   172a4:	mov	w0, #0xfffffc18            	// #-1000
   172a8:	str	w0, [x25, #52]
   172ac:	str	w0, [x25, #48]
   172b0:	b	173d8 <Perl_re_exec_indentf@@Base+0xb208>
   172b4:	ldr	x0, [sp, #144]
   172b8:	ldrh	w0, [x0, #4]
   172bc:	cbz	w0, 172a4 <Perl_re_exec_indentf@@Base+0xb0d4>
   172c0:	ldr	x1, [sp, #144]
   172c4:	b	1725c <Perl_re_exec_indentf@@Base+0xb08c>
   172c8:	add	x1, x1, #0x4
   172cc:	b	17368 <Perl_re_exec_indentf@@Base+0xb198>
   172d0:	ldrb	w0, [x1]
   172d4:	cbnz	w0, 172e0 <Perl_re_exec_indentf@@Base+0xb110>
   172d8:	add	x1, x1, #0x8
   172dc:	b	17368 <Perl_re_exec_indentf@@Base+0xb198>
   172e0:	ldr	w0, [x1, #4]
   172e4:	add	x1, x1, x0, lsl #2
   172e8:	b	17368 <Perl_re_exec_indentf@@Base+0xb198>
   172ec:	ldr	x1, [sp, #144]
   172f0:	b	1725c <Perl_re_exec_indentf@@Base+0xb08c>
   172f4:	ldr	x1, [sp, #144]
   172f8:	b	1725c <Perl_re_exec_indentf@@Base+0xb08c>
   172fc:	ldr	x1, [sp, #144]
   17300:	b	1725c <Perl_re_exec_indentf@@Base+0xb08c>
   17304:	ldr	x2, [sp, #176]
   17308:	cbz	x2, 17324 <Perl_re_exec_indentf@@Base+0xb154>
   1730c:	ldr	w3, [x2, #72]
   17310:	cbz	w3, 17324 <Perl_re_exec_indentf@@Base+0xb154>
   17314:	ldr	w2, [x1, #4]
   17318:	add	w2, w2, #0x1
   1731c:	cmp	w3, w2
   17320:	b.eq	17350 <Perl_re_exec_indentf@@Base+0xb180>  // b.none
   17324:	and	w2, w0, #0xffff
   17328:	ldrb	w0, [x4, w0, sxtw]
   1732c:	cmp	w0, #0x33
   17330:	b.eq	17364 <Perl_re_exec_indentf@@Base+0xb194>  // b.none
   17334:	cmp	w2, #0x32
   17338:	b.eq	172c8 <Perl_re_exec_indentf@@Base+0xb0f8>  // b.none
   1733c:	cmp	w2, #0x48
   17340:	b.eq	172d0 <Perl_re_exec_indentf@@Base+0xb100>  // b.none
   17344:	ldrh	w0, [x1, #2]
   17348:	add	x1, x1, x0, lsl #2
   1734c:	b	17368 <Perl_re_exec_indentf@@Base+0xb198>
   17350:	ldrb	w0, [x6, w0, sxtw]
   17354:	cmp	w0, #0x33
   17358:	b.ne	173b8 <Perl_re_exec_indentf@@Base+0xb1e8>  // b.any
   1735c:	ldrh	w0, [x1, #4]
   17360:	cbz	w0, 173cc <Perl_re_exec_indentf@@Base+0xb1fc>
   17364:	add	x1, x1, #0x8
   17368:	ldrb	w0, [x1, #1]
   1736c:	cmp	w0, #0x38
   17370:	b.eq	17324 <Perl_re_exec_indentf@@Base+0xb154>  // b.none
   17374:	cmp	w0, #0x39
   17378:	b.eq	17304 <Perl_re_exec_indentf@@Base+0xb134>  // b.none
   1737c:	and	w3, w0, #0xfffffffd
   17380:	and	w3, w3, #0xff
   17384:	sub	w2, w0, #0x4d
   17388:	and	w2, w2, #0xff
   1738c:	cmp	w3, #0x48
   17390:	ccmp	w2, #0x1, #0x0, ne  // ne = any
   17394:	cset	w2, ls  // ls = plast
   17398:	cmp	w0, #0x62
   1739c:	ccmp	w0, w5, #0x4, ne  // ne = any
   173a0:	csinc	w2, w2, wzr, ne  // ne = any
   173a4:	cbz	w2, 17350 <Perl_re_exec_indentf@@Base+0xb180>
   173a8:	and	w2, w0, #0xffff
   173ac:	cmp	w2, #0x4a
   173b0:	b.eq	17364 <Perl_re_exec_indentf@@Base+0xb194>  // b.none
   173b4:	b	17328 <Perl_re_exec_indentf@@Base+0xb158>
   173b8:	cmp	w0, #0x23
   173bc:	cset	w2, ne  // ne = any
   173c0:	cmp	w0, #0x3c
   173c4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   173c8:	b.eq	171e8 <Perl_re_exec_indentf@@Base+0xb018>  // b.none
   173cc:	mov	w0, #0xfffffc18            	// #-1000
   173d0:	str	w0, [x25, #52]
   173d4:	str	w0, [x25, #48]
   173d8:	str	x26, [x25, #88]
   173dc:	ldr	x0, [sp, #144]
   173e0:	str	x0, [x25, #96]
   173e4:	ldr	w0, [sp, #260]
   173e8:	cbz	w0, 175ec <Perl_re_exec_indentf@@Base+0xb41c>
   173ec:	str	x23, [sp, #496]
   173f0:	ldr	w6, [x25, #76]
   173f4:	cbnz	w6, 1751c <Perl_re_exec_indentf@@Base+0xb34c>
   173f8:	ldr	x23, [sp, #496]
   173fc:	ldr	w0, [x25, #76]
   17400:	str	w0, [x25, #72]
   17404:	ldr	w0, [x22, #2368]
   17408:	tbnz	w0, #20, 17414 <Perl_re_exec_indentf@@Base+0xb244>
   1740c:	ldr	x0, [sp, #464]
   17410:	tbz	w0, #19, 1742c <Perl_re_exec_indentf@@Base+0xb25c>
   17414:	ldrsw	x3, [x22, #48]
   17418:	mov	w2, w27
   1741c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17420:	add	x1, x1, #0xa20
   17424:	mov	x0, x22
   17428:	bl	5290 <Perl_re_exec_indentf@plt>
   1742c:	ldr	w0, [x22, #48]
   17430:	str	w0, [x25, #36]
   17434:	ldr	w0, [x25, #48]
   17438:	cmn	w0, #0x3e8
   1743c:	b.eq	17550 <Perl_re_exec_indentf@@Base+0xb380>  // b.none
   17440:	str	x23, [x25, #64]
   17444:	ldr	w0, [x25, #80]
   17448:	mov	w1, #0xffff                	// #65535
   1744c:	cmp	w0, w1
   17450:	b.eq	17560 <Perl_re_exec_indentf@@Base+0xb390>  // b.none
   17454:	ldr	w1, [sp, #168]
   17458:	cbnz	w1, 175a4 <Perl_re_exec_indentf@@Base+0xb3d4>
   1745c:	sxtw	x0, w0
   17460:	ldrsw	x1, [x25, #76]
   17464:	sub	x0, x0, x1
   17468:	add	x0, x23, x0
   1746c:	ldr	x2, [sp, #128]
   17470:	sub	x1, x2, #0x1
   17474:	cmp	x2, x0
   17478:	csel	x0, x1, x0, ls  // ls = plast
   1747c:	str	x0, [x25, #56]
   17480:	str	wzr, [sp, #260]
   17484:	ldr	w0, [sp, #168]
   17488:	cbz	w0, 17ac4 <Perl_re_exec_indentf@@Base+0xb8f4>
   1748c:	ldr	x0, [x25, #64]
   17490:	cmp	x0, x23
   17494:	cset	w20, ne  // ne = any
   17498:	ldr	w1, [x25, #48]
   1749c:	ldr	w0, [x25, #52]
   174a0:	cmp	w1, w0
   174a4:	b.eq	178cc <Perl_re_exec_indentf@@Base+0xb6fc>  // b.none
   174a8:	ldr	x1, [x25, #56]
   174ac:	ldr	x0, [sp, #128]
   174b0:	cmp	x0, x23
   174b4:	ccmp	x1, x23, #0x0, hi  // hi = pmore
   174b8:	b.cc	17a1c <Perl_re_exec_indentf@@Base+0xb84c>  // b.lo, b.ul, b.last
   174bc:	ldr	x21, [x24, #16]
   174c0:	add	x2, x25, #0x68
   174c4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   174c8:	ldr	x0, [x0, #4064]
   174cc:	add	x3, x25, #0x76
   174d0:	str	x25, [sp, #192]
   174d4:	str	x26, [sp, #200]
   174d8:	str	x22, [sp, #216]
   174dc:	mov	x22, x1
   174e0:	str	x24, [sp, #224]
   174e4:	mov	x24, x2
   174e8:	mov	x25, x0
   174ec:	mov	x26, x3
   174f0:	b	179f8 <Perl_re_exec_indentf@@Base+0xb828>
   174f4:	mov	x6, x24
   174f8:	add	x5, x25, #0x76
   174fc:	add	x4, x25, #0x34
   17500:	add	x3, x25, #0x68
   17504:	add	x2, x25, #0x30
   17508:	mov	x0, x22
   1750c:	bl	a080 <Perl__inverse_folds@plt+0x4680>
   17510:	and	w0, w0, #0xff
   17514:	cbnz	w0, 173d8 <Perl_re_exec_indentf@@Base+0xb208>
   17518:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1751c:	mov	w7, w27
   17520:	mov	x5, x24
   17524:	ldr	x4, [sp, #128]
   17528:	mov	x3, x26
   1752c:	add	x2, sp, #0x1f0
   17530:	ldr	x1, [sp, #152]
   17534:	mov	x0, x22
   17538:	bl	c820 <Perl_re_exec_indentf@@Base+0x650>
   1753c:	ldr	w1, [x25, #76]
   17540:	cmp	w0, w1
   17544:	b.ge	173f8 <Perl_re_exec_indentf@@Base+0xb228>  // b.tcont
   17548:	str	wzr, [sp, #260]
   1754c:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   17550:	mov	w26, w27
   17554:	mov	x27, x24
   17558:	str	wzr, [sp, #260]
   1755c:	b	17bd0 <Perl_re_exec_indentf@@Base+0xba00>
   17560:	ldr	x0, [sp, #128]
   17564:	sub	x0, x0, #0x1
   17568:	str	x0, [x25, #56]
   1756c:	ldr	w1, [sp, #168]
   17570:	cbz	w1, 17480 <Perl_re_exec_indentf@@Base+0xb2b0>
   17574:	ldr	x1, [sp, #128]
   17578:	ldurb	w1, [x1, #-1]
   1757c:	and	w1, w1, #0xc0
   17580:	cmp	w1, #0x80
   17584:	b.ne	17480 <Perl_re_exec_indentf@@Base+0xb2b0>  // b.any
   17588:	sub	x0, x0, #0x1
   1758c:	str	x0, [x25, #56]
   17590:	ldrb	w1, [x0]
   17594:	and	w1, w1, #0xc0
   17598:	cmp	w1, #0x80
   1759c:	b.eq	17588 <Perl_re_exec_indentf@@Base+0xb3b8>  // b.none
   175a0:	b	17480 <Perl_re_exec_indentf@@Base+0xb2b0>
   175a4:	ldr	w1, [x25, #76]
   175a8:	sub	w0, w0, w1
   175ac:	str	x23, [x25, #56]
   175b0:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   175b4:	ldr	x3, [x3, #4064]
   175b8:	cmp	w0, #0x0
   175bc:	b.le	17480 <Perl_re_exec_indentf@@Base+0xb2b0>
   175c0:	ldr	x4, [sp, #128]
   175c4:	ldr	x1, [x25, #56]
   175c8:	cmp	x4, x1
   175cc:	b.ls	17480 <Perl_re_exec_indentf@@Base+0xb2b0>  // b.plast
   175d0:	ldrb	w2, [x1]
   175d4:	ldrb	w2, [x3, w2, sxtw]
   175d8:	add	x1, x1, x2
   175dc:	str	x1, [x25, #56]
   175e0:	subs	w0, w0, #0x1
   175e4:	b.ne	175c4 <Perl_re_exec_indentf@@Base+0xb3f4>  // b.any
   175e8:	b	17480 <Perl_re_exec_indentf@@Base+0xb2b0>
   175ec:	str	x23, [sp, #496]
   175f0:	mov	w7, w27
   175f4:	ldr	w6, [x25, #80]
   175f8:	mov	x5, x24
   175fc:	ldr	x4, [sp, #128]
   17600:	mov	x3, x26
   17604:	add	x2, sp, #0x1f0
   17608:	ldr	x1, [sp, #152]
   1760c:	mov	x0, x22
   17610:	bl	c820 <Perl_re_exec_indentf@@Base+0x650>
   17614:	str	w0, [x25, #72]
   17618:	ldr	w1, [x25, #76]
   1761c:	cmp	w0, w1
   17620:	b.lt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.tstop
   17624:	ldr	x23, [sp, #496]
   17628:	b.le	1764c <Perl_re_exec_indentf@@Base+0xb47c>
   1762c:	ldr	x3, [x25, #96]
   17630:	ldrb	w2, [x3, #1]
   17634:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   17638:	ldr	x1, [x1, #3768]
   1763c:	ldrb	w1, [x1, w2, sxtw]
   17640:	cmp	w1, #0x4
   17644:	ccmp	w2, #0x5, #0x4, eq  // eq = none
   17648:	b.ne	1770c <Perl_re_exec_indentf@@Base+0xb53c>  // b.any
   1764c:	ldr	w0, [x22, #2368]
   17650:	tbnz	w0, #20, 1765c <Perl_re_exec_indentf@@Base+0xb48c>
   17654:	ldr	x0, [sp, #464]
   17658:	tbz	w0, #19, 17674 <Perl_re_exec_indentf@@Base+0xb4a4>
   1765c:	ldrsw	x3, [x22, #48]
   17660:	mov	w2, w27
   17664:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17668:	add	x1, x1, #0xa20
   1766c:	mov	x0, x22
   17670:	bl	5290 <Perl_re_exec_indentf@plt>
   17674:	ldr	w0, [x22, #48]
   17678:	str	w0, [x25, #36]
   1767c:	ldr	x0, [sp, #128]
   17680:	cmp	x0, x23
   17684:	cset	w0, hi  // hi = pmore
   17688:	ldr	w19, [x25, #48]
   1768c:	cmp	w0, #0x0
   17690:	mov	w1, #0xfffffc18            	// #-1000
   17694:	ccmp	w19, w1, #0x4, ne  // ne = any
   17698:	b.ne	17cf4 <Perl_re_exec_indentf@@Base+0xbb24>  // b.any
   1769c:	cmp	w0, #0x0
   176a0:	mov	w0, #0xfffffc18            	// #-1000
   176a4:	ccmp	w19, w0, #0x4, eq  // eq = none
   176a8:	b.eq	17db0 <Perl_re_exec_indentf@@Base+0xbbe0>  // b.none
   176ac:	ldr	w0, [x22, #2368]
   176b0:	tbnz	w0, #20, 176bc <Perl_re_exec_indentf@@Base+0xb4ec>
   176b4:	ldr	x0, [sp, #464]
   176b8:	tbz	w0, #19, 176cc <Perl_re_exec_indentf@@Base+0xb4fc>
   176bc:	ldr	w3, [x25, #36]
   176c0:	ldr	w4, [x22, #48]
   176c4:	cmp	w3, w4
   176c8:	b.ne	17edc <Perl_re_exec_indentf@@Base+0xbd0c>  // b.any
   176cc:	ldr	w1, [x25, #36]
   176d0:	ldr	w0, [x22, #48]
   176d4:	cmp	w0, w1
   176d8:	b.gt	17efc <Perl_re_exec_indentf@@Base+0xbd2c>
   176dc:	ldr	w0, [x25, #32]
   176e0:	cbnz	w0, 17f08 <Perl_re_exec_indentf@@Base+0xbd38>
   176e4:	ldr	w0, [x25, #72]
   176e8:	sub	w0, w0, #0x1
   176ec:	str	w0, [x25, #72]
   176f0:	ldr	w1, [x25, #76]
   176f4:	cmp	w0, w1
   176f8:	b.lt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.tstop
   176fc:	ldrb	w0, [x24, #90]
   17700:	cbnz	w0, 17f94 <Perl_re_exec_indentf@@Base+0xbdc4>
   17704:	sub	x23, x23, #0x1
   17708:	b	1767c <Perl_re_exec_indentf@@Base+0xb4ac>
   1770c:	str	w0, [x25, #76]
   17710:	ldurb	w1, [x23, #-1]
   17714:	cmp	w1, #0xa
   17718:	b.ne	1764c <Perl_re_exec_indentf@@Base+0xb47c>  // b.any
   1771c:	ldrb	w1, [x3, #1]
   17720:	cmp	w1, #0x6
   17724:	b.eq	1764c <Perl_re_exec_indentf@@Base+0xb47c>  // b.none
   17728:	sub	w0, w0, #0x1
   1772c:	str	w0, [x25, #76]
   17730:	b	1764c <Perl_re_exec_indentf@@Base+0xb47c>
   17734:	ldr	w0, [x22, #2368]
   17738:	tbnz	w0, #20, 17744 <Perl_re_exec_indentf@@Base+0xb574>
   1773c:	ldr	x0, [sp, #464]
   17740:	tbz	w0, #19, 17754 <Perl_re_exec_indentf@@Base+0xb584>
   17744:	ldr	w3, [x25, #36]
   17748:	ldr	w4, [x22, #48]
   1774c:	cmp	w3, w4
   17750:	b.ne	177a8 <Perl_re_exec_indentf@@Base+0xb5d8>  // b.any
   17754:	ldr	w1, [x25, #36]
   17758:	ldr	w0, [x22, #48]
   1775c:	cmp	w0, w1
   17760:	b.gt	177c8 <Perl_re_exec_indentf@@Base+0xb5f8>
   17764:	ldr	w0, [x25, #32]
   17768:	cbnz	w0, 177d4 <Perl_re_exec_indentf@@Base+0xb604>
   1776c:	ldr	w0, [x25, #48]
   17770:	cmn	w0, #0x3e8
   17774:	b.eq	17860 <Perl_re_exec_indentf@@Base+0xb690>  // b.none
   17778:	str	x23, [x25, #64]
   1777c:	ldr	w0, [sp, #168]
   17780:	cbz	w0, 178c4 <Perl_re_exec_indentf@@Base+0xb6f4>
   17784:	ldrb	w1, [x23]
   17788:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1778c:	ldr	x0, [x0, #4064]
   17790:	ldrb	w0, [x0, w1, sxtw]
   17794:	add	x23, x23, x0
   17798:	ldr	w0, [x25, #72]
   1779c:	add	w0, w0, #0x1
   177a0:	str	w0, [x25, #72]
   177a4:	b	17484 <Perl_re_exec_indentf@@Base+0xb2b4>
   177a8:	sxtw	x4, w4
   177ac:	sxtw	x3, w3
   177b0:	mov	w2, w27
   177b4:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   177b8:	add	x1, x1, #0xc30
   177bc:	mov	x0, x22
   177c0:	bl	5290 <Perl_re_exec_indentf@plt>
   177c4:	b	17754 <Perl_re_exec_indentf@@Base+0xb584>
   177c8:	mov	x0, x22
   177cc:	bl	5660 <Perl_leave_scope@plt>
   177d0:	b	17764 <Perl_re_exec_indentf@@Base+0xb594>
   177d4:	ldr	w0, [x22, #2368]
   177d8:	tbnz	w0, #20, 177e4 <Perl_re_exec_indentf@@Base+0xb614>
   177dc:	ldr	x0, [sp, #464]
   177e0:	tbz	w0, #22, 17810 <Perl_re_exec_indentf@@Base+0xb640>
   177e4:	ldr	w7, [x25, #44]
   177e8:	ldr	x0, [sp, #152]
   177ec:	ldr	w6, [x0, #112]
   177f0:	ldr	w5, [x25, #40]
   177f4:	ldr	x4, [x0, #120]
   177f8:	mov	x3, x0
   177fc:	mov	w2, w27
   17800:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17804:	add	x1, x1, #0xc60
   17808:	mov	x0, x22
   1780c:	bl	5290 <Perl_re_exec_indentf@plt>
   17810:	ldr	x4, [sp, #152]
   17814:	ldr	w1, [x4, #112]
   17818:	ldr	w0, [x25, #40]
   1781c:	cmp	w1, w0
   17820:	b.ls	1784c <Perl_re_exec_indentf@@Base+0xb67c>  // b.plast
   17824:	mov	x3, #0xffffffffffffffff    	// #-1
   17828:	ldr	x2, [x4, #120]
   1782c:	ubfiz	x0, x1, #1, #32
   17830:	add	x0, x0, w1, uxtw
   17834:	add	x0, x2, x0, lsl #3
   17838:	str	x3, [x0, #8]
   1783c:	sub	w1, w1, #0x1
   17840:	ldr	w0, [x25, #40]
   17844:	cmp	w1, w0
   17848:	b.hi	17828 <Perl_re_exec_indentf@@Base+0xb658>  // b.pmore
   1784c:	ldr	x2, [sp, #152]
   17850:	str	w1, [x2, #112]
   17854:	ldr	w0, [x25, #44]
   17858:	str	w0, [x2, #116]
   1785c:	b	1776c <Perl_re_exec_indentf@@Base+0xb59c>
   17860:	str	x23, [sp, #496]
   17864:	mov	w7, w27
   17868:	mov	w6, #0x1                   	// #1
   1786c:	mov	x5, x24
   17870:	ldr	x4, [sp, #128]
   17874:	ldr	x3, [x25, #88]
   17878:	add	x2, sp, #0x1f0
   1787c:	ldr	x1, [sp, #152]
   17880:	mov	x0, x22
   17884:	bl	c820 <Perl_re_exec_indentf@@Base+0x650>
   17888:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1788c:	ldr	x23, [sp, #496]
   17890:	ldr	w0, [x25, #72]
   17894:	add	w0, w0, #0x1
   17898:	str	w0, [x25, #72]
   1789c:	ldr	w1, [x25, #80]
   178a0:	cmp	w0, w1
   178a4:	b.le	17bbc <Perl_re_exec_indentf@@Base+0xb9ec>
   178a8:	cmp	w0, #0x0
   178ac:	mov	w0, #0xffff                	// #65535
   178b0:	ccmp	w1, w0, #0x0, gt
   178b4:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   178b8:	mov	w26, w27
   178bc:	mov	x27, x24
   178c0:	b	17bd0 <Perl_re_exec_indentf@@Base+0xba00>
   178c4:	add	x23, x23, #0x1
   178c8:	b	17798 <Perl_re_exec_indentf@@Base+0xb5c8>
   178cc:	ldr	x1, [x25, #56]
   178d0:	ldr	x0, [sp, #128]
   178d4:	cmp	x0, x23
   178d8:	ccmp	x1, x23, #0x0, hi  // hi = pmore
   178dc:	b.cc	17a1c <Perl_re_exec_indentf@@Base+0xb84c>  // b.lo, b.ul, b.last
   178e0:	ldr	x21, [x24, #16]
   178e4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   178e8:	ldr	x0, [x0, #4064]
   178ec:	str	x0, [sp, #192]
   178f0:	add	x0, x25, #0x68
   178f4:	str	x0, [sp, #200]
   178f8:	str	x22, [sp, #216]
   178fc:	mov	x22, x1
   17900:	b	1791c <Perl_re_exec_indentf@@Base+0xb74c>
   17904:	add	x23, x23, x19
   17908:	add	w20, w20, #0x1
   1790c:	ldr	x0, [sp, #128]
   17910:	cmp	x0, x23
   17914:	ccmp	x22, x23, #0x0, hi  // hi = pmore
   17918:	b.cc	17b84 <Perl_re_exec_indentf@@Base+0xb9b4>  // b.lo, b.ul, b.last
   1791c:	cmp	x21, x23
   17920:	b.cc	17960 <Perl_re_exec_indentf@@Base+0xb790>  // b.lo, b.ul, b.last
   17924:	sub	x0, x21, x23
   17928:	cmp	x0, #0x0
   1792c:	b.le	17b8c <Perl_re_exec_indentf@@Base+0xb9bc>
   17930:	ldrb	w1, [x23]
   17934:	ldr	x2, [sp, #192]
   17938:	ldrb	w19, [x2, w1, sxtw]
   1793c:	cmp	x19, x0
   17940:	csel	x19, x19, x0, le
   17944:	mov	x2, x19
   17948:	ldr	x1, [sp, #200]
   1794c:	mov	x0, x23
   17950:	bl	5460 <memcmp@plt>
   17954:	cbnz	w0, 17904 <Perl_re_exec_indentf@@Base+0xb734>
   17958:	ldr	x22, [sp, #216]
   1795c:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17960:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17964:	add	x3, x3, #0x330
   17968:	add	x3, x3, #0xc80
   1796c:	mov	w2, #0x218a                	// #8586
   17970:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17974:	add	x1, x1, #0xcb0
   17978:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   1797c:	add	x0, x0, #0xd88
   17980:	bl	58e0 <__assert_fail@plt>
   17984:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17988:	add	x3, x3, #0x330
   1798c:	add	x3, x3, #0xc80
   17990:	mov	w2, #0x2196                	// #8598
   17994:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17998:	add	x1, x1, #0xcb0
   1799c:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   179a0:	add	x0, x0, #0xd88
   179a4:	bl	58e0 <__assert_fail@plt>
   179a8:	ldrb	w1, [x23]
   179ac:	ldrb	w19, [x25, w1, sxtw]
   179b0:	cmp	x19, x0
   179b4:	csel	x19, x19, x0, le
   179b8:	mov	x2, x19
   179bc:	mov	x1, x24
   179c0:	mov	x0, x23
   179c4:	bl	5460 <memcmp@plt>
   179c8:	cbz	w0, 17ba8 <Perl_re_exec_indentf@@Base+0xb9d8>
   179cc:	mov	x2, x19
   179d0:	mov	x1, x26
   179d4:	mov	x0, x23
   179d8:	bl	5460 <memcmp@plt>
   179dc:	cbz	w0, 17ab0 <Perl_re_exec_indentf@@Base+0xb8e0>
   179e0:	add	x23, x23, x19
   179e4:	add	w20, w20, #0x1
   179e8:	cmp	x22, x23
   179ec:	ldr	x0, [sp, #128]
   179f0:	ccmp	x0, x23, #0x0, cs  // cs = hs, nlast
   179f4:	b.ls	17b94 <Perl_re_exec_indentf@@Base+0xb9c4>  // b.plast
   179f8:	cmp	x21, x23
   179fc:	b.cc	17984 <Perl_re_exec_indentf@@Base+0xb7b4>  // b.lo, b.ul, b.last
   17a00:	sub	x0, x21, x23
   17a04:	cmp	x0, #0x0
   17a08:	b.gt	179a8 <Perl_re_exec_indentf@@Base+0xb7d8>
   17a0c:	ldr	x25, [sp, #192]
   17a10:	ldr	x26, [sp, #200]
   17a14:	ldr	x22, [sp, #216]
   17a18:	ldr	x24, [sp, #224]
   17a1c:	ldr	x0, [x25, #56]
   17a20:	cmp	x0, x23
   17a24:	b.cc	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.lo, b.ul, b.last
   17a28:	cbz	w20, 17bc8 <Perl_re_exec_indentf@@Base+0xb9f8>
   17a2c:	ldr	x0, [x25, #64]
   17a30:	str	x0, [sp, #496]
   17a34:	ldr	w0, [x25, #72]
   17a38:	add	w0, w0, w20
   17a3c:	str	w0, [x25, #72]
   17a40:	mov	w7, w27
   17a44:	mov	w6, w20
   17a48:	mov	x5, x24
   17a4c:	ldr	x4, [sp, #128]
   17a50:	ldr	x3, [x25, #88]
   17a54:	add	x2, sp, #0x1f0
   17a58:	ldr	x1, [sp, #152]
   17a5c:	mov	x0, x22
   17a60:	bl	c820 <Perl_re_exec_indentf@@Base+0x650>
   17a64:	cmp	w20, w0
   17a68:	b.gt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   17a6c:	mov	w26, w27
   17a70:	mov	x27, x24
   17a74:	mov	w0, #0xffff                	// #65535
   17a78:	cmp	w20, w0
   17a7c:	b.eq	17bd0 <Perl_re_exec_indentf@@Base+0xba00>  // b.none
   17a80:	ldr	x0, [sp, #496]
   17a84:	cmp	x23, x0
   17a88:	b.eq	17bd0 <Perl_re_exec_indentf@@Base+0xba00>  // b.none
   17a8c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17a90:	add	x3, x3, #0x330
   17a94:	add	x3, x3, #0xc80
   17a98:	mov	w2, #0x21d5                	// #8661
   17a9c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17aa0:	add	x1, x1, #0xcb0
   17aa4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   17aa8:	add	x0, x0, #0x6e0
   17aac:	bl	58e0 <__assert_fail@plt>
   17ab0:	ldr	x25, [sp, #192]
   17ab4:	ldr	x26, [sp, #200]
   17ab8:	ldr	x22, [sp, #216]
   17abc:	ldr	x24, [sp, #224]
   17ac0:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17ac4:	ldr	w1, [x25, #48]
   17ac8:	ldr	w2, [x25, #52]
   17acc:	cmp	w1, w2
   17ad0:	b.eq	17b30 <Perl_re_exec_indentf@@Base+0xb960>  // b.none
   17ad4:	sxtb	w4, w1
   17ad8:	eor	w0, w4, w2
   17adc:	sxtb	w3, w0
   17ae0:	ands	w0, w0, #0xff
   17ae4:	b.eq	17b58 <Perl_re_exec_indentf@@Base+0xb988>  // b.none
   17ae8:	sub	w5, w0, #0x1
   17aec:	tst	w5, w0
   17af0:	b.ne	17b58 <Perl_re_exec_indentf@@Base+0xb988>  // b.any
   17af4:	bic	w2, w4, w3
   17af8:	and	w2, w2, #0xff
   17afc:	mvn	w0, w0
   17b00:	and	w1, w0, #0xff
   17b04:	ldr	x3, [x25, #56]
   17b08:	cmp	x3, x23
   17b0c:	b.cc	17b4c <Perl_re_exec_indentf@@Base+0xb97c>  // b.lo, b.ul, b.last
   17b10:	ldrb	w0, [x23]
   17b14:	and	w0, w1, w0
   17b18:	cmp	w2, w0
   17b1c:	b.eq	17b4c <Perl_re_exec_indentf@@Base+0xb97c>  // b.none
   17b20:	add	x23, x23, #0x1
   17b24:	cmp	x3, x23
   17b28:	b.cs	17b10 <Perl_re_exec_indentf@@Base+0xb940>  // b.hs, b.nlast
   17b2c:	b	17b4c <Perl_re_exec_indentf@@Base+0xb97c>
   17b30:	ldr	x19, [x25, #56]
   17b34:	add	x19, x19, #0x1
   17b38:	sub	x2, x19, x23
   17b3c:	mov	x0, x23
   17b40:	bl	5750 <memchr@plt>
   17b44:	cmp	x0, #0x0
   17b48:	csel	x23, x0, x19, ne  // ne = any
   17b4c:	ldr	x20, [x25, #64]
   17b50:	sub	w20, w23, w20
   17b54:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17b58:	ldr	x3, [x25, #56]
   17b5c:	cmp	x3, x23
   17b60:	b.cc	17b4c <Perl_re_exec_indentf@@Base+0xb97c>  // b.lo, b.ul, b.last
   17b64:	ldrb	w0, [x23]
   17b68:	cmp	w2, w0
   17b6c:	ccmp	w1, w0, #0x4, ne  // ne = any
   17b70:	b.eq	17b4c <Perl_re_exec_indentf@@Base+0xb97c>  // b.none
   17b74:	add	x23, x23, #0x1
   17b78:	cmp	x3, x23
   17b7c:	b.cs	17b64 <Perl_re_exec_indentf@@Base+0xb994>  // b.hs, b.nlast
   17b80:	b	17b4c <Perl_re_exec_indentf@@Base+0xb97c>
   17b84:	ldr	x22, [sp, #216]
   17b88:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17b8c:	ldr	x22, [sp, #216]
   17b90:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17b94:	ldr	x25, [sp, #192]
   17b98:	ldr	x26, [sp, #200]
   17b9c:	ldr	x22, [sp, #216]
   17ba0:	ldr	x24, [sp, #224]
   17ba4:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17ba8:	ldr	x25, [sp, #192]
   17bac:	ldr	x26, [sp, #200]
   17bb0:	ldr	x22, [sp, #216]
   17bb4:	ldr	x24, [sp, #224]
   17bb8:	b	17a1c <Perl_re_exec_indentf@@Base+0xb84c>
   17bbc:	mov	w26, w27
   17bc0:	mov	x27, x24
   17bc4:	b	17bd0 <Perl_re_exec_indentf@@Base+0xba00>
   17bc8:	mov	w26, w27
   17bcc:	mov	x27, x24
   17bd0:	ldr	w19, [x25, #32]
   17bd4:	cbz	w19, 17cd4 <Perl_re_exec_indentf@@Base+0xbb04>
   17bd8:	ldr	w0, [x25, #72]
   17bdc:	cbz	w0, 17ca8 <Perl_re_exec_indentf@@Base+0xbad8>
   17be0:	ldrb	w1, [x27, #90]
   17be4:	sub	x0, x23, #0x1
   17be8:	cbnz	w1, 17c94 <Perl_re_exec_indentf@@Base+0xbac4>
   17bec:	ldr	x3, [sp, #152]
   17bf0:	ldr	x2, [x3, #120]
   17bf4:	ubfiz	x1, x19, #1, #32
   17bf8:	add	x19, x1, w19, uxtw
   17bfc:	ldr	x1, [x27, #8]
   17c00:	sub	x0, x0, x1
   17c04:	str	x0, [x2, x19, lsl #3]
   17c08:	ldr	w0, [x25, #32]
   17c0c:	ldr	x1, [x3, #120]
   17c10:	add	x0, x0, x0, lsl #1
   17c14:	add	x0, x1, x0, lsl #3
   17c18:	ldr	x1, [x27, #8]
   17c1c:	sub	x1, x23, x1
   17c20:	str	x1, [x0, #8]
   17c24:	ldr	w0, [x25, #32]
   17c28:	ldr	w1, [x3, #112]
   17c2c:	cmp	w0, w1
   17c30:	b.ls	17c38 <Perl_re_exec_indentf@@Base+0xba68>  // b.plast
   17c34:	str	w0, [x3, #112]
   17c38:	ldr	w0, [x25, #32]
   17c3c:	ldr	x1, [sp, #152]
   17c40:	str	w0, [x1, #116]
   17c44:	ldr	w1, [x22, #2368]
   17c48:	tbnz	w1, #20, 17c54 <Perl_re_exec_indentf@@Base+0xba84>
   17c4c:	ldr	x1, [sp, #464]
   17c50:	tbz	w1, #22, 17cd4 <Perl_re_exec_indentf@@Base+0xbb04>
   17c54:	ldr	x2, [sp, #152]
   17c58:	ldr	x4, [x2, #120]
   17c5c:	mov	w5, w0
   17c60:	add	x0, x5, w0, uxtw #1
   17c64:	add	x1, x4, x0, lsl #3
   17c68:	ldr	x7, [x1, #8]
   17c6c:	ldr	x6, [x4, x0, lsl #3]
   17c70:	ldr	w0, [x2, #112]
   17c74:	str	x0, [sp]
   17c78:	mov	x3, x2
   17c7c:	mov	w2, w26
   17c80:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   17c84:	add	x1, x1, #0x3f8
   17c88:	mov	x0, x22
   17c8c:	bl	5290 <Perl_re_exec_indentf@plt>
   17c90:	b	17cd4 <Perl_re_exec_indentf@@Base+0xbb04>
   17c94:	ldr	x2, [x27, #8]
   17c98:	mov	x1, #0xffffffffffffffff    	// #-1
   17c9c:	mov	x0, x23
   17ca0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   17ca4:	b	17bec <Perl_re_exec_indentf@@Base+0xba1c>
   17ca8:	ldr	x2, [sp, #152]
   17cac:	ldr	x1, [x2, #120]
   17cb0:	ubfiz	x0, x19, #1, #32
   17cb4:	add	x0, x0, w19, uxtw
   17cb8:	add	x0, x1, x0, lsl #3
   17cbc:	mov	x1, #0xffffffffffffffff    	// #-1
   17cc0:	str	x1, [x0, #8]
   17cc4:	ldr	w0, [x25, #40]
   17cc8:	str	w0, [x2, #112]
   17ccc:	ldr	w0, [x25, #44]
   17cd0:	str	w0, [x2, #116]
   17cd4:	ldr	x0, [x25, #96]
   17cd8:	str	x0, [sp, #144]
   17cdc:	mov	w0, #0x80                  	// #128
   17ce0:	str	w0, [x25]
   17ce4:	ldr	x0, [sp, #128]
   17ce8:	str	x0, [sp, #200]
   17cec:	str	x23, [sp, #192]
   17cf0:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   17cf4:	ldrb	w1, [x23]
   17cf8:	tst	x1, #0x80
   17cfc:	ldr	w0, [sp, #168]
   17d00:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   17d04:	b.ne	17d24 <Perl_re_exec_indentf@@Base+0xbb54>  // b.any
   17d08:	mov	w0, #0x1                   	// #1
   17d0c:	cmp	w19, w1
   17d10:	b.eq	1769c <Perl_re_exec_indentf@@Base+0xb4cc>  // b.none
   17d14:	ldr	w0, [x25, #52]
   17d18:	cmp	w0, w1
   17d1c:	cset	w0, eq  // eq = none
   17d20:	b	1769c <Perl_re_exec_indentf@@Base+0xb4cc>
   17d24:	ldr	x2, [x24, #16]
   17d28:	cmp	x23, x2
   17d2c:	b.hi	17d84 <Perl_re_exec_indentf@@Base+0xbbb4>  // b.pmore
   17d30:	sub	x2, x2, x23
   17d34:	mov	w0, #0x1                   	// #1
   17d38:	cmp	x2, #0x0
   17d3c:	b.le	1769c <Perl_re_exec_indentf@@Base+0xb4cc>
   17d40:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   17d44:	ldr	x0, [x0, #4064]
   17d48:	ldrb	w20, [x0, w1, sxtw]
   17d4c:	cmp	x20, x2
   17d50:	csel	x20, x20, x2, le
   17d54:	mov	x2, x20
   17d58:	add	x1, x25, #0x68
   17d5c:	mov	x0, x23
   17d60:	bl	5460 <memcmp@plt>
   17d64:	cbz	w0, 17da8 <Perl_re_exec_indentf@@Base+0xbbd8>
   17d68:	mov	x2, x20
   17d6c:	add	x1, x25, #0x76
   17d70:	mov	x0, x23
   17d74:	bl	5460 <memcmp@plt>
   17d78:	cmp	w0, #0x0
   17d7c:	cset	w0, eq  // eq = none
   17d80:	b	1769c <Perl_re_exec_indentf@@Base+0xb4cc>
   17d84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17d88:	add	x3, x3, #0x330
   17d8c:	add	x3, x3, #0xc80
   17d90:	mov	w2, #0x21ea                	// #8682
   17d94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17d98:	add	x1, x1, #0xcb0
   17d9c:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   17da0:	add	x0, x0, #0xd88
   17da4:	bl	58e0 <__assert_fail@plt>
   17da8:	mov	w0, #0x1                   	// #1
   17dac:	b	1769c <Perl_re_exec_indentf@@Base+0xb4cc>
   17db0:	mov	w26, w27
   17db4:	mov	x27, x24
   17db8:	ldr	w19, [x25, #32]
   17dbc:	cbz	w19, 17ebc <Perl_re_exec_indentf@@Base+0xbcec>
   17dc0:	ldr	w0, [x25, #72]
   17dc4:	cbz	w0, 17e90 <Perl_re_exec_indentf@@Base+0xbcc0>
   17dc8:	ldrb	w1, [x24, #90]
   17dcc:	sub	x0, x23, #0x1
   17dd0:	cbnz	w1, 17e7c <Perl_re_exec_indentf@@Base+0xbcac>
   17dd4:	ldr	x3, [sp, #152]
   17dd8:	ldr	x2, [x3, #120]
   17ddc:	ubfiz	x1, x19, #1, #32
   17de0:	add	x19, x1, w19, uxtw
   17de4:	ldr	x1, [x27, #8]
   17de8:	sub	x0, x0, x1
   17dec:	str	x0, [x2, x19, lsl #3]
   17df0:	ldr	w0, [x25, #32]
   17df4:	ldr	x1, [x3, #120]
   17df8:	add	x0, x0, x0, lsl #1
   17dfc:	add	x0, x1, x0, lsl #3
   17e00:	ldr	x1, [x27, #8]
   17e04:	sub	x1, x23, x1
   17e08:	str	x1, [x0, #8]
   17e0c:	ldr	w0, [x25, #32]
   17e10:	ldr	w1, [x3, #112]
   17e14:	cmp	w0, w1
   17e18:	b.ls	17e20 <Perl_re_exec_indentf@@Base+0xbc50>  // b.plast
   17e1c:	str	w0, [x3, #112]
   17e20:	ldr	w0, [x25, #32]
   17e24:	ldr	x1, [sp, #152]
   17e28:	str	w0, [x1, #116]
   17e2c:	ldr	w1, [x22, #2368]
   17e30:	tbnz	w1, #20, 17e3c <Perl_re_exec_indentf@@Base+0xbc6c>
   17e34:	ldr	x1, [sp, #464]
   17e38:	tbz	w1, #22, 17ebc <Perl_re_exec_indentf@@Base+0xbcec>
   17e3c:	ldr	x2, [sp, #152]
   17e40:	ldr	x4, [x2, #120]
   17e44:	mov	w5, w0
   17e48:	add	x0, x5, w0, uxtw #1
   17e4c:	add	x1, x4, x0, lsl #3
   17e50:	ldr	x7, [x1, #8]
   17e54:	ldr	x6, [x4, x0, lsl #3]
   17e58:	ldr	w0, [x2, #112]
   17e5c:	str	x0, [sp]
   17e60:	mov	x3, x2
   17e64:	mov	w2, w26
   17e68:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   17e6c:	add	x1, x1, #0x3f8
   17e70:	mov	x0, x22
   17e74:	bl	5290 <Perl_re_exec_indentf@plt>
   17e78:	b	17ebc <Perl_re_exec_indentf@@Base+0xbcec>
   17e7c:	ldr	x2, [x24, #8]
   17e80:	mov	x1, #0xffffffffffffffff    	// #-1
   17e84:	mov	x0, x23
   17e88:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   17e8c:	b	17dd4 <Perl_re_exec_indentf@@Base+0xbc04>
   17e90:	ldr	x2, [sp, #152]
   17e94:	ldr	x1, [x2, #120]
   17e98:	ubfiz	x0, x19, #1, #32
   17e9c:	add	x0, x0, w19, uxtw
   17ea0:	add	x0, x1, x0, lsl #3
   17ea4:	mov	x1, #0xffffffffffffffff    	// #-1
   17ea8:	str	x1, [x0, #8]
   17eac:	ldr	w0, [x25, #40]
   17eb0:	str	w0, [x2, #112]
   17eb4:	ldr	w0, [x25, #44]
   17eb8:	str	w0, [x2, #116]
   17ebc:	ldr	x0, [x25, #96]
   17ec0:	str	x0, [sp, #144]
   17ec4:	mov	w0, #0x82                  	// #130
   17ec8:	str	w0, [x25]
   17ecc:	ldr	x0, [sp, #128]
   17ed0:	str	x0, [sp, #200]
   17ed4:	str	x23, [sp, #192]
   17ed8:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   17edc:	sxtw	x4, w4
   17ee0:	sxtw	x3, w3
   17ee4:	mov	w2, w27
   17ee8:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17eec:	add	x1, x1, #0xc30
   17ef0:	mov	x0, x22
   17ef4:	bl	5290 <Perl_re_exec_indentf@plt>
   17ef8:	b	176cc <Perl_re_exec_indentf@@Base+0xb4fc>
   17efc:	mov	x0, x22
   17f00:	bl	5660 <Perl_leave_scope@plt>
   17f04:	b	176dc <Perl_re_exec_indentf@@Base+0xb50c>
   17f08:	ldr	w0, [x22, #2368]
   17f0c:	tbnz	w0, #20, 17f18 <Perl_re_exec_indentf@@Base+0xbd48>
   17f10:	ldr	x0, [sp, #464]
   17f14:	tbz	w0, #22, 17f44 <Perl_re_exec_indentf@@Base+0xbd74>
   17f18:	ldr	w7, [x25, #44]
   17f1c:	ldr	x0, [sp, #152]
   17f20:	ldr	w6, [x0, #112]
   17f24:	ldr	w5, [x25, #40]
   17f28:	ldr	x4, [x0, #120]
   17f2c:	mov	x3, x0
   17f30:	mov	w2, w27
   17f34:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   17f38:	add	x1, x1, #0xc60
   17f3c:	mov	x0, x22
   17f40:	bl	5290 <Perl_re_exec_indentf@plt>
   17f44:	ldr	x4, [sp, #152]
   17f48:	ldr	w1, [x4, #112]
   17f4c:	ldr	w0, [x25, #40]
   17f50:	cmp	w1, w0
   17f54:	b.ls	17f80 <Perl_re_exec_indentf@@Base+0xbdb0>  // b.plast
   17f58:	mov	x3, #0xffffffffffffffff    	// #-1
   17f5c:	ldr	x2, [x4, #120]
   17f60:	ubfiz	x0, x1, #1, #32
   17f64:	add	x0, x0, w1, uxtw
   17f68:	add	x0, x2, x0, lsl #3
   17f6c:	str	x3, [x0, #8]
   17f70:	sub	w1, w1, #0x1
   17f74:	ldr	w0, [x25, #40]
   17f78:	cmp	w1, w0
   17f7c:	b.hi	17f5c <Perl_re_exec_indentf@@Base+0xbd8c>  // b.pmore
   17f80:	ldr	x2, [sp, #152]
   17f84:	str	w1, [x2, #112]
   17f88:	ldr	w0, [x25, #44]
   17f8c:	str	w0, [x2, #116]
   17f90:	b	176e4 <Perl_re_exec_indentf@@Base+0xb514>
   17f94:	ldr	x2, [x24, #8]
   17f98:	mov	x1, #0xffffffffffffffff    	// #-1
   17f9c:	mov	x0, x23
   17fa0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   17fa4:	mov	x23, x0
   17fa8:	b	1767c <Perl_re_exec_indentf@@Base+0xb4ac>
   17fac:	ldr	x25, [sp, #192]
   17fb0:	b	155e0 <Perl_re_exec_indentf@@Base+0x9410>
   17fb4:	mov	w26, w27
   17fb8:	mov	x27, x24
   17fbc:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   17fc0:	mov	w26, w27
   17fc4:	mov	x27, x24
   17fc8:	b	16c58 <Perl_re_exec_indentf@@Base+0xaa88>
   17fcc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   17fd0:	add	x3, x3, #0x330
   17fd4:	add	x3, x3, #0xc80
   17fd8:	mov	w2, #0x2218                	// #8728
   17fdc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   17fe0:	add	x1, x1, #0xcb0
   17fe4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   17fe8:	add	x0, x0, #0x258
   17fec:	bl	58e0 <__assert_fail@plt>
   17ff0:	mov	x0, x22
   17ff4:	bl	5860 <Perl_sv_free2@plt>
   17ff8:	b	16d50 <Perl_re_exec_indentf@@Base+0xab80>
   17ffc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18000:	add	x3, x3, #0x330
   18004:	add	x3, x3, #0x3e0
   18008:	mov	w2, #0xb6                  	// #182
   1800c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18010:	add	x1, x1, #0xc80
   18014:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   18018:	add	x0, x0, #0x128
   1801c:	bl	58e0 <__assert_fail@plt>
   18020:	ldr	w0, [x22, #2368]
   18024:	tbnz	w0, #20, 18034 <Perl_re_exec_indentf@@Base+0xbe64>
   18028:	ldr	x0, [sp, #464]
   1802c:	tst	x0, #0xff00
   18030:	b.eq	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>  // b.none
   18034:	ldr	x4, [x22, #1488]
   18038:	ldr	x3, [x22, #1480]
   1803c:	mov	w2, w27
   18040:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18044:	add	x1, x1, #0x800
   18048:	mov	x0, x22
   1804c:	bl	5290 <Perl_re_exec_indentf@plt>
   18050:	b	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   18054:	mov	x0, x24
   18058:	mov	x24, x26
   1805c:	mov	w26, w27
   18060:	mov	x27, x0
   18064:	mov	w0, #0x1                   	// #1
   18068:	str	w0, [x25, #40]
   1806c:	str	x23, [x25, #56]
   18070:	ldr	x1, [sp, #128]
   18074:	str	x1, [x25, #64]
   18078:	strb	w0, [x25, #48]
   1807c:	b	18164 <Perl_re_exec_indentf@@Base+0xbf94>
   18080:	str	wzr, [x25, #40]
   18084:	ldrh	w21, [x26, #2]
   18088:	add	w19, w21, #0x1
   1808c:	and	w19, w19, #0xff
   18090:	strb	w19, [x25, #48]
   18094:	ldrb	w0, [x26]
   18098:	sub	w20, w0, #0x1
   1809c:	and	w20, w20, #0xff
   180a0:	cbz	w0, 180e0 <Perl_re_exec_indentf@@Base+0xbf10>
   180a4:	ldr	x0, [sp, #128]
   180a8:	str	x0, [x25, #64]
   180ac:	cbnz	w19, 18128 <Perl_re_exec_indentf@@Base+0xbf58>
   180b0:	ldr	w0, [sp, #312]
   180b4:	cbnz	w0, 18264 <Perl_re_exec_indentf@@Base+0xc094>
   180b8:	ldr	w0, [x25, #40]
   180bc:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   180c0:	mov	x0, x24
   180c4:	mov	x24, x26
   180c8:	mov	w26, w27
   180cc:	mov	x27, x0
   180d0:	b	18284 <Perl_re_exec_indentf@@Base+0xc0b4>
   180d4:	mov	w0, #0x1                   	// #1
   180d8:	str	w0, [x25, #40]
   180dc:	b	18084 <Perl_re_exec_indentf@@Base+0xbeb4>
   180e0:	mov	x0, x24
   180e4:	mov	x24, x26
   180e8:	mov	w26, w27
   180ec:	mov	x27, x0
   180f0:	str	x23, [x25, #56]
   180f4:	ldr	x0, [sp, #128]
   180f8:	str	x0, [x25, #64]
   180fc:	b	18164 <Perl_re_exec_indentf@@Base+0xbf94>
   18100:	and	x0, x0, #0xff
   18104:	ldr	x2, [x24, #8]
   18108:	neg	x1, x0
   1810c:	mov	x0, x23
   18110:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   18114:	cbnz	x0, 18150 <Perl_re_exec_indentf@@Base+0xbf80>
   18118:	sub	w19, w19, #0x1
   1811c:	and	w19, w19, #0xff
   18120:	strb	w19, [x25, #48]
   18124:	cbz	w19, 180b0 <Perl_re_exec_indentf@@Base+0xbee0>
   18128:	sub	w0, w19, w21
   1812c:	add	w0, w20, w0
   18130:	and	w0, w0, #0xff
   18134:	ldrb	w1, [x24, #90]
   18138:	cbnz	w1, 18100 <Perl_re_exec_indentf@@Base+0xbf30>
   1813c:	sub	x0, x23, w0, uxtb
   18140:	ldr	x1, [x24, #8]
   18144:	cmp	x0, x1
   18148:	b.cc	18118 <Perl_re_exec_indentf@@Base+0xbf48>  // b.lo, b.ul, b.last
   1814c:	b	18114 <Perl_re_exec_indentf@@Base+0xbf44>
   18150:	mov	x1, x24
   18154:	mov	x24, x26
   18158:	mov	w26, w27
   1815c:	mov	x27, x1
   18160:	str	x0, [x25, #56]
   18164:	str	x24, [x25, #72]
   18168:	ldr	w0, [sp, #312]
   1816c:	str	w0, [x25, #44]
   18170:	ldr	x0, [x25, #64]
   18174:	str	x0, [sp, #200]
   18178:	add	x0, x24, #0x8
   1817c:	str	x0, [sp, #144]
   18180:	mov	w0, #0x7e                  	// #126
   18184:	str	w0, [x25]
   18188:	str	x23, [sp, #192]
   1818c:	ldr	x23, [x25, #56]
   18190:	str	wzr, [sp, #312]
   18194:	str	x28, [x25, #32]
   18198:	mov	x28, x25
   1819c:	ldr	w0, [x22, #2368]
   181a0:	tbnz	w0, #20, 188b0 <Perl_re_exec_indentf@@Base+0xc6e0>
   181a4:	ldr	x1, [sp, #464]
   181a8:	mov	x0, #0x280000              	// #2621440
   181ac:	tst	x1, x0
   181b0:	b.ne	188b0 <Perl_re_exec_indentf@@Base+0xc6e0>  // b.any
   181b4:	ldr	w0, [x22, #2368]
   181b8:	tbnz	w0, #20, 181c4 <Perl_re_exec_indentf@@Base+0xbff4>
   181bc:	ldr	x0, [sp, #464]
   181c0:	tbz	w0, #19, 189a4 <Perl_re_exec_indentf@@Base+0xc7d4>
   181c4:	mov	w7, w26
   181c8:	ldrb	w6, [sp, #168]
   181cc:	ldr	x5, [sp, #136]
   181d0:	ldr	x4, [x27, #8]
   181d4:	ldr	x3, [x27, #16]
   181d8:	ldr	x2, [sp, #144]
   181dc:	ldr	x1, [sp, #192]
   181e0:	mov	x0, x22
   181e4:	bl	624c <Perl__inverse_folds@plt+0x84c>
   181e8:	mov	w2, #0x6667                	// #26215
   181ec:	movk	w2, #0x6666, lsl #16
   181f0:	smull	x2, w26, w2
   181f4:	asr	x2, x2, #35
   181f8:	sub	w2, w2, w26, asr #31
   181fc:	add	w2, w2, w2, lsl #2
   18200:	sub	w2, w26, w2, lsl #2
   18204:	ldrsw	x1, [x25]
   18208:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1820c:	ldr	x0, [x0, #3776]
   18210:	ldr	x4, [x0, x1, lsl #3]
   18214:	cmp	x25, x28
   18218:	ldr	x0, [sp, #160]
   1821c:	ccmp	x25, x0, #0x4, ne  // ne = any
   18220:	b.ne	18974 <Perl_re_exec_indentf@@Base+0xc7a4>  // b.any
   18224:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   18228:	add	x6, x6, #0x20
   1822c:	cmp	x25, x28
   18230:	b.ne	191a8 <Perl_re_exec_indentf@@Base+0xcfd8>  // b.any
   18234:	ldr	x0, [sp, #160]
   18238:	cmp	x25, x0
   1823c:	b.eq	191a0 <Perl_re_exec_indentf@@Base+0xcfd0>  // b.none
   18240:	adrp	x7, 7d000 <boot_re@@Base+0x1b41c>
   18244:	add	x7, x7, #0x20
   18248:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   1824c:	add	x6, x6, #0xa18
   18250:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   18254:	add	x5, x5, #0xa10
   18258:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   1825c:	add	x0, x0, #0x538
   18260:	b	18988 <Perl_re_exec_indentf@@Base+0xc7b8>
   18264:	mov	x0, x24
   18268:	mov	x24, x26
   1826c:	mov	w26, w27
   18270:	mov	x27, x0
   18274:	ldr	w0, [x25, #40]
   18278:	cmp	w0, #0x0
   1827c:	cset	w0, eq  // eq = none
   18280:	str	w0, [sp, #320]
   18284:	ldr	w0, [x24, #4]
   18288:	add	x0, x24, x0, lsl #2
   1828c:	str	x0, [sp, #144]
   18290:	str	wzr, [sp, #312]
   18294:	cmp	x24, x0
   18298:	b.ne	189e0 <Perl_re_exec_indentf@@Base+0xc810>  // b.any
   1829c:	str	xzr, [sp, #144]
   182a0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   182a4:	ldr	w19, [x25, #44]
   182a8:	cbnz	w19, 19644 <Perl_re_exec_indentf@@Base+0xd474>
   182ac:	ldrb	w0, [x25, #48]
   182b0:	cmp	w0, #0x1
   182b4:	b.hi	182c0 <Perl_re_exec_indentf@@Base+0xc0f0>  // b.pmore
   182b8:	mov	w1, #0x0                   	// #0
   182bc:	b	18308 <Perl_re_exec_indentf@@Base+0xc138>
   182c0:	mov	w26, w27
   182c4:	mov	x27, x24
   182c8:	sub	w0, w0, #0x1
   182cc:	strb	w0, [x25, #48]
   182d0:	ldrb	w0, [x24, #90]
   182d4:	cbnz	w0, 182f0 <Perl_re_exec_indentf@@Base+0xc120>
   182d8:	ldr	x0, [x25, #56]
   182dc:	add	x0, x0, #0x1
   182e0:	str	x0, [x25, #56]
   182e4:	ldr	x24, [x25, #72]
   182e8:	str	w19, [sp, #312]
   182ec:	b	18164 <Perl_re_exec_indentf@@Base+0xbf94>
   182f0:	ldr	x2, [x24, #16]
   182f4:	mov	x1, #0x1                   	// #1
   182f8:	ldr	x0, [x25, #56]
   182fc:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   18300:	b	182e0 <Perl_re_exec_indentf@@Base+0xc110>
   18304:	mov	w1, #0x1                   	// #1
   18308:	ldr	w0, [x25, #40]
   1830c:	cmp	w1, w0
   18310:	cset	w2, eq  // eq = none
   18314:	str	w2, [sp, #320]
   18318:	ldr	w2, [x25, #44]
   1831c:	cmp	w2, #0x0
   18320:	ccmp	w1, w0, #0x4, eq  // eq = none
   18324:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   18328:	mov	w26, w27
   1832c:	mov	x27, x24
   18330:	ldr	x0, [x25, #72]
   18334:	ldrb	w1, [x0, #1]
   18338:	cmp	w1, #0x4a
   1833c:	b.eq	18354 <Perl_re_exec_indentf@@Base+0xc184>  // b.none
   18340:	ldr	x23, [x25, #8]
   18344:	ldr	x1, [x25, #16]
   18348:	str	x1, [sp, #128]
   1834c:	ldr	x1, [x25, #24]
   18350:	str	x1, [sp, #184]
   18354:	ldr	w1, [x0, #4]
   18358:	add	x1, x0, x1, lsl #2
   1835c:	cmp	x0, x1
   18360:	csel	x0, x1, xzr, ne  // ne = any
   18364:	str	x0, [sp, #144]
   18368:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   1836c:	mov	w1, #0x1                   	// #1
   18370:	b	18308 <Perl_re_exec_indentf@@Base+0xc138>
   18374:	mov	x0, x24
   18378:	mov	x24, x26
   1837c:	mov	w26, w27
   18380:	mov	x27, x0
   18384:	ldr	w0, [x24, #4]
   18388:	add	x0, x24, x0, lsl #2
   1838c:	cmp	x24, x0
   18390:	csel	x0, x0, xzr, ne  // ne = any
   18394:	str	x0, [sp, #144]
   18398:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   1839c:	mov	x0, x24
   183a0:	mov	x24, x26
   183a4:	mov	w26, w27
   183a8:	mov	x27, x0
   183ac:	ldr	x0, [sp, #128]
   183b0:	str	x0, [x27, #48]
   183b4:	ldrb	w0, [x24]
   183b8:	cbz	w0, 183d8 <Perl_re_exec_indentf@@Base+0xc208>
   183bc:	ldr	x0, [sp, #208]
   183c0:	ldr	x1, [x0, #24]
   183c4:	ldr	w0, [x24, #4]
   183c8:	add	x0, x0, #0x2
   183cc:	ldr	x0, [x1, x0, lsl #3]
   183d0:	str	x0, [sp, #328]
   183d4:	str	x0, [sp, #304]
   183d8:	mov	w0, #0x84                  	// #132
   183dc:	str	w0, [x25]
   183e0:	ldr	x0, [sp, #128]
   183e4:	str	x0, [sp, #200]
   183e8:	str	x23, [sp, #192]
   183ec:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   183f0:	mov	x0, x24
   183f4:	mov	x24, x26
   183f8:	mov	w26, w27
   183fc:	mov	x27, x0
   18400:	b	183b4 <Perl_re_exec_indentf@@Base+0xc1e4>
   18404:	mov	x0, x24
   18408:	mov	x24, x26
   1840c:	mov	w26, w27
   18410:	mov	x27, x0
   18414:	b	183b4 <Perl_re_exec_indentf@@Base+0xc1e4>
   18418:	ldrb	w0, [x26]
   1841c:	cbz	w0, 18438 <Perl_re_exec_indentf@@Base+0xc268>
   18420:	ldr	x0, [sp, #208]
   18424:	ldr	x1, [x0, #24]
   18428:	ldr	w0, [x26, #4]
   1842c:	add	x0, x0, #0x2
   18430:	ldr	x0, [x1, x0, lsl #3]
   18434:	str	x0, [sp, #328]
   18438:	ldr	w0, [sp, #312]
   1843c:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18440:	mov	w26, w27
   18444:	mov	x27, x24
   18448:	str	wzr, [sp, #320]
   1844c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18450:	mov	x0, x24
   18454:	mov	x24, x26
   18458:	mov	w26, w27
   1845c:	mov	x27, x0
   18460:	ldr	x0, [sp, #160]
   18464:	str	x0, [x25, #40]
   18468:	ldr	x0, [sp, #208]
   1846c:	ldr	x1, [x0, #24]
   18470:	ldr	w0, [x24, #4]
   18474:	add	x0, x0, #0x2
   18478:	ldr	x1, [x1, x0, lsl #3]
   1847c:	str	x1, [sp, #328]
   18480:	str	x1, [x25, #48]
   18484:	str	x23, [x25, #56]
   18488:	mov	w0, #0x86                  	// #134
   1848c:	str	w0, [x25]
   18490:	str	x1, [sp, #304]
   18494:	str	x25, [sp, #160]
   18498:	ldr	x0, [sp, #128]
   1849c:	str	x0, [sp, #200]
   184a0:	str	x23, [sp, #192]
   184a4:	b	18194 <Perl_re_exec_indentf@@Base+0xbfc4>
   184a8:	ldr	x0, [x25, #40]
   184ac:	str	x0, [sp, #160]
   184b0:	b	18ec8 <Perl_re_exec_indentf@@Base+0xccf8>
   184b4:	ldr	x0, [sp, #392]
   184b8:	cbz	x0, 18544 <Perl_re_exec_indentf@@Base+0xc374>
   184bc:	mov	w3, #0x2                   	// #2
   184c0:	mov	x2, x0
   184c4:	ldr	x1, [x25, #48]
   184c8:	mov	x0, x22
   184cc:	bl	5440 <Perl_sv_eq_flags@plt>
   184d0:	cbz	w0, 18544 <Perl_re_exec_indentf@@Base+0xc374>
   184d4:	ldr	x0, [x25, #56]
   184d8:	ldr	x1, [sp, #136]
   184dc:	cmp	x1, x0
   184e0:	b.cs	18500 <Perl_re_exec_indentf@@Base+0xc330>  // b.hs, b.nlast
   184e4:	ldrb	w1, [x24, #90]
   184e8:	cbnz	w1, 18560 <Perl_re_exec_indentf@@Base+0xc390>
   184ec:	sub	x0, x0, #0x1
   184f0:	ldr	x1, [x24, #8]
   184f4:	cmp	x0, x1
   184f8:	csel	x0, x0, xzr, cs  // cs = hs, nlast
   184fc:	str	x0, [x24, #48]
   18500:	ldr	x0, [x25, #48]
   18504:	str	x0, [sp, #328]
   18508:	ldr	w0, [x22, #2368]
   1850c:	tbnz	w0, #20, 18520 <Perl_re_exec_indentf@@Base+0xc350>
   18510:	ldr	x0, [sp, #464]
   18514:	str	xzr, [sp, #392]
   18518:	tst	x0, #0xff00
   1851c:	b.eq	18544 <Perl_re_exec_indentf@@Base+0xc374>  // b.none
   18520:	ldr	x5, [x22, #1488]
   18524:	ldr	x4, [sp, #328]
   18528:	ldr	x3, [x22, #1480]
   1852c:	mov	w2, w27
   18530:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18534:	add	x1, x1, #0x828
   18538:	mov	x0, x22
   1853c:	bl	5290 <Perl_re_exec_indentf@plt>
   18540:	str	xzr, [sp, #392]
   18544:	ldr	x0, [x25, #40]
   18548:	str	x0, [sp, #160]
   1854c:	str	x0, [sp, #304]
   18550:	cbz	x0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18554:	ldr	x0, [x0, #48]
   18558:	str	x0, [sp, #304]
   1855c:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18560:	ldr	x2, [x24, #8]
   18564:	mov	x1, #0xffffffffffffffff    	// #-1
   18568:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   1856c:	b	184fc <Perl_re_exec_indentf@@Base+0xc32c>
   18570:	mov	x0, x24
   18574:	mov	x24, x26
   18578:	mov	w26, w27
   1857c:	mov	x27, x0
   18580:	ldrb	w0, [x24]
   18584:	cbz	w0, 185cc <Perl_re_exec_indentf@@Base+0xc3fc>
   18588:	ldr	x19, [sp, #160]
   1858c:	cbz	x19, 189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18590:	ldr	x0, [sp, #208]
   18594:	ldr	x1, [x0, #24]
   18598:	ldr	w0, [x24, #4]
   1859c:	add	x0, x0, #0x2
   185a0:	ldr	x20, [x1, x0, lsl #3]
   185a4:	mov	w21, #0x2                   	// #2
   185a8:	mov	w3, w21
   185ac:	mov	x2, x20
   185b0:	ldr	x1, [x19, #48]
   185b4:	mov	x0, x22
   185b8:	bl	5440 <Perl_sv_eq_flags@plt>
   185bc:	cbnz	w0, 185ec <Perl_re_exec_indentf@@Base+0xc41c>
   185c0:	ldr	x19, [x19, #40]
   185c4:	cbnz	x19, 185a8 <Perl_re_exec_indentf@@Base+0xc3d8>
   185c8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   185cc:	str	xzr, [x25, #48]
   185d0:	str	x23, [x25, #56]
   185d4:	mov	w0, #0x88                  	// #136
   185d8:	str	w0, [x25]
   185dc:	ldr	x0, [sp, #128]
   185e0:	str	x0, [sp, #200]
   185e4:	str	x23, [sp, #192]
   185e8:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   185ec:	str	x20, [x25, #48]
   185f0:	mov	w0, #0x88                  	// #136
   185f4:	str	w0, [x25]
   185f8:	ldr	x0, [sp, #128]
   185fc:	str	x0, [sp, #200]
   18600:	str	x23, [sp, #192]
   18604:	b	1819c <Perl_re_exec_indentf@@Base+0xbfcc>
   18608:	ldr	x1, [x25, #48]
   1860c:	cbz	x1, 18620 <Perl_re_exec_indentf@@Base+0xc450>
   18610:	str	x1, [sp, #392]
   18614:	mov	w0, #0x1                   	// #1
   18618:	str	w0, [sp, #172]
   1861c:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18620:	ldr	x0, [x25, #56]
   18624:	ldr	x2, [sp, #136]
   18628:	cmp	x2, x0
   1862c:	b.cs	1864c <Perl_re_exec_indentf@@Base+0xc47c>  // b.hs, b.nlast
   18630:	ldrb	w2, [x24, #90]
   18634:	cbnz	w2, 18668 <Perl_re_exec_indentf@@Base+0xc498>
   18638:	sub	x0, x0, #0x1
   1863c:	ldr	x2, [x24, #8]
   18640:	cmp	x0, x2
   18644:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   18648:	str	x1, [x24, #48]
   1864c:	mov	w0, #0x1                   	// #1
   18650:	str	w0, [sp, #172]
   18654:	ldr	x0, [sp, #160]
   18658:	cbz	x0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1865c:	ldr	x0, [x0, #48]
   18660:	str	x0, [sp, #328]
   18664:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18668:	ldr	x2, [x24, #8]
   1866c:	mov	x1, #0xffffffffffffffff    	// #-1
   18670:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   18674:	mov	x1, x0
   18678:	b	18648 <Perl_re_exec_indentf@@Base+0xc478>
   1867c:	ldr	x0, [sp, #128]
   18680:	sub	x0, x0, x23
   18684:	cmp	x0, #0x2
   18688:	b.le	18738 <Perl_re_exec_indentf@@Base+0xc568>
   1868c:	ldrb	w0, [x23]
   18690:	sub	w1, w0, #0xa
   18694:	cmp	w1, #0x2
   18698:	b.ls	187d4 <Perl_re_exec_indentf@@Base+0xc604>  // b.plast
   1869c:	cmp	w0, #0xd
   186a0:	b.eq	186e8 <Perl_re_exec_indentf@@Base+0xc518>  // b.none
   186a4:	ldr	w1, [sp, #168]
   186a8:	cbz	w1, 18720 <Perl_re_exec_indentf@@Base+0xc550>
   186ac:	cmp	w0, #0xc2
   186b0:	b.eq	18704 <Perl_re_exec_indentf@@Base+0xc534>  // b.none
   186b4:	cmp	w0, #0xe2
   186b8:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   186bc:	ldrb	w0, [x23, #1]
   186c0:	cmp	w0, #0x80
   186c4:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   186c8:	ldrb	w0, [x23, #2]
   186cc:	sub	w0, w0, #0xa8
   186d0:	cmp	w0, #0x1
   186d4:	b.hi	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.pmore
   186d8:	mov	w26, w27
   186dc:	mov	x27, x24
   186e0:	mov	w0, #0x3                   	// #3
   186e4:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   186e8:	mov	w26, w27
   186ec:	mov	x27, x24
   186f0:	ldrb	w0, [x23, #1]
   186f4:	cmp	w0, #0xa
   186f8:	cset	w0, eq  // eq = none
   186fc:	add	w0, w0, #0x1
   18700:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   18704:	ldrb	w0, [x23, #1]
   18708:	cmp	w0, #0x85
   1870c:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   18710:	mov	w26, w27
   18714:	mov	x27, x24
   18718:	mov	w0, #0x2                   	// #2
   1871c:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   18720:	cmp	w0, #0x85
   18724:	cset	w0, eq  // eq = none
   18728:	cbz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   1872c:	mov	w26, w27
   18730:	mov	x27, x24
   18734:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   18738:	b.ne	187a8 <Perl_re_exec_indentf@@Base+0xc5d8>  // b.any
   1873c:	ldrb	w0, [x23]
   18740:	sub	w1, w0, #0xa
   18744:	cmp	w1, #0x2
   18748:	b.ls	187ec <Perl_re_exec_indentf@@Base+0xc61c>  // b.plast
   1874c:	cmp	w0, #0xd
   18750:	b.eq	18780 <Perl_re_exec_indentf@@Base+0xc5b0>  // b.none
   18754:	ldr	w1, [sp, #168]
   18758:	cbz	w1, 1879c <Perl_re_exec_indentf@@Base+0xc5cc>
   1875c:	cmp	w0, #0xc2
   18760:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   18764:	ldrb	w0, [x23, #1]
   18768:	cmp	w0, #0x85
   1876c:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   18770:	mov	w26, w27
   18774:	mov	x27, x24
   18778:	mov	w0, #0x2                   	// #2
   1877c:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   18780:	mov	w26, w27
   18784:	mov	x27, x24
   18788:	ldrb	w0, [x23, #1]
   1878c:	cmp	w0, #0xa
   18790:	cset	w0, eq  // eq = none
   18794:	add	w0, w0, #0x1
   18798:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   1879c:	cmp	w0, #0x85
   187a0:	cset	w0, eq  // eq = none
   187a4:	b	18728 <Perl_re_exec_indentf@@Base+0xc558>
   187a8:	cmp	x0, #0x0
   187ac:	b.le	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   187b0:	ldrb	w0, [x23]
   187b4:	sub	w1, w0, #0xa
   187b8:	cmp	w1, #0x3
   187bc:	b.ls	187fc <Perl_re_exec_indentf@@Base+0xc62c>  // b.plast
   187c0:	ldr	w1, [sp, #168]
   187c4:	cbnz	w1, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   187c8:	cmp	w0, #0x85
   187cc:	cset	w0, eq  // eq = none
   187d0:	b	18728 <Perl_re_exec_indentf@@Base+0xc558>
   187d4:	mov	w26, w27
   187d8:	mov	x27, x24
   187dc:	mov	w0, #0x1                   	// #1
   187e0:	mov	w0, w0
   187e4:	add	x23, x23, x0
   187e8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   187ec:	mov	w26, w27
   187f0:	mov	x27, x24
   187f4:	mov	w0, #0x1                   	// #1
   187f8:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   187fc:	mov	w26, w27
   18800:	mov	x27, x24
   18804:	mov	w0, #0x1                   	// #1
   18808:	b	187e0 <Perl_re_exec_indentf@@Base+0xc610>
   1880c:	mov	x25, x26
   18810:	mov	x27, x22
   18814:	ldr	x1, [x22, #1704]
   18818:	cbz	x1, 18850 <Perl_re_exec_indentf@@Base+0xc680>
   1881c:	ldr	w0, [x1, #12]
   18820:	and	w2, w0, #0xff
   18824:	cmp	w2, #0x9
   18828:	b.ne	18850 <Perl_re_exec_indentf@@Base+0xc680>  // b.any
   1882c:	and	w0, w0, #0xc000
   18830:	cmp	w0, #0x8, lsl #12
   18834:	b.ne	1887c <Perl_re_exec_indentf@@Base+0xc6ac>  // b.any
   18838:	ldr	x0, [x1, #16]
   1883c:	ldr	x0, [x0, #8]
   18840:	cbz	x0, 18850 <Perl_re_exec_indentf@@Base+0xc680>
   18844:	ldr	x0, [x0]
   18848:	ldr	x0, [x0, #40]
   1884c:	cbnz	x0, 18858 <Perl_re_exec_indentf@@Base+0xc688>
   18850:	mov	x0, x27
   18854:	bl	58f0 <Perl_PerlIO_stderr@plt>
   18858:	ldrb	w3, [x25, #1]
   1885c:	mov	x2, x25
   18860:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18864:	add	x1, x1, #0x868
   18868:	bl	5730 <PerlIO_printf@plt>
   1886c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18870:	add	x1, x1, #0x870
   18874:	mov	x0, x27
   18878:	bl	5420 <Perl_croak@plt>
   1887c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18880:	add	x3, x3, #0x330
   18884:	add	x3, x3, #0xc80
   18888:	mov	w2, #0x2336                	// #9014
   1888c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18890:	add	x1, x1, #0xcb0
   18894:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   18898:	add	x0, x0, #0xa80
   1889c:	bl	58e0 <__assert_fail@plt>
   188a0:	mov	w26, w27
   188a4:	mov	x27, x24
   188a8:	add	x23, x23, #0x1
   188ac:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   188b0:	ldr	x21, [x22, #288]
   188b4:	cmp	w26, #0x2
   188b8:	mov	w0, #0x2                   	// #2
   188bc:	csel	w0, w26, w0, ls  // ls = plast
   188c0:	str	w0, [sp, #216]
   188c4:	mov	x19, x25
   188c8:	mov	w20, #0x0                   	// #0
   188cc:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   188d0:	add	x0, x0, #0xa00
   188d4:	str	x0, [sp, #240]
   188d8:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   188dc:	add	x0, x0, #0x9f8
   188e0:	str	x0, [sp, #248]
   188e4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   188e8:	ldr	x0, [x0, #3776]
   188ec:	str	x0, [sp, #224]
   188f0:	adrp	x24, 7d000 <boot_re@@Base+0x1b41c>
   188f4:	add	x24, x24, #0x20
   188f8:	str	x23, [sp, #264]
   188fc:	mov	x23, x28
   18900:	b	18960 <Perl_re_exec_indentf@@Base+0xc790>
   18904:	ldr	x21, [x21, #3944]
   18908:	add	x19, x21, #0xee0
   1890c:	cmp	w20, #0x0
   18910:	ldr	x0, [sp, #248]
   18914:	ldr	x1, [sp, #240]
   18918:	csel	x3, x0, x1, ne  // ne = any
   1891c:	sub	w4, w26, w20
   18920:	ldrsw	x0, [x19]
   18924:	ldr	x1, [sp, #224]
   18928:	ldr	x5, [x1, x0, lsl #3]
   1892c:	cmp	x23, x19
   18930:	b.eq	1917c <Perl_re_exec_indentf@@Base+0xcfac>  // b.none
   18934:	mov	x6, x24
   18938:	mov	w2, w26
   1893c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18940:	add	x1, x1, #0xa40
   18944:	mov	x0, x22
   18948:	bl	5290 <Perl_re_exec_indentf@plt>
   1894c:	sub	x19, x19, #0x88
   18950:	add	w20, w20, #0x1
   18954:	ldr	w0, [sp, #216]
   18958:	cmp	w0, w20
   1895c:	b.cc	1896c <Perl_re_exec_indentf@@Base+0xc79c>  // b.lo, b.ul, b.last
   18960:	cmp	x21, x19
   18964:	b.ls	1890c <Perl_re_exec_indentf@@Base+0xc73c>  // b.plast
   18968:	b	18904 <Perl_re_exec_indentf@@Base+0xc734>
   1896c:	ldr	x23, [sp, #264]
   18970:	b	189a4 <Perl_re_exec_indentf@@Base+0xc7d4>
   18974:	adrp	x7, 7d000 <boot_re@@Base+0x1b41c>
   18978:	add	x7, x7, #0x20
   1897c:	mov	x6, x7
   18980:	mov	x5, x7
   18984:	mov	x0, x7
   18988:	str	x0, [sp]
   1898c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   18990:	add	x3, x3, #0x20
   18994:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18998:	add	x1, x1, #0x8a0
   1899c:	mov	x0, x22
   189a0:	bl	50e0 <Perl_re_printf@plt>
   189a4:	add	w26, w26, #0x1
   189a8:	ldr	x0, [sp, #192]
   189ac:	str	x0, [x25, #8]
   189b0:	ldr	x0, [sp, #128]
   189b4:	str	x0, [x25, #16]
   189b8:	ldr	x0, [sp, #184]
   189bc:	str	x0, [x25, #24]
   189c0:	add	x25, x25, #0x88
   189c4:	ldr	x0, [x22, #288]
   189c8:	add	x0, x0, #0xee0
   189cc:	cmp	x25, x0
   189d0:	b.hi	18a60 <Perl_re_exec_indentf@@Base+0xc890>  // b.pmore
   189d4:	str	x25, [x22, #296]
   189d8:	ldr	x0, [sp, #200]
   189dc:	str	x0, [sp, #128]
   189e0:	ldr	x0, [sp, #144]
   189e4:	cbz	x0, 18b14 <Perl_re_exec_indentf@@Base+0xc944>
   189e8:	ldr	x24, [sp, #144]
   189ec:	ldrh	w0, [x24, #2]
   189f0:	add	x0, x24, x0, lsl #2
   189f4:	cmp	x0, x24
   189f8:	csel	x0, x0, xzr, ne  // ne = any
   189fc:	str	x0, [sp, #144]
   18a00:	ldrb	w19, [x24, #1]
   18a04:	mov	x0, x27
   18a08:	mov	w27, w26
   18a0c:	mov	x26, x24
   18a10:	mov	x24, x0
   18a14:	ldr	w0, [x22, #2368]
   18a18:	tbnz	w0, #20, 18a28 <Perl_re_exec_indentf@@Base+0xc858>
   18a1c:	ldr	x0, [sp, #464]
   18a20:	tst	x0, #0xff00
   18a24:	b.eq	18a30 <Perl_re_exec_indentf@@Base+0xc860>  // b.none
   18a28:	cmp	w19, #0x65
   18a2c:	b.ls	ee44 <Perl_re_exec_indentf@@Base+0x2c74>  // b.plast
   18a30:	ldr	x21, [x24, #16]
   18a34:	cmp	x23, x21
   18a38:	b.cs	19a10 <Perl_re_exec_indentf@@Base+0xd840>  // b.hs, b.nlast
   18a3c:	ldrb	w20, [x23]
   18a40:	cmp	w19, #0x8d
   18a44:	b.hi	1880c <Perl_re_exec_indentf@@Base+0xc63c>  // b.pmore
   18a48:	adrp	x0, 6c000 <boot_re@@Base+0xa41c>
   18a4c:	add	x0, x0, #0x3c
   18a50:	ldrh	w0, [x0, w19, uxtw #1]
   18a54:	adr	x1, 18a60 <Perl_re_exec_indentf@@Base+0xc890>
   18a58:	add	x0, x1, w0, sxth #2
   18a5c:	br	x0
   18a60:	mov	x0, x22
   18a64:	bl	74bc <Perl__inverse_folds@plt+0x1abc>
   18a68:	mov	x25, x0
   18a6c:	b	189d4 <Perl_re_exec_indentf@@Base+0xc804>
   18a70:	mov	w26, w27
   18a74:	mov	x27, x24
   18a78:	str	x23, [sp, #184]
   18a7c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18a80:	mov	w26, w27
   18a84:	mov	x27, x24
   18a88:	mov	x23, x0
   18a8c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18a90:	mov	x23, x24
   18a94:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18a98:	mov	x23, x0
   18a9c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18aa0:	mov	w26, w27
   18aa4:	mov	x27, x24
   18aa8:	mov	x23, x20
   18aac:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18ab0:	mov	x0, x24
   18ab4:	mov	x24, x26
   18ab8:	mov	w26, w27
   18abc:	mov	x27, x0
   18ac0:	str	x24, [sp, #144]
   18ac4:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18ac8:	mov	w26, w27
   18acc:	mov	x27, x24
   18ad0:	str	wzr, [sp, #316]
   18ad4:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18ad8:	mov	w26, w27
   18adc:	mov	x27, x24
   18ae0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18ae4:	mov	w26, w27
   18ae8:	mov	x27, x24
   18aec:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18af0:	mov	w26, w27
   18af4:	mov	x27, x24
   18af8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18afc:	mov	w26, w27
   18b00:	mov	x27, x24
   18b04:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18b08:	mov	w26, w27
   18b0c:	mov	x27, x24
   18b10:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   18b14:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18b18:	add	x1, x1, #0x8b8
   18b1c:	mov	x0, x22
   18b20:	bl	5420 <Perl_croak@plt>
   18b24:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18b28:	add	x3, x3, #0x330
   18b2c:	add	x3, x3, #0xc80
   18b30:	mov	w2, #0x2390                	// #9104
   18b34:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18b38:	add	x1, x1, #0xcb0
   18b3c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   18b40:	add	x0, x0, #0x8d8
   18b44:	bl	58e0 <__assert_fail@plt>
   18b48:	mov	x7, x19
   18b4c:	mov	x6, x19
   18b50:	mov	x5, x19
   18b54:	mov	x0, x19
   18b58:	str	x0, [sp]
   18b5c:	mov	x3, x19
   18b60:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18b64:	add	x1, x1, #0x8e8
   18b68:	mov	x0, x22
   18b6c:	bl	50e0 <Perl_re_printf@plt>
   18b70:	sub	w27, w27, #0x1
   18b74:	cmp	x28, x25
   18b78:	b.eq	18d14 <Perl_re_exec_indentf@@Base+0xcb44>  // b.none
   18b7c:	sub	x25, x25, #0x88
   18b80:	ldr	x0, [x22, #288]
   18b84:	cmp	x25, x0
   18b88:	b.cs	18b98 <Perl_re_exec_indentf@@Base+0xc9c8>  // b.hs, b.nlast
   18b8c:	ldr	x25, [x0, #3944]
   18b90:	str	x25, [x22, #288]
   18b94:	add	x25, x25, #0xee0
   18b98:	ldr	w0, [x22, #2368]
   18b9c:	tbnz	w0, #20, 18ba8 <Perl_re_exec_indentf@@Base+0xc9d8>
   18ba0:	ldr	x0, [sp, #464]
   18ba4:	tbz	w0, #19, 18b70 <Perl_re_exec_indentf@@Base+0xc9a0>
   18ba8:	ldr	w0, [sp, #172]
   18bac:	cbz	w0, 18c4c <Perl_re_exec_indentf@@Base+0xca7c>
   18bb0:	ldr	w0, [x22, #2368]
   18bb4:	tbnz	w0, #20, 18bc0 <Perl_re_exec_indentf@@Base+0xc9f0>
   18bb8:	ldr	x0, [sp, #464]
   18bbc:	tbz	w0, #19, 18b70 <Perl_re_exec_indentf@@Base+0xc9a0>
   18bc0:	mov	w7, w27
   18bc4:	ldrb	w6, [sp, #168]
   18bc8:	ldr	x5, [sp, #136]
   18bcc:	ldr	x4, [x24, #8]
   18bd0:	ldr	x3, [x24, #16]
   18bd4:	mov	x2, x26
   18bd8:	mov	x1, x23
   18bdc:	mov	x0, x22
   18be0:	bl	624c <Perl__inverse_folds@plt+0x84c>
   18be4:	smull	x2, w27, w21
   18be8:	asr	x2, x2, #35
   18bec:	sub	w2, w2, w27, asr #31
   18bf0:	add	w2, w2, w2, lsl #2
   18bf4:	sub	w2, w27, w2, lsl #2
   18bf8:	ldr	x0, [x20, #3776]
   18bfc:	ldrsw	x1, [x25]
   18c00:	ldr	x4, [x0, x1, lsl #3]
   18c04:	cmp	x28, x25
   18c08:	ldr	x0, [sp, #160]
   18c0c:	ccmp	x25, x0, #0x4, ne  // ne = any
   18c10:	b.ne	18b48 <Perl_re_exec_indentf@@Base+0xc978>  // b.any
   18c14:	mov	x6, x19
   18c18:	cmp	x28, x25
   18c1c:	b.ne	191cc <Perl_re_exec_indentf@@Base+0xcffc>  // b.any
   18c20:	ldr	x0, [sp, #160]
   18c24:	cmp	x25, x0
   18c28:	b.eq	191c4 <Perl_re_exec_indentf@@Base+0xcff4>  // b.none
   18c2c:	mov	x7, x19
   18c30:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   18c34:	add	x6, x6, #0xa18
   18c38:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   18c3c:	add	x5, x5, #0xa10
   18c40:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   18c44:	add	x0, x0, #0x538
   18c48:	b	18b58 <Perl_re_exec_indentf@@Base+0xc988>
   18c4c:	ldr	w0, [x22, #2368]
   18c50:	tbnz	w0, #20, 18c5c <Perl_re_exec_indentf@@Base+0xca8c>
   18c54:	ldr	x0, [sp, #464]
   18c58:	tbz	w0, #19, 18b70 <Perl_re_exec_indentf@@Base+0xc9a0>
   18c5c:	mov	w7, w27
   18c60:	ldrb	w6, [sp, #168]
   18c64:	ldr	x5, [sp, #136]
   18c68:	ldr	x4, [x24, #8]
   18c6c:	ldr	x3, [x24, #16]
   18c70:	mov	x2, x26
   18c74:	mov	x1, x23
   18c78:	mov	x0, x22
   18c7c:	bl	624c <Perl__inverse_folds@plt+0x84c>
   18c80:	smull	x2, w27, w21
   18c84:	asr	x2, x2, #35
   18c88:	sub	w2, w2, w27, asr #31
   18c8c:	add	w2, w2, w2, lsl #2
   18c90:	sub	w2, w27, w2, lsl #2
   18c94:	ldrsw	x0, [x25]
   18c98:	ldr	x1, [sp, #192]
   18c9c:	ldr	x4, [x1, x0, lsl #3]
   18ca0:	cmp	x28, x25
   18ca4:	ldr	x0, [sp, #160]
   18ca8:	ccmp	x25, x0, #0x4, ne  // ne = any
   18cac:	b.ne	18ce8 <Perl_re_exec_indentf@@Base+0xcb18>  // b.any
   18cb0:	mov	x6, x19
   18cb4:	cmp	x28, x25
   18cb8:	b.ne	191f0 <Perl_re_exec_indentf@@Base+0xd020>  // b.any
   18cbc:	ldr	x0, [sp, #160]
   18cc0:	cmp	x25, x0
   18cc4:	b.eq	191e8 <Perl_re_exec_indentf@@Base+0xd018>  // b.none
   18cc8:	mov	x7, x19
   18ccc:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   18cd0:	add	x6, x6, #0xa18
   18cd4:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   18cd8:	add	x5, x5, #0xa10
   18cdc:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   18ce0:	add	x0, x0, #0x538
   18ce4:	b	18cf8 <Perl_re_exec_indentf@@Base+0xcb28>
   18ce8:	mov	x7, x19
   18cec:	mov	x6, x19
   18cf0:	mov	x5, x19
   18cf4:	mov	x0, x19
   18cf8:	str	x0, [sp]
   18cfc:	mov	x3, x19
   18d00:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18d04:	add	x1, x1, #0x908
   18d08:	mov	x0, x22
   18d0c:	bl	50e0 <Perl_re_printf@plt>
   18d10:	b	18b70 <Perl_re_exec_indentf@@Base+0xc9a0>
   18d14:	ldr	x0, [x28, #32]
   18d18:	str	x28, [x22, #296]
   18d1c:	ldr	w1, [sp, #172]
   18d20:	cbz	w1, 18d38 <Perl_re_exec_indentf@@Base+0xcb68>
   18d24:	ldr	x23, [x28, #8]
   18d28:	ldr	x1, [x28, #16]
   18d2c:	str	x1, [sp, #128]
   18d30:	ldr	x1, [x28, #24]
   18d34:	str	x1, [sp, #184]
   18d38:	ldr	w19, [x28]
   18d3c:	ldr	w1, [sp, #172]
   18d40:	add	w19, w1, w19
   18d44:	mov	x25, x28
   18d48:	mov	x28, x0
   18d4c:	b	18a14 <Perl_re_exec_indentf@@Base+0xc844>
   18d50:	mov	x28, x23
   18d54:	mov	x27, x22
   18d58:	mov	x26, x24
   18d5c:	ldr	w0, [x22, #2368]
   18d60:	tbnz	w0, #20, 18d70 <Perl_re_exec_indentf@@Base+0xcba0>
   18d64:	ldr	x0, [sp, #464]
   18d68:	tst	x0, #0xff00
   18d6c:	b.eq	18d88 <Perl_re_exec_indentf@@Base+0xcbb8>  // b.none
   18d70:	ldr	x3, [x27, #1488]
   18d74:	ldr	x2, [x27, #1480]
   18d78:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18d7c:	add	x1, x1, #0x928
   18d80:	mov	x0, x27
   18d84:	bl	50e0 <Perl_re_printf@plt>
   18d88:	ldr	x0, [x26, #64]
   18d8c:	cbz	x0, 18de0 <Perl_re_exec_indentf@@Base+0xcc10>
   18d90:	ldr	x2, [x27, #1736]
   18d94:	ldr	w0, [x2, #12]
   18d98:	and	w1, w0, #0xff
   18d9c:	sub	w1, w1, #0x9
   18da0:	cmp	w1, #0x1
   18da4:	b.hi	18e44 <Perl_re_exec_indentf@@Base+0xcc74>  // b.pmore
   18da8:	and	w0, w0, #0xc000
   18dac:	cmp	w0, #0x8, lsl #12
   18db0:	b.ne	18e68 <Perl_re_exec_indentf@@Base+0xcc98>  // b.any
   18db4:	ldr	x0, [x2, #16]
   18db8:	ldr	x2, [x0]
   18dbc:	ldr	x19, [sp, #360]
   18dc0:	cmp	x19, x2
   18dc4:	b.eq	18de0 <Perl_re_exec_indentf@@Base+0xcc10>  // b.none
   18dc8:	mov	w3, #0x2                   	// #2
   18dcc:	mov	x1, x19
   18dd0:	mov	x0, x27
   18dd4:	bl	55b0 <Perl_sv_setsv_flags@plt>
   18dd8:	ldr	w0, [x19, #12]
   18ddc:	tbnz	w0, #22, 18e8c <Perl_re_exec_indentf@@Base+0xccbc>
   18de0:	ldr	x0, [sp, #152]
   18de4:	ldr	w0, [x0, #100]
   18de8:	mov	w19, #0x1                   	// #1
   18dec:	tbz	w0, #3, 192fc <Perl_re_exec_indentf@@Base+0xd12c>
   18df0:	mov	w2, #0x1                   	// #1
   18df4:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18df8:	add	x1, x1, #0xa58
   18dfc:	mov	x0, x27
   18e00:	bl	54f0 <Perl_get_sv@plt>
   18e04:	mov	x20, x0
   18e08:	mov	w2, #0x1                   	// #1
   18e0c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18e10:	add	x1, x1, #0x158
   18e14:	mov	x0, x27
   18e18:	bl	54f0 <Perl_get_sv@plt>
   18e1c:	mov	x21, x0
   18e20:	add	x0, x27, #0x168
   18e24:	str	x0, [sp, #328]
   18e28:	ldr	x0, [sp, #304]
   18e2c:	mov	w19, #0x1                   	// #1
   18e30:	cbnz	x0, 192ac <Perl_re_exec_indentf@@Base+0xd0dc>
   18e34:	add	x0, x27, #0x138
   18e38:	str	x0, [sp, #304]
   18e3c:	mov	w19, #0x1                   	// #1
   18e40:	b	192ac <Perl_re_exec_indentf@@Base+0xd0dc>
   18e44:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18e48:	add	x3, x3, #0x330
   18e4c:	add	x3, x3, #0xc80
   18e50:	mov	w2, #0x23c6                	// #9158
   18e54:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18e58:	add	x1, x1, #0xcb0
   18e5c:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   18e60:	add	x0, x0, #0xa48
   18e64:	bl	58e0 <__assert_fail@plt>
   18e68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18e6c:	add	x3, x3, #0x330
   18e70:	add	x3, x3, #0xc80
   18e74:	mov	w2, #0x23c6                	// #9158
   18e78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18e7c:	add	x1, x1, #0xcb0
   18e80:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   18e84:	add	x0, x0, #0xa80
   18e88:	bl	58e0 <__assert_fail@plt>
   18e8c:	ldr	x1, [sp, #360]
   18e90:	mov	x0, x27
   18e94:	bl	5590 <Perl_mg_set@plt>
   18e98:	b	18de0 <Perl_re_exec_indentf@@Base+0xcc10>
   18e9c:	mov	w0, #0x1                   	// #1
   18ea0:	str	w0, [sp, #172]
   18ea4:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18ea8:	mov	w0, #0x1                   	// #1
   18eac:	str	w0, [sp, #376]
   18eb0:	str	w0, [sp, #172]
   18eb4:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18eb8:	mov	w0, #0x1                   	// #1
   18ebc:	str	w0, [sp, #172]
   18ec0:	b	12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   18ec4:	cbz	x28, 18ef4 <Perl_re_exec_indentf@@Base+0xcd24>
   18ec8:	cbz	x28, 18d50 <Perl_re_exec_indentf@@Base+0xcb80>
   18ecc:	cmp	x25, x28
   18ed0:	b.eq	18b24 <Perl_re_exec_indentf@@Base+0xc954>  // b.none
   18ed4:	mov	w21, #0x6667                	// #26215
   18ed8:	movk	w21, #0x6666, lsl #16
   18edc:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   18ee0:	ldr	x0, [x20, #3776]
   18ee4:	str	x0, [sp, #192]
   18ee8:	adrp	x19, 7d000 <boot_re@@Base+0x1b41c>
   18eec:	add	x19, x19, #0x20
   18ef0:	b	18b7c <Perl_re_exec_indentf@@Base+0xc9ac>
   18ef4:	mov	x28, x23
   18ef8:	mov	x27, x22
   18efc:	mov	x26, x24
   18f00:	b	192ec <Perl_re_exec_indentf@@Base+0xd11c>
   18f04:	adrp	x7, 7d000 <boot_re@@Base+0x1b41c>
   18f08:	add	x7, x7, #0x20
   18f0c:	mov	x6, x7
   18f10:	mov	x5, x7
   18f14:	mov	x0, x7
   18f18:	str	x0, [sp]
   18f1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   18f20:	add	x3, x3, #0x20
   18f24:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   18f28:	add	x1, x1, #0x950
   18f2c:	mov	x0, x22
   18f30:	bl	50e0 <Perl_re_printf@plt>
   18f34:	sub	w27, w27, #0x1
   18f38:	cmp	x28, x25
   18f3c:	b.eq	18f60 <Perl_re_exec_indentf@@Base+0xcd90>  // b.none
   18f40:	ldr	w19, [x25]
   18f44:	add	w19, w19, #0x1
   18f48:	ldr	w0, [x22, #1684]
   18f4c:	cbz	w0, 18a14 <Perl_re_exec_indentf@@Base+0xc844>
   18f50:	ldr	x1, [x22, #2896]
   18f54:	mov	x0, x22
   18f58:	blr	x1
   18f5c:	b	18a14 <Perl_re_exec_indentf@@Base+0xc844>
   18f60:	ldr	x28, [x25, #32]
   18f64:	b	18f40 <Perl_re_exec_indentf@@Base+0xcd70>
   18f68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18f6c:	add	x3, x3, #0x330
   18f70:	add	x3, x3, #0xc80
   18f74:	mov	w2, #0x2401                	// #9217
   18f78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18f7c:	add	x1, x1, #0xcb0
   18f80:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   18f84:	add	x0, x0, #0x968
   18f88:	bl	58e0 <__assert_fail@plt>
   18f8c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18f90:	add	x3, x3, #0x330
   18f94:	add	x3, x3, #0xc80
   18f98:	mov	w2, #0x2402                	// #9218
   18f9c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18fa0:	add	x1, x1, #0xcb0
   18fa4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   18fa8:	add	x0, x0, #0x970
   18fac:	bl	58e0 <__assert_fail@plt>
   18fb0:	mov	x0, x27
   18fb4:	bl	5660 <Perl_leave_scope@plt>
   18fb8:	b	1932c <Perl_re_exec_indentf@@Base+0xd15c>
   18fbc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18fc0:	add	x3, x3, #0x330
   18fc4:	add	x3, x3, #0xca0
   18fc8:	mov	w2, #0x811                 	// #2065
   18fcc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18fd0:	add	x1, x1, #0xc80
   18fd4:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   18fd8:	add	x0, x0, #0xf50
   18fdc:	bl	58e0 <__assert_fail@plt>
   18fe0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   18fe4:	add	x3, x3, #0x330
   18fe8:	add	x3, x3, #0xc90
   18fec:	mov	w2, #0x40                  	// #64
   18ff0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   18ff4:	add	x1, x1, #0xc80
   18ff8:	adrp	x0, 67000 <boot_re@@Base+0x541c>
   18ffc:	add	x0, x0, #0xe88
   19000:	bl	58e0 <__assert_fail@plt>
   19004:	mov	x0, x27
   19008:	bl	5860 <Perl_sv_free2@plt>
   1900c:	b	19388 <Perl_re_exec_indentf@@Base+0xd1b8>
   19010:	ldrsw	x6, [x20, #40]
   19014:	ldrb	w1, [x22, x21]
   19018:	and	x1, x1, #0xf
   1901c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19020:	ldr	x0, [x0, #3728]
   19024:	ldr	x4, [x0, x1, lsl #3]
   19028:	ldr	x0, [x27, #240]
   1902c:	ldrsw	x2, [x0, #32]
   19030:	mov	w0, #0x7d4                 	// #2004
   19034:	str	w0, [sp, #16]
   19038:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1903c:	add	x0, x0, #0xc80
   19040:	str	x0, [sp, #8]
   19044:	ldrsw	x0, [x20, #4]
   19048:	str	x0, [sp]
   1904c:	ldrsw	x7, [x27, #48]
   19050:	ldrsw	x5, [x27, #64]
   19054:	adrp	x3, 68000 <boot_re@@Base+0x641c>
   19058:	add	x3, x3, #0x978
   1905c:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   19060:	add	x1, x1, #0xff0
   19064:	mov	x0, x27
   19068:	bl	4f70 <Perl_deb@plt>
   1906c:	b	19390 <Perl_re_exec_indentf@@Base+0xd1c0>
   19070:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19074:	add	x3, x3, #0x330
   19078:	add	x3, x3, #0xce0
   1907c:	mov	w2, #0x7dd                 	// #2013
   19080:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   19084:	add	x1, x1, #0xc80
   19088:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1908c:	add	x0, x0, #0x980
   19090:	bl	58e0 <__assert_fail@plt>
   19094:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19098:	add	x3, x3, #0x330
   1909c:	add	x3, x3, #0xc80
   190a0:	mov	w2, #0x240b                	// #9227
   190a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   190a8:	add	x1, x1, #0xcb0
   190ac:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   190b0:	add	x0, x0, #0x9d8
   190b4:	bl	58e0 <__assert_fail@plt>
   190b8:	mov	w2, #0xffffffff            	// #-1
   190bc:	add	w2, w2, #0x1
   190c0:	ldr	x0, [x0, #16]
   190c4:	cbnz	x0, 190bc <Perl_re_exec_indentf@@Base+0xceec>
   190c8:	mov	w4, #0x240b                	// #9227
   190cc:	adrp	x3, 61000 <my_regfree@@Base+0x250>
   190d0:	add	x3, x3, #0xcb0
   190d4:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   190d8:	add	x1, x1, #0x9e8
   190dc:	mov	x0, x27
   190e0:	bl	4f70 <Perl_deb@plt>
   190e4:	b	1941c <Perl_re_exec_indentf@@Base+0xd24c>
   190e8:	bl	5960 <Perl_croak_popstack@plt>
   190ec:	ldr	x4, [x27, #760]
   190f0:	mov	w6, #0x240b                	// #9227
   190f4:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   190f8:	add	x5, x5, #0xcb0
   190fc:	ldr	w3, [sp, #412]
   19100:	ldrb	w2, [x4, #324]
   19104:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   19108:	add	x1, x1, #0xf90
   1910c:	mov	x0, x27
   19110:	bl	4f70 <Perl_deb@plt>
   19114:	b	19480 <Perl_re_exec_indentf@@Base+0xd2b0>
   19118:	ldr	w0, [x27, #48]
   1911c:	ldr	w1, [sp, #408]
   19120:	cmp	w1, w0
   19124:	b.ge	1948c <Perl_re_exec_indentf@@Base+0xd2bc>  // b.tcont
   19128:	ldr	w1, [sp, #408]
   1912c:	mov	x0, x27
   19130:	bl	5660 <Perl_leave_scope@plt>
   19134:	b	1948c <Perl_re_exec_indentf@@Base+0xd2bc>
   19138:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1913c:	add	x3, x3, #0x330
   19140:	add	x3, x3, #0xc80
   19144:	mov	w2, #0x2411                	// #9233
   19148:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1914c:	add	x1, x1, #0xcb0
   19150:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   19154:	add	x0, x0, #0xa08
   19158:	bl	58e0 <__assert_fail@plt>
   1915c:	sxtw	x4, w4
   19160:	sxtw	x3, w0
   19164:	mov	w2, #0x0                   	// #0
   19168:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   1916c:	add	x1, x1, #0xc30
   19170:	mov	x0, x27
   19174:	bl	5290 <Perl_re_exec_indentf@plt>
   19178:	b	1923c <Perl_re_exec_indentf@@Base+0xd06c>
   1917c:	adrp	x6, 68000 <boot_re@@Base+0x641c>
   19180:	add	x6, x6, #0xa38
   19184:	mov	w2, w26
   19188:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   1918c:	add	x1, x1, #0xa40
   19190:	mov	x0, x22
   19194:	bl	5290 <Perl_re_exec_indentf@plt>
   19198:	ldr	x23, [x19, #32]
   1919c:	b	1894c <Perl_re_exec_indentf@@Base+0xc77c>
   191a0:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   191a4:	add	x6, x6, #0xa18
   191a8:	adrp	x7, 64000 <boot_re@@Base+0x241c>
   191ac:	add	x7, x7, #0xa08
   191b0:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   191b4:	add	x5, x5, #0xa10
   191b8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   191bc:	add	x0, x0, #0x538
   191c0:	b	18988 <Perl_re_exec_indentf@@Base+0xc7b8>
   191c4:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   191c8:	add	x6, x6, #0xa18
   191cc:	adrp	x7, 64000 <boot_re@@Base+0x241c>
   191d0:	add	x7, x7, #0xa08
   191d4:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   191d8:	add	x5, x5, #0xa10
   191dc:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   191e0:	add	x0, x0, #0x538
   191e4:	b	18b58 <Perl_re_exec_indentf@@Base+0xc988>
   191e8:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   191ec:	add	x6, x6, #0xa18
   191f0:	adrp	x7, 64000 <boot_re@@Base+0x241c>
   191f4:	add	x7, x7, #0xa08
   191f8:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   191fc:	add	x5, x5, #0xa10
   19200:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   19204:	add	x0, x0, #0x538
   19208:	b	18cf8 <Perl_re_exec_indentf@@Base+0xcb28>
   1920c:	ldr	x0, [x26, #48]
   19210:	cbz	x0, 1921c <Perl_re_exec_indentf@@Base+0xd04c>
   19214:	ldr	x1, [sp, #296]
   19218:	str	x0, [x1]
   1921c:	ldr	w0, [x27, #2368]
   19220:	tbnz	w0, #20, 1922c <Perl_re_exec_indentf@@Base+0xd05c>
   19224:	ldr	x0, [sp, #456]
   19228:	tbz	w0, #19, 1923c <Perl_re_exec_indentf@@Base+0xd06c>
   1922c:	ldr	w4, [x27, #48]
   19230:	ldr	w0, [sp, #432]
   19234:	cmp	w4, w0
   19238:	b.ne	1915c <Perl_re_exec_indentf@@Base+0xcf8c>  // b.any
   1923c:	ldr	w0, [x27, #48]
   19240:	ldr	w1, [sp, #432]
   19244:	cmp	w0, w1
   19248:	b.le	194a8 <Perl_re_exec_indentf@@Base+0xd2d8>
   1924c:	ldr	w1, [sp, #432]
   19250:	mov	x0, x27
   19254:	bl	5660 <Perl_leave_scope@plt>
   19258:	b	194a8 <Perl_re_exec_indentf@@Base+0xd2d8>
   1925c:	mov	w2, #0x1                   	// #1
   19260:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   19264:	add	x1, x1, #0xa58
   19268:	mov	x0, x27
   1926c:	bl	54f0 <Perl_get_sv@plt>
   19270:	mov	x20, x0
   19274:	mov	w2, #0x1                   	// #1
   19278:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   1927c:	add	x1, x1, #0x158
   19280:	mov	x0, x27
   19284:	bl	54f0 <Perl_get_sv@plt>
   19288:	mov	x21, x0
   1928c:	add	x0, x27, #0x138
   19290:	ldr	x1, [sp, #328]
   19294:	cmp	x1, #0x0
   19298:	csel	x0, x0, x1, eq  // eq = none
   1929c:	str	x0, [sp, #328]
   192a0:	add	x0, x27, #0x168
   192a4:	str	x0, [sp, #304]
   192a8:	mov	w19, #0x0                   	// #0
   192ac:	cbz	x20, 18f68 <Perl_re_exec_indentf@@Base+0xcd98>
   192b0:	cbz	x21, 18f8c <Perl_re_exec_indentf@@Base+0xcdbc>
   192b4:	mov	w3, #0x2                   	// #2
   192b8:	ldr	x2, [sp, #328]
   192bc:	mov	x1, x20
   192c0:	mov	x0, x27
   192c4:	bl	55b0 <Perl_sv_setsv_flags@plt>
   192c8:	mov	w3, #0x2                   	// #2
   192cc:	ldr	x2, [sp, #304]
   192d0:	mov	x1, x21
   192d4:	mov	x0, x27
   192d8:	bl	55b0 <Perl_sv_setsv_flags@plt>
   192dc:	b	192fc <Perl_re_exec_indentf@@Base+0xd12c>
   192e0:	mov	x28, x23
   192e4:	mov	x27, x22
   192e8:	mov	x26, x24
   192ec:	ldr	x0, [sp, #152]
   192f0:	ldr	w0, [x0, #100]
   192f4:	mov	w19, #0x0                   	// #0
   192f8:	tbnz	w0, #3, 1925c <Perl_re_exec_indentf@@Base+0xd08c>
   192fc:	ldr	x0, [sp, #336]
   19300:	cbz	x0, 19118 <Perl_re_exec_indentf@@Base+0xcf48>
   19304:	ldr	x0, [x27, #240]
   19308:	ldrsw	x21, [x0, #32]
   1930c:	add	x21, x21, x21, lsl #1
   19310:	lsl	x21, x21, #5
   19314:	ldr	x22, [x0, #8]
   19318:	add	x20, x22, x21
   1931c:	ldr	w1, [x20, #4]
   19320:	ldr	w0, [x27, #48]
   19324:	cmp	w0, w1
   19328:	b.gt	18fb0 <Perl_re_exec_indentf@@Base+0xcde0>
   1932c:	ldrb	w0, [x22, x21]
   19330:	and	w0, w0, #0xf
   19334:	cmp	w0, #0x9
   19338:	b.ne	18fbc <Perl_re_exec_indentf@@Base+0xcdec>  // b.any
   1933c:	ldr	x0, [x20, #56]
   19340:	str	x0, [x27, #304]
   19344:	cbz	x0, 1934c <Perl_re_exec_indentf@@Base+0xd17c>
   19348:	ldr	x0, [x0, #16]
   1934c:	str	x0, [x27, #16]
   19350:	ldr	x1, [x20, #64]
   19354:	ldrb	w0, [x1, #12]
   19358:	sub	w0, w0, #0xd
   1935c:	cmp	w0, #0x1
   19360:	b.hi	18fe0 <Perl_re_exec_indentf@@Base+0xce10>  // b.pmore
   19364:	ldr	x0, [x1]
   19368:	ldr	w2, [x20, #72]
   1936c:	str	w2, [x0, #96]
   19370:	str	xzr, [x20, #64]
   19374:	ldr	w2, [x1, #8]
   19378:	cmp	w2, #0x1
   1937c:	b.ls	19004 <Perl_re_exec_indentf@@Base+0xce34>  // b.plast
   19380:	sub	w2, w2, #0x1
   19384:	str	w2, [x1, #8]
   19388:	ldr	w0, [x27, #2368]
   1938c:	tbnz	w0, #2, 19010 <Perl_re_exec_indentf@@Base+0xce40>
   19390:	ldrsw	x0, [x20, #12]
   19394:	ldr	x1, [x27, #112]
   19398:	add	x0, x1, x0, lsl #2
   1939c:	str	x0, [x27, #120]
   193a0:	ldr	w0, [x20, #40]
   193a4:	str	w0, [x27, #64]
   193a8:	ldr	x0, [x20, #24]
   193ac:	str	x0, [x27, #168]
   193b0:	ldrb	w0, [x22, x21]
   193b4:	and	w0, w0, #0x1f
   193b8:	cmp	w0, #0x19
   193bc:	b.eq	193d0 <Perl_re_exec_indentf@@Base+0xd200>  // b.none
   193c0:	ldr	w1, [x27, #48]
   193c4:	ldr	w0, [x20, #4]
   193c8:	cmp	w1, w0
   193cc:	b.ne	19070 <Perl_re_exec_indentf@@Base+0xcea0>  // b.any
   193d0:	ldr	x0, [x20, #16]
   193d4:	str	x0, [x27, #224]
   193d8:	ldr	x0, [x20, #32]
   193dc:	str	x0, [x27, #88]
   193e0:	ldr	x2, [x27, #240]
   193e4:	ldr	w0, [x2, #32]
   193e8:	sbfiz	x1, x0, #1, #32
   193ec:	add	x1, x1, w0, sxtw
   193f0:	ldr	x3, [x2, #8]
   193f4:	add	x1, x3, x1, lsl #5
   193f8:	cmp	x20, x1
   193fc:	b.ne	19094 <Perl_re_exec_indentf@@Base+0xcec4>  // b.any
   19400:	sub	w0, w0, #0x1
   19404:	str	w0, [x2, #32]
   19408:	ldr	x21, [x27]
   1940c:	ldr	x0, [x27, #240]
   19410:	ldr	x20, [x0, #16]
   19414:	ldr	w1, [x27, #2368]
   19418:	tbnz	w1, #2, 190b8 <Perl_re_exec_indentf@@Base+0xcee8>
   1941c:	cbz	x20, 190e8 <Perl_re_exec_indentf@@Base+0xcf18>
   19420:	ldr	x0, [x27, #232]
   19424:	ldr	x0, [x0]
   19428:	ldr	x1, [x27, #24]
   1942c:	sub	x21, x21, x1
   19430:	asr	x21, x21, #3
   19434:	str	x21, [x0, #16]
   19438:	ldr	x0, [x20]
   1943c:	ldr	x1, [x0, #16]
   19440:	str	x1, [x27, #24]
   19444:	ldr	x0, [x20]
   19448:	ldr	x0, [x0]
   1944c:	ldr	x0, [x0, #24]
   19450:	add	x0, x1, x0, lsl #3
   19454:	str	x0, [x27, #32]
   19458:	ldr	x0, [x20]
   1945c:	ldr	x0, [x0]
   19460:	ldr	x0, [x0, #16]
   19464:	add	x0, x1, x0, lsl #3
   19468:	str	x0, [x27]
   1946c:	ldr	x0, [x20]
   19470:	str	x0, [x27, #232]
   19474:	str	x20, [x27, #240]
   19478:	ldr	w0, [x27, #2368]
   1947c:	tbnz	w0, #2, 190ec <Perl_re_exec_indentf@@Base+0xcf1c>
   19480:	ldr	x0, [x27, #760]
   19484:	ldrb	w1, [sp, #412]
   19488:	strb	w1, [x0, #324]
   1948c:	cbz	w19, 1920c <Perl_re_exec_indentf@@Base+0xd03c>
   19490:	ldr	x0, [x26, #8]
   19494:	subs	x0, x28, x0
   19498:	b.mi	19138 <Perl_re_exec_indentf@@Base+0xcf68>  // b.first
   1949c:	ldr	x1, [sp, #288]
   194a0:	ldr	x1, [x1, #120]
   194a4:	str	x0, [x1, #8]
   194a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   194ac:	ldr	x0, [x0, #3920]
   194b0:	ldr	x1, [sp, #520]
   194b4:	ldr	x0, [x0]
   194b8:	eor	x0, x1, x0
   194bc:	cbnz	x0, 19a64 <Perl_re_exec_indentf@@Base+0xd894>
   194c0:	mov	w0, w19
   194c4:	ldp	x19, x20, [sp, #48]
   194c8:	ldp	x21, x22, [sp, #64]
   194cc:	ldp	x23, x24, [sp, #80]
   194d0:	ldp	x25, x26, [sp, #96]
   194d4:	ldp	x27, x28, [sp, #112]
   194d8:	ldp	x29, x30, [sp, #32]
   194dc:	add	sp, sp, #0x210
   194e0:	ret
   194e4:	adrp	x6, 64000 <boot_re@@Base+0x241c>
   194e8:	add	x6, x6, #0xa18
   194ec:	adrp	x7, 64000 <boot_re@@Base+0x241c>
   194f0:	add	x7, x7, #0xa08
   194f4:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   194f8:	add	x5, x5, #0xa10
   194fc:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   19500:	add	x0, x0, #0x538
   19504:	b	18f18 <Perl_re_exec_indentf@@Base+0xcd48>
   19508:	mov	w19, #0x1                   	// #1
   1950c:	ldr	x1, [x24, #8]
   19510:	cmp	x21, x1
   19514:	b.ls	18ac8 <Perl_re_exec_indentf@@Base+0xc8f8>  // b.plast
   19518:	mov	w21, #0x1                   	// #1
   1951c:	b	10eec <Perl_re_exec_indentf@@Base+0x4d1c>
   19520:	mov	w19, #0x0                   	// #0
   19524:	mov	w20, #0xfffffff6            	// #-10
   19528:	b	1950c <Perl_re_exec_indentf@@Base+0xd33c>
   1952c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19530:	ldr	x0, [x0, #3880]
   19534:	ldr	w0, [x0, #40]
   19538:	and	w0, w0, #0x1
   1953c:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   19540:	bl	54d0 <__ctype_b_loc@plt>
   19544:	ldr	x0, [x0]
   19548:	ldrh	w0, [x0, #20]
   1954c:	ubfx	x0, x0, #3, #1
   19550:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   19554:	mov	x0, x26
   19558:	ldrb	w19, [x0], #4
   1955c:	add	x3, x0, w19, uxtb
   19560:	ldr	w1, [sp, #256]
   19564:	cbnz	w1, 10994 <Perl_re_exec_indentf@@Base+0x47c4>
   19568:	and	x1, x19, #0xff
   1956c:	b	19574 <Perl_re_exec_indentf@@Base+0xd3a4>
   19570:	and	x1, x19, #0xff
   19574:	ldr	x2, [sp, #128]
   19578:	sub	x2, x2, x23
   1957c:	cmp	x2, x1
   19580:	b.lt	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.tstop
   19584:	ldrb	w2, [x26, #4]
   19588:	cmp	w2, w20
   1958c:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   19590:	cmp	x1, #0x1
   19594:	b.le	195a8 <Perl_re_exec_indentf@@Base+0xd3d8>
   19598:	and	x2, x19, #0xff
   1959c:	mov	x1, x23
   195a0:	bl	5460 <memcmp@plt>
   195a4:	cbnz	w0, 12d20 <Perl_re_exec_indentf@@Base+0x6b50>
   195a8:	mov	w26, w27
   195ac:	mov	x27, x24
   195b0:	add	x23, x23, w19, uxtb
   195b4:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   195b8:	ldr	x20, [x22, #1480]
   195bc:	ldrh	w21, [x25, #92]
   195c0:	adrp	x5, 64000 <boot_re@@Base+0x241c>
   195c4:	add	x5, x5, #0x9e0
   195c8:	b	106e0 <Perl_re_exec_indentf@@Base+0x4510>
   195cc:	ldr	w0, [sp, #192]
   195d0:	add	w0, w0, #0x1
   195d4:	str	w0, [sp, #192]
   195d8:	ldr	x0, [sp, #480]
   195dc:	cbnz	x0, fefc <Perl_re_exec_indentf@@Base+0x3d2c>
   195e0:	mov	w2, #0x0                   	// #0
   195e4:	mov	w21, #0x0                   	// #0
   195e8:	b	ff10 <Perl_re_exec_indentf@@Base+0x3d40>
   195ec:	ldr	w7, [sp, #216]
   195f0:	ldrb	w6, [sp, #168]
   195f4:	ldr	x5, [sp, #136]
   195f8:	ldr	x4, [x24, #8]
   195fc:	ldr	x3, [x24, #16]
   19600:	ldr	x2, [sp, #224]
   19604:	mov	x1, x20
   19608:	mov	x0, x22
   1960c:	bl	624c <Perl__inverse_folds@plt+0x84c>
   19610:	mov	x0, x22
   19614:	bl	58f0 <Perl_PerlIO_stderr@plt>
   19618:	ldr	x4, [x22, #1480]
   1961c:	mov	w23, #0x1                   	// #1
   19620:	mov	w6, #0x59                  	// #89
   19624:	b	f578 <Perl_re_exec_indentf@@Base+0x33a8>
   19628:	ldr	w1, [x25, #64]
   1962c:	ldr	w2, [x22, #48]
   19630:	cmp	w1, w2
   19634:	b.ge	14f50 <Perl_re_exec_indentf@@Base+0x8d80>  // b.tcont
   19638:	mov	x0, x22
   1963c:	bl	5660 <Perl_leave_scope@plt>
   19640:	b	14f2c <Perl_re_exec_indentf@@Base+0x8d5c>
   19644:	mov	w26, w27
   19648:	mov	x27, x24
   1964c:	ldr	w0, [x25, #40]
   19650:	cmp	w0, #0x0
   19654:	cset	w0, eq  // eq = none
   19658:	str	w0, [sp, #320]
   1965c:	b	18330 <Perl_re_exec_indentf@@Base+0xc160>
   19660:	mov	w0, #0x1                   	// #1
   19664:	str	w0, [sp, #200]
   19668:	str	xzr, [sp, #192]
   1966c:	str	xzr, [sp, #216]
   19670:	mov	x19, #0x0                   	// #0
   19674:	mov	w21, #0x3c                  	// #60
   19678:	b	12d10 <Perl_re_exec_indentf@@Base+0x6b40>
   1967c:	str	wzr, [sp, #200]
   19680:	mov	w20, #0xfffffff6            	// #-10
   19684:	b	19668 <Perl_re_exec_indentf@@Base+0xd498>
   19688:	mov	w0, #0x1                   	// #1
   1968c:	str	w0, [sp, #200]
   19690:	str	xzr, [sp, #192]
   19694:	str	xzr, [sp, #216]
   19698:	mov	x19, #0x0                   	// #0
   1969c:	b	12f58 <Perl_re_exec_indentf@@Base+0x6d88>
   196a0:	str	wzr, [sp, #200]
   196a4:	mov	w20, #0xfffffff6            	// #-10
   196a8:	b	19690 <Perl_re_exec_indentf@@Base+0xd4c0>
   196ac:	mov	w20, #0xfffffff6            	// #-10
   196b0:	mov	w19, #0x0                   	// #0
   196b4:	cmp	w20, #0x0
   196b8:	ldr	x0, [sp, #128]
   196bc:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   196c0:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   196c4:	cmp	w20, #0x7f
   196c8:	cset	w0, ls  // ls = plast
   196cc:	ldr	w1, [sp, #168]
   196d0:	eor	w1, w1, #0x1
   196d4:	orr	w0, w0, w1
   196d8:	cbz	w0, 124c0 <Perl_re_exec_indentf@@Base+0x62f0>
   196dc:	and	x0, x20, #0xff
   196e0:	ldrb	w2, [x26]
   196e4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   196e8:	ldr	x1, [x1, #3880]
   196ec:	ldr	w0, [x1, x0, lsl #2]
   196f0:	lsr	w0, w0, w2
   196f4:	and	w0, w0, #0x1
   196f8:	cmp	w19, w0
   196fc:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   19700:	mov	w26, w27
   19704:	mov	x27, x24
   19708:	add	x23, x23, #0x1
   1970c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   19710:	mov	w21, #0x1                   	// #1
   19714:	mov	w19, #0x0                   	// #0
   19718:	ldr	x0, [x22, #1440]
   1971c:	cbnz	x0, 122f0 <Perl_re_exec_indentf@@Base+0x6120>
   19720:	cmp	w20, #0x0
   19724:	ldr	x0, [sp, #128]
   19728:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   1972c:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   19730:	cmp	w20, #0x7f
   19734:	cset	w0, ls  // ls = plast
   19738:	ldr	w1, [sp, #168]
   1973c:	eor	w1, w1, #0x1
   19740:	orr	w0, w0, w1
   19744:	cbnz	w0, 122f8 <Perl_re_exec_indentf@@Base+0x6128>
   19748:	ldrb	w0, [x23]
   1974c:	and	w0, w0, #0xfe
   19750:	cmp	w0, #0xc2
   19754:	b.eq	12320 <Perl_re_exec_indentf@@Base+0x6150>  // b.none
   19758:	ldrb	w0, [x22, #1180]
   1975c:	cbnz	w0, 124d0 <Perl_re_exec_indentf@@Base+0x6300>
   19760:	mov	w1, #0x3f                  	// #63
   19764:	mov	x0, x22
   19768:	bl	5870 <Perl_ckwarn@plt>
   1976c:	and	w0, w0, #0xff
   19770:	cbz	w0, 124d0 <Perl_re_exec_indentf@@Base+0x6300>
   19774:	ldr	x21, [x24, #16]
   19778:	cmp	x23, x21
   1977c:	b.cs	1237c <Perl_re_exec_indentf@@Base+0x61ac>  // b.hs, b.nlast
   19780:	mov	w1, #0x2c                  	// #44
   19784:	mov	x0, x22
   19788:	bl	52a0 <Perl_ckwarn_d@plt>
   1978c:	ands	w0, w0, #0xff
   19790:	mov	w0, #0x9e                  	// #158
   19794:	csel	w3, w0, wzr, eq  // eq = none
   19798:	mov	x5, x23
   1979c:	mov	x20, #0x0                   	// #0
   197a0:	mov	x0, #0x0                   	// #0
   197a4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   197a8:	ldr	x8, [x1, #3824]
   197ac:	mov	w7, #0xff                  	// #255
   197b0:	mov	x4, x8
   197b4:	ldrb	w2, [x5]
   197b8:	ldrb	w1, [x8, w2, sxtw]
   197bc:	and	x6, x1, #0xff
   197c0:	asr	w1, w7, w1
   197c4:	and	w1, w1, w2
   197c8:	sxtw	x1, w1
   197cc:	bfi	x2, x20, #6, #58
   197d0:	cmp	x0, #0x0
   197d4:	csel	x20, x2, x1, ne  // ne = any
   197d8:	add	x0, x4, x0
   197dc:	add	x0, x0, x6
   197e0:	ldrb	w0, [x0, #256]
   197e4:	cbnz	x0, 123a0 <Perl_re_exec_indentf@@Base+0x61d0>
   197e8:	cmp	x20, #0x0
   197ec:	mov	x0, #0xfffd                	// #65533
   197f0:	csel	x20, x20, x0, ne  // ne = any
   197f4:	ldr	x1, [x22, #8]
   197f8:	ldrh	w0, [x1, #32]
   197fc:	and	w0, w0, #0x1ff
   19800:	cmp	w0, #0x17f
   19804:	b.eq	123d0 <Perl_re_exec_indentf@@Base+0x6200>  // b.none
   19808:	ldrh	w1, [x1, #32]
   1980c:	and	x1, x1, #0x1ff
   19810:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19814:	ldr	x0, [x0, #4008]
   19818:	ldr	x4, [x0, x1, lsl #3]
   1981c:	mov	x3, x20
   19820:	adrp	x2, 62000 <boot_re@@Base+0x41c>
   19824:	add	x2, x2, #0x510
   19828:	mov	w1, #0x3f                  	// #63
   1982c:	mov	x0, x22
   19830:	bl	5110 <Perl_warner@plt>
   19834:	b	124d0 <Perl_re_exec_indentf@@Base+0x6300>
   19838:	mov	w21, #0x0                   	// #0
   1983c:	mov	w20, #0xfffffff6            	// #-10
   19840:	b	19714 <Perl_re_exec_indentf@@Base+0xd544>
   19844:	mov	w20, #0xfffffff6            	// #-10
   19848:	mov	w19, #0x0                   	// #0
   1984c:	ldr	w0, [sp, #168]
   19850:	cbnz	w0, 196b4 <Perl_re_exec_indentf@@Base+0xd4e4>
   19854:	cmp	w20, #0x0
   19858:	ldr	x0, [sp, #128]
   1985c:	ccmp	x23, x0, #0x2, ge  // ge = tcont
   19860:	b.cs	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.hs, b.nlast
   19864:	ldrb	w1, [x26]
   19868:	mov	w0, #0x1                   	// #1
   1986c:	lsl	w0, w0, w1
   19870:	orr	w0, w0, #0x4000
   19874:	and	x2, x20, #0xff
   19878:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1987c:	ldr	x1, [x1, #3880]
   19880:	ldr	w2, [x1, x2, lsl #2]
   19884:	mov	w1, #0x1                   	// #1
   19888:	bics	wzr, w0, w2
   1988c:	b.eq	19894 <Perl_re_exec_indentf@@Base+0xd6c4>  // b.none
   19890:	mov	w1, #0x0                   	// #0
   19894:	cmp	w1, w19
   19898:	b.eq	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.none
   1989c:	mov	w26, w27
   198a0:	mov	x27, x24
   198a4:	add	x23, x23, #0x1
   198a8:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   198ac:	mov	w20, #0xfffffff6            	// #-10
   198b0:	mov	w21, #0x0                   	// #0
   198b4:	b	1995c <Perl_re_exec_indentf@@Base+0xd78c>
   198b8:	mov	w19, #0x1                   	// #1
   198bc:	mov	w21, #0x0                   	// #0
   198c0:	ldr	x0, [x22, #1440]
   198c4:	cbnz	x0, 10ecc <Perl_re_exec_indentf@@Base+0x4cfc>
   198c8:	ldrb	w0, [x26]
   198cc:	cbnz	w0, 10ed4 <Perl_re_exec_indentf@@Base+0x4d04>
   198d0:	ldr	w0, [sp, #168]
   198d4:	cbz	w0, 11358 <Perl_re_exec_indentf@@Base+0x5188>
   198d8:	ldr	x2, [x24, #8]
   198dc:	cmp	x23, x2
   198e0:	b.eq	110b8 <Perl_re_exec_indentf@@Base+0x4ee8>  // b.none
   198e4:	ldr	x19, [x24, #16]
   198e8:	str	x19, [sp, #192]
   198ec:	mov	x1, #0xffffffffffffffff    	// #-1
   198f0:	mov	x0, x23
   198f4:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   198f8:	cmp	x19, x0
   198fc:	b.ls	11150 <Perl_re_exec_indentf@@Base+0x4f80>  // b.plast
   19900:	ldrb	w19, [x0]
   19904:	tst	x19, #0x80
   19908:	b.ne	1119c <Perl_re_exec_indentf@@Base+0x4fcc>  // b.any
   1990c:	ldrb	w0, [x22, #1180]
   19910:	cbz	w0, 11174 <Perl_re_exec_indentf@@Base+0x4fa4>
   19914:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19918:	ldr	x0, [x0, #3880]
   1991c:	ldr	w19, [x0, w19, sxtw #2]
   19920:	and	w19, w19, #0x1
   19924:	tst	w20, #0x80000000
   19928:	b.eq	110d8 <Perl_re_exec_indentf@@Base+0x4f08>  // b.none
   1992c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19930:	ldr	x0, [x0, #3880]
   19934:	ldr	w0, [x0, #40]
   19938:	and	w0, w0, #0x1
   1993c:	b	1110c <Perl_re_exec_indentf@@Base+0x4f3c>
   19940:	mov	w19, #0x0                   	// #0
   19944:	mov	w20, #0xfffffff6            	// #-10
   19948:	b	198bc <Perl_re_exec_indentf@@Base+0xd6ec>
   1994c:	mov	w19, #0x1                   	// #1
   19950:	mov	w21, #0x0                   	// #0
   19954:	ldr	w0, [sp, #168]
   19958:	cbnz	w0, 10ef4 <Perl_re_exec_indentf@@Base+0x4d24>
   1995c:	ldr	x0, [x24, #8]
   19960:	cmp	x23, x0
   19964:	b.eq	11448 <Perl_re_exec_indentf@@Base+0x5278>  // b.none
   19968:	ldurb	w1, [x23, #-1]
   1996c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19970:	ldr	x0, [x0, #3880]
   19974:	ldr	w1, [x0, x1, lsl #2]
   19978:	mov	w0, #0x4001                	// #16385
   1997c:	bics	wzr, w0, w1
   19980:	cset	w1, eq  // eq = none
   19984:	tst	w20, #0x80000000
   19988:	b.ne	11464 <Perl_re_exec_indentf@@Base+0x5294>  // b.any
   1998c:	and	x2, x20, #0xff
   19990:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19994:	ldr	x0, [x0, #3880]
   19998:	ldr	w2, [x0, x2, lsl #2]
   1999c:	mov	w0, #0x4001                	// #16385
   199a0:	bics	wzr, w0, w2
   199a4:	cset	w0, eq  // eq = none
   199a8:	cmp	w1, w0
   199ac:	cset	w0, eq  // eq = none
   199b0:	cmp	w0, w21
   199b4:	b.ne	12d20 <Perl_re_exec_indentf@@Base+0x6b50>  // b.any
   199b8:	mov	w26, w27
   199bc:	mov	x27, x24
   199c0:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   199c4:	mov	w19, #0x0                   	// #0
   199c8:	mov	w20, #0xfffffff6            	// #-10
   199cc:	b	19950 <Perl_re_exec_indentf@@Base+0xd780>
   199d0:	ldr	x0, [sp, #208]
   199d4:	ldr	x1, [x0, #24]
   199d8:	ldr	w0, [x26, #4]
   199dc:	add	x2, x1, w0, uxtw #3
   199e0:	ldr	x2, [x2, #16]
   199e4:	str	x2, [sp, #368]
   199e8:	add	w0, w0, #0x1
   199ec:	add	x0, x0, #0x2
   199f0:	ldr	x0, [x1, x0, lsl #3]
   199f4:	str	x0, [sp, #344]
   199f8:	ldr	w0, [x2, #60]
   199fc:	str	w0, [sp, #192]
   19a00:	ldr	x0, [x22, #1440]
   19a04:	cbz	x0, f198 <Perl_re_exec_indentf@@Base+0x2fc8>
   19a08:	bl	5050 <Perl__warn_problematic_locale@plt>
   19a0c:	b	f260 <Perl_re_exec_indentf@@Base+0x3090>
   19a10:	cmp	w19, #0x8d
   19a14:	b.hi	1880c <Perl_re_exec_indentf@@Base+0xc63c>  // b.pmore
   19a18:	adrp	x0, 6c000 <boot_re@@Base+0xa41c>
   19a1c:	add	x0, x0, #0x158
   19a20:	ldrh	w0, [x0, w19, uxtw #1]
   19a24:	adr	x1, 19a30 <Perl_re_exec_indentf@@Base+0xd860>
   19a28:	add	x0, x1, w0, sxth #2
   19a2c:	br	x0
   19a30:	mov	w26, w27
   19a34:	mov	x27, x24
   19a38:	str	wzr, [sp, #320]
   19a3c:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   19a40:	mov	w26, w27
   19a44:	mov	x27, x24
   19a48:	mov	w0, #0x1                   	// #1
   19a4c:	str	w0, [sp, #260]
   19a50:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   19a54:	mov	w26, w27
   19a58:	mov	x27, x24
   19a5c:	str	x23, [sp, #184]
   19a60:	b	189e0 <Perl_re_exec_indentf@@Base+0xc810>
   19a64:	bl	5300 <__stack_chk_fail@plt>
   19a68:	sub	sp, sp, #0x150
   19a6c:	stp	x29, x30, [sp, #16]
   19a70:	add	x29, sp, #0x10
   19a74:	stp	x19, x20, [sp, #32]
   19a78:	stp	x21, x22, [sp, #48]
   19a7c:	stp	x23, x24, [sp, #64]
   19a80:	stp	x25, x26, [sp, #80]
   19a84:	stp	x27, x28, [sp, #96]
   19a88:	mov	x28, x0
   19a8c:	mov	x21, x1
   19a90:	str	x2, [sp, #144]
   19a94:	str	x3, [sp, #264]
   19a98:	str	x4, [sp, #128]
   19a9c:	str	x5, [sp, #176]
   19aa0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   19aa4:	ldr	x0, [x0, #3920]
   19aa8:	ldr	x1, [x0]
   19aac:	str	x1, [sp, #328]
   19ab0:	mov	x1, #0x0                   	// #0
   19ab4:	ldr	w19, [x21, #100]
   19ab8:	ldrb	w0, [x5, #90]
   19abc:	str	w0, [sp, #160]
   19ac0:	ldrb	w20, [x5, #89]
   19ac4:	cbz	x2, 19b0c <Perl_re_exec_indentf@@Base+0xd93c>
   19ac8:	and	w19, w19, #0x1
   19acc:	ldr	x0, [sp, #264]
   19ad0:	str	x0, [sp, #152]
   19ad4:	cbz	x0, 19b30 <Perl_re_exec_indentf@@Base+0xd960>
   19ad8:	ldr	x0, [sp, #128]
   19adc:	cbz	x0, 19b54 <Perl_re_exec_indentf@@Base+0xd984>
   19ae0:	ldr	x0, [sp, #144]
   19ae4:	ldrb	w2, [x0, #1]
   19ae8:	sub	w0, w2, #0x8
   19aec:	cmp	w0, #0x5b
   19af0:	b.hi	203b8 <Perl_re_exec_indentf@@Base+0x141e8>  // b.pmore
   19af4:	adrp	x1, 6c000 <boot_re@@Base+0xa41c>
   19af8:	add	x1, x1, #0x274
   19afc:	ldrh	w0, [x1, w0, uxtw #1]
   19b00:	adr	x1, 19b0c <Perl_re_exec_indentf@@Base+0xd93c>
   19b04:	add	x0, x1, w0, sxth #2
   19b08:	br	x0
   19b0c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19b10:	add	x3, x3, #0x330
   19b14:	add	x3, x3, #0xcf0
   19b18:	mov	w2, #0x856                 	// #2134
   19b1c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   19b20:	add	x1, x1, #0xcb0
   19b24:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   19b28:	add	x0, x0, #0x930
   19b2c:	bl	58e0 <__assert_fail@plt>
   19b30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19b34:	add	x3, x3, #0x330
   19b38:	add	x3, x3, #0xcf0
   19b3c:	mov	w2, #0x856                 	// #2134
   19b40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   19b44:	add	x1, x1, #0xcb0
   19b48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   19b4c:	add	x0, x0, #0xce8
   19b50:	bl	58e0 <__assert_fail@plt>
   19b54:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19b58:	add	x3, x3, #0x330
   19b5c:	add	x3, x3, #0xcf0
   19b60:	mov	w2, #0x856                 	// #2134
   19b64:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   19b68:	add	x1, x1, #0xcb0
   19b6c:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   19b70:	add	x0, x0, #0x660
   19b74:	bl	58e0 <__assert_fail@plt>
   19b78:	mov	x20, #0x0                   	// #0
   19b7c:	ldr	x0, [sp, #152]
   19b80:	ldr	x24, [sp, #128]
   19b84:	cmp	x0, x24
   19b88:	b.cs	19bac <Perl_re_exec_indentf@@Base+0xd9dc>  // b.hs, b.nlast
   19b8c:	add	x23, sp, #0x108
   19b90:	mov	x22, #0x1                   	// #1
   19b94:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   19b98:	ldr	x21, [x21, #4064]
   19b9c:	ldr	w27, [sp, #160]
   19ba0:	ldr	x25, [sp, #144]
   19ba4:	ldr	x26, [sp, #176]
   19ba8:	b	19f7c <Perl_re_exec_indentf@@Base+0xddac>
   19bac:	mov	x0, #0x0                   	// #0
   19bb0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19bb4:	mov	x20, #0x0                   	// #0
   19bb8:	add	x21, sp, #0x108
   19bbc:	ldr	x0, [sp, #152]
   19bc0:	ldr	x1, [sp, #128]
   19bc4:	cmp	x0, x1
   19bc8:	b.cs	19be0 <Perl_re_exec_indentf@@Base+0xda10>  // b.hs, b.nlast
   19bcc:	ldr	x0, [sp, #152]
   19bd0:	ldr	x23, [sp, #144]
   19bd4:	ldr	x22, [sp, #128]
   19bd8:	ldr	x24, [sp, #176]
   19bdc:	b	19eec <Perl_re_exec_indentf@@Base+0xdd1c>
   19be0:	mov	x0, #0x0                   	// #0
   19be4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19be8:	ldr	x0, [x28, #1440]
   19bec:	cbnz	x0, 19c44 <Perl_re_exec_indentf@@Base+0xda74>
   19bf0:	ldr	x0, [sp, #144]
   19bf4:	ldrb	w0, [x0]
   19bf8:	and	w0, w0, #0xc
   19bfc:	cmp	w0, #0x8
   19c00:	b.eq	19c4c <Perl_re_exec_indentf@@Base+0xda7c>  // b.none
   19c04:	ldr	w0, [sp, #160]
   19c08:	cbz	w0, 19d5c <Perl_re_exec_indentf@@Base+0xdb8c>
   19c0c:	ldr	x3, [sp, #264]
   19c10:	ldr	x0, [sp, #128]
   19c14:	cmp	x3, x0
   19c18:	b.cs	203c8 <Perl_re_exec_indentf@@Base+0x141f8>  // b.hs, b.nlast
   19c1c:	mov	x20, #0x0                   	// #0
   19c20:	mov	w22, #0x1                   	// #1
   19c24:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   19c28:	ldr	x23, [x24, #4064]
   19c2c:	mov	x26, #0x0                   	// #0
   19c30:	add	x25, sp, #0x108
   19c34:	ldr	x27, [sp, #176]
   19c38:	str	x25, [sp, #120]
   19c3c:	mov	x25, x0
   19c40:	b	19ce8 <Perl_re_exec_indentf@@Base+0xdb18>
   19c44:	bl	5050 <Perl__warn_problematic_locale@plt>
   19c48:	b	19bf0 <Perl_re_exec_indentf@@Base+0xda20>
   19c4c:	ldrb	w0, [x28, #1180]
   19c50:	cbnz	w0, 19c04 <Perl_re_exec_indentf@@Base+0xda34>
   19c54:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   19c58:	add	x2, x2, #0x330
   19c5c:	add	x2, x2, #0xc00
   19c60:	mov	w1, #0x3f                  	// #63
   19c64:	mov	x0, x28
   19c68:	bl	5150 <Perl_ck_warner@plt>
   19c6c:	b	19c04 <Perl_re_exec_indentf@@Base+0xda34>
   19c70:	ldr	x2, [sp, #120]
   19c74:	mov	x1, x27
   19c78:	mov	x0, x28
   19c7c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   19c80:	and	w0, w0, #0xff
   19c84:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19c88:	ldr	x0, [x27, #16]
   19c8c:	ldr	x20, [sp, #264]
   19c90:	cmp	x0, x20
   19c94:	b.cc	19d30 <Perl_re_exec_indentf@@Base+0xdb60>  // b.lo, b.ul, b.last
   19c98:	sub	x0, x0, x20
   19c9c:	mov	x1, x26
   19ca0:	cmp	x0, #0x0
   19ca4:	b.le	19cbc <Perl_re_exec_indentf@@Base+0xdaec>
   19ca8:	ldr	x1, [x24, #4064]
   19cac:	ldrb	w2, [x20]
   19cb0:	ldrb	w1, [x1, w2, sxtw]
   19cb4:	cmp	x1, x0
   19cb8:	csel	x1, x1, x0, le
   19cbc:	add	x20, x20, x1
   19cc0:	str	x20, [sp, #264]
   19cc4:	b	19cdc <Perl_re_exec_indentf@@Base+0xdb0c>
   19cc8:	ldr	x0, [sp, #264]
   19ccc:	ldrb	w1, [x0]
   19cd0:	ldrb	w1, [x23, w1, sxtw]
   19cd4:	add	x0, x0, x1
   19cd8:	str	x0, [sp, #264]
   19cdc:	ldr	x3, [sp, #264]
   19ce0:	cmp	x3, x25
   19ce4:	b.cs	19d54 <Perl_re_exec_indentf@@Base+0xdb84>  // b.hs, b.nlast
   19ce8:	mov	w5, w22
   19cec:	mov	x4, x25
   19cf0:	ldr	x2, [sp, #144]
   19cf4:	mov	x1, x21
   19cf8:	mov	x0, x28
   19cfc:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   19d00:	and	w0, w0, #0xff
   19d04:	cbz	w0, 19cc8 <Perl_re_exec_indentf@@Base+0xdaf8>
   19d08:	cbz	w19, 19d18 <Perl_re_exec_indentf@@Base+0xdb48>
   19d0c:	ldr	x0, [sp, #264]
   19d10:	cmp	x0, x20
   19d14:	b.eq	19c88 <Perl_re_exec_indentf@@Base+0xdab8>  // b.none
   19d18:	ldrb	w0, [x27, #88]
   19d1c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19d20:	ldr	x1, [x27, #16]
   19d24:	ldr	x0, [sp, #264]
   19d28:	cmp	x1, x0
   19d2c:	b.cs	19c70 <Perl_re_exec_indentf@@Base+0xdaa0>  // b.hs, b.nlast
   19d30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   19d34:	add	x3, x3, #0x330
   19d38:	add	x3, x3, #0xcf0
   19d3c:	mov	w2, #0x866                 	// #2150
   19d40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   19d44:	add	x1, x1, #0xcb0
   19d48:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   19d4c:	add	x0, x0, #0xa80
   19d50:	bl	58e0 <__assert_fail@plt>
   19d54:	mov	x0, #0x0                   	// #0
   19d58:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19d5c:	ldr	x0, [sp, #144]
   19d60:	ldrb	w0, [x0]
   19d64:	tst	w0, #0xffffffdf
   19d68:	b.ne	19d9c <Perl_re_exec_indentf@@Base+0xdbcc>  // b.any
   19d6c:	ldr	x0, [sp, #264]
   19d70:	mov	x3, #0x0                   	// #0
   19d74:	add	x20, sp, #0x108
   19d78:	ldr	x1, [sp, #128]
   19d7c:	cmp	x0, x1
   19d80:	b.cs	19d94 <Perl_re_exec_indentf@@Base+0xdbc4>  // b.hs, b.nlast
   19d84:	ldr	x22, [sp, #144]
   19d88:	ldr	x23, [sp, #128]
   19d8c:	ldr	x21, [sp, #176]
   19d90:	b	19e80 <Perl_re_exec_indentf@@Base+0xdcb0>
   19d94:	mov	x0, #0x0                   	// #0
   19d98:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19d9c:	ldr	x3, [sp, #264]
   19da0:	ldr	x24, [sp, #128]
   19da4:	cmp	x3, x24
   19da8:	b.cs	203d0 <Perl_re_exec_indentf@@Base+0x14200>  // b.hs, b.nlast
   19dac:	mov	x20, #0x0                   	// #0
   19db0:	add	x22, sp, #0x108
   19db4:	ldr	x23, [sp, #176]
   19db8:	b	19df0 <Perl_re_exec_indentf@@Base+0xdc20>
   19dbc:	mov	x2, x22
   19dc0:	mov	x1, x23
   19dc4:	mov	x0, x28
   19dc8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   19dcc:	and	w0, w0, #0xff
   19dd0:	cbz	w0, 19e38 <Perl_re_exec_indentf@@Base+0xdc68>
   19dd4:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19dd8:	ldr	x0, [sp, #264]
   19ddc:	add	x0, x0, #0x1
   19de0:	str	x0, [sp, #264]
   19de4:	ldr	x3, [sp, #264]
   19de8:	cmp	x3, x24
   19dec:	b.cs	19e48 <Perl_re_exec_indentf@@Base+0xdc78>  // b.hs, b.nlast
   19df0:	mov	w5, #0x0                   	// #0
   19df4:	add	x4, x3, #0x1
   19df8:	ldr	x2, [sp, #144]
   19dfc:	mov	x1, x21
   19e00:	mov	x0, x28
   19e04:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   19e08:	and	w0, w0, #0xff
   19e0c:	cbz	w0, 19dd8 <Perl_re_exec_indentf@@Base+0xdc08>
   19e10:	cbz	w19, 19e20 <Perl_re_exec_indentf@@Base+0xdc50>
   19e14:	ldr	x0, [sp, #264]
   19e18:	cmp	x0, x20
   19e1c:	b.eq	19e38 <Perl_re_exec_indentf@@Base+0xdc68>  // b.none
   19e20:	ldrb	w0, [x23, #88]
   19e24:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19e28:	ldr	x1, [x23, #16]
   19e2c:	ldr	x0, [sp, #264]
   19e30:	cmp	x1, x0
   19e34:	b.cs	19dbc <Perl_re_exec_indentf@@Base+0xdbec>  // b.hs, b.nlast
   19e38:	ldr	x20, [sp, #264]
   19e3c:	add	x20, x20, #0x1
   19e40:	str	x20, [sp, #264]
   19e44:	b	19de4 <Perl_re_exec_indentf@@Base+0xdc14>
   19e48:	mov	x0, #0x0                   	// #0
   19e4c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19e50:	mov	x2, x20
   19e54:	mov	x1, x21
   19e58:	mov	x0, x28
   19e5c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   19e60:	and	w0, w0, #0xff
   19e64:	cbz	w0, 19ebc <Perl_re_exec_indentf@@Base+0xdcec>
   19e68:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19e6c:	add	x0, x0, #0x1
   19e70:	str	x0, [sp, #264]
   19e74:	ldr	x0, [sp, #264]
   19e78:	cmp	x0, x23
   19e7c:	b.cs	19ecc <Perl_re_exec_indentf@@Base+0xdcfc>  // b.hs, b.nlast
   19e80:	ldrb	w1, [x0]
   19e84:	ubfx	x2, x1, #3, #5
   19e88:	add	x2, x22, x2
   19e8c:	ldrb	w2, [x2, #8]
   19e90:	and	w1, w1, #0x7
   19e94:	lsr	w1, w2, w1
   19e98:	tbz	w1, #0, 19e6c <Perl_re_exec_indentf@@Base+0xdc9c>
   19e9c:	cmp	w19, #0x0
   19ea0:	ccmp	x0, x3, #0x0, ne  // ne = any
   19ea4:	b.eq	19ebc <Perl_re_exec_indentf@@Base+0xdcec>  // b.none
   19ea8:	ldrb	w1, [x21, #88]
   19eac:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19eb0:	ldr	x1, [x21, #16]
   19eb4:	cmp	x1, x0
   19eb8:	b.cs	19e50 <Perl_re_exec_indentf@@Base+0xdc80>  // b.hs, b.nlast
   19ebc:	ldr	x3, [sp, #264]
   19ec0:	add	x3, x3, #0x1
   19ec4:	str	x3, [sp, #264]
   19ec8:	b	19e74 <Perl_re_exec_indentf@@Base+0xdca4>
   19ecc:	mov	x0, #0x0                   	// #0
   19ed0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19ed4:	ldr	x0, [sp, #264]
   19ed8:	add	x0, x0, #0x1
   19edc:	str	x0, [sp, #264]
   19ee0:	cmp	x0, x22
   19ee4:	b.cs	19f44 <Perl_re_exec_indentf@@Base+0xdd74>  // b.hs, b.nlast
   19ee8:	mov	x20, x0
   19eec:	ldrb	w3, [x23]
   19ef0:	ldrb	w2, [x23, #4]
   19ef4:	mov	x1, x22
   19ef8:	bl	5dd8 <Perl__inverse_folds@plt+0x3d8>
   19efc:	str	x0, [sp, #264]
   19f00:	cmp	x0, x22
   19f04:	b.cs	203d8 <Perl_re_exec_indentf@@Base+0x14208>  // b.hs, b.nlast
   19f08:	cmp	w19, #0x0
   19f0c:	ccmp	x0, x20, #0x0, ne  // ne = any
   19f10:	b.eq	19ed4 <Perl_re_exec_indentf@@Base+0xdd04>  // b.none
   19f14:	ldrb	w1, [x24, #88]
   19f18:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19f1c:	ldr	x1, [x24, #16]
   19f20:	cmp	x0, x1
   19f24:	b.hi	19ed4 <Perl_re_exec_indentf@@Base+0xdd04>  // b.pmore
   19f28:	mov	x2, x21
   19f2c:	mov	x1, x24
   19f30:	mov	x0, x28
   19f34:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   19f38:	and	w0, w0, #0xff
   19f3c:	cbz	w0, 19ed4 <Perl_re_exec_indentf@@Base+0xdd04>
   19f40:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19f44:	mov	x0, #0x0                   	// #0
   19f48:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19f4c:	mov	x2, x23
   19f50:	mov	x1, x26
   19f54:	mov	x0, x28
   19f58:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   19f5c:	and	w0, w0, #0xff
   19f60:	cbz	w0, 19fb8 <Perl_re_exec_indentf@@Base+0xdde8>
   19f64:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19f68:	add	x0, x0, x1
   19f6c:	str	x0, [sp, #264]
   19f70:	cmp	x0, x24
   19f74:	b.cs	19fd0 <Perl_re_exec_indentf@@Base+0xde00>  // b.hs, b.nlast
   19f78:	mov	x20, x0
   19f7c:	ldrb	w3, [x25]
   19f80:	ldrb	w2, [x25, #4]
   19f84:	mov	x1, x24
   19f88:	bl	779c <Perl__inverse_folds@plt+0x1d9c>
   19f8c:	str	x0, [sp, #264]
   19f90:	cmp	x0, x24
   19f94:	b.cs	203e0 <Perl_re_exec_indentf@@Base+0x14210>  // b.hs, b.nlast
   19f98:	cmp	w19, #0x0
   19f9c:	ccmp	x0, x20, #0x0, ne  // ne = any
   19fa0:	b.eq	19fb8 <Perl_re_exec_indentf@@Base+0xdde8>  // b.none
   19fa4:	ldrb	w1, [x26, #88]
   19fa8:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   19fac:	ldr	x1, [x26, #16]
   19fb0:	cmp	x0, x1
   19fb4:	b.ls	19f4c <Perl_re_exec_indentf@@Base+0xdd7c>  // b.plast
   19fb8:	ldr	x0, [sp, #264]
   19fbc:	mov	x1, x22
   19fc0:	cbz	w27, 19f68 <Perl_re_exec_indentf@@Base+0xdd98>
   19fc4:	ldrb	w1, [x0]
   19fc8:	ldrb	w1, [x21, w1, sxtw]
   19fcc:	b	19f68 <Perl_re_exec_indentf@@Base+0xdd98>
   19fd0:	mov	x0, #0x0                   	// #0
   19fd4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   19fd8:	ldr	w0, [sp, #160]
   19fdc:	cbz	w0, 203e8 <Perl_re_exec_indentf@@Base+0x14218>
   19fe0:	ldr	x0, [sp, #144]
   19fe4:	ldrb	w23, [x0]
   19fe8:	cbnz	w23, 1a024 <Perl_re_exec_indentf@@Base+0xde54>
   19fec:	mov	x20, #0x0                   	// #0
   19ff0:	ldr	x3, [sp, #152]
   19ff4:	ldr	x0, [sp, #128]
   19ff8:	cmp	x3, x0
   19ffc:	b.cs	1a01c <Perl_re_exec_indentf@@Base+0xde4c>  // b.hs, b.nlast
   1a000:	mov	w23, #0x1                   	// #1
   1a004:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1a008:	ldr	x25, [x22, #4064]
   1a00c:	mov	x26, #0x0                   	// #0
   1a010:	add	x24, sp, #0x108
   1a014:	ldr	x27, [sp, #176]
   1a018:	b	1a1e0 <Perl_re_exec_indentf@@Base+0xe010>
   1a01c:	mov	x0, #0x0                   	// #0
   1a020:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a024:	ldr	x0, [sp, #152]
   1a028:	ldr	x1, [sp, #128]
   1a02c:	cmp	x0, x1
   1a030:	b.cs	203f0 <Perl_re_exec_indentf@@Base+0x14220>  // b.hs, b.nlast
   1a034:	mov	x20, #0x0                   	// #0
   1a038:	mov	w27, #0x1                   	// #1
   1a03c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1a040:	ldr	x25, [x22, #4064]
   1a044:	mov	x26, #0x0                   	// #0
   1a048:	add	x24, sp, #0x108
   1a04c:	b	1a0d0 <Perl_re_exec_indentf@@Base+0xdf00>
   1a050:	mov	x2, x24
   1a054:	ldr	x1, [sp, #176]
   1a058:	mov	x0, x28
   1a05c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a060:	and	w0, w0, #0xff
   1a064:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a068:	ldr	x0, [sp, #176]
   1a06c:	ldr	x0, [x0, #16]
   1a070:	ldr	x20, [sp, #264]
   1a074:	cmp	x0, x20
   1a078:	b.cc	1a138 <Perl_re_exec_indentf@@Base+0xdf68>  // b.lo, b.ul, b.last
   1a07c:	sub	x0, x0, x20
   1a080:	mov	x1, x26
   1a084:	cmp	x0, #0x0
   1a088:	b.le	1a0a0 <Perl_re_exec_indentf@@Base+0xded0>
   1a08c:	ldr	x1, [x22, #4064]
   1a090:	ldrb	w2, [x20]
   1a094:	ldrb	w1, [x1, w2, sxtw]
   1a098:	cmp	x1, x0
   1a09c:	csel	x1, x1, x0, le
   1a0a0:	add	x20, x20, x1
   1a0a4:	str	x20, [sp, #264]
   1a0a8:	b	1a0c0 <Perl_re_exec_indentf@@Base+0xdef0>
   1a0ac:	ldr	x0, [sp, #264]
   1a0b0:	ldrb	w1, [x0]
   1a0b4:	ldrb	w1, [x25, w1, sxtw]
   1a0b8:	add	x0, x0, x1
   1a0bc:	str	x0, [sp, #264]
   1a0c0:	ldr	x0, [sp, #264]
   1a0c4:	ldr	x1, [sp, #128]
   1a0c8:	cmp	x0, x1
   1a0cc:	b.cs	1a15c <Perl_re_exec_indentf@@Base+0xdf8c>  // b.hs, b.nlast
   1a0d0:	ldr	x1, [sp, #128]
   1a0d4:	sub	x2, x1, x0
   1a0d8:	mov	w1, w23
   1a0dc:	bl	5750 <memchr@plt>
   1a0e0:	mov	x3, x0
   1a0e4:	str	x0, [sp, #264]
   1a0e8:	cbz	x0, 202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a0ec:	mov	w5, w27
   1a0f0:	ldr	x4, [sp, #128]
   1a0f4:	ldr	x2, [sp, #144]
   1a0f8:	mov	x1, x21
   1a0fc:	mov	x0, x28
   1a100:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   1a104:	and	w0, w0, #0xff
   1a108:	cbz	w0, 1a0ac <Perl_re_exec_indentf@@Base+0xdedc>
   1a10c:	cbz	w19, 1a11c <Perl_re_exec_indentf@@Base+0xdf4c>
   1a110:	ldr	x0, [sp, #264]
   1a114:	cmp	x0, x20
   1a118:	b.eq	1a068 <Perl_re_exec_indentf@@Base+0xde98>  // b.none
   1a11c:	ldr	x1, [sp, #176]
   1a120:	ldrb	w0, [x1, #88]
   1a124:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a128:	ldr	x1, [x1, #16]
   1a12c:	ldr	x0, [sp, #264]
   1a130:	cmp	x1, x0
   1a134:	b.cs	1a050 <Perl_re_exec_indentf@@Base+0xde80>  // b.hs, b.nlast
   1a138:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a13c:	add	x3, x3, #0x330
   1a140:	add	x3, x3, #0xcf0
   1a144:	mov	w2, #0x889                 	// #2185
   1a148:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a14c:	add	x1, x1, #0xcb0
   1a150:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1a154:	add	x0, x0, #0xa80
   1a158:	bl	58e0 <__assert_fail@plt>
   1a15c:	mov	x0, #0x0                   	// #0
   1a160:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a164:	mov	x2, x24
   1a168:	mov	x1, x27
   1a16c:	mov	x0, x28
   1a170:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a174:	and	w0, w0, #0xff
   1a178:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a17c:	ldr	x0, [x27, #16]
   1a180:	ldr	x20, [sp, #264]
   1a184:	cmp	x0, x20
   1a188:	b.cc	1a228 <Perl_re_exec_indentf@@Base+0xe058>  // b.lo, b.ul, b.last
   1a18c:	sub	x0, x0, x20
   1a190:	mov	x1, x26
   1a194:	cmp	x0, #0x0
   1a198:	b.le	1a1b0 <Perl_re_exec_indentf@@Base+0xdfe0>
   1a19c:	ldr	x1, [x22, #4064]
   1a1a0:	ldrb	w2, [x20]
   1a1a4:	ldrb	w1, [x1, w2, sxtw]
   1a1a8:	cmp	x1, x0
   1a1ac:	csel	x1, x1, x0, le
   1a1b0:	add	x20, x20, x1
   1a1b4:	str	x20, [sp, #264]
   1a1b8:	b	1a1d0 <Perl_re_exec_indentf@@Base+0xe000>
   1a1bc:	ldr	x0, [sp, #264]
   1a1c0:	ldrb	w1, [x0]
   1a1c4:	ldrb	w1, [x25, w1, sxtw]
   1a1c8:	add	x0, x0, x1
   1a1cc:	str	x0, [sp, #264]
   1a1d0:	ldr	x3, [sp, #264]
   1a1d4:	ldr	x0, [sp, #128]
   1a1d8:	cmp	x3, x0
   1a1dc:	b.cs	1a24c <Perl_re_exec_indentf@@Base+0xe07c>  // b.hs, b.nlast
   1a1e0:	mov	w5, w23
   1a1e4:	ldr	x4, [sp, #128]
   1a1e8:	ldr	x2, [sp, #144]
   1a1ec:	mov	x1, x21
   1a1f0:	mov	x0, x28
   1a1f4:	bl	bcb4 <Perl__inverse_folds@plt+0x62b4>
   1a1f8:	and	w0, w0, #0xff
   1a1fc:	cbz	w0, 1a1bc <Perl_re_exec_indentf@@Base+0xdfec>
   1a200:	cbz	w19, 1a210 <Perl_re_exec_indentf@@Base+0xe040>
   1a204:	ldr	x0, [sp, #264]
   1a208:	cmp	x0, x20
   1a20c:	b.eq	1a17c <Perl_re_exec_indentf@@Base+0xdfac>  // b.none
   1a210:	ldrb	w0, [x27, #88]
   1a214:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a218:	ldr	x1, [x27, #16]
   1a21c:	ldr	x0, [sp, #264]
   1a220:	cmp	x1, x0
   1a224:	b.cs	1a164 <Perl_re_exec_indentf@@Base+0xdf94>  // b.hs, b.nlast
   1a228:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a22c:	add	x3, x3, #0x330
   1a230:	add	x3, x3, #0xcf0
   1a234:	mov	w2, #0x88d                 	// #2189
   1a238:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a23c:	add	x1, x1, #0xcb0
   1a240:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1a244:	add	x0, x0, #0xa80
   1a248:	bl	58e0 <__assert_fail@plt>
   1a24c:	mov	x0, #0x0                   	// #0
   1a250:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a254:	cbnz	w20, 1a274 <Perl_re_exec_indentf@@Base+0xe0a4>
   1a258:	ldr	w0, [sp, #160]
   1a25c:	cbnz	w0, 2060c <Perl_re_exec_indentf@@Base+0x1443c>
   1a260:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a264:	ldr	x1, [x1, #3752]
   1a268:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1a26c:	add	x19, x19, #0xccc
   1a270:	b	1a4bc <Perl_re_exec_indentf@@Base+0xe2ec>
   1a274:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a278:	add	x3, x3, #0x330
   1a27c:	add	x3, x3, #0xcf0
   1a280:	mov	w2, #0x894                 	// #2196
   1a284:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a288:	add	x1, x1, #0xcb0
   1a28c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   1a290:	add	x0, x0, #0x2f8
   1a294:	bl	58e0 <__assert_fail@plt>
   1a298:	mov	x21, #0x29                  	// #41
   1a29c:	cbnz	w20, 1a45c <Perl_re_exec_indentf@@Base+0xe28c>
   1a2a0:	b	1a258 <Perl_re_exec_indentf@@Base+0xe088>
   1a2a4:	cbnz	w20, 1a2c4 <Perl_re_exec_indentf@@Base+0xe0f4>
   1a2a8:	ldr	w0, [sp, #160]
   1a2ac:	cbnz	w0, 20614 <Perl_re_exec_indentf@@Base+0x14444>
   1a2b0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a2b4:	ldr	x1, [x1, #3944]
   1a2b8:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1a2bc:	add	x19, x19, #0xbec
   1a2c0:	b	1a4bc <Perl_re_exec_indentf@@Base+0xe2ec>
   1a2c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a2c8:	add	x3, x3, #0x330
   1a2cc:	add	x3, x3, #0xcf0
   1a2d0:	mov	w2, #0x8af                 	// #2223
   1a2d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a2d8:	add	x1, x1, #0xcb0
   1a2dc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   1a2e0:	add	x0, x0, #0x2f8
   1a2e4:	bl	58e0 <__assert_fail@plt>
   1a2e8:	ldr	x0, [x28, #1440]
   1a2ec:	cbnz	x0, 1a348 <Perl_re_exec_indentf@@Base+0xe178>
   1a2f0:	ldr	w0, [sp, #160]
   1a2f4:	cmp	w0, #0x0
   1a2f8:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   1a2fc:	b.ne	1a6d0 <Perl_re_exec_indentf@@Base+0xe500>  // b.any
   1a300:	ldrb	w0, [x28, #1180]
   1a304:	cbnz	w0, 2061c <Perl_re_exec_indentf@@Base+0x1444c>
   1a308:	ldr	x0, [sp, #144]
   1a30c:	ldrb	w20, [x0]
   1a310:	and	x23, x20, #0xff
   1a314:	ldr	x0, [sp, #176]
   1a318:	ldrb	w0, [x0, #90]
   1a31c:	cbz	w0, 1a538 <Perl_re_exec_indentf@@Base+0xe368>
   1a320:	ldr	x2, [sp, #264]
   1a324:	neg	x1, x23
   1a328:	ldr	x0, [sp, #128]
   1a32c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1a330:	mov	x21, x0
   1a334:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a338:	ldr	x1, [x1, #3816]
   1a33c:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1a340:	add	x19, x19, #0xb18
   1a344:	b	1a4d0 <Perl_re_exec_indentf@@Base+0xe300>
   1a348:	bl	5050 <Perl__warn_problematic_locale@plt>
   1a34c:	b	1a2f0 <Perl_re_exec_indentf@@Base+0xe120>
   1a350:	mov	x21, #0x0                   	// #0
   1a354:	cbnz	w20, 1a3d4 <Perl_re_exec_indentf@@Base+0xe204>
   1a358:	ldr	x19, [sp, #144]
   1a35c:	ldrb	w0, [x19], #4
   1a360:	mov	x22, x0
   1a364:	ldr	w1, [sp, #160]
   1a368:	cmp	w1, #0x0
   1a36c:	cset	w1, ne  // ne = any
   1a370:	add	w1, w1, #0x2
   1a374:	mov	w2, w1
   1a378:	sub	x1, x0, #0x1
   1a37c:	add	x1, x1, x2
   1a380:	udiv	x1, x1, x2
   1a384:	ldr	x0, [sp, #176]
   1a388:	ldrb	w0, [x0, #90]
   1a38c:	ldr	x2, [sp, #128]
   1a390:	sub	x23, x2, x1
   1a394:	cbnz	w0, 1a42c <Perl_re_exec_indentf@@Base+0xe25c>
   1a398:	ldr	x1, [sp, #264]
   1a39c:	cmp	x23, x1
   1a3a0:	b.cc	20408 <Perl_re_exec_indentf@@Base+0x14238>  // b.lo, b.ul, b.last
   1a3a4:	add	x24, sp, #0x130
   1a3a8:	add	x27, sp, #0x108
   1a3ac:	mov	x25, #0x1                   	// #1
   1a3b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1a3b4:	ldr	x26, [x0, #4064]
   1a3b8:	str	x19, [sp, #120]
   1a3bc:	ldr	x19, [sp, #128]
   1a3c0:	str	x27, [sp, #128]
   1a3c4:	ldr	x27, [sp, #176]
   1a3c8:	str	x26, [sp, #136]
   1a3cc:	ldr	w26, [sp, #160]
   1a3d0:	b	1a730 <Perl_re_exec_indentf@@Base+0xe560>
   1a3d4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a3d8:	add	x3, x3, #0x330
   1a3dc:	add	x3, x3, #0xcf0
   1a3e0:	mov	w2, #0x8c4                 	// #2244
   1a3e4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a3e8:	add	x1, x1, #0xcb0
   1a3ec:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   1a3f0:	add	x0, x0, #0x2f8
   1a3f4:	bl	58e0 <__assert_fail@plt>
   1a3f8:	ldr	w0, [sp, #160]
   1a3fc:	cbz	w0, 1a444 <Perl_re_exec_indentf@@Base+0xe274>
   1a400:	ldr	x19, [sp, #144]
   1a404:	ldrb	w22, [x19], #4
   1a408:	add	x2, x19, x22
   1a40c:	mov	x21, #0x2a                  	// #42
   1a410:	cbnz	w20, 1a468 <Perl_re_exec_indentf@@Base+0xe298>
   1a414:	add	x1, x22, #0x2
   1a418:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1a41c:	movk	x0, #0xaaab
   1a420:	umulh	x1, x1, x0
   1a424:	lsr	x1, x1, #1
   1a428:	mov	x21, #0x2a                  	// #42
   1a42c:	ldr	x2, [sp, #264]
   1a430:	neg	x1, x1
   1a434:	ldr	x0, [sp, #128]
   1a438:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1a43c:	mov	x23, x0
   1a440:	b	1a398 <Perl_re_exec_indentf@@Base+0xe1c8>
   1a444:	mov	x0, #0x0                   	// #0
   1a448:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a44c:	ldr	w0, [sp, #160]
   1a450:	cbz	w0, 203f8 <Perl_re_exec_indentf@@Base+0x14228>
   1a454:	mov	x21, #0x8                   	// #8
   1a458:	cbz	w20, 1a478 <Perl_re_exec_indentf@@Base+0xe2a8>
   1a45c:	ldr	x19, [sp, #144]
   1a460:	ldrb	w22, [x19], #4
   1a464:	add	x2, x19, x22
   1a468:	mov	x1, x19
   1a46c:	mov	x0, x28
   1a470:	bl	5720 <Perl_utf8_length@plt>
   1a474:	b	1a364 <Perl_re_exec_indentf@@Base+0xe194>
   1a478:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a47c:	add	x3, x3, #0x330
   1a480:	add	x3, x3, #0xcf0
   1a484:	mov	w2, #0x8d4                 	// #2260
   1a488:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a48c:	add	x1, x1, #0xcb0
   1a490:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   1a494:	add	x0, x0, #0x480
   1a498:	bl	58e0 <__assert_fail@plt>
   1a49c:	ldr	w0, [sp, #160]
   1a4a0:	cmp	w0, #0x0
   1a4a4:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   1a4a8:	b.ne	1a6ec <Perl_re_exec_indentf@@Base+0xe51c>  // b.any
   1a4ac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a4b0:	ldr	x1, [x1, #3752]
   1a4b4:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1a4b8:	add	x19, x19, #0xccc
   1a4bc:	ldr	x0, [sp, #144]
   1a4c0:	ldrb	w20, [x0]
   1a4c4:	and	x23, x20, #0xff
   1a4c8:	ldr	x0, [sp, #128]
   1a4cc:	sub	x21, x0, w20, uxtb
   1a4d0:	ldr	x4, [sp, #264]
   1a4d4:	mov	x0, #0x0                   	// #0
   1a4d8:	cmp	x4, x21
   1a4dc:	b.hi	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.pmore
   1a4e0:	ldr	x0, [sp, #144]
   1a4e4:	ldrb	w22, [x0, #4]
   1a4e8:	and	x0, x22, #0xff
   1a4ec:	ldrb	w24, [x1, x0]
   1a4f0:	cmp	w22, w24
   1a4f4:	b.eq	1a54c <Perl_re_exec_indentf@@Base+0xe37c>  // b.none
   1a4f8:	eor	w0, w22, w24
   1a4fc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a500:	ldr	x1, [x1, #3760]
   1a504:	ldrb	w1, [x1, w0, sxtw]
   1a508:	cmp	w1, #0x1
   1a50c:	b.ne	1a5d8 <Perl_re_exec_indentf@@Base+0xe408>  // b.any
   1a510:	mvn	w0, w0
   1a514:	and	w25, w0, #0xff
   1a518:	and	w22, w0, w22
   1a51c:	add	x24, x21, #0x1
   1a520:	add	x26, sp, #0x108
   1a524:	sub	w20, w20, #0x1
   1a528:	ldr	x0, [sp, #144]
   1a52c:	add	x27, x0, #0x5
   1a530:	mov	x0, x4
   1a534:	b	1a620 <Perl_re_exec_indentf@@Base+0xe450>
   1a538:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1a53c:	ldr	x1, [x1, #3816]
   1a540:	adrp	x19, 5000 <Perl_parse_uniprop_string@plt>
   1a544:	add	x19, x19, #0xb18
   1a548:	b	1a4c8 <Perl_re_exec_indentf@@Base+0xe2f8>
   1a54c:	add	x25, x21, #0x1
   1a550:	add	x24, sp, #0x108
   1a554:	sub	w20, w20, #0x1
   1a558:	ldr	x0, [sp, #144]
   1a55c:	add	x27, x0, #0x5
   1a560:	mov	x0, x4
   1a564:	b	1a59c <Perl_re_exec_indentf@@Base+0xe3cc>
   1a568:	ldr	x1, [sp, #176]
   1a56c:	ldrb	w0, [x1, #88]
   1a570:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a574:	mov	x2, x24
   1a578:	mov	x0, x28
   1a57c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a580:	and	w0, w0, #0xff
   1a584:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a588:	ldr	x0, [sp, #264]
   1a58c:	add	x0, x0, #0x1
   1a590:	str	x0, [sp, #264]
   1a594:	cmp	x0, x21
   1a598:	b.hi	1a5d0 <Perl_re_exec_indentf@@Base+0xe400>  // b.pmore
   1a59c:	sub	x2, x25, x0
   1a5a0:	mov	w1, w22
   1a5a4:	bl	5750 <memchr@plt>
   1a5a8:	str	x0, [sp, #264]
   1a5ac:	cbz	x0, 202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a5b0:	cmp	x23, #0x1
   1a5b4:	b.eq	1a568 <Perl_re_exec_indentf@@Base+0xe398>  // b.none
   1a5b8:	mov	w2, w20
   1a5bc:	mov	x1, x27
   1a5c0:	add	x0, x0, #0x1
   1a5c4:	blr	x19
   1a5c8:	cbz	w0, 1a588 <Perl_re_exec_indentf@@Base+0xe3b8>
   1a5cc:	b	1a568 <Perl_re_exec_indentf@@Base+0xe398>
   1a5d0:	mov	x0, #0x0                   	// #0
   1a5d4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a5d8:	add	x25, sp, #0x108
   1a5dc:	sub	w20, w20, #0x1
   1a5e0:	ldr	x0, [sp, #144]
   1a5e4:	add	x27, x0, #0x5
   1a5e8:	b	1a698 <Perl_re_exec_indentf@@Base+0xe4c8>
   1a5ec:	ldr	x1, [sp, #176]
   1a5f0:	ldrb	w0, [x1, #88]
   1a5f4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a5f8:	mov	x2, x26
   1a5fc:	mov	x0, x28
   1a600:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a604:	and	w0, w0, #0xff
   1a608:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a60c:	ldr	x0, [sp, #264]
   1a610:	add	x0, x0, #0x1
   1a614:	str	x0, [sp, #264]
   1a618:	cmp	x0, x21
   1a61c:	b.hi	1a65c <Perl_re_exec_indentf@@Base+0xe48c>  // b.pmore
   1a620:	mov	w3, w25
   1a624:	mov	w2, w22
   1a628:	mov	x1, x24
   1a62c:	bl	5dd8 <Perl__inverse_folds@plt+0x3d8>
   1a630:	str	x0, [sp, #264]
   1a634:	cmp	x0, x21
   1a638:	b.hi	20400 <Perl_re_exec_indentf@@Base+0x14230>  // b.pmore
   1a63c:	cmp	x23, #0x1
   1a640:	b.eq	1a5ec <Perl_re_exec_indentf@@Base+0xe41c>  // b.none
   1a644:	mov	w2, w20
   1a648:	mov	x1, x27
   1a64c:	add	x0, x0, #0x1
   1a650:	blr	x19
   1a654:	cbz	w0, 1a60c <Perl_re_exec_indentf@@Base+0xe43c>
   1a658:	b	1a5ec <Perl_re_exec_indentf@@Base+0xe41c>
   1a65c:	mov	x0, #0x0                   	// #0
   1a660:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a664:	ldr	x1, [sp, #176]
   1a668:	ldrb	w0, [x1, #88]
   1a66c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a670:	mov	x2, x25
   1a674:	mov	x0, x28
   1a678:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a67c:	and	w0, w0, #0xff
   1a680:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a684:	ldr	x4, [sp, #264]
   1a688:	add	x4, x4, #0x1
   1a68c:	str	x4, [sp, #264]
   1a690:	cmp	x4, x21
   1a694:	b.hi	1a6c8 <Perl_re_exec_indentf@@Base+0xe4f8>  // b.pmore
   1a698:	ldrb	w0, [x4]
   1a69c:	cmp	w0, w22
   1a6a0:	ccmp	w0, w24, #0x4, ne  // ne = any
   1a6a4:	b.ne	1a684 <Perl_re_exec_indentf@@Base+0xe4b4>  // b.any
   1a6a8:	cmp	x23, #0x1
   1a6ac:	b.eq	1a664 <Perl_re_exec_indentf@@Base+0xe494>  // b.none
   1a6b0:	mov	w2, w20
   1a6b4:	mov	x1, x27
   1a6b8:	add	x0, x4, #0x1
   1a6bc:	blr	x19
   1a6c0:	cbz	w0, 1a684 <Perl_re_exec_indentf@@Base+0xe4b4>
   1a6c4:	b	1a664 <Perl_re_exec_indentf@@Base+0xe494>
   1a6c8:	mov	x0, #0x0                   	// #0
   1a6cc:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a6d0:	mov	x21, #0x2                   	// #2
   1a6d4:	ldr	x19, [sp, #144]
   1a6d8:	ldrb	w0, [x19], #4
   1a6dc:	mov	x22, x0
   1a6e0:	cbz	w20, 1a364 <Perl_re_exec_indentf@@Base+0xe194>
   1a6e4:	add	x2, x19, x0
   1a6e8:	b	1a468 <Perl_re_exec_indentf@@Base+0xe298>
   1a6ec:	mov	x21, #0x8                   	// #8
   1a6f0:	b	1a6d4 <Perl_re_exec_indentf@@Base+0xe504>
   1a6f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a6f8:	add	x3, x3, #0x330
   1a6fc:	add	x3, x3, #0xcf0
   1a700:	mov	w2, #0x964                 	// #2404
   1a704:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a708:	add	x1, x1, #0xcb0
   1a70c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1a710:	add	x0, x0, #0xa80
   1a714:	bl	58e0 <__assert_fail@plt>
   1a718:	mov	x0, x25
   1a71c:	ldr	x1, [sp, #264]
   1a720:	add	x1, x1, x0
   1a724:	str	x1, [sp, #264]
   1a728:	cmp	x1, x23
   1a72c:	b.hi	1a7bc <Perl_re_exec_indentf@@Base+0xe5ec>  // b.pmore
   1a730:	str	x19, [sp, #304]
   1a734:	str	w21, [sp, #8]
   1a738:	strb	w20, [sp]
   1a73c:	mov	x7, x22
   1a740:	mov	x6, #0x0                   	// #0
   1a744:	ldr	x5, [sp, #120]
   1a748:	mov	w4, w26
   1a74c:	mov	x3, #0x0                   	// #0
   1a750:	mov	x2, x24
   1a754:	mov	x0, x28
   1a758:	bl	5400 <Perl_foldEQ_utf8_flags@plt>
   1a75c:	cbz	w0, 1a780 <Perl_re_exec_indentf@@Base+0xe5b0>
   1a760:	ldrb	w0, [x27, #88]
   1a764:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a768:	ldr	x2, [sp, #128]
   1a76c:	mov	x1, x27
   1a770:	mov	x0, x28
   1a774:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1a778:	and	w0, w0, #0xff
   1a77c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1a780:	cbz	w26, 1a718 <Perl_re_exec_indentf@@Base+0xe548>
   1a784:	ldr	x1, [x27, #16]
   1a788:	ldr	x2, [sp, #264]
   1a78c:	cmp	x1, x2
   1a790:	b.cc	1a6f4 <Perl_re_exec_indentf@@Base+0xe524>  // b.lo, b.ul, b.last
   1a794:	sub	x1, x1, x2
   1a798:	mov	x0, #0x0                   	// #0
   1a79c:	cmp	x1, #0x0
   1a7a0:	b.le	1a71c <Perl_re_exec_indentf@@Base+0xe54c>
   1a7a4:	ldrb	w0, [x2]
   1a7a8:	ldr	x2, [sp, #136]
   1a7ac:	ldrb	w0, [x2, w0, sxtw]
   1a7b0:	cmp	x0, x1
   1a7b4:	csel	x0, x0, x1, le
   1a7b8:	b	1a71c <Perl_re_exec_indentf@@Base+0xe54c>
   1a7bc:	mov	x0, #0x0                   	// #0
   1a7c0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1a7c4:	ldr	x0, [x28, #1440]
   1a7c8:	cbnz	x0, 1a8a8 <Perl_re_exec_indentf@@Base+0xe6d8>
   1a7cc:	ldr	x0, [sp, #144]
   1a7d0:	ldrb	w0, [x0]
   1a7d4:	cbnz	w0, 1a8b0 <Perl_re_exec_indentf@@Base+0xe6e0>
   1a7d8:	ldr	w0, [sp, #160]
   1a7dc:	cbz	w0, 1ab88 <Perl_re_exec_indentf@@Base+0xe9b8>
   1a7e0:	ldr	x19, [sp, #176]
   1a7e4:	ldr	x2, [x19, #8]
   1a7e8:	ldr	x0, [sp, #264]
   1a7ec:	cmp	x2, x0
   1a7f0:	b.eq	1a92c <Perl_re_exec_indentf@@Base+0xe75c>  // b.none
   1a7f4:	mov	x1, #0xffffffffffffffff    	// #-1
   1a7f8:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1a7fc:	ldr	x1, [x19, #16]
   1a800:	cbz	x0, 1a8d8 <Perl_re_exec_indentf@@Base+0xe708>
   1a804:	cmp	x1, x0
   1a808:	b.ls	1a90c <Perl_re_exec_indentf@@Base+0xe73c>  // b.plast
   1a80c:	mov	x8, x0
   1a810:	mov	x2, #0x0                   	// #0
   1a814:	mov	x4, #0x0                   	// #0
   1a818:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1a81c:	ldr	x10, [x3, #3824]
   1a820:	mov	w9, #0xff                  	// #255
   1a824:	mov	x7, x10
   1a828:	ldrb	w6, [x8]
   1a82c:	ldrb	w3, [x10, w6, sxtw]
   1a830:	and	x5, x3, #0xff
   1a834:	asr	w3, w9, w3
   1a838:	and	w3, w3, w6
   1a83c:	sxtw	x3, w3
   1a840:	bfi	x6, x2, #6, #58
   1a844:	cmp	x4, #0x0
   1a848:	csel	x2, x6, x3, ne  // ne = any
   1a84c:	add	x3, x7, x5
   1a850:	add	x3, x3, x4
   1a854:	ldrb	w4, [x3, #256]
   1a858:	cbnz	x4, 1a8fc <Perl_re_exec_indentf@@Base+0xe72c>
   1a85c:	mov	w20, w2
   1a860:	cmp	w2, #0xff
   1a864:	b.gt	1a9ac <Perl_re_exec_indentf@@Base+0xe7dc>
   1a868:	sxtw	x2, w2
   1a86c:	mov	w19, #0x0                   	// #0
   1a870:	tst	x2, #0xffffffffffffff00
   1a874:	b.eq	1a930 <Perl_re_exec_indentf@@Base+0xe760>  // b.none
   1a878:	ldr	x1, [sp, #264]
   1a87c:	ldr	x0, [sp, #128]
   1a880:	cmp	x0, x1
   1a884:	b.ls	1aca0 <Perl_re_exec_indentf@@Base+0xead0>  // b.plast
   1a888:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1a88c:	ldr	x25, [x23, #3880]
   1a890:	add	x24, sp, #0x108
   1a894:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1a898:	ldr	x22, [x22, #4064]
   1a89c:	ldr	x27, [sp, #128]
   1a8a0:	ldr	x26, [sp, #176]
   1a8a4:	b	1aa50 <Perl_re_exec_indentf@@Base+0xe880>
   1a8a8:	bl	5050 <Perl__warn_problematic_locale@plt>
   1a8ac:	b	1a7cc <Perl_re_exec_indentf@@Base+0xe5fc>
   1a8b0:	ldrb	w19, [x28, #1180]
   1a8b4:	cbz	w19, 1a8c0 <Perl_re_exec_indentf@@Base+0xe6f0>
   1a8b8:	mov	w19, #0x0                   	// #0
   1a8bc:	b	1c330 <Perl_re_exec_indentf@@Base+0x10160>
   1a8c0:	adrp	x2, 66000 <boot_re@@Base+0x441c>
   1a8c4:	add	x2, x2, #0x490
   1a8c8:	mov	w1, #0x3f                  	// #63
   1a8cc:	mov	x0, x28
   1a8d0:	bl	5150 <Perl_ck_warner@plt>
   1a8d4:	b	1c330 <Perl_re_exec_indentf@@Base+0x10160>
   1a8d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a8dc:	add	x3, x3, #0x330
   1a8e0:	add	x3, x3, #0xc48
   1a8e4:	mov	w2, #0x710                 	// #1808
   1a8e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a8ec:	add	x1, x1, #0xc80
   1a8f0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1a8f4:	add	x0, x0, #0xce8
   1a8f8:	bl	58e0 <__assert_fail@plt>
   1a8fc:	add	x8, x8, #0x1
   1a900:	cmp	x4, #0x1
   1a904:	ccmp	x1, x8, #0x0, ne  // ne = any
   1a908:	b.hi	1a828 <Perl_re_exec_indentf@@Base+0xe658>  // b.pmore
   1a90c:	mov	x5, #0x0                   	// #0
   1a910:	mov	x4, #0x0                   	// #0
   1a914:	mov	w3, #0x0                   	// #0
   1a918:	mov	x2, #0x0                   	// #0
   1a91c:	sub	x1, x1, x0
   1a920:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1a924:	mov	x2, x0
   1a928:	b	1a85c <Perl_re_exec_indentf@@Base+0xe68c>
   1a92c:	mov	w20, #0xa                   	// #10
   1a930:	ldrb	w0, [x28, #1180]
   1a934:	cbz	w0, 1a960 <Perl_re_exec_indentf@@Base+0xe790>
   1a938:	and	x20, x20, #0xff
   1a93c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1a940:	ldr	x0, [x0, #3880]
   1a944:	ldr	w19, [x0, x20, lsl #2]
   1a948:	and	w19, w19, #0x1
   1a94c:	ldr	x1, [sp, #264]
   1a950:	ldr	x0, [sp, #128]
   1a954:	cmp	x1, x0
   1a958:	b.cc	1a888 <Perl_re_exec_indentf@@Base+0xe6b8>  // b.lo, b.ul, b.last
   1a95c:	b	1aca8 <Perl_re_exec_indentf@@Base+0xead8>
   1a960:	bl	54d0 <__ctype_b_loc@plt>
   1a964:	and	w1, w20, #0xff
   1a968:	and	x20, x20, #0xff
   1a96c:	ldr	x0, [x0]
   1a970:	ldrh	w0, [x0, x20, lsl #1]
   1a974:	and	w0, w0, #0x8
   1a978:	cmp	w1, #0x5f
   1a97c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1a980:	cset	w19, ne  // ne = any
   1a984:	ldr	x1, [sp, #264]
   1a988:	ldr	x0, [sp, #128]
   1a98c:	cmp	x1, x0
   1a990:	b.cc	1a888 <Perl_re_exec_indentf@@Base+0xe6b8>  // b.lo, b.ul, b.last
   1a994:	bl	54d0 <__ctype_b_loc@plt>
   1a998:	ldr	x0, [x0]
   1a99c:	ldrh	w1, [x0, #20]
   1a9a0:	eor	x1, x1, #0x8
   1a9a4:	ubfx	x1, x1, #3, #1
   1a9a8:	b	1acbc <Perl_re_exec_indentf@@Base+0xeaec>
   1a9ac:	sxtw	x2, w2
   1a9b0:	mov	w1, #0x0                   	// #0
   1a9b4:	mov	x0, x28
   1a9b8:	bl	58c0 <Perl__is_uni_FOO@plt>
   1a9bc:	and	w19, w0, #0xff
   1a9c0:	b	1a878 <Perl_re_exec_indentf@@Base+0xe6a8>
   1a9c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1a9c8:	add	x3, x3, #0x330
   1a9cc:	add	x3, x3, #0xcf0
   1a9d0:	mov	w2, #0x973                 	// #2419
   1a9d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1a9d8:	add	x1, x1, #0xcb0
   1a9dc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1a9e0:	add	x0, x0, #0xaa0
   1a9e4:	bl	58e0 <__assert_fail@plt>
   1a9e8:	bl	54d0 <__ctype_b_loc@plt>
   1a9ec:	and	x1, x21, #0xff
   1a9f0:	ldr	x0, [x0]
   1a9f4:	ldrh	w0, [x0, x1, lsl #1]
   1a9f8:	and	w0, w0, #0x8
   1a9fc:	cmp	w21, #0x5f
   1aa00:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1aa04:	cset	w0, eq  // eq = none
   1aa08:	cmp	w0, w19
   1aa0c:	b.eq	1ab28 <Perl_re_exec_indentf@@Base+0xe958>  // b.none
   1aa10:	ldr	x0, [x26, #16]
   1aa14:	ldr	x1, [sp, #264]
   1aa18:	cmp	x0, x1
   1aa1c:	b.cc	1ab40 <Perl_re_exec_indentf@@Base+0xe970>  // b.lo, b.ul, b.last
   1aa20:	sub	x0, x0, x1
   1aa24:	mov	x2, #0x0                   	// #0
   1aa28:	cmp	x0, #0x0
   1aa2c:	b.le	1aa40 <Perl_re_exec_indentf@@Base+0xe870>
   1aa30:	ldrb	w2, [x1]
   1aa34:	ldrb	w2, [x22, w2, sxtw]
   1aa38:	cmp	x2, x0
   1aa3c:	csel	x2, x2, x0, le
   1aa40:	add	x1, x1, x2
   1aa44:	str	x1, [sp, #264]
   1aa48:	cmp	x1, x27
   1aa4c:	b.cs	1aca0 <Perl_re_exec_indentf@@Base+0xead0>  // b.hs, b.nlast
   1aa50:	ldr	x2, [x26, #16]
   1aa54:	cmp	x2, x1
   1aa58:	b.ls	1a9c4 <Perl_re_exec_indentf@@Base+0xe7f4>  // b.plast
   1aa5c:	ldrb	w21, [x1]
   1aa60:	tbnz	w21, #7, 1aa80 <Perl_re_exec_indentf@@Base+0xe8b0>
   1aa64:	ldrb	w0, [x28, #1180]
   1aa68:	cbz	w0, 1a9e8 <Perl_re_exec_indentf@@Base+0xe818>
   1aa6c:	ldr	x0, [x23, #3880]
   1aa70:	ldr	w0, [x0, w21, sxtw #2]
   1aa74:	tst	x0, #0x1
   1aa78:	cset	w0, eq  // eq = none
   1aa7c:	b	1aa08 <Perl_re_exec_indentf@@Base+0xe838>
   1aa80:	and	w0, w21, #0xfe
   1aa84:	cmp	w0, #0xc2
   1aa88:	b.ne	1ab08 <Perl_re_exec_indentf@@Base+0xe938>  // b.any
   1aa8c:	sub	x0, x2, x1
   1aa90:	cmp	x0, #0x1
   1aa94:	b.le	1aaf0 <Perl_re_exec_indentf@@Base+0xe920>
   1aa98:	ldrb	w20, [x1, #1]
   1aa9c:	and	w0, w20, #0xc0
   1aaa0:	cmp	w0, #0x80
   1aaa4:	b.ne	1aaf0 <Perl_re_exec_indentf@@Base+0xe920>  // b.any
   1aaa8:	ldrb	w0, [x28, #1180]
   1aaac:	cbz	w0, 1aacc <Perl_re_exec_indentf@@Base+0xe8fc>
   1aab0:	mov	w0, w20
   1aab4:	bfi	w0, w21, #6, #26
   1aab8:	and	x0, x0, #0xff
   1aabc:	ldr	w0, [x25, x0, lsl #2]
   1aac0:	eor	w0, w0, #0x1
   1aac4:	and	w0, w0, #0x1
   1aac8:	b	1aa08 <Perl_re_exec_indentf@@Base+0xe838>
   1aacc:	bl	54d0 <__ctype_b_loc@plt>
   1aad0:	mov	w1, w20
   1aad4:	bfi	w1, w21, #6, #26
   1aad8:	and	x1, x1, #0xff
   1aadc:	ldr	x0, [x0]
   1aae0:	ldrh	w0, [x0, x1, lsl #1]
   1aae4:	tst	x0, #0x8
   1aae8:	cset	w0, eq  // eq = none
   1aaec:	b	1aa08 <Perl_re_exec_indentf@@Base+0xe838>
   1aaf0:	mov	w4, #0x1                   	// #1
   1aaf4:	mov	w3, #0x0                   	// #0
   1aaf8:	mov	x0, x28
   1aafc:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1ab00:	mov	w0, #0x1                   	// #1
   1ab04:	b	1aa08 <Perl_re_exec_indentf@@Base+0xe838>
   1ab08:	mov	x3, x2
   1ab0c:	mov	x2, x1
   1ab10:	mov	w1, #0x0                   	// #0
   1ab14:	mov	x0, x28
   1ab18:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1ab1c:	and	w0, w0, #0xff
   1ab20:	eor	w0, w0, #0x1
   1ab24:	b	1aa08 <Perl_re_exec_indentf@@Base+0xe838>
   1ab28:	ldrb	w0, [x26, #88]
   1ab2c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ab30:	ldr	x1, [x26, #16]
   1ab34:	ldr	x0, [sp, #264]
   1ab38:	cmp	x1, x0
   1ab3c:	b.cs	1ab64 <Perl_re_exec_indentf@@Base+0xe994>  // b.hs, b.nlast
   1ab40:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ab44:	add	x3, x3, #0x330
   1ab48:	add	x3, x3, #0xcf0
   1ab4c:	mov	w2, #0x973                 	// #2419
   1ab50:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ab54:	add	x1, x1, #0xcb0
   1ab58:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ab5c:	add	x0, x0, #0xa80
   1ab60:	bl	58e0 <__assert_fail@plt>
   1ab64:	mov	x2, x24
   1ab68:	mov	x1, x26
   1ab6c:	mov	x0, x28
   1ab70:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1ab74:	and	w0, w0, #0xff
   1ab78:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ab7c:	cmp	w19, #0x0
   1ab80:	cset	w19, eq  // eq = none
   1ab84:	b	1aa10 <Perl_re_exec_indentf@@Base+0xe840>
   1ab88:	ldr	x20, [sp, #264]
   1ab8c:	ldr	x0, [sp, #176]
   1ab90:	ldr	x0, [x0, #8]
   1ab94:	mov	w19, #0xa                   	// #10
   1ab98:	cmp	x0, x20
   1ab9c:	b.eq	1aba4 <Perl_re_exec_indentf@@Base+0xe9d4>  // b.none
   1aba0:	ldurb	w19, [x20, #-1]
   1aba4:	ldrb	w0, [x28, #1180]
   1aba8:	cbz	w0, 1abdc <Perl_re_exec_indentf@@Base+0xea0c>
   1abac:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1abb0:	ldr	x0, [x0, #3880]
   1abb4:	ldr	w19, [x0, w19, sxtw #2]
   1abb8:	and	w19, w19, #0x1
   1abbc:	ldr	x0, [sp, #128]
   1abc0:	cmp	x20, x0
   1abc4:	b.cs	1aca0 <Perl_re_exec_indentf@@Base+0xead0>  // b.hs, b.nlast
   1abc8:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1abcc:	ldr	x21, [x21, #3880]
   1abd0:	add	x22, sp, #0x108
   1abd4:	ldr	x23, [sp, #176]
   1abd8:	b	1ac48 <Perl_re_exec_indentf@@Base+0xea78>
   1abdc:	bl	54d0 <__ctype_b_loc@plt>
   1abe0:	and	w1, w19, #0xff
   1abe4:	and	x19, x19, #0xff
   1abe8:	ldr	x0, [x0]
   1abec:	ldrh	w0, [x0, x19, lsl #1]
   1abf0:	and	w0, w0, #0x8
   1abf4:	cmp	w1, #0x5f
   1abf8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1abfc:	cset	w19, ne  // ne = any
   1ac00:	b	1abbc <Perl_re_exec_indentf@@Base+0xe9ec>
   1ac04:	bl	54d0 <__ctype_b_loc@plt>
   1ac08:	ldrb	w1, [x20]
   1ac0c:	and	x2, x1, #0xff
   1ac10:	ldr	x0, [x0]
   1ac14:	ldrh	w0, [x0, x2, lsl #1]
   1ac18:	and	w0, w0, #0x8
   1ac1c:	cmp	w1, #0x5f
   1ac20:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1ac24:	cset	w0, eq  // eq = none
   1ac28:	cmp	w0, w19
   1ac2c:	b.eq	1ac64 <Perl_re_exec_indentf@@Base+0xea94>  // b.none
   1ac30:	ldr	x20, [sp, #264]
   1ac34:	add	x20, x20, #0x1
   1ac38:	str	x20, [sp, #264]
   1ac3c:	ldr	x0, [sp, #128]
   1ac40:	cmp	x20, x0
   1ac44:	b.cs	1aca0 <Perl_re_exec_indentf@@Base+0xead0>  // b.hs, b.nlast
   1ac48:	ldrb	w0, [x28, #1180]
   1ac4c:	cbz	w0, 1ac04 <Perl_re_exec_indentf@@Base+0xea34>
   1ac50:	ldrb	w0, [x20]
   1ac54:	ldr	w0, [x21, x0, lsl #2]
   1ac58:	eor	w0, w0, #0x1
   1ac5c:	and	w0, w0, #0x1
   1ac60:	b	1ac28 <Perl_re_exec_indentf@@Base+0xea58>
   1ac64:	ldrb	w0, [x23, #88]
   1ac68:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ac6c:	ldr	x0, [x23, #16]
   1ac70:	cmp	x0, x20
   1ac74:	b.cs	1ac84 <Perl_re_exec_indentf@@Base+0xeab4>  // b.hs, b.nlast
   1ac78:	cmp	w19, #0x0
   1ac7c:	cset	w19, eq  // eq = none
   1ac80:	b	1ac30 <Perl_re_exec_indentf@@Base+0xea60>
   1ac84:	mov	x2, x22
   1ac88:	mov	x1, x23
   1ac8c:	mov	x0, x28
   1ac90:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1ac94:	and	w0, w0, #0xff
   1ac98:	cbz	w0, 1ac78 <Perl_re_exec_indentf@@Base+0xeaa8>
   1ac9c:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1aca0:	ldrb	w0, [x28, #1180]
   1aca4:	cbz	w0, 1a994 <Perl_re_exec_indentf@@Base+0xe7c4>
   1aca8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1acac:	ldr	x0, [x0, #3880]
   1acb0:	ldr	w1, [x0, #40]
   1acb4:	eor	w1, w1, #0x1
   1acb8:	and	w1, w1, #0x1
   1acbc:	mov	x0, #0x0                   	// #0
   1acc0:	cmp	w1, w19
   1acc4:	b.ne	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.any
   1acc8:	ldr	x3, [sp, #176]
   1accc:	ldrb	w0, [x3, #88]
   1acd0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1acd4:	ldr	x2, [x3, #16]
   1acd8:	mov	x0, #0x0                   	// #0
   1acdc:	ldr	x1, [sp, #264]
   1ace0:	cmp	x2, x1
   1ace4:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1ace8:	add	x2, sp, #0x108
   1acec:	mov	x1, x3
   1acf0:	mov	x0, x28
   1acf4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1acf8:	and	w0, w0, #0xff
   1acfc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ad00:	mov	x0, #0x0                   	// #0
   1ad04:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ad08:	ldr	x0, [x28, #1440]
   1ad0c:	cbnz	x0, 1adec <Perl_re_exec_indentf@@Base+0xec1c>
   1ad10:	ldr	x0, [sp, #144]
   1ad14:	ldrb	w0, [x0]
   1ad18:	cbnz	w0, 1adf4 <Perl_re_exec_indentf@@Base+0xec24>
   1ad1c:	ldr	w0, [sp, #160]
   1ad20:	cbz	w0, 1b0c8 <Perl_re_exec_indentf@@Base+0xeef8>
   1ad24:	ldr	x19, [sp, #176]
   1ad28:	ldr	x2, [x19, #8]
   1ad2c:	ldr	x0, [sp, #264]
   1ad30:	cmp	x2, x0
   1ad34:	b.eq	1ae6c <Perl_re_exec_indentf@@Base+0xec9c>  // b.none
   1ad38:	mov	x1, #0xffffffffffffffff    	// #-1
   1ad3c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1ad40:	ldr	x1, [x19, #16]
   1ad44:	cbz	x0, 1ae18 <Perl_re_exec_indentf@@Base+0xec48>
   1ad48:	cmp	x1, x0
   1ad4c:	b.ls	1ae4c <Perl_re_exec_indentf@@Base+0xec7c>  // b.plast
   1ad50:	mov	x8, x0
   1ad54:	mov	x2, #0x0                   	// #0
   1ad58:	mov	x4, #0x0                   	// #0
   1ad5c:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1ad60:	ldr	x10, [x3, #3824]
   1ad64:	mov	w9, #0xff                  	// #255
   1ad68:	mov	x7, x10
   1ad6c:	ldrb	w6, [x8]
   1ad70:	ldrb	w3, [x10, w6, sxtw]
   1ad74:	and	x5, x3, #0xff
   1ad78:	asr	w3, w9, w3
   1ad7c:	and	w3, w3, w6
   1ad80:	sxtw	x3, w3
   1ad84:	bfi	x6, x2, #6, #58
   1ad88:	cmp	x4, #0x0
   1ad8c:	csel	x2, x6, x3, ne  // ne = any
   1ad90:	add	x3, x7, x5
   1ad94:	add	x3, x3, x4
   1ad98:	ldrb	w4, [x3, #256]
   1ad9c:	cbnz	x4, 1ae3c <Perl_re_exec_indentf@@Base+0xec6c>
   1ada0:	mov	w20, w2
   1ada4:	cmp	w2, #0xff
   1ada8:	b.gt	1aeec <Perl_re_exec_indentf@@Base+0xed1c>
   1adac:	sxtw	x2, w2
   1adb0:	mov	w19, #0x0                   	// #0
   1adb4:	tst	x2, #0xffffffffffffff00
   1adb8:	b.eq	1ae70 <Perl_re_exec_indentf@@Base+0xeca0>  // b.none
   1adbc:	ldr	x1, [sp, #264]
   1adc0:	ldr	x0, [sp, #128]
   1adc4:	cmp	x0, x1
   1adc8:	b.ls	1b1dc <Perl_re_exec_indentf@@Base+0xf00c>  // b.plast
   1adcc:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1add0:	ldr	x25, [x23, #3880]
   1add4:	add	x24, sp, #0x108
   1add8:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1addc:	ldr	x22, [x22, #4064]
   1ade0:	ldr	x27, [sp, #128]
   1ade4:	ldr	x26, [sp, #176]
   1ade8:	b	1b03c <Perl_re_exec_indentf@@Base+0xee6c>
   1adec:	bl	5050 <Perl__warn_problematic_locale@plt>
   1adf0:	b	1ad10 <Perl_re_exec_indentf@@Base+0xeb40>
   1adf4:	ldrb	w19, [x28, #1180]
   1adf8:	cbnz	w19, 1c330 <Perl_re_exec_indentf@@Base+0x10160>
   1adfc:	adrp	x2, 66000 <boot_re@@Base+0x441c>
   1ae00:	add	x2, x2, #0x490
   1ae04:	mov	w1, #0x3f                  	// #63
   1ae08:	mov	x0, x28
   1ae0c:	bl	5150 <Perl_ck_warner@plt>
   1ae10:	mov	w19, #0x1                   	// #1
   1ae14:	b	1c330 <Perl_re_exec_indentf@@Base+0x10160>
   1ae18:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ae1c:	add	x3, x3, #0x330
   1ae20:	add	x3, x3, #0xc48
   1ae24:	mov	w2, #0x710                 	// #1808
   1ae28:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ae2c:	add	x1, x1, #0xc80
   1ae30:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1ae34:	add	x0, x0, #0xce8
   1ae38:	bl	58e0 <__assert_fail@plt>
   1ae3c:	add	x8, x8, #0x1
   1ae40:	cmp	x1, x8
   1ae44:	ccmp	x4, #0x1, #0x4, hi  // hi = pmore
   1ae48:	b.ne	1ad6c <Perl_re_exec_indentf@@Base+0xeb9c>  // b.any
   1ae4c:	mov	x5, #0x0                   	// #0
   1ae50:	mov	x4, #0x0                   	// #0
   1ae54:	mov	w3, #0x0                   	// #0
   1ae58:	mov	x2, #0x0                   	// #0
   1ae5c:	sub	x1, x1, x0
   1ae60:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1ae64:	mov	x2, x0
   1ae68:	b	1ada0 <Perl_re_exec_indentf@@Base+0xebd0>
   1ae6c:	mov	w20, #0xa                   	// #10
   1ae70:	ldrb	w0, [x28, #1180]
   1ae74:	cbz	w0, 1aea0 <Perl_re_exec_indentf@@Base+0xecd0>
   1ae78:	and	x20, x20, #0xff
   1ae7c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1ae80:	ldr	x0, [x0, #3880]
   1ae84:	ldr	w19, [x0, x20, lsl #2]
   1ae88:	and	w19, w19, #0x1
   1ae8c:	ldr	x1, [sp, #264]
   1ae90:	ldr	x0, [sp, #128]
   1ae94:	cmp	x0, x1
   1ae98:	b.hi	1adcc <Perl_re_exec_indentf@@Base+0xebfc>  // b.pmore
   1ae9c:	b	1b1e4 <Perl_re_exec_indentf@@Base+0xf014>
   1aea0:	bl	54d0 <__ctype_b_loc@plt>
   1aea4:	and	w1, w20, #0xff
   1aea8:	and	x20, x20, #0xff
   1aeac:	ldr	x0, [x0]
   1aeb0:	ldrh	w0, [x0, x20, lsl #1]
   1aeb4:	and	w0, w0, #0x8
   1aeb8:	cmp	w1, #0x5f
   1aebc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1aec0:	cset	w19, ne  // ne = any
   1aec4:	ldr	x1, [sp, #264]
   1aec8:	ldr	x0, [sp, #128]
   1aecc:	cmp	x0, x1
   1aed0:	b.hi	1adcc <Perl_re_exec_indentf@@Base+0xebfc>  // b.pmore
   1aed4:	bl	54d0 <__ctype_b_loc@plt>
   1aed8:	ldr	x0, [x0]
   1aedc:	ldrh	w0, [x0, #20]
   1aee0:	eor	x0, x0, #0x8
   1aee4:	ubfx	x0, x0, #3, #1
   1aee8:	b	1b1f8 <Perl_re_exec_indentf@@Base+0xf028>
   1aeec:	sxtw	x2, w2
   1aef0:	mov	w1, #0x0                   	// #0
   1aef4:	mov	x0, x28
   1aef8:	bl	58c0 <Perl__is_uni_FOO@plt>
   1aefc:	and	w19, w0, #0xff
   1af00:	b	1adbc <Perl_re_exec_indentf@@Base+0xebec>
   1af04:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1af08:	add	x3, x3, #0x330
   1af0c:	add	x3, x3, #0xcf0
   1af10:	mov	w2, #0x980                 	// #2432
   1af14:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1af18:	add	x1, x1, #0xcb0
   1af1c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1af20:	add	x0, x0, #0xaa0
   1af24:	bl	58e0 <__assert_fail@plt>
   1af28:	bl	54d0 <__ctype_b_loc@plt>
   1af2c:	and	x1, x21, #0xff
   1af30:	ldr	x0, [x0]
   1af34:	ldrh	w0, [x0, x1, lsl #1]
   1af38:	and	w0, w0, #0x8
   1af3c:	cmp	w21, #0x5f
   1af40:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1af44:	cset	w0, eq  // eq = none
   1af48:	b	1b068 <Perl_re_exec_indentf@@Base+0xee98>
   1af4c:	and	w0, w21, #0xfe
   1af50:	cmp	w0, #0xc2
   1af54:	b.ne	1afd4 <Perl_re_exec_indentf@@Base+0xee04>  // b.any
   1af58:	sub	x0, x2, x1
   1af5c:	cmp	x0, #0x1
   1af60:	b.le	1afbc <Perl_re_exec_indentf@@Base+0xedec>
   1af64:	ldrb	w20, [x1, #1]
   1af68:	and	w0, w20, #0xc0
   1af6c:	cmp	w0, #0x80
   1af70:	b.ne	1afbc <Perl_re_exec_indentf@@Base+0xedec>  // b.any
   1af74:	ldrb	w0, [x28, #1180]
   1af78:	cbz	w0, 1af98 <Perl_re_exec_indentf@@Base+0xedc8>
   1af7c:	mov	w0, w20
   1af80:	bfi	w0, w21, #6, #26
   1af84:	and	x0, x0, #0xff
   1af88:	ldr	w0, [x25, x0, lsl #2]
   1af8c:	eor	w0, w0, #0x1
   1af90:	and	w0, w0, #0x1
   1af94:	b	1b068 <Perl_re_exec_indentf@@Base+0xee98>
   1af98:	bl	54d0 <__ctype_b_loc@plt>
   1af9c:	mov	w1, w20
   1afa0:	bfi	w1, w21, #6, #26
   1afa4:	and	x1, x1, #0xff
   1afa8:	ldr	x0, [x0]
   1afac:	ldrh	w0, [x0, x1, lsl #1]
   1afb0:	tst	x0, #0x8
   1afb4:	cset	w0, eq  // eq = none
   1afb8:	b	1b068 <Perl_re_exec_indentf@@Base+0xee98>
   1afbc:	mov	w4, #0x1                   	// #1
   1afc0:	mov	w3, #0x0                   	// #0
   1afc4:	mov	x0, x28
   1afc8:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1afcc:	mov	w0, #0x1                   	// #1
   1afd0:	b	1b068 <Perl_re_exec_indentf@@Base+0xee98>
   1afd4:	mov	x3, x2
   1afd8:	mov	x2, x1
   1afdc:	mov	w1, #0x0                   	// #0
   1afe0:	mov	x0, x28
   1afe4:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1afe8:	and	w0, w0, #0xff
   1afec:	eor	w0, w0, #0x1
   1aff0:	b	1b068 <Perl_re_exec_indentf@@Base+0xee98>
   1aff4:	cmp	w19, #0x0
   1aff8:	cset	w19, eq  // eq = none
   1affc:	ldr	x0, [x26, #16]
   1b000:	ldr	x1, [sp, #264]
   1b004:	cmp	x0, x1
   1b008:	b.cc	1b088 <Perl_re_exec_indentf@@Base+0xeeb8>  // b.lo, b.ul, b.last
   1b00c:	sub	x0, x0, x1
   1b010:	mov	x2, #0x0                   	// #0
   1b014:	cmp	x0, #0x0
   1b018:	b.le	1b02c <Perl_re_exec_indentf@@Base+0xee5c>
   1b01c:	ldrb	w2, [x1]
   1b020:	ldrb	w2, [x22, w2, sxtw]
   1b024:	cmp	x2, x0
   1b028:	csel	x2, x2, x0, le
   1b02c:	add	x1, x1, x2
   1b030:	str	x1, [sp, #264]
   1b034:	cmp	x1, x27
   1b038:	b.cs	1b1dc <Perl_re_exec_indentf@@Base+0xf00c>  // b.hs, b.nlast
   1b03c:	ldr	x2, [x26, #16]
   1b040:	cmp	x2, x1
   1b044:	b.ls	1af04 <Perl_re_exec_indentf@@Base+0xed34>  // b.plast
   1b048:	ldrb	w21, [x1]
   1b04c:	tbnz	w21, #7, 1af4c <Perl_re_exec_indentf@@Base+0xed7c>
   1b050:	ldrb	w0, [x28, #1180]
   1b054:	cbz	w0, 1af28 <Perl_re_exec_indentf@@Base+0xed58>
   1b058:	ldr	x0, [x23, #3880]
   1b05c:	ldr	w0, [x0, w21, sxtw #2]
   1b060:	tst	x0, #0x1
   1b064:	cset	w0, eq  // eq = none
   1b068:	cmp	w0, w19
   1b06c:	b.eq	1aff4 <Perl_re_exec_indentf@@Base+0xee24>  // b.none
   1b070:	ldrb	w0, [x26, #88]
   1b074:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b078:	ldr	x1, [x26, #16]
   1b07c:	ldr	x0, [sp, #264]
   1b080:	cmp	x1, x0
   1b084:	b.cs	1b0ac <Perl_re_exec_indentf@@Base+0xeedc>  // b.hs, b.nlast
   1b088:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b08c:	add	x3, x3, #0x330
   1b090:	add	x3, x3, #0xcf0
   1b094:	mov	w2, #0x980                 	// #2432
   1b098:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b09c:	add	x1, x1, #0xcb0
   1b0a0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b0a4:	add	x0, x0, #0xa80
   1b0a8:	bl	58e0 <__assert_fail@plt>
   1b0ac:	mov	x2, x24
   1b0b0:	mov	x1, x26
   1b0b4:	mov	x0, x28
   1b0b8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b0bc:	and	w0, w0, #0xff
   1b0c0:	cbz	w0, 1affc <Perl_re_exec_indentf@@Base+0xee2c>
   1b0c4:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b0c8:	ldr	x20, [sp, #264]
   1b0cc:	ldr	x0, [sp, #176]
   1b0d0:	ldr	x0, [x0, #8]
   1b0d4:	mov	w19, #0xa                   	// #10
   1b0d8:	cmp	x0, x20
   1b0dc:	b.eq	1b0e4 <Perl_re_exec_indentf@@Base+0xef14>  // b.none
   1b0e0:	ldurb	w19, [x20, #-1]
   1b0e4:	ldrb	w0, [x28, #1180]
   1b0e8:	cbz	w0, 1b11c <Perl_re_exec_indentf@@Base+0xef4c>
   1b0ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b0f0:	ldr	x0, [x0, #3880]
   1b0f4:	ldr	w19, [x0, w19, sxtw #2]
   1b0f8:	and	w19, w19, #0x1
   1b0fc:	ldr	x0, [sp, #128]
   1b100:	cmp	x20, x0
   1b104:	b.cs	1b1dc <Perl_re_exec_indentf@@Base+0xf00c>  // b.hs, b.nlast
   1b108:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1b10c:	ldr	x21, [x21, #3880]
   1b110:	add	x22, sp, #0x108
   1b114:	ldr	x23, [sp, #176]
   1b118:	b	1b18c <Perl_re_exec_indentf@@Base+0xefbc>
   1b11c:	bl	54d0 <__ctype_b_loc@plt>
   1b120:	and	w1, w19, #0xff
   1b124:	and	x19, x19, #0xff
   1b128:	ldr	x0, [x0]
   1b12c:	ldrh	w0, [x0, x19, lsl #1]
   1b130:	and	w0, w0, #0x8
   1b134:	cmp	w1, #0x5f
   1b138:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1b13c:	cset	w19, ne  // ne = any
   1b140:	b	1b0fc <Perl_re_exec_indentf@@Base+0xef2c>
   1b144:	bl	54d0 <__ctype_b_loc@plt>
   1b148:	ldrb	w1, [x20]
   1b14c:	and	x2, x1, #0xff
   1b150:	ldr	x0, [x0]
   1b154:	ldrh	w0, [x0, x2, lsl #1]
   1b158:	and	w0, w0, #0x8
   1b15c:	cmp	w1, #0x5f
   1b160:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1b164:	cset	w0, eq  // eq = none
   1b168:	b	1b1a4 <Perl_re_exec_indentf@@Base+0xefd4>
   1b16c:	cmp	w19, #0x0
   1b170:	cset	w19, eq  // eq = none
   1b174:	ldr	x20, [sp, #264]
   1b178:	add	x20, x20, #0x1
   1b17c:	str	x20, [sp, #264]
   1b180:	ldr	x0, [sp, #128]
   1b184:	cmp	x20, x0
   1b188:	b.cs	1b1dc <Perl_re_exec_indentf@@Base+0xf00c>  // b.hs, b.nlast
   1b18c:	ldrb	w0, [x28, #1180]
   1b190:	cbz	w0, 1b144 <Perl_re_exec_indentf@@Base+0xef74>
   1b194:	ldrb	w0, [x20]
   1b198:	ldr	w0, [x21, x0, lsl #2]
   1b19c:	eor	w0, w0, #0x1
   1b1a0:	and	w0, w0, #0x1
   1b1a4:	cmp	w0, w19
   1b1a8:	b.eq	1b16c <Perl_re_exec_indentf@@Base+0xef9c>  // b.none
   1b1ac:	ldrb	w0, [x23, #88]
   1b1b0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b1b4:	ldr	x0, [x23, #16]
   1b1b8:	cmp	x0, x20
   1b1bc:	b.cc	1b174 <Perl_re_exec_indentf@@Base+0xefa4>  // b.lo, b.ul, b.last
   1b1c0:	mov	x2, x22
   1b1c4:	mov	x1, x23
   1b1c8:	mov	x0, x28
   1b1cc:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b1d0:	and	w0, w0, #0xff
   1b1d4:	cbz	w0, 1b174 <Perl_re_exec_indentf@@Base+0xefa4>
   1b1d8:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b1dc:	ldrb	w0, [x28, #1180]
   1b1e0:	cbz	w0, 1aed4 <Perl_re_exec_indentf@@Base+0xed04>
   1b1e4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b1e8:	ldr	x0, [x0, #3880]
   1b1ec:	ldr	w0, [x0, #40]
   1b1f0:	eor	w0, w0, #0x1
   1b1f4:	and	w0, w0, #0x1
   1b1f8:	cmp	w0, w19
   1b1fc:	b.eq	20410 <Perl_re_exec_indentf@@Base+0x14240>  // b.none
   1b200:	ldr	x3, [sp, #176]
   1b204:	ldrb	w0, [x3, #88]
   1b208:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b20c:	ldr	x2, [x3, #16]
   1b210:	mov	x0, #0x0                   	// #0
   1b214:	ldr	x1, [sp, #264]
   1b218:	cmp	x2, x1
   1b21c:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1b220:	add	x2, sp, #0x108
   1b224:	mov	x1, x3
   1b228:	mov	x0, x28
   1b22c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b230:	and	w0, w0, #0xff
   1b234:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b238:	mov	x0, #0x0                   	// #0
   1b23c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1b240:	ldr	x0, [sp, #144]
   1b244:	ldrb	w0, [x0]
   1b248:	cbnz	w0, 1b318 <Perl_re_exec_indentf@@Base+0xf148>
   1b24c:	ldr	w0, [sp, #160]
   1b250:	cbz	w0, 1b534 <Perl_re_exec_indentf@@Base+0xf364>
   1b254:	ldr	x19, [sp, #176]
   1b258:	ldr	x2, [x19, #8]
   1b25c:	ldr	x0, [sp, #152]
   1b260:	cmp	x0, x2
   1b264:	b.eq	1b390 <Perl_re_exec_indentf@@Base+0xf1c0>  // b.none
   1b268:	mov	x1, #0xffffffffffffffff    	// #-1
   1b26c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1b270:	ldr	x1, [x19, #16]
   1b274:	cbz	x0, 1b33c <Perl_re_exec_indentf@@Base+0xf16c>
   1b278:	cmp	x1, x0
   1b27c:	b.ls	1b370 <Perl_re_exec_indentf@@Base+0xf1a0>  // b.plast
   1b280:	mov	x8, x0
   1b284:	mov	x2, #0x0                   	// #0
   1b288:	mov	x4, #0x0                   	// #0
   1b28c:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1b290:	ldr	x10, [x3, #3824]
   1b294:	mov	w9, #0xff                  	// #255
   1b298:	mov	x7, x10
   1b29c:	ldrb	w6, [x8]
   1b2a0:	ldrb	w3, [x10, w6, sxtw]
   1b2a4:	and	x5, x3, #0xff
   1b2a8:	asr	w3, w9, w3
   1b2ac:	and	w3, w3, w6
   1b2b0:	sxtw	x3, w3
   1b2b4:	bfi	x6, x2, #6, #58
   1b2b8:	cmp	x4, #0x0
   1b2bc:	csel	x2, x6, x3, ne  // ne = any
   1b2c0:	add	x3, x7, x5
   1b2c4:	add	x3, x3, x4
   1b2c8:	ldrb	w4, [x3, #256]
   1b2cc:	cbnz	x4, 1b360 <Perl_re_exec_indentf@@Base+0xf190>
   1b2d0:	mov	w0, w2
   1b2d4:	cmp	w2, #0xff
   1b2d8:	b.gt	1b3b0 <Perl_re_exec_indentf@@Base+0xf1e0>
   1b2dc:	sxtw	x2, w2
   1b2e0:	tst	x2, #0xffffffffffffff00
   1b2e4:	b.eq	1b394 <Perl_re_exec_indentf@@Base+0xf1c4>  // b.none
   1b2e8:	mov	w19, #0x0                   	// #0
   1b2ec:	ldr	x1, [sp, #264]
   1b2f0:	ldr	x25, [sp, #128]
   1b2f4:	cmp	x1, x25
   1b2f8:	b.cs	1b5f4 <Perl_re_exec_indentf@@Base+0xf424>  // b.hs, b.nlast
   1b2fc:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1b300:	ldr	x23, [x21, #3880]
   1b304:	add	x22, sp, #0x108
   1b308:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1b30c:	ldr	x20, [x20, #4064]
   1b310:	ldr	x24, [sp, #176]
   1b314:	b	1b4d4 <Perl_re_exec_indentf@@Base+0xf304>
   1b318:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b31c:	add	x3, x3, #0x330
   1b320:	add	x3, x3, #0xcf0
   1b324:	mov	w2, #0x985                 	// #2437
   1b328:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b32c:	add	x1, x1, #0xcb0
   1b330:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b334:	add	x0, x0, #0xac8
   1b338:	bl	58e0 <__assert_fail@plt>
   1b33c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b340:	add	x3, x3, #0x330
   1b344:	add	x3, x3, #0xc48
   1b348:	mov	w2, #0x710                 	// #1808
   1b34c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b350:	add	x1, x1, #0xc80
   1b354:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1b358:	add	x0, x0, #0xce8
   1b35c:	bl	58e0 <__assert_fail@plt>
   1b360:	add	x8, x8, #0x1
   1b364:	cmp	x4, #0x1
   1b368:	ccmp	x1, x8, #0x0, ne  // ne = any
   1b36c:	b.hi	1b29c <Perl_re_exec_indentf@@Base+0xf0cc>  // b.pmore
   1b370:	mov	x5, #0x0                   	// #0
   1b374:	mov	x4, #0x0                   	// #0
   1b378:	mov	w3, #0x0                   	// #0
   1b37c:	mov	x2, #0x0                   	// #0
   1b380:	sub	x1, x1, x0
   1b384:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1b388:	mov	x2, x0
   1b38c:	b	1b2d0 <Perl_re_exec_indentf@@Base+0xf100>
   1b390:	mov	w0, #0xa                   	// #10
   1b394:	and	x0, x0, #0xff
   1b398:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1b39c:	ldr	x1, [x1, #3880]
   1b3a0:	ldr	w0, [x1, x0, lsl #2]
   1b3a4:	mov	w19, #0x1                   	// #1
   1b3a8:	tbnz	w0, #0, 1b2ec <Perl_re_exec_indentf@@Base+0xf11c>
   1b3ac:	b	1b2e8 <Perl_re_exec_indentf@@Base+0xf118>
   1b3b0:	sxtw	x2, w2
   1b3b4:	mov	w1, #0x0                   	// #0
   1b3b8:	mov	x0, x28
   1b3bc:	bl	58c0 <Perl__is_uni_FOO@plt>
   1b3c0:	and	w19, w0, #0xff
   1b3c4:	b	1b2ec <Perl_re_exec_indentf@@Base+0xf11c>
   1b3c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b3cc:	add	x3, x3, #0x330
   1b3d0:	add	x3, x3, #0xcf0
   1b3d4:	mov	w2, #0x987                 	// #2439
   1b3d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b3dc:	add	x1, x1, #0xcb0
   1b3e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b3e4:	add	x0, x0, #0xaa0
   1b3e8:	bl	58e0 <__assert_fail@plt>
   1b3ec:	and	w3, w0, #0xfe
   1b3f0:	cmp	w3, #0xc2
   1b3f4:	b.ne	1b444 <Perl_re_exec_indentf@@Base+0xf274>  // b.any
   1b3f8:	sub	x3, x2, x1
   1b3fc:	cmp	x3, #0x1
   1b400:	b.le	1b42c <Perl_re_exec_indentf@@Base+0xf25c>
   1b404:	ldrb	w3, [x1, #1]
   1b408:	and	w4, w3, #0xc0
   1b40c:	cmp	w4, #0x80
   1b410:	b.ne	1b42c <Perl_re_exec_indentf@@Base+0xf25c>  // b.any
   1b414:	bfi	w3, w0, #6, #26
   1b418:	and	x0, x3, #0xff
   1b41c:	ldr	w0, [x23, x0, lsl #2]
   1b420:	eor	w0, w0, #0x1
   1b424:	and	w0, w0, #0x1
   1b428:	b	1b4f8 <Perl_re_exec_indentf@@Base+0xf328>
   1b42c:	mov	w4, #0x1                   	// #1
   1b430:	mov	w3, #0x0                   	// #0
   1b434:	mov	x0, x28
   1b438:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1b43c:	mov	w0, #0x1                   	// #1
   1b440:	b	1b4f8 <Perl_re_exec_indentf@@Base+0xf328>
   1b444:	mov	x3, x2
   1b448:	mov	x2, x1
   1b44c:	mov	w1, #0x0                   	// #0
   1b450:	mov	x0, x28
   1b454:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1b458:	and	w0, w0, #0xff
   1b45c:	eor	w0, w0, #0x1
   1b460:	b	1b4f8 <Perl_re_exec_indentf@@Base+0xf328>
   1b464:	ldrb	w0, [x24, #88]
   1b468:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b46c:	ldr	x1, [x24, #16]
   1b470:	ldr	x0, [sp, #264]
   1b474:	cmp	x1, x0
   1b478:	b.cs	1b4a0 <Perl_re_exec_indentf@@Base+0xf2d0>  // b.hs, b.nlast
   1b47c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b480:	add	x3, x3, #0x330
   1b484:	add	x3, x3, #0xcf0
   1b488:	mov	w2, #0x987                 	// #2439
   1b48c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b490:	add	x1, x1, #0xcb0
   1b494:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b498:	add	x0, x0, #0xa80
   1b49c:	bl	58e0 <__assert_fail@plt>
   1b4a0:	mov	x2, x22
   1b4a4:	mov	x1, x24
   1b4a8:	mov	x0, x28
   1b4ac:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b4b0:	and	w0, w0, #0xff
   1b4b4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b4b8:	cmp	w19, #0x0
   1b4bc:	cset	w19, eq  // eq = none
   1b4c0:	b	1b500 <Perl_re_exec_indentf@@Base+0xf330>
   1b4c4:	add	x1, x1, x2
   1b4c8:	str	x1, [sp, #264]
   1b4cc:	cmp	x1, x25
   1b4d0:	b.cs	1b5f4 <Perl_re_exec_indentf@@Base+0xf424>  // b.hs, b.nlast
   1b4d4:	ldr	x2, [x24, #16]
   1b4d8:	cmp	x2, x1
   1b4dc:	b.ls	1b3c8 <Perl_re_exec_indentf@@Base+0xf1f8>  // b.plast
   1b4e0:	ldrb	w0, [x1]
   1b4e4:	tbnz	w0, #7, 1b3ec <Perl_re_exec_indentf@@Base+0xf21c>
   1b4e8:	ldr	x1, [x21, #3880]
   1b4ec:	ldr	w0, [x1, w0, sxtw #2]
   1b4f0:	tst	x0, #0x1
   1b4f4:	cset	w0, eq  // eq = none
   1b4f8:	cmp	w0, w19
   1b4fc:	b.eq	1b464 <Perl_re_exec_indentf@@Base+0xf294>  // b.none
   1b500:	ldr	x0, [x24, #16]
   1b504:	ldr	x1, [sp, #264]
   1b508:	cmp	x0, x1
   1b50c:	b.cc	1b47c <Perl_re_exec_indentf@@Base+0xf2ac>  // b.lo, b.ul, b.last
   1b510:	sub	x0, x0, x1
   1b514:	mov	x2, #0x0                   	// #0
   1b518:	cmp	x0, #0x0
   1b51c:	b.le	1b4c4 <Perl_re_exec_indentf@@Base+0xf2f4>
   1b520:	ldrb	w2, [x1]
   1b524:	ldrb	w2, [x20, w2, sxtw]
   1b528:	cmp	x2, x0
   1b52c:	csel	x2, x2, x0, le
   1b530:	b	1b4c4 <Perl_re_exec_indentf@@Base+0xf2f4>
   1b534:	ldr	x0, [sp, #176]
   1b538:	ldr	x0, [x0, #8]
   1b53c:	mov	w1, #0xa                   	// #10
   1b540:	ldr	x2, [sp, #152]
   1b544:	cmp	x2, x0
   1b548:	b.eq	1b550 <Perl_re_exec_indentf@@Base+0xf380>  // b.none
   1b54c:	ldurb	w1, [x2, #-1]
   1b550:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b554:	ldr	x0, [x0, #3880]
   1b558:	ldr	w1, [x0, w1, sxtw #2]
   1b55c:	mov	w0, #0x4001                	// #16385
   1b560:	bics	wzr, w0, w1
   1b564:	cset	w19, eq  // eq = none
   1b568:	ldr	x0, [sp, #152]
   1b56c:	ldr	x24, [sp, #128]
   1b570:	cmp	x0, x24
   1b574:	b.cs	1b5f4 <Perl_re_exec_indentf@@Base+0xf424>  // b.hs, b.nlast
   1b578:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1b57c:	ldr	x20, [x20, #3880]
   1b580:	mov	w21, #0x4001                	// #16385
   1b584:	add	x22, sp, #0x108
   1b588:	ldr	x23, [sp, #176]
   1b58c:	b	1b5ac <Perl_re_exec_indentf@@Base+0xf3dc>
   1b590:	cmp	w19, #0x0
   1b594:	cset	w19, eq  // eq = none
   1b598:	ldr	x0, [sp, #264]
   1b59c:	add	x0, x0, #0x1
   1b5a0:	str	x0, [sp, #264]
   1b5a4:	cmp	x0, x24
   1b5a8:	b.cs	1b5f4 <Perl_re_exec_indentf@@Base+0xf424>  // b.hs, b.nlast
   1b5ac:	ldrb	w1, [x0]
   1b5b0:	ldr	w1, [x20, x1, lsl #2]
   1b5b4:	bics	wzr, w21, w1
   1b5b8:	cset	w1, ne  // ne = any
   1b5bc:	cmp	w1, w19
   1b5c0:	b.ne	1b598 <Perl_re_exec_indentf@@Base+0xf3c8>  // b.any
   1b5c4:	ldrb	w1, [x23, #88]
   1b5c8:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b5cc:	ldr	x1, [x23, #16]
   1b5d0:	cmp	x1, x0
   1b5d4:	b.cc	1b590 <Perl_re_exec_indentf@@Base+0xf3c0>  // b.lo, b.ul, b.last
   1b5d8:	mov	x2, x22
   1b5dc:	mov	x1, x23
   1b5e0:	mov	x0, x28
   1b5e4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b5e8:	and	w0, w0, #0xff
   1b5ec:	cbz	w0, 1b590 <Perl_re_exec_indentf@@Base+0xf3c0>
   1b5f0:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b5f4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b5f8:	ldr	x0, [x0, #3880]
   1b5fc:	ldr	w1, [x0, #40]
   1b600:	mov	w0, #0x4001                	// #16385
   1b604:	bics	wzr, w0, w1
   1b608:	cset	w1, ne  // ne = any
   1b60c:	mov	x0, #0x0                   	// #0
   1b610:	cmp	w1, w19
   1b614:	b.ne	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.any
   1b618:	ldr	x3, [sp, #176]
   1b61c:	ldrb	w0, [x3, #88]
   1b620:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b624:	ldr	x2, [x3, #16]
   1b628:	mov	x0, #0x0                   	// #0
   1b62c:	ldr	x1, [sp, #264]
   1b630:	cmp	x2, x1
   1b634:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1b638:	add	x2, sp, #0x108
   1b63c:	mov	x1, x3
   1b640:	mov	x0, x28
   1b644:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b648:	and	w0, w0, #0xff
   1b64c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b650:	mov	x0, #0x0                   	// #0
   1b654:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1b658:	ldr	x0, [sp, #144]
   1b65c:	ldrb	w0, [x0]
   1b660:	cbnz	w0, 1b6d0 <Perl_re_exec_indentf@@Base+0xf500>
   1b664:	ldr	w0, [sp, #160]
   1b668:	cbz	w0, 1b7a8 <Perl_re_exec_indentf@@Base+0xf5d8>
   1b66c:	ldr	x0, [sp, #176]
   1b670:	ldr	x0, [x0, #8]
   1b674:	mov	w1, #0xa                   	// #10
   1b678:	ldr	x2, [sp, #152]
   1b67c:	cmp	x2, x0
   1b680:	b.eq	1b688 <Perl_re_exec_indentf@@Base+0xf4b8>  // b.none
   1b684:	ldurb	w1, [x2, #-1]
   1b688:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b68c:	ldr	x0, [x0, #3880]
   1b690:	ldr	w1, [x0, w1, sxtw #2]
   1b694:	mov	w0, #0x4001                	// #16385
   1b698:	bics	wzr, w0, w1
   1b69c:	cset	w19, eq  // eq = none
   1b6a0:	ldr	x0, [sp, #152]
   1b6a4:	ldr	x25, [sp, #128]
   1b6a8:	cmp	x0, x25
   1b6ac:	b.cs	1b864 <Perl_re_exec_indentf@@Base+0xf694>  // b.hs, b.nlast
   1b6b0:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1b6b4:	ldr	x20, [x20, #3880]
   1b6b8:	mov	w22, #0x4001                	// #16385
   1b6bc:	add	x23, sp, #0x108
   1b6c0:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1b6c4:	ldr	x21, [x21, #4064]
   1b6c8:	ldr	x24, [sp, #176]
   1b6cc:	b	1b76c <Perl_re_exec_indentf@@Base+0xf59c>
   1b6d0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b6d4:	add	x3, x3, #0x330
   1b6d8:	add	x3, x3, #0xcf0
   1b6dc:	mov	w2, #0x98c                 	// #2444
   1b6e0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b6e4:	add	x1, x1, #0xcb0
   1b6e8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b6ec:	add	x0, x0, #0xac8
   1b6f0:	bl	58e0 <__assert_fail@plt>
   1b6f4:	eor	w19, w19, #0x1
   1b6f8:	ldrb	w1, [x24, #88]
   1b6fc:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b700:	ldr	x1, [x24, #16]
   1b704:	cmp	x1, x0
   1b708:	b.cc	1b784 <Perl_re_exec_indentf@@Base+0xf5b4>  // b.lo, b.ul, b.last
   1b70c:	mov	x2, x23
   1b710:	mov	x1, x24
   1b714:	mov	x0, x28
   1b718:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b71c:	and	w0, w0, #0xff
   1b720:	cbz	w0, 1b784 <Perl_re_exec_indentf@@Base+0xf5b4>
   1b724:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b728:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b72c:	add	x3, x3, #0x330
   1b730:	add	x3, x3, #0xcf0
   1b734:	mov	w2, #0x98e                 	// #2446
   1b738:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b73c:	add	x1, x1, #0xcb0
   1b740:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b744:	add	x0, x0, #0xa80
   1b748:	bl	58e0 <__assert_fail@plt>
   1b74c:	ldrb	w2, [x0]
   1b750:	ldrb	w2, [x21, w2, sxtw]
   1b754:	cmp	x2, x1
   1b758:	csel	x2, x2, x1, le
   1b75c:	add	x0, x0, x2
   1b760:	str	x0, [sp, #264]
   1b764:	cmp	x0, x25
   1b768:	b.cs	1b864 <Perl_re_exec_indentf@@Base+0xf694>  // b.hs, b.nlast
   1b76c:	ldrb	w1, [x0]
   1b770:	ldr	w1, [x20, x1, lsl #2]
   1b774:	bics	wzr, w22, w1
   1b778:	cset	w1, ne  // ne = any
   1b77c:	cmp	w1, w19
   1b780:	b.eq	1b6f4 <Perl_re_exec_indentf@@Base+0xf524>  // b.none
   1b784:	ldr	x1, [x24, #16]
   1b788:	ldr	x0, [sp, #264]
   1b78c:	cmp	x1, x0
   1b790:	b.cc	1b728 <Perl_re_exec_indentf@@Base+0xf558>  // b.lo, b.ul, b.last
   1b794:	sub	x1, x1, x0
   1b798:	mov	x2, #0x0                   	// #0
   1b79c:	cmp	x1, #0x0
   1b7a0:	b.gt	1b74c <Perl_re_exec_indentf@@Base+0xf57c>
   1b7a4:	b	1b75c <Perl_re_exec_indentf@@Base+0xf58c>
   1b7a8:	ldr	x0, [sp, #176]
   1b7ac:	ldr	x0, [x0, #8]
   1b7b0:	mov	w1, #0xa                   	// #10
   1b7b4:	ldr	x2, [sp, #152]
   1b7b8:	cmp	x2, x0
   1b7bc:	b.eq	1b7c4 <Perl_re_exec_indentf@@Base+0xf5f4>  // b.none
   1b7c0:	ldurb	w1, [x2, #-1]
   1b7c4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b7c8:	ldr	x0, [x0, #3880]
   1b7cc:	ldr	w1, [x0, w1, sxtw #2]
   1b7d0:	mov	w0, #0x4001                	// #16385
   1b7d4:	bics	wzr, w0, w1
   1b7d8:	cset	w19, eq  // eq = none
   1b7dc:	ldr	x0, [sp, #152]
   1b7e0:	ldr	x24, [sp, #128]
   1b7e4:	cmp	x0, x24
   1b7e8:	b.cs	1b864 <Perl_re_exec_indentf@@Base+0xf694>  // b.hs, b.nlast
   1b7ec:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1b7f0:	ldr	x20, [x20, #3880]
   1b7f4:	mov	w21, #0x4001                	// #16385
   1b7f8:	add	x22, sp, #0x108
   1b7fc:	ldr	x23, [sp, #176]
   1b800:	b	1b81c <Perl_re_exec_indentf@@Base+0xf64c>
   1b804:	eor	w19, w19, #0x1
   1b808:	ldr	x0, [sp, #264]
   1b80c:	add	x0, x0, #0x1
   1b810:	str	x0, [sp, #264]
   1b814:	cmp	x0, x24
   1b818:	b.cs	1b864 <Perl_re_exec_indentf@@Base+0xf694>  // b.hs, b.nlast
   1b81c:	ldrb	w1, [x0]
   1b820:	ldr	w1, [x20, x1, lsl #2]
   1b824:	bics	wzr, w21, w1
   1b828:	cset	w1, ne  // ne = any
   1b82c:	cmp	w1, w19
   1b830:	b.ne	1b808 <Perl_re_exec_indentf@@Base+0xf638>  // b.any
   1b834:	ldrb	w1, [x23, #88]
   1b838:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b83c:	ldr	x1, [x23, #16]
   1b840:	cmp	x1, x0
   1b844:	b.cc	1b804 <Perl_re_exec_indentf@@Base+0xf634>  // b.lo, b.ul, b.last
   1b848:	mov	x2, x22
   1b84c:	mov	x1, x23
   1b850:	mov	x0, x28
   1b854:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b858:	and	w0, w0, #0xff
   1b85c:	cbz	w0, 1b804 <Perl_re_exec_indentf@@Base+0xf634>
   1b860:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b864:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1b868:	ldr	x0, [x0, #3880]
   1b86c:	ldr	w1, [x0, #40]
   1b870:	mov	w0, #0x4001                	// #16385
   1b874:	bics	wzr, w0, w1
   1b878:	cset	w1, ne  // ne = any
   1b87c:	mov	x0, #0x0                   	// #0
   1b880:	cmp	w1, w19
   1b884:	b.ne	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.any
   1b888:	ldr	x3, [sp, #176]
   1b88c:	ldrb	w0, [x3, #88]
   1b890:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b894:	ldr	x2, [x3, #16]
   1b898:	mov	x0, #0x0                   	// #0
   1b89c:	ldr	x1, [sp, #264]
   1b8a0:	cmp	x2, x1
   1b8a4:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1b8a8:	add	x2, sp, #0x108
   1b8ac:	mov	x1, x3
   1b8b0:	mov	x0, x28
   1b8b4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1b8b8:	and	w0, w0, #0xff
   1b8bc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1b8c0:	mov	x0, #0x0                   	// #0
   1b8c4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1b8c8:	ldr	x0, [sp, #144]
   1b8cc:	ldrb	w0, [x0]
   1b8d0:	cbnz	w0, 1b9a0 <Perl_re_exec_indentf@@Base+0xf7d0>
   1b8d4:	ldr	w0, [sp, #160]
   1b8d8:	cbz	w0, 1bbb8 <Perl_re_exec_indentf@@Base+0xf9e8>
   1b8dc:	ldr	x19, [sp, #176]
   1b8e0:	ldr	x2, [x19, #8]
   1b8e4:	ldr	x0, [sp, #152]
   1b8e8:	cmp	x0, x2
   1b8ec:	b.eq	1ba18 <Perl_re_exec_indentf@@Base+0xf848>  // b.none
   1b8f0:	mov	x1, #0xffffffffffffffff    	// #-1
   1b8f4:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1b8f8:	ldr	x1, [x19, #16]
   1b8fc:	cbz	x0, 1b9c4 <Perl_re_exec_indentf@@Base+0xf7f4>
   1b900:	cmp	x1, x0
   1b904:	b.ls	1b9f8 <Perl_re_exec_indentf@@Base+0xf828>  // b.plast
   1b908:	mov	x8, x0
   1b90c:	mov	x2, #0x0                   	// #0
   1b910:	mov	x4, #0x0                   	// #0
   1b914:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1b918:	ldr	x10, [x3, #3824]
   1b91c:	mov	w9, #0xff                  	// #255
   1b920:	mov	x7, x10
   1b924:	ldrb	w6, [x8]
   1b928:	ldrb	w3, [x10, w6, sxtw]
   1b92c:	and	x5, x3, #0xff
   1b930:	asr	w3, w9, w3
   1b934:	and	w3, w3, w6
   1b938:	sxtw	x3, w3
   1b93c:	bfi	x6, x2, #6, #58
   1b940:	cmp	x4, #0x0
   1b944:	csel	x2, x6, x3, ne  // ne = any
   1b948:	add	x3, x7, x5
   1b94c:	add	x3, x3, x4
   1b950:	ldrb	w4, [x3, #256]
   1b954:	cbnz	x4, 1b9e8 <Perl_re_exec_indentf@@Base+0xf818>
   1b958:	mov	w0, w2
   1b95c:	cmp	w2, #0xff
   1b960:	b.gt	1ba38 <Perl_re_exec_indentf@@Base+0xf868>
   1b964:	sxtw	x2, w2
   1b968:	tst	x2, #0xffffffffffffff00
   1b96c:	b.eq	1ba1c <Perl_re_exec_indentf@@Base+0xf84c>  // b.none
   1b970:	mov	w19, #0x0                   	// #0
   1b974:	ldr	x1, [sp, #264]
   1b978:	ldr	x25, [sp, #128]
   1b97c:	cmp	x1, x25
   1b980:	b.cs	1bc78 <Perl_re_exec_indentf@@Base+0xfaa8>  // b.hs, b.nlast
   1b984:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1b988:	ldr	x23, [x21, #3880]
   1b98c:	add	x22, sp, #0x108
   1b990:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1b994:	ldr	x20, [x20, #4064]
   1b998:	ldr	x24, [sp, #176]
   1b99c:	b	1bb34 <Perl_re_exec_indentf@@Base+0xf964>
   1b9a0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b9a4:	add	x3, x3, #0x330
   1b9a8:	add	x3, x3, #0xcf0
   1b9ac:	mov	w2, #0x993                 	// #2451
   1b9b0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b9b4:	add	x1, x1, #0xcb0
   1b9b8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1b9bc:	add	x0, x0, #0xac8
   1b9c0:	bl	58e0 <__assert_fail@plt>
   1b9c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1b9c8:	add	x3, x3, #0x330
   1b9cc:	add	x3, x3, #0xc48
   1b9d0:	mov	w2, #0x710                 	// #1808
   1b9d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1b9d8:	add	x1, x1, #0xc80
   1b9dc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1b9e0:	add	x0, x0, #0xce8
   1b9e4:	bl	58e0 <__assert_fail@plt>
   1b9e8:	add	x8, x8, #0x1
   1b9ec:	cmp	x1, x8
   1b9f0:	ccmp	x4, #0x1, #0x4, hi  // hi = pmore
   1b9f4:	b.ne	1b924 <Perl_re_exec_indentf@@Base+0xf754>  // b.any
   1b9f8:	mov	x5, #0x0                   	// #0
   1b9fc:	mov	x4, #0x0                   	// #0
   1ba00:	mov	w3, #0x0                   	// #0
   1ba04:	mov	x2, #0x0                   	// #0
   1ba08:	sub	x1, x1, x0
   1ba0c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1ba10:	mov	x2, x0
   1ba14:	b	1b958 <Perl_re_exec_indentf@@Base+0xf788>
   1ba18:	mov	w0, #0xa                   	// #10
   1ba1c:	and	x0, x0, #0xff
   1ba20:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1ba24:	ldr	x1, [x1, #3880]
   1ba28:	ldr	w0, [x1, x0, lsl #2]
   1ba2c:	mov	w19, #0x1                   	// #1
   1ba30:	tbnz	w0, #0, 1b974 <Perl_re_exec_indentf@@Base+0xf7a4>
   1ba34:	b	1b970 <Perl_re_exec_indentf@@Base+0xf7a0>
   1ba38:	sxtw	x2, w2
   1ba3c:	mov	w1, #0x0                   	// #0
   1ba40:	mov	x0, x28
   1ba44:	bl	58c0 <Perl__is_uni_FOO@plt>
   1ba48:	and	w19, w0, #0xff
   1ba4c:	b	1b974 <Perl_re_exec_indentf@@Base+0xf7a4>
   1ba50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ba54:	add	x3, x3, #0x330
   1ba58:	add	x3, x3, #0xcf0
   1ba5c:	mov	w2, #0x995                 	// #2453
   1ba60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ba64:	add	x1, x1, #0xcb0
   1ba68:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ba6c:	add	x0, x0, #0xaa0
   1ba70:	bl	58e0 <__assert_fail@plt>
   1ba74:	and	w3, w0, #0xfe
   1ba78:	cmp	w3, #0xc2
   1ba7c:	b.ne	1bacc <Perl_re_exec_indentf@@Base+0xf8fc>  // b.any
   1ba80:	sub	x3, x2, x1
   1ba84:	cmp	x3, #0x1
   1ba88:	b.le	1bab4 <Perl_re_exec_indentf@@Base+0xf8e4>
   1ba8c:	ldrb	w3, [x1, #1]
   1ba90:	and	w4, w3, #0xc0
   1ba94:	cmp	w4, #0x80
   1ba98:	b.ne	1bab4 <Perl_re_exec_indentf@@Base+0xf8e4>  // b.any
   1ba9c:	bfi	w3, w0, #6, #26
   1baa0:	and	x0, x3, #0xff
   1baa4:	ldr	w0, [x23, x0, lsl #2]
   1baa8:	eor	w0, w0, #0x1
   1baac:	and	w0, w0, #0x1
   1bab0:	b	1bb58 <Perl_re_exec_indentf@@Base+0xf988>
   1bab4:	mov	w4, #0x1                   	// #1
   1bab8:	mov	w3, #0x0                   	// #0
   1babc:	mov	x0, x28
   1bac0:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1bac4:	mov	w0, #0x1                   	// #1
   1bac8:	b	1bb58 <Perl_re_exec_indentf@@Base+0xf988>
   1bacc:	mov	x3, x2
   1bad0:	mov	x2, x1
   1bad4:	mov	w1, #0x0                   	// #0
   1bad8:	mov	x0, x28
   1badc:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1bae0:	and	w0, w0, #0xff
   1bae4:	eor	w0, w0, #0x1
   1bae8:	b	1bb58 <Perl_re_exec_indentf@@Base+0xf988>
   1baec:	cmp	w19, #0x0
   1baf0:	cset	w19, eq  // eq = none
   1baf4:	ldr	x0, [x24, #16]
   1baf8:	ldr	x1, [sp, #264]
   1bafc:	cmp	x0, x1
   1bb00:	b.cc	1bb78 <Perl_re_exec_indentf@@Base+0xf9a8>  // b.lo, b.ul, b.last
   1bb04:	sub	x0, x0, x1
   1bb08:	mov	x2, #0x0                   	// #0
   1bb0c:	cmp	x0, #0x0
   1bb10:	b.le	1bb24 <Perl_re_exec_indentf@@Base+0xf954>
   1bb14:	ldrb	w2, [x1]
   1bb18:	ldrb	w2, [x20, w2, sxtw]
   1bb1c:	cmp	x2, x0
   1bb20:	csel	x2, x2, x0, le
   1bb24:	add	x1, x1, x2
   1bb28:	str	x1, [sp, #264]
   1bb2c:	cmp	x1, x25
   1bb30:	b.cs	1bc78 <Perl_re_exec_indentf@@Base+0xfaa8>  // b.hs, b.nlast
   1bb34:	ldr	x2, [x24, #16]
   1bb38:	cmp	x2, x1
   1bb3c:	b.ls	1ba50 <Perl_re_exec_indentf@@Base+0xf880>  // b.plast
   1bb40:	ldrb	w0, [x1]
   1bb44:	tbnz	w0, #7, 1ba74 <Perl_re_exec_indentf@@Base+0xf8a4>
   1bb48:	ldr	x1, [x21, #3880]
   1bb4c:	ldr	w0, [x1, w0, sxtw #2]
   1bb50:	tst	x0, #0x1
   1bb54:	cset	w0, eq  // eq = none
   1bb58:	cmp	w0, w19
   1bb5c:	b.eq	1baec <Perl_re_exec_indentf@@Base+0xf91c>  // b.none
   1bb60:	ldrb	w0, [x24, #88]
   1bb64:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bb68:	ldr	x1, [x24, #16]
   1bb6c:	ldr	x0, [sp, #264]
   1bb70:	cmp	x1, x0
   1bb74:	b.cs	1bb9c <Perl_re_exec_indentf@@Base+0xf9cc>  // b.hs, b.nlast
   1bb78:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1bb7c:	add	x3, x3, #0x330
   1bb80:	add	x3, x3, #0xcf0
   1bb84:	mov	w2, #0x995                 	// #2453
   1bb88:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1bb8c:	add	x1, x1, #0xcb0
   1bb90:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1bb94:	add	x0, x0, #0xa80
   1bb98:	bl	58e0 <__assert_fail@plt>
   1bb9c:	mov	x2, x22
   1bba0:	mov	x1, x24
   1bba4:	mov	x0, x28
   1bba8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bbac:	and	w0, w0, #0xff
   1bbb0:	cbz	w0, 1baf4 <Perl_re_exec_indentf@@Base+0xf924>
   1bbb4:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bbb8:	ldr	x0, [sp, #176]
   1bbbc:	ldr	x0, [x0, #8]
   1bbc0:	mov	w1, #0xa                   	// #10
   1bbc4:	ldr	x2, [sp, #152]
   1bbc8:	cmp	x2, x0
   1bbcc:	b.eq	1bbd4 <Perl_re_exec_indentf@@Base+0xfa04>  // b.none
   1bbd0:	ldurb	w1, [x2, #-1]
   1bbd4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1bbd8:	ldr	x0, [x0, #3880]
   1bbdc:	ldr	w1, [x0, w1, sxtw #2]
   1bbe0:	mov	w0, #0x4001                	// #16385
   1bbe4:	bics	wzr, w0, w1
   1bbe8:	cset	w19, eq  // eq = none
   1bbec:	ldr	x0, [sp, #152]
   1bbf0:	ldr	x24, [sp, #128]
   1bbf4:	cmp	x0, x24
   1bbf8:	b.cs	1bc78 <Perl_re_exec_indentf@@Base+0xfaa8>  // b.hs, b.nlast
   1bbfc:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1bc00:	ldr	x20, [x20, #3880]
   1bc04:	mov	w21, #0x4001                	// #16385
   1bc08:	add	x22, sp, #0x108
   1bc0c:	ldr	x23, [sp, #176]
   1bc10:	b	1bc30 <Perl_re_exec_indentf@@Base+0xfa60>
   1bc14:	cmp	w19, #0x0
   1bc18:	cset	w19, eq  // eq = none
   1bc1c:	ldr	x0, [sp, #264]
   1bc20:	add	x0, x0, #0x1
   1bc24:	str	x0, [sp, #264]
   1bc28:	cmp	x0, x24
   1bc2c:	b.cs	1bc78 <Perl_re_exec_indentf@@Base+0xfaa8>  // b.hs, b.nlast
   1bc30:	ldrb	w1, [x0]
   1bc34:	ldr	w1, [x20, x1, lsl #2]
   1bc38:	bics	wzr, w21, w1
   1bc3c:	cset	w1, ne  // ne = any
   1bc40:	cmp	w1, w19
   1bc44:	b.eq	1bc14 <Perl_re_exec_indentf@@Base+0xfa44>  // b.none
   1bc48:	ldrb	w1, [x23, #88]
   1bc4c:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bc50:	ldr	x1, [x23, #16]
   1bc54:	cmp	x1, x0
   1bc58:	b.cc	1bc1c <Perl_re_exec_indentf@@Base+0xfa4c>  // b.lo, b.ul, b.last
   1bc5c:	mov	x2, x22
   1bc60:	mov	x1, x23
   1bc64:	mov	x0, x28
   1bc68:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bc6c:	and	w0, w0, #0xff
   1bc70:	cbz	w0, 1bc1c <Perl_re_exec_indentf@@Base+0xfa4c>
   1bc74:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bc78:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1bc7c:	ldr	x0, [x0, #3880]
   1bc80:	ldr	w1, [x0, #40]
   1bc84:	mov	w0, #0x4001                	// #16385
   1bc88:	bics	wzr, w0, w1
   1bc8c:	cset	w0, ne  // ne = any
   1bc90:	cmp	w0, w19
   1bc94:	b.eq	20418 <Perl_re_exec_indentf@@Base+0x14248>  // b.none
   1bc98:	ldr	x3, [sp, #176]
   1bc9c:	ldrb	w0, [x3, #88]
   1bca0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bca4:	ldr	x2, [x3, #16]
   1bca8:	mov	x0, #0x0                   	// #0
   1bcac:	ldr	x1, [sp, #264]
   1bcb0:	cmp	x2, x1
   1bcb4:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1bcb8:	add	x2, sp, #0x108
   1bcbc:	mov	x1, x3
   1bcc0:	mov	x0, x28
   1bcc4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bcc8:	and	w0, w0, #0xff
   1bccc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bcd0:	mov	x0, #0x0                   	// #0
   1bcd4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1bcd8:	ldr	x0, [sp, #144]
   1bcdc:	ldrb	w0, [x0]
   1bce0:	cbnz	w0, 1bd50 <Perl_re_exec_indentf@@Base+0xfb80>
   1bce4:	ldr	w0, [sp, #160]
   1bce8:	cbz	w0, 1be24 <Perl_re_exec_indentf@@Base+0xfc54>
   1bcec:	ldr	x0, [sp, #176]
   1bcf0:	ldr	x0, [x0, #8]
   1bcf4:	mov	w1, #0xa                   	// #10
   1bcf8:	ldr	x2, [sp, #152]
   1bcfc:	cmp	x2, x0
   1bd00:	b.eq	1bd08 <Perl_re_exec_indentf@@Base+0xfb38>  // b.none
   1bd04:	ldurb	w1, [x2, #-1]
   1bd08:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1bd0c:	ldr	x0, [x0, #3880]
   1bd10:	ldr	w1, [x0, w1, sxtw #2]
   1bd14:	mov	w0, #0x4001                	// #16385
   1bd18:	bics	wzr, w0, w1
   1bd1c:	cset	w19, eq  // eq = none
   1bd20:	ldr	x0, [sp, #152]
   1bd24:	ldr	x25, [sp, #128]
   1bd28:	cmp	x0, x25
   1bd2c:	b.cs	1bee0 <Perl_re_exec_indentf@@Base+0xfd10>  // b.hs, b.nlast
   1bd30:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1bd34:	ldr	x20, [x20, #3880]
   1bd38:	mov	w22, #0x4001                	// #16385
   1bd3c:	add	x23, sp, #0x108
   1bd40:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1bd44:	ldr	x21, [x21, #4064]
   1bd48:	ldr	x24, [sp, #176]
   1bd4c:	b	1bdb8 <Perl_re_exec_indentf@@Base+0xfbe8>
   1bd50:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1bd54:	add	x3, x3, #0x330
   1bd58:	add	x3, x3, #0xcf0
   1bd5c:	mov	w2, #0x99a                 	// #2458
   1bd60:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1bd64:	add	x1, x1, #0xcb0
   1bd68:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1bd6c:	add	x0, x0, #0xac8
   1bd70:	bl	58e0 <__assert_fail@plt>
   1bd74:	eor	w19, w19, #0x1
   1bd78:	ldr	x1, [x24, #16]
   1bd7c:	ldr	x0, [sp, #264]
   1bd80:	cmp	x1, x0
   1bd84:	b.cc	1be00 <Perl_re_exec_indentf@@Base+0xfc30>  // b.lo, b.ul, b.last
   1bd88:	sub	x1, x1, x0
   1bd8c:	mov	x2, #0x0                   	// #0
   1bd90:	cmp	x1, #0x0
   1bd94:	b.le	1bda8 <Perl_re_exec_indentf@@Base+0xfbd8>
   1bd98:	ldrb	w2, [x0]
   1bd9c:	ldrb	w2, [x21, w2, sxtw]
   1bda0:	cmp	x2, x1
   1bda4:	csel	x2, x2, x1, le
   1bda8:	add	x0, x0, x2
   1bdac:	str	x0, [sp, #264]
   1bdb0:	cmp	x0, x25
   1bdb4:	b.cs	1bee0 <Perl_re_exec_indentf@@Base+0xfd10>  // b.hs, b.nlast
   1bdb8:	ldrb	w1, [x0]
   1bdbc:	ldr	w1, [x20, x1, lsl #2]
   1bdc0:	bics	wzr, w22, w1
   1bdc4:	cset	w1, ne  // ne = any
   1bdc8:	cmp	w1, w19
   1bdcc:	b.eq	1bd74 <Perl_re_exec_indentf@@Base+0xfba4>  // b.none
   1bdd0:	ldrb	w1, [x24, #88]
   1bdd4:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bdd8:	ldr	x1, [x24, #16]
   1bddc:	cmp	x1, x0
   1bde0:	b.cc	1bd78 <Perl_re_exec_indentf@@Base+0xfba8>  // b.lo, b.ul, b.last
   1bde4:	mov	x2, x23
   1bde8:	mov	x1, x24
   1bdec:	mov	x0, x28
   1bdf0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bdf4:	and	w0, w0, #0xff
   1bdf8:	cbz	w0, 1bd78 <Perl_re_exec_indentf@@Base+0xfba8>
   1bdfc:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1be00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1be04:	add	x3, x3, #0x330
   1be08:	add	x3, x3, #0xcf0
   1be0c:	mov	w2, #0x99c                 	// #2460
   1be10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1be14:	add	x1, x1, #0xcb0
   1be18:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1be1c:	add	x0, x0, #0xa80
   1be20:	bl	58e0 <__assert_fail@plt>
   1be24:	ldr	x0, [sp, #176]
   1be28:	ldr	x0, [x0, #8]
   1be2c:	mov	w1, #0xa                   	// #10
   1be30:	ldr	x2, [sp, #152]
   1be34:	cmp	x2, x0
   1be38:	b.eq	1be40 <Perl_re_exec_indentf@@Base+0xfc70>  // b.none
   1be3c:	ldurb	w1, [x2, #-1]
   1be40:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1be44:	ldr	x0, [x0, #3880]
   1be48:	ldr	w1, [x0, w1, sxtw #2]
   1be4c:	mov	w0, #0x4001                	// #16385
   1be50:	bics	wzr, w0, w1
   1be54:	cset	w19, eq  // eq = none
   1be58:	ldr	x0, [sp, #152]
   1be5c:	ldr	x24, [sp, #128]
   1be60:	cmp	x0, x24
   1be64:	b.cs	1bee0 <Perl_re_exec_indentf@@Base+0xfd10>  // b.hs, b.nlast
   1be68:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1be6c:	ldr	x20, [x20, #3880]
   1be70:	mov	w21, #0x4001                	// #16385
   1be74:	add	x22, sp, #0x108
   1be78:	ldr	x23, [sp, #176]
   1be7c:	b	1be98 <Perl_re_exec_indentf@@Base+0xfcc8>
   1be80:	eor	w19, w19, #0x1
   1be84:	ldr	x0, [sp, #264]
   1be88:	add	x0, x0, #0x1
   1be8c:	str	x0, [sp, #264]
   1be90:	cmp	x0, x24
   1be94:	b.cs	1bee0 <Perl_re_exec_indentf@@Base+0xfd10>  // b.hs, b.nlast
   1be98:	ldrb	w1, [x0]
   1be9c:	ldr	w1, [x20, x1, lsl #2]
   1bea0:	bics	wzr, w21, w1
   1bea4:	cset	w1, ne  // ne = any
   1bea8:	cmp	w1, w19
   1beac:	b.eq	1be80 <Perl_re_exec_indentf@@Base+0xfcb0>  // b.none
   1beb0:	ldrb	w1, [x23, #88]
   1beb4:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1beb8:	ldr	x1, [x23, #16]
   1bebc:	cmp	x1, x0
   1bec0:	b.cc	1be84 <Perl_re_exec_indentf@@Base+0xfcb4>  // b.lo, b.ul, b.last
   1bec4:	mov	x2, x22
   1bec8:	mov	x1, x23
   1becc:	mov	x0, x28
   1bed0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bed4:	and	w0, w0, #0xff
   1bed8:	cbz	w0, 1be84 <Perl_re_exec_indentf@@Base+0xfcb4>
   1bedc:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bee0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1bee4:	ldr	x0, [x0, #3880]
   1bee8:	ldr	w1, [x0, #40]
   1beec:	mov	w0, #0x4001                	// #16385
   1bef0:	bics	wzr, w0, w1
   1bef4:	cset	w0, ne  // ne = any
   1bef8:	cmp	w0, w19
   1befc:	b.eq	20420 <Perl_re_exec_indentf@@Base+0x14250>  // b.none
   1bf00:	ldr	x3, [sp, #176]
   1bf04:	ldrb	w0, [x3, #88]
   1bf08:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bf0c:	ldr	x2, [x3, #16]
   1bf10:	mov	x0, #0x0                   	// #0
   1bf14:	ldr	x1, [sp, #264]
   1bf18:	cmp	x2, x1
   1bf1c:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1bf20:	add	x2, sp, #0x108
   1bf24:	mov	x1, x3
   1bf28:	mov	x0, x28
   1bf2c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1bf30:	and	w0, w0, #0xff
   1bf34:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1bf38:	mov	x0, #0x0                   	// #0
   1bf3c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1bf40:	ldr	x0, [sp, #144]
   1bf44:	ldrb	w0, [x0]
   1bf48:	cbnz	w0, 1c32c <Perl_re_exec_indentf@@Base+0x1015c>
   1bf4c:	ldr	w0, [sp, #160]
   1bf50:	cbz	w0, 1c210 <Perl_re_exec_indentf@@Base+0x10040>
   1bf54:	ldr	x19, [sp, #176]
   1bf58:	ldr	x2, [x19, #8]
   1bf5c:	ldr	x0, [sp, #152]
   1bf60:	cmp	x0, x2
   1bf64:	b.eq	1c06c <Perl_re_exec_indentf@@Base+0xfe9c>  // b.none
   1bf68:	mov	x1, #0xffffffffffffffff    	// #-1
   1bf6c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1bf70:	ldr	x1, [x19, #16]
   1bf74:	cbz	x0, 1c018 <Perl_re_exec_indentf@@Base+0xfe48>
   1bf78:	cmp	x1, x0
   1bf7c:	b.ls	1c04c <Perl_re_exec_indentf@@Base+0xfe7c>  // b.plast
   1bf80:	mov	x8, x0
   1bf84:	mov	x2, #0x0                   	// #0
   1bf88:	mov	x4, #0x0                   	// #0
   1bf8c:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1bf90:	ldr	x10, [x3, #3824]
   1bf94:	mov	w9, #0xff                  	// #255
   1bf98:	mov	x7, x10
   1bf9c:	ldrb	w6, [x8]
   1bfa0:	ldrb	w3, [x10, w6, sxtw]
   1bfa4:	and	x5, x3, #0xff
   1bfa8:	asr	w3, w9, w3
   1bfac:	and	w3, w3, w6
   1bfb0:	sxtw	x3, w3
   1bfb4:	bfi	x6, x2, #6, #58
   1bfb8:	cmp	x4, #0x0
   1bfbc:	csel	x2, x6, x3, ne  // ne = any
   1bfc0:	add	x3, x7, x5
   1bfc4:	add	x3, x3, x4
   1bfc8:	ldrb	w4, [x3, #256]
   1bfcc:	cbnz	x4, 1c03c <Perl_re_exec_indentf@@Base+0xfe6c>
   1bfd0:	mov	w0, w2
   1bfd4:	cmp	w2, #0xff
   1bfd8:	b.gt	1c08c <Perl_re_exec_indentf@@Base+0xfebc>
   1bfdc:	sxtw	x2, w2
   1bfe0:	tst	x2, #0xffffffffffffff00
   1bfe4:	b.eq	1c070 <Perl_re_exec_indentf@@Base+0xfea0>  // b.none
   1bfe8:	mov	w19, #0x0                   	// #0
   1bfec:	ldr	x1, [sp, #264]
   1bff0:	ldr	x0, [sp, #128]
   1bff4:	cmp	x1, x0
   1bff8:	b.cs	1c2c8 <Perl_re_exec_indentf@@Base+0x100f8>  // b.hs, b.nlast
   1bffc:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1c000:	ldr	x23, [x21, #3880]
   1c004:	add	x22, sp, #0x108
   1c008:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1c00c:	ldr	x20, [x20, #4064]
   1c010:	ldr	x24, [sp, #176]
   1c014:	b	1c18c <Perl_re_exec_indentf@@Base+0xffbc>
   1c018:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c01c:	add	x3, x3, #0x330
   1c020:	add	x3, x3, #0xc48
   1c024:	mov	w2, #0x710                 	// #1808
   1c028:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c02c:	add	x1, x1, #0xc80
   1c030:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1c034:	add	x0, x0, #0xce8
   1c038:	bl	58e0 <__assert_fail@plt>
   1c03c:	add	x8, x8, #0x1
   1c040:	cmp	x4, #0x1
   1c044:	ccmp	x1, x8, #0x0, ne  // ne = any
   1c048:	b.hi	1bf9c <Perl_re_exec_indentf@@Base+0xfdcc>  // b.pmore
   1c04c:	mov	x5, #0x0                   	// #0
   1c050:	mov	x4, #0x0                   	// #0
   1c054:	mov	w3, #0x0                   	// #0
   1c058:	mov	x2, #0x0                   	// #0
   1c05c:	sub	x1, x1, x0
   1c060:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1c064:	mov	x2, x0
   1c068:	b	1bfd0 <Perl_re_exec_indentf@@Base+0xfe00>
   1c06c:	mov	w0, #0xa                   	// #10
   1c070:	and	x0, x0, #0xff
   1c074:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1c078:	ldr	x1, [x1, #3880]
   1c07c:	ldr	w0, [x1, x0, lsl #2]
   1c080:	mov	w19, #0x1                   	// #1
   1c084:	tbnz	w0, #0, 1bfec <Perl_re_exec_indentf@@Base+0xfe1c>
   1c088:	b	1bfe8 <Perl_re_exec_indentf@@Base+0xfe18>
   1c08c:	sxtw	x2, w2
   1c090:	mov	w1, #0x0                   	// #0
   1c094:	mov	x0, x28
   1c098:	bl	58c0 <Perl__is_uni_FOO@plt>
   1c09c:	and	w19, w0, #0xff
   1c0a0:	b	1bfec <Perl_re_exec_indentf@@Base+0xfe1c>
   1c0a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c0a8:	add	x3, x3, #0x330
   1c0ac:	add	x3, x3, #0xcf0
   1c0b0:	mov	w2, #0x9a1                 	// #2465
   1c0b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c0b8:	add	x1, x1, #0xcb0
   1c0bc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1c0c0:	add	x0, x0, #0xaa0
   1c0c4:	bl	58e0 <__assert_fail@plt>
   1c0c8:	and	w0, w3, #0xfe
   1c0cc:	cmp	w0, #0xc2
   1c0d0:	b.ne	1c120 <Perl_re_exec_indentf@@Base+0xff50>  // b.any
   1c0d4:	sub	x0, x2, x1
   1c0d8:	cmp	x0, #0x1
   1c0dc:	b.le	1c108 <Perl_re_exec_indentf@@Base+0xff38>
   1c0e0:	ldrb	w0, [x1, #1]
   1c0e4:	and	w4, w0, #0xc0
   1c0e8:	cmp	w4, #0x80
   1c0ec:	b.ne	1c108 <Perl_re_exec_indentf@@Base+0xff38>  // b.any
   1c0f0:	bfi	w0, w3, #6, #26
   1c0f4:	and	x0, x0, #0xff
   1c0f8:	ldr	w0, [x23, x0, lsl #2]
   1c0fc:	eor	w0, w0, #0x1
   1c100:	and	w0, w0, #0x1
   1c104:	b	1c1b0 <Perl_re_exec_indentf@@Base+0xffe0>
   1c108:	mov	w4, #0x1                   	// #1
   1c10c:	mov	w3, #0x0                   	// #0
   1c110:	mov	x0, x28
   1c114:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1c118:	mov	w0, #0x1                   	// #1
   1c11c:	b	1c1b0 <Perl_re_exec_indentf@@Base+0xffe0>
   1c120:	mov	x3, x2
   1c124:	mov	x2, x1
   1c128:	mov	w1, #0x0                   	// #0
   1c12c:	mov	x0, x28
   1c130:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1c134:	and	w0, w0, #0xff
   1c138:	eor	w0, w0, #0x1
   1c13c:	b	1c1b0 <Perl_re_exec_indentf@@Base+0xffe0>
   1c140:	cmp	w19, #0x0
   1c144:	cset	w19, eq  // eq = none
   1c148:	ldr	x0, [x24, #16]
   1c14c:	ldr	x1, [sp, #264]
   1c150:	cmp	x0, x1
   1c154:	b.cc	1c1d0 <Perl_re_exec_indentf@@Base+0x10000>  // b.lo, b.ul, b.last
   1c158:	sub	x0, x0, x1
   1c15c:	mov	x2, #0x0                   	// #0
   1c160:	cmp	x0, #0x0
   1c164:	b.le	1c178 <Perl_re_exec_indentf@@Base+0xffa8>
   1c168:	ldrb	w2, [x1]
   1c16c:	ldrb	w2, [x20, w2, sxtw]
   1c170:	cmp	x2, x0
   1c174:	csel	x2, x2, x0, le
   1c178:	add	x1, x1, x2
   1c17c:	str	x1, [sp, #264]
   1c180:	ldr	x0, [sp, #128]
   1c184:	cmp	x1, x0
   1c188:	b.cs	1c2c8 <Perl_re_exec_indentf@@Base+0x100f8>  // b.hs, b.nlast
   1c18c:	ldr	x2, [x24, #16]
   1c190:	cmp	x2, x1
   1c194:	b.ls	1c0a4 <Perl_re_exec_indentf@@Base+0xfed4>  // b.plast
   1c198:	ldrb	w3, [x1]
   1c19c:	tbnz	w3, #7, 1c0c8 <Perl_re_exec_indentf@@Base+0xfef8>
   1c1a0:	ldr	x0, [x21, #3880]
   1c1a4:	ldr	w0, [x0, w3, sxtw #2]
   1c1a8:	tst	x0, #0x1
   1c1ac:	cset	w0, eq  // eq = none
   1c1b0:	cmp	w0, w19
   1c1b4:	b.eq	1c140 <Perl_re_exec_indentf@@Base+0xff70>  // b.none
   1c1b8:	ldrb	w0, [x24, #88]
   1c1bc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c1c0:	ldr	x1, [x24, #16]
   1c1c4:	ldr	x0, [sp, #264]
   1c1c8:	cmp	x1, x0
   1c1cc:	b.cs	1c1f4 <Perl_re_exec_indentf@@Base+0x10024>  // b.hs, b.nlast
   1c1d0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c1d4:	add	x3, x3, #0x330
   1c1d8:	add	x3, x3, #0xcf0
   1c1dc:	mov	w2, #0x9a1                 	// #2465
   1c1e0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c1e4:	add	x1, x1, #0xcb0
   1c1e8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1c1ec:	add	x0, x0, #0xa80
   1c1f0:	bl	58e0 <__assert_fail@plt>
   1c1f4:	mov	x2, x22
   1c1f8:	mov	x1, x24
   1c1fc:	mov	x0, x28
   1c200:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c204:	and	w0, w0, #0xff
   1c208:	cbz	w0, 1c148 <Perl_re_exec_indentf@@Base+0xff78>
   1c20c:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c210:	ldr	x0, [sp, #176]
   1c214:	ldr	x0, [x0, #8]
   1c218:	mov	w1, #0xa                   	// #10
   1c21c:	ldr	x2, [sp, #152]
   1c220:	cmp	x2, x0
   1c224:	b.eq	1c22c <Perl_re_exec_indentf@@Base+0x1005c>  // b.none
   1c228:	ldurb	w1, [x2, #-1]
   1c22c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c230:	ldr	x0, [x0, #3880]
   1c234:	ldr	w19, [x0, w1, sxtw #2]
   1c238:	and	w19, w19, #0x1
   1c23c:	ldr	x0, [sp, #152]
   1c240:	ldr	x1, [sp, #128]
   1c244:	cmp	x0, x1
   1c248:	b.cs	1c2c8 <Perl_re_exec_indentf@@Base+0x100f8>  // b.hs, b.nlast
   1c24c:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1c250:	ldr	x20, [x20, #3880]
   1c254:	add	x21, sp, #0x108
   1c258:	ldr	x22, [sp, #176]
   1c25c:	b	1c280 <Perl_re_exec_indentf@@Base+0x100b0>
   1c260:	cmp	w19, #0x0
   1c264:	cset	w19, eq  // eq = none
   1c268:	ldr	x0, [sp, #264]
   1c26c:	add	x0, x0, #0x1
   1c270:	str	x0, [sp, #264]
   1c274:	ldr	x1, [sp, #128]
   1c278:	cmp	x0, x1
   1c27c:	b.cs	1c2c8 <Perl_re_exec_indentf@@Base+0x100f8>  // b.hs, b.nlast
   1c280:	ldrb	w1, [x0]
   1c284:	ldr	w1, [x20, x1, lsl #2]
   1c288:	eor	w1, w1, #0x1
   1c28c:	and	w1, w1, #0x1
   1c290:	cmp	w1, w19
   1c294:	b.eq	1c260 <Perl_re_exec_indentf@@Base+0x10090>  // b.none
   1c298:	ldrb	w1, [x22, #88]
   1c29c:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c2a0:	ldr	x1, [x22, #16]
   1c2a4:	cmp	x1, x0
   1c2a8:	b.cc	1c268 <Perl_re_exec_indentf@@Base+0x10098>  // b.lo, b.ul, b.last
   1c2ac:	mov	x2, x21
   1c2b0:	mov	x1, x22
   1c2b4:	mov	x0, x28
   1c2b8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c2bc:	and	w0, w0, #0xff
   1c2c0:	cbz	w0, 1c268 <Perl_re_exec_indentf@@Base+0x10098>
   1c2c4:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c2c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c2cc:	ldr	x0, [x0, #3880]
   1c2d0:	ldr	w0, [x0, #40]
   1c2d4:	eor	w0, w0, #0x1
   1c2d8:	and	w0, w0, #0x1
   1c2dc:	cmp	w0, w19
   1c2e0:	b.eq	20428 <Perl_re_exec_indentf@@Base+0x14258>  // b.none
   1c2e4:	ldr	x3, [sp, #176]
   1c2e8:	ldrb	w0, [x3, #88]
   1c2ec:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c2f0:	ldr	x2, [x3, #16]
   1c2f4:	mov	x0, #0x0                   	// #0
   1c2f8:	ldr	x1, [sp, #264]
   1c2fc:	cmp	x2, x1
   1c300:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1c304:	add	x2, sp, #0x108
   1c308:	mov	x1, x3
   1c30c:	mov	x0, x28
   1c310:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c314:	and	w0, w0, #0xff
   1c318:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c31c:	mov	x0, #0x0                   	// #0
   1c320:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1c324:	mov	w19, #0x0                   	// #0
   1c328:	b	1c330 <Perl_re_exec_indentf@@Base+0x10160>
   1c32c:	mov	w19, #0x1                   	// #1
   1c330:	ldr	x0, [sp, #144]
   1c334:	ldrb	w0, [x0]
   1c338:	cmp	w0, #0x2
   1c33c:	b.eq	1ccc0 <Perl_re_exec_indentf@@Base+0x10af0>  // b.none
   1c340:	b.ls	1c454 <Perl_re_exec_indentf@@Base+0x10284>  // b.plast
   1c344:	cmp	w0, #0x3
   1c348:	b.eq	1d144 <Perl_re_exec_indentf@@Base+0x10f74>  // b.none
   1c34c:	cmp	w0, #0x4
   1c350:	b.ne	1c490 <Perl_re_exec_indentf@@Base+0x102c0>  // b.any
   1c354:	ldr	x0, [sp, #176]
   1c358:	ldr	x1, [x0, #8]
   1c35c:	ldr	x0, [sp, #264]
   1c360:	cmp	x1, x0
   1c364:	b.eq	1d5c8 <Perl_re_exec_indentf@@Base+0x113f8>  // b.none
   1c368:	ldr	w0, [sp, #160]
   1c36c:	cbz	w0, 205b8 <Perl_re_exec_indentf@@Base+0x143e8>
   1c370:	ldr	x21, [sp, #176]
   1c374:	ldr	x2, [x21, #8]
   1c378:	mov	x1, #0xffffffffffffffff    	// #-1
   1c37c:	ldr	x0, [sp, #264]
   1c380:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1c384:	mov	x20, x0
   1c388:	ldr	x22, [x21, #16]
   1c38c:	cmp	x0, x22
   1c390:	b.cs	1d664 <Perl_re_exec_indentf@@Base+0x11494>  // b.hs, b.nlast
   1c394:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c398:	ldr	x0, [x0, #3952]
   1c39c:	ldr	x21, [x0]
   1c3a0:	mov	w1, #0x2c                  	// #44
   1c3a4:	mov	x0, x28
   1c3a8:	bl	52a0 <Perl_ckwarn_d@plt>
   1c3ac:	ands	w0, w0, #0xff
   1c3b0:	mov	w3, #0x9e                  	// #158
   1c3b4:	csel	w3, w3, wzr, eq  // eq = none
   1c3b8:	cbz	x20, 1d688 <Perl_re_exec_indentf@@Base+0x114b8>
   1c3bc:	mov	x7, x20
   1c3c0:	mov	x1, #0x0                   	// #0
   1c3c4:	mov	x2, #0x0                   	// #0
   1c3c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c3cc:	ldr	x9, [x0, #3824]
   1c3d0:	mov	w8, #0xff                  	// #255
   1c3d4:	mov	x6, x9
   1c3d8:	ldrb	w5, [x7]
   1c3dc:	ldrb	w0, [x9, w5, sxtw]
   1c3e0:	and	x4, x0, #0xff
   1c3e4:	asr	w0, w8, w0
   1c3e8:	and	w0, w0, w5
   1c3ec:	sxtw	x0, w0
   1c3f0:	bfi	x5, x1, #6, #58
   1c3f4:	cmp	x2, #0x0
   1c3f8:	csel	x1, x5, x0, ne  // ne = any
   1c3fc:	add	x0, x6, x4
   1c400:	add	x0, x0, x2
   1c404:	ldrb	w2, [x0, #256]
   1c408:	cbnz	x2, 1d6ac <Perl_re_exec_indentf@@Base+0x114dc>
   1c40c:	mov	x0, x21
   1c410:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1c414:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
   1c418:	add	x1, x1, #0x100
   1c41c:	ldr	w22, [x1, x0, lsl #2]
   1c420:	ldr	x20, [sp, #264]
   1c424:	ldr	x0, [sp, #128]
   1c428:	cmp	x20, x0
   1c42c:	b.cs	1d928 <Perl_re_exec_indentf@@Base+0x11758>  // b.hs, b.nlast
   1c430:	mov	w25, #0x16                  	// #22
   1c434:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1c438:	ldr	x21, [x21, #3952]
   1c43c:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   1c440:	ldr	x27, [x24, #3824]
   1c444:	add	x26, sp, #0x108
   1c448:	str	x26, [sp, #136]
   1c44c:	ldr	x26, [sp, #176]
   1c450:	b	1d794 <Perl_re_exec_indentf@@Base+0x115c4>
   1c454:	cbz	w0, 1c498 <Perl_re_exec_indentf@@Base+0x102c8>
   1c458:	ldr	x0, [sp, #176]
   1c45c:	ldr	x1, [x0, #8]
   1c460:	ldr	x0, [sp, #264]
   1c464:	cmp	x1, x0
   1c468:	b.eq	1c874 <Perl_re_exec_indentf@@Base+0x106a4>  // b.none
   1c46c:	ldr	w0, [sp, #160]
   1c470:	cbnz	w0, 1c8e4 <Perl_re_exec_indentf@@Base+0x10714>
   1c474:	ldr	x0, [sp, #264]
   1c478:	ldr	x1, [sp, #128]
   1c47c:	cmp	x0, x1
   1c480:	b.cs	1cc80 <Perl_re_exec_indentf@@Base+0x10ab0>  // b.hs, b.nlast
   1c484:	mov	w21, #0x1                   	// #1
   1c488:	add	x20, sp, #0x108
   1c48c:	b	1cc44 <Perl_re_exec_indentf@@Base+0x10a74>
   1c490:	mov	x0, #0x0                   	// #0
   1c494:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1c498:	ldr	w0, [sp, #160]
   1c49c:	cbz	w0, 1c760 <Perl_re_exec_indentf@@Base+0x10590>
   1c4a0:	ldr	x19, [sp, #176]
   1c4a4:	ldr	x2, [x19, #8]
   1c4a8:	ldr	x0, [sp, #264]
   1c4ac:	cmp	x2, x0
   1c4b0:	b.eq	1c5b8 <Perl_re_exec_indentf@@Base+0x103e8>  // b.none
   1c4b4:	mov	x1, #0xffffffffffffffff    	// #-1
   1c4b8:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1c4bc:	ldr	x1, [x19, #16]
   1c4c0:	cbz	x0, 1c564 <Perl_re_exec_indentf@@Base+0x10394>
   1c4c4:	cmp	x1, x0
   1c4c8:	b.ls	1c598 <Perl_re_exec_indentf@@Base+0x103c8>  // b.plast
   1c4cc:	mov	x8, x0
   1c4d0:	mov	x2, #0x0                   	// #0
   1c4d4:	mov	x4, #0x0                   	// #0
   1c4d8:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   1c4dc:	ldr	x10, [x3, #3824]
   1c4e0:	mov	w9, #0xff                  	// #255
   1c4e4:	mov	x7, x10
   1c4e8:	ldrb	w6, [x8]
   1c4ec:	ldrb	w3, [x10, w6, sxtw]
   1c4f0:	and	x5, x3, #0xff
   1c4f4:	asr	w3, w9, w3
   1c4f8:	and	w3, w3, w6
   1c4fc:	sxtw	x3, w3
   1c500:	bfi	x6, x2, #6, #58
   1c504:	cmp	x4, #0x0
   1c508:	csel	x2, x6, x3, ne  // ne = any
   1c50c:	add	x3, x7, x5
   1c510:	add	x3, x3, x4
   1c514:	ldrb	w4, [x3, #256]
   1c518:	cbnz	x4, 1c588 <Perl_re_exec_indentf@@Base+0x103b8>
   1c51c:	mov	w0, w2
   1c520:	cmp	w2, #0xff
   1c524:	b.gt	1c5d8 <Perl_re_exec_indentf@@Base+0x10408>
   1c528:	sxtw	x2, w2
   1c52c:	tst	x2, #0xffffffffffffff00
   1c530:	b.eq	1c5bc <Perl_re_exec_indentf@@Base+0x103ec>  // b.none
   1c534:	mov	w19, #0x0                   	// #0
   1c538:	ldr	x1, [sp, #264]
   1c53c:	ldr	x0, [sp, #128]
   1c540:	cmp	x1, x0
   1c544:	b.cs	1c814 <Perl_re_exec_indentf@@Base+0x10644>  // b.hs, b.nlast
   1c548:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1c54c:	ldr	x23, [x21, #3880]
   1c550:	add	x22, sp, #0x108
   1c554:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1c558:	ldr	x20, [x20, #4064]
   1c55c:	ldr	x24, [sp, #176]
   1c560:	b	1c700 <Perl_re_exec_indentf@@Base+0x10530>
   1c564:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c568:	add	x3, x3, #0x330
   1c56c:	add	x3, x3, #0xc48
   1c570:	mov	w2, #0x710                 	// #1808
   1c574:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c578:	add	x1, x1, #0xc80
   1c57c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1c580:	add	x0, x0, #0xce8
   1c584:	bl	58e0 <__assert_fail@plt>
   1c588:	add	x8, x8, #0x1
   1c58c:	cmp	x4, #0x1
   1c590:	ccmp	x1, x8, #0x0, ne  // ne = any
   1c594:	b.hi	1c4e8 <Perl_re_exec_indentf@@Base+0x10318>  // b.pmore
   1c598:	mov	x5, #0x0                   	// #0
   1c59c:	mov	x4, #0x0                   	// #0
   1c5a0:	mov	w3, #0x0                   	// #0
   1c5a4:	mov	x2, #0x0                   	// #0
   1c5a8:	sub	x1, x1, x0
   1c5ac:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1c5b0:	mov	x2, x0
   1c5b4:	b	1c51c <Perl_re_exec_indentf@@Base+0x1034c>
   1c5b8:	mov	w0, #0xa                   	// #10
   1c5bc:	and	x0, x0, #0xff
   1c5c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1c5c4:	ldr	x1, [x1, #3880]
   1c5c8:	ldr	w0, [x1, x0, lsl #2]
   1c5cc:	mov	w19, #0x1                   	// #1
   1c5d0:	tbnz	w0, #0, 1c538 <Perl_re_exec_indentf@@Base+0x10368>
   1c5d4:	b	1c534 <Perl_re_exec_indentf@@Base+0x10364>
   1c5d8:	sxtw	x2, w2
   1c5dc:	mov	w1, #0x0                   	// #0
   1c5e0:	mov	x0, x28
   1c5e4:	bl	58c0 <Perl__is_uni_FOO@plt>
   1c5e8:	and	w19, w0, #0xff
   1c5ec:	b	1c538 <Perl_re_exec_indentf@@Base+0x10368>
   1c5f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c5f4:	add	x3, x3, #0x330
   1c5f8:	add	x3, x3, #0xcf0
   1c5fc:	mov	w2, #0x9ae                 	// #2478
   1c600:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c604:	add	x1, x1, #0xcb0
   1c608:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1c60c:	add	x0, x0, #0xaa0
   1c610:	bl	58e0 <__assert_fail@plt>
   1c614:	and	w0, w3, #0xfe
   1c618:	cmp	w0, #0xc2
   1c61c:	b.ne	1c66c <Perl_re_exec_indentf@@Base+0x1049c>  // b.any
   1c620:	sub	x0, x2, x1
   1c624:	cmp	x0, #0x1
   1c628:	b.le	1c654 <Perl_re_exec_indentf@@Base+0x10484>
   1c62c:	ldrb	w0, [x1, #1]
   1c630:	and	w4, w0, #0xc0
   1c634:	cmp	w4, #0x80
   1c638:	b.ne	1c654 <Perl_re_exec_indentf@@Base+0x10484>  // b.any
   1c63c:	bfi	w0, w3, #6, #26
   1c640:	and	x0, x0, #0xff
   1c644:	ldr	w0, [x23, x0, lsl #2]
   1c648:	eor	w0, w0, #0x1
   1c64c:	and	w0, w0, #0x1
   1c650:	b	1c724 <Perl_re_exec_indentf@@Base+0x10554>
   1c654:	mov	w4, #0x1                   	// #1
   1c658:	mov	w3, #0x0                   	// #0
   1c65c:	mov	x0, x28
   1c660:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1c664:	mov	w0, #0x1                   	// #1
   1c668:	b	1c724 <Perl_re_exec_indentf@@Base+0x10554>
   1c66c:	mov	x3, x2
   1c670:	mov	x2, x1
   1c674:	mov	w1, #0x0                   	// #0
   1c678:	mov	x0, x28
   1c67c:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   1c680:	and	w0, w0, #0xff
   1c684:	eor	w0, w0, #0x1
   1c688:	b	1c724 <Perl_re_exec_indentf@@Base+0x10554>
   1c68c:	ldrb	w0, [x24, #88]
   1c690:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c694:	ldr	x1, [x24, #16]
   1c698:	ldr	x0, [sp, #264]
   1c69c:	cmp	x1, x0
   1c6a0:	b.cs	1c6c8 <Perl_re_exec_indentf@@Base+0x104f8>  // b.hs, b.nlast
   1c6a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c6a8:	add	x3, x3, #0x330
   1c6ac:	add	x3, x3, #0xcf0
   1c6b0:	mov	w2, #0x9ae                 	// #2478
   1c6b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c6b8:	add	x1, x1, #0xcb0
   1c6bc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1c6c0:	add	x0, x0, #0xa80
   1c6c4:	bl	58e0 <__assert_fail@plt>
   1c6c8:	mov	x2, x22
   1c6cc:	mov	x1, x24
   1c6d0:	mov	x0, x28
   1c6d4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c6d8:	and	w0, w0, #0xff
   1c6dc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c6e0:	cmp	w19, #0x0
   1c6e4:	cset	w19, eq  // eq = none
   1c6e8:	b	1c72c <Perl_re_exec_indentf@@Base+0x1055c>
   1c6ec:	add	x1, x1, x2
   1c6f0:	str	x1, [sp, #264]
   1c6f4:	ldr	x0, [sp, #128]
   1c6f8:	cmp	x1, x0
   1c6fc:	b.cs	1c814 <Perl_re_exec_indentf@@Base+0x10644>  // b.hs, b.nlast
   1c700:	ldr	x2, [x24, #16]
   1c704:	cmp	x2, x1
   1c708:	b.ls	1c5f0 <Perl_re_exec_indentf@@Base+0x10420>  // b.plast
   1c70c:	ldrb	w3, [x1]
   1c710:	tbnz	w3, #7, 1c614 <Perl_re_exec_indentf@@Base+0x10444>
   1c714:	ldr	x0, [x21, #3880]
   1c718:	ldr	w0, [x0, w3, sxtw #2]
   1c71c:	tst	x0, #0x1
   1c720:	cset	w0, eq  // eq = none
   1c724:	cmp	w0, w19
   1c728:	b.eq	1c68c <Perl_re_exec_indentf@@Base+0x104bc>  // b.none
   1c72c:	ldr	x0, [x24, #16]
   1c730:	ldr	x1, [sp, #264]
   1c734:	cmp	x0, x1
   1c738:	b.cc	1c6a4 <Perl_re_exec_indentf@@Base+0x104d4>  // b.lo, b.ul, b.last
   1c73c:	sub	x0, x0, x1
   1c740:	mov	x2, #0x0                   	// #0
   1c744:	cmp	x0, #0x0
   1c748:	b.le	1c6ec <Perl_re_exec_indentf@@Base+0x1051c>
   1c74c:	ldrb	w2, [x1]
   1c750:	ldrb	w2, [x20, w2, sxtw]
   1c754:	cmp	x2, x0
   1c758:	csel	x2, x2, x0, le
   1c75c:	b	1c6ec <Perl_re_exec_indentf@@Base+0x1051c>
   1c760:	ldr	x0, [sp, #264]
   1c764:	ldr	x1, [sp, #176]
   1c768:	ldr	x1, [x1, #8]
   1c76c:	mov	w2, #0xa                   	// #10
   1c770:	cmp	x1, x0
   1c774:	b.eq	1c77c <Perl_re_exec_indentf@@Base+0x105ac>  // b.none
   1c778:	ldurb	w2, [x0, #-1]
   1c77c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1c780:	ldr	x1, [x1, #3880]
   1c784:	ldr	w19, [x1, w2, sxtw #2]
   1c788:	and	w19, w19, #0x1
   1c78c:	ldr	x1, [sp, #128]
   1c790:	cmp	x0, x1
   1c794:	b.cs	1c814 <Perl_re_exec_indentf@@Base+0x10644>  // b.hs, b.nlast
   1c798:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1c79c:	ldr	x20, [x20, #3880]
   1c7a0:	add	x21, sp, #0x108
   1c7a4:	ldr	x22, [sp, #176]
   1c7a8:	b	1c7cc <Perl_re_exec_indentf@@Base+0x105fc>
   1c7ac:	cmp	w19, #0x0
   1c7b0:	cset	w19, eq  // eq = none
   1c7b4:	ldr	x0, [sp, #264]
   1c7b8:	add	x0, x0, #0x1
   1c7bc:	str	x0, [sp, #264]
   1c7c0:	ldr	x1, [sp, #128]
   1c7c4:	cmp	x0, x1
   1c7c8:	b.cs	1c814 <Perl_re_exec_indentf@@Base+0x10644>  // b.hs, b.nlast
   1c7cc:	ldrb	w1, [x0]
   1c7d0:	ldr	w1, [x20, x1, lsl #2]
   1c7d4:	eor	w1, w1, #0x1
   1c7d8:	and	w1, w1, #0x1
   1c7dc:	cmp	w1, w19
   1c7e0:	b.ne	1c7b4 <Perl_re_exec_indentf@@Base+0x105e4>  // b.any
   1c7e4:	ldrb	w1, [x22, #88]
   1c7e8:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c7ec:	ldr	x1, [x22, #16]
   1c7f0:	cmp	x1, x0
   1c7f4:	b.cc	1c7ac <Perl_re_exec_indentf@@Base+0x105dc>  // b.lo, b.ul, b.last
   1c7f8:	mov	x2, x21
   1c7fc:	mov	x1, x22
   1c800:	mov	x0, x28
   1c804:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c808:	and	w0, w0, #0xff
   1c80c:	cbz	w0, 1c7ac <Perl_re_exec_indentf@@Base+0x105dc>
   1c810:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c814:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c818:	ldr	x0, [x0, #3880]
   1c81c:	ldr	w1, [x0, #40]
   1c820:	eor	w1, w1, #0x1
   1c824:	and	w1, w1, #0x1
   1c828:	mov	x0, #0x0                   	// #0
   1c82c:	cmp	w1, w19
   1c830:	b.ne	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.any
   1c834:	ldr	x3, [sp, #176]
   1c838:	ldrb	w0, [x3, #88]
   1c83c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c840:	ldr	x2, [x3, #16]
   1c844:	mov	x0, #0x0                   	// #0
   1c848:	ldr	x1, [sp, #264]
   1c84c:	cmp	x2, x1
   1c850:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1c854:	add	x2, sp, #0x108
   1c858:	mov	x1, x3
   1c85c:	mov	x0, x28
   1c860:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c864:	and	w0, w0, #0xff
   1c868:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c86c:	mov	x0, #0x0                   	// #0
   1c870:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1c874:	ldr	x20, [sp, #176]
   1c878:	ldrb	w0, [x20, #88]
   1c87c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c880:	add	x2, sp, #0x108
   1c884:	mov	x1, x20
   1c888:	mov	x0, x28
   1c88c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1c890:	and	w0, w0, #0xff
   1c894:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1c898:	ldr	w0, [sp, #160]
   1c89c:	cbz	w0, 20480 <Perl_re_exec_indentf@@Base+0x142b0>
   1c8a0:	ldr	x2, [x20, #16]
   1c8a4:	ldr	x0, [sp, #264]
   1c8a8:	cmp	x2, x0
   1c8ac:	b.cc	1c9c0 <Perl_re_exec_indentf@@Base+0x107f0>  // b.lo, b.ul, b.last
   1c8b0:	sub	x3, x2, x0
   1c8b4:	cmp	x3, #0x0
   1c8b8:	b.le	204a4 <Perl_re_exec_indentf@@Base+0x142d4>
   1c8bc:	ldrb	w4, [x0]
   1c8c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1c8c4:	ldr	x1, [x1, #4064]
   1c8c8:	ldrb	w1, [x1, x4]
   1c8cc:	cmp	x1, x3
   1c8d0:	csel	x1, x1, x3, le
   1c8d4:	add	x0, x0, x1
   1c8d8:	str	x0, [sp, #264]
   1c8dc:	cmp	x2, x0
   1c8e0:	b.ls	20460 <Perl_re_exec_indentf@@Base+0x14290>  // b.plast
   1c8e4:	ldr	x21, [sp, #176]
   1c8e8:	ldr	x2, [x21, #8]
   1c8ec:	mov	x1, #0xffffffffffffffff    	// #-1
   1c8f0:	ldr	x0, [sp, #264]
   1c8f4:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1c8f8:	mov	x20, x0
   1c8fc:	ldr	x22, [x21, #16]
   1c900:	cmp	x0, x22
   1c904:	b.cs	1c9e4 <Perl_re_exec_indentf@@Base+0x10814>  // b.hs, b.nlast
   1c908:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c90c:	ldr	x0, [x0, #3720]
   1c910:	ldr	x21, [x0]
   1c914:	mov	w1, #0x2c                  	// #44
   1c918:	mov	x0, x28
   1c91c:	bl	52a0 <Perl_ckwarn_d@plt>
   1c920:	ands	w0, w0, #0xff
   1c924:	mov	w3, #0x9e                  	// #158
   1c928:	csel	w3, w3, wzr, eq  // eq = none
   1c92c:	cbz	x20, 1ca08 <Perl_re_exec_indentf@@Base+0x10838>
   1c930:	mov	x7, x20
   1c934:	mov	x1, #0x0                   	// #0
   1c938:	mov	x2, #0x0                   	// #0
   1c93c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1c940:	ldr	x9, [x0, #3824]
   1c944:	mov	w8, #0xff                  	// #255
   1c948:	mov	x6, x9
   1c94c:	ldrb	w5, [x7]
   1c950:	ldrb	w0, [x9, w5, sxtw]
   1c954:	and	x4, x0, #0xff
   1c958:	asr	w0, w8, w0
   1c95c:	and	w0, w0, w5
   1c960:	sxtw	x0, w0
   1c964:	bfi	x5, x1, #6, #58
   1c968:	cmp	x2, #0x0
   1c96c:	csel	x1, x5, x0, ne  // ne = any
   1c970:	add	x0, x6, x4
   1c974:	add	x0, x0, x2
   1c978:	ldrb	w2, [x0, #256]
   1c97c:	cbnz	x2, 1ca2c <Perl_re_exec_indentf@@Base+0x1085c>
   1c980:	mov	x0, x21
   1c984:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1c988:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
   1c98c:	add	x1, x1, #0x398
   1c990:	ldr	w24, [x1, x0, lsl #2]
   1c994:	ldr	x20, [sp, #264]
   1c998:	ldr	x0, [sp, #128]
   1c99c:	cmp	x20, x0
   1c9a0:	b.cs	1cc80 <Perl_re_exec_indentf@@Base+0x10ab0>  // b.hs, b.nlast
   1c9a4:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1c9a8:	ldr	x21, [x21, #3720]
   1c9ac:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1c9b0:	ldr	x26, [x23, #3824]
   1c9b4:	add	x25, sp, #0x108
   1c9b8:	ldr	x27, [sp, #176]
   1c9bc:	b	1cb10 <Perl_re_exec_indentf@@Base+0x10940>
   1c9c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c9c4:	add	x3, x3, #0x330
   1c9c8:	add	x3, x3, #0xcf0
   1c9cc:	mov	w2, #0x9b8                 	// #2488
   1c9d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c9d4:	add	x1, x1, #0xcb0
   1c9d8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1c9dc:	add	x0, x0, #0xa80
   1c9e0:	bl	58e0 <__assert_fail@plt>
   1c9e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1c9e8:	add	x3, x3, #0x330
   1c9ec:	add	x3, x3, #0xcf0
   1c9f0:	mov	w2, #0x9bf                 	// #2495
   1c9f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1c9f8:	add	x1, x1, #0xcb0
   1c9fc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ca00:	add	x0, x0, #0xae8
   1ca04:	bl	58e0 <__assert_fail@plt>
   1ca08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ca0c:	add	x3, x3, #0x330
   1ca10:	add	x3, x3, #0xc48
   1ca14:	mov	w2, #0x710                 	// #1808
   1ca18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ca1c:	add	x1, x1, #0xc80
   1ca20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1ca24:	add	x0, x0, #0xce8
   1ca28:	bl	58e0 <__assert_fail@plt>
   1ca2c:	add	x7, x7, #0x1
   1ca30:	cmp	x2, #0x1
   1ca34:	ccmp	x22, x7, #0x0, ne  // ne = any
   1ca38:	b.hi	1c94c <Perl_re_exec_indentf@@Base+0x1077c>  // b.pmore
   1ca3c:	mov	x5, #0x0                   	// #0
   1ca40:	mov	x4, #0x0                   	// #0
   1ca44:	mov	x2, #0x0                   	// #0
   1ca48:	sub	x1, x22, x20
   1ca4c:	mov	x0, x20
   1ca50:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1ca54:	mov	x1, x0
   1ca58:	b	1c980 <Perl_re_exec_indentf@@Base+0x107b0>
   1ca5c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ca60:	add	x3, x3, #0x330
   1ca64:	add	x3, x3, #0xcf0
   1ca68:	mov	w2, #0x9c4                 	// #2500
   1ca6c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ca70:	add	x1, x1, #0xcb0
   1ca74:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ca78:	add	x0, x0, #0xb30
   1ca7c:	bl	58e0 <__assert_fail@plt>
   1ca80:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ca84:	add	x3, x3, #0x330
   1ca88:	add	x3, x3, #0xc48
   1ca8c:	mov	w2, #0x710                 	// #1808
   1ca90:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ca94:	add	x1, x1, #0xc80
   1ca98:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1ca9c:	add	x0, x0, #0xce8
   1caa0:	bl	58e0 <__assert_fail@plt>
   1caa4:	add	x6, x6, #0x1
   1caa8:	cmp	x22, x6
   1caac:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
   1cab0:	b.ne	1cb54 <Perl_re_exec_indentf@@Base+0x10984>  // b.any
   1cab4:	mov	x5, #0x0                   	// #0
   1cab8:	mov	x4, #0x0                   	// #0
   1cabc:	mov	x2, #0x0                   	// #0
   1cac0:	sub	x1, x22, x20
   1cac4:	mov	x0, x20
   1cac8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1cacc:	mov	x1, x0
   1cad0:	b	1cb88 <Perl_re_exec_indentf@@Base+0x109b8>
   1cad4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1cad8:	add	x3, x3, #0x330
   1cadc:	add	x3, x3, #0xcf0
   1cae0:	mov	w2, #0x9d0                 	// #2512
   1cae4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1cae8:	add	x1, x1, #0xcb0
   1caec:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1caf0:	add	x0, x0, #0xa80
   1caf4:	bl	58e0 <__assert_fail@plt>
   1caf8:	add	x20, x20, x1
   1cafc:	str	x20, [sp, #264]
   1cb00:	ldr	x0, [sp, #128]
   1cb04:	cmp	x20, x0
   1cb08:	b.cs	1cc80 <Perl_re_exec_indentf@@Base+0x10ab0>  // b.hs, b.nlast
   1cb0c:	mov	w24, w22
   1cb10:	ldr	x22, [x27, #16]
   1cb14:	cmp	x22, x20
   1cb18:	b.ls	1ca5c <Perl_re_exec_indentf@@Base+0x1088c>  // b.plast
   1cb1c:	ldr	x0, [x21]
   1cb20:	str	x0, [sp, #120]
   1cb24:	mov	w1, #0x2c                  	// #44
   1cb28:	mov	x0, x28
   1cb2c:	bl	52a0 <Perl_ckwarn_d@plt>
   1cb30:	ands	w0, w0, #0xff
   1cb34:	mov	w3, #0x9e                  	// #158
   1cb38:	csel	w3, w3, wzr, eq  // eq = none
   1cb3c:	cbz	x20, 1ca80 <Perl_re_exec_indentf@@Base+0x108b0>
   1cb40:	mov	x6, x20
   1cb44:	mov	x1, #0x0                   	// #0
   1cb48:	mov	x2, #0x0                   	// #0
   1cb4c:	mov	w8, #0xff                  	// #255
   1cb50:	ldr	x7, [x23, #3824]
   1cb54:	ldrb	w5, [x6]
   1cb58:	ldrb	w0, [x26, w5, sxtw]
   1cb5c:	and	x4, x0, #0xff
   1cb60:	asr	w0, w8, w0
   1cb64:	and	w0, w0, w5
   1cb68:	sxtw	x0, w0
   1cb6c:	bfi	x5, x1, #6, #58
   1cb70:	cmp	x2, #0x0
   1cb74:	csel	x1, x5, x0, ne  // ne = any
   1cb78:	add	x0, x7, x4
   1cb7c:	add	x2, x0, x2
   1cb80:	ldrb	w2, [x2, #256]
   1cb84:	cbnz	x2, 1caa4 <Perl_re_exec_indentf@@Base+0x108d4>
   1cb88:	ldr	x0, [sp, #120]
   1cb8c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1cb90:	adrp	x1, 74000 <boot_re@@Base+0x1241c>
   1cb94:	add	x1, x1, #0x398
   1cb98:	ldr	w22, [x1, x0, lsl #2]
   1cb9c:	mov	w5, #0x1                   	// #1
   1cba0:	ldr	x4, [sp, #264]
   1cba4:	ldr	x3, [x27, #8]
   1cba8:	mov	w2, w22
   1cbac:	mov	w1, w24
   1cbb0:	mov	x0, x28
   1cbb4:	bl	9e90 <Perl__inverse_folds@plt+0x4490>
   1cbb8:	cmp	w19, w0, uxtb
   1cbbc:	b.eq	1cbe0 <Perl_re_exec_indentf@@Base+0x10a10>  // b.none
   1cbc0:	ldrb	w0, [x27, #88]
   1cbc4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cbc8:	mov	x2, x25
   1cbcc:	mov	x1, x27
   1cbd0:	mov	x0, x28
   1cbd4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1cbd8:	and	w0, w0, #0xff
   1cbdc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cbe0:	ldr	x0, [x27, #16]
   1cbe4:	ldr	x20, [sp, #264]
   1cbe8:	cmp	x0, x20
   1cbec:	b.cc	1cad4 <Perl_re_exec_indentf@@Base+0x10904>  // b.lo, b.ul, b.last
   1cbf0:	sub	x0, x0, x20
   1cbf4:	mov	x1, #0x0                   	// #0
   1cbf8:	cmp	x0, #0x0
   1cbfc:	b.le	1caf8 <Perl_re_exec_indentf@@Base+0x10928>
   1cc00:	ldrb	w2, [x20]
   1cc04:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1cc08:	ldr	x1, [x1, #4064]
   1cc0c:	ldrb	w1, [x1, w2, sxtw]
   1cc10:	cmp	x1, x0
   1cc14:	csel	x1, x1, x0, le
   1cc18:	b	1caf8 <Perl_re_exec_indentf@@Base+0x10928>
   1cc1c:	ldrb	w0, [x0]
   1cc20:	cmp	w0, #0xa
   1cc24:	cset	w1, ne  // ne = any
   1cc28:	b	1cc54 <Perl_re_exec_indentf@@Base+0x10a84>
   1cc2c:	ldr	x0, [sp, #264]
   1cc30:	add	x0, x0, #0x1
   1cc34:	str	x0, [sp, #264]
   1cc38:	ldr	x1, [sp, #128]
   1cc3c:	cmp	x0, x1
   1cc40:	b.cs	1cc80 <Perl_re_exec_indentf@@Base+0x10ab0>  // b.hs, b.nlast
   1cc44:	ldurb	w2, [x0, #-1]
   1cc48:	mov	w1, w21
   1cc4c:	cmp	w2, #0xd
   1cc50:	b.eq	1cc1c <Perl_re_exec_indentf@@Base+0x10a4c>  // b.none
   1cc54:	cmp	w19, w1
   1cc58:	b.eq	1cc2c <Perl_re_exec_indentf@@Base+0x10a5c>  // b.none
   1cc5c:	ldr	x1, [sp, #176]
   1cc60:	ldrb	w0, [x1, #88]
   1cc64:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cc68:	mov	x2, x20
   1cc6c:	mov	x0, x28
   1cc70:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1cc74:	and	w0, w0, #0xff
   1cc78:	cbz	w0, 1cc2c <Perl_re_exec_indentf@@Base+0x10a5c>
   1cc7c:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cc80:	ldr	x3, [sp, #176]
   1cc84:	ldrb	w0, [x3, #88]
   1cc88:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cc8c:	ldr	x2, [x3, #16]
   1cc90:	mov	x0, #0x0                   	// #0
   1cc94:	ldr	x1, [sp, #264]
   1cc98:	cmp	x2, x1
   1cc9c:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1cca0:	add	x2, sp, #0x108
   1cca4:	mov	x1, x3
   1cca8:	mov	x0, x28
   1ccac:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1ccb0:	and	w0, w0, #0xff
   1ccb4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ccb8:	mov	x0, #0x0                   	// #0
   1ccbc:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ccc0:	ldr	x0, [sp, #176]
   1ccc4:	ldr	x1, [x0, #8]
   1ccc8:	ldr	x0, [sp, #264]
   1cccc:	cmp	x1, x0
   1ccd0:	b.eq	1cdb8 <Perl_re_exec_indentf@@Base+0x10be8>  // b.none
   1ccd4:	ldr	w0, [sp, #160]
   1ccd8:	cbz	w0, 204c8 <Perl_re_exec_indentf@@Base+0x142f8>
   1ccdc:	ldr	x21, [sp, #176]
   1cce0:	ldr	x2, [x21, #8]
   1cce4:	mov	x1, #0xffffffffffffffff    	// #-1
   1cce8:	ldr	x0, [sp, #264]
   1ccec:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1ccf0:	mov	x20, x0
   1ccf4:	ldr	x22, [x21, #16]
   1ccf8:	cmp	x0, x22
   1ccfc:	b.cs	1ce54 <Perl_re_exec_indentf@@Base+0x10c84>  // b.hs, b.nlast
   1cd00:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1cd04:	ldr	x0, [x0, #3992]
   1cd08:	ldr	x21, [x0]
   1cd0c:	mov	w1, #0x2c                  	// #44
   1cd10:	mov	x0, x28
   1cd14:	bl	52a0 <Perl_ckwarn_d@plt>
   1cd18:	ands	w0, w0, #0xff
   1cd1c:	mov	w3, #0x9e                  	// #158
   1cd20:	csel	w3, w3, wzr, eq  // eq = none
   1cd24:	cbz	x20, 1ce78 <Perl_re_exec_indentf@@Base+0x10ca8>
   1cd28:	mov	x7, x20
   1cd2c:	mov	x1, #0x0                   	// #0
   1cd30:	mov	x2, #0x0                   	// #0
   1cd34:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1cd38:	ldr	x9, [x0, #3824]
   1cd3c:	mov	w8, #0xff                  	// #255
   1cd40:	mov	x6, x9
   1cd44:	ldrb	w5, [x7]
   1cd48:	ldrb	w0, [x9, w5, sxtw]
   1cd4c:	and	x4, x0, #0xff
   1cd50:	asr	w0, w8, w0
   1cd54:	and	w0, w0, w5
   1cd58:	sxtw	x0, w0
   1cd5c:	bfi	x5, x1, #6, #58
   1cd60:	cmp	x2, #0x0
   1cd64:	csel	x1, x5, x0, ne  // ne = any
   1cd68:	add	x0, x6, x4
   1cd6c:	add	x0, x0, x2
   1cd70:	ldrb	w2, [x0, #256]
   1cd74:	cbnz	x2, 1ce9c <Perl_re_exec_indentf@@Base+0x10ccc>
   1cd78:	mov	x0, x21
   1cd7c:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1cd80:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
   1cd84:	add	x1, x1, #0xe48
   1cd88:	ldr	w24, [x1, x0, lsl #2]
   1cd8c:	ldr	x20, [sp, #264]
   1cd90:	ldr	x0, [sp, #128]
   1cd94:	cmp	x20, x0
   1cd98:	b.cs	1d104 <Perl_re_exec_indentf@@Base+0x10f34>  // b.hs, b.nlast
   1cd9c:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1cda0:	ldr	x21, [x21, #3992]
   1cda4:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1cda8:	ldr	x26, [x23, #3824]
   1cdac:	add	x25, sp, #0x108
   1cdb0:	ldr	x27, [sp, #176]
   1cdb4:	b	1cf80 <Perl_re_exec_indentf@@Base+0x10db0>
   1cdb8:	ldr	x20, [sp, #176]
   1cdbc:	ldrb	w0, [x20, #88]
   1cdc0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cdc4:	add	x2, sp, #0x108
   1cdc8:	mov	x1, x20
   1cdcc:	mov	x0, x28
   1cdd0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1cdd4:	and	w0, w0, #0xff
   1cdd8:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1cddc:	ldr	w0, [sp, #160]
   1cde0:	cbz	w0, 204ac <Perl_re_exec_indentf@@Base+0x142dc>
   1cde4:	ldr	x2, [x20, #16]
   1cde8:	ldr	x0, [sp, #264]
   1cdec:	cmp	x2, x0
   1cdf0:	b.cc	1ce30 <Perl_re_exec_indentf@@Base+0x10c60>  // b.lo, b.ul, b.last
   1cdf4:	sub	x3, x2, x0
   1cdf8:	cmp	x3, #0x0
   1cdfc:	b.le	20518 <Perl_re_exec_indentf@@Base+0x14348>
   1ce00:	ldrb	w4, [x0]
   1ce04:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1ce08:	ldr	x1, [x1, #4064]
   1ce0c:	ldrb	w1, [x1, x4]
   1ce10:	cmp	x1, x3
   1ce14:	csel	x1, x1, x3, le
   1ce18:	add	x0, x0, x1
   1ce1c:	str	x0, [sp, #264]
   1ce20:	cmp	x2, x0
   1ce24:	b.hi	1ccdc <Perl_re_exec_indentf@@Base+0x10b0c>  // b.pmore
   1ce28:	mov	x0, #0x0                   	// #0
   1ce2c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ce30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ce34:	add	x3, x3, #0x330
   1ce38:	add	x3, x3, #0xcf0
   1ce3c:	mov	w2, #0x9ee                 	// #2542
   1ce40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ce44:	add	x1, x1, #0xcb0
   1ce48:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ce4c:	add	x0, x0, #0xa80
   1ce50:	bl	58e0 <__assert_fail@plt>
   1ce54:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ce58:	add	x3, x3, #0x330
   1ce5c:	add	x3, x3, #0xcf0
   1ce60:	mov	w2, #0x9f5                 	// #2549
   1ce64:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ce68:	add	x1, x1, #0xcb0
   1ce6c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ce70:	add	x0, x0, #0xae8
   1ce74:	bl	58e0 <__assert_fail@plt>
   1ce78:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ce7c:	add	x3, x3, #0x330
   1ce80:	add	x3, x3, #0xc48
   1ce84:	mov	w2, #0x710                 	// #1808
   1ce88:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ce8c:	add	x1, x1, #0xc80
   1ce90:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1ce94:	add	x0, x0, #0xce8
   1ce98:	bl	58e0 <__assert_fail@plt>
   1ce9c:	add	x7, x7, #0x1
   1cea0:	cmp	x2, #0x1
   1cea4:	ccmp	x22, x7, #0x0, ne  // ne = any
   1cea8:	b.hi	1cd44 <Perl_re_exec_indentf@@Base+0x10b74>  // b.pmore
   1ceac:	mov	x5, #0x0                   	// #0
   1ceb0:	mov	x4, #0x0                   	// #0
   1ceb4:	mov	x2, #0x0                   	// #0
   1ceb8:	sub	x1, x22, x20
   1cebc:	mov	x0, x20
   1cec0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1cec4:	mov	x1, x0
   1cec8:	b	1cd78 <Perl_re_exec_indentf@@Base+0x10ba8>
   1cecc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ced0:	add	x3, x3, #0x330
   1ced4:	add	x3, x3, #0xcf0
   1ced8:	mov	w2, #0x9fa                 	// #2554
   1cedc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1cee0:	add	x1, x1, #0xcb0
   1cee4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1cee8:	add	x0, x0, #0xb30
   1ceec:	bl	58e0 <__assert_fail@plt>
   1cef0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1cef4:	add	x3, x3, #0x330
   1cef8:	add	x3, x3, #0xc48
   1cefc:	mov	w2, #0x710                 	// #1808
   1cf00:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1cf04:	add	x1, x1, #0xc80
   1cf08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1cf0c:	add	x0, x0, #0xce8
   1cf10:	bl	58e0 <__assert_fail@plt>
   1cf14:	add	x6, x6, #0x1
   1cf18:	cmp	x22, x6
   1cf1c:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
   1cf20:	b.ne	1cfc4 <Perl_re_exec_indentf@@Base+0x10df4>  // b.any
   1cf24:	mov	x5, #0x0                   	// #0
   1cf28:	mov	x4, #0x0                   	// #0
   1cf2c:	mov	x2, #0x0                   	// #0
   1cf30:	sub	x1, x22, x20
   1cf34:	mov	x0, x20
   1cf38:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1cf3c:	mov	x1, x0
   1cf40:	b	1cff8 <Perl_re_exec_indentf@@Base+0x10e28>
   1cf44:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1cf48:	add	x3, x3, #0x330
   1cf4c:	add	x3, x3, #0xcf0
   1cf50:	mov	w2, #0xa06                 	// #2566
   1cf54:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1cf58:	add	x1, x1, #0xcb0
   1cf5c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1cf60:	add	x0, x0, #0xa80
   1cf64:	bl	58e0 <__assert_fail@plt>
   1cf68:	add	x20, x20, x1
   1cf6c:	str	x20, [sp, #264]
   1cf70:	ldr	x0, [sp, #128]
   1cf74:	cmp	x20, x0
   1cf78:	b.cs	1d104 <Perl_re_exec_indentf@@Base+0x10f34>  // b.hs, b.nlast
   1cf7c:	mov	w24, w22
   1cf80:	ldr	x22, [x27, #16]
   1cf84:	cmp	x22, x20
   1cf88:	b.ls	1cecc <Perl_re_exec_indentf@@Base+0x10cfc>  // b.plast
   1cf8c:	ldr	x0, [x21]
   1cf90:	str	x0, [sp, #120]
   1cf94:	mov	w1, #0x2c                  	// #44
   1cf98:	mov	x0, x28
   1cf9c:	bl	52a0 <Perl_ckwarn_d@plt>
   1cfa0:	ands	w0, w0, #0xff
   1cfa4:	mov	w3, #0x9e                  	// #158
   1cfa8:	csel	w3, w3, wzr, eq  // eq = none
   1cfac:	cbz	x20, 1cef0 <Perl_re_exec_indentf@@Base+0x10d20>
   1cfb0:	mov	x6, x20
   1cfb4:	mov	x1, #0x0                   	// #0
   1cfb8:	mov	x2, #0x0                   	// #0
   1cfbc:	mov	w8, #0xff                  	// #255
   1cfc0:	ldr	x7, [x23, #3824]
   1cfc4:	ldrb	w5, [x6]
   1cfc8:	ldrb	w0, [x26, w5, sxtw]
   1cfcc:	and	x4, x0, #0xff
   1cfd0:	asr	w0, w8, w0
   1cfd4:	and	w0, w0, w5
   1cfd8:	sxtw	x0, w0
   1cfdc:	bfi	x5, x1, #6, #58
   1cfe0:	cmp	x2, #0x0
   1cfe4:	csel	x1, x5, x0, ne  // ne = any
   1cfe8:	add	x0, x7, x4
   1cfec:	add	x2, x0, x2
   1cff0:	ldrb	w2, [x2, #256]
   1cff4:	cbnz	x2, 1cf14 <Perl_re_exec_indentf@@Base+0x10d44>
   1cff8:	ldr	x0, [sp, #120]
   1cffc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d000:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
   1d004:	add	x1, x1, #0xe48
   1d008:	ldr	w22, [x1, x0, lsl #2]
   1d00c:	mov	w6, #0x1                   	// #1
   1d010:	ldr	x5, [x27, #16]
   1d014:	ldr	x4, [sp, #264]
   1d018:	ldr	x3, [x27, #8]
   1d01c:	mov	w2, w22
   1d020:	mov	w1, w24
   1d024:	mov	x0, x28
   1d028:	bl	9704 <Perl__inverse_folds@plt+0x3d04>
   1d02c:	cmp	w19, w0, uxtb
   1d030:	b.eq	1d054 <Perl_re_exec_indentf@@Base+0x10e84>  // b.none
   1d034:	ldrb	w0, [x27, #88]
   1d038:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d03c:	mov	x2, x25
   1d040:	mov	x1, x27
   1d044:	mov	x0, x28
   1d048:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d04c:	and	w0, w0, #0xff
   1d050:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d054:	ldr	x0, [x27, #16]
   1d058:	ldr	x20, [sp, #264]
   1d05c:	cmp	x0, x20
   1d060:	b.cc	1cf44 <Perl_re_exec_indentf@@Base+0x10d74>  // b.lo, b.ul, b.last
   1d064:	sub	x0, x0, x20
   1d068:	mov	x1, #0x0                   	// #0
   1d06c:	cmp	x0, #0x0
   1d070:	b.le	1cf68 <Perl_re_exec_indentf@@Base+0x10d98>
   1d074:	ldrb	w2, [x20]
   1d078:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1d07c:	ldr	x1, [x1, #4064]
   1d080:	ldrb	w1, [x1, w2, sxtw]
   1d084:	cmp	x1, x0
   1d088:	csel	x1, x1, x0, le
   1d08c:	b	1cf68 <Perl_re_exec_indentf@@Base+0x10d98>
   1d090:	ldr	x0, [sp, #264]
   1d094:	add	x0, x0, #0x1
   1d098:	str	x0, [sp, #264]
   1d09c:	ldr	x1, [sp, #128]
   1d0a0:	cmp	x0, x1
   1d0a4:	b.cs	1d104 <Perl_re_exec_indentf@@Base+0x10f34>  // b.hs, b.nlast
   1d0a8:	ldrb	w1, [x0]
   1d0ac:	ldr	x0, [x21]
   1d0b0:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d0b4:	mov	w1, w22
   1d0b8:	ldr	w22, [x20, x0, lsl #2]
   1d0bc:	mov	w6, #0x0                   	// #0
   1d0c0:	ldr	x5, [x24, #16]
   1d0c4:	ldr	x4, [sp, #264]
   1d0c8:	ldr	x3, [x24, #8]
   1d0cc:	mov	w2, w22
   1d0d0:	mov	x0, x28
   1d0d4:	bl	9704 <Perl__inverse_folds@plt+0x3d04>
   1d0d8:	cmp	w19, w0, uxtb
   1d0dc:	b.eq	1d090 <Perl_re_exec_indentf@@Base+0x10ec0>  // b.none
   1d0e0:	ldrb	w0, [x24, #88]
   1d0e4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d0e8:	mov	x2, x23
   1d0ec:	mov	x1, x24
   1d0f0:	mov	x0, x28
   1d0f4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d0f8:	and	w0, w0, #0xff
   1d0fc:	cbz	w0, 1d090 <Perl_re_exec_indentf@@Base+0x10ec0>
   1d100:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d104:	ldr	x3, [sp, #176]
   1d108:	ldrb	w0, [x3, #88]
   1d10c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d110:	ldr	x2, [x3, #16]
   1d114:	mov	x0, #0x0                   	// #0
   1d118:	ldr	x1, [sp, #264]
   1d11c:	cmp	x2, x1
   1d120:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1d124:	add	x2, sp, #0x108
   1d128:	mov	x1, x3
   1d12c:	mov	x0, x28
   1d130:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d134:	and	w0, w0, #0xff
   1d138:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d13c:	mov	x0, #0x0                   	// #0
   1d140:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d144:	ldr	x0, [sp, #176]
   1d148:	ldr	x1, [x0, #8]
   1d14c:	ldr	x0, [sp, #264]
   1d150:	cmp	x1, x0
   1d154:	b.eq	1d23c <Perl_re_exec_indentf@@Base+0x1106c>  // b.none
   1d158:	ldr	w0, [sp, #160]
   1d15c:	cbz	w0, 20544 <Perl_re_exec_indentf@@Base+0x14374>
   1d160:	ldr	x21, [sp, #176]
   1d164:	ldr	x2, [x21, #8]
   1d168:	mov	x1, #0xffffffffffffffff    	// #-1
   1d16c:	ldr	x0, [sp, #264]
   1d170:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   1d174:	mov	x20, x0
   1d178:	ldr	x22, [x21, #16]
   1d17c:	cmp	x0, x22
   1d180:	b.cs	1d2d8 <Perl_re_exec_indentf@@Base+0x11108>  // b.hs, b.nlast
   1d184:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1d188:	ldr	x0, [x0, #3792]
   1d18c:	ldr	x21, [x0]
   1d190:	mov	w1, #0x2c                  	// #44
   1d194:	mov	x0, x28
   1d198:	bl	52a0 <Perl_ckwarn_d@plt>
   1d19c:	ands	w0, w0, #0xff
   1d1a0:	mov	w3, #0x9e                  	// #158
   1d1a4:	csel	w3, w3, wzr, eq  // eq = none
   1d1a8:	cbz	x20, 1d2fc <Perl_re_exec_indentf@@Base+0x1112c>
   1d1ac:	mov	x7, x20
   1d1b0:	mov	x1, #0x0                   	// #0
   1d1b4:	mov	x2, #0x0                   	// #0
   1d1b8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1d1bc:	ldr	x9, [x0, #3824]
   1d1c0:	mov	w8, #0xff                  	// #255
   1d1c4:	mov	x6, x9
   1d1c8:	ldrb	w5, [x7]
   1d1cc:	ldrb	w0, [x9, w5, sxtw]
   1d1d0:	and	x4, x0, #0xff
   1d1d4:	asr	w0, w8, w0
   1d1d8:	and	w0, w0, w5
   1d1dc:	sxtw	x0, w0
   1d1e0:	bfi	x5, x1, #6, #58
   1d1e4:	cmp	x2, #0x0
   1d1e8:	csel	x1, x5, x0, ne  // ne = any
   1d1ec:	add	x0, x6, x4
   1d1f0:	add	x0, x0, x2
   1d1f4:	ldrb	w2, [x0, #256]
   1d1f8:	cbnz	x2, 1d320 <Perl_re_exec_indentf@@Base+0x11150>
   1d1fc:	mov	x0, x21
   1d200:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d204:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
   1d208:	add	x1, x1, #0xde0
   1d20c:	ldr	w24, [x1, x0, lsl #2]
   1d210:	ldr	x20, [sp, #264]
   1d214:	ldr	x0, [sp, #128]
   1d218:	cmp	x0, x20
   1d21c:	b.ls	1d588 <Perl_re_exec_indentf@@Base+0x113b8>  // b.plast
   1d220:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1d224:	ldr	x21, [x21, #3792]
   1d228:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1d22c:	ldr	x26, [x23, #3824]
   1d230:	add	x25, sp, #0x108
   1d234:	ldr	x27, [sp, #176]
   1d238:	b	1d404 <Perl_re_exec_indentf@@Base+0x11234>
   1d23c:	ldr	x20, [sp, #176]
   1d240:	ldrb	w0, [x20, #88]
   1d244:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d248:	add	x2, sp, #0x108
   1d24c:	mov	x1, x20
   1d250:	mov	x0, x28
   1d254:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d258:	and	w0, w0, #0xff
   1d25c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d260:	ldr	w0, [sp, #160]
   1d264:	cbz	w0, 20528 <Perl_re_exec_indentf@@Base+0x14358>
   1d268:	ldr	x2, [x20, #16]
   1d26c:	ldr	x0, [sp, #264]
   1d270:	cmp	x2, x0
   1d274:	b.cc	1d2b4 <Perl_re_exec_indentf@@Base+0x110e4>  // b.lo, b.ul, b.last
   1d278:	sub	x3, x2, x0
   1d27c:	cmp	x3, #0x0
   1d280:	b.le	20520 <Perl_re_exec_indentf@@Base+0x14350>
   1d284:	ldrb	w4, [x0]
   1d288:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1d28c:	ldr	x1, [x1, #4064]
   1d290:	ldrb	w1, [x1, x4]
   1d294:	cmp	x1, x3
   1d298:	csel	x1, x1, x3, le
   1d29c:	add	x0, x0, x1
   1d2a0:	str	x0, [sp, #264]
   1d2a4:	cmp	x0, x2
   1d2a8:	b.cc	1d160 <Perl_re_exec_indentf@@Base+0x10f90>  // b.lo, b.ul, b.last
   1d2ac:	mov	x0, #0x0                   	// #0
   1d2b0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d2b4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d2b8:	add	x3, x3, #0x330
   1d2bc:	add	x3, x3, #0xcf0
   1d2c0:	mov	w2, #0xa29                 	// #2601
   1d2c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d2c8:	add	x1, x1, #0xcb0
   1d2cc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d2d0:	add	x0, x0, #0xa80
   1d2d4:	bl	58e0 <__assert_fail@plt>
   1d2d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d2dc:	add	x3, x3, #0x330
   1d2e0:	add	x3, x3, #0xcf0
   1d2e4:	mov	w2, #0xa30                 	// #2608
   1d2e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d2ec:	add	x1, x1, #0xcb0
   1d2f0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d2f4:	add	x0, x0, #0xae8
   1d2f8:	bl	58e0 <__assert_fail@plt>
   1d2fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d300:	add	x3, x3, #0x330
   1d304:	add	x3, x3, #0xc48
   1d308:	mov	w2, #0x710                 	// #1808
   1d30c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d310:	add	x1, x1, #0xc80
   1d314:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1d318:	add	x0, x0, #0xce8
   1d31c:	bl	58e0 <__assert_fail@plt>
   1d320:	add	x7, x7, #0x1
   1d324:	cmp	x2, #0x1
   1d328:	ccmp	x22, x7, #0x0, ne  // ne = any
   1d32c:	b.hi	1d1c8 <Perl_re_exec_indentf@@Base+0x10ff8>  // b.pmore
   1d330:	mov	x5, #0x0                   	// #0
   1d334:	mov	x4, #0x0                   	// #0
   1d338:	mov	x2, #0x0                   	// #0
   1d33c:	sub	x1, x22, x20
   1d340:	mov	x0, x20
   1d344:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1d348:	mov	x1, x0
   1d34c:	b	1d1fc <Perl_re_exec_indentf@@Base+0x1102c>
   1d350:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d354:	add	x3, x3, #0x330
   1d358:	add	x3, x3, #0xcf0
   1d35c:	mov	w2, #0xa35                 	// #2613
   1d360:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d364:	add	x1, x1, #0xcb0
   1d368:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d36c:	add	x0, x0, #0xb30
   1d370:	bl	58e0 <__assert_fail@plt>
   1d374:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d378:	add	x3, x3, #0x330
   1d37c:	add	x3, x3, #0xc48
   1d380:	mov	w2, #0x710                 	// #1808
   1d384:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d388:	add	x1, x1, #0xc80
   1d38c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1d390:	add	x0, x0, #0xce8
   1d394:	bl	58e0 <__assert_fail@plt>
   1d398:	add	x6, x6, #0x1
   1d39c:	cmp	x22, x6
   1d3a0:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
   1d3a4:	b.ne	1d448 <Perl_re_exec_indentf@@Base+0x11278>  // b.any
   1d3a8:	mov	x5, #0x0                   	// #0
   1d3ac:	mov	x4, #0x0                   	// #0
   1d3b0:	mov	x2, #0x0                   	// #0
   1d3b4:	sub	x1, x22, x20
   1d3b8:	mov	x0, x20
   1d3bc:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1d3c0:	mov	x1, x0
   1d3c4:	b	1d47c <Perl_re_exec_indentf@@Base+0x112ac>
   1d3c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d3cc:	add	x3, x3, #0x330
   1d3d0:	add	x3, x3, #0xcf0
   1d3d4:	mov	w2, #0xa42                 	// #2626
   1d3d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d3dc:	add	x1, x1, #0xcb0
   1d3e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d3e4:	add	x0, x0, #0xa80
   1d3e8:	bl	58e0 <__assert_fail@plt>
   1d3ec:	add	x20, x20, x1
   1d3f0:	str	x20, [sp, #264]
   1d3f4:	ldr	x0, [sp, #128]
   1d3f8:	cmp	x20, x0
   1d3fc:	b.cs	1d588 <Perl_re_exec_indentf@@Base+0x113b8>  // b.hs, b.nlast
   1d400:	mov	w24, w22
   1d404:	ldr	x22, [x27, #16]
   1d408:	cmp	x22, x20
   1d40c:	b.ls	1d350 <Perl_re_exec_indentf@@Base+0x11180>  // b.plast
   1d410:	ldr	x0, [x21]
   1d414:	str	x0, [sp, #120]
   1d418:	mov	w1, #0x2c                  	// #44
   1d41c:	mov	x0, x28
   1d420:	bl	52a0 <Perl_ckwarn_d@plt>
   1d424:	ands	w0, w0, #0xff
   1d428:	mov	w3, #0x9e                  	// #158
   1d42c:	csel	w3, w3, wzr, eq  // eq = none
   1d430:	cbz	x20, 1d374 <Perl_re_exec_indentf@@Base+0x111a4>
   1d434:	mov	x6, x20
   1d438:	mov	x1, #0x0                   	// #0
   1d43c:	mov	x2, #0x0                   	// #0
   1d440:	mov	w8, #0xff                  	// #255
   1d444:	ldr	x7, [x23, #3824]
   1d448:	ldrb	w5, [x6]
   1d44c:	ldrb	w0, [x26, w5, sxtw]
   1d450:	and	x4, x0, #0xff
   1d454:	asr	w0, w8, w0
   1d458:	and	w0, w0, w5
   1d45c:	sxtw	x0, w0
   1d460:	bfi	x5, x1, #6, #58
   1d464:	cmp	x2, #0x0
   1d468:	csel	x1, x5, x0, ne  // ne = any
   1d46c:	add	x0, x7, x4
   1d470:	add	x2, x0, x2
   1d474:	ldrb	w2, [x2, #256]
   1d478:	cbnz	x2, 1d398 <Perl_re_exec_indentf@@Base+0x111c8>
   1d47c:	ldr	x0, [sp, #120]
   1d480:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d484:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
   1d488:	add	x1, x1, #0xde0
   1d48c:	ldr	w22, [x1, x0, lsl #2]
   1d490:	mov	w6, #0x1                   	// #1
   1d494:	ldr	x5, [x27, #16]
   1d498:	ldr	x4, [sp, #264]
   1d49c:	ldr	x3, [x27, #8]
   1d4a0:	mov	w2, w22
   1d4a4:	mov	w1, w24
   1d4a8:	mov	x0, x28
   1d4ac:	bl	7e38 <Perl__inverse_folds@plt+0x2438>
   1d4b0:	cmp	w19, w0, uxtb
   1d4b4:	b.eq	1d4d8 <Perl_re_exec_indentf@@Base+0x11308>  // b.none
   1d4b8:	ldrb	w0, [x27, #88]
   1d4bc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d4c0:	mov	x2, x25
   1d4c4:	mov	x1, x27
   1d4c8:	mov	x0, x28
   1d4cc:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d4d0:	and	w0, w0, #0xff
   1d4d4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d4d8:	ldr	x0, [x27, #16]
   1d4dc:	ldr	x20, [sp, #264]
   1d4e0:	cmp	x0, x20
   1d4e4:	b.cc	1d3c8 <Perl_re_exec_indentf@@Base+0x111f8>  // b.lo, b.ul, b.last
   1d4e8:	sub	x0, x0, x20
   1d4ec:	mov	x1, #0x0                   	// #0
   1d4f0:	cmp	x0, #0x0
   1d4f4:	b.le	1d3ec <Perl_re_exec_indentf@@Base+0x1121c>
   1d4f8:	ldrb	w2, [x20]
   1d4fc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1d500:	ldr	x1, [x1, #4064]
   1d504:	ldrb	w1, [x1, w2, sxtw]
   1d508:	cmp	x1, x0
   1d50c:	csel	x1, x1, x0, le
   1d510:	b	1d3ec <Perl_re_exec_indentf@@Base+0x1121c>
   1d514:	ldr	x0, [sp, #264]
   1d518:	add	x0, x0, #0x1
   1d51c:	str	x0, [sp, #264]
   1d520:	ldr	x1, [sp, #128]
   1d524:	cmp	x0, x1
   1d528:	b.cs	1d588 <Perl_re_exec_indentf@@Base+0x113b8>  // b.hs, b.nlast
   1d52c:	ldrb	w1, [x0]
   1d530:	ldr	x0, [x21]
   1d534:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d538:	mov	w1, w22
   1d53c:	ldr	w22, [x20, x0, lsl #2]
   1d540:	mov	w6, #0x0                   	// #0
   1d544:	ldr	x5, [x24, #16]
   1d548:	ldr	x4, [sp, #264]
   1d54c:	ldr	x3, [x24, #8]
   1d550:	mov	w2, w22
   1d554:	mov	x0, x28
   1d558:	bl	7e38 <Perl__inverse_folds@plt+0x2438>
   1d55c:	cmp	w19, w0, uxtb
   1d560:	b.eq	1d514 <Perl_re_exec_indentf@@Base+0x11344>  // b.none
   1d564:	ldrb	w0, [x24, #88]
   1d568:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d56c:	mov	x2, x23
   1d570:	mov	x1, x24
   1d574:	mov	x0, x28
   1d578:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d57c:	and	w0, w0, #0xff
   1d580:	cbz	w0, 1d514 <Perl_re_exec_indentf@@Base+0x11344>
   1d584:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d588:	ldr	x3, [sp, #176]
   1d58c:	ldrb	w0, [x3, #88]
   1d590:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d594:	ldr	x2, [x3, #16]
   1d598:	mov	x0, #0x0                   	// #0
   1d59c:	ldr	x1, [sp, #264]
   1d5a0:	cmp	x2, x1
   1d5a4:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1d5a8:	add	x2, sp, #0x108
   1d5ac:	mov	x1, x3
   1d5b0:	mov	x0, x28
   1d5b4:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d5b8:	and	w0, w0, #0xff
   1d5bc:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d5c0:	mov	x0, #0x0                   	// #0
   1d5c4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d5c8:	ldr	x20, [sp, #176]
   1d5cc:	ldrb	w0, [x20, #88]
   1d5d0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d5d4:	add	x2, sp, #0x108
   1d5d8:	mov	x1, x20
   1d5dc:	mov	x0, x28
   1d5e0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d5e4:	and	w0, w0, #0xff
   1d5e8:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d5ec:	ldr	w0, [sp, #160]
   1d5f0:	cbz	w0, 2059c <Perl_re_exec_indentf@@Base+0x143cc>
   1d5f4:	ldr	x2, [x20, #16]
   1d5f8:	ldr	x0, [sp, #264]
   1d5fc:	cmp	x2, x0
   1d600:	b.cc	1d640 <Perl_re_exec_indentf@@Base+0x11470>  // b.lo, b.ul, b.last
   1d604:	sub	x3, x2, x0
   1d608:	cmp	x3, #0x0
   1d60c:	b.le	20594 <Perl_re_exec_indentf@@Base+0x143c4>
   1d610:	ldrb	w4, [x0]
   1d614:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1d618:	ldr	x1, [x1, #4064]
   1d61c:	ldrb	w1, [x1, x4]
   1d620:	cmp	x1, x3
   1d624:	csel	x1, x1, x3, le
   1d628:	add	x0, x0, x1
   1d62c:	str	x0, [sp, #264]
   1d630:	cmp	x2, x0
   1d634:	b.hi	1c370 <Perl_re_exec_indentf@@Base+0x101a0>  // b.pmore
   1d638:	mov	x0, #0x0                   	// #0
   1d63c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d640:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d644:	add	x3, x3, #0x330
   1d648:	add	x3, x3, #0xcf0
   1d64c:	mov	w2, #0xa68                 	// #2664
   1d650:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d654:	add	x1, x1, #0xcb0
   1d658:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d65c:	add	x0, x0, #0xa80
   1d660:	bl	58e0 <__assert_fail@plt>
   1d664:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d668:	add	x3, x3, #0x330
   1d66c:	add	x3, x3, #0xcf0
   1d670:	mov	w2, #0xa75                 	// #2677
   1d674:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d678:	add	x1, x1, #0xcb0
   1d67c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d680:	add	x0, x0, #0xae8
   1d684:	bl	58e0 <__assert_fail@plt>
   1d688:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d68c:	add	x3, x3, #0x330
   1d690:	add	x3, x3, #0xc48
   1d694:	mov	w2, #0x710                 	// #1808
   1d698:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d69c:	add	x1, x1, #0xc80
   1d6a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1d6a4:	add	x0, x0, #0xce8
   1d6a8:	bl	58e0 <__assert_fail@plt>
   1d6ac:	add	x7, x7, #0x1
   1d6b0:	cmp	x2, #0x1
   1d6b4:	ccmp	x22, x7, #0x0, ne  // ne = any
   1d6b8:	b.hi	1c3d8 <Perl_re_exec_indentf@@Base+0x10208>  // b.pmore
   1d6bc:	mov	x5, #0x0                   	// #0
   1d6c0:	mov	x4, #0x0                   	// #0
   1d6c4:	mov	x2, #0x0                   	// #0
   1d6c8:	sub	x1, x22, x20
   1d6cc:	mov	x0, x20
   1d6d0:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1d6d4:	mov	x1, x0
   1d6d8:	b	1c40c <Perl_re_exec_indentf@@Base+0x1023c>
   1d6dc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d6e0:	add	x3, x3, #0x330
   1d6e4:	add	x3, x3, #0xcf0
   1d6e8:	mov	w2, #0xa7b                 	// #2683
   1d6ec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d6f0:	add	x1, x1, #0xcb0
   1d6f4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d6f8:	add	x0, x0, #0xb30
   1d6fc:	bl	58e0 <__assert_fail@plt>
   1d700:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d704:	add	x3, x3, #0x330
   1d708:	add	x3, x3, #0xc48
   1d70c:	mov	w2, #0x710                 	// #1808
   1d710:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d714:	add	x1, x1, #0xc80
   1d718:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1d71c:	add	x0, x0, #0xce8
   1d720:	bl	58e0 <__assert_fail@plt>
   1d724:	add	x6, x6, #0x1
   1d728:	cmp	x2, #0x1
   1d72c:	ccmp	x23, x6, #0x0, ne  // ne = any
   1d730:	b.hi	1d7d8 <Perl_re_exec_indentf@@Base+0x11608>  // b.pmore
   1d734:	mov	x5, #0x0                   	// #0
   1d738:	mov	x4, #0x0                   	// #0
   1d73c:	mov	x2, #0x0                   	// #0
   1d740:	sub	x1, x23, x20
   1d744:	mov	x0, x20
   1d748:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1d74c:	mov	x1, x0
   1d750:	b	1d80c <Perl_re_exec_indentf@@Base+0x1163c>
   1d754:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1d758:	add	x3, x3, #0x330
   1d75c:	add	x3, x3, #0xcf0
   1d760:	mov	w2, #0xa8a                 	// #2698
   1d764:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1d768:	add	x1, x1, #0xcb0
   1d76c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1d770:	add	x0, x0, #0xa80
   1d774:	bl	58e0 <__assert_fail@plt>
   1d778:	add	x20, x20, x1
   1d77c:	str	x20, [sp, #264]
   1d780:	mov	w25, w22
   1d784:	ldr	x0, [sp, #128]
   1d788:	cmp	x20, x0
   1d78c:	b.cs	1d928 <Perl_re_exec_indentf@@Base+0x11758>  // b.hs, b.nlast
   1d790:	mov	w22, w23
   1d794:	ldr	x23, [x26, #16]
   1d798:	cmp	x23, x20
   1d79c:	b.ls	1d6dc <Perl_re_exec_indentf@@Base+0x1150c>  // b.plast
   1d7a0:	ldr	x0, [x21]
   1d7a4:	str	x0, [sp, #120]
   1d7a8:	mov	w1, #0x2c                  	// #44
   1d7ac:	mov	x0, x28
   1d7b0:	bl	52a0 <Perl_ckwarn_d@plt>
   1d7b4:	ands	w0, w0, #0xff
   1d7b8:	mov	w3, #0x9e                  	// #158
   1d7bc:	csel	w3, w3, wzr, eq  // eq = none
   1d7c0:	cbz	x20, 1d700 <Perl_re_exec_indentf@@Base+0x11530>
   1d7c4:	mov	x6, x20
   1d7c8:	mov	x1, #0x0                   	// #0
   1d7cc:	mov	x2, #0x0                   	// #0
   1d7d0:	mov	w8, #0xff                  	// #255
   1d7d4:	ldr	x7, [x24, #3824]
   1d7d8:	ldrb	w5, [x6]
   1d7dc:	ldrb	w0, [x27, w5, sxtw]
   1d7e0:	and	x4, x0, #0xff
   1d7e4:	asr	w0, w8, w0
   1d7e8:	and	w0, w0, w5
   1d7ec:	sxtw	x0, w0
   1d7f0:	bfi	x5, x1, #6, #58
   1d7f4:	cmp	x2, #0x0
   1d7f8:	csel	x1, x5, x0, ne  // ne = any
   1d7fc:	add	x0, x7, x4
   1d800:	add	x2, x0, x2
   1d804:	ldrb	w2, [x2, #256]
   1d808:	cbnz	x2, 1d724 <Perl_re_exec_indentf@@Base+0x11554>
   1d80c:	ldr	x0, [sp, #120]
   1d810:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d814:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
   1d818:	add	x1, x1, #0x100
   1d81c:	ldr	w23, [x1, x0, lsl #2]
   1d820:	mov	w7, #0x1                   	// #1
   1d824:	ldr	x6, [x26, #16]
   1d828:	ldr	x5, [sp, #264]
   1d82c:	ldr	x4, [x26, #8]
   1d830:	mov	w3, w23
   1d834:	mov	w2, w22
   1d838:	mov	w1, w25
   1d83c:	mov	x0, x28
   1d840:	bl	862c <Perl__inverse_folds@plt+0x2c2c>
   1d844:	cmp	w19, w0, uxtb
   1d848:	b.eq	1d86c <Perl_re_exec_indentf@@Base+0x1169c>  // b.none
   1d84c:	ldrb	w0, [x26, #88]
   1d850:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d854:	ldr	x2, [sp, #136]
   1d858:	mov	x1, x26
   1d85c:	mov	x0, x28
   1d860:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d864:	and	w0, w0, #0xff
   1d868:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d86c:	ldr	x0, [x26, #16]
   1d870:	ldr	x20, [sp, #264]
   1d874:	cmp	x0, x20
   1d878:	b.cc	1d754 <Perl_re_exec_indentf@@Base+0x11584>  // b.lo, b.ul, b.last
   1d87c:	sub	x0, x0, x20
   1d880:	mov	x1, #0x0                   	// #0
   1d884:	cmp	x0, #0x0
   1d888:	b.le	1d778 <Perl_re_exec_indentf@@Base+0x115a8>
   1d88c:	ldrb	w2, [x20]
   1d890:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1d894:	ldr	x1, [x1, #4064]
   1d898:	ldrb	w1, [x1, w2, sxtw]
   1d89c:	cmp	x1, x0
   1d8a0:	csel	x1, x1, x0, le
   1d8a4:	b	1d778 <Perl_re_exec_indentf@@Base+0x115a8>
   1d8a8:	ldr	x0, [sp, #264]
   1d8ac:	add	x0, x0, #0x1
   1d8b0:	str	x0, [sp, #264]
   1d8b4:	mov	w23, w26
   1d8b8:	ldr	x1, [sp, #128]
   1d8bc:	cmp	x0, x1
   1d8c0:	b.cs	1d928 <Perl_re_exec_indentf@@Base+0x11758>  // b.hs, b.nlast
   1d8c4:	ldrb	w1, [x0]
   1d8c8:	ldr	x0, [x21]
   1d8cc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   1d8d0:	mov	w26, w22
   1d8d4:	ldr	w22, [x20, x0, lsl #2]
   1d8d8:	mov	w7, #0x0                   	// #0
   1d8dc:	ldr	x6, [x24, #16]
   1d8e0:	ldr	x5, [sp, #264]
   1d8e4:	ldr	x4, [x24, #8]
   1d8e8:	mov	w3, w22
   1d8ec:	mov	w2, w26
   1d8f0:	mov	w1, w23
   1d8f4:	mov	x0, x28
   1d8f8:	bl	862c <Perl__inverse_folds@plt+0x2c2c>
   1d8fc:	cmp	w19, w0, uxtb
   1d900:	b.eq	1d8a8 <Perl_re_exec_indentf@@Base+0x116d8>  // b.none
   1d904:	ldrb	w0, [x24, #88]
   1d908:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d90c:	mov	x2, x25
   1d910:	mov	x1, x24
   1d914:	mov	x0, x28
   1d918:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d91c:	and	w0, w0, #0xff
   1d920:	cbz	w0, 1d8a8 <Perl_re_exec_indentf@@Base+0x116d8>
   1d924:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d928:	ldr	x3, [sp, #176]
   1d92c:	ldrb	w0, [x3, #88]
   1d930:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d934:	ldr	x2, [x3, #16]
   1d938:	mov	x0, #0x0                   	// #0
   1d93c:	ldr	x1, [sp, #264]
   1d940:	cmp	x2, x1
   1d944:	b.cc	202b0 <Perl_re_exec_indentf@@Base+0x140e0>  // b.lo, b.ul, b.last
   1d948:	add	x2, sp, #0x108
   1d94c:	mov	x1, x3
   1d950:	mov	x0, x28
   1d954:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1d958:	and	w0, w0, #0xff
   1d95c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1d960:	mov	x0, #0x0                   	// #0
   1d964:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d968:	ldr	w0, [sp, #160]
   1d96c:	cbnz	w0, 1d9a4 <Perl_re_exec_indentf@@Base+0x117d4>
   1d970:	mov	x1, #0x0                   	// #0
   1d974:	mov	w21, #0x0                   	// #0
   1d978:	add	x20, sp, #0x108
   1d97c:	ldr	x0, [sp, #152]
   1d980:	ldr	x2, [sp, #128]
   1d984:	cmp	x0, x2
   1d988:	b.cs	1d99c <Perl_re_exec_indentf@@Base+0x117cc>  // b.hs, b.nlast
   1d98c:	ldr	x0, [sp, #152]
   1d990:	ldr	x22, [sp, #128]
   1d994:	ldr	x23, [sp, #176]
   1d998:	b	1dba0 <Perl_re_exec_indentf@@Base+0x119d0>
   1d99c:	mov	x0, #0x0                   	// #0
   1d9a0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1d9a4:	ldr	x0, [sp, #152]
   1d9a8:	ldr	x24, [sp, #128]
   1d9ac:	cmp	x0, x24
   1d9b0:	b.cs	20430 <Perl_re_exec_indentf@@Base+0x14260>  // b.hs, b.nlast
   1d9b4:	mov	x1, #0x0                   	// #0
   1d9b8:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1d9bc:	ldr	x23, [x20, #4064]
   1d9c0:	mov	x22, #0x0                   	// #0
   1d9c4:	mov	x20, x23
   1d9c8:	add	x21, sp, #0x108
   1d9cc:	ldr	x25, [sp, #176]
   1d9d0:	b	1daa0 <Perl_re_exec_indentf@@Base+0x118d0>
   1d9d4:	ldrb	w2, [x0, #1]
   1d9d8:	cmp	w2, #0x85
   1d9dc:	cset	w2, eq  // eq = none
   1d9e0:	b	1da38 <Perl_re_exec_indentf@@Base+0x11868>
   1d9e4:	b.ne	1da20 <Perl_re_exec_indentf@@Base+0x11850>  // b.any
   1d9e8:	ldrb	w3, [x0]
   1d9ec:	sub	w2, w3, #0xa
   1d9f0:	cmp	w2, #0x2
   1d9f4:	b.ls	1da3c <Perl_re_exec_indentf@@Base+0x1186c>  // b.plast
   1d9f8:	mov	w2, #0x1                   	// #1
   1d9fc:	cmp	w3, #0xd
   1da00:	b.eq	1da38 <Perl_re_exec_indentf@@Base+0x11868>  // b.none
   1da04:	mov	w2, #0x0                   	// #0
   1da08:	cmp	w3, #0xc2
   1da0c:	b.ne	1da38 <Perl_re_exec_indentf@@Base+0x11868>  // b.any
   1da10:	ldrb	w2, [x0, #1]
   1da14:	cmp	w2, #0x85
   1da18:	cset	w2, eq  // eq = none
   1da1c:	b	1da38 <Perl_re_exec_indentf@@Base+0x11868>
   1da20:	cmp	x2, #0x0
   1da24:	b.le	1db34 <Perl_re_exec_indentf@@Base+0x11964>
   1da28:	ldrb	w2, [x0]
   1da2c:	sub	w2, w2, #0xa
   1da30:	cmp	w2, #0x3
   1da34:	cset	w2, ls  // ls = plast
   1da38:	cbz	w2, 1db34 <Perl_re_exec_indentf@@Base+0x11964>
   1da3c:	cmp	w19, #0x0
   1da40:	ccmp	x0, x1, #0x0, ne  // ne = any
   1da44:	b.eq	1da5c <Perl_re_exec_indentf@@Base+0x1188c>  // b.none
   1da48:	ldrb	w1, [x25, #88]
   1da4c:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1da50:	ldr	x1, [x25, #16]
   1da54:	cmp	x1, x0
   1da58:	b.cs	1daf4 <Perl_re_exec_indentf@@Base+0x11924>  // b.hs, b.nlast
   1da5c:	ldr	x1, [x25, #16]
   1da60:	ldr	x0, [sp, #264]
   1da64:	cmp	x1, x0
   1da68:	b.cc	1db10 <Perl_re_exec_indentf@@Base+0x11940>  // b.lo, b.ul, b.last
   1da6c:	sub	x1, x1, x0
   1da70:	mov	x2, x22
   1da74:	cmp	x1, #0x0
   1da78:	b.le	1da8c <Perl_re_exec_indentf@@Base+0x118bc>
   1da7c:	ldrb	w2, [x0]
   1da80:	ldrb	w2, [x20, w2, sxtw]
   1da84:	cmp	x2, x1
   1da88:	csel	x2, x2, x1, le
   1da8c:	add	x1, x0, x2
   1da90:	str	x1, [sp, #264]
   1da94:	ldr	x0, [sp, #264]
   1da98:	cmp	x0, x24
   1da9c:	b.cs	1db48 <Perl_re_exec_indentf@@Base+0x11978>  // b.hs, b.nlast
   1daa0:	sub	x2, x24, x0
   1daa4:	cmp	x2, #0x2
   1daa8:	b.le	1d9e4 <Perl_re_exec_indentf@@Base+0x11814>
   1daac:	ldrb	w3, [x0]
   1dab0:	sub	w2, w3, #0xa
   1dab4:	cmp	w2, #0x2
   1dab8:	ccmp	w3, #0xd, #0x4, hi  // hi = pmore
   1dabc:	b.eq	1da3c <Perl_re_exec_indentf@@Base+0x1186c>  // b.none
   1dac0:	cmp	w3, #0xc2
   1dac4:	b.eq	1d9d4 <Perl_re_exec_indentf@@Base+0x11804>  // b.none
   1dac8:	mov	w2, #0x0                   	// #0
   1dacc:	cmp	w3, #0xe2
   1dad0:	b.ne	1da38 <Perl_re_exec_indentf@@Base+0x11868>  // b.any
   1dad4:	ldrb	w3, [x0, #1]
   1dad8:	cmp	w3, #0x80
   1dadc:	b.ne	1da38 <Perl_re_exec_indentf@@Base+0x11868>  // b.any
   1dae0:	ldrb	w2, [x0, #2]
   1dae4:	sub	w2, w2, #0xa8
   1dae8:	cmp	w2, #0x1
   1daec:	cset	w2, ls  // ls = plast
   1daf0:	b	1da38 <Perl_re_exec_indentf@@Base+0x11868>
   1daf4:	mov	x2, x21
   1daf8:	mov	x1, x25
   1dafc:	mov	x0, x28
   1db00:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1db04:	and	w0, w0, #0xff
   1db08:	cbz	w0, 1da5c <Perl_re_exec_indentf@@Base+0x1188c>
   1db0c:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1db10:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1db14:	add	x3, x3, #0x330
   1db18:	add	x3, x3, #0xcf0
   1db1c:	mov	w2, #0xaac                 	// #2732
   1db20:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1db24:	add	x1, x1, #0xcb0
   1db28:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1db2c:	add	x0, x0, #0xa80
   1db30:	bl	58e0 <__assert_fail@plt>
   1db34:	ldrb	w2, [x0]
   1db38:	ldrb	w2, [x23, w2, sxtw]
   1db3c:	add	x0, x0, x2
   1db40:	str	x0, [sp, #264]
   1db44:	b	1da94 <Perl_re_exec_indentf@@Base+0x118c4>
   1db48:	mov	x0, #0x0                   	// #0
   1db4c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1db50:	mov	w2, w21
   1db54:	b.ne	1dbcc <Perl_re_exec_indentf@@Base+0x119fc>  // b.any
   1db58:	ldrb	w2, [x0]
   1db5c:	sub	w3, w2, #0xa
   1db60:	cmp	w2, #0x85
   1db64:	ccmp	w3, #0x3, #0x0, ne  // ne = any
   1db68:	cset	w2, ls  // ls = plast
   1db6c:	b	1dbcc <Perl_re_exec_indentf@@Base+0x119fc>
   1db70:	mov	x2, x20
   1db74:	mov	x1, x23
   1db78:	mov	x0, x28
   1db7c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1db80:	and	w0, w0, #0xff
   1db84:	cbz	w0, 1dbf0 <Perl_re_exec_indentf@@Base+0x11a20>
   1db88:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1db8c:	add	x0, x0, #0x1
   1db90:	str	x0, [sp, #264]
   1db94:	ldr	x0, [sp, #264]
   1db98:	cmp	x0, x22
   1db9c:	b.cs	1dc00 <Perl_re_exec_indentf@@Base+0x11a30>  // b.hs, b.nlast
   1dba0:	sub	x3, x22, x0
   1dba4:	cmp	x3, #0x1
   1dba8:	b.le	1db50 <Perl_re_exec_indentf@@Base+0x11980>
   1dbac:	ldrb	w3, [x0]
   1dbb0:	cmp	w3, #0x85
   1dbb4:	ccmp	w3, #0xd, #0x4, ne  // ne = any
   1dbb8:	cset	w2, eq  // eq = none
   1dbbc:	sub	w3, w3, #0xa
   1dbc0:	cmp	w3, #0x2
   1dbc4:	cset	w3, ls  // ls = plast
   1dbc8:	orr	w2, w2, w3
   1dbcc:	cbz	w2, 1db8c <Perl_re_exec_indentf@@Base+0x119bc>
   1dbd0:	cmp	w19, #0x0
   1dbd4:	ccmp	x0, x1, #0x0, ne  // ne = any
   1dbd8:	b.eq	1dbf0 <Perl_re_exec_indentf@@Base+0x11a20>  // b.none
   1dbdc:	ldrb	w1, [x23, #88]
   1dbe0:	cbnz	w1, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1dbe4:	ldr	x1, [x23, #16]
   1dbe8:	cmp	x1, x0
   1dbec:	b.cs	1db70 <Perl_re_exec_indentf@@Base+0x119a0>  // b.hs, b.nlast
   1dbf0:	ldr	x1, [sp, #264]
   1dbf4:	add	x1, x1, #0x1
   1dbf8:	str	x1, [sp, #264]
   1dbfc:	b	1db94 <Perl_re_exec_indentf@@Base+0x119c4>
   1dc00:	mov	x0, #0x0                   	// #0
   1dc04:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1dc08:	mov	w21, #0x1                   	// #1
   1dc0c:	b	1dc14 <Perl_re_exec_indentf@@Base+0x11a44>
   1dc10:	mov	w21, #0x0                   	// #0
   1dc14:	ldr	x0, [x28, #1440]
   1dc18:	cbnz	x0, 1dc4c <Perl_re_exec_indentf@@Base+0x11a7c>
   1dc1c:	ldr	w0, [sp, #160]
   1dc20:	cbnz	w0, 1dc5c <Perl_re_exec_indentf@@Base+0x11a8c>
   1dc24:	ldr	x0, [sp, #264]
   1dc28:	mov	x20, #0x0                   	// #0
   1dc2c:	add	x22, sp, #0x108
   1dc30:	ldr	x1, [sp, #128]
   1dc34:	cmp	x1, x0
   1dc38:	b.ls	1dc54 <Perl_re_exec_indentf@@Base+0x11a84>  // b.plast
   1dc3c:	ldr	x24, [sp, #144]
   1dc40:	ldr	x25, [sp, #128]
   1dc44:	ldr	x23, [sp, #176]
   1dc48:	b	1dda4 <Perl_re_exec_indentf@@Base+0x11bd4>
   1dc4c:	bl	5050 <Perl__warn_problematic_locale@plt>
   1dc50:	b	1dc1c <Perl_re_exec_indentf@@Base+0x11a4c>
   1dc54:	mov	x0, #0x0                   	// #0
   1dc58:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1dc5c:	ldr	x2, [sp, #264]
   1dc60:	ldr	x26, [sp, #128]
   1dc64:	cmp	x26, x2
   1dc68:	b.ls	20438 <Perl_re_exec_indentf@@Base+0x14268>  // b.plast
   1dc6c:	mov	x20, #0x0                   	// #0
   1dc70:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1dc74:	ldr	x24, [x22, #4064]
   1dc78:	mov	x23, #0x0                   	// #0
   1dc7c:	mov	x22, x24
   1dc80:	add	x25, sp, #0x108
   1dc84:	ldr	x27, [sp, #176]
   1dc88:	str	x25, [sp, #120]
   1dc8c:	ldr	x25, [sp, #144]
   1dc90:	b	1dcf0 <Perl_re_exec_indentf@@Base+0x11b20>
   1dc94:	ldr	x2, [sp, #120]
   1dc98:	mov	x1, x27
   1dc9c:	mov	x0, x28
   1dca0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1dca4:	and	w0, w0, #0xff
   1dca8:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1dcac:	ldr	x0, [x27, #16]
   1dcb0:	ldr	x20, [sp, #264]
   1dcb4:	cmp	x0, x20
   1dcb8:	b.cc	1dd30 <Perl_re_exec_indentf@@Base+0x11b60>  // b.lo, b.ul, b.last
   1dcbc:	sub	x0, x0, x20
   1dcc0:	mov	x1, x23
   1dcc4:	cmp	x0, #0x0
   1dcc8:	b.le	1dcdc <Perl_re_exec_indentf@@Base+0x11b0c>
   1dccc:	ldrb	w1, [x20]
   1dcd0:	ldrb	w1, [x22, w1, sxtw]
   1dcd4:	cmp	x1, x0
   1dcd8:	csel	x1, x1, x0, le
   1dcdc:	add	x20, x20, x1
   1dce0:	str	x20, [sp, #264]
   1dce4:	ldr	x2, [sp, #264]
   1dce8:	cmp	x2, x26
   1dcec:	b.cs	1dd6c <Perl_re_exec_indentf@@Base+0x11b9c>  // b.hs, b.nlast
   1dcf0:	mov	x3, x26
   1dcf4:	ldrb	w1, [x25]
   1dcf8:	mov	x0, x28
   1dcfc:	bl	b6fc <Perl__inverse_folds@plt+0x5cfc>
   1dd00:	cmp	w21, w0, uxtb
   1dd04:	b.eq	1dd54 <Perl_re_exec_indentf@@Base+0x11b84>  // b.none
   1dd08:	cbz	w19, 1dd18 <Perl_re_exec_indentf@@Base+0x11b48>
   1dd0c:	ldr	x0, [sp, #264]
   1dd10:	cmp	x0, x20
   1dd14:	b.eq	1dcac <Perl_re_exec_indentf@@Base+0x11adc>  // b.none
   1dd18:	ldrb	w0, [x27, #88]
   1dd1c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1dd20:	ldr	x1, [x27, #16]
   1dd24:	ldr	x0, [sp, #264]
   1dd28:	cmp	x1, x0
   1dd2c:	b.cs	1dc94 <Perl_re_exec_indentf@@Base+0x11ac4>  // b.hs, b.nlast
   1dd30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1dd34:	add	x3, x3, #0x330
   1dd38:	add	x3, x3, #0xcf0
   1dd3c:	mov	w2, #0xaba                 	// #2746
   1dd40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1dd44:	add	x1, x1, #0xcb0
   1dd48:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1dd4c:	add	x0, x0, #0xa80
   1dd50:	bl	58e0 <__assert_fail@plt>
   1dd54:	ldr	x0, [sp, #264]
   1dd58:	ldrb	w1, [x0]
   1dd5c:	ldrb	w1, [x24, w1, sxtw]
   1dd60:	add	x0, x0, x1
   1dd64:	str	x0, [sp, #264]
   1dd68:	b	1dce4 <Perl_re_exec_indentf@@Base+0x11b14>
   1dd6c:	mov	x0, #0x0                   	// #0
   1dd70:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1dd74:	ldrb	w0, [x23, #88]
   1dd78:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1dd7c:	ldr	x1, [x23, #16]
   1dd80:	ldr	x0, [sp, #264]
   1dd84:	cmp	x1, x0
   1dd88:	b.cs	1ddd0 <Perl_re_exec_indentf@@Base+0x11c00>  // b.hs, b.nlast
   1dd8c:	ldr	x20, [sp, #264]
   1dd90:	add	x20, x20, #0x1
   1dd94:	str	x20, [sp, #264]
   1dd98:	ldr	x0, [sp, #264]
   1dd9c:	cmp	x0, x25
   1dda0:	b.cs	1ddfc <Perl_re_exec_indentf@@Base+0x11c2c>  // b.hs, b.nlast
   1dda4:	ldrb	w2, [x0]
   1dda8:	ldrb	w1, [x24]
   1ddac:	mov	x0, x28
   1ddb0:	bl	5350 <Perl_isFOO_lc@plt>
   1ddb4:	cmp	w21, w0, uxtb
   1ddb8:	b.eq	1ddec <Perl_re_exec_indentf@@Base+0x11c1c>  // b.none
   1ddbc:	cbz	w19, 1dd74 <Perl_re_exec_indentf@@Base+0x11ba4>
   1ddc0:	ldr	x0, [sp, #264]
   1ddc4:	cmp	x0, x20
   1ddc8:	b.ne	1dd74 <Perl_re_exec_indentf@@Base+0x11ba4>  // b.any
   1ddcc:	b	1dd8c <Perl_re_exec_indentf@@Base+0x11bbc>
   1ddd0:	mov	x2, x22
   1ddd4:	mov	x1, x23
   1ddd8:	mov	x0, x28
   1dddc:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1dde0:	and	w0, w0, #0xff
   1dde4:	cbz	w0, 1dd8c <Perl_re_exec_indentf@@Base+0x11bbc>
   1dde8:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ddec:	ldr	x0, [sp, #264]
   1ddf0:	add	x0, x0, #0x1
   1ddf4:	str	x0, [sp, #264]
   1ddf8:	b	1dd98 <Perl_re_exec_indentf@@Base+0x11bc8>
   1ddfc:	mov	x0, #0x0                   	// #0
   1de00:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1de04:	mov	w20, #0x1                   	// #1
   1de08:	b	1de10 <Perl_re_exec_indentf@@Base+0x11c40>
   1de0c:	mov	w20, #0x0                   	// #0
   1de10:	ldr	w0, [sp, #160]
   1de14:	cbnz	w0, 1e1ec <Perl_re_exec_indentf@@Base+0x1201c>
   1de18:	mov	x1, #0x0                   	// #0
   1de1c:	ldr	x2, [sp, #152]
   1de20:	ldr	x26, [sp, #128]
   1de24:	cmp	x2, x26
   1de28:	b.cs	1e118 <Perl_re_exec_indentf@@Base+0x11f48>  // b.hs, b.nlast
   1de2c:	mov	w22, #0x1                   	// #1
   1de30:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1de34:	ldr	x21, [x21, #3880]
   1de38:	add	x23, sp, #0x108
   1de3c:	ldr	x25, [sp, #144]
   1de40:	ldr	x24, [sp, #176]
   1de44:	b	1e09c <Perl_re_exec_indentf@@Base+0x11ecc>
   1de48:	ldr	w0, [sp, #160]
   1de4c:	cbz	w0, 1e108 <Perl_re_exec_indentf@@Base+0x11f38>
   1de50:	ldr	x1, [sp, #152]
   1de54:	ldr	x25, [sp, #128]
   1de58:	cmp	x1, x25
   1de5c:	b.cs	20440 <Perl_re_exec_indentf@@Base+0x14270>  // b.hs, b.nlast
   1de60:	mov	x0, #0x0                   	// #0
   1de64:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1de68:	ldr	x23, [x21, #4064]
   1de6c:	add	x22, sp, #0x108
   1de70:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1de74:	ldr	x20, [x20, #3880]
   1de78:	ldr	x26, [sp, #144]
   1de7c:	ldr	x24, [sp, #176]
   1de80:	b	1dee8 <Perl_re_exec_indentf@@Base+0x11d18>
   1de84:	cmp	w19, #0x0
   1de88:	ccmp	x1, x0, #0x0, ne  // ne = any
   1de8c:	b.eq	1dea4 <Perl_re_exec_indentf@@Base+0x11cd4>  // b.none
   1de90:	ldrb	w0, [x24, #88]
   1de94:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1de98:	ldr	x0, [x24, #16]
   1de9c:	cmp	x0, x1
   1dea0:	b.cs	1df20 <Perl_re_exec_indentf@@Base+0x11d50>  // b.hs, b.nlast
   1dea4:	ldr	x1, [x24, #16]
   1dea8:	ldr	x0, [sp, #264]
   1deac:	cmp	x1, x0
   1deb0:	b.cc	1df3c <Perl_re_exec_indentf@@Base+0x11d6c>  // b.lo, b.ul, b.last
   1deb4:	sub	x1, x1, x0
   1deb8:	mov	x2, #0x0                   	// #0
   1debc:	cmp	x1, #0x0
   1dec0:	b.le	1ded4 <Perl_re_exec_indentf@@Base+0x11d04>
   1dec4:	ldrb	w2, [x0]
   1dec8:	ldrb	w2, [x23, w2, sxtw]
   1decc:	cmp	x2, x1
   1ded0:	csel	x2, x2, x1, le
   1ded4:	add	x0, x0, x2
   1ded8:	str	x0, [sp, #264]
   1dedc:	ldr	x1, [sp, #264]
   1dee0:	cmp	x1, x25
   1dee4:	b.cs	1df60 <Perl_re_exec_indentf@@Base+0x11d90>  // b.hs, b.nlast
   1dee8:	ldrb	w3, [x1]
   1deec:	tbnz	w3, #7, 1de84 <Perl_re_exec_indentf@@Base+0x11cb4>
   1def0:	ldrb	w4, [x26]
   1def4:	mov	w2, #0x1                   	// #1
   1def8:	lsl	w2, w2, w4
   1defc:	orr	w2, w2, #0x4000
   1df00:	ldr	w4, [x20, w3, sxtw #2]
   1df04:	bics	wzr, w2, w4
   1df08:	b.ne	1de84 <Perl_re_exec_indentf@@Base+0x11cb4>  // b.any
   1df0c:	ldr	x2, [x21, #4064]
   1df10:	ldrb	w2, [x2, w3, sxtw]
   1df14:	add	x1, x1, x2
   1df18:	str	x1, [sp, #264]
   1df1c:	b	1dedc <Perl_re_exec_indentf@@Base+0x11d0c>
   1df20:	mov	x2, x22
   1df24:	mov	x1, x24
   1df28:	mov	x0, x28
   1df2c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1df30:	and	w0, w0, #0xff
   1df34:	cbz	w0, 1dea4 <Perl_re_exec_indentf@@Base+0x11cd4>
   1df38:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1df3c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1df40:	add	x3, x3, #0x330
   1df44:	add	x3, x3, #0xcf0
   1df48:	mov	w2, #0xacc                 	// #2764
   1df4c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1df50:	add	x1, x1, #0xcb0
   1df54:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1df58:	add	x0, x0, #0xa80
   1df5c:	bl	58e0 <__assert_fail@plt>
   1df60:	mov	x0, #0x0                   	// #0
   1df64:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1df68:	ldr	w0, [sp, #160]
   1df6c:	cbz	w0, 1e110 <Perl_re_exec_indentf@@Base+0x11f40>
   1df70:	ldr	x2, [sp, #152]
   1df74:	ldr	x27, [sp, #128]
   1df78:	cmp	x2, x27
   1df7c:	b.cs	20448 <Perl_re_exec_indentf@@Base+0x14278>  // b.hs, b.nlast
   1df80:	mov	x1, #0x0                   	// #0
   1df84:	mov	w21, #0x1                   	// #1
   1df88:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   1df8c:	ldr	x20, [x20, #3880]
   1df90:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1df94:	ldr	x22, [x23, #4064]
   1df98:	add	x24, sp, #0x108
   1df9c:	ldr	x26, [sp, #144]
   1dfa0:	ldr	x25, [sp, #176]
   1dfa4:	b	1e010 <Perl_re_exec_indentf@@Base+0x11e40>
   1dfa8:	cmp	w19, #0x0
   1dfac:	ccmp	x2, x1, #0x0, ne  // ne = any
   1dfb0:	b.eq	1dfc8 <Perl_re_exec_indentf@@Base+0x11df8>  // b.none
   1dfb4:	ldrb	w0, [x25, #88]
   1dfb8:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1dfbc:	ldr	x0, [x25, #16]
   1dfc0:	cmp	x0, x2
   1dfc4:	b.cs	1e03c <Perl_re_exec_indentf@@Base+0x11e6c>  // b.hs, b.nlast
   1dfc8:	ldr	x1, [x25, #16]
   1dfcc:	ldr	x0, [sp, #264]
   1dfd0:	cmp	x1, x0
   1dfd4:	b.cc	1e058 <Perl_re_exec_indentf@@Base+0x11e88>  // b.lo, b.ul, b.last
   1dfd8:	sub	x1, x1, x0
   1dfdc:	mov	x2, #0x0                   	// #0
   1dfe0:	cmp	x1, #0x0
   1dfe4:	b.le	1dffc <Perl_re_exec_indentf@@Base+0x11e2c>
   1dfe8:	ldr	x2, [x23, #4064]
   1dfec:	ldrb	w3, [x0]
   1dff0:	ldrb	w2, [x2, w3, sxtw]
   1dff4:	cmp	x2, x1
   1dff8:	csel	x2, x2, x1, le
   1dffc:	add	x1, x0, x2
   1e000:	str	x1, [sp, #264]
   1e004:	ldr	x2, [sp, #264]
   1e008:	cmp	x2, x27
   1e00c:	b.cs	1e07c <Perl_re_exec_indentf@@Base+0x11eac>  // b.hs, b.nlast
   1e010:	ldrb	w3, [x2]
   1e014:	ldrb	w0, [x26]
   1e018:	lsl	w0, w21, w0
   1e01c:	orr	w0, w0, #0x4000
   1e020:	ldr	w4, [x20, w3, sxtw #2]
   1e024:	bics	wzr, w0, w4
   1e028:	b.eq	1dfa8 <Perl_re_exec_indentf@@Base+0x11dd8>  // b.none
   1e02c:	ldrb	w0, [x22, w3, sxtw]
   1e030:	add	x2, x2, x0
   1e034:	str	x2, [sp, #264]
   1e038:	b	1e004 <Perl_re_exec_indentf@@Base+0x11e34>
   1e03c:	mov	x2, x24
   1e040:	mov	x1, x25
   1e044:	mov	x0, x28
   1e048:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e04c:	and	w0, w0, #0xff
   1e050:	cbz	w0, 1dfc8 <Perl_re_exec_indentf@@Base+0x11df8>
   1e054:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e058:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e05c:	add	x3, x3, #0x330
   1e060:	add	x3, x3, #0xcf0
   1e064:	mov	w2, #0xada                 	// #2778
   1e068:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e06c:	add	x1, x1, #0xcb0
   1e070:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1e074:	add	x0, x0, #0xa80
   1e078:	bl	58e0 <__assert_fail@plt>
   1e07c:	mov	x0, #0x0                   	// #0
   1e080:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e084:	ldr	x1, [sp, #264]
   1e088:	add	x1, x1, #0x1
   1e08c:	str	x1, [sp, #264]
   1e090:	ldr	x2, [sp, #264]
   1e094:	cmp	x2, x26
   1e098:	b.cs	1e120 <Perl_re_exec_indentf@@Base+0x11f50>  // b.hs, b.nlast
   1e09c:	ldrb	w0, [x25]
   1e0a0:	lsl	w0, w22, w0
   1e0a4:	orr	w0, w0, #0x4000
   1e0a8:	ldrb	w3, [x2]
   1e0ac:	ldr	w3, [x21, x3, lsl #2]
   1e0b0:	bics	wzr, w0, w3
   1e0b4:	cset	w0, eq  // eq = none
   1e0b8:	cmp	w0, w20
   1e0bc:	b.eq	1e0fc <Perl_re_exec_indentf@@Base+0x11f2c>  // b.none
   1e0c0:	cmp	w19, #0x0
   1e0c4:	ccmp	x2, x1, #0x0, ne  // ne = any
   1e0c8:	b.eq	1e084 <Perl_re_exec_indentf@@Base+0x11eb4>  // b.none
   1e0cc:	ldrb	w0, [x24, #88]
   1e0d0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e0d4:	ldr	x0, [x24, #16]
   1e0d8:	cmp	x0, x2
   1e0dc:	b.cc	1e084 <Perl_re_exec_indentf@@Base+0x11eb4>  // b.lo, b.ul, b.last
   1e0e0:	mov	x2, x23
   1e0e4:	mov	x1, x24
   1e0e8:	mov	x0, x28
   1e0ec:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e0f0:	and	w0, w0, #0xff
   1e0f4:	cbz	w0, 1e084 <Perl_re_exec_indentf@@Base+0x11eb4>
   1e0f8:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e0fc:	add	x2, x2, #0x1
   1e100:	str	x2, [sp, #264]
   1e104:	b	1e090 <Perl_re_exec_indentf@@Base+0x11ec0>
   1e108:	mov	w20, #0x1                   	// #1
   1e10c:	b	1de18 <Perl_re_exec_indentf@@Base+0x11c48>
   1e110:	ldr	w20, [sp, #160]
   1e114:	b	1de18 <Perl_re_exec_indentf@@Base+0x11c48>
   1e118:	mov	x0, #0x0                   	// #0
   1e11c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e120:	mov	x0, #0x0                   	// #0
   1e124:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e128:	mov	w20, #0x1                   	// #1
   1e12c:	b	1e134 <Perl_re_exec_indentf@@Base+0x11f64>
   1e130:	mov	w20, #0x0                   	// #0
   1e134:	ldr	w0, [sp, #160]
   1e138:	cbnz	w0, 1e1ec <Perl_re_exec_indentf@@Base+0x1201c>
   1e13c:	ldr	x2, [sp, #152]
   1e140:	ldr	x25, [sp, #128]
   1e144:	cmp	x2, x25
   1e148:	b.cs	20450 <Perl_re_exec_indentf@@Base+0x14280>  // b.hs, b.nlast
   1e14c:	mov	x1, #0x0                   	// #0
   1e150:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   1e154:	ldr	x21, [x21, #3880]
   1e158:	add	x22, sp, #0x108
   1e15c:	ldr	x24, [sp, #144]
   1e160:	ldr	x23, [sp, #176]
   1e164:	b	1e180 <Perl_re_exec_indentf@@Base+0x11fb0>
   1e168:	ldr	x1, [sp, #264]
   1e16c:	add	x1, x1, #0x1
   1e170:	str	x1, [sp, #264]
   1e174:	ldr	x2, [sp, #264]
   1e178:	cmp	x2, x25
   1e17c:	b.cs	1e1e4 <Perl_re_exec_indentf@@Base+0x12014>  // b.hs, b.nlast
   1e180:	ldrb	w0, [x2]
   1e184:	ldrb	w3, [x24]
   1e188:	ldr	w0, [x21, x0, lsl #2]
   1e18c:	lsr	w0, w0, w3
   1e190:	and	w0, w0, #0x1
   1e194:	cmp	w20, w0
   1e198:	b.eq	1e1d8 <Perl_re_exec_indentf@@Base+0x12008>  // b.none
   1e19c:	cmp	w19, #0x0
   1e1a0:	ccmp	x2, x1, #0x0, ne  // ne = any
   1e1a4:	b.eq	1e168 <Perl_re_exec_indentf@@Base+0x11f98>  // b.none
   1e1a8:	ldrb	w0, [x23, #88]
   1e1ac:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e1b0:	ldr	x0, [x23, #16]
   1e1b4:	cmp	x0, x2
   1e1b8:	b.cc	1e168 <Perl_re_exec_indentf@@Base+0x11f98>  // b.lo, b.ul, b.last
   1e1bc:	mov	x2, x22
   1e1c0:	mov	x1, x23
   1e1c4:	mov	x0, x28
   1e1c8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e1cc:	and	w0, w0, #0xff
   1e1d0:	cbz	w0, 1e168 <Perl_re_exec_indentf@@Base+0x11f98>
   1e1d4:	b	202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e1d8:	add	x2, x2, #0x1
   1e1dc:	str	x2, [sp, #264]
   1e1e0:	b	1e174 <Perl_re_exec_indentf@@Base+0x11fa4>
   1e1e4:	mov	x0, #0x0                   	// #0
   1e1e8:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e1ec:	ldr	x0, [sp, #144]
   1e1f0:	ldrb	w22, [x0]
   1e1f4:	cmp	w22, #0xc
   1e1f8:	b.eq	1e2d4 <Perl_re_exec_indentf@@Base+0x12104>  // b.none
   1e1fc:	b.ls	1e248 <Perl_re_exec_indentf@@Base+0x12078>  // b.plast
   1e200:	cmp	w22, #0xd
   1e204:	b.eq	1e298 <Perl_re_exec_indentf@@Base+0x120c8>  // b.none
   1e208:	cmp	w22, #0xf
   1e20c:	b.ne	1e354 <Perl_re_exec_indentf@@Base+0x12184>  // b.any
   1e210:	mov	x21, #0x0                   	// #0
   1e214:	ldr	x1, [sp, #152]
   1e218:	ldr	x0, [sp, #128]
   1e21c:	cmp	x1, x0
   1e220:	b.cs	1e290 <Perl_re_exec_indentf@@Base+0x120c0>  // b.hs, b.nlast
   1e224:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1e228:	ldr	x27, [x22, #4064]
   1e22c:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   1e230:	ldr	x26, [x24, #3880]
   1e234:	add	x25, sp, #0x108
   1e238:	str	w20, [sp, #128]
   1e23c:	mov	x20, x0
   1e240:	ldr	x23, [sp, #176]
   1e244:	b	1ed04 <Perl_re_exec_indentf@@Base+0x12b34>
   1e248:	cmp	w22, #0xa
   1e24c:	b.eq	1e314 <Perl_re_exec_indentf@@Base+0x12144>  // b.none
   1e250:	cmp	w22, #0xb
   1e254:	b.ne	1e354 <Perl_re_exec_indentf@@Base+0x12184>  // b.any
   1e258:	mov	x21, #0x0                   	// #0
   1e25c:	ldr	x1, [sp, #152]
   1e260:	ldr	x0, [sp, #128]
   1e264:	cmp	x1, x0
   1e268:	b.cs	1e30c <Perl_re_exec_indentf@@Base+0x1213c>  // b.hs, b.nlast
   1e26c:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1e270:	ldr	x27, [x22, #4064]
   1e274:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   1e278:	ldr	x26, [x24, #3880]
   1e27c:	add	x25, sp, #0x108
   1e280:	str	w20, [sp, #128]
   1e284:	mov	x20, x0
   1e288:	ldr	x23, [sp, #176]
   1e28c:	b	1e998 <Perl_re_exec_indentf@@Base+0x127c8>
   1e290:	mov	x0, #0x0                   	// #0
   1e294:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e298:	mov	x21, #0x0                   	// #0
   1e29c:	ldr	x1, [sp, #152]
   1e2a0:	ldr	x0, [sp, #128]
   1e2a4:	cmp	x1, x0
   1e2a8:	b.cs	1e2cc <Perl_re_exec_indentf@@Base+0x120fc>  // b.hs, b.nlast
   1e2ac:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   1e2b0:	ldr	x27, [x24, #3880]
   1e2b4:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1e2b8:	ldr	x26, [x23, #4064]
   1e2bc:	add	x25, sp, #0x108
   1e2c0:	str	w20, [sp, #120]
   1e2c4:	ldr	x20, [sp, #176]
   1e2c8:	b	1ee60 <Perl_re_exec_indentf@@Base+0x12c90>
   1e2cc:	mov	x0, #0x0                   	// #0
   1e2d0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e2d4:	mov	x21, #0x0                   	// #0
   1e2d8:	ldr	x1, [sp, #152]
   1e2dc:	ldr	x0, [sp, #128]
   1e2e0:	cmp	x1, x0
   1e2e4:	b.cs	1e304 <Perl_re_exec_indentf@@Base+0x12134>  // b.hs, b.nlast
   1e2e8:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1e2ec:	ldr	x25, [x23, #4064]
   1e2f0:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1e2f4:	ldr	x22, [x22, #3880]
   1e2f8:	add	x24, sp, #0x108
   1e2fc:	ldr	x26, [sp, #176]
   1e300:	b	1eb30 <Perl_re_exec_indentf@@Base+0x12960>
   1e304:	mov	x0, #0x0                   	// #0
   1e308:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e30c:	mov	x0, #0x0                   	// #0
   1e310:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e314:	mov	x21, #0x0                   	// #0
   1e318:	ldr	x1, [sp, #152]
   1e31c:	ldr	x0, [sp, #128]
   1e320:	cmp	x1, x0
   1e324:	b.cs	1e34c <Perl_re_exec_indentf@@Base+0x1217c>  // b.hs, b.nlast
   1e328:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   1e32c:	ldr	x27, [x22, #4064]
   1e330:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   1e334:	ldr	x26, [x24, #3880]
   1e338:	add	x25, sp, #0x108
   1e33c:	str	w20, [sp, #128]
   1e340:	mov	x20, x0
   1e344:	ldr	x23, [sp, #176]
   1e348:	b	1e74c <Perl_re_exec_indentf@@Base+0x1257c>
   1e34c:	mov	x0, #0x0                   	// #0
   1e350:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e354:	ldr	x0, [sp, #152]
   1e358:	ldr	x1, [sp, #128]
   1e35c:	cmp	x0, x1
   1e360:	b.cs	20458 <Perl_re_exec_indentf@@Base+0x14288>  // b.hs, b.nlast
   1e364:	mov	x21, #0x0                   	// #0
   1e368:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   1e36c:	ldr	x23, [x23, #3928]
   1e370:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   1e374:	ldr	x25, [x26, #3824]
   1e378:	mov	w24, #0xff                  	// #255
   1e37c:	str	w22, [sp, #120]
   1e380:	mov	x22, x0
   1e384:	b	1e474 <Perl_re_exec_indentf@@Base+0x122a4>
   1e388:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e38c:	add	x3, x3, #0x330
   1e390:	add	x3, x3, #0xc48
   1e394:	mov	w2, #0x710                 	// #1808
   1e398:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e39c:	add	x1, x1, #0xc80
   1e3a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1e3a4:	add	x0, x0, #0xce8
   1e3a8:	bl	58e0 <__assert_fail@plt>
   1e3ac:	add	x6, x6, #0x1
   1e3b0:	cmp	x5, #0x1
   1e3b4:	ldr	x0, [sp, #128]
   1e3b8:	ccmp	x0, x6, #0x0, ne  // ne = any
   1e3bc:	b.hi	1e4b4 <Perl_re_exec_indentf@@Base+0x122e4>  // b.pmore
   1e3c0:	mov	x5, #0x0                   	// #0
   1e3c4:	mov	x4, #0x0                   	// #0
   1e3c8:	mov	x2, #0x0                   	// #0
   1e3cc:	ldr	x0, [sp, #128]
   1e3d0:	sub	x1, x0, x22
   1e3d4:	mov	x0, x22
   1e3d8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1e3dc:	mov	x1, x0
   1e3e0:	b	1e4e8 <Perl_re_exec_indentf@@Base+0x12318>
   1e3e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e3e8:	add	x3, x3, #0x330
   1e3ec:	add	x3, x3, #0xb90
   1e3f0:	mov	w2, #0x3f                  	// #63
   1e3f4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   1e3f8:	add	x1, x1, #0x550
   1e3fc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   1e400:	add	x0, x0, #0x568
   1e404:	bl	58e0 <__assert_fail@plt>
   1e408:	add	x2, sp, #0x108
   1e40c:	ldr	x1, [sp, #176]
   1e410:	mov	x0, x28
   1e414:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e418:	and	w0, w0, #0xff
   1e41c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e420:	ldr	x0, [sp, #176]
   1e424:	ldr	x0, [x0, #16]
   1e428:	ldr	x21, [sp, #264]
   1e42c:	cmp	x0, x21
   1e430:	b.cc	1e53c <Perl_re_exec_indentf@@Base+0x1236c>  // b.lo, b.ul, b.last
   1e434:	sub	x0, x0, x21
   1e438:	mov	x1, #0x0                   	// #0
   1e43c:	cmp	x0, #0x0
   1e440:	b.le	1e45c <Perl_re_exec_indentf@@Base+0x1228c>
   1e444:	ldrb	w2, [x21]
   1e448:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1e44c:	ldr	x1, [x1, #4064]
   1e450:	ldrb	w1, [x1, w2, sxtw]
   1e454:	cmp	x1, x0
   1e458:	csel	x1, x1, x0, le
   1e45c:	add	x21, x21, x1
   1e460:	str	x21, [sp, #264]
   1e464:	ldr	x22, [sp, #264]
   1e468:	ldr	x0, [sp, #128]
   1e46c:	cmp	x22, x0
   1e470:	b.cs	1e580 <Perl_re_exec_indentf@@Base+0x123b0>  // b.hs, b.nlast
   1e474:	ldr	w0, [sp, #120]
   1e478:	ldr	x27, [x23, x0, lsl #3]
   1e47c:	mov	w1, #0x2c                  	// #44
   1e480:	mov	x0, x28
   1e484:	bl	52a0 <Perl_ckwarn_d@plt>
   1e488:	ands	w0, w0, #0xff
   1e48c:	mov	w3, #0x9e                  	// #158
   1e490:	csel	w3, w3, wzr, eq  // eq = none
   1e494:	cbz	x22, 1e388 <Perl_re_exec_indentf@@Base+0x121b8>
   1e498:	ldr	x0, [sp, #128]
   1e49c:	cmp	x0, x22
   1e4a0:	b.ls	1e3c0 <Perl_re_exec_indentf@@Base+0x121f0>  // b.plast
   1e4a4:	mov	x6, x22
   1e4a8:	mov	x1, #0x0                   	// #0
   1e4ac:	mov	x5, #0x0                   	// #0
   1e4b0:	ldr	x7, [x26, #3824]
   1e4b4:	ldrb	w4, [x6]
   1e4b8:	ldrb	w0, [x25, w4, sxtw]
   1e4bc:	and	x2, x0, #0xff
   1e4c0:	asr	w0, w24, w0
   1e4c4:	and	w0, w0, w4
   1e4c8:	sxtw	x0, w0
   1e4cc:	bfi	x4, x1, #6, #58
   1e4d0:	cmp	x5, #0x0
   1e4d4:	csel	x1, x4, x0, ne  // ne = any
   1e4d8:	add	x0, x7, x2
   1e4dc:	add	x0, x0, x5
   1e4e0:	ldrb	w5, [x0, #256]
   1e4e4:	cbnz	x5, 1e3ac <Perl_re_exec_indentf@@Base+0x121dc>
   1e4e8:	mov	x0, x27
   1e4ec:	bl	59d0 <Perl__invlist_search@plt>
   1e4f0:	mov	x1, x0
   1e4f4:	cbz	x27, 1e3e4 <Perl_re_exec_indentf@@Base+0x12214>
   1e4f8:	mvn	x0, x0
   1e4fc:	and	x0, x0, #0x1
   1e500:	cmp	x1, #0x0
   1e504:	csel	w0, w0, wzr, ge  // ge = tcont
   1e508:	cmp	w20, w0
   1e50c:	b.eq	1e560 <Perl_re_exec_indentf@@Base+0x12390>  // b.none
   1e510:	cbz	w19, 1e520 <Perl_re_exec_indentf@@Base+0x12350>
   1e514:	ldr	x0, [sp, #264]
   1e518:	cmp	x0, x21
   1e51c:	b.eq	1e420 <Perl_re_exec_indentf@@Base+0x12250>  // b.none
   1e520:	ldr	x1, [sp, #176]
   1e524:	ldrb	w0, [x1, #88]
   1e528:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e52c:	ldr	x1, [x1, #16]
   1e530:	ldr	x0, [sp, #264]
   1e534:	cmp	x1, x0
   1e538:	b.cs	1e408 <Perl_re_exec_indentf@@Base+0x12238>  // b.hs, b.nlast
   1e53c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e540:	add	x3, x3, #0x330
   1e544:	add	x3, x3, #0xcf0
   1e548:	mov	w2, #0xaf3                 	// #2803
   1e54c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e550:	add	x1, x1, #0xcb0
   1e554:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1e558:	add	x0, x0, #0xa80
   1e55c:	bl	58e0 <__assert_fail@plt>
   1e560:	ldr	x0, [sp, #264]
   1e564:	ldrb	w2, [x0]
   1e568:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1e56c:	ldr	x1, [x1, #4064]
   1e570:	ldrb	w1, [x1, w2, sxtw]
   1e574:	add	x0, x0, x1
   1e578:	str	x0, [sp, #264]
   1e57c:	b	1e464 <Perl_re_exec_indentf@@Base+0x12294>
   1e580:	mov	x0, #0x0                   	// #0
   1e584:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e588:	and	w0, w2, #0xfe
   1e58c:	cmp	w0, #0xc2
   1e590:	b.eq	1e5dc <Perl_re_exec_indentf@@Base+0x1240c>  // b.none
   1e594:	sub	x0, x20, x1
   1e598:	ldrb	w3, [x27, w2, sxtw]
   1e59c:	cmp	x0, x3
   1e5a0:	b.lt	1e660 <Perl_re_exec_indentf@@Base+0x12490>  // b.tstop
   1e5a4:	cmp	w2, #0xe1
   1e5a8:	b.eq	1e67c <Perl_re_exec_indentf@@Base+0x124ac>  // b.none
   1e5ac:	cmp	w2, #0xe2
   1e5b0:	b.eq	1e69c <Perl_re_exec_indentf@@Base+0x124cc>  // b.none
   1e5b4:	mov	w0, #0x0                   	// #0
   1e5b8:	cmp	w2, #0xe3
   1e5bc:	b.ne	1e768 <Perl_re_exec_indentf@@Base+0x12598>  // b.any
   1e5c0:	ldrb	w2, [x1, #1]
   1e5c4:	cmp	w2, #0x80
   1e5c8:	b.ne	1e768 <Perl_re_exec_indentf@@Base+0x12598>  // b.any
   1e5cc:	ldrb	w0, [x1, #2]
   1e5d0:	cmp	w0, #0x80
   1e5d4:	cset	w0, eq  // eq = none
   1e5d8:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e5dc:	sub	x0, x20, x1
   1e5e0:	cmp	x0, #0x1
   1e5e4:	b.le	1e644 <Perl_re_exec_indentf@@Base+0x12474>
   1e5e8:	ldrb	w0, [x1, #1]
   1e5ec:	and	w3, w0, #0xc0
   1e5f0:	cmp	w3, #0x80
   1e5f4:	b.ne	1e644 <Perl_re_exec_indentf@@Base+0x12474>  // b.any
   1e5f8:	lsl	w1, w2, #6
   1e5fc:	ubfiz	w2, w2, #6, #5
   1e600:	tst	x2, #0x700
   1e604:	b.ne	1e620 <Perl_re_exec_indentf@@Base+0x12450>  // b.any
   1e608:	and	w0, w0, #0x3f
   1e60c:	orr	w0, w0, w1
   1e610:	and	x0, x0, #0xff
   1e614:	ldr	w0, [x26, x0, lsl #2]
   1e618:	ubfx	x0, x0, #10, #1
   1e61c:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e620:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e624:	add	x3, x3, #0x330
   1e628:	add	x3, x3, #0xcf0
   1e62c:	mov	w2, #0xafc                 	// #2812
   1e630:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e634:	add	x1, x1, #0xcb0
   1e638:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1e63c:	add	x0, x0, #0xb50
   1e640:	bl	58e0 <__assert_fail@plt>
   1e644:	mov	w4, #0x1                   	// #1
   1e648:	mov	w3, #0x0                   	// #0
   1e64c:	mov	x2, x20
   1e650:	mov	x0, x28
   1e654:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1e658:	mov	w0, #0x0                   	// #0
   1e65c:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e660:	mov	w4, #0x1                   	// #1
   1e664:	mov	w3, #0x0                   	// #0
   1e668:	mov	x2, x20
   1e66c:	mov	x0, x28
   1e670:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1e674:	mov	w0, #0x0                   	// #0
   1e678:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e67c:	ldrb	w2, [x1, #1]
   1e680:	mov	w0, #0x0                   	// #0
   1e684:	cmp	w2, #0x9a
   1e688:	b.ne	1e768 <Perl_re_exec_indentf@@Base+0x12598>  // b.any
   1e68c:	ldrb	w0, [x1, #2]
   1e690:	cmp	w0, #0x80
   1e694:	cset	w0, eq  // eq = none
   1e698:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e69c:	ldrb	w2, [x1, #1]
   1e6a0:	cmp	w2, #0x80
   1e6a4:	b.eq	1e6c4 <Perl_re_exec_indentf@@Base+0x124f4>  // b.none
   1e6a8:	mov	w0, #0x0                   	// #0
   1e6ac:	cmp	w2, #0x81
   1e6b0:	b.ne	1e768 <Perl_re_exec_indentf@@Base+0x12598>  // b.any
   1e6b4:	ldrb	w0, [x1, #2]
   1e6b8:	cmp	w0, #0x9f
   1e6bc:	cset	w0, eq  // eq = none
   1e6c0:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e6c4:	ldrb	w1, [x1, #2]
   1e6c8:	sub	w2, w1, #0x80
   1e6cc:	mov	w0, #0x1                   	// #1
   1e6d0:	cmp	w2, #0xa
   1e6d4:	b.ls	1e768 <Perl_re_exec_indentf@@Base+0x12598>  // b.plast
   1e6d8:	sub	w0, w1, #0xa8
   1e6dc:	cmp	w1, #0xaf
   1e6e0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   1e6e4:	cset	w0, ls  // ls = plast
   1e6e8:	b	1e768 <Perl_re_exec_indentf@@Base+0x12598>
   1e6ec:	mov	x2, x25
   1e6f0:	mov	x1, x23
   1e6f4:	mov	x0, x28
   1e6f8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e6fc:	and	w0, w0, #0xff
   1e700:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e704:	ldr	x0, [x23, #16]
   1e708:	ldr	x21, [sp, #264]
   1e70c:	cmp	x0, x21
   1e710:	b.cc	1e79c <Perl_re_exec_indentf@@Base+0x125cc>  // b.lo, b.ul, b.last
   1e714:	sub	x0, x0, x21
   1e718:	mov	x1, #0x0                   	// #0
   1e71c:	cmp	x0, #0x0
   1e720:	b.le	1e738 <Perl_re_exec_indentf@@Base+0x12568>
   1e724:	ldr	x1, [x22, #4064]
   1e728:	ldrb	w2, [x21]
   1e72c:	ldrb	w1, [x1, w2, sxtw]
   1e730:	cmp	x1, x0
   1e734:	csel	x1, x1, x0, le
   1e738:	add	x21, x21, x1
   1e73c:	str	x21, [sp, #264]
   1e740:	ldr	x1, [sp, #264]
   1e744:	cmp	x1, x20
   1e748:	b.cs	1e7dc <Perl_re_exec_indentf@@Base+0x1260c>  // b.hs, b.nlast
   1e74c:	ldr	w0, [sp, #128]
   1e750:	str	w0, [sp, #120]
   1e754:	ldrb	w2, [x1]
   1e758:	tbnz	w2, #7, 1e588 <Perl_re_exec_indentf@@Base+0x123b8>
   1e75c:	ldr	x0, [x24, #3880]
   1e760:	ldr	w0, [x0, w2, sxtw #2]
   1e764:	ubfx	x0, x0, #10, #1
   1e768:	ldr	w1, [sp, #120]
   1e76c:	cmp	w1, w0
   1e770:	b.eq	1e7c0 <Perl_re_exec_indentf@@Base+0x125f0>  // b.none
   1e774:	cbz	w19, 1e784 <Perl_re_exec_indentf@@Base+0x125b4>
   1e778:	ldr	x0, [sp, #264]
   1e77c:	cmp	x0, x21
   1e780:	b.eq	1e704 <Perl_re_exec_indentf@@Base+0x12534>  // b.none
   1e784:	ldrb	w0, [x23, #88]
   1e788:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e78c:	ldr	x1, [x23, #16]
   1e790:	ldr	x0, [sp, #264]
   1e794:	cmp	x1, x0
   1e798:	b.cs	1e6ec <Perl_re_exec_indentf@@Base+0x1251c>  // b.hs, b.nlast
   1e79c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e7a0:	add	x3, x3, #0x330
   1e7a4:	add	x3, x3, #0xcf0
   1e7a8:	mov	w2, #0xafb                 	// #2811
   1e7ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e7b0:	add	x1, x1, #0xcb0
   1e7b4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1e7b8:	add	x0, x0, #0xa80
   1e7bc:	bl	58e0 <__assert_fail@plt>
   1e7c0:	ldr	x0, [sp, #264]
   1e7c4:	ldr	x1, [x22, #4064]
   1e7c8:	ldrb	w2, [x0]
   1e7cc:	ldrb	w1, [x1, w2, sxtw]
   1e7d0:	add	x0, x0, x1
   1e7d4:	str	x0, [sp, #264]
   1e7d8:	b	1e740 <Perl_re_exec_indentf@@Base+0x12570>
   1e7dc:	mov	x0, #0x0                   	// #0
   1e7e0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1e7e4:	and	w0, w2, #0xfe
   1e7e8:	cmp	w0, #0xc2
   1e7ec:	b.eq	1e838 <Perl_re_exec_indentf@@Base+0x12668>  // b.none
   1e7f0:	sub	x0, x20, x1
   1e7f4:	ldrb	w3, [x27, w2, sxtw]
   1e7f8:	cmp	x0, x3
   1e7fc:	b.lt	1e8bc <Perl_re_exec_indentf@@Base+0x126ec>  // b.tstop
   1e800:	cmp	w2, #0xe1
   1e804:	b.eq	1e8d8 <Perl_re_exec_indentf@@Base+0x12708>  // b.none
   1e808:	cmp	w2, #0xe2
   1e80c:	b.eq	1e8f8 <Perl_re_exec_indentf@@Base+0x12728>  // b.none
   1e810:	mov	w0, #0x0                   	// #0
   1e814:	cmp	w2, #0xe3
   1e818:	b.ne	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>  // b.any
   1e81c:	ldrb	w2, [x1, #1]
   1e820:	cmp	w2, #0x80
   1e824:	b.ne	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>  // b.any
   1e828:	ldrb	w0, [x1, #2]
   1e82c:	cmp	w0, #0x80
   1e830:	cset	w0, eq  // eq = none
   1e834:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e838:	sub	x0, x20, x1
   1e83c:	cmp	x0, #0x1
   1e840:	b.le	1e8a0 <Perl_re_exec_indentf@@Base+0x126d0>
   1e844:	ldrb	w0, [x1, #1]
   1e848:	and	w3, w0, #0xc0
   1e84c:	cmp	w3, #0x80
   1e850:	b.ne	1e8a0 <Perl_re_exec_indentf@@Base+0x126d0>  // b.any
   1e854:	lsl	w1, w2, #6
   1e858:	ubfiz	w2, w2, #6, #5
   1e85c:	tst	x2, #0x700
   1e860:	b.ne	1e87c <Perl_re_exec_indentf@@Base+0x126ac>  // b.any
   1e864:	and	w0, w0, #0x3f
   1e868:	orr	w0, w0, w1
   1e86c:	and	x0, x0, #0xff
   1e870:	ldr	w0, [x26, x0, lsl #2]
   1e874:	ubfx	x0, x0, #11, #1
   1e878:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e87c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e880:	add	x3, x3, #0x330
   1e884:	add	x3, x3, #0xcf0
   1e888:	mov	w2, #0xb01                 	// #2817
   1e88c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e890:	add	x1, x1, #0xcb0
   1e894:	adrp	x0, 69000 <boot_re@@Base+0x741c>
   1e898:	add	x0, x0, #0x488
   1e89c:	bl	58e0 <__assert_fail@plt>
   1e8a0:	mov	w4, #0x1                   	// #1
   1e8a4:	mov	w3, #0x0                   	// #0
   1e8a8:	mov	x2, x20
   1e8ac:	mov	x0, x28
   1e8b0:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1e8b4:	mov	w0, #0x0                   	// #0
   1e8b8:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e8bc:	mov	w4, #0x1                   	// #1
   1e8c0:	mov	w3, #0x0                   	// #0
   1e8c4:	mov	x2, x20
   1e8c8:	mov	x0, x28
   1e8cc:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1e8d0:	mov	w0, #0x0                   	// #0
   1e8d4:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e8d8:	ldrb	w2, [x1, #1]
   1e8dc:	mov	w0, #0x0                   	// #0
   1e8e0:	cmp	w2, #0x9a
   1e8e4:	b.ne	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>  // b.any
   1e8e8:	ldrb	w0, [x1, #2]
   1e8ec:	cmp	w0, #0x80
   1e8f0:	cset	w0, eq  // eq = none
   1e8f4:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e8f8:	ldrb	w2, [x1, #1]
   1e8fc:	cmp	w2, #0x80
   1e900:	b.eq	1e920 <Perl_re_exec_indentf@@Base+0x12750>  // b.none
   1e904:	mov	w0, #0x0                   	// #0
   1e908:	cmp	w2, #0x81
   1e90c:	b.ne	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>  // b.any
   1e910:	ldrb	w0, [x1, #2]
   1e914:	cmp	w0, #0x9f
   1e918:	cset	w0, eq  // eq = none
   1e91c:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e920:	ldrb	w0, [x1, #2]
   1e924:	sub	w1, w0, #0x80
   1e928:	cmp	w0, #0xaf
   1e92c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
   1e930:	cset	w0, ls  // ls = plast
   1e934:	b	1e9b4 <Perl_re_exec_indentf@@Base+0x127e4>
   1e938:	mov	x2, x25
   1e93c:	mov	x1, x23
   1e940:	mov	x0, x28
   1e944:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1e948:	and	w0, w0, #0xff
   1e94c:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e950:	ldr	x0, [x23, #16]
   1e954:	ldr	x21, [sp, #264]
   1e958:	cmp	x0, x21
   1e95c:	b.cc	1e9e8 <Perl_re_exec_indentf@@Base+0x12818>  // b.lo, b.ul, b.last
   1e960:	sub	x0, x0, x21
   1e964:	mov	x1, #0x0                   	// #0
   1e968:	cmp	x0, #0x0
   1e96c:	b.le	1e984 <Perl_re_exec_indentf@@Base+0x127b4>
   1e970:	ldr	x1, [x22, #4064]
   1e974:	ldrb	w2, [x21]
   1e978:	ldrb	w1, [x1, w2, sxtw]
   1e97c:	cmp	x1, x0
   1e980:	csel	x1, x1, x0, le
   1e984:	add	x21, x21, x1
   1e988:	str	x21, [sp, #264]
   1e98c:	ldr	x1, [sp, #264]
   1e990:	cmp	x1, x20
   1e994:	b.cs	1ea28 <Perl_re_exec_indentf@@Base+0x12858>  // b.hs, b.nlast
   1e998:	ldr	w0, [sp, #128]
   1e99c:	str	w0, [sp, #120]
   1e9a0:	ldrb	w2, [x1]
   1e9a4:	tbnz	w2, #7, 1e7e4 <Perl_re_exec_indentf@@Base+0x12614>
   1e9a8:	ldr	x0, [x24, #3880]
   1e9ac:	ldr	w0, [x0, w2, sxtw #2]
   1e9b0:	ubfx	x0, x0, #11, #1
   1e9b4:	ldr	w1, [sp, #120]
   1e9b8:	cmp	w1, w0
   1e9bc:	b.eq	1ea0c <Perl_re_exec_indentf@@Base+0x1283c>  // b.none
   1e9c0:	cbz	w19, 1e9d0 <Perl_re_exec_indentf@@Base+0x12800>
   1e9c4:	ldr	x0, [sp, #264]
   1e9c8:	cmp	x0, x21
   1e9cc:	b.eq	1e950 <Perl_re_exec_indentf@@Base+0x12780>  // b.none
   1e9d0:	ldrb	w0, [x23, #88]
   1e9d4:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1e9d8:	ldr	x1, [x23, #16]
   1e9dc:	ldr	x0, [sp, #264]
   1e9e0:	cmp	x1, x0
   1e9e4:	b.cs	1e938 <Perl_re_exec_indentf@@Base+0x12768>  // b.hs, b.nlast
   1e9e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1e9ec:	add	x3, x3, #0x330
   1e9f0:	add	x3, x3, #0xcf0
   1e9f4:	mov	w2, #0xb00                 	// #2816
   1e9f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1e9fc:	add	x1, x1, #0xcb0
   1ea00:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ea04:	add	x0, x0, #0xa80
   1ea08:	bl	58e0 <__assert_fail@plt>
   1ea0c:	ldr	x0, [sp, #264]
   1ea10:	ldr	x1, [x22, #4064]
   1ea14:	ldrb	w2, [x0]
   1ea18:	ldrb	w1, [x1, w2, sxtw]
   1ea1c:	add	x0, x0, x1
   1ea20:	str	x0, [sp, #264]
   1ea24:	b	1e98c <Perl_re_exec_indentf@@Base+0x127bc>
   1ea28:	mov	x0, #0x0                   	// #0
   1ea2c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ea30:	and	w3, w2, #0xfe
   1ea34:	mov	w0, #0x0                   	// #0
   1ea38:	cmp	w3, #0xc2
   1ea3c:	b.eq	1eb44 <Perl_re_exec_indentf@@Base+0x12974>  // b.none
   1ea40:	ldr	x0, [sp, #128]
   1ea44:	sub	x0, x0, x1
   1ea48:	ldrb	w3, [x25, w2, sxtw]
   1ea4c:	cmp	x0, x3
   1ea50:	b.lt	1ea8c <Perl_re_exec_indentf@@Base+0x128bc>  // b.tstop
   1ea54:	mov	w0, #0x0                   	// #0
   1ea58:	cmp	w2, #0xef
   1ea5c:	b.ne	1eb44 <Perl_re_exec_indentf@@Base+0x12974>  // b.any
   1ea60:	ldrb	w2, [x1, #1]
   1ea64:	cmp	w2, #0xbc
   1ea68:	b.eq	1eaa8 <Perl_re_exec_indentf@@Base+0x128d8>  // b.none
   1ea6c:	mov	w0, #0x0                   	// #0
   1ea70:	cmp	w2, #0xbd
   1ea74:	b.ne	1eb44 <Perl_re_exec_indentf@@Base+0x12974>  // b.any
   1ea78:	ldrb	w0, [x1, #2]
   1ea7c:	sub	w0, w0, #0x81
   1ea80:	cmp	w0, #0x5
   1ea84:	cset	w0, ls  // ls = plast
   1ea88:	b	1eb44 <Perl_re_exec_indentf@@Base+0x12974>
   1ea8c:	mov	w4, #0x1                   	// #1
   1ea90:	mov	w3, #0x0                   	// #0
   1ea94:	ldr	x2, [sp, #128]
   1ea98:	mov	x0, x28
   1ea9c:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1eaa0:	mov	w0, #0x0                   	// #0
   1eaa4:	b	1eb44 <Perl_re_exec_indentf@@Base+0x12974>
   1eaa8:	ldrb	w1, [x1, #2]
   1eaac:	sub	w2, w1, #0x90
   1eab0:	mov	w0, #0x1                   	// #1
   1eab4:	cmp	w2, #0x9
   1eab8:	b.ls	1eb44 <Perl_re_exec_indentf@@Base+0x12974>  // b.plast
   1eabc:	sub	w1, w1, #0xa1
   1eac0:	cmp	w1, #0x5
   1eac4:	cset	w0, ls  // ls = plast
   1eac8:	b	1eb44 <Perl_re_exec_indentf@@Base+0x12974>
   1eacc:	mov	x2, x24
   1ead0:	mov	x1, x26
   1ead4:	mov	x0, x28
   1ead8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1eadc:	and	w0, w0, #0xff
   1eae0:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1eae4:	ldr	x0, [x26, #16]
   1eae8:	ldr	x21, [sp, #264]
   1eaec:	cmp	x0, x21
   1eaf0:	b.cc	1eb74 <Perl_re_exec_indentf@@Base+0x129a4>  // b.lo, b.ul, b.last
   1eaf4:	sub	x0, x0, x21
   1eaf8:	mov	x1, #0x0                   	// #0
   1eafc:	cmp	x0, #0x0
   1eb00:	b.le	1eb18 <Perl_re_exec_indentf@@Base+0x12948>
   1eb04:	ldr	x1, [x23, #4064]
   1eb08:	ldrb	w2, [x21]
   1eb0c:	ldrb	w1, [x1, w2, sxtw]
   1eb10:	cmp	x1, x0
   1eb14:	csel	x1, x1, x0, le
   1eb18:	add	x21, x21, x1
   1eb1c:	str	x21, [sp, #264]
   1eb20:	ldr	x1, [sp, #264]
   1eb24:	ldr	x0, [sp, #128]
   1eb28:	cmp	x1, x0
   1eb2c:	b.cs	1ebb4 <Perl_re_exec_indentf@@Base+0x129e4>  // b.hs, b.nlast
   1eb30:	mov	w27, w20
   1eb34:	ldrb	w2, [x1]
   1eb38:	tbnz	w2, #7, 1ea30 <Perl_re_exec_indentf@@Base+0x12860>
   1eb3c:	ldr	w0, [x22, w2, sxtw #2]
   1eb40:	ubfx	x0, x0, #12, #1
   1eb44:	cmp	w27, w0
   1eb48:	b.eq	1eb98 <Perl_re_exec_indentf@@Base+0x129c8>  // b.none
   1eb4c:	cbz	w19, 1eb5c <Perl_re_exec_indentf@@Base+0x1298c>
   1eb50:	ldr	x0, [sp, #264]
   1eb54:	cmp	x0, x21
   1eb58:	b.eq	1eae4 <Perl_re_exec_indentf@@Base+0x12914>  // b.none
   1eb5c:	ldrb	w0, [x26, #88]
   1eb60:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1eb64:	ldr	x1, [x26, #16]
   1eb68:	ldr	x0, [sp, #264]
   1eb6c:	cmp	x1, x0
   1eb70:	b.cs	1eacc <Perl_re_exec_indentf@@Base+0x128fc>  // b.hs, b.nlast
   1eb74:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1eb78:	add	x3, x3, #0x330
   1eb7c:	add	x3, x3, #0xcf0
   1eb80:	mov	w2, #0xb05                 	// #2821
   1eb84:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1eb88:	add	x1, x1, #0xcb0
   1eb8c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1eb90:	add	x0, x0, #0xa80
   1eb94:	bl	58e0 <__assert_fail@plt>
   1eb98:	ldr	x0, [sp, #264]
   1eb9c:	ldr	x1, [x23, #4064]
   1eba0:	ldrb	w2, [x0]
   1eba4:	ldrb	w1, [x1, w2, sxtw]
   1eba8:	add	x0, x0, x1
   1ebac:	str	x0, [sp, #264]
   1ebb0:	b	1eb20 <Perl_re_exec_indentf@@Base+0x12950>
   1ebb4:	mov	x0, #0x0                   	// #0
   1ebb8:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ebbc:	and	w0, w2, #0xfe
   1ebc0:	cmp	w0, #0xc2
   1ebc4:	b.eq	1ec04 <Perl_re_exec_indentf@@Base+0x12a34>  // b.none
   1ebc8:	sub	x0, x20, x1
   1ebcc:	ldrb	w3, [x27, w2, sxtw]
   1ebd0:	cmp	x0, x3
   1ebd4:	b.lt	1ec88 <Perl_re_exec_indentf@@Base+0x12ab8>  // b.tstop
   1ebd8:	mov	w0, #0x0                   	// #0
   1ebdc:	cmp	w2, #0xe2
   1ebe0:	b.ne	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>  // b.any
   1ebe4:	ldrb	w2, [x1, #1]
   1ebe8:	cmp	w2, #0x80
   1ebec:	b.ne	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>  // b.any
   1ebf0:	ldrb	w0, [x1, #2]
   1ebf4:	sub	w0, w0, #0xa8
   1ebf8:	cmp	w0, #0x1
   1ebfc:	cset	w0, ls  // ls = plast
   1ec00:	b	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>
   1ec04:	sub	x0, x20, x1
   1ec08:	cmp	x0, #0x1
   1ec0c:	b.le	1ec6c <Perl_re_exec_indentf@@Base+0x12a9c>
   1ec10:	ldrb	w0, [x1, #1]
   1ec14:	and	w3, w0, #0xc0
   1ec18:	cmp	w3, #0x80
   1ec1c:	b.ne	1ec6c <Perl_re_exec_indentf@@Base+0x12a9c>  // b.any
   1ec20:	lsl	w1, w2, #6
   1ec24:	ubfiz	w2, w2, #6, #5
   1ec28:	tst	x2, #0x700
   1ec2c:	b.ne	1ec48 <Perl_re_exec_indentf@@Base+0x12a78>  // b.any
   1ec30:	and	w0, w0, #0x3f
   1ec34:	orr	w0, w0, w1
   1ec38:	and	x0, x0, #0xff
   1ec3c:	ldr	w0, [x26, x0, lsl #2]
   1ec40:	ubfx	x0, x0, #15, #1
   1ec44:	b	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>
   1ec48:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ec4c:	add	x3, x3, #0x330
   1ec50:	add	x3, x3, #0xcf0
   1ec54:	mov	w2, #0xb0b                 	// #2827
   1ec58:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ec5c:	add	x1, x1, #0xcb0
   1ec60:	adrp	x0, 69000 <boot_re@@Base+0x741c>
   1ec64:	add	x0, x0, #0xdc0
   1ec68:	bl	58e0 <__assert_fail@plt>
   1ec6c:	mov	w4, #0x1                   	// #1
   1ec70:	mov	w3, #0x0                   	// #0
   1ec74:	mov	x2, x20
   1ec78:	mov	x0, x28
   1ec7c:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1ec80:	mov	w0, #0x0                   	// #0
   1ec84:	b	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>
   1ec88:	mov	w4, #0x1                   	// #1
   1ec8c:	mov	w3, #0x0                   	// #0
   1ec90:	mov	x2, x20
   1ec94:	mov	x0, x28
   1ec98:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1ec9c:	mov	w0, #0x0                   	// #0
   1eca0:	b	1ed20 <Perl_re_exec_indentf@@Base+0x12b50>
   1eca4:	mov	x2, x25
   1eca8:	mov	x1, x23
   1ecac:	mov	x0, x28
   1ecb0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1ecb4:	and	w0, w0, #0xff
   1ecb8:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ecbc:	ldr	x0, [x23, #16]
   1ecc0:	ldr	x21, [sp, #264]
   1ecc4:	cmp	x0, x21
   1ecc8:	b.cc	1ed54 <Perl_re_exec_indentf@@Base+0x12b84>  // b.lo, b.ul, b.last
   1eccc:	sub	x0, x0, x21
   1ecd0:	mov	x1, #0x0                   	// #0
   1ecd4:	cmp	x0, #0x0
   1ecd8:	b.le	1ecf0 <Perl_re_exec_indentf@@Base+0x12b20>
   1ecdc:	ldr	x1, [x22, #4064]
   1ece0:	ldrb	w2, [x21]
   1ece4:	ldrb	w1, [x1, w2, sxtw]
   1ece8:	cmp	x1, x0
   1ecec:	csel	x1, x1, x0, le
   1ecf0:	add	x21, x21, x1
   1ecf4:	str	x21, [sp, #264]
   1ecf8:	ldr	x1, [sp, #264]
   1ecfc:	cmp	x1, x20
   1ed00:	b.cs	1ed94 <Perl_re_exec_indentf@@Base+0x12bc4>  // b.hs, b.nlast
   1ed04:	ldr	w0, [sp, #128]
   1ed08:	str	w0, [sp, #120]
   1ed0c:	ldrb	w2, [x1]
   1ed10:	tbnz	w2, #7, 1ebbc <Perl_re_exec_indentf@@Base+0x129ec>
   1ed14:	ldr	x0, [x24, #3880]
   1ed18:	ldr	w0, [x0, w2, sxtw #2]
   1ed1c:	ubfx	x0, x0, #15, #1
   1ed20:	ldr	w1, [sp, #120]
   1ed24:	cmp	w1, w0
   1ed28:	b.eq	1ed78 <Perl_re_exec_indentf@@Base+0x12ba8>  // b.none
   1ed2c:	cbz	w19, 1ed3c <Perl_re_exec_indentf@@Base+0x12b6c>
   1ed30:	ldr	x0, [sp, #264]
   1ed34:	cmp	x0, x21
   1ed38:	b.eq	1ecbc <Perl_re_exec_indentf@@Base+0x12aec>  // b.none
   1ed3c:	ldrb	w0, [x23, #88]
   1ed40:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ed44:	ldr	x1, [x23, #16]
   1ed48:	ldr	x0, [sp, #264]
   1ed4c:	cmp	x1, x0
   1ed50:	b.cs	1eca4 <Perl_re_exec_indentf@@Base+0x12ad4>  // b.hs, b.nlast
   1ed54:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1ed58:	add	x3, x3, #0x330
   1ed5c:	add	x3, x3, #0xcf0
   1ed60:	mov	w2, #0xb0a                 	// #2826
   1ed64:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1ed68:	add	x1, x1, #0xcb0
   1ed6c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1ed70:	add	x0, x0, #0xa80
   1ed74:	bl	58e0 <__assert_fail@plt>
   1ed78:	ldr	x0, [sp, #264]
   1ed7c:	ldr	x1, [x22, #4064]
   1ed80:	ldrb	w2, [x0]
   1ed84:	ldrb	w1, [x1, w2, sxtw]
   1ed88:	add	x0, x0, x1
   1ed8c:	str	x0, [sp, #264]
   1ed90:	b	1ecf8 <Perl_re_exec_indentf@@Base+0x12b28>
   1ed94:	mov	x0, #0x0                   	// #0
   1ed98:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1ed9c:	and	w3, w2, #0xfe
   1eda0:	mov	w0, #0x0                   	// #0
   1eda4:	cmp	w3, #0xc2
   1eda8:	b.ne	1ee78 <Perl_re_exec_indentf@@Base+0x12ca8>  // b.any
   1edac:	ldr	x0, [sp, #128]
   1edb0:	sub	x0, x0, x1
   1edb4:	cmp	x0, #0x1
   1edb8:	b.le	1ede0 <Perl_re_exec_indentf@@Base+0x12c10>
   1edbc:	ldrb	w0, [x1, #1]
   1edc0:	and	w3, w0, #0xc0
   1edc4:	cmp	w3, #0x80
   1edc8:	b.ne	1ede0 <Perl_re_exec_indentf@@Base+0x12c10>  // b.any
   1edcc:	bfi	w0, w2, #6, #26
   1edd0:	and	x0, x0, #0xff
   1edd4:	ldr	w0, [x27, x0, lsl #2]
   1edd8:	ubfx	x0, x0, #13, #1
   1eddc:	b	1ee78 <Perl_re_exec_indentf@@Base+0x12ca8>
   1ede0:	mov	w4, #0x1                   	// #1
   1ede4:	mov	w3, #0x0                   	// #0
   1ede8:	ldr	x2, [sp, #128]
   1edec:	mov	x0, x28
   1edf0:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   1edf4:	mov	w0, #0x0                   	// #0
   1edf8:	b	1ee78 <Perl_re_exec_indentf@@Base+0x12ca8>
   1edfc:	mov	x2, x25
   1ee00:	mov	x1, x20
   1ee04:	mov	x0, x28
   1ee08:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   1ee0c:	and	w0, w0, #0xff
   1ee10:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ee14:	ldr	x0, [x20, #16]
   1ee18:	ldr	x21, [sp, #264]
   1ee1c:	cmp	x0, x21
   1ee20:	b.cc	1eea8 <Perl_re_exec_indentf@@Base+0x12cd8>  // b.lo, b.ul, b.last
   1ee24:	sub	x0, x0, x21
   1ee28:	mov	x1, #0x0                   	// #0
   1ee2c:	cmp	x0, #0x0
   1ee30:	b.le	1ee48 <Perl_re_exec_indentf@@Base+0x12c78>
   1ee34:	ldr	x1, [x23, #4064]
   1ee38:	ldrb	w2, [x21]
   1ee3c:	ldrb	w1, [x1, w2, sxtw]
   1ee40:	cmp	x1, x0
   1ee44:	csel	x1, x1, x0, le
   1ee48:	add	x21, x21, x1
   1ee4c:	str	x21, [sp, #264]
   1ee50:	ldr	x1, [sp, #264]
   1ee54:	ldr	x0, [sp, #128]
   1ee58:	cmp	x1, x0
   1ee5c:	b.cs	1eee4 <Perl_re_exec_indentf@@Base+0x12d14>  // b.hs, b.nlast
   1ee60:	ldr	w22, [sp, #120]
   1ee64:	ldrb	w2, [x1]
   1ee68:	tbnz	w2, #7, 1ed9c <Perl_re_exec_indentf@@Base+0x12bcc>
   1ee6c:	ldr	x0, [x24, #3880]
   1ee70:	ldr	w0, [x0, w2, sxtw #2]
   1ee74:	ubfx	x0, x0, #13, #1
   1ee78:	cmp	w22, w0
   1ee7c:	b.eq	1eecc <Perl_re_exec_indentf@@Base+0x12cfc>  // b.none
   1ee80:	cbz	w19, 1ee90 <Perl_re_exec_indentf@@Base+0x12cc0>
   1ee84:	ldr	x0, [sp, #264]
   1ee88:	cmp	x0, x21
   1ee8c:	b.eq	1ee14 <Perl_re_exec_indentf@@Base+0x12c44>  // b.none
   1ee90:	ldrb	w0, [x20, #88]
   1ee94:	cbnz	w0, 202ac <Perl_re_exec_indentf@@Base+0x140dc>
   1ee98:	ldr	x1, [x20, #16]
   1ee9c:	ldr	x0, [sp, #264]
   1eea0:	cmp	x1, x0
   1eea4:	b.cs	1edfc <Perl_re_exec_indentf@@Base+0x12c2c>  // b.hs, b.nlast
   1eea8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1eeac:	add	x3, x3, #0x330
   1eeb0:	add	x3, x3, #0xcf0
   1eeb4:	mov	w2, #0xb0f                 	// #2831
   1eeb8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1eebc:	add	x1, x1, #0xcb0
   1eec0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1eec4:	add	x0, x0, #0xa80
   1eec8:	bl	58e0 <__assert_fail@plt>
   1eecc:	ldr	x0, [sp, #264]
   1eed0:	ldrb	w1, [x0]
   1eed4:	ldrb	w1, [x26, w1, sxtw]
   1eed8:	add	x0, x0, x1
   1eedc:	str	x0, [sp, #264]
   1eee0:	b	1ee50 <Perl_re_exec_indentf@@Base+0x12c80>
   1eee4:	mov	x0, #0x0                   	// #0
   1eee8:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   1eeec:	ldr	x0, [sp, #144]
   1eef0:	ldrb	w0, [x0]
   1eef4:	cmp	w0, #0x23
   1eef8:	b.eq	1ef2c <Perl_re_exec_indentf@@Base+0x12d5c>  // b.none
   1eefc:	cmp	w0, #0x24
   1ef00:	b.eq	1f160 <Perl_re_exec_indentf@@Base+0x12f90>  // b.none
   1ef04:	cmp	w0, #0x28
   1ef08:	b.eq	1f178 <Perl_re_exec_indentf@@Base+0x12fa8>  // b.none
   1ef0c:	cmp	w0, #0x2a
   1ef10:	b.eq	1f190 <Perl_re_exec_indentf@@Base+0x12fc0>  // b.none
   1ef14:	ldr	w0, [sp, #160]
   1ef18:	cmp	w0, #0x0
   1ef1c:	cset	w0, eq  // eq = none
   1ef20:	add	w0, w0, #0x2
   1ef24:	str	w0, [sp, #200]
   1ef28:	b	1ef34 <Perl_re_exec_indentf@@Base+0x12d64>
   1ef2c:	ldr	w0, [sp, #160]
   1ef30:	str	w0, [sp, #200]
   1ef34:	ldr	x0, [x21, #104]
   1ef38:	ldr	x1, [x0, #24]
   1ef3c:	ldr	x0, [sp, #144]
   1ef40:	ldr	w0, [x0, #4]
   1ef44:	add	x0, x0, #0x2
   1ef48:	ldr	x27, [x1, x0, lsl #3]
   1ef4c:	ldr	w0, [x27, #4]
   1ef50:	add	x2, x1, w0, uxtw #3
   1ef54:	ldr	x25, [x2, #16]
   1ef58:	add	w0, w0, #0x1
   1ef5c:	add	x0, x0, #0x2
   1ef60:	ldr	x0, [x1, x0, lsl #3]
   1ef64:	str	x0, [sp, #232]
   1ef68:	ldr	x0, [x25, #64]
   1ef6c:	ldr	x1, [sp, #128]
   1ef70:	sub	x0, x1, x0
   1ef74:	str	x0, [sp, #216]
   1ef78:	ldr	x0, [x25, #72]
   1ef7c:	str	x0, [sp, #192]
   1ef80:	str	xzr, [sp, #280]
   1ef84:	ldr	x0, [x28, #224]
   1ef88:	cbz	x0, 1eff0 <Perl_re_exec_indentf@@Base+0x12e20>
   1ef8c:	mov	w2, #0x1                   	// #1
   1ef90:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   1ef94:	add	x1, x1, #0x608
   1ef98:	mov	x0, x28
   1ef9c:	bl	54f0 <Perl_get_sv@plt>
   1efa0:	mov	x19, x0
   1efa4:	cbz	x0, 1eff0 <Perl_re_exec_indentf@@Base+0x12e20>
   1efa8:	ldr	w0, [x0, #12]
   1efac:	tbz	w0, #8, 1f1a8 <Perl_re_exec_indentf@@Base+0x12fd8>
   1efb0:	ldr	w0, [x19, #12]
   1efb4:	and	w1, w0, #0x3fff00
   1efb8:	and	w1, w1, #0xffe001ff
   1efbc:	cmp	w1, #0x100
   1efc0:	b.ne	1f214 <Perl_re_exec_indentf@@Base+0x13044>  // b.any
   1efc4:	and	w2, w0, #0xf
   1efc8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1efcc:	ldr	x1, [x1, #3712]
   1efd0:	ldrb	w1, [x1, w2, uxtw]
   1efd4:	cbz	w1, 1f1bc <Perl_re_exec_indentf@@Base+0x12fec>
   1efd8:	and	w1, w0, #0xc000
   1efdc:	cmp	w1, #0x8, lsl #12
   1efe0:	b.eq	1f1e0 <Perl_re_exec_indentf@@Base+0x13010>  // b.none
   1efe4:	ldr	x0, [x19]
   1efe8:	ldr	x0, [x0, #32]
   1efec:	str	x0, [sp, #280]
   1eff0:	mov	x0, x28
   1eff4:	bl	5880 <Perl_push_scope@plt>
   1eff8:	ldr	w0, [x28, #2368]
   1effc:	tbnz	w0, #2, 1f228 <Perl_re_exec_indentf@@Base+0x13058>
   1f000:	mov	x0, x28
   1f004:	bl	53b0 <Perl_savetmps@plt>
   1f008:	ldr	x0, [sp, #192]
   1f00c:	lsl	x20, x0, #3
   1f010:	mov	x1, x20
   1f014:	mov	x0, x28
   1f018:	bl	5020 <Perl_newSV@plt>
   1f01c:	mov	x19, x0
   1f020:	ldr	w0, [x0, #12]
   1f024:	and	w2, w0, #0xf
   1f028:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1f02c:	ldr	x1, [x1, #3888]
   1f030:	ldrb	w1, [x1, w2, uxtw]
   1f034:	cbz	w1, 1f258 <Perl_re_exec_indentf@@Base+0x13088>
   1f038:	and	w1, w0, #0xc000
   1f03c:	cmp	w1, #0x8, lsl #12
   1f040:	b.eq	1f27c <Perl_re_exec_indentf@@Base+0x130ac>  // b.none
   1f044:	and	w0, w0, #0xff
   1f048:	cmp	w0, #0xf
   1f04c:	b.eq	1f2b0 <Perl_re_exec_indentf@@Base+0x130e0>  // b.none
   1f050:	ldr	x0, [x19]
   1f054:	str	x20, [x0, #16]
   1f058:	ldr	w0, [x19, #12]
   1f05c:	tbz	w0, #11, 1f094 <Perl_re_exec_indentf@@Base+0x12ec4>
   1f060:	and	w2, w0, #0xf
   1f064:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1f068:	ldr	x1, [x1, #3840]
   1f06c:	ldrb	w1, [x1, w2, uxtw]
   1f070:	cbz	w1, 1f2e0 <Perl_re_exec_indentf@@Base+0x13110>
   1f074:	and	w1, w0, #0xc000
   1f078:	cmp	w1, #0x8, lsl #12
   1f07c:	b.eq	1f304 <Perl_re_exec_indentf@@Base+0x13134>  // b.none
   1f080:	and	w1, w0, #0xff
   1f084:	cmp	w1, #0xf
   1f088:	b.eq	1f338 <Perl_re_exec_indentf@@Base+0x13168>  // b.none
   1f08c:	ldr	x1, [x19, #16]
   1f090:	cbnz	x1, 1f368 <Perl_re_exec_indentf@@Base+0x13198>
   1f094:	and	w1, w0, #0xc000
   1f098:	cmp	w1, #0x8, lsl #12
   1f09c:	b.ne	1f0b0 <Perl_re_exec_indentf@@Base+0x12ee0>  // b.any
   1f0a0:	and	w1, w0, #0xff
   1f0a4:	sub	w1, w1, #0x9
   1f0a8:	cmp	w1, #0x1
   1f0ac:	b.ls	1f38c <Perl_re_exec_indentf@@Base+0x131bc>  // b.plast
   1f0b0:	mov	w1, #0x4400                	// #17408
   1f0b4:	orr	w0, w0, w1
   1f0b8:	str	w0, [x19, #12]
   1f0bc:	mov	x1, x19
   1f0c0:	mov	x0, x28
   1f0c4:	bl	55d0 <Perl_sv_2mortal@plt>
   1f0c8:	ldr	w0, [x19, #12]
   1f0cc:	and	w1, w0, #0x3ffc00
   1f0d0:	and	w1, w1, #0xffe007ff
   1f0d4:	cmp	w1, #0x400
   1f0d8:	b.ne	1f438 <Perl_re_exec_indentf@@Base+0x13268>  // b.any
   1f0dc:	and	w2, w0, #0xf
   1f0e0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1f0e4:	ldr	x1, [x1, #3888]
   1f0e8:	ldrb	w1, [x1, w2, uxtw]
   1f0ec:	cbz	w1, 1f3b0 <Perl_re_exec_indentf@@Base+0x131e0>
   1f0f0:	and	w1, w0, #0xc000
   1f0f4:	cmp	w1, #0x8, lsl #12
   1f0f8:	b.eq	1f3d4 <Perl_re_exec_indentf@@Base+0x13204>  // b.none
   1f0fc:	and	w0, w0, #0xff
   1f100:	cmp	w0, #0xf
   1f104:	b.eq	1f408 <Perl_re_exec_indentf@@Base+0x13238>  // b.none
   1f108:	ldr	x0, [x19, #16]
   1f10c:	str	x0, [sp, #184]
   1f110:	str	xzr, [sp, #224]
   1f114:	ldr	w0, [sp, #200]
   1f118:	cmp	w0, #0x2
   1f11c:	b.eq	1f12c <Perl_re_exec_indentf@@Base+0x12f5c>  // b.none
   1f120:	ldr	x0, [x25, #32]
   1f124:	str	x0, [sp, #224]
   1f128:	cbz	x0, 1f454 <Perl_re_exec_indentf@@Base+0x13284>
   1f12c:	ldr	x26, [sp, #264]
   1f130:	ldr	x0, [sp, #216]
   1f134:	cmp	x0, x26
   1f138:	b.cc	20354 <Perl_re_exec_indentf@@Base+0x14184>  // b.lo, b.ul, b.last
   1f13c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1f140:	ldr	x0, [x0, #4064]
   1f144:	str	x0, [sp, #248]
   1f148:	add	x0, sp, #0x120
   1f14c:	str	x0, [sp, #240]
   1f150:	mov	x0, x27
   1f154:	mov	x27, x26
   1f158:	mov	x26, x0
   1f15c:	b	2024c <Perl_re_exec_indentf@@Base+0x1407c>
   1f160:	ldr	w0, [sp, #160]
   1f164:	cmp	w0, #0x0
   1f168:	mov	w0, #0x6                   	// #6
   1f16c:	csel	w0, w0, wzr, ne  // ne = any
   1f170:	str	w0, [sp, #200]
   1f174:	b	1ef34 <Perl_re_exec_indentf@@Base+0x12d64>
   1f178:	ldr	w0, [sp, #160]
   1f17c:	cmp	w0, #0x0
   1f180:	cset	w0, eq  // eq = none
   1f184:	add	w0, w0, #0x4
   1f188:	str	w0, [sp, #200]
   1f18c:	b	1ef34 <Perl_re_exec_indentf@@Base+0x12d64>
   1f190:	ldr	w0, [sp, #160]
   1f194:	cmp	w0, #0x0
   1f198:	cset	w0, eq  // eq = none
   1f19c:	add	w0, w0, #0x7
   1f1a0:	str	w0, [sp, #200]
   1f1a4:	b	1ef34 <Perl_re_exec_indentf@@Base+0x12d64>
   1f1a8:	mov	x2, #0xff08                	// #65288
   1f1ac:	mov	x1, x19
   1f1b0:	mov	x0, x28
   1f1b4:	bl	5310 <Perl_sv_setuv@plt>
   1f1b8:	b	1efb0 <Perl_re_exec_indentf@@Base+0x12de0>
   1f1bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f1c0:	add	x3, x3, #0x330
   1f1c4:	add	x3, x3, #0xcf0
   1f1c8:	mov	w2, #0xb2e                 	// #2862
   1f1cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f1d0:	add	x1, x1, #0xcb0
   1f1d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1f1d8:	add	x0, x0, #0xda0
   1f1dc:	bl	58e0 <__assert_fail@plt>
   1f1e0:	and	w0, w0, #0xff
   1f1e4:	sub	w0, w0, #0x9
   1f1e8:	cmp	w0, #0x1
   1f1ec:	b.hi	1efe4 <Perl_re_exec_indentf@@Base+0x12e14>  // b.pmore
   1f1f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f1f4:	add	x3, x3, #0x330
   1f1f8:	add	x3, x3, #0xcf0
   1f1fc:	mov	w2, #0xb2e                 	// #2862
   1f200:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f204:	add	x1, x1, #0xcb0
   1f208:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1f20c:	add	x0, x0, #0xdd0
   1f210:	bl	58e0 <__assert_fail@plt>
   1f214:	mov	w2, #0x2                   	// #2
   1f218:	mov	x1, x19
   1f21c:	mov	x0, x28
   1f220:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   1f224:	b	1efec <Perl_re_exec_indentf@@Base+0x12e1c>
   1f228:	mov	w6, #0xb33                 	// #2867
   1f22c:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   1f230:	add	x5, x5, #0xcb0
   1f234:	ldrsw	x4, [x28, #48]
   1f238:	ldrsw	x3, [x28, #64]
   1f23c:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   1f240:	add	x2, x2, #0x6f8
   1f244:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   1f248:	add	x1, x1, #0x700
   1f24c:	mov	x0, x28
   1f250:	bl	4f70 <Perl_deb@plt>
   1f254:	b	1f000 <Perl_re_exec_indentf@@Base+0x12e30>
   1f258:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f25c:	add	x3, x3, #0x330
   1f260:	add	x3, x3, #0xcf0
   1f264:	mov	w2, #0xb36                 	// #2870
   1f268:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f26c:	add	x1, x1, #0xcb0
   1f270:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f274:	add	x0, x0, #0x728
   1f278:	bl	58e0 <__assert_fail@plt>
   1f27c:	and	w1, w0, #0xff
   1f280:	sub	w1, w1, #0x9
   1f284:	cmp	w1, #0x1
   1f288:	b.hi	1f044 <Perl_re_exec_indentf@@Base+0x12e74>  // b.pmore
   1f28c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f290:	add	x3, x3, #0x330
   1f294:	add	x3, x3, #0xcf0
   1f298:	mov	w2, #0xb36                 	// #2870
   1f29c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f2a0:	add	x1, x1, #0xcb0
   1f2a4:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f2a8:	add	x0, x0, #0x760
   1f2ac:	bl	58e0 <__assert_fail@plt>
   1f2b0:	ldr	x0, [x19]
   1f2b4:	ldrb	w0, [x0, #129]
   1f2b8:	tbnz	w0, #6, 1f050 <Perl_re_exec_indentf@@Base+0x12e80>
   1f2bc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f2c0:	add	x3, x3, #0x330
   1f2c4:	add	x3, x3, #0xcf0
   1f2c8:	mov	w2, #0xb36                 	// #2870
   1f2cc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f2d0:	add	x1, x1, #0xcb0
   1f2d4:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f2d8:	add	x0, x0, #0x780
   1f2dc:	bl	58e0 <__assert_fail@plt>
   1f2e0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f2e4:	add	x3, x3, #0x330
   1f2e8:	add	x3, x3, #0xcf0
   1f2ec:	mov	w2, #0xb38                 	// #2872
   1f2f0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f2f4:	add	x1, x1, #0xcb0
   1f2f8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1f2fc:	add	x0, x0, #0x160
   1f300:	bl	58e0 <__assert_fail@plt>
   1f304:	and	w1, w0, #0xff
   1f308:	sub	w1, w1, #0x9
   1f30c:	cmp	w1, #0x1
   1f310:	b.hi	1f080 <Perl_re_exec_indentf@@Base+0x12eb0>  // b.pmore
   1f314:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f318:	add	x3, x3, #0x330
   1f31c:	add	x3, x3, #0xcf0
   1f320:	mov	w2, #0xb38                 	// #2872
   1f324:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f328:	add	x1, x1, #0xcb0
   1f32c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1f330:	add	x0, x0, #0x190
   1f334:	bl	58e0 <__assert_fail@plt>
   1f338:	ldr	x1, [x19]
   1f33c:	ldrb	w1, [x1, #129]
   1f340:	tbnz	w1, #6, 1f08c <Perl_re_exec_indentf@@Base+0x12ebc>
   1f344:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f348:	add	x3, x3, #0x330
   1f34c:	add	x3, x3, #0xcf0
   1f350:	mov	w2, #0xb38                 	// #2872
   1f354:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f358:	add	x1, x1, #0xcb0
   1f35c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1f360:	add	x0, x0, #0x1a8
   1f364:	bl	58e0 <__assert_fail@plt>
   1f368:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f36c:	add	x3, x3, #0x330
   1f370:	add	x3, x3, #0xcf0
   1f374:	mov	w2, #0xb38                 	// #2872
   1f378:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f37c:	add	x1, x1, #0xcb0
   1f380:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f384:	add	x0, x0, #0x7d0
   1f388:	bl	58e0 <__assert_fail@plt>
   1f38c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f390:	add	x3, x3, #0x330
   1f394:	add	x3, x3, #0xcf0
   1f398:	mov	w2, #0xb38                 	// #2872
   1f39c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f3a0:	add	x1, x1, #0xcb0
   1f3a4:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f3a8:	add	x0, x0, #0xd10
   1f3ac:	bl	58e0 <__assert_fail@plt>
   1f3b0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f3b4:	add	x3, x3, #0x330
   1f3b8:	add	x3, x3, #0xcf0
   1f3bc:	mov	w2, #0xb3a                 	// #2874
   1f3c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f3c4:	add	x1, x1, #0xcb0
   1f3c8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1f3cc:	add	x0, x0, #0xd10
   1f3d0:	bl	58e0 <__assert_fail@plt>
   1f3d4:	and	w1, w0, #0xff
   1f3d8:	sub	w1, w1, #0x9
   1f3dc:	cmp	w1, #0x1
   1f3e0:	b.hi	1f0fc <Perl_re_exec_indentf@@Base+0x12f2c>  // b.pmore
   1f3e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f3e8:	add	x3, x3, #0x330
   1f3ec:	add	x3, x3, #0xcf0
   1f3f0:	mov	w2, #0xb3a                 	// #2874
   1f3f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f3f8:	add	x1, x1, #0xcb0
   1f3fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1f400:	add	x0, x0, #0xd40
   1f404:	bl	58e0 <__assert_fail@plt>
   1f408:	ldr	x0, [x19]
   1f40c:	ldrb	w0, [x0, #129]
   1f410:	tbnz	w0, #6, 1f108 <Perl_re_exec_indentf@@Base+0x12f38>
   1f414:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f418:	add	x3, x3, #0x330
   1f41c:	add	x3, x3, #0xcf0
   1f420:	mov	w2, #0xb3a                 	// #2874
   1f424:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f428:	add	x1, x1, #0xcb0
   1f42c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1f430:	add	x0, x0, #0xd58
   1f434:	bl	58e0 <__assert_fail@plt>
   1f438:	mov	w3, #0x2                   	// #2
   1f43c:	mov	x2, #0x0                   	// #0
   1f440:	mov	x1, x19
   1f444:	mov	x0, x28
   1f448:	bl	5200 <Perl_sv_2pv_flags@plt>
   1f44c:	str	x0, [sp, #184]
   1f450:	b	1f110 <Perl_re_exec_indentf@@Base+0x12f40>
   1f454:	ldr	x0, [sp, #144]
   1f458:	ldrb	w1, [x0, #1]
   1f45c:	add	x0, x0, #0x8
   1f460:	cmp	w1, #0x54
   1f464:	ldr	x1, [sp, #224]
   1f468:	csel	x0, x0, x1, eq  // eq = none
   1f46c:	str	x0, [sp, #224]
   1f470:	b	1f12c <Perl_re_exec_indentf@@Base+0x12f5c>
   1f474:	ldr	x0, [sp, #224]
   1f478:	cbz	x0, 1f540 <Perl_re_exec_indentf@@Base+0x13370>
   1f47c:	ldr	w0, [x28, #2368]
   1f480:	tbnz	w0, #20, 1f48c <Perl_re_exec_indentf@@Base+0x132bc>
   1f484:	ldr	x0, [sp, #280]
   1f488:	tbz	w0, #10, 1f4f4 <Perl_re_exec_indentf@@Base+0x13324>
   1f48c:	ldr	x0, [sp, #216]
   1f490:	cmp	x0, x27
   1f494:	b.cc	2062c <Perl_re_exec_indentf@@Base+0x1445c>  // b.lo, b.ul, b.last
   1f498:	ldrb	w0, [x27]
   1f49c:	ubfx	x1, x0, #3, #5
   1f4a0:	ldr	x2, [sp, #224]
   1f4a4:	ldrb	w1, [x2, x1]
   1f4a8:	and	w0, w0, #0x7
   1f4ac:	lsr	w0, w1, w0
   1f4b0:	tbz	w0, #0, 1f4c0 <Perl_re_exec_indentf@@Base+0x132f0>
   1f4b4:	ldr	w0, [sp, #160]
   1f4b8:	cbnz	w0, 1f508 <Perl_re_exec_indentf@@Base+0x13338>
   1f4bc:	b	20634 <Perl_re_exec_indentf@@Base+0x14464>
   1f4c0:	mov	w7, #0x0                   	// #0
   1f4c4:	ldrb	w6, [sp, #160]
   1f4c8:	mov	x5, x27
   1f4cc:	ldr	x4, [sp, #152]
   1f4d0:	ldr	x3, [sp, #128]
   1f4d4:	ldr	x2, [sp, #144]
   1f4d8:	mov	x1, x27
   1f4dc:	mov	x0, x28
   1f4e0:	bl	624c <Perl__inverse_folds@plt+0x84c>
   1f4e4:	ldr	x1, [sp, #256]
   1f4e8:	mov	x0, x28
   1f4ec:	bl	50e0 <Perl_re_printf@plt>
   1f4f0:	b	1f4b4 <Perl_re_exec_indentf@@Base+0x132e4>
   1f4f4:	ldr	w0, [sp, #160]
   1f4f8:	cbz	w0, 20634 <Perl_re_exec_indentf@@Base+0x14464>
   1f4fc:	ldr	x0, [sp, #216]
   1f500:	cmp	x0, x27
   1f504:	b.cc	1f53c <Perl_re_exec_indentf@@Base+0x1336c>  // b.lo, b.ul, b.last
   1f508:	ldr	x3, [sp, #224]
   1f50c:	ldr	x4, [sp, #216]
   1f510:	ldr	x5, [sp, #248]
   1f514:	ldrb	w1, [x27]
   1f518:	ubfx	x0, x1, #3, #5
   1f51c:	ldrb	w0, [x3, x0]
   1f520:	and	w2, w1, #0x7
   1f524:	lsr	w0, w0, w2
   1f528:	tbnz	w0, #0, 1f53c <Perl_re_exec_indentf@@Base+0x1336c>
   1f52c:	ldrb	w0, [x5, w1, sxtw]
   1f530:	add	x27, x27, x0
   1f534:	cmp	x4, x27
   1f538:	b.cs	1f514 <Perl_re_exec_indentf@@Base+0x13344>  // b.hs, b.nlast
   1f53c:	str	x27, [sp, #264]
   1f540:	ldr	x0, [sp, #216]
   1f544:	cmp	x27, x0
   1f548:	b.ls	20018 <Perl_re_exec_indentf@@Base+0x13e48>  // b.plast
   1f54c:	str	w21, [sp, #164]
   1f550:	b	20140 <Perl_re_exec_indentf@@Base+0x13f70>
   1f554:	cmp	w0, #0x2
   1f558:	b.eq	1f9d0 <Perl_re_exec_indentf@@Base+0x13800>  // b.none
   1f55c:	b.ls	1f618 <Perl_re_exec_indentf@@Base+0x13448>  // b.plast
   1f560:	mov	w3, #0x2                   	// #2
   1f564:	ldr	w0, [sp, #200]
   1f568:	cmp	w0, #0x3
   1f56c:	b.ne	1f69c <Perl_re_exec_indentf@@Base+0x134cc>  // b.any
   1f570:	ldr	x1, [sp, #304]
   1f574:	cbz	x1, 1fc54 <Perl_re_exec_indentf@@Base+0x13a84>
   1f578:	ldr	x0, [sp, #208]
   1f57c:	add	x8, x0, x1
   1f580:	cbz	x0, 1fc00 <Perl_re_exec_indentf@@Base+0x13a30>
   1f584:	ldr	x0, [sp, #208]
   1f588:	cmp	x8, x0
   1f58c:	b.ls	1fc34 <Perl_re_exec_indentf@@Base+0x13a64>  // b.plast
   1f590:	ldr	x6, [sp, #208]
   1f594:	mov	x4, #0x0                   	// #0
   1f598:	mov	x0, #0x0                   	// #0
   1f59c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1f5a0:	ldr	x10, [x2, #3824]
   1f5a4:	mov	w9, #0xff                  	// #255
   1f5a8:	mov	x7, x10
   1f5ac:	ldrb	w5, [x6]
   1f5b0:	ldrb	w2, [x10, w5, sxtw]
   1f5b4:	and	x3, x2, #0xff
   1f5b8:	asr	w2, w9, w2
   1f5bc:	and	w2, w2, w5
   1f5c0:	sxtw	x2, w2
   1f5c4:	bfi	x5, x4, #6, #58
   1f5c8:	cmp	x0, #0x0
   1f5cc:	csel	x4, x5, x2, ne  // ne = any
   1f5d0:	add	x2, x7, x3
   1f5d4:	add	x0, x2, x0
   1f5d8:	ldrb	w0, [x0, #256]
   1f5dc:	cbnz	x0, 1fc24 <Perl_re_exec_indentf@@Base+0x13a54>
   1f5e0:	ldr	x0, [sp, #208]
   1f5e4:	sub	x0, x6, x0
   1f5e8:	add	x0, x0, #0x1
   1f5ec:	str	x0, [sp, #296]
   1f5f0:	str	x4, [sp, #288]
   1f5f4:	ldr	x1, [sp, #296]
   1f5f8:	ldr	x0, [sp, #304]
   1f5fc:	sub	x0, x0, x1
   1f600:	str	x0, [sp, #304]
   1f604:	ldr	x0, [sp, #208]
   1f608:	add	x0, x0, x1
   1f60c:	str	x0, [sp, #208]
   1f610:	str	xzr, [sp, #296]
   1f614:	b	1f69c <Perl_re_exec_indentf@@Base+0x134cc>
   1f618:	cbz	w0, 1fdc4 <Perl_re_exec_indentf@@Base+0x13bf4>
   1f61c:	cmp	w0, #0x1
   1f620:	b.ne	1f69c <Perl_re_exec_indentf@@Base+0x134cc>  // b.any
   1f624:	ldr	x0, [sp, #128]
   1f628:	sub	x1, x0, x27
   1f62c:	cbz	x27, 1fd6c <Perl_re_exec_indentf@@Base+0x13b9c>
   1f630:	ldr	x0, [sp, #128]
   1f634:	cmp	x27, x0
   1f638:	b.cs	1fda4 <Perl_re_exec_indentf@@Base+0x13bd4>  // b.hs, b.nlast
   1f63c:	mov	x6, x27
   1f640:	mov	x4, #0x0                   	// #0
   1f644:	mov	x0, #0x0                   	// #0
   1f648:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1f64c:	ldr	x9, [x2, #3824]
   1f650:	mov	w8, #0xff                  	// #255
   1f654:	mov	x7, x9
   1f658:	ldrb	w5, [x6]
   1f65c:	ldrb	w2, [x9, w5, sxtw]
   1f660:	and	x3, x2, #0xff
   1f664:	asr	w2, w8, w2
   1f668:	and	w2, w2, w5
   1f66c:	sxtw	x2, w2
   1f670:	bfi	x5, x4, #6, #58
   1f674:	cmp	x0, #0x0
   1f678:	csel	x4, x5, x2, ne  // ne = any
   1f67c:	add	x2, x7, x3
   1f680:	add	x0, x2, x0
   1f684:	ldrb	w0, [x0, #256]
   1f688:	cbnz	x0, 1fd90 <Perl_re_exec_indentf@@Base+0x13bc0>
   1f68c:	sub	x0, x6, x27
   1f690:	add	x0, x0, #0x1
   1f694:	str	x0, [sp, #296]
   1f698:	str	x4, [sp, #288]
   1f69c:	ldr	x0, [sp, #288]
   1f6a0:	cmp	x0, #0xff
   1f6a4:	b.ls	1fdd4 <Perl_re_exec_indentf@@Base+0x13c04>  // b.plast
   1f6a8:	ldr	x0, [sp, #232]
   1f6ac:	cbz	x0, 1fe98 <Perl_re_exec_indentf@@Base+0x13cc8>
   1f6b0:	mov	w6, #0x0                   	// #0
   1f6b4:	mov	x5, #0x0                   	// #0
   1f6b8:	mov	w4, #0x20                  	// #32
   1f6bc:	mov	w3, #0x8                   	// #8
   1f6c0:	ldr	x2, [sp, #240]
   1f6c4:	mov	x1, x0
   1f6c8:	mov	x0, x28
   1f6cc:	bl	57a0 <Perl_hv_common_key_len@plt>
   1f6d0:	cbz	x0, 1fea0 <Perl_re_exec_indentf@@Base+0x13cd0>
   1f6d4:	ldr	x1, [x0]
   1f6d8:	ldr	w2, [x1, #12]
   1f6dc:	and	w0, w2, #0x3fff00
   1f6e0:	and	w0, w0, #0xffe001ff
   1f6e4:	cmp	w0, #0x100
   1f6e8:	b.ne	1fe84 <Perl_re_exec_indentf@@Base+0x13cb4>  // b.any
   1f6ec:	and	w3, w2, #0xf
   1f6f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1f6f4:	ldr	x0, [x0, #3712]
   1f6f8:	ldrb	w0, [x0, w3, uxtw]
   1f6fc:	cbz	w0, 1fe2c <Perl_re_exec_indentf@@Base+0x13c5c>
   1f700:	and	w0, w2, #0xc000
   1f704:	cmp	w0, #0x8, lsl #12
   1f708:	b.eq	1fe50 <Perl_re_exec_indentf@@Base+0x13c80>  // b.none
   1f70c:	ldr	x0, [x1]
   1f710:	ldrh	w23, [x0, #32]
   1f714:	b	1fddc <Perl_re_exec_indentf@@Base+0x13c0c>
   1f718:	cmp	w0, #0x5
   1f71c:	b.eq	1fbf8 <Perl_re_exec_indentf@@Base+0x13a28>  // b.none
   1f720:	cmp	w0, #0x6
   1f724:	b.ne	1f69c <Perl_re_exec_indentf@@Base+0x134cc>  // b.any
   1f728:	ldr	x0, [x28, #1440]
   1f72c:	cbnz	x0, 1fcf8 <Perl_re_exec_indentf@@Base+0x13b28>
   1f730:	ldr	w0, [sp, #160]
   1f734:	cbz	w0, 1f624 <Perl_re_exec_indentf@@Base+0x13454>
   1f738:	ldrb	w0, [x27]
   1f73c:	cmp	w0, #0xc3
   1f740:	b.ls	1f820 <Perl_re_exec_indentf@@Base+0x13650>  // b.plast
   1f744:	ldrb	w0, [x28, #1180]
   1f748:	cbnz	w0, 1f820 <Perl_re_exec_indentf@@Base+0x13650>
   1f74c:	mov	w1, #0x3f                  	// #63
   1f750:	mov	x0, x28
   1f754:	bl	5870 <Perl_ckwarn@plt>
   1f758:	and	w0, w0, #0xff
   1f75c:	cbz	w0, 1f820 <Perl_re_exec_indentf@@Base+0x13650>
   1f760:	ldr	x0, [sp, #128]
   1f764:	cmp	x27, x0
   1f768:	b.cs	1fd00 <Perl_re_exec_indentf@@Base+0x13b30>  // b.hs, b.nlast
   1f76c:	mov	w1, #0x2c                  	// #44
   1f770:	mov	x0, x28
   1f774:	bl	52a0 <Perl_ckwarn_d@plt>
   1f778:	ands	w0, w0, #0xff
   1f77c:	mov	w3, #0x9e                  	// #158
   1f780:	csel	w3, w3, wzr, eq  // eq = none
   1f784:	mov	x6, x27
   1f788:	mov	x20, #0x0                   	// #0
   1f78c:	mov	x0, #0x0                   	// #0
   1f790:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1f794:	ldr	x8, [x1, #3824]
   1f798:	mov	w7, #0xff                  	// #255
   1f79c:	mov	x5, x8
   1f7a0:	ldrb	w4, [x6]
   1f7a4:	ldrb	w1, [x8, w4, sxtw]
   1f7a8:	and	x2, x1, #0xff
   1f7ac:	asr	w1, w7, w1
   1f7b0:	and	w1, w1, w4
   1f7b4:	sxtw	x1, w1
   1f7b8:	bfi	x4, x20, #6, #58
   1f7bc:	cmp	x0, #0x0
   1f7c0:	csel	x20, x4, x1, ne  // ne = any
   1f7c4:	add	x1, x5, x2
   1f7c8:	add	x0, x1, x0
   1f7cc:	ldrb	w0, [x0, #256]
   1f7d0:	cbnz	x0, 1fd24 <Perl_re_exec_indentf@@Base+0x13b54>
   1f7d4:	cmp	x20, #0x0
   1f7d8:	mov	x0, #0xfffd                	// #65533
   1f7dc:	csel	x20, x20, x0, ne  // ne = any
   1f7e0:	ldr	x1, [x28, #8]
   1f7e4:	ldrh	w0, [x1, #32]
   1f7e8:	and	w0, w0, #0x1ff
   1f7ec:	cmp	w0, #0x17f
   1f7f0:	b.eq	1fd58 <Perl_re_exec_indentf@@Base+0x13b88>  // b.none
   1f7f4:	ldrh	w1, [x1, #32]
   1f7f8:	and	x1, x1, #0x1ff
   1f7fc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1f800:	ldr	x0, [x0, #4008]
   1f804:	ldr	x4, [x0, x1, lsl #3]
   1f808:	mov	x3, x20
   1f80c:	adrp	x2, 62000 <boot_re@@Base+0x41c>
   1f810:	add	x2, x2, #0x510
   1f814:	mov	w1, #0x3f                  	// #63
   1f818:	mov	x0, x28
   1f81c:	bl	5110 <Perl_warner@plt>
   1f820:	ldr	x0, [sp, #128]
   1f824:	sub	x1, x0, x27
   1f828:	b	1f630 <Perl_re_exec_indentf@@Base+0x13460>
   1f82c:	ldr	x0, [x28, #1440]
   1f830:	cbnz	x0, 1f954 <Perl_re_exec_indentf@@Base+0x13784>
   1f834:	ldrb	w0, [x27]
   1f838:	cmp	w0, #0xc3
   1f83c:	b.ls	1fa7c <Perl_re_exec_indentf@@Base+0x138ac>  // b.plast
   1f840:	ldrb	w0, [x28, #1180]
   1f844:	cbnz	w0, 1fa84 <Perl_re_exec_indentf@@Base+0x138b4>
   1f848:	mov	w1, #0x3f                  	// #63
   1f84c:	mov	x0, x28
   1f850:	bl	5870 <Perl_ckwarn@plt>
   1f854:	and	w0, w0, #0xff
   1f858:	cbz	w0, 1fa8c <Perl_re_exec_indentf@@Base+0x138bc>
   1f85c:	ldr	x0, [sp, #128]
   1f860:	cmp	x27, x0
   1f864:	b.cs	1f95c <Perl_re_exec_indentf@@Base+0x1378c>  // b.hs, b.nlast
   1f868:	mov	w1, #0x2c                  	// #44
   1f86c:	mov	x0, x28
   1f870:	bl	52a0 <Perl_ckwarn_d@plt>
   1f874:	ands	w0, w0, #0xff
   1f878:	mov	w3, #0x9e                  	// #158
   1f87c:	csel	w3, w3, wzr, eq  // eq = none
   1f880:	mov	x6, x27
   1f884:	mov	x20, #0x0                   	// #0
   1f888:	mov	x0, #0x0                   	// #0
   1f88c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1f890:	ldr	x8, [x1, #3824]
   1f894:	mov	w7, #0xff                  	// #255
   1f898:	mov	x5, x8
   1f89c:	ldrb	w4, [x6]
   1f8a0:	ldrb	w1, [x8, w4, sxtw]
   1f8a4:	and	x2, x1, #0xff
   1f8a8:	asr	w1, w7, w1
   1f8ac:	and	w1, w1, w4
   1f8b0:	sxtw	x1, w1
   1f8b4:	bfi	x4, x20, #6, #58
   1f8b8:	cmp	x0, #0x0
   1f8bc:	csel	x20, x4, x1, ne  // ne = any
   1f8c0:	add	x1, x5, x2
   1f8c4:	add	x0, x1, x0
   1f8c8:	ldrb	w0, [x0, #256]
   1f8cc:	cbnz	x0, 1f980 <Perl_re_exec_indentf@@Base+0x137b0>
   1f8d0:	cmp	x20, #0x0
   1f8d4:	mov	x0, #0xfffd                	// #65533
   1f8d8:	csel	x20, x20, x0, ne  // ne = any
   1f8dc:	ldr	x1, [x28, #8]
   1f8e0:	ldrh	w0, [x1, #32]
   1f8e4:	and	w0, w0, #0x1ff
   1f8e8:	cmp	w0, #0x17f
   1f8ec:	b.eq	1f9b4 <Perl_re_exec_indentf@@Base+0x137e4>  // b.none
   1f8f0:	ldrh	w1, [x1, #32]
   1f8f4:	and	x1, x1, #0x1ff
   1f8f8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   1f8fc:	ldr	x0, [x0, #4008]
   1f900:	ldr	x4, [x0, x1, lsl #3]
   1f904:	mov	x3, x20
   1f908:	adrp	x2, 62000 <boot_re@@Base+0x41c>
   1f90c:	add	x2, x2, #0x510
   1f910:	mov	w1, #0x3f                  	// #63
   1f914:	mov	x0, x28
   1f918:	bl	5110 <Perl_warner@plt>
   1f91c:	ldr	x1, [sp, #304]
   1f920:	cbnz	x1, 1f9dc <Perl_re_exec_indentf@@Base+0x1380c>
   1f924:	mov	w7, #0x0                   	// #0
   1f928:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   1f92c:	add	x6, x6, #0x20
   1f930:	mov	w5, #0x2                   	// #2
   1f934:	add	x4, sp, #0x130
   1f938:	add	x3, sp, #0x138
   1f93c:	ldr	x2, [sp, #128]
   1f940:	mov	x1, x27
   1f944:	mov	x0, x28
   1f948:	bl	5330 <Perl__to_utf8_fold_flags@plt>
   1f94c:	str	x0, [sp, #288]
   1f950:	b	1fb1c <Perl_re_exec_indentf@@Base+0x1394c>
   1f954:	bl	5050 <Perl__warn_problematic_locale@plt>
   1f958:	b	1f834 <Perl_re_exec_indentf@@Base+0x13664>
   1f95c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1f960:	add	x3, x3, #0x330
   1f964:	add	x3, x3, #0xcf0
   1f968:	mov	w2, #0xb89                 	// #2953
   1f96c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1f970:	add	x1, x1, #0xcb0
   1f974:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1f978:	add	x0, x0, #0xdf0
   1f97c:	bl	58e0 <__assert_fail@plt>
   1f980:	add	x6, x6, #0x1
   1f984:	ldr	x1, [sp, #128]
   1f988:	cmp	x1, x6
   1f98c:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   1f990:	b.ne	1f89c <Perl_re_exec_indentf@@Base+0x136cc>  // b.any
   1f994:	mov	x5, #0x0                   	// #0
   1f998:	mov	x4, #0x0                   	// #0
   1f99c:	mov	x2, #0x0                   	// #0
   1f9a0:	sub	x1, x1, x27
   1f9a4:	mov	x0, x27
   1f9a8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1f9ac:	mov	x20, x0
   1f9b0:	b	1f8d0 <Perl_re_exec_indentf@@Base+0x13700>
   1f9b4:	mov	w2, #0x2                   	// #2
   1f9b8:	mov	x0, x28
   1f9bc:	bl	5080 <Perl_custom_op_get_field@plt>
   1f9c0:	mov	x4, x0
   1f9c4:	b	1f904 <Perl_re_exec_indentf@@Base+0x13734>
   1f9c8:	mov	w5, #0x6                   	// #6
   1f9cc:	b	1f9d4 <Perl_re_exec_indentf@@Base+0x13804>
   1f9d0:	mov	w5, #0x2                   	// #2
   1f9d4:	ldr	x1, [sp, #304]
   1f9d8:	cbz	x1, 1fae8 <Perl_re_exec_indentf@@Base+0x13918>
   1f9dc:	ldr	x0, [sp, #208]
   1f9e0:	add	x8, x0, x1
   1f9e4:	cbz	x0, 1fa94 <Perl_re_exec_indentf@@Base+0x138c4>
   1f9e8:	ldr	x0, [sp, #208]
   1f9ec:	cmp	x8, x0
   1f9f0:	b.ls	1fac8 <Perl_re_exec_indentf@@Base+0x138f8>  // b.plast
   1f9f4:	ldr	x6, [sp, #208]
   1f9f8:	mov	x4, #0x0                   	// #0
   1f9fc:	mov	x0, #0x0                   	// #0
   1fa00:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   1fa04:	ldr	x10, [x2, #3824]
   1fa08:	mov	w9, #0xff                  	// #255
   1fa0c:	mov	x7, x10
   1fa10:	ldrb	w5, [x6]
   1fa14:	ldrb	w2, [x10, w5, sxtw]
   1fa18:	and	x3, x2, #0xff
   1fa1c:	asr	w2, w9, w2
   1fa20:	and	w2, w2, w5
   1fa24:	sxtw	x2, w2
   1fa28:	bfi	x5, x4, #6, #58
   1fa2c:	cmp	x0, #0x0
   1fa30:	csel	x4, x5, x2, ne  // ne = any
   1fa34:	add	x2, x7, x3
   1fa38:	add	x0, x2, x0
   1fa3c:	ldrb	w0, [x0, #256]
   1fa40:	cbnz	x0, 1fab8 <Perl_re_exec_indentf@@Base+0x138e8>
   1fa44:	ldr	x0, [sp, #208]
   1fa48:	sub	x0, x6, x0
   1fa4c:	add	x0, x0, #0x1
   1fa50:	str	x0, [sp, #296]
   1fa54:	str	x4, [sp, #288]
   1fa58:	ldr	x1, [sp, #296]
   1fa5c:	ldr	x0, [sp, #304]
   1fa60:	sub	x0, x0, x1
   1fa64:	str	x0, [sp, #304]
   1fa68:	ldr	x0, [sp, #208]
   1fa6c:	add	x0, x0, x1
   1fa70:	str	x0, [sp, #208]
   1fa74:	str	xzr, [sp, #296]
   1fa78:	b	1f69c <Perl_re_exec_indentf@@Base+0x134cc>
   1fa7c:	mov	w5, #0x2                   	// #2
   1fa80:	b	1f9d4 <Perl_re_exec_indentf@@Base+0x13804>
   1fa84:	mov	w5, #0x2                   	// #2
   1fa88:	b	1f9d4 <Perl_re_exec_indentf@@Base+0x13804>
   1fa8c:	mov	w5, #0x2                   	// #2
   1fa90:	b	1f9d4 <Perl_re_exec_indentf@@Base+0x13804>
   1fa94:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fa98:	add	x3, x3, #0x330
   1fa9c:	add	x3, x3, #0xc48
   1faa0:	mov	w2, #0x710                 	// #1808
   1faa4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1faa8:	add	x1, x1, #0xc80
   1faac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1fab0:	add	x0, x0, #0xce8
   1fab4:	bl	58e0 <__assert_fail@plt>
   1fab8:	add	x6, x6, #0x1
   1fabc:	cmp	x8, x6
   1fac0:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   1fac4:	b.ne	1fa10 <Perl_re_exec_indentf@@Base+0x13840>  // b.any
   1fac8:	mov	x5, #0x0                   	// #0
   1facc:	mov	x4, #0x0                   	// #0
   1fad0:	mov	w3, #0x0                   	// #0
   1fad4:	add	x2, sp, #0x128
   1fad8:	ldr	x0, [sp, #208]
   1fadc:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1fae0:	mov	x4, x0
   1fae4:	b	1fa54 <Perl_re_exec_indentf@@Base+0x13884>
   1fae8:	mov	w7, #0x0                   	// #0
   1faec:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   1faf0:	add	x6, x6, #0x20
   1faf4:	add	x4, sp, #0x130
   1faf8:	add	x3, sp, #0x138
   1fafc:	ldr	x20, [sp, #128]
   1fb00:	mov	x2, x20
   1fb04:	mov	x1, x27
   1fb08:	mov	x0, x28
   1fb0c:	bl	5330 <Perl__to_utf8_fold_flags@plt>
   1fb10:	str	x0, [sp, #288]
   1fb14:	cmp	x27, x20
   1fb18:	b.hi	1fbd4 <Perl_re_exec_indentf@@Base+0x13a04>  // b.pmore
   1fb1c:	ldr	x1, [sp, #128]
   1fb20:	sub	x2, x1, x27
   1fb24:	mov	x1, #0x0                   	// #0
   1fb28:	cmp	x2, #0x0
   1fb2c:	b.le	1fb48 <Perl_re_exec_indentf@@Base+0x13978>
   1fb30:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   1fb34:	ldr	x1, [x1, #4064]
   1fb38:	ldrb	w3, [x27]
   1fb3c:	ldrb	w1, [x1, w3, sxtw]
   1fb40:	cmp	x1, x2
   1fb44:	csel	x1, x1, x2, le
   1fb48:	str	x1, [sp, #296]
   1fb4c:	mov	x1, #0x1                   	// #1
   1fb50:	cmp	x0, #0x7f
   1fb54:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fb58:	mov	x1, #0x2                   	// #2
   1fb5c:	cmp	x0, #0x7ff
   1fb60:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fb64:	mov	x1, #0x3                   	// #3
   1fb68:	mov	x2, #0xffff                	// #65535
   1fb6c:	cmp	x0, x2
   1fb70:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fb74:	mov	x1, #0x4                   	// #4
   1fb78:	mov	x2, #0x1fffff              	// #2097151
   1fb7c:	cmp	x0, x2
   1fb80:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fb84:	mov	x1, #0x5                   	// #5
   1fb88:	mov	x2, #0x3ffffff             	// #67108863
   1fb8c:	cmp	x0, x2
   1fb90:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fb94:	mov	x1, #0x6                   	// #6
   1fb98:	mov	x2, #0x7fffffff            	// #2147483647
   1fb9c:	cmp	x0, x2
   1fba0:	b.ls	1fbb8 <Perl_re_exec_indentf@@Base+0x139e8>  // b.plast
   1fba4:	mov	x1, #0xfffffffff           	// #68719476735
   1fba8:	cmp	x0, x1
   1fbac:	mov	x1, #0x7                   	// #7
   1fbb0:	mov	x0, #0xd                   	// #13
   1fbb4:	csel	x1, x1, x0, ls  // ls = plast
   1fbb8:	ldr	x0, [sp, #304]
   1fbbc:	sub	x0, x0, x1
   1fbc0:	str	x0, [sp, #304]
   1fbc4:	add	x0, sp, #0x138
   1fbc8:	add	x0, x0, x1
   1fbcc:	str	x0, [sp, #208]
   1fbd0:	b	1f69c <Perl_re_exec_indentf@@Base+0x134cc>
   1fbd4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fbd8:	add	x3, x3, #0x330
   1fbdc:	add	x3, x3, #0xcf0
   1fbe0:	mov	w2, #0xb89                 	// #2953
   1fbe4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fbe8:	add	x1, x1, #0xcb0
   1fbec:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1fbf0:	add	x0, x0, #0xe28
   1fbf4:	bl	58e0 <__assert_fail@plt>
   1fbf8:	mov	w3, #0x6                   	// #6
   1fbfc:	b	1f570 <Perl_re_exec_indentf@@Base+0x133a0>
   1fc00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fc04:	add	x3, x3, #0x330
   1fc08:	add	x3, x3, #0xc48
   1fc0c:	mov	w2, #0x710                 	// #1808
   1fc10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fc14:	add	x1, x1, #0xc80
   1fc18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1fc1c:	add	x0, x0, #0xce8
   1fc20:	bl	58e0 <__assert_fail@plt>
   1fc24:	add	x6, x6, #0x1
   1fc28:	cmp	x0, #0x1
   1fc2c:	ccmp	x8, x6, #0x0, ne  // ne = any
   1fc30:	b.hi	1f5ac <Perl_re_exec_indentf@@Base+0x133dc>  // b.pmore
   1fc34:	mov	x5, #0x0                   	// #0
   1fc38:	mov	x4, #0x0                   	// #0
   1fc3c:	mov	w3, #0x0                   	// #0
   1fc40:	add	x2, sp, #0x128
   1fc44:	ldr	x0, [sp, #208]
   1fc48:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1fc4c:	mov	x4, x0
   1fc50:	b	1f5f0 <Perl_re_exec_indentf@@Base+0x13420>
   1fc54:	mov	x0, #0x1                   	// #1
   1fc58:	str	x0, [sp, #296]
   1fc5c:	add	x2, sp, #0x130
   1fc60:	add	x1, sp, #0x138
   1fc64:	ldrb	w0, [x27]
   1fc68:	bl	5910 <Perl__to_fold_latin1@plt>
   1fc6c:	str	x0, [sp, #288]
   1fc70:	mov	x1, #0x1                   	// #1
   1fc74:	cmp	x0, #0x7f
   1fc78:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fc7c:	mov	x1, #0x2                   	// #2
   1fc80:	cmp	x0, #0x7ff
   1fc84:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fc88:	mov	x1, #0x3                   	// #3
   1fc8c:	mov	x2, #0xffff                	// #65535
   1fc90:	cmp	x0, x2
   1fc94:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fc98:	mov	x1, #0x4                   	// #4
   1fc9c:	mov	x2, #0x1fffff              	// #2097151
   1fca0:	cmp	x0, x2
   1fca4:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fca8:	mov	x1, #0x5                   	// #5
   1fcac:	mov	x2, #0x3ffffff             	// #67108863
   1fcb0:	cmp	x0, x2
   1fcb4:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fcb8:	mov	x1, #0x6                   	// #6
   1fcbc:	mov	x2, #0x7fffffff            	// #2147483647
   1fcc0:	cmp	x0, x2
   1fcc4:	b.ls	1fcdc <Perl_re_exec_indentf@@Base+0x13b0c>  // b.plast
   1fcc8:	mov	x1, #0xfffffffff           	// #68719476735
   1fccc:	cmp	x0, x1
   1fcd0:	mov	x1, #0x7                   	// #7
   1fcd4:	mov	x0, #0xd                   	// #13
   1fcd8:	csel	x1, x1, x0, ls  // ls = plast
   1fcdc:	ldr	x0, [sp, #304]
   1fce0:	sub	x0, x0, x1
   1fce4:	str	x0, [sp, #304]
   1fce8:	add	x0, sp, #0x138
   1fcec:	add	x0, x0, x1
   1fcf0:	str	x0, [sp, #208]
   1fcf4:	b	1f69c <Perl_re_exec_indentf@@Base+0x134cc>
   1fcf8:	bl	5050 <Perl__warn_problematic_locale@plt>
   1fcfc:	b	1f730 <Perl_re_exec_indentf@@Base+0x13560>
   1fd00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fd04:	add	x3, x3, #0x330
   1fd08:	add	x3, x3, #0xcf0
   1fd0c:	mov	w2, #0xb89                 	// #2953
   1fd10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fd14:	add	x1, x1, #0xcb0
   1fd18:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1fd1c:	add	x0, x0, #0xdf0
   1fd20:	bl	58e0 <__assert_fail@plt>
   1fd24:	add	x6, x6, #0x1
   1fd28:	cmp	x0, #0x1
   1fd2c:	ldr	x1, [sp, #128]
   1fd30:	ccmp	x1, x6, #0x0, ne  // ne = any
   1fd34:	b.hi	1f7a0 <Perl_re_exec_indentf@@Base+0x135d0>  // b.pmore
   1fd38:	mov	x5, #0x0                   	// #0
   1fd3c:	mov	x4, #0x0                   	// #0
   1fd40:	mov	x2, #0x0                   	// #0
   1fd44:	sub	x1, x1, x27
   1fd48:	mov	x0, x27
   1fd4c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1fd50:	mov	x20, x0
   1fd54:	b	1f7d4 <Perl_re_exec_indentf@@Base+0x13604>
   1fd58:	mov	w2, #0x2                   	// #2
   1fd5c:	mov	x0, x28
   1fd60:	bl	5080 <Perl_custom_op_get_field@plt>
   1fd64:	mov	x4, x0
   1fd68:	b	1f808 <Perl_re_exec_indentf@@Base+0x13638>
   1fd6c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fd70:	add	x3, x3, #0x330
   1fd74:	add	x3, x3, #0xc48
   1fd78:	mov	w2, #0x710                 	// #1808
   1fd7c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fd80:	add	x1, x1, #0xc80
   1fd84:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1fd88:	add	x0, x0, #0xce8
   1fd8c:	bl	58e0 <__assert_fail@plt>
   1fd90:	add	x6, x6, #0x1
   1fd94:	ldr	x2, [sp, #128]
   1fd98:	cmp	x2, x6
   1fd9c:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   1fda0:	b.ne	1f658 <Perl_re_exec_indentf@@Base+0x13488>  // b.any
   1fda4:	mov	x5, #0x0                   	// #0
   1fda8:	mov	x4, #0x0                   	// #0
   1fdac:	mov	w3, #0x0                   	// #0
   1fdb0:	add	x2, sp, #0x128
   1fdb4:	mov	x0, x27
   1fdb8:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   1fdbc:	mov	x4, x0
   1fdc0:	b	1f698 <Perl_re_exec_indentf@@Base+0x134c8>
   1fdc4:	ldrb	w0, [x27]
   1fdc8:	str	x0, [sp, #288]
   1fdcc:	mov	x1, #0x1                   	// #1
   1fdd0:	str	x1, [sp, #296]
   1fdd4:	ldr	x1, [x25, #8]
   1fdd8:	ldrh	w23, [x1, x0, lsl #1]
   1fddc:	ldr	w0, [x28, #2368]
   1fde0:	tbnz	w0, #20, 1fdec <Perl_re_exec_indentf@@Base+0x13c1c>
   1fde4:	ldr	x0, [sp, #280]
   1fde8:	tbz	w0, #10, 1feb0 <Perl_re_exec_indentf@@Base+0x13ce0>
   1fdec:	mov	w7, #0x0                   	// #0
   1fdf0:	ldrb	w6, [sp, #160]
   1fdf4:	ldr	x5, [sp, #264]
   1fdf8:	ldr	x4, [sp, #152]
   1fdfc:	ldr	x3, [sp, #128]
   1fe00:	ldr	x2, [sp, #144]
   1fe04:	mov	x1, x27
   1fe08:	mov	x0, x28
   1fe0c:	bl	624c <Perl__inverse_folds@plt+0x84c>
   1fe10:	ldr	x3, [sp, #288]
   1fe14:	mov	w2, w23
   1fe18:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   1fe1c:	add	x1, x1, #0xe40
   1fe20:	mov	x0, x28
   1fe24:	bl	50e0 <Perl_re_printf@plt>
   1fe28:	b	1feb0 <Perl_re_exec_indentf@@Base+0x13ce0>
   1fe2c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fe30:	add	x3, x3, #0x330
   1fe34:	add	x3, x3, #0xcf0
   1fe38:	mov	w2, #0xb89                 	// #2953
   1fe3c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fe40:	add	x1, x1, #0xcb0
   1fe44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1fe48:	add	x0, x0, #0xda0
   1fe4c:	bl	58e0 <__assert_fail@plt>
   1fe50:	and	w0, w2, #0xff
   1fe54:	sub	w0, w0, #0x9
   1fe58:	cmp	w0, #0x1
   1fe5c:	b.hi	1f70c <Perl_re_exec_indentf@@Base+0x1353c>  // b.pmore
   1fe60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   1fe64:	add	x3, x3, #0x330
   1fe68:	add	x3, x3, #0xcf0
   1fe6c:	mov	w2, #0xb89                 	// #2953
   1fe70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   1fe74:	add	x1, x1, #0xcb0
   1fe78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   1fe7c:	add	x0, x0, #0xdd0
   1fe80:	bl	58e0 <__assert_fail@plt>
   1fe84:	mov	w2, #0x2                   	// #2
   1fe88:	mov	x0, x28
   1fe8c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   1fe90:	and	w23, w0, #0xffff
   1fe94:	b	1fddc <Perl_re_exec_indentf@@Base+0x13c0c>
   1fe98:	mov	w23, #0x0                   	// #0
   1fe9c:	b	1fddc <Perl_re_exec_indentf@@Base+0x13c0c>
   1fea0:	mov	w23, #0x0                   	// #0
   1fea4:	b	1fddc <Perl_re_exec_indentf@@Base+0x13c0c>
   1fea8:	str	xzr, [sp, #296]
   1feac:	mov	w23, #0x0                   	// #0
   1feb0:	mov	w22, #0x0                   	// #0
   1feb4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   1feb8:	add	x0, x0, #0x20
   1febc:	str	x0, [sp, #120]
   1fec0:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   1fec4:	add	x0, x0, #0xe58
   1fec8:	str	x27, [sp, #136]
   1fecc:	mov	x27, x0
   1fed0:	b	1ff34 <Perl_re_exec_indentf@@Base+0x13d64>
   1fed4:	mov	w7, #0x0                   	// #0
   1fed8:	ldrb	w6, [sp, #160]
   1fedc:	ldr	x5, [sp, #264]
   1fee0:	ldr	x4, [sp, #152]
   1fee4:	ldr	x3, [sp, #128]
   1fee8:	ldr	x2, [sp, #144]
   1feec:	ldr	x1, [sp, #136]
   1fef0:	mov	x0, x28
   1fef4:	bl	624c <Perl__inverse_folds@plt+0x84c>
   1fef8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   1fefc:	add	x2, x0, #0xa68
   1ff00:	b	1ff64 <Perl_re_exec_indentf@@Base+0x13d94>
   1ff04:	ldr	w0, [x28, #2368]
   1ff08:	tbnz	w0, #20, 1ff14 <Perl_re_exec_indentf@@Base+0x13d44>
   1ff0c:	ldr	x0, [sp, #280]
   1ff10:	tbz	w0, #10, 1ff24 <Perl_re_exec_indentf@@Base+0x13d54>
   1ff14:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   1ff18:	add	x1, x1, #0xe80
   1ff1c:	mov	x0, x28
   1ff20:	bl	50e0 <Perl_re_printf@plt>
   1ff24:	ldr	x0, [x26, #8]
   1ff28:	ldr	w19, [x0, x21, lsl #2]
   1ff2c:	mov	w22, #0x1                   	// #1
   1ff30:	cbz	w19, 200dc <Perl_re_exec_indentf@@Base+0x13f0c>
   1ff34:	mov	w21, w19
   1ff38:	ubfiz	x0, x19, #4, #32
   1ff3c:	ldr	x1, [x26, #16]
   1ff40:	add	x2, x1, x0
   1ff44:	ldr	w20, [x2, #8]
   1ff48:	ldr	w2, [x28, #2368]
   1ff4c:	tbnz	w2, #20, 1ff58 <Perl_re_exec_indentf@@Base+0x13d88>
   1ff50:	ldr	x2, [sp, #280]
   1ff54:	tbz	w2, #10, 1ff78 <Perl_re_exec_indentf@@Base+0x13da8>
   1ff58:	ldrh	w24, [x1, x0]
   1ff5c:	ldr	x2, [sp, #120]
   1ff60:	cbnz	w22, 1fed4 <Perl_re_exec_indentf@@Base+0x13d04>
   1ff64:	and	x4, x24, #0xffff
   1ff68:	mov	x3, x21
   1ff6c:	mov	x1, x27
   1ff70:	mov	x0, x28
   1ff74:	bl	50e0 <Perl_re_printf@plt>
   1ff78:	cbz	w20, 200fc <Perl_re_exec_indentf@@Base+0x13f2c>
   1ff7c:	cbz	w23, 1ff04 <Perl_re_exec_indentf@@Base+0x13d34>
   1ff80:	ldrh	w0, [x25, #56]
   1ff84:	mvn	w0, w0
   1ff88:	add	w0, w0, w23
   1ff8c:	adds	w0, w0, w20
   1ff90:	b.mi	1ff04 <Perl_re_exec_indentf@@Base+0x13d34>  // b.first
   1ff94:	ldr	w1, [x25, #4]
   1ff98:	cmp	w0, w1
   1ff9c:	b.cs	1ff04 <Perl_re_exec_indentf@@Base+0x13d34>  // b.hs, b.nlast
   1ffa0:	sbfiz	x0, x0, #3, #32
   1ffa4:	ldr	x1, [x25, #24]
   1ffa8:	add	x2, x1, x0
   1ffac:	ldr	w2, [x2, #4]
   1ffb0:	cmp	w2, w19
   1ffb4:	b.ne	1ff04 <Perl_re_exec_indentf@@Base+0x13d34>  // b.any
   1ffb8:	ldr	w19, [x1, x0]
   1ffbc:	cbz	w19, 1ff04 <Perl_re_exec_indentf@@Base+0x13d34>
   1ffc0:	ldr	x27, [sp, #136]
   1ffc4:	ldr	w0, [x28, #2368]
   1ffc8:	tbnz	w0, #20, 1ffd4 <Perl_re_exec_indentf@@Base+0x13e04>
   1ffcc:	ldr	x0, [sp, #280]
   1ffd0:	tbz	w0, #10, 1ffe4 <Perl_re_exec_indentf@@Base+0x13e14>
   1ffd4:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   1ffd8:	add	x1, x1, #0xe70
   1ffdc:	mov	x0, x28
   1ffe0:	bl	50e0 <Perl_re_printf@plt>
   1ffe4:	ldr	x0, [sp, #296]
   1ffe8:	add	x27, x27, x0
   1ffec:	cbnz	w22, 200e8 <Perl_re_exec_indentf@@Base+0x13f18>
   1fff0:	cmp	w19, #0x0
   1fff4:	ldr	x0, [sp, #128]
   1fff8:	ccmp	x27, x0, #0x2, ne  // ne = any
   1fffc:	b.hi	20140 <Perl_re_exec_indentf@@Base+0x13f70>  // b.pmore
   20000:	ldr	w21, [sp, #164]
   20004:	ldr	x1, [x26, #16]
   20008:	ubfiz	x0, x19, #4, #32
   2000c:	ldrh	w22, [x1, x0]
   20010:	cmp	w19, #0x1
   20014:	b.eq	1f474 <Perl_re_exec_indentf@@Base+0x132a4>  // b.none
   20018:	cbz	w22, 2006c <Perl_re_exec_indentf@@Base+0x13e9c>
   2001c:	ldr	x1, [x25, #48]
   20020:	ubfiz	x0, x22, #1, #16
   20024:	add	x0, x0, w22, uxth
   20028:	add	x0, x1, x0, lsl #2
   2002c:	ldr	w0, [x0, #4]
   20030:	sub	w0, w21, w0
   20034:	ldr	x2, [sp, #192]
   20038:	udiv	x1, x0, x2
   2003c:	msub	x0, x1, x2, x0
   20040:	ldr	x1, [sp, #184]
   20044:	ldr	x0, [x1, x0, lsl #3]
   20048:	ldr	x1, [sp, #168]
   2004c:	cmp	x1, #0x0
   20050:	ccmp	x0, x1, #0x0, ne  // ne = any
   20054:	ldr	w2, [sp, #204]
   20058:	csel	w2, w2, w22, cs  // cs = hs, nlast
   2005c:	str	w2, [sp, #204]
   20060:	csel	x0, x1, x0, cs  // cs = hs, nlast
   20064:	str	x0, [sp, #168]
   20068:	cbz	w20, 2013c <Perl_re_exec_indentf@@Base+0x13f6c>
   2006c:	add	w0, w21, #0x1
   20070:	str	w0, [sp, #164]
   20074:	mov	w21, w21
   20078:	ldr	x1, [sp, #192]
   2007c:	udiv	x0, x21, x1
   20080:	msub	x21, x0, x1, x21
   20084:	ldr	x0, [sp, #184]
   20088:	str	x27, [x0, x21, lsl #3]
   2008c:	ldr	x0, [sp, #304]
   20090:	cmp	x0, #0x0
   20094:	ldr	x0, [sp, #128]
   20098:	ccmp	x27, x0, #0x0, eq  // eq = none
   2009c:	b.cs	1fea8 <Perl_re_exec_indentf@@Base+0x13cd8>  // b.hs, b.nlast
   200a0:	ldr	w0, [sp, #200]
   200a4:	cmp	w0, #0x4
   200a8:	b.eq	1f9c8 <Perl_re_exec_indentf@@Base+0x137f8>  // b.none
   200ac:	b.ls	1f554 <Perl_re_exec_indentf@@Base+0x13384>  // b.plast
   200b0:	ldr	w0, [sp, #200]
   200b4:	cmp	w0, #0x7
   200b8:	b.eq	1f82c <Perl_re_exec_indentf@@Base+0x1365c>  // b.none
   200bc:	cmp	w0, #0x7
   200c0:	b.ls	1f718 <Perl_re_exec_indentf@@Base+0x13548>  // b.plast
   200c4:	ldr	x0, [x28, #1440]
   200c8:	mov	w3, #0x2                   	// #2
   200cc:	cbz	x0, 1f570 <Perl_re_exec_indentf@@Base+0x133a0>
   200d0:	bl	5050 <Perl__warn_problematic_locale@plt>
   200d4:	mov	w3, #0x2                   	// #2
   200d8:	b	1f570 <Perl_re_exec_indentf@@Base+0x133a0>
   200dc:	ldr	x27, [sp, #136]
   200e0:	ldr	x0, [sp, #296]
   200e4:	add	x27, x27, x0
   200e8:	ldr	x0, [sp, #168]
   200ec:	cbnz	x0, 20140 <Perl_re_exec_indentf@@Base+0x13f70>
   200f0:	cmp	w19, #0x0
   200f4:	csinc	w19, w19, wzr, ne  // ne = any
   200f8:	b	1fff0 <Perl_re_exec_indentf@@Base+0x13e20>
   200fc:	ldr	x27, [sp, #136]
   20100:	ldr	w0, [x28, #2368]
   20104:	and	w1, w0, #0x100000
   20108:	tbnz	w0, #20, 20114 <Perl_re_exec_indentf@@Base+0x13f44>
   2010c:	ldr	x0, [sp, #280]
   20110:	tbz	w0, #10, 20624 <Perl_re_exec_indentf@@Base+0x14454>
   20114:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   20118:	add	x1, x1, #0xe90
   2011c:	mov	x0, x28
   20120:	bl	50e0 <Perl_re_printf@plt>
   20124:	b	200e0 <Perl_re_exec_indentf@@Base+0x13f10>
   20128:	str	wzr, [sp, #164]
   2012c:	str	wzr, [sp, #204]
   20130:	str	xzr, [sp, #168]
   20134:	mov	w19, #0x1                   	// #1
   20138:	b	20140 <Perl_re_exec_indentf@@Base+0x13f70>
   2013c:	str	w21, [sp, #164]
   20140:	ldr	x0, [x26, #16]
   20144:	ubfiz	x19, x19, #4, #32
   20148:	ldrh	w1, [x0, x19]
   2014c:	cbz	w1, 20198 <Perl_re_exec_indentf@@Base+0x13fc8>
   20150:	ldr	x2, [x25, #48]
   20154:	ubfiz	x0, x1, #1, #16
   20158:	add	x0, x0, w1, uxth
   2015c:	add	x0, x2, x0, lsl #2
   20160:	ldr	w0, [x0, #4]
   20164:	ldr	w2, [sp, #164]
   20168:	sub	w0, w2, w0
   2016c:	ldr	x3, [sp, #192]
   20170:	udiv	x2, x0, x3
   20174:	msub	x0, x2, x3, x0
   20178:	ldr	x2, [sp, #184]
   2017c:	ldr	x0, [x2, x0, lsl #3]
   20180:	ldr	x2, [sp, #168]
   20184:	cmp	x2, #0x0
   20188:	ccmp	x2, x0, #0x2, ne  // ne = any
   2018c:	b.ls	201a0 <Perl_re_exec_indentf@@Base+0x13fd0>  // b.plast
   20190:	str	w1, [sp, #204]
   20194:	str	x0, [sp, #168]
   20198:	ldr	x0, [sp, #168]
   2019c:	cbz	x0, 20334 <Perl_re_exec_indentf@@Base+0x14164>
   201a0:	ldr	x0, [sp, #168]
   201a4:	str	x0, [sp, #264]
   201a8:	ldr	w0, [x28, #2368]
   201ac:	tbnz	w0, #20, 201b8 <Perl_re_exec_indentf@@Base+0x13fe8>
   201b0:	ldr	x0, [sp, #280]
   201b4:	tbz	w0, #10, 201d8 <Perl_re_exec_indentf@@Base+0x14008>
   201b8:	ldr	x0, [sp, #168]
   201bc:	ldr	x1, [sp, #152]
   201c0:	sub	x3, x0, x1
   201c4:	ldr	w2, [sp, #204]
   201c8:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   201cc:	add	x1, x1, #0xea0
   201d0:	mov	x0, x28
   201d4:	bl	50e0 <Perl_re_printf@plt>
   201d8:	ldr	x1, [sp, #176]
   201dc:	ldrb	w0, [x1, #88]
   201e0:	cbnz	w0, 2028c <Perl_re_exec_indentf@@Base+0x140bc>
   201e4:	add	x2, sp, #0x108
   201e8:	mov	x0, x28
   201ec:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   201f0:	and	w0, w0, #0xff
   201f4:	cbnz	w0, 2028c <Perl_re_exec_indentf@@Base+0x140bc>
   201f8:	ldr	x1, [sp, #176]
   201fc:	ldr	x2, [x1, #16]
   20200:	ldr	x0, [sp, #264]
   20204:	cmp	x2, x0
   20208:	b.ls	2021c <Perl_re_exec_indentf@@Base+0x1404c>  // b.plast
   2020c:	ldrb	w3, [x1, #90]
   20210:	add	x1, x0, #0x1
   20214:	cbnz	w3, 20324 <Perl_re_exec_indentf@@Base+0x14154>
   20218:	str	x1, [sp, #264]
   2021c:	ldr	w0, [x28, #2368]
   20220:	tbnz	w0, #20, 2022c <Perl_re_exec_indentf@@Base+0x1405c>
   20224:	ldr	x0, [sp, #280]
   20228:	tbz	w0, #10, 2023c <Perl_re_exec_indentf@@Base+0x1406c>
   2022c:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   20230:	add	x1, x1, #0xee8
   20234:	mov	x0, x28
   20238:	bl	50e0 <Perl_re_printf@plt>
   2023c:	ldr	x27, [sp, #264]
   20240:	ldr	x0, [sp, #216]
   20244:	cmp	x27, x0
   20248:	b.hi	20354 <Perl_re_exec_indentf@@Base+0x14184>  // b.pmore
   2024c:	str	xzr, [sp, #288]
   20250:	str	xzr, [sp, #296]
   20254:	str	xzr, [sp, #304]
   20258:	ldr	x0, [sp, #128]
   2025c:	cmp	x0, x27
   20260:	b.cc	20128 <Perl_re_exec_indentf@@Base+0x13f58>  // b.lo, b.ul, b.last
   20264:	mov	w21, #0x0                   	// #0
   20268:	str	wzr, [sp, #204]
   2026c:	str	xzr, [sp, #168]
   20270:	str	xzr, [sp, #208]
   20274:	mov	w19, #0x1                   	// #1
   20278:	mov	w20, w19
   2027c:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   20280:	add	x0, x0, #0xdc8
   20284:	str	x0, [sp, #256]
   20288:	b	20004 <Perl_re_exec_indentf@@Base+0x13e34>
   2028c:	ldr	x1, [x28, #80]
   20290:	ldr	x0, [x28, #88]
   20294:	cmp	x1, x0
   20298:	b.gt	202e8 <Perl_re_exec_indentf@@Base+0x14118>
   2029c:	ldr	w0, [x28, #2368]
   202a0:	tbnz	w0, #2, 202f4 <Perl_re_exec_indentf@@Base+0x14124>
   202a4:	mov	x0, x28
   202a8:	bl	4fc0 <Perl_pop_scope@plt>
   202ac:	ldr	x0, [sp, #264]
   202b0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   202b4:	ldr	x1, [x1, #3920]
   202b8:	ldr	x2, [sp, #328]
   202bc:	ldr	x1, [x1]
   202c0:	eor	x1, x2, x1
   202c4:	cbnz	x1, 20670 <Perl_re_exec_indentf@@Base+0x144a0>
   202c8:	ldp	x19, x20, [sp, #32]
   202cc:	ldp	x21, x22, [sp, #48]
   202d0:	ldp	x23, x24, [sp, #64]
   202d4:	ldp	x25, x26, [sp, #80]
   202d8:	ldp	x27, x28, [sp, #96]
   202dc:	ldp	x29, x30, [sp, #16]
   202e0:	add	sp, sp, #0x150
   202e4:	ret
   202e8:	mov	x0, x28
   202ec:	bl	5760 <Perl_free_tmps@plt>
   202f0:	b	2029c <Perl_re_exec_indentf@@Base+0x140cc>
   202f4:	mov	w6, #0xbdf                 	// #3039
   202f8:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   202fc:	add	x5, x5, #0xcb0
   20300:	ldrsw	x4, [x28, #48]
   20304:	ldrsw	x3, [x28, #64]
   20308:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   2030c:	add	x2, x2, #0xee0
   20310:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   20314:	add	x1, x1, #0x700
   20318:	mov	x0, x28
   2031c:	bl	4f70 <Perl_deb@plt>
   20320:	b	202a4 <Perl_re_exec_indentf@@Base+0x140d4>
   20324:	mov	x1, #0x1                   	// #1
   20328:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   2032c:	mov	x1, x0
   20330:	b	20218 <Perl_re_exec_indentf@@Base+0x14048>
   20334:	ldr	w0, [x28, #2368]
   20338:	tbnz	w0, #20, 20344 <Perl_re_exec_indentf@@Base+0x14174>
   2033c:	ldr	x0, [sp, #280]
   20340:	tbz	w0, #10, 20354 <Perl_re_exec_indentf@@Base+0x14184>
   20344:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   20348:	add	x1, x1, #0xf18
   2034c:	mov	x0, x28
   20350:	bl	50e0 <Perl_re_printf@plt>
   20354:	ldr	x1, [x28, #80]
   20358:	ldr	x0, [x28, #88]
   2035c:	cmp	x1, x0
   20360:	b.gt	2037c <Perl_re_exec_indentf@@Base+0x141ac>
   20364:	ldr	w0, [x28, #2368]
   20368:	tbnz	w0, #2, 20388 <Perl_re_exec_indentf@@Base+0x141b8>
   2036c:	mov	x0, x28
   20370:	bl	4fc0 <Perl_pop_scope@plt>
   20374:	mov	x0, #0x0                   	// #0
   20378:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   2037c:	mov	x0, x28
   20380:	bl	5760 <Perl_free_tmps@plt>
   20384:	b	20364 <Perl_re_exec_indentf@@Base+0x14194>
   20388:	mov	w6, #0xbef                 	// #3055
   2038c:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   20390:	add	x5, x5, #0xcb0
   20394:	ldrsw	x4, [x28, #48]
   20398:	ldrsw	x3, [x28, #64]
   2039c:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   203a0:	add	x2, x2, #0xee0
   203a4:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   203a8:	add	x1, x1, #0x700
   203ac:	mov	x0, x28
   203b0:	bl	4f70 <Perl_deb@plt>
   203b4:	b	2036c <Perl_re_exec_indentf@@Base+0x1419c>
   203b8:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   203bc:	add	x1, x1, #0xf28
   203c0:	mov	x0, x28
   203c4:	bl	5420 <Perl_croak@plt>
   203c8:	mov	x0, #0x0                   	// #0
   203cc:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203d0:	mov	x0, #0x0                   	// #0
   203d4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203d8:	mov	x0, #0x0                   	// #0
   203dc:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203e0:	mov	x0, #0x0                   	// #0
   203e4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203e8:	mov	x0, #0x0                   	// #0
   203ec:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203f0:	mov	x0, #0x0                   	// #0
   203f4:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   203f8:	mov	x0, #0x0                   	// #0
   203fc:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20400:	mov	x0, #0x0                   	// #0
   20404:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20408:	mov	x0, #0x0                   	// #0
   2040c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20410:	mov	x0, #0x0                   	// #0
   20414:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20418:	mov	x0, #0x0                   	// #0
   2041c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20420:	mov	x0, #0x0                   	// #0
   20424:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20428:	mov	x0, #0x0                   	// #0
   2042c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20430:	mov	x0, #0x0                   	// #0
   20434:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20438:	mov	x0, #0x0                   	// #0
   2043c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20440:	mov	x0, #0x0                   	// #0
   20444:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20448:	mov	x0, #0x0                   	// #0
   2044c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20450:	mov	x0, #0x0                   	// #0
   20454:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20458:	mov	x0, #0x0                   	// #0
   2045c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20460:	mov	x0, #0x0                   	// #0
   20464:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20468:	mov	x0, #0x0                   	// #0
   2046c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20470:	mov	x0, #0x0                   	// #0
   20474:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20478:	mov	x0, #0x0                   	// #0
   2047c:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   20480:	ldr	x0, [sp, #264]
   20484:	add	x0, x0, #0x1
   20488:	str	x0, [sp, #264]
   2048c:	ldr	x1, [sp, #176]
   20490:	ldr	x1, [x1, #16]
   20494:	cmp	x1, x0
   20498:	b.hi	1c474 <Perl_re_exec_indentf@@Base+0x102a4>  // b.pmore
   2049c:	mov	x0, #0x0                   	// #0
   204a0:	b	202b0 <Perl_re_exec_indentf@@Base+0x140e0>
   204a4:	mov	x1, #0x0                   	// #0
   204a8:	b	1c8d4 <Perl_re_exec_indentf@@Base+0x10704>
   204ac:	ldr	x0, [sp, #264]
   204b0:	add	x0, x0, #0x1
   204b4:	str	x0, [sp, #264]
   204b8:	ldr	x1, [sp, #176]
   204bc:	ldr	x1, [x1, #16]
   204c0:	cmp	x1, x0
   204c4:	b.ls	20468 <Perl_re_exec_indentf@@Base+0x14298>  // b.plast
   204c8:	ldr	x0, [sp, #264]
   204cc:	ldurb	w1, [x0, #-1]
   204d0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   204d4:	ldr	x0, [x0, #3992]
   204d8:	ldr	x0, [x0]
   204dc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   204e0:	adrp	x1, 71000 <boot_re@@Base+0xf41c>
   204e4:	add	x1, x1, #0xe48
   204e8:	ldr	w22, [x1, x0, lsl #2]
   204ec:	ldr	x0, [sp, #264]
   204f0:	ldr	x1, [sp, #128]
   204f4:	cmp	x1, x0
   204f8:	b.ls	1d104 <Perl_re_exec_indentf@@Base+0x10f34>  // b.plast
   204fc:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   20500:	ldr	x21, [x21, #3992]
   20504:	adrp	x20, 71000 <boot_re@@Base+0xf41c>
   20508:	add	x20, x20, #0xe48
   2050c:	add	x23, sp, #0x108
   20510:	ldr	x24, [sp, #176]
   20514:	b	1d0a8 <Perl_re_exec_indentf@@Base+0x10ed8>
   20518:	mov	x1, #0x0                   	// #0
   2051c:	b	1ce18 <Perl_re_exec_indentf@@Base+0x10c48>
   20520:	mov	x1, #0x0                   	// #0
   20524:	b	1d29c <Perl_re_exec_indentf@@Base+0x110cc>
   20528:	ldr	x0, [sp, #264]
   2052c:	add	x0, x0, #0x1
   20530:	str	x0, [sp, #264]
   20534:	ldr	x1, [sp, #176]
   20538:	ldr	x1, [x1, #16]
   2053c:	cmp	x1, x0
   20540:	b.ls	20470 <Perl_re_exec_indentf@@Base+0x142a0>  // b.plast
   20544:	ldr	x0, [sp, #264]
   20548:	ldurb	w1, [x0, #-1]
   2054c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   20550:	ldr	x0, [x0, #3792]
   20554:	ldr	x0, [x0]
   20558:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   2055c:	adrp	x1, 6e000 <boot_re@@Base+0xc41c>
   20560:	add	x1, x1, #0xde0
   20564:	ldr	w22, [x1, x0, lsl #2]
   20568:	ldr	x0, [sp, #264]
   2056c:	ldr	x1, [sp, #128]
   20570:	cmp	x0, x1
   20574:	b.cs	1d588 <Perl_re_exec_indentf@@Base+0x113b8>  // b.hs, b.nlast
   20578:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   2057c:	ldr	x21, [x21, #3792]
   20580:	adrp	x20, 6e000 <boot_re@@Base+0xc41c>
   20584:	add	x20, x20, #0xde0
   20588:	add	x23, sp, #0x108
   2058c:	ldr	x24, [sp, #176]
   20590:	b	1d52c <Perl_re_exec_indentf@@Base+0x1135c>
   20594:	mov	x1, #0x0                   	// #0
   20598:	b	1d628 <Perl_re_exec_indentf@@Base+0x11458>
   2059c:	ldr	x0, [sp, #264]
   205a0:	add	x0, x0, #0x1
   205a4:	str	x0, [sp, #264]
   205a8:	ldr	x1, [sp, #176]
   205ac:	ldr	x1, [x1, #16]
   205b0:	cmp	x1, x0
   205b4:	b.ls	20478 <Perl_re_exec_indentf@@Base+0x142a8>  // b.plast
   205b8:	ldr	x0, [sp, #264]
   205bc:	ldurb	w1, [x0, #-1]
   205c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   205c4:	ldr	x0, [x0, #3952]
   205c8:	ldr	x0, [x0]
   205cc:	bl	7480 <Perl__inverse_folds@plt+0x1a80>
   205d0:	adrp	x1, 6d000 <boot_re@@Base+0xb41c>
   205d4:	add	x1, x1, #0x100
   205d8:	ldr	w22, [x1, x0, lsl #2]
   205dc:	ldr	x0, [sp, #264]
   205e0:	ldr	x1, [sp, #128]
   205e4:	cmp	x0, x1
   205e8:	b.cs	1d928 <Perl_re_exec_indentf@@Base+0x11758>  // b.hs, b.nlast
   205ec:	mov	w23, #0x16                  	// #22
   205f0:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   205f4:	ldr	x21, [x21, #3952]
   205f8:	adrp	x20, 6d000 <boot_re@@Base+0xb41c>
   205fc:	add	x20, x20, #0x100
   20600:	add	x25, sp, #0x108
   20604:	ldr	x24, [sp, #176]
   20608:	b	1d8c4 <Perl_re_exec_indentf@@Base+0x116f4>
   2060c:	mov	x21, #0x1                   	// #1
   20610:	b	1a358 <Perl_re_exec_indentf@@Base+0xe188>
   20614:	mov	x21, #0x0                   	// #0
   20618:	b	1a358 <Perl_re_exec_indentf@@Base+0xe188>
   2061c:	mov	x21, #0x2                   	// #2
   20620:	b	1a358 <Perl_re_exec_indentf@@Base+0xe188>
   20624:	mov	w20, w1
   20628:	b	200e0 <Perl_re_exec_indentf@@Base+0x13f10>
   2062c:	ldr	w0, [sp, #160]
   20630:	cbnz	w0, 1f53c <Perl_re_exec_indentf@@Base+0x1336c>
   20634:	ldr	x0, [sp, #216]
   20638:	cmp	x0, x27
   2063c:	b.cc	1f53c <Perl_re_exec_indentf@@Base+0x1336c>  // b.lo, b.ul, b.last
   20640:	ldr	x2, [sp, #224]
   20644:	ldr	x3, [sp, #216]
   20648:	ldrb	w0, [x27]
   2064c:	ubfx	x1, x0, #3, #5
   20650:	ldrb	w1, [x2, x1]
   20654:	and	w0, w0, #0x7
   20658:	lsr	w0, w1, w0
   2065c:	tbnz	w0, #0, 1f53c <Perl_re_exec_indentf@@Base+0x1336c>
   20660:	add	x27, x27, #0x1
   20664:	cmp	x3, x27
   20668:	b.cs	20648 <Perl_re_exec_indentf@@Base+0x14478>  // b.hs, b.nlast
   2066c:	b	1f53c <Perl_re_exec_indentf@@Base+0x1336c>
   20670:	bl	5300 <__stack_chk_fail@plt>

0000000000020674 <my_re_intuit_start@@Base>:
   20674:	sub	sp, sp, #0x150
   20678:	stp	x29, x30, [sp, #16]
   2067c:	add	x29, sp, #0x10
   20680:	stp	x19, x20, [sp, #32]
   20684:	stp	x21, x22, [sp, #48]
   20688:	stp	x23, x24, [sp, #64]
   2068c:	stp	x25, x26, [sp, #80]
   20690:	stp	x27, x28, [sp, #96]
   20694:	mov	x20, x0
   20698:	mov	x21, x1
   2069c:	mov	x27, x3
   206a0:	mov	x22, x4
   206a4:	mov	x23, x5
   206a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   206ac:	ldr	x0, [x0, #3920]
   206b0:	ldr	x1, [x0]
   206b4:	str	x1, [sp, #328]
   206b8:	mov	x1, #0x0                   	// #0
   206bc:	ldr	x19, [x21]
   206c0:	ldr	w0, [x21, #12]
   206c4:	and	w1, w0, #0xff
   206c8:	cmp	w1, #0x8
   206cc:	b.eq	206f8 <my_re_intuit_start@@Base+0x84>  // b.none
   206d0:	mov	w3, #0x80ff                	// #33023
   206d4:	movk	w3, #0x100, lsl #16
   206d8:	and	w0, w0, w3
   206dc:	mov	w3, #0xa                   	// #10
   206e0:	movk	w3, #0x100, lsl #16
   206e4:	cmp	w0, w3
   206e8:	b.ne	20b5c <my_re_intuit_start@@Base+0x4e8>  // b.any
   206ec:	cmp	w1, #0xa
   206f0:	b.ne	206f8 <my_re_intuit_start@@Base+0x84>  // b.any
   206f4:	ldr	x19, [x19, #24]
   206f8:	ldr	x0, [x19, #88]
   206fc:	ldr	x1, [x0, #88]
   20700:	str	x1, [sp, #144]
   20704:	str	wzr, [sp, #120]
   20708:	cbz	x2, 20718 <my_re_intuit_start@@Base+0xa4>
   2070c:	ldr	w26, [x2, #12]
   20710:	ubfx	x1, x26, #29, #1
   20714:	str	x1, [sp, #120]
   20718:	ldrb	w28, [x0]
   2071c:	ldr	w26, [x19, #56]
   20720:	ldr	x0, [x19, #104]
   20724:	str	x0, [sp, #152]
   20728:	str	xzr, [sp, #224]
   2072c:	ldr	x0, [x20, #224]
   20730:	cbz	x0, 20798 <my_re_intuit_start@@Base+0x124>
   20734:	mov	w2, #0x1                   	// #1
   20738:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2073c:	add	x1, x1, #0x608
   20740:	mov	x0, x20
   20744:	bl	54f0 <Perl_get_sv@plt>
   20748:	mov	x24, x0
   2074c:	cbz	x0, 20798 <my_re_intuit_start@@Base+0x124>
   20750:	ldr	w0, [x0, #12]
   20754:	tbz	w0, #8, 20b80 <my_re_intuit_start@@Base+0x50c>
   20758:	ldr	w1, [x24, #12]
   2075c:	and	w0, w1, #0x3fff00
   20760:	and	w0, w0, #0xffe001ff
   20764:	cmp	w0, #0x100
   20768:	b.ne	20bec <my_re_intuit_start@@Base+0x578>  // b.any
   2076c:	and	w2, w1, #0xf
   20770:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   20774:	ldr	x0, [x0, #3712]
   20778:	ldrb	w0, [x0, w2, uxtw]
   2077c:	cbz	w0, 20b94 <my_re_intuit_start@@Base+0x520>
   20780:	and	w0, w1, #0xc000
   20784:	cmp	w0, #0x8, lsl #12
   20788:	b.eq	20bb8 <my_re_intuit_start@@Base+0x544>  // b.none
   2078c:	ldr	x0, [x24]
   20790:	ldr	x0, [x0, #32]
   20794:	str	x0, [sp, #224]
   20798:	cbz	x27, 20c00 <my_re_intuit_start@@Base+0x58c>
   2079c:	cbz	x22, 20c24 <my_re_intuit_start@@Base+0x5b0>
   207a0:	cbz	x23, 20c48 <my_re_intuit_start@@Base+0x5d4>
   207a4:	ldr	w0, [x20, #2368]
   207a8:	tbnz	w0, #20, 207b8 <my_re_intuit_start@@Base+0x144>
   207ac:	ldr	x0, [sp, #224]
   207b0:	tst	x0, #0xff00
   207b4:	b.eq	207c8 <my_re_intuit_start@@Base+0x154>  // b.none
   207b8:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   207bc:	add	x1, x1, #0xfb0
   207c0:	mov	x0, x20
   207c4:	bl	50e0 <Perl_re_printf@plt>
   207c8:	ldr	x0, [x19, #88]
   207cc:	ldr	x2, [x0, #8]
   207d0:	tbnz	x2, #63, 20c6c <my_re_intuit_start@@Base+0x5f8>
   207d4:	ldr	x1, [x0, #16]
   207d8:	tbnz	x1, #63, 20c90 <my_re_intuit_start@@Base+0x61c>
   207dc:	ldr	x1, [x0, #48]
   207e0:	tbnz	x1, #63, 20cb4 <my_re_intuit_start@@Base+0x640>
   207e4:	ldr	x3, [x0, #56]
   207e8:	tbnz	x3, #63, 20cd8 <my_re_intuit_start@@Base+0x664>
   207ec:	ldr	x3, [x0, #88]
   207f0:	tbnz	x3, #63, 20cfc <my_re_intuit_start@@Base+0x688>
   207f4:	ldr	x3, [x0, #96]
   207f8:	tbnz	x3, #63, 20d20 <my_re_intuit_start@@Base+0x6ac>
   207fc:	ldr	x3, [x0, #32]
   20800:	cbz	x3, 20d44 <my_re_intuit_start@@Base+0x6d0>
   20804:	ldr	x3, [x0, #72]
   20808:	cbz	x3, 20d50 <my_re_intuit_start@@Base+0x6dc>
   2080c:	cmp	x2, x1
   20810:	b.gt	20d5c <my_re_intuit_start@@Base+0x6e8>
   20814:	sub	x0, x23, x22
   20818:	ldr	x1, [x19, #64]
   2081c:	cmp	x1, x0
   20820:	b.gt	20d80 <my_re_intuit_start@@Base+0x70c>
   20824:	ldr	w0, [sp, #120]
   20828:	str	w0, [sp, #132]
   2082c:	cbz	w0, 20da8 <my_re_intuit_start@@Base+0x734>
   20830:	ldr	w0, [x19, #56]
   20834:	orr	w0, w0, #0x100000
   20838:	str	w0, [x19, #56]
   2083c:	mov	w1, #0x1                   	// #1
   20840:	strb	w1, [sp, #322]
   20844:	str	xzr, [sp, #288]
   20848:	str	x27, [sp, #240]
   2084c:	str	x23, [sp, #248]
   20850:	ldr	w0, [x21, #12]
   20854:	ubfx	x0, x0, #29, #1
   20858:	strb	w0, [sp, #321]
   2085c:	strb	w1, [sp, #320]
   20860:	str	wzr, [sp, #304]
   20864:	ldr	x0, [x19, #88]
   20868:	ldr	x1, [x0, #32]
   2086c:	cbz	x1, 20df8 <my_re_intuit_start@@Base+0x784>
   20870:	ldr	x1, [x0, #72]
   20874:	cbz	x1, 20e10 <my_re_intuit_start@@Base+0x79c>
   20878:	ldr	x0, [x19, #88]
   2087c:	ldr	x0, [x0, #112]
   20880:	str	x0, [sp, #136]
   20884:	ldr	w0, [x20, #2368]
   20888:	tbnz	w0, #20, 20e6c <my_re_intuit_start@@Base+0x7f8>
   2088c:	ldr	x1, [sp, #224]
   20890:	mov	x0, #0x2                   	// #2
   20894:	movk	x0, #0x10, lsl #16
   20898:	mov	w24, #0x0                   	// #0
   2089c:	bics	xzr, x0, x1
   208a0:	b.eq	20e70 <my_re_intuit_start@@Base+0x7fc>  // b.none
   208a4:	mov	w0, #0x1                   	// #1
   208a8:	sub	w28, w0, w28
   208ac:	and	w28, w28, #0xff
   208b0:	and	w0, w26, w0
   208b4:	str	w0, [sp, #160]
   208b8:	ldr	w0, [x19, #100]
   208bc:	tst	w0, #0x1c00
   208c0:	b.eq	211f4 <my_re_intuit_start@@Base+0xb80>  // b.none
   208c4:	mov	w1, #0x402                 	// #1026
   208c8:	and	w1, w0, w1
   208cc:	cmp	w1, #0x400
   208d0:	cset	w2, eq  // eq = none
   208d4:	str	w2, [sp, #120]
   208d8:	b.eq	211f8 <my_re_intuit_start@@Base+0xb84>  // b.none
   208dc:	tbnz	w0, #1, 211f8 <my_re_intuit_start@@Base+0xb84>
   208e0:	cmp	x22, x27
   208e4:	b.eq	208ec <my_re_intuit_start@@Base+0x278>  // b.none
   208e8:	tbnz	w0, #11, 21030 <my_re_intuit_start@@Base+0x9bc>
   208ec:	ldr	x0, [x19, #88]
   208f0:	ldr	x24, [x0, #88]
   208f4:	ldr	x0, [x0, #96]
   208f8:	cmp	x24, x0
   208fc:	b.ne	211f8 <my_re_intuit_start@@Base+0xb84>  // b.any
   20900:	ldr	x0, [sp, #136]
   20904:	ldr	w0, [x0, #12]
   20908:	and	w2, w0, #0xf
   2090c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   20910:	ldr	x1, [x1, #3888]
   20914:	ldrb	w1, [x1, w2, uxtw]
   20918:	cbz	w1, 21058 <my_re_intuit_start@@Base+0x9e4>
   2091c:	and	w1, w0, #0xc000
   20920:	cmp	w1, #0x8, lsl #12
   20924:	b.eq	2107c <my_re_intuit_start@@Base+0xa08>  // b.none
   20928:	and	w0, w0, #0xff
   2092c:	cmp	w0, #0xf
   20930:	b.eq	210b0 <my_re_intuit_start@@Base+0xa3c>  // b.none
   20934:	ldr	x0, [sp, #136]
   20938:	ldr	x0, [x0]
   2093c:	ldr	x21, [x0, #16]
   20940:	ldrb	w0, [sp, #322]
   20944:	add	x1, x22, x24
   20948:	str	x1, [sp, #168]
   2094c:	cbnz	w0, 210e4 <my_re_intuit_start@@Base+0xa70>
   20950:	ldr	w0, [x20, #2368]
   20954:	tbnz	w0, #20, 20964 <my_re_intuit_start@@Base+0x2f0>
   20958:	ldr	x0, [sp, #224]
   2095c:	tst	x0, #0xff00
   20960:	b.eq	20978 <my_re_intuit_start@@Base+0x304>  // b.none
   20964:	mov	x2, x24
   20968:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   2096c:	add	x1, x1, #0x238
   20970:	mov	x0, x20
   20974:	bl	50e0 <Perl_re_printf@plt>
   20978:	ldr	x0, [sp, #136]
   2097c:	ldr	w0, [x0, #12]
   20980:	and	w1, w0, #0xff
   20984:	cmp	w1, #0xb
   20988:	b.eq	210fc <my_re_intuit_start@@Base+0xa88>  // b.none
   2098c:	cmp	w1, #0xc
   20990:	b.eq	21120 <my_re_intuit_start@@Base+0xaac>  // b.none
   20994:	mov	w2, #0x2200                	// #8704
   20998:	tst	w0, w2
   2099c:	b.ne	21144 <my_re_intuit_start@@Base+0xad0>  // b.any
   209a0:	and	w0, w0, #0x7fc000
   209a4:	and	w0, w0, #0xffc07fff
   209a8:	cmp	w0, #0x404, lsl #12
   209ac:	b.ne	2119c <my_re_intuit_start@@Base+0xb28>  // b.any
   209b0:	cmp	w1, #0x6
   209b4:	b.ls	21168 <my_re_intuit_start@@Base+0xaf4>  // b.plast
   209b8:	ldr	x2, [sp, #136]
   209bc:	ldr	x0, [x2]
   209c0:	ldr	x0, [x0, #8]
   209c4:	cbz	x0, 2119c <my_re_intuit_start@@Base+0xb28>
   209c8:	ldrb	w0, [x0, #18]
   209cc:	cmp	w0, #0x42
   209d0:	b.ne	2118c <my_re_intuit_start@@Base+0xb18>  // b.any
   209d4:	ldr	x0, [sp, #136]
   209d8:	ldr	x0, [x0]
   209dc:	ldrb	w0, [x0, #40]
   209e0:	cbz	w0, 20a14 <my_re_intuit_start@@Base+0x3a0>
   209e4:	ldr	w0, [sp, #160]
   209e8:	cbnz	w0, 20a10 <my_re_intuit_start@@Base+0x39c>
   209ec:	ldr	x0, [sp, #168]
   209f0:	sub	x0, x23, x0
   209f4:	cmp	x0, x21
   209f8:	b.gt	211cc <my_re_intuit_start@@Base+0xb58>
   209fc:	sub	x1, x21, #0x1
   20a00:	cmp	x0, x1
   20a04:	b.lt	211cc <my_re_intuit_start@@Base+0xb58>  // b.tstop
   20a08:	cmp	x0, x21
   20a0c:	b.eq	211c0 <my_re_intuit_start@@Base+0xb4c>  // b.none
   20a10:	sub	x21, x21, #0x1
   20a14:	cbz	x21, 232f8 <my_re_intuit_start@@Base+0x2c84>
   20a18:	ldr	x3, [sp, #168]
   20a1c:	sub	x0, x23, x3
   20a20:	cmp	x0, x21
   20a24:	b.lt	20a58 <my_re_intuit_start@@Base+0x3e4>  // b.tstop
   20a28:	ldr	x0, [sp, #136]
   20a2c:	ldr	x0, [x0, #16]
   20a30:	ldrb	w2, [x0]
   20a34:	ldrb	w1, [x3]
   20a38:	cmp	w2, w1
   20a3c:	b.ne	20a58 <my_re_intuit_start@@Base+0x3e4>  // b.any
   20a40:	cmp	x21, #0x1
   20a44:	b.le	232f8 <my_re_intuit_start@@Base+0x2c84>
   20a48:	mov	x2, x21
   20a4c:	mov	x1, x3
   20a50:	bl	5460 <memcmp@plt>
   20a54:	cbz	w0, 232f8 <my_re_intuit_start@@Base+0x2c84>
   20a58:	ldr	w0, [x20, #2368]
   20a5c:	tbnz	w0, #20, 20a6c <my_re_intuit_start@@Base+0x3f8>
   20a60:	ldr	x0, [sp, #224]
   20a64:	tst	x0, #0xff00
   20a68:	b.eq	20a7c <my_re_intuit_start@@Base+0x408>  // b.none
   20a6c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   20a70:	add	x1, x1, #0x288
   20a74:	mov	x0, x20
   20a78:	bl	50e0 <Perl_re_printf@plt>
   20a7c:	ldr	x0, [x19, #88]
   20a80:	ldr	x19, [x0, #104]
   20a84:	cbz	x19, 23028 <my_re_intuit_start@@Base+0x29b4>
   20a88:	ldr	w1, [sp, #132]
   20a8c:	cbz	w1, 20a94 <my_re_intuit_start@@Base+0x420>
   20a90:	ldr	x19, [x0, #112]
   20a94:	ldr	w0, [x19, #12]
   20a98:	and	w1, w0, #0xff
   20a9c:	cmp	w1, #0x4
   20aa0:	b.ls	23034 <my_re_intuit_start@@Base+0x29c0>  // b.plast
   20aa4:	and	w0, w0, #0x7fc000
   20aa8:	and	w0, w0, #0xffc07fff
   20aac:	cmp	w0, #0x404, lsl #12
   20ab0:	b.ne	2308c <my_re_intuit_start@@Base+0x2a18>  // b.any
   20ab4:	cmp	w1, #0x6
   20ab8:	b.ls	23058 <my_re_intuit_start@@Base+0x29e4>  // b.plast
   20abc:	ldr	x0, [x19]
   20ac0:	ldr	x0, [x0, #8]
   20ac4:	cbz	x0, 2308c <my_re_intuit_start@@Base+0x2a18>
   20ac8:	ldrb	w0, [x0, #18]
   20acc:	cmp	w0, #0x42
   20ad0:	b.ne	2307c <my_re_intuit_start@@Base+0x2a08>  // b.any
   20ad4:	ldr	w0, [x19, #12]
   20ad8:	tbnz	w0, #8, 230b0 <my_re_intuit_start@@Base+0x2a3c>
   20adc:	ldr	x1, [x19]
   20ae0:	ldr	x0, [x1, #32]
   20ae4:	add	x0, x0, #0x5
   20ae8:	str	x0, [x1, #32]
   20aec:	ldr	w0, [x20, #2368]
   20af0:	tbnz	w0, #20, 20b04 <my_re_intuit_start@@Base+0x490>
   20af4:	ldr	x0, [sp, #224]
   20af8:	mov	x24, #0x0                   	// #0
   20afc:	tst	x0, #0xff00
   20b00:	b.eq	20b20 <my_re_intuit_start@@Base+0x4ac>  // b.none
   20b04:	ldr	x3, [x20, #1488]
   20b08:	ldr	x2, [x20, #1480]
   20b0c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   20b10:	add	x1, x1, #0x960
   20b14:	mov	x0, x20
   20b18:	bl	50e0 <Perl_re_printf@plt>
   20b1c:	mov	x24, #0x0                   	// #0
   20b20:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   20b24:	ldr	x0, [x0, #3920]
   20b28:	ldr	x1, [sp, #328]
   20b2c:	ldr	x0, [x0]
   20b30:	eor	x0, x1, x0
   20b34:	cbnz	x0, 234f0 <my_re_intuit_start@@Base+0x2e7c>
   20b38:	mov	x0, x24
   20b3c:	ldp	x19, x20, [sp, #32]
   20b40:	ldp	x21, x22, [sp, #48]
   20b44:	ldp	x23, x24, [sp, #64]
   20b48:	ldp	x25, x26, [sp, #80]
   20b4c:	ldp	x27, x28, [sp, #96]
   20b50:	ldp	x29, x30, [sp, #16]
   20b54:	add	sp, sp, #0x150
   20b58:	ret
   20b5c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20b60:	add	x3, x3, #0x330
   20b64:	add	x3, x3, #0x3e0
   20b68:	mov	w2, #0xb6                  	// #182
   20b6c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20b70:	add	x1, x1, #0xc80
   20b74:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   20b78:	add	x0, x0, #0x128
   20b7c:	bl	58e0 <__assert_fail@plt>
   20b80:	mov	x2, #0xff08                	// #65288
   20b84:	mov	x1, x24
   20b88:	mov	x0, x20
   20b8c:	bl	5310 <Perl_sv_setuv@plt>
   20b90:	b	20758 <my_re_intuit_start@@Base+0xe4>
   20b94:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20b98:	add	x3, x3, #0x330
   20b9c:	add	x3, x3, #0xd00
   20ba0:	mov	w2, #0x35e                 	// #862
   20ba4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20ba8:	add	x1, x1, #0xcb0
   20bac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   20bb0:	add	x0, x0, #0xda0
   20bb4:	bl	58e0 <__assert_fail@plt>
   20bb8:	and	w1, w1, #0xff
   20bbc:	sub	w1, w1, #0x9
   20bc0:	cmp	w1, #0x1
   20bc4:	b.hi	2078c <my_re_intuit_start@@Base+0x118>  // b.pmore
   20bc8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20bcc:	add	x3, x3, #0x330
   20bd0:	add	x3, x3, #0xd00
   20bd4:	mov	w2, #0x35e                 	// #862
   20bd8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20bdc:	add	x1, x1, #0xcb0
   20be0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   20be4:	add	x0, x0, #0xdd0
   20be8:	bl	58e0 <__assert_fail@plt>
   20bec:	mov	w2, #0x2                   	// #2
   20bf0:	mov	x1, x24
   20bf4:	mov	x0, x20
   20bf8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   20bfc:	b	20794 <my_re_intuit_start@@Base+0x120>
   20c00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20c04:	add	x3, x3, #0x330
   20c08:	add	x3, x3, #0xd00
   20c0c:	mov	w2, #0x360                 	// #864
   20c10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20c14:	add	x1, x1, #0xcb0
   20c18:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   20c1c:	add	x0, x0, #0x98
   20c20:	bl	58e0 <__assert_fail@plt>
   20c24:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20c28:	add	x3, x3, #0x330
   20c2c:	add	x3, x3, #0xd00
   20c30:	mov	w2, #0x360                 	// #864
   20c34:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20c38:	add	x1, x1, #0xcb0
   20c3c:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   20c40:	add	x0, x0, #0xfa8
   20c44:	bl	58e0 <__assert_fail@plt>
   20c48:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20c4c:	add	x3, x3, #0x330
   20c50:	add	x3, x3, #0xd00
   20c54:	mov	w2, #0x360                 	// #864
   20c58:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20c5c:	add	x1, x1, #0xcb0
   20c60:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   20c64:	add	x0, x0, #0x660
   20c68:	bl	58e0 <__assert_fail@plt>
   20c6c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20c70:	add	x3, x3, #0x330
   20c74:	add	x3, x3, #0xd00
   20c78:	mov	w2, #0x36d                 	// #877
   20c7c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20c80:	add	x1, x1, #0xcb0
   20c84:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   20c88:	add	x0, x0, #0xfe8
   20c8c:	bl	58e0 <__assert_fail@plt>
   20c90:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20c94:	add	x3, x3, #0x330
   20c98:	add	x3, x3, #0xd00
   20c9c:	mov	w2, #0x36e                 	// #878
   20ca0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20ca4:	add	x1, x1, #0xcb0
   20ca8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20cac:	add	x0, x0, #0x10
   20cb0:	bl	58e0 <__assert_fail@plt>
   20cb4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20cb8:	add	x3, x3, #0x330
   20cbc:	add	x3, x3, #0xd00
   20cc0:	mov	w2, #0x36f                 	// #879
   20cc4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20cc8:	add	x1, x1, #0xcb0
   20ccc:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20cd0:	add	x0, x0, #0x38
   20cd4:	bl	58e0 <__assert_fail@plt>
   20cd8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20cdc:	add	x3, x3, #0x330
   20ce0:	add	x3, x3, #0xd00
   20ce4:	mov	w2, #0x370                 	// #880
   20ce8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20cec:	add	x1, x1, #0xcb0
   20cf0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20cf4:	add	x0, x0, #0x60
   20cf8:	bl	58e0 <__assert_fail@plt>
   20cfc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20d00:	add	x3, x3, #0x330
   20d04:	add	x3, x3, #0xd00
   20d08:	mov	w2, #0x371                 	// #881
   20d0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20d10:	add	x1, x1, #0xcb0
   20d14:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20d18:	add	x0, x0, #0x88
   20d1c:	bl	58e0 <__assert_fail@plt>
   20d20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20d24:	add	x3, x3, #0x330
   20d28:	add	x3, x3, #0xd00
   20d2c:	mov	w2, #0x372                 	// #882
   20d30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20d34:	add	x1, x1, #0xcb0
   20d38:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20d3c:	add	x0, x0, #0xb0
   20d40:	bl	58e0 <__assert_fail@plt>
   20d44:	ldr	x3, [x0, #24]
   20d48:	cbnz	x3, 20804 <my_re_intuit_start@@Base+0x190>
   20d4c:	b	20814 <my_re_intuit_start@@Base+0x1a0>
   20d50:	ldr	x0, [x0, #64]
   20d54:	cbnz	x0, 2080c <my_re_intuit_start@@Base+0x198>
   20d58:	b	20814 <my_re_intuit_start@@Base+0x1a0>
   20d5c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20d60:	add	x3, x3, #0x330
   20d64:	add	x3, x3, #0xd00
   20d68:	mov	w2, #0x37a                 	// #890
   20d6c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20d70:	add	x1, x1, #0xcb0
   20d74:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20d78:	add	x0, x0, #0xd8
   20d7c:	bl	58e0 <__assert_fail@plt>
   20d80:	ldr	w0, [x20, #2368]
   20d84:	tbnz	w0, #20, 20d94 <my_re_intuit_start@@Base+0x720>
   20d88:	ldr	x0, [sp, #224]
   20d8c:	tst	x0, #0xff00
   20d90:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   20d94:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   20d98:	add	x1, x1, #0x170
   20d9c:	mov	x0, x20
   20da0:	bl	50e0 <Perl_re_printf@plt>
   20da4:	b	20aec <my_re_intuit_start@@Base+0x478>
   20da8:	ldr	w0, [x19, #56]
   20dac:	and	w0, w0, #0xffefffff
   20db0:	str	w0, [x19, #56]
   20db4:	strb	wzr, [sp, #322]
   20db8:	str	xzr, [sp, #288]
   20dbc:	str	x27, [sp, #240]
   20dc0:	str	x23, [sp, #248]
   20dc4:	ldr	w0, [x21, #12]
   20dc8:	ubfx	x0, x0, #29, #1
   20dcc:	strb	w0, [sp, #321]
   20dd0:	mov	w0, #0x1                   	// #1
   20dd4:	strb	w0, [sp, #320]
   20dd8:	str	wzr, [sp, #304]
   20ddc:	ldr	x0, [x19, #88]
   20de0:	ldr	x1, [x0, #104]
   20de4:	cbz	x1, 20e1c <my_re_intuit_start@@Base+0x7a8>
   20de8:	ldr	x0, [x19, #88]
   20dec:	ldr	x0, [x0, #104]
   20df0:	str	x0, [sp, #136]
   20df4:	b	20884 <my_re_intuit_start@@Base+0x210>
   20df8:	ldr	x1, [x0, #24]
   20dfc:	cbz	x1, 20870 <my_re_intuit_start@@Base+0x1fc>
   20e00:	mov	x1, x19
   20e04:	mov	x0, x20
   20e08:	bl	6804 <Perl__inverse_folds@plt+0xe04>
   20e0c:	b	20878 <my_re_intuit_start@@Base+0x204>
   20e10:	ldr	x0, [x0, #64]
   20e14:	cbnz	x0, 20e00 <my_re_intuit_start@@Base+0x78c>
   20e18:	b	20878 <my_re_intuit_start@@Base+0x204>
   20e1c:	ldr	x0, [x0, #112]
   20e20:	cbz	x0, 20de8 <my_re_intuit_start@@Base+0x774>
   20e24:	mov	x1, x19
   20e28:	mov	x0, x20
   20e2c:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   20e30:	and	w0, w0, #0xff
   20e34:	cbnz	w0, 20de8 <my_re_intuit_start@@Base+0x774>
   20e38:	ldr	w0, [x20, #2368]
   20e3c:	tbnz	w0, #20, 20e4c <my_re_intuit_start@@Base+0x7d8>
   20e40:	ldr	x0, [sp, #224]
   20e44:	tst	x0, #0xff00
   20e48:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   20e4c:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   20e50:	add	x2, x2, #0x330
   20e54:	add	x2, x2, #0xd18
   20e58:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   20e5c:	add	x1, x1, #0xb50
   20e60:	mov	x0, x20
   20e64:	bl	50e0 <Perl_re_printf@plt>
   20e68:	b	20aec <my_re_intuit_start@@Base+0x478>
   20e6c:	mov	w24, #0x0                   	// #0
   20e70:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20e74:	add	x0, x0, #0x1d8
   20e78:	str	x0, [sp, #160]
   20e7c:	str	w28, [sp, #168]
   20e80:	str	w26, [sp, #176]
   20e84:	str	x21, [sp, #184]
   20e88:	str	x27, [sp, #192]
   20e8c:	b	20f40 <my_re_intuit_start@@Base+0x8cc>
   20e90:	ldr	x1, [x19, #88]
   20e94:	sbfiz	x0, x24, #2, #32
   20e98:	add	x0, x0, w24, sxtw
   20e9c:	add	x0, x1, x0, lsl #3
   20ea0:	ldr	x21, [x0, #24]
   20ea4:	b	20f5c <my_re_intuit_start@@Base+0x8e8>
   20ea8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20eac:	add	x3, x3, #0x330
   20eb0:	add	x3, x3, #0xd00
   20eb4:	mov	w2, #0x3b0                 	// #944
   20eb8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20ebc:	add	x1, x1, #0xcb0
   20ec0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20ec4:	add	x0, x0, #0x188
   20ec8:	bl	58e0 <__assert_fail@plt>
   20ecc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20ed0:	add	x3, x3, #0x330
   20ed4:	add	x3, x3, #0xd00
   20ed8:	mov	w2, #0x3b0                 	// #944
   20edc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20ee0:	add	x1, x1, #0xcb0
   20ee4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   20ee8:	add	x0, x0, #0xef8
   20eec:	bl	58e0 <__assert_fail@plt>
   20ef0:	ldr	w0, [x21, #12]
   20ef4:	tbnz	w0, #8, 20ff8 <my_re_intuit_start@@Base+0x984>
   20ef8:	ldr	x0, [x21]
   20efc:	ldr	x28, [x0, #32]
   20f00:	mov	x1, x21
   20f04:	mov	x0, x20
   20f08:	bl	5560 <Perl_sv_peek@plt>
   20f0c:	str	x0, [sp]
   20f10:	ldr	w7, [sp, #120]
   20f14:	mov	x6, x28
   20f18:	mov	x5, x27
   20f1c:	mov	x4, x26
   20f20:	mov	x3, x25
   20f24:	mov	w2, w24
   20f28:	ldr	x1, [sp, #160]
   20f2c:	mov	x0, x20
   20f30:	bl	50e0 <Perl_re_printf@plt>
   20f34:	add	w24, w24, #0x1
   20f38:	cmp	w24, #0x3
   20f3c:	b.eq	2101c <my_re_intuit_start@@Base+0x9a8>  // b.none
   20f40:	ldr	w0, [sp, #132]
   20f44:	cbz	w0, 20e90 <my_re_intuit_start@@Base+0x81c>
   20f48:	ldr	x1, [x19, #88]
   20f4c:	sbfiz	x0, x24, #2, #32
   20f50:	add	x0, x0, w24, sxtw
   20f54:	add	x0, x1, x0, lsl #3
   20f58:	ldr	x21, [x0, #32]
   20f5c:	cbz	x21, 20f34 <my_re_intuit_start@@Base+0x8c0>
   20f60:	ldr	x2, [x19, #88]
   20f64:	sxtw	x3, w24
   20f68:	sbfiz	x0, x24, #2, #32
   20f6c:	add	x1, x0, x3
   20f70:	add	x1, x2, x1, lsl #3
   20f74:	ldr	x25, [x1, #8]
   20f78:	ldr	x26, [x1, #16]
   20f7c:	ldr	x27, [x1, #40]
   20f80:	ldr	w0, [x21, #12]
   20f84:	and	w1, w0, #0xff
   20f88:	cmp	w1, #0x4
   20f8c:	b.ls	20ea8 <my_re_intuit_start@@Base+0x834>  // b.plast
   20f90:	mov	w2, #0x4000                	// #16384
   20f94:	movk	w2, #0x40, lsl #16
   20f98:	and	w0, w0, w2
   20f9c:	cmp	w0, w2
   20fa0:	b.ne	20fd4 <my_re_intuit_start@@Base+0x960>  // b.any
   20fa4:	cmp	w1, #0x6
   20fa8:	b.ls	20ecc <my_re_intuit_start@@Base+0x858>  // b.plast
   20fac:	ldr	x0, [x21]
   20fb0:	ldr	x0, [x0, #8]
   20fb4:	cbz	x0, 20fd4 <my_re_intuit_start@@Base+0x960>
   20fb8:	ldrb	w0, [x0, #18]
   20fbc:	cmp	w0, #0x42
   20fc0:	b.eq	20ef0 <my_re_intuit_start@@Base+0x87c>  // b.none
   20fc4:	mov	w1, #0x42                  	// #66
   20fc8:	mov	x0, x21
   20fcc:	bl	57d0 <Perl_mg_find@plt>
   20fd0:	cbnz	x0, 20ef0 <my_re_intuit_start@@Base+0x87c>
   20fd4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20fd8:	add	x3, x3, #0x330
   20fdc:	add	x3, x3, #0xd00
   20fe0:	mov	w2, #0x3b0                 	// #944
   20fe4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   20fe8:	add	x1, x1, #0xcb0
   20fec:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   20ff0:	add	x0, x0, #0x1a8
   20ff4:	bl	58e0 <__assert_fail@plt>
   20ff8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   20ffc:	add	x3, x3, #0x330
   21000:	add	x3, x3, #0xd00
   21004:	mov	w2, #0x3b0                 	// #944
   21008:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2100c:	add	x1, x1, #0xcb0
   21010:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   21014:	add	x0, x0, #0x1c0
   21018:	bl	58e0 <__assert_fail@plt>
   2101c:	ldr	w28, [sp, #168]
   21020:	ldr	w26, [sp, #176]
   21024:	ldr	x21, [sp, #184]
   21028:	ldr	x27, [sp, #192]
   2102c:	b	208a4 <my_re_intuit_start@@Base+0x230>
   21030:	ldr	w0, [x20, #2368]
   21034:	tbnz	w0, #20, 21044 <my_re_intuit_start@@Base+0x9d0>
   21038:	ldr	x0, [sp, #224]
   2103c:	tst	x0, #0xff00
   21040:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   21044:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21048:	add	x1, x1, #0x220
   2104c:	mov	x0, x20
   21050:	bl	50e0 <Perl_re_printf@plt>
   21054:	b	20aec <my_re_intuit_start@@Base+0x478>
   21058:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2105c:	add	x3, x3, #0x330
   21060:	add	x3, x3, #0xd00
   21064:	mov	w2, #0x3e2                 	// #994
   21068:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2106c:	add	x1, x1, #0xcb0
   21070:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21074:	add	x0, x0, #0xe40
   21078:	bl	58e0 <__assert_fail@plt>
   2107c:	and	w1, w0, #0xff
   21080:	sub	w1, w1, #0x9
   21084:	cmp	w1, #0x1
   21088:	b.hi	20928 <my_re_intuit_start@@Base+0x2b4>  // b.pmore
   2108c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21090:	add	x3, x3, #0x330
   21094:	add	x3, x3, #0xd00
   21098:	mov	w2, #0x3e2                 	// #994
   2109c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   210a0:	add	x1, x1, #0xcb0
   210a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   210a8:	add	x0, x0, #0xe70
   210ac:	bl	58e0 <__assert_fail@plt>
   210b0:	ldr	x0, [sp, #136]
   210b4:	ldr	x0, [x0]
   210b8:	ldrb	w0, [x0, #129]
   210bc:	tbnz	w0, #6, 20934 <my_re_intuit_start@@Base+0x2c0>
   210c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   210c4:	add	x3, x3, #0x330
   210c8:	add	x3, x3, #0xd00
   210cc:	mov	w2, #0x3e2                 	// #994
   210d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   210d4:	add	x1, x1, #0xcb0
   210d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   210dc:	add	x0, x0, #0xe88
   210e0:	bl	58e0 <__assert_fail@plt>
   210e4:	mov	x2, x23
   210e8:	mov	x1, x24
   210ec:	mov	x0, x22
   210f0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   210f4:	str	x0, [sp, #168]
   210f8:	b	20950 <my_re_intuit_start@@Base+0x2dc>
   210fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21100:	add	x3, x3, #0x330
   21104:	add	x3, x3, #0xd00
   21108:	mov	w2, #0x3e9                 	// #1001
   2110c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21110:	add	x1, x1, #0xcb0
   21114:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21118:	add	x0, x0, #0xf18
   2111c:	bl	58e0 <__assert_fail@plt>
   21120:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21124:	add	x3, x3, #0x330
   21128:	add	x3, x3, #0xd00
   2112c:	mov	w2, #0x3e9                 	// #1001
   21130:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21134:	add	x1, x1, #0xcb0
   21138:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2113c:	add	x0, x0, #0xf38
   21140:	bl	58e0 <__assert_fail@plt>
   21144:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21148:	add	x3, x3, #0x330
   2114c:	add	x3, x3, #0xd00
   21150:	mov	w2, #0x3e9                 	// #1001
   21154:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21158:	add	x1, x1, #0xcb0
   2115c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21160:	add	x0, x0, #0xf58
   21164:	bl	58e0 <__assert_fail@plt>
   21168:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2116c:	add	x3, x3, #0x330
   21170:	add	x3, x3, #0xd00
   21174:	mov	w2, #0x3e9                 	// #1001
   21178:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2117c:	add	x1, x1, #0xcb0
   21180:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21184:	add	x0, x0, #0xef8
   21188:	bl	58e0 <__assert_fail@plt>
   2118c:	mov	w1, #0x42                  	// #66
   21190:	mov	x0, x2
   21194:	bl	57d0 <Perl_mg_find@plt>
   21198:	cbnz	x0, 209d4 <my_re_intuit_start@@Base+0x360>
   2119c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   211a0:	add	x3, x3, #0x330
   211a4:	add	x3, x3, #0xd00
   211a8:	mov	w2, #0x3e9                 	// #1001
   211ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   211b0:	add	x1, x1, #0xcb0
   211b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   211b8:	add	x0, x0, #0xf80
   211bc:	bl	58e0 <__assert_fail@plt>
   211c0:	ldurb	w0, [x23, #-1]
   211c4:	cmp	w0, #0xa
   211c8:	b.eq	20a10 <my_re_intuit_start@@Base+0x39c>  // b.none
   211cc:	ldr	w0, [x20, #2368]
   211d0:	tbnz	w0, #20, 211e0 <my_re_intuit_start@@Base+0xb6c>
   211d4:	ldr	x0, [sp, #224]
   211d8:	tst	x0, #0xff00
   211dc:	b.eq	20a7c <my_re_intuit_start@@Base+0x408>  // b.none
   211e0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   211e4:	add	x1, x1, #0x270
   211e8:	mov	x0, x20
   211ec:	bl	50e0 <Perl_re_printf@plt>
   211f0:	b	20a7c <my_re_intuit_start@@Base+0x408>
   211f4:	str	wzr, [sp, #120]
   211f8:	ldr	x0, [x19, #88]
   211fc:	ldr	x25, [x0, #120]
   21200:	str	x22, [sp, #176]
   21204:	mov	x24, x22
   21208:	tbnz	x25, #63, 21530 <my_re_intuit_start@@Base+0xebc>
   2120c:	ldr	w0, [x20, #2368]
   21210:	tbnz	w0, #20, 21694 <my_re_intuit_start@@Base+0x1020>
   21214:	ldr	x1, [sp, #224]
   21218:	mov	x0, #0x2                   	// #2
   2121c:	movk	x0, #0x10, lsl #16
   21220:	bics	xzr, x0, x1
   21224:	b.eq	21694 <my_re_intuit_start@@Base+0x1020>  // b.none
   21228:	ldrb	w0, [sp, #322]
   2122c:	cbnz	w0, 216c0 <my_re_intuit_start@@Base+0x104c>
   21230:	sub	x21, x23, x25
   21234:	cmp	x21, x24
   21238:	b.cc	20a7c <my_re_intuit_start@@Base+0x408>  // b.lo, b.ul, b.last
   2123c:	ldr	x0, [sp, #144]
   21240:	add	x26, x24, x0
   21244:	cmp	x21, x26
   21248:	b.cc	20a7c <my_re_intuit_start@@Base+0x408>  // b.lo, b.ul, b.last
   2124c:	cbz	x26, 20a7c <my_re_intuit_start@@Base+0x408>
   21250:	ldr	w0, [sp, #120]
   21254:	cbnz	w0, 2138c <my_re_intuit_start@@Base+0xd18>
   21258:	ldr	w0, [x19, #100]
   2125c:	tst	w0, #0x1c00
   21260:	b.eq	2138c <my_re_intuit_start@@Base+0xd18>  // b.none
   21264:	ldr	x0, [x19, #88]
   21268:	ldr	x1, [x0, #96]
   2126c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   21270:	cmp	x1, x0
   21274:	b.eq	2138c <my_re_intuit_start@@Base+0xd18>  // b.none
   21278:	ldr	x0, [sp, #136]
   2127c:	ldr	w0, [x0, #12]
   21280:	and	w2, w0, #0xf
   21284:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   21288:	ldr	x1, [x1, #3888]
   2128c:	ldrb	w1, [x1, w2, uxtw]
   21290:	cbz	w1, 216f0 <my_re_intuit_start@@Base+0x107c>
   21294:	and	w1, w0, #0xc000
   21298:	cmp	w1, #0x8, lsl #12
   2129c:	b.eq	21714 <my_re_intuit_start@@Base+0x10a0>  // b.none
   212a0:	and	w1, w0, #0xff
   212a4:	cmp	w1, #0xf
   212a8:	b.eq	21748 <my_re_intuit_start@@Base+0x10d4>  // b.none
   212ac:	ldr	x2, [sp, #136]
   212b0:	ldr	x2, [x2]
   212b4:	ldr	x3, [x2, #16]
   212b8:	str	x3, [sp, #184]
   212bc:	cmp	w1, #0xb
   212c0:	b.eq	21788 <my_re_intuit_start@@Base+0x1114>  // b.none
   212c4:	cmp	w1, #0xc
   212c8:	b.eq	217ac <my_re_intuit_start@@Base+0x1138>  // b.none
   212cc:	mov	w3, #0x2200                	// #8704
   212d0:	tst	w0, w3
   212d4:	b.ne	217d0 <my_re_intuit_start@@Base+0x115c>  // b.any
   212d8:	and	w0, w0, #0x7fc000
   212dc:	and	w0, w0, #0xffc07fff
   212e0:	cmp	w0, #0x404, lsl #12
   212e4:	b.ne	21828 <my_re_intuit_start@@Base+0x11b4>  // b.any
   212e8:	cmp	w1, #0x6
   212ec:	b.ls	217f4 <my_re_intuit_start@@Base+0x1180>  // b.plast
   212f0:	ldr	x0, [x2, #8]
   212f4:	cbz	x0, 21828 <my_re_intuit_start@@Base+0x11b4>
   212f8:	ldrb	w0, [x0, #18]
   212fc:	cmp	w0, #0x42
   21300:	b.ne	21818 <my_re_intuit_start@@Base+0x11a4>  // b.any
   21304:	ldr	x0, [sp, #136]
   21308:	ldr	x0, [x0]
   2130c:	ldrb	w2, [x0, #40]
   21310:	ldr	x0, [sp, #184]
   21314:	sub	x1, x0, x2
   21318:	str	x1, [sp, #168]
   2131c:	ldr	w0, [x19, #100]
   21320:	tst	x0, #0x1000
   21324:	csel	x0, x22, x27, ne  // ne = any
   21328:	sub	x3, x21, x0
   2132c:	cmp	x1, x3
   21330:	b.gt	2184c <my_re_intuit_start@@Base+0x11d8>
   21334:	ldr	x1, [sp, #168]
   21338:	add	x1, x0, x1
   2133c:	cmp	x21, x1
   21340:	b.cc	21874 <my_re_intuit_start@@Base+0x1200>  // b.lo, b.ul, b.last
   21344:	ldr	x1, [x19, #88]
   21348:	ldr	x1, [x1, #96]
   2134c:	ldr	x4, [sp, #168]
   21350:	add	x4, x1, x4
   21354:	cmp	x4, x3
   21358:	b.ge	2138c <my_re_intuit_start@@Base+0xd18>  // b.tcont
   2135c:	ldrb	w3, [sp, #322]
   21360:	cbnz	w3, 21898 <my_re_intuit_start@@Base+0x1224>
   21364:	ldr	x3, [sp, #184]
   21368:	sub	x2, x2, x3
   2136c:	add	x21, x21, x2
   21370:	add	x0, x0, x1
   21374:	cmp	x21, x0
   21378:	csel	x21, x21, x0, ls  // ls = plast
   2137c:	ldr	x0, [sp, #168]
   21380:	add	x21, x21, x0
   21384:	cmp	x26, x21
   21388:	b.hi	20a7c <my_re_intuit_start@@Base+0x408>  // b.pmore
   2138c:	ldr	w4, [sp, #160]
   21390:	ldr	x3, [sp, #136]
   21394:	mov	x2, x21
   21398:	mov	x1, x26
   2139c:	mov	x0, x20
   213a0:	bl	5060 <Perl_fbm_instr@plt>
   213a4:	str	x0, [sp, #168]
   213a8:	ldr	w0, [x20, #2368]
   213ac:	tbnz	w0, #20, 213bc <my_re_intuit_start@@Base+0xd48>
   213b0:	ldr	x0, [sp, #224]
   213b4:	tst	x0, #0xff00
   213b8:	b.eq	213e4 <my_re_intuit_start@@Base+0xd70>  // b.none
   213bc:	ldr	x0, [sp, #168]
   213c0:	sub	x4, x0, x27
   213c4:	cmp	x0, #0x0
   213c8:	csinv	x4, x4, xzr, ne  // ne = any
   213cc:	sub	x3, x21, x27
   213d0:	sub	x2, x26, x27
   213d4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   213d8:	add	x1, x1, #0x390
   213dc:	mov	x0, x20
   213e0:	bl	50e0 <Perl_re_printf@plt>
   213e4:	ldr	w0, [x20, #2368]
   213e8:	tbnz	w0, #20, 213f8 <my_re_intuit_start@@Base+0xd84>
   213ec:	ldr	x0, [sp, #224]
   213f0:	tst	x0, #0xff00
   213f4:	b.eq	231e4 <my_re_intuit_start@@Base+0x2b70>  // b.none
   213f8:	ldr	w0, [x20, #2964]
   213fc:	and	w2, w0, #0xf
   21400:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   21404:	ldr	x1, [x1, #3888]
   21408:	ldrb	w1, [x1, w2, uxtw]
   2140c:	cbz	w1, 218b0 <my_re_intuit_start@@Base+0x123c>
   21410:	and	w1, w0, #0xc000
   21414:	cmp	w1, #0x8, lsl #12
   21418:	b.eq	218d4 <my_re_intuit_start@@Base+0x1260>  // b.none
   2141c:	and	w0, w0, #0xff
   21420:	cmp	w0, #0xf
   21424:	b.eq	21908 <my_re_intuit_start@@Base+0x1294>  // b.none
   21428:	ldr	x0, [x20, #2968]
   2142c:	strb	wzr, [x0]
   21430:	ldr	x0, [x20, #2952]
   21434:	str	xzr, [x0, #16]
   21438:	add	x21, x20, #0xb88
   2143c:	ldr	x0, [sp, #136]
   21440:	ldr	x1, [x0, #16]
   21444:	str	x1, [sp, #184]
   21448:	ldr	w0, [x0, #12]
   2144c:	and	w2, w0, #0xf
   21450:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   21454:	ldr	x1, [x1, #3888]
   21458:	ldrb	w1, [x1, w2, uxtw]
   2145c:	cbz	w1, 21938 <my_re_intuit_start@@Base+0x12c4>
   21460:	and	w1, w0, #0xc000
   21464:	cmp	w1, #0x8, lsl #12
   21468:	b.eq	2195c <my_re_intuit_start@@Base+0x12e8>  // b.none
   2146c:	and	w1, w0, #0xff
   21470:	cmp	w1, #0xf
   21474:	b.eq	21990 <my_re_intuit_start@@Base+0x131c>  // b.none
   21478:	ldr	x2, [sp, #136]
   2147c:	ldr	x2, [x2]
   21480:	ldr	x26, [x2, #16]
   21484:	cmp	w1, #0xb
   21488:	b.eq	219cc <my_re_intuit_start@@Base+0x1358>  // b.none
   2148c:	cmp	w1, #0xc
   21490:	b.eq	219f0 <my_re_intuit_start@@Base+0x137c>  // b.none
   21494:	mov	w3, #0x2200                	// #8704
   21498:	tst	w0, w3
   2149c:	b.ne	21a14 <my_re_intuit_start@@Base+0x13a0>  // b.any
   214a0:	and	w0, w0, #0x7fc000
   214a4:	and	w0, w0, #0xffc07fff
   214a8:	cmp	w0, #0x404, lsl #12
   214ac:	b.ne	21a6c <my_re_intuit_start@@Base+0x13f8>  // b.any
   214b0:	cmp	w1, #0x6
   214b4:	b.ls	21a38 <my_re_intuit_start@@Base+0x13c4>  // b.plast
   214b8:	ldr	x0, [x2, #8]
   214bc:	cbz	x0, 21a6c <my_re_intuit_start@@Base+0x13f8>
   214c0:	ldrb	w0, [x0, #18]
   214c4:	cmp	w0, #0x42
   214c8:	b.ne	21a5c <my_re_intuit_start@@Base+0x13e8>  // b.any
   214cc:	ldr	x0, [sp, #136]
   214d0:	ldr	x0, [x0]
   214d4:	ldrb	w3, [x0, #40]
   214d8:	sub	x3, x26, x3
   214dc:	ldr	x5, [x20, #1448]
   214e0:	ldr	x6, [x20, #1456]
   214e4:	ldr	w0, [sp, #132]
   214e8:	cbnz	w0, 230d4 <my_re_intuit_start@@Base+0x2a60>
   214ec:	mov	w7, #0x8403                	// #33795
   214f0:	mov	x4, #0x1e                  	// #30
   214f4:	ldr	x2, [sp, #184]
   214f8:	mov	x1, x21
   214fc:	mov	x0, x20
   21500:	bl	53f0 <Perl_pv_pretty@plt>
   21504:	str	x0, [sp, #184]
   21508:	adrp	x26, 6a000 <boot_re@@Base+0x841c>
   2150c:	add	x26, x26, #0xf50
   21510:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   21514:	add	x0, x0, #0xf48
   21518:	ldr	x1, [sp, #168]
   2151c:	cmp	x1, #0x0
   21520:	csel	x26, x0, x26, ne  // ne = any
   21524:	ldr	x0, [x19, #88]
   21528:	ldr	x1, [x0, #24]
   2152c:	b	23114 <my_re_intuit_start@@Base+0x2aa0>
   21530:	ldr	w0, [x21, #12]
   21534:	and	w2, w0, #0xf
   21538:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2153c:	ldr	x1, [x1, #3888]
   21540:	ldrb	w1, [x1, w2, uxtw]
   21544:	cbz	w1, 215b4 <my_re_intuit_start@@Base+0xf40>
   21548:	and	w1, w0, #0xc000
   2154c:	cmp	w1, #0x8, lsl #12
   21550:	b.eq	215d8 <my_re_intuit_start@@Base+0xf64>  // b.none
   21554:	and	w1, w0, #0xff
   21558:	cmp	w1, #0xf
   2155c:	b.ne	21630 <my_re_intuit_start@@Base+0xfbc>  // b.any
   21560:	ldr	x1, [x21]
   21564:	ldrb	w1, [x1, #129]
   21568:	tbz	w1, #6, 2160c <my_re_intuit_start@@Base+0xf98>
   2156c:	ldr	x3, [x21, #16]
   21570:	ldr	x2, [x21]
   21574:	mov	w1, #0x80ff                	// #33023
   21578:	movk	w1, #0x100, lsl #16
   2157c:	and	w0, w0, w1
   21580:	mov	w1, #0xa                   	// #10
   21584:	movk	w1, #0x100, lsl #16
   21588:	cmp	w0, w1
   2158c:	b.eq	21640 <my_re_intuit_start@@Base+0xfcc>  // b.none
   21590:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21594:	add	x3, x3, #0x330
   21598:	add	x3, x3, #0x3e0
   2159c:	mov	w2, #0xb6                  	// #182
   215a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   215a4:	add	x1, x1, #0xc80
   215a8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   215ac:	add	x0, x0, #0x128
   215b0:	bl	58e0 <__assert_fail@plt>
   215b4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   215b8:	add	x3, x3, #0x330
   215bc:	add	x3, x3, #0xd00
   215c0:	mov	w2, #0x40e                 	// #1038
   215c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   215c8:	add	x1, x1, #0xcb0
   215cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   215d0:	add	x0, x0, #0xd10
   215d4:	bl	58e0 <__assert_fail@plt>
   215d8:	and	w1, w0, #0xff
   215dc:	sub	w1, w1, #0x9
   215e0:	cmp	w1, #0x1
   215e4:	b.hi	21554 <my_re_intuit_start@@Base+0xee0>  // b.pmore
   215e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   215ec:	add	x3, x3, #0x330
   215f0:	add	x3, x3, #0xd00
   215f4:	mov	w2, #0x40e                 	// #1038
   215f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   215fc:	add	x1, x1, #0xcb0
   21600:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21604:	add	x0, x0, #0xd40
   21608:	bl	58e0 <__assert_fail@plt>
   2160c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21610:	add	x3, x3, #0x330
   21614:	add	x3, x3, #0xd00
   21618:	mov	w2, #0x40e                 	// #1038
   2161c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21620:	add	x1, x1, #0xcb0
   21624:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21628:	add	x0, x0, #0xd58
   2162c:	bl	58e0 <__assert_fail@plt>
   21630:	ldr	x3, [x21, #16]
   21634:	ldr	x2, [x21]
   21638:	cmp	w1, #0x8
   2163c:	b.ne	21660 <my_re_intuit_start@@Base+0xfec>  // b.any
   21640:	ldrb	w0, [x2, #184]
   21644:	and	x0, x0, #0xf
   21648:	add	x3, x3, x0
   2164c:	mov	x2, x25
   21650:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21654:	add	x1, x1, #0x2a0
   21658:	mov	x0, x20
   2165c:	bl	5420 <Perl_croak@plt>
   21660:	mov	w4, #0x80ff                	// #33023
   21664:	movk	w4, #0x100, lsl #16
   21668:	and	w0, w0, w4
   2166c:	mov	w4, #0xa                   	// #10
   21670:	movk	w4, #0x100, lsl #16
   21674:	cmp	w0, w4
   21678:	b.ne	21590 <my_re_intuit_start@@Base+0xf1c>  // b.any
   2167c:	cmp	w1, #0xa
   21680:	b.ne	21640 <my_re_intuit_start@@Base+0xfcc>  // b.any
   21684:	ldr	x2, [x2, #24]
   21688:	b	21640 <my_re_intuit_start@@Base+0xfcc>
   2168c:	str	w26, [sp, #120]
   21690:	b	2120c <my_re_intuit_start@@Base+0xb98>
   21694:	ldr	x0, [x19, #88]
   21698:	ldr	x6, [x0, #120]
   2169c:	mov	x5, x25
   216a0:	ldr	x4, [sp, #144]
   216a4:	ldr	x3, [x0, #88]
   216a8:	sub	x2, x24, x27
   216ac:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   216b0:	add	x1, x1, #0x2c8
   216b4:	mov	x0, x20
   216b8:	bl	50e0 <Perl_re_printf@plt>
   216bc:	b	21228 <my_re_intuit_start@@Base+0xbb4>
   216c0:	mov	x2, x24
   216c4:	neg	x1, x25
   216c8:	mov	x0, x23
   216cc:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   216d0:	mov	x21, x0
   216d4:	cbz	x0, 20a7c <my_re_intuit_start@@Base+0x408>
   216d8:	mov	x2, x0
   216dc:	ldr	x1, [sp, #144]
   216e0:	mov	x0, x24
   216e4:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   216e8:	mov	x26, x0
   216ec:	b	2124c <my_re_intuit_start@@Base+0xbd8>
   216f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   216f4:	add	x3, x3, #0x330
   216f8:	add	x3, x3, #0xd00
   216fc:	mov	w2, #0x450                 	// #1104
   21700:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21704:	add	x1, x1, #0xcb0
   21708:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2170c:	add	x0, x0, #0xe40
   21710:	bl	58e0 <__assert_fail@plt>
   21714:	and	w1, w0, #0xff
   21718:	sub	w1, w1, #0x9
   2171c:	cmp	w1, #0x1
   21720:	b.hi	212a0 <my_re_intuit_start@@Base+0xc2c>  // b.pmore
   21724:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21728:	add	x3, x3, #0x330
   2172c:	add	x3, x3, #0xd00
   21730:	mov	w2, #0x450                 	// #1104
   21734:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21738:	add	x1, x1, #0xcb0
   2173c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21740:	add	x0, x0, #0xe70
   21744:	bl	58e0 <__assert_fail@plt>
   21748:	ldr	x2, [sp, #136]
   2174c:	ldr	x2, [x2]
   21750:	ldrb	w3, [x2, #129]
   21754:	tbz	w3, #6, 21764 <my_re_intuit_start@@Base+0x10f0>
   21758:	ldr	x3, [x2, #16]
   2175c:	str	x3, [sp, #184]
   21760:	b	212cc <my_re_intuit_start@@Base+0xc58>
   21764:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21768:	add	x3, x3, #0x330
   2176c:	add	x3, x3, #0xd00
   21770:	mov	w2, #0x450                 	// #1104
   21774:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21778:	add	x1, x1, #0xcb0
   2177c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21780:	add	x0, x0, #0xe88
   21784:	bl	58e0 <__assert_fail@plt>
   21788:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2178c:	add	x3, x3, #0x330
   21790:	add	x3, x3, #0xd00
   21794:	mov	w2, #0x450                 	// #1104
   21798:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2179c:	add	x1, x1, #0xcb0
   217a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   217a4:	add	x0, x0, #0xf18
   217a8:	bl	58e0 <__assert_fail@plt>
   217ac:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   217b0:	add	x3, x3, #0x330
   217b4:	add	x3, x3, #0xd00
   217b8:	mov	w2, #0x450                 	// #1104
   217bc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   217c0:	add	x1, x1, #0xcb0
   217c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   217c8:	add	x0, x0, #0xf38
   217cc:	bl	58e0 <__assert_fail@plt>
   217d0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   217d4:	add	x3, x3, #0x330
   217d8:	add	x3, x3, #0xd00
   217dc:	mov	w2, #0x450                 	// #1104
   217e0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   217e4:	add	x1, x1, #0xcb0
   217e8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   217ec:	add	x0, x0, #0xf58
   217f0:	bl	58e0 <__assert_fail@plt>
   217f4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   217f8:	add	x3, x3, #0x330
   217fc:	add	x3, x3, #0xd00
   21800:	mov	w2, #0x450                 	// #1104
   21804:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21808:	add	x1, x1, #0xcb0
   2180c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21810:	add	x0, x0, #0xef8
   21814:	bl	58e0 <__assert_fail@plt>
   21818:	mov	w1, #0x42                  	// #66
   2181c:	ldr	x0, [sp, #136]
   21820:	bl	57d0 <Perl_mg_find@plt>
   21824:	cbnz	x0, 21304 <my_re_intuit_start@@Base+0xc90>
   21828:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2182c:	add	x3, x3, #0x330
   21830:	add	x3, x3, #0xd00
   21834:	mov	w2, #0x450                 	// #1104
   21838:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2183c:	add	x1, x1, #0xcb0
   21840:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21844:	add	x0, x0, #0xf80
   21848:	bl	58e0 <__assert_fail@plt>
   2184c:	ldr	w0, [x20, #2368]
   21850:	tbnz	w0, #20, 21860 <my_re_intuit_start@@Base+0x11ec>
   21854:	ldr	x0, [sp, #224]
   21858:	tst	x0, #0xff00
   2185c:	b.eq	20a7c <my_re_intuit_start@@Base+0x408>  // b.none
   21860:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21864:	add	x1, x1, #0x330
   21868:	mov	x0, x20
   2186c:	bl	50e0 <Perl_re_printf@plt>
   21870:	b	20a7c <my_re_intuit_start@@Base+0x408>
   21874:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21878:	add	x3, x3, #0x330
   2187c:	add	x3, x3, #0xd00
   21880:	mov	w2, #0x45f                 	// #1119
   21884:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21888:	add	x1, x1, #0xcb0
   2188c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   21890:	add	x0, x0, #0x368
   21894:	bl	58e0 <__assert_fail@plt>
   21898:	ldr	x3, [sp, #184]
   2189c:	sub	x2, x2, x3
   218a0:	add	x2, x21, x2
   218a4:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   218a8:	mov	x21, x0
   218ac:	b	2137c <my_re_intuit_start@@Base+0xd08>
   218b0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   218b4:	add	x3, x3, #0x330
   218b8:	add	x3, x3, #0xd00
   218bc:	mov	w2, #0x479                 	// #1145
   218c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   218c4:	add	x1, x1, #0xcb0
   218c8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   218cc:	add	x0, x0, #0xd10
   218d0:	bl	58e0 <__assert_fail@plt>
   218d4:	and	w1, w0, #0xff
   218d8:	sub	w1, w1, #0x9
   218dc:	cmp	w1, #0x1
   218e0:	b.hi	2141c <my_re_intuit_start@@Base+0xda8>  // b.pmore
   218e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   218e8:	add	x3, x3, #0x330
   218ec:	add	x3, x3, #0xd00
   218f0:	mov	w2, #0x479                 	// #1145
   218f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   218f8:	add	x1, x1, #0xcb0
   218fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21900:	add	x0, x0, #0xd40
   21904:	bl	58e0 <__assert_fail@plt>
   21908:	ldr	x0, [x20, #2952]
   2190c:	ldrb	w0, [x0, #129]
   21910:	tbnz	w0, #6, 21428 <my_re_intuit_start@@Base+0xdb4>
   21914:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21918:	add	x3, x3, #0x330
   2191c:	add	x3, x3, #0xd00
   21920:	mov	w2, #0x479                 	// #1145
   21924:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21928:	add	x1, x1, #0xcb0
   2192c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21930:	add	x0, x0, #0xd58
   21934:	bl	58e0 <__assert_fail@plt>
   21938:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2193c:	add	x3, x3, #0x330
   21940:	add	x3, x3, #0xd00
   21944:	mov	w2, #0x47a                 	// #1146
   21948:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2194c:	add	x1, x1, #0xcb0
   21950:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21954:	add	x0, x0, #0xe40
   21958:	bl	58e0 <__assert_fail@plt>
   2195c:	and	w1, w0, #0xff
   21960:	sub	w1, w1, #0x9
   21964:	cmp	w1, #0x1
   21968:	b.hi	2146c <my_re_intuit_start@@Base+0xdf8>  // b.pmore
   2196c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21970:	add	x3, x3, #0x330
   21974:	add	x3, x3, #0xd00
   21978:	mov	w2, #0x47a                 	// #1146
   2197c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21980:	add	x1, x1, #0xcb0
   21984:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21988:	add	x0, x0, #0xe70
   2198c:	bl	58e0 <__assert_fail@plt>
   21990:	ldr	x2, [sp, #136]
   21994:	ldr	x2, [x2]
   21998:	ldrb	w3, [x2, #129]
   2199c:	tbz	w3, #6, 219a8 <my_re_intuit_start@@Base+0x1334>
   219a0:	ldr	x26, [x2, #16]
   219a4:	b	21494 <my_re_intuit_start@@Base+0xe20>
   219a8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   219ac:	add	x3, x3, #0x330
   219b0:	add	x3, x3, #0xd00
   219b4:	mov	w2, #0x47a                 	// #1146
   219b8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   219bc:	add	x1, x1, #0xcb0
   219c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   219c4:	add	x0, x0, #0xe88
   219c8:	bl	58e0 <__assert_fail@plt>
   219cc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   219d0:	add	x3, x3, #0x330
   219d4:	add	x3, x3, #0xd00
   219d8:	mov	w2, #0x47a                 	// #1146
   219dc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   219e0:	add	x1, x1, #0xcb0
   219e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   219e8:	add	x0, x0, #0xf18
   219ec:	bl	58e0 <__assert_fail@plt>
   219f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   219f4:	add	x3, x3, #0x330
   219f8:	add	x3, x3, #0xd00
   219fc:	mov	w2, #0x47a                 	// #1146
   21a00:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21a04:	add	x1, x1, #0xcb0
   21a08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21a0c:	add	x0, x0, #0xf38
   21a10:	bl	58e0 <__assert_fail@plt>
   21a14:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21a18:	add	x3, x3, #0x330
   21a1c:	add	x3, x3, #0xd00
   21a20:	mov	w2, #0x47a                 	// #1146
   21a24:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21a28:	add	x1, x1, #0xcb0
   21a2c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21a30:	add	x0, x0, #0xf58
   21a34:	bl	58e0 <__assert_fail@plt>
   21a38:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21a3c:	add	x3, x3, #0x330
   21a40:	add	x3, x3, #0xd00
   21a44:	mov	w2, #0x47a                 	// #1146
   21a48:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21a4c:	add	x1, x1, #0xcb0
   21a50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21a54:	add	x0, x0, #0xef8
   21a58:	bl	58e0 <__assert_fail@plt>
   21a5c:	mov	w1, #0x42                  	// #66
   21a60:	ldr	x0, [sp, #136]
   21a64:	bl	57d0 <Perl_mg_find@plt>
   21a68:	cbnz	x0, 214cc <my_re_intuit_start@@Base+0xe58>
   21a6c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21a70:	add	x3, x3, #0x330
   21a74:	add	x3, x3, #0xd00
   21a78:	mov	w2, #0x47a                 	// #1146
   21a7c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21a80:	add	x1, x1, #0xcb0
   21a84:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21a88:	add	x0, x0, #0xf80
   21a8c:	bl	58e0 <__assert_fail@plt>
   21a90:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21a94:	add	x3, x3, #0x330
   21a98:	add	x3, x3, #0xd00
   21a9c:	mov	w2, #0x480                 	// #1152
   21aa0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21aa4:	add	x1, x1, #0xcb0
   21aa8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21aac:	add	x0, x0, #0xf18
   21ab0:	bl	58e0 <__assert_fail@plt>
   21ab4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21ab8:	add	x3, x3, #0x330
   21abc:	add	x3, x3, #0xd00
   21ac0:	mov	w2, #0x480                 	// #1152
   21ac4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21ac8:	add	x1, x1, #0xcb0
   21acc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21ad0:	add	x0, x0, #0xf38
   21ad4:	bl	58e0 <__assert_fail@plt>
   21ad8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21adc:	add	x3, x3, #0x330
   21ae0:	add	x3, x3, #0xd00
   21ae4:	mov	w2, #0x480                 	// #1152
   21ae8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21aec:	add	x1, x1, #0xcb0
   21af0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21af4:	add	x0, x0, #0xf58
   21af8:	bl	58e0 <__assert_fail@plt>
   21afc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21b00:	add	x3, x3, #0x330
   21b04:	add	x3, x3, #0xd00
   21b08:	mov	w2, #0x480                 	// #1152
   21b0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21b10:	add	x1, x1, #0xcb0
   21b14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21b18:	add	x0, x0, #0xef8
   21b1c:	bl	58e0 <__assert_fail@plt>
   21b20:	mov	w1, #0x42                  	// #66
   21b24:	mov	x0, x2
   21b28:	bl	57d0 <Perl_mg_find@plt>
   21b2c:	cbnz	x0, 23188 <my_re_intuit_start@@Base+0x2b14>
   21b30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21b34:	add	x3, x3, #0x330
   21b38:	add	x3, x3, #0xd00
   21b3c:	mov	w2, #0x480                 	// #1152
   21b40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21b44:	add	x1, x1, #0xcb0
   21b48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   21b4c:	add	x0, x0, #0xf80
   21b50:	bl	58e0 <__assert_fail@plt>
   21b54:	mov	x2, x24
   21b58:	neg	x1, x1
   21b5c:	ldr	x0, [sp, #168]
   21b60:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   21b64:	mov	x24, x0
   21b68:	b	23210 <my_re_intuit_start@@Base+0x2b9c>
   21b6c:	sbfiz	x0, x28, #2, #32
   21b70:	add	x0, x0, w28, sxtw
   21b74:	add	x0, x1, x0, lsl #3
   21b78:	ldr	x0, [x0, #24]
   21b7c:	cbnz	x0, 23258 <my_re_intuit_start@@Base+0x2be4>
   21b80:	ldr	w0, [x20, #2368]
   21b84:	tbnz	w0, #20, 2276c <my_re_intuit_start@@Base+0x20f8>
   21b88:	ldr	x2, [sp, #224]
   21b8c:	mov	x0, #0x2                   	// #2
   21b90:	movk	x0, #0x10, lsl #16
   21b94:	bics	xzr, x0, x2
   21b98:	b.eq	2276c <my_re_intuit_start@@Base+0x20f8>  // b.none
   21b9c:	cmp	x24, x27
   21ba0:	cset	w26, ne  // ne = any
   21ba4:	ldr	w0, [sp, #120]
   21ba8:	ands	w26, w0, w26
   21bac:	b.eq	22888 <my_re_intuit_start@@Base+0x2214>  // b.none
   21bb0:	ldurb	w0, [x24, #-1]
   21bb4:	cmp	w0, #0xa
   21bb8:	b.eq	22888 <my_re_intuit_start@@Base+0x2214>  // b.none
   21bbc:	ldr	w0, [x20, #2368]
   21bc0:	tbnz	w0, #20, 21bd0 <my_re_intuit_start@@Base+0x155c>
   21bc4:	ldr	x0, [sp, #224]
   21bc8:	tst	x0, #0xff00
   21bcc:	b.eq	21be0 <my_re_intuit_start@@Base+0x156c>  // b.none
   21bd0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21bd4:	add	x1, x1, #0x5c8
   21bd8:	mov	x0, x20
   21bdc:	bl	50e0 <Perl_re_printf@plt>
   21be0:	ldrb	w0, [sp, #322]
   21be4:	str	w0, [sp, #120]
   21be8:	cbnz	w0, 2279c <my_re_intuit_start@@Base+0x2128>
   21bec:	ldr	x2, [x19, #64]
   21bf0:	sub	x2, x23, x2
   21bf4:	cmp	x24, x2
   21bf8:	b.cs	227b8 <my_re_intuit_start@@Base+0x2144>  // b.hs, b.nlast
   21bfc:	sub	x2, x2, x24
   21c00:	mov	w1, #0xa                   	// #10
   21c04:	mov	x0, x24
   21c08:	bl	5750 <memchr@plt>
   21c0c:	cbz	x0, 227b8 <my_re_intuit_start@@Base+0x2144>
   21c10:	add	x24, x0, #0x1
   21c14:	ldr	x21, [x19, #88]
   21c18:	ldrb	w0, [x21]
   21c1c:	cbz	w0, 22800 <my_re_intuit_start@@Base+0x218c>
   21c20:	ldr	w0, [sp, #120]
   21c24:	cbnz	w0, 227e8 <my_re_intuit_start@@Base+0x2174>
   21c28:	ldr	x0, [x21, #88]
   21c2c:	ldr	x1, [sp, #168]
   21c30:	sub	x0, x1, x0
   21c34:	cmp	x0, x24
   21c38:	b.ls	22800 <my_re_intuit_start@@Base+0x218c>  // b.plast
   21c3c:	ldr	w0, [sp, #132]
   21c40:	cbz	w0, 22838 <my_re_intuit_start@@Base+0x21c4>
   21c44:	ldr	x0, [x21, #32]
   21c48:	cmp	x0, #0x0
   21c4c:	cset	w0, ne  // ne = any
   21c50:	str	w0, [sp, #120]
   21c54:	ldr	w0, [sp, #120]
   21c58:	cbnz	w0, 2284c <my_re_intuit_start@@Base+0x21d8>
   21c5c:	ldr	w0, [x20, #2368]
   21c60:	tbnz	w0, #20, 21c70 <my_re_intuit_start@@Base+0x15fc>
   21c64:	ldr	x0, [sp, #224]
   21c68:	tst	x0, #0xff00
   21c6c:	b.eq	228d4 <my_re_intuit_start@@Base+0x2260>  // b.none
   21c70:	sub	x4, x24, x27
   21c74:	ldr	x3, [x20, #1456]
   21c78:	ldr	x2, [x20, #1448]
   21c7c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21c80:	add	x1, x1, #0x6b8
   21c84:	mov	x0, x20
   21c88:	bl	50e0 <Perl_re_printf@plt>
   21c8c:	str	w26, [sp, #120]
   21c90:	b	228ac <my_re_intuit_start@@Base+0x2238>
   21c94:	mov	x1, x19
   21c98:	mov	x0, x20
   21c9c:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   21ca0:	and	w0, w0, #0xff
   21ca4:	cbnz	w0, 2327c <my_re_intuit_start@@Base+0x2c08>
   21ca8:	ldr	w0, [x20, #2368]
   21cac:	tbnz	w0, #20, 21cbc <my_re_intuit_start@@Base+0x1648>
   21cb0:	ldr	x0, [sp, #224]
   21cb4:	tst	x0, #0xff00
   21cb8:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   21cbc:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   21cc0:	add	x2, x2, #0x330
   21cc4:	add	x2, x2, #0xd18
   21cc8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   21ccc:	add	x1, x1, #0xb50
   21cd0:	mov	x0, x20
   21cd4:	bl	50e0 <Perl_re_printf@plt>
   21cd8:	b	20aec <my_re_intuit_start@@Base+0x478>
   21cdc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21ce0:	add	x3, x3, #0x330
   21ce4:	add	x3, x3, #0xd00
   21ce8:	mov	w2, #0x4da                 	// #1242
   21cec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21cf0:	add	x1, x1, #0xcb0
   21cf4:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   21cf8:	add	x0, x0, #0x3f8
   21cfc:	bl	58e0 <__assert_fail@plt>
   21d00:	mov	x2, x27
   21d04:	sub	x1, x21, x1
   21d08:	mov	x0, x23
   21d0c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   21d10:	str	x0, [sp, #200]
   21d14:	b	232b4 <my_re_intuit_start@@Base+0x2c40>
   21d18:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   21d1c:	add	x3, x3, #0x330
   21d20:	add	x3, x3, #0xd00
   21d24:	mov	w2, #0x4e5                 	// #1253
   21d28:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   21d2c:	add	x1, x1, #0xcb0
   21d30:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   21d34:	add	x0, x0, #0x420
   21d38:	bl	58e0 <__assert_fail@plt>
   21d3c:	ldr	x2, [sp, #200]
   21d40:	mov	x0, x24
   21d44:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   21d48:	str	x0, [sp, #184]
   21d4c:	b	220e8 <my_re_intuit_start@@Base+0x1a74>
   21d50:	ldr	x0, [sp, #144]
   21d54:	add	x0, x22, x0
   21d58:	ldr	x1, [sp, #168]
   21d5c:	cmp	x1, x0
   21d60:	b.cc	220a8 <my_re_intuit_start@@Base+0x1a34>  // b.lo, b.ul, b.last
   21d64:	cbnz	w26, 220cc <my_re_intuit_start@@Base+0x1a58>
   21d68:	ldr	x0, [sp, #144]
   21d6c:	sub	x0, x21, x0
   21d70:	ldr	x1, [sp, #168]
   21d74:	add	x0, x1, x0
   21d78:	str	x0, [sp, #184]
   21d7c:	add	x21, x24, x21
   21d80:	ldr	x0, [sp, #176]
   21d84:	cmp	x0, x21
   21d88:	csel	x0, x0, x21, cs  // cs = hs, nlast
   21d8c:	str	x0, [sp, #176]
   21d90:	ldr	w0, [sp, #132]
   21d94:	cbz	w0, 2211c <my_re_intuit_start@@Base+0x1aa8>
   21d98:	sxtw	x0, w28
   21d9c:	mov	x1, #0x28                  	// #40
   21da0:	ldr	x2, [sp, #208]
   21da4:	madd	x0, x0, x1, x2
   21da8:	ldr	x21, [x0, #32]
   21dac:	ldr	w0, [x21, #12]
   21db0:	tbz	w0, #10, 22134 <my_re_intuit_start@@Base+0x1ac0>
   21db4:	and	x1, x0, #0xf
   21db8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   21dbc:	ldr	x2, [x2, #3888]
   21dc0:	ldrb	w1, [x2, x1]
   21dc4:	cbz	w1, 22158 <my_re_intuit_start@@Base+0x1ae4>
   21dc8:	and	w1, w0, #0xc000
   21dcc:	cmp	w1, #0x8, lsl #12
   21dd0:	b.eq	2217c <my_re_intuit_start@@Base+0x1b08>  // b.none
   21dd4:	and	w2, w0, #0xff
   21dd8:	cmp	w2, #0xf
   21ddc:	b.eq	221b0 <my_re_intuit_start@@Base+0x1b3c>  // b.none
   21de0:	ldr	x1, [x21]
   21de4:	ldr	x26, [x1, #16]
   21de8:	cmp	w2, #0xb
   21dec:	b.eq	221e8 <my_re_intuit_start@@Base+0x1b74>  // b.none
   21df0:	cmp	w2, #0xc
   21df4:	b.eq	2220c <my_re_intuit_start@@Base+0x1b98>  // b.none
   21df8:	mov	w3, #0x2200                	// #8704
   21dfc:	tst	w0, w3
   21e00:	b.ne	22230 <my_re_intuit_start@@Base+0x1bbc>  // b.any
   21e04:	and	w0, w0, #0x7fc000
   21e08:	and	w0, w0, #0xffc07fff
   21e0c:	cmp	w0, #0x404, lsl #12
   21e10:	b.ne	22288 <my_re_intuit_start@@Base+0x1c14>  // b.any
   21e14:	cmp	w2, #0x6
   21e18:	b.ls	22254 <my_re_intuit_start@@Base+0x1be0>  // b.plast
   21e1c:	ldr	x0, [x1, #8]
   21e20:	cbz	x0, 22288 <my_re_intuit_start@@Base+0x1c14>
   21e24:	ldrb	w0, [x0, #18]
   21e28:	cmp	w0, #0x42
   21e2c:	b.ne	22278 <my_re_intuit_start@@Base+0x1c04>  // b.any
   21e30:	ldr	x0, [x21]
   21e34:	ldrb	w0, [x0, #40]
   21e38:	sub	x26, x26, x0
   21e3c:	ldr	x0, [sp, #184]
   21e40:	add	x26, x0, x26
   21e44:	cmp	x23, x26
   21e48:	csel	x26, x23, x26, ls  // ls = plast
   21e4c:	ldr	x0, [sp, #176]
   21e50:	cmp	x26, x0
   21e54:	b.cs	222ac <my_re_intuit_start@@Base+0x1c38>  // b.hs, b.nlast
   21e58:	ldr	w0, [x20, #2368]
   21e5c:	tbnz	w0, #20, 21e6c <my_re_intuit_start@@Base+0x17f8>
   21e60:	ldr	x0, [sp, #224]
   21e64:	tst	x0, #0xff00
   21e68:	b.eq	2230c <my_re_intuit_start@@Base+0x1c98>  // b.none
   21e6c:	sub	x3, x26, x27
   21e70:	ldr	x0, [sp, #176]
   21e74:	sub	x2, x0, x27
   21e78:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   21e7c:	add	x1, x1, #0x470
   21e80:	mov	x0, x20
   21e84:	bl	50e0 <Perl_re_printf@plt>
   21e88:	str	xzr, [sp, #192]
   21e8c:	ldr	w0, [x20, #2368]
   21e90:	tbnz	w0, #20, 21ea0 <my_re_intuit_start@@Base+0x182c>
   21e94:	ldr	x0, [sp, #224]
   21e98:	tst	x0, #0xff00
   21e9c:	b.eq	22078 <my_re_intuit_start@@Base+0x1a04>  // b.none
   21ea0:	ldr	w0, [x20, #2964]
   21ea4:	and	x2, x0, #0xf
   21ea8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   21eac:	ldr	x1, [x1, #3888]
   21eb0:	ldrb	w1, [x1, x2]
   21eb4:	cbz	w1, 22314 <my_re_intuit_start@@Base+0x1ca0>
   21eb8:	and	w1, w0, #0xc000
   21ebc:	cmp	w1, #0x8, lsl #12
   21ec0:	b.eq	22338 <my_re_intuit_start@@Base+0x1cc4>  // b.none
   21ec4:	and	w0, w0, #0xff
   21ec8:	cmp	w0, #0xf
   21ecc:	b.eq	2236c <my_re_intuit_start@@Base+0x1cf8>  // b.none
   21ed0:	ldr	x0, [x20, #2968]
   21ed4:	strb	wzr, [x0]
   21ed8:	ldr	x0, [x20, #2952]
   21edc:	str	xzr, [x0, #16]
   21ee0:	add	x0, x20, #0xb88
   21ee4:	str	x0, [sp, #176]
   21ee8:	ldr	x0, [x21, #16]
   21eec:	str	x0, [sp, #216]
   21ef0:	ldr	w0, [x21, #12]
   21ef4:	and	x2, x0, #0xf
   21ef8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   21efc:	ldr	x1, [x1, #3888]
   21f00:	ldrb	w1, [x1, x2]
   21f04:	cbz	w1, 2239c <my_re_intuit_start@@Base+0x1d28>
   21f08:	and	w1, w0, #0xc000
   21f0c:	cmp	w1, #0x8, lsl #12
   21f10:	b.eq	223c0 <my_re_intuit_start@@Base+0x1d4c>  // b.none
   21f14:	and	w2, w0, #0xff
   21f18:	cmp	w2, #0xf
   21f1c:	b.eq	223f4 <my_re_intuit_start@@Base+0x1d80>  // b.none
   21f20:	ldr	x1, [x21]
   21f24:	ldr	x26, [x1, #16]
   21f28:	cmp	w2, #0xb
   21f2c:	b.eq	2242c <my_re_intuit_start@@Base+0x1db8>  // b.none
   21f30:	cmp	w2, #0xc
   21f34:	b.eq	22450 <my_re_intuit_start@@Base+0x1ddc>  // b.none
   21f38:	mov	w3, #0x2200                	// #8704
   21f3c:	tst	w0, w3
   21f40:	b.ne	22474 <my_re_intuit_start@@Base+0x1e00>  // b.any
   21f44:	and	w0, w0, #0x7fc000
   21f48:	and	w0, w0, #0xffc07fff
   21f4c:	cmp	w0, #0x404, lsl #12
   21f50:	b.ne	224cc <my_re_intuit_start@@Base+0x1e58>  // b.any
   21f54:	cmp	w2, #0x6
   21f58:	b.ls	22498 <my_re_intuit_start@@Base+0x1e24>  // b.plast
   21f5c:	ldr	x0, [x1, #8]
   21f60:	cbz	x0, 224cc <my_re_intuit_start@@Base+0x1e58>
   21f64:	ldrb	w0, [x0, #18]
   21f68:	cmp	w0, #0x42
   21f6c:	b.ne	224bc <my_re_intuit_start@@Base+0x1e48>  // b.any
   21f70:	ldr	x0, [x21]
   21f74:	ldrb	w3, [x0, #40]
   21f78:	ldr	w0, [sp, #132]
   21f7c:	cmp	w0, #0x0
   21f80:	mov	w7, #0x8503                	// #34051
   21f84:	mov	w0, #0x8403                	// #33795
   21f88:	csel	w7, w7, w0, ne  // ne = any
   21f8c:	ldr	x6, [x20, #1456]
   21f90:	ldr	x5, [x20, #1448]
   21f94:	mov	x4, #0x1e                  	// #30
   21f98:	sub	x3, x26, x3
   21f9c:	ldr	x2, [sp, #216]
   21fa0:	ldr	x1, [sp, #176]
   21fa4:	mov	x0, x20
   21fa8:	bl	53f0 <Perl_pv_pretty@plt>
   21fac:	str	x0, [sp, #216]
   21fb0:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   21fb4:	add	x0, x0, #0xf98
   21fb8:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   21fbc:	add	x1, x1, #0xf48
   21fc0:	ldr	x2, [sp, #192]
   21fc4:	cmp	x2, #0x0
   21fc8:	csel	x0, x1, x0, ne  // ne = any
   21fcc:	str	x0, [sp, #176]
   21fd0:	adrp	x26, 6a000 <boot_re@@Base+0x841c>
   21fd4:	add	x26, x26, #0xf60
   21fd8:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   21fdc:	add	x0, x0, #0xf70
   21fe0:	cmp	w28, #0x0
   21fe4:	csel	x26, x0, x26, ne  // ne = any
   21fe8:	ldr	w0, [x21, #12]
   21fec:	and	w1, w0, #0xff
   21ff0:	cmp	w1, #0xb
   21ff4:	b.eq	224f0 <my_re_intuit_start@@Base+0x1e7c>  // b.none
   21ff8:	cmp	w1, #0xc
   21ffc:	b.eq	22514 <my_re_intuit_start@@Base+0x1ea0>  // b.none
   22000:	mov	w2, #0x2200                	// #8704
   22004:	tst	w0, w2
   22008:	b.ne	22538 <my_re_intuit_start@@Base+0x1ec4>  // b.any
   2200c:	and	w0, w0, #0x7fc000
   22010:	and	w0, w0, #0xffc07fff
   22014:	cmp	w0, #0x404, lsl #12
   22018:	b.ne	22590 <my_re_intuit_start@@Base+0x1f1c>  // b.any
   2201c:	cmp	w1, #0x6
   22020:	b.ls	2255c <my_re_intuit_start@@Base+0x1ee8>  // b.plast
   22024:	ldr	x0, [x21]
   22028:	ldr	x0, [x0, #8]
   2202c:	cbz	x0, 22590 <my_re_intuit_start@@Base+0x1f1c>
   22030:	ldrb	w0, [x0, #18]
   22034:	cmp	w0, #0x42
   22038:	b.ne	22580 <my_re_intuit_start@@Base+0x1f0c>  // b.any
   2203c:	ldr	x0, [x21]
   22040:	ldrb	w1, [x0, #40]
   22044:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   22048:	add	x0, x0, #0x20
   2204c:	adrp	x5, 6a000 <boot_re@@Base+0x841c>
   22050:	add	x5, x5, #0xf80
   22054:	cmp	w1, #0x0
   22058:	csel	x5, x5, x0, ne  // ne = any
   2205c:	ldr	x4, [sp, #216]
   22060:	mov	x3, x26
   22064:	ldr	x2, [sp, #176]
   22068:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   2206c:	add	x1, x1, #0x4c8
   22070:	mov	x0, x20
   22074:	bl	50e0 <Perl_re_printf@plt>
   22078:	ldr	x0, [sp, #192]
   2207c:	cbz	x0, 225b4 <my_re_intuit_start@@Base+0x1f40>
   22080:	cbnz	w28, 22730 <my_re_intuit_start@@Base+0x20bc>
   22084:	ldrb	w0, [sp, #322]
   22088:	cbnz	w0, 226f8 <my_re_intuit_start@@Base+0x2084>
   2208c:	ldr	x0, [sp, #208]
   22090:	ldr	x24, [x0, #8]
   22094:	ldr	x0, [sp, #192]
   22098:	sub	x24, x0, x24
   2209c:	add	x0, x0, #0x1
   220a0:	str	x0, [sp, #176]
   220a4:	b	22738 <my_re_intuit_start@@Base+0x20c4>
   220a8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   220ac:	add	x3, x3, #0x330
   220b0:	add	x3, x3, #0xd00
   220b4:	mov	w2, #0x4f4                 	// #1268
   220b8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   220bc:	add	x1, x1, #0xcb0
   220c0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   220c4:	add	x0, x0, #0x438
   220c8:	bl	58e0 <__assert_fail@plt>
   220cc:	mov	x3, x23
   220d0:	mov	x2, x27
   220d4:	ldr	x0, [sp, #144]
   220d8:	sub	x1, x21, x0
   220dc:	ldr	x0, [sp, #168]
   220e0:	bl	6d84 <Perl__inverse_folds@plt+0x1384>
   220e4:	str	x0, [sp, #184]
   220e8:	mov	x2, x23
   220ec:	mov	x1, x21
   220f0:	mov	x0, x24
   220f4:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   220f8:	mov	x21, x0
   220fc:	b	21d80 <my_re_intuit_start@@Base+0x170c>
   22100:	cbnz	w26, 22110 <my_re_intuit_start@@Base+0x1a9c>
   22104:	ldr	x0, [sp, #200]
   22108:	str	x0, [sp, #184]
   2210c:	b	21d7c <my_re_intuit_start@@Base+0x1708>
   22110:	ldr	x0, [sp, #200]
   22114:	str	x0, [sp, #184]
   22118:	b	220e8 <my_re_intuit_start@@Base+0x1a74>
   2211c:	sxtw	x0, w28
   22120:	mov	x1, #0x28                  	// #40
   22124:	ldr	x2, [sp, #208]
   22128:	madd	x0, x0, x1, x2
   2212c:	ldr	x21, [x0, #24]
   22130:	b	21dac <my_re_intuit_start@@Base+0x1738>
   22134:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22138:	add	x3, x3, #0x330
   2213c:	add	x3, x3, #0xd00
   22140:	mov	w2, #0x4fe                 	// #1278
   22144:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22148:	add	x1, x1, #0xcb0
   2214c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22150:	add	x0, x0, #0x460
   22154:	bl	58e0 <__assert_fail@plt>
   22158:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2215c:	add	x3, x3, #0x330
   22160:	add	x3, x3, #0xd00
   22164:	mov	w2, #0x501                 	// #1281
   22168:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2216c:	add	x1, x1, #0xcb0
   22170:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22174:	add	x0, x0, #0xe40
   22178:	bl	58e0 <__assert_fail@plt>
   2217c:	and	w1, w0, #0xff
   22180:	sub	w1, w1, #0x9
   22184:	cmp	w1, #0x1
   22188:	b.hi	21dd4 <my_re_intuit_start@@Base+0x1760>  // b.pmore
   2218c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22190:	add	x3, x3, #0x330
   22194:	add	x3, x3, #0xd00
   22198:	mov	w2, #0x501                 	// #1281
   2219c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   221a0:	add	x1, x1, #0xcb0
   221a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   221a8:	add	x0, x0, #0xe70
   221ac:	bl	58e0 <__assert_fail@plt>
   221b0:	ldr	x1, [x21]
   221b4:	ldrb	w3, [x1, #129]
   221b8:	tbz	w3, #6, 221c4 <my_re_intuit_start@@Base+0x1b50>
   221bc:	ldr	x26, [x1, #16]
   221c0:	b	21df8 <my_re_intuit_start@@Base+0x1784>
   221c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   221c8:	add	x3, x3, #0x330
   221cc:	add	x3, x3, #0xd00
   221d0:	mov	w2, #0x501                 	// #1281
   221d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   221d8:	add	x1, x1, #0xcb0
   221dc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   221e0:	add	x0, x0, #0xe88
   221e4:	bl	58e0 <__assert_fail@plt>
   221e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   221ec:	add	x3, x3, #0x330
   221f0:	add	x3, x3, #0xd00
   221f4:	mov	w2, #0x501                 	// #1281
   221f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   221fc:	add	x1, x1, #0xcb0
   22200:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22204:	add	x0, x0, #0xf18
   22208:	bl	58e0 <__assert_fail@plt>
   2220c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22210:	add	x3, x3, #0x330
   22214:	add	x3, x3, #0xd00
   22218:	mov	w2, #0x501                 	// #1281
   2221c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22220:	add	x1, x1, #0xcb0
   22224:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22228:	add	x0, x0, #0xf38
   2222c:	bl	58e0 <__assert_fail@plt>
   22230:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22234:	add	x3, x3, #0x330
   22238:	add	x3, x3, #0xd00
   2223c:	mov	w2, #0x501                 	// #1281
   22240:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22244:	add	x1, x1, #0xcb0
   22248:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2224c:	add	x0, x0, #0xf58
   22250:	bl	58e0 <__assert_fail@plt>
   22254:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22258:	add	x3, x3, #0x330
   2225c:	add	x3, x3, #0xd00
   22260:	mov	w2, #0x501                 	// #1281
   22264:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22268:	add	x1, x1, #0xcb0
   2226c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22270:	add	x0, x0, #0xef8
   22274:	bl	58e0 <__assert_fail@plt>
   22278:	mov	w1, #0x42                  	// #66
   2227c:	mov	x0, x21
   22280:	bl	57d0 <Perl_mg_find@plt>
   22284:	cbnz	x0, 21e30 <my_re_intuit_start@@Base+0x17bc>
   22288:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2228c:	add	x3, x3, #0x330
   22290:	add	x3, x3, #0xd00
   22294:	mov	w2, #0x501                 	// #1281
   22298:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2229c:	add	x1, x1, #0xcb0
   222a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   222a4:	add	x0, x0, #0xf80
   222a8:	bl	58e0 <__assert_fail@plt>
   222ac:	ldr	w4, [sp, #160]
   222b0:	mov	x3, x21
   222b4:	mov	x2, x26
   222b8:	ldr	x1, [sp, #176]
   222bc:	mov	x0, x20
   222c0:	bl	5060 <Perl_fbm_instr@plt>
   222c4:	str	x0, [sp, #192]
   222c8:	ldr	w0, [x20, #2368]
   222cc:	tbnz	w0, #20, 222dc <my_re_intuit_start@@Base+0x1c68>
   222d0:	ldr	x0, [sp, #224]
   222d4:	tst	x0, #0xff00
   222d8:	b.eq	21e8c <my_re_intuit_start@@Base+0x1818>  // b.none
   222dc:	ldr	x0, [sp, #192]
   222e0:	sub	x4, x0, x27
   222e4:	cmp	x0, #0x0
   222e8:	csinv	x4, x4, xzr, ne  // ne = any
   222ec:	sub	x3, x26, x27
   222f0:	ldr	x0, [sp, #176]
   222f4:	sub	x2, x0, x27
   222f8:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   222fc:	add	x1, x1, #0x498
   22300:	mov	x0, x20
   22304:	bl	50e0 <Perl_re_printf@plt>
   22308:	b	21e8c <my_re_intuit_start@@Base+0x1818>
   2230c:	str	xzr, [sp, #192]
   22310:	b	21e8c <my_re_intuit_start@@Base+0x1818>
   22314:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22318:	add	x3, x3, #0x330
   2231c:	add	x3, x3, #0xd00
   22320:	mov	w2, #0x51e                 	// #1310
   22324:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22328:	add	x1, x1, #0xcb0
   2232c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22330:	add	x0, x0, #0xd10
   22334:	bl	58e0 <__assert_fail@plt>
   22338:	and	w1, w0, #0xff
   2233c:	sub	w1, w1, #0x9
   22340:	cmp	w1, #0x1
   22344:	b.hi	21ec4 <my_re_intuit_start@@Base+0x1850>  // b.pmore
   22348:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2234c:	add	x3, x3, #0x330
   22350:	add	x3, x3, #0xd00
   22354:	mov	w2, #0x51e                 	// #1310
   22358:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2235c:	add	x1, x1, #0xcb0
   22360:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22364:	add	x0, x0, #0xd40
   22368:	bl	58e0 <__assert_fail@plt>
   2236c:	ldr	x0, [x20, #2952]
   22370:	ldrb	w0, [x0, #129]
   22374:	tbnz	w0, #6, 21ed0 <my_re_intuit_start@@Base+0x185c>
   22378:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2237c:	add	x3, x3, #0x330
   22380:	add	x3, x3, #0xd00
   22384:	mov	w2, #0x51e                 	// #1310
   22388:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2238c:	add	x1, x1, #0xcb0
   22390:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22394:	add	x0, x0, #0xd58
   22398:	bl	58e0 <__assert_fail@plt>
   2239c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   223a0:	add	x3, x3, #0x330
   223a4:	add	x3, x3, #0xd00
   223a8:	mov	w2, #0x51f                 	// #1311
   223ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   223b0:	add	x1, x1, #0xcb0
   223b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   223b8:	add	x0, x0, #0xe40
   223bc:	bl	58e0 <__assert_fail@plt>
   223c0:	and	w1, w0, #0xff
   223c4:	sub	w1, w1, #0x9
   223c8:	cmp	w1, #0x1
   223cc:	b.hi	21f14 <my_re_intuit_start@@Base+0x18a0>  // b.pmore
   223d0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   223d4:	add	x3, x3, #0x330
   223d8:	add	x3, x3, #0xd00
   223dc:	mov	w2, #0x51f                 	// #1311
   223e0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   223e4:	add	x1, x1, #0xcb0
   223e8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   223ec:	add	x0, x0, #0xe70
   223f0:	bl	58e0 <__assert_fail@plt>
   223f4:	ldr	x1, [x21]
   223f8:	ldrb	w3, [x1, #129]
   223fc:	tbz	w3, #6, 22408 <my_re_intuit_start@@Base+0x1d94>
   22400:	ldr	x26, [x1, #16]
   22404:	b	21f38 <my_re_intuit_start@@Base+0x18c4>
   22408:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2240c:	add	x3, x3, #0x330
   22410:	add	x3, x3, #0xd00
   22414:	mov	w2, #0x51f                 	// #1311
   22418:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2241c:	add	x1, x1, #0xcb0
   22420:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22424:	add	x0, x0, #0xe88
   22428:	bl	58e0 <__assert_fail@plt>
   2242c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22430:	add	x3, x3, #0x330
   22434:	add	x3, x3, #0xd00
   22438:	mov	w2, #0x51f                 	// #1311
   2243c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22440:	add	x1, x1, #0xcb0
   22444:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22448:	add	x0, x0, #0xf18
   2244c:	bl	58e0 <__assert_fail@plt>
   22450:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22454:	add	x3, x3, #0x330
   22458:	add	x3, x3, #0xd00
   2245c:	mov	w2, #0x51f                 	// #1311
   22460:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22464:	add	x1, x1, #0xcb0
   22468:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2246c:	add	x0, x0, #0xf38
   22470:	bl	58e0 <__assert_fail@plt>
   22474:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22478:	add	x3, x3, #0x330
   2247c:	add	x3, x3, #0xd00
   22480:	mov	w2, #0x51f                 	// #1311
   22484:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22488:	add	x1, x1, #0xcb0
   2248c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22490:	add	x0, x0, #0xf58
   22494:	bl	58e0 <__assert_fail@plt>
   22498:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2249c:	add	x3, x3, #0x330
   224a0:	add	x3, x3, #0xd00
   224a4:	mov	w2, #0x51f                 	// #1311
   224a8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   224ac:	add	x1, x1, #0xcb0
   224b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   224b4:	add	x0, x0, #0xef8
   224b8:	bl	58e0 <__assert_fail@plt>
   224bc:	mov	w1, #0x42                  	// #66
   224c0:	mov	x0, x21
   224c4:	bl	57d0 <Perl_mg_find@plt>
   224c8:	cbnz	x0, 21f70 <my_re_intuit_start@@Base+0x18fc>
   224cc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   224d0:	add	x3, x3, #0x330
   224d4:	add	x3, x3, #0xd00
   224d8:	mov	w2, #0x51f                 	// #1311
   224dc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   224e0:	add	x1, x1, #0xcb0
   224e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   224e8:	add	x0, x0, #0xf80
   224ec:	bl	58e0 <__assert_fail@plt>
   224f0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   224f4:	add	x3, x3, #0x330
   224f8:	add	x3, x3, #0xd00
   224fc:	mov	w2, #0x523                 	// #1315
   22500:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22504:	add	x1, x1, #0xcb0
   22508:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2250c:	add	x0, x0, #0xf18
   22510:	bl	58e0 <__assert_fail@plt>
   22514:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22518:	add	x3, x3, #0x330
   2251c:	add	x3, x3, #0xd00
   22520:	mov	w2, #0x523                 	// #1315
   22524:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22528:	add	x1, x1, #0xcb0
   2252c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22530:	add	x0, x0, #0xf38
   22534:	bl	58e0 <__assert_fail@plt>
   22538:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2253c:	add	x3, x3, #0x330
   22540:	add	x3, x3, #0xd00
   22544:	mov	w2, #0x523                 	// #1315
   22548:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2254c:	add	x1, x1, #0xcb0
   22550:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22554:	add	x0, x0, #0xf58
   22558:	bl	58e0 <__assert_fail@plt>
   2255c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22560:	add	x3, x3, #0x330
   22564:	add	x3, x3, #0xd00
   22568:	mov	w2, #0x523                 	// #1315
   2256c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22570:	add	x1, x1, #0xcb0
   22574:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22578:	add	x0, x0, #0xef8
   2257c:	bl	58e0 <__assert_fail@plt>
   22580:	mov	w1, #0x42                  	// #66
   22584:	mov	x0, x21
   22588:	bl	57d0 <Perl_mg_find@plt>
   2258c:	cbnz	x0, 2203c <my_re_intuit_start@@Base+0x19c8>
   22590:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22594:	add	x3, x3, #0x330
   22598:	add	x3, x3, #0xd00
   2259c:	mov	w2, #0x523                 	// #1315
   225a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   225a4:	add	x1, x1, #0xcb0
   225a8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   225ac:	add	x0, x0, #0xf80
   225b0:	bl	58e0 <__assert_fail@plt>
   225b4:	ldr	x0, [sp, #200]
   225b8:	ldr	x1, [sp, #184]
   225bc:	cmp	x0, x1
   225c0:	b.hi	225ec <my_re_intuit_start@@Base+0x1f78>  // b.pmore
   225c4:	ldr	w0, [x20, #2368]
   225c8:	tbnz	w0, #20, 225d8 <my_re_intuit_start@@Base+0x1f64>
   225cc:	ldr	x0, [sp, #224]
   225d0:	tst	x0, #0xff00
   225d4:	b.eq	20a7c <my_re_intuit_start@@Base+0x408>  // b.none
   225d8:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   225dc:	add	x1, x1, #0x4e0
   225e0:	mov	x0, x20
   225e4:	bl	50e0 <Perl_re_printf@plt>
   225e8:	b	20a7c <my_re_intuit_start@@Base+0x408>
   225ec:	ldrb	w26, [sp, #322]
   225f0:	cbnz	w26, 22660 <my_re_intuit_start@@Base+0x1fec>
   225f4:	ldr	x0, [sp, #184]
   225f8:	add	x0, x0, #0x1
   225fc:	str	x0, [sp, #176]
   22600:	cbz	w28, 234c8 <my_re_intuit_start@@Base+0x2e54>
   22604:	add	x24, x24, #0x1
   22608:	ldr	w0, [x20, #2368]
   2260c:	tbnz	w0, #20, 226ec <my_re_intuit_start@@Base+0x2078>
   22610:	ldr	x0, [sp, #224]
   22614:	tst	x0, #0xff00
   22618:	b.eq	2120c <my_re_intuit_start@@Base+0xb98>  // b.none
   2261c:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   22620:	add	x21, x21, #0xf60
   22624:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   22628:	add	x0, x0, #0xf70
   2262c:	cmp	w28, #0x0
   22630:	csel	x21, x0, x21, ne  // ne = any
   22634:	cbnz	w26, 226d4 <my_re_intuit_start@@Base+0x2060>
   22638:	ldr	x0, [sp, #168]
   2263c:	add	x3, x0, #0x1
   22640:	sub	x4, x24, x27
   22644:	sub	x3, x3, x27
   22648:	mov	x2, x21
   2264c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22650:	add	x1, x1, #0x4f0
   22654:	mov	x0, x20
   22658:	bl	50e0 <Perl_re_printf@plt>
   2265c:	b	2120c <my_re_intuit_start@@Base+0xb98>
   22660:	mov	x2, x23
   22664:	mov	x1, #0x1                   	// #1
   22668:	ldr	x0, [sp, #184]
   2266c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   22670:	str	x0, [sp, #176]
   22674:	cbnz	w28, 226b0 <my_re_intuit_start@@Base+0x203c>
   22678:	ldr	x0, [sp, #208]
   2267c:	ldr	x0, [x0, #8]
   22680:	mov	x3, x23
   22684:	mov	x2, x27
   22688:	mov	x1, #0x1                   	// #1
   2268c:	sub	x1, x1, x0
   22690:	ldr	x0, [sp, #184]
   22694:	bl	6d84 <Perl__inverse_folds@plt+0x1384>
   22698:	mov	x24, x0
   2269c:	ldr	w0, [x20, #2368]
   226a0:	tbz	w0, #20, 22610 <my_re_intuit_start@@Base+0x1f9c>
   226a4:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   226a8:	add	x21, x21, #0xf60
   226ac:	b	226d4 <my_re_intuit_start@@Base+0x2060>
   226b0:	mov	x2, x23
   226b4:	mov	x1, #0x1                   	// #1
   226b8:	mov	x0, x24
   226bc:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   226c0:	mov	x24, x0
   226c4:	ldr	w0, [x20, #2368]
   226c8:	tbz	w0, #20, 22610 <my_re_intuit_start@@Base+0x1f9c>
   226cc:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   226d0:	add	x21, x21, #0xf70
   226d4:	mov	x2, x23
   226d8:	mov	x1, #0x1                   	// #1
   226dc:	ldr	x0, [sp, #168]
   226e0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   226e4:	mov	x3, x0
   226e8:	b	22640 <my_re_intuit_start@@Base+0x1fcc>
   226ec:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   226f0:	add	x21, x21, #0xf70
   226f4:	b	22638 <my_re_intuit_start@@Base+0x1fc4>
   226f8:	ldr	x0, [sp, #208]
   226fc:	ldr	x1, [x0, #8]
   22700:	mov	x2, x27
   22704:	neg	x1, x1
   22708:	ldr	x21, [sp, #192]
   2270c:	mov	x0, x21
   22710:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   22714:	mov	x24, x0
   22718:	mov	x2, x23
   2271c:	mov	x1, #0x1                   	// #1
   22720:	mov	x0, x21
   22724:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   22728:	str	x0, [sp, #176]
   2272c:	b	22738 <my_re_intuit_start@@Base+0x20c4>
   22730:	ldr	x0, [sp, #192]
   22734:	str	x0, [sp, #176]
   22738:	ldr	w0, [x20, #2368]
   2273c:	tbnz	w0, #20, 2274c <my_re_intuit_start@@Base+0x20d8>
   22740:	ldr	x0, [sp, #224]
   22744:	tst	x0, #0xff00
   22748:	b.eq	21b9c <my_re_intuit_start@@Base+0x1528>  // b.none
   2274c:	sub	x3, x24, x27
   22750:	ldr	x0, [sp, #192]
   22754:	sub	x2, x0, x27
   22758:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   2275c:	add	x1, x1, #0x530
   22760:	mov	x0, x20
   22764:	bl	50e0 <Perl_re_printf@plt>
   22768:	b	21b9c <my_re_intuit_start@@Base+0x1528>
   2276c:	sub	x7, x23, x27
   22770:	ldr	x0, [sp, #168]
   22774:	sub	x6, x24, x0
   22778:	sub	x5, x24, x27
   2277c:	sub	x4, x0, x27
   22780:	ldr	x3, [x1, #96]
   22784:	ldr	x2, [x1, #88]
   22788:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   2278c:	add	x1, x1, #0x558
   22790:	mov	x0, x20
   22794:	bl	50e0 <Perl_re_printf@plt>
   22798:	b	21b9c <my_re_intuit_start@@Base+0x1528>
   2279c:	ldr	x1, [x19, #64]
   227a0:	mov	x2, x22
   227a4:	neg	x1, x1
   227a8:	mov	x0, x23
   227ac:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   227b0:	mov	x2, x0
   227b4:	b	21bf4 <my_re_intuit_start@@Base+0x1580>
   227b8:	ldr	w0, [x20, #2368]
   227bc:	tbnz	w0, #20, 227cc <my_re_intuit_start@@Base+0x2158>
   227c0:	ldr	x0, [sp, #224]
   227c4:	tst	x0, #0xff00
   227c8:	b.eq	20a7c <my_re_intuit_start@@Base+0x408>  // b.none
   227cc:	ldr	x3, [x20, #1456]
   227d0:	ldr	x2, [x20, #1448]
   227d4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   227d8:	add	x1, x1, #0x5e8
   227dc:	mov	x0, x20
   227e0:	bl	50e0 <Perl_re_printf@plt>
   227e4:	b	20a7c <my_re_intuit_start@@Base+0x408>
   227e8:	ldr	x1, [x21, #88]
   227ec:	mov	x2, x22
   227f0:	neg	x1, x1
   227f4:	ldr	x0, [sp, #168]
   227f8:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   227fc:	b	21c34 <my_re_intuit_start@@Base+0x15c0>
   22800:	ldr	w0, [x20, #2368]
   22804:	tbnz	w0, #20, 22814 <my_re_intuit_start@@Base+0x21a0>
   22808:	ldr	x0, [sp, #224]
   2280c:	tst	x0, #0xff00
   22810:	b.eq	2168c <my_re_intuit_start@@Base+0x1018>  // b.none
   22814:	sub	x4, x24, x27
   22818:	ldr	x3, [x20, #1456]
   2281c:	ldr	x2, [x20, #1448]
   22820:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22824:	add	x1, x1, #0x608
   22828:	mov	x0, x20
   2282c:	bl	50e0 <Perl_re_printf@plt>
   22830:	str	w26, [sp, #120]
   22834:	b	2120c <my_re_intuit_start@@Base+0xb98>
   22838:	ldr	x0, [x21, #24]
   2283c:	cmp	x0, #0x0
   22840:	cset	w0, ne  // ne = any
   22844:	str	w0, [sp, #120]
   22848:	b	21c54 <my_re_intuit_start@@Base+0x15e0>
   2284c:	ldr	w0, [x20, #2368]
   22850:	tbnz	w0, #20, 22860 <my_re_intuit_start@@Base+0x21ec>
   22854:	ldr	x0, [sp, #224]
   22858:	tst	x0, #0xff00
   2285c:	b.eq	23258 <my_re_intuit_start@@Base+0x2be4>  // b.none
   22860:	sub	x5, x24, x27
   22864:	ldr	x4, [x21, #8]
   22868:	add	x4, x5, x4
   2286c:	ldr	x3, [x20, #1456]
   22870:	ldr	x2, [x20, #1448]
   22874:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22878:	add	x1, x1, #0x660
   2287c:	mov	x0, x20
   22880:	bl	50e0 <Perl_re_printf@plt>
   22884:	b	23258 <my_re_intuit_start@@Base+0x2be4>
   22888:	ldr	w0, [x20, #2368]
   2288c:	tbnz	w0, #20, 2289c <my_re_intuit_start@@Base+0x2228>
   22890:	ldr	x0, [sp, #224]
   22894:	tst	x0, #0xff00
   22898:	b.eq	228ac <my_re_intuit_start@@Base+0x2238>  // b.none
   2289c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   228a0:	add	x1, x1, #0x6e0
   228a4:	mov	x0, x20
   228a8:	bl	50e0 <Perl_re_printf@plt>
   228ac:	ldr	x0, [sp, #152]
   228b0:	ldr	x0, [x0, #16]
   228b4:	cbz	x0, 23400 <my_re_intuit_start@@Base+0x2d8c>
   228b8:	ldrb	w2, [x0, #1]
   228bc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   228c0:	ldr	x1, [x1, #3768]
   228c4:	ldrb	w1, [x1, x2]
   228c8:	cmp	w1, #0x51
   228cc:	b.ne	23328 <my_re_intuit_start@@Base+0x2cb4>  // b.any
   228d0:	b	23400 <my_re_intuit_start@@Base+0x2d8c>
   228d4:	str	w26, [sp, #120]
   228d8:	b	228ac <my_re_intuit_start@@Base+0x2238>
   228dc:	ldrb	w1, [sp, #321]
   228e0:	cbnz	w1, 228ec <my_re_intuit_start@@Base+0x2278>
   228e4:	ldrb	w21, [x0]
   228e8:	b	23334 <my_re_intuit_start@@Base+0x2cc0>
   228ec:	ldrb	w1, [x0], #4
   228f0:	adds	x1, x0, x1
   228f4:	b.cc	2290c <my_re_intuit_start@@Base+0x2298>  // b.lo, b.ul, b.last
   228f8:	mov	x2, x0
   228fc:	mov	x0, x20
   22900:	bl	5720 <Perl_utf8_length@plt>
   22904:	neg	x21, x0
   22908:	b	23334 <my_re_intuit_start@@Base+0x2cc0>
   2290c:	mov	x2, x1
   22910:	mov	x1, x0
   22914:	mov	x0, x20
   22918:	bl	5720 <Perl_utf8_length@plt>
   2291c:	mov	x21, x0
   22920:	b	23334 <my_re_intuit_start@@Base+0x2cc0>
   22924:	ldr	x1, [x0, #32]
   22928:	cmp	x1, #0x0
   2292c:	ldr	w1, [sp, #120]
   22930:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   22934:	b.ne	23340 <my_re_intuit_start@@Base+0x2ccc>  // b.any
   22938:	ldr	x1, [x0, #64]
   2293c:	cbz	x1, 22988 <my_re_intuit_start@@Base+0x2314>
   22940:	ldrb	w0, [sp, #322]
   22944:	cbnz	w0, 2299c <my_re_intuit_start@@Base+0x2328>
   22948:	ldr	x0, [sp, #168]
   2294c:	ldr	x1, [sp, #144]
   22950:	sub	x0, x0, x1
   22954:	str	x0, [sp, #184]
   22958:	add	x21, x0, w21, sxtw
   2295c:	cmp	x23, x21
   22960:	csel	x21, x23, x21, cc  // cc = lo, ul, last
   22964:	b	2336c <my_re_intuit_start@@Base+0x2cf8>
   22968:	ldr	x0, [x19, #64]
   2296c:	cmp	x0, #0x0
   22970:	csel	w21, w21, wzr, ne  // ne = any
   22974:	add	x21, x24, w21, sxtw
   22978:	cmp	x23, x21
   2297c:	csel	x21, x23, x21, cc  // cc = lo, ul, last
   22980:	str	xzr, [sp, #184]
   22984:	b	2336c <my_re_intuit_start@@Base+0x2cf8>
   22988:	ldr	x0, [x0, #72]
   2298c:	str	x0, [sp, #184]
   22990:	cbnz	x0, 22940 <my_re_intuit_start@@Base+0x22cc>
   22994:	mov	x21, x23
   22998:	b	2336c <my_re_intuit_start@@Base+0x2cf8>
   2299c:	mov	x2, x27
   229a0:	ldr	x0, [sp, #144]
   229a4:	neg	x1, x0
   229a8:	ldr	x0, [sp, #168]
   229ac:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   229b0:	str	x0, [sp, #184]
   229b4:	mov	x2, x23
   229b8:	sxtw	x1, w21
   229bc:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   229c0:	mov	x21, x0
   229c4:	b	2336c <my_re_intuit_start@@Base+0x2cf8>
   229c8:	cmp	x21, x23
   229cc:	b.eq	22a68 <my_re_intuit_start@@Base+0x23f4>  // b.none
   229d0:	ldr	w0, [x20, #2368]
   229d4:	tbnz	w0, #20, 229e4 <my_re_intuit_start@@Base+0x2370>
   229d8:	ldr	x0, [sp, #224]
   229dc:	tst	x0, #0xff00
   229e0:	b.eq	229f4 <my_re_intuit_start@@Base+0x2380>  // b.none
   229e4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   229e8:	add	x1, x1, #0x778
   229ec:	mov	x0, x20
   229f0:	bl	50e0 <Perl_re_printf@plt>
   229f4:	ldr	w0, [x19, #100]
   229f8:	tst	w0, #0x1c00
   229fc:	ldr	w1, [sp, #120]
   22a00:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   22a04:	b.eq	22a90 <my_re_intuit_start@@Base+0x241c>  // b.none
   22a08:	ldr	x21, [x19, #88]
   22a0c:	ldr	x0, [x21, #24]
   22a10:	cbz	x0, 22a98 <my_re_intuit_start@@Base+0x2424>
   22a14:	ldrb	w0, [x21]
   22a18:	cmp	w0, #0x1
   22a1c:	b.eq	22ac8 <my_re_intuit_start@@Base+0x2454>  // b.none
   22a20:	ldrb	w0, [sp, #322]
   22a24:	cbnz	w0, 22b88 <my_re_intuit_start@@Base+0x2514>
   22a28:	add	x24, x24, #0x1
   22a2c:	ldr	x0, [sp, #144]
   22a30:	add	x0, x25, x0
   22a34:	add	x0, x24, x0
   22a38:	cmp	x23, x0
   22a3c:	b.cs	22ba0 <my_re_intuit_start@@Base+0x252c>  // b.hs, b.nlast
   22a40:	ldr	w0, [x20, #2368]
   22a44:	tbnz	w0, #20, 22a54 <my_re_intuit_start@@Base+0x23e0>
   22a48:	ldr	x0, [sp, #224]
   22a4c:	tst	x0, #0xff00
   22a50:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   22a54:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22a58:	add	x1, x1, #0x758
   22a5c:	mov	x0, x20
   22a60:	bl	50e0 <Perl_re_printf@plt>
   22a64:	b	20aec <my_re_intuit_start@@Base+0x478>
   22a68:	ldr	w0, [x20, #2368]
   22a6c:	tbnz	w0, #20, 22a7c <my_re_intuit_start@@Base+0x2408>
   22a70:	ldr	x0, [sp, #224]
   22a74:	tst	x0, #0xff00
   22a78:	b.eq	20aec <my_re_intuit_start@@Base+0x478>  // b.none
   22a7c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22a80:	add	x1, x1, #0x758
   22a84:	mov	x0, x20
   22a88:	bl	50e0 <Perl_re_printf@plt>
   22a8c:	b	20aec <my_re_intuit_start@@Base+0x478>
   22a90:	tbnz	w0, #1, 22a08 <my_re_intuit_start@@Base+0x2394>
   22a94:	b	20aec <my_re_intuit_start@@Base+0x478>
   22a98:	ldr	x0, [x21, #32]
   22a9c:	cbnz	x0, 22a14 <my_re_intuit_start@@Base+0x23a0>
   22aa0:	ldr	w0, [sp, #120]
   22aa4:	cbnz	w0, 22b40 <my_re_intuit_start@@Base+0x24cc>
   22aa8:	ldr	w0, [sp, #132]
   22aac:	cbz	w0, 22b78 <my_re_intuit_start@@Base+0x2504>
   22ab0:	ldr	x0, [x21, #72]
   22ab4:	cmp	x0, #0x0
   22ab8:	cset	w0, eq  // eq = none
   22abc:	cbnz	w0, 20aec <my_re_intuit_start@@Base+0x478>
   22ac0:	ldr	x24, [sp, #184]
   22ac4:	b	22a20 <my_re_intuit_start@@Base+0x23ac>
   22ac8:	ldr	x0, [sp, #144]
   22acc:	add	x0, x24, x0
   22ad0:	ldr	x1, [sp, #168]
   22ad4:	cmp	x1, x0
   22ad8:	b.cc	22b1c <my_re_intuit_start@@Base+0x24a8>  // b.lo, b.ul, b.last
   22adc:	ldr	x1, [sp, #168]
   22ae0:	cmp	x1, x0
   22ae4:	b.eq	22a20 <my_re_intuit_start@@Base+0x23ac>  // b.none
   22ae8:	ldr	w0, [x20, #2368]
   22aec:	tbnz	w0, #20, 22afc <my_re_intuit_start@@Base+0x2488>
   22af0:	ldr	x0, [sp, #224]
   22af4:	tst	x0, #0xff00
   22af8:	b.eq	23258 <my_re_intuit_start@@Base+0x2be4>  // b.none
   22afc:	sub	x3, x24, x27
   22b00:	ldr	x0, [sp, #176]
   22b04:	sub	x2, x0, x27
   22b08:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22b0c:	add	x1, x1, #0x7c8
   22b10:	mov	x0, x20
   22b14:	bl	50e0 <Perl_re_printf@plt>
   22b18:	b	23258 <my_re_intuit_start@@Base+0x2be4>
   22b1c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22b20:	add	x3, x3, #0x330
   22b24:	add	x3, x3, #0xd00
   22b28:	mov	w2, #0x606                 	// #1542
   22b2c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22b30:	add	x1, x1, #0xcb0
   22b34:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22b38:	add	x0, x0, #0x7a0
   22b3c:	bl	58e0 <__assert_fail@plt>
   22b40:	add	x24, x24, #0x1
   22b44:	ldr	w0, [x20, #2368]
   22b48:	tbnz	w0, #20, 22b58 <my_re_intuit_start@@Base+0x24e4>
   22b4c:	ldr	x0, [sp, #224]
   22b50:	tst	x0, #0xff00
   22b54:	b.eq	21b9c <my_re_intuit_start@@Base+0x1528>  // b.none
   22b58:	sub	x4, x24, x27
   22b5c:	ldr	x3, [x20, #1456]
   22b60:	ldr	x2, [x20, #1448]
   22b64:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22b68:	add	x1, x1, #0x808
   22b6c:	mov	x0, x20
   22b70:	bl	50e0 <Perl_re_printf@plt>
   22b74:	b	21b9c <my_re_intuit_start@@Base+0x1528>
   22b78:	ldr	x0, [x21, #64]
   22b7c:	cmp	x0, #0x0
   22b80:	cset	w0, eq  // eq = none
   22b84:	b	22abc <my_re_intuit_start@@Base+0x2448>
   22b88:	mov	x2, x23
   22b8c:	mov	x1, #0x1                   	// #1
   22b90:	mov	x0, x24
   22b94:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   22b98:	mov	x24, x0
   22b9c:	b	22a2c <my_re_intuit_start@@Base+0x23b8>
   22ba0:	ldr	w0, [x20, #2368]
   22ba4:	tbnz	w0, #20, 22bb4 <my_re_intuit_start@@Base+0x2540>
   22ba8:	ldr	x0, [sp, #224]
   22bac:	tst	x0, #0xff00
   22bb0:	b.eq	2120c <my_re_intuit_start@@Base+0xb98>  // b.none
   22bb4:	ldrb	w1, [x21]
   22bb8:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   22bbc:	add	x0, x0, #0xf60
   22bc0:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   22bc4:	add	x2, x2, #0xf70
   22bc8:	cmp	w1, #0x0
   22bcc:	ldr	x1, [sp, #144]
   22bd0:	add	x3, x24, x1
   22bd4:	sub	x4, x24, x27
   22bd8:	sub	x3, x3, x27
   22bdc:	csel	x2, x2, x0, ne  // ne = any
   22be0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22be4:	add	x1, x1, #0x848
   22be8:	mov	x0, x20
   22bec:	bl	50e0 <Perl_re_printf@plt>
   22bf0:	b	2120c <my_re_intuit_start@@Base+0xb98>
   22bf4:	ldr	w0, [x20, #2368]
   22bf8:	tbnz	w0, #20, 22c08 <my_re_intuit_start@@Base+0x2594>
   22bfc:	ldr	x0, [sp, #224]
   22c00:	tst	x0, #0xff00
   22c04:	b.eq	22c20 <my_re_intuit_start@@Base+0x25ac>  // b.none
   22c08:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22c0c:	add	x1, x1, #0x8c0
   22c10:	mov	x0, x20
   22c14:	bl	50e0 <Perl_re_printf@plt>
   22c18:	mov	x24, x26
   22c1c:	b	23400 <my_re_intuit_start@@Base+0x2d8c>
   22c20:	mov	x24, x26
   22c24:	b	23400 <my_re_intuit_start@@Base+0x2d8c>
   22c28:	ldr	x0, [x19, #88]
   22c2c:	ldr	x19, [x0, #104]
   22c30:	b	2343c <my_re_intuit_start@@Base+0x2dc8>
   22c34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22c38:	add	x3, x3, #0x330
   22c3c:	add	x3, x3, #0xd00
   22c40:	mov	w2, #0x661                 	// #1633
   22c44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22c48:	add	x1, x1, #0xcb0
   22c4c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22c50:	add	x0, x0, #0x188
   22c54:	bl	58e0 <__assert_fail@plt>
   22c58:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22c5c:	add	x3, x3, #0x330
   22c60:	add	x3, x3, #0xd00
   22c64:	mov	w2, #0x661                 	// #1633
   22c68:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22c6c:	add	x1, x1, #0xcb0
   22c70:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22c74:	add	x0, x0, #0xef8
   22c78:	bl	58e0 <__assert_fail@plt>
   22c7c:	mov	w1, #0x42                  	// #66
   22c80:	mov	x0, x19
   22c84:	bl	57d0 <Perl_mg_find@plt>
   22c88:	cbnz	x0, 2347c <my_re_intuit_start@@Base+0x2e08>
   22c8c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22c90:	add	x3, x3, #0x330
   22c94:	add	x3, x3, #0xd00
   22c98:	mov	w2, #0x661                 	// #1633
   22c9c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22ca0:	add	x1, x1, #0xcb0
   22ca4:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22ca8:	add	x0, x0, #0x1a8
   22cac:	bl	58e0 <__assert_fail@plt>
   22cb0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22cb4:	add	x3, x3, #0x330
   22cb8:	add	x3, x3, #0xd00
   22cbc:	mov	w2, #0x661                 	// #1633
   22cc0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22cc4:	add	x1, x1, #0xcb0
   22cc8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22ccc:	add	x0, x0, #0x1c0
   22cd0:	bl	58e0 <__assert_fail@plt>
   22cd4:	ldr	w0, [x19, #100]
   22cd8:	tbnz	w0, #2, 23020 <my_re_intuit_start@@Base+0x29ac>
   22cdc:	ldr	w0, [sp, #132]
   22ce0:	cbz	w0, 22ea4 <my_re_intuit_start@@Base+0x2830>
   22ce4:	ldr	x0, [x19, #88]
   22ce8:	ldr	x21, [x0, #112]
   22cec:	cbz	x21, 22e9c <my_re_intuit_start@@Base+0x2828>
   22cf0:	ldr	w0, [x21, #12]
   22cf4:	and	w1, w0, #0xff
   22cf8:	cmp	w1, #0x4
   22cfc:	b.ls	22de4 <my_re_intuit_start@@Base+0x2770>  // b.plast
   22d00:	and	w0, w0, #0x7fc000
   22d04:	and	w0, w0, #0xffc07fff
   22d08:	cmp	w0, #0x404, lsl #12
   22d0c:	b.ne	22e3c <my_re_intuit_start@@Base+0x27c8>  // b.any
   22d10:	cmp	w1, #0x6
   22d14:	b.ls	22e08 <my_re_intuit_start@@Base+0x2794>  // b.plast
   22d18:	ldr	x0, [x21]
   22d1c:	ldr	x0, [x0, #8]
   22d20:	cbz	x0, 22e3c <my_re_intuit_start@@Base+0x27c8>
   22d24:	ldrb	w0, [x0, #18]
   22d28:	cmp	w0, #0x42
   22d2c:	b.ne	22e2c <my_re_intuit_start@@Base+0x27b8>  // b.any
   22d30:	ldr	w0, [x21, #12]
   22d34:	tbnz	w0, #8, 22e60 <my_re_intuit_start@@Base+0x27ec>
   22d38:	ldr	x1, [x21]
   22d3c:	ldr	x0, [x1, #32]
   22d40:	sub	x0, x0, #0x1
   22d44:	str	x0, [x1, #32]
   22d48:	tbnz	x0, #63, 22e84 <my_re_intuit_start@@Base+0x2810>
   22d4c:	mov	w0, #0x0                   	// #0
   22d50:	mov	x24, x22
   22d54:	cbz	w0, 23494 <my_re_intuit_start@@Base+0x2e20>
   22d58:	ldr	w0, [x20, #2368]
   22d5c:	tbnz	w0, #20, 22d6c <my_re_intuit_start@@Base+0x26f8>
   22d60:	ldr	x0, [sp, #224]
   22d64:	tst	x0, #0xff00
   22d68:	b.eq	22d7c <my_re_intuit_start@@Base+0x2708>  // b.none
   22d6c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   22d70:	add	x1, x1, #0x900
   22d74:	mov	x0, x20
   22d78:	bl	50e0 <Perl_re_printf@plt>
   22d7c:	ldr	w0, [sp, #132]
   22d80:	cbz	w0, 22fd4 <my_re_intuit_start@@Base+0x2960>
   22d84:	ldr	x0, [x19, #88]
   22d88:	ldr	x1, [x0, #112]
   22d8c:	cbnz	x1, 22fe0 <my_re_intuit_start@@Base+0x296c>
   22d90:	ldr	x0, [x19, #88]
   22d94:	ldr	x1, [x0, #104]
   22d98:	cbz	x1, 22db0 <my_re_intuit_start@@Base+0x273c>
   22d9c:	ldr	w2, [x1, #8]
   22da0:	cmp	w2, #0x1
   22da4:	b.ls	23014 <my_re_intuit_start@@Base+0x29a0>  // b.plast
   22da8:	sub	w2, w2, #0x1
   22dac:	str	w2, [x1, #8]
   22db0:	ldr	x0, [x19, #88]
   22db4:	str	xzr, [x0, #112]
   22db8:	ldr	x0, [x19, #88]
   22dbc:	str	xzr, [x0, #104]
   22dc0:	ldr	x0, [x19, #88]
   22dc4:	str	xzr, [x0, #72]
   22dc8:	ldr	x0, [x19, #88]
   22dcc:	str	xzr, [x0, #64]
   22dd0:	ldr	w0, [x19, #56]
   22dd4:	and	w0, w0, #0xff9fffff
   22dd8:	str	w0, [x19, #56]
   22ddc:	mov	x24, x22
   22de0:	b	23494 <my_re_intuit_start@@Base+0x2e20>
   22de4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22de8:	add	x3, x3, #0x330
   22dec:	add	x3, x3, #0xd00
   22df0:	mov	w2, #0x66b                 	// #1643
   22df4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22df8:	add	x1, x1, #0xcb0
   22dfc:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22e00:	add	x0, x0, #0x188
   22e04:	bl	58e0 <__assert_fail@plt>
   22e08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22e0c:	add	x3, x3, #0x330
   22e10:	add	x3, x3, #0xd00
   22e14:	mov	w2, #0x66b                 	// #1643
   22e18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22e1c:	add	x1, x1, #0xcb0
   22e20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22e24:	add	x0, x0, #0xef8
   22e28:	bl	58e0 <__assert_fail@plt>
   22e2c:	mov	w1, #0x42                  	// #66
   22e30:	mov	x0, x21
   22e34:	bl	57d0 <Perl_mg_find@plt>
   22e38:	cbnz	x0, 22d30 <my_re_intuit_start@@Base+0x26bc>
   22e3c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22e40:	add	x3, x3, #0x330
   22e44:	add	x3, x3, #0xd00
   22e48:	mov	w2, #0x66b                 	// #1643
   22e4c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22e50:	add	x1, x1, #0xcb0
   22e54:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22e58:	add	x0, x0, #0x1a8
   22e5c:	bl	58e0 <__assert_fail@plt>
   22e60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22e64:	add	x3, x3, #0x330
   22e68:	add	x3, x3, #0xd00
   22e6c:	mov	w2, #0x66b                 	// #1643
   22e70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22e74:	add	x1, x1, #0xcb0
   22e78:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22e7c:	add	x0, x0, #0x1c0
   22e80:	bl	58e0 <__assert_fail@plt>
   22e84:	ldr	x0, [x19, #88]
   22e88:	ldr	x1, [x0, #112]
   22e8c:	ldr	x0, [x0, #72]
   22e90:	cmp	x1, x0
   22e94:	cset	w0, eq  // eq = none
   22e98:	b	22d50 <my_re_intuit_start@@Base+0x26dc>
   22e9c:	mov	w0, #0x0                   	// #0
   22ea0:	b	22d50 <my_re_intuit_start@@Base+0x26dc>
   22ea4:	ldr	x0, [x19, #88]
   22ea8:	ldr	x21, [x0, #104]
   22eac:	cbz	x21, 22fcc <my_re_intuit_start@@Base+0x2958>
   22eb0:	ldr	w0, [x21, #12]
   22eb4:	and	w1, w0, #0xff
   22eb8:	cmp	w1, #0x4
   22ebc:	b.ls	22f14 <my_re_intuit_start@@Base+0x28a0>  // b.plast
   22ec0:	and	w0, w0, #0x7fc000
   22ec4:	and	w0, w0, #0xffc07fff
   22ec8:	cmp	w0, #0x404, lsl #12
   22ecc:	b.ne	22f6c <my_re_intuit_start@@Base+0x28f8>  // b.any
   22ed0:	cmp	w1, #0x6
   22ed4:	b.ls	22f38 <my_re_intuit_start@@Base+0x28c4>  // b.plast
   22ed8:	ldr	x0, [x21]
   22edc:	ldr	x0, [x0, #8]
   22ee0:	cbz	x0, 22f6c <my_re_intuit_start@@Base+0x28f8>
   22ee4:	ldrb	w0, [x0, #18]
   22ee8:	cmp	w0, #0x42
   22eec:	b.ne	22f5c <my_re_intuit_start@@Base+0x28e8>  // b.any
   22ef0:	ldr	w0, [x21, #12]
   22ef4:	tbnz	w0, #8, 22f90 <my_re_intuit_start@@Base+0x291c>
   22ef8:	ldr	x1, [x21]
   22efc:	ldr	x0, [x1, #32]
   22f00:	sub	x0, x0, #0x1
   22f04:	str	x0, [x1, #32]
   22f08:	tbnz	x0, #63, 22fb4 <my_re_intuit_start@@Base+0x2940>
   22f0c:	mov	w0, #0x0                   	// #0
   22f10:	b	22d50 <my_re_intuit_start@@Base+0x26dc>
   22f14:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22f18:	add	x3, x3, #0x330
   22f1c:	add	x3, x3, #0xd00
   22f20:	mov	w2, #0x66f                 	// #1647
   22f24:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22f28:	add	x1, x1, #0xcb0
   22f2c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22f30:	add	x0, x0, #0x188
   22f34:	bl	58e0 <__assert_fail@plt>
   22f38:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22f3c:	add	x3, x3, #0x330
   22f40:	add	x3, x3, #0xd00
   22f44:	mov	w2, #0x66f                 	// #1647
   22f48:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22f4c:	add	x1, x1, #0xcb0
   22f50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   22f54:	add	x0, x0, #0xef8
   22f58:	bl	58e0 <__assert_fail@plt>
   22f5c:	mov	w1, #0x42                  	// #66
   22f60:	mov	x0, x21
   22f64:	bl	57d0 <Perl_mg_find@plt>
   22f68:	cbnz	x0, 22ef0 <my_re_intuit_start@@Base+0x287c>
   22f6c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22f70:	add	x3, x3, #0x330
   22f74:	add	x3, x3, #0xd00
   22f78:	mov	w2, #0x66f                 	// #1647
   22f7c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22f80:	add	x1, x1, #0xcb0
   22f84:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22f88:	add	x0, x0, #0x1a8
   22f8c:	bl	58e0 <__assert_fail@plt>
   22f90:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   22f94:	add	x3, x3, #0x330
   22f98:	add	x3, x3, #0xd00
   22f9c:	mov	w2, #0x66f                 	// #1647
   22fa0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   22fa4:	add	x1, x1, #0xcb0
   22fa8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   22fac:	add	x0, x0, #0x1c0
   22fb0:	bl	58e0 <__assert_fail@plt>
   22fb4:	ldr	x0, [x19, #88]
   22fb8:	ldr	x1, [x0, #104]
   22fbc:	ldr	x0, [x0, #64]
   22fc0:	cmp	x1, x0
   22fc4:	cset	w0, eq  // eq = none
   22fc8:	b	22d50 <my_re_intuit_start@@Base+0x26dc>
   22fcc:	mov	w0, #0x0                   	// #0
   22fd0:	b	22d50 <my_re_intuit_start@@Base+0x26dc>
   22fd4:	ldr	x0, [x19, #88]
   22fd8:	ldr	x1, [x0, #104]
   22fdc:	cbz	x1, 22ffc <my_re_intuit_start@@Base+0x2988>
   22fe0:	ldr	w2, [x1, #8]
   22fe4:	cmp	w2, #0x1
   22fe8:	b.ls	23008 <my_re_intuit_start@@Base+0x2994>  // b.plast
   22fec:	sub	w2, w2, #0x1
   22ff0:	str	w2, [x1, #8]
   22ff4:	ldr	w0, [sp, #132]
   22ff8:	cbnz	w0, 22d90 <my_re_intuit_start@@Base+0x271c>
   22ffc:	ldr	x0, [x19, #88]
   23000:	ldr	x1, [x0, #112]
   23004:	b	22d98 <my_re_intuit_start@@Base+0x2724>
   23008:	mov	x0, x20
   2300c:	bl	5860 <Perl_sv_free2@plt>
   23010:	b	22ff4 <my_re_intuit_start@@Base+0x2980>
   23014:	mov	x0, x20
   23018:	bl	5860 <Perl_sv_free2@plt>
   2301c:	b	22db0 <my_re_intuit_start@@Base+0x273c>
   23020:	mov	x24, x22
   23024:	b	23494 <my_re_intuit_start@@Base+0x2e20>
   23028:	ldr	x1, [x0, #112]
   2302c:	cbnz	x1, 20a88 <my_re_intuit_start@@Base+0x414>
   23030:	b	20aec <my_re_intuit_start@@Base+0x478>
   23034:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23038:	add	x3, x3, #0x330
   2303c:	add	x3, x3, #0xd00
   23040:	mov	w2, #0x68a                 	// #1674
   23044:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23048:	add	x1, x1, #0xcb0
   2304c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   23050:	add	x0, x0, #0x188
   23054:	bl	58e0 <__assert_fail@plt>
   23058:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2305c:	add	x3, x3, #0x330
   23060:	add	x3, x3, #0xd00
   23064:	mov	w2, #0x68a                 	// #1674
   23068:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2306c:	add	x1, x1, #0xcb0
   23070:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   23074:	add	x0, x0, #0xef8
   23078:	bl	58e0 <__assert_fail@plt>
   2307c:	mov	w1, #0x42                  	// #66
   23080:	mov	x0, x19
   23084:	bl	57d0 <Perl_mg_find@plt>
   23088:	cbnz	x0, 20ad4 <my_re_intuit_start@@Base+0x460>
   2308c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23090:	add	x3, x3, #0x330
   23094:	add	x3, x3, #0xd00
   23098:	mov	w2, #0x68a                 	// #1674
   2309c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   230a0:	add	x1, x1, #0xcb0
   230a4:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   230a8:	add	x0, x0, #0x1a8
   230ac:	bl	58e0 <__assert_fail@plt>
   230b0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   230b4:	add	x3, x3, #0x330
   230b8:	add	x3, x3, #0xd00
   230bc:	mov	w2, #0x68a                 	// #1674
   230c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   230c4:	add	x1, x1, #0xcb0
   230c8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   230cc:	add	x0, x0, #0x1c0
   230d0:	bl	58e0 <__assert_fail@plt>
   230d4:	mov	w7, #0x8503                	// #34051
   230d8:	mov	x4, #0x1e                  	// #30
   230dc:	ldr	x2, [sp, #184]
   230e0:	mov	x1, x21
   230e4:	mov	x0, x20
   230e8:	bl	53f0 <Perl_pv_pretty@plt>
   230ec:	str	x0, [sp, #184]
   230f0:	adrp	x26, 6a000 <boot_re@@Base+0x841c>
   230f4:	add	x26, x26, #0xf50
   230f8:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   230fc:	add	x0, x0, #0xf48
   23100:	ldr	x1, [sp, #168]
   23104:	cmp	x1, #0x0
   23108:	csel	x26, x0, x26, ne  // ne = any
   2310c:	ldr	x0, [x19, #88]
   23110:	ldr	x1, [x0, #32]
   23114:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   23118:	add	x21, x21, #0xf70
   2311c:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   23120:	add	x0, x0, #0xf60
   23124:	ldr	x2, [sp, #136]
   23128:	cmp	x2, x1
   2312c:	csel	x21, x0, x21, eq  // eq = none
   23130:	ldr	w0, [x2, #12]
   23134:	and	w1, w0, #0xff
   23138:	cmp	w1, #0xb
   2313c:	b.eq	21a90 <my_re_intuit_start@@Base+0x141c>  // b.none
   23140:	cmp	w1, #0xc
   23144:	b.eq	21ab4 <my_re_intuit_start@@Base+0x1440>  // b.none
   23148:	mov	w2, #0x2200                	// #8704
   2314c:	tst	w0, w2
   23150:	b.ne	21ad8 <my_re_intuit_start@@Base+0x1464>  // b.any
   23154:	and	w0, w0, #0x7fc000
   23158:	and	w0, w0, #0xffc07fff
   2315c:	cmp	w0, #0x404, lsl #12
   23160:	b.ne	21b30 <my_re_intuit_start@@Base+0x14bc>  // b.any
   23164:	cmp	w1, #0x6
   23168:	b.ls	21afc <my_re_intuit_start@@Base+0x1488>  // b.plast
   2316c:	ldr	x2, [sp, #136]
   23170:	ldr	x0, [x2]
   23174:	ldr	x0, [x0, #8]
   23178:	cbz	x0, 21b30 <my_re_intuit_start@@Base+0x14bc>
   2317c:	ldrb	w0, [x0, #18]
   23180:	cmp	w0, #0x42
   23184:	b.ne	21b20 <my_re_intuit_start@@Base+0x14ac>  // b.any
   23188:	ldr	x0, [sp, #136]
   2318c:	ldr	x0, [x0]
   23190:	ldrb	w1, [x0, #40]
   23194:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   23198:	add	x0, x5, #0x20
   2319c:	adrp	x5, 6a000 <boot_re@@Base+0x841c>
   231a0:	add	x5, x5, #0xf80
   231a4:	cmp	w1, #0x0
   231a8:	csel	x5, x5, x0, ne  // ne = any
   231ac:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   231b0:	add	x0, x0, #0x890
   231b4:	adrp	x6, 6a000 <boot_re@@Base+0x841c>
   231b8:	add	x6, x6, #0xf88
   231bc:	ldr	x1, [sp, #168]
   231c0:	cmp	x1, #0x0
   231c4:	csel	x6, x6, x0, ne  // ne = any
   231c8:	ldr	x4, [sp, #184]
   231cc:	mov	x3, x21
   231d0:	mov	x2, x26
   231d4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   231d8:	add	x1, x1, #0x3c0
   231dc:	mov	x0, x20
   231e0:	bl	50e0 <Perl_re_printf@plt>
   231e4:	ldr	x2, [sp, #168]
   231e8:	cbz	x2, 20a7c <my_re_intuit_start@@Base+0x408>
   231ec:	ldr	x0, [x19, #88]
   231f0:	ldr	x1, [x0, #96]
   231f4:	sub	x0, x2, x24
   231f8:	cmp	x0, x1
   231fc:	b.le	23210 <my_re_intuit_start@@Base+0x2b9c>
   23200:	ldrb	w0, [sp, #322]
   23204:	cbnz	w0, 21b54 <my_re_intuit_start@@Base+0x14e0>
   23208:	ldr	x0, [sp, #168]
   2320c:	sub	x24, x0, x1
   23210:	ldr	w0, [x20, #2368]
   23214:	tbnz	w0, #20, 23224 <my_re_intuit_start@@Base+0x2bb0>
   23218:	ldr	x0, [sp, #224]
   2321c:	tst	x0, #0xff00
   23220:	b.eq	23240 <my_re_intuit_start@@Base+0x2bcc>  // b.none
   23224:	sub	x3, x24, x27
   23228:	ldr	x0, [sp, #168]
   2322c:	sub	x2, x0, x27
   23230:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23234:	add	x1, x1, #0x3d8
   23238:	mov	x0, x20
   2323c:	bl	50e0 <Perl_re_printf@plt>
   23240:	ldr	x1, [x19, #88]
   23244:	sbfiz	x0, x28, #2, #32
   23248:	add	x0, x0, w28, sxtw
   2324c:	add	x0, x1, x0, lsl #3
   23250:	ldr	x0, [x0, #32]
   23254:	cbz	x0, 21b6c <my_re_intuit_start@@Base+0x14f8>
   23258:	ldr	x2, [x19, #88]
   2325c:	str	x2, [sp, #208]
   23260:	ldr	w0, [sp, #132]
   23264:	cbnz	w0, 2327c <my_re_intuit_start@@Base+0x2c08>
   23268:	sxtw	x0, w28
   2326c:	mov	x1, #0x28                  	// #40
   23270:	madd	x0, x0, x1, x2
   23274:	ldr	x0, [x0, #24]
   23278:	cbz	x0, 21c94 <my_re_intuit_start@@Base+0x1620>
   2327c:	ldr	x1, [x19, #64]
   23280:	and	x0, x28, #0xff
   23284:	mov	x2, #0x28                  	// #40
   23288:	ldr	x3, [sp, #208]
   2328c:	madd	x0, x0, x2, x3
   23290:	str	x0, [sp, #184]
   23294:	ldr	x21, [x0, #8]
   23298:	cmp	x1, x21
   2329c:	b.lt	21cdc <my_re_intuit_start@@Base+0x1668>  // b.tstop
   232a0:	ldrb	w26, [sp, #322]
   232a4:	cbnz	w26, 21d00 <my_re_intuit_start@@Base+0x168c>
   232a8:	sub	x1, x21, x1
   232ac:	add	x0, x23, x1
   232b0:	str	x0, [sp, #200]
   232b4:	cbz	w28, 21d50 <my_re_intuit_start@@Base+0x16dc>
   232b8:	ldr	x0, [sp, #200]
   232bc:	cmp	x24, x0
   232c0:	b.hi	21d18 <my_re_intuit_start@@Base+0x16a4>  // b.pmore
   232c4:	ldr	x0, [sp, #184]
   232c8:	ldr	x1, [x0, #16]
   232cc:	ldr	x0, [sp, #200]
   232d0:	sub	x0, x0, x24
   232d4:	cmp	x0, x1
   232d8:	b.lt	22100 <my_re_intuit_start@@Base+0x1a8c>  // b.tstop
   232dc:	cbnz	w26, 21d3c <my_re_intuit_start@@Base+0x16c8>
   232e0:	add	x1, x24, x1
   232e4:	ldr	x0, [sp, #200]
   232e8:	cmp	x0, x1
   232ec:	csel	x0, x0, x1, cc  // cc = lo, ul, last
   232f0:	str	x0, [sp, #184]
   232f4:	b	21d7c <my_re_intuit_start@@Base+0x1708>
   232f8:	ldr	x0, [sp, #152]
   232fc:	ldr	x0, [x0, #16]
   23300:	cbz	x0, 22cd4 <my_re_intuit_start@@Base+0x2660>
   23304:	ldrb	w2, [x0, #1]
   23308:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2330c:	ldr	x1, [x1, #3768]
   23310:	ldrb	w1, [x1, w2, sxtw]
   23314:	cmp	w1, #0x51
   23318:	b.eq	22cd4 <my_re_intuit_start@@Base+0x2660>  // b.none
   2331c:	str	x22, [sp, #176]
   23320:	mov	x24, x22
   23324:	mov	x25, #0x0                   	// #0
   23328:	mov	w21, #0x1                   	// #1
   2332c:	cmp	w1, #0x23
   23330:	b.eq	228dc <my_re_intuit_start@@Base+0x2268>  // b.none
   23334:	ldr	x0, [x19, #88]
   23338:	ldr	x1, [x0, #24]
   2333c:	cbz	x1, 22924 <my_re_intuit_start@@Base+0x22b0>
   23340:	ldrb	w0, [sp, #322]
   23344:	cbz	w0, 22968 <my_re_intuit_start@@Base+0x22f4>
   23348:	ldr	x0, [x19, #64]
   2334c:	cmp	x0, #0x0
   23350:	csel	w21, w21, wzr, ne  // ne = any
   23354:	mov	x2, x23
   23358:	sxtw	x1, w21
   2335c:	mov	x0, x24
   23360:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   23364:	mov	x21, x0
   23368:	str	xzr, [sp, #184]
   2336c:	ldr	w0, [x20, #2368]
   23370:	tbnz	w0, #20, 23380 <my_re_intuit_start@@Base+0x2d0c>
   23374:	ldr	x0, [sp, #224]
   23378:	tst	x0, #0xff00
   2337c:	b.eq	233a4 <my_re_intuit_start@@Base+0x2d30>  // b.none
   23380:	sub	x5, x21, x27
   23384:	sub	x4, x24, x27
   23388:	ldr	x0, [sp, #168]
   2338c:	sub	x3, x0, x27
   23390:	ldr	x2, [sp, #144]
   23394:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23398:	add	x1, x1, #0x708
   2339c:	mov	x0, x20
   233a0:	bl	50e0 <Perl_re_printf@plt>
   233a4:	add	x5, sp, #0xe8
   233a8:	mov	x4, x21
   233ac:	mov	x3, x24
   233b0:	ldr	x0, [sp, #152]
   233b4:	ldr	x2, [x0, #16]
   233b8:	mov	x1, x19
   233bc:	mov	x0, x20
   233c0:	bl	19a68 <Perl_re_exec_indentf@@Base+0xd898>
   233c4:	mov	x26, x0
   233c8:	cbz	x0, 229c8 <my_re_intuit_start@@Base+0x2354>
   233cc:	cmp	x24, x0
   233d0:	b.eq	22bf4 <my_re_intuit_start@@Base+0x2580>  // b.none
   233d4:	ldr	w0, [x20, #2368]
   233d8:	tbnz	w0, #20, 233e8 <my_re_intuit_start@@Base+0x2d74>
   233dc:	ldr	x0, [sp, #224]
   233e0:	tst	x0, #0xff00
   233e4:	b.eq	23400 <my_re_intuit_start@@Base+0x2d8c>  // b.none
   233e8:	sub	x3, x26, x27
   233ec:	sub	x2, x24, x27
   233f0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   233f4:	add	x1, x1, #0x898
   233f8:	mov	x0, x20
   233fc:	bl	50e0 <Perl_re_printf@plt>
   23400:	cmp	x24, x22
   23404:	b.eq	22cd4 <my_re_intuit_start@@Base+0x2660>  // b.none
   23408:	ldr	w0, [x20, #2368]
   2340c:	tbnz	w0, #20, 2341c <my_re_intuit_start@@Base+0x2da8>
   23410:	ldr	x0, [sp, #224]
   23414:	tst	x0, #0xff00
   23418:	b.eq	2342c <my_re_intuit_start@@Base+0x2db8>  // b.none
   2341c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23420:	add	x1, x1, #0x8e8
   23424:	mov	x0, x20
   23428:	bl	50e0 <Perl_re_printf@plt>
   2342c:	ldr	w0, [sp, #132]
   23430:	cbz	w0, 22c28 <my_re_intuit_start@@Base+0x25b4>
   23434:	ldr	x0, [x19, #88]
   23438:	ldr	x19, [x0, #112]
   2343c:	ldr	w0, [x19, #12]
   23440:	and	w1, w0, #0xff
   23444:	cmp	w1, #0x4
   23448:	b.ls	22c34 <my_re_intuit_start@@Base+0x25c0>  // b.plast
   2344c:	and	w0, w0, #0x7fc000
   23450:	and	w0, w0, #0xffc07fff
   23454:	cmp	w0, #0x404, lsl #12
   23458:	b.ne	22c8c <my_re_intuit_start@@Base+0x2618>  // b.any
   2345c:	cmp	w1, #0x6
   23460:	b.ls	22c58 <my_re_intuit_start@@Base+0x25e4>  // b.plast
   23464:	ldr	x0, [x19]
   23468:	ldr	x0, [x0, #8]
   2346c:	cbz	x0, 22c8c <my_re_intuit_start@@Base+0x2618>
   23470:	ldrb	w0, [x0, #18]
   23474:	cmp	w0, #0x42
   23478:	b.ne	22c7c <my_re_intuit_start@@Base+0x2608>  // b.any
   2347c:	ldr	w0, [x19, #12]
   23480:	tbnz	w0, #8, 22cb0 <my_re_intuit_start@@Base+0x263c>
   23484:	ldr	x1, [x19]
   23488:	ldr	x0, [x1, #32]
   2348c:	add	x0, x0, #0x1
   23490:	str	x0, [x1, #32]
   23494:	ldr	w0, [x20, #2368]
   23498:	tbnz	w0, #20, 234a8 <my_re_intuit_start@@Base+0x2e34>
   2349c:	ldr	x0, [sp, #224]
   234a0:	tst	x0, #0xff00
   234a4:	b.eq	20b20 <my_re_intuit_start@@Base+0x4ac>  // b.none
   234a8:	sub	x4, x24, x27
   234ac:	ldr	x3, [x20, #1488]
   234b0:	ldr	x2, [x20, #1480]
   234b4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   234b8:	add	x1, x1, #0x928
   234bc:	mov	x0, x20
   234c0:	bl	50e0 <Perl_re_printf@plt>
   234c4:	b	20b20 <my_re_intuit_start@@Base+0x4ac>
   234c8:	ldr	x0, [sp, #208]
   234cc:	ldr	x24, [x0, #8]
   234d0:	ldr	x0, [sp, #184]
   234d4:	sub	x24, x0, x24
   234d8:	add	x24, x24, #0x1
   234dc:	ldr	w0, [x20, #2368]
   234e0:	tbz	w0, #20, 22610 <my_re_intuit_start@@Base+0x1f9c>
   234e4:	adrp	x21, 6a000 <boot_re@@Base+0x841c>
   234e8:	add	x21, x21, #0xf60
   234ec:	b	22638 <my_re_intuit_start@@Base+0x1fc4>
   234f0:	bl	5300 <__stack_chk_fail@plt>

00000000000234f4 <my_regexec@@Base>:
   234f4:	stp	x29, x30, [sp, #-336]!
   234f8:	mov	x29, sp
   234fc:	stp	x19, x20, [sp, #16]
   23500:	stp	x21, x22, [sp, #32]
   23504:	stp	x23, x24, [sp, #48]
   23508:	stp	x25, x26, [sp, #64]
   2350c:	stp	x27, x28, [sp, #80]
   23510:	mov	x19, x0
   23514:	mov	x24, x1
   23518:	mov	x25, x2
   2351c:	mov	x22, x3
   23520:	mov	x23, x4
   23524:	mov	x27, x5
   23528:	str	x6, [sp, #112]
   2352c:	ldr	w0, [sp, #336]
   23530:	str	w0, [sp, #120]
   23534:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   23538:	ldr	x0, [x0, #3920]
   2353c:	ldr	x1, [x0]
   23540:	str	x1, [sp, #328]
   23544:	mov	x1, #0x0                   	// #0
   23548:	ldr	x21, [x24]
   2354c:	ldr	w0, [x24, #12]
   23550:	and	w1, w0, #0xff
   23554:	cmp	w1, #0x8
   23558:	b.eq	23584 <my_regexec@@Base+0x90>  // b.none
   2355c:	mov	w2, #0x80ff                	// #33023
   23560:	movk	w2, #0x100, lsl #16
   23564:	and	w0, w0, w2
   23568:	mov	w2, #0xa                   	// #10
   2356c:	movk	w2, #0x100, lsl #16
   23570:	cmp	w0, w2
   23574:	b.ne	23618 <my_regexec@@Base+0x124>  // b.any
   23578:	cmp	w1, #0xa
   2357c:	b.ne	23584 <my_regexec@@Base+0x90>  // b.any
   23580:	ldr	x21, [x21, #24]
   23584:	ldr	x0, [sp, #112]
   23588:	ldr	w0, [x0, #12]
   2358c:	tbz	w0, #29, 2363c <my_regexec@@Base+0x148>
   23590:	ldr	x0, [x19, #224]
   23594:	ldr	w0, [x0, #56]
   23598:	tbnz	w0, #3, 261fc <my_regexec@@Base+0x2d08>
   2359c:	ldr	x0, [x21, #104]
   235a0:	str	x0, [sp, #128]
   235a4:	str	xzr, [sp, #216]
   235a8:	mov	w0, #0x1                   	// #1
   235ac:	str	w0, [sp, #108]
   235b0:	mov	w2, #0x1                   	// #1
   235b4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   235b8:	add	x1, x1, #0x608
   235bc:	mov	x0, x19
   235c0:	bl	54f0 <Perl_get_sv@plt>
   235c4:	mov	x20, x0
   235c8:	cbz	x0, 23654 <my_regexec@@Base+0x160>
   235cc:	ldr	w0, [x0, #12]
   235d0:	tbz	w0, #8, 23720 <my_regexec@@Base+0x22c>
   235d4:	ldr	w1, [x20, #12]
   235d8:	and	w0, w1, #0x3fff00
   235dc:	and	w0, w0, #0xffe001ff
   235e0:	cmp	w0, #0x100
   235e4:	b.ne	2378c <my_regexec@@Base+0x298>  // b.any
   235e8:	and	w2, w1, #0xf
   235ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   235f0:	ldr	x0, [x0, #3712]
   235f4:	ldrb	w0, [x0, w2, uxtw]
   235f8:	cbz	w0, 23734 <my_regexec@@Base+0x240>
   235fc:	and	w0, w1, #0xc000
   23600:	cmp	w0, #0x8, lsl #12
   23604:	b.eq	23758 <my_regexec@@Base+0x264>  // b.none
   23608:	ldr	x0, [x20]
   2360c:	ldr	x0, [x0, #32]
   23610:	str	x0, [sp, #216]
   23614:	b	23654 <my_regexec@@Base+0x160>
   23618:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2361c:	add	x3, x3, #0x330
   23620:	add	x3, x3, #0x3e0
   23624:	mov	w2, #0xb6                  	// #182
   23628:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2362c:	add	x1, x1, #0xc80
   23630:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   23634:	add	x0, x0, #0x128
   23638:	bl	58e0 <__assert_fail@plt>
   2363c:	ldr	x0, [x21, #104]
   23640:	str	x0, [sp, #128]
   23644:	str	xzr, [sp, #216]
   23648:	ldr	x0, [x19, #224]
   2364c:	str	wzr, [sp, #108]
   23650:	cbnz	x0, 235b0 <my_regexec@@Base+0xbc>
   23654:	cbz	x25, 237a0 <my_regexec@@Base+0x2ac>
   23658:	cbz	x22, 237c4 <my_regexec@@Base+0x2d0>
   2365c:	cbz	x23, 237e8 <my_regexec@@Base+0x2f4>
   23660:	ldr	w0, [x19, #2368]
   23664:	tbnz	w0, #20, 23674 <my_regexec@@Base+0x180>
   23668:	ldr	x0, [sp, #216]
   2366c:	tst	x0, #0xff00
   23670:	b.eq	23694 <my_regexec@@Base+0x1a0>  // b.none
   23674:	adrp	x5, 6b000 <boot_re@@Base+0x941c>
   23678:	add	x5, x5, #0x998
   2367c:	mov	x4, x22
   23680:	mov	x3, x25
   23684:	ldrb	w2, [sp, #108]
   23688:	mov	x1, x24
   2368c:	mov	x0, x19
   23690:	bl	89c0 <Perl__inverse_folds@plt+0x2fc0>
   23694:	str	x23, [sp, #240]
   23698:	str	x22, [sp, #248]
   2369c:	ldrb	w0, [sp, #108]
   236a0:	strb	w0, [sp, #322]
   236a4:	ldr	w0, [x21, #100]
   236a8:	tbz	w0, #8, 23ca0 <my_regexec@@Base+0x7ac>
   236ac:	mov	x2, x25
   236b0:	ldr	x0, [sp, #120]
   236b4:	tbz	w0, #3, 2380c <my_regexec@@Base+0x318>
   236b8:	str	x2, [sp, #272]
   236bc:	ldr	w0, [x19, #2368]
   236c0:	tbnz	w0, #20, 236cc <my_regexec@@Base+0x1d8>
   236c4:	ldr	x0, [sp, #216]
   236c8:	tbz	w0, #23, 236e0 <my_regexec@@Base+0x1ec>
   236cc:	sub	x2, x2, x23
   236d0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   236d4:	add	x1, x1, #0x9d0
   236d8:	mov	x0, x19
   236dc:	bl	50e0 <Perl_re_printf@plt>
   236e0:	ldr	w0, [x21, #100]
   236e4:	tbz	w0, #12, 23c54 <my_regexec@@Base+0x760>
   236e8:	ldr	x1, [x21, #80]
   236ec:	cbz	x1, 23c4c <my_regexec@@Base+0x758>
   236f0:	ldrb	w0, [sp, #322]
   236f4:	cbnz	w0, 23c1c <my_regexec@@Base+0x728>
   236f8:	ldr	x26, [sp, #272]
   236fc:	sub	x26, x26, x1
   23700:	ldr	x0, [sp, #240]
   23704:	cmp	x26, x0
   23708:	b.cc	23c34 <my_regexec@@Base+0x740>  // b.lo, b.ul, b.last
   2370c:	ldr	x0, [sp, #120]
   23710:	tst	x0, #0x80
   23714:	ccmp	x26, x25, #0x2, ne  // ne = any
   23718:	b.cs	23ca4 <my_regexec@@Base+0x7b0>  // b.hs, b.nlast
   2371c:	b	23c34 <my_regexec@@Base+0x740>
   23720:	mov	x2, #0xff08                	// #65288
   23724:	mov	x1, x20
   23728:	mov	x0, x19
   2372c:	bl	5310 <Perl_sv_setuv@plt>
   23730:	b	235d4 <my_regexec@@Base+0xe0>
   23734:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23738:	add	x3, x3, #0x330
   2373c:	add	x3, x3, #0xd58
   23740:	mov	w2, #0xcad                 	// #3245
   23744:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23748:	add	x1, x1, #0xcb0
   2374c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   23750:	add	x0, x0, #0xda0
   23754:	bl	58e0 <__assert_fail@plt>
   23758:	and	w0, w1, #0xff
   2375c:	sub	w0, w0, #0x9
   23760:	cmp	w0, #0x1
   23764:	b.hi	23608 <my_regexec@@Base+0x114>  // b.pmore
   23768:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2376c:	add	x3, x3, #0x330
   23770:	add	x3, x3, #0xd58
   23774:	mov	w2, #0xcad                 	// #3245
   23778:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2377c:	add	x1, x1, #0xcb0
   23780:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   23784:	add	x0, x0, #0xdd0
   23788:	bl	58e0 <__assert_fail@plt>
   2378c:	mov	w2, #0x2                   	// #2
   23790:	mov	x1, x20
   23794:	mov	x0, x19
   23798:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   2379c:	b	23610 <my_regexec@@Base+0x11c>
   237a0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   237a4:	add	x3, x3, #0x330
   237a8:	add	x3, x3, #0xd58
   237ac:	mov	w2, #0xcaf                 	// #3247
   237b0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   237b4:	add	x1, x1, #0xcb0
   237b8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   237bc:	add	x0, x0, #0x988
   237c0:	bl	58e0 <__assert_fail@plt>
   237c4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   237c8:	add	x3, x3, #0x330
   237cc:	add	x3, x3, #0xd58
   237d0:	mov	w2, #0xcaf                 	// #3247
   237d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   237d8:	add	x1, x1, #0xcb0
   237dc:	adrp	x0, 66000 <boot_re@@Base+0x441c>
   237e0:	add	x0, x0, #0x660
   237e4:	bl	58e0 <__assert_fail@plt>
   237e8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   237ec:	add	x3, x3, #0x330
   237f0:	add	x3, x3, #0xd58
   237f4:	mov	w2, #0xcaf                 	// #3247
   237f8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   237fc:	add	x1, x1, #0xcb0
   23800:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   23804:	add	x0, x0, #0x98
   23808:	bl	58e0 <__assert_fail@plt>
   2380c:	ldr	x1, [sp, #112]
   23810:	mov	x0, x19
   23814:	bl	4f10 <Perl_mg_find_mglob@plt>
   23818:	cbz	x0, 23c14 <my_regexec@@Base+0x720>
   2381c:	ldr	x20, [x0, #24]
   23820:	mov	x2, x23
   23824:	tbnz	x20, #63, 236b8 <my_regexec@@Base+0x1c4>
   23828:	ldrb	w1, [x0, #18]
   2382c:	cmp	w1, #0x67
   23830:	b.ne	238d8 <my_regexec@@Base+0x3e4>  // b.any
   23834:	ldrb	w0, [x0, #19]
   23838:	tbnz	w0, #6, 23a2c <my_regexec@@Base+0x538>
   2383c:	ldr	x0, [sp, #112]
   23840:	ldr	w0, [x0, #12]
   23844:	tbz	w0, #29, 23a2c <my_regexec@@Base+0x538>
   23848:	ldr	x1, [x19, #224]
   2384c:	ldr	w1, [x1, #56]
   23850:	tbnz	w1, #3, 23a2c <my_regexec@@Base+0x538>
   23854:	tbnz	w0, #21, 238c4 <my_regexec@@Base+0x3d0>
   23858:	tbz	w0, #11, 23a10 <my_regexec@@Base+0x51c>
   2385c:	and	w2, w0, #0xf
   23860:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   23864:	ldr	x1, [x1, #3840]
   23868:	ldrb	w1, [x1, w2, uxtw]
   2386c:	cbz	w1, 238fc <my_regexec@@Base+0x408>
   23870:	and	w3, w0, #0xc000
   23874:	cmp	w3, #0x8, lsl #12
   23878:	b.eq	23920 <my_regexec@@Base+0x42c>  // b.none
   2387c:	and	w0, w0, #0xff
   23880:	cmp	w0, #0xf
   23884:	b.eq	23954 <my_regexec@@Base+0x460>  // b.none
   23888:	ldr	x1, [sp, #112]
   2388c:	ldr	x2, [x1, #16]
   23890:	ldr	w1, [x2, #12]
   23894:	tbz	w1, #20, 23a10 <my_regexec@@Base+0x51c>
   23898:	cmp	w3, #0x8, lsl #12
   2389c:	b.eq	23988 <my_regexec@@Base+0x494>  // b.none
   238a0:	cmp	w0, #0xf
   238a4:	b.eq	239b8 <my_regexec@@Base+0x4c4>  // b.none
   238a8:	and	w1, w1, #0xff
   238ac:	cmp	w1, #0x6
   238b0:	b.ls	239ec <my_regexec@@Base+0x4f8>  // b.plast
   238b4:	ldr	x0, [x2]
   238b8:	ldr	x0, [x0]
   238bc:	ldr	w0, [x0, #12]
   238c0:	tbz	w0, #28, 23a10 <my_regexec@@Base+0x51c>
   238c4:	mov	x2, x22
   238c8:	mov	x1, x23
   238cc:	mov	x0, x19
   238d0:	bl	5720 <Perl_utf8_length@plt>
   238d4:	b	23a1c <my_regexec@@Base+0x528>
   238d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   238dc:	add	x3, x3, #0x330
   238e0:	add	x3, x3, #0xd68
   238e4:	mov	w2, #0x69                  	// #105
   238e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   238ec:	add	x1, x1, #0xc80
   238f0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   238f4:	add	x0, x0, #0x9a8
   238f8:	bl	58e0 <__assert_fail@plt>
   238fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23900:	add	x3, x3, #0x330
   23904:	add	x3, x3, #0xd68
   23908:	mov	w2, #0x70                  	// #112
   2390c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23910:	add	x1, x1, #0xc80
   23914:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23918:	add	x0, x0, #0x160
   2391c:	bl	58e0 <__assert_fail@plt>
   23920:	and	w1, w0, #0xff
   23924:	sub	w1, w1, #0x9
   23928:	cmp	w1, #0x1
   2392c:	b.hi	2387c <my_regexec@@Base+0x388>  // b.pmore
   23930:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23934:	add	x3, x3, #0x330
   23938:	add	x3, x3, #0xd68
   2393c:	mov	w2, #0x70                  	// #112
   23940:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23944:	add	x1, x1, #0xc80
   23948:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   2394c:	add	x0, x0, #0x190
   23950:	bl	58e0 <__assert_fail@plt>
   23954:	ldr	x1, [sp, #112]
   23958:	ldr	x1, [x1]
   2395c:	ldrb	w1, [x1, #129]
   23960:	tbnz	w1, #6, 23888 <my_regexec@@Base+0x394>
   23964:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23968:	add	x3, x3, #0x330
   2396c:	add	x3, x3, #0xd68
   23970:	mov	w2, #0x70                  	// #112
   23974:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23978:	add	x1, x1, #0xc80
   2397c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23980:	add	x0, x0, #0x1a8
   23984:	bl	58e0 <__assert_fail@plt>
   23988:	sub	w3, w0, #0x9
   2398c:	cmp	w3, #0x1
   23990:	b.hi	238a0 <my_regexec@@Base+0x3ac>  // b.pmore
   23994:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23998:	add	x3, x3, #0x330
   2399c:	add	x3, x3, #0xd68
   239a0:	mov	w2, #0x70                  	// #112
   239a4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   239a8:	add	x1, x1, #0xc80
   239ac:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   239b0:	add	x0, x0, #0x190
   239b4:	bl	58e0 <__assert_fail@plt>
   239b8:	ldr	x0, [sp, #112]
   239bc:	ldr	x0, [x0]
   239c0:	ldrb	w0, [x0, #129]
   239c4:	tbnz	w0, #6, 238a8 <my_regexec@@Base+0x3b4>
   239c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   239cc:	add	x3, x3, #0x330
   239d0:	add	x3, x3, #0xd68
   239d4:	mov	w2, #0x70                  	// #112
   239d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   239dc:	add	x1, x1, #0xc80
   239e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   239e4:	add	x0, x0, #0x1a8
   239e8:	bl	58e0 <__assert_fail@plt>
   239ec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   239f0:	add	x3, x3, #0x330
   239f4:	add	x3, x3, #0xd68
   239f8:	mov	w2, #0x70                  	// #112
   239fc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23a00:	add	x1, x1, #0xc80
   23a04:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23a08:	add	x0, x0, #0x1f0
   23a0c:	bl	58e0 <__assert_fail@plt>
   23a10:	ldr	x1, [sp, #112]
   23a14:	mov	x0, x19
   23a18:	bl	5850 <Perl_sv_len_utf8@plt>
   23a1c:	cmp	x20, x0
   23a20:	b.ls	23a34 <my_regexec@@Base+0x540>  // b.plast
   23a24:	sub	x20, x22, x23
   23a28:	add	x20, x20, #0x1
   23a2c:	add	x2, x23, x20
   23a30:	b	236b8 <my_regexec@@Base+0x1c4>
   23a34:	ldr	x0, [sp, #112]
   23a38:	ldr	w0, [x0, #12]
   23a3c:	tbnz	w0, #21, 23acc <my_regexec@@Base+0x5d8>
   23a40:	tbz	w0, #11, 23aac <my_regexec@@Base+0x5b8>
   23a44:	and	w2, w0, #0xf
   23a48:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   23a4c:	ldr	x1, [x1, #3840]
   23a50:	ldrb	w1, [x1, w2, uxtw]
   23a54:	cbz	w1, 23b00 <my_regexec@@Base+0x60c>
   23a58:	and	w3, w0, #0xc000
   23a5c:	cmp	w3, #0x8, lsl #12
   23a60:	b.eq	23b24 <my_regexec@@Base+0x630>  // b.none
   23a64:	and	w0, w0, #0xff
   23a68:	cmp	w0, #0xf
   23a6c:	b.eq	23b58 <my_regexec@@Base+0x664>  // b.none
   23a70:	ldr	x1, [sp, #112]
   23a74:	ldr	x2, [x1, #16]
   23a78:	ldr	w1, [x2, #12]
   23a7c:	tbz	w1, #20, 23aac <my_regexec@@Base+0x5b8>
   23a80:	cmp	w3, #0x8, lsl #12
   23a84:	b.eq	23b8c <my_regexec@@Base+0x698>  // b.none
   23a88:	cmp	w0, #0xf
   23a8c:	b.eq	23bbc <my_regexec@@Base+0x6c8>  // b.none
   23a90:	and	w1, w1, #0xff
   23a94:	cmp	w1, #0x6
   23a98:	b.ls	23bf0 <my_regexec@@Base+0x6fc>  // b.plast
   23a9c:	ldr	x0, [x2]
   23aa0:	ldr	x0, [x0]
   23aa4:	ldr	w0, [x0, #12]
   23aa8:	tbnz	w0, #28, 23acc <my_regexec@@Base+0x5d8>
   23aac:	mov	w4, #0x20                  	// #32
   23ab0:	mov	x3, #0x0                   	// #0
   23ab4:	mov	x2, x20
   23ab8:	ldr	x1, [sp, #112]
   23abc:	mov	x0, x19
   23ac0:	bl	5140 <Perl_sv_pos_u2b_flags@plt>
   23ac4:	mov	x20, x0
   23ac8:	b	23a2c <my_regexec@@Base+0x538>
   23acc:	sub	x0, x20, #0x1
   23ad0:	mov	x2, x23
   23ad4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   23ad8:	ldr	x1, [x1, #4064]
   23adc:	cbz	x20, 23af8 <my_regexec@@Base+0x604>
   23ae0:	ldrb	w3, [x2]
   23ae4:	ldrb	w3, [x1, w3, sxtw]
   23ae8:	add	x2, x2, x3
   23aec:	sub	x0, x0, #0x1
   23af0:	cmn	x0, #0x1
   23af4:	b.ne	23ae0 <my_regexec@@Base+0x5ec>  // b.any
   23af8:	sub	x20, x2, x23
   23afc:	b	23a2c <my_regexec@@Base+0x538>
   23b00:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23b04:	add	x3, x3, #0x330
   23b08:	add	x3, x3, #0xd78
   23b0c:	mov	w2, #0x104                 	// #260
   23b10:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23b14:	add	x1, x1, #0xc80
   23b18:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23b1c:	add	x0, x0, #0x160
   23b20:	bl	58e0 <__assert_fail@plt>
   23b24:	and	w1, w0, #0xff
   23b28:	sub	w1, w1, #0x9
   23b2c:	cmp	w1, #0x1
   23b30:	b.hi	23a64 <my_regexec@@Base+0x570>  // b.pmore
   23b34:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23b38:	add	x3, x3, #0x330
   23b3c:	add	x3, x3, #0xd78
   23b40:	mov	w2, #0x104                 	// #260
   23b44:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23b48:	add	x1, x1, #0xc80
   23b4c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23b50:	add	x0, x0, #0x190
   23b54:	bl	58e0 <__assert_fail@plt>
   23b58:	ldr	x1, [sp, #112]
   23b5c:	ldr	x1, [x1]
   23b60:	ldrb	w1, [x1, #129]
   23b64:	tbnz	w1, #6, 23a70 <my_regexec@@Base+0x57c>
   23b68:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23b6c:	add	x3, x3, #0x330
   23b70:	add	x3, x3, #0xd78
   23b74:	mov	w2, #0x104                 	// #260
   23b78:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23b7c:	add	x1, x1, #0xc80
   23b80:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23b84:	add	x0, x0, #0x1a8
   23b88:	bl	58e0 <__assert_fail@plt>
   23b8c:	sub	w3, w0, #0x9
   23b90:	cmp	w3, #0x1
   23b94:	b.hi	23a88 <my_regexec@@Base+0x594>  // b.pmore
   23b98:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23b9c:	add	x3, x3, #0x330
   23ba0:	add	x3, x3, #0xd78
   23ba4:	mov	w2, #0x104                 	// #260
   23ba8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23bac:	add	x1, x1, #0xc80
   23bb0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23bb4:	add	x0, x0, #0x190
   23bb8:	bl	58e0 <__assert_fail@plt>
   23bbc:	ldr	x0, [sp, #112]
   23bc0:	ldr	x0, [x0]
   23bc4:	ldrb	w0, [x0, #129]
   23bc8:	tbnz	w0, #6, 23a90 <my_regexec@@Base+0x59c>
   23bcc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23bd0:	add	x3, x3, #0x330
   23bd4:	add	x3, x3, #0xd78
   23bd8:	mov	w2, #0x104                 	// #260
   23bdc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23be0:	add	x1, x1, #0xc80
   23be4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23be8:	add	x0, x0, #0x1a8
   23bec:	bl	58e0 <__assert_fail@plt>
   23bf0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23bf4:	add	x3, x3, #0x330
   23bf8:	add	x3, x3, #0xd78
   23bfc:	mov	w2, #0x104                 	// #260
   23c00:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23c04:	add	x1, x1, #0xc80
   23c08:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   23c0c:	add	x0, x0, #0x1f0
   23c10:	bl	58e0 <__assert_fail@plt>
   23c14:	mov	x2, x23
   23c18:	b	236b8 <my_regexec@@Base+0x1c4>
   23c1c:	ldr	x2, [sp, #240]
   23c20:	neg	x1, x1
   23c24:	ldr	x0, [sp, #272]
   23c28:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   23c2c:	mov	x26, x0
   23c30:	cbnz	x0, 2370c <my_regexec@@Base+0x218>
   23c34:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23c38:	add	x1, x1, #0x9f0
   23c3c:	mov	x0, x19
   23c40:	bl	50e0 <Perl_re_printf@plt>
   23c44:	mov	w0, #0x0                   	// #0
   23c48:	b	23dac <my_regexec@@Base+0x8b8>
   23c4c:	ldr	x26, [sp, #272]
   23c50:	b	23ca4 <my_regexec@@Base+0x7b0>
   23c54:	ldr	x26, [x21, #80]
   23c58:	cbz	x26, 23c94 <my_regexec@@Base+0x7a0>
   23c5c:	ldrb	w0, [sp, #322]
   23c60:	cbnz	w0, 23c78 <my_regexec@@Base+0x784>
   23c64:	sub	x26, x25, x26
   23c68:	ldr	x0, [sp, #240]
   23c6c:	cmp	x26, x0
   23c70:	csel	x26, x26, x23, cs  // cs = hs, nlast
   23c74:	b	23ca4 <my_regexec@@Base+0x7b0>
   23c78:	ldr	x2, [sp, #240]
   23c7c:	neg	x1, x26
   23c80:	mov	x0, x25
   23c84:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   23c88:	cmp	x0, #0x0
   23c8c:	csel	x26, x0, x23, ne  // ne = any
   23c90:	b	23ca4 <my_regexec@@Base+0x7b0>
   23c94:	tst	x0, #0x200
   23c98:	csel	x26, x25, x23, eq  // eq = none
   23c9c:	b	23ca4 <my_regexec@@Base+0x7b0>
   23ca0:	mov	x26, x25
   23ca4:	ldr	x28, [x21, #64]
   23ca8:	add	x0, x26, x28
   23cac:	cmp	x0, x22
   23cb0:	ccmp	x26, x23, #0x0, ls  // ls = plast
   23cb4:	b.cc	23d98 <my_regexec@@Base+0x8a4>  // b.lo, b.ul, b.last
   23cb8:	ldr	w0, [x19, #48]
   23cbc:	str	w0, [sp, #160]
   23cc0:	str	x26, [sp, #208]
   23cc4:	ldr	w0, [x21, #56]
   23cc8:	tst	w0, #0x600000
   23ccc:	b.eq	23cd8 <my_regexec@@Base+0x7e4>  // b.none
   23cd0:	ldr	x0, [sp, #120]
   23cd4:	tbz	w0, #1, 23de0 <my_regexec@@Base+0x8ec>
   23cd8:	ldr	x1, [sp, #208]
   23cdc:	sub	x1, x22, x1
   23ce0:	ldr	x0, [x21, #88]
   23ce4:	ldr	x0, [x0, #88]
   23ce8:	cmp	x0, #0x0
   23cec:	csel	x0, x0, xzr, le
   23cf0:	add	x0, x0, x28
   23cf4:	cmp	x1, x0
   23cf8:	b.lt	23ff4 <my_regexec@@Base+0xb00>  // b.tstop
   23cfc:	ldr	x0, [sp, #128]
   23d00:	ldrb	w0, [x0, #40]
   23d04:	cmp	w0, #0x9c
   23d08:	b.ne	240c8 <my_regexec@@Base+0xbd4>  // b.any
   23d0c:	ldr	w2, [x21, #56]
   23d10:	str	w2, [sp, #152]
   23d14:	and	w0, w2, #0xfbffffff
   23d18:	orr	w1, w0, #0x100000
   23d1c:	mov	w0, #0xfbefffff            	// #-68157441
   23d20:	and	w0, w2, w0
   23d24:	ldr	w2, [sp, #108]
   23d28:	cmp	w2, #0x0
   23d2c:	csel	w0, w0, w1, eq  // eq = none
   23d30:	str	w0, [x21, #56]
   23d34:	str	x24, [sp, #232]
   23d38:	strb	wzr, [sp, #320]
   23d3c:	ldr	w0, [x24, #12]
   23d40:	ubfx	x0, x0, #29, #1
   23d44:	strb	w0, [sp, #321]
   23d48:	strb	wzr, [sp, #323]
   23d4c:	ldr	x1, [sp, #112]
   23d50:	str	x1, [sp, #264]
   23d54:	str	wzr, [sp, #304]
   23d58:	add	x27, x25, x27
   23d5c:	str	x27, [sp, #256]
   23d60:	ldr	w0, [x21, #56]
   23d64:	mov	w27, #0x1                   	// #1
   23d68:	tbz	w0, #17, 23d78 <my_regexec@@Base+0x884>
   23d6c:	ldr	w0, [x1, #12]
   23d70:	mov	w27, #0x2                   	// #2
   23d74:	tbnz	w0, #17, 240d8 <my_regexec@@Base+0xbe4>
   23d78:	ldr	x0, [x19, #288]
   23d7c:	cbz	x0, 24128 <my_regexec@@Base+0xc34>
   23d80:	ldr	x0, [x19, #296]
   23d84:	str	x0, [sp, #136]
   23d88:	ldr	x0, [x19, #288]
   23d8c:	str	x0, [sp, #144]
   23d90:	mov	w20, #0x0                   	// #0
   23d94:	b	242d0 <my_regexec@@Base+0xddc>
   23d98:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23d9c:	add	x1, x1, #0xa28
   23da0:	mov	x0, x19
   23da4:	bl	50e0 <Perl_re_printf@plt>
   23da8:	mov	w0, #0x0                   	// #0
   23dac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   23db0:	ldr	x1, [x1, #3920]
   23db4:	ldr	x2, [sp, #328]
   23db8:	ldr	x1, [x1]
   23dbc:	eor	x1, x2, x1
   23dc0:	cbnz	x1, 26210 <my_regexec@@Base+0x2d1c>
   23dc4:	ldp	x19, x20, [sp, #16]
   23dc8:	ldp	x21, x22, [sp, #32]
   23dcc:	ldp	x23, x24, [sp, #48]
   23dd0:	ldp	x25, x26, [sp, #64]
   23dd4:	ldp	x27, x28, [sp, #80]
   23dd8:	ldp	x29, x30, [sp], #336
   23ddc:	ret
   23de0:	mov	x7, #0x0                   	// #0
   23de4:	ldr	w6, [sp, #120]
   23de8:	mov	x5, x22
   23dec:	mov	x4, x26
   23df0:	mov	x3, x23
   23df4:	ldr	x2, [sp, #112]
   23df8:	mov	x1, x24
   23dfc:	mov	x0, x19
   23e00:	bl	5260 <my_re_intuit_start@plt>
   23e04:	str	x0, [sp, #208]
   23e08:	cbz	x0, 26134 <my_regexec@@Base+0x2c40>
   23e0c:	ldr	w1, [x21, #56]
   23e10:	tbz	w1, #19, 23cd8 <my_regexec@@Base+0x7e4>
   23e14:	ldr	w2, [x21, #96]
   23e18:	cbnz	w2, 23e9c <my_regexec@@Base+0x9a8>
   23e1c:	ldr	x2, [sp, #120]
   23e20:	tst	x2, #0x80
   23e24:	ccmp	x0, x25, #0x2, ne  // ne = any
   23e28:	b.cc	23ec0 <my_regexec@@Base+0x9cc>  // b.lo, b.ul, b.last
   23e2c:	str	wzr, [x21, #116]
   23e30:	str	wzr, [x21, #112]
   23e34:	ldr	w2, [sp, #108]
   23e38:	cbz	w2, 23f1c <my_regexec@@Base+0xa28>
   23e3c:	orr	w1, w1, #0x100000
   23e40:	str	w1, [x21, #56]
   23e44:	ldr	x1, [x21, #120]
   23e48:	sub	x0, x0, x23
   23e4c:	str	x0, [x1]
   23e50:	ldr	x0, [sp, #208]
   23e54:	cbz	x0, 23f7c <my_regexec@@Base+0xa88>
   23e58:	cmp	x0, x22
   23e5c:	b.hi	23fa0 <my_regexec@@Base+0xaac>  // b.pmore
   23e60:	ldr	x2, [x21, #72]
   23e64:	tbnz	x2, #63, 23fc4 <my_regexec@@Base+0xad0>
   23e68:	mov	x1, x2
   23e6c:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   23e70:	ldr	x4, [x4, #4064]
   23e74:	cbz	x2, 23fec <my_regexec@@Base+0xaf8>
   23e78:	ldrb	w2, [x0]
   23e7c:	ldrb	w2, [x4, w2, sxtw]
   23e80:	sub	x3, x22, x0
   23e84:	cmp	x2, x3
   23e88:	b.cs	23fe8 <my_regexec@@Base+0xaf4>  // b.hs, b.nlast
   23e8c:	add	x0, x0, x2
   23e90:	subs	x1, x1, #0x1
   23e94:	b.ne	23e78 <my_regexec@@Base+0x984>  // b.any
   23e98:	b	23fec <my_regexec@@Base+0xaf8>
   23e9c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23ea0:	add	x3, x3, #0x330
   23ea4:	add	x3, x3, #0xd58
   23ea8:	mov	w2, #0xd10                 	// #3344
   23eac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23eb0:	add	x1, x1, #0xcb0
   23eb4:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   23eb8:	add	x0, x0, #0xa58
   23ebc:	bl	58e0 <__assert_fail@plt>
   23ec0:	ldr	w0, [x21, #100]
   23ec4:	tbz	w0, #8, 23ef8 <my_regexec@@Base+0xa04>
   23ec8:	ldr	w0, [x19, #2368]
   23ecc:	tbnz	w0, #20, 23ee0 <my_regexec@@Base+0x9ec>
   23ed0:	ldr	x0, [sp, #216]
   23ed4:	mov	x27, #0x0                   	// #0
   23ed8:	tst	x0, #0xff00
   23edc:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   23ee0:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   23ee4:	add	x1, x1, #0xa90
   23ee8:	mov	x0, x19
   23eec:	bl	50e0 <Perl_re_printf@plt>
   23ef0:	mov	x27, #0x0                   	// #0
   23ef4:	b	24020 <my_regexec@@Base+0xb2c>
   23ef8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23efc:	add	x3, x3, #0x330
   23f00:	add	x3, x3, #0xd58
   23f04:	mov	w2, #0xd18                 	// #3352
   23f08:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23f0c:	add	x1, x1, #0xcb0
   23f10:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   23f14:	add	x0, x0, #0xa68
   23f18:	bl	58e0 <__assert_fail@plt>
   23f1c:	and	w1, w1, #0xffefffff
   23f20:	str	w1, [x21, #56]
   23f24:	ldr	x1, [x21, #120]
   23f28:	sub	x0, x0, x23
   23f2c:	str	x0, [x1]
   23f30:	ldr	x0, [sp, #208]
   23f34:	sub	x0, x0, x23
   23f38:	ldr	x1, [x21, #72]
   23f3c:	add	x0, x0, x1
   23f40:	ldr	x1, [x21, #120]
   23f44:	str	x0, [x1, #8]
   23f48:	mov	w0, #0x1                   	// #1
   23f4c:	ldr	x1, [sp, #120]
   23f50:	tbnz	w1, #4, 23dac <my_regexec@@Base+0x8b8>
   23f54:	ldrb	w6, [sp, #108]
   23f58:	ldr	w5, [sp, #120]
   23f5c:	ldr	x4, [sp, #112]
   23f60:	mov	x3, x22
   23f64:	mov	x2, x23
   23f68:	mov	x1, x24
   23f6c:	mov	x0, x19
   23f70:	bl	8ea4 <Perl__inverse_folds@plt+0x34a4>
   23f74:	mov	w0, #0x1                   	// #1
   23f78:	b	23dac <my_regexec@@Base+0x8b8>
   23f7c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23f80:	add	x3, x3, #0x330
   23f84:	add	x3, x3, #0xd90
   23f88:	mov	w2, #0x60a                 	// #1546
   23f8c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23f90:	add	x1, x1, #0xc80
   23f94:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   23f98:	add	x0, x0, #0xce8
   23f9c:	bl	58e0 <__assert_fail@plt>
   23fa0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23fa4:	add	x3, x3, #0x330
   23fa8:	add	x3, x3, #0xd90
   23fac:	mov	w2, #0x610                 	// #1552
   23fb0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23fb4:	add	x1, x1, #0xc80
   23fb8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   23fbc:	add	x0, x0, #0xac8
   23fc0:	bl	58e0 <__assert_fail@plt>
   23fc4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   23fc8:	add	x3, x3, #0x330
   23fcc:	add	x3, x3, #0xd90
   23fd0:	mov	w2, #0x611                 	// #1553
   23fd4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   23fd8:	add	x1, x1, #0xc80
   23fdc:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   23fe0:	add	x0, x0, #0xad8
   23fe4:	bl	58e0 <__assert_fail@plt>
   23fe8:	mov	x0, x22
   23fec:	sub	x0, x0, x23
   23ff0:	b	23f40 <my_regexec@@Base+0xa4c>
   23ff4:	ldr	w0, [x19, #2368]
   23ff8:	tbnz	w0, #20, 2400c <my_regexec@@Base+0xb18>
   23ffc:	ldr	x0, [sp, #216]
   24000:	mov	x27, #0x0                   	// #0
   24004:	tst	x0, #0xff00
   24008:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   2400c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24010:	add	x1, x1, #0xae8
   24014:	mov	x0, x19
   24018:	bl	50e0 <Perl_re_printf@plt>
   2401c:	mov	x27, #0x0                   	// #0
   24020:	ldr	w0, [x19, #2368]
   24024:	tbnz	w0, #20, 24034 <my_regexec@@Base+0xb40>
   24028:	ldr	x0, [sp, #216]
   2402c:	tst	x0, #0xff00
   24030:	b.eq	2404c <my_regexec@@Base+0xb58>  // b.none
   24034:	ldr	x3, [x19, #1488]
   24038:	ldr	x2, [x19, #1480]
   2403c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24040:	add	x1, x1, #0xd68
   24044:	mov	x0, x19
   24048:	bl	50e0 <Perl_re_printf@plt>
   2404c:	cbz	x27, 240a0 <my_regexec@@Base+0xbac>
   24050:	ldr	w0, [x19, #2368]
   24054:	tbnz	w0, #20, 24060 <my_regexec@@Base+0xb6c>
   24058:	ldr	x0, [sp, #216]
   2405c:	tbz	w0, #22, 24080 <my_regexec@@Base+0xb8c>
   24060:	mov	x5, x27
   24064:	ldr	x4, [x21, #120]
   24068:	mov	x3, x21
   2406c:	mov	w2, #0x0                   	// #0
   24070:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24074:	add	x1, x1, #0xd80
   24078:	mov	x0, x19
   2407c:	bl	5290 <Perl_re_exec_indentf@plt>
   24080:	ldr	x0, [x21, #120]
   24084:	cbz	x0, 26110 <my_regexec@@Base+0x2c1c>
   24088:	ldr	w2, [x21, #96]
   2408c:	add	w2, w2, #0x1
   24090:	add	x2, x2, x2, lsl #1
   24094:	lsl	x2, x2, #3
   24098:	mov	x1, x27
   2409c:	bl	4e60 <memcpy@plt>
   240a0:	ldr	w1, [x19, #48]
   240a4:	mov	w0, #0x0                   	// #0
   240a8:	ldr	w2, [sp, #160]
   240ac:	cmp	w1, w2
   240b0:	b.le	23dac <my_regexec@@Base+0x8b8>
   240b4:	ldr	w1, [sp, #160]
   240b8:	mov	x0, x19
   240bc:	bl	5660 <Perl_leave_scope@plt>
   240c0:	mov	w0, #0x0                   	// #0
   240c4:	b	23dac <my_regexec@@Base+0x8b8>
   240c8:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   240cc:	add	x1, x1, #0xb10
   240d0:	mov	x0, x19
   240d4:	bl	5420 <Perl_croak@plt>
   240d8:	mov	x1, #0x0                   	// #0
   240dc:	mov	x0, x19
   240e0:	bl	5020 <Perl_newSV@plt>
   240e4:	mov	x1, x0
   240e8:	str	x0, [sp, #264]
   240ec:	ldr	x0, [sp, #112]
   240f0:	cmp	x1, x0
   240f4:	b.eq	24108 <my_regexec@@Base+0xc14>  // b.none
   240f8:	mov	w3, #0x12                  	// #18
   240fc:	mov	x2, x0
   24100:	mov	x0, x19
   24104:	bl	55b0 <Perl_sv_setsv_flags@plt>
   24108:	mov	w2, #0xb                   	// #11
   2410c:	ldr	x1, [sp, #264]
   24110:	mov	x0, x19
   24114:	bl	54b0 <Perl_save_pushptr@plt>
   24118:	ldr	w27, [x21, #56]
   2411c:	ubfx	x27, x27, #17, #1
   24120:	add	w27, w27, #0x1
   24124:	b	23d78 <my_regexec@@Base+0x884>
   24128:	mov	x0, #0xf78                 	// #3960
   2412c:	bl	5250 <Perl_safesysmalloc@plt>
   24130:	str	x0, [x19, #288]
   24134:	str	xzr, [x0, #3944]
   24138:	str	xzr, [x0, #3952]
   2413c:	str	x0, [x19, #296]
   24140:	b	23d80 <my_regexec@@Base+0x88c>
   24144:	ldr	x0, [x19, #296]
   24148:	add	x0, x0, #0x20
   2414c:	str	x0, [sp, #288]
   24150:	b	242e0 <my_regexec@@Base+0xdec>
   24154:	ldr	x0, [x19, #296]
   24158:	add	x0, x0, #0x20
   2415c:	ldr	x1, [sp, #288]
   24160:	str	x0, [x1]
   24164:	str	x0, [sp, #296]
   24168:	ldr	x0, [x19, #296]
   2416c:	add	x0, x0, #0x88
   24170:	str	x0, [x19, #296]
   24174:	ldr	x1, [x19, #288]
   24178:	add	x1, x1, #0xee0
   2417c:	cmp	x0, x1
   24180:	b.hi	242b8 <my_regexec@@Base+0xdc4>  // b.pmore
   24184:	ldr	x0, [sp, #288]
   24188:	ldr	x1, [sp, #136]
   2418c:	str	x1, [x0, #8]
   24190:	ldr	x0, [sp, #288]
   24194:	ldr	x1, [sp, #144]
   24198:	str	x1, [x0, #16]
   2419c:	ldr	x0, [sp, #288]
   241a0:	str	xzr, [x0, #24]
   241a4:	ldr	x2, [sp, #288]
   241a8:	adrp	x1, 7000 <Perl__inverse_folds@plt+0x1600>
   241ac:	add	x1, x1, #0x504
   241b0:	mov	x0, x19
   241b4:	bl	5890 <Perl_save_destructor_x@plt>
   241b8:	ldr	w0, [x21, #56]
   241bc:	tbnz	w0, #17, 24300 <my_regexec@@Base+0xe0c>
   241c0:	ldr	x0, [sp, #288]
   241c4:	str	xzr, [x0]
   241c8:	str	xzr, [sp, #296]
   241cc:	ldr	x27, [x19, #168]
   241d0:	cbz	x27, 241f0 <my_regexec@@Base+0xcfc>
   241d4:	ldr	x1, [x27, #56]
   241d8:	ldr	x0, [x19, #2736]
   241dc:	ldr	x0, [x0, x1, lsl #3]
   241e0:	ldrb	w1, [x0, #12]
   241e4:	mov	x27, #0x0                   	// #0
   241e8:	cmp	w1, #0x8
   241ec:	b.eq	247c8 <my_regexec@@Base+0x12d4>  // b.none
   241f0:	ldr	x0, [x21, #128]
   241f4:	cbz	x0, 2420c <my_regexec@@Base+0xd18>
   241f8:	ldr	w2, [x21, #96]
   241fc:	add	w2, w2, #0x1
   24200:	lsl	x2, x2, #3
   24204:	mov	w1, #0x0                   	// #0
   24208:	bl	51f0 <memset@plt>
   2420c:	ldr	w0, [x21, #100]
   24210:	tst	w0, #0xc00
   24214:	b.ne	2482c <my_regexec@@Base+0x1338>  // b.any
   24218:	tbz	w0, #12, 24964 <my_regexec@@Base+0x1470>
   2421c:	tbz	w0, #8, 24904 <my_regexec@@Base+0x1410>
   24220:	ldrb	w0, [sp, #322]
   24224:	cbnz	w0, 24928 <my_regexec@@Base+0x1434>
   24228:	ldr	x1, [x21, #80]
   2422c:	ldr	x0, [sp, #272]
   24230:	sub	x0, x0, x1
   24234:	ldr	x1, [sp, #240]
   24238:	cmp	x0, x1
   2423c:	csel	x0, x0, xzr, cs  // cs = hs, nlast
   24240:	cmp	x26, x0
   24244:	b.ne	24940 <my_regexec@@Base+0x144c>  // b.any
   24248:	ldr	x0, [sp, #208]
   2424c:	cmp	x0, x26
   24250:	b.ne	24020 <my_regexec@@Base+0xb2c>  // b.any
   24254:	add	x2, sp, #0xd0
   24258:	add	x1, sp, #0xe8
   2425c:	mov	x0, x19
   24260:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   24264:	and	w0, w0, #0xff
   24268:	cbz	w0, 24020 <my_regexec@@Base+0xb2c>
   2426c:	ldr	x0, [sp, #120]
   24270:	tbz	w0, #7, 260ac <my_regexec@@Base+0x2bb8>
   24274:	ldr	x0, [x21, #120]
   24278:	sub	x25, x25, x23
   2427c:	ldr	x0, [x0]
   24280:	cmp	x0, x25
   24284:	b.ge	260ac <my_regexec@@Base+0x2bb8>  // b.tcont
   24288:	ldr	w0, [x21, #100]
   2428c:	tbz	w0, #8, 26088 <my_regexec@@Base+0x2b94>
   24290:	ldr	w0, [x19, #2368]
   24294:	tbnz	w0, #20, 242a4 <my_regexec@@Base+0xdb0>
   24298:	ldr	x0, [sp, #216]
   2429c:	tst	x0, #0xff00
   242a0:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   242a4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   242a8:	add	x1, x1, #0xa90
   242ac:	mov	x0, x19
   242b0:	bl	50e0 <Perl_re_printf@plt>
   242b4:	b	24020 <my_regexec@@Base+0xb2c>
   242b8:	mov	x0, x19
   242bc:	bl	74bc <Perl__inverse_folds@plt+0x1abc>
   242c0:	str	x0, [x19, #296]
   242c4:	add	w20, w20, #0x1
   242c8:	cmp	w27, w20
   242cc:	b.lt	24184 <my_regexec@@Base+0xc90>  // b.tstop
   242d0:	cmp	w20, #0x1
   242d4:	b.eq	24144 <my_regexec@@Base+0xc50>  // b.none
   242d8:	cmp	w20, #0x2
   242dc:	b.eq	24154 <my_regexec@@Base+0xc60>  // b.none
   242e0:	ldr	x0, [x19, #296]
   242e4:	add	x0, x0, #0x88
   242e8:	str	x0, [x19, #296]
   242ec:	ldr	x1, [x19, #288]
   242f0:	add	x1, x1, #0xee0
   242f4:	cmp	x0, x1
   242f8:	b.ls	242c4 <my_regexec@@Base+0xdd0>  // b.plast
   242fc:	b	242b8 <my_regexec@@Base+0xdc4>
   24300:	ldr	x0, [sp, #232]
   24304:	ldr	x20, [x0]
   24308:	ldr	w0, [x0, #12]
   2430c:	and	w1, w0, #0xff
   24310:	cmp	w1, #0x8
   24314:	b.eq	24340 <my_regexec@@Base+0xe4c>  // b.none
   24318:	mov	w2, #0x80ff                	// #33023
   2431c:	movk	w2, #0x100, lsl #16
   24320:	and	w0, w0, w2
   24324:	mov	w2, #0xa                   	// #10
   24328:	movk	w2, #0x100, lsl #16
   2432c:	cmp	w0, w2
   24330:	b.ne	244e4 <my_regexec@@Base+0xff0>  // b.any
   24334:	cmp	w1, #0xa
   24338:	b.ne	24340 <my_regexec@@Base+0xe4c>  // b.any
   2433c:	ldr	x20, [x20, #24]
   24340:	ldr	x27, [sp, #296]
   24344:	str	x20, [x27]
   24348:	ldr	x0, [sp, #264]
   2434c:	str	x0, [sp, #136]
   24350:	str	x0, [x27, #56]
   24354:	cbz	x0, 246a4 <my_regexec@@Base+0x11b0>
   24358:	ldr	x1, [x19, #192]
   2435c:	ldr	w0, [x1, #12]
   24360:	and	w2, w0, #0xff
   24364:	sub	w2, w2, #0x9
   24368:	cmp	w2, #0x1
   2436c:	b.hi	24508 <my_regexec@@Base+0x1014>  // b.pmore
   24370:	and	w0, w0, #0xc000
   24374:	cmp	w0, #0x8, lsl #12
   24378:	b.ne	2452c <my_regexec@@Base+0x1038>  // b.any
   2437c:	ldr	x0, [x1, #16]
   24380:	ldr	x2, [x0]
   24384:	cbz	x2, 24550 <my_regexec@@Base+0x105c>
   24388:	mov	x0, x2
   2438c:	ldr	x2, [sp, #136]
   24390:	cmp	x0, x2
   24394:	b.eq	243d4 <my_regexec@@Base+0xee0>  // b.none
   24398:	ldr	x1, [x1, #16]
   2439c:	mov	x0, x19
   243a0:	bl	4e50 <Perl_save_sptr@plt>
   243a4:	ldr	x2, [x19, #192]
   243a8:	ldr	w0, [x2, #12]
   243ac:	and	w1, w0, #0xff
   243b0:	sub	w1, w1, #0x9
   243b4:	cmp	w1, #0x1
   243b8:	b.hi	24644 <my_regexec@@Base+0x1150>  // b.pmore
   243bc:	and	w0, w0, #0xc000
   243c0:	cmp	w0, #0x8, lsl #12
   243c4:	b.ne	24668 <my_regexec@@Base+0x1174>  // b.any
   243c8:	ldr	x0, [x2, #16]
   243cc:	ldr	x1, [sp, #264]
   243d0:	str	x1, [x0]
   243d4:	ldr	x1, [sp, #264]
   243d8:	ldr	w0, [x1, #8]
   243dc:	add	w0, w0, #0x1
   243e0:	str	w0, [x1, #8]
   243e4:	ldr	x1, [sp, #264]
   243e8:	mov	x0, x19
   243ec:	bl	4f10 <Perl_mg_find_mglob@plt>
   243f0:	cbz	x0, 2468c <my_regexec@@Base+0x1198>
   243f4:	str	x0, [x27, #64]
   243f8:	ldr	x1, [x0, #24]
   243fc:	str	x1, [x27, #72]
   24400:	ldrb	w0, [x0, #19]
   24404:	strb	w0, [x27, #80]
   24408:	ldr	x0, [x19, #280]
   2440c:	cbz	x0, 246ac <my_regexec@@Base+0x11b8>
   24410:	ldr	x0, [sp, #296]
   24414:	cbz	x0, 24474 <my_regexec@@Base+0xf80>
   24418:	ldr	x0, [sp, #232]
   2441c:	ldrb	w1, [x0, #12]
   24420:	cmp	w1, #0x8
   24424:	b.ne	24768 <my_regexec@@Base+0x1274>  // b.any
   24428:	ldr	w1, [x0, #8]
   2442c:	add	w1, w1, #0x1
   24430:	str	w1, [x0, #8]
   24434:	ldr	x1, [x19, #280]
   24438:	ldr	x2, [x1, #56]
   2443c:	ldr	x1, [x19, #2736]
   24440:	ldr	x1, [x1, x2, lsl #3]
   24444:	ldrb	w2, [x1, #12]
   24448:	cmp	w2, #0x8
   2444c:	b.ne	24464 <my_regexec@@Base+0xf70>  // b.any
   24450:	ldr	w2, [x1, #8]
   24454:	cmp	w2, #0x1
   24458:	b.ls	2478c <my_regexec@@Base+0x1298>  // b.plast
   2445c:	sub	w2, w2, #0x1
   24460:	str	w2, [x1, #8]
   24464:	ldr	x1, [x19, #280]
   24468:	ldr	x2, [x1, #56]
   2446c:	ldr	x1, [x19, #2736]
   24470:	str	x0, [x1, x2, lsl #3]
   24474:	ldr	x0, [x19, #168]
   24478:	str	x0, [x27, #8]
   2447c:	str	x0, [x19, #176]
   24480:	ldr	x0, [x19, #280]
   24484:	str	x0, [x19, #168]
   24488:	ldr	w0, [x20, #56]
   2448c:	tbz	w0, #25, 247c0 <my_regexec@@Base+0x12cc>
   24490:	ldr	x0, [x20, #136]
   24494:	str	x0, [x27, #24]
   24498:	ldr	x0, [x20, #152]
   2449c:	str	x0, [x27, #32]
   244a0:	ldr	x0, [x20, #160]
   244a4:	str	x0, [x27, #40]
   244a8:	ldr	x0, [x20, #168]
   244ac:	str	x0, [x27, #48]
   244b0:	ldr	x0, [x20, #144]
   244b4:	str	x0, [x27, #16]
   244b8:	ldr	w0, [x20, #56]
   244bc:	and	w0, w0, #0xfdffffff
   244c0:	str	w0, [x20, #56]
   244c4:	ldr	x1, [sp, #240]
   244c8:	str	x1, [x20, #136]
   244cc:	str	xzr, [x20, #160]
   244d0:	str	xzr, [x20, #168]
   244d4:	ldr	x0, [sp, #248]
   244d8:	sub	x0, x0, x1
   244dc:	str	x0, [x20, #152]
   244e0:	b	241cc <my_regexec@@Base+0xcd8>
   244e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   244e8:	add	x3, x3, #0x330
   244ec:	add	x3, x3, #0x3e0
   244f0:	mov	w2, #0xb6                  	// #182
   244f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   244f8:	add	x1, x1, #0xc80
   244fc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   24500:	add	x0, x0, #0x128
   24504:	bl	58e0 <__assert_fail@plt>
   24508:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2450c:	add	x3, x3, #0x330
   24510:	add	x3, x3, #0xda8
   24514:	mov	w2, #0x27c4                	// #10180
   24518:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2451c:	add	x1, x1, #0xcb0
   24520:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   24524:	add	x0, x0, #0xa48
   24528:	bl	58e0 <__assert_fail@plt>
   2452c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24530:	add	x3, x3, #0x330
   24534:	add	x3, x3, #0xda8
   24538:	mov	w2, #0x27c4                	// #10180
   2453c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24540:	add	x1, x1, #0xcb0
   24544:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   24548:	add	x0, x0, #0xa80
   2454c:	bl	58e0 <__assert_fail@plt>
   24550:	mov	w2, #0x0                   	// #0
   24554:	mov	x0, x19
   24558:	bl	5950 <Perl_gv_add_by_type@plt>
   2455c:	ldr	w1, [x0, #12]
   24560:	and	w2, w1, #0xff
   24564:	sub	w2, w2, #0x9
   24568:	cmp	w2, #0x1
   2456c:	b.hi	245d8 <my_regexec@@Base+0x10e4>  // b.pmore
   24570:	and	w1, w1, #0xc000
   24574:	cmp	w1, #0x8, lsl #12
   24578:	b.ne	245fc <my_regexec@@Base+0x1108>  // b.any
   2457c:	ldr	x0, [x0, #16]
   24580:	ldr	x0, [x0]
   24584:	ldr	x1, [sp, #136]
   24588:	cmp	x1, x0
   2458c:	b.eq	243d4 <my_regexec@@Base+0xee0>  // b.none
   24590:	ldr	x1, [x19, #192]
   24594:	ldr	w0, [x1, #12]
   24598:	and	w2, w0, #0xff
   2459c:	sub	w2, w2, #0x9
   245a0:	cmp	w2, #0x1
   245a4:	b.hi	24620 <my_regexec@@Base+0x112c>  // b.pmore
   245a8:	and	w0, w0, #0xc000
   245ac:	cmp	w0, #0x8, lsl #12
   245b0:	b.eq	24398 <my_regexec@@Base+0xea4>  // b.none
   245b4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   245b8:	add	x3, x3, #0x330
   245bc:	add	x3, x3, #0xda8
   245c0:	mov	w2, #0x27c5                	// #10181
   245c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   245c8:	add	x1, x1, #0xcb0
   245cc:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   245d0:	add	x0, x0, #0xa80
   245d4:	bl	58e0 <__assert_fail@plt>
   245d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   245dc:	add	x3, x3, #0x330
   245e0:	add	x3, x3, #0xda8
   245e4:	mov	w2, #0x27c4                	// #10180
   245e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   245ec:	add	x1, x1, #0xcb0
   245f0:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   245f4:	add	x0, x0, #0xa48
   245f8:	bl	58e0 <__assert_fail@plt>
   245fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24600:	add	x3, x3, #0x330
   24604:	add	x3, x3, #0xda8
   24608:	mov	w2, #0x27c4                	// #10180
   2460c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24610:	add	x1, x1, #0xcb0
   24614:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   24618:	add	x0, x0, #0xa80
   2461c:	bl	58e0 <__assert_fail@plt>
   24620:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24624:	add	x3, x3, #0x330
   24628:	add	x3, x3, #0xda8
   2462c:	mov	w2, #0x27c5                	// #10181
   24630:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24634:	add	x1, x1, #0xcb0
   24638:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   2463c:	add	x0, x0, #0xa48
   24640:	bl	58e0 <__assert_fail@plt>
   24644:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24648:	add	x3, x3, #0x330
   2464c:	add	x3, x3, #0xda8
   24650:	mov	w2, #0x27c6                	// #10182
   24654:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24658:	add	x1, x1, #0xcb0
   2465c:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   24660:	add	x0, x0, #0xa48
   24664:	bl	58e0 <__assert_fail@plt>
   24668:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2466c:	add	x3, x3, #0x330
   24670:	add	x3, x3, #0xda8
   24674:	mov	w2, #0x27c6                	// #10182
   24678:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2467c:	add	x1, x1, #0xcb0
   24680:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   24684:	add	x0, x0, #0xa80
   24688:	bl	58e0 <__assert_fail@plt>
   2468c:	ldr	x1, [sp, #264]
   24690:	mov	x0, x19
   24694:	bl	5070 <Perl_sv_magicext_mglob@plt>
   24698:	mov	x1, #0xffffffffffffffff    	// #-1
   2469c:	str	x1, [x0, #24]
   246a0:	b	243f4 <my_regexec@@Base+0xf00>
   246a4:	str	xzr, [x27, #64]
   246a8:	b	24408 <my_regexec@@Base+0xf14>
   246ac:	mov	x1, #0x60                  	// #96
   246b0:	mov	x0, #0x1                   	// #1
   246b4:	bl	54c0 <Perl_safesyscalloc@plt>
   246b8:	str	x0, [x19, #280]
   246bc:	add	x2, x19, #0x150
   246c0:	ldr	x1, [x19, #2744]
   246c4:	mov	x0, x19
   246c8:	bl	5430 <Perl_av_push@plt>
   246cc:	ldr	x1, [x19, #2744]
   246d0:	ldr	x0, [x19, #280]
   246d4:	str	x0, [sp, #136]
   246d8:	cbz	x1, 24710 <my_regexec@@Base+0x121c>
   246dc:	ldr	w0, [x1, #12]
   246e0:	and	w2, w0, #0xff
   246e4:	cmp	w2, #0xb
   246e8:	b.ne	24734 <my_regexec@@Base+0x1240>  // b.any
   246ec:	tbnz	w0, #23, 24758 <my_regexec@@Base+0x1264>
   246f0:	ldr	x0, [x1]
   246f4:	ldr	x0, [x0, #16]
   246f8:	ldr	x1, [sp, #136]
   246fc:	str	x0, [x1, #56]
   24700:	ldr	x0, [x19, #2744]
   24704:	ldr	x0, [x0, #16]
   24708:	str	x0, [x19, #2736]
   2470c:	b	24410 <my_regexec@@Base+0xf1c>
   24710:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24714:	add	x3, x3, #0x330
   24718:	add	x3, x3, #0xdc0
   2471c:	mov	w2, #0x2d                  	// #45
   24720:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24724:	add	x1, x1, #0xc80
   24728:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   2472c:	add	x0, x0, #0xb30
   24730:	bl	58e0 <__assert_fail@plt>
   24734:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24738:	add	x3, x3, #0x330
   2473c:	add	x3, x3, #0xdc0
   24740:	mov	w2, #0x2e                  	// #46
   24744:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24748:	add	x1, x1, #0xc80
   2474c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   24750:	add	x0, x0, #0xb38
   24754:	bl	58e0 <__assert_fail@plt>
   24758:	mov	x0, x19
   2475c:	bl	53e0 <Perl_mg_size@plt>
   24760:	sxtw	x0, w0
   24764:	b	246f8 <my_regexec@@Base+0x1204>
   24768:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2476c:	add	x3, x3, #0x330
   24770:	add	x3, x3, #0xda8
   24774:	mov	w2, #0x27e8                	// #10216
   24778:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2477c:	add	x1, x1, #0xcb0
   24780:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   24784:	add	x0, x0, #0x258
   24788:	bl	58e0 <__assert_fail@plt>
   2478c:	mov	x0, x19
   24790:	bl	5860 <Perl_sv_free2@plt>
   24794:	ldr	x0, [sp, #232]
   24798:	cbnz	x0, 24464 <my_regexec@@Base+0xf70>
   2479c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   247a0:	add	x3, x3, #0x330
   247a4:	add	x3, x3, #0xda8
   247a8:	mov	w2, #0x27e8                	// #10216
   247ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   247b0:	add	x1, x1, #0xcb0
   247b4:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   247b8:	add	x0, x0, #0xb50
   247bc:	bl	58e0 <__assert_fail@plt>
   247c0:	str	xzr, [x27, #24]
   247c4:	b	244c4 <my_regexec@@Base+0xfd0>
   247c8:	cmp	x0, x24
   247cc:	b.ne	241f0 <my_regexec@@Base+0xcfc>  // b.any
   247d0:	ldr	x27, [x21, #120]
   247d4:	mov	w2, #0xa                   	// #10
   247d8:	mov	x1, x27
   247dc:	mov	x0, x19
   247e0:	bl	54b0 <Perl_save_pushptr@plt>
   247e4:	ldr	w0, [x21, #96]
   247e8:	mov	x1, #0x18                  	// #24
   247ec:	add	w0, w0, #0x1
   247f0:	bl	54c0 <Perl_safesyscalloc@plt>
   247f4:	mov	x5, x0
   247f8:	str	x0, [x21, #120]
   247fc:	ldr	w0, [x19, #2368]
   24800:	tbnz	w0, #20, 2480c <my_regexec@@Base+0x1318>
   24804:	ldr	x0, [sp, #216]
   24808:	tbz	w0, #22, 241f0 <my_regexec@@Base+0xcfc>
   2480c:	mov	x4, x27
   24810:	mov	x3, x21
   24814:	mov	w2, #0x0                   	// #0
   24818:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   2481c:	add	x1, x1, #0xb60
   24820:	mov	x0, x19
   24824:	bl	5290 <Perl_re_exec_indentf@plt>
   24828:	b	241f0 <my_regexec@@Base+0xcfc>
   2482c:	add	x2, sp, #0xd0
   24830:	add	x1, sp, #0xe8
   24834:	mov	x0, x19
   24838:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   2483c:	and	w0, w0, #0xff
   24840:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   24844:	ldr	w0, [x21, #100]
   24848:	tbz	w0, #10, 24020 <my_regexec@@Base+0xb2c>
   2484c:	cmp	x28, #0x0
   24850:	cset	x0, ne  // ne = any
   24854:	sub	x28, x28, x0
   24858:	ldrb	w0, [sp, #322]
   2485c:	mvn	x20, x28
   24860:	add	x20, x22, x20
   24864:	cbnz	w0, 24874 <my_regexec@@Base+0x1380>
   24868:	add	x26, sp, #0xd0
   2486c:	add	x28, sp, #0xe8
   24870:	b	248cc <my_regexec@@Base+0x13d8>
   24874:	mov	x2, x23
   24878:	neg	x1, x28
   2487c:	mov	x0, x22
   24880:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   24884:	sub	x20, x0, #0x1
   24888:	b	24868 <my_regexec@@Base+0x1374>
   2488c:	mov	x7, #0x0                   	// #0
   24890:	ldr	w6, [sp, #120]
   24894:	mov	x5, x22
   24898:	mov	x3, x23
   2489c:	ldr	x2, [sp, #112]
   248a0:	mov	x1, x24
   248a4:	mov	x0, x19
   248a8:	bl	5260 <my_re_intuit_start@plt>
   248ac:	str	x0, [sp, #208]
   248b0:	cbz	x0, 24020 <my_regexec@@Base+0xb2c>
   248b4:	mov	x2, x26
   248b8:	mov	x1, x28
   248bc:	mov	x0, x19
   248c0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   248c4:	and	w0, w0, #0xff
   248c8:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   248cc:	ldr	x0, [sp, #208]
   248d0:	cmp	x0, x20
   248d4:	b.hi	24020 <my_regexec@@Base+0xb2c>  // b.pmore
   248d8:	add	x4, x0, #0x1
   248dc:	str	x4, [sp, #208]
   248e0:	ldrb	w0, [x0]
   248e4:	cmp	w0, #0xa
   248e8:	b.ne	248cc <my_regexec@@Base+0x13d8>  // b.any
   248ec:	ldr	x0, [x21, #88]
   248f0:	ldr	x1, [x0, #104]
   248f4:	cbnz	x1, 2488c <my_regexec@@Base+0x1398>
   248f8:	ldr	x0, [x0, #112]
   248fc:	cbnz	x0, 2488c <my_regexec@@Base+0x1398>
   24900:	b	248b4 <my_regexec@@Base+0x13c0>
   24904:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24908:	add	x3, x3, #0x330
   2490c:	add	x3, x3, #0xd58
   24910:	mov	w2, #0xdd0                 	// #3536
   24914:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24918:	add	x1, x1, #0xcb0
   2491c:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   24920:	add	x0, x0, #0xa68
   24924:	bl	58e0 <__assert_fail@plt>
   24928:	ldr	x1, [x21, #80]
   2492c:	ldr	x2, [sp, #240]
   24930:	neg	x1, x1
   24934:	ldr	x0, [sp, #272]
   24938:	bl	6c44 <Perl__inverse_folds@plt+0x1244>
   2493c:	b	24240 <my_regexec@@Base+0xd4c>
   24940:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24944:	add	x3, x3, #0x330
   24948:	add	x3, x3, #0xd58
   2494c:	mov	w2, #0xdd4                 	// #3540
   24950:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24954:	add	x1, x1, #0xcb0
   24958:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   2495c:	add	x0, x0, #0xb90
   24960:	bl	58e0 <__assert_fail@plt>
   24964:	ldr	w1, [sp, #152]
   24968:	and	w1, w1, #0x1
   2496c:	str	w1, [sp, #192]
   24970:	ldr	x1, [x21, #88]
   24974:	ldr	x2, [x1, #24]
   24978:	cbz	x2, 24998 <my_regexec@@Base+0x14a4>
   2497c:	tbnz	w0, #0, 249a4 <my_regexec@@Base+0x14b0>
   24980:	ldr	w0, [sp, #108]
   24984:	cbnz	w0, 24f1c <my_regexec@@Base+0x1a28>
   24988:	ldr	x0, [x21, #88]
   2498c:	ldr	x0, [x0, #24]
   24990:	str	x0, [sp, #152]
   24994:	b	24c34 <my_regexec@@Base+0x1740>
   24998:	ldr	x3, [x1, #32]
   2499c:	cbz	x3, 24d34 <my_regexec@@Base+0x1840>
   249a0:	tbz	w0, #0, 24c18 <my_regexec@@Base+0x1724>
   249a4:	ldr	w0, [sp, #108]
   249a8:	cbz	w0, 24ae0 <my_regexec@@Base+0x15ec>
   249ac:	ldr	x0, [x1, #32]
   249b0:	cbz	x0, 249f0 <my_regexec@@Base+0x14fc>
   249b4:	ldr	x0, [x21, #88]
   249b8:	ldr	x0, [x0, #32]
   249bc:	ldr	x0, [x0, #16]
   249c0:	ldrb	w20, [x0]
   249c4:	ldr	x0, [sp, #208]
   249c8:	cmp	x0, x22
   249cc:	b.cs	2613c <my_regexec@@Base+0x2c48>  // b.hs, b.nlast
   249d0:	mov	w28, #0x0                   	// #0
   249d4:	add	x1, sp, #0xd0
   249d8:	str	x1, [sp, #128]
   249dc:	add	x1, sp, #0xe8
   249e0:	str	x1, [sp, #136]
   249e4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   249e8:	ldr	x26, [x1, #4064]
   249ec:	b	24a40 <my_regexec@@Base+0x154c>
   249f0:	mov	x1, x21
   249f4:	mov	x0, x19
   249f8:	bl	6804 <Perl__inverse_folds@plt+0xe04>
   249fc:	b	249b4 <my_regexec@@Base+0x14c0>
   24a00:	mov	w28, #0x1                   	// #1
   24a04:	b	24a60 <my_regexec@@Base+0x156c>
   24a08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   24a0c:	add	x3, x3, #0x330
   24a10:	add	x3, x3, #0xd58
   24a14:	mov	w2, #0xdeb                 	// #3563
   24a18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   24a1c:	add	x1, x1, #0xcb0
   24a20:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   24a24:	add	x0, x0, #0xbc8
   24a28:	bl	58e0 <__assert_fail@plt>
   24a2c:	ldr	x0, [sp, #208]
   24a30:	add	x0, x0, #0x1
   24a34:	str	x0, [sp, #208]
   24a38:	cmp	x0, x22
   24a3c:	b.cs	24bec <my_regexec@@Base+0x16f8>  // b.hs, b.nlast
   24a40:	ldrb	w0, [x0]
   24a44:	cmp	w0, w20
   24a48:	b.ne	24a2c <my_regexec@@Base+0x1538>  // b.any
   24a4c:	ldr	w0, [x19, #2368]
   24a50:	tbnz	w0, #20, 24a00 <my_regexec@@Base+0x150c>
   24a54:	ldr	x0, [sp, #216]
   24a58:	tst	x0, #0xff00
   24a5c:	csinc	w28, w28, wzr, eq  // eq = none
   24a60:	ldr	x2, [sp, #128]
   24a64:	ldr	x1, [sp, #136]
   24a68:	mov	x0, x19
   24a6c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   24a70:	and	w0, w0, #0xff
   24a74:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   24a78:	ldr	x0, [sp, #208]
   24a7c:	cmp	x0, x22
   24a80:	b.hi	24a08 <my_regexec@@Base+0x1514>  // b.pmore
   24a84:	sub	x2, x22, x0
   24a88:	mov	x1, #0x0                   	// #0
   24a8c:	cmp	x2, #0x0
   24a90:	b.le	24aac <my_regexec@@Base+0x15b8>
   24a94:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   24a98:	ldr	x1, [x1, #4064]
   24a9c:	ldrb	w3, [x0]
   24aa0:	ldrb	w1, [x1, w3, sxtw]
   24aa4:	cmp	x1, x2
   24aa8:	csel	x1, x1, x2, le
   24aac:	add	x0, x0, x1
   24ab0:	str	x0, [sp, #208]
   24ab4:	cmp	x0, x22
   24ab8:	b.cs	24a2c <my_regexec@@Base+0x1538>  // b.hs, b.nlast
   24abc:	ldrb	w1, [x0]
   24ac0:	cmp	w1, w20
   24ac4:	b.ne	24a2c <my_regexec@@Base+0x1538>  // b.any
   24ac8:	ldrb	w1, [x26, w1, sxtw]
   24acc:	add	x0, x0, x1
   24ad0:	str	x0, [sp, #208]
   24ad4:	cmp	x0, x22
   24ad8:	b.cc	24abc <my_regexec@@Base+0x15c8>  // b.lo, b.ul, b.last
   24adc:	b	24a2c <my_regexec@@Base+0x1538>
   24ae0:	cbz	x2, 24b1c <my_regexec@@Base+0x1628>
   24ae4:	ldr	x0, [x21, #88]
   24ae8:	ldr	x0, [x0, #24]
   24aec:	ldr	x0, [x0, #16]
   24af0:	ldrb	w20, [x0]
   24af4:	ldr	x0, [sp, #208]
   24af8:	cmp	x22, x0
   24afc:	b.ls	2613c <my_regexec@@Base+0x2c48>  // b.plast
   24b00:	mov	w28, #0x0                   	// #0
   24b04:	add	x1, sp, #0xd0
   24b08:	str	x1, [sp, #128]
   24b0c:	add	x1, sp, #0xe8
   24b10:	str	x1, [sp, #136]
   24b14:	mov	w26, #0x1                   	// #1
   24b18:	b	24b80 <my_regexec@@Base+0x168c>
   24b1c:	mov	x1, x21
   24b20:	mov	x0, x19
   24b24:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   24b28:	and	w0, w0, #0xff
   24b2c:	cbnz	w0, 24ae4 <my_regexec@@Base+0x15f0>
   24b30:	ldr	w0, [x19, #2368]
   24b34:	tbnz	w0, #20, 24b44 <my_regexec@@Base+0x1650>
   24b38:	ldr	x0, [sp, #216]
   24b3c:	tst	x0, #0xff00
   24b40:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   24b44:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   24b48:	add	x2, x2, #0x330
   24b4c:	add	x2, x2, #0xd18
   24b50:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   24b54:	add	x1, x1, #0xb50
   24b58:	mov	x0, x19
   24b5c:	bl	50e0 <Perl_re_printf@plt>
   24b60:	b	24020 <my_regexec@@Base+0xb2c>
   24b64:	mov	w28, #0x1                   	// #1
   24b68:	b	24ba0 <my_regexec@@Base+0x16ac>
   24b6c:	ldr	x0, [sp, #208]
   24b70:	add	x0, x0, #0x1
   24b74:	str	x0, [sp, #208]
   24b78:	cmp	x0, x22
   24b7c:	b.cs	24bec <my_regexec@@Base+0x16f8>  // b.hs, b.nlast
   24b80:	ldrb	w0, [x0]
   24b84:	cmp	w0, w20
   24b88:	b.ne	24b6c <my_regexec@@Base+0x1678>  // b.any
   24b8c:	ldr	w0, [x19, #2368]
   24b90:	tbnz	w0, #20, 24b64 <my_regexec@@Base+0x1670>
   24b94:	ldr	x0, [sp, #216]
   24b98:	tst	x0, #0xff00
   24b9c:	csel	w28, w28, w26, eq  // eq = none
   24ba0:	ldr	x2, [sp, #128]
   24ba4:	ldr	x1, [sp, #136]
   24ba8:	mov	x0, x19
   24bac:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   24bb0:	and	w0, w0, #0xff
   24bb4:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   24bb8:	ldr	x0, [sp, #208]
   24bbc:	add	x0, x0, #0x1
   24bc0:	str	x0, [sp, #208]
   24bc4:	cmp	x0, x22
   24bc8:	b.cs	24b6c <my_regexec@@Base+0x1678>  // b.hs, b.nlast
   24bcc:	ldrb	w1, [x0]
   24bd0:	cmp	w1, w20
   24bd4:	b.ne	24b6c <my_regexec@@Base+0x1678>  // b.any
   24bd8:	add	x0, x0, #0x1
   24bdc:	str	x0, [sp, #208]
   24be0:	cmp	x0, x22
   24be4:	b.ne	24bcc <my_regexec@@Base+0x16d8>  // b.any
   24be8:	b	24b6c <my_regexec@@Base+0x1678>
   24bec:	ldr	w0, [x19, #2368]
   24bf0:	tbnz	w0, #20, 24c00 <my_regexec@@Base+0x170c>
   24bf4:	ldr	x0, [sp, #216]
   24bf8:	tst	x0, #0xff00
   24bfc:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   24c00:	cbnz	w28, 24020 <my_regexec@@Base+0xb2c>
   24c04:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24c08:	add	x1, x1, #0xbd8
   24c0c:	mov	x0, x19
   24c10:	bl	50e0 <Perl_re_printf@plt>
   24c14:	b	24020 <my_regexec@@Base+0xb2c>
   24c18:	ldr	x0, [x1, #32]
   24c1c:	cbz	x0, 24d34 <my_regexec@@Base+0x1840>
   24c20:	ldr	w0, [sp, #108]
   24c24:	cbz	w0, 24f34 <my_regexec@@Base+0x1a40>
   24c28:	ldr	x0, [x21, #88]
   24c2c:	ldr	x0, [x0, #32]
   24c30:	str	x0, [sp, #152]
   24c34:	ldr	x0, [x21, #88]
   24c38:	ldr	x0, [x0, #8]
   24c3c:	str	x0, [sp, #184]
   24c40:	str	x0, [sp, #136]
   24c44:	ldr	x0, [sp, #136]
   24c48:	tbnz	x0, #63, 25384 <my_regexec@@Base+0x1e90>
   24c4c:	ldrb	w0, [sp, #322]
   24c50:	cbz	w0, 25158 <my_regexec@@Base+0x1c64>
   24c54:	ldr	w0, [sp, #108]
   24c58:	cbnz	w0, 25004 <my_regexec@@Base+0x1b10>
   24c5c:	ldr	x0, [sp, #152]
   24c60:	ldr	w0, [x0, #12]
   24c64:	and	w2, w0, #0xf
   24c68:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   24c6c:	ldr	x1, [x1, #3888]
   24c70:	ldrb	w1, [x1, w2, uxtw]
   24c74:	cbz	w1, 25018 <my_regexec@@Base+0x1b24>
   24c78:	and	w1, w0, #0xc000
   24c7c:	cmp	w1, #0x8, lsl #12
   24c80:	b.eq	2503c <my_regexec@@Base+0x1b48>  // b.none
   24c84:	and	w0, w0, #0xff
   24c88:	cmp	w0, #0xf
   24c8c:	b.eq	25070 <my_regexec@@Base+0x1b7c>  // b.none
   24c90:	ldr	x0, [sp, #152]
   24c94:	ldr	x0, [x0]
   24c98:	ldr	x20, [x0, #16]
   24c9c:	ldr	x0, [sp, #152]
   24ca0:	ldr	w0, [x0, #12]
   24ca4:	and	w1, w0, #0xff
   24ca8:	cmp	w1, #0xb
   24cac:	b.eq	250a4 <my_regexec@@Base+0x1bb0>  // b.none
   24cb0:	cmp	w1, #0xc
   24cb4:	b.eq	250c8 <my_regexec@@Base+0x1bd4>  // b.none
   24cb8:	mov	w2, #0x2200                	// #8704
   24cbc:	tst	w0, w2
   24cc0:	b.ne	250ec <my_regexec@@Base+0x1bf8>  // b.any
   24cc4:	and	w0, w0, #0x7fc000
   24cc8:	and	w0, w0, #0xffc07fff
   24ccc:	cmp	w0, #0x404, lsl #12
   24cd0:	b.ne	25134 <my_regexec@@Base+0x1c40>  // b.any
   24cd4:	cmp	w1, #0x6
   24cd8:	b.ls	25110 <my_regexec@@Base+0x1c1c>  // b.plast
   24cdc:	ldr	x2, [sp, #152]
   24ce0:	ldr	x0, [x2]
   24ce4:	ldr	x0, [x0, #8]
   24ce8:	cbz	x0, 25134 <my_regexec@@Base+0x1c40>
   24cec:	ldrb	w0, [x0, #18]
   24cf0:	cmp	w0, #0x42
   24cf4:	b.eq	24d08 <my_regexec@@Base+0x1814>  // b.none
   24cf8:	mov	w1, #0x42                  	// #66
   24cfc:	mov	x0, x2
   24d00:	bl	57d0 <Perl_mg_find@plt>
   24d04:	cbz	x0, 25134 <my_regexec@@Base+0x1c40>
   24d08:	ldr	x0, [sp, #152]
   24d0c:	ldr	x0, [x0]
   24d10:	ldrb	w1, [x0, #40]
   24d14:	ldr	x0, [sp, #136]
   24d18:	sub	x1, x1, x0
   24d1c:	mov	x2, x23
   24d20:	sub	x1, x1, x20
   24d24:	mov	x0, x22
   24d28:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   24d2c:	str	x0, [sp, #168]
   24d30:	b	25388 <my_regexec@@Base+0x1e94>
   24d34:	ldr	x0, [x1, #64]
   24d38:	cbz	x0, 24f00 <my_regexec@@Base+0x1a0c>
   24d3c:	ldr	x2, [sp, #208]
   24d40:	sub	x2, x22, x2
   24d44:	ldr	x3, [x1, #56]
   24d48:	cmp	x3, x2
   24d4c:	b.lt	261dc <my_regexec@@Base+0x2ce8>  // b.tstop
   24d50:	ldr	x2, [sp, #128]
   24d54:	ldr	x20, [x2, #16]
   24d58:	cbz	x20, 25c2c <my_regexec@@Base+0x2738>
   24d5c:	cbz	x28, 24da4 <my_regexec@@Base+0x18b0>
   24d60:	ldrb	w1, [x20, #1]
   24d64:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   24d68:	ldr	x0, [x0, #3768]
   24d6c:	ldrb	w0, [x0, x1]
   24d70:	cmp	w0, #0x23
   24d74:	mov	w1, #0x51                  	// #81
   24d78:	ccmp	w0, w1, #0x4, ne  // ne = any
   24d7c:	b.eq	24da4 <my_regexec@@Base+0x18b0>  // b.none
   24d80:	ldrb	w0, [sp, #322]
   24d84:	cbz	w0, 25b1c <my_regexec@@Base+0x2628>
   24d88:	mov	x0, #0x1                   	// #1
   24d8c:	subs	x1, x0, x28
   24d90:	b.mi	25b14 <my_regexec@@Base+0x2620>  // b.first
   24d94:	ldr	x2, [sp, #248]
   24d98:	mov	x0, x22
   24d9c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   24da0:	mov	x22, x0
   24da4:	ldr	w0, [x19, #2368]
   24da8:	tbnz	w0, #20, 24db8 <my_regexec@@Base+0x18c4>
   24dac:	ldr	x0, [sp, #216]
   24db0:	tst	x0, #0xff00
   24db4:	b.eq	24eb8 <my_regexec@@Base+0x19c4>  // b.none
   24db8:	mov	x0, x19
   24dbc:	bl	59b0 <Perl_sv_newmortal@plt>
   24dc0:	mov	x26, x0
   24dc4:	mov	x5, #0x0                   	// #0
   24dc8:	add	x4, sp, #0xe8
   24dcc:	mov	x3, x20
   24dd0:	mov	x2, x0
   24dd4:	mov	x1, x21
   24dd8:	mov	x0, x19
   24ddc:	bl	5580 <my_regprop@plt>
   24de0:	ldr	w0, [x19, #2988]
   24de4:	and	w2, w0, #0xf
   24de8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   24dec:	ldr	x1, [x1, #3888]
   24df0:	ldrb	w1, [x1, w2, uxtw]
   24df4:	cbz	w1, 25b28 <my_regexec@@Base+0x2634>
   24df8:	and	w1, w0, #0xc000
   24dfc:	cmp	w1, #0x8, lsl #12
   24e00:	b.eq	25b4c <my_regexec@@Base+0x2658>  // b.none
   24e04:	and	w0, w0, #0xff
   24e08:	cmp	w0, #0xf
   24e0c:	b.eq	25b80 <my_regexec@@Base+0x268c>  // b.none
   24e10:	ldr	x0, [x19, #2992]
   24e14:	strb	wzr, [x0]
   24e18:	ldr	x0, [x19, #2976]
   24e1c:	str	xzr, [x0, #16]
   24e20:	ldr	x2, [sp, #208]
   24e24:	ldr	w0, [sp, #108]
   24e28:	cmp	w0, #0x0
   24e2c:	mov	w7, #0x8503                	// #34051
   24e30:	mov	w0, #0x8403                	// #33795
   24e34:	csel	w7, w7, w0, ne  // ne = any
   24e38:	ldr	x6, [x19, #1456]
   24e3c:	ldr	x5, [x19, #1448]
   24e40:	ldr	x4, [x19, #3360]
   24e44:	sub	x3, x22, x2
   24e48:	add	x1, x19, #0xba0
   24e4c:	mov	x0, x19
   24e50:	bl	53f0 <Perl_pv_pretty@plt>
   24e54:	mov	x4, x0
   24e58:	ldr	w0, [x26, #12]
   24e5c:	and	w2, w0, #0xf
   24e60:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   24e64:	ldr	x1, [x1, #3888]
   24e68:	ldrb	w1, [x1, w2, uxtw]
   24e6c:	cbz	w1, 25bb0 <my_regexec@@Base+0x26bc>
   24e70:	and	w1, w0, #0xc000
   24e74:	cmp	w1, #0x8, lsl #12
   24e78:	b.eq	25bd4 <my_regexec@@Base+0x26e0>  // b.none
   24e7c:	and	w0, w0, #0xff
   24e80:	cmp	w0, #0xf
   24e84:	b.ne	24e94 <my_regexec@@Base+0x19a0>  // b.any
   24e88:	ldr	x0, [x26]
   24e8c:	ldrb	w0, [x0, #129]
   24e90:	tbz	w0, #6, 25c08 <my_regexec@@Base+0x2714>
   24e94:	ldr	x0, [x26]
   24e98:	ldr	x5, [sp, #208]
   24e9c:	sub	w5, w22, w5
   24ea0:	ldr	x3, [x26, #16]
   24ea4:	ldr	w2, [x0, #16]
   24ea8:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24eac:	add	x1, x1, #0xc20
   24eb0:	mov	x0, x19
   24eb4:	bl	50e0 <Perl_re_printf@plt>
   24eb8:	add	x5, sp, #0xe8
   24ebc:	mov	x4, x22
   24ec0:	ldr	x3, [sp, #208]
   24ec4:	mov	x2, x20
   24ec8:	mov	x1, x21
   24ecc:	mov	x0, x19
   24ed0:	bl	19a68 <Perl_re_exec_indentf@@Base+0xd898>
   24ed4:	cbnz	x0, 2426c <my_regexec@@Base+0xd78>
   24ed8:	ldr	w0, [x19, #2368]
   24edc:	tbnz	w0, #20, 24eec <my_regexec@@Base+0x19f8>
   24ee0:	ldr	x0, [sp, #216]
   24ee4:	tst	x0, #0xff00
   24ee8:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   24eec:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   24ef0:	add	x1, x1, #0xc50
   24ef4:	mov	x0, x19
   24ef8:	bl	50e0 <Perl_re_printf@plt>
   24efc:	b	24020 <my_regexec@@Base+0xb2c>
   24f00:	ldr	x2, [x1, #72]
   24f04:	cbnz	x2, 24d3c <my_regexec@@Base+0x1848>
   24f08:	ldr	x0, [sp, #128]
   24f0c:	ldr	x20, [x0, #16]
   24f10:	cbnz	x20, 24d5c <my_regexec@@Base+0x1868>
   24f14:	mov	x0, #0x0                   	// #0
   24f18:	b	26188 <my_regexec@@Base+0x2c94>
   24f1c:	ldr	x0, [x1, #32]
   24f20:	cbnz	x0, 24c28 <my_regexec@@Base+0x1734>
   24f24:	mov	x1, x21
   24f28:	mov	x0, x19
   24f2c:	bl	6804 <Perl__inverse_folds@plt+0xe04>
   24f30:	b	24c28 <my_regexec@@Base+0x1734>
   24f34:	cbnz	x2, 24988 <my_regexec@@Base+0x1494>
   24f38:	mov	x1, x21
   24f3c:	mov	x0, x19
   24f40:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   24f44:	and	w0, w0, #0xff
   24f48:	cbnz	w0, 24988 <my_regexec@@Base+0x1494>
   24f4c:	ldr	w0, [x19, #2368]
   24f50:	tbnz	w0, #20, 24f60 <my_regexec@@Base+0x1a6c>
   24f54:	ldr	x0, [sp, #216]
   24f58:	tst	x0, #0xff00
   24f5c:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   24f60:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   24f64:	add	x2, x2, #0x330
   24f68:	add	x2, x2, #0xd18
   24f6c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   24f70:	add	x1, x1, #0xb50
   24f74:	mov	x0, x19
   24f78:	bl	50e0 <Perl_re_printf@plt>
   24f7c:	b	24020 <my_regexec@@Base+0xb2c>
   24f80:	ldr	x0, [x1, #72]
   24f84:	cbz	x0, 24fac <my_regexec@@Base+0x1ab8>
   24f88:	ldr	x0, [x21, #88]
   24f8c:	ldr	x0, [x0, #72]
   24f90:	str	x0, [sp, #152]
   24f94:	ldr	x0, [x21, #88]
   24f98:	ldr	x1, [x0, #56]
   24f9c:	str	x1, [sp, #184]
   24fa0:	ldr	x0, [x0, #48]
   24fa4:	str	x0, [sp, #136]
   24fa8:	b	24c44 <my_regexec@@Base+0x1750>
   24fac:	mov	x1, x21
   24fb0:	mov	x0, x19
   24fb4:	bl	6804 <Perl__inverse_folds@plt+0xe04>
   24fb8:	b	24f88 <my_regexec@@Base+0x1a94>
   24fbc:	mov	x1, x21
   24fc0:	mov	x0, x19
   24fc4:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   24fc8:	and	w0, w0, #0xff
   24fcc:	cbnz	w0, 261ec <my_regexec@@Base+0x2cf8>
   24fd0:	ldr	w0, [x19, #2368]
   24fd4:	tbnz	w0, #20, 24fe4 <my_regexec@@Base+0x1af0>
   24fd8:	ldr	x0, [sp, #216]
   24fdc:	tst	x0, #0xff00
   24fe0:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   24fe4:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   24fe8:	add	x2, x2, #0x330
   24fec:	add	x2, x2, #0xd18
   24ff0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   24ff4:	add	x1, x1, #0xb50
   24ff8:	mov	x0, x19
   24ffc:	bl	50e0 <Perl_re_printf@plt>
   25000:	b	24020 <my_regexec@@Base+0xb2c>
   25004:	ldr	x1, [sp, #152]
   25008:	mov	x0, x19
   2500c:	bl	5850 <Perl_sv_len_utf8@plt>
   25010:	mov	x20, x0
   25014:	b	24c9c <my_regexec@@Base+0x17a8>
   25018:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2501c:	add	x3, x3, #0x330
   25020:	add	x3, x3, #0xd58
   25024:	mov	w2, #0xe3b                 	// #3643
   25028:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2502c:	add	x1, x1, #0xcb0
   25030:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25034:	add	x0, x0, #0xe40
   25038:	bl	58e0 <__assert_fail@plt>
   2503c:	and	w1, w0, #0xff
   25040:	sub	w1, w1, #0x9
   25044:	cmp	w1, #0x1
   25048:	b.hi	24c84 <my_regexec@@Base+0x1790>  // b.pmore
   2504c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25050:	add	x3, x3, #0x330
   25054:	add	x3, x3, #0xd58
   25058:	mov	w2, #0xe3b                 	// #3643
   2505c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25060:	add	x1, x1, #0xcb0
   25064:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25068:	add	x0, x0, #0xe70
   2506c:	bl	58e0 <__assert_fail@plt>
   25070:	ldr	x0, [sp, #152]
   25074:	ldr	x0, [x0]
   25078:	ldrb	w0, [x0, #129]
   2507c:	tbnz	w0, #6, 24c90 <my_regexec@@Base+0x179c>
   25080:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25084:	add	x3, x3, #0x330
   25088:	add	x3, x3, #0xd58
   2508c:	mov	w2, #0xe3b                 	// #3643
   25090:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25094:	add	x1, x1, #0xcb0
   25098:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2509c:	add	x0, x0, #0xe88
   250a0:	bl	58e0 <__assert_fail@plt>
   250a4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   250a8:	add	x3, x3, #0x330
   250ac:	add	x3, x3, #0xd58
   250b0:	mov	w2, #0xe3c                 	// #3644
   250b4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   250b8:	add	x1, x1, #0xcb0
   250bc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   250c0:	add	x0, x0, #0xf18
   250c4:	bl	58e0 <__assert_fail@plt>
   250c8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   250cc:	add	x3, x3, #0x330
   250d0:	add	x3, x3, #0xd58
   250d4:	mov	w2, #0xe3c                 	// #3644
   250d8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   250dc:	add	x1, x1, #0xcb0
   250e0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   250e4:	add	x0, x0, #0xf38
   250e8:	bl	58e0 <__assert_fail@plt>
   250ec:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   250f0:	add	x3, x3, #0x330
   250f4:	add	x3, x3, #0xd58
   250f8:	mov	w2, #0xe3c                 	// #3644
   250fc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25100:	add	x1, x1, #0xcb0
   25104:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25108:	add	x0, x0, #0xf58
   2510c:	bl	58e0 <__assert_fail@plt>
   25110:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25114:	add	x3, x3, #0x330
   25118:	add	x3, x3, #0xd58
   2511c:	mov	w2, #0xe3c                 	// #3644
   25120:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25124:	add	x1, x1, #0xcb0
   25128:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2512c:	add	x0, x0, #0xef8
   25130:	bl	58e0 <__assert_fail@plt>
   25134:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25138:	add	x3, x3, #0x330
   2513c:	add	x3, x3, #0xd58
   25140:	mov	w2, #0xe3c                 	// #3644
   25144:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25148:	add	x1, x1, #0xcb0
   2514c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25150:	add	x0, x0, #0xf80
   25154:	bl	58e0 <__assert_fail@plt>
   25158:	ldr	w0, [sp, #108]
   2515c:	cbnz	w0, 25220 <my_regexec@@Base+0x1d2c>
   25160:	ldr	x0, [sp, #152]
   25164:	ldr	w0, [x0, #12]
   25168:	and	w2, w0, #0xf
   2516c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   25170:	ldr	x1, [x1, #3888]
   25174:	ldrb	w1, [x1, w2, uxtw]
   25178:	cbz	w1, 25234 <my_regexec@@Base+0x1d40>
   2517c:	and	w1, w0, #0xc000
   25180:	cmp	w1, #0x8, lsl #12
   25184:	b.eq	25258 <my_regexec@@Base+0x1d64>  // b.none
   25188:	and	w0, w0, #0xff
   2518c:	cmp	w0, #0xf
   25190:	b.eq	2528c <my_regexec@@Base+0x1d98>  // b.none
   25194:	ldr	x0, [sp, #152]
   25198:	ldr	x0, [x0]
   2519c:	ldr	x20, [x0, #16]
   251a0:	ldr	x0, [sp, #152]
   251a4:	ldr	w0, [x0, #12]
   251a8:	and	w1, w0, #0xff
   251ac:	cmp	w1, #0xb
   251b0:	b.eq	252c0 <my_regexec@@Base+0x1dcc>  // b.none
   251b4:	cmp	w1, #0xc
   251b8:	b.eq	252e4 <my_regexec@@Base+0x1df0>  // b.none
   251bc:	mov	w2, #0x2200                	// #8704
   251c0:	tst	w0, w2
   251c4:	b.ne	25308 <my_regexec@@Base+0x1e14>  // b.any
   251c8:	and	w0, w0, #0x7fc000
   251cc:	and	w0, w0, #0xffc07fff
   251d0:	cmp	w0, #0x404, lsl #12
   251d4:	b.ne	25360 <my_regexec@@Base+0x1e6c>  // b.any
   251d8:	cmp	w1, #0x6
   251dc:	b.ls	2532c <my_regexec@@Base+0x1e38>  // b.plast
   251e0:	ldr	x2, [sp, #152]
   251e4:	ldr	x0, [x2]
   251e8:	ldr	x0, [x0, #8]
   251ec:	cbz	x0, 25360 <my_regexec@@Base+0x1e6c>
   251f0:	ldrb	w0, [x0, #18]
   251f4:	cmp	w0, #0x42
   251f8:	b.ne	25350 <my_regexec@@Base+0x1e5c>  // b.any
   251fc:	ldr	x0, [sp, #152]
   25200:	ldr	x0, [x0]
   25204:	ldrb	w0, [x0, #40]
   25208:	ldr	x1, [sp, #136]
   2520c:	sub	x0, x0, x1
   25210:	sub	x20, x0, x20
   25214:	add	x0, x22, x20
   25218:	str	x0, [sp, #168]
   2521c:	b	25388 <my_regexec@@Base+0x1e94>
   25220:	ldr	x1, [sp, #152]
   25224:	mov	x0, x19
   25228:	bl	5850 <Perl_sv_len_utf8@plt>
   2522c:	mov	x20, x0
   25230:	b	251a0 <my_regexec@@Base+0x1cac>
   25234:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25238:	add	x3, x3, #0x330
   2523c:	add	x3, x3, #0xd58
   25240:	mov	w2, #0xe3b                 	// #3643
   25244:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25248:	add	x1, x1, #0xcb0
   2524c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25250:	add	x0, x0, #0xe40
   25254:	bl	58e0 <__assert_fail@plt>
   25258:	and	w1, w0, #0xff
   2525c:	sub	w1, w1, #0x9
   25260:	cmp	w1, #0x1
   25264:	b.hi	25188 <my_regexec@@Base+0x1c94>  // b.pmore
   25268:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2526c:	add	x3, x3, #0x330
   25270:	add	x3, x3, #0xd58
   25274:	mov	w2, #0xe3b                 	// #3643
   25278:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2527c:	add	x1, x1, #0xcb0
   25280:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25284:	add	x0, x0, #0xe70
   25288:	bl	58e0 <__assert_fail@plt>
   2528c:	ldr	x0, [sp, #152]
   25290:	ldr	x0, [x0]
   25294:	ldrb	w0, [x0, #129]
   25298:	tbnz	w0, #6, 25194 <my_regexec@@Base+0x1ca0>
   2529c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   252a0:	add	x3, x3, #0x330
   252a4:	add	x3, x3, #0xd58
   252a8:	mov	w2, #0xe3b                 	// #3643
   252ac:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   252b0:	add	x1, x1, #0xcb0
   252b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   252b8:	add	x0, x0, #0xe88
   252bc:	bl	58e0 <__assert_fail@plt>
   252c0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   252c4:	add	x3, x3, #0x330
   252c8:	add	x3, x3, #0xd58
   252cc:	mov	w2, #0xe3c                 	// #3644
   252d0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   252d4:	add	x1, x1, #0xcb0
   252d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   252dc:	add	x0, x0, #0xf18
   252e0:	bl	58e0 <__assert_fail@plt>
   252e4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   252e8:	add	x3, x3, #0x330
   252ec:	add	x3, x3, #0xd58
   252f0:	mov	w2, #0xe3c                 	// #3644
   252f4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   252f8:	add	x1, x1, #0xcb0
   252fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25300:	add	x0, x0, #0xf38
   25304:	bl	58e0 <__assert_fail@plt>
   25308:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2530c:	add	x3, x3, #0x330
   25310:	add	x3, x3, #0xd58
   25314:	mov	w2, #0xe3c                 	// #3644
   25318:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2531c:	add	x1, x1, #0xcb0
   25320:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25324:	add	x0, x0, #0xf58
   25328:	bl	58e0 <__assert_fail@plt>
   2532c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25330:	add	x3, x3, #0x330
   25334:	add	x3, x3, #0xd58
   25338:	mov	w2, #0xe3c                 	// #3644
   2533c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25340:	add	x1, x1, #0xcb0
   25344:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25348:	add	x0, x0, #0xef8
   2534c:	bl	58e0 <__assert_fail@plt>
   25350:	mov	w1, #0x42                  	// #66
   25354:	mov	x0, x2
   25358:	bl	57d0 <Perl_mg_find@plt>
   2535c:	cbnz	x0, 251fc <my_regexec@@Base+0x1d08>
   25360:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25364:	add	x3, x3, #0x330
   25368:	add	x3, x3, #0xd58
   2536c:	mov	w2, #0xe3c                 	// #3644
   25370:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25374:	add	x1, x1, #0xcb0
   25378:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2537c:	add	x0, x0, #0xf80
   25380:	bl	58e0 <__assert_fail@plt>
   25384:	str	x22, [sp, #168]
   25388:	ldr	x2, [sp, #240]
   2538c:	ldr	x1, [sp, #208]
   25390:	str	x1, [sp, #144]
   25394:	cmp	x2, x1
   25398:	b.cs	253e8 <my_regexec@@Base+0x1ef4>  // b.hs, b.nlast
   2539c:	ldrb	w0, [sp, #322]
   253a0:	sub	x20, x1, #0x1
   253a4:	cbnz	w0, 253d4 <my_regexec@@Base+0x1ee0>
   253a8:	str	wzr, [sp, #164]
   253ac:	ldr	x0, [sp, #144]
   253b0:	ldr	x1, [sp, #168]
   253b4:	cmp	x0, x1
   253b8:	b.hi	26154 <my_regexec@@Base+0x2c60>  // b.pmore
   253bc:	add	x26, sp, #0xd0
   253c0:	add	x28, sp, #0xe8
   253c4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   253c8:	ldr	x0, [x0, #4064]
   253cc:	str	x0, [sp, #128]
   253d0:	b	25504 <my_regexec@@Base+0x2010>
   253d4:	mov	x1, #0xffffffffffffffff    	// #-1
   253d8:	ldr	x0, [sp, #144]
   253dc:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   253e0:	mov	x20, x0
   253e4:	b	253f8 <my_regexec@@Base+0x1f04>
   253e8:	ldr	x0, [sp, #144]
   253ec:	sub	x20, x0, #0x1
   253f0:	ldrb	w0, [sp, #322]
   253f4:	cbz	w0, 253a8 <my_regexec@@Base+0x1eb4>
   253f8:	ldr	x2, [sp, #248]
   253fc:	mov	x1, #0x0                   	// #0
   25400:	mov	x0, x22
   25404:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   25408:	mov	x22, x0
   2540c:	b	253a8 <my_regexec@@Base+0x1eb4>
   25410:	mov	w0, #0x1                   	// #1
   25414:	str	w0, [sp, #164]
   25418:	b	25554 <my_regexec@@Base+0x2060>
   2541c:	ldr	x2, [sp, #240]
   25420:	b	25574 <my_regexec@@Base+0x2080>
   25424:	ldr	x0, [sp, #144]
   25428:	ldr	x1, [sp, #184]
   2542c:	sub	x0, x0, x1
   25430:	cmp	x20, x0
   25434:	b.cc	254a0 <my_regexec@@Base+0x1fac>  // b.lo, b.ul, b.last
   25438:	ldr	x0, [sp, #240]
   2543c:	str	x0, [sp, #200]
   25440:	add	x1, x20, #0x1
   25444:	str	x1, [sp, #176]
   25448:	cmp	x20, x0
   2544c:	b.cc	25598 <my_regexec@@Base+0x20a4>  // b.lo, b.ul, b.last
   25450:	ldr	x0, [sp, #144]
   25454:	ldr	x1, [sp, #136]
   25458:	sub	x20, x0, x1
   2545c:	b	255c8 <my_regexec@@Base+0x20d4>
   25460:	ldr	x0, [sp, #136]
   25464:	negs	x1, x0
   25468:	b.mi	25498 <my_regexec@@Base+0x1fa4>  // b.first
   2546c:	ldr	x2, [sp, #248]
   25470:	ldr	x0, [sp, #144]
   25474:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   25478:	mov	x20, x0
   2547c:	ldr	x0, [sp, #176]
   25480:	tbnz	x0, #63, 255d4 <my_regexec@@Base+0x20e0>
   25484:	ldr	x2, [sp, #248]
   25488:	ldr	x1, [sp, #176]
   2548c:	ldr	x0, [sp, #144]
   25490:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   25494:	b	254ac <my_regexec@@Base+0x1fb8>
   25498:	ldr	x2, [sp, #240]
   2549c:	b	25470 <my_regexec@@Base+0x1f7c>
   254a0:	ldr	x1, [sp, #144]
   254a4:	ldr	x2, [sp, #136]
   254a8:	sub	x20, x1, x2
   254ac:	str	x0, [sp, #208]
   254b0:	ldr	w0, [sp, #108]
   254b4:	cbnz	w0, 255f4 <my_regexec@@Base+0x2100>
   254b8:	ldr	x0, [sp, #208]
   254bc:	cmp	x0, x20
   254c0:	b.hi	254f0 <my_regexec@@Base+0x1ffc>  // b.pmore
   254c4:	mov	x2, x26
   254c8:	mov	x1, x28
   254cc:	mov	x0, x19
   254d0:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   254d4:	and	w0, w0, #0xff
   254d8:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   254dc:	ldr	x0, [sp, #208]
   254e0:	add	x0, x0, #0x1
   254e4:	str	x0, [sp, #208]
   254e8:	cmp	x0, x20
   254ec:	b.ls	254c4 <my_regexec@@Base+0x1fd0>  // b.plast
   254f0:	ldr	x0, [sp, #208]
   254f4:	str	x0, [sp, #144]
   254f8:	ldr	x1, [sp, #168]
   254fc:	cmp	x0, x1
   25500:	b.hi	2566c <my_regexec@@Base+0x2178>  // b.pmore
   25504:	ldrb	w0, [sp, #322]
   25508:	ldr	x1, [sp, #144]
   2550c:	ldr	x2, [sp, #136]
   25510:	add	x1, x1, x2
   25514:	cbnz	w0, 25650 <my_regexec@@Base+0x215c>
   25518:	ldr	w4, [sp, #192]
   2551c:	ldr	x3, [sp, #152]
   25520:	mov	x2, x22
   25524:	mov	x0, x19
   25528:	bl	5060 <Perl_fbm_instr@plt>
   2552c:	str	x0, [sp, #144]
   25530:	str	x0, [sp, #208]
   25534:	cbz	x0, 2566c <my_regexec@@Base+0x2178>
   25538:	ldr	w0, [x19, #2368]
   2553c:	tbnz	w0, #20, 25410 <my_regexec@@Base+0x1f1c>
   25540:	ldr	x0, [sp, #216]
   25544:	tst	x0, #0xff00
   25548:	ldr	w0, [sp, #164]
   2554c:	csinc	w0, w0, wzr, eq  // eq = none
   25550:	str	w0, [sp, #164]
   25554:	ldrb	w0, [sp, #322]
   25558:	str	w0, [sp, #196]
   2555c:	cbz	w0, 25424 <my_regexec@@Base+0x1f30>
   25560:	ldr	x0, [sp, #184]
   25564:	negs	x0, x0
   25568:	str	x0, [sp, #176]
   2556c:	b.mi	2541c <my_regexec@@Base+0x1f28>  // b.first
   25570:	ldr	x2, [sp, #248]
   25574:	ldr	x1, [sp, #176]
   25578:	ldr	x0, [sp, #144]
   2557c:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   25580:	cmp	x20, x0
   25584:	b.cc	25460 <my_regexec@@Base+0x1f6c>  // b.lo, b.ul, b.last
   25588:	ldr	x0, [sp, #240]
   2558c:	str	x0, [sp, #200]
   25590:	cmp	x0, x20
   25594:	b.ls	255dc <my_regexec@@Base+0x20e8>  // b.plast
   25598:	add	x0, x20, #0x1
   2559c:	str	x0, [sp, #176]
   255a0:	ldr	w0, [sp, #196]
   255a4:	cbz	w0, 25450 <my_regexec@@Base+0x1f5c>
   255a8:	ldr	x0, [sp, #136]
   255ac:	negs	x1, x0
   255b0:	ldr	x2, [sp, #248]
   255b4:	ldr	x0, [sp, #200]
   255b8:	csel	x2, x2, x0, pl  // pl = nfrst
   255bc:	ldr	x0, [sp, #144]
   255c0:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   255c4:	mov	x20, x0
   255c8:	ldr	x0, [sp, #176]
   255cc:	str	x0, [sp, #208]
   255d0:	b	254b0 <my_regexec@@Base+0x1fbc>
   255d4:	ldr	x2, [sp, #240]
   255d8:	b	25488 <my_regexec@@Base+0x1f94>
   255dc:	ldr	x2, [sp, #248]
   255e0:	mov	x1, #0x1                   	// #1
   255e4:	mov	x0, x20
   255e8:	bl	6edc <Perl__inverse_folds@plt+0x14dc>
   255ec:	str	x0, [sp, #176]
   255f0:	b	255a8 <my_regexec@@Base+0x20b4>
   255f4:	ldr	x0, [sp, #208]
   255f8:	cmp	x20, x0
   255fc:	b.cc	254f0 <my_regexec@@Base+0x1ffc>  // b.lo, b.ul, b.last
   25600:	mov	x2, x26
   25604:	mov	x1, x28
   25608:	mov	x0, x19
   2560c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   25610:	and	w0, w0, #0xff
   25614:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   25618:	ldr	x0, [sp, #208]
   2561c:	cmp	x0, x20
   25620:	b.cs	25644 <my_regexec@@Base+0x2150>  // b.hs, b.nlast
   25624:	ldrb	w1, [x0]
   25628:	ldr	x2, [sp, #128]
   2562c:	ldrb	w1, [x2, w1, sxtw]
   25630:	add	x0, x0, x1
   25634:	str	x0, [sp, #208]
   25638:	cmp	x0, x20
   2563c:	b.ls	25600 <my_regexec@@Base+0x210c>  // b.plast
   25640:	b	254f0 <my_regexec@@Base+0x1ffc>
   25644:	add	x0, x0, #0x1
   25648:	str	x0, [sp, #208]
   2564c:	b	254f0 <my_regexec@@Base+0x1ffc>
   25650:	mov	x3, x22
   25654:	mov	x2, x23
   25658:	ldr	x1, [sp, #136]
   2565c:	ldr	x0, [sp, #144]
   25660:	bl	6d84 <Perl__inverse_folds@plt+0x1384>
   25664:	mov	x1, x0
   25668:	b	25518 <my_regexec@@Base+0x2024>
   2566c:	ldr	w0, [x19, #2368]
   25670:	tbnz	w0, #20, 25680 <my_regexec@@Base+0x218c>
   25674:	ldr	x0, [sp, #216]
   25678:	tst	x0, #0xff00
   2567c:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   25680:	ldr	w0, [sp, #164]
   25684:	cbnz	w0, 24020 <my_regexec@@Base+0xb2c>
   25688:	ldr	w0, [x19, #2964]
   2568c:	and	w2, w0, #0xf
   25690:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   25694:	ldr	x1, [x1, #3888]
   25698:	ldrb	w1, [x1, w2, uxtw]
   2569c:	cbz	w1, 25874 <my_regexec@@Base+0x2380>
   256a0:	and	w1, w0, #0xc000
   256a4:	cmp	w1, #0x8, lsl #12
   256a8:	b.eq	25898 <my_regexec@@Base+0x23a4>  // b.none
   256ac:	and	w0, w0, #0xff
   256b0:	cmp	w0, #0xf
   256b4:	b.eq	258cc <my_regexec@@Base+0x23d8>  // b.none
   256b8:	ldr	x0, [x19, #2968]
   256bc:	strb	wzr, [x0]
   256c0:	ldr	x0, [x19, #2952]
   256c4:	str	xzr, [x0, #16]
   256c8:	add	x22, x19, #0xb88
   256cc:	ldr	x0, [sp, #152]
   256d0:	ldr	x23, [x0, #16]
   256d4:	ldr	w0, [x0, #12]
   256d8:	and	w2, w0, #0xf
   256dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   256e0:	ldr	x1, [x1, #3888]
   256e4:	ldrb	w1, [x1, w2, uxtw]
   256e8:	cbz	w1, 258fc <my_regexec@@Base+0x2408>
   256ec:	and	w1, w0, #0xc000
   256f0:	cmp	w1, #0x8, lsl #12
   256f4:	b.eq	25920 <my_regexec@@Base+0x242c>  // b.none
   256f8:	and	w2, w0, #0xff
   256fc:	cmp	w2, #0xf
   25700:	b.eq	25954 <my_regexec@@Base+0x2460>  // b.none
   25704:	ldr	x1, [sp, #152]
   25708:	ldr	x1, [x1]
   2570c:	ldr	x20, [x1, #16]
   25710:	cmp	w2, #0xb
   25714:	b.eq	25990 <my_regexec@@Base+0x249c>  // b.none
   25718:	cmp	w2, #0xc
   2571c:	b.eq	259b4 <my_regexec@@Base+0x24c0>  // b.none
   25720:	mov	w3, #0x2200                	// #8704
   25724:	tst	w0, w3
   25728:	b.ne	259d8 <my_regexec@@Base+0x24e4>  // b.any
   2572c:	and	w0, w0, #0x7fc000
   25730:	and	w0, w0, #0xffc07fff
   25734:	cmp	w0, #0x404, lsl #12
   25738:	b.ne	25a30 <my_regexec@@Base+0x253c>  // b.any
   2573c:	cmp	w2, #0x6
   25740:	b.ls	259fc <my_regexec@@Base+0x2508>  // b.plast
   25744:	ldr	x0, [x1, #8]
   25748:	cbz	x0, 25a30 <my_regexec@@Base+0x253c>
   2574c:	ldrb	w0, [x0, #18]
   25750:	cmp	w0, #0x42
   25754:	b.ne	25a20 <my_regexec@@Base+0x252c>  // b.any
   25758:	ldr	x24, [sp, #152]
   2575c:	ldr	x0, [x24]
   25760:	ldrb	w3, [x0, #40]
   25764:	ldr	w0, [sp, #108]
   25768:	cmp	w0, #0x0
   2576c:	mov	w7, #0x8503                	// #34051
   25770:	mov	w0, #0x8403                	// #33795
   25774:	csel	w7, w7, w0, ne  // ne = any
   25778:	ldr	x6, [x19, #1456]
   2577c:	ldr	x5, [x19, #1448]
   25780:	mov	x4, #0x1e                  	// #30
   25784:	sub	x3, x20, x3
   25788:	mov	x2, x23
   2578c:	mov	x1, x22
   25790:	mov	x0, x19
   25794:	bl	53f0 <Perl_pv_pretty@plt>
   25798:	mov	x22, x0
   2579c:	ldr	x0, [x21, #88]
   257a0:	ldr	x1, [x0, #24]
   257a4:	cmp	x1, x24
   257a8:	b.eq	25a54 <my_regexec@@Base+0x2560>  // b.none
   257ac:	ldr	x1, [x0, #32]
   257b0:	adrp	x0, 6a000 <boot_re@@Base+0x841c>
   257b4:	add	x0, x0, #0xf70
   257b8:	adrp	x20, 6a000 <boot_re@@Base+0x841c>
   257bc:	add	x20, x20, #0xf60
   257c0:	cmp	x1, x24
   257c4:	csel	x20, x20, x0, eq  // eq = none
   257c8:	ldr	x0, [sp, #152]
   257cc:	ldr	w0, [x0, #12]
   257d0:	and	w1, w0, #0xff
   257d4:	cmp	w1, #0xb
   257d8:	b.eq	25a60 <my_regexec@@Base+0x256c>  // b.none
   257dc:	cmp	w1, #0xc
   257e0:	b.eq	25a84 <my_regexec@@Base+0x2590>  // b.none
   257e4:	mov	w2, #0x2200                	// #8704
   257e8:	tst	w0, w2
   257ec:	b.ne	25aa8 <my_regexec@@Base+0x25b4>  // b.any
   257f0:	and	w0, w0, #0x7fc000
   257f4:	and	w0, w0, #0xffc07fff
   257f8:	cmp	w0, #0x404, lsl #12
   257fc:	b.ne	25af0 <my_regexec@@Base+0x25fc>  // b.any
   25800:	cmp	w1, #0x6
   25804:	b.ls	25acc <my_regexec@@Base+0x25d8>  // b.plast
   25808:	ldr	x2, [sp, #152]
   2580c:	ldr	x0, [x2]
   25810:	ldr	x0, [x0, #8]
   25814:	cbz	x0, 25af0 <my_regexec@@Base+0x25fc>
   25818:	ldrb	w0, [x0, #18]
   2581c:	cmp	w0, #0x42
   25820:	b.eq	25834 <my_regexec@@Base+0x2340>  // b.none
   25824:	mov	w1, #0x42                  	// #66
   25828:	mov	x0, x2
   2582c:	bl	57d0 <Perl_mg_find@plt>
   25830:	cbz	x0, 25af0 <my_regexec@@Base+0x25fc>
   25834:	ldr	x0, [sp, #152]
   25838:	ldr	x0, [x0]
   2583c:	ldrb	w1, [x0, #40]
   25840:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   25844:	add	x0, x0, #0x20
   25848:	adrp	x4, 6a000 <boot_re@@Base+0x841c>
   2584c:	add	x4, x4, #0xf80
   25850:	cmp	w1, #0x0
   25854:	csel	x4, x4, x0, ne  // ne = any
   25858:	mov	x3, x22
   2585c:	mov	x2, x20
   25860:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   25864:	add	x1, x1, #0xc00
   25868:	mov	x0, x19
   2586c:	bl	50e0 <Perl_re_printf@plt>
   25870:	b	24020 <my_regexec@@Base+0xb2c>
   25874:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25878:	add	x3, x3, #0x330
   2587c:	add	x3, x3, #0xd58
   25880:	mov	w2, #0xe6b                 	// #3691
   25884:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25888:	add	x1, x1, #0xcb0
   2588c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25890:	add	x0, x0, #0xd10
   25894:	bl	58e0 <__assert_fail@plt>
   25898:	and	w1, w0, #0xff
   2589c:	sub	w1, w1, #0x9
   258a0:	cmp	w1, #0x1
   258a4:	b.hi	256ac <my_regexec@@Base+0x21b8>  // b.pmore
   258a8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   258ac:	add	x3, x3, #0x330
   258b0:	add	x3, x3, #0xd58
   258b4:	mov	w2, #0xe6b                 	// #3691
   258b8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   258bc:	add	x1, x1, #0xcb0
   258c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   258c4:	add	x0, x0, #0xd40
   258c8:	bl	58e0 <__assert_fail@plt>
   258cc:	ldr	x0, [x19, #2952]
   258d0:	ldrb	w0, [x0, #129]
   258d4:	tbnz	w0, #6, 256b8 <my_regexec@@Base+0x21c4>
   258d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   258dc:	add	x3, x3, #0x330
   258e0:	add	x3, x3, #0xd58
   258e4:	mov	w2, #0xe6b                 	// #3691
   258e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   258ec:	add	x1, x1, #0xcb0
   258f0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   258f4:	add	x0, x0, #0xd58
   258f8:	bl	58e0 <__assert_fail@plt>
   258fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25900:	add	x3, x3, #0x330
   25904:	add	x3, x3, #0xd58
   25908:	mov	w2, #0xe6c                 	// #3692
   2590c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25910:	add	x1, x1, #0xcb0
   25914:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25918:	add	x0, x0, #0xe40
   2591c:	bl	58e0 <__assert_fail@plt>
   25920:	and	w1, w0, #0xff
   25924:	sub	w1, w1, #0x9
   25928:	cmp	w1, #0x1
   2592c:	b.hi	256f8 <my_regexec@@Base+0x2204>  // b.pmore
   25930:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25934:	add	x3, x3, #0x330
   25938:	add	x3, x3, #0xd58
   2593c:	mov	w2, #0xe6c                 	// #3692
   25940:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25944:	add	x1, x1, #0xcb0
   25948:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2594c:	add	x0, x0, #0xe70
   25950:	bl	58e0 <__assert_fail@plt>
   25954:	ldr	x1, [sp, #152]
   25958:	ldr	x1, [x1]
   2595c:	ldrb	w3, [x1, #129]
   25960:	tbz	w3, #6, 2596c <my_regexec@@Base+0x2478>
   25964:	ldr	x20, [x1, #16]
   25968:	b	25720 <my_regexec@@Base+0x222c>
   2596c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25970:	add	x3, x3, #0x330
   25974:	add	x3, x3, #0xd58
   25978:	mov	w2, #0xe6c                 	// #3692
   2597c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25980:	add	x1, x1, #0xcb0
   25984:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25988:	add	x0, x0, #0xe88
   2598c:	bl	58e0 <__assert_fail@plt>
   25990:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25994:	add	x3, x3, #0x330
   25998:	add	x3, x3, #0xd58
   2599c:	mov	w2, #0xe6c                 	// #3692
   259a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   259a4:	add	x1, x1, #0xcb0
   259a8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   259ac:	add	x0, x0, #0xf18
   259b0:	bl	58e0 <__assert_fail@plt>
   259b4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   259b8:	add	x3, x3, #0x330
   259bc:	add	x3, x3, #0xd58
   259c0:	mov	w2, #0xe6c                 	// #3692
   259c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   259c8:	add	x1, x1, #0xcb0
   259cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   259d0:	add	x0, x0, #0xf38
   259d4:	bl	58e0 <__assert_fail@plt>
   259d8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   259dc:	add	x3, x3, #0x330
   259e0:	add	x3, x3, #0xd58
   259e4:	mov	w2, #0xe6c                 	// #3692
   259e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   259ec:	add	x1, x1, #0xcb0
   259f0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   259f4:	add	x0, x0, #0xf58
   259f8:	bl	58e0 <__assert_fail@plt>
   259fc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25a00:	add	x3, x3, #0x330
   25a04:	add	x3, x3, #0xd58
   25a08:	mov	w2, #0xe6c                 	// #3692
   25a0c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25a10:	add	x1, x1, #0xcb0
   25a14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25a18:	add	x0, x0, #0xef8
   25a1c:	bl	58e0 <__assert_fail@plt>
   25a20:	mov	w1, #0x42                  	// #66
   25a24:	ldr	x0, [sp, #152]
   25a28:	bl	57d0 <Perl_mg_find@plt>
   25a2c:	cbnz	x0, 25758 <my_regexec@@Base+0x2264>
   25a30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25a34:	add	x3, x3, #0x330
   25a38:	add	x3, x3, #0xd58
   25a3c:	mov	w2, #0xe6c                 	// #3692
   25a40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25a44:	add	x1, x1, #0xcb0
   25a48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25a4c:	add	x0, x0, #0xf80
   25a50:	bl	58e0 <__assert_fail@plt>
   25a54:	adrp	x20, 6a000 <boot_re@@Base+0x841c>
   25a58:	add	x20, x20, #0xf60
   25a5c:	b	257c8 <my_regexec@@Base+0x22d4>
   25a60:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25a64:	add	x3, x3, #0x330
   25a68:	add	x3, x3, #0xd58
   25a6c:	mov	w2, #0xe70                 	// #3696
   25a70:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25a74:	add	x1, x1, #0xcb0
   25a78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25a7c:	add	x0, x0, #0xf18
   25a80:	bl	58e0 <__assert_fail@plt>
   25a84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25a88:	add	x3, x3, #0x330
   25a8c:	add	x3, x3, #0xd58
   25a90:	mov	w2, #0xe70                 	// #3696
   25a94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25a98:	add	x1, x1, #0xcb0
   25a9c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25aa0:	add	x0, x0, #0xf38
   25aa4:	bl	58e0 <__assert_fail@plt>
   25aa8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25aac:	add	x3, x3, #0x330
   25ab0:	add	x3, x3, #0xd58
   25ab4:	mov	w2, #0xe70                 	// #3696
   25ab8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25abc:	add	x1, x1, #0xcb0
   25ac0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25ac4:	add	x0, x0, #0xf58
   25ac8:	bl	58e0 <__assert_fail@plt>
   25acc:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25ad0:	add	x3, x3, #0x330
   25ad4:	add	x3, x3, #0xd58
   25ad8:	mov	w2, #0xe70                 	// #3696
   25adc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25ae0:	add	x1, x1, #0xcb0
   25ae4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25ae8:	add	x0, x0, #0xef8
   25aec:	bl	58e0 <__assert_fail@plt>
   25af0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25af4:	add	x3, x3, #0x330
   25af8:	add	x3, x3, #0xd58
   25afc:	mov	w2, #0xe70                 	// #3696
   25b00:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25b04:	add	x1, x1, #0xcb0
   25b08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25b0c:	add	x0, x0, #0xf80
   25b10:	bl	58e0 <__assert_fail@plt>
   25b14:	ldr	x2, [sp, #240]
   25b18:	b	24d98 <my_regexec@@Base+0x18a4>
   25b1c:	sub	x22, x22, x28
   25b20:	add	x22, x22, #0x1
   25b24:	b	24da4 <my_regexec@@Base+0x18b0>
   25b28:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25b2c:	add	x3, x3, #0x330
   25b30:	add	x3, x3, #0xd58
   25b34:	mov	w2, #0xe7f                 	// #3711
   25b38:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25b3c:	add	x1, x1, #0xcb0
   25b40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25b44:	add	x0, x0, #0xd10
   25b48:	bl	58e0 <__assert_fail@plt>
   25b4c:	and	w1, w0, #0xff
   25b50:	sub	w1, w1, #0x9
   25b54:	cmp	w1, #0x1
   25b58:	b.hi	24e04 <my_regexec@@Base+0x1910>  // b.pmore
   25b5c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25b60:	add	x3, x3, #0x330
   25b64:	add	x3, x3, #0xd58
   25b68:	mov	w2, #0xe7f                 	// #3711
   25b6c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25b70:	add	x1, x1, #0xcb0
   25b74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25b78:	add	x0, x0, #0xd40
   25b7c:	bl	58e0 <__assert_fail@plt>
   25b80:	ldr	x0, [x19, #2976]
   25b84:	ldrb	w0, [x0, #129]
   25b88:	tbnz	w0, #6, 24e10 <my_regexec@@Base+0x191c>
   25b8c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25b90:	add	x3, x3, #0x330
   25b94:	add	x3, x3, #0xd58
   25b98:	mov	w2, #0xe7f                 	// #3711
   25b9c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25ba0:	add	x1, x1, #0xcb0
   25ba4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25ba8:	add	x0, x0, #0xd58
   25bac:	bl	58e0 <__assert_fail@plt>
   25bb0:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25bb4:	add	x3, x3, #0x330
   25bb8:	add	x3, x3, #0xd58
   25bbc:	mov	w2, #0xe83                 	// #3715
   25bc0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25bc4:	add	x1, x1, #0xcb0
   25bc8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25bcc:	add	x0, x0, #0xe40
   25bd0:	bl	58e0 <__assert_fail@plt>
   25bd4:	and	w1, w0, #0xff
   25bd8:	sub	w1, w1, #0x9
   25bdc:	cmp	w1, #0x1
   25be0:	b.hi	24e7c <my_regexec@@Base+0x1988>  // b.pmore
   25be4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25be8:	add	x3, x3, #0x330
   25bec:	add	x3, x3, #0xd58
   25bf0:	mov	w2, #0xe83                 	// #3715
   25bf4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25bf8:	add	x1, x1, #0xcb0
   25bfc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25c00:	add	x0, x0, #0xe70
   25c04:	bl	58e0 <__assert_fail@plt>
   25c08:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25c0c:	add	x3, x3, #0x330
   25c10:	add	x3, x3, #0xd58
   25c14:	mov	w2, #0xe83                 	// #3715
   25c18:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25c1c:	add	x1, x1, #0xcb0
   25c20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25c24:	add	x0, x0, #0xe88
   25c28:	bl	58e0 <__assert_fail@plt>
   25c2c:	cbz	x0, 25c44 <my_regexec@@Base+0x2750>
   25c30:	ldr	w0, [sp, #108]
   25c34:	cbnz	w0, 25dbc <my_regexec@@Base+0x28c8>
   25c38:	ldr	x0, [x21, #88]
   25c3c:	ldr	x20, [x0, #64]
   25c40:	b	25c5c <my_regexec@@Base+0x2768>
   25c44:	ldr	x1, [x1, #72]
   25c48:	cbz	x1, 26188 <my_regexec@@Base+0x2c94>
   25c4c:	ldr	w1, [sp, #108]
   25c50:	cbz	w1, 25dd4 <my_regexec@@Base+0x28e0>
   25c54:	ldr	x0, [x21, #88]
   25c58:	ldr	x20, [x0, #72]
   25c5c:	ldr	w0, [x20, #12]
   25c60:	and	w1, w0, #0x3ffc00
   25c64:	and	w1, w1, #0xffe007ff
   25c68:	cmp	w1, #0x400
   25c6c:	b.ne	25ea8 <my_regexec@@Base+0x29b4>  // b.any
   25c70:	and	x1, x0, #0xf
   25c74:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   25c78:	ldr	x2, [x2, #3888]
   25c7c:	ldrb	w1, [x2, x1]
   25c80:	cbz	w1, 25e20 <my_regexec@@Base+0x292c>
   25c84:	and	w1, w0, #0xc000
   25c88:	cmp	w1, #0x8, lsl #12
   25c8c:	b.eq	25e44 <my_regexec@@Base+0x2950>  // b.none
   25c90:	and	w0, w0, #0xff
   25c94:	cmp	w0, #0xf
   25c98:	b.eq	25e78 <my_regexec@@Base+0x2984>  // b.none
   25c9c:	ldr	x0, [x20]
   25ca0:	ldr	x0, [x0, #16]
   25ca4:	str	x0, [sp, #224]
   25ca8:	ldr	x0, [x20, #16]
   25cac:	str	x0, [sp, #128]
   25cb0:	ldr	w0, [x20, #12]
   25cb4:	and	w1, w0, #0xff
   25cb8:	cmp	w1, #0xb
   25cbc:	b.eq	25ec4 <my_regexec@@Base+0x29d0>  // b.none
   25cc0:	cmp	w1, #0xc
   25cc4:	b.eq	25ee8 <my_regexec@@Base+0x29f4>  // b.none
   25cc8:	mov	w2, #0x2200                	// #8704
   25ccc:	tst	w0, w2
   25cd0:	b.ne	25f0c <my_regexec@@Base+0x2a18>  // b.any
   25cd4:	and	w0, w0, #0x7fc000
   25cd8:	and	w0, w0, #0xffc07fff
   25cdc:	cmp	w0, #0x404, lsl #12
   25ce0:	b.ne	25f64 <my_regexec@@Base+0x2a70>  // b.any
   25ce4:	cmp	w1, #0x6
   25ce8:	b.ls	25f30 <my_regexec@@Base+0x2a3c>  // b.plast
   25cec:	ldr	x0, [x20]
   25cf0:	ldr	x0, [x0, #8]
   25cf4:	cbz	x0, 25f64 <my_regexec@@Base+0x2a70>
   25cf8:	ldrb	w0, [x0, #18]
   25cfc:	cmp	w0, #0x42
   25d00:	b.ne	25f54 <my_regexec@@Base+0x2a60>  // b.any
   25d04:	ldr	x0, [x20]
   25d08:	ldrb	w0, [x0, #40]
   25d0c:	cbz	w0, 25fe8 <my_regexec@@Base+0x2af4>
   25d10:	ldr	x0, [sp, #224]
   25d14:	sub	x26, x22, x0
   25d18:	ldr	w0, [x19, #2368]
   25d1c:	tbnz	w0, #20, 25d28 <my_regexec@@Base+0x2834>
   25d20:	ldr	x0, [sp, #216]
   25d24:	tbz	w0, #1, 25d40 <my_regexec@@Base+0x284c>
   25d28:	ldr	x3, [x19, #1488]
   25d2c:	ldr	x2, [x19, #1480]
   25d30:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   25d34:	add	x1, x1, #0xc78
   25d38:	mov	x0, x19
   25d3c:	bl	50e0 <Perl_re_printf@plt>
   25d40:	add	x20, x26, #0x1
   25d44:	cmp	x20, x23
   25d48:	b.cc	25f88 <my_regexec@@Base+0x2a94>  // b.lo, b.ul, b.last
   25d4c:	ldr	x0, [sp, #224]
   25d50:	str	x0, [sp, #136]
   25d54:	sub	x2, x0, #0x1
   25d58:	ldr	x1, [sp, #128]
   25d5c:	mov	x0, x20
   25d60:	bl	5460 <memcmp@plt>
   25d64:	cbz	w0, 2616c <my_regexec@@Base+0x2c78>
   25d68:	cmp	x23, x26
   25d6c:	b.hi	25fb8 <my_regexec@@Base+0x2ac4>  // b.pmore
   25d70:	ldr	w0, [sp, #192]
   25d74:	cbnz	w0, 25fe8 <my_regexec@@Base+0x2af4>
   25d78:	ldr	x2, [sp, #136]
   25d7c:	ldr	x1, [sp, #128]
   25d80:	mov	x0, x26
   25d84:	bl	5460 <memcmp@plt>
   25d88:	cbz	w0, 26178 <my_regexec@@Base+0x2c84>
   25d8c:	ldr	w0, [x19, #2368]
   25d90:	tbnz	w0, #20, 25da0 <my_regexec@@Base+0x28ac>
   25d94:	ldr	x0, [sp, #216]
   25d98:	tst	x0, #0xff00
   25d9c:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   25da0:	ldr	x3, [x19, #1488]
   25da4:	ldr	x2, [x19, #1480]
   25da8:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   25dac:	add	x1, x1, #0xce0
   25db0:	mov	x0, x19
   25db4:	bl	50e0 <Perl_re_printf@plt>
   25db8:	b	24020 <my_regexec@@Base+0xb2c>
   25dbc:	ldr	x0, [x1, #72]
   25dc0:	cbnz	x0, 25c54 <my_regexec@@Base+0x2760>
   25dc4:	mov	x1, x21
   25dc8:	mov	x0, x19
   25dcc:	bl	6804 <Perl__inverse_folds@plt+0xe04>
   25dd0:	b	25c54 <my_regexec@@Base+0x2760>
   25dd4:	cbnz	x0, 25c38 <my_regexec@@Base+0x2744>
   25dd8:	mov	x1, x21
   25ddc:	mov	x0, x19
   25de0:	bl	7004 <Perl__inverse_folds@plt+0x1604>
   25de4:	and	w0, w0, #0xff
   25de8:	cbnz	w0, 25c38 <my_regexec@@Base+0x2744>
   25dec:	ldr	w0, [x19, #2368]
   25df0:	tbnz	w0, #20, 25e00 <my_regexec@@Base+0x290c>
   25df4:	ldr	x0, [sp, #216]
   25df8:	tst	x0, #0xff00
   25dfc:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   25e00:	adrp	x2, 6c000 <boot_re@@Base+0xa41c>
   25e04:	add	x2, x2, #0x330
   25e08:	add	x2, x2, #0xd18
   25e0c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   25e10:	add	x1, x1, #0xb50
   25e14:	mov	x0, x19
   25e18:	bl	50e0 <Perl_re_printf@plt>
   25e1c:	b	24020 <my_regexec@@Base+0xb2c>
   25e20:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25e24:	add	x3, x3, #0x330
   25e28:	add	x3, x3, #0xd58
   25e2c:	mov	w2, #0xea3                 	// #3747
   25e30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25e34:	add	x1, x1, #0xcb0
   25e38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25e3c:	add	x0, x0, #0xe40
   25e40:	bl	58e0 <__assert_fail@plt>
   25e44:	and	w1, w0, #0xff
   25e48:	sub	w1, w1, #0x9
   25e4c:	cmp	w1, #0x1
   25e50:	b.hi	25c90 <my_regexec@@Base+0x279c>  // b.pmore
   25e54:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25e58:	add	x3, x3, #0x330
   25e5c:	add	x3, x3, #0xd58
   25e60:	mov	w2, #0xea3                 	// #3747
   25e64:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25e68:	add	x1, x1, #0xcb0
   25e6c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25e70:	add	x0, x0, #0xe70
   25e74:	bl	58e0 <__assert_fail@plt>
   25e78:	ldr	x0, [x20]
   25e7c:	ldrb	w0, [x0, #129]
   25e80:	tbnz	w0, #6, 25c9c <my_regexec@@Base+0x27a8>
   25e84:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25e88:	add	x3, x3, #0x330
   25e8c:	add	x3, x3, #0xd58
   25e90:	mov	w2, #0xea3                 	// #3747
   25e94:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25e98:	add	x1, x1, #0xcb0
   25e9c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25ea0:	add	x0, x0, #0xe88
   25ea4:	bl	58e0 <__assert_fail@plt>
   25ea8:	mov	w3, #0x22                  	// #34
   25eac:	add	x2, sp, #0xe0
   25eb0:	mov	x1, x20
   25eb4:	mov	x0, x19
   25eb8:	bl	5200 <Perl_sv_2pv_flags@plt>
   25ebc:	str	x0, [sp, #128]
   25ec0:	b	25cb0 <my_regexec@@Base+0x27bc>
   25ec4:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25ec8:	add	x3, x3, #0x330
   25ecc:	add	x3, x3, #0xd58
   25ed0:	mov	w2, #0xea4                 	// #3748
   25ed4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25ed8:	add	x1, x1, #0xcb0
   25edc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25ee0:	add	x0, x0, #0xf18
   25ee4:	bl	58e0 <__assert_fail@plt>
   25ee8:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25eec:	add	x3, x3, #0x330
   25ef0:	add	x3, x3, #0xd58
   25ef4:	mov	w2, #0xea4                 	// #3748
   25ef8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25efc:	add	x1, x1, #0xcb0
   25f00:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25f04:	add	x0, x0, #0xf38
   25f08:	bl	58e0 <__assert_fail@plt>
   25f0c:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25f10:	add	x3, x3, #0x330
   25f14:	add	x3, x3, #0xd58
   25f18:	mov	w2, #0xea4                 	// #3748
   25f1c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25f20:	add	x1, x1, #0xcb0
   25f24:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25f28:	add	x0, x0, #0xf58
   25f2c:	bl	58e0 <__assert_fail@plt>
   25f30:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25f34:	add	x3, x3, #0x330
   25f38:	add	x3, x3, #0xd58
   25f3c:	mov	w2, #0xea4                 	// #3748
   25f40:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25f44:	add	x1, x1, #0xcb0
   25f48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25f4c:	add	x0, x0, #0xef8
   25f50:	bl	58e0 <__assert_fail@plt>
   25f54:	mov	w1, #0x42                  	// #66
   25f58:	mov	x0, x20
   25f5c:	bl	57d0 <Perl_mg_find@plt>
   25f60:	cbnz	x0, 25d04 <my_regexec@@Base+0x2810>
   25f64:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   25f68:	add	x3, x3, #0x330
   25f6c:	add	x3, x3, #0xd58
   25f70:	mov	w2, #0xea4                 	// #3748
   25f74:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   25f78:	add	x1, x1, #0xcb0
   25f7c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   25f80:	add	x0, x0, #0xf80
   25f84:	bl	58e0 <__assert_fail@plt>
   25f88:	ldr	w0, [x19, #2368]
   25f8c:	tbnz	w0, #20, 25f9c <my_regexec@@Base+0x2aa8>
   25f90:	ldr	x0, [sp, #216]
   25f94:	tst	x0, #0xff00
   25f98:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   25f9c:	ldr	x3, [x19, #1488]
   25fa0:	ldr	x2, [x19, #1480]
   25fa4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   25fa8:	add	x1, x1, #0xc98
   25fac:	mov	x0, x19
   25fb0:	bl	50e0 <Perl_re_printf@plt>
   25fb4:	b	24020 <my_regexec@@Base+0xb2c>
   25fb8:	ldr	w0, [x19, #2368]
   25fbc:	tbnz	w0, #20, 25fcc <my_regexec@@Base+0x2ad8>
   25fc0:	ldr	x0, [sp, #216]
   25fc4:	tst	x0, #0xff00
   25fc8:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   25fcc:	ldr	x3, [x19, #1488]
   25fd0:	ldr	x2, [x19, #1480]
   25fd4:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   25fd8:	add	x1, x1, #0xce0
   25fdc:	mov	x0, x19
   25fe0:	bl	50e0 <Perl_re_printf@plt>
   25fe4:	b	24020 <my_regexec@@Base+0xb2c>
   25fe8:	ldr	x3, [sp, #224]
   25fec:	cbz	x3, 26174 <my_regexec@@Base+0x2c80>
   25ff0:	ldr	x0, [sp, #128]
   25ff4:	add	x3, x0, x3
   25ff8:	mov	x2, x0
   25ffc:	mov	x1, x22
   26000:	ldr	x0, [sp, #208]
   26004:	bl	4e80 <Perl_rninstr@plt>
   26008:	mov	x26, x0
   2600c:	cbnz	x0, 26178 <my_regexec@@Base+0x2c84>
   26010:	ldr	w0, [x19, #2368]
   26014:	tbnz	w0, #20, 26024 <my_regexec@@Base+0x2b30>
   26018:	ldr	x0, [sp, #216]
   2601c:	tst	x0, #0xff00
   26020:	b.eq	24020 <my_regexec@@Base+0xb2c>  // b.none
   26024:	ldr	x3, [x19, #1488]
   26028:	ldr	x2, [x19, #1480]
   2602c:	adrp	x1, 6b000 <boot_re@@Base+0x941c>
   26030:	add	x1, x1, #0xd28
   26034:	mov	x0, x19
   26038:	bl	50e0 <Perl_re_printf@plt>
   2603c:	b	24020 <my_regexec@@Base+0xb2c>
   26040:	add	x26, sp, #0xd0
   26044:	add	x28, sp, #0xe8
   26048:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   2604c:	ldr	x20, [x20, #4064]
   26050:	mov	x2, x26
   26054:	mov	x1, x28
   26058:	mov	x0, x19
   2605c:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   26060:	and	w0, w0, #0xff
   26064:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   26068:	ldr	x0, [sp, #208]
   2606c:	cmp	x0, x22
   26070:	b.cs	24020 <my_regexec@@Base+0xb2c>  // b.hs, b.nlast
   26074:	ldrb	w1, [x0]
   26078:	ldrb	w1, [x20, w1, sxtw]
   2607c:	add	x0, x0, x1
   26080:	str	x0, [sp, #208]
   26084:	b	26050 <my_regexec@@Base+0x2b5c>
   26088:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   2608c:	add	x3, x3, #0x330
   26090:	add	x3, x3, #0xd58
   26094:	mov	w2, #0xf0d                 	// #3853
   26098:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2609c:	add	x1, x1, #0xcb0
   260a0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   260a4:	add	x0, x0, #0xa68
   260a8:	bl	58e0 <__assert_fail@plt>
   260ac:	ldr	w0, [x19, #48]
   260b0:	ldr	w1, [sp, #160]
   260b4:	cmp	w0, w1
   260b8:	b.gt	26100 <my_regexec@@Base+0x2c0c>
   260bc:	ldr	x1, [x21, #48]
   260c0:	cbz	x1, 260cc <my_regexec@@Base+0x2bd8>
   260c4:	mov	x0, x19
   260c8:	bl	55a0 <Perl_hv_iterinit@plt>
   260cc:	mov	w0, #0x1                   	// #1
   260d0:	ldr	x1, [sp, #120]
   260d4:	tbnz	w1, #4, 23dac <my_regexec@@Base+0x8b8>
   260d8:	ldrb	w6, [sp, #108]
   260dc:	ldr	w5, [sp, #120]
   260e0:	ldr	x4, [sp, #112]
   260e4:	ldr	x3, [sp, #248]
   260e8:	mov	x2, x23
   260ec:	mov	x1, x24
   260f0:	mov	x0, x19
   260f4:	bl	8ea4 <Perl__inverse_folds@plt+0x34a4>
   260f8:	mov	w0, #0x1                   	// #1
   260fc:	b	23dac <my_regexec@@Base+0x8b8>
   26100:	ldr	w1, [sp, #160]
   26104:	mov	x0, x19
   26108:	bl	5660 <Perl_leave_scope@plt>
   2610c:	b	260bc <my_regexec@@Base+0x2bc8>
   26110:	adrp	x3, 6c000 <boot_re@@Base+0xa41c>
   26114:	add	x3, x3, #0x330
   26118:	add	x3, x3, #0xd58
   2611c:	mov	w2, #0xf36                 	// #3894
   26120:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   26124:	add	x1, x1, #0xcb0
   26128:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   2612c:	add	x0, x0, #0xdd0
   26130:	bl	58e0 <__assert_fail@plt>
   26134:	mov	w0, #0x0                   	// #0
   26138:	b	23dac <my_regexec@@Base+0x8b8>
   2613c:	ldr	w0, [x19, #2368]
   26140:	tbnz	w0, #20, 24c04 <my_regexec@@Base+0x1710>
   26144:	ldr	x0, [sp, #216]
   26148:	tst	x0, #0xff00
   2614c:	b.ne	24c04 <my_regexec@@Base+0x1710>  // b.any
   26150:	b	24020 <my_regexec@@Base+0xb2c>
   26154:	ldr	w0, [x19, #2368]
   26158:	tbnz	w0, #20, 25688 <my_regexec@@Base+0x2194>
   2615c:	ldr	x0, [sp, #216]
   26160:	tst	x0, #0xff00
   26164:	b.ne	25688 <my_regexec@@Base+0x2194>  // b.any
   26168:	b	24020 <my_regexec@@Base+0xb2c>
   2616c:	mov	x26, x20
   26170:	b	26178 <my_regexec@@Base+0x2c84>
   26174:	mov	x26, x22
   26178:	ldr	x1, [x21, #88]
   2617c:	sub	x0, x22, x26
   26180:	ldr	x1, [x1, #48]
   26184:	add	x0, x0, x1
   26188:	cmp	x28, #0x0
   2618c:	ccmp	x0, x28, #0x0, ne  // ne = any
   26190:	sub	x28, x28, #0x1
   26194:	csel	x0, x28, x0, lt  // lt = tstop
   26198:	sub	x22, x22, x0
   2619c:	ldr	w0, [sp, #108]
   261a0:	cbnz	w0, 26040 <my_regexec@@Base+0x2b4c>
   261a4:	add	x20, sp, #0xd0
   261a8:	add	x26, sp, #0xe8
   261ac:	mov	x2, x20
   261b0:	mov	x1, x26
   261b4:	mov	x0, x19
   261b8:	bl	e808 <Perl_re_exec_indentf@@Base+0x2638>
   261bc:	and	w0, w0, #0xff
   261c0:	cbnz	w0, 2426c <my_regexec@@Base+0xd78>
   261c4:	ldr	x0, [sp, #208]
   261c8:	add	x1, x0, #0x1
   261cc:	str	x1, [sp, #208]
   261d0:	cmp	x0, x22
   261d4:	b.cc	261ac <my_regexec@@Base+0x2cb8>  // b.lo, b.ul, b.last
   261d8:	b	24020 <my_regexec@@Base+0xb2c>
   261dc:	ldr	w0, [sp, #108]
   261e0:	cbnz	w0, 24f80 <my_regexec@@Base+0x1a8c>
   261e4:	ldr	x0, [x1, #64]
   261e8:	cbz	x0, 24fbc <my_regexec@@Base+0x1ac8>
   261ec:	ldr	x0, [x21, #88]
   261f0:	ldr	x0, [x0, #64]
   261f4:	str	x0, [sp, #152]
   261f8:	b	24f94 <my_regexec@@Base+0x1aa0>
   261fc:	ldr	x0, [x21, #104]
   26200:	str	x0, [sp, #128]
   26204:	str	xzr, [sp, #216]
   26208:	str	wzr, [sp, #108]
   2620c:	b	235b0 <my_regexec@@Base+0xbc>
   26210:	bl	5300 <__stack_chk_fail@plt>
   26214:	and	w1, w0, #0xff
   26218:	cmp	w1, #0xa
   2621c:	b.eq	2627c <my_regexec@@Base+0x2d88>  // b.none
   26220:	b.hi	26250 <my_regexec@@Base+0x2d5c>  // b.pmore
   26224:	cmp	w1, #0x8
   26228:	b.eq	26288 <my_regexec@@Base+0x2d94>  // b.none
   2622c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26230:	add	x0, x0, #0xfa8
   26234:	cmp	w1, #0x9
   26238:	b.eq	2624c <my_regexec@@Base+0x2d58>  // b.none
   2623c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26240:	add	x0, x0, #0xf98
   26244:	cmp	w1, #0x7
   26248:	csel	x0, x0, xzr, eq  // eq = none
   2624c:	ret
   26250:	cmp	w1, #0xd
   26254:	b.eq	26294 <my_regexec@@Base+0x2da0>  // b.none
   26258:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2625c:	add	x0, x0, #0xf90
   26260:	cmp	w1, #0x1b
   26264:	b.eq	2624c <my_regexec@@Base+0x2d58>  // b.none
   26268:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2626c:	add	x0, x0, #0xfb0
   26270:	cmp	w1, #0xc
   26274:	csel	x0, x0, xzr, eq  // eq = none
   26278:	b	2624c <my_regexec@@Base+0x2d58>
   2627c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26280:	add	x0, x0, #0xf80
   26284:	b	2624c <my_regexec@@Base+0x2d58>
   26288:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2628c:	add	x0, x0, #0xfa0
   26290:	b	2624c <my_regexec@@Base+0x2d58>
   26294:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26298:	add	x0, x0, #0xf88
   2629c:	b	2624c <my_regexec@@Base+0x2d58>
   262a0:	and	w1, w0, #0xff
   262a4:	cmp	w1, #0x29
   262a8:	b.eq	26324 <my_regexec@@Base+0x2e30>  // b.none
   262ac:	b.hi	262c8 <my_regexec@@Base+0x2dd4>  // b.pmore
   262b0:	cmp	w1, #0x21
   262b4:	b.eq	2632c <my_regexec@@Base+0x2e38>  // b.none
   262b8:	mov	w0, #0x4                   	// #4
   262bc:	cmp	w1, #0x26
   262c0:	b.ne	262fc <my_regexec@@Base+0x2e08>  // b.any
   262c4:	ret
   262c8:	cmp	w1, #0x5d
   262cc:	b.eq	26334 <my_regexec@@Base+0x2e40>  // b.none
   262d0:	b.ls	262ec <my_regexec@@Base+0x2df8>  // b.plast
   262d4:	cmp	w1, #0x5e
   262d8:	b.eq	26344 <my_regexec@@Base+0x2e50>  // b.none
   262dc:	mov	w0, #0x3                   	// #3
   262e0:	cmp	w1, #0x7c
   262e4:	b.eq	262c4 <my_regexec@@Base+0x2dd0>  // b.none
   262e8:	b	262fc <my_regexec@@Base+0x2e08>
   262ec:	sub	w1, w1, #0x2b
   262f0:	and	w1, w1, #0xfffffffd
   262f4:	tst	w1, #0xff
   262f8:	b.eq	2633c <my_regexec@@Base+0x2e48>  // b.none
   262fc:	stp	x29, x30, [sp, #-16]!
   26300:	mov	x29, sp
   26304:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26308:	add	x3, x3, #0xc10
   2630c:	mov	w2, #0x3d43                	// #15683
   26310:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26314:	add	x1, x1, #0xfb8
   26318:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   2631c:	add	x0, x0, #0x110
   26320:	bl	58e0 <__assert_fail@plt>
   26324:	mov	w0, #0x2                   	// #2
   26328:	ret
   2632c:	mov	w0, #0x5                   	// #5
   26330:	ret
   26334:	mov	w0, #0x1                   	// #1
   26338:	ret
   2633c:	mov	w0, #0x3                   	// #3
   26340:	ret
   26344:	mov	w0, #0x3                   	// #3
   26348:	b	262c4 <my_regexec@@Base+0x2dd0>
   2634c:	stp	x29, x30, [sp, #-16]!
   26350:	mov	x29, sp
   26354:	cbz	x0, 2639c <my_regexec@@Base+0x2ea8>
   26358:	ldr	w1, [x0, #12]
   2635c:	and	w2, w1, #0xff
   26360:	cmp	w2, #0x4
   26364:	b.ne	263c0 <my_regexec@@Base+0x2ecc>  // b.any
   26368:	and	w1, w1, #0xf
   2636c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   26370:	ldr	x2, [x2, #3888]
   26374:	ldrb	w1, [x2, w1, uxtw]
   26378:	cbz	w1, 263e4 <my_regexec@@Base+0x2ef0>
   2637c:	ldr	x1, [x0]
   26380:	ldr	x0, [x1, #16]
   26384:	cbz	x0, 26394 <my_regexec@@Base+0x2ea0>
   26388:	lsr	x0, x0, #3
   2638c:	ldrb	w1, [x1, #48]
   26390:	sub	x0, x0, x1
   26394:	ldp	x29, x30, [sp], #16
   26398:	ret
   2639c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   263a0:	add	x3, x3, #0xc10
   263a4:	add	x3, x3, #0x18
   263a8:	mov	w2, #0x2f                  	// #47
   263ac:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   263b0:	add	x1, x1, #0x550
   263b4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   263b8:	add	x0, x0, #0x568
   263bc:	bl	58e0 <__assert_fail@plt>
   263c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   263c4:	add	x3, x3, #0xc10
   263c8:	add	x3, x3, #0x18
   263cc:	mov	w2, #0x31                  	// #49
   263d0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   263d4:	add	x1, x1, #0x550
   263d8:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   263dc:	add	x0, x0, #0xfc8
   263e0:	bl	58e0 <__assert_fail@plt>
   263e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   263e8:	add	x3, x3, #0xc10
   263ec:	add	x3, x3, #0x18
   263f0:	mov	w2, #0x33                  	// #51
   263f4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   263f8:	add	x1, x1, #0x550
   263fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   26400:	add	x0, x0, #0xe40
   26404:	bl	58e0 <__assert_fail@plt>
   26408:	stp	x29, x30, [sp, #-16]!
   2640c:	mov	x29, sp
   26410:	cbz	x0, 26470 <my_regexec@@Base+0x2f7c>
   26414:	mov	x2, x0
   26418:	cbz	x1, 26494 <my_regexec@@Base+0x2fa0>
   2641c:	mov	w0, #0x0                   	// #0
   26420:	cmp	x2, x1
   26424:	b.cs	2655c <my_regexec@@Base+0x3068>  // b.hs, b.nlast
   26428:	ldrb	w3, [x2]
   2642c:	cmp	w3, #0x7b
   26430:	b.ne	2655c <my_regexec@@Base+0x3068>  // b.any
   26434:	add	x0, x2, #0x1
   26438:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   2643c:	ldr	x3, [x3, #3880]
   26440:	mov	w4, #0x4400                	// #17408
   26444:	cmp	x1, x0
   26448:	b.ls	26468 <my_regexec@@Base+0x2f74>  // b.plast
   2644c:	ldrb	w2, [x0]
   26450:	ldr	w2, [x3, x2, lsl #2]
   26454:	bics	wzr, w4, w2
   26458:	b.ne	264b8 <my_regexec@@Base+0x2fc4>  // b.any
   2645c:	add	x0, x0, #0x1
   26460:	cmp	x1, x0
   26464:	b.ne	2644c <my_regexec@@Base+0x2f58>  // b.any
   26468:	mov	w4, #0x0                   	// #0
   2646c:	b	264ec <my_regexec@@Base+0x2ff8>
   26470:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26474:	add	x3, x3, #0xc10
   26478:	add	x3, x3, #0x28
   2647c:	mov	w2, #0x3366                	// #13158
   26480:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26484:	add	x1, x1, #0xfb8
   26488:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2648c:	add	x0, x0, #0xce8
   26490:	bl	58e0 <__assert_fail@plt>
   26494:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26498:	add	x3, x3, #0xc10
   2649c:	add	x3, x3, #0x28
   264a0:	mov	w2, #0x3366                	// #13158
   264a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   264a8:	add	x1, x1, #0xfb8
   264ac:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   264b0:	add	x0, x0, #0x240
   264b4:	bl	58e0 <__assert_fail@plt>
   264b8:	mov	w4, #0x0                   	// #0
   264bc:	mov	w3, #0x1                   	// #1
   264c0:	cmp	x1, x0
   264c4:	b.ls	264ec <my_regexec@@Base+0x2ff8>  // b.plast
   264c8:	ldrb	w2, [x0]
   264cc:	sub	w2, w2, #0x30
   264d0:	cmp	w2, #0x9
   264d4:	b.hi	26500 <my_regexec@@Base+0x300c>  // b.pmore
   264d8:	add	x0, x0, #0x1
   264dc:	mov	w4, w3
   264e0:	cmp	x1, x0
   264e4:	b.ne	264c8 <my_regexec@@Base+0x2fd4>  // b.any
   264e8:	mov	w4, #0x1                   	// #1
   264ec:	ldrb	w2, [x0]
   264f0:	cmp	w2, #0x2c
   264f4:	b.eq	26564 <my_regexec@@Base+0x3070>  // b.none
   264f8:	mov	w0, #0x0                   	// #0
   264fc:	b	2655c <my_regexec@@Base+0x3068>
   26500:	cmp	x1, x0
   26504:	b.ls	264ec <my_regexec@@Base+0x2ff8>  // b.plast
   26508:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   2650c:	ldr	x3, [x3, #3880]
   26510:	mov	w5, #0x4400                	// #17408
   26514:	ldrb	w2, [x0]
   26518:	ldr	w2, [x3, x2, lsl #2]
   2651c:	bics	wzr, w5, w2
   26520:	b.ne	26534 <my_regexec@@Base+0x3040>  // b.any
   26524:	add	x0, x0, #0x1
   26528:	cmp	x1, x0
   2652c:	b.ne	26514 <my_regexec@@Base+0x3020>  // b.any
   26530:	b	264ec <my_regexec@@Base+0x2ff8>
   26534:	ldrb	w2, [x0]
   26538:	mov	w5, #0x0                   	// #0
   2653c:	cmp	w2, #0x2c
   26540:	b.eq	26564 <my_regexec@@Base+0x3070>  // b.none
   26544:	cmp	x0, x1
   26548:	b.cs	26638 <my_regexec@@Base+0x3144>  // b.hs, b.nlast
   2654c:	ldrb	w1, [x0]
   26550:	mov	w0, #0x0                   	// #0
   26554:	cmp	w1, #0x7d
   26558:	b.eq	26628 <my_regexec@@Base+0x3134>  // b.none
   2655c:	ldp	x29, x30, [sp], #16
   26560:	ret
   26564:	add	x0, x0, #0x1
   26568:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   2656c:	ldr	x3, [x3, #3880]
   26570:	mov	w5, #0x4400                	// #17408
   26574:	cmp	x1, x0
   26578:	b.ls	265a0 <my_regexec@@Base+0x30ac>  // b.plast
   2657c:	ldrb	w2, [x0]
   26580:	ldr	w2, [x3, x2, lsl #2]
   26584:	bics	wzr, w5, w2
   26588:	b.ne	265a8 <my_regexec@@Base+0x30b4>  // b.any
   2658c:	add	x0, x0, #0x1
   26590:	cmp	x1, x0
   26594:	b.ne	2657c <my_regexec@@Base+0x3088>  // b.any
   26598:	mov	w0, #0x0                   	// #0
   2659c:	b	2655c <my_regexec@@Base+0x3068>
   265a0:	mov	w0, #0x0                   	// #0
   265a4:	b	2655c <my_regexec@@Base+0x3068>
   265a8:	mov	w5, #0x0                   	// #0
   265ac:	mov	w3, #0x1                   	// #1
   265b0:	cmp	x1, x0
   265b4:	b.ls	265e0 <my_regexec@@Base+0x30ec>  // b.plast
   265b8:	ldrb	w2, [x0]
   265bc:	sub	w2, w2, #0x30
   265c0:	cmp	w2, #0x9
   265c4:	b.hi	265e8 <my_regexec@@Base+0x30f4>  // b.pmore
   265c8:	add	x0, x0, #0x1
   265cc:	mov	w5, w3
   265d0:	cmp	x1, x0
   265d4:	b.ne	265b8 <my_regexec@@Base+0x30c4>  // b.any
   265d8:	mov	w0, #0x0                   	// #0
   265dc:	b	2655c <my_regexec@@Base+0x3068>
   265e0:	mov	w0, #0x0                   	// #0
   265e4:	b	2655c <my_regexec@@Base+0x3068>
   265e8:	cmp	x1, x0
   265ec:	b.ls	26620 <my_regexec@@Base+0x312c>  // b.plast
   265f0:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   265f4:	ldr	x3, [x3, #3880]
   265f8:	mov	w6, #0x4400                	// #17408
   265fc:	ldrb	w2, [x0]
   26600:	ldr	w2, [x3, x2, lsl #2]
   26604:	bics	wzr, w6, w2
   26608:	b.ne	26544 <my_regexec@@Base+0x3050>  // b.any
   2660c:	add	x0, x0, #0x1
   26610:	cmp	x1, x0
   26614:	b.ne	265fc <my_regexec@@Base+0x3108>  // b.any
   26618:	mov	w0, #0x0                   	// #0
   2661c:	b	2655c <my_regexec@@Base+0x3068>
   26620:	mov	w0, #0x0                   	// #0
   26624:	b	2655c <my_regexec@@Base+0x3068>
   26628:	cmp	w5, #0x0
   2662c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   26630:	cset	w0, ne  // ne = any
   26634:	b	2655c <my_regexec@@Base+0x3068>
   26638:	mov	w0, #0x0                   	// #0
   2663c:	b	2655c <my_regexec@@Base+0x3068>
   26640:	stp	x29, x30, [sp, #-48]!
   26644:	mov	x29, sp
   26648:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2664c:	ldr	x2, [x2, #3920]
   26650:	ldr	x3, [x2]
   26654:	str	x3, [sp, #40]
   26658:	mov	x3, #0x0                   	// #0
   2665c:	str	x1, [sp, #24]
   26660:	add	x2, sp, #0x18
   26664:	add	x1, sp, #0x20
   26668:	bl	4f20 <Perl_grok_atoUV@plt>
   2666c:	and	w1, w0, #0xff
   26670:	mov	w0, #0x7fffffff            	// #2147483647
   26674:	cbz	w1, 26688 <my_regexec@@Base+0x3194>
   26678:	ldr	x0, [sp, #32]
   2667c:	mov	x1, #0x7fffffff            	// #2147483647
   26680:	cmp	x0, x1
   26684:	csel	w0, w0, w1, ls  // ls = plast
   26688:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2668c:	ldr	x1, [x1, #3920]
   26690:	ldr	x2, [sp, #40]
   26694:	ldr	x1, [x1]
   26698:	eor	x1, x2, x1
   2669c:	cbnz	x1, 266a8 <my_regexec@@Base+0x31b4>
   266a0:	ldp	x29, x30, [sp], #48
   266a4:	ret
   266a8:	bl	5300 <__stack_chk_fail@plt>
   266ac:	stp	x29, x30, [sp, #-48]!
   266b0:	mov	x29, sp
   266b4:	stp	x19, x20, [sp, #16]
   266b8:	mov	x20, x0
   266bc:	mov	x19, x1
   266c0:	ands	w3, w3, #0xff
   266c4:	b.ne	2670c <my_regexec@@Base+0x3218>  // b.any
   266c8:	ldr	w3, [x1]
   266cc:	ubfx	x3, x3, #3, #1
   266d0:	cbz	x2, 26738 <my_regexec@@Base+0x3244>
   266d4:	ldr	w0, [x19, #192]
   266d8:	cbz	w0, 266f4 <my_regexec@@Base+0x3200>
   266dc:	ldr	x0, [x2]
   266e0:	ldrb	w0, [x0]
   266e4:	sub	w0, w0, #0x80
   266e8:	and	w0, w0, #0xff
   266ec:	cmp	w0, #0x41
   266f0:	b.ls	26760 <my_regexec@@Base+0x326c>  // b.plast
   266f4:	adrp	x9, 91000 <boot_re@@Base+0x2f41c>
   266f8:	ldr	x9, [x9, #4064]
   266fc:	mov	x1, #0x1                   	// #1
   26700:	mov	x11, #0x3                   	// #3
   26704:	mov	x10, #0x2                   	// #2
   26708:	b	268b4 <my_regexec@@Base+0x33c0>
   2670c:	cbnz	x1, 266d0 <my_regexec@@Base+0x31dc>
   26710:	str	x21, [sp, #32]
   26714:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26718:	add	x3, x3, #0xc10
   2671c:	add	x3, x3, #0x38
   26720:	mov	w2, #0x4c04                	// #19460
   26724:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26728:	add	x1, x1, #0xfb8
   2672c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26730:	add	x0, x0, #0xfe8
   26734:	bl	58e0 <__assert_fail@plt>
   26738:	str	x21, [sp, #32]
   2673c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26740:	add	x3, x3, #0xc10
   26744:	add	x3, x3, #0x38
   26748:	mov	w2, #0x4c04                	// #19460
   2674c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26750:	add	x1, x1, #0xfb8
   26754:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   26758:	add	x0, x0, #0x418
   2675c:	bl	58e0 <__assert_fail@plt>
   26760:	str	x21, [sp, #32]
   26764:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26768:	add	x3, x3, #0xc10
   2676c:	add	x3, x3, #0x38
   26770:	mov	w2, #0x4c06                	// #19462
   26774:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26778:	add	x1, x1, #0xfb8
   2677c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26780:	add	x0, x0, #0xff8
   26784:	bl	58e0 <__assert_fail@plt>
   26788:	mov	x8, x0
   2678c:	ldr	x0, [x19, #56]
   26790:	cmp	x0, x8
   26794:	b.eq	267b8 <my_regexec@@Base+0x32c4>  // b.none
   26798:	add	x0, x8, #0x1
   2679c:	str	x0, [x2]
   267a0:	ldrb	w4, [x8, #1]
   267a4:	cmp	w4, #0x29
   267a8:	b.ne	26788 <my_regexec@@Base+0x3294>  // b.any
   267ac:	add	x8, x8, #0x2
   267b0:	str	x8, [x2]
   267b4:	b	268b4 <my_regexec@@Base+0x33c0>
   267b8:	str	x21, [sp, #32]
   267bc:	ldr	x21, [x19, #16]
   267c0:	ldr	x0, [x19, #8]
   267c4:	sub	x21, x21, x0
   267c8:	ldr	x1, [x19, #24]
   267cc:	cbz	x1, 267dc <my_regexec@@Base+0x32e8>
   267d0:	mov	w2, #0xb                   	// #11
   267d4:	mov	x0, x20
   267d8:	bl	54b0 <Perl_save_pushptr@plt>
   267dc:	ldr	x1, [x19, #160]
   267e0:	cbz	x1, 267f0 <my_regexec@@Base+0x32fc>
   267e4:	mov	w2, #0xa                   	// #10
   267e8:	mov	x0, x20
   267ec:	bl	54b0 <Perl_save_pushptr@plt>
   267f0:	ldr	x1, [x19, #168]
   267f4:	cbz	x1, 26804 <my_regexec@@Base+0x3310>
   267f8:	mov	w2, #0xa                   	// #10
   267fc:	mov	x0, x20
   26800:	bl	54b0 <Perl_save_pushptr@plt>
   26804:	cmp	x21, #0x7f
   26808:	b.le	26844 <my_regexec@@Base+0x3350>
   2680c:	mov	x21, #0x75                  	// #117
   26810:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   26814:	add	x6, x6, #0xfe0
   26818:	ldr	w0, [x19, #192]
   2681c:	cmp	w0, #0x0
   26820:	ldr	x5, [x19, #8]
   26824:	mov	x4, x21
   26828:	cset	w3, ne  // ne = any
   2682c:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   26830:	add	x2, x2, #0x30
   26834:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   26838:	add	x1, x1, #0x50
   2683c:	mov	x0, x20
   26840:	bl	5420 <Perl_croak@plt>
   26844:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   26848:	add	x6, x6, #0x20
   2684c:	b	26818 <my_regexec@@Base+0x3324>
   26850:	sub	x0, x6, x4
   26854:	ldrb	w7, [x9, w5, sxtw]
   26858:	cmp	x0, x7
   2685c:	b.lt	26944 <my_regexec@@Base+0x3450>  // b.tstop
   26860:	cmp	w5, #0xc2
   26864:	b.eq	268a0 <my_regexec@@Base+0x33ac>  // b.none
   26868:	cmp	w5, #0xe2
   2686c:	b.ne	26944 <my_regexec@@Base+0x3450>  // b.any
   26870:	ldrb	w0, [x4, #1]
   26874:	cmp	w0, #0x80
   26878:	b.ne	268ac <my_regexec@@Base+0x33b8>  // b.any
   2687c:	ldrb	w0, [x4, #2]
   26880:	sub	w5, w0, #0x8e
   26884:	cmp	w5, #0x1
   26888:	b.ls	26974 <my_regexec@@Base+0x3480>  // b.plast
   2688c:	sub	w0, w0, #0xa8
   26890:	cmp	w0, #0x1
   26894:	b.hi	268ac <my_regexec@@Base+0x33b8>  // b.pmore
   26898:	mov	x0, x11
   2689c:	b	26904 <my_regexec@@Base+0x3410>
   268a0:	ldrb	w0, [x4, #1]
   268a4:	cmp	w0, #0x85
   268a8:	b.eq	2696c <my_regexec@@Base+0x3478>  // b.none
   268ac:	cmp	x8, x4
   268b0:	b.eq	26998 <my_regexec@@Base+0x34a4>  // b.none
   268b4:	ldr	x6, [x19, #56]
   268b8:	ldr	x8, [x2]
   268bc:	sub	x0, x6, x8
   268c0:	cmp	x0, #0x2
   268c4:	b.le	268ec <my_regexec@@Base+0x33f8>
   268c8:	ldrb	w0, [x8]
   268cc:	cmp	w0, #0x28
   268d0:	b.ne	268ec <my_regexec@@Base+0x33f8>  // b.any
   268d4:	ldrb	w0, [x8, #1]
   268d8:	cmp	w0, #0x3f
   268dc:	b.ne	268ec <my_regexec@@Base+0x33f8>  // b.any
   268e0:	ldrb	w0, [x8, #2]
   268e4:	cmp	w0, #0x23
   268e8:	b.eq	2678c <my_regexec@@Base+0x3298>  // b.none
   268ec:	cbz	w3, 26998 <my_regexec@@Base+0x34a4>
   268f0:	cmp	x6, x8
   268f4:	b.ls	26998 <my_regexec@@Base+0x34a4>  // b.plast
   268f8:	mov	x4, x8
   268fc:	b	2691c <my_regexec@@Base+0x3428>
   26900:	mov	x0, x1
   26904:	add	x4, x4, x0
   26908:	str	x4, [x2]
   2690c:	ldr	x4, [x2]
   26910:	ldr	x6, [x19, #56]
   26914:	cmp	x4, x6
   26918:	b.cs	268ac <my_regexec@@Base+0x33b8>  // b.hs, b.nlast
   2691c:	ldrb	w5, [x4]
   26920:	sub	w7, w5, #0x9
   26924:	cmp	w5, #0x20
   26928:	mov	x0, x1
   2692c:	ccmp	w7, #0x4, #0x0, ne  // ne = any
   26930:	b.ls	26904 <my_regexec@@Base+0x3410>  // b.plast
   26934:	ldr	w0, [x19, #192]
   26938:	cbnz	w0, 26850 <my_regexec@@Base+0x335c>
   2693c:	cmp	w5, #0x85
   26940:	b.eq	26900 <my_regexec@@Base+0x340c>  // b.none
   26944:	cmp	w5, #0x23
   26948:	b.ne	268ac <my_regexec@@Base+0x33b8>  // b.any
   2694c:	cmp	x4, x6
   26950:	b.cs	26984 <my_regexec@@Base+0x3490>  // b.hs, b.nlast
   26954:	add	x5, x4, #0x1
   26958:	ldrb	w7, [x4, #1]
   2695c:	cmp	w7, #0xa
   26960:	b.eq	2697c <my_regexec@@Base+0x3488>  // b.none
   26964:	mov	x4, x5
   26968:	b	2694c <my_regexec@@Base+0x3458>
   2696c:	mov	x0, x10
   26970:	b	26904 <my_regexec@@Base+0x3410>
   26974:	mov	x0, x11
   26978:	b	26904 <my_regexec@@Base+0x3410>
   2697c:	add	x4, x4, #0x2
   26980:	b	26990 <my_regexec@@Base+0x349c>
   26984:	ldr	w0, [x19, #120]
   26988:	orr	w0, w0, #0x200
   2698c:	str	w0, [x19, #120]
   26990:	str	x4, [x2]
   26994:	b	2690c <my_regexec@@Base+0x3418>
   26998:	ldp	x19, x20, [sp, #16]
   2699c:	ldp	x29, x30, [sp], #48
   269a0:	ret
   269a4:	stp	x29, x30, [sp, #-16]!
   269a8:	mov	x29, sp
   269ac:	cbz	x1, 26a08 <my_regexec@@Base+0x3514>
   269b0:	ldr	x2, [x1, #64]
   269b4:	ldr	x3, [x1, #56]
   269b8:	cmp	x2, x3
   269bc:	b.cs	26a68 <my_regexec@@Base+0x3574>  // b.hs, b.nlast
   269c0:	ldr	w4, [x1, #192]
   269c4:	cbz	w4, 26a50 <my_regexec@@Base+0x355c>
   269c8:	ldrb	w4, [x2]
   269cc:	sub	w4, w4, #0x80
   269d0:	and	w4, w4, #0xff
   269d4:	cmp	w4, #0x41
   269d8:	b.ls	26a2c <my_regexec@@Base+0x3538>  // b.plast
   269dc:	sub	x3, x3, x2
   269e0:	mov	x4, #0x0                   	// #0
   269e4:	cmp	x3, #0x0
   269e8:	b.le	26a54 <my_regexec@@Base+0x3560>
   269ec:	ldrb	w5, [x2]
   269f0:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   269f4:	ldr	x4, [x4, #4064]
   269f8:	ldrb	w4, [x4, w5, sxtw]
   269fc:	cmp	x4, x3
   26a00:	csel	x4, x4, x3, le
   26a04:	b	26a54 <my_regexec@@Base+0x3560>
   26a08:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26a0c:	add	x3, x3, #0xc10
   26a10:	add	x3, x3, #0x58
   26a14:	mov	w2, #0x4c3d                	// #19517
   26a18:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26a1c:	add	x1, x1, #0xfb8
   26a20:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   26a24:	add	x0, x0, #0xfe8
   26a28:	bl	58e0 <__assert_fail@plt>
   26a2c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26a30:	add	x3, x3, #0xc10
   26a34:	add	x3, x3, #0x58
   26a38:	mov	w2, #0x4c40                	// #19520
   26a3c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26a40:	add	x1, x1, #0xfb8
   26a44:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26a48:	add	x0, x0, #0x70
   26a4c:	bl	58e0 <__assert_fail@plt>
   26a50:	mov	x4, #0x1                   	// #1
   26a54:	add	x3, x2, x4
   26a58:	mov	x2, x1
   26a5c:	str	x3, [x2, #64]!
   26a60:	mov	w3, #0x0                   	// #0
   26a64:	bl	266ac <my_regexec@@Base+0x31b8>
   26a68:	ldp	x29, x30, [sp], #16
   26a6c:	ret
   26a70:	stp	x29, x30, [sp, #-32]!
   26a74:	mov	x29, sp
   26a78:	str	x19, [sp, #16]
   26a7c:	mov	x19, x1
   26a80:	mov	x0, x19
   26a84:	ldr	x19, [x19, #40]
   26a88:	bl	5650 <Perl_safesysfree@plt>
   26a8c:	cbnz	x19, 26a80 <my_regexec@@Base+0x358c>
   26a90:	ldr	x19, [sp, #16]
   26a94:	ldp	x29, x30, [sp], #32
   26a98:	ret
   26a9c:	stp	x29, x30, [sp, #-48]!
   26aa0:	mov	x29, sp
   26aa4:	stp	x19, x20, [sp, #16]
   26aa8:	str	x21, [sp, #32]
   26aac:	mov	x21, x0
   26ab0:	mov	w20, w1
   26ab4:	mov	x0, #0x10                  	// #16
   26ab8:	bl	5250 <Perl_safesysmalloc@plt>
   26abc:	mov	x19, x0
   26ac0:	str	w20, [x0, #4]
   26ac4:	mov	w0, #0x1                   	// #1
   26ac8:	str	w0, [x19]
   26acc:	mov	x2, x19
   26ad0:	adrp	x1, 29000 <my_regexec@@Base+0x5b0c>
   26ad4:	add	x1, x1, #0x9e8
   26ad8:	mov	x0, x21
   26adc:	bl	5890 <Perl_save_destructor_x@plt>
   26ae0:	cbnz	w20, 26afc <my_regexec@@Base+0x3608>
   26ae4:	str	xzr, [x19, #8]
   26ae8:	mov	x0, x19
   26aec:	ldp	x19, x20, [sp, #16]
   26af0:	ldr	x21, [sp, #32]
   26af4:	ldp	x29, x30, [sp], #48
   26af8:	ret
   26afc:	sbfiz	x0, x20, #5, #32
   26b00:	bl	5250 <Perl_safesysmalloc@plt>
   26b04:	str	x0, [x19, #8]
   26b08:	b	26ae8 <my_regexec@@Base+0x35f4>
   26b0c:	stp	x29, x30, [sp, #-32]!
   26b10:	mov	x29, sp
   26b14:	stp	x19, x20, [sp, #16]
   26b18:	cbz	x1, 26b84 <my_regexec@@Base+0x3690>
   26b1c:	mov	x20, x0
   26b20:	mov	x19, x1
   26b24:	ldrb	w1, [x1, #1]
   26b28:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   26b2c:	ldr	x0, [x0, #3768]
   26b30:	ldrb	w0, [x0, w1, sxtw]
   26b34:	cmp	w0, #0x12
   26b38:	b.ne	26ba8 <my_regexec@@Base+0x36b4>  // b.any
   26b3c:	ldrh	w0, [x19, #2]
   26b40:	cmp	w0, #0x1
   26b44:	b.ne	26ba8 <my_regexec@@Base+0x36b4>  // b.any
   26b48:	mov	x3, #0xffffffffffffffff    	// #-1
   26b4c:	mov	x2, #0x0                   	// #0
   26b50:	mov	x1, #0x0                   	// #0
   26b54:	mov	x0, x20
   26b58:	bl	5450 <Perl__add_range_to_invlist@plt>
   26b5c:	mov	x1, x0
   26b60:	mov	x0, x20
   26b64:	bl	55d0 <Perl_sv_2mortal@plt>
   26b68:	str	x0, [x19, #48]
   26b6c:	ldrb	w0, [x19]
   26b70:	orr	w0, w0, #0x1
   26b74:	strb	w0, [x19]
   26b78:	ldp	x19, x20, [sp, #16]
   26b7c:	ldp	x29, x30, [sp], #32
   26b80:	ret
   26b84:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26b88:	add	x3, x3, #0xc10
   26b8c:	add	x3, x3, #0x68
   26b90:	mov	w2, #0x5a0                 	// #1440
   26b94:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26b98:	add	x1, x1, #0xfb8
   26b9c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26ba0:	add	x0, x0, #0xb8
   26ba4:	bl	58e0 <__assert_fail@plt>
   26ba8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26bac:	add	x3, x3, #0xc10
   26bb0:	add	x3, x3, #0x68
   26bb4:	mov	w2, #0x5a2                 	// #1442
   26bb8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26bbc:	add	x1, x1, #0xfb8
   26bc0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26bc4:	add	x0, x0, #0xc0
   26bc8:	bl	58e0 <__assert_fail@plt>
   26bcc:	stp	x29, x30, [sp, #-16]!
   26bd0:	mov	x29, sp
   26bd4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   26bd8:	ldr	x1, [x1, #3936]
   26bdc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   26be0:	add	x0, x0, #0xb50
   26be4:	bl	5530 <Perl_croak_nocontext@plt>
   26be8:	stp	x29, x30, [sp, #-64]!
   26bec:	mov	x29, sp
   26bf0:	stp	x19, x20, [sp, #16]
   26bf4:	stp	x21, x22, [sp, #32]
   26bf8:	stp	x23, x24, [sp, #48]
   26bfc:	mov	x19, x0
   26c00:	mov	x21, x1
   26c04:	mov	w20, w2
   26c08:	ldr	x23, [x0, #40]
   26c0c:	ldr	x0, [x23, #24]
   26c10:	cbz	x0, 26cb4 <my_regexec@@Base+0x37c0>
   26c14:	ldr	w22, [x0]
   26c18:	cbz	x1, 26c90 <my_regexec@@Base+0x379c>
   26c1c:	add	w24, w22, w2
   26c20:	sub	w1, w24, #0x1
   26c24:	add	x1, x1, #0x3
   26c28:	lsl	x1, x1, #3
   26c2c:	bl	5670 <Perl_safesysrealloc@plt>
   26c30:	str	x0, [x23, #24]
   26c34:	cbz	w22, 26cd0 <my_regexec@@Base+0x37dc>
   26c38:	ldr	x0, [x19, #40]
   26c3c:	ldr	x23, [x0, #24]
   26c40:	mov	w1, w24
   26c44:	ldr	x0, [x23, #8]
   26c48:	bl	5670 <Perl_safesysrealloc@plt>
   26c4c:	str	x0, [x23, #8]
   26c50:	ldr	x0, [x19, #40]
   26c54:	ldr	x0, [x0, #24]
   26c58:	str	w24, [x0]
   26c5c:	ldr	x0, [x19, #40]
   26c60:	ldr	x0, [x0, #24]
   26c64:	ldr	x0, [x0, #8]
   26c68:	add	x0, x0, w22, uxtw
   26c6c:	mov	w2, w20
   26c70:	mov	x1, x21
   26c74:	bl	4e60 <memcpy@plt>
   26c78:	mov	w0, w22
   26c7c:	ldp	x19, x20, [sp, #16]
   26c80:	ldp	x21, x22, [sp, #32]
   26c84:	ldp	x23, x24, [sp, #48]
   26c88:	ldp	x29, x30, [sp], #64
   26c8c:	ret
   26c90:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26c94:	add	x3, x3, #0xc10
   26c98:	add	x3, x3, #0x78
   26c9c:	mov	w2, #0x1915                	// #6421
   26ca0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26ca4:	add	x1, x1, #0xfb8
   26ca8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   26cac:	add	x0, x0, #0xce8
   26cb0:	bl	58e0 <__assert_fail@plt>
   26cb4:	cbz	x1, 26c90 <my_regexec@@Base+0x379c>
   26cb8:	sub	w1, w20, #0x1
   26cbc:	add	x1, x1, #0x3
   26cc0:	lsl	x1, x1, #3
   26cc4:	bl	5670 <Perl_safesysrealloc@plt>
   26cc8:	str	x0, [x23, #24]
   26ccc:	mov	w22, #0x0                   	// #0
   26cd0:	ldr	x0, [x19, #40]
   26cd4:	ldr	x23, [x0, #24]
   26cd8:	mov	w0, w20
   26cdc:	bl	5250 <Perl_safesysmalloc@plt>
   26ce0:	str	x0, [x23, #8]
   26ce4:	ldr	x0, [x19, #40]
   26ce8:	ldr	x0, [x0, #24]
   26cec:	str	w20, [x0]
   26cf0:	ldr	x0, [x19, #40]
   26cf4:	ldr	x0, [x0, #24]
   26cf8:	ldr	x0, [x0, #8]
   26cfc:	cbnz	x0, 26c6c <my_regexec@@Base+0x3778>
   26d00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26d04:	add	x3, x3, #0xc10
   26d08:	add	x3, x3, #0x78
   26d0c:	mov	w2, #0x191f                	// #6431
   26d10:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26d14:	add	x1, x1, #0xfb8
   26d18:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26d1c:	add	x0, x0, #0xd8
   26d20:	bl	58e0 <__assert_fail@plt>
   26d24:	stp	x29, x30, [sp, #-80]!
   26d28:	mov	x29, sp
   26d2c:	stp	x19, x20, [sp, #16]
   26d30:	stp	x21, x22, [sp, #32]
   26d34:	stp	x23, x24, [sp, #48]
   26d38:	stp	x25, x26, [sp, #64]
   26d3c:	mov	x22, x1
   26d40:	mov	x21, x2
   26d44:	ldr	x1, [x1, #32]
   26d48:	ldr	w2, [x1, #56]
   26d4c:	ubfx	x25, x2, #7, #3
   26d50:	ldr	w1, [x22, #192]
   26d54:	orr	w25, w25, w1
   26d58:	and	w1, w2, #0x3f
   26d5c:	cmp	w1, #0x3f
   26d60:	ccmp	w25, #0x0, #0x4, eq  // eq = none
   26d64:	ldr	w3, [x22, #120]
   26d68:	mov	w20, w1
   26d6c:	ldr	x23, [x22, #16]
   26d70:	ldr	x1, [x22, #8]
   26d74:	sub	x23, x23, x1
   26d78:	and	w26, w2, #0x40
   26d7c:	ubfx	x1, x2, #6, #1
   26d80:	and	w24, w3, #0x200
   26d84:	ubfx	x3, x3, #9, #1
   26d88:	add	x1, x1, x3
   26d8c:	add	x2, x23, #0x5
   26d90:	add	x1, x1, x2
   26d94:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   26d98:	ldr	x2, [x2, #3760]
   26d9c:	ldrb	w2, [x2, w20, sxtw]
   26da0:	cinc	x2, x2, eq  // eq = none
   26da4:	add	x1, x1, x2
   26da8:	cbz	x21, 26e94 <my_regexec@@Base+0x39a0>
   26dac:	cset	w19, eq  // eq = none
   26db0:	cmp	w25, #0x0
   26db4:	cset	x2, ne  // ne = any
   26db8:	lsl	x2, x2, #1
   26dbc:	add	x2, x1, x2
   26dc0:	mov	x1, x21
   26dc4:	bl	53c0 <Perl_sv_grow@plt>
   26dc8:	ldr	w1, [x21, #12]
   26dcc:	tbz	w1, #11, 26e04 <my_regexec@@Base+0x3910>
   26dd0:	and	w3, w1, #0xf
   26dd4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   26dd8:	ldr	x2, [x2, #3840]
   26ddc:	ldrb	w2, [x2, w3, uxtw]
   26de0:	cbz	w2, 26eb8 <my_regexec@@Base+0x39c4>
   26de4:	and	w2, w1, #0xc000
   26de8:	cmp	w2, #0x8, lsl #12
   26dec:	b.eq	26edc <my_regexec@@Base+0x39e8>  // b.none
   26df0:	and	w2, w1, #0xff
   26df4:	cmp	w2, #0xf
   26df8:	b.eq	26f10 <my_regexec@@Base+0x3a1c>  // b.none
   26dfc:	ldr	x2, [x21, #16]
   26e00:	cbnz	x2, 26f40 <my_regexec@@Base+0x3a4c>
   26e04:	and	w2, w1, #0xc000
   26e08:	cmp	w2, #0x8, lsl #12
   26e0c:	b.eq	26f64 <my_regexec@@Base+0x3a70>  // b.none
   26e10:	mov	w2, #0x4400                	// #17408
   26e14:	orr	w2, w1, w2
   26e18:	str	w2, [x21, #12]
   26e1c:	ldr	w3, [x22, #192]
   26e20:	mov	w4, #0x4400                	// #17408
   26e24:	movk	w4, #0x2000, lsl #16
   26e28:	orr	w1, w1, w4
   26e2c:	cmp	w3, #0x0
   26e30:	csel	w1, w1, w2, ne  // ne = any
   26e34:	str	w1, [x21, #12]
   26e38:	mov	w1, #0x28                  	// #40
   26e3c:	strb	w1, [x0]
   26e40:	mov	w1, #0x3f                  	// #63
   26e44:	strb	w1, [x0, #1]
   26e48:	cbnz	w19, 26f98 <my_regexec@@Base+0x3aa4>
   26e4c:	add	x19, x0, #0x2
   26e50:	ldr	x0, [x22, #32]
   26e54:	ldr	w0, [x0, #56]
   26e58:	ubfx	x0, x0, #7, #3
   26e5c:	cmp	w0, #0x2
   26e60:	b.eq	2738c <my_regexec@@Base+0x3e98>  // b.none
   26e64:	b.hi	26fcc <my_regexec@@Base+0x3ad8>  // b.pmore
   26e68:	cbz	w0, 27010 <my_regexec@@Base+0x3b1c>
   26e6c:	cmp	w0, #0x1
   26e70:	b.ne	26fec <my_regexec@@Base+0x3af8>  // b.any
   26e74:	mov	x25, #0x1                   	// #1
   26e78:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   26e7c:	add	x1, x1, #0x118
   26e80:	mov	x2, x25
   26e84:	mov	x0, x19
   26e88:	bl	4e60 <memcpy@plt>
   26e8c:	add	x19, x19, x25
   26e90:	b	26fa8 <my_regexec@@Base+0x3ab4>
   26e94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26e98:	add	x3, x3, #0xc10
   26e9c:	add	x3, x3, #0x88
   26ea0:	mov	w2, #0x1c36                	// #7222
   26ea4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26ea8:	add	x1, x1, #0xfb8
   26eac:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26eb0:	add	x0, x0, #0x128
   26eb4:	bl	58e0 <__assert_fail@plt>
   26eb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26ebc:	add	x3, x3, #0xc10
   26ec0:	add	x3, x3, #0x88
   26ec4:	mov	w2, #0x1c3c                	// #7228
   26ec8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26ecc:	add	x1, x1, #0xfb8
   26ed0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   26ed4:	add	x0, x0, #0x160
   26ed8:	bl	58e0 <__assert_fail@plt>
   26edc:	and	w2, w1, #0xff
   26ee0:	sub	w2, w2, #0x9
   26ee4:	cmp	w2, #0x1
   26ee8:	b.hi	26df0 <my_regexec@@Base+0x38fc>  // b.pmore
   26eec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26ef0:	add	x3, x3, #0xc10
   26ef4:	add	x3, x3, #0x88
   26ef8:	mov	w2, #0x1c3c                	// #7228
   26efc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26f00:	add	x1, x1, #0xfb8
   26f04:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   26f08:	add	x0, x0, #0x190
   26f0c:	bl	58e0 <__assert_fail@plt>
   26f10:	ldr	x2, [x21]
   26f14:	ldrb	w2, [x2, #129]
   26f18:	tbnz	w2, #6, 26dfc <my_regexec@@Base+0x3908>
   26f1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26f20:	add	x3, x3, #0xc10
   26f24:	add	x3, x3, #0x88
   26f28:	mov	w2, #0x1c3c                	// #7228
   26f2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26f30:	add	x1, x1, #0xfb8
   26f34:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   26f38:	add	x0, x0, #0x1a8
   26f3c:	bl	58e0 <__assert_fail@plt>
   26f40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26f44:	add	x3, x3, #0xc10
   26f48:	add	x3, x3, #0x88
   26f4c:	mov	w2, #0x1c3c                	// #7228
   26f50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26f54:	add	x1, x1, #0xfb8
   26f58:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26f5c:	add	x0, x0, #0x130
   26f60:	bl	58e0 <__assert_fail@plt>
   26f64:	and	w2, w1, #0xff
   26f68:	sub	w2, w2, #0x9
   26f6c:	cmp	w2, #0x1
   26f70:	b.hi	26e10 <my_regexec@@Base+0x391c>  // b.pmore
   26f74:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26f78:	add	x3, x3, #0xc10
   26f7c:	add	x3, x3, #0x88
   26f80:	mov	w2, #0x1c3c                	// #7228
   26f84:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   26f88:	add	x1, x1, #0xfb8
   26f8c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   26f90:	add	x0, x0, #0x660
   26f94:	bl	58e0 <__assert_fail@plt>
   26f98:	add	x19, x0, #0x3
   26f9c:	mov	w1, #0x5e                  	// #94
   26fa0:	strb	w1, [x0, #2]
   26fa4:	cbnz	w25, 26e50 <my_regexec@@Base+0x395c>
   26fa8:	cbz	w26, 26fbc <my_regexec@@Base+0x3ac8>
   26fac:	mov	x0, x19
   26fb0:	mov	w1, #0x70                  	// #112
   26fb4:	strb	w1, [x0], #1
   26fb8:	mov	x19, x0
   26fbc:	mov	w3, #0x6d                  	// #109
   26fc0:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   26fc4:	add	x4, x4, #0x111
   26fc8:	b	27058 <my_regexec@@Base+0x3b64>
   26fcc:	cmp	w0, #0x3
   26fd0:	b.eq	2739c <my_regexec@@Base+0x3ea8>  // b.none
   26fd4:	cmp	w0, #0x4
   26fd8:	b.ne	26fec <my_regexec@@Base+0x3af8>  // b.any
   26fdc:	mov	x25, #0x2                   	// #2
   26fe0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   26fe4:	add	x1, x1, #0x120
   26fe8:	b	26e80 <my_regexec@@Base+0x398c>
   26fec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   26ff0:	add	x3, x3, #0xc10
   26ff4:	add	x3, x3, #0x98
   26ff8:	mov	w2, #0x793                 	// #1939
   26ffc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   27000:	add	x1, x1, #0xc80
   27004:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   27008:	add	x0, x0, #0x110
   2700c:	bl	58e0 <__assert_fail@plt>
   27010:	ldr	w0, [x22, #192]
   27014:	cbz	w0, 27028 <my_regexec@@Base+0x3b34>
   27018:	mov	x25, #0x1                   	// #1
   2701c:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   27020:	add	x1, x1, #0x948
   27024:	b	26e80 <my_regexec@@Base+0x398c>
   27028:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2702c:	add	x3, x3, #0xc10
   27030:	add	x3, x3, #0x88
   27034:	mov	w2, #0x1c4b                	// #7243
   27038:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2703c:	add	x1, x1, #0xfb8
   27040:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27044:	add	x0, x0, #0x708
   27048:	bl	58e0 <__assert_fail@plt>
   2704c:	lsr	w20, w20, #1
   27050:	ldrb	w3, [x4], #1
   27054:	cbz	w3, 2706c <my_regexec@@Base+0x3b78>
   27058:	tbz	w20, #0, 2704c <my_regexec@@Base+0x3b58>
   2705c:	mov	x0, x19
   27060:	strb	w3, [x0], #1
   27064:	mov	x19, x0
   27068:	b	2704c <my_regexec@@Base+0x3b58>
   2706c:	mov	w0, #0x3a                  	// #58
   27070:	strb	w0, [x19], #1
   27074:	ldr	x1, [x22, #8]
   27078:	cbz	x1, 27168 <my_regexec@@Base+0x3c74>
   2707c:	mov	x2, x23
   27080:	mov	x0, x19
   27084:	bl	4e60 <memcpy@plt>
   27088:	ldr	w0, [x21, #12]
   2708c:	and	w2, w0, #0xf
   27090:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27094:	ldr	x1, [x1, #3888]
   27098:	ldrb	w1, [x1, w2, uxtw]
   2709c:	cbz	w1, 2718c <my_regexec@@Base+0x3c98>
   270a0:	and	w2, w0, #0xc000
   270a4:	cmp	w2, #0x8, lsl #12
   270a8:	b.eq	271b0 <my_regexec@@Base+0x3cbc>  // b.none
   270ac:	and	w0, w0, #0xff
   270b0:	cmp	w0, #0xf
   270b4:	b.eq	271e4 <my_regexec@@Base+0x3cf0>  // b.none
   270b8:	ldr	x1, [x21, #16]
   270bc:	sub	x3, x1, x19
   270c0:	cmp	x3, #0xf
   270c4:	b.gt	27214 <my_regexec@@Base+0x3d20>
   270c8:	cmp	w2, #0x8, lsl #12
   270cc:	b.eq	27238 <my_regexec@@Base+0x3d44>  // b.none
   270d0:	cmp	w0, #0xf
   270d4:	b.eq	27268 <my_regexec@@Base+0x3d74>  // b.none
   270d8:	ldr	x0, [x22, #32]
   270dc:	sub	x1, x19, x1
   270e0:	ldrb	w2, [x0, #184]
   270e4:	bfxil	w2, w1, #0, #4
   270e8:	strb	w2, [x0, #184]
   270ec:	add	x0, x19, x23
   270f0:	cbz	w24, 27100 <my_regexec@@Base+0x3c0c>
   270f4:	mov	w1, #0xa                   	// #10
   270f8:	strb	w1, [x19, x23]
   270fc:	add	x0, x0, #0x1
   27100:	mov	x1, x0
   27104:	mov	w2, #0x29                  	// #41
   27108:	strb	w2, [x1], #1
   2710c:	strb	wzr, [x0, #1]
   27110:	ldr	w0, [x21, #12]
   27114:	and	w3, w0, #0xf
   27118:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2711c:	ldr	x2, [x2, #3888]
   27120:	ldrb	w2, [x2, w3, uxtw]
   27124:	cbz	w2, 27298 <my_regexec@@Base+0x3da4>
   27128:	and	w2, w0, #0xc000
   2712c:	cmp	w2, #0x8, lsl #12
   27130:	b.eq	272bc <my_regexec@@Base+0x3dc8>  // b.none
   27134:	and	w0, w0, #0xff
   27138:	cmp	w0, #0xf
   2713c:	b.eq	2732c <my_regexec@@Base+0x3e38>  // b.none
   27140:	ldr	x0, [x21]
   27144:	ldr	x2, [x21, #16]
   27148:	sub	x1, x1, x2
   2714c:	str	x1, [x0, #16]
   27150:	ldp	x19, x20, [sp, #16]
   27154:	ldp	x21, x22, [sp, #32]
   27158:	ldp	x23, x24, [sp, #48]
   2715c:	ldp	x25, x26, [sp, #64]
   27160:	ldp	x29, x30, [sp], #80
   27164:	ret
   27168:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2716c:	add	x3, x3, #0xc10
   27170:	add	x3, x3, #0x88
   27174:	mov	w2, #0x1c5e                	// #7262
   27178:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2717c:	add	x1, x1, #0xfb8
   27180:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27184:	add	x0, x0, #0x718
   27188:	bl	58e0 <__assert_fail@plt>
   2718c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27190:	add	x3, x3, #0xc10
   27194:	add	x3, x3, #0x88
   27198:	mov	w2, #0x1c5f                	// #7263
   2719c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   271a0:	add	x1, x1, #0xfb8
   271a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   271a8:	add	x0, x0, #0xd10
   271ac:	bl	58e0 <__assert_fail@plt>
   271b0:	and	w1, w0, #0xff
   271b4:	sub	w1, w1, #0x9
   271b8:	cmp	w1, #0x1
   271bc:	b.hi	270ac <my_regexec@@Base+0x3bb8>  // b.pmore
   271c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   271c4:	add	x3, x3, #0xc10
   271c8:	add	x3, x3, #0x88
   271cc:	mov	w2, #0x1c5f                	// #7263
   271d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   271d4:	add	x1, x1, #0xfb8
   271d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   271dc:	add	x0, x0, #0xd40
   271e0:	bl	58e0 <__assert_fail@plt>
   271e4:	ldr	x1, [x21]
   271e8:	ldrb	w1, [x1, #129]
   271ec:	tbnz	w1, #6, 270b8 <my_regexec@@Base+0x3bc4>
   271f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   271f4:	add	x3, x3, #0xc10
   271f8:	add	x3, x3, #0x88
   271fc:	mov	w2, #0x1c5f                	// #7263
   27200:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27204:	add	x1, x1, #0xfb8
   27208:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2720c:	add	x0, x0, #0xd58
   27210:	bl	58e0 <__assert_fail@plt>
   27214:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27218:	add	x3, x3, #0xc10
   2721c:	add	x3, x3, #0x88
   27220:	mov	w2, #0x1c5f                	// #7263
   27224:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27228:	add	x1, x1, #0xfb8
   2722c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27230:	add	x0, x0, #0x740
   27234:	bl	58e0 <__assert_fail@plt>
   27238:	sub	w2, w0, #0x9
   2723c:	cmp	w2, #0x1
   27240:	b.hi	270d0 <my_regexec@@Base+0x3bdc>  // b.pmore
   27244:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27248:	add	x3, x3, #0xc10
   2724c:	add	x3, x3, #0x88
   27250:	mov	w2, #0x1c60                	// #7264
   27254:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27258:	add	x1, x1, #0xfb8
   2725c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27260:	add	x0, x0, #0xd40
   27264:	bl	58e0 <__assert_fail@plt>
   27268:	ldr	x0, [x21]
   2726c:	ldrb	w0, [x0, #129]
   27270:	tbnz	w0, #6, 270d8 <my_regexec@@Base+0x3be4>
   27274:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27278:	add	x3, x3, #0xc10
   2727c:	add	x3, x3, #0x88
   27280:	mov	w2, #0x1c60                	// #7264
   27284:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27288:	add	x1, x1, #0xfb8
   2728c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27290:	add	x0, x0, #0xd58
   27294:	bl	58e0 <__assert_fail@plt>
   27298:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2729c:	add	x3, x3, #0xc10
   272a0:	add	x3, x3, #0x88
   272a4:	mov	w2, #0x1c6a                	// #7274
   272a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   272ac:	add	x1, x1, #0xfb8
   272b0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   272b4:	add	x0, x0, #0x760
   272b8:	bl	58e0 <__assert_fail@plt>
   272bc:	and	w2, w0, #0xff
   272c0:	sub	w2, w2, #0x9
   272c4:	cmp	w2, #0x1
   272c8:	b.ls	27308 <my_regexec@@Base+0x3e14>  // b.plast
   272cc:	and	w0, w0, #0xff
   272d0:	cmp	w0, #0xf
   272d4:	b.eq	2732c <my_regexec@@Base+0x3e38>  // b.none
   272d8:	sub	w0, w0, #0x9
   272dc:	cmp	w0, #0x1
   272e0:	b.hi	27140 <my_regexec@@Base+0x3c4c>  // b.pmore
   272e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   272e8:	add	x3, x3, #0xc10
   272ec:	add	x3, x3, #0x88
   272f0:	mov	w2, #0x1c6a                	// #7274
   272f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   272f8:	add	x1, x1, #0xfb8
   272fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27300:	add	x0, x0, #0xd40
   27304:	bl	58e0 <__assert_fail@plt>
   27308:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2730c:	add	x3, x3, #0xc10
   27310:	add	x3, x3, #0x88
   27314:	mov	w2, #0x1c6a                	// #7274
   27318:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2731c:	add	x1, x1, #0xfb8
   27320:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27324:	add	x0, x0, #0x790
   27328:	bl	58e0 <__assert_fail@plt>
   2732c:	ldr	x0, [x21]
   27330:	ldrb	w0, [x0, #129]
   27334:	tbz	w0, #6, 27368 <my_regexec@@Base+0x3e74>
   27338:	ldr	x0, [x21]
   2733c:	ldrb	w0, [x0, #129]
   27340:	tbnz	w0, #6, 27140 <my_regexec@@Base+0x3c4c>
   27344:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27348:	add	x3, x3, #0xc10
   2734c:	add	x3, x3, #0x88
   27350:	mov	w2, #0x1c6a                	// #7274
   27354:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27358:	add	x1, x1, #0xfb8
   2735c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27360:	add	x0, x0, #0xd58
   27364:	bl	58e0 <__assert_fail@plt>
   27368:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2736c:	add	x3, x3, #0xc10
   27370:	add	x3, x3, #0x88
   27374:	mov	w2, #0x1c6a                	// #7274
   27378:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2737c:	add	x1, x1, #0xfb8
   27380:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27384:	add	x0, x0, #0x7a8
   27388:	bl	58e0 <__assert_fail@plt>
   2738c:	mov	x25, #0x1                   	// #1
   27390:	adrp	x1, 64000 <boot_re@@Base+0x241c>
   27394:	add	x1, x1, #0x948
   27398:	b	26e80 <my_regexec@@Base+0x398c>
   2739c:	mov	x25, #0x1                   	// #1
   273a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   273a4:	add	x1, x1, #0xc90
   273a8:	b	26e80 <my_regexec@@Base+0x398c>
   273ac:	sub	sp, sp, #0x310
   273b0:	stp	x29, x30, [sp]
   273b4:	mov	x29, sp
   273b8:	stp	x19, x20, [sp, #16]
   273bc:	stp	x21, x22, [sp, #32]
   273c0:	stp	x23, x24, [sp, #48]
   273c4:	mov	x23, x0
   273c8:	and	w24, w1, #0xff
   273cc:	mov	x22, x2
   273d0:	mov	x21, x3
   273d4:	str	x4, [sp, #752]
   273d8:	str	x5, [sp, #760]
   273dc:	str	x6, [sp, #768]
   273e0:	str	x7, [sp, #776]
   273e4:	add	x0, sp, #0x200
   273e8:	str	q0, [x0, #112]
   273ec:	str	q1, [x0, #128]
   273f0:	str	q2, [x0, #144]
   273f4:	str	q3, [x0, #160]
   273f8:	str	q4, [x0, #176]
   273fc:	str	q5, [x0, #192]
   27400:	str	q6, [x0, #208]
   27404:	str	q7, [x0, #224]
   27408:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2740c:	ldr	x0, [x0, #3920]
   27410:	ldr	x1, [x0]
   27414:	str	x1, [sp, #616]
   27418:	mov	x1, #0x0                   	// #0
   2741c:	mov	x0, x2
   27420:	bl	4ed0 <strlen@plt>
   27424:	mov	x20, x0
   27428:	str	x0, [sp, #64]
   2742c:	mov	x0, x21
   27430:	bl	4ed0 <strlen@plt>
   27434:	mov	x19, x0
   27438:	cmp	x20, #0x1fe
   2743c:	b.ls	27448 <my_regexec@@Base+0x3f54>  // b.plast
   27440:	mov	x0, #0x1fe                 	// #510
   27444:	str	x0, [sp, #64]
   27448:	ldr	x20, [sp, #64]
   2744c:	add	x1, x20, x19
   27450:	mov	x0, #0x1fe                 	// #510
   27454:	sub	x0, x0, x20
   27458:	cmp	x1, #0x1fe
   2745c:	csel	x19, x0, x19, hi  // hi = pmore
   27460:	add	x0, sp, #0x68
   27464:	mov	x3, #0x200                 	// #512
   27468:	mov	x2, x20
   2746c:	mov	x1, x22
   27470:	mov	x22, x0
   27474:	bl	50b0 <__memcpy_chk@plt>
   27478:	mov	x2, x19
   2747c:	mov	x1, x21
   27480:	add	x0, x22, x20
   27484:	bl	4e60 <memcpy@plt>
   27488:	add	x19, x20, x19
   2748c:	mov	w0, #0xa                   	// #10
   27490:	strb	w0, [x22, x19]
   27494:	add	x0, sp, #0x69
   27498:	strb	wzr, [x0, x19]
   2749c:	add	x0, sp, #0x310
   274a0:	str	x0, [sp, #72]
   274a4:	str	x0, [sp, #80]
   274a8:	add	x0, sp, #0x2f0
   274ac:	str	x0, [sp, #88]
   274b0:	mov	w0, #0xffffffe0            	// #-32
   274b4:	str	w0, [sp, #96]
   274b8:	mov	w0, #0xffffff80            	// #-128
   274bc:	str	w0, [sp, #100]
   274c0:	add	x2, sp, #0x48
   274c4:	mov	x1, x22
   274c8:	mov	x0, x23
   274cc:	bl	50d0 <Perl_vmess@plt>
   274d0:	mov	x1, x0
   274d4:	ldr	w2, [x0, #12]
   274d8:	and	w0, w2, #0x3ffc00
   274dc:	and	w0, w0, #0xffe007ff
   274e0:	cmp	w0, #0x400
   274e4:	b.ne	275b0 <my_regexec@@Base+0x40bc>  // b.any
   274e8:	and	x0, x2, #0xf
   274ec:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   274f0:	ldr	x3, [x3, #3888]
   274f4:	ldrb	w0, [x3, x0]
   274f8:	cbz	w0, 27528 <my_regexec@@Base+0x4034>
   274fc:	and	w0, w2, #0xc000
   27500:	cmp	w0, #0x8, lsl #12
   27504:	b.eq	2754c <my_regexec@@Base+0x4058>  // b.none
   27508:	and	w2, w2, #0xff
   2750c:	cmp	w2, #0xf
   27510:	b.eq	27580 <my_regexec@@Base+0x408c>  // b.none
   27514:	ldr	x0, [x1]
   27518:	ldr	x0, [x0, #16]
   2751c:	str	x0, [sp, #64]
   27520:	ldr	x1, [x1, #16]
   27524:	b	275c4 <my_regexec@@Base+0x40d0>
   27528:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2752c:	add	x3, x3, #0xc10
   27530:	add	x3, x3, #0xb0
   27534:	mov	w2, #0x52ce                	// #21198
   27538:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2753c:	add	x1, x1, #0xfb8
   27540:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27544:	add	x0, x0, #0xe40
   27548:	bl	58e0 <__assert_fail@plt>
   2754c:	and	w0, w2, #0xff
   27550:	sub	w0, w0, #0x9
   27554:	cmp	w0, #0x1
   27558:	b.hi	27508 <my_regexec@@Base+0x4014>  // b.pmore
   2755c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27560:	add	x3, x3, #0xc10
   27564:	add	x3, x3, #0xb0
   27568:	mov	w2, #0x52ce                	// #21198
   2756c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27570:	add	x1, x1, #0xfb8
   27574:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   27578:	add	x0, x0, #0xe70
   2757c:	bl	58e0 <__assert_fail@plt>
   27580:	ldr	x0, [x1]
   27584:	ldrb	w0, [x0, #129]
   27588:	tbnz	w0, #6, 27514 <my_regexec@@Base+0x4020>
   2758c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27590:	add	x3, x3, #0xc10
   27594:	add	x3, x3, #0xb0
   27598:	mov	w2, #0x52ce                	// #21198
   2759c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   275a0:	add	x1, x1, #0xfb8
   275a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   275a8:	add	x0, x0, #0xe88
   275ac:	bl	58e0 <__assert_fail@plt>
   275b0:	mov	w3, #0x22                  	// #34
   275b4:	add	x2, sp, #0x40
   275b8:	mov	x0, x23
   275bc:	bl	5200 <Perl_sv_2pv_flags@plt>
   275c0:	mov	x1, x0
   275c4:	ldr	x0, [sp, #64]
   275c8:	cmp	x0, #0x200
   275cc:	b.ls	275d8 <my_regexec@@Base+0x40e4>  // b.plast
   275d0:	mov	x0, #0x200                 	// #512
   275d4:	str	x0, [sp, #64]
   275d8:	cbz	x1, 27610 <my_regexec@@Base+0x411c>
   275dc:	ldr	x20, [sp, #64]
   275e0:	add	x19, sp, #0x68
   275e4:	mov	x3, #0x200                 	// #512
   275e8:	mov	x2, x20
   275ec:	mov	x0, x19
   275f0:	bl	50b0 <__memcpy_chk@plt>
   275f4:	mov	x4, x19
   275f8:	sub	x3, x20, #0x1
   275fc:	mov	w2, w24
   27600:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   27604:	add	x1, x1, #0x800
   27608:	mov	x0, x23
   2760c:	bl	5420 <Perl_croak@plt>
   27610:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27614:	add	x3, x3, #0xc10
   27618:	add	x3, x3, #0xb0
   2761c:	mov	w2, #0x52d1                	// #21201
   27620:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27624:	add	x1, x1, #0xfb8
   27628:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2762c:	add	x0, x0, #0x7e8
   27630:	bl	58e0 <__assert_fail@plt>
   27634:	sub	sp, sp, #0x60
   27638:	stp	x29, x30, [sp, #16]
   2763c:	add	x29, sp, #0x10
   27640:	stp	x21, x22, [sp, #48]
   27644:	mov	w22, w2
   27648:	ldr	x21, [x1, #64]
   2764c:	ldr	x2, [x1, #56]
   27650:	cmp	x2, x21
   27654:	b.cc	276ec <my_regexec@@Base+0x41f8>  // b.lo, b.ul, b.last
   27658:	stp	x19, x20, [sp, #32]
   2765c:	mov	x20, x0
   27660:	mov	x19, x1
   27664:	b.eq	2786c <my_regexec@@Base+0x4378>  // b.none
   27668:	ldr	x0, [x0, #224]
   2766c:	ldr	w0, [x0, #56]
   27670:	tbnz	w0, #3, 2767c <my_regexec@@Base+0x4188>
   27674:	ldr	w0, [x1, #192]
   27678:	cbnz	w0, 2771c <my_regexec@@Base+0x4228>
   2767c:	ldrb	w1, [x21]
   27680:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   27684:	ldr	x0, [x0, #3880]
   27688:	ldr	w0, [x0, x1, lsl #2]
   2768c:	and	w0, w0, #0x1c000
   27690:	and	w0, w0, #0xffff7fff
   27694:	cmp	w0, #0x14, lsl #12
   27698:	cset	w0, eq  // eq = none
   2769c:	cbz	w0, 27adc <my_regexec@@Base+0x45e8>
   276a0:	ldr	w0, [x19, #192]
   276a4:	cbnz	w0, 2780c <my_regexec@@Base+0x4318>
   276a8:	ldr	x3, [x19, #56]
   276ac:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   276b0:	ldr	x2, [x2, #3880]
   276b4:	mov	w4, #0x4001                	// #16385
   276b8:	ldr	x0, [x19, #64]
   276bc:	add	x1, x0, #0x1
   276c0:	str	x1, [x19, #64]
   276c4:	cmp	x1, x3
   276c8:	b.cs	276dc <my_regexec@@Base+0x41e8>  // b.hs, b.nlast
   276cc:	ldrb	w0, [x0, #1]
   276d0:	ldr	w0, [x2, x0, lsl #2]
   276d4:	bics	wzr, w4, w0
   276d8:	b.eq	276b8 <my_regexec@@Base+0x41c4>  // b.none
   276dc:	sub	x1, x1, x21
   276e0:	sxtw	x2, w1
   276e4:	mov	w3, #0x80000               	// #524288
   276e8:	b	2788c <my_regexec@@Base+0x4398>
   276ec:	stp	x19, x20, [sp, #32]
   276f0:	stp	x23, x24, [sp, #64]
   276f4:	str	x25, [sp, #80]
   276f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   276fc:	add	x3, x3, #0xc10
   27700:	add	x3, x3, #0xc0
   27704:	mov	w2, #0x2269                	// #8809
   27708:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2770c:	add	x1, x1, #0xfb8
   27710:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27714:	add	x0, x0, #0x810
   27718:	bl	58e0 <__assert_fail@plt>
   2771c:	cmp	x2, x21
   27720:	b.ls	27760 <my_regexec@@Base+0x426c>  // b.plast
   27724:	ldrb	w0, [x21]
   27728:	tbnz	w0, #7, 2778c <my_regexec@@Base+0x4298>
   2772c:	stp	x23, x24, [sp, #64]
   27730:	str	x25, [sp, #80]
   27734:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27738:	ldr	x1, [x1, #3880]
   2773c:	ldr	w0, [x1, w0, sxtw #2]
   27740:	ubfx	x0, x0, #16, #1
   27744:	cbz	w0, 27ad4 <my_regexec@@Base+0x45e0>
   27748:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   2774c:	ldr	x23, [x23, #4064]
   27750:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   27754:	ldr	x25, [x24, #3880]
   27758:	mov	x24, x25
   2775c:	b	279b4 <my_regexec@@Base+0x44c0>
   27760:	stp	x23, x24, [sp, #64]
   27764:	str	x25, [sp, #80]
   27768:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2776c:	add	x3, x3, #0xc10
   27770:	add	x3, x3, #0xc0
   27774:	mov	w2, #0x226b                	// #8811
   27778:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2777c:	add	x1, x1, #0xfb8
   27780:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27784:	add	x0, x0, #0x828
   27788:	bl	58e0 <__assert_fail@plt>
   2778c:	and	w1, w0, #0xfe
   27790:	cmp	w1, #0xc2
   27794:	b.ne	277f8 <my_regexec@@Base+0x4304>  // b.any
   27798:	stp	x23, x24, [sp, #64]
   2779c:	str	x25, [sp, #80]
   277a0:	sub	x1, x2, x21
   277a4:	cmp	x1, #0x1
   277a8:	b.le	277d8 <my_regexec@@Base+0x42e4>
   277ac:	ldrb	w1, [x21, #1]
   277b0:	and	w3, w1, #0xc0
   277b4:	cmp	w3, #0x80
   277b8:	b.ne	277d8 <my_regexec@@Base+0x42e4>  // b.any
   277bc:	bfi	w1, w0, #6, #26
   277c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   277c4:	ldr	x0, [x0, #3880]
   277c8:	add	x0, x0, w1, uxtb #2
   277cc:	ldrh	w0, [x0, #2]
   277d0:	and	w0, w0, #0x1
   277d4:	b	27744 <my_regexec@@Base+0x4250>
   277d8:	mov	w4, #0x1                   	// #1
   277dc:	mov	w3, #0x0                   	// #0
   277e0:	mov	x1, x21
   277e4:	mov	x0, x20
   277e8:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   277ec:	ldp	x23, x24, [sp, #64]
   277f0:	ldr	x25, [sp, #80]
   277f4:	b	27adc <my_regexec@@Base+0x45e8>
   277f8:	mov	x1, x21
   277fc:	mov	x0, x20
   27800:	bl	4ff0 <Perl__is_utf8_perl_idstart_with_len@plt>
   27804:	and	w0, w0, #0xff
   27808:	b	2769c <my_regexec@@Base+0x41a8>
   2780c:	stp	x23, x24, [sp, #64]
   27810:	str	x25, [sp, #80]
   27814:	b	27748 <my_regexec@@Base+0x4254>
   27818:	and	w3, w0, #0xfe
   2781c:	cmp	w3, #0xc2
   27820:	b.ne	27998 <my_regexec@@Base+0x44a4>  // b.any
   27824:	sub	x3, x2, x1
   27828:	cmp	x3, #0x1
   2782c:	b.le	27854 <my_regexec@@Base+0x4360>
   27830:	ldrb	w3, [x1, #1]
   27834:	and	w4, w3, #0xc0
   27838:	cmp	w4, #0x80
   2783c:	b.ne	27854 <my_regexec@@Base+0x4360>  // b.any
   27840:	bfi	w3, w0, #6, #26
   27844:	and	x3, x3, #0xff
   27848:	ldr	w0, [x25, x3, lsl #2]
   2784c:	and	w0, w0, #0x1
   27850:	b	279b0 <my_regexec@@Base+0x44bc>
   27854:	mov	w4, #0x1                   	// #1
   27858:	mov	w3, #0x0                   	// #0
   2785c:	mov	x0, x20
   27860:	bl	4f50 <Perl__force_out_malformed_utf8_message@plt>
   27864:	ldp	x23, x24, [sp, #64]
   27868:	ldr	x25, [sp, #80]
   2786c:	ldr	x1, [x19, #64]
   27870:	sub	x1, x1, x21
   27874:	sxtw	x2, w1
   27878:	ldr	w0, [x19, #192]
   2787c:	cmp	w0, #0x0
   27880:	mov	w3, #0x20080000            	// #537395200
   27884:	mov	w0, #0x80000               	// #524288
   27888:	csel	w3, w3, w0, ne  // ne = any
   2788c:	mov	x1, x21
   27890:	mov	x0, x20
   27894:	bl	5390 <Perl_newSVpvn_flags@plt>
   27898:	cmp	w22, #0x1
   2789c:	b.eq	27aa4 <my_regexec@@Base+0x45b0>  // b.none
   278a0:	cmp	w22, #0x2
   278a4:	b.ne	27ab8 <my_regexec@@Base+0x45c4>  // b.any
   278a8:	cbz	x0, 27a40 <my_regexec@@Base+0x454c>
   278ac:	ldr	x1, [x19, #208]
   278b0:	cbz	x1, 278e4 <my_regexec@@Base+0x43f0>
   278b4:	str	wzr, [sp]
   278b8:	mov	x7, #0x0                   	// #0
   278bc:	mov	w6, #0x0                   	// #0
   278c0:	mov	w5, #0x0                   	// #0
   278c4:	mov	x4, #0x0                   	// #0
   278c8:	mov	x3, #0x0                   	// #0
   278cc:	mov	x2, x0
   278d0:	mov	x0, x20
   278d4:	bl	5600 <Perl_hv_common@plt>
   278d8:	cbz	x0, 278e4 <my_regexec@@Base+0x43f0>
   278dc:	ldr	x0, [x0, #16]
   278e0:	cbnz	x0, 27aa4 <my_regexec@@Base+0x45b0>
   278e4:	ldr	w0, [x19, #148]
   278e8:	cmp	w0, #0x0
   278ec:	b.le	27a98 <my_regexec@@Base+0x45a4>
   278f0:	ldr	x1, [x19, #24]
   278f4:	cbz	x1, 27904 <my_regexec@@Base+0x4410>
   278f8:	mov	w2, #0xb                   	// #11
   278fc:	mov	x0, x20
   27900:	bl	54b0 <Perl_save_pushptr@plt>
   27904:	ldr	x1, [x19, #160]
   27908:	cbz	x1, 27918 <my_regexec@@Base+0x4424>
   2790c:	mov	w2, #0xa                   	// #10
   27910:	mov	x0, x20
   27914:	bl	54b0 <Perl_save_pushptr@plt>
   27918:	ldr	x1, [x19, #168]
   2791c:	cbz	x1, 2792c <my_regexec@@Base+0x4438>
   27920:	mov	w2, #0xa                   	// #10
   27924:	mov	x0, x20
   27928:	bl	54b0 <Perl_save_pushptr@plt>
   2792c:	ldr	x0, [x19, #64]
   27930:	ldr	x1, [x19, #72]
   27934:	sub	x1, x0, x1
   27938:	ldr	x0, [x19, #80]
   2793c:	add	x0, x0, x1
   27940:	ldr	x1, [x19, #16]
   27944:	cmp	x0, x1
   27948:	b.hi	27a58 <my_regexec@@Base+0x4564>  // b.pmore
   2794c:	ldr	x5, [x19, #8]
   27950:	sub	x7, x1, x0
   27954:	subs	x4, x0, x5
   27958:	b.mi	27a68 <my_regexec@@Base+0x4574>  // b.first
   2795c:	stp	x23, x24, [sp, #64]
   27960:	str	x25, [sp, #80]
   27964:	ldr	w2, [x19, #192]
   27968:	cmp	w2, #0x0
   2796c:	cset	w3, ne  // ne = any
   27970:	cmp	x0, x1
   27974:	csel	x0, x0, x1, ls  // ls = plast
   27978:	str	x0, [sp]
   2797c:	mov	w6, w3
   27980:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   27984:	add	x2, x2, #0x920
   27988:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   2798c:	add	x1, x1, #0x3a8
   27990:	mov	x0, x20
   27994:	bl	5420 <Perl_croak@plt>
   27998:	mov	x3, x2
   2799c:	mov	x2, x1
   279a0:	mov	w1, #0x0                   	// #0
   279a4:	mov	x0, x20
   279a8:	bl	59c0 <Perl__is_utf8_FOO_with_len@plt>
   279ac:	and	w0, w0, #0xff
   279b0:	cbz	w0, 279e8 <my_regexec@@Base+0x44f4>
   279b4:	ldr	x3, [x19, #64]
   279b8:	ldrb	w0, [x3]
   279bc:	ldrb	w0, [x23, w0, sxtw]
   279c0:	add	x1, x3, x0
   279c4:	str	x1, [x19, #64]
   279c8:	ldr	x2, [x19, #56]
   279cc:	cmp	x1, x2
   279d0:	b.cs	27a34 <my_regexec@@Base+0x4540>  // b.hs, b.nlast
   279d4:	ldrb	w0, [x3, x0]
   279d8:	tbnz	w0, #7, 27818 <my_regexec@@Base+0x4324>
   279dc:	ldr	w0, [x24, w0, sxtw #2]
   279e0:	and	w0, w0, #0x1
   279e4:	b	279b0 <my_regexec@@Base+0x44bc>
   279e8:	ldp	x23, x24, [sp, #64]
   279ec:	ldr	x25, [sp, #80]
   279f0:	b	2786c <my_regexec@@Base+0x4378>
   279f4:	ldr	x5, [x19, #8]
   279f8:	sub	x4, x1, x5
   279fc:	mov	x7, #0x0                   	// #0
   27a00:	b	27b54 <my_regexec@@Base+0x4660>
   27a04:	stp	x23, x24, [sp, #64]
   27a08:	str	x25, [sp, #80]
   27a0c:	ldr	x6, [x19, #48]
   27a10:	ldr	x5, [x19, #56]
   27a14:	sub	w5, w5, w6
   27a18:	mov	w3, #0x227a                	// #8826
   27a1c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   27a20:	add	x2, x2, #0xfb8
   27a24:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   27a28:	add	x1, x1, #0x870
   27a2c:	mov	x0, x20
   27a30:	bl	5420 <Perl_croak@plt>
   27a34:	ldp	x23, x24, [sp, #64]
   27a38:	ldr	x25, [sp, #80]
   27a3c:	b	2786c <my_regexec@@Base+0x4378>
   27a40:	stp	x23, x24, [sp, #64]
   27a44:	str	x25, [sp, #80]
   27a48:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   27a4c:	add	x1, x1, #0x8f8
   27a50:	mov	x0, x20
   27a54:	bl	5420 <Perl_croak@plt>
   27a58:	ldr	x5, [x19, #8]
   27a5c:	sub	x4, x1, x5
   27a60:	mov	x7, #0x0                   	// #0
   27a64:	b	2795c <my_regexec@@Base+0x4468>
   27a68:	stp	x23, x24, [sp, #64]
   27a6c:	str	x25, [sp, #80]
   27a70:	ldr	x6, [x19, #48]
   27a74:	ldr	x5, [x19, #56]
   27a78:	sub	w5, w5, w6
   27a7c:	mov	w3, #0x228f                	// #8847
   27a80:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   27a84:	add	x2, x2, #0xfb8
   27a88:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   27a8c:	add	x1, x1, #0x870
   27a90:	mov	x0, x20
   27a94:	bl	5420 <Perl_croak@plt>
   27a98:	mov	w0, #0xffffffff            	// #-1
   27a9c:	str	w0, [x19, #148]
   27aa0:	mov	x0, #0x0                   	// #0
   27aa4:	ldp	x19, x20, [sp, #32]
   27aa8:	ldp	x21, x22, [sp, #48]
   27aac:	ldp	x29, x30, [sp, #16]
   27ab0:	add	sp, sp, #0x60
   27ab4:	ret
   27ab8:	stp	x23, x24, [sp, #64]
   27abc:	str	x25, [sp, #80]
   27ac0:	mov	w2, w22
   27ac4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   27ac8:	add	x1, x1, #0x948
   27acc:	mov	x0, x20
   27ad0:	bl	5420 <Perl_croak@plt>
   27ad4:	ldp	x23, x24, [sp, #64]
   27ad8:	ldr	x25, [sp, #80]
   27adc:	ldr	x0, [x19, #64]
   27ae0:	add	x0, x0, #0x1
   27ae4:	str	x0, [x19, #64]
   27ae8:	ldr	x1, [x19, #24]
   27aec:	cbz	x1, 27afc <my_regexec@@Base+0x4608>
   27af0:	mov	w2, #0xb                   	// #11
   27af4:	mov	x0, x20
   27af8:	bl	54b0 <Perl_save_pushptr@plt>
   27afc:	ldr	x1, [x19, #160]
   27b00:	cbz	x1, 27b10 <my_regexec@@Base+0x461c>
   27b04:	mov	w2, #0xa                   	// #10
   27b08:	mov	x0, x20
   27b0c:	bl	54b0 <Perl_save_pushptr@plt>
   27b10:	ldr	x1, [x19, #168]
   27b14:	cbz	x1, 27b24 <my_regexec@@Base+0x4630>
   27b18:	mov	w2, #0xa                   	// #10
   27b1c:	mov	x0, x20
   27b20:	bl	54b0 <Perl_save_pushptr@plt>
   27b24:	ldr	x0, [x19, #64]
   27b28:	ldr	x1, [x19, #72]
   27b2c:	sub	x1, x0, x1
   27b30:	ldr	x0, [x19, #80]
   27b34:	add	x0, x0, x1
   27b38:	ldr	x1, [x19, #16]
   27b3c:	cmp	x0, x1
   27b40:	b.hi	279f4 <my_regexec@@Base+0x4500>  // b.pmore
   27b44:	ldr	x5, [x19, #8]
   27b48:	sub	x7, x1, x0
   27b4c:	subs	x4, x0, x5
   27b50:	b.mi	27a04 <my_regexec@@Base+0x4510>  // b.first
   27b54:	stp	x23, x24, [sp, #64]
   27b58:	str	x25, [sp, #80]
   27b5c:	ldr	w2, [x19, #192]
   27b60:	cmp	w2, #0x0
   27b64:	cset	w3, ne  // ne = any
   27b68:	cmp	x0, x1
   27b6c:	csel	x0, x0, x1, ls  // ls = plast
   27b70:	str	x0, [sp]
   27b74:	mov	w6, w3
   27b78:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   27b7c:	add	x2, x2, #0x8c0
   27b80:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   27b84:	add	x1, x1, #0x3a8
   27b88:	mov	x0, x20
   27b8c:	bl	5420 <Perl_croak@plt>
   27b90:	stp	x29, x30, [sp, #-64]!
   27b94:	mov	x29, sp
   27b98:	stp	x19, x20, [sp, #16]
   27b9c:	stp	x21, x22, [sp, #32]
   27ba0:	stp	x23, x24, [sp, #48]
   27ba4:	mov	x24, x0
   27ba8:	mov	x20, x1
   27bac:	mov	x1, #0xffffffffffffffff    	// #-1
   27bb0:	bl	5090 <Perl__new_invlist@plt>
   27bb4:	mov	x21, x0
   27bb8:	ldrb	w0, [x20]
   27bbc:	mvn	w0, w0
   27bc0:	and	w0, w0, #0xff
   27bc4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27bc8:	ldr	x1, [x1, #3760]
   27bcc:	ldrb	w0, [x1, w0, sxtw]
   27bd0:	mov	w22, #0x1                   	// #1
   27bd4:	lsl	w22, w22, w0
   27bd8:	and	w22, w22, #0xff
   27bdc:	ldrb	w19, [x20, #4]
   27be0:	mov	w23, #0x0                   	// #0
   27be4:	b	27bf4 <my_regexec@@Base+0x4700>
   27be8:	add	x19, x19, #0x1
   27bec:	cmp	w19, #0xff
   27bf0:	b.hi	27c30 <my_regexec@@Base+0x473c>  // b.pmore
   27bf4:	ldrb	w2, [x20]
   27bf8:	and	w2, w2, w19
   27bfc:	ldr	w1, [x20, #4]
   27c00:	cmp	w2, w1
   27c04:	b.ne	27be8 <my_regexec@@Base+0x46f4>  // b.any
   27c08:	mov	x3, x19
   27c0c:	mov	x2, x19
   27c10:	mov	x1, x21
   27c14:	mov	x0, x24
   27c18:	bl	5450 <Perl__add_range_to_invlist@plt>
   27c1c:	mov	x21, x0
   27c20:	add	w1, w23, #0x1
   27c24:	and	w23, w1, #0xff
   27c28:	cmp	w22, w1, uxtb
   27c2c:	b.hi	27be8 <my_regexec@@Base+0x46f4>  // b.pmore
   27c30:	ldrb	w0, [x20, #1]
   27c34:	cmp	w0, #0x18
   27c38:	b.eq	27c54 <my_regexec@@Base+0x4760>  // b.none
   27c3c:	mov	x0, x21
   27c40:	ldp	x19, x20, [sp, #16]
   27c44:	ldp	x21, x22, [sp, #32]
   27c48:	ldp	x23, x24, [sp, #48]
   27c4c:	ldp	x29, x30, [sp], #64
   27c50:	ret
   27c54:	mov	x1, x21
   27c58:	mov	x0, x24
   27c5c:	bl	52b0 <Perl__invlist_invert@plt>
   27c60:	b	27c3c <my_regexec@@Base+0x4748>
   27c64:	stp	x29, x30, [sp, #-64]!
   27c68:	mov	x29, sp
   27c6c:	stp	x19, x20, [sp, #16]
   27c70:	str	x21, [sp, #32]
   27c74:	mov	x21, x0
   27c78:	mov	x20, x1
   27c7c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27c80:	ldr	x1, [x1, #3920]
   27c84:	ldr	x0, [x1]
   27c88:	str	x0, [sp, #56]
   27c8c:	mov	x0, #0x0                   	// #0
   27c90:	cbz	x20, 27d20 <my_regexec@@Base+0x482c>
   27c94:	mov	x19, x2
   27c98:	cmp	x2, #0xff
   27c9c:	b.hi	27d44 <my_regexec@@Base+0x4850>  // b.pmore
   27ca0:	sub	x0, x2, #0x20
   27ca4:	cmp	x0, #0x5e
   27ca8:	b.hi	27d70 <my_regexec@@Base+0x487c>  // b.pmore
   27cac:	strb	w2, [sp, #55]
   27cb0:	mov	w1, w2
   27cb4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27cb8:	add	x0, x0, #0x988
   27cbc:	bl	5610 <strchr@plt>
   27cc0:	cbz	x0, 27d60 <my_regexec@@Base+0x486c>
   27cc4:	mov	w4, #0x2                   	// #2
   27cc8:	mov	x3, #0x1                   	// #1
   27ccc:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   27cd0:	add	x2, x2, #0x990
   27cd4:	mov	x1, x20
   27cd8:	mov	x0, x21
   27cdc:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   27ce0:	mov	w4, #0x2                   	// #2
   27ce4:	mov	x3, #0x1                   	// #1
   27ce8:	add	x2, sp, #0x37
   27cec:	mov	x1, x20
   27cf0:	mov	x0, x21
   27cf4:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   27cf8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   27cfc:	ldr	x0, [x0, #3920]
   27d00:	ldr	x1, [sp, #56]
   27d04:	ldr	x0, [x0]
   27d08:	eor	x0, x1, x0
   27d0c:	cbnz	x0, 27dc4 <my_regexec@@Base+0x48d0>
   27d10:	ldp	x19, x20, [sp, #16]
   27d14:	ldr	x21, [sp, #32]
   27d18:	ldp	x29, x30, [sp], #64
   27d1c:	ret
   27d20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27d24:	add	x3, x3, #0xc10
   27d28:	add	x3, x3, #0xd0
   27d2c:	mov	w2, #0x5304                	// #21252
   27d30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27d34:	add	x1, x1, #0xfb8
   27d38:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27d3c:	add	x0, x0, #0x970
   27d40:	bl	58e0 <__assert_fail@plt>
   27d44:	mov	x3, x2
   27d48:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   27d4c:	add	x2, x2, #0x978
   27d50:	mov	x1, x20
   27d54:	mov	x0, x21
   27d58:	bl	5120 <Perl_sv_catpvf@plt>
   27d5c:	b	27cf8 <my_regexec@@Base+0x4804>
   27d60:	sub	x19, x19, #0x7b
   27d64:	tst	x19, #0xfffffffffffffffd
   27d68:	b.ne	27ce0 <my_regexec@@Base+0x47ec>  // b.any
   27d6c:	b	27cc4 <my_regexec@@Base+0x47d0>
   27d70:	and	w3, w2, #0xff
   27d74:	and	x19, x2, #0xff
   27d78:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27d7c:	ldr	x1, [x1, #3880]
   27d80:	ldr	w0, [x1, x19, lsl #2]
   27d84:	tbnz	w0, #23, 27da0 <my_regexec@@Base+0x48ac>
   27d88:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   27d8c:	add	x2, x2, #0x998
   27d90:	mov	x1, x20
   27d94:	mov	x0, x21
   27d98:	bl	5120 <Perl_sv_catpvf@plt>
   27d9c:	b	27cf8 <my_regexec@@Base+0x4804>
   27da0:	mov	w0, w3
   27da4:	bl	26214 <my_regexec@@Base+0x2d20>
   27da8:	mov	x3, x0
   27dac:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   27db0:	add	x2, x2, #0xb50
   27db4:	mov	x1, x20
   27db8:	mov	x0, x21
   27dbc:	bl	5120 <Perl_sv_catpvf@plt>
   27dc0:	b	27cf8 <my_regexec@@Base+0x4804>
   27dc4:	bl	5300 <__stack_chk_fail@plt>
   27dc8:	stp	x29, x30, [sp, #-96]!
   27dcc:	mov	x29, sp
   27dd0:	cmp	x2, x3
   27dd4:	b.hi	27f4c <my_regexec@@Base+0x4a58>  // b.pmore
   27dd8:	stp	x19, x20, [sp, #16]
   27ddc:	stp	x21, x22, [sp, #32]
   27de0:	stp	x23, x24, [sp, #48]
   27de4:	mov	x23, x0
   27de8:	mov	x21, x1
   27dec:	mov	x19, x2
   27df0:	mov	x20, x3
   27df4:	and	w4, w4, #0xff
   27df8:	cbz	x1, 27f84 <my_regexec@@Base+0x4a90>
   27dfc:	sub	x0, x3, x2
   27e00:	cmp	x0, #0x2
   27e04:	b.ls	27fc4 <my_regexec@@Base+0x4ad0>  // b.plast
   27e08:	cmp	x2, #0x7e
   27e0c:	ccmp	w4, #0x0, #0x4, ls  // ls = plast
   27e10:	b.eq	27fec <my_regexec@@Base+0x4af8>  // b.none
   27e14:	stp	x25, x26, [sp, #64]
   27e18:	stp	x27, x28, [sp, #80]
   27e1c:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   27e20:	ldr	x28, [x26, #3880]
   27e24:	mov	w27, #0x4080                	// #16512
   27e28:	mov	w22, #0x4400                	// #17408
   27e2c:	sub	x0, x19, #0x20
   27e30:	cmp	x0, #0x5e
   27e34:	b.hi	28060 <my_regexec@@Base+0x4b6c>  // b.pmore
   27e38:	and	x0, x19, #0xff
   27e3c:	ldr	w0, [x28, x0, lsl #2]
   27e40:	bics	wzr, w27, w0
   27e44:	b.eq	280f8 <my_regexec@@Base+0x4c04>  // b.none
   27e48:	mov	w1, #0x4020                	// #16416
   27e4c:	bics	wzr, w1, w0
   27e50:	b.eq	281dc <my_regexec@@Base+0x4ce8>  // b.none
   27e54:	bics	wzr, w22, w0
   27e58:	b.eq	281dc <my_regexec@@Base+0x4ce8>  // b.none
   27e5c:	and	x2, x19, #0xffffffffffffff00
   27e60:	ldp	x25, x26, [sp, #64]
   27e64:	ldp	x27, x28, [sp, #80]
   27e68:	and	x1, x19, #0xff
   27e6c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   27e70:	ldr	x0, [x0, #3880]
   27e74:	ldr	w0, [x0, x1, lsl #2]
   27e78:	tbz	w0, #23, 27ff4 <my_regexec@@Base+0x4b00>
   27e7c:	and	x1, x19, #0xff
   27e80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   27e84:	ldr	x0, [x0, #3880]
   27e88:	ldr	w0, [x0, x1, lsl #2]
   27e8c:	tst	x0, #0x800000
   27e90:	ccmp	x20, x19, #0x0, ne  // ne = any
   27e94:	b.cc	27ed0 <my_regexec@@Base+0x49dc>  // b.lo, b.ul, b.last
   27e98:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   27e9c:	ldr	x22, [x22, #3880]
   27ea0:	mov	x2, x19
   27ea4:	mov	x1, x21
   27ea8:	mov	x0, x23
   27eac:	bl	27c64 <my_regexec@@Base+0x4770>
   27eb0:	add	x19, x19, #0x1
   27eb4:	tst	x19, #0xffffffffffffff00
   27eb8:	b.ne	27ed0 <my_regexec@@Base+0x49dc>  // b.any
   27ebc:	and	x0, x19, #0xff
   27ec0:	ldr	w0, [x22, x0, lsl #2]
   27ec4:	tst	x0, #0x800000
   27ec8:	ccmp	x20, x19, #0x0, ne  // ne = any
   27ecc:	b.cs	27ea0 <my_regexec@@Base+0x49ac>  // b.hs, b.nlast
   27ed0:	cmp	x20, x19
   27ed4:	b.cc	2801c <my_regexec@@Base+0x4b28>  // b.lo, b.ul, b.last
   27ed8:	mov	x22, x20
   27edc:	tst	x20, #0xffffffffffffff00
   27ee0:	b.ne	27f08 <my_regexec@@Base+0x4a14>  // b.any
   27ee4:	mov	x22, x20
   27ee8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   27eec:	ldr	x1, [x1, #3880]
   27ef0:	and	x0, x22, #0xff
   27ef4:	ldr	w0, [x1, x0, lsl #2]
   27ef8:	tbz	w0, #23, 27f08 <my_regexec@@Base+0x4a14>
   27efc:	sub	x22, x22, #0x1
   27f00:	tst	x22, #0xffffffffffffff00
   27f04:	b.eq	27ef0 <my_regexec@@Base+0x49fc>  // b.none
   27f08:	mov	w4, #0x0                   	// #0
   27f0c:	mov	x3, x22
   27f10:	mov	x2, x19
   27f14:	mov	x1, x21
   27f18:	mov	x0, x23
   27f1c:	bl	27dc8 <my_regexec@@Base+0x48d4>
   27f20:	add	x22, x22, #0x1
   27f24:	cmp	x20, x22
   27f28:	b.cc	28040 <my_regexec@@Base+0x4b4c>  // b.lo, b.ul, b.last
   27f2c:	mov	x2, x22
   27f30:	mov	x1, x21
   27f34:	mov	x0, x23
   27f38:	bl	27c64 <my_regexec@@Base+0x4770>
   27f3c:	add	x22, x22, #0x1
   27f40:	cmp	x20, x22
   27f44:	b.cs	27f2c <my_regexec@@Base+0x4a38>  // b.hs, b.nlast
   27f48:	b	28040 <my_regexec@@Base+0x4b4c>
   27f4c:	stp	x19, x20, [sp, #16]
   27f50:	stp	x21, x22, [sp, #32]
   27f54:	stp	x23, x24, [sp, #48]
   27f58:	stp	x25, x26, [sp, #64]
   27f5c:	stp	x27, x28, [sp, #80]
   27f60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27f64:	add	x3, x3, #0xc10
   27f68:	add	x3, x3, #0xe8
   27f6c:	mov	w2, #0x532c                	// #21292
   27f70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27f74:	add	x1, x1, #0xfb8
   27f78:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27f7c:	add	x0, x0, #0x9a0
   27f80:	bl	58e0 <__assert_fail@plt>
   27f84:	stp	x25, x26, [sp, #64]
   27f88:	stp	x27, x28, [sp, #80]
   27f8c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   27f90:	add	x3, x3, #0xc10
   27f94:	add	x3, x3, #0xe8
   27f98:	mov	w2, #0x532e                	// #21294
   27f9c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   27fa0:	add	x1, x1, #0xfb8
   27fa4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   27fa8:	add	x0, x0, #0x970
   27fac:	bl	58e0 <__assert_fail@plt>
   27fb0:	sub	x0, x20, x19
   27fb4:	cmp	x0, #0x2
   27fb8:	b.hi	27fe4 <my_regexec@@Base+0x4af0>  // b.pmore
   27fbc:	ldp	x25, x26, [sp, #64]
   27fc0:	ldp	x27, x28, [sp, #80]
   27fc4:	mov	x2, x19
   27fc8:	mov	x1, x21
   27fcc:	mov	x0, x23
   27fd0:	bl	27c64 <my_regexec@@Base+0x4770>
   27fd4:	add	x19, x19, #0x1
   27fd8:	cmp	x20, x19
   27fdc:	b.cs	27fc4 <my_regexec@@Base+0x4ad0>  // b.hs, b.nlast
   27fe0:	b	28040 <my_regexec@@Base+0x4b4c>
   27fe4:	ldp	x25, x26, [sp, #64]
   27fe8:	ldp	x27, x28, [sp, #80]
   27fec:	ands	x2, x19, #0xffffffffffffff00
   27ff0:	b.eq	27e68 <my_regexec@@Base+0x4974>  // b.none
   27ff4:	tst	x20, #0xffffffffffffff00
   27ff8:	b.ne	2801c <my_regexec@@Base+0x4b28>  // b.any
   27ffc:	and	x1, x20, #0xff
   28000:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   28004:	ldr	x0, [x0, #3880]
   28008:	ldr	w0, [x0, x1, lsl #2]
   2800c:	tbz	w0, #23, 2801c <my_regexec@@Base+0x4b28>
   28010:	cbz	x2, 27e7c <my_regexec@@Base+0x4988>
   28014:	cmp	x19, x20
   28018:	b.ls	27ee4 <my_regexec@@Base+0x49f0>  // b.plast
   2801c:	cmp	x20, #0xff
   28020:	mov	x4, #0xff                  	// #255
   28024:	csel	x4, x20, x4, ls  // ls = plast
   28028:	mov	x3, x19
   2802c:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   28030:	add	x2, x2, #0x9b8
   28034:	mov	x1, x21
   28038:	mov	x0, x23
   2803c:	bl	5120 <Perl_sv_catpvf@plt>
   28040:	ldp	x19, x20, [sp, #16]
   28044:	ldp	x21, x22, [sp, #32]
   28048:	ldp	x23, x24, [sp, #48]
   2804c:	ldp	x29, x30, [sp], #96
   28050:	ret
   28054:	ldp	x25, x26, [sp, #64]
   28058:	ldp	x27, x28, [sp, #80]
   2805c:	b	27fc4 <my_regexec@@Base+0x4ad0>
   28060:	add	x24, x19, #0x1
   28064:	cmp	x20, #0x7e
   28068:	mov	x1, #0x7e                  	// #126
   2806c:	csel	x1, x20, x1, ls  // ls = plast
   28070:	cmp	x24, x1
   28074:	b.hi	280a8 <my_regexec@@Base+0x4bb4>  // b.pmore
   28078:	sub	x0, x19, #0x1f
   2807c:	cmp	x0, #0x5e
   28080:	b.ls	280b4 <my_regexec@@Base+0x4bc0>  // b.plast
   28084:	add	x2, x1, #0x1
   28088:	mov	x0, x24
   2808c:	add	x24, x24, #0x1
   28090:	cmp	x1, x0
   28094:	b.eq	280ac <my_regexec@@Base+0x4bb8>  // b.none
   28098:	sub	x0, x0, #0x1f
   2809c:	cmp	x0, #0x5e
   280a0:	b.hi	28088 <my_regexec@@Base+0x4b94>  // b.pmore
   280a4:	b	280b4 <my_regexec@@Base+0x4bc0>
   280a8:	mov	x2, x24
   280ac:	cmp	x2, #0x7e
   280b0:	csinc	x24, x2, x20, ls  // ls = plast
   280b4:	mov	w4, #0x0                   	// #0
   280b8:	sub	x3, x24, #0x1
   280bc:	mov	x2, x19
   280c0:	mov	x1, x21
   280c4:	mov	x0, x23
   280c8:	bl	27dc8 <my_regexec@@Base+0x48d4>
   280cc:	mov	x19, x24
   280d0:	cmp	x19, x20
   280d4:	b.hi	28230 <my_regexec@@Base+0x4d3c>  // b.pmore
   280d8:	sub	x0, x20, x19
   280dc:	cmp	x0, #0x2
   280e0:	b.ls	28054 <my_regexec@@Base+0x4b60>  // b.plast
   280e4:	cmp	x19, #0x7e
   280e8:	b.ls	27e2c <my_regexec@@Base+0x4938>  // b.plast
   280ec:	ldp	x25, x26, [sp, #64]
   280f0:	ldp	x27, x28, [sp, #80]
   280f4:	b	27fec <my_regexec@@Base+0x4af8>
   280f8:	sub	x0, x19, #0x30
   280fc:	mov	x2, #0x1                   	// #1
   28100:	cmp	x0, #0x9
   28104:	b.ls	28118 <my_regexec@@Base+0x4c24>  // b.plast
   28108:	sub	x0, x19, #0x41
   2810c:	cmp	x0, #0x1a
   28110:	cset	x2, cc  // cc = lo, ul, last
   28114:	add	x2, x2, #0x3
   28118:	add	x25, x19, #0x1
   2811c:	cmp	x20, x25
   28120:	b.cc	28164 <my_regexec@@Base+0x4c70>  // b.lo, b.ul, b.last
   28124:	mov	w1, #0x1                   	// #1
   28128:	lsl	w1, w1, w2
   2812c:	orr	w1, w1, #0x4000
   28130:	ldr	x2, [x26, #3880]
   28134:	and	x0, x25, #0xff
   28138:	ldr	w0, [x2, x0, lsl #2]
   2813c:	bics	wzr, w1, w0
   28140:	b.ne	28164 <my_regexec@@Base+0x4c70>  // b.any
   28144:	add	x24, x25, #0x1
   28148:	cmp	x20, x24
   2814c:	b.cc	28160 <my_regexec@@Base+0x4c6c>  // b.lo, b.ul, b.last
   28150:	tst	x24, #0xffffffffffffff00
   28154:	b.ne	28198 <my_regexec@@Base+0x4ca4>  // b.any
   28158:	mov	x25, x24
   2815c:	b	28134 <my_regexec@@Base+0x4c40>
   28160:	mov	x25, x24
   28164:	sub	x3, x25, #0x1
   28168:	sub	x0, x3, x19
   2816c:	cmp	x0, #0x2
   28170:	b.hi	28190 <my_regexec@@Base+0x4c9c>  // b.pmore
   28174:	mov	w4, #0x0                   	// #0
   28178:	mov	x2, x19
   2817c:	mov	x1, x21
   28180:	mov	x0, x23
   28184:	bl	27dc8 <my_regexec@@Base+0x48d4>
   28188:	mov	x19, x25
   2818c:	b	280d0 <my_regexec@@Base+0x4bdc>
   28190:	mov	x24, x25
   28194:	mov	x25, x3
   28198:	mov	x2, x19
   2819c:	mov	x1, x21
   281a0:	mov	x0, x23
   281a4:	bl	27c64 <my_regexec@@Base+0x4770>
   281a8:	mov	w4, #0x2                   	// #2
   281ac:	mov	x3, #0x1                   	// #1
   281b0:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   281b4:	add	x2, x2, #0x9b0
   281b8:	mov	x1, x21
   281bc:	mov	x0, x23
   281c0:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   281c4:	mov	x2, x25
   281c8:	mov	x1, x21
   281cc:	mov	x0, x23
   281d0:	bl	27c64 <my_regexec@@Base+0x4770>
   281d4:	mov	x19, x24
   281d8:	b	280d0 <my_regexec@@Base+0x4bdc>
   281dc:	cmp	x20, x19
   281e0:	b.cc	2823c <my_regexec@@Base+0x4d48>  // b.lo, b.ul, b.last
   281e4:	ldr	x25, [x26, #3880]
   281e8:	mov	w24, #0x4020                	// #16416
   281ec:	b	28214 <my_regexec@@Base+0x4d20>
   281f0:	mov	x2, x19
   281f4:	mov	x1, x21
   281f8:	mov	x0, x23
   281fc:	bl	27c64 <my_regexec@@Base+0x4770>
   28200:	add	x19, x19, #0x1
   28204:	cmp	x20, x19
   28208:	b.cc	28248 <my_regexec@@Base+0x4d54>  // b.lo, b.ul, b.last
   2820c:	tst	x19, #0xffffffffffffff00
   28210:	b.ne	27fb0 <my_regexec@@Base+0x4abc>  // b.any
   28214:	and	x0, x19, #0xff
   28218:	ldr	w0, [x25, x0, lsl #2]
   2821c:	bics	wzr, w24, w0
   28220:	b.eq	281f0 <my_regexec@@Base+0x4cfc>  // b.none
   28224:	bics	wzr, w22, w0
   28228:	b.eq	281f0 <my_regexec@@Base+0x4cfc>  // b.none
   2822c:	b	280d0 <my_regexec@@Base+0x4bdc>
   28230:	ldp	x25, x26, [sp, #64]
   28234:	ldp	x27, x28, [sp, #80]
   28238:	b	28040 <my_regexec@@Base+0x4b4c>
   2823c:	ldp	x25, x26, [sp, #64]
   28240:	ldp	x27, x28, [sp, #80]
   28244:	b	28040 <my_regexec@@Base+0x4b4c>
   28248:	ldp	x25, x26, [sp, #64]
   2824c:	ldp	x27, x28, [sp, #80]
   28250:	b	28040 <my_regexec@@Base+0x4b4c>
   28254:	sub	sp, sp, #0xc0
   28258:	stp	x29, x30, [sp, #48]
   2825c:	add	x29, sp, #0x30
   28260:	stp	x19, x20, [sp, #64]
   28264:	stp	x21, x22, [sp, #80]
   28268:	stp	x23, x24, [sp, #96]
   2826c:	stp	x25, x26, [sp, #112]
   28270:	stp	x27, x28, [sp, #128]
   28274:	mov	x23, x0
   28278:	mov	x19, x1
   2827c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   28280:	ldr	x0, [x0, #3920]
   28284:	ldr	x1, [x0]
   28288:	str	x1, [sp, #184]
   2828c:	mov	x1, #0x0                   	// #0
   28290:	str	wzr, [sp, #176]
   28294:	str	wzr, [sp, #180]
   28298:	ldr	x26, [x19, #64]
   2829c:	ldrb	w0, [x26]
   282a0:	cmp	w0, #0x5e
   282a4:	b.eq	282cc <my_regexec@@Base+0x4dd8>  // b.none
   282a8:	ldr	w22, [x19]
   282ac:	ubfx	x22, x22, #7, #3
   282b0:	mov	w28, #0x0                   	// #0
   282b4:	cbnz	w22, 282fc <my_regexec@@Base+0x4e08>
   282b8:	ldr	w0, [x19, #200]
   282bc:	cmp	w0, #0x0
   282c0:	mov	w0, #0x2                   	// #2
   282c4:	csel	w22, w22, w0, eq  // eq = none
   282c8:	b	282fc <my_regexec@@Base+0x4e08>
   282cc:	add	x0, x26, #0x1
   282d0:	str	x0, [x19, #64]
   282d4:	ldr	w0, [x19]
   282d8:	mov	w1, #0xfffffc40            	// #-960
   282dc:	and	w0, w0, w1
   282e0:	ldr	w1, [x19, #200]
   282e4:	cmp	w1, #0x0
   282e8:	cset	w22, ne  // ne = any
   282ec:	lsl	w22, w22, #1
   282f0:	orr	w0, w0, w22, lsl #7
   282f4:	str	w0, [x19]
   282f8:	mov	w28, #0x1                   	// #1
   282fc:	ldr	x20, [x19, #64]
   28300:	ldr	x1, [x19, #56]
   28304:	cmp	x20, x1
   28308:	b.cs	29090 <my_regexec@@Base+0x5b9c>  // b.hs, b.nlast
   2830c:	mov	w27, #0x0                   	// #0
   28310:	mov	w24, #0x0                   	// #0
   28314:	add	x21, sp, #0xb0
   28318:	str	wzr, [sp, #156]
   2831c:	add	x25, sp, #0xb4
   28320:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   28324:	add	x0, x0, #0x9d8
   28328:	str	x0, [sp, #160]
   2832c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   28330:	add	x0, x0, #0x20
   28334:	str	x0, [sp, #168]
   28338:	b	285b4 <my_regexec@@Base+0x50c0>
   2833c:	cmp	w0, #0x3a
   28340:	b.eq	28e90 <my_regexec@@Base+0x599c>  // b.none
   28344:	b.ls	28370 <my_regexec@@Base+0x4e7c>  // b.plast
   28348:	cmp	w0, #0x61
   2834c:	b.ne	28fe0 <my_regexec@@Base+0x5aec>  // b.any
   28350:	cmp	x21, x25
   28354:	b.eq	28930 <my_regexec@@Base+0x543c>  // b.none
   28358:	cbz	w24, 2907c <my_regexec@@Base+0x5b88>
   2835c:	cmp	w22, #0x3
   28360:	b.ne	28654 <my_regexec@@Base+0x5160>  // b.any
   28364:	mov	w24, w0
   28368:	mov	w22, #0x4                   	// #4
   2836c:	b	28580 <my_regexec@@Base+0x508c>
   28370:	cmp	w0, #0x29
   28374:	b.eq	28e90 <my_regexec@@Base+0x599c>  // b.none
   28378:	cmp	w0, #0x2d
   2837c:	b.ne	28f14 <my_regexec@@Base+0x5a20>  // b.any
   28380:	cmp	w28, #0x0
   28384:	ccmp	x25, x21, #0x4, eq  // eq = none
   28388:	b.eq	28fe0 <my_regexec@@Base+0x5aec>  // b.none
   2838c:	mov	w27, #0x0                   	// #0
   28390:	mov	x21, x25
   28394:	str	wzr, [sp, #156]
   28398:	b	28580 <my_regexec@@Base+0x508c>
   2839c:	cmp	w0, #0x64
   283a0:	b.ne	28fe0 <my_regexec@@Base+0x5aec>  // b.any
   283a4:	cbnz	w28, 28fe0 <my_regexec@@Base+0x5aec>
   283a8:	cmp	x21, x25
   283ac:	b.eq	28930 <my_regexec@@Base+0x543c>  // b.none
   283b0:	cbnz	w24, 28654 <my_regexec@@Base+0x5160>
   283b4:	ldr	w1, [x19, #200]
   283b8:	mov	w24, w0
   283bc:	cmp	w1, #0x0
   283c0:	mov	w22, #0x2                   	// #2
   283c4:	csel	w22, w22, wzr, ne  // ne = any
   283c8:	b	28580 <my_regexec@@Base+0x508c>
   283cc:	cmp	w0, #0x70
   283d0:	b.eq	28cc8 <my_regexec@@Base+0x57d4>  // b.none
   283d4:	b.ls	28404 <my_regexec@@Base+0x4f10>  // b.plast
   283d8:	cmp	w0, #0x75
   283dc:	b.eq	2863c <my_regexec@@Base+0x5148>  // b.none
   283e0:	cmp	w0, #0x78
   283e4:	b.ne	285f0 <my_regexec@@Base+0x50fc>  // b.any
   283e8:	cbnz	w27, 28608 <my_regexec@@Base+0x5114>
   283ec:	ldr	w0, [x21]
   283f0:	and	w0, w0, #0xffffffef
   283f4:	orr	w0, w0, #0x8
   283f8:	str	w0, [x21]
   283fc:	add	w27, w27, #0x1
   28400:	b	28580 <my_regexec@@Base+0x508c>
   28404:	cmp	w0, #0x6e
   28408:	b.eq	28614 <my_regexec@@Base+0x5120>  // b.none
   2840c:	cmp	w0, #0x6f
   28410:	b.ne	2856c <my_regexec@@Base+0x5078>  // b.any
   28414:	mov	w1, #0x14                  	// #20
   28418:	mov	x0, x23
   2841c:	bl	5870 <Perl_ckwarn@plt>
   28420:	and	w0, w0, #0xff
   28424:	cbz	w0, 28580 <my_regexec@@Base+0x508c>
   28428:	mov	w0, #0x1                   	// #1
   2842c:	ldr	w1, [sp, #156]
   28430:	tst	w0, w1
   28434:	b.ne	28580 <my_regexec@@Base+0x508c>  // b.any
   28438:	orr	w0, w1, w0
   2843c:	str	w0, [sp, #156]
   28440:	ldr	x1, [x19, #72]
   28444:	cbz	x1, 28a20 <my_regexec@@Base+0x552c>
   28448:	add	x0, x20, #0x1
   2844c:	sub	x1, x0, x1
   28450:	ldr	x0, [x19, #80]
   28454:	add	x0, x0, x1
   28458:	ldr	x1, [x19, #8]
   2845c:	sub	x0, x0, x1
   28460:	ldr	x1, [x19, #136]
   28464:	cmp	x0, x1
   28468:	b.le	28580 <my_regexec@@Base+0x508c>
   2846c:	ldr	x0, [x23, #224]
   28470:	cbz	x0, 28498 <my_regexec@@Base+0x4fa4>
   28474:	ldr	x0, [x0, #64]
   28478:	cmp	x0, #0x0
   2847c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   28480:	ldr	x1, [x1, #3984]
   28484:	ccmp	x0, x1, #0x4, ne  // ne = any
   28488:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2848c:	ldr	x1, [x1, #3832]
   28490:	ccmp	x0, x1, #0x4, ne  // ne = any
   28494:	b.ne	28a40 <my_regexec@@Base+0x554c>  // b.any
   28498:	cmp	x21, x25
   2849c:	b.eq	29168 <my_regexec@@Base+0x5c74>  // b.none
   284a0:	ldr	x0, [x19, #64]
   284a4:	ldrb	w4, [x0]
   284a8:	ldr	x3, [sp, #160]
   284ac:	ldr	x5, [sp, #168]
   284b0:	ldr	w1, [x19, #192]
   284b4:	cmp	w1, #0x0
   284b8:	cset	w7, ne  // ne = any
   284bc:	add	x0, x0, #0x1
   284c0:	ldr	x1, [x19, #72]
   284c4:	sub	x1, x0, x1
   284c8:	ldr	x0, [x19, #80]
   284cc:	add	x0, x0, x1
   284d0:	ldr	x1, [x19, #16]
   284d4:	cmp	x0, x1
   284d8:	b.ls	28a88 <my_regexec@@Base+0x5594>  // b.plast
   284dc:	ldr	x2, [x19, #8]
   284e0:	sub	x8, x1, x2
   284e4:	mov	x6, #0x0                   	// #0
   284e8:	cmp	x0, x1
   284ec:	csel	x0, x0, x1, ls  // ls = plast
   284f0:	str	x0, [sp, #32]
   284f4:	str	x6, [sp, #24]
   284f8:	str	w7, [sp, #16]
   284fc:	str	x2, [sp, #8]
   28500:	str	x8, [sp]
   28504:	mov	w6, w4
   28508:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   2850c:	add	x2, x2, #0xaf0
   28510:	mov	w1, #0x14                  	// #20
   28514:	mov	x0, x23
   28518:	bl	5110 <Perl_warner@plt>
   2851c:	ldr	x1, [x19, #72]
   28520:	cbz	x1, 28580 <my_regexec@@Base+0x508c>
   28524:	ldr	x0, [x19, #64]
   28528:	add	x0, x0, #0x1
   2852c:	sub	x0, x0, x1
   28530:	ldr	x1, [x19, #80]
   28534:	add	x0, x1, x0
   28538:	ldr	x2, [x19, #8]
   2853c:	sub	x3, x0, x2
   28540:	ldr	x1, [x19, #136]
   28544:	cmp	x3, x1
   28548:	b.le	28580 <my_regexec@@Base+0x508c>
   2854c:	ldr	x1, [x19, #16]
   28550:	cmp	x1, x0
   28554:	csel	x0, x1, x0, ls  // ls = plast
   28558:	cmp	x2, x0
   2855c:	csel	x0, x2, x0, hi  // hi = pmore
   28560:	sub	x0, x0, x2
   28564:	str	x0, [x19, #136]
   28568:	b	28580 <my_regexec@@Base+0x508c>
   2856c:	cmp	w0, #0x6d
   28570:	b.ne	28fe0 <my_regexec@@Base+0x5aec>  // b.any
   28574:	ldr	w0, [x21]
   28578:	orr	w0, w0, #0x1
   2857c:	str	w0, [x21]
   28580:	ldr	x20, [x19, #64]
   28584:	ldr	w1, [x19, #192]
   28588:	mov	x0, #0x1                   	// #1
   2858c:	cbz	w1, 285a0 <my_regexec@@Base+0x50ac>
   28590:	ldrb	w1, [x20]
   28594:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   28598:	ldr	x0, [x0, #4064]
   2859c:	ldrb	w0, [x0, w1, sxtw]
   285a0:	add	x20, x20, x0
   285a4:	str	x20, [x19, #64]
   285a8:	ldr	x1, [x19, #56]
   285ac:	cmp	x20, x1
   285b0:	b.cs	29090 <my_regexec@@Base+0x5b9c>  // b.hs, b.nlast
   285b4:	ldrb	w0, [x20]
   285b8:	cmp	w0, #0x6c
   285bc:	b.eq	28624 <my_regexec@@Base+0x5130>  // b.none
   285c0:	b.hi	283cc <my_regexec@@Base+0x4ed8>  // b.pmore
   285c4:	cmp	w0, #0x63
   285c8:	b.eq	28ac8 <my_regexec@@Base+0x55d4>  // b.none
   285cc:	b.ls	2833c <my_regexec@@Base+0x4e48>  // b.plast
   285d0:	cmp	w0, #0x67
   285d4:	b.eq	29184 <my_regexec@@Base+0x5c90>  // b.none
   285d8:	cmp	w0, #0x69
   285dc:	b.ne	2839c <my_regexec@@Base+0x4ea8>  // b.any
   285e0:	ldr	w0, [x21]
   285e4:	orr	w0, w0, #0x4
   285e8:	str	w0, [x21]
   285ec:	b	28580 <my_regexec@@Base+0x508c>
   285f0:	cmp	w0, #0x73
   285f4:	b.ne	28fe0 <my_regexec@@Base+0x5aec>  // b.any
   285f8:	ldr	w0, [x21]
   285fc:	orr	w0, w0, #0x2
   28600:	str	w0, [x21]
   28604:	b	28580 <my_regexec@@Base+0x508c>
   28608:	ldr	w0, [x21]
   2860c:	orr	w0, w0, #0x18
   28610:	b	283f8 <my_regexec@@Base+0x4f04>
   28614:	ldr	w0, [x21]
   28618:	orr	w0, w0, #0x20
   2861c:	str	w0, [x21]
   28620:	b	28580 <my_regexec@@Base+0x508c>
   28624:	cbnz	w24, 28654 <my_regexec@@Base+0x5160>
   28628:	cmp	x21, x25
   2862c:	b.eq	28930 <my_regexec@@Base+0x543c>  // b.none
   28630:	mov	w24, w0
   28634:	mov	w22, #0x1                   	// #1
   28638:	b	28580 <my_regexec@@Base+0x508c>
   2863c:	cbnz	w24, 28654 <my_regexec@@Base+0x5160>
   28640:	cmp	x21, x25
   28644:	b.eq	28930 <my_regexec@@Base+0x543c>  // b.none
   28648:	mov	w24, w0
   2864c:	mov	w22, #0x2                   	// #2
   28650:	b	28580 <my_regexec@@Base+0x508c>
   28654:	add	x0, x20, #0x1
   28658:	str	x0, [x19, #64]
   2865c:	cmp	w24, #0x61
   28660:	b.eq	28728 <my_regexec@@Base+0x5234>  // b.none
   28664:	ldrb	w0, [x20]
   28668:	cmp	w0, w24
   2866c:	b.eq	28810 <my_regexec@@Base+0x531c>  // b.none
   28670:	ldr	x1, [x19, #24]
   28674:	cbz	x1, 28684 <my_regexec@@Base+0x5190>
   28678:	mov	w2, #0xb                   	// #11
   2867c:	mov	x0, x23
   28680:	bl	54b0 <Perl_save_pushptr@plt>
   28684:	ldr	x1, [x19, #160]
   28688:	cbz	x1, 28698 <my_regexec@@Base+0x51a4>
   2868c:	mov	w2, #0xa                   	// #10
   28690:	mov	x0, x23
   28694:	bl	54b0 <Perl_save_pushptr@plt>
   28698:	ldr	x1, [x19, #168]
   2869c:	cbz	x1, 286ac <my_regexec@@Base+0x51b8>
   286a0:	mov	w2, #0xa                   	// #10
   286a4:	mov	x0, x23
   286a8:	bl	54b0 <Perl_save_pushptr@plt>
   286ac:	ldr	x5, [x19, #64]
   286b0:	ldr	x0, [x19, #72]
   286b4:	sub	x1, x5, x0
   286b8:	ldr	x0, [x19, #80]
   286bc:	add	x0, x0, x1
   286c0:	ldr	x3, [x19, #16]
   286c4:	cmp	x0, x3
   286c8:	b.hi	288f8 <my_regexec@@Base+0x5404>  // b.pmore
   286cc:	ldr	x2, [x19, #8]
   286d0:	subs	x4, x0, x2
   286d4:	b.mi	28908 <my_regexec@@Base+0x5414>  // b.first
   286d8:	mov	x7, x4
   286dc:	sub	x4, x3, x0
   286e0:	ldr	w1, [x19, #192]
   286e4:	cmp	w1, #0x0
   286e8:	cset	w1, ne  // ne = any
   286ec:	ldurb	w5, [x5, #-1]
   286f0:	cmp	x0, x3
   286f4:	csel	x0, x0, x3, ls  // ls = plast
   286f8:	str	x0, [sp, #24]
   286fc:	str	x4, [sp, #16]
   28700:	str	w1, [sp, #8]
   28704:	str	x2, [sp]
   28708:	mov	w6, w1
   2870c:	mov	w4, w24
   28710:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   28714:	add	x3, x3, #0x5d8
   28718:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   2871c:	add	x2, x2, #0xa48
   28720:	mov	x0, x23
   28724:	bl	273ac <my_regexec@@Base+0x3eb8>
   28728:	ldr	x1, [x19, #24]
   2872c:	cbz	x1, 2873c <my_regexec@@Base+0x5248>
   28730:	mov	w2, #0xb                   	// #11
   28734:	mov	x0, x23
   28738:	bl	54b0 <Perl_save_pushptr@plt>
   2873c:	ldr	x1, [x19, #160]
   28740:	cbz	x1, 28750 <my_regexec@@Base+0x525c>
   28744:	mov	w2, #0xa                   	// #10
   28748:	mov	x0, x23
   2874c:	bl	54b0 <Perl_save_pushptr@plt>
   28750:	ldr	x1, [x19, #168]
   28754:	cbz	x1, 28764 <my_regexec@@Base+0x5270>
   28758:	mov	w2, #0xa                   	// #10
   2875c:	mov	x0, x23
   28760:	bl	54b0 <Perl_save_pushptr@plt>
   28764:	ldr	x0, [x19, #64]
   28768:	ldr	x1, [x19, #72]
   2876c:	sub	x1, x0, x1
   28770:	ldr	x0, [x19, #80]
   28774:	add	x0, x0, x1
   28778:	ldr	x2, [x19, #16]
   2877c:	cmp	x0, x2
   28780:	b.hi	287d8 <my_regexec@@Base+0x52e4>  // b.pmore
   28784:	ldr	x7, [x19, #8]
   28788:	subs	x4, x0, x7
   2878c:	b.mi	287e8 <my_regexec@@Base+0x52f4>  // b.first
   28790:	mov	x6, x4
   28794:	sub	x3, x2, x0
   28798:	ldr	w1, [x19, #192]
   2879c:	cmp	w1, #0x0
   287a0:	cset	w1, ne  // ne = any
   287a4:	cmp	x0, x2
   287a8:	csel	x0, x0, x2, ls  // ls = plast
   287ac:	str	x0, [sp, #16]
   287b0:	str	x3, [sp, #8]
   287b4:	str	w1, [sp]
   287b8:	mov	w5, w1
   287bc:	mov	w4, #0x61                  	// #97
   287c0:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   287c4:	add	x3, x3, #0x5d8
   287c8:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   287cc:	add	x2, x2, #0x9e0
   287d0:	mov	x0, x23
   287d4:	bl	273ac <my_regexec@@Base+0x3eb8>
   287d8:	ldr	x7, [x19, #8]
   287dc:	sub	x6, x2, x7
   287e0:	mov	x3, #0x0                   	// #0
   287e4:	b	28798 <my_regexec@@Base+0x52a4>
   287e8:	ldr	x6, [x19, #48]
   287ec:	ldr	x5, [x19, #56]
   287f0:	sub	w5, w5, w6
   287f4:	mov	w3, #0x2a62                	// #10850
   287f8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   287fc:	add	x2, x2, #0xfb8
   28800:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28804:	add	x1, x1, #0x870
   28808:	mov	x0, x23
   2880c:	bl	5420 <Perl_croak@plt>
   28810:	ldr	x1, [x19, #24]
   28814:	cbz	x1, 28824 <my_regexec@@Base+0x5330>
   28818:	mov	w2, #0xb                   	// #11
   2881c:	mov	x0, x23
   28820:	bl	54b0 <Perl_save_pushptr@plt>
   28824:	ldr	x1, [x19, #160]
   28828:	cbz	x1, 28838 <my_regexec@@Base+0x5344>
   2882c:	mov	w2, #0xa                   	// #10
   28830:	mov	x0, x23
   28834:	bl	54b0 <Perl_save_pushptr@plt>
   28838:	ldr	x1, [x19, #168]
   2883c:	cbz	x1, 2884c <my_regexec@@Base+0x5358>
   28840:	mov	w2, #0xa                   	// #10
   28844:	mov	x0, x23
   28848:	bl	54b0 <Perl_save_pushptr@plt>
   2884c:	ldr	x5, [x19, #64]
   28850:	ldr	x0, [x19, #72]
   28854:	sub	x1, x5, x0
   28858:	ldr	x0, [x19, #80]
   2885c:	add	x0, x0, x1
   28860:	ldr	x2, [x19, #16]
   28864:	cmp	x0, x2
   28868:	b.hi	288c0 <my_regexec@@Base+0x53cc>  // b.pmore
   2886c:	ldr	x7, [x19, #8]
   28870:	subs	x4, x0, x7
   28874:	b.mi	288d0 <my_regexec@@Base+0x53dc>  // b.first
   28878:	mov	x6, x4
   2887c:	sub	x3, x2, x0
   28880:	ldr	w1, [x19, #192]
   28884:	cmp	w1, #0x0
   28888:	cset	w1, ne  // ne = any
   2888c:	ldurb	w4, [x5, #-1]
   28890:	cmp	x0, x2
   28894:	csel	x0, x0, x2, ls  // ls = plast
   28898:	str	x0, [sp, #16]
   2889c:	str	x3, [sp, #8]
   288a0:	str	w1, [sp]
   288a4:	mov	w5, w1
   288a8:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   288ac:	add	x3, x3, #0x5d8
   288b0:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   288b4:	add	x2, x2, #0xa18
   288b8:	mov	x0, x23
   288bc:	bl	273ac <my_regexec@@Base+0x3eb8>
   288c0:	ldr	x7, [x19, #8]
   288c4:	sub	x6, x2, x7
   288c8:	mov	x3, #0x0                   	// #0
   288cc:	b	28880 <my_regexec@@Base+0x538c>
   288d0:	ldr	x6, [x19, #48]
   288d4:	ldr	x5, [x19, #56]
   288d8:	sub	w5, w5, w6
   288dc:	mov	w3, #0x2a65                	// #10853
   288e0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   288e4:	add	x2, x2, #0xfb8
   288e8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   288ec:	add	x1, x1, #0x870
   288f0:	mov	x0, x23
   288f4:	bl	5420 <Perl_croak@plt>
   288f8:	ldr	x2, [x19, #8]
   288fc:	sub	x7, x3, x2
   28900:	mov	x4, #0x0                   	// #0
   28904:	b	286e0 <my_regexec@@Base+0x51ec>
   28908:	ldr	x6, [x19, #48]
   2890c:	ldr	x5, [x19, #56]
   28910:	sub	w5, w5, w6
   28914:	mov	w3, #0x2a69                	// #10857
   28918:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2891c:	add	x2, x2, #0xfb8
   28920:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28924:	add	x1, x1, #0x870
   28928:	mov	x0, x23
   2892c:	bl	5420 <Perl_croak@plt>
   28930:	add	x20, x20, #0x1
   28934:	str	x20, [x19, #64]
   28938:	ldr	x1, [x19, #24]
   2893c:	cbz	x1, 2894c <my_regexec@@Base+0x5458>
   28940:	mov	w2, #0xb                   	// #11
   28944:	mov	x0, x23
   28948:	bl	54b0 <Perl_save_pushptr@plt>
   2894c:	ldr	x1, [x19, #160]
   28950:	cbz	x1, 28960 <my_regexec@@Base+0x546c>
   28954:	mov	w2, #0xa                   	// #10
   28958:	mov	x0, x23
   2895c:	bl	54b0 <Perl_save_pushptr@plt>
   28960:	ldr	x1, [x19, #168]
   28964:	cbz	x1, 28974 <my_regexec@@Base+0x5480>
   28968:	mov	w2, #0xa                   	// #10
   2896c:	mov	x0, x23
   28970:	bl	54b0 <Perl_save_pushptr@plt>
   28974:	ldr	x3, [x19, #64]
   28978:	ldr	x0, [x19, #72]
   2897c:	sub	x1, x3, x0
   28980:	ldr	x0, [x19, #80]
   28984:	add	x0, x0, x1
   28988:	ldr	x2, [x19, #16]
   2898c:	cmp	x0, x2
   28990:	b.hi	289e8 <my_regexec@@Base+0x54f4>  // b.pmore
   28994:	ldr	x7, [x19, #8]
   28998:	subs	x4, x0, x7
   2899c:	b.mi	289f8 <my_regexec@@Base+0x5504>  // b.first
   289a0:	mov	x6, x4
   289a4:	sub	x5, x2, x0
   289a8:	ldr	w1, [x19, #192]
   289ac:	cmp	w1, #0x0
   289b0:	cset	w1, ne  // ne = any
   289b4:	ldurb	w4, [x3, #-1]
   289b8:	cmp	x0, x2
   289bc:	csel	x0, x0, x2, ls  // ls = plast
   289c0:	str	x0, [sp, #16]
   289c4:	str	x5, [sp, #8]
   289c8:	str	w1, [sp]
   289cc:	mov	w5, w1
   289d0:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   289d4:	add	x3, x3, #0x5d8
   289d8:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   289dc:	add	x2, x2, #0xa80
   289e0:	mov	x0, x23
   289e4:	bl	273ac <my_regexec@@Base+0x3eb8>
   289e8:	ldr	x7, [x19, #8]
   289ec:	sub	x6, x2, x7
   289f0:	mov	x5, #0x0                   	// #0
   289f4:	b	289a8 <my_regexec@@Base+0x54b4>
   289f8:	ldr	x6, [x19, #48]
   289fc:	ldr	x5, [x19, #56]
   28a00:	sub	w5, w5, w6
   28a04:	mov	w3, #0x2a6e                	// #10862
   28a08:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28a0c:	add	x2, x2, #0xfb8
   28a10:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28a14:	add	x1, x1, #0x870
   28a18:	mov	x0, x23
   28a1c:	bl	5420 <Perl_croak@plt>
   28a20:	add	x4, x20, #0x1
   28a24:	mov	w3, #0x2a7a                	// #10874
   28a28:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28a2c:	add	x2, x2, #0xfb8
   28a30:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28a34:	add	x1, x1, #0xab8
   28a38:	mov	x0, x23
   28a3c:	bl	5420 <Perl_croak@plt>
   28a40:	ldrb	w0, [x0, #13]
   28a44:	tbz	w0, #1, 28498 <my_regexec@@Base+0x4fa4>
   28a48:	ldr	x1, [x19, #24]
   28a4c:	cbz	x1, 28a5c <my_regexec@@Base+0x5568>
   28a50:	mov	w2, #0xb                   	// #11
   28a54:	mov	x0, x23
   28a58:	bl	54b0 <Perl_save_pushptr@plt>
   28a5c:	ldr	x1, [x19, #160]
   28a60:	cbz	x1, 28a70 <my_regexec@@Base+0x557c>
   28a64:	mov	w2, #0xa                   	// #10
   28a68:	mov	x0, x23
   28a6c:	bl	54b0 <Perl_save_pushptr@plt>
   28a70:	ldr	x1, [x19, #168]
   28a74:	cbz	x1, 28498 <my_regexec@@Base+0x4fa4>
   28a78:	mov	w2, #0xa                   	// #10
   28a7c:	mov	x0, x23
   28a80:	bl	54b0 <Perl_save_pushptr@plt>
   28a84:	b	28498 <my_regexec@@Base+0x4fa4>
   28a88:	ldr	x2, [x19, #8]
   28a8c:	subs	x8, x0, x2
   28a90:	b.mi	28a9c <my_regexec@@Base+0x55a8>  // b.first
   28a94:	sub	x6, x1, x0
   28a98:	b	284e8 <my_regexec@@Base+0x4ff4>
   28a9c:	ldr	x6, [x19, #48]
   28aa0:	ldr	x5, [x19, #56]
   28aa4:	sub	w5, w5, w6
   28aa8:	mov	x4, x8
   28aac:	mov	w3, #0x2a7a                	// #10874
   28ab0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28ab4:	add	x2, x2, #0xfb8
   28ab8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28abc:	add	x1, x1, #0x870
   28ac0:	mov	x0, x23
   28ac4:	bl	5420 <Perl_croak@plt>
   28ac8:	mov	w1, #0x14                  	// #20
   28acc:	mov	x0, x23
   28ad0:	bl	5870 <Perl_ckwarn@plt>
   28ad4:	and	w0, w0, #0xff
   28ad8:	cbz	w0, 28580 <my_regexec@@Base+0x508c>
   28adc:	ldr	w0, [sp, #156]
   28ae0:	tbnz	w0, #2, 28580 <my_regexec@@Base+0x508c>
   28ae4:	orr	w0, w0, #0x6
   28ae8:	str	w0, [sp, #156]
   28aec:	ldr	x1, [x19, #72]
   28af0:	cbz	x1, 28c08 <my_regexec@@Base+0x5714>
   28af4:	add	x0, x20, #0x1
   28af8:	sub	x1, x0, x1
   28afc:	ldr	x0, [x19, #80]
   28b00:	add	x0, x0, x1
   28b04:	ldr	x1, [x19, #8]
   28b08:	sub	x0, x0, x1
   28b0c:	ldr	x1, [x19, #136]
   28b10:	cmp	x0, x1
   28b14:	b.le	28580 <my_regexec@@Base+0x508c>
   28b18:	ldr	x0, [x23, #224]
   28b1c:	cbz	x0, 28b44 <my_regexec@@Base+0x5650>
   28b20:	ldr	x0, [x0, #64]
   28b24:	cmp	x0, #0x0
   28b28:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   28b2c:	ldr	x1, [x1, #3984]
   28b30:	ccmp	x0, x1, #0x4, ne  // ne = any
   28b34:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   28b38:	ldr	x1, [x1, #3832]
   28b3c:	ccmp	x0, x1, #0x4, ne  // ne = any
   28b40:	b.ne	28c28 <my_regexec@@Base+0x5734>  // b.any
   28b44:	ldr	x3, [sp, #160]
   28b48:	ldr	x4, [sp, #168]
   28b4c:	cmp	x21, x25
   28b50:	b.eq	28c70 <my_regexec@@Base+0x577c>  // b.none
   28b54:	ldr	w0, [x19, #192]
   28b58:	cmp	w0, #0x0
   28b5c:	cset	w5, ne  // ne = any
   28b60:	ldr	x0, [x19, #64]
   28b64:	add	x0, x0, #0x1
   28b68:	ldr	x1, [x19, #72]
   28b6c:	sub	x1, x0, x1
   28b70:	ldr	x0, [x19, #80]
   28b74:	add	x0, x0, x1
   28b78:	ldr	x1, [x19, #16]
   28b7c:	cmp	x0, x1
   28b80:	b.ls	28c84 <my_regexec@@Base+0x5790>  // b.plast
   28b84:	ldr	x7, [x19, #8]
   28b88:	sub	x6, x1, x7
   28b8c:	mov	x2, #0x0                   	// #0
   28b90:	cmp	x0, x1
   28b94:	csel	x0, x0, x1, ls  // ls = plast
   28b98:	str	x0, [sp, #16]
   28b9c:	str	x2, [sp, #8]
   28ba0:	str	w5, [sp]
   28ba4:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   28ba8:	add	x2, x2, #0xb58
   28bac:	mov	w1, #0x14                  	// #20
   28bb0:	mov	x0, x23
   28bb4:	bl	5110 <Perl_warner@plt>
   28bb8:	ldr	x1, [x19, #72]
   28bbc:	cbz	x1, 28580 <my_regexec@@Base+0x508c>
   28bc0:	ldr	x0, [x19, #64]
   28bc4:	add	x0, x0, #0x1
   28bc8:	sub	x0, x0, x1
   28bcc:	ldr	x1, [x19, #80]
   28bd0:	add	x0, x1, x0
   28bd4:	ldr	x2, [x19, #8]
   28bd8:	sub	x3, x0, x2
   28bdc:	ldr	x1, [x19, #136]
   28be0:	cmp	x3, x1
   28be4:	b.le	28580 <my_regexec@@Base+0x508c>
   28be8:	ldr	x1, [x19, #16]
   28bec:	cmp	x1, x0
   28bf0:	csel	x0, x1, x0, ls  // ls = plast
   28bf4:	cmp	x2, x0
   28bf8:	csel	x0, x2, x0, hi  // hi = pmore
   28bfc:	sub	x0, x0, x2
   28c00:	str	x0, [x19, #136]
   28c04:	b	28580 <my_regexec@@Base+0x508c>
   28c08:	add	x4, x20, #0x1
   28c0c:	mov	w3, #0x2a8b                	// #10891
   28c10:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28c14:	add	x2, x2, #0xfb8
   28c18:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28c1c:	add	x1, x1, #0xab8
   28c20:	mov	x0, x23
   28c24:	bl	5420 <Perl_croak@plt>
   28c28:	ldrb	w0, [x0, #13]
   28c2c:	tbz	w0, #1, 28b44 <my_regexec@@Base+0x5650>
   28c30:	ldr	x1, [x19, #24]
   28c34:	cbz	x1, 28c44 <my_regexec@@Base+0x5750>
   28c38:	mov	w2, #0xb                   	// #11
   28c3c:	mov	x0, x23
   28c40:	bl	54b0 <Perl_save_pushptr@plt>
   28c44:	ldr	x1, [x19, #160]
   28c48:	cbz	x1, 28c58 <my_regexec@@Base+0x5764>
   28c4c:	mov	w2, #0xa                   	// #10
   28c50:	mov	x0, x23
   28c54:	bl	54b0 <Perl_save_pushptr@plt>
   28c58:	ldr	x1, [x19, #168]
   28c5c:	cbz	x1, 28b44 <my_regexec@@Base+0x5650>
   28c60:	mov	w2, #0xa                   	// #10
   28c64:	mov	x0, x23
   28c68:	bl	54b0 <Perl_save_pushptr@plt>
   28c6c:	b	28b44 <my_regexec@@Base+0x5650>
   28c70:	adrp	x3, 76000 <boot_re@@Base+0x1441c>
   28c74:	add	x3, x3, #0x9c8
   28c78:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   28c7c:	add	x4, x4, #0x9d0
   28c80:	b	28b54 <my_regexec@@Base+0x5660>
   28c84:	ldr	x7, [x19, #8]
   28c88:	subs	x2, x0, x7
   28c8c:	b.mi	28c9c <my_regexec@@Base+0x57a8>  // b.first
   28c90:	mov	x6, x2
   28c94:	sub	x2, x1, x0
   28c98:	b	28b90 <my_regexec@@Base+0x569c>
   28c9c:	ldr	x6, [x19, #48]
   28ca0:	ldr	x5, [x19, #56]
   28ca4:	sub	w5, w5, w6
   28ca8:	mov	x4, x2
   28cac:	mov	w3, #0x2a8b                	// #10891
   28cb0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28cb4:	add	x2, x2, #0xfb8
   28cb8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28cbc:	add	x1, x1, #0x870
   28cc0:	mov	x0, x23
   28cc4:	bl	5420 <Perl_croak@plt>
   28cc8:	cmp	x21, x25
   28ccc:	b.eq	28ce0 <my_regexec@@Base+0x57ec>  // b.none
   28cd0:	ldr	w0, [x21]
   28cd4:	orr	w0, w0, #0x40
   28cd8:	str	w0, [x21]
   28cdc:	b	28580 <my_regexec@@Base+0x508c>
   28ce0:	ldr	x1, [x19, #72]
   28ce4:	cbz	x1, 28dec <my_regexec@@Base+0x58f8>
   28ce8:	add	x0, x20, #0x1
   28cec:	sub	x1, x0, x1
   28cf0:	ldr	x0, [x19, #80]
   28cf4:	add	x0, x0, x1
   28cf8:	ldr	x1, [x19, #8]
   28cfc:	sub	x0, x0, x1
   28d00:	ldr	x1, [x19, #136]
   28d04:	cmp	x0, x1
   28d08:	b.le	29088 <my_regexec@@Base+0x5b94>
   28d0c:	ldr	x0, [x23, #224]
   28d10:	cbz	x0, 28d38 <my_regexec@@Base+0x5844>
   28d14:	ldr	x0, [x0, #64]
   28d18:	cmp	x0, #0x0
   28d1c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   28d20:	ldr	x1, [x1, #3984]
   28d24:	ccmp	x0, x1, #0x4, ne  // ne = any
   28d28:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   28d2c:	ldr	x1, [x1, #3832]
   28d30:	ccmp	x0, x1, #0x4, ne  // ne = any
   28d34:	b.ne	28e0c <my_regexec@@Base+0x5918>  // b.any
   28d38:	ldr	w0, [x19, #192]
   28d3c:	cmp	w0, #0x0
   28d40:	cset	w3, ne  // ne = any
   28d44:	ldr	x0, [x19, #64]
   28d48:	add	x0, x0, #0x1
   28d4c:	ldr	x1, [x19, #72]
   28d50:	sub	x1, x0, x1
   28d54:	ldr	x0, [x19, #80]
   28d58:	add	x0, x0, x1
   28d5c:	ldr	x1, [x19, #16]
   28d60:	cmp	x0, x1
   28d64:	b.ls	28e54 <my_regexec@@Base+0x5960>  // b.plast
   28d68:	ldr	x5, [x19, #8]
   28d6c:	sub	x4, x1, x5
   28d70:	mov	x7, #0x0                   	// #0
   28d74:	cmp	x0, x1
   28d78:	csel	x0, x0, x1, ls  // ls = plast
   28d7c:	str	x0, [sp]
   28d80:	mov	w6, w3
   28d84:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   28d88:	add	x2, x2, #0xbc0
   28d8c:	mov	w1, #0x14                  	// #20
   28d90:	mov	x0, x23
   28d94:	bl	5150 <Perl_ck_warner@plt>
   28d98:	ldr	x1, [x19, #72]
   28d9c:	mov	x21, x25
   28da0:	cbz	x1, 28580 <my_regexec@@Base+0x508c>
   28da4:	ldr	x0, [x19, #64]
   28da8:	add	x0, x0, #0x1
   28dac:	sub	x0, x0, x1
   28db0:	ldr	x1, [x19, #80]
   28db4:	add	x1, x1, x0
   28db8:	ldr	x2, [x19, #8]
   28dbc:	sub	x3, x1, x2
   28dc0:	ldr	x0, [x19, #136]
   28dc4:	cmp	x3, x0
   28dc8:	b.le	28580 <my_regexec@@Base+0x508c>
   28dcc:	ldr	x0, [x19, #16]
   28dd0:	cmp	x0, x1
   28dd4:	csel	x0, x0, x1, ls  // ls = plast
   28dd8:	cmp	x2, x0
   28ddc:	csel	x0, x2, x0, hi  // hi = pmore
   28de0:	sub	x0, x0, x2
   28de4:	str	x0, [x19, #136]
   28de8:	b	28580 <my_regexec@@Base+0x508c>
   28dec:	add	x4, x20, #0x1
   28df0:	mov	w3, #0x2a96                	// #10902
   28df4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28df8:	add	x2, x2, #0xfb8
   28dfc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28e00:	add	x1, x1, #0xab8
   28e04:	mov	x0, x23
   28e08:	bl	5420 <Perl_croak@plt>
   28e0c:	ldrb	w0, [x0, #13]
   28e10:	tbz	w0, #1, 28d38 <my_regexec@@Base+0x5844>
   28e14:	ldr	x1, [x19, #24]
   28e18:	cbz	x1, 28e28 <my_regexec@@Base+0x5934>
   28e1c:	mov	w2, #0xb                   	// #11
   28e20:	mov	x0, x23
   28e24:	bl	54b0 <Perl_save_pushptr@plt>
   28e28:	ldr	x1, [x19, #160]
   28e2c:	cbz	x1, 28e3c <my_regexec@@Base+0x5948>
   28e30:	mov	w2, #0xa                   	// #10
   28e34:	mov	x0, x23
   28e38:	bl	54b0 <Perl_save_pushptr@plt>
   28e3c:	ldr	x1, [x19, #168]
   28e40:	cbz	x1, 28d38 <my_regexec@@Base+0x5844>
   28e44:	mov	w2, #0xa                   	// #10
   28e48:	mov	x0, x23
   28e4c:	bl	54b0 <Perl_save_pushptr@plt>
   28e50:	b	28d38 <my_regexec@@Base+0x5844>
   28e54:	ldr	x5, [x19, #8]
   28e58:	subs	x4, x0, x5
   28e5c:	b.mi	28e68 <my_regexec@@Base+0x5974>  // b.first
   28e60:	sub	x7, x1, x0
   28e64:	b	28d74 <my_regexec@@Base+0x5880>
   28e68:	ldr	x6, [x19, #48]
   28e6c:	ldr	x5, [x19, #56]
   28e70:	sub	w5, w5, w6
   28e74:	mov	w3, #0x2a96                	// #10902
   28e78:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   28e7c:	add	x2, x2, #0xfb8
   28e80:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   28e84:	add	x1, x1, #0x870
   28e88:	mov	x0, x23
   28e8c:	bl	5420 <Perl_croak@plt>
   28e90:	ldr	w0, [sp, #176]
   28e94:	and	w1, w0, #0x18
   28e98:	cmp	w1, #0x8
   28e9c:	b.eq	28f04 <my_regexec@@Base+0x5a10>  // b.none
   28ea0:	ldr	w1, [x19]
   28ea4:	orr	w1, w0, w1
   28ea8:	ldr	w0, [sp, #180]
   28eac:	tbz	w0, #3, 28eb8 <my_regexec@@Base+0x59c4>
   28eb0:	orr	w0, w0, #0x10
   28eb4:	str	w0, [sp, #180]
   28eb8:	ldr	w0, [sp, #180]
   28ebc:	bic	w0, w1, w0
   28ec0:	and	w0, w0, #0xfffffc7f
   28ec4:	orr	w22, w0, w22, lsl #7
   28ec8:	str	w22, [x19]
   28ecc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   28ed0:	ldr	x0, [x0, #3920]
   28ed4:	ldr	x1, [sp, #184]
   28ed8:	ldr	x0, [x0]
   28edc:	eor	x0, x1, x0
   28ee0:	cbnz	x0, 291a0 <my_regexec@@Base+0x5cac>
   28ee4:	ldp	x19, x20, [sp, #64]
   28ee8:	ldp	x21, x22, [sp, #80]
   28eec:	ldp	x23, x24, [sp, #96]
   28ef0:	ldp	x25, x26, [sp, #112]
   28ef4:	ldp	x27, x28, [sp, #128]
   28ef8:	ldp	x29, x30, [sp, #48]
   28efc:	add	sp, sp, #0xc0
   28f00:	ret
   28f04:	ldr	w1, [sp, #180]
   28f08:	orr	w1, w1, #0x10
   28f0c:	str	w1, [sp, #180]
   28f10:	b	28ea0 <my_regexec@@Base+0x59ac>
   28f14:	mov	x2, #0x0                   	// #0
   28f18:	cbnz	w0, 28fe0 <my_regexec@@Base+0x5aec>
   28f1c:	add	x20, x20, x2
   28f20:	str	x20, [x19, #64]
   28f24:	ldr	x1, [x19, #24]
   28f28:	cbz	x1, 28f38 <my_regexec@@Base+0x5a44>
   28f2c:	mov	w2, #0xb                   	// #11
   28f30:	mov	x0, x23
   28f34:	bl	54b0 <Perl_save_pushptr@plt>
   28f38:	ldr	x1, [x19, #160]
   28f3c:	cbz	x1, 28f4c <my_regexec@@Base+0x5a58>
   28f40:	mov	w2, #0xa                   	// #10
   28f44:	mov	x0, x23
   28f48:	bl	54b0 <Perl_save_pushptr@plt>
   28f4c:	ldr	x1, [x19, #168]
   28f50:	cbz	x1, 28f60 <my_regexec@@Base+0x5a6c>
   28f54:	mov	w2, #0xa                   	// #10
   28f58:	mov	x0, x23
   28f5c:	bl	54b0 <Perl_save_pushptr@plt>
   28f60:	ldr	x8, [x19, #64]
   28f64:	ldr	x0, [x19, #72]
   28f68:	sub	x1, x8, x0
   28f6c:	ldr	x0, [x19, #80]
   28f70:	add	x0, x0, x1
   28f74:	ldr	x2, [x19, #16]
   28f78:	cmp	x0, x2
   28f7c:	b.hi	29044 <my_regexec@@Base+0x5b50>  // b.pmore
   28f80:	ldr	x3, [x19, #8]
   28f84:	sub	x5, x2, x0
   28f88:	subs	x4, x0, x3
   28f8c:	b.mi	29054 <my_regexec@@Base+0x5b60>  // b.first
   28f90:	sub	x6, x26, #0x1
   28f94:	ldr	w1, [x19, #192]
   28f98:	cmp	w1, #0x0
   28f9c:	cset	w1, ne  // ne = any
   28fa0:	cmp	x0, x2
   28fa4:	csel	x0, x0, x2, ls  // ls = plast
   28fa8:	str	x0, [sp, #32]
   28fac:	str	x5, [sp, #24]
   28fb0:	str	w1, [sp, #16]
   28fb4:	str	x3, [sp, #8]
   28fb8:	str	x4, [sp]
   28fbc:	mov	w7, w1
   28fc0:	sub	x5, x8, x6
   28fc4:	mov	w4, w1
   28fc8:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   28fcc:	add	x3, x3, #0x5d8
   28fd0:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   28fd4:	add	x2, x2, #0xc48
   28fd8:	mov	x0, x23
   28fdc:	bl	273ac <my_regexec@@Base+0x3eb8>
   28fe0:	ldr	w2, [x19, #192]
   28fe4:	cbz	w2, 2903c <my_regexec@@Base+0x5b48>
   28fe8:	cmp	x20, x1
   28fec:	b.hi	29018 <my_regexec@@Base+0x5b24>  // b.pmore
   28ff0:	sub	x1, x1, x20
   28ff4:	mov	x2, #0x0                   	// #0
   28ff8:	cmp	x1, #0x0
   28ffc:	b.le	28f1c <my_regexec@@Base+0x5a28>
   29000:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   29004:	ldr	x2, [x2, #4064]
   29008:	ldrb	w2, [x2, w0, sxtw]
   2900c:	cmp	x2, x1
   29010:	csel	x2, x2, x1, le
   29014:	b	28f1c <my_regexec@@Base+0x5a28>
   29018:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2901c:	add	x3, x3, #0xc10
   29020:	add	x3, x3, #0xf8
   29024:	mov	w2, #0x2ab7                	// #10935
   29028:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2902c:	add	x1, x1, #0xfb8
   29030:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   29034:	add	x0, x0, #0xc18
   29038:	bl	58e0 <__assert_fail@plt>
   2903c:	mov	x2, #0x1                   	// #1
   29040:	b	28f1c <my_regexec@@Base+0x5a28>
   29044:	ldr	x3, [x19, #8]
   29048:	sub	x4, x2, x3
   2904c:	mov	x5, #0x0                   	// #0
   29050:	b	28f90 <my_regexec@@Base+0x5a9c>
   29054:	ldr	x6, [x19, #48]
   29058:	ldr	x5, [x19, #56]
   2905c:	sub	w5, w5, w6
   29060:	mov	w3, #0x2ab9                	// #10937
   29064:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   29068:	add	x2, x2, #0xfb8
   2906c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   29070:	add	x1, x1, #0x870
   29074:	mov	x0, x23
   29078:	bl	5420 <Perl_croak@plt>
   2907c:	mov	w24, w0
   29080:	mov	w22, #0x3                   	// #3
   29084:	b	28580 <my_regexec@@Base+0x508c>
   29088:	mov	x21, x25
   2908c:	b	28580 <my_regexec@@Base+0x508c>
   29090:	ldr	x1, [x19, #24]
   29094:	cbz	x1, 290a4 <my_regexec@@Base+0x5bb0>
   29098:	mov	w2, #0xb                   	// #11
   2909c:	mov	x0, x23
   290a0:	bl	54b0 <Perl_save_pushptr@plt>
   290a4:	ldr	x1, [x19, #160]
   290a8:	cbz	x1, 290b8 <my_regexec@@Base+0x5bc4>
   290ac:	mov	w2, #0xa                   	// #10
   290b0:	mov	x0, x23
   290b4:	bl	54b0 <Perl_save_pushptr@plt>
   290b8:	ldr	x1, [x19, #168]
   290bc:	cbz	x1, 290cc <my_regexec@@Base+0x5bd8>
   290c0:	mov	w2, #0xa                   	// #10
   290c4:	mov	x0, x23
   290c8:	bl	54b0 <Perl_save_pushptr@plt>
   290cc:	ldr	x0, [x19, #64]
   290d0:	ldr	x1, [x19, #72]
   290d4:	sub	x1, x0, x1
   290d8:	ldr	x0, [x19, #80]
   290dc:	add	x0, x0, x1
   290e0:	ldr	x1, [x19, #16]
   290e4:	cmp	x0, x1
   290e8:	b.hi	29130 <my_regexec@@Base+0x5c3c>  // b.pmore
   290ec:	ldr	x5, [x19, #8]
   290f0:	sub	x7, x1, x0
   290f4:	subs	x4, x0, x5
   290f8:	b.mi	29140 <my_regexec@@Base+0x5c4c>  // b.first
   290fc:	ldr	w2, [x19, #192]
   29100:	cmp	w2, #0x0
   29104:	cset	w3, ne  // ne = any
   29108:	cmp	x0, x1
   2910c:	csel	x0, x0, x1, ls  // ls = plast
   29110:	str	x0, [sp]
   29114:	mov	w6, w3
   29118:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   2911c:	add	x2, x2, #0xc70
   29120:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   29124:	add	x1, x1, #0x3a8
   29128:	mov	x0, x23
   2912c:	bl	5420 <Perl_croak@plt>
   29130:	ldr	x5, [x19, #8]
   29134:	sub	x4, x1, x5
   29138:	mov	x7, #0x0                   	// #0
   2913c:	b	290fc <my_regexec@@Base+0x5c08>
   29140:	ldr	x6, [x19, #48]
   29144:	ldr	x5, [x19, #56]
   29148:	sub	w5, w5, w6
   2914c:	mov	w3, #0x2ac1                	// #10945
   29150:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   29154:	add	x2, x2, #0xfb8
   29158:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2915c:	add	x1, x1, #0x870
   29160:	mov	x0, x23
   29164:	bl	5420 <Perl_croak@plt>
   29168:	ldr	x0, [x19, #64]
   2916c:	ldrb	w4, [x0]
   29170:	adrp	x3, 76000 <boot_re@@Base+0x1441c>
   29174:	add	x3, x3, #0x9c8
   29178:	adrp	x5, 76000 <boot_re@@Base+0x1441c>
   2917c:	add	x5, x5, #0x9d0
   29180:	b	284b0 <my_regexec@@Base+0x4fbc>
   29184:	mov	w1, #0x14                  	// #20
   29188:	mov	x0, x23
   2918c:	bl	5870 <Perl_ckwarn@plt>
   29190:	and	w0, w0, #0xff
   29194:	cbz	w0, 28580 <my_regexec@@Base+0x508c>
   29198:	mov	w0, #0x2                   	// #2
   2919c:	b	2842c <my_regexec@@Base+0x4f38>
   291a0:	bl	5300 <__stack_chk_fail@plt>
   291a4:	stp	x29, x30, [sp, #-32]!
   291a8:	mov	x29, sp
   291ac:	str	x19, [sp, #16]
   291b0:	mov	x19, x0
   291b4:	bl	59d0 <Perl__invlist_search@plt>
   291b8:	cbz	x19, 291d8 <my_regexec@@Base+0x5ce4>
   291bc:	mvn	x1, x0
   291c0:	and	x1, x1, #0x1
   291c4:	cmp	x0, #0x0
   291c8:	csel	w0, w1, wzr, ge  // ge = tcont
   291cc:	ldr	x19, [sp, #16]
   291d0:	ldp	x29, x30, [sp], #32
   291d4:	ret
   291d8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   291dc:	add	x3, x3, #0xc10
   291e0:	add	x3, x3, #0x118
   291e4:	mov	w2, #0x3f                  	// #63
   291e8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   291ec:	add	x1, x1, #0x550
   291f0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   291f4:	add	x0, x0, #0x568
   291f8:	bl	58e0 <__assert_fail@plt>
   291fc:	stp	x29, x30, [sp, #-64]!
   29200:	mov	x29, sp
   29204:	stp	x19, x20, [sp, #16]
   29208:	stp	x21, x22, [sp, #32]
   2920c:	str	x23, [sp, #48]
   29210:	cbz	x2, 29280 <my_regexec@@Base+0x5d8c>
   29214:	mov	x20, x0
   29218:	mov	x19, x1
   2921c:	mov	x21, x2
   29220:	mov	x22, x3
   29224:	cbz	x1, 292a4 <my_regexec@@Base+0x5db0>
   29228:	mov	x2, x22
   2922c:	mov	x1, x19
   29230:	mov	x0, x20
   29234:	bl	5840 <Perl_av_exists@plt>
   29238:	and	w0, w0, #0xff
   2923c:	cbz	w0, 292b4 <my_regexec@@Base+0x5dc0>
   29240:	mov	w3, #0x0                   	// #0
   29244:	mov	x2, x22
   29248:	mov	x1, x19
   2924c:	mov	x0, x20
   29250:	bl	56f0 <Perl_av_fetch@plt>
   29254:	ldr	x23, [x0]
   29258:	mov	x2, x21
   2925c:	mov	x1, x23
   29260:	mov	x0, x20
   29264:	bl	5430 <Perl_av_push@plt>
   29268:	mov	x0, x19
   2926c:	ldp	x19, x20, [sp, #16]
   29270:	ldp	x21, x22, [sp, #32]
   29274:	ldr	x23, [sp, #48]
   29278:	ldp	x29, x30, [sp], #64
   2927c:	ret
   29280:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29284:	add	x3, x3, #0xc10
   29288:	add	x3, x3, #0x130
   2928c:	mov	w2, #0x40d3                	// #16595
   29290:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29294:	add	x1, x1, #0xfb8
   29298:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2929c:	add	x0, x0, #0xc90
   292a0:	bl	58e0 <__assert_fail@plt>
   292a4:	mov	w1, #0xb                   	// #11
   292a8:	bl	57e0 <Perl_newSV_type@plt>
   292ac:	mov	x19, x0
   292b0:	b	29228 <my_regexec@@Base+0x5d34>
   292b4:	mov	w1, #0xb                   	// #11
   292b8:	mov	x0, x20
   292bc:	bl	57e0 <Perl_newSV_type@plt>
   292c0:	mov	x23, x0
   292c4:	mov	x3, x0
   292c8:	mov	x2, x22
   292cc:	mov	x1, x19
   292d0:	mov	x0, x20
   292d4:	bl	51a0 <Perl_av_store@plt>
   292d8:	b	29258 <my_regexec@@Base+0x5d64>
   292dc:	stp	x29, x30, [sp, #-16]!
   292e0:	mov	x29, sp
   292e4:	sub	x5, x1, x2
   292e8:	cbz	x1, 29348 <my_regexec@@Base+0x5e54>
   292ec:	ldrb	w6, [x1]
   292f0:	sub	w3, w6, #0x38
   292f4:	and	w3, w3, #0xff
   292f8:	cmp	w3, #0x1
   292fc:	b.hi	2936c <my_regexec@@Base+0x5e78>  // b.pmore
   29300:	ldrb	w3, [x5]
   29304:	cmp	w3, #0x30
   29308:	b.ne	29318 <my_regexec@@Base+0x5e24>  // b.any
   2930c:	ldrb	w4, [x5, #1]!
   29310:	cmp	w4, #0x30
   29314:	b.eq	2930c <my_regexec@@Base+0x5e18>  // b.none
   29318:	cmp	x1, x5
   2931c:	cset	x3, eq  // eq = none
   29320:	sub	x5, x5, x3
   29324:	mvn	x3, x2
   29328:	sub	w4, w1, w5
   2932c:	add	x3, x1, x3
   29330:	add	w2, w2, #0x2
   29334:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   29338:	add	x1, x1, #0xcd0
   2933c:	bl	55f0 <Perl_form@plt>
   29340:	ldp	x29, x30, [sp], #16
   29344:	ret
   29348:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2934c:	add	x3, x3, #0xc10
   29350:	add	x3, x3, #0x148
   29354:	mov	w2, #0x33                  	// #51
   29358:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2935c:	add	x1, x1, #0xca0
   29360:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   29364:	add	x0, x0, #0xce8
   29368:	bl	58e0 <__assert_fail@plt>
   2936c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29370:	add	x3, x3, #0xc10
   29374:	add	x3, x3, #0x148
   29378:	mov	w2, #0x35                  	// #53
   2937c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   29380:	add	x1, x1, #0xca0
   29384:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   29388:	add	x0, x0, #0xcb8
   2938c:	bl	58e0 <__assert_fail@plt>
   29390:	sub	sp, sp, #0x80
   29394:	stp	x29, x30, [sp, #16]
   29398:	add	x29, sp, #0x10
   2939c:	stp	x21, x22, [sp, #48]
   293a0:	mov	x22, x0
   293a4:	mov	x21, x1
   293a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   293ac:	ldr	x0, [x0, #3920]
   293b0:	ldr	x1, [x0]
   293b4:	str	x1, [sp, #120]
   293b8:	mov	x1, #0x0                   	// #0
   293bc:	cbz	x21, 29548 <my_regexec@@Base+0x6054>
   293c0:	stp	x19, x20, [sp, #32]
   293c4:	and	w19, w2, #0xff
   293c8:	mov	x20, x3
   293cc:	cbz	x3, 29574 <my_regexec@@Base+0x6080>
   293d0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   293d4:	ldr	x0, [x0, #3880]
   293d8:	ldr	w0, [x0, w19, sxtw #2]
   293dc:	tbz	w0, #19, 2959c <my_regexec@@Base+0x60a8>
   293e0:	cmp	w19, #0xb5
   293e4:	b.eq	296b4 <my_regexec@@Base+0x61c0>  // b.none
   293e8:	b.hi	295fc <my_regexec@@Base+0x6108>  // b.pmore
   293ec:	cmp	w19, #0x6b
   293f0:	b.eq	29670 <my_regexec@@Base+0x617c>  // b.none
   293f4:	b.ls	295c4 <my_regexec@@Base+0x60d0>  // b.plast
   293f8:	cmp	w19, #0x73
   293fc:	b.eq	295d4 <my_regexec@@Base+0x60e0>  // b.none
   29400:	str	x23, [sp, #64]
   29404:	sxtb	w0, w19
   29408:	tbnz	w19, #7, 29634 <my_regexec@@Base+0x6140>
   2940c:	sub	w1, w19, #0x41
   29410:	add	w0, w0, #0x20
   29414:	and	x0, x0, #0xff
   29418:	and	x23, x19, #0xff
   2941c:	cmp	w1, #0x19
   29420:	csel	x23, x23, x0, hi  // hi = pmore
   29424:	add	x3, sp, #0x60
   29428:	add	x2, sp, #0x5c
   2942c:	mov	x1, x23
   29430:	mov	x0, x22
   29434:	bl	5a00 <Perl__inverse_folds@plt>
   29438:	mov	x23, x0
   2943c:	cbnz	x0, 297b0 <my_regexec@@Base+0x62bc>
   29440:	ldr	x1, [x21, #72]
   29444:	cbz	x1, 29704 <my_regexec@@Base+0x6210>
   29448:	ldr	x0, [x21, #64]
   2944c:	sub	x1, x0, x1
   29450:	ldr	x0, [x21, #80]
   29454:	add	x0, x0, x1
   29458:	ldr	x1, [x21, #8]
   2945c:	sub	x0, x0, x1
   29460:	ldr	x1, [x21, #136]
   29464:	cmp	x0, x1
   29468:	b.le	29830 <my_regexec@@Base+0x633c>
   2946c:	ldr	x0, [x22, #224]
   29470:	cbz	x0, 29498 <my_regexec@@Base+0x5fa4>
   29474:	ldr	x0, [x0, #64]
   29478:	cmp	x0, #0x0
   2947c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   29480:	ldr	x1, [x1, #3984]
   29484:	ccmp	x0, x1, #0x4, ne  // ne = any
   29488:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2948c:	ldr	x1, [x1, #3832]
   29490:	ccmp	x0, x1, #0x4, ne  // ne = any
   29494:	b.ne	29724 <my_regexec@@Base+0x6230>  // b.any
   29498:	ldr	w0, [x21, #192]
   2949c:	cmp	w0, #0x0
   294a0:	cset	w4, ne  // ne = any
   294a4:	ldr	x0, [x21, #64]
   294a8:	ldr	x1, [x21, #72]
   294ac:	sub	x1, x0, x1
   294b0:	ldr	x0, [x21, #80]
   294b4:	add	x0, x0, x1
   294b8:	ldr	x1, [x21, #16]
   294bc:	cmp	x0, x1
   294c0:	b.ls	2976c <my_regexec@@Base+0x6278>  // b.plast
   294c4:	ldr	x6, [x21, #8]
   294c8:	sub	x5, x1, x6
   294cc:	cmp	x0, x1
   294d0:	csel	x0, x0, x1, ls  // ls = plast
   294d4:	str	x0, [sp, #8]
   294d8:	str	x23, [sp]
   294dc:	mov	w7, w4
   294e0:	mov	w3, w19
   294e4:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   294e8:	add	x2, x2, #0xd18
   294ec:	mov	w1, #0x14                  	// #20
   294f0:	mov	x0, x22
   294f4:	bl	5630 <Perl_ck_warner_d@plt>
   294f8:	ldr	x1, [x21, #72]
   294fc:	cbz	x1, 29838 <my_regexec@@Base+0x6344>
   29500:	ldr	x0, [x21, #64]
   29504:	sub	x1, x0, x1
   29508:	ldr	x0, [x21, #80]
   2950c:	add	x0, x0, x1
   29510:	ldr	x2, [x21, #8]
   29514:	sub	x3, x0, x2
   29518:	ldr	x1, [x21, #136]
   2951c:	cmp	x3, x1
   29520:	b.le	29840 <my_regexec@@Base+0x634c>
   29524:	ldr	x1, [x21, #16]
   29528:	cmp	x1, x0
   2952c:	csel	x0, x1, x0, ls  // ls = plast
   29530:	cmp	x2, x0
   29534:	csel	x0, x2, x0, hi  // hi = pmore
   29538:	sub	x0, x0, x2
   2953c:	str	x0, [x21, #136]
   29540:	ldr	x23, [sp, #64]
   29544:	b	29688 <my_regexec@@Base+0x6194>
   29548:	stp	x19, x20, [sp, #32]
   2954c:	str	x23, [sp, #64]
   29550:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29554:	add	x3, x3, #0xc10
   29558:	add	x3, x3, #0x168
   2955c:	mov	w2, #0x404d                	// #16461
   29560:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29564:	add	x1, x1, #0xfb8
   29568:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2956c:	add	x0, x0, #0xfe8
   29570:	bl	58e0 <__assert_fail@plt>
   29574:	str	x23, [sp, #64]
   29578:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2957c:	add	x3, x3, #0xc10
   29580:	add	x3, x3, #0x168
   29584:	mov	w2, #0x404d                	// #16461
   29588:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2958c:	add	x1, x1, #0xfb8
   29590:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   29594:	add	x0, x0, #0x568
   29598:	bl	58e0 <__assert_fail@plt>
   2959c:	str	x23, [sp, #64]
   295a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   295a4:	add	x3, x3, #0xc10
   295a8:	add	x3, x3, #0x168
   295ac:	mov	w2, #0x404f                	// #16463
   295b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   295b4:	add	x1, x1, #0xfb8
   295b8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   295bc:	add	x0, x0, #0xcf0
   295c0:	bl	58e0 <__assert_fail@plt>
   295c4:	cmp	w19, #0x4b
   295c8:	b.eq	29670 <my_regexec@@Base+0x617c>  // b.none
   295cc:	cmp	w19, #0x53
   295d0:	b.ne	295f0 <my_regexec@@Base+0x60fc>  // b.any
   295d4:	mov	x3, #0x17f                 	// #383
   295d8:	mov	x2, x3
   295dc:	ldr	x1, [x20]
   295e0:	mov	x0, x22
   295e4:	bl	5450 <Perl__add_range_to_invlist@plt>
   295e8:	str	x0, [x20]
   295ec:	b	29688 <my_regexec@@Base+0x6194>
   295f0:	str	x23, [sp, #64]
   295f4:	sxtb	w0, w19
   295f8:	b	2940c <my_regexec@@Base+0x5f18>
   295fc:	cmp	w19, #0xe5
   29600:	b.eq	296e8 <my_regexec@@Base+0x61f4>  // b.none
   29604:	cmp	w19, #0xff
   29608:	b.ne	29628 <my_regexec@@Base+0x6134>  // b.any
   2960c:	mov	x3, #0x178                 	// #376
   29610:	mov	x2, x3
   29614:	ldr	x1, [x20]
   29618:	mov	x0, x22
   2961c:	bl	5450 <Perl__add_range_to_invlist@plt>
   29620:	str	x0, [x20]
   29624:	b	29688 <my_regexec@@Base+0x6194>
   29628:	cmp	w19, #0xc5
   2962c:	b.eq	296e8 <my_regexec@@Base+0x61f4>  // b.none
   29630:	str	x23, [sp, #64]
   29634:	mov	w3, #0x0                   	// #0
   29638:	add	x2, sp, #0x60
   2963c:	add	x1, sp, #0x68
   29640:	mov	w0, w19
   29644:	bl	5910 <Perl__to_fold_latin1@plt>
   29648:	mov	x23, x0
   2964c:	cmp	x0, #0xff
   29650:	b.ls	29424 <my_regexec@@Base+0x5f30>  // b.plast
   29654:	mov	x3, x0
   29658:	mov	x2, x0
   2965c:	ldr	x1, [x20]
   29660:	mov	x0, x22
   29664:	bl	5450 <Perl__add_range_to_invlist@plt>
   29668:	str	x0, [x20]
   2966c:	b	29424 <my_regexec@@Base+0x5f30>
   29670:	mov	x3, #0x212a                	// #8490
   29674:	mov	x2, x3
   29678:	ldr	x1, [x20]
   2967c:	mov	x0, x22
   29680:	bl	5450 <Perl__add_range_to_invlist@plt>
   29684:	str	x0, [x20]
   29688:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2968c:	ldr	x0, [x0, #3920]
   29690:	ldr	x1, [sp, #120]
   29694:	ldr	x0, [x0]
   29698:	eor	x0, x1, x0
   2969c:	cbnz	x0, 29850 <my_regexec@@Base+0x635c>
   296a0:	ldp	x19, x20, [sp, #32]
   296a4:	ldp	x21, x22, [sp, #48]
   296a8:	ldp	x29, x30, [sp, #16]
   296ac:	add	sp, sp, #0x80
   296b0:	ret
   296b4:	mov	x3, #0x39c                 	// #924
   296b8:	mov	x2, x3
   296bc:	ldr	x1, [x20]
   296c0:	mov	x0, x22
   296c4:	bl	5450 <Perl__add_range_to_invlist@plt>
   296c8:	mov	x1, x0
   296cc:	str	x0, [x20]
   296d0:	mov	x3, #0x3bc                 	// #956
   296d4:	mov	x2, x3
   296d8:	mov	x0, x22
   296dc:	bl	5450 <Perl__add_range_to_invlist@plt>
   296e0:	str	x0, [x20]
   296e4:	b	29688 <my_regexec@@Base+0x6194>
   296e8:	mov	x3, #0x212b                	// #8491
   296ec:	mov	x2, x3
   296f0:	ldr	x1, [x20]
   296f4:	mov	x0, x22
   296f8:	bl	5450 <Perl__add_range_to_invlist@plt>
   296fc:	str	x0, [x20]
   29700:	b	29688 <my_regexec@@Base+0x6194>
   29704:	ldr	x4, [x21, #64]
   29708:	mov	w3, #0x4084                	// #16516
   2970c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   29710:	add	x2, x2, #0xfb8
   29714:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   29718:	add	x1, x1, #0xab8
   2971c:	mov	x0, x22
   29720:	bl	5420 <Perl_croak@plt>
   29724:	ldrb	w0, [x0, #13]
   29728:	tbz	w0, #1, 29498 <my_regexec@@Base+0x5fa4>
   2972c:	ldr	x1, [x21, #24]
   29730:	cbz	x1, 29740 <my_regexec@@Base+0x624c>
   29734:	mov	w2, #0xb                   	// #11
   29738:	mov	x0, x22
   2973c:	bl	54b0 <Perl_save_pushptr@plt>
   29740:	ldr	x1, [x21, #160]
   29744:	cbz	x1, 29754 <my_regexec@@Base+0x6260>
   29748:	mov	w2, #0xa                   	// #10
   2974c:	mov	x0, x22
   29750:	bl	54b0 <Perl_save_pushptr@plt>
   29754:	ldr	x1, [x21, #168]
   29758:	cbz	x1, 29498 <my_regexec@@Base+0x5fa4>
   2975c:	mov	w2, #0xa                   	// #10
   29760:	mov	x0, x22
   29764:	bl	54b0 <Perl_save_pushptr@plt>
   29768:	b	29498 <my_regexec@@Base+0x5fa4>
   2976c:	ldr	x6, [x21, #8]
   29770:	subs	x2, x0, x6
   29774:	b.mi	29784 <my_regexec@@Base+0x6290>  // b.first
   29778:	mov	x5, x2
   2977c:	sub	x23, x1, x0
   29780:	b	294cc <my_regexec@@Base+0x5fd8>
   29784:	ldr	x6, [x21, #48]
   29788:	ldr	x5, [x21, #56]
   2978c:	sub	w5, w5, w6
   29790:	mov	x4, x2
   29794:	mov	w3, #0x4084                	// #16516
   29798:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2979c:	add	x2, x2, #0xfb8
   297a0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   297a4:	add	x1, x1, #0x870
   297a8:	mov	x0, x22
   297ac:	bl	5420 <Perl_croak@plt>
   297b0:	ldr	w0, [sp, #92]
   297b4:	cmp	w0, #0xff
   297b8:	b.hi	297d0 <my_regexec@@Base+0x62dc>  // b.pmore
   297bc:	subs	x23, x23, #0x1
   297c0:	b.eq	29848 <my_regexec@@Base+0x6354>  // b.none
   297c4:	mov	w19, #0x0                   	// #0
   297c8:	mov	x0, #0x0                   	// #0
   297cc:	b	29814 <my_regexec@@Base+0x6320>
   297d0:	mov	w2, w0
   297d4:	mov	x3, x2
   297d8:	ldr	x1, [x20]
   297dc:	mov	x0, x22
   297e0:	bl	5450 <Perl__add_range_to_invlist@plt>
   297e4:	str	x0, [x20]
   297e8:	b	297bc <my_regexec@@Base+0x62c8>
   297ec:	mov	w2, w2
   297f0:	mov	x3, x2
   297f4:	ldr	x1, [x20]
   297f8:	mov	x0, x22
   297fc:	bl	5450 <Perl__add_range_to_invlist@plt>
   29800:	str	x0, [x20]
   29804:	add	w19, w19, #0x1
   29808:	mov	w0, w19
   2980c:	cmp	x23, w19, uxtw
   29810:	b.ls	29828 <my_regexec@@Base+0x6334>  // b.plast
   29814:	ldr	x1, [sp, #96]
   29818:	ldr	w2, [x1, x0, lsl #2]
   2981c:	cmp	w2, #0xff
   29820:	b.ls	29804 <my_regexec@@Base+0x6310>  // b.plast
   29824:	b	297ec <my_regexec@@Base+0x62f8>
   29828:	ldr	x23, [sp, #64]
   2982c:	b	29688 <my_regexec@@Base+0x6194>
   29830:	ldr	x23, [sp, #64]
   29834:	b	29688 <my_regexec@@Base+0x6194>
   29838:	ldr	x23, [sp, #64]
   2983c:	b	29688 <my_regexec@@Base+0x6194>
   29840:	ldr	x23, [sp, #64]
   29844:	b	29688 <my_regexec@@Base+0x6194>
   29848:	ldr	x23, [sp, #64]
   2984c:	b	29688 <my_regexec@@Base+0x6194>
   29850:	str	x23, [sp, #64]
   29854:	bl	5300 <__stack_chk_fail@plt>
   29858:	stp	x29, x30, [sp, #-80]!
   2985c:	mov	x29, sp
   29860:	cbz	x1, 29950 <my_regexec@@Base+0x645c>
   29864:	stp	x19, x20, [sp, #16]
   29868:	stp	x21, x22, [sp, #32]
   2986c:	stp	x23, x24, [sp, #48]
   29870:	mov	x20, x0
   29874:	mov	x21, x1
   29878:	mov	x24, x2
   2987c:	mov	x23, x3
   29880:	mov	x19, x4
   29884:	mov	x22, x5
   29888:	cbz	x2, 29984 <my_regexec@@Base+0x6490>
   2988c:	orr	x0, x4, x5
   29890:	orr	x0, x3, x0
   29894:	cbz	x0, 299ac <my_regexec@@Base+0x64b8>
   29898:	str	x25, [sp, #64]
   2989c:	mov	w1, #0xb                   	// #11
   298a0:	mov	x0, x20
   298a4:	bl	57e0 <Perl_newSV_type@plt>
   298a8:	mov	x25, x0
   298ac:	cbz	x23, 298c4 <my_regexec@@Base+0x63d0>
   298b0:	mov	x3, x23
   298b4:	mov	x2, #0x0                   	// #0
   298b8:	mov	x1, x0
   298bc:	mov	x0, x20
   298c0:	bl	51a0 <Perl_av_store@plt>
   298c4:	cbz	x22, 298dc <my_regexec@@Base+0x63e8>
   298c8:	mov	x3, x22
   298cc:	mov	x2, #0x1                   	// #1
   298d0:	mov	x1, x25
   298d4:	mov	x0, x20
   298d8:	bl	51a0 <Perl_av_store@plt>
   298dc:	cbz	x19, 29900 <my_regexec@@Base+0x640c>
   298e0:	ldr	w0, [x19, #8]
   298e4:	add	w0, w0, #0x1
   298e8:	str	w0, [x19, #8]
   298ec:	mov	x3, x19
   298f0:	mov	x2, #0x2                   	// #2
   298f4:	mov	x1, x25
   298f8:	mov	x0, x20
   298fc:	bl	51a0 <Perl_av_store@plt>
   29900:	mov	x1, x25
   29904:	mov	x0, x20
   29908:	bl	4f00 <Perl_newRV_noinc@plt>
   2990c:	mov	x19, x0
   29910:	mov	w2, #0x1                   	// #1
   29914:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   29918:	add	x1, x1, #0xce8
   2991c:	mov	x0, x21
   29920:	bl	26be8 <my_regexec@@Base+0x36f4>
   29924:	ldr	x1, [x21, #40]
   29928:	ldr	x1, [x1, #24]
   2992c:	add	x1, x1, w0, uxtw #3
   29930:	str	x19, [x1, #16]
   29934:	str	w0, [x24, #4]
   29938:	ldr	x25, [sp, #64]
   2993c:	ldp	x19, x20, [sp, #16]
   29940:	ldp	x21, x22, [sp, #32]
   29944:	ldp	x23, x24, [sp, #48]
   29948:	ldp	x29, x30, [sp], #80
   2994c:	ret
   29950:	stp	x19, x20, [sp, #16]
   29954:	stp	x21, x22, [sp, #32]
   29958:	stp	x23, x24, [sp, #48]
   2995c:	str	x25, [sp, #64]
   29960:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29964:	add	x3, x3, #0xc10
   29968:	add	x3, x3, #0x188
   2996c:	mov	w2, #0x4ac6                	// #19142
   29970:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29974:	add	x1, x1, #0xfb8
   29978:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2997c:	add	x0, x0, #0xfe8
   29980:	bl	58e0 <__assert_fail@plt>
   29984:	str	x25, [sp, #64]
   29988:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2998c:	add	x3, x3, #0xc10
   29990:	add	x3, x3, #0x188
   29994:	mov	w2, #0x4ac6                	// #19142
   29998:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2999c:	add	x1, x1, #0xfb8
   299a0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   299a4:	add	x0, x0, #0xdb8
   299a8:	bl	58e0 <__assert_fail@plt>
   299ac:	ldrb	w0, [x2]
   299b0:	tbnz	w0, #6, 299c0 <my_regexec@@Base+0x64cc>
   299b4:	mov	w0, #0xffffffff            	// #-1
   299b8:	str	w0, [x2, #4]
   299bc:	b	2993c <my_regexec@@Base+0x6448>
   299c0:	str	x25, [sp, #64]
   299c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   299c8:	add	x3, x3, #0xc10
   299cc:	add	x3, x3, #0x188
   299d0:	mov	w2, #0x4ac9                	// #19145
   299d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   299d8:	add	x1, x1, #0xfb8
   299dc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   299e0:	add	x0, x0, #0xdc0
   299e4:	bl	58e0 <__assert_fail@plt>
   299e8:	stp	x29, x30, [sp, #-48]!
   299ec:	mov	x29, sp
   299f0:	str	x21, [sp, #32]
   299f4:	mov	x21, x0
   299f8:	ldr	w0, [x1]
   299fc:	sub	w0, w0, #0x1
   29a00:	str	w0, [x1]
   29a04:	cmp	w0, #0x0
   29a08:	b.gt	29a84 <my_regexec@@Base+0x6590>
   29a0c:	stp	x19, x20, [sp, #16]
   29a10:	mov	x20, x1
   29a14:	ldr	w0, [x1, #4]
   29a18:	cmp	w0, #0x0
   29a1c:	b.le	29a70 <my_regexec@@Base+0x657c>
   29a20:	mov	w19, #0x0                   	// #0
   29a24:	b	29a40 <my_regexec@@Base+0x654c>
   29a28:	sub	w2, w2, #0x1
   29a2c:	str	w2, [x1, #8]
   29a30:	add	w19, w19, #0x1
   29a34:	ldr	w0, [x20, #4]
   29a38:	cmp	w0, w19
   29a3c:	b.le	29a70 <my_regexec@@Base+0x657c>
   29a40:	sbfiz	x2, x19, #5, #32
   29a44:	ldr	x3, [x20, #8]
   29a48:	add	x2, x3, x2
   29a4c:	ldr	x1, [x2, #24]
   29a50:	cbz	x1, 29a30 <my_regexec@@Base+0x653c>
   29a54:	str	xzr, [x2, #24]
   29a58:	ldr	w2, [x1, #8]
   29a5c:	cmp	w2, #0x1
   29a60:	b.hi	29a28 <my_regexec@@Base+0x6534>  // b.pmore
   29a64:	mov	x0, x21
   29a68:	bl	5860 <Perl_sv_free2@plt>
   29a6c:	b	29a30 <my_regexec@@Base+0x653c>
   29a70:	ldr	x0, [x20, #8]
   29a74:	bl	5650 <Perl_safesysfree@plt>
   29a78:	mov	x0, x20
   29a7c:	bl	5650 <Perl_safesysfree@plt>
   29a80:	ldp	x19, x20, [sp, #16]
   29a84:	ldr	x21, [sp, #32]
   29a88:	ldp	x29, x30, [sp], #48
   29a8c:	ret
   29a90:	stp	x29, x30, [sp, #-80]!
   29a94:	mov	x29, sp
   29a98:	stp	x19, x20, [sp, #16]
   29a9c:	stp	x21, x22, [sp, #32]
   29aa0:	stp	x23, x24, [sp, #48]
   29aa4:	mov	x20, x0
   29aa8:	mov	x22, x1
   29aac:	mov	x21, x2
   29ab0:	ldr	x0, [x0, #224]
   29ab4:	mov	w23, #0x0                   	// #0
   29ab8:	cbz	x0, 29ae0 <my_regexec@@Base+0x65ec>
   29abc:	ldr	x0, [x0, #64]
   29ac0:	cmp	x0, #0x0
   29ac4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   29ac8:	ldr	x1, [x1, #3984]
   29acc:	ccmp	x0, x1, #0x4, ne  // ne = any
   29ad0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   29ad4:	ldr	x1, [x1, #3832]
   29ad8:	ccmp	x0, x1, #0x4, ne  // ne = any
   29adc:	b.ne	29b28 <my_regexec@@Base+0x6634>  // b.any
   29ae0:	cbz	x22, 29b34 <my_regexec@@Base+0x6640>
   29ae4:	cbz	x21, 29b5c <my_regexec@@Base+0x6668>
   29ae8:	ldr	x1, [x22, #72]
   29aec:	cbz	x1, 29d30 <my_regexec@@Base+0x683c>
   29af0:	ldr	x0, [x22, #64]
   29af4:	sub	x1, x0, x1
   29af8:	ldr	x0, [x22, #80]
   29afc:	add	x0, x0, x1
   29b00:	ldr	x1, [x22, #8]
   29b04:	sub	x0, x0, x1
   29b08:	ldr	x1, [x22, #136]
   29b0c:	cmp	x0, x1
   29b10:	b.le	29d30 <my_regexec@@Base+0x683c>
   29b14:	str	x25, [sp, #64]
   29b18:	add	x25, x20, #0x150
   29b1c:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   29b20:	ldr	x24, [x24, #3888]
   29b24:	b	29c60 <my_regexec@@Base+0x676c>
   29b28:	ldrb	w23, [x0, #13]
   29b2c:	ubfx	x23, x23, #1, #1
   29b30:	b	29ae0 <my_regexec@@Base+0x65ec>
   29b34:	str	x25, [sp, #64]
   29b38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29b3c:	add	x3, x3, #0xc10
   29b40:	add	x3, x3, #0x198
   29b44:	mov	w2, #0x40a3                	// #16547
   29b48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29b4c:	add	x1, x1, #0xfb8
   29b50:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   29b54:	add	x0, x0, #0xfe8
   29b58:	bl	58e0 <__assert_fail@plt>
   29b5c:	str	x25, [sp, #64]
   29b60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29b64:	add	x3, x3, #0xc10
   29b68:	add	x3, x3, #0x198
   29b6c:	mov	w2, #0x40a3                	// #16547
   29b70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29b74:	add	x1, x1, #0xfb8
   29b78:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   29b7c:	add	x0, x0, #0xe20
   29b80:	bl	58e0 <__assert_fail@plt>
   29b84:	mov	x1, x21
   29b88:	mov	x0, x20
   29b8c:	bl	56a0 <Perl_av_undef@plt>
   29b90:	mov	x1, x19
   29b94:	mov	x0, x20
   29b98:	bl	55d0 <Perl_sv_2mortal@plt>
   29b9c:	ldr	x1, [x22, #24]
   29ba0:	cbz	x1, 29bb0 <my_regexec@@Base+0x66bc>
   29ba4:	mov	w2, #0xb                   	// #11
   29ba8:	mov	x0, x20
   29bac:	bl	54b0 <Perl_save_pushptr@plt>
   29bb0:	ldr	x1, [x22, #160]
   29bb4:	cbz	x1, 29bc4 <my_regexec@@Base+0x66d0>
   29bb8:	mov	w2, #0xa                   	// #10
   29bbc:	mov	x0, x20
   29bc0:	bl	54b0 <Perl_save_pushptr@plt>
   29bc4:	ldr	x1, [x22, #168]
   29bc8:	cbz	x1, 29c7c <my_regexec@@Base+0x6788>
   29bcc:	mov	w2, #0xa                   	// #10
   29bd0:	mov	x0, x20
   29bd4:	bl	54b0 <Perl_save_pushptr@plt>
   29bd8:	b	29c7c <my_regexec@@Base+0x6788>
   29bdc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29be0:	add	x3, x3, #0xc10
   29be4:	add	x3, x3, #0x198
   29be8:	mov	w2, #0x40b1                	// #16561
   29bec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29bf0:	add	x1, x1, #0xfb8
   29bf4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   29bf8:	add	x0, x0, #0xd10
   29bfc:	bl	58e0 <__assert_fail@plt>
   29c00:	and	w0, w3, #0xff
   29c04:	sub	w0, w0, #0x9
   29c08:	cmp	w0, #0x1
   29c0c:	b.hi	29c98 <my_regexec@@Base+0x67a4>  // b.pmore
   29c10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29c14:	add	x3, x3, #0xc10
   29c18:	add	x3, x3, #0x198
   29c1c:	mov	w2, #0x40b1                	// #16561
   29c20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29c24:	add	x1, x1, #0xfb8
   29c28:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   29c2c:	add	x0, x0, #0xd40
   29c30:	bl	58e0 <__assert_fail@plt>
   29c34:	ldr	x3, [x19, #16]
   29c38:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   29c3c:	add	x2, x2, #0xb50
   29c40:	mov	w1, #0x14                  	// #20
   29c44:	mov	x0, x20
   29c48:	bl	5110 <Perl_warner@plt>
   29c4c:	ldr	w2, [x19, #8]
   29c50:	cmp	w2, #0x1
   29c54:	b.ls	29cd4 <my_regexec@@Base+0x67e0>  // b.plast
   29c58:	sub	w2, w2, #0x1
   29c5c:	str	w2, [x19, #8]
   29c60:	mov	x1, x21
   29c64:	mov	x0, x20
   29c68:	bl	4fd0 <Perl_av_shift@plt>
   29c6c:	mov	x19, x0
   29c70:	cmp	x0, x25
   29c74:	b.eq	29ce4 <my_regexec@@Base+0x67f0>  // b.none
   29c78:	cbnz	w23, 29b84 <my_regexec@@Base+0x6690>
   29c7c:	ldr	w3, [x19, #12]
   29c80:	and	w0, w3, #0xf
   29c84:	ldrb	w0, [x24, w0, uxtw]
   29c88:	cbz	w0, 29bdc <my_regexec@@Base+0x66e8>
   29c8c:	and	w0, w3, #0xc000
   29c90:	cmp	w0, #0x8, lsl #12
   29c94:	b.eq	29c00 <my_regexec@@Base+0x670c>  // b.none
   29c98:	and	w3, w3, #0xff
   29c9c:	cmp	w3, #0xf
   29ca0:	b.ne	29c34 <my_regexec@@Base+0x6740>  // b.any
   29ca4:	ldr	x0, [x19]
   29ca8:	ldrb	w0, [x0, #129]
   29cac:	tbnz	w0, #6, 29c34 <my_regexec@@Base+0x6740>
   29cb0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29cb4:	add	x3, x3, #0xc10
   29cb8:	add	x3, x3, #0x198
   29cbc:	mov	w2, #0x40b1                	// #16561
   29cc0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29cc4:	add	x1, x1, #0xfb8
   29cc8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   29ccc:	add	x0, x0, #0xd58
   29cd0:	bl	58e0 <__assert_fail@plt>
   29cd4:	mov	x1, x19
   29cd8:	mov	x0, x20
   29cdc:	bl	5860 <Perl_sv_free2@plt>
   29ce0:	b	29c60 <my_regexec@@Base+0x676c>
   29ce4:	ldr	x1, [x22, #72]
   29ce8:	cbz	x1, 29d44 <my_regexec@@Base+0x6850>
   29cec:	ldr	x0, [x22, #64]
   29cf0:	sub	x1, x0, x1
   29cf4:	ldr	x0, [x22, #80]
   29cf8:	add	x0, x0, x1
   29cfc:	ldr	x2, [x22, #8]
   29d00:	sub	x3, x0, x2
   29d04:	ldr	x1, [x22, #136]
   29d08:	cmp	x3, x1
   29d0c:	b.le	29d4c <my_regexec@@Base+0x6858>
   29d10:	ldr	x1, [x22, #16]
   29d14:	cmp	x1, x0
   29d18:	csel	x0, x1, x0, ls  // ls = plast
   29d1c:	cmp	x2, x0
   29d20:	csel	x0, x2, x0, hi  // hi = pmore
   29d24:	sub	x0, x0, x2
   29d28:	str	x0, [x22, #136]
   29d2c:	ldr	x25, [sp, #64]
   29d30:	ldp	x19, x20, [sp, #16]
   29d34:	ldp	x21, x22, [sp, #32]
   29d38:	ldp	x23, x24, [sp, #48]
   29d3c:	ldp	x29, x30, [sp], #80
   29d40:	ret
   29d44:	ldr	x25, [sp, #64]
   29d48:	b	29d30 <my_regexec@@Base+0x683c>
   29d4c:	ldr	x25, [sp, #64]
   29d50:	b	29d30 <my_regexec@@Base+0x683c>
   29d54:	stp	x29, x30, [sp, #-32]!
   29d58:	mov	x29, sp
   29d5c:	stp	x19, x20, [sp, #16]
   29d60:	cbz	x1, 29dc0 <my_regexec@@Base+0x68cc>
   29d64:	mov	x20, x1
   29d68:	mov	x19, x2
   29d6c:	cbz	x2, 29de4 <my_regexec@@Base+0x68f0>
   29d70:	stp	xzr, xzr, [x2]
   29d74:	stp	xzr, xzr, [x2, #16]
   29d78:	stp	xzr, xzr, [x2, #32]
   29d7c:	str	xzr, [x2, #48]
   29d80:	mov	w1, #0x12                  	// #18
   29d84:	strb	w1, [x2, #1]
   29d88:	mov	w1, #0x1                   	// #1
   29d8c:	strh	w1, [x2, #2]
   29d90:	mov	w1, #0xffffffff            	// #-1
   29d94:	str	w1, [x2, #4]
   29d98:	mov	x1, x2
   29d9c:	bl	26b0c <my_regexec@@Base+0x3618>
   29da0:	ldr	w0, [x20, #248]
   29da4:	cmp	w0, #0x0
   29da8:	mov	w0, #0x1fffffff            	// #536870911
   29dac:	csel	w0, w0, wzr, ne  // ne = any
   29db0:	str	w0, [x19, #40]
   29db4:	ldp	x19, x20, [sp, #16]
   29db8:	ldp	x29, x30, [sp], #32
   29dbc:	ret
   29dc0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29dc4:	add	x3, x3, #0xc10
   29dc8:	add	x3, x3, #0x1b0
   29dcc:	mov	w2, #0x5db                 	// #1499
   29dd0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29dd4:	add	x1, x1, #0xfb8
   29dd8:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   29ddc:	add	x0, x0, #0xfe8
   29de0:	bl	58e0 <__assert_fail@plt>
   29de4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29de8:	add	x3, x3, #0xc10
   29dec:	add	x3, x3, #0x1b0
   29df0:	mov	w2, #0x5db                 	// #1499
   29df4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29df8:	add	x1, x1, #0xfb8
   29dfc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   29e00:	add	x0, x0, #0xb8
   29e04:	bl	58e0 <__assert_fail@plt>
   29e08:	stp	x29, x30, [sp, #-48]!
   29e0c:	mov	x29, sp
   29e10:	stp	x19, x20, [sp, #16]
   29e14:	str	x21, [sp, #32]
   29e18:	cbz	x1, 29f0c <my_regexec@@Base+0x6a18>
   29e1c:	mov	x21, x0
   29e20:	mov	x19, x1
   29e24:	mov	x20, x2
   29e28:	ldr	x1, [x1, #128]
   29e2c:	add	x1, x2, x1
   29e30:	str	x1, [x19, #128]
   29e34:	add	x1, x1, #0xd
   29e38:	lsl	x1, x1, #2
   29e3c:	ldr	x0, [x19, #40]
   29e40:	bl	5670 <Perl_safesysrealloc@plt>
   29e44:	str	x0, [x19, #40]
   29e48:	cbz	x0, 29f30 <my_regexec@@Base+0x6a3c>
   29e4c:	ldr	x1, [x19, #32]
   29e50:	str	x0, [x1, #104]
   29e54:	add	x0, x0, #0x28
   29e58:	str	x0, [x19, #96]
   29e5c:	cmp	x20, #0x0
   29e60:	b.le	29ff4 <my_regexec@@Base+0x6b00>
   29e64:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   29e68:	cmp	x20, x1
   29e6c:	b.hi	29fc4 <my_regexec@@Base+0x6ad0>  // b.pmore
   29e70:	ldr	x3, [x19, #104]
   29e74:	lsl	x2, x20, #2
   29e78:	mov	w1, #0x0                   	// #0
   29e7c:	add	x0, x0, x3, lsl #2
   29e80:	bl	51f0 <memset@plt>
   29e84:	ldr	x1, [x19, #128]
   29e88:	lsl	x0, x1, #1
   29e8c:	add	x0, x0, #0x1
   29e90:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   29e94:	cmp	x0, x2
   29e98:	b.hi	29fc8 <my_regexec@@Base+0x6ad4>  // b.pmore
   29e9c:	ldr	x21, [x19, #40]
   29ea0:	lsl	x1, x1, #3
   29ea4:	add	x1, x1, #0x4
   29ea8:	ldr	x0, [x21, #8]
   29eac:	bl	5670 <Perl_safesysrealloc@plt>
   29eb0:	str	x0, [x21, #8]
   29eb4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   29eb8:	cmp	x0, x20, lsl #1
   29ebc:	b.cc	29fcc <my_regexec@@Base+0x6ad8>  // b.lo, b.ul, b.last
   29ec0:	ldr	x1, [x19, #40]
   29ec4:	ldr	x0, [x19, #128]
   29ec8:	sub	x0, x0, x20
   29ecc:	lsl	x0, x0, #3
   29ed0:	add	x0, x0, #0x4
   29ed4:	ldr	x1, [x1, #8]
   29ed8:	adds	x0, x1, x0
   29edc:	b.eq	29fd0 <my_regexec@@Base+0x6adc>  // b.none
   29ee0:	lsl	x2, x20, #3
   29ee4:	mov	w1, #0x0                   	// #0
   29ee8:	bl	51f0 <memset@plt>
   29eec:	ldr	x0, [x19, #40]
   29ef0:	ldr	x0, [x0, #8]
   29ef4:	ldr	x1, [x19, #128]
   29ef8:	str	w1, [x0]
   29efc:	ldp	x19, x20, [sp, #16]
   29f00:	ldr	x21, [sp, #32]
   29f04:	ldp	x29, x30, [sp], #48
   29f08:	ret
   29f0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29f10:	add	x3, x3, #0xc10
   29f14:	add	x3, x3, #0x1c0
   29f18:	mov	w2, #0x4c53                	// #19539
   29f1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29f20:	add	x1, x1, #0xfb8
   29f24:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   29f28:	add	x0, x0, #0xfe8
   29f2c:	bl	58e0 <__assert_fail@plt>
   29f30:	ldr	x20, [x19, #16]
   29f34:	ldr	x0, [x19, #8]
   29f38:	sub	x20, x20, x0
   29f3c:	ldr	x1, [x19, #24]
   29f40:	cbz	x1, 29f50 <my_regexec@@Base+0x6a5c>
   29f44:	mov	w2, #0xb                   	// #11
   29f48:	mov	x0, x21
   29f4c:	bl	54b0 <Perl_save_pushptr@plt>
   29f50:	ldr	x1, [x19, #160]
   29f54:	cbz	x1, 29f64 <my_regexec@@Base+0x6a70>
   29f58:	mov	w2, #0xa                   	// #10
   29f5c:	mov	x0, x21
   29f60:	bl	54b0 <Perl_save_pushptr@plt>
   29f64:	ldr	x1, [x19, #168]
   29f68:	cbz	x1, 29f78 <my_regexec@@Base+0x6a84>
   29f6c:	mov	w2, #0xa                   	// #10
   29f70:	mov	x0, x21
   29f74:	bl	54b0 <Perl_save_pushptr@plt>
   29f78:	cmp	x20, #0x7f
   29f7c:	b.le	29fb8 <my_regexec@@Base+0x6ac4>
   29f80:	mov	x20, #0x75                  	// #117
   29f84:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   29f88:	add	x6, x6, #0xfe0
   29f8c:	ldr	w0, [x19, #192]
   29f90:	cmp	w0, #0x0
   29f94:	ldr	x5, [x19, #8]
   29f98:	mov	x4, x20
   29f9c:	cset	w3, ne  // ne = any
   29fa0:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   29fa4:	add	x2, x2, #0xe30
   29fa8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   29fac:	add	x1, x1, #0x50
   29fb0:	mov	x0, x21
   29fb4:	bl	5420 <Perl_croak@plt>
   29fb8:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   29fbc:	add	x6, x6, #0x20
   29fc0:	b	29f8c <my_regexec@@Base+0x6a98>
   29fc4:	bl	26bcc <my_regexec@@Base+0x36d8>
   29fc8:	bl	26bcc <my_regexec@@Base+0x36d8>
   29fcc:	bl	26bcc <my_regexec@@Base+0x36d8>
   29fd0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   29fd4:	add	x3, x3, #0xc10
   29fd8:	add	x3, x3, #0x1c0
   29fdc:	mov	w2, #0x4c68                	// #19560
   29fe0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   29fe4:	add	x1, x1, #0xfb8
   29fe8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   29fec:	add	x0, x0, #0xe48
   29ff0:	bl	58e0 <__assert_fail@plt>
   29ff4:	ldr	x1, [x19, #128]
   29ff8:	lsl	x0, x1, #1
   29ffc:	add	x0, x0, #0x1
   2a000:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2a004:	cmp	x0, x2
   2a008:	b.hi	29fc8 <my_regexec@@Base+0x6ad4>  // b.pmore
   2a00c:	ldr	x20, [x19, #40]
   2a010:	lsl	x1, x1, #3
   2a014:	add	x1, x1, #0x4
   2a018:	ldr	x0, [x20, #8]
   2a01c:	bl	5670 <Perl_safesysrealloc@plt>
   2a020:	str	x0, [x20, #8]
   2a024:	b	29eec <my_regexec@@Base+0x69f8>
   2a028:	stp	x29, x30, [sp, #-96]!
   2a02c:	mov	x29, sp
   2a030:	stp	x19, x20, [sp, #16]
   2a034:	stp	x21, x22, [sp, #32]
   2a038:	stp	x23, x24, [sp, #48]
   2a03c:	mov	x20, x0
   2a040:	mov	x19, x1
   2a044:	and	w24, w2, #0xff
   2a048:	mov	x21, x3
   2a04c:	mov	x22, x4
   2a050:	ldr	x23, [x1, #104]
   2a054:	str	xzr, [sp, #88]
   2a058:	ldr	x0, [x0, #224]
   2a05c:	cbz	x0, 2a0cc <my_regexec@@Base+0x6bd8>
   2a060:	str	x25, [sp, #64]
   2a064:	mov	w2, #0x1                   	// #1
   2a068:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2a06c:	add	x1, x1, #0x608
   2a070:	mov	x0, x20
   2a074:	bl	54f0 <Perl_get_sv@plt>
   2a078:	mov	x25, x0
   2a07c:	cbz	x0, 2a280 <my_regexec@@Base+0x6d8c>
   2a080:	ldr	w0, [x0, #12]
   2a084:	tbz	w0, #8, 2a200 <my_regexec@@Base+0x6d0c>
   2a088:	ldr	w1, [x25, #12]
   2a08c:	and	w0, w1, #0x3fff00
   2a090:	and	w0, w0, #0xffe001ff
   2a094:	cmp	w0, #0x100
   2a098:	b.ne	2a26c <my_regexec@@Base+0x6d78>  // b.any
   2a09c:	and	w2, w1, #0xf
   2a0a0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2a0a4:	ldr	x0, [x0, #3712]
   2a0a8:	ldrb	w0, [x0, w2, uxtw]
   2a0ac:	cbz	w0, 2a214 <my_regexec@@Base+0x6d20>
   2a0b0:	and	w0, w1, #0xc000
   2a0b4:	cmp	w0, #0x8, lsl #12
   2a0b8:	b.eq	2a238 <my_regexec@@Base+0x6d44>  // b.none
   2a0bc:	ldr	x0, [x25]
   2a0c0:	ldr	x0, [x0, #32]
   2a0c4:	str	x0, [sp, #88]
   2a0c8:	ldr	x25, [sp, #64]
   2a0cc:	cbz	x22, 2a288 <my_regexec@@Base+0x6d94>
   2a0d0:	add	x2, x21, #0x1
   2a0d4:	mov	x1, x19
   2a0d8:	mov	x0, x20
   2a0dc:	bl	29e08 <my_regexec@@Base+0x6914>
   2a0e0:	ldr	x1, [x19, #96]
   2a0e4:	lsl	x0, x23, #2
   2a0e8:	strb	wzr, [x1, x0]
   2a0ec:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   2a0f0:	add	x0, x0, #0xc10
   2a0f4:	add	x0, x0, #0x1e8
   2a0f8:	ldrb	w0, [x0, w24, sxtw]
   2a0fc:	cmp	x0, x21
   2a100:	b.ls	2a118 <my_regexec@@Base+0x6c24>  // b.plast
   2a104:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2a108:	ldr	x0, [x0, #3768]
   2a10c:	ldrb	w0, [x0, w24, sxtw]
   2a110:	cmp	w0, #0x12
   2a114:	b.ne	2a2b0 <my_regexec@@Base+0x6dbc>  // b.any
   2a118:	ldr	x0, [x19, #40]
   2a11c:	ldr	x0, [x0, #8]
   2a120:	cbz	x0, 2a1e8 <my_regexec@@Base+0x6cf4>
   2a124:	ldr	w1, [x20, #2368]
   2a128:	tbnz	w1, #20, 2a134 <my_regexec@@Base+0x6c40>
   2a12c:	ldr	x1, [sp, #88]
   2a130:	tbz	w1, #18, 2a180 <my_regexec@@Base+0x6c8c>
   2a134:	ldr	x5, [x19, #104]
   2a138:	ldr	w7, [x0]
   2a13c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a140:	add	x0, x0, #0xec0
   2a144:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   2a148:	add	x4, x4, #0xea0
   2a14c:	cmp	x5, x7
   2a150:	ldr	x6, [x19, #64]
   2a154:	ldr	x1, [x19, #48]
   2a158:	sub	x6, x6, x1
   2a15c:	csel	x4, x4, x0, hi  // hi = pmore
   2a160:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2a164:	ldr	x0, [x0, #3776]
   2a168:	ldr	x3, [x0, w24, sxtw #3]
   2a16c:	mov	w2, #0x4c88                	// #19592
   2a170:	mov	x1, x22
   2a174:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a178:	add	x0, x0, #0xf00
   2a17c:	bl	5010 <Perl_warn_nocontext@plt>
   2a180:	ldr	w0, [x20, #2368]
   2a184:	tbnz	w0, #20, 2a190 <my_regexec@@Base+0x6c9c>
   2a188:	ldr	x0, [sp, #88]
   2a18c:	tbz	w0, #18, 2a1b8 <my_regexec@@Base+0x6cc4>
   2a190:	cmp	w24, #0x0
   2a194:	ldr	x0, [x19, #64]
   2a198:	cinc	x0, x0, eq  // eq = none
   2a19c:	ldr	x3, [x19, #48]
   2a1a0:	sub	w3, w0, w3
   2a1a4:	ldr	w2, [x19, #104]
   2a1a8:	mov	w1, #0x4c8f                	// #19599
   2a1ac:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a1b0:	add	x0, x0, #0xf30
   2a1b4:	bl	5010 <Perl_warn_nocontext@plt>
   2a1b8:	ldr	x1, [x19, #104]
   2a1bc:	lsl	x0, x1, #2
   2a1c0:	tbnz	x1, #61, 2a2d8 <my_regexec@@Base+0x6de4>
   2a1c4:	ldr	x1, [x19, #40]
   2a1c8:	ldr	x2, [x1, #8]
   2a1cc:	add	x2, x2, x0, lsl #1
   2a1d0:	cmp	w24, #0x0
   2a1d4:	ldr	x0, [x19, #64]
   2a1d8:	cinc	x0, x0, eq  // eq = none
   2a1dc:	ldr	x1, [x19, #48]
   2a1e0:	sub	x0, x0, x1
   2a1e4:	stur	w0, [x2, #-4]
   2a1e8:	mov	x0, x23
   2a1ec:	ldp	x19, x20, [sp, #16]
   2a1f0:	ldp	x21, x22, [sp, #32]
   2a1f4:	ldp	x23, x24, [sp, #48]
   2a1f8:	ldp	x29, x30, [sp], #96
   2a1fc:	ret
   2a200:	mov	x2, #0xff08                	// #65288
   2a204:	mov	x1, x25
   2a208:	mov	x0, x20
   2a20c:	bl	5310 <Perl_sv_setuv@plt>
   2a210:	b	2a088 <my_regexec@@Base+0x6b94>
   2a214:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a218:	add	x3, x3, #0xc10
   2a21c:	add	x3, x3, #0x1d8
   2a220:	mov	w2, #0x4c78                	// #19576
   2a224:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a228:	add	x1, x1, #0xfb8
   2a22c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2a230:	add	x0, x0, #0xda0
   2a234:	bl	58e0 <__assert_fail@plt>
   2a238:	and	w1, w1, #0xff
   2a23c:	sub	w1, w1, #0x9
   2a240:	cmp	w1, #0x1
   2a244:	b.hi	2a0bc <my_regexec@@Base+0x6bc8>  // b.pmore
   2a248:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a24c:	add	x3, x3, #0xc10
   2a250:	add	x3, x3, #0x1d8
   2a254:	mov	w2, #0x4c78                	// #19576
   2a258:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a25c:	add	x1, x1, #0xfb8
   2a260:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2a264:	add	x0, x0, #0xdd0
   2a268:	bl	58e0 <__assert_fail@plt>
   2a26c:	mov	w2, #0x2                   	// #2
   2a270:	mov	x1, x25
   2a274:	mov	x0, x20
   2a278:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   2a27c:	b	2a0c4 <my_regexec@@Base+0x6bd0>
   2a280:	ldr	x25, [sp, #64]
   2a284:	b	2a0cc <my_regexec@@Base+0x6bd8>
   2a288:	str	x25, [sp, #64]
   2a28c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a290:	add	x3, x3, #0xc10
   2a294:	add	x3, x3, #0x1d8
   2a298:	mov	w2, #0x4c7a                	// #19578
   2a29c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a2a0:	add	x1, x1, #0xfb8
   2a2a4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a2a8:	add	x0, x0, #0x968
   2a2ac:	bl	58e0 <__assert_fail@plt>
   2a2b0:	str	x25, [sp, #64]
   2a2b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a2b8:	add	x3, x3, #0xc10
   2a2bc:	add	x3, x3, #0x1d8
   2a2c0:	mov	w2, #0x4c83                	// #19587
   2a2c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a2c8:	add	x1, x1, #0xfb8
   2a2cc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a2d0:	add	x0, x0, #0xec8
   2a2d4:	bl	58e0 <__assert_fail@plt>
   2a2d8:	str	x25, [sp, #64]
   2a2dc:	ubfx	x2, x0, #2, #32
   2a2e0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2a2e4:	add	x1, x1, #0xf58
   2a2e8:	mov	x0, x20
   2a2ec:	bl	5420 <Perl_croak@plt>
   2a2f0:	stp	x29, x30, [sp, #-64]!
   2a2f4:	mov	x29, sp
   2a2f8:	stp	x19, x20, [sp, #16]
   2a2fc:	stp	x21, x22, [sp, #32]
   2a300:	str	x23, [sp, #48]
   2a304:	mov	x19, x1
   2a308:	and	w20, w2, #0xff
   2a30c:	mov	w22, w3
   2a310:	mov	w21, w4
   2a314:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   2a318:	add	x2, x2, #0xc10
   2a31c:	add	x2, x2, #0x1e8
   2a320:	ldrb	w23, [x2, w20, sxtw]
   2a324:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   2a328:	add	x4, x4, #0xf80
   2a32c:	and	x3, x23, #0xff
   2a330:	mov	w2, w20
   2a334:	bl	2a028 <my_regexec@@Base+0x6b34>
   2a338:	cbz	x19, 2a394 <my_regexec@@Base+0x6ea0>
   2a33c:	cmp	w23, #0x2
   2a340:	b.ne	2a3b8 <my_regexec@@Base+0x6ec4>  // b.any
   2a344:	lsl	x1, x0, #2
   2a348:	ldr	x2, [x19, #96]
   2a34c:	add	x2, x2, x1
   2a350:	str	w22, [x2, #4]
   2a354:	ldr	x2, [x19, #96]
   2a358:	add	x2, x2, x1
   2a35c:	str	w21, [x2, #8]
   2a360:	ldr	x2, [x19, #96]
   2a364:	add	x2, x2, x1
   2a368:	strb	w20, [x2, #1]
   2a36c:	ldr	x2, [x19, #96]
   2a370:	add	x1, x2, x1
   2a374:	strh	wzr, [x1, #2]
   2a378:	add	x1, x0, #0x3
   2a37c:	str	x1, [x19, #104]
   2a380:	ldp	x19, x20, [sp, #16]
   2a384:	ldp	x21, x22, [sp, #32]
   2a388:	ldr	x23, [sp, #48]
   2a38c:	ldp	x29, x30, [sp], #64
   2a390:	ret
   2a394:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a398:	add	x3, x3, #0xc10
   2a39c:	add	x3, x3, #0x250
   2a3a0:	mov	w2, #0x4cc2                	// #19650
   2a3a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a3a8:	add	x1, x1, #0xfb8
   2a3ac:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2a3b0:	add	x0, x0, #0xfe8
   2a3b4:	bl	58e0 <__assert_fail@plt>
   2a3b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a3bc:	add	x3, x3, #0xc10
   2a3c0:	add	x3, x3, #0x250
   2a3c4:	mov	w2, #0x4cc4                	// #19652
   2a3c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a3cc:	add	x1, x1, #0xfb8
   2a3d0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a3d4:	add	x0, x0, #0xf90
   2a3d8:	bl	58e0 <__assert_fail@plt>
   2a3dc:	stp	x29, x30, [sp, #-48]!
   2a3e0:	mov	x29, sp
   2a3e4:	stp	x19, x20, [sp, #16]
   2a3e8:	stp	x21, x22, [sp, #32]
   2a3ec:	mov	x19, x1
   2a3f0:	and	w20, w2, #0xff
   2a3f4:	mov	w21, w3
   2a3f8:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   2a3fc:	add	x2, x2, #0xc10
   2a400:	add	x2, x2, #0x1e8
   2a404:	ldrb	w22, [x2, w20, sxtw]
   2a408:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   2a40c:	add	x4, x4, #0xfa8
   2a410:	and	x3, x22, #0xff
   2a414:	mov	w2, w20
   2a418:	bl	2a028 <my_regexec@@Base+0x6b34>
   2a41c:	cbz	x19, 2a468 <my_regexec@@Base+0x6f74>
   2a420:	cmp	w22, #0x1
   2a424:	b.ne	2a48c <my_regexec@@Base+0x6f98>  // b.any
   2a428:	lsl	x2, x0, #2
   2a42c:	ldr	x1, [x19, #96]
   2a430:	add	x1, x1, x2
   2a434:	str	w21, [x1, #4]
   2a438:	ldr	x1, [x19, #96]
   2a43c:	add	x1, x1, x2
   2a440:	strb	w20, [x1, #1]
   2a444:	ldr	x1, [x19, #96]
   2a448:	add	x1, x1, x2
   2a44c:	strh	wzr, [x1, #2]
   2a450:	add	x1, x0, #0x2
   2a454:	str	x1, [x19, #104]
   2a458:	ldp	x19, x20, [sp, #16]
   2a45c:	ldp	x21, x22, [sp, #32]
   2a460:	ldp	x29, x30, [sp], #48
   2a464:	ret
   2a468:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a46c:	add	x3, x3, #0xc10
   2a470:	add	x3, x3, #0x260
   2a474:	mov	w2, #0x4cb0                	// #19632
   2a478:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a47c:	add	x1, x1, #0xfb8
   2a480:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2a484:	add	x0, x0, #0xfe8
   2a488:	bl	58e0 <__assert_fail@plt>
   2a48c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a490:	add	x3, x3, #0xc10
   2a494:	add	x3, x3, #0x260
   2a498:	mov	w2, #0x4cb3                	// #19635
   2a49c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a4a0:	add	x1, x1, #0xfb8
   2a4a4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a4a8:	add	x0, x0, #0xfb8
   2a4ac:	bl	58e0 <__assert_fail@plt>
   2a4b0:	sub	sp, sp, #0x80
   2a4b4:	stp	x29, x30, [sp, #32]
   2a4b8:	add	x29, sp, #0x20
   2a4bc:	stp	x19, x20, [sp, #48]
   2a4c0:	stp	x21, x22, [sp, #64]
   2a4c4:	stp	x23, x24, [sp, #80]
   2a4c8:	stp	x25, x26, [sp, #96]
   2a4cc:	mov	x20, x0
   2a4d0:	mov	x19, x1
   2a4d4:	mov	x22, x2
   2a4d8:	mov	x21, x3
   2a4dc:	and	w25, w4, #0xff
   2a4e0:	ldr	x24, [x1, #64]
   2a4e4:	mov	w2, #0x2                   	// #2
   2a4e8:	bl	27634 <my_regexec@@Base+0x4140>
   2a4ec:	mov	x26, x0
   2a4f0:	str	xzr, [sp, #120]
   2a4f4:	ldr	x1, [x20, #224]
   2a4f8:	cbz	x1, 2a560 <my_regexec@@Base+0x706c>
   2a4fc:	mov	w2, #0x1                   	// #1
   2a500:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2a504:	add	x1, x1, #0x608
   2a508:	mov	x0, x20
   2a50c:	bl	54f0 <Perl_get_sv@plt>
   2a510:	mov	x23, x0
   2a514:	cbz	x0, 2a560 <my_regexec@@Base+0x706c>
   2a518:	ldr	w0, [x0, #12]
   2a51c:	tbz	w0, #8, 2a630 <my_regexec@@Base+0x713c>
   2a520:	ldr	w1, [x23, #12]
   2a524:	and	w0, w1, #0x3fff00
   2a528:	and	w0, w0, #0xffe001ff
   2a52c:	cmp	w0, #0x100
   2a530:	b.ne	2a69c <my_regexec@@Base+0x71a8>  // b.any
   2a534:	and	w2, w1, #0xf
   2a538:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2a53c:	ldr	x0, [x0, #3712]
   2a540:	ldrb	w0, [x0, w2, uxtw]
   2a544:	cbz	w0, 2a644 <my_regexec@@Base+0x7150>
   2a548:	and	w0, w1, #0xc000
   2a54c:	cmp	w0, #0x8, lsl #12
   2a550:	b.eq	2a668 <my_regexec@@Base+0x7174>  // b.none
   2a554:	ldr	x0, [x23]
   2a558:	ldr	x0, [x0, #32]
   2a55c:	str	x0, [sp, #120]
   2a560:	cbz	x22, 2a6b0 <my_regexec@@Base+0x71bc>
   2a564:	cbz	x21, 2a6d4 <my_regexec@@Base+0x71e0>
   2a568:	ldr	x1, [x19, #64]
   2a56c:	cmp	x1, x24
   2a570:	b.eq	2a580 <my_regexec@@Base+0x708c>  // b.none
   2a574:	ldrb	w0, [x1]
   2a578:	cmp	w0, w25
   2a57c:	b.eq	2a730 <my_regexec@@Base+0x723c>  // b.none
   2a580:	ldr	x1, [x19, #24]
   2a584:	cbz	x1, 2a594 <my_regexec@@Base+0x70a0>
   2a588:	mov	w2, #0xb                   	// #11
   2a58c:	mov	x0, x20
   2a590:	bl	54b0 <Perl_save_pushptr@plt>
   2a594:	ldr	x1, [x19, #160]
   2a598:	cbz	x1, 2a5a8 <my_regexec@@Base+0x70b4>
   2a59c:	mov	w2, #0xa                   	// #10
   2a5a0:	mov	x0, x20
   2a5a4:	bl	54b0 <Perl_save_pushptr@plt>
   2a5a8:	ldr	x1, [x19, #168]
   2a5ac:	cbz	x1, 2a5bc <my_regexec@@Base+0x70c8>
   2a5b0:	mov	w2, #0xa                   	// #10
   2a5b4:	mov	x0, x20
   2a5b8:	bl	54b0 <Perl_save_pushptr@plt>
   2a5bc:	ldr	x0, [x19, #64]
   2a5c0:	ldr	x1, [x19, #72]
   2a5c4:	sub	x1, x0, x1
   2a5c8:	ldr	x0, [x19, #80]
   2a5cc:	add	x0, x0, x1
   2a5d0:	ldr	x2, [x19, #16]
   2a5d4:	cmp	x0, x2
   2a5d8:	b.hi	2a6f8 <my_regexec@@Base+0x7204>  // b.pmore
   2a5dc:	ldr	x7, [x19, #8]
   2a5e0:	subs	x4, x0, x7
   2a5e4:	b.mi	2a708 <my_regexec@@Base+0x7214>  // b.first
   2a5e8:	mov	x6, x4
   2a5ec:	sub	x3, x2, x0
   2a5f0:	ldr	w1, [x19, #192]
   2a5f4:	cmp	w1, #0x0
   2a5f8:	cset	w1, ne  // ne = any
   2a5fc:	cmp	x0, x2
   2a600:	csel	x0, x0, x2, ls  // ls = plast
   2a604:	str	x0, [sp, #16]
   2a608:	str	x3, [sp, #8]
   2a60c:	str	w1, [sp]
   2a610:	mov	w5, w1
   2a614:	mov	x4, x21
   2a618:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   2a61c:	add	x3, x3, #0x5d8
   2a620:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   2a624:	add	x2, x2, #0xfe8
   2a628:	mov	x0, x20
   2a62c:	bl	273ac <my_regexec@@Base+0x3eb8>
   2a630:	mov	x2, #0xff08                	// #65288
   2a634:	mov	x1, x23
   2a638:	mov	x0, x20
   2a63c:	bl	5310 <Perl_sv_setuv@plt>
   2a640:	b	2a520 <my_regexec@@Base+0x702c>
   2a644:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a648:	add	x3, x3, #0xc10
   2a64c:	add	x3, x3, #0x270
   2a650:	mov	w2, #0x2adf                	// #10975
   2a654:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a658:	add	x1, x1, #0xfb8
   2a65c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2a660:	add	x0, x0, #0xda0
   2a664:	bl	58e0 <__assert_fail@plt>
   2a668:	and	w1, w1, #0xff
   2a66c:	sub	w1, w1, #0x9
   2a670:	cmp	w1, #0x1
   2a674:	b.hi	2a554 <my_regexec@@Base+0x7060>  // b.pmore
   2a678:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a67c:	add	x3, x3, #0xc10
   2a680:	add	x3, x3, #0x270
   2a684:	mov	w2, #0x2adf                	// #10975
   2a688:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a68c:	add	x1, x1, #0xfb8
   2a690:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2a694:	add	x0, x0, #0xdd0
   2a698:	bl	58e0 <__assert_fail@plt>
   2a69c:	mov	w2, #0x2                   	// #2
   2a6a0:	mov	x1, x23
   2a6a4:	mov	x0, x20
   2a6a8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   2a6ac:	b	2a55c <my_regexec@@Base+0x7068>
   2a6b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a6b4:	add	x3, x3, #0xc10
   2a6b8:	add	x3, x3, #0x270
   2a6bc:	mov	w2, #0x2ae1                	// #10977
   2a6c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a6c4:	add	x1, x1, #0xfb8
   2a6c8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a6cc:	add	x0, x0, #0xfd0
   2a6d0:	bl	58e0 <__assert_fail@plt>
   2a6d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a6d8:	add	x3, x3, #0xc10
   2a6dc:	add	x3, x3, #0x270
   2a6e0:	mov	w2, #0x2ae1                	// #10977
   2a6e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a6e8:	add	x1, x1, #0xfb8
   2a6ec:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a6f0:	add	x0, x0, #0xfd8
   2a6f4:	bl	58e0 <__assert_fail@plt>
   2a6f8:	ldr	x7, [x19, #8]
   2a6fc:	sub	x6, x2, x7
   2a700:	mov	x3, #0x0                   	// #0
   2a704:	b	2a5f0 <my_regexec@@Base+0x70fc>
   2a708:	ldr	x6, [x19, #48]
   2a70c:	ldr	x5, [x19, #56]
   2a710:	sub	w5, w5, w6
   2a714:	mov	w3, #0x2ae5                	// #10981
   2a718:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2a71c:	add	x2, x2, #0xfb8
   2a720:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2a724:	add	x1, x1, #0x870
   2a728:	mov	x0, x20
   2a72c:	bl	5420 <Perl_croak@plt>
   2a730:	mov	w3, #0x0                   	// #0
   2a734:	cbz	x26, 2a76c <my_regexec@@Base+0x7278>
   2a738:	mov	w2, #0x1                   	// #1
   2a73c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2a740:	add	x1, x1, #0xd50
   2a744:	mov	x0, x19
   2a748:	bl	26be8 <my_regexec@@Base+0x36f4>
   2a74c:	mov	w3, w0
   2a750:	ldr	x0, [x19, #40]
   2a754:	ldr	x0, [x0, #24]
   2a758:	add	x0, x0, w3, uxtw #3
   2a75c:	str	x26, [x0, #16]
   2a760:	ldr	w0, [x26, #8]
   2a764:	add	w0, w0, #0x1
   2a768:	str	w0, [x26, #8]
   2a76c:	mov	w0, #0x1                   	// #1
   2a770:	str	w0, [x19, #116]
   2a774:	ldr	w1, [x19]
   2a778:	mov	w2, #0x41                  	// #65
   2a77c:	tbz	w1, #2, 2a7ac <my_regexec@@Base+0x72b8>
   2a780:	lsr	w0, w1, #7
   2a784:	ubfx	x1, x1, #7, #3
   2a788:	mov	w2, #0x45                  	// #69
   2a78c:	cmp	w1, #0x4
   2a790:	b.eq	2a7ac <my_regexec@@Base+0x72b8>  // b.none
   2a794:	mov	w2, #0x44                  	// #68
   2a798:	tst	w0, #0x6
   2a79c:	b.ne	2a7ac <my_regexec@@Base+0x72b8>  // b.any
   2a7a0:	cmp	w1, #0x1
   2a7a4:	cset	w2, eq  // eq = none
   2a7a8:	add	w2, w2, #0x42
   2a7ac:	mov	x1, x19
   2a7b0:	mov	x0, x20
   2a7b4:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   2a7b8:	mov	x23, x0
   2a7bc:	ldr	w0, [x22]
   2a7c0:	orr	w0, w0, #0x1
   2a7c4:	str	w0, [x22]
   2a7c8:	ldr	w0, [x20, #2368]
   2a7cc:	tbnz	w0, #20, 2a7d8 <my_regexec@@Base+0x72e4>
   2a7d0:	ldr	x0, [sp, #120]
   2a7d4:	tbz	w0, #18, 2a7f8 <my_regexec@@Base+0x7304>
   2a7d8:	add	x3, x21, #0x1
   2a7dc:	ldr	x0, [x19, #48]
   2a7e0:	sub	w3, w3, w0
   2a7e4:	mov	w2, w23
   2a7e8:	mov	w1, #0x2afb                	// #11003
   2a7ec:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2a7f0:	add	x0, x0, #0xf30
   2a7f4:	bl	5010 <Perl_warn_nocontext@plt>
   2a7f8:	lsl	x22, x23, #2
   2a7fc:	tbnz	x23, #61, 2a88c <my_regexec@@Base+0x7398>
   2a800:	asr	x2, x22, #2
   2a804:	lsl	x22, x22, #1
   2a808:	ldr	x0, [x19, #40]
   2a80c:	ldr	x1, [x0, #8]
   2a810:	add	x1, x1, x22
   2a814:	add	x0, x21, #0x1
   2a818:	ldr	x3, [x19, #48]
   2a81c:	sub	x0, x0, x3
   2a820:	stur	w0, [x1, #-4]
   2a824:	ldr	w0, [x20, #2368]
   2a828:	tbnz	w0, #20, 2a834 <my_regexec@@Base+0x7340>
   2a82c:	ldr	x0, [sp, #120]
   2a830:	tbz	w0, #18, 2a84c <my_regexec@@Base+0x7358>
   2a834:	ldr	x3, [x19, #64]
   2a838:	sub	w3, w3, w21
   2a83c:	mov	w1, #0x2afc                	// #11004
   2a840:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2a844:	add	x0, x0, #0x8
   2a848:	bl	5010 <Perl_warn_nocontext@plt>
   2a84c:	ldr	x0, [x19, #40]
   2a850:	ldr	x0, [x0, #8]
   2a854:	ldr	x3, [x19, #64]
   2a858:	sub	x21, x3, x21
   2a85c:	str	w21, [x0, x22]
   2a860:	mov	x1, x19
   2a864:	mov	x0, x20
   2a868:	bl	269a4 <my_regexec@@Base+0x34b0>
   2a86c:	mov	x0, x23
   2a870:	ldp	x19, x20, [sp, #48]
   2a874:	ldp	x21, x22, [sp, #64]
   2a878:	ldp	x23, x24, [sp, #80]
   2a87c:	ldp	x25, x26, [sp, #96]
   2a880:	ldp	x29, x30, [sp, #32]
   2a884:	add	sp, sp, #0x80
   2a888:	ret
   2a88c:	ubfx	x2, x22, #2, #32
   2a890:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2a894:	add	x1, x1, #0xf58
   2a898:	mov	x0, x20
   2a89c:	bl	5420 <Perl_croak@plt>
   2a8a0:	stp	x29, x30, [sp, #-48]!
   2a8a4:	mov	x29, sp
   2a8a8:	stp	x19, x20, [sp, #16]
   2a8ac:	str	x21, [sp, #32]
   2a8b0:	mov	x19, x1
   2a8b4:	and	w20, w2, #0xff
   2a8b8:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   2a8bc:	add	x2, x2, #0xc10
   2a8c0:	add	x2, x2, #0x1e8
   2a8c4:	ldrb	w21, [x2, w20, sxtw]
   2a8c8:	adrp	x4, 77000 <boot_re@@Base+0x1541c>
   2a8cc:	add	x4, x4, #0x28
   2a8d0:	and	x3, x21, #0xff
   2a8d4:	mov	w2, w20
   2a8d8:	bl	2a028 <my_regexec@@Base+0x6b34>
   2a8dc:	cbz	x19, 2a918 <my_regexec@@Base+0x7424>
   2a8e0:	cbnz	w21, 2a93c <my_regexec@@Base+0x7448>
   2a8e4:	lsl	x3, x0, #2
   2a8e8:	ldr	x2, [x19, #96]
   2a8ec:	add	x2, x2, x3
   2a8f0:	strb	w20, [x2, #1]
   2a8f4:	ldr	x1, [x19, #96]
   2a8f8:	add	x1, x1, x3
   2a8fc:	strh	wzr, [x1, #2]
   2a900:	add	x1, x0, #0x1
   2a904:	str	x1, [x19, #104]
   2a908:	ldp	x19, x20, [sp, #16]
   2a90c:	ldr	x21, [sp, #32]
   2a910:	ldp	x29, x30, [sp], #48
   2a914:	ret
   2a918:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a91c:	add	x3, x3, #0xc10
   2a920:	add	x3, x3, #0x288
   2a924:	mov	w2, #0x4c9e                	// #19614
   2a928:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a92c:	add	x1, x1, #0xfb8
   2a930:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2a934:	add	x0, x0, #0xfe8
   2a938:	bl	58e0 <__assert_fail@plt>
   2a93c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2a940:	add	x3, x3, #0xc10
   2a944:	add	x3, x3, #0x288
   2a948:	mov	w2, #0x4ca0                	// #19616
   2a94c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2a950:	add	x1, x1, #0xfb8
   2a954:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2a958:	add	x0, x0, #0x38
   2a95c:	bl	58e0 <__assert_fail@plt>
   2a960:	sub	sp, sp, #0x520
   2a964:	stp	x29, x30, [sp, #48]
   2a968:	add	x29, sp, #0x30
   2a96c:	str	x0, [sp, #272]
   2a970:	str	x1, [sp, #240]
   2a974:	str	x2, [sp, #256]
   2a978:	str	x3, [sp, #376]
   2a97c:	str	x4, [sp, #312]
   2a980:	and	w0, w5, #0xff
   2a984:	str	w0, [sp, #396]
   2a988:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2a98c:	ldr	x0, [x0, #3920]
   2a990:	ldr	x3, [x0]
   2a994:	str	x3, [sp, #1304]
   2a998:	mov	x3, #0x0                   	// #0
   2a99c:	ldr	x0, [x1, #56]
   2a9a0:	str	x0, [sp, #288]
   2a9a4:	cbz	x2, 2ac2c <my_regexec@@Base+0x7738>
   2a9a8:	stp	x19, x20, [sp, #64]
   2a9ac:	ldr	x0, [sp, #312]
   2a9b0:	cbz	x0, 2a9c8 <my_regexec@@Base+0x74d4>
   2a9b4:	ldr	x0, [sp, #240]
   2a9b8:	ldr	x1, [x0, #312]
   2a9bc:	cbz	x1, 2a9c8 <my_regexec@@Base+0x74d4>
   2a9c0:	ldr	x0, [sp, #272]
   2a9c4:	bl	59e0 <Perl_av_clear@plt>
   2a9c8:	ldr	x0, [sp, #256]
   2a9cc:	ldr	x1, [sp, #288]
   2a9d0:	cmp	x0, x1
   2a9d4:	b.cs	2cf38 <my_regexec@@Base+0x9a44>  // b.hs, b.nlast
   2a9d8:	ldurb	w0, [x0, #-1]
   2a9dc:	cmp	w0, #0x5b
   2a9e0:	b.eq	2ace4 <my_regexec@@Base+0x77f0>  // b.none
   2a9e4:	ldr	x0, [sp, #312]
   2a9e8:	cbz	x0, 2acf4 <my_regexec@@Base+0x7800>
   2a9ec:	ldr	x0, [sp, #240]
   2a9f0:	ldr	x0, [x0, #312]
   2a9f4:	cbz	x0, 2ac64 <my_regexec@@Base+0x7770>
   2a9f8:	ldr	x3, [sp, #240]
   2a9fc:	ldr	x19, [x3, #312]
   2aa00:	ldr	w0, [x3, #192]
   2aa04:	cmp	w0, #0x0
   2aa08:	cset	w2, ne  // ne = any
   2aa0c:	ldr	x0, [x3, #72]
   2aa10:	ldr	x1, [sp, #256]
   2aa14:	sub	x1, x1, x0
   2aa18:	ldr	x0, [x3, #80]
   2aa1c:	add	x0, x0, x1
   2aa20:	ldr	x7, [x3, #16]
   2aa24:	cmp	x0, x7
   2aa28:	b.ls	2ac8c <my_regexec@@Base+0x7798>  // b.plast
   2aa2c:	ldr	x4, [x3, #8]
   2aa30:	sub	x3, x7, x4
   2aa34:	mov	x6, #0x0                   	// #0
   2aa38:	cmp	x0, x7
   2aa3c:	csel	x7, x0, x7, ls  // ls = plast
   2aa40:	mov	w5, w2
   2aa44:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2aa48:	add	x1, x1, #0x58
   2aa4c:	ldr	x20, [sp, #272]
   2aa50:	mov	x0, x20
   2aa54:	bl	5990 <Perl_newSVpvf@plt>
   2aa58:	mov	x2, x0
   2aa5c:	mov	x1, x19
   2aa60:	mov	x0, x20
   2aa64:	bl	5430 <Perl_av_push@plt>
   2aa68:	str	wzr, [sp, #356]
   2aa6c:	mov	w0, #0x1                   	// #1
   2aa70:	str	w0, [sp, #248]
   2aa74:	ldr	x0, [sp, #256]
   2aa78:	ldrb	w1, [x0]
   2aa7c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2aa80:	ldr	x0, [x0, #3880]
   2aa84:	ldr	w1, [x0, x1, lsl #2]
   2aa88:	mov	w0, #0x4800                	// #18432
   2aa8c:	bics	wzr, w0, w1
   2aa90:	b.eq	2ad04 <my_regexec@@Base+0x7810>  // b.none
   2aa94:	ldr	x1, [sp, #256]
   2aa98:	ldrb	w19, [x1]
   2aa9c:	cmp	w19, #0x3d
   2aaa0:	mov	w0, #0x2e                  	// #46
   2aaa4:	ccmp	w19, w0, #0x4, ne  // ne = any
   2aaa8:	b.ne	2ab20 <my_regexec@@Base+0x762c>  // b.any
   2aaac:	ldr	x5, [sp, #288]
   2aab0:	sub	x0, x5, #0x3
   2aab4:	mov	x2, x1
   2aab8:	cmp	x1, x0
   2aabc:	b.cs	2ab20 <my_regexec@@Base+0x762c>  // b.hs, b.nlast
   2aac0:	mov	x0, x1
   2aac4:	ldrb	w1, [x0, #2]!
   2aac8:	cmp	w1, w19
   2aacc:	b.eq	2ab14 <my_regexec@@Base+0x7620>  // b.none
   2aad0:	add	x0, x2, #0x1
   2aad4:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   2aad8:	ldr	x4, [x4, #3880]
   2aadc:	mov	w3, #0x4001                	// #16385
   2aae0:	cmp	x5, x0
   2aae4:	b.ls	2ab14 <my_regexec@@Base+0x7620>  // b.plast
   2aae8:	ldr	x5, [sp, #288]
   2aaec:	ldrb	w2, [x0]
   2aaf0:	ldr	w1, [x4, w2, sxtw #2]
   2aaf4:	and	w1, w1, w3
   2aaf8:	cmp	w2, #0x2d
   2aafc:	ccmp	w1, w3, #0x4, ne  // ne = any
   2ab00:	b.ne	2ab14 <my_regexec@@Base+0x7620>  // b.any
   2ab04:	add	x0, x0, #0x1
   2ab08:	cmp	x5, x0
   2ab0c:	b.ne	2aaec <my_regexec@@Base+0x75f8>  // b.any
   2ab10:	ldr	x0, [sp, #288]
   2ab14:	ldrb	w1, [x0]
   2ab18:	cmp	w1, w19
   2ab1c:	b.eq	2ae60 <my_regexec@@Base+0x796c>  // b.none
   2ab20:	stp	x21, x22, [sp, #80]
   2ab24:	str	wzr, [sp, #392]
   2ab28:	cmp	w19, #0x5e
   2ab2c:	b.eq	2afe4 <my_regexec@@Base+0x7af0>  // b.none
   2ab30:	ldr	x0, [sp, #256]
   2ab34:	ldrb	w0, [x0]
   2ab38:	cmp	w0, #0x3a
   2ab3c:	b.eq	2b270 <my_regexec@@Base+0x7d7c>  // b.none
   2ab40:	cmp	w0, #0x3b
   2ab44:	b.eq	2b2e4 <my_regexec@@Base+0x7df0>  // b.none
   2ab48:	ldr	x0, [sp, #312]
   2ab4c:	cbz	x0, 2abcc <my_regexec@@Base+0x76d8>
   2ab50:	ldr	x0, [sp, #240]
   2ab54:	ldr	x0, [x0, #312]
   2ab58:	cbz	x0, 2b400 <my_regexec@@Base+0x7f0c>
   2ab5c:	ldr	x3, [sp, #240]
   2ab60:	ldr	x19, [x3, #312]
   2ab64:	ldr	w0, [x3, #192]
   2ab68:	cmp	w0, #0x0
   2ab6c:	cset	w2, ne  // ne = any
   2ab70:	ldr	x0, [x3, #72]
   2ab74:	ldr	x1, [sp, #256]
   2ab78:	sub	x1, x1, x0
   2ab7c:	ldr	x0, [x3, #80]
   2ab80:	add	x0, x0, x1
   2ab84:	ldr	x7, [x3, #16]
   2ab88:	cmp	x0, x7
   2ab8c:	b.ls	2b428 <my_regexec@@Base+0x7f34>  // b.plast
   2ab90:	ldr	x4, [x3, #8]
   2ab94:	sub	x3, x7, x4
   2ab98:	mov	x6, #0x0                   	// #0
   2ab9c:	cmp	x0, x7
   2aba0:	csel	x7, x0, x7, ls  // ls = plast
   2aba4:	mov	w5, w2
   2aba8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2abac:	add	x1, x1, #0x2a8
   2abb0:	ldr	x20, [sp, #272]
   2abb4:	mov	x0, x20
   2abb8:	bl	5990 <Perl_newSVpvf@plt>
   2abbc:	mov	x2, x0
   2abc0:	mov	x1, x19
   2abc4:	mov	x0, x20
   2abc8:	bl	5430 <Perl_av_push@plt>
   2abcc:	ldr	x0, [sp, #256]
   2abd0:	ldrb	w1, [x0]
   2abd4:	sub	w0, w1, #0x5d
   2abd8:	and	w0, w0, #0xff
   2abdc:	cmp	w0, #0x1
   2abe0:	b.ls	2b4a8 <my_regexec@@Base+0x7fb4>  // b.plast
   2abe4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2abe8:	ldr	x0, [x0, #3880]
   2abec:	ldr	w1, [x0, w1, sxtw #2]
   2abf0:	mov	w0, #0x4020                	// #16416
   2abf4:	bics	wzr, w0, w1
   2abf8:	b.eq	2b47c <my_regexec@@Base+0x7f88>  // b.none
   2abfc:	ldr	x0, [sp, #256]
   2ac00:	ldrb	w1, [x0]
   2ac04:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ac08:	ldr	x0, [x0, #3880]
   2ac0c:	ldr	w1, [x0, x1, lsl #2]
   2ac10:	mov	w0, #0x4800                	// #18432
   2ac14:	bics	wzr, w0, w1
   2ac18:	b.eq	2b4b8 <my_regexec@@Base+0x7fc4>  // b.none
   2ac1c:	str	wzr, [sp, #352]
   2ac20:	mov	w0, #0x1                   	// #1
   2ac24:	str	w0, [sp, #248]
   2ac28:	b	2b2ac <my_regexec@@Base+0x7db8>
   2ac2c:	stp	x19, x20, [sp, #64]
   2ac30:	stp	x21, x22, [sp, #80]
   2ac34:	stp	x23, x24, [sp, #96]
   2ac38:	stp	x25, x26, [sp, #112]
   2ac3c:	stp	x27, x28, [sp, #128]
   2ac40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ac44:	add	x3, x3, #0xc10
   2ac48:	add	x3, x3, #0x298
   2ac4c:	mov	w2, #0x3a9f                	// #15007
   2ac50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ac54:	add	x1, x1, #0xfb8
   2ac58:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2ac5c:	add	x0, x0, #0xce8
   2ac60:	bl	58e0 <__assert_fail@plt>
   2ac64:	mov	w1, #0xb                   	// #11
   2ac68:	ldr	x19, [sp, #272]
   2ac6c:	mov	x0, x19
   2ac70:	bl	57e0 <Perl_newSV_type@plt>
   2ac74:	mov	x1, x0
   2ac78:	mov	x0, x19
   2ac7c:	bl	55d0 <Perl_sv_2mortal@plt>
   2ac80:	ldr	x1, [sp, #240]
   2ac84:	str	x0, [x1, #312]
   2ac88:	b	2a9f8 <my_regexec@@Base+0x7504>
   2ac8c:	ldr	x1, [sp, #240]
   2ac90:	ldr	x4, [x1, #8]
   2ac94:	subs	x3, x0, x4
   2ac98:	b.mi	2aca4 <my_regexec@@Base+0x77b0>  // b.first
   2ac9c:	sub	x6, x7, x0
   2aca0:	b	2aa38 <my_regexec@@Base+0x7544>
   2aca4:	stp	x21, x22, [sp, #80]
   2aca8:	stp	x23, x24, [sp, #96]
   2acac:	stp	x25, x26, [sp, #112]
   2acb0:	stp	x27, x28, [sp, #128]
   2acb4:	ldr	x0, [sp, #240]
   2acb8:	ldr	x6, [x0, #48]
   2acbc:	ldr	x5, [x0, #56]
   2acc0:	sub	w5, w5, w6
   2acc4:	mov	x4, x3
   2acc8:	mov	w3, #0x3aa8                	// #15016
   2accc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2acd0:	add	x2, x2, #0xfb8
   2acd4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2acd8:	add	x1, x1, #0x870
   2acdc:	ldr	x0, [sp, #272]
   2ace0:	bl	5420 <Perl_croak@plt>
   2ace4:	mov	w0, #0x1                   	// #1
   2ace8:	str	w0, [sp, #356]
   2acec:	str	wzr, [sp, #248]
   2acf0:	b	2aa74 <my_regexec@@Base+0x7580>
   2acf4:	str	wzr, [sp, #356]
   2acf8:	mov	w0, #0x1                   	// #1
   2acfc:	str	w0, [sp, #248]
   2ad00:	b	2aa74 <my_regexec@@Base+0x7580>
   2ad04:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2ad08:	ldr	x1, [x1, #3880]
   2ad0c:	mov	w2, w0
   2ad10:	ldr	x4, [sp, #288]
   2ad14:	ldr	x0, [sp, #256]
   2ad18:	add	x0, x0, #0x1
   2ad1c:	cmp	x4, x0
   2ad20:	b.eq	2ad3c <my_regexec@@Base+0x7848>  // b.none
   2ad24:	ldrb	w3, [x0]
   2ad28:	ldr	w3, [x1, x3, lsl #2]
   2ad2c:	bics	wzr, w2, w3
   2ad30:	b.eq	2ad18 <my_regexec@@Base+0x7824>  // b.none
   2ad34:	str	x0, [sp, #256]
   2ad38:	b	2ad44 <my_regexec@@Base+0x7850>
   2ad3c:	ldr	x0, [sp, #288]
   2ad40:	str	x0, [sp, #256]
   2ad44:	ldr	x0, [sp, #312]
   2ad48:	cbz	x0, 2ae54 <my_regexec@@Base+0x7960>
   2ad4c:	ldr	x0, [sp, #240]
   2ad50:	ldr	x0, [x0, #312]
   2ad54:	cbz	x0, 2add4 <my_regexec@@Base+0x78e0>
   2ad58:	ldr	x3, [sp, #240]
   2ad5c:	ldr	x19, [x3, #312]
   2ad60:	ldr	w0, [x3, #192]
   2ad64:	cmp	w0, #0x0
   2ad68:	cset	w2, ne  // ne = any
   2ad6c:	ldr	x0, [x3, #72]
   2ad70:	ldr	x1, [sp, #256]
   2ad74:	sub	x1, x1, x0
   2ad78:	ldr	x0, [x3, #80]
   2ad7c:	add	x0, x0, x1
   2ad80:	ldr	x7, [x3, #16]
   2ad84:	cmp	x0, x7
   2ad88:	b.ls	2adfc <my_regexec@@Base+0x7908>  // b.plast
   2ad8c:	ldr	x4, [x3, #8]
   2ad90:	sub	x3, x7, x4
   2ad94:	mov	x6, #0x0                   	// #0
   2ad98:	cmp	x0, x7
   2ad9c:	csel	x7, x0, x7, ls  // ls = plast
   2ada0:	mov	w5, w2
   2ada4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2ada8:	add	x1, x1, #0xd8
   2adac:	ldr	x20, [sp, #272]
   2adb0:	mov	x0, x20
   2adb4:	bl	5990 <Perl_newSVpvf@plt>
   2adb8:	mov	x2, x0
   2adbc:	mov	x1, x19
   2adc0:	mov	x0, x20
   2adc4:	bl	5430 <Perl_av_push@plt>
   2adc8:	mov	w0, #0x1                   	// #1
   2adcc:	str	w0, [sp, #248]
   2add0:	b	2aa94 <my_regexec@@Base+0x75a0>
   2add4:	mov	w1, #0xb                   	// #11
   2add8:	ldr	x19, [sp, #272]
   2addc:	mov	x0, x19
   2ade0:	bl	57e0 <Perl_newSV_type@plt>
   2ade4:	mov	x1, x0
   2ade8:	mov	x0, x19
   2adec:	bl	55d0 <Perl_sv_2mortal@plt>
   2adf0:	ldr	x1, [sp, #240]
   2adf4:	str	x0, [x1, #312]
   2adf8:	b	2ad58 <my_regexec@@Base+0x7864>
   2adfc:	ldr	x1, [sp, #240]
   2ae00:	ldr	x4, [x1, #8]
   2ae04:	subs	x3, x0, x4
   2ae08:	b.mi	2ae14 <my_regexec@@Base+0x7920>  // b.first
   2ae0c:	sub	x6, x7, x0
   2ae10:	b	2ad98 <my_regexec@@Base+0x78a4>
   2ae14:	stp	x21, x22, [sp, #80]
   2ae18:	stp	x23, x24, [sp, #96]
   2ae1c:	stp	x25, x26, [sp, #112]
   2ae20:	stp	x27, x28, [sp, #128]
   2ae24:	ldr	x0, [sp, #240]
   2ae28:	ldr	x6, [x0, #48]
   2ae2c:	ldr	x5, [x0, #56]
   2ae30:	sub	w5, w5, w6
   2ae34:	mov	x4, x3
   2ae38:	mov	w3, #0x3ab8                	// #15032
   2ae3c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2ae40:	add	x2, x2, #0xfb8
   2ae44:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2ae48:	add	x1, x1, #0x870
   2ae4c:	ldr	x0, [sp, #272]
   2ae50:	bl	5420 <Perl_croak@plt>
   2ae54:	mov	w0, #0x1                   	// #1
   2ae58:	str	w0, [sp, #248]
   2ae5c:	b	2aa94 <my_regexec@@Base+0x75a0>
   2ae60:	ldrb	w1, [x0, #1]
   2ae64:	cmp	w1, #0x5d
   2ae68:	b.ne	2ab20 <my_regexec@@Base+0x762c>  // b.any
   2ae6c:	add	x0, x0, #0x2
   2ae70:	ldr	w1, [sp, #248]
   2ae74:	cmp	w1, #0x0
   2ae78:	ldr	w1, [sp, #396]
   2ae7c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   2ae80:	b.ne	2afb4 <my_regexec@@Base+0x7ac0>  // b.any
   2ae84:	ldr	x1, [sp, #240]
   2ae88:	str	x0, [x1, #64]
   2ae8c:	ldr	x1, [x1, #24]
   2ae90:	cbz	x1, 2aea0 <my_regexec@@Base+0x79ac>
   2ae94:	mov	w2, #0xb                   	// #11
   2ae98:	ldr	x0, [sp, #272]
   2ae9c:	bl	54b0 <Perl_save_pushptr@plt>
   2aea0:	ldr	x0, [sp, #240]
   2aea4:	ldr	x1, [x0, #160]
   2aea8:	cbz	x1, 2aeb8 <my_regexec@@Base+0x79c4>
   2aeac:	mov	w2, #0xa                   	// #10
   2aeb0:	ldr	x0, [sp, #272]
   2aeb4:	bl	54b0 <Perl_save_pushptr@plt>
   2aeb8:	ldr	x0, [sp, #240]
   2aebc:	ldr	x1, [x0, #168]
   2aec0:	cbz	x1, 2aed0 <my_regexec@@Base+0x79dc>
   2aec4:	mov	w2, #0xa                   	// #10
   2aec8:	ldr	x0, [sp, #272]
   2aecc:	bl	54b0 <Perl_save_pushptr@plt>
   2aed0:	ldr	x2, [sp, #240]
   2aed4:	ldr	x0, [x2, #64]
   2aed8:	ldr	x1, [x2, #72]
   2aedc:	sub	x1, x0, x1
   2aee0:	ldr	x0, [x2, #80]
   2aee4:	add	x0, x0, x1
   2aee8:	ldr	x3, [x2, #16]
   2aeec:	cmp	x0, x3
   2aef0:	b.hi	2af68 <my_regexec@@Base+0x7a74>  // b.pmore
   2aef4:	ldr	x1, [sp, #240]
   2aef8:	ldr	x2, [x1, #8]
   2aefc:	subs	x4, x0, x2
   2af00:	b.mi	2af78 <my_regexec@@Base+0x7a84>  // b.first
   2af04:	mov	x7, x4
   2af08:	sub	x4, x3, x0
   2af0c:	stp	x21, x22, [sp, #80]
   2af10:	stp	x23, x24, [sp, #96]
   2af14:	stp	x25, x26, [sp, #112]
   2af18:	stp	x27, x28, [sp, #128]
   2af1c:	ldr	x1, [sp, #240]
   2af20:	ldr	w1, [x1, #192]
   2af24:	cmp	w1, #0x0
   2af28:	cset	w1, ne  // ne = any
   2af2c:	cmp	x0, x3
   2af30:	csel	x0, x0, x3, ls  // ls = plast
   2af34:	str	x0, [sp, #24]
   2af38:	str	x4, [sp, #16]
   2af3c:	str	w1, [sp, #8]
   2af40:	str	x2, [sp]
   2af44:	mov	w6, w1
   2af48:	mov	w5, w19
   2af4c:	mov	w4, w19
   2af50:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   2af54:	add	x3, x3, #0x5d8
   2af58:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   2af5c:	add	x2, x2, #0x158
   2af60:	ldr	x0, [sp, #272]
   2af64:	bl	273ac <my_regexec@@Base+0x3eb8>
   2af68:	ldr	x2, [x2, #8]
   2af6c:	sub	x7, x3, x2
   2af70:	mov	x4, #0x0                   	// #0
   2af74:	b	2af0c <my_regexec@@Base+0x7a18>
   2af78:	stp	x21, x22, [sp, #80]
   2af7c:	stp	x23, x24, [sp, #96]
   2af80:	stp	x25, x26, [sp, #112]
   2af84:	stp	x27, x28, [sp, #128]
   2af88:	ldr	x0, [sp, #240]
   2af8c:	ldr	x6, [x0, #48]
   2af90:	ldr	x5, [x0, #56]
   2af94:	sub	w5, w5, w6
   2af98:	mov	w3, #0x3af3                	// #15091
   2af9c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2afa0:	add	x2, x2, #0xfb8
   2afa4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2afa8:	add	x1, x1, #0x870
   2afac:	ldr	x0, [sp, #272]
   2afb0:	bl	5420 <Perl_croak@plt>
   2afb4:	ldr	x1, [sp, #376]
   2afb8:	cbz	x1, 2afc0 <my_regexec@@Base+0x7acc>
   2afbc:	str	x0, [x1]
   2afc0:	ldr	x0, [sp, #312]
   2afc4:	cbz	x0, 2cf40 <my_regexec@@Base+0x9a4c>
   2afc8:	ldr	x0, [sp, #240]
   2afcc:	ldr	x1, [x0, #312]
   2afd0:	cbz	x1, 2cf48 <my_regexec@@Base+0x9a54>
   2afd4:	ldr	x0, [sp, #272]
   2afd8:	bl	59e0 <Perl_av_clear@plt>
   2afdc:	mov	w19, #0xffffffff            	// #-1
   2afe0:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2afe4:	ldr	x0, [sp, #312]
   2afe8:	cbz	x0, 2b06c <my_regexec@@Base+0x7b78>
   2afec:	ldr	x0, [sp, #240]
   2aff0:	ldr	x0, [x0, #312]
   2aff4:	cbz	x0, 2b0a4 <my_regexec@@Base+0x7bb0>
   2aff8:	ldr	x3, [sp, #240]
   2affc:	ldr	x19, [x3, #312]
   2b000:	ldr	w0, [x3, #192]
   2b004:	cmp	w0, #0x0
   2b008:	cset	w2, ne  // ne = any
   2b00c:	ldr	x0, [sp, #256]
   2b010:	add	x0, x0, #0x1
   2b014:	ldr	x1, [x3, #72]
   2b018:	sub	x1, x0, x1
   2b01c:	ldr	x0, [x3, #80]
   2b020:	add	x0, x0, x1
   2b024:	ldr	x7, [x3, #16]
   2b028:	cmp	x0, x7
   2b02c:	b.ls	2b0cc <my_regexec@@Base+0x7bd8>  // b.plast
   2b030:	ldr	x4, [x3, #8]
   2b034:	sub	x3, x7, x4
   2b038:	mov	x6, #0x0                   	// #0
   2b03c:	cmp	x0, x7
   2b040:	csel	x7, x0, x7, ls  // ls = plast
   2b044:	mov	w5, w2
   2b048:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b04c:	add	x1, x1, #0x190
   2b050:	ldr	x20, [sp, #272]
   2b054:	mov	x0, x20
   2b058:	bl	5990 <Perl_newSVpvf@plt>
   2b05c:	mov	x2, x0
   2b060:	mov	x1, x19
   2b064:	mov	x0, x20
   2b068:	bl	5430 <Perl_av_push@plt>
   2b06c:	ldr	x0, [sp, #256]
   2b070:	add	x19, x0, #0x1
   2b074:	ldrb	w1, [x0, #1]
   2b078:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2b07c:	ldr	x0, [x0, #3880]
   2b080:	ldr	w1, [x0, x1, lsl #2]
   2b084:	mov	w0, #0x4800                	// #18432
   2b088:	bics	wzr, w0, w1
   2b08c:	b.eq	2b120 <my_regexec@@Base+0x7c2c>  // b.none
   2b090:	str	x19, [sp, #256]
   2b094:	mov	w0, #0x1                   	// #1
   2b098:	str	w0, [sp, #248]
   2b09c:	str	w0, [sp, #392]
   2b0a0:	b	2ab30 <my_regexec@@Base+0x763c>
   2b0a4:	mov	w1, #0xb                   	// #11
   2b0a8:	ldr	x19, [sp, #272]
   2b0ac:	mov	x0, x19
   2b0b0:	bl	57e0 <Perl_newSV_type@plt>
   2b0b4:	mov	x1, x0
   2b0b8:	mov	x0, x19
   2b0bc:	bl	55d0 <Perl_sv_2mortal@plt>
   2b0c0:	ldr	x1, [sp, #240]
   2b0c4:	str	x0, [x1, #312]
   2b0c8:	b	2aff8 <my_regexec@@Base+0x7b04>
   2b0cc:	ldr	x1, [sp, #240]
   2b0d0:	ldr	x4, [x1, #8]
   2b0d4:	subs	x3, x0, x4
   2b0d8:	b.mi	2b0e4 <my_regexec@@Base+0x7bf0>  // b.first
   2b0dc:	sub	x6, x7, x0
   2b0e0:	b	2b03c <my_regexec@@Base+0x7b48>
   2b0e4:	stp	x23, x24, [sp, #96]
   2b0e8:	stp	x25, x26, [sp, #112]
   2b0ec:	stp	x27, x28, [sp, #128]
   2b0f0:	ldr	x0, [sp, #240]
   2b0f4:	ldr	x6, [x0, #48]
   2b0f8:	ldr	x5, [x0, #56]
   2b0fc:	sub	w5, w5, w6
   2b100:	mov	x4, x3
   2b104:	mov	w3, #0x3b0c                	// #15116
   2b108:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b10c:	add	x2, x2, #0xfb8
   2b110:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b114:	add	x1, x1, #0x870
   2b118:	ldr	x0, [sp, #272]
   2b11c:	bl	5420 <Perl_croak@plt>
   2b120:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2b124:	ldr	x1, [x1, #3880]
   2b128:	mov	w2, w0
   2b12c:	ldr	x3, [sp, #288]
   2b130:	add	x19, x19, #0x1
   2b134:	cmp	x3, x19
   2b138:	b.ls	2b14c <my_regexec@@Base+0x7c58>  // b.plast
   2b13c:	ldrb	w0, [x19]
   2b140:	ldr	w0, [x1, x0, lsl #2]
   2b144:	bics	wzr, w2, w0
   2b148:	b.eq	2b130 <my_regexec@@Base+0x7c3c>  // b.none
   2b14c:	ldr	x0, [sp, #312]
   2b150:	cbz	x0, 2b25c <my_regexec@@Base+0x7d68>
   2b154:	ldr	x0, [sp, #240]
   2b158:	ldr	x0, [x0, #312]
   2b15c:	cbz	x0, 2b1e0 <my_regexec@@Base+0x7cec>
   2b160:	ldr	x3, [sp, #240]
   2b164:	ldr	x20, [x3, #312]
   2b168:	ldr	w0, [x3, #192]
   2b16c:	cmp	w0, #0x0
   2b170:	cset	w2, ne  // ne = any
   2b174:	ldr	x0, [x3, #72]
   2b178:	sub	x1, x19, x0
   2b17c:	ldr	x0, [x3, #80]
   2b180:	add	x0, x0, x1
   2b184:	ldr	x7, [x3, #16]
   2b188:	cmp	x0, x7
   2b18c:	b.ls	2b208 <my_regexec@@Base+0x7d14>  // b.plast
   2b190:	ldr	x4, [x3, #8]
   2b194:	sub	x3, x7, x4
   2b198:	mov	x6, #0x0                   	// #0
   2b19c:	cmp	x0, x7
   2b1a0:	csel	x7, x0, x7, ls  // ls = plast
   2b1a4:	mov	w5, w2
   2b1a8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b1ac:	add	x1, x1, #0xd8
   2b1b0:	ldr	x21, [sp, #272]
   2b1b4:	mov	x0, x21
   2b1b8:	bl	5990 <Perl_newSVpvf@plt>
   2b1bc:	mov	x2, x0
   2b1c0:	mov	x1, x20
   2b1c4:	mov	x0, x21
   2b1c8:	bl	5430 <Perl_av_push@plt>
   2b1cc:	str	x19, [sp, #256]
   2b1d0:	mov	w0, #0x1                   	// #1
   2b1d4:	str	w0, [sp, #248]
   2b1d8:	str	w0, [sp, #392]
   2b1dc:	b	2ab30 <my_regexec@@Base+0x763c>
   2b1e0:	mov	w1, #0xb                   	// #11
   2b1e4:	ldr	x20, [sp, #272]
   2b1e8:	mov	x0, x20
   2b1ec:	bl	57e0 <Perl_newSV_type@plt>
   2b1f0:	mov	x1, x0
   2b1f4:	mov	x0, x20
   2b1f8:	bl	55d0 <Perl_sv_2mortal@plt>
   2b1fc:	ldr	x1, [sp, #240]
   2b200:	str	x0, [x1, #312]
   2b204:	b	2b160 <my_regexec@@Base+0x7c6c>
   2b208:	ldr	x1, [sp, #240]
   2b20c:	ldr	x4, [x1, #8]
   2b210:	subs	x3, x0, x4
   2b214:	b.mi	2b220 <my_regexec@@Base+0x7d2c>  // b.first
   2b218:	sub	x6, x7, x0
   2b21c:	b	2b19c <my_regexec@@Base+0x7ca8>
   2b220:	stp	x23, x24, [sp, #96]
   2b224:	stp	x25, x26, [sp, #112]
   2b228:	stp	x27, x28, [sp, #128]
   2b22c:	ldr	x0, [sp, #240]
   2b230:	ldr	x6, [x0, #48]
   2b234:	ldr	x5, [x0, #56]
   2b238:	sub	w5, w5, w6
   2b23c:	mov	x4, x3
   2b240:	mov	w3, #0x3b17                	// #15127
   2b244:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b248:	add	x2, x2, #0xfb8
   2b24c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b250:	add	x1, x1, #0x870
   2b254:	ldr	x0, [sp, #272]
   2b258:	bl	5420 <Perl_croak@plt>
   2b25c:	str	x19, [sp, #256]
   2b260:	mov	w0, #0x1                   	// #1
   2b264:	str	w0, [sp, #248]
   2b268:	str	w0, [sp, #392]
   2b26c:	b	2ab30 <my_regexec@@Base+0x763c>
   2b270:	ldr	x0, [sp, #256]
   2b274:	add	x0, x0, #0x1
   2b278:	str	x0, [sp, #256]
   2b27c:	mov	w0, #0x1                   	// #1
   2b280:	str	w0, [sp, #352]
   2b284:	ldr	x0, [sp, #256]
   2b288:	ldrb	w1, [x0]
   2b28c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2b290:	ldr	x0, [x0, #3880]
   2b294:	ldr	w2, [x0, w1, sxtw #2]
   2b298:	mov	w0, #0x4800                	// #18432
   2b29c:	bics	wzr, w0, w2
   2b2a0:	b.eq	2b4bc <my_regexec@@Base+0x7fc8>  // b.none
   2b2a4:	cmp	w1, #0x5e
   2b2a8:	b.eq	2b58c <my_regexec@@Base+0x8098>  // b.none
   2b2ac:	ldr	x0, [sp, #256]
   2b2b0:	ldrb	w0, [x0]
   2b2b4:	cmp	w0, #0x5d
   2b2b8:	b.eq	2b7b8 <my_regexec@@Base+0x82c4>  // b.none
   2b2bc:	stp	x23, x24, [sp, #96]
   2b2c0:	stp	x25, x26, [sp, #112]
   2b2c4:	stp	x27, x28, [sp, #128]
   2b2c8:	str	xzr, [sp, #264]
   2b2cc:	add	x0, sp, #0x278
   2b2d0:	str	x0, [sp, #360]
   2b2d4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2b2d8:	ldr	x0, [x0, #3880]
   2b2dc:	str	x0, [sp, #368]
   2b2e0:	b	2bf28 <my_regexec@@Base+0x8a34>
   2b2e4:	ldr	x0, [sp, #256]
   2b2e8:	add	x0, x0, #0x1
   2b2ec:	str	x0, [sp, #256]
   2b2f0:	ldr	x0, [sp, #312]
   2b2f4:	cbz	x0, 2b498 <my_regexec@@Base+0x7fa4>
   2b2f8:	ldr	x0, [sp, #240]
   2b2fc:	ldr	x0, [x0, #312]
   2b300:	cbz	x0, 2b384 <my_regexec@@Base+0x7e90>
   2b304:	ldr	x3, [sp, #240]
   2b308:	ldr	x19, [x3, #312]
   2b30c:	ldr	w0, [x3, #192]
   2b310:	cmp	w0, #0x0
   2b314:	cset	w2, ne  // ne = any
   2b318:	ldr	x0, [x3, #72]
   2b31c:	ldr	x1, [sp, #256]
   2b320:	sub	x1, x1, x0
   2b324:	ldr	x0, [x3, #80]
   2b328:	add	x0, x0, x1
   2b32c:	ldr	x7, [x3, #16]
   2b330:	cmp	x0, x7
   2b334:	b.ls	2b3ac <my_regexec@@Base+0x7eb8>  // b.plast
   2b338:	ldr	x4, [x3, #8]
   2b33c:	sub	x3, x7, x4
   2b340:	mov	x6, #0x0                   	// #0
   2b344:	cmp	x0, x7
   2b348:	csel	x7, x0, x7, ls  // ls = plast
   2b34c:	mov	w5, w2
   2b350:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b354:	add	x1, x1, #0x218
   2b358:	ldr	x20, [sp, #272]
   2b35c:	mov	x0, x20
   2b360:	bl	5990 <Perl_newSVpvf@plt>
   2b364:	mov	x2, x0
   2b368:	mov	x1, x19
   2b36c:	mov	x0, x20
   2b370:	bl	5430 <Perl_av_push@plt>
   2b374:	mov	w0, #0x1                   	// #1
   2b378:	str	w0, [sp, #352]
   2b37c:	str	w0, [sp, #248]
   2b380:	b	2b284 <my_regexec@@Base+0x7d90>
   2b384:	mov	w1, #0xb                   	// #11
   2b388:	ldr	x19, [sp, #272]
   2b38c:	mov	x0, x19
   2b390:	bl	57e0 <Perl_newSV_type@plt>
   2b394:	mov	x1, x0
   2b398:	mov	x0, x19
   2b39c:	bl	55d0 <Perl_sv_2mortal@plt>
   2b3a0:	ldr	x1, [sp, #240]
   2b3a4:	str	x0, [x1, #312]
   2b3a8:	b	2b304 <my_regexec@@Base+0x7e10>
   2b3ac:	ldr	x1, [sp, #240]
   2b3b0:	ldr	x4, [x1, #8]
   2b3b4:	subs	x3, x0, x4
   2b3b8:	b.mi	2b3c4 <my_regexec@@Base+0x7ed0>  // b.first
   2b3bc:	sub	x6, x7, x0
   2b3c0:	b	2b344 <my_regexec@@Base+0x7e50>
   2b3c4:	stp	x23, x24, [sp, #96]
   2b3c8:	stp	x25, x26, [sp, #112]
   2b3cc:	stp	x27, x28, [sp, #128]
   2b3d0:	ldr	x0, [sp, #240]
   2b3d4:	ldr	x6, [x0, #48]
   2b3d8:	ldr	x5, [x0, #56]
   2b3dc:	sub	w5, w5, w6
   2b3e0:	mov	x4, x3
   2b3e4:	mov	w3, #0x3b25                	// #15141
   2b3e8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b3ec:	add	x2, x2, #0xfb8
   2b3f0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b3f4:	add	x1, x1, #0x870
   2b3f8:	ldr	x0, [sp, #272]
   2b3fc:	bl	5420 <Perl_croak@plt>
   2b400:	mov	w1, #0xb                   	// #11
   2b404:	ldr	x19, [sp, #272]
   2b408:	mov	x0, x19
   2b40c:	bl	57e0 <Perl_newSV_type@plt>
   2b410:	mov	x1, x0
   2b414:	mov	x0, x19
   2b418:	bl	55d0 <Perl_sv_2mortal@plt>
   2b41c:	ldr	x1, [sp, #240]
   2b420:	str	x0, [x1, #312]
   2b424:	b	2ab5c <my_regexec@@Base+0x7668>
   2b428:	ldr	x1, [sp, #240]
   2b42c:	ldr	x4, [x1, #8]
   2b430:	subs	x3, x0, x4
   2b434:	b.mi	2b440 <my_regexec@@Base+0x7f4c>  // b.first
   2b438:	sub	x6, x7, x0
   2b43c:	b	2ab9c <my_regexec@@Base+0x76a8>
   2b440:	stp	x23, x24, [sp, #96]
   2b444:	stp	x25, x26, [sp, #112]
   2b448:	stp	x27, x28, [sp, #128]
   2b44c:	ldr	x0, [sp, #240]
   2b450:	ldr	x6, [x0, #48]
   2b454:	ldr	x5, [x0, #56]
   2b458:	sub	w5, w5, w6
   2b45c:	mov	x4, x3
   2b460:	mov	w3, #0x3b2a                	// #15146
   2b464:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b468:	add	x2, x2, #0xfb8
   2b46c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b470:	add	x1, x1, #0x870
   2b474:	ldr	x0, [sp, #272]
   2b478:	bl	5420 <Perl_croak@plt>
   2b47c:	ldr	x0, [sp, #256]
   2b480:	add	x0, x0, #0x1
   2b484:	str	x0, [sp, #256]
   2b488:	str	wzr, [sp, #352]
   2b48c:	mov	w0, #0x1                   	// #1
   2b490:	str	w0, [sp, #248]
   2b494:	b	2b284 <my_regexec@@Base+0x7d90>
   2b498:	mov	w0, #0x1                   	// #1
   2b49c:	str	w0, [sp, #352]
   2b4a0:	str	w0, [sp, #248]
   2b4a4:	b	2b284 <my_regexec@@Base+0x7d90>
   2b4a8:	str	wzr, [sp, #352]
   2b4ac:	mov	w0, #0x1                   	// #1
   2b4b0:	str	w0, [sp, #248]
   2b4b4:	b	2b284 <my_regexec@@Base+0x7d90>
   2b4b8:	str	wzr, [sp, #352]
   2b4bc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2b4c0:	ldr	x1, [x1, #3880]
   2b4c4:	mov	w2, #0x4800                	// #18432
   2b4c8:	ldr	x4, [sp, #288]
   2b4cc:	ldr	x0, [sp, #256]
   2b4d0:	add	x0, x0, #0x1
   2b4d4:	cmp	x4, x0
   2b4d8:	b.ls	2b4ec <my_regexec@@Base+0x7ff8>  // b.plast
   2b4dc:	ldrb	w3, [x0]
   2b4e0:	ldr	w3, [x1, x3, lsl #2]
   2b4e4:	bics	wzr, w2, w3
   2b4e8:	b.eq	2b4d0 <my_regexec@@Base+0x7fdc>  // b.none
   2b4ec:	str	x0, [sp, #256]
   2b4f0:	ldr	x0, [sp, #312]
   2b4f4:	cbz	x0, 2b574 <my_regexec@@Base+0x8080>
   2b4f8:	ldr	x0, [sp, #240]
   2b4fc:	ldr	x0, [x0, #312]
   2b500:	cbz	x0, 2b68c <my_regexec@@Base+0x8198>
   2b504:	ldr	x3, [sp, #240]
   2b508:	ldr	x19, [x3, #312]
   2b50c:	ldr	w0, [x3, #192]
   2b510:	cmp	w0, #0x0
   2b514:	cset	w2, ne  // ne = any
   2b518:	ldr	x0, [x3, #72]
   2b51c:	ldr	x1, [sp, #256]
   2b520:	sub	x1, x1, x0
   2b524:	ldr	x0, [x3, #80]
   2b528:	add	x0, x0, x1
   2b52c:	ldr	x7, [x3, #16]
   2b530:	cmp	x0, x7
   2b534:	b.ls	2b6b4 <my_regexec@@Base+0x81c0>  // b.plast
   2b538:	ldr	x4, [x3, #8]
   2b53c:	sub	x3, x7, x4
   2b540:	mov	x6, #0x0                   	// #0
   2b544:	cmp	x0, x7
   2b548:	csel	x7, x0, x7, ls  // ls = plast
   2b54c:	mov	w5, w2
   2b550:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b554:	add	x1, x1, #0xd8
   2b558:	ldr	x20, [sp, #272]
   2b55c:	mov	x0, x20
   2b560:	bl	5990 <Perl_newSVpvf@plt>
   2b564:	mov	x2, x0
   2b568:	mov	x1, x19
   2b56c:	mov	x0, x20
   2b570:	bl	5430 <Perl_av_push@plt>
   2b574:	ldr	x0, [sp, #256]
   2b578:	ldrb	w0, [x0]
   2b57c:	mov	w1, #0x1                   	// #1
   2b580:	str	w1, [sp, #248]
   2b584:	cmp	w0, #0x5e
   2b588:	b.ne	2b5a8 <my_regexec@@Base+0x80b4>  // b.any
   2b58c:	ldr	w0, [sp, #392]
   2b590:	cbnz	w0, 2b708 <my_regexec@@Base+0x8214>
   2b594:	ldr	x0, [sp, #256]
   2b598:	add	x0, x0, #0x1
   2b59c:	str	x0, [sp, #256]
   2b5a0:	mov	w0, #0x1                   	// #1
   2b5a4:	str	w0, [sp, #392]
   2b5a8:	ldr	x3, [sp, #256]
   2b5ac:	ldrb	w1, [x3]
   2b5b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2b5b4:	ldr	x0, [x0, #3880]
   2b5b8:	ldr	w1, [x0, x1, lsl #2]
   2b5bc:	mov	w0, #0x4800                	// #18432
   2b5c0:	bics	wzr, w0, w1
   2b5c4:	b.ne	2b2ac <my_regexec@@Base+0x7db8>  // b.any
   2b5c8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2b5cc:	ldr	x1, [x1, #3880]
   2b5d0:	mov	w2, w0
   2b5d4:	ldr	x4, [sp, #288]
   2b5d8:	mov	x0, x3
   2b5dc:	add	x0, x0, #0x1
   2b5e0:	cmp	x4, x0
   2b5e4:	b.ls	2b5f8 <my_regexec@@Base+0x8104>  // b.plast
   2b5e8:	ldrb	w3, [x0]
   2b5ec:	ldr	w3, [x1, x3, lsl #2]
   2b5f0:	bics	wzr, w2, w3
   2b5f4:	b.eq	2b5dc <my_regexec@@Base+0x80e8>  // b.none
   2b5f8:	str	x0, [sp, #256]
   2b5fc:	ldr	x0, [sp, #312]
   2b600:	cbz	x0, 2b7ac <my_regexec@@Base+0x82b8>
   2b604:	ldr	x0, [sp, #240]
   2b608:	ldr	x0, [x0, #312]
   2b60c:	cbz	x0, 2b730 <my_regexec@@Base+0x823c>
   2b610:	ldr	x3, [sp, #240]
   2b614:	ldr	x19, [x3, #312]
   2b618:	ldr	w0, [x3, #192]
   2b61c:	cmp	w0, #0x0
   2b620:	cset	w2, ne  // ne = any
   2b624:	ldr	x0, [x3, #72]
   2b628:	ldr	x1, [sp, #256]
   2b62c:	sub	x1, x1, x0
   2b630:	ldr	x0, [x3, #80]
   2b634:	add	x0, x0, x1
   2b638:	ldr	x7, [x3, #16]
   2b63c:	cmp	x0, x7
   2b640:	b.ls	2b758 <my_regexec@@Base+0x8264>  // b.plast
   2b644:	ldr	x4, [x3, #8]
   2b648:	sub	x3, x7, x4
   2b64c:	mov	x6, #0x0                   	// #0
   2b650:	cmp	x0, x7
   2b654:	csel	x7, x0, x7, ls  // ls = plast
   2b658:	mov	w5, w2
   2b65c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b660:	add	x1, x1, #0xd8
   2b664:	ldr	x20, [sp, #272]
   2b668:	mov	x0, x20
   2b66c:	bl	5990 <Perl_newSVpvf@plt>
   2b670:	mov	x2, x0
   2b674:	mov	x1, x19
   2b678:	mov	x0, x20
   2b67c:	bl	5430 <Perl_av_push@plt>
   2b680:	mov	w0, #0x1                   	// #1
   2b684:	str	w0, [sp, #248]
   2b688:	b	2b2ac <my_regexec@@Base+0x7db8>
   2b68c:	mov	w1, #0xb                   	// #11
   2b690:	ldr	x19, [sp, #272]
   2b694:	mov	x0, x19
   2b698:	bl	57e0 <Perl_newSV_type@plt>
   2b69c:	mov	x1, x0
   2b6a0:	mov	x0, x19
   2b6a4:	bl	55d0 <Perl_sv_2mortal@plt>
   2b6a8:	ldr	x1, [sp, #240]
   2b6ac:	str	x0, [x1, #312]
   2b6b0:	b	2b504 <my_regexec@@Base+0x8010>
   2b6b4:	ldr	x1, [sp, #240]
   2b6b8:	ldr	x4, [x1, #8]
   2b6bc:	subs	x3, x0, x4
   2b6c0:	b.mi	2b6cc <my_regexec@@Base+0x81d8>  // b.first
   2b6c4:	sub	x6, x7, x0
   2b6c8:	b	2b544 <my_regexec@@Base+0x8050>
   2b6cc:	stp	x23, x24, [sp, #96]
   2b6d0:	stp	x25, x26, [sp, #112]
   2b6d4:	stp	x27, x28, [sp, #128]
   2b6d8:	ldr	x0, [sp, #240]
   2b6dc:	ldr	x6, [x0, #48]
   2b6e0:	ldr	x5, [x0, #56]
   2b6e4:	sub	w5, w5, w6
   2b6e8:	mov	x4, x3
   2b6ec:	mov	w3, #0x3b3b                	// #15163
   2b6f0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b6f4:	add	x2, x2, #0xfb8
   2b6f8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b6fc:	add	x1, x1, #0x870
   2b700:	ldr	x0, [sp, #272]
   2b704:	bl	5420 <Perl_croak@plt>
   2b708:	mov	w19, #0xfffffffe            	// #-2
   2b70c:	ldr	x0, [sp, #312]
   2b710:	cbz	x0, 2cfac <my_regexec@@Base+0x9ab8>
   2b714:	ldr	x0, [sp, #240]
   2b718:	ldr	x1, [x0, #312]
   2b71c:	cbz	x1, 2cfb4 <my_regexec@@Base+0x9ac0>
   2b720:	ldr	x0, [sp, #272]
   2b724:	bl	59e0 <Perl_av_clear@plt>
   2b728:	ldp	x21, x22, [sp, #80]
   2b72c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2b730:	mov	w1, #0xb                   	// #11
   2b734:	ldr	x19, [sp, #272]
   2b738:	mov	x0, x19
   2b73c:	bl	57e0 <Perl_newSV_type@plt>
   2b740:	mov	x1, x0
   2b744:	mov	x0, x19
   2b748:	bl	55d0 <Perl_sv_2mortal@plt>
   2b74c:	ldr	x1, [sp, #240]
   2b750:	str	x0, [x1, #312]
   2b754:	b	2b610 <my_regexec@@Base+0x811c>
   2b758:	ldr	x1, [sp, #240]
   2b75c:	ldr	x4, [x1, #8]
   2b760:	subs	x3, x0, x4
   2b764:	b.mi	2b770 <my_regexec@@Base+0x827c>  // b.first
   2b768:	sub	x6, x7, x0
   2b76c:	b	2b650 <my_regexec@@Base+0x815c>
   2b770:	stp	x23, x24, [sp, #96]
   2b774:	stp	x25, x26, [sp, #112]
   2b778:	stp	x27, x28, [sp, #128]
   2b77c:	ldr	x0, [sp, #240]
   2b780:	ldr	x6, [x0, #48]
   2b784:	ldr	x5, [x0, #56]
   2b788:	sub	w5, w5, w6
   2b78c:	mov	x4, x3
   2b790:	mov	w3, #0x3b52                	// #15186
   2b794:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b798:	add	x2, x2, #0xfb8
   2b79c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b7a0:	add	x1, x1, #0x870
   2b7a4:	ldr	x0, [sp, #272]
   2b7a8:	bl	5420 <Perl_croak@plt>
   2b7ac:	mov	w0, #0x1                   	// #1
   2b7b0:	str	w0, [sp, #248]
   2b7b4:	b	2b2ac <my_regexec@@Base+0x7db8>
   2b7b8:	ldr	w0, [sp, #356]
   2b7bc:	cbnz	w0, 2b828 <my_regexec@@Base+0x8334>
   2b7c0:	ldr	x0, [sp, #256]
   2b7c4:	ldurb	w0, [x0, #-1]
   2b7c8:	cmp	w0, #0x3b
   2b7cc:	b.eq	2b850 <my_regexec@@Base+0x835c>  // b.none
   2b7d0:	cmp	w0, #0x3a
   2b7d4:	b.ne	2b960 <my_regexec@@Base+0x846c>  // b.any
   2b7d8:	stp	x23, x24, [sp, #96]
   2b7dc:	stp	x25, x26, [sp, #112]
   2b7e0:	stp	x27, x28, [sp, #128]
   2b7e4:	ldr	x0, [sp, #256]
   2b7e8:	sub	x0, x0, #0x2
   2b7ec:	ldr	x1, [sp, #240]
   2b7f0:	ldr	x2, [x1, #48]
   2b7f4:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   2b7f8:	ldr	x3, [x3, #3880]
   2b7fc:	mov	w4, #0x4001                	// #16385
   2b800:	cmp	x0, x2
   2b804:	b.ls	2b994 <my_regexec@@Base+0x84a0>  // b.plast
   2b808:	ldrb	w1, [x0]
   2b80c:	ldr	w1, [x3, x1, lsl #2]
   2b810:	bics	wzr, w4, w1
   2b814:	b.ne	2b99c <my_regexec@@Base+0x84a8>  // b.any
   2b818:	sub	x0, x0, #0x1
   2b81c:	cmp	x0, x2
   2b820:	b.ne	2b808 <my_regexec@@Base+0x8314>  // b.any
   2b824:	b	2b9a0 <my_regexec@@Base+0x84ac>
   2b828:	mov	w19, #0xfffffffe            	// #-2
   2b82c:	ldr	x0, [sp, #312]
   2b830:	cbz	x0, 2cfbc <my_regexec@@Base+0x9ac8>
   2b834:	ldr	x0, [sp, #240]
   2b838:	ldr	x1, [x0, #312]
   2b83c:	cbz	x1, 2cfc4 <my_regexec@@Base+0x9ad0>
   2b840:	ldr	x0, [sp, #272]
   2b844:	bl	59e0 <Perl_av_clear@plt>
   2b848:	ldp	x21, x22, [sp, #80]
   2b84c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2b850:	stp	x23, x24, [sp, #96]
   2b854:	stp	x25, x26, [sp, #112]
   2b858:	stp	x27, x28, [sp, #128]
   2b85c:	ldr	x0, [sp, #312]
   2b860:	cbz	x0, 2b988 <my_regexec@@Base+0x8494>
   2b864:	ldr	x0, [sp, #240]
   2b868:	ldr	x0, [x0, #312]
   2b86c:	cbz	x0, 2b8f0 <my_regexec@@Base+0x83fc>
   2b870:	ldr	x3, [sp, #240]
   2b874:	ldr	x19, [x3, #312]
   2b878:	ldr	w0, [x3, #192]
   2b87c:	cmp	w0, #0x0
   2b880:	cset	w2, ne  // ne = any
   2b884:	ldr	x0, [sp, #256]
   2b888:	sub	x0, x0, #0x1
   2b88c:	ldr	x1, [x3, #72]
   2b890:	sub	x1, x0, x1
   2b894:	ldr	x0, [x3, #80]
   2b898:	add	x0, x0, x1
   2b89c:	ldr	x7, [x3, #16]
   2b8a0:	cmp	x0, x7
   2b8a4:	b.ls	2b918 <my_regexec@@Base+0x8424>  // b.plast
   2b8a8:	ldr	x4, [x3, #8]
   2b8ac:	sub	x3, x7, x4
   2b8b0:	mov	x6, #0x0                   	// #0
   2b8b4:	cmp	x0, x7
   2b8b8:	csel	x7, x0, x7, ls  // ls = plast
   2b8bc:	mov	w5, w2
   2b8c0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2b8c4:	add	x1, x1, #0x218
   2b8c8:	ldr	x20, [sp, #272]
   2b8cc:	mov	x0, x20
   2b8d0:	bl	5990 <Perl_newSVpvf@plt>
   2b8d4:	mov	x2, x0
   2b8d8:	mov	x1, x19
   2b8dc:	mov	x0, x20
   2b8e0:	bl	5430 <Perl_av_push@plt>
   2b8e4:	mov	w0, #0x1                   	// #1
   2b8e8:	str	w0, [sp, #248]
   2b8ec:	b	2b7e4 <my_regexec@@Base+0x82f0>
   2b8f0:	mov	w1, #0xb                   	// #11
   2b8f4:	ldr	x19, [sp, #272]
   2b8f8:	mov	x0, x19
   2b8fc:	bl	57e0 <Perl_newSV_type@plt>
   2b900:	mov	x1, x0
   2b904:	mov	x0, x19
   2b908:	bl	55d0 <Perl_sv_2mortal@plt>
   2b90c:	ldr	x1, [sp, #240]
   2b910:	str	x0, [x1, #312]
   2b914:	b	2b870 <my_regexec@@Base+0x837c>
   2b918:	ldr	x1, [sp, #240]
   2b91c:	ldr	x4, [x1, #8]
   2b920:	subs	x3, x0, x4
   2b924:	b.mi	2b930 <my_regexec@@Base+0x843c>  // b.first
   2b928:	sub	x6, x7, x0
   2b92c:	b	2b8b4 <my_regexec@@Base+0x83c0>
   2b930:	ldr	x0, [sp, #240]
   2b934:	ldr	x6, [x0, #48]
   2b938:	ldr	x5, [x0, #56]
   2b93c:	sub	w5, w5, w6
   2b940:	mov	x4, x3
   2b944:	mov	w3, #0x3b68                	// #15208
   2b948:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2b94c:	add	x2, x2, #0xfb8
   2b950:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2b954:	add	x1, x1, #0x870
   2b958:	ldr	x0, [sp, #272]
   2b95c:	bl	5420 <Perl_croak@plt>
   2b960:	mov	w19, #0xfffffffe            	// #-2
   2b964:	ldr	x0, [sp, #312]
   2b968:	cbz	x0, 2cfcc <my_regexec@@Base+0x9ad8>
   2b96c:	ldr	x0, [sp, #240]
   2b970:	ldr	x1, [x0, #312]
   2b974:	cbz	x1, 2cfd4 <my_regexec@@Base+0x9ae0>
   2b978:	ldr	x0, [sp, #272]
   2b97c:	bl	59e0 <Perl_av_clear@plt>
   2b980:	ldp	x21, x22, [sp, #80]
   2b984:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2b988:	mov	w0, #0x1                   	// #1
   2b98c:	str	w0, [sp, #248]
   2b990:	b	2b7e4 <my_regexec@@Base+0x82f0>
   2b994:	mov	x2, x0
   2b998:	b	2b9a0 <my_regexec@@Base+0x84ac>
   2b99c:	mov	x2, x0
   2b9a0:	add	x0, x2, #0x1
   2b9a4:	str	x0, [sp, #256]
   2b9a8:	ldr	w0, [sp, #356]
   2b9ac:	str	w0, [sp, #352]
   2b9b0:	b	2b2c8 <my_regexec@@Base+0x7dd4>
   2b9b4:	add	x26, x26, #0x1
   2b9b8:	mov	w27, #0x1                   	// #1
   2b9bc:	str	w27, [sp, #248]
   2b9c0:	b	2ba4c <my_regexec@@Base+0x8558>
   2b9c4:	add	x1, x26, #0x1
   2b9c8:	cmp	w0, #0x5d
   2b9cc:	b.eq	2ba20 <my_regexec@@Base+0x852c>  // b.none
   2b9d0:	cmp	x23, x1
   2b9d4:	b.ls	2ba04 <my_regexec@@Base+0x8510>  // b.plast
   2b9d8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2b9dc:	ldr	x2, [x2, #3880]
   2b9e0:	ldrb	w3, [x26, #1]
   2b9e4:	ldr	w4, [x2, x3, lsl #2]
   2b9e8:	mov	x2, x1
   2b9ec:	mov	w3, #0x4800                	// #18432
   2b9f0:	bics	wzr, w3, w4
   2b9f4:	b.eq	2baa0 <my_regexec@@Base+0x85ac>  // b.none
   2b9f8:	ldrb	w3, [x2]
   2b9fc:	cmp	w3, #0x5d
   2ba00:	b.eq	2bad0 <my_regexec@@Base+0x85dc>  // b.none
   2ba04:	sub	w3, w0, #0x5b
   2ba08:	and	w3, w3, #0xfffffffd
   2ba0c:	sub	w2, w0, #0x3a
   2ba10:	and	w2, w2, #0xff
   2ba14:	tst	w3, #0xff
   2ba18:	ccmp	w2, #0x1, #0x0, ne  // ne = any
   2ba1c:	b.hi	2bb44 <my_regexec@@Base+0x8650>  // b.pmore
   2ba20:	cbnz	x25, 2bb30 <my_regexec@@Base+0x863c>
   2ba24:	add	w20, w20, #0x1
   2ba28:	cmp	w20, #0x2
   2ba2c:	b.gt	2cf98 <my_regexec@@Base+0x9aa4>
   2ba30:	and	x0, x0, #0xff
   2ba34:	str	x0, [x21, w22, uxtw #3]
   2ba38:	add	w22, w22, #0x1
   2ba3c:	mov	x25, x26
   2ba40:	mov	x26, x1
   2ba44:	cmp	w22, #0xe
   2ba48:	b.hi	2bf04 <my_regexec@@Base+0x8a10>  // b.pmore
   2ba4c:	cmp	x26, x23
   2ba50:	b.cs	2bc30 <my_regexec@@Base+0x873c>  // b.hs, b.nlast
   2ba54:	ldrb	w0, [x26]
   2ba58:	ldr	w1, [x19, w0, sxtw #2]
   2ba5c:	mov	w2, #0x4800                	// #18432
   2ba60:	bics	wzr, w2, w1
   2ba64:	b.eq	2b9b4 <my_regexec@@Base+0x84c0>  // b.none
   2ba68:	mov	w2, #0x4020                	// #16416
   2ba6c:	bics	wzr, w2, w1
   2ba70:	b.eq	2b9c4 <my_regexec@@Base+0x84d0>  // b.none
   2ba74:	sub	w1, w0, #0x41
   2ba78:	cmp	w1, #0x19
   2ba7c:	b.hi	2bb4c <my_regexec@@Base+0x8658>  // b.pmore
   2ba80:	add	w0, w0, #0x20
   2ba84:	and	x0, x0, #0xff
   2ba88:	str	x0, [x21, w22, uxtw #3]
   2ba8c:	add	x26, x26, #0x1
   2ba90:	add	w22, w22, #0x1
   2ba94:	mov	w24, #0x1                   	// #1
   2ba98:	str	w24, [sp, #248]
   2ba9c:	b	2ba44 <my_regexec@@Base+0x8550>
   2baa0:	mov	w4, w3
   2baa4:	ldr	x5, [sp, #368]
   2baa8:	add	x2, x2, #0x1
   2baac:	cmp	x23, x2
   2bab0:	b.eq	2cfa0 <my_regexec@@Base+0x9aac>  // b.none
   2bab4:	ldrb	w3, [x2]
   2bab8:	ldr	w3, [x5, x3, lsl #2]
   2babc:	bics	wzr, w4, w3
   2bac0:	b.eq	2baa8 <my_regexec@@Base+0x85b4>  // b.none
   2bac4:	mov	w27, #0x1                   	// #1
   2bac8:	str	w27, [sp, #248]
   2bacc:	b	2b9f8 <my_regexec@@Base+0x8504>
   2bad0:	str	w27, [sp, #344]
   2bad4:	str	w24, [sp, #348]
   2bad8:	str	w22, [sp, #252]
   2badc:	str	x25, [sp, #264]
   2bae0:	cmp	w0, #0x3a
   2bae4:	b.eq	2bb10 <my_regexec@@Base+0x861c>  // b.none
   2bae8:	cmp	w0, #0x3b
   2baec:	b.eq	2bb20 <my_regexec@@Base+0x862c>  // b.none
   2baf0:	str	wzr, [sp, #340]
   2baf4:	str	wzr, [sp, #308]
   2baf8:	mov	w0, #0x1                   	// #1
   2bafc:	str	w0, [sp, #248]
   2bb00:	add	x26, x2, #0x1
   2bb04:	mov	w0, #0x1                   	// #1
   2bb08:	str	w0, [sp, #336]
   2bb0c:	b	2bca8 <my_regexec@@Base+0x87b4>
   2bb10:	str	wzr, [sp, #340]
   2bb14:	mov	w0, #0x1                   	// #1
   2bb18:	str	w0, [sp, #308]
   2bb1c:	b	2bb00 <my_regexec@@Base+0x860c>
   2bb20:	mov	w0, #0x1                   	// #1
   2bb24:	str	w0, [sp, #340]
   2bb28:	str	w0, [sp, #308]
   2bb2c:	b	2bb00 <my_regexec@@Base+0x860c>
   2bb30:	str	w27, [sp, #344]
   2bb34:	str	w24, [sp, #348]
   2bb38:	str	w22, [sp, #252]
   2bb3c:	str	x25, [sp, #264]
   2bb40:	b	2bc40 <my_regexec@@Base+0x874c>
   2bb44:	mov	x26, x25
   2bb48:	b	2ba24 <my_regexec@@Base+0x8530>
   2bb4c:	ldr	w1, [x28, #192]
   2bb50:	cbz	w1, 2bb58 <my_regexec@@Base+0x8664>
   2bb54:	tbnz	w0, #7, 2bb6c <my_regexec@@Base+0x8678>
   2bb58:	and	x0, x0, #0xff
   2bb5c:	str	x0, [x21, w22, uxtw #3]
   2bb60:	add	x26, x26, #0x1
   2bb64:	add	w22, w22, #0x1
   2bb68:	b	2ba44 <my_regexec@@Base+0x8550>
   2bb6c:	mov	w1, #0x2c                  	// #44
   2bb70:	ldr	x0, [sp, #272]
   2bb74:	bl	52a0 <Perl_ckwarn_d@plt>
   2bb78:	ands	w0, w0, #0xff
   2bb7c:	mov	w3, #0x9e                  	// #158
   2bb80:	csel	w3, w3, wzr, eq  // eq = none
   2bb84:	add	w0, w22, #0x1
   2bb88:	str	w0, [sp, #144]
   2bb8c:	cmp	x23, x26
   2bb90:	b.ls	2bc14 <my_regexec@@Base+0x8720>  // b.plast
   2bb94:	mov	x7, x26
   2bb98:	mov	x0, #0x0                   	// #0
   2bb9c:	mov	x1, #0x0                   	// #0
   2bba0:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2bba4:	ldr	x9, [x2, #3824]
   2bba8:	mov	w8, #0xff                  	// #255
   2bbac:	mov	x6, x9
   2bbb0:	ldrb	w5, [x7]
   2bbb4:	ldrb	w2, [x9, w5, sxtw]
   2bbb8:	and	x4, x2, #0xff
   2bbbc:	asr	w2, w8, w2
   2bbc0:	and	w2, w2, w5
   2bbc4:	sxtw	x2, w2
   2bbc8:	bfi	x5, x0, #6, #58
   2bbcc:	cmp	x1, #0x0
   2bbd0:	csel	x0, x5, x2, ne  // ne = any
   2bbd4:	add	x2, x6, x4
   2bbd8:	add	x1, x2, x1
   2bbdc:	ldrb	w1, [x1, #256]
   2bbe0:	cbnz	x1, 2bc04 <my_regexec@@Base+0x8710>
   2bbe4:	str	x0, [x21, w22, uxtw #3]
   2bbe8:	ldrb	w1, [x26]
   2bbec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2bbf0:	ldr	x0, [x0, #4064]
   2bbf4:	ldrb	w0, [x0, w1, sxtw]
   2bbf8:	add	x26, x26, x0
   2bbfc:	ldr	w22, [sp, #144]
   2bc00:	b	2ba44 <my_regexec@@Base+0x8550>
   2bc04:	add	x7, x7, #0x1
   2bc08:	cmp	x1, #0x1
   2bc0c:	ccmp	x23, x7, #0x0, ne  // ne = any
   2bc10:	b.hi	2bbb0 <my_regexec@@Base+0x86bc>  // b.pmore
   2bc14:	mov	x5, #0x0                   	// #0
   2bc18:	mov	x4, #0x0                   	// #0
   2bc1c:	mov	x2, #0x0                   	// #0
   2bc20:	sub	x1, x23, x26
   2bc24:	mov	x0, x26
   2bc28:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   2bc2c:	b	2bbe4 <my_regexec@@Base+0x86f0>
   2bc30:	str	w27, [sp, #344]
   2bc34:	str	w24, [sp, #348]
   2bc38:	str	w22, [sp, #252]
   2bc3c:	str	x25, [sp, #264]
   2bc40:	ldr	w0, [sp, #252]
   2bc44:	cmp	w0, #0xe
   2bc48:	cset	w1, hi  // hi = pmore
   2bc4c:	cmp	w20, #0x2
   2bc50:	cset	w0, gt
   2bc54:	orr	w0, w1, w0
   2bc58:	str	w0, [sp, #308]
   2bc5c:	cbnz	w0, 2bf08 <my_regexec@@Base+0x8a14>
   2bc60:	ldr	w0, [sp, #252]
   2bc64:	cmp	w0, #0x0
   2bc68:	cset	w0, ne  // ne = any
   2bc6c:	ldr	x1, [sp, #288]
   2bc70:	cmp	x26, x1
   2bc74:	csel	w0, w0, wzr, eq  // eq = none
   2bc78:	str	w0, [sp, #248]
   2bc7c:	cbz	w0, 2bfa8 <my_regexec@@Base+0x8ab4>
   2bc80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2bc84:	ldr	x0, [x0, #3880]
   2bc88:	ldurb	w1, [x26, #-1]
   2bc8c:	ldr	w1, [x0, x1, lsl #2]
   2bc90:	ldr	w0, [sp, #308]
   2bc94:	str	w0, [sp, #340]
   2bc98:	str	w0, [sp, #336]
   2bc9c:	mov	w0, #0x4020                	// #16416
   2bca0:	bics	wzr, w0, w1
   2bca4:	b.eq	2bf98 <my_regexec@@Base+0x8aa4>  // b.none
   2bca8:	ldr	w0, [sp, #252]
   2bcac:	cmp	w0, #0x2
   2bcb0:	b.ls	2c120 <my_regexec@@Base+0x8c2c>  // b.plast
   2bcb4:	ldr	w0, [sp, #252]
   2bcb8:	cmp	w0, #0x5
   2bcbc:	b.eq	2c180 <my_regexec@@Base+0x8c8c>  // b.none
   2bcc0:	cmp	w0, #0x6
   2bcc4:	b.eq	2c3a0 <my_regexec@@Base+0x8eac>  // b.none
   2bcc8:	cmp	w0, #0x4
   2bccc:	b.eq	2c154 <my_regexec@@Base+0x8c60>  // b.none
   2bcd0:	ldr	w0, [sp, #248]
   2bcd4:	cbz	w0, 2c818 <my_regexec@@Base+0x9324>
   2bcd8:	mov	x2, #0x2a0                 	// #672
   2bcdc:	mov	w1, #0x0                   	// #0
   2bce0:	ldr	x0, [sp, #360]
   2bce4:	bl	51f0 <memset@plt>
   2bce8:	mov	x2, #0x61                  	// #97
   2bcec:	str	x2, [sp, #632]
   2bcf0:	mov	x6, #0x6c                  	// #108
   2bcf4:	str	x6, [sp, #640]
   2bcf8:	mov	x5, #0x6e                  	// #110
   2bcfc:	str	x5, [sp, #648]
   2bd00:	mov	x10, #0x75                  	// #117
   2bd04:	str	x10, [sp, #656]
   2bd08:	mov	x0, #0x6d                  	// #109
   2bd0c:	str	x0, [sp, #664]
   2bd10:	str	x2, [sp, #680]
   2bd14:	str	x6, [sp, #688]
   2bd18:	mov	x1, #0x70                  	// #112
   2bd1c:	str	x1, [sp, #696]
   2bd20:	mov	x11, #0x68                  	// #104
   2bd24:	str	x11, [sp, #704]
   2bd28:	str	x2, [sp, #712]
   2bd2c:	str	x2, [sp, #728]
   2bd30:	mov	x13, #0x73                  	// #115
   2bd34:	str	x13, [sp, #736]
   2bd38:	mov	x7, #0x63                  	// #99
   2bd3c:	str	x7, [sp, #744]
   2bd40:	mov	x0, #0x69                  	// #105
   2bd44:	str	x0, [sp, #752]
   2bd48:	str	x0, [sp, #760]
   2bd4c:	mov	x3, #0x62                  	// #98
   2bd50:	str	x3, [sp, #776]
   2bd54:	str	x6, [sp, #784]
   2bd58:	str	x2, [sp, #792]
   2bd5c:	str	x5, [sp, #800]
   2bd60:	mov	x3, #0x6b                  	// #107
   2bd64:	str	x3, [sp, #808]
   2bd68:	str	x7, [sp, #824]
   2bd6c:	str	x5, [sp, #832]
   2bd70:	mov	x4, #0x74                  	// #116
   2bd74:	str	x4, [sp, #840]
   2bd78:	mov	x3, #0x72                  	// #114
   2bd7c:	str	x3, [sp, #848]
   2bd80:	str	x6, [sp, #856]
   2bd84:	mov	x9, #0x64                  	// #100
   2bd88:	str	x9, [sp, #872]
   2bd8c:	str	x0, [sp, #880]
   2bd90:	mov	x8, #0x67                  	// #103
   2bd94:	str	x8, [sp, #888]
   2bd98:	str	x0, [sp, #896]
   2bd9c:	str	x4, [sp, #904]
   2bda0:	str	x8, [sp, #920]
   2bda4:	str	x3, [sp, #928]
   2bda8:	str	x2, [sp, #936]
   2bdac:	str	x1, [sp, #944]
   2bdb0:	str	x11, [sp, #952]
   2bdb4:	str	x6, [sp, #968]
   2bdb8:	mov	x11, #0x6f                  	// #111
   2bdbc:	str	x11, [sp, #976]
   2bdc0:	mov	x12, #0x77                  	// #119
   2bdc4:	str	x12, [sp, #984]
   2bdc8:	mov	x6, #0x65                  	// #101
   2bdcc:	str	x6, [sp, #992]
   2bdd0:	str	x3, [sp, #1000]
   2bdd4:	str	x1, [sp, #1016]
   2bdd8:	str	x3, [sp, #1024]
   2bddc:	str	x0, [sp, #1032]
   2bde0:	str	x5, [sp, #1040]
   2bde4:	str	x4, [sp, #1048]
   2bde8:	str	x1, [sp, #1064]
   2bdec:	str	x10, [sp, #1072]
   2bdf0:	str	x5, [sp, #1080]
   2bdf4:	str	x7, [sp, #1088]
   2bdf8:	str	x4, [sp, #1096]
   2bdfc:	str	x13, [sp, #1112]
   2be00:	str	x1, [sp, #1120]
   2be04:	str	x2, [sp, #1128]
   2be08:	str	x7, [sp, #1136]
   2be0c:	str	x6, [sp, #1144]
   2be10:	str	x10, [sp, #1160]
   2be14:	str	x1, [sp, #1168]
   2be18:	str	x1, [sp, #1176]
   2be1c:	str	x6, [sp, #1184]
   2be20:	str	x3, [sp, #1192]
   2be24:	str	x12, [sp, #1208]
   2be28:	str	x11, [sp, #1216]
   2be2c:	str	x3, [sp, #1224]
   2be30:	str	x9, [sp, #1232]
   2be34:	mov	x1, #0x78                  	// #120
   2be38:	str	x1, [sp, #1256]
   2be3c:	str	x9, [sp, #1264]
   2be40:	str	x0, [sp, #1272]
   2be44:	str	x8, [sp, #1280]
   2be48:	str	x0, [sp, #1288]
   2be4c:	str	x4, [sp, #1296]
   2be50:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   2be54:	add	x0, x0, #0xc10
   2be58:	add	x0, x0, #0x2b0
   2be5c:	ldp	x2, x3, [x0]
   2be60:	stp	x2, x3, [sp, #400]
   2be64:	ldp	x2, x3, [x0, #16]
   2be68:	stp	x2, x3, [sp, #416]
   2be6c:	ldp	x2, x3, [x0, #32]
   2be70:	stp	x2, x3, [sp, #432]
   2be74:	ldp	x2, x3, [x0, #48]
   2be78:	stp	x2, x3, [sp, #448]
   2be7c:	ldp	x2, x3, [x0, #64]
   2be80:	stp	x2, x3, [sp, #464]
   2be84:	ldp	x2, x3, [x0, #80]
   2be88:	stp	x2, x3, [sp, #480]
   2be8c:	ldp	x0, x1, [x0, #96]
   2be90:	stp	x0, x1, [sp, #496]
   2be94:	ldr	w0, [sp, #356]
   2be98:	ldr	w1, [sp, #352]
   2be9c:	add	w0, w0, w1
   2bea0:	mov	w1, #0x1                   	// #1
   2bea4:	str	w1, [sp, #304]
   2bea8:	cmp	w0, w1
   2beac:	b.le	2becc <my_regexec@@Base+0x89d8>
   2beb0:	ldr	w0, [sp, #336]
   2beb4:	ldr	w1, [sp, #308]
   2beb8:	add	w0, w0, w1
   2bebc:	cmp	w0, #0x1
   2bec0:	cset	w0, gt
   2bec4:	add	w0, w0, #0x1
   2bec8:	str	w0, [sp, #304]
   2becc:	add	x0, sp, #0x190
   2bed0:	str	x0, [sp, #232]
   2bed4:	add	x0, sp, #0x278
   2bed8:	str	x0, [sp, #208]
   2bedc:	add	x0, sp, #0x518
   2bee0:	str	x0, [sp, #296]
   2bee4:	ldr	w0, [sp, #252]
   2bee8:	str	x0, [sp, #192]
   2beec:	ldrsw	x1, [sp, #304]
   2bef0:	str	x1, [sp, #328]
   2bef4:	add	x0, x0, #0x2
   2bef8:	str	x0, [sp, #320]
   2befc:	str	x26, [sp, #384]
   2bf00:	b	2c664 <my_regexec@@Base+0x9170>
   2bf04:	str	x25, [sp, #264]
   2bf08:	ldr	x0, [sp, #264]
   2bf0c:	sub	x0, x0, #0x1
   2bf10:	cmn	x0, #0x3
   2bf14:	b.hi	2bf64 <my_regexec@@Base+0x8a70>  // b.pmore
   2bf18:	mov	x0, #0xffffffffffffffff    	// #-1
   2bf1c:	str	x0, [sp, #264]
   2bf20:	mov	w0, #0x1                   	// #1
   2bf24:	str	w0, [sp, #248]
   2bf28:	ldr	x0, [sp, #256]
   2bf2c:	ldr	x23, [sp, #288]
   2bf30:	cmp	x0, x23
   2bf34:	b.cs	2bfe8 <my_regexec@@Base+0x8af4>  // b.hs, b.nlast
   2bf38:	mov	x26, x0
   2bf3c:	mov	w20, #0x0                   	// #0
   2bf40:	mov	w22, #0x0                   	// #0
   2bf44:	mov	w24, #0x0                   	// #0
   2bf48:	mov	w27, #0x0                   	// #0
   2bf4c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2bf50:	ldr	x19, [x0, #3880]
   2bf54:	add	x21, sp, #0x200
   2bf58:	ldr	x25, [sp, #264]
   2bf5c:	ldr	x28, [sp, #240]
   2bf60:	b	2ba54 <my_regexec@@Base+0x8560>
   2bf64:	mov	w19, #0xfffffffe            	// #-2
   2bf68:	ldr	x0, [sp, #312]
   2bf6c:	cbz	x0, 2cfdc <my_regexec@@Base+0x9ae8>
   2bf70:	ldr	x0, [sp, #240]
   2bf74:	ldr	x1, [x0, #312]
   2bf78:	cbz	x1, 2cff0 <my_regexec@@Base+0x9afc>
   2bf7c:	ldr	x0, [sp, #272]
   2bf80:	bl	59e0 <Perl_av_clear@plt>
   2bf84:	ldp	x21, x22, [sp, #80]
   2bf88:	ldp	x23, x24, [sp, #96]
   2bf8c:	ldp	x25, x26, [sp, #112]
   2bf90:	ldp	x27, x28, [sp, #128]
   2bf94:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2bf98:	sub	x26, x26, #0x1
   2bf9c:	ldr	w0, [sp, #252]
   2bfa0:	sub	w0, w0, #0x1
   2bfa4:	str	w0, [sp, #252]
   2bfa8:	ldr	x0, [sp, #288]
   2bfac:	cmp	x26, x0
   2bfb0:	b.cs	2c0f0 <my_regexec@@Base+0x8bfc>  // b.hs, b.nlast
   2bfb4:	ldrb	w0, [x26]
   2bfb8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2bfbc:	ldr	x1, [x1, #3880]
   2bfc0:	ldr	w2, [x1, w0, sxtw #2]
   2bfc4:	mov	w1, #0x4020                	// #16416
   2bfc8:	bics	wzr, w1, w2
   2bfcc:	b.eq	2bffc <my_regexec@@Base+0x8b08>  // b.none
   2bfd0:	str	wzr, [sp, #340]
   2bfd4:	str	wzr, [sp, #336]
   2bfd8:	str	wzr, [sp, #308]
   2bfdc:	mov	w0, #0x1                   	// #1
   2bfe0:	str	w0, [sp, #248]
   2bfe4:	b	2bca8 <my_regexec@@Base+0x87b4>
   2bfe8:	ldr	x26, [sp, #256]
   2bfec:	str	wzr, [sp, #348]
   2bff0:	str	wzr, [sp, #344]
   2bff4:	str	wzr, [sp, #252]
   2bff8:	b	2bfa8 <my_regexec@@Base+0x8ab4>
   2bffc:	cmp	w0, #0x5d
   2c000:	b.eq	2c030 <my_regexec@@Base+0x8b3c>  // b.none
   2c004:	cmp	w0, #0x3a
   2c008:	b.eq	2c0e0 <my_regexec@@Base+0x8bec>  // b.none
   2c00c:	str	wzr, [sp, #340]
   2c010:	str	wzr, [sp, #308]
   2c014:	cmp	w0, #0x3b
   2c018:	b.eq	2c0d0 <my_regexec@@Base+0x8bdc>  // b.none
   2c01c:	add	x26, x26, #0x1
   2c020:	str	wzr, [sp, #336]
   2c024:	mov	w0, #0x1                   	// #1
   2c028:	str	w0, [sp, #248]
   2c02c:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c030:	ldr	x1, [sp, #264]
   2c034:	sub	x0, x1, #0x1
   2c038:	cmn	x0, #0x3
   2c03c:	b.hi	2c108 <my_regexec@@Base+0x8c14>  // b.pmore
   2c040:	ldrb	w0, [x1]
   2c044:	cmp	w0, #0x5d
   2c048:	cset	w0, eq  // eq = none
   2c04c:	ldr	w1, [sp, #252]
   2c050:	cmp	w1, #0x0
   2c054:	csel	w0, w0, wzr, ne  // ne = any
   2c058:	str	w0, [sp, #308]
   2c05c:	cbnz	w0, 2c078 <my_regexec@@Base+0x8b84>
   2c060:	ldr	w0, [sp, #308]
   2c064:	str	w0, [sp, #340]
   2c068:	mov	w0, #0x1                   	// #1
   2c06c:	str	w0, [sp, #336]
   2c070:	str	w0, [sp, #248]
   2c074:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c078:	ldr	w0, [sp, #252]
   2c07c:	sub	w0, w0, #0x1
   2c080:	add	x1, sp, #0x200
   2c084:	ldr	x1, [x1, w0, uxtw #3]
   2c088:	cmp	x1, #0x5d
   2c08c:	b.eq	2c0a8 <my_regexec@@Base+0x8bb4>  // b.none
   2c090:	ldr	w0, [sp, #308]
   2c094:	str	w0, [sp, #336]
   2c098:	str	w0, [sp, #248]
   2c09c:	str	wzr, [sp, #340]
   2c0a0:	str	wzr, [sp, #308]
   2c0a4:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c0a8:	str	w0, [sp, #252]
   2c0ac:	ldr	w0, [sp, #308]
   2c0b0:	str	w0, [sp, #336]
   2c0b4:	str	w0, [sp, #248]
   2c0b8:	ldr	x26, [sp, #264]
   2c0bc:	str	wzr, [sp, #340]
   2c0c0:	str	wzr, [sp, #308]
   2c0c4:	mov	x0, #0xffffffffffffffff    	// #-1
   2c0c8:	str	x0, [sp, #264]
   2c0cc:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c0d0:	mov	w0, #0x1                   	// #1
   2c0d4:	str	w0, [sp, #340]
   2c0d8:	str	w0, [sp, #308]
   2c0dc:	b	2c01c <my_regexec@@Base+0x8b28>
   2c0e0:	str	wzr, [sp, #340]
   2c0e4:	mov	w0, #0x1                   	// #1
   2c0e8:	str	w0, [sp, #308]
   2c0ec:	b	2c01c <my_regexec@@Base+0x8b28>
   2c0f0:	str	wzr, [sp, #340]
   2c0f4:	str	wzr, [sp, #336]
   2c0f8:	str	wzr, [sp, #308]
   2c0fc:	mov	w0, #0x1                   	// #1
   2c100:	str	w0, [sp, #248]
   2c104:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c108:	str	wzr, [sp, #340]
   2c10c:	mov	w0, #0x1                   	// #1
   2c110:	str	w0, [sp, #336]
   2c114:	str	wzr, [sp, #308]
   2c118:	str	w0, [sp, #248]
   2c11c:	b	2bca8 <my_regexec@@Base+0x87b4>
   2c120:	mov	w19, #0xfffffffe            	// #-2
   2c124:	ldr	x0, [sp, #312]
   2c128:	cbz	x0, 2d004 <my_regexec@@Base+0x9b10>
   2c12c:	ldr	x0, [sp, #240]
   2c130:	ldr	x1, [x0, #312]
   2c134:	cbz	x1, 2d018 <my_regexec@@Base+0x9b24>
   2c138:	ldr	x0, [sp, #272]
   2c13c:	bl	59e0 <Perl_av_clear@plt>
   2c140:	ldp	x21, x22, [sp, #80]
   2c144:	ldp	x23, x24, [sp, #96]
   2c148:	ldp	x25, x26, [sp, #112]
   2c14c:	ldp	x27, x28, [sp, #128]
   2c150:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2c154:	mov	x2, #0x4                   	// #4
   2c158:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2c15c:	add	x1, x1, #0xd08
   2c160:	ldr	x0, [sp, #256]
   2c164:	bl	5460 <memcmp@plt>
   2c168:	mov	w19, w0
   2c16c:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c170:	mov	x27, x26
   2c174:	ldr	x0, [sp, #376]
   2c178:	cbnz	x0, 2c784 <my_regexec@@Base+0x9290>
   2c17c:	b	2c78c <my_regexec@@Base+0x9298>
   2c180:	ldr	x0, [sp, #256]
   2c184:	ldrb	w0, [x0, #4]
   2c188:	cmp	w0, #0x6b
   2c18c:	b.eq	2c2e8 <my_regexec@@Base+0x8df4>  // b.none
   2c190:	b.ls	2c200 <my_regexec@@Base+0x8d0c>  // b.plast
   2c194:	cmp	w0, #0x72
   2c198:	b.eq	2c330 <my_regexec@@Base+0x8e3c>  // b.none
   2c19c:	b.ls	2c26c <my_regexec@@Base+0x8d78>  // b.plast
   2c1a0:	cmp	w0, #0x74
   2c1a4:	b.ne	2bcd0 <my_regexec@@Base+0x87dc>  // b.any
   2c1a8:	mov	x2, #0x4                   	// #4
   2c1ac:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c1b0:	add	x1, x1, #0x370
   2c1b4:	ldr	x19, [sp, #256]
   2c1b8:	mov	x0, x19
   2c1bc:	bl	5460 <memcmp@plt>
   2c1c0:	cbz	w0, 2cf80 <my_regexec@@Base+0x9a8c>
   2c1c4:	mov	x2, #0x4                   	// #4
   2c1c8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c1cc:	add	x1, x1, #0x378
   2c1d0:	mov	x0, x19
   2c1d4:	bl	5460 <memcmp@plt>
   2c1d8:	cbz	w0, 2cf8c <my_regexec@@Base+0x9a98>
   2c1dc:	mov	x2, #0x4                   	// #4
   2c1e0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c1e4:	add	x1, x1, #0x380
   2c1e8:	mov	x0, x19
   2c1ec:	bl	5460 <memcmp@plt>
   2c1f0:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c1f4:	mov	x27, x26
   2c1f8:	mov	w19, #0xa                   	// #10
   2c1fc:	b	2c174 <my_regexec@@Base+0x8c80>
   2c200:	cmp	w0, #0x68
   2c204:	b.eq	2c2c4 <my_regexec@@Base+0x8dd0>  // b.none
   2c208:	b.ls	2c238 <my_regexec@@Base+0x8d44>  // b.plast
   2c20c:	cmp	w0, #0x69
   2c210:	b.ne	2bcd0 <my_regexec@@Base+0x87dc>  // b.any
   2c214:	mov	x2, #0x4                   	// #4
   2c218:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c21c:	add	x1, x1, #0x340
   2c220:	ldr	x0, [sp, #256]
   2c224:	bl	5460 <memcmp@plt>
   2c228:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c22c:	mov	x27, x26
   2c230:	mov	w19, #0x1c                  	// #28
   2c234:	b	2c174 <my_regexec@@Base+0x8c80>
   2c238:	cmp	w0, #0x61
   2c23c:	b.eq	2c2a0 <my_regexec@@Base+0x8dac>  // b.none
   2c240:	cmp	w0, #0x65
   2c244:	b.ne	2bcd0 <my_regexec@@Base+0x87dc>  // b.any
   2c248:	mov	x2, #0x4                   	// #4
   2c24c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c250:	add	x1, x1, #0x330
   2c254:	ldr	x0, [sp, #256]
   2c258:	bl	5460 <memcmp@plt>
   2c25c:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c260:	mov	x27, x26
   2c264:	mov	w19, #0x14                  	// #20
   2c268:	b	2c174 <my_regexec@@Base+0x8c80>
   2c26c:	cmp	w0, #0x6c
   2c270:	b.eq	2c30c <my_regexec@@Base+0x8e18>  // b.none
   2c274:	cmp	w0, #0x6d
   2c278:	b.ne	2bcd0 <my_regexec@@Base+0x87dc>  // b.any
   2c27c:	mov	x2, #0x4                   	// #4
   2c280:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c284:	add	x1, x1, #0x358
   2c288:	ldr	x0, [sp, #256]
   2c28c:	bl	5460 <memcmp@plt>
   2c290:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c294:	mov	x27, x26
   2c298:	mov	w19, #0xe                   	// #14
   2c29c:	b	2c174 <my_regexec@@Base+0x8c80>
   2c2a0:	mov	x2, #0x4                   	// #4
   2c2a4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c2a8:	add	x1, x1, #0x328
   2c2ac:	ldr	x0, [sp, #256]
   2c2b0:	bl	5460 <memcmp@plt>
   2c2b4:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c2b8:	mov	x27, x26
   2c2bc:	mov	w19, #0x4                   	// #4
   2c2c0:	b	2c174 <my_regexec@@Base+0x8c80>
   2c2c4:	mov	x2, #0x4                   	// #4
   2c2c8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c2cc:	add	x1, x1, #0x338
   2c2d0:	ldr	x0, [sp, #256]
   2c2d4:	bl	5460 <memcmp@plt>
   2c2d8:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c2dc:	mov	x27, x26
   2c2e0:	mov	w19, #0x10                  	// #16
   2c2e4:	b	2c174 <my_regexec@@Base+0x8c80>
   2c2e8:	mov	x2, #0x4                   	// #4
   2c2ec:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c2f0:	add	x1, x1, #0x348
   2c2f4:	ldr	x0, [sp, #256]
   2c2f8:	bl	5460 <memcmp@plt>
   2c2fc:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c300:	mov	x27, x26
   2c304:	mov	w19, #0x16                  	// #22
   2c308:	b	2c174 <my_regexec@@Base+0x8c80>
   2c30c:	mov	x2, #0x4                   	// #4
   2c310:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c314:	add	x1, x1, #0x350
   2c318:	ldr	x0, [sp, #256]
   2c31c:	bl	5460 <memcmp@plt>
   2c320:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c324:	mov	x27, x26
   2c328:	mov	w19, #0x1a                  	// #26
   2c32c:	b	2c174 <my_regexec@@Base+0x8c80>
   2c330:	mov	x2, #0x4                   	// #4
   2c334:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c338:	add	x1, x1, #0x360
   2c33c:	ldr	x0, [sp, #256]
   2c340:	bl	5460 <memcmp@plt>
   2c344:	cbnz	w0, 2c368 <my_regexec@@Base+0x8e74>
   2c348:	mov	x27, x26
   2c34c:	ldr	x0, [sp, #240]
   2c350:	ldr	w0, [x0]
   2c354:	tst	x0, #0x4
   2c358:	mov	w19, #0x12                  	// #18
   2c35c:	mov	w0, #0x6                   	// #6
   2c360:	csel	w19, w19, w0, ne  // ne = any
   2c364:	b	2c174 <my_regexec@@Base+0x8c80>
   2c368:	mov	x2, #0x4                   	// #4
   2c36c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c370:	add	x1, x1, #0x368
   2c374:	ldr	x0, [sp, #256]
   2c378:	bl	5460 <memcmp@plt>
   2c37c:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c380:	mov	x27, x26
   2c384:	ldr	x0, [sp, #240]
   2c388:	ldr	w0, [x0]
   2c38c:	tst	x0, #0x4
   2c390:	mov	w19, #0x12                  	// #18
   2c394:	mov	w0, #0x8                   	// #8
   2c398:	csel	w19, w19, w0, ne  // ne = any
   2c39c:	b	2c174 <my_regexec@@Base+0x8c80>
   2c3a0:	mov	x2, #0x6                   	// #6
   2c3a4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c3a8:	add	x1, x1, #0x388
   2c3ac:	ldr	x0, [sp, #256]
   2c3b0:	bl	5460 <memcmp@plt>
   2c3b4:	cbnz	w0, 2bcd0 <my_regexec@@Base+0x87dc>
   2c3b8:	mov	x27, x26
   2c3bc:	mov	w19, #0x18                  	// #24
   2c3c0:	b	2c174 <my_regexec@@Base+0x8c80>
   2c3c4:	bl	26bcc <my_regexec@@Base+0x36d8>
   2c3c8:	ldr	x20, [x27, #8]
   2c3cc:	cbz	x19, 2c3e8 <my_regexec@@Base+0x8ef4>
   2c3d0:	mov	x0, x19
   2c3d4:	ldr	x1, [x0]
   2c3d8:	cmp	x20, x1
   2c3dc:	b.eq	2c400 <my_regexec@@Base+0x8f0c>  // b.none
   2c3e0:	ldr	x0, [x0, #16]
   2c3e4:	cbnz	x0, 2c3d4 <my_regexec@@Base+0x8ee0>
   2c3e8:	mov	x0, #0x18                  	// #24
   2c3ec:	bl	5250 <Perl_safesysmalloc@plt>
   2c3f0:	str	x20, [x0]
   2c3f4:	str	xzr, [x0, #8]
   2c3f8:	str	x19, [x0, #16]
   2c3fc:	mov	x19, x0
   2c400:	ldr	x0, [sp, #176]
   2c404:	mov	x25, x0
   2c408:	str	x28, [x0, #8]
   2c40c:	ldr	x1, [sp, #184]
   2c410:	str	x1, [x0]
   2c414:	ldr	x0, [sp, #144]
   2c418:	cbnz	x0, 2c5d4 <my_regexec@@Base+0x90e0>
   2c41c:	ldr	x1, [x27]
   2c420:	mov	x21, x19
   2c424:	b	2c564 <my_regexec@@Base+0x9070>
   2c428:	ldr	x0, [sp, #144]
   2c42c:	cmp	x0, x19
   2c430:	b.hi	2c44c <my_regexec@@Base+0x8f58>  // b.pmore
   2c434:	ldr	x0, [sp, #200]
   2c438:	str	x19, [x0, x19, lsl #3]
   2c43c:	ldr	x0, [sp, #152]
   2c440:	ldr	x1, [sp, #184]
   2c444:	str	x1, [x0, x22, lsl #3]
   2c448:	b	2c518 <my_regexec@@Base+0x9024>
   2c44c:	ldr	x2, [x23, #8]
   2c450:	str	x2, [sp, #216]
   2c454:	cbz	x21, 2c470 <my_regexec@@Base+0x8f7c>
   2c458:	mov	x0, x21
   2c45c:	ldr	x1, [x0]
   2c460:	cmp	x2, x1
   2c464:	b.eq	2c434 <my_regexec@@Base+0x8f40>  // b.none
   2c468:	ldr	x0, [x0, #16]
   2c46c:	cbnz	x0, 2c45c <my_regexec@@Base+0x8f68>
   2c470:	mov	x0, #0x18                  	// #24
   2c474:	bl	5250 <Perl_safesysmalloc@plt>
   2c478:	ldr	x1, [sp, #216]
   2c47c:	str	x1, [x0]
   2c480:	str	xzr, [x0, #8]
   2c484:	str	x21, [x0, #16]
   2c488:	mov	x21, x0
   2c48c:	b	2c434 <my_regexec@@Base+0x8f40>
   2c490:	mov	x0, x21
   2c494:	ldr	x0, [x0, #8]
   2c498:	ldr	x2, [sp, #168]
   2c49c:	madd	x2, x2, x0, x26
   2c4a0:	add	x0, x0, x26
   2c4a4:	sub	x20, x20, x0
   2c4a8:	ldr	x0, [sp, #152]
   2c4ac:	ldr	x0, [x0, x2, lsl #3]
   2c4b0:	add	x20, x20, x0
   2c4b4:	ldr	x0, [x27]
   2c4b8:	cmp	x1, x0
   2c4bc:	b.eq	2c53c <my_regexec@@Base+0x9048>  // b.none
   2c4c0:	ldr	x1, [x25, x19, lsl #3]
   2c4c4:	ldr	x0, [x24, x22, lsl #3]
   2c4c8:	cmp	x0, x1
   2c4cc:	csel	x0, x0, x1, ls  // ls = plast
   2c4d0:	ldr	x1, [x24, x19, lsl #3]
   2c4d4:	cmp	x0, x1
   2c4d8:	csel	x0, x0, x1, ls  // ls = plast
   2c4dc:	add	x0, x0, #0x1
   2c4e0:	cmp	x0, x20
   2c4e4:	csel	x0, x0, x20, ls  // ls = plast
   2c4e8:	str	x0, [x25, x22, lsl #3]
   2c4ec:	add	x0, x19, #0x1
   2c4f0:	add	x22, x22, #0x1
   2c4f4:	add	x23, x23, #0x8
   2c4f8:	ldr	x1, [sp, #144]
   2c4fc:	cmp	x1, x19
   2c500:	b.eq	2c558 <my_regexec@@Base+0x9064>  // b.none
   2c504:	mov	x19, x0
   2c508:	ldr	x0, [sp, #160]
   2c50c:	add	x20, x19, x0
   2c510:	cmp	x28, #0x1
   2c514:	b.eq	2c428 <my_regexec@@Base+0x8f34>  // b.none
   2c518:	ldr	x1, [x23]
   2c51c:	cbz	x21, 2c490 <my_regexec@@Base+0x8f9c>
   2c520:	mov	x0, x21
   2c524:	ldr	x2, [x0]
   2c528:	cmp	x1, x2
   2c52c:	b.eq	2c494 <my_regexec@@Base+0x8fa0>  // b.none
   2c530:	ldr	x0, [x0, #16]
   2c534:	cbnz	x0, 2c524 <my_regexec@@Base+0x9030>
   2c538:	b	2c494 <my_regexec@@Base+0x8fa0>
   2c53c:	ldr	x0, [x24, x19, lsl #3]
   2c540:	cmp	x0, x20
   2c544:	csel	x0, x0, x20, ls  // ls = plast
   2c548:	str	x0, [x25, x22, lsl #3]
   2c54c:	mov	x26, x19
   2c550:	b	2c4ec <my_regexec@@Base+0x8ff8>
   2c554:	mov	x21, x19
   2c558:	ldr	x1, [x27]
   2c55c:	cbz	x21, 2c5ec <my_regexec@@Base+0x90f8>
   2c560:	mov	x19, x21
   2c564:	ldr	x0, [x21]
   2c568:	cmp	x1, x0
   2c56c:	b.eq	2c578 <my_regexec@@Base+0x9084>  // b.none
   2c570:	ldr	x21, [x21, #16]
   2c574:	cbnz	x21, 2c564 <my_regexec@@Base+0x9070>
   2c578:	str	x28, [x21, #8]
   2c57c:	add	x28, x28, #0x1
   2c580:	add	x27, x27, #0x8
   2c584:	ldr	x0, [sp, #224]
   2c588:	add	x24, x24, x0
   2c58c:	ldr	x1, [sp, #176]
   2c590:	add	x0, x1, x0
   2c594:	str	x0, [sp, #176]
   2c598:	ldr	x0, [sp, #192]
   2c59c:	cmp	x0, x28
   2c5a0:	b.cc	2c5f4 <my_regexec@@Base+0x9100>  // b.lo, b.ul, b.last
   2c5a4:	sub	x0, x28, #0x1
   2c5a8:	str	x0, [sp, #160]
   2c5ac:	ldr	x0, [sp, #192]
   2c5b0:	cmp	x0, x28
   2c5b4:	b.hi	2c3c8 <my_regexec@@Base+0x8ed4>  // b.pmore
   2c5b8:	ldr	x0, [sp, #176]
   2c5bc:	mov	x25, x0
   2c5c0:	str	x28, [x0, #8]
   2c5c4:	ldr	x1, [sp, #184]
   2c5c8:	str	x1, [x0]
   2c5cc:	ldr	x0, [sp, #144]
   2c5d0:	cbz	x0, 2c554 <my_regexec@@Base+0x9060>
   2c5d4:	ldr	x23, [sp, #208]
   2c5d8:	mov	x21, x19
   2c5dc:	mov	x22, #0x2                   	// #2
   2c5e0:	mov	x26, #0x0                   	// #0
   2c5e4:	mov	x19, #0x1                   	// #1
   2c5e8:	b	2c508 <my_regexec@@Base+0x9014>
   2c5ec:	mov	x19, x21
   2c5f0:	b	2c578 <my_regexec@@Base+0x9084>
   2c5f4:	ldr	x0, [sp, #280]
   2c5f8:	ldr	x1, [sp, #168]
   2c5fc:	sub	x0, x0, x1
   2c600:	ldr	x1, [sp, #144]
   2c604:	add	x0, x1, x0
   2c608:	add	x0, x0, #0x1
   2c60c:	ldr	x1, [sp, #152]
   2c610:	ldr	x20, [x1, x0, lsl #3]
   2c614:	cbz	x19, 2c628 <my_regexec@@Base+0x9134>
   2c618:	mov	x0, x19
   2c61c:	ldr	x19, [x19, #16]
   2c620:	bl	5650 <Perl_safesysfree@plt>
   2c624:	cbnz	x19, 2c618 <my_regexec@@Base+0x9124>
   2c628:	ldr	x0, [sp, #152]
   2c62c:	bl	5650 <Perl_safesysfree@plt>
   2c630:	ldr	x0, [sp, #328]
   2c634:	cmp	x0, x20
   2c638:	b.lt	2c640 <my_regexec@@Base+0x914c>  // b.tstop
   2c63c:	tbz	w20, #31, 2c774 <my_regexec@@Base+0x9280>
   2c640:	ldr	x0, [sp, #232]
   2c644:	add	x0, x0, #0x8
   2c648:	str	x0, [sp, #232]
   2c64c:	ldr	x0, [sp, #208]
   2c650:	add	x0, x0, #0x30
   2c654:	str	x0, [sp, #208]
   2c658:	ldr	x1, [sp, #296]
   2c65c:	cmp	x0, x1
   2c660:	b.eq	2c7d4 <my_regexec@@Base+0x92e0>  // b.none
   2c664:	ldr	x0, [sp, #232]
   2c668:	ldr	x1, [x0]
   2c66c:	str	x1, [sp, #144]
   2c670:	ldr	w0, [sp, #252]
   2c674:	subs	w0, w0, w1
   2c678:	cneg	w0, w0, mi  // mi = first
   2c67c:	ldr	w2, [sp, #304]
   2c680:	cmp	w0, w2
   2c684:	b.gt	2c640 <my_regexec@@Base+0x914c>
   2c688:	mov	x0, x1
   2c68c:	ldr	x1, [sp, #192]
   2c690:	add	x1, x0, x1
   2c694:	str	x1, [sp, #184]
   2c698:	add	x0, x0, #0x2
   2c69c:	str	x0, [sp, #168]
   2c6a0:	ldr	x1, [sp, #320]
   2c6a4:	mul	x0, x1, x0
   2c6a8:	mov	x1, x0
   2c6ac:	str	x0, [sp, #280]
   2c6b0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   2c6b4:	cmp	x1, x0
   2c6b8:	b.hi	2c3c4 <my_regexec@@Base+0x8ed0>  // b.pmore
   2c6bc:	ldr	x0, [sp, #280]
   2c6c0:	lsl	x0, x0, #3
   2c6c4:	bl	5250 <Perl_safesysmalloc@plt>
   2c6c8:	str	x0, [sp, #152]
   2c6cc:	ldr	x1, [sp, #184]
   2c6d0:	str	x1, [x0]
   2c6d4:	ldr	x3, [sp, #168]
   2c6d8:	lsl	x2, x3, #3
   2c6dc:	str	x2, [sp, #224]
   2c6e0:	str	x1, [x0, x3, lsl #3]
   2c6e4:	str	x1, [x0, #8]
   2c6e8:	add	x0, x0, x2
   2c6ec:	str	xzr, [x0, #8]
   2c6f0:	ldr	x20, [sp, #512]
   2c6f4:	mov	x0, #0x18                  	// #24
   2c6f8:	bl	5250 <Perl_safesysmalloc@plt>
   2c6fc:	mov	x19, x0
   2c700:	str	x20, [x0]
   2c704:	str	xzr, [x0, #8]
   2c708:	str	xzr, [x0, #16]
   2c70c:	ldr	x0, [sp, #208]
   2c710:	ldr	x20, [x0]
   2c714:	mov	x0, x19
   2c718:	ldr	x1, [x0]
   2c71c:	cmp	x20, x1
   2c720:	b.eq	2c744 <my_regexec@@Base+0x9250>  // b.none
   2c724:	ldr	x0, [x0, #16]
   2c728:	cbnz	x0, 2c718 <my_regexec@@Base+0x9224>
   2c72c:	mov	x0, #0x18                  	// #24
   2c730:	bl	5250 <Perl_safesysmalloc@plt>
   2c734:	str	x20, [x0]
   2c738:	str	xzr, [x0, #8]
   2c73c:	str	x19, [x0, #16]
   2c740:	mov	x19, x0
   2c744:	add	x27, sp, #0x200
   2c748:	ldr	x1, [sp, #152]
   2c74c:	ldr	x0, [sp, #224]
   2c750:	add	x24, x1, x0
   2c754:	ldr	x2, [sp, #168]
   2c758:	add	x2, x1, x2, lsl #4
   2c75c:	str	x2, [sp, #176]
   2c760:	add	x0, x0, #0x8
   2c764:	add	x0, x1, x0
   2c768:	str	x0, [sp, #200]
   2c76c:	mov	x28, #0x1                   	// #1
   2c770:	b	2c5a4 <my_regexec@@Base+0x90b0>
   2c774:	ldr	x27, [sp, #384]
   2c778:	mov	w19, #0xffffffff            	// #-1
   2c77c:	ldr	x0, [sp, #376]
   2c780:	cbz	x0, 2c824 <my_regexec@@Base+0x9330>
   2c784:	ldr	x0, [sp, #376]
   2c788:	str	x27, [x0]
   2c78c:	ldr	w0, [sp, #248]
   2c790:	cbnz	w0, 2c824 <my_regexec@@Base+0x9330>
   2c794:	cmn	w19, #0x1
   2c798:	b.eq	2cdf8 <my_regexec@@Base+0x9904>  // b.none
   2c79c:	ldr	x0, [sp, #312]
   2c7a0:	cbz	x0, 2c7b8 <my_regexec@@Base+0x92c4>
   2c7a4:	ldr	x0, [sp, #240]
   2c7a8:	ldr	x1, [x0, #312]
   2c7ac:	cbz	x1, 2c7b8 <my_regexec@@Base+0x92c4>
   2c7b0:	ldr	x0, [sp, #272]
   2c7b4:	bl	59e0 <Perl_av_clear@plt>
   2c7b8:	ldr	w0, [sp, #392]
   2c7bc:	add	w19, w19, w0
   2c7c0:	ldp	x21, x22, [sp, #80]
   2c7c4:	ldp	x23, x24, [sp, #96]
   2c7c8:	ldp	x25, x26, [sp, #112]
   2c7cc:	ldp	x27, x28, [sp, #128]
   2c7d0:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2c7d4:	ldr	x0, [sp, #264]
   2c7d8:	sub	x0, x0, #0x1
   2c7dc:	cmn	x0, #0x3
   2c7e0:	b.ls	2bf18 <my_regexec@@Base+0x8a24>  // b.plast
   2c7e4:	ldr	x0, [sp, #312]
   2c7e8:	cbz	x0, 2c800 <my_regexec@@Base+0x930c>
   2c7ec:	ldr	x0, [sp, #240]
   2c7f0:	ldr	x1, [x0, #312]
   2c7f4:	cbz	x1, 2c800 <my_regexec@@Base+0x930c>
   2c7f8:	ldr	x0, [sp, #272]
   2c7fc:	bl	59e0 <Perl_av_clear@plt>
   2c800:	mov	w19, #0xfffffffe            	// #-2
   2c804:	ldp	x21, x22, [sp, #80]
   2c808:	ldp	x23, x24, [sp, #96]
   2c80c:	ldp	x25, x26, [sp, #112]
   2c810:	ldp	x27, x28, [sp, #128]
   2c814:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2c818:	mov	x27, x26
   2c81c:	mov	w19, #0xffffffff            	// #-1
   2c820:	b	2c174 <my_regexec@@Base+0x8c80>
   2c824:	ldr	x0, [sp, #312]
   2c828:	cmp	x0, #0x0
   2c82c:	cset	w19, ne  // ne = any
   2c830:	ldr	w0, [sp, #348]
   2c834:	cmp	w0, #0x0
   2c838:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   2c83c:	b.ne	2c9dc <my_regexec@@Base+0x94e8>  // b.any
   2c840:	ldr	w0, [sp, #344]
   2c844:	cmp	w0, #0x0
   2c848:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   2c84c:	b.ne	2cac8 <my_regexec@@Base+0x95d4>  // b.any
   2c850:	ldr	w0, [sp, #340]
   2c854:	cbz	w0, 2cb48 <my_regexec@@Base+0x9654>
   2c858:	ldr	x0, [sp, #312]
   2c85c:	cbz	x0, 2cf50 <my_regexec@@Base+0x9a5c>
   2c860:	ldr	x0, [sp, #240]
   2c864:	ldr	x0, [x0, #312]
   2c868:	cbz	x0, 2cbf8 <my_regexec@@Base+0x9704>
   2c86c:	ldr	x3, [sp, #240]
   2c870:	ldr	x20, [x3, #312]
   2c874:	ldr	w0, [x3, #192]
   2c878:	cmp	w0, #0x0
   2c87c:	cset	w2, ne  // ne = any
   2c880:	ldr	x0, [x3, #72]
   2c884:	sub	x1, x27, x0
   2c888:	ldr	x0, [x3, #80]
   2c88c:	add	x0, x0, x1
   2c890:	ldr	x7, [x3, #16]
   2c894:	cmp	x0, x7
   2c898:	b.ls	2cc20 <my_regexec@@Base+0x972c>  // b.plast
   2c89c:	ldr	x4, [x3, #8]
   2c8a0:	sub	x3, x7, x4
   2c8a4:	mov	x6, #0x0                   	// #0
   2c8a8:	cmp	x0, x7
   2c8ac:	csel	x7, x0, x7, ls  // ls = plast
   2c8b0:	mov	w5, w2
   2c8b4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c8b8:	add	x1, x1, #0x218
   2c8bc:	ldr	x21, [sp, #272]
   2c8c0:	mov	x0, x21
   2c8c4:	bl	5990 <Perl_newSVpvf@plt>
   2c8c8:	mov	x2, x0
   2c8cc:	mov	x1, x20
   2c8d0:	mov	x0, x21
   2c8d4:	bl	5430 <Perl_av_push@plt>
   2c8d8:	ldr	w0, [sp, #336]
   2c8dc:	eor	w0, w0, #0x1
   2c8e0:	tst	w19, w0
   2c8e4:	b.eq	2c960 <my_regexec@@Base+0x946c>  // b.none
   2c8e8:	ldr	x0, [sp, #240]
   2c8ec:	ldr	x0, [x0, #312]
   2c8f0:	cbz	x0, 2cd54 <my_regexec@@Base+0x9860>
   2c8f4:	ldr	x3, [sp, #240]
   2c8f8:	ldr	x19, [x3, #312]
   2c8fc:	ldr	w0, [x3, #192]
   2c900:	cmp	w0, #0x0
   2c904:	cset	w2, ne  // ne = any
   2c908:	ldr	x0, [x3, #72]
   2c90c:	sub	x1, x27, x0
   2c910:	ldr	x0, [x3, #80]
   2c914:	add	x0, x0, x1
   2c918:	ldr	x7, [x3, #16]
   2c91c:	cmp	x0, x7
   2c920:	b.ls	2cd7c <my_regexec@@Base+0x9888>  // b.plast
   2c924:	ldr	x4, [x3, #8]
   2c928:	sub	x3, x7, x4
   2c92c:	mov	x6, #0x0                   	// #0
   2c930:	cmp	x0, x7
   2c934:	csel	x7, x0, x7, ls  // ls = plast
   2c938:	mov	w5, w2
   2c93c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2c940:	add	x1, x1, #0x498
   2c944:	ldr	x20, [sp, #272]
   2c948:	mov	x0, x20
   2c94c:	bl	5990 <Perl_newSVpvf@plt>
   2c950:	mov	x2, x0
   2c954:	mov	x1, x19
   2c958:	mov	x0, x20
   2c95c:	bl	5430 <Perl_av_push@plt>
   2c960:	ldr	x0, [sp, #240]
   2c964:	ldr	x1, [x0, #312]
   2c968:	cbz	x1, 2cf68 <my_regexec@@Base+0x9a74>
   2c96c:	ldr	w0, [x1, #12]
   2c970:	and	w2, w0, #0xff
   2c974:	cmp	w2, #0xb
   2c978:	b.ne	2cdc4 <my_regexec@@Base+0x98d0>  // b.any
   2c97c:	tbnz	w0, #23, 2cde8 <my_regexec@@Base+0x98f4>
   2c980:	ldr	x0, [x1]
   2c984:	ldr	x0, [x0, #16]
   2c988:	mov	w19, #0xffffffff            	// #-1
   2c98c:	tbnz	x0, #63, 2d02c <my_regexec@@Base+0x9b38>
   2c990:	ldr	x0, [sp, #240]
   2c994:	ldr	x0, [x0, #312]
   2c998:	ldr	x1, [sp, #312]
   2c99c:	str	x0, [x1]
   2c9a0:	ldp	x21, x22, [sp, #80]
   2c9a4:	ldp	x23, x24, [sp, #96]
   2c9a8:	ldp	x25, x26, [sp, #112]
   2c9ac:	ldp	x27, x28, [sp, #128]
   2c9b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2c9b4:	ldr	x0, [x0, #3920]
   2c9b8:	ldr	x1, [sp, #1304]
   2c9bc:	ldr	x0, [x0]
   2c9c0:	eor	x0, x1, x0
   2c9c4:	cbnz	x0, 2d054 <my_regexec@@Base+0x9b60>
   2c9c8:	mov	w0, w19
   2c9cc:	ldp	x19, x20, [sp, #64]
   2c9d0:	ldp	x29, x30, [sp, #48]
   2c9d4:	add	sp, sp, #0x520
   2c9d8:	ret
   2c9dc:	ldr	x0, [sp, #240]
   2c9e0:	ldr	x0, [x0, #312]
   2c9e4:	cbz	x0, 2ca58 <my_regexec@@Base+0x9564>
   2c9e8:	ldr	x3, [sp, #240]
   2c9ec:	ldr	x20, [x3, #312]
   2c9f0:	ldr	w0, [x3, #192]
   2c9f4:	cmp	w0, #0x0
   2c9f8:	cset	w2, ne  // ne = any
   2c9fc:	ldr	x0, [x3, #72]
   2ca00:	sub	x1, x27, x0
   2ca04:	ldr	x0, [x3, #80]
   2ca08:	add	x0, x0, x1
   2ca0c:	ldr	x7, [x3, #16]
   2ca10:	cmp	x0, x7
   2ca14:	b.ls	2ca80 <my_regexec@@Base+0x958c>  // b.plast
   2ca18:	ldr	x4, [x3, #8]
   2ca1c:	sub	x3, x7, x4
   2ca20:	mov	x6, #0x0                   	// #0
   2ca24:	cmp	x0, x7
   2ca28:	csel	x7, x0, x7, ls  // ls = plast
   2ca2c:	mov	w5, w2
   2ca30:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2ca34:	add	x1, x1, #0x390
   2ca38:	ldr	x21, [sp, #272]
   2ca3c:	mov	x0, x21
   2ca40:	bl	5990 <Perl_newSVpvf@plt>
   2ca44:	mov	x2, x0
   2ca48:	mov	x1, x20
   2ca4c:	mov	x0, x21
   2ca50:	bl	5430 <Perl_av_push@plt>
   2ca54:	b	2c840 <my_regexec@@Base+0x934c>
   2ca58:	mov	w1, #0xb                   	// #11
   2ca5c:	ldr	x20, [sp, #272]
   2ca60:	mov	x0, x20
   2ca64:	bl	57e0 <Perl_newSV_type@plt>
   2ca68:	mov	x1, x0
   2ca6c:	mov	x0, x20
   2ca70:	bl	55d0 <Perl_sv_2mortal@plt>
   2ca74:	ldr	x1, [sp, #240]
   2ca78:	str	x0, [x1, #312]
   2ca7c:	b	2c9e8 <my_regexec@@Base+0x94f4>
   2ca80:	ldr	x1, [sp, #240]
   2ca84:	ldr	x4, [x1, #8]
   2ca88:	subs	x3, x0, x4
   2ca8c:	b.mi	2ca98 <my_regexec@@Base+0x95a4>  // b.first
   2ca90:	sub	x6, x7, x0
   2ca94:	b	2ca24 <my_regexec@@Base+0x9530>
   2ca98:	ldr	x0, [sp, #240]
   2ca9c:	ldr	x6, [x0, #48]
   2caa0:	ldr	x5, [x0, #56]
   2caa4:	sub	w5, w5, w6
   2caa8:	mov	x4, x3
   2caac:	mov	w3, #0x3cfd                	// #15613
   2cab0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cab4:	add	x2, x2, #0xfb8
   2cab8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cabc:	add	x1, x1, #0x870
   2cac0:	ldr	x0, [sp, #272]
   2cac4:	bl	5420 <Perl_croak@plt>
   2cac8:	ldr	x0, [sp, #240]
   2cacc:	ldr	x0, [x0, #312]
   2cad0:	cbz	x0, 2cb88 <my_regexec@@Base+0x9694>
   2cad4:	ldr	x3, [sp, #240]
   2cad8:	ldr	x20, [x3, #312]
   2cadc:	ldr	w0, [x3, #192]
   2cae0:	cmp	w0, #0x0
   2cae4:	cset	w2, ne  // ne = any
   2cae8:	ldr	x0, [x3, #72]
   2caec:	sub	x1, x27, x0
   2caf0:	ldr	x0, [x3, #80]
   2caf4:	add	x0, x0, x1
   2caf8:	ldr	x7, [x3, #16]
   2cafc:	cmp	x0, x7
   2cb00:	b.ls	2cbb0 <my_regexec@@Base+0x96bc>  // b.plast
   2cb04:	ldr	x4, [x3, #8]
   2cb08:	sub	x3, x7, x4
   2cb0c:	mov	x6, #0x0                   	// #0
   2cb10:	cmp	x0, x7
   2cb14:	csel	x7, x0, x7, ls  // ls = plast
   2cb18:	mov	w5, w2
   2cb1c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2cb20:	add	x1, x1, #0xd8
   2cb24:	ldr	x21, [sp, #272]
   2cb28:	mov	x0, x21
   2cb2c:	bl	5990 <Perl_newSVpvf@plt>
   2cb30:	mov	x2, x0
   2cb34:	mov	x1, x20
   2cb38:	mov	x0, x21
   2cb3c:	bl	5430 <Perl_av_push@plt>
   2cb40:	ldr	w0, [sp, #340]
   2cb44:	cbnz	w0, 2c860 <my_regexec@@Base+0x936c>
   2cb48:	ldr	w0, [sp, #308]
   2cb4c:	eor	w0, w0, #0x1
   2cb50:	tst	w19, w0
   2cb54:	b.ne	2cc68 <my_regexec@@Base+0x9774>  // b.any
   2cb58:	ldr	w0, [sp, #336]
   2cb5c:	eor	w0, w0, #0x1
   2cb60:	tst	w19, w0
   2cb64:	b.ne	2c8e8 <my_regexec@@Base+0x93f4>  // b.any
   2cb68:	ldr	x0, [sp, #312]
   2cb6c:	cbnz	x0, 2c960 <my_regexec@@Base+0x946c>
   2cb70:	mov	w19, #0xffffffff            	// #-1
   2cb74:	ldp	x21, x22, [sp, #80]
   2cb78:	ldp	x23, x24, [sp, #96]
   2cb7c:	ldp	x25, x26, [sp, #112]
   2cb80:	ldp	x27, x28, [sp, #128]
   2cb84:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cb88:	mov	w1, #0xb                   	// #11
   2cb8c:	ldr	x20, [sp, #272]
   2cb90:	mov	x0, x20
   2cb94:	bl	57e0 <Perl_newSV_type@plt>
   2cb98:	mov	x1, x0
   2cb9c:	mov	x0, x20
   2cba0:	bl	55d0 <Perl_sv_2mortal@plt>
   2cba4:	ldr	x1, [sp, #240]
   2cba8:	str	x0, [x1, #312]
   2cbac:	b	2cad4 <my_regexec@@Base+0x95e0>
   2cbb0:	ldr	x1, [sp, #240]
   2cbb4:	ldr	x4, [x1, #8]
   2cbb8:	subs	x3, x0, x4
   2cbbc:	b.mi	2cbc8 <my_regexec@@Base+0x96d4>  // b.first
   2cbc0:	sub	x6, x7, x0
   2cbc4:	b	2cb10 <my_regexec@@Base+0x961c>
   2cbc8:	ldr	x0, [sp, #240]
   2cbcc:	ldr	x6, [x0, #48]
   2cbd0:	ldr	x5, [x0, #56]
   2cbd4:	sub	w5, w5, w6
   2cbd8:	mov	x4, x3
   2cbdc:	mov	w3, #0x3d00                	// #15616
   2cbe0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cbe4:	add	x2, x2, #0xfb8
   2cbe8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cbec:	add	x1, x1, #0x870
   2cbf0:	ldr	x0, [sp, #272]
   2cbf4:	bl	5420 <Perl_croak@plt>
   2cbf8:	mov	w1, #0xb                   	// #11
   2cbfc:	ldr	x20, [sp, #272]
   2cc00:	mov	x0, x20
   2cc04:	bl	57e0 <Perl_newSV_type@plt>
   2cc08:	mov	x1, x0
   2cc0c:	mov	x0, x20
   2cc10:	bl	55d0 <Perl_sv_2mortal@plt>
   2cc14:	ldr	x1, [sp, #240]
   2cc18:	str	x0, [x1, #312]
   2cc1c:	b	2c86c <my_regexec@@Base+0x9378>
   2cc20:	ldr	x1, [sp, #240]
   2cc24:	ldr	x4, [x1, #8]
   2cc28:	subs	x3, x0, x4
   2cc2c:	b.mi	2cc38 <my_regexec@@Base+0x9744>  // b.first
   2cc30:	sub	x6, x7, x0
   2cc34:	b	2c8a8 <my_regexec@@Base+0x93b4>
   2cc38:	ldr	x0, [sp, #240]
   2cc3c:	ldr	x6, [x0, #48]
   2cc40:	ldr	x5, [x0, #56]
   2cc44:	sub	w5, w5, w6
   2cc48:	mov	x4, x3
   2cc4c:	mov	w3, #0x3d03                	// #15619
   2cc50:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cc54:	add	x2, x2, #0xfb8
   2cc58:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cc5c:	add	x1, x1, #0x870
   2cc60:	ldr	x0, [sp, #272]
   2cc64:	bl	5420 <Perl_croak@plt>
   2cc68:	ldr	x0, [sp, #240]
   2cc6c:	ldr	x0, [x0, #312]
   2cc70:	cbz	x0, 2cce4 <my_regexec@@Base+0x97f0>
   2cc74:	ldr	x3, [sp, #240]
   2cc78:	ldr	x20, [x3, #312]
   2cc7c:	ldr	w0, [x3, #192]
   2cc80:	cmp	w0, #0x0
   2cc84:	cset	w2, ne  // ne = any
   2cc88:	ldr	x0, [x3, #72]
   2cc8c:	sub	x1, x27, x0
   2cc90:	ldr	x0, [x3, #80]
   2cc94:	add	x0, x0, x1
   2cc98:	ldr	x7, [x3, #16]
   2cc9c:	cmp	x0, x7
   2cca0:	b.ls	2cd0c <my_regexec@@Base+0x9818>  // b.plast
   2cca4:	ldr	x4, [x3, #8]
   2cca8:	sub	x3, x7, x4
   2ccac:	mov	x6, #0x0                   	// #0
   2ccb0:	cmp	x0, x7
   2ccb4:	csel	x7, x0, x7, ls  // ls = plast
   2ccb8:	mov	w5, w2
   2ccbc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2ccc0:	add	x1, x1, #0x418
   2ccc4:	ldr	x21, [sp, #272]
   2ccc8:	mov	x0, x21
   2cccc:	bl	5990 <Perl_newSVpvf@plt>
   2ccd0:	mov	x2, x0
   2ccd4:	mov	x1, x20
   2ccd8:	mov	x0, x21
   2ccdc:	bl	5430 <Perl_av_push@plt>
   2cce0:	b	2c8d8 <my_regexec@@Base+0x93e4>
   2cce4:	mov	w1, #0xb                   	// #11
   2cce8:	ldr	x20, [sp, #272]
   2ccec:	mov	x0, x20
   2ccf0:	bl	57e0 <Perl_newSV_type@plt>
   2ccf4:	mov	x1, x0
   2ccf8:	mov	x0, x20
   2ccfc:	bl	55d0 <Perl_sv_2mortal@plt>
   2cd00:	ldr	x1, [sp, #240]
   2cd04:	str	x0, [x1, #312]
   2cd08:	b	2cc74 <my_regexec@@Base+0x9780>
   2cd0c:	ldr	x1, [sp, #240]
   2cd10:	ldr	x4, [x1, #8]
   2cd14:	subs	x3, x0, x4
   2cd18:	b.mi	2cd24 <my_regexec@@Base+0x9830>  // b.first
   2cd1c:	sub	x6, x7, x0
   2cd20:	b	2ccb0 <my_regexec@@Base+0x97bc>
   2cd24:	ldr	x0, [sp, #240]
   2cd28:	ldr	x6, [x0, #48]
   2cd2c:	ldr	x5, [x0, #56]
   2cd30:	sub	w5, w5, w6
   2cd34:	mov	x4, x3
   2cd38:	mov	w3, #0x3d06                	// #15622
   2cd3c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cd40:	add	x2, x2, #0xfb8
   2cd44:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cd48:	add	x1, x1, #0x870
   2cd4c:	ldr	x0, [sp, #272]
   2cd50:	bl	5420 <Perl_croak@plt>
   2cd54:	mov	w1, #0xb                   	// #11
   2cd58:	ldr	x19, [sp, #272]
   2cd5c:	mov	x0, x19
   2cd60:	bl	57e0 <Perl_newSV_type@plt>
   2cd64:	mov	x1, x0
   2cd68:	mov	x0, x19
   2cd6c:	bl	55d0 <Perl_sv_2mortal@plt>
   2cd70:	ldr	x1, [sp, #240]
   2cd74:	str	x0, [x1, #312]
   2cd78:	b	2c8f4 <my_regexec@@Base+0x9400>
   2cd7c:	ldr	x1, [sp, #240]
   2cd80:	ldr	x4, [x1, #8]
   2cd84:	subs	x3, x0, x4
   2cd88:	b.mi	2cd94 <my_regexec@@Base+0x98a0>  // b.first
   2cd8c:	sub	x6, x7, x0
   2cd90:	b	2c930 <my_regexec@@Base+0x943c>
   2cd94:	ldr	x0, [sp, #240]
   2cd98:	ldr	x6, [x0, #48]
   2cd9c:	ldr	x5, [x0, #56]
   2cda0:	sub	w5, w5, w6
   2cda4:	mov	x4, x3
   2cda8:	mov	w3, #0x3d09                	// #15625
   2cdac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cdb0:	add	x2, x2, #0xfb8
   2cdb4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cdb8:	add	x1, x1, #0x870
   2cdbc:	ldr	x0, [sp, #272]
   2cdc0:	bl	5420 <Perl_croak@plt>
   2cdc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2cdc8:	add	x3, x3, #0xc10
   2cdcc:	add	x3, x3, #0x320
   2cdd0:	mov	w2, #0x2e                  	// #46
   2cdd4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   2cdd8:	add	x1, x1, #0xc80
   2cddc:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   2cde0:	add	x0, x0, #0xb38
   2cde4:	bl	58e0 <__assert_fail@plt>
   2cde8:	ldr	x0, [sp, #272]
   2cdec:	bl	53e0 <Perl_mg_size@plt>
   2cdf0:	sxtw	x0, w0
   2cdf4:	b	2c988 <my_regexec@@Base+0x9494>
   2cdf8:	ldr	w0, [sp, #396]
   2cdfc:	cbnz	w0, 2d040 <my_regexec@@Base+0x9b4c>
   2ce00:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   2ce04:	add	x0, x0, #0x20
   2ce08:	adrp	x19, 77000 <boot_re@@Base+0x1541c>
   2ce0c:	add	x19, x19, #0x50
   2ce10:	ldr	w1, [sp, #392]
   2ce14:	cmp	w1, #0x0
   2ce18:	csel	x19, x19, x0, ne  // ne = any
   2ce1c:	ldr	x0, [sp, #240]
   2ce20:	str	x27, [x0, #64]
   2ce24:	ldr	x1, [x0, #24]
   2ce28:	cbz	x1, 2ce38 <my_regexec@@Base+0x9944>
   2ce2c:	mov	w2, #0xb                   	// #11
   2ce30:	ldr	x0, [sp, #272]
   2ce34:	bl	54b0 <Perl_save_pushptr@plt>
   2ce38:	ldr	x0, [sp, #240]
   2ce3c:	ldr	x1, [x0, #160]
   2ce40:	cbz	x1, 2ce50 <my_regexec@@Base+0x995c>
   2ce44:	mov	w2, #0xa                   	// #10
   2ce48:	ldr	x0, [sp, #272]
   2ce4c:	bl	54b0 <Perl_save_pushptr@plt>
   2ce50:	ldr	x0, [sp, #240]
   2ce54:	ldr	x1, [x0, #168]
   2ce58:	cbz	x1, 2ce68 <my_regexec@@Base+0x9974>
   2ce5c:	mov	w2, #0xa                   	// #10
   2ce60:	ldr	x0, [sp, #272]
   2ce64:	bl	54b0 <Perl_save_pushptr@plt>
   2ce68:	ldr	x2, [sp, #240]
   2ce6c:	ldr	x5, [x2, #64]
   2ce70:	ldr	x0, [x2, #72]
   2ce74:	sub	x1, x5, x0
   2ce78:	ldr	x0, [x2, #80]
   2ce7c:	add	x0, x0, x1
   2ce80:	ldr	x3, [x2, #16]
   2ce84:	cmp	x0, x3
   2ce88:	b.hi	2cefc <my_regexec@@Base+0x9a08>  // b.pmore
   2ce8c:	ldr	x1, [sp, #240]
   2ce90:	ldr	x2, [x1, #8]
   2ce94:	sub	x6, x3, x0
   2ce98:	subs	x4, x0, x2
   2ce9c:	b.mi	2cf0c <my_regexec@@Base+0x9a18>  // b.first
   2cea0:	ldr	x1, [sp, #240]
   2cea4:	ldr	w1, [x1, #192]
   2cea8:	cmp	w1, #0x0
   2ceac:	cset	w1, ne  // ne = any
   2ceb0:	ldr	x7, [sp, #256]
   2ceb4:	sub	x5, x5, x7
   2ceb8:	cmp	x0, x3
   2cebc:	csel	x0, x0, x3, ls  // ls = plast
   2cec0:	str	x0, [sp, #40]
   2cec4:	str	x6, [sp, #32]
   2cec8:	str	w1, [sp, #24]
   2cecc:	str	x2, [sp, #16]
   2ced0:	str	x4, [sp, #8]
   2ced4:	str	w1, [sp]
   2ced8:	sub	x6, x5, #0x2
   2cedc:	mov	w5, w1
   2cee0:	mov	x4, x19
   2cee4:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   2cee8:	add	x3, x3, #0x5d8
   2ceec:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   2cef0:	add	x2, x2, #0x518
   2cef4:	ldr	x0, [sp, #272]
   2cef8:	bl	273ac <my_regexec@@Base+0x3eb8>
   2cefc:	ldr	x2, [x2, #8]
   2cf00:	sub	x4, x3, x2
   2cf04:	mov	x6, #0x0                   	// #0
   2cf08:	b	2cea0 <my_regexec@@Base+0x99ac>
   2cf0c:	ldr	x0, [sp, #240]
   2cf10:	ldr	x6, [x0, #48]
   2cf14:	ldr	x5, [x0, #56]
   2cf18:	sub	w5, w5, w6
   2cf1c:	mov	w3, #0x3d21                	// #15649
   2cf20:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   2cf24:	add	x2, x2, #0xfb8
   2cf28:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   2cf2c:	add	x1, x1, #0x870
   2cf30:	ldr	x0, [sp, #272]
   2cf34:	bl	5420 <Perl_croak@plt>
   2cf38:	mov	w19, #0xfffffffe            	// #-2
   2cf3c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cf40:	mov	w19, #0xffffffff            	// #-1
   2cf44:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cf48:	mov	w19, #0xffffffff            	// #-1
   2cf4c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cf50:	mov	w19, #0xffffffff            	// #-1
   2cf54:	ldp	x21, x22, [sp, #80]
   2cf58:	ldp	x23, x24, [sp, #96]
   2cf5c:	ldp	x25, x26, [sp, #112]
   2cf60:	ldp	x27, x28, [sp, #128]
   2cf64:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cf68:	mov	w19, #0xffffffff            	// #-1
   2cf6c:	ldp	x21, x22, [sp, #80]
   2cf70:	ldp	x23, x24, [sp, #96]
   2cf74:	ldp	x25, x26, [sp, #112]
   2cf78:	ldp	x27, x28, [sp, #128]
   2cf7c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cf80:	mov	x27, x26
   2cf84:	mov	w19, #0x2                   	// #2
   2cf88:	b	2c174 <my_regexec@@Base+0x8c80>
   2cf8c:	mov	x27, x26
   2cf90:	mov	w19, #0xc                   	// #12
   2cf94:	b	2c174 <my_regexec@@Base+0x8c80>
   2cf98:	str	x26, [sp, #264]
   2cf9c:	b	2bf08 <my_regexec@@Base+0x8a14>
   2cfa0:	mov	w27, #0x1                   	// #1
   2cfa4:	str	w27, [sp, #248]
   2cfa8:	b	2ba04 <my_regexec@@Base+0x8510>
   2cfac:	ldp	x21, x22, [sp, #80]
   2cfb0:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfb4:	ldp	x21, x22, [sp, #80]
   2cfb8:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfbc:	ldp	x21, x22, [sp, #80]
   2cfc0:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfc4:	ldp	x21, x22, [sp, #80]
   2cfc8:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfcc:	ldp	x21, x22, [sp, #80]
   2cfd0:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfd4:	ldp	x21, x22, [sp, #80]
   2cfd8:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cfdc:	ldp	x21, x22, [sp, #80]
   2cfe0:	ldp	x23, x24, [sp, #96]
   2cfe4:	ldp	x25, x26, [sp, #112]
   2cfe8:	ldp	x27, x28, [sp, #128]
   2cfec:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2cff0:	ldp	x21, x22, [sp, #80]
   2cff4:	ldp	x23, x24, [sp, #96]
   2cff8:	ldp	x25, x26, [sp, #112]
   2cffc:	ldp	x27, x28, [sp, #128]
   2d000:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2d004:	ldp	x21, x22, [sp, #80]
   2d008:	ldp	x23, x24, [sp, #96]
   2d00c:	ldp	x25, x26, [sp, #112]
   2d010:	ldp	x27, x28, [sp, #128]
   2d014:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2d018:	ldp	x21, x22, [sp, #80]
   2d01c:	ldp	x23, x24, [sp, #96]
   2d020:	ldp	x25, x26, [sp, #112]
   2d024:	ldp	x27, x28, [sp, #128]
   2d028:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2d02c:	ldp	x21, x22, [sp, #80]
   2d030:	ldp	x23, x24, [sp, #96]
   2d034:	ldp	x25, x26, [sp, #112]
   2d038:	ldp	x27, x28, [sp, #128]
   2d03c:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2d040:	ldp	x21, x22, [sp, #80]
   2d044:	ldp	x23, x24, [sp, #96]
   2d048:	ldp	x25, x26, [sp, #112]
   2d04c:	ldp	x27, x28, [sp, #128]
   2d050:	b	2c9b0 <my_regexec@@Base+0x94bc>
   2d054:	stp	x21, x22, [sp, #80]
   2d058:	stp	x23, x24, [sp, #96]
   2d05c:	stp	x25, x26, [sp, #112]
   2d060:	stp	x27, x28, [sp, #128]
   2d064:	bl	5300 <__stack_chk_fail@plt>
   2d068:	stp	x29, x30, [sp, #-112]!
   2d06c:	mov	x29, sp
   2d070:	stp	x21, x22, [sp, #32]
   2d074:	stp	x23, x24, [sp, #48]
   2d078:	mov	x22, x0
   2d07c:	mov	x21, x2
   2d080:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d084:	ldr	x0, [x0, #3920]
   2d088:	ldr	x2, [x0]
   2d08c:	str	x2, [sp, #104]
   2d090:	mov	x2, #0x0                   	// #0
   2d094:	str	xzr, [sp, #96]
   2d098:	ldr	w2, [x21, #4]
   2d09c:	ldrb	w0, [x21, #1]
   2d0a0:	mov	w24, #0x0                   	// #0
   2d0a4:	cmp	w0, #0x16
   2d0a8:	b.eq	2d0b0 <my_regexec@@Base+0x9bbc>  // b.none
   2d0ac:	ldrb	w24, [x21]
   2d0b0:	cbz	x1, 2d18c <my_regexec@@Base+0x9c98>
   2d0b4:	stp	x19, x20, [sp, #16]
   2d0b8:	stp	x25, x26, [sp, #64]
   2d0bc:	cmn	w2, #0x1
   2d0c0:	b.eq	2d300 <my_regexec@@Base+0x9e0c>  // b.none
   2d0c4:	ldr	x0, [x1, #40]
   2d0c8:	ldr	x4, [x0, #24]
   2d0cc:	add	x0, x4, w2, uxtw #3
   2d0d0:	ldr	x3, [x0, #16]
   2d0d4:	ldr	w0, [x3, #12]
   2d0d8:	and	w5, w0, #0xf
   2d0dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2d0e0:	ldr	x1, [x1, #3840]
   2d0e4:	ldrb	w1, [x1, w5, uxtw]
   2d0e8:	cbz	w1, 2d1bc <my_regexec@@Base+0x9cc8>
   2d0ec:	and	w1, w0, #0xc000
   2d0f0:	cmp	w1, #0x8, lsl #12
   2d0f4:	b.eq	2d1e4 <my_regexec@@Base+0x9cf0>  // b.none
   2d0f8:	and	w0, w0, #0xff
   2d0fc:	cmp	w0, #0xf
   2d100:	b.eq	2d21c <my_regexec@@Base+0x9d28>  // b.none
   2d104:	ldr	x19, [x3, #16]
   2d108:	ldr	x0, [x4, #8]
   2d10c:	ldrb	w0, [x0, w2, uxtw]
   2d110:	cmp	w0, #0x73
   2d114:	b.ne	2d250 <my_regexec@@Base+0x9d5c>  // b.any
   2d118:	ldrb	w0, [x19, #12]
   2d11c:	cmp	w0, #0xb
   2d120:	b.ne	2d278 <my_regexec@@Base+0x9d84>  // b.any
   2d124:	ldr	x0, [x19]
   2d128:	ldr	x0, [x0, #16]
   2d12c:	cmp	x0, #0x1
   2d130:	b.gt	2d2a0 <my_regexec@@Base+0x9dac>
   2d134:	str	x27, [sp, #80]
   2d138:	ldr	x20, [x19, #16]
   2d13c:	ldr	x25, [x20]
   2d140:	cbz	x25, 2d590 <my_regexec@@Base+0xa09c>
   2d144:	mov	x2, #0x0                   	// #0
   2d148:	mov	x1, x25
   2d14c:	mov	x0, x22
   2d150:	bl	5500 <Perl_invlist_clone@plt>
   2d154:	mov	x1, x0
   2d158:	mov	x0, x22
   2d15c:	bl	55d0 <Perl_sv_2mortal@plt>
   2d160:	str	x0, [sp, #96]
   2d164:	tbz	w24, #2, 2d2f8 <my_regexec@@Base+0x9e04>
   2d168:	ldrb	w0, [x19, #12]
   2d16c:	cmp	w0, #0xb
   2d170:	b.ne	2d2d4 <my_regexec@@Base+0x9de0>  // b.any
   2d174:	ldr	x0, [x19]
   2d178:	ldr	x0, [x0, #16]
   2d17c:	mov	x25, #0x0                   	// #0
   2d180:	cmp	x0, #0x0
   2d184:	b.le	2d5a8 <my_regexec@@Base+0xa0b4>
   2d188:	b	2d5a4 <my_regexec@@Base+0xa0b0>
   2d18c:	stp	x19, x20, [sp, #16]
   2d190:	stp	x25, x26, [sp, #64]
   2d194:	str	x27, [sp, #80]
   2d198:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d19c:	add	x3, x3, #0xc10
   2d1a0:	add	x3, x3, #0x330
   2d1a4:	mov	w2, #0x628                 	// #1576
   2d1a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d1ac:	add	x1, x1, #0xfb8
   2d1b0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2d1b4:	add	x0, x0, #0xfe8
   2d1b8:	bl	58e0 <__assert_fail@plt>
   2d1bc:	str	x27, [sp, #80]
   2d1c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d1c4:	add	x3, x3, #0xc10
   2d1c8:	add	x3, x3, #0x330
   2d1cc:	mov	w2, #0x62d                 	// #1581
   2d1d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d1d4:	add	x1, x1, #0xfb8
   2d1d8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   2d1dc:	add	x0, x0, #0x160
   2d1e0:	bl	58e0 <__assert_fail@plt>
   2d1e4:	and	w1, w0, #0xff
   2d1e8:	sub	w1, w1, #0x9
   2d1ec:	cmp	w1, #0x1
   2d1f0:	b.hi	2d0f8 <my_regexec@@Base+0x9c04>  // b.pmore
   2d1f4:	str	x27, [sp, #80]
   2d1f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d1fc:	add	x3, x3, #0xc10
   2d200:	add	x3, x3, #0x330
   2d204:	mov	w2, #0x62d                 	// #1581
   2d208:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d20c:	add	x1, x1, #0xfb8
   2d210:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   2d214:	add	x0, x0, #0x190
   2d218:	bl	58e0 <__assert_fail@plt>
   2d21c:	ldr	x0, [x3]
   2d220:	ldrb	w0, [x0, #129]
   2d224:	tbnz	w0, #6, 2d104 <my_regexec@@Base+0x9c10>
   2d228:	str	x27, [sp, #80]
   2d22c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d230:	add	x3, x3, #0xc10
   2d234:	add	x3, x3, #0x330
   2d238:	mov	w2, #0x62d                 	// #1581
   2d23c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d240:	add	x1, x1, #0xfb8
   2d244:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   2d248:	add	x0, x0, #0x1a8
   2d24c:	bl	58e0 <__assert_fail@plt>
   2d250:	str	x27, [sp, #80]
   2d254:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d258:	add	x3, x3, #0xc10
   2d25c:	add	x3, x3, #0x330
   2d260:	mov	w2, #0x62f                 	// #1583
   2d264:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d268:	add	x1, x1, #0xfb8
   2d26c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2d270:	add	x0, x0, #0x540
   2d274:	bl	58e0 <__assert_fail@plt>
   2d278:	str	x27, [sp, #80]
   2d27c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d280:	add	x3, x3, #0xc10
   2d284:	add	x3, x3, #0x330
   2d288:	mov	w2, #0x631                 	// #1585
   2d28c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d290:	add	x1, x1, #0xfb8
   2d294:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2d298:	add	x0, x0, #0x560
   2d29c:	bl	58e0 <__assert_fail@plt>
   2d2a0:	mov	x1, #0x1                   	// #1
   2d2a4:	mov	x0, x22
   2d2a8:	bl	5090 <Perl__new_invlist@plt>
   2d2ac:	mov	x1, x0
   2d2b0:	mov	x0, x22
   2d2b4:	bl	55d0 <Perl_sv_2mortal@plt>
   2d2b8:	mov	x1, x0
   2d2bc:	str	x0, [sp, #96]
   2d2c0:	mov	x3, #0xffffffffffffffff    	// #-1
   2d2c4:	mov	x2, #0x0                   	// #0
   2d2c8:	mov	x0, x22
   2d2cc:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d2d0:	b	2d390 <my_regexec@@Base+0x9e9c>
   2d2d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d2d8:	add	x3, x3, #0xc10
   2d2dc:	add	x3, x3, #0x330
   2d2e0:	mov	w2, #0x640                 	// #1600
   2d2e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d2e8:	add	x1, x1, #0xfb8
   2d2ec:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2d2f0:	add	x0, x0, #0x560
   2d2f4:	bl	58e0 <__assert_fail@plt>
   2d2f8:	mov	x25, #0x0                   	// #0
   2d2fc:	b	2d5a8 <my_regexec@@Base+0xa0b4>
   2d300:	str	x27, [sp, #80]
   2d304:	mov	x25, #0x0                   	// #0
   2d308:	mov	x1, #0x0                   	// #0
   2d30c:	mov	x0, x22
   2d310:	bl	5090 <Perl__new_invlist@plt>
   2d314:	mov	x1, x0
   2d318:	mov	x0, x22
   2d31c:	bl	55d0 <Perl_sv_2mortal@plt>
   2d320:	str	x0, [sp, #96]
   2d324:	b	2d5b0 <my_regexec@@Base+0xa0bc>
   2d328:	add	x4, sp, #0x60
   2d32c:	mov	w3, #0x1                   	// #1
   2d330:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d334:	ldr	x0, [x0, #3960]
   2d338:	ldr	x2, [x0]
   2d33c:	ldr	x1, [sp, #96]
   2d340:	mov	x0, x22
   2d344:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2d348:	ldrb	w0, [x21, #1]
   2d34c:	mov	w27, #0x0                   	// #0
   2d350:	cmp	w0, #0x16
   2d354:	b.ne	2d5c8 <my_regexec@@Base+0xa0d4>  // b.any
   2d358:	cbz	w26, 2d448 <my_regexec@@Base+0x9f54>
   2d35c:	tbnz	w24, #5, 2d5d8 <my_regexec@@Base+0xa0e4>
   2d360:	ldr	x1, [sp, #96]
   2d364:	mov	x0, x22
   2d368:	bl	52b0 <Perl__invlist_invert@plt>
   2d36c:	cbz	x25, 2d388 <my_regexec@@Base+0x9e94>
   2d370:	add	x4, sp, #0x60
   2d374:	mov	w3, w26
   2d378:	mov	x2, x25
   2d37c:	ldr	x1, [sp, #96]
   2d380:	mov	x0, x22
   2d384:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d388:	ldr	x0, [sp, #96]
   2d38c:	ldr	x27, [sp, #80]
   2d390:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2d394:	ldr	x1, [x1, #3920]
   2d398:	ldr	x2, [sp, #104]
   2d39c:	ldr	x1, [x1]
   2d3a0:	eor	x1, x2, x1
   2d3a4:	cbnz	x1, 2d620 <my_regexec@@Base+0xa12c>
   2d3a8:	ldp	x19, x20, [sp, #16]
   2d3ac:	ldp	x25, x26, [sp, #64]
   2d3b0:	ldp	x21, x22, [sp, #32]
   2d3b4:	ldp	x23, x24, [sp, #48]
   2d3b8:	ldp	x29, x30, [sp], #112
   2d3bc:	ret
   2d3c0:	sub	w3, w19, #0x1
   2d3c4:	mov	w2, w2
   2d3c8:	ldr	x1, [sp, #96]
   2d3cc:	mov	x0, x22
   2d3d0:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d3d4:	str	x0, [sp, #96]
   2d3d8:	mov	w27, w23
   2d3dc:	mov	w2, w19
   2d3e0:	add	w2, w2, #0x1
   2d3e4:	cmp	w2, #0xff
   2d3e8:	b.hi	2d358 <my_regexec@@Base+0x9e64>  // b.pmore
   2d3ec:	lsr	w0, w2, #3
   2d3f0:	ldrb	w0, [x20, w0, uxtw]
   2d3f4:	and	w1, w2, #0x7
   2d3f8:	lsr	w0, w0, w1
   2d3fc:	and	w23, w0, #0x1
   2d400:	tbz	w0, #0, 2d3e0 <my_regexec@@Base+0x9eec>
   2d404:	add	w19, w2, #0x1
   2d408:	cmp	w19, #0xff
   2d40c:	b.hi	2d3c0 <my_regexec@@Base+0x9ecc>  // b.pmore
   2d410:	lsr	w0, w19, #3
   2d414:	ldrb	w0, [x20, w0, uxtw]
   2d418:	and	w1, w19, #0x7
   2d41c:	lsr	w0, w0, w1
   2d420:	tbz	w0, #0, 2d3c0 <my_regexec@@Base+0x9ecc>
   2d424:	add	w19, w19, #0x1
   2d428:	cmp	w19, #0x100
   2d42c:	b.eq	2d3c0 <my_regexec@@Base+0x9ecc>  // b.none
   2d430:	lsr	w0, w19, #3
   2d434:	ldrb	w1, [x20, w0, uxtw]
   2d438:	and	w0, w19, #0x7
   2d43c:	lsr	w1, w1, w0
   2d440:	tbnz	w1, #0, 2d424 <my_regexec@@Base+0x9f30>
   2d444:	b	2d3c0 <my_regexec@@Base+0x9ecc>
   2d448:	ldrb	w0, [x21, #1]
   2d44c:	cmp	w0, #0x13
   2d450:	b.eq	2d4b4 <my_regexec@@Base+0x9fc0>  // b.none
   2d454:	tbnz	w24, #5, 2d5fc <my_regexec@@Base+0xa108>
   2d458:	tbz	w24, #2, 2d36c <my_regexec@@Base+0x9e78>
   2d45c:	cbz	w27, 2d4dc <my_regexec@@Base+0x9fe8>
   2d460:	add	x4, sp, #0x60
   2d464:	mov	w3, #0x0                   	// #0
   2d468:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d46c:	ldr	x0, [x0, #3872]
   2d470:	ldr	x2, [x0]
   2d474:	ldr	x1, [sp, #96]
   2d478:	mov	x0, x22
   2d47c:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d480:	mov	x3, #0x131                 	// #305
   2d484:	mov	x2, x3
   2d488:	ldr	x1, [sp, #96]
   2d48c:	mov	x0, x22
   2d490:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d494:	mov	x1, x0
   2d498:	str	x0, [sp, #96]
   2d49c:	mov	x3, #0x130                 	// #304
   2d4a0:	mov	x2, x3
   2d4a4:	mov	x0, x22
   2d4a8:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d4ac:	str	x0, [sp, #96]
   2d4b0:	b	2d36c <my_regexec@@Base+0x9e78>
   2d4b4:	tbz	w24, #7, 2d454 <my_regexec@@Base+0x9f60>
   2d4b8:	add	x4, sp, #0x60
   2d4bc:	mov	w3, #0x0                   	// #0
   2d4c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d4c4:	ldr	x0, [x0, #3960]
   2d4c8:	ldr	x2, [x0]
   2d4cc:	ldr	x1, [sp, #96]
   2d4d0:	mov	x0, x22
   2d4d4:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d4d8:	b	2d454 <my_regexec@@Base+0x9f60>
   2d4dc:	ldr	x19, [sp, #96]
   2d4e0:	mov	x1, #0x131                 	// #305
   2d4e4:	mov	x0, x19
   2d4e8:	bl	59d0 <Perl__invlist_search@plt>
   2d4ec:	cbz	x19, 2d548 <my_regexec@@Base+0xa054>
   2d4f0:	tbnz	x0, #63, 2d510 <my_regexec@@Base+0xa01c>
   2d4f4:	tbnz	w0, #0, 2d510 <my_regexec@@Base+0xa01c>
   2d4f8:	mov	x3, #0x49                  	// #73
   2d4fc:	mov	x2, x3
   2d500:	ldr	x1, [sp, #96]
   2d504:	mov	x0, x22
   2d508:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d50c:	str	x0, [sp, #96]
   2d510:	ldr	x19, [sp, #96]
   2d514:	mov	x1, #0x130                 	// #304
   2d518:	mov	x0, x19
   2d51c:	bl	59d0 <Perl__invlist_search@plt>
   2d520:	cbz	x19, 2d56c <my_regexec@@Base+0xa078>
   2d524:	tbnz	x0, #63, 2d36c <my_regexec@@Base+0x9e78>
   2d528:	tbnz	w0, #0, 2d36c <my_regexec@@Base+0x9e78>
   2d52c:	mov	x3, #0x69                  	// #105
   2d530:	mov	x2, x3
   2d534:	ldr	x1, [sp, #96]
   2d538:	mov	x0, x22
   2d53c:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d540:	str	x0, [sp, #96]
   2d544:	b	2d36c <my_regexec@@Base+0x9e78>
   2d548:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d54c:	add	x3, x3, #0xc10
   2d550:	add	x3, x3, #0x118
   2d554:	mov	w2, #0x3f                  	// #63
   2d558:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2d55c:	add	x1, x1, #0x550
   2d560:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2d564:	add	x0, x0, #0x568
   2d568:	bl	58e0 <__assert_fail@plt>
   2d56c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d570:	add	x3, x3, #0xc10
   2d574:	add	x3, x3, #0x118
   2d578:	mov	w2, #0x3f                  	// #63
   2d57c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2d580:	add	x1, x1, #0x550
   2d584:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2d588:	add	x0, x0, #0x568
   2d58c:	bl	58e0 <__assert_fail@plt>
   2d590:	tbz	w24, #2, 2d308 <my_regexec@@Base+0x9e14>
   2d594:	ldr	x0, [x19]
   2d598:	ldr	x0, [x0, #16]
   2d59c:	cmp	x0, #0x0
   2d5a0:	b.le	2d308 <my_regexec@@Base+0x9e14>
   2d5a4:	ldr	x25, [x20, #8]
   2d5a8:	ldr	x0, [sp, #96]
   2d5ac:	cbz	x0, 2d308 <my_regexec@@Base+0x9e14>
   2d5b0:	and	w26, w24, #0x1
   2d5b4:	tbnz	w24, #0, 2d328 <my_regexec@@Base+0x9e34>
   2d5b8:	ldrb	w0, [x21, #1]
   2d5bc:	mov	w27, #0x0                   	// #0
   2d5c0:	cmp	w0, #0x16
   2d5c4:	b.eq	2d448 <my_regexec@@Base+0x9f54>  // b.none
   2d5c8:	mov	w27, #0x0                   	// #0
   2d5cc:	mov	w2, #0x0                   	// #0
   2d5d0:	add	x20, x21, #0x8
   2d5d4:	b	2d3ec <my_regexec@@Base+0x9ef8>
   2d5d8:	add	x4, sp, #0x60
   2d5dc:	mov	w3, #0x1                   	// #1
   2d5e0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d5e4:	ldr	x0, [x0, #4040]
   2d5e8:	ldr	x2, [x0]
   2d5ec:	ldr	x1, [sp, #96]
   2d5f0:	mov	x0, x22
   2d5f4:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d5f8:	b	2d360 <my_regexec@@Base+0x9e6c>
   2d5fc:	add	x4, sp, #0x60
   2d600:	mov	w3, #0x1                   	// #1
   2d604:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d608:	ldr	x0, [x0, #4040]
   2d60c:	ldr	x2, [x0]
   2d610:	ldr	x1, [sp, #96]
   2d614:	mov	x0, x22
   2d618:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d61c:	b	2d458 <my_regexec@@Base+0x9f64>
   2d620:	str	x27, [sp, #80]
   2d624:	bl	5300 <__stack_chk_fail@plt>
   2d628:	stp	x29, x30, [sp, #-96]!
   2d62c:	mov	x29, sp
   2d630:	stp	x19, x20, [sp, #16]
   2d634:	stp	x21, x22, [sp, #32]
   2d638:	mov	x22, x0
   2d63c:	mov	x19, x2
   2d640:	mov	x20, x3
   2d644:	ldrb	w2, [x3, #1]
   2d648:	mov	w21, #0x0                   	// #0
   2d64c:	cmp	w2, #0x16
   2d650:	b.eq	2d658 <my_regexec@@Base+0xa164>  // b.none
   2d654:	ldrb	w21, [x3]
   2d658:	cbz	x1, 2d758 <my_regexec@@Base+0xa264>
   2d65c:	cbz	x19, 2d788 <my_regexec@@Base+0xa294>
   2d660:	stp	x23, x24, [sp, #48]
   2d664:	ldrb	w3, [x19, #1]
   2d668:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d66c:	ldr	x0, [x0, #3768]
   2d670:	ldrb	w0, [x0, w3, sxtw]
   2d674:	cmp	w0, #0x12
   2d678:	b.ne	2d7b8 <my_regexec@@Base+0xa2c4>  // b.any
   2d67c:	ldrh	w0, [x19, #2]
   2d680:	cmp	w0, #0x1
   2d684:	b.ne	2d7b8 <my_regexec@@Base+0xa2c4>  // b.any
   2d688:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d68c:	ldr	x0, [x0, #3768]
   2d690:	ldrb	w0, [x0, w2, sxtw]
   2d694:	cmp	w0, #0x12
   2d698:	b.ne	2d6a8 <my_regexec@@Base+0xa1b4>  // b.any
   2d69c:	ldrh	w0, [x20, #2]
   2d6a0:	cmp	w0, #0x1
   2d6a4:	b.eq	2d7e4 <my_regexec@@Base+0xa2f0>  // b.none
   2d6a8:	mov	x2, x20
   2d6ac:	mov	x0, x22
   2d6b0:	bl	2d068 <my_regexec@@Base+0x9b74>
   2d6b4:	mov	x23, x0
   2d6b8:	ldrb	w0, [x20, #1]
   2d6bc:	mov	w1, #0x0                   	// #0
   2d6c0:	cmp	w0, #0x13
   2d6c4:	b.eq	2d6dc <my_regexec@@Base+0xa1e8>  // b.none
   2d6c8:	and	w1, w21, #0xc0
   2d6cc:	and	w0, w21, #0xc
   2d6d0:	orr	w2, w1, #0x8
   2d6d4:	cmp	w0, #0x8
   2d6d8:	csel	w1, w1, w2, ne  // ne = any
   2d6dc:	ldrb	w0, [x19]
   2d6e0:	orr	w1, w1, w0
   2d6e4:	strb	w1, [x19]
   2d6e8:	tbz	w21, #0, 2d7fc <my_regexec@@Base+0xa308>
   2d6ec:	ldrb	w1, [x20, #1]
   2d6f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d6f4:	ldr	x0, [x0, #3768]
   2d6f8:	ldrb	w0, [x0, w1, sxtw]
   2d6fc:	cmp	w0, #0x12
   2d700:	b.eq	2d7f0 <my_regexec@@Base+0xa2fc>  // b.none
   2d704:	cbz	x23, 2d8d4 <my_regexec@@Base+0xa3e0>
   2d708:	ldrb	w1, [x19, #1]
   2d70c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2d710:	ldr	x0, [x0, #3768]
   2d714:	ldrb	w0, [x0, w1, sxtw]
   2d718:	cmp	w0, #0x12
   2d71c:	b.ne	2d900 <my_regexec@@Base+0xa40c>  // b.any
   2d720:	ldrh	w0, [x19, #2]
   2d724:	cmp	w0, #0x1
   2d728:	b.ne	2d900 <my_regexec@@Base+0xa40c>  // b.any
   2d72c:	add	x4, x19, #0x30
   2d730:	mov	w3, #0x0                   	// #0
   2d734:	mov	x2, x23
   2d738:	ldr	x1, [x19, #48]
   2d73c:	mov	x0, x22
   2d740:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2d744:	ldp	x23, x24, [sp, #48]
   2d748:	ldp	x19, x20, [sp, #16]
   2d74c:	ldp	x21, x22, [sp, #32]
   2d750:	ldp	x29, x30, [sp], #96
   2d754:	ret
   2d758:	stp	x23, x24, [sp, #48]
   2d75c:	stp	x25, x26, [sp, #64]
   2d760:	str	x27, [sp, #80]
   2d764:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d768:	add	x3, x3, #0xc10
   2d76c:	add	x3, x3, #0x350
   2d770:	mov	w2, #0x76c                 	// #1900
   2d774:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d778:	add	x1, x1, #0xfb8
   2d77c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2d780:	add	x0, x0, #0xfe8
   2d784:	bl	58e0 <__assert_fail@plt>
   2d788:	stp	x23, x24, [sp, #48]
   2d78c:	stp	x25, x26, [sp, #64]
   2d790:	str	x27, [sp, #80]
   2d794:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d798:	add	x3, x3, #0xc10
   2d79c:	add	x3, x3, #0x350
   2d7a0:	mov	w2, #0x76c                 	// #1900
   2d7a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d7a8:	add	x1, x1, #0xfb8
   2d7ac:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2d7b0:	add	x0, x0, #0xb8
   2d7b4:	bl	58e0 <__assert_fail@plt>
   2d7b8:	stp	x25, x26, [sp, #64]
   2d7bc:	str	x27, [sp, #80]
   2d7c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d7c4:	add	x3, x3, #0xc10
   2d7c8:	add	x3, x3, #0x350
   2d7cc:	mov	w2, #0x76e                 	// #1902
   2d7d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d7d4:	add	x1, x1, #0xfb8
   2d7d8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2d7dc:	add	x0, x0, #0xc0
   2d7e0:	bl	58e0 <__assert_fail@plt>
   2d7e4:	ldr	x23, [x20, #48]
   2d7e8:	mov	w1, w21
   2d7ec:	b	2d6dc <my_regexec@@Base+0xa1e8>
   2d7f0:	ldrh	w0, [x20, #2]
   2d7f4:	cmp	w0, #0x1
   2d7f8:	b.ne	2d704 <my_regexec@@Base+0xa210>  // b.any
   2d7fc:	tbz	w21, #1, 2d704 <my_regexec@@Base+0xa210>
   2d800:	ldr	w0, [x19, #40]
   2d804:	ldr	w1, [x20, #40]
   2d808:	orr	w0, w0, w1
   2d80c:	str	w0, [x19, #40]
   2d810:	cbz	w0, 2d704 <my_regexec@@Base+0xa210>
   2d814:	stp	x25, x26, [sp, #64]
   2d818:	str	x27, [sp, #80]
   2d81c:	mov	w20, #0x0                   	// #0
   2d820:	mov	w25, #0x1                   	// #1
   2d824:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   2d828:	ldr	x26, [x26, #3768]
   2d82c:	mov	x27, #0xffffffffffffffff    	// #-1
   2d830:	b	2d864 <my_regexec@@Base+0xa370>
   2d834:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d838:	add	x3, x3, #0xc10
   2d83c:	add	x3, x3, #0x360
   2d840:	mov	w2, #0x7d4                 	// #2004
   2d844:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d848:	add	x1, x1, #0xfb8
   2d84c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2d850:	add	x0, x0, #0xc0
   2d854:	bl	58e0 <__assert_fail@plt>
   2d858:	add	w20, w20, #0x2
   2d85c:	cmp	w20, #0x1e
   2d860:	b.eq	2d8c8 <my_regexec@@Base+0xa3d4>  // b.none
   2d864:	lsl	w24, w25, w20
   2d868:	add	w21, w20, #0x1
   2d86c:	lsl	w21, w25, w21
   2d870:	orr	w0, w24, w21
   2d874:	ldr	w1, [x19, #40]
   2d878:	bics	wzr, w0, w1
   2d87c:	b.ne	2d858 <my_regexec@@Base+0xa364>  // b.any
   2d880:	ldrb	w0, [x19, #1]
   2d884:	ldrb	w0, [x26, w0, sxtw]
   2d888:	cmp	w0, #0x12
   2d88c:	b.ne	2d834 <my_regexec@@Base+0xa340>  // b.any
   2d890:	ldrh	w0, [x19, #2]
   2d894:	cmp	w0, #0x1
   2d898:	b.ne	2d834 <my_regexec@@Base+0xa340>  // b.any
   2d89c:	mov	x3, x27
   2d8a0:	mov	x2, #0x0                   	// #0
   2d8a4:	ldr	x1, [x19, #48]
   2d8a8:	mov	x0, x22
   2d8ac:	bl	5450 <Perl__add_range_to_invlist@plt>
   2d8b0:	str	x0, [x19, #48]
   2d8b4:	ldr	w0, [x19, #40]
   2d8b8:	bic	w24, w0, w24
   2d8bc:	bic	w21, w24, w21
   2d8c0:	str	w21, [x19, #40]
   2d8c4:	b	2d858 <my_regexec@@Base+0xa364>
   2d8c8:	ldp	x25, x26, [sp, #64]
   2d8cc:	ldr	x27, [sp, #80]
   2d8d0:	b	2d704 <my_regexec@@Base+0xa210>
   2d8d4:	stp	x25, x26, [sp, #64]
   2d8d8:	str	x27, [sp, #80]
   2d8dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d8e0:	add	x3, x3, #0xc10
   2d8e4:	add	x3, x3, #0x370
   2d8e8:	mov	w2, #0x7b6                 	// #1974
   2d8ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d8f0:	add	x1, x1, #0xfb8
   2d8f4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2d8f8:	add	x0, x0, #0x568
   2d8fc:	bl	58e0 <__assert_fail@plt>
   2d900:	stp	x25, x26, [sp, #64]
   2d904:	str	x27, [sp, #80]
   2d908:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d90c:	add	x3, x3, #0xc10
   2d910:	add	x3, x3, #0x370
   2d914:	mov	w2, #0x7b8                 	// #1976
   2d918:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2d91c:	add	x1, x1, #0xfb8
   2d920:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2d924:	add	x0, x0, #0xc0
   2d928:	bl	58e0 <__assert_fail@plt>
   2d92c:	stp	x29, x30, [sp, #-16]!
   2d930:	mov	x29, sp
   2d934:	cbz	x0, 2d9a8 <my_regexec@@Base+0xa4b4>
   2d938:	mov	x2, x0
   2d93c:	ldr	w0, [x0, #12]
   2d940:	and	w1, w0, #0xff
   2d944:	cmp	w1, #0x4
   2d948:	b.ne	2d9cc <my_regexec@@Base+0xa4d8>  // b.any
   2d94c:	and	w0, w0, #0xf
   2d950:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2d954:	ldr	x1, [x1, #3888]
   2d958:	ldrb	w0, [x1, w0, uxtw]
   2d95c:	cbz	w0, 2d9f0 <my_regexec@@Base+0xa4fc>
   2d960:	ldr	x1, [x2]
   2d964:	ldr	x0, [x1, #16]
   2d968:	cbz	x0, 2d9a0 <my_regexec@@Base+0xa4ac>
   2d96c:	ldrb	w3, [x1, #48]
   2d970:	lsr	x1, x0, #3
   2d974:	subs	x0, x1, x3
   2d978:	b.eq	2d9a0 <my_regexec@@Base+0xa4ac>  // b.none
   2d97c:	ldr	x1, [x2, #16]
   2d980:	ldrb	w2, [x1]
   2d984:	cbnz	w2, 2da14 <my_regexec@@Base+0xa520>
   2d988:	tbnz	w0, #0, 2da38 <my_regexec@@Base+0xa544>
   2d98c:	lsl	x0, x0, #3
   2d990:	add	x0, x0, x3, lsl #3
   2d994:	add	x0, x1, x0
   2d998:	ldur	x0, [x0, #-8]
   2d99c:	sub	x0, x0, #0x1
   2d9a0:	ldp	x29, x30, [sp], #16
   2d9a4:	ret
   2d9a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d9ac:	add	x3, x3, #0xc10
   2d9b0:	add	x3, x3, #0x18
   2d9b4:	mov	w2, #0x2f                  	// #47
   2d9b8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2d9bc:	add	x1, x1, #0x550
   2d9c0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2d9c4:	add	x0, x0, #0x568
   2d9c8:	bl	58e0 <__assert_fail@plt>
   2d9cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d9d0:	add	x3, x3, #0xc10
   2d9d4:	add	x3, x3, #0x18
   2d9d8:	mov	w2, #0x31                  	// #49
   2d9dc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2d9e0:	add	x1, x1, #0x550
   2d9e4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2d9e8:	add	x0, x0, #0xfc8
   2d9ec:	bl	58e0 <__assert_fail@plt>
   2d9f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2d9f4:	add	x3, x3, #0xc10
   2d9f8:	add	x3, x3, #0x18
   2d9fc:	mov	w2, #0x33                  	// #51
   2da00:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2da04:	add	x1, x1, #0x550
   2da08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2da0c:	add	x0, x0, #0xe40
   2da10:	bl	58e0 <__assert_fail@plt>
   2da14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2da18:	add	x3, x3, #0xc10
   2da1c:	add	x3, x3, #0x380
   2da20:	mov	w2, #0x55                  	// #85
   2da24:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2da28:	add	x1, x1, #0x550
   2da2c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2da30:	add	x0, x0, #0x590
   2da34:	bl	58e0 <__assert_fail@plt>
   2da38:	mov	x0, #0xffffffffffffffff    	// #-1
   2da3c:	b	2d9a0 <my_regexec@@Base+0xa4ac>
   2da40:	stp	x29, x30, [sp, #-16]!
   2da44:	mov	x29, sp
   2da48:	cbz	x0, 2dab4 <my_regexec@@Base+0xa5c0>
   2da4c:	mov	x3, x0
   2da50:	ldr	w0, [x0, #12]
   2da54:	and	w4, w0, #0xff
   2da58:	cmp	w4, #0x4
   2da5c:	b.ne	2dad8 <my_regexec@@Base+0xa5e4>  // b.any
   2da60:	ldr	x5, [x3]
   2da64:	and	w0, w0, #0xf
   2da68:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   2da6c:	ldr	x4, [x4, #3888]
   2da70:	ldrb	w0, [x4, w0, uxtw]
   2da74:	cbz	w0, 2dafc <my_regexec@@Base+0xa608>
   2da78:	ldr	x4, [x5, #16]
   2da7c:	cbz	x4, 2da8c <my_regexec@@Base+0xa598>
   2da80:	lsr	x4, x4, #3
   2da84:	ldrb	w6, [x5, #48]
   2da88:	sub	x4, x4, x6
   2da8c:	cbz	x1, 2db20 <my_regexec@@Base+0xa62c>
   2da90:	cbz	x2, 2db44 <my_regexec@@Base+0xa650>
   2da94:	ldr	x6, [x5, #40]
   2da98:	cmp	x6, x4
   2da9c:	b.cc	2db68 <my_regexec@@Base+0xa674>  // b.lo, b.ul, b.last
   2daa0:	mov	x0, #0xffffffffffffffff    	// #-1
   2daa4:	str	x0, [x5, #40]
   2daa8:	mov	w0, #0x0                   	// #0
   2daac:	ldp	x29, x30, [sp], #16
   2dab0:	ret
   2dab4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dab8:	add	x3, x3, #0xc10
   2dabc:	add	x3, x3, #0x390
   2dac0:	mov	w2, #0x2833                	// #10291
   2dac4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dac8:	add	x1, x1, #0xfb8
   2dacc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2dad0:	add	x0, x0, #0x568
   2dad4:	bl	58e0 <__assert_fail@plt>
   2dad8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dadc:	add	x3, x3, #0xc10
   2dae0:	add	x3, x3, #0x390
   2dae4:	mov	w2, #0x2835                	// #10293
   2dae8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2daec:	add	x1, x1, #0xfb8
   2daf0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2daf4:	add	x0, x0, #0xfc8
   2daf8:	bl	58e0 <__assert_fail@plt>
   2dafc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2db00:	add	x3, x3, #0xc10
   2db04:	add	x3, x3, #0x18
   2db08:	mov	w2, #0x33                  	// #51
   2db0c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2db10:	add	x1, x1, #0x550
   2db14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2db18:	add	x0, x0, #0xe40
   2db1c:	bl	58e0 <__assert_fail@plt>
   2db20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2db24:	add	x3, x3, #0xc10
   2db28:	add	x3, x3, #0x3a8
   2db2c:	mov	w2, #0x2860                	// #10336
   2db30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2db34:	add	x1, x1, #0xfb8
   2db38:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   2db3c:	add	x0, x0, #0xe60
   2db40:	bl	58e0 <__assert_fail@plt>
   2db44:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2db48:	add	x3, x3, #0xc10
   2db4c:	add	x3, x3, #0x3a8
   2db50:	mov	w2, #0x2860                	// #10336
   2db54:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2db58:	add	x1, x1, #0xfb8
   2db5c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2db60:	add	x0, x0, #0x118
   2db64:	bl	58e0 <__assert_fail@plt>
   2db68:	cbz	x4, 2dba8 <my_regexec@@Base+0xa6b4>
   2db6c:	ldr	x7, [x3, #16]
   2db70:	ldrb	w3, [x7]
   2db74:	cbnz	w3, 2dbcc <my_regexec@@Base+0xa6d8>
   2db78:	ldrb	w3, [x5, #48]
   2db7c:	add	x3, x7, x3, lsl #3
   2db80:	add	x7, x6, #0x1
   2db84:	str	x7, [x5, #40]
   2db88:	ldr	x6, [x3, x6, lsl #3]
   2db8c:	str	x6, [x1]
   2db90:	ldr	x1, [x5, #40]
   2db94:	cmp	x1, x4
   2db98:	b.cc	2dbf0 <my_regexec@@Base+0xa6fc>  // b.lo, b.ul, b.last
   2db9c:	mov	x1, #0xffffffffffffffff    	// #-1
   2dba0:	str	x1, [x2]
   2dba4:	b	2daac <my_regexec@@Base+0xa5b8>
   2dba8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dbac:	add	x3, x3, #0xc10
   2dbb0:	add	x3, x3, #0x380
   2dbb4:	mov	w2, #0x4f                  	// #79
   2dbb8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2dbbc:	add	x1, x1, #0x550
   2dbc0:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2dbc4:	add	x0, x0, #0x5a8
   2dbc8:	bl	58e0 <__assert_fail@plt>
   2dbcc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dbd0:	add	x3, x3, #0xc10
   2dbd4:	add	x3, x3, #0x380
   2dbd8:	mov	w2, #0x55                  	// #85
   2dbdc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2dbe0:	add	x1, x1, #0x550
   2dbe4:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2dbe8:	add	x0, x0, #0x590
   2dbec:	bl	58e0 <__assert_fail@plt>
   2dbf0:	add	x4, x1, #0x1
   2dbf4:	str	x4, [x5, #40]
   2dbf8:	ldr	x1, [x3, x1, lsl #3]
   2dbfc:	sub	x1, x1, #0x1
   2dc00:	str	x1, [x2]
   2dc04:	b	2daac <my_regexec@@Base+0xa5b8>
   2dc08:	stp	x29, x30, [sp, #-64]!
   2dc0c:	mov	x29, sp
   2dc10:	stp	x19, x20, [sp, #16]
   2dc14:	mov	x20, x0
   2dc18:	mov	x19, x1
   2dc1c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2dc20:	ldr	x0, [x0, #3920]
   2dc24:	ldr	x1, [x0]
   2dc28:	str	x1, [sp, #56]
   2dc2c:	mov	x1, #0x0                   	// #0
   2dc30:	cbz	x20, 2dd10 <my_regexec@@Base+0xa81c>
   2dc34:	cbz	x19, 2dd34 <my_regexec@@Base+0xa840>
   2dc38:	ldrb	w1, [x19, #1]
   2dc3c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2dc40:	ldr	x0, [x0, #3768]
   2dc44:	ldrb	w0, [x0, w1, sxtw]
   2dc48:	cmp	w0, #0x12
   2dc4c:	b.ne	2dd58 <my_regexec@@Base+0xa864>  // b.any
   2dc50:	ldrh	w0, [x19, #2]
   2dc54:	cmp	w0, #0x1
   2dc58:	b.ne	2dd58 <my_regexec@@Base+0xa864>  // b.any
   2dc5c:	ldr	x0, [x19, #48]
   2dc60:	cbz	x0, 2dd7c <my_regexec@@Base+0xa888>
   2dc64:	ldrb	w1, [x0, #12]
   2dc68:	cmp	w1, #0x4
   2dc6c:	b.ne	2dda0 <my_regexec@@Base+0xa8ac>  // b.any
   2dc70:	ldr	x0, [x0]
   2dc74:	str	xzr, [x0, #40]
   2dc78:	add	x2, sp, #0x30
   2dc7c:	add	x1, sp, #0x28
   2dc80:	ldr	x0, [x19, #48]
   2dc84:	bl	2da40 <my_regexec@@Base+0xa54c>
   2dc88:	and	w0, w0, #0xff
   2dc8c:	mov	w1, #0x0                   	// #0
   2dc90:	cbz	w0, 2dca8 <my_regexec@@Base+0xa7b4>
   2dc94:	ldr	x0, [sp, #40]
   2dc98:	cbnz	x0, 2dca8 <my_regexec@@Base+0xa7b4>
   2dc9c:	ldr	x0, [sp, #48]
   2dca0:	cmn	x0, #0x1
   2dca4:	cset	w1, eq  // eq = none
   2dca8:	ldr	x0, [x19, #48]
   2dcac:	cbz	x0, 2ddc4 <my_regexec@@Base+0xa8d0>
   2dcb0:	ldrb	w2, [x0, #12]
   2dcb4:	cmp	w2, #0x4
   2dcb8:	b.ne	2dde8 <my_regexec@@Base+0xa8f4>  // b.any
   2dcbc:	ldr	x0, [x0]
   2dcc0:	mov	x2, #0xffffffffffffffff    	// #-1
   2dcc4:	str	x2, [x0, #40]
   2dcc8:	mov	w0, #0x0                   	// #0
   2dccc:	cbz	w1, 2dcec <my_regexec@@Base+0xa7f8>
   2dcd0:	ldr	w1, [x20, #248]
   2dcd4:	mov	w0, #0x1                   	// #1
   2dcd8:	cbz	w1, 2dcec <my_regexec@@Base+0xa7f8>
   2dcdc:	ldr	w1, [x19, #40]
   2dce0:	mov	w0, #0x1fffffff            	// #536870911
   2dce4:	cmp	w1, w0
   2dce8:	cset	w0, eq  // eq = none
   2dcec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2dcf0:	ldr	x1, [x1, #3920]
   2dcf4:	ldr	x2, [sp, #56]
   2dcf8:	ldr	x1, [x1]
   2dcfc:	eor	x1, x2, x1
   2dd00:	cbnz	x1, 2de0c <my_regexec@@Base+0xa918>
   2dd04:	ldp	x19, x20, [sp, #16]
   2dd08:	ldp	x29, x30, [sp], #64
   2dd0c:	ret
   2dd10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dd14:	add	x3, x3, #0xc10
   2dd18:	add	x3, x3, #0x3c0
   2dd1c:	mov	w2, #0x5fc                 	// #1532
   2dd20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dd24:	add	x1, x1, #0xfb8
   2dd28:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2dd2c:	add	x0, x0, #0xfe8
   2dd30:	bl	58e0 <__assert_fail@plt>
   2dd34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dd38:	add	x3, x3, #0xc10
   2dd3c:	add	x3, x3, #0x3c0
   2dd40:	mov	w2, #0x5fc                 	// #1532
   2dd44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dd48:	add	x1, x1, #0xfb8
   2dd4c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2dd50:	add	x0, x0, #0xb8
   2dd54:	bl	58e0 <__assert_fail@plt>
   2dd58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dd5c:	add	x3, x3, #0xc10
   2dd60:	add	x3, x3, #0x3c0
   2dd64:	mov	w2, #0x5fe                 	// #1534
   2dd68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dd6c:	add	x1, x1, #0xfb8
   2dd70:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2dd74:	add	x0, x0, #0xc0
   2dd78:	bl	58e0 <__assert_fail@plt>
   2dd7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dd80:	add	x3, x3, #0xc10
   2dd84:	add	x3, x3, #0x3d8
   2dd88:	mov	w2, #0x283d                	// #10301
   2dd8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dd90:	add	x1, x1, #0xfb8
   2dd94:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2dd98:	add	x0, x0, #0x568
   2dd9c:	bl	58e0 <__assert_fail@plt>
   2dda0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dda4:	add	x3, x3, #0xc10
   2dda8:	add	x3, x3, #0x390
   2ddac:	mov	w2, #0x2835                	// #10293
   2ddb0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ddb4:	add	x1, x1, #0xfb8
   2ddb8:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2ddbc:	add	x0, x0, #0xfc8
   2ddc0:	bl	58e0 <__assert_fail@plt>
   2ddc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ddc8:	add	x3, x3, #0xc10
   2ddcc:	add	x3, x3, #0x3f0
   2ddd0:	mov	w2, #0x284d                	// #10317
   2ddd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ddd8:	add	x1, x1, #0xfb8
   2dddc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2dde0:	add	x0, x0, #0x568
   2dde4:	bl	58e0 <__assert_fail@plt>
   2dde8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ddec:	add	x3, x3, #0xc10
   2ddf0:	add	x3, x3, #0x390
   2ddf4:	mov	w2, #0x2835                	// #10293
   2ddf8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ddfc:	add	x1, x1, #0xfb8
   2de00:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2de04:	add	x0, x0, #0xfc8
   2de08:	bl	58e0 <__assert_fail@plt>
   2de0c:	bl	5300 <__stack_chk_fail@plt>
   2de10:	stp	x29, x30, [sp, #-96]!
   2de14:	mov	x29, sp
   2de18:	stp	x19, x20, [sp, #16]
   2de1c:	stp	x21, x22, [sp, #32]
   2de20:	stp	x23, x24, [sp, #48]
   2de24:	mov	x23, x0
   2de28:	mov	x21, x1
   2de2c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2de30:	ldr	x0, [x0, #3920]
   2de34:	ldr	x1, [x0]
   2de38:	str	x1, [sp, #88]
   2de3c:	mov	x1, #0x0                   	// #0
   2de40:	cbz	x21, 2ded8 <my_regexec@@Base+0xa9e4>
   2de44:	mov	x20, x2
   2de48:	cbz	x2, 2defc <my_regexec@@Base+0xaa08>
   2de4c:	ldrb	w0, [x2, #12]
   2de50:	cmp	w0, #0x4
   2de54:	b.ne	2df20 <my_regexec@@Base+0xaa2c>  // b.any
   2de58:	ldr	x0, [x2]
   2de5c:	str	xzr, [x0, #40]
   2de60:	add	x24, sp, #0x50
   2de64:	add	x22, sp, #0x48
   2de68:	mov	x2, x24
   2de6c:	mov	x1, x22
   2de70:	mov	x0, x20
   2de74:	bl	2da40 <my_regexec@@Base+0xa54c>
   2de78:	ands	w19, w0, #0xff
   2de7c:	b.eq	2df44 <my_regexec@@Base+0xaa50>  // b.none
   2de80:	ldr	x2, [sp, #72]
   2de84:	cmp	x2, #0x7e
   2de88:	b.hi	2df48 <my_regexec@@Base+0xaa54>  // b.pmore
   2de8c:	cmp	x2, #0x21
   2de90:	b.hi	2de68 <my_regexec@@Base+0xa974>  // b.pmore
   2de94:	ldr	x0, [sp, #80]
   2de98:	cmp	x0, #0x7c
   2de9c:	b.ls	2de68 <my_regexec@@Base+0xa974>  // b.plast
   2dea0:	cmp	x0, #0x7e
   2dea4:	b.ls	2deb0 <my_regexec@@Base+0xa9bc>  // b.plast
   2dea8:	mov	x0, #0x7e                  	// #126
   2deac:	str	x0, [sp, #80]
   2deb0:	cmp	x2, #0x1f
   2deb4:	b.hi	2dec0 <my_regexec@@Base+0xa9cc>  // b.pmore
   2deb8:	mov	x0, #0x20                  	// #32
   2debc:	str	x0, [sp, #72]
   2dec0:	ldr	x0, [sp, #80]
   2dec4:	ldr	x1, [sp, #72]
   2dec8:	sub	x0, x0, x1
   2decc:	cmp	x0, #0x5b
   2ded0:	cset	w19, ls  // ls = plast
   2ded4:	b	2df48 <my_regexec@@Base+0xaa54>
   2ded8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dedc:	add	x3, x3, #0xc10
   2dee0:	add	x3, x3, #0x408
   2dee4:	mov	w2, #0x53d4                	// #21460
   2dee8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2deec:	add	x1, x1, #0xfb8
   2def0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2def4:	add	x0, x0, #0x970
   2def8:	bl	58e0 <__assert_fail@plt>
   2defc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2df00:	add	x3, x3, #0xc10
   2df04:	add	x3, x3, #0x408
   2df08:	mov	w2, #0x53d4                	// #21460
   2df0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2df10:	add	x1, x1, #0xfb8
   2df14:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2df18:	add	x0, x0, #0x568
   2df1c:	bl	58e0 <__assert_fail@plt>
   2df20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2df24:	add	x3, x3, #0xc10
   2df28:	add	x3, x3, #0x390
   2df2c:	mov	w2, #0x2835                	// #10293
   2df30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2df34:	add	x1, x1, #0xfb8
   2df38:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2df3c:	add	x0, x0, #0xfc8
   2df40:	bl	58e0 <__assert_fail@plt>
   2df44:	mov	w19, #0x1                   	// #1
   2df48:	ldrb	w0, [x20, #12]
   2df4c:	cmp	w0, #0x4
   2df50:	b.ne	2dfb8 <my_regexec@@Base+0xaac4>  // b.any
   2df54:	ldr	x0, [x20]
   2df58:	mov	x1, #0xffffffffffffffff    	// #-1
   2df5c:	str	x1, [x0, #40]
   2df60:	ldrb	w0, [x20, #12]
   2df64:	cmp	w0, #0x4
   2df68:	b.ne	2dfdc <my_regexec@@Base+0xaae8>  // b.any
   2df6c:	ldr	x0, [x20]
   2df70:	str	xzr, [x0, #40]
   2df74:	add	x24, sp, #0x50
   2df78:	add	x22, sp, #0x48
   2df7c:	mov	x2, x24
   2df80:	mov	x1, x22
   2df84:	mov	x0, x20
   2df88:	bl	2da40 <my_regexec@@Base+0xa54c>
   2df8c:	and	w0, w0, #0xff
   2df90:	cbz	w0, 2e000 <my_regexec@@Base+0xab0c>
   2df94:	ldr	x2, [sp, #72]
   2df98:	cmp	x2, #0xff
   2df9c:	b.hi	2e000 <my_regexec@@Base+0xab0c>  // b.pmore
   2dfa0:	mov	w4, w19
   2dfa4:	ldr	x3, [sp, #80]
   2dfa8:	mov	x1, x21
   2dfac:	mov	x0, x23
   2dfb0:	bl	27dc8 <my_regexec@@Base+0x48d4>
   2dfb4:	b	2df7c <my_regexec@@Base+0xaa88>
   2dfb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dfbc:	add	x3, x3, #0xc10
   2dfc0:	add	x3, x3, #0x390
   2dfc4:	mov	w2, #0x2835                	// #10293
   2dfc8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dfcc:	add	x1, x1, #0xfb8
   2dfd0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2dfd4:	add	x0, x0, #0xfc8
   2dfd8:	bl	58e0 <__assert_fail@plt>
   2dfdc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2dfe0:	add	x3, x3, #0xc10
   2dfe4:	add	x3, x3, #0x390
   2dfe8:	mov	w2, #0x2835                	// #10293
   2dfec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2dff0:	add	x1, x1, #0xfb8
   2dff4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2dff8:	add	x0, x0, #0xfc8
   2dffc:	bl	58e0 <__assert_fail@plt>
   2e000:	ldrb	w0, [x20, #12]
   2e004:	cmp	w0, #0x4
   2e008:	b.ne	2e044 <my_regexec@@Base+0xab50>  // b.any
   2e00c:	ldr	x0, [x20]
   2e010:	mov	x1, #0xffffffffffffffff    	// #-1
   2e014:	str	x1, [x0, #40]
   2e018:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e01c:	ldr	x0, [x0, #3920]
   2e020:	ldr	x1, [sp, #88]
   2e024:	ldr	x0, [x0]
   2e028:	eor	x0, x1, x0
   2e02c:	cbnz	x0, 2e068 <my_regexec@@Base+0xab74>
   2e030:	ldp	x19, x20, [sp, #16]
   2e034:	ldp	x21, x22, [sp, #32]
   2e038:	ldp	x23, x24, [sp, #48]
   2e03c:	ldp	x29, x30, [sp], #96
   2e040:	ret
   2e044:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e048:	add	x3, x3, #0xc10
   2e04c:	add	x3, x3, #0x390
   2e050:	mov	w2, #0x2835                	// #10293
   2e054:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e058:	add	x1, x1, #0xfb8
   2e05c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e060:	add	x0, x0, #0xfc8
   2e064:	bl	58e0 <__assert_fail@plt>
   2e068:	bl	5300 <__stack_chk_fail@plt>
   2e06c:	stp	x29, x30, [sp, #-112]!
   2e070:	mov	x29, sp
   2e074:	stp	x19, x20, [sp, #16]
   2e078:	stp	x21, x22, [sp, #32]
   2e07c:	stp	x23, x24, [sp, #48]
   2e080:	stp	x25, x26, [sp, #64]
   2e084:	mov	x21, x0
   2e088:	mov	x24, x1
   2e08c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e090:	ldr	x0, [x0, #3920]
   2e094:	ldr	x1, [x0]
   2e098:	str	x1, [sp, #104]
   2e09c:	mov	x1, #0x0                   	// #0
   2e0a0:	cbz	x24, 2e2c8 <my_regexec@@Base+0xadd4>
   2e0a4:	mov	x25, x2
   2e0a8:	mov	x23, x3
   2e0ac:	mov	x22, x4
   2e0b0:	mov	x19, x5
   2e0b4:	and	w26, w6, #0xff
   2e0b8:	cbz	w26, 2e2ec <my_regexec@@Base+0xadf8>
   2e0bc:	mov	x2, #0x1                   	// #1
   2e0c0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   2e0c4:	add	x1, x1, #0x50
   2e0c8:	mov	x0, x21
   2e0cc:	bl	59a0 <Perl_newSVpvn@plt>
   2e0d0:	mov	x20, x0
   2e0d4:	mov	x2, x24
   2e0d8:	mov	x1, x20
   2e0dc:	mov	x0, x21
   2e0e0:	bl	2de10 <my_regexec@@Base+0xa91c>
   2e0e4:	cbz	x25, 2e0fc <my_regexec@@Base+0xac08>
   2e0e8:	mov	w3, #0x2                   	// #2
   2e0ec:	mov	x2, x25
   2e0f0:	mov	x1, x20
   2e0f4:	mov	x0, x21
   2e0f8:	bl	5690 <Perl_sv_catsv_flags@plt>
   2e0fc:	cbz	x23, 2e168 <my_regexec@@Base+0xac74>
   2e100:	ldr	w0, [x23, #12]
   2e104:	and	w1, w0, #0xff
   2e108:	cmp	w1, #0x4
   2e10c:	b.ne	2e308 <my_regexec@@Base+0xae14>  // b.any
   2e110:	and	w0, w0, #0xf
   2e114:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2e118:	ldr	x1, [x1, #3888]
   2e11c:	ldrb	w0, [x1, w0, uxtw]
   2e120:	cbz	w0, 2e32c <my_regexec@@Base+0xae38>
   2e124:	ldr	x1, [x23]
   2e128:	ldr	x0, [x1, #16]
   2e12c:	cbz	x0, 2e168 <my_regexec@@Base+0xac74>
   2e130:	ldrb	w1, [x1, #48]
   2e134:	cmp	x1, x0, lsr #3
   2e138:	b.eq	2e168 <my_regexec@@Base+0xac74>  // b.none
   2e13c:	ldr	x4, [x21, #1448]
   2e140:	ldr	x3, [x21, #1456]
   2e144:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   2e148:	add	x2, x2, #0x5c0
   2e14c:	mov	x1, x20
   2e150:	mov	x0, x21
   2e154:	bl	5120 <Perl_sv_catpvf@plt>
   2e158:	mov	x2, x23
   2e15c:	mov	x1, x20
   2e160:	mov	x0, x21
   2e164:	bl	2de10 <my_regexec@@Base+0xa91c>
   2e168:	cbz	x22, 2e1d4 <my_regexec@@Base+0xace0>
   2e16c:	ldr	w0, [x22, #12]
   2e170:	and	w1, w0, #0xff
   2e174:	cmp	w1, #0x4
   2e178:	b.ne	2e350 <my_regexec@@Base+0xae5c>  // b.any
   2e17c:	and	w0, w0, #0xf
   2e180:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2e184:	ldr	x1, [x1, #3888]
   2e188:	ldrb	w0, [x1, w0, uxtw]
   2e18c:	cbz	w0, 2e374 <my_regexec@@Base+0xae80>
   2e190:	ldr	x1, [x22]
   2e194:	ldr	x0, [x1, #16]
   2e198:	cbz	x0, 2e1d4 <my_regexec@@Base+0xace0>
   2e19c:	ldrb	w1, [x1, #48]
   2e1a0:	cmp	x1, x0, lsr #3
   2e1a4:	b.eq	2e1d4 <my_regexec@@Base+0xace0>  // b.none
   2e1a8:	ldr	x4, [x21, #1448]
   2e1ac:	ldr	x3, [x21, #1456]
   2e1b0:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   2e1b4:	add	x2, x2, #0x5d0
   2e1b8:	mov	x1, x20
   2e1bc:	mov	x0, x21
   2e1c0:	bl	5120 <Perl_sv_catpvf@plt>
   2e1c4:	mov	x2, x22
   2e1c8:	mov	x1, x20
   2e1cc:	mov	x0, x21
   2e1d0:	bl	2de10 <my_regexec@@Base+0xa91c>
   2e1d4:	cbz	x19, 2e250 <my_regexec@@Base+0xad5c>
   2e1d8:	ldr	w0, [x19, #12]
   2e1dc:	and	w1, w0, #0xff
   2e1e0:	cmp	w1, #0x4
   2e1e4:	b.ne	2e398 <my_regexec@@Base+0xaea4>  // b.any
   2e1e8:	and	w0, w0, #0xf
   2e1ec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2e1f0:	ldr	x1, [x1, #3888]
   2e1f4:	ldrb	w0, [x1, w0, uxtw]
   2e1f8:	cbz	w0, 2e3bc <my_regexec@@Base+0xaec8>
   2e1fc:	ldr	x1, [x19]
   2e200:	ldr	x0, [x1, #16]
   2e204:	cbz	x0, 2e250 <my_regexec@@Base+0xad5c>
   2e208:	ldrb	w1, [x1, #48]
   2e20c:	cmp	x1, x0, lsr #3
   2e210:	b.eq	2e250 <my_regexec@@Base+0xad5c>  // b.none
   2e214:	ldr	x4, [x21, #1448]
   2e218:	ldr	x3, [x21, #1456]
   2e21c:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   2e220:	add	x2, x2, #0x5e0
   2e224:	mov	x1, x20
   2e228:	mov	x0, x21
   2e22c:	bl	5120 <Perl_sv_catpvf@plt>
   2e230:	mov	x2, x19
   2e234:	mov	x1, x20
   2e238:	mov	x0, x21
   2e23c:	bl	2de10 <my_regexec@@Base+0xa91c>
   2e240:	mov	x0, x19
   2e244:	bl	2d92c <my_regexec@@Base+0xa438>
   2e248:	cmp	x0, #0xff
   2e24c:	b.hi	2e3e0 <my_regexec@@Base+0xaeec>  // b.pmore
   2e250:	cbz	w26, 2e294 <my_regexec@@Base+0xada0>
   2e254:	ldr	w0, [x20, #12]
   2e258:	and	w2, w0, #0xf
   2e25c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2e260:	ldr	x1, [x1, #3888]
   2e264:	ldrb	w1, [x1, w2, uxtw]
   2e268:	cbz	w1, 2e548 <my_regexec@@Base+0xb054>
   2e26c:	and	w1, w0, #0xc000
   2e270:	cmp	w1, #0x8, lsl #12
   2e274:	b.eq	2e56c <my_regexec@@Base+0xb078>  // b.none
   2e278:	and	w0, w0, #0xff
   2e27c:	cmp	w0, #0xf
   2e280:	b.eq	2e5a0 <my_regexec@@Base+0xb0ac>  // b.none
   2e284:	ldr	x0, [x20]
   2e288:	ldr	x0, [x0, #16]
   2e28c:	cmp	x0, #0x1
   2e290:	csel	x20, x20, xzr, ne  // ne = any
   2e294:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e298:	ldr	x0, [x0, #3920]
   2e29c:	ldr	x1, [sp, #104]
   2e2a0:	ldr	x0, [x0]
   2e2a4:	eor	x0, x1, x0
   2e2a8:	cbnz	x0, 2e5d0 <my_regexec@@Base+0xb0dc>
   2e2ac:	mov	x0, x20
   2e2b0:	ldp	x19, x20, [sp, #16]
   2e2b4:	ldp	x21, x22, [sp, #32]
   2e2b8:	ldp	x23, x24, [sp, #48]
   2e2bc:	ldp	x25, x26, [sp, #64]
   2e2c0:	ldp	x29, x30, [sp], #112
   2e2c4:	ret
   2e2c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e2cc:	add	x3, x3, #0xc10
   2e2d0:	add	x3, x3, #0x430
   2e2d4:	mov	w2, #0x5414                	// #21524
   2e2d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e2dc:	add	x1, x1, #0xfb8
   2e2e0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2e2e4:	add	x0, x0, #0x568
   2e2e8:	bl	58e0 <__assert_fail@plt>
   2e2ec:	mov	x2, #0x0                   	// #0
   2e2f0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   2e2f4:	add	x1, x1, #0x20
   2e2f8:	mov	x0, x21
   2e2fc:	bl	59a0 <Perl_newSVpvn@plt>
   2e300:	mov	x20, x0
   2e304:	b	2e0d4 <my_regexec@@Base+0xabe0>
   2e308:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e30c:	add	x3, x3, #0xc10
   2e310:	add	x3, x3, #0x18
   2e314:	mov	w2, #0x31                  	// #49
   2e318:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e31c:	add	x1, x1, #0x550
   2e320:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e324:	add	x0, x0, #0xfc8
   2e328:	bl	58e0 <__assert_fail@plt>
   2e32c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e330:	add	x3, x3, #0xc10
   2e334:	add	x3, x3, #0x18
   2e338:	mov	w2, #0x33                  	// #51
   2e33c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e340:	add	x1, x1, #0x550
   2e344:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e348:	add	x0, x0, #0xe40
   2e34c:	bl	58e0 <__assert_fail@plt>
   2e350:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e354:	add	x3, x3, #0xc10
   2e358:	add	x3, x3, #0x18
   2e35c:	mov	w2, #0x31                  	// #49
   2e360:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e364:	add	x1, x1, #0x550
   2e368:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e36c:	add	x0, x0, #0xfc8
   2e370:	bl	58e0 <__assert_fail@plt>
   2e374:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e378:	add	x3, x3, #0xc10
   2e37c:	add	x3, x3, #0x18
   2e380:	mov	w2, #0x33                  	// #51
   2e384:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e388:	add	x1, x1, #0x550
   2e38c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e390:	add	x0, x0, #0xe40
   2e394:	bl	58e0 <__assert_fail@plt>
   2e398:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e39c:	add	x3, x3, #0xc10
   2e3a0:	add	x3, x3, #0x18
   2e3a4:	mov	w2, #0x31                  	// #49
   2e3a8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e3ac:	add	x1, x1, #0x550
   2e3b0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e3b4:	add	x0, x0, #0xfc8
   2e3b8:	bl	58e0 <__assert_fail@plt>
   2e3bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e3c0:	add	x3, x3, #0xc10
   2e3c4:	add	x3, x3, #0x18
   2e3c8:	mov	w2, #0x33                  	// #51
   2e3cc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e3d0:	add	x1, x1, #0x550
   2e3d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e3d8:	add	x0, x0, #0xe40
   2e3dc:	bl	58e0 <__assert_fail@plt>
   2e3e0:	str	xzr, [sp, #96]
   2e3e4:	add	x4, sp, #0x60
   2e3e8:	mov	w3, #0x1                   	// #1
   2e3ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e3f0:	ldr	x0, [x0, #4040]
   2e3f4:	ldr	x2, [x0]
   2e3f8:	mov	x1, x19
   2e3fc:	mov	x0, x21
   2e400:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2e404:	ldr	x0, [sp, #96]
   2e408:	cbz	x0, 2e474 <my_regexec@@Base+0xaf80>
   2e40c:	ldrb	w1, [x0, #12]
   2e410:	cmp	w1, #0x4
   2e414:	b.ne	2e498 <my_regexec@@Base+0xafa4>  // b.any
   2e418:	ldr	x0, [x0]
   2e41c:	str	xzr, [x0, #40]
   2e420:	add	x23, sp, #0x58
   2e424:	add	x22, sp, #0x50
   2e428:	mov	x2, x23
   2e42c:	mov	x1, x22
   2e430:	ldr	x0, [sp, #96]
   2e434:	bl	2da40 <my_regexec@@Base+0xa54c>
   2e438:	and	w0, w0, #0xff
   2e43c:	cbz	w0, 2e4bc <my_regexec@@Base+0xafc8>
   2e440:	ldr	x19, [sp, #80]
   2e444:	ldr	x0, [sp, #88]
   2e448:	cmp	x19, x0
   2e44c:	b.hi	2e428 <my_regexec@@Base+0xaf34>  // b.pmore
   2e450:	mov	x2, x19
   2e454:	mov	x1, x20
   2e458:	mov	x0, x21
   2e45c:	bl	27c64 <my_regexec@@Base+0x4770>
   2e460:	add	x19, x19, #0x1
   2e464:	ldr	x0, [sp, #88]
   2e468:	cmp	x0, x19
   2e46c:	b.cs	2e450 <my_regexec@@Base+0xaf5c>  // b.hs, b.nlast
   2e470:	b	2e428 <my_regexec@@Base+0xaf34>
   2e474:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e478:	add	x3, x3, #0xc10
   2e47c:	add	x3, x3, #0x3d8
   2e480:	mov	w2, #0x283d                	// #10301
   2e484:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e488:	add	x1, x1, #0xfb8
   2e48c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2e490:	add	x0, x0, #0x568
   2e494:	bl	58e0 <__assert_fail@plt>
   2e498:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e49c:	add	x3, x3, #0xc10
   2e4a0:	add	x3, x3, #0x390
   2e4a4:	mov	w2, #0x2835                	// #10293
   2e4a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e4ac:	add	x1, x1, #0xfb8
   2e4b0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e4b4:	add	x0, x0, #0xfc8
   2e4b8:	bl	58e0 <__assert_fail@plt>
   2e4bc:	ldr	x1, [sp, #96]
   2e4c0:	cbz	x1, 2e4f4 <my_regexec@@Base+0xb000>
   2e4c4:	ldrb	w0, [x1, #12]
   2e4c8:	cmp	w0, #0x4
   2e4cc:	b.ne	2e518 <my_regexec@@Base+0xb024>  // b.any
   2e4d0:	ldr	x0, [x1]
   2e4d4:	mov	x2, #0xffffffffffffffff    	// #-1
   2e4d8:	str	x2, [x0, #40]
   2e4dc:	ldr	w2, [x1, #8]
   2e4e0:	cmp	w2, #0x1
   2e4e4:	b.ls	2e53c <my_regexec@@Base+0xb048>  // b.plast
   2e4e8:	sub	w2, w2, #0x1
   2e4ec:	str	w2, [x1, #8]
   2e4f0:	b	2e250 <my_regexec@@Base+0xad5c>
   2e4f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e4f8:	add	x3, x3, #0xc10
   2e4fc:	add	x3, x3, #0x3f0
   2e500:	mov	w2, #0x284d                	// #10317
   2e504:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e508:	add	x1, x1, #0xfb8
   2e50c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2e510:	add	x0, x0, #0x568
   2e514:	bl	58e0 <__assert_fail@plt>
   2e518:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e51c:	add	x3, x3, #0xc10
   2e520:	add	x3, x3, #0x390
   2e524:	mov	w2, #0x2835                	// #10293
   2e528:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e52c:	add	x1, x1, #0xfb8
   2e530:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e534:	add	x0, x0, #0xfc8
   2e538:	bl	58e0 <__assert_fail@plt>
   2e53c:	mov	x0, x21
   2e540:	bl	5860 <Perl_sv_free2@plt>
   2e544:	b	2e250 <my_regexec@@Base+0xad5c>
   2e548:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e54c:	add	x3, x3, #0xc10
   2e550:	add	x3, x3, #0x430
   2e554:	mov	w2, #0x544b                	// #21579
   2e558:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e55c:	add	x1, x1, #0xfb8
   2e560:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e564:	add	x0, x0, #0xe40
   2e568:	bl	58e0 <__assert_fail@plt>
   2e56c:	and	w1, w0, #0xff
   2e570:	sub	w1, w1, #0x9
   2e574:	cmp	w1, #0x1
   2e578:	b.hi	2e278 <my_regexec@@Base+0xad84>  // b.pmore
   2e57c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e580:	add	x3, x3, #0xc10
   2e584:	add	x3, x3, #0x430
   2e588:	mov	w2, #0x544b                	// #21579
   2e58c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e590:	add	x1, x1, #0xfb8
   2e594:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e598:	add	x0, x0, #0xe70
   2e59c:	bl	58e0 <__assert_fail@plt>
   2e5a0:	ldr	x0, [x20]
   2e5a4:	ldrb	w0, [x0, #129]
   2e5a8:	tbnz	w0, #6, 2e284 <my_regexec@@Base+0xad90>
   2e5ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e5b0:	add	x3, x3, #0xc10
   2e5b4:	add	x3, x3, #0x430
   2e5b8:	mov	w2, #0x544b                	// #21579
   2e5bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e5c0:	add	x1, x1, #0xfb8
   2e5c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e5c8:	add	x0, x0, #0xe88
   2e5cc:	bl	58e0 <__assert_fail@plt>
   2e5d0:	bl	5300 <__stack_chk_fail@plt>
   2e5d4:	stp	x29, x30, [sp, #-128]!
   2e5d8:	mov	x29, sp
   2e5dc:	stp	x21, x22, [sp, #32]
   2e5e0:	stp	x25, x26, [sp, #64]
   2e5e4:	mov	x26, x0
   2e5e8:	mov	x22, x1
   2e5ec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e5f0:	ldr	x0, [x0, #3920]
   2e5f4:	ldr	x1, [x0]
   2e5f8:	str	x1, [sp, #120]
   2e5fc:	mov	x1, #0x0                   	// #0
   2e600:	cbz	x22, 2e678 <my_regexec@@Base+0xb184>
   2e604:	mov	x21, x2
   2e608:	cbz	x2, 2e6a8 <my_regexec@@Base+0xb1b4>
   2e60c:	ldrb	w1, [x22, #1]
   2e610:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e614:	ldr	x0, [x0, #3768]
   2e618:	ldrb	w0, [x0, w1, sxtw]
   2e61c:	cmp	w0, #0x12
   2e620:	b.ne	2e6d8 <my_regexec@@Base+0xb1e4>  // b.any
   2e624:	cmp	w1, #0x16
   2e628:	b.eq	2e980 <my_regexec@@Base+0xb48c>  // b.none
   2e62c:	stp	x19, x20, [sp, #16]
   2e630:	add	x19, x22, #0x8
   2e634:	stp	xzr, xzr, [x22, #8]
   2e638:	stp	xzr, xzr, [x19, #16]
   2e63c:	ldr	x0, [x2]
   2e640:	cbz	x0, 2e97c <my_regexec@@Base+0xb488>
   2e644:	stp	x23, x24, [sp, #48]
   2e648:	str	x27, [sp, #80]
   2e64c:	ldrb	w1, [x0, #12]
   2e650:	cmp	w1, #0x4
   2e654:	b.ne	2e708 <my_regexec@@Base+0xb214>  // b.any
   2e658:	ldr	x0, [x0]
   2e65c:	str	xzr, [x0, #40]
   2e660:	mov	w27, #0x0                   	// #0
   2e664:	add	x24, sp, #0x70
   2e668:	add	x23, sp, #0x68
   2e66c:	mov	x25, #0xff                  	// #255
   2e670:	mov	w20, #0x1                   	// #1
   2e674:	b	2e780 <my_regexec@@Base+0xb28c>
   2e678:	stp	x19, x20, [sp, #16]
   2e67c:	stp	x23, x24, [sp, #48]
   2e680:	str	x27, [sp, #80]
   2e684:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e688:	add	x3, x3, #0xc10
   2e68c:	add	x3, x3, #0x458
   2e690:	mov	w2, #0x39b7                	// #14775
   2e694:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e698:	add	x1, x1, #0xfb8
   2e69c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2e6a0:	add	x0, x0, #0xdb8
   2e6a4:	bl	58e0 <__assert_fail@plt>
   2e6a8:	stp	x19, x20, [sp, #16]
   2e6ac:	stp	x23, x24, [sp, #48]
   2e6b0:	str	x27, [sp, #80]
   2e6b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e6b8:	add	x3, x3, #0xc10
   2e6bc:	add	x3, x3, #0x458
   2e6c0:	mov	w2, #0x39b7                	// #14775
   2e6c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e6c8:	add	x1, x1, #0xfb8
   2e6cc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2e6d0:	add	x0, x0, #0x5f8
   2e6d4:	bl	58e0 <__assert_fail@plt>
   2e6d8:	stp	x19, x20, [sp, #16]
   2e6dc:	stp	x23, x24, [sp, #48]
   2e6e0:	str	x27, [sp, #80]
   2e6e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e6e8:	add	x3, x3, #0xc10
   2e6ec:	add	x3, x3, #0x458
   2e6f0:	mov	w2, #0x39b8                	// #14776
   2e6f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e6f8:	add	x1, x1, #0xfb8
   2e6fc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2e700:	add	x0, x0, #0x608
   2e704:	bl	58e0 <__assert_fail@plt>
   2e708:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e70c:	add	x3, x3, #0xc10
   2e710:	add	x3, x3, #0x390
   2e714:	mov	w2, #0x2835                	// #10293
   2e718:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e71c:	add	x1, x1, #0xfb8
   2e720:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e724:	add	x0, x0, #0xfc8
   2e728:	bl	58e0 <__assert_fail@plt>
   2e72c:	ldr	x2, [sp, #104]
   2e730:	cmp	x2, #0x100
   2e734:	b.hi	2e7a4 <my_regexec@@Base+0xb2b0>  // b.pmore
   2e738:	ldrb	w2, [x22]
   2e73c:	orr	w2, w2, #0x20
   2e740:	strb	w2, [x22]
   2e744:	b	2e7a4 <my_regexec@@Base+0xb2b0>
   2e748:	add	w3, w3, #0x1
   2e74c:	cmp	w3, w6
   2e750:	b.gt	2e77c <my_regexec@@Base+0xb288>
   2e754:	sxtw	x4, w3
   2e758:	lsr	x4, x4, #3
   2e75c:	ldrb	w1, [x19, x4]
   2e760:	and	w2, w3, #0x7
   2e764:	lsr	w5, w1, w2
   2e768:	tbnz	w5, #0, 2e748 <my_regexec@@Base+0xb254>
   2e76c:	lsl	w2, w20, w2
   2e770:	orr	w1, w1, w2
   2e774:	strb	w1, [x19, x4]
   2e778:	b	2e748 <my_regexec@@Base+0xb254>
   2e77c:	mov	w27, w0
   2e780:	mov	x2, x24
   2e784:	mov	x1, x23
   2e788:	ldr	x0, [x21]
   2e78c:	bl	2da40 <my_regexec@@Base+0xa54c>
   2e790:	ands	w0, w0, #0xff
   2e794:	b.eq	2e7cc <my_regexec@@Base+0xb2d8>  // b.none
   2e798:	ldr	x1, [sp, #112]
   2e79c:	cmn	x1, #0x1
   2e7a0:	b.eq	2e72c <my_regexec@@Base+0xb238>  // b.none
   2e7a4:	ldr	x2, [sp, #104]
   2e7a8:	cmp	x2, #0xff
   2e7ac:	b.hi	2e7cc <my_regexec@@Base+0xb2d8>  // b.pmore
   2e7b0:	mov	w3, w2
   2e7b4:	cmp	x1, #0xff
   2e7b8:	csel	x1, x1, x25, ls  // ls = plast
   2e7bc:	mov	w6, w1
   2e7c0:	cmp	w2, w1
   2e7c4:	b.le	2e754 <my_regexec@@Base+0xb260>
   2e7c8:	b	2e77c <my_regexec@@Base+0xb288>
   2e7cc:	ldr	x0, [x21]
   2e7d0:	cbz	x0, 2e84c <my_regexec@@Base+0xb358>
   2e7d4:	ldrb	w1, [x0, #12]
   2e7d8:	cmp	w1, #0x4
   2e7dc:	b.ne	2e870 <my_regexec@@Base+0xb37c>  // b.any
   2e7e0:	ldr	x0, [x0]
   2e7e4:	mov	x1, #0xffffffffffffffff    	// #-1
   2e7e8:	str	x1, [x0, #40]
   2e7ec:	cbnz	w27, 2e894 <my_regexec@@Base+0xb3a0>
   2e7f0:	ldrb	w0, [x22]
   2e7f4:	tbnz	w0, #5, 2e8b8 <my_regexec@@Base+0xb3c4>
   2e7f8:	ldr	x1, [x21]
   2e7fc:	cbz	x1, 2e8dc <my_regexec@@Base+0xb3e8>
   2e800:	ldr	w0, [x1, #12]
   2e804:	and	w2, w0, #0xff
   2e808:	cmp	w2, #0x4
   2e80c:	b.ne	2e900 <my_regexec@@Base+0xb40c>  // b.any
   2e810:	and	w0, w0, #0xf
   2e814:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2e818:	ldr	x2, [x2, #3888]
   2e81c:	ldrb	w0, [x2, w0, uxtw]
   2e820:	cbz	w0, 2e924 <my_regexec@@Base+0xb430>
   2e824:	ldr	x2, [x1]
   2e828:	ldr	x0, [x2, #16]
   2e82c:	cbz	x0, 2e948 <my_regexec@@Base+0xb454>
   2e830:	ldrb	w2, [x2, #48]
   2e834:	cmp	x2, x0, lsr #3
   2e838:	b.eq	2e948 <my_regexec@@Base+0xb454>  // b.none
   2e83c:	ldp	x19, x20, [sp, #16]
   2e840:	ldp	x23, x24, [sp, #48]
   2e844:	ldr	x27, [sp, #80]
   2e848:	b	2e980 <my_regexec@@Base+0xb48c>
   2e84c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e850:	add	x3, x3, #0xc10
   2e854:	add	x3, x3, #0x3f0
   2e858:	mov	w2, #0x284d                	// #10317
   2e85c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e860:	add	x1, x1, #0xfb8
   2e864:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2e868:	add	x0, x0, #0x568
   2e86c:	bl	58e0 <__assert_fail@plt>
   2e870:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e874:	add	x3, x3, #0xc10
   2e878:	add	x3, x3, #0x390
   2e87c:	mov	w2, #0x2835                	// #10293
   2e880:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2e884:	add	x1, x1, #0xfb8
   2e888:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e88c:	add	x0, x0, #0xfc8
   2e890:	bl	58e0 <__assert_fail@plt>
   2e894:	mov	x4, x21
   2e898:	mov	w3, #0x1                   	// #1
   2e89c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e8a0:	ldr	x0, [x0, #4040]
   2e8a4:	ldr	x2, [x0]
   2e8a8:	ldr	x1, [x21]
   2e8ac:	mov	x0, x26
   2e8b0:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2e8b4:	b	2e7f0 <my_regexec@@Base+0xb2fc>
   2e8b8:	mov	x4, x21
   2e8bc:	mov	w3, #0x0                   	// #0
   2e8c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e8c4:	ldr	x0, [x0, #4040]
   2e8c8:	ldr	x2, [x0]
   2e8cc:	ldr	x1, [x21]
   2e8d0:	mov	x0, x26
   2e8d4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2e8d8:	b	2e7f8 <my_regexec@@Base+0xb304>
   2e8dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e8e0:	add	x3, x3, #0xc10
   2e8e4:	add	x3, x3, #0x18
   2e8e8:	mov	w2, #0x2f                  	// #47
   2e8ec:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e8f0:	add	x1, x1, #0x550
   2e8f4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2e8f8:	add	x0, x0, #0x568
   2e8fc:	bl	58e0 <__assert_fail@plt>
   2e900:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e904:	add	x3, x3, #0xc10
   2e908:	add	x3, x3, #0x18
   2e90c:	mov	w2, #0x31                  	// #49
   2e910:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e914:	add	x1, x1, #0x550
   2e918:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2e91c:	add	x0, x0, #0xfc8
   2e920:	bl	58e0 <__assert_fail@plt>
   2e924:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2e928:	add	x3, x3, #0xc10
   2e92c:	add	x3, x3, #0x18
   2e930:	mov	w2, #0x33                  	// #51
   2e934:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2e938:	add	x1, x1, #0x550
   2e93c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2e940:	add	x0, x0, #0xe40
   2e944:	bl	58e0 <__assert_fail@plt>
   2e948:	ldr	w2, [x1, #8]
   2e94c:	cmp	w2, #0x1
   2e950:	b.ls	2e970 <my_regexec@@Base+0xb47c>  // b.plast
   2e954:	sub	w2, w2, #0x1
   2e958:	str	w2, [x1, #8]
   2e95c:	str	xzr, [x21]
   2e960:	ldp	x19, x20, [sp, #16]
   2e964:	ldp	x23, x24, [sp, #48]
   2e968:	ldr	x27, [sp, #80]
   2e96c:	b	2e980 <my_regexec@@Base+0xb48c>
   2e970:	mov	x0, x26
   2e974:	bl	5860 <Perl_sv_free2@plt>
   2e978:	b	2e95c <my_regexec@@Base+0xb468>
   2e97c:	ldp	x19, x20, [sp, #16]
   2e980:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2e984:	ldr	x0, [x0, #3920]
   2e988:	ldr	x1, [sp, #120]
   2e98c:	ldr	x0, [x0]
   2e990:	eor	x0, x1, x0
   2e994:	cbnz	x0, 2e9a8 <my_regexec@@Base+0xb4b4>
   2e998:	ldp	x21, x22, [sp, #32]
   2e99c:	ldp	x25, x26, [sp, #64]
   2e9a0:	ldp	x29, x30, [sp], #128
   2e9a4:	ret
   2e9a8:	stp	x19, x20, [sp, #16]
   2e9ac:	stp	x23, x24, [sp, #48]
   2e9b0:	str	x27, [sp, #80]
   2e9b4:	bl	5300 <__stack_chk_fail@plt>
   2e9b8:	stp	x29, x30, [sp, #-64]!
   2e9bc:	mov	x29, sp
   2e9c0:	stp	x19, x20, [sp, #16]
   2e9c4:	str	x21, [sp, #32]
   2e9c8:	mov	x21, x0
   2e9cc:	mov	x20, x1
   2e9d0:	mov	x19, x2
   2e9d4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2e9d8:	ldr	x2, [x2, #3920]
   2e9dc:	ldr	x1, [x2]
   2e9e0:	str	x1, [sp, #56]
   2e9e4:	mov	x1, #0x0                   	// #0
   2e9e8:	mov	x2, #0x0                   	// #0
   2e9ec:	ldr	x1, [x19, #48]
   2e9f0:	bl	5500 <Perl_invlist_clone@plt>
   2e9f4:	str	x0, [sp, #48]
   2e9f8:	cbz	x20, 2eab4 <my_regexec@@Base+0xb5c0>
   2e9fc:	ldrb	w0, [x19, #1]
   2ea00:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2ea04:	ldr	x2, [x2, #3768]
   2ea08:	ldrb	w0, [x2, w0, sxtw]
   2ea0c:	cmp	w0, #0x12
   2ea10:	b.ne	2ead8 <my_regexec@@Base+0xb5e4>  // b.any
   2ea14:	ldrh	w0, [x19, #2]
   2ea18:	cmp	w0, #0x1
   2ea1c:	b.ne	2ead8 <my_regexec@@Base+0xb5e4>  // b.any
   2ea20:	ldrb	w0, [x19]
   2ea24:	tst	w0, #0xffffff3f
   2ea28:	b.ne	2eafc <my_regexec@@Base+0xb608>  // b.any
   2ea2c:	add	x2, sp, #0x30
   2ea30:	mov	x1, x19
   2ea34:	mov	x0, x21
   2ea38:	bl	2e5d4 <my_regexec@@Base+0xb0e0>
   2ea3c:	mov	x5, #0x0                   	// #0
   2ea40:	mov	x4, #0x0                   	// #0
   2ea44:	ldr	x3, [sp, #48]
   2ea48:	mov	x2, x19
   2ea4c:	mov	x1, x20
   2ea50:	mov	x0, x21
   2ea54:	bl	29858 <my_regexec@@Base+0x6364>
   2ea58:	str	xzr, [x19, #48]
   2ea5c:	ldr	w0, [x19, #40]
   2ea60:	cbz	w0, 2eb20 <my_regexec@@Base+0xb62c>
   2ea64:	ldrb	w0, [x19]
   2ea68:	orr	w0, w0, #0x2
   2ea6c:	strb	w0, [x19]
   2ea70:	mov	w0, #0x15                  	// #21
   2ea74:	strb	w0, [x19, #1]
   2ea78:	ldrb	w0, [x19]
   2ea7c:	tst	w0, #0x6
   2ea80:	b.eq	2ea8c <my_regexec@@Base+0xb598>  // b.none
   2ea84:	ldr	w0, [x20, #248]
   2ea88:	cbz	w0, 2eb40 <my_regexec@@Base+0xb64c>
   2ea8c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ea90:	ldr	x0, [x0, #3920]
   2ea94:	ldr	x1, [sp, #56]
   2ea98:	ldr	x0, [x0]
   2ea9c:	eor	x0, x1, x0
   2eaa0:	cbnz	x0, 2eb64 <my_regexec@@Base+0xb670>
   2eaa4:	ldp	x19, x20, [sp, #16]
   2eaa8:	ldr	x21, [sp, #32]
   2eaac:	ldp	x29, x30, [sp], #64
   2eab0:	ret
   2eab4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2eab8:	add	x3, x3, #0xc10
   2eabc:	add	x3, x3, #0x478
   2eac0:	mov	w2, #0x83b                 	// #2107
   2eac4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2eac8:	add	x1, x1, #0xfb8
   2eacc:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2ead0:	add	x0, x0, #0xfe8
   2ead4:	bl	58e0 <__assert_fail@plt>
   2ead8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2eadc:	add	x3, x3, #0xc10
   2eae0:	add	x3, x3, #0x478
   2eae4:	mov	w2, #0x83d                 	// #2109
   2eae8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2eaec:	add	x1, x1, #0xfb8
   2eaf0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2eaf4:	add	x0, x0, #0xc0
   2eaf8:	bl	58e0 <__assert_fail@plt>
   2eafc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2eb00:	add	x3, x3, #0xc10
   2eb04:	add	x3, x3, #0x478
   2eb08:	mov	w2, #0x842                 	// #2114
   2eb0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2eb10:	add	x1, x1, #0xfb8
   2eb14:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2eb18:	add	x0, x0, #0x628
   2eb1c:	bl	58e0 <__assert_fail@plt>
   2eb20:	ldr	w0, [x20, #248]
   2eb24:	cbz	w0, 2eb34 <my_regexec@@Base+0xb640>
   2eb28:	mov	w0, #0x14                  	// #20
   2eb2c:	strb	w0, [x19, #1]
   2eb30:	b	2ea78 <my_regexec@@Base+0xb584>
   2eb34:	ldrb	w0, [x19]
   2eb38:	tst	w0, #0x6
   2eb3c:	b.eq	2ea8c <my_regexec@@Base+0xb598>  // b.none
   2eb40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2eb44:	add	x3, x3, #0xc10
   2eb48:	add	x3, x3, #0x478
   2eb4c:	mov	w2, #0x856                 	// #2134
   2eb50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2eb54:	add	x1, x1, #0xfb8
   2eb58:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2eb5c:	add	x0, x0, #0x6e0
   2eb60:	bl	58e0 <__assert_fail@plt>
   2eb64:	bl	5300 <__stack_chk_fail@plt>
   2eb68:	stp	x29, x30, [sp, #-144]!
   2eb6c:	mov	x29, sp
   2eb70:	stp	x19, x20, [sp, #16]
   2eb74:	stp	x21, x22, [sp, #32]
   2eb78:	stp	x23, x24, [sp, #48]
   2eb7c:	mov	x23, x0
   2eb80:	mov	x21, x1
   2eb84:	mov	x19, x2
   2eb88:	mov	x20, x3
   2eb8c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2eb90:	ldr	x0, [x0, #3920]
   2eb94:	ldr	x1, [x0]
   2eb98:	str	x1, [sp, #136]
   2eb9c:	mov	x1, #0x0                   	// #0
   2eba0:	ldrb	w1, [x3, #1]
   2eba4:	mov	w22, #0x0                   	// #0
   2eba8:	cmp	w1, #0x16
   2ebac:	b.eq	2ebb4 <my_regexec@@Base+0xb6c0>  // b.none
   2ebb0:	ldrb	w22, [x3]
   2ebb4:	cbz	x21, 2ecb4 <my_regexec@@Base+0xb7c0>
   2ebb8:	cbz	x19, 2ecd8 <my_regexec@@Base+0xb7e4>
   2ebbc:	ldrb	w2, [x19, #1]
   2ebc0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ebc4:	ldr	x0, [x0, #3768]
   2ebc8:	ldrb	w0, [x0, w2, sxtw]
   2ebcc:	cmp	w0, #0x12
   2ebd0:	b.ne	2ecfc <my_regexec@@Base+0xb808>  // b.any
   2ebd4:	ldrh	w0, [x19, #2]
   2ebd8:	cmp	w0, #0x1
   2ebdc:	b.ne	2ecfc <my_regexec@@Base+0xb808>  // b.any
   2ebe0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ebe4:	ldr	x0, [x0, #3768]
   2ebe8:	ldrb	w0, [x0, w1, sxtw]
   2ebec:	cmp	w0, #0x12
   2ebf0:	b.ne	2ec00 <my_regexec@@Base+0xb70c>  // b.any
   2ebf4:	ldrh	w0, [x20, #2]
   2ebf8:	cmp	w0, #0x1
   2ebfc:	b.eq	2ed20 <my_regexec@@Base+0xb82c>  // b.none
   2ec00:	mov	x2, x20
   2ec04:	mov	x1, x21
   2ec08:	mov	x0, x23
   2ec0c:	bl	2d068 <my_regexec@@Base+0x9b74>
   2ec10:	mov	x24, x0
   2ec14:	ldrb	w0, [x20, #1]
   2ec18:	mov	w2, #0x0                   	// #0
   2ec1c:	cmp	w0, #0x13
   2ec20:	b.eq	2ec34 <my_regexec@@Base+0xb740>  // b.none
   2ec24:	and	w0, w22, #0xc
   2ec28:	and	w2, w22, #0xc0
   2ec2c:	cmp	w0, #0x8
   2ec30:	csel	w2, w2, wzr, ne  // ne = any
   2ec34:	ldrb	w0, [x19]
   2ec38:	and	w2, w2, w0
   2ec3c:	strb	w2, [x19]
   2ec40:	tbz	w22, #0, 2ef7c <my_regexec@@Base+0xba88>
   2ec44:	ldrb	w1, [x20, #1]
   2ec48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ec4c:	ldr	x0, [x0, #3768]
   2ec50:	ldrb	w0, [x0, w1, sxtw]
   2ec54:	cmp	w0, #0x12
   2ec58:	b.ne	2ec68 <my_regexec@@Base+0xb774>  // b.any
   2ec5c:	ldrh	w0, [x20, #2]
   2ec60:	cmp	w0, #0x1
   2ec64:	b.eq	2efe0 <my_regexec@@Base+0xbaec>  // b.none
   2ec68:	cbz	x24, 2ee74 <my_regexec@@Base+0xb980>
   2ec6c:	ldrb	w1, [x19, #1]
   2ec70:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ec74:	ldr	x0, [x0, #3768]
   2ec78:	ldrb	w0, [x0, w1, sxtw]
   2ec7c:	cmp	w0, #0x12
   2ec80:	b.ne	2ee98 <my_regexec@@Base+0xb9a4>  // b.any
   2ec84:	ldrh	w0, [x19, #2]
   2ec88:	cmp	w0, #0x1
   2ec8c:	b.ne	2ee98 <my_regexec@@Base+0xb9a4>  // b.any
   2ec90:	add	x4, x19, #0x30
   2ec94:	mov	w3, #0x0                   	// #0
   2ec98:	mov	x2, x24
   2ec9c:	ldr	x1, [x19, #48]
   2eca0:	mov	x0, x23
   2eca4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2eca8:	tbnz	w22, #1, 2eebc <my_regexec@@Base+0xb9c8>
   2ecac:	str	wzr, [x19, #40]
   2ecb0:	b	2f07c <my_regexec@@Base+0xbb88>
   2ecb4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ecb8:	add	x3, x3, #0xc10
   2ecbc:	add	x3, x3, #0x488
   2ecc0:	mov	w2, #0x6b5                 	// #1717
   2ecc4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ecc8:	add	x1, x1, #0xfb8
   2eccc:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2ecd0:	add	x0, x0, #0xfe8
   2ecd4:	bl	58e0 <__assert_fail@plt>
   2ecd8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ecdc:	add	x3, x3, #0xc10
   2ece0:	add	x3, x3, #0x488
   2ece4:	mov	w2, #0x6b5                 	// #1717
   2ece8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ecec:	add	x1, x1, #0xfb8
   2ecf0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2ecf4:	add	x0, x0, #0xb8
   2ecf8:	bl	58e0 <__assert_fail@plt>
   2ecfc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ed00:	add	x3, x3, #0xc10
   2ed04:	add	x3, x3, #0x488
   2ed08:	mov	w2, #0x6b7                 	// #1719
   2ed0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ed10:	add	x1, x1, #0xfb8
   2ed14:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2ed18:	add	x0, x0, #0xc0
   2ed1c:	bl	58e0 <__assert_fail@plt>
   2ed20:	ldr	x24, [x20, #48]
   2ed24:	ldrb	w0, [x20]
   2ed28:	tbnz	w0, #0, 2ed34 <my_regexec@@Base+0xb840>
   2ed2c:	mov	w2, w22
   2ed30:	b	2ec34 <my_regexec@@Base+0xb740>
   2ed34:	cbz	x24, 2ede4 <my_regexec@@Base+0xb8f0>
   2ed38:	ldrb	w0, [x24, #12]
   2ed3c:	cmp	w0, #0x4
   2ed40:	b.ne	2ee08 <my_regexec@@Base+0xb914>  // b.any
   2ed44:	ldr	x0, [x24]
   2ed48:	str	xzr, [x0, #40]
   2ed4c:	add	x2, sp, #0x50
   2ed50:	add	x1, sp, #0x48
   2ed54:	ldr	x0, [x20, #48]
   2ed58:	bl	2da40 <my_regexec@@Base+0xa54c>
   2ed5c:	and	w1, w0, #0xff
   2ed60:	mov	w0, #0x0                   	// #0
   2ed64:	cbz	w1, 2ed7c <my_regexec@@Base+0xb888>
   2ed68:	ldr	x1, [sp, #72]
   2ed6c:	cbnz	x1, 2ed7c <my_regexec@@Base+0xb888>
   2ed70:	ldr	x0, [sp, #80]
   2ed74:	cmn	x0, #0x1
   2ed78:	cset	w0, eq  // eq = none
   2ed7c:	ldr	x1, [x20, #48]
   2ed80:	cbz	x1, 2ee2c <my_regexec@@Base+0xb938>
   2ed84:	ldrb	w2, [x1, #12]
   2ed88:	cmp	w2, #0x4
   2ed8c:	b.ne	2ee50 <my_regexec@@Base+0xb95c>  // b.any
   2ed90:	ldr	x1, [x1]
   2ed94:	mov	x2, #0xffffffffffffffff    	// #-1
   2ed98:	str	x2, [x1, #40]
   2ed9c:	cbnz	w0, 2f184 <my_regexec@@Base+0xbc90>
   2eda0:	ldr	w4, [x20, #40]
   2eda4:	cbz	w4, 2ed2c <my_regexec@@Base+0xb838>
   2eda8:	and	w0, w4, #0x3
   2edac:	cmp	w0, #0x3
   2edb0:	b.eq	2f184 <my_regexec@@Base+0xbc90>  // b.none
   2edb4:	mov	w1, #0x2                   	// #2
   2edb8:	mov	w2, #0x1                   	// #1
   2edbc:	add	w0, w1, #0x1
   2edc0:	lsl	w0, w2, w0
   2edc4:	lsl	w3, w2, w1
   2edc8:	orr	w0, w0, w3
   2edcc:	bics	wzr, w0, w4
   2edd0:	b.eq	2f184 <my_regexec@@Base+0xbc90>  // b.none
   2edd4:	add	w1, w1, #0x2
   2edd8:	cmp	w1, #0x1e
   2eddc:	b.ne	2edbc <my_regexec@@Base+0xb8c8>  // b.any
   2ede0:	b	2ed2c <my_regexec@@Base+0xb838>
   2ede4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ede8:	add	x3, x3, #0xc10
   2edec:	add	x3, x3, #0x3d8
   2edf0:	mov	w2, #0x283d                	// #10301
   2edf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2edf8:	add	x1, x1, #0xfb8
   2edfc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2ee00:	add	x0, x0, #0x568
   2ee04:	bl	58e0 <__assert_fail@plt>
   2ee08:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ee0c:	add	x3, x3, #0xc10
   2ee10:	add	x3, x3, #0x390
   2ee14:	mov	w2, #0x2835                	// #10293
   2ee18:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ee1c:	add	x1, x1, #0xfb8
   2ee20:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2ee24:	add	x0, x0, #0xfc8
   2ee28:	bl	58e0 <__assert_fail@plt>
   2ee2c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ee30:	add	x3, x3, #0xc10
   2ee34:	add	x3, x3, #0x3f0
   2ee38:	mov	w2, #0x284d                	// #10317
   2ee3c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ee40:	add	x1, x1, #0xfb8
   2ee44:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2ee48:	add	x0, x0, #0x568
   2ee4c:	bl	58e0 <__assert_fail@plt>
   2ee50:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ee54:	add	x3, x3, #0xc10
   2ee58:	add	x3, x3, #0x390
   2ee5c:	mov	w2, #0x2835                	// #10293
   2ee60:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ee64:	add	x1, x1, #0xfb8
   2ee68:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2ee6c:	add	x0, x0, #0xfc8
   2ee70:	bl	58e0 <__assert_fail@plt>
   2ee74:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ee78:	add	x3, x3, #0xc10
   2ee7c:	add	x3, x3, #0x498
   2ee80:	mov	w2, #0x7c5                 	// #1989
   2ee84:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ee88:	add	x1, x1, #0xfb8
   2ee8c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2ee90:	add	x0, x0, #0x568
   2ee94:	bl	58e0 <__assert_fail@plt>
   2ee98:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ee9c:	add	x3, x3, #0xc10
   2eea0:	add	x3, x3, #0x498
   2eea4:	mov	w2, #0x7c7                 	// #1991
   2eea8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2eeac:	add	x1, x1, #0xfb8
   2eeb0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2eeb4:	add	x0, x0, #0xc0
   2eeb8:	bl	58e0 <__assert_fail@plt>
   2eebc:	ldr	w8, [x19, #40]
   2eec0:	cbz	w8, 2f07c <my_regexec@@Base+0xbb88>
   2eec4:	stp	xzr, xzr, [sp, #88]
   2eec8:	stp	xzr, xzr, [sp, #104]
   2eecc:	str	xzr, [sp, #120]
   2eed0:	str	wzr, [sp, #128]
   2eed4:	mov	w5, #0x0                   	// #0
   2eed8:	mov	w6, #0x0                   	// #0
   2eedc:	mov	w3, #0x1                   	// #1
   2eee0:	mov	w0, #0x0                   	// #0
   2eee4:	mov	w2, w3
   2eee8:	mov	w7, w3
   2eeec:	b	2ef20 <my_regexec@@Base+0xba2c>
   2eef0:	lsl	w1, w2, w0
   2eef4:	ldr	w4, [x20, #40]
   2eef8:	tst	w1, w4
   2eefc:	b.eq	2ef10 <my_regexec@@Base+0xba1c>  // b.none
   2ef00:	add	w1, w3, w0
   2ef04:	lsl	w1, w2, w1
   2ef08:	orr	w5, w5, w1
   2ef0c:	mov	w6, w7
   2ef10:	neg	w3, w3
   2ef14:	add	w0, w0, #0x1
   2ef18:	cmp	w0, #0x1e
   2ef1c:	b.eq	2ef64 <my_regexec@@Base+0xba70>  // b.none
   2ef20:	tbnz	w0, #0, 2eef0 <my_regexec@@Base+0xb9fc>
   2ef24:	add	w1, w0, #0x1
   2ef28:	lsl	w1, w2, w1
   2ef2c:	lsl	w4, w2, w0
   2ef30:	orr	w1, w1, w4
   2ef34:	ldr	w4, [x20, #40]
   2ef38:	bics	wzr, w1, w4
   2ef3c:	b.ne	2eef0 <my_regexec@@Base+0xb9fc>  // b.any
   2ef40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ef44:	add	x3, x3, #0xc10
   2ef48:	add	x3, x3, #0x488
   2ef4c:	mov	w2, #0x732                 	// #1842
   2ef50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ef54:	add	x1, x1, #0xfb8
   2ef58:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2ef5c:	add	x0, x0, #0x728
   2ef60:	bl	58e0 <__assert_fail@plt>
   2ef64:	cbz	w6, 2ef6c <my_regexec@@Base+0xba78>
   2ef68:	str	w5, [sp, #128]
   2ef6c:	ldr	w0, [sp, #128]
   2ef70:	and	w8, w0, w8
   2ef74:	str	w8, [x19, #40]
   2ef78:	b	2f07c <my_regexec@@Base+0xbb88>
   2ef7c:	ldrb	w1, [x20, #1]
   2ef80:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2ef84:	ldr	x0, [x0, #3768]
   2ef88:	ldrb	w0, [x0, w1, sxtw]
   2ef8c:	cmp	w0, #0x12
   2ef90:	b.eq	2efd4 <my_regexec@@Base+0xbae0>  // b.none
   2ef94:	mov	x1, x19
   2ef98:	mov	x0, x21
   2ef9c:	bl	2dc08 <my_regexec@@Base+0xa714>
   2efa0:	cbz	w0, 2f024 <my_regexec@@Base+0xbb30>
   2efa4:	ldrb	w1, [x20, #1]
   2efa8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2efac:	ldr	x0, [x0, #3768]
   2efb0:	ldrb	w0, [x0, w1, sxtw]
   2efb4:	cmp	w0, #0x12
   2efb8:	b.eq	2eff4 <my_regexec@@Base+0xbb00>  // b.none
   2efbc:	str	x24, [x19, #48]
   2efc0:	str	wzr, [x19, #40]
   2efc4:	tbz	w22, #1, 2f07c <my_regexec@@Base+0xbb88>
   2efc8:	ldr	w0, [x20, #40]
   2efcc:	str	w0, [x19, #40]
   2efd0:	b	2f07c <my_regexec@@Base+0xbb88>
   2efd4:	ldrh	w0, [x20, #2]
   2efd8:	cmp	w0, #0x1
   2efdc:	b.ne	2ef94 <my_regexec@@Base+0xbaa0>  // b.any
   2efe0:	mov	x1, x20
   2efe4:	mov	x0, x21
   2efe8:	bl	2dc08 <my_regexec@@Base+0xa714>
   2efec:	cbnz	w0, 2f07c <my_regexec@@Base+0xbb88>
   2eff0:	b	2ef94 <my_regexec@@Base+0xbaa0>
   2eff4:	ldrh	w0, [x20, #2]
   2eff8:	cmp	w0, #0x1
   2effc:	b.ne	2efbc <my_regexec@@Base+0xbac8>  // b.any
   2f000:	ldp	x0, x1, [x20]
   2f004:	stp	x0, x1, [x19]
   2f008:	ldp	x0, x1, [x20, #16]
   2f00c:	stp	x0, x1, [x19, #16]
   2f010:	ldp	x0, x1, [x20, #32]
   2f014:	stp	x0, x1, [x19, #32]
   2f018:	ldr	x0, [x20, #48]
   2f01c:	str	x0, [x19, #48]
   2f020:	b	2f07c <my_regexec@@Base+0xbb88>
   2f024:	ldr	w0, [x19, #40]
   2f028:	cbnz	w0, 2f0a8 <my_regexec@@Base+0xbbb4>
   2f02c:	tbz	w22, #1, 2f0f8 <my_regexec@@Base+0xbc04>
   2f030:	ldr	w1, [x20, #40]
   2f034:	and	w0, w1, w0
   2f038:	str	w0, [x19, #40]
   2f03c:	cbz	x24, 2f0b0 <my_regexec@@Base+0xbbbc>
   2f040:	ldrb	w1, [x19, #1]
   2f044:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f048:	ldr	x0, [x0, #3768]
   2f04c:	ldrb	w0, [x0, w1, sxtw]
   2f050:	cmp	w0, #0x12
   2f054:	b.ne	2f0d4 <my_regexec@@Base+0xbbe0>  // b.any
   2f058:	ldrh	w0, [x19, #2]
   2f05c:	cmp	w0, #0x1
   2f060:	b.ne	2f0d4 <my_regexec@@Base+0xbbe0>  // b.any
   2f064:	add	x4, x19, #0x30
   2f068:	mov	w3, #0x0                   	// #0
   2f06c:	mov	x2, x24
   2f070:	ldr	x1, [x19, #48]
   2f074:	mov	x0, x23
   2f078:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2f07c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f080:	ldr	x0, [x0, #3920]
   2f084:	ldr	x1, [sp, #136]
   2f088:	ldr	x0, [x0]
   2f08c:	eor	x0, x1, x0
   2f090:	cbnz	x0, 2f18c <my_regexec@@Base+0xbc98>
   2f094:	ldp	x19, x20, [sp, #16]
   2f098:	ldp	x21, x22, [sp, #32]
   2f09c:	ldp	x23, x24, [sp, #48]
   2f0a0:	ldp	x29, x30, [sp], #144
   2f0a4:	ret
   2f0a8:	tbz	w22, #1, 2f03c <my_regexec@@Base+0xbb48>
   2f0ac:	b	2f030 <my_regexec@@Base+0xbb3c>
   2f0b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f0b4:	add	x3, x3, #0xc10
   2f0b8:	add	x3, x3, #0x370
   2f0bc:	mov	w2, #0x7b6                 	// #1974
   2f0c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f0c4:	add	x1, x1, #0xfb8
   2f0c8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2f0cc:	add	x0, x0, #0x568
   2f0d0:	bl	58e0 <__assert_fail@plt>
   2f0d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f0d8:	add	x3, x3, #0xc10
   2f0dc:	add	x3, x3, #0x370
   2f0e0:	mov	w2, #0x7b8                 	// #1976
   2f0e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f0e8:	add	x1, x1, #0xfb8
   2f0ec:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2f0f0:	add	x0, x0, #0xc0
   2f0f4:	bl	58e0 <__assert_fail@plt>
   2f0f8:	cbz	x24, 2f13c <my_regexec@@Base+0xbc48>
   2f0fc:	ldrb	w1, [x19, #1]
   2f100:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f104:	ldr	x0, [x0, #3768]
   2f108:	ldrb	w0, [x0, w1, sxtw]
   2f10c:	cmp	w0, #0x12
   2f110:	b.ne	2f160 <my_regexec@@Base+0xbc6c>  // b.any
   2f114:	ldrh	w0, [x19, #2]
   2f118:	cmp	w0, #0x1
   2f11c:	b.ne	2f160 <my_regexec@@Base+0xbc6c>  // b.any
   2f120:	add	x4, x19, #0x30
   2f124:	mov	w3, #0x0                   	// #0
   2f128:	mov	x2, x24
   2f12c:	ldr	x1, [x19, #48]
   2f130:	mov	x0, x23
   2f134:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f138:	b	2f07c <my_regexec@@Base+0xbb88>
   2f13c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f140:	add	x3, x3, #0xc10
   2f144:	add	x3, x3, #0x498
   2f148:	mov	w2, #0x7c5                 	// #1989
   2f14c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f150:	add	x1, x1, #0xfb8
   2f154:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2f158:	add	x0, x0, #0x568
   2f15c:	bl	58e0 <__assert_fail@plt>
   2f160:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f164:	add	x3, x3, #0xc10
   2f168:	add	x3, x3, #0x498
   2f16c:	mov	w2, #0x7c7                 	// #1991
   2f170:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f174:	add	x1, x1, #0xfb8
   2f178:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2f17c:	add	x0, x0, #0xc0
   2f180:	bl	58e0 <__assert_fail@plt>
   2f184:	orr	w2, w22, #0x80
   2f188:	b	2ec34 <my_regexec@@Base+0xb740>
   2f18c:	bl	5300 <__stack_chk_fail@plt>
   2f190:	stp	x29, x30, [sp, #-160]!
   2f194:	mov	x29, sp
   2f198:	stp	x19, x20, [sp, #16]
   2f19c:	stp	x21, x22, [sp, #32]
   2f1a0:	stp	x23, x24, [sp, #48]
   2f1a4:	stp	x25, x26, [sp, #64]
   2f1a8:	stp	x27, x28, [sp, #80]
   2f1ac:	mov	x20, x0
   2f1b0:	mov	x21, x1
   2f1b4:	mov	x19, x2
   2f1b8:	mov	x1, x3
   2f1bc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f1c0:	ldr	x0, [x0, #3920]
   2f1c4:	ldr	x2, [x0]
   2f1c8:	str	x2, [sp, #152]
   2f1cc:	mov	x2, #0x0                   	// #0
   2f1d0:	ldr	w0, [x21, #12]
   2f1d4:	and	w3, w0, #0xf
   2f1d8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2f1dc:	ldr	x2, [x2, #3888]
   2f1e0:	ldrb	w2, [x2, w3, uxtw]
   2f1e4:	cbz	w2, 2f2ec <my_regexec@@Base+0xbdf8>
   2f1e8:	mov	x26, x4
   2f1ec:	mov	x23, x5
   2f1f0:	and	w6, w6, #0xff
   2f1f4:	eor	w24, w6, #0x1
   2f1f8:	and	w2, w0, #0xc000
   2f1fc:	cmp	w2, #0x8, lsl #12
   2f200:	b.eq	2f310 <my_regexec@@Base+0xbe1c>  // b.none
   2f204:	and	w0, w0, #0xff
   2f208:	cmp	w0, #0xf
   2f20c:	b.eq	2f344 <my_regexec@@Base+0xbe50>  // b.none
   2f210:	ldr	x0, [x21]
   2f214:	ldr	x28, [x0, #16]
   2f218:	str	xzr, [sp, #128]
   2f21c:	str	xzr, [sp, #136]
   2f220:	str	xzr, [sp, #144]
   2f224:	mov	w25, #0x0                   	// #0
   2f228:	cbz	x23, 2f230 <my_regexec@@Base+0xbd3c>
   2f22c:	ldrb	w25, [x23]
   2f230:	and	w27, w25, #0x1
   2f234:	str	w27, [sp, #100]
   2f238:	cbz	x1, 2f404 <my_regexec@@Base+0xbf10>
   2f23c:	ldr	w0, [x1, #12]
   2f240:	and	w2, w0, #0xff
   2f244:	cmp	w2, #0x4
   2f248:	b.ne	2f374 <my_regexec@@Base+0xbe80>  // b.any
   2f24c:	and	w0, w0, #0xf
   2f250:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2f254:	ldr	x2, [x2, #3888]
   2f258:	ldrb	w0, [x2, w0, uxtw]
   2f25c:	cbz	w0, 2f398 <my_regexec@@Base+0xbea4>
   2f260:	ldr	x2, [x1]
   2f264:	ldr	x0, [x2, #16]
   2f268:	cbz	x0, 2f2a8 <my_regexec@@Base+0xbdb4>
   2f26c:	ldrb	w2, [x2, #48]
   2f270:	lsr	x0, x0, #3
   2f274:	subs	x0, x0, x2
   2f278:	b.eq	2f2a8 <my_regexec@@Base+0xbdb4>  // b.none
   2f27c:	ldr	x3, [x1, #16]
   2f280:	ldrb	w4, [x3]
   2f284:	cbnz	w4, 2f3bc <my_regexec@@Base+0xbec8>
   2f288:	lsl	x2, x2, #3
   2f28c:	tbnz	w0, #0, 2f3e0 <my_regexec@@Base+0xbeec>
   2f290:	add	x0, x3, x0, lsl #3
   2f294:	add	x0, x0, x2
   2f298:	ldur	x0, [x0, #-8]
   2f29c:	sub	x0, x0, #0x1
   2f2a0:	cmp	x0, #0xff
   2f2a4:	b.hi	2f3e0 <my_regexec@@Base+0xbeec>  // b.pmore
   2f2a8:	mov	x2, #0x0                   	// #0
   2f2ac:	mov	x0, x20
   2f2b0:	bl	5500 <Perl_invlist_clone@plt>
   2f2b4:	str	x0, [sp, #120]
   2f2b8:	mov	x22, #0x0                   	// #0
   2f2bc:	cbz	w25, 2f2e0 <my_regexec@@Base+0xbdec>
   2f2c0:	ldrb	w0, [x23, #1]
   2f2c4:	cmp	w0, #0x13
   2f2c8:	b.eq	2f418 <my_regexec@@Base+0xbf24>  // b.none
   2f2cc:	sub	w0, w0, #0x14
   2f2d0:	and	w0, w0, #0xff
   2f2d4:	mov	x22, #0x0                   	// #0
   2f2d8:	cmp	w0, #0x1
   2f2dc:	b.ls	2f480 <my_regexec@@Base+0xbf8c>  // b.plast
   2f2e0:	cbz	x19, 2f59c <my_regexec@@Base+0xc0a8>
   2f2e4:	mov	w23, #0x0                   	// #0
   2f2e8:	b	2f524 <my_regexec@@Base+0xc030>
   2f2ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f2f0:	add	x3, x3, #0xc10
   2f2f4:	add	x3, x3, #0x4b0
   2f2f8:	mov	w2, #0x547e                	// #21630
   2f2fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f300:	add	x1, x1, #0xfb8
   2f304:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f308:	add	x0, x0, #0xe40
   2f30c:	bl	58e0 <__assert_fail@plt>
   2f310:	and	w2, w0, #0xff
   2f314:	sub	w2, w2, #0x9
   2f318:	cmp	w2, #0x1
   2f31c:	b.hi	2f204 <my_regexec@@Base+0xbd10>  // b.pmore
   2f320:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f324:	add	x3, x3, #0xc10
   2f328:	add	x3, x3, #0x4b0
   2f32c:	mov	w2, #0x547e                	// #21630
   2f330:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f334:	add	x1, x1, #0xfb8
   2f338:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f33c:	add	x0, x0, #0xe70
   2f340:	bl	58e0 <__assert_fail@plt>
   2f344:	ldr	x0, [x21]
   2f348:	ldrb	w0, [x0, #129]
   2f34c:	tbnz	w0, #6, 2f210 <my_regexec@@Base+0xbd1c>
   2f350:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f354:	add	x3, x3, #0xc10
   2f358:	add	x3, x3, #0x4b0
   2f35c:	mov	w2, #0x547e                	// #21630
   2f360:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f364:	add	x1, x1, #0xfb8
   2f368:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f36c:	add	x0, x0, #0xe88
   2f370:	bl	58e0 <__assert_fail@plt>
   2f374:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f378:	add	x3, x3, #0xc10
   2f37c:	add	x3, x3, #0x18
   2f380:	mov	w2, #0x31                  	// #49
   2f384:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2f388:	add	x1, x1, #0x550
   2f38c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2f390:	add	x0, x0, #0xfc8
   2f394:	bl	58e0 <__assert_fail@plt>
   2f398:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f39c:	add	x3, x3, #0xc10
   2f3a0:	add	x3, x3, #0x18
   2f3a4:	mov	w2, #0x33                  	// #51
   2f3a8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2f3ac:	add	x1, x1, #0x550
   2f3b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f3b4:	add	x0, x0, #0xe40
   2f3b8:	bl	58e0 <__assert_fail@plt>
   2f3bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f3c0:	add	x3, x3, #0xc10
   2f3c4:	add	x3, x3, #0x380
   2f3c8:	mov	w2, #0x55                  	// #85
   2f3cc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2f3d0:	add	x1, x1, #0x550
   2f3d4:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2f3d8:	add	x0, x0, #0x590
   2f3dc:	bl	58e0 <__assert_fail@plt>
   2f3e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f3e4:	add	x3, x3, #0xc10
   2f3e8:	add	x3, x3, #0x4b0
   2f3ec:	mov	w2, #0x549b                	// #21659
   2f3f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f3f4:	add	x1, x1, #0xfb8
   2f3f8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2f3fc:	add	x0, x0, #0x7b8
   2f400:	bl	58e0 <__assert_fail@plt>
   2f404:	mov	x1, #0x80                  	// #128
   2f408:	mov	x0, x20
   2f40c:	bl	5090 <Perl__new_invlist@plt>
   2f410:	str	x0, [sp, #120]
   2f414:	b	2f2b8 <my_regexec@@Base+0xbdc4>
   2f418:	tbnz	w25, #6, 2f444 <my_regexec@@Base+0xbf50>
   2f41c:	mov	x22, #0x0                   	// #0
   2f420:	tbz	w25, #7, 2f2e0 <my_regexec@@Base+0xbdec>
   2f424:	mov	x2, #0x0                   	// #0
   2f428:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f42c:	ldr	x0, [x0, #3960]
   2f430:	ldr	x1, [x0]
   2f434:	mov	x0, x20
   2f438:	bl	5500 <Perl_invlist_clone@plt>
   2f43c:	str	x0, [sp, #136]
   2f440:	b	2f2e0 <my_regexec@@Base+0xbdec>
   2f444:	add	x4, sp, #0x80
   2f448:	mov	w3, #0x0                   	// #0
   2f44c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f450:	ldr	x0, [x0, #3960]
   2f454:	ldr	x2, [x0]
   2f458:	ldr	x1, [sp, #120]
   2f45c:	mov	x0, x20
   2f460:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f464:	add	x4, sp, #0x78
   2f468:	mov	w3, #0x1                   	// #1
   2f46c:	ldr	x2, [sp, #128]
   2f470:	ldr	x1, [sp, #120]
   2f474:	mov	x0, x20
   2f478:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f47c:	b	2f41c <my_regexec@@Base+0xbf28>
   2f480:	tst	w25, #0x6
   2f484:	csel	w24, w24, wzr, eq  // eq = none
   2f488:	ldrb	w0, [x23]
   2f48c:	tbz	w0, #1, 2f2e0 <my_regexec@@Base+0xbdec>
   2f490:	ldr	w0, [x23, #40]
   2f494:	cbz	w0, 2f2e0 <my_regexec@@Base+0xbdec>
   2f498:	mov	x2, #0x0                   	// #0
   2f49c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   2f4a0:	add	x1, x1, #0x20
   2f4a4:	mov	x0, x20
   2f4a8:	bl	59a0 <Perl_newSVpvn@plt>
   2f4ac:	mov	x22, x0
   2f4b0:	mov	x25, #0x0                   	// #0
   2f4b4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f4b8:	add	x0, x0, #0xb30
   2f4bc:	str	x0, [sp, #104]
   2f4c0:	b	2f4d0 <my_regexec@@Base+0xbfdc>
   2f4c4:	add	x25, x25, #0x1
   2f4c8:	cmp	x25, #0x1e
   2f4cc:	b.eq	2f2e0 <my_regexec@@Base+0xbdec>  // b.none
   2f4d0:	mov	w0, #0x1                   	// #1
   2f4d4:	lsl	w0, w0, w25
   2f4d8:	ldr	w1, [x23, #40]
   2f4dc:	tst	w0, w1
   2f4e0:	b.eq	2f4c4 <my_regexec@@Base+0xbfd0>  // b.none
   2f4e4:	ldr	x0, [sp, #104]
   2f4e8:	ldr	x2, [x0, x25, lsl #3]
   2f4ec:	mov	x1, x22
   2f4f0:	mov	x0, x20
   2f4f4:	bl	57f0 <Perl_sv_catpv@plt>
   2f4f8:	b	2f4c4 <my_regexec@@Base+0xbfd0>
   2f4fc:	mov	w23, w0
   2f500:	sub	w3, w23, #0x1
   2f504:	sxtw	x3, w3
   2f508:	ldr	x1, [sp, #120]
   2f50c:	mov	x0, x20
   2f510:	bl	5450 <Perl__add_range_to_invlist@plt>
   2f514:	str	x0, [sp, #120]
   2f518:	add	w23, w23, #0x1
   2f51c:	cmp	w23, #0xff
   2f520:	b.gt	2f59c <my_regexec@@Base+0xc0a8>
   2f524:	sxtw	x2, w23
   2f528:	lsr	x0, x2, #3
   2f52c:	ldrb	w0, [x19, x0]
   2f530:	and	w1, w23, #0x7
   2f534:	lsr	w0, w0, w1
   2f538:	tbz	w0, #0, 2f518 <my_regexec@@Base+0xc024>
   2f53c:	add	w0, w23, #0x1
   2f540:	cmp	w0, #0xff
   2f544:	b.gt	2f4fc <my_regexec@@Base+0xc008>
   2f548:	sxtw	x1, w0
   2f54c:	lsr	x1, x1, #3
   2f550:	ldrb	w1, [x19, x1]
   2f554:	and	w3, w0, #0x7
   2f558:	lsr	w1, w1, w3
   2f55c:	tbz	w1, #0, 2f594 <my_regexec@@Base+0xc0a0>
   2f560:	add	w23, w23, #0x2
   2f564:	sxtw	x1, w23
   2f568:	mov	w23, w0
   2f56c:	add	w23, w23, #0x1
   2f570:	cmp	w23, #0x100
   2f574:	b.eq	2f500 <my_regexec@@Base+0xc00c>  // b.none
   2f578:	lsr	x0, x1, #3
   2f57c:	ldrb	w0, [x19, x0]
   2f580:	and	w3, w23, #0x7
   2f584:	lsr	w0, w0, w3
   2f588:	add	x1, x1, #0x1
   2f58c:	tbnz	w0, #0, 2f56c <my_regexec@@Base+0xc078>
   2f590:	b	2f500 <my_regexec@@Base+0xc00c>
   2f594:	mov	w23, w0
   2f598:	b	2f500 <my_regexec@@Base+0xc00c>
   2f59c:	ldr	x1, [sp, #128]
   2f5a0:	cbz	x1, 2f5b8 <my_regexec@@Base+0xc0c4>
   2f5a4:	add	x4, sp, #0x80
   2f5a8:	mov	w3, #0x1                   	// #1
   2f5ac:	ldr	x2, [sp, #120]
   2f5b0:	mov	x0, x20
   2f5b4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f5b8:	ldr	x1, [sp, #136]
   2f5bc:	cbz	x1, 2f5d4 <my_regexec@@Base+0xc0e0>
   2f5c0:	add	x4, sp, #0x88
   2f5c4:	mov	w3, #0x1                   	// #1
   2f5c8:	ldr	x2, [sp, #120]
   2f5cc:	mov	x0, x20
   2f5d0:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f5d4:	cbz	x26, 2f618 <my_regexec@@Base+0xc124>
   2f5d8:	mov	x2, #0x0                   	// #0
   2f5dc:	mov	x1, x26
   2f5e0:	mov	x0, x20
   2f5e4:	bl	5500 <Perl_invlist_clone@plt>
   2f5e8:	mov	x1, x0
   2f5ec:	str	x0, [sp, #144]
   2f5f0:	add	x4, sp, #0x90
   2f5f4:	mov	w3, #0x1                   	// #1
   2f5f8:	ldr	x2, [sp, #120]
   2f5fc:	mov	x0, x20
   2f600:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f604:	ldr	x19, [sp, #144]
   2f608:	mov	x0, x19
   2f60c:	bl	2d92c <my_regexec@@Base+0xa438>
   2f610:	cmp	x0, #0xff
   2f614:	b.hi	2fb38 <my_regexec@@Base+0xc644>  // b.pmore
   2f618:	ldrb	w6, [sp, #100]
   2f61c:	ldr	x5, [sp, #144]
   2f620:	ldr	x4, [sp, #136]
   2f624:	ldr	x3, [sp, #128]
   2f628:	mov	x2, x22
   2f62c:	ldr	x1, [sp, #120]
   2f630:	mov	x0, x20
   2f634:	bl	2e06c <my_regexec@@Base+0xab78>
   2f638:	mov	x19, x0
   2f63c:	cbz	w24, 2fb5c <my_regexec@@Base+0xc668>
   2f640:	cmp	w27, #0x0
   2f644:	mov	w25, #0x5                   	// #5
   2f648:	csel	w25, w25, wzr, ne  // ne = any
   2f64c:	mov	w26, #0x5                   	// #5
   2f650:	csel	w26, w26, wzr, eq  // eq = none
   2f654:	csel	w24, w24, wzr, eq  // eq = none
   2f658:	add	x23, sp, #0x78
   2f65c:	mov	x4, x23
   2f660:	mov	w3, #0x0                   	// #0
   2f664:	ldr	x2, [sp, #120]
   2f668:	ldr	x1, [sp, #128]
   2f66c:	mov	x0, x20
   2f670:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2f674:	mov	x4, x23
   2f678:	mov	w3, #0x0                   	// #0
   2f67c:	ldr	x2, [sp, #120]
   2f680:	ldr	x1, [sp, #136]
   2f684:	mov	x0, x20
   2f688:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2f68c:	mov	x4, x23
   2f690:	mov	w3, #0x0                   	// #0
   2f694:	ldr	x2, [sp, #120]
   2f698:	ldr	x1, [sp, #144]
   2f69c:	mov	x0, x20
   2f6a0:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   2f6a4:	ldr	x1, [sp, #120]
   2f6a8:	mov	x0, x20
   2f6ac:	bl	52b0 <Perl__invlist_invert@plt>
   2f6b0:	mov	x4, x23
   2f6b4:	mov	w3, #0x0                   	// #0
   2f6b8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f6bc:	ldr	x0, [x0, #4040]
   2f6c0:	ldr	x2, [x0]
   2f6c4:	ldr	x1, [sp, #120]
   2f6c8:	mov	x0, x20
   2f6cc:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f6d0:	ldr	x1, [sp, #128]
   2f6d4:	cbz	x1, 2f924 <my_regexec@@Base+0xc430>
   2f6d8:	mov	x0, x20
   2f6dc:	bl	52b0 <Perl__invlist_invert@plt>
   2f6e0:	add	x4, sp, #0x80
   2f6e4:	mov	w3, #0x0                   	// #0
   2f6e8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f6ec:	ldr	x0, [x0, #3960]
   2f6f0:	ldr	x2, [x0]
   2f6f4:	ldr	x1, [sp, #128]
   2f6f8:	mov	x0, x20
   2f6fc:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f700:	ldr	x1, [sp, #144]
   2f704:	cbz	x1, 2f730 <my_regexec@@Base+0xc23c>
   2f708:	mov	x0, x20
   2f70c:	bl	52b0 <Perl__invlist_invert@plt>
   2f710:	add	x4, sp, #0x90
   2f714:	mov	w3, #0x0                   	// #0
   2f718:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   2f71c:	ldr	x0, [x0, #4040]
   2f720:	ldr	x2, [x0]
   2f724:	ldr	x1, [sp, #144]
   2f728:	mov	x0, x20
   2f72c:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   2f730:	mov	w6, w24
   2f734:	ldr	x5, [sp, #144]
   2f738:	ldr	x4, [sp, #136]
   2f73c:	ldr	x3, [sp, #128]
   2f740:	mov	x2, x22
   2f744:	ldr	x1, [sp, #120]
   2f748:	mov	x0, x20
   2f74c:	bl	2e06c <my_regexec@@Base+0xab78>
   2f750:	mov	x23, x0
   2f754:	cbz	x0, 2fa48 <my_regexec@@Base+0xc554>
   2f758:	cbz	x19, 2fb8c <my_regexec@@Base+0xc698>
   2f75c:	ldr	w0, [x0, #12]
   2f760:	and	w2, w0, #0xf
   2f764:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2f768:	ldr	x1, [x1, #3888]
   2f76c:	ldrb	w1, [x1, w2, uxtw]
   2f770:	cbz	w1, 2f938 <my_regexec@@Base+0xc444>
   2f774:	and	w1, w0, #0xc000
   2f778:	cmp	w1, #0x8, lsl #12
   2f77c:	b.eq	2f95c <my_regexec@@Base+0xc468>  // b.none
   2f780:	and	w0, w0, #0xff
   2f784:	cmp	w0, #0xf
   2f788:	b.eq	2f990 <my_regexec@@Base+0xc49c>  // b.none
   2f78c:	ldr	x0, [x23]
   2f790:	ldr	x0, [x0, #16]
   2f794:	add	x26, x0, w26, sxtw
   2f798:	ldr	w0, [x19, #12]
   2f79c:	and	w2, w0, #0xf
   2f7a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2f7a4:	ldr	x1, [x1, #3888]
   2f7a8:	ldrb	w1, [x1, w2, uxtw]
   2f7ac:	cbz	w1, 2f9c0 <my_regexec@@Base+0xc4cc>
   2f7b0:	and	w1, w0, #0xc000
   2f7b4:	cmp	w1, #0x8, lsl #12
   2f7b8:	b.eq	2f9e4 <my_regexec@@Base+0xc4f0>  // b.none
   2f7bc:	and	w0, w0, #0xff
   2f7c0:	cmp	w0, #0xf
   2f7c4:	b.eq	2fa18 <my_regexec@@Base+0xc524>  // b.none
   2f7c8:	ldr	x0, [x19]
   2f7cc:	ldr	x0, [x0, #16]
   2f7d0:	add	x25, x0, w25, sxtw
   2f7d4:	cmp	x26, x25
   2f7d8:	b.cc	2fba4 <my_regexec@@Base+0xc6b0>  // b.lo, b.ul, b.last
   2f7dc:	mov	w3, #0x2                   	// #2
   2f7e0:	mov	x2, x19
   2f7e4:	mov	x1, x21
   2f7e8:	mov	x0, x20
   2f7ec:	bl	5690 <Perl_sv_catsv_flags@plt>
   2f7f0:	ldr	w2, [x19, #8]
   2f7f4:	cmp	w2, #0x1
   2f7f8:	b.ls	2fa50 <my_regexec@@Base+0xc55c>  // b.plast
   2f7fc:	sub	w2, w2, #0x1
   2f800:	str	w2, [x19, #8]
   2f804:	cbz	x23, 2f81c <my_regexec@@Base+0xc328>
   2f808:	ldr	w2, [x23, #8]
   2f80c:	cmp	w2, #0x1
   2f810:	b.ls	2fa60 <my_regexec@@Base+0xc56c>  // b.plast
   2f814:	sub	w2, w2, #0x1
   2f818:	str	w2, [x23, #8]
   2f81c:	ldr	x1, [sp, #120]
   2f820:	ldr	w2, [x1, #8]
   2f824:	cmp	w2, #0x1
   2f828:	b.ls	2fa70 <my_regexec@@Base+0xc57c>  // b.plast
   2f82c:	sub	w2, w2, #0x1
   2f830:	str	w2, [x1, #8]
   2f834:	ldr	x1, [sp, #128]
   2f838:	cbz	x1, 2f850 <my_regexec@@Base+0xc35c>
   2f83c:	ldr	w2, [x1, #8]
   2f840:	cmp	w2, #0x1
   2f844:	b.ls	2fa7c <my_regexec@@Base+0xc588>  // b.plast
   2f848:	sub	w2, w2, #0x1
   2f84c:	str	w2, [x1, #8]
   2f850:	ldr	x1, [sp, #136]
   2f854:	cbz	x1, 2f86c <my_regexec@@Base+0xc378>
   2f858:	ldr	w2, [x1, #8]
   2f85c:	cmp	w2, #0x1
   2f860:	b.ls	2fa88 <my_regexec@@Base+0xc594>  // b.plast
   2f864:	sub	w2, w2, #0x1
   2f868:	str	w2, [x1, #8]
   2f86c:	cbz	x22, 2f884 <my_regexec@@Base+0xc390>
   2f870:	ldr	w2, [x22, #8]
   2f874:	cmp	w2, #0x1
   2f878:	b.ls	2fa94 <my_regexec@@Base+0xc5a0>  // b.plast
   2f87c:	sub	w2, w2, #0x1
   2f880:	str	w2, [x22, #8]
   2f884:	ldr	x1, [sp, #144]
   2f888:	cbz	x1, 2f8a0 <my_regexec@@Base+0xc3ac>
   2f88c:	ldr	w2, [x1, #8]
   2f890:	cmp	w2, #0x1
   2f894:	b.ls	2faa4 <my_regexec@@Base+0xc5b0>  // b.plast
   2f898:	sub	w2, w2, #0x1
   2f89c:	str	w2, [x1, #8]
   2f8a0:	ldr	w0, [x21, #12]
   2f8a4:	and	w2, w0, #0xf
   2f8a8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2f8ac:	ldr	x1, [x1, #3888]
   2f8b0:	ldrb	w1, [x1, w2, uxtw]
   2f8b4:	cbz	w1, 2fab0 <my_regexec@@Base+0xc5bc>
   2f8b8:	and	w1, w0, #0xc000
   2f8bc:	cmp	w1, #0x8, lsl #12
   2f8c0:	b.eq	2fad4 <my_regexec@@Base+0xc5e0>  // b.none
   2f8c4:	and	w0, w0, #0xff
   2f8c8:	cmp	w0, #0xf
   2f8cc:	b.eq	2fb08 <my_regexec@@Base+0xc614>  // b.none
   2f8d0:	ldr	x0, [x21]
   2f8d4:	ldr	x0, [x0, #16]
   2f8d8:	cmp	x0, x28
   2f8dc:	cset	w0, hi  // hi = pmore
   2f8e0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2f8e4:	ldr	x1, [x1, #3920]
   2f8e8:	ldr	x2, [sp, #152]
   2f8ec:	ldr	x1, [x1]
   2f8f0:	eor	x1, x2, x1
   2f8f4:	cbnz	x1, 2fbbc <my_regexec@@Base+0xc6c8>
   2f8f8:	ldp	x19, x20, [sp, #16]
   2f8fc:	ldp	x21, x22, [sp, #32]
   2f900:	ldp	x23, x24, [sp, #48]
   2f904:	ldp	x25, x26, [sp, #64]
   2f908:	ldp	x27, x28, [sp, #80]
   2f90c:	ldp	x29, x30, [sp], #160
   2f910:	ret
   2f914:	mov	x1, x19
   2f918:	mov	x0, x20
   2f91c:	bl	5860 <Perl_sv_free2@plt>
   2f920:	b	2f81c <my_regexec@@Base+0xc328>
   2f924:	ldr	x0, [sp, #136]
   2f928:	cbz	x0, 2f700 <my_regexec@@Base+0xc20c>
   2f92c:	str	x0, [sp, #128]
   2f930:	str	xzr, [sp, #136]
   2f934:	b	2f700 <my_regexec@@Base+0xc20c>
   2f938:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f93c:	add	x3, x3, #0xc10
   2f940:	add	x3, x3, #0x4b0
   2f944:	mov	w2, #0x5541                	// #21825
   2f948:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f94c:	add	x1, x1, #0xfb8
   2f950:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f954:	add	x0, x0, #0xe40
   2f958:	bl	58e0 <__assert_fail@plt>
   2f95c:	and	w1, w0, #0xff
   2f960:	sub	w1, w1, #0x9
   2f964:	cmp	w1, #0x1
   2f968:	b.hi	2f780 <my_regexec@@Base+0xc28c>  // b.pmore
   2f96c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f970:	add	x3, x3, #0xc10
   2f974:	add	x3, x3, #0x4b0
   2f978:	mov	w2, #0x5541                	// #21825
   2f97c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f980:	add	x1, x1, #0xfb8
   2f984:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f988:	add	x0, x0, #0xe70
   2f98c:	bl	58e0 <__assert_fail@plt>
   2f990:	ldr	x0, [x23]
   2f994:	ldrb	w0, [x0, #129]
   2f998:	tbnz	w0, #6, 2f78c <my_regexec@@Base+0xc298>
   2f99c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f9a0:	add	x3, x3, #0xc10
   2f9a4:	add	x3, x3, #0x4b0
   2f9a8:	mov	w2, #0x5541                	// #21825
   2f9ac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f9b0:	add	x1, x1, #0xfb8
   2f9b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f9b8:	add	x0, x0, #0xe88
   2f9bc:	bl	58e0 <__assert_fail@plt>
   2f9c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f9c4:	add	x3, x3, #0xc10
   2f9c8:	add	x3, x3, #0x4b0
   2f9cc:	mov	w2, #0x5542                	// #21826
   2f9d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2f9d4:	add	x1, x1, #0xfb8
   2f9d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2f9dc:	add	x0, x0, #0xe40
   2f9e0:	bl	58e0 <__assert_fail@plt>
   2f9e4:	and	w1, w0, #0xff
   2f9e8:	sub	w1, w1, #0x9
   2f9ec:	cmp	w1, #0x1
   2f9f0:	b.hi	2f7bc <my_regexec@@Base+0xc2c8>  // b.pmore
   2f9f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2f9f8:	add	x3, x3, #0xc10
   2f9fc:	add	x3, x3, #0x4b0
   2fa00:	mov	w2, #0x5542                	// #21826
   2fa04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fa08:	add	x1, x1, #0xfb8
   2fa0c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2fa10:	add	x0, x0, #0xe70
   2fa14:	bl	58e0 <__assert_fail@plt>
   2fa18:	ldr	x0, [x19]
   2fa1c:	ldrb	w0, [x0, #129]
   2fa20:	tbnz	w0, #6, 2f7c8 <my_regexec@@Base+0xc2d4>
   2fa24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fa28:	add	x3, x3, #0xc10
   2fa2c:	add	x3, x3, #0x4b0
   2fa30:	mov	w2, #0x5542                	// #21826
   2fa34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fa38:	add	x1, x1, #0xfb8
   2fa3c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2fa40:	add	x0, x0, #0xe88
   2fa44:	bl	58e0 <__assert_fail@plt>
   2fa48:	cbz	x19, 2f81c <my_regexec@@Base+0xc328>
   2fa4c:	b	2f7dc <my_regexec@@Base+0xc2e8>
   2fa50:	mov	x1, x19
   2fa54:	mov	x0, x20
   2fa58:	bl	5860 <Perl_sv_free2@plt>
   2fa5c:	b	2f804 <my_regexec@@Base+0xc310>
   2fa60:	mov	x1, x23
   2fa64:	mov	x0, x20
   2fa68:	bl	5860 <Perl_sv_free2@plt>
   2fa6c:	b	2f81c <my_regexec@@Base+0xc328>
   2fa70:	mov	x0, x20
   2fa74:	bl	5860 <Perl_sv_free2@plt>
   2fa78:	b	2f834 <my_regexec@@Base+0xc340>
   2fa7c:	mov	x0, x20
   2fa80:	bl	5860 <Perl_sv_free2@plt>
   2fa84:	b	2f850 <my_regexec@@Base+0xc35c>
   2fa88:	mov	x0, x20
   2fa8c:	bl	5860 <Perl_sv_free2@plt>
   2fa90:	b	2f86c <my_regexec@@Base+0xc378>
   2fa94:	mov	x1, x22
   2fa98:	mov	x0, x20
   2fa9c:	bl	5860 <Perl_sv_free2@plt>
   2faa0:	b	2f884 <my_regexec@@Base+0xc390>
   2faa4:	mov	x0, x20
   2faa8:	bl	5860 <Perl_sv_free2@plt>
   2faac:	b	2f8a0 <my_regexec@@Base+0xc3ac>
   2fab0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fab4:	add	x3, x3, #0xc10
   2fab8:	add	x3, x3, #0x4b0
   2fabc:	mov	w2, #0x5554                	// #21844
   2fac0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fac4:	add	x1, x1, #0xfb8
   2fac8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2facc:	add	x0, x0, #0xe40
   2fad0:	bl	58e0 <__assert_fail@plt>
   2fad4:	and	w1, w0, #0xff
   2fad8:	sub	w1, w1, #0x9
   2fadc:	cmp	w1, #0x1
   2fae0:	b.hi	2f8c4 <my_regexec@@Base+0xc3d0>  // b.pmore
   2fae4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fae8:	add	x3, x3, #0xc10
   2faec:	add	x3, x3, #0x4b0
   2faf0:	mov	w2, #0x5554                	// #21844
   2faf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2faf8:	add	x1, x1, #0xfb8
   2fafc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2fb00:	add	x0, x0, #0xe70
   2fb04:	bl	58e0 <__assert_fail@plt>
   2fb08:	ldr	x0, [x21]
   2fb0c:	ldrb	w0, [x0, #129]
   2fb10:	tbnz	w0, #6, 2f8d0 <my_regexec@@Base+0xc3dc>
   2fb14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fb18:	add	x3, x3, #0xc10
   2fb1c:	add	x3, x3, #0x4b0
   2fb20:	mov	w2, #0x5554                	// #21844
   2fb24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fb28:	add	x1, x1, #0xfb8
   2fb2c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2fb30:	add	x0, x0, #0xe88
   2fb34:	bl	58e0 <__assert_fail@plt>
   2fb38:	ldrb	w6, [sp, #100]
   2fb3c:	mov	x5, x19
   2fb40:	ldr	x4, [sp, #136]
   2fb44:	ldr	x3, [sp, #128]
   2fb48:	mov	x2, x22
   2fb4c:	ldr	x1, [sp, #120]
   2fb50:	mov	x0, x20
   2fb54:	bl	2e06c <my_regexec@@Base+0xab78>
   2fb58:	mov	x19, x0
   2fb5c:	cbz	x19, 2f81c <my_regexec@@Base+0xc328>
   2fb60:	mov	w3, #0x2                   	// #2
   2fb64:	mov	x2, x19
   2fb68:	mov	x1, x21
   2fb6c:	mov	x0, x20
   2fb70:	bl	5690 <Perl_sv_catsv_flags@plt>
   2fb74:	ldr	w2, [x19, #8]
   2fb78:	cmp	w2, #0x1
   2fb7c:	b.ls	2f914 <my_regexec@@Base+0xc420>  // b.plast
   2fb80:	sub	w2, w2, #0x1
   2fb84:	str	w2, [x19, #8]
   2fb88:	b	2f81c <my_regexec@@Base+0xc328>
   2fb8c:	mov	w3, #0x2                   	// #2
   2fb90:	mov	x2, x0
   2fb94:	mov	x1, x21
   2fb98:	mov	x0, x20
   2fb9c:	bl	5690 <Perl_sv_catsv_flags@plt>
   2fba0:	b	2f808 <my_regexec@@Base+0xc314>
   2fba4:	mov	w3, #0x2                   	// #2
   2fba8:	mov	x2, x23
   2fbac:	mov	x1, x21
   2fbb0:	mov	x0, x20
   2fbb4:	bl	5690 <Perl_sv_catsv_flags@plt>
   2fbb8:	b	2f7f0 <my_regexec@@Base+0xc2fc>
   2fbbc:	bl	5300 <__stack_chk_fail@plt>
   2fbc0:	stp	x29, x30, [sp, #-112]!
   2fbc4:	mov	x29, sp
   2fbc8:	stp	x19, x20, [sp, #16]
   2fbcc:	stp	x21, x22, [sp, #32]
   2fbd0:	stp	x23, x24, [sp, #48]
   2fbd4:	str	x25, [sp, #64]
   2fbd8:	mov	x20, x1
   2fbdc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2fbe0:	ldr	x1, [x1, #3920]
   2fbe4:	ldr	x2, [x1]
   2fbe8:	str	x2, [sp, #104]
   2fbec:	mov	x2, #0x0                   	// #0
   2fbf0:	ldr	w0, [x0]
   2fbf4:	ubfx	x0, x0, #7, #3
   2fbf8:	cmp	w0, #0x1
   2fbfc:	b.eq	2fdc8 <my_regexec@@Base+0xc8d4>  // b.none
   2fc00:	mov	w19, #0x80                  	// #128
   2fc04:	cmp	w0, #0x2
   2fc08:	b.eq	2fcb4 <my_regexec@@Base+0xc7c0>  // b.none
   2fc0c:	lsr	w24, w19, #1
   2fc10:	cbz	x20, 2fdd0 <my_regexec@@Base+0xc8dc>
   2fc14:	ldr	x0, [x20, #48]
   2fc18:	cbz	x0, 2fdf4 <my_regexec@@Base+0xc900>
   2fc1c:	ldrb	w1, [x0, #12]
   2fc20:	cmp	w1, #0x4
   2fc24:	b.ne	2fe18 <my_regexec@@Base+0xc924>  // b.any
   2fc28:	ldr	x0, [x0]
   2fc2c:	str	xzr, [x0, #40]
   2fc30:	mov	w25, #0x0                   	// #0
   2fc34:	add	x22, sp, #0x60
   2fc38:	add	x21, sp, #0x58
   2fc3c:	mov	w23, w19
   2fc40:	sub	w19, w19, #0x1
   2fc44:	mov	x2, x22
   2fc48:	mov	x1, x21
   2fc4c:	ldr	x0, [x20, #48]
   2fc50:	bl	2da40 <my_regexec@@Base+0xa54c>
   2fc54:	ands	w0, w0, #0xff
   2fc58:	b.eq	2fe84 <my_regexec@@Base+0xc990>  // b.none
   2fc5c:	ldr	x1, [sp, #88]
   2fc60:	cmp	x23, x1
   2fc64:	b.ls	2fe88 <my_regexec@@Base+0xc994>  // b.plast
   2fc68:	ldr	x0, [sp, #96]
   2fc6c:	cmp	x19, x0
   2fc70:	csel	x0, x19, x0, ls  // ls = plast
   2fc74:	str	x0, [sp, #96]
   2fc78:	add	w0, w25, w0
   2fc7c:	sub	w0, w0, w1
   2fc80:	add	w25, w0, #0x1
   2fc84:	cmp	w25, w24
   2fc88:	b.cc	2fc44 <my_regexec@@Base+0xc750>  // b.lo, b.ul, b.last
   2fc8c:	ldr	x0, [x20, #48]
   2fc90:	cbz	x0, 2fe3c <my_regexec@@Base+0xc948>
   2fc94:	ldrb	w1, [x0, #12]
   2fc98:	cmp	w1, #0x4
   2fc9c:	b.ne	2fe60 <my_regexec@@Base+0xc96c>  // b.any
   2fca0:	ldr	x0, [x0]
   2fca4:	mov	x1, #0xffffffffffffffff    	// #-1
   2fca8:	str	x1, [x0, #40]
   2fcac:	mov	w0, #0x0                   	// #0
   2fcb0:	b	2fe88 <my_regexec@@Base+0xc994>
   2fcb4:	ldr	x1, [x20, #48]
   2fcb8:	cbz	x1, 2fd38 <my_regexec@@Base+0xc844>
   2fcbc:	ldr	w0, [x1, #12]
   2fcc0:	and	w2, w0, #0xff
   2fcc4:	cmp	w2, #0x4
   2fcc8:	b.ne	2fd5c <my_regexec@@Base+0xc868>  // b.any
   2fccc:	and	w0, w0, #0xf
   2fcd0:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   2fcd4:	ldr	x2, [x2, #3888]
   2fcd8:	ldrb	w0, [x2, w0, uxtw]
   2fcdc:	cbz	w0, 2fd80 <my_regexec@@Base+0xc88c>
   2fce0:	ldr	x2, [x1]
   2fce4:	ldr	x0, [x2, #16]
   2fce8:	cbz	x0, 2feb8 <my_regexec@@Base+0xc9c4>
   2fcec:	ldrb	w2, [x2, #48]
   2fcf0:	lsr	x0, x0, #3
   2fcf4:	subs	x0, x0, x2
   2fcf8:	b.eq	2fec4 <my_regexec@@Base+0xc9d0>  // b.none
   2fcfc:	ldr	x1, [x1, #16]
   2fd00:	ldrb	w3, [x1]
   2fd04:	cbnz	w3, 2fda4 <my_regexec@@Base+0xc8b0>
   2fd08:	tbnz	w0, #0, 2fecc <my_regexec@@Base+0xc9d8>
   2fd0c:	lsl	x0, x0, #3
   2fd10:	add	x0, x0, x2, lsl #3
   2fd14:	add	x0, x1, x0
   2fd18:	ldur	x0, [x0, #-8]
   2fd1c:	sub	x0, x0, #0x1
   2fd20:	cmp	x0, #0xff
   2fd24:	mov	w19, #0x1a28                	// #6696
   2fd28:	movk	w19, #0x2, lsl #16
   2fd2c:	mov	w0, #0x80                  	// #128
   2fd30:	csel	w19, w19, w0, hi  // hi = pmore
   2fd34:	b	2febc <my_regexec@@Base+0xc9c8>
   2fd38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fd3c:	add	x3, x3, #0xc10
   2fd40:	add	x3, x3, #0x18
   2fd44:	mov	w2, #0x2f                  	// #47
   2fd48:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2fd4c:	add	x1, x1, #0x550
   2fd50:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2fd54:	add	x0, x0, #0x568
   2fd58:	bl	58e0 <__assert_fail@plt>
   2fd5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fd60:	add	x3, x3, #0xc10
   2fd64:	add	x3, x3, #0x18
   2fd68:	mov	w2, #0x31                  	// #49
   2fd6c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2fd70:	add	x1, x1, #0x550
   2fd74:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2fd78:	add	x0, x0, #0xfc8
   2fd7c:	bl	58e0 <__assert_fail@plt>
   2fd80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fd84:	add	x3, x3, #0xc10
   2fd88:	add	x3, x3, #0x18
   2fd8c:	mov	w2, #0x33                  	// #51
   2fd90:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2fd94:	add	x1, x1, #0x550
   2fd98:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   2fd9c:	add	x0, x0, #0xe40
   2fda0:	bl	58e0 <__assert_fail@plt>
   2fda4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fda8:	add	x3, x3, #0xc10
   2fdac:	add	x3, x3, #0x380
   2fdb0:	mov	w2, #0x55                  	// #85
   2fdb4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   2fdb8:	add	x1, x1, #0x550
   2fdbc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   2fdc0:	add	x0, x0, #0x590
   2fdc4:	bl	58e0 <__assert_fail@plt>
   2fdc8:	mov	w19, #0x100                 	// #256
   2fdcc:	b	2fc0c <my_regexec@@Base+0xc718>
   2fdd0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fdd4:	add	x3, x3, #0xc10
   2fdd8:	add	x3, x3, #0x4d0
   2fddc:	mov	w2, #0x81e                 	// #2078
   2fde0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fde4:	add	x1, x1, #0xfb8
   2fde8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   2fdec:	add	x0, x0, #0xb8
   2fdf0:	bl	58e0 <__assert_fail@plt>
   2fdf4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fdf8:	add	x3, x3, #0xc10
   2fdfc:	add	x3, x3, #0x3d8
   2fe00:	mov	w2, #0x283d                	// #10301
   2fe04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fe08:	add	x1, x1, #0xfb8
   2fe0c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2fe10:	add	x0, x0, #0x568
   2fe14:	bl	58e0 <__assert_fail@plt>
   2fe18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fe1c:	add	x3, x3, #0xc10
   2fe20:	add	x3, x3, #0x390
   2fe24:	mov	w2, #0x2835                	// #10293
   2fe28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fe2c:	add	x1, x1, #0xfb8
   2fe30:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2fe34:	add	x0, x0, #0xfc8
   2fe38:	bl	58e0 <__assert_fail@plt>
   2fe3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fe40:	add	x3, x3, #0xc10
   2fe44:	add	x3, x3, #0x3f0
   2fe48:	mov	w2, #0x284d                	// #10317
   2fe4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fe50:	add	x1, x1, #0xfb8
   2fe54:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2fe58:	add	x0, x0, #0x568
   2fe5c:	bl	58e0 <__assert_fail@plt>
   2fe60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2fe64:	add	x3, x3, #0xc10
   2fe68:	add	x3, x3, #0x390
   2fe6c:	mov	w2, #0x2835                	// #10293
   2fe70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2fe74:	add	x1, x1, #0xfb8
   2fe78:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   2fe7c:	add	x0, x0, #0xfc8
   2fe80:	bl	58e0 <__assert_fail@plt>
   2fe84:	mov	w0, #0x1                   	// #1
   2fe88:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2fe8c:	ldr	x1, [x1, #3920]
   2fe90:	ldr	x2, [sp, #104]
   2fe94:	ldr	x1, [x1]
   2fe98:	eor	x1, x2, x1
   2fe9c:	cbnz	x1, 2fed8 <my_regexec@@Base+0xc9e4>
   2fea0:	ldp	x19, x20, [sp, #16]
   2fea4:	ldp	x21, x22, [sp, #32]
   2fea8:	ldp	x23, x24, [sp, #48]
   2feac:	ldr	x25, [sp, #64]
   2feb0:	ldp	x29, x30, [sp], #112
   2feb4:	ret
   2feb8:	mov	w19, #0x80                  	// #128
   2febc:	lsr	w24, w19, #1
   2fec0:	b	2fc14 <my_regexec@@Base+0xc720>
   2fec4:	mov	w19, #0x80                  	// #128
   2fec8:	b	2febc <my_regexec@@Base+0xc9c8>
   2fecc:	mov	w19, #0x1a28                	// #6696
   2fed0:	movk	w19, #0x2, lsl #16
   2fed4:	b	2febc <my_regexec@@Base+0xc9c8>
   2fed8:	bl	5300 <__stack_chk_fail@plt>

000000000002fedc <Perl_re_printf@@Base>:
   2fedc:	stp	x29, x30, [sp, #-288]!
   2fee0:	mov	x29, sp
   2fee4:	str	x19, [sp, #16]
   2fee8:	mov	x19, x1
   2feec:	str	x2, [sp, #240]
   2fef0:	str	x3, [sp, #248]
   2fef4:	str	x4, [sp, #256]
   2fef8:	str	x5, [sp, #264]
   2fefc:	str	x6, [sp, #272]
   2ff00:	str	x7, [sp, #280]
   2ff04:	str	q0, [sp, #112]
   2ff08:	str	q1, [sp, #128]
   2ff0c:	str	q2, [sp, #144]
   2ff10:	str	q3, [sp, #160]
   2ff14:	str	q4, [sp, #176]
   2ff18:	str	q5, [sp, #192]
   2ff1c:	str	q6, [sp, #208]
   2ff20:	str	q7, [sp, #224]
   2ff24:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2ff28:	ldr	x1, [x1, #3920]
   2ff2c:	ldr	x2, [x1]
   2ff30:	str	x2, [sp, #104]
   2ff34:	mov	x2, #0x0                   	// #0
   2ff38:	bl	58f0 <Perl_PerlIO_stderr@plt>
   2ff3c:	cbz	x19, 2ffa4 <Perl_re_printf@@Base+0xc8>
   2ff40:	add	x1, sp, #0x120
   2ff44:	str	x1, [sp, #72]
   2ff48:	str	x1, [sp, #80]
   2ff4c:	add	x1, sp, #0xf0
   2ff50:	str	x1, [sp, #88]
   2ff54:	mov	w1, #0xffffffd0            	// #-48
   2ff58:	str	w1, [sp, #96]
   2ff5c:	mov	w1, #0xffffff80            	// #-128
   2ff60:	str	w1, [sp, #100]
   2ff64:	ldp	x2, x3, [sp, #72]
   2ff68:	stp	x2, x3, [sp, #32]
   2ff6c:	ldp	x2, x3, [sp, #88]
   2ff70:	stp	x2, x3, [sp, #48]
   2ff74:	add	x2, sp, #0x20
   2ff78:	mov	x1, x19
   2ff7c:	bl	5480 <PerlIO_vprintf@plt>
   2ff80:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   2ff84:	ldr	x1, [x1, #3920]
   2ff88:	ldr	x2, [sp, #104]
   2ff8c:	ldr	x1, [x1]
   2ff90:	eor	x1, x2, x1
   2ff94:	cbnz	x1, 2ffc8 <Perl_re_printf@@Base+0xec>
   2ff98:	ldr	x19, [sp, #16]
   2ff9c:	ldp	x29, x30, [sp], #288
   2ffa0:	ret
   2ffa4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   2ffa8:	add	x3, x3, #0xc10
   2ffac:	add	x3, x3, #0x4e8
   2ffb0:	mov	w2, #0x404                 	// #1028
   2ffb4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   2ffb8:	add	x1, x1, #0xfb8
   2ffbc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   2ffc0:	add	x0, x0, #0x5d0
   2ffc4:	bl	58e0 <__assert_fail@plt>
   2ffc8:	bl	5300 <__stack_chk_fail@plt>
   2ffcc:	stp	x29, x30, [sp, #-128]!
   2ffd0:	mov	x29, sp
   2ffd4:	stp	x19, x20, [sp, #16]
   2ffd8:	stp	x21, x22, [sp, #32]
   2ffdc:	stp	x23, x24, [sp, #48]
   2ffe0:	stp	x25, x26, [sp, #64]
   2ffe4:	stp	x27, x28, [sp, #80]
   2ffe8:	mov	x23, x0
   2ffec:	mov	x19, x1
   2fff0:	and	w1, w2, #0xff
   2fff4:	str	w1, [sp, #100]
   2fff8:	mov	x24, x3
   2fffc:	mov	w20, w4
   30000:	mov	w27, w1
   30004:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   30008:	add	x0, x0, #0xc10
   3000c:	add	x0, x0, #0x1e8
   30010:	ldrb	w0, [x0, w1, sxtw]
   30014:	str	w0, [sp, #104]
   30018:	add	w25, w0, #0x1
   3001c:	str	xzr, [sp, #120]
   30020:	ldr	x0, [x23, #224]
   30024:	cbz	x0, 3008c <Perl_re_printf@@Base+0x1b0>
   30028:	mov	w2, #0x1                   	// #1
   3002c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   30030:	add	x1, x1, #0x608
   30034:	mov	x0, x23
   30038:	bl	54f0 <Perl_get_sv@plt>
   3003c:	mov	x21, x0
   30040:	cbz	x0, 3008c <Perl_re_printf@@Base+0x1b0>
   30044:	ldr	w0, [x0, #12]
   30048:	tbz	w0, #8, 30214 <Perl_re_printf@@Base+0x338>
   3004c:	ldr	w1, [x21, #12]
   30050:	and	w0, w1, #0x3fff00
   30054:	and	w0, w0, #0xffe001ff
   30058:	cmp	w0, #0x100
   3005c:	b.ne	30280 <Perl_re_printf@@Base+0x3a4>  // b.any
   30060:	and	w2, w1, #0xf
   30064:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   30068:	ldr	x0, [x0, #3712]
   3006c:	ldrb	w0, [x0, w2, uxtw]
   30070:	cbz	w0, 30228 <Perl_re_printf@@Base+0x34c>
   30074:	and	w0, w1, #0xc000
   30078:	cmp	w0, #0x8, lsl #12
   3007c:	b.eq	3024c <Perl_re_printf@@Base+0x370>  // b.none
   30080:	ldr	x0, [x21]
   30084:	ldr	x0, [x0, #32]
   30088:	str	x0, [sp, #120]
   3008c:	cbz	x19, 30294 <Perl_re_printf@@Base+0x3b8>
   30090:	ldr	w0, [x23, #2368]
   30094:	tbnz	w0, #20, 300a0 <Perl_re_printf@@Base+0x1c4>
   30098:	ldr	x0, [sp, #120]
   3009c:	tbz	w0, #0, 30170 <Perl_re_printf@@Base+0x294>
   300a0:	ldr	w0, [x23, #2368]
   300a4:	tbnz	w0, #20, 300b0 <Perl_re_printf@@Base+0x1d4>
   300a8:	ldr	x0, [sp, #120]
   300ac:	tbz	w0, #0, 30150 <Perl_re_printf@@Base+0x274>
   300b0:	ldr	x2, [x19, #64]
   300b4:	ldr	x0, [x19, #336]
   300b8:	cmp	x0, x2
   300bc:	b.eq	302b8 <Perl_re_printf@@Base+0x3dc>  // b.none
   300c0:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   300c4:	add	x5, x5, #0x20
   300c8:	ldr	x3, [x19, #56]
   300cc:	mov	w7, #0x820e                	// #33294
   300d0:	mov	x6, x5
   300d4:	mov	x4, #0x10                  	// #16
   300d8:	sub	x3, x3, x2
   300dc:	ldr	x1, [x19, #368]
   300e0:	mov	x0, x23
   300e4:	bl	53f0 <Perl_pv_pretty@plt>
   300e8:	mov	x2, x0
   300ec:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   300f0:	add	x1, x1, #0xb50
   300f4:	mov	x0, x23
   300f8:	bl	50e0 <Perl_re_printf@plt>
   300fc:	ldr	x2, [x19, #104]
   30100:	ldrsw	x0, [x19, #344]
   30104:	cmp	x0, x2
   30108:	b.eq	302d4 <Perl_re_printf@@Base+0x3f8>  // b.none
   3010c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   30110:	add	x1, x1, #0x800
   30114:	mov	x0, x23
   30118:	bl	50e0 <Perl_re_printf@plt>
   3011c:	adrp	x4, 77000 <boot_re@@Base+0x1541c>
   30120:	add	x4, x4, #0x810
   30124:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30128:	add	x3, x3, #0x20
   3012c:	lsl	w2, w20, #1
   30130:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   30134:	add	x1, x1, #0x818
   30138:	mov	x0, x23
   3013c:	bl	50e0 <Perl_re_printf@plt>
   30140:	ldr	x0, [x19, #104]
   30144:	str	w0, [x19, #344]
   30148:	ldr	x0, [x19, #64]
   3014c:	str	x0, [x19, #336]
   30150:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   30154:	ldr	x0, [x0, #3776]
   30158:	ldr	w1, [sp, #100]
   3015c:	ldr	x2, [x0, w1, sxtw #3]
   30160:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   30164:	add	x1, x1, #0x828
   30168:	mov	x0, x23
   3016c:	bl	50e0 <Perl_re_printf@plt>
   30170:	ldrb	w0, [x19, #386]
   30174:	cbnz	w0, 302f0 <Perl_re_printf@@Base+0x414>
   30178:	sxtw	x22, w25
   3017c:	mov	x2, x22
   30180:	mov	x1, x19
   30184:	mov	x0, x23
   30188:	bl	29e08 <my_regexec@@Base+0x6914>
   3018c:	ldr	x0, [x19, #96]
   30190:	ldr	x20, [x19, #104]
   30194:	add	x21, x0, x20, lsl #2
   30198:	add	x20, x22, x20
   3019c:	str	x20, [x19, #104]
   301a0:	add	x20, x0, x20, lsl #2
   301a4:	ldr	w0, [x19, #148]
   301a8:	tbnz	w0, #31, 30314 <Perl_re_printf@@Base+0x438>
   301ac:	ldr	x0, [x19, #160]
   301b0:	cbz	x0, 30314 <Perl_re_printf@@Base+0x438>
   301b4:	ldr	w1, [x19, #144]
   301b8:	mov	w0, #0x0                   	// #0
   301bc:	cmp	w1, #0x0
   301c0:	b.le	30314 <Perl_re_printf@@Base+0x438>
   301c4:	sxtw	x3, w0
   301c8:	ldr	x2, [x19, #168]
   301cc:	ldr	x1, [x2, x3, lsl #3]
   301d0:	cmp	x1, x24
   301d4:	b.lt	301e0 <Perl_re_printf@@Base+0x304>  // b.tstop
   301d8:	add	x1, x22, x1
   301dc:	str	x1, [x2, x3, lsl #3]
   301e0:	add	w0, w0, #0x1
   301e4:	ldr	w1, [x19, #144]
   301e8:	cmp	w1, w0
   301ec:	b.le	30314 <Perl_re_printf@@Base+0x438>
   301f0:	cbz	w0, 301c4 <Perl_re_printf@@Base+0x2e8>
   301f4:	sxtw	x3, w0
   301f8:	ldr	x2, [x19, #160]
   301fc:	ldr	x1, [x2, x3, lsl #3]
   30200:	cmp	x1, x24
   30204:	b.lt	301c4 <Perl_re_printf@@Base+0x2e8>  // b.tstop
   30208:	add	x1, x22, x1
   3020c:	str	x1, [x2, x3, lsl #3]
   30210:	b	301c4 <Perl_re_printf@@Base+0x2e8>
   30214:	mov	x2, #0xff08                	// #65288
   30218:	mov	x1, x21
   3021c:	mov	x0, x23
   30220:	bl	5310 <Perl_sv_setuv@plt>
   30224:	b	3004c <Perl_re_printf@@Base+0x170>
   30228:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3022c:	add	x3, x3, #0xc10
   30230:	add	x3, x3, #0x4f8
   30234:	mov	w2, #0x4ce2                	// #19682
   30238:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3023c:	add	x1, x1, #0xfb8
   30240:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30244:	add	x0, x0, #0xda0
   30248:	bl	58e0 <__assert_fail@plt>
   3024c:	and	w0, w1, #0xff
   30250:	sub	w0, w0, #0x9
   30254:	cmp	w0, #0x1
   30258:	b.hi	30080 <Perl_re_printf@@Base+0x1a4>  // b.pmore
   3025c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30260:	add	x3, x3, #0xc10
   30264:	add	x3, x3, #0x4f8
   30268:	mov	w2, #0x4ce2                	// #19682
   3026c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30270:	add	x1, x1, #0xfb8
   30274:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30278:	add	x0, x0, #0xdd0
   3027c:	bl	58e0 <__assert_fail@plt>
   30280:	mov	w2, #0x2                   	// #2
   30284:	mov	x1, x21
   30288:	mov	x0, x23
   3028c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   30290:	b	30088 <Perl_re_printf@@Base+0x1ac>
   30294:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30298:	add	x3, x3, #0xc10
   3029c:	add	x3, x3, #0x4f8
   302a0:	mov	w2, #0x4ce4                	// #19684
   302a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   302a8:	add	x1, x1, #0xfb8
   302ac:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   302b0:	add	x0, x0, #0xfe8
   302b4:	bl	58e0 <__assert_fail@plt>
   302b8:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   302bc:	add	x2, x2, #0x20
   302c0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   302c4:	add	x1, x1, #0x7f8
   302c8:	mov	x0, x23
   302cc:	bl	50e0 <Perl_re_printf@plt>
   302d0:	b	300fc <Perl_re_printf@@Base+0x220>
   302d4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   302d8:	add	x2, x2, #0x20
   302dc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   302e0:	add	x1, x1, #0x808
   302e4:	mov	x0, x23
   302e8:	bl	50e0 <Perl_re_printf@plt>
   302ec:	b	3011c <Perl_re_printf@@Base+0x240>
   302f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   302f4:	add	x3, x3, #0xc10
   302f8:	add	x3, x3, #0x4f8
   302fc:	mov	w2, #0x4ce9                	// #19689
   30300:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30304:	add	x1, x1, #0xfb8
   30308:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3030c:	add	x0, x0, #0x830
   30310:	bl	58e0 <__assert_fail@plt>
   30314:	ldr	x0, [x19, #184]
   30318:	cbz	x0, 30324 <Perl_re_printf@@Base+0x448>
   3031c:	add	x25, x0, w25, sxtw #2
   30320:	str	x25, [x19, #184]
   30324:	lsl	x24, x24, #2
   30328:	ldr	x22, [x19, #96]
   3032c:	add	x22, x22, x24
   30330:	cmp	x22, x21
   30334:	b.cs	304e4 <Perl_re_printf@@Base+0x608>  // b.hs, b.nlast
   30338:	adrp	x26, 77000 <boot_re@@Base+0x1541c>
   3033c:	add	x26, x26, #0x8
   30340:	mov	w28, #0x4d1e                	// #19742
   30344:	adrp	x25, 76000 <boot_re@@Base+0x1441c>
   30348:	add	x25, x25, #0xf30
   3034c:	b	303d4 <Perl_re_printf@@Base+0x4f8>
   30350:	ubfx	x2, x2, #2, #32
   30354:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   30358:	add	x1, x1, #0xf58
   3035c:	mov	x0, x23
   30360:	bl	5420 <Perl_croak@plt>
   30364:	ldr	x2, [x19, #96]
   30368:	ldr	x1, [x19, #40]
   3036c:	sub	x0, x21, x2
   30370:	asr	x0, x0, #2
   30374:	ldr	x1, [x1, #8]
   30378:	lsl	x0, x0, #3
   3037c:	sub	x2, x20, x2
   30380:	ldr	w3, [x1, x0]
   30384:	ubfx	x2, x2, #2, #32
   30388:	mov	w1, w28
   3038c:	mov	x0, x26
   30390:	bl	5010 <Perl_warn_nocontext@plt>
   30394:	ldr	x0, [x19, #96]
   30398:	subs	x2, x20, x0
   3039c:	b.mi	304d0 <Perl_re_printf@@Base+0x5f4>  // b.first
   303a0:	ldr	x1, [x19, #40]
   303a4:	ldr	x1, [x1, #8]
   303a8:	sub	x0, x21, x0
   303ac:	asr	x0, x0, #2
   303b0:	lsl	x0, x0, #3
   303b4:	ldr	w0, [x1, x0]
   303b8:	asr	x2, x2, #2
   303bc:	lsl	x2, x2, #3
   303c0:	str	w0, [x1, x2]
   303c4:	ldr	x22, [x19, #96]
   303c8:	add	x22, x22, x24
   303cc:	cmp	x22, x21
   303d0:	b.cs	304e4 <Perl_re_printf@@Base+0x608>  // b.hs, b.nlast
   303d4:	ldr	w0, [x21, #-4]!
   303d8:	str	w0, [x20, #-4]!
   303dc:	ldr	x0, [x19, #40]
   303e0:	ldr	x0, [x0, #8]
   303e4:	cbz	x0, 303c4 <Perl_re_printf@@Base+0x4e8>
   303e8:	ldr	w1, [x23, #2368]
   303ec:	tbnz	w1, #20, 303f8 <Perl_re_printf@@Base+0x51c>
   303f0:	ldr	x1, [sp, #120]
   303f4:	tbz	w1, #18, 3044c <Perl_re_printf@@Base+0x570>
   303f8:	ldr	x5, [x19, #96]
   303fc:	sub	x6, x20, x5
   30400:	asr	x6, x6, #2
   30404:	ldr	w7, [x0]
   30408:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3040c:	add	x0, x0, #0xec0
   30410:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   30414:	add	x4, x4, #0xea0
   30418:	cmp	x6, x7
   3041c:	sub	x5, x21, x5
   30420:	asr	x5, x5, #2
   30424:	csel	x4, x4, x0, hi  // hi = pmore
   30428:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3042c:	ldr	x0, [x0, #3776]
   30430:	ldr	x3, [x0, w27, sxtw #3]
   30434:	mov	w2, #0x4d16                	// #19734
   30438:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3043c:	add	x1, x1, #0x848
   30440:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30444:	add	x0, x0, #0x858
   30448:	bl	5010 <Perl_warn_nocontext@plt>
   3044c:	ldr	w0, [x23, #2368]
   30450:	tbnz	w0, #20, 3045c <Perl_re_printf@@Base+0x580>
   30454:	ldr	x0, [sp, #120]
   30458:	tbz	w0, #18, 3048c <Perl_re_printf@@Base+0x5b0>
   3045c:	ldr	x2, [x19, #96]
   30460:	ldr	x1, [x19, #40]
   30464:	sub	x0, x21, x2
   30468:	asr	x0, x0, #2
   3046c:	ldr	x1, [x1, #8]
   30470:	add	x0, x1, x0, lsl #3
   30474:	sub	x2, x20, x2
   30478:	ldur	w3, [x0, #-4]
   3047c:	ubfx	x2, x2, #2, #32
   30480:	mov	w1, #0x4d1d                	// #19741
   30484:	mov	x0, x25
   30488:	bl	5010 <Perl_warn_nocontext@plt>
   3048c:	ldr	x0, [x19, #96]
   30490:	subs	x2, x20, x0
   30494:	b.mi	30350 <Perl_re_printf@@Base+0x474>  // b.first
   30498:	ldr	x1, [x19, #40]
   3049c:	ldr	x1, [x1, #8]
   304a0:	sub	x0, x21, x0
   304a4:	asr	x0, x0, #2
   304a8:	add	x0, x1, x0, lsl #3
   304ac:	ldur	w0, [x0, #-4]
   304b0:	asr	x2, x2, #2
   304b4:	add	x2, x1, x2, lsl #3
   304b8:	stur	w0, [x2, #-4]
   304bc:	ldr	w0, [x23, #2368]
   304c0:	tbnz	w0, #20, 30364 <Perl_re_printf@@Base+0x488>
   304c4:	ldr	x0, [sp, #120]
   304c8:	tbz	w0, #18, 30394 <Perl_re_printf@@Base+0x4b8>
   304cc:	b	30364 <Perl_re_printf@@Base+0x488>
   304d0:	ubfx	x2, x2, #2, #32
   304d4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   304d8:	add	x1, x1, #0x888
   304dc:	mov	x0, x23
   304e0:	bl	5420 <Perl_croak@plt>
   304e4:	ldr	x0, [x19, #40]
   304e8:	ldr	x0, [x0, #8]
   304ec:	cbz	x0, 3060c <Perl_re_printf@@Base+0x730>
   304f0:	ldr	w1, [x23, #2368]
   304f4:	tbnz	w1, #20, 30500 <Perl_re_printf@@Base+0x624>
   304f8:	ldr	x1, [sp, #120]
   304fc:	tbz	w1, #18, 30554 <Perl_re_printf@@Base+0x678>
   30500:	asr	x5, x24, #2
   30504:	ldr	w7, [x0]
   30508:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3050c:	add	x0, x0, #0xec0
   30510:	adrp	x4, 76000 <boot_re@@Base+0x1441c>
   30514:	add	x4, x4, #0xea0
   30518:	cmp	x5, x7
   3051c:	ldr	x6, [x19, #64]
   30520:	ldr	x1, [x19, #48]
   30524:	sub	x6, x6, x1
   30528:	csel	x4, x4, x0, hi  // hi = pmore
   3052c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   30530:	ldr	x0, [x0, #3776]
   30534:	ldr	w1, [sp, #100]
   30538:	ldr	x3, [x0, w1, sxtw #3]
   3053c:	mov	w2, #0x4d29                	// #19753
   30540:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   30544:	add	x1, x1, #0x848
   30548:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3054c:	add	x0, x0, #0x8b0
   30550:	bl	5010 <Perl_warn_nocontext@plt>
   30554:	ldr	w0, [x23, #2368]
   30558:	tbnz	w0, #20, 30564 <Perl_re_printf@@Base+0x688>
   3055c:	ldr	x0, [sp, #120]
   30560:	tbz	w0, #18, 3058c <Perl_re_printf@@Base+0x6b0>
   30564:	ldr	x3, [x19, #64]
   30568:	ldr	x0, [x19, #48]
   3056c:	ldr	x2, [x19, #96]
   30570:	sub	x2, x22, x2
   30574:	sub	w3, w3, w0
   30578:	ubfx	x2, x2, #2, #32
   3057c:	mov	w1, #0x4d30                	// #19760
   30580:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   30584:	add	x0, x0, #0xf30
   30588:	bl	5010 <Perl_warn_nocontext@plt>
   3058c:	ldr	x0, [x19, #96]
   30590:	subs	x0, x22, x0
   30594:	b.mi	3065c <Perl_re_printf@@Base+0x780>  // b.first
   30598:	ldr	x1, [x19, #40]
   3059c:	asr	x0, x0, #2
   305a0:	ldr	x1, [x1, #8]
   305a4:	add	x0, x1, x0, lsl #3
   305a8:	ldr	x1, [x19, #64]
   305ac:	ldr	x2, [x19, #48]
   305b0:	sub	x1, x1, x2
   305b4:	stur	w1, [x0, #-4]
   305b8:	ldr	w0, [x23, #2368]
   305bc:	tbnz	w0, #20, 305c8 <Perl_re_printf@@Base+0x6ec>
   305c0:	ldr	x0, [sp, #120]
   305c4:	tbz	w0, #18, 305e8 <Perl_re_printf@@Base+0x70c>
   305c8:	ldr	x2, [x19, #96]
   305cc:	sub	x2, x22, x2
   305d0:	mov	w3, #0x1                   	// #1
   305d4:	ubfx	x2, x2, #2, #32
   305d8:	mov	w1, #0x4d31                	// #19761
   305dc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   305e0:	add	x0, x0, #0x8
   305e4:	bl	5010 <Perl_warn_nocontext@plt>
   305e8:	ldr	x0, [x19, #96]
   305ec:	subs	x0, x22, x0
   305f0:	b.mi	30670 <Perl_re_printf@@Base+0x794>  // b.first
   305f4:	ldr	x1, [x19, #40]
   305f8:	asr	x0, x0, #2
   305fc:	ldr	x1, [x1, #8]
   30600:	lsl	x0, x0, #3
   30604:	mov	w2, #0x1                   	// #1
   30608:	str	w2, [x1, x0]
   3060c:	mov	x0, x22
   30610:	strb	wzr, [x0], #4
   30614:	ldr	x1, [x19, #96]
   30618:	add	x1, x1, x24
   3061c:	ldrb	w2, [sp, #100]
   30620:	strb	w2, [x1, #1]
   30624:	ldr	x1, [x19, #96]
   30628:	add	x24, x1, x24
   3062c:	strh	wzr, [x24, #2]
   30630:	ldr	x1, [sp, #104]
   30634:	ubfiz	x2, x1, #2, #8
   30638:	mov	w1, #0x0                   	// #0
   3063c:	bl	51f0 <memset@plt>
   30640:	ldp	x19, x20, [sp, #16]
   30644:	ldp	x21, x22, [sp, #32]
   30648:	ldp	x23, x24, [sp, #48]
   3064c:	ldp	x25, x26, [sp, #64]
   30650:	ldp	x27, x28, [sp, #80]
   30654:	ldp	x29, x30, [sp], #128
   30658:	ret
   3065c:	ubfx	x2, x0, #2, #32
   30660:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   30664:	add	x1, x1, #0xf58
   30668:	mov	x0, x23
   3066c:	bl	5420 <Perl_croak@plt>
   30670:	ubfx	x2, x0, #2, #32
   30674:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   30678:	add	x1, x1, #0x888
   3067c:	mov	x0, x23
   30680:	bl	5420 <Perl_croak@plt>
   30684:	stp	x29, x30, [sp, #-96]!
   30688:	mov	x29, sp
   3068c:	stp	x19, x20, [sp, #16]
   30690:	stp	x21, x22, [sp, #32]
   30694:	stp	x23, x24, [sp, #48]
   30698:	mov	x23, x0
   3069c:	mov	x22, x1
   306a0:	mov	x24, x2
   306a4:	mov	x20, x3
   306a8:	mov	w21, w4
   306ac:	ldr	x19, [x2]
   306b0:	str	xzr, [sp, #88]
   306b4:	ldr	x0, [x0, #224]
   306b8:	cbz	x0, 30728 <Perl_re_printf@@Base+0x84c>
   306bc:	str	x25, [sp, #64]
   306c0:	mov	w2, #0x1                   	// #1
   306c4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   306c8:	add	x1, x1, #0x608
   306cc:	mov	x0, x23
   306d0:	bl	54f0 <Perl_get_sv@plt>
   306d4:	mov	x25, x0
   306d8:	cbz	x0, 308b8 <Perl_re_printf@@Base+0x9dc>
   306dc:	ldr	w0, [x0, #12]
   306e0:	tbz	w0, #8, 30838 <Perl_re_printf@@Base+0x95c>
   306e4:	ldr	w1, [x25, #12]
   306e8:	and	w0, w1, #0x3fff00
   306ec:	and	w0, w0, #0xffe001ff
   306f0:	cmp	w0, #0x100
   306f4:	b.ne	308a4 <Perl_re_printf@@Base+0x9c8>  // b.any
   306f8:	and	w2, w1, #0xf
   306fc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   30700:	ldr	x0, [x0, #3712]
   30704:	ldrb	w0, [x0, w2, uxtw]
   30708:	cbz	w0, 3084c <Perl_re_printf@@Base+0x970>
   3070c:	and	w0, w1, #0xc000
   30710:	cmp	w0, #0x8, lsl #12
   30714:	b.eq	30870 <Perl_re_printf@@Base+0x994>  // b.none
   30718:	ldr	x0, [x25]
   3071c:	ldr	x0, [x0, #32]
   30720:	str	x0, [sp, #88]
   30724:	ldr	x25, [sp, #64]
   30728:	ldr	w0, [x23, #2368]
   3072c:	tbnz	w0, #20, 30738 <Perl_re_printf@@Base+0x85c>
   30730:	ldr	x0, [sp, #88]
   30734:	tbz	w0, #0, 30748 <Perl_re_printf@@Base+0x86c>
   30738:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3073c:	add	x1, x1, #0x8e0
   30740:	mov	x0, x23
   30744:	bl	50e0 <Perl_re_printf@plt>
   30748:	ldr	x5, [x20]
   3074c:	add	x4, x19, x5
   30750:	cbz	x19, 308c0 <Perl_re_printf@@Base+0x9e4>
   30754:	cbz	x4, 308e8 <Perl_re_printf@@Base+0xa0c>
   30758:	and	x0, x19, #0x7
   3075c:	orr	x1, x19, x19, lsr #1
   30760:	ubfx	x2, x19, #2, #1
   30764:	orr	x1, x1, x2
   30768:	and	x1, x1, #0x1
   3076c:	add	x1, x1, #0x1
   30770:	lsl	x1, x1, #3
   30774:	sub	x1, x1, x0
   30778:	cmp	x5, x1
   3077c:	b.cc	30918 <Perl_re_printf@@Base+0xa3c>  // b.lo, b.ul, b.last
   30780:	cbz	x0, 30910 <Perl_re_printf@@Base+0xa34>
   30784:	mov	x1, x19
   30788:	mov	x0, #0x0                   	// #0
   3078c:	ldrsb	x2, [x1], #1
   30790:	add	x0, x0, x2, lsr #63
   30794:	tst	x1, #0x7
   30798:	b.ne	3078c <Perl_re_printf@@Base+0x8b0>  // b.any
   3079c:	add	x3, x1, #0x8
   307a0:	mov	x6, #0x101010101010101     	// #72340172838076673
   307a4:	ldur	x2, [x3, #-8]
   307a8:	lsr	x2, x2, #7
   307ac:	and	x2, x2, #0x101010101010101
   307b0:	mul	x2, x2, x6
   307b4:	add	x0, x0, x2, lsr #56
   307b8:	add	x3, x3, #0x8
   307bc:	cmp	x4, x3
   307c0:	b.cs	307a4 <Perl_re_printf@@Base+0x8c8>  // b.hs, b.nlast
   307c4:	sub	x2, x4, #0x8
   307c8:	sub	x2, x2, x1
   307cc:	and	x2, x2, #0xfffffffffffffff8
   307d0:	add	x2, x2, #0x8
   307d4:	add	x6, x1, #0x9
   307d8:	add	x3, x4, #0x1
   307dc:	cmp	x6, x3
   307e0:	mov	x3, #0x8                   	// #8
   307e4:	csel	x2, x2, x3, ls  // ls = plast
   307e8:	add	x1, x1, x2
   307ec:	cmp	x4, x1
   307f0:	b.ls	30804 <Perl_re_printf@@Base+0x928>  // b.plast
   307f4:	ldrsb	x2, [x1], #1
   307f8:	add	x0, x0, x2, lsr #63
   307fc:	cmp	x4, x1
   30800:	b.ne	307f4 <Perl_re_printf@@Base+0x918>  // b.any
   30804:	add	x5, x5, #0x1
   30808:	add	x0, x5, x0
   3080c:	bl	5250 <Perl_safesysmalloc@plt>
   30810:	mov	x1, x0
   30814:	ldr	x0, [x20]
   30818:	cbz	x0, 30a64 <Perl_re_printf@@Base+0xb88>
   3081c:	mov	x6, x1
   30820:	mov	w8, #0x0                   	// #0
   30824:	mov	x3, #0x0                   	// #0
   30828:	mov	w7, #0x0                   	// #0
   3082c:	mov	w9, #0x0                   	// #0
   30830:	mov	w0, #0x1                   	// #1
   30834:	b	309c0 <Perl_re_printf@@Base+0xae4>
   30838:	mov	x2, #0xff08                	// #65288
   3083c:	mov	x1, x25
   30840:	mov	x0, x23
   30844:	bl	5310 <Perl_sv_setuv@plt>
   30848:	b	306e4 <Perl_re_printf@@Base+0x808>
   3084c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30850:	add	x3, x3, #0xc10
   30854:	add	x3, x3, #0x508
   30858:	mov	w2, #0x19cd                	// #6605
   3085c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30860:	add	x1, x1, #0xfb8
   30864:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30868:	add	x0, x0, #0xda0
   3086c:	bl	58e0 <__assert_fail@plt>
   30870:	and	w0, w1, #0xff
   30874:	sub	w0, w0, #0x9
   30878:	cmp	w0, #0x1
   3087c:	b.hi	30718 <Perl_re_printf@@Base+0x83c>  // b.pmore
   30880:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30884:	add	x3, x3, #0xc10
   30888:	add	x3, x3, #0x508
   3088c:	mov	w2, #0x19cd                	// #6605
   30890:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30894:	add	x1, x1, #0xfb8
   30898:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3089c:	add	x0, x0, #0xdd0
   308a0:	bl	58e0 <__assert_fail@plt>
   308a4:	mov	w2, #0x2                   	// #2
   308a8:	mov	x1, x25
   308ac:	mov	x0, x23
   308b0:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   308b4:	b	30720 <Perl_re_printf@@Base+0x844>
   308b8:	ldr	x25, [sp, #64]
   308bc:	b	30728 <Perl_re_printf@@Base+0x84c>
   308c0:	str	x25, [sp, #64]
   308c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   308c8:	add	x3, x3, #0xc10
   308cc:	add	x3, x3, #0x520
   308d0:	mov	w2, #0x289                 	// #649
   308d4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   308d8:	add	x1, x1, #0xc80
   308dc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   308e0:	add	x0, x0, #0xce8
   308e4:	bl	58e0 <__assert_fail@plt>
   308e8:	str	x25, [sp, #64]
   308ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   308f0:	add	x3, x3, #0xc10
   308f4:	add	x3, x3, #0x520
   308f8:	mov	w2, #0x289                 	// #649
   308fc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   30900:	add	x1, x1, #0xc80
   30904:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   30908:	add	x0, x0, #0x240
   3090c:	bl	58e0 <__assert_fail@plt>
   30910:	mov	x1, x19
   30914:	b	3079c <Perl_re_printf@@Base+0x8c0>
   30918:	mov	x1, x19
   3091c:	mov	x0, #0x0                   	// #0
   30920:	b	307ec <Perl_re_printf@@Base+0x910>
   30924:	asr	w5, w5, #6
   30928:	orr	w5, w5, #0xffffffc0
   3092c:	mov	x4, x6
   30930:	strb	w5, [x4], #2
   30934:	and	w2, w2, #0x3f
   30938:	orr	w2, w2, #0xffffff80
   3093c:	strb	w2, [x6, #1]
   30940:	mov	x6, x4
   30944:	b	309d0 <Perl_re_printf@@Base+0xaf4>
   30948:	str	x25, [sp, #64]
   3094c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30950:	add	x3, x3, #0xc10
   30954:	add	x3, x3, #0x508
   30958:	mov	w2, #0x19da                	// #6618
   3095c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30960:	add	x1, x1, #0xfb8
   30964:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30968:	add	x0, x0, #0x920
   3096c:	bl	58e0 <__assert_fail@plt>
   30970:	str	x25, [sp, #64]
   30974:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30978:	add	x3, x3, #0xc10
   3097c:	add	x3, x3, #0x508
   30980:	mov	w2, #0x19dd                	// #6621
   30984:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30988:	add	x1, x1, #0xfb8
   3098c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30990:	add	x0, x0, #0x940
   30994:	bl	58e0 <__assert_fail@plt>
   30998:	sbfiz	x5, x7, #5, #32
   3099c:	ldr	x4, [x2, #8]
   309a0:	add	x2, x4, x5
   309a4:	ldr	x4, [x2, #8]
   309a8:	cmp	x4, x3
   309ac:	b.eq	30a18 <Perl_re_printf@@Base+0xb3c>  // b.none
   309b0:	add	x3, x3, #0x1
   309b4:	ldr	x2, [x20]
   309b8:	cmp	x2, x3
   309bc:	b.ls	30a68 <Perl_re_printf@@Base+0xb8c>  // b.plast
   309c0:	ldrb	w5, [x19, x3]
   309c4:	sxtb	w2, w5
   309c8:	tbnz	w5, #7, 30924 <Perl_re_printf@@Base+0xa48>
   309cc:	strb	w5, [x6], #1
   309d0:	cmp	w7, w21
   309d4:	b.ge	309b0 <Perl_re_printf@@Base+0xad4>  // b.tcont
   309d8:	ldr	x2, [x22, #264]
   309dc:	cbz	x2, 30948 <Perl_re_printf@@Base+0xa6c>
   309e0:	cbnz	w8, 30998 <Perl_re_printf@@Base+0xabc>
   309e4:	sbfiz	x4, x7, #5, #32
   309e8:	ldr	x2, [x2, #8]
   309ec:	ldr	x5, [x2, x4]
   309f0:	cmp	x5, x3
   309f4:	b.ne	309b0 <Perl_re_printf@@Base+0xad4>  // b.any
   309f8:	sub	x5, x6, x1
   309fc:	sub	x5, x5, #0x1
   30a00:	str	x5, [x2, x4]
   30a04:	ldurb	w2, [x6, #-1]
   30a08:	cmp	w2, #0x28
   30a0c:	b.ne	30970 <Perl_re_printf@@Base+0xa94>  // b.any
   30a10:	mov	w8, w0
   30a14:	b	309b0 <Perl_re_printf@@Base+0xad4>
   30a18:	sub	x4, x6, x1
   30a1c:	sub	x4, x4, #0x1
   30a20:	str	x4, [x2, #8]
   30a24:	ldurb	w2, [x6, #-1]
   30a28:	cmp	w2, #0x29
   30a2c:	b.ne	30a3c <Perl_re_printf@@Base+0xb60>  // b.any
   30a30:	add	w7, w7, #0x1
   30a34:	mov	w8, w9
   30a38:	b	309b0 <Perl_re_printf@@Base+0xad4>
   30a3c:	str	x25, [sp, #64]
   30a40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30a44:	add	x3, x3, #0xc10
   30a48:	add	x3, x3, #0x508
   30a4c:	mov	w2, #0x19e2                	// #6626
   30a50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30a54:	add	x1, x1, #0xfb8
   30a58:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30a5c:	add	x0, x0, #0x950
   30a60:	bl	58e0 <__assert_fail@plt>
   30a64:	mov	x6, x1
   30a68:	strb	wzr, [x6]
   30a6c:	sub	x6, x6, x1
   30a70:	str	x6, [x20]
   30a74:	str	x1, [x24]
   30a78:	mov	w2, #0xa                   	// #10
   30a7c:	mov	x0, x23
   30a80:	bl	54b0 <Perl_save_pushptr@plt>
   30a84:	mov	w0, #0x1                   	// #1
   30a88:	str	w0, [x22, #192]
   30a8c:	str	w0, [x22, #196]
   30a90:	ldp	x19, x20, [sp, #16]
   30a94:	ldp	x21, x22, [sp, #32]
   30a98:	ldp	x23, x24, [sp, #48]
   30a9c:	ldp	x29, x30, [sp], #96
   30aa0:	ret
   30aa4:	stp	x29, x30, [sp, #-192]!
   30aa8:	mov	x29, sp
   30aac:	stp	x19, x20, [sp, #16]
   30ab0:	stp	x21, x22, [sp, #32]
   30ab4:	stp	x27, x28, [sp, #80]
   30ab8:	mov	x21, x0
   30abc:	str	x1, [sp, #120]
   30ac0:	mov	x27, x3
   30ac4:	mov	w19, w4
   30ac8:	mov	x28, x5
   30acc:	str	x6, [sp, #144]
   30ad0:	str	x7, [sp, #128]
   30ad4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   30ad8:	ldr	x0, [x0, #3920]
   30adc:	ldr	x1, [x0]
   30ae0:	str	x1, [sp, #184]
   30ae4:	mov	x1, #0x0                   	// #0
   30ae8:	cmp	x2, #0x0
   30aec:	cset	w0, eq  // eq = none
   30af0:	cmp	w4, #0x1
   30af4:	csel	w0, w0, wzr, ne  // ne = any
   30af8:	str	w0, [sp, #156]
   30afc:	cbnz	w0, 30b28 <Perl_re_printf@@Base+0xc4c>
   30b00:	mov	x22, x2
   30b04:	add	x0, x3, w4, sxtw #3
   30b08:	str	x0, [sp, #136]
   30b0c:	cmp	x3, x0
   30b10:	b.cs	31ec4 <Perl_re_printf@@Base+0x1fe8>  // b.hs, b.nlast
   30b14:	stp	x23, x24, [sp, #48]
   30b18:	stp	x25, x26, [sp, #64]
   30b1c:	str	wzr, [sp, #104]
   30b20:	str	wzr, [sp, #108]
   30b24:	b	31a64 <Perl_re_printf@@Base+0x1b88>
   30b28:	mov	x2, #0x0                   	// #0
   30b2c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   30b30:	add	x1, x1, #0x20
   30b34:	mov	x0, x21
   30b38:	bl	59a0 <Perl_newSVpvn@plt>
   30b3c:	mov	x22, x0
   30b40:	mov	w2, #0xb                   	// #11
   30b44:	mov	x1, x0
   30b48:	mov	x0, x21
   30b4c:	bl	54b0 <Perl_save_pushptr@plt>
   30b50:	add	x0, x27, w19, sxtw #3
   30b54:	str	x0, [sp, #136]
   30b58:	cmp	x0, x27
   30b5c:	b.hi	30b14 <Perl_re_printf@@Base+0xc38>  // b.pmore
   30b60:	b	31e0c <Perl_re_printf@@Base+0x1f30>
   30b64:	tbnz	w0, #23, 30c10 <Perl_re_printf@@Base+0xd34>
   30b68:	ldr	x0, [x19]
   30b6c:	ldr	x24, [x0, #16]
   30b70:	add	x24, x24, #0x1
   30b74:	cbz	x28, 30b98 <Perl_re_printf@@Base+0xcbc>
   30b78:	ldrh	w0, [x28, #32]
   30b7c:	and	w0, w0, #0x1ff
   30b80:	cmp	w0, #0x87
   30b84:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   30b88:	b.ne	30c28 <Perl_re_printf@@Base+0xd4c>  // b.any
   30b8c:	ldrb	w0, [x28, #33]
   30b90:	tbz	w0, #6, 30c4c <Perl_re_printf@@Base+0xd70>
   30b94:	ldr	x28, [x28, #8]
   30b98:	ldr	w0, [x19, #12]
   30b9c:	tbnz	w0, #23, 30c54 <Perl_re_printf@@Base+0xd78>
   30ba0:	ldr	x23, [x19, #16]
   30ba4:	mov	w4, #0x3                   	// #3
   30ba8:	mov	w3, #0x2                   	// #2
   30bac:	mov	x2, #0x1                   	// #1
   30bb0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   30bb4:	add	x1, x1, #0xab0
   30bb8:	mov	x0, x21
   30bbc:	bl	5490 <Perl_gv_fetchpvn_flags@plt>
   30bc0:	ldr	w1, [x0, #12]
   30bc4:	and	w2, w1, #0xff
   30bc8:	sub	w2, w2, #0x9
   30bcc:	cmp	w2, #0x1
   30bd0:	b.hi	30cc8 <Perl_re_printf@@Base+0xdec>  // b.pmore
   30bd4:	and	w1, w1, #0xc000
   30bd8:	cmp	w1, #0x8, lsl #12
   30bdc:	b.ne	30cec <Perl_re_printf@@Base+0xe10>  // b.any
   30be0:	ldr	x0, [x0, #16]
   30be4:	ldr	x7, [x0]
   30be8:	ldr	x6, [sp, #144]
   30bec:	mov	x5, #0x0                   	// #0
   30bf0:	mov	w4, w24
   30bf4:	mov	x3, x23
   30bf8:	mov	x2, x22
   30bfc:	ldr	x1, [sp, #120]
   30c00:	mov	x0, x21
   30c04:	bl	30aa4 <Perl_re_printf@@Base+0xbc8>
   30c08:	mov	x22, x0
   30c0c:	b	31a54 <Perl_re_printf@@Base+0x1b78>
   30c10:	mov	x1, x19
   30c14:	mov	x0, x21
   30c18:	bl	53e0 <Perl_mg_size@plt>
   30c1c:	sxtw	x24, w0
   30c20:	add	x24, x24, #0x1
   30c24:	b	30b74 <Perl_re_printf@@Base+0xc98>
   30c28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30c2c:	add	x3, x3, #0xc10
   30c30:	add	x3, x3, #0x540
   30c34:	mov	w2, #0x1a2e                	// #6702
   30c38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30c3c:	add	x1, x1, #0xfb8
   30c40:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30c44:	add	x0, x0, #0x960
   30c48:	bl	58e0 <__assert_fail@plt>
   30c4c:	mov	x28, #0x0                   	// #0
   30c50:	b	30b98 <Perl_re_printf@@Base+0xcbc>
   30c54:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   30c58:	cmp	x24, x0
   30c5c:	b.hi	30c90 <Perl_re_printf@@Base+0xdb4>  // b.pmore
   30c60:	lsl	x0, x24, #3
   30c64:	bl	5250 <Perl_safesysmalloc@plt>
   30c68:	mov	x23, x0
   30c6c:	mov	w2, #0xa                   	// #10
   30c70:	mov	x1, x0
   30c74:	mov	x0, x21
   30c78:	bl	54b0 <Perl_save_pushptr@plt>
   30c7c:	cmp	x24, #0x0
   30c80:	b.le	30ba4 <Perl_re_printf@@Base+0xcc8>
   30c84:	mov	x20, #0x0                   	// #0
   30c88:	add	x25, x21, #0x150
   30c8c:	b	30ca4 <Perl_re_printf@@Base+0xdc8>
   30c90:	bl	26bcc <my_regexec@@Base+0x36d8>
   30c94:	str	x1, [x23, x20, lsl #3]
   30c98:	add	x20, x20, #0x1
   30c9c:	cmp	x24, x20
   30ca0:	b.eq	30ba4 <Perl_re_printf@@Base+0xcc8>  // b.none
   30ca4:	mov	w3, #0x0                   	// #0
   30ca8:	mov	x2, x20
   30cac:	mov	x1, x19
   30cb0:	mov	x0, x21
   30cb4:	bl	56f0 <Perl_av_fetch@plt>
   30cb8:	mov	x1, x25
   30cbc:	cbz	x0, 30c94 <Perl_re_printf@@Base+0xdb8>
   30cc0:	ldr	x1, [x0]
   30cc4:	b	30c94 <Perl_re_printf@@Base+0xdb8>
   30cc8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30ccc:	add	x3, x3, #0xc10
   30cd0:	add	x3, x3, #0x540
   30cd4:	mov	w2, #0x1a43                	// #6723
   30cd8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30cdc:	add	x1, x1, #0xfb8
   30ce0:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   30ce4:	add	x0, x0, #0xa48
   30ce8:	bl	58e0 <__assert_fail@plt>
   30cec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30cf0:	add	x3, x3, #0xc10
   30cf4:	add	x3, x3, #0x540
   30cf8:	mov	w2, #0x1a43                	// #6723
   30cfc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30d00:	add	x1, x1, #0xfb8
   30d04:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   30d08:	add	x0, x0, #0xa80
   30d0c:	bl	58e0 <__assert_fail@plt>
   30d10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30d14:	add	x3, x3, #0xc10
   30d18:	add	x3, x3, #0x540
   30d1c:	mov	w2, #0x1a59                	// #6745
   30d20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30d24:	add	x1, x1, #0xfb8
   30d28:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30d2c:	add	x0, x0, #0x9a0
   30d30:	bl	58e0 <__assert_fail@plt>
   30d34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30d38:	add	x3, x3, #0xc10
   30d3c:	add	x3, x3, #0x540
   30d40:	mov	w2, #0x1a5a                	// #6746
   30d44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30d48:	add	x1, x1, #0xfb8
   30d4c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30d50:	add	x0, x0, #0xe40
   30d54:	bl	58e0 <__assert_fail@plt>
   30d58:	and	w1, w0, #0xff
   30d5c:	sub	w1, w1, #0x9
   30d60:	cmp	w1, #0x1
   30d64:	b.hi	31af8 <Perl_re_printf@@Base+0x1c1c>  // b.pmore
   30d68:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30d6c:	add	x3, x3, #0xc10
   30d70:	add	x3, x3, #0x540
   30d74:	mov	w2, #0x1a5a                	// #6746
   30d78:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30d7c:	add	x1, x1, #0xfb8
   30d80:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30d84:	add	x0, x0, #0xe70
   30d88:	bl	58e0 <__assert_fail@plt>
   30d8c:	ldr	x0, [x22]
   30d90:	ldrb	w0, [x0, #129]
   30d94:	tbnz	w0, #6, 31b04 <Perl_re_printf@@Base+0x1c28>
   30d98:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30d9c:	add	x3, x3, #0xc10
   30da0:	add	x3, x3, #0x540
   30da4:	mov	w2, #0x1a5a                	// #6746
   30da8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30dac:	add	x1, x1, #0xfb8
   30db0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   30db4:	add	x0, x0, #0xe88
   30db8:	bl	58e0 <__assert_fail@plt>
   30dbc:	mov	x3, #0x0                   	// #0
   30dc0:	b	31b0c <Perl_re_printf@@Base+0x1c30>
   30dc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30dc8:	add	x3, x3, #0xc10
   30dcc:	add	x3, x3, #0x540
   30dd0:	mov	w2, #0x1a60                	// #6752
   30dd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30dd8:	add	x1, x1, #0xfb8
   30ddc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   30de0:	add	x0, x0, #0x9c8
   30de4:	bl	58e0 <__assert_fail@plt>
   30de8:	str	wzr, [sp, #152]
   30dec:	ldrb	w0, [x28, #33]
   30df0:	tbz	w0, #6, 30e88 <Perl_re_printf@@Base+0xfac>
   30df4:	ldr	x28, [x28, #8]
   30df8:	ldr	w0, [x19, #12]
   30dfc:	tbnz	w0, #21, 30e90 <Perl_re_printf@@Base+0xfb4>
   30e00:	ldr	w0, [x19, #12]
   30e04:	tbz	w0, #11, 31ee4 <Perl_re_printf@@Base+0x2008>
   30e08:	and	w2, w0, #0xf
   30e0c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   30e10:	ldr	x1, [x1, #3840]
   30e14:	ldrb	w1, [x1, w2, uxtw]
   30e18:	cbz	w1, 30ea0 <Perl_re_printf@@Base+0xfc4>
   30e1c:	and	w4, w0, #0xc000
   30e20:	cmp	w4, #0x8, lsl #12
   30e24:	b.eq	30ec4 <Perl_re_printf@@Base+0xfe8>  // b.none
   30e28:	and	w2, w0, #0xff
   30e2c:	cmp	w2, #0xf
   30e30:	b.eq	30ef8 <Perl_re_printf@@Base+0x101c>  // b.none
   30e34:	ldr	x3, [x19, #16]
   30e38:	ldr	w1, [x3, #12]
   30e3c:	tbz	w1, #20, 30e6c <Perl_re_printf@@Base+0xf90>
   30e40:	cmp	w4, #0x8, lsl #12
   30e44:	b.eq	30f28 <Perl_re_printf@@Base+0x104c>  // b.none
   30e48:	cmp	w2, #0xf
   30e4c:	b.eq	30f58 <Perl_re_printf@@Base+0x107c>  // b.none
   30e50:	and	w1, w1, #0xff
   30e54:	cmp	w1, #0x6
   30e58:	b.ls	30f88 <Perl_re_printf@@Base+0x10ac>  // b.plast
   30e5c:	ldr	x1, [x3]
   30e60:	ldr	x1, [x1]
   30e64:	ldr	w1, [x1, #12]
   30e68:	tbnz	w1, #28, 30fac <Perl_re_printf@@Base+0x10d0>
   30e6c:	cbz	x22, 310ac <Perl_re_printf@@Base+0x11d0>
   30e70:	ldr	w0, [x22, #12]
   30e74:	tbnz	w0, #11, 310d8 <Perl_re_printf@@Base+0x11fc>
   30e78:	ldr	w0, [x19, #12]
   30e7c:	b	31efc <Perl_re_printf@@Base+0x2020>
   30e80:	str	wzr, [sp, #152]
   30e84:	b	30df8 <Perl_re_printf@@Base+0xf1c>
   30e88:	mov	x28, #0x0                   	// #0
   30e8c:	b	30df8 <Perl_re_printf@@Base+0xf1c>
   30e90:	mov	x1, x19
   30e94:	mov	x0, x21
   30e98:	bl	55e0 <Perl_mg_get@plt>
   30e9c:	b	30e00 <Perl_re_printf@@Base+0xf24>
   30ea0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30ea4:	add	x3, x3, #0xc10
   30ea8:	add	x3, x3, #0x540
   30eac:	mov	w2, #0x1a68                	// #6760
   30eb0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30eb4:	add	x1, x1, #0xfb8
   30eb8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30ebc:	add	x0, x0, #0x160
   30ec0:	bl	58e0 <__assert_fail@plt>
   30ec4:	and	w1, w0, #0xff
   30ec8:	sub	w1, w1, #0x9
   30ecc:	cmp	w1, #0x1
   30ed0:	b.hi	30e28 <Perl_re_printf@@Base+0xf4c>  // b.pmore
   30ed4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30ed8:	add	x3, x3, #0xc10
   30edc:	add	x3, x3, #0x540
   30ee0:	mov	w2, #0x1a68                	// #6760
   30ee4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30ee8:	add	x1, x1, #0xfb8
   30eec:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30ef0:	add	x0, x0, #0x190
   30ef4:	bl	58e0 <__assert_fail@plt>
   30ef8:	ldr	x1, [x19]
   30efc:	ldrb	w1, [x1, #129]
   30f00:	tbnz	w1, #6, 30e34 <Perl_re_printf@@Base+0xf58>
   30f04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30f08:	add	x3, x3, #0xc10
   30f0c:	add	x3, x3, #0x540
   30f10:	mov	w2, #0x1a68                	// #6760
   30f14:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30f18:	add	x1, x1, #0xfb8
   30f1c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30f20:	add	x0, x0, #0x1a8
   30f24:	bl	58e0 <__assert_fail@plt>
   30f28:	sub	w4, w2, #0x9
   30f2c:	cmp	w4, #0x1
   30f30:	b.hi	30e48 <Perl_re_printf@@Base+0xf6c>  // b.pmore
   30f34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30f38:	add	x3, x3, #0xc10
   30f3c:	add	x3, x3, #0x540
   30f40:	mov	w2, #0x1a68                	// #6760
   30f44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30f48:	add	x1, x1, #0xfb8
   30f4c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30f50:	add	x0, x0, #0x190
   30f54:	bl	58e0 <__assert_fail@plt>
   30f58:	ldr	x2, [x19]
   30f5c:	ldrb	w2, [x2, #129]
   30f60:	tbnz	w2, #6, 30e50 <Perl_re_printf@@Base+0xf74>
   30f64:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30f68:	add	x3, x3, #0xc10
   30f6c:	add	x3, x3, #0x540
   30f70:	mov	w2, #0x1a68                	// #6760
   30f74:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30f78:	add	x1, x1, #0xfb8
   30f7c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30f80:	add	x0, x0, #0x1a8
   30f84:	bl	58e0 <__assert_fail@plt>
   30f88:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   30f8c:	add	x3, x3, #0xc10
   30f90:	add	x3, x3, #0x540
   30f94:	mov	w2, #0x1a68                	// #6760
   30f98:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   30f9c:	add	x1, x1, #0xfb8
   30fa0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   30fa4:	add	x0, x0, #0x1f0
   30fa8:	bl	58e0 <__assert_fail@plt>
   30fac:	mov	w4, #0x9                   	// #9
   30fb0:	mov	w3, #0x4a                  	// #74
   30fb4:	add	x2, x21, #0x150
   30fb8:	mov	x1, x19
   30fbc:	mov	x0, x21
   30fc0:	bl	5370 <Perl_amagic_call@plt>
   30fc4:	cbz	x0, 3109c <Perl_re_printf@@Base+0x11c0>
   30fc8:	ldr	w1, [x0, #12]
   30fcc:	tbz	w1, #11, 3108c <Perl_re_printf@@Base+0x11b0>
   30fd0:	and	w3, w1, #0xf
   30fd4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   30fd8:	ldr	x2, [x2, #3840]
   30fdc:	ldrb	w2, [x2, w3, uxtw]
   30fe0:	cbz	w2, 31004 <Perl_re_printf@@Base+0x1128>
   30fe4:	and	w2, w1, #0xc000
   30fe8:	cmp	w2, #0x8, lsl #12
   30fec:	b.eq	31028 <Perl_re_printf@@Base+0x114c>  // b.none
   30ff0:	and	w1, w1, #0xff
   30ff4:	cmp	w1, #0xf
   30ff8:	b.eq	3105c <Perl_re_printf@@Base+0x1180>  // b.none
   30ffc:	ldr	x19, [x0, #16]
   31000:	b	31090 <Perl_re_printf@@Base+0x11b4>
   31004:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31008:	add	x3, x3, #0xc10
   3100c:	add	x3, x3, #0x540
   31010:	mov	w2, #0x1a6c                	// #6764
   31014:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31018:	add	x1, x1, #0xfb8
   3101c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31020:	add	x0, x0, #0x160
   31024:	bl	58e0 <__assert_fail@plt>
   31028:	and	w2, w1, #0xff
   3102c:	sub	w2, w2, #0x9
   31030:	cmp	w2, #0x1
   31034:	b.hi	30ff0 <Perl_re_printf@@Base+0x1114>  // b.pmore
   31038:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3103c:	add	x3, x3, #0xc10
   31040:	add	x3, x3, #0x540
   31044:	mov	w2, #0x1a6c                	// #6764
   31048:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3104c:	add	x1, x1, #0xfb8
   31050:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31054:	add	x0, x0, #0x190
   31058:	bl	58e0 <__assert_fail@plt>
   3105c:	ldr	x1, [x0]
   31060:	ldrb	w1, [x1, #129]
   31064:	tbnz	w1, #6, 30ffc <Perl_re_printf@@Base+0x1120>
   31068:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3106c:	add	x3, x3, #0xc10
   31070:	add	x3, x3, #0x540
   31074:	mov	w2, #0x1a6c                	// #6764
   31078:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3107c:	add	x1, x1, #0xfb8
   31080:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31084:	add	x0, x0, #0x1a8
   31088:	bl	58e0 <__assert_fail@plt>
   3108c:	mov	x19, x0
   31090:	ldrb	w0, [x19, #12]
   31094:	cmp	w0, #0x8
   31098:	b.ne	310c8 <Perl_re_printf@@Base+0x11ec>  // b.any
   3109c:	cbnz	x22, 31eec <Perl_re_printf@@Base+0x2010>
   310a0:	ldr	w0, [x19, #12]
   310a4:	mov	x20, x19
   310a8:	tbz	w0, #11, 31ea0 <Perl_re_printf@@Base+0x1fc4>
   310ac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   310b0:	ldr	x23, [x1, #3840]
   310b4:	add	x26, x21, #0x150
   310b8:	mov	w25, #0x9                   	// #9
   310bc:	mov	w24, #0xa                   	// #10
   310c0:	str	x23, [sp, #112]
   310c4:	b	3136c <Perl_re_printf@@Base+0x1490>
   310c8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   310cc:	add	x1, x1, #0x9d0
   310d0:	mov	x0, x21
   310d4:	bl	5420 <Perl_croak@plt>
   310d8:	and	w2, w0, #0xf
   310dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   310e0:	ldr	x1, [x1, #3840]
   310e4:	ldrb	w1, [x1, w2, uxtw]
   310e8:	cbz	w1, 31140 <Perl_re_printf@@Base+0x1264>
   310ec:	and	w3, w0, #0xc000
   310f0:	cmp	w3, #0x8, lsl #12
   310f4:	b.eq	31164 <Perl_re_printf@@Base+0x1288>  // b.none
   310f8:	and	w0, w0, #0xff
   310fc:	cmp	w0, #0xf
   31100:	b.eq	31198 <Perl_re_printf@@Base+0x12bc>  // b.none
   31104:	ldr	x2, [x22, #16]
   31108:	ldr	w1, [x2, #12]
   3110c:	tbz	w1, #20, 31ef4 <Perl_re_printf@@Base+0x2018>
   31110:	cmp	w3, #0x8, lsl #12
   31114:	b.eq	311c8 <Perl_re_printf@@Base+0x12ec>  // b.none
   31118:	cmp	w0, #0xf
   3111c:	b.eq	311f8 <Perl_re_printf@@Base+0x131c>  // b.none
   31120:	and	w1, w1, #0xff
   31124:	cmp	w1, #0x6
   31128:	b.ls	31228 <Perl_re_printf@@Base+0x134c>  // b.plast
   3112c:	ldr	x0, [x2]
   31130:	ldr	x0, [x0]
   31134:	ldr	w0, [x0, #12]
   31138:	tbnz	w0, #28, 31f60 <Perl_re_printf@@Base+0x2084>
   3113c:	b	31ef4 <Perl_re_printf@@Base+0x2018>
   31140:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31144:	add	x3, x3, #0xc10
   31148:	add	x3, x3, #0x540
   3114c:	mov	w2, #0x1a74                	// #6772
   31150:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31154:	add	x1, x1, #0xfb8
   31158:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3115c:	add	x0, x0, #0x160
   31160:	bl	58e0 <__assert_fail@plt>
   31164:	and	w1, w0, #0xff
   31168:	sub	w1, w1, #0x9
   3116c:	cmp	w1, #0x1
   31170:	b.hi	310f8 <Perl_re_printf@@Base+0x121c>  // b.pmore
   31174:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31178:	add	x3, x3, #0xc10
   3117c:	add	x3, x3, #0x540
   31180:	mov	w2, #0x1a74                	// #6772
   31184:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31188:	add	x1, x1, #0xfb8
   3118c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31190:	add	x0, x0, #0x190
   31194:	bl	58e0 <__assert_fail@plt>
   31198:	ldr	x1, [x22]
   3119c:	ldrb	w1, [x1, #129]
   311a0:	tbnz	w1, #6, 31104 <Perl_re_printf@@Base+0x1228>
   311a4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   311a8:	add	x3, x3, #0xc10
   311ac:	add	x3, x3, #0x540
   311b0:	mov	w2, #0x1a74                	// #6772
   311b4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   311b8:	add	x1, x1, #0xfb8
   311bc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   311c0:	add	x0, x0, #0x1a8
   311c4:	bl	58e0 <__assert_fail@plt>
   311c8:	sub	w3, w0, #0x9
   311cc:	cmp	w3, #0x1
   311d0:	b.hi	31118 <Perl_re_printf@@Base+0x123c>  // b.pmore
   311d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   311d8:	add	x3, x3, #0xc10
   311dc:	add	x3, x3, #0x540
   311e0:	mov	w2, #0x1a74                	// #6772
   311e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   311e8:	add	x1, x1, #0xfb8
   311ec:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   311f0:	add	x0, x0, #0x190
   311f4:	bl	58e0 <__assert_fail@plt>
   311f8:	ldr	x0, [x22]
   311fc:	ldrb	w0, [x0, #129]
   31200:	tbnz	w0, #6, 31120 <Perl_re_printf@@Base+0x1244>
   31204:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31208:	add	x3, x3, #0xc10
   3120c:	add	x3, x3, #0x540
   31210:	mov	w2, #0x1a74                	// #6772
   31214:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31218:	add	x1, x1, #0xfb8
   3121c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31220:	add	x0, x0, #0x1a8
   31224:	bl	58e0 <__assert_fail@plt>
   31228:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3122c:	add	x3, x3, #0xc10
   31230:	add	x3, x3, #0x540
   31234:	mov	w2, #0x1a74                	// #6772
   31238:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3123c:	add	x1, x1, #0xfb8
   31240:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31244:	add	x0, x0, #0x1f0
   31248:	bl	58e0 <__assert_fail@plt>
   3124c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31250:	add	x3, x3, #0xc10
   31254:	add	x3, x3, #0x540
   31258:	mov	w2, #0x1a74                	// #6772
   3125c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31260:	add	x1, x1, #0xfb8
   31264:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31268:	add	x0, x0, #0x160
   3126c:	bl	58e0 <__assert_fail@plt>
   31270:	and	w1, w0, #0xff
   31274:	sub	w1, w1, #0x9
   31278:	cmp	w1, #0x1
   3127c:	b.hi	31f1c <Perl_re_printf@@Base+0x2040>  // b.pmore
   31280:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31284:	add	x3, x3, #0xc10
   31288:	add	x3, x3, #0x540
   3128c:	mov	w2, #0x1a74                	// #6772
   31290:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31294:	add	x1, x1, #0xfb8
   31298:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3129c:	add	x0, x0, #0x190
   312a0:	bl	58e0 <__assert_fail@plt>
   312a4:	ldr	x1, [x19]
   312a8:	ldrb	w1, [x1, #129]
   312ac:	tbnz	w1, #6, 31f28 <Perl_re_printf@@Base+0x204c>
   312b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   312b4:	add	x3, x3, #0xc10
   312b8:	add	x3, x3, #0x540
   312bc:	mov	w2, #0x1a74                	// #6772
   312c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   312c4:	add	x1, x1, #0xfb8
   312c8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   312cc:	add	x0, x0, #0x1a8
   312d0:	bl	58e0 <__assert_fail@plt>
   312d4:	sub	w4, w2, #0x9
   312d8:	cmp	w4, #0x1
   312dc:	b.hi	31f3c <Perl_re_printf@@Base+0x2060>  // b.pmore
   312e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   312e4:	add	x3, x3, #0xc10
   312e8:	add	x3, x3, #0x540
   312ec:	mov	w2, #0x1a74                	// #6772
   312f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   312f4:	add	x1, x1, #0xfb8
   312f8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   312fc:	add	x0, x0, #0x190
   31300:	bl	58e0 <__assert_fail@plt>
   31304:	ldr	x2, [x19]
   31308:	ldrb	w2, [x2, #129]
   3130c:	tbnz	w2, #6, 31f44 <Perl_re_printf@@Base+0x2068>
   31310:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31314:	add	x3, x3, #0xc10
   31318:	add	x3, x3, #0x540
   3131c:	mov	w2, #0x1a74                	// #6772
   31320:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31324:	add	x1, x1, #0xfb8
   31328:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3132c:	add	x0, x0, #0x1a8
   31330:	bl	58e0 <__assert_fail@plt>
   31334:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31338:	add	x3, x3, #0xc10
   3133c:	add	x3, x3, #0x540
   31340:	mov	w2, #0x1a74                	// #6772
   31344:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31348:	add	x1, x1, #0xfb8
   3134c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31350:	add	x0, x0, #0x1f0
   31354:	bl	58e0 <__assert_fail@plt>
   31358:	ldr	w0, [x20, #12]
   3135c:	tbnz	w0, #21, 31ed4 <Perl_re_printf@@Base+0x1ff8>
   31360:	ldr	w0, [x20, #12]
   31364:	tbz	w0, #11, 31ea0 <Perl_re_printf@@Base+0x1fc4>
   31368:	mov	x19, x20
   3136c:	and	w1, w0, #0xf
   31370:	ldrb	w1, [x23, w1, uxtw]
   31374:	cbz	w1, 3146c <Perl_re_printf@@Base+0x1590>
   31378:	and	w3, w0, #0xc000
   3137c:	cmp	w3, #0x8, lsl #12
   31380:	b.eq	31490 <Perl_re_printf@@Base+0x15b4>  // b.none
   31384:	and	w0, w0, #0xff
   31388:	cmp	w0, #0xf
   3138c:	b.eq	314c4 <Perl_re_printf@@Base+0x15e8>  // b.none
   31390:	ldr	x2, [x19, #16]
   31394:	ldr	w1, [x2, #12]
   31398:	tbz	w1, #20, 31688 <Perl_re_printf@@Base+0x17ac>
   3139c:	cmp	w3, #0x8, lsl #12
   313a0:	b.eq	314f4 <Perl_re_printf@@Base+0x1618>  // b.none
   313a4:	cmp	w0, #0xf
   313a8:	b.eq	31524 <Perl_re_printf@@Base+0x1648>  // b.none
   313ac:	and	w1, w1, #0xff
   313b0:	cmp	w1, #0x6
   313b4:	b.ls	31554 <Perl_re_printf@@Base+0x1678>  // b.plast
   313b8:	ldr	x0, [x2]
   313bc:	ldr	x0, [x0]
   313c0:	ldr	w0, [x0, #12]
   313c4:	tbz	w0, #28, 31688 <Perl_re_printf@@Base+0x17ac>
   313c8:	mov	w4, w25
   313cc:	mov	w3, w24
   313d0:	mov	x2, x26
   313d4:	mov	x1, x19
   313d8:	mov	x0, x21
   313dc:	bl	5370 <Perl_amagic_call@plt>
   313e0:	mov	x20, x0
   313e4:	cmp	x0, #0x0
   313e8:	ccmp	x0, x19, #0x4, ne  // ne = any
   313ec:	b.eq	31688 <Perl_re_printf@@Base+0x17ac>  // b.none
   313f0:	ldr	w1, [x19, #12]
   313f4:	tbz	w1, #11, 31358 <Perl_re_printf@@Base+0x147c>
   313f8:	ldr	w0, [x0, #12]
   313fc:	tbz	w0, #11, 31ecc <Perl_re_printf@@Base+0x1ff0>
   31400:	and	w2, w1, #0xf
   31404:	ldr	x3, [sp, #112]
   31408:	ldrb	w2, [x3, w2, uxtw]
   3140c:	cbz	w2, 31578 <Perl_re_printf@@Base+0x169c>
   31410:	and	w2, w1, #0xc000
   31414:	cmp	w2, #0x8, lsl #12
   31418:	b.eq	3159c <Perl_re_printf@@Base+0x16c0>  // b.none
   3141c:	and	w2, w1, #0xff
   31420:	cmp	w2, #0xf
   31424:	b.eq	315d0 <Perl_re_printf@@Base+0x16f4>  // b.none
   31428:	ldr	x4, [x19, #16]
   3142c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   31430:	ldr	x2, [x2, #3840]
   31434:	and	w3, w0, #0xf
   31438:	ldrb	w2, [x2, w3, uxtw]
   3143c:	cbz	w2, 31600 <Perl_re_printf@@Base+0x1724>
   31440:	and	w2, w0, #0xc000
   31444:	cmp	w2, #0x8, lsl #12
   31448:	b.eq	31624 <Perl_re_printf@@Base+0x1748>  // b.none
   3144c:	and	w2, w0, #0xff
   31450:	cmp	w2, #0xf
   31454:	b.eq	31658 <Perl_re_printf@@Base+0x177c>  // b.none
   31458:	ldr	x2, [x20, #16]
   3145c:	cmp	x4, x2
   31460:	b.eq	316a4 <Perl_re_printf@@Base+0x17c8>  // b.none
   31464:	tbz	w0, #21, 31368 <Perl_re_printf@@Base+0x148c>
   31468:	b	31ed4 <Perl_re_printf@@Base+0x1ff8>
   3146c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31470:	add	x3, x3, #0xc10
   31474:	add	x3, x3, #0x540
   31478:	mov	w2, #0x1a80                	// #6784
   3147c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31480:	add	x1, x1, #0xfb8
   31484:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31488:	add	x0, x0, #0x160
   3148c:	bl	58e0 <__assert_fail@plt>
   31490:	and	w1, w0, #0xff
   31494:	sub	w1, w1, #0x9
   31498:	cmp	w1, #0x1
   3149c:	b.hi	31384 <Perl_re_printf@@Base+0x14a8>  // b.pmore
   314a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   314a4:	add	x3, x3, #0xc10
   314a8:	add	x3, x3, #0x540
   314ac:	mov	w2, #0x1a80                	// #6784
   314b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   314b4:	add	x1, x1, #0xfb8
   314b8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   314bc:	add	x0, x0, #0x190
   314c0:	bl	58e0 <__assert_fail@plt>
   314c4:	ldr	x1, [x19]
   314c8:	ldrb	w1, [x1, #129]
   314cc:	tbnz	w1, #6, 31390 <Perl_re_printf@@Base+0x14b4>
   314d0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   314d4:	add	x3, x3, #0xc10
   314d8:	add	x3, x3, #0x540
   314dc:	mov	w2, #0x1a80                	// #6784
   314e0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   314e4:	add	x1, x1, #0xfb8
   314e8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   314ec:	add	x0, x0, #0x1a8
   314f0:	bl	58e0 <__assert_fail@plt>
   314f4:	sub	w3, w0, #0x9
   314f8:	cmp	w3, #0x1
   314fc:	b.hi	313a4 <Perl_re_printf@@Base+0x14c8>  // b.pmore
   31500:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31504:	add	x3, x3, #0xc10
   31508:	add	x3, x3, #0x540
   3150c:	mov	w2, #0x1a80                	// #6784
   31510:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31514:	add	x1, x1, #0xfb8
   31518:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3151c:	add	x0, x0, #0x190
   31520:	bl	58e0 <__assert_fail@plt>
   31524:	ldr	x0, [x19]
   31528:	ldrb	w0, [x0, #129]
   3152c:	tbnz	w0, #6, 313ac <Perl_re_printf@@Base+0x14d0>
   31530:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31534:	add	x3, x3, #0xc10
   31538:	add	x3, x3, #0x540
   3153c:	mov	w2, #0x1a80                	// #6784
   31540:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31544:	add	x1, x1, #0xfb8
   31548:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3154c:	add	x0, x0, #0x1a8
   31550:	bl	58e0 <__assert_fail@plt>
   31554:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31558:	add	x3, x3, #0xc10
   3155c:	add	x3, x3, #0x540
   31560:	mov	w2, #0x1a80                	// #6784
   31564:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31568:	add	x1, x1, #0xfb8
   3156c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31570:	add	x0, x0, #0x1f0
   31574:	bl	58e0 <__assert_fail@plt>
   31578:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3157c:	add	x3, x3, #0xc10
   31580:	add	x3, x3, #0x540
   31584:	mov	w2, #0x1a85                	// #6789
   31588:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3158c:	add	x1, x1, #0xfb8
   31590:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31594:	add	x0, x0, #0x160
   31598:	bl	58e0 <__assert_fail@plt>
   3159c:	and	w2, w1, #0xff
   315a0:	sub	w2, w2, #0x9
   315a4:	cmp	w2, #0x1
   315a8:	b.hi	3141c <Perl_re_printf@@Base+0x1540>  // b.pmore
   315ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   315b0:	add	x3, x3, #0xc10
   315b4:	add	x3, x3, #0x540
   315b8:	mov	w2, #0x1a85                	// #6789
   315bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   315c0:	add	x1, x1, #0xfb8
   315c4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   315c8:	add	x0, x0, #0x190
   315cc:	bl	58e0 <__assert_fail@plt>
   315d0:	ldr	x2, [x19]
   315d4:	ldrb	w2, [x2, #129]
   315d8:	tbnz	w2, #6, 31428 <Perl_re_printf@@Base+0x154c>
   315dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   315e0:	add	x3, x3, #0xc10
   315e4:	add	x3, x3, #0x540
   315e8:	mov	w2, #0x1a85                	// #6789
   315ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   315f0:	add	x1, x1, #0xfb8
   315f4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   315f8:	add	x0, x0, #0x1a8
   315fc:	bl	58e0 <__assert_fail@plt>
   31600:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31604:	add	x3, x3, #0xc10
   31608:	add	x3, x3, #0x540
   3160c:	mov	w2, #0x1a85                	// #6789
   31610:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31614:	add	x1, x1, #0xfb8
   31618:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3161c:	add	x0, x0, #0x160
   31620:	bl	58e0 <__assert_fail@plt>
   31624:	and	w2, w0, #0xff
   31628:	sub	w2, w2, #0x9
   3162c:	cmp	w2, #0x1
   31630:	b.hi	3144c <Perl_re_printf@@Base+0x1570>  // b.pmore
   31634:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31638:	add	x3, x3, #0xc10
   3163c:	add	x3, x3, #0x540
   31640:	mov	w2, #0x1a85                	// #6789
   31644:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31648:	add	x1, x1, #0xfb8
   3164c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31650:	add	x0, x0, #0x190
   31654:	bl	58e0 <__assert_fail@plt>
   31658:	ldr	x2, [x20]
   3165c:	ldrb	w2, [x2, #129]
   31660:	tbnz	w2, #6, 31458 <Perl_re_printf@@Base+0x157c>
   31664:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31668:	add	x3, x3, #0xc10
   3166c:	add	x3, x3, #0x540
   31670:	mov	w2, #0x1a85                	// #6789
   31674:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31678:	add	x1, x1, #0xfb8
   3167c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31680:	add	x0, x0, #0x1a8
   31684:	bl	58e0 <__assert_fail@plt>
   31688:	ldr	w1, [x19, #12]
   3168c:	tbz	w1, #11, 316cc <Perl_re_printf@@Base+0x17f0>
   31690:	and	w2, w1, #0xf
   31694:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   31698:	ldr	x0, [x0, #3840]
   3169c:	ldrb	w0, [x0, w2, uxtw]
   316a0:	cbz	w0, 3175c <Perl_re_printf@@Base+0x1880>
   316a4:	and	w2, w1, #0xc000
   316a8:	cmp	w2, #0x8, lsl #12
   316ac:	b.eq	31780 <Perl_re_printf@@Base+0x18a4>  // b.none
   316b0:	and	w1, w1, #0xff
   316b4:	cmp	w1, #0xf
   316b8:	b.eq	317b4 <Perl_re_printf@@Base+0x18d8>  // b.none
   316bc:	ldr	x0, [x19, #16]
   316c0:	ldrb	w3, [x0, #12]
   316c4:	cmp	w3, #0x8
   316c8:	b.eq	317e4 <Perl_re_printf@@Base+0x1908>  // b.none
   316cc:	cbz	x22, 319c8 <Perl_re_printf@@Base+0x1aec>
   316d0:	ldr	w0, [x22, #12]
   316d4:	mov	w1, #0x8f00                	// #36608
   316d8:	movk	w1, #0x19a1, lsl #16
   316dc:	and	w1, w0, w1
   316e0:	cmp	w1, #0x400
   316e4:	b.ne	31974 <Perl_re_printf@@Base+0x1a98>  // b.any
   316e8:	and	w2, w0, #0xf
   316ec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   316f0:	ldr	x1, [x1, #3888]
   316f4:	ldrb	w1, [x1, w2, uxtw]
   316f8:	cbz	w1, 31864 <Perl_re_printf@@Base+0x1988>
   316fc:	and	w1, w0, #0xc000
   31700:	cmp	w1, #0x8, lsl #12
   31704:	b.eq	31888 <Perl_re_printf@@Base+0x19ac>  // b.none
   31708:	and	w0, w0, #0xff
   3170c:	cmp	w0, #0xf
   31710:	b.eq	3190c <Perl_re_printf@@Base+0x1a30>  // b.none
   31714:	ldr	x0, [x22]
   31718:	ldr	x0, [x0, #16]
   3171c:	str	x0, [sp, #168]
   31720:	ldr	x0, [x22, #16]
   31724:	str	x0, [sp, #176]
   31728:	ldr	x20, [sp, #168]
   3172c:	ldr	w0, [x19, #12]
   31730:	tbz	w0, #29, 3173c <Perl_re_printf@@Base+0x1860>
   31734:	ldr	w0, [x22, #12]
   31738:	tbz	w0, #29, 3198c <Perl_re_printf@@Base+0x1ab0>
   3173c:	mov	w3, #0x0                   	// #0
   31740:	mov	x2, x19
   31744:	mov	x1, x22
   31748:	mov	x0, x21
   3174c:	bl	5690 <Perl_sv_catsv_flags@plt>
   31750:	ldr	w0, [sp, #152]
   31754:	cbz	w0, 31a48 <Perl_re_printf@@Base+0x1b6c>
   31758:	b	319ec <Perl_re_printf@@Base+0x1b10>
   3175c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31760:	add	x3, x3, #0xc10
   31764:	add	x3, x3, #0x540
   31768:	mov	w2, #0x1a8a                	// #6794
   3176c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31770:	add	x1, x1, #0xfb8
   31774:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   31778:	add	x0, x0, #0x160
   3177c:	bl	58e0 <__assert_fail@plt>
   31780:	and	w0, w1, #0xff
   31784:	sub	w0, w0, #0x9
   31788:	cmp	w0, #0x1
   3178c:	b.hi	316b0 <Perl_re_printf@@Base+0x17d4>  // b.pmore
   31790:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31794:	add	x3, x3, #0xc10
   31798:	add	x3, x3, #0x540
   3179c:	mov	w2, #0x1a8a                	// #6794
   317a0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   317a4:	add	x1, x1, #0xfb8
   317a8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   317ac:	add	x0, x0, #0x190
   317b0:	bl	58e0 <__assert_fail@plt>
   317b4:	ldr	x0, [x19]
   317b8:	ldrb	w0, [x0, #129]
   317bc:	tbnz	w0, #6, 316bc <Perl_re_printf@@Base+0x17e0>
   317c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   317c4:	add	x3, x3, #0xc10
   317c8:	add	x3, x3, #0x540
   317cc:	mov	w2, #0x1a8a                	// #6794
   317d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   317d4:	add	x1, x1, #0xfb8
   317d8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   317dc:	add	x0, x0, #0x1a8
   317e0:	bl	58e0 <__assert_fail@plt>
   317e4:	cmp	w2, #0x8, lsl #12
   317e8:	b.eq	31804 <Perl_re_printf@@Base+0x1928>  // b.none
   317ec:	cmp	w1, #0xf
   317f0:	b.eq	31834 <Perl_re_printf@@Base+0x1958>  // b.none
   317f4:	mov	x19, x0
   317f8:	cbnz	x22, 316d0 <Perl_re_printf@@Base+0x17f4>
   317fc:	mov	x22, x0
   31800:	b	319dc <Perl_re_printf@@Base+0x1b00>
   31804:	sub	w2, w1, #0x9
   31808:	cmp	w2, #0x1
   3180c:	b.hi	317ec <Perl_re_printf@@Base+0x1910>  // b.pmore
   31810:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31814:	add	x3, x3, #0xc10
   31818:	add	x3, x3, #0x540
   3181c:	mov	w2, #0x1a8b                	// #6795
   31820:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31824:	add	x1, x1, #0xfb8
   31828:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3182c:	add	x0, x0, #0x190
   31830:	bl	58e0 <__assert_fail@plt>
   31834:	ldr	x1, [x19]
   31838:	ldrb	w1, [x1, #129]
   3183c:	tbnz	w1, #6, 317f4 <Perl_re_printf@@Base+0x1918>
   31840:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31844:	add	x3, x3, #0xc10
   31848:	add	x3, x3, #0x540
   3184c:	mov	w2, #0x1a8b                	// #6795
   31850:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31854:	add	x1, x1, #0xfb8
   31858:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   3185c:	add	x0, x0, #0x1a8
   31860:	bl	58e0 <__assert_fail@plt>
   31864:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31868:	add	x3, x3, #0xc10
   3186c:	add	x3, x3, #0x540
   31870:	mov	w2, #0x1a93                	// #6803
   31874:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31878:	add	x1, x1, #0xfb8
   3187c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31880:	add	x0, x0, #0xe40
   31884:	bl	58e0 <__assert_fail@plt>
   31888:	and	w2, w0, #0xff
   3188c:	sub	w2, w2, #0x9
   31890:	cmp	w2, #0x1
   31894:	b.ls	318e8 <Perl_re_printf@@Base+0x1a0c>  // b.plast
   31898:	and	w0, w0, #0xff
   3189c:	cmp	w0, #0xf
   318a0:	b.eq	3190c <Perl_re_printf@@Base+0x1a30>  // b.none
   318a4:	ldr	x2, [x22]
   318a8:	ldr	x2, [x2, #16]
   318ac:	str	x2, [sp, #168]
   318b0:	cmp	w1, #0x8, lsl #12
   318b4:	b.ne	31720 <Perl_re_printf@@Base+0x1844>  // b.any
   318b8:	sub	w0, w0, #0x9
   318bc:	cmp	w0, #0x1
   318c0:	b.hi	31720 <Perl_re_printf@@Base+0x1844>  // b.pmore
   318c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   318c8:	add	x3, x3, #0xc10
   318cc:	add	x3, x3, #0x540
   318d0:	mov	w2, #0x1a93                	// #6803
   318d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   318d8:	add	x1, x1, #0xfb8
   318dc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   318e0:	add	x0, x0, #0xd40
   318e4:	bl	58e0 <__assert_fail@plt>
   318e8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   318ec:	add	x3, x3, #0xc10
   318f0:	add	x3, x3, #0x540
   318f4:	mov	w2, #0x1a93                	// #6803
   318f8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   318fc:	add	x1, x1, #0xfb8
   31900:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31904:	add	x0, x0, #0xe70
   31908:	bl	58e0 <__assert_fail@plt>
   3190c:	ldr	x0, [x22]
   31910:	ldrb	w1, [x0, #129]
   31914:	tbz	w1, #6, 31950 <Perl_re_printf@@Base+0x1a74>
   31918:	ldr	x0, [x0, #16]
   3191c:	str	x0, [sp, #168]
   31920:	ldr	x0, [x22]
   31924:	ldrb	w0, [x0, #129]
   31928:	tbnz	w0, #6, 31720 <Perl_re_printf@@Base+0x1844>
   3192c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31930:	add	x3, x3, #0xc10
   31934:	add	x3, x3, #0x540
   31938:	mov	w2, #0x1a93                	// #6803
   3193c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31940:	add	x1, x1, #0xfb8
   31944:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31948:	add	x0, x0, #0xd58
   3194c:	bl	58e0 <__assert_fail@plt>
   31950:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31954:	add	x3, x3, #0xc10
   31958:	add	x3, x3, #0x540
   3195c:	mov	w2, #0x1a93                	// #6803
   31960:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31964:	add	x1, x1, #0xfb8
   31968:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3196c:	add	x0, x0, #0xe88
   31970:	bl	58e0 <__assert_fail@plt>
   31974:	mov	w3, #0x0                   	// #0
   31978:	add	x2, sp, #0xa8
   3197c:	mov	x1, x22
   31980:	mov	x0, x21
   31984:	bl	4ef0 <Perl_sv_pvn_force_flags@plt>
   31988:	b	31724 <Perl_re_printf@@Base+0x1848>
   3198c:	ldr	w4, [sp, #108]
   31990:	add	x3, sp, #0xa8
   31994:	add	x2, sp, #0xb0
   31998:	ldr	x1, [sp, #120]
   3199c:	mov	x0, x21
   319a0:	bl	30684 <Perl_re_printf@@Base+0x7a8>
   319a4:	ldr	x3, [sp, #168]
   319a8:	ldr	x2, [sp, #176]
   319ac:	mov	x1, x22
   319b0:	mov	x0, x21
   319b4:	bl	57c0 <Perl_sv_setpvn@plt>
   319b8:	ldr	w0, [x22, #12]
   319bc:	orr	w0, w0, #0x20000000
   319c0:	str	w0, [x22, #12]
   319c4:	b	3173c <Perl_re_printf@@Base+0x1860>
   319c8:	ldr	w0, [x19, #12]
   319cc:	and	w1, w0, #0xff
   319d0:	cmp	w1, #0x3
   319d4:	b.eq	31b64 <Perl_re_printf@@Base+0x1c88>  // b.none
   319d8:	mov	x22, x19
   319dc:	ldr	w0, [sp, #152]
   319e0:	cbz	w0, 31a54 <Perl_re_printf@@Base+0x1b78>
   319e4:	mov	x20, #0x0                   	// #0
   319e8:	mov	x19, #0x0                   	// #0
   319ec:	ldr	w0, [x22, #12]
   319f0:	and	w2, w0, #0xf
   319f4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   319f8:	ldr	x1, [x1, #3888]
   319fc:	ldrb	w1, [x1, w2, uxtw]
   31a00:	cbz	w1, 31bec <Perl_re_printf@@Base+0x1d10>
   31a04:	and	w1, w0, #0xc000
   31a08:	cmp	w1, #0x8, lsl #12
   31a0c:	b.eq	31e3c <Perl_re_printf@@Base+0x1f60>  // b.none
   31a10:	and	w0, w0, #0xff
   31a14:	cmp	w0, #0xf
   31a18:	b.eq	31c10 <Perl_re_printf@@Base+0x1d34>  // b.none
   31a1c:	ldr	x0, [sp, #120]
   31a20:	ldr	x0, [x0, #264]
   31a24:	ldr	x0, [x0, #8]
   31a28:	ldr	w1, [sp, #108]
   31a2c:	sbfiz	x1, x1, #5, #32
   31a30:	add	x0, x0, x1
   31a34:	ldr	x1, [x22]
   31a38:	ldr	x1, [x1, #16]
   31a3c:	sub	x1, x1, #0x1
   31a40:	stur	x1, [x0, #-24]
   31a44:	cbz	x19, 31a54 <Perl_re_printf@@Base+0x1b78>
   31a48:	ldrb	w0, [x19, #12]
   31a4c:	cmp	w0, #0x8
   31a50:	b.eq	31c40 <Perl_re_printf@@Base+0x1d64>  // b.none
   31a54:	add	x27, x27, #0x8
   31a58:	ldr	x0, [sp, #136]
   31a5c:	cmp	x27, x0
   31a60:	b.cs	31df8 <Perl_re_printf@@Base+0x1f1c>  // b.hs, b.nlast
   31a64:	ldr	w0, [sp, #104]
   31a68:	cbnz	w0, 31ea8 <Perl_re_printf@@Base+0x1fcc>
   31a6c:	ldr	x19, [x27]
   31a70:	add	x0, x21, #0x150
   31a74:	cmp	x19, #0x0
   31a78:	csel	x19, x0, x19, eq  // eq = none
   31a7c:	ldr	x0, [sp, #128]
   31a80:	cmp	x0, #0x0
   31a84:	cset	w0, ne  // ne = any
   31a88:	str	w0, [sp, #104]
   31a8c:	ldr	w0, [x19, #12]
   31a90:	and	w1, w0, #0xff
   31a94:	cmp	w1, #0xb
   31a98:	b.eq	30b64 <Perl_re_printf@@Base+0xc88>  // b.none
   31a9c:	cbz	x28, 30e80 <Perl_re_printf@@Base+0xfa4>
   31aa0:	ldrh	w0, [x28, #32]
   31aa4:	tst	x0, #0x1ff
   31aa8:	b.ne	30de8 <Perl_re_printf@@Base+0xf0c>  // b.any
   31aac:	ldrsb	w0, [x28, #34]
   31ab0:	str	wzr, [sp, #152]
   31ab4:	tbz	w0, #31, 30dec <Perl_re_printf@@Base+0xf10>
   31ab8:	ldr	x0, [sp, #120]
   31abc:	ldr	x2, [x0, #264]
   31ac0:	ldr	w0, [x2, #4]
   31ac4:	ldr	w1, [sp, #108]
   31ac8:	cmp	w0, w1
   31acc:	b.le	30d10 <Perl_re_printf@@Base+0xe34>
   31ad0:	cbz	x22, 30dbc <Perl_re_printf@@Base+0xee0>
   31ad4:	ldr	w0, [x22, #12]
   31ad8:	and	w3, w0, #0xf
   31adc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   31ae0:	ldr	x1, [x1, #3888]
   31ae4:	ldrb	w1, [x1, w3, uxtw]
   31ae8:	cbz	w1, 30d34 <Perl_re_printf@@Base+0xe58>
   31aec:	and	w1, w0, #0xc000
   31af0:	cmp	w1, #0x8, lsl #12
   31af4:	b.eq	30d58 <Perl_re_printf@@Base+0xe7c>  // b.none
   31af8:	and	w0, w0, #0xff
   31afc:	cmp	w0, #0xf
   31b00:	b.eq	30d8c <Perl_re_printf@@Base+0xeb0>  // b.none
   31b04:	ldr	x0, [x22]
   31b08:	ldr	x3, [x0, #16]
   31b0c:	ldr	w4, [sp, #108]
   31b10:	sbfiz	x1, x4, #5, #32
   31b14:	ldr	x0, [x2, #8]
   31b18:	str	x3, [x0, x1]
   31b1c:	ldr	x2, [sp, #120]
   31b20:	ldr	x0, [x2, #264]
   31b24:	ldr	x0, [x0, #8]
   31b28:	add	x0, x0, x1
   31b2c:	str	x28, [x0, #16]
   31b30:	ldr	x0, [x2, #264]
   31b34:	ldr	x0, [x0, #8]
   31b38:	add	x0, x0, x1
   31b3c:	str	xzr, [x0, #24]
   31b40:	add	w0, w4, #0x1
   31b44:	str	w0, [sp, #108]
   31b48:	ldrb	w0, [x28, #33]
   31b4c:	tbz	w0, #6, 30dc4 <Perl_re_printf@@Base+0xee8>
   31b50:	ldr	x28, [x28, #8]
   31b54:	cbz	x28, 30dc4 <Perl_re_printf@@Base+0xee8>
   31b58:	mov	w0, #0x1                   	// #1
   31b5c:	str	w0, [sp, #152]
   31b60:	b	30dec <Perl_re_printf@@Base+0xf10>
   31b64:	ldr	x3, [x19]
   31b68:	ldr	x4, [x3, #24]
   31b6c:	and	w2, w0, #0xf
   31b70:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   31b74:	ldr	x1, [x1, #3888]
   31b78:	ldrb	w1, [x1, w2, uxtw]
   31b7c:	cbz	w1, 31bc8 <Perl_re_printf@@Base+0x1cec>
   31b80:	ldr	x1, [x3, #16]
   31b84:	cmp	x4, x1
   31b88:	b.ls	31b98 <Perl_re_printf@@Base+0x1cbc>  // b.plast
   31b8c:	ldr	x2, [x19, #16]
   31b90:	ldrb	w1, [x2, x1]
   31b94:	cbz	w1, 31e70 <Perl_re_printf@@Base+0x1f94>
   31b98:	tst	x0, #0x10000000
   31b9c:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   31ba0:	b.eq	31e70 <Perl_re_printf@@Base+0x1f94>  // b.none
   31ba4:	mov	w2, #0x12                  	// #18
   31ba8:	mov	x1, x19
   31bac:	mov	x0, x21
   31bb0:	bl	5980 <Perl_newSVsv_flags@plt>
   31bb4:	mov	x1, x0
   31bb8:	mov	x0, x21
   31bbc:	bl	55d0 <Perl_sv_2mortal@plt>
   31bc0:	mov	x22, x0
   31bc4:	b	319dc <Perl_re_printf@@Base+0x1b00>
   31bc8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31bcc:	add	x3, x3, #0xc10
   31bd0:	add	x3, x3, #0x540
   31bd4:	mov	w2, #0x1aa2                	// #6818
   31bd8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31bdc:	add	x1, x1, #0xfb8
   31be0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31be4:	add	x0, x0, #0xe40
   31be8:	bl	58e0 <__assert_fail@plt>
   31bec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31bf0:	add	x3, x3, #0xc10
   31bf4:	add	x3, x3, #0x540
   31bf8:	mov	w2, #0x1aad                	// #6829
   31bfc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31c00:	add	x1, x1, #0xfb8
   31c04:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31c08:	add	x0, x0, #0xe40
   31c0c:	bl	58e0 <__assert_fail@plt>
   31c10:	ldr	x0, [x22]
   31c14:	ldrb	w0, [x0, #129]
   31c18:	tbnz	w0, #6, 31a1c <Perl_re_printf@@Base+0x1b40>
   31c1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31c20:	add	x3, x3, #0xc10
   31c24:	add	x3, x3, #0x540
   31c28:	mov	w2, #0x1aad                	// #6829
   31c2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31c30:	add	x1, x1, #0xfb8
   31c34:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31c38:	add	x0, x0, #0xe88
   31c3c:	bl	58e0 <__assert_fail@plt>
   31c40:	ldr	x0, [x19]
   31c44:	ldr	x1, [x0, #32]
   31c48:	ldr	x1, [x1, #96]
   31c4c:	cbz	x1, 31a54 <Perl_re_printf@@Base+0x1b78>
   31c50:	ldr	x23, [x0, #104]
   31c54:	ldr	x0, [x23, #32]
   31c58:	cbz	x0, 31a54 <Perl_re_printf@@Base+0x1b78>
   31c5c:	ldr	w0, [x0, #4]
   31c60:	cbz	w0, 31a54 <Perl_re_printf@@Base+0x1b78>
   31c64:	mov	w0, #0x1                   	// #1
   31c68:	ldr	x1, [sp, #144]
   31c6c:	strb	w0, [x1]
   31c70:	ldr	x26, [sp, #120]
   31c74:	ldr	x24, [x26, #264]
   31c78:	cbz	x24, 31cbc <Perl_re_printf@@Base+0x1de0>
   31c7c:	ldr	x0, [x23, #32]
   31c80:	ldr	w0, [x0, #4]
   31c84:	ldr	w25, [x24, #4]
   31c88:	add	w25, w0, w25
   31c8c:	sbfiz	x1, x25, #5, #32
   31c90:	ldr	x0, [x24, #8]
   31c94:	bl	5670 <Perl_safesysrealloc@plt>
   31c98:	str	x0, [x24, #8]
   31c9c:	ldr	x0, [x26, #264]
   31ca0:	str	w25, [x0, #4]
   31ca4:	ldr	x2, [x23, #32]
   31ca8:	ldr	w0, [x2, #4]
   31cac:	mov	w1, #0x0                   	// #0
   31cb0:	cmp	w0, #0x0
   31cb4:	b.gt	31d94 <Perl_re_printf@@Base+0x1eb8>
   31cb8:	b	31a54 <Perl_re_printf@@Base+0x1b78>
   31cbc:	ldr	x0, [x23, #32]
   31cc0:	ldr	w1, [x0, #4]
   31cc4:	mov	x0, x21
   31cc8:	bl	26a9c <my_regexec@@Base+0x35a8>
   31ccc:	ldr	x1, [sp, #120]
   31cd0:	str	x0, [x1, #264]
   31cd4:	b	31ca4 <Perl_re_printf@@Base+0x1dc8>
   31cd8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31cdc:	add	x3, x3, #0xc10
   31ce0:	add	x3, x3, #0x550
   31ce4:	mov	w2, #0xb6                  	// #182
   31ce8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   31cec:	add	x1, x1, #0xc80
   31cf0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   31cf4:	add	x0, x0, #0x128
   31cf8:	bl	58e0 <__assert_fail@plt>
   31cfc:	ldrb	w0, [x3, #184]
   31d00:	and	x0, x0, #0xf
   31d04:	add	x0, x0, x20
   31d08:	ldr	x3, [sp, #120]
   31d0c:	ldr	x6, [x3, #264]
   31d10:	ldr	w3, [x6, #4]
   31d14:	ldr	w4, [sp, #108]
   31d18:	cmp	w3, w4
   31d1c:	b.le	31dd4 <Perl_re_printf@@Base+0x1ef8>
   31d20:	sbfiz	x4, x1, #5, #32
   31d24:	ldr	x7, [x2, #8]
   31d28:	add	x3, x7, x4
   31d2c:	ldr	w8, [sp, #108]
   31d30:	sbfiz	x5, x8, #5, #32
   31d34:	ldr	x6, [x6, #8]
   31d38:	add	x2, x6, x5
   31d3c:	ldr	x4, [x7, x4]
   31d40:	add	x4, x4, x0
   31d44:	str	x4, [x6, x5]
   31d48:	ldr	x4, [x3, #8]
   31d4c:	add	x0, x4, x0
   31d50:	str	x0, [x2, #8]
   31d54:	ldr	x0, [x3, #16]
   31d58:	str	x0, [x2, #16]
   31d5c:	ldr	x0, [x3, #24]
   31d60:	cmp	x0, #0x0
   31d64:	csel	x0, x0, x19, ne  // ne = any
   31d68:	ldr	w3, [x0, #8]
   31d6c:	add	w3, w3, #0x1
   31d70:	str	w3, [x0, #8]
   31d74:	str	x0, [x2, #24]
   31d78:	add	w0, w8, #0x1
   31d7c:	str	w0, [sp, #108]
   31d80:	add	w1, w1, #0x1
   31d84:	ldr	x2, [x23, #32]
   31d88:	ldr	w0, [x2, #4]
   31d8c:	cmp	w0, w1
   31d90:	b.le	31a54 <Perl_re_printf@@Base+0x1b78>
   31d94:	ldr	x3, [x19]
   31d98:	ldr	w0, [x19, #12]
   31d9c:	and	w4, w0, #0xff
   31da0:	cmp	w4, #0x8
   31da4:	b.eq	31cfc <Perl_re_printf@@Base+0x1e20>  // b.none
   31da8:	mov	w5, #0x80ff                	// #33023
   31dac:	movk	w5, #0x100, lsl #16
   31db0:	and	w0, w0, w5
   31db4:	mov	w5, #0xa                   	// #10
   31db8:	movk	w5, #0x100, lsl #16
   31dbc:	cmp	w0, w5
   31dc0:	b.ne	31cd8 <Perl_re_printf@@Base+0x1dfc>  // b.any
   31dc4:	cmp	w4, #0xa
   31dc8:	b.ne	31cfc <Perl_re_printf@@Base+0x1e20>  // b.any
   31dcc:	ldr	x3, [x3, #24]
   31dd0:	b	31cfc <Perl_re_printf@@Base+0x1e20>
   31dd4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31dd8:	add	x3, x3, #0xc10
   31ddc:	add	x3, x3, #0x540
   31de0:	mov	w2, #0x1acc                	// #6860
   31de4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31de8:	add	x1, x1, #0xfb8
   31dec:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   31df0:	add	x0, x0, #0x9a0
   31df4:	bl	58e0 <__assert_fail@plt>
   31df8:	mov	x0, x22
   31dfc:	ldr	w1, [sp, #156]
   31e00:	cbz	w1, 31fb4 <Perl_re_printf@@Base+0x20d8>
   31e04:	ldp	x23, x24, [sp, #48]
   31e08:	ldp	x25, x26, [sp, #64]
   31e0c:	ldr	w1, [x22, #12]
   31e10:	mov	x0, x22
   31e14:	tbz	w1, #22, 31fbc <Perl_re_printf@@Base+0x20e0>
   31e18:	mov	x1, x22
   31e1c:	mov	x0, x21
   31e20:	bl	5590 <Perl_mg_set@plt>
   31e24:	mov	x0, x22
   31e28:	b	31fbc <Perl_re_printf@@Base+0x20e0>
   31e2c:	mov	x1, x22
   31e30:	mov	x22, x19
   31e34:	mov	x19, x1
   31e38:	mov	x20, #0x0                   	// #0
   31e3c:	and	w1, w0, #0xff
   31e40:	sub	w1, w1, #0x9
   31e44:	cmp	w1, #0x1
   31e48:	b.hi	31a10 <Perl_re_printf@@Base+0x1b34>  // b.pmore
   31e4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   31e50:	add	x3, x3, #0xc10
   31e54:	add	x3, x3, #0x540
   31e58:	mov	w2, #0x1aad                	// #6829
   31e5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   31e60:	add	x1, x1, #0xfb8
   31e64:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   31e68:	add	x0, x0, #0xe70
   31e6c:	bl	58e0 <__assert_fail@plt>
   31e70:	ldr	w1, [sp, #152]
   31e74:	cbz	w1, 31e98 <Perl_re_printf@@Base+0x1fbc>
   31e78:	and	w1, w0, #0xc000
   31e7c:	cmp	w1, #0x8, lsl #12
   31e80:	b.eq	31e2c <Perl_re_printf@@Base+0x1f50>  // b.none
   31e84:	mov	x0, x22
   31e88:	mov	x22, x19
   31e8c:	mov	x19, x0
   31e90:	mov	x20, #0x0                   	// #0
   31e94:	b	31a1c <Perl_re_printf@@Base+0x1b40>
   31e98:	mov	x22, x19
   31e9c:	b	31a54 <Perl_re_printf@@Base+0x1b78>
   31ea0:	mov	x19, x20
   31ea4:	b	316cc <Perl_re_printf@@Base+0x17f0>
   31ea8:	add	x19, x21, #0x150
   31eac:	ldr	x0, [sp, #128]
   31eb0:	cmp	x0, #0x0
   31eb4:	csel	x19, x19, x0, eq  // eq = none
   31eb8:	sub	x27, x27, #0x8
   31ebc:	str	wzr, [sp, #104]
   31ec0:	b	31a8c <Perl_re_printf@@Base+0x1bb0>
   31ec4:	mov	x0, x2
   31ec8:	b	31fbc <Perl_re_printf@@Base+0x20e0>
   31ecc:	ldr	w0, [x20, #12]
   31ed0:	tbz	w0, #21, 31ea0 <Perl_re_printf@@Base+0x1fc4>
   31ed4:	mov	x1, x20
   31ed8:	mov	x0, x21
   31edc:	bl	55e0 <Perl_mg_get@plt>
   31ee0:	b	31360 <Perl_re_printf@@Base+0x1484>
   31ee4:	mov	x20, x19
   31ee8:	cbz	x22, 31ea0 <Perl_re_printf@@Base+0x1fc4>
   31eec:	ldr	w0, [x22, #12]
   31ef0:	tbnz	w0, #11, 310d8 <Perl_re_printf@@Base+0x11fc>
   31ef4:	ldr	w0, [x19, #12]
   31ef8:	tbz	w0, #11, 316d0 <Perl_re_printf@@Base+0x17f4>
   31efc:	and	w2, w0, #0xf
   31f00:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   31f04:	ldr	x1, [x1, #3840]
   31f08:	ldrb	w1, [x1, w2, uxtw]
   31f0c:	cbz	w1, 3124c <Perl_re_printf@@Base+0x1370>
   31f10:	and	w4, w0, #0xc000
   31f14:	cmp	w4, #0x8, lsl #12
   31f18:	b.eq	31270 <Perl_re_printf@@Base+0x1394>  // b.none
   31f1c:	and	w2, w0, #0xff
   31f20:	cmp	w2, #0xf
   31f24:	b.eq	312a4 <Perl_re_printf@@Base+0x13c8>  // b.none
   31f28:	ldr	x3, [x19, #16]
   31f2c:	ldr	w1, [x3, #12]
   31f30:	tbz	w1, #20, 310ac <Perl_re_printf@@Base+0x11d0>
   31f34:	cmp	w4, #0x8, lsl #12
   31f38:	b.eq	312d4 <Perl_re_printf@@Base+0x13f8>  // b.none
   31f3c:	cmp	w2, #0xf
   31f40:	b.eq	31304 <Perl_re_printf@@Base+0x1428>  // b.none
   31f44:	and	w1, w1, #0xff
   31f48:	cmp	w1, #0x6
   31f4c:	b.ls	31334 <Perl_re_printf@@Base+0x1458>  // b.plast
   31f50:	ldr	x1, [x3]
   31f54:	ldr	x1, [x1]
   31f58:	ldr	w1, [x1, #12]
   31f5c:	tbz	w1, #28, 310ac <Perl_re_printf@@Base+0x11d0>
   31f60:	mov	w4, #0x4                   	// #4
   31f64:	mov	w3, #0x46                  	// #70
   31f68:	mov	x2, x19
   31f6c:	mov	x1, x22
   31f70:	mov	x0, x21
   31f74:	bl	5370 <Perl_amagic_call@plt>
   31f78:	mov	x2, x0
   31f7c:	cbz	x0, 310a0 <Perl_re_printf@@Base+0x11c4>
   31f80:	mov	w3, #0x2                   	// #2
   31f84:	mov	x1, x22
   31f88:	mov	x0, x21
   31f8c:	bl	55b0 <Perl_sv_setsv_flags@plt>
   31f90:	ldr	w2, [sp, #108]
   31f94:	cbz	w2, 31fac <Perl_re_printf@@Base+0x20d0>
   31f98:	ldr	x0, [sp, #120]
   31f9c:	ldr	x1, [x0, #264]
   31fa0:	ldr	w0, [x1, #4]
   31fa4:	sub	w0, w0, w2
   31fa8:	str	w0, [x1, #4]
   31fac:	str	wzr, [sp, #108]
   31fb0:	b	31a54 <Perl_re_printf@@Base+0x1b78>
   31fb4:	ldp	x23, x24, [sp, #48]
   31fb8:	ldp	x25, x26, [sp, #64]
   31fbc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   31fc0:	ldr	x1, [x1, #3920]
   31fc4:	ldr	x2, [sp, #184]
   31fc8:	ldr	x1, [x1]
   31fcc:	eor	x1, x2, x1
   31fd0:	cbnz	x1, 31fe8 <Perl_re_printf@@Base+0x210c>
   31fd4:	ldp	x19, x20, [sp, #16]
   31fd8:	ldp	x21, x22, [sp, #32]
   31fdc:	ldp	x27, x28, [sp, #80]
   31fe0:	ldp	x29, x30, [sp], #192
   31fe4:	ret
   31fe8:	stp	x23, x24, [sp, #48]
   31fec:	stp	x25, x26, [sp, #64]
   31ff0:	bl	5300 <__stack_chk_fail@plt>
   31ff4:	cbnz	w1, 31ffc <Perl_re_printf@@Base+0x2120>
   31ff8:	ret
   31ffc:	stp	x29, x30, [sp, #-48]!
   32000:	mov	x29, sp
   32004:	stp	x19, x20, [sp, #16]
   32008:	str	x21, [sp, #32]
   3200c:	mov	x21, x0
   32010:	mov	w19, w1
   32014:	mov	x20, x3
   32018:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3201c:	add	x1, x1, #0xb50
   32020:	bl	50e0 <Perl_re_printf@plt>
   32024:	tbnz	w19, #0, 32088 <Perl_re_printf@@Base+0x21ac>
   32028:	tbnz	w19, #1, 320a4 <Perl_re_printf@@Base+0x21c8>
   3202c:	tbnz	w19, #6, 320c0 <Perl_re_printf@@Base+0x21e4>
   32030:	tbnz	w19, #7, 320dc <Perl_re_printf@@Base+0x2200>
   32034:	tbnz	w19, #8, 320f8 <Perl_re_printf@@Base+0x221c>
   32038:	tbnz	w19, #9, 32114 <Perl_re_printf@@Base+0x2238>
   3203c:	tbnz	w19, #10, 32130 <Perl_re_printf@@Base+0x2254>
   32040:	tbnz	w19, #11, 3214c <Perl_re_printf@@Base+0x2270>
   32044:	tbnz	w19, #12, 32168 <Perl_re_printf@@Base+0x228c>
   32048:	tst	w19, #0x1800
   3204c:	b.ne	32184 <Perl_re_printf@@Base+0x22a8>  // b.any
   32050:	tbnz	w19, #13, 321a0 <Perl_re_printf@@Base+0x22c4>
   32054:	tbnz	w19, #14, 321bc <Perl_re_printf@@Base+0x22e0>
   32058:	tbnz	w19, #15, 321d8 <Perl_re_printf@@Base+0x22fc>
   3205c:	tbnz	w19, #16, 321f4 <Perl_re_printf@@Base+0x2318>
   32060:	tbnz	w19, #17, 32210 <Perl_re_printf@@Base+0x2334>
   32064:	mov	x2, x20
   32068:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3206c:	add	x1, x1, #0xb50
   32070:	mov	x0, x21
   32074:	bl	50e0 <Perl_re_printf@plt>
   32078:	ldp	x19, x20, [sp, #16]
   3207c:	ldr	x21, [sp, #32]
   32080:	ldp	x29, x30, [sp], #48
   32084:	ret
   32088:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   3208c:	add	x2, x2, #0x9f8
   32090:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32094:	add	x1, x1, #0xac0
   32098:	mov	x0, x21
   3209c:	bl	50e0 <Perl_re_printf@plt>
   320a0:	b	32028 <Perl_re_printf@@Base+0x214c>
   320a4:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   320a8:	add	x2, x2, #0xa08
   320ac:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   320b0:	add	x1, x1, #0xac0
   320b4:	mov	x0, x21
   320b8:	bl	50e0 <Perl_re_printf@plt>
   320bc:	b	3202c <Perl_re_printf@@Base+0x2150>
   320c0:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   320c4:	add	x2, x2, #0xa18
   320c8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   320cc:	add	x1, x1, #0xac0
   320d0:	mov	x0, x21
   320d4:	bl	50e0 <Perl_re_printf@plt>
   320d8:	b	32030 <Perl_re_printf@@Base+0x2154>
   320dc:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   320e0:	add	x2, x2, #0xa28
   320e4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   320e8:	add	x1, x1, #0xac0
   320ec:	mov	x0, x21
   320f0:	bl	50e0 <Perl_re_printf@plt>
   320f4:	b	32034 <Perl_re_printf@@Base+0x2158>
   320f8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   320fc:	add	x2, x2, #0xa38
   32100:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32104:	add	x1, x1, #0xac0
   32108:	mov	x0, x21
   3210c:	bl	50e0 <Perl_re_printf@plt>
   32110:	b	32038 <Perl_re_printf@@Base+0x215c>
   32114:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32118:	add	x2, x2, #0xa48
   3211c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32120:	add	x1, x1, #0xac0
   32124:	mov	x0, x21
   32128:	bl	50e0 <Perl_re_printf@plt>
   3212c:	b	3203c <Perl_re_printf@@Base+0x2160>
   32130:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32134:	add	x2, x2, #0xa58
   32138:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   3213c:	add	x1, x1, #0xac0
   32140:	mov	x0, x21
   32144:	bl	50e0 <Perl_re_printf@plt>
   32148:	b	32040 <Perl_re_printf@@Base+0x2164>
   3214c:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32150:	add	x2, x2, #0xa68
   32154:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32158:	add	x1, x1, #0xac0
   3215c:	mov	x0, x21
   32160:	bl	50e0 <Perl_re_printf@plt>
   32164:	b	32044 <Perl_re_printf@@Base+0x2168>
   32168:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   3216c:	add	x2, x2, #0x8f0
   32170:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32174:	add	x1, x1, #0xac0
   32178:	mov	x0, x21
   3217c:	bl	50e0 <Perl_re_printf@plt>
   32180:	b	32048 <Perl_re_printf@@Base+0x216c>
   32184:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32188:	add	x2, x2, #0xa80
   3218c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32190:	add	x1, x1, #0xac0
   32194:	mov	x0, x21
   32198:	bl	50e0 <Perl_re_printf@plt>
   3219c:	b	32050 <Perl_re_printf@@Base+0x2174>
   321a0:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   321a4:	add	x2, x2, #0xa90
   321a8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   321ac:	add	x1, x1, #0xac0
   321b0:	mov	x0, x21
   321b4:	bl	50e0 <Perl_re_printf@plt>
   321b8:	b	32054 <Perl_re_printf@@Base+0x2178>
   321bc:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   321c0:	add	x2, x2, #0xaa8
   321c4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   321c8:	add	x1, x1, #0xac0
   321cc:	mov	x0, x21
   321d0:	bl	50e0 <Perl_re_printf@plt>
   321d4:	b	32058 <Perl_re_printf@@Base+0x217c>
   321d8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   321dc:	add	x2, x2, #0xac0
   321e0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   321e4:	add	x1, x1, #0xac0
   321e8:	mov	x0, x21
   321ec:	bl	50e0 <Perl_re_printf@plt>
   321f0:	b	3205c <Perl_re_printf@@Base+0x2180>
   321f4:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   321f8:	add	x2, x2, #0xad0
   321fc:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   32200:	add	x1, x1, #0xac0
   32204:	mov	x0, x21
   32208:	bl	50e0 <Perl_re_printf@plt>
   3220c:	b	32060 <Perl_re_printf@@Base+0x2184>
   32210:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32214:	add	x2, x2, #0xae8
   32218:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   3221c:	add	x1, x1, #0xac0
   32220:	mov	x0, x21
   32224:	bl	50e0 <Perl_re_printf@plt>
   32228:	b	32064 <Perl_re_printf@@Base+0x2188>

000000000003222c <Perl_re_indentf@@Base>:
   3222c:	stp	x29, x30, [sp, #-304]!
   32230:	mov	x29, sp
   32234:	stp	x19, x20, [sp, #16]
   32238:	str	x21, [sp, #32]
   3223c:	mov	x20, x1
   32240:	mov	w19, w2
   32244:	str	x3, [sp, #264]
   32248:	str	x4, [sp, #272]
   3224c:	str	x5, [sp, #280]
   32250:	str	x6, [sp, #288]
   32254:	str	x7, [sp, #296]
   32258:	str	q0, [sp, #128]
   3225c:	str	q1, [sp, #144]
   32260:	str	q2, [sp, #160]
   32264:	str	q3, [sp, #176]
   32268:	str	q4, [sp, #192]
   3226c:	str	q5, [sp, #208]
   32270:	str	q6, [sp, #224]
   32274:	str	q7, [sp, #240]
   32278:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3227c:	ldr	x1, [x1, #3920]
   32280:	ldr	x2, [x1]
   32284:	str	x2, [sp, #120]
   32288:	mov	x2, #0x0                   	// #0
   3228c:	bl	58f0 <Perl_PerlIO_stderr@plt>
   32290:	cbz	x20, 3233c <Perl_re_indentf@@Base+0x110>
   32294:	mov	x21, x0
   32298:	add	x0, sp, #0x130
   3229c:	str	x0, [sp, #88]
   322a0:	str	x0, [sp, #96]
   322a4:	add	x0, sp, #0x100
   322a8:	str	x0, [sp, #104]
   322ac:	mov	w0, #0xffffffd8            	// #-40
   322b0:	str	w0, [sp, #112]
   322b4:	mov	w0, #0xffffff80            	// #-128
   322b8:	str	w0, [sp, #116]
   322bc:	mov	w3, #0x6667                	// #26215
   322c0:	movk	w3, #0x6666, lsl #16
   322c4:	smull	x3, w19, w3
   322c8:	asr	x3, x3, #35
   322cc:	sub	w3, w3, w19, asr #31
   322d0:	add	w3, w3, w3, lsl #2
   322d4:	sub	w2, w19, w3, lsl #2
   322d8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   322dc:	add	x3, x3, #0x20
   322e0:	lsl	w2, w2, #1
   322e4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   322e8:	add	x1, x1, #0xaf8
   322ec:	mov	x0, x21
   322f0:	bl	5730 <PerlIO_printf@plt>
   322f4:	ldp	x0, x1, [sp, #88]
   322f8:	stp	x0, x1, [sp, #48]
   322fc:	ldp	x0, x1, [sp, #104]
   32300:	stp	x0, x1, [sp, #64]
   32304:	add	x2, sp, #0x30
   32308:	mov	x1, x20
   3230c:	mov	x0, x21
   32310:	bl	5480 <PerlIO_vprintf@plt>
   32314:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   32318:	ldr	x1, [x1, #3920]
   3231c:	ldr	x2, [sp, #120]
   32320:	ldr	x1, [x1]
   32324:	eor	x1, x2, x1
   32328:	cbnz	x1, 32360 <Perl_re_indentf@@Base+0x134>
   3232c:	ldp	x19, x20, [sp, #16]
   32330:	ldr	x21, [sp, #32]
   32334:	ldp	x29, x30, [sp], #304
   32338:	ret
   3233c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32340:	add	x3, x3, #0xc10
   32344:	add	x3, x3, #0x558
   32348:	mov	w2, #0x411                 	// #1041
   3234c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32350:	add	x1, x1, #0xfb8
   32354:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   32358:	add	x0, x0, #0x5d0
   3235c:	bl	58e0 <__assert_fail@plt>
   32360:	bl	5300 <__stack_chk_fail@plt>
   32364:	stp	x29, x30, [sp, #-112]!
   32368:	mov	x29, sp
   3236c:	stp	x19, x20, [sp, #16]
   32370:	stp	x21, x22, [sp, #32]
   32374:	stp	x23, x24, [sp, #48]
   32378:	mov	x19, x0
   3237c:	mov	x24, x1
   32380:	mov	x20, x2
   32384:	mov	w23, w3
   32388:	mov	w22, w4
   3238c:	str	xzr, [sp, #104]
   32390:	ldr	x0, [x0, #224]
   32394:	cbz	x0, 323fc <Perl_re_indentf@@Base+0x1d0>
   32398:	mov	w2, #0x1                   	// #1
   3239c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   323a0:	add	x1, x1, #0x608
   323a4:	mov	x0, x19
   323a8:	bl	54f0 <Perl_get_sv@plt>
   323ac:	mov	x21, x0
   323b0:	cbz	x0, 323fc <Perl_re_indentf@@Base+0x1d0>
   323b4:	ldr	w0, [x0, #12]
   323b8:	tbz	w0, #8, 3242c <Perl_re_indentf@@Base+0x200>
   323bc:	ldr	w1, [x21, #12]
   323c0:	and	w0, w1, #0x3fff00
   323c4:	and	w0, w0, #0xffe001ff
   323c8:	cmp	w0, #0x100
   323cc:	b.ne	324a8 <Perl_re_indentf@@Base+0x27c>  // b.any
   323d0:	and	w2, w1, #0xf
   323d4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   323d8:	ldr	x0, [x0, #3712]
   323dc:	ldrb	w0, [x0, w2, uxtw]
   323e0:	cbz	w0, 32440 <Perl_re_indentf@@Base+0x214>
   323e4:	and	w0, w1, #0xc000
   323e8:	cmp	w0, #0x8, lsl #12
   323ec:	b.eq	3246c <Perl_re_indentf@@Base+0x240>  // b.none
   323f0:	ldr	x0, [x21]
   323f4:	ldr	x0, [x0, #32]
   323f8:	str	x0, [sp, #104]
   323fc:	ldr	w0, [x19, #2368]
   32400:	tbnz	w0, #20, 324bc <Perl_re_indentf@@Base+0x290>
   32404:	ldr	x1, [sp, #104]
   32408:	mov	x0, #0x2                   	// #2
   3240c:	movk	x0, #0x10, lsl #16
   32410:	bics	xzr, x0, x1
   32414:	b.eq	324bc <Perl_re_indentf@@Base+0x290>  // b.none
   32418:	ldp	x19, x20, [sp, #16]
   3241c:	ldp	x21, x22, [sp, #32]
   32420:	ldp	x23, x24, [sp, #48]
   32424:	ldp	x29, x30, [sp], #112
   32428:	ret
   3242c:	mov	x2, #0xff08                	// #65288
   32430:	mov	x1, x21
   32434:	mov	x0, x19
   32438:	bl	5310 <Perl_sv_setuv@plt>
   3243c:	b	323bc <Perl_re_indentf@@Base+0x190>
   32440:	stp	x25, x26, [sp, #64]
   32444:	str	x27, [sp, #80]
   32448:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3244c:	add	x3, x3, #0xc10
   32450:	add	x3, x3, #0x568
   32454:	mov	w2, #0x463                 	// #1123
   32458:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3245c:	add	x1, x1, #0xfb8
   32460:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32464:	add	x0, x0, #0xda0
   32468:	bl	58e0 <__assert_fail@plt>
   3246c:	and	w1, w1, #0xff
   32470:	sub	w1, w1, #0x9
   32474:	cmp	w1, #0x1
   32478:	b.hi	323f0 <Perl_re_indentf@@Base+0x1c4>  // b.pmore
   3247c:	stp	x25, x26, [sp, #64]
   32480:	str	x27, [sp, #80]
   32484:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32488:	add	x3, x3, #0xc10
   3248c:	add	x3, x3, #0x568
   32490:	mov	w2, #0x463                 	// #1123
   32494:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32498:	add	x1, x1, #0xfb8
   3249c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   324a0:	add	x0, x0, #0xdd0
   324a4:	bl	58e0 <__assert_fail@plt>
   324a8:	mov	w2, #0x2                   	// #2
   324ac:	mov	x1, x21
   324b0:	mov	x0, x19
   324b4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   324b8:	b	323f8 <Perl_re_indentf@@Base+0x1cc>
   324bc:	cbz	x20, 32418 <Perl_re_indentf@@Base+0x1ec>
   324c0:	ldrsw	x6, [x20, #152]
   324c4:	ldr	x5, [x20, #8]
   324c8:	ldr	x4, [x20]
   324cc:	mov	x3, x24
   324d0:	mov	w2, w23
   324d4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   324d8:	add	x1, x1, #0xb10
   324dc:	mov	x0, x19
   324e0:	bl	5940 <Perl_re_indentf@plt>
   324e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   324e8:	add	x3, x3, #0x538
   324ec:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   324f0:	add	x2, x2, #0xb30
   324f4:	ldr	w1, [x20, #152]
   324f8:	mov	x0, x19
   324fc:	bl	31ff4 <Perl_re_printf@@Base+0x2118>
   32500:	ldrsw	x2, [x20, #156]
   32504:	ldr	x0, [x20, #160]
   32508:	mov	x3, #0xffffffffffffffff    	// #-1
   3250c:	cbz	x0, 32514 <Perl_re_indentf@@Base+0x2e8>
   32510:	ldr	x3, [x0]
   32514:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   32518:	add	x0, x0, #0x20
   3251c:	adrp	x4, 77000 <boot_re@@Base+0x1541c>
   32520:	add	x4, x4, #0xb00
   32524:	cmp	w22, #0x0
   32528:	csel	x4, x4, x0, ne  // ne = any
   3252c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32530:	add	x1, x1, #0xb38
   32534:	mov	x0, x19
   32538:	bl	50e0 <Perl_re_printf@plt>
   3253c:	ldr	x0, [x20, #16]
   32540:	cbz	x0, 3264c <Perl_re_indentf@@Base+0x420>
   32544:	stp	x25, x26, [sp, #64]
   32548:	str	x27, [sp, #80]
   3254c:	ldr	x5, [x20, #40]
   32550:	ldr	x4, [x20, #32]
   32554:	ldr	x3, [x20, #24]
   32558:	ldr	x2, [x0, #16]
   3255c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32560:	add	x1, x1, #0xb58
   32564:	mov	x0, x19
   32568:	bl	50e0 <Perl_re_printf@plt>
   3256c:	mov	w21, #0x0                   	// #0
   32570:	adrp	x23, 7d000 <boot_re@@Base+0x1b41c>
   32574:	add	x23, x23, #0x20
   32578:	adrp	x22, 77000 <boot_re@@Base+0x1541c>
   3257c:	add	x22, x22, #0xb08
   32580:	adrp	x24, 77000 <boot_re@@Base+0x1541c>
   32584:	add	x24, x24, #0xb90
   32588:	adrp	x25, 77000 <boot_re@@Base+0x1541c>
   3258c:	b	325d0 <Perl_re_indentf@@Base+0x3a4>
   32590:	ldr	x0, [x20, #56]
   32594:	ldr	x6, [x20, #72]
   32598:	ldr	x5, [x20, #64]
   3259c:	ldr	x4, [x0, #16]
   325a0:	mov	x3, x24
   325a4:	add	x1, x25, #0xb78
   325a8:	mov	x0, x19
   325ac:	bl	50e0 <Perl_re_printf@plt>
   325b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   325b4:	add	x3, x3, #0x538
   325b8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   325bc:	add	x2, x2, #0xb30
   325c0:	ldr	w1, [x20, #96]
   325c4:	mov	x0, x19
   325c8:	bl	31ff4 <Perl_re_printf@@Base+0x2118>
   325cc:	add	w21, w21, #0x1
   325d0:	ldrb	w1, [x20, #48]
   325d4:	cmp	w21, w1
   325d8:	csel	x2, x22, x23, eq  // eq = none
   325dc:	cbz	w21, 32590 <Perl_re_indentf@@Base+0x364>
   325e0:	sxtw	x27, w21
   325e4:	sbfiz	x26, x21, #1, #32
   325e8:	add	x0, x26, x27
   325ec:	add	x0, x20, x0, lsl #4
   325f0:	ldr	x3, [x0, #56]
   325f4:	ldr	x6, [x0, #72]
   325f8:	ldr	x5, [x0, #64]
   325fc:	ldr	x4, [x3, #16]
   32600:	adrp	x3, 77000 <boot_re@@Base+0x1541c>
   32604:	add	x3, x3, #0xb70
   32608:	add	x1, x25, #0xb78
   3260c:	mov	x0, x19
   32610:	bl	50e0 <Perl_re_printf@plt>
   32614:	add	x0, x26, x27
   32618:	add	x0, x20, x0, lsl #4
   3261c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32620:	add	x3, x3, #0x538
   32624:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   32628:	add	x2, x2, #0xb30
   3262c:	ldr	w1, [x0, #96]
   32630:	mov	x0, x19
   32634:	bl	31ff4 <Perl_re_printf@@Base+0x2118>
   32638:	add	w0, w21, #0x1
   3263c:	cmp	w0, #0x1
   32640:	b.le	325cc <Perl_re_indentf@@Base+0x3a0>
   32644:	ldp	x25, x26, [sp, #64]
   32648:	ldr	x27, [sp, #80]
   3264c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32650:	add	x1, x1, #0x8d8
   32654:	mov	x0, x19
   32658:	bl	50e0 <Perl_re_printf@plt>
   3265c:	b	32418 <Perl_re_indentf@@Base+0x1ec>
   32660:	stp	x29, x30, [sp, #-96]!
   32664:	mov	x29, sp
   32668:	stp	x19, x20, [sp, #16]
   3266c:	stp	x21, x22, [sp, #32]
   32670:	stp	x23, x24, [sp, #48]
   32674:	stp	x25, x26, [sp, #64]
   32678:	mov	x20, x0
   3267c:	mov	x19, x2
   32680:	mov	x22, x3
   32684:	mov	w21, w4
   32688:	ldr	w0, [x1, #192]
   3268c:	cbnz	w0, 3280c <Perl_re_indentf@@Base+0x5e0>
   32690:	ldr	x2, [x2, #16]
   32694:	ldr	w0, [x2, #12]
   32698:	and	w3, w0, #0xf
   3269c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   326a0:	ldr	x1, [x1, #3888]
   326a4:	ldrb	w1, [x1, w3, uxtw]
   326a8:	cbz	w1, 32850 <Perl_re_indentf@@Base+0x624>
   326ac:	and	w1, w0, #0xc000
   326b0:	cmp	w1, #0x8, lsl #12
   326b4:	b.eq	32874 <Perl_re_indentf@@Base+0x648>  // b.none
   326b8:	and	w0, w0, #0xff
   326bc:	cmp	w0, #0xf
   326c0:	b.eq	328a8 <Perl_re_indentf@@Base+0x67c>  // b.none
   326c4:	ldr	x0, [x2]
   326c8:	ldr	x24, [x0, #16]
   326cc:	ldrb	w1, [x19, #48]
   326d0:	add	x1, x1, #0x1
   326d4:	add	x1, x1, x1, lsl #1
   326d8:	add	x1, x19, x1, lsl #4
   326dc:	ldr	x25, [x1, #8]
   326e0:	ldr	w0, [x25, #12]
   326e4:	and	w2, w0, #0xf
   326e8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   326ec:	ldr	x1, [x1, #3888]
   326f0:	ldrb	w1, [x1, w2, uxtw]
   326f4:	cbz	w1, 328d8 <Perl_re_indentf@@Base+0x6ac>
   326f8:	and	w1, w0, #0xc000
   326fc:	cmp	w1, #0x8, lsl #12
   32700:	b.eq	328fc <Perl_re_indentf@@Base+0x6d0>  // b.none
   32704:	and	w0, w0, #0xff
   32708:	cmp	w0, #0xf
   3270c:	b.eq	32930 <Perl_re_indentf@@Base+0x704>  // b.none
   32710:	ldr	x0, [x25]
   32714:	ldr	x26, [x0, #16]
   32718:	str	xzr, [sp, #88]
   3271c:	ldr	x0, [x20, #224]
   32720:	cbz	x0, 32788 <Perl_re_indentf@@Base+0x55c>
   32724:	mov	w2, #0x1                   	// #1
   32728:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3272c:	add	x1, x1, #0x608
   32730:	mov	x0, x20
   32734:	bl	54f0 <Perl_get_sv@plt>
   32738:	mov	x23, x0
   3273c:	cbz	x0, 32788 <Perl_re_indentf@@Base+0x55c>
   32740:	ldr	w0, [x0, #12]
   32744:	tbz	w0, #8, 32960 <Perl_re_indentf@@Base+0x734>
   32748:	ldr	w1, [x23, #12]
   3274c:	and	w0, w1, #0x3fff00
   32750:	and	w0, w0, #0xffe001ff
   32754:	cmp	w0, #0x100
   32758:	b.ne	329cc <Perl_re_indentf@@Base+0x7a0>  // b.any
   3275c:	and	w2, w1, #0xf
   32760:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   32764:	ldr	x0, [x0, #3712]
   32768:	ldrb	w0, [x0, w2, uxtw]
   3276c:	cbz	w0, 32974 <Perl_re_indentf@@Base+0x748>
   32770:	and	w0, w1, #0xc000
   32774:	cmp	w0, #0x8, lsl #12
   32778:	b.eq	32998 <Perl_re_indentf@@Base+0x76c>  // b.none
   3277c:	ldr	x0, [x23]
   32780:	ldr	x0, [x0, #32]
   32784:	str	x0, [sp, #88]
   32788:	cbz	x22, 329e0 <Perl_re_indentf@@Base+0x7b4>
   3278c:	cmp	x26, x24
   32790:	b.hi	32a78 <Perl_re_indentf@@Base+0x84c>  // b.pmore
   32794:	b.cc	327a4 <Perl_re_indentf@@Base+0x578>  // b.lo, b.ul, b.last
   32798:	ldr	w0, [x19, #152]
   3279c:	tst	x0, #0x3
   327a0:	b.eq	32a78 <Perl_re_indentf@@Base+0x84c>  // b.none
   327a4:	ldrb	w23, [x19, #48]
   327a8:	ldr	x2, [x19, #16]
   327ac:	cmp	x2, x25
   327b0:	b.eq	327cc <Perl_re_indentf@@Base+0x5a0>  // b.none
   327b4:	mov	w3, #0x2                   	// #2
   327b8:	mov	x1, x25
   327bc:	mov	x0, x20
   327c0:	bl	55b0 <Perl_sv_setsv_flags@plt>
   327c4:	ldr	w0, [x25, #12]
   327c8:	tbnz	w0, #22, 32a04 <Perl_re_indentf@@Base+0x7d8>
   327cc:	cbz	x24, 32a14 <Perl_re_indentf@@Base+0x7e8>
   327d0:	mov	w0, w23
   327d4:	sxtw	x1, w23
   327d8:	add	x1, x1, #0x1
   327dc:	add	x1, x1, x1, lsl #1
   327e0:	add	x1, x19, x1, lsl #4
   327e4:	ldr	x2, [x19, #32]
   327e8:	str	x2, [x1, #16]
   327ec:	cbz	w23, 32a34 <Perl_re_indentf@@Base+0x808>
   327f0:	ldr	x1, [x19, #40]
   327f4:	cmp	x1, #0x0
   327f8:	ccmp	w21, #0x0, #0x0, ge  // ge = tcont
   327fc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   32800:	csel	x1, x1, x2, eq  // eq = none
   32804:	str	x1, [x19, #120]
   32808:	b	32a3c <Perl_re_indentf@@Base+0x810>
   3280c:	mov	x23, x1
   32810:	ldr	x1, [x2, #16]
   32814:	mov	x0, x20
   32818:	bl	5850 <Perl_sv_len_utf8@plt>
   3281c:	mov	x24, x0
   32820:	ldrb	w0, [x19, #48]
   32824:	add	x0, x0, #0x1
   32828:	add	x0, x0, x0, lsl #1
   3282c:	add	x0, x19, x0, lsl #4
   32830:	ldr	x25, [x0, #8]
   32834:	ldr	w0, [x23, #192]
   32838:	cbz	w0, 326e0 <Perl_re_indentf@@Base+0x4b4>
   3283c:	mov	x1, x25
   32840:	mov	x0, x20
   32844:	bl	5850 <Perl_sv_len_utf8@plt>
   32848:	mov	x26, x0
   3284c:	b	32718 <Perl_re_indentf@@Base+0x4ec>
   32850:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32854:	add	x3, x3, #0xc10
   32858:	add	x3, x3, #0x580
   3285c:	mov	w2, #0x569                 	// #1385
   32860:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32864:	add	x1, x1, #0xfb8
   32868:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3286c:	add	x0, x0, #0xe40
   32870:	bl	58e0 <__assert_fail@plt>
   32874:	and	w1, w0, #0xff
   32878:	sub	w1, w1, #0x9
   3287c:	cmp	w1, #0x1
   32880:	b.hi	326b8 <Perl_re_indentf@@Base+0x48c>  // b.pmore
   32884:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32888:	add	x3, x3, #0xc10
   3288c:	add	x3, x3, #0x580
   32890:	mov	w2, #0x569                 	// #1385
   32894:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32898:	add	x1, x1, #0xfb8
   3289c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   328a0:	add	x0, x0, #0xe70
   328a4:	bl	58e0 <__assert_fail@plt>
   328a8:	ldr	x0, [x2]
   328ac:	ldrb	w0, [x0, #129]
   328b0:	tbnz	w0, #6, 326c4 <Perl_re_indentf@@Base+0x498>
   328b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   328b8:	add	x3, x3, #0xc10
   328bc:	add	x3, x3, #0x580
   328c0:	mov	w2, #0x569                 	// #1385
   328c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   328c8:	add	x1, x1, #0xfb8
   328cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   328d0:	add	x0, x0, #0xe88
   328d4:	bl	58e0 <__assert_fail@plt>
   328d8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   328dc:	add	x3, x3, #0xc10
   328e0:	add	x3, x3, #0x580
   328e4:	mov	w2, #0x56b                 	// #1387
   328e8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   328ec:	add	x1, x1, #0xfb8
   328f0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   328f4:	add	x0, x0, #0xe40
   328f8:	bl	58e0 <__assert_fail@plt>
   328fc:	and	w1, w0, #0xff
   32900:	sub	w1, w1, #0x9
   32904:	cmp	w1, #0x1
   32908:	b.hi	32704 <Perl_re_indentf@@Base+0x4d8>  // b.pmore
   3290c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32910:	add	x3, x3, #0xc10
   32914:	add	x3, x3, #0x580
   32918:	mov	w2, #0x56b                 	// #1387
   3291c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32920:	add	x1, x1, #0xfb8
   32924:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32928:	add	x0, x0, #0xe70
   3292c:	bl	58e0 <__assert_fail@plt>
   32930:	ldr	x0, [x25]
   32934:	ldrb	w0, [x0, #129]
   32938:	tbnz	w0, #6, 32710 <Perl_re_indentf@@Base+0x4e4>
   3293c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32940:	add	x3, x3, #0xc10
   32944:	add	x3, x3, #0x580
   32948:	mov	w2, #0x56b                 	// #1387
   3294c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32950:	add	x1, x1, #0xfb8
   32954:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32958:	add	x0, x0, #0xe88
   3295c:	bl	58e0 <__assert_fail@plt>
   32960:	mov	x2, #0xff08                	// #65288
   32964:	mov	x1, x23
   32968:	mov	x0, x20
   3296c:	bl	5310 <Perl_sv_setuv@plt>
   32970:	b	32748 <Perl_re_indentf@@Base+0x51c>
   32974:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32978:	add	x3, x3, #0xc10
   3297c:	add	x3, x3, #0x580
   32980:	mov	w2, #0x56c                 	// #1388
   32984:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32988:	add	x1, x1, #0xfb8
   3298c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32990:	add	x0, x0, #0xda0
   32994:	bl	58e0 <__assert_fail@plt>
   32998:	and	w1, w1, #0xff
   3299c:	sub	w1, w1, #0x9
   329a0:	cmp	w1, #0x1
   329a4:	b.hi	3277c <Perl_re_indentf@@Base+0x550>  // b.pmore
   329a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   329ac:	add	x3, x3, #0xc10
   329b0:	add	x3, x3, #0x580
   329b4:	mov	w2, #0x56c                 	// #1388
   329b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   329bc:	add	x1, x1, #0xfb8
   329c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   329c4:	add	x0, x0, #0xdd0
   329c8:	bl	58e0 <__assert_fail@plt>
   329cc:	mov	w2, #0x2                   	// #2
   329d0:	mov	x1, x23
   329d4:	mov	x0, x20
   329d8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   329dc:	b	32784 <Perl_re_indentf@@Base+0x558>
   329e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   329e4:	add	x3, x3, #0xc10
   329e8:	add	x3, x3, #0x580
   329ec:	mov	w2, #0x56e                 	// #1390
   329f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   329f4:	add	x1, x1, #0xfb8
   329f8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   329fc:	add	x0, x0, #0xb98
   32a00:	bl	58e0 <__assert_fail@plt>
   32a04:	mov	x1, x25
   32a08:	mov	x0, x20
   32a0c:	bl	5590 <Perl_mg_set@plt>
   32a10:	b	327cc <Perl_re_indentf@@Base+0x5a0>
   32a14:	ldr	x2, [x19]
   32a18:	mov	w0, w23
   32a1c:	sxtw	x1, w23
   32a20:	add	x1, x1, #0x1
   32a24:	add	x1, x1, x1, lsl #1
   32a28:	add	x1, x19, x1, lsl #4
   32a2c:	str	x2, [x1, #16]
   32a30:	cbnz	w23, 32b10 <Perl_re_indentf@@Base+0x8e4>
   32a34:	ldr	x1, [x19, #64]
   32a38:	str	x1, [x19, #72]
   32a3c:	ldr	w1, [x19, #152]
   32a40:	ands	w1, w1, #0x3
   32a44:	b.eq	32b30 <Perl_re_indentf@@Base+0x904>  // b.none
   32a48:	sbfiz	x2, x0, #1, #32
   32a4c:	add	x2, x2, w0, sxtw
   32a50:	add	x2, x19, x2, lsl #4
   32a54:	ldr	w2, [x2, #96]
   32a58:	orr	w1, w1, w2
   32a5c:	sxtw	x2, w0
   32a60:	sbfiz	x0, x0, #1, #32
   32a64:	add	x3, x0, x2
   32a68:	add	x3, x19, x3, lsl #4
   32a6c:	str	w1, [x3, #96]
   32a70:	str	x22, [x3, #80]
   32a74:	str	xzr, [x3, #88]
   32a78:	ldr	x2, [x19, #16]
   32a7c:	ldr	w0, [x2, #12]
   32a80:	and	w3, w0, #0xf
   32a84:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   32a88:	ldr	x1, [x1, #3888]
   32a8c:	ldrb	w1, [x1, w3, uxtw]
   32a90:	cbz	w1, 32b48 <Perl_re_indentf@@Base+0x91c>
   32a94:	and	w1, w0, #0xc000
   32a98:	cmp	w1, #0x8, lsl #12
   32a9c:	b.eq	32b6c <Perl_re_indentf@@Base+0x940>  // b.none
   32aa0:	and	w0, w0, #0xff
   32aa4:	cmp	w0, #0xf
   32aa8:	b.eq	32ba0 <Perl_re_indentf@@Base+0x974>  // b.none
   32aac:	ldr	x0, [x2]
   32ab0:	str	xzr, [x0, #16]
   32ab4:	ldr	x0, [x19, #16]
   32ab8:	ldr	w1, [x0, #12]
   32abc:	tbz	w1, #29, 32ac8 <Perl_re_indentf@@Base+0x89c>
   32ac0:	tst	w1, #0xe00000
   32ac4:	b.ne	32bd0 <Perl_re_indentf@@Base+0x9a4>  // b.any
   32ac8:	mov	x0, #0xffffffffffffffff    	// #-1
   32acc:	str	x0, [x19, #24]
   32ad0:	ldr	w0, [x19, #152]
   32ad4:	and	w0, w0, #0xfffffffc
   32ad8:	str	w0, [x19, #152]
   32adc:	mov	w4, w21
   32ae0:	mov	w3, #0x0                   	// #0
   32ae4:	mov	x2, x19
   32ae8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32aec:	add	x1, x1, #0xc50
   32af0:	mov	x0, x20
   32af4:	bl	32364 <Perl_re_indentf@@Base+0x138>
   32af8:	ldp	x19, x20, [sp, #16]
   32afc:	ldp	x21, x22, [sp, #32]
   32b00:	ldp	x23, x24, [sp, #48]
   32b04:	ldp	x25, x26, [sp, #64]
   32b08:	ldp	x29, x30, [sp], #96
   32b0c:	ret
   32b10:	ldr	x4, [x19, #8]
   32b14:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
   32b18:	sub	x3, x3, x2
   32b1c:	add	x1, x4, x2
   32b20:	cmp	x4, x3
   32b24:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   32b28:	csel	x1, x1, x2, le
   32b2c:	b	327f4 <Perl_re_indentf@@Base+0x5c8>
   32b30:	sbfiz	x1, x0, #1, #32
   32b34:	add	x1, x1, w0, sxtw
   32b38:	add	x1, x19, x1, lsl #4
   32b3c:	ldr	w1, [x1, #96]
   32b40:	and	w1, w1, #0xfffffffc
   32b44:	b	32a5c <Perl_re_indentf@@Base+0x830>
   32b48:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32b4c:	add	x3, x3, #0xc10
   32b50:	add	x3, x3, #0x580
   32b54:	mov	w2, #0x58a                 	// #1418
   32b58:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32b5c:	add	x1, x1, #0xfb8
   32b60:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32b64:	add	x0, x0, #0xba0
   32b68:	bl	58e0 <__assert_fail@plt>
   32b6c:	and	w1, w0, #0xff
   32b70:	sub	w1, w1, #0x9
   32b74:	cmp	w1, #0x1
   32b78:	b.hi	32aa0 <Perl_re_indentf@@Base+0x874>  // b.pmore
   32b7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32b80:	add	x3, x3, #0xc10
   32b84:	add	x3, x3, #0x580
   32b88:	mov	w2, #0x58a                 	// #1418
   32b8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32b90:	add	x1, x1, #0xfb8
   32b94:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32b98:	add	x0, x0, #0xbd8
   32b9c:	bl	58e0 <__assert_fail@plt>
   32ba0:	ldr	x0, [x2]
   32ba4:	ldrb	w0, [x0, #129]
   32ba8:	tbnz	w0, #6, 32aac <Perl_re_indentf@@Base+0x880>
   32bac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32bb0:	add	x3, x3, #0xc10
   32bb4:	add	x3, x3, #0x580
   32bb8:	mov	w2, #0x58a                 	// #1418
   32bbc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32bc0:	add	x1, x1, #0xfb8
   32bc4:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32bc8:	add	x0, x0, #0xbf8
   32bcc:	bl	58e0 <__assert_fail@plt>
   32bd0:	mov	w1, #0x77                  	// #119
   32bd4:	bl	57d0 <Perl_mg_find@plt>
   32bd8:	cbz	x0, 32ac8 <Perl_re_indentf@@Base+0x89c>
   32bdc:	str	xzr, [x0, #24]
   32be0:	b	32ac8 <Perl_re_indentf@@Base+0x89c>
   32be4:	sub	sp, sp, #0x160
   32be8:	stp	x29, x30, [sp, #16]
   32bec:	add	x29, sp, #0x10
   32bf0:	stp	x19, x20, [sp, #32]
   32bf4:	stp	x21, x22, [sp, #48]
   32bf8:	stp	x23, x24, [sp, #64]
   32bfc:	stp	x25, x26, [sp, #80]
   32c00:	stp	x27, x28, [sp, #96]
   32c04:	mov	x28, x0
   32c08:	mov	x25, x1
   32c0c:	str	x2, [sp, #296]
   32c10:	str	x3, [sp, #256]
   32c14:	str	x4, [sp, #184]
   32c18:	str	x5, [sp, #176]
   32c1c:	str	w6, [sp, #284]
   32c20:	str	w7, [sp, #200]
   32c24:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   32c28:	ldr	x1, [x1, #3920]
   32c2c:	ldr	x2, [x1]
   32c30:	str	x2, [sp, #344]
   32c34:	mov	x2, #0x0                   	// #0
   32c38:	mov	w1, #0xb                   	// #11
   32c3c:	bl	57e0 <Perl_newSV_type@plt>
   32c40:	str	x0, [sp, #144]
   32c44:	str	xzr, [sp, #304]
   32c48:	mov	w2, #0x4                   	// #4
   32c4c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32c50:	add	x1, x1, #0xc68
   32c54:	mov	x0, x25
   32c58:	bl	26be8 <my_regexec@@Base+0x36f4>
   32c5c:	str	w0, [sp, #288]
   32c60:	str	xzr, [sp, #312]
   32c64:	ldr	x0, [x28, #224]
   32c68:	cbz	x0, 32cd0 <Perl_re_indentf@@Base+0xaa4>
   32c6c:	mov	w2, #0x1                   	// #1
   32c70:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   32c74:	add	x1, x1, #0x608
   32c78:	mov	x0, x28
   32c7c:	bl	54f0 <Perl_get_sv@plt>
   32c80:	mov	x19, x0
   32c84:	cbz	x0, 32cd0 <Perl_re_indentf@@Base+0xaa4>
   32c88:	ldr	w0, [x0, #12]
   32c8c:	tbz	w0, #8, 32d74 <Perl_re_indentf@@Base+0xb48>
   32c90:	ldr	w0, [x19, #12]
   32c94:	and	w1, w0, #0x3fff00
   32c98:	and	w1, w1, #0xffe001ff
   32c9c:	cmp	w1, #0x100
   32ca0:	b.ne	32de0 <Perl_re_indentf@@Base+0xbb4>  // b.any
   32ca4:	and	w2, w0, #0xf
   32ca8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   32cac:	ldr	x1, [x1, #3712]
   32cb0:	ldrb	w1, [x1, w2, uxtw]
   32cb4:	cbz	w1, 32d88 <Perl_re_indentf@@Base+0xb5c>
   32cb8:	and	w1, w0, #0xc000
   32cbc:	cmp	w1, #0x8, lsl #12
   32cc0:	b.eq	32dac <Perl_re_indentf@@Base+0xb80>  // b.none
   32cc4:	ldr	x0, [x19]
   32cc8:	ldr	x0, [x0, #32]
   32ccc:	str	x0, [sp, #312]
   32cd0:	cbz	x25, 32df4 <Perl_re_indentf@@Base+0xbc8>
   32cd4:	ldr	x0, [sp, #296]
   32cd8:	cbz	x0, 32e18 <Perl_re_indentf@@Base+0xbec>
   32cdc:	ldr	x0, [sp, #256]
   32ce0:	cbz	x0, 32e3c <Perl_re_indentf@@Base+0xc10>
   32ce4:	ldr	x0, [sp, #184]
   32ce8:	cbz	x0, 32e60 <Perl_re_indentf@@Base+0xc34>
   32cec:	ldr	x0, [sp, #176]
   32cf0:	cbz	x0, 32e84 <Perl_re_indentf@@Base+0xc58>
   32cf4:	ldr	w0, [sp, #200]
   32cf8:	cmp	w0, #0x2a
   32cfc:	b.hi	32ed8 <Perl_re_indentf@@Base+0xcac>  // b.pmore
   32d00:	cmp	w0, #0x26
   32d04:	b.hi	33048 <Perl_re_indentf@@Base+0xe1c>  // b.pmore
   32d08:	cmp	w0, #0x24
   32d0c:	b.ls	32ea8 <Perl_re_indentf@@Base+0xc7c>  // b.plast
   32d10:	ldr	w0, [sp, #200]
   32d14:	cmp	w0, #0x25
   32d18:	b.ne	32eb4 <Perl_re_indentf@@Base+0xc88>  // b.any
   32d1c:	mov	x1, #0x68                  	// #104
   32d20:	mov	x0, #0x1                   	// #1
   32d24:	bl	5280 <calloc@plt>
   32d28:	mov	x27, x0
   32d2c:	mov	w0, #0x1                   	// #1
   32d30:	str	w0, [x27]
   32d34:	str	w0, [x27, #60]
   32d38:	ldr	w0, [sp, #284]
   32d3c:	str	w0, [x27, #88]
   32d40:	ldr	x0, [x25, #40]
   32d44:	ldr	x0, [x0, #24]
   32d48:	ldr	x1, [sp, #288]
   32d4c:	add	x0, x0, w1, uxtw #3
   32d50:	str	x27, [x0, #16]
   32d54:	mov	x1, #0x2                   	// #2
   32d58:	mov	x0, #0x100                 	// #256
   32d5c:	bl	5280 <calloc@plt>
   32d60:	str	x0, [x27, #8]
   32d64:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   32d68:	ldr	x26, [x0, #3944]
   32d6c:	str	wzr, [sp, #280]
   32d70:	b	32f50 <Perl_re_indentf@@Base+0xd24>
   32d74:	mov	x2, #0xff08                	// #65288
   32d78:	mov	x1, x19
   32d7c:	mov	x0, x28
   32d80:	bl	5310 <Perl_sv_setuv@plt>
   32d84:	b	32c90 <Perl_re_indentf@@Base+0xa64>
   32d88:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32d8c:	add	x3, x3, #0xc10
   32d90:	add	x3, x3, #0x590
   32d94:	mov	w2, #0xa71                 	// #2673
   32d98:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32d9c:	add	x1, x1, #0xfb8
   32da0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32da4:	add	x0, x0, #0xda0
   32da8:	bl	58e0 <__assert_fail@plt>
   32dac:	and	w0, w0, #0xff
   32db0:	sub	w0, w0, #0x9
   32db4:	cmp	w0, #0x1
   32db8:	b.hi	32cc4 <Perl_re_indentf@@Base+0xa98>  // b.pmore
   32dbc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32dc0:	add	x3, x3, #0xc10
   32dc4:	add	x3, x3, #0x590
   32dc8:	mov	w2, #0xa71                 	// #2673
   32dcc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32dd0:	add	x1, x1, #0xfb8
   32dd4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   32dd8:	add	x0, x0, #0xdd0
   32ddc:	bl	58e0 <__assert_fail@plt>
   32de0:	mov	w2, #0x2                   	// #2
   32de4:	mov	x1, x19
   32de8:	mov	x0, x28
   32dec:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   32df0:	b	32ccc <Perl_re_indentf@@Base+0xaa0>
   32df4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32df8:	add	x3, x3, #0xc10
   32dfc:	add	x3, x3, #0x590
   32e00:	mov	w2, #0xa73                 	// #2675
   32e04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32e08:	add	x1, x1, #0xfb8
   32e0c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   32e10:	add	x0, x0, #0xfe8
   32e14:	bl	58e0 <__assert_fail@plt>
   32e18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32e1c:	add	x3, x3, #0xc10
   32e20:	add	x3, x3, #0x590
   32e24:	mov	w2, #0xa73                 	// #2675
   32e28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32e2c:	add	x1, x1, #0xfb8
   32e30:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32e34:	add	x0, x0, #0xc70
   32e38:	bl	58e0 <__assert_fail@plt>
   32e3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32e40:	add	x3, x3, #0xc10
   32e44:	add	x3, x3, #0x590
   32e48:	mov	w2, #0xa73                 	// #2675
   32e4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32e50:	add	x1, x1, #0xfb8
   32e54:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32e58:	add	x0, x0, #0xc80
   32e5c:	bl	58e0 <__assert_fail@plt>
   32e60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32e64:	add	x3, x3, #0xc10
   32e68:	add	x3, x3, #0x590
   32e6c:	mov	w2, #0xa73                 	// #2675
   32e70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32e74:	add	x1, x1, #0xfb8
   32e78:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32e7c:	add	x0, x0, #0xc88
   32e80:	bl	58e0 <__assert_fail@plt>
   32e84:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   32e88:	add	x3, x3, #0xc10
   32e8c:	add	x3, x3, #0x590
   32e90:	mov	w2, #0xa73                 	// #2675
   32e94:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   32e98:	add	x1, x1, #0xfb8
   32e9c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   32ea0:	add	x0, x0, #0xc90
   32ea4:	bl	58e0 <__assert_fail@plt>
   32ea8:	ldr	w0, [sp, #200]
   32eac:	cmp	w0, #0x22
   32eb0:	b.hi	330c0 <Perl_re_indentf@@Base+0xe94>  // b.pmore
   32eb4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   32eb8:	ldr	x0, [x0, #3776]
   32ebc:	ldr	w1, [sp, #200]
   32ec0:	ldr	x3, [x0, w1, uxtw #3]
   32ec4:	mov	w2, w1
   32ec8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32ecc:	add	x1, x1, #0xc98
   32ed0:	mov	x0, x28
   32ed4:	bl	5420 <Perl_croak@plt>
   32ed8:	ldr	w0, [sp, #200]
   32edc:	cmp	w0, #0x2c
   32ee0:	b.ne	32eb4 <Perl_re_indentf@@Base+0xc88>  // b.any
   32ee4:	mov	x1, #0x68                  	// #104
   32ee8:	mov	x0, #0x1                   	// #1
   32eec:	bl	5280 <calloc@plt>
   32ef0:	mov	x27, x0
   32ef4:	mov	w0, #0x1                   	// #1
   32ef8:	str	w0, [x27]
   32efc:	str	w0, [x27, #60]
   32f00:	ldr	w0, [sp, #284]
   32f04:	str	w0, [x27, #88]
   32f08:	ldr	x0, [x25, #40]
   32f0c:	ldr	x0, [x0, #24]
   32f10:	ldr	x1, [sp, #288]
   32f14:	add	x0, x0, w1, uxtw #3
   32f18:	str	x27, [x0, #16]
   32f1c:	mov	x1, #0x2                   	// #2
   32f20:	mov	x0, #0x100                 	// #256
   32f24:	bl	5280 <calloc@plt>
   32f28:	str	x0, [x27, #8]
   32f2c:	ldr	w0, [sp, #200]
   32f30:	cmp	w0, #0x23
   32f34:	cset	w0, eq  // eq = none
   32f38:	str	w0, [sp, #280]
   32f3c:	mov	x26, #0x0                   	// #0
   32f40:	mov	x1, #0x1                   	// #1
   32f44:	mov	x0, #0x20                  	// #32
   32f48:	bl	5280 <calloc@plt>
   32f4c:	str	x0, [x27, #32]
   32f50:	ldr	w0, [x27, #88]
   32f54:	mov	x1, #0xc                   	// #12
   32f58:	add	w0, w0, #0x1
   32f5c:	bl	5280 <calloc@plt>
   32f60:	str	x0, [x27, #48]
   32f64:	mov	w1, #0xb                   	// #11
   32f68:	mov	x0, x28
   32f6c:	bl	57e0 <Perl_newSV_type@plt>
   32f70:	str	x0, [sp, #248]
   32f74:	mov	w2, #0x1                   	// #1
   32f78:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32f7c:	add	x1, x1, #0xcd0
   32f80:	mov	x0, x28
   32f84:	bl	54f0 <Perl_get_sv@plt>
   32f88:	str	x0, [sp, #224]
   32f8c:	cbz	x0, 330c8 <Perl_re_indentf@@Base+0xe9c>
   32f90:	ldr	x0, [sp, #224]
   32f94:	ldr	w0, [x0, #12]
   32f98:	tbz	w0, #8, 330ec <Perl_re_indentf@@Base+0xec0>
   32f9c:	ldr	w0, [x28, #2368]
   32fa0:	tbnz	w0, #20, 32fac <Perl_re_indentf@@Base+0xd80>
   32fa4:	ldr	x0, [sp, #312]
   32fa8:	tbz	w0, #2, 32ffc <Perl_re_indentf@@Base+0xdd0>
   32fac:	ldr	x0, [x25, #96]
   32fb0:	ldr	x1, [sp, #176]
   32fb4:	sub	x6, x1, x0
   32fb8:	ldr	x1, [sp, #184]
   32fbc:	sub	x5, x1, x0
   32fc0:	ldr	x1, [sp, #256]
   32fc4:	sub	x4, x1, x0
   32fc8:	ldr	x1, [sp, #296]
   32fcc:	sub	x0, x1, x0
   32fd0:	ldr	w7, [sp, #352]
   32fd4:	ubfx	x6, x6, #2, #32
   32fd8:	ubfx	x5, x5, #2, #32
   32fdc:	ubfx	x4, x4, #2, #32
   32fe0:	ubfx	x3, x0, #2, #32
   32fe4:	ldr	w0, [sp, #352]
   32fe8:	add	w2, w0, #0x1
   32fec:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   32ff0:	add	x1, x1, #0xcf0
   32ff4:	mov	x0, x28
   32ff8:	bl	5940 <Perl_re_indentf@plt>
   32ffc:	ldr	x0, [sp, #296]
   33000:	ldr	x1, [sp, #256]
   33004:	cmp	x0, x1
   33008:	b.eq	33100 <Perl_re_indentf@@Base+0xed4>  // b.none
   3300c:	ldr	x0, [sp, #256]
   33010:	add	x0, x0, #0x4
   33014:	str	x0, [sp, #208]
   33018:	ldr	x0, [sp, #256]
   3301c:	ldr	x1, [sp, #184]
   33020:	cmp	x0, x1
   33024:	b.cs	3876c <Perl_re_indentf@@Base+0x6540>  // b.hs, b.nlast
   33028:	str	x0, [sp, #168]
   3302c:	str	xzr, [sp, #120]
   33030:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   33034:	ldr	x0, [x0, #3888]
   33038:	str	x0, [sp, #216]
   3303c:	add	x0, sp, #0x150
   33040:	str	x0, [sp, #160]
   33044:	b	33160 <Perl_re_indentf@@Base+0xf34>
   33048:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3304c:	ldr	x26, [x0, #3752]
   33050:	mov	x1, #0x68                  	// #104
   33054:	mov	x0, #0x1                   	// #1
   33058:	bl	5280 <calloc@plt>
   3305c:	mov	x27, x0
   33060:	mov	w0, #0x1                   	// #1
   33064:	str	w0, [x27]
   33068:	str	w0, [x27, #60]
   3306c:	ldr	w0, [sp, #284]
   33070:	str	w0, [x27, #88]
   33074:	ldr	x0, [x25, #40]
   33078:	ldr	x0, [x0, #24]
   3307c:	ldr	x1, [sp, #288]
   33080:	add	x0, x0, w1, uxtw #3
   33084:	str	x27, [x0, #16]
   33088:	mov	x1, #0x2                   	// #2
   3308c:	mov	x0, #0x100                 	// #256
   33090:	bl	5280 <calloc@plt>
   33094:	str	x0, [x27, #8]
   33098:	ldr	w0, [sp, #200]
   3309c:	cmp	w0, #0x23
   330a0:	cset	w1, eq  // eq = none
   330a4:	str	w1, [sp, #280]
   330a8:	mov	w1, w0
   330ac:	sub	w0, w0, #0x23
   330b0:	cmp	w1, #0x2c
   330b4:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   330b8:	b.hi	32f50 <Perl_re_indentf@@Base+0xd24>  // b.pmore
   330bc:	b	32f40 <Perl_re_indentf@@Base+0xd14>
   330c0:	mov	x26, #0x0                   	// #0
   330c4:	b	33050 <Perl_re_indentf@@Base+0xe24>
   330c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   330cc:	add	x3, x3, #0xc10
   330d0:	add	x3, x3, #0x590
   330d4:	mov	w2, #0xa92                 	// #2706
   330d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   330dc:	add	x1, x1, #0xfb8
   330e0:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   330e4:	add	x0, x0, #0xce0
   330e8:	bl	58e0 <__assert_fail@plt>
   330ec:	mov	x2, #0x10000               	// #65536
   330f0:	ldr	x1, [sp, #224]
   330f4:	mov	x0, x28
   330f8:	bl	5970 <Perl_sv_setiv@plt>
   330fc:	b	32f9c <Perl_re_indentf@@Base+0xd70>
   33100:	ldr	x0, [sp, #184]
   33104:	ldrb	w0, [x0, #1]
   33108:	str	x1, [sp, #208]
   3310c:	cmp	w0, #0x22
   33110:	b.ne	33018 <Perl_re_indentf@@Base+0xdec>  // b.any
   33114:	b	3300c <Perl_re_indentf@@Base+0xde0>
   33118:	mov	x1, x20
   3311c:	mov	x0, x28
   33120:	bl	58a0 <Perl_regnext@plt>
   33124:	ldr	x1, [sp, #176]
   33128:	cmp	x1, x0
   3312c:	b.ls	33178 <Perl_re_indentf@@Base+0xf4c>  // b.plast
   33130:	mov	x20, x0
   33134:	b	33184 <Perl_re_indentf@@Base+0xf58>
   33138:	str	wzr, [sp, #136]
   3313c:	b	33208 <Perl_re_indentf@@Base+0xfdc>
   33140:	str	xzr, [x27, #64]
   33144:	ldr	x1, [sp, #168]
   33148:	mov	x0, x28
   3314c:	bl	58a0 <Perl_regnext@plt>
   33150:	str	x0, [sp, #168]
   33154:	ldr	x1, [sp, #184]
   33158:	cmp	x1, x0
   3315c:	b.ls	35390 <Perl_re_indentf@@Base+0x3164>  // b.plast
   33160:	ldr	x0, [sp, #168]
   33164:	add	x20, x0, #0x4
   33168:	ldr	x21, [x27, #32]
   3316c:	ldrb	w0, [x0, #5]
   33170:	cmp	w0, #0x2f
   33174:	b.eq	33118 <Perl_re_indentf@@Base+0xeec>  // b.none
   33178:	ldr	x0, [sp, #176]
   3317c:	cmp	x0, x20
   33180:	b.ls	33140 <Perl_re_indentf@@Base+0xf14>  // b.plast
   33184:	ldrb	w0, [x20, #1]
   33188:	ldr	w1, [sp, #200]
   3318c:	cmp	w0, w1
   33190:	b.eq	331bc <Perl_re_indentf@@Base+0xf90>  // b.none
   33194:	cmp	w0, #0x2c
   33198:	ldr	w2, [sp, #280]
   3319c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   331a0:	b.ne	331bc <Perl_re_indentf@@Base+0xf90>  // b.any
   331a4:	cmp	w1, #0x27
   331a8:	b.ne	33140 <Perl_re_indentf@@Base+0xf14>  // b.any
   331ac:	and	w0, w0, #0xfffffffb
   331b0:	and	w0, w0, #0xff
   331b4:	cmp	w0, #0x29
   331b8:	b.ne	33140 <Perl_re_indentf@@Base+0xf14>  // b.any
   331bc:	mov	x19, x20
   331c0:	ldrb	w0, [x19], #4
   331c4:	add	x0, x19, x0
   331c8:	str	x0, [sp, #112]
   331cc:	cbz	x21, 33138 <Perl_re_indentf@@Base+0xf0c>
   331d0:	ldrb	w0, [x20, #4]
   331d4:	ubfx	x2, x0, #3, #5
   331d8:	ldr	x3, [x27, #32]
   331dc:	and	w1, w0, #0x7
   331e0:	mov	w0, #0x1                   	// #1
   331e4:	lsl	w0, w0, w1
   331e8:	ldrb	w1, [x3, x2]
   331ec:	orr	w0, w0, w1
   331f0:	strb	w0, [x3, x2]
   331f4:	ldrb	w0, [x20, #1]
   331f8:	mov	w1, #0x1                   	// #1
   331fc:	str	w1, [sp, #136]
   33200:	cmp	w0, #0x29
   33204:	b.eq	3322c <Perl_re_indentf@@Base+0x1000>  // b.none
   33208:	ldr	x0, [sp, #112]
   3320c:	cmp	x19, x0
   33210:	b.cs	3533c <Perl_re_indentf@@Base+0x3110>  // b.hs, b.nlast
   33214:	mov	x24, #0x0                   	// #0
   33218:	str	xzr, [sp, #128]
   3321c:	mov	w21, #0x0                   	// #0
   33220:	add	x0, sp, #0x130
   33224:	str	x0, [sp, #152]
   33228:	b	3510c <Perl_re_indentf@@Base+0x2ee0>
   3322c:	ldr	x1, [x27, #32]
   33230:	ldrb	w0, [x1, #27]
   33234:	orr	w0, w0, #0xffffff80
   33238:	strb	w0, [x1, #27]
   3323c:	b	33208 <Perl_re_indentf@@Base+0xfdc>
   33240:	ldrb	w0, [x19]
   33244:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   33248:	ldr	x1, [x1, #4064]
   3324c:	ldrb	w2, [x1, w0, sxtw]
   33250:	and	x20, x2, #0xff
   33254:	add	x4, x19, w2, uxtb
   33258:	and	x1, x0, #0xff
   3325c:	cmp	x20, #0x1
   33260:	b.eq	332a0 <Perl_re_indentf@@Base+0x1074>  // b.none
   33264:	sub	w2, w2, #0x2
   33268:	mov	w1, #0x1f                  	// #31
   3326c:	asr	w1, w1, w2
   33270:	cmp	x20, #0x7
   33274:	csel	w1, w1, wzr, cc  // cc = lo, ul, last
   33278:	and	w1, w0, w1
   3327c:	sxtw	x1, w1
   33280:	add	x0, x19, #0x1
   33284:	cmp	x4, x0
   33288:	b.ls	332a0 <Perl_re_indentf@@Base+0x1074>  // b.plast
   3328c:	ldrb	w2, [x0], #1
   33290:	bfi	x2, x1, #6, #58
   33294:	mov	x1, x2
   33298:	cmp	x4, x0
   3329c:	b.ne	3328c <Perl_re_indentf@@Base+0x1060>  // b.any
   332a0:	str	x1, [sp, #304]
   332a4:	add	x24, x24, #0x1
   332a8:	cbnz	x26, 35144 <Perl_re_indentf@@Base+0x2f18>
   332ac:	ldr	x0, [sp, #128]
   332b0:	add	x0, x0, #0x1
   332b4:	str	x0, [sp, #128]
   332b8:	ldr	x0, [sp, #304]
   332bc:	cmp	x0, #0xff
   332c0:	b.hi	35174 <Perl_re_indentf@@Base+0x2f48>  // b.pmore
   332c4:	b	387fc <Perl_re_indentf@@Base+0x65d0>
   332c8:	ldrb	w1, [x19]
   332cc:	cmp	w1, #0xdf
   332d0:	b.eq	33398 <Perl_re_indentf@@Base+0x116c>  // b.none
   332d4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   332d8:	ldr	x0, [x0, #4048]
   332dc:	ldrb	w1, [x0, w1, sxtw]
   332e0:	cmp	x1, #0xb5
   332e4:	mov	x0, #0x3bc                 	// #956
   332e8:	csel	x0, x0, x1, eq  // eq = none
   332ec:	str	x0, [sp, #304]
   332f0:	add	x24, x24, #0x1
   332f4:	mov	x20, #0x1                   	// #1
   332f8:	mov	w0, w20
   332fc:	cmp	w21, #0x0
   33300:	b.gt	35164 <Perl_re_indentf@@Base+0x2f38>
   33304:	mov	x20, #0x1                   	// #1
   33308:	ldr	x0, [sp, #128]
   3330c:	add	x0, x0, #0x1
   33310:	str	x0, [sp, #128]
   33314:	cbz	w3, 344e0 <Perl_re_indentf@@Base+0x22b4>
   33318:	ldr	x0, [sp, #112]
   3331c:	sub	x0, x0, x19
   33320:	cmp	x0, #0x5
   33324:	b.le	33980 <Perl_re_indentf@@Base+0x1754>
   33328:	ldrb	w0, [x19]
   3332c:	cmp	w0, #0x61
   33330:	b.eq	333bc <Perl_re_indentf@@Base+0x1190>  // b.none
   33334:	cmp	w0, #0x66
   33338:	b.eq	333e0 <Perl_re_indentf@@Base+0x11b4>  // b.none
   3333c:	cmp	w0, #0x68
   33340:	b.eq	33438 <Perl_re_indentf@@Base+0x120c>  // b.none
   33344:	cmp	w0, #0x69
   33348:	b.eq	3345c <Perl_re_indentf@@Base+0x1230>  // b.none
   3334c:	cmp	w0, #0x6a
   33350:	b.eq	33480 <Perl_re_indentf@@Base+0x1254>  // b.none
   33354:	cmp	w0, #0x73
   33358:	b.eq	334a4 <Perl_re_indentf@@Base+0x1278>  // b.none
   3335c:	cmp	w0, #0x74
   33360:	b.eq	334c0 <Perl_re_indentf@@Base+0x1294>  // b.none
   33364:	sub	w1, w0, #0x77
   33368:	and	w1, w1, #0xfffffffd
   3336c:	tst	w1, #0xff
   33370:	b.ne	334e4 <Perl_re_indentf@@Base+0x12b8>  // b.any
   33374:	ldrb	w0, [x19, #1]
   33378:	mov	w21, #0x0                   	// #0
   3337c:	cmp	w0, #0xcc
   33380:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33384:	ldrb	w0, [x19, #2]
   33388:	cmp	w0, #0x8a
   3338c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33390:	mov	w21, #0x3                   	// #3
   33394:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33398:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3339c:	add	x3, x3, #0xc10
   333a0:	add	x3, x3, #0x590
   333a4:	mov	w2, #0xaec                 	// #2796
   333a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   333ac:	add	x1, x1, #0xfb8
   333b0:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   333b4:	add	x0, x0, #0xd30
   333b8:	bl	58e0 <__assert_fail@plt>
   333bc:	ldrb	w0, [x19, #1]
   333c0:	mov	w21, #0x0                   	// #0
   333c4:	cmp	w0, #0xca
   333c8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   333cc:	ldrb	w0, [x19, #2]
   333d0:	cmp	w0, #0xbe
   333d4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   333d8:	mov	w21, #0x3                   	// #3
   333dc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   333e0:	ldrb	w0, [x19, #1]
   333e4:	cmp	w0, #0x66
   333e8:	b.eq	33408 <Perl_re_indentf@@Base+0x11dc>  // b.none
   333ec:	cmp	w0, #0x69
   333f0:	mov	w1, #0x6c                  	// #108
   333f4:	ccmp	w0, w1, #0x4, ne  // ne = any
   333f8:	mov	w21, #0x0                   	// #0
   333fc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33400:	mov	w21, #0x2                   	// #2
   33404:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33408:	ldrb	w0, [x19, #2]
   3340c:	cmp	w0, #0x69
   33410:	mov	w1, #0x6c                  	// #108
   33414:	ccmp	w0, w1, #0x4, ne  // ne = any
   33418:	cset	w21, eq  // eq = none
   3341c:	add	w21, w21, #0x2
   33420:	ldrb	w1, [x19]
   33424:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   33428:	ldr	x0, [x0, #4064]
   3342c:	ldrb	w0, [x0, w1, sxtw]
   33430:	sub	w21, w21, w0
   33434:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   33438:	ldrb	w0, [x19, #1]
   3343c:	mov	w21, #0x0                   	// #0
   33440:	cmp	w0, #0xcc
   33444:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33448:	ldrb	w0, [x19, #2]
   3344c:	cmp	w0, #0xb1
   33450:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33454:	mov	w21, #0x3                   	// #3
   33458:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3345c:	ldrb	w0, [x19, #1]
   33460:	mov	w21, #0x0                   	// #0
   33464:	cmp	w0, #0xcc
   33468:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3346c:	ldrb	w0, [x19, #2]
   33470:	cmp	w0, #0x87
   33474:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33478:	mov	w21, #0x3                   	// #3
   3347c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33480:	ldrb	w0, [x19, #1]
   33484:	mov	w21, #0x0                   	// #0
   33488:	cmp	w0, #0xcc
   3348c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33490:	ldrb	w0, [x19, #2]
   33494:	cmp	w0, #0x8c
   33498:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3349c:	mov	w21, #0x3                   	// #3
   334a0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   334a4:	ldrb	w0, [x19, #1]
   334a8:	sub	w0, w0, #0x73
   334ac:	mov	w21, #0x0                   	// #0
   334b0:	cmp	w0, #0x1
   334b4:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   334b8:	mov	w21, #0x2                   	// #2
   334bc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   334c0:	ldrb	w0, [x19, #1]
   334c4:	mov	w21, #0x0                   	// #0
   334c8:	cmp	w0, #0xcc
   334cc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   334d0:	ldrb	w0, [x19, #2]
   334d4:	cmp	w0, #0x88
   334d8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   334dc:	mov	w21, #0x3                   	// #3
   334e0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   334e4:	cmp	w0, #0xc5
   334e8:	b.eq	3357c <Perl_re_indentf@@Base+0x1350>  // b.none
   334ec:	cmp	w0, #0xca
   334f0:	b.eq	335ac <Perl_re_indentf@@Base+0x1380>  // b.none
   334f4:	cmp	w0, #0xce
   334f8:	b.eq	335d0 <Perl_re_indentf@@Base+0x13a4>  // b.none
   334fc:	cmp	w0, #0xcf
   33500:	b.eq	33704 <Perl_re_indentf@@Base+0x14d8>  // b.none
   33504:	cmp	w0, #0xd5
   33508:	b.eq	338a8 <Perl_re_indentf@@Base+0x167c>  // b.none
   3350c:	mov	w21, #0x0                   	// #0
   33510:	cmp	w0, #0xe1
   33514:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33518:	ldrb	w0, [x19, #1]
   3351c:	cmp	w0, #0xbc
   33520:	b.eq	3394c <Perl_re_indentf@@Base+0x1720>  // b.none
   33524:	mov	w21, #0x0                   	// #0
   33528:	cmp	w0, #0xbd
   3352c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33530:	ldrb	w0, [x19, #2]
   33534:	and	w1, w0, #0xf8
   33538:	cmp	w1, #0xa0
   3353c:	b.eq	33558 <Perl_re_indentf@@Base+0x132c>  // b.none
   33540:	and	w1, w0, #0xfffffffb
   33544:	and	w1, w1, #0xff
   33548:	cmp	w1, #0xb0
   3354c:	mov	w1, #0xbc                  	// #188
   33550:	ccmp	w0, w1, #0x4, ne  // ne = any
   33554:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33558:	ldrb	w0, [x19, #3]
   3355c:	mov	w21, #0x0                   	// #0
   33560:	cmp	w0, #0xce
   33564:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33568:	ldrb	w0, [x19, #4]
   3356c:	cmp	w0, #0xb9
   33570:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33574:	mov	w21, #0x5                   	// #5
   33578:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3357c:	ldrb	w0, [x19, #1]
   33580:	mov	w21, #0x0                   	// #0
   33584:	cmp	w0, #0xbf
   33588:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3358c:	ldrb	w0, [x19, #2]
   33590:	cmp	w0, #0xc5
   33594:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33598:	ldrb	w0, [x19, #3]
   3359c:	cmp	w0, #0xbf
   335a0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   335a4:	mov	w21, #0x4                   	// #4
   335a8:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   335ac:	ldrb	w0, [x19, #1]
   335b0:	mov	w21, #0x0                   	// #0
   335b4:	cmp	w0, #0xbc
   335b8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   335bc:	ldrb	w0, [x19, #2]
   335c0:	cmp	w0, #0x6e
   335c4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   335c8:	mov	w21, #0x3                   	// #3
   335cc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   335d0:	ldrb	w0, [x19, #1]
   335d4:	and	w1, w0, #0xfffffffd
   335d8:	and	w1, w1, #0xff
   335dc:	cmp	w1, #0xac
   335e0:	b.eq	33620 <Perl_re_indentf@@Base+0x13f4>  // b.none
   335e4:	cmp	w0, #0xb1
   335e8:	mov	w1, #0xb7                  	// #183
   335ec:	ccmp	w0, w1, #0x4, ne  // ne = any
   335f0:	b.ne	33678 <Perl_re_indentf@@Base+0x144c>  // b.any
   335f4:	ldrb	w0, [x19, #2]
   335f8:	cmp	w0, #0xcd
   335fc:	b.eq	33644 <Perl_re_indentf@@Base+0x1418>  // b.none
   33600:	mov	w21, #0x0                   	// #0
   33604:	cmp	w0, #0xce
   33608:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3360c:	ldrb	w0, [x19, #3]
   33610:	cmp	w0, #0xb9
   33614:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33618:	mov	w21, #0x4                   	// #4
   3361c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33620:	ldrb	w0, [x19, #2]
   33624:	mov	w21, #0x0                   	// #0
   33628:	cmp	w0, #0xce
   3362c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33630:	ldrb	w0, [x19, #3]
   33634:	cmp	w0, #0xb9
   33638:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3363c:	mov	w21, #0x4                   	// #4
   33640:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33644:	ldrb	w0, [x19, #3]
   33648:	mov	w21, #0x0                   	// #0
   3364c:	cmp	w0, #0x82
   33650:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33654:	ldrb	w0, [x19, #4]
   33658:	mov	w21, #0x4                   	// #4
   3365c:	cmp	w0, #0xce
   33660:	b.ne	33420 <Perl_re_indentf@@Base+0x11f4>  // b.any
   33664:	ldrb	w0, [x19, #5]
   33668:	cmp	w0, #0xb9
   3366c:	mov	w0, #0x6                   	// #6
   33670:	csel	w21, w21, w0, ne  // ne = any
   33674:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33678:	mov	w21, #0x0                   	// #0
   3367c:	cmp	w0, #0xb9
   33680:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33684:	ldrb	w0, [x19, #2]
   33688:	cmp	w0, #0xcc
   3368c:	b.eq	336b0 <Perl_re_indentf@@Base+0x1484>  // b.none
   33690:	mov	w21, #0x0                   	// #0
   33694:	cmp	w0, #0xcd
   33698:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3369c:	ldrb	w0, [x19, #3]
   336a0:	cmp	w0, #0x82
   336a4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   336a8:	mov	w21, #0x4                   	// #4
   336ac:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   336b0:	ldrb	w0, [x19, #3]
   336b4:	cmp	w0, #0x88
   336b8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   336bc:	ldrb	w0, [x19, #4]
   336c0:	cmp	w0, #0xcc
   336c4:	b.eq	336d8 <Perl_re_indentf@@Base+0x14ac>  // b.none
   336c8:	cmp	w0, #0xcd
   336cc:	b.eq	336f0 <Perl_re_indentf@@Base+0x14c4>  // b.none
   336d0:	mov	w21, #0x0                   	// #0
   336d4:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   336d8:	ldrb	w0, [x19, #5]
   336dc:	sub	w0, w0, #0x80
   336e0:	cmp	w0, #0x1
   336e4:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   336e8:	mov	w21, #0x6                   	// #6
   336ec:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   336f0:	ldrb	w0, [x19, #5]
   336f4:	cmp	w0, #0x82
   336f8:	b.eq	38794 <Perl_re_indentf@@Base+0x6568>  // b.none
   336fc:	mov	w21, #0x0                   	// #0
   33700:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   33704:	ldrb	w0, [x19, #1]
   33708:	cmp	w0, #0x81
   3370c:	b.eq	3374c <Perl_re_indentf@@Base+0x1520>  // b.none
   33710:	cmp	w0, #0x85
   33714:	b.eq	33770 <Perl_re_indentf@@Base+0x1544>  // b.none
   33718:	cmp	w0, #0x89
   3371c:	b.eq	33848 <Perl_re_indentf@@Base+0x161c>  // b.none
   33720:	mov	w21, #0x0                   	// #0
   33724:	cmp	w0, #0x8e
   33728:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3372c:	ldrb	w0, [x19, #2]
   33730:	cmp	w0, #0xce
   33734:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33738:	ldrb	w0, [x19, #3]
   3373c:	cmp	w0, #0xb9
   33740:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33744:	mov	w21, #0x4                   	// #4
   33748:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3374c:	ldrb	w0, [x19, #2]
   33750:	mov	w21, #0x0                   	// #0
   33754:	cmp	w0, #0xcc
   33758:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3375c:	ldrb	w0, [x19, #3]
   33760:	cmp	w0, #0x93
   33764:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33768:	mov	w21, #0x4                   	// #4
   3376c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33770:	ldrb	w0, [x19, #2]
   33774:	cmp	w0, #0xcc
   33778:	b.eq	3379c <Perl_re_indentf@@Base+0x1570>  // b.none
   3377c:	mov	w21, #0x0                   	// #0
   33780:	cmp	w0, #0xcd
   33784:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33788:	ldrb	w0, [x19, #3]
   3378c:	cmp	w0, #0x82
   33790:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33794:	mov	w21, #0x4                   	// #4
   33798:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3379c:	ldrb	w0, [x19, #3]
   337a0:	cmp	w0, #0x88
   337a4:	b.eq	337d0 <Perl_re_indentf@@Base+0x15a4>  // b.none
   337a8:	mov	w21, #0x0                   	// #0
   337ac:	cmp	w0, #0x93
   337b0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   337b4:	ldrb	w0, [x19, #4]
   337b8:	cmp	w0, #0xcc
   337bc:	b.eq	33814 <Perl_re_indentf@@Base+0x15e8>  // b.none
   337c0:	cmp	w0, #0xcd
   337c4:	b.eq	33830 <Perl_re_indentf@@Base+0x1604>  // b.none
   337c8:	mov	w21, #0x4                   	// #4
   337cc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   337d0:	ldrb	w0, [x19, #4]
   337d4:	cmp	w0, #0xcc
   337d8:	b.eq	337fc <Perl_re_indentf@@Base+0x15d0>  // b.none
   337dc:	mov	w21, #0x0                   	// #0
   337e0:	cmp	w0, #0xcd
   337e4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   337e8:	ldrb	w0, [x19, #5]
   337ec:	cmp	w0, #0x82
   337f0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   337f4:	mov	w21, #0x6                   	// #6
   337f8:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   337fc:	ldrb	w0, [x19, #5]
   33800:	sub	w0, w0, #0x80
   33804:	cmp	w0, #0x1
   33808:	b.ls	3879c <Perl_re_indentf@@Base+0x6570>  // b.plast
   3380c:	mov	w21, #0x0                   	// #0
   33810:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   33814:	ldrb	w0, [x19, #5]
   33818:	sub	w0, w0, #0x80
   3381c:	cmp	w0, #0x2
   33820:	mov	w21, #0x6                   	// #6
   33824:	mov	w0, #0x4                   	// #4
   33828:	csel	w21, w21, w0, cc  // cc = lo, ul, last
   3382c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33830:	ldrb	w0, [x19, #5]
   33834:	cmp	w0, #0x82
   33838:	mov	w21, #0x4                   	// #4
   3383c:	mov	w0, #0x6                   	// #6
   33840:	csel	w21, w21, w0, ne  // ne = any
   33844:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33848:	ldrb	w0, [x19, #2]
   3384c:	cmp	w0, #0xcd
   33850:	b.eq	33874 <Perl_re_indentf@@Base+0x1648>  // b.none
   33854:	mov	w21, #0x0                   	// #0
   33858:	cmp	w0, #0xce
   3385c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33860:	ldrb	w0, [x19, #3]
   33864:	cmp	w0, #0xb9
   33868:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3386c:	mov	w21, #0x4                   	// #4
   33870:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33874:	ldrb	w0, [x19, #3]
   33878:	mov	w21, #0x0                   	// #0
   3387c:	cmp	w0, #0x82
   33880:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33884:	ldrb	w0, [x19, #4]
   33888:	mov	w21, #0x4                   	// #4
   3388c:	cmp	w0, #0xce
   33890:	b.ne	33420 <Perl_re_indentf@@Base+0x11f4>  // b.any
   33894:	ldrb	w0, [x19, #5]
   33898:	cmp	w0, #0xb9
   3389c:	mov	w0, #0x6                   	// #6
   338a0:	csel	w21, w21, w0, ne  // ne = any
   338a4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   338a8:	ldrb	w0, [x19, #1]
   338ac:	cmp	w0, #0xa5
   338b0:	b.eq	338e8 <Perl_re_indentf@@Base+0x16bc>  // b.none
   338b4:	cmp	w0, #0xb4
   338b8:	b.eq	3390c <Perl_re_indentf@@Base+0x16e0>  // b.none
   338bc:	mov	w21, #0x0                   	// #0
   338c0:	cmp	w0, #0xbe
   338c4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   338c8:	ldrb	w0, [x19, #2]
   338cc:	cmp	w0, #0xd5
   338d0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   338d4:	ldrb	w0, [x19, #3]
   338d8:	cmp	w0, #0xb6
   338dc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   338e0:	mov	w21, #0x4                   	// #4
   338e4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   338e8:	ldrb	w0, [x19, #2]
   338ec:	mov	w21, #0x0                   	// #0
   338f0:	cmp	w0, #0xd6
   338f4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   338f8:	ldrb	w0, [x19, #3]
   338fc:	cmp	w0, #0x82
   33900:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33904:	mov	w21, #0x4                   	// #4
   33908:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3390c:	ldrb	w0, [x19, #2]
   33910:	mov	w21, #0x0                   	// #0
   33914:	cmp	w0, #0xd5
   33918:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3391c:	ldrb	w1, [x19, #3]
   33920:	and	w0, w1, #0xfffffff7
   33924:	and	w0, w0, #0xff
   33928:	cmp	w1, #0xb6
   3392c:	mov	w2, #0xab                  	// #171
   33930:	ccmp	w1, w2, #0x4, ne  // ne = any
   33934:	mov	w21, #0x4                   	// #4
   33938:	mov	w1, #0xa5                  	// #165
   3393c:	ccmp	w0, w1, #0x4, ne  // ne = any
   33940:	b.eq	33420 <Perl_re_indentf@@Base+0x11f4>  // b.none
   33944:	mov	w21, #0x0                   	// #0
   33948:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   3394c:	ldrb	w0, [x19, #2]
   33950:	mov	w1, #0xd8                  	// #216
   33954:	and	w0, w0, w1
   33958:	cmp	w0, #0x80
   3395c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33960:	ldrb	w0, [x19, #3]
   33964:	cmp	w0, #0xce
   33968:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3396c:	ldrb	w0, [x19, #4]
   33970:	cmp	w0, #0xb9
   33974:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33978:	mov	w21, #0x5                   	// #5
   3397c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33980:	b.ne	33e78 <Perl_re_indentf@@Base+0x1c4c>  // b.any
   33984:	ldrb	w0, [x19]
   33988:	cmp	w0, #0x61
   3398c:	b.eq	339f4 <Perl_re_indentf@@Base+0x17c8>  // b.none
   33990:	cmp	w0, #0x66
   33994:	b.eq	33a18 <Perl_re_indentf@@Base+0x17ec>  // b.none
   33998:	cmp	w0, #0x68
   3399c:	b.eq	33a5c <Perl_re_indentf@@Base+0x1830>  // b.none
   339a0:	cmp	w0, #0x69
   339a4:	b.eq	33a80 <Perl_re_indentf@@Base+0x1854>  // b.none
   339a8:	cmp	w0, #0x6a
   339ac:	b.eq	33aa4 <Perl_re_indentf@@Base+0x1878>  // b.none
   339b0:	cmp	w0, #0x73
   339b4:	b.eq	33ac8 <Perl_re_indentf@@Base+0x189c>  // b.none
   339b8:	cmp	w0, #0x74
   339bc:	b.eq	33ae4 <Perl_re_indentf@@Base+0x18b8>  // b.none
   339c0:	sub	w1, w0, #0x77
   339c4:	and	w1, w1, #0xfffffffd
   339c8:	tst	w1, #0xff
   339cc:	b.ne	33b08 <Perl_re_indentf@@Base+0x18dc>  // b.any
   339d0:	ldrb	w0, [x19, #1]
   339d4:	mov	w21, #0x0                   	// #0
   339d8:	cmp	w0, #0xcc
   339dc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   339e0:	ldrb	w0, [x19, #2]
   339e4:	cmp	w0, #0x8a
   339e8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   339ec:	mov	w21, #0x3                   	// #3
   339f0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   339f4:	ldrb	w0, [x19, #1]
   339f8:	mov	w21, #0x0                   	// #0
   339fc:	cmp	w0, #0xca
   33a00:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a04:	ldrb	w0, [x19, #2]
   33a08:	cmp	w0, #0xbe
   33a0c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a10:	mov	w21, #0x3                   	// #3
   33a14:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33a18:	ldrb	w0, [x19, #1]
   33a1c:	cmp	w0, #0x66
   33a20:	b.eq	33a40 <Perl_re_indentf@@Base+0x1814>  // b.none
   33a24:	cmp	w0, #0x69
   33a28:	mov	w1, #0x6c                  	// #108
   33a2c:	ccmp	w0, w1, #0x4, ne  // ne = any
   33a30:	mov	w21, #0x0                   	// #0
   33a34:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a38:	mov	w21, #0x2                   	// #2
   33a3c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33a40:	ldrb	w0, [x19, #2]
   33a44:	cmp	w0, #0x69
   33a48:	mov	w1, #0x6c                  	// #108
   33a4c:	ccmp	w0, w1, #0x4, ne  // ne = any
   33a50:	cset	w21, eq  // eq = none
   33a54:	add	w21, w21, #0x2
   33a58:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33a5c:	ldrb	w0, [x19, #1]
   33a60:	mov	w21, #0x0                   	// #0
   33a64:	cmp	w0, #0xcc
   33a68:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a6c:	ldrb	w0, [x19, #2]
   33a70:	cmp	w0, #0xb1
   33a74:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a78:	mov	w21, #0x3                   	// #3
   33a7c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33a80:	ldrb	w0, [x19, #1]
   33a84:	mov	w21, #0x0                   	// #0
   33a88:	cmp	w0, #0xcc
   33a8c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a90:	ldrb	w0, [x19, #2]
   33a94:	cmp	w0, #0x87
   33a98:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33a9c:	mov	w21, #0x3                   	// #3
   33aa0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33aa4:	ldrb	w0, [x19, #1]
   33aa8:	mov	w21, #0x0                   	// #0
   33aac:	cmp	w0, #0xcc
   33ab0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ab4:	ldrb	w0, [x19, #2]
   33ab8:	cmp	w0, #0x8c
   33abc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ac0:	mov	w21, #0x3                   	// #3
   33ac4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33ac8:	ldrb	w0, [x19, #1]
   33acc:	sub	w0, w0, #0x73
   33ad0:	mov	w21, #0x0                   	// #0
   33ad4:	cmp	w0, #0x1
   33ad8:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   33adc:	mov	w21, #0x2                   	// #2
   33ae0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33ae4:	ldrb	w0, [x19, #1]
   33ae8:	mov	w21, #0x0                   	// #0
   33aec:	cmp	w0, #0xcc
   33af0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33af4:	ldrb	w0, [x19, #2]
   33af8:	cmp	w0, #0x88
   33afc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b00:	mov	w21, #0x3                   	// #3
   33b04:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33b08:	cmp	w0, #0xc5
   33b0c:	b.eq	33ba0 <Perl_re_indentf@@Base+0x1974>  // b.none
   33b10:	cmp	w0, #0xca
   33b14:	b.eq	33bd0 <Perl_re_indentf@@Base+0x19a4>  // b.none
   33b18:	cmp	w0, #0xce
   33b1c:	b.eq	33bf4 <Perl_re_indentf@@Base+0x19c8>  // b.none
   33b20:	cmp	w0, #0xcf
   33b24:	b.eq	33cac <Perl_re_indentf@@Base+0x1a80>  // b.none
   33b28:	cmp	w0, #0xd5
   33b2c:	b.eq	33da0 <Perl_re_indentf@@Base+0x1b74>  // b.none
   33b30:	mov	w21, #0x0                   	// #0
   33b34:	cmp	w0, #0xe1
   33b38:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b3c:	ldrb	w0, [x19, #1]
   33b40:	cmp	w0, #0xbc
   33b44:	b.eq	33e44 <Perl_re_indentf@@Base+0x1c18>  // b.none
   33b48:	mov	w21, #0x0                   	// #0
   33b4c:	cmp	w0, #0xbd
   33b50:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b54:	ldrb	w0, [x19, #2]
   33b58:	and	w1, w0, #0xf8
   33b5c:	cmp	w1, #0xa0
   33b60:	b.eq	33b7c <Perl_re_indentf@@Base+0x1950>  // b.none
   33b64:	and	w1, w0, #0xfffffffb
   33b68:	and	w1, w1, #0xff
   33b6c:	cmp	w1, #0xb0
   33b70:	mov	w1, #0xbc                  	// #188
   33b74:	ccmp	w0, w1, #0x4, ne  // ne = any
   33b78:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b7c:	ldrb	w0, [x19, #3]
   33b80:	mov	w21, #0x0                   	// #0
   33b84:	cmp	w0, #0xce
   33b88:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b8c:	ldrb	w0, [x19, #4]
   33b90:	cmp	w0, #0xb9
   33b94:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33b98:	mov	w21, #0x5                   	// #5
   33b9c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33ba0:	ldrb	w0, [x19, #1]
   33ba4:	mov	w21, #0x0                   	// #0
   33ba8:	cmp	w0, #0xbf
   33bac:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33bb0:	ldrb	w0, [x19, #2]
   33bb4:	cmp	w0, #0xc5
   33bb8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33bbc:	ldrb	w0, [x19, #3]
   33bc0:	cmp	w0, #0xbf
   33bc4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33bc8:	mov	w21, #0x4                   	// #4
   33bcc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33bd0:	ldrb	w0, [x19, #1]
   33bd4:	mov	w21, #0x0                   	// #0
   33bd8:	cmp	w0, #0xbc
   33bdc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33be0:	ldrb	w0, [x19, #2]
   33be4:	cmp	w0, #0x6e
   33be8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33bec:	mov	w21, #0x3                   	// #3
   33bf0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33bf4:	ldrb	w0, [x19, #1]
   33bf8:	and	w1, w0, #0xfffffffd
   33bfc:	and	w1, w1, #0xff
   33c00:	cmp	w1, #0xac
   33c04:	b.eq	33c44 <Perl_re_indentf@@Base+0x1a18>  // b.none
   33c08:	cmp	w0, #0xb1
   33c0c:	mov	w1, #0xb7                  	// #183
   33c10:	ccmp	w0, w1, #0x4, ne  // ne = any
   33c14:	b.ne	33c80 <Perl_re_indentf@@Base+0x1a54>  // b.any
   33c18:	ldrb	w0, [x19, #2]
   33c1c:	cmp	w0, #0xcd
   33c20:	b.eq	33c68 <Perl_re_indentf@@Base+0x1a3c>  // b.none
   33c24:	mov	w21, #0x0                   	// #0
   33c28:	cmp	w0, #0xce
   33c2c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c30:	ldrb	w0, [x19, #3]
   33c34:	cmp	w0, #0xb9
   33c38:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c3c:	mov	w21, #0x4                   	// #4
   33c40:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33c44:	ldrb	w0, [x19, #2]
   33c48:	mov	w21, #0x0                   	// #0
   33c4c:	cmp	w0, #0xce
   33c50:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c54:	ldrb	w0, [x19, #3]
   33c58:	cmp	w0, #0xb9
   33c5c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c60:	mov	w21, #0x4                   	// #4
   33c64:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33c68:	ldrb	w0, [x19, #3]
   33c6c:	mov	w21, #0x0                   	// #0
   33c70:	cmp	w0, #0x82
   33c74:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c78:	mov	w21, #0x4                   	// #4
   33c7c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33c80:	mov	w21, #0x0                   	// #0
   33c84:	cmp	w0, #0xb9
   33c88:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c8c:	ldrb	w0, [x19, #2]
   33c90:	cmp	w0, #0xcd
   33c94:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33c98:	ldrb	w0, [x19, #3]
   33c9c:	cmp	w0, #0x82
   33ca0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ca4:	mov	w21, #0x4                   	// #4
   33ca8:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33cac:	ldrb	w0, [x19, #1]
   33cb0:	cmp	w0, #0x81
   33cb4:	b.eq	33cf4 <Perl_re_indentf@@Base+0x1ac8>  // b.none
   33cb8:	cmp	w0, #0x85
   33cbc:	b.eq	33d18 <Perl_re_indentf@@Base+0x1aec>  // b.none
   33cc0:	cmp	w0, #0x89
   33cc4:	b.eq	33d5c <Perl_re_indentf@@Base+0x1b30>  // b.none
   33cc8:	mov	w21, #0x0                   	// #0
   33ccc:	cmp	w0, #0x8e
   33cd0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33cd4:	ldrb	w0, [x19, #2]
   33cd8:	cmp	w0, #0xce
   33cdc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ce0:	ldrb	w0, [x19, #3]
   33ce4:	cmp	w0, #0xb9
   33ce8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33cec:	mov	w21, #0x4                   	// #4
   33cf0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33cf4:	ldrb	w0, [x19, #2]
   33cf8:	mov	w21, #0x0                   	// #0
   33cfc:	cmp	w0, #0xcc
   33d00:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d04:	ldrb	w0, [x19, #3]
   33d08:	cmp	w0, #0x93
   33d0c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d10:	mov	w21, #0x4                   	// #4
   33d14:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33d18:	ldrb	w0, [x19, #2]
   33d1c:	cmp	w0, #0xcc
   33d20:	b.eq	33d44 <Perl_re_indentf@@Base+0x1b18>  // b.none
   33d24:	mov	w21, #0x0                   	// #0
   33d28:	cmp	w0, #0xcd
   33d2c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d30:	ldrb	w0, [x19, #3]
   33d34:	cmp	w0, #0x82
   33d38:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d3c:	mov	w21, #0x4                   	// #4
   33d40:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33d44:	ldrb	w0, [x19, #3]
   33d48:	mov	w21, #0x0                   	// #0
   33d4c:	cmp	w0, #0x93
   33d50:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d54:	mov	w21, #0x4                   	// #4
   33d58:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33d5c:	ldrb	w0, [x19, #2]
   33d60:	cmp	w0, #0xcd
   33d64:	b.eq	33d88 <Perl_re_indentf@@Base+0x1b5c>  // b.none
   33d68:	mov	w21, #0x0                   	// #0
   33d6c:	cmp	w0, #0xce
   33d70:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d74:	ldrb	w0, [x19, #3]
   33d78:	cmp	w0, #0xb9
   33d7c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d80:	mov	w21, #0x4                   	// #4
   33d84:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33d88:	ldrb	w0, [x19, #3]
   33d8c:	mov	w21, #0x0                   	// #0
   33d90:	cmp	w0, #0x82
   33d94:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33d98:	mov	w21, #0x4                   	// #4
   33d9c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33da0:	ldrb	w0, [x19, #1]
   33da4:	cmp	w0, #0xa5
   33da8:	b.eq	33de0 <Perl_re_indentf@@Base+0x1bb4>  // b.none
   33dac:	cmp	w0, #0xb4
   33db0:	b.eq	33e04 <Perl_re_indentf@@Base+0x1bd8>  // b.none
   33db4:	mov	w21, #0x0                   	// #0
   33db8:	cmp	w0, #0xbe
   33dbc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33dc0:	ldrb	w0, [x19, #2]
   33dc4:	cmp	w0, #0xd5
   33dc8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33dcc:	ldrb	w0, [x19, #3]
   33dd0:	cmp	w0, #0xb6
   33dd4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33dd8:	mov	w21, #0x4                   	// #4
   33ddc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33de0:	ldrb	w0, [x19, #2]
   33de4:	mov	w21, #0x0                   	// #0
   33de8:	cmp	w0, #0xd6
   33dec:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33df0:	ldrb	w0, [x19, #3]
   33df4:	cmp	w0, #0x82
   33df8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33dfc:	mov	w21, #0x4                   	// #4
   33e00:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33e04:	ldrb	w0, [x19, #2]
   33e08:	mov	w21, #0x0                   	// #0
   33e0c:	cmp	w0, #0xd5
   33e10:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33e14:	ldrb	w1, [x19, #3]
   33e18:	and	w0, w1, #0xfffffff7
   33e1c:	and	w0, w0, #0xff
   33e20:	cmp	w1, #0xab
   33e24:	mov	w2, #0xb6                  	// #182
   33e28:	ccmp	w1, w2, #0x4, ne  // ne = any
   33e2c:	mov	w21, #0x4                   	// #4
   33e30:	mov	w1, #0xa5                  	// #165
   33e34:	ccmp	w0, w1, #0x4, ne  // ne = any
   33e38:	b.eq	33420 <Perl_re_indentf@@Base+0x11f4>  // b.none
   33e3c:	mov	w21, #0x0                   	// #0
   33e40:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   33e44:	ldrb	w0, [x19, #2]
   33e48:	mov	w1, #0xd8                  	// #216
   33e4c:	and	w0, w0, w1
   33e50:	cmp	w0, #0x80
   33e54:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33e58:	ldrb	w0, [x19, #3]
   33e5c:	cmp	w0, #0xce
   33e60:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33e64:	ldrb	w0, [x19, #4]
   33e68:	cmp	w0, #0xb9
   33e6c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33e70:	mov	w21, #0x5                   	// #5
   33e74:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33e78:	cmp	x0, #0x3
   33e7c:	b.le	342c8 <Perl_re_indentf@@Base+0x209c>
   33e80:	ldrb	w0, [x19]
   33e84:	cmp	w0, #0x61
   33e88:	b.eq	33ef0 <Perl_re_indentf@@Base+0x1cc4>  // b.none
   33e8c:	cmp	w0, #0x66
   33e90:	b.eq	33f14 <Perl_re_indentf@@Base+0x1ce8>  // b.none
   33e94:	cmp	w0, #0x68
   33e98:	b.eq	33f58 <Perl_re_indentf@@Base+0x1d2c>  // b.none
   33e9c:	cmp	w0, #0x69
   33ea0:	b.eq	33f7c <Perl_re_indentf@@Base+0x1d50>  // b.none
   33ea4:	cmp	w0, #0x6a
   33ea8:	b.eq	33fa0 <Perl_re_indentf@@Base+0x1d74>  // b.none
   33eac:	cmp	w0, #0x73
   33eb0:	b.eq	33fc4 <Perl_re_indentf@@Base+0x1d98>  // b.none
   33eb4:	cmp	w0, #0x74
   33eb8:	b.eq	33fe0 <Perl_re_indentf@@Base+0x1db4>  // b.none
   33ebc:	sub	w1, w0, #0x77
   33ec0:	and	w1, w1, #0xfffffffd
   33ec4:	tst	w1, #0xff
   33ec8:	b.ne	34004 <Perl_re_indentf@@Base+0x1dd8>  // b.any
   33ecc:	ldrb	w0, [x19, #1]
   33ed0:	mov	w21, #0x0                   	// #0
   33ed4:	cmp	w0, #0xcc
   33ed8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33edc:	ldrb	w0, [x19, #2]
   33ee0:	cmp	w0, #0x8a
   33ee4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ee8:	mov	w21, #0x3                   	// #3
   33eec:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33ef0:	ldrb	w0, [x19, #1]
   33ef4:	mov	w21, #0x0                   	// #0
   33ef8:	cmp	w0, #0xca
   33efc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f00:	ldrb	w0, [x19, #2]
   33f04:	cmp	w0, #0xbe
   33f08:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f0c:	mov	w21, #0x3                   	// #3
   33f10:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33f14:	ldrb	w0, [x19, #1]
   33f18:	cmp	w0, #0x66
   33f1c:	b.eq	33f3c <Perl_re_indentf@@Base+0x1d10>  // b.none
   33f20:	cmp	w0, #0x69
   33f24:	mov	w1, #0x6c                  	// #108
   33f28:	ccmp	w0, w1, #0x4, ne  // ne = any
   33f2c:	mov	w21, #0x0                   	// #0
   33f30:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f34:	mov	w21, #0x2                   	// #2
   33f38:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33f3c:	ldrb	w0, [x19, #2]
   33f40:	cmp	w0, #0x69
   33f44:	mov	w1, #0x6c                  	// #108
   33f48:	ccmp	w0, w1, #0x4, ne  // ne = any
   33f4c:	cset	w21, eq  // eq = none
   33f50:	add	w21, w21, #0x2
   33f54:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33f58:	ldrb	w0, [x19, #1]
   33f5c:	mov	w21, #0x0                   	// #0
   33f60:	cmp	w0, #0xcc
   33f64:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f68:	ldrb	w0, [x19, #2]
   33f6c:	cmp	w0, #0xb1
   33f70:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f74:	mov	w21, #0x3                   	// #3
   33f78:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33f7c:	ldrb	w0, [x19, #1]
   33f80:	mov	w21, #0x0                   	// #0
   33f84:	cmp	w0, #0xcc
   33f88:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f8c:	ldrb	w0, [x19, #2]
   33f90:	cmp	w0, #0x87
   33f94:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33f98:	mov	w21, #0x3                   	// #3
   33f9c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33fa0:	ldrb	w0, [x19, #1]
   33fa4:	mov	w21, #0x0                   	// #0
   33fa8:	cmp	w0, #0xcc
   33fac:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33fb0:	ldrb	w0, [x19, #2]
   33fb4:	cmp	w0, #0x8c
   33fb8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33fbc:	mov	w21, #0x3                   	// #3
   33fc0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33fc4:	ldrb	w0, [x19, #1]
   33fc8:	sub	w0, w0, #0x73
   33fcc:	mov	w21, #0x0                   	// #0
   33fd0:	cmp	w0, #0x1
   33fd4:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   33fd8:	mov	w21, #0x2                   	// #2
   33fdc:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   33fe0:	ldrb	w0, [x19, #1]
   33fe4:	mov	w21, #0x0                   	// #0
   33fe8:	cmp	w0, #0xcc
   33fec:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ff0:	ldrb	w0, [x19, #2]
   33ff4:	cmp	w0, #0x88
   33ff8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   33ffc:	mov	w21, #0x3                   	// #3
   34000:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34004:	cmp	w0, #0xc5
   34008:	b.eq	34070 <Perl_re_indentf@@Base+0x1e44>  // b.none
   3400c:	cmp	w0, #0xca
   34010:	b.eq	340a0 <Perl_re_indentf@@Base+0x1e74>  // b.none
   34014:	cmp	w0, #0xce
   34018:	b.eq	340c4 <Perl_re_indentf@@Base+0x1e98>  // b.none
   3401c:	cmp	w0, #0xcf
   34020:	b.eq	3417c <Perl_re_indentf@@Base+0x1f50>  // b.none
   34024:	mov	w21, #0x0                   	// #0
   34028:	cmp	w0, #0xd5
   3402c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34030:	ldrb	w0, [x19, #1]
   34034:	cmp	w0, #0xa5
   34038:	b.eq	3426c <Perl_re_indentf@@Base+0x2040>  // b.none
   3403c:	cmp	w0, #0xb4
   34040:	b.eq	3428c <Perl_re_indentf@@Base+0x2060>  // b.none
   34044:	mov	w21, #0x0                   	// #0
   34048:	cmp	w0, #0xbe
   3404c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34050:	ldrb	w0, [x19, #2]
   34054:	cmp	w0, #0xd5
   34058:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3405c:	ldrb	w0, [x19, #3]
   34060:	cmp	w0, #0xb6
   34064:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34068:	mov	w21, #0x4                   	// #4
   3406c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34070:	ldrb	w0, [x19, #1]
   34074:	mov	w21, #0x0                   	// #0
   34078:	cmp	w0, #0xbf
   3407c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34080:	ldrb	w0, [x19, #2]
   34084:	cmp	w0, #0xc5
   34088:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3408c:	ldrb	w0, [x19, #3]
   34090:	cmp	w0, #0xbf
   34094:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34098:	mov	w21, #0x4                   	// #4
   3409c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   340a0:	ldrb	w0, [x19, #1]
   340a4:	mov	w21, #0x0                   	// #0
   340a8:	cmp	w0, #0xbc
   340ac:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   340b0:	ldrb	w0, [x19, #2]
   340b4:	cmp	w0, #0x6e
   340b8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   340bc:	mov	w21, #0x3                   	// #3
   340c0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   340c4:	ldrb	w0, [x19, #1]
   340c8:	and	w1, w0, #0xfffffffd
   340cc:	and	w1, w1, #0xff
   340d0:	cmp	w1, #0xac
   340d4:	b.eq	34114 <Perl_re_indentf@@Base+0x1ee8>  // b.none
   340d8:	cmp	w0, #0xb1
   340dc:	mov	w1, #0xb7                  	// #183
   340e0:	ccmp	w0, w1, #0x4, ne  // ne = any
   340e4:	b.ne	34150 <Perl_re_indentf@@Base+0x1f24>  // b.any
   340e8:	ldrb	w0, [x19, #2]
   340ec:	cmp	w0, #0xcd
   340f0:	b.eq	34138 <Perl_re_indentf@@Base+0x1f0c>  // b.none
   340f4:	mov	w21, #0x0                   	// #0
   340f8:	cmp	w0, #0xce
   340fc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34100:	ldrb	w0, [x19, #3]
   34104:	cmp	w0, #0xb9
   34108:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3410c:	mov	w21, #0x4                   	// #4
   34110:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34114:	ldrb	w0, [x19, #2]
   34118:	mov	w21, #0x0                   	// #0
   3411c:	cmp	w0, #0xce
   34120:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34124:	ldrb	w0, [x19, #3]
   34128:	cmp	w0, #0xb9
   3412c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34130:	mov	w21, #0x4                   	// #4
   34134:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34138:	ldrb	w0, [x19, #3]
   3413c:	mov	w21, #0x0                   	// #0
   34140:	cmp	w0, #0x82
   34144:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34148:	mov	w21, #0x4                   	// #4
   3414c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34150:	mov	w21, #0x0                   	// #0
   34154:	cmp	w0, #0xb9
   34158:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3415c:	ldrb	w0, [x19, #2]
   34160:	cmp	w0, #0xcd
   34164:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34168:	ldrb	w0, [x19, #3]
   3416c:	cmp	w0, #0x82
   34170:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34174:	mov	w21, #0x4                   	// #4
   34178:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3417c:	ldrb	w0, [x19, #1]
   34180:	cmp	w0, #0x81
   34184:	b.eq	341c4 <Perl_re_indentf@@Base+0x1f98>  // b.none
   34188:	cmp	w0, #0x85
   3418c:	b.eq	341e8 <Perl_re_indentf@@Base+0x1fbc>  // b.none
   34190:	cmp	w0, #0x89
   34194:	b.eq	3422c <Perl_re_indentf@@Base+0x2000>  // b.none
   34198:	mov	w21, #0x0                   	// #0
   3419c:	cmp	w0, #0x8e
   341a0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   341a4:	ldrb	w0, [x19, #2]
   341a8:	cmp	w0, #0xce
   341ac:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   341b0:	ldrb	w0, [x19, #3]
   341b4:	cmp	w0, #0xb9
   341b8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   341bc:	mov	w21, #0x4                   	// #4
   341c0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   341c4:	ldrb	w0, [x19, #2]
   341c8:	mov	w21, #0x0                   	// #0
   341cc:	cmp	w0, #0xcc
   341d0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   341d4:	ldrb	w0, [x19, #3]
   341d8:	cmp	w0, #0x93
   341dc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   341e0:	mov	w21, #0x4                   	// #4
   341e4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   341e8:	ldrb	w0, [x19, #2]
   341ec:	cmp	w0, #0xcc
   341f0:	b.eq	34214 <Perl_re_indentf@@Base+0x1fe8>  // b.none
   341f4:	mov	w21, #0x0                   	// #0
   341f8:	cmp	w0, #0xcd
   341fc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34200:	ldrb	w0, [x19, #3]
   34204:	cmp	w0, #0x82
   34208:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3420c:	mov	w21, #0x4                   	// #4
   34210:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34214:	ldrb	w0, [x19, #3]
   34218:	mov	w21, #0x0                   	// #0
   3421c:	cmp	w0, #0x93
   34220:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34224:	mov	w21, #0x4                   	// #4
   34228:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3422c:	ldrb	w0, [x19, #2]
   34230:	cmp	w0, #0xcd
   34234:	b.eq	34258 <Perl_re_indentf@@Base+0x202c>  // b.none
   34238:	mov	w21, #0x0                   	// #0
   3423c:	cmp	w0, #0xce
   34240:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34244:	ldrb	w0, [x19, #3]
   34248:	cmp	w0, #0xb9
   3424c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34250:	mov	w21, #0x4                   	// #4
   34254:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34258:	ldrb	w0, [x19, #3]
   3425c:	cmp	w0, #0x82
   34260:	b.eq	387a4 <Perl_re_indentf@@Base+0x6578>  // b.none
   34264:	mov	w21, #0x0                   	// #0
   34268:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   3426c:	ldrb	w0, [x19, #2]
   34270:	cmp	w0, #0xd6
   34274:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34278:	ldrb	w0, [x19, #3]
   3427c:	cmp	w0, #0x82
   34280:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34284:	mov	w21, #0x4                   	// #4
   34288:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3428c:	ldrb	w0, [x19, #2]
   34290:	mov	w21, #0x0                   	// #0
   34294:	cmp	w0, #0xd5
   34298:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3429c:	ldrb	w1, [x19, #3]
   342a0:	and	w0, w1, #0xfffffff7
   342a4:	and	w0, w0, #0xff
   342a8:	cmp	w1, #0xb6
   342ac:	mov	w2, #0xab                  	// #171
   342b0:	ccmp	w1, w2, #0x4, ne  // ne = any
   342b4:	mov	w1, #0xa5                  	// #165
   342b8:	ccmp	w0, w1, #0x4, ne  // ne = any
   342bc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   342c0:	mov	w21, #0x4                   	// #4
   342c4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   342c8:	b.ne	3447c <Perl_re_indentf@@Base+0x2250>  // b.any
   342cc:	ldrb	w0, [x19]
   342d0:	cmp	w0, #0x61
   342d4:	b.eq	3433c <Perl_re_indentf@@Base+0x2110>  // b.none
   342d8:	cmp	w0, #0x66
   342dc:	b.eq	34360 <Perl_re_indentf@@Base+0x2134>  // b.none
   342e0:	cmp	w0, #0x68
   342e4:	b.eq	343a4 <Perl_re_indentf@@Base+0x2178>  // b.none
   342e8:	cmp	w0, #0x69
   342ec:	b.eq	343c8 <Perl_re_indentf@@Base+0x219c>  // b.none
   342f0:	cmp	w0, #0x6a
   342f4:	b.eq	343ec <Perl_re_indentf@@Base+0x21c0>  // b.none
   342f8:	cmp	w0, #0x73
   342fc:	b.eq	34410 <Perl_re_indentf@@Base+0x21e4>  // b.none
   34300:	cmp	w0, #0x74
   34304:	b.eq	3442c <Perl_re_indentf@@Base+0x2200>  // b.none
   34308:	sub	w1, w0, #0x77
   3430c:	and	w1, w1, #0xfffffffd
   34310:	tst	w1, #0xff
   34314:	b.ne	34450 <Perl_re_indentf@@Base+0x2224>  // b.any
   34318:	ldrb	w0, [x19, #1]
   3431c:	mov	w21, #0x0                   	// #0
   34320:	cmp	w0, #0xcc
   34324:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34328:	ldrb	w0, [x19, #2]
   3432c:	cmp	w0, #0x8a
   34330:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34334:	mov	w21, #0x3                   	// #3
   34338:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3433c:	ldrb	w0, [x19, #1]
   34340:	mov	w21, #0x0                   	// #0
   34344:	cmp	w0, #0xca
   34348:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3434c:	ldrb	w0, [x19, #2]
   34350:	cmp	w0, #0xbe
   34354:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34358:	mov	w21, #0x3                   	// #3
   3435c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34360:	ldrb	w0, [x19, #1]
   34364:	cmp	w0, #0x66
   34368:	b.eq	34388 <Perl_re_indentf@@Base+0x215c>  // b.none
   3436c:	cmp	w0, #0x69
   34370:	mov	w1, #0x6c                  	// #108
   34374:	ccmp	w0, w1, #0x4, ne  // ne = any
   34378:	mov	w21, #0x0                   	// #0
   3437c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34380:	mov	w21, #0x2                   	// #2
   34384:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34388:	ldrb	w0, [x19, #2]
   3438c:	cmp	w0, #0x69
   34390:	mov	w1, #0x6c                  	// #108
   34394:	ccmp	w0, w1, #0x4, ne  // ne = any
   34398:	cset	w21, eq  // eq = none
   3439c:	add	w21, w21, #0x2
   343a0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   343a4:	ldrb	w0, [x19, #1]
   343a8:	mov	w21, #0x0                   	// #0
   343ac:	cmp	w0, #0xcc
   343b0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   343b4:	ldrb	w0, [x19, #2]
   343b8:	cmp	w0, #0xb1
   343bc:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   343c0:	mov	w21, #0x3                   	// #3
   343c4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   343c8:	ldrb	w0, [x19, #1]
   343cc:	mov	w21, #0x0                   	// #0
   343d0:	cmp	w0, #0xcc
   343d4:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   343d8:	ldrb	w0, [x19, #2]
   343dc:	cmp	w0, #0x87
   343e0:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   343e4:	mov	w21, #0x3                   	// #3
   343e8:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   343ec:	ldrb	w0, [x19, #1]
   343f0:	mov	w21, #0x0                   	// #0
   343f4:	cmp	w0, #0xcc
   343f8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   343fc:	ldrb	w0, [x19, #2]
   34400:	cmp	w0, #0x8c
   34404:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34408:	mov	w21, #0x3                   	// #3
   3440c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34410:	ldrb	w0, [x19, #1]
   34414:	sub	w0, w0, #0x73
   34418:	mov	w21, #0x0                   	// #0
   3441c:	cmp	w0, #0x1
   34420:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   34424:	mov	w21, #0x2                   	// #2
   34428:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3442c:	ldrb	w0, [x19, #1]
   34430:	mov	w21, #0x0                   	// #0
   34434:	cmp	w0, #0xcc
   34438:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3443c:	ldrb	w0, [x19, #2]
   34440:	cmp	w0, #0x88
   34444:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34448:	mov	w21, #0x3                   	// #3
   3444c:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   34450:	mov	w21, #0x0                   	// #0
   34454:	cmp	w0, #0xca
   34458:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3445c:	ldrb	w0, [x19, #1]
   34460:	cmp	w0, #0xbc
   34464:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34468:	ldrb	w0, [x19, #2]
   3446c:	cmp	w0, #0x6e
   34470:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34474:	mov	w21, #0x3                   	// #3
   34478:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3447c:	mov	w21, #0x0                   	// #0
   34480:	cmp	x0, #0x1
   34484:	b.le	35168 <Perl_re_indentf@@Base+0x2f3c>
   34488:	ldrb	w0, [x19]
   3448c:	cmp	w0, #0x66
   34490:	b.eq	344b8 <Perl_re_indentf@@Base+0x228c>  // b.none
   34494:	mov	w21, #0x0                   	// #0
   34498:	cmp	w0, #0x73
   3449c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   344a0:	ldrb	w0, [x19, #1]
   344a4:	sub	w0, w0, #0x73
   344a8:	cmp	w0, #0x1
   344ac:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   344b0:	mov	w21, #0x2                   	// #2
   344b4:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   344b8:	ldrb	w0, [x19, #1]
   344bc:	cmp	w0, #0x66
   344c0:	mov	w1, #0x69                  	// #105
   344c4:	ccmp	w0, w1, #0x4, ne  // ne = any
   344c8:	mov	w21, #0x2                   	// #2
   344cc:	mov	w1, #0x6c                  	// #108
   344d0:	ccmp	w0, w1, #0x4, ne  // ne = any
   344d4:	b.eq	33420 <Perl_re_indentf@@Base+0x11f4>  // b.none
   344d8:	mov	w21, #0x0                   	// #0
   344dc:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   344e0:	ldr	x0, [sp, #112]
   344e4:	sub	x0, x0, x19
   344e8:	cmp	x0, #0x2
   344ec:	b.le	34588 <Perl_re_indentf@@Base+0x235c>
   344f0:	ldrb	w0, [x19]
   344f4:	and	w0, w0, #0xffffffdf
   344f8:	and	w0, w0, #0xff
   344fc:	cmp	w0, #0x46
   34500:	b.eq	34534 <Perl_re_indentf@@Base+0x2308>  // b.none
   34504:	mov	w21, w3
   34508:	cmp	w0, #0x53
   3450c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34510:	ldrb	w0, [x19, #1]
   34514:	sub	w1, w0, #0x53
   34518:	cmp	w1, #0x1
   3451c:	b.ls	34608 <Perl_re_indentf@@Base+0x23dc>  // b.plast
   34520:	sub	w0, w0, #0x73
   34524:	cmp	w0, #0x1
   34528:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   3452c:	mov	w21, #0x2                   	// #2
   34530:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   34534:	ldrb	w0, [x19, #1]
   34538:	and	w0, w0, #0xffffffdf
   3453c:	and	w0, w0, #0xff
   34540:	cmp	w0, #0x46
   34544:	b.eq	34564 <Perl_re_indentf@@Base+0x2338>  // b.none
   34548:	cmp	w0, #0x49
   3454c:	mov	w1, #0x4c                  	// #76
   34550:	ccmp	w0, w1, #0x4, ne  // ne = any
   34554:	mov	w21, w3
   34558:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   3455c:	mov	w21, #0x2                   	// #2
   34560:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   34564:	ldrb	w0, [x19, #2]
   34568:	and	w0, w0, #0xffffffdf
   3456c:	and	w0, w0, #0xff
   34570:	cmp	w0, #0x49
   34574:	mov	w1, #0x4c                  	// #76
   34578:	ccmp	w0, w1, #0x4, ne  // ne = any
   3457c:	cset	w21, eq  // eq = none
   34580:	add	w21, w21, #0x2
   34584:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   34588:	mov	w21, w3
   3458c:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   34590:	ldrb	w0, [x19]
   34594:	and	w0, w0, #0xffffffdf
   34598:	and	w0, w0, #0xff
   3459c:	cmp	w0, #0x46
   345a0:	b.eq	345d0 <Perl_re_indentf@@Base+0x23a4>  // b.none
   345a4:	cmp	w0, #0x53
   345a8:	b.ne	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.any
   345ac:	ldrb	w0, [x19, #1]
   345b0:	sub	w1, w0, #0x53
   345b4:	cmp	w1, #0x1
   345b8:	b.ls	34610 <Perl_re_indentf@@Base+0x23e4>  // b.plast
   345bc:	sub	w0, w0, #0x73
   345c0:	cmp	w0, #0x1
   345c4:	b.hi	35168 <Perl_re_indentf@@Base+0x2f3c>  // b.pmore
   345c8:	mov	w21, #0x2                   	// #2
   345cc:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   345d0:	ldrb	w0, [x19, #1]
   345d4:	and	w0, w0, #0xffffffdf
   345d8:	and	w0, w0, #0xff
   345dc:	cmp	w0, #0x46
   345e0:	mov	w1, #0x49                  	// #73
   345e4:	ccmp	w0, w1, #0x4, ne  // ne = any
   345e8:	mov	w21, #0x2                   	// #2
   345ec:	mov	w1, #0x4c                  	// #76
   345f0:	ccmp	w0, w1, #0x4, ne  // ne = any
   345f4:	b.ne	34600 <Perl_re_indentf@@Base+0x23d4>  // b.any
   345f8:	sub	w21, w21, #0x1
   345fc:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   34600:	mov	w21, w3
   34604:	b	35168 <Perl_re_indentf@@Base+0x2f3c>
   34608:	mov	w21, #0x2                   	// #2
   3460c:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   34610:	mov	w21, #0x2                   	// #2
   34614:	b	345f8 <Perl_re_indentf@@Base+0x23cc>
   34618:	and	x0, x0, #0xff
   3461c:	ldrb	w1, [x26, x0]
   34620:	and	x23, x1, #0xff
   34624:	ubfiz	x2, x1, #1, #8
   34628:	ldr	x3, [x27, #8]
   3462c:	ldrh	w0, [x3, x2]
   34630:	cbnz	w0, 387fc <Perl_re_indentf@@Base+0x65d0>
   34634:	ldrh	w0, [x27, #56]
   34638:	add	w0, w0, #0x1
   3463c:	and	w0, w0, #0xffff
   34640:	strh	w0, [x27, #56]
   34644:	strh	w0, [x3, x2]
   34648:	ldr	w0, [x25, #192]
   3464c:	cbz	w0, 34948 <Perl_re_indentf@@Base+0x271c>
   34650:	mov	x1, #0xd                   	// #13
   34654:	mov	x0, x28
   34658:	bl	5020 <Perl_newSV@plt>
   3465c:	mov	x22, x0
   34660:	ldr	w0, [x0, #12]
   34664:	and	w1, w0, #0xf
   34668:	ldr	x2, [sp, #216]
   3466c:	ldrb	w1, [x2, w1, uxtw]
   34670:	cbz	w1, 34774 <Perl_re_indentf@@Base+0x2548>
   34674:	and	w1, w0, #0xc000
   34678:	cmp	w1, #0x8, lsl #12
   3467c:	b.eq	34798 <Perl_re_indentf@@Base+0x256c>  // b.none
   34680:	and	w0, w0, #0xff
   34684:	cmp	w0, #0xf
   34688:	b.ne	34698 <Perl_re_indentf@@Base+0x246c>  // b.any
   3468c:	ldr	x0, [x22]
   34690:	ldrb	w0, [x0, #129]
   34694:	tbz	w0, #6, 347cc <Perl_re_indentf@@Base+0x25a0>
   34698:	ldr	x0, [x22, #16]
   3469c:	str	x0, [sp, #192]
   346a0:	mov	x4, #0x0                   	// #0
   346a4:	mov	x3, #0x0                   	// #0
   346a8:	mov	x2, x23
   346ac:	mov	x1, x0
   346b0:	mov	x0, x28
   346b4:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   346b8:	ldr	w1, [x22, #12]
   346bc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   346c0:	ldr	x2, [x2, #3888]
   346c4:	and	w3, w1, #0xf
   346c8:	ldrb	w2, [x2, w3, uxtw]
   346cc:	cbz	w2, 347f0 <Perl_re_indentf@@Base+0x25c4>
   346d0:	and	w2, w1, #0xc000
   346d4:	cmp	w2, #0x8, lsl #12
   346d8:	b.eq	34814 <Perl_re_indentf@@Base+0x25e8>  // b.none
   346dc:	and	w1, w1, #0xff
   346e0:	cmp	w1, #0xf
   346e4:	b.eq	34848 <Perl_re_indentf@@Base+0x261c>  // b.none
   346e8:	ldr	x1, [x22]
   346ec:	ldr	x2, [sp, #192]
   346f0:	sub	x0, x0, x2
   346f4:	str	x0, [x1, #16]
   346f8:	ldr	w0, [x22, #12]
   346fc:	tbz	w0, #11, 34734 <Perl_re_indentf@@Base+0x2508>
   34700:	and	w2, w0, #0xf
   34704:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   34708:	ldr	x1, [x1, #3840]
   3470c:	ldrb	w1, [x1, w2, uxtw]
   34710:	cbz	w1, 34878 <Perl_re_indentf@@Base+0x264c>
   34714:	and	w1, w0, #0xc000
   34718:	cmp	w1, #0x8, lsl #12
   3471c:	b.eq	3489c <Perl_re_indentf@@Base+0x2670>  // b.none
   34720:	and	w1, w0, #0xff
   34724:	cmp	w1, #0xf
   34728:	b.eq	348d0 <Perl_re_indentf@@Base+0x26a4>  // b.none
   3472c:	ldr	x1, [x22, #16]
   34730:	cbnz	x1, 34900 <Perl_re_indentf@@Base+0x26d4>
   34734:	and	w1, w0, #0xc000
   34738:	cmp	w1, #0x8, lsl #12
   3473c:	b.ne	34750 <Perl_re_indentf@@Base+0x2524>  // b.any
   34740:	and	w1, w0, #0xff
   34744:	sub	w1, w1, #0x9
   34748:	cmp	w1, #0x1
   3474c:	b.ls	34924 <Perl_re_indentf@@Base+0x26f8>  // b.plast
   34750:	mov	w1, #0x4400                	// #17408
   34754:	movk	w1, #0x2000, lsl #16
   34758:	orr	w0, w0, w1
   3475c:	str	w0, [x22, #12]
   34760:	mov	x2, x22
   34764:	ldr	x1, [sp, #144]
   34768:	mov	x0, x28
   3476c:	bl	5430 <Perl_av_push@plt>
   34770:	b	387fc <Perl_re_indentf@@Base+0x65d0>
   34774:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34778:	add	x3, x3, #0xc10
   3477c:	add	x3, x3, #0x590
   34780:	mov	w2, #0xb32                 	// #2866
   34784:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34788:	add	x1, x1, #0xfb8
   3478c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34790:	add	x0, x0, #0xd10
   34794:	bl	58e0 <__assert_fail@plt>
   34798:	and	w1, w0, #0xff
   3479c:	sub	w1, w1, #0x9
   347a0:	cmp	w1, #0x1
   347a4:	b.hi	34680 <Perl_re_indentf@@Base+0x2454>  // b.pmore
   347a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   347ac:	add	x3, x3, #0xc10
   347b0:	add	x3, x3, #0x590
   347b4:	mov	w2, #0xb32                 	// #2866
   347b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   347bc:	add	x1, x1, #0xfb8
   347c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   347c4:	add	x0, x0, #0xd40
   347c8:	bl	58e0 <__assert_fail@plt>
   347cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   347d0:	add	x3, x3, #0xc10
   347d4:	add	x3, x3, #0x590
   347d8:	mov	w2, #0xb32                 	// #2866
   347dc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   347e0:	add	x1, x1, #0xfb8
   347e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   347e8:	add	x0, x0, #0xd58
   347ec:	bl	58e0 <__assert_fail@plt>
   347f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   347f4:	add	x3, x3, #0xc10
   347f8:	add	x3, x3, #0x590
   347fc:	mov	w2, #0xb32                 	// #2866
   34800:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34804:	add	x1, x1, #0xfb8
   34808:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3480c:	add	x0, x0, #0xd58
   34810:	bl	58e0 <__assert_fail@plt>
   34814:	and	w2, w1, #0xff
   34818:	sub	w2, w2, #0x9
   3481c:	cmp	w2, #0x1
   34820:	b.hi	346dc <Perl_re_indentf@@Base+0x24b0>  // b.pmore
   34824:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34828:	add	x3, x3, #0xc10
   3482c:	add	x3, x3, #0x590
   34830:	mov	w2, #0xb32                 	// #2866
   34834:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34838:	add	x1, x1, #0xfb8
   3483c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34840:	add	x0, x0, #0xd88
   34844:	bl	58e0 <__assert_fail@plt>
   34848:	ldr	x1, [x22]
   3484c:	ldrb	w1, [x1, #129]
   34850:	tbnz	w1, #6, 346e8 <Perl_re_indentf@@Base+0x24bc>
   34854:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34858:	add	x3, x3, #0xc10
   3485c:	add	x3, x3, #0x590
   34860:	mov	w2, #0xb32                 	// #2866
   34864:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34868:	add	x1, x1, #0xfb8
   3486c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34870:	add	x0, x0, #0xda0
   34874:	bl	58e0 <__assert_fail@plt>
   34878:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3487c:	add	x3, x3, #0xc10
   34880:	add	x3, x3, #0x590
   34884:	mov	w2, #0xb32                 	// #2866
   34888:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3488c:	add	x1, x1, #0xfb8
   34890:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34894:	add	x0, x0, #0x160
   34898:	bl	58e0 <__assert_fail@plt>
   3489c:	and	w1, w0, #0xff
   348a0:	sub	w1, w1, #0x9
   348a4:	cmp	w1, #0x1
   348a8:	b.hi	34720 <Perl_re_indentf@@Base+0x24f4>  // b.pmore
   348ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   348b0:	add	x3, x3, #0xc10
   348b4:	add	x3, x3, #0x590
   348b8:	mov	w2, #0xb32                 	// #2866
   348bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   348c0:	add	x1, x1, #0xfb8
   348c4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   348c8:	add	x0, x0, #0x190
   348cc:	bl	58e0 <__assert_fail@plt>
   348d0:	ldr	x1, [x22]
   348d4:	ldrb	w1, [x1, #129]
   348d8:	tbnz	w1, #6, 3472c <Perl_re_indentf@@Base+0x2500>
   348dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   348e0:	add	x3, x3, #0xc10
   348e4:	add	x3, x3, #0x590
   348e8:	mov	w2, #0xb32                 	// #2866
   348ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   348f0:	add	x1, x1, #0xfb8
   348f4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   348f8:	add	x0, x0, #0x1a8
   348fc:	bl	58e0 <__assert_fail@plt>
   34900:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34904:	add	x3, x3, #0xc10
   34908:	add	x3, x3, #0x590
   3490c:	mov	w2, #0xb32                 	// #2866
   34910:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34914:	add	x1, x1, #0xfb8
   34918:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3491c:	add	x0, x0, #0xde8
   34920:	bl	58e0 <__assert_fail@plt>
   34924:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34928:	add	x3, x3, #0xc10
   3492c:	add	x3, x3, #0x590
   34930:	mov	w2, #0xb32                 	// #2866
   34934:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34938:	add	x1, x1, #0xfb8
   3493c:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   34940:	add	x0, x0, #0x320
   34944:	bl	58e0 <__assert_fail@plt>
   34948:	strb	w1, [sp, #336]
   3494c:	mov	x2, #0x1                   	// #1
   34950:	ldr	x1, [sp, #160]
   34954:	mov	x0, x28
   34958:	bl	59a0 <Perl_newSVpvn@plt>
   3495c:	mov	x2, x0
   34960:	ldr	x1, [sp, #144]
   34964:	mov	x0, x28
   34968:	bl	5430 <Perl_av_push@plt>
   3496c:	b	387fc <Perl_re_indentf@@Base+0x65d0>
   34970:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34974:	add	x3, x3, #0xc10
   34978:	add	x3, x3, #0x590
   3497c:	mov	w2, #0xb37                 	// #2871
   34980:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34984:	add	x1, x1, #0xfb8
   34988:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3498c:	add	x0, x0, #0xd10
   34990:	bl	58e0 <__assert_fail@plt>
   34994:	and	w1, w0, #0xff
   34998:	sub	w1, w1, #0x9
   3499c:	cmp	w1, #0x1
   349a0:	b.hi	38860 <Perl_re_indentf@@Base+0x6634>  // b.pmore
   349a4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   349a8:	add	x3, x3, #0xc10
   349ac:	add	x3, x3, #0x590
   349b0:	mov	w2, #0xb37                 	// #2871
   349b4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   349b8:	add	x1, x1, #0xfb8
   349bc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   349c0:	add	x0, x0, #0xd40
   349c4:	bl	58e0 <__assert_fail@plt>
   349c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   349cc:	add	x3, x3, #0xc10
   349d0:	add	x3, x3, #0x590
   349d4:	mov	w2, #0xb37                 	// #2871
   349d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   349dc:	add	x1, x1, #0xfb8
   349e0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   349e4:	add	x0, x0, #0xd58
   349e8:	bl	58e0 <__assert_fail@plt>
   349ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   349f0:	add	x3, x3, #0xc10
   349f4:	add	x3, x3, #0x590
   349f8:	mov	w2, #0xb37                 	// #2871
   349fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34a00:	add	x1, x1, #0xfb8
   34a04:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34a08:	add	x0, x0, #0xd58
   34a0c:	bl	58e0 <__assert_fail@plt>
   34a10:	and	w2, w1, #0xff
   34a14:	sub	w2, w2, #0x9
   34a18:	cmp	w2, #0x1
   34a1c:	b.hi	388b8 <Perl_re_indentf@@Base+0x668c>  // b.pmore
   34a20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34a24:	add	x3, x3, #0xc10
   34a28:	add	x3, x3, #0x590
   34a2c:	mov	w2, #0xb37                 	// #2871
   34a30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34a34:	add	x1, x1, #0xfb8
   34a38:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34a3c:	add	x0, x0, #0xd88
   34a40:	bl	58e0 <__assert_fail@plt>
   34a44:	ldr	x1, [x22]
   34a48:	ldrb	w1, [x1, #129]
   34a4c:	tbnz	w1, #6, 388c4 <Perl_re_indentf@@Base+0x6698>
   34a50:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34a54:	add	x3, x3, #0xc10
   34a58:	add	x3, x3, #0x590
   34a5c:	mov	w2, #0xb37                 	// #2871
   34a60:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34a64:	add	x1, x1, #0xfb8
   34a68:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34a6c:	add	x0, x0, #0xda0
   34a70:	bl	58e0 <__assert_fail@plt>
   34a74:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34a78:	add	x3, x3, #0xc10
   34a7c:	add	x3, x3, #0x590
   34a80:	mov	w2, #0xb37                 	// #2871
   34a84:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34a88:	add	x1, x1, #0xfb8
   34a8c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34a90:	add	x0, x0, #0x160
   34a94:	bl	58e0 <__assert_fail@plt>
   34a98:	and	w1, w0, #0xff
   34a9c:	sub	w1, w1, #0x9
   34aa0:	cmp	w1, #0x1
   34aa4:	b.hi	388f8 <Perl_re_indentf@@Base+0x66cc>  // b.pmore
   34aa8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34aac:	add	x3, x3, #0xc10
   34ab0:	add	x3, x3, #0x590
   34ab4:	mov	w2, #0xb37                 	// #2871
   34ab8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34abc:	add	x1, x1, #0xfb8
   34ac0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34ac4:	add	x0, x0, #0x190
   34ac8:	bl	58e0 <__assert_fail@plt>
   34acc:	ldr	x1, [x22]
   34ad0:	ldrb	w1, [x1, #129]
   34ad4:	tbnz	w1, #6, 38904 <Perl_re_indentf@@Base+0x66d8>
   34ad8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34adc:	add	x3, x3, #0xc10
   34ae0:	add	x3, x3, #0x590
   34ae4:	mov	w2, #0xb37                 	// #2871
   34ae8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34aec:	add	x1, x1, #0xfb8
   34af0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34af4:	add	x0, x0, #0x1a8
   34af8:	bl	58e0 <__assert_fail@plt>
   34afc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34b00:	add	x3, x3, #0xc10
   34b04:	add	x3, x3, #0x590
   34b08:	mov	w2, #0xb37                 	// #2871
   34b0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34b10:	add	x1, x1, #0xfb8
   34b14:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   34b18:	add	x0, x0, #0x3d0
   34b1c:	bl	58e0 <__assert_fail@plt>
   34b20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34b24:	add	x3, x3, #0xc10
   34b28:	add	x3, x3, #0x590
   34b2c:	mov	w2, #0xb37                 	// #2871
   34b30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34b34:	add	x1, x1, #0xfb8
   34b38:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   34b3c:	add	x0, x0, #0x320
   34b40:	bl	58e0 <__assert_fail@plt>
   34b44:	ldr	x0, [sp, #304]
   34b48:	strb	w0, [sp, #336]
   34b4c:	mov	x2, #0x1                   	// #1
   34b50:	ldr	x1, [sp, #160]
   34b54:	mov	x0, x28
   34b58:	bl	59a0 <Perl_newSVpvn@plt>
   34b5c:	mov	x2, x0
   34b60:	ldr	x1, [sp, #144]
   34b64:	mov	x0, x28
   34b68:	bl	5430 <Perl_av_push@plt>
   34b6c:	ldr	w0, [sp, #136]
   34b70:	cbz	w0, 350fc <Perl_re_indentf@@Base+0x2ed0>
   34b74:	ldr	x0, [sp, #304]
   34b78:	lsr	x2, x0, #3
   34b7c:	ldr	x3, [x27, #32]
   34b80:	and	w1, w0, #0x7
   34b84:	mov	w0, #0x1                   	// #1
   34b88:	lsl	w0, w0, w1
   34b8c:	ldrb	w1, [x3, x2]
   34b90:	orr	w0, w0, w1
   34b94:	strb	w0, [x3, x2]
   34b98:	cbz	x26, 34bc4 <Perl_re_indentf@@Base+0x2998>
   34b9c:	ldrb	w0, [sp, #304]
   34ba0:	ldrb	w0, [x26, x0]
   34ba4:	ubfx	x2, x0, #3, #5
   34ba8:	ldr	x3, [x27, #32]
   34bac:	and	w1, w0, #0x7
   34bb0:	mov	w0, #0x1                   	// #1
   34bb4:	lsl	w0, w0, w1
   34bb8:	ldrb	w1, [x3, x2]
   34bbc:	orr	w0, w0, w1
   34bc0:	strb	w0, [x3, x2]
   34bc4:	ldr	w0, [x25, #192]
   34bc8:	cbnz	w0, 3532c <Perl_re_indentf@@Base+0x3100>
   34bcc:	ldr	x0, [sp, #304]
   34bd0:	cmp	x0, #0x7f
   34bd4:	b.ls	35334 <Perl_re_indentf@@Base+0x3108>  // b.plast
   34bd8:	tst	x0, #0xfffff800
   34bdc:	b.ne	34c18 <Perl_re_indentf@@Base+0x29ec>  // b.any
   34be0:	lsr	x0, x0, #6
   34be4:	tst	x0, #0xffffffffffffff00
   34be8:	b.ne	34c3c <Perl_re_indentf@@Base+0x2a10>  // b.any
   34bec:	orr	w2, w0, #0xffffffc0
   34bf0:	ubfx	x2, x2, #3, #5
   34bf4:	ldr	x3, [x27, #32]
   34bf8:	and	w0, w0, #0x7
   34bfc:	mov	w1, #0x1                   	// #1
   34c00:	lsl	w0, w1, w0
   34c04:	ldrb	w1, [x3, x2]
   34c08:	orr	w0, w0, w1
   34c0c:	strb	w0, [x3, x2]
   34c10:	str	wzr, [sp, #136]
   34c14:	b	350fc <Perl_re_indentf@@Base+0x2ed0>
   34c18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34c1c:	add	x3, x3, #0xc10
   34c20:	add	x3, x3, #0x590
   34c24:	mov	w2, #0xb3c                 	// #2876
   34c28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34c2c:	add	x1, x1, #0xfb8
   34c30:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   34c34:	add	x0, x0, #0x908
   34c38:	bl	58e0 <__assert_fail@plt>
   34c3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34c40:	add	x3, x3, #0xc10
   34c44:	add	x3, x3, #0x590
   34c48:	mov	w2, #0xb3c                 	// #2876
   34c4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34c50:	add	x1, x1, #0xfb8
   34c54:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   34c58:	add	x0, x0, #0x948
   34c5c:	bl	58e0 <__assert_fail@plt>
   34c60:	mov	w1, #0xc                   	// #12
   34c64:	mov	x0, x28
   34c68:	bl	57e0 <Perl_newSV_type@plt>
   34c6c:	str	x0, [sp, #120]
   34c70:	b	3517c <Perl_re_indentf@@Base+0x2f50>
   34c74:	ldr	x2, [sp, #304]
   34c78:	adrp	x1, 78000 <boot_re@@Base+0x1641c>
   34c7c:	add	x1, x1, #0xa08
   34c80:	mov	x0, x28
   34c84:	bl	5420 <Perl_croak@plt>
   34c88:	mov	x0, x28
   34c8c:	bl	55e0 <Perl_mg_get@plt>
   34c90:	b	351b4 <Perl_re_indentf@@Base+0x2f88>
   34c94:	ldr	w0, [x1, #12]
   34c98:	tst	w0, #0xff00
   34c9c:	b.eq	351e4 <Perl_re_indentf@@Base+0x2fb8>  // b.none
   34ca0:	tbz	w0, #10, 34ce4 <Perl_re_indentf@@Base+0x2ab8>
   34ca4:	ldr	x2, [x1]
   34ca8:	mov	w0, #0x0                   	// #0
   34cac:	cbz	x2, 34cc0 <Perl_re_indentf@@Base+0x2a94>
   34cb0:	ldr	x2, [x2, #16]
   34cb4:	mov	w0, #0x1                   	// #1
   34cb8:	cmp	x2, #0x1
   34cbc:	b.ls	34cc8 <Perl_re_indentf@@Base+0x2a9c>  // b.plast
   34cc0:	eor	w0, w0, #0x1
   34cc4:	b	351e0 <Perl_re_indentf@@Base+0x2fb4>
   34cc8:	mov	w0, #0x0                   	// #0
   34ccc:	cbz	x2, 34cc0 <Perl_re_indentf@@Base+0x2a94>
   34cd0:	ldr	x0, [x1, #16]
   34cd4:	ldrb	w0, [x0]
   34cd8:	cmp	w0, #0x30
   34cdc:	cset	w0, ne  // ne = any
   34ce0:	b	34cc0 <Perl_re_indentf@@Base+0x2a94>
   34ce4:	tbz	w0, #8, 34d74 <Perl_re_indentf@@Base+0x2b48>
   34ce8:	and	w3, w0, #0xf
   34cec:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   34cf0:	ldr	x2, [x2, #3712]
   34cf4:	ldrb	w2, [x2, w3, uxtw]
   34cf8:	cbz	w2, 34d1c <Perl_re_indentf@@Base+0x2af0>
   34cfc:	and	w2, w0, #0xc000
   34d00:	cmp	w2, #0x8, lsl #12
   34d04:	b.eq	34d40 <Perl_re_indentf@@Base+0x2b14>  // b.none
   34d08:	ldr	x0, [x1]
   34d0c:	ldr	x0, [x0, #32]
   34d10:	cmp	x0, #0x0
   34d14:	cset	w0, eq  // eq = none
   34d18:	b	351e0 <Perl_re_indentf@@Base+0x2fb4>
   34d1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34d20:	add	x3, x3, #0xc10
   34d24:	add	x3, x3, #0x590
   34d28:	mov	w2, #0xb51                 	// #2897
   34d2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34d30:	add	x1, x1, #0xfb8
   34d34:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34d38:	add	x0, x0, #0xda0
   34d3c:	bl	58e0 <__assert_fail@plt>
   34d40:	and	w0, w0, #0xff
   34d44:	sub	w0, w0, #0x9
   34d48:	cmp	w0, #0x1
   34d4c:	b.hi	34d08 <Perl_re_indentf@@Base+0x2adc>  // b.pmore
   34d50:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34d54:	add	x3, x3, #0xc10
   34d58:	add	x3, x3, #0x590
   34d5c:	mov	w2, #0xb51                 	// #2897
   34d60:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34d64:	add	x1, x1, #0xfb8
   34d68:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34d6c:	add	x0, x0, #0xdd0
   34d70:	bl	58e0 <__assert_fail@plt>
   34d74:	tbz	w0, #11, 34ddc <Perl_re_indentf@@Base+0x2bb0>
   34d78:	and	w3, w0, #0xf
   34d7c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   34d80:	ldr	x2, [x2, #3840]
   34d84:	ldrb	w2, [x2, w3, uxtw]
   34d88:	cbz	w2, 34df4 <Perl_re_indentf@@Base+0x2bc8>
   34d8c:	and	w4, w0, #0xc000
   34d90:	cmp	w4, #0x8, lsl #12
   34d94:	b.eq	34e18 <Perl_re_indentf@@Base+0x2bec>  // b.none
   34d98:	and	w0, w0, #0xff
   34d9c:	cmp	w0, #0xf
   34da0:	b.eq	34e4c <Perl_re_indentf@@Base+0x2c20>  // b.none
   34da4:	ldr	x3, [x1, #16]
   34da8:	ldr	w2, [x3, #12]
   34dac:	tbz	w2, #20, 350fc <Perl_re_indentf@@Base+0x2ed0>
   34db0:	cmp	w4, #0x8, lsl #12
   34db4:	b.eq	34e7c <Perl_re_indentf@@Base+0x2c50>  // b.none
   34db8:	cmp	w0, #0xf
   34dbc:	b.eq	34eac <Perl_re_indentf@@Base+0x2c80>  // b.none
   34dc0:	and	w2, w2, #0xff
   34dc4:	cmp	w2, #0x6
   34dc8:	b.ls	34edc <Perl_re_indentf@@Base+0x2cb0>  // b.plast
   34dcc:	ldr	x0, [x3]
   34dd0:	ldr	x0, [x0]
   34dd4:	ldr	w0, [x0, #12]
   34dd8:	tbz	w0, #28, 350fc <Perl_re_indentf@@Base+0x2ed0>
   34ddc:	mov	w2, #0x0                   	// #0
   34de0:	mov	x0, x28
   34de4:	bl	4ec0 <Perl_sv_2bool_flags@plt>
   34de8:	and	w0, w0, #0xff
   34dec:	cbnz	w0, 350fc <Perl_re_indentf@@Base+0x2ed0>
   34df0:	b	351e4 <Perl_re_indentf@@Base+0x2fb8>
   34df4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34df8:	add	x3, x3, #0xc10
   34dfc:	add	x3, x3, #0x590
   34e00:	mov	w2, #0xb51                 	// #2897
   34e04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34e08:	add	x1, x1, #0xfb8
   34e0c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34e10:	add	x0, x0, #0x160
   34e14:	bl	58e0 <__assert_fail@plt>
   34e18:	and	w2, w0, #0xff
   34e1c:	sub	w2, w2, #0x9
   34e20:	cmp	w2, #0x1
   34e24:	b.hi	34d98 <Perl_re_indentf@@Base+0x2b6c>  // b.pmore
   34e28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34e2c:	add	x3, x3, #0xc10
   34e30:	add	x3, x3, #0x590
   34e34:	mov	w2, #0xb51                 	// #2897
   34e38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34e3c:	add	x1, x1, #0xfb8
   34e40:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34e44:	add	x0, x0, #0x190
   34e48:	bl	58e0 <__assert_fail@plt>
   34e4c:	ldr	x2, [x1]
   34e50:	ldrb	w2, [x2, #129]
   34e54:	tbnz	w2, #6, 34da4 <Perl_re_indentf@@Base+0x2b78>
   34e58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34e5c:	add	x3, x3, #0xc10
   34e60:	add	x3, x3, #0x590
   34e64:	mov	w2, #0xb51                 	// #2897
   34e68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34e6c:	add	x1, x1, #0xfb8
   34e70:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34e74:	add	x0, x0, #0x1a8
   34e78:	bl	58e0 <__assert_fail@plt>
   34e7c:	sub	w4, w0, #0x9
   34e80:	cmp	w4, #0x1
   34e84:	b.hi	34db8 <Perl_re_indentf@@Base+0x2b8c>  // b.pmore
   34e88:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34e8c:	add	x3, x3, #0xc10
   34e90:	add	x3, x3, #0x590
   34e94:	mov	w2, #0xb51                 	// #2897
   34e98:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34e9c:	add	x1, x1, #0xfb8
   34ea0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34ea4:	add	x0, x0, #0x190
   34ea8:	bl	58e0 <__assert_fail@plt>
   34eac:	ldr	x0, [x1]
   34eb0:	ldrb	w0, [x0, #129]
   34eb4:	tbnz	w0, #6, 34dc0 <Perl_re_indentf@@Base+0x2b94>
   34eb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34ebc:	add	x3, x3, #0xc10
   34ec0:	add	x3, x3, #0x590
   34ec4:	mov	w2, #0xb51                 	// #2897
   34ec8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34ecc:	add	x1, x1, #0xfb8
   34ed0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34ed4:	add	x0, x0, #0x1a8
   34ed8:	bl	58e0 <__assert_fail@plt>
   34edc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34ee0:	add	x3, x3, #0xc10
   34ee4:	add	x3, x3, #0x590
   34ee8:	mov	w2, #0xb51                 	// #2897
   34eec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34ef0:	add	x1, x1, #0xfb8
   34ef4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   34ef8:	add	x0, x0, #0x1f0
   34efc:	bl	58e0 <__assert_fail@plt>
   34f00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34f04:	add	x3, x3, #0xc10
   34f08:	add	x3, x3, #0x590
   34f0c:	mov	w2, #0xb53                 	// #2899
   34f10:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34f14:	add	x1, x1, #0xfb8
   34f18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34f1c:	add	x0, x0, #0xd10
   34f20:	bl	58e0 <__assert_fail@plt>
   34f24:	and	w1, w0, #0xff
   34f28:	sub	w1, w1, #0x9
   34f2c:	cmp	w1, #0x1
   34f30:	b.hi	35240 <Perl_re_indentf@@Base+0x3014>  // b.pmore
   34f34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34f38:	add	x3, x3, #0xc10
   34f3c:	add	x3, x3, #0x590
   34f40:	mov	w2, #0xb53                 	// #2899
   34f44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34f48:	add	x1, x1, #0xfb8
   34f4c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34f50:	add	x0, x0, #0xd40
   34f54:	bl	58e0 <__assert_fail@plt>
   34f58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34f5c:	add	x3, x3, #0xc10
   34f60:	add	x3, x3, #0x590
   34f64:	mov	w2, #0xb53                 	// #2899
   34f68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34f6c:	add	x1, x1, #0xfb8
   34f70:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   34f74:	add	x0, x0, #0xd58
   34f78:	bl	58e0 <__assert_fail@plt>
   34f7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34f80:	add	x3, x3, #0xc10
   34f84:	add	x3, x3, #0x590
   34f88:	mov	w2, #0xb53                 	// #2899
   34f8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34f90:	add	x1, x1, #0xfb8
   34f94:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34f98:	add	x0, x0, #0xd58
   34f9c:	bl	58e0 <__assert_fail@plt>
   34fa0:	and	w2, w1, #0xff
   34fa4:	sub	w2, w2, #0x9
   34fa8:	cmp	w2, #0x1
   34fac:	b.hi	35298 <Perl_re_indentf@@Base+0x306c>  // b.pmore
   34fb0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34fb4:	add	x3, x3, #0xc10
   34fb8:	add	x3, x3, #0x590
   34fbc:	mov	w2, #0xb53                 	// #2899
   34fc0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34fc4:	add	x1, x1, #0xfb8
   34fc8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34fcc:	add	x0, x0, #0xd88
   34fd0:	bl	58e0 <__assert_fail@plt>
   34fd4:	ldr	x1, [x22]
   34fd8:	ldrb	w1, [x1, #129]
   34fdc:	tbnz	w1, #6, 352a4 <Perl_re_indentf@@Base+0x3078>
   34fe0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   34fe4:	add	x3, x3, #0xc10
   34fe8:	add	x3, x3, #0x590
   34fec:	mov	w2, #0xb53                 	// #2899
   34ff0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   34ff4:	add	x1, x1, #0xfb8
   34ff8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   34ffc:	add	x0, x0, #0xda0
   35000:	bl	58e0 <__assert_fail@plt>
   35004:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35008:	add	x3, x3, #0xc10
   3500c:	add	x3, x3, #0x590
   35010:	mov	w2, #0xb53                 	// #2899
   35014:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35018:	add	x1, x1, #0xfb8
   3501c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   35020:	add	x0, x0, #0x160
   35024:	bl	58e0 <__assert_fail@plt>
   35028:	and	w1, w0, #0xff
   3502c:	sub	w1, w1, #0x9
   35030:	cmp	w1, #0x1
   35034:	b.hi	352d8 <Perl_re_indentf@@Base+0x30ac>  // b.pmore
   35038:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3503c:	add	x3, x3, #0xc10
   35040:	add	x3, x3, #0x590
   35044:	mov	w2, #0xb53                 	// #2899
   35048:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3504c:	add	x1, x1, #0xfb8
   35050:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   35054:	add	x0, x0, #0x190
   35058:	bl	58e0 <__assert_fail@plt>
   3505c:	ldr	x1, [x22]
   35060:	ldrb	w1, [x1, #129]
   35064:	tbnz	w1, #6, 352e4 <Perl_re_indentf@@Base+0x30b8>
   35068:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3506c:	add	x3, x3, #0xc10
   35070:	add	x3, x3, #0x590
   35074:	mov	w2, #0xb53                 	// #2899
   35078:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3507c:	add	x1, x1, #0xfb8
   35080:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   35084:	add	x0, x0, #0x1a8
   35088:	bl	58e0 <__assert_fail@plt>
   3508c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35090:	add	x3, x3, #0xc10
   35094:	add	x3, x3, #0x590
   35098:	mov	w2, #0xb53                 	// #2899
   3509c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   350a0:	add	x1, x1, #0xfb8
   350a4:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   350a8:	add	x0, x0, #0xa40
   350ac:	bl	58e0 <__assert_fail@plt>
   350b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   350b4:	add	x3, x3, #0xc10
   350b8:	add	x3, x3, #0x590
   350bc:	mov	w2, #0xb53                 	// #2899
   350c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   350c4:	add	x1, x1, #0xfb8
   350c8:	adrp	x0, 78000 <boot_re@@Base+0x1641c>
   350cc:	add	x0, x0, #0x320
   350d0:	bl	58e0 <__assert_fail@plt>
   350d4:	ldr	x0, [sp, #304]
   350d8:	strb	w0, [sp, #336]
   350dc:	mov	x2, #0x1                   	// #1
   350e0:	ldr	x1, [sp, #160]
   350e4:	mov	x0, x28
   350e8:	bl	59a0 <Perl_newSVpvn@plt>
   350ec:	mov	x2, x0
   350f0:	ldr	x1, [sp, #144]
   350f4:	mov	x0, x28
   350f8:	bl	5430 <Perl_av_push@plt>
   350fc:	add	x19, x19, x20
   35100:	ldr	x0, [sp, #112]
   35104:	cmp	x0, x19
   35108:	b.ls	35344 <Perl_re_indentf@@Base+0x3118>  // b.plast
   3510c:	ldr	x0, [x27, #96]
   35110:	add	x0, x0, #0x1
   35114:	str	x0, [x27, #96]
   35118:	ldr	w3, [x25, #192]
   3511c:	cbnz	w3, 33240 <Perl_re_indentf@@Base+0x1014>
   35120:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   35124:	ldr	x0, [x0, #3752]
   35128:	cmp	x26, x0
   3512c:	b.eq	332c8 <Perl_re_indentf@@Base+0x109c>  // b.none
   35130:	ldrb	w0, [x19]
   35134:	str	x0, [sp, #304]
   35138:	add	x24, x24, #0x1
   3513c:	mov	x20, #0x1                   	// #1
   35140:	cbz	x26, 387ec <Perl_re_indentf@@Base+0x65c0>
   35144:	cmp	w21, #0x0
   35148:	b.le	33308 <Perl_re_indentf@@Base+0x10dc>
   3514c:	mov	w0, #0x1                   	// #1
   35150:	cbz	w3, 35164 <Perl_re_indentf@@Base+0x2f38>
   35154:	ldrb	w1, [x19]
   35158:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3515c:	ldr	x0, [x0, #4064]
   35160:	ldrb	w0, [x0, w1, sxtw]
   35164:	sub	w21, w21, w0
   35168:	ldr	x0, [sp, #304]
   3516c:	cmp	x0, #0xff
   35170:	b.ls	34618 <Perl_re_indentf@@Base+0x23ec>  // b.plast
   35174:	ldr	x0, [sp, #120]
   35178:	cbz	x0, 34c60 <Perl_re_indentf@@Base+0x2a34>
   3517c:	mov	w6, #0x0                   	// #0
   35180:	mov	x5, #0x0                   	// #0
   35184:	mov	w4, #0x30                  	// #48
   35188:	mov	w3, #0x8                   	// #8
   3518c:	ldr	x2, [sp, #152]
   35190:	ldr	x1, [sp, #120]
   35194:	mov	x0, x28
   35198:	bl	57a0 <Perl_hv_common_key_len@plt>
   3519c:	mov	x22, x0
   351a0:	cbz	x0, 34c74 <Perl_re_indentf@@Base+0x2a48>
   351a4:	ldr	x1, [x0]
   351a8:	cbz	x1, 351e4 <Perl_re_indentf@@Base+0x2fb8>
   351ac:	ldr	w0, [x1, #12]
   351b0:	tbnz	w0, #21, 34c88 <Perl_re_indentf@@Base+0x2a5c>
   351b4:	ldr	x1, [x22]
   351b8:	add	x2, x28, #0x138
   351bc:	sub	x0, x1, x2
   351c0:	asr	x0, x0, #3
   351c4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   351c8:	movk	x3, #0xaaab
   351cc:	mul	x0, x0, x3
   351d0:	cmp	x0, #0x3
   351d4:	b.hi	34c94 <Perl_re_indentf@@Base+0x2a68>  // b.pmore
   351d8:	cmp	x1, x2
   351dc:	cset	w0, ne  // ne = any
   351e0:	cbz	w0, 350fc <Perl_re_indentf@@Base+0x2ed0>
   351e4:	ldr	x1, [x22]
   351e8:	ldrh	w2, [x27, #56]
   351ec:	add	w2, w2, #0x1
   351f0:	and	w2, w2, #0xffff
   351f4:	strh	w2, [x27, #56]
   351f8:	and	x2, x2, #0xffff
   351fc:	mov	x0, x28
   35200:	bl	5970 <Perl_sv_setiv@plt>
   35204:	ldr	w0, [x25, #192]
   35208:	cbz	w0, 350d4 <Perl_re_indentf@@Base+0x2ea8>
   3520c:	mov	x1, #0xd                   	// #13
   35210:	mov	x0, x28
   35214:	bl	5020 <Perl_newSV@plt>
   35218:	mov	x22, x0
   3521c:	ldr	w0, [x0, #12]
   35220:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   35224:	ldr	x1, [x1, #3888]
   35228:	and	w2, w0, #0xf
   3522c:	ldrb	w1, [x1, w2, uxtw]
   35230:	cbz	w1, 34f00 <Perl_re_indentf@@Base+0x2cd4>
   35234:	and	w1, w0, #0xc000
   35238:	cmp	w1, #0x8, lsl #12
   3523c:	b.eq	34f24 <Perl_re_indentf@@Base+0x2cf8>  // b.none
   35240:	and	w0, w0, #0xff
   35244:	cmp	w0, #0xf
   35248:	b.ne	35258 <Perl_re_indentf@@Base+0x302c>  // b.any
   3524c:	ldr	x0, [x22]
   35250:	ldrb	w0, [x0, #129]
   35254:	tbz	w0, #6, 34f58 <Perl_re_indentf@@Base+0x2d2c>
   35258:	ldr	x23, [x22, #16]
   3525c:	mov	x4, #0x0                   	// #0
   35260:	mov	x3, #0x0                   	// #0
   35264:	ldr	x2, [sp, #304]
   35268:	mov	x1, x23
   3526c:	mov	x0, x28
   35270:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   35274:	ldr	w1, [x22, #12]
   35278:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3527c:	ldr	x2, [x2, #3888]
   35280:	and	w3, w1, #0xf
   35284:	ldrb	w2, [x2, w3, uxtw]
   35288:	cbz	w2, 34f7c <Perl_re_indentf@@Base+0x2d50>
   3528c:	and	w2, w1, #0xc000
   35290:	cmp	w2, #0x8, lsl #12
   35294:	b.eq	34fa0 <Perl_re_indentf@@Base+0x2d74>  // b.none
   35298:	and	w1, w1, #0xff
   3529c:	cmp	w1, #0xf
   352a0:	b.eq	34fd4 <Perl_re_indentf@@Base+0x2da8>  // b.none
   352a4:	ldr	x1, [x22]
   352a8:	sub	x23, x0, x23
   352ac:	str	x23, [x1, #16]
   352b0:	ldr	w0, [x22, #12]
   352b4:	tbz	w0, #11, 352ec <Perl_re_indentf@@Base+0x30c0>
   352b8:	and	w2, w0, #0xf
   352bc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   352c0:	ldr	x1, [x1, #3840]
   352c4:	ldrb	w1, [x1, w2, uxtw]
   352c8:	cbz	w1, 35004 <Perl_re_indentf@@Base+0x2dd8>
   352cc:	and	w1, w0, #0xc000
   352d0:	cmp	w1, #0x8, lsl #12
   352d4:	b.eq	35028 <Perl_re_indentf@@Base+0x2dfc>  // b.none
   352d8:	and	w1, w0, #0xff
   352dc:	cmp	w1, #0xf
   352e0:	b.eq	3505c <Perl_re_indentf@@Base+0x2e30>  // b.none
   352e4:	ldr	x1, [x22, #16]
   352e8:	cbnz	x1, 3508c <Perl_re_indentf@@Base+0x2e60>
   352ec:	and	w1, w0, #0xc000
   352f0:	cmp	w1, #0x8, lsl #12
   352f4:	b.ne	35308 <Perl_re_indentf@@Base+0x30dc>  // b.any
   352f8:	and	w1, w0, #0xff
   352fc:	sub	w1, w1, #0x9
   35300:	cmp	w1, #0x1
   35304:	b.ls	350b0 <Perl_re_indentf@@Base+0x2e84>  // b.plast
   35308:	mov	w1, #0x4400                	// #17408
   3530c:	movk	w1, #0x2000, lsl #16
   35310:	orr	w0, w0, w1
   35314:	str	w0, [x22, #12]
   35318:	mov	x2, x22
   3531c:	ldr	x1, [sp, #144]
   35320:	mov	x0, x28
   35324:	bl	5430 <Perl_av_push@plt>
   35328:	b	350fc <Perl_re_indentf@@Base+0x2ed0>
   3532c:	str	wzr, [sp, #136]
   35330:	b	350fc <Perl_re_indentf@@Base+0x2ed0>
   35334:	str	wzr, [sp, #136]
   35338:	b	350fc <Perl_re_indentf@@Base+0x2ed0>
   3533c:	mov	x24, #0x0                   	// #0
   35340:	str	xzr, [sp, #128]
   35344:	ldr	x0, [sp, #256]
   35348:	ldr	x1, [sp, #168]
   3534c:	cmp	x0, x1
   35350:	b.eq	3536c <Perl_re_indentf@@Base+0x3140>  // b.none
   35354:	ldr	x0, [x27, #64]
   35358:	ldr	x1, [sp, #128]
   3535c:	cmp	x0, x1
   35360:	b.ls	3537c <Perl_re_indentf@@Base+0x3150>  // b.plast
   35364:	str	x1, [x27, #64]
   35368:	b	33144 <Perl_re_indentf@@Base+0xf18>
   3536c:	ldr	x0, [sp, #128]
   35370:	str	x0, [x27, #64]
   35374:	str	x24, [x27, #72]
   35378:	b	33144 <Perl_re_indentf@@Base+0xf18>
   3537c:	ldr	x0, [x27, #72]
   35380:	cmp	x0, x24
   35384:	b.cs	33144 <Perl_re_indentf@@Base+0xf18>  // b.hs, b.nlast
   35388:	str	x24, [x27, #72]
   3538c:	b	33144 <Perl_re_indentf@@Base+0xf18>
   35390:	ldr	w0, [x28, #2368]
   35394:	tbnz	w0, #20, 353a0 <Perl_re_indentf@@Base+0x3174>
   35398:	ldr	x0, [sp, #312]
   3539c:	tbz	w0, #2, 353ec <Perl_re_indentf@@Base+0x31c0>
   353a0:	ldr	w0, [sp, #352]
   353a4:	add	w2, w0, #0x1
   353a8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   353ac:	add	x0, x0, #0xc58
   353b0:	adrp	x3, 77000 <boot_re@@Base+0x1541c>
   353b4:	add	x3, x3, #0xc60
   353b8:	ldr	x1, [sp, #120]
   353bc:	cmp	x1, #0x0
   353c0:	csel	x3, x3, x0, ne  // ne = any
   353c4:	ldr	x7, [x27, #64]
   353c8:	ldrh	w6, [x27, #56]
   353cc:	ldr	x5, [x27, #96]
   353d0:	ldr	x0, [x27, #72]
   353d4:	str	w0, [sp]
   353d8:	ldr	w4, [sp, #284]
   353dc:	adrp	x1, 78000 <boot_re@@Base+0x1641c>
   353e0:	add	x1, x1, #0xf78
   353e4:	mov	x0, x28
   353e8:	bl	5940 <Perl_re_indentf@plt>
   353ec:	ldr	x0, [x27, #96]
   353f0:	add	x0, x0, #0x2
   353f4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   353f8:	cmp	x0, x1
   353fc:	b.hi	3552c <Perl_re_indentf@@Base+0x3300>  // b.pmore
   35400:	lsl	x0, x0, #2
   35404:	bl	5250 <Perl_safesysmalloc@plt>
   35408:	str	x0, [sp, #168]
   3540c:	str	wzr, [x0, #4]
   35410:	ldr	x19, [x27, #96]
   35414:	ldrh	w0, [x27, #56]
   35418:	madd	x0, x19, x0, x0
   3541c:	add	x19, x0, #0x1
   35420:	ldr	x0, [sp, #224]
   35424:	ldr	w0, [x0, #12]
   35428:	and	w1, w0, #0x3fff00
   3542c:	and	w1, w1, #0xffe001ff
   35430:	cmp	w1, #0x100
   35434:	b.ne	35588 <Perl_re_indentf@@Base+0x335c>  // b.any
   35438:	and	w2, w0, #0xf
   3543c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   35440:	ldr	x1, [x1, #3712]
   35444:	ldrb	w1, [x1, w2, uxtw]
   35448:	cbz	w1, 35530 <Perl_re_indentf@@Base+0x3304>
   3544c:	and	w1, w0, #0xc000
   35450:	cmp	w1, #0x8, lsl #12
   35454:	b.eq	35554 <Perl_re_indentf@@Base+0x3328>  // b.none
   35458:	ldr	x0, [sp, #224]
   3545c:	ldr	x0, [x0]
   35460:	ldr	x0, [x0, #32]
   35464:	cmp	x19, x0
   35468:	b.le	36394 <Perl_re_indentf@@Base+0x4168>
   3546c:	ldr	w0, [x28, #2368]
   35470:	tbnz	w0, #20, 3547c <Perl_re_indentf@@Base+0x3250>
   35474:	ldr	x0, [sp, #312]
   35478:	tbz	w0, #2, 354a4 <Perl_re_indentf@@Base+0x3278>
   3547c:	ldr	w0, [x28, #2368]
   35480:	tbnz	w0, #20, 3548c <Perl_re_indentf@@Base+0x3260>
   35484:	ldr	x0, [sp, #312]
   35488:	tbz	w0, #16, 354a4 <Perl_re_indentf@@Base+0x3278>
   3548c:	ldr	w0, [sp, #352]
   35490:	add	w2, w0, #0x1
   35494:	adrp	x1, 78000 <boot_re@@Base+0x1641c>
   35498:	add	x1, x1, #0xfa8
   3549c:	mov	x0, x28
   354a0:	bl	5940 <Perl_re_indentf@plt>
   354a4:	ldr	x0, [x27, #96]
   354a8:	mov	x1, #0x10                  	// #16
   354ac:	add	x0, x0, #0x2
   354b0:	bl	5280 <calloc@plt>
   354b4:	mov	x19, x0
   354b8:	str	x0, [x27, #16]
   354bc:	mov	x0, #0x20                  	// #32
   354c0:	bl	5250 <Perl_safesysmalloc@plt>
   354c4:	str	x0, [x19, #24]
   354c8:	ldr	x0, [x27, #16]
   354cc:	ldr	x0, [x0, #24]
   354d0:	mov	w1, #0x1                   	// #1
   354d4:	strh	w1, [x0]
   354d8:	ldr	x0, [x27, #16]
   354dc:	ldr	x0, [x0, #24]
   354e0:	mov	w1, #0x4                   	// #4
   354e4:	str	w1, [x0, #4]
   354e8:	ldr	x0, [sp, #256]
   354ec:	ldr	x1, [sp, #184]
   354f0:	cmp	x0, x1
   354f4:	b.cs	35ca0 <Perl_re_indentf@@Base+0x3a74>  // b.hs, b.nlast
   354f8:	str	x0, [sp, #216]
   354fc:	mov	x0, #0x1                   	// #1
   35500:	str	x0, [sp, #112]
   35504:	str	xzr, [sp, #272]
   35508:	str	xzr, [sp, #240]
   3550c:	mov	w0, #0x2                   	// #2
   35510:	str	wzr, [sp, #224]
   35514:	add	x1, sp, #0x130
   35518:	str	x1, [sp, #232]
   3551c:	str	x26, [sp, #160]
   35520:	str	x28, [sp, #152]
   35524:	mov	w28, w0
   35528:	b	35a3c <Perl_re_indentf@@Base+0x3810>
   3552c:	bl	26bcc <my_regexec@@Base+0x36d8>
   35530:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35534:	add	x3, x3, #0xc10
   35538:	add	x3, x3, #0x590
   3553c:	mov	w2, #0xb86                 	// #2950
   35540:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35544:	add	x1, x1, #0xfb8
   35548:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3554c:	add	x0, x0, #0xda0
   35550:	bl	58e0 <__assert_fail@plt>
   35554:	and	w0, w0, #0xff
   35558:	sub	w0, w0, #0x9
   3555c:	cmp	w0, #0x1
   35560:	b.hi	35458 <Perl_re_indentf@@Base+0x322c>  // b.pmore
   35564:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35568:	add	x3, x3, #0xc10
   3556c:	add	x3, x3, #0x590
   35570:	mov	w2, #0xb86                 	// #2950
   35574:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35578:	add	x1, x1, #0xfb8
   3557c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35580:	add	x0, x0, #0xdd0
   35584:	bl	58e0 <__assert_fail@plt>
   35588:	mov	w2, #0x2                   	// #2
   3558c:	ldr	x1, [sp, #224]
   35590:	mov	x0, x28
   35594:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   35598:	b	35464 <Perl_re_indentf@@Base+0x3238>
   3559c:	ldr	x0, [sp, #152]
   355a0:	bl	58a0 <Perl_regnext@plt>
   355a4:	ldr	x1, [sp, #176]
   355a8:	cmp	x1, x0
   355ac:	b.ls	35a54 <Perl_re_indentf@@Base+0x3828>  // b.plast
   355b0:	str	x0, [sp, #192]
   355b4:	b	35a64 <Perl_re_indentf@@Base+0x3838>
   355b8:	ldrb	w0, [x21]
   355bc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   355c0:	ldr	x1, [x1, #4064]
   355c4:	ldrb	w2, [x1, w0, sxtw]
   355c8:	and	x24, x2, #0xff
   355cc:	add	x3, x21, w2, uxtb
   355d0:	and	x1, x0, #0xff
   355d4:	cmp	x24, #0x1
   355d8:	b.eq	35618 <Perl_re_indentf@@Base+0x33ec>  // b.none
   355dc:	sub	w2, w2, #0x2
   355e0:	mov	w1, #0x1f                  	// #31
   355e4:	asr	w2, w1, w2
   355e8:	cmp	x24, #0x7
   355ec:	csel	w1, w2, wzr, cc  // cc = lo, ul, last
   355f0:	and	w0, w0, w1
   355f4:	sxtw	x1, w0
   355f8:	add	x0, x21, #0x1
   355fc:	cmp	x3, x0
   35600:	b.ls	35618 <Perl_re_indentf@@Base+0x33ec>  // b.plast
   35604:	ldrb	w2, [x0], #1
   35608:	bfi	x2, x1, #6, #58
   3560c:	mov	x1, x2
   35610:	cmp	x3, x0
   35614:	b.ne	35604 <Perl_re_indentf@@Base+0x33d8>  // b.any
   35618:	str	x1, [sp, #304]
   3561c:	cmp	x1, #0xff
   35620:	b.ls	35894 <Perl_re_indentf@@Base+0x3668>  // b.plast
   35624:	mov	w6, #0x0                   	// #0
   35628:	mov	x5, #0x0                   	// #0
   3562c:	mov	w4, #0x20                  	// #32
   35630:	mov	w3, #0x8                   	// #8
   35634:	ldr	x2, [sp, #232]
   35638:	ldr	x1, [sp, #120]
   3563c:	ldr	x0, [sp, #152]
   35640:	bl	57a0 <Perl_hv_common_key_len@plt>
   35644:	cbz	x0, 358f8 <Perl_re_indentf@@Base+0x36cc>
   35648:	ldr	x1, [x0]
   3564c:	ldr	w0, [x1, #12]
   35650:	mov	w2, #0x100                 	// #256
   35654:	movk	w2, #0x20, lsl #16
   35658:	and	w2, w0, w2
   3565c:	cmp	w2, #0x100
   35660:	b.ne	3573c <Perl_re_indentf@@Base+0x3510>  // b.any
   35664:	and	w2, w0, #0xf
   35668:	ldr	x3, [sp, #264]
   3566c:	ldrb	w2, [x3, w2, uxtw]
   35670:	cbz	w2, 356e4 <Perl_re_indentf@@Base+0x34b8>
   35674:	and	w2, w0, #0xc000
   35678:	cmp	w2, #0x8, lsl #12
   3567c:	b.eq	35708 <Perl_re_indentf@@Base+0x34dc>  // b.none
   35680:	ldr	x0, [x1]
   35684:	ldrh	w19, [x0, #32]
   35688:	b	3589c <Perl_re_indentf@@Base+0x3670>
   3568c:	ldrb	w1, [x21]
   35690:	cmp	w1, #0xdf
   35694:	b.eq	356c0 <Perl_re_indentf@@Base+0x3494>  // b.none
   35698:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3569c:	ldr	x0, [x0, #4048]
   356a0:	ldrb	w0, [x0, w1, sxtw]
   356a4:	str	x0, [sp, #304]
   356a8:	cmp	x0, #0xb5
   356ac:	b.ne	3588c <Perl_re_indentf@@Base+0x3660>  // b.any
   356b0:	mov	x0, #0x3bc                 	// #956
   356b4:	str	x0, [sp, #304]
   356b8:	mov	x24, #0x1                   	// #1
   356bc:	b	35624 <Perl_re_indentf@@Base+0x33f8>
   356c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   356c4:	add	x3, x3, #0xc10
   356c8:	add	x3, x3, #0x590
   356cc:	mov	w2, #0xbb7                 	// #2999
   356d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   356d4:	add	x1, x1, #0xfb8
   356d8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   356dc:	add	x0, x0, #0xd30
   356e0:	bl	58e0 <__assert_fail@plt>
   356e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   356e8:	add	x3, x3, #0xc10
   356ec:	add	x3, x3, #0x590
   356f0:	mov	w2, #0xbc3                 	// #3011
   356f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   356f8:	add	x1, x1, #0xfb8
   356fc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35700:	add	x0, x0, #0xda0
   35704:	bl	58e0 <__assert_fail@plt>
   35708:	and	w0, w0, #0xff
   3570c:	sub	w0, w0, #0x9
   35710:	cmp	w0, #0x1
   35714:	b.hi	35680 <Perl_re_indentf@@Base+0x3454>  // b.pmore
   35718:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3571c:	add	x3, x3, #0xc10
   35720:	add	x3, x3, #0x590
   35724:	mov	w2, #0xbc3                 	// #3011
   35728:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3572c:	add	x1, x1, #0xfb8
   35730:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35734:	add	x0, x0, #0xdd0
   35738:	bl	58e0 <__assert_fail@plt>
   3573c:	mov	w2, #0x2                   	// #2
   35740:	ldr	x0, [sp, #152]
   35744:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   35748:	and	w19, w0, #0xffff
   3574c:	b	3589c <Perl_re_indentf@@Base+0x3670>
   35750:	mov	x0, #0x20                  	// #32
   35754:	bl	5250 <Perl_safesysmalloc@plt>
   35758:	str	x0, [x22, #8]
   3575c:	ldr	x0, [x27, #16]
   35760:	add	x0, x0, x20
   35764:	ldr	x0, [x0, #8]
   35768:	mov	w1, #0x1                   	// #1
   3576c:	strh	w1, [x0]
   35770:	ldr	x0, [x27, #16]
   35774:	add	x0, x0, x20
   35778:	ldr	x0, [x0, #8]
   3577c:	mov	w1, #0x4                   	// #4
   35780:	str	w1, [x0, #4]
   35784:	b	358bc <Perl_re_indentf@@Base+0x3690>
   35788:	ldr	w0, [x3, #4]
   3578c:	cbz	w0, 357d4 <Perl_re_indentf@@Base+0x35a8>
   35790:	mov	w23, w0
   35794:	b	35854 <Perl_re_indentf@@Base+0x3628>
   35798:	cmp	w3, w1
   3579c:	b.gt	357d4 <Perl_re_indentf@@Base+0x35a8>
   357a0:	ubfiz	x1, x0, #3, #16
   357a4:	add	x3, x2, x1
   357a8:	ldrh	w1, [x2, x1]
   357ac:	cmp	w1, w19
   357b0:	b.eq	35788 <Perl_re_indentf@@Base+0x355c>  // b.none
   357b4:	add	w0, w0, #0x1
   357b8:	and	w0, w0, #0xffff
   357bc:	mov	w3, w0
   357c0:	mov	w1, w4
   357c4:	cbz	x2, 35798 <Perl_re_indentf@@Base+0x356c>
   357c8:	ldrh	w1, [x2]
   357cc:	sub	w1, w1, #0x1
   357d0:	b	35798 <Perl_re_indentf@@Base+0x356c>
   357d4:	add	w0, w28, #0x1
   357d8:	str	w0, [sp, #136]
   357dc:	ldr	x0, [sp, #168]
   357e0:	str	w23, [x0, w28, uxtw #2]
   357e4:	ldr	x0, [x22, #8]
   357e8:	ldr	w1, [x0, #4]
   357ec:	ldrh	w2, [x0]
   357f0:	cmp	w2, w1
   357f4:	b.cs	358d4 <Perl_re_indentf@@Base+0x36a8>  // b.hs, b.nlast
   357f8:	ldr	x0, [x27, #16]
   357fc:	add	x0, x0, x20
   35800:	ldr	x1, [x0, #8]
   35804:	ldrh	w0, [x1]
   35808:	lsl	x0, x0, #3
   3580c:	strh	w19, [x1, x0]
   35810:	ldr	x0, [x27, #16]
   35814:	add	x0, x0, x20
   35818:	ldr	x1, [x0, #8]
   3581c:	ldrh	w0, [x1]
   35820:	add	x0, x1, x0, lsl #3
   35824:	str	w28, [x0, #4]
   35828:	ldr	x0, [x27, #16]
   3582c:	add	x20, x0, x20
   35830:	ldr	x1, [x20, #8]
   35834:	ldrh	w0, [x1]
   35838:	add	w0, w0, #0x1
   3583c:	strh	w0, [x1]
   35840:	ldr	x0, [sp, #112]
   35844:	add	x0, x0, #0x1
   35848:	str	x0, [sp, #112]
   3584c:	mov	w23, w28
   35850:	ldr	w28, [sp, #136]
   35854:	add	x21, x21, x24
   35858:	ldr	x0, [sp, #128]
   3585c:	cmp	x0, x21
   35860:	b.ls	35918 <Perl_re_indentf@@Base+0x36ec>  // b.plast
   35864:	add	w26, w26, #0x1
   35868:	ldr	w0, [x25, #192]
   3586c:	cbnz	w0, 355b8 <Perl_re_indentf@@Base+0x338c>
   35870:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   35874:	ldr	x0, [x0, #3752]
   35878:	ldr	x1, [sp, #160]
   3587c:	cmp	x1, x0
   35880:	b.eq	3568c <Perl_re_indentf@@Base+0x3460>  // b.none
   35884:	ldrb	w0, [x21]
   35888:	str	x0, [sp, #304]
   3588c:	ldr	x1, [sp, #304]
   35890:	mov	x24, #0x1                   	// #1
   35894:	ldr	x0, [x27, #8]
   35898:	ldrh	w19, [x0, x1, lsl #1]
   3589c:	cbz	w19, 358f8 <Perl_re_indentf@@Base+0x36cc>
   358a0:	sub	w19, w19, #0x1
   358a4:	and	w19, w19, #0xffff
   358a8:	ubfiz	x20, x23, #4, #32
   358ac:	ldr	x22, [x27, #16]
   358b0:	add	x22, x22, x20
   358b4:	ldr	x0, [x22, #8]
   358b8:	cbz	x0, 35750 <Perl_re_indentf@@Base+0x3524>
   358bc:	ldr	x22, [x27, #16]
   358c0:	add	x22, x22, x20
   358c4:	ldr	x2, [x22, #8]
   358c8:	mov	w0, #0x1                   	// #1
   358cc:	mov	w4, #0x0                   	// #0
   358d0:	b	357bc <Perl_re_indentf@@Base+0x3590>
   358d4:	lsl	w23, w1, #1
   358d8:	ubfiz	x1, x1, #4, #31
   358dc:	bl	5670 <Perl_safesysrealloc@plt>
   358e0:	str	x0, [x22, #8]
   358e4:	ldr	x0, [x27, #16]
   358e8:	add	x0, x0, x20
   358ec:	ldr	x0, [x0, #8]
   358f0:	str	w23, [x0, #4]
   358f4:	b	357f8 <Perl_re_indentf@@Base+0x35cc>
   358f8:	ldr	x28, [sp, #152]
   358fc:	ldr	x2, [sp, #304]
   35900:	adrp	x1, 78000 <boot_re@@Base+0x1641c>
   35904:	add	x1, x1, #0xfd0
   35908:	mov	x0, x28
   3590c:	bl	5420 <Perl_croak@plt>
   35910:	mov	w26, #0x0                   	// #0
   35914:	mov	w23, #0x1                   	// #1
   35918:	ubfiz	x22, x23, #4, #32
   3591c:	ldr	x0, [x27, #16]
   35920:	ldrh	w21, [x0, x22]
   35924:	ldr	x19, [sp, #192]
   35928:	mov	x1, x19
   3592c:	ldr	x20, [sp, #152]
   35930:	mov	x0, x20
   35934:	bl	58a0 <Perl_regnext@plt>
   35938:	mov	x24, x0
   3593c:	mov	x1, x19
   35940:	ldrb	w0, [x19, #1]
   35944:	cmp	w0, #0x2f
   35948:	b.eq	35ae4 <Perl_re_indentf@@Base+0x38b8>  // b.none
   3594c:	ldr	w0, [x25, #192]
   35950:	cmp	w0, #0x0
   35954:	cset	w3, ne  // ne = any
   35958:	lsl	w3, w3, #29
   3595c:	ldrb	w2, [x1], #4
   35960:	mov	x0, x20
   35964:	bl	5390 <Perl_newSVpvn_flags@plt>
   35968:	mov	x2, x0
   3596c:	ldr	x1, [sp, #248]
   35970:	ldr	x0, [sp, #152]
   35974:	bl	5430 <Perl_av_push@plt>
   35978:	ldr	w0, [sp, #224]
   3597c:	add	w0, w0, #0x1
   35980:	and	w1, w0, #0xffff
   35984:	str	w1, [sp, #224]
   35988:	and	x20, x0, #0xffff
   3598c:	ubfiz	x19, x0, #1, #16
   35990:	add	x0, x19, w0, uxth
   35994:	lsl	x19, x0, #2
   35998:	ldr	x0, [x27, #48]
   3599c:	strh	wzr, [x0, x19]
   359a0:	ldr	x0, [x27, #48]
   359a4:	add	x0, x0, x19
   359a8:	str	w26, [x0, #4]
   359ac:	ldr	x0, [x27, #48]
   359b0:	add	x0, x0, x19
   359b4:	str	w23, [x0, #8]
   359b8:	ldr	x0, [sp, #176]
   359bc:	cmp	x0, x24
   359c0:	b.ls	359f8 <Perl_re_indentf@@Base+0x37cc>  // b.plast
   359c4:	ldr	x0, [x27, #40]
   359c8:	cbz	x0, 35b10 <Perl_re_indentf@@Base+0x38e4>
   359cc:	ldr	x1, [x27, #40]
   359d0:	ldr	x0, [sp, #208]
   359d4:	sub	x0, x24, x0
   359d8:	asr	x0, x0, #2
   359dc:	strh	w0, [x1, x20, lsl #1]
   359e0:	ldr	x0, [sp, #240]
   359e4:	cmp	x0, #0x0
   359e8:	csel	x0, x0, x24, ne  // ne = any
   359ec:	str	x0, [sp, #240]
   359f0:	ldr	x0, [sp, #272]
   359f4:	cbz	x0, 35b28 <Perl_re_indentf@@Base+0x38fc>
   359f8:	cbz	w21, 35b3c <Perl_re_indentf@@Base+0x3910>
   359fc:	ldr	x1, [x27, #48]
   35a00:	ubfiz	x0, x21, #1, #16
   35a04:	add	x0, x0, w21, uxth
   35a08:	lsl	x0, x0, #2
   35a0c:	ldrh	w2, [x1, x0]
   35a10:	strh	w2, [x1, x19]
   35a14:	ldr	x1, [x27, #48]
   35a18:	ldrh	w2, [sp, #224]
   35a1c:	strh	w2, [x1, x0]
   35a20:	ldr	x1, [sp, #216]
   35a24:	ldr	x0, [sp, #152]
   35a28:	bl	58a0 <Perl_regnext@plt>
   35a2c:	str	x0, [sp, #216]
   35a30:	ldr	x1, [sp, #184]
   35a34:	cmp	x1, x0
   35a38:	b.ls	35b4c <Perl_re_indentf@@Base+0x3920>  // b.plast
   35a3c:	ldr	x0, [sp, #216]
   35a40:	add	x1, x0, #0x4
   35a44:	str	x1, [sp, #192]
   35a48:	ldrb	w0, [x0, #5]
   35a4c:	cmp	w0, #0x2f
   35a50:	b.eq	3559c <Perl_re_indentf@@Base+0x3370>  // b.none
   35a54:	ldr	x0, [sp, #176]
   35a58:	ldr	x1, [sp, #192]
   35a5c:	cmp	x0, x1
   35a60:	b.ls	35910 <Perl_re_indentf@@Base+0x36e4>  // b.plast
   35a64:	ldr	x0, [sp, #192]
   35a68:	ldrb	w0, [x0, #1]
   35a6c:	ldr	w1, [sp, #200]
   35a70:	cmp	w0, w1
   35a74:	b.eq	35aa8 <Perl_re_indentf@@Base+0x387c>  // b.none
   35a78:	cmp	w0, #0x2c
   35a7c:	ldr	w2, [sp, #280]
   35a80:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   35a84:	b.ne	35aa8 <Perl_re_indentf@@Base+0x387c>  // b.any
   35a88:	mov	w26, #0x0                   	// #0
   35a8c:	mov	w23, #0x1                   	// #1
   35a90:	cmp	w1, #0x27
   35a94:	b.ne	35918 <Perl_re_indentf@@Base+0x36ec>  // b.any
   35a98:	and	w0, w0, #0xfffffffb
   35a9c:	and	w0, w0, #0xff
   35aa0:	cmp	w0, #0x29
   35aa4:	b.ne	35918 <Perl_re_indentf@@Base+0x36ec>  // b.any
   35aa8:	ldr	x21, [sp, #192]
   35aac:	ldrb	w0, [x21], #4
   35ab0:	add	x0, x21, x0
   35ab4:	str	x0, [sp, #128]
   35ab8:	cmp	x21, x0
   35abc:	b.cs	35ad8 <Perl_re_indentf@@Base+0x38ac>  // b.hs, b.nlast
   35ac0:	mov	w26, #0x0                   	// #0
   35ac4:	mov	w23, #0x1                   	// #1
   35ac8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   35acc:	ldr	x0, [x0, #3712]
   35ad0:	str	x0, [sp, #264]
   35ad4:	b	35864 <Perl_re_indentf@@Base+0x3638>
   35ad8:	mov	w26, #0x0                   	// #0
   35adc:	mov	w23, #0x1                   	// #1
   35ae0:	b	35918 <Perl_re_indentf@@Base+0x36ec>
   35ae4:	ldr	w0, [x25, #192]
   35ae8:	cmp	w0, #0x0
   35aec:	cset	w3, ne  // ne = any
   35af0:	lsl	w3, w3, #29
   35af4:	mov	x2, #0x0                   	// #0
   35af8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   35afc:	add	x1, x1, #0x20
   35b00:	ldr	x0, [sp, #152]
   35b04:	bl	5390 <Perl_newSVpvn_flags@plt>
   35b08:	mov	x2, x0
   35b0c:	b	3596c <Perl_re_indentf@@Base+0x3740>
   35b10:	mov	x1, #0x2                   	// #2
   35b14:	ldr	w0, [sp, #284]
   35b18:	add	w0, w0, #0x1
   35b1c:	bl	5280 <calloc@plt>
   35b20:	str	x0, [x27, #40]
   35b24:	b	359cc <Perl_re_indentf@@Base+0x37a0>
   35b28:	ldr	x1, [sp, #216]
   35b2c:	ldr	x0, [sp, #152]
   35b30:	bl	58a0 <Perl_regnext@plt>
   35b34:	str	x0, [sp, #272]
   35b38:	b	359f8 <Perl_re_indentf@@Base+0x37cc>
   35b3c:	ldr	x0, [x27, #16]
   35b40:	ldrh	w1, [sp, #224]
   35b44:	strh	w1, [x0, x22]
   35b48:	b	35a20 <Perl_re_indentf@@Base+0x37f4>
   35b4c:	str	w28, [sp, #192]
   35b50:	ldr	x26, [sp, #160]
   35b54:	ldr	x28, [sp, #152]
   35b58:	ldr	w0, [sp, #192]
   35b5c:	str	w0, [x27, #84]
   35b60:	ubfiz	x1, x0, #4, #32
   35b64:	ldr	x0, [x27, #16]
   35b68:	bl	52d0 <realloc@plt>
   35b6c:	str	x0, [x27, #16]
   35b70:	ldr	w0, [x28, #2368]
   35b74:	tbnz	w0, #20, 35b80 <Perl_re_indentf@@Base+0x3954>
   35b78:	ldr	x0, [sp, #312]
   35b7c:	tbz	w0, #2, 35fe0 <Perl_re_indentf@@Base+0x3db4>
   35b80:	ldr	w0, [x28, #2368]
   35b84:	tbnz	w0, #20, 35b90 <Perl_re_indentf@@Base+0x3964>
   35b88:	ldr	x0, [sp, #312]
   35b8c:	tbz	w0, #16, 35fe0 <Perl_re_indentf@@Base+0x3db4>
   35b90:	mov	x0, x28
   35b94:	bl	59b0 <Perl_sv_newmortal@plt>
   35b98:	str	x0, [sp, #128]
   35b9c:	ldr	x0, [sp, #120]
   35ba0:	cmp	x0, #0x0
   35ba4:	mov	w0, #0x6                   	// #6
   35ba8:	mov	w24, #0x4                   	// #4
   35bac:	csel	w24, w0, w24, ne  // ne = any
   35bb0:	str	xzr, [sp, #320]
   35bb4:	ldr	x0, [x28, #224]
   35bb8:	cbz	x0, 35c20 <Perl_re_indentf@@Base+0x39f4>
   35bbc:	mov	w2, #0x1                   	// #1
   35bc0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   35bc4:	add	x1, x1, #0x608
   35bc8:	mov	x0, x28
   35bcc:	bl	54f0 <Perl_get_sv@plt>
   35bd0:	mov	x19, x0
   35bd4:	cbz	x0, 35c20 <Perl_re_indentf@@Base+0x39f4>
   35bd8:	ldr	w0, [x0, #12]
   35bdc:	tbz	w0, #8, 35cbc <Perl_re_indentf@@Base+0x3a90>
   35be0:	ldr	w0, [x19, #12]
   35be4:	and	w1, w0, #0x3fff00
   35be8:	and	w1, w1, #0xffe001ff
   35bec:	cmp	w1, #0x100
   35bf0:	b.ne	35d28 <Perl_re_indentf@@Base+0x3afc>  // b.any
   35bf4:	and	w2, w0, #0xf
   35bf8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   35bfc:	ldr	x1, [x1, #3712]
   35c00:	ldrb	w1, [x1, w2, uxtw]
   35c04:	cbz	w1, 35cd0 <Perl_re_indentf@@Base+0x3aa4>
   35c08:	and	w1, w0, #0xc000
   35c0c:	cmp	w1, #0x8, lsl #12
   35c10:	b.eq	35cf4 <Perl_re_indentf@@Base+0x3ac8>  // b.none
   35c14:	ldr	x0, [x19]
   35c18:	ldr	x0, [x0, #32]
   35c1c:	str	x0, [sp, #320]
   35c20:	ldr	x0, [sp, #144]
   35c24:	cbz	x0, 35d3c <Perl_re_indentf@@Base+0x3b10>
   35c28:	ldr	w0, [sp, #352]
   35c2c:	add	w19, w0, #0x2
   35c30:	str	w19, [sp, #160]
   35c34:	mov	w2, w19
   35c38:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   35c3c:	add	x1, x1, #0x18
   35c40:	mov	x0, x28
   35c44:	bl	5940 <Perl_re_indentf@plt>
   35c48:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   35c4c:	add	x3, x3, #0x38
   35c50:	mov	w2, w19
   35c54:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   35c58:	add	x1, x1, #0xb50
   35c5c:	mov	x0, x28
   35c60:	bl	5940 <Perl_re_indentf@plt>
   35c64:	ldr	w0, [sp, #192]
   35c68:	cmp	w0, #0x1
   35c6c:	b.ls	3873c <Perl_re_indentf@@Base+0x6510>  // b.plast
   35c70:	ldr	w0, [sp, #352]
   35c74:	add	w0, w0, #0x8
   35c78:	lsl	w0, w0, #1
   35c7c:	str	w0, [sp, #136]
   35c80:	mov	x0, #0x1                   	// #1
   35c84:	str	x0, [sp, #152]
   35c88:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   35c8c:	ldr	x23, [x0, #3888]
   35c90:	str	x26, [sp, #216]
   35c94:	str	x25, [sp, #224]
   35c98:	ldr	x25, [sp, #144]
   35c9c:	b	35f70 <Perl_re_indentf@@Base+0x3d44>
   35ca0:	mov	x0, #0x1                   	// #1
   35ca4:	str	x0, [sp, #112]
   35ca8:	str	xzr, [sp, #272]
   35cac:	str	xzr, [sp, #240]
   35cb0:	mov	w0, #0x2                   	// #2
   35cb4:	str	w0, [sp, #192]
   35cb8:	b	35b58 <Perl_re_indentf@@Base+0x392c>
   35cbc:	mov	x2, #0xff08                	// #65288
   35cc0:	mov	x1, x19
   35cc4:	mov	x0, x28
   35cc8:	bl	5310 <Perl_sv_setuv@plt>
   35ccc:	b	35be0 <Perl_re_indentf@@Base+0x39b4>
   35cd0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35cd4:	add	x3, x3, #0xc10
   35cd8:	add	x3, x3, #0x5a0
   35cdc:	mov	w2, #0x8dc                 	// #2268
   35ce0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35ce4:	add	x1, x1, #0xfb8
   35ce8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35cec:	add	x0, x0, #0xda0
   35cf0:	bl	58e0 <__assert_fail@plt>
   35cf4:	and	w0, w0, #0xff
   35cf8:	sub	w0, w0, #0x9
   35cfc:	cmp	w0, #0x1
   35d00:	b.hi	35c14 <Perl_re_indentf@@Base+0x39e8>  // b.pmore
   35d04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35d08:	add	x3, x3, #0xc10
   35d0c:	add	x3, x3, #0x5a0
   35d10:	mov	w2, #0x8dc                 	// #2268
   35d14:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35d18:	add	x1, x1, #0xfb8
   35d1c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35d20:	add	x0, x0, #0xdd0
   35d24:	bl	58e0 <__assert_fail@plt>
   35d28:	mov	w2, #0x2                   	// #2
   35d2c:	mov	x1, x19
   35d30:	mov	x0, x28
   35d34:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   35d38:	b	35c1c <Perl_re_indentf@@Base+0x39f0>
   35d3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35d40:	add	x3, x3, #0xc10
   35d44:	add	x3, x3, #0x5a0
   35d48:	mov	w2, #0x8de                 	// #2270
   35d4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35d50:	add	x1, x1, #0xfb8
   35d54:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   35d58:	add	x0, x0, #0x8
   35d5c:	bl	58e0 <__assert_fail@plt>
   35d60:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   35d64:	add	x1, x1, #0x68
   35d68:	mov	x0, x28
   35d6c:	bl	50e0 <Perl_re_printf@plt>
   35d70:	b	35fb4 <Perl_re_indentf@@Base+0x3d88>
   35d74:	mov	w3, #0x22                  	// #34
   35d78:	mov	x2, #0x0                   	// #0
   35d7c:	mov	x0, x28
   35d80:	bl	5200 <Perl_sv_2pv_flags@plt>
   35d84:	mov	x2, x0
   35d88:	b	35ecc <Perl_re_indentf@@Base+0x3ca0>
   35d8c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35d90:	add	x3, x3, #0xc10
   35d94:	add	x3, x3, #0x5a0
   35d98:	mov	w2, #0x8f8                 	// #2296
   35d9c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35da0:	add	x1, x1, #0xfb8
   35da4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35da8:	add	x0, x0, #0xe40
   35dac:	bl	58e0 <__assert_fail@plt>
   35db0:	and	w0, w1, #0xff
   35db4:	sub	w0, w0, #0x9
   35db8:	cmp	w0, #0x1
   35dbc:	b.hi	35eec <Perl_re_indentf@@Base+0x3cc0>  // b.pmore
   35dc0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35dc4:	add	x3, x3, #0xc10
   35dc8:	add	x3, x3, #0x5a0
   35dcc:	mov	w2, #0x8f8                 	// #2296
   35dd0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35dd4:	add	x1, x1, #0xfb8
   35dd8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35ddc:	add	x0, x0, #0xe70
   35de0:	bl	58e0 <__assert_fail@plt>
   35de4:	lsr	w1, w1, #21
   35de8:	and	w7, w1, #0x100
   35dec:	ldr	x0, [x3]
   35df0:	orr	w7, w7, #0x800
   35df4:	ldr	x6, [x28, #1456]
   35df8:	ldr	x5, [x28, #1448]
   35dfc:	sxtw	x4, w24
   35e00:	ldr	x3, [x0, #16]
   35e04:	ldr	x1, [sp, #128]
   35e08:	mov	x0, x28
   35e0c:	bl	53f0 <Perl_pv_pretty@plt>
   35e10:	ldr	x1, [x27, #16]
   35e14:	add	x1, x1, x22
   35e18:	ldr	x1, [x1, #8]
   35e1c:	add	x2, x1, x21
   35e20:	ldr	w5, [x2, #4]
   35e24:	ldrh	w4, [x1, x21]
   35e28:	mov	x3, x0
   35e2c:	mov	w2, w24
   35e30:	mov	x1, x26
   35e34:	mov	x0, x28
   35e38:	bl	50e0 <Perl_re_printf@plt>
   35e3c:	mov	w0, #0xcccd                	// #52429
   35e40:	movk	w0, #0xcccc, lsl #16
   35e44:	umull	x0, w19, w0
   35e48:	lsr	x0, x0, #35
   35e4c:	add	w0, w0, w0, lsl #2
   35e50:	sub	w0, w19, w0, lsl #1
   35e54:	tst	w0, #0xffff
   35e58:	b.eq	35f28 <Perl_re_indentf@@Base+0x3cfc>  // b.none
   35e5c:	add	w19, w19, #0x1
   35e60:	and	w19, w19, #0xffff
   35e64:	mov	w2, w19
   35e68:	ldr	x0, [x27, #16]
   35e6c:	add	x0, x0, x22
   35e70:	ldr	x1, [x0, #8]
   35e74:	mov	w0, #0x0                   	// #0
   35e78:	cbz	x1, 35e84 <Perl_re_indentf@@Base+0x3c58>
   35e7c:	ldrh	w0, [x1]
   35e80:	sub	w0, w0, #0x1
   35e84:	cmp	w2, w0
   35e88:	b.gt	35f48 <Perl_re_indentf@@Base+0x3d1c>
   35e8c:	ubfiz	x21, x19, #3, #16
   35e90:	mov	w3, #0x0                   	// #0
   35e94:	ldrh	w2, [x1, x21]
   35e98:	mov	x1, x25
   35e9c:	mov	x0, x28
   35ea0:	bl	56f0 <Perl_av_fetch@plt>
   35ea4:	mov	x20, x0
   35ea8:	cbz	x0, 35e5c <Perl_re_indentf@@Base+0x3c30>
   35eac:	ldr	x1, [x0]
   35eb0:	ldr	w0, [x1, #12]
   35eb4:	mov	w2, #0x400                 	// #1024
   35eb8:	movk	w2, #0x20, lsl #16
   35ebc:	and	w0, w0, w2
   35ec0:	cmp	w0, #0x400
   35ec4:	b.ne	35d74 <Perl_re_indentf@@Base+0x3b48>  // b.any
   35ec8:	ldr	x2, [x1, #16]
   35ecc:	ldr	x3, [x20]
   35ed0:	ldr	w1, [x3, #12]
   35ed4:	and	w0, w1, #0xf
   35ed8:	ldrb	w0, [x23, w0, uxtw]
   35edc:	cbz	w0, 35d8c <Perl_re_indentf@@Base+0x3b60>
   35ee0:	and	w0, w1, #0xc000
   35ee4:	cmp	w0, #0x8, lsl #12
   35ee8:	b.eq	35db0 <Perl_re_indentf@@Base+0x3b84>  // b.none
   35eec:	and	w0, w1, #0xff
   35ef0:	cmp	w0, #0xf
   35ef4:	b.ne	35de4 <Perl_re_indentf@@Base+0x3bb8>  // b.any
   35ef8:	ldr	x0, [x3]
   35efc:	ldrb	w0, [x0, #129]
   35f00:	tbnz	w0, #6, 35de4 <Perl_re_indentf@@Base+0x3bb8>
   35f04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35f08:	add	x3, x3, #0xc10
   35f0c:	add	x3, x3, #0x5a0
   35f10:	mov	w2, #0x8f8                 	// #2296
   35f14:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   35f18:	add	x1, x1, #0xfb8
   35f1c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   35f20:	add	x0, x0, #0xe88
   35f24:	bl	58e0 <__assert_fail@plt>
   35f28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   35f2c:	add	x3, x3, #0x20
   35f30:	ldr	w2, [sp, #136]
   35f34:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   35f38:	add	x1, x1, #0x80
   35f3c:	mov	x0, x28
   35f40:	bl	50e0 <Perl_re_printf@plt>
   35f44:	b	35e5c <Perl_re_indentf@@Base+0x3c30>
   35f48:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   35f4c:	add	x1, x1, #0x8d8
   35f50:	mov	x0, x28
   35f54:	bl	50e0 <Perl_re_printf@plt>
   35f58:	ldr	x0, [sp, #152]
   35f5c:	add	x0, x0, #0x1
   35f60:	str	x0, [sp, #152]
   35f64:	ldr	w1, [sp, #192]
   35f68:	cmp	w1, w0
   35f6c:	b.ls	35fc4 <Perl_re_indentf@@Base+0x3d98>  // b.plast
   35f70:	ldr	x19, [sp, #152]
   35f74:	mov	x3, x19
   35f78:	ldr	w2, [sp, #160]
   35f7c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   35f80:	add	x1, x1, #0x58
   35f84:	mov	x0, x28
   35f88:	bl	5940 <Perl_re_indentf@plt>
   35f8c:	lsl	x22, x19, #4
   35f90:	ldr	x0, [x27, #16]
   35f94:	ldrh	w2, [x0, x22]
   35f98:	cbnz	w2, 35d60 <Perl_re_indentf@@Base+0x3b34>
   35f9c:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   35fa0:	add	x2, x2, #0x20
   35fa4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   35fa8:	add	x1, x1, #0x60
   35fac:	mov	x0, x28
   35fb0:	bl	50e0 <Perl_re_printf@plt>
   35fb4:	mov	w19, #0x1                   	// #1
   35fb8:	adrp	x26, 79000 <boot_re@@Base+0x1741c>
   35fbc:	add	x26, x26, #0x70
   35fc0:	b	35e64 <Perl_re_indentf@@Base+0x3c38>
   35fc4:	ldr	x26, [sp, #216]
   35fc8:	ldr	x25, [sp, #224]
   35fcc:	mov	x1, #0x8                   	// #8
   35fd0:	ldr	x0, [sp, #112]
   35fd4:	bl	5280 <calloc@plt>
   35fd8:	str	x0, [x27, #24]
   35fdc:	b	35ffc <Perl_re_indentf@@Base+0x3dd0>
   35fe0:	mov	x1, #0x8                   	// #8
   35fe4:	ldr	x0, [sp, #112]
   35fe8:	bl	5280 <calloc@plt>
   35fec:	str	x0, [x27, #24]
   35ff0:	ldr	w0, [sp, #192]
   35ff4:	cmp	w0, #0x1
   35ff8:	b.ls	3638c <Perl_re_indentf@@Base+0x4160>  // b.plast
   35ffc:	mov	x24, #0x10                  	// #16
   36000:	mov	w23, #0x0                   	// #0
   36004:	mov	w0, #0x0                   	// #0
   36008:	mov	w22, #0x1                   	// #1
   3600c:	str	wzr, [sp, #128]
   36010:	str	x26, [sp, #136]
   36014:	mov	w26, w0
   36018:	str	x28, [sp, #152]
   3601c:	str	x25, [sp, #160]
   36020:	ldr	x25, [sp, #112]
   36024:	b	3621c <Perl_re_indentf@@Base+0x3ff0>
   36028:	mov	w20, w0
   3602c:	add	w0, w1, #0x1
   36030:	and	w1, w0, #0xffff
   36034:	cmp	w3, w0, uxth
   36038:	b.lt	36060 <Perl_re_indentf@@Base+0x3e34>  // b.tstop
   3603c:	ubfiz	x0, x1, #3, #16
   36040:	ldrh	w0, [x2, x0]
   36044:	cmp	w0, w20
   36048:	b.cc	36028 <Perl_re_indentf@@Base+0x3dfc>  // b.lo, b.ul, b.last
   3604c:	cmp	w19, w0
   36050:	csel	w19, w19, w0, hi  // hi = pmore
   36054:	and	w19, w19, #0xffff
   36058:	b	3602c <Perl_re_indentf@@Base+0x3e00>
   3605c:	mov	w19, w20
   36060:	str	w20, [sp, #112]
   36064:	sub	w0, w19, w20
   36068:	add	w0, w0, w28
   3606c:	cmp	x0, x25
   36070:	b.hi	36098 <Perl_re_indentf@@Base+0x3e6c>  // b.pmore
   36074:	ldrh	w4, [x27, #56]
   36078:	add	w21, w4, w26
   3607c:	ldr	w0, [sp, #112]
   36080:	sub	w21, w21, w0
   36084:	mov	w1, #0x1                   	// #1
   36088:	cmp	w20, w19
   3608c:	b.eq	360ec <Perl_re_indentf@@Base+0x3ec0>  // b.none
   36090:	ldr	w5, [sp, #128]
   36094:	b	361c0 <Perl_re_indentf@@Base+0x3f94>
   36098:	lsl	x21, x25, #1
   3609c:	lsl	x1, x25, #4
   360a0:	ldr	x0, [x27, #24]
   360a4:	bl	52d0 <realloc@plt>
   360a8:	str	x0, [x27, #24]
   360ac:	lsl	x2, x25, #3
   360b0:	adds	x0, x0, x2
   360b4:	b.eq	360c8 <Perl_re_indentf@@Base+0x3e9c>  // b.none
   360b8:	mov	w1, #0x0                   	// #0
   360bc:	bl	51f0 <memset@plt>
   360c0:	mov	x25, x21
   360c4:	b	36074 <Perl_re_indentf@@Base+0x3e48>
   360c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   360cc:	add	x3, x3, #0xc10
   360d0:	add	x3, x3, #0x590
   360d4:	mov	w2, #0xc1d                 	// #3101
   360d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   360dc:	add	x1, x1, #0xfb8
   360e0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   360e4:	add	x0, x0, #0x88
   360e8:	bl	58e0 <__assert_fail@plt>
   360ec:	cmp	w26, w23
   360f0:	b.ls	36118 <Perl_re_indentf@@Base+0x3eec>  // b.plast
   360f4:	ldr	x1, [x27, #24]
   360f8:	ubfiz	x0, x23, #3, #32
   360fc:	add	x3, x1, x0
   36100:	ldr	w2, [x1, x0]
   36104:	cbz	w2, 3614c <Perl_re_indentf@@Base+0x3f20>
   36108:	add	w23, w23, #0x1
   3610c:	add	x0, x0, #0x8
   36110:	cmp	w23, w26
   36114:	b.ne	360fc <Perl_re_indentf@@Base+0x3ed0>  // b.any
   36118:	ubfiz	x26, x26, #3, #32
   3611c:	ldr	x0, [x27, #16]
   36120:	add	x0, x0, x24
   36124:	ldr	x0, [x0, #8]
   36128:	ldr	w1, [x0, #12]
   3612c:	ldr	x0, [x27, #24]
   36130:	str	w1, [x0, x26]
   36134:	ldr	x0, [x27, #24]
   36138:	add	x0, x0, x26
   3613c:	str	w22, [x0, #4]
   36140:	mov	w26, w28
   36144:	mov	w23, w28
   36148:	b	361ec <Perl_re_indentf@@Base+0x3fc0>
   3614c:	ldr	w1, [sp, #112]
   36150:	sub	w4, w4, w1
   36154:	add	w21, w4, w23
   36158:	ldr	x1, [x27, #16]
   3615c:	add	x1, x1, x24
   36160:	ldr	x1, [x1, #8]
   36164:	ldr	w1, [x1, #12]
   36168:	str	w1, [x3]
   3616c:	ldr	x1, [x27, #24]
   36170:	add	x0, x1, x0
   36174:	str	w22, [x0, #4]
   36178:	b	361ec <Perl_re_indentf@@Base+0x3fc0>
   3617c:	cmp	w3, w0
   36180:	b.gt	361e4 <Perl_re_indentf@@Base+0x3fb8>
   36184:	ubfiz	x3, x1, #3, #16
   36188:	add	x4, x2, x3
   3618c:	ldrh	w0, [x27, #56]
   36190:	sub	w0, w21, w0
   36194:	ldrh	w2, [x2, x3]
   36198:	add	w0, w0, w2
   3619c:	lsl	x0, x0, #3
   361a0:	ldr	w3, [x4, #4]
   361a4:	ldr	x2, [x27, #24]
   361a8:	str	w3, [x2, x0]
   361ac:	ldr	x2, [x27, #24]
   361b0:	add	x0, x2, x0
   361b4:	str	w22, [x0, #4]
   361b8:	add	w1, w1, #0x1
   361bc:	and	w1, w1, #0xffff
   361c0:	mov	w3, w1
   361c4:	ldr	x0, [x27, #16]
   361c8:	add	x0, x0, x24
   361cc:	ldr	x2, [x0, #8]
   361d0:	mov	w0, w5
   361d4:	cbz	x2, 3617c <Perl_re_indentf@@Base+0x3f50>
   361d8:	ldrh	w0, [x2]
   361dc:	sub	w0, w0, #0x1
   361e0:	b	3617c <Perl_re_indentf@@Base+0x3f50>
   361e4:	sub	w19, w19, w20
   361e8:	add	w26, w19, w28
   361ec:	ldr	x0, [x27, #16]
   361f0:	add	x0, x0, x24
   361f4:	ldr	x0, [x0, #8]
   361f8:	bl	5650 <Perl_safesysfree@plt>
   361fc:	ldr	x0, [x27, #16]
   36200:	add	x0, x0, x24
   36204:	str	w21, [x0, #8]
   36208:	add	w22, w22, #0x1
   3620c:	add	x24, x24, #0x10
   36210:	ldr	w0, [sp, #192]
   36214:	cmp	w22, w0
   36218:	b.cs	36254 <Perl_re_indentf@@Base+0x4028>  // b.hs, b.nlast
   3621c:	add	w28, w26, #0x1
   36220:	ldr	x0, [x27, #16]
   36224:	add	x0, x0, x24
   36228:	ldr	x2, [x0, #8]
   3622c:	mov	w21, #0x0                   	// #0
   36230:	cbz	x2, 361fc <Perl_re_indentf@@Base+0x3fd0>
   36234:	ldrh	w20, [x2, #8]
   36238:	ldrh	w3, [x2]
   3623c:	sub	w3, w3, #0x1
   36240:	cmp	w3, #0x1
   36244:	b.le	3605c <Perl_re_indentf@@Base+0x3e30>
   36248:	mov	w19, w20
   3624c:	mov	w1, #0x2                   	// #2
   36250:	b	3603c <Perl_re_indentf@@Base+0x3e10>
   36254:	mov	w0, w26
   36258:	ldr	x26, [sp, #136]
   3625c:	ldr	x28, [sp, #152]
   36260:	ldr	x25, [sp, #160]
   36264:	add	w0, w0, #0x1
   36268:	str	w0, [x27, #4]
   3626c:	ldr	w0, [x28, #2368]
   36270:	tbnz	w0, #20, 3627c <Perl_re_indentf@@Base+0x4050>
   36274:	ldr	x0, [sp, #312]
   36278:	tbz	w0, #2, 362ac <Perl_re_indentf@@Base+0x4080>
   3627c:	ldr	w0, [x28, #2368]
   36280:	tbnz	w0, #20, 3628c <Perl_re_indentf@@Base+0x4060>
   36284:	ldr	x0, [sp, #312]
   36288:	tbz	w0, #16, 362ac <Perl_re_indentf@@Base+0x4080>
   3628c:	ldr	w4, [x27, #4]
   36290:	ldr	w3, [x27, #84]
   36294:	ldr	w0, [sp, #352]
   36298:	add	w2, w0, #0x1
   3629c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   362a0:	add	x1, x1, #0x180
   362a4:	mov	x0, x28
   362a8:	bl	5940 <Perl_re_indentf@plt>
   362ac:	ldr	w1, [x27, #4]
   362b0:	lsl	x1, x1, #3
   362b4:	ldr	x0, [x27, #24]
   362b8:	bl	52d0 <realloc@plt>
   362bc:	str	x0, [x27, #24]
   362c0:	ldrb	w0, [sp, #200]
   362c4:	str	w0, [sp, #160]
   362c8:	ldr	x0, [sp, #296]
   362cc:	ldr	x1, [sp, #256]
   362d0:	cmp	x0, x1
   362d4:	b.eq	36fcc <Perl_re_indentf@@Base+0x4da0>  // b.none
   362d8:	ldr	x0, [sp, #184]
   362dc:	ldr	x1, [sp, #256]
   362e0:	sub	x0, x0, x1
   362e4:	asr	x0, x0, #2
   362e8:	strh	w0, [x1, #2]
   362ec:	ldr	x0, [x25, #40]
   362f0:	ldr	x1, [x0, #8]
   362f4:	ldr	x0, [x25, #96]
   362f8:	ldr	x2, [sp, #208]
   362fc:	sub	x0, x2, x0
   36300:	asr	x0, x0, #2
   36304:	lsl	x0, x0, #3
   36308:	add	x2, x1, x0
   3630c:	ldur	w2, [x2, #-4]
   36310:	str	w2, [sp, #112]
   36314:	ldr	w24, [x1, x0]
   36318:	ldr	w0, [x28, #2368]
   3631c:	tbnz	w0, #20, 36328 <Perl_re_indentf@@Base+0x40fc>
   36320:	ldr	x0, [sp, #312]
   36324:	tbz	w0, #1, 36348 <Perl_re_indentf@@Base+0x411c>
   36328:	mov	w4, w24
   3632c:	ldr	w3, [sp, #112]
   36330:	ldr	w0, [sp, #352]
   36334:	add	w2, w0, #0x1
   36338:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3633c:	add	x1, x1, #0x1a0
   36340:	mov	x0, x28
   36344:	bl	5940 <Perl_re_indentf@plt>
   36348:	mov	w0, #0x1                   	// #1
   3634c:	str	w0, [x27, #60]
   36350:	ldr	x0, [x27, #32]
   36354:	cmp	x0, #0x0
   36358:	ldr	x0, [sp, #120]
   3635c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   36360:	b.eq	37010 <Perl_re_indentf@@Base+0x4de4>  // b.none
   36364:	ldr	x0, [sp, #240]
   36368:	cmp	x0, #0x0
   3636c:	ldr	x1, [sp, #184]
   36370:	csel	x0, x1, x0, eq  // eq = none
   36374:	str	x0, [sp, #184]
   36378:	ldr	x0, [x27, #72]
   3637c:	mov	x19, #0x0                   	// #0
   36380:	cbnz	x0, 386a8 <Perl_re_indentf@@Base+0x647c>
   36384:	cbz	x19, 37f94 <Perl_re_indentf@@Base+0x5d68>
   36388:	b	37cd0 <Perl_re_indentf@@Base+0x5aa4>
   3638c:	mov	w0, #0x0                   	// #0
   36390:	b	36264 <Perl_re_indentf@@Base+0x4038>
   36394:	ldr	w0, [x28, #2368]
   36398:	tbnz	w0, #20, 363a4 <Perl_re_indentf@@Base+0x4178>
   3639c:	ldr	x0, [sp, #312]
   363a0:	tbz	w0, #2, 363cc <Perl_re_indentf@@Base+0x41a0>
   363a4:	ldr	w0, [x28, #2368]
   363a8:	tbnz	w0, #20, 363b4 <Perl_re_indentf@@Base+0x4188>
   363ac:	ldr	x0, [sp, #312]
   363b0:	tbz	w0, #16, 363cc <Perl_re_indentf@@Base+0x41a0>
   363b4:	ldr	w0, [sp, #352]
   363b8:	add	w2, w0, #0x1
   363bc:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   363c0:	add	x1, x1, #0xb8
   363c4:	mov	x0, x28
   363c8:	bl	5940 <Perl_re_indentf@plt>
   363cc:	ldr	x19, [x27, #96]
   363d0:	ldrh	w20, [x27, #56]
   363d4:	and	x0, x20, #0xffff
   363d8:	madd	x0, x19, x0, x0
   363dc:	mov	x1, #0x8                   	// #8
   363e0:	add	x0, x0, #0x1
   363e4:	bl	5280 <calloc@plt>
   363e8:	str	x0, [x27, #24]
   363ec:	mov	x1, #0x10                  	// #16
   363f0:	add	x0, x19, #0x2
   363f4:	bl	5280 <calloc@plt>
   363f8:	str	x0, [x27, #16]
   363fc:	add	w24, w20, #0x1
   36400:	ldr	x0, [sp, #256]
   36404:	ldr	x1, [sp, #184]
   36408:	cmp	x0, x1
   3640c:	b.cs	36904 <Perl_re_indentf@@Base+0x46d8>  // b.hs, b.nlast
   36410:	str	x0, [sp, #136]
   36414:	str	xzr, [sp, #272]
   36418:	str	xzr, [sp, #240]
   3641c:	str	wzr, [sp, #152]
   36420:	add	x0, sp, #0x130
   36424:	str	x0, [sp, #160]
   36428:	b	367f0 <Perl_re_indentf@@Base+0x45c4>
   3642c:	mov	x0, x28
   36430:	bl	58a0 <Perl_regnext@plt>
   36434:	ldr	x1, [sp, #176]
   36438:	cmp	x1, x0
   3643c:	b.ls	36808 <Perl_re_indentf@@Base+0x45dc>  // b.plast
   36440:	str	x0, [sp, #128]
   36444:	b	36818 <Perl_re_indentf@@Base+0x45ec>
   36448:	ldrb	w0, [x20]
   3644c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   36450:	ldr	x1, [x1, #4064]
   36454:	ldrb	w2, [x1, w0, sxtw]
   36458:	and	x21, x2, #0xff
   3645c:	add	x3, x20, w2, uxtb
   36460:	and	x1, x0, #0xff
   36464:	cmp	x21, #0x1
   36468:	b.eq	364a8 <Perl_re_indentf@@Base+0x427c>  // b.none
   3646c:	sub	w2, w2, #0x2
   36470:	mov	w1, #0x1f                  	// #31
   36474:	asr	w2, w1, w2
   36478:	cmp	x21, #0x7
   3647c:	csel	w1, w2, wzr, cc  // cc = lo, ul, last
   36480:	and	w0, w0, w1
   36484:	sxtw	x1, w0
   36488:	add	x0, x20, #0x1
   3648c:	cmp	x3, x0
   36490:	b.ls	364a8 <Perl_re_indentf@@Base+0x427c>  // b.plast
   36494:	ldrb	w2, [x0], #1
   36498:	bfi	x2, x1, #6, #58
   3649c:	mov	x1, x2
   364a0:	cmp	x3, x0
   364a4:	b.ne	36494 <Perl_re_indentf@@Base+0x4268>  // b.any
   364a8:	str	x1, [sp, #304]
   364ac:	cmp	x1, #0xff
   364b0:	b.ls	36548 <Perl_re_indentf@@Base+0x431c>  // b.plast
   364b4:	mov	w6, #0x0                   	// #0
   364b8:	mov	x5, #0x0                   	// #0
   364bc:	mov	w4, #0x20                  	// #32
   364c0:	mov	w3, #0x8                   	// #8
   364c4:	ldr	x2, [sp, #160]
   364c8:	ldr	x1, [sp, #120]
   364cc:	ldr	x0, [sp, #112]
   364d0:	bl	57a0 <Perl_hv_common_key_len@plt>
   364d4:	cbz	x0, 3668c <Perl_re_indentf@@Base+0x4460>
   364d8:	ldr	x1, [x0]
   364dc:	ldr	w0, [x1, #12]
   364e0:	mov	w2, #0x100                 	// #256
   364e4:	movk	w2, #0x20, lsl #16
   364e8:	and	w2, w0, w2
   364ec:	cmp	w2, #0x100
   364f0:	b.ne	36670 <Perl_re_indentf@@Base+0x4444>  // b.any
   364f4:	and	w2, w0, #0xf
   364f8:	ldr	x3, [sp, #192]
   364fc:	ldrb	w2, [x3, w2, uxtw]
   36500:	cbz	w2, 36618 <Perl_re_indentf@@Base+0x43ec>
   36504:	and	w2, w0, #0xc000
   36508:	cmp	w2, #0x8, lsl #12
   3650c:	b.eq	3663c <Perl_re_indentf@@Base+0x4410>  // b.none
   36510:	ldr	x0, [x1]
   36514:	ldrh	w0, [x0, #32]
   36518:	b	36550 <Perl_re_indentf@@Base+0x4324>
   3651c:	ldrb	w1, [x20]
   36520:	cmp	w1, #0xdf
   36524:	b.eq	365e4 <Perl_re_indentf@@Base+0x43b8>  // b.none
   36528:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3652c:	ldr	x0, [x0, #4048]
   36530:	ldrb	w0, [x0, w1, sxtw]
   36534:	str	x0, [sp, #304]
   36538:	cmp	x0, #0xb5
   3653c:	b.eq	36608 <Perl_re_indentf@@Base+0x43dc>  // b.none
   36540:	ldr	x1, [sp, #304]
   36544:	mov	x21, #0x1                   	// #1
   36548:	ldr	x0, [x27, #8]
   3654c:	ldrh	w0, [x0, x1, lsl #1]
   36550:	cbz	w0, 3668c <Perl_re_indentf@@Base+0x4460>
   36554:	sub	w0, w0, #0x1
   36558:	add	w0, w19, w0, uxth
   3655c:	lsl	x0, x0, #3
   36560:	ldr	x1, [x27, #24]
   36564:	ldr	w2, [x1, x0]
   36568:	cbnz	w2, 365a8 <Perl_re_indentf@@Base+0x437c>
   3656c:	str	w24, [x1, x0]
   36570:	ldr	x1, [x27, #24]
   36574:	add	x1, x1, w19, uxtw #3
   36578:	ldr	w2, [x1, #4]
   3657c:	add	w2, w2, #0x1
   36580:	str	w2, [x1, #4]
   36584:	ldrh	w3, [x27, #56]
   36588:	sub	w1, w24, #0x1
   3658c:	udiv	w1, w1, w3
   36590:	add	w1, w1, #0x1
   36594:	sub	w2, w19, #0x1
   36598:	udiv	w2, w2, w3
   3659c:	add	w2, w2, #0x1
   365a0:	str	w2, [x28, x1, lsl #2]
   365a4:	add	w24, w24, w3
   365a8:	ldr	x1, [x27, #24]
   365ac:	ldr	w19, [x1, x0]
   365b0:	add	x20, x20, x21
   365b4:	cmp	x23, x20
   365b8:	b.ls	36684 <Perl_re_indentf@@Base+0x4458>  // b.plast
   365bc:	add	w22, w22, #0x1
   365c0:	ldr	w0, [x25, #192]
   365c4:	cbnz	w0, 36448 <Perl_re_indentf@@Base+0x421c>
   365c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   365cc:	ldr	x0, [x0, #3752]
   365d0:	cmp	x26, x0
   365d4:	b.eq	3651c <Perl_re_indentf@@Base+0x42f0>  // b.none
   365d8:	ldrb	w0, [x20]
   365dc:	str	x0, [sp, #304]
   365e0:	b	36540 <Perl_re_indentf@@Base+0x4314>
   365e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   365e8:	add	x3, x3, #0xc10
   365ec:	add	x3, x3, #0x590
   365f0:	mov	w2, #0xc98                 	// #3224
   365f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   365f8:	add	x1, x1, #0xfb8
   365fc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   36600:	add	x0, x0, #0xd30
   36604:	bl	58e0 <__assert_fail@plt>
   36608:	mov	x0, #0x3bc                 	// #956
   3660c:	str	x0, [sp, #304]
   36610:	mov	x21, #0x1                   	// #1
   36614:	b	364b4 <Perl_re_indentf@@Base+0x4288>
   36618:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3661c:	add	x3, x3, #0xc10
   36620:	add	x3, x3, #0x590
   36624:	mov	w2, #0xca1                 	// #3233
   36628:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3662c:	add	x1, x1, #0xfb8
   36630:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36634:	add	x0, x0, #0xda0
   36638:	bl	58e0 <__assert_fail@plt>
   3663c:	and	w0, w0, #0xff
   36640:	sub	w0, w0, #0x9
   36644:	cmp	w0, #0x1
   36648:	b.hi	36510 <Perl_re_indentf@@Base+0x42e4>  // b.pmore
   3664c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36650:	add	x3, x3, #0xc10
   36654:	add	x3, x3, #0x590
   36658:	mov	w2, #0xca1                 	// #3233
   3665c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36660:	add	x1, x1, #0xfb8
   36664:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36668:	add	x0, x0, #0xdd0
   3666c:	bl	58e0 <__assert_fail@plt>
   36670:	mov	w2, #0x2                   	// #2
   36674:	ldr	x0, [sp, #112]
   36678:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3667c:	and	w0, w0, #0xffff
   36680:	b	36550 <Perl_re_indentf@@Base+0x4324>
   36684:	ldr	x28, [sp, #112]
   36688:	b	366ac <Perl_re_indentf@@Base+0x4480>
   3668c:	ldr	x28, [sp, #112]
   36690:	ldr	x2, [sp, #304]
   36694:	adrp	x1, 78000 <boot_re@@Base+0x1641c>
   36698:	add	x1, x1, #0xfd0
   3669c:	mov	x0, x28
   366a0:	bl	5420 <Perl_croak@plt>
   366a4:	mov	w22, #0x0                   	// #0
   366a8:	mov	w19, #0x1                   	// #1
   366ac:	sub	w0, w19, #0x1
   366b0:	ldrh	w1, [x27, #56]
   366b4:	udiv	w0, w0, w1
   366b8:	add	w1, w0, #0x1
   366bc:	str	w1, [sp, #112]
   366c0:	add	w0, w0, #0x1
   366c4:	lsl	x23, x0, #4
   366c8:	ldr	x0, [x27, #16]
   366cc:	ldrh	w21, [x0, x23]
   366d0:	ldr	x19, [sp, #128]
   366d4:	mov	x1, x19
   366d8:	mov	x0, x28
   366dc:	bl	58a0 <Perl_regnext@plt>
   366e0:	mov	x20, x0
   366e4:	mov	x1, x19
   366e8:	ldrb	w0, [x19, #1]
   366ec:	cmp	w0, #0x2f
   366f0:	b.eq	3689c <Perl_re_indentf@@Base+0x4670>  // b.none
   366f4:	ldr	w0, [x25, #192]
   366f8:	cmp	w0, #0x0
   366fc:	cset	w3, ne  // ne = any
   36700:	lsl	w3, w3, #29
   36704:	ldrb	w2, [x1], #4
   36708:	mov	x0, x28
   3670c:	bl	5390 <Perl_newSVpvn_flags@plt>
   36710:	mov	x2, x0
   36714:	ldr	x1, [sp, #248]
   36718:	mov	x0, x28
   3671c:	bl	5430 <Perl_av_push@plt>
   36720:	ldr	w0, [sp, #152]
   36724:	add	w0, w0, #0x1
   36728:	and	w1, w0, #0xffff
   3672c:	str	w1, [sp, #152]
   36730:	and	x1, x0, #0xffff
   36734:	str	x1, [sp, #128]
   36738:	ubfiz	x19, x0, #1, #16
   3673c:	add	x0, x19, w0, uxth
   36740:	lsl	x19, x0, #2
   36744:	ldr	x0, [x27, #48]
   36748:	strh	wzr, [x0, x19]
   3674c:	ldr	x0, [x27, #48]
   36750:	add	x0, x0, x19
   36754:	str	w22, [x0, #4]
   36758:	ldr	x0, [x27, #48]
   3675c:	add	x0, x0, x19
   36760:	ldr	w1, [sp, #112]
   36764:	str	w1, [x0, #8]
   36768:	ldr	x0, [sp, #176]
   3676c:	cmp	x0, x20
   36770:	b.ls	367ac <Perl_re_indentf@@Base+0x4580>  // b.plast
   36774:	ldr	x0, [x27, #40]
   36778:	cbz	x0, 368c8 <Perl_re_indentf@@Base+0x469c>
   3677c:	ldr	x1, [x27, #40]
   36780:	ldr	x0, [sp, #208]
   36784:	sub	x0, x20, x0
   36788:	asr	x0, x0, #2
   3678c:	ldr	x2, [sp, #128]
   36790:	strh	w0, [x1, x2, lsl #1]
   36794:	ldr	x0, [sp, #240]
   36798:	cmp	x0, #0x0
   3679c:	csel	x0, x0, x20, ne  // ne = any
   367a0:	str	x0, [sp, #240]
   367a4:	ldr	x0, [sp, #272]
   367a8:	cbz	x0, 368e0 <Perl_re_indentf@@Base+0x46b4>
   367ac:	cbz	w21, 368f4 <Perl_re_indentf@@Base+0x46c8>
   367b0:	ldr	x1, [x27, #48]
   367b4:	ubfiz	x0, x21, #1, #16
   367b8:	add	x0, x0, w21, uxth
   367bc:	lsl	x0, x0, #2
   367c0:	ldrh	w2, [x1, x0]
   367c4:	strh	w2, [x1, x19]
   367c8:	ldr	x1, [x27, #48]
   367cc:	ldrh	w2, [sp, #152]
   367d0:	strh	w2, [x1, x0]
   367d4:	ldr	x1, [sp, #136]
   367d8:	mov	x0, x28
   367dc:	bl	58a0 <Perl_regnext@plt>
   367e0:	str	x0, [sp, #136]
   367e4:	ldr	x1, [sp, #184]
   367e8:	cmp	x1, x0
   367ec:	b.ls	3690c <Perl_re_indentf@@Base+0x46e0>  // b.plast
   367f0:	ldr	x0, [sp, #136]
   367f4:	add	x1, x0, #0x4
   367f8:	str	x1, [sp, #128]
   367fc:	ldrb	w0, [x0, #5]
   36800:	cmp	w0, #0x2f
   36804:	b.eq	3642c <Perl_re_indentf@@Base+0x4200>  // b.none
   36808:	ldr	x0, [sp, #176]
   3680c:	ldr	x1, [sp, #128]
   36810:	cmp	x0, x1
   36814:	b.ls	366a4 <Perl_re_indentf@@Base+0x4478>  // b.plast
   36818:	ldr	x0, [sp, #128]
   3681c:	ldrb	w0, [x0, #1]
   36820:	ldr	w1, [sp, #200]
   36824:	cmp	w0, w1
   36828:	b.eq	3685c <Perl_re_indentf@@Base+0x4630>  // b.none
   3682c:	cmp	w0, #0x2c
   36830:	ldr	w2, [sp, #280]
   36834:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   36838:	b.ne	3685c <Perl_re_indentf@@Base+0x4630>  // b.any
   3683c:	mov	w22, #0x0                   	// #0
   36840:	mov	w19, #0x1                   	// #1
   36844:	cmp	w1, #0x27
   36848:	b.ne	366ac <Perl_re_indentf@@Base+0x4480>  // b.any
   3684c:	and	w0, w0, #0xfffffffb
   36850:	and	w0, w0, #0xff
   36854:	cmp	w0, #0x29
   36858:	b.ne	366ac <Perl_re_indentf@@Base+0x4480>  // b.any
   3685c:	ldr	x20, [sp, #128]
   36860:	ldrb	w23, [x20], #4
   36864:	add	x23, x20, x23
   36868:	cmp	x20, x23
   3686c:	b.cs	36890 <Perl_re_indentf@@Base+0x4664>  // b.hs, b.nlast
   36870:	mov	w22, #0x0                   	// #0
   36874:	mov	w19, #0x1                   	// #1
   36878:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3687c:	ldr	x0, [x0, #3712]
   36880:	str	x0, [sp, #192]
   36884:	str	x28, [sp, #112]
   36888:	ldr	x28, [sp, #168]
   3688c:	b	365bc <Perl_re_indentf@@Base+0x4390>
   36890:	mov	w22, #0x0                   	// #0
   36894:	mov	w19, #0x1                   	// #1
   36898:	b	366ac <Perl_re_indentf@@Base+0x4480>
   3689c:	ldr	w0, [x25, #192]
   368a0:	cmp	w0, #0x0
   368a4:	cset	w3, ne  // ne = any
   368a8:	lsl	w3, w3, #29
   368ac:	mov	x2, #0x0                   	// #0
   368b0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   368b4:	add	x1, x1, #0x20
   368b8:	mov	x0, x28
   368bc:	bl	5390 <Perl_newSVpvn_flags@plt>
   368c0:	mov	x2, x0
   368c4:	b	36714 <Perl_re_indentf@@Base+0x44e8>
   368c8:	mov	x1, #0x2                   	// #2
   368cc:	ldr	w0, [sp, #284]
   368d0:	add	w0, w0, #0x1
   368d4:	bl	5280 <calloc@plt>
   368d8:	str	x0, [x27, #40]
   368dc:	b	3677c <Perl_re_indentf@@Base+0x4550>
   368e0:	ldr	x1, [sp, #136]
   368e4:	mov	x0, x28
   368e8:	bl	58a0 <Perl_regnext@plt>
   368ec:	str	x0, [sp, #272]
   368f0:	b	367ac <Perl_re_indentf@@Base+0x4580>
   368f4:	ldr	x0, [x27, #16]
   368f8:	ldrh	w1, [sp, #152]
   368fc:	strh	w1, [x0, x23]
   36900:	b	367d4 <Perl_re_indentf@@Base+0x45a8>
   36904:	str	xzr, [sp, #272]
   36908:	str	xzr, [sp, #240]
   3690c:	ldr	w0, [x28, #2368]
   36910:	tbnz	w0, #20, 3691c <Perl_re_indentf@@Base+0x46f0>
   36914:	ldr	x0, [sp, #312]
   36918:	tbz	w0, #2, 36da8 <Perl_re_indentf@@Base+0x4b7c>
   3691c:	ldr	w0, [x28, #2368]
   36920:	tbnz	w0, #20, 3692c <Perl_re_indentf@@Base+0x4700>
   36924:	ldr	x0, [sp, #312]
   36928:	tbz	w0, #16, 36da8 <Perl_re_indentf@@Base+0x4b7c>
   3692c:	mov	x0, x28
   36930:	bl	59b0 <Perl_sv_newmortal@plt>
   36934:	str	x0, [sp, #136]
   36938:	ldr	x0, [sp, #120]
   3693c:	cmp	x0, #0x0
   36940:	mov	w0, #0x6                   	// #6
   36944:	mov	w1, #0x4                   	// #4
   36948:	csel	w0, w0, w1, ne  // ne = any
   3694c:	str	w0, [sp, #112]
   36950:	str	xzr, [sp, #328]
   36954:	ldr	x0, [x28, #224]
   36958:	cbz	x0, 369c0 <Perl_re_indentf@@Base+0x4794>
   3695c:	mov	w2, #0x1                   	// #1
   36960:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   36964:	add	x1, x1, #0x608
   36968:	mov	x0, x28
   3696c:	bl	54f0 <Perl_get_sv@plt>
   36970:	mov	x19, x0
   36974:	cbz	x0, 369c0 <Perl_re_indentf@@Base+0x4794>
   36978:	ldr	w0, [x0, #12]
   3697c:	tbz	w0, #8, 36a10 <Perl_re_indentf@@Base+0x47e4>
   36980:	ldr	w0, [x19, #12]
   36984:	and	w1, w0, #0x3fff00
   36988:	and	w1, w1, #0xffe001ff
   3698c:	cmp	w1, #0x100
   36990:	b.ne	36a7c <Perl_re_indentf@@Base+0x4850>  // b.any
   36994:	and	w2, w0, #0xf
   36998:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3699c:	ldr	x1, [x1, #3712]
   369a0:	ldrb	w1, [x1, w2, uxtw]
   369a4:	cbz	w1, 36a24 <Perl_re_indentf@@Base+0x47f8>
   369a8:	and	w1, w0, #0xc000
   369ac:	cmp	w1, #0x8, lsl #12
   369b0:	b.eq	36a48 <Perl_re_indentf@@Base+0x481c>  // b.none
   369b4:	ldr	x0, [x19]
   369b8:	ldr	x0, [x0, #32]
   369bc:	str	x0, [sp, #328]
   369c0:	ldr	x0, [sp, #144]
   369c4:	cbz	x0, 36a90 <Perl_re_indentf@@Base+0x4864>
   369c8:	ldr	w0, [sp, #352]
   369cc:	add	w0, w0, #0x2
   369d0:	str	w0, [sp, #128]
   369d4:	mov	w2, w0
   369d8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   369dc:	add	x1, x1, #0xe0
   369e0:	mov	x0, x28
   369e4:	bl	5940 <Perl_re_indentf@plt>
   369e8:	ldrh	w0, [x27, #56]
   369ec:	cbz	w0, 36c0c <Perl_re_indentf@@Base+0x49e0>
   369f0:	mov	w20, #0x0                   	// #0
   369f4:	mov	w21, #0x400                 	// #1024
   369f8:	movk	w21, #0x20, lsl #16
   369fc:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   36a00:	ldr	x22, [x22, #3888]
   36a04:	adrp	x23, 77000 <boot_re@@Base+0x1541c>
   36a08:	add	x23, x23, #0xaf8
   36a0c:	b	36b7c <Perl_re_indentf@@Base+0x4950>
   36a10:	mov	x2, #0xff08                	// #65288
   36a14:	mov	x1, x19
   36a18:	mov	x0, x28
   36a1c:	bl	5310 <Perl_sv_setuv@plt>
   36a20:	b	36980 <Perl_re_indentf@@Base+0x4754>
   36a24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36a28:	add	x3, x3, #0xc10
   36a2c:	add	x3, x3, #0x5c0
   36a30:	mov	w2, #0x919                 	// #2329
   36a34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36a38:	add	x1, x1, #0xfb8
   36a3c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36a40:	add	x0, x0, #0xda0
   36a44:	bl	58e0 <__assert_fail@plt>
   36a48:	and	w0, w0, #0xff
   36a4c:	sub	w0, w0, #0x9
   36a50:	cmp	w0, #0x1
   36a54:	b.hi	369b4 <Perl_re_indentf@@Base+0x4788>  // b.pmore
   36a58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36a5c:	add	x3, x3, #0xc10
   36a60:	add	x3, x3, #0x5c0
   36a64:	mov	w2, #0x919                 	// #2329
   36a68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36a6c:	add	x1, x1, #0xfb8
   36a70:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36a74:	add	x0, x0, #0xdd0
   36a78:	bl	58e0 <__assert_fail@plt>
   36a7c:	mov	w2, #0x2                   	// #2
   36a80:	mov	x1, x19
   36a84:	mov	x0, x28
   36a88:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   36a8c:	b	369bc <Perl_re_indentf@@Base+0x4790>
   36a90:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36a94:	add	x3, x3, #0xc10
   36a98:	add	x3, x3, #0x5c0
   36a9c:	mov	w2, #0x91b                 	// #2331
   36aa0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36aa4:	add	x1, x1, #0xfb8
   36aa8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   36aac:	add	x0, x0, #0x8
   36ab0:	bl	58e0 <__assert_fail@plt>
   36ab4:	mov	w3, #0x22                  	// #34
   36ab8:	mov	x2, #0x0                   	// #0
   36abc:	mov	x0, x28
   36ac0:	bl	5200 <Perl_sv_2pv_flags@plt>
   36ac4:	mov	x2, x0
   36ac8:	b	36bb0 <Perl_re_indentf@@Base+0x4984>
   36acc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36ad0:	add	x3, x3, #0xc10
   36ad4:	add	x3, x3, #0x5c0
   36ad8:	mov	w2, #0x929                 	// #2345
   36adc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36ae0:	add	x1, x1, #0xfb8
   36ae4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36ae8:	add	x0, x0, #0xe40
   36aec:	bl	58e0 <__assert_fail@plt>
   36af0:	and	w3, w0, #0xff
   36af4:	sub	w3, w3, #0x9
   36af8:	cmp	w3, #0x1
   36afc:	b.hi	36bd0 <Perl_re_indentf@@Base+0x49a4>  // b.pmore
   36b00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36b04:	add	x3, x3, #0xc10
   36b08:	add	x3, x3, #0x5c0
   36b0c:	mov	w2, #0x929                 	// #2345
   36b10:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36b14:	add	x1, x1, #0xfb8
   36b18:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36b1c:	add	x0, x0, #0xe70
   36b20:	bl	58e0 <__assert_fail@plt>
   36b24:	lsr	w0, w0, #21
   36b28:	and	w7, w0, #0x100
   36b2c:	ldr	x0, [x1]
   36b30:	orr	w7, w7, #0x800
   36b34:	ldr	x6, [x28, #1456]
   36b38:	ldr	x5, [x28, #1448]
   36b3c:	ldr	w19, [sp, #112]
   36b40:	sxtw	x4, w19
   36b44:	ldr	x3, [x0, #16]
   36b48:	ldr	x1, [sp, #136]
   36b4c:	mov	x0, x28
   36b50:	bl	53f0 <Perl_pv_pretty@plt>
   36b54:	mov	x3, x0
   36b58:	mov	w2, w19
   36b5c:	mov	x1, x23
   36b60:	mov	x0, x28
   36b64:	bl	50e0 <Perl_re_printf@plt>
   36b68:	add	w0, w20, #0x1
   36b6c:	and	w20, w0, #0xffff
   36b70:	ldrh	w1, [x27, #56]
   36b74:	cmp	w1, w0, uxth
   36b78:	b.ls	36c0c <Perl_re_indentf@@Base+0x49e0>  // b.plast
   36b7c:	mov	w3, #0x0                   	// #0
   36b80:	and	x2, x20, #0xffff
   36b84:	ldr	x1, [sp, #144]
   36b88:	mov	x0, x28
   36b8c:	bl	56f0 <Perl_av_fetch@plt>
   36b90:	mov	x19, x0
   36b94:	cbz	x0, 36b68 <Perl_re_indentf@@Base+0x493c>
   36b98:	ldr	x1, [x0]
   36b9c:	ldr	w0, [x1, #12]
   36ba0:	and	w0, w0, w21
   36ba4:	cmp	w0, #0x400
   36ba8:	b.ne	36ab4 <Perl_re_indentf@@Base+0x4888>  // b.any
   36bac:	ldr	x2, [x1, #16]
   36bb0:	ldr	x1, [x19]
   36bb4:	ldr	w0, [x1, #12]
   36bb8:	and	w3, w0, #0xf
   36bbc:	ldrb	w3, [x22, w3, uxtw]
   36bc0:	cbz	w3, 36acc <Perl_re_indentf@@Base+0x48a0>
   36bc4:	and	w3, w0, #0xc000
   36bc8:	cmp	w3, #0x8, lsl #12
   36bcc:	b.eq	36af0 <Perl_re_indentf@@Base+0x48c4>  // b.none
   36bd0:	and	w3, w0, #0xff
   36bd4:	cmp	w3, #0xf
   36bd8:	b.ne	36b24 <Perl_re_indentf@@Base+0x48f8>  // b.any
   36bdc:	ldr	x3, [x1]
   36be0:	ldrb	w3, [x3, #129]
   36be4:	tbnz	w3, #6, 36b24 <Perl_re_indentf@@Base+0x48f8>
   36be8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   36bec:	add	x3, x3, #0xc10
   36bf0:	add	x3, x3, #0x5c0
   36bf4:	mov	w2, #0x929                 	// #2345
   36bf8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   36bfc:	add	x1, x1, #0xfb8
   36c00:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   36c04:	add	x0, x0, #0xe88
   36c08:	bl	58e0 <__assert_fail@plt>
   36c0c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   36c10:	add	x1, x1, #0x8d8
   36c14:	mov	x0, x28
   36c18:	bl	50e0 <Perl_re_printf@plt>
   36c1c:	ldr	w2, [sp, #128]
   36c20:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   36c24:	add	x1, x1, #0xe8
   36c28:	mov	x0, x28
   36c2c:	bl	5940 <Perl_re_indentf@plt>
   36c30:	ldrh	w0, [x27, #56]
   36c34:	cbz	w0, 36c74 <Perl_re_indentf@@Base+0x4a48>
   36c38:	mov	w21, #0x0                   	// #0
   36c3c:	adrp	x20, 79000 <boot_re@@Base+0x1741c>
   36c40:	add	x20, x20, #0xf0
   36c44:	adrp	x19, 79000 <boot_re@@Base+0x1741c>
   36c48:	add	x19, x19, #0x100
   36c4c:	mov	x3, x20
   36c50:	ldr	w2, [sp, #112]
   36c54:	mov	x1, x19
   36c58:	mov	x0, x28
   36c5c:	bl	50e0 <Perl_re_printf@plt>
   36c60:	add	w0, w21, #0x1
   36c64:	and	w21, w0, #0xffff
   36c68:	ldrh	w1, [x27, #56]
   36c6c:	cmp	w1, w0, uxth
   36c70:	b.hi	36c4c <Perl_re_indentf@@Base+0x4a20>  // b.pmore
   36c74:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   36c78:	add	x1, x1, #0x8d8
   36c7c:	mov	x0, x28
   36c80:	bl	50e0 <Perl_re_printf@plt>
   36c84:	cmp	w24, #0x1
   36c88:	b.ls	36da8 <Perl_re_indentf@@Base+0x4b7c>  // b.plast
   36c8c:	mov	w20, #0x1                   	// #1
   36c90:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   36c94:	add	x0, x0, #0x108
   36c98:	str	x0, [sp, #152]
   36c9c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   36ca0:	add	x0, x0, #0x118
   36ca4:	str	x0, [sp, #136]
   36ca8:	b	36d4c <Perl_re_indentf@@Base+0x4b20>
   36cac:	ldr	x3, [sp, #136]
   36cb0:	ldr	w2, [sp, #112]
   36cb4:	mov	x1, x22
   36cb8:	mov	x0, x28
   36cbc:	bl	50e0 <Perl_re_printf@plt>
   36cc0:	add	w1, w19, #0x1
   36cc4:	and	w19, w1, #0xffff
   36cc8:	ldrh	w0, [x27, #56]
   36ccc:	cmp	w0, w1, uxth
   36cd0:	b.ls	36d08 <Perl_re_indentf@@Base+0x4adc>  // b.plast
   36cd4:	add	w1, w19, w20
   36cd8:	ldr	x2, [x27, #24]
   36cdc:	lsl	x1, x1, #3
   36ce0:	ldr	w1, [x2, x1]
   36ce4:	cbz	w1, 36cac <Perl_re_indentf@@Base+0x4a80>
   36ce8:	sub	w1, w1, #0x1
   36cec:	udiv	w3, w1, w0
   36cf0:	add	w3, w3, #0x1
   36cf4:	ldr	w2, [sp, #112]
   36cf8:	add	x1, x23, #0x110
   36cfc:	mov	x0, x28
   36d00:	bl	50e0 <Perl_re_printf@plt>
   36d04:	b	36cc0 <Perl_re_indentf@@Base+0x4a94>
   36d08:	udiv	w0, w21, w0
   36d0c:	add	w0, w0, #0x1
   36d10:	ldr	x1, [x27, #16]
   36d14:	lsl	x0, x0, #4
   36d18:	ldrh	w3, [x1, x0]
   36d1c:	cbnz	w3, 36d88 <Perl_re_indentf@@Base+0x4b5c>
   36d20:	ldr	x0, [x27, #24]
   36d24:	add	x0, x0, w20, uxtw #3
   36d28:	ldr	w2, [x0, #4]
   36d2c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   36d30:	add	x1, x1, #0x120
   36d34:	mov	x0, x28
   36d38:	bl	50e0 <Perl_re_printf@plt>
   36d3c:	ldrh	w0, [x27, #56]
   36d40:	add	w20, w20, w0
   36d44:	cmp	w20, w24
   36d48:	b.cs	36da8 <Perl_re_indentf@@Base+0x4b7c>  // b.hs, b.nlast
   36d4c:	sub	w21, w20, #0x1
   36d50:	ldrh	w3, [x27, #56]
   36d54:	udiv	w3, w21, w3
   36d58:	add	w3, w3, #0x1
   36d5c:	ldr	w2, [sp, #128]
   36d60:	ldr	x1, [sp, #152]
   36d64:	mov	x0, x28
   36d68:	bl	5940 <Perl_re_indentf@plt>
   36d6c:	ldrh	w0, [x27, #56]
   36d70:	cbz	w0, 36d08 <Perl_re_indentf@@Base+0x4adc>
   36d74:	mov	w19, #0x0                   	// #0
   36d78:	adrp	x22, 77000 <boot_re@@Base+0x1541c>
   36d7c:	add	x22, x22, #0xaf8
   36d80:	adrp	x23, 79000 <boot_re@@Base+0x1741c>
   36d84:	b	36cd4 <Perl_re_indentf@@Base+0x4aa8>
   36d88:	ldr	x0, [x27, #24]
   36d8c:	add	x0, x0, w20, uxtw #3
   36d90:	ldr	w2, [x0, #4]
   36d94:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   36d98:	add	x1, x1, #0x130
   36d9c:	mov	x0, x28
   36da0:	bl	50e0 <Perl_re_printf@plt>
   36da4:	b	36d3c <Perl_re_indentf@@Base+0x4b10>
   36da8:	sub	w12, w24, #0x1
   36dac:	ldrh	w0, [x27, #56]
   36db0:	udiv	w12, w12, w0
   36db4:	add	w1, w12, #0x1
   36db8:	str	w1, [x27, #84]
   36dbc:	cmp	w1, #0x1
   36dc0:	b.ls	36f44 <Perl_re_indentf@@Base+0x4d18>  // b.plast
   36dc4:	mov	x10, #0x10                  	// #16
   36dc8:	mov	w8, #0x0                   	// #0
   36dcc:	mov	w19, #0x0                   	// #0
   36dd0:	mov	w6, #0x1                   	// #1
   36dd4:	mov	w13, #0x0                   	// #0
   36dd8:	mov	w9, w6
   36ddc:	b	36f08 <Perl_re_indentf@@Base+0x4cdc>
   36de0:	ldr	x4, [x27, #24]
   36de4:	add	w2, w3, w11
   36de8:	lsl	x2, x2, #3
   36dec:	ldr	w0, [x4, x2]
   36df0:	cbnz	w0, 387ac <Perl_re_indentf@@Base+0x6580>
   36df4:	ubfiz	x2, x19, #3, #32
   36df8:	str	w0, [x4, x2]
   36dfc:	ldr	x0, [x27, #24]
   36e00:	add	x0, x0, x2
   36e04:	str	w6, [x0, #4]
   36e08:	add	w19, w19, #0x1
   36e0c:	mov	w0, w9
   36e10:	add	w3, w3, #0x1
   36e14:	cbz	w7, 36ef4 <Perl_re_indentf@@Base+0x4cc8>
   36e18:	ldrh	w5, [x27, #56]
   36e1c:	cmp	w5, w3
   36e20:	b.ls	36ef4 <Perl_re_indentf@@Base+0x4cc8>  // b.plast
   36e24:	cbnz	w0, 36de0 <Perl_re_indentf@@Base+0x4bb4>
   36e28:	ldr	x4, [x27, #24]
   36e2c:	add	w2, w3, w11
   36e30:	lsl	x2, x2, #3
   36e34:	ldr	w15, [x4, x2]
   36e38:	cbz	w15, 36e10 <Perl_re_indentf@@Base+0x4be4>
   36e3c:	cmp	w14, #0x1
   36e40:	b.eq	36e7c <Perl_re_indentf@@Base+0x4c50>  // b.none
   36e44:	sub	w7, w7, #0x1
   36e48:	ldr	x4, [x27, #16]
   36e4c:	add	x4, x4, x10
   36e50:	add	w0, w5, w19
   36e54:	sub	w0, w0, w3
   36e58:	str	w0, [x4, #8]
   36e5c:	ldr	x4, [x27, #24]
   36e60:	ldr	w0, [x4, x2]
   36e64:	cbz	w0, 36df4 <Perl_re_indentf@@Base+0x4bc8>
   36e68:	sub	w0, w0, #0x1
   36e6c:	ldrh	w2, [x27, #56]
   36e70:	udiv	w0, w0, w2
   36e74:	add	w0, w0, #0x1
   36e78:	b	36df4 <Perl_re_indentf@@Base+0x4bc8>
   36e7c:	cmp	w19, w8
   36e80:	b.ls	36ea4 <Perl_re_indentf@@Base+0x4c78>  // b.plast
   36e84:	add	x4, x4, w8, uxtw #3
   36e88:	ldr	w0, [x4]
   36e8c:	cbz	w0, 36ea4 <Perl_re_indentf@@Base+0x4c78>
   36e90:	add	w8, w8, #0x1
   36e94:	add	x4, x4, #0x8
   36e98:	cmp	w8, w19
   36e9c:	b.ne	36e88 <Perl_re_indentf@@Base+0x4c5c>  // b.any
   36ea0:	mov	w8, w19
   36ea4:	ldr	x0, [x27, #16]
   36ea8:	add	x0, x0, x10
   36eac:	sub	w3, w5, w3
   36eb0:	add	w3, w3, w8
   36eb4:	str	w3, [x0, #8]
   36eb8:	ldr	x3, [x27, #24]
   36ebc:	ldr	w0, [x3, x2]
   36ec0:	cbz	w0, 36ed4 <Perl_re_indentf@@Base+0x4ca8>
   36ec4:	sub	w0, w0, #0x1
   36ec8:	ldrh	w2, [x27, #56]
   36ecc:	udiv	w0, w0, w2
   36ed0:	add	w0, w0, #0x1
   36ed4:	ubfiz	x2, x8, #3, #32
   36ed8:	str	w0, [x3, x2]
   36edc:	ldr	x0, [x27, #24]
   36ee0:	add	x0, x0, x2
   36ee4:	str	w6, [x0, #4]
   36ee8:	add	w8, w8, #0x1
   36eec:	cmp	w19, w8
   36ef0:	csel	w19, w19, w8, cs  // cs = hs, nlast
   36ef4:	add	w0, w6, #0x1
   36ef8:	add	x10, x10, #0x10
   36efc:	cmp	w12, w6
   36f00:	b.eq	36f48 <Perl_re_indentf@@Base+0x4d1c>  // b.none
   36f04:	mov	w6, w0
   36f08:	cbz	w6, 387c4 <Perl_re_indentf@@Base+0x6598>
   36f0c:	sub	w0, w6, #0x1
   36f10:	ldrh	w2, [x27, #56]
   36f14:	mul	w0, w0, w2
   36f18:	add	w11, w0, #0x1
   36f1c:	add	w0, w0, #0x1
   36f20:	ldr	x2, [x27, #24]
   36f24:	add	x0, x2, x0, lsl #3
   36f28:	ldr	w14, [x0, #4]
   36f2c:	str	wzr, [x0, #4]
   36f30:	cbz	w14, 36ef4 <Perl_re_indentf@@Base+0x4cc8>
   36f34:	mov	w7, w14
   36f38:	mov	w0, w13
   36f3c:	mov	w3, #0x0                   	// #0
   36f40:	b	36e18 <Perl_re_indentf@@Base+0x4bec>
   36f44:	mov	w19, #0x0                   	// #0
   36f48:	add	w0, w19, #0x1
   36f4c:	str	w0, [x27, #4]
   36f50:	ubfiz	x1, x1, #4, #32
   36f54:	ldr	x0, [x27, #16]
   36f58:	bl	52d0 <realloc@plt>
   36f5c:	str	x0, [x27, #16]
   36f60:	ldr	w0, [x28, #2368]
   36f64:	tbnz	w0, #20, 36f70 <Perl_re_indentf@@Base+0x4d44>
   36f68:	ldr	x0, [sp, #312]
   36f6c:	tbz	w0, #2, 3626c <Perl_re_indentf@@Base+0x4040>
   36f70:	ldr	w0, [x28, #2368]
   36f74:	tbnz	w0, #20, 36f80 <Perl_re_indentf@@Base+0x4d54>
   36f78:	ldr	x0, [sp, #312]
   36f7c:	tbz	w0, #16, 3626c <Perl_re_indentf@@Base+0x4040>
   36f80:	sub	w0, w24, w19
   36f84:	mov	w1, #0x64                  	// #100
   36f88:	mul	w0, w0, w1
   36f8c:	ucvtf	d0, w0
   36f90:	ucvtf	d1, w24
   36f94:	ldr	x1, [x27, #96]
   36f98:	ldrh	w0, [x27, #56]
   36f9c:	madd	w0, w0, w1, w0
   36fa0:	fdiv	d0, d0, d1
   36fa4:	mov	w5, w19
   36fa8:	mov	w4, w24
   36fac:	add	w3, w0, #0x1
   36fb0:	ldr	w0, [sp, #352]
   36fb4:	add	w2, w0, #0x1
   36fb8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   36fbc:	add	x1, x1, #0x140
   36fc0:	mov	x0, x28
   36fc4:	bl	5940 <Perl_re_indentf@plt>
   36fc8:	b	3626c <Perl_re_indentf@@Base+0x4040>
   36fcc:	ldr	x0, [sp, #184]
   36fd0:	ldrb	w0, [x0, #1]
   36fd4:	cmp	w0, #0x22
   36fd8:	b.eq	362d8 <Perl_re_indentf@@Base+0x40ac>  // b.none
   36fdc:	ldr	x0, [x25, #40]
   36fe0:	ldr	x1, [x0, #8]
   36fe4:	ldr	x0, [sp, #208]
   36fe8:	add	x0, x0, #0x4
   36fec:	ldr	x2, [x25, #96]
   36ff0:	sub	x0, x0, x2
   36ff4:	asr	x0, x0, #2
   36ff8:	lsl	x0, x0, #3
   36ffc:	add	x2, x1, x0
   37000:	ldur	w2, [x2, #-4]
   37004:	str	w2, [sp, #112]
   37008:	ldr	w24, [x1, x0]
   3700c:	b	36318 <Perl_re_indentf@@Base+0x40ec>
   37010:	ldr	x21, [x27, #40]
   37014:	cbnz	x21, 36364 <Perl_re_indentf@@Base+0x4138>
   37018:	ldr	w0, [x27, #84]
   3701c:	sub	w0, w0, #0x1
   37020:	mov	w22, #0x1                   	// #1
   37024:	cmp	w0, w22
   37028:	b.ls	38734 <Perl_re_indentf@@Base+0x6508>  // b.plast
   3702c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   37030:	add	x0, x0, #0xb50
   37034:	str	x0, [sp, #192]
   37038:	str	w24, [sp, #136]
   3703c:	b	374b8 <Perl_re_indentf@@Base+0x528c>
   37040:	mov	w3, #0x22                  	// #34
   37044:	mov	x2, #0x0                   	// #0
   37048:	mov	x0, x28
   3704c:	bl	5200 <Perl_sv_2pv_flags@plt>
   37050:	mov	x23, x0
   37054:	b	37254 <Perl_re_indentf@@Base+0x5028>
   37058:	ldr	x0, [x27, #32]
   3705c:	cbz	x0, 3714c <Perl_re_indentf@@Base+0x4f20>
   37060:	stp	xzr, xzr, [x0]
   37064:	stp	xzr, xzr, [x0, #16]
   37068:	ldr	w0, [x28, #2368]
   3706c:	tbnz	w0, #20, 37078 <Perl_re_indentf@@Base+0x4e4c>
   37070:	ldr	x0, [sp, #312]
   37074:	tbz	w0, #1, 37090 <Perl_re_indentf@@Base+0x4e64>
   37078:	ldr	x3, [sp, #152]
   3707c:	ldr	w0, [sp, #352]
   37080:	add	w2, w0, #0x1
   37084:	ldr	x1, [sp, #200]
   37088:	mov	x0, x28
   3708c:	bl	5940 <Perl_re_indentf@plt>
   37090:	ldr	w0, [sp, #128]
   37094:	tbnz	w0, #31, 3725c <Perl_re_indentf@@Base+0x5030>
   37098:	mov	w3, #0x0                   	// #0
   3709c:	sxtw	x2, w0
   370a0:	ldr	x1, [sp, #144]
   370a4:	mov	x0, x28
   370a8:	bl	56f0 <Perl_av_fetch@plt>
   370ac:	ldr	x1, [x0]
   370b0:	ldr	w0, [x1, #12]
   370b4:	mov	w2, #0x400                 	// #1024
   370b8:	movk	w2, #0x20, lsl #16
   370bc:	and	w0, w0, w2
   370c0:	cmp	w0, #0x400
   370c4:	b.ne	37170 <Perl_re_indentf@@Base+0x4f44>  // b.any
   370c8:	ldr	x2, [x1, #16]
   370cc:	ldrb	w0, [x2]
   370d0:	ubfx	x3, x0, #3, #5
   370d4:	ldr	x4, [x27, #32]
   370d8:	and	w1, w0, #0x7
   370dc:	mov	w0, #0x1                   	// #1
   370e0:	lsl	w0, w0, w1
   370e4:	ldrb	w1, [x4, x3]
   370e8:	orr	w0, w0, w1
   370ec:	strb	w0, [x4, x3]
   370f0:	cbz	x26, 3711c <Perl_re_indentf@@Base+0x4ef0>
   370f4:	ldrb	w0, [x2]
   370f8:	ldrb	w0, [x26, x0]
   370fc:	ubfx	x3, x0, #3, #5
   37100:	ldr	x4, [x27, #32]
   37104:	and	w1, w0, #0x7
   37108:	mov	w0, #0x1                   	// #1
   3710c:	lsl	w0, w0, w1
   37110:	ldrb	w1, [x4, x3]
   37114:	orr	w0, w0, w1
   37118:	strb	w0, [x4, x3]
   3711c:	ldr	w0, [x25, #192]
   37120:	cbnz	w0, 3712c <Perl_re_indentf@@Base+0x4f00>
   37124:	ldrb	w0, [x2]
   37128:	tbnz	w0, #7, 37188 <Perl_re_indentf@@Base+0x4f5c>
   3712c:	ldr	w0, [x28, #2368]
   37130:	tbnz	w0, #20, 3713c <Perl_re_indentf@@Base+0x4f10>
   37134:	ldr	x0, [sp, #312]
   37138:	tbz	w0, #1, 3725c <Perl_re_indentf@@Base+0x5030>
   3713c:	ldr	x1, [sp, #192]
   37140:	mov	x0, x28
   37144:	bl	50e0 <Perl_re_printf@plt>
   37148:	b	3725c <Perl_re_indentf@@Base+0x5030>
   3714c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37150:	add	x3, x3, #0xc10
   37154:	add	x3, x3, #0x590
   37158:	mov	w2, #0xd9f                 	// #3487
   3715c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37160:	add	x1, x1, #0xfb8
   37164:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   37168:	add	x0, x0, #0x1c0
   3716c:	bl	58e0 <__assert_fail@plt>
   37170:	mov	w3, #0x22                  	// #34
   37174:	mov	x2, #0x0                   	// #0
   37178:	mov	x0, x28
   3717c:	bl	5200 <Perl_sv_2pv_flags@plt>
   37180:	mov	x2, x0
   37184:	b	370cc <Perl_re_indentf@@Base+0x4ea0>
   37188:	ldr	x3, [x27, #32]
   3718c:	lsr	w1, w0, #6
   37190:	mov	w0, #0x1                   	// #1
   37194:	lsl	w0, w0, w1
   37198:	ldrb	w1, [x3, #24]
   3719c:	orr	w0, w0, w1
   371a0:	strb	w0, [x3, #24]
   371a4:	b	3712c <Perl_re_indentf@@Base+0x4f00>
   371a8:	ldr	w0, [x28, #2368]
   371ac:	tbnz	w0, #20, 371b8 <Perl_re_indentf@@Base+0x4f8c>
   371b0:	ldr	x0, [sp, #312]
   371b4:	tbz	w0, #1, 371c8 <Perl_re_indentf@@Base+0x4f9c>
   371b8:	mov	x2, x23
   371bc:	ldr	x1, [sp, #192]
   371c0:	mov	x0, x28
   371c4:	bl	50e0 <Perl_re_printf@plt>
   371c8:	str	w20, [sp, #128]
   371cc:	add	w20, w20, #0x1
   371d0:	ldrh	w0, [x27, #56]
   371d4:	add	w19, w19, #0x1
   371d8:	cmp	w0, w20
   371dc:	b.ls	372e4 <Perl_re_indentf@@Base+0x50b8>  // b.plast
   371e0:	cmp	w19, w0
   371e4:	b.cc	371cc <Perl_re_indentf@@Base+0x4fa0>  // b.lo, b.ul, b.last
   371e8:	sub	w0, w19, w0
   371ec:	ldr	w1, [x27, #4]
   371f0:	cmp	w0, w1
   371f4:	b.cs	371cc <Perl_re_indentf@@Base+0x4fa0>  // b.hs, b.nlast
   371f8:	ldr	x1, [x27, #24]
   371fc:	add	x0, x1, w0, uxtw #3
   37200:	ldr	w0, [x0, #4]
   37204:	cmp	w0, w22
   37208:	b.ne	371cc <Perl_re_indentf@@Base+0x4fa0>  // b.any
   3720c:	add	w24, w24, #0x1
   37210:	cmp	w24, #0x1
   37214:	b.ls	371c8 <Perl_re_indentf@@Base+0x4f9c>  // b.plast
   37218:	cmp	w22, #0x1
   3721c:	b.eq	3780c <Perl_re_indentf@@Base+0x55e0>  // b.none
   37220:	mov	w3, #0x0                   	// #0
   37224:	mov	w2, w20
   37228:	ldr	x1, [sp, #144]
   3722c:	mov	x0, x28
   37230:	bl	56f0 <Perl_av_fetch@plt>
   37234:	ldr	x1, [x0]
   37238:	ldr	w0, [x1, #12]
   3723c:	mov	w2, #0x400                 	// #1024
   37240:	movk	w2, #0x20, lsl #16
   37244:	and	w0, w0, w2
   37248:	cmp	w0, #0x400
   3724c:	b.ne	37040 <Perl_re_indentf@@Base+0x4e14>  // b.any
   37250:	ldr	x23, [x1, #16]
   37254:	cmp	w24, #0x2
   37258:	b.eq	37058 <Perl_re_indentf@@Base+0x4e2c>  // b.none
   3725c:	ldrb	w0, [x23]
   37260:	ubfx	x2, x0, #3, #5
   37264:	ldr	x3, [x27, #32]
   37268:	and	w1, w0, #0x7
   3726c:	mov	w0, #0x1                   	// #1
   37270:	lsl	w0, w0, w1
   37274:	ldrb	w1, [x3, x2]
   37278:	orr	w0, w0, w1
   3727c:	strb	w0, [x3, x2]
   37280:	cbz	x26, 372ac <Perl_re_indentf@@Base+0x5080>
   37284:	ldrb	w0, [x23]
   37288:	ldrb	w0, [x26, x0]
   3728c:	ubfx	x2, x0, #3, #5
   37290:	ldr	x3, [x27, #32]
   37294:	and	w1, w0, #0x7
   37298:	mov	w0, #0x1                   	// #1
   3729c:	lsl	w0, w0, w1
   372a0:	ldrb	w1, [x3, x2]
   372a4:	orr	w0, w0, w1
   372a8:	strb	w0, [x3, x2]
   372ac:	ldr	w0, [x25, #192]
   372b0:	cbnz	w0, 371a8 <Perl_re_indentf@@Base+0x4f7c>
   372b4:	ldrb	w0, [x23]
   372b8:	tbz	w0, #7, 371a8 <Perl_re_indentf@@Base+0x4f7c>
   372bc:	ldr	x2, [x27, #32]
   372c0:	lsr	w1, w0, #6
   372c4:	mov	w0, #0x1                   	// #1
   372c8:	lsl	w0, w0, w1
   372cc:	ldrb	w1, [x2, #24]
   372d0:	orr	w0, w0, w1
   372d4:	strb	w0, [x2, #24]
   372d8:	b	371a8 <Perl_re_indentf@@Base+0x4f7c>
   372dc:	mov	w0, #0xffffffff            	// #-1
   372e0:	str	w0, [sp, #128]
   372e4:	cmp	w24, #0x1
   372e8:	b.ne	3783c <Perl_re_indentf@@Base+0x5610>  // b.any
   372ec:	mov	w3, #0x0                   	// #0
   372f0:	ldrsw	x2, [sp, #128]
   372f4:	ldr	x1, [sp, #144]
   372f8:	mov	x0, x28
   372fc:	bl	56f0 <Perl_av_fetch@plt>
   37300:	mov	x20, x0
   37304:	ldr	x1, [x0]
   37308:	ldr	w0, [x1, #12]
   3730c:	mov	w2, #0x400                 	// #1024
   37310:	movk	w2, #0x20, lsl #16
   37314:	and	w2, w0, w2
   37318:	cmp	w2, #0x400
   3731c:	b.ne	37610 <Perl_re_indentf@@Base+0x53e4>  // b.any
   37320:	and	w3, w0, #0xf
   37324:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   37328:	ldr	x2, [x2, #3888]
   3732c:	ldrb	w2, [x2, w3, uxtw]
   37330:	cbz	w2, 37500 <Perl_re_indentf@@Base+0x52d4>
   37334:	and	w2, w0, #0xc000
   37338:	cmp	w2, #0x8, lsl #12
   3733c:	b.eq	37524 <Perl_re_indentf@@Base+0x52f8>  // b.none
   37340:	and	w0, w0, #0xff
   37344:	cmp	w0, #0xf
   37348:	b.eq	37558 <Perl_re_indentf@@Base+0x532c>  // b.none
   3734c:	ldr	x0, [x1]
   37350:	ldr	x0, [x0, #16]
   37354:	str	x0, [sp, #336]
   37358:	ldr	x1, [x20]
   3735c:	ldr	w0, [x1, #12]
   37360:	and	w3, w0, #0xf
   37364:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   37368:	ldr	x2, [x2, #3888]
   3736c:	ldrb	w2, [x2, w3, uxtw]
   37370:	cbz	w2, 37588 <Perl_re_indentf@@Base+0x535c>
   37374:	and	w2, w0, #0xc000
   37378:	cmp	w2, #0x8, lsl #12
   3737c:	b.eq	375ac <Perl_re_indentf@@Base+0x5380>  // b.none
   37380:	and	w0, w0, #0xff
   37384:	cmp	w0, #0xf
   37388:	b.eq	375e0 <Perl_re_indentf@@Base+0x53b4>  // b.none
   3738c:	ldr	x19, [x1, #16]
   37390:	ldr	w0, [x28, #2368]
   37394:	tbnz	w0, #20, 373a0 <Perl_re_indentf@@Base+0x5174>
   37398:	ldr	x0, [sp, #312]
   3739c:	tbz	w0, #1, 37464 <Perl_re_indentf@@Base+0x5238>
   373a0:	mov	x0, x28
   373a4:	bl	59b0 <Perl_sv_newmortal@plt>
   373a8:	str	x0, [sp, #200]
   373ac:	ldr	w0, [sp, #352]
   373b0:	add	w24, w0, #0x1
   373b4:	ldrsw	x23, [sp, #128]
   373b8:	ldr	x1, [x20]
   373bc:	ldr	w0, [x1, #12]
   373c0:	mov	w2, #0x400                 	// #1024
   373c4:	movk	w2, #0x20, lsl #16
   373c8:	and	w0, w0, w2
   373cc:	cmp	w0, #0x400
   373d0:	b.ne	37628 <Perl_re_indentf@@Base+0x53fc>  // b.any
   373d4:	ldr	x2, [x1, #16]
   373d8:	ldr	x1, [x20]
   373dc:	ldr	w0, [x1, #12]
   373e0:	and	w4, w0, #0xf
   373e4:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   373e8:	ldr	x3, [x3, #3888]
   373ec:	ldrb	w3, [x3, w4, uxtw]
   373f0:	cbz	w3, 37640 <Perl_re_indentf@@Base+0x5414>
   373f4:	and	w3, w0, #0xc000
   373f8:	cmp	w3, #0x8, lsl #12
   373fc:	b.eq	37664 <Perl_re_indentf@@Base+0x5438>  // b.none
   37400:	and	w3, w0, #0xff
   37404:	cmp	w3, #0xf
   37408:	b.ne	37418 <Perl_re_indentf@@Base+0x51ec>  // b.any
   3740c:	ldr	x3, [x1]
   37410:	ldrb	w3, [x3, #129]
   37414:	tbz	w3, #6, 37698 <Perl_re_indentf@@Base+0x546c>
   37418:	lsr	w0, w0, #21
   3741c:	and	w7, w0, #0x100
   37420:	ldr	x0, [x1]
   37424:	orr	w7, w7, #0x800
   37428:	ldr	x6, [x28, #1456]
   3742c:	ldr	x5, [x28, #1448]
   37430:	mov	x4, #0x6                   	// #6
   37434:	ldr	x3, [x0, #16]
   37438:	ldr	x1, [sp, #200]
   3743c:	mov	x0, x28
   37440:	bl	53f0 <Perl_pv_pretty@plt>
   37444:	mov	x5, x0
   37448:	mov	x4, x23
   3744c:	ldr	x3, [sp, #152]
   37450:	mov	w2, w24
   37454:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   37458:	add	x1, x1, #0x200
   3745c:	mov	x0, x28
   37460:	bl	5940 <Perl_re_indentf@plt>
   37464:	cmp	w22, #0x1
   37468:	b.eq	376bc <Perl_re_indentf@@Base+0x5490>  // b.none
   3746c:	ldr	x0, [sp, #336]
   37470:	ldr	x2, [sp, #208]
   37474:	ldrb	w1, [x2]
   37478:	add	w1, w1, w0
   3747c:	strb	w1, [x2]
   37480:	sub	x1, x0, #0x1
   37484:	str	x1, [sp, #336]
   37488:	cbz	x0, 374a4 <Perl_re_indentf@@Base+0x5278>
   3748c:	ldrb	w0, [x19], #1
   37490:	strb	w0, [x21], #1
   37494:	ldr	x0, [sp, #336]
   37498:	sub	x1, x0, #0x1
   3749c:	str	x1, [sp, #336]
   374a0:	cbnz	x0, 3748c <Perl_re_indentf@@Base+0x5260>
   374a4:	add	w22, w22, #0x1
   374a8:	ldr	w0, [x27, #84]
   374ac:	sub	w0, w0, #0x1
   374b0:	cmp	w0, w22
   374b4:	b.ls	376d4 <Perl_re_indentf@@Base+0x54a8>  // b.plast
   374b8:	mov	w0, w22
   374bc:	str	x0, [sp, #152]
   374c0:	ubfiz	x0, x22, #4, #32
   374c4:	ldr	x1, [x27, #16]
   374c8:	add	x2, x1, x0
   374cc:	ldr	w19, [x2, #8]
   374d0:	ldrh	w0, [x1, x0]
   374d4:	cmp	w0, #0x0
   374d8:	cset	w24, ne  // ne = any
   374dc:	ldrh	w0, [x27, #56]
   374e0:	cbz	w0, 372dc <Perl_re_indentf@@Base+0x50b0>
   374e4:	mov	w1, #0xffffffff            	// #-1
   374e8:	str	w1, [sp, #128]
   374ec:	mov	w20, #0x0                   	// #0
   374f0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   374f4:	add	x1, x1, #0x1e0
   374f8:	str	x1, [sp, #200]
   374fc:	b	371e0 <Perl_re_indentf@@Base+0x4fb4>
   37500:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37504:	add	x3, x3, #0xc10
   37508:	add	x3, x3, #0x590
   3750c:	mov	w2, #0xdbb                 	// #3515
   37510:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37514:	add	x1, x1, #0xfb8
   37518:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3751c:	add	x0, x0, #0xe40
   37520:	bl	58e0 <__assert_fail@plt>
   37524:	and	w2, w0, #0xff
   37528:	sub	w2, w2, #0x9
   3752c:	cmp	w2, #0x1
   37530:	b.hi	37340 <Perl_re_indentf@@Base+0x5114>  // b.pmore
   37534:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37538:	add	x3, x3, #0xc10
   3753c:	add	x3, x3, #0x590
   37540:	mov	w2, #0xdbb                 	// #3515
   37544:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37548:	add	x1, x1, #0xfb8
   3754c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37550:	add	x0, x0, #0xe70
   37554:	bl	58e0 <__assert_fail@plt>
   37558:	ldr	x0, [x1]
   3755c:	ldrb	w0, [x0, #129]
   37560:	tbnz	w0, #6, 3734c <Perl_re_indentf@@Base+0x5120>
   37564:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37568:	add	x3, x3, #0xc10
   3756c:	add	x3, x3, #0x590
   37570:	mov	w2, #0xdbb                 	// #3515
   37574:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37578:	add	x1, x1, #0xfb8
   3757c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37580:	add	x0, x0, #0xe88
   37584:	bl	58e0 <__assert_fail@plt>
   37588:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3758c:	add	x3, x3, #0xc10
   37590:	add	x3, x3, #0x590
   37594:	mov	w2, #0xdbb                 	// #3515
   37598:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3759c:	add	x1, x1, #0xfb8
   375a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   375a4:	add	x0, x0, #0xd10
   375a8:	bl	58e0 <__assert_fail@plt>
   375ac:	and	w2, w0, #0xff
   375b0:	sub	w2, w2, #0x9
   375b4:	cmp	w2, #0x1
   375b8:	b.hi	37380 <Perl_re_indentf@@Base+0x5154>  // b.pmore
   375bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   375c0:	add	x3, x3, #0xc10
   375c4:	add	x3, x3, #0x590
   375c8:	mov	w2, #0xdbb                 	// #3515
   375cc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   375d0:	add	x1, x1, #0xfb8
   375d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   375d8:	add	x0, x0, #0xd40
   375dc:	bl	58e0 <__assert_fail@plt>
   375e0:	ldr	x0, [x1]
   375e4:	ldrb	w0, [x0, #129]
   375e8:	tbnz	w0, #6, 3738c <Perl_re_indentf@@Base+0x5160>
   375ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   375f0:	add	x3, x3, #0xc10
   375f4:	add	x3, x3, #0x590
   375f8:	mov	w2, #0xdbb                 	// #3515
   375fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37600:	add	x1, x1, #0xfb8
   37604:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37608:	add	x0, x0, #0xd58
   3760c:	bl	58e0 <__assert_fail@plt>
   37610:	mov	w3, #0x2                   	// #2
   37614:	add	x2, sp, #0x150
   37618:	mov	x0, x28
   3761c:	bl	5200 <Perl_sv_2pv_flags@plt>
   37620:	mov	x19, x0
   37624:	b	37390 <Perl_re_indentf@@Base+0x5164>
   37628:	mov	w3, #0x22                  	// #34
   3762c:	mov	x2, #0x0                   	// #0
   37630:	mov	x0, x28
   37634:	bl	5200 <Perl_sv_2pv_flags@plt>
   37638:	mov	x2, x0
   3763c:	b	373d8 <Perl_re_indentf@@Base+0x51ac>
   37640:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37644:	add	x3, x3, #0xc10
   37648:	add	x3, x3, #0x590
   3764c:	mov	w2, #0xdc1                 	// #3521
   37650:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37654:	add	x1, x1, #0xfb8
   37658:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3765c:	add	x0, x0, #0xe40
   37660:	bl	58e0 <__assert_fail@plt>
   37664:	and	w3, w0, #0xff
   37668:	sub	w3, w3, #0x9
   3766c:	cmp	w3, #0x1
   37670:	b.hi	37400 <Perl_re_indentf@@Base+0x51d4>  // b.pmore
   37674:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37678:	add	x3, x3, #0xc10
   3767c:	add	x3, x3, #0x590
   37680:	mov	w2, #0xdc1                 	// #3521
   37684:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37688:	add	x1, x1, #0xfb8
   3768c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37690:	add	x0, x0, #0xe70
   37694:	bl	58e0 <__assert_fail@plt>
   37698:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3769c:	add	x3, x3, #0xc10
   376a0:	add	x3, x3, #0x590
   376a4:	mov	w2, #0xdc1                 	// #3521
   376a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   376ac:	add	x1, x1, #0xfb8
   376b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   376b4:	add	x0, x0, #0xe88
   376b8:	bl	58e0 <__assert_fail@plt>
   376bc:	ldr	x0, [sp, #208]
   376c0:	ldrb	w1, [sp, #160]
   376c4:	strb	w1, [x0, #1]
   376c8:	mov	x21, x0
   376cc:	strb	wzr, [x21], #4
   376d0:	b	3746c <Perl_re_indentf@@Base+0x5240>
   376d4:	ldr	w24, [sp, #136]
   376d8:	sub	w20, w22, #0x1
   376dc:	str	w20, [x27, #80]
   376e0:	cbz	x21, 36364 <Perl_re_indentf@@Base+0x4138>
   376e4:	ldr	x1, [sp, #208]
   376e8:	ldrb	w0, [x1]
   376ec:	add	x0, x0, #0x3
   376f0:	and	x19, x0, #0xfffffffffffffffc
   376f4:	add	x19, x19, #0x4
   376f8:	add	x19, x1, x19
   376fc:	lsr	x0, x0, #2
   37700:	add	w0, w0, #0x1
   37704:	strh	w0, [x1, #2]
   37708:	str	w22, [x27, #60]
   3770c:	mov	w0, w20
   37710:	ldr	x1, [x27, #64]
   37714:	sub	x1, x1, x0
   37718:	str	x1, [x27, #64]
   3771c:	ldr	x1, [x27, #72]
   37720:	sub	x0, x1, x0
   37724:	str	x0, [x27, #72]
   37728:	ldr	w23, [x27, #88]
   3772c:	add	w24, w24, #0x1
   37730:	ldr	w0, [x28, #2368]
   37734:	tbnz	w0, #20, 37740 <Perl_re_indentf@@Base+0x5514>
   37738:	ldr	x0, [sp, #312]
   3773c:	tbz	w0, #18, 37764 <Perl_re_indentf@@Base+0x5538>
   37740:	ldr	x2, [x25, #96]
   37744:	ldr	x0, [sp, #208]
   37748:	sub	x2, x0, x2
   3774c:	ldr	w3, [sp, #112]
   37750:	ubfx	x2, x2, #2, #32
   37754:	mov	w1, #0xdef                 	// #3567
   37758:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3775c:	add	x0, x0, #0xf30
   37760:	bl	5010 <Perl_warn_nocontext@plt>
   37764:	ldr	x2, [x25, #96]
   37768:	ldr	x0, [sp, #208]
   3776c:	subs	x2, x0, x2
   37770:	b.mi	37844 <Perl_re_indentf@@Base+0x5618>  // b.first
   37774:	ldr	x1, [x25, #40]
   37778:	asr	x0, x2, #2
   3777c:	ldr	x1, [x1, #8]
   37780:	add	x0, x1, x0, lsl #3
   37784:	ldr	w1, [sp, #112]
   37788:	stur	w1, [x0, #-4]
   3778c:	ldr	w0, [x28, #2368]
   37790:	tbnz	w0, #20, 3779c <Perl_re_indentf@@Base+0x5570>
   37794:	ldr	x0, [sp, #312]
   37798:	tbz	w0, #18, 377c0 <Perl_re_indentf@@Base+0x5594>
   3779c:	ldr	x2, [x25, #96]
   377a0:	ldr	x0, [sp, #208]
   377a4:	sub	x2, x0, x2
   377a8:	mov	w3, w20
   377ac:	ubfx	x2, x2, #2, #32
   377b0:	mov	w1, #0xdef                 	// #3567
   377b4:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   377b8:	add	x0, x0, #0x8
   377bc:	bl	5010 <Perl_warn_nocontext@plt>
   377c0:	ldr	x2, [x25, #96]
   377c4:	ldr	x0, [sp, #208]
   377c8:	subs	x2, x0, x2
   377cc:	b.mi	37858 <Perl_re_indentf@@Base+0x562c>  // b.first
   377d0:	ldr	x1, [x25, #40]
   377d4:	asr	x0, x2, #2
   377d8:	ldr	x1, [x1, #8]
   377dc:	lsl	x0, x0, #3
   377e0:	str	w20, [x1, x0]
   377e4:	ldr	x0, [sp, #208]
   377e8:	add	x20, x0, #0x4
   377ec:	cmp	x20, x19
   377f0:	b.cs	3793c <Perl_re_indentf@@Base+0x5710>  // b.hs, b.nlast
   377f4:	adrp	x22, 76000 <boot_re@@Base+0x1441c>
   377f8:	add	x22, x22, #0xf30
   377fc:	mov	w26, #0xdf1                 	// #3569
   37800:	adrp	x21, 77000 <boot_re@@Base+0x1541c>
   37804:	add	x21, x21, #0x8
   37808:	b	378c8 <Perl_re_indentf@@Base+0x569c>
   3780c:	ldr	w24, [sp, #136]
   37810:	cmp	w22, #0x1
   37814:	b.ls	376d8 <Perl_re_indentf@@Base+0x54ac>  // b.plast
   37818:	ldr	w0, [x28, #2368]
   3781c:	tbnz	w0, #20, 37828 <Perl_re_indentf@@Base+0x55fc>
   37820:	ldr	x0, [sp, #312]
   37824:	tbz	w0, #1, 376d8 <Perl_re_indentf@@Base+0x54ac>
   37828:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3782c:	add	x1, x1, #0x228
   37830:	mov	x0, x28
   37834:	bl	50e0 <Perl_re_printf@plt>
   37838:	b	376d8 <Perl_re_indentf@@Base+0x54ac>
   3783c:	ldr	w24, [sp, #136]
   37840:	b	37810 <Perl_re_indentf@@Base+0x55e4>
   37844:	ubfx	x2, x2, #2, #32
   37848:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3784c:	add	x1, x1, #0xf58
   37850:	mov	x0, x28
   37854:	bl	5420 <Perl_croak@plt>
   37858:	ubfx	x2, x2, #2, #32
   3785c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   37860:	add	x1, x1, #0x888
   37864:	mov	x0, x28
   37868:	bl	5420 <Perl_croak@plt>
   3786c:	ubfx	x2, x2, #2, #32
   37870:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   37874:	add	x1, x1, #0xf58
   37878:	mov	x0, x28
   3787c:	bl	5420 <Perl_croak@plt>
   37880:	ldr	x2, [x25, #96]
   37884:	sub	x2, x20, x2
   37888:	mov	w3, #0x0                   	// #0
   3788c:	ubfx	x2, x2, #2, #32
   37890:	mov	w1, w26
   37894:	mov	x0, x21
   37898:	bl	5010 <Perl_warn_nocontext@plt>
   3789c:	ldr	x0, [x25, #96]
   378a0:	subs	x2, x20, x0
   378a4:	b.mi	37928 <Perl_re_indentf@@Base+0x56fc>  // b.first
   378a8:	ldr	x1, [x25, #40]
   378ac:	asr	x0, x2, #2
   378b0:	ldr	x1, [x1, #8]
   378b4:	lsl	x0, x0, #3
   378b8:	str	wzr, [x1, x0]
   378bc:	add	x20, x20, #0x4
   378c0:	cmp	x19, x20
   378c4:	b.ls	3793c <Perl_re_indentf@@Base+0x5710>  // b.plast
   378c8:	ldr	w0, [x28, #2368]
   378cc:	tbnz	w0, #20, 378d8 <Perl_re_indentf@@Base+0x56ac>
   378d0:	ldr	x0, [sp, #312]
   378d4:	tbz	w0, #18, 378f4 <Perl_re_indentf@@Base+0x56c8>
   378d8:	ldr	x2, [x25, #96]
   378dc:	sub	x2, x20, x2
   378e0:	mov	w3, #0x0                   	// #0
   378e4:	ubfx	x2, x2, #2, #32
   378e8:	mov	w1, w26
   378ec:	mov	x0, x22
   378f0:	bl	5010 <Perl_warn_nocontext@plt>
   378f4:	ldr	x0, [x25, #96]
   378f8:	subs	x2, x20, x0
   378fc:	b.mi	3786c <Perl_re_indentf@@Base+0x5640>  // b.first
   37900:	ldr	x1, [x25, #40]
   37904:	asr	x0, x2, #2
   37908:	ldr	x1, [x1, #8]
   3790c:	add	x0, x1, x0, lsl #3
   37910:	stur	wzr, [x0, #-4]
   37914:	ldr	w0, [x28, #2368]
   37918:	tbnz	w0, #20, 37880 <Perl_re_indentf@@Base+0x5654>
   3791c:	ldr	x0, [sp, #312]
   37920:	tbz	w0, #18, 3789c <Perl_re_indentf@@Base+0x5670>
   37924:	b	37880 <Perl_re_indentf@@Base+0x5654>
   37928:	ubfx	x2, x2, #2, #32
   3792c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   37930:	add	x1, x1, #0x888
   37934:	mov	x0, x28
   37938:	bl	5420 <Perl_croak@plt>
   3793c:	sub	w21, w23, #0x1
   37940:	cbz	w23, 37c70 <Perl_re_indentf@@Base+0x5a44>
   37944:	mov	w21, w21
   37948:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   3794c:	ldr	x0, [x26, #3888]
   37950:	str	x0, [sp, #128]
   37954:	mov	w23, #0x400                 	// #1024
   37958:	movk	w23, #0x20, lsl #16
   3795c:	mov	x26, x0
   37960:	b	37a44 <Perl_re_indentf@@Base+0x5818>
   37964:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37968:	add	x3, x3, #0xc10
   3796c:	add	x3, x3, #0x590
   37970:	mov	w2, #0xdf6                 	// #3574
   37974:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37978:	add	x1, x1, #0xfb8
   3797c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37980:	add	x0, x0, #0xe40
   37984:	bl	58e0 <__assert_fail@plt>
   37988:	and	w1, w0, #0xff
   3798c:	sub	w1, w1, #0x9
   37990:	cmp	w1, #0x1
   37994:	b.hi	37a8c <Perl_re_indentf@@Base+0x5860>  // b.pmore
   37998:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3799c:	add	x3, x3, #0xc10
   379a0:	add	x3, x3, #0x590
   379a4:	mov	w2, #0xdf6                 	// #3574
   379a8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   379ac:	add	x1, x1, #0xfb8
   379b0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   379b4:	add	x0, x0, #0xe70
   379b8:	bl	58e0 <__assert_fail@plt>
   379bc:	ldr	x2, [x20]
   379c0:	ldrb	w2, [x2, #129]
   379c4:	tbnz	w2, #6, 37a98 <Perl_re_indentf@@Base+0x586c>
   379c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   379cc:	add	x3, x3, #0xc10
   379d0:	add	x3, x3, #0x590
   379d4:	mov	w2, #0xdf6                 	// #3574
   379d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   379dc:	add	x1, x1, #0xfb8
   379e0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   379e4:	add	x0, x0, #0xe88
   379e8:	bl	58e0 <__assert_fail@plt>
   379ec:	sub	w0, w1, #0x9
   379f0:	cmp	w0, #0x1
   379f4:	b.hi	37abc <Perl_re_indentf@@Base+0x5890>  // b.pmore
   379f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   379fc:	add	x3, x3, #0xc10
   37a00:	add	x3, x3, #0x590
   37a04:	mov	w2, #0xdf7                 	// #3575
   37a08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37a0c:	add	x1, x1, #0xfb8
   37a10:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37a14:	add	x0, x0, #0xd40
   37a18:	bl	58e0 <__assert_fail@plt>
   37a1c:	ldr	x0, [x20, #16]
   37a20:	ldr	x1, [sp, #208]
   37a24:	ldrb	w2, [x1]
   37a28:	add	x2, x0, x2
   37a2c:	mov	x1, x20
   37a30:	mov	x0, x28
   37a34:	bl	51c0 <Perl_sv_chop@plt>
   37a38:	sub	x21, x21, #0x1
   37a3c:	cmn	x21, #0x1
   37a40:	b.eq	37c70 <Perl_re_indentf@@Base+0x5a44>  // b.none
   37a44:	mov	w3, #0x0                   	// #0
   37a48:	mov	x2, x21
   37a4c:	ldr	x1, [sp, #248]
   37a50:	mov	x0, x28
   37a54:	bl	56f0 <Perl_av_fetch@plt>
   37a58:	mov	x22, x0
   37a5c:	cbz	x0, 37a38 <Perl_re_indentf@@Base+0x580c>
   37a60:	ldr	x0, [sp, #208]
   37a64:	ldrb	w5, [x0]
   37a68:	ldr	x20, [x22]
   37a6c:	ldr	w0, [x20, #12]
   37a70:	and	w1, w0, #0xf
   37a74:	ldr	x2, [sp, #128]
   37a78:	ldrb	w1, [x2, w1, uxtw]
   37a7c:	cbz	w1, 37964 <Perl_re_indentf@@Base+0x5738>
   37a80:	and	w3, w0, #0xc000
   37a84:	cmp	w3, #0x8, lsl #12
   37a88:	b.eq	37988 <Perl_re_indentf@@Base+0x575c>  // b.none
   37a8c:	and	w1, w0, #0xff
   37a90:	cmp	w1, #0xf
   37a94:	b.eq	379bc <Perl_re_indentf@@Base+0x5790>  // b.none
   37a98:	ldr	x2, [x20]
   37a9c:	ldr	x4, [x2, #16]
   37aa0:	cmp	x5, x4
   37aa4:	b.hi	37b08 <Perl_re_indentf@@Base+0x58dc>  // b.pmore
   37aa8:	and	w0, w0, w23
   37aac:	cmp	w0, #0x400
   37ab0:	b.ne	37af0 <Perl_re_indentf@@Base+0x58c4>  // b.any
   37ab4:	cmp	w3, #0x8, lsl #12
   37ab8:	b.eq	379ec <Perl_re_indentf@@Base+0x57c0>  // b.none
   37abc:	cmp	w1, #0xf
   37ac0:	b.ne	37a1c <Perl_re_indentf@@Base+0x57f0>  // b.any
   37ac4:	ldrb	w0, [x2, #129]
   37ac8:	tbnz	w0, #6, 37a1c <Perl_re_indentf@@Base+0x57f0>
   37acc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37ad0:	add	x3, x3, #0xc10
   37ad4:	add	x3, x3, #0x590
   37ad8:	mov	w2, #0xdf7                 	// #3575
   37adc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37ae0:	add	x1, x1, #0xfb8
   37ae4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37ae8:	add	x0, x0, #0xd58
   37aec:	bl	58e0 <__assert_fail@plt>
   37af0:	mov	w3, #0x2                   	// #2
   37af4:	mov	x2, #0x0                   	// #0
   37af8:	mov	x1, x20
   37afc:	mov	x0, x28
   37b00:	bl	5200 <Perl_sv_2pv_flags@plt>
   37b04:	b	37a20 <Perl_re_indentf@@Base+0x57f4>
   37b08:	and	w4, w0, w23
   37b0c:	cmp	w4, #0x400
   37b10:	b.ne	37bc8 <Perl_re_indentf@@Base+0x599c>  // b.any
   37b14:	cmp	w3, #0x8, lsl #12
   37b18:	b.eq	37b6c <Perl_re_indentf@@Base+0x5940>  // b.none
   37b1c:	cmp	w1, #0xf
   37b20:	b.eq	37b9c <Perl_re_indentf@@Base+0x5970>  // b.none
   37b24:	ldr	x1, [x20, #16]
   37b28:	mov	x2, x20
   37b2c:	and	w3, w0, #0xc000
   37b30:	cmp	w3, #0x8, lsl #12
   37b34:	b.eq	37c18 <Perl_re_indentf@@Base+0x59ec>  // b.none
   37b38:	and	w0, w0, #0xff
   37b3c:	cmp	w0, #0xf
   37b40:	b.ne	37b50 <Perl_re_indentf@@Base+0x5924>  // b.any
   37b44:	ldr	x0, [x2]
   37b48:	ldrb	w0, [x0, #129]
   37b4c:	tbz	w0, #6, 37c4c <Perl_re_indentf@@Base+0x5a20>
   37b50:	ldr	x0, [x2]
   37b54:	ldr	x2, [x0, #16]
   37b58:	add	x2, x1, x2
   37b5c:	mov	x1, x20
   37b60:	mov	x0, x28
   37b64:	bl	51c0 <Perl_sv_chop@plt>
   37b68:	b	37a38 <Perl_re_indentf@@Base+0x580c>
   37b6c:	sub	w3, w1, #0x9
   37b70:	cmp	w3, #0x1
   37b74:	b.hi	37b1c <Perl_re_indentf@@Base+0x58f0>  // b.pmore
   37b78:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37b7c:	add	x3, x3, #0xc10
   37b80:	add	x3, x3, #0x590
   37b84:	mov	w2, #0xdf9                 	// #3577
   37b88:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37b8c:	add	x1, x1, #0xfb8
   37b90:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37b94:	add	x0, x0, #0xd40
   37b98:	bl	58e0 <__assert_fail@plt>
   37b9c:	ldrb	w1, [x2, #129]
   37ba0:	tbnz	w1, #6, 37b24 <Perl_re_indentf@@Base+0x58f8>
   37ba4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37ba8:	add	x3, x3, #0xc10
   37bac:	add	x3, x3, #0x590
   37bb0:	mov	w2, #0xdf9                 	// #3577
   37bb4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37bb8:	add	x1, x1, #0xfb8
   37bbc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37bc0:	add	x0, x0, #0xd58
   37bc4:	bl	58e0 <__assert_fail@plt>
   37bc8:	mov	w3, #0x2                   	// #2
   37bcc:	mov	x2, #0x0                   	// #0
   37bd0:	mov	x1, x20
   37bd4:	mov	x0, x28
   37bd8:	bl	5200 <Perl_sv_2pv_flags@plt>
   37bdc:	mov	x1, x0
   37be0:	ldr	x2, [x22]
   37be4:	ldr	w0, [x2, #12]
   37be8:	and	w3, w0, #0xf
   37bec:	ldrb	w3, [x26, w3, uxtw]
   37bf0:	cbnz	w3, 37b2c <Perl_re_indentf@@Base+0x5900>
   37bf4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37bf8:	add	x3, x3, #0xc10
   37bfc:	add	x3, x3, #0x590
   37c00:	mov	w2, #0xdf9                 	// #3577
   37c04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37c08:	add	x1, x1, #0xfb8
   37c0c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37c10:	add	x0, x0, #0xe40
   37c14:	bl	58e0 <__assert_fail@plt>
   37c18:	and	w3, w0, #0xff
   37c1c:	sub	w3, w3, #0x9
   37c20:	cmp	w3, #0x1
   37c24:	b.hi	37b38 <Perl_re_indentf@@Base+0x590c>  // b.pmore
   37c28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37c2c:	add	x3, x3, #0xc10
   37c30:	add	x3, x3, #0x590
   37c34:	mov	w2, #0xdf9                 	// #3577
   37c38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37c3c:	add	x1, x1, #0xfb8
   37c40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37c44:	add	x0, x0, #0xe70
   37c48:	bl	58e0 <__assert_fail@plt>
   37c4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   37c50:	add	x3, x3, #0xc10
   37c54:	add	x3, x3, #0x590
   37c58:	mov	w2, #0xdf9                 	// #3577
   37c5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   37c60:	add	x1, x1, #0xfb8
   37c64:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   37c68:	add	x0, x0, #0xe88
   37c6c:	bl	58e0 <__assert_fail@plt>
   37c70:	ldr	x0, [x27, #72]
   37c74:	cbnz	x0, 38690 <Perl_re_indentf@@Base+0x6464>
   37c78:	ldr	x0, [sp, #176]
   37c7c:	ldr	x1, [sp, #208]
   37c80:	sub	x0, x0, x1
   37c84:	asr	x0, x0, #2
   37c88:	strh	w0, [x1, #2]
   37c8c:	ldr	x0, [sp, #240]
   37c90:	cbz	x0, 36384 <Perl_re_indentf@@Base+0x4158>
   37c94:	str	x0, [sp, #184]
   37c98:	b	37cd0 <Perl_re_indentf@@Base+0x5aa4>
   37c9c:	mov	w0, #0x51                  	// #81
   37ca0:	ldr	x1, [sp, #208]
   37ca4:	strb	w0, [x1, #1]
   37ca8:	ldr	x2, [sp, #208]
   37cac:	ldrb	w0, [sp, #160]
   37cb0:	strb	w0, [x2]
   37cb4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   37cb8:	add	x0, x0, #0xc10
   37cbc:	ldrb	w1, [x2, #1]
   37cc0:	add	x0, x0, #0x1e8
   37cc4:	ldrb	w19, [x0, w1, sxtw]
   37cc8:	add	x19, x19, #0x1
   37ccc:	add	x19, x2, x19, lsl #2
   37cd0:	ldr	x0, [sp, #208]
   37cd4:	add	x20, x0, #0x4
   37cd8:	cmp	x20, x19
   37cdc:	b.cs	37dc8 <Perl_re_indentf@@Base+0x5b9c>  // b.hs, b.nlast
   37ce0:	adrp	x23, 76000 <boot_re@@Base+0x1441c>
   37ce4:	add	x23, x23, #0xf30
   37ce8:	mov	w21, #0xe31                 	// #3633
   37cec:	adrp	x22, 77000 <boot_re@@Base+0x1541c>
   37cf0:	add	x22, x22, #0x8
   37cf4:	b	37d54 <Perl_re_indentf@@Base+0x5b28>
   37cf8:	ubfx	x2, x0, #2, #32
   37cfc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   37d00:	add	x1, x1, #0xf58
   37d04:	mov	x0, x28
   37d08:	bl	5420 <Perl_croak@plt>
   37d0c:	ldr	x2, [x25, #96]
   37d10:	sub	x2, x20, x2
   37d14:	mov	w3, #0x0                   	// #0
   37d18:	ubfx	x2, x2, #2, #32
   37d1c:	mov	w1, w21
   37d20:	mov	x0, x22
   37d24:	bl	5010 <Perl_warn_nocontext@plt>
   37d28:	ldr	x0, [x25, #96]
   37d2c:	subs	x0, x20, x0
   37d30:	b.mi	37db4 <Perl_re_indentf@@Base+0x5b88>  // b.first
   37d34:	ldr	x1, [x25, #40]
   37d38:	asr	x0, x0, #2
   37d3c:	ldr	x1, [x1, #8]
   37d40:	lsl	x0, x0, #3
   37d44:	str	wzr, [x1, x0]
   37d48:	add	x20, x20, #0x4
   37d4c:	cmp	x20, x19
   37d50:	b.cs	37dc8 <Perl_re_indentf@@Base+0x5b9c>  // b.hs, b.nlast
   37d54:	ldr	w0, [x28, #2368]
   37d58:	tbnz	w0, #20, 37d64 <Perl_re_indentf@@Base+0x5b38>
   37d5c:	ldr	x0, [sp, #312]
   37d60:	tbz	w0, #18, 37d80 <Perl_re_indentf@@Base+0x5b54>
   37d64:	ldr	x2, [x25, #96]
   37d68:	sub	x2, x20, x2
   37d6c:	mov	w3, #0x0                   	// #0
   37d70:	ubfx	x2, x2, #2, #32
   37d74:	mov	w1, w21
   37d78:	mov	x0, x23
   37d7c:	bl	5010 <Perl_warn_nocontext@plt>
   37d80:	ldr	x0, [x25, #96]
   37d84:	subs	x0, x20, x0
   37d88:	b.mi	37cf8 <Perl_re_indentf@@Base+0x5acc>  // b.first
   37d8c:	ldr	x1, [x25, #40]
   37d90:	asr	x0, x0, #2
   37d94:	ldr	x1, [x1, #8]
   37d98:	add	x0, x1, x0, lsl #3
   37d9c:	stur	wzr, [x0, #-4]
   37da0:	ldr	w0, [x28, #2368]
   37da4:	tbnz	w0, #20, 37d0c <Perl_re_indentf@@Base+0x5ae0>
   37da8:	ldr	x0, [sp, #312]
   37dac:	tbz	w0, #18, 37d28 <Perl_re_indentf@@Base+0x5afc>
   37db0:	b	37d0c <Perl_re_indentf@@Base+0x5ae0>
   37db4:	ubfx	x2, x0, #2, #32
   37db8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   37dbc:	add	x1, x1, #0x888
   37dc0:	mov	x0, x28
   37dc4:	bl	5420 <Perl_croak@plt>
   37dc8:	ldr	x23, [sp, #184]
   37dcc:	cmp	x23, x19
   37dd0:	b.ls	37ee0 <Perl_re_indentf@@Base+0x5cb4>  // b.plast
   37dd4:	mov	w20, #0x64                  	// #100
   37dd8:	adrp	x22, 76000 <boot_re@@Base+0x1441c>
   37ddc:	add	x22, x22, #0xf30
   37de0:	adrp	x21, 77000 <boot_re@@Base+0x1541c>
   37de4:	add	x21, x21, #0x8
   37de8:	b	37e48 <Perl_re_indentf@@Base+0x5c1c>
   37dec:	ubfx	x2, x0, #2, #32
   37df0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   37df4:	add	x1, x1, #0xf58
   37df8:	mov	x0, x28
   37dfc:	bl	5420 <Perl_croak@plt>
   37e00:	ldr	x2, [x25, #96]
   37e04:	sub	x2, x19, x2
   37e08:	mov	w3, #0x0                   	// #0
   37e0c:	ubfx	x2, x2, #2, #32
   37e10:	mov	w1, #0xe3a                 	// #3642
   37e14:	mov	x0, x21
   37e18:	bl	5010 <Perl_warn_nocontext@plt>
   37e1c:	ldr	x0, [x25, #96]
   37e20:	subs	x0, x19, x0
   37e24:	b.mi	37ecc <Perl_re_indentf@@Base+0x5ca0>  // b.first
   37e28:	ldr	x1, [x25, #40]
   37e2c:	asr	x0, x0, #2
   37e30:	ldr	x1, [x1, #8]
   37e34:	lsl	x0, x0, #3
   37e38:	str	wzr, [x1, x0]
   37e3c:	add	x19, x19, #0x4
   37e40:	cmp	x23, x19
   37e44:	b.ls	37ee0 <Perl_re_indentf@@Base+0x5cb4>  // b.plast
   37e48:	ldr	x1, [x25, #40]
   37e4c:	ldr	x0, [x25, #96]
   37e50:	sub	x0, x19, x0
   37e54:	asr	x0, x0, #2
   37e58:	ldr	x1, [x1, #8]
   37e5c:	lsl	x0, x0, #3
   37e60:	ldr	w0, [x1, x0]
   37e64:	add	w24, w24, w0
   37e68:	strb	w20, [x19, #1]
   37e6c:	ldr	w0, [x28, #2368]
   37e70:	tbnz	w0, #20, 37e7c <Perl_re_indentf@@Base+0x5c50>
   37e74:	ldr	x0, [sp, #312]
   37e78:	tbz	w0, #18, 37e98 <Perl_re_indentf@@Base+0x5c6c>
   37e7c:	ldr	x2, [x25, #96]
   37e80:	sub	x2, x19, x2
   37e84:	mov	w3, #0x0                   	// #0
   37e88:	ubfx	x2, x2, #2, #32
   37e8c:	mov	w1, #0xe3a                 	// #3642
   37e90:	mov	x0, x22
   37e94:	bl	5010 <Perl_warn_nocontext@plt>
   37e98:	ldr	x0, [x25, #96]
   37e9c:	subs	x0, x19, x0
   37ea0:	b.mi	37dec <Perl_re_indentf@@Base+0x5bc0>  // b.first
   37ea4:	ldr	x1, [x25, #40]
   37ea8:	asr	x0, x0, #2
   37eac:	ldr	x1, [x1, #8]
   37eb0:	add	x0, x1, x0, lsl #3
   37eb4:	stur	wzr, [x0, #-4]
   37eb8:	ldr	w0, [x28, #2368]
   37ebc:	tbnz	w0, #20, 37e00 <Perl_re_indentf@@Base+0x5bd4>
   37ec0:	ldr	x0, [sp, #312]
   37ec4:	tbz	w0, #18, 37e1c <Perl_re_indentf@@Base+0x5bf0>
   37ec8:	b	37e00 <Perl_re_indentf@@Base+0x5bd4>
   37ecc:	ubfx	x2, x0, #2, #32
   37ed0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   37ed4:	add	x1, x1, #0x888
   37ed8:	mov	x0, x28
   37edc:	bl	5420 <Perl_croak@plt>
   37ee0:	ldr	w0, [x28, #2368]
   37ee4:	tbnz	w0, #20, 37ef0 <Perl_re_indentf@@Base+0x5cc4>
   37ee8:	ldr	x0, [sp, #312]
   37eec:	tbz	w0, #18, 37f14 <Perl_re_indentf@@Base+0x5ce8>
   37ef0:	ldr	x2, [x25, #96]
   37ef4:	ldr	x0, [sp, #208]
   37ef8:	sub	x2, x0, x2
   37efc:	ldr	w3, [sp, #112]
   37f00:	ubfx	x2, x2, #2, #32
   37f04:	mov	w1, #0xe3d                 	// #3645
   37f08:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   37f0c:	add	x0, x0, #0xf30
   37f10:	bl	5010 <Perl_warn_nocontext@plt>
   37f14:	ldr	x2, [x25, #96]
   37f18:	ldr	x0, [sp, #208]
   37f1c:	subs	x2, x0, x2
   37f20:	b.mi	37fa8 <Perl_re_indentf@@Base+0x5d7c>  // b.first
   37f24:	ldr	x1, [x25, #40]
   37f28:	asr	x0, x2, #2
   37f2c:	ldr	x1, [x1, #8]
   37f30:	add	x0, x1, x0, lsl #3
   37f34:	ldr	w1, [sp, #112]
   37f38:	stur	w1, [x0, #-4]
   37f3c:	ldr	w0, [x28, #2368]
   37f40:	tbnz	w0, #20, 37f4c <Perl_re_indentf@@Base+0x5d20>
   37f44:	ldr	x0, [sp, #312]
   37f48:	tbz	w0, #18, 37f70 <Perl_re_indentf@@Base+0x5d44>
   37f4c:	ldr	x2, [x25, #96]
   37f50:	ldr	x0, [sp, #208]
   37f54:	sub	x2, x0, x2
   37f58:	mov	w3, w24
   37f5c:	ubfx	x2, x2, #2, #32
   37f60:	mov	w1, #0xe3d                 	// #3645
   37f64:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   37f68:	add	x0, x0, #0x8
   37f6c:	bl	5010 <Perl_warn_nocontext@plt>
   37f70:	ldr	x2, [x25, #96]
   37f74:	ldr	x0, [sp, #208]
   37f78:	subs	x2, x0, x2
   37f7c:	b.mi	37fbc <Perl_re_indentf@@Base+0x5d90>  // b.first
   37f80:	ldr	x1, [x25, #40]
   37f84:	asr	x0, x2, #2
   37f88:	ldr	x1, [x1, #8]
   37f8c:	lsl	x0, x0, #3
   37f90:	str	w24, [x1, x0]
   37f94:	ldr	w0, [x27, #88]
   37f98:	mov	w4, #0x1                   	// #1
   37f9c:	cbz	w0, 3802c <Perl_re_indentf@@Base+0x5e00>
   37fa0:	ldr	x5, [sp, #168]
   37fa4:	b	37fe8 <Perl_re_indentf@@Base+0x5dbc>
   37fa8:	ubfx	x2, x2, #2, #32
   37fac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   37fb0:	add	x1, x1, #0xf58
   37fb4:	mov	x0, x28
   37fb8:	bl	5420 <Perl_croak@plt>
   37fbc:	ubfx	x2, x2, #2, #32
   37fc0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   37fc4:	add	x1, x1, #0x888
   37fc8:	mov	x0, x28
   37fcc:	bl	5420 <Perl_croak@plt>
   37fd0:	strh	w7, [x6, x3]
   37fd4:	add	w0, w4, #0x1
   37fd8:	and	w4, w0, #0xffff
   37fdc:	ldr	w1, [x27, #88]
   37fe0:	cmp	w1, w0, uxth
   37fe4:	b.cc	3802c <Perl_re_indentf@@Base+0x5e00>  // b.lo, b.ul, b.last
   37fe8:	ubfiz	x3, x4, #1, #16
   37fec:	add	x3, x3, w4, uxth
   37ff0:	lsl	x3, x3, #2
   37ff4:	ldr	x6, [x27, #48]
   37ff8:	add	x0, x6, x3
   37ffc:	ldrh	w7, [x6, x3]
   38000:	cbnz	w7, 37fd4 <Perl_re_indentf@@Base+0x5da8>
   38004:	ldr	w0, [x0, #8]
   38008:	cbz	w0, 37fd0 <Perl_re_indentf@@Base+0x5da4>
   3800c:	ldr	w0, [x5, w0, uxtw #2]
   38010:	cbz	w0, 37fd0 <Perl_re_indentf@@Base+0x5da4>
   38014:	ldr	x2, [x27, #16]
   38018:	ubfiz	x1, x0, #4, #32
   3801c:	ldrh	w1, [x2, x1]
   38020:	cbz	w1, 38008 <Perl_re_indentf@@Base+0x5ddc>
   38024:	mov	w7, w1
   38028:	b	37fd0 <Perl_re_indentf@@Base+0x5da4>
   3802c:	ldr	x0, [sp, #168]
   38030:	bl	5650 <Perl_safesysfree@plt>
   38034:	ldr	w0, [x28, #2368]
   38038:	tbnz	w0, #20, 38044 <Perl_re_indentf@@Base+0x5e18>
   3803c:	ldr	x0, [sp, #312]
   38040:	tbz	w0, #2, 385ec <Perl_re_indentf@@Base+0x63c0>
   38044:	ldr	w0, [sp, #352]
   38048:	add	w0, w0, #0x1
   3804c:	str	w0, [sp, #128]
   38050:	mov	x0, x28
   38054:	bl	59b0 <Perl_sv_newmortal@plt>
   38058:	str	x0, [sp, #112]
   3805c:	ldr	x0, [sp, #120]
   38060:	cmp	x0, #0x0
   38064:	mov	w20, #0x6                   	// #6
   38068:	mov	w0, #0x4                   	// #4
   3806c:	csel	w20, w20, w0, ne  // ne = any
   38070:	str	xzr, [sp, #336]
   38074:	ldr	x0, [x28, #224]
   38078:	cbz	x0, 380e0 <Perl_re_indentf@@Base+0x5eb4>
   3807c:	mov	w2, #0x1                   	// #1
   38080:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   38084:	add	x1, x1, #0x608
   38088:	mov	x0, x28
   3808c:	bl	54f0 <Perl_get_sv@plt>
   38090:	mov	x19, x0
   38094:	cbz	x0, 380e0 <Perl_re_indentf@@Base+0x5eb4>
   38098:	ldr	w0, [x0, #12]
   3809c:	tbz	w0, #8, 3814c <Perl_re_indentf@@Base+0x5f20>
   380a0:	ldr	w0, [x19, #12]
   380a4:	and	w1, w0, #0x3fff00
   380a8:	and	w1, w1, #0xffe001ff
   380ac:	cmp	w1, #0x100
   380b0:	b.ne	381b8 <Perl_re_indentf@@Base+0x5f8c>  // b.any
   380b4:	and	w2, w0, #0xf
   380b8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   380bc:	ldr	x1, [x1, #3712]
   380c0:	ldrb	w1, [x1, w2, uxtw]
   380c4:	cbz	w1, 38160 <Perl_re_indentf@@Base+0x5f34>
   380c8:	and	w1, w0, #0xc000
   380cc:	cmp	w1, #0x8, lsl #12
   380d0:	b.eq	38184 <Perl_re_indentf@@Base+0x5f58>  // b.none
   380d4:	ldr	x0, [x19]
   380d8:	ldr	x0, [x0, #32]
   380dc:	str	x0, [sp, #336]
   380e0:	ldr	x0, [sp, #144]
   380e4:	cbz	x0, 381cc <Perl_re_indentf@@Base+0x5fa0>
   380e8:	ldr	w0, [sp, #352]
   380ec:	add	w26, w0, #0x2
   380f0:	adrp	x5, 79000 <boot_re@@Base+0x1741c>
   380f4:	add	x5, x5, #0x230
   380f8:	adrp	x4, 79000 <boot_re@@Base+0x1741c>
   380fc:	add	x4, x4, #0x238
   38100:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   38104:	add	x3, x3, #0x240
   38108:	mov	w2, w26
   3810c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   38110:	add	x1, x1, #0x248
   38114:	mov	x0, x28
   38118:	bl	5940 <Perl_re_indentf@plt>
   3811c:	ldrh	w0, [x27, #56]
   38120:	cbz	w0, 38344 <Perl_re_indentf@@Base+0x6118>
   38124:	mov	w21, #0x0                   	// #0
   38128:	mov	w24, #0x400                 	// #1024
   3812c:	movk	w24, #0x20, lsl #16
   38130:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   38134:	ldr	x23, [x23, #3888]
   38138:	adrp	x22, 77000 <boot_re@@Base+0x1541c>
   3813c:	add	x22, x22, #0xaf8
   38140:	str	x25, [sp, #136]
   38144:	ldr	x25, [sp, #144]
   38148:	b	382b0 <Perl_re_indentf@@Base+0x6084>
   3814c:	mov	x2, #0xff08                	// #65288
   38150:	mov	x1, x19
   38154:	mov	x0, x28
   38158:	bl	5310 <Perl_sv_setuv@plt>
   3815c:	b	380a0 <Perl_re_indentf@@Base+0x5e74>
   38160:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38164:	add	x3, x3, #0xc10
   38168:	add	x3, x3, #0x5e0
   3816c:	mov	w2, #0x87e                 	// #2174
   38170:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38174:	add	x1, x1, #0xfb8
   38178:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3817c:	add	x0, x0, #0xda0
   38180:	bl	58e0 <__assert_fail@plt>
   38184:	and	w0, w0, #0xff
   38188:	sub	w0, w0, #0x9
   3818c:	cmp	w0, #0x1
   38190:	b.hi	380d4 <Perl_re_indentf@@Base+0x5ea8>  // b.pmore
   38194:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38198:	add	x3, x3, #0xc10
   3819c:	add	x3, x3, #0x5e0
   381a0:	mov	w2, #0x87e                 	// #2174
   381a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   381a8:	add	x1, x1, #0xfb8
   381ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   381b0:	add	x0, x0, #0xdd0
   381b4:	bl	58e0 <__assert_fail@plt>
   381b8:	mov	w2, #0x2                   	// #2
   381bc:	mov	x1, x19
   381c0:	mov	x0, x28
   381c4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   381c8:	b	380dc <Perl_re_indentf@@Base+0x5eb0>
   381cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   381d0:	add	x3, x3, #0xc10
   381d4:	add	x3, x3, #0x5e0
   381d8:	mov	w2, #0x880                 	// #2176
   381dc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   381e0:	add	x1, x1, #0xfb8
   381e4:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   381e8:	add	x0, x0, #0x8
   381ec:	bl	58e0 <__assert_fail@plt>
   381f0:	mov	w3, #0x22                  	// #34
   381f4:	mov	x2, #0x0                   	// #0
   381f8:	mov	x0, x28
   381fc:	bl	5200 <Perl_sv_2pv_flags@plt>
   38200:	mov	x2, x0
   38204:	b	382e4 <Perl_re_indentf@@Base+0x60b8>
   38208:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3820c:	add	x3, x3, #0xc10
   38210:	add	x3, x3, #0x5e0
   38214:	mov	w2, #0x88a                 	// #2186
   38218:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3821c:	add	x1, x1, #0xfb8
   38220:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38224:	add	x0, x0, #0xe40
   38228:	bl	58e0 <__assert_fail@plt>
   3822c:	and	w3, w0, #0xff
   38230:	sub	w3, w3, #0x9
   38234:	cmp	w3, #0x1
   38238:	b.hi	38304 <Perl_re_indentf@@Base+0x60d8>  // b.pmore
   3823c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38240:	add	x3, x3, #0xc10
   38244:	add	x3, x3, #0x5e0
   38248:	mov	w2, #0x88a                 	// #2186
   3824c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38250:	add	x1, x1, #0xfb8
   38254:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38258:	add	x0, x0, #0xe70
   3825c:	bl	58e0 <__assert_fail@plt>
   38260:	lsr	w0, w0, #21
   38264:	and	w7, w0, #0x100
   38268:	ldr	x0, [x1]
   3826c:	orr	w7, w7, #0x800
   38270:	ldr	x6, [x28, #1456]
   38274:	ldr	x5, [x28, #1448]
   38278:	sxtw	x4, w20
   3827c:	ldr	x3, [x0, #16]
   38280:	ldr	x1, [sp, #112]
   38284:	mov	x0, x28
   38288:	bl	53f0 <Perl_pv_pretty@plt>
   3828c:	mov	x3, x0
   38290:	mov	w2, w20
   38294:	mov	x1, x22
   38298:	mov	x0, x28
   3829c:	bl	50e0 <Perl_re_printf@plt>
   382a0:	add	w21, w21, #0x1
   382a4:	ldrh	w0, [x27, #56]
   382a8:	cmp	w21, w0
   382ac:	b.cs	38340 <Perl_re_indentf@@Base+0x6114>  // b.hs, b.nlast
   382b0:	mov	w3, #0x0                   	// #0
   382b4:	mov	w2, w21
   382b8:	mov	x1, x25
   382bc:	mov	x0, x28
   382c0:	bl	56f0 <Perl_av_fetch@plt>
   382c4:	mov	x19, x0
   382c8:	cbz	x0, 382a0 <Perl_re_indentf@@Base+0x6074>
   382cc:	ldr	x1, [x0]
   382d0:	ldr	w0, [x1, #12]
   382d4:	and	w0, w0, w24
   382d8:	cmp	w0, #0x400
   382dc:	b.ne	381f0 <Perl_re_indentf@@Base+0x5fc4>  // b.any
   382e0:	ldr	x2, [x1, #16]
   382e4:	ldr	x1, [x19]
   382e8:	ldr	w0, [x1, #12]
   382ec:	and	w3, w0, #0xf
   382f0:	ldrb	w3, [x23, w3, uxtw]
   382f4:	cbz	w3, 38208 <Perl_re_indentf@@Base+0x5fdc>
   382f8:	and	w3, w0, #0xc000
   382fc:	cmp	w3, #0x8, lsl #12
   38300:	b.eq	3822c <Perl_re_indentf@@Base+0x6000>  // b.none
   38304:	and	w3, w0, #0xff
   38308:	cmp	w3, #0xf
   3830c:	b.ne	38260 <Perl_re_indentf@@Base+0x6034>  // b.any
   38310:	ldr	x3, [x1]
   38314:	ldrb	w3, [x3, #129]
   38318:	tbnz	w3, #6, 38260 <Perl_re_indentf@@Base+0x6034>
   3831c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38320:	add	x3, x3, #0xc10
   38324:	add	x3, x3, #0x5e0
   38328:	mov	w2, #0x88a                 	// #2186
   3832c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38330:	add	x1, x1, #0xfb8
   38334:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38338:	add	x0, x0, #0xe88
   3833c:	bl	58e0 <__assert_fail@plt>
   38340:	ldr	x25, [sp, #136]
   38344:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   38348:	add	x1, x1, #0x8d8
   3834c:	mov	x0, x28
   38350:	bl	50e0 <Perl_re_printf@plt>
   38354:	mov	w2, w26
   38358:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3835c:	add	x1, x1, #0x260
   38360:	mov	x0, x28
   38364:	bl	5940 <Perl_re_indentf@plt>
   38368:	ldrh	w0, [x27, #56]
   3836c:	cbz	w0, 383a8 <Perl_re_indentf@@Base+0x617c>
   38370:	mov	w22, #0x0                   	// #0
   38374:	adrp	x21, 79000 <boot_re@@Base+0x1741c>
   38378:	add	x21, x21, #0xf0
   3837c:	adrp	x19, 79000 <boot_re@@Base+0x1741c>
   38380:	add	x19, x19, #0x100
   38384:	mov	x3, x21
   38388:	mov	w2, w20
   3838c:	mov	x1, x19
   38390:	mov	x0, x28
   38394:	bl	50e0 <Perl_re_printf@plt>
   38398:	add	w22, w22, #0x1
   3839c:	ldrh	w0, [x27, #56]
   383a0:	cmp	w22, w0
   383a4:	b.cc	38384 <Perl_re_indentf@@Base+0x6158>  // b.lo, b.ul, b.last
   383a8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   383ac:	add	x1, x1, #0x8d8
   383b0:	mov	x0, x28
   383b4:	bl	50e0 <Perl_re_printf@plt>
   383b8:	ldr	w0, [x27, #84]
   383bc:	cmp	w0, #0x1
   383c0:	b.ls	38574 <Perl_re_indentf@@Base+0x6348>  // b.plast
   383c4:	mov	w21, #0x1                   	// #1
   383c8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   383cc:	add	x0, x0, #0x280
   383d0:	str	x0, [sp, #112]
   383d4:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   383d8:	add	x0, x0, #0x298
   383dc:	str	x0, [sp, #136]
   383e0:	adrp	x23, 79000 <boot_re@@Base+0x1741c>
   383e4:	add	x23, x23, #0x2a8
   383e8:	b	38438 <Perl_re_indentf@@Base+0x620c>
   383ec:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   383f0:	add	x2, x2, #0x20
   383f4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   383f8:	add	x1, x1, #0x290
   383fc:	mov	x0, x28
   38400:	bl	50e0 <Perl_re_printf@plt>
   38404:	mov	w2, w19
   38408:	ldr	x1, [sp, #136]
   3840c:	mov	x0, x28
   38410:	bl	50e0 <Perl_re_printf@plt>
   38414:	cbnz	w19, 3847c <Perl_re_indentf@@Base+0x6250>
   38418:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3841c:	add	x1, x1, #0x8d8
   38420:	mov	x0, x28
   38424:	bl	50e0 <Perl_re_printf@plt>
   38428:	add	w21, w21, #0x1
   3842c:	ldr	w0, [x27, #84]
   38430:	cmp	w21, w0
   38434:	b.cs	38574 <Perl_re_indentf@@Base+0x6348>  // b.hs, b.nlast
   38438:	ubfiz	x22, x21, #4, #32
   3843c:	ldr	x0, [x27, #16]
   38440:	add	x0, x0, x22
   38444:	ldr	w19, [x0, #8]
   38448:	mov	w3, w21
   3844c:	mov	w2, w26
   38450:	ldr	x1, [sp, #112]
   38454:	mov	x0, x28
   38458:	bl	5940 <Perl_re_indentf@plt>
   3845c:	ldr	x0, [x27, #16]
   38460:	ldrh	w2, [x0, x22]
   38464:	cbz	w2, 383ec <Perl_re_indentf@@Base+0x61c0>
   38468:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3846c:	add	x1, x1, #0x288
   38470:	mov	x0, x28
   38474:	bl	50e0 <Perl_re_printf@plt>
   38478:	b	38404 <Perl_re_indentf@@Base+0x61d8>
   3847c:	ldrh	w1, [x27, #56]
   38480:	mov	w2, #0x0                   	// #0
   38484:	sub	w4, w19, w1
   38488:	b	38490 <Perl_re_indentf@@Base+0x6264>
   3848c:	add	w2, w2, #0x1
   38490:	add	w0, w19, w2
   38494:	cmp	w0, w1
   38498:	b.cc	3848c <Perl_re_indentf@@Base+0x6260>  // b.lo, b.ul, b.last
   3849c:	add	w0, w4, w2
   384a0:	ldr	w3, [x27, #4]
   384a4:	cmp	w0, w3
   384a8:	b.cs	384c0 <Perl_re_indentf@@Base+0x6294>  // b.hs, b.nlast
   384ac:	ldr	x3, [x27, #24]
   384b0:	add	x0, x3, w0, uxtw #3
   384b4:	ldr	w0, [x0, #4]
   384b8:	cmp	w0, w21
   384bc:	b.ne	3848c <Perl_re_indentf@@Base+0x6260>  // b.any
   384c0:	mov	w2, w2
   384c4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   384c8:	add	x1, x1, #0x2a0
   384cc:	mov	x0, x28
   384d0:	bl	50e0 <Perl_re_printf@plt>
   384d4:	ldrh	w0, [x27, #56]
   384d8:	cbz	w0, 38560 <Perl_re_indentf@@Base+0x6334>
   384dc:	mov	w22, #0x0                   	// #0
   384e0:	adrp	x24, 77000 <boot_re@@Base+0x1541c>
   384e4:	add	x24, x24, #0xaf8
   384e8:	b	38514 <Perl_re_indentf@@Base+0x62e8>
   384ec:	mov	x3, x23
   384f0:	mov	w2, w20
   384f4:	mov	x1, x24
   384f8:	mov	x0, x28
   384fc:	bl	50e0 <Perl_re_printf@plt>
   38500:	add	w22, w22, #0x1
   38504:	ldrh	w0, [x27, #56]
   38508:	add	w19, w19, #0x1
   3850c:	cmp	w0, w22
   38510:	b.ls	38560 <Perl_re_indentf@@Base+0x6334>  // b.plast
   38514:	cmp	w19, w0
   38518:	b.cc	384ec <Perl_re_indentf@@Base+0x62c0>  // b.lo, b.ul, b.last
   3851c:	sub	w0, w19, w0
   38520:	ldr	w1, [x27, #4]
   38524:	cmp	w0, w1
   38528:	b.cs	384ec <Perl_re_indentf@@Base+0x62c0>  // b.hs, b.nlast
   3852c:	ubfiz	x0, x0, #3, #32
   38530:	ldr	x1, [x27, #24]
   38534:	add	x2, x1, x0
   38538:	ldr	w2, [x2, #4]
   3853c:	cmp	w2, w21
   38540:	b.ne	384ec <Perl_re_indentf@@Base+0x62c0>  // b.any
   38544:	ldr	w3, [x1, x0]
   38548:	mov	w2, w20
   3854c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38550:	add	x1, x0, #0x110
   38554:	mov	x0, x28
   38558:	bl	50e0 <Perl_re_printf@plt>
   3855c:	b	38500 <Perl_re_indentf@@Base+0x62d4>
   38560:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   38564:	add	x1, x1, #0x538
   38568:	mov	x0, x28
   3856c:	bl	50e0 <Perl_re_printf@plt>
   38570:	b	38418 <Perl_re_indentf@@Base+0x61ec>
   38574:	ldr	w2, [sp, #128]
   38578:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3857c:	add	x1, x1, #0x2b0
   38580:	mov	x0, x28
   38584:	bl	5940 <Perl_re_indentf@plt>
   38588:	ldr	w0, [x27, #88]
   3858c:	cbz	w0, 385dc <Perl_re_indentf@@Base+0x63b0>
   38590:	mov	w19, #0x1                   	// #1
   38594:	adrp	x20, 79000 <boot_re@@Base+0x1741c>
   38598:	add	x20, x20, #0x2c8
   3859c:	ubfiz	x0, x19, #1, #16
   385a0:	add	x0, x0, w19, uxth
   385a4:	lsl	x0, x0, #2
   385a8:	ldr	x1, [x27, #48]
   385ac:	add	x2, x1, x0
   385b0:	ldr	w4, [x2, #4]
   385b4:	ldrh	w3, [x1, x0]
   385b8:	mov	w2, w19
   385bc:	mov	x1, x20
   385c0:	mov	x0, x28
   385c4:	bl	50e0 <Perl_re_printf@plt>
   385c8:	add	w0, w19, #0x1
   385cc:	and	w19, w0, #0xffff
   385d0:	ldr	w1, [x27, #88]
   385d4:	cmp	w1, w0, uxth
   385d8:	b.cs	3859c <Perl_re_indentf@@Base+0x6370>  // b.hs, b.nlast
   385dc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   385e0:	add	x1, x1, #0x8d8
   385e4:	mov	x0, x28
   385e8:	bl	50e0 <Perl_re_printf@plt>
   385ec:	ldr	x0, [x25, #40]
   385f0:	ldr	x1, [x0, #24]
   385f4:	ldr	w2, [sp, #288]
   385f8:	add	w0, w2, #0x1
   385fc:	add	x0, x0, #0x2
   38600:	ldr	x3, [sp, #120]
   38604:	str	x3, [x1, x0, lsl #3]
   38608:	ldr	x0, [x25, #40]
   3860c:	ldr	x1, [x0, #24]
   38610:	add	w0, w2, #0x2
   38614:	add	x0, x0, #0x2
   38618:	ldr	x3, [sp, #248]
   3861c:	str	x3, [x1, x0, lsl #3]
   38620:	ldr	x0, [x25, #40]
   38624:	ldr	x1, [x0, #24]
   38628:	add	w0, w2, #0x3
   3862c:	add	x0, x0, #0x2
   38630:	ldr	x2, [sp, #144]
   38634:	str	x2, [x1, x0, lsl #3]
   38638:	ldr	x1, [x27, #40]
   3863c:	mov	w0, #0x2                   	// #2
   38640:	cbz	x1, 3867c <Perl_re_indentf@@Base+0x6450>
   38644:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   38648:	ldr	x1, [x1, #3920]
   3864c:	ldr	x2, [sp, #344]
   38650:	ldr	x1, [x1]
   38654:	eor	x1, x2, x1
   38658:	cbnz	x1, 3894c <Perl_re_indentf@@Base+0x6720>
   3865c:	ldp	x19, x20, [sp, #32]
   38660:	ldp	x21, x22, [sp, #48]
   38664:	ldp	x23, x24, [sp, #64]
   38668:	ldp	x25, x26, [sp, #80]
   3866c:	ldp	x27, x28, [sp, #96]
   38670:	ldp	x29, x30, [sp, #16]
   38674:	add	sp, sp, #0x160
   38678:	ret
   3867c:	ldr	w0, [x27, #60]
   38680:	cmp	w0, #0x1
   38684:	mov	w0, #0x4                   	// #4
   38688:	csinc	w0, w0, wzr, hi  // hi = pmore
   3868c:	b	38644 <Perl_re_indentf@@Base+0x6418>
   38690:	str	x19, [sp, #208]
   38694:	ldr	x0, [sp, #240]
   38698:	cmp	x0, #0x0
   3869c:	ldr	x1, [sp, #184]
   386a0:	csel	x0, x1, x0, eq  // eq = none
   386a4:	str	x0, [sp, #184]
   386a8:	ldr	x2, [sp, #176]
   386ac:	ldr	x1, [sp, #208]
   386b0:	sub	x0, x2, x1
   386b4:	asr	x0, x0, #2
   386b8:	strh	w0, [x1, #2]
   386bc:	mov	x0, x1
   386c0:	ldr	w1, [sp, #288]
   386c4:	str	w1, [x0, #4]
   386c8:	ldr	x1, [x27, #40]
   386cc:	cbz	x1, 386e0 <Perl_re_indentf@@Base+0x64b4>
   386d0:	ldr	x2, [sp, #272]
   386d4:	sub	x0, x2, x0
   386d8:	asr	x0, x0, #2
   386dc:	strh	w0, [x1]
   386e0:	ldr	w0, [x27, #60]
   386e4:	ldr	x1, [x27, #16]
   386e8:	lsl	x0, x0, #4
   386ec:	ldrh	w0, [x1, x0]
   386f0:	cbnz	w0, 37c9c <Perl_re_indentf@@Base+0x5a70>
   386f4:	ldr	x0, [x27, #32]
   386f8:	cbz	x0, 37c9c <Perl_re_indentf@@Base+0x5a70>
   386fc:	ldr	x1, [sp, #184]
   38700:	ldr	x4, [sp, #208]
   38704:	sub	x1, x1, x4
   38708:	cmp	x1, #0x27
   3870c:	b.le	37c9c <Perl_re_indentf@@Base+0x5a70>
   38710:	mov	w1, #0x52                  	// #82
   38714:	strb	w1, [x4, #1]
   38718:	ldp	x2, x3, [x0]
   3871c:	stp	x2, x3, [x4, #8]
   38720:	ldp	x2, x3, [x0, #16]
   38724:	stp	x2, x3, [x4, #24]
   38728:	bl	5550 <free@plt>
   3872c:	str	xzr, [x27, #32]
   38730:	b	37ca8 <Perl_re_indentf@@Base+0x5a7c>
   38734:	str	wzr, [x27, #80]
   38738:	b	36364 <Perl_re_indentf@@Base+0x4138>
   3873c:	mov	x1, #0x8                   	// #8
   38740:	ldr	x0, [sp, #112]
   38744:	bl	5280 <calloc@plt>
   38748:	str	x0, [x27, #24]
   3874c:	mov	w0, #0x0                   	// #0
   38750:	b	36264 <Perl_re_indentf@@Base+0x4038>
   38754:	ldr	w0, [sp, #352]
   38758:	add	w2, w0, #0x1
   3875c:	str	xzr, [sp, #120]
   38760:	adrp	x3, 77000 <boot_re@@Base+0x1541c>
   38764:	add	x3, x3, #0xc58
   38768:	b	353c4 <Perl_re_indentf@@Base+0x3198>
   3876c:	ldr	w0, [x28, #2368]
   38770:	tbnz	w0, #20, 38754 <Perl_re_indentf@@Base+0x6528>
   38774:	ldr	x0, [sp, #312]
   38778:	tbz	w0, #2, 387e4 <Perl_re_indentf@@Base+0x65b8>
   3877c:	ldr	w0, [sp, #352]
   38780:	add	w2, w0, #0x1
   38784:	str	xzr, [sp, #120]
   38788:	adrp	x3, 77000 <boot_re@@Base+0x1541c>
   3878c:	add	x3, x3, #0xc58
   38790:	b	353c4 <Perl_re_indentf@@Base+0x3198>
   38794:	mov	w21, #0x6                   	// #6
   38798:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   3879c:	mov	w21, #0x6                   	// #6
   387a0:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   387a4:	mov	w21, #0x4                   	// #4
   387a8:	b	33420 <Perl_re_indentf@@Base+0x11f4>
   387ac:	cmp	w14, #0x1
   387b0:	b.eq	36e7c <Perl_re_indentf@@Base+0x4c50>  // b.none
   387b4:	sub	w7, w7, #0x1
   387b8:	ldr	x4, [x27, #24]
   387bc:	ldr	w0, [x4, x2]
   387c0:	b	36e68 <Perl_re_indentf@@Base+0x4c3c>
   387c4:	ldr	x0, [x27, #24]
   387c8:	ldr	w14, [x0, #4]
   387cc:	str	wzr, [x0, #4]
   387d0:	mov	w11, w6
   387d4:	cbnz	w14, 36f34 <Perl_re_indentf@@Base+0x4d08>
   387d8:	add	w0, w6, #0x1
   387dc:	add	x10, x10, #0x10
   387e0:	b	36f04 <Perl_re_indentf@@Base+0x4cd8>
   387e4:	str	xzr, [sp, #120]
   387e8:	b	353ec <Perl_re_indentf@@Base+0x31c0>
   387ec:	ldr	x0, [sp, #128]
   387f0:	add	x0, x0, #0x1
   387f4:	str	x0, [sp, #128]
   387f8:	mov	x20, #0x1                   	// #1
   387fc:	ldr	x0, [sp, #304]
   38800:	lsl	x0, x0, #1
   38804:	ldr	x2, [x27, #8]
   38808:	ldrh	w1, [x2, x0]
   3880c:	cbnz	w1, 34b6c <Perl_re_indentf@@Base+0x2940>
   38810:	ldrh	w1, [x27, #56]
   38814:	add	w1, w1, #0x1
   38818:	and	w1, w1, #0xffff
   3881c:	strh	w1, [x27, #56]
   38820:	strh	w1, [x2, x0]
   38824:	ldr	w0, [x25, #192]
   38828:	cbz	w0, 34b44 <Perl_re_indentf@@Base+0x2918>
   3882c:	mov	x1, #0xd                   	// #13
   38830:	mov	x0, x28
   38834:	bl	5020 <Perl_newSV@plt>
   38838:	mov	x22, x0
   3883c:	ldr	w0, [x0, #12]
   38840:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   38844:	ldr	x1, [x1, #3888]
   38848:	and	w2, w0, #0xf
   3884c:	ldrb	w1, [x1, w2, uxtw]
   38850:	cbz	w1, 34970 <Perl_re_indentf@@Base+0x2744>
   38854:	and	w1, w0, #0xc000
   38858:	cmp	w1, #0x8, lsl #12
   3885c:	b.eq	34994 <Perl_re_indentf@@Base+0x2768>  // b.none
   38860:	and	w0, w0, #0xff
   38864:	cmp	w0, #0xf
   38868:	b.ne	38878 <Perl_re_indentf@@Base+0x664c>  // b.any
   3886c:	ldr	x0, [x22]
   38870:	ldrb	w0, [x0, #129]
   38874:	tbz	w0, #6, 349c8 <Perl_re_indentf@@Base+0x279c>
   38878:	ldr	x23, [x22, #16]
   3887c:	mov	x4, #0x0                   	// #0
   38880:	mov	x3, #0x0                   	// #0
   38884:	ldr	x2, [sp, #304]
   38888:	mov	x1, x23
   3888c:	mov	x0, x28
   38890:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   38894:	ldr	w1, [x22, #12]
   38898:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3889c:	ldr	x2, [x2, #3888]
   388a0:	and	w3, w1, #0xf
   388a4:	ldrb	w2, [x2, w3, uxtw]
   388a8:	cbz	w2, 349ec <Perl_re_indentf@@Base+0x27c0>
   388ac:	and	w2, w1, #0xc000
   388b0:	cmp	w2, #0x8, lsl #12
   388b4:	b.eq	34a10 <Perl_re_indentf@@Base+0x27e4>  // b.none
   388b8:	and	w1, w1, #0xff
   388bc:	cmp	w1, #0xf
   388c0:	b.eq	34a44 <Perl_re_indentf@@Base+0x2818>  // b.none
   388c4:	ldr	x1, [x22]
   388c8:	sub	x23, x0, x23
   388cc:	str	x23, [x1, #16]
   388d0:	ldr	w0, [x22, #12]
   388d4:	tbz	w0, #11, 3890c <Perl_re_indentf@@Base+0x66e0>
   388d8:	and	w2, w0, #0xf
   388dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   388e0:	ldr	x1, [x1, #3840]
   388e4:	ldrb	w1, [x1, w2, uxtw]
   388e8:	cbz	w1, 34a74 <Perl_re_indentf@@Base+0x2848>
   388ec:	and	w1, w0, #0xc000
   388f0:	cmp	w1, #0x8, lsl #12
   388f4:	b.eq	34a98 <Perl_re_indentf@@Base+0x286c>  // b.none
   388f8:	and	w1, w0, #0xff
   388fc:	cmp	w1, #0xf
   38900:	b.eq	34acc <Perl_re_indentf@@Base+0x28a0>  // b.none
   38904:	ldr	x1, [x22, #16]
   38908:	cbnz	x1, 34afc <Perl_re_indentf@@Base+0x28d0>
   3890c:	and	w1, w0, #0xc000
   38910:	cmp	w1, #0x8, lsl #12
   38914:	b.ne	38928 <Perl_re_indentf@@Base+0x66fc>  // b.any
   38918:	and	w1, w0, #0xff
   3891c:	sub	w1, w1, #0x9
   38920:	cmp	w1, #0x1
   38924:	b.ls	34b20 <Perl_re_indentf@@Base+0x28f4>  // b.plast
   38928:	mov	w1, #0x4400                	// #17408
   3892c:	movk	w1, #0x2000, lsl #16
   38930:	orr	w0, w0, w1
   38934:	str	w0, [x22, #12]
   38938:	mov	x2, x22
   3893c:	ldr	x1, [sp, #144]
   38940:	mov	x0, x28
   38944:	bl	5430 <Perl_av_push@plt>
   38948:	b	34b6c <Perl_re_indentf@@Base+0x2940>
   3894c:	bl	5300 <__stack_chk_fail@plt>

0000000000038950 <my_reg_named_buff_fetch@@Base>:
   38950:	sub	sp, sp, #0x80
   38954:	stp	x29, x30, [sp, #16]
   38958:	add	x29, sp, #0x10
   3895c:	stp	x19, x20, [sp, #32]
   38960:	stp	x23, x24, [sp, #64]
   38964:	stp	x27, x28, [sp, #96]
   38968:	mov	x24, x0
   3896c:	mov	x27, x1
   38970:	mov	w19, w3
   38974:	ldr	x23, [x1]
   38978:	ldr	w0, [x1, #12]
   3897c:	and	w1, w0, #0xff
   38980:	cmp	w1, #0x8
   38984:	b.eq	389b0 <my_reg_named_buff_fetch@@Base+0x60>  // b.none
   38988:	mov	w3, #0x80ff                	// #33023
   3898c:	movk	w3, #0x100, lsl #16
   38990:	and	w0, w0, w3
   38994:	mov	w3, #0xa                   	// #10
   38998:	movk	w3, #0x100, lsl #16
   3899c:	cmp	w0, w3
   389a0:	b.ne	38a74 <my_reg_named_buff_fetch@@Base+0x124>  // b.any
   389a4:	cmp	w1, #0xa
   389a8:	b.ne	389b0 <my_reg_named_buff_fetch@@Base+0x60>  // b.any
   389ac:	ldr	x23, [x23, #24]
   389b0:	cbz	x23, 38aa0 <my_reg_named_buff_fetch@@Base+0x150>
   389b4:	cbz	x2, 38acc <my_reg_named_buff_fetch@@Base+0x17c>
   389b8:	stp	x21, x22, [sp, #48]
   389bc:	ldr	x22, [x23, #48]
   389c0:	cbz	x22, 38d2c <my_reg_named_buff_fetch@@Base+0x3dc>
   389c4:	str	wzr, [sp]
   389c8:	mov	x7, #0x0                   	// #0
   389cc:	mov	w6, #0x0                   	// #0
   389d0:	mov	w5, #0x0                   	// #0
   389d4:	mov	x4, #0x0                   	// #0
   389d8:	mov	x3, #0x0                   	// #0
   389dc:	mov	x1, x22
   389e0:	mov	x0, x24
   389e4:	bl	5600 <Perl_hv_common@plt>
   389e8:	mov	x22, x0
   389ec:	cbz	x0, 38d2c <my_reg_named_buff_fetch@@Base+0x3dc>
   389f0:	stp	x25, x26, [sp, #80]
   389f4:	ldr	x21, [x0, #16]
   389f8:	ldr	w0, [x21, #12]
   389fc:	and	w2, w0, #0xf
   38a00:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   38a04:	ldr	x1, [x1, #3888]
   38a08:	ldrb	w1, [x1, w2, uxtw]
   38a0c:	cbz	w1, 38af8 <my_reg_named_buff_fetch@@Base+0x1a8>
   38a10:	and	w1, w0, #0xc000
   38a14:	cmp	w1, #0x8, lsl #12
   38a18:	b.eq	38b1c <my_reg_named_buff_fetch@@Base+0x1cc>  // b.none
   38a1c:	and	w0, w0, #0xff
   38a20:	cmp	w0, #0xf
   38a24:	b.eq	38b50 <my_reg_named_buff_fetch@@Base+0x200>  // b.none
   38a28:	ldr	x25, [x21, #16]
   38a2c:	mov	x22, #0x0                   	// #0
   38a30:	tbz	w19, #9, 38a44 <my_reg_named_buff_fetch@@Base+0xf4>
   38a34:	mov	w1, #0xb                   	// #11
   38a38:	mov	x0, x24
   38a3c:	bl	57e0 <Perl_newSV_type@plt>
   38a40:	mov	x22, x0
   38a44:	ldr	w0, [x21, #12]
   38a48:	and	w2, w0, #0xf
   38a4c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   38a50:	ldr	x1, [x1, #3712]
   38a54:	ldrb	w1, [x1, w2, uxtw]
   38a58:	mov	x19, #0x0                   	// #0
   38a5c:	cbz	w1, 38cbc <my_reg_named_buff_fetch@@Base+0x36c>
   38a60:	add	x28, x24, #0x150
   38a64:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   38a68:	add	x1, x1, #0x20
   38a6c:	str	x1, [sp, #120]
   38a70:	b	38be8 <my_reg_named_buff_fetch@@Base+0x298>
   38a74:	stp	x21, x22, [sp, #48]
   38a78:	stp	x25, x26, [sp, #80]
   38a7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38a80:	add	x3, x3, #0xc10
   38a84:	add	x3, x3, #0x550
   38a88:	mov	w2, #0xb6                  	// #182
   38a8c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   38a90:	add	x1, x1, #0xc80
   38a94:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   38a98:	add	x0, x0, #0x128
   38a9c:	bl	58e0 <__assert_fail@plt>
   38aa0:	stp	x21, x22, [sp, #48]
   38aa4:	stp	x25, x26, [sp, #80]
   38aa8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38aac:	add	x3, x3, #0xc10
   38ab0:	add	x3, x3, #0x5f0
   38ab4:	mov	w2, #0x20d9                	// #8409
   38ab8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38abc:	add	x1, x1, #0xfb8
   38ac0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38ac4:	add	x0, x0, #0x2d8
   38ac8:	bl	58e0 <__assert_fail@plt>
   38acc:	stp	x21, x22, [sp, #48]
   38ad0:	stp	x25, x26, [sp, #80]
   38ad4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38ad8:	add	x3, x3, #0xc10
   38adc:	add	x3, x3, #0x5f0
   38ae0:	mov	w2, #0x20d9                	// #8409
   38ae4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38ae8:	add	x1, x1, #0xfb8
   38aec:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38af0:	add	x0, x0, #0x2e0
   38af4:	bl	58e0 <__assert_fail@plt>
   38af8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38afc:	add	x3, x3, #0xc10
   38b00:	add	x3, x3, #0x5f0
   38b04:	mov	w2, #0x20e0                	// #8416
   38b08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38b0c:	add	x1, x1, #0xfb8
   38b10:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38b14:	add	x0, x0, #0xd10
   38b18:	bl	58e0 <__assert_fail@plt>
   38b1c:	and	w1, w0, #0xff
   38b20:	sub	w1, w1, #0x9
   38b24:	cmp	w1, #0x1
   38b28:	b.hi	38a1c <my_reg_named_buff_fetch@@Base+0xcc>  // b.pmore
   38b2c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38b30:	add	x3, x3, #0xc10
   38b34:	add	x3, x3, #0x5f0
   38b38:	mov	w2, #0x20e0                	// #8416
   38b3c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38b40:	add	x1, x1, #0xfb8
   38b44:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38b48:	add	x0, x0, #0xd40
   38b4c:	bl	58e0 <__assert_fail@plt>
   38b50:	ldr	x0, [x21]
   38b54:	ldrb	w0, [x0, #129]
   38b58:	tbnz	w0, #6, 38a28 <my_reg_named_buff_fetch@@Base+0xd8>
   38b5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38b60:	add	x3, x3, #0xc10
   38b64:	add	x3, x3, #0x5f0
   38b68:	mov	w2, #0x20e0                	// #8416
   38b6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38b70:	add	x1, x1, #0xfb8
   38b74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38b78:	add	x0, x0, #0xd58
   38b7c:	bl	58e0 <__assert_fail@plt>
   38b80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38b84:	add	x3, x3, #0xc10
   38b88:	add	x3, x3, #0x550
   38b8c:	mov	w2, #0xb6                  	// #182
   38b90:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   38b94:	add	x1, x1, #0xc80
   38b98:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   38b9c:	add	x0, x0, #0x128
   38ba0:	bl	58e0 <__assert_fail@plt>
   38ba4:	cbz	x22, 38bcc <my_reg_named_buff_fetch@@Base+0x27c>
   38ba8:	mov	w2, #0x12                  	// #18
   38bac:	mov	x1, x28
   38bb0:	mov	x0, x24
   38bb4:	bl	5980 <Perl_newSVsv_flags@plt>
   38bb8:	mov	x20, x0
   38bbc:	mov	x2, x20
   38bc0:	mov	x1, x22
   38bc4:	mov	x0, x24
   38bc8:	bl	5430 <Perl_av_push@plt>
   38bcc:	add	x19, x19, #0x1
   38bd0:	ldr	w0, [x21, #12]
   38bd4:	and	w2, w0, #0xf
   38bd8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   38bdc:	ldr	x1, [x1, #3712]
   38be0:	ldrb	w1, [x1, w2, uxtw]
   38be4:	cbz	w1, 38cbc <my_reg_named_buff_fetch@@Base+0x36c>
   38be8:	and	w1, w0, #0xc000
   38bec:	cmp	w1, #0x8, lsl #12
   38bf0:	b.eq	38ce0 <my_reg_named_buff_fetch@@Base+0x390>  // b.none
   38bf4:	ldr	x0, [x21]
   38bf8:	ldr	x0, [x0, #32]
   38bfc:	cmp	x0, x19
   38c00:	b.le	38d14 <my_reg_named_buff_fetch@@Base+0x3c4>
   38c04:	mov	x26, x19
   38c08:	ldr	w0, [x25, x19, lsl #2]
   38c0c:	ldr	w1, [x23, #96]
   38c10:	cmp	w1, w0
   38c14:	b.lt	38ba4 <my_reg_named_buff_fetch@@Base+0x254>  // b.tstop
   38c18:	sbfiz	x1, x0, #1, #32
   38c1c:	add	x0, x1, w0, sxtw
   38c20:	ldr	x1, [x23, #120]
   38c24:	add	x2, x1, x0, lsl #3
   38c28:	ldr	x0, [x1, x0, lsl #3]
   38c2c:	cmn	x0, #0x1
   38c30:	b.eq	38ba4 <my_reg_named_buff_fetch@@Base+0x254>  // b.none
   38c34:	ldr	x0, [x2, #8]
   38c38:	cmn	x0, #0x1
   38c3c:	b.eq	38ba4 <my_reg_named_buff_fetch@@Base+0x254>  // b.none
   38c40:	mov	x2, #0x0                   	// #0
   38c44:	ldr	x1, [sp, #120]
   38c48:	mov	x0, x24
   38c4c:	bl	59a0 <Perl_newSVpvn@plt>
   38c50:	mov	x20, x0
   38c54:	ldr	x1, [x27]
   38c58:	ldr	w0, [x27, #12]
   38c5c:	and	w2, w0, #0xff
   38c60:	cmp	w2, #0x8
   38c64:	b.eq	38c90 <my_reg_named_buff_fetch@@Base+0x340>  // b.none
   38c68:	mov	w3, #0x80ff                	// #33023
   38c6c:	movk	w3, #0x100, lsl #16
   38c70:	and	w0, w0, w3
   38c74:	mov	w3, #0xa                   	// #10
   38c78:	movk	w3, #0x100, lsl #16
   38c7c:	cmp	w0, w3
   38c80:	b.ne	38b80 <my_reg_named_buff_fetch@@Base+0x230>  // b.any
   38c84:	cmp	w2, #0xa
   38c88:	b.ne	38c90 <my_reg_named_buff_fetch@@Base+0x340>  // b.any
   38c8c:	ldr	x1, [x1, #24]
   38c90:	ldr	x0, [x1, #32]
   38c94:	ldr	x4, [x0, #40]
   38c98:	mov	x3, x20
   38c9c:	ldr	w2, [x25, x26, lsl #2]
   38ca0:	mov	x1, x27
   38ca4:	mov	x0, x24
   38ca8:	blr	x4
   38cac:	cbnz	x22, 38bbc <my_reg_named_buff_fetch@@Base+0x26c>
   38cb0:	mov	x22, x20
   38cb4:	ldp	x25, x26, [sp, #80]
   38cb8:	b	38d2c <my_reg_named_buff_fetch@@Base+0x3dc>
   38cbc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38cc0:	add	x3, x3, #0xc10
   38cc4:	add	x3, x3, #0x5f0
   38cc8:	mov	w2, #0x20e2                	// #8418
   38ccc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38cd0:	add	x1, x1, #0xfb8
   38cd4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38cd8:	add	x0, x0, #0xda0
   38cdc:	bl	58e0 <__assert_fail@plt>
   38ce0:	and	w0, w0, #0xff
   38ce4:	sub	w0, w0, #0x9
   38ce8:	cmp	w0, #0x1
   38cec:	b.hi	38bf4 <my_reg_named_buff_fetch@@Base+0x2a4>  // b.pmore
   38cf0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38cf4:	add	x3, x3, #0xc10
   38cf8:	add	x3, x3, #0x5f0
   38cfc:	mov	w2, #0x20e2                	// #8418
   38d00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38d04:	add	x1, x1, #0xfb8
   38d08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   38d0c:	add	x0, x0, #0xdd0
   38d10:	bl	58e0 <__assert_fail@plt>
   38d14:	cbz	x22, 38d4c <my_reg_named_buff_fetch@@Base+0x3fc>
   38d18:	mov	x1, x22
   38d1c:	mov	x0, x24
   38d20:	bl	4f00 <Perl_newRV_noinc@plt>
   38d24:	mov	x22, x0
   38d28:	ldp	x25, x26, [sp, #80]
   38d2c:	mov	x0, x22
   38d30:	ldp	x21, x22, [sp, #48]
   38d34:	ldp	x19, x20, [sp, #32]
   38d38:	ldp	x23, x24, [sp, #64]
   38d3c:	ldp	x27, x28, [sp, #96]
   38d40:	ldp	x29, x30, [sp, #16]
   38d44:	add	sp, sp, #0x80
   38d48:	ret
   38d4c:	ldp	x25, x26, [sp, #80]
   38d50:	b	38d2c <my_reg_named_buff_fetch@@Base+0x3dc>

0000000000038d54 <my_reg_named_buff_exists@@Base>:
   38d54:	sub	sp, sp, #0x30
   38d58:	stp	x29, x30, [sp, #16]
   38d5c:	add	x29, sp, #0x10
   38d60:	str	x19, [sp, #32]
   38d64:	mov	x19, x0
   38d68:	ldr	x4, [x1]
   38d6c:	ldr	w5, [x1, #12]
   38d70:	and	w0, w5, #0xff
   38d74:	cmp	w0, #0x8
   38d78:	b.eq	38da4 <my_reg_named_buff_exists@@Base+0x50>  // b.none
   38d7c:	mov	w6, #0x80ff                	// #33023
   38d80:	movk	w6, #0x100, lsl #16
   38d84:	and	w5, w5, w6
   38d88:	mov	w6, #0xa                   	// #10
   38d8c:	movk	w6, #0x100, lsl #16
   38d90:	cmp	w5, w6
   38d94:	b.ne	38e04 <my_reg_named_buff_exists@@Base+0xb0>  // b.any
   38d98:	cmp	w0, #0xa
   38d9c:	b.ne	38da4 <my_reg_named_buff_exists@@Base+0x50>  // b.any
   38da0:	ldr	x4, [x4, #24]
   38da4:	cbz	x4, 38e28 <my_reg_named_buff_exists@@Base+0xd4>
   38da8:	cbz	x2, 38e4c <my_reg_named_buff_exists@@Base+0xf8>
   38dac:	ldr	x0, [x4, #48]
   38db0:	cbz	x0, 38eb0 <my_reg_named_buff_exists@@Base+0x15c>
   38db4:	tbnz	w3, #9, 38e70 <my_reg_named_buff_exists@@Base+0x11c>
   38db8:	ldr	x0, [x4, #32]
   38dbc:	ldr	x5, [x0, #64]
   38dc0:	orr	w4, w3, #0x1
   38dc4:	mov	x3, #0x0                   	// #0
   38dc8:	mov	x0, x19
   38dcc:	blr	x5
   38dd0:	mov	x1, x0
   38dd4:	mov	w0, #0x0                   	// #0
   38dd8:	cbz	x1, 38df4 <my_reg_named_buff_exists@@Base+0xa0>
   38ddc:	ldr	w2, [x1, #8]
   38de0:	cmp	w2, #0x1
   38de4:	b.ls	38ea0 <my_reg_named_buff_exists@@Base+0x14c>  // b.plast
   38de8:	sub	w2, w2, #0x1
   38dec:	str	w2, [x1, #8]
   38df0:	mov	w0, #0x1                   	// #1
   38df4:	ldr	x19, [sp, #32]
   38df8:	ldp	x29, x30, [sp, #16]
   38dfc:	add	sp, sp, #0x30
   38e00:	ret
   38e04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38e08:	add	x3, x3, #0xc10
   38e0c:	add	x3, x3, #0x550
   38e10:	mov	w2, #0xb6                  	// #182
   38e14:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   38e18:	add	x1, x1, #0xc80
   38e1c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   38e20:	add	x0, x0, #0x128
   38e24:	bl	58e0 <__assert_fail@plt>
   38e28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38e2c:	add	x3, x3, #0xc10
   38e30:	add	x3, x3, #0x608
   38e34:	mov	w2, #0x20ff                	// #8447
   38e38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38e3c:	add	x1, x1, #0xfb8
   38e40:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38e44:	add	x0, x0, #0x2d8
   38e48:	bl	58e0 <__assert_fail@plt>
   38e4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38e50:	add	x3, x3, #0xc10
   38e54:	add	x3, x3, #0x608
   38e58:	mov	w2, #0x20ff                	// #8447
   38e5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38e60:	add	x1, x1, #0xfb8
   38e64:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38e68:	add	x0, x0, #0x2e8
   38e6c:	bl	58e0 <__assert_fail@plt>
   38e70:	str	wzr, [sp]
   38e74:	mov	x7, #0x0                   	// #0
   38e78:	mov	w6, #0x8                   	// #8
   38e7c:	mov	w5, #0x0                   	// #0
   38e80:	mov	x4, #0x0                   	// #0
   38e84:	mov	x3, #0x0                   	// #0
   38e88:	mov	x1, x0
   38e8c:	mov	x0, x19
   38e90:	bl	5600 <Perl_hv_common@plt>
   38e94:	cmp	x0, #0x0
   38e98:	cset	w0, ne  // ne = any
   38e9c:	b	38df4 <my_reg_named_buff_exists@@Base+0xa0>
   38ea0:	mov	x0, x19
   38ea4:	bl	5860 <Perl_sv_free2@plt>
   38ea8:	mov	w0, #0x1                   	// #1
   38eac:	b	38df4 <my_reg_named_buff_exists@@Base+0xa0>
   38eb0:	mov	w0, #0x0                   	// #0
   38eb4:	b	38df4 <my_reg_named_buff_exists@@Base+0xa0>

0000000000038eb8 <my_reg_named_buff_firstkey@@Base>:
   38eb8:	stp	x29, x30, [sp, #-48]!
   38ebc:	mov	x29, sp
   38ec0:	stp	x19, x20, [sp, #16]
   38ec4:	str	x21, [sp, #32]
   38ec8:	mov	x20, x0
   38ecc:	mov	x19, x1
   38ed0:	mov	w21, w2
   38ed4:	ldr	x4, [x1]
   38ed8:	ldr	w1, [x1, #12]
   38edc:	and	w0, w1, #0xff
   38ee0:	cmp	w0, #0x8
   38ee4:	b.eq	38f10 <my_reg_named_buff_firstkey@@Base+0x58>  // b.none
   38ee8:	mov	w2, #0x80ff                	// #33023
   38eec:	movk	w2, #0x100, lsl #16
   38ef0:	and	w1, w1, w2
   38ef4:	mov	w2, #0xa                   	// #10
   38ef8:	movk	w2, #0x100, lsl #16
   38efc:	cmp	w1, w2
   38f00:	b.ne	38f94 <my_reg_named_buff_firstkey@@Base+0xdc>  // b.any
   38f04:	cmp	w0, #0xa
   38f08:	b.ne	38f10 <my_reg_named_buff_firstkey@@Base+0x58>  // b.any
   38f0c:	ldr	x4, [x4, #24]
   38f10:	cbz	x4, 38fb8 <my_reg_named_buff_firstkey@@Base+0x100>
   38f14:	ldr	x0, [x4, #48]
   38f18:	cbz	x0, 38f84 <my_reg_named_buff_firstkey@@Base+0xcc>
   38f1c:	mov	x1, x0
   38f20:	mov	x0, x20
   38f24:	bl	55a0 <Perl_hv_iterinit@plt>
   38f28:	ldr	x1, [x19]
   38f2c:	ldr	w0, [x19, #12]
   38f30:	and	w2, w0, #0xff
   38f34:	cmp	w2, #0x8
   38f38:	b.eq	38f64 <my_reg_named_buff_firstkey@@Base+0xac>  // b.none
   38f3c:	mov	w3, #0x80ff                	// #33023
   38f40:	movk	w3, #0x100, lsl #16
   38f44:	and	w0, w0, w3
   38f48:	mov	w3, #0xa                   	// #10
   38f4c:	movk	w3, #0x100, lsl #16
   38f50:	cmp	w0, w3
   38f54:	b.ne	38fdc <my_reg_named_buff_firstkey@@Base+0x124>  // b.any
   38f58:	cmp	w2, #0xa
   38f5c:	b.ne	38f64 <my_reg_named_buff_firstkey@@Base+0xac>  // b.any
   38f60:	ldr	x1, [x1, #24]
   38f64:	and	w3, w21, #0xffffff3f
   38f68:	ldr	x0, [x1, #32]
   38f6c:	ldr	x4, [x0, #72]
   38f70:	orr	w3, w3, #0x80
   38f74:	mov	x2, #0x0                   	// #0
   38f78:	mov	x1, x19
   38f7c:	mov	x0, x20
   38f80:	blr	x4
   38f84:	ldp	x19, x20, [sp, #16]
   38f88:	ldr	x21, [sp, #32]
   38f8c:	ldp	x29, x30, [sp], #48
   38f90:	ret
   38f94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38f98:	add	x3, x3, #0xc10
   38f9c:	add	x3, x3, #0x550
   38fa0:	mov	w2, #0xb6                  	// #182
   38fa4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   38fa8:	add	x1, x1, #0xc80
   38fac:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   38fb0:	add	x0, x0, #0x128
   38fb4:	bl	58e0 <__assert_fail@plt>
   38fb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38fbc:	add	x3, x3, #0xc10
   38fc0:	add	x3, x3, #0x628
   38fc4:	mov	w2, #0x2117                	// #8471
   38fc8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   38fcc:	add	x1, x1, #0xfb8
   38fd0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   38fd4:	add	x0, x0, #0x2d8
   38fd8:	bl	58e0 <__assert_fail@plt>
   38fdc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   38fe0:	add	x3, x3, #0xc10
   38fe4:	add	x3, x3, #0x550
   38fe8:	mov	w2, #0xb6                  	// #182
   38fec:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   38ff0:	add	x1, x1, #0xc80
   38ff4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   38ff8:	add	x0, x0, #0x128
   38ffc:	bl	58e0 <__assert_fail@plt>

0000000000039000 <my_reg_named_buff_nextkey@@Base>:
   39000:	stp	x29, x30, [sp, #-80]!
   39004:	mov	x29, sp
   39008:	stp	x19, x20, [sp, #16]
   3900c:	stp	x21, x22, [sp, #32]
   39010:	mov	x20, x0
   39014:	mov	w21, w2
   39018:	ldr	x19, [x1]
   3901c:	ldr	w0, [x1, #12]
   39020:	and	w1, w0, #0xff
   39024:	cmp	w1, #0x8
   39028:	b.eq	39054 <my_reg_named_buff_nextkey@@Base+0x54>  // b.none
   3902c:	mov	w2, #0x80ff                	// #33023
   39030:	movk	w2, #0x100, lsl #16
   39034:	and	w0, w0, w2
   39038:	mov	w2, #0xa                   	// #10
   3903c:	movk	w2, #0x100, lsl #16
   39040:	cmp	w0, w2
   39044:	b.ne	390ec <my_reg_named_buff_nextkey@@Base+0xec>  // b.any
   39048:	cmp	w1, #0xa
   3904c:	b.ne	39054 <my_reg_named_buff_nextkey@@Base+0x54>  // b.any
   39050:	ldr	x19, [x19, #24]
   39054:	str	xzr, [sp, #72]
   39058:	ldr	x0, [x20, #224]
   3905c:	cbz	x0, 390c4 <my_reg_named_buff_nextkey@@Base+0xc4>
   39060:	mov	w2, #0x1                   	// #1
   39064:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   39068:	add	x1, x1, #0x608
   3906c:	mov	x0, x20
   39070:	bl	54f0 <Perl_get_sv@plt>
   39074:	mov	x22, x0
   39078:	cbz	x0, 390c4 <my_reg_named_buff_nextkey@@Base+0xc4>
   3907c:	ldr	w0, [x0, #12]
   39080:	tbz	w0, #8, 39114 <my_reg_named_buff_nextkey@@Base+0x114>
   39084:	ldr	w0, [x22, #12]
   39088:	and	w1, w0, #0x3fff00
   3908c:	and	w1, w1, #0xffe001ff
   39090:	cmp	w1, #0x100
   39094:	b.ne	39188 <my_reg_named_buff_nextkey@@Base+0x188>  // b.any
   39098:	and	w2, w0, #0xf
   3909c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   390a0:	ldr	x1, [x1, #3712]
   390a4:	ldrb	w1, [x1, w2, uxtw]
   390a8:	cbz	w1, 39128 <my_reg_named_buff_nextkey@@Base+0x128>
   390ac:	and	w1, w0, #0xc000
   390b0:	cmp	w1, #0x8, lsl #12
   390b4:	b.eq	39150 <my_reg_named_buff_nextkey@@Base+0x150>  // b.none
   390b8:	ldr	x0, [x22]
   390bc:	ldr	x0, [x0, #32]
   390c0:	str	x0, [sp, #72]
   390c4:	cbz	x19, 3919c <my_reg_named_buff_nextkey@@Base+0x19c>
   390c8:	ldr	x22, [x19, #48]
   390cc:	cbz	x22, 391c4 <my_reg_named_buff_nextkey@@Base+0x1c4>
   390d0:	stp	x23, x24, [sp, #48]
   390d4:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   390d8:	ldr	x24, [x24, #3888]
   390dc:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   390e0:	ldr	x23, [x23, #3712]
   390e4:	and	w21, w21, #0x200
   390e8:	b	392b0 <my_reg_named_buff_nextkey@@Base+0x2b0>
   390ec:	stp	x23, x24, [sp, #48]
   390f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   390f4:	add	x3, x3, #0xc10
   390f8:	add	x3, x3, #0x550
   390fc:	mov	w2, #0xb6                  	// #182
   39100:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39104:	add	x1, x1, #0xc80
   39108:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   3910c:	add	x0, x0, #0x128
   39110:	bl	58e0 <__assert_fail@plt>
   39114:	mov	x2, #0xff08                	// #65288
   39118:	mov	x1, x22
   3911c:	mov	x0, x20
   39120:	bl	5310 <Perl_sv_setuv@plt>
   39124:	b	39084 <my_reg_named_buff_nextkey@@Base+0x84>
   39128:	stp	x23, x24, [sp, #48]
   3912c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39130:	add	x3, x3, #0xc10
   39134:	add	x3, x3, #0x648
   39138:	mov	w2, #0x2126                	// #8486
   3913c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39140:	add	x1, x1, #0xfb8
   39144:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39148:	add	x0, x0, #0xda0
   3914c:	bl	58e0 <__assert_fail@plt>
   39150:	and	w0, w0, #0xff
   39154:	sub	w0, w0, #0x9
   39158:	cmp	w0, #0x1
   3915c:	b.hi	390b8 <my_reg_named_buff_nextkey@@Base+0xb8>  // b.pmore
   39160:	stp	x23, x24, [sp, #48]
   39164:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39168:	add	x3, x3, #0xc10
   3916c:	add	x3, x3, #0x648
   39170:	mov	w2, #0x2126                	// #8486
   39174:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39178:	add	x1, x1, #0xfb8
   3917c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39180:	add	x0, x0, #0xdd0
   39184:	bl	58e0 <__assert_fail@plt>
   39188:	mov	w2, #0x2                   	// #2
   3918c:	mov	x1, x22
   39190:	mov	x0, x20
   39194:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   39198:	b	390c0 <my_reg_named_buff_nextkey@@Base+0xc0>
   3919c:	stp	x23, x24, [sp, #48]
   391a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   391a4:	add	x3, x3, #0xc10
   391a8:	add	x3, x3, #0x648
   391ac:	mov	w2, #0x2128                	// #8488
   391b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   391b4:	add	x1, x1, #0xfb8
   391b8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   391bc:	add	x0, x0, #0x2d8
   391c0:	bl	58e0 <__assert_fail@plt>
   391c4:	mov	x0, x22
   391c8:	b	39368 <my_reg_named_buff_nextkey@@Base+0x368>
   391cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   391d0:	add	x3, x3, #0xc10
   391d4:	add	x3, x3, #0x648
   391d8:	mov	w2, #0x2131                	// #8497
   391dc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   391e0:	add	x1, x1, #0xfb8
   391e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   391e8:	add	x0, x0, #0xd10
   391ec:	bl	58e0 <__assert_fail@plt>
   391f0:	and	w2, w9, #0xff
   391f4:	sub	w2, w2, #0x9
   391f8:	cmp	w2, #0x1
   391fc:	b.hi	392e4 <my_reg_named_buff_nextkey@@Base+0x2e4>  // b.pmore
   39200:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39204:	add	x3, x3, #0xc10
   39208:	add	x3, x3, #0x648
   3920c:	mov	w2, #0x2131                	// #8497
   39210:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39214:	add	x1, x1, #0xfb8
   39218:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3921c:	add	x0, x0, #0xd40
   39220:	bl	58e0 <__assert_fail@plt>
   39224:	ldr	x2, [x5]
   39228:	ldrb	w2, [x2, #129]
   3922c:	tbnz	w2, #6, 392f0 <my_reg_named_buff_nextkey@@Base+0x2f0>
   39230:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39234:	add	x3, x3, #0xc10
   39238:	add	x3, x3, #0x648
   3923c:	mov	w2, #0x2131                	// #8497
   39240:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39244:	add	x1, x1, #0xfb8
   39248:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3924c:	add	x0, x0, #0xd58
   39250:	bl	58e0 <__assert_fail@plt>
   39254:	add	x1, x1, #0x1
   39258:	cmp	w6, #0x8, lsl #12
   3925c:	b.eq	3932c <my_reg_named_buff_nextkey@@Base+0x32c>  // b.none
   39260:	ldr	x2, [x5]
   39264:	ldr	x2, [x2, #32]
   39268:	cmp	x2, x1
   3926c:	b.le	392ac <my_reg_named_buff_nextkey@@Base+0x2ac>
   39270:	ldr	w2, [x7, x1, lsl #2]
   39274:	ldr	w3, [x19, #112]
   39278:	cmp	w3, w2
   3927c:	b.lt	39254 <my_reg_named_buff_nextkey@@Base+0x254>  // b.tstop
   39280:	sbfiz	x3, x2, #1, #32
   39284:	add	x3, x3, w2, sxtw
   39288:	ldr	x4, [x19, #120]
   3928c:	add	x8, x4, x3, lsl #3
   39290:	ldr	x3, [x4, x3, lsl #3]
   39294:	cmn	x3, #0x1
   39298:	b.eq	39254 <my_reg_named_buff_nextkey@@Base+0x254>  // b.none
   3929c:	ldr	x3, [x8, #8]
   392a0:	cmn	x3, #0x1
   392a4:	b.eq	39254 <my_reg_named_buff_nextkey@@Base+0x254>  // b.none
   392a8:	cbnz	w2, 39358 <my_reg_named_buff_nextkey@@Base+0x358>
   392ac:	cbnz	w21, 39358 <my_reg_named_buff_nextkey@@Base+0x358>
   392b0:	mov	w2, #0x0                   	// #0
   392b4:	mov	x1, x22
   392b8:	mov	x0, x20
   392bc:	bl	5230 <Perl_hv_iternext_flags@plt>
   392c0:	cbz	x0, 39378 <my_reg_named_buff_nextkey@@Base+0x378>
   392c4:	ldr	x5, [x0, #16]
   392c8:	ldr	w9, [x5, #12]
   392cc:	and	w1, w9, #0xf
   392d0:	ldrb	w2, [x24, w1, uxtw]
   392d4:	cbz	w2, 391cc <my_reg_named_buff_nextkey@@Base+0x1cc>
   392d8:	and	w6, w9, #0xc000
   392dc:	cmp	w6, #0x8, lsl #12
   392e0:	b.eq	391f0 <my_reg_named_buff_nextkey@@Base+0x1f0>  // b.none
   392e4:	and	w9, w9, #0xff
   392e8:	cmp	w9, #0xf
   392ec:	b.eq	39224 <my_reg_named_buff_nextkey@@Base+0x224>  // b.none
   392f0:	ldr	x7, [x5, #16]
   392f4:	ldrb	w1, [x23, w1, uxtw]
   392f8:	cbz	w1, 39308 <my_reg_named_buff_nextkey@@Base+0x308>
   392fc:	mov	x1, #0x0                   	// #0
   39300:	sub	w9, w9, #0x9
   39304:	b	39258 <my_reg_named_buff_nextkey@@Base+0x258>
   39308:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3930c:	add	x3, x3, #0xc10
   39310:	add	x3, x3, #0x648
   39314:	mov	w2, #0x2132                	// #8498
   39318:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3931c:	add	x1, x1, #0xfb8
   39320:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39324:	add	x0, x0, #0xda0
   39328:	bl	58e0 <__assert_fail@plt>
   3932c:	cmp	w9, #0x1
   39330:	b.hi	39260 <my_reg_named_buff_nextkey@@Base+0x260>  // b.pmore
   39334:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39338:	add	x3, x3, #0xc10
   3933c:	add	x3, x3, #0x648
   39340:	mov	w2, #0x2132                	// #8498
   39344:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39348:	add	x1, x1, #0xfb8
   3934c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39350:	add	x0, x0, #0xdd0
   39354:	bl	58e0 <__assert_fail@plt>
   39358:	ldr	x1, [x0, #8]
   3935c:	mov	x0, x20
   39360:	bl	4fa0 <Perl_newSVhek@plt>
   39364:	ldp	x23, x24, [sp, #48]
   39368:	ldp	x19, x20, [sp, #16]
   3936c:	ldp	x21, x22, [sp, #32]
   39370:	ldp	x29, x30, [sp], #80
   39374:	ret
   39378:	ldp	x23, x24, [sp, #48]
   3937c:	b	39368 <my_reg_named_buff_nextkey@@Base+0x368>

0000000000039380 <my_reg_named_buff_iter@@Base>:
   39380:	stp	x29, x30, [sp, #-16]!
   39384:	mov	x29, sp
   39388:	cbz	x1, 393a4 <my_reg_named_buff_iter@@Base+0x24>
   3938c:	mov	w2, w3
   39390:	tbnz	w2, #6, 393c8 <my_reg_named_buff_iter@@Base+0x48>
   39394:	tbz	w2, #7, 393d0 <my_reg_named_buff_iter@@Base+0x50>
   39398:	bl	5470 <my_reg_named_buff_nextkey@plt>
   3939c:	ldp	x29, x30, [sp], #16
   393a0:	ret
   393a4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   393a8:	add	x3, x3, #0xc10
   393ac:	add	x3, x3, #0x668
   393b0:	mov	w2, #0x20c4                	// #8388
   393b4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   393b8:	add	x1, x1, #0xfb8
   393bc:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   393c0:	add	x0, x0, #0x2d8
   393c4:	bl	58e0 <__assert_fail@plt>
   393c8:	bl	51d0 <my_reg_named_buff_firstkey@plt>
   393cc:	b	3939c <my_reg_named_buff_iter@@Base+0x1c>
   393d0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   393d4:	add	x1, x1, #0x2f0
   393d8:	bl	5420 <Perl_croak@plt>

00000000000393dc <my_reg_named_buff_scalar@@Base>:
   393dc:	stp	x29, x30, [sp, #-48]!
   393e0:	mov	x29, sp
   393e4:	stp	x19, x20, [sp, #16]
   393e8:	mov	x19, x0
   393ec:	ldr	x0, [x1]
   393f0:	ldr	w3, [x1, #12]
   393f4:	and	w4, w3, #0xff
   393f8:	cmp	w4, #0x8
   393fc:	b.eq	39428 <my_reg_named_buff_scalar@@Base+0x4c>  // b.none
   39400:	mov	w5, #0x80ff                	// #33023
   39404:	movk	w5, #0x100, lsl #16
   39408:	and	w3, w3, w5
   3940c:	mov	w5, #0xa                   	// #10
   39410:	movk	w5, #0x100, lsl #16
   39414:	cmp	w3, w5
   39418:	b.ne	394f8 <my_reg_named_buff_scalar@@Base+0x11c>  // b.any
   3941c:	cmp	w4, #0xa
   39420:	b.ne	39428 <my_reg_named_buff_scalar@@Base+0x4c>  // b.any
   39424:	ldr	x0, [x0, #24]
   39428:	cbz	x0, 39520 <my_reg_named_buff_scalar@@Base+0x144>
   3942c:	ldr	x3, [x0, #48]
   39430:	cbz	x3, 39650 <my_reg_named_buff_scalar@@Base+0x274>
   39434:	mov	w4, #0x1200                	// #4608
   39438:	tst	w2, w4
   3943c:	b.ne	39548 <my_reg_named_buff_scalar@@Base+0x16c>  // b.any
   39440:	str	x21, [sp, #32]
   39444:	tbz	w2, #8, 39640 <my_reg_named_buff_scalar@@Base+0x264>
   39448:	ldr	x0, [x0, #32]
   3944c:	ldr	x5, [x0, #64]
   39450:	orr	w4, w2, #0x800
   39454:	mov	x3, #0x0                   	// #0
   39458:	mov	x2, #0x0                   	// #0
   3945c:	mov	x0, x19
   39460:	blr	x5
   39464:	mov	x20, x0
   39468:	ldr	w0, [x0, #12]
   3946c:	and	w2, w0, #0xf
   39470:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   39474:	ldr	x1, [x1, #3840]
   39478:	ldrb	w1, [x1, w2, uxtw]
   3947c:	cbz	w1, 3955c <my_reg_named_buff_scalar@@Base+0x180>
   39480:	and	w1, w0, #0xc000
   39484:	cmp	w1, #0x8, lsl #12
   39488:	b.eq	39580 <my_reg_named_buff_scalar@@Base+0x1a4>  // b.none
   3948c:	and	w0, w0, #0xff
   39490:	cmp	w0, #0xf
   39494:	b.ne	394a4 <my_reg_named_buff_scalar@@Base+0xc8>  // b.any
   39498:	ldr	x0, [x20]
   3949c:	ldrb	w0, [x0, #129]
   394a0:	tbz	w0, #6, 395b4 <my_reg_named_buff_scalar@@Base+0x1d8>
   394a4:	ldr	x1, [x20, #16]
   394a8:	cbz	x1, 395d8 <my_reg_named_buff_scalar@@Base+0x1fc>
   394ac:	ldr	w0, [x1, #12]
   394b0:	and	w2, w0, #0xff
   394b4:	cmp	w2, #0xb
   394b8:	b.ne	395fc <my_reg_named_buff_scalar@@Base+0x220>  // b.any
   394bc:	tbnz	w0, #23, 39620 <my_reg_named_buff_scalar@@Base+0x244>
   394c0:	ldr	x0, [x1]
   394c4:	ldr	x21, [x0, #16]
   394c8:	ldr	w2, [x20, #8]
   394cc:	cmp	w2, #0x1
   394d0:	b.ls	39630 <my_reg_named_buff_scalar@@Base+0x254>  // b.plast
   394d4:	sub	w2, w2, #0x1
   394d8:	str	w2, [x20, #8]
   394dc:	add	x1, x21, #0x1
   394e0:	mov	x0, x19
   394e4:	bl	58d0 <Perl_newSViv@plt>
   394e8:	ldr	x21, [sp, #32]
   394ec:	ldp	x19, x20, [sp, #16]
   394f0:	ldp	x29, x30, [sp], #48
   394f4:	ret
   394f8:	str	x21, [sp, #32]
   394fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39500:	add	x3, x3, #0xc10
   39504:	add	x3, x3, #0x550
   39508:	mov	w2, #0xb6                  	// #182
   3950c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39510:	add	x1, x1, #0xc80
   39514:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   39518:	add	x0, x0, #0x128
   3951c:	bl	58e0 <__assert_fail@plt>
   39520:	str	x21, [sp, #32]
   39524:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39528:	add	x3, x3, #0xc10
   3952c:	add	x3, x3, #0x680
   39530:	mov	w2, #0x214b                	// #8523
   39534:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39538:	add	x1, x1, #0xfb8
   3953c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39540:	add	x0, x0, #0x2d8
   39544:	bl	58e0 <__assert_fail@plt>
   39548:	ldr	x0, [x3]
   3954c:	ldr	x1, [x0, #16]
   39550:	mov	x0, x19
   39554:	bl	58d0 <Perl_newSViv@plt>
   39558:	b	394ec <my_reg_named_buff_scalar@@Base+0x110>
   3955c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39560:	add	x3, x3, #0xc10
   39564:	add	x3, x3, #0x680
   39568:	mov	w2, #0x2152                	// #8530
   3956c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39570:	add	x1, x1, #0xfb8
   39574:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   39578:	add	x0, x0, #0x160
   3957c:	bl	58e0 <__assert_fail@plt>
   39580:	and	w1, w0, #0xff
   39584:	sub	w1, w1, #0x9
   39588:	cmp	w1, #0x1
   3958c:	b.hi	3948c <my_reg_named_buff_scalar@@Base+0xb0>  // b.pmore
   39590:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39594:	add	x3, x3, #0xc10
   39598:	add	x3, x3, #0x680
   3959c:	mov	w2, #0x2152                	// #8530
   395a0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   395a4:	add	x1, x1, #0xfb8
   395a8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   395ac:	add	x0, x0, #0x190
   395b0:	bl	58e0 <__assert_fail@plt>
   395b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   395b8:	add	x3, x3, #0xc10
   395bc:	add	x3, x3, #0x680
   395c0:	mov	w2, #0x2152                	// #8530
   395c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   395c8:	add	x1, x1, #0xfb8
   395cc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   395d0:	add	x0, x0, #0x1a8
   395d4:	bl	58e0 <__assert_fail@plt>
   395d8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   395dc:	add	x3, x3, #0xc10
   395e0:	add	x3, x3, #0x320
   395e4:	mov	w2, #0x2d                  	// #45
   395e8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   395ec:	add	x1, x1, #0xc80
   395f0:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   395f4:	add	x0, x0, #0xb30
   395f8:	bl	58e0 <__assert_fail@plt>
   395fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39600:	add	x3, x3, #0xc10
   39604:	add	x3, x3, #0x320
   39608:	mov	w2, #0x2e                  	// #46
   3960c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39610:	add	x1, x1, #0xc80
   39614:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   39618:	add	x0, x0, #0xb38
   3961c:	bl	58e0 <__assert_fail@plt>
   39620:	mov	x0, x19
   39624:	bl	53e0 <Perl_mg_size@plt>
   39628:	sxtw	x21, w0
   3962c:	b	394c8 <my_reg_named_buff_scalar@@Base+0xec>
   39630:	mov	x1, x20
   39634:	mov	x0, x19
   39638:	bl	5860 <Perl_sv_free2@plt>
   3963c:	b	394dc <my_reg_named_buff_scalar@@Base+0x100>
   39640:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   39644:	add	x1, x1, #0x320
   39648:	mov	x0, x19
   3964c:	bl	5420 <Perl_croak@plt>
   39650:	add	x0, x19, #0x150
   39654:	b	394ec <my_reg_named_buff_scalar@@Base+0x110>

0000000000039658 <my_reg_named_buff_all@@Base>:
   39658:	stp	x29, x30, [sp, #-80]!
   3965c:	mov	x29, sp
   39660:	stp	x19, x20, [sp, #16]
   39664:	stp	x21, x22, [sp, #32]
   39668:	stp	x23, x24, [sp, #48]
   3966c:	str	x25, [sp, #64]
   39670:	mov	x20, x0
   39674:	mov	w24, w2
   39678:	ldr	x19, [x1]
   3967c:	ldr	w0, [x1, #12]
   39680:	and	w1, w0, #0xff
   39684:	cmp	w1, #0x8
   39688:	b.eq	396b4 <my_reg_named_buff_all@@Base+0x5c>  // b.none
   3968c:	mov	w2, #0x80ff                	// #33023
   39690:	movk	w2, #0x100, lsl #16
   39694:	and	w0, w0, w2
   39698:	mov	w2, #0xa                   	// #10
   3969c:	movk	w2, #0x100, lsl #16
   396a0:	cmp	w0, w2
   396a4:	b.ne	396f4 <my_reg_named_buff_all@@Base+0x9c>  // b.any
   396a8:	cmp	w1, #0xa
   396ac:	b.ne	396b4 <my_reg_named_buff_all@@Base+0x5c>  // b.any
   396b0:	ldr	x19, [x19, #24]
   396b4:	mov	w1, #0xb                   	// #11
   396b8:	mov	x0, x20
   396bc:	bl	57e0 <Perl_newSV_type@plt>
   396c0:	mov	x25, x0
   396c4:	cbz	x19, 39718 <my_reg_named_buff_all@@Base+0xc0>
   396c8:	ldr	x21, [x19, #48]
   396cc:	cbz	x21, 398e4 <my_reg_named_buff_all@@Base+0x28c>
   396d0:	mov	x1, x21
   396d4:	mov	x0, x20
   396d8:	bl	55a0 <Perl_hv_iterinit@plt>
   396dc:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   396e0:	ldr	x23, [x23, #3888]
   396e4:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   396e8:	ldr	x22, [x22, #3712]
   396ec:	and	w24, w24, #0x200
   396f0:	b	3983c <my_reg_named_buff_all@@Base+0x1e4>
   396f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   396f8:	add	x3, x3, #0xc10
   396fc:	add	x3, x3, #0x550
   39700:	mov	w2, #0xb6                  	// #182
   39704:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39708:	add	x1, x1, #0xc80
   3970c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   39710:	add	x0, x0, #0x128
   39714:	bl	58e0 <__assert_fail@plt>
   39718:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3971c:	add	x3, x3, #0xc10
   39720:	add	x3, x3, #0x6a0
   39724:	mov	w2, #0x2165                	// #8549
   39728:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3972c:	add	x1, x1, #0xfb8
   39730:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39734:	add	x0, x0, #0x2d8
   39738:	bl	58e0 <__assert_fail@plt>
   3973c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39740:	add	x3, x3, #0xc10
   39744:	add	x3, x3, #0x6a0
   39748:	mov	w2, #0x216f                	// #8559
   3974c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39750:	add	x1, x1, #0xfb8
   39754:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39758:	add	x0, x0, #0xd10
   3975c:	bl	58e0 <__assert_fail@plt>
   39760:	and	w2, w9, #0xff
   39764:	sub	w2, w2, #0x9
   39768:	cmp	w2, #0x1
   3976c:	b.hi	39870 <my_reg_named_buff_all@@Base+0x218>  // b.pmore
   39770:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39774:	add	x3, x3, #0xc10
   39778:	add	x3, x3, #0x6a0
   3977c:	mov	w2, #0x216f                	// #8559
   39780:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39784:	add	x1, x1, #0xfb8
   39788:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3978c:	add	x0, x0, #0xd40
   39790:	bl	58e0 <__assert_fail@plt>
   39794:	ldr	x2, [x5]
   39798:	ldrb	w2, [x2, #129]
   3979c:	tbnz	w2, #6, 3987c <my_reg_named_buff_all@@Base+0x224>
   397a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   397a4:	add	x3, x3, #0xc10
   397a8:	add	x3, x3, #0x6a0
   397ac:	mov	w2, #0x216f                	// #8559
   397b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   397b4:	add	x1, x1, #0xfb8
   397b8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   397bc:	add	x0, x0, #0xd58
   397c0:	bl	58e0 <__assert_fail@plt>
   397c4:	add	x1, x1, #0x1
   397c8:	cmp	w6, #0x8, lsl #12
   397cc:	b.eq	398b8 <my_reg_named_buff_all@@Base+0x260>  // b.none
   397d0:	ldr	x2, [x5]
   397d4:	ldr	x2, [x2, #32]
   397d8:	cmp	x2, x1
   397dc:	b.le	3981c <my_reg_named_buff_all@@Base+0x1c4>
   397e0:	ldr	w2, [x7, x1, lsl #2]
   397e4:	ldr	w3, [x19, #112]
   397e8:	cmp	w3, w2
   397ec:	b.lt	397c4 <my_reg_named_buff_all@@Base+0x16c>  // b.tstop
   397f0:	sbfiz	x3, x2, #1, #32
   397f4:	add	x3, x3, w2, sxtw
   397f8:	ldr	x4, [x19, #120]
   397fc:	add	x8, x4, x3, lsl #3
   39800:	ldr	x3, [x4, x3, lsl #3]
   39804:	cmn	x3, #0x1
   39808:	b.eq	397c4 <my_reg_named_buff_all@@Base+0x16c>  // b.none
   3980c:	ldr	x3, [x8, #8]
   39810:	cmn	x3, #0x1
   39814:	b.eq	397c4 <my_reg_named_buff_all@@Base+0x16c>  // b.none
   39818:	cbnz	w2, 39820 <my_reg_named_buff_all@@Base+0x1c8>
   3981c:	cbz	w24, 3983c <my_reg_named_buff_all@@Base+0x1e4>
   39820:	ldr	x1, [x0, #8]
   39824:	mov	x0, x20
   39828:	bl	4fa0 <Perl_newSVhek@plt>
   3982c:	mov	x2, x0
   39830:	mov	x1, x25
   39834:	mov	x0, x20
   39838:	bl	5430 <Perl_av_push@plt>
   3983c:	mov	w2, #0x0                   	// #0
   39840:	mov	x1, x21
   39844:	mov	x0, x20
   39848:	bl	5230 <Perl_hv_iternext_flags@plt>
   3984c:	cbz	x0, 398e4 <my_reg_named_buff_all@@Base+0x28c>
   39850:	ldr	x5, [x0, #16]
   39854:	ldr	w9, [x5, #12]
   39858:	and	w1, w9, #0xf
   3985c:	ldrb	w2, [x23, w1, uxtw]
   39860:	cbz	w2, 3973c <my_reg_named_buff_all@@Base+0xe4>
   39864:	and	w6, w9, #0xc000
   39868:	cmp	w6, #0x8, lsl #12
   3986c:	b.eq	39760 <my_reg_named_buff_all@@Base+0x108>  // b.none
   39870:	and	w9, w9, #0xff
   39874:	cmp	w9, #0xf
   39878:	b.eq	39794 <my_reg_named_buff_all@@Base+0x13c>  // b.none
   3987c:	ldr	x7, [x5, #16]
   39880:	ldrb	w1, [x22, w1, uxtw]
   39884:	cbz	w1, 39894 <my_reg_named_buff_all@@Base+0x23c>
   39888:	mov	x1, #0x0                   	// #0
   3988c:	sub	w9, w9, #0x9
   39890:	b	397c8 <my_reg_named_buff_all@@Base+0x170>
   39894:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39898:	add	x3, x3, #0xc10
   3989c:	add	x3, x3, #0x6a0
   398a0:	mov	w2, #0x2170                	// #8560
   398a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   398a8:	add	x1, x1, #0xfb8
   398ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   398b0:	add	x0, x0, #0xda0
   398b4:	bl	58e0 <__assert_fail@plt>
   398b8:	cmp	w9, #0x1
   398bc:	b.hi	397d0 <my_reg_named_buff_all@@Base+0x178>  // b.pmore
   398c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   398c4:	add	x3, x3, #0xc10
   398c8:	add	x3, x3, #0x6a0
   398cc:	mov	w2, #0x2170                	// #8560
   398d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   398d4:	add	x1, x1, #0xfb8
   398d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   398dc:	add	x0, x0, #0xdd0
   398e0:	bl	58e0 <__assert_fail@plt>
   398e4:	mov	x1, x25
   398e8:	mov	x0, x20
   398ec:	bl	4f00 <Perl_newRV_noinc@plt>
   398f0:	ldp	x19, x20, [sp, #16]
   398f4:	ldp	x21, x22, [sp, #32]
   398f8:	ldp	x23, x24, [sp, #48]
   398fc:	ldr	x25, [sp, #64]
   39900:	ldp	x29, x30, [sp], #80
   39904:	ret

0000000000039908 <my_reg_named_buff@@Base>:
   39908:	stp	x29, x30, [sp, #-32]!
   3990c:	mov	x29, sp
   39910:	str	x19, [sp, #16]
   39914:	cbz	x1, 39954 <my_reg_named_buff@@Base+0x4c>
   39918:	mov	x19, x0
   3991c:	tbnz	w4, #0, 39978 <my_reg_named_buff@@Base+0x70>
   39920:	tst	w4, #0xe
   39924:	b.ne	39984 <my_reg_named_buff@@Base+0x7c>  // b.any
   39928:	tbnz	w4, #4, 39988 <my_reg_named_buff@@Base+0x80>
   3992c:	tbnz	w4, #11, 399a4 <my_reg_named_buff@@Base+0x9c>
   39930:	mov	w0, #0x1020                	// #4128
   39934:	tst	w4, w0
   39938:	b.eq	399b0 <my_reg_named_buff@@Base+0xa8>  // b.none
   3993c:	mov	w2, w4
   39940:	mov	x0, x19
   39944:	bl	56e0 <my_reg_named_buff_scalar@plt>
   39948:	ldr	x19, [sp, #16]
   3994c:	ldp	x29, x30, [sp], #32
   39950:	ret
   39954:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39958:	add	x3, x3, #0xc10
   3995c:	add	x3, x3, #0x6b8
   39960:	mov	w2, #0x20a9                	// #8361
   39964:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39968:	add	x1, x1, #0xfb8
   3996c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39970:	add	x0, x0, #0x2d8
   39974:	bl	58e0 <__assert_fail@plt>
   39978:	mov	w3, w4
   3997c:	bl	5740 <my_reg_named_buff_fetch@plt>
   39980:	b	39948 <my_reg_named_buff@@Base+0x40>
   39984:	bl	5410 <Perl_croak_no_modify@plt>
   39988:	mov	w3, w4
   3998c:	bl	5770 <my_reg_named_buff_exists@plt>
   39990:	ands	w1, w0, #0xff
   39994:	add	x2, x19, #0x138
   39998:	add	x0, x19, #0x168
   3999c:	csel	x0, x0, x2, eq  // eq = none
   399a0:	b	39948 <my_reg_named_buff@@Base+0x40>
   399a4:	mov	w2, w4
   399a8:	bl	5570 <my_reg_named_buff_all@plt>
   399ac:	b	39948 <my_reg_named_buff@@Base+0x40>
   399b0:	mov	w2, w4
   399b4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   399b8:	add	x1, x1, #0x350
   399bc:	mov	x0, x19
   399c0:	bl	5420 <Perl_croak@plt>

00000000000399c4 <my_reg_numbered_buff_fetch@@Base>:
   399c4:	stp	x29, x30, [sp, #-48]!
   399c8:	mov	x29, sp
   399cc:	stp	x19, x20, [sp, #16]
   399d0:	stp	x21, x22, [sp, #32]
   399d4:	mov	x20, x0
   399d8:	mov	w4, w2
   399dc:	mov	x21, x3
   399e0:	ldr	x19, [x1]
   399e4:	ldr	w0, [x1, #12]
   399e8:	and	w2, w0, #0xff
   399ec:	cmp	w2, #0x8
   399f0:	b.eq	39a1c <my_reg_numbered_buff_fetch@@Base+0x58>  // b.none
   399f4:	mov	w3, #0x80ff                	// #33023
   399f8:	movk	w3, #0x100, lsl #16
   399fc:	and	w0, w0, w3
   39a00:	mov	w3, #0xa                   	// #10
   39a04:	movk	w3, #0x100, lsl #16
   39a08:	cmp	w0, w3
   39a0c:	b.ne	39a70 <my_reg_numbered_buff_fetch@@Base+0xac>  // b.any
   39a10:	cmp	w2, #0xa
   39a14:	b.ne	39a1c <my_reg_numbered_buff_fetch@@Base+0x58>  // b.any
   39a18:	ldr	x19, [x19, #24]
   39a1c:	cbz	x19, 39a94 <my_reg_numbered_buff_fetch@@Base+0xd0>
   39a20:	add	w0, w4, #0x5
   39a24:	cmp	w0, #0x2
   39a28:	b.hi	39d44 <my_reg_numbered_buff_fetch@@Base+0x380>  // b.pmore
   39a2c:	ldr	w0, [x19, #56]
   39a30:	tbnz	w0, #6, 39ac8 <my_reg_numbered_buff_fetch@@Base+0x104>
   39a34:	ldr	x0, [x20, #168]
   39a38:	cbz	x0, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39a3c:	ldr	x3, [x0, #56]
   39a40:	ldr	x2, [x20, #2736]
   39a44:	ldr	x2, [x2, x3, lsl #3]
   39a48:	ldrb	w3, [x2, #12]
   39a4c:	cmp	w3, #0x8
   39a50:	b.eq	39ab8 <my_reg_numbered_buff_fetch@@Base+0xf4>  // b.none
   39a54:	mov	x1, x21
   39a58:	mov	x0, x20
   39a5c:	bl	5700 <Perl_sv_set_undef@plt>
   39a60:	ldp	x19, x20, [sp, #16]
   39a64:	ldp	x21, x22, [sp, #32]
   39a68:	ldp	x29, x30, [sp], #48
   39a6c:	ret
   39a70:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39a74:	add	x3, x3, #0xc10
   39a78:	add	x3, x3, #0x550
   39a7c:	mov	w2, #0xb6                  	// #182
   39a80:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39a84:	add	x1, x1, #0xc80
   39a88:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   39a8c:	add	x0, x0, #0x128
   39a90:	bl	58e0 <__assert_fail@plt>
   39a94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39a98:	add	x3, x3, #0xc10
   39a9c:	add	x3, x3, #0x6d0
   39aa0:	mov	w2, #0x218c                	// #8588
   39aa4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39aa8:	add	x1, x1, #0xfb8
   39aac:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39ab0:	add	x0, x0, #0x2d8
   39ab4:	bl	58e0 <__assert_fail@plt>
   39ab8:	cmp	x2, x1
   39abc:	b.ne	39a54 <my_reg_numbered_buff_fetch@@Base+0x90>  // b.any
   39ac0:	ldr	w0, [x0, #64]
   39ac4:	tbz	w0, #6, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39ac8:	ldr	x0, [x19, #136]
   39acc:	cbz	x0, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39ad0:	cmn	w4, #0x3
   39ad4:	b.ne	39d4c <my_reg_numbered_buff_fetch@@Base+0x388>  // b.any
   39ad8:	mov	w4, #0x0                   	// #0
   39adc:	ldr	w1, [x19, #96]
   39ae0:	cmp	w1, w4
   39ae4:	b.lt	39a54 <my_reg_numbered_buff_fetch@@Base+0x90>  // b.tstop
   39ae8:	sbfiz	x2, x4, #1, #32
   39aec:	add	x4, x2, w4, sxtw
   39af0:	lsl	x4, x4, #3
   39af4:	ldr	x1, [x19, #120]
   39af8:	add	x3, x1, x4
   39afc:	ldr	x2, [x1, x4]
   39b00:	cmn	x2, #0x1
   39b04:	b.eq	39a54 <my_reg_numbered_buff_fetch@@Base+0x90>  // b.none
   39b08:	ldr	x3, [x3, #8]
   39b0c:	cmn	x3, #0x1
   39b10:	b.eq	39a54 <my_reg_numbered_buff_fetch@@Base+0x90>  // b.none
   39b14:	sub	x3, x3, x2
   39b18:	ldr	x1, [x19, #160]
   39b1c:	sub	x2, x2, x1
   39b20:	add	x2, x0, x2
   39b24:	cmp	x2, x0
   39b28:	b.cc	39c00 <my_reg_numbered_buff_fetch@@Base+0x23c>  // b.lo, b.ul, b.last
   39b2c:	sub	x0, x2, x0
   39b30:	add	x0, x0, x3
   39b34:	ldr	x1, [x19, #152]
   39b38:	cmp	x1, x0
   39b3c:	b.cc	39c24 <my_reg_numbered_buff_fetch@@Base+0x260>  // b.lo, b.ul, b.last
   39b40:	tbnz	x3, #63, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39b44:	ldrb	w22, [x20, #185]
   39b48:	strb	wzr, [x20, #185]
   39b4c:	mov	x1, x21
   39b50:	mov	x0, x20
   39b54:	bl	57c0 <Perl_sv_setpvn@plt>
   39b58:	strb	w22, [x20, #185]
   39b5c:	ldr	w0, [x19, #56]
   39b60:	tbz	w0, #20, 39c48 <my_reg_numbered_buff_fetch@@Base+0x284>
   39b64:	ldr	w0, [x21, #12]
   39b68:	orr	w0, w0, #0x20000000
   39b6c:	str	w0, [x21, #12]
   39b70:	ldrb	w1, [x20, #184]
   39b74:	cbz	w1, 39a60 <my_reg_numbered_buff_fetch@@Base+0x9c>
   39b78:	ldr	w1, [x19, #56]
   39b7c:	tbz	w1, #26, 39d34 <my_reg_numbered_buff_fetch@@Base+0x370>
   39b80:	and	w0, w0, #0xff
   39b84:	cmp	w0, #0x6
   39b88:	b.ls	39d0c <my_reg_numbered_buff_fetch@@Base+0x348>  // b.plast
   39b8c:	ldr	x0, [x21]
   39b90:	ldr	x19, [x0, #8]
   39b94:	mov	w0, #0x1                   	// #1
   39b98:	strb	w0, [x20, #185]
   39b9c:	ldrb	w0, [x21, #12]
   39ba0:	cmp	w0, #0x6
   39ba4:	b.ls	39c54 <my_reg_numbered_buff_fetch@@Base+0x290>  // b.plast
   39ba8:	ldr	x0, [x21]
   39bac:	ldr	x1, [x19]
   39bb0:	str	x1, [x0, #8]
   39bb4:	ldrb	w0, [x20, #184]
   39bb8:	cbnz	w0, 39c9c <my_reg_numbered_buff_fetch@@Base+0x2d8>
   39bbc:	ldrb	w0, [x20, #185]
   39bc0:	cbnz	w0, 39c78 <my_reg_numbered_buff_fetch@@Base+0x2b4>
   39bc4:	ldrb	w0, [x21, #12]
   39bc8:	cmp	w0, #0x6
   39bcc:	b.ls	39cc4 <my_reg_numbered_buff_fetch@@Base+0x300>  // b.plast
   39bd0:	ldr	x0, [x21]
   39bd4:	ldr	x0, [x0, #8]
   39bd8:	cbz	x0, 39a60 <my_reg_numbered_buff_fetch@@Base+0x9c>
   39bdc:	str	x0, [x19]
   39be0:	ldrb	w0, [x21, #12]
   39be4:	cmp	w0, #0x6
   39be8:	b.ls	39ce8 <my_reg_numbered_buff_fetch@@Base+0x324>  // b.plast
   39bec:	ldr	x0, [x21]
   39bf0:	str	x19, [x0, #8]
   39bf4:	b	39a60 <my_reg_numbered_buff_fetch@@Base+0x9c>
   39bf8:	tbnz	w4, #31, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39bfc:	b	39adc <my_reg_numbered_buff_fetch@@Base+0x118>
   39c00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39c04:	add	x3, x3, #0xc10
   39c08:	add	x3, x3, #0x6d0
   39c0c:	mov	w2, #0x21c2                	// #8642
   39c10:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39c14:	add	x1, x1, #0xfb8
   39c18:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39c1c:	add	x0, x0, #0x378
   39c20:	bl	58e0 <__assert_fail@plt>
   39c24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39c28:	add	x3, x3, #0xc10
   39c2c:	add	x3, x3, #0x6d0
   39c30:	mov	w2, #0x21c3                	// #8643
   39c34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39c38:	add	x1, x1, #0xfb8
   39c3c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39c40:	add	x0, x0, #0x388
   39c44:	bl	58e0 <__assert_fail@plt>
   39c48:	ldr	w0, [x21, #12]
   39c4c:	and	w0, w0, #0xdfffffff
   39c50:	b	39b6c <my_reg_numbered_buff_fetch@@Base+0x1a8>
   39c54:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39c58:	add	x3, x3, #0xc10
   39c5c:	add	x3, x3, #0x6d0
   39c60:	mov	w2, #0x21d7                	// #8663
   39c64:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39c68:	add	x1, x1, #0xfb8
   39c6c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39c70:	add	x0, x0, #0x3c0
   39c74:	bl	58e0 <__assert_fail@plt>
   39c78:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39c7c:	add	x3, x3, #0xc10
   39c80:	add	x3, x3, #0x6d0
   39c84:	mov	w2, #0x21d8                	// #8664
   39c88:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39c8c:	add	x1, x1, #0xfb8
   39c90:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39c94:	add	x0, x0, #0x3d8
   39c98:	bl	58e0 <__assert_fail@plt>
   39c9c:	ldrb	w0, [x20, #185]
   39ca0:	cbz	w0, 39bc4 <my_reg_numbered_buff_fetch@@Base+0x200>
   39ca4:	mov	w5, #0x0                   	// #0
   39ca8:	mov	x4, #0x0                   	// #0
   39cac:	mov	w3, #0x74                  	// #116
   39cb0:	mov	x2, #0x0                   	// #0
   39cb4:	mov	x1, x21
   39cb8:	mov	x0, x20
   39cbc:	bl	5820 <Perl_sv_magic@plt>
   39cc0:	b	39bc4 <my_reg_numbered_buff_fetch@@Base+0x200>
   39cc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39cc8:	add	x3, x3, #0xc10
   39ccc:	add	x3, x3, #0x6d0
   39cd0:	mov	w2, #0x21d9                	// #8665
   39cd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39cd8:	add	x1, x1, #0xfb8
   39cdc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   39ce0:	add	x0, x0, #0xef8
   39ce4:	bl	58e0 <__assert_fail@plt>
   39ce8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39cec:	add	x3, x3, #0xc10
   39cf0:	add	x3, x3, #0x6d0
   39cf4:	mov	w2, #0x21db                	// #8667
   39cf8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39cfc:	add	x1, x1, #0xfb8
   39d00:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39d04:	add	x0, x0, #0x3c0
   39d08:	bl	58e0 <__assert_fail@plt>
   39d0c:	mov	w0, #0x1                   	// #1
   39d10:	strb	w0, [x20, #185]
   39d14:	mov	w5, #0x0                   	// #0
   39d18:	mov	x4, #0x0                   	// #0
   39d1c:	mov	w3, #0x74                  	// #116
   39d20:	mov	x2, #0x0                   	// #0
   39d24:	mov	x1, x21
   39d28:	mov	x0, x20
   39d2c:	bl	5820 <Perl_sv_magic@plt>
   39d30:	b	39a60 <my_reg_numbered_buff_fetch@@Base+0x9c>
   39d34:	mov	x1, x21
   39d38:	mov	x0, x20
   39d3c:	bl	5270 <Perl_sv_untaint@plt>
   39d40:	b	39a60 <my_reg_numbered_buff_fetch@@Base+0x9c>
   39d44:	ldr	x0, [x19, #136]
   39d48:	cbz	x0, 39a54 <my_reg_numbered_buff_fetch@@Base+0x90>
   39d4c:	cmn	w4, #0x2
   39d50:	ccmn	w4, #0x5, #0x4, ne  // ne = any
   39d54:	b.ne	39d6c <my_reg_numbered_buff_fetch@@Base+0x3a8>  // b.any
   39d58:	ldr	x1, [x19, #120]
   39d5c:	ldr	x3, [x1]
   39d60:	mov	x2, x0
   39d64:	cmn	x3, #0x1
   39d68:	b.ne	39b2c <my_reg_numbered_buff_fetch@@Base+0x168>  // b.any
   39d6c:	cmn	w4, #0x1
   39d70:	ccmn	w4, #0x4, #0x4, ne  // ne = any
   39d74:	b.ne	39bf8 <my_reg_numbered_buff_fetch@@Base+0x234>  // b.any
   39d78:	ldr	x1, [x19, #120]
   39d7c:	ldr	x5, [x1, #8]
   39d80:	cmn	x5, #0x1
   39d84:	b.eq	39bf8 <my_reg_numbered_buff_fetch@@Base+0x234>  // b.none
   39d88:	ldr	x1, [x19, #160]
   39d8c:	sub	x2, x5, x1
   39d90:	add	x2, x0, x2
   39d94:	ldr	x3, [x19, #152]
   39d98:	add	x3, x1, x3
   39d9c:	sub	x3, x3, x5
   39da0:	b	39b24 <my_reg_numbered_buff_fetch@@Base+0x160>

0000000000039da4 <my_reg_numbered_buff_store@@Base>:
   39da4:	stp	x29, x30, [sp, #-16]!
   39da8:	mov	x29, sp
   39dac:	cbz	x1, 39dc0 <my_reg_numbered_buff_store@@Base+0x1c>
   39db0:	ldrb	w0, [x0, #188]
   39db4:	cbz	w0, 39de4 <my_reg_numbered_buff_store@@Base+0x40>
   39db8:	ldp	x29, x30, [sp], #16
   39dbc:	ret
   39dc0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39dc4:	add	x3, x3, #0xc10
   39dc8:	add	x3, x3, #0x6f0
   39dcc:	mov	w2, #0x21ef                	// #8687
   39dd0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39dd4:	add	x1, x1, #0xfb8
   39dd8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39ddc:	add	x0, x0, #0x2d8
   39de0:	bl	58e0 <__assert_fail@plt>
   39de4:	bl	5410 <Perl_croak_no_modify@plt>

0000000000039de8 <my_reg_numbered_buff_length@@Base>:
   39de8:	stp	x29, x30, [sp, #-64]!
   39dec:	mov	x29, sp
   39df0:	stp	x19, x20, [sp, #16]
   39df4:	mov	x20, x0
   39df8:	mov	x19, x2
   39dfc:	ldr	x4, [x1]
   39e00:	ldr	w0, [x1, #12]
   39e04:	and	w2, w0, #0xff
   39e08:	cmp	w2, #0x8
   39e0c:	b.eq	39e38 <my_reg_numbered_buff_length@@Base+0x50>  // b.none
   39e10:	mov	w5, #0x80ff                	// #33023
   39e14:	movk	w5, #0x100, lsl #16
   39e18:	and	w0, w0, w5
   39e1c:	mov	w5, #0xa                   	// #10
   39e20:	movk	w5, #0x100, lsl #16
   39e24:	cmp	w0, w5
   39e28:	b.ne	39ea4 <my_reg_numbered_buff_length@@Base+0xbc>  // b.any
   39e2c:	cmp	w2, #0xa
   39e30:	b.ne	39e38 <my_reg_numbered_buff_length@@Base+0x50>  // b.any
   39e34:	ldr	x4, [x4, #24]
   39e38:	cbz	x4, 39ed0 <my_reg_numbered_buff_length@@Base+0xe8>
   39e3c:	cbz	x19, 39efc <my_reg_numbered_buff_length@@Base+0x114>
   39e40:	stp	x21, x22, [sp, #32]
   39e44:	add	w0, w3, #0x5
   39e48:	cmp	w0, #0x2
   39e4c:	b.hi	39f38 <my_reg_numbered_buff_length@@Base+0x150>  // b.pmore
   39e50:	ldr	w0, [x4, #56]
   39e54:	tbnz	w0, #6, 39f38 <my_reg_numbered_buff_length@@Base+0x150>
   39e58:	ldr	x0, [x20, #168]
   39e5c:	cbz	x0, 39e78 <my_reg_numbered_buff_length@@Base+0x90>
   39e60:	ldr	x5, [x0, #56]
   39e64:	ldr	x2, [x20, #2736]
   39e68:	ldr	x2, [x2, x5, lsl #3]
   39e6c:	ldrb	w5, [x2, #12]
   39e70:	cmp	w5, #0x8
   39e74:	b.eq	39f28 <my_reg_numbered_buff_length@@Base+0x140>  // b.none
   39e78:	mov	w1, #0x29                  	// #41
   39e7c:	mov	x0, x20
   39e80:	bl	5870 <Perl_ckwarn@plt>
   39e84:	and	w0, w0, #0xff
   39e88:	mov	w21, #0x0                   	// #0
   39e8c:	cbnz	w0, 3a000 <my_reg_numbered_buff_length@@Base+0x218>
   39e90:	mov	w0, w21
   39e94:	ldp	x21, x22, [sp, #32]
   39e98:	ldp	x19, x20, [sp, #16]
   39e9c:	ldp	x29, x30, [sp], #64
   39ea0:	ret
   39ea4:	stp	x21, x22, [sp, #32]
   39ea8:	stp	x23, x24, [sp, #48]
   39eac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39eb0:	add	x3, x3, #0xc10
   39eb4:	add	x3, x3, #0x550
   39eb8:	mov	w2, #0xb6                  	// #182
   39ebc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   39ec0:	add	x1, x1, #0xc80
   39ec4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   39ec8:	add	x0, x0, #0x128
   39ecc:	bl	58e0 <__assert_fail@plt>
   39ed0:	stp	x21, x22, [sp, #32]
   39ed4:	stp	x23, x24, [sp, #48]
   39ed8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39edc:	add	x3, x3, #0xc10
   39ee0:	add	x3, x3, #0x710
   39ee4:	mov	w2, #0x2201                	// #8705
   39ee8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39eec:	add	x1, x1, #0xfb8
   39ef0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   39ef4:	add	x0, x0, #0x2d8
   39ef8:	bl	58e0 <__assert_fail@plt>
   39efc:	stp	x21, x22, [sp, #32]
   39f00:	stp	x23, x24, [sp, #48]
   39f04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   39f08:	add	x3, x3, #0xc10
   39f0c:	add	x3, x3, #0x710
   39f10:	mov	w2, #0x2201                	// #8705
   39f14:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   39f18:	add	x1, x1, #0xfb8
   39f1c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   39f20:	add	x0, x0, #0x970
   39f24:	bl	58e0 <__assert_fail@plt>
   39f28:	cmp	x2, x1
   39f2c:	b.ne	39e78 <my_reg_numbered_buff_length@@Base+0x90>  // b.any
   39f30:	ldr	w0, [x0, #64]
   39f34:	tbz	w0, #6, 39e78 <my_reg_numbered_buff_length@@Base+0x90>
   39f38:	cmn	w3, #0x2
   39f3c:	b.eq	39fdc <my_reg_numbered_buff_length@@Base+0x1f4>  // b.none
   39f40:	cmn	w3, #0x1
   39f44:	b.ge	39f88 <my_reg_numbered_buff_length@@Base+0x1a0>  // b.tcont
   39f48:	cmn	w3, #0x5
   39f4c:	b.eq	39fdc <my_reg_numbered_buff_length@@Base+0x1f4>  // b.none
   39f50:	cmn	w3, #0x4
   39f54:	b.ne	39f8c <my_reg_numbered_buff_length@@Base+0x1a4>  // b.any
   39f58:	ldr	x0, [x4, #120]
   39f5c:	ldr	x1, [x0, #8]
   39f60:	cmn	x1, #0x1
   39f64:	b.eq	3a1e0 <my_reg_numbered_buff_length@@Base+0x3f8>  // b.none
   39f68:	ldr	x21, [x4, #152]
   39f6c:	mov	w0, w21
   39f70:	mov	w2, w1
   39f74:	sub	w21, w21, w1
   39f78:	cmp	w21, #0x0
   39f7c:	b.gt	3a20c <my_reg_numbered_buff_length@@Base+0x424>
   39f80:	mov	w21, #0x0                   	// #0
   39f84:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   39f88:	b.eq	39f58 <my_reg_numbered_buff_length@@Base+0x170>  // b.none
   39f8c:	ldr	w0, [x4, #96]
   39f90:	cmp	w0, w3
   39f94:	b.lt	39e78 <my_reg_numbered_buff_length@@Base+0x90>  // b.tstop
   39f98:	sbfiz	x0, x3, #1, #32
   39f9c:	add	x3, x0, w3, sxtw
   39fa0:	lsl	x3, x3, #3
   39fa4:	ldr	x0, [x4, #120]
   39fa8:	add	x5, x0, x3
   39fac:	ldr	x1, [x0, x3]
   39fb0:	mov	w2, w1
   39fb4:	cmn	w1, #0x1
   39fb8:	b.eq	39e78 <my_reg_numbered_buff_length@@Base+0x90>  // b.none
   39fbc:	ldr	x21, [x5, #8]
   39fc0:	mov	w0, w21
   39fc4:	cmn	w21, #0x1
   39fc8:	b.eq	39e78 <my_reg_numbered_buff_length@@Base+0x90>  // b.none
   39fcc:	sub	w21, w21, w1
   39fd0:	cmp	w21, #0x0
   39fd4:	b.le	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   39fd8:	b	3a20c <my_reg_numbered_buff_length@@Base+0x424>
   39fdc:	ldr	x0, [x4, #120]
   39fe0:	ldr	x0, [x0]
   39fe4:	cmn	x0, #0x1
   39fe8:	b.eq	3a1d8 <my_reg_numbered_buff_length@@Base+0x3f0>  // b.none
   39fec:	mov	w21, w0
   39ff0:	cmp	w0, #0x0
   39ff4:	b.gt	3a208 <my_reg_numbered_buff_length@@Base+0x420>
   39ff8:	mov	w21, #0x0                   	// #0
   39ffc:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a000:	mov	x1, x19
   3a004:	mov	x0, x20
   3a008:	bl	5810 <Perl_report_uninit@plt>
   3a00c:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a010:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a014:	add	x3, x3, #0xc10
   3a018:	add	x3, x3, #0x730
   3a01c:	mov	w2, #0x3cc                 	// #972
   3a020:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   3a024:	add	x1, x1, #0xc80
   3a028:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a02c:	add	x0, x0, #0xce8
   3a030:	bl	58e0 <__assert_fail@plt>
   3a034:	add	x20, x23, x22
   3a038:	and	x1, x23, #0x7
   3a03c:	orr	x0, x23, x23, lsr #1
   3a040:	ubfx	x2, x23, #2, #1
   3a044:	orr	x0, x0, x2
   3a048:	and	x0, x0, #0x1
   3a04c:	add	x0, x0, #0x1
   3a050:	lsl	x0, x0, #3
   3a054:	sub	x0, x0, x1
   3a058:	cmp	x22, x0
   3a05c:	b.cc	3a118 <my_reg_numbered_buff_length@@Base+0x330>  // b.lo, b.ul, b.last
   3a060:	cbz	x1, 3a09c <my_reg_numbered_buff_length@@Base+0x2b4>
   3a064:	mov	x19, x23
   3a068:	ldrsb	w0, [x19]
   3a06c:	tbnz	w0, #31, 3a1e8 <my_reg_numbered_buff_length@@Base+0x400>
   3a070:	add	x19, x19, #0x1
   3a074:	tst	x19, #0x7
   3a078:	b.ne	3a068 <my_reg_numbered_buff_length@@Base+0x280>  // b.any
   3a07c:	ldr	x0, [x19]
   3a080:	tst	x0, #0x8080808080808080
   3a084:	b.ne	3a0a4 <my_reg_numbered_buff_length@@Base+0x2bc>  // b.any
   3a088:	add	x19, x19, #0x8
   3a08c:	add	x0, x19, #0x8
   3a090:	cmp	x20, x0
   3a094:	b.cs	3a07c <my_reg_numbered_buff_length@@Base+0x294>  // b.hs, b.nlast
   3a098:	b	3a254 <my_reg_numbered_buff_length@@Base+0x46c>
   3a09c:	mov	x19, x23
   3a0a0:	b	3a07c <my_reg_numbered_buff_length@@Base+0x294>
   3a0a4:	lsr	x0, x0, #1
   3a0a8:	and	x0, x0, #0x4040404040404040
   3a0ac:	sub	x1, x0, #0x1
   3a0b0:	eor	x0, x1, x0
   3a0b4:	add	x0, x0, #0x1
   3a0b8:	lsr	x0, x0, #7
   3a0bc:	mov	x1, #0x373f                	// #14143
   3a0c0:	movk	x1, #0x272f, lsl #16
   3a0c4:	movk	x1, #0x171f, lsl #32
   3a0c8:	movk	x1, #0x70f, lsl #48
   3a0cc:	mul	x0, x0, x1
   3a0d0:	lsr	x0, x0, #56
   3a0d4:	add	x0, x0, #0x1
   3a0d8:	lsr	x0, x0, #3
   3a0dc:	sub	w0, w0, #0x1
   3a0e0:	add	x19, x19, x0
   3a0e4:	cmp	x20, x19
   3a0e8:	sub	x22, x19, x23
   3a0ec:	ccmp	x23, x19, #0x2, hi  // hi = pmore
   3a0f0:	b.ls	3a1f8 <my_reg_numbered_buff_length@@Base+0x410>  // b.plast
   3a0f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a0f8:	add	x3, x3, #0xc10
   3a0fc:	add	x3, x3, #0x750
   3a100:	mov	w2, #0x1d6                 	// #470
   3a104:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   3a108:	add	x1, x1, #0xc80
   3a10c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3a110:	add	x0, x0, #0x3f8
   3a114:	bl	58e0 <__assert_fail@plt>
   3a118:	mov	x19, x23
   3a11c:	b	3a254 <my_reg_numbered_buff_length@@Base+0x46c>
   3a120:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a124:	add	x3, x3, #0xc10
   3a128:	add	x3, x3, #0x770
   3a12c:	mov	w2, #0x422                 	// #1058
   3a130:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   3a134:	add	x1, x1, #0xc80
   3a138:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3a13c:	add	x0, x0, #0x410
   3a140:	bl	58e0 <__assert_fail@plt>
   3a144:	add	x2, x2, #0x1
   3a148:	cmp	x1, #0x1
   3a14c:	ccmp	x20, x2, #0x0, ne  // ne = any
   3a150:	b.hi	3a1b4 <my_reg_numbered_buff_length@@Base+0x3cc>  // b.pmore
   3a154:	ldrb	w0, [x19]
   3a158:	cmp	w0, #0xff
   3a15c:	b.eq	3a170 <my_reg_numbered_buff_length@@Base+0x388>  // b.none
   3a160:	cmp	x19, x20
   3a164:	b.eq	3a270 <my_reg_numbered_buff_length@@Base+0x488>  // b.none
   3a168:	ldp	x23, x24, [sp, #48]
   3a16c:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a170:	sub	x0, x20, x19
   3a174:	cmp	x0, #0xc
   3a178:	b.le	3a160 <my_reg_numbered_buff_length@@Base+0x378>
   3a17c:	mov	w2, #0x0                   	// #0
   3a180:	mov	x1, x20
   3a184:	mov	x0, x19
   3a188:	bl	5190 <Perl__is_utf8_char_helper@plt>
   3a18c:	mov	x2, x0
   3a190:	cbz	x2, 3a160 <my_reg_numbered_buff_length@@Base+0x378>
   3a194:	add	x19, x19, x2
   3a198:	add	x22, x22, #0x1
   3a19c:	cmp	x20, x19
   3a1a0:	b.ls	3a160 <my_reg_numbered_buff_length@@Base+0x378>  // b.plast
   3a1a4:	cmp	x20, x19
   3a1a8:	b.ls	3a154 <my_reg_numbered_buff_length@@Base+0x36c>  // b.plast
   3a1ac:	mov	x2, x19
   3a1b0:	mov	x1, x24
   3a1b4:	ldrb	w0, [x2]
   3a1b8:	ldrb	w0, [x23, w0, sxtw]
   3a1bc:	add	x1, x23, x1
   3a1c0:	add	x1, x1, x0
   3a1c4:	ldrb	w1, [x1, #256]
   3a1c8:	cbnz	x1, 3a144 <my_reg_numbered_buff_length@@Base+0x35c>
   3a1cc:	sub	x2, x2, x19
   3a1d0:	add	x2, x2, #0x1
   3a1d4:	b	3a190 <my_reg_numbered_buff_length@@Base+0x3a8>
   3a1d8:	mov	w21, #0x0                   	// #0
   3a1dc:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a1e0:	mov	w21, #0x0                   	// #0
   3a1e4:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a1e8:	sub	x22, x19, x23
   3a1ec:	cmp	x19, x20
   3a1f0:	b.cs	3a160 <my_reg_numbered_buff_length@@Base+0x378>  // b.hs, b.nlast
   3a1f4:	cbz	x19, 3a120 <my_reg_numbered_buff_length@@Base+0x338>
   3a1f8:	mov	x24, #0x0                   	// #0
   3a1fc:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   3a200:	ldr	x23, [x23, #4016]
   3a204:	b	3a1a4 <my_reg_numbered_buff_length@@Base+0x3bc>
   3a208:	mov	w2, #0x0                   	// #0
   3a20c:	ldr	w1, [x4, #56]
   3a210:	tbz	w1, #20, 39e90 <my_reg_numbered_buff_length@@Base+0xa8>
   3a214:	stp	x23, x24, [sp, #48]
   3a218:	sxtw	x23, w2
   3a21c:	ldr	x1, [x4, #160]
   3a220:	sub	x1, x23, x1
   3a224:	ldr	x23, [x4, #136]
   3a228:	sub	w21, w0, w2
   3a22c:	sxtw	x22, w21
   3a230:	adds	x23, x23, x1
   3a234:	b.eq	3a010 <my_reg_numbered_buff_length@@Base+0x228>  // b.none
   3a238:	cbnz	x22, 3a034 <my_reg_numbered_buff_length@@Base+0x24c>
   3a23c:	mov	x0, x23
   3a240:	bl	4ed0 <strlen@plt>
   3a244:	mov	x22, x0
   3a248:	cbnz	x0, 3a034 <my_reg_numbered_buff_length@@Base+0x24c>
   3a24c:	mov	x20, x23
   3a250:	mov	x19, x23
   3a254:	cmp	x19, x20
   3a258:	b.cs	3a270 <my_reg_numbered_buff_length@@Base+0x488>  // b.hs, b.nlast
   3a25c:	ldrsb	w0, [x19]
   3a260:	tbnz	w0, #31, 3a1e8 <my_reg_numbered_buff_length@@Base+0x400>
   3a264:	add	x19, x19, #0x1
   3a268:	cmp	x19, x20
   3a26c:	b.ne	3a25c <my_reg_numbered_buff_length@@Base+0x474>  // b.any
   3a270:	mov	w21, w22
   3a274:	ldp	x23, x24, [sp, #48]
   3a278:	b	39e90 <my_reg_numbered_buff_length@@Base+0xa8>

000000000003a27c <my_reg_qr_package@@Base>:
   3a27c:	stp	x29, x30, [sp, #-16]!
   3a280:	mov	x29, sp
   3a284:	cbz	x1, 3a2a0 <my_reg_qr_package@@Base+0x24>
   3a288:	mov	x2, #0x6                   	// #6
   3a28c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3a290:	add	x1, x1, #0x418
   3a294:	bl	59a0 <Perl_newSVpvn@plt>
   3a298:	ldp	x29, x30, [sp], #16
   3a29c:	ret
   3a2a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a2a4:	add	x3, x3, #0xc10
   3a2a8:	add	x3, x3, #0x780
   3a2ac:	mov	w2, #0x224d                	// #8781
   3a2b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a2b4:	add	x1, x1, #0xfb8
   3a2b8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3a2bc:	add	x0, x0, #0x2d8
   3a2c0:	bl	58e0 <__assert_fail@plt>

000000000003a2c4 <my_regprop@@Base>:
   3a2c4:	sub	sp, sp, #0x100
   3a2c8:	stp	x29, x30, [sp, #16]
   3a2cc:	add	x29, sp, #0x10
   3a2d0:	stp	x19, x20, [sp, #32]
   3a2d4:	stp	x21, x22, [sp, #48]
   3a2d8:	stp	x23, x24, [sp, #64]
   3a2dc:	stp	x25, x26, [sp, #80]
   3a2e0:	mov	x19, x0
   3a2e4:	mov	x22, x1
   3a2e8:	mov	x20, x2
   3a2ec:	mov	x21, x3
   3a2f0:	str	x4, [sp, #120]
   3a2f4:	mov	x26, x5
   3a2f8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a2fc:	ldr	x0, [x0, #3920]
   3a300:	ldr	x1, [x0]
   3a304:	str	x1, [sp, #248]
   3a308:	mov	x1, #0x0                   	// #0
   3a30c:	ldr	x24, [x22, #104]
   3a310:	str	xzr, [sp, #152]
   3a314:	ldr	x0, [x19, #224]
   3a318:	cbz	x0, 3a380 <my_regprop@@Base+0xbc>
   3a31c:	mov	w2, #0x1                   	// #1
   3a320:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3a324:	add	x1, x1, #0x608
   3a328:	mov	x0, x19
   3a32c:	bl	54f0 <Perl_get_sv@plt>
   3a330:	mov	x23, x0
   3a334:	cbz	x0, 3a380 <my_regprop@@Base+0xbc>
   3a338:	ldr	w0, [x0, #12]
   3a33c:	tbz	w0, #8, 3a4ac <my_regprop@@Base+0x1e8>
   3a340:	ldr	w1, [x23, #12]
   3a344:	and	w0, w1, #0x3fff00
   3a348:	and	w0, w0, #0xffe001ff
   3a34c:	cmp	w0, #0x100
   3a350:	b.ne	3a520 <my_regprop@@Base+0x25c>  // b.any
   3a354:	and	w2, w1, #0xf
   3a358:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a35c:	ldr	x0, [x0, #3712]
   3a360:	ldrb	w0, [x0, w2, uxtw]
   3a364:	cbz	w0, 3a4c0 <my_regprop@@Base+0x1fc>
   3a368:	and	w0, w1, #0xc000
   3a36c:	cmp	w0, #0x8, lsl #12
   3a370:	b.eq	3a4e8 <my_regprop@@Base+0x224>  // b.none
   3a374:	ldr	x0, [x23]
   3a378:	ldr	x0, [x0, #32]
   3a37c:	str	x0, [sp, #152]
   3a380:	cbz	x20, 3a534 <my_regprop@@Base+0x270>
   3a384:	cbz	x21, 3a55c <my_regprop@@Base+0x298>
   3a388:	mov	x3, #0x0                   	// #0
   3a38c:	mov	x2, #0x0                   	// #0
   3a390:	mov	x1, x20
   3a394:	mov	x0, x19
   3a398:	bl	5830 <Perl_sv_setpv_bufsize@plt>
   3a39c:	ldrb	w2, [x21, #1]
   3a3a0:	cmp	w2, #0x65
   3a3a4:	b.hi	3a584 <my_regprop@@Base+0x2c0>  // b.pmore
   3a3a8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a3ac:	ldr	x0, [x0, #3776]
   3a3b0:	ldr	x2, [x0, w2, sxtw #3]
   3a3b4:	mov	x1, x20
   3a3b8:	mov	x0, x19
   3a3bc:	bl	57f0 <Perl_sv_catpv@plt>
   3a3c0:	ldrb	w25, [x21, #1]
   3a3c4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a3c8:	ldr	x0, [x0, #3768]
   3a3cc:	ldrb	w23, [x0, w25, sxtw]
   3a3d0:	cmp	w23, #0x23
   3a3d4:	b.eq	3a59c <my_regprop@@Base+0x2d8>  // b.none
   3a3d8:	cmp	w23, #0x51
   3a3dc:	b.eq	3a5e0 <my_regprop@@Base+0x31c>  // b.none
   3a3e0:	cmp	w23, #0x33
   3a3e4:	b.eq	3a6d4 <my_regprop@@Base+0x410>  // b.none
   3a3e8:	cmp	w23, #0x37
   3a3ec:	b.eq	3a784 <my_regprop@@Base+0x4c0>  // b.none
   3a3f0:	cmp	w23, #0x3c
   3a3f4:	cset	w0, eq  // eq = none
   3a3f8:	str	w0, [sp, #132]
   3a3fc:	and	w0, w23, #0xfffffffb
   3a400:	and	w0, w0, #0xff
   3a404:	cmp	w0, #0x38
   3a408:	b.ne	3a83c <my_regprop@@Base+0x578>  // b.any
   3a40c:	cmp	w25, #0x5b
   3a410:	b.eq	3a864 <my_regprop@@Base+0x5a0>  // b.none
   3a414:	ldr	w25, [x21, #4]
   3a418:	mov	w3, w25
   3a41c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a420:	add	x2, x2, #0x4b8
   3a424:	mov	x1, x20
   3a428:	mov	x0, x19
   3a42c:	bl	5120 <Perl_sv_catpvf@plt>
   3a430:	ldr	x0, [x22, #48]
   3a434:	cbz	x0, 3a86c <my_regprop@@Base+0x5a8>
   3a438:	ldr	x1, [x24, #24]
   3a43c:	ldrsw	x0, [x24]
   3a440:	add	x0, x0, #0x2
   3a444:	ldr	x1, [x1, x0, lsl #3]
   3a448:	cbz	x1, 3a48c <my_regprop@@Base+0x1c8>
   3a44c:	cmp	w23, #0x3c
   3a450:	b.ne	3a460 <my_regprop@@Base+0x19c>  // b.any
   3a454:	ldrb	w0, [x21, #1]
   3a458:	cmp	w0, #0x40
   3a45c:	b.hi	3a878 <my_regprop@@Base+0x5b4>  // b.pmore
   3a460:	mov	w3, #0x0                   	// #0
   3a464:	mov	w2, w25
   3a468:	mov	x0, x19
   3a46c:	bl	56f0 <Perl_av_fetch@plt>
   3a470:	cbz	x0, 3a48c <my_regprop@@Base+0x1c8>
   3a474:	ldr	x3, [x0]
   3a478:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a47c:	add	x2, x2, #0x4c0
   3a480:	mov	x1, x20
   3a484:	mov	x0, x19
   3a488:	bl	5120 <Perl_sv_catpvf@plt>
   3a48c:	ldr	x0, [sp, #120]
   3a490:	cmp	x0, #0x0
   3a494:	ldr	w0, [sp, #132]
   3a498:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   3a49c:	b.ne	3aa78 <my_regprop@@Base+0x7b4>  // b.any
   3a4a0:	cmp	w23, #0x5c
   3a4a4:	b.eq	3b790 <my_regprop@@Base+0x14cc>  // b.none
   3a4a8:	b	3b77c <my_regprop@@Base+0x14b8>
   3a4ac:	mov	x2, #0xff08                	// #65288
   3a4b0:	mov	x1, x23
   3a4b4:	mov	x0, x19
   3a4b8:	bl	5310 <Perl_sv_setuv@plt>
   3a4bc:	b	3a340 <my_regprop@@Base+0x7c>
   3a4c0:	stp	x27, x28, [sp, #96]
   3a4c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a4c8:	add	x3, x3, #0xc10
   3a4cc:	add	x3, x3, #0x798
   3a4d0:	mov	w2, #0x4ee8                	// #20200
   3a4d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a4d8:	add	x1, x1, #0xfb8
   3a4dc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a4e0:	add	x0, x0, #0xda0
   3a4e4:	bl	58e0 <__assert_fail@plt>
   3a4e8:	and	w1, w1, #0xff
   3a4ec:	sub	w1, w1, #0x9
   3a4f0:	cmp	w1, #0x1
   3a4f4:	b.hi	3a374 <my_regprop@@Base+0xb0>  // b.pmore
   3a4f8:	stp	x27, x28, [sp, #96]
   3a4fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a500:	add	x3, x3, #0xc10
   3a504:	add	x3, x3, #0x798
   3a508:	mov	w2, #0x4ee8                	// #20200
   3a50c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a510:	add	x1, x1, #0xfb8
   3a514:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a518:	add	x0, x0, #0xdd0
   3a51c:	bl	58e0 <__assert_fail@plt>
   3a520:	mov	w2, #0x2                   	// #2
   3a524:	mov	x1, x23
   3a528:	mov	x0, x19
   3a52c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3a530:	b	3a37c <my_regprop@@Base+0xb8>
   3a534:	stp	x27, x28, [sp, #96]
   3a538:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a53c:	add	x3, x3, #0xc10
   3a540:	add	x3, x3, #0x798
   3a544:	mov	w2, #0x4eea                	// #20202
   3a548:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a54c:	add	x1, x1, #0xfb8
   3a550:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3a554:	add	x0, x0, #0x970
   3a558:	bl	58e0 <__assert_fail@plt>
   3a55c:	stp	x27, x28, [sp, #96]
   3a560:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a564:	add	x3, x3, #0xc10
   3a568:	add	x3, x3, #0x798
   3a56c:	mov	w2, #0x4eea                	// #20202
   3a570:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a574:	add	x1, x1, #0xfb8
   3a578:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3a57c:	add	x0, x0, #0x430
   3a580:	bl	58e0 <__assert_fail@plt>
   3a584:	stp	x27, x28, [sp, #96]
   3a588:	mov	w3, #0x65                  	// #101
   3a58c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3a590:	add	x1, x1, #0x438
   3a594:	mov	x0, x19
   3a598:	bl	5420 <Perl_croak@plt>
   3a59c:	mov	w4, #0x2                   	// #2
   3a5a0:	mov	x3, #0x1                   	// #1
   3a5a4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3a5a8:	add	x2, x2, #0x1b8
   3a5ac:	mov	x1, x20
   3a5b0:	mov	x0, x19
   3a5b4:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a5b8:	mov	x2, x21
   3a5bc:	mov	w7, #0x4606                	// #17926
   3a5c0:	ldr	x6, [x19, #1456]
   3a5c4:	ldr	x5, [x19, #1448]
   3a5c8:	ldr	x4, [x19, #3360]
   3a5cc:	ldrb	w3, [x2], #4
   3a5d0:	mov	x1, x20
   3a5d4:	mov	x0, x19
   3a5d8:	bl	53f0 <Perl_pv_pretty@plt>
   3a5dc:	b	3b77c <my_regprop@@Base+0x14b8>
   3a5e0:	ldr	w0, [x21, #4]
   3a5e4:	cmp	w25, #0x52
   3a5e8:	b.ls	3b7f4 <my_regprop@@Base+0x1530>  // b.plast
   3a5ec:	ldr	x2, [x24, #24]
   3a5f0:	add	x1, x2, w0, uxtw #3
   3a5f4:	ldr	x0, [x1, #16]
   3a5f8:	ldr	w0, [x0, #4]
   3a5fc:	add	x0, x2, w0, uxtw #3
   3a600:	ldr	x22, [x0, #16]
   3a604:	ldrb	w1, [x21]
   3a608:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a60c:	ldr	x0, [x0, #3776]
   3a610:	ldr	x3, [x0, x1, lsl #3]
   3a614:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a618:	add	x2, x2, #0x458
   3a61c:	mov	x1, x20
   3a620:	mov	x0, x19
   3a624:	bl	5120 <Perl_sv_catpvf@plt>
   3a628:	ldr	w0, [x19, #2368]
   3a62c:	tbnz	w0, #20, 3a638 <my_regprop@@Base+0x374>
   3a630:	ldr	x0, [sp, #152]
   3a634:	tbz	w0, #2, 3a698 <my_regprop@@Base+0x3d4>
   3a638:	ldr	x0, [x22, #40]
   3a63c:	cbz	x0, 3a65c <my_regprop@@Base+0x398>
   3a640:	mov	w4, #0x2                   	// #2
   3a644:	mov	x3, #0x6                   	// #6
   3a648:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a64c:	add	x2, x2, #0x460
   3a650:	mov	x1, x20
   3a654:	mov	x0, x19
   3a658:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a65c:	ldr	x7, [x22, #72]
   3a660:	ldr	x6, [x22, #64]
   3a664:	ldr	w5, [x22, #88]
   3a668:	ldr	w4, [x22, #84]
   3a66c:	ldr	w3, [x22, #60]
   3a670:	ldrh	w0, [x22, #56]
   3a674:	str	x0, [sp, #8]
   3a678:	ldr	x0, [x22, #96]
   3a67c:	str	x0, [sp]
   3a680:	sub	x4, x4, #0x1
   3a684:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a688:	add	x2, x2, #0x468
   3a68c:	mov	x1, x20
   3a690:	mov	x0, x19
   3a694:	bl	5120 <Perl_sv_catpvf@plt>
   3a698:	sub	w25, w25, #0x52
   3a69c:	and	w25, w25, #0xfffffffd
   3a6a0:	tst	w25, #0xff
   3a6a4:	b.eq	3b724 <my_regprop@@Base+0x1460>  // b.none
   3a6a8:	ldr	x0, [x22, #32]
   3a6ac:	cbz	x0, 3b77c <my_regprop@@Base+0x14b8>
   3a6b0:	mov	w4, #0x2                   	// #2
   3a6b4:	mov	x3, #0x1                   	// #1
   3a6b8:	adrp	x2, 64000 <boot_re@@Base+0x241c>
   3a6bc:	add	x2, x2, #0xa10
   3a6c0:	mov	x1, x20
   3a6c4:	mov	x0, x19
   3a6c8:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a6cc:	ldr	x2, [x22, #32]
   3a6d0:	b	3b744 <my_regprop@@Base+0x1480>
   3a6d4:	ldrh	w23, [x21, #4]
   3a6d8:	ldrh	w22, [x21, #6]
   3a6dc:	sub	w25, w25, #0x34
   3a6e0:	and	w25, w25, #0xff
   3a6e4:	cmp	w25, #0x2
   3a6e8:	b.ls	3a748 <my_regprop@@Base+0x484>  // b.plast
   3a6ec:	mov	w3, w23
   3a6f0:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a6f4:	add	x2, x2, #0x498
   3a6f8:	mov	x1, x20
   3a6fc:	mov	x0, x19
   3a700:	bl	5120 <Perl_sv_catpvf@plt>
   3a704:	mov	w0, #0xffff                	// #65535
   3a708:	cmp	w22, w0
   3a70c:	b.eq	3a764 <my_regprop@@Base+0x4a0>  // b.none
   3a710:	mov	w3, w22
   3a714:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a718:	add	x2, x2, #0x4a8
   3a71c:	mov	x1, x20
   3a720:	mov	x0, x19
   3a724:	bl	5120 <Perl_sv_catpvf@plt>
   3a728:	mov	w4, #0x2                   	// #2
   3a72c:	mov	x3, #0x1                   	// #1
   3a730:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   3a734:	add	x2, x2, #0x1d0
   3a738:	mov	x1, x20
   3a73c:	mov	x0, x19
   3a740:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a744:	b	3b77c <my_regprop@@Base+0x14b8>
   3a748:	ldrb	w3, [x21]
   3a74c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a750:	add	x2, x2, #0x490
   3a754:	mov	x1, x20
   3a758:	mov	x0, x19
   3a75c:	bl	5120 <Perl_sv_catpvf@plt>
   3a760:	b	3a6ec <my_regprop@@Base+0x428>
   3a764:	mov	w4, #0x2                   	// #2
   3a768:	mov	x3, #0x5                   	// #5
   3a76c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a770:	add	x2, x2, #0x4a0
   3a774:	mov	x1, x20
   3a778:	mov	x0, x19
   3a77c:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a780:	b	3a728 <my_regprop@@Base+0x464>
   3a784:	ldrb	w3, [x21]
   3a788:	cbnz	w3, 3a81c <my_regprop@@Base+0x558>
   3a78c:	cmp	w23, #0x39
   3a790:	mov	w0, #0x4c                  	// #76
   3a794:	ccmp	w23, w0, #0x4, ne  // ne = any
   3a798:	str	wzr, [sp, #132]
   3a79c:	mov	w0, #0x5b                  	// #91
   3a7a0:	ccmp	w25, w0, #0x4, ne  // ne = any
   3a7a4:	b.eq	3a40c <my_regprop@@Base+0x148>  // b.none
   3a7a8:	and	w0, w23, #0xfffffffb
   3a7ac:	and	w0, w0, #0xff
   3a7b0:	cmp	w0, #0x19
   3a7b4:	b.ne	3b5b4 <my_regprop@@Base+0x12f0>  // b.any
   3a7b8:	ldrb	w3, [x21]
   3a7bc:	ubfiz	w3, w3, #1, #7
   3a7c0:	cmp	w3, #0x1f
   3a7c4:	b.hi	3b59c <my_regprop@@Base+0x12d8>  // b.pmore
   3a7c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3a7cc:	add	x0, x0, #0xb30
   3a7d0:	ldr	x22, [x0, w3, sxtw #3]
   3a7d4:	ldrb	w0, [x22]
   3a7d8:	cmp	w0, #0x5b
   3a7dc:	b.ne	3b57c <my_regprop@@Base+0x12b8>  // b.any
   3a7e0:	mov	x2, x22
   3a7e4:	mov	x1, x20
   3a7e8:	mov	x0, x19
   3a7ec:	bl	57f0 <Perl_sv_catpv@plt>
   3a7f0:	ldrb	w0, [x22]
   3a7f4:	cmp	w0, #0x5b
   3a7f8:	b.eq	3a4a0 <my_regprop@@Base+0x1dc>  // b.none
   3a7fc:	mov	w4, #0x2                   	// #2
   3a800:	mov	x3, #0x1                   	// #1
   3a804:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3a808:	add	x2, x2, #0x538
   3a80c:	mov	x1, x20
   3a810:	mov	x0, x19
   3a814:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3a818:	b	3a4a0 <my_regprop@@Base+0x1dc>
   3a81c:	lsr	w4, w3, #4
   3a820:	and	w3, w3, #0xf
   3a824:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3a828:	add	x2, x2, #0x4b0
   3a82c:	mov	x1, x20
   3a830:	mov	x0, x19
   3a834:	bl	5120 <Perl_sv_catpvf@plt>
   3a838:	b	3b77c <my_regprop@@Base+0x14b8>
   3a83c:	stp	x27, x28, [sp, #96]
   3a840:	cmp	w23, #0x39
   3a844:	mov	w0, #0x4c                  	// #76
   3a848:	ccmp	w23, w0, #0x4, ne  // ne = any
   3a84c:	cset	w27, eq  // eq = none
   3a850:	cmp	w25, #0x5b
   3a854:	csinc	w27, w27, wzr, ne  // ne = any
   3a858:	cbz	w27, 3ab40 <my_regprop@@Base+0x87c>
   3a85c:	ldp	x27, x28, [sp, #96]
   3a860:	b	3a40c <my_regprop@@Base+0x148>
   3a864:	ldr	w25, [x21, #8]
   3a868:	b	3a418 <my_regprop@@Base+0x154>
   3a86c:	cbz	x26, 3a48c <my_regprop@@Base+0x1c8>
   3a870:	ldr	x1, [x26, #352]
   3a874:	b	3a448 <my_regprop@@Base+0x184>
   3a878:	stp	x27, x28, [sp, #96]
   3a87c:	ldr	x0, [x24, #24]
   3a880:	add	x25, x0, w25, uxtw #3
   3a884:	ldr	x25, [x25, #16]
   3a888:	ldr	w0, [x25, #12]
   3a88c:	and	w3, w0, #0xf
   3a890:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3a894:	ldr	x2, [x2, #3888]
   3a898:	ldrb	w2, [x2, w3, uxtw]
   3a89c:	cbz	w2, 3a914 <my_regprop@@Base+0x650>
   3a8a0:	and	w2, w0, #0xc000
   3a8a4:	cmp	w2, #0x8, lsl #12
   3a8a8:	b.eq	3a938 <my_regprop@@Base+0x674>  // b.none
   3a8ac:	and	w0, w0, #0xff
   3a8b0:	cmp	w0, #0xf
   3a8b4:	b.ne	3a8c4 <my_regprop@@Base+0x600>  // b.any
   3a8b8:	ldr	x0, [x25]
   3a8bc:	ldrb	w0, [x0, #129]
   3a8c0:	tbz	w0, #6, 3a96c <my_regprop@@Base+0x6a8>
   3a8c4:	ldr	x28, [x25, #16]
   3a8c8:	mov	w3, #0x0                   	// #0
   3a8cc:	ldrsw	x2, [x28]
   3a8d0:	mov	x0, x19
   3a8d4:	bl	56f0 <Perl_av_fetch@plt>
   3a8d8:	str	x0, [sp, #136]
   3a8dc:	cbz	x0, 3aa60 <my_regprop@@Base+0x79c>
   3a8e0:	ldr	w0, [x25, #12]
   3a8e4:	and	w2, w0, #0xf
   3a8e8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3a8ec:	ldr	x1, [x1, #3712]
   3a8f0:	ldrb	w1, [x1, w2, uxtw]
   3a8f4:	cbz	w1, 3a990 <my_regprop@@Base+0x6cc>
   3a8f8:	mov	w23, #0x0                   	// #0
   3a8fc:	mov	x2, #0x0                   	// #0
   3a900:	adrp	x27, 7d000 <boot_re@@Base+0x1b41c>
   3a904:	add	x27, x27, #0x20
   3a908:	adrp	x26, 79000 <boot_re@@Base+0x1741c>
   3a90c:	add	x26, x26, #0x420
   3a910:	b	3aa04 <my_regprop@@Base+0x740>
   3a914:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a918:	add	x3, x3, #0xc10
   3a91c:	add	x3, x3, #0x798
   3a920:	mov	w2, #0x4f4c                	// #20300
   3a924:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a928:	add	x1, x1, #0xfb8
   3a92c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a930:	add	x0, x0, #0xd10
   3a934:	bl	58e0 <__assert_fail@plt>
   3a938:	and	w2, w0, #0xff
   3a93c:	sub	w2, w2, #0x9
   3a940:	cmp	w2, #0x1
   3a944:	b.hi	3a8ac <my_regprop@@Base+0x5e8>  // b.pmore
   3a948:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a94c:	add	x3, x3, #0xc10
   3a950:	add	x3, x3, #0x798
   3a954:	mov	w2, #0x4f4c                	// #20300
   3a958:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a95c:	add	x1, x1, #0xfb8
   3a960:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a964:	add	x0, x0, #0xd40
   3a968:	bl	58e0 <__assert_fail@plt>
   3a96c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a970:	add	x3, x3, #0xc10
   3a974:	add	x3, x3, #0x798
   3a978:	mov	w2, #0x4f4c                	// #20300
   3a97c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a980:	add	x1, x1, #0xfb8
   3a984:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a988:	add	x0, x0, #0xd58
   3a98c:	bl	58e0 <__assert_fail@plt>
   3a990:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3a994:	add	x3, x3, #0xc10
   3a998:	add	x3, x3, #0x798
   3a99c:	mov	w2, #0x4f50                	// #20304
   3a9a0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3a9a4:	add	x1, x1, #0xfb8
   3a9a8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3a9ac:	add	x0, x0, #0xda0
   3a9b0:	bl	58e0 <__assert_fail@plt>
   3a9b4:	ldr	x0, [x25]
   3a9b8:	ldr	x0, [x0, #32]
   3a9bc:	cmp	x0, x2
   3a9c0:	b.le	3aa44 <my_regprop@@Base+0x780>
   3a9c4:	cmp	w23, #0x0
   3a9c8:	ldrsw	x4, [x28, w23, sxtw #2]
   3a9cc:	csel	x3, x26, x27, ne  // ne = any
   3a9d0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3a9d4:	add	x2, x0, #0x4c8
   3a9d8:	mov	x1, x20
   3a9dc:	mov	x0, x19
   3a9e0:	bl	5120 <Perl_sv_catpvf@plt>
   3a9e4:	add	w23, w23, #0x1
   3a9e8:	sxtw	x2, w23
   3a9ec:	ldr	w0, [x25, #12]
   3a9f0:	and	w3, w0, #0xf
   3a9f4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3a9f8:	ldr	x1, [x1, #3712]
   3a9fc:	ldrb	w1, [x1, w3, uxtw]
   3aa00:	cbz	w1, 3a990 <my_regprop@@Base+0x6cc>
   3aa04:	and	w1, w0, #0xc000
   3aa08:	cmp	w1, #0x8, lsl #12
   3aa0c:	b.ne	3a9b4 <my_regprop@@Base+0x6f0>  // b.any
   3aa10:	and	w0, w0, #0xff
   3aa14:	sub	w0, w0, #0x9
   3aa18:	cmp	w0, #0x1
   3aa1c:	b.hi	3a9b4 <my_regprop@@Base+0x6f0>  // b.pmore
   3aa20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3aa24:	add	x3, x3, #0xc10
   3aa28:	add	x3, x3, #0x798
   3aa2c:	mov	w2, #0x4f50                	// #20304
   3aa30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3aa34:	add	x1, x1, #0xfb8
   3aa38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3aa3c:	add	x0, x0, #0xdd0
   3aa40:	bl	58e0 <__assert_fail@plt>
   3aa44:	ldr	x0, [sp, #136]
   3aa48:	ldr	x3, [x0]
   3aa4c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3aa50:	add	x2, x2, #0x4c0
   3aa54:	mov	x1, x20
   3aa58:	mov	x0, x19
   3aa5c:	bl	5120 <Perl_sv_catpvf@plt>
   3aa60:	ldr	x0, [sp, #120]
   3aa64:	cmp	x0, #0x0
   3aa68:	ldr	w0, [sp, #132]
   3aa6c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   3aa70:	b.eq	3b7fc <my_regprop@@Base+0x1538>  // b.none
   3aa74:	ldp	x27, x28, [sp, #96]
   3aa78:	ldr	w0, [x21, #4]
   3aa7c:	ubfiz	x23, x0, #1, #32
   3aa80:	add	x23, x23, w0, uxtw
   3aa84:	lsl	x23, x23, #3
   3aa88:	ldr	x1, [x22, #120]
   3aa8c:	add	x3, x1, x23
   3aa90:	ldr	x1, [x1, x23]
   3aa94:	ldr	w2, [x22, #112]
   3aa98:	cmp	w2, w0
   3aa9c:	ccmn	w1, #0x1, #0x4, cs  // cs = hs, nlast
   3aaa0:	b.ne	3aabc <my_regprop@@Base+0x7f8>  // b.any
   3aaa4:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3aaa8:	add	x2, x2, #0x4d0
   3aaac:	mov	x1, x20
   3aab0:	mov	x0, x19
   3aab4:	bl	5120 <Perl_sv_catpvf@plt>
   3aab8:	b	3b77c <my_regprop@@Base+0x14b8>
   3aabc:	ldr	x0, [x3, #8]
   3aac0:	cmn	x0, #0x1
   3aac4:	b.eq	3aaa4 <my_regprop@@Base+0x7e0>  // b.none
   3aac8:	cmp	x0, w1, sxtw
   3aacc:	b.eq	3ab28 <my_regprop@@Base+0x864>  // b.none
   3aad0:	ldr	x0, [sp, #120]
   3aad4:	ldr	x25, [x0, #8]
   3aad8:	add	x25, x25, w1, sxtw
   3aadc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3aae0:	add	x2, x2, #0x4f0
   3aae4:	mov	x1, x20
   3aae8:	mov	x0, x19
   3aaec:	bl	5120 <Perl_sv_catpvf@plt>
   3aaf0:	ldr	x0, [x22, #120]
   3aaf4:	add	x1, x0, x23
   3aaf8:	ldr	x3, [x1, #8]
   3aafc:	ldr	x0, [x0, x23]
   3ab00:	mov	w7, #0x4203                	// #16899
   3ab04:	mov	x6, #0x0                   	// #0
   3ab08:	mov	x5, #0x0                   	// #0
   3ab0c:	mov	x4, #0x20                  	// #32
   3ab10:	sub	x3, x3, x0
   3ab14:	mov	x2, x25
   3ab18:	mov	x1, x20
   3ab1c:	mov	x0, x19
   3ab20:	bl	53f0 <Perl_pv_pretty@plt>
   3ab24:	b	3b77c <my_regprop@@Base+0x14b8>
   3ab28:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ab2c:	add	x2, x2, #0x4d8
   3ab30:	mov	x1, x20
   3ab34:	mov	x0, x19
   3ab38:	bl	5120 <Perl_sv_catpvf@plt>
   3ab3c:	b	3b77c <my_regprop@@Base+0x14b8>
   3ab40:	cmp	w23, #0x55
   3ab44:	b.eq	3aca0 <my_regprop@@Base+0x9dc>  // b.none
   3ab48:	cmp	w23, #0x4f
   3ab4c:	b.eq	3ad2c <my_regprop@@Base+0xa68>  // b.none
   3ab50:	cmp	w23, #0x12
   3ab54:	b.ne	3b4bc <my_regprop@@Base+0x11f8>  // b.any
   3ab58:	cmp	w25, #0x16
   3ab5c:	b.eq	3b838 <my_regprop@@Base+0x1574>  // b.none
   3ab60:	ldrb	w26, [x21]
   3ab64:	str	xzr, [sp, #160]
   3ab68:	str	xzr, [sp, #168]
   3ab6c:	str	xzr, [sp, #176]
   3ab70:	str	xzr, [sp, #184]
   3ab74:	and	w23, w26, #0x1
   3ab78:	sub	w0, w25, #0x14
   3ab7c:	and	w0, w0, #0xff
   3ab80:	cmp	w0, #0x1
   3ab84:	b.hi	3ab98 <my_regprop@@Base+0x8d4>  // b.pmore
   3ab88:	and	w0, w26, #0xc
   3ab8c:	cmp	w0, #0x8
   3ab90:	b.eq	3ad4c <my_regprop@@Base+0xa88>  // b.none
   3ab94:	tbnz	w26, #2, 3ad6c <my_regprop@@Base+0xaa8>
   3ab98:	ldr	w0, [x21, #4]
   3ab9c:	cmn	w0, #0x1
   3aba0:	b.eq	3ac00 <my_regprop@@Base+0x93c>  // b.none
   3aba4:	add	x25, sp, #0xb0
   3aba8:	mov	x6, x25
   3abac:	add	x5, sp, #0xa8
   3abb0:	add	x4, sp, #0xa0
   3abb4:	mov	w3, #0x0                   	// #0
   3abb8:	mov	x2, x21
   3abbc:	mov	x1, x22
   3abc0:	mov	x0, x19
   3abc4:	bl	5790 <Perl__get_regclass_nonbitmap_data@plt>
   3abc8:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   3abcc:	ldr	x22, [x22, #4040]
   3abd0:	add	x4, sp, #0xb8
   3abd4:	mov	w3, #0x0                   	// #0
   3abd8:	ldr	x2, [x22]
   3abdc:	ldr	x1, [sp, #176]
   3abe0:	mov	x0, x19
   3abe4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   3abe8:	mov	x4, x25
   3abec:	mov	w3, #0x1                   	// #1
   3abf0:	ldr	x2, [x22]
   3abf4:	ldr	x1, [sp, #176]
   3abf8:	mov	x0, x19
   3abfc:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   3ac00:	tbnz	w26, #5, 3ad8c <my_regprop@@Base+0xac8>
   3ac04:	ldr	x3, [x19, #1448]
   3ac08:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ac0c:	add	x2, x2, #0x528
   3ac10:	mov	x1, x20
   3ac14:	mov	x0, x19
   3ac18:	bl	5120 <Perl_sv_catpvf@plt>
   3ac1c:	ldrb	w0, [x21, #1]
   3ac20:	cmp	w0, #0x16
   3ac24:	b.ne	3ada8 <my_regprop@@Base+0xae4>  // b.any
   3ac28:	ldr	x22, [sp, #176]
   3ac2c:	cbz	x22, 3b428 <my_regprop@@Base+0x1164>
   3ac30:	ldr	w0, [x22, #12]
   3ac34:	and	w1, w0, #0xff
   3ac38:	cmp	w1, #0x4
   3ac3c:	b.ne	3aebc <my_regprop@@Base+0xbf8>  // b.any
   3ac40:	and	w0, w0, #0xf
   3ac44:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3ac48:	ldr	x1, [x1, #3888]
   3ac4c:	ldrb	w0, [x1, w0, uxtw]
   3ac50:	cbz	w0, 3aee0 <my_regprop@@Base+0xc1c>
   3ac54:	ldr	x1, [x22]
   3ac58:	ldr	x0, [x1, #16]
   3ac5c:	cbz	x0, 3b428 <my_regprop@@Base+0x1164>
   3ac60:	ldrb	w1, [x1, #48]
   3ac64:	cmp	x1, x0, lsr #3
   3ac68:	b.eq	3b428 <my_regprop@@Base+0x1164>  // b.none
   3ac6c:	ldr	x28, [x19, #3360]
   3ac70:	cmp	x28, #0x100
   3ac74:	mov	x0, #0x100                 	// #256
   3ac78:	csel	x28, x28, x0, cs  // cs = hs, nlast
   3ac7c:	cbnz	w27, 3af04 <my_regprop@@Base+0xc40>
   3ac80:	cbnz	w23, 3b864 <my_regprop@@Base+0x15a0>
   3ac84:	mov	x2, #0x0                   	// #0
   3ac88:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   3ac8c:	add	x1, x1, #0x20
   3ac90:	mov	x0, x19
   3ac94:	bl	59a0 <Perl_newSVpvn@plt>
   3ac98:	mov	x23, x0
   3ac9c:	b	3af4c <my_regprop@@Base+0xc88>
   3aca0:	ldr	x0, [x22, #48]
   3aca4:	cbz	x0, 3ad20 <my_regprop@@Base+0xa5c>
   3aca8:	ldr	x1, [x24, #24]
   3acac:	ldrsw	x0, [x24]
   3acb0:	add	x0, x0, #0x2
   3acb4:	ldr	x22, [x1, x0, lsl #3]
   3acb8:	ldr	w4, [x21, #8]
   3acbc:	add	x5, x21, w4, sxtw #2
   3acc0:	add	x0, x24, #0x28
   3acc4:	sub	x5, x5, x0
   3acc8:	ubfx	x5, x5, #2, #32
   3accc:	ldr	w3, [x21, #4]
   3acd0:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3acd4:	add	x2, x2, #0x4f8
   3acd8:	mov	x1, x20
   3acdc:	mov	x0, x19
   3ace0:	bl	5120 <Perl_sv_catpvf@plt>
   3ace4:	cbz	x22, 3b6e4 <my_regprop@@Base+0x1420>
   3ace8:	mov	w3, #0x0                   	// #0
   3acec:	ldr	w2, [x21, #4]
   3acf0:	mov	x1, x22
   3acf4:	mov	x0, x19
   3acf8:	bl	56f0 <Perl_av_fetch@plt>
   3acfc:	cbz	x0, 3b6ec <my_regprop@@Base+0x1428>
   3ad00:	ldr	x3, [x0]
   3ad04:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ad08:	add	x2, x2, #0x4c0
   3ad0c:	mov	x1, x20
   3ad10:	mov	x0, x19
   3ad14:	bl	5120 <Perl_sv_catpvf@plt>
   3ad18:	ldp	x27, x28, [sp, #96]
   3ad1c:	b	3b77c <my_regprop@@Base+0x14b8>
   3ad20:	cbz	x26, 3b804 <my_regprop@@Base+0x1540>
   3ad24:	ldr	x22, [x26, #352]
   3ad28:	b	3acb8 <my_regprop@@Base+0x9f4>
   3ad2c:	ldrb	w3, [x21]
   3ad30:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ad34:	add	x2, x2, #0x490
   3ad38:	mov	x1, x20
   3ad3c:	mov	x0, x19
   3ad40:	bl	5120 <Perl_sv_catpvf@plt>
   3ad44:	ldp	x27, x28, [sp, #96]
   3ad48:	b	3b77c <my_regprop@@Base+0x14b8>
   3ad4c:	mov	w4, #0x2                   	// #2
   3ad50:	mov	x3, #0x12                  	// #18
   3ad54:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ad58:	add	x2, x2, #0x508
   3ad5c:	mov	x1, x20
   3ad60:	mov	x0, x19
   3ad64:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3ad68:	b	3ab94 <my_regprop@@Base+0x8d0>
   3ad6c:	mov	w4, #0x2                   	// #2
   3ad70:	mov	x3, #0x3                   	// #3
   3ad74:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ad78:	add	x2, x2, #0x520
   3ad7c:	mov	x1, x20
   3ad80:	mov	x0, x19
   3ad84:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3ad88:	b	3ab98 <my_regprop@@Base+0x8d4>
   3ad8c:	mov	x3, #0xffffffffffffffff    	// #-1
   3ad90:	mov	x2, #0x100                 	// #256
   3ad94:	ldr	x1, [sp, #176]
   3ad98:	mov	x0, x19
   3ad9c:	bl	5450 <Perl__add_range_to_invlist@plt>
   3ada0:	str	x0, [sp, #176]
   3ada4:	b	3ac04 <my_regprop@@Base+0x940>
   3ada8:	ldr	x0, [sp, #160]
   3adac:	cmp	x0, #0x0
   3adb0:	cset	w6, ne  // ne = any
   3adb4:	mov	x5, x21
   3adb8:	ldr	x4, [sp, #168]
   3adbc:	ldr	x3, [sp, #184]
   3adc0:	add	x2, x21, #0x8
   3adc4:	mov	x1, x20
   3adc8:	mov	x0, x19
   3adcc:	bl	2f190 <my_regexec@@Base+0xbc9c>
   3add0:	and	w27, w0, #0xff
   3add4:	ldr	x1, [sp, #184]
   3add8:	cbz	x1, 3adf0 <my_regprop@@Base+0xb2c>
   3addc:	ldr	w2, [x1, #8]
   3ade0:	cmp	w2, #0x1
   3ade4:	b.ls	3ae54 <my_regprop@@Base+0xb90>  // b.plast
   3ade8:	sub	w2, w2, #0x1
   3adec:	str	w2, [x1, #8]
   3adf0:	ldr	x0, [sp, #160]
   3adf4:	cbz	x0, 3ac28 <my_regprop@@Base+0x964>
   3adf8:	cbz	w23, 3ae80 <my_regprop@@Base+0xbbc>
   3adfc:	cbz	w27, 3ae60 <my_regprop@@Base+0xb9c>
   3ae00:	mov	w4, #0x2                   	// #2
   3ae04:	mov	x3, #0x1                   	// #1
   3ae08:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ae0c:	add	x2, x2, #0x530
   3ae10:	mov	x1, x20
   3ae14:	mov	x0, x19
   3ae18:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3ae1c:	mov	w3, #0x2                   	// #2
   3ae20:	ldr	x2, [sp, #160]
   3ae24:	mov	x1, x20
   3ae28:	mov	x0, x19
   3ae2c:	bl	5690 <Perl_sv_catsv_flags@plt>
   3ae30:	mov	w4, #0x2                   	// #2
   3ae34:	mov	x3, #0x1                   	// #1
   3ae38:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   3ae3c:	add	x2, x2, #0x1d0
   3ae40:	mov	x1, x20
   3ae44:	mov	x0, x19
   3ae48:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3ae4c:	eor	w27, w23, #0x1
   3ae50:	b	3ac28 <my_regprop@@Base+0x964>
   3ae54:	mov	x0, x19
   3ae58:	bl	5860 <Perl_sv_free2@plt>
   3ae5c:	b	3adf0 <my_regprop@@Base+0xb2c>
   3ae60:	mov	w4, #0x2                   	// #2
   3ae64:	mov	x3, #0x1                   	// #1
   3ae68:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   3ae6c:	add	x2, x2, #0x50
   3ae70:	mov	x1, x20
   3ae74:	mov	x0, x19
   3ae78:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3ae7c:	b	3ae00 <my_regprop@@Base+0xb3c>
   3ae80:	cbnz	w27, 3ae9c <my_regprop@@Base+0xbd8>
   3ae84:	mov	w3, #0x2                   	// #2
   3ae88:	ldr	x2, [sp, #160]
   3ae8c:	mov	x1, x20
   3ae90:	mov	x0, x19
   3ae94:	bl	5690 <Perl_sv_catsv_flags@plt>
   3ae98:	b	3ae4c <my_regprop@@Base+0xb88>
   3ae9c:	ldr	x4, [x19, #1448]
   3aea0:	ldr	x3, [x19, #1456]
   3aea4:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3aea8:	add	x2, x2, #0x538
   3aeac:	mov	x1, x20
   3aeb0:	mov	x0, x19
   3aeb4:	bl	5120 <Perl_sv_catpvf@plt>
   3aeb8:	b	3ae84 <my_regprop@@Base+0xbc0>
   3aebc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3aec0:	add	x3, x3, #0xc10
   3aec4:	add	x3, x3, #0x18
   3aec8:	mov	w2, #0x31                  	// #49
   3aecc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3aed0:	add	x1, x1, #0x550
   3aed4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   3aed8:	add	x0, x0, #0xfc8
   3aedc:	bl	58e0 <__assert_fail@plt>
   3aee0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3aee4:	add	x3, x3, #0xc10
   3aee8:	add	x3, x3, #0x18
   3aeec:	mov	w2, #0x33                  	// #51
   3aef0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3aef4:	add	x1, x1, #0x550
   3aef8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3aefc:	add	x0, x0, #0xe40
   3af00:	bl	58e0 <__assert_fail@plt>
   3af04:	ldr	x4, [x19, #1448]
   3af08:	ldr	x3, [x19, #1456]
   3af0c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3af10:	add	x2, x2, #0x538
   3af14:	mov	x1, x20
   3af18:	mov	x0, x19
   3af1c:	bl	5120 <Perl_sv_catpvf@plt>
   3af20:	cbz	w23, 3af2c <my_regprop@@Base+0xc68>
   3af24:	ldr	x0, [sp, #160]
   3af28:	cbz	x0, 3af88 <my_regprop@@Base+0xcc4>
   3af2c:	ldr	x22, [sp, #176]
   3af30:	mov	x2, #0x0                   	// #0
   3af34:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   3af38:	add	x1, x1, #0x20
   3af3c:	mov	x0, x19
   3af40:	bl	59a0 <Perl_newSVpvn@plt>
   3af44:	mov	x23, x0
   3af48:	cbz	x22, 3afb8 <my_regprop@@Base+0xcf4>
   3af4c:	ldrb	w0, [x22, #12]
   3af50:	cmp	w0, #0x4
   3af54:	b.ne	3afdc <my_regprop@@Base+0xd18>  // b.any
   3af58:	ldr	x0, [x22]
   3af5c:	ldr	x1, [x0, #40]
   3af60:	cmn	x1, #0x1
   3af64:	b.ne	3b000 <my_regprop@@Base+0xd3c>  // b.any
   3af68:	str	xzr, [x0, #40]
   3af6c:	add	x26, sp, #0xc8
   3af70:	add	x25, sp, #0xc0
   3af74:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3af78:	add	x0, x0, #0x580
   3af7c:	str	x0, [sp, #120]
   3af80:	mov	w27, #0x20                  	// #32
   3af84:	b	3b05c <my_regprop@@Base+0xd98>
   3af88:	ldr	x1, [sp, #176]
   3af8c:	mov	x0, x19
   3af90:	bl	52b0 <Perl__invlist_invert@plt>
   3af94:	add	x4, sp, #0xb0
   3af98:	mov	w3, #0x1                   	// #1
   3af9c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3afa0:	ldr	x0, [x0, #4040]
   3afa4:	ldr	x2, [x0]
   3afa8:	ldr	x1, [sp, #176]
   3afac:	mov	x0, x19
   3afb0:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   3afb4:	b	3af2c <my_regprop@@Base+0xc68>
   3afb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3afbc:	add	x3, x3, #0xc10
   3afc0:	add	x3, x3, #0x7a8
   3afc4:	mov	w2, #0x28a8                	// #10408
   3afc8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3afcc:	add	x1, x1, #0xfb8
   3afd0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   3afd4:	add	x0, x0, #0x568
   3afd8:	bl	58e0 <__assert_fail@plt>
   3afdc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3afe0:	add	x3, x3, #0xc10
   3afe4:	add	x3, x3, #0x390
   3afe8:	mov	w2, #0x2835                	// #10293
   3afec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3aff0:	add	x1, x1, #0xfb8
   3aff4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   3aff8:	add	x0, x0, #0xfc8
   3affc:	bl	58e0 <__assert_fail@plt>
   3b000:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b004:	add	x3, x3, #0xc10
   3b008:	add	x3, x3, #0x7a8
   3b00c:	mov	w2, #0x28aa                	// #10410
   3b010:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b014:	add	x1, x1, #0xfb8
   3b018:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3b01c:	add	x0, x0, #0x540
   3b020:	bl	58e0 <__assert_fail@plt>
   3b024:	mov	w5, w27
   3b028:	mov	w4, #0x2d                  	// #45
   3b02c:	ldr	x3, [sp, #192]
   3b030:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b034:	add	x2, x2, #0x560
   3b038:	mov	x1, x23
   3b03c:	mov	x0, x19
   3b040:	bl	5120 <Perl_sv_catpvf@plt>
   3b044:	b	3b05c <my_regprop@@Base+0xd98>
   3b048:	mov	w4, w27
   3b04c:	ldr	x2, [sp, #120]
   3b050:	mov	x1, x23
   3b054:	mov	x0, x19
   3b058:	bl	5120 <Perl_sv_catpvf@plt>
   3b05c:	mov	x2, x26
   3b060:	mov	x1, x25
   3b064:	mov	x0, x22
   3b068:	bl	2da40 <my_regexec@@Base+0xa54c>
   3b06c:	and	w0, w0, #0xff
   3b070:	cbz	w0, 3b0ac <my_regprop@@Base+0xde8>
   3b074:	ldr	x5, [sp, #200]
   3b078:	cmn	x5, #0x1
   3b07c:	b.eq	3b024 <my_regprop@@Base+0xd60>  // b.none
   3b080:	ldr	x3, [sp, #192]
   3b084:	cmp	x5, x3
   3b088:	b.eq	3b048 <my_regprop@@Base+0xd84>  // b.none
   3b08c:	mov	w6, w27
   3b090:	mov	w4, #0x2d                  	// #45
   3b094:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b098:	add	x2, x2, #0x570
   3b09c:	mov	x1, x23
   3b0a0:	mov	x0, x19
   3b0a4:	bl	5120 <Perl_sv_catpvf@plt>
   3b0a8:	b	3b05c <my_regprop@@Base+0xd98>
   3b0ac:	ldr	w0, [x23, #12]
   3b0b0:	and	w2, w0, #0xf
   3b0b4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3b0b8:	ldr	x1, [x1, #3888]
   3b0bc:	ldrb	w1, [x1, w2, uxtw]
   3b0c0:	cbz	w1, 3b174 <my_regprop@@Base+0xeb0>
   3b0c4:	and	w1, w0, #0xc000
   3b0c8:	cmp	w1, #0x8, lsl #12
   3b0cc:	b.eq	3b198 <my_regprop@@Base+0xed4>  // b.none
   3b0d0:	and	w0, w0, #0xff
   3b0d4:	cmp	w0, #0xf
   3b0d8:	b.eq	3b1cc <my_regprop@@Base+0xf08>  // b.none
   3b0dc:	ldr	x2, [x23]
   3b0e0:	ldr	x3, [x2, #16]
   3b0e4:	cbz	x3, 3b100 <my_regprop@@Base+0xe3c>
   3b0e8:	cmp	w1, #0x8, lsl #12
   3b0ec:	b.eq	3b1fc <my_regprop@@Base+0xf38>  // b.none
   3b0f0:	cmp	w0, #0xf
   3b0f4:	b.eq	3b26c <my_regprop@@Base+0xfa8>  // b.none
   3b0f8:	sub	x3, x3, #0x1
   3b0fc:	str	x3, [x2, #16]
   3b100:	ldr	w0, [x23, #12]
   3b104:	and	w2, w0, #0xf
   3b108:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3b10c:	ldr	x1, [x1, #3888]
   3b110:	ldrb	w1, [x1, w2, uxtw]
   3b114:	cbz	w1, 3b2cc <my_regprop@@Base+0x1008>
   3b118:	and	w1, w0, #0xc000
   3b11c:	cmp	w1, #0x8, lsl #12
   3b120:	b.eq	3b2f0 <my_regprop@@Base+0x102c>  // b.none
   3b124:	and	w0, w0, #0xff
   3b128:	cmp	w0, #0xf
   3b12c:	b.eq	3b324 <my_regprop@@Base+0x1060>  // b.none
   3b130:	ldr	x2, [x23]
   3b134:	ldr	x3, [x2, #16]
   3b138:	cmp	x3, x28
   3b13c:	b.ls	3b354 <my_regprop@@Base+0x1090>  // b.plast
   3b140:	cmp	w1, #0x8, lsl #12
   3b144:	b.eq	3b36c <my_regprop@@Base+0x10a8>  // b.none
   3b148:	cmp	w0, #0xf
   3b14c:	b.eq	3b39c <my_regprop@@Base+0x10d8>  // b.none
   3b150:	ldr	x2, [x23, #16]
   3b154:	mov	x3, x28
   3b158:	ldrb	w0, [x2, x3]
   3b15c:	cmp	w0, #0x20
   3b160:	b.eq	3b3c8 <my_regprop@@Base+0x1104>  // b.none
   3b164:	subs	x3, x3, #0x1
   3b168:	b.ne	3b158 <my_regprop@@Base+0xe94>  // b.any
   3b16c:	mov	x3, x28
   3b170:	b	3b3d0 <my_regprop@@Base+0x110c>
   3b174:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b178:	add	x3, x3, #0xc10
   3b17c:	add	x3, x3, #0x7a8
   3b180:	mov	w2, #0x28bf                	// #10431
   3b184:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b188:	add	x1, x1, #0xfb8
   3b18c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b190:	add	x0, x0, #0xe40
   3b194:	bl	58e0 <__assert_fail@plt>
   3b198:	and	w2, w0, #0xff
   3b19c:	sub	w2, w2, #0x9
   3b1a0:	cmp	w2, #0x1
   3b1a4:	b.hi	3b0d0 <my_regprop@@Base+0xe0c>  // b.pmore
   3b1a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b1ac:	add	x3, x3, #0xc10
   3b1b0:	add	x3, x3, #0x7a8
   3b1b4:	mov	w2, #0x28bf                	// #10431
   3b1b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b1bc:	add	x1, x1, #0xfb8
   3b1c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b1c4:	add	x0, x0, #0xe70
   3b1c8:	bl	58e0 <__assert_fail@plt>
   3b1cc:	ldr	x2, [x23]
   3b1d0:	ldrb	w2, [x2, #129]
   3b1d4:	tbnz	w2, #6, 3b0dc <my_regprop@@Base+0xe18>
   3b1d8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b1dc:	add	x3, x3, #0xc10
   3b1e0:	add	x3, x3, #0x7a8
   3b1e4:	mov	w2, #0x28bf                	// #10431
   3b1e8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b1ec:	add	x1, x1, #0xfb8
   3b1f0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b1f4:	add	x0, x0, #0xe88
   3b1f8:	bl	58e0 <__assert_fail@plt>
   3b1fc:	sub	w4, w0, #0x9
   3b200:	cmp	w4, #0x1
   3b204:	b.ls	3b248 <my_regprop@@Base+0xf84>  // b.plast
   3b208:	cmp	w0, #0xf
   3b20c:	b.eq	3b26c <my_regprop@@Base+0xfa8>  // b.none
   3b210:	cmp	w1, #0x8, lsl #12
   3b214:	b.ne	3b0f8 <my_regprop@@Base+0xe34>  // b.any
   3b218:	sub	w0, w0, #0x9
   3b21c:	cmp	w0, #0x1
   3b220:	b.hi	3b0f8 <my_regprop@@Base+0xe34>  // b.pmore
   3b224:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b228:	add	x3, x3, #0xc10
   3b22c:	add	x3, x3, #0x7a8
   3b230:	mov	w2, #0x28c0                	// #10432
   3b234:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b238:	add	x1, x1, #0xfb8
   3b23c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b240:	add	x0, x0, #0xe70
   3b244:	bl	58e0 <__assert_fail@plt>
   3b248:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b24c:	add	x3, x3, #0xc10
   3b250:	add	x3, x3, #0x7a8
   3b254:	mov	w2, #0x28c0                	// #10432
   3b258:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b25c:	add	x1, x1, #0xfb8
   3b260:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3b264:	add	x0, x0, #0x588
   3b268:	bl	58e0 <__assert_fail@plt>
   3b26c:	ldrb	w0, [x2, #129]
   3b270:	tbz	w0, #6, 3b2a8 <my_regprop@@Base+0xfe4>
   3b274:	cmp	w1, #0x8, lsl #12
   3b278:	b.ne	3b0f8 <my_regprop@@Base+0xe34>  // b.any
   3b27c:	ldrb	w0, [x2, #129]
   3b280:	tbnz	w0, #6, 3b0f8 <my_regprop@@Base+0xe34>
   3b284:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b288:	add	x3, x3, #0xc10
   3b28c:	add	x3, x3, #0x7a8
   3b290:	mov	w2, #0x28c0                	// #10432
   3b294:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b298:	add	x1, x1, #0xfb8
   3b29c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b2a0:	add	x0, x0, #0xe88
   3b2a4:	bl	58e0 <__assert_fail@plt>
   3b2a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b2ac:	add	x3, x3, #0xc10
   3b2b0:	add	x3, x3, #0x7a8
   3b2b4:	mov	w2, #0x28c0                	// #10432
   3b2b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b2bc:	add	x1, x1, #0xfb8
   3b2c0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3b2c4:	add	x0, x0, #0x5a0
   3b2c8:	bl	58e0 <__assert_fail@plt>
   3b2cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b2d0:	add	x3, x3, #0xc10
   3b2d4:	add	x3, x3, #0x798
   3b2d8:	mov	w2, #0x4ff9                	// #20473
   3b2dc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b2e0:	add	x1, x1, #0xfb8
   3b2e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b2e8:	add	x0, x0, #0xe40
   3b2ec:	bl	58e0 <__assert_fail@plt>
   3b2f0:	and	w2, w0, #0xff
   3b2f4:	sub	w2, w2, #0x9
   3b2f8:	cmp	w2, #0x1
   3b2fc:	b.hi	3b124 <my_regprop@@Base+0xe60>  // b.pmore
   3b300:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b304:	add	x3, x3, #0xc10
   3b308:	add	x3, x3, #0x798
   3b30c:	mov	w2, #0x4ff9                	// #20473
   3b310:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b314:	add	x1, x1, #0xfb8
   3b318:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b31c:	add	x0, x0, #0xe70
   3b320:	bl	58e0 <__assert_fail@plt>
   3b324:	ldr	x2, [x23]
   3b328:	ldrb	w2, [x2, #129]
   3b32c:	tbnz	w2, #6, 3b130 <my_regprop@@Base+0xe6c>
   3b330:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b334:	add	x3, x3, #0xc10
   3b338:	add	x3, x3, #0x798
   3b33c:	mov	w2, #0x4ff9                	// #20473
   3b340:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b344:	add	x1, x1, #0xfb8
   3b348:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b34c:	add	x0, x0, #0xe88
   3b350:	bl	58e0 <__assert_fail@plt>
   3b354:	mov	w3, #0x2                   	// #2
   3b358:	mov	x2, x23
   3b35c:	mov	x1, x20
   3b360:	mov	x0, x19
   3b364:	bl	5690 <Perl_sv_catsv_flags@plt>
   3b368:	b	3b3fc <my_regprop@@Base+0x1138>
   3b36c:	sub	w1, w0, #0x9
   3b370:	cmp	w1, #0x1
   3b374:	b.hi	3b148 <my_regprop@@Base+0xe84>  // b.pmore
   3b378:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b37c:	add	x3, x3, #0xc10
   3b380:	add	x3, x3, #0x798
   3b384:	mov	w2, #0x4ffd                	// #20477
   3b388:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b38c:	add	x1, x1, #0xfb8
   3b390:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b394:	add	x0, x0, #0xd40
   3b398:	bl	58e0 <__assert_fail@plt>
   3b39c:	ldrb	w0, [x2, #129]
   3b3a0:	tbnz	w0, #6, 3b150 <my_regprop@@Base+0xe8c>
   3b3a4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b3a8:	add	x3, x3, #0xc10
   3b3ac:	add	x3, x3, #0x798
   3b3b0:	mov	w2, #0x4ffd                	// #20477
   3b3b4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b3b8:	add	x1, x1, #0xfb8
   3b3bc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b3c0:	add	x0, x0, #0xd58
   3b3c4:	bl	58e0 <__assert_fail@plt>
   3b3c8:	cmp	x3, #0x0
   3b3cc:	csel	x3, x3, x28, ne  // ne = any
   3b3d0:	mov	w4, #0x2                   	// #2
   3b3d4:	mov	x1, x20
   3b3d8:	mov	x0, x19
   3b3dc:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b3e0:	mov	w4, #0x2                   	// #2
   3b3e4:	mov	x3, #0x3                   	// #3
   3b3e8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3b3ec:	add	x2, x2, #0xfe0
   3b3f0:	mov	x1, x20
   3b3f4:	mov	x0, x19
   3b3f8:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b3fc:	ldr	w2, [x23, #8]
   3b400:	cmp	w2, #0x1
   3b404:	b.ls	3b470 <my_regprop@@Base+0x11ac>  // b.plast
   3b408:	sub	w2, w2, #0x1
   3b40c:	str	w2, [x23, #8]
   3b410:	ldr	x1, [sp, #176]
   3b414:	ldr	w2, [x1, #8]
   3b418:	cmp	w2, #0x1
   3b41c:	b.ls	3b480 <my_regprop@@Base+0x11bc>  // b.plast
   3b420:	sub	w2, w2, #0x1
   3b424:	str	w2, [x1, #8]
   3b428:	ldr	x3, [x19, #1456]
   3b42c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b430:	add	x2, x2, #0x5e8
   3b434:	mov	x1, x20
   3b438:	mov	x0, x19
   3b43c:	bl	5120 <Perl_sv_catpvf@plt>
   3b440:	ldrb	w0, [x21, #1]
   3b444:	cmp	w0, #0x16
   3b448:	b.eq	3b48c <my_regprop@@Base+0x11c8>  // b.none
   3b44c:	ldr	x1, [sp, #160]
   3b450:	cbz	x1, 3b6f4 <my_regprop@@Base+0x1430>
   3b454:	ldr	w2, [x1, #8]
   3b458:	cmp	w2, #0x1
   3b45c:	b.ls	3b4ac <my_regprop@@Base+0x11e8>  // b.plast
   3b460:	sub	w2, w2, #0x1
   3b464:	str	w2, [x1, #8]
   3b468:	ldp	x27, x28, [sp, #96]
   3b46c:	b	3b77c <my_regprop@@Base+0x14b8>
   3b470:	mov	x1, x23
   3b474:	mov	x0, x19
   3b478:	bl	5860 <Perl_sv_free2@plt>
   3b47c:	b	3b410 <my_regprop@@Base+0x114c>
   3b480:	mov	x0, x19
   3b484:	bl	5860 <Perl_sv_free2@plt>
   3b488:	b	3b428 <my_regprop@@Base+0x1164>
   3b48c:	ldrb	w3, [x21]
   3b490:	cbz	w3, 3b44c <my_regprop@@Base+0x1188>
   3b494:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b498:	add	x2, x2, #0x5f0
   3b49c:	mov	x1, x20
   3b4a0:	mov	x0, x19
   3b4a4:	bl	5120 <Perl_sv_catpvf@plt>
   3b4a8:	b	3b44c <my_regprop@@Base+0x1188>
   3b4ac:	mov	x0, x19
   3b4b0:	bl	5860 <Perl_sv_free2@plt>
   3b4b4:	ldp	x27, x28, [sp, #96]
   3b4b8:	b	3b77c <my_regprop@@Base+0x14b8>
   3b4bc:	cmp	w23, #0x17
   3b4c0:	b.ne	3b574 <my_regprop@@Base+0x12b0>  // b.any
   3b4c4:	mov	x1, x21
   3b4c8:	mov	x0, x19
   3b4cc:	bl	27b90 <my_regexec@@Base+0x469c>
   3b4d0:	mov	x22, x0
   3b4d4:	ldr	x3, [x19, #1448]
   3b4d8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b4dc:	add	x2, x2, #0x528
   3b4e0:	mov	x1, x20
   3b4e4:	mov	x0, x19
   3b4e8:	bl	5120 <Perl_sv_catpvf@plt>
   3b4ec:	ldrb	w0, [x21, #1]
   3b4f0:	cmp	w0, #0x18
   3b4f4:	b.eq	3b550 <my_regprop@@Base+0x128c>  // b.none
   3b4f8:	mov	w6, #0x1                   	// #1
   3b4fc:	mov	x5, #0x0                   	// #0
   3b500:	mov	x4, #0x0                   	// #0
   3b504:	mov	x3, x22
   3b508:	mov	x2, #0x0                   	// #0
   3b50c:	mov	x1, x20
   3b510:	mov	x0, x19
   3b514:	bl	2f190 <my_regexec@@Base+0xbc9c>
   3b518:	ldr	x3, [x19, #1456]
   3b51c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b520:	add	x2, x2, #0x5e8
   3b524:	mov	x1, x20
   3b528:	mov	x0, x19
   3b52c:	bl	5120 <Perl_sv_catpvf@plt>
   3b530:	cbz	x22, 3b6fc <my_regprop@@Base+0x1438>
   3b534:	ldr	w2, [x22, #8]
   3b538:	cmp	w2, #0x1
   3b53c:	b.ls	3b560 <my_regprop@@Base+0x129c>  // b.plast
   3b540:	sub	w2, w2, #0x1
   3b544:	str	w2, [x22, #8]
   3b548:	ldp	x27, x28, [sp, #96]
   3b54c:	b	3b77c <my_regprop@@Base+0x14b8>
   3b550:	mov	x1, x22
   3b554:	mov	x0, x19
   3b558:	bl	52b0 <Perl__invlist_invert@plt>
   3b55c:	b	3b4f8 <my_regprop@@Base+0x1234>
   3b560:	mov	x1, x22
   3b564:	mov	x0, x19
   3b568:	bl	5860 <Perl_sv_free2@plt>
   3b56c:	ldp	x27, x28, [sp, #96]
   3b570:	b	3b77c <my_regprop@@Base+0x14b8>
   3b574:	ldp	x27, x28, [sp, #96]
   3b578:	b	3a7a8 <my_regprop@@Base+0x4e4>
   3b57c:	mov	w4, #0x2                   	// #2
   3b580:	mov	x3, #0x1                   	// #1
   3b584:	adrp	x2, 64000 <boot_re@@Base+0x241c>
   3b588:	add	x2, x2, #0xa10
   3b58c:	mov	x1, x20
   3b590:	mov	x0, x19
   3b594:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b598:	b	3a7e0 <my_regprop@@Base+0x51c>
   3b59c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b5a0:	add	x2, x2, #0x610
   3b5a4:	mov	x1, x20
   3b5a8:	mov	x0, x19
   3b5ac:	bl	5120 <Perl_sv_catpvf@plt>
   3b5b0:	b	3a4a0 <my_regprop@@Base+0x1dc>
   3b5b4:	cmp	w0, #0x8
   3b5b8:	b.ne	3b628 <my_regprop@@Base+0x1364>  // b.any
   3b5bc:	adrp	x0, 92000 <Perl_save_sptr>
   3b5c0:	add	x0, x0, #0x5e8
   3b5c4:	ldp	x2, x3, [x0]
   3b5c8:	stp	x2, x3, [sp, #208]
   3b5cc:	ldp	x2, x3, [x0, #16]
   3b5d0:	stp	x2, x3, [sp, #224]
   3b5d4:	ldr	x0, [x0, #32]
   3b5d8:	str	x0, [sp, #240]
   3b5dc:	ldrb	w0, [x21]
   3b5e0:	cmp	w0, #0x4
   3b5e4:	b.hi	3b600 <my_regprop@@Base+0x133c>  // b.pmore
   3b5e8:	add	x1, sp, #0xd0
   3b5ec:	ldr	x2, [x1, w0, sxtw #3]
   3b5f0:	mov	x1, x20
   3b5f4:	mov	x0, x19
   3b5f8:	bl	57f0 <Perl_sv_catpv@plt>
   3b5fc:	b	3a4a0 <my_regprop@@Base+0x1dc>
   3b600:	stp	x27, x28, [sp, #96]
   3b604:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b608:	add	x3, x3, #0xc10
   3b60c:	add	x3, x3, #0x798
   3b610:	mov	w2, #0x5041                	// #20545
   3b614:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b618:	add	x1, x1, #0xfb8
   3b61c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3b620:	add	x0, x0, #0x628
   3b624:	bl	58e0 <__assert_fail@plt>
   3b628:	cmp	w23, #0x47
   3b62c:	b.eq	3b63c <my_regprop@@Base+0x1378>  // b.none
   3b630:	cmp	w25, #0x2
   3b634:	b.ne	3a4a0 <my_regprop@@Base+0x1dc>  // b.any
   3b638:	b	3b654 <my_regprop@@Base+0x1390>
   3b63c:	sub	w0, w25, #0x48
   3b640:	and	w0, w0, #0xff
   3b644:	cmp	w0, #0x1
   3b648:	b.ls	3b688 <my_regprop@@Base+0x13c4>  // b.plast
   3b64c:	cmp	w25, #0x2
   3b650:	b.ne	3b77c <my_regprop@@Base+0x14b8>  // b.any
   3b654:	ldrb	w1, [x21]
   3b658:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3b65c:	add	x0, x0, #0x50
   3b660:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   3b664:	add	x3, x3, #0x428
   3b668:	cmp	w1, #0x0
   3b66c:	csel	x3, x3, x0, ne  // ne = any
   3b670:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b674:	add	x2, x2, #0x660
   3b678:	mov	x1, x20
   3b67c:	mov	x0, x19
   3b680:	bl	5120 <Perl_sv_catpvf@plt>
   3b684:	b	3a4a0 <my_regprop@@Base+0x1dc>
   3b688:	ldrb	w3, [x21]
   3b68c:	neg	w3, w3
   3b690:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b694:	add	x2, x2, #0x650
   3b698:	mov	x1, x20
   3b69c:	mov	x0, x19
   3b6a0:	bl	5120 <Perl_sv_catpvf@plt>
   3b6a4:	ldrh	w0, [x21, #2]
   3b6a8:	cbnz	w0, 3b6c4 <my_regprop@@Base+0x1400>
   3b6ac:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3b6b0:	add	x2, x2, #0x538
   3b6b4:	mov	x1, x20
   3b6b8:	mov	x0, x19
   3b6bc:	bl	5120 <Perl_sv_catpvf@plt>
   3b6c0:	b	3b77c <my_regprop@@Base+0x14b8>
   3b6c4:	ldrb	w3, [x21]
   3b6c8:	sub	w3, w3, w0
   3b6cc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b6d0:	add	x2, x2, #0x658
   3b6d4:	mov	x1, x20
   3b6d8:	mov	x0, x19
   3b6dc:	bl	5120 <Perl_sv_catpvf@plt>
   3b6e0:	b	3b6ac <my_regprop@@Base+0x13e8>
   3b6e4:	ldp	x27, x28, [sp, #96]
   3b6e8:	b	3b77c <my_regprop@@Base+0x14b8>
   3b6ec:	ldp	x27, x28, [sp, #96]
   3b6f0:	b	3b77c <my_regprop@@Base+0x14b8>
   3b6f4:	ldp	x27, x28, [sp, #96]
   3b6f8:	b	3b77c <my_regprop@@Base+0x14b8>
   3b6fc:	ldp	x27, x28, [sp, #96]
   3b700:	b	3b77c <my_regprop@@Base+0x14b8>
   3b704:	mov	w4, #0x2                   	// #2
   3b708:	mov	x3, #0x5                   	// #5
   3b70c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b710:	add	x2, x2, #0x670
   3b714:	mov	x1, x20
   3b718:	mov	x0, x19
   3b71c:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b720:	b	3b7c0 <my_regprop@@Base+0x14fc>
   3b724:	mov	w4, #0x2                   	// #2
   3b728:	mov	x3, #0x1                   	// #1
   3b72c:	adrp	x2, 64000 <boot_re@@Base+0x241c>
   3b730:	add	x2, x2, #0xa10
   3b734:	mov	x1, x20
   3b738:	mov	x0, x19
   3b73c:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b740:	add	x2, x21, #0x8
   3b744:	mov	w6, #0x0                   	// #0
   3b748:	mov	x5, #0x0                   	// #0
   3b74c:	mov	x4, #0x0                   	// #0
   3b750:	mov	x3, #0x0                   	// #0
   3b754:	mov	x1, x20
   3b758:	mov	x0, x19
   3b75c:	bl	2f190 <my_regexec@@Base+0xbc9c>
   3b760:	mov	w4, #0x2                   	// #2
   3b764:	mov	x3, #0x1                   	// #1
   3b768:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3b76c:	add	x2, x2, #0x538
   3b770:	mov	x1, x20
   3b774:	mov	x0, x19
   3b778:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   3b77c:	ldrb	w0, [x21, #1]
   3b780:	sub	w0, w0, #0x5a
   3b784:	and	w0, w0, #0xff
   3b788:	cmp	w0, #0x1
   3b78c:	b.hi	3b7c0 <my_regprop@@Base+0x14fc>  // b.pmore
   3b790:	ldrb	w0, [x21]
   3b794:	cbz	w0, 3b7c0 <my_regprop@@Base+0x14fc>
   3b798:	ldr	w0, [x21, #4]
   3b79c:	cbz	w0, 3b704 <my_regprop@@Base+0x1440>
   3b7a0:	ldr	x1, [x24, #24]
   3b7a4:	add	x0, x1, w0, uxtw #3
   3b7a8:	ldr	x3, [x0, #16]
   3b7ac:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b7b0:	add	x2, x2, #0x668
   3b7b4:	mov	x1, x20
   3b7b8:	mov	x0, x19
   3b7bc:	bl	5120 <Perl_sv_catpvf@plt>
   3b7c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3b7c4:	ldr	x0, [x0, #3920]
   3b7c8:	ldr	x1, [sp, #248]
   3b7cc:	ldr	x0, [x0]
   3b7d0:	eor	x0, x1, x0
   3b7d4:	cbnz	x0, 3b88c <my_regprop@@Base+0x15c8>
   3b7d8:	ldp	x19, x20, [sp, #32]
   3b7dc:	ldp	x21, x22, [sp, #48]
   3b7e0:	ldp	x23, x24, [sp, #64]
   3b7e4:	ldp	x25, x26, [sp, #80]
   3b7e8:	ldp	x29, x30, [sp, #16]
   3b7ec:	add	sp, sp, #0x100
   3b7f0:	ret
   3b7f4:	ldr	x2, [x24, #24]
   3b7f8:	b	3a5fc <my_regprop@@Base+0x338>
   3b7fc:	ldp	x27, x28, [sp, #96]
   3b800:	b	3b77c <my_regprop@@Base+0x14b8>
   3b804:	ldr	w4, [x21, #8]
   3b808:	add	x5, x21, w4, sxtw #2
   3b80c:	add	x0, x24, #0x28
   3b810:	sub	x5, x5, x0
   3b814:	ubfx	x5, x5, #2, #32
   3b818:	ldr	w3, [x21, #4]
   3b81c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3b820:	add	x2, x2, #0x4f8
   3b824:	mov	x1, x20
   3b828:	mov	x0, x19
   3b82c:	bl	5120 <Perl_sv_catpvf@plt>
   3b830:	ldp	x27, x28, [sp, #96]
   3b834:	b	3b77c <my_regprop@@Base+0x14b8>
   3b838:	str	xzr, [sp, #160]
   3b83c:	str	xzr, [sp, #168]
   3b840:	str	xzr, [sp, #176]
   3b844:	str	xzr, [sp, #184]
   3b848:	ldr	w0, [x21, #4]
   3b84c:	mov	w23, #0x0                   	// #0
   3b850:	cmn	w0, #0x1
   3b854:	b.eq	3ac04 <my_regprop@@Base+0x940>  // b.none
   3b858:	mov	w26, #0x0                   	// #0
   3b85c:	mov	w23, #0x0                   	// #0
   3b860:	b	3aba4 <my_regprop@@Base+0x8e0>
   3b864:	ldr	x0, [sp, #160]
   3b868:	cbz	x0, 3af88 <my_regprop@@Base+0xcc4>
   3b86c:	ldr	x22, [sp, #176]
   3b870:	mov	x2, #0x0                   	// #0
   3b874:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   3b878:	add	x1, x1, #0x20
   3b87c:	mov	x0, x19
   3b880:	bl	59a0 <Perl_newSVpvn@plt>
   3b884:	mov	x23, x0
   3b888:	b	3af4c <my_regprop@@Base+0xc88>
   3b88c:	stp	x27, x28, [sp, #96]
   3b890:	bl	5300 <__stack_chk_fail@plt>
   3b894:	stp	x29, x30, [sp, #-128]!
   3b898:	mov	x29, sp
   3b89c:	stp	x19, x20, [sp, #16]
   3b8a0:	stp	x21, x22, [sp, #32]
   3b8a4:	stp	x23, x24, [sp, #48]
   3b8a8:	stp	x25, x26, [sp, #64]
   3b8ac:	stp	x27, x28, [sp, #80]
   3b8b0:	mov	x21, x0
   3b8b4:	mov	x19, x1
   3b8b8:	mov	x26, x2
   3b8bc:	mov	x27, x3
   3b8c0:	mov	w20, w4
   3b8c4:	str	xzr, [sp, #120]
   3b8c8:	ldr	x0, [x0, #224]
   3b8cc:	cbz	x0, 3b934 <my_regprop@@Base+0x1670>
   3b8d0:	mov	w2, #0x1                   	// #1
   3b8d4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3b8d8:	add	x1, x1, #0x608
   3b8dc:	mov	x0, x21
   3b8e0:	bl	54f0 <Perl_get_sv@plt>
   3b8e4:	mov	x22, x0
   3b8e8:	cbz	x0, 3b934 <my_regprop@@Base+0x1670>
   3b8ec:	ldr	w0, [x0, #12]
   3b8f0:	tbz	w0, #8, 3b96c <my_regprop@@Base+0x16a8>
   3b8f4:	ldr	w1, [x22, #12]
   3b8f8:	and	w0, w1, #0x3fff00
   3b8fc:	and	w0, w0, #0xffe001ff
   3b900:	cmp	w0, #0x100
   3b904:	b.ne	3b9d8 <my_regprop@@Base+0x1714>  // b.any
   3b908:	and	w2, w1, #0xf
   3b90c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3b910:	ldr	x0, [x0, #3712]
   3b914:	ldrb	w0, [x0, w2, uxtw]
   3b918:	cbz	w0, 3b980 <my_regprop@@Base+0x16bc>
   3b91c:	and	w0, w1, #0xc000
   3b920:	cmp	w0, #0x8, lsl #12
   3b924:	b.eq	3b9a4 <my_regprop@@Base+0x16e0>  // b.none
   3b928:	ldr	x0, [x22]
   3b92c:	ldr	x0, [x0, #32]
   3b930:	str	x0, [sp, #120]
   3b934:	cbz	x19, 3b9ec <my_regprop@@Base+0x1728>
   3b938:	cbz	x26, 3ba10 <my_regprop@@Base+0x174c>
   3b93c:	cbz	x27, 3ba34 <my_regprop@@Base+0x1770>
   3b940:	lsl	w0, w20, #1
   3b944:	str	w0, [sp, #100]
   3b948:	lsl	x0, x27, #2
   3b94c:	str	x0, [sp, #104]
   3b950:	mov	x20, x26
   3b954:	mov	w28, #0x400                 	// #1024
   3b958:	movk	w28, #0x20, lsl #16
   3b95c:	adrp	x25, 7d000 <boot_re@@Base+0x1b41c>
   3b960:	add	x25, x25, #0x20
   3b964:	mov	x24, x25
   3b968:	b	3bb20 <my_regprop@@Base+0x185c>
   3b96c:	mov	x2, #0xff08                	// #65288
   3b970:	mov	x1, x22
   3b974:	mov	x0, x21
   3b978:	bl	5310 <Perl_sv_setuv@plt>
   3b97c:	b	3b8f4 <my_regprop@@Base+0x1630>
   3b980:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b984:	add	x3, x3, #0xc10
   3b988:	add	x3, x3, #0x7c0
   3b98c:	mov	w2, #0x4d4a                	// #19786
   3b990:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b994:	add	x1, x1, #0xfb8
   3b998:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b99c:	add	x0, x0, #0xda0
   3b9a0:	bl	58e0 <__assert_fail@plt>
   3b9a4:	and	w0, w1, #0xff
   3b9a8:	sub	w0, w0, #0x9
   3b9ac:	cmp	w0, #0x1
   3b9b0:	b.hi	3b928 <my_regprop@@Base+0x1664>  // b.pmore
   3b9b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b9b8:	add	x3, x3, #0xc10
   3b9bc:	add	x3, x3, #0x7c0
   3b9c0:	mov	w2, #0x4d4a                	// #19786
   3b9c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3b9c8:	add	x1, x1, #0xfb8
   3b9cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3b9d0:	add	x0, x0, #0xdd0
   3b9d4:	bl	58e0 <__assert_fail@plt>
   3b9d8:	mov	w2, #0x2                   	// #2
   3b9dc:	mov	x1, x22
   3b9e0:	mov	x0, x21
   3b9e4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3b9e8:	b	3b930 <my_regprop@@Base+0x166c>
   3b9ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3b9f0:	add	x3, x3, #0xc10
   3b9f4:	add	x3, x3, #0x7c0
   3b9f8:	mov	w2, #0x4d4c                	// #19788
   3b9fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ba00:	add	x1, x1, #0xfb8
   3ba04:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   3ba08:	add	x0, x0, #0xfe8
   3ba0c:	bl	58e0 <__assert_fail@plt>
   3ba10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3ba14:	add	x3, x3, #0xc10
   3ba18:	add	x3, x3, #0x7c0
   3ba1c:	mov	w2, #0x4d4c                	// #19788
   3ba20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ba24:	add	x1, x1, #0xfb8
   3ba28:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   3ba2c:	add	x0, x0, #0x418
   3ba30:	bl	58e0 <__assert_fail@plt>
   3ba34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3ba38:	add	x3, x3, #0xc10
   3ba3c:	add	x3, x3, #0x7c0
   3ba40:	mov	w2, #0x4d4c                	// #19788
   3ba44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ba48:	add	x1, x1, #0xfb8
   3ba4c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3ba50:	add	x0, x0, #0x680
   3ba54:	bl	58e0 <__assert_fail@plt>
   3ba58:	mov	x2, x24
   3ba5c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3ba60:	add	x1, x1, #0x7f8
   3ba64:	mov	x0, x21
   3ba68:	bl	50e0 <Perl_re_printf@plt>
   3ba6c:	b	3bba0 <my_regprop@@Base+0x18dc>
   3ba70:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3ba74:	add	x1, x1, #0x800
   3ba78:	mov	x0, x21
   3ba7c:	bl	50e0 <Perl_re_printf@plt>
   3ba80:	adrp	x4, 77000 <boot_re@@Base+0x1541c>
   3ba84:	add	x4, x4, #0xc90
   3ba88:	cmp	x20, x26
   3ba8c:	csel	x4, x4, x25, eq  // eq = none
   3ba90:	mov	x3, x24
   3ba94:	ldr	w2, [sp, #100]
   3ba98:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3ba9c:	add	x1, x1, #0x818
   3baa0:	mov	x0, x21
   3baa4:	bl	50e0 <Perl_re_printf@plt>
   3baa8:	ldr	x0, [x19, #104]
   3baac:	str	w0, [x19, #344]
   3bab0:	ldr	x0, [x19, #64]
   3bab4:	str	x0, [x19, #336]
   3bab8:	ldr	x3, [x19, #96]
   3babc:	mov	x5, x19
   3bac0:	mov	x4, #0x0                   	// #0
   3bac4:	add	x3, x3, x23
   3bac8:	ldr	x2, [x19, #368]
   3bacc:	ldr	x1, [x19, #32]
   3bad0:	mov	x0, x21
   3bad4:	bl	5580 <my_regprop@plt>
   3bad8:	ldr	x1, [x19, #368]
   3badc:	ldr	w0, [x1, #12]
   3bae0:	and	w0, w0, w28
   3bae4:	cmp	w0, #0x400
   3bae8:	b.ne	3bbc8 <my_regprop@@Base+0x1904>  // b.any
   3baec:	ldr	x2, [x1, #16]
   3baf0:	cbz	x22, 3bc8c <my_regprop@@Base+0x19c8>
   3baf4:	mov	x4, x25
   3baf8:	mov	x5, x24
   3bafc:	mov	x3, x20
   3bb00:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3bb04:	add	x1, x1, #0x688
   3bb08:	mov	x0, x21
   3bb0c:	bl	50e0 <Perl_re_printf@plt>
   3bb10:	cbz	x22, 3bbe0 <my_regprop@@Base+0x191c>
   3bb14:	ldr	x20, [x19, #96]
   3bb18:	sub	x20, x22, x20
   3bb1c:	asr	x20, x20, #2
   3bb20:	lsl	x23, x20, #2
   3bb24:	ldr	x1, [x19, #96]
   3bb28:	add	x1, x1, x23
   3bb2c:	mov	x0, x21
   3bb30:	bl	58a0 <Perl_regnext@plt>
   3bb34:	mov	x22, x0
   3bb38:	ldr	w0, [x21, #2368]
   3bb3c:	tbnz	w0, #20, 3bb48 <my_regprop@@Base+0x1884>
   3bb40:	ldr	x0, [sp, #120]
   3bb44:	tbz	w0, #0, 3bb10 <my_regprop@@Base+0x184c>
   3bb48:	ldr	w0, [x21, #2368]
   3bb4c:	tbnz	w0, #20, 3bb58 <my_regprop@@Base+0x1894>
   3bb50:	ldr	x0, [sp, #120]
   3bb54:	tbz	w0, #0, 3bab8 <my_regprop@@Base+0x17f4>
   3bb58:	ldr	x2, [x19, #64]
   3bb5c:	ldr	x0, [x19, #336]
   3bb60:	cmp	x0, x2
   3bb64:	b.eq	3ba58 <my_regprop@@Base+0x1794>  // b.none
   3bb68:	ldr	x3, [x19, #56]
   3bb6c:	mov	w7, #0x820e                	// #33294
   3bb70:	mov	x6, x24
   3bb74:	mov	x5, x24
   3bb78:	mov	x4, #0x10                  	// #16
   3bb7c:	sub	x3, x3, x2
   3bb80:	ldr	x1, [x19, #368]
   3bb84:	mov	x0, x21
   3bb88:	bl	53f0 <Perl_pv_pretty@plt>
   3bb8c:	mov	x2, x0
   3bb90:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3bb94:	add	x1, x1, #0xb50
   3bb98:	mov	x0, x21
   3bb9c:	bl	50e0 <Perl_re_printf@plt>
   3bba0:	ldr	x2, [x19, #104]
   3bba4:	ldrsw	x0, [x19, #344]
   3bba8:	cmp	x0, x2
   3bbac:	b.ne	3ba70 <my_regprop@@Base+0x17ac>  // b.any
   3bbb0:	mov	x2, x24
   3bbb4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3bbb8:	add	x1, x1, #0x808
   3bbbc:	mov	x0, x21
   3bbc0:	bl	50e0 <Perl_re_printf@plt>
   3bbc4:	b	3ba80 <my_regprop@@Base+0x17bc>
   3bbc8:	mov	w3, #0x22                  	// #34
   3bbcc:	mov	x2, #0x0                   	// #0
   3bbd0:	mov	x0, x21
   3bbd4:	bl	5200 <Perl_sv_2pv_flags@plt>
   3bbd8:	mov	x2, x0
   3bbdc:	b	3baf0 <my_regprop@@Base+0x182c>
   3bbe0:	ldr	x0, [x19, #96]
   3bbe4:	add	x23, x0, x23
   3bbe8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3bbec:	add	x0, x0, #0xc10
   3bbf0:	add	x0, x0, #0x7d0
   3bbf4:	ldrb	w1, [x23, #1]
   3bbf8:	ldrb	w0, [x0, w1, sxtw]
   3bbfc:	cbz	w0, 3bc5c <my_regprop@@Base+0x1998>
   3bc00:	sub	x1, x27, x20
   3bc04:	mov	x0, #0xffffffff            	// #4294967295
   3bc08:	cmp	x1, x0
   3bc0c:	b.hi	3bc38 <my_regprop@@Base+0x1974>  // b.pmore
   3bc10:	sub	w20, w27, w20
   3bc14:	str	w20, [x23, #4]
   3bc18:	mov	w0, #0x1                   	// #1
   3bc1c:	ldp	x19, x20, [sp, #16]
   3bc20:	ldp	x21, x22, [sp, #32]
   3bc24:	ldp	x23, x24, [sp, #48]
   3bc28:	ldp	x25, x26, [sp, #64]
   3bc2c:	ldp	x27, x28, [sp, #80]
   3bc30:	ldp	x29, x30, [sp], #128
   3bc34:	ret
   3bc38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3bc3c:	add	x3, x3, #0xc10
   3bc40:	add	x3, x3, #0x7c0
   3bc44:	mov	w2, #0x4d64                	// #19812
   3bc48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3bc4c:	add	x1, x1, #0xfb8
   3bc50:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3bc54:	add	x0, x0, #0x6a0
   3bc58:	bl	58e0 <__assert_fail@plt>
   3bc5c:	sub	x1, x27, x20
   3bc60:	mov	x0, #0xffff                	// #65535
   3bc64:	cmp	x1, x0
   3bc68:	b.gt	3bc7c <my_regprop@@Base+0x19b8>
   3bc6c:	sub	w20, w27, w20
   3bc70:	strh	w20, [x23, #2]
   3bc74:	mov	w0, #0x1                   	// #1
   3bc78:	b	3bc1c <my_regprop@@Base+0x1958>
   3bc7c:	mov	w0, #0xffffffff            	// #-1
   3bc80:	strh	w0, [x23, #2]
   3bc84:	mov	w0, #0x0                   	// #0
   3bc88:	b	3bc1c <my_regprop@@Base+0x1958>
   3bc8c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3bc90:	ldr	x0, [x0, #3776]
   3bc94:	ldr	x1, [x19, #96]
   3bc98:	ldr	x3, [sp, #104]
   3bc9c:	add	x1, x1, x3
   3bca0:	ldrb	w1, [x1, #1]
   3bca4:	ldr	x5, [x0, x1, lsl #3]
   3bca8:	adrp	x4, 79000 <boot_re@@Base+0x1741c>
   3bcac:	add	x4, x4, #0x678
   3bcb0:	b	3bafc <my_regprop@@Base+0x1838>
   3bcb4:	stp	x29, x30, [sp, #-128]!
   3bcb8:	mov	x29, sp
   3bcbc:	stp	x19, x20, [sp, #16]
   3bcc0:	stp	x21, x22, [sp, #32]
   3bcc4:	stp	x23, x24, [sp, #48]
   3bcc8:	stp	x25, x26, [sp, #64]
   3bccc:	stp	x27, x28, [sp, #80]
   3bcd0:	mov	x21, x0
   3bcd4:	mov	x19, x1
   3bcd8:	str	x2, [sp, #96]
   3bcdc:	mov	x25, x3
   3bce0:	mov	w20, w4
   3bce4:	str	xzr, [sp, #120]
   3bce8:	ldr	x0, [x0, #224]
   3bcec:	cbz	x0, 3bd54 <my_regprop@@Base+0x1a90>
   3bcf0:	mov	w2, #0x1                   	// #1
   3bcf4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3bcf8:	add	x1, x1, #0x608
   3bcfc:	mov	x0, x21
   3bd00:	bl	54f0 <Perl_get_sv@plt>
   3bd04:	mov	x22, x0
   3bd08:	cbz	x0, 3bd54 <my_regprop@@Base+0x1a90>
   3bd0c:	ldr	w0, [x0, #12]
   3bd10:	tbz	w0, #8, 3bd90 <my_regprop@@Base+0x1acc>
   3bd14:	ldr	w1, [x22, #12]
   3bd18:	and	w0, w1, #0x3fff00
   3bd1c:	and	w0, w0, #0xffe001ff
   3bd20:	cmp	w0, #0x100
   3bd24:	b.ne	3bdfc <my_regprop@@Base+0x1b38>  // b.any
   3bd28:	and	w2, w1, #0xf
   3bd2c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3bd30:	ldr	x0, [x0, #3712]
   3bd34:	ldrb	w0, [x0, w2, uxtw]
   3bd38:	cbz	w0, 3bda4 <my_regprop@@Base+0x1ae0>
   3bd3c:	and	w0, w1, #0xc000
   3bd40:	cmp	w0, #0x8, lsl #12
   3bd44:	b.eq	3bdc8 <my_regprop@@Base+0x1b04>  // b.none
   3bd48:	ldr	x0, [x22]
   3bd4c:	ldr	x0, [x0, #32]
   3bd50:	str	x0, [sp, #120]
   3bd54:	cbz	x19, 3be10 <my_regprop@@Base+0x1b4c>
   3bd58:	ldr	x0, [sp, #96]
   3bd5c:	cbz	x0, 3be34 <my_regprop@@Base+0x1b70>
   3bd60:	cbz	x25, 3be58 <my_regprop@@Base+0x1b94>
   3bd64:	lsl	w0, w20, #1
   3bd68:	str	w0, [sp, #108]
   3bd6c:	ldr	x23, [sp, #96]
   3bd70:	mov	w22, #0x65                  	// #101
   3bd74:	mov	w28, #0x400                 	// #1024
   3bd78:	movk	w28, #0x20, lsl #16
   3bd7c:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
   3bd80:	ldr	x27, [x27, #3776]
   3bd84:	adrp	x26, 79000 <boot_re@@Base+0x1741c>
   3bd88:	add	x26, x26, #0x6c8
   3bd8c:	b	3bf74 <my_regprop@@Base+0x1cb0>
   3bd90:	mov	x2, #0xff08                	// #65288
   3bd94:	mov	x1, x22
   3bd98:	mov	x0, x21
   3bd9c:	bl	5310 <Perl_sv_setuv@plt>
   3bda0:	b	3bd14 <my_regprop@@Base+0x1a50>
   3bda4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3bda8:	add	x3, x3, #0xc10
   3bdac:	add	x3, x3, #0x838
   3bdb0:	mov	w2, #0x4d93                	// #19859
   3bdb4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3bdb8:	add	x1, x1, #0xfb8
   3bdbc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3bdc0:	add	x0, x0, #0xda0
   3bdc4:	bl	58e0 <__assert_fail@plt>
   3bdc8:	and	w0, w1, #0xff
   3bdcc:	sub	w0, w0, #0x9
   3bdd0:	cmp	w0, #0x1
   3bdd4:	b.hi	3bd48 <my_regprop@@Base+0x1a84>  // b.pmore
   3bdd8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3bddc:	add	x3, x3, #0xc10
   3bde0:	add	x3, x3, #0x838
   3bde4:	mov	w2, #0x4d93                	// #19859
   3bde8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3bdec:	add	x1, x1, #0xfb8
   3bdf0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3bdf4:	add	x0, x0, #0xdd0
   3bdf8:	bl	58e0 <__assert_fail@plt>
   3bdfc:	mov	w2, #0x2                   	// #2
   3be00:	mov	x1, x22
   3be04:	mov	x0, x21
   3be08:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3be0c:	b	3bd50 <my_regprop@@Base+0x1a8c>
   3be10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3be14:	add	x3, x3, #0xc10
   3be18:	add	x3, x3, #0x838
   3be1c:	mov	w2, #0x4d95                	// #19861
   3be20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3be24:	add	x1, x1, #0xfb8
   3be28:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   3be2c:	add	x0, x0, #0xfe8
   3be30:	bl	58e0 <__assert_fail@plt>
   3be34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3be38:	add	x3, x3, #0xc10
   3be3c:	add	x3, x3, #0x838
   3be40:	mov	w2, #0x4d95                	// #19861
   3be44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3be48:	add	x1, x1, #0xfb8
   3be4c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   3be50:	add	x0, x0, #0x418
   3be54:	bl	58e0 <__assert_fail@plt>
   3be58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3be5c:	add	x3, x3, #0xc10
   3be60:	add	x3, x3, #0x838
   3be64:	mov	w2, #0x4d95                	// #19861
   3be68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3be6c:	add	x1, x1, #0xfb8
   3be70:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3be74:	add	x0, x0, #0x680
   3be78:	bl	58e0 <__assert_fail@plt>
   3be7c:	cmp	w0, #0x22
   3be80:	b.hi	3be8c <my_regprop@@Base+0x1bc8>  // b.pmore
   3be84:	mov	w22, #0x0                   	// #0
   3be88:	b	3bfac <my_regprop@@Base+0x1ce8>
   3be8c:	cmp	w22, #0x65
   3be90:	b.eq	3bea0 <my_regprop@@Base+0x1bdc>  // b.none
   3be94:	cmp	w0, w22
   3be98:	csel	w22, w22, wzr, eq  // eq = none
   3be9c:	b	3bfac <my_regprop@@Base+0x1ce8>
   3bea0:	mov	w22, w0
   3bea4:	b	3bfac <my_regprop@@Base+0x1ce8>
   3bea8:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3beac:	add	x2, x2, #0x20
   3beb0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3beb4:	add	x1, x1, #0x7f8
   3beb8:	mov	x0, x21
   3bebc:	bl	50e0 <Perl_re_printf@plt>
   3bec0:	b	3c018 <my_regprop@@Base+0x1d54>
   3bec4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3bec8:	add	x1, x1, #0x800
   3becc:	mov	x0, x21
   3bed0:	bl	50e0 <Perl_re_printf@plt>
   3bed4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3bed8:	add	x0, x0, #0x20
   3bedc:	adrp	x4, 79000 <boot_re@@Base+0x1741c>
   3bee0:	add	x4, x4, #0x6c0
   3bee4:	ldr	x1, [sp, #96]
   3bee8:	cmp	x23, x1
   3beec:	csel	x4, x4, x0, eq  // eq = none
   3bef0:	mov	x3, x0
   3bef4:	ldr	w2, [sp, #108]
   3bef8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3befc:	add	x1, x1, #0x818
   3bf00:	mov	x0, x21
   3bf04:	bl	50e0 <Perl_re_printf@plt>
   3bf08:	ldr	x0, [x19, #104]
   3bf0c:	str	w0, [x19, #344]
   3bf10:	ldr	x0, [x19, #64]
   3bf14:	str	x0, [x19, #336]
   3bf18:	ldr	x3, [x19, #96]
   3bf1c:	mov	x5, x19
   3bf20:	mov	x4, #0x0                   	// #0
   3bf24:	add	x3, x3, x24
   3bf28:	ldr	x2, [x19, #368]
   3bf2c:	ldr	x1, [x19, #32]
   3bf30:	mov	x0, x21
   3bf34:	bl	5580 <my_regprop@plt>
   3bf38:	ldr	x1, [x19, #368]
   3bf3c:	ldr	w0, [x1, #12]
   3bf40:	and	w0, w0, w28
   3bf44:	cmp	w0, #0x400
   3bf48:	b.ne	3c044 <my_regprop@@Base+0x1d80>  // b.any
   3bf4c:	ldr	x2, [x1, #16]
   3bf50:	ldr	x4, [x27, w22, sxtw #3]
   3bf54:	mov	x3, x23
   3bf58:	mov	x1, x26
   3bf5c:	mov	x0, x21
   3bf60:	bl	50e0 <Perl_re_printf@plt>
   3bf64:	cbz	x20, 3c05c <my_regprop@@Base+0x1d98>
   3bf68:	ldr	x23, [x19, #96]
   3bf6c:	sub	x20, x20, x23
   3bf70:	asr	x23, x20, #2
   3bf74:	lsl	x24, x23, #2
   3bf78:	ldr	x1, [x19, #96]
   3bf7c:	add	x1, x1, x24
   3bf80:	mov	x0, x21
   3bf84:	bl	58a0 <Perl_regnext@plt>
   3bf88:	mov	x20, x0
   3bf8c:	cbz	w22, 3bfac <my_regprop@@Base+0x1ce8>
   3bf90:	ldr	x0, [x19, #96]
   3bf94:	add	x0, x0, x24
   3bf98:	ldrb	w0, [x0, #1]
   3bf9c:	cmp	w0, #0x2e
   3bfa0:	b.ls	3be7c <my_regprop@@Base+0x1bb8>  // b.plast
   3bfa4:	cmp	w0, #0x2f
   3bfa8:	csel	w22, w22, wzr, eq  // eq = none
   3bfac:	ldr	w0, [x21, #2368]
   3bfb0:	tbnz	w0, #20, 3bfbc <my_regprop@@Base+0x1cf8>
   3bfb4:	ldr	x0, [sp, #120]
   3bfb8:	tbz	w0, #0, 3bf64 <my_regprop@@Base+0x1ca0>
   3bfbc:	ldr	w0, [x21, #2368]
   3bfc0:	tbnz	w0, #20, 3bfcc <my_regprop@@Base+0x1d08>
   3bfc4:	ldr	x0, [sp, #120]
   3bfc8:	tbz	w0, #0, 3bf18 <my_regprop@@Base+0x1c54>
   3bfcc:	ldr	x2, [x19, #64]
   3bfd0:	ldr	x0, [x19, #336]
   3bfd4:	cmp	x0, x2
   3bfd8:	b.eq	3bea8 <my_regprop@@Base+0x1be4>  // b.none
   3bfdc:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   3bfe0:	add	x5, x5, #0x20
   3bfe4:	ldr	x3, [x19, #56]
   3bfe8:	mov	w7, #0x820e                	// #33294
   3bfec:	mov	x6, x5
   3bff0:	mov	x4, #0x10                  	// #16
   3bff4:	sub	x3, x3, x2
   3bff8:	ldr	x1, [x19, #368]
   3bffc:	mov	x0, x21
   3c000:	bl	53f0 <Perl_pv_pretty@plt>
   3c004:	mov	x2, x0
   3c008:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c00c:	add	x1, x1, #0xb50
   3c010:	mov	x0, x21
   3c014:	bl	50e0 <Perl_re_printf@plt>
   3c018:	ldr	x2, [x19, #104]
   3c01c:	ldrsw	x0, [x19, #344]
   3c020:	cmp	x0, x2
   3c024:	b.ne	3bec4 <my_regprop@@Base+0x1c00>  // b.any
   3c028:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3c02c:	add	x2, x2, #0x20
   3c030:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c034:	add	x1, x1, #0x808
   3c038:	mov	x0, x21
   3c03c:	bl	50e0 <Perl_re_printf@plt>
   3c040:	b	3bed4 <my_regprop@@Base+0x1c10>
   3c044:	mov	w3, #0x22                  	// #34
   3c048:	mov	x2, #0x0                   	// #0
   3c04c:	mov	x0, x21
   3c050:	bl	5200 <Perl_sv_2pv_flags@plt>
   3c054:	mov	x2, x0
   3c058:	b	3bf50 <my_regprop@@Base+0x1c8c>
   3c05c:	ldr	w0, [x21, #2368]
   3c060:	tbnz	w0, #20, 3c06c <my_regprop@@Base+0x1da8>
   3c064:	ldr	x0, [sp, #120]
   3c068:	tbz	w0, #0, 3c16c <my_regprop@@Base+0x1ea8>
   3c06c:	ldr	w0, [x21, #2368]
   3c070:	tbnz	w0, #20, 3c07c <my_regprop@@Base+0x1db8>
   3c074:	ldr	x0, [sp, #120]
   3c078:	tbz	w0, #0, 3c118 <my_regprop@@Base+0x1e54>
   3c07c:	ldr	x2, [x19, #64]
   3c080:	ldr	x0, [x19, #336]
   3c084:	cmp	x0, x2
   3c088:	b.eq	3c1c4 <my_regprop@@Base+0x1f00>  // b.none
   3c08c:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   3c090:	add	x5, x5, #0x20
   3c094:	ldr	x3, [x19, #56]
   3c098:	mov	w7, #0x820e                	// #33294
   3c09c:	mov	x6, x5
   3c0a0:	mov	x4, #0x10                  	// #16
   3c0a4:	sub	x3, x3, x2
   3c0a8:	ldr	x1, [x19, #368]
   3c0ac:	mov	x0, x21
   3c0b0:	bl	53f0 <Perl_pv_pretty@plt>
   3c0b4:	mov	x2, x0
   3c0b8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c0bc:	add	x1, x1, #0xb50
   3c0c0:	mov	x0, x21
   3c0c4:	bl	50e0 <Perl_re_printf@plt>
   3c0c8:	ldr	x2, [x19, #104]
   3c0cc:	ldrsw	x0, [x19, #344]
   3c0d0:	cmp	x0, x2
   3c0d4:	b.eq	3c1e0 <my_regprop@@Base+0x1f1c>  // b.none
   3c0d8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c0dc:	add	x1, x1, #0x800
   3c0e0:	mov	x0, x21
   3c0e4:	bl	50e0 <Perl_re_printf@plt>
   3c0e8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c0ec:	add	x3, x3, #0x20
   3c0f0:	mov	x4, x3
   3c0f4:	ldr	w2, [sp, #108]
   3c0f8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c0fc:	add	x1, x1, #0x818
   3c100:	mov	x0, x21
   3c104:	bl	50e0 <Perl_re_printf@plt>
   3c108:	ldr	x0, [x19, #104]
   3c10c:	str	w0, [x19, #344]
   3c110:	ldr	x0, [x19, #64]
   3c114:	str	x0, [x19, #336]
   3c118:	ldr	x3, [x19, #96]
   3c11c:	mov	x5, x19
   3c120:	mov	x4, #0x0                   	// #0
   3c124:	add	x3, x3, x25, lsl #2
   3c128:	ldr	x2, [x19, #368]
   3c12c:	ldr	x1, [x19, #32]
   3c130:	mov	x0, x21
   3c134:	bl	5580 <my_regprop@plt>
   3c138:	ldr	x1, [x19, #368]
   3c13c:	ldr	w0, [x1, #12]
   3c140:	and	w0, w0, #0x3ffc00
   3c144:	and	w0, w0, #0xffe007ff
   3c148:	cmp	w0, #0x400
   3c14c:	b.ne	3c1fc <my_regprop@@Base+0x1f38>  // b.any
   3c150:	ldr	x2, [x1, #16]
   3c154:	sub	x4, x25, x23
   3c158:	mov	x3, x25
   3c15c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3c160:	add	x1, x1, #0x6e0
   3c164:	mov	x0, x21
   3c168:	bl	50e0 <Perl_re_printf@plt>
   3c16c:	ldr	x0, [x19, #96]
   3c170:	add	x24, x0, x24
   3c174:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3c178:	add	x0, x0, #0xc10
   3c17c:	add	x0, x0, #0x7d0
   3c180:	ldrb	w1, [x24, #1]
   3c184:	ldrb	w0, [x0, w1, sxtw]
   3c188:	cbz	w0, 3c238 <my_regprop@@Base+0x1f74>
   3c18c:	sub	x1, x25, x23
   3c190:	mov	x0, #0xffffffff            	// #4294967295
   3c194:	cmp	x1, x0
   3c198:	b.hi	3c214 <my_regprop@@Base+0x1f50>  // b.pmore
   3c19c:	sub	w23, w25, w23
   3c1a0:	str	w23, [x24, #4]
   3c1a4:	mov	w0, #0x1                   	// #1
   3c1a8:	ldp	x19, x20, [sp, #16]
   3c1ac:	ldp	x21, x22, [sp, #32]
   3c1b0:	ldp	x23, x24, [sp, #48]
   3c1b4:	ldp	x25, x26, [sp, #64]
   3c1b8:	ldp	x27, x28, [sp, #80]
   3c1bc:	ldp	x29, x30, [sp], #128
   3c1c0:	ret
   3c1c4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3c1c8:	add	x2, x2, #0x20
   3c1cc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c1d0:	add	x1, x1, #0x7f8
   3c1d4:	mov	x0, x21
   3c1d8:	bl	50e0 <Perl_re_printf@plt>
   3c1dc:	b	3c0c8 <my_regprop@@Base+0x1e04>
   3c1e0:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3c1e4:	add	x2, x2, #0x20
   3c1e8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c1ec:	add	x1, x1, #0x808
   3c1f0:	mov	x0, x21
   3c1f4:	bl	50e0 <Perl_re_printf@plt>
   3c1f8:	b	3c0e8 <my_regprop@@Base+0x1e24>
   3c1fc:	mov	w3, #0x22                  	// #34
   3c200:	mov	x2, #0x0                   	// #0
   3c204:	mov	x0, x21
   3c208:	bl	5200 <Perl_sv_2pv_flags@plt>
   3c20c:	mov	x2, x0
   3c210:	b	3c154 <my_regprop@@Base+0x1e90>
   3c214:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c218:	add	x3, x3, #0xc10
   3c21c:	add	x3, x3, #0x838
   3c220:	mov	w2, #0x4dd4                	// #19924
   3c224:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c228:	add	x1, x1, #0xfb8
   3c22c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3c230:	add	x0, x0, #0x6a0
   3c234:	bl	58e0 <__assert_fail@plt>
   3c238:	sub	x1, x25, x23
   3c23c:	mov	x0, #0xffff                	// #65535
   3c240:	cmp	x1, x0
   3c244:	b.gt	3c258 <my_regprop@@Base+0x1f94>
   3c248:	sub	w23, w25, w23
   3c24c:	strh	w23, [x24, #2]
   3c250:	mov	w0, #0x1                   	// #1
   3c254:	b	3c1a8 <my_regprop@@Base+0x1ee4>
   3c258:	mov	w0, #0xffffffff            	// #-1
   3c25c:	strh	w0, [x24, #2]
   3c260:	mov	w0, #0x0                   	// #0
   3c264:	b	3c1a8 <my_regprop@@Base+0x1ee4>
   3c268:	sub	sp, sp, #0x100
   3c26c:	stp	x29, x30, [sp, #48]
   3c270:	add	x29, sp, #0x30
   3c274:	stp	x19, x20, [sp, #64]
   3c278:	stp	x21, x22, [sp, #80]
   3c27c:	stp	x23, x24, [sp, #96]
   3c280:	stp	x25, x26, [sp, #112]
   3c284:	stp	x27, x28, [sp, #128]
   3c288:	mov	x20, x0
   3c28c:	mov	x19, x1
   3c290:	mov	w23, w2
   3c294:	mov	x21, x3
   3c298:	str	w4, [sp, #160]
   3c29c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3c2a0:	ldr	x0, [x0, #3920]
   3c2a4:	ldr	x1, [x0]
   3c2a8:	str	x1, [sp, #248]
   3c2ac:	mov	x1, #0x0                   	// #0
   3c2b0:	ldr	w0, [x19]
   3c2b4:	str	w0, [sp, #164]
   3c2b8:	ldr	x0, [x19, #64]
   3c2bc:	str	x0, [sp, #152]
   3c2c0:	str	xzr, [sp, #224]
   3c2c4:	ldr	x0, [x20, #224]
   3c2c8:	cbz	x0, 3c330 <my_regprop@@Base+0x206c>
   3c2cc:	mov	w2, #0x1                   	// #1
   3c2d0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   3c2d4:	add	x1, x1, #0x608
   3c2d8:	mov	x0, x20
   3c2dc:	bl	54f0 <Perl_get_sv@plt>
   3c2e0:	mov	x22, x0
   3c2e4:	cbz	x0, 3c330 <my_regprop@@Base+0x206c>
   3c2e8:	ldr	w0, [x0, #12]
   3c2ec:	tbz	w0, #8, 3c520 <my_regprop@@Base+0x225c>
   3c2f0:	ldr	w1, [x22, #12]
   3c2f4:	and	w0, w1, #0x3fff00
   3c2f8:	and	w0, w0, #0xffe001ff
   3c2fc:	cmp	w0, #0x100
   3c300:	b.ne	3c58c <my_regprop@@Base+0x22c8>  // b.any
   3c304:	and	w2, w1, #0xf
   3c308:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3c30c:	ldr	x0, [x0, #3712]
   3c310:	ldrb	w0, [x0, w2, uxtw]
   3c314:	cbz	w0, 3c534 <my_regprop@@Base+0x2270>
   3c318:	and	w0, w1, #0xc000
   3c31c:	cmp	w0, #0x8, lsl #12
   3c320:	b.eq	3c558 <my_regprop@@Base+0x2294>  // b.none
   3c324:	ldr	x0, [x22]
   3c328:	ldr	x0, [x0, #32]
   3c32c:	str	x0, [sp, #224]
   3c330:	cbz	x21, 3c5a0 <my_regprop@@Base+0x22dc>
   3c334:	ldr	w0, [x20, #2368]
   3c338:	tbnz	w0, #20, 3c344 <my_regprop@@Base+0x2080>
   3c33c:	ldr	x0, [sp, #224]
   3c340:	tbz	w0, #0, 3c410 <my_regprop@@Base+0x214c>
   3c344:	ldr	w0, [x20, #2368]
   3c348:	tbnz	w0, #20, 3c354 <my_regprop@@Base+0x2090>
   3c34c:	ldr	x0, [sp, #224]
   3c350:	tbz	w0, #0, 3c3f8 <my_regprop@@Base+0x2134>
   3c354:	ldr	x2, [x19, #64]
   3c358:	ldr	x0, [x19, #336]
   3c35c:	cmp	x0, x2
   3c360:	b.eq	3c5c4 <my_regprop@@Base+0x2300>  // b.none
   3c364:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   3c368:	add	x5, x5, #0x20
   3c36c:	ldr	x3, [x19, #56]
   3c370:	mov	w7, #0x820e                	// #33294
   3c374:	mov	x6, x5
   3c378:	mov	x4, #0x10                  	// #16
   3c37c:	sub	x3, x3, x2
   3c380:	ldr	x1, [x19, #368]
   3c384:	mov	x0, x20
   3c388:	bl	53f0 <Perl_pv_pretty@plt>
   3c38c:	mov	x2, x0
   3c390:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c394:	add	x1, x1, #0xb50
   3c398:	mov	x0, x20
   3c39c:	bl	50e0 <Perl_re_printf@plt>
   3c3a0:	ldr	x2, [x19, #104]
   3c3a4:	ldrsw	x0, [x19, #344]
   3c3a8:	cmp	x0, x2
   3c3ac:	b.eq	3c5e0 <my_regprop@@Base+0x231c>  // b.none
   3c3b0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c3b4:	add	x1, x1, #0x800
   3c3b8:	mov	x0, x20
   3c3bc:	bl	50e0 <Perl_re_printf@plt>
   3c3c0:	adrp	x4, 79000 <boot_re@@Base+0x1741c>
   3c3c4:	add	x4, x4, #0x710
   3c3c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c3cc:	add	x3, x3, #0x20
   3c3d0:	ldr	w0, [sp, #160]
   3c3d4:	lsl	w2, w0, #1
   3c3d8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c3dc:	add	x1, x1, #0x818
   3c3e0:	mov	x0, x20
   3c3e4:	bl	50e0 <Perl_re_printf@plt>
   3c3e8:	ldr	x0, [x19, #104]
   3c3ec:	str	w0, [x19, #344]
   3c3f0:	ldr	x0, [x19, #64]
   3c3f4:	str	x0, [x19, #336]
   3c3f8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   3c3fc:	add	x2, x2, #0x8d8
   3c400:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3c404:	add	x1, x1, #0x718
   3c408:	mov	x0, x20
   3c40c:	bl	50e0 <Perl_re_printf@plt>
   3c410:	mov	w2, #0x1                   	// #1
   3c414:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3c418:	add	x1, x1, #0x720
   3c41c:	mov	x0, x20
   3c420:	bl	54f0 <Perl_get_sv@plt>
   3c424:	mov	x22, x0
   3c428:	cbz	x0, 3c5fc <my_regprop@@Base+0x2338>
   3c42c:	ldr	w0, [x0, #12]
   3c430:	tbz	w0, #8, 3c620 <my_regprop@@Base+0x235c>
   3c434:	ldr	w24, [sp, #160]
   3c438:	ldr	w1, [x22, #12]
   3c43c:	and	w0, w1, #0x3fff00
   3c440:	and	w0, w0, #0xffe001ff
   3c444:	cmp	w0, #0x100
   3c448:	b.ne	3c68c <my_regprop@@Base+0x23c8>  // b.any
   3c44c:	and	w2, w1, #0xf
   3c450:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3c454:	ldr	x0, [x0, #3712]
   3c458:	ldrb	w0, [x0, w2, uxtw]
   3c45c:	cbz	w0, 3c634 <my_regprop@@Base+0x2370>
   3c460:	and	w0, w1, #0xc000
   3c464:	cmp	w0, #0x8, lsl #12
   3c468:	b.eq	3c658 <my_regprop@@Base+0x2394>  // b.none
   3c46c:	ldr	x0, [x22]
   3c470:	ldr	x0, [x0, #32]
   3c474:	lsl	x0, x0, #2
   3c478:	cmp	x24, x0
   3c47c:	b.ls	3c6dc <my_regprop@@Base+0x2418>  // b.plast
   3c480:	ldr	x1, [x19, #24]
   3c484:	cbz	x1, 3c494 <my_regprop@@Base+0x21d0>
   3c488:	mov	w2, #0xb                   	// #11
   3c48c:	mov	x0, x20
   3c490:	bl	54b0 <Perl_save_pushptr@plt>
   3c494:	ldr	x1, [x19, #160]
   3c498:	cbz	x1, 3c4a8 <my_regprop@@Base+0x21e4>
   3c49c:	mov	w2, #0xa                   	// #10
   3c4a0:	mov	x0, x20
   3c4a4:	bl	54b0 <Perl_save_pushptr@plt>
   3c4a8:	ldr	x1, [x19, #168]
   3c4ac:	cbz	x1, 3c4bc <my_regprop@@Base+0x21f8>
   3c4b0:	mov	w2, #0xa                   	// #10
   3c4b4:	mov	x0, x20
   3c4b8:	bl	54b0 <Perl_save_pushptr@plt>
   3c4bc:	ldr	x0, [x19, #64]
   3c4c0:	ldr	x1, [x19, #72]
   3c4c4:	sub	x1, x0, x1
   3c4c8:	ldr	x0, [x19, #80]
   3c4cc:	add	x0, x0, x1
   3c4d0:	ldr	x1, [x19, #16]
   3c4d4:	cmp	x0, x1
   3c4d8:	b.hi	3c6a4 <my_regprop@@Base+0x23e0>  // b.pmore
   3c4dc:	ldr	x5, [x19, #8]
   3c4e0:	sub	x7, x1, x0
   3c4e4:	subs	x4, x0, x5
   3c4e8:	b.mi	3c6b4 <my_regprop@@Base+0x23f0>  // b.first
   3c4ec:	ldr	w2, [x19, #192]
   3c4f0:	cmp	w2, #0x0
   3c4f4:	cset	w3, ne  // ne = any
   3c4f8:	cmp	x0, x1
   3c4fc:	csel	x0, x0, x1, ls  // ls = plast
   3c500:	str	x0, [sp]
   3c504:	mov	w6, w3
   3c508:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3c50c:	add	x2, x2, #0x750
   3c510:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3c514:	add	x1, x1, #0x3a8
   3c518:	mov	x0, x20
   3c51c:	bl	5420 <Perl_croak@plt>
   3c520:	mov	x2, #0xff08                	// #65288
   3c524:	mov	x1, x22
   3c528:	mov	x0, x20
   3c52c:	bl	5310 <Perl_sv_setuv@plt>
   3c530:	b	3c2f0 <my_regprop@@Base+0x202c>
   3c534:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c538:	add	x3, x3, #0xc10
   3c53c:	add	x3, x3, #0x848
   3c540:	mov	w2, #0x2b23                	// #11043
   3c544:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c548:	add	x1, x1, #0xfb8
   3c54c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3c550:	add	x0, x0, #0xda0
   3c554:	bl	58e0 <__assert_fail@plt>
   3c558:	and	w1, w1, #0xff
   3c55c:	sub	w1, w1, #0x9
   3c560:	cmp	w1, #0x1
   3c564:	b.hi	3c324 <my_regprop@@Base+0x2060>  // b.pmore
   3c568:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c56c:	add	x3, x3, #0xc10
   3c570:	add	x3, x3, #0x848
   3c574:	mov	w2, #0x2b23                	// #11043
   3c578:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c57c:	add	x1, x1, #0xfb8
   3c580:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3c584:	add	x0, x0, #0xdd0
   3c588:	bl	58e0 <__assert_fail@plt>
   3c58c:	mov	w2, #0x2                   	// #2
   3c590:	mov	x1, x22
   3c594:	mov	x0, x20
   3c598:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3c59c:	b	3c32c <my_regprop@@Base+0x2068>
   3c5a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c5a4:	add	x3, x3, #0xc10
   3c5a8:	add	x3, x3, #0x848
   3c5ac:	mov	w2, #0x2b25                	// #11045
   3c5b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c5b4:	add	x1, x1, #0xfb8
   3c5b8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3c5bc:	add	x0, x0, #0xfd0
   3c5c0:	bl	58e0 <__assert_fail@plt>
   3c5c4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3c5c8:	add	x2, x2, #0x20
   3c5cc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c5d0:	add	x1, x1, #0x7f8
   3c5d4:	mov	x0, x20
   3c5d8:	bl	50e0 <Perl_re_printf@plt>
   3c5dc:	b	3c3a0 <my_regprop@@Base+0x20dc>
   3c5e0:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   3c5e4:	add	x2, x2, #0x20
   3c5e8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3c5ec:	add	x1, x1, #0x808
   3c5f0:	mov	x0, x20
   3c5f4:	bl	50e0 <Perl_re_printf@plt>
   3c5f8:	b	3c3c0 <my_regprop@@Base+0x20fc>
   3c5fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c600:	add	x3, x3, #0xc10
   3c604:	add	x3, x3, #0x848
   3c608:	mov	w2, #0x2b2a                	// #11050
   3c60c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c610:	add	x1, x1, #0xfb8
   3c614:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3c618:	add	x0, x0, #0x740
   3c61c:	bl	58e0 <__assert_fail@plt>
   3c620:	mov	x2, #0x3e8                 	// #1000
   3c624:	mov	x1, x22
   3c628:	mov	x0, x20
   3c62c:	bl	5970 <Perl_sv_setiv@plt>
   3c630:	b	3c434 <my_regprop@@Base+0x2170>
   3c634:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c638:	add	x3, x3, #0xc10
   3c63c:	add	x3, x3, #0x848
   3c640:	mov	w2, #0x2b2e                	// #11054
   3c644:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c648:	add	x1, x1, #0xfb8
   3c64c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3c650:	add	x0, x0, #0xda0
   3c654:	bl	58e0 <__assert_fail@plt>
   3c658:	and	w1, w1, #0xff
   3c65c:	sub	w1, w1, #0x9
   3c660:	cmp	w1, #0x1
   3c664:	b.hi	3c46c <my_regprop@@Base+0x21a8>  // b.pmore
   3c668:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c66c:	add	x3, x3, #0xc10
   3c670:	add	x3, x3, #0x848
   3c674:	mov	w2, #0x2b2e                	// #11054
   3c678:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c67c:	add	x1, x1, #0xfb8
   3c680:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3c684:	add	x0, x0, #0xdd0
   3c688:	bl	58e0 <__assert_fail@plt>
   3c68c:	mov	w2, #0x2                   	// #2
   3c690:	mov	x1, x22
   3c694:	mov	x0, x20
   3c698:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3c69c:	lsl	x0, x0, #2
   3c6a0:	b	3c478 <my_regprop@@Base+0x21b4>
   3c6a4:	ldr	x5, [x19, #8]
   3c6a8:	sub	x4, x1, x5
   3c6ac:	mov	x7, #0x0                   	// #0
   3c6b0:	b	3c4ec <my_regprop@@Base+0x2228>
   3c6b4:	ldr	x6, [x19, #48]
   3c6b8:	ldr	x5, [x19, #56]
   3c6bc:	sub	w5, w5, w6
   3c6c0:	mov	w3, #0x2b30                	// #11056
   3c6c4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3c6c8:	add	x2, x2, #0xfb8
   3c6cc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3c6d0:	add	x1, x1, #0x870
   3c6d4:	mov	x0, x20
   3c6d8:	bl	5420 <Perl_croak@plt>
   3c6dc:	str	wzr, [x21]
   3c6e0:	ldr	x24, [x19, #56]
   3c6e4:	ldrb	w0, [x24]
   3c6e8:	str	w0, [sp, #200]
   3c6ec:	cbnz	w0, 3c7a8 <my_regprop@@Base+0x24e4>
   3c6f0:	cbz	w23, 40d7c <my_regprop@@Base+0x6ab8>
   3c6f4:	cmp	w23, #0x2
   3c6f8:	b.eq	3c7cc <my_regprop@@Base+0x2508>  // b.none
   3c6fc:	ldr	x25, [x19, #64]
   3c700:	cmp	x24, x25
   3c704:	b.hi	3c8e4 <my_regprop@@Base+0x2620>  // b.pmore
   3c708:	ldr	x1, [x19, #24]
   3c70c:	cbz	x1, 3c71c <my_regprop@@Base+0x2458>
   3c710:	mov	w2, #0xb                   	// #11
   3c714:	mov	x0, x20
   3c718:	bl	54b0 <Perl_save_pushptr@plt>
   3c71c:	ldr	x1, [x19, #160]
   3c720:	cbz	x1, 3c730 <my_regprop@@Base+0x246c>
   3c724:	mov	w2, #0xa                   	// #10
   3c728:	mov	x0, x20
   3c72c:	bl	54b0 <Perl_save_pushptr@plt>
   3c730:	ldr	x1, [x19, #168]
   3c734:	cbz	x1, 3c744 <my_regprop@@Base+0x2480>
   3c738:	mov	w2, #0xa                   	// #10
   3c73c:	mov	x0, x20
   3c740:	bl	54b0 <Perl_save_pushptr@plt>
   3c744:	ldr	x0, [x19, #64]
   3c748:	ldr	x1, [x19, #72]
   3c74c:	sub	x1, x0, x1
   3c750:	ldr	x0, [x19, #80]
   3c754:	add	x0, x0, x1
   3c758:	ldr	x1, [x19, #16]
   3c75c:	cmp	x0, x1
   3c760:	b.hi	3c8ac <my_regprop@@Base+0x25e8>  // b.pmore
   3c764:	ldr	x5, [x19, #8]
   3c768:	sub	x7, x1, x0
   3c76c:	subs	x4, x0, x5
   3c770:	b.mi	3c8bc <my_regprop@@Base+0x25f8>  // b.first
   3c774:	ldr	w2, [x19, #192]
   3c778:	cmp	w2, #0x0
   3c77c:	cset	w3, ne  // ne = any
   3c780:	cmp	x0, x1
   3c784:	csel	x0, x0, x1, ls  // ls = plast
   3c788:	str	x0, [sp]
   3c78c:	mov	w6, w3
   3c790:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3c794:	add	x2, x2, #0x788
   3c798:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3c79c:	add	x1, x1, #0x3a8
   3c7a0:	mov	x0, x20
   3c7a4:	bl	5420 <Perl_croak@plt>
   3c7a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3c7ac:	add	x3, x3, #0xc10
   3c7b0:	add	x3, x3, #0x848
   3c7b4:	mov	w2, #0x2b3b                	// #11067
   3c7b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3c7bc:	add	x1, x1, #0xfb8
   3c7c0:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3c7c4:	add	x0, x0, #0x770
   3c7c8:	bl	58e0 <__assert_fail@plt>
   3c7cc:	ldr	x25, [x19, #64]
   3c7d0:	ldurb	w0, [x25, #-1]
   3c7d4:	cmp	w0, #0x28
   3c7d8:	b.eq	3c6fc <my_regprop@@Base+0x2438>  // b.none
   3c7dc:	cmp	x24, x25
   3c7e0:	b.ls	3c708 <my_regprop@@Base+0x2444>  // b.plast
   3c7e4:	ldrb	w0, [x25]
   3c7e8:	mov	w27, #0x1                   	// #1
   3c7ec:	cmp	w0, #0x2a
   3c7f0:	b.ne	3c8fc <my_regprop@@Base+0x2638>  // b.any
   3c7f4:	add	x0, x25, #0x1
   3c7f8:	str	x0, [x19, #64]
   3c7fc:	ldrb	w0, [x25, #1]
   3c800:	sub	w0, w0, #0x41
   3c804:	cmp	w0, #0x19
   3c808:	b.ls	3ca44 <my_regprop@@Base+0x2780>  // b.plast
   3c80c:	ldr	x1, [x19, #24]
   3c810:	cbz	x1, 3c820 <my_regprop@@Base+0x255c>
   3c814:	mov	w2, #0xb                   	// #11
   3c818:	mov	x0, x20
   3c81c:	bl	54b0 <Perl_save_pushptr@plt>
   3c820:	ldr	x1, [x19, #160]
   3c824:	cbz	x1, 3c834 <my_regprop@@Base+0x2570>
   3c828:	mov	w2, #0xa                   	// #10
   3c82c:	mov	x0, x20
   3c830:	bl	54b0 <Perl_save_pushptr@plt>
   3c834:	ldr	x1, [x19, #168]
   3c838:	cbz	x1, 3c848 <my_regprop@@Base+0x2584>
   3c83c:	mov	w2, #0xa                   	// #10
   3c840:	mov	x0, x20
   3c844:	bl	54b0 <Perl_save_pushptr@plt>
   3c848:	ldr	x0, [x19, #64]
   3c84c:	ldr	x1, [x19, #72]
   3c850:	sub	x1, x0, x1
   3c854:	ldr	x0, [x19, #80]
   3c858:	add	x0, x0, x1
   3c85c:	ldr	x1, [x19, #16]
   3c860:	cmp	x0, x1
   3c864:	b.hi	3cb1c <my_regprop@@Base+0x2858>  // b.pmore
   3c868:	ldr	x5, [x19, #8]
   3c86c:	sub	x7, x1, x0
   3c870:	subs	x4, x0, x5
   3c874:	b.mi	3cb2c <my_regprop@@Base+0x2868>  // b.first
   3c878:	ldr	w2, [x19, #192]
   3c87c:	cmp	w2, #0x0
   3c880:	cset	w3, ne  // ne = any
   3c884:	cmp	x0, x1
   3c888:	csel	x0, x0, x1, ls  // ls = plast
   3c88c:	str	x0, [sp]
   3c890:	mov	w6, w3
   3c894:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3c898:	add	x2, x2, #0x7d0
   3c89c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3c8a0:	add	x1, x1, #0x3a8
   3c8a4:	mov	x0, x20
   3c8a8:	bl	5420 <Perl_croak@plt>
   3c8ac:	ldr	x5, [x19, #8]
   3c8b0:	sub	x4, x1, x5
   3c8b4:	mov	x7, #0x0                   	// #0
   3c8b8:	b	3c774 <my_regprop@@Base+0x24b0>
   3c8bc:	ldr	x6, [x19, #48]
   3c8c0:	ldr	x5, [x19, #56]
   3c8c4:	sub	w5, w5, w6
   3c8c8:	mov	w3, #0x2b48                	// #11080
   3c8cc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3c8d0:	add	x2, x2, #0xfb8
   3c8d4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3c8d8:	add	x1, x1, #0x870
   3c8dc:	mov	x0, x20
   3c8e0:	bl	5420 <Perl_croak@plt>
   3c8e4:	cmp	w23, #0x72
   3c8e8:	b.eq	40e08 <my_regprop@@Base+0x6b44>  // b.none
   3c8ec:	ldrb	w0, [x25]
   3c8f0:	mov	w27, #0x0                   	// #0
   3c8f4:	cmp	w0, #0x2a
   3c8f8:	b.eq	42264 <my_regprop@@Base+0x7fa0>  // b.none
   3c8fc:	cmp	w0, #0x3f
   3c900:	b.eq	3dbac <my_regprop@@Base+0x38e8>  // b.none
   3c904:	cmp	w0, #0x7b
   3c908:	b.eq	40a90 <my_regprop@@Base+0x67cc>  // b.none
   3c90c:	ldr	w0, [x19]
   3c910:	tbnz	w0, #5, 40e38 <my_regprop@@Base+0x6b74>
   3c914:	ldr	w0, [x19, #144]
   3c918:	str	w0, [sp, #192]
   3c91c:	add	w0, w0, #0x1
   3c920:	str	w0, [x19, #144]
   3c924:	ldr	w1, [x19, #148]
   3c928:	cmp	w1, #0x0
   3c92c:	b.gt	3c940 <my_regprop@@Base+0x267c>
   3c930:	ldr	w22, [x19, #176]
   3c934:	cbz	w22, 40c44 <my_regprop@@Base+0x6980>
   3c938:	cmp	w0, w22
   3c93c:	b.gt	40c78 <my_regprop@@Base+0x69b4>
   3c940:	ldr	w22, [sp, #192]
   3c944:	mov	w3, w22
   3c948:	mov	w2, #0x38                  	// #56
   3c94c:	mov	x1, x19
   3c950:	mov	x0, x20
   3c954:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3c958:	str	x0, [sp, #176]
   3c95c:	ldr	w0, [x19, #152]
   3c960:	cbnz	w0, 3c968 <my_regprop@@Base+0x26a4>
   3c964:	str	w22, [x19, #152]
   3c968:	ldr	x0, [x19, #160]
   3c96c:	cbz	x0, 3c9a4 <my_regprop@@Base+0x26e0>
   3c970:	ldrsw	x22, [sp, #192]
   3c974:	ldr	x0, [x0, x22, lsl #3]
   3c978:	cbnz	x0, 3c9a4 <my_regprop@@Base+0x26e0>
   3c97c:	ldr	w0, [x20, #2368]
   3c980:	tbnz	w0, #20, 40d2c <my_regprop@@Base+0x6a68>
   3c984:	ldr	x1, [sp, #224]
   3c988:	mov	x0, #0x2                   	// #2
   3c98c:	movk	x0, #0x10, lsl #16
   3c990:	bics	xzr, x0, x1
   3c994:	b.eq	40d2c <my_regprop@@Base+0x6a68>  // b.none
   3c998:	ldr	x0, [x19, #160]
   3c99c:	ldr	x1, [sp, #176]
   3c9a0:	str	x1, [x0, x22, lsl #3]
   3c9a4:	ldr	w0, [x20, #2368]
   3c9a8:	tbnz	w0, #20, 3c9b4 <my_regprop@@Base+0x26f0>
   3c9ac:	ldr	x0, [sp, #224]
   3c9b0:	tbz	w0, #18, 3c9cc <my_regprop@@Base+0x2708>
   3c9b4:	mov	w3, #0x1                   	// #1
   3c9b8:	ldr	w2, [sp, #176]
   3c9bc:	mov	w1, #0x2f25                	// #12069
   3c9c0:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3c9c4:	add	x0, x0, #0x8
   3c9c8:	bl	5010 <Perl_warn_nocontext@plt>
   3c9cc:	ldr	x0, [sp, #176]
   3c9d0:	lsl	x22, x0, #2
   3c9d4:	tbnz	x0, #61, 40d68 <my_regprop@@Base+0x6aa4>
   3c9d8:	asr	x2, x22, #2
   3c9dc:	lsl	x22, x22, #1
   3c9e0:	ldr	x0, [x19, #40]
   3c9e4:	ldr	x0, [x0, #8]
   3c9e8:	mov	w1, #0x1                   	// #1
   3c9ec:	str	w1, [x0, x22]
   3c9f0:	ldr	w0, [x20, #2368]
   3c9f4:	tbnz	w0, #20, 3ca00 <my_regprop@@Base+0x273c>
   3c9f8:	ldr	x0, [sp, #224]
   3c9fc:	tbz	w0, #18, 3ca1c <my_regprop@@Base+0x2758>
   3ca00:	ldr	x3, [x19, #64]
   3ca04:	ldr	x0, [x19, #48]
   3ca08:	sub	w3, w3, w0
   3ca0c:	mov	w1, #0x2f26                	// #12070
   3ca10:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3ca14:	add	x0, x0, #0xf30
   3ca18:	bl	5010 <Perl_warn_nocontext@plt>
   3ca1c:	ldr	x0, [x19, #40]
   3ca20:	ldr	x0, [x0, #8]
   3ca24:	add	x22, x0, x22
   3ca28:	ldr	x0, [x19, #64]
   3ca2c:	ldr	x1, [x19, #48]
   3ca30:	sub	x0, x0, x1
   3ca34:	stur	w0, [x22, #-4]
   3ca38:	mov	w26, #0x0                   	// #0
   3ca3c:	mov	w27, #0x1                   	// #1
   3ca40:	b	40d8c <my_regprop@@Base+0x6ac8>
   3ca44:	ldr	x1, [x19, #24]
   3ca48:	cbz	x1, 3ca58 <my_regprop@@Base+0x2794>
   3ca4c:	mov	w2, #0xb                   	// #11
   3ca50:	mov	x0, x20
   3ca54:	bl	54b0 <Perl_save_pushptr@plt>
   3ca58:	ldr	x1, [x19, #160]
   3ca5c:	cbz	x1, 3ca6c <my_regprop@@Base+0x27a8>
   3ca60:	mov	w2, #0xa                   	// #10
   3ca64:	mov	x0, x20
   3ca68:	bl	54b0 <Perl_save_pushptr@plt>
   3ca6c:	ldr	x1, [x19, #168]
   3ca70:	cbz	x1, 3ca80 <my_regprop@@Base+0x27bc>
   3ca74:	mov	w2, #0xa                   	// #10
   3ca78:	mov	x0, x20
   3ca7c:	bl	54b0 <Perl_save_pushptr@plt>
   3ca80:	ldr	x0, [x19, #64]
   3ca84:	ldr	x1, [x19, #72]
   3ca88:	sub	x1, x0, x1
   3ca8c:	ldr	x0, [x19, #80]
   3ca90:	add	x0, x0, x1
   3ca94:	ldr	x1, [x19, #16]
   3ca98:	cmp	x0, x1
   3ca9c:	b.hi	3cae4 <my_regprop@@Base+0x2820>  // b.pmore
   3caa0:	ldr	x5, [x19, #8]
   3caa4:	sub	x7, x1, x0
   3caa8:	subs	x4, x0, x5
   3caac:	b.mi	3caf4 <my_regprop@@Base+0x2830>  // b.first
   3cab0:	ldr	w2, [x19, #192]
   3cab4:	cmp	w2, #0x0
   3cab8:	cset	w3, ne  // ne = any
   3cabc:	cmp	x0, x1
   3cac0:	csel	x0, x0, x1, ls  // ls = plast
   3cac4:	str	x0, [sp]
   3cac8:	mov	w6, w3
   3cacc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3cad0:	add	x2, x2, #0x798
   3cad4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3cad8:	add	x1, x1, #0x3a8
   3cadc:	mov	x0, x20
   3cae0:	bl	5420 <Perl_croak@plt>
   3cae4:	ldr	x5, [x19, #8]
   3cae8:	sub	x4, x1, x5
   3caec:	mov	x7, #0x0                   	// #0
   3caf0:	b	3cab0 <my_regprop@@Base+0x27ec>
   3caf4:	ldr	x6, [x19, #48]
   3caf8:	ldr	x5, [x19, #56]
   3cafc:	sub	w5, w5, w6
   3cb00:	mov	w3, #0x2b5e                	// #11102
   3cb04:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3cb08:	add	x2, x2, #0xfb8
   3cb0c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3cb10:	add	x1, x1, #0x870
   3cb14:	mov	x0, x20
   3cb18:	bl	5420 <Perl_croak@plt>
   3cb1c:	ldr	x5, [x19, #8]
   3cb20:	sub	x4, x1, x5
   3cb24:	mov	x7, #0x0                   	// #0
   3cb28:	b	3c878 <my_regprop@@Base+0x25b4>
   3cb2c:	ldr	x6, [x19, #48]
   3cb30:	ldr	x5, [x19, #56]
   3cb34:	sub	w5, w5, w6
   3cb38:	mov	w3, #0x2b61                	// #11105
   3cb3c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3cb40:	add	x2, x2, #0xfb8
   3cb44:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3cb48:	add	x1, x1, #0x870
   3cb4c:	mov	x0, x20
   3cb50:	bl	5420 <Perl_croak@plt>
   3cb54:	mov	x0, #0x1                   	// #1
   3cb58:	cbz	w22, 3cb6c <my_regprop@@Base+0x28a8>
   3cb5c:	ldrb	w1, [x27]
   3cb60:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3cb64:	ldr	x0, [x0, #4064]
   3cb68:	ldrb	w0, [x0, w1, sxtw]
   3cb6c:	add	x0, x27, x0
   3cb70:	str	x0, [x19, #64]
   3cb74:	mov	x3, #0x1                   	// #1
   3cb78:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   3cb7c:	ldr	x4, [x4, #4064]
   3cb80:	cmp	x24, x0
   3cb84:	b.hi	3cc84 <my_regprop@@Base+0x29c0>  // b.pmore
   3cb88:	cbz	w23, 3cd44 <my_regprop@@Base+0x2a80>
   3cb8c:	ldr	x1, [x19, #24]
   3cb90:	cbz	x1, 3cba0 <my_regprop@@Base+0x28dc>
   3cb94:	mov	w2, #0xb                   	// #11
   3cb98:	mov	x0, x20
   3cb9c:	bl	54b0 <Perl_save_pushptr@plt>
   3cba0:	ldr	x1, [x19, #160]
   3cba4:	cbz	x1, 3cbb4 <my_regprop@@Base+0x28f0>
   3cba8:	mov	w2, #0xa                   	// #10
   3cbac:	mov	x0, x20
   3cbb0:	bl	54b0 <Perl_save_pushptr@plt>
   3cbb4:	ldr	x1, [x19, #168]
   3cbb8:	cbz	x1, 3cbc8 <my_regprop@@Base+0x2904>
   3cbbc:	mov	w2, #0xa                   	// #10
   3cbc0:	mov	x0, x20
   3cbc4:	bl	54b0 <Perl_save_pushptr@plt>
   3cbc8:	ldr	x0, [x19, #64]
   3cbcc:	ldr	x1, [x19, #72]
   3cbd0:	sub	x1, x0, x1
   3cbd4:	ldr	x0, [x19, #80]
   3cbd8:	add	x0, x0, x1
   3cbdc:	ldr	x1, [x19, #16]
   3cbe0:	cmp	x0, x1
   3cbe4:	b.hi	3cd0c <my_regprop@@Base+0x2a48>  // b.pmore
   3cbe8:	ldr	x5, [x19, #8]
   3cbec:	sub	x7, x1, x0
   3cbf0:	subs	x4, x0, x5
   3cbf4:	b.mi	3cd1c <my_regprop@@Base+0x2a58>  // b.first
   3cbf8:	ldr	w2, [x19, #192]
   3cbfc:	cmp	w2, #0x0
   3cc00:	cset	w3, ne  // ne = any
   3cc04:	cmp	x0, x1
   3cc08:	csel	x0, x0, x1, ls  // ls = plast
   3cc0c:	str	x0, [sp]
   3cc10:	mov	w6, w3
   3cc14:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3cc18:	add	x2, x2, #0x800
   3cc1c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3cc20:	add	x1, x1, #0x3a8
   3cc24:	mov	x0, x20
   3cc28:	bl	5420 <Perl_croak@plt>
   3cc2c:	ldrb	w0, [x1, w0, sxtw]
   3cc30:	add	x27, x27, x0
   3cc34:	str	x27, [x19, #64]
   3cc38:	ldr	x27, [x19, #64]
   3cc3c:	cmp	x24, x27
   3cc40:	b.ls	3ce1c <my_regprop@@Base+0x2b58>  // b.plast
   3cc44:	ldrb	w0, [x27]
   3cc48:	cmp	w0, #0x29
   3cc4c:	b.eq	42014 <my_regprop@@Base+0x7d50>  // b.none
   3cc50:	cmp	w0, #0x3a
   3cc54:	b.eq	3cb54 <my_regprop@@Base+0x2890>  // b.none
   3cc58:	cbnz	w22, 3cc2c <my_regprop@@Base+0x2968>
   3cc5c:	sub	w0, w0, #0x41
   3cc60:	cmp	w0, #0x19
   3cc64:	csel	w23, w23, w2, hi  // hi = pmore
   3cc68:	add	x27, x27, #0x1
   3cc6c:	str	x27, [x19, #64]
   3cc70:	b	3cc38 <my_regprop@@Base+0x2974>
   3cc74:	add	x0, x0, x2
   3cc78:	str	x0, [x19, #64]
   3cc7c:	cmp	x24, x0
   3cc80:	b.ls	3cb88 <my_regprop@@Base+0x28c4>  // b.plast
   3cc84:	ldrb	w1, [x0]
   3cc88:	cmp	w1, #0x29
   3cc8c:	b.eq	3cca0 <my_regprop@@Base+0x29dc>  // b.none
   3cc90:	mov	x2, x3
   3cc94:	cbz	w22, 3cc74 <my_regprop@@Base+0x29b0>
   3cc98:	ldrb	w2, [x4, w1, sxtw]
   3cc9c:	b	3cc74 <my_regprop@@Base+0x29b0>
   3cca0:	cmp	x24, x0
   3cca4:	b.ls	3cb88 <my_regprop@@Base+0x28c4>  // b.plast
   3cca8:	add	x28, x27, #0x1
   3ccac:	sub	x27, x27, x26
   3ccb0:	ldrb	w0, [x25, #1]
   3ccb4:	cmp	w0, #0x53
   3ccb8:	b.eq	3d070 <my_regprop@@Base+0x2dac>  // b.none
   3ccbc:	b.ls	41f08 <my_regprop@@Base+0x7c44>  // b.plast
   3ccc0:	cmp	w0, #0x6e
   3ccc4:	b.eq	3d19c <my_regprop@@Base+0x2ed8>  // b.none
   3ccc8:	b.ls	41fcc <my_regprop@@Base+0x7d08>  // b.plast
   3cccc:	cmp	w0, #0x70
   3ccd0:	b.eq	3d10c <my_regprop@@Base+0x2e48>  // b.none
   3ccd4:	cmp	w0, #0x73
   3ccd8:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3ccdc:	cmp	x27, #0x2
   3cce0:	b.eq	3d22c <my_regprop@@Base+0x2f68>  // b.none
   3cce4:	cmp	x27, #0xa
   3cce8:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3ccec:	mov	x2, #0xa                   	// #10
   3ccf0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3ccf4:	add	x1, x1, #0x970
   3ccf8:	mov	x0, x26
   3ccfc:	bl	5460 <memcmp@plt>
   3cd00:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3cd04:	mov	w23, #0x73                  	// #115
   3cd08:	b	3d248 <my_regprop@@Base+0x2f84>
   3cd0c:	ldr	x5, [x19, #8]
   3cd10:	sub	x4, x1, x5
   3cd14:	mov	x7, #0x0                   	// #0
   3cd18:	b	3cbf8 <my_regprop@@Base+0x2934>
   3cd1c:	ldr	x6, [x19, #48]
   3cd20:	ldr	x5, [x19, #56]
   3cd24:	sub	w5, w5, w6
   3cd28:	mov	w3, #0x2b80                	// #11136
   3cd2c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3cd30:	add	x2, x2, #0xfb8
   3cd34:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3cd38:	add	x1, x1, #0x870
   3cd3c:	mov	x0, x20
   3cd40:	bl	5420 <Perl_croak@plt>
   3cd44:	ldr	x1, [x19, #24]
   3cd48:	cbz	x1, 3cd58 <my_regprop@@Base+0x2a94>
   3cd4c:	mov	w2, #0xb                   	// #11
   3cd50:	mov	x0, x20
   3cd54:	bl	54b0 <Perl_save_pushptr@plt>
   3cd58:	ldr	x1, [x19, #160]
   3cd5c:	cbz	x1, 3cd6c <my_regprop@@Base+0x2aa8>
   3cd60:	mov	w2, #0xa                   	// #10
   3cd64:	mov	x0, x20
   3cd68:	bl	54b0 <Perl_save_pushptr@plt>
   3cd6c:	ldr	x1, [x19, #168]
   3cd70:	cbz	x1, 3cd80 <my_regprop@@Base+0x2abc>
   3cd74:	mov	w2, #0xa                   	// #10
   3cd78:	mov	x0, x20
   3cd7c:	bl	54b0 <Perl_save_pushptr@plt>
   3cd80:	ldr	x0, [x19, #64]
   3cd84:	ldr	x1, [x19, #72]
   3cd88:	sub	x1, x0, x1
   3cd8c:	ldr	x0, [x19, #80]
   3cd90:	add	x0, x0, x1
   3cd94:	ldr	x1, [x19, #16]
   3cd98:	cmp	x0, x1
   3cd9c:	b.hi	3cde4 <my_regprop@@Base+0x2b20>  // b.pmore
   3cda0:	ldr	x5, [x19, #8]
   3cda4:	sub	x7, x1, x0
   3cda8:	subs	x4, x0, x5
   3cdac:	b.mi	3cdf4 <my_regprop@@Base+0x2b30>  // b.first
   3cdb0:	ldr	w2, [x19, #192]
   3cdb4:	cmp	w2, #0x0
   3cdb8:	cset	w3, ne  // ne = any
   3cdbc:	cmp	x0, x1
   3cdc0:	csel	x0, x0, x1, ls  // ls = plast
   3cdc4:	str	x0, [sp]
   3cdc8:	mov	w6, w3
   3cdcc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3cdd0:	add	x2, x2, #0x828
   3cdd4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3cdd8:	add	x1, x1, #0x3a8
   3cddc:	mov	x0, x20
   3cde0:	bl	5420 <Perl_croak@plt>
   3cde4:	ldr	x5, [x19, #8]
   3cde8:	sub	x4, x1, x5
   3cdec:	mov	x7, #0x0                   	// #0
   3cdf0:	b	3cdb0 <my_regprop@@Base+0x2aec>
   3cdf4:	ldr	x6, [x19, #48]
   3cdf8:	ldr	x5, [x19, #56]
   3cdfc:	sub	w5, w5, w6
   3ce00:	mov	w3, #0x2b83                	// #11139
   3ce04:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3ce08:	add	x2, x2, #0xfb8
   3ce0c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3ce10:	add	x1, x1, #0x870
   3ce14:	mov	x0, x20
   3ce18:	bl	5420 <Perl_croak@plt>
   3ce1c:	cbz	w23, 3cef8 <my_regprop@@Base+0x2c34>
   3ce20:	ldr	x1, [x19, #24]
   3ce24:	cbz	x1, 3ce34 <my_regprop@@Base+0x2b70>
   3ce28:	mov	w2, #0xb                   	// #11
   3ce2c:	mov	x0, x20
   3ce30:	bl	54b0 <Perl_save_pushptr@plt>
   3ce34:	ldr	x1, [x19, #160]
   3ce38:	cbz	x1, 3ce48 <my_regprop@@Base+0x2b84>
   3ce3c:	mov	w2, #0xa                   	// #10
   3ce40:	mov	x0, x20
   3ce44:	bl	54b0 <Perl_save_pushptr@plt>
   3ce48:	ldr	x1, [x19, #168]
   3ce4c:	cbz	x1, 3ce5c <my_regprop@@Base+0x2b98>
   3ce50:	mov	w2, #0xa                   	// #10
   3ce54:	mov	x0, x20
   3ce58:	bl	54b0 <Perl_save_pushptr@plt>
   3ce5c:	ldr	x0, [x19, #64]
   3ce60:	ldr	x1, [x19, #72]
   3ce64:	sub	x1, x0, x1
   3ce68:	ldr	x0, [x19, #80]
   3ce6c:	add	x0, x0, x1
   3ce70:	ldr	x1, [x19, #16]
   3ce74:	cmp	x0, x1
   3ce78:	b.hi	3cec0 <my_regprop@@Base+0x2bfc>  // b.pmore
   3ce7c:	ldr	x5, [x19, #8]
   3ce80:	sub	x7, x1, x0
   3ce84:	subs	x4, x0, x5
   3ce88:	b.mi	3ced0 <my_regprop@@Base+0x2c0c>  // b.first
   3ce8c:	ldr	w2, [x19, #192]
   3ce90:	cmp	w2, #0x0
   3ce94:	cset	w3, ne  // ne = any
   3ce98:	cmp	x0, x1
   3ce9c:	csel	x0, x0, x1, ls  // ls = plast
   3cea0:	str	x0, [sp]
   3cea4:	mov	w6, w3
   3cea8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ceac:	add	x2, x2, #0x848
   3ceb0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3ceb4:	add	x1, x1, #0x3a8
   3ceb8:	mov	x0, x20
   3cebc:	bl	5420 <Perl_croak@plt>
   3cec0:	ldr	x5, [x19, #8]
   3cec4:	sub	x4, x1, x5
   3cec8:	mov	x7, #0x0                   	// #0
   3cecc:	b	3ce8c <my_regprop@@Base+0x2bc8>
   3ced0:	ldr	x6, [x19, #48]
   3ced4:	ldr	x5, [x19, #56]
   3ced8:	sub	w5, w5, w6
   3cedc:	mov	w3, #0x2b89                	// #11145
   3cee0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3cee4:	add	x2, x2, #0xfb8
   3cee8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3ceec:	add	x1, x1, #0x870
   3cef0:	mov	x0, x20
   3cef4:	bl	5420 <Perl_croak@plt>
   3cef8:	ldr	x1, [x19, #24]
   3cefc:	cbz	x1, 3cf0c <my_regprop@@Base+0x2c48>
   3cf00:	mov	w2, #0xb                   	// #11
   3cf04:	mov	x0, x20
   3cf08:	bl	54b0 <Perl_save_pushptr@plt>
   3cf0c:	ldr	x1, [x19, #160]
   3cf10:	cbz	x1, 3cf20 <my_regprop@@Base+0x2c5c>
   3cf14:	mov	w2, #0xa                   	// #10
   3cf18:	mov	x0, x20
   3cf1c:	bl	54b0 <Perl_save_pushptr@plt>
   3cf20:	ldr	x1, [x19, #168]
   3cf24:	cbz	x1, 3cf34 <my_regprop@@Base+0x2c70>
   3cf28:	mov	w2, #0xa                   	// #10
   3cf2c:	mov	x0, x20
   3cf30:	bl	54b0 <Perl_save_pushptr@plt>
   3cf34:	ldr	x0, [x19, #64]
   3cf38:	ldr	x1, [x19, #72]
   3cf3c:	sub	x1, x0, x1
   3cf40:	ldr	x0, [x19, #80]
   3cf44:	add	x0, x0, x1
   3cf48:	ldr	x1, [x19, #16]
   3cf4c:	cmp	x0, x1
   3cf50:	b.hi	3cf98 <my_regprop@@Base+0x2cd4>  // b.pmore
   3cf54:	ldr	x5, [x19, #8]
   3cf58:	sub	x7, x1, x0
   3cf5c:	subs	x4, x0, x5
   3cf60:	b.mi	3cfa8 <my_regprop@@Base+0x2ce4>  // b.first
   3cf64:	ldr	w2, [x19, #192]
   3cf68:	cmp	w2, #0x0
   3cf6c:	cset	w3, ne  // ne = any
   3cf70:	cmp	x0, x1
   3cf74:	csel	x0, x0, x1, ls  // ls = plast
   3cf78:	str	x0, [sp]
   3cf7c:	mov	w6, w3
   3cf80:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3cf84:	add	x2, x2, #0x868
   3cf88:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3cf8c:	add	x1, x1, #0x3a8
   3cf90:	mov	x0, x20
   3cf94:	bl	5420 <Perl_croak@plt>
   3cf98:	ldr	x5, [x19, #8]
   3cf9c:	sub	x4, x1, x5
   3cfa0:	mov	x7, #0x0                   	// #0
   3cfa4:	b	3cf64 <my_regprop@@Base+0x2ca0>
   3cfa8:	ldr	x6, [x19, #48]
   3cfac:	ldr	x5, [x19, #56]
   3cfb0:	sub	w5, w5, w6
   3cfb4:	mov	w3, #0x2b8c                	// #11148
   3cfb8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3cfbc:	add	x2, x2, #0xfb8
   3cfc0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3cfc4:	add	x1, x1, #0x870
   3cfc8:	mov	x0, x20
   3cfcc:	bl	5420 <Perl_croak@plt>
   3cfd0:	cmp	x27, #0x6
   3cfd4:	b.eq	3d010 <my_regprop@@Base+0x2d4c>  // b.none
   3cfd8:	cbz	w22, 3d870 <my_regprop@@Base+0x35ac>
   3cfdc:	ldr	x0, [x19, #64]
   3cfe0:	cmp	x24, x0
   3cfe4:	b.cc	3d84c <my_regprop@@Base+0x3588>  // b.lo, b.ul, b.last
   3cfe8:	sub	x24, x24, x0
   3cfec:	cmp	x24, #0x0
   3cff0:	b.le	3d94c <my_regprop@@Base+0x3688>
   3cff4:	ldrb	w1, [x0]
   3cff8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3cffc:	ldr	x0, [x0, #4064]
   3d000:	ldrb	w0, [x0, x1]
   3d004:	cmp	x0, x24
   3d008:	csel	x0, x0, x24, le
   3d00c:	b	3d874 <my_regprop@@Base+0x35b0>
   3d010:	mov	x2, #0x6                   	// #6
   3d014:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d018:	add	x1, x1, #0x888
   3d01c:	mov	x0, x26
   3d020:	bl	5460 <memcmp@plt>
   3d024:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d028:	ldr	w21, [x19, #152]
   3d02c:	ldr	x1, [x19, #64]
   3d030:	cmp	x1, x28
   3d034:	b.eq	3dabc <my_regprop@@Base+0x37f8>  // b.none
   3d038:	mov	w2, #0x5b                  	// #91
   3d03c:	b	42080 <my_regprop@@Base+0x7dbc>
   3d040:	cmp	x27, #0x1
   3d044:	b.eq	42068 <my_regprop@@Base+0x7da4>  // b.none
   3d048:	cmp	x27, #0x4
   3d04c:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3d050:	mov	x2, #0x4                   	// #4
   3d054:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d058:	add	x1, x1, #0x898
   3d05c:	mov	x0, x26
   3d060:	bl	5460 <memcmp@plt>
   3d064:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d068:	mov	w2, #0x5a                  	// #90
   3d06c:	b	4206c <my_regprop@@Base+0x7da8>
   3d070:	cmp	x27, #0x4
   3d074:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3d078:	mov	x2, #0x4                   	// #4
   3d07c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d080:	add	x1, x1, #0x8b0
   3d084:	mov	x0, x26
   3d088:	bl	5460 <memcmp@plt>
   3d08c:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d090:	mov	w2, #0x5f                  	// #95
   3d094:	b	4206c <my_regprop@@Base+0x7da8>
   3d098:	cmp	x27, #0x4
   3d09c:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3d0a0:	mov	x2, #0x4                   	// #4
   3d0a4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d0a8:	add	x1, x1, #0x8b8
   3d0ac:	mov	x0, x26
   3d0b0:	bl	5460 <memcmp@plt>
   3d0b4:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d0b8:	ldr	w0, [x19, #120]
   3d0bc:	orr	w0, w0, #0x100
   3d0c0:	str	w0, [x19, #120]
   3d0c4:	mov	w2, #0x61                  	// #97
   3d0c8:	b	4206c <my_regprop@@Base+0x7da8>
   3d0cc:	mov	x2, #0x3                   	// #3
   3d0d0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d0d4:	add	x1, x1, #0x8c0
   3d0d8:	mov	x0, x26
   3d0dc:	bl	5460 <memcmp@plt>
   3d0e0:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d0e4:	mov	w23, #0x72                  	// #114
   3d0e8:	b	3d248 <my_regprop@@Base+0x2f84>
   3d0ec:	mov	x2, #0x11                  	// #17
   3d0f0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d0f4:	add	x1, x1, #0x8c8
   3d0f8:	mov	x0, x26
   3d0fc:	bl	5460 <memcmp@plt>
   3d100:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d104:	mov	w23, #0x72                  	// #114
   3d108:	b	3d248 <my_regprop@@Base+0x2f84>
   3d10c:	cmp	x27, #0x3
   3d110:	b.eq	3d13c <my_regprop@@Base+0x2e78>  // b.none
   3d114:	cmp	x27, #0x13
   3d118:	b.ne	3d174 <my_regprop@@Base+0x2eb0>  // b.any
   3d11c:	mov	x2, #0x13                  	// #19
   3d120:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d124:	add	x1, x1, #0x8f0
   3d128:	mov	x0, x26
   3d12c:	bl	5460 <memcmp@plt>
   3d130:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d134:	mov	w23, #0x62                  	// #98
   3d138:	b	3d530 <my_regprop@@Base+0x326c>
   3d13c:	mov	x2, #0x3                   	// #3
   3d140:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d144:	add	x1, x1, #0x8e8
   3d148:	mov	x0, x26
   3d14c:	bl	5460 <memcmp@plt>
   3d150:	cbz	w0, 3d52c <my_regprop@@Base+0x3268>
   3d154:	mov	x2, #0x3                   	// #3
   3d158:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d15c:	add	x1, x1, #0x908
   3d160:	mov	x0, x26
   3d164:	bl	5460 <memcmp@plt>
   3d168:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d16c:	mov	w23, #0x61                  	// #97
   3d170:	b	3d548 <my_regprop@@Base+0x3284>
   3d174:	cmp	x27, #0x12
   3d178:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3d17c:	mov	x2, #0x12                  	// #18
   3d180:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d184:	add	x1, x1, #0x910
   3d188:	mov	x0, x26
   3d18c:	bl	5460 <memcmp@plt>
   3d190:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d194:	mov	w23, #0x61                  	// #97
   3d198:	b	3d548 <my_regprop@@Base+0x3284>
   3d19c:	cmp	x27, #0x3
   3d1a0:	b.eq	3d1cc <my_regprop@@Base+0x2f08>  // b.none
   3d1a4:	cmp	x27, #0x13
   3d1a8:	b.ne	3d204 <my_regprop@@Base+0x2f40>  // b.any
   3d1ac:	mov	x2, #0x13                  	// #19
   3d1b0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d1b4:	add	x1, x1, #0x930
   3d1b8:	mov	x0, x26
   3d1bc:	bl	5460 <memcmp@plt>
   3d1c0:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d1c4:	mov	w23, #0x42                  	// #66
   3d1c8:	b	3d530 <my_regprop@@Base+0x326c>
   3d1cc:	mov	x2, #0x3                   	// #3
   3d1d0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d1d4:	add	x1, x1, #0x928
   3d1d8:	mov	x0, x26
   3d1dc:	bl	5460 <memcmp@plt>
   3d1e0:	cbz	w0, 3d680 <my_regprop@@Base+0x33bc>
   3d1e4:	mov	x2, #0x3                   	// #3
   3d1e8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d1ec:	add	x1, x1, #0x948
   3d1f0:	mov	x0, x26
   3d1f4:	bl	5460 <memcmp@plt>
   3d1f8:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d1fc:	mov	w23, #0x41                  	// #65
   3d200:	b	3d548 <my_regprop@@Base+0x3284>
   3d204:	cmp	x27, #0x12
   3d208:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   3d20c:	mov	x2, #0x12                  	// #18
   3d210:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d214:	add	x1, x1, #0x950
   3d218:	mov	x0, x26
   3d21c:	bl	5460 <memcmp@plt>
   3d220:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d224:	mov	w23, #0x41                  	// #65
   3d228:	b	3d548 <my_regprop@@Base+0x3284>
   3d22c:	mov	x2, #0x2                   	// #2
   3d230:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3d234:	add	x1, x1, #0x968
   3d238:	mov	x0, x26
   3d23c:	bl	5460 <memcmp@plt>
   3d240:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   3d244:	mov	w23, #0x73                  	// #115
   3d248:	ldr	w0, [x19]
   3d24c:	tst	x0, #0x380
   3d250:	b.ne	3d28c <my_regprop@@Base+0x2fc8>  // b.any
   3d254:	and	w0, w0, #0xfffffc7f
   3d258:	orr	w0, w0, #0x100
   3d25c:	str	w0, [x19]
   3d260:	mov	w0, #0x1                   	// #1
   3d264:	str	w0, [x19, #200]
   3d268:	ldrb	w0, [x19, #384]
   3d26c:	cbz	w0, 3d28c <my_regprop@@Base+0x2fc8>
   3d270:	ldr	w0, [x19, #148]
   3d274:	tbnz	w0, #31, 3d28c <my_regprop@@Base+0x2fc8>
   3d278:	ldr	w0, [x21]
   3d27c:	orr	w0, w0, #0x20
   3d280:	str	w0, [x21]
   3d284:	mov	x24, #0x0                   	// #0
   3d288:	b	40dcc <my_regprop@@Base+0x6b08>
   3d28c:	cbz	x28, 3d754 <my_regprop@@Base+0x3490>
   3d290:	str	x28, [x19, #64]
   3d294:	ldrb	w0, [x19, #387]
   3d298:	cbz	w0, 3d2bc <my_regprop@@Base+0x2ff8>
   3d29c:	cmp	w23, #0x73
   3d2a0:	b.eq	40e20 <my_regprop@@Base+0x6b5c>  // b.none
   3d2a4:	mov	w26, #0x0                   	// #0
   3d2a8:	mov	w27, #0x0                   	// #0
   3d2ac:	str	wzr, [sp, #192]
   3d2b0:	str	xzr, [sp, #176]
   3d2b4:	mov	w23, #0x3e                  	// #62
   3d2b8:	b	40d8c <my_regprop@@Base+0x6ac8>
   3d2bc:	ldr	x0, [x19, #72]
   3d2c0:	cbz	x0, 3d40c <my_regprop@@Base+0x3148>
   3d2c4:	sub	x28, x28, x0
   3d2c8:	ldr	x0, [x19, #80]
   3d2cc:	add	x0, x0, x28
   3d2d0:	ldr	x1, [x19, #8]
   3d2d4:	sub	x0, x0, x1
   3d2d8:	ldr	x1, [x19, #136]
   3d2dc:	cmp	x0, x1
   3d2e0:	b.le	3d3b4 <my_regprop@@Base+0x30f0>
   3d2e4:	ldr	x0, [x20, #224]
   3d2e8:	cbz	x0, 3d310 <my_regprop@@Base+0x304c>
   3d2ec:	ldr	x0, [x0, #64]
   3d2f0:	cmp	x0, #0x0
   3d2f4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3d2f8:	ldr	x1, [x1, #3984]
   3d2fc:	ccmp	x0, x1, #0x4, ne  // ne = any
   3d300:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3d304:	ldr	x1, [x1, #3832]
   3d308:	ccmp	x0, x1, #0x4, ne  // ne = any
   3d30c:	b.ne	3d42c <my_regprop@@Base+0x3168>  // b.any
   3d310:	ldr	w0, [x19, #192]
   3d314:	cmp	w0, #0x0
   3d318:	cset	w3, ne  // ne = any
   3d31c:	ldr	x0, [x19, #64]
   3d320:	ldr	x1, [x19, #72]
   3d324:	sub	x1, x0, x1
   3d328:	ldr	x0, [x19, #80]
   3d32c:	add	x0, x0, x1
   3d330:	ldr	x1, [x19, #16]
   3d334:	cmp	x0, x1
   3d338:	b.ls	3d474 <my_regprop@@Base+0x31b0>  // b.plast
   3d33c:	ldr	x5, [x19, #8]
   3d340:	sub	x4, x1, x5
   3d344:	mov	x7, #0x0                   	// #0
   3d348:	cmp	x0, x1
   3d34c:	csel	x0, x0, x1, ls  // ls = plast
   3d350:	str	x0, [sp]
   3d354:	mov	w6, w3
   3d358:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3d35c:	add	x2, x2, #0x980
   3d360:	mov	w1, #0x44                  	// #68
   3d364:	mov	x0, x20
   3d368:	bl	5630 <Perl_ck_warner_d@plt>
   3d36c:	ldr	x0, [x19, #72]
   3d370:	cbz	x0, 3d3b4 <my_regprop@@Base+0x30f0>
   3d374:	ldr	x1, [x19, #64]
   3d378:	sub	x1, x1, x0
   3d37c:	ldr	x0, [x19, #80]
   3d380:	add	x1, x0, x1
   3d384:	ldr	x2, [x19, #8]
   3d388:	sub	x3, x1, x2
   3d38c:	ldr	x0, [x19, #136]
   3d390:	cmp	x3, x0
   3d394:	b.le	3d3b4 <my_regprop@@Base+0x30f0>
   3d398:	ldr	x0, [x19, #16]
   3d39c:	cmp	x0, x1
   3d3a0:	csel	x0, x0, x1, ls  // ls = plast
   3d3a4:	cmp	x2, x0
   3d3a8:	csel	x0, x2, x0, hi  // hi = pmore
   3d3ac:	sub	x0, x0, x2
   3d3b0:	str	x0, [x19, #136]
   3d3b4:	cmp	w23, #0x73
   3d3b8:	b.eq	3d4b0 <my_regprop@@Base+0x31ec>  // b.none
   3d3bc:	mov	w2, #0x3a                  	// #58
   3d3c0:	mov	x1, x19
   3d3c4:	mov	x0, x20
   3d3c8:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   3d3cc:	mov	x24, x0
   3d3d0:	mov	w0, #0x1                   	// #1
   3d3d4:	strb	w0, [x19, #387]
   3d3d8:	ldr	w4, [sp, #160]
   3d3dc:	add	x3, sp, #0xdc
   3d3e0:	mov	w2, #0x72                  	// #114
   3d3e4:	mov	x1, x19
   3d3e8:	mov	x0, x20
   3d3ec:	bl	3c268 <my_regprop@@Base+0x1fa4>
   3d3f0:	mov	x22, x0
   3d3f4:	ldr	w0, [sp, #220]
   3d3f8:	ands	w0, w0, #0x60
   3d3fc:	b.eq	3d4dc <my_regprop@@Base+0x3218>  // b.none
   3d400:	str	w0, [x21]
   3d404:	mov	x24, #0x0                   	// #0
   3d408:	b	40dcc <my_regprop@@Base+0x6b08>
   3d40c:	mov	x4, x28
   3d410:	mov	w3, #0x2c0c                	// #11276
   3d414:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d418:	add	x2, x2, #0xfb8
   3d41c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d420:	add	x1, x1, #0xab8
   3d424:	mov	x0, x20
   3d428:	bl	5420 <Perl_croak@plt>
   3d42c:	ldrb	w0, [x0, #25]
   3d430:	tbz	w0, #1, 3d310 <my_regprop@@Base+0x304c>
   3d434:	ldr	x1, [x19, #24]
   3d438:	cbz	x1, 3d448 <my_regprop@@Base+0x3184>
   3d43c:	mov	w2, #0xb                   	// #11
   3d440:	mov	x0, x20
   3d444:	bl	54b0 <Perl_save_pushptr@plt>
   3d448:	ldr	x1, [x19, #160]
   3d44c:	cbz	x1, 3d45c <my_regprop@@Base+0x3198>
   3d450:	mov	w2, #0xa                   	// #10
   3d454:	mov	x0, x20
   3d458:	bl	54b0 <Perl_save_pushptr@plt>
   3d45c:	ldr	x1, [x19, #168]
   3d460:	cbz	x1, 3d310 <my_regprop@@Base+0x304c>
   3d464:	mov	w2, #0xa                   	// #10
   3d468:	mov	x0, x20
   3d46c:	bl	54b0 <Perl_save_pushptr@plt>
   3d470:	b	3d310 <my_regprop@@Base+0x304c>
   3d474:	ldr	x5, [x19, #8]
   3d478:	subs	x4, x0, x5
   3d47c:	b.mi	3d488 <my_regprop@@Base+0x31c4>  // b.first
   3d480:	sub	x7, x1, x0
   3d484:	b	3d348 <my_regprop@@Base+0x3084>
   3d488:	ldr	x6, [x19, #48]
   3d48c:	ldr	x5, [x19, #56]
   3d490:	sub	w5, w5, w6
   3d494:	mov	w3, #0x2c0c                	// #11276
   3d498:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d49c:	add	x2, x2, #0xfb8
   3d4a0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d4a4:	add	x1, x1, #0x870
   3d4a8:	mov	x0, x20
   3d4ac:	bl	5420 <Perl_croak@plt>
   3d4b0:	mov	w2, #0x3a                  	// #58
   3d4b4:	mov	x1, x19
   3d4b8:	mov	x0, x20
   3d4bc:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   3d4c0:	str	x0, [sp, #176]
   3d4c4:	mov	w0, #0x1                   	// #1
   3d4c8:	strb	w0, [x19, #387]
   3d4cc:	mov	w26, #0x0                   	// #0
   3d4d0:	mov	w27, #0x1                   	// #1
   3d4d4:	str	wzr, [sp, #192]
   3d4d8:	b	40d8c <my_regprop@@Base+0x6ac8>
   3d4dc:	ldr	w0, [sp, #160]
   3d4e0:	add	w21, w0, #0x1
   3d4e4:	mov	w4, w21
   3d4e8:	mov	x3, x22
   3d4ec:	mov	x2, x24
   3d4f0:	mov	x1, x19
   3d4f4:	mov	x0, x20
   3d4f8:	bl	3b894 <my_regprop@@Base+0x15d0>
   3d4fc:	mov	w2, #0x3b                  	// #59
   3d500:	mov	x1, x19
   3d504:	mov	x0, x20
   3d508:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   3d50c:	mov	w4, w21
   3d510:	mov	x3, x0
   3d514:	mov	x2, x22
   3d518:	mov	x1, x19
   3d51c:	mov	x0, x20
   3d520:	bl	3b894 <my_regprop@@Base+0x15d0>
   3d524:	strb	wzr, [x19, #387]
   3d528:	b	40dcc <my_regprop@@Base+0x6b08>
   3d52c:	mov	w23, #0x62                  	// #98
   3d530:	ldr	w0, [x19, #120]
   3d534:	orr	w0, w0, #0x2
   3d538:	str	w0, [x19, #120]
   3d53c:	ldr	w0, [x19, #244]
   3d540:	add	w0, w0, #0x1
   3d544:	str	w0, [x19, #244]
   3d548:	ldr	x1, [x19, #72]
   3d54c:	cbz	x1, 3d688 <my_regprop@@Base+0x33c4>
   3d550:	ldr	x0, [x19, #64]
   3d554:	sub	x1, x0, x1
   3d558:	ldr	x0, [x19, #80]
   3d55c:	add	x0, x0, x1
   3d560:	ldr	x1, [x19, #8]
   3d564:	sub	x0, x0, x1
   3d568:	ldr	x1, [x19, #136]
   3d56c:	cmp	x0, x1
   3d570:	b.le	3d644 <my_regprop@@Base+0x3380>
   3d574:	ldr	x0, [x20, #224]
   3d578:	cbz	x0, 3d5a0 <my_regprop@@Base+0x32dc>
   3d57c:	ldr	x0, [x0, #64]
   3d580:	cmp	x0, #0x0
   3d584:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3d588:	ldr	x1, [x1, #3984]
   3d58c:	ccmp	x0, x1, #0x4, ne  // ne = any
   3d590:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3d594:	ldr	x1, [x1, #3832]
   3d598:	ccmp	x0, x1, #0x4, ne  // ne = any
   3d59c:	b.ne	3d6a8 <my_regprop@@Base+0x33e4>  // b.any
   3d5a0:	ldr	w0, [x19, #192]
   3d5a4:	cmp	w0, #0x0
   3d5a8:	cset	w3, ne  // ne = any
   3d5ac:	ldr	x0, [x19, #64]
   3d5b0:	ldr	x1, [x19, #72]
   3d5b4:	sub	x1, x0, x1
   3d5b8:	ldr	x0, [x19, #80]
   3d5bc:	add	x0, x0, x1
   3d5c0:	ldr	x1, [x19, #16]
   3d5c4:	cmp	x0, x1
   3d5c8:	b.ls	3d6f0 <my_regprop@@Base+0x342c>  // b.plast
   3d5cc:	ldr	x5, [x19, #8]
   3d5d0:	sub	x4, x1, x5
   3d5d4:	mov	x7, #0x0                   	// #0
   3d5d8:	cmp	x0, x1
   3d5dc:	csel	x0, x0, x1, ls  // ls = plast
   3d5e0:	str	x0, [sp]
   3d5e4:	mov	w6, w3
   3d5e8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3d5ec:	add	x2, x2, #0x9e8
   3d5f0:	mov	w1, #0x43                  	// #67
   3d5f4:	mov	x0, x20
   3d5f8:	bl	5630 <Perl_ck_warner_d@plt>
   3d5fc:	ldr	x0, [x19, #72]
   3d600:	cbz	x0, 3d644 <my_regprop@@Base+0x3380>
   3d604:	ldr	x1, [x19, #64]
   3d608:	sub	x1, x1, x0
   3d60c:	ldr	x0, [x19, #80]
   3d610:	add	x1, x0, x1
   3d614:	ldr	x2, [x19, #8]
   3d618:	sub	x3, x1, x2
   3d61c:	ldr	x0, [x19, #136]
   3d620:	cmp	x3, x0
   3d624:	b.le	3d644 <my_regprop@@Base+0x3380>
   3d628:	ldr	x0, [x19, #16]
   3d62c:	cmp	x0, x1
   3d630:	csel	x0, x0, x1, ls  // ls = plast
   3d634:	cmp	x2, x0
   3d638:	csel	x0, x2, x0, hi  // hi = pmore
   3d63c:	sub	x0, x0, x2
   3d640:	str	x0, [x19, #136]
   3d644:	ldr	w0, [x19, #156]
   3d648:	add	w0, w0, #0x1
   3d64c:	str	w0, [x19, #156]
   3d650:	cbz	x28, 3d754 <my_regprop@@Base+0x3490>
   3d654:	cmp	w23, #0x41
   3d658:	b.ne	3d668 <my_regprop@@Base+0x33a4>  // b.any
   3d65c:	ldr	x0, [x19, #64]
   3d660:	cmp	x0, x28
   3d664:	b.eq	3d72c <my_regprop@@Base+0x3468>  // b.none
   3d668:	str	x28, [x19, #64]
   3d66c:	mov	w26, #0x0                   	// #0
   3d670:	mov	w27, #0x0                   	// #0
   3d674:	str	wzr, [sp, #192]
   3d678:	str	xzr, [sp, #176]
   3d67c:	b	40d8c <my_regprop@@Base+0x6ac8>
   3d680:	mov	w23, #0x42                  	// #66
   3d684:	b	3d530 <my_regprop@@Base+0x326c>
   3d688:	ldr	x4, [x19, #64]
   3d68c:	mov	w3, #0x2c37                	// #11319
   3d690:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d694:	add	x2, x2, #0xfb8
   3d698:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d69c:	add	x1, x1, #0xab8
   3d6a0:	mov	x0, x20
   3d6a4:	bl	5420 <Perl_croak@plt>
   3d6a8:	ldrsb	w0, [x0, #24]
   3d6ac:	tbz	w0, #31, 3d5a0 <my_regprop@@Base+0x32dc>
   3d6b0:	ldr	x1, [x19, #24]
   3d6b4:	cbz	x1, 3d6c4 <my_regprop@@Base+0x3400>
   3d6b8:	mov	w2, #0xb                   	// #11
   3d6bc:	mov	x0, x20
   3d6c0:	bl	54b0 <Perl_save_pushptr@plt>
   3d6c4:	ldr	x1, [x19, #160]
   3d6c8:	cbz	x1, 3d6d8 <my_regprop@@Base+0x3414>
   3d6cc:	mov	w2, #0xa                   	// #10
   3d6d0:	mov	x0, x20
   3d6d4:	bl	54b0 <Perl_save_pushptr@plt>
   3d6d8:	ldr	x1, [x19, #168]
   3d6dc:	cbz	x1, 3d5a0 <my_regprop@@Base+0x32dc>
   3d6e0:	mov	w2, #0xa                   	// #10
   3d6e4:	mov	x0, x20
   3d6e8:	bl	54b0 <Perl_save_pushptr@plt>
   3d6ec:	b	3d5a0 <my_regprop@@Base+0x32dc>
   3d6f0:	ldr	x5, [x19, #8]
   3d6f4:	subs	x4, x0, x5
   3d6f8:	b.mi	3d704 <my_regprop@@Base+0x3440>  // b.first
   3d6fc:	sub	x7, x1, x0
   3d700:	b	3d5d8 <my_regprop@@Base+0x3314>
   3d704:	ldr	x6, [x19, #48]
   3d708:	ldr	x5, [x19, #56]
   3d70c:	sub	w5, w5, w6
   3d710:	mov	w3, #0x2c37                	// #11319
   3d714:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d718:	add	x2, x2, #0xfb8
   3d71c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d720:	add	x1, x1, #0x870
   3d724:	mov	x0, x20
   3d728:	bl	5420 <Perl_croak@plt>
   3d72c:	mov	w3, #0x0                   	// #0
   3d730:	mov	w2, #0x5a                  	// #90
   3d734:	mov	x1, x19
   3d738:	mov	x0, x20
   3d73c:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3d740:	mov	x24, x0
   3d744:	mov	x1, x19
   3d748:	mov	x0, x20
   3d74c:	bl	269a4 <my_regexec@@Base+0x34b0>
   3d750:	b	40dcc <my_regprop@@Base+0x6b08>
   3d754:	ldr	x1, [x19, #24]
   3d758:	cbz	x1, 3d768 <my_regprop@@Base+0x34a4>
   3d75c:	mov	w2, #0xb                   	// #11
   3d760:	mov	x0, x20
   3d764:	bl	54b0 <Perl_save_pushptr@plt>
   3d768:	ldr	x1, [x19, #160]
   3d76c:	cbz	x1, 3d77c <my_regprop@@Base+0x34b8>
   3d770:	mov	w2, #0xa                   	// #10
   3d774:	mov	x0, x20
   3d778:	bl	54b0 <Perl_save_pushptr@plt>
   3d77c:	ldr	x1, [x19, #168]
   3d780:	cbz	x1, 3d790 <my_regprop@@Base+0x34cc>
   3d784:	mov	w2, #0xa                   	// #10
   3d788:	mov	x0, x20
   3d78c:	bl	54b0 <Perl_save_pushptr@plt>
   3d790:	ldr	x0, [x19, #64]
   3d794:	ldr	x1, [x19, #72]
   3d798:	sub	x1, x0, x1
   3d79c:	ldr	x0, [x19, #80]
   3d7a0:	add	x0, x0, x1
   3d7a4:	ldr	x5, [x19, #16]
   3d7a8:	cmp	x0, x5
   3d7ac:	b.hi	3d814 <my_regprop@@Base+0x3550>  // b.pmore
   3d7b0:	ldr	x3, [x19, #8]
   3d7b4:	subs	x4, x0, x3
   3d7b8:	b.mi	3d824 <my_regprop@@Base+0x3560>  // b.first
   3d7bc:	mov	x2, x4
   3d7c0:	sub	x4, x5, x0
   3d7c4:	ldr	w1, [x19, #192]
   3d7c8:	cmp	w1, #0x0
   3d7cc:	cset	w1, ne  // ne = any
   3d7d0:	cmp	x0, x5
   3d7d4:	csel	x0, x0, x5, ls  // ls = plast
   3d7d8:	str	x0, [sp, #32]
   3d7dc:	str	x4, [sp, #24]
   3d7e0:	str	w1, [sp, #16]
   3d7e4:	str	x3, [sp, #8]
   3d7e8:	str	x2, [sp]
   3d7ec:	mov	w7, w1
   3d7f0:	mov	x6, x26
   3d7f4:	mov	x5, x27
   3d7f8:	mov	w4, w1
   3d7fc:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3d800:	add	x3, x3, #0x5d8
   3d804:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3d808:	add	x2, x2, #0xa58
   3d80c:	mov	x0, x20
   3d810:	bl	273ac <my_regexec@@Base+0x3eb8>
   3d814:	ldr	x3, [x19, #8]
   3d818:	sub	x2, x5, x3
   3d81c:	mov	x4, #0x0                   	// #0
   3d820:	b	3d7c4 <my_regprop@@Base+0x3500>
   3d824:	ldr	x6, [x19, #48]
   3d828:	ldr	x5, [x19, #56]
   3d82c:	sub	w5, w5, w6
   3d830:	mov	w3, #0x2c4c                	// #11340
   3d834:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d838:	add	x2, x2, #0xfb8
   3d83c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d840:	add	x1, x1, #0x870
   3d844:	mov	x0, x20
   3d848:	bl	5420 <Perl_croak@plt>
   3d84c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3d850:	add	x3, x3, #0xc10
   3d854:	add	x3, x3, #0x848
   3d858:	mov	w2, #0x2c54                	// #11348
   3d85c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3d860:	add	x1, x1, #0xfb8
   3d864:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3d868:	add	x0, x0, #0xc18
   3d86c:	bl	58e0 <__assert_fail@plt>
   3d870:	mov	x0, #0x1                   	// #1
   3d874:	ldr	x1, [x19, #64]
   3d878:	add	x0, x1, x0
   3d87c:	str	x0, [x19, #64]
   3d880:	cmp	x27, #0x0
   3d884:	ccmp	w23, #0x0, #0x0, ne  // ne = any
   3d888:	b.eq	3d98c <my_regprop@@Base+0x36c8>  // b.none
   3d88c:	ldr	x1, [x19, #24]
   3d890:	cbz	x1, 3d8a0 <my_regprop@@Base+0x35dc>
   3d894:	mov	w2, #0xb                   	// #11
   3d898:	mov	x0, x20
   3d89c:	bl	54b0 <Perl_save_pushptr@plt>
   3d8a0:	ldr	x1, [x19, #160]
   3d8a4:	cbz	x1, 3d8b4 <my_regprop@@Base+0x35f0>
   3d8a8:	mov	w2, #0xa                   	// #10
   3d8ac:	mov	x0, x20
   3d8b0:	bl	54b0 <Perl_save_pushptr@plt>
   3d8b4:	ldr	x1, [x19, #168]
   3d8b8:	cbz	x1, 3d8c8 <my_regprop@@Base+0x3604>
   3d8bc:	mov	w2, #0xa                   	// #10
   3d8c0:	mov	x0, x20
   3d8c4:	bl	54b0 <Perl_save_pushptr@plt>
   3d8c8:	ldr	x0, [x19, #64]
   3d8cc:	ldr	x1, [x19, #72]
   3d8d0:	sub	x1, x0, x1
   3d8d4:	ldr	x0, [x19, #80]
   3d8d8:	add	x0, x0, x1
   3d8dc:	ldr	x5, [x19, #16]
   3d8e0:	cmp	x0, x5
   3d8e4:	b.hi	3d954 <my_regprop@@Base+0x3690>  // b.pmore
   3d8e8:	ldr	x3, [x19, #8]
   3d8ec:	subs	x4, x0, x3
   3d8f0:	b.mi	3d964 <my_regprop@@Base+0x36a0>  // b.first
   3d8f4:	mov	x2, x4
   3d8f8:	sub	x4, x5, x0
   3d8fc:	ldr	w1, [x19, #192]
   3d900:	cmp	w1, #0x0
   3d904:	cset	w1, ne  // ne = any
   3d908:	cmp	x0, x5
   3d90c:	csel	x0, x0, x5, ls  // ls = plast
   3d910:	str	x0, [sp, #32]
   3d914:	str	x4, [sp, #24]
   3d918:	str	w1, [sp, #16]
   3d91c:	str	x3, [sp, #8]
   3d920:	str	x2, [sp]
   3d924:	mov	w7, w1
   3d928:	mov	x6, x26
   3d92c:	mov	x5, x27
   3d930:	mov	w4, w1
   3d934:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3d938:	add	x3, x3, #0x5d8
   3d93c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3d940:	add	x2, x2, #0xa80
   3d944:	mov	x0, x20
   3d948:	bl	273ac <my_regexec@@Base+0x3eb8>
   3d94c:	mov	x0, #0x0                   	// #0
   3d950:	b	3d874 <my_regprop@@Base+0x35b0>
   3d954:	ldr	x3, [x19, #8]
   3d958:	sub	x2, x5, x3
   3d95c:	mov	x4, #0x0                   	// #0
   3d960:	b	3d8fc <my_regprop@@Base+0x3638>
   3d964:	ldr	x6, [x19, #48]
   3d968:	ldr	x5, [x19, #56]
   3d96c:	sub	w5, w5, w6
   3d970:	mov	w3, #0x2c57                	// #11351
   3d974:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3d978:	add	x2, x2, #0xfb8
   3d97c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3d980:	add	x1, x1, #0x870
   3d984:	mov	x0, x20
   3d988:	bl	5420 <Perl_croak@plt>
   3d98c:	ldr	x1, [x19, #24]
   3d990:	cbz	x1, 3d9a0 <my_regprop@@Base+0x36dc>
   3d994:	mov	w2, #0xb                   	// #11
   3d998:	mov	x0, x20
   3d99c:	bl	54b0 <Perl_save_pushptr@plt>
   3d9a0:	ldr	x1, [x19, #160]
   3d9a4:	cbz	x1, 3d9b4 <my_regprop@@Base+0x36f0>
   3d9a8:	mov	w2, #0xa                   	// #10
   3d9ac:	mov	x0, x20
   3d9b0:	bl	54b0 <Perl_save_pushptr@plt>
   3d9b4:	ldr	x1, [x19, #168]
   3d9b8:	cbz	x1, 3d9c8 <my_regprop@@Base+0x3704>
   3d9bc:	mov	w2, #0xa                   	// #10
   3d9c0:	mov	x0, x20
   3d9c4:	bl	54b0 <Perl_save_pushptr@plt>
   3d9c8:	ldr	x0, [x19, #64]
   3d9cc:	ldr	x1, [x19, #72]
   3d9d0:	sub	x1, x0, x1
   3d9d4:	ldr	x0, [x19, #80]
   3d9d8:	add	x0, x0, x1
   3d9dc:	ldr	x5, [x19, #16]
   3d9e0:	cmp	x0, x5
   3d9e4:	b.hi	3da4c <my_regprop@@Base+0x3788>  // b.pmore
   3d9e8:	ldr	x3, [x19, #8]
   3d9ec:	subs	x4, x0, x3
   3d9f0:	b.mi	3da5c <my_regprop@@Base+0x3798>  // b.first
   3d9f4:	mov	x2, x4
   3d9f8:	sub	x4, x5, x0
   3d9fc:	ldr	w1, [x19, #192]
   3da00:	cmp	w1, #0x0
   3da04:	cset	w1, ne  // ne = any
   3da08:	cmp	x0, x5
   3da0c:	csel	x0, x0, x5, ls  // ls = plast
   3da10:	str	x0, [sp, #32]
   3da14:	str	x4, [sp, #24]
   3da18:	str	w1, [sp, #16]
   3da1c:	str	x3, [sp, #8]
   3da20:	str	x2, [sp]
   3da24:	mov	w7, w1
   3da28:	mov	x6, x26
   3da2c:	mov	x5, x27
   3da30:	mov	w4, w1
   3da34:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3da38:	add	x3, x3, #0x5d8
   3da3c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3da40:	add	x2, x2, #0xaa0
   3da44:	mov	x0, x20
   3da48:	bl	273ac <my_regexec@@Base+0x3eb8>
   3da4c:	ldr	x3, [x19, #8]
   3da50:	sub	x2, x5, x3
   3da54:	mov	x4, #0x0                   	// #0
   3da58:	b	3d9fc <my_regprop@@Base+0x3738>
   3da5c:	ldr	x6, [x19, #48]
   3da60:	ldr	x5, [x19, #56]
   3da64:	sub	w5, w5, w6
   3da68:	mov	w3, #0x2c5c                	// #11356
   3da6c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3da70:	add	x2, x2, #0xfb8
   3da74:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3da78:	add	x1, x1, #0x870
   3da7c:	mov	x0, x20
   3da80:	bl	5420 <Perl_croak@plt>
   3da84:	ldr	x2, [x19, #8]
   3da88:	sub	x7, x3, x2
   3da8c:	mov	x4, #0x0                   	// #0
   3da90:	b	420fc <my_regprop@@Base+0x7e38>
   3da94:	ldr	x6, [x19, #48]
   3da98:	ldr	x5, [x19, #56]
   3da9c:	sub	w5, w5, w6
   3daa0:	mov	w3, #0x2c65                	// #11365
   3daa4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3daa8:	add	x2, x2, #0xfb8
   3daac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3dab0:	add	x1, x1, #0x870
   3dab4:	mov	x0, x20
   3dab8:	bl	5420 <Perl_croak@plt>
   3dabc:	mov	w2, #0x5b                  	// #91
   3dac0:	mov	x28, #0x0                   	// #0
   3dac4:	cmn	w21, #0x1
   3dac8:	b.eq	3db84 <my_regprop@@Base+0x38c0>  // b.none
   3dacc:	mov	w4, w21
   3dad0:	mov	w3, #0x0                   	// #0
   3dad4:	mov	x1, x19
   3dad8:	mov	x0, x20
   3dadc:	bl	2a2f0 <my_regexec@@Base+0x6dfc>
   3dae0:	mov	x24, x0
   3dae4:	ldr	w0, [x19, #120]
   3dae8:	orr	w0, w0, #0x80
   3daec:	str	w0, [x19, #120]
   3daf0:	cbz	x28, 3db9c <my_regprop@@Base+0x38d8>
   3daf4:	ldr	x2, [x19, #64]
   3daf8:	sub	x2, x2, x28
   3dafc:	mov	x1, x28
   3db00:	mov	x0, x20
   3db04:	bl	59a0 <Perl_newSVpvn@plt>
   3db08:	mov	x23, x0
   3db0c:	lsl	x22, x24, #2
   3db10:	ldr	x25, [x19, #96]
   3db14:	add	x25, x25, x24, lsl #2
   3db18:	mov	w2, #0x1                   	// #1
   3db1c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3db20:	add	x1, x1, #0xd50
   3db24:	mov	x0, x19
   3db28:	bl	26be8 <my_regexec@@Base+0x36f4>
   3db2c:	str	w0, [x25, #4]
   3db30:	ldr	x0, [x19, #40]
   3db34:	ldr	x2, [x0, #24]
   3db38:	ldr	x1, [x19, #96]
   3db3c:	add	x1, x1, x22
   3db40:	ldr	w1, [x1, #4]
   3db44:	add	x1, x1, #0x2
   3db48:	str	x23, [x2, x1, lsl #3]
   3db4c:	ldr	x1, [x19, #96]
   3db50:	mov	w2, #0x1                   	// #1
   3db54:	strb	w2, [x1, x22]
   3db58:	cmn	w21, #0x1
   3db5c:	b.eq	3db6c <my_regprop@@Base+0x38a8>  // b.none
   3db60:	ldr	x0, [x19, #96]
   3db64:	add	x0, x0, x24, lsl #2
   3db68:	str	w21, [x0, #8]
   3db6c:	mov	x1, x19
   3db70:	mov	x0, x20
   3db74:	bl	269a4 <my_regexec@@Base+0x34b0>
   3db78:	b	40dcc <my_regprop@@Base+0x6b08>
   3db7c:	mov	w21, #0xffffffff            	// #-1
   3db80:	mov	x28, #0x0                   	// #0
   3db84:	mov	w3, #0x0                   	// #0
   3db88:	mov	x1, x19
   3db8c:	mov	x0, x20
   3db90:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3db94:	mov	x24, x0
   3db98:	b	3dae4 <my_regprop@@Base+0x3820>
   3db9c:	ldr	x1, [x19, #96]
   3dba0:	lsl	x0, x24, #2
   3dba4:	strb	wzr, [x1, x0]
   3dba8:	b	3db58 <my_regprop@@Base+0x3894>
   3dbac:	cbz	w27, 3dc90 <my_regprop@@Base+0x39cc>
   3dbb0:	add	x25, x25, #0x1
   3dbb4:	str	x25, [x19, #64]
   3dbb8:	ldr	x1, [x19, #24]
   3dbbc:	cbz	x1, 3dbcc <my_regprop@@Base+0x3908>
   3dbc0:	mov	w2, #0xb                   	// #11
   3dbc4:	mov	x0, x20
   3dbc8:	bl	54b0 <Perl_save_pushptr@plt>
   3dbcc:	ldr	x1, [x19, #160]
   3dbd0:	cbz	x1, 3dbe0 <my_regprop@@Base+0x391c>
   3dbd4:	mov	w2, #0xa                   	// #10
   3dbd8:	mov	x0, x20
   3dbdc:	bl	54b0 <Perl_save_pushptr@plt>
   3dbe0:	ldr	x1, [x19, #168]
   3dbe4:	cbz	x1, 3dbf4 <my_regprop@@Base+0x3930>
   3dbe8:	mov	w2, #0xa                   	// #10
   3dbec:	mov	x0, x20
   3dbf0:	bl	54b0 <Perl_save_pushptr@plt>
   3dbf4:	ldr	x0, [x19, #64]
   3dbf8:	ldr	x1, [x19, #72]
   3dbfc:	sub	x1, x0, x1
   3dc00:	ldr	x0, [x19, #80]
   3dc04:	add	x0, x0, x1
   3dc08:	ldr	x1, [x19, #16]
   3dc0c:	cmp	x0, x1
   3dc10:	b.hi	3dc58 <my_regprop@@Base+0x3994>  // b.pmore
   3dc14:	ldr	x5, [x19, #8]
   3dc18:	sub	x7, x1, x0
   3dc1c:	subs	x4, x0, x5
   3dc20:	b.mi	3dc68 <my_regprop@@Base+0x39a4>  // b.first
   3dc24:	ldr	w2, [x19, #192]
   3dc28:	cmp	w2, #0x0
   3dc2c:	cset	w3, ne  // ne = any
   3dc30:	cmp	x0, x1
   3dc34:	csel	x0, x0, x1, ls  // ls = plast
   3dc38:	str	x0, [sp]
   3dc3c:	mov	w6, w3
   3dc40:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3dc44:	add	x2, x2, #0xaf8
   3dc48:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3dc4c:	add	x1, x1, #0x3a8
   3dc50:	mov	x0, x20
   3dc54:	bl	5420 <Perl_croak@plt>
   3dc58:	ldr	x5, [x19, #8]
   3dc5c:	sub	x4, x1, x5
   3dc60:	mov	x7, #0x0                   	// #0
   3dc64:	b	3dc24 <my_regprop@@Base+0x3960>
   3dc68:	ldr	x6, [x19, #48]
   3dc6c:	ldr	x5, [x19, #56]
   3dc70:	sub	w5, w5, w6
   3dc74:	mov	w3, #0x2c83                	// #11395
   3dc78:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3dc7c:	add	x2, x2, #0xfb8
   3dc80:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3dc84:	add	x1, x1, #0x870
   3dc88:	mov	x0, x20
   3dc8c:	bl	5420 <Perl_croak@plt>
   3dc90:	add	x28, x25, #0x1
   3dc94:	str	x28, [x19, #64]
   3dc98:	ldrb	w22, [x25, #1]
   3dc9c:	mov	w23, w22
   3dca0:	ldr	w0, [x19, #192]
   3dca4:	str	w0, [sp, #144]
   3dca8:	mov	x26, #0x1                   	// #1
   3dcac:	cbz	w0, 3dcbc <my_regprop@@Base+0x39f8>
   3dcb0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3dcb4:	ldr	x0, [x0, #4064]
   3dcb8:	ldrb	w26, [x0, w22, sxtw]
   3dcbc:	add	x26, x28, x26
   3dcc0:	str	x26, [x19, #64]
   3dcc4:	cmp	x24, x26
   3dcc8:	b.cc	40798 <my_regprop@@Base+0x64d4>  // b.lo, b.ul, b.last
   3dccc:	cmp	w22, #0x7c
   3dcd0:	b.hi	40978 <my_regprop@@Base+0x66b4>  // b.pmore
   3dcd4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3dcd8:	add	x0, x0, #0x6d0
   3dcdc:	ldrh	w0, [x0, w22, uxtw #1]
   3dce0:	adr	x1, 3dcec <my_regprop@@Base+0x3a28>
   3dce4:	add	x0, x1, w0, sxth #2
   3dce8:	br	x0
   3dcec:	ldrb	w0, [x26]
   3dcf0:	cmp	w0, #0x3c
   3dcf4:	b.eq	3dd38 <my_regprop@@Base+0x3a74>  // b.none
   3dcf8:	cmp	w0, #0x3e
   3dcfc:	b.eq	3de20 <my_regprop@@Base+0x3b5c>  // b.none
   3dd00:	cmp	w0, #0x3d
   3dd04:	b.eq	3df08 <my_regprop@@Base+0x3c44>  // b.none
   3dd08:	cbz	w0, 3df30 <my_regprop@@Base+0x3c6c>
   3dd0c:	ldr	w1, [sp, #144]
   3dd10:	cbz	w1, 3dff4 <my_regprop@@Base+0x3d30>
   3dd14:	sub	x24, x24, x26
   3dd18:	cmp	x24, #0x0
   3dd1c:	b.le	3dffc <my_regprop@@Base+0x3d38>
   3dd20:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3dd24:	ldr	x1, [x1, #4064]
   3dd28:	ldrb	w0, [x1, w0, sxtw]
   3dd2c:	cmp	x0, x24
   3dd30:	csel	x0, x0, x24, le
   3dd34:	b	3df34 <my_regprop@@Base+0x3c70>
   3dd38:	add	x26, x26, #0x1
   3dd3c:	str	x26, [x19, #64]
   3dd40:	cmp	x24, x26
   3dd44:	b.hi	3e14c <my_regprop@@Base+0x3e88>  // b.pmore
   3dd48:	ldr	x1, [x19, #24]
   3dd4c:	cbz	x1, 3dd5c <my_regprop@@Base+0x3a98>
   3dd50:	mov	w2, #0xb                   	// #11
   3dd54:	mov	x0, x20
   3dd58:	bl	54b0 <Perl_save_pushptr@plt>
   3dd5c:	ldr	x1, [x19, #160]
   3dd60:	cbz	x1, 3dd70 <my_regprop@@Base+0x3aac>
   3dd64:	mov	w2, #0xa                   	// #10
   3dd68:	mov	x0, x20
   3dd6c:	bl	54b0 <Perl_save_pushptr@plt>
   3dd70:	ldr	x1, [x19, #168]
   3dd74:	cbz	x1, 3dd84 <my_regprop@@Base+0x3ac0>
   3dd78:	mov	w2, #0xa                   	// #10
   3dd7c:	mov	x0, x20
   3dd80:	bl	54b0 <Perl_save_pushptr@plt>
   3dd84:	ldr	x0, [x19, #64]
   3dd88:	ldr	x1, [x19, #72]
   3dd8c:	sub	x1, x0, x1
   3dd90:	ldr	x0, [x19, #80]
   3dd94:	add	x0, x0, x1
   3dd98:	ldr	x1, [x19, #16]
   3dd9c:	cmp	x0, x1
   3dda0:	b.hi	3dde8 <my_regprop@@Base+0x3b24>  // b.pmore
   3dda4:	ldr	x5, [x19, #8]
   3dda8:	subs	x4, x0, x5
   3ddac:	b.mi	3ddf8 <my_regprop@@Base+0x3b34>  // b.first
   3ddb0:	sub	x7, x1, x0
   3ddb4:	ldr	w2, [x19, #192]
   3ddb8:	cmp	w2, #0x0
   3ddbc:	cset	w3, ne  // ne = any
   3ddc0:	cmp	x0, x1
   3ddc4:	csel	x0, x0, x1, ls  // ls = plast
   3ddc8:	str	x0, [sp]
   3ddcc:	mov	w6, w3
   3ddd0:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ddd4:	add	x2, x2, #0xb28
   3ddd8:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3dddc:	add	x1, x1, #0x3a8
   3dde0:	mov	x0, x20
   3dde4:	bl	5420 <Perl_croak@plt>
   3dde8:	ldr	x5, [x19, #8]
   3ddec:	sub	x4, x1, x5
   3ddf0:	mov	x7, #0x0                   	// #0
   3ddf4:	b	3ddb4 <my_regprop@@Base+0x3af0>
   3ddf8:	ldr	x6, [x19, #48]
   3ddfc:	ldr	x5, [x19, #56]
   3de00:	sub	w5, w5, w6
   3de04:	mov	w3, #0x2c95                	// #11413
   3de08:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3de0c:	add	x2, x2, #0xfb8
   3de10:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3de14:	add	x1, x1, #0x870
   3de18:	mov	x0, x20
   3de1c:	bl	5420 <Perl_croak@plt>
   3de20:	add	x26, x26, #0x1
   3de24:	str	x26, [x19, #64]
   3de28:	cmp	x24, x26
   3de2c:	b.hi	3ed20 <my_regprop@@Base+0x4a5c>  // b.pmore
   3de30:	ldr	x1, [x19, #24]
   3de34:	cbz	x1, 3de44 <my_regprop@@Base+0x3b80>
   3de38:	mov	w2, #0xb                   	// #11
   3de3c:	mov	x0, x20
   3de40:	bl	54b0 <Perl_save_pushptr@plt>
   3de44:	ldr	x1, [x19, #160]
   3de48:	cbz	x1, 3de58 <my_regprop@@Base+0x3b94>
   3de4c:	mov	w2, #0xa                   	// #10
   3de50:	mov	x0, x20
   3de54:	bl	54b0 <Perl_save_pushptr@plt>
   3de58:	ldr	x1, [x19, #168]
   3de5c:	cbz	x1, 3de6c <my_regprop@@Base+0x3ba8>
   3de60:	mov	w2, #0xa                   	// #10
   3de64:	mov	x0, x20
   3de68:	bl	54b0 <Perl_save_pushptr@plt>
   3de6c:	ldr	x0, [x19, #64]
   3de70:	ldr	x1, [x19, #72]
   3de74:	sub	x1, x0, x1
   3de78:	ldr	x0, [x19, #80]
   3de7c:	add	x0, x0, x1
   3de80:	ldr	x1, [x19, #16]
   3de84:	cmp	x0, x1
   3de88:	b.hi	3ded0 <my_regprop@@Base+0x3c0c>  // b.pmore
   3de8c:	ldr	x5, [x19, #8]
   3de90:	subs	x4, x0, x5
   3de94:	b.mi	3dee0 <my_regprop@@Base+0x3c1c>  // b.first
   3de98:	sub	x7, x1, x0
   3de9c:	ldr	w2, [x19, #192]
   3dea0:	cmp	w2, #0x0
   3dea4:	cset	w3, ne  // ne = any
   3dea8:	cmp	x0, x1
   3deac:	csel	x0, x0, x1, ls  // ls = plast
   3deb0:	str	x0, [sp]
   3deb4:	mov	w6, w3
   3deb8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3debc:	add	x2, x2, #0xb48
   3dec0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3dec4:	add	x1, x1, #0x3a8
   3dec8:	mov	x0, x20
   3decc:	bl	5420 <Perl_croak@plt>
   3ded0:	ldr	x5, [x19, #8]
   3ded4:	sub	x4, x1, x5
   3ded8:	mov	x7, #0x0                   	// #0
   3dedc:	b	3de9c <my_regprop@@Base+0x3bd8>
   3dee0:	ldr	x6, [x19, #48]
   3dee4:	ldr	x5, [x19, #56]
   3dee8:	sub	w5, w5, w6
   3deec:	mov	w3, #0x2c9c                	// #11420
   3def0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3def4:	add	x2, x2, #0xfb8
   3def8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3defc:	add	x1, x1, #0x870
   3df00:	mov	x0, x20
   3df04:	bl	5420 <Perl_croak@plt>
   3df08:	add	x26, x26, #0x1
   3df0c:	str	x26, [x19, #64]
   3df10:	mov	w4, #0x29                  	// #41
   3df14:	ldr	x3, [sp, #152]
   3df18:	mov	x2, x21
   3df1c:	mov	x1, x19
   3df20:	mov	x0, x20
   3df24:	bl	2a4b0 <my_regexec@@Base+0x6fbc>
   3df28:	mov	x24, x0
   3df2c:	b	40dcc <my_regprop@@Base+0x6b08>
   3df30:	mov	x0, #0x0                   	// #0
   3df34:	add	x0, x26, x0
   3df38:	str	x0, [x19, #64]
   3df3c:	ldr	x1, [x19, #24]
   3df40:	cbz	x1, 3df50 <my_regprop@@Base+0x3c8c>
   3df44:	mov	w2, #0xb                   	// #11
   3df48:	mov	x0, x20
   3df4c:	bl	54b0 <Perl_save_pushptr@plt>
   3df50:	ldr	x1, [x19, #160]
   3df54:	cbz	x1, 3df64 <my_regprop@@Base+0x3ca0>
   3df58:	mov	w2, #0xa                   	// #10
   3df5c:	mov	x0, x20
   3df60:	bl	54b0 <Perl_save_pushptr@plt>
   3df64:	ldr	x1, [x19, #168]
   3df68:	cbz	x1, 3df78 <my_regprop@@Base+0x3cb4>
   3df6c:	mov	w2, #0xa                   	// #10
   3df70:	mov	x0, x20
   3df74:	bl	54b0 <Perl_save_pushptr@plt>
   3df78:	ldr	x8, [x19, #64]
   3df7c:	ldr	x0, [x19, #72]
   3df80:	sub	x1, x8, x0
   3df84:	ldr	x0, [x19, #80]
   3df88:	add	x0, x0, x1
   3df8c:	ldr	x3, [x19, #16]
   3df90:	cmp	x0, x3
   3df94:	b.hi	3e004 <my_regprop@@Base+0x3d40>  // b.pmore
   3df98:	ldr	x2, [x19, #8]
   3df9c:	subs	x4, x0, x2
   3dfa0:	b.mi	3e014 <my_regprop@@Base+0x3d50>  // b.first
   3dfa4:	mov	x7, x4
   3dfa8:	sub	x4, x3, x0
   3dfac:	ldr	w1, [x19, #192]
   3dfb0:	cmp	w1, #0x0
   3dfb4:	cset	w1, ne  // ne = any
   3dfb8:	cmp	x0, x3
   3dfbc:	csel	x0, x0, x3, ls  // ls = plast
   3dfc0:	str	x0, [sp, #24]
   3dfc4:	str	x4, [sp, #16]
   3dfc8:	str	w1, [sp, #8]
   3dfcc:	str	x2, [sp]
   3dfd0:	mov	w6, w1
   3dfd4:	mov	x5, x25
   3dfd8:	sub	x4, x8, x25
   3dfdc:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3dfe0:	add	x3, x3, #0x5d8
   3dfe4:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3dfe8:	add	x2, x2, #0xb68
   3dfec:	mov	x0, x20
   3dff0:	bl	273ac <my_regexec@@Base+0x3eb8>
   3dff4:	mov	x0, #0x1                   	// #1
   3dff8:	b	3df34 <my_regprop@@Base+0x3c70>
   3dffc:	mov	x0, #0x0                   	// #0
   3e000:	b	3df34 <my_regprop@@Base+0x3c70>
   3e004:	ldr	x2, [x19, #8]
   3e008:	sub	x7, x3, x2
   3e00c:	mov	x4, #0x0                   	// #0
   3e010:	b	3dfac <my_regprop@@Base+0x3ce8>
   3e014:	ldr	x6, [x19, #48]
   3e018:	ldr	x5, [x19, #56]
   3e01c:	sub	w5, w5, w6
   3e020:	mov	w3, #0x2ca7                	// #11431
   3e024:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3e028:	add	x2, x2, #0xfb8
   3e02c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3e030:	add	x1, x1, #0x870
   3e034:	mov	x0, x20
   3e038:	bl	5420 <Perl_croak@plt>
   3e03c:	ldrb	w0, [x26]
   3e040:	cmp	w0, #0x21
   3e044:	b.eq	3e8a8 <my_regprop@@Base+0x45e4>  // b.none
   3e048:	cmp	w0, #0x3d
   3e04c:	b.eq	3e974 <my_regprop@@Base+0x46b0>  // b.none
   3e050:	mov	w23, #0x3e                  	// #62
   3e054:	ldr	x22, [x19, #64]
   3e058:	mov	w2, #0x1                   	// #1
   3e05c:	mov	x1, x19
   3e060:	mov	x0, x20
   3e064:	bl	27634 <my_regexec@@Base+0x4140>
   3e068:	mov	x24, x0
   3e06c:	ldr	x0, [x19, #64]
   3e070:	cmp	x0, x22
   3e074:	b.eq	3e090 <my_regprop@@Base+0x3dcc>  // b.none
   3e078:	ldr	x1, [x19, #56]
   3e07c:	cmp	x0, x1
   3e080:	b.cs	3e090 <my_regprop@@Base+0x3dcc>  // b.hs, b.nlast
   3e084:	ldrb	w0, [x0]
   3e088:	cmp	w0, w23
   3e08c:	b.eq	3e18c <my_regprop@@Base+0x3ec8>  // b.none
   3e090:	ldr	x1, [x19, #24]
   3e094:	cbz	x1, 3e0a4 <my_regprop@@Base+0x3de0>
   3e098:	mov	w2, #0xb                   	// #11
   3e09c:	mov	x0, x20
   3e0a0:	bl	54b0 <Perl_save_pushptr@plt>
   3e0a4:	ldr	x1, [x19, #160]
   3e0a8:	cbz	x1, 3e0b8 <my_regprop@@Base+0x3df4>
   3e0ac:	mov	w2, #0xa                   	// #10
   3e0b0:	mov	x0, x20
   3e0b4:	bl	54b0 <Perl_save_pushptr@plt>
   3e0b8:	ldr	x1, [x19, #168]
   3e0bc:	cbz	x1, 3e0cc <my_regprop@@Base+0x3e08>
   3e0c0:	mov	w2, #0xa                   	// #10
   3e0c4:	mov	x0, x20
   3e0c8:	bl	54b0 <Perl_save_pushptr@plt>
   3e0cc:	cmp	w23, #0x3e
   3e0d0:	mov	w0, #0x3c                  	// #60
   3e0d4:	csel	w23, w23, w0, ne  // ne = any
   3e0d8:	ldr	x0, [x19, #64]
   3e0dc:	ldr	x1, [x19, #72]
   3e0e0:	sub	x1, x0, x1
   3e0e4:	ldr	x0, [x19, #80]
   3e0e8:	add	x0, x0, x1
   3e0ec:	ldr	x2, [x19, #16]
   3e0f0:	cmp	x0, x2
   3e0f4:	b.hi	3e154 <my_regprop@@Base+0x3e90>  // b.pmore
   3e0f8:	ldr	x7, [x19, #8]
   3e0fc:	subs	x4, x0, x7
   3e100:	b.mi	3e164 <my_regprop@@Base+0x3ea0>  // b.first
   3e104:	mov	x6, x4
   3e108:	sub	x3, x2, x0
   3e10c:	ldr	w1, [x19, #192]
   3e110:	cmp	w1, #0x0
   3e114:	cset	w1, ne  // ne = any
   3e118:	cmp	x0, x2
   3e11c:	csel	x0, x0, x2, ls  // ls = plast
   3e120:	str	x0, [sp, #16]
   3e124:	str	x3, [sp, #8]
   3e128:	str	w1, [sp]
   3e12c:	mov	w5, w1
   3e130:	mov	w4, w23
   3e134:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3e138:	add	x3, x3, #0x5d8
   3e13c:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3e140:	add	x2, x2, #0xb90
   3e144:	mov	x0, x20
   3e148:	bl	273ac <my_regexec@@Base+0x3eb8>
   3e14c:	mov	w23, #0x3e                  	// #62
   3e150:	b	3e054 <my_regprop@@Base+0x3d90>
   3e154:	ldr	x7, [x19, #8]
   3e158:	sub	x6, x2, x7
   3e15c:	mov	x3, #0x0                   	// #0
   3e160:	b	3e10c <my_regprop@@Base+0x3e48>
   3e164:	ldr	x6, [x19, #48]
   3e168:	ldr	x5, [x19, #56]
   3e16c:	sub	w5, w5, w6
   3e170:	mov	w3, #0x2cbb                	// #11451
   3e174:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3e178:	add	x2, x2, #0xfb8
   3e17c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3e180:	add	x1, x1, #0x870
   3e184:	mov	x0, x20
   3e188:	bl	5420 <Perl_croak@plt>
   3e18c:	cbz	x24, 3e264 <my_regprop@@Base+0x3fa0>
   3e190:	ldr	x0, [x19, #208]
   3e194:	cbz	x0, 3e274 <my_regprop@@Base+0x3fb0>
   3e198:	str	wzr, [sp]
   3e19c:	mov	x7, #0x0                   	// #0
   3e1a0:	mov	w6, #0x10                  	// #16
   3e1a4:	mov	w5, #0x0                   	// #0
   3e1a8:	mov	x4, #0x0                   	// #0
   3e1ac:	mov	x3, #0x0                   	// #0
   3e1b0:	mov	x2, x24
   3e1b4:	ldr	x1, [x19, #208]
   3e1b8:	mov	x0, x20
   3e1bc:	bl	5600 <Perl_hv_common@plt>
   3e1c0:	cbz	x0, 3e2b0 <my_regprop@@Base+0x3fec>
   3e1c4:	ldr	x22, [x0, #16]
   3e1c8:	cbz	x22, 3e2b0 <my_regprop@@Base+0x3fec>
   3e1cc:	ldr	w0, [x22, #12]
   3e1d0:	tbz	w0, #10, 3e760 <my_regprop@@Base+0x449c>
   3e1d4:	and	w1, w0, #0x3fff00
   3e1d8:	and	w1, w1, #0xffe001ff
   3e1dc:	cmp	w1, #0x100
   3e1e0:	b.ne	3e318 <my_regprop@@Base+0x4054>  // b.any
   3e1e4:	and	x1, x0, #0xf
   3e1e8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3e1ec:	ldr	x2, [x2, #3712]
   3e1f0:	ldrb	w1, [x2, x1]
   3e1f4:	cbz	w1, 3e2c0 <my_regprop@@Base+0x3ffc>
   3e1f8:	and	w1, w0, #0xc000
   3e1fc:	cmp	w1, #0x8, lsl #12
   3e200:	b.eq	3e2e4 <my_regprop@@Base+0x4020>  // b.none
   3e204:	ldr	x0, [x22]
   3e208:	ldr	x23, [x0, #32]
   3e20c:	ldr	w0, [x22, #12]
   3e210:	and	x2, x0, #0xf
   3e214:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3e218:	ldr	x1, [x1, #3888]
   3e21c:	ldrb	w1, [x1, x2]
   3e220:	cbz	w1, 3e330 <my_regprop@@Base+0x406c>
   3e224:	and	w3, w0, #0xc000
   3e228:	cmp	w3, #0x8, lsl #12
   3e22c:	b.eq	3e354 <my_regprop@@Base+0x4090>  // b.none
   3e230:	and	w1, w0, #0xff
   3e234:	cmp	w1, #0xf
   3e238:	b.eq	3e388 <my_regprop@@Base+0x40c4>  // b.none
   3e23c:	ldr	x4, [x22, #16]
   3e240:	mov	x2, #0x0                   	// #0
   3e244:	cmp	x2, x23
   3e248:	b.ge	3e3b8 <my_regprop@@Base+0x40f4>  // b.tcont
   3e24c:	ldr	w6, [x4, x2, lsl #2]
   3e250:	ldr	w5, [x19, #144]
   3e254:	cmp	w6, w5
   3e258:	b.eq	3e7bc <my_regprop@@Base+0x44f8>  // b.none
   3e25c:	add	x2, x2, #0x1
   3e260:	b	3e244 <my_regprop@@Base+0x3f80>
   3e264:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3e268:	add	x1, x1, #0xbb0
   3e26c:	mov	x0, x20
   3e270:	bl	5420 <Perl_croak@plt>
   3e274:	mov	w1, #0xc                   	// #12
   3e278:	mov	x0, x20
   3e27c:	bl	57e0 <Perl_newSV_type@plt>
   3e280:	mov	x1, x0
   3e284:	str	x0, [x19, #208]
   3e288:	mov	x0, x20
   3e28c:	bl	55d0 <Perl_sv_2mortal@plt>
   3e290:	mov	w1, #0xb                   	// #11
   3e294:	mov	x0, x20
   3e298:	bl	57e0 <Perl_newSV_type@plt>
   3e29c:	mov	x1, x0
   3e2a0:	str	x0, [x19, #352]
   3e2a4:	mov	x0, x20
   3e2a8:	bl	55d0 <Perl_sv_2mortal@plt>
   3e2ac:	b	3e198 <my_regprop@@Base+0x3ed4>
   3e2b0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3e2b4:	add	x1, x1, #0xbd8
   3e2b8:	mov	x0, x20
   3e2bc:	bl	5420 <Perl_croak@plt>
   3e2c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e2c4:	add	x3, x3, #0xc10
   3e2c8:	add	x3, x3, #0x848
   3e2cc:	mov	w2, #0x2cd9                	// #11481
   3e2d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e2d4:	add	x1, x1, #0xfb8
   3e2d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e2dc:	add	x0, x0, #0xda0
   3e2e0:	bl	58e0 <__assert_fail@plt>
   3e2e4:	and	w0, w0, #0xff
   3e2e8:	sub	w0, w0, #0x9
   3e2ec:	cmp	w0, #0x1
   3e2f0:	b.hi	3e204 <my_regprop@@Base+0x3f40>  // b.pmore
   3e2f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e2f8:	add	x3, x3, #0xc10
   3e2fc:	add	x3, x3, #0x848
   3e300:	mov	w2, #0x2cd9                	// #11481
   3e304:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e308:	add	x1, x1, #0xfb8
   3e30c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e310:	add	x0, x0, #0xdd0
   3e314:	bl	58e0 <__assert_fail@plt>
   3e318:	mov	w2, #0x2                   	// #2
   3e31c:	mov	x1, x22
   3e320:	mov	x0, x20
   3e324:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   3e328:	mov	x23, x0
   3e32c:	b	3e20c <my_regprop@@Base+0x3f48>
   3e330:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e334:	add	x3, x3, #0xc10
   3e338:	add	x3, x3, #0x848
   3e33c:	mov	w2, #0x2cda                	// #11482
   3e340:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e344:	add	x1, x1, #0xfb8
   3e348:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e34c:	add	x0, x0, #0xd10
   3e350:	bl	58e0 <__assert_fail@plt>
   3e354:	and	w1, w0, #0xff
   3e358:	sub	w1, w1, #0x9
   3e35c:	cmp	w1, #0x1
   3e360:	b.hi	3e230 <my_regprop@@Base+0x3f6c>  // b.pmore
   3e364:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e368:	add	x3, x3, #0xc10
   3e36c:	add	x3, x3, #0x848
   3e370:	mov	w2, #0x2cda                	// #11482
   3e374:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e378:	add	x1, x1, #0xfb8
   3e37c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e380:	add	x0, x0, #0xd40
   3e384:	bl	58e0 <__assert_fail@plt>
   3e388:	ldr	x2, [x22]
   3e38c:	ldrb	w2, [x2, #129]
   3e390:	tbnz	w2, #6, 3e23c <my_regprop@@Base+0x3f78>
   3e394:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e398:	add	x3, x3, #0xc10
   3e39c:	add	x3, x3, #0x848
   3e3a0:	mov	w2, #0x2cda                	// #11482
   3e3a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e3a8:	add	x1, x1, #0xfb8
   3e3ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e3b0:	add	x0, x0, #0xd58
   3e3b4:	bl	58e0 <__assert_fail@plt>
   3e3b8:	cbz	x23, 3e7bc <my_regprop@@Base+0x44f8>
   3e3bc:	tbnz	w0, #28, 3e3e8 <my_regprop@@Base+0x4124>
   3e3c0:	ldr	x2, [x22]
   3e3c4:	ldr	x6, [x2, #24]
   3e3c8:	cmp	w3, #0x8, lsl #12
   3e3cc:	b.eq	3e4b4 <my_regprop@@Base+0x41f0>  // b.none
   3e3d0:	cmp	w1, #0xf
   3e3d4:	b.eq	3e4e4 <my_regprop@@Base+0x4220>  // b.none
   3e3d8:	ldr	x5, [x2, #16]
   3e3dc:	add	x5, x5, #0x5
   3e3e0:	cmp	x6, x5
   3e3e4:	b.cs	3e564 <my_regprop@@Base+0x42a0>  // b.hs, b.nlast
   3e3e8:	cmp	w3, #0x8, lsl #12
   3e3ec:	b.eq	3e510 <my_regprop@@Base+0x424c>  // b.none
   3e3f0:	cmp	w1, #0xf
   3e3f4:	b.ne	3e404 <my_regprop@@Base+0x4140>  // b.any
   3e3f8:	ldr	x0, [x22]
   3e3fc:	ldrb	w0, [x0, #129]
   3e400:	tbz	w0, #6, 3e540 <my_regprop@@Base+0x427c>
   3e404:	ldr	x0, [x22]
   3e408:	ldr	x2, [x0, #16]
   3e40c:	add	x2, x2, #0x5
   3e410:	mov	x1, x22
   3e414:	mov	x0, x20
   3e418:	bl	53c0 <Perl_sv_grow@plt>
   3e41c:	mov	x4, x0
   3e420:	ldr	w0, [x22, #12]
   3e424:	and	x2, x0, #0xf
   3e428:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3e42c:	ldr	x1, [x1, #3888]
   3e430:	ldrb	w1, [x1, x2]
   3e434:	cbz	w1, 3e5d0 <my_regprop@@Base+0x430c>
   3e438:	and	w1, w0, #0xc000
   3e43c:	cmp	w1, #0x8, lsl #12
   3e440:	b.eq	3e5f4 <my_regprop@@Base+0x4330>  // b.none
   3e444:	and	w0, w0, #0xff
   3e448:	cmp	w0, #0xf
   3e44c:	b.eq	3e66c <my_regprop@@Base+0x43a8>  // b.none
   3e450:	ldr	x1, [x22]
   3e454:	ldr	x0, [x1, #16]
   3e458:	add	x0, x0, #0x4
   3e45c:	str	x0, [x1, #16]
   3e460:	ldr	w0, [x19, #144]
   3e464:	str	w0, [x4, x23, lsl #2]
   3e468:	ldr	w0, [x22, #12]
   3e46c:	and	w2, w0, #0xf
   3e470:	and	x3, x0, #0xf
   3e474:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3e478:	ldr	x1, [x1, #3864]
   3e47c:	ldrb	w1, [x1, x3]
   3e480:	cbz	w1, 3e6d4 <my_regprop@@Base+0x4410>
   3e484:	and	w1, w0, #0xc000
   3e488:	cmp	w1, #0x8, lsl #12
   3e48c:	b.eq	3e6f8 <my_regprop@@Base+0x4434>  // b.none
   3e490:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3e494:	ldr	x0, [x0, #3712]
   3e498:	ldrb	w0, [x0, w2, uxtw]
   3e49c:	cbz	w0, 3e718 <my_regprop@@Base+0x4454>
   3e4a0:	ldr	x1, [x22]
   3e4a4:	ldr	x0, [x1, #32]
   3e4a8:	add	x0, x0, #0x1
   3e4ac:	str	x0, [x1, #32]
   3e4b0:	b	3e7bc <my_regprop@@Base+0x44f8>
   3e4b4:	sub	w5, w1, #0x9
   3e4b8:	cmp	w5, #0x1
   3e4bc:	b.hi	3e3d0 <my_regprop@@Base+0x410c>  // b.pmore
   3e4c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e4c4:	add	x3, x3, #0xc10
   3e4c8:	add	x3, x3, #0x848
   3e4cc:	mov	w2, #0x2ce4                	// #11492
   3e4d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e4d4:	add	x1, x1, #0xfb8
   3e4d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e4dc:	add	x0, x0, #0xe70
   3e4e0:	bl	58e0 <__assert_fail@plt>
   3e4e4:	ldrb	w5, [x2, #129]
   3e4e8:	tbnz	w5, #6, 3e3d8 <my_regprop@@Base+0x4114>
   3e4ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e4f0:	add	x3, x3, #0xc10
   3e4f4:	add	x3, x3, #0x848
   3e4f8:	mov	w2, #0x2ce4                	// #11492
   3e4fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e500:	add	x1, x1, #0xfb8
   3e504:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e508:	add	x0, x0, #0xe88
   3e50c:	bl	58e0 <__assert_fail@plt>
   3e510:	sub	w0, w1, #0x9
   3e514:	cmp	w0, #0x1
   3e518:	b.hi	3e3f0 <my_regprop@@Base+0x412c>  // b.pmore
   3e51c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e520:	add	x3, x3, #0xc10
   3e524:	add	x3, x3, #0x848
   3e528:	mov	w2, #0x2ce4                	// #11492
   3e52c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e530:	add	x1, x1, #0xfb8
   3e534:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e538:	add	x0, x0, #0xe70
   3e53c:	bl	58e0 <__assert_fail@plt>
   3e540:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e544:	add	x3, x3, #0xc10
   3e548:	add	x3, x3, #0x848
   3e54c:	mov	w2, #0x2ce4                	// #11492
   3e550:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e554:	add	x1, x1, #0xfb8
   3e558:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e55c:	add	x0, x0, #0xe88
   3e560:	bl	58e0 <__assert_fail@plt>
   3e564:	cmp	w3, #0x8, lsl #12
   3e568:	b.eq	3e5a0 <my_regprop@@Base+0x42dc>  // b.none
   3e56c:	cmp	w1, #0xf
   3e570:	b.ne	3e438 <my_regprop@@Base+0x4174>  // b.any
   3e574:	ldrb	w1, [x2, #129]
   3e578:	tbnz	w1, #6, 3e438 <my_regprop@@Base+0x4174>
   3e57c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e580:	add	x3, x3, #0xc10
   3e584:	add	x3, x3, #0x848
   3e588:	mov	w2, #0x2ce3                	// #11491
   3e58c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e590:	add	x1, x1, #0xfb8
   3e594:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e598:	add	x0, x0, #0xd58
   3e59c:	bl	58e0 <__assert_fail@plt>
   3e5a0:	sub	w3, w1, #0x9
   3e5a4:	cmp	w3, #0x1
   3e5a8:	b.hi	3e56c <my_regprop@@Base+0x42a8>  // b.pmore
   3e5ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e5b0:	add	x3, x3, #0xc10
   3e5b4:	add	x3, x3, #0x848
   3e5b8:	mov	w2, #0x2ce3                	// #11491
   3e5bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e5c0:	add	x1, x1, #0xfb8
   3e5c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e5c8:	add	x0, x0, #0xd40
   3e5cc:	bl	58e0 <__assert_fail@plt>
   3e5d0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e5d4:	add	x3, x3, #0xc10
   3e5d8:	add	x3, x3, #0x848
   3e5dc:	mov	w2, #0x2ce5                	// #11493
   3e5e0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e5e4:	add	x1, x1, #0xfb8
   3e5e8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e5ec:	add	x0, x0, #0xc10
   3e5f0:	bl	58e0 <__assert_fail@plt>
   3e5f4:	and	w2, w0, #0xff
   3e5f8:	sub	w2, w2, #0x9
   3e5fc:	cmp	w2, #0x1
   3e600:	b.ls	3e648 <my_regprop@@Base+0x4384>  // b.plast
   3e604:	and	w0, w0, #0xff
   3e608:	cmp	w0, #0xf
   3e60c:	b.eq	3e66c <my_regprop@@Base+0x43a8>  // b.none
   3e610:	cmp	w1, #0x8, lsl #12
   3e614:	b.ne	3e450 <my_regprop@@Base+0x418c>  // b.any
   3e618:	sub	w0, w0, #0x9
   3e61c:	cmp	w0, #0x1
   3e620:	b.hi	3e450 <my_regprop@@Base+0x418c>  // b.pmore
   3e624:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e628:	add	x3, x3, #0xc10
   3e62c:	add	x3, x3, #0x848
   3e630:	mov	w2, #0x2ce5                	// #11493
   3e634:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e638:	add	x1, x1, #0xfb8
   3e63c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e640:	add	x0, x0, #0xe70
   3e644:	bl	58e0 <__assert_fail@plt>
   3e648:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e64c:	add	x3, x3, #0xc10
   3e650:	add	x3, x3, #0x848
   3e654:	mov	w2, #0x2ce5                	// #11493
   3e658:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e65c:	add	x1, x1, #0xfb8
   3e660:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e664:	add	x0, x0, #0xc40
   3e668:	bl	58e0 <__assert_fail@plt>
   3e66c:	ldr	x0, [x22]
   3e670:	ldrb	w0, [x0, #129]
   3e674:	tbz	w0, #6, 3e6b0 <my_regprop@@Base+0x43ec>
   3e678:	cmp	w1, #0x8, lsl #12
   3e67c:	b.ne	3e450 <my_regprop@@Base+0x418c>  // b.any
   3e680:	ldr	x0, [x22]
   3e684:	ldrb	w0, [x0, #129]
   3e688:	tbnz	w0, #6, 3e450 <my_regprop@@Base+0x418c>
   3e68c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e690:	add	x3, x3, #0xc10
   3e694:	add	x3, x3, #0x848
   3e698:	mov	w2, #0x2ce5                	// #11493
   3e69c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e6a0:	add	x1, x1, #0xfb8
   3e6a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e6a8:	add	x0, x0, #0xe88
   3e6ac:	bl	58e0 <__assert_fail@plt>
   3e6b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e6b4:	add	x3, x3, #0xc10
   3e6b8:	add	x3, x3, #0x848
   3e6bc:	mov	w2, #0x2ce5                	// #11493
   3e6c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e6c4:	add	x1, x1, #0xfb8
   3e6c8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e6cc:	add	x0, x0, #0xc58
   3e6d0:	bl	58e0 <__assert_fail@plt>
   3e6d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e6d8:	add	x3, x3, #0xc10
   3e6dc:	add	x3, x3, #0x848
   3e6e0:	mov	w2, #0x2ce7                	// #11495
   3e6e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e6e8:	add	x1, x1, #0xfb8
   3e6ec:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e6f0:	add	x0, x0, #0xca0
   3e6f4:	bl	58e0 <__assert_fail@plt>
   3e6f8:	and	w0, w0, #0xff
   3e6fc:	sub	w0, w0, #0x9
   3e700:	cmp	w0, #0x1
   3e704:	b.ls	3e73c <my_regprop@@Base+0x4478>  // b.plast
   3e708:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3e70c:	ldr	x0, [x0, #3712]
   3e710:	ldrb	w0, [x0, w2, uxtw]
   3e714:	cbnz	w0, 3e4a0 <my_regprop@@Base+0x41dc>
   3e718:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e71c:	add	x3, x3, #0xc10
   3e720:	add	x3, x3, #0x848
   3e724:	mov	w2, #0x2ce7                	// #11495
   3e728:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e72c:	add	x1, x1, #0xfb8
   3e730:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3e734:	add	x0, x0, #0xda0
   3e738:	bl	58e0 <__assert_fail@plt>
   3e73c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e740:	add	x3, x3, #0xc10
   3e744:	add	x3, x3, #0x848
   3e748:	mov	w2, #0x2ce7                	// #11495
   3e74c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e750:	add	x1, x1, #0xfb8
   3e754:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e758:	add	x0, x0, #0xc40
   3e75c:	bl	58e0 <__assert_fail@plt>
   3e760:	and	w0, w0, #0xff
   3e764:	cmp	w0, #0x5
   3e768:	b.ls	3e7f4 <my_regprop@@Base+0x4530>  // b.plast
   3e76c:	mov	x3, #0x4                   	// #4
   3e770:	add	x2, x19, #0x90
   3e774:	mov	x1, x22
   3e778:	mov	x0, x20
   3e77c:	bl	57c0 <Perl_sv_setpvn@plt>
   3e780:	ldr	w0, [x22, #12]
   3e784:	and	w1, w0, #0xc000
   3e788:	cmp	w1, #0x8, lsl #12
   3e78c:	b.eq	3e808 <my_regprop@@Base+0x4544>  // b.none
   3e790:	mov	w1, #0x1100                	// #4352
   3e794:	orr	w1, w0, w1
   3e798:	str	w1, [x22, #12]
   3e79c:	and	x0, x0, #0xf
   3e7a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3e7a4:	ldr	x1, [x1, #3864]
   3e7a8:	ldrb	w0, [x1, x0]
   3e7ac:	cbz	w0, 3e838 <my_regprop@@Base+0x4574>
   3e7b0:	ldr	x0, [x22]
   3e7b4:	mov	x1, #0x1                   	// #1
   3e7b8:	str	x1, [x0, #32]
   3e7bc:	ldr	x1, [x19, #352]
   3e7c0:	ldrsw	x2, [x19, #144]
   3e7c4:	ldr	w0, [x24, #8]
   3e7c8:	add	w0, w0, #0x1
   3e7cc:	str	w0, [x24, #8]
   3e7d0:	mov	x3, x24
   3e7d4:	mov	x0, x20
   3e7d8:	bl	51a0 <Perl_av_store@plt>
   3e7dc:	cbz	x0, 3e880 <my_regprop@@Base+0x45bc>
   3e7e0:	mov	x1, x19
   3e7e4:	mov	x0, x20
   3e7e8:	bl	269a4 <my_regexec@@Base+0x34b0>
   3e7ec:	mov	w23, #0x1                   	// #1
   3e7f0:	b	3c914 <my_regprop@@Base+0x2650>
   3e7f4:	mov	w2, #0x6                   	// #6
   3e7f8:	mov	x1, x22
   3e7fc:	mov	x0, x20
   3e800:	bl	5130 <Perl_sv_upgrade@plt>
   3e804:	b	3e76c <my_regprop@@Base+0x44a8>
   3e808:	and	w1, w0, #0xff
   3e80c:	sub	w1, w1, #0x9
   3e810:	cmp	w1, #0x1
   3e814:	b.ls	3e85c <my_regprop@@Base+0x4598>  // b.plast
   3e818:	mov	w1, #0x1100                	// #4352
   3e81c:	orr	w1, w0, w1
   3e820:	str	w1, [x22, #12]
   3e824:	and	x0, x0, #0xf
   3e828:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3e82c:	ldr	x1, [x1, #3864]
   3e830:	ldrb	w0, [x1, x0]
   3e834:	cbnz	w0, 3e7b0 <my_regprop@@Base+0x44ec>
   3e838:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e83c:	add	x3, x3, #0xc10
   3e840:	add	x3, x3, #0x848
   3e844:	mov	w2, #0x2cee                	// #11502
   3e848:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e84c:	add	x1, x1, #0xfb8
   3e850:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e854:	add	x0, x0, #0xca0
   3e858:	bl	58e0 <__assert_fail@plt>
   3e85c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3e860:	add	x3, x3, #0xc10
   3e864:	add	x3, x3, #0x848
   3e868:	mov	w2, #0x2ced                	// #11501
   3e86c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3e870:	add	x1, x1, #0xfb8
   3e874:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3e878:	add	x0, x0, #0xcd8
   3e87c:	bl	58e0 <__assert_fail@plt>
   3e880:	ldr	w2, [x24, #8]
   3e884:	cmp	w2, #0x1
   3e888:	b.ls	3e898 <my_regprop@@Base+0x45d4>  // b.plast
   3e88c:	sub	w2, w2, #0x1
   3e890:	str	w2, [x24, #8]
   3e894:	b	3e7e0 <my_regprop@@Base+0x451c>
   3e898:	mov	x1, x24
   3e89c:	mov	x0, x20
   3e8a0:	bl	5860 <Perl_sv_free2@plt>
   3e8a4:	b	3e7e0 <my_regprop@@Base+0x451c>
   3e8a8:	mov	w23, #0x2c                  	// #44
   3e8ac:	ldr	w0, [x19, #120]
   3e8b0:	orr	w0, w0, #0x2
   3e8b4:	str	w0, [x19, #120]
   3e8b8:	ldr	w0, [x19, #244]
   3e8bc:	add	w0, w0, #0x1
   3e8c0:	str	w0, [x19, #244]
   3e8c4:	add	x26, x26, #0x1
   3e8c8:	str	x26, [x19, #64]
   3e8cc:	cmp	x24, x26
   3e8d0:	b.hi	3e9b4 <my_regprop@@Base+0x46f0>  // b.pmore
   3e8d4:	ldr	x1, [x19, #24]
   3e8d8:	cbz	x1, 3e8e8 <my_regprop@@Base+0x4624>
   3e8dc:	mov	w2, #0xb                   	// #11
   3e8e0:	mov	x0, x20
   3e8e4:	bl	54b0 <Perl_save_pushptr@plt>
   3e8e8:	ldr	x1, [x19, #160]
   3e8ec:	cbz	x1, 3e8fc <my_regprop@@Base+0x4638>
   3e8f0:	mov	w2, #0xa                   	// #10
   3e8f4:	mov	x0, x20
   3e8f8:	bl	54b0 <Perl_save_pushptr@plt>
   3e8fc:	ldr	x1, [x19, #168]
   3e900:	cbz	x1, 3e910 <my_regprop@@Base+0x464c>
   3e904:	mov	w2, #0xa                   	// #10
   3e908:	mov	x0, x20
   3e90c:	bl	54b0 <Perl_save_pushptr@plt>
   3e910:	ldr	x0, [x19, #64]
   3e914:	ldr	x1, [x19, #72]
   3e918:	sub	x1, x0, x1
   3e91c:	ldr	x0, [x19, #80]
   3e920:	add	x0, x0, x1
   3e924:	ldr	x1, [x19, #16]
   3e928:	cmp	x0, x1
   3e92c:	b.hi	3e97c <my_regprop@@Base+0x46b8>  // b.pmore
   3e930:	ldr	x5, [x19, #8]
   3e934:	subs	x4, x0, x5
   3e938:	b.mi	3e98c <my_regprop@@Base+0x46c8>  // b.first
   3e93c:	sub	x7, x1, x0
   3e940:	ldr	w2, [x19, #192]
   3e944:	cmp	w2, #0x0
   3e948:	cset	w3, ne  // ne = any
   3e94c:	cmp	x0, x1
   3e950:	csel	x0, x0, x1, ls  // ls = plast
   3e954:	str	x0, [sp]
   3e958:	mov	w6, w3
   3e95c:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   3e960:	add	x2, x2, #0xc70
   3e964:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3e968:	add	x1, x1, #0x3a8
   3e96c:	mov	x0, x20
   3e970:	bl	5420 <Perl_croak@plt>
   3e974:	mov	w23, #0x3c                  	// #60
   3e978:	b	3e8ac <my_regprop@@Base+0x45e8>
   3e97c:	ldr	x5, [x19, #8]
   3e980:	sub	x4, x1, x5
   3e984:	mov	x7, #0x0                   	// #0
   3e988:	b	3e940 <my_regprop@@Base+0x467c>
   3e98c:	ldr	x6, [x19, #48]
   3e990:	ldr	x5, [x19, #56]
   3e994:	sub	w5, w5, w6
   3e998:	mov	w3, #0x2d03                	// #11523
   3e99c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3e9a0:	add	x2, x2, #0xfb8
   3e9a4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3e9a8:	add	x1, x1, #0x870
   3e9ac:	mov	x0, x20
   3e9b0:	bl	5420 <Perl_croak@plt>
   3e9b4:	ldr	w0, [x19, #156]
   3e9b8:	add	w0, w0, #0x1
   3e9bc:	str	w0, [x19, #156]
   3e9c0:	mov	w26, #0x0                   	// #0
   3e9c4:	str	wzr, [sp, #192]
   3e9c8:	str	xzr, [sp, #176]
   3e9cc:	b	40d8c <my_regprop@@Base+0x6ac8>
   3e9d0:	ldr	w0, [x19, #156]
   3e9d4:	add	w0, w0, #0x1
   3e9d8:	str	w0, [x19, #156]
   3e9dc:	mov	w3, #0x0                   	// #0
   3e9e0:	add	x2, x19, #0x40
   3e9e4:	mov	x1, x19
   3e9e8:	mov	x0, x20
   3e9ec:	bl	266ac <my_regexec@@Base+0x31b8>
   3e9f0:	ldr	x0, [x19, #64]
   3e9f4:	ldrb	w0, [x0]
   3e9f8:	cmp	w0, #0x29
   3e9fc:	b.eq	3ea0c <my_regprop@@Base+0x4748>  // b.none
   3ea00:	mov	w26, #0x0                   	// #0
   3ea04:	mov	w23, #0x21                  	// #33
   3ea08:	b	3e9c4 <my_regprop@@Base+0x4700>
   3ea0c:	mov	w3, #0x0                   	// #0
   3ea10:	mov	w2, #0x5a                  	// #90
   3ea14:	mov	x1, x19
   3ea18:	mov	x0, x20
   3ea1c:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3ea20:	mov	x24, x0
   3ea24:	mov	x1, x19
   3ea28:	mov	x0, x20
   3ea2c:	bl	269a4 <my_regexec@@Base+0x34b0>
   3ea30:	b	40dcc <my_regprop@@Base+0x6b08>
   3ea34:	ldr	w26, [x19, #144]
   3ea38:	ldr	w0, [x19, #148]
   3ea3c:	cmp	w0, #0x0
   3ea40:	b.le	3ea4c <my_regprop@@Base+0x4788>
   3ea44:	mov	w23, #0x3a                  	// #58
   3ea48:	b	3e9c4 <my_regprop@@Base+0x4700>
   3ea4c:	mov	w0, #0xffffffff            	// #-1
   3ea50:	str	w0, [x19, #148]
   3ea54:	mov	w23, #0x3a                  	// #58
   3ea58:	b	3e9c4 <my_regprop@@Base+0x4700>
   3ea5c:	ldr	x1, [x19, #24]
   3ea60:	cbz	x1, 3ea70 <my_regprop@@Base+0x47ac>
   3ea64:	mov	w2, #0xb                   	// #11
   3ea68:	mov	x0, x20
   3ea6c:	bl	54b0 <Perl_save_pushptr@plt>
   3ea70:	ldr	x1, [x19, #160]
   3ea74:	cbz	x1, 3ea84 <my_regprop@@Base+0x47c0>
   3ea78:	mov	w2, #0xa                   	// #10
   3ea7c:	mov	x0, x20
   3ea80:	bl	54b0 <Perl_save_pushptr@plt>
   3ea84:	ldr	x1, [x19, #168]
   3ea88:	cbz	x1, 3ea98 <my_regprop@@Base+0x47d4>
   3ea8c:	mov	w2, #0xa                   	// #10
   3ea90:	mov	x0, x20
   3ea94:	bl	54b0 <Perl_save_pushptr@plt>
   3ea98:	ldr	x0, [x19, #64]
   3ea9c:	ldr	x1, [x19, #72]
   3eaa0:	sub	x1, x0, x1
   3eaa4:	ldr	x0, [x19, #80]
   3eaa8:	add	x0, x0, x1
   3eaac:	ldr	x2, [x19, #16]
   3eab0:	cmp	x0, x2
   3eab4:	b.hi	3eb0c <my_regprop@@Base+0x4848>  // b.pmore
   3eab8:	ldr	x7, [x19, #8]
   3eabc:	subs	x4, x0, x7
   3eac0:	b.mi	3eb1c <my_regprop@@Base+0x4858>  // b.first
   3eac4:	mov	x6, x4
   3eac8:	sub	x3, x2, x0
   3eacc:	ldr	w1, [x19, #192]
   3ead0:	cmp	w1, #0x0
   3ead4:	cset	w1, ne  // ne = any
   3ead8:	cmp	x0, x2
   3eadc:	csel	x0, x0, x2, ls  // ls = plast
   3eae0:	str	x0, [sp, #16]
   3eae4:	str	x3, [sp, #8]
   3eae8:	str	w1, [sp]
   3eaec:	mov	w5, w1
   3eaf0:	mov	w4, w22
   3eaf4:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3eaf8:	add	x3, x3, #0x5d8
   3eafc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3eb00:	add	x2, x2, #0xd88
   3eb04:	mov	x0, x20
   3eb08:	bl	273ac <my_regexec@@Base+0x3eb8>
   3eb0c:	ldr	x7, [x19, #8]
   3eb10:	sub	x6, x2, x7
   3eb14:	mov	x3, #0x0                   	// #0
   3eb18:	b	3eacc <my_regprop@@Base+0x4808>
   3eb1c:	ldr	x6, [x19, #48]
   3eb20:	ldr	x5, [x19, #56]
   3eb24:	sub	w5, w5, w6
   3eb28:	mov	w3, #0x2d25                	// #11557
   3eb2c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3eb30:	add	x2, x2, #0xfb8
   3eb34:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3eb38:	add	x1, x1, #0x870
   3eb3c:	mov	x0, x20
   3eb40:	bl	5420 <Perl_croak@plt>
   3eb44:	cmp	x24, x26
   3eb48:	b.eq	3ec78 <my_regprop@@Base+0x49b4>  // b.none
   3eb4c:	ldrb	w0, [x26]
   3eb50:	cmp	w0, #0x29
   3eb54:	b.ne	3ec78 <my_regprop@@Base+0x49b4>  // b.any
   3eb58:	ldr	w0, [x19, #120]
   3eb5c:	orr	w0, w0, #0x20
   3eb60:	str	w0, [x19, #120]
   3eb64:	ldr	w0, [x19, #148]
   3eb68:	cmp	w0, #0x0
   3eb6c:	b.le	3ed0c <my_regprop@@Base+0x4a48>
   3eb70:	ldr	w0, [x21]
   3eb74:	orr	w0, w0, #0x8
   3eb78:	str	w0, [x21]
   3eb7c:	mov	w23, #0x0                   	// #0
   3eb80:	cmp	w22, #0x2d
   3eb84:	b.eq	3f160 <my_regprop@@Base+0x4e9c>  // b.none
   3eb88:	cmp	w22, #0x2b
   3eb8c:	b.eq	3f26c <my_regprop@@Base+0x4fa8>  // b.none
   3eb90:	ldr	w4, [x19, #224]
   3eb94:	mov	w3, w23
   3eb98:	mov	w2, #0x55                  	// #85
   3eb9c:	mov	x1, x19
   3eba0:	mov	x0, x20
   3eba4:	bl	2a2f0 <my_regexec@@Base+0x6dfc>
   3eba8:	mov	x24, x0
   3ebac:	ldr	w0, [x19, #144]
   3ebb0:	cmp	w0, w23
   3ebb4:	b.gt	3f2bc <my_regprop@@Base+0x4ff8>
   3ebb8:	ldr	w0, [x19, #148]
   3ebbc:	cmp	w0, #0x0
   3ebc0:	b.le	3f2b4 <my_regprop@@Base+0x4ff0>
   3ebc4:	cmp	w0, w23
   3ebc8:	b.gt	3f2bc <my_regprop@@Base+0x4ff8>
   3ebcc:	ldr	x0, [x19, #64]
   3ebd0:	add	x0, x0, #0x1
   3ebd4:	str	x0, [x19, #64]
   3ebd8:	ldr	x1, [x19, #24]
   3ebdc:	cbz	x1, 3ebec <my_regprop@@Base+0x4928>
   3ebe0:	mov	w2, #0xb                   	// #11
   3ebe4:	mov	x0, x20
   3ebe8:	bl	54b0 <Perl_save_pushptr@plt>
   3ebec:	ldr	x1, [x19, #160]
   3ebf0:	cbz	x1, 3ec00 <my_regprop@@Base+0x493c>
   3ebf4:	mov	w2, #0xa                   	// #10
   3ebf8:	mov	x0, x20
   3ebfc:	bl	54b0 <Perl_save_pushptr@plt>
   3ec00:	ldr	x1, [x19, #168]
   3ec04:	cbz	x1, 3ec14 <my_regprop@@Base+0x4950>
   3ec08:	mov	w2, #0xa                   	// #10
   3ec0c:	mov	x0, x20
   3ec10:	bl	54b0 <Perl_save_pushptr@plt>
   3ec14:	ldr	x0, [x19, #64]
   3ec18:	ldr	x1, [x19, #72]
   3ec1c:	sub	x1, x0, x1
   3ec20:	ldr	x0, [x19, #80]
   3ec24:	add	x0, x0, x1
   3ec28:	ldr	x1, [x19, #16]
   3ec2c:	cmp	x0, x1
   3ec30:	b.hi	3f27c <my_regprop@@Base+0x4fb8>  // b.pmore
   3ec34:	ldr	x5, [x19, #8]
   3ec38:	subs	x4, x0, x5
   3ec3c:	b.mi	3f28c <my_regprop@@Base+0x4fc8>  // b.first
   3ec40:	sub	x7, x1, x0
   3ec44:	ldr	w2, [x19, #192]
   3ec48:	cmp	w2, #0x0
   3ec4c:	cset	w3, ne  // ne = any
   3ec50:	cmp	x0, x1
   3ec54:	csel	x0, x0, x1, ls  // ls = plast
   3ec58:	str	x0, [sp]
   3ec5c:	mov	w6, w3
   3ec60:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ec64:	add	x2, x2, #0xe18
   3ec68:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3ec6c:	add	x1, x1, #0x3a8
   3ec70:	mov	x0, x20
   3ec74:	bl	5420 <Perl_croak@plt>
   3ec78:	ldr	x21, [x19, #16]
   3ec7c:	ldr	x0, [x19, #8]
   3ec80:	sub	x21, x21, x0
   3ec84:	ldr	x1, [x19, #24]
   3ec88:	cbz	x1, 3ec98 <my_regprop@@Base+0x49d4>
   3ec8c:	mov	w2, #0xb                   	// #11
   3ec90:	mov	x0, x20
   3ec94:	bl	54b0 <Perl_save_pushptr@plt>
   3ec98:	ldr	x1, [x19, #160]
   3ec9c:	cbz	x1, 3ecac <my_regprop@@Base+0x49e8>
   3eca0:	mov	w2, #0xa                   	// #10
   3eca4:	mov	x0, x20
   3eca8:	bl	54b0 <Perl_save_pushptr@plt>
   3ecac:	ldr	x1, [x19, #168]
   3ecb0:	cbz	x1, 3ecc0 <my_regprop@@Base+0x49fc>
   3ecb4:	mov	w2, #0xa                   	// #10
   3ecb8:	mov	x0, x20
   3ecbc:	bl	54b0 <Perl_save_pushptr@plt>
   3ecc0:	cmp	x21, #0x7f
   3ecc4:	b.le	3ed00 <my_regprop@@Base+0x4a3c>
   3ecc8:	mov	x21, #0x75                  	// #117
   3eccc:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   3ecd0:	add	x6, x6, #0xfe0
   3ecd4:	ldr	w0, [x19, #192]
   3ecd8:	cmp	w0, #0x0
   3ecdc:	ldr	x5, [x19, #8]
   3ece0:	mov	x4, x21
   3ece4:	cset	w3, ne  // ne = any
   3ece8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ecec:	add	x2, x2, #0xdb0
   3ecf0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3ecf4:	add	x1, x1, #0x50
   3ecf8:	mov	x0, x20
   3ecfc:	bl	5420 <Perl_croak@plt>
   3ed00:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   3ed04:	add	x6, x6, #0x20
   3ed08:	b	3ecd4 <my_regprop@@Base+0x4a10>
   3ed0c:	mov	w0, #0xffffffff            	// #-1
   3ed10:	str	w0, [x19, #148]
   3ed14:	b	3eb70 <my_regprop@@Base+0x48ac>
   3ed18:	sub	x0, x26, #0x1
   3ed1c:	str	x0, [sp, #152]
   3ed20:	mov	w2, #0x2                   	// #2
   3ed24:	mov	x1, x19
   3ed28:	mov	x0, x20
   3ed2c:	bl	27634 <my_regexec@@Base+0x4140>
   3ed30:	cbz	x0, 3eeb0 <my_regprop@@Base+0x4bec>
   3ed34:	ldr	w1, [x0, #12]
   3ed38:	and	x3, x1, #0xf
   3ed3c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3ed40:	ldr	x2, [x2, #3888]
   3ed44:	ldrb	w2, [x2, x3]
   3ed48:	cbz	w2, 3ee28 <my_regprop@@Base+0x4b64>
   3ed4c:	and	w2, w1, #0xc000
   3ed50:	cmp	w2, #0x8, lsl #12
   3ed54:	b.eq	3ee4c <my_regprop@@Base+0x4b88>  // b.none
   3ed58:	and	w1, w1, #0xff
   3ed5c:	cmp	w1, #0xf
   3ed60:	b.eq	3ee80 <my_regprop@@Base+0x4bbc>  // b.none
   3ed64:	ldr	x0, [x0, #16]
   3ed68:	ldr	w23, [x0]
   3ed6c:	ldr	x0, [x19, #64]
   3ed70:	ldr	x1, [x19, #56]
   3ed74:	cmp	x0, x1
   3ed78:	b.cs	3ed88 <my_regprop@@Base+0x4ac4>  // b.hs, b.nlast
   3ed7c:	ldrb	w0, [x0]
   3ed80:	cmp	w0, #0x29
   3ed84:	b.eq	3eb90 <my_regprop@@Base+0x48cc>  // b.none
   3ed88:	ldr	x1, [x19, #24]
   3ed8c:	cbz	x1, 3ed9c <my_regprop@@Base+0x4ad8>
   3ed90:	mov	w2, #0xb                   	// #11
   3ed94:	mov	x0, x20
   3ed98:	bl	54b0 <Perl_save_pushptr@plt>
   3ed9c:	ldr	x1, [x19, #160]
   3eda0:	cbz	x1, 3edb0 <my_regprop@@Base+0x4aec>
   3eda4:	mov	w2, #0xa                   	// #10
   3eda8:	mov	x0, x20
   3edac:	bl	54b0 <Perl_save_pushptr@plt>
   3edb0:	ldr	x1, [x19, #168]
   3edb4:	cbz	x1, 3edc4 <my_regprop@@Base+0x4b00>
   3edb8:	mov	w2, #0xa                   	// #10
   3edbc:	mov	x0, x20
   3edc0:	bl	54b0 <Perl_save_pushptr@plt>
   3edc4:	ldr	x0, [x19, #64]
   3edc8:	ldr	x1, [x19, #72]
   3edcc:	sub	x1, x0, x1
   3edd0:	ldr	x0, [x19, #80]
   3edd4:	add	x0, x0, x1
   3edd8:	ldr	x1, [x19, #16]
   3eddc:	cmp	x0, x1
   3ede0:	b.hi	3eeb8 <my_regprop@@Base+0x4bf4>  // b.pmore
   3ede4:	ldr	x5, [x19, #8]
   3ede8:	subs	x4, x0, x5
   3edec:	b.mi	3eec8 <my_regprop@@Base+0x4c04>  // b.first
   3edf0:	sub	x7, x1, x0
   3edf4:	ldr	w2, [x19, #192]
   3edf8:	cmp	w2, #0x0
   3edfc:	cset	w3, ne  // ne = any
   3ee00:	cmp	x0, x1
   3ee04:	csel	x0, x0, x1, ls  // ls = plast
   3ee08:	str	x0, [sp]
   3ee0c:	mov	w6, w3
   3ee10:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ee14:	add	x2, x2, #0xdd0
   3ee18:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3ee1c:	add	x1, x1, #0x3a8
   3ee20:	mov	x0, x20
   3ee24:	bl	5420 <Perl_croak@plt>
   3ee28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3ee2c:	add	x3, x3, #0xc10
   3ee30:	add	x3, x3, #0x848
   3ee34:	mov	w2, #0x2d3c                	// #11580
   3ee38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ee3c:	add	x1, x1, #0xfb8
   3ee40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3ee44:	add	x0, x0, #0xd10
   3ee48:	bl	58e0 <__assert_fail@plt>
   3ee4c:	and	w2, w1, #0xff
   3ee50:	sub	w2, w2, #0x9
   3ee54:	cmp	w2, #0x1
   3ee58:	b.hi	3ed58 <my_regprop@@Base+0x4a94>  // b.pmore
   3ee5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3ee60:	add	x3, x3, #0xc10
   3ee64:	add	x3, x3, #0x848
   3ee68:	mov	w2, #0x2d3c                	// #11580
   3ee6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ee70:	add	x1, x1, #0xfb8
   3ee74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3ee78:	add	x0, x0, #0xd40
   3ee7c:	bl	58e0 <__assert_fail@plt>
   3ee80:	ldr	x1, [x0]
   3ee84:	ldrb	w1, [x1, #129]
   3ee88:	tbnz	w1, #6, 3ed64 <my_regprop@@Base+0x4aa0>
   3ee8c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3ee90:	add	x3, x3, #0xc10
   3ee94:	add	x3, x3, #0x848
   3ee98:	mov	w2, #0x2d3c                	// #11580
   3ee9c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3eea0:	add	x1, x1, #0xfb8
   3eea4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3eea8:	add	x0, x0, #0xd58
   3eeac:	bl	58e0 <__assert_fail@plt>
   3eeb0:	mov	w23, #0x0                   	// #0
   3eeb4:	b	3ed6c <my_regprop@@Base+0x4aa8>
   3eeb8:	ldr	x5, [x19, #8]
   3eebc:	sub	x4, x1, x5
   3eec0:	mov	x7, #0x0                   	// #0
   3eec4:	b	3edf4 <my_regprop@@Base+0x4b30>
   3eec8:	ldr	x6, [x19, #48]
   3eecc:	ldr	x5, [x19, #56]
   3eed0:	sub	w5, w5, w6
   3eed4:	mov	w3, #0x2d3f                	// #11583
   3eed8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3eedc:	add	x2, x2, #0xfb8
   3eee0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3eee4:	add	x1, x1, #0x870
   3eee8:	mov	x0, x20
   3eeec:	bl	5420 <Perl_croak@plt>
   3eef0:	ldrb	w0, [x26]
   3eef4:	sub	w0, w0, #0x31
   3eef8:	cmp	w0, #0x8
   3eefc:	b.ls	3eff4 <my_regprop@@Base+0x4d30>  // b.plast
   3ef00:	add	x26, x26, #0x1
   3ef04:	str	x26, [x19, #64]
   3ef08:	ldr	x1, [x19, #24]
   3ef0c:	cbz	x1, 3ef1c <my_regprop@@Base+0x4c58>
   3ef10:	mov	w2, #0xb                   	// #11
   3ef14:	mov	x0, x20
   3ef18:	bl	54b0 <Perl_save_pushptr@plt>
   3ef1c:	ldr	x1, [x19, #160]
   3ef20:	cbz	x1, 3ef30 <my_regprop@@Base+0x4c6c>
   3ef24:	mov	w2, #0xa                   	// #10
   3ef28:	mov	x0, x20
   3ef2c:	bl	54b0 <Perl_save_pushptr@plt>
   3ef30:	ldr	x1, [x19, #168]
   3ef34:	cbz	x1, 3ef44 <my_regprop@@Base+0x4c80>
   3ef38:	mov	w2, #0xa                   	// #10
   3ef3c:	mov	x0, x20
   3ef40:	bl	54b0 <Perl_save_pushptr@plt>
   3ef44:	ldr	x0, [x19, #64]
   3ef48:	ldr	x1, [x19, #72]
   3ef4c:	sub	x1, x0, x1
   3ef50:	ldr	x0, [x19, #80]
   3ef54:	add	x0, x0, x1
   3ef58:	ldr	x1, [x19, #16]
   3ef5c:	cmp	x0, x1
   3ef60:	b.hi	3efa8 <my_regprop@@Base+0x4ce4>  // b.pmore
   3ef64:	ldr	x5, [x19, #8]
   3ef68:	subs	x4, x0, x5
   3ef6c:	b.mi	3efb8 <my_regprop@@Base+0x4cf4>  // b.first
   3ef70:	sub	x7, x1, x0
   3ef74:	ldr	w2, [x19, #192]
   3ef78:	cmp	w2, #0x0
   3ef7c:	cset	w3, ne  // ne = any
   3ef80:	cmp	x0, x1
   3ef84:	csel	x0, x0, x1, ls  // ls = plast
   3ef88:	str	x0, [sp]
   3ef8c:	mov	w6, w3
   3ef90:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ef94:	add	x2, x2, #0xdf0
   3ef98:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3ef9c:	add	x1, x1, #0x3a8
   3efa0:	mov	x0, x20
   3efa4:	bl	5420 <Perl_croak@plt>
   3efa8:	ldr	x5, [x19, #8]
   3efac:	sub	x4, x1, x5
   3efb0:	mov	x7, #0x0                   	// #0
   3efb4:	b	3ef74 <my_regprop@@Base+0x4cb0>
   3efb8:	ldr	x6, [x19, #48]
   3efbc:	ldr	x5, [x19, #56]
   3efc0:	sub	w5, w5, w6
   3efc4:	mov	w3, #0x2d45                	// #11589
   3efc8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3efcc:	add	x2, x2, #0xfb8
   3efd0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3efd4:	add	x1, x1, #0x870
   3efd8:	mov	x0, x20
   3efdc:	bl	5420 <Perl_croak@plt>
   3efe0:	ldrb	w0, [x26]
   3efe4:	sub	w0, w0, #0x31
   3efe8:	cmp	w0, #0x8
   3efec:	b.hi	3f028 <my_regprop@@Base+0x4d64>  // b.pmore
   3eff0:	str	x28, [x19, #64]
   3eff4:	ldr	x25, [x19, #64]
   3eff8:	ldrb	w0, [x25]
   3effc:	cmp	w0, #0x2d
   3f000:	b.eq	3f034 <my_regprop@@Base+0x4d70>  // b.none
   3f004:	str	x24, [sp, #232]
   3f008:	add	x2, sp, #0xe8
   3f00c:	add	x1, sp, #0xf0
   3f010:	mov	x0, x25
   3f014:	bl	4f20 <Perl_grok_atoUV@plt>
   3f018:	and	w0, w0, #0xff
   3f01c:	cbnz	w0, 4224c <my_regprop@@Base+0x7f88>
   3f020:	mov	w23, #0x7fffffff            	// #2147483647
   3f024:	b	3f06c <my_regprop@@Base+0x4da8>
   3f028:	sub	x26, x26, #0x1
   3f02c:	str	x26, [x19, #64]
   3f030:	b	4097c <my_regprop@@Base+0x66b8>
   3f034:	add	x0, x25, #0x1
   3f038:	str	x0, [x19, #64]
   3f03c:	str	x24, [sp, #232]
   3f040:	add	x2, sp, #0xe8
   3f044:	add	x1, sp, #0xf0
   3f048:	bl	4f20 <Perl_grok_atoUV@plt>
   3f04c:	ands	w27, w0, #0xff
   3f050:	b.ne	42234 <my_regprop@@Base+0x7f70>  // b.any
   3f054:	mov	w23, #0x7fffffff            	// #2147483647
   3f058:	b	3f068 <my_regprop@@Base+0x4da4>
   3f05c:	ldr	x0, [sp, #232]
   3f060:	str	x0, [x19, #64]
   3f064:	cbz	w27, 3f06c <my_regprop@@Base+0x4da8>
   3f068:	neg	w23, w23
   3f06c:	ldr	x0, [x19, #64]
   3f070:	ldrb	w0, [x0]
   3f074:	cmp	w0, #0x29
   3f078:	b.eq	3f11c <my_regprop@@Base+0x4e58>  // b.none
   3f07c:	ldr	x1, [x19, #24]
   3f080:	cbz	x1, 3f090 <my_regprop@@Base+0x4dcc>
   3f084:	mov	w2, #0xb                   	// #11
   3f088:	mov	x0, x20
   3f08c:	bl	54b0 <Perl_save_pushptr@plt>
   3f090:	ldr	x1, [x19, #160]
   3f094:	cbz	x1, 3f0a4 <my_regprop@@Base+0x4de0>
   3f098:	mov	w2, #0xa                   	// #10
   3f09c:	mov	x0, x20
   3f0a0:	bl	54b0 <Perl_save_pushptr@plt>
   3f0a4:	ldr	x1, [x19, #168]
   3f0a8:	cbz	x1, 3f0b8 <my_regprop@@Base+0x4df4>
   3f0ac:	mov	w2, #0xa                   	// #10
   3f0b0:	mov	x0, x20
   3f0b4:	bl	54b0 <Perl_save_pushptr@plt>
   3f0b8:	ldr	x0, [x19, #64]
   3f0bc:	ldr	x1, [x19, #72]
   3f0c0:	sub	x1, x0, x1
   3f0c4:	ldr	x0, [x19, #80]
   3f0c8:	add	x0, x0, x1
   3f0cc:	ldr	x1, [x19, #16]
   3f0d0:	cmp	x0, x1
   3f0d4:	b.hi	3f128 <my_regprop@@Base+0x4e64>  // b.pmore
   3f0d8:	ldr	x5, [x19, #8]
   3f0dc:	subs	x4, x0, x5
   3f0e0:	b.mi	3f138 <my_regprop@@Base+0x4e74>  // b.first
   3f0e4:	sub	x7, x1, x0
   3f0e8:	ldr	w2, [x19, #192]
   3f0ec:	cmp	w2, #0x0
   3f0f0:	cset	w3, ne  // ne = any
   3f0f4:	cmp	x0, x1
   3f0f8:	csel	x0, x0, x1, ls  // ls = plast
   3f0fc:	str	x0, [sp]
   3f100:	mov	w6, w3
   3f104:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3f108:	add	x2, x2, #0xe00
   3f10c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3f110:	add	x1, x1, #0x3a8
   3f114:	mov	x0, x20
   3f118:	bl	5420 <Perl_croak@plt>
   3f11c:	sub	x0, x25, #0x1
   3f120:	str	x0, [sp, #152]
   3f124:	b	3eb80 <my_regprop@@Base+0x48bc>
   3f128:	ldr	x5, [x19, #8]
   3f12c:	sub	x4, x1, x5
   3f130:	mov	x7, #0x0                   	// #0
   3f134:	b	3f0e8 <my_regprop@@Base+0x4e24>
   3f138:	ldr	x6, [x19, #48]
   3f13c:	ldr	x5, [x19, #56]
   3f140:	sub	w5, w5, w6
   3f144:	mov	w3, #0x2d69                	// #11625
   3f148:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3f14c:	add	x2, x2, #0xfb8
   3f150:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f154:	add	x1, x1, #0x870
   3f158:	mov	x0, x20
   3f15c:	bl	5420 <Perl_croak@plt>
   3f160:	ldr	w0, [x19, #144]
   3f164:	add	w23, w23, w0
   3f168:	cmp	w23, #0x0
   3f16c:	b.gt	3eb90 <my_regprop@@Base+0x48cc>
   3f170:	ldr	w0, [x19, #148]
   3f174:	cmp	w0, #0x0
   3f178:	b.le	3f260 <my_regprop@@Base+0x4f9c>
   3f17c:	ldr	x0, [x19, #64]
   3f180:	add	x0, x0, #0x1
   3f184:	str	x0, [x19, #64]
   3f188:	ldr	x1, [x19, #24]
   3f18c:	cbz	x1, 3f19c <my_regprop@@Base+0x4ed8>
   3f190:	mov	w2, #0xb                   	// #11
   3f194:	mov	x0, x20
   3f198:	bl	54b0 <Perl_save_pushptr@plt>
   3f19c:	ldr	x1, [x19, #160]
   3f1a0:	cbz	x1, 3f1b0 <my_regprop@@Base+0x4eec>
   3f1a4:	mov	w2, #0xa                   	// #10
   3f1a8:	mov	x0, x20
   3f1ac:	bl	54b0 <Perl_save_pushptr@plt>
   3f1b0:	ldr	x1, [x19, #168]
   3f1b4:	cbz	x1, 3f1c4 <my_regprop@@Base+0x4f00>
   3f1b8:	mov	w2, #0xa                   	// #10
   3f1bc:	mov	x0, x20
   3f1c0:	bl	54b0 <Perl_save_pushptr@plt>
   3f1c4:	ldr	x0, [x19, #64]
   3f1c8:	ldr	x1, [x19, #72]
   3f1cc:	sub	x1, x0, x1
   3f1d0:	ldr	x0, [x19, #80]
   3f1d4:	add	x0, x0, x1
   3f1d8:	ldr	x1, [x19, #16]
   3f1dc:	cmp	x0, x1
   3f1e0:	b.hi	3f228 <my_regprop@@Base+0x4f64>  // b.pmore
   3f1e4:	ldr	x5, [x19, #8]
   3f1e8:	subs	x4, x0, x5
   3f1ec:	b.mi	3f238 <my_regprop@@Base+0x4f74>  // b.first
   3f1f0:	sub	x7, x1, x0
   3f1f4:	ldr	w2, [x19, #192]
   3f1f8:	cmp	w2, #0x0
   3f1fc:	cset	w3, ne  // ne = any
   3f200:	cmp	x0, x1
   3f204:	csel	x0, x0, x1, ls  // ls = plast
   3f208:	str	x0, [sp]
   3f20c:	mov	w6, w3
   3f210:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3f214:	add	x2, x2, #0xe18
   3f218:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3f21c:	add	x1, x1, #0x3a8
   3f220:	mov	x0, x20
   3f224:	bl	5420 <Perl_croak@plt>
   3f228:	ldr	x5, [x19, #8]
   3f22c:	sub	x4, x1, x5
   3f230:	mov	x7, #0x0                   	// #0
   3f234:	b	3f1f4 <my_regprop@@Base+0x4f30>
   3f238:	ldr	x6, [x19, #48]
   3f23c:	ldr	x5, [x19, #56]
   3f240:	sub	w5, w5, w6
   3f244:	mov	w3, #0x2d80                	// #11648
   3f248:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3f24c:	add	x2, x2, #0xfb8
   3f250:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f254:	add	x1, x1, #0x870
   3f258:	mov	x0, x20
   3f25c:	bl	5420 <Perl_croak@plt>
   3f260:	mov	w0, #0xffffffff            	// #-1
   3f264:	str	w0, [x19, #148]
   3f268:	b	3eb90 <my_regprop@@Base+0x48cc>
   3f26c:	ldr	w0, [x19, #144]
   3f270:	sub	w0, w0, #0x1
   3f274:	add	w23, w23, w0
   3f278:	b	3eb90 <my_regprop@@Base+0x48cc>
   3f27c:	ldr	x5, [x19, #8]
   3f280:	sub	x4, x1, x5
   3f284:	mov	x7, #0x0                   	// #0
   3f288:	b	3ec44 <my_regprop@@Base+0x4980>
   3f28c:	ldr	x6, [x19, #48]
   3f290:	ldr	x5, [x19, #56]
   3f294:	sub	w5, w5, w6
   3f298:	mov	w3, #0x2d9b                	// #11675
   3f29c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3f2a0:	add	x2, x2, #0xfb8
   3f2a4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f2a8:	add	x1, x1, #0x870
   3f2ac:	mov	x0, x20
   3f2b0:	bl	5420 <Perl_croak@plt>
   3f2b4:	mov	w0, #0xffffffff            	// #-1
   3f2b8:	str	w0, [x19, #148]
   3f2bc:	ldr	w0, [x19, #224]
   3f2c0:	add	w0, w0, #0x1
   3f2c4:	str	w0, [x19, #224]
   3f2c8:	ldr	w0, [x20, #2368]
   3f2cc:	tbnz	w0, #20, 3f3e4 <my_regprop@@Base+0x5120>
   3f2d0:	ldr	x1, [sp, #224]
   3f2d4:	mov	x0, #0x2                   	// #2
   3f2d8:	movk	x0, #0x10, lsl #16
   3f2dc:	bics	xzr, x0, x1
   3f2e0:	b.eq	3f3e4 <my_regprop@@Base+0x5120>  // b.none
   3f2e4:	ldr	w0, [x19, #120]
   3f2e8:	orr	w0, w0, #0x20
   3f2ec:	str	w0, [x19, #120]
   3f2f0:	ldr	w0, [x20, #2368]
   3f2f4:	tbnz	w0, #20, 3f300 <my_regprop@@Base+0x503c>
   3f2f8:	ldr	x0, [sp, #224]
   3f2fc:	tbz	w0, #18, 3f334 <my_regprop@@Base+0x5070>
   3f300:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3f304:	add	x0, x0, #0xc10
   3f308:	ldr	x1, [x19, #96]
   3f30c:	add	x1, x1, x24, lsl #2
   3f310:	ldrb	w1, [x1, #1]
   3f314:	add	x0, x0, #0x1e8
   3f318:	ldrb	w3, [x0, x1]
   3f31c:	add	w3, w3, #0x1
   3f320:	mov	w2, w24
   3f324:	mov	w1, #0x2daa                	// #11690
   3f328:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3f32c:	add	x0, x0, #0x8
   3f330:	bl	5010 <Perl_warn_nocontext@plt>
   3f334:	lsl	x1, x24, #2
   3f338:	tbnz	x24, #61, 3f428 <my_regprop@@Base+0x5164>
   3f33c:	asr	x2, x1, #2
   3f340:	lsl	x22, x1, #1
   3f344:	ldr	x0, [x19, #40]
   3f348:	ldr	x4, [x0, #8]
   3f34c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   3f350:	add	x0, x0, #0xc10
   3f354:	ldr	x3, [x19, #96]
   3f358:	add	x1, x3, x1
   3f35c:	ldrb	w1, [x1, #1]
   3f360:	add	x0, x0, #0x1e8
   3f364:	ldrb	w0, [x0, x1]
   3f368:	add	w0, w0, #0x1
   3f36c:	str	w0, [x4, x22]
   3f370:	ldr	w0, [x20, #2368]
   3f374:	tbnz	w0, #20, 3f380 <my_regprop@@Base+0x50bc>
   3f378:	ldr	x0, [sp, #224]
   3f37c:	tbz	w0, #18, 3f39c <my_regprop@@Base+0x50d8>
   3f380:	ldr	x3, [x19, #48]
   3f384:	ldr	w0, [sp, #152]
   3f388:	sub	w3, w0, w3
   3f38c:	mov	w1, #0x2dac                	// #11692
   3f390:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3f394:	add	x0, x0, #0xf30
   3f398:	bl	5010 <Perl_warn_nocontext@plt>
   3f39c:	ldr	x0, [x19, #40]
   3f3a0:	ldr	x0, [x0, #8]
   3f3a4:	add	x0, x0, x22
   3f3a8:	ldr	x1, [x19, #48]
   3f3ac:	ldr	x2, [sp, #152]
   3f3b0:	sub	x1, x2, x1
   3f3b4:	stur	w1, [x0, #-4]
   3f3b8:	ldr	w0, [x21]
   3f3bc:	orr	w0, w0, #0x8
   3f3c0:	str	w0, [x21]
   3f3c4:	ldr	x0, [x19, #64]
   3f3c8:	ldrb	w0, [x0]
   3f3cc:	cmp	w0, #0x29
   3f3d0:	b.ne	3f43c <my_regprop@@Base+0x5178>  // b.any
   3f3d4:	mov	x1, x19
   3f3d8:	mov	x0, x20
   3f3dc:	bl	269a4 <my_regexec@@Base+0x34b0>
   3f3e0:	b	40dcc <my_regprop@@Base+0x6b08>
   3f3e4:	ldr	x0, [x19, #96]
   3f3e8:	add	x0, x0, x24, lsl #2
   3f3ec:	ldr	w1, [sp, #160]
   3f3f0:	lsl	w4, w1, #1
   3f3f4:	ldrsw	x7, [x0, #8]
   3f3f8:	ldr	w6, [x0, #4]
   3f3fc:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   3f400:	add	x5, x5, #0x20
   3f404:	add	w4, w4, #0x1
   3f408:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   3f40c:	add	x3, x3, #0xe38
   3f410:	mov	w2, #0x16                  	// #22
   3f414:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3f418:	add	x1, x1, #0xe40
   3f41c:	mov	x0, x20
   3f420:	bl	50e0 <Perl_re_printf@plt>
   3f424:	b	3f2e4 <my_regprop@@Base+0x5020>
   3f428:	ubfx	x2, x1, #2, #32
   3f42c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3f430:	add	x1, x1, #0x888
   3f434:	mov	x0, x20
   3f438:	bl	5420 <Perl_croak@plt>
   3f43c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3f440:	add	x3, x3, #0xc10
   3f444:	add	x3, x3, #0x848
   3f448:	mov	w2, #0x2daf                	// #11695
   3f44c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3f450:	add	x1, x1, #0xfb8
   3f454:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   3f458:	add	x0, x0, #0xe60
   3f45c:	bl	58e0 <__assert_fail@plt>
   3f460:	ldrb	w1, [x26]
   3f464:	cmp	w1, #0x7b
   3f468:	b.eq	3f5b0 <my_regprop@@Base+0x52ec>  // b.none
   3f46c:	cbz	w1, 3f49c <my_regprop@@Base+0x51d8>
   3f470:	ldr	w0, [sp, #144]
   3f474:	cbz	w0, 3f568 <my_regprop@@Base+0x52a4>
   3f478:	sub	x24, x24, x26
   3f47c:	cmp	x24, #0x0
   3f480:	b.le	3f570 <my_regprop@@Base+0x52ac>
   3f484:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   3f488:	ldr	x0, [x0, #4064]
   3f48c:	ldrb	w0, [x0, w1, sxtw]
   3f490:	cmp	x0, x24
   3f494:	csel	x0, x0, x24, le
   3f498:	b	3f4a0 <my_regprop@@Base+0x51dc>
   3f49c:	mov	x0, #0x0                   	// #0
   3f4a0:	add	x0, x26, x0
   3f4a4:	str	x0, [x19, #64]
   3f4a8:	ldr	x1, [x19, #24]
   3f4ac:	cbz	x1, 3f4bc <my_regprop@@Base+0x51f8>
   3f4b0:	mov	w2, #0xb                   	// #11
   3f4b4:	mov	x0, x20
   3f4b8:	bl	54b0 <Perl_save_pushptr@plt>
   3f4bc:	ldr	x1, [x19, #160]
   3f4c0:	cbz	x1, 3f4d0 <my_regprop@@Base+0x520c>
   3f4c4:	mov	w2, #0xa                   	// #10
   3f4c8:	mov	x0, x20
   3f4cc:	bl	54b0 <Perl_save_pushptr@plt>
   3f4d0:	ldr	x1, [x19, #168]
   3f4d4:	cbz	x1, 3f4e4 <my_regprop@@Base+0x5220>
   3f4d8:	mov	w2, #0xa                   	// #10
   3f4dc:	mov	x0, x20
   3f4e0:	bl	54b0 <Perl_save_pushptr@plt>
   3f4e4:	ldr	x5, [x19, #64]
   3f4e8:	ldr	x0, [x19, #72]
   3f4ec:	sub	x1, x5, x0
   3f4f0:	ldr	x0, [x19, #80]
   3f4f4:	add	x0, x0, x1
   3f4f8:	ldr	x6, [x19, #16]
   3f4fc:	cmp	x0, x6
   3f500:	b.hi	3f578 <my_regprop@@Base+0x52b4>  // b.pmore
   3f504:	ldr	x3, [x19, #8]
   3f508:	subs	x4, x0, x3
   3f50c:	b.mi	3f588 <my_regprop@@Base+0x52c4>  // b.first
   3f510:	mov	x2, x4
   3f514:	sub	x4, x6, x0
   3f518:	ldr	w1, [x19, #192]
   3f51c:	cmp	w1, #0x0
   3f520:	cset	w1, ne  // ne = any
   3f524:	cmp	x0, x6
   3f528:	csel	x0, x0, x6, ls  // ls = plast
   3f52c:	str	x0, [sp, #32]
   3f530:	str	x4, [sp, #24]
   3f534:	str	w1, [sp, #16]
   3f538:	str	x3, [sp, #8]
   3f53c:	str	x2, [sp]
   3f540:	mov	w7, w1
   3f544:	mov	x6, x25
   3f548:	sub	x5, x5, x25
   3f54c:	mov	w4, w1
   3f550:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3f554:	add	x3, x3, #0x5d8
   3f558:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   3f55c:	add	x2, x2, #0xc48
   3f560:	mov	x0, x20
   3f564:	bl	273ac <my_regexec@@Base+0x3eb8>
   3f568:	mov	x0, #0x1                   	// #1
   3f56c:	b	3f4a0 <my_regprop@@Base+0x51dc>
   3f570:	mov	x0, #0x0                   	// #0
   3f574:	b	3f4a0 <my_regprop@@Base+0x51dc>
   3f578:	ldr	x3, [x19, #8]
   3f57c:	sub	x2, x6, x3
   3f580:	mov	x4, #0x0                   	// #0
   3f584:	b	3f518 <my_regprop@@Base+0x5254>
   3f588:	ldr	x6, [x19, #48]
   3f58c:	ldr	x5, [x19, #56]
   3f590:	sub	w5, w5, w6
   3f594:	mov	w3, #0x2dba                	// #11706
   3f598:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3f59c:	add	x2, x2, #0xfb8
   3f5a0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f5a4:	add	x1, x1, #0x870
   3f5a8:	mov	x0, x20
   3f5ac:	bl	5420 <Perl_croak@plt>
   3f5b0:	ldr	w0, [x21]
   3f5b4:	orr	w0, w0, #0x8
   3f5b8:	str	w0, [x21]
   3f5bc:	ldr	x0, [x19, #64]
   3f5c0:	add	x0, x0, #0x1
   3f5c4:	str	x0, [x19, #64]
   3f5c8:	mov	w27, #0x1                   	// #1
   3f5cc:	ldr	w0, [x19, #156]
   3f5d0:	add	w0, w0, #0x1
   3f5d4:	str	w0, [x19, #156]
   3f5d8:	ldr	x1, [x19, #264]
   3f5dc:	cbz	x1, 3f628 <my_regprop@@Base+0x5364>
   3f5e0:	ldr	w0, [x19, #272]
   3f5e4:	ldr	w2, [x1, #4]
   3f5e8:	cmp	w0, w2
   3f5ec:	b.ge	3f628 <my_regprop@@Base+0x5364>  // b.tcont
   3f5f0:	sbfiz	x0, x0, #5, #32
   3f5f4:	ldr	x1, [x1, #8]
   3f5f8:	add	x21, x1, x0
   3f5fc:	ldr	x3, [x1, x0]
   3f600:	ldr	x0, [x19, #64]
   3f604:	cmp	w27, #0x0
   3f608:	mov	x2, #0xfffffffffffffffc    	// #-4
   3f60c:	mov	x1, #0xfffffffffffffffd    	// #-3
   3f610:	csel	x2, x2, x1, ne  // ne = any
   3f614:	ldr	x1, [x19, #48]
   3f618:	add	x0, x0, x2
   3f61c:	sub	x0, x0, x1
   3f620:	cmp	x3, x0
   3f624:	b.eq	3f758 <my_regprop@@Base+0x5494>  // b.none
   3f628:	ldr	w0, [x19, #4]
   3f62c:	tbnz	w0, #31, 3f6b8 <my_regprop@@Base+0x53f4>
   3f630:	ldr	x21, [x19, #16]
   3f634:	ldr	x0, [x19, #8]
   3f638:	sub	x21, x21, x0
   3f63c:	ldr	x1, [x19, #24]
   3f640:	cbz	x1, 3f650 <my_regprop@@Base+0x538c>
   3f644:	mov	w2, #0xb                   	// #11
   3f648:	mov	x0, x20
   3f64c:	bl	54b0 <Perl_save_pushptr@plt>
   3f650:	ldr	x1, [x19, #160]
   3f654:	cbz	x1, 3f664 <my_regprop@@Base+0x53a0>
   3f658:	mov	w2, #0xa                   	// #10
   3f65c:	mov	x0, x20
   3f660:	bl	54b0 <Perl_save_pushptr@plt>
   3f664:	ldr	x1, [x19, #168]
   3f668:	cbz	x1, 3f678 <my_regprop@@Base+0x53b4>
   3f66c:	mov	w2, #0xa                   	// #10
   3f670:	mov	x0, x20
   3f674:	bl	54b0 <Perl_save_pushptr@plt>
   3f678:	cmp	x21, #0x7f
   3f67c:	b.le	3f74c <my_regprop@@Base+0x5488>
   3f680:	mov	x21, #0x75                  	// #117
   3f684:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   3f688:	add	x6, x6, #0xfe0
   3f68c:	ldr	w0, [x19, #192]
   3f690:	cmp	w0, #0x0
   3f694:	ldr	x5, [x19, #8]
   3f698:	mov	x4, x21
   3f69c:	cset	w3, ne  // ne = any
   3f6a0:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3f6a4:	add	x2, x2, #0xea8
   3f6a8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f6ac:	add	x1, x1, #0x50
   3f6b0:	mov	x0, x20
   3f6b4:	bl	5420 <Perl_croak@plt>
   3f6b8:	ldr	x21, [x19, #16]
   3f6bc:	ldr	x0, [x19, #8]
   3f6c0:	sub	x21, x21, x0
   3f6c4:	ldr	x1, [x19, #24]
   3f6c8:	cbz	x1, 3f6d8 <my_regprop@@Base+0x5414>
   3f6cc:	mov	w2, #0xb                   	// #11
   3f6d0:	mov	x0, x20
   3f6d4:	bl	54b0 <Perl_save_pushptr@plt>
   3f6d8:	ldr	x1, [x19, #160]
   3f6dc:	cbz	x1, 3f6ec <my_regprop@@Base+0x5428>
   3f6e0:	mov	w2, #0xa                   	// #10
   3f6e4:	mov	x0, x20
   3f6e8:	bl	54b0 <Perl_save_pushptr@plt>
   3f6ec:	ldr	x1, [x19, #168]
   3f6f0:	cbz	x1, 3f700 <my_regprop@@Base+0x543c>
   3f6f4:	mov	w2, #0xa                   	// #10
   3f6f8:	mov	x0, x20
   3f6fc:	bl	54b0 <Perl_save_pushptr@plt>
   3f700:	cmp	x21, #0x7f
   3f704:	b.le	3f740 <my_regprop@@Base+0x547c>
   3f708:	mov	x21, #0x75                  	// #117
   3f70c:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   3f710:	add	x6, x6, #0xfe0
   3f714:	ldr	w0, [x19, #192]
   3f718:	cmp	w0, #0x0
   3f71c:	ldr	x5, [x19, #8]
   3f720:	mov	x4, x21
   3f724:	cset	w3, ne  // ne = any
   3f728:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3f72c:	add	x2, x2, #0xe78
   3f730:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3f734:	add	x1, x1, #0x50
   3f738:	mov	x0, x20
   3f73c:	bl	5420 <Perl_croak@plt>
   3f740:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   3f744:	add	x6, x6, #0x20
   3f748:	b	3f714 <my_regprop@@Base+0x5450>
   3f74c:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   3f750:	add	x6, x6, #0x20
   3f754:	b	3f68c <my_regprop@@Base+0x53c8>
   3f758:	ldr	x0, [x21, #8]
   3f75c:	add	x1, x1, x0
   3f760:	str	x1, [x19, #64]
   3f764:	ldr	x23, [x21, #16]
   3f768:	ldr	x0, [x21, #24]
   3f76c:	cbz	x0, 3f8a4 <my_regprop@@Base+0x55e0>
   3f770:	mov	w2, #0x2                   	// #2
   3f774:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3f778:	add	x1, x1, #0xee0
   3f77c:	mov	x0, x19
   3f780:	bl	26be8 <my_regexec@@Base+0x36f4>
   3f784:	mov	w22, w0
   3f788:	ldr	x0, [x21, #24]
   3f78c:	ldr	x1, [x19, #40]
   3f790:	ldr	x1, [x1, #24]
   3f794:	cbz	x0, 3f7a4 <my_regprop@@Base+0x54e0>
   3f798:	ldr	w2, [x0, #8]
   3f79c:	add	w2, w2, #0x1
   3f7a0:	str	w2, [x0, #8]
   3f7a4:	add	x1, x1, w22, uxtw #3
   3f7a8:	str	x0, [x1, #16]
   3f7ac:	ldr	x0, [x19, #40]
   3f7b0:	ldr	x1, [x0, #24]
   3f7b4:	add	w0, w22, #0x1
   3f7b8:	add	x0, x0, #0x2
   3f7bc:	str	x23, [x1, x0, lsl #3]
   3f7c0:	ldr	w0, [x19, #272]
   3f7c4:	add	w0, w0, #0x1
   3f7c8:	str	w0, [x19, #272]
   3f7cc:	mov	x1, x19
   3f7d0:	mov	x0, x20
   3f7d4:	bl	269a4 <my_regexec@@Base+0x34b0>
   3f7d8:	cbnz	w27, 3f8e4 <my_regprop@@Base+0x5620>
   3f7dc:	mov	w4, #0x0                   	// #0
   3f7e0:	mov	w3, w22
   3f7e4:	mov	w2, #0x4d                  	// #77
   3f7e8:	mov	x1, x19
   3f7ec:	mov	x0, x20
   3f7f0:	bl	2a2f0 <my_regexec@@Base+0x6dfc>
   3f7f4:	mov	x24, x0
   3f7f8:	ldr	w0, [x20, #2368]
   3f7fc:	tbnz	w0, #20, 3f808 <my_regprop@@Base+0x5544>
   3f800:	ldr	x0, [sp, #224]
   3f804:	tbz	w0, #18, 3f82c <my_regprop@@Base+0x5568>
   3f808:	ldr	x3, [x19, #64]
   3f80c:	ldr	x0, [sp, #152]
   3f810:	sub	x3, x3, x0
   3f814:	add	w3, w3, #0x1
   3f818:	mov	w2, w24
   3f81c:	mov	w1, #0x2df9                	// #11769
   3f820:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   3f824:	add	x0, x0, #0x8
   3f828:	bl	5010 <Perl_warn_nocontext@plt>
   3f82c:	lsl	x21, x24, #2
   3f830:	tbnz	x24, #61, 3f944 <my_regprop@@Base+0x5680>
   3f834:	asr	x2, x21, #2
   3f838:	lsl	x21, x21, #1
   3f83c:	ldr	x0, [x19, #40]
   3f840:	ldr	x1, [x0, #8]
   3f844:	ldr	x0, [x19, #64]
   3f848:	ldr	x3, [sp, #152]
   3f84c:	sub	x0, x0, x3
   3f850:	add	w0, w0, #0x1
   3f854:	str	w0, [x1, x21]
   3f858:	ldr	w0, [x20, #2368]
   3f85c:	tbnz	w0, #20, 3f868 <my_regprop@@Base+0x55a4>
   3f860:	ldr	x0, [sp, #224]
   3f864:	tbz	w0, #18, 3f884 <my_regprop@@Base+0x55c0>
   3f868:	ldr	x3, [x19, #48]
   3f86c:	ldr	w0, [sp, #152]
   3f870:	sub	w3, w0, w3
   3f874:	mov	w1, #0x2dfa                	// #11770
   3f878:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3f87c:	add	x0, x0, #0xf30
   3f880:	bl	5010 <Perl_warn_nocontext@plt>
   3f884:	ldr	x0, [x19, #40]
   3f888:	ldr	x0, [x0, #8]
   3f88c:	add	x0, x0, x21
   3f890:	ldr	x1, [x19, #48]
   3f894:	ldr	x2, [sp, #152]
   3f898:	sub	x1, x2, x1
   3f89c:	stur	w1, [x0, #-4]
   3f8a0:	b	40dcc <my_regprop@@Base+0x6b08>
   3f8a4:	ldr	w2, [x19, #4]
   3f8a8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   3f8ac:	add	x0, x0, #0x118
   3f8b0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3f8b4:	add	x1, x1, #0x708
   3f8b8:	tst	x2, #0x10000000
   3f8bc:	mov	w2, #0x1                   	// #1
   3f8c0:	csel	x1, x1, x0, ne  // ne = any
   3f8c4:	mov	x0, x19
   3f8c8:	bl	26be8 <my_regexec@@Base+0x36f4>
   3f8cc:	mov	w22, w0
   3f8d0:	ldr	x0, [x19, #40]
   3f8d4:	ldr	x0, [x0, #24]
   3f8d8:	add	x0, x0, w22, uxtw #3
   3f8dc:	str	x23, [x0, #16]
   3f8e0:	b	3f7c0 <my_regprop@@Base+0x54fc>
   3f8e4:	mov	w2, #0x4f                  	// #79
   3f8e8:	mov	x1, x19
   3f8ec:	mov	x0, x20
   3f8f0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   3f8f4:	mov	x24, x0
   3f8f8:	ldr	w4, [x19]
   3f8fc:	and	w4, w4, #0x7ff
   3f900:	mov	w3, w22
   3f904:	mov	w2, #0x4d                  	// #77
   3f908:	mov	x1, x19
   3f90c:	mov	x0, x20
   3f910:	bl	2a2f0 <my_regexec@@Base+0x6dfc>
   3f914:	ldr	x2, [x19, #96]
   3f918:	lsl	x1, x24, #2
   3f91c:	mov	w3, #0x2                   	// #2
   3f920:	strb	w3, [x2, x1]
   3f924:	ldr	w1, [sp, #160]
   3f928:	add	w4, w1, #0x1
   3f92c:	mov	x3, x0
   3f930:	mov	x2, x24
   3f934:	mov	x1, x19
   3f938:	mov	x0, x20
   3f93c:	bl	3b894 <my_regprop@@Base+0x15d0>
   3f940:	b	40dcc <my_regprop@@Base+0x6b08>
   3f944:	ubfx	x2, x21, #2, #32
   3f948:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3f94c:	add	x1, x1, #0x888
   3f950:	mov	x0, x20
   3f954:	bl	5420 <Perl_croak@plt>
   3f958:	sub	x0, x24, #0x1
   3f95c:	cmp	x26, x0
   3f960:	b.cs	3f978 <my_regprop@@Base+0x56b4>  // b.hs, b.nlast
   3f964:	ldrb	w22, [x26]
   3f968:	cmp	w22, #0x3f
   3f96c:	b.eq	3fa94 <my_regprop@@Base+0x57d0>  // b.none
   3f970:	cmp	w22, #0x2a
   3f974:	b.eq	3fb14 <my_regprop@@Base+0x5850>  // b.none
   3f978:	ldrb	w22, [x26]
   3f97c:	cmp	w22, #0x3c
   3f980:	mov	w0, #0x27                  	// #39
   3f984:	ccmp	w22, w0, #0x4, ne  // ne = any
   3f988:	b.ne	421d0 <my_regprop@@Base+0x7f0c>  // b.any
   3f98c:	cmp	w22, #0x3c
   3f990:	mov	w22, #0x3e                  	// #62
   3f994:	csel	w22, w22, w0, eq  // eq = none
   3f998:	add	x0, x26, #0x1
   3f99c:	str	x0, [x19, #64]
   3f9a0:	mov	w2, #0x2                   	// #2
   3f9a4:	mov	x1, x19
   3f9a8:	mov	x0, x20
   3f9ac:	bl	27634 <my_regexec@@Base+0x4140>
   3f9b0:	mov	x23, x0
   3f9b4:	ldr	x0, [x19, #64]
   3f9b8:	cmp	x26, x0
   3f9bc:	b.eq	3f9d8 <my_regprop@@Base+0x5714>  // b.none
   3f9c0:	ldr	x1, [x19, #56]
   3f9c4:	cmp	x0, x1
   3f9c8:	b.cs	3f9d8 <my_regprop@@Base+0x5714>  // b.hs, b.nlast
   3f9cc:	ldrb	w1, [x0]
   3f9d0:	cmp	w1, w22
   3f9d4:	b.eq	3fcc4 <my_regprop@@Base+0x5a00>  // b.none
   3f9d8:	ldr	x1, [x19, #24]
   3f9dc:	cbz	x1, 3f9ec <my_regprop@@Base+0x5728>
   3f9e0:	mov	w2, #0xb                   	// #11
   3f9e4:	mov	x0, x20
   3f9e8:	bl	54b0 <Perl_save_pushptr@plt>
   3f9ec:	ldr	x1, [x19, #160]
   3f9f0:	cbz	x1, 3fa00 <my_regprop@@Base+0x573c>
   3f9f4:	mov	w2, #0xa                   	// #10
   3f9f8:	mov	x0, x20
   3f9fc:	bl	54b0 <Perl_save_pushptr@plt>
   3fa00:	ldr	x1, [x19, #168]
   3fa04:	cbz	x1, 3fa14 <my_regprop@@Base+0x5750>
   3fa08:	mov	w2, #0xa                   	// #10
   3fa0c:	mov	x0, x20
   3fa10:	bl	54b0 <Perl_save_pushptr@plt>
   3fa14:	cmp	w22, #0x3e
   3fa18:	mov	w0, #0x3c                  	// #60
   3fa1c:	csel	w22, w22, w0, ne  // ne = any
   3fa20:	ldr	x0, [x19, #64]
   3fa24:	ldr	x1, [x19, #72]
   3fa28:	sub	x1, x0, x1
   3fa2c:	ldr	x0, [x19, #80]
   3fa30:	add	x0, x0, x1
   3fa34:	ldr	x2, [x19, #16]
   3fa38:	cmp	x0, x2
   3fa3c:	b.hi	3fc8c <my_regprop@@Base+0x59c8>  // b.pmore
   3fa40:	ldr	x7, [x19, #8]
   3fa44:	subs	x4, x0, x7
   3fa48:	b.mi	3fc9c <my_regprop@@Base+0x59d8>  // b.first
   3fa4c:	mov	x6, x4
   3fa50:	sub	x3, x2, x0
   3fa54:	ldr	w1, [x19, #192]
   3fa58:	cmp	w1, #0x0
   3fa5c:	cset	w1, ne  // ne = any
   3fa60:	cmp	x0, x2
   3fa64:	csel	x0, x0, x2, ls  // ls = plast
   3fa68:	str	x0, [sp, #16]
   3fa6c:	str	x3, [sp, #8]
   3fa70:	str	w1, [sp]
   3fa74:	mov	w5, w1
   3fa78:	mov	w4, w22
   3fa7c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   3fa80:	add	x3, x3, #0x5d8
   3fa84:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3fa88:	add	x2, x2, #0xf68
   3fa8c:	mov	x0, x20
   3fa90:	bl	273ac <my_regexec@@Base+0x3eb8>
   3fa94:	ldrb	w1, [x26, #1]
   3fa98:	sub	w0, w1, #0x3c
   3fa9c:	and	w0, w0, #0xff
   3faa0:	cmp	w1, #0x21
   3faa4:	mov	w2, #0x7b                  	// #123
   3faa8:	ccmp	w1, w2, #0x4, ne  // ne = any
   3faac:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   3fab0:	b.hi	421cc <my_regprop@@Base+0x7f08>  // b.pmore
   3fab4:	mov	w2, #0x4f                  	// #79
   3fab8:	mov	x1, x19
   3fabc:	mov	x0, x20
   3fac0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   3fac4:	mov	x24, x0
   3fac8:	ldr	x1, [x19, #96]
   3facc:	lsl	x0, x0, #2
   3fad0:	mov	w2, #0x1                   	// #1
   3fad4:	strb	w2, [x1, x0]
   3fad8:	ldr	w0, [sp, #160]
   3fadc:	add	w22, w0, #0x1
   3fae0:	mov	w4, w22
   3fae4:	add	x3, sp, #0xf0
   3fae8:	mov	w2, #0x1                   	// #1
   3faec:	mov	x1, x19
   3faf0:	mov	x0, x20
   3faf4:	bl	3c268 <my_regprop@@Base+0x1fa4>
   3faf8:	mov	x3, x0
   3fafc:	ldr	w23, [sp, #240]
   3fb00:	ands	w23, w23, #0x60
   3fb04:	b.eq	3fc0c <my_regprop@@Base+0x5948>  // b.none
   3fb08:	str	w23, [x21]
   3fb0c:	mov	x24, #0x0                   	// #0
   3fb10:	b	40dcc <my_regprop@@Base+0x6b08>
   3fb14:	add	x23, x26, #0x1
   3fb18:	sub	x25, x24, x23
   3fb1c:	cmp	x25, #0x3
   3fb20:	b.le	3fb84 <my_regprop@@Base+0x58c0>
   3fb24:	mov	x2, #0x4                   	// #4
   3fb28:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fb2c:	add	x1, x1, #0xee8
   3fb30:	mov	x0, x23
   3fb34:	bl	5460 <memcmp@plt>
   3fb38:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fb3c:	mov	x2, #0x4                   	// #4
   3fb40:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fb44:	add	x1, x1, #0xef0
   3fb48:	mov	x0, x23
   3fb4c:	bl	5460 <memcmp@plt>
   3fb50:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fb54:	mov	x2, #0x4                   	// #4
   3fb58:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fb5c:	add	x1, x1, #0xef8
   3fb60:	mov	x0, x23
   3fb64:	bl	5460 <memcmp@plt>
   3fb68:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fb6c:	mov	x2, #0x4                   	// #4
   3fb70:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fb74:	add	x1, x1, #0xf00
   3fb78:	mov	x0, x23
   3fb7c:	bl	5460 <memcmp@plt>
   3fb80:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fb84:	cmp	x25, #0x12
   3fb88:	b.le	3fbdc <my_regprop@@Base+0x5918>
   3fb8c:	mov	x2, #0x13                  	// #19
   3fb90:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fb94:	add	x1, x1, #0xf08
   3fb98:	mov	x0, x23
   3fb9c:	bl	5460 <memcmp@plt>
   3fba0:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fba4:	cmp	x25, #0x13
   3fba8:	b.le	3fbc4 <my_regprop@@Base+0x5900>
   3fbac:	mov	x2, #0x14                  	// #20
   3fbb0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fbb4:	add	x1, x1, #0xf20
   3fbb8:	mov	x0, x23
   3fbbc:	bl	5460 <memcmp@plt>
   3fbc0:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fbc4:	mov	x2, #0x13                  	// #19
   3fbc8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fbcc:	add	x1, x1, #0xf38
   3fbd0:	mov	x0, x23
   3fbd4:	bl	5460 <memcmp@plt>
   3fbd8:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fbdc:	cmp	x25, #0x13
   3fbe0:	b.le	3fbfc <my_regprop@@Base+0x5938>
   3fbe4:	mov	x2, #0x14                  	// #20
   3fbe8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   3fbec:	add	x1, x1, #0xf50
   3fbf0:	mov	x0, x23
   3fbf4:	bl	5460 <memcmp@plt>
   3fbf8:	cbz	w0, 3fab4 <my_regprop@@Base+0x57f0>
   3fbfc:	sub	x23, x24, x26
   3fc00:	cmp	x23, #0x5
   3fc04:	b.gt	421dc <my_regprop@@Base+0x7f18>
   3fc08:	b	421fc <my_regprop@@Base+0x7f38>
   3fc0c:	mov	w4, w22
   3fc10:	mov	x2, x24
   3fc14:	mov	x1, x19
   3fc18:	mov	x0, x20
   3fc1c:	bl	3b894 <my_regprop@@Base+0x15d0>
   3fc20:	mov	w3, #0x0                   	// #0
   3fc24:	mov	w2, #0x4b                  	// #75
   3fc28:	mov	x1, x19
   3fc2c:	mov	x0, x20
   3fc30:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3fc34:	ldr	w1, [sp, #160]
   3fc38:	add	w22, w1, #0x1
   3fc3c:	mov	w4, w22
   3fc40:	mov	x3, x0
   3fc44:	mov	x2, x24
   3fc48:	mov	x1, x19
   3fc4c:	mov	x0, x20
   3fc50:	bl	3b894 <my_regprop@@Base+0x15d0>
   3fc54:	mov	w4, w22
   3fc58:	mov	w3, #0x1                   	// #1
   3fc5c:	add	x2, sp, #0xdc
   3fc60:	mov	x1, x19
   3fc64:	mov	x0, x20
   3fc68:	bl	520c0 <my_regprop@@Base+0x17dfc>
   3fc6c:	mov	x25, x0
   3fc70:	cbnz	x0, 401fc <my_regprop@@Base+0x5f38>
   3fc74:	ldr	w0, [sp, #220]
   3fc78:	ands	w0, w0, #0x60
   3fc7c:	b.eq	4016c <my_regprop@@Base+0x5ea8>  // b.none
   3fc80:	str	w0, [x21]
   3fc84:	mov	x24, x25
   3fc88:	b	40dcc <my_regprop@@Base+0x6b08>
   3fc8c:	ldr	x7, [x19, #8]
   3fc90:	sub	x6, x2, x7
   3fc94:	mov	x3, #0x0                   	// #0
   3fc98:	b	3fa54 <my_regprop@@Base+0x5790>
   3fc9c:	ldr	x6, [x19, #48]
   3fca0:	ldr	x5, [x19, #56]
   3fca4:	sub	w5, w5, w6
   3fca8:	mov	w3, #0x2e37                	// #11831
   3fcac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   3fcb0:	add	x2, x2, #0xfb8
   3fcb4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   3fcb8:	add	x1, x1, #0x870
   3fcbc:	mov	x0, x20
   3fcc0:	bl	5420 <Perl_croak@plt>
   3fcc4:	add	x0, x0, #0x1
   3fcc8:	str	x0, [x19, #64]
   3fccc:	cbz	x23, 3fd20 <my_regprop@@Base+0x5a5c>
   3fcd0:	mov	w2, #0x1                   	// #1
   3fcd4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   3fcd8:	add	x1, x1, #0xd50
   3fcdc:	mov	x0, x19
   3fce0:	bl	26be8 <my_regexec@@Base+0x36f4>
   3fce4:	mov	w3, w0
   3fce8:	ldr	x0, [x19, #40]
   3fcec:	ldr	x0, [x0, #24]
   3fcf0:	add	x0, x0, w3, uxtw #3
   3fcf4:	str	x23, [x0, #16]
   3fcf8:	ldr	w0, [x23, #8]
   3fcfc:	add	w0, w0, #0x1
   3fd00:	str	w0, [x23, #8]
   3fd04:	mov	w2, #0x56                  	// #86
   3fd08:	mov	x1, x19
   3fd0c:	mov	x0, x20
   3fd10:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3fd14:	mov	x24, x0
   3fd18:	mov	w23, #0x0                   	// #0
   3fd1c:	b	3fd98 <my_regprop@@Base+0x5ad4>
   3fd20:	mov	w3, #0x0                   	// #0
   3fd24:	b	3fd04 <my_regprop@@Base+0x5a40>
   3fd28:	mov	w3, #0x0                   	// #0
   3fd2c:	mov	w2, #0x58                  	// #88
   3fd30:	mov	x1, x19
   3fd34:	mov	x0, x20
   3fd38:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3fd3c:	mov	x24, x0
   3fd40:	ldr	x0, [x19, #64]
   3fd44:	add	x0, x0, #0x6
   3fd48:	str	x0, [x19, #64]
   3fd4c:	mov	w23, #0x1                   	// #1
   3fd50:	b	3fd98 <my_regprop@@Base+0x5ad4>
   3fd54:	add	x0, x26, #0x1
   3fd58:	str	x0, [x19, #64]
   3fd5c:	ldrb	w1, [x26, #1]
   3fd60:	cmp	w1, #0x30
   3fd64:	b.eq	3fde0 <my_regprop@@Base+0x5b1c>  // b.none
   3fd68:	sub	w2, w1, #0x31
   3fd6c:	cmp	w2, #0x8
   3fd70:	b.ls	3fdf0 <my_regprop@@Base+0x5b2c>  // b.plast
   3fd74:	cmp	w1, #0x26
   3fd78:	b.eq	3fe38 <my_regprop@@Base+0x5b74>  // b.none
   3fd7c:	mov	w3, #0x0                   	// #0
   3fd80:	mov	w2, #0x57                  	// #87
   3fd84:	mov	x1, x19
   3fd88:	mov	x0, x20
   3fd8c:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   3fd90:	mov	x24, x0
   3fd94:	mov	w23, #0x0                   	// #0
   3fd98:	ldr	x0, [x19, #64]
   3fd9c:	ldrb	w3, [x0]
   3fda0:	cmp	w3, #0x29
   3fda4:	b.eq	4015c <my_regprop@@Base+0x5e98>  // b.none
   3fda8:	ldr	w1, [x19, #192]
   3fdac:	cbz	w1, 40070 <my_regprop@@Base+0x5dac>
   3fdb0:	ldr	x1, [x19, #56]
   3fdb4:	cmp	x0, x1
   3fdb8:	b.hi	4004c <my_regprop@@Base+0x5d88>  // b.pmore
   3fdbc:	sub	x2, x1, x0
   3fdc0:	cmp	x2, #0x0
   3fdc4:	b.le	4011c <my_regprop@@Base+0x5e58>
   3fdc8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   3fdcc:	ldr	x1, [x1, #4064]
   3fdd0:	ldrb	w1, [x1, w3, sxtw]
   3fdd4:	cmp	x1, x2
   3fdd8:	csel	x1, x1, x2, le
   3fddc:	b	40074 <my_regprop@@Base+0x5db0>
   3fde0:	add	x26, x26, #0x2
   3fde4:	str	x26, [x19, #64]
   3fde8:	mov	w3, #0x1                   	// #1
   3fdec:	b	3fd80 <my_regprop@@Base+0x5abc>
   3fdf0:	str	x24, [sp, #232]
   3fdf4:	add	x2, sp, #0xe8
   3fdf8:	add	x1, sp, #0xf0
   3fdfc:	bl	4f20 <Perl_grok_atoUV@plt>
   3fe00:	and	w0, w0, #0xff
   3fe04:	cbz	w0, 3fe28 <my_regprop@@Base+0x5b64>
   3fe08:	ldr	x3, [sp, #240]
   3fe0c:	mov	x0, #0x7fffffff            	// #2147483647
   3fe10:	cmp	x3, x0
   3fe14:	b.hi	3fe30 <my_regprop@@Base+0x5b6c>  // b.pmore
   3fe18:	add	w3, w3, #0x1
   3fe1c:	ldr	x0, [sp, #232]
   3fe20:	str	x0, [x19, #64]
   3fe24:	b	3fd80 <my_regprop@@Base+0x5abc>
   3fe28:	mov	w3, #0x0                   	// #0
   3fe2c:	b	3fd80 <my_regprop@@Base+0x5abc>
   3fe30:	mov	w3, #0x0                   	// #0
   3fe34:	b	3fd80 <my_regprop@@Base+0x5abc>
   3fe38:	add	x26, x26, #0x2
   3fe3c:	str	x26, [x19, #64]
   3fe40:	mov	w2, #0x2                   	// #2
   3fe44:	mov	x1, x19
   3fe48:	mov	x0, x20
   3fe4c:	bl	27634 <my_regexec@@Base+0x4140>
   3fe50:	cbz	x0, 3ff1c <my_regprop@@Base+0x5c58>
   3fe54:	ldr	w1, [x0, #12]
   3fe58:	and	x3, x1, #0xf
   3fe5c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   3fe60:	ldr	x2, [x2, #3888]
   3fe64:	ldrb	w2, [x2, x3]
   3fe68:	cbz	w2, 3fea0 <my_regprop@@Base+0x5bdc>
   3fe6c:	and	w2, w1, #0xc000
   3fe70:	cmp	w2, #0x8, lsl #12
   3fe74:	b.eq	3fec4 <my_regprop@@Base+0x5c00>  // b.none
   3fe78:	and	w1, w1, #0xff
   3fe7c:	cmp	w1, #0xf
   3fe80:	b.ne	3fe90 <my_regprop@@Base+0x5bcc>  // b.any
   3fe84:	ldr	x1, [x0]
   3fe88:	ldrb	w1, [x1, #129]
   3fe8c:	tbz	w1, #6, 3fef8 <my_regprop@@Base+0x5c34>
   3fe90:	ldr	x0, [x0, #16]
   3fe94:	ldr	w3, [x0]
   3fe98:	add	w3, w3, #0x1
   3fe9c:	b	3fd80 <my_regprop@@Base+0x5abc>
   3fea0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3fea4:	add	x3, x3, #0xc10
   3fea8:	add	x3, x3, #0x848
   3feac:	mov	w2, #0x2e67                	// #11879
   3feb0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3feb4:	add	x1, x1, #0xfb8
   3feb8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3febc:	add	x0, x0, #0xd10
   3fec0:	bl	58e0 <__assert_fail@plt>
   3fec4:	and	w2, w1, #0xff
   3fec8:	sub	w2, w2, #0x9
   3fecc:	cmp	w2, #0x1
   3fed0:	b.hi	3fe78 <my_regprop@@Base+0x5bb4>  // b.pmore
   3fed4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3fed8:	add	x3, x3, #0xc10
   3fedc:	add	x3, x3, #0x848
   3fee0:	mov	w2, #0x2e67                	// #11879
   3fee4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3fee8:	add	x1, x1, #0xfb8
   3feec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3fef0:	add	x0, x0, #0xd40
   3fef4:	bl	58e0 <__assert_fail@plt>
   3fef8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   3fefc:	add	x3, x3, #0xc10
   3ff00:	add	x3, x3, #0x848
   3ff04:	mov	w2, #0x2e67                	// #11879
   3ff08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   3ff0c:	add	x1, x1, #0xfb8
   3ff10:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   3ff14:	add	x0, x0, #0xd58
   3ff18:	bl	58e0 <__assert_fail@plt>
   3ff1c:	mov	w3, #0x0                   	// #0
   3ff20:	b	3fd80 <my_regprop@@Base+0x5abc>
   3ff24:	str	x24, [sp, #232]
   3ff28:	add	x2, sp, #0xe8
   3ff2c:	add	x1, sp, #0xf0
   3ff30:	mov	x0, x26
   3ff34:	bl	4f20 <Perl_grok_atoUV@plt>
   3ff38:	and	w0, w0, #0xff
   3ff3c:	cbz	w0, 3ff50 <my_regprop@@Base+0x5c8c>
   3ff40:	ldr	x3, [sp, #240]
   3ff44:	mov	x0, #0x7fffffff            	// #2147483647
   3ff48:	cmp	x3, x0
   3ff4c:	b.ls	3fff0 <my_regprop@@Base+0x5d2c>  // b.plast
   3ff50:	ldr	x1, [x19, #24]
   3ff54:	cbz	x1, 3ff64 <my_regprop@@Base+0x5ca0>
   3ff58:	mov	w2, #0xb                   	// #11
   3ff5c:	mov	x0, x20
   3ff60:	bl	54b0 <Perl_save_pushptr@plt>
   3ff64:	ldr	x1, [x19, #160]
   3ff68:	cbz	x1, 3ff78 <my_regprop@@Base+0x5cb4>
   3ff6c:	mov	w2, #0xa                   	// #10
   3ff70:	mov	x0, x20
   3ff74:	bl	54b0 <Perl_save_pushptr@plt>
   3ff78:	ldr	x1, [x19, #168]
   3ff7c:	cbz	x1, 3ff8c <my_regprop@@Base+0x5cc8>
   3ff80:	mov	w2, #0xa                   	// #10
   3ff84:	mov	x0, x20
   3ff88:	bl	54b0 <Perl_save_pushptr@plt>
   3ff8c:	ldr	x0, [x19, #64]
   3ff90:	ldr	x1, [x19, #72]
   3ff94:	sub	x1, x0, x1
   3ff98:	ldr	x0, [x19, #80]
   3ff9c:	add	x0, x0, x1
   3ffa0:	ldr	x1, [x19, #16]
   3ffa4:	cmp	x0, x1
   3ffa8:	b.hi	40014 <my_regprop@@Base+0x5d50>  // b.pmore
   3ffac:	ldr	x5, [x19, #8]
   3ffb0:	subs	x4, x0, x5
   3ffb4:	b.mi	40024 <my_regprop@@Base+0x5d60>  // b.first
   3ffb8:	sub	x7, x1, x0
   3ffbc:	ldr	w2, [x19, #192]
   3ffc0:	cmp	w2, #0x0
   3ffc4:	cset	w3, ne  // ne = any
   3ffc8:	cmp	x0, x1
   3ffcc:	csel	x0, x0, x1, ls  // ls = plast
   3ffd0:	str	x0, [sp]
   3ffd4:	mov	w6, w3
   3ffd8:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   3ffdc:	add	x2, x2, #0xf98
   3ffe0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   3ffe4:	add	x1, x1, #0x3a8
   3ffe8:	mov	x0, x20
   3ffec:	bl	5420 <Perl_croak@plt>
   3fff0:	ldr	x0, [sp, #232]
   3fff4:	str	x0, [x19, #64]
   3fff8:	mov	w2, #0x4c                  	// #76
   3fffc:	mov	x1, x19
   40000:	mov	x0, x20
   40004:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   40008:	mov	x24, x0
   4000c:	mov	w23, #0x0                   	// #0
   40010:	b	3fd98 <my_regprop@@Base+0x5ad4>
   40014:	ldr	x5, [x19, #8]
   40018:	sub	x4, x1, x5
   4001c:	mov	x7, #0x0                   	// #0
   40020:	b	3ffbc <my_regprop@@Base+0x5cf8>
   40024:	ldr	x6, [x19, #48]
   40028:	ldr	x5, [x19, #56]
   4002c:	sub	w5, w5, w6
   40030:	mov	w3, #0x2e78                	// #11896
   40034:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40038:	add	x2, x2, #0xfb8
   4003c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40040:	add	x1, x1, #0x870
   40044:	mov	x0, x20
   40048:	bl	5420 <Perl_croak@plt>
   4004c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   40050:	add	x3, x3, #0xc10
   40054:	add	x3, x3, #0x848
   40058:	mov	w2, #0x2e7f                	// #11903
   4005c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   40060:	add	x1, x1, #0xfb8
   40064:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   40068:	add	x0, x0, #0xc18
   4006c:	bl	58e0 <__assert_fail@plt>
   40070:	mov	x1, #0x1                   	// #1
   40074:	add	x0, x0, x1
   40078:	str	x0, [x19, #64]
   4007c:	ldr	x1, [x19, #24]
   40080:	cbz	x1, 40090 <my_regprop@@Base+0x5dcc>
   40084:	mov	w2, #0xb                   	// #11
   40088:	mov	x0, x20
   4008c:	bl	54b0 <Perl_save_pushptr@plt>
   40090:	ldr	x1, [x19, #160]
   40094:	cbz	x1, 400a4 <my_regprop@@Base+0x5de0>
   40098:	mov	w2, #0xa                   	// #10
   4009c:	mov	x0, x20
   400a0:	bl	54b0 <Perl_save_pushptr@plt>
   400a4:	ldr	x1, [x19, #168]
   400a8:	cbz	x1, 400b8 <my_regprop@@Base+0x5df4>
   400ac:	mov	w2, #0xa                   	// #10
   400b0:	mov	x0, x20
   400b4:	bl	54b0 <Perl_save_pushptr@plt>
   400b8:	ldr	x0, [x19, #64]
   400bc:	ldr	x1, [x19, #72]
   400c0:	sub	x1, x0, x1
   400c4:	ldr	x0, [x19, #80]
   400c8:	add	x0, x0, x1
   400cc:	ldr	x1, [x19, #16]
   400d0:	cmp	x0, x1
   400d4:	b.hi	40124 <my_regprop@@Base+0x5e60>  // b.pmore
   400d8:	ldr	x5, [x19, #8]
   400dc:	subs	x4, x0, x5
   400e0:	b.mi	40134 <my_regprop@@Base+0x5e70>  // b.first
   400e4:	sub	x7, x1, x0
   400e8:	ldr	w2, [x19, #192]
   400ec:	cmp	w2, #0x0
   400f0:	cset	w3, ne  // ne = any
   400f4:	cmp	x0, x1
   400f8:	csel	x0, x0, x1, ls  // ls = plast
   400fc:	str	x0, [sp]
   40100:	mov	w6, w3
   40104:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   40108:	add	x2, x2, #0xfc0
   4010c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   40110:	add	x1, x1, #0x3a8
   40114:	mov	x0, x20
   40118:	bl	5420 <Perl_croak@plt>
   4011c:	mov	x1, #0x0                   	// #0
   40120:	b	40074 <my_regprop@@Base+0x5db0>
   40124:	ldr	x5, [x19, #8]
   40128:	sub	x4, x1, x5
   4012c:	mov	x7, #0x0                   	// #0
   40130:	b	400e8 <my_regprop@@Base+0x5e24>
   40134:	ldr	x6, [x19, #48]
   40138:	ldr	x5, [x19, #56]
   4013c:	sub	w5, w5, w6
   40140:	mov	w3, #0x2e81                	// #11905
   40144:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40148:	add	x2, x2, #0xfb8
   4014c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40150:	add	x1, x1, #0x870
   40154:	mov	x0, x20
   40158:	bl	5420 <Perl_croak@plt>
   4015c:	mov	x1, x19
   40160:	mov	x0, x20
   40164:	bl	269a4 <my_regexec@@Base+0x34b0>
   40168:	b	3fc20 <my_regprop@@Base+0x595c>
   4016c:	ldr	x21, [x19, #16]
   40170:	ldr	x0, [x19, #8]
   40174:	sub	x21, x21, x0
   40178:	ldr	x1, [x19, #24]
   4017c:	cbz	x1, 4018c <my_regprop@@Base+0x5ec8>
   40180:	mov	w2, #0xb                   	// #11
   40184:	mov	x0, x20
   40188:	bl	54b0 <Perl_save_pushptr@plt>
   4018c:	ldr	x1, [x19, #160]
   40190:	cbz	x1, 401a0 <my_regprop@@Base+0x5edc>
   40194:	mov	w2, #0xa                   	// #10
   40198:	mov	x0, x20
   4019c:	bl	54b0 <Perl_save_pushptr@plt>
   401a0:	ldr	x1, [x19, #168]
   401a4:	cbz	x1, 401b4 <my_regprop@@Base+0x5ef0>
   401a8:	mov	w2, #0xa                   	// #10
   401ac:	mov	x0, x20
   401b0:	bl	54b0 <Perl_save_pushptr@plt>
   401b4:	cmp	x21, #0x7f
   401b8:	b.le	401f0 <my_regprop@@Base+0x5f2c>
   401bc:	mov	x21, #0x75                  	// #117
   401c0:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   401c4:	add	x6, x6, #0xfe0
   401c8:	ldr	w0, [x19, #192]
   401cc:	cmp	w0, #0x0
   401d0:	ldr	x5, [x19, #8]
   401d4:	mov	x4, x21
   401d8:	cset	w3, ne  // ne = any
   401dc:	ldrsw	x2, [sp, #220]
   401e0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   401e4:	add	x1, x1, #0xfe0
   401e8:	mov	x0, x20
   401ec:	bl	5420 <Perl_croak@plt>
   401f0:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   401f4:	add	x6, x6, #0x20
   401f8:	b	401c8 <my_regprop@@Base+0x5f04>
   401fc:	mov	w3, #0x0                   	// #0
   40200:	mov	w2, #0x46                  	// #70
   40204:	mov	x1, x19
   40208:	mov	x0, x20
   4020c:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   40210:	mov	w4, w22
   40214:	mov	x3, x0
   40218:	mov	x2, x25
   4021c:	mov	x1, x19
   40220:	mov	x0, x20
   40224:	bl	3b894 <my_regprop@@Base+0x15d0>
   40228:	ldr	x0, [x19, #64]
   4022c:	ldrb	w26, [x0]
   40230:	mov	x1, x19
   40234:	mov	x0, x20
   40238:	bl	269a4 <my_regexec@@Base+0x34b0>
   4023c:	ldr	w0, [sp, #220]
   40240:	tbz	w0, #0, 40250 <my_regprop@@Base+0x5f8c>
   40244:	ldr	w0, [x21]
   40248:	orr	w0, w0, #0x1
   4024c:	str	w0, [x21]
   40250:	cmp	w26, #0x7c
   40254:	b.eq	40310 <my_regprop@@Base+0x604c>  // b.none
   40258:	cmp	w26, #0x29
   4025c:	b.eq	42020 <my_regprop@@Base+0x7d5c>  // b.none
   40260:	ldr	x1, [x19, #64]
   40264:	ldr	x0, [x19, #56]
   40268:	cmp	x1, x0
   4026c:	b.cc	405ac <my_regprop@@Base+0x62e8>  // b.lo, b.ul, b.last
   40270:	ldr	x1, [x19, #24]
   40274:	cbz	x1, 40284 <my_regprop@@Base+0x5fc0>
   40278:	mov	w2, #0xb                   	// #11
   4027c:	mov	x0, x20
   40280:	bl	54b0 <Perl_save_pushptr@plt>
   40284:	ldr	x1, [x19, #160]
   40288:	cbz	x1, 40298 <my_regprop@@Base+0x5fd4>
   4028c:	mov	w2, #0xa                   	// #10
   40290:	mov	x0, x20
   40294:	bl	54b0 <Perl_save_pushptr@plt>
   40298:	ldr	x1, [x19, #168]
   4029c:	cbz	x1, 402ac <my_regprop@@Base+0x5fe8>
   402a0:	mov	w2, #0xa                   	// #10
   402a4:	mov	x0, x20
   402a8:	bl	54b0 <Perl_save_pushptr@plt>
   402ac:	ldr	x0, [x19, #64]
   402b0:	ldr	x1, [x19, #72]
   402b4:	sub	x1, x0, x1
   402b8:	ldr	x0, [x19, #80]
   402bc:	add	x0, x0, x1
   402c0:	ldr	x1, [x19, #16]
   402c4:	cmp	x0, x1
   402c8:	b.hi	40574 <my_regprop@@Base+0x62b0>  // b.pmore
   402cc:	ldr	x5, [x19, #8]
   402d0:	subs	x4, x0, x5
   402d4:	b.mi	40584 <my_regprop@@Base+0x62c0>  // b.first
   402d8:	sub	x7, x1, x0
   402dc:	ldr	w2, [x19, #192]
   402e0:	cmp	w2, #0x0
   402e4:	cset	w3, ne  // ne = any
   402e8:	cmp	x0, x1
   402ec:	csel	x0, x0, x1, ls  // ls = plast
   402f0:	str	x0, [sp]
   402f4:	mov	w6, w3
   402f8:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   402fc:	add	x2, x2, #0x50
   40300:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   40304:	add	x1, x1, #0x3a8
   40308:	mov	x0, x20
   4030c:	bl	5420 <Perl_croak@plt>
   40310:	cbz	w23, 403ec <my_regprop@@Base+0x6128>
   40314:	ldr	x1, [x19, #24]
   40318:	cbz	x1, 40328 <my_regprop@@Base+0x6064>
   4031c:	mov	w2, #0xb                   	// #11
   40320:	mov	x0, x20
   40324:	bl	54b0 <Perl_save_pushptr@plt>
   40328:	ldr	x1, [x19, #160]
   4032c:	cbz	x1, 4033c <my_regprop@@Base+0x6078>
   40330:	mov	w2, #0xa                   	// #10
   40334:	mov	x0, x20
   40338:	bl	54b0 <Perl_save_pushptr@plt>
   4033c:	ldr	x1, [x19, #168]
   40340:	cbz	x1, 40350 <my_regprop@@Base+0x608c>
   40344:	mov	w2, #0xa                   	// #10
   40348:	mov	x0, x20
   4034c:	bl	54b0 <Perl_save_pushptr@plt>
   40350:	ldr	x0, [x19, #64]
   40354:	ldr	x1, [x19, #72]
   40358:	sub	x1, x0, x1
   4035c:	ldr	x0, [x19, #80]
   40360:	add	x0, x0, x1
   40364:	ldr	x1, [x19, #16]
   40368:	cmp	x0, x1
   4036c:	b.hi	403b4 <my_regprop@@Base+0x60f0>  // b.pmore
   40370:	ldr	x5, [x19, #8]
   40374:	subs	x4, x0, x5
   40378:	b.mi	403c4 <my_regprop@@Base+0x6100>  // b.first
   4037c:	sub	x7, x1, x0
   40380:	ldr	w2, [x19, #192]
   40384:	cmp	w2, #0x0
   40388:	cset	w3, ne  // ne = any
   4038c:	cmp	x0, x1
   40390:	csel	x0, x0, x1, ls  // ls = plast
   40394:	str	x0, [sp]
   40398:	mov	w6, w3
   4039c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   403a0:	add	x2, x2, #0x28
   403a4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   403a8:	add	x1, x1, #0x3a8
   403ac:	mov	x0, x20
   403b0:	bl	5420 <Perl_croak@plt>
   403b4:	ldr	x5, [x19, #8]
   403b8:	sub	x4, x1, x5
   403bc:	mov	x7, #0x0                   	// #0
   403c0:	b	40380 <my_regprop@@Base+0x60bc>
   403c4:	ldr	x6, [x19, #48]
   403c8:	ldr	x5, [x19, #56]
   403cc:	sub	w5, w5, w6
   403d0:	mov	w3, #0x2e94                	// #11924
   403d4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   403d8:	add	x2, x2, #0xfb8
   403dc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   403e0:	add	x1, x1, #0x870
   403e4:	mov	x0, x20
   403e8:	bl	5420 <Perl_croak@plt>
   403ec:	mov	w3, #0x0                   	// #0
   403f0:	mov	w2, #0x4b                  	// #75
   403f4:	mov	x1, x19
   403f8:	mov	x0, x20
   403fc:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   40400:	mov	x23, x0
   40404:	mov	w4, w22
   40408:	mov	w3, #0x1                   	// #1
   4040c:	add	x2, sp, #0xdc
   40410:	mov	x1, x19
   40414:	mov	x0, x20
   40418:	bl	520c0 <my_regprop@@Base+0x17dfc>
   4041c:	cbnz	x0, 404c4 <my_regprop@@Base+0x6200>
   40420:	ldr	w1, [sp, #220]
   40424:	ands	w1, w1, #0x60
   40428:	b.eq	40438 <my_regprop@@Base+0x6174>  // b.none
   4042c:	str	w1, [x21]
   40430:	mov	x24, x0
   40434:	b	40dcc <my_regprop@@Base+0x6b08>
   40438:	ldr	x21, [x19, #16]
   4043c:	ldr	x22, [x19, #8]
   40440:	ldr	x1, [x19, #24]
   40444:	cbz	x1, 40454 <my_regprop@@Base+0x6190>
   40448:	mov	w2, #0xb                   	// #11
   4044c:	mov	x0, x20
   40450:	bl	54b0 <Perl_save_pushptr@plt>
   40454:	ldr	x1, [x19, #160]
   40458:	cbz	x1, 40468 <my_regprop@@Base+0x61a4>
   4045c:	mov	w2, #0xa                   	// #10
   40460:	mov	x0, x20
   40464:	bl	54b0 <Perl_save_pushptr@plt>
   40468:	ldr	x1, [x19, #168]
   4046c:	cbz	x1, 4047c <my_regprop@@Base+0x61b8>
   40470:	mov	w2, #0xa                   	// #10
   40474:	mov	x0, x20
   40478:	bl	54b0 <Perl_save_pushptr@plt>
   4047c:	sub	x4, x21, x22
   40480:	cmp	x4, #0x7f
   40484:	b.le	404b8 <my_regprop@@Base+0x61f4>
   40488:	mov	x4, #0x75                  	// #117
   4048c:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   40490:	add	x6, x6, #0xfe0
   40494:	ldr	w0, [x19, #192]
   40498:	cmp	w0, #0x0
   4049c:	ldr	x5, [x19, #8]
   404a0:	cset	w3, ne  // ne = any
   404a4:	ldrsw	x2, [sp, #220]
   404a8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   404ac:	add	x1, x1, #0xfe0
   404b0:	mov	x0, x20
   404b4:	bl	5420 <Perl_croak@plt>
   404b8:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   404bc:	add	x6, x6, #0x20
   404c0:	b	40494 <my_regprop@@Base+0x61d0>
   404c4:	mov	w4, w22
   404c8:	mov	x3, x23
   404cc:	mov	x2, x24
   404d0:	mov	x1, x19
   404d4:	mov	x0, x20
   404d8:	bl	3b894 <my_regprop@@Base+0x15d0>
   404dc:	ldr	w0, [sp, #220]
   404e0:	tbz	w0, #0, 404f0 <my_regprop@@Base+0x622c>
   404e4:	ldr	w0, [x21]
   404e8:	orr	w0, w0, #0x1
   404ec:	str	w0, [x21]
   404f0:	ldr	x0, [x19, #64]
   404f4:	ldrb	w21, [x0]
   404f8:	mov	x1, x19
   404fc:	mov	x0, x20
   40500:	bl	269a4 <my_regexec@@Base+0x34b0>
   40504:	cmp	w21, #0x29
   40508:	b.ne	40260 <my_regprop@@Base+0x5f9c>  // b.any
   4050c:	mov	w2, #0x30                  	// #48
   40510:	mov	x1, x19
   40514:	mov	x0, x20
   40518:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4051c:	mov	x21, x0
   40520:	mov	w4, w22
   40524:	mov	x3, x0
   40528:	mov	x2, x25
   4052c:	mov	x1, x19
   40530:	mov	x0, x20
   40534:	bl	3b894 <my_regprop@@Base+0x15d0>
   40538:	cbz	x23, 4204c <my_regprop@@Base+0x7d88>
   4053c:	mov	w4, w22
   40540:	mov	x3, x21
   40544:	mov	x2, x23
   40548:	mov	x1, x19
   4054c:	mov	x0, x20
   40550:	bl	3b894 <my_regprop@@Base+0x15d0>
   40554:	add	x2, x23, #0x2
   40558:	mov	w4, w22
   4055c:	mov	x3, x21
   40560:	sbfx	x2, x2, #0, #62
   40564:	mov	x1, x19
   40568:	mov	x0, x20
   4056c:	bl	3b894 <my_regprop@@Base+0x15d0>
   40570:	b	40dcc <my_regprop@@Base+0x6b08>
   40574:	ldr	x5, [x19, #8]
   40578:	sub	x4, x1, x5
   4057c:	mov	x7, #0x0                   	// #0
   40580:	b	402dc <my_regprop@@Base+0x6018>
   40584:	ldr	x6, [x19, #48]
   40588:	ldr	x5, [x19, #56]
   4058c:	sub	w5, w5, w6
   40590:	mov	w3, #0x2ea8                	// #11944
   40594:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40598:	add	x2, x2, #0xfb8
   4059c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   405a0:	add	x1, x1, #0x870
   405a4:	mov	x0, x20
   405a8:	bl	5420 <Perl_croak@plt>
   405ac:	ldr	x1, [x19, #24]
   405b0:	cbz	x1, 405c0 <my_regprop@@Base+0x62fc>
   405b4:	mov	w2, #0xb                   	// #11
   405b8:	mov	x0, x20
   405bc:	bl	54b0 <Perl_save_pushptr@plt>
   405c0:	ldr	x1, [x19, #160]
   405c4:	cbz	x1, 405d4 <my_regprop@@Base+0x6310>
   405c8:	mov	w2, #0xa                   	// #10
   405cc:	mov	x0, x20
   405d0:	bl	54b0 <Perl_save_pushptr@plt>
   405d4:	ldr	x1, [x19, #168]
   405d8:	cbz	x1, 405e8 <my_regprop@@Base+0x6324>
   405dc:	mov	w2, #0xa                   	// #10
   405e0:	mov	x0, x20
   405e4:	bl	54b0 <Perl_save_pushptr@plt>
   405e8:	ldr	x0, [x19, #64]
   405ec:	ldr	x1, [x19, #72]
   405f0:	sub	x1, x0, x1
   405f4:	ldr	x0, [x19, #80]
   405f8:	add	x0, x0, x1
   405fc:	ldr	x1, [x19, #16]
   40600:	cmp	x0, x1
   40604:	b.hi	4064c <my_regprop@@Base+0x6388>  // b.pmore
   40608:	ldr	x5, [x19, #8]
   4060c:	subs	x4, x0, x5
   40610:	b.mi	4065c <my_regprop@@Base+0x6398>  // b.first
   40614:	sub	x7, x1, x0
   40618:	ldr	w2, [x19, #192]
   4061c:	cmp	w2, #0x0
   40620:	cset	w3, ne  // ne = any
   40624:	cmp	x0, x1
   40628:	csel	x0, x0, x1, ls  // ls = plast
   4062c:	str	x0, [sp]
   40630:	mov	w6, w3
   40634:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   40638:	add	x2, x2, #0x78
   4063c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   40640:	add	x1, x1, #0x3a8
   40644:	mov	x0, x20
   40648:	bl	5420 <Perl_croak@plt>
   4064c:	ldr	x5, [x19, #8]
   40650:	sub	x4, x1, x5
   40654:	mov	x7, #0x0                   	// #0
   40658:	b	40618 <my_regprop@@Base+0x6354>
   4065c:	ldr	x6, [x19, #48]
   40660:	ldr	x5, [x19, #56]
   40664:	sub	w5, w5, w6
   40668:	mov	w3, #0x2eaa                	// #11946
   4066c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40670:	add	x2, x2, #0xfb8
   40674:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40678:	add	x1, x1, #0x870
   4067c:	mov	x0, x20
   40680:	bl	5420 <Perl_croak@plt>
   40684:	mov	x0, #0x1                   	// #1
   40688:	add	x0, x26, x0
   4068c:	str	x0, [x19, #64]
   40690:	ldr	x1, [x19, #24]
   40694:	cbz	x1, 406a4 <my_regprop@@Base+0x63e0>
   40698:	mov	w2, #0xb                   	// #11
   4069c:	mov	x0, x20
   406a0:	bl	54b0 <Perl_save_pushptr@plt>
   406a4:	ldr	x1, [x19, #160]
   406a8:	cbz	x1, 406b8 <my_regprop@@Base+0x63f4>
   406ac:	mov	w2, #0xa                   	// #10
   406b0:	mov	x0, x20
   406b4:	bl	54b0 <Perl_save_pushptr@plt>
   406b8:	ldr	x1, [x19, #168]
   406bc:	cbz	x1, 406cc <my_regprop@@Base+0x6408>
   406c0:	mov	w2, #0xa                   	// #10
   406c4:	mov	x0, x20
   406c8:	bl	54b0 <Perl_save_pushptr@plt>
   406cc:	ldr	x0, [x19, #64]
   406d0:	ldr	x1, [x19, #72]
   406d4:	sub	x1, x0, x1
   406d8:	ldr	x0, [x19, #80]
   406dc:	add	x0, x0, x1
   406e0:	ldr	x1, [x19, #16]
   406e4:	cmp	x0, x1
   406e8:	b.hi	40738 <my_regprop@@Base+0x6474>  // b.pmore
   406ec:	ldr	x5, [x19, #8]
   406f0:	subs	x4, x0, x5
   406f4:	b.mi	40748 <my_regprop@@Base+0x6484>  // b.first
   406f8:	sub	x7, x1, x0
   406fc:	ldr	w2, [x19, #192]
   40700:	cmp	w2, #0x0
   40704:	cset	w3, ne  // ne = any
   40708:	cmp	x0, x1
   4070c:	csel	x0, x0, x1, ls  // ls = plast
   40710:	str	x0, [sp]
   40714:	mov	w6, w3
   40718:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4071c:	add	x2, x2, #0xb0
   40720:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   40724:	add	x1, x1, #0x3a8
   40728:	mov	x0, x20
   4072c:	bl	5420 <Perl_croak@plt>
   40730:	mov	x0, #0x0                   	// #0
   40734:	b	40688 <my_regprop@@Base+0x63c4>
   40738:	ldr	x5, [x19, #8]
   4073c:	sub	x4, x1, x5
   40740:	mov	x7, #0x0                   	// #0
   40744:	b	406fc <my_regprop@@Base+0x6438>
   40748:	ldr	x6, [x19, #48]
   4074c:	ldr	x5, [x19, #56]
   40750:	sub	w5, w5, w6
   40754:	mov	w3, #0x2ec1                	// #11969
   40758:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4075c:	add	x2, x2, #0xfb8
   40760:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40764:	add	x1, x1, #0x870
   40768:	mov	x0, x20
   4076c:	bl	5420 <Perl_croak@plt>
   40770:	ldr	x5, [sp, #152]
   40774:	ldr	w0, [sp, #160]
   40778:	add	w4, w0, #0x1
   4077c:	mov	x3, x21
   40780:	mov	x2, #0x0                   	// #0
   40784:	mov	x1, x19
   40788:	mov	x0, x20
   4078c:	bl	4a20c <my_regprop@@Base+0xff48>
   40790:	mov	x24, x0
   40794:	b	40dcc <my_regprop@@Base+0x6b08>
   40798:	sub	x26, x26, #0x1
   4079c:	str	x26, [x19, #64]
   407a0:	ldr	x1, [x19, #24]
   407a4:	cbz	x1, 407b4 <my_regprop@@Base+0x64f0>
   407a8:	mov	w2, #0xb                   	// #11
   407ac:	mov	x0, x20
   407b0:	bl	54b0 <Perl_save_pushptr@plt>
   407b4:	ldr	x1, [x19, #160]
   407b8:	cbz	x1, 407c8 <my_regprop@@Base+0x6504>
   407bc:	mov	w2, #0xa                   	// #10
   407c0:	mov	x0, x20
   407c4:	bl	54b0 <Perl_save_pushptr@plt>
   407c8:	ldr	x1, [x19, #168]
   407cc:	cbz	x1, 407dc <my_regprop@@Base+0x6518>
   407d0:	mov	w2, #0xa                   	// #10
   407d4:	mov	x0, x20
   407d8:	bl	54b0 <Perl_save_pushptr@plt>
   407dc:	ldr	x0, [x19, #64]
   407e0:	ldr	x1, [x19, #72]
   407e4:	sub	x1, x0, x1
   407e8:	ldr	x0, [x19, #80]
   407ec:	add	x0, x0, x1
   407f0:	ldr	x1, [x19, #16]
   407f4:	cmp	x0, x1
   407f8:	b.hi	40840 <my_regprop@@Base+0x657c>  // b.pmore
   407fc:	ldr	x5, [x19, #8]
   40800:	sub	x7, x1, x0
   40804:	subs	x4, x0, x5
   40808:	b.mi	40850 <my_regprop@@Base+0x658c>  // b.first
   4080c:	ldr	w2, [x19, #192]
   40810:	cmp	w2, #0x0
   40814:	cset	w3, ne  // ne = any
   40818:	cmp	x0, x1
   4081c:	csel	x0, x0, x1, ls  // ls = plast
   40820:	str	x0, [sp]
   40824:	mov	w6, w3
   40828:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4082c:	add	x2, x2, #0xd8
   40830:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   40834:	add	x1, x1, #0x3a8
   40838:	mov	x0, x20
   4083c:	bl	5420 <Perl_croak@plt>
   40840:	ldr	x5, [x19, #8]
   40844:	sub	x4, x1, x5
   40848:	mov	x7, #0x0                   	// #0
   4084c:	b	4080c <my_regprop@@Base+0x6548>
   40850:	ldr	x6, [x19, #48]
   40854:	ldr	x5, [x19, #56]
   40858:	sub	w5, w5, w6
   4085c:	mov	w3, #0x2ec8                	// #11976
   40860:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40864:	add	x2, x2, #0xfb8
   40868:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4086c:	add	x1, x1, #0x870
   40870:	mov	x0, x20
   40874:	bl	5420 <Perl_croak@plt>
   40878:	ldrb	w0, [x19, #385]
   4087c:	cbz	w0, 40978 <my_regprop@@Base+0x66b4>
   40880:	ldr	x0, [x19, #72]
   40884:	cbz	x0, 409b4 <my_regprop@@Base+0x66f0>
   40888:	sub	x26, x26, x0
   4088c:	ldr	x0, [x19, #80]
   40890:	add	x0, x0, x26
   40894:	ldr	x1, [x19, #8]
   40898:	sub	x0, x0, x1
   4089c:	ldr	x1, [x19, #136]
   408a0:	cmp	x0, x1
   408a4:	b.le	40978 <my_regprop@@Base+0x66b4>
   408a8:	ldr	x0, [x20, #224]
   408ac:	cbz	x0, 408d4 <my_regprop@@Base+0x6610>
   408b0:	ldr	x0, [x0, #64]
   408b4:	cmp	x0, #0x0
   408b8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   408bc:	ldr	x1, [x1, #3984]
   408c0:	ccmp	x0, x1, #0x4, ne  // ne = any
   408c4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   408c8:	ldr	x1, [x1, #3832]
   408cc:	ccmp	x0, x1, #0x4, ne  // ne = any
   408d0:	b.ne	409d4 <my_regprop@@Base+0x6710>  // b.any
   408d4:	ldr	w0, [x19, #192]
   408d8:	cmp	w0, #0x0
   408dc:	cset	w3, ne  // ne = any
   408e0:	ldr	x0, [x19, #64]
   408e4:	ldr	x1, [x19, #72]
   408e8:	sub	x1, x0, x1
   408ec:	ldr	x0, [x19, #80]
   408f0:	add	x0, x0, x1
   408f4:	ldr	x1, [x19, #16]
   408f8:	cmp	x0, x1
   408fc:	b.ls	40a1c <my_regprop@@Base+0x6758>  // b.plast
   40900:	ldr	x5, [x19, #8]
   40904:	sub	x4, x1, x5
   40908:	mov	x7, #0x0                   	// #0
   4090c:	cmp	x0, x1
   40910:	csel	x0, x0, x1, ls  // ls = plast
   40914:	str	x0, [sp]
   40918:	mov	w6, w3
   4091c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   40920:	add	x2, x2, #0xf0
   40924:	mov	w1, #0x14                  	// #20
   40928:	mov	x0, x20
   4092c:	bl	5150 <Perl_ck_warner@plt>
   40930:	ldr	x0, [x19, #72]
   40934:	cbz	x0, 40978 <my_regprop@@Base+0x66b4>
   40938:	ldr	x1, [x19, #64]
   4093c:	sub	x1, x1, x0
   40940:	ldr	x0, [x19, #80]
   40944:	add	x1, x0, x1
   40948:	ldr	x2, [x19, #8]
   4094c:	sub	x3, x1, x2
   40950:	ldr	x0, [x19, #136]
   40954:	cmp	x3, x0
   40958:	b.le	40978 <my_regprop@@Base+0x66b4>
   4095c:	ldr	x0, [x19, #16]
   40960:	cmp	x0, x1
   40964:	csel	x0, x0, x1, ls  // ls = plast
   40968:	cmp	x2, x0
   4096c:	csel	x0, x2, x0, hi  // hi = pmore
   40970:	sub	x0, x0, x2
   40974:	str	x0, [x19, #136]
   40978:	str	x28, [x19, #64]
   4097c:	mov	x1, x19
   40980:	mov	x0, x20
   40984:	bl	28254 <my_regexec@@Base+0x4d60>
   40988:	ldr	x0, [x19, #64]
   4098c:	ldrb	w1, [x0]
   40990:	cmp	w1, #0x3a
   40994:	b.eq	40a68 <my_regprop@@Base+0x67a4>  // b.none
   40998:	ldr	x1, [x19, #56]
   4099c:	cmp	x0, x1
   409a0:	b.cc	40a58 <my_regprop@@Base+0x6794>  // b.lo, b.ul, b.last
   409a4:	mov	w0, #0x10                  	// #16
   409a8:	str	w0, [x21]
   409ac:	mov	x24, #0x0                   	// #0
   409b0:	b	40dcc <my_regprop@@Base+0x6b08>
   409b4:	mov	x4, x26
   409b8:	mov	w3, #0x2ecd                	// #11981
   409bc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   409c0:	add	x2, x2, #0xfb8
   409c4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   409c8:	add	x1, x1, #0xab8
   409cc:	mov	x0, x20
   409d0:	bl	5420 <Perl_croak@plt>
   409d4:	ldrb	w0, [x0, #13]
   409d8:	tbz	w0, #1, 408d4 <my_regprop@@Base+0x6610>
   409dc:	ldr	x1, [x19, #24]
   409e0:	cbz	x1, 409f0 <my_regprop@@Base+0x672c>
   409e4:	mov	w2, #0xb                   	// #11
   409e8:	mov	x0, x20
   409ec:	bl	54b0 <Perl_save_pushptr@plt>
   409f0:	ldr	x1, [x19, #160]
   409f4:	cbz	x1, 40a04 <my_regprop@@Base+0x6740>
   409f8:	mov	w2, #0xa                   	// #10
   409fc:	mov	x0, x20
   40a00:	bl	54b0 <Perl_save_pushptr@plt>
   40a04:	ldr	x1, [x19, #168]
   40a08:	cbz	x1, 408d4 <my_regprop@@Base+0x6610>
   40a0c:	mov	w2, #0xa                   	// #10
   40a10:	mov	x0, x20
   40a14:	bl	54b0 <Perl_save_pushptr@plt>
   40a18:	b	408d4 <my_regprop@@Base+0x6610>
   40a1c:	ldr	x5, [x19, #8]
   40a20:	subs	x4, x0, x5
   40a24:	b.mi	40a30 <my_regprop@@Base+0x676c>  // b.first
   40a28:	sub	x7, x1, x0
   40a2c:	b	4090c <my_regprop@@Base+0x6648>
   40a30:	ldr	x6, [x19, #48]
   40a34:	ldr	x5, [x19, #56]
   40a38:	sub	w5, w5, w6
   40a3c:	mov	w3, #0x2ecd                	// #11981
   40a40:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40a44:	add	x2, x2, #0xfb8
   40a48:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40a4c:	add	x1, x1, #0x870
   40a50:	mov	x0, x20
   40a54:	bl	5420 <Perl_croak@plt>
   40a58:	mov	x1, x19
   40a5c:	mov	x0, x20
   40a60:	bl	269a4 <my_regexec@@Base+0x34b0>
   40a64:	b	409a4 <my_regprop@@Base+0x66e0>
   40a68:	mov	x1, x19
   40a6c:	mov	x0, x20
   40a70:	bl	269a4 <my_regexec@@Base+0x34b0>
   40a74:	mov	w26, #0x0                   	// #0
   40a78:	str	wzr, [sp, #192]
   40a7c:	str	xzr, [sp, #176]
   40a80:	mov	w23, #0x3a                  	// #58
   40a84:	b	40d8c <my_regprop@@Base+0x6ac8>
   40a88:	mov	w26, #0x0                   	// #0
   40a8c:	b	3e9c4 <my_regprop@@Base+0x4700>
   40a90:	ldr	x1, [x19, #72]
   40a94:	cbz	x1, 40b98 <my_regprop@@Base+0x68d4>
   40a98:	add	x0, x25, #0x1
   40a9c:	sub	x1, x0, x1
   40aa0:	ldr	x0, [x19, #80]
   40aa4:	add	x0, x0, x1
   40aa8:	ldr	x1, [x19, #8]
   40aac:	sub	x0, x0, x1
   40ab0:	ldr	x1, [x19, #136]
   40ab4:	cmp	x0, x1
   40ab8:	b.le	3c90c <my_regprop@@Base+0x2648>
   40abc:	ldr	x0, [x20, #224]
   40ac0:	cbz	x0, 40ae8 <my_regprop@@Base+0x6824>
   40ac4:	ldr	x0, [x0, #64]
   40ac8:	cmp	x0, #0x0
   40acc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   40ad0:	ldr	x1, [x1, #3984]
   40ad4:	ccmp	x0, x1, #0x4, ne  // ne = any
   40ad8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   40adc:	ldr	x1, [x1, #3832]
   40ae0:	ccmp	x0, x1, #0x4, ne  // ne = any
   40ae4:	b.ne	40bb8 <my_regprop@@Base+0x68f4>  // b.any
   40ae8:	ldr	w0, [x19, #192]
   40aec:	cmp	w0, #0x0
   40af0:	cset	w3, ne  // ne = any
   40af4:	ldr	x0, [x19, #64]
   40af8:	add	x0, x0, #0x1
   40afc:	ldr	x1, [x19, #72]
   40b00:	sub	x1, x0, x1
   40b04:	ldr	x0, [x19, #80]
   40b08:	add	x0, x0, x1
   40b0c:	ldr	x1, [x19, #16]
   40b10:	cmp	x0, x1
   40b14:	b.ls	40c08 <my_regprop@@Base+0x6944>  // b.plast
   40b18:	ldr	x5, [x19, #8]
   40b1c:	sub	x4, x1, x5
   40b20:	mov	x7, #0x0                   	// #0
   40b24:	cmp	x0, x1
   40b28:	csel	x0, x0, x1, ls  // ls = plast
   40b2c:	str	x0, [sp]
   40b30:	mov	w6, w3
   40b34:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   40b38:	add	x2, x2, #0x150
   40b3c:	mov	w1, #0x1402                	// #5122
   40b40:	mov	x0, x20
   40b44:	bl	5630 <Perl_ck_warner_d@plt>
   40b48:	ldr	x1, [x19, #72]
   40b4c:	cbz	x1, 3c90c <my_regprop@@Base+0x2648>
   40b50:	ldr	x0, [x19, #64]
   40b54:	add	x0, x0, #0x1
   40b58:	sub	x0, x0, x1
   40b5c:	ldr	x1, [x19, #80]
   40b60:	add	x0, x1, x0
   40b64:	ldr	x2, [x19, #8]
   40b68:	sub	x3, x0, x2
   40b6c:	ldr	x1, [x19, #136]
   40b70:	cmp	x3, x1
   40b74:	b.le	3c90c <my_regprop@@Base+0x2648>
   40b78:	ldr	x1, [x19, #16]
   40b7c:	cmp	x1, x0
   40b80:	csel	x0, x1, x0, ls  // ls = plast
   40b84:	cmp	x2, x0
   40b88:	csel	x0, x2, x0, hi  // hi = pmore
   40b8c:	sub	x0, x0, x2
   40b90:	str	x0, [x19, #136]
   40b94:	b	3c90c <my_regprop@@Base+0x2648>
   40b98:	add	x4, x25, #0x1
   40b9c:	mov	w3, #0x2ee2                	// #12002
   40ba0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40ba4:	add	x2, x2, #0xfb8
   40ba8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40bac:	add	x1, x1, #0xab8
   40bb0:	mov	x0, x20
   40bb4:	bl	5420 <Perl_croak@plt>
   40bb8:	ldrb	w1, [x0, #8]
   40bbc:	tbnz	w1, #5, 40bc8 <my_regprop@@Base+0x6904>
   40bc0:	ldrb	w0, [x0, #13]
   40bc4:	tbz	w0, #1, 40ae8 <my_regprop@@Base+0x6824>
   40bc8:	ldr	x1, [x19, #24]
   40bcc:	cbz	x1, 40bdc <my_regprop@@Base+0x6918>
   40bd0:	mov	w2, #0xb                   	// #11
   40bd4:	mov	x0, x20
   40bd8:	bl	54b0 <Perl_save_pushptr@plt>
   40bdc:	ldr	x1, [x19, #160]
   40be0:	cbz	x1, 40bf0 <my_regprop@@Base+0x692c>
   40be4:	mov	w2, #0xa                   	// #10
   40be8:	mov	x0, x20
   40bec:	bl	54b0 <Perl_save_pushptr@plt>
   40bf0:	ldr	x1, [x19, #168]
   40bf4:	cbz	x1, 40ae8 <my_regprop@@Base+0x6824>
   40bf8:	mov	w2, #0xa                   	// #10
   40bfc:	mov	x0, x20
   40c00:	bl	54b0 <Perl_save_pushptr@plt>
   40c04:	b	40ae8 <my_regprop@@Base+0x6824>
   40c08:	ldr	x5, [x19, #8]
   40c0c:	subs	x4, x0, x5
   40c10:	b.mi	40c1c <my_regprop@@Base+0x6958>  // b.first
   40c14:	sub	x7, x1, x0
   40c18:	b	40b24 <my_regprop@@Base+0x6860>
   40c1c:	ldr	x6, [x19, #48]
   40c20:	ldr	x5, [x19, #56]
   40c24:	sub	w5, w5, w6
   40c28:	mov	w3, #0x2ee2                	// #12002
   40c2c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   40c30:	add	x2, x2, #0xfb8
   40c34:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   40c38:	add	x1, x1, #0x870
   40c3c:	mov	x0, x20
   40c40:	bl	5420 <Perl_croak@plt>
   40c44:	mov	w0, #0xa                   	// #10
   40c48:	str	w0, [x19, #176]
   40c4c:	mov	x1, #0x8                   	// #8
   40c50:	mov	x0, #0xa                   	// #10
   40c54:	bl	54c0 <Perl_safesyscalloc@plt>
   40c58:	str	x0, [x19, #160]
   40c5c:	mov	x1, #0x1                   	// #1
   40c60:	str	x1, [x0]
   40c64:	mov	x1, #0x8                   	// #8
   40c68:	ldrsw	x0, [x19, #176]
   40c6c:	bl	54c0 <Perl_safesyscalloc@plt>
   40c70:	str	x0, [x19, #168]
   40c74:	b	3c940 <my_regprop@@Base+0x267c>
   40c78:	lsl	w1, w22, #1
   40c7c:	str	w1, [x19, #176]
   40c80:	sbfiz	x1, x1, #3, #32
   40c84:	ldr	x0, [x19, #160]
   40c88:	bl	5670 <Perl_safesysrealloc@plt>
   40c8c:	str	x0, [x19, #160]
   40c90:	sbfiz	x24, x22, #3, #32
   40c94:	adds	x0, x0, x24
   40c98:	b.eq	40ce4 <my_regprop@@Base+0x6a20>  // b.none
   40c9c:	ldr	w2, [x19, #176]
   40ca0:	sub	w2, w2, w22
   40ca4:	sbfiz	x2, x2, #3, #32
   40ca8:	mov	w1, #0x0                   	// #0
   40cac:	bl	51f0 <memset@plt>
   40cb0:	ldrsw	x1, [x19, #176]
   40cb4:	lsl	x1, x1, #3
   40cb8:	ldr	x0, [x19, #168]
   40cbc:	bl	5670 <Perl_safesysrealloc@plt>
   40cc0:	str	x0, [x19, #168]
   40cc4:	adds	x0, x0, x24
   40cc8:	b.eq	40d08 <my_regprop@@Base+0x6a44>  // b.none
   40ccc:	ldr	w2, [x19, #176]
   40cd0:	sub	w2, w2, w22
   40cd4:	sbfiz	x2, x2, #3, #32
   40cd8:	mov	w1, #0x0                   	// #0
   40cdc:	bl	51f0 <memset@plt>
   40ce0:	b	3c940 <my_regprop@@Base+0x267c>
   40ce4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   40ce8:	add	x3, x3, #0xc10
   40cec:	add	x3, x3, #0x848
   40cf0:	mov	w2, #0x2f0f                	// #12047
   40cf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   40cf8:	add	x1, x1, #0xfb8
   40cfc:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   40d00:	add	x0, x0, #0x1f0
   40d04:	bl	58e0 <__assert_fail@plt>
   40d08:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   40d0c:	add	x3, x3, #0xc10
   40d10:	add	x3, x3, #0x848
   40d14:	mov	w2, #0x2f14                	// #12052
   40d18:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   40d1c:	add	x1, x1, #0xfb8
   40d20:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   40d24:	add	x0, x0, #0x228
   40d28:	bl	58e0 <__assert_fail@plt>
   40d2c:	ldr	w0, [sp, #160]
   40d30:	lsl	w0, w0, #1
   40d34:	ldr	x7, [sp, #176]
   40d38:	ldrsw	x6, [sp, #192]
   40d3c:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   40d40:	add	x5, x5, #0x20
   40d44:	add	w4, w0, #0x1
   40d48:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   40d4c:	add	x3, x3, #0xe38
   40d50:	mov	w2, #0x16                  	// #22
   40d54:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   40d58:	add	x1, x1, #0x260
   40d5c:	mov	x0, x20
   40d60:	bl	50e0 <Perl_re_printf@plt>
   40d64:	b	3c998 <my_regprop@@Base+0x26d4>
   40d68:	ubfx	x2, x22, #2, #32
   40d6c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   40d70:	add	x1, x1, #0x888
   40d74:	mov	x0, x20
   40d78:	bl	5420 <Perl_croak@plt>
   40d7c:	mov	w26, w23
   40d80:	str	w23, [sp, #192]
   40d84:	mov	w27, #0x0                   	// #0
   40d88:	str	xzr, [sp, #176]
   40d8c:	ldr	x0, [x19, #64]
   40d90:	str	x0, [sp, #184]
   40d94:	ldr	w0, [sp, #160]
   40d98:	add	w25, w0, #0x1
   40d9c:	mov	w4, w25
   40da0:	mov	w3, #0x1                   	// #1
   40da4:	add	x2, sp, #0xdc
   40da8:	mov	x1, x19
   40dac:	mov	x0, x20
   40db0:	bl	520c0 <my_regprop@@Base+0x17dfc>
   40db4:	mov	x24, x0
   40db8:	cbnz	x0, 40ee0 <my_regprop@@Base+0x6c1c>
   40dbc:	ldr	w0, [sp, #220]
   40dc0:	ands	w0, w0, #0x60
   40dc4:	b.eq	40e50 <my_regprop@@Base+0x6b8c>  // b.none
   40dc8:	str	w0, [x21]
   40dcc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   40dd0:	ldr	x0, [x0, #3920]
   40dd4:	ldr	x1, [sp, #248]
   40dd8:	ldr	x0, [x0]
   40ddc:	eor	x0, x1, x0
   40de0:	cbnz	x0, 42284 <my_regprop@@Base+0x7fc0>
   40de4:	mov	x0, x24
   40de8:	ldp	x19, x20, [sp, #64]
   40dec:	ldp	x21, x22, [sp, #80]
   40df0:	ldp	x23, x24, [sp, #96]
   40df4:	ldp	x25, x26, [sp, #112]
   40df8:	ldp	x27, x28, [sp, #128]
   40dfc:	ldp	x29, x30, [sp, #48]
   40e00:	add	sp, sp, #0x100
   40e04:	ret
   40e08:	mov	w26, #0x0                   	// #0
   40e0c:	mov	w27, #0x0                   	// #0
   40e10:	str	wzr, [sp, #192]
   40e14:	str	xzr, [sp, #176]
   40e18:	mov	w23, #0x3e                  	// #62
   40e1c:	b	40d8c <my_regprop@@Base+0x6ac8>
   40e20:	mov	w26, #0x0                   	// #0
   40e24:	mov	w27, #0x0                   	// #0
   40e28:	str	wzr, [sp, #192]
   40e2c:	str	xzr, [sp, #176]
   40e30:	mov	w23, #0x3a                  	// #58
   40e34:	b	40d8c <my_regprop@@Base+0x6ac8>
   40e38:	mov	w26, #0x0                   	// #0
   40e3c:	mov	w27, #0x0                   	// #0
   40e40:	str	wzr, [sp, #192]
   40e44:	str	xzr, [sp, #176]
   40e48:	mov	w23, #0x3a                  	// #58
   40e4c:	b	40d8c <my_regprop@@Base+0x6ac8>
   40e50:	ldr	x21, [x19, #16]
   40e54:	ldr	x0, [x19, #8]
   40e58:	sub	x21, x21, x0
   40e5c:	ldr	x1, [x19, #24]
   40e60:	cbz	x1, 40e70 <my_regprop@@Base+0x6bac>
   40e64:	mov	w2, #0xb                   	// #11
   40e68:	mov	x0, x20
   40e6c:	bl	54b0 <Perl_save_pushptr@plt>
   40e70:	ldr	x1, [x19, #160]
   40e74:	cbz	x1, 40e84 <my_regprop@@Base+0x6bc0>
   40e78:	mov	w2, #0xa                   	// #10
   40e7c:	mov	x0, x20
   40e80:	bl	54b0 <Perl_save_pushptr@plt>
   40e84:	ldr	x1, [x19, #168]
   40e88:	cbz	x1, 40e98 <my_regprop@@Base+0x6bd4>
   40e8c:	mov	w2, #0xa                   	// #10
   40e90:	mov	x0, x20
   40e94:	bl	54b0 <Perl_save_pushptr@plt>
   40e98:	cmp	x21, #0x7f
   40e9c:	b.le	40ed4 <my_regprop@@Base+0x6c10>
   40ea0:	mov	x21, #0x75                  	// #117
   40ea4:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   40ea8:	add	x6, x6, #0xfe0
   40eac:	ldr	w0, [x19, #192]
   40eb0:	cmp	w0, #0x0
   40eb4:	ldr	x5, [x19, #8]
   40eb8:	mov	x4, x21
   40ebc:	cset	w3, ne  // ne = any
   40ec0:	ldrsw	x2, [sp, #220]
   40ec4:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   40ec8:	add	x1, x1, #0xfe0
   40ecc:	mov	x0, x20
   40ed0:	bl	5420 <Perl_croak@plt>
   40ed4:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   40ed8:	add	x6, x6, #0x20
   40edc:	b	40eac <my_regprop@@Base+0x6be8>
   40ee0:	ldr	x0, [x19, #64]
   40ee4:	ldrb	w0, [x0]
   40ee8:	cmp	w0, #0x7c
   40eec:	b.eq	40f10 <my_regprop@@Base+0x6c4c>  // b.none
   40ef0:	str	wzr, [sp, #204]
   40ef4:	cmp	w23, #0x3a
   40ef8:	b.eq	41020 <my_regprop@@Base+0x6d5c>  // b.none
   40efc:	cbnz	w27, 41048 <my_regprop@@Base+0x6d84>
   40f00:	cmp	w23, #0x3f
   40f04:	b.eq	42144 <my_regprop@@Base+0x7e80>  // b.none
   40f08:	str	x24, [sp, #176]
   40f0c:	b	41060 <my_regprop@@Base+0x6d9c>
   40f10:	ldrb	w0, [x19, #388]
   40f14:	str	w0, [sp, #204]
   40f18:	cbz	w0, 40f38 <my_regprop@@Base+0x6c74>
   40f1c:	mov	w4, w25
   40f20:	mov	x3, x24
   40f24:	mov	w2, #0x47                  	// #71
   40f28:	mov	x1, x19
   40f2c:	mov	x0, x20
   40f30:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   40f34:	b	40efc <my_regprop@@Base+0x6c38>
   40f38:	mov	w4, w25
   40f3c:	mov	x3, x24
   40f40:	mov	w2, #0x22                  	// #34
   40f44:	mov	x1, x19
   40f48:	mov	x0, x20
   40f4c:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   40f50:	ldr	w0, [x20, #2368]
   40f54:	tbnz	w0, #20, 40f60 <my_regprop@@Base+0x6c9c>
   40f58:	ldr	x0, [sp, #224]
   40f5c:	tbz	w0, #18, 40f7c <my_regprop@@Base+0x6cb8>
   40f60:	cmp	w23, #0x0
   40f64:	cset	w3, ne  // ne = any
   40f68:	mov	w2, w24
   40f6c:	mov	w1, #0x2f43                	// #12099
   40f70:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   40f74:	add	x0, x0, #0x8
   40f78:	bl	5010 <Perl_warn_nocontext@plt>
   40f7c:	lsl	x2, x24, #2
   40f80:	tbnz	x24, #61, 40ff8 <my_regprop@@Base+0x6d34>
   40f84:	ldr	x0, [x19, #40]
   40f88:	ldr	x0, [x0, #8]
   40f8c:	lsl	x2, x2, #1
   40f90:	cmp	w23, #0x0
   40f94:	cset	w1, ne  // ne = any
   40f98:	str	w1, [x0, x2]
   40f9c:	ldr	w0, [x20, #2368]
   40fa0:	tbnz	w0, #20, 40fac <my_regprop@@Base+0x6ce8>
   40fa4:	ldr	x0, [sp, #224]
   40fa8:	tbz	w0, #18, 40fcc <my_regprop@@Base+0x6d08>
   40fac:	ldr	x3, [x19, #48]
   40fb0:	ldr	w0, [sp, #184]
   40fb4:	sub	w3, w0, w3
   40fb8:	mov	w2, w24
   40fbc:	mov	w1, #0x2f44                	// #12100
   40fc0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   40fc4:	add	x0, x0, #0xf30
   40fc8:	bl	5010 <Perl_warn_nocontext@plt>
   40fcc:	tbnz	x24, #63, 4100c <my_regprop@@Base+0x6d48>
   40fd0:	ldr	x0, [x19, #40]
   40fd4:	ldr	x0, [x0, #8]
   40fd8:	add	x0, x0, x24, lsl #3
   40fdc:	ldr	x1, [x19, #48]
   40fe0:	ldr	x2, [sp, #184]
   40fe4:	sub	x1, x2, x1
   40fe8:	stur	w1, [x0, #-4]
   40fec:	mov	w0, #0x1                   	// #1
   40ff0:	str	w0, [sp, #204]
   40ff4:	b	40efc <my_regprop@@Base+0x6c38>
   40ff8:	ubfx	x2, x2, #2, #32
   40ffc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41000:	add	x1, x1, #0x888
   41004:	mov	x0, x20
   41008:	bl	5420 <Perl_croak@plt>
   4100c:	mov	w2, w24
   41010:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   41014:	add	x1, x1, #0xf58
   41018:	mov	x0, x20
   4101c:	bl	5420 <Perl_croak@plt>
   41020:	ldr	w0, [sp, #220]
   41024:	and	w1, w0, #0x2
   41028:	ldr	w0, [x21]
   4102c:	orr	w0, w0, w1
   41030:	str	w0, [x21]
   41034:	cbnz	w27, 41044 <my_regprop@@Base+0x6d80>
   41038:	str	w27, [sp, #204]
   4103c:	str	x24, [sp, #176]
   41040:	b	41060 <my_regprop@@Base+0x6d9c>
   41044:	str	wzr, [sp, #204]
   41048:	mov	w4, w25
   4104c:	mov	x3, x24
   41050:	ldr	x2, [sp, #176]
   41054:	mov	x1, x19
   41058:	mov	x0, x20
   4105c:	bl	3b894 <my_regprop@@Base+0x15d0>
   41060:	ldr	w0, [sp, #220]
   41064:	mov	w1, #0xd                   	// #13
   41068:	and	w1, w0, w1
   4106c:	ldr	w0, [x21]
   41070:	orr	w0, w0, w1
   41074:	str	w0, [x21]
   41078:	ldr	x0, [x19, #64]
   4107c:	ldrb	w0, [x0]
   41080:	cmp	w0, #0x7c
   41084:	b.ne	41230 <my_regprop@@Base+0x6f6c>  // b.any
   41088:	mov	w27, w26
   4108c:	str	xzr, [sp, #168]
   41090:	add	x0, sp, #0xdc
   41094:	str	x0, [sp, #144]
   41098:	mov	w28, #0xd                   	// #13
   4109c:	b	41140 <my_regprop@@Base+0x6e7c>
   410a0:	mov	w3, #0x0                   	// #0
   410a4:	mov	w2, #0x46                  	// #70
   410a8:	mov	x1, x19
   410ac:	mov	x0, x20
   410b0:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   410b4:	str	x0, [sp, #168]
   410b8:	add	x2, x24, #0x2
   410bc:	mov	w4, w25
   410c0:	mov	x3, x0
   410c4:	sbfx	x2, x2, #0, #62
   410c8:	mov	x1, x19
   410cc:	mov	x0, x20
   410d0:	bl	3b894 <my_regprop@@Base+0x15d0>
   410d4:	b	41148 <my_regprop@@Base+0x6e84>
   410d8:	mov	w4, w25
   410dc:	mov	w3, #0x0                   	// #0
   410e0:	ldr	x2, [sp, #144]
   410e4:	mov	x1, x19
   410e8:	mov	x0, x20
   410ec:	bl	520c0 <my_regprop@@Base+0x17dfc>
   410f0:	mov	x22, x0
   410f4:	cbz	x0, 4116c <my_regprop@@Base+0x6ea8>
   410f8:	mov	w4, w25
   410fc:	mov	x3, x0
   41100:	mov	x2, x24
   41104:	mov	x1, x19
   41108:	mov	x0, x20
   4110c:	bl	3b894 <my_regprop@@Base+0x15d0>
   41110:	and	w0, w0, #0xff
   41114:	cbz	w0, 41214 <my_regprop@@Base+0x6f50>
   41118:	ldr	w0, [sp, #220]
   4111c:	and	w1, w0, w28
   41120:	ldr	w0, [x21]
   41124:	orr	w0, w0, w1
   41128:	str	w0, [x21]
   4112c:	ldr	x0, [x19, #64]
   41130:	ldrb	w0, [x0]
   41134:	cmp	w0, #0x7c
   41138:	b.ne	4123c <my_regprop@@Base+0x6f78>  // b.any
   4113c:	mov	x24, x22
   41140:	ldrb	w0, [x19, #388]
   41144:	cbnz	w0, 410a0 <my_regprop@@Base+0x6ddc>
   41148:	mov	x1, x19
   4114c:	mov	x0, x20
   41150:	bl	269a4 <my_regexec@@Base+0x34b0>
   41154:	cbz	w26, 410d8 <my_regprop@@Base+0x6e14>
   41158:	ldr	w0, [x19, #144]
   4115c:	cmp	w27, w0
   41160:	csel	w27, w27, w0, ge  // ge = tcont
   41164:	str	w26, [x19, #144]
   41168:	b	410d8 <my_regprop@@Base+0x6e14>
   4116c:	ldr	w0, [sp, #220]
   41170:	ands	w0, w0, #0x60
   41174:	b.eq	41184 <my_regprop@@Base+0x6ec0>  // b.none
   41178:	str	w0, [x21]
   4117c:	mov	x24, x22
   41180:	b	40dcc <my_regprop@@Base+0x6b08>
   41184:	ldr	x21, [x19, #16]
   41188:	ldr	x0, [x19, #8]
   4118c:	sub	x21, x21, x0
   41190:	ldr	x1, [x19, #24]
   41194:	cbz	x1, 411a4 <my_regprop@@Base+0x6ee0>
   41198:	mov	w2, #0xb                   	// #11
   4119c:	mov	x0, x20
   411a0:	bl	54b0 <Perl_save_pushptr@plt>
   411a4:	ldr	x1, [x19, #160]
   411a8:	cbz	x1, 411b8 <my_regprop@@Base+0x6ef4>
   411ac:	mov	w2, #0xa                   	// #10
   411b0:	mov	x0, x20
   411b4:	bl	54b0 <Perl_save_pushptr@plt>
   411b8:	ldr	x1, [x19, #168]
   411bc:	cbz	x1, 411cc <my_regprop@@Base+0x6f08>
   411c0:	mov	w2, #0xa                   	// #10
   411c4:	mov	x0, x20
   411c8:	bl	54b0 <Perl_save_pushptr@plt>
   411cc:	cmp	x21, #0x7f
   411d0:	b.le	41208 <my_regprop@@Base+0x6f44>
   411d4:	mov	x21, #0x75                  	// #117
   411d8:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   411dc:	add	x6, x6, #0xfe0
   411e0:	ldr	w0, [x19, #192]
   411e4:	cmp	w0, #0x0
   411e8:	ldr	x5, [x19, #8]
   411ec:	mov	x4, x21
   411f0:	cset	w3, ne  // ne = any
   411f4:	ldrsw	x2, [sp, #220]
   411f8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   411fc:	add	x1, x1, #0xfe0
   41200:	mov	x0, x20
   41204:	bl	5420 <Perl_croak@plt>
   41208:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4120c:	add	x6, x6, #0x20
   41210:	b	411e0 <my_regprop@@Base+0x6f1c>
   41214:	mov	w0, #0x1                   	// #1
   41218:	strb	w0, [x19, #388]
   4121c:	ldr	w0, [x21]
   41220:	orr	w0, w0, #0x20
   41224:	str	w0, [x21]
   41228:	mov	x24, #0x0                   	// #0
   4122c:	b	40dcc <my_regprop@@Base+0x6b08>
   41230:	mov	w27, w26
   41234:	mov	x22, x24
   41238:	str	xzr, [sp, #168]
   4123c:	cmp	w23, #0x3a
   41240:	ldr	w0, [sp, #204]
   41244:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   41248:	b.ne	4132c <my_regprop@@Base+0x7068>  // b.any
   4124c:	ldr	w0, [x19]
   41250:	and	w0, w0, #0x40
   41254:	ldr	w1, [sp, #164]
   41258:	orr	w0, w0, w1
   4125c:	str	w0, [x19]
   41260:	tst	x0, #0x380
   41264:	b.eq	41d28 <my_regprop@@Base+0x7a64>  // b.none
   41268:	ldr	x0, [x19, #64]
   4126c:	ldr	x1, [x19, #56]
   41270:	cmp	x0, x1
   41274:	b.cs	41284 <my_regprop@@Base+0x6fc0>  // b.hs, b.nlast
   41278:	ldrb	w0, [x0]
   4127c:	cmp	w0, #0x29
   41280:	b.eq	41d78 <my_regprop@@Base+0x7ab4>  // b.none
   41284:	ldr	x0, [sp, #152]
   41288:	str	x0, [x19, #64]
   4128c:	ldr	x1, [x19, #24]
   41290:	cbz	x1, 412a0 <my_regprop@@Base+0x6fdc>
   41294:	mov	w2, #0xb                   	// #11
   41298:	mov	x0, x20
   4129c:	bl	54b0 <Perl_save_pushptr@plt>
   412a0:	ldr	x1, [x19, #160]
   412a4:	cbz	x1, 412b4 <my_regprop@@Base+0x6ff0>
   412a8:	mov	w2, #0xa                   	// #10
   412ac:	mov	x0, x20
   412b0:	bl	54b0 <Perl_save_pushptr@plt>
   412b4:	ldr	x1, [x19, #168]
   412b8:	cbz	x1, 412c8 <my_regprop@@Base+0x7004>
   412bc:	mov	w2, #0xa                   	// #10
   412c0:	mov	x0, x20
   412c4:	bl	54b0 <Perl_save_pushptr@plt>
   412c8:	ldr	x0, [x19, #64]
   412cc:	ldr	x1, [x19, #72]
   412d0:	sub	x1, x0, x1
   412d4:	ldr	x0, [x19, #80]
   412d8:	add	x0, x0, x1
   412dc:	ldr	x1, [x19, #16]
   412e0:	cmp	x0, x1
   412e4:	b.hi	41d40 <my_regprop@@Base+0x7a7c>  // b.pmore
   412e8:	ldr	x5, [x19, #8]
   412ec:	sub	x7, x1, x0
   412f0:	subs	x4, x0, x5
   412f4:	b.mi	41d50 <my_regprop@@Base+0x7a8c>  // b.first
   412f8:	ldr	w2, [x19, #192]
   412fc:	cmp	w2, #0x0
   41300:	cset	w3, ne  // ne = any
   41304:	cmp	x0, x1
   41308:	csel	x0, x0, x1, ls  // ls = plast
   4130c:	str	x0, [sp]
   41310:	mov	w6, w3
   41314:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   41318:	add	x2, x2, #0x788
   4131c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   41320:	add	x1, x1, #0x3a8
   41324:	mov	x0, x20
   41328:	bl	5420 <Perl_croak@plt>
   4132c:	cmp	w23, #0x3a
   41330:	b.eq	415a4 <my_regprop@@Base+0x72e0>  // b.none
   41334:	b.gt	42178 <my_regprop@@Base+0x7eb4>
   41338:	cmp	w23, #0x2
   4133c:	b.gt	413ac <my_regprop@@Base+0x70e8>
   41340:	cmp	w23, #0x0
   41344:	b.gt	415bc <my_regprop@@Base+0x72f8>
   41348:	cbnz	w23, 413dc <my_regprop@@Base+0x7118>
   4134c:	mov	w2, #0x0                   	// #0
   41350:	mov	x1, x19
   41354:	mov	x0, x20
   41358:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4135c:	str	x0, [sp, #168]
   41360:	ldr	x0, [x19, #184]
   41364:	cbnz	x0, 4170c <my_regprop@@Base+0x7448>
   41368:	ldr	x0, [x19, #96]
   4136c:	ldr	x1, [sp, #168]
   41370:	add	x0, x0, x1, lsl #2
   41374:	str	x0, [x19, #184]
   41378:	ldr	x0, [x19, #168]
   4137c:	cbz	x0, 413dc <my_regprop@@Base+0x7118>
   41380:	ldr	w0, [x20, #2368]
   41384:	tbnz	w0, #20, 41730 <my_regprop@@Base+0x746c>
   41388:	ldr	x1, [sp, #224]
   4138c:	mov	x0, #0x2                   	// #2
   41390:	movk	x0, #0x10, lsl #16
   41394:	bics	xzr, x0, x1
   41398:	b.eq	41730 <my_regprop@@Base+0x746c>  // b.none
   4139c:	ldr	x0, [x19, #168]
   413a0:	ldr	x1, [sp, #168]
   413a4:	str	x1, [x0]
   413a8:	b	413dc <my_regprop@@Base+0x7118>
   413ac:	cmp	w23, #0x21
   413b0:	b.eq	413bc <my_regprop@@Base+0x70f8>  // b.none
   413b4:	cmp	w23, #0x2c
   413b8:	b.ne	413dc <my_regprop@@Base+0x7118>  // b.any
   413bc:	ldr	w0, [x21]
   413c0:	and	w0, w0, #0xfffffffe
   413c4:	str	w0, [x21]
   413c8:	mov	w2, #0x1                   	// #1
   413cc:	mov	x1, x19
   413d0:	mov	x0, x20
   413d4:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   413d8:	str	x0, [sp, #168]
   413dc:	ldr	w0, [x20, #2368]
   413e0:	tbnz	w0, #20, 413ec <my_regprop@@Base+0x7128>
   413e4:	ldr	x0, [sp, #224]
   413e8:	tbz	w0, #0, 414a0 <my_regprop@@Base+0x71dc>
   413ec:	ldr	w0, [x20, #2368]
   413f0:	tbnz	w0, #20, 413fc <my_regprop@@Base+0x7138>
   413f4:	ldr	x0, [sp, #224]
   413f8:	tbz	w0, #0, 414a0 <my_regprop@@Base+0x71dc>
   413fc:	ldr	x2, [x19, #64]
   41400:	ldr	x0, [x19, #336]
   41404:	cmp	x0, x2
   41408:	b.eq	41768 <my_regprop@@Base+0x74a4>  // b.none
   4140c:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   41410:	add	x5, x5, #0x20
   41414:	ldr	x3, [x19, #56]
   41418:	mov	w7, #0x820e                	// #33294
   4141c:	mov	x6, x5
   41420:	mov	x4, #0x10                  	// #16
   41424:	sub	x3, x3, x2
   41428:	ldr	x1, [x19, #368]
   4142c:	mov	x0, x20
   41430:	bl	53f0 <Perl_pv_pretty@plt>
   41434:	mov	x2, x0
   41438:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4143c:	add	x1, x1, #0xb50
   41440:	mov	x0, x20
   41444:	bl	50e0 <Perl_re_printf@plt>
   41448:	ldr	x2, [x19, #104]
   4144c:	ldrsw	x0, [x19, #344]
   41450:	cmp	x0, x2
   41454:	b.eq	41784 <my_regprop@@Base+0x74c0>  // b.none
   41458:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4145c:	add	x1, x1, #0x800
   41460:	mov	x0, x20
   41464:	bl	50e0 <Perl_re_printf@plt>
   41468:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   4146c:	add	x4, x4, #0x2f0
   41470:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   41474:	add	x3, x3, #0x20
   41478:	ldr	w0, [sp, #160]
   4147c:	lsl	w2, w0, #1
   41480:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41484:	add	x1, x1, #0x818
   41488:	mov	x0, x20
   4148c:	bl	50e0 <Perl_re_printf@plt>
   41490:	ldr	x0, [x19, #104]
   41494:	str	w0, [x19, #344]
   41498:	ldr	x0, [x19, #64]
   4149c:	str	x0, [x19, #336]
   414a0:	ldr	x3, [x19, #96]
   414a4:	mov	x5, x19
   414a8:	mov	x4, #0x0                   	// #0
   414ac:	add	x3, x3, x22, lsl #2
   414b0:	ldr	x2, [x19, #368]
   414b4:	ldr	x1, [x19, #32]
   414b8:	mov	x0, x20
   414bc:	bl	5580 <my_regprop@plt>
   414c0:	ldr	x0, [sp, #168]
   414c4:	lsl	x26, x0, #2
   414c8:	ldr	x3, [x19, #96]
   414cc:	mov	x5, x19
   414d0:	mov	x4, #0x0                   	// #0
   414d4:	add	x3, x3, x26
   414d8:	ldr	x2, [x19, #376]
   414dc:	ldr	x1, [x19, #32]
   414e0:	mov	x0, x20
   414e4:	bl	5580 <my_regprop@plt>
   414e8:	ldr	x1, [x19, #368]
   414ec:	ldr	w0, [x1, #12]
   414f0:	and	w0, w0, #0x3ffc00
   414f4:	and	w0, w0, #0xffe007ff
   414f8:	cmp	w0, #0x400
   414fc:	b.ne	417a0 <my_regprop@@Base+0x74dc>  // b.any
   41500:	ldr	x24, [x1, #16]
   41504:	ldr	x1, [x19, #376]
   41508:	ldr	w0, [x1, #12]
   4150c:	and	w0, w0, #0x3ffc00
   41510:	and	w0, w0, #0xffe007ff
   41514:	cmp	w0, #0x400
   41518:	b.ne	417b8 <my_regprop@@Base+0x74f4>  // b.any
   4151c:	ldr	x4, [x1, #16]
   41520:	ldr	x28, [sp, #168]
   41524:	sub	x6, x28, x22
   41528:	mov	x5, x28
   4152c:	mov	x3, x22
   41530:	mov	x2, x24
   41534:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   41538:	add	x1, x1, #0x2f8
   4153c:	mov	x0, x20
   41540:	bl	50e0 <Perl_re_printf@plt>
   41544:	mov	w4, w25
   41548:	mov	x3, x28
   4154c:	mov	x2, x22
   41550:	mov	x1, x19
   41554:	mov	x0, x20
   41558:	bl	3b894 <my_regprop@@Base+0x15d0>
   4155c:	and	w0, w0, #0xff
   41560:	cbz	w0, 417d0 <my_regprop@@Base+0x750c>
   41564:	ldr	w0, [sp, #204]
   41568:	cbz	w0, 418e8 <my_regprop@@Base+0x7624>
   4156c:	ldr	w0, [sp, #160]
   41570:	cmp	w0, #0x1
   41574:	b.eq	417ec <my_regprop@@Base+0x7528>  // b.none
   41578:	ldr	x0, [sp, #176]
   4157c:	lsl	x0, x0, #2
   41580:	str	x0, [sp, #192]
   41584:	ldr	x22, [x19, #96]
   41588:	adds	x22, x22, x0
   4158c:	b.eq	41928 <my_regprop@@Base+0x7664>  // b.none
   41590:	mov	w0, #0x1                   	// #1
   41594:	str	w0, [sp, #144]
   41598:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   4159c:	ldr	x24, [x24, #3768]
   415a0:	b	41850 <my_regprop@@Base+0x758c>
   415a4:	mov	w2, #0x30                  	// #48
   415a8:	mov	x1, x19
   415ac:	mov	x0, x20
   415b0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   415b4:	str	x0, [sp, #168]
   415b8:	b	413dc <my_regprop@@Base+0x7118>
   415bc:	ldr	w3, [sp, #192]
   415c0:	mov	w2, #0x39                  	// #57
   415c4:	mov	x1, x19
   415c8:	mov	x0, x20
   415cc:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   415d0:	str	x0, [sp, #168]
   415d4:	ldr	x0, [x19, #168]
   415d8:	cbz	x0, 41614 <my_regprop@@Base+0x7350>
   415dc:	ldr	w0, [x20, #2368]
   415e0:	tbnz	w0, #20, 416b4 <my_regprop@@Base+0x73f0>
   415e4:	ldr	x1, [sp, #224]
   415e8:	mov	x0, #0x2                   	// #2
   415ec:	movk	x0, #0x10, lsl #16
   415f0:	bics	xzr, x0, x1
   415f4:	b.eq	416b4 <my_regprop@@Base+0x73f0>  // b.none
   415f8:	ldr	x0, [x19, #168]
   415fc:	ldr	w1, [sp, #192]
   41600:	ldr	x2, [sp, #168]
   41604:	str	x2, [x0, w1, sxtw #3]
   41608:	ldr	w0, [x19, #152]
   4160c:	cmp	w0, w1
   41610:	b.eq	416f0 <my_regprop@@Base+0x742c>  // b.none
   41614:	ldr	w0, [x20, #2368]
   41618:	tbnz	w0, #20, 41624 <my_regprop@@Base+0x7360>
   4161c:	ldr	x0, [sp, #224]
   41620:	tbz	w0, #18, 41648 <my_regprop@@Base+0x7384>
   41624:	ldr	x0, [x19, #64]
   41628:	add	x0, x0, #0x1
   4162c:	ldr	x3, [x19, #48]
   41630:	sub	w3, w0, w3
   41634:	ldr	w2, [sp, #168]
   41638:	mov	w1, #0x2f81                	// #12161
   4163c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   41640:	add	x0, x0, #0xf30
   41644:	bl	5010 <Perl_warn_nocontext@plt>
   41648:	ldr	x0, [sp, #168]
   4164c:	lsl	x24, x0, #2
   41650:	tbnz	x0, #61, 416f8 <my_regprop@@Base+0x7434>
   41654:	asr	x2, x24, #2
   41658:	lsl	x24, x24, #1
   4165c:	ldr	x0, [x19, #40]
   41660:	ldr	x1, [x0, #8]
   41664:	add	x1, x1, x24
   41668:	ldr	x0, [x19, #64]
   4166c:	add	x0, x0, #0x1
   41670:	ldr	x3, [x19, #48]
   41674:	sub	x0, x0, x3
   41678:	stur	w0, [x1, #-4]
   4167c:	ldr	w0, [x20, #2368]
   41680:	tbnz	w0, #20, 4168c <my_regprop@@Base+0x73c8>
   41684:	ldr	x0, [sp, #224]
   41688:	tbz	w0, #18, 416a0 <my_regprop@@Base+0x73dc>
   4168c:	mov	w3, #0x1                   	// #1
   41690:	mov	w1, #0x2f82                	// #12162
   41694:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   41698:	add	x0, x0, #0x8
   4169c:	bl	5010 <Perl_warn_nocontext@plt>
   416a0:	ldr	x0, [x19, #40]
   416a4:	ldr	x0, [x0, #8]
   416a8:	mov	w1, #0x1                   	// #1
   416ac:	str	w1, [x0, x24]
   416b0:	b	413dc <my_regprop@@Base+0x7118>
   416b4:	ldr	w0, [sp, #160]
   416b8:	lsl	w0, w0, #1
   416bc:	ldr	x7, [sp, #168]
   416c0:	ldrsw	x6, [sp, #192]
   416c4:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   416c8:	add	x5, x5, #0x20
   416cc:	add	w4, w0, #0x1
   416d0:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   416d4:	add	x3, x3, #0xe38
   416d8:	mov	w2, #0x16                  	// #22
   416dc:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   416e0:	add	x1, x1, #0x288
   416e4:	mov	x0, x20
   416e8:	bl	50e0 <Perl_re_printf@plt>
   416ec:	b	415f8 <my_regprop@@Base+0x7334>
   416f0:	str	wzr, [x19, #152]
   416f4:	b	41614 <my_regprop@@Base+0x7350>
   416f8:	ubfx	x2, x24, #2, #32
   416fc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   41700:	add	x1, x1, #0xf58
   41704:	mov	x0, x20
   41708:	bl	5420 <Perl_croak@plt>
   4170c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   41710:	add	x3, x3, #0xc10
   41714:	add	x3, x3, #0x848
   41718:	mov	w2, #0x2f98                	// #12184
   4171c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   41720:	add	x1, x1, #0xfb8
   41724:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   41728:	add	x0, x0, #0x2b0
   4172c:	bl	58e0 <__assert_fail@plt>
   41730:	ldr	w0, [sp, #160]
   41734:	lsl	w0, w0, #1
   41738:	ldr	x6, [sp, #168]
   4173c:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   41740:	add	x5, x5, #0x20
   41744:	add	w4, w0, #0x1
   41748:	adrp	x3, 79000 <boot_re@@Base+0x1741c>
   4174c:	add	x3, x3, #0xe38
   41750:	mov	w2, #0x16                  	// #22
   41754:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   41758:	add	x1, x1, #0x2c0
   4175c:	mov	x0, x20
   41760:	bl	50e0 <Perl_re_printf@plt>
   41764:	b	4139c <my_regprop@@Base+0x70d8>
   41768:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4176c:	add	x2, x2, #0x20
   41770:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41774:	add	x1, x1, #0x7f8
   41778:	mov	x0, x20
   4177c:	bl	50e0 <Perl_re_printf@plt>
   41780:	b	41448 <my_regprop@@Base+0x7184>
   41784:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   41788:	add	x2, x2, #0x20
   4178c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41790:	add	x1, x1, #0x808
   41794:	mov	x0, x20
   41798:	bl	50e0 <Perl_re_printf@plt>
   4179c:	b	41468 <my_regprop@@Base+0x71a4>
   417a0:	mov	w3, #0x22                  	// #34
   417a4:	mov	x2, #0x0                   	// #0
   417a8:	mov	x0, x20
   417ac:	bl	5200 <Perl_sv_2pv_flags@plt>
   417b0:	mov	x24, x0
   417b4:	b	41504 <my_regprop@@Base+0x7240>
   417b8:	mov	w3, #0x22                  	// #34
   417bc:	mov	x2, #0x0                   	// #0
   417c0:	mov	x0, x20
   417c4:	bl	5200 <Perl_sv_2pv_flags@plt>
   417c8:	mov	x4, x0
   417cc:	b	41520 <my_regprop@@Base+0x725c>
   417d0:	mov	w0, #0x1                   	// #1
   417d4:	strb	w0, [x19, #388]
   417d8:	ldr	w0, [x21]
   417dc:	orr	w0, w0, #0x20
   417e0:	str	w0, [x21]
   417e4:	mov	x24, #0x0                   	// #0
   417e8:	b	40dcc <my_regprop@@Base+0x6b08>
   417ec:	ldr	w0, [x19, #120]
   417f0:	orr	w0, w0, #0x40
   417f4:	str	w0, [x19, #120]
   417f8:	b	41578 <my_regprop@@Base+0x72b4>
   417fc:	add	x28, x22, #0x4
   41800:	ldr	x2, [x19, #96]
   41804:	sub	x2, x28, x2
   41808:	mov	w4, w25
   4180c:	ldr	x3, [sp, #168]
   41810:	asr	x2, x2, #2
   41814:	mov	x1, x19
   41818:	mov	x0, x20
   4181c:	bl	3bcb4 <my_regprop@@Base+0x19f0>
   41820:	and	w0, w0, #0xff
   41824:	cbz	w0, 41898 <my_regprop@@Base+0x75d4>
   41828:	ldrb	w0, [x22, #5]
   4182c:	cmp	w0, #0x2f
   41830:	b.eq	418b4 <my_regprop@@Base+0x75f0>  // b.none
   41834:	ldr	w0, [sp, #200]
   41838:	str	w0, [sp, #144]
   4183c:	mov	x1, x22
   41840:	mov	x0, x20
   41844:	bl	58a0 <Perl_regnext@plt>
   41848:	mov	x22, x0
   4184c:	cbz	x0, 418e0 <my_regprop@@Base+0x761c>
   41850:	ldrb	w0, [x22, #1]
   41854:	ldrb	w0, [x24, w0, sxtw]
   41858:	cmp	w0, #0x22
   4185c:	b.eq	417fc <my_regprop@@Base+0x7538>  // b.none
   41860:	cmp	w0, #0x47
   41864:	b.ne	4183c <my_regprop@@Base+0x7578>  // b.any
   41868:	add	x2, x22, #0x8
   4186c:	ldr	x0, [x19, #96]
   41870:	sub	x2, x2, x0
   41874:	mov	w4, w25
   41878:	ldr	x3, [sp, #168]
   4187c:	asr	x2, x2, #2
   41880:	mov	x1, x19
   41884:	mov	x0, x20
   41888:	bl	3bcb4 <my_regprop@@Base+0x19f0>
   4188c:	ldr	w0, [sp, #200]
   41890:	str	w0, [sp, #144]
   41894:	b	4183c <my_regprop@@Base+0x7578>
   41898:	mov	w0, #0x1                   	// #1
   4189c:	strb	w0, [x19, #388]
   418a0:	ldr	w0, [x21]
   418a4:	orr	w0, w0, #0x20
   418a8:	str	w0, [x21]
   418ac:	mov	x24, #0x0                   	// #0
   418b0:	b	40dcc <my_regprop@@Base+0x6b08>
   418b4:	mov	x1, x28
   418b8:	mov	x0, x20
   418bc:	bl	58a0 <Perl_regnext@plt>
   418c0:	ldr	x1, [x19, #96]
   418c4:	add	x1, x1, x26
   418c8:	cmp	x0, x1
   418cc:	ldr	w0, [sp, #144]
   418d0:	ldr	w1, [sp, #200]
   418d4:	csel	w0, w0, w1, eq  // eq = none
   418d8:	str	w0, [sp, #144]
   418dc:	b	4183c <my_regprop@@Base+0x7578>
   418e0:	ldr	w0, [sp, #144]
   418e4:	cbnz	w0, 41928 <my_regprop@@Base+0x7664>
   418e8:	cbnz	w23, 41ba8 <my_regprop@@Base+0x78e4>
   418ec:	ldr	x0, [x19, #64]
   418f0:	ldr	x1, [x19, #56]
   418f4:	cmp	x0, x1
   418f8:	b.cc	41d88 <my_regprop@@Base+0x7ac4>  // b.lo, b.ul, b.last
   418fc:	ldr	w0, [x19, #244]
   41900:	cbz	w0, 4190c <my_regprop@@Base+0x7648>
   41904:	sub	w0, w0, #0x1
   41908:	str	w0, [x19, #244]
   4190c:	ldr	w0, [x19, #144]
   41910:	ldr	x1, [sp, #176]
   41914:	mov	x24, x1
   41918:	cmp	w0, w27
   4191c:	b.ge	40dcc <my_regprop@@Base+0x6b08>  // b.tcont
   41920:	str	w27, [x19, #144]
   41924:	b	40dcc <my_regprop@@Base+0x6b08>
   41928:	ldr	x22, [x19, #96]
   4192c:	ldr	x0, [sp, #192]
   41930:	add	x22, x22, x0
   41934:	ldrb	w1, [x22, #1]
   41938:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4193c:	ldr	x0, [x0, #3768]
   41940:	ldrb	w0, [x0, w1, sxtw]
   41944:	mov	x24, x22
   41948:	cmp	w0, #0x22
   4194c:	b.ne	41b10 <my_regprop@@Base+0x784c>  // b.any
   41950:	ldr	w0, [x20, #2368]
   41954:	tbnz	w0, #20, 41960 <my_regprop@@Base+0x769c>
   41958:	ldr	x0, [sp, #224]
   4195c:	tbz	w0, #0, 41a14 <my_regprop@@Base+0x7750>
   41960:	ldr	w0, [x20, #2368]
   41964:	tbnz	w0, #20, 41970 <my_regprop@@Base+0x76ac>
   41968:	ldr	x0, [sp, #224]
   4196c:	tbz	w0, #0, 41a14 <my_regprop@@Base+0x7750>
   41970:	ldr	x2, [x19, #64]
   41974:	ldr	x0, [x19, #336]
   41978:	cmp	x0, x2
   4197c:	b.eq	41b24 <my_regprop@@Base+0x7860>  // b.none
   41980:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   41984:	add	x5, x5, #0x20
   41988:	ldr	x3, [x19, #56]
   4198c:	mov	w7, #0x820e                	// #33294
   41990:	mov	x6, x5
   41994:	mov	x4, #0x10                  	// #16
   41998:	sub	x3, x3, x2
   4199c:	ldr	x1, [x19, #368]
   419a0:	mov	x0, x20
   419a4:	bl	53f0 <Perl_pv_pretty@plt>
   419a8:	mov	x2, x0
   419ac:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   419b0:	add	x1, x1, #0xb50
   419b4:	mov	x0, x20
   419b8:	bl	50e0 <Perl_re_printf@plt>
   419bc:	ldr	x2, [x19, #104]
   419c0:	ldrsw	x0, [x19, #344]
   419c4:	cmp	x0, x2
   419c8:	b.eq	41b40 <my_regprop@@Base+0x787c>  // b.none
   419cc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   419d0:	add	x1, x1, #0x800
   419d4:	mov	x0, x20
   419d8:	bl	50e0 <Perl_re_printf@plt>
   419dc:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   419e0:	add	x4, x4, #0x330
   419e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   419e8:	add	x3, x3, #0x20
   419ec:	ldr	w0, [sp, #160]
   419f0:	lsl	w2, w0, #1
   419f4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   419f8:	add	x1, x1, #0x818
   419fc:	mov	x0, x20
   41a00:	bl	50e0 <Perl_re_printf@plt>
   41a04:	ldr	x0, [x19, #104]
   41a08:	str	w0, [x19, #344]
   41a0c:	ldr	x0, [x19, #64]
   41a10:	str	x0, [x19, #336]
   41a14:	mov	x5, x19
   41a18:	mov	x4, #0x0                   	// #0
   41a1c:	mov	x3, x22
   41a20:	ldr	x2, [x19, #368]
   41a24:	ldr	x1, [x19, #32]
   41a28:	mov	x0, x20
   41a2c:	bl	5580 <my_regprop@plt>
   41a30:	ldr	x3, [x19, #96]
   41a34:	mov	x5, x19
   41a38:	mov	x4, #0x0                   	// #0
   41a3c:	add	x3, x3, x26
   41a40:	ldr	x2, [x19, #376]
   41a44:	ldr	x1, [x19, #32]
   41a48:	mov	x0, x20
   41a4c:	bl	5580 <my_regprop@plt>
   41a50:	ldr	x1, [x19, #368]
   41a54:	ldr	w0, [x1, #12]
   41a58:	and	w0, w0, #0x3ffc00
   41a5c:	and	w0, w0, #0xffe007ff
   41a60:	cmp	w0, #0x400
   41a64:	b.ne	41b5c <my_regprop@@Base+0x7898>  // b.any
   41a68:	ldr	x28, [x1, #16]
   41a6c:	ldr	x0, [x19, #96]
   41a70:	sub	x22, x22, x0
   41a74:	sbfx	x22, x22, #2, #32
   41a78:	ldr	x1, [x19, #376]
   41a7c:	ldr	w0, [x1, #12]
   41a80:	and	w0, w0, #0x3ffc00
   41a84:	and	w0, w0, #0xffe007ff
   41a88:	cmp	w0, #0x400
   41a8c:	b.ne	41b74 <my_regprop@@Base+0x78b0>  // b.any
   41a90:	ldr	x4, [x1, #16]
   41a94:	ldr	x0, [sp, #168]
   41a98:	ldr	x1, [sp, #176]
   41a9c:	sub	x6, x0, x1
   41aa0:	mov	x5, x0
   41aa4:	mov	x3, x22
   41aa8:	mov	x2, x28
   41aac:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   41ab0:	add	x1, x1, #0x338
   41ab4:	mov	x0, x20
   41ab8:	bl	50e0 <Perl_re_printf@plt>
   41abc:	mov	w0, #0x2f                  	// #47
   41ac0:	strb	w0, [x24, #1]
   41ac4:	ldr	x0, [x19, #96]
   41ac8:	add	x0, x0, x26
   41acc:	ldrb	w1, [x0, #1]
   41ad0:	cmp	w1, #0x30
   41ad4:	b.eq	41b8c <my_regprop@@Base+0x78c8>  // b.none
   41ad8:	add	x1, x24, #0x4
   41adc:	cmp	x0, x1
   41ae0:	b.ls	41b00 <my_regprop@@Base+0x783c>  // b.plast
   41ae4:	mov	w2, #0x64                  	// #100
   41ae8:	strb	w2, [x1, #1]
   41aec:	add	x1, x1, #0x4
   41af0:	ldr	x0, [x19, #96]
   41af4:	add	x0, x0, x26
   41af8:	cmp	x0, x1
   41afc:	b.hi	41ae8 <my_regprop@@Base+0x7824>  // b.pmore
   41b00:	sub	x0, x0, x24
   41b04:	asr	x0, x0, #2
   41b08:	strh	w0, [x24, #2]
   41b0c:	b	418e8 <my_regprop@@Base+0x7624>
   41b10:	mov	x1, x22
   41b14:	mov	x0, x20
   41b18:	bl	58a0 <Perl_regnext@plt>
   41b1c:	mov	x24, x0
   41b20:	b	41950 <my_regprop@@Base+0x768c>
   41b24:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   41b28:	add	x2, x2, #0x20
   41b2c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41b30:	add	x1, x1, #0x7f8
   41b34:	mov	x0, x20
   41b38:	bl	50e0 <Perl_re_printf@plt>
   41b3c:	b	419bc <my_regprop@@Base+0x76f8>
   41b40:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   41b44:	add	x2, x2, #0x20
   41b48:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41b4c:	add	x1, x1, #0x808
   41b50:	mov	x0, x20
   41b54:	bl	50e0 <Perl_re_printf@plt>
   41b58:	b	419dc <my_regprop@@Base+0x7718>
   41b5c:	mov	w3, #0x22                  	// #34
   41b60:	mov	x2, #0x0                   	// #0
   41b64:	mov	x0, x20
   41b68:	bl	5200 <Perl_sv_2pv_flags@plt>
   41b6c:	mov	x28, x0
   41b70:	b	41a6c <my_regprop@@Base+0x77a8>
   41b74:	mov	w3, #0x22                  	// #34
   41b78:	mov	x2, #0x0                   	// #0
   41b7c:	mov	x0, x20
   41b80:	bl	5200 <Perl_sv_2pv_flags@plt>
   41b84:	mov	x4, x0
   41b88:	b	41a94 <my_regprop@@Base+0x77d0>
   41b8c:	strh	wzr, [x24, #2]
   41b90:	ldr	x0, [x19, #96]
   41b94:	sub	x0, x24, x0
   41b98:	asr	x0, x0, #2
   41b9c:	add	x0, x0, #0x1
   41ba0:	str	x0, [x19, #104]
   41ba4:	b	418e8 <my_regprop@@Base+0x7624>
   41ba8:	mov	w1, w23
   41bac:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   41bb0:	add	x0, x0, #0xc10
   41bb4:	add	x0, x0, #0x850
   41bb8:	bl	5610 <strchr@plt>
   41bbc:	cbz	x0, 4124c <my_regprop@@Base+0x6f88>
   41bc0:	cmp	w23, #0x3e
   41bc4:	mov	w1, #0x74                  	// #116
   41bc8:	ccmp	w23, w1, #0x4, ne  // ne = any
   41bcc:	b.eq	41d08 <my_regprop@@Base+0x7a44>  // b.none
   41bd0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   41bd4:	add	x1, x1, #0xc10
   41bd8:	add	x1, x1, #0x850
   41bdc:	sub	x0, x0, x1
   41be0:	and	x2, x0, #0x1
   41be4:	add	x2, x2, #0x48
   41be8:	and	w2, w2, #0xff
   41bec:	cmp	x0, #0x3
   41bf0:	cset	w24, gt
   41bf4:	mov	w4, w25
   41bf8:	ldr	x3, [sp, #176]
   41bfc:	mov	x1, x19
   41c00:	mov	x0, x20
   41c04:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   41c08:	ldr	w0, [x20, #2368]
   41c0c:	tbnz	w0, #20, 41c18 <my_regprop@@Base+0x7954>
   41c10:	ldr	x0, [sp, #224]
   41c14:	tbz	w0, #18, 41c38 <my_regprop@@Base+0x7974>
   41c18:	ldr	x3, [x19, #64]
   41c1c:	ldr	w0, [sp, #184]
   41c20:	sub	w3, w3, w0
   41c24:	ldr	w2, [sp, #176]
   41c28:	mov	w1, #0x3002                	// #12290
   41c2c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   41c30:	add	x0, x0, #0x8
   41c34:	bl	5010 <Perl_warn_nocontext@plt>
   41c38:	ldr	x0, [sp, #176]
   41c3c:	lsl	x22, x0, #2
   41c40:	tbnz	x0, #61, 41d14 <my_regprop@@Base+0x7a50>
   41c44:	asr	x2, x22, #2
   41c48:	lsl	x23, x22, #1
   41c4c:	ldr	x0, [x19, #40]
   41c50:	ldr	x1, [x0, #8]
   41c54:	ldr	x0, [x19, #64]
   41c58:	ldr	x3, [sp, #184]
   41c5c:	sub	x0, x0, x3
   41c60:	str	w0, [x1, x23]
   41c64:	ldr	w0, [x20, #2368]
   41c68:	tbnz	w0, #20, 41c74 <my_regprop@@Base+0x79b0>
   41c6c:	ldr	x0, [sp, #224]
   41c70:	tbz	w0, #18, 41c94 <my_regprop@@Base+0x79d0>
   41c74:	ldr	x0, [sp, #184]
   41c78:	add	x0, x0, #0x1
   41c7c:	ldr	x3, [x19, #48]
   41c80:	sub	w3, w0, w3
   41c84:	mov	w1, #0x3003                	// #12291
   41c88:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   41c8c:	add	x0, x0, #0xf30
   41c90:	bl	5010 <Perl_warn_nocontext@plt>
   41c94:	ldr	x0, [x19, #40]
   41c98:	ldr	x0, [x0, #8]
   41c9c:	add	x23, x0, x23
   41ca0:	ldr	x0, [sp, #184]
   41ca4:	add	x0, x0, #0x1
   41ca8:	ldr	x1, [x19, #48]
   41cac:	sub	x0, x0, x1
   41cb0:	stur	w0, [x23, #-4]
   41cb4:	ldr	x0, [x19, #96]
   41cb8:	strb	w24, [x0, x22]
   41cbc:	mov	w2, #0x30                  	// #48
   41cc0:	mov	x1, x19
   41cc4:	mov	x0, x20
   41cc8:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   41ccc:	mov	w4, w25
   41cd0:	mov	x3, x0
   41cd4:	ldr	x2, [sp, #176]
   41cd8:	mov	x1, x19
   41cdc:	mov	x0, x20
   41ce0:	bl	3bcb4 <my_regprop@@Base+0x19f0>
   41ce4:	and	w0, w0, #0xff
   41ce8:	cbnz	w0, 4124c <my_regprop@@Base+0x6f88>
   41cec:	mov	w0, #0x1                   	// #1
   41cf0:	strb	w0, [x19, #388]
   41cf4:	ldr	w0, [x21]
   41cf8:	orr	w0, w0, #0x20
   41cfc:	str	w0, [x21]
   41d00:	mov	x24, #0x0                   	// #0
   41d04:	b	40dcc <my_regprop@@Base+0x6b08>
   41d08:	mov	w24, #0x0                   	// #0
   41d0c:	mov	w2, #0x4a                  	// #74
   41d10:	b	41bf4 <my_regprop@@Base+0x7930>
   41d14:	ubfx	x2, x22, #2, #32
   41d18:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   41d1c:	add	x1, x1, #0x888
   41d20:	mov	x0, x20
   41d24:	bl	5420 <Perl_croak@plt>
   41d28:	ldr	w1, [x19, #200]
   41d2c:	cbz	w1, 41268 <my_regprop@@Base+0x6fa4>
   41d30:	and	w0, w0, #0xfffffc7f
   41d34:	orr	w0, w0, #0x100
   41d38:	str	w0, [x19]
   41d3c:	b	41268 <my_regprop@@Base+0x6fa4>
   41d40:	ldr	x5, [x19, #8]
   41d44:	sub	x4, x1, x5
   41d48:	mov	x7, #0x0                   	// #0
   41d4c:	b	412f8 <my_regprop@@Base+0x7034>
   41d50:	ldr	x6, [x19, #48]
   41d54:	ldr	x5, [x19, #56]
   41d58:	sub	w5, w5, w6
   41d5c:	mov	w3, #0x3016                	// #12310
   41d60:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   41d64:	add	x2, x2, #0xfb8
   41d68:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   41d6c:	add	x1, x1, #0x870
   41d70:	mov	x0, x20
   41d74:	bl	5420 <Perl_croak@plt>
   41d78:	mov	x1, x19
   41d7c:	mov	x0, x20
   41d80:	bl	269a4 <my_regexec@@Base+0x34b0>
   41d84:	b	418fc <my_regprop@@Base+0x7638>
   41d88:	ldrb	w1, [x0]
   41d8c:	cmp	w1, #0x29
   41d90:	b.ne	41e74 <my_regprop@@Base+0x7bb0>  // b.any
   41d94:	add	x0, x0, #0x1
   41d98:	str	x0, [x19, #64]
   41d9c:	ldr	x1, [x19, #24]
   41da0:	cbz	x1, 41db0 <my_regprop@@Base+0x7aec>
   41da4:	mov	w2, #0xb                   	// #11
   41da8:	mov	x0, x20
   41dac:	bl	54b0 <Perl_save_pushptr@plt>
   41db0:	ldr	x1, [x19, #160]
   41db4:	cbz	x1, 41dc4 <my_regprop@@Base+0x7b00>
   41db8:	mov	w2, #0xa                   	// #10
   41dbc:	mov	x0, x20
   41dc0:	bl	54b0 <Perl_save_pushptr@plt>
   41dc4:	ldr	x1, [x19, #168]
   41dc8:	cbz	x1, 41dd8 <my_regprop@@Base+0x7b14>
   41dcc:	mov	w2, #0xa                   	// #10
   41dd0:	mov	x0, x20
   41dd4:	bl	54b0 <Perl_save_pushptr@plt>
   41dd8:	ldr	x0, [x19, #64]
   41ddc:	ldr	x1, [x19, #72]
   41de0:	sub	x1, x0, x1
   41de4:	ldr	x0, [x19, #80]
   41de8:	add	x0, x0, x1
   41dec:	ldr	x1, [x19, #16]
   41df0:	cmp	x0, x1
   41df4:	b.hi	41e3c <my_regprop@@Base+0x7b78>  // b.pmore
   41df8:	ldr	x5, [x19, #8]
   41dfc:	sub	x7, x1, x0
   41e00:	subs	x4, x0, x5
   41e04:	b.mi	41e4c <my_regprop@@Base+0x7b88>  // b.first
   41e08:	ldr	w2, [x19, #192]
   41e0c:	cmp	w2, #0x0
   41e10:	cset	w3, ne  // ne = any
   41e14:	cmp	x0, x1
   41e18:	csel	x0, x0, x1, ls  // ls = plast
   41e1c:	str	x0, [sp]
   41e20:	mov	w6, w3
   41e24:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   41e28:	add	x2, x2, #0x370
   41e2c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   41e30:	add	x1, x1, #0x3a8
   41e34:	mov	x0, x20
   41e38:	bl	5420 <Perl_croak@plt>
   41e3c:	ldr	x5, [x19, #8]
   41e40:	sub	x4, x1, x5
   41e44:	mov	x7, #0x0                   	// #0
   41e48:	b	41e08 <my_regprop@@Base+0x7b44>
   41e4c:	ldr	x6, [x19, #48]
   41e50:	ldr	x5, [x19, #56]
   41e54:	sub	w5, w5, w6
   41e58:	mov	w3, #0x301d                	// #12317
   41e5c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   41e60:	add	x2, x2, #0xfb8
   41e64:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   41e68:	add	x1, x1, #0x870
   41e6c:	mov	x0, x20
   41e70:	bl	5420 <Perl_croak@plt>
   41e74:	ldr	x21, [x19, #16]
   41e78:	ldr	x0, [x19, #8]
   41e7c:	sub	x21, x21, x0
   41e80:	ldr	x1, [x19, #24]
   41e84:	cbz	x1, 41e94 <my_regprop@@Base+0x7bd0>
   41e88:	mov	w2, #0xb                   	// #11
   41e8c:	mov	x0, x20
   41e90:	bl	54b0 <Perl_save_pushptr@plt>
   41e94:	ldr	x1, [x19, #160]
   41e98:	cbz	x1, 41ea8 <my_regprop@@Base+0x7be4>
   41e9c:	mov	w2, #0xa                   	// #10
   41ea0:	mov	x0, x20
   41ea4:	bl	54b0 <Perl_save_pushptr@plt>
   41ea8:	ldr	x1, [x19, #168]
   41eac:	cbz	x1, 41ebc <my_regprop@@Base+0x7bf8>
   41eb0:	mov	w2, #0xa                   	// #10
   41eb4:	mov	x0, x20
   41eb8:	bl	54b0 <Perl_save_pushptr@plt>
   41ebc:	cmp	x21, #0x7f
   41ec0:	b.le	41efc <my_regprop@@Base+0x7c38>
   41ec4:	mov	x21, #0x75                  	// #117
   41ec8:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   41ecc:	add	x6, x6, #0xfe0
   41ed0:	ldr	w0, [x19, #192]
   41ed4:	cmp	w0, #0x0
   41ed8:	ldr	x5, [x19, #8]
   41edc:	mov	x4, x21
   41ee0:	cset	w3, ne  // ne = any
   41ee4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   41ee8:	add	x2, x2, #0x380
   41eec:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   41ef0:	add	x1, x1, #0x50
   41ef4:	mov	x0, x20
   41ef8:	bl	5420 <Perl_croak@plt>
   41efc:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   41f00:	add	x6, x6, #0x20
   41f04:	b	41ed0 <my_regprop@@Base+0x7c0c>
   41f08:	cmp	w0, #0x46
   41f0c:	b.eq	3d040 <my_regprop@@Base+0x2d7c>  // b.none
   41f10:	b.ls	41f4c <my_regprop@@Base+0x7c88>  // b.plast
   41f14:	cmp	w0, #0x4d
   41f18:	b.eq	41f8c <my_regprop@@Base+0x7cc8>  // b.none
   41f1c:	cmp	w0, #0x50
   41f20:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41f24:	cmp	x27, #0x5
   41f28:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41f2c:	mov	x2, #0x5                   	// #5
   41f30:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   41f34:	add	x1, x1, #0x8a8
   41f38:	mov	x0, x26
   41f3c:	bl	5460 <memcmp@plt>
   41f40:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   41f44:	mov	w2, #0x5d                  	// #93
   41f48:	b	4206c <my_regprop@@Base+0x7da8>
   41f4c:	cmp	w0, #0x41
   41f50:	b.eq	3cfd0 <my_regprop@@Base+0x2d0c>  // b.none
   41f54:	cmp	w0, #0x43
   41f58:	b.ne	41f84 <my_regprop@@Base+0x7cc0>  // b.any
   41f5c:	cmp	x27, #0x6
   41f60:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41f64:	mov	x2, #0x6                   	// #6
   41f68:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   41f6c:	add	x1, x1, #0x890
   41f70:	mov	x0, x26
   41f74:	bl	5460 <memcmp@plt>
   41f78:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   41f7c:	mov	w2, #0x60                  	// #96
   41f80:	b	4206c <my_regprop@@Base+0x7da8>
   41f84:	cmp	w0, #0x3a
   41f88:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41f8c:	cbz	x27, 41fb0 <my_regprop@@Base+0x7cec>
   41f90:	cmp	x27, #0x4
   41f94:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41f98:	mov	x2, #0x4                   	// #4
   41f9c:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   41fa0:	add	x1, x1, #0x8a0
   41fa4:	mov	x0, x26
   41fa8:	bl	5460 <memcmp@plt>
   41fac:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   41fb0:	ldr	x0, [x19, #64]
   41fb4:	cmp	x0, x28
   41fb8:	b.eq	4208c <my_regprop@@Base+0x7dc8>  // b.none
   41fbc:	mov	w21, #0xffffffff            	// #-1
   41fc0:	mov	w0, #0x1                   	// #1
   41fc4:	mov	w2, #0x5e                  	// #94
   41fc8:	b	42080 <my_regprop@@Base+0x7dbc>
   41fcc:	cmp	w0, #0x54
   41fd0:	b.eq	3d098 <my_regprop@@Base+0x2dd4>  // b.none
   41fd4:	cmp	w0, #0x61
   41fd8:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41fdc:	cmp	x27, #0x3
   41fe0:	b.eq	3d0cc <my_regprop@@Base+0x2e08>  // b.none
   41fe4:	cmp	x27, #0x11
   41fe8:	b.eq	3d0ec <my_regprop@@Base+0x2e28>  // b.none
   41fec:	cmp	x27, #0x6
   41ff0:	b.ne	3cfd8 <my_regprop@@Base+0x2d14>  // b.any
   41ff4:	mov	x2, #0x6                   	// #6
   41ff8:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   41ffc:	add	x1, x1, #0x8e0
   42000:	mov	x0, x26
   42004:	bl	5460 <memcmp@plt>
   42008:	cbnz	w0, 3cfd8 <my_regprop@@Base+0x2d14>
   4200c:	mov	w23, #0x74                  	// #116
   42010:	b	3d548 <my_regprop@@Base+0x3284>
   42014:	sub	x27, x27, x26
   42018:	mov	x28, #0x0                   	// #0
   4201c:	b	3ccb0 <my_regprop@@Base+0x29ec>
   42020:	mov	w2, #0x30                  	// #48
   42024:	mov	x1, x19
   42028:	mov	x0, x20
   4202c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   42030:	mov	x21, x0
   42034:	mov	w4, w22
   42038:	mov	x3, x0
   4203c:	mov	x2, x25
   42040:	mov	x1, x19
   42044:	mov	x0, x20
   42048:	bl	3b894 <my_regprop@@Base+0x15d0>
   4204c:	mov	w4, w22
   42050:	mov	x3, x21
   42054:	mov	x2, x24
   42058:	mov	x1, x19
   4205c:	mov	x0, x20
   42060:	bl	3b894 <my_regprop@@Base+0x15d0>
   42064:	b	40dcc <my_regprop@@Base+0x6b08>
   42068:	mov	w2, #0x5a                  	// #90
   4206c:	ldr	x0, [x19, #64]
   42070:	cmp	x0, x28
   42074:	b.eq	3db7c <my_regprop@@Base+0x38b8>  // b.none
   42078:	mov	w21, #0xffffffff            	// #-1
   4207c:	mov	w0, #0x0                   	// #0
   42080:	cmp	w0, #0x0
   42084:	ccmp	x28, #0x0, #0x0, ne  // ne = any
   42088:	b.ne	3dac4 <my_regprop@@Base+0x3800>  // b.any
   4208c:	ldr	x1, [x19, #24]
   42090:	cbz	x1, 420a0 <my_regprop@@Base+0x7ddc>
   42094:	mov	w2, #0xb                   	// #11
   42098:	mov	x0, x20
   4209c:	bl	54b0 <Perl_save_pushptr@plt>
   420a0:	ldr	x1, [x19, #160]
   420a4:	cbz	x1, 420b4 <my_regprop@@Base+0x7df0>
   420a8:	mov	w2, #0xa                   	// #10
   420ac:	mov	x0, x20
   420b0:	bl	54b0 <Perl_save_pushptr@plt>
   420b4:	ldr	x1, [x19, #168]
   420b8:	cbz	x1, 420c8 <my_regprop@@Base+0x7e04>
   420bc:	mov	w2, #0xa                   	// #10
   420c0:	mov	x0, x20
   420c4:	bl	54b0 <Perl_save_pushptr@plt>
   420c8:	ldr	x0, [x19, #64]
   420cc:	ldr	x1, [x19, #72]
   420d0:	sub	x1, x0, x1
   420d4:	ldr	x0, [x19, #80]
   420d8:	add	x0, x0, x1
   420dc:	ldr	x3, [x19, #16]
   420e0:	cmp	x0, x3
   420e4:	b.hi	3da84 <my_regprop@@Base+0x37c0>  // b.pmore
   420e8:	ldr	x2, [x19, #8]
   420ec:	subs	x4, x0, x2
   420f0:	b.mi	3da94 <my_regprop@@Base+0x37d0>  // b.first
   420f4:	mov	x7, x4
   420f8:	sub	x4, x3, x0
   420fc:	ldr	w1, [x19, #192]
   42100:	cmp	w1, #0x0
   42104:	cset	w1, ne  // ne = any
   42108:	cmp	x0, x3
   4210c:	csel	x0, x0, x3, ls  // ls = plast
   42110:	str	x0, [sp, #24]
   42114:	str	x4, [sp, #16]
   42118:	str	w1, [sp, #8]
   4211c:	str	x2, [sp]
   42120:	mov	w6, w1
   42124:	mov	x5, x26
   42128:	mov	x4, x27
   4212c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   42130:	add	x3, x3, #0x5d8
   42134:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   42138:	add	x2, x2, #0xac8
   4213c:	mov	x0, x20
   42140:	bl	273ac <my_regexec@@Base+0x3eb8>
   42144:	ldr	w0, [sp, #220]
   42148:	mov	w1, #0xd                   	// #13
   4214c:	and	w1, w0, w1
   42150:	ldr	w0, [x21]
   42154:	orr	w0, w0, w1
   42158:	str	w0, [x21]
   4215c:	ldr	x0, [x19, #64]
   42160:	ldrb	w0, [x0]
   42164:	cmp	w0, #0x7c
   42168:	b.eq	41088 <my_regprop@@Base+0x6dc4>  // b.none
   4216c:	mov	x22, x24
   42170:	mov	w27, w26
   42174:	str	xzr, [sp, #168]
   42178:	sub	w0, w23, #0x3c
   4217c:	cmp	w0, #0x38
   42180:	b.hi	413dc <my_regprop@@Base+0x7118>  // b.pmore
   42184:	sub	w1, w23, #0x3c
   42188:	mov	x0, #0x1                   	// #1
   4218c:	lsl	x0, x0, x1
   42190:	mov	x1, #0x63                  	// #99
   42194:	movk	x1, #0x60, lsl #32
   42198:	tst	x0, x1
   4219c:	b.ne	413bc <my_regprop@@Base+0x70f8>  // b.any
   421a0:	and	x1, x0, #0x1fffffffffffffc
   421a4:	and	x1, x1, #0xff00000000000007
   421a8:	cbnz	x1, 413c8 <my_regprop@@Base+0x7104>
   421ac:	tbz	x0, #55, 413dc <my_regprop@@Base+0x7118>
   421b0:	mov	w2, #0x3b                  	// #59
   421b4:	mov	x1, x19
   421b8:	mov	x0, x20
   421bc:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   421c0:	str	x0, [sp, #168]
   421c4:	strb	wzr, [x19, #387]
   421c8:	b	413dc <my_regprop@@Base+0x7118>
   421cc:	ldrb	w22, [x26]
   421d0:	sub	x23, x24, x26
   421d4:	cmp	x23, #0x5
   421d8:	b.le	421f4 <my_regprop@@Base+0x7f30>
   421dc:	mov	x2, #0x6                   	// #6
   421e0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   421e4:	add	x1, x1, #0xf90
   421e8:	mov	x0, x26
   421ec:	bl	5460 <memcmp@plt>
   421f0:	cbz	w0, 3fd28 <my_regprop@@Base+0x5a64>
   421f4:	cmp	w22, #0x52
   421f8:	b.eq	3fd54 <my_regprop@@Base+0x5a90>  // b.none
   421fc:	mov	w1, w22
   42200:	sub	w22, w22, #0x31
   42204:	cmp	w22, #0x8
   42208:	b.ls	3ff24 <my_regprop@@Base+0x5c60>  // b.plast
   4220c:	ldr	w0, [sp, #144]
   42210:	cbz	w0, 40684 <my_regprop@@Base+0x63c0>
   42214:	cmp	x23, #0x0
   42218:	b.le	40730 <my_regprop@@Base+0x646c>
   4221c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   42220:	ldr	x0, [x0, #4064]
   42224:	ldrb	w0, [x0, w1, sxtw]
   42228:	cmp	x0, x23
   4222c:	csel	x0, x0, x23, le
   42230:	b	40688 <my_regprop@@Base+0x63c4>
   42234:	ldr	x23, [sp, #240]
   42238:	mov	x0, #0x7fffffff            	// #2147483647
   4223c:	cmp	x23, x0
   42240:	b.ls	3f05c <my_regprop@@Base+0x4d98>  // b.plast
   42244:	mov	w23, #0x7fffffff            	// #2147483647
   42248:	b	3f068 <my_regprop@@Base+0x4da4>
   4224c:	ldr	x23, [sp, #240]
   42250:	mov	x0, #0x7fffffff            	// #2147483647
   42254:	cmp	x23, x0
   42258:	b.ls	3f05c <my_regprop@@Base+0x4d98>  // b.plast
   4225c:	mov	w23, #0x7fffffff            	// #2147483647
   42260:	b	3f06c <my_regprop@@Base+0x4da8>
   42264:	add	x26, x25, #0x1
   42268:	ldr	w22, [x19, #192]
   4226c:	mov	x27, x25
   42270:	mov	w23, #0x0                   	// #0
   42274:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   42278:	ldr	x1, [x1, #4064]
   4227c:	mov	w2, #0x1                   	// #1
   42280:	b	3cc58 <my_regprop@@Base+0x2994>
   42284:	bl	5300 <__stack_chk_fail@plt>
   42288:	sub	sp, sp, #0xe0
   4228c:	stp	x29, x30, [sp, #48]
   42290:	add	x29, sp, #0x30
   42294:	stp	x19, x20, [sp, #64]
   42298:	stp	x21, x22, [sp, #80]
   4229c:	stp	x23, x24, [sp, #96]
   422a0:	stp	x25, x26, [sp, #112]
   422a4:	stp	x27, x28, [sp, #128]
   422a8:	mov	x20, x0
   422ac:	mov	x19, x1
   422b0:	mov	x21, x2
   422b4:	mov	x25, x3
   422b8:	mov	x22, x4
   422bc:	mov	x24, x5
   422c0:	and	w28, w6, #0xff
   422c4:	mov	w26, w7
   422c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   422cc:	ldr	x0, [x0, #3920]
   422d0:	ldr	x1, [x0]
   422d4:	str	x1, [sp, #216]
   422d8:	mov	x1, #0x0                   	// #0
   422dc:	ldr	x0, [x19, #64]
   422e0:	str	x0, [sp, #192]
   422e4:	str	xzr, [sp, #200]
   422e8:	ldr	x0, [x20, #224]
   422ec:	cbz	x0, 436b8 <my_regprop@@Base+0x93f4>
   422f0:	mov	w2, #0x1                   	// #1
   422f4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   422f8:	add	x1, x1, #0x608
   422fc:	mov	x0, x20
   42300:	bl	54f0 <Perl_get_sv@plt>
   42304:	mov	x23, x0
   42308:	cbz	x0, 42354 <my_regprop@@Base+0x8090>
   4230c:	ldr	w0, [x0, #12]
   42310:	tbz	w0, #8, 423c8 <my_regprop@@Base+0x8104>
   42314:	ldr	w1, [x23, #12]
   42318:	and	w0, w1, #0x3fff00
   4231c:	and	w0, w0, #0xffe001ff
   42320:	cmp	w0, #0x100
   42324:	b.ne	42434 <my_regprop@@Base+0x8170>  // b.any
   42328:	and	w2, w1, #0xf
   4232c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   42330:	ldr	x0, [x0, #3712]
   42334:	ldrb	w0, [x0, w2, uxtw]
   42338:	cbz	w0, 423dc <my_regprop@@Base+0x8118>
   4233c:	and	w0, w1, #0xc000
   42340:	cmp	w0, #0x8, lsl #12
   42344:	b.eq	42400 <my_regprop@@Base+0x813c>  // b.none
   42348:	ldr	x0, [x23]
   4234c:	ldr	x0, [x0, #32]
   42350:	str	x0, [sp, #200]
   42354:	cbz	x24, 42448 <my_regprop@@Base+0x8184>
   42358:	ldr	x0, [x20, #224]
   4235c:	cbz	x0, 436bc <my_regprop@@Base+0x93f8>
   42360:	mov	w2, #0x1                   	// #1
   42364:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   42368:	add	x1, x1, #0x608
   4236c:	mov	x0, x20
   42370:	bl	54f0 <Perl_get_sv@plt>
   42374:	mov	x23, x0
   42378:	cbz	x0, 436bc <my_regprop@@Base+0x93f8>
   4237c:	ldr	w0, [x0, #12]
   42380:	tbz	w0, #8, 4246c <my_regprop@@Base+0x81a8>
   42384:	ldr	w1, [x23, #12]
   42388:	and	w0, w1, #0x3fff00
   4238c:	and	w0, w0, #0xffe001ff
   42390:	cmp	w0, #0x100
   42394:	b.ne	424d8 <my_regprop@@Base+0x8214>  // b.any
   42398:	and	w2, w1, #0xf
   4239c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   423a0:	ldr	x0, [x0, #3712]
   423a4:	ldrb	w0, [x0, w2, uxtw]
   423a8:	cbz	w0, 42480 <my_regprop@@Base+0x81bc>
   423ac:	and	w0, w1, #0xc000
   423b0:	cmp	w0, #0x8, lsl #12
   423b4:	b.eq	424a4 <my_regprop@@Base+0x81e0>  // b.none
   423b8:	ldr	x0, [x23]
   423bc:	ldr	x0, [x0, #32]
   423c0:	str	x0, [sp, #200]
   423c4:	b	436bc <my_regprop@@Base+0x93f8>
   423c8:	mov	x2, #0xff08                	// #65288
   423cc:	mov	x1, x23
   423d0:	mov	x0, x20
   423d4:	bl	5310 <Perl_sv_setuv@plt>
   423d8:	b	42314 <my_regprop@@Base+0x8050>
   423dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   423e0:	add	x3, x3, #0xc10
   423e4:	add	x3, x3, #0x860
   423e8:	mov	w2, #0x31ce                	// #12750
   423ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   423f0:	add	x1, x1, #0xfb8
   423f4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   423f8:	add	x0, x0, #0xda0
   423fc:	bl	58e0 <__assert_fail@plt>
   42400:	and	w1, w1, #0xff
   42404:	sub	w1, w1, #0x9
   42408:	cmp	w1, #0x1
   4240c:	b.hi	42348 <my_regprop@@Base+0x8084>  // b.pmore
   42410:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42414:	add	x3, x3, #0xc10
   42418:	add	x3, x3, #0x860
   4241c:	mov	w2, #0x31ce                	// #12750
   42420:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42424:	add	x1, x1, #0xfb8
   42428:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4242c:	add	x0, x0, #0xdd0
   42430:	bl	58e0 <__assert_fail@plt>
   42434:	mov	w2, #0x2                   	// #2
   42438:	mov	x1, x23
   4243c:	mov	x0, x20
   42440:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   42444:	b	42350 <my_regprop@@Base+0x808c>
   42448:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4244c:	add	x3, x3, #0xc10
   42450:	add	x3, x3, #0x860
   42454:	mov	w2, #0x31d0                	// #12752
   42458:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4245c:	add	x1, x1, #0xfb8
   42460:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   42464:	add	x0, x0, #0xfd0
   42468:	bl	58e0 <__assert_fail@plt>
   4246c:	mov	x2, #0xff08                	// #65288
   42470:	mov	x1, x23
   42474:	mov	x0, x20
   42478:	bl	5310 <Perl_sv_setuv@plt>
   4247c:	b	42384 <my_regprop@@Base+0x80c0>
   42480:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42484:	add	x3, x3, #0xc10
   42488:	add	x3, x3, #0x860
   4248c:	mov	w2, #0x31d2                	// #12754
   42490:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42494:	add	x1, x1, #0xfb8
   42498:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4249c:	add	x0, x0, #0xda0
   424a0:	bl	58e0 <__assert_fail@plt>
   424a4:	and	w1, w1, #0xff
   424a8:	sub	w1, w1, #0x9
   424ac:	cmp	w1, #0x1
   424b0:	b.hi	423b8 <my_regprop@@Base+0x80f4>  // b.pmore
   424b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   424b8:	add	x3, x3, #0xc10
   424bc:	add	x3, x3, #0x860
   424c0:	mov	w2, #0x31d2                	// #12754
   424c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   424c8:	add	x1, x1, #0xfb8
   424cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   424d0:	add	x0, x0, #0xdd0
   424d4:	bl	58e0 <__assert_fail@plt>
   424d8:	mov	w2, #0x2                   	// #2
   424dc:	mov	x1, x23
   424e0:	mov	x0, x20
   424e4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   424e8:	b	423c0 <my_regprop@@Base+0x80fc>
   424ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   424f0:	add	x3, x3, #0xc10
   424f4:	add	x3, x3, #0x860
   424f8:	mov	w2, #0x31d4                	// #12756
   424fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42500:	add	x1, x1, #0xfb8
   42504:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   42508:	add	x0, x0, #0x398
   4250c:	bl	58e0 <__assert_fail@plt>
   42510:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42514:	add	x3, x3, #0xc10
   42518:	add	x3, x3, #0x860
   4251c:	mov	w2, #0x31d5                	// #12757
   42520:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42524:	add	x1, x1, #0xfb8
   42528:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4252c:	add	x0, x0, #0x3c0
   42530:	bl	58e0 <__assert_fail@plt>
   42534:	ldrb	w1, [x0, #1]
   42538:	sub	w1, w1, #0x30
   4253c:	cmp	w1, #0x9
   42540:	b.hi	425c4 <my_regprop@@Base+0x8300>  // b.pmore
   42544:	add	x1, x0, #0x1
   42548:	mov	x4, x1
   4254c:	ldrb	w2, [x1, #1]!
   42550:	sub	w3, w2, #0x30
   42554:	cmp	w3, #0x9
   42558:	b.ls	42548 <my_regprop@@Base+0x8284>  // b.plast
   4255c:	cmp	w2, #0x2c
   42560:	b.eq	4257c <my_regprop@@Base+0x82b8>  // b.none
   42564:	ldrb	w1, [x1]
   42568:	cmp	w1, #0x7d
   4256c:	b.ne	425c4 <my_regprop@@Base+0x8300>  // b.any
   42570:	str	x0, [x19, #64]
   42574:	cbnz	x22, 4371c <my_regprop@@Base+0x9458>
   42578:	b	43724 <my_regprop@@Base+0x9460>
   4257c:	add	x4, x4, #0x2
   42580:	ldrb	w1, [x1, #1]
   42584:	sub	w1, w1, #0x30
   42588:	cmp	w1, #0x9
   4258c:	b.hi	425a8 <my_regprop@@Base+0x82e4>  // b.pmore
   42590:	ldrb	w1, [x4, #1]!
   42594:	sub	w1, w1, #0x30
   42598:	cmp	w1, #0x9
   4259c:	b.ls	42590 <my_regprop@@Base+0x82cc>  // b.plast
   425a0:	mov	x1, x4
   425a4:	b	42564 <my_regprop@@Base+0x82a0>
   425a8:	mov	x1, x4
   425ac:	b	42564 <my_regprop@@Base+0x82a0>
   425b0:	ubfx	x2, x2, #2, #32
   425b4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   425b8:	add	x1, x1, #0x888
   425bc:	mov	x0, x20
   425c0:	bl	5420 <Perl_croak@plt>
   425c4:	ldr	x0, [x19, #64]
   425c8:	str	x0, [sp, #144]
   425cc:	ldrb	w0, [x0]
   425d0:	cmp	w0, #0x7b
   425d4:	b.eq	426b0 <my_regprop@@Base+0x83ec>  // b.none
   425d8:	ldr	x1, [x19, #24]
   425dc:	cbz	x1, 425ec <my_regprop@@Base+0x8328>
   425e0:	mov	w2, #0xb                   	// #11
   425e4:	mov	x0, x20
   425e8:	bl	54b0 <Perl_save_pushptr@plt>
   425ec:	ldr	x1, [x19, #160]
   425f0:	cbz	x1, 42600 <my_regprop@@Base+0x833c>
   425f4:	mov	w2, #0xa                   	// #10
   425f8:	mov	x0, x20
   425fc:	bl	54b0 <Perl_save_pushptr@plt>
   42600:	ldr	x1, [x19, #168]
   42604:	cbz	x1, 42614 <my_regprop@@Base+0x8350>
   42608:	mov	w2, #0xa                   	// #10
   4260c:	mov	x0, x20
   42610:	bl	54b0 <Perl_save_pushptr@plt>
   42614:	ldr	x0, [x19, #64]
   42618:	ldr	x1, [x19, #72]
   4261c:	sub	x1, x0, x1
   42620:	ldr	x0, [x19, #80]
   42624:	add	x0, x0, x1
   42628:	ldr	x1, [x19, #16]
   4262c:	cmp	x0, x1
   42630:	b.hi	42678 <my_regprop@@Base+0x83b4>  // b.pmore
   42634:	ldr	x5, [x19, #8]
   42638:	sub	x7, x1, x0
   4263c:	subs	x4, x0, x5
   42640:	b.mi	42688 <my_regprop@@Base+0x83c4>  // b.first
   42644:	ldr	w2, [x19, #192]
   42648:	cmp	w2, #0x0
   4264c:	cset	w3, ne  // ne = any
   42650:	cmp	x0, x1
   42654:	csel	x0, x0, x1, ls  // ls = plast
   42658:	str	x0, [sp]
   4265c:	mov	w6, w3
   42660:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   42664:	add	x2, x2, #0x3d8
   42668:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4266c:	add	x1, x1, #0x3a8
   42670:	mov	x0, x20
   42674:	bl	5420 <Perl_croak@plt>
   42678:	ldr	x5, [x19, #8]
   4267c:	sub	x4, x1, x5
   42680:	mov	x7, #0x0                   	// #0
   42684:	b	42644 <my_regprop@@Base+0x8380>
   42688:	ldr	x6, [x19, #48]
   4268c:	ldr	x5, [x19, #56]
   42690:	sub	w5, w5, w6
   42694:	mov	w3, #0x31fa                	// #12794
   42698:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4269c:	add	x2, x2, #0xfb8
   426a0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   426a4:	add	x1, x1, #0x870
   426a8:	mov	x0, x20
   426ac:	bl	5420 <Perl_croak@plt>
   426b0:	ldr	x0, [sp, #144]
   426b4:	add	x0, x0, #0x1
   426b8:	str	x0, [sp, #160]
   426bc:	str	x0, [x19, #64]
   426c0:	ldr	x2, [x19, #56]
   426c4:	sub	x2, x2, x0
   426c8:	mov	w1, #0x7d                  	// #125
   426cc:	bl	5750 <memchr@plt>
   426d0:	str	x0, [sp, #152]
   426d4:	cbz	x0, 4271c <my_regprop@@Base+0x8458>
   426d8:	ldr	w0, [x19]
   426dc:	tst	x0, #0x380
   426e0:	b.ne	42804 <my_regprop@@Base+0x8540>  // b.any
   426e4:	and	w0, w0, #0xfffffc7f
   426e8:	orr	w0, w0, #0x100
   426ec:	str	w0, [x19]
   426f0:	mov	w0, #0x1                   	// #1
   426f4:	str	w0, [x19, #200]
   426f8:	ldrb	w0, [x19, #384]
   426fc:	cbz	w0, 42804 <my_regprop@@Base+0x8540>
   42700:	ldr	w0, [x19, #148]
   42704:	tbnz	w0, #31, 42804 <my_regprop@@Base+0x8540>
   42708:	ldr	w0, [x24]
   4270c:	orr	w0, w0, #0x20
   42710:	str	w0, [x24]
   42714:	mov	w23, #0x0                   	// #0
   42718:	b	437a4 <my_regprop@@Base+0x94e0>
   4271c:	ldr	x1, [x19, #24]
   42720:	cbz	x1, 42730 <my_regprop@@Base+0x846c>
   42724:	mov	w2, #0xb                   	// #11
   42728:	mov	x0, x20
   4272c:	bl	54b0 <Perl_save_pushptr@plt>
   42730:	ldr	x1, [x19, #160]
   42734:	cbz	x1, 42744 <my_regprop@@Base+0x8480>
   42738:	mov	w2, #0xa                   	// #10
   4273c:	mov	x0, x20
   42740:	bl	54b0 <Perl_save_pushptr@plt>
   42744:	ldr	x1, [x19, #168]
   42748:	cbz	x1, 42758 <my_regprop@@Base+0x8494>
   4274c:	mov	w2, #0xa                   	// #10
   42750:	mov	x0, x20
   42754:	bl	54b0 <Perl_save_pushptr@plt>
   42758:	ldr	x0, [x19, #64]
   4275c:	ldr	x1, [x19, #72]
   42760:	sub	x1, x0, x1
   42764:	ldr	x0, [x19, #80]
   42768:	add	x0, x0, x1
   4276c:	ldr	x2, [x19, #16]
   42770:	cmp	x0, x2
   42774:	b.hi	427cc <my_regprop@@Base+0x8508>  // b.pmore
   42778:	ldr	x7, [x19, #8]
   4277c:	subs	x4, x0, x7
   42780:	b.mi	427dc <my_regprop@@Base+0x8518>  // b.first
   42784:	mov	x6, x4
   42788:	sub	x3, x2, x0
   4278c:	ldr	w1, [x19, #192]
   42790:	cmp	w1, #0x0
   42794:	cset	w1, ne  // ne = any
   42798:	cmp	x0, x2
   4279c:	csel	x0, x0, x2, ls  // ls = plast
   427a0:	str	x0, [sp, #16]
   427a4:	str	x3, [sp, #8]
   427a8:	str	w1, [sp]
   427ac:	mov	w5, w1
   427b0:	mov	w4, #0x4e                  	// #78
   427b4:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   427b8:	add	x3, x3, #0x5d8
   427bc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   427c0:	add	x2, x2, #0x3f0
   427c4:	mov	x0, x20
   427c8:	bl	273ac <my_regexec@@Base+0x3eb8>
   427cc:	ldr	x7, [x19, #8]
   427d0:	sub	x6, x2, x7
   427d4:	mov	x3, #0x0                   	// #0
   427d8:	b	4278c <my_regprop@@Base+0x84c8>
   427dc:	ldr	x6, [x19, #48]
   427e0:	ldr	x5, [x19, #56]
   427e4:	sub	w5, w5, w6
   427e8:	mov	w3, #0x3201                	// #12801
   427ec:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   427f0:	add	x2, x2, #0xfb8
   427f4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   427f8:	add	x1, x1, #0x870
   427fc:	mov	x0, x20
   42800:	bl	5420 <Perl_croak@plt>
   42804:	ldr	x0, [sp, #152]
   42808:	ldr	x1, [sp, #160]
   4280c:	sub	x0, x0, x1
   42810:	str	x0, [sp, #168]
   42814:	cmp	x0, #0x1
   42818:	b.eq	42918 <my_regprop@@Base+0x8654>  // b.none
   4281c:	ldr	x0, [sp, #168]
   42820:	cmp	x0, #0x1
   42824:	b.le	42840 <my_regprop@@Base+0x857c>
   42828:	mov	x2, #0x2                   	// #2
   4282c:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   42830:	add	x1, x1, #0x428
   42834:	ldr	x0, [sp, #160]
   42838:	bl	51b0 <strncmp@plt>
   4283c:	cbz	w0, 42ef0 <my_regprop@@Base+0x8c2c>
   42840:	ldr	x0, [x19, #320]
   42844:	cbz	x0, 42a44 <my_regprop@@Base+0x8780>
   42848:	mov	w6, #0x0                   	// #0
   4284c:	mov	x5, #0x0                   	// #0
   42850:	mov	w4, #0x20                  	// #32
   42854:	ldr	w3, [sp, #168]
   42858:	ldr	x2, [x19, #64]
   4285c:	ldr	x1, [x19, #320]
   42860:	mov	x0, x20
   42864:	bl	57a0 <Perl_hv_common_key_len@plt>
   42868:	cbz	x0, 42a58 <my_regprop@@Base+0x8794>
   4286c:	ldr	x27, [x0]
   42870:	ldr	w0, [x27, #12]
   42874:	and	w1, w0, #0x3ffc00
   42878:	and	w1, w1, #0xffe007ff
   4287c:	cmp	w1, #0x400
   42880:	b.ne	42cd0 <my_regprop@@Base+0x8a0c>  // b.any
   42884:	and	w2, w0, #0xf
   42888:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4288c:	ldr	x1, [x1, #3888]
   42890:	ldrb	w1, [x1, w2, uxtw]
   42894:	cbz	w1, 42bc0 <my_regprop@@Base+0x88fc>
   42898:	and	w1, w0, #0xc000
   4289c:	cmp	w1, #0x8, lsl #12
   428a0:	b.eq	42be4 <my_regprop@@Base+0x8920>  // b.none
   428a4:	and	w0, w0, #0xff
   428a8:	cmp	w0, #0xf
   428ac:	b.eq	42c68 <my_regprop@@Base+0x89a4>  // b.none
   428b0:	ldr	x0, [x27]
   428b4:	ldr	x0, [x0, #16]
   428b8:	str	x0, [sp, #208]
   428bc:	ldr	x0, [x27, #16]
   428c0:	ldr	x2, [sp, #208]
   428c4:	cbz	x2, 42d64 <my_regprop@@Base+0x8aa0>
   428c8:	ldr	w1, [x27, #12]
   428cc:	mov	x3, #0x1                   	// #1
   428d0:	and	w4, w1, #0x20000000
   428d4:	tbz	w1, #29, 428e8 <my_regprop@@Base+0x8624>
   428d8:	ldrb	w3, [x0]
   428dc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   428e0:	ldr	x1, [x1, #4064]
   428e4:	ldrb	w3, [x1, w3, sxtw]
   428e8:	cmp	x2, x3
   428ec:	b.hi	42d64 <my_regprop@@Base+0x8aa0>  // b.pmore
   428f0:	cbz	x25, 42ce8 <my_regprop@@Base+0x8a24>
   428f4:	cbnz	w4, 42cf8 <my_regprop@@Base+0x8a34>
   428f8:	ldrb	w1, [x0]
   428fc:	str	x1, [x25]
   42900:	ldr	x0, [sp, #152]
   42904:	str	x0, [x19, #64]
   42908:	mov	x1, x19
   4290c:	mov	x0, x20
   42910:	bl	269a4 <my_regexec@@Base+0x34b0>
   42914:	b	437a4 <my_regprop@@Base+0x94e0>
   42918:	ldr	x0, [sp, #144]
   4291c:	ldrb	w0, [x0, #1]
   42920:	cmp	w0, #0x5f
   42924:	b.ne	42840 <my_regprop@@Base+0x857c>  // b.any
   42928:	ldr	x0, [sp, #152]
   4292c:	str	x0, [x19, #64]
   42930:	cbz	w28, 42a14 <my_regprop@@Base+0x8750>
   42934:	add	x0, x0, #0x1
   42938:	str	x0, [x19, #64]
   4293c:	ldr	x1, [x19, #24]
   42940:	cbz	x1, 42950 <my_regprop@@Base+0x868c>
   42944:	mov	w2, #0xb                   	// #11
   42948:	mov	x0, x20
   4294c:	bl	54b0 <Perl_save_pushptr@plt>
   42950:	ldr	x1, [x19, #160]
   42954:	cbz	x1, 42964 <my_regprop@@Base+0x86a0>
   42958:	mov	w2, #0xa                   	// #10
   4295c:	mov	x0, x20
   42960:	bl	54b0 <Perl_save_pushptr@plt>
   42964:	ldr	x1, [x19, #168]
   42968:	cbz	x1, 42978 <my_regprop@@Base+0x86b4>
   4296c:	mov	w2, #0xa                   	// #10
   42970:	mov	x0, x20
   42974:	bl	54b0 <Perl_save_pushptr@plt>
   42978:	ldr	x0, [x19, #64]
   4297c:	ldr	x1, [x19, #72]
   42980:	sub	x1, x0, x1
   42984:	ldr	x0, [x19, #80]
   42988:	add	x0, x0, x1
   4298c:	ldr	x1, [x19, #16]
   42990:	cmp	x0, x1
   42994:	b.hi	429dc <my_regprop@@Base+0x8718>  // b.pmore
   42998:	ldr	x5, [x19, #8]
   4299c:	sub	x7, x1, x0
   429a0:	subs	x4, x0, x5
   429a4:	b.mi	429ec <my_regprop@@Base+0x8728>  // b.first
   429a8:	ldr	w2, [x19, #192]
   429ac:	cmp	w2, #0x0
   429b0:	cset	w3, ne  // ne = any
   429b4:	cmp	x0, x1
   429b8:	csel	x0, x0, x1, ls  // ls = plast
   429bc:	str	x0, [sp]
   429c0:	mov	w6, w3
   429c4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   429c8:	add	x2, x2, #0x410
   429cc:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   429d0:	add	x1, x1, #0x3a8
   429d4:	mov	x0, x20
   429d8:	bl	5420 <Perl_croak@plt>
   429dc:	ldr	x5, [x19, #8]
   429e0:	sub	x4, x1, x5
   429e4:	mov	x7, #0x0                   	// #0
   429e8:	b	429a8 <my_regprop@@Base+0x86e4>
   429ec:	ldr	x6, [x19, #48]
   429f0:	ldr	x5, [x19, #56]
   429f4:	sub	w5, w5, w6
   429f8:	mov	w3, #0x320e                	// #12814
   429fc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   42a00:	add	x2, x2, #0xfb8
   42a04:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   42a08:	add	x1, x1, #0x870
   42a0c:	mov	x0, x20
   42a10:	bl	5420 <Perl_croak@plt>
   42a14:	cbz	x22, 42a1c <my_regprop@@Base+0x8758>
   42a18:	str	wzr, [x22]
   42a1c:	mov	x1, x19
   42a20:	mov	x0, x20
   42a24:	bl	269a4 <my_regexec@@Base+0x34b0>
   42a28:	cbz	x21, 4365c <my_regprop@@Base+0x9398>
   42a2c:	mov	w2, #0x2f                  	// #47
   42a30:	mov	x1, x19
   42a34:	mov	x0, x20
   42a38:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   42a3c:	str	x0, [x21]
   42a40:	b	437a4 <my_regprop@@Base+0x94e0>
   42a44:	mov	w1, #0xc                   	// #12
   42a48:	mov	x0, x20
   42a4c:	bl	57e0 <Perl_newSV_type@plt>
   42a50:	str	x0, [x19, #320]
   42a54:	b	42848 <my_regprop@@Base+0x8584>
   42a58:	str	xzr, [sp, #208]
   42a5c:	ldr	w0, [x19, #192]
   42a60:	cmp	w0, #0x0
   42a64:	add	x4, sp, #0xd0
   42a68:	cset	w3, ne  // ne = any
   42a6c:	ldr	x28, [sp, #152]
   42a70:	mov	x2, x28
   42a74:	ldr	x1, [x19, #64]
   42a78:	mov	x0, x20
   42a7c:	bl	4f80 <Perl_get_and_check_backslash_N_name@plt>
   42a80:	mov	x27, x0
   42a84:	ldr	x0, [sp, #208]
   42a88:	cbz	x0, 42b64 <my_regprop@@Base+0x88a0>
   42a8c:	str	x28, [x19, #64]
   42a90:	ldr	x1, [x19, #24]
   42a94:	cbz	x1, 42aa4 <my_regprop@@Base+0x87e0>
   42a98:	mov	w2, #0xb                   	// #11
   42a9c:	mov	x0, x20
   42aa0:	bl	54b0 <Perl_save_pushptr@plt>
   42aa4:	ldr	x1, [x19, #160]
   42aa8:	cbz	x1, 42ab8 <my_regprop@@Base+0x87f4>
   42aac:	mov	w2, #0xa                   	// #10
   42ab0:	mov	x0, x20
   42ab4:	bl	54b0 <Perl_save_pushptr@plt>
   42ab8:	ldr	x1, [x19, #168]
   42abc:	cbz	x1, 42acc <my_regprop@@Base+0x8808>
   42ac0:	mov	w2, #0xa                   	// #10
   42ac4:	mov	x0, x20
   42ac8:	bl	54b0 <Perl_save_pushptr@plt>
   42acc:	ldr	x0, [x19, #64]
   42ad0:	ldr	x1, [x19, #72]
   42ad4:	sub	x1, x0, x1
   42ad8:	ldr	x0, [x19, #80]
   42adc:	add	x0, x0, x1
   42ae0:	ldr	x1, [x19, #16]
   42ae4:	cmp	x0, x1
   42ae8:	b.hi	42b2c <my_regprop@@Base+0x8868>  // b.pmore
   42aec:	ldr	x5, [x19, #8]
   42af0:	sub	x7, x1, x0
   42af4:	subs	x4, x0, x5
   42af8:	b.mi	42b3c <my_regprop@@Base+0x8878>  // b.first
   42afc:	ldr	w2, [x19, #192]
   42b00:	cmp	w2, #0x0
   42b04:	cset	w3, ne  // ne = any
   42b08:	cmp	x0, x1
   42b0c:	csel	x0, x0, x1, ls  // ls = plast
   42b10:	str	x0, [sp]
   42b14:	mov	w6, w3
   42b18:	ldr	x2, [sp, #208]
   42b1c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   42b20:	add	x1, x1, #0x3a8
   42b24:	mov	x0, x20
   42b28:	bl	5420 <Perl_croak@plt>
   42b2c:	ldr	x5, [x19, #8]
   42b30:	sub	x4, x1, x5
   42b34:	mov	x7, #0x0                   	// #0
   42b38:	b	42afc <my_regprop@@Base+0x8838>
   42b3c:	ldr	x6, [x19, #48]
   42b40:	ldr	x5, [x19, #56]
   42b44:	sub	w5, w5, w6
   42b48:	mov	w3, #0x3241                	// #12865
   42b4c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   42b50:	add	x2, x2, #0xfb8
   42b54:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   42b58:	add	x1, x1, #0x870
   42b5c:	mov	x0, x20
   42b60:	bl	5420 <Perl_croak@plt>
   42b64:	cbz	x27, 42b9c <my_regprop@@Base+0x88d8>
   42b68:	mov	w6, #0x0                   	// #0
   42b6c:	mov	x5, x27
   42b70:	mov	w4, #0x24                  	// #36
   42b74:	ldr	w3, [sp, #168]
   42b78:	ldr	x2, [x19, #64]
   42b7c:	ldr	x1, [x19, #320]
   42b80:	mov	x0, x20
   42b84:	bl	57a0 <Perl_hv_common_key_len@plt>
   42b88:	cbnz	x0, 42870 <my_regprop@@Base+0x85ac>
   42b8c:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   42b90:	add	x1, x1, #0x440
   42b94:	mov	x0, x20
   42b98:	bl	5420 <Perl_croak@plt>
   42b9c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42ba0:	add	x3, x3, #0xc10
   42ba4:	add	x3, x3, #0x860
   42ba8:	mov	w2, #0x3245                	// #12869
   42bac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42bb0:	add	x1, x1, #0xfb8
   42bb4:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   42bb8:	add	x0, x0, #0x430
   42bbc:	bl	58e0 <__assert_fail@plt>
   42bc0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42bc4:	add	x3, x3, #0xc10
   42bc8:	add	x3, x3, #0x860
   42bcc:	mov	w2, #0x3250                	// #12880
   42bd0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42bd4:	add	x1, x1, #0xfb8
   42bd8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   42bdc:	add	x0, x0, #0xe40
   42be0:	bl	58e0 <__assert_fail@plt>
   42be4:	and	w2, w0, #0xff
   42be8:	sub	w2, w2, #0x9
   42bec:	cmp	w2, #0x1
   42bf0:	b.ls	42c44 <my_regprop@@Base+0x8980>  // b.plast
   42bf4:	and	w0, w0, #0xff
   42bf8:	cmp	w0, #0xf
   42bfc:	b.eq	42c68 <my_regprop@@Base+0x89a4>  // b.none
   42c00:	ldr	x2, [x27]
   42c04:	ldr	x2, [x2, #16]
   42c08:	str	x2, [sp, #208]
   42c0c:	cmp	w1, #0x8, lsl #12
   42c10:	b.ne	428bc <my_regprop@@Base+0x85f8>  // b.any
   42c14:	sub	w0, w0, #0x9
   42c18:	cmp	w0, #0x1
   42c1c:	b.hi	428bc <my_regprop@@Base+0x85f8>  // b.pmore
   42c20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42c24:	add	x3, x3, #0xc10
   42c28:	add	x3, x3, #0x860
   42c2c:	mov	w2, #0x3250                	// #12880
   42c30:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42c34:	add	x1, x1, #0xfb8
   42c38:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   42c3c:	add	x0, x0, #0xd40
   42c40:	bl	58e0 <__assert_fail@plt>
   42c44:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42c48:	add	x3, x3, #0xc10
   42c4c:	add	x3, x3, #0x860
   42c50:	mov	w2, #0x3250                	// #12880
   42c54:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42c58:	add	x1, x1, #0xfb8
   42c5c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   42c60:	add	x0, x0, #0xe70
   42c64:	bl	58e0 <__assert_fail@plt>
   42c68:	ldr	x0, [x27]
   42c6c:	ldrb	w1, [x0, #129]
   42c70:	tbz	w1, #6, 42cac <my_regprop@@Base+0x89e8>
   42c74:	ldr	x0, [x0, #16]
   42c78:	str	x0, [sp, #208]
   42c7c:	ldr	x0, [x27]
   42c80:	ldrb	w0, [x0, #129]
   42c84:	tbnz	w0, #6, 428bc <my_regprop@@Base+0x85f8>
   42c88:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42c8c:	add	x3, x3, #0xc10
   42c90:	add	x3, x3, #0x860
   42c94:	mov	w2, #0x3250                	// #12880
   42c98:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42c9c:	add	x1, x1, #0xfb8
   42ca0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   42ca4:	add	x0, x0, #0xd58
   42ca8:	bl	58e0 <__assert_fail@plt>
   42cac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   42cb0:	add	x3, x3, #0xc10
   42cb4:	add	x3, x3, #0x860
   42cb8:	mov	w2, #0x3250                	// #12880
   42cbc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   42cc0:	add	x1, x1, #0xfb8
   42cc4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   42cc8:	add	x0, x0, #0xe88
   42ccc:	bl	58e0 <__assert_fail@plt>
   42cd0:	mov	w3, #0x2                   	// #2
   42cd4:	add	x2, sp, #0xd0
   42cd8:	mov	x1, x27
   42cdc:	mov	x0, x20
   42ce0:	bl	5200 <Perl_sv_2pv_flags@plt>
   42ce4:	b	428c0 <my_regprop@@Base+0x85fc>
   42ce8:	ldr	x0, [sp, #192]
   42cec:	str	x0, [x19, #64]
   42cf0:	mov	w23, #0x0                   	// #0
   42cf4:	b	437a4 <my_regprop@@Base+0x94e0>
   42cf8:	ldrb	w1, [x0]
   42cfc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   42d00:	ldr	x2, [x2, #4064]
   42d04:	ldrb	w3, [x0]
   42d08:	ldrb	w5, [x2, x3]
   42d0c:	ldrb	w4, [x2, x3]
   42d10:	add	x3, x0, x4
   42d14:	cmp	x4, #0x1
   42d18:	b.eq	42d5c <my_regprop@@Base+0x8a98>  // b.none
   42d1c:	sub	w5, w5, #0x2
   42d20:	mov	w2, #0x1f                  	// #31
   42d24:	asr	w2, w2, w5
   42d28:	cmp	x4, #0x7
   42d2c:	csel	w2, w2, wzr, cc  // cc = lo, ul, last
   42d30:	and	w1, w1, w2
   42d34:	sxtw	x1, w1
   42d38:	add	x0, x0, #0x1
   42d3c:	cmp	x3, x0
   42d40:	b.ls	428fc <my_regprop@@Base+0x8638>  // b.plast
   42d44:	ldrb	w2, [x0], #1
   42d48:	bfi	x2, x1, #6, #58
   42d4c:	mov	x1, x2
   42d50:	cmp	x3, x0
   42d54:	b.ne	42d44 <my_regprop@@Base+0x8a80>  // b.any
   42d58:	b	428fc <my_regprop@@Base+0x8638>
   42d5c:	and	x1, x1, #0xff
   42d60:	b	428fc <my_regprop@@Base+0x8638>
   42d64:	cbz	x22, 43664 <my_regprop@@Base+0x93a0>
   42d68:	str	wzr, [x22]
   42d6c:	ldr	w3, [x27, #12]
   42d70:	mov	w1, w2
   42d74:	tbnz	w3, #29, 42ed0 <my_regprop@@Base+0x8c0c>
   42d78:	str	w1, [x22]
   42d7c:	cbz	x21, 42ee8 <my_regprop@@Base+0x8c24>
   42d80:	mov	x2, #0x2                   	// #2
   42d84:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   42d88:	add	x1, x1, #0x468
   42d8c:	mov	x0, x20
   42d90:	bl	59a0 <Perl_newSVpvn@plt>
   42d94:	mov	x22, x0
   42d98:	str	x0, [sp, #160]
   42d9c:	mov	w3, #0x2                   	// #2
   42da0:	mov	x2, x27
   42da4:	mov	x1, x0
   42da8:	mov	x0, x20
   42dac:	bl	5690 <Perl_sv_catsv_flags@plt>
   42db0:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   42db4:	add	x2, x2, #0x868
   42db8:	mov	x1, x22
   42dbc:	mov	x0, x20
   42dc0:	bl	57f0 <Perl_sv_catpv@plt>
   42dc4:	ldr	x25, [x19, #48]
   42dc8:	ldr	x22, [x19, #56]
   42dcc:	ldr	x0, [sp, #160]
   42dd0:	ldr	w0, [x0, #12]
   42dd4:	and	w2, w0, #0xf
   42dd8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   42ddc:	ldr	x1, [x1, #3888]
   42de0:	ldrb	w1, [x1, w2, uxtw]
   42de4:	cbz	w1, 43488 <my_regprop@@Base+0x91c4>
   42de8:	and	w1, w0, #0xc000
   42dec:	cmp	w1, #0x8, lsl #12
   42df0:	b.eq	434ac <my_regprop@@Base+0x91e8>  // b.none
   42df4:	and	w0, w0, #0xff
   42df8:	cmp	w0, #0xf
   42dfc:	b.eq	434e0 <my_regprop@@Base+0x921c>  // b.none
   42e00:	ldr	x0, [sp, #160]
   42e04:	ldr	x1, [x0, #16]
   42e08:	str	x1, [x19, #48]
   42e0c:	str	x1, [x19, #64]
   42e10:	ldr	w0, [x0, #12]
   42e14:	and	w3, w0, #0xf
   42e18:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   42e1c:	ldr	x2, [x2, #3888]
   42e20:	ldrb	w23, [x2, w3, uxtw]
   42e24:	cbz	w23, 43514 <my_regprop@@Base+0x9250>
   42e28:	and	w2, w0, #0xc000
   42e2c:	cmp	w2, #0x8, lsl #12
   42e30:	b.eq	43538 <my_regprop@@Base+0x9274>  // b.none
   42e34:	and	w0, w0, #0xff
   42e38:	cmp	w0, #0xf
   42e3c:	b.ne	42e50 <my_regprop@@Base+0x8b8c>  // b.any
   42e40:	ldr	x0, [sp, #160]
   42e44:	ldr	x0, [x0]
   42e48:	ldrb	w0, [x0, #129]
   42e4c:	tbz	w0, #6, 4356c <my_regprop@@Base+0x92a8>
   42e50:	ldr	x27, [sp, #160]
   42e54:	ldr	x0, [x27]
   42e58:	ldr	x0, [x0, #16]
   42e5c:	add	x1, x1, x0
   42e60:	str	x1, [x19, #56]
   42e64:	str	xzr, [x19, #72]
   42e68:	add	w4, w26, #0x1
   42e6c:	add	x3, sp, #0xd0
   42e70:	mov	w2, #0x1                   	// #1
   42e74:	mov	x1, x19
   42e78:	mov	x0, x20
   42e7c:	bl	3c268 <my_regprop@@Base+0x1fa4>
   42e80:	str	x0, [x21]
   42e84:	ldr	x0, [x19, #8]
   42e88:	str	x0, [x19, #72]
   42e8c:	str	x25, [x19, #48]
   42e90:	ldr	x0, [sp, #152]
   42e94:	str	x0, [x19, #64]
   42e98:	str	x22, [x19, #56]
   42e9c:	ldr	w2, [x27, #8]
   42ea0:	cmp	w2, #0x1
   42ea4:	b.ls	43590 <my_regprop@@Base+0x92cc>  // b.plast
   42ea8:	sub	w2, w2, #0x1
   42eac:	str	w2, [x27, #8]
   42eb0:	ldr	x0, [x21]
   42eb4:	cbnz	x0, 43630 <my_regprop@@Base+0x936c>
   42eb8:	ldr	w0, [sp, #208]
   42ebc:	ands	w0, w0, #0x60
   42ec0:	b.eq	435a0 <my_regprop@@Base+0x92dc>  // b.none
   42ec4:	str	w0, [x24]
   42ec8:	mov	w23, #0x0                   	// #0
   42ecc:	b	437a4 <my_regprop@@Base+0x94e0>
   42ed0:	add	x2, x0, x2
   42ed4:	mov	x1, x0
   42ed8:	mov	x0, x20
   42edc:	bl	5720 <Perl_utf8_length@plt>
   42ee0:	mov	w1, w0
   42ee4:	b	42d78 <my_regprop@@Base+0x8ab4>
   42ee8:	mov	w23, #0x0                   	// #0
   42eec:	b	437a4 <my_regprop@@Base+0x94e0>
   42ef0:	ldr	x0, [sp, #144]
   42ef4:	add	x0, x0, #0x3
   42ef8:	str	x0, [x19, #64]
   42efc:	str	xzr, [sp, #184]
   42f00:	str	xzr, [sp, #160]
   42f04:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   42f08:	ldr	x0, [x0, #3880]
   42f0c:	str	x0, [sp, #168]
   42f10:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   42f14:	ldr	x28, [x0, #3880]
   42f18:	ldr	x1, [x19, #64]
   42f1c:	str	x1, [sp, #176]
   42f20:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   42f24:	ldr	x0, [x0, #3880]
   42f28:	ldrb	w1, [x1]
   42f2c:	ldr	w0, [x0, x1, lsl #2]
   42f30:	tbz	w0, #12, 42f48 <my_regprop@@Base+0x8c84>
   42f34:	mov	x0, #0x0                   	// #0
   42f38:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   42f3c:	ldr	x4, [x1, #3880]
   42f40:	mov	x5, #0x7ffffffffffffff     	// #576460752303423487
   42f44:	b	431b8 <my_regprop@@Base+0x8ef4>
   42f48:	ldr	x0, [sp, #176]
   42f4c:	add	x0, x0, #0x1
   42f50:	str	x0, [x19, #64]
   42f54:	ldr	x1, [x19, #24]
   42f58:	cbz	x1, 42f68 <my_regprop@@Base+0x8ca4>
   42f5c:	mov	w2, #0xb                   	// #11
   42f60:	mov	x0, x20
   42f64:	bl	54b0 <Perl_save_pushptr@plt>
   42f68:	ldr	x1, [x19, #160]
   42f6c:	cbz	x1, 42f7c <my_regprop@@Base+0x8cb8>
   42f70:	mov	w2, #0xa                   	// #10
   42f74:	mov	x0, x20
   42f78:	bl	54b0 <Perl_save_pushptr@plt>
   42f7c:	ldr	x1, [x19, #168]
   42f80:	cbz	x1, 42f90 <my_regprop@@Base+0x8ccc>
   42f84:	mov	w2, #0xa                   	// #10
   42f88:	mov	x0, x20
   42f8c:	bl	54b0 <Perl_save_pushptr@plt>
   42f90:	ldr	x0, [x19, #64]
   42f94:	ldr	x1, [x19, #72]
   42f98:	sub	x1, x0, x1
   42f9c:	ldr	x0, [x19, #80]
   42fa0:	add	x0, x0, x1
   42fa4:	ldr	x1, [x19, #16]
   42fa8:	cmp	x0, x1
   42fac:	b.hi	42ff4 <my_regprop@@Base+0x8d30>  // b.pmore
   42fb0:	ldr	x5, [x19, #8]
   42fb4:	subs	x4, x0, x5
   42fb8:	b.mi	43004 <my_regprop@@Base+0x8d40>  // b.first
   42fbc:	sub	x7, x1, x0
   42fc0:	ldr	w2, [x19, #192]
   42fc4:	cmp	w2, #0x0
   42fc8:	cset	w3, ne  // ne = any
   42fcc:	cmp	x0, x1
   42fd0:	csel	x0, x0, x1, ls  // ls = plast
   42fd4:	str	x0, [sp]
   42fd8:	mov	w6, w3
   42fdc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   42fe0:	add	x2, x2, #0x470
   42fe4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   42fe8:	add	x1, x1, #0x3a8
   42fec:	mov	x0, x20
   42ff0:	bl	5420 <Perl_croak@plt>
   42ff4:	ldr	x5, [x19, #8]
   42ff8:	sub	x4, x1, x5
   42ffc:	mov	x7, #0x0                   	// #0
   43000:	b	42fc0 <my_regprop@@Base+0x8cfc>
   43004:	ldr	x6, [x19, #48]
   43008:	ldr	x5, [x19, #56]
   4300c:	sub	w5, w5, w6
   43010:	mov	w3, #0x32a0                	// #12960
   43014:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   43018:	add	x2, x2, #0xfb8
   4301c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   43020:	add	x1, x1, #0x870
   43024:	mov	x0, x20
   43028:	bl	5420 <Perl_croak@plt>
   4302c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   43030:	ldr	x2, [x2, #3880]
   43034:	ldr	x0, [x19, #64]
   43038:	add	x1, x0, #0x1
   4303c:	str	x1, [x19, #64]
   43040:	ldrb	w1, [x0, #1]
   43044:	ldr	w0, [x2, w1, sxtw #2]
   43048:	ubfx	x0, x0, #12, #1
   4304c:	cmp	w1, #0x5f
   43050:	csinc	w0, w0, wzr, ne  // ne = any
   43054:	cbnz	w0, 43034 <my_regprop@@Base+0x8d70>
   43058:	ldr	x1, [x19, #24]
   4305c:	cbz	x1, 4306c <my_regprop@@Base+0x8da8>
   43060:	mov	w2, #0xb                   	// #11
   43064:	mov	x0, x20
   43068:	bl	54b0 <Perl_save_pushptr@plt>
   4306c:	ldr	x1, [x19, #160]
   43070:	cbz	x1, 43080 <my_regprop@@Base+0x8dbc>
   43074:	mov	w2, #0xa                   	// #10
   43078:	mov	x0, x20
   4307c:	bl	54b0 <Perl_save_pushptr@plt>
   43080:	ldr	x1, [x19, #168]
   43084:	cbz	x1, 43094 <my_regprop@@Base+0x8dd0>
   43088:	mov	w2, #0xa                   	// #10
   4308c:	mov	x0, x20
   43090:	bl	54b0 <Perl_save_pushptr@plt>
   43094:	ldr	x8, [x19, #64]
   43098:	ldr	x0, [x19, #72]
   4309c:	sub	x1, x8, x0
   430a0:	ldr	x0, [x19, #80]
   430a4:	add	x0, x0, x1
   430a8:	ldr	x3, [x19, #16]
   430ac:	cmp	x0, x3
   430b0:	b.hi	43114 <my_regprop@@Base+0x8e50>  // b.pmore
   430b4:	ldr	x2, [x19, #8]
   430b8:	sub	x5, x3, x0
   430bc:	subs	x4, x0, x2
   430c0:	b.mi	43124 <my_regprop@@Base+0x8e60>  // b.first
   430c4:	ldr	w1, [x19, #192]
   430c8:	cmp	w1, #0x0
   430cc:	cset	w1, ne  // ne = any
   430d0:	cmp	x0, x3
   430d4:	csel	x0, x0, x3, ls  // ls = plast
   430d8:	str	x0, [sp, #32]
   430dc:	str	x5, [sp, #24]
   430e0:	str	w1, [sp, #16]
   430e4:	str	x2, [sp, #8]
   430e8:	str	x4, [sp]
   430ec:	mov	w7, w1
   430f0:	mov	x6, #0x7fffffffffffffff    	// #9223372036854775807
   430f4:	ldr	x5, [sp, #176]
   430f8:	sub	w4, w8, w5
   430fc:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   43100:	add	x3, x3, #0x5d8
   43104:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   43108:	add	x2, x2, #0x498
   4310c:	mov	x0, x20
   43110:	bl	273ac <my_regexec@@Base+0x3eb8>
   43114:	ldr	x2, [x19, #8]
   43118:	sub	x4, x3, x2
   4311c:	mov	x5, #0x0                   	// #0
   43120:	b	430c4 <my_regprop@@Base+0x8e00>
   43124:	ldr	x6, [x19, #48]
   43128:	ldr	x5, [x19, #56]
   4312c:	sub	w5, w5, w6
   43130:	mov	w3, #0x32b3                	// #12979
   43134:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   43138:	add	x2, x2, #0xfb8
   4313c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   43140:	add	x1, x1, #0x870
   43144:	mov	x0, x20
   43148:	bl	5420 <Perl_croak@plt>
   4314c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43150:	add	x3, x3, #0xc10
   43154:	add	x3, x3, #0x860
   43158:	mov	w2, #0x32ba                	// #12986
   4315c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43160:	add	x1, x1, #0xfb8
   43164:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   43168:	add	x0, x0, #0x4e0
   4316c:	bl	58e0 <__assert_fail@plt>
   43170:	add	x1, x2, #0x1
   43174:	str	x1, [x19, #64]
   43178:	ldrb	w1, [x2]
   4317c:	add	w1, w1, #0x9
   43180:	and	x1, x1, #0xf
   43184:	add	x0, x0, x1
   43188:	ldr	x1, [x19, #64]
   4318c:	ldrb	w2, [x1]
   43190:	cmp	w2, #0x5f
   43194:	b.eq	431f4 <my_regprop@@Base+0x8f30>  // b.none
   43198:	ldr	x3, [x19, #64]
   4319c:	ldrb	w1, [x3]
   431a0:	mov	w6, w1
   431a4:	ldr	w2, [x28, w1, sxtw #2]
   431a8:	ubfx	x23, x2, #12, #1
   431ac:	tbz	w2, #12, 43210 <my_regprop@@Base+0x8f4c>
   431b0:	cmp	x0, x5
   431b4:	b.hi	4302c <my_regprop@@Base+0x8d68>  // b.pmore
   431b8:	ldr	x2, [x19, #64]
   431bc:	ldrb	w1, [x2]
   431c0:	ldr	w3, [x4, w1, sxtw #2]
   431c4:	ubfx	x6, x3, #12, #1
   431c8:	str	x6, [sp, #144]
   431cc:	tbz	w3, #12, 4314c <my_regprop@@Base+0x8e88>
   431d0:	lsl	x0, x0, #4
   431d4:	sub	w1, w1, #0x30
   431d8:	cmp	w1, #0x9
   431dc:	b.hi	43170 <my_regprop@@Base+0x8eac>  // b.pmore
   431e0:	add	x1, x2, #0x1
   431e4:	str	x1, [x19, #64]
   431e8:	ldrb	w1, [x2]
   431ec:	and	x1, x1, #0xf
   431f0:	b	43184 <my_regprop@@Base+0x8ec0>
   431f4:	ldrb	w2, [x1, #1]
   431f8:	ldr	x3, [sp, #168]
   431fc:	ldr	w2, [x3, x2, lsl #2]
   43200:	tbz	w2, #12, 43198 <my_regprop@@Base+0x8ed4>
   43204:	add	x1, x1, #0x1
   43208:	str	x1, [x19, #64]
   4320c:	b	43198 <my_regprop@@Base+0x8ed4>
   43210:	ldr	x2, [sp, #152]
   43214:	cmp	x3, x2
   43218:	b.cc	43254 <my_regprop@@Base+0x8f90>  // b.lo, b.ul, b.last
   4321c:	ldr	x1, [sp, #184]
   43220:	cbnz	x1, 43284 <my_regprop@@Base+0x8fc0>
   43224:	cbz	x25, 43248 <my_regprop@@Base+0x8f84>
   43228:	str	x0, [x25]
   4322c:	ldr	x0, [sp, #152]
   43230:	str	x0, [x19, #64]
   43234:	mov	x1, x19
   43238:	mov	x0, x20
   4323c:	bl	269a4 <my_regexec@@Base+0x34b0>
   43240:	ldr	w23, [sp, #144]
   43244:	b	437a4 <my_regprop@@Base+0x94e0>
   43248:	ldr	x0, [sp, #192]
   4324c:	str	x0, [x19, #64]
   43250:	b	437a4 <my_regprop@@Base+0x94e0>
   43254:	cmp	w1, #0x2e
   43258:	b.ne	4328c <my_regprop@@Base+0x8fc8>  // b.any
   4325c:	add	x0, x3, #0x1
   43260:	ldr	x1, [sp, #152]
   43264:	cmp	x1, x0
   43268:	b.ls	43678 <my_regprop@@Base+0x93b4>  // b.plast
   4326c:	orr	x0, x21, x22
   43270:	cbz	x0, 437a4 <my_regprop@@Base+0x94e0>
   43274:	ldr	x0, [sp, #184]
   43278:	cmp	x0, #0x0
   4327c:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   43280:	b.ne	4339c <my_regprop@@Base+0x90d8>  // b.any
   43284:	cbz	x21, 4340c <my_regprop@@Base+0x9148>
   43288:	b	433b4 <my_regprop@@Base+0x90f0>
   4328c:	ldr	w0, [x19, #196]
   43290:	cbz	w0, 4335c <my_regprop@@Base+0x9098>
   43294:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   43298:	ldr	x0, [x0, #4064]
   4329c:	ldrb	w0, [x0, w6, sxtw]
   432a0:	add	x3, x3, x0
   432a4:	str	x3, [x19, #64]
   432a8:	ldr	x0, [sp, #152]
   432ac:	cmp	x3, x0
   432b0:	b.cs	43680 <my_regprop@@Base+0x93bc>  // b.hs, b.nlast
   432b4:	ldr	x1, [x19, #24]
   432b8:	cbz	x1, 432c8 <my_regprop@@Base+0x9004>
   432bc:	mov	w2, #0xb                   	// #11
   432c0:	mov	x0, x20
   432c4:	bl	54b0 <Perl_save_pushptr@plt>
   432c8:	ldr	x1, [x19, #160]
   432cc:	cbz	x1, 432dc <my_regprop@@Base+0x9018>
   432d0:	mov	w2, #0xa                   	// #10
   432d4:	mov	x0, x20
   432d8:	bl	54b0 <Perl_save_pushptr@plt>
   432dc:	ldr	x1, [x19, #168]
   432e0:	cbz	x1, 432f0 <my_regprop@@Base+0x902c>
   432e4:	mov	w2, #0xa                   	// #10
   432e8:	mov	x0, x20
   432ec:	bl	54b0 <Perl_save_pushptr@plt>
   432f0:	ldr	x0, [x19, #64]
   432f4:	ldr	x1, [x19, #72]
   432f8:	sub	x1, x0, x1
   432fc:	ldr	x0, [x19, #80]
   43300:	add	x0, x0, x1
   43304:	ldr	x1, [x19, #16]
   43308:	cmp	x0, x1
   4330c:	b.hi	43364 <my_regprop@@Base+0x90a0>  // b.pmore
   43310:	ldr	x5, [x19, #8]
   43314:	subs	x4, x0, x5
   43318:	b.mi	43374 <my_regprop@@Base+0x90b0>  // b.first
   4331c:	sub	x7, x1, x0
   43320:	ldr	w2, [x19, #192]
   43324:	cmp	w2, #0x0
   43328:	cset	w3, ne  // ne = any
   4332c:	cmp	x0, x1
   43330:	csel	x0, x0, x1, ls  // ls = plast
   43334:	str	x0, [sp]
   43338:	mov	w6, w3
   4333c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   43340:	add	x2, x2, #0x470
   43344:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   43348:	add	x1, x1, #0x3a8
   4334c:	mov	x0, x20
   43350:	bl	5420 <Perl_croak@plt>
   43354:	mov	w6, #0x2e                  	// #46
   43358:	b	43294 <my_regprop@@Base+0x8fd0>
   4335c:	mov	x0, #0x1                   	// #1
   43360:	b	432a0 <my_regprop@@Base+0x8fdc>
   43364:	ldr	x5, [x19, #8]
   43368:	sub	x4, x1, x5
   4336c:	mov	x7, #0x0                   	// #0
   43370:	b	43320 <my_regprop@@Base+0x905c>
   43374:	ldr	x6, [x19, #48]
   43378:	ldr	x5, [x19, #56]
   4337c:	sub	w5, w5, w6
   43380:	mov	w3, #0x32e1                	// #13025
   43384:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   43388:	add	x2, x2, #0xfb8
   4338c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   43390:	add	x1, x1, #0x870
   43394:	mov	x0, x20
   43398:	bl	5420 <Perl_croak@plt>
   4339c:	mov	x2, #0x2                   	// #2
   433a0:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   433a4:	add	x1, x1, #0x468
   433a8:	mov	x0, x20
   433ac:	bl	59a0 <Perl_newSVpvn@plt>
   433b0:	str	x0, [sp, #160]
   433b4:	mov	w4, #0x2                   	// #2
   433b8:	mov	x3, #0x3                   	// #3
   433bc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   433c0:	add	x2, x2, #0x598
   433c4:	ldr	x1, [sp, #160]
   433c8:	mov	x0, x20
   433cc:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   433d0:	ldr	x3, [x19, #64]
   433d4:	mov	w4, #0x2                   	// #2
   433d8:	ldr	x0, [sp, #176]
   433dc:	sub	x3, x3, x0
   433e0:	mov	x2, x0
   433e4:	ldr	x1, [sp, #160]
   433e8:	mov	x0, x20
   433ec:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   433f0:	mov	w4, #0x2                   	// #2
   433f4:	mov	x3, #0x1                   	// #1
   433f8:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   433fc:	add	x2, x2, #0x1d0
   43400:	ldr	x1, [sp, #160]
   43404:	mov	x0, x20
   43408:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   4340c:	ldr	x0, [x19, #64]
   43410:	add	x0, x0, #0x1
   43414:	str	x0, [x19, #64]
   43418:	ldr	x1, [sp, #184]
   4341c:	add	x1, x1, #0x2
   43420:	str	x1, [sp, #184]
   43424:	ldr	x1, [sp, #152]
   43428:	cmp	x0, x1
   4342c:	b.cc	42f18 <my_regprop@@Base+0x8c54>  // b.lo, b.ul, b.last
   43430:	cbz	x21, 43454 <my_regprop@@Base+0x9190>
   43434:	mov	w4, #0x2                   	// #2
   43438:	mov	x3, #0x1                   	// #1
   4343c:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   43440:	add	x2, x2, #0x868
   43444:	ldr	x1, [sp, #160]
   43448:	mov	x0, x20
   4344c:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   43450:	b	42dc4 <my_regprop@@Base+0x8b00>
   43454:	cbz	x22, 43464 <my_regprop@@Base+0x91a0>
   43458:	ldr	w0, [sp, #184]
   4345c:	str	w0, [x22]
   43460:	b	437a4 <my_regprop@@Base+0x94e0>
   43464:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43468:	add	x3, x3, #0xc10
   4346c:	add	x3, x3, #0x860
   43470:	mov	w2, #0x3309                	// #13065
   43474:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43478:	add	x1, x1, #0xfb8
   4347c:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   43480:	add	x0, x0, #0x5a0
   43484:	bl	58e0 <__assert_fail@plt>
   43488:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4348c:	add	x3, x3, #0xc10
   43490:	add	x3, x3, #0x860
   43494:	mov	w2, #0x3324                	// #13092
   43498:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4349c:	add	x1, x1, #0xfb8
   434a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   434a4:	add	x0, x0, #0xd10
   434a8:	bl	58e0 <__assert_fail@plt>
   434ac:	and	w1, w0, #0xff
   434b0:	sub	w1, w1, #0x9
   434b4:	cmp	w1, #0x1
   434b8:	b.hi	42df4 <my_regprop@@Base+0x8b30>  // b.pmore
   434bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   434c0:	add	x3, x3, #0xc10
   434c4:	add	x3, x3, #0x860
   434c8:	mov	w2, #0x3324                	// #13092
   434cc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   434d0:	add	x1, x1, #0xfb8
   434d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   434d8:	add	x0, x0, #0xd40
   434dc:	bl	58e0 <__assert_fail@plt>
   434e0:	ldr	x0, [sp, #160]
   434e4:	ldr	x0, [x0]
   434e8:	ldrb	w0, [x0, #129]
   434ec:	tbnz	w0, #6, 42e00 <my_regprop@@Base+0x8b3c>
   434f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   434f4:	add	x3, x3, #0xc10
   434f8:	add	x3, x3, #0x860
   434fc:	mov	w2, #0x3324                	// #13092
   43500:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43504:	add	x1, x1, #0xfb8
   43508:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4350c:	add	x0, x0, #0xd58
   43510:	bl	58e0 <__assert_fail@plt>
   43514:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43518:	add	x3, x3, #0xc10
   4351c:	add	x3, x3, #0x860
   43520:	mov	w2, #0x3325                	// #13093
   43524:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43528:	add	x1, x1, #0xfb8
   4352c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43530:	add	x0, x0, #0xe40
   43534:	bl	58e0 <__assert_fail@plt>
   43538:	and	w2, w0, #0xff
   4353c:	sub	w2, w2, #0x9
   43540:	cmp	w2, #0x1
   43544:	b.hi	42e34 <my_regprop@@Base+0x8b70>  // b.pmore
   43548:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4354c:	add	x3, x3, #0xc10
   43550:	add	x3, x3, #0x860
   43554:	mov	w2, #0x3325                	// #13093
   43558:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4355c:	add	x1, x1, #0xfb8
   43560:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43564:	add	x0, x0, #0xe70
   43568:	bl	58e0 <__assert_fail@plt>
   4356c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43570:	add	x3, x3, #0xc10
   43574:	add	x3, x3, #0x860
   43578:	mov	w2, #0x3325                	// #13093
   4357c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43580:	add	x1, x1, #0xfb8
   43584:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43588:	add	x0, x0, #0xe88
   4358c:	bl	58e0 <__assert_fail@plt>
   43590:	ldr	x1, [sp, #160]
   43594:	mov	x0, x20
   43598:	bl	5860 <Perl_sv_free2@plt>
   4359c:	b	42eb0 <my_regprop@@Base+0x8bec>
   435a0:	ldr	x21, [x19, #16]
   435a4:	ldr	x0, [x19, #8]
   435a8:	sub	x21, x21, x0
   435ac:	ldr	x1, [x19, #24]
   435b0:	cbz	x1, 435c0 <my_regprop@@Base+0x92fc>
   435b4:	mov	w2, #0xb                   	// #11
   435b8:	mov	x0, x20
   435bc:	bl	54b0 <Perl_save_pushptr@plt>
   435c0:	ldr	x1, [x19, #160]
   435c4:	cbz	x1, 435d4 <my_regprop@@Base+0x9310>
   435c8:	mov	w2, #0xa                   	// #10
   435cc:	mov	x0, x20
   435d0:	bl	54b0 <Perl_save_pushptr@plt>
   435d4:	ldr	x1, [x19, #168]
   435d8:	cbz	x1, 435e8 <my_regprop@@Base+0x9324>
   435dc:	mov	w2, #0xa                   	// #10
   435e0:	mov	x0, x20
   435e4:	bl	54b0 <Perl_save_pushptr@plt>
   435e8:	cmp	x21, #0x7f
   435ec:	b.le	43624 <my_regprop@@Base+0x9360>
   435f0:	mov	x21, #0x75                  	// #117
   435f4:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   435f8:	add	x6, x6, #0xfe0
   435fc:	ldr	w0, [x19, #192]
   43600:	cmp	w0, #0x0
   43604:	ldr	x5, [x19, #8]
   43608:	mov	x4, x21
   4360c:	cset	w3, ne  // ne = any
   43610:	ldrsw	x2, [sp, #208]
   43614:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   43618:	add	x1, x1, #0x5b0
   4361c:	mov	x0, x20
   43620:	bl	5420 <Perl_croak@plt>
   43624:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   43628:	add	x6, x6, #0x20
   4362c:	b	435fc <my_regprop@@Base+0x9338>
   43630:	ldr	w0, [sp, #208]
   43634:	and	w1, w0, #0xf
   43638:	ldr	w0, [x24]
   4363c:	orr	w0, w0, w1
   43640:	str	w0, [x24]
   43644:	mov	x1, x19
   43648:	mov	x0, x20
   4364c:	bl	269a4 <my_regexec@@Base+0x34b0>
   43650:	b	437a4 <my_regprop@@Base+0x94e0>
   43654:	mov	w23, #0x0                   	// #0
   43658:	b	437a4 <my_regprop@@Base+0x94e0>
   4365c:	mov	w23, w28
   43660:	b	437a4 <my_regprop@@Base+0x94e0>
   43664:	cbnz	x21, 42d80 <my_regprop@@Base+0x8abc>
   43668:	ldr	x0, [sp, #192]
   4366c:	str	x0, [x19, #64]
   43670:	mov	w23, #0x0                   	// #0
   43674:	b	437a4 <my_regprop@@Base+0x94e0>
   43678:	ldr	w0, [x19, #196]
   4367c:	cbnz	w0, 43354 <my_regprop@@Base+0x9090>
   43680:	ldr	x0, [sp, #152]
   43684:	str	x0, [x19, #64]
   43688:	b	432b4 <my_regprop@@Base+0x8ff0>
   4368c:	mov	w3, #0x0                   	// #0
   43690:	add	x2, sp, #0xc0
   43694:	mov	x1, x19
   43698:	mov	x0, x20
   4369c:	bl	266ac <my_regexec@@Base+0x31b8>
   436a0:	ldr	x0, [sp, #192]
   436a4:	ldrb	w1, [x0]
   436a8:	cmp	w1, #0x7b
   436ac:	b.eq	42534 <my_regprop@@Base+0x8270>  // b.none
   436b0:	str	x0, [x19, #64]
   436b4:	b	43724 <my_regprop@@Base+0x9460>
   436b8:	cbz	x5, 42448 <my_regprop@@Base+0x8184>
   436bc:	cmp	x21, #0x0
   436c0:	cset	w27, ne  // ne = any
   436c4:	cmp	x25, #0x0
   436c8:	cset	w0, ne  // ne = any
   436cc:	cmp	w0, w27
   436d0:	b.eq	424ec <my_regprop@@Base+0x8228>  // b.none
   436d4:	cmp	x21, #0x0
   436d8:	cset	w23, eq  // eq = none
   436dc:	cmp	x22, #0x0
   436e0:	csinc	w23, w23, wzr, ne  // ne = any
   436e4:	cbz	w23, 42510 <my_regprop@@Base+0x824c>
   436e8:	cbz	x22, 4368c <my_regprop@@Base+0x93c8>
   436ec:	mov	w0, #0x1                   	// #1
   436f0:	str	w0, [x22]
   436f4:	mov	w3, #0x0                   	// #0
   436f8:	add	x2, sp, #0xc0
   436fc:	mov	x1, x19
   43700:	mov	x0, x20
   43704:	bl	266ac <my_regexec@@Base+0x31b8>
   43708:	ldr	x0, [sp, #192]
   4370c:	ldrb	w1, [x0]
   43710:	cmp	w1, #0x7b
   43714:	b.eq	42534 <my_regprop@@Base+0x8270>  // b.none
   43718:	str	x0, [x19, #64]
   4371c:	mov	w0, #0xffffffff            	// #-1
   43720:	str	w0, [x22]
   43724:	cbz	x21, 43654 <my_regprop@@Base+0x9390>
   43728:	mov	w2, #0x10                  	// #16
   4372c:	mov	x1, x19
   43730:	mov	x0, x20
   43734:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   43738:	str	x0, [x21]
   4373c:	ldr	w0, [x24]
   43740:	orr	w0, w0, #0x3
   43744:	str	w0, [x24]
   43748:	ldr	w0, [x19, #112]
   4374c:	cmp	w0, #0x9
   43750:	b.gt	4375c <my_regprop@@Base+0x9498>
   43754:	add	w0, w0, #0x1
   43758:	str	w0, [x19, #112]
   4375c:	ldr	w0, [x20, #2368]
   43760:	tbnz	w0, #20, 4376c <my_regprop@@Base+0x94a8>
   43764:	ldr	x0, [sp, #200]
   43768:	tbz	w0, #18, 43784 <my_regprop@@Base+0x94c0>
   4376c:	mov	w3, #0x1                   	// #1
   43770:	ldr	w2, [x21]
   43774:	mov	w1, #0x31f1                	// #12785
   43778:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4377c:	add	x0, x0, #0x8
   43780:	bl	5010 <Perl_warn_nocontext@plt>
   43784:	ldr	x0, [x21]
   43788:	lsl	x2, x0, #2
   4378c:	tbnz	x0, #61, 425b0 <my_regprop@@Base+0x82ec>
   43790:	ldr	x0, [x19, #40]
   43794:	ldr	x0, [x0, #8]
   43798:	lsl	x2, x2, #1
   4379c:	mov	w1, #0x1                   	// #1
   437a0:	str	w1, [x0, x2]
   437a4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   437a8:	ldr	x0, [x0, #3920]
   437ac:	ldr	x1, [sp, #216]
   437b0:	ldr	x0, [x0]
   437b4:	eor	x0, x1, x0
   437b8:	cbnz	x0, 437e0 <my_regprop@@Base+0x951c>
   437bc:	mov	w0, w23
   437c0:	ldp	x19, x20, [sp, #64]
   437c4:	ldp	x21, x22, [sp, #80]
   437c8:	ldp	x23, x24, [sp, #96]
   437cc:	ldp	x25, x26, [sp, #112]
   437d0:	ldp	x27, x28, [sp, #128]
   437d4:	ldp	x29, x30, [sp, #48]
   437d8:	add	sp, sp, #0xe0
   437dc:	ret
   437e0:	bl	5300 <__stack_chk_fail@plt>
   437e4:	sub	sp, sp, #0x240
   437e8:	stp	x29, x30, [sp, #48]
   437ec:	add	x29, sp, #0x30
   437f0:	stp	x19, x20, [sp, #64]
   437f4:	stp	x21, x22, [sp, #80]
   437f8:	stp	x23, x24, [sp, #96]
   437fc:	stp	x25, x26, [sp, #112]
   43800:	stp	x27, x28, [sp, #128]
   43804:	mov	x27, x0
   43808:	mov	x28, x1
   4380c:	str	x2, [sp, #160]
   43810:	str	w3, [sp, #216]
   43814:	and	w22, w4, #0xff
   43818:	and	w0, w5, #0xff
   4381c:	str	w0, [sp, #240]
   43820:	and	w0, w6, #0xff
   43824:	str	w0, [sp, #288]
   43828:	and	w23, w7, #0xff
   4382c:	ldrb	w0, [sp, #576]
   43830:	str	w0, [sp, #152]
   43834:	ldr	x24, [sp, #584]
   43838:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4383c:	ldr	x0, [x0, #3920]
   43840:	ldr	x1, [x0]
   43844:	str	x1, [sp, #568]
   43848:	mov	x1, #0x0                   	// #0
   4384c:	mov	x0, #0xbeef                	// #48879
   43850:	movk	x0, #0xdead, lsl #16
   43854:	str	x0, [sp, #336]
   43858:	str	xzr, [sp, #352]
   4385c:	str	xzr, [sp, #360]
   43860:	str	xzr, [sp, #368]
   43864:	str	xzr, [sp, #376]
   43868:	ldr	x20, [x28, #56]
   4386c:	mov	w21, #0x1                   	// #1
   43870:	cbz	x24, 43ddc <my_regprop@@Base+0x9b18>
   43874:	str	xzr, [sp, #384]
   43878:	str	xzr, [sp, #392]
   4387c:	str	xzr, [sp, #400]
   43880:	ldr	x0, [x27, #224]
   43884:	cbz	x0, 4a1d4 <my_regprop@@Base+0xff10>
   43888:	ldr	x0, [x0, #64]
   4388c:	cmp	x0, #0x0
   43890:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43894:	ldr	x1, [x1, #3984]
   43898:	ccmp	x0, x1, #0x4, ne  // ne = any
   4389c:	cset	w2, ne  // ne = any
   438a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   438a4:	ldr	x1, [x1, #3832]
   438a8:	cmp	x0, x1
   438ac:	csel	w1, w2, wzr, ne  // ne = any
   438b0:	str	w1, [sp, #200]
   438b4:	cbnz	w1, 43de8 <my_regprop@@Base+0x9b24>
   438b8:	ldr	x0, [x28, #64]
   438bc:	str	x0, [sp, #248]
   438c0:	sub	x0, x0, #0x1
   438c4:	str	x0, [sp, #408]
   438c8:	str	xzr, [sp, #416]
   438cc:	mov	w1, #0x14                  	// #20
   438d0:	mov	x0, x27
   438d4:	bl	5870 <Perl_ckwarn@plt>
   438d8:	and	w0, w0, #0xff
   438dc:	str	w0, [sp, #268]
   438e0:	str	xzr, [sp, #424]
   438e4:	str	wzr, [sp, #200]
   438e8:	mov	w2, #0x1                   	// #1
   438ec:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   438f0:	add	x1, x1, #0x608
   438f4:	mov	x0, x27
   438f8:	bl	54f0 <Perl_get_sv@plt>
   438fc:	mov	x19, x0
   43900:	cbz	x0, 4394c <my_regprop@@Base+0x9688>
   43904:	ldr	w0, [x0, #12]
   43908:	tbz	w0, #8, 43e20 <my_regprop@@Base+0x9b5c>
   4390c:	ldr	w1, [x19, #12]
   43910:	and	w0, w1, #0x3fff00
   43914:	and	w0, w0, #0xffe001ff
   43918:	cmp	w0, #0x100
   4391c:	b.ne	43e8c <my_regprop@@Base+0x9bc8>  // b.any
   43920:	and	w2, w1, #0xf
   43924:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   43928:	ldr	x0, [x0, #3712]
   4392c:	ldrb	w0, [x0, w2, uxtw]
   43930:	cbz	w0, 43e34 <my_regprop@@Base+0x9b70>
   43934:	and	w0, w1, #0xc000
   43938:	cmp	w0, #0x8, lsl #12
   4393c:	b.eq	43e58 <my_regprop@@Base+0x9b94>  // b.none
   43940:	ldr	x0, [x19]
   43944:	ldr	x0, [x0, #32]
   43948:	str	x0, [sp, #424]
   4394c:	ldr	x0, [sp, #160]
   43950:	cbz	x0, 43ea0 <my_regprop@@Base+0x9bdc>
   43954:	cmp	x24, #0x0
   43958:	ldr	w0, [sp, #152]
   4395c:	csel	w0, w0, wzr, eq  // eq = none
   43960:	str	w0, [sp, #152]
   43964:	ldr	w0, [x27, #2368]
   43968:	tbnz	w0, #20, 43974 <my_regprop@@Base+0x96b0>
   4396c:	ldr	x0, [sp, #424]
   43970:	tbz	w0, #0, 43a40 <my_regprop@@Base+0x977c>
   43974:	ldr	w0, [x27, #2368]
   43978:	tbnz	w0, #20, 43984 <my_regprop@@Base+0x96c0>
   4397c:	ldr	x0, [sp, #424]
   43980:	tbz	w0, #0, 43a28 <my_regprop@@Base+0x9764>
   43984:	ldr	x2, [x28, #64]
   43988:	ldr	x0, [x28, #336]
   4398c:	cmp	x0, x2
   43990:	b.eq	43ec4 <my_regprop@@Base+0x9c00>  // b.none
   43994:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   43998:	add	x5, x5, #0x20
   4399c:	ldr	x3, [x28, #56]
   439a0:	mov	w7, #0x820e                	// #33294
   439a4:	mov	x6, x5
   439a8:	mov	x4, #0x10                  	// #16
   439ac:	sub	x3, x3, x2
   439b0:	ldr	x1, [x28, #368]
   439b4:	mov	x0, x27
   439b8:	bl	53f0 <Perl_pv_pretty@plt>
   439bc:	mov	x2, x0
   439c0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   439c4:	add	x1, x1, #0xb50
   439c8:	mov	x0, x27
   439cc:	bl	50e0 <Perl_re_printf@plt>
   439d0:	ldr	x2, [x28, #104]
   439d4:	ldrsw	x0, [x28, #344]
   439d8:	cmp	x0, x2
   439dc:	b.eq	43ee0 <my_regprop@@Base+0x9c1c>  // b.none
   439e0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   439e4:	add	x1, x1, #0x800
   439e8:	mov	x0, x27
   439ec:	bl	50e0 <Perl_re_printf@plt>
   439f0:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   439f4:	add	x4, x4, #0x650
   439f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   439fc:	add	x3, x3, #0x20
   43a00:	ldr	w0, [sp, #216]
   43a04:	lsl	w2, w0, #1
   43a08:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   43a0c:	add	x1, x1, #0x818
   43a10:	mov	x0, x27
   43a14:	bl	50e0 <Perl_re_printf@plt>
   43a18:	ldr	x0, [x28, #104]
   43a1c:	str	w0, [x28, #344]
   43a20:	ldr	x0, [x28, #64]
   43a24:	str	x0, [x28, #336]
   43a28:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   43a2c:	add	x2, x2, #0x8d8
   43a30:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   43a34:	add	x1, x1, #0x718
   43a38:	mov	x0, x27
   43a3c:	bl	50e0 <Perl_re_printf@plt>
   43a40:	ldr	w2, [x28]
   43a44:	ubfx	x2, x2, #2, #1
   43a48:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   43a4c:	add	x1, x1, #0x658
   43a50:	mov	x0, x27
   43a54:	bl	5990 <Perl_newSVpvf@plt>
   43a58:	mov	x1, x0
   43a5c:	mov	x0, x27
   43a60:	bl	55d0 <Perl_sv_2mortal@plt>
   43a64:	mov	x25, x0
   43a68:	ldr	w0, [x0, #12]
   43a6c:	and	w2, w0, #0xf
   43a70:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43a74:	ldr	x1, [x1, #3888]
   43a78:	ldrb	w26, [x1, w2, uxtw]
   43a7c:	cbz	w26, 43efc <my_regprop@@Base+0x9c38>
   43a80:	and	w1, w0, #0xc000
   43a84:	cmp	w1, #0x8, lsl #12
   43a88:	b.eq	43f20 <my_regprop@@Base+0x9c5c>  // b.none
   43a8c:	and	w1, w0, #0xff
   43a90:	cmp	w1, #0xf
   43a94:	b.eq	43f54 <my_regprop@@Base+0x9c90>  // b.none
   43a98:	ldr	x1, [x25]
   43a9c:	ldr	x1, [x1, #16]
   43aa0:	str	x1, [sp, #272]
   43aa4:	and	w0, w0, #0xfff7ffff
   43aa8:	str	w0, [x25, #12]
   43aac:	cbz	w21, 43af8 <my_regprop@@Base+0x9834>
   43ab0:	ldr	x0, [x28, #64]
   43ab4:	ldrb	w2, [x0]
   43ab8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43abc:	ldr	x1, [x1, #3880]
   43ac0:	ldr	w2, [x1, x2, lsl #2]
   43ac4:	mov	w1, #0x4800                	// #18432
   43ac8:	bics	wzr, w1, w2
   43acc:	b.ne	43af8 <my_regprop@@Base+0x9834>  // b.any
   43ad0:	add	x0, x0, #0x1
   43ad4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   43ad8:	ldr	x2, [x2, #3880]
   43adc:	mov	w3, w1
   43ae0:	str	x0, [x28, #64]
   43ae4:	ldrb	w1, [x0]
   43ae8:	add	x0, x0, #0x1
   43aec:	ldr	w1, [x2, x1, lsl #2]
   43af0:	bics	wzr, w3, w1
   43af4:	b.eq	43ae0 <my_regprop@@Base+0x981c>  // b.none
   43af8:	ldr	x0, [x28, #64]
   43afc:	ldr	x1, [x28, #56]
   43b00:	cmp	x0, x1
   43b04:	b.hi	43f84 <my_regprop@@Base+0x9cc0>  // b.pmore
   43b08:	ldrb	w1, [x0]
   43b0c:	str	wzr, [sp, #172]
   43b10:	cmp	w1, #0x5e
   43b14:	b.eq	43fa8 <my_regprop@@Base+0x9ce4>  // b.none
   43b18:	cbz	x24, 44030 <my_regprop@@Base+0x9d6c>
   43b1c:	cbz	w22, 43b30 <my_regprop@@Base+0x986c>
   43b20:	ldr	x0, [x28, #64]
   43b24:	ldr	x1, [x28, #56]
   43b28:	cmp	x1, x0
   43b2c:	csinc	x20, x20, x0, ls  // ls = plast
   43b30:	ldr	x0, [x28, #64]
   43b34:	ldrb	w0, [x0]
   43b38:	cmp	w0, #0x5d
   43b3c:	b.eq	4a110 <my_regprop@@Base+0xfe4c>  // b.none
   43b40:	str	wzr, [sp, #192]
   43b44:	str	wzr, [sp, #264]
   43b48:	str	wzr, [sp, #184]
   43b4c:	str	wzr, [sp, #292]
   43b50:	str	wzr, [sp, #244]
   43b54:	str	xzr, [sp, #224]
   43b58:	str	xzr, [sp, #144]
   43b5c:	str	xzr, [sp, #176]
   43b60:	str	xzr, [sp, #232]
   43b64:	str	xzr, [sp, #208]
   43b68:	mov	x0, #0xbeef                	// #48879
   43b6c:	movk	x0, #0xdead, lsl #16
   43b70:	str	x0, [sp, #256]
   43b74:	ldr	x2, [sp, #416]
   43b78:	cbz	x2, 49f18 <my_regprop@@Base+0xfc54>
   43b7c:	ldrb	w0, [x2, #12]
   43b80:	cmp	w0, #0xb
   43b84:	b.ne	4429c <my_regprop@@Base+0x9fd8>  // b.any
   43b88:	ldr	x0, [x2]
   43b8c:	ldr	x0, [x0, #16]
   43b90:	tbnz	x0, #63, 43ba4 <my_regprop@@Base+0x98e0>
   43b94:	ldr	x1, [x28, #64]
   43b98:	ldr	x0, [sp, #408]
   43b9c:	cmp	x1, x0
   43ba0:	b.hi	442c0 <my_regprop@@Base+0x9ffc>  // b.pmore
   43ba4:	ldr	x0, [x28, #64]
   43ba8:	cmp	x20, x0
   43bac:	b.ls	442ec <my_regprop@@Base+0xa028>  // b.plast
   43bb0:	cbz	w21, 43bf8 <my_regprop@@Base+0x9934>
   43bb4:	ldrb	w2, [x0]
   43bb8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43bbc:	ldr	x1, [x1, #3880]
   43bc0:	ldr	w2, [x1, x2, lsl #2]
   43bc4:	mov	w1, #0x4800                	// #18432
   43bc8:	bics	wzr, w1, w2
   43bcc:	b.ne	43bf8 <my_regprop@@Base+0x9934>  // b.any
   43bd0:	add	x0, x0, #0x1
   43bd4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   43bd8:	ldr	x2, [x2, #3880]
   43bdc:	mov	w3, w1
   43be0:	str	x0, [x28, #64]
   43be4:	ldrb	w1, [x0]
   43be8:	add	x0, x0, #0x1
   43bec:	ldr	w1, [x2, x1, lsl #2]
   43bf0:	bics	wzr, w3, w1
   43bf4:	b.eq	43be0 <my_regprop@@Base+0x991c>  // b.none
   43bf8:	ldr	x0, [x28, #64]
   43bfc:	ldrb	w0, [x0]
   43c00:	cmp	w0, #0x5d
   43c04:	b.eq	442d8 <my_regprop@@Base+0xa014>  // b.none
   43c08:	ldr	x0, [sp, #336]
   43c0c:	str	x0, [sp, #304]
   43c10:	ldr	x0, [sp, #208]
   43c14:	cbz	x0, 4a140 <my_regprop@@Base+0xfe7c>
   43c18:	ldr	w0, [x28, #192]
   43c1c:	cbz	w0, 43c2c <my_regprop@@Base+0x9968>
   43c20:	ldr	x0, [x28, #64]
   43c24:	ldrsb	w1, [x0]
   43c28:	tbnz	w1, #31, 443a0 <my_regprop@@Base+0xa0dc>
   43c2c:	ldr	x0, [x28, #64]
   43c30:	add	x1, x0, #0x1
   43c34:	str	x1, [x28, #64]
   43c38:	ldrb	w0, [x0]
   43c3c:	str	x0, [sp, #336]
   43c40:	ldr	x1, [sp, #336]
   43c44:	cmp	x1, #0x5b
   43c48:	b.eq	44450 <my_regprop@@Base+0xa18c>  // b.none
   43c4c:	ldr	x0, [x28, #64]
   43c50:	sub	x2, x0, #0x1
   43c54:	ldr	x3, [sp, #408]
   43c58:	cmp	x2, x3
   43c5c:	b.ls	445f8 <my_regprop@@Base+0xa334>  // b.plast
   43c60:	sub	x3, x1, #0x3a
   43c64:	cmp	x3, #0x1
   43c68:	b.ls	43c84 <my_regprop@@Base+0x99c0>  // b.plast
   43c6c:	cmp	x1, #0x3d
   43c70:	mov	x3, #0x2e                  	// #46
   43c74:	ccmp	x1, x3, #0x4, ne  // ne = any
   43c78:	b.eq	43c84 <my_regprop@@Base+0x99c0>  // b.none
   43c7c:	cmp	x1, #0x5e
   43c80:	b.ne	445f8 <my_regprop@@Base+0xa334>  // b.any
   43c84:	ldr	w0, [sp, #268]
   43c88:	cmp	w0, #0x0
   43c8c:	mov	w5, #0x1                   	// #1
   43c90:	add	x4, sp, #0x1a0
   43c94:	csel	x4, x4, xzr, ne  // ne = any
   43c98:	add	x3, sp, #0x198
   43c9c:	mov	x1, x28
   43ca0:	mov	x0, x27
   43ca4:	bl	2a960 <my_regexec@@Base+0x746c>
   43ca8:	mov	w19, #0xffffffff            	// #-1
   43cac:	cbz	w21, 43cf8 <my_regprop@@Base+0x9a34>
   43cb0:	ldr	x0, [x28, #64]
   43cb4:	ldrb	w2, [x0]
   43cb8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43cbc:	ldr	x1, [x1, #3880]
   43cc0:	ldr	w2, [x1, x2, lsl #2]
   43cc4:	mov	w1, #0x4800                	// #18432
   43cc8:	bics	wzr, w1, w2
   43ccc:	b.ne	43cf8 <my_regprop@@Base+0x9a34>  // b.any
   43cd0:	add	x0, x0, #0x1
   43cd4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   43cd8:	ldr	x2, [x2, #3880]
   43cdc:	mov	w3, w1
   43ce0:	str	x0, [x28, #64]
   43ce4:	ldrb	w1, [x0]
   43ce8:	add	x0, x0, #0x1
   43cec:	ldr	w1, [x2, x1, lsl #2]
   43cf0:	bics	wzr, w3, w1
   43cf4:	b.eq	43ce0 <my_regprop@@Base+0x9a1c>  // b.none
   43cf8:	ldr	x0, [sp, #208]
   43cfc:	cbz	x0, 46b4c <my_regprop@@Base+0xc888>
   43d00:	ldr	x0, [sp, #336]
   43d04:	ldr	x1, [sp, #256]
   43d08:	cmp	x0, x1
   43d0c:	b.cs	46eb0 <my_regprop@@Base+0xcbec>  // b.hs, b.nlast
   43d10:	ldr	x19, [x28, #64]
   43d14:	ldr	x1, [x28, #24]
   43d18:	cbz	x1, 43d28 <my_regprop@@Base+0x9a64>
   43d1c:	mov	w2, #0xb                   	// #11
   43d20:	mov	x0, x27
   43d24:	bl	54b0 <Perl_save_pushptr@plt>
   43d28:	ldr	x1, [x28, #160]
   43d2c:	cbz	x1, 43d3c <my_regprop@@Base+0x9a78>
   43d30:	mov	w2, #0xa                   	// #10
   43d34:	mov	x0, x27
   43d38:	bl	54b0 <Perl_save_pushptr@plt>
   43d3c:	ldr	x1, [x28, #168]
   43d40:	cbz	x1, 43d50 <my_regprop@@Base+0x9a8c>
   43d44:	mov	w2, #0xa                   	// #10
   43d48:	mov	x0, x27
   43d4c:	bl	54b0 <Perl_save_pushptr@plt>
   43d50:	ldr	x0, [x28, #64]
   43d54:	ldr	x1, [x28, #72]
   43d58:	sub	x1, x0, x1
   43d5c:	ldr	x0, [x28, #80]
   43d60:	add	x0, x0, x1
   43d64:	ldr	x6, [x28, #16]
   43d68:	cmp	x0, x6
   43d6c:	b.hi	46da0 <my_regprop@@Base+0xcadc>  // b.pmore
   43d70:	ldr	x3, [x28, #8]
   43d74:	subs	x4, x0, x3
   43d78:	b.mi	46db0 <my_regprop@@Base+0xcaec>  // b.first
   43d7c:	mov	x2, x4
   43d80:	sub	x4, x6, x0
   43d84:	ldr	w1, [x28, #192]
   43d88:	cmp	w1, #0x0
   43d8c:	cset	w1, ne  // ne = any
   43d90:	ldr	x8, [sp, #232]
   43d94:	sub	x5, x19, x8
   43d98:	cmp	x0, x6
   43d9c:	csel	x0, x0, x6, ls  // ls = plast
   43da0:	str	x0, [sp, #32]
   43da4:	str	x4, [sp, #24]
   43da8:	str	w1, [sp, #16]
   43dac:	str	x3, [sp, #8]
   43db0:	str	x2, [sp]
   43db4:	mov	w7, w1
   43db8:	mov	x6, x8
   43dbc:	sxtw	x5, w5
   43dc0:	mov	w4, w1
   43dc4:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   43dc8:	add	x3, x3, #0x5d8
   43dcc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   43dd0:	add	x2, x2, #0xb58
   43dd4:	mov	x0, x27
   43dd8:	bl	273ac <my_regexec@@Base+0x3eb8>
   43ddc:	ldr	w21, [x28]
   43de0:	ubfx	x21, x21, #4, #1
   43de4:	b	43874 <my_regprop@@Base+0x95b0>
   43de8:	ldrb	w0, [x0, #20]
   43dec:	tbz	w0, #1, 438b8 <my_regprop@@Base+0x95f4>
   43df0:	ldr	x0, [x28, #64]
   43df4:	str	x0, [sp, #248]
   43df8:	sub	x0, x0, #0x1
   43dfc:	str	x0, [sp, #408]
   43e00:	str	xzr, [sp, #416]
   43e04:	mov	w1, #0x14                  	// #20
   43e08:	mov	x0, x27
   43e0c:	bl	5870 <Perl_ckwarn@plt>
   43e10:	and	w0, w0, #0xff
   43e14:	str	w0, [sp, #268]
   43e18:	str	xzr, [sp, #424]
   43e1c:	b	438e8 <my_regprop@@Base+0x9624>
   43e20:	mov	x2, #0xff08                	// #65288
   43e24:	mov	x1, x19
   43e28:	mov	x0, x27
   43e2c:	bl	5310 <Perl_sv_setuv@plt>
   43e30:	b	4390c <my_regprop@@Base+0x9648>
   43e34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43e38:	add	x3, x3, #0xc10
   43e3c:	add	x3, x3, #0x870
   43e40:	mov	w2, #0x4189                	// #16777
   43e44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43e48:	add	x1, x1, #0xfb8
   43e4c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43e50:	add	x0, x0, #0xda0
   43e54:	bl	58e0 <__assert_fail@plt>
   43e58:	and	w0, w1, #0xff
   43e5c:	sub	w0, w0, #0x9
   43e60:	cmp	w0, #0x1
   43e64:	b.hi	43940 <my_regprop@@Base+0x967c>  // b.pmore
   43e68:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43e6c:	add	x3, x3, #0xc10
   43e70:	add	x3, x3, #0x870
   43e74:	mov	w2, #0x4189                	// #16777
   43e78:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43e7c:	add	x1, x1, #0xfb8
   43e80:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43e84:	add	x0, x0, #0xdd0
   43e88:	bl	58e0 <__assert_fail@plt>
   43e8c:	mov	w2, #0x2                   	// #2
   43e90:	mov	x1, x19
   43e94:	mov	x0, x27
   43e98:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   43e9c:	b	43948 <my_regprop@@Base+0x9684>
   43ea0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43ea4:	add	x3, x3, #0xc10
   43ea8:	add	x3, x3, #0x870
   43eac:	mov	w2, #0x418b                	// #16779
   43eb0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43eb4:	add	x1, x1, #0xfb8
   43eb8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   43ebc:	add	x0, x0, #0xfd0
   43ec0:	bl	58e0 <__assert_fail@plt>
   43ec4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   43ec8:	add	x2, x2, #0x20
   43ecc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   43ed0:	add	x1, x1, #0x7f8
   43ed4:	mov	x0, x27
   43ed8:	bl	50e0 <Perl_re_printf@plt>
   43edc:	b	439d0 <my_regprop@@Base+0x970c>
   43ee0:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   43ee4:	add	x2, x2, #0x20
   43ee8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   43eec:	add	x1, x1, #0x808
   43ef0:	mov	x0, x27
   43ef4:	bl	50e0 <Perl_re_printf@plt>
   43ef8:	b	439f0 <my_regprop@@Base+0x972c>
   43efc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43f00:	add	x3, x3, #0xc10
   43f04:	add	x3, x3, #0x870
   43f08:	mov	w2, #0x41a2                	// #16802
   43f0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43f10:	add	x1, x1, #0xfb8
   43f14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43f18:	add	x0, x0, #0xe40
   43f1c:	bl	58e0 <__assert_fail@plt>
   43f20:	and	w1, w0, #0xff
   43f24:	sub	w1, w1, #0x9
   43f28:	cmp	w1, #0x1
   43f2c:	b.hi	43a8c <my_regprop@@Base+0x97c8>  // b.pmore
   43f30:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43f34:	add	x3, x3, #0xc10
   43f38:	add	x3, x3, #0x870
   43f3c:	mov	w2, #0x41a2                	// #16802
   43f40:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43f44:	add	x1, x1, #0xfb8
   43f48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43f4c:	add	x0, x0, #0xe70
   43f50:	bl	58e0 <__assert_fail@plt>
   43f54:	ldr	x1, [x25]
   43f58:	ldrb	w1, [x1, #129]
   43f5c:	tbnz	w1, #6, 43a98 <my_regprop@@Base+0x97d4>
   43f60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43f64:	add	x3, x3, #0xc10
   43f68:	add	x3, x3, #0x870
   43f6c:	mov	w2, #0x41a2                	// #16802
   43f70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43f74:	add	x1, x1, #0xfb8
   43f78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   43f7c:	add	x0, x0, #0xe88
   43f80:	bl	58e0 <__assert_fail@plt>
   43f84:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   43f88:	add	x3, x3, #0xc10
   43f8c:	add	x3, x3, #0x870
   43f90:	mov	w2, #0x41a7                	// #16807
   43f94:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   43f98:	add	x1, x1, #0xfb8
   43f9c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   43fa0:	add	x0, x0, #0x810
   43fa4:	bl	58e0 <__assert_fail@plt>
   43fa8:	add	x1, x0, #0x1
   43fac:	str	x1, [x28, #64]
   43fb0:	ldr	w1, [x28, #112]
   43fb4:	cmp	w1, #0x9
   43fb8:	b.gt	43fc4 <my_regprop@@Base+0x9d00>
   43fbc:	add	w1, w1, #0x1
   43fc0:	str	w1, [x28, #112]
   43fc4:	cbz	w21, 44018 <my_regprop@@Base+0x9d54>
   43fc8:	ldrb	w2, [x0, #1]
   43fcc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   43fd0:	ldr	x1, [x1, #3880]
   43fd4:	ldr	w2, [x1, x2, lsl #2]
   43fd8:	mov	w1, #0x4800                	// #18432
   43fdc:	bics	wzr, w1, w2
   43fe0:	b.ne	44024 <my_regprop@@Base+0x9d60>  // b.any
   43fe4:	add	x0, x0, #0x2
   43fe8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   43fec:	ldr	x2, [x2, #3880]
   43ff0:	mov	w3, w1
   43ff4:	str	x0, [x28, #64]
   43ff8:	ldrb	w1, [x0]
   43ffc:	add	x0, x0, #0x1
   44000:	ldr	w1, [x2, x1, lsl #2]
   44004:	bics	wzr, w3, w1
   44008:	b.eq	43ff4 <my_regprop@@Base+0x9d30>  // b.none
   4400c:	str	w21, [sp, #172]
   44010:	str	wzr, [sp, #240]
   44014:	b	43b18 <my_regprop@@Base+0x9854>
   44018:	str	w26, [sp, #172]
   4401c:	str	w21, [sp, #240]
   44020:	b	43b18 <my_regprop@@Base+0x9854>
   44024:	str	w21, [sp, #172]
   44028:	str	wzr, [sp, #240]
   4402c:	b	43b18 <my_regprop@@Base+0x9854>
   44030:	ldr	x2, [x28, #64]
   44034:	ldrb	w0, [x2]
   44038:	sub	w1, w0, #0x3a
   4403c:	and	w1, w1, #0xff
   44040:	cmp	w1, #0x1
   44044:	b.ls	44060 <my_regprop@@Base+0x9d9c>  // b.plast
   44048:	cmp	w0, #0x3d
   4404c:	mov	w1, #0x2e                  	// #46
   44050:	ccmp	w0, w1, #0x4, ne  // ne = any
   44054:	mov	w1, #0x5e                  	// #94
   44058:	ccmp	w0, w1, #0x4, ne  // ne = any
   4405c:	b.ne	43b1c <my_regprop@@Base+0x9858>  // b.any
   44060:	mov	w5, #0x1                   	// #1
   44064:	mov	x4, #0x0                   	// #0
   44068:	add	x3, sp, #0x198
   4406c:	mov	x1, x28
   44070:	mov	x0, x27
   44074:	bl	2a960 <my_regexec@@Base+0x746c>
   44078:	mov	w19, w0
   4407c:	ldr	w0, [sp, #268]
   44080:	cmp	w0, #0x0
   44084:	ccmn	w19, #0x1, #0x1, ne  // ne = any
   44088:	b.lt	43b1c <my_regprop@@Base+0x9858>  // b.tstop
   4408c:	ldr	x1, [x28, #72]
   44090:	cbz	x1, 441b0 <my_regprop@@Base+0x9eec>
   44094:	ldr	x0, [sp, #408]
   44098:	sub	x1, x0, x1
   4409c:	ldr	x0, [x28, #80]
   440a0:	add	x0, x0, x1
   440a4:	ldr	x1, [x28, #8]
   440a8:	sub	x0, x0, x1
   440ac:	ldr	x1, [x28, #136]
   440b0:	cmp	x0, x1
   440b4:	b.le	43b1c <my_regprop@@Base+0x9858>
   440b8:	ldr	x0, [x27, #224]
   440bc:	cbz	x0, 440e4 <my_regprop@@Base+0x9e20>
   440c0:	ldr	x0, [x0, #64]
   440c4:	cmp	x0, #0x0
   440c8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   440cc:	ldr	x1, [x1, #3984]
   440d0:	ccmp	x0, x1, #0x4, ne  // ne = any
   440d4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   440d8:	ldr	x1, [x1, #3832]
   440dc:	ccmp	x0, x1, #0x4, ne  // ne = any
   440e0:	b.ne	441d0 <my_regprop@@Base+0x9f0c>  // b.any
   440e4:	ldr	x0, [x28, #64]
   440e8:	ldrb	w3, [x0]
   440ec:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   440f0:	add	x5, x5, #0x20
   440f4:	cmn	w19, #0x1
   440f8:	b.eq	44218 <my_regprop@@Base+0x9f54>  // b.none
   440fc:	ldr	w0, [x28, #192]
   44100:	cmp	w0, #0x0
   44104:	cset	w6, ne  // ne = any
   44108:	ldr	x1, [x28, #72]
   4410c:	ldr	x0, [sp, #408]
   44110:	sub	x1, x0, x1
   44114:	ldr	x0, [x28, #80]
   44118:	add	x0, x0, x1
   4411c:	ldr	x2, [x28, #16]
   44120:	cmp	x0, x2
   44124:	b.ls	4423c <my_regprop@@Base+0x9f78>  // b.plast
   44128:	ldr	x1, [x28, #8]
   4412c:	sub	x7, x2, x1
   44130:	mov	x4, #0x0                   	// #0
   44134:	cmp	x0, x2
   44138:	csel	x0, x0, x2, ls  // ls = plast
   4413c:	str	x0, [sp, #24]
   44140:	str	x4, [sp, #16]
   44144:	str	w6, [sp, #8]
   44148:	str	x1, [sp]
   4414c:	mov	w4, w3
   44150:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44154:	add	x2, x2, #0x660
   44158:	mov	w1, #0x14                  	// #20
   4415c:	mov	x0, x27
   44160:	bl	5150 <Perl_ck_warner@plt>
   44164:	ldr	x0, [x28, #72]
   44168:	cbz	x0, 43b1c <my_regprop@@Base+0x9858>
   4416c:	ldr	x1, [sp, #408]
   44170:	sub	x1, x1, x0
   44174:	ldr	x0, [x28, #80]
   44178:	add	x1, x0, x1
   4417c:	ldr	x2, [x28, #8]
   44180:	sub	x3, x1, x2
   44184:	ldr	x0, [x28, #136]
   44188:	cmp	x3, x0
   4418c:	b.le	43b1c <my_regprop@@Base+0x9858>
   44190:	ldr	x0, [x28, #16]
   44194:	cmp	x0, x1
   44198:	csel	x0, x0, x1, ls  // ls = plast
   4419c:	cmp	x2, x0
   441a0:	csel	x0, x2, x0, hi  // hi = pmore
   441a4:	sub	x0, x0, x2
   441a8:	str	x0, [x28, #136]
   441ac:	b	43b1c <my_regprop@@Base+0x9858>
   441b0:	ldr	x4, [sp, #408]
   441b4:	mov	w3, #0x41b9                	// #16825
   441b8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   441bc:	add	x2, x2, #0xfb8
   441c0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   441c4:	add	x1, x1, #0xab8
   441c8:	mov	x0, x27
   441cc:	bl	5420 <Perl_croak@plt>
   441d0:	ldrb	w0, [x0, #13]
   441d4:	tbz	w0, #1, 440e4 <my_regprop@@Base+0x9e20>
   441d8:	ldr	x1, [x28, #24]
   441dc:	cbz	x1, 441ec <my_regprop@@Base+0x9f28>
   441e0:	mov	w2, #0xb                   	// #11
   441e4:	mov	x0, x27
   441e8:	bl	54b0 <Perl_save_pushptr@plt>
   441ec:	ldr	x1, [x28, #160]
   441f0:	cbz	x1, 44200 <my_regprop@@Base+0x9f3c>
   441f4:	mov	w2, #0xa                   	// #10
   441f8:	mov	x0, x27
   441fc:	bl	54b0 <Perl_save_pushptr@plt>
   44200:	ldr	x1, [x28, #168]
   44204:	cbz	x1, 440e4 <my_regprop@@Base+0x9e20>
   44208:	mov	w2, #0xa                   	// #10
   4420c:	mov	x0, x27
   44210:	bl	54b0 <Perl_save_pushptr@plt>
   44214:	b	440e4 <my_regprop@@Base+0x9e20>
   44218:	cmp	w3, #0x3d
   4421c:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   44220:	add	x0, x0, #0x628
   44224:	adrp	x5, 7a000 <boot_re@@Base+0x1841c>
   44228:	add	x5, x5, #0x600
   4422c:	mov	w1, #0x2e                  	// #46
   44230:	ccmp	w3, w1, #0x4, ne  // ne = any
   44234:	csel	x5, x5, x0, eq  // eq = none
   44238:	b	440fc <my_regprop@@Base+0x9e38>
   4423c:	ldr	x1, [x28, #8]
   44240:	subs	x4, x0, x1
   44244:	b.mi	44254 <my_regprop@@Base+0x9f90>  // b.first
   44248:	mov	x7, x4
   4424c:	sub	x4, x2, x0
   44250:	b	44134 <my_regprop@@Base+0x9e70>
   44254:	ldr	x6, [x28, #48]
   44258:	ldr	x5, [x28, #56]
   4425c:	sub	w5, w5, w6
   44260:	mov	w3, #0x41b9                	// #16825
   44264:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44268:	add	x2, x2, #0xfb8
   4426c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44270:	add	x1, x1, #0x870
   44274:	mov	x0, x27
   44278:	bl	5420 <Perl_croak@plt>
   4427c:	ldr	x0, [sp, #280]
   44280:	str	x0, [sp, #256]
   44284:	mov	x0, #0x1                   	// #1
   44288:	str	x0, [sp, #208]
   4428c:	b	43b74 <my_regprop@@Base+0x98b0>
   44290:	ldr	x0, [sp, #280]
   44294:	str	x0, [sp, #256]
   44298:	b	43b74 <my_regprop@@Base+0x98b0>
   4429c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   442a0:	add	x3, x3, #0xc10
   442a4:	add	x3, x3, #0x870
   442a8:	mov	w2, #0x41d2                	// #16850
   442ac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   442b0:	add	x1, x1, #0xfb8
   442b4:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   442b8:	add	x0, x0, #0x6d8
   442bc:	bl	58e0 <__assert_fail@plt>
   442c0:	mov	x1, x28
   442c4:	mov	x0, x27
   442c8:	bl	29a90 <my_regexec@@Base+0x659c>
   442cc:	ldr	x0, [x28, #64]
   442d0:	cmp	x0, x20
   442d4:	b.cc	43bb0 <my_regprop@@Base+0x98ec>  // b.lo, b.ul, b.last
   442d8:	ldr	x2, [sp, #416]
   442dc:	cbz	x2, 442f8 <my_regprop@@Base+0xa034>
   442e0:	ldrb	w0, [x2, #12]
   442e4:	cmp	w0, #0xb
   442e8:	b.ne	47ac4 <my_regprop@@Base+0xd800>  // b.any
   442ec:	ldr	x0, [x2]
   442f0:	ldr	x0, [x0, #16]
   442f4:	tbz	x0, #63, 47ae8 <my_regprop@@Base+0xd824>
   442f8:	ldr	x0, [sp, #144]
   442fc:	cbz	x0, 48064 <my_regprop@@Base+0xdda0>
   44300:	mov	w3, #0x80000               	// #524288
   44304:	mov	x2, #0x2                   	// #2
   44308:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   4430c:	add	x1, x1, #0x468
   44310:	mov	x0, x27
   44314:	bl	5390 <Perl_newSVpvn_flags@plt>
   44318:	mov	x20, x0
   4431c:	ldr	x0, [x28, #56]
   44320:	str	x0, [sp, #184]
   44324:	ldr	x0, [x28, #64]
   44328:	str	x0, [sp, #192]
   4432c:	ldr	x0, [x28, #48]
   44330:	str	x0, [sp, #200]
   44334:	ldr	w0, [sp, #172]
   44338:	cbnz	w0, 47af8 <my_regprop@@Base+0xd834>
   4433c:	ldr	x1, [x28, #72]
   44340:	ldr	x0, [x28, #8]
   44344:	cmp	x1, x0
   44348:	b.ne	47b1c <my_regprop@@Base+0xd858>  // b.any
   4434c:	ldr	x0, [sp, #144]
   44350:	ldrb	w0, [x0, #12]
   44354:	cmp	w0, #0xb
   44358:	b.ne	47b40 <my_regprop@@Base+0xd87c>  // b.any
   4435c:	ldr	x0, [sp, #144]
   44360:	ldr	x0, [x0]
   44364:	ldr	x0, [x0, #16]
   44368:	cmp	w0, #0x0
   4436c:	b.le	47cac <my_regprop@@Base+0xd9e8>
   44370:	sxtw	x24, w0
   44374:	sub	x1, x24, #0x1
   44378:	sub	w0, w0, #0x1
   4437c:	sub	x0, x1, x0
   44380:	str	x0, [sp, #152]
   44384:	adrp	x25, 7a000 <boot_re@@Base+0x1841c>
   44388:	add	x25, x25, #0xe50
   4438c:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   44390:	ldr	x23, [x23, #3888]
   44394:	str	x28, [sp, #208]
   44398:	ldr	w28, [sp, #172]
   4439c:	b	47c70 <my_regprop@@Base+0xd9ac>
   443a0:	ldr	x1, [x28, #56]
   443a4:	cmp	x0, x1
   443a8:	b.cs	44430 <my_regprop@@Base+0xa16c>  // b.hs, b.nlast
   443ac:	mov	x6, x0
   443b0:	mov	x2, #0x0                   	// #0
   443b4:	mov	x4, #0x0                   	// #0
   443b8:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   443bc:	ldr	x10, [x3, #3824]
   443c0:	mov	w9, #0xff                  	// #255
   443c4:	mov	x8, x10
   443c8:	ldrb	w7, [x6]
   443cc:	ldrb	w3, [x10, w7, sxtw]
   443d0:	and	x5, x3, #0xff
   443d4:	asr	w3, w9, w3
   443d8:	and	w3, w3, w7
   443dc:	sxtw	x3, w3
   443e0:	bfi	x7, x2, #6, #58
   443e4:	cmp	x4, #0x0
   443e8:	csel	x2, x7, x3, ne  // ne = any
   443ec:	add	x3, x8, x5
   443f0:	add	x3, x3, x4
   443f4:	ldrb	w4, [x3, #256]
   443f8:	cbnz	x4, 44420 <my_regprop@@Base+0xa15c>
   443fc:	sub	x0, x6, x0
   44400:	add	x0, x0, #0x1
   44404:	str	x0, [sp, #344]
   44408:	str	x2, [sp, #336]
   4440c:	ldr	x0, [x28, #64]
   44410:	ldr	x1, [sp, #344]
   44414:	add	x0, x0, x1
   44418:	str	x0, [x28, #64]
   4441c:	b	43c40 <my_regprop@@Base+0x997c>
   44420:	add	x6, x6, #0x1
   44424:	cmp	x4, #0x1
   44428:	ccmp	x1, x6, #0x0, ne  // ne = any
   4442c:	b.hi	443c8 <my_regprop@@Base+0xa104>  // b.pmore
   44430:	mov	x5, #0x0                   	// #0
   44434:	mov	x4, #0x0                   	// #0
   44438:	mov	w3, #0x0                   	// #0
   4443c:	add	x2, sp, #0x158
   44440:	sub	x1, x1, x0
   44444:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   44448:	mov	x2, x0
   4444c:	b	44408 <my_regprop@@Base+0xa144>
   44450:	ldr	w0, [sp, #268]
   44454:	cmp	w0, #0x0
   44458:	mov	w5, #0x0                   	// #0
   4445c:	add	x4, sp, #0x1a0
   44460:	csel	x4, x4, xzr, ne  // ne = any
   44464:	add	x3, sp, #0x1d0
   44468:	ldr	x2, [x28, #64]
   4446c:	mov	x1, x28
   44470:	mov	x0, x27
   44474:	bl	2a960 <my_regexec@@Base+0x746c>
   44478:	mov	w19, w0
   4447c:	tbnz	w0, #31, 445dc <my_regprop@@Base+0xa318>
   44480:	ldr	x1, [sp, #416]
   44484:	cbz	x1, 444bc <my_regprop@@Base+0xa1f8>
   44488:	ldrb	w0, [x1, #12]
   4448c:	cmp	w0, #0xb
   44490:	b.ne	445ac <my_regprop@@Base+0xa2e8>  // b.any
   44494:	ldr	x0, [x1]
   44498:	ldr	x0, [x0, #16]
   4449c:	tbnz	x0, #63, 444bc <my_regprop@@Base+0xa1f8>
   444a0:	ldr	x0, [sp, #408]
   444a4:	ldr	x2, [x28, #64]
   444a8:	cmp	x2, x0
   444ac:	b.hi	444bc <my_regprop@@Base+0xa1f8>  // b.pmore
   444b0:	ldr	x2, [sp, #464]
   444b4:	cmp	x0, x2
   444b8:	b.ls	445d0 <my_regprop@@Base+0xa30c>  // b.plast
   444bc:	ldr	x0, [sp, #464]
   444c0:	str	x0, [x28, #64]
   444c4:	tbnz	w19, #31, 43cac <my_regprop@@Base+0x99e8>
   444c8:	ldr	x0, [sp, #208]
   444cc:	cbz	x0, 468d0 <my_regprop@@Base+0xc60c>
   444d0:	ldr	x4, [x28, #64]
   444d4:	ldr	x1, [sp, #232]
   444d8:	sub	x0, x4, x1
   444dc:	cmp	x4, x1
   444e0:	csel	w0, w0, wzr, cs  // cs = hs, nlast
   444e4:	str	w0, [sp, #208]
   444e8:	cbz	w23, 46788 <my_regprop@@Base+0xc4c4>
   444ec:	ldr	x1, [x28, #24]
   444f0:	cbz	x1, 44500 <my_regprop@@Base+0xa23c>
   444f4:	mov	w2, #0xb                   	// #11
   444f8:	mov	x0, x27
   444fc:	bl	54b0 <Perl_save_pushptr@plt>
   44500:	ldr	x1, [x28, #160]
   44504:	cbz	x1, 44514 <my_regprop@@Base+0xa250>
   44508:	mov	w2, #0xa                   	// #10
   4450c:	mov	x0, x27
   44510:	bl	54b0 <Perl_save_pushptr@plt>
   44514:	ldr	x1, [x28, #168]
   44518:	cbz	x1, 44528 <my_regprop@@Base+0xa264>
   4451c:	mov	w2, #0xa                   	// #10
   44520:	mov	x0, x27
   44524:	bl	54b0 <Perl_save_pushptr@plt>
   44528:	ldr	x0, [x28, #64]
   4452c:	ldr	x1, [x28, #72]
   44530:	sub	x1, x0, x1
   44534:	ldr	x0, [x28, #80]
   44538:	add	x0, x0, x1
   4453c:	ldr	x5, [x28, #16]
   44540:	cmp	x0, x5
   44544:	b.hi	46750 <my_regprop@@Base+0xc48c>  // b.pmore
   44548:	ldr	x3, [x28, #8]
   4454c:	subs	x4, x0, x3
   44550:	b.mi	46760 <my_regprop@@Base+0xc49c>  // b.first
   44554:	mov	x2, x4
   44558:	sub	x4, x5, x0
   4455c:	ldr	w1, [x28, #192]
   44560:	cmp	w1, #0x0
   44564:	cset	w1, ne  // ne = any
   44568:	cmp	x0, x5
   4456c:	csel	x0, x0, x5, ls  // ls = plast
   44570:	str	x0, [sp, #32]
   44574:	str	x4, [sp, #24]
   44578:	str	w1, [sp, #16]
   4457c:	str	x3, [sp, #8]
   44580:	str	x2, [sp]
   44584:	mov	w7, w1
   44588:	ldr	x6, [sp, #232]
   4458c:	ldrsw	x5, [sp, #208]
   44590:	mov	w4, w1
   44594:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   44598:	add	x3, x3, #0x5d8
   4459c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   445a0:	add	x2, x2, #0xaa0
   445a4:	mov	x0, x27
   445a8:	bl	273ac <my_regexec@@Base+0x3eb8>
   445ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   445b0:	add	x3, x3, #0xc10
   445b4:	add	x3, x3, #0x870
   445b8:	mov	w2, #0x4208                	// #16904
   445bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   445c0:	add	x1, x1, #0xfb8
   445c4:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   445c8:	add	x0, x0, #0x6d8
   445cc:	bl	58e0 <__assert_fail@plt>
   445d0:	mov	x0, x27
   445d4:	bl	56a0 <Perl_av_undef@plt>
   445d8:	b	444bc <my_regprop@@Base+0xa1f8>
   445dc:	cmn	w0, #0x1
   445e0:	b.eq	445ec <my_regprop@@Base+0xa328>  // b.none
   445e4:	mov	w19, #0xffffffff            	// #-1
   445e8:	b	444c4 <my_regprop@@Base+0xa200>
   445ec:	ldr	x0, [sp, #464]
   445f0:	str	x0, [sp, #408]
   445f4:	b	444c4 <my_regprop@@Base+0xa200>
   445f8:	eor	w2, w21, #0x1
   445fc:	tst	w23, w2
   44600:	b.eq	44620 <my_regprop@@Base+0xa35c>  // b.none
   44604:	tst	x1, #0xffffffffffffff00
   44608:	b.ne	446d4 <my_regprop@@Base+0xa410>  // b.any
   4460c:	and	x3, x1, #0xff
   44610:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   44614:	ldr	x2, [x2, #3880]
   44618:	ldr	w2, [x2, x3, lsl #2]
   4461c:	tbnz	w2, #15, 446e4 <my_regprop@@Base+0xa420>
   44620:	cmp	x1, #0x5c
   44624:	b.ne	43ca8 <my_regprop@@Base+0x99e4>  // b.any
   44628:	ldr	x1, [x28, #56]
   4462c:	cmp	x0, x1
   44630:	b.cc	447f4 <my_regprop@@Base+0xa530>  // b.lo, b.ul, b.last
   44634:	ldr	x1, [x28, #24]
   44638:	cbz	x1, 44648 <my_regprop@@Base+0xa384>
   4463c:	mov	w2, #0xb                   	// #11
   44640:	mov	x0, x27
   44644:	bl	54b0 <Perl_save_pushptr@plt>
   44648:	ldr	x1, [x28, #160]
   4464c:	cbz	x1, 4465c <my_regprop@@Base+0xa398>
   44650:	mov	w2, #0xa                   	// #10
   44654:	mov	x0, x27
   44658:	bl	54b0 <Perl_save_pushptr@plt>
   4465c:	ldr	x1, [x28, #168]
   44660:	cbz	x1, 44670 <my_regprop@@Base+0xa3ac>
   44664:	mov	w2, #0xa                   	// #10
   44668:	mov	x0, x27
   4466c:	bl	54b0 <Perl_save_pushptr@plt>
   44670:	ldr	x0, [x28, #64]
   44674:	ldr	x1, [x28, #72]
   44678:	sub	x1, x0, x1
   4467c:	ldr	x0, [x28, #80]
   44680:	add	x0, x0, x1
   44684:	ldr	x1, [x28, #16]
   44688:	cmp	x0, x1
   4468c:	b.hi	447bc <my_regprop@@Base+0xa4f8>  // b.pmore
   44690:	ldr	x5, [x28, #8]
   44694:	sub	x7, x1, x0
   44698:	subs	x4, x0, x5
   4469c:	b.mi	447cc <my_regprop@@Base+0xa508>  // b.first
   446a0:	ldr	w2, [x28, #192]
   446a4:	cmp	w2, #0x0
   446a8:	cset	w3, ne  // ne = any
   446ac:	cmp	x0, x1
   446b0:	csel	x0, x0, x1, ls  // ls = plast
   446b4:	str	x0, [sp]
   446b8:	mov	w6, w3
   446bc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   446c0:	add	x2, x2, #0x750
   446c4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   446c8:	add	x1, x1, #0x3a8
   446cc:	mov	x0, x27
   446d0:	bl	5420 <Perl_croak@plt>
   446d4:	sub	x1, x1, #0x2, lsl #12
   446d8:	sub	x1, x1, #0x28
   446dc:	cmp	x1, #0x1
   446e0:	b.hi	43ca8 <my_regprop@@Base+0x99e4>  // b.pmore
   446e4:	ldr	x1, [x28, #24]
   446e8:	cbz	x1, 446f8 <my_regprop@@Base+0xa434>
   446ec:	mov	w2, #0xb                   	// #11
   446f0:	mov	x0, x27
   446f4:	bl	54b0 <Perl_save_pushptr@plt>
   446f8:	ldr	x1, [x28, #160]
   446fc:	cbz	x1, 4470c <my_regprop@@Base+0xa448>
   44700:	mov	w2, #0xa                   	// #10
   44704:	mov	x0, x27
   44708:	bl	54b0 <Perl_save_pushptr@plt>
   4470c:	ldr	x1, [x28, #168]
   44710:	cbz	x1, 44720 <my_regprop@@Base+0xa45c>
   44714:	mov	w2, #0xa                   	// #10
   44718:	mov	x0, x27
   4471c:	bl	54b0 <Perl_save_pushptr@plt>
   44720:	ldr	x0, [x28, #64]
   44724:	ldr	x1, [x28, #72]
   44728:	sub	x1, x0, x1
   4472c:	ldr	x0, [x28, #80]
   44730:	add	x0, x0, x1
   44734:	ldr	x1, [x28, #16]
   44738:	cmp	x0, x1
   4473c:	b.hi	44784 <my_regprop@@Base+0xa4c0>  // b.pmore
   44740:	ldr	x5, [x28, #8]
   44744:	sub	x7, x1, x0
   44748:	subs	x4, x0, x5
   4474c:	b.mi	44794 <my_regprop@@Base+0xa4d0>  // b.first
   44750:	ldr	w2, [x28, #192]
   44754:	cmp	w2, #0x0
   44758:	cset	w3, ne  // ne = any
   4475c:	cmp	x0, x1
   44760:	csel	x0, x0, x1, ls  // ls = plast
   44764:	str	x0, [sp]
   44768:	mov	w6, w3
   4476c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44770:	add	x2, x2, #0x718
   44774:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   44778:	add	x1, x1, #0x3a8
   4477c:	mov	x0, x27
   44780:	bl	5420 <Perl_croak@plt>
   44784:	ldr	x5, [x28, #8]
   44788:	sub	x4, x1, x5
   4478c:	mov	x7, #0x0                   	// #0
   44790:	b	44750 <my_regprop@@Base+0xa48c>
   44794:	ldr	x6, [x28, #48]
   44798:	ldr	x5, [x28, #56]
   4479c:	sub	w5, w5, w6
   447a0:	mov	w3, #0x4227                	// #16935
   447a4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   447a8:	add	x2, x2, #0xfb8
   447ac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   447b0:	add	x1, x1, #0x870
   447b4:	mov	x0, x27
   447b8:	bl	5420 <Perl_croak@plt>
   447bc:	ldr	x5, [x28, #8]
   447c0:	sub	x4, x1, x5
   447c4:	mov	x7, #0x0                   	// #0
   447c8:	b	446a0 <my_regprop@@Base+0xa3dc>
   447cc:	ldr	x6, [x28, #48]
   447d0:	ldr	x5, [x28, #56]
   447d4:	sub	w5, w5, w6
   447d8:	mov	w3, #0x422d                	// #16941
   447dc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   447e0:	add	x2, x2, #0xfb8
   447e4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   447e8:	add	x1, x1, #0x870
   447ec:	mov	x0, x27
   447f0:	bl	5420 <Perl_croak@plt>
   447f4:	ldr	w2, [x28, #192]
   447f8:	cbz	w2, 44804 <my_regprop@@Base+0xa540>
   447fc:	ldrsb	w2, [x0]
   44800:	tbnz	w2, #31, 44840 <my_regprop@@Base+0xa57c>
   44804:	add	x1, x0, #0x1
   44808:	str	x1, [x28, #64]
   4480c:	ldrb	w2, [x0]
   44810:	str	x2, [sp, #336]
   44814:	cbnz	w21, 44918 <my_regprop@@Base+0xa654>
   44818:	ldr	x19, [sp, #336]
   4481c:	sub	w1, w19, #0x30
   44820:	cmp	w1, #0x48
   44824:	b.hi	4646c <my_regprop@@Base+0xc1a8>  // b.pmore
   44828:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   4482c:	add	x0, x0, #0x7cc
   44830:	ldrh	w0, [x0, w1, uxtw #1]
   44834:	adr	x1, 44840 <my_regprop@@Base+0xa57c>
   44838:	add	x0, x1, w0, sxth #2
   4483c:	br	x0
   44840:	mov	x5, x0
   44844:	mov	x2, #0x0                   	// #0
   44848:	mov	x3, #0x0                   	// #0
   4484c:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   44850:	ldr	x10, [x4, #3824]
   44854:	mov	w9, #0xff                  	// #255
   44858:	mov	x8, x10
   4485c:	ldrb	w7, [x5]
   44860:	ldrb	w4, [x10, w7, sxtw]
   44864:	and	x6, x4, #0xff
   44868:	asr	w4, w9, w4
   4486c:	and	w4, w4, w7
   44870:	sxtw	x4, w4
   44874:	and	x7, x7, #0x3f
   44878:	orr	x2, x7, x2, lsl #6
   4487c:	cmp	x3, #0x0
   44880:	csel	x2, x2, x4, ne  // ne = any
   44884:	add	x4, x8, x6
   44888:	add	x3, x4, x3
   4488c:	ldrb	w3, [x3, #256]
   44890:	cbnz	x3, 448e8 <my_regprop@@Base+0xa624>
   44894:	sub	x0, x5, x0
   44898:	add	x0, x0, #0x1
   4489c:	str	x0, [sp, #344]
   448a0:	str	x2, [sp, #336]
   448a4:	ldr	x0, [x28, #64]
   448a8:	ldr	x1, [sp, #344]
   448ac:	add	x0, x0, x1
   448b0:	str	x0, [x28, #64]
   448b4:	cbz	w21, 4495c <my_regprop@@Base+0xa698>
   448b8:	tst	x2, #0xffffffffffffff00
   448bc:	b.eq	44918 <my_regprop@@Base+0xa654>  // b.none
   448c0:	ldr	x19, [sp, #336]
   448c4:	sub	w1, w19, #0x30
   448c8:	cmp	w1, #0x48
   448cc:	b.hi	43ca8 <my_regprop@@Base+0x99e4>  // b.pmore
   448d0:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   448d4:	add	x0, x0, #0x860
   448d8:	ldrh	w0, [x0, w1, uxtw #1]
   448dc:	adr	x1, 448e8 <my_regprop@@Base+0xa624>
   448e0:	add	x0, x1, w0, sxth #2
   448e4:	br	x0
   448e8:	add	x5, x5, #0x1
   448ec:	cmp	x1, x5
   448f0:	ccmp	x3, #0x1, #0x4, hi  // hi = pmore
   448f4:	b.ne	4485c <my_regprop@@Base+0xa598>  // b.any
   448f8:	mov	x5, #0x0                   	// #0
   448fc:	mov	x4, #0x0                   	// #0
   44900:	mov	w3, #0x0                   	// #0
   44904:	add	x2, sp, #0x158
   44908:	sub	x1, x1, x0
   4490c:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   44910:	mov	x2, x0
   44914:	b	448a0 <my_regprop@@Base+0xa5dc>
   44918:	and	x2, x2, #0xff
   4491c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   44920:	ldr	x0, [x0, #3880]
   44924:	ldr	w1, [x0, x2, lsl #2]
   44928:	mov	w0, #0x4800                	// #18432
   4492c:	bics	wzr, w0, w1
   44930:	b.eq	43ca8 <my_regprop@@Base+0x99e4>  // b.none
   44934:	ldr	x19, [sp, #336]
   44938:	sub	w1, w19, #0x30
   4493c:	cmp	w1, #0x48
   44940:	b.hi	4646c <my_regprop@@Base+0xc1a8>  // b.pmore
   44944:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   44948:	add	x0, x0, #0x8f4
   4494c:	ldrh	w0, [x0, w1, uxtw #1]
   44950:	adr	x1, 4495c <my_regprop@@Base+0xa698>
   44954:	add	x0, x1, w0, sxth #2
   44958:	br	x0
   4495c:	ldr	x19, [sp, #336]
   44960:	sub	w1, w19, #0x30
   44964:	cmp	w1, #0x48
   44968:	b.hi	46464 <my_regprop@@Base+0xc1a0>  // b.pmore
   4496c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   44970:	add	x0, x0, #0x988
   44974:	ldrh	w0, [x0, w1, uxtw #1]
   44978:	adr	x1, 44984 <my_regprop@@Base+0xa6c0>
   4497c:	add	x0, x1, w0, sxth #2
   44980:	br	x0
   44984:	mov	w19, #0x1                   	// #1
   44988:	b	444c8 <my_regprop@@Base+0xa204>
   4498c:	mov	w19, #0x14                  	// #20
   44990:	b	444c8 <my_regprop@@Base+0xa204>
   44994:	mov	w19, #0x15                  	// #21
   44998:	b	444c8 <my_regprop@@Base+0xa204>
   4499c:	mov	w19, #0x2                   	// #2
   449a0:	b	444c8 <my_regprop@@Base+0xa204>
   449a4:	mov	w19, #0x3                   	// #3
   449a8:	b	444c8 <my_regprop@@Base+0xa204>
   449ac:	mov	w19, #0x1e                  	// #30
   449b0:	b	444c8 <my_regprop@@Base+0xa204>
   449b4:	mov	w19, #0x1f                  	// #31
   449b8:	b	444c8 <my_regprop@@Base+0xa204>
   449bc:	mov	w19, #0x20                  	// #32
   449c0:	b	444c8 <my_regprop@@Base+0xa204>
   449c4:	mov	w19, #0x21                  	// #33
   449c8:	b	444c8 <my_regprop@@Base+0xa204>
   449cc:	ldr	x19, [x28, #64]
   449d0:	ldr	w7, [sp, #216]
   449d4:	mov	w6, w23
   449d8:	ldr	x5, [sp, #160]
   449dc:	add	x4, sp, #0x1d0
   449e0:	add	x3, sp, #0x150
   449e4:	mov	x2, #0x0                   	// #0
   449e8:	mov	x1, x28
   449ec:	mov	x0, x27
   449f0:	bl	42288 <my_regprop@@Base+0x7fc4>
   449f4:	ands	w0, w0, #0xff
   449f8:	b.ne	45060 <my_regprop@@Base+0xad9c>  // b.any
   449fc:	ldr	x0, [sp, #160]
   44a00:	ldr	w0, [x0]
   44a04:	tbnz	w0, #6, 44b30 <my_regprop@@Base+0xa86c>
   44a08:	tbnz	w0, #5, 44bc4 <my_regprop@@Base+0xa900>
   44a0c:	ldr	w0, [sp, #464]
   44a10:	tbnz	w0, #31, 44bcc <my_regprop@@Base+0xa908>
   44a14:	cbnz	w0, 44d44 <my_regprop@@Base+0xaa80>
   44a18:	ldr	x1, [x28, #72]
   44a1c:	cbz	x1, 44ca4 <my_regprop@@Base+0xa9e0>
   44a20:	ldr	x0, [x28, #64]
   44a24:	sub	x1, x0, x1
   44a28:	ldr	x0, [x28, #80]
   44a2c:	add	x0, x0, x1
   44a30:	ldr	x1, [x28, #8]
   44a34:	sub	x0, x0, x1
   44a38:	ldr	x1, [x28, #136]
   44a3c:	cmp	x0, x1
   44a40:	b.le	44b18 <my_regprop@@Base+0xa854>
   44a44:	ldr	x0, [x27, #224]
   44a48:	cbz	x0, 44a70 <my_regprop@@Base+0xa7ac>
   44a4c:	ldr	x0, [x0, #64]
   44a50:	cmp	x0, #0x0
   44a54:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   44a58:	ldr	x1, [x1, #3984]
   44a5c:	ccmp	x0, x1, #0x4, ne  // ne = any
   44a60:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   44a64:	ldr	x1, [x1, #3832]
   44a68:	ccmp	x0, x1, #0x4, ne  // ne = any
   44a6c:	b.ne	44cc4 <my_regprop@@Base+0xaa00>  // b.any
   44a70:	ldr	w0, [x28, #192]
   44a74:	cmp	w0, #0x0
   44a78:	cset	w3, ne  // ne = any
   44a7c:	ldr	x0, [x28, #64]
   44a80:	ldr	x1, [x28, #72]
   44a84:	sub	x1, x0, x1
   44a88:	ldr	x0, [x28, #80]
   44a8c:	add	x0, x0, x1
   44a90:	ldr	x1, [x28, #16]
   44a94:	cmp	x0, x1
   44a98:	b.hi	44d0c <my_regprop@@Base+0xaa48>  // b.pmore
   44a9c:	ldr	x5, [x28, #8]
   44aa0:	subs	x4, x0, x5
   44aa4:	b.mi	44d1c <my_regprop@@Base+0xaa58>  // b.first
   44aa8:	sub	x7, x1, x0
   44aac:	cmp	x0, x1
   44ab0:	csel	x0, x0, x1, ls  // ls = plast
   44ab4:	str	x0, [sp]
   44ab8:	mov	w6, w3
   44abc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44ac0:	add	x2, x2, #0x7c8
   44ac4:	mov	w1, #0x14                  	// #20
   44ac8:	mov	x0, x27
   44acc:	bl	5150 <Perl_ck_warner@plt>
   44ad0:	ldr	x0, [x28, #72]
   44ad4:	cbz	x0, 44b18 <my_regprop@@Base+0xa854>
   44ad8:	ldr	x1, [x28, #64]
   44adc:	sub	x1, x1, x0
   44ae0:	ldr	x0, [x28, #80]
   44ae4:	add	x1, x0, x1
   44ae8:	ldr	x2, [x28, #8]
   44aec:	sub	x3, x1, x2
   44af0:	ldr	x0, [x28, #136]
   44af4:	cmp	x3, x0
   44af8:	b.le	44b18 <my_regprop@@Base+0xa854>
   44afc:	ldr	x0, [x28, #16]
   44b00:	cmp	x0, x1
   44b04:	csel	x0, x0, x1, ls  // ls = plast
   44b08:	cmp	x2, x0
   44b0c:	csel	x0, x2, x0, hi  // hi = pmore
   44b10:	sub	x0, x0, x2
   44b14:	str	x0, [x28, #136]
   44b18:	ldr	x0, [sp, #176]
   44b1c:	sub	x0, x0, #0x1
   44b20:	str	x0, [sp, #176]
   44b24:	ldr	x0, [sp, #304]
   44b28:	str	x0, [sp, #336]
   44b2c:	b	43b74 <my_regprop@@Base+0x98b0>
   44b30:	ldr	x19, [x28, #16]
   44b34:	ldr	x0, [x28, #8]
   44b38:	sub	x19, x19, x0
   44b3c:	ldr	x1, [x28, #24]
   44b40:	cbz	x1, 44b50 <my_regprop@@Base+0xa88c>
   44b44:	mov	w2, #0xb                   	// #11
   44b48:	mov	x0, x27
   44b4c:	bl	54b0 <Perl_save_pushptr@plt>
   44b50:	ldr	x1, [x28, #160]
   44b54:	cbz	x1, 44b64 <my_regprop@@Base+0xa8a0>
   44b58:	mov	w2, #0xa                   	// #10
   44b5c:	mov	x0, x27
   44b60:	bl	54b0 <Perl_save_pushptr@plt>
   44b64:	ldr	x1, [x28, #168]
   44b68:	cbz	x1, 44b78 <my_regprop@@Base+0xa8b4>
   44b6c:	mov	w2, #0xa                   	// #10
   44b70:	mov	x0, x27
   44b74:	bl	54b0 <Perl_save_pushptr@plt>
   44b78:	cmp	x19, #0x7f
   44b7c:	b.le	44bb8 <my_regprop@@Base+0xa8f4>
   44b80:	mov	x19, #0x75                  	// #117
   44b84:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   44b88:	add	x6, x6, #0xfe0
   44b8c:	ldr	w0, [x28, #192]
   44b90:	cmp	w0, #0x0
   44b94:	ldr	x5, [x28, #8]
   44b98:	mov	x4, x19
   44b9c:	cset	w3, ne  // ne = any
   44ba0:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44ba4:	add	x2, x2, #0x760
   44ba8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44bac:	add	x1, x1, #0x50
   44bb0:	mov	x0, x27
   44bb4:	bl	5420 <Perl_croak@plt>
   44bb8:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   44bbc:	add	x6, x6, #0x20
   44bc0:	b	44b8c <my_regprop@@Base+0xa8c8>
   44bc4:	mov	x19, #0x0                   	// #0
   44bc8:	b	47fb8 <my_regprop@@Base+0xdcf4>
   44bcc:	ldr	x1, [x28, #24]
   44bd0:	cbz	x1, 44be0 <my_regprop@@Base+0xa91c>
   44bd4:	mov	w2, #0xb                   	// #11
   44bd8:	mov	x0, x27
   44bdc:	bl	54b0 <Perl_save_pushptr@plt>
   44be0:	ldr	x1, [x28, #160]
   44be4:	cbz	x1, 44bf4 <my_regprop@@Base+0xa930>
   44be8:	mov	w2, #0xa                   	// #10
   44bec:	mov	x0, x27
   44bf0:	bl	54b0 <Perl_save_pushptr@plt>
   44bf4:	ldr	x1, [x28, #168]
   44bf8:	cbz	x1, 44c08 <my_regprop@@Base+0xa944>
   44bfc:	mov	w2, #0xa                   	// #10
   44c00:	mov	x0, x27
   44c04:	bl	54b0 <Perl_save_pushptr@plt>
   44c08:	ldr	x0, [x28, #64]
   44c0c:	ldr	x1, [x28, #72]
   44c10:	sub	x1, x0, x1
   44c14:	ldr	x0, [x28, #80]
   44c18:	add	x0, x0, x1
   44c1c:	ldr	x1, [x28, #16]
   44c20:	cmp	x0, x1
   44c24:	b.hi	44c6c <my_regprop@@Base+0xa9a8>  // b.pmore
   44c28:	ldr	x5, [x28, #8]
   44c2c:	subs	x4, x0, x5
   44c30:	b.mi	44c7c <my_regprop@@Base+0xa9b8>  // b.first
   44c34:	sub	x7, x1, x0
   44c38:	ldr	w2, [x28, #192]
   44c3c:	cmp	w2, #0x0
   44c40:	cset	w3, ne  // ne = any
   44c44:	cmp	x0, x1
   44c48:	csel	x0, x0, x1, ls  // ls = plast
   44c4c:	str	x0, [sp]
   44c50:	mov	w6, w3
   44c54:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44c58:	add	x2, x2, #0x788
   44c5c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   44c60:	add	x1, x1, #0x3a8
   44c64:	mov	x0, x27
   44c68:	bl	5420 <Perl_croak@plt>
   44c6c:	ldr	x5, [x28, #8]
   44c70:	sub	x4, x1, x5
   44c74:	mov	x7, #0x0                   	// #0
   44c78:	b	44c38 <my_regprop@@Base+0xa974>
   44c7c:	ldr	x6, [x28, #48]
   44c80:	ldr	x5, [x28, #56]
   44c84:	sub	w5, w5, w6
   44c88:	mov	w3, #0x4263                	// #16995
   44c8c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44c90:	add	x2, x2, #0xfb8
   44c94:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44c98:	add	x1, x1, #0x870
   44c9c:	mov	x0, x27
   44ca0:	bl	5420 <Perl_croak@plt>
   44ca4:	ldr	x4, [x28, #64]
   44ca8:	mov	w3, #0x4266                	// #16998
   44cac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44cb0:	add	x2, x2, #0xfb8
   44cb4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44cb8:	add	x1, x1, #0xab8
   44cbc:	mov	x0, x27
   44cc0:	bl	5420 <Perl_croak@plt>
   44cc4:	ldrb	w0, [x0, #13]
   44cc8:	tbz	w0, #1, 44a70 <my_regprop@@Base+0xa7ac>
   44ccc:	ldr	x1, [x28, #24]
   44cd0:	cbz	x1, 44ce0 <my_regprop@@Base+0xaa1c>
   44cd4:	mov	w2, #0xb                   	// #11
   44cd8:	mov	x0, x27
   44cdc:	bl	54b0 <Perl_save_pushptr@plt>
   44ce0:	ldr	x1, [x28, #160]
   44ce4:	cbz	x1, 44cf4 <my_regprop@@Base+0xaa30>
   44ce8:	mov	w2, #0xa                   	// #10
   44cec:	mov	x0, x27
   44cf0:	bl	54b0 <Perl_save_pushptr@plt>
   44cf4:	ldr	x1, [x28, #168]
   44cf8:	cbz	x1, 44a70 <my_regprop@@Base+0xa7ac>
   44cfc:	mov	w2, #0xa                   	// #10
   44d00:	mov	x0, x27
   44d04:	bl	54b0 <Perl_save_pushptr@plt>
   44d08:	b	44a70 <my_regprop@@Base+0xa7ac>
   44d0c:	ldr	x5, [x28, #8]
   44d10:	sub	x4, x1, x5
   44d14:	mov	x7, #0x0                   	// #0
   44d18:	b	44aac <my_regprop@@Base+0xa7e8>
   44d1c:	ldr	x6, [x28, #48]
   44d20:	ldr	x5, [x28, #56]
   44d24:	sub	w5, w5, w6
   44d28:	mov	w3, #0x4266                	// #16998
   44d2c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44d30:	add	x2, x2, #0xfb8
   44d34:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44d38:	add	x1, x1, #0x870
   44d3c:	mov	x0, x27
   44d40:	bl	5420 <Perl_croak@plt>
   44d44:	cmp	w0, #0x1
   44d48:	b.le	44e24 <my_regprop@@Base+0xab60>
   44d4c:	ldr	w0, [x28, #256]
   44d50:	cbnz	w0, 44b18 <my_regprop@@Base+0xa854>
   44d54:	ldr	w0, [sp, #240]
   44d58:	eor	w0, w0, #0x1
   44d5c:	ldr	w1, [sp, #172]
   44d60:	orr	w0, w1, w0
   44d64:	ldr	w1, [sp, #208]
   44d68:	orr	w0, w0, w1
   44d6c:	tst	w0, #0xff
   44d70:	b.eq	44e48 <my_regprop@@Base+0xab84>  // b.none
   44d74:	cbz	w23, 44ebc <my_regprop@@Base+0xabf8>
   44d78:	ldr	x0, [x28, #64]
   44d7c:	sub	x0, x0, #0x1
   44d80:	str	x0, [x28, #64]
   44d84:	ldr	x1, [x28, #24]
   44d88:	cbz	x1, 44d98 <my_regprop@@Base+0xaad4>
   44d8c:	mov	w2, #0xb                   	// #11
   44d90:	mov	x0, x27
   44d94:	bl	54b0 <Perl_save_pushptr@plt>
   44d98:	ldr	x1, [x28, #160]
   44d9c:	cbz	x1, 44dac <my_regprop@@Base+0xaae8>
   44da0:	mov	w2, #0xa                   	// #10
   44da4:	mov	x0, x27
   44da8:	bl	54b0 <Perl_save_pushptr@plt>
   44dac:	ldr	x1, [x28, #168]
   44db0:	cbz	x1, 44dc0 <my_regprop@@Base+0xaafc>
   44db4:	mov	w2, #0xa                   	// #10
   44db8:	mov	x0, x27
   44dbc:	bl	54b0 <Perl_save_pushptr@plt>
   44dc0:	ldr	x0, [x28, #64]
   44dc4:	ldr	x1, [x28, #72]
   44dc8:	sub	x1, x0, x1
   44dcc:	ldr	x0, [x28, #80]
   44dd0:	add	x0, x0, x1
   44dd4:	ldr	x1, [x28, #16]
   44dd8:	cmp	x0, x1
   44ddc:	b.hi	44e84 <my_regprop@@Base+0xabc0>  // b.pmore
   44de0:	ldr	x5, [x28, #8]
   44de4:	subs	x4, x0, x5
   44de8:	b.mi	44e94 <my_regprop@@Base+0xabd0>  // b.first
   44dec:	sub	x7, x1, x0
   44df0:	ldr	w2, [x28, #192]
   44df4:	cmp	w2, #0x0
   44df8:	cset	w3, ne  // ne = any
   44dfc:	cmp	x0, x1
   44e00:	csel	x0, x0, x1, ls  // ls = plast
   44e04:	str	x0, [sp]
   44e08:	mov	w6, w3
   44e0c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44e10:	add	x2, x2, #0x848
   44e14:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   44e18:	add	x1, x1, #0x3a8
   44e1c:	mov	x0, x27
   44e20:	bl	5420 <Perl_croak@plt>
   44e24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   44e28:	add	x3, x3, #0xc10
   44e2c:	add	x3, x3, #0x870
   44e30:	mov	w2, #0x426a                	// #17002
   44e34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   44e38:	add	x1, x1, #0xfb8
   44e3c:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   44e40:	add	x0, x0, #0x838
   44e44:	bl	58e0 <__assert_fail@plt>
   44e48:	ldr	x2, [x28, #64]
   44e4c:	ldrb	w0, [x2]
   44e50:	cmp	w0, #0x2d
   44e54:	b.eq	44d74 <my_regprop@@Base+0xaab0>  // b.none
   44e58:	sub	x1, x19, #0x2
   44e5c:	sub	x2, x2, x1
   44e60:	mov	x0, x27
   44e64:	bl	59a0 <Perl_newSVpvn@plt>
   44e68:	ldrsw	x3, [sp, #464]
   44e6c:	mov	x2, x0
   44e70:	ldr	x1, [sp, #144]
   44e74:	mov	x0, x27
   44e78:	bl	291fc <my_regexec@@Base+0x5d08>
   44e7c:	str	x0, [sp, #144]
   44e80:	b	44b18 <my_regprop@@Base+0xa854>
   44e84:	ldr	x5, [x28, #8]
   44e88:	sub	x4, x1, x5
   44e8c:	mov	x7, #0x0                   	// #0
   44e90:	b	44df0 <my_regprop@@Base+0xab2c>
   44e94:	ldr	x6, [x28, #48]
   44e98:	ldr	x5, [x28, #56]
   44e9c:	sub	w5, w5, w6
   44ea0:	mov	w3, #0x4273                	// #17011
   44ea4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44ea8:	add	x2, x2, #0xfb8
   44eac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44eb0:	add	x1, x1, #0x870
   44eb4:	mov	x0, x27
   44eb8:	bl	5420 <Perl_croak@plt>
   44ebc:	ldr	x1, [x28, #72]
   44ec0:	cbz	x1, 44fbc <my_regprop@@Base+0xacf8>
   44ec4:	ldr	x0, [x28, #64]
   44ec8:	sub	x1, x0, x1
   44ecc:	ldr	x0, [x28, #80]
   44ed0:	add	x0, x0, x1
   44ed4:	ldr	x1, [x28, #8]
   44ed8:	sub	x0, x0, x1
   44edc:	ldr	x1, [x28, #136]
   44ee0:	cmp	x0, x1
   44ee4:	b.le	43ca8 <my_regprop@@Base+0x99e4>
   44ee8:	ldr	x0, [x27, #224]
   44eec:	cbz	x0, 44f14 <my_regprop@@Base+0xac50>
   44ef0:	ldr	x0, [x0, #64]
   44ef4:	cmp	x0, #0x0
   44ef8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   44efc:	ldr	x1, [x1, #3984]
   44f00:	ccmp	x0, x1, #0x4, ne  // ne = any
   44f04:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   44f08:	ldr	x1, [x1, #3832]
   44f0c:	ccmp	x0, x1, #0x4, ne  // ne = any
   44f10:	b.ne	44fdc <my_regprop@@Base+0xad18>  // b.any
   44f14:	ldr	w0, [x28, #192]
   44f18:	cmp	w0, #0x0
   44f1c:	cset	w3, ne  // ne = any
   44f20:	ldr	x0, [x28, #64]
   44f24:	ldr	x1, [x28, #72]
   44f28:	sub	x1, x0, x1
   44f2c:	ldr	x0, [x28, #80]
   44f30:	add	x0, x0, x1
   44f34:	ldr	x1, [x28, #16]
   44f38:	cmp	x0, x1
   44f3c:	b.ls	45024 <my_regprop@@Base+0xad60>  // b.plast
   44f40:	ldr	x5, [x28, #8]
   44f44:	sub	x4, x1, x5
   44f48:	mov	x7, #0x0                   	// #0
   44f4c:	cmp	x0, x1
   44f50:	csel	x0, x0, x1, ls  // ls = plast
   44f54:	str	x0, [sp]
   44f58:	mov	w6, w3
   44f5c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   44f60:	add	x2, x2, #0x8a0
   44f64:	mov	w1, #0x14                  	// #20
   44f68:	mov	x0, x27
   44f6c:	bl	5150 <Perl_ck_warner@plt>
   44f70:	ldr	x0, [x28, #72]
   44f74:	cbz	x0, 43ca8 <my_regprop@@Base+0x99e4>
   44f78:	ldr	x1, [x28, #64]
   44f7c:	sub	x1, x1, x0
   44f80:	ldr	x0, [x28, #80]
   44f84:	add	x1, x0, x1
   44f88:	ldr	x2, [x28, #8]
   44f8c:	sub	x3, x1, x2
   44f90:	ldr	x0, [x28, #136]
   44f94:	cmp	x3, x0
   44f98:	b.le	43ca8 <my_regprop@@Base+0x99e4>
   44f9c:	ldr	x0, [x28, #16]
   44fa0:	cmp	x0, x1
   44fa4:	csel	x0, x0, x1, ls  // ls = plast
   44fa8:	cmp	x2, x0
   44fac:	csel	x0, x2, x0, hi  // hi = pmore
   44fb0:	sub	x0, x0, x2
   44fb4:	str	x0, [x28, #136]
   44fb8:	b	43ca8 <my_regprop@@Base+0x99e4>
   44fbc:	ldr	x4, [x28, #64]
   44fc0:	mov	w3, #0x4275                	// #17013
   44fc4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   44fc8:	add	x2, x2, #0xfb8
   44fcc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   44fd0:	add	x1, x1, #0xab8
   44fd4:	mov	x0, x27
   44fd8:	bl	5420 <Perl_croak@plt>
   44fdc:	ldrb	w0, [x0, #13]
   44fe0:	tbz	w0, #1, 44f14 <my_regprop@@Base+0xac50>
   44fe4:	ldr	x1, [x28, #24]
   44fe8:	cbz	x1, 44ff8 <my_regprop@@Base+0xad34>
   44fec:	mov	w2, #0xb                   	// #11
   44ff0:	mov	x0, x27
   44ff4:	bl	54b0 <Perl_save_pushptr@plt>
   44ff8:	ldr	x1, [x28, #160]
   44ffc:	cbz	x1, 4500c <my_regprop@@Base+0xad48>
   45000:	mov	w2, #0xa                   	// #10
   45004:	mov	x0, x27
   45008:	bl	54b0 <Perl_save_pushptr@plt>
   4500c:	ldr	x1, [x28, #168]
   45010:	cbz	x1, 44f14 <my_regprop@@Base+0xac50>
   45014:	mov	w2, #0xa                   	// #10
   45018:	mov	x0, x27
   4501c:	bl	54b0 <Perl_save_pushptr@plt>
   45020:	b	44f14 <my_regprop@@Base+0xac50>
   45024:	ldr	x5, [x28, #8]
   45028:	subs	x4, x0, x5
   4502c:	b.mi	45038 <my_regprop@@Base+0xad74>  // b.first
   45030:	sub	x7, x1, x0
   45034:	b	44f4c <my_regprop@@Base+0xac88>
   45038:	ldr	x6, [x28, #48]
   4503c:	ldr	x5, [x28, #56]
   45040:	sub	w5, w5, w6
   45044:	mov	w3, #0x4275                	// #17013
   45048:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4504c:	add	x2, x2, #0xfb8
   45050:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   45054:	add	x1, x1, #0x870
   45058:	mov	x0, x27
   4505c:	bl	5420 <Perl_croak@plt>
   45060:	str	w0, [sp, #292]
   45064:	b	43ca8 <my_regprop@@Base+0x99e4>
   45068:	ldr	w0, [x28]
   4506c:	tst	x0, #0x380
   45070:	b.ne	450b0 <my_regprop@@Base+0xadec>  // b.any
   45074:	and	w0, w0, #0xfffffc7f
   45078:	orr	w0, w0, #0x100
   4507c:	str	w0, [x28]
   45080:	mov	w0, #0x1                   	// #1
   45084:	str	w0, [x28, #200]
   45088:	ldrb	w0, [x28, #384]
   4508c:	cbz	w0, 450b0 <my_regprop@@Base+0xadec>
   45090:	ldr	w0, [x28, #148]
   45094:	tbnz	w0, #31, 450b0 <my_regprop@@Base+0xadec>
   45098:	ldr	x1, [sp, #160]
   4509c:	ldr	w0, [x1]
   450a0:	orr	w0, w0, #0x20
   450a4:	str	w0, [x1]
   450a8:	mov	x19, #0x0                   	// #0
   450ac:	b	47fb8 <my_regprop@@Base+0xdcf4>
   450b0:	ldr	x0, [x28, #64]
   450b4:	mov	x1, x0
   450b8:	str	x0, [sp, #280]
   450bc:	ldr	x0, [x28, #56]
   450c0:	cmp	x1, x0
   450c4:	b.cc	451b0 <my_regprop@@Base+0xaeec>  // b.lo, b.ul, b.last
   450c8:	ldr	x1, [x28, #24]
   450cc:	cbz	x1, 450dc <my_regprop@@Base+0xae18>
   450d0:	mov	w2, #0xb                   	// #11
   450d4:	mov	x0, x27
   450d8:	bl	54b0 <Perl_save_pushptr@plt>
   450dc:	ldr	x1, [x28, #160]
   450e0:	cbz	x1, 450f0 <my_regprop@@Base+0xae2c>
   450e4:	mov	w2, #0xa                   	// #10
   450e8:	mov	x0, x27
   450ec:	bl	54b0 <Perl_save_pushptr@plt>
   450f0:	ldr	x1, [x28, #168]
   450f4:	cbz	x1, 45104 <my_regprop@@Base+0xae40>
   450f8:	mov	w2, #0xa                   	// #10
   450fc:	mov	x0, x27
   45100:	bl	54b0 <Perl_save_pushptr@plt>
   45104:	ldr	x0, [x28, #64]
   45108:	ldr	x1, [x28, #72]
   4510c:	sub	x1, x0, x1
   45110:	ldr	x0, [x28, #80]
   45114:	add	x0, x0, x1
   45118:	ldr	x2, [x28, #16]
   4511c:	cmp	x0, x2
   45120:	b.hi	45178 <my_regprop@@Base+0xaeb4>  // b.pmore
   45124:	ldr	x7, [x28, #8]
   45128:	subs	x4, x0, x7
   4512c:	b.mi	45188 <my_regprop@@Base+0xaec4>  // b.first
   45130:	mov	x6, x4
   45134:	sub	x3, x2, x0
   45138:	ldr	w1, [x28, #192]
   4513c:	cmp	w1, #0x0
   45140:	cset	w1, ne  // ne = any
   45144:	cmp	x0, x2
   45148:	csel	x0, x0, x2, ls  // ls = plast
   4514c:	str	x0, [sp, #16]
   45150:	str	x3, [sp, #8]
   45154:	str	w1, [sp]
   45158:	mov	w5, w1
   4515c:	ldrb	w4, [sp, #336]
   45160:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   45164:	add	x3, x3, #0x5d8
   45168:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4516c:	add	x2, x2, #0x928
   45170:	mov	x0, x27
   45174:	bl	273ac <my_regexec@@Base+0x3eb8>
   45178:	ldr	x7, [x28, #8]
   4517c:	sub	x6, x2, x7
   45180:	mov	x3, #0x0                   	// #0
   45184:	b	45138 <my_regprop@@Base+0xae74>
   45188:	ldr	x6, [x28, #48]
   4518c:	ldr	x5, [x28, #56]
   45190:	sub	w5, w5, w6
   45194:	mov	w3, #0x429a                	// #17050
   45198:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4519c:	add	x2, x2, #0xfb8
   451a0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   451a4:	add	x1, x1, #0x870
   451a8:	mov	x0, x27
   451ac:	bl	5420 <Perl_croak@plt>
   451b0:	ldr	x1, [sp, #280]
   451b4:	ldrb	w2, [x1]
   451b8:	cmp	w2, #0x7b
   451bc:	b.eq	45200 <my_regprop@@Base+0xaf3c>  // b.none
   451c0:	and	w1, w2, #0xffffffdf
   451c4:	sub	w1, w1, #0x41
   451c8:	cmp	w1, #0x19
   451cc:	b.ls	455c4 <my_regprop@@Base+0xb300>  // b.plast
   451d0:	ldr	w1, [x28, #192]
   451d4:	cbz	w1, 454c4 <my_regprop@@Base+0xb200>
   451d8:	ldr	x1, [sp, #280]
   451dc:	sub	x1, x0, x1
   451e0:	cmp	x1, #0x0
   451e4:	b.le	45584 <my_regprop@@Base+0xb2c0>
   451e8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   451ec:	ldr	x0, [x0, #4064]
   451f0:	ldrb	w0, [x0, w2, sxtw]
   451f4:	cmp	x0, x1
   451f8:	csel	x0, x0, x1, le
   451fc:	b	454c8 <my_regprop@@Base+0xb204>
   45200:	and	w1, w19, #0xff
   45204:	str	w1, [sp, #312]
   45208:	ldr	x3, [sp, #280]
   4520c:	sub	x2, x0, x3
   45210:	mov	w1, #0x7d                  	// #125
   45214:	mov	x0, x3
   45218:	bl	5750 <memchr@plt>
   4521c:	str	x0, [sp, #296]
   45220:	cbz	x0, 45240 <my_regprop@@Base+0xaf7c>
   45224:	ldr	x0, [sp, #280]
   45228:	add	x0, x0, #0x1
   4522c:	str	x0, [x28, #64]
   45230:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   45234:	ldr	x1, [x1, #3880]
   45238:	mov	w3, #0x4400                	// #17408
   4523c:	b	4533c <my_regprop@@Base+0xb078>
   45240:	ldr	x0, [sp, #280]
   45244:	add	x0, x0, #0x1
   45248:	str	x0, [x28, #64]
   4524c:	ldr	x1, [x28, #24]
   45250:	cbz	x1, 45260 <my_regprop@@Base+0xaf9c>
   45254:	mov	w2, #0xb                   	// #11
   45258:	mov	x0, x27
   4525c:	bl	54b0 <Perl_save_pushptr@plt>
   45260:	ldr	x1, [x28, #160]
   45264:	cbz	x1, 45274 <my_regprop@@Base+0xafb0>
   45268:	mov	w2, #0xa                   	// #10
   4526c:	mov	x0, x27
   45270:	bl	54b0 <Perl_save_pushptr@plt>
   45274:	ldr	x1, [x28, #168]
   45278:	cbz	x1, 45288 <my_regprop@@Base+0xafc4>
   4527c:	mov	w2, #0xa                   	// #10
   45280:	mov	x0, x27
   45284:	bl	54b0 <Perl_save_pushptr@plt>
   45288:	ldr	x0, [x28, #64]
   4528c:	ldr	x1, [x28, #72]
   45290:	sub	x1, x0, x1
   45294:	ldr	x0, [x28, #80]
   45298:	add	x0, x0, x1
   4529c:	ldr	x2, [x28, #16]
   452a0:	cmp	x0, x2
   452a4:	b.hi	452fc <my_regprop@@Base+0xb038>  // b.pmore
   452a8:	ldr	x7, [x28, #8]
   452ac:	subs	x4, x0, x7
   452b0:	b.mi	4530c <my_regprop@@Base+0xb048>  // b.first
   452b4:	mov	x6, x4
   452b8:	sub	x3, x2, x0
   452bc:	ldr	w1, [x28, #192]
   452c0:	cmp	w1, #0x0
   452c4:	cset	w1, ne  // ne = any
   452c8:	cmp	x0, x2
   452cc:	csel	x0, x0, x2, ls  // ls = plast
   452d0:	str	x0, [sp, #16]
   452d4:	str	x3, [sp, #8]
   452d8:	str	w1, [sp]
   452dc:	mov	w5, w1
   452e0:	ldr	w4, [sp, #312]
   452e4:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   452e8:	add	x3, x3, #0x5d8
   452ec:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   452f0:	add	x2, x2, #0x3f0
   452f4:	mov	x0, x27
   452f8:	bl	273ac <my_regexec@@Base+0x3eb8>
   452fc:	ldr	x7, [x28, #8]
   45300:	sub	x6, x2, x7
   45304:	mov	x3, #0x0                   	// #0
   45308:	b	452bc <my_regprop@@Base+0xaff8>
   4530c:	ldr	x6, [x28, #48]
   45310:	ldr	x5, [x28, #56]
   45314:	sub	w5, w5, w6
   45318:	mov	w3, #0x42a0                	// #17056
   4531c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   45320:	add	x2, x2, #0xfb8
   45324:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   45328:	add	x1, x1, #0x870
   4532c:	mov	x0, x27
   45330:	bl	5420 <Perl_croak@plt>
   45334:	add	x0, x0, #0x1
   45338:	str	x0, [x28, #64]
   4533c:	ldr	x0, [x28, #64]
   45340:	ldrb	w2, [x0]
   45344:	ldrb	w4, [x0]
   45348:	ldr	w4, [x1, x4, lsl #2]
   4534c:	bics	wzr, w3, w4
   45350:	b.eq	45334 <my_regprop@@Base+0xb070>  // b.none
   45354:	cmp	w2, #0x5e
   45358:	b.eq	4539c <my_regprop@@Base+0xb0d8>  // b.none
   4535c:	ldr	x2, [x28, #64]
   45360:	ldr	x0, [sp, #296]
   45364:	cmp	x2, x0
   45368:	b.eq	453dc <my_regprop@@Base+0xb118>  // b.none
   4536c:	ldr	x0, [sp, #296]
   45370:	sub	x0, x0, x2
   45374:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   45378:	ldr	x1, [x1, #3880]
   4537c:	mov	w3, #0x4400                	// #17408
   45380:	str	x0, [sp, #280]
   45384:	sub	x0, x0, #0x1
   45388:	ldrb	w4, [x2, x0]
   4538c:	ldr	w4, [x1, x4, lsl #2]
   45390:	bics	wzr, w3, w4
   45394:	b.eq	45380 <my_regprop@@Base+0xb0bc>  // b.none
   45398:	b	455d4 <my_regprop@@Base+0xb310>
   4539c:	eor	x19, x19, #0x20
   453a0:	str	x19, [sp, #336]
   453a4:	add	x0, x0, #0x1
   453a8:	str	x0, [x28, #64]
   453ac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   453b0:	ldr	x1, [x1, #3880]
   453b4:	mov	w2, #0x4400                	// #17408
   453b8:	b	453c4 <my_regprop@@Base+0xb100>
   453bc:	add	x0, x0, #0x1
   453c0:	str	x0, [x28, #64]
   453c4:	ldr	x0, [x28, #64]
   453c8:	ldrb	w3, [x0]
   453cc:	ldr	w3, [x1, x3, lsl #2]
   453d0:	bics	wzr, w2, w3
   453d4:	b.eq	453bc <my_regprop@@Base+0xb0f8>  // b.none
   453d8:	b	4535c <my_regprop@@Base+0xb098>
   453dc:	ldr	x1, [x28, #24]
   453e0:	cbz	x1, 453f0 <my_regprop@@Base+0xb12c>
   453e4:	mov	w2, #0xb                   	// #11
   453e8:	mov	x0, x27
   453ec:	bl	54b0 <Perl_save_pushptr@plt>
   453f0:	ldr	x1, [x28, #160]
   453f4:	cbz	x1, 45404 <my_regprop@@Base+0xb140>
   453f8:	mov	w2, #0xa                   	// #10
   453fc:	mov	x0, x27
   45400:	bl	54b0 <Perl_save_pushptr@plt>
   45404:	ldr	x1, [x28, #168]
   45408:	cbz	x1, 45418 <my_regprop@@Base+0xb154>
   4540c:	mov	w2, #0xa                   	// #10
   45410:	mov	x0, x27
   45414:	bl	54b0 <Perl_save_pushptr@plt>
   45418:	ldr	x0, [x28, #64]
   4541c:	ldr	x1, [x28, #72]
   45420:	sub	x1, x0, x1
   45424:	ldr	x0, [x28, #80]
   45428:	add	x0, x0, x1
   4542c:	ldr	x2, [x28, #16]
   45430:	cmp	x0, x2
   45434:	b.hi	4548c <my_regprop@@Base+0xb1c8>  // b.pmore
   45438:	ldr	x7, [x28, #8]
   4543c:	subs	x4, x0, x7
   45440:	b.mi	4549c <my_regprop@@Base+0xb1d8>  // b.first
   45444:	mov	x6, x4
   45448:	sub	x3, x2, x0
   4544c:	ldr	w1, [x28, #192]
   45450:	cmp	w1, #0x0
   45454:	cset	w1, ne  // ne = any
   45458:	cmp	x0, x2
   4545c:	csel	x0, x0, x2, ls  // ls = plast
   45460:	str	x0, [sp, #16]
   45464:	str	x3, [sp, #8]
   45468:	str	w1, [sp]
   4546c:	mov	w5, w1
   45470:	ldr	w4, [sp, #312]
   45474:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   45478:	add	x3, x3, #0x5d8
   4547c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   45480:	add	x2, x2, #0x938
   45484:	mov	x0, x27
   45488:	bl	273ac <my_regexec@@Base+0x3eb8>
   4548c:	ldr	x7, [x28, #8]
   45490:	sub	x6, x2, x7
   45494:	mov	x3, #0x0                   	// #0
   45498:	b	4544c <my_regprop@@Base+0xb188>
   4549c:	ldr	x6, [x28, #48]
   454a0:	ldr	x5, [x28, #56]
   454a4:	sub	w5, w5, w6
   454a8:	mov	w3, #0x42b9                	// #17081
   454ac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   454b0:	add	x2, x2, #0xfb8
   454b4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   454b8:	add	x1, x1, #0x870
   454bc:	mov	x0, x27
   454c0:	bl	5420 <Perl_croak@plt>
   454c4:	mov	x0, #0x1                   	// #1
   454c8:	ldr	x1, [sp, #280]
   454cc:	add	x0, x1, x0
   454d0:	str	x0, [x28, #64]
   454d4:	ldr	x1, [x28, #24]
   454d8:	cbz	x1, 454e8 <my_regprop@@Base+0xb224>
   454dc:	mov	w2, #0xb                   	// #11
   454e0:	mov	x0, x27
   454e4:	bl	54b0 <Perl_save_pushptr@plt>
   454e8:	ldr	x1, [x28, #160]
   454ec:	cbz	x1, 454fc <my_regprop@@Base+0xb238>
   454f0:	mov	w2, #0xa                   	// #10
   454f4:	mov	x0, x27
   454f8:	bl	54b0 <Perl_save_pushptr@plt>
   454fc:	ldr	x1, [x28, #168]
   45500:	cbz	x1, 45510 <my_regprop@@Base+0xb24c>
   45504:	mov	w2, #0xa                   	// #10
   45508:	mov	x0, x27
   4550c:	bl	54b0 <Perl_save_pushptr@plt>
   45510:	ldr	x0, [x28, #64]
   45514:	ldr	x1, [x28, #72]
   45518:	sub	x1, x0, x1
   4551c:	ldr	x0, [x28, #80]
   45520:	add	x0, x0, x1
   45524:	ldr	x2, [x28, #16]
   45528:	cmp	x0, x2
   4552c:	b.hi	4558c <my_regprop@@Base+0xb2c8>  // b.pmore
   45530:	ldr	x7, [x28, #8]
   45534:	subs	x4, x0, x7
   45538:	b.mi	4559c <my_regprop@@Base+0xb2d8>  // b.first
   4553c:	mov	x6, x4
   45540:	sub	x3, x2, x0
   45544:	ldr	w1, [x28, #192]
   45548:	cmp	w1, #0x0
   4554c:	cset	w1, ne  // ne = any
   45550:	cmp	x0, x2
   45554:	csel	x0, x0, x2, ls  // ls = plast
   45558:	str	x0, [sp, #16]
   4555c:	str	x3, [sp, #8]
   45560:	str	w1, [sp]
   45564:	mov	w5, w1
   45568:	ldrb	w4, [sp, #336]
   4556c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   45570:	add	x3, x3, #0x5d8
   45574:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   45578:	add	x2, x2, #0x948
   4557c:	mov	x0, x27
   45580:	bl	273ac <my_regexec@@Base+0x3eb8>
   45584:	mov	x0, #0x0                   	// #0
   45588:	b	454c8 <my_regprop@@Base+0xb204>
   4558c:	ldr	x7, [x28, #8]
   45590:	sub	x6, x2, x7
   45594:	mov	x3, #0x0                   	// #0
   45598:	b	45544 <my_regprop@@Base+0xb280>
   4559c:	ldr	x6, [x28, #48]
   455a0:	ldr	x5, [x28, #56]
   455a4:	sub	w5, w5, w6
   455a8:	mov	w3, #0x42c4                	// #17092
   455ac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   455b0:	add	x2, x2, #0xfb8
   455b4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   455b8:	add	x1, x1, #0x870
   455bc:	mov	x0, x27
   455c0:	bl	5420 <Perl_croak@plt>
   455c4:	ldr	x0, [sp, #280]
   455c8:	str	x0, [sp, #296]
   455cc:	mov	x0, #0x1                   	// #1
   455d0:	str	x0, [sp, #280]
   455d4:	ldr	x0, [x28, #64]
   455d8:	str	x0, [sp, #312]
   455dc:	mov	w3, #0x80000               	// #524288
   455e0:	mov	x2, #0x0                   	// #0
   455e4:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   455e8:	add	x1, x1, #0x20
   455ec:	mov	x0, x27
   455f0:	bl	5390 <Perl_newSVpvn_flags@plt>
   455f4:	mov	x19, x0
   455f8:	strb	wzr, [sp, #464]
   455fc:	cmp	x24, #0x0
   45600:	cset	w6, eq  // eq = none
   45604:	ldr	w4, [x28]
   45608:	ldr	w0, [x28, #192]
   4560c:	cmp	w0, #0x0
   45610:	str	xzr, [sp, #8]
   45614:	str	x19, [sp]
   45618:	add	x7, sp, #0x1d0
   4561c:	mov	w5, #0x0                   	// #0
   45620:	ubfx	x4, x4, #2, #1
   45624:	cset	w3, ne  // ne = any
   45628:	ldr	x2, [sp, #280]
   4562c:	ldr	x1, [sp, #312]
   45630:	mov	x0, x27
   45634:	bl	5000 <Perl_parse_uniprop_string@plt>
   45638:	str	x0, [sp, #280]
   4563c:	ldr	w0, [x19, #12]
   45640:	and	x2, x0, #0xf
   45644:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   45648:	ldr	x1, [x1, #3888]
   4564c:	ldrb	w1, [x1, x2]
   45650:	cbz	w1, 4578c <my_regprop@@Base+0xb4c8>
   45654:	and	w1, w0, #0xc000
   45658:	cmp	w1, #0x8, lsl #12
   4565c:	b.eq	457b0 <my_regprop@@Base+0xb4ec>  // b.none
   45660:	and	w0, w0, #0xff
   45664:	cmp	w0, #0xf
   45668:	b.eq	457e4 <my_regprop@@Base+0xb520>  // b.none
   4566c:	ldr	x0, [x19]
   45670:	ldr	x0, [x0, #16]
   45674:	cbz	x0, 4597c <my_regprop@@Base+0xb6b8>
   45678:	ldr	x0, [sp, #280]
   4567c:	cbnz	x0, 45814 <my_regprop@@Base+0xb550>
   45680:	ldr	x0, [sp, #296]
   45684:	add	x0, x0, #0x1
   45688:	str	x0, [x28, #64]
   4568c:	ldr	w0, [x19, #12]
   45690:	tbz	w0, #29, 4569c <my_regprop@@Base+0xb3d8>
   45694:	mov	w0, #0x1                   	// #1
   45698:	str	w0, [x28, #192]
   4569c:	ldr	x1, [x28, #24]
   456a0:	cbz	x1, 456b0 <my_regprop@@Base+0xb3ec>
   456a4:	mov	w2, #0xb                   	// #11
   456a8:	mov	x0, x27
   456ac:	bl	54b0 <Perl_save_pushptr@plt>
   456b0:	ldr	x1, [x28, #160]
   456b4:	cbz	x1, 456c4 <my_regprop@@Base+0xb400>
   456b8:	mov	w2, #0xa                   	// #10
   456bc:	mov	x0, x27
   456c0:	bl	54b0 <Perl_save_pushptr@plt>
   456c4:	ldr	x1, [x28, #168]
   456c8:	cbz	x1, 456d8 <my_regprop@@Base+0xb414>
   456cc:	mov	w2, #0xa                   	// #10
   456d0:	mov	x0, x27
   456d4:	bl	54b0 <Perl_save_pushptr@plt>
   456d8:	ldr	w2, [x19, #12]
   456dc:	and	x1, x2, #0xf
   456e0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   456e4:	ldr	x0, [x0, #3888]
   456e8:	ldrb	w0, [x0, x1]
   456ec:	cbz	w0, 45838 <my_regprop@@Base+0xb574>
   456f0:	and	w1, w2, #0xc000
   456f4:	cmp	w1, #0x8, lsl #12
   456f8:	b.eq	4585c <my_regprop@@Base+0xb598>  // b.none
   456fc:	and	w0, w2, #0xff
   45700:	cmp	w0, #0xf
   45704:	b.eq	458dc <my_regprop@@Base+0xb618>  // b.none
   45708:	ldr	x0, [x19]
   4570c:	ldr	x5, [x0, #16]
   45710:	ldr	x0, [x28, #64]
   45714:	ldr	x1, [x28, #72]
   45718:	sub	x1, x0, x1
   4571c:	ldr	x0, [x28, #80]
   45720:	add	x0, x0, x1
   45724:	ldr	x6, [x28, #16]
   45728:	cmp	x0, x6
   4572c:	b.hi	45944 <my_regprop@@Base+0xb680>  // b.pmore
   45730:	ldr	x3, [x28, #8]
   45734:	subs	x4, x0, x3
   45738:	b.mi	45954 <my_regprop@@Base+0xb690>  // b.first
   4573c:	sub	x7, x6, x0
   45740:	ldr	w1, [x28, #192]
   45744:	cmp	w1, #0x0
   45748:	cset	w1, ne  // ne = any
   4574c:	cmp	x0, x6
   45750:	csel	x0, x0, x6, ls  // ls = plast
   45754:	str	x0, [sp, #32]
   45758:	str	x7, [sp, #24]
   4575c:	str	w1, [sp, #16]
   45760:	str	x3, [sp, #8]
   45764:	str	x4, [sp]
   45768:	mov	w7, w1
   4576c:	ldr	x6, [x19, #16]
   45770:	ubfx	x4, x2, #29, #1
   45774:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   45778:	add	x3, x3, #0x5d8
   4577c:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   45780:	add	x2, x2, #0x800
   45784:	mov	x0, x27
   45788:	bl	273ac <my_regexec@@Base+0x3eb8>
   4578c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45790:	add	x3, x3, #0xc10
   45794:	add	x3, x3, #0x870
   45798:	mov	w2, #0x42e3                	// #17123
   4579c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   457a0:	add	x1, x1, #0xfb8
   457a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   457a8:	add	x0, x0, #0xe40
   457ac:	bl	58e0 <__assert_fail@plt>
   457b0:	and	w1, w0, #0xff
   457b4:	sub	w1, w1, #0x9
   457b8:	cmp	w1, #0x1
   457bc:	b.hi	45660 <my_regprop@@Base+0xb39c>  // b.pmore
   457c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   457c4:	add	x3, x3, #0xc10
   457c8:	add	x3, x3, #0x870
   457cc:	mov	w2, #0x42e3                	// #17123
   457d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   457d4:	add	x1, x1, #0xfb8
   457d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   457dc:	add	x0, x0, #0xe70
   457e0:	bl	58e0 <__assert_fail@plt>
   457e4:	ldr	x0, [x19]
   457e8:	ldrb	w0, [x0, #129]
   457ec:	tbnz	w0, #6, 4566c <my_regprop@@Base+0xb3a8>
   457f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   457f4:	add	x3, x3, #0xc10
   457f8:	add	x3, x3, #0x870
   457fc:	mov	w2, #0x42e3                	// #17123
   45800:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45804:	add	x1, x1, #0xfb8
   45808:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4580c:	add	x0, x0, #0xe88
   45810:	bl	58e0 <__assert_fail@plt>
   45814:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45818:	add	x3, x3, #0xc10
   4581c:	add	x3, x3, #0x870
   45820:	mov	w2, #0x42e4                	// #17124
   45824:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45828:	add	x1, x1, #0xfb8
   4582c:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   45830:	add	x0, x0, #0x998
   45834:	bl	58e0 <__assert_fail@plt>
   45838:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4583c:	add	x3, x3, #0xc10
   45840:	add	x3, x3, #0x870
   45844:	mov	w2, #0x42ed                	// #17133
   45848:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4584c:	add	x1, x1, #0xfb8
   45850:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   45854:	add	x0, x0, #0xe40
   45858:	bl	58e0 <__assert_fail@plt>
   4585c:	and	w0, w2, #0xff
   45860:	sub	w0, w0, #0x9
   45864:	cmp	w0, #0x1
   45868:	b.ls	458b8 <my_regprop@@Base+0xb5f4>  // b.plast
   4586c:	and	w0, w2, #0xff
   45870:	cmp	w0, #0xf
   45874:	b.eq	458dc <my_regprop@@Base+0xb618>  // b.none
   45878:	ldr	x3, [x19]
   4587c:	ldr	x5, [x3, #16]
   45880:	cmp	w1, #0x8, lsl #12
   45884:	b.ne	45710 <my_regprop@@Base+0xb44c>  // b.any
   45888:	sub	w0, w0, #0x9
   4588c:	cmp	w0, #0x1
   45890:	b.hi	45710 <my_regprop@@Base+0xb44c>  // b.pmore
   45894:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45898:	add	x3, x3, #0xc10
   4589c:	add	x3, x3, #0x870
   458a0:	mov	w2, #0x42ed                	// #17133
   458a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   458a8:	add	x1, x1, #0xfb8
   458ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   458b0:	add	x0, x0, #0xd40
   458b4:	bl	58e0 <__assert_fail@plt>
   458b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   458bc:	add	x3, x3, #0xc10
   458c0:	add	x3, x3, #0x870
   458c4:	mov	w2, #0x42ed                	// #17133
   458c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   458cc:	add	x1, x1, #0xfb8
   458d0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   458d4:	add	x0, x0, #0xe70
   458d8:	bl	58e0 <__assert_fail@plt>
   458dc:	ldr	x0, [x19]
   458e0:	ldrb	w3, [x0, #129]
   458e4:	tbz	w3, #6, 45920 <my_regprop@@Base+0xb65c>
   458e8:	ldr	x5, [x0, #16]
   458ec:	cmp	w1, #0x8, lsl #12
   458f0:	b.ne	45710 <my_regprop@@Base+0xb44c>  // b.any
   458f4:	ldrb	w0, [x0, #129]
   458f8:	tbnz	w0, #6, 45710 <my_regprop@@Base+0xb44c>
   458fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45900:	add	x3, x3, #0xc10
   45904:	add	x3, x3, #0x870
   45908:	mov	w2, #0x42ed                	// #17133
   4590c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45910:	add	x1, x1, #0xfb8
   45914:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   45918:	add	x0, x0, #0xd58
   4591c:	bl	58e0 <__assert_fail@plt>
   45920:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45924:	add	x3, x3, #0xc10
   45928:	add	x3, x3, #0x870
   4592c:	mov	w2, #0x42ed                	// #17133
   45930:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45934:	add	x1, x1, #0xfb8
   45938:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4593c:	add	x0, x0, #0xe88
   45940:	bl	58e0 <__assert_fail@plt>
   45944:	ldr	x3, [x28, #8]
   45948:	sub	x4, x6, x3
   4594c:	mov	x7, #0x0                   	// #0
   45950:	b	45740 <my_regprop@@Base+0xb47c>
   45954:	ldr	x6, [x28, #48]
   45958:	ldr	x5, [x28, #56]
   4595c:	sub	w5, w5, w6
   45960:	mov	w3, #0x42ec                	// #17132
   45964:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   45968:	add	x2, x2, #0xfb8
   4596c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   45970:	add	x1, x1, #0x870
   45974:	mov	x0, x27
   45978:	bl	5420 <Perl_croak@plt>
   4597c:	ldr	x0, [sp, #280]
   45980:	cbz	x0, 45990 <my_regprop@@Base+0xb6cc>
   45984:	ldrb	w0, [x0, #12]
   45988:	cmp	w0, #0x4
   4598c:	b.eq	4a0cc <my_regprop@@Base+0xfe08>  // b.none
   45990:	ldr	x0, [sp, #336]
   45994:	cmp	x0, #0x50
   45998:	b.eq	459fc <my_regprop@@Base+0xb738>  // b.none
   4599c:	mov	w4, #0x2                   	// #2
   459a0:	mov	x3, #0x1                   	// #1
   459a4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   459a8:	add	x2, x2, #0x9b8
   459ac:	mov	x1, x25
   459b0:	mov	x0, x27
   459b4:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   459b8:	mov	w3, #0x2                   	// #2
   459bc:	ldr	x2, [sp, #280]
   459c0:	mov	x1, x25
   459c4:	mov	x0, x27
   459c8:	bl	5690 <Perl_sv_catsv_flags@plt>
   459cc:	ldr	w0, [sp, #192]
   459d0:	orr	w0, w0, #0x1
   459d4:	str	w0, [sp, #192]
   459d8:	ldr	w0, [sp, #184]
   459dc:	orr	w0, w0, #0x40
   459e0:	and	w0, w0, #0xff
   459e4:	str	w0, [sp, #184]
   459e8:	ldr	x0, [sp, #296]
   459ec:	add	x0, x0, #0x1
   459f0:	str	x0, [x28, #64]
   459f4:	mov	w19, #0x22                  	// #34
   459f8:	b	444c8 <my_regprop@@Base+0xa204>
   459fc:	mov	w4, #0x2                   	// #2
   45a00:	mov	x3, #0x1                   	// #1
   45a04:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   45a08:	add	x2, x2, #0x9b0
   45a0c:	mov	x1, x25
   45a10:	mov	x0, x27
   45a14:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   45a18:	b	459b8 <my_regprop@@Base+0xb6f4>
   45a1c:	mov	x2, #0xc                   	// #12
   45a20:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   45a24:	add	x1, x1, #0x9c0
   45a28:	bl	5460 <memcmp@plt>
   45a2c:	cbnz	w0, 4a0e0 <my_regprop@@Base+0xfe1c>
   45a30:	ldr	x1, [x27, #1568]
   45a34:	ldr	w0, [x1, #12]
   45a38:	and	w2, w0, #0xff
   45a3c:	sub	w2, w2, #0x9
   45a40:	cmp	w2, #0x1
   45a44:	b.hi	45aa4 <my_regprop@@Base+0xb7e0>  // b.pmore
   45a48:	and	w0, w0, #0xc000
   45a4c:	cmp	w0, #0x8, lsl #12
   45a50:	b.ne	45ac8 <my_regprop@@Base+0xb804>  // b.any
   45a54:	ldr	x0, [x1, #16]
   45a58:	ldr	x0, [x0, #32]
   45a5c:	cbz	x0, 45aec <my_regprop@@Base+0xb828>
   45a60:	str	wzr, [sp]
   45a64:	mov	x7, #0x0                   	// #0
   45a68:	mov	w6, #0x8                   	// #8
   45a6c:	mov	w5, #0x0                   	// #0
   45a70:	mov	x4, #0x7                   	// #7
   45a74:	adrp	x3, 7a000 <boot_re@@Base+0x1841c>
   45a78:	add	x3, x3, #0x9d0
   45a7c:	mov	x2, #0x0                   	// #0
   45a80:	mov	x1, x0
   45a84:	mov	x0, x27
   45a88:	bl	5600 <Perl_hv_common@plt>
   45a8c:	cbnz	x0, 4a0e0 <my_regprop@@Base+0xfe1c>
   45a90:	adrp	x1, 7a000 <boot_re@@Base+0x1841c>
   45a94:	add	x1, x1, #0x9d0
   45a98:	mov	x0, x27
   45a9c:	bl	50c0 <Perl_require_pv@plt>
   45aa0:	b	4a0e0 <my_regprop@@Base+0xfe1c>
   45aa4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45aa8:	add	x3, x3, #0xc10
   45aac:	add	x3, x3, #0x870
   45ab0:	mov	w2, #0x4310                	// #17168
   45ab4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45ab8:	add	x1, x1, #0xfb8
   45abc:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   45ac0:	add	x0, x0, #0xa48
   45ac4:	bl	58e0 <__assert_fail@plt>
   45ac8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45acc:	add	x3, x3, #0xc10
   45ad0:	add	x3, x3, #0x870
   45ad4:	mov	w2, #0x4310                	// #17168
   45ad8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45adc:	add	x1, x1, #0xfb8
   45ae0:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   45ae4:	add	x0, x0, #0xa80
   45ae8:	bl	58e0 <__assert_fail@plt>
   45aec:	mov	w2, #0xc                   	// #12
   45af0:	mov	x0, x27
   45af4:	bl	5950 <Perl_gv_add_by_type@plt>
   45af8:	ldr	w1, [x0, #12]
   45afc:	and	w2, w1, #0xff
   45b00:	sub	w2, w2, #0x9
   45b04:	cmp	w2, #0x1
   45b08:	b.hi	45b24 <my_regprop@@Base+0xb860>  // b.pmore
   45b0c:	and	w1, w1, #0xc000
   45b10:	cmp	w1, #0x8, lsl #12
   45b14:	b.ne	45b48 <my_regprop@@Base+0xb884>  // b.any
   45b18:	ldr	x0, [x0, #16]
   45b1c:	ldr	x0, [x0, #32]
   45b20:	b	45a60 <my_regprop@@Base+0xb79c>
   45b24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45b28:	add	x3, x3, #0xc10
   45b2c:	add	x3, x3, #0x870
   45b30:	mov	w2, #0x4310                	// #17168
   45b34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45b38:	add	x1, x1, #0xfb8
   45b3c:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   45b40:	add	x0, x0, #0xa48
   45b44:	bl	58e0 <__assert_fail@plt>
   45b48:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45b4c:	add	x3, x3, #0xc10
   45b50:	add	x3, x3, #0x870
   45b54:	mov	w2, #0x4310                	// #17168
   45b58:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   45b5c:	add	x1, x1, #0xfb8
   45b60:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   45b64:	add	x0, x0, #0xa80
   45b68:	bl	58e0 <__assert_fail@plt>
   45b6c:	mov	x1, #0x110000              	// #1114112
   45b70:	ldr	x0, [sp, #280]
   45b74:	bl	291a4 <my_regexec@@Base+0x5cb0>
   45b78:	ands	w19, w0, #0xff
   45b7c:	b.eq	4a0e8 <my_regprop@@Base+0xfe24>  // b.none
   45b80:	ldr	x0, [sp, #280]
   45b84:	bl	2634c <my_regexec@@Base+0x2e58>
   45b88:	cmp	x0, #0x1
   45b8c:	b.eq	45b98 <my_regprop@@Base+0xb8d4>  // b.none
   45b90:	str	w19, [sp, #200]
   45b94:	b	4a0e8 <my_regprop@@Base+0xfe24>
   45b98:	ldr	x0, [sp, #280]
   45b9c:	ldr	w0, [x0, #12]
   45ba0:	and	w1, w0, #0xff
   45ba4:	cmp	w1, #0x4
   45ba8:	b.ne	45c04 <my_regprop@@Base+0xb940>  // b.any
   45bac:	and	x0, x0, #0xf
   45bb0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   45bb4:	ldr	x1, [x1, #3888]
   45bb8:	ldrb	w0, [x1, x0]
   45bbc:	cbz	w0, 45c28 <my_regprop@@Base+0xb964>
   45bc0:	ldr	x1, [sp, #280]
   45bc4:	ldr	x2, [x1]
   45bc8:	ldr	x1, [x2, #16]
   45bcc:	cbz	x1, 45c4c <my_regprop@@Base+0xb988>
   45bd0:	ldrb	w2, [x2, #48]
   45bd4:	cmp	x2, x1, lsr #3
   45bd8:	b.eq	45c4c <my_regprop@@Base+0xb988>  // b.none
   45bdc:	ldr	x1, [sp, #280]
   45be0:	ldr	x1, [x1, #16]
   45be4:	ldrb	w3, [x1]
   45be8:	cbnz	w3, 45c70 <my_regprop@@Base+0xb9ac>
   45bec:	ldr	x1, [x1, x2, lsl #3]
   45bf0:	cmp	x1, #0x0
   45bf4:	ldr	w1, [sp, #200]
   45bf8:	csel	w0, w1, w0, eq  // eq = none
   45bfc:	str	w0, [sp, #200]
   45c00:	b	4a0e8 <my_regprop@@Base+0xfe24>
   45c04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45c08:	add	x3, x3, #0xc10
   45c0c:	add	x3, x3, #0x18
   45c10:	mov	w2, #0x31                  	// #49
   45c14:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   45c18:	add	x1, x1, #0x550
   45c1c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   45c20:	add	x0, x0, #0xfc8
   45c24:	bl	58e0 <__assert_fail@plt>
   45c28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45c2c:	add	x3, x3, #0xc10
   45c30:	add	x3, x3, #0x18
   45c34:	mov	w2, #0x33                  	// #51
   45c38:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   45c3c:	add	x1, x1, #0x550
   45c40:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   45c44:	add	x0, x0, #0xe40
   45c48:	bl	58e0 <__assert_fail@plt>
   45c4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45c50:	add	x3, x3, #0xc10
   45c54:	add	x3, x3, #0x380
   45c58:	mov	w2, #0x4f                  	// #79
   45c5c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   45c60:	add	x1, x1, #0x550
   45c64:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   45c68:	add	x0, x0, #0x5a8
   45c6c:	bl	58e0 <__assert_fail@plt>
   45c70:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   45c74:	add	x3, x3, #0xc10
   45c78:	add	x3, x3, #0x380
   45c7c:	mov	w2, #0x55                  	// #85
   45c80:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   45c84:	add	x1, x1, #0x550
   45c88:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   45c8c:	add	x0, x0, #0x590
   45c90:	bl	58e0 <__assert_fail@plt>
   45c94:	add	x4, sp, #0x160
   45c98:	mov	w3, #0x1                   	// #1
   45c9c:	ldr	x2, [sp, #280]
   45ca0:	ldr	x1, [sp, #352]
   45ca4:	mov	x0, x27
   45ca8:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   45cac:	b	459e8 <my_regprop@@Base+0xb724>
   45cb0:	mov	x0, #0xa                   	// #10
   45cb4:	str	x0, [sp, #336]
   45cb8:	b	43ca8 <my_regprop@@Base+0x99e4>
   45cbc:	mov	x0, #0xd                   	// #13
   45cc0:	str	x0, [sp, #336]
   45cc4:	b	43ca8 <my_regprop@@Base+0x99e4>
   45cc8:	mov	x0, #0x9                   	// #9
   45ccc:	str	x0, [sp, #336]
   45cd0:	b	43ca8 <my_regprop@@Base+0x99e4>
   45cd4:	mov	x0, #0xc                   	// #12
   45cd8:	str	x0, [sp, #336]
   45cdc:	b	43ca8 <my_regprop@@Base+0x99e4>
   45ce0:	mov	x0, #0x8                   	// #8
   45ce4:	str	x0, [sp, #336]
   45ce8:	b	43ca8 <my_regprop@@Base+0x99e4>
   45cec:	mov	x0, #0x1b                  	// #27
   45cf0:	str	x0, [sp, #336]
   45cf4:	b	43ca8 <my_regprop@@Base+0x99e4>
   45cf8:	mov	x0, #0x7                   	// #7
   45cfc:	str	x0, [sp, #336]
   45d00:	b	43ca8 <my_regprop@@Base+0x99e4>
   45d04:	ldr	x0, [x28, #64]
   45d08:	sub	x0, x0, #0x1
   45d0c:	mov	x1, x28
   45d10:	str	x0, [x1, #64]!
   45d14:	ldr	x2, [x28, #56]
   45d18:	ldr	x3, [x28, #72]
   45d1c:	cbz	x3, 45e0c <my_regprop@@Base+0xbb48>
   45d20:	sub	x0, x0, x3
   45d24:	ldr	x3, [x28, #80]
   45d28:	add	x0, x3, x0
   45d2c:	ldr	x3, [x28, #8]
   45d30:	sub	x0, x0, x3
   45d34:	ldr	x3, [x28, #136]
   45d38:	cmp	x0, x3
   45d3c:	cset	w5, gt
   45d40:	ldr	w0, [x28, #192]
   45d44:	cmp	w0, #0x0
   45d48:	cset	w0, ne  // ne = any
   45d4c:	strb	w0, [sp]
   45d50:	ldrb	w7, [sp, #288]
   45d54:	mov	w6, w23
   45d58:	add	x4, sp, #0x1d0
   45d5c:	add	x3, sp, #0x150
   45d60:	mov	x0, x27
   45d64:	bl	52c0 <Perl_grok_bslash_o@plt>
   45d68:	and	w0, w0, #0xff
   45d6c:	cbnz	w0, 45e4c <my_regprop@@Base+0xbb88>
   45d70:	ldr	x1, [x28, #24]
   45d74:	cbz	x1, 45d84 <my_regprop@@Base+0xbac0>
   45d78:	mov	w2, #0xb                   	// #11
   45d7c:	mov	x0, x27
   45d80:	bl	54b0 <Perl_save_pushptr@plt>
   45d84:	ldr	x1, [x28, #160]
   45d88:	cbz	x1, 45d98 <my_regprop@@Base+0xbad4>
   45d8c:	mov	w2, #0xa                   	// #10
   45d90:	mov	x0, x27
   45d94:	bl	54b0 <Perl_save_pushptr@plt>
   45d98:	ldr	x1, [x28, #168]
   45d9c:	cbz	x1, 45dac <my_regprop@@Base+0xbae8>
   45da0:	mov	w2, #0xa                   	// #10
   45da4:	mov	x0, x27
   45da8:	bl	54b0 <Perl_save_pushptr@plt>
   45dac:	ldr	x0, [x28, #64]
   45db0:	ldr	x1, [x28, #72]
   45db4:	sub	x1, x0, x1
   45db8:	ldr	x0, [x28, #80]
   45dbc:	add	x0, x0, x1
   45dc0:	ldr	x1, [x28, #16]
   45dc4:	cmp	x0, x1
   45dc8:	b.hi	45e14 <my_regprop@@Base+0xbb50>  // b.pmore
   45dcc:	ldr	x5, [x28, #8]
   45dd0:	subs	x4, x0, x5
   45dd4:	b.mi	45e24 <my_regprop@@Base+0xbb60>  // b.first
   45dd8:	sub	x7, x1, x0
   45ddc:	ldr	w2, [x28, #192]
   45de0:	cmp	w2, #0x0
   45de4:	cset	w3, ne  // ne = any
   45de8:	cmp	x0, x1
   45dec:	csel	x0, x0, x1, ls  // ls = plast
   45df0:	str	x0, [sp]
   45df4:	mov	w6, w3
   45df8:	ldr	x2, [sp, #464]
   45dfc:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   45e00:	add	x1, x1, #0x3a8
   45e04:	mov	x0, x27
   45e08:	bl	5420 <Perl_croak@plt>
   45e0c:	mov	w5, #0x0                   	// #0
   45e10:	b	45d40 <my_regprop@@Base+0xba7c>
   45e14:	ldr	x5, [x28, #8]
   45e18:	sub	x4, x1, x5
   45e1c:	mov	x7, #0x0                   	// #0
   45e20:	b	45ddc <my_regprop@@Base+0xbb18>
   45e24:	ldr	x6, [x28, #48]
   45e28:	ldr	x5, [x28, #56]
   45e2c:	sub	w5, w5, w6
   45e30:	mov	w3, #0x4349                	// #17225
   45e34:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   45e38:	add	x2, x2, #0xfb8
   45e3c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   45e40:	add	x1, x1, #0x870
   45e44:	mov	x0, x27
   45e48:	bl	5420 <Perl_croak@plt>
   45e4c:	ldr	x0, [x28, #72]
   45e50:	cbz	x0, 45e98 <my_regprop@@Base+0xbbd4>
   45e54:	ldr	x1, [x28, #64]
   45e58:	sub	x1, x1, #0x1
   45e5c:	sub	x1, x1, x0
   45e60:	ldr	x0, [x28, #80]
   45e64:	add	x1, x0, x1
   45e68:	ldr	x2, [x28, #8]
   45e6c:	sub	x3, x1, x2
   45e70:	ldr	x0, [x28, #136]
   45e74:	cmp	x3, x0
   45e78:	b.le	45e98 <my_regprop@@Base+0xbbd4>
   45e7c:	ldr	x0, [x28, #16]
   45e80:	cmp	x0, x1
   45e84:	csel	x0, x0, x1, ls  // ls = plast
   45e88:	cmp	x2, x0
   45e8c:	csel	x0, x2, x0, hi  // hi = pmore
   45e90:	sub	x0, x0, x2
   45e94:	str	x0, [x28, #136]
   45e98:	ldr	w0, [sp, #244]
   45e9c:	add	w0, w0, #0x1
   45ea0:	str	w0, [sp, #244]
   45ea4:	b	43ca8 <my_regprop@@Base+0x99e4>
   45ea8:	ldr	x0, [x28, #64]
   45eac:	sub	x0, x0, #0x1
   45eb0:	mov	x1, x28
   45eb4:	str	x0, [x1, #64]!
   45eb8:	ldr	x2, [x28, #56]
   45ebc:	ldr	x3, [x28, #72]
   45ec0:	cbz	x3, 45fb0 <my_regprop@@Base+0xbcec>
   45ec4:	sub	x0, x0, x3
   45ec8:	ldr	x3, [x28, #80]
   45ecc:	add	x0, x3, x0
   45ed0:	ldr	x3, [x28, #8]
   45ed4:	sub	x0, x0, x3
   45ed8:	ldr	x3, [x28, #136]
   45edc:	cmp	x0, x3
   45ee0:	cset	w5, gt
   45ee4:	ldr	w0, [x28, #192]
   45ee8:	cmp	w0, #0x0
   45eec:	cset	w0, ne  // ne = any
   45ef0:	strb	w0, [sp]
   45ef4:	ldrb	w7, [sp, #288]
   45ef8:	mov	w6, w23
   45efc:	add	x4, sp, #0x1d0
   45f00:	add	x3, sp, #0x150
   45f04:	mov	x0, x27
   45f08:	bl	5900 <Perl_grok_bslash_x@plt>
   45f0c:	and	w0, w0, #0xff
   45f10:	cbnz	w0, 45ff0 <my_regprop@@Base+0xbd2c>
   45f14:	ldr	x1, [x28, #24]
   45f18:	cbz	x1, 45f28 <my_regprop@@Base+0xbc64>
   45f1c:	mov	w2, #0xb                   	// #11
   45f20:	mov	x0, x27
   45f24:	bl	54b0 <Perl_save_pushptr@plt>
   45f28:	ldr	x1, [x28, #160]
   45f2c:	cbz	x1, 45f3c <my_regprop@@Base+0xbc78>
   45f30:	mov	w2, #0xa                   	// #10
   45f34:	mov	x0, x27
   45f38:	bl	54b0 <Perl_save_pushptr@plt>
   45f3c:	ldr	x1, [x28, #168]
   45f40:	cbz	x1, 45f50 <my_regprop@@Base+0xbc8c>
   45f44:	mov	w2, #0xa                   	// #10
   45f48:	mov	x0, x27
   45f4c:	bl	54b0 <Perl_save_pushptr@plt>
   45f50:	ldr	x0, [x28, #64]
   45f54:	ldr	x1, [x28, #72]
   45f58:	sub	x1, x0, x1
   45f5c:	ldr	x0, [x28, #80]
   45f60:	add	x0, x0, x1
   45f64:	ldr	x1, [x28, #16]
   45f68:	cmp	x0, x1
   45f6c:	b.hi	45fb8 <my_regprop@@Base+0xbcf4>  // b.pmore
   45f70:	ldr	x5, [x28, #8]
   45f74:	subs	x4, x0, x5
   45f78:	b.mi	45fc8 <my_regprop@@Base+0xbd04>  // b.first
   45f7c:	sub	x7, x1, x0
   45f80:	ldr	w2, [x28, #192]
   45f84:	cmp	w2, #0x0
   45f88:	cset	w3, ne  // ne = any
   45f8c:	cmp	x0, x1
   45f90:	csel	x0, x0, x1, ls  // ls = plast
   45f94:	str	x0, [sp]
   45f98:	mov	w6, w3
   45f9c:	ldr	x2, [sp, #464]
   45fa0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   45fa4:	add	x1, x1, #0x3a8
   45fa8:	mov	x0, x27
   45fac:	bl	5420 <Perl_croak@plt>
   45fb0:	mov	w5, #0x0                   	// #0
   45fb4:	b	45ee4 <my_regprop@@Base+0xbc20>
   45fb8:	ldr	x5, [x28, #8]
   45fbc:	sub	x4, x1, x5
   45fc0:	mov	x7, #0x0                   	// #0
   45fc4:	b	45f80 <my_regprop@@Base+0xbcbc>
   45fc8:	ldr	x6, [x28, #48]
   45fcc:	ldr	x5, [x28, #56]
   45fd0:	sub	w5, w5, w6
   45fd4:	mov	w3, #0x435c                	// #17244
   45fd8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   45fdc:	add	x2, x2, #0xfb8
   45fe0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   45fe4:	add	x1, x1, #0x870
   45fe8:	mov	x0, x27
   45fec:	bl	5420 <Perl_croak@plt>
   45ff0:	ldr	x0, [x28, #72]
   45ff4:	cbz	x0, 4603c <my_regprop@@Base+0xbd78>
   45ff8:	ldr	x1, [x28, #64]
   45ffc:	sub	x1, x1, #0x1
   46000:	sub	x1, x1, x0
   46004:	ldr	x0, [x28, #80]
   46008:	add	x1, x0, x1
   4600c:	ldr	x2, [x28, #8]
   46010:	sub	x3, x1, x2
   46014:	ldr	x0, [x28, #136]
   46018:	cmp	x3, x0
   4601c:	b.le	4603c <my_regprop@@Base+0xbd78>
   46020:	ldr	x0, [x28, #16]
   46024:	cmp	x0, x1
   46028:	csel	x0, x0, x1, ls  // ls = plast
   4602c:	cmp	x2, x0
   46030:	csel	x0, x2, x0, hi  // hi = pmore
   46034:	sub	x0, x0, x2
   46038:	str	x0, [x28, #136]
   4603c:	ldr	w0, [sp, #244]
   46040:	add	w0, w0, #0x1
   46044:	str	w0, [sp, #244]
   46048:	b	43ca8 <my_regprop@@Base+0x99e4>
   4604c:	ldr	x0, [x28, #64]
   46050:	ldrb	w1, [x0]
   46054:	ldr	x2, [x28, #72]
   46058:	cbz	x2, 460f0 <my_regprop@@Base+0xbe2c>
   4605c:	sub	x2, x0, x2
   46060:	ldr	x0, [x28, #80]
   46064:	add	x0, x0, x2
   46068:	ldr	x2, [x28, #8]
   4606c:	sub	x0, x0, x2
   46070:	ldr	x2, [x28, #136]
   46074:	cmp	x0, x2
   46078:	cset	w2, gt
   4607c:	mov	x0, x27
   46080:	bl	5240 <Perl_grok_bslash_c@plt>
   46084:	and	x0, x0, #0xff
   46088:	str	x0, [sp, #336]
   4608c:	ldr	x0, [x28, #72]
   46090:	cbz	x0, 460d4 <my_regprop@@Base+0xbe10>
   46094:	ldr	x1, [x28, #64]
   46098:	sub	x1, x1, x0
   4609c:	ldr	x0, [x28, #80]
   460a0:	add	x1, x0, x1
   460a4:	ldr	x2, [x28, #8]
   460a8:	sub	x3, x1, x2
   460ac:	ldr	x0, [x28, #136]
   460b0:	cmp	x3, x0
   460b4:	b.le	460d4 <my_regprop@@Base+0xbe10>
   460b8:	ldr	x0, [x28, #16]
   460bc:	cmp	x0, x1
   460c0:	csel	x0, x0, x1, ls  // ls = plast
   460c4:	cmp	x2, x0
   460c8:	csel	x0, x2, x0, hi  // hi = pmore
   460cc:	sub	x0, x0, x2
   460d0:	str	x0, [x28, #136]
   460d4:	ldr	x0, [x28, #64]
   460d8:	add	x0, x0, #0x1
   460dc:	str	x0, [x28, #64]
   460e0:	ldr	w0, [sp, #244]
   460e4:	add	w0, w0, #0x1
   460e8:	str	w0, [sp, #244]
   460ec:	b	43ca8 <my_regprop@@Base+0x99e4>
   460f0:	mov	w2, #0x0                   	// #0
   460f4:	b	4607c <my_regprop@@Base+0xbdb8>
   460f8:	mov	w0, #0x4                   	// #4
   460fc:	str	w0, [sp, #464]
   46100:	cbnz	w23, 4a04c <my_regprop@@Base+0xfd88>
   46104:	mov	x0, #0x3                   	// #3
   46108:	str	x0, [sp, #344]
   4610c:	ldr	x1, [x28, #64]
   46110:	sub	x1, x1, #0x1
   46114:	str	x1, [x28, #64]
   46118:	mov	x4, #0x0                   	// #0
   4611c:	add	x3, sp, #0x1d0
   46120:	add	x2, sp, #0x158
   46124:	mov	x0, x27
   46128:	bl	52e0 <Perl_grok_oct@plt>
   4612c:	str	x0, [sp, #336]
   46130:	ldr	x0, [sp, #344]
   46134:	ldr	x1, [x28, #64]
   46138:	add	x19, x1, x0
   4613c:	str	x19, [x28, #64]
   46140:	cmp	x0, #0x2
   46144:	b.ls	46268 <my_regprop@@Base+0xbfa4>  // b.plast
   46148:	ldr	w0, [sp, #244]
   4614c:	add	w0, w0, #0x1
   46150:	str	w0, [sp, #244]
   46154:	b	43ca8 <my_regprop@@Base+0x99e4>
   46158:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4615c:	add	x3, x3, #0xc10
   46160:	add	x3, x3, #0x870
   46164:	mov	w2, #0x4373                	// #17267
   46168:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4616c:	add	x1, x1, #0xfb8
   46170:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   46174:	add	x0, x0, #0xc18
   46178:	bl	58e0 <__assert_fail@plt>
   4617c:	mov	x1, #0x1                   	// #1
   46180:	add	x0, x0, x1
   46184:	str	x0, [x28, #64]
   46188:	ldr	x1, [x28, #24]
   4618c:	cbz	x1, 4619c <my_regprop@@Base+0xbed8>
   46190:	mov	w2, #0xb                   	// #11
   46194:	mov	x0, x27
   46198:	bl	54b0 <Perl_save_pushptr@plt>
   4619c:	ldr	x1, [x28, #160]
   461a0:	cbz	x1, 461b0 <my_regprop@@Base+0xbeec>
   461a4:	mov	w2, #0xa                   	// #10
   461a8:	mov	x0, x27
   461ac:	bl	54b0 <Perl_save_pushptr@plt>
   461b0:	ldr	x1, [x28, #168]
   461b4:	cbz	x1, 461c4 <my_regprop@@Base+0xbf00>
   461b8:	mov	w2, #0xa                   	// #10
   461bc:	mov	x0, x27
   461c0:	bl	54b0 <Perl_save_pushptr@plt>
   461c4:	ldr	x0, [x28, #64]
   461c8:	ldr	x1, [x28, #72]
   461cc:	sub	x1, x0, x1
   461d0:	ldr	x0, [x28, #80]
   461d4:	add	x0, x0, x1
   461d8:	ldr	x1, [x28, #16]
   461dc:	cmp	x0, x1
   461e0:	b.hi	46230 <my_regprop@@Base+0xbf6c>  // b.pmore
   461e4:	ldr	x5, [x28, #8]
   461e8:	subs	x4, x0, x5
   461ec:	b.mi	46240 <my_regprop@@Base+0xbf7c>  // b.first
   461f0:	sub	x7, x1, x0
   461f4:	ldr	w2, [x28, #192]
   461f8:	cmp	w2, #0x0
   461fc:	cset	w3, ne  // ne = any
   46200:	cmp	x0, x1
   46204:	csel	x0, x0, x1, ls  // ls = plast
   46208:	str	x0, [sp]
   4620c:	mov	w6, w3
   46210:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   46214:	add	x2, x2, #0x9d8
   46218:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4621c:	add	x1, x1, #0x3a8
   46220:	mov	x0, x27
   46224:	bl	5420 <Perl_croak@plt>
   46228:	mov	x1, #0x0                   	// #0
   4622c:	b	46180 <my_regprop@@Base+0xbebc>
   46230:	ldr	x5, [x28, #8]
   46234:	sub	x4, x1, x5
   46238:	mov	x7, #0x0                   	// #0
   4623c:	b	461f4 <my_regprop@@Base+0xbf30>
   46240:	ldr	x6, [x28, #48]
   46244:	ldr	x5, [x28, #56]
   46248:	sub	w5, w5, w6
   4624c:	mov	w3, #0x4375                	// #17269
   46250:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46254:	add	x2, x2, #0xfb8
   46258:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4625c:	add	x1, x1, #0x870
   46260:	mov	x0, x27
   46264:	bl	5420 <Perl_croak@plt>
   46268:	ldr	x2, [x28, #56]
   4626c:	cmp	x2, x19
   46270:	b.ls	46148 <my_regprop@@Base+0xbe84>  // b.plast
   46274:	ldrb	w0, [x1, x0]
   46278:	sub	w0, w0, #0x30
   4627c:	cmp	w0, #0x9
   46280:	b.hi	46148 <my_regprop@@Base+0xbe84>  // b.pmore
   46284:	mov	w1, #0x14                  	// #20
   46288:	mov	x0, x27
   4628c:	bl	5870 <Perl_ckwarn@plt>
   46290:	and	w0, w0, #0xff
   46294:	cbz	w0, 46148 <my_regprop@@Base+0xbe84>
   46298:	ldr	x1, [x28, #72]
   4629c:	cbz	x1, 463b8 <my_regprop@@Base+0xc0f4>
   462a0:	add	x0, x19, #0x1
   462a4:	sub	x1, x0, x1
   462a8:	ldr	x0, [x28, #80]
   462ac:	add	x0, x0, x1
   462b0:	ldr	x1, [x28, #8]
   462b4:	sub	x0, x0, x1
   462b8:	ldr	x1, [x28, #136]
   462bc:	cmp	x0, x1
   462c0:	b.le	46148 <my_regprop@@Base+0xbe84>
   462c4:	ldr	x0, [x27, #224]
   462c8:	cbz	x0, 462f0 <my_regprop@@Base+0xc02c>
   462cc:	ldr	x0, [x0, #64]
   462d0:	cmp	x0, #0x0
   462d4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   462d8:	ldr	x1, [x1, #3984]
   462dc:	ccmp	x0, x1, #0x4, ne  // ne = any
   462e0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   462e4:	ldr	x1, [x1, #3832]
   462e8:	ccmp	x0, x1, #0x4, ne  // ne = any
   462ec:	b.ne	463d8 <my_regprop@@Base+0xc114>  // b.any
   462f0:	ldr	x2, [sp, #344]
   462f4:	ldr	x1, [x28, #64]
   462f8:	mov	x0, x27
   462fc:	bl	292dc <my_regexec@@Base+0x5de8>
   46300:	mov	x3, x0
   46304:	ldr	w0, [x28, #192]
   46308:	cmp	w0, #0x0
   4630c:	cset	w4, ne  // ne = any
   46310:	ldr	x0, [x28, #64]
   46314:	add	x0, x0, #0x1
   46318:	ldr	x1, [x28, #72]
   4631c:	sub	x1, x0, x1
   46320:	ldr	x0, [x28, #80]
   46324:	add	x0, x0, x1
   46328:	ldr	x2, [x28, #16]
   4632c:	cmp	x0, x2
   46330:	b.ls	46420 <my_regprop@@Base+0xc15c>  // b.plast
   46334:	ldr	x6, [x28, #8]
   46338:	sub	x5, x2, x6
   4633c:	mov	x1, #0x0                   	// #0
   46340:	cmp	x0, x2
   46344:	csel	x0, x0, x2, ls  // ls = plast
   46348:	str	x0, [sp, #8]
   4634c:	str	x1, [sp]
   46350:	mov	w7, w4
   46354:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   46358:	add	x2, x2, #0x3a8
   4635c:	mov	w1, #0x14                  	// #20
   46360:	mov	x0, x27
   46364:	bl	5110 <Perl_warner@plt>
   46368:	ldr	x0, [x28, #72]
   4636c:	cbz	x0, 46148 <my_regprop@@Base+0xbe84>
   46370:	ldr	x1, [x28, #64]
   46374:	add	x1, x1, #0x1
   46378:	sub	x1, x1, x0
   4637c:	ldr	x0, [x28, #80]
   46380:	add	x1, x0, x1
   46384:	ldr	x2, [x28, #8]
   46388:	sub	x3, x1, x2
   4638c:	ldr	x0, [x28, #136]
   46390:	cmp	x3, x0
   46394:	b.le	46148 <my_regprop@@Base+0xbe84>
   46398:	ldr	x0, [x28, #16]
   4639c:	cmp	x0, x1
   463a0:	csel	x0, x0, x1, ls  // ls = plast
   463a4:	cmp	x2, x0
   463a8:	csel	x0, x2, x0, hi  // hi = pmore
   463ac:	sub	x0, x0, x2
   463b0:	str	x0, [x28, #136]
   463b4:	b	46148 <my_regprop@@Base+0xbe84>
   463b8:	add	x4, x19, #0x1
   463bc:	mov	w3, #0x437c                	// #17276
   463c0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   463c4:	add	x2, x2, #0xfb8
   463c8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   463cc:	add	x1, x1, #0xab8
   463d0:	mov	x0, x27
   463d4:	bl	5420 <Perl_croak@plt>
   463d8:	ldrb	w0, [x0, #13]
   463dc:	tbz	w0, #1, 462f0 <my_regprop@@Base+0xc02c>
   463e0:	ldr	x1, [x28, #24]
   463e4:	cbz	x1, 463f4 <my_regprop@@Base+0xc130>
   463e8:	mov	w2, #0xb                   	// #11
   463ec:	mov	x0, x27
   463f0:	bl	54b0 <Perl_save_pushptr@plt>
   463f4:	ldr	x1, [x28, #160]
   463f8:	cbz	x1, 46408 <my_regprop@@Base+0xc144>
   463fc:	mov	w2, #0xa                   	// #10
   46400:	mov	x0, x27
   46404:	bl	54b0 <Perl_save_pushptr@plt>
   46408:	ldr	x1, [x28, #168]
   4640c:	cbz	x1, 462f0 <my_regprop@@Base+0xc02c>
   46410:	mov	w2, #0xa                   	// #10
   46414:	mov	x0, x27
   46418:	bl	54b0 <Perl_save_pushptr@plt>
   4641c:	b	462f0 <my_regprop@@Base+0xc02c>
   46420:	ldr	x6, [x28, #8]
   46424:	subs	x1, x0, x6
   46428:	b.mi	46438 <my_regprop@@Base+0xc174>  // b.first
   4642c:	mov	x5, x1
   46430:	sub	x1, x2, x0
   46434:	b	46340 <my_regprop@@Base+0xc07c>
   46438:	ldr	x6, [x28, #48]
   4643c:	ldr	x5, [x28, #56]
   46440:	sub	w5, w5, w6
   46444:	mov	x4, x1
   46448:	mov	w3, #0x437c                	// #17276
   4644c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46450:	add	x2, x2, #0xfb8
   46454:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46458:	add	x1, x1, #0x870
   4645c:	mov	x0, x27
   46460:	bl	5420 <Perl_croak@plt>
   46464:	tst	x19, #0xffffffffffffff00
   46468:	b.ne	43ca8 <my_regprop@@Base+0x99e4>  // b.any
   4646c:	and	x1, x19, #0xff
   46470:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   46474:	ldr	x0, [x0, #3880]
   46478:	ldr	w0, [x0, x1, lsl #2]
   4647c:	mov	w1, #0x4001                	// #16385
   46480:	and	w0, w0, w1
   46484:	cmp	x19, #0x5f
   46488:	ccmp	w0, w1, #0x0, ne  // ne = any
   4648c:	b.ne	43ca8 <my_regprop@@Base+0x99e4>  // b.any
   46490:	cbz	w23, 4657c <my_regprop@@Base+0xc2b8>
   46494:	ldr	x1, [x28, #24]
   46498:	cbz	x1, 464a8 <my_regprop@@Base+0xc1e4>
   4649c:	mov	w2, #0xb                   	// #11
   464a0:	mov	x0, x27
   464a4:	bl	54b0 <Perl_save_pushptr@plt>
   464a8:	ldr	x1, [x28, #160]
   464ac:	cbz	x1, 464bc <my_regprop@@Base+0xc1f8>
   464b0:	mov	w2, #0xa                   	// #10
   464b4:	mov	x0, x27
   464b8:	bl	54b0 <Perl_save_pushptr@plt>
   464bc:	ldr	x1, [x28, #168]
   464c0:	cbz	x1, 464d0 <my_regprop@@Base+0xc20c>
   464c4:	mov	w2, #0xa                   	// #10
   464c8:	mov	x0, x27
   464cc:	bl	54b0 <Perl_save_pushptr@plt>
   464d0:	ldr	x0, [x28, #64]
   464d4:	ldr	x1, [x28, #72]
   464d8:	sub	x1, x0, x1
   464dc:	ldr	x0, [x28, #80]
   464e0:	add	x0, x0, x1
   464e4:	ldr	x2, [x28, #16]
   464e8:	cmp	x0, x2
   464ec:	b.hi	46544 <my_regprop@@Base+0xc280>  // b.pmore
   464f0:	ldr	x7, [x28, #8]
   464f4:	subs	x4, x0, x7
   464f8:	b.mi	46554 <my_regprop@@Base+0xc290>  // b.first
   464fc:	mov	x6, x4
   46500:	sub	x3, x2, x0
   46504:	ldr	w1, [x28, #192]
   46508:	cmp	w1, #0x0
   4650c:	cset	w1, ne  // ne = any
   46510:	cmp	x0, x2
   46514:	csel	x0, x0, x2, ls  // ls = plast
   46518:	str	x0, [sp, #16]
   4651c:	str	x3, [sp, #8]
   46520:	str	w1, [sp]
   46524:	mov	w5, w1
   46528:	ldr	w4, [sp, #336]
   4652c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   46530:	add	x3, x3, #0x5d8
   46534:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   46538:	add	x2, x2, #0x9f8
   4653c:	mov	x0, x27
   46540:	bl	273ac <my_regexec@@Base+0x3eb8>
   46544:	ldr	x7, [x28, #8]
   46548:	sub	x6, x2, x7
   4654c:	mov	x3, #0x0                   	// #0
   46550:	b	46504 <my_regprop@@Base+0xc240>
   46554:	ldr	x6, [x28, #48]
   46558:	ldr	x5, [x28, #56]
   4655c:	sub	w5, w5, w6
   46560:	mov	w3, #0x4388                	// #17288
   46564:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46568:	add	x2, x2, #0xfb8
   4656c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46570:	add	x1, x1, #0x870
   46574:	mov	x0, x27
   46578:	bl	5420 <Perl_croak@plt>
   4657c:	ldr	x1, [x28, #72]
   46580:	cbz	x1, 46684 <my_regprop@@Base+0xc3c0>
   46584:	ldr	x0, [x28, #64]
   46588:	sub	x1, x0, x1
   4658c:	ldr	x0, [x28, #80]
   46590:	add	x0, x0, x1
   46594:	ldr	x1, [x28, #8]
   46598:	sub	x0, x0, x1
   4659c:	ldr	x1, [x28, #136]
   465a0:	cmp	x0, x1
   465a4:	b.le	43ca8 <my_regprop@@Base+0x99e4>
   465a8:	ldr	x0, [x27, #224]
   465ac:	cbz	x0, 465d4 <my_regprop@@Base+0xc310>
   465b0:	ldr	x0, [x0, #64]
   465b4:	cmp	x0, #0x0
   465b8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   465bc:	ldr	x1, [x1, #3984]
   465c0:	ccmp	x0, x1, #0x4, ne  // ne = any
   465c4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   465c8:	ldr	x1, [x1, #3832]
   465cc:	ccmp	x0, x1, #0x4, ne  // ne = any
   465d0:	b.ne	466a4 <my_regprop@@Base+0xc3e0>  // b.any
   465d4:	ldr	x3, [sp, #336]
   465d8:	ldr	w0, [x28, #192]
   465dc:	cmp	w0, #0x0
   465e0:	cset	w4, ne  // ne = any
   465e4:	ldr	x0, [x28, #64]
   465e8:	ldr	x1, [x28, #72]
   465ec:	sub	x1, x0, x1
   465f0:	ldr	x0, [x28, #80]
   465f4:	add	x0, x0, x1
   465f8:	ldr	x2, [x28, #16]
   465fc:	cmp	x0, x2
   46600:	b.ls	466ec <my_regprop@@Base+0xc428>  // b.plast
   46604:	ldr	x6, [x28, #8]
   46608:	sub	x5, x2, x6
   4660c:	mov	x1, #0x0                   	// #0
   46610:	cmp	x0, x2
   46614:	csel	x0, x0, x2, ls  // ls = plast
   46618:	str	x0, [sp, #8]
   4661c:	str	x1, [sp]
   46620:	mov	w7, w4
   46624:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   46628:	add	x2, x2, #0xa28
   4662c:	mov	w1, #0x14                  	// #20
   46630:	mov	x0, x27
   46634:	bl	5150 <Perl_ck_warner@plt>
   46638:	ldr	x0, [x28, #72]
   4663c:	cbz	x0, 43ca8 <my_regprop@@Base+0x99e4>
   46640:	ldr	x1, [x28, #64]
   46644:	sub	x1, x1, x0
   46648:	ldr	x0, [x28, #80]
   4664c:	add	x1, x0, x1
   46650:	ldr	x2, [x28, #8]
   46654:	sub	x3, x1, x2
   46658:	ldr	x0, [x28, #136]
   4665c:	cmp	x3, x0
   46660:	b.le	43ca8 <my_regprop@@Base+0x99e4>
   46664:	ldr	x0, [x28, #16]
   46668:	cmp	x0, x1
   4666c:	csel	x0, x0, x1, ls  // ls = plast
   46670:	cmp	x2, x0
   46674:	csel	x0, x2, x0, hi  // hi = pmore
   46678:	sub	x0, x0, x2
   4667c:	str	x0, [x28, #136]
   46680:	b	43ca8 <my_regprop@@Base+0x99e4>
   46684:	ldr	x4, [x28, #64]
   46688:	mov	w3, #0x438c                	// #17292
   4668c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46690:	add	x2, x2, #0xfb8
   46694:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46698:	add	x1, x1, #0xab8
   4669c:	mov	x0, x27
   466a0:	bl	5420 <Perl_croak@plt>
   466a4:	ldrb	w0, [x0, #13]
   466a8:	tbz	w0, #1, 465d4 <my_regprop@@Base+0xc310>
   466ac:	ldr	x1, [x28, #24]
   466b0:	cbz	x1, 466c0 <my_regprop@@Base+0xc3fc>
   466b4:	mov	w2, #0xb                   	// #11
   466b8:	mov	x0, x27
   466bc:	bl	54b0 <Perl_save_pushptr@plt>
   466c0:	ldr	x1, [x28, #160]
   466c4:	cbz	x1, 466d4 <my_regprop@@Base+0xc410>
   466c8:	mov	w2, #0xa                   	// #10
   466cc:	mov	x0, x27
   466d0:	bl	54b0 <Perl_save_pushptr@plt>
   466d4:	ldr	x1, [x28, #168]
   466d8:	cbz	x1, 465d4 <my_regprop@@Base+0xc310>
   466dc:	mov	w2, #0xa                   	// #10
   466e0:	mov	x0, x27
   466e4:	bl	54b0 <Perl_save_pushptr@plt>
   466e8:	b	465d4 <my_regprop@@Base+0xc310>
   466ec:	ldr	x6, [x28, #8]
   466f0:	subs	x1, x0, x6
   466f4:	b.mi	46704 <my_regprop@@Base+0xc440>  // b.first
   466f8:	mov	x5, x1
   466fc:	sub	x1, x2, x0
   46700:	b	46610 <my_regprop@@Base+0xc34c>
   46704:	ldr	x6, [x28, #48]
   46708:	ldr	x5, [x28, #56]
   4670c:	sub	w5, w5, w6
   46710:	mov	x4, x1
   46714:	mov	w3, #0x438c                	// #17292
   46718:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4671c:	add	x2, x2, #0xfb8
   46720:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46724:	add	x1, x1, #0x870
   46728:	mov	x0, x27
   4672c:	bl	5420 <Perl_croak@plt>
   46730:	mov	w19, #0x0                   	// #0
   46734:	b	444c4 <my_regprop@@Base+0xa200>
   46738:	mov	w19, #0x0                   	// #0
   4673c:	b	444c4 <my_regprop@@Base+0xa200>
   46740:	mov	w19, #0x0                   	// #0
   46744:	b	444c4 <my_regprop@@Base+0xa200>
   46748:	mov	w19, #0x0                   	// #0
   4674c:	b	444c4 <my_regprop@@Base+0xa200>
   46750:	ldr	x3, [x28, #8]
   46754:	sub	x2, x5, x3
   46758:	mov	x4, #0x0                   	// #0
   4675c:	b	4455c <my_regprop@@Base+0xa298>
   46760:	ldr	x6, [x28, #48]
   46764:	ldr	x5, [x28, #56]
   46768:	sub	w5, w5, w6
   4676c:	mov	w3, #0x43a2                	// #17314
   46770:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46774:	add	x2, x2, #0xfb8
   46778:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4677c:	add	x1, x1, #0x870
   46780:	mov	x0, x27
   46784:	bl	5420 <Perl_croak@plt>
   46788:	ldr	x0, [x28, #72]
   4678c:	cbz	x0, 46940 <my_regprop@@Base+0xc67c>
   46790:	sub	x4, x4, x0
   46794:	ldr	x0, [x28, #80]
   46798:	add	x4, x0, x4
   4679c:	ldr	x0, [x28, #8]
   467a0:	sub	x0, x4, x0
   467a4:	ldr	x1, [x28, #136]
   467a8:	cmp	x0, x1
   467ac:	b.le	46894 <my_regprop@@Base+0xc5d0>
   467b0:	ldr	x0, [x27, #224]
   467b4:	cbz	x0, 467dc <my_regprop@@Base+0xc518>
   467b8:	ldr	x0, [x0, #64]
   467bc:	cmp	x0, #0x0
   467c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   467c4:	ldr	x1, [x1, #3984]
   467c8:	ccmp	x0, x1, #0x4, ne  // ne = any
   467cc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   467d0:	ldr	x1, [x1, #3832]
   467d4:	ccmp	x0, x1, #0x4, ne  // ne = any
   467d8:	b.ne	4695c <my_regprop@@Base+0xc698>  // b.any
   467dc:	ldr	w0, [x28, #192]
   467e0:	cmp	w0, #0x0
   467e4:	cset	w3, ne  // ne = any
   467e8:	ldrsw	x4, [sp, #208]
   467ec:	ldr	x0, [x28, #64]
   467f0:	ldr	x1, [x28, #72]
   467f4:	sub	x1, x0, x1
   467f8:	ldr	x0, [x28, #80]
   467fc:	add	x0, x0, x1
   46800:	ldr	x5, [x28, #16]
   46804:	cmp	x0, x5
   46808:	b.ls	469a4 <my_regprop@@Base+0xc6e0>  // b.plast
   4680c:	ldr	x2, [x28, #8]
   46810:	sub	x7, x5, x2
   46814:	mov	x1, #0x0                   	// #0
   46818:	cmp	x0, x5
   4681c:	csel	x0, x0, x5, ls  // ls = plast
   46820:	str	x0, [sp, #24]
   46824:	str	x1, [sp, #16]
   46828:	str	w3, [sp, #8]
   4682c:	str	x2, [sp]
   46830:	mov	w6, w3
   46834:	ldr	x5, [sp, #232]
   46838:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4683c:	add	x2, x2, #0xac0
   46840:	mov	w1, #0x14                  	// #20
   46844:	mov	x0, x27
   46848:	bl	5150 <Perl_ck_warner@plt>
   4684c:	ldr	x0, [x28, #72]
   46850:	cbz	x0, 46894 <my_regprop@@Base+0xc5d0>
   46854:	ldr	x1, [x28, #64]
   46858:	sub	x1, x1, x0
   4685c:	ldr	x0, [x28, #80]
   46860:	add	x1, x0, x1
   46864:	ldr	x2, [x28, #8]
   46868:	sub	x3, x1, x2
   4686c:	ldr	x0, [x28, #136]
   46870:	cmp	x3, x0
   46874:	b.le	46894 <my_regprop@@Base+0xc5d0>
   46878:	ldr	x0, [x28, #16]
   4687c:	cmp	x0, x1
   46880:	csel	x0, x0, x1, ls  // ls = plast
   46884:	cmp	x2, x0
   46888:	csel	x0, x2, x0, hi  // hi = pmore
   4688c:	sub	x0, x0, x2
   46890:	str	x0, [x28, #136]
   46894:	mov	x3, #0x2d                  	// #45
   46898:	mov	x2, x3
   4689c:	ldr	x1, [sp, #392]
   468a0:	mov	x0, x27
   468a4:	bl	5450 <Perl__add_range_to_invlist@plt>
   468a8:	str	x0, [sp, #392]
   468ac:	ldr	x2, [sp, #256]
   468b0:	mov	x3, x2
   468b4:	ldr	x1, [sp, #224]
   468b8:	mov	x0, x27
   468bc:	bl	5450 <Perl__add_range_to_invlist@plt>
   468c0:	str	x0, [sp, #224]
   468c4:	ldr	x0, [sp, #176]
   468c8:	add	x0, x0, #0x2
   468cc:	str	x0, [sp, #176]
   468d0:	add	w1, w19, w19, lsr #31
   468d4:	asr	w0, w1, #1
   468d8:	ubfx	x1, x1, #1, #8
   468dc:	ldr	w2, [x28]
   468e0:	lsr	w3, w2, #7
   468e4:	ubfx	x2, x2, #7, #3
   468e8:	cmp	w19, #0x1d
   468ec:	ccmp	w2, #0x1, #0x0, le
   468f0:	b.eq	469e4 <my_regprop@@Base+0xc720>  // b.none
   468f4:	cmp	w19, #0x1d
   468f8:	b.le	46b10 <my_regprop@@Base+0xc84c>
   468fc:	cmp	w19, #0x22
   46900:	b.eq	46b48 <my_regprop@@Base+0xc884>  // b.none
   46904:	cmp	w1, #0xf
   46908:	b.eq	4691c <my_regprop@@Base+0xc658>  // b.none
   4690c:	sub	w0, w19, #0x20
   46910:	mov	w1, #0xb                   	// #11
   46914:	cmp	w0, #0x1
   46918:	b.hi	46aec <my_regprop@@Base+0xc828>  // b.pmore
   4691c:	add	x4, sp, #0x188
   46920:	and	w3, w19, #0x1
   46924:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   46928:	ldr	x0, [x0, #3928]
   4692c:	ldr	x2, [x0, w1, sxtw #3]
   46930:	ldr	x1, [sp, #392]
   46934:	mov	x0, x27
   46938:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4693c:	b	46b48 <my_regprop@@Base+0xc884>
   46940:	mov	w3, #0x43a7                	// #17319
   46944:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46948:	add	x2, x2, #0xfb8
   4694c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46950:	add	x1, x1, #0xab8
   46954:	mov	x0, x27
   46958:	bl	5420 <Perl_croak@plt>
   4695c:	ldrb	w0, [x0, #13]
   46960:	tbz	w0, #1, 467dc <my_regprop@@Base+0xc518>
   46964:	ldr	x1, [x28, #24]
   46968:	cbz	x1, 46978 <my_regprop@@Base+0xc6b4>
   4696c:	mov	w2, #0xb                   	// #11
   46970:	mov	x0, x27
   46974:	bl	54b0 <Perl_save_pushptr@plt>
   46978:	ldr	x1, [x28, #160]
   4697c:	cbz	x1, 4698c <my_regprop@@Base+0xc6c8>
   46980:	mov	w2, #0xa                   	// #10
   46984:	mov	x0, x27
   46988:	bl	54b0 <Perl_save_pushptr@plt>
   4698c:	ldr	x1, [x28, #168]
   46990:	cbz	x1, 467dc <my_regprop@@Base+0xc518>
   46994:	mov	w2, #0xa                   	// #10
   46998:	mov	x0, x27
   4699c:	bl	54b0 <Perl_save_pushptr@plt>
   469a0:	b	467dc <my_regprop@@Base+0xc518>
   469a4:	ldr	x2, [x28, #8]
   469a8:	subs	x7, x0, x2
   469ac:	b.mi	469b8 <my_regprop@@Base+0xc6f4>  // b.first
   469b0:	sub	x1, x5, x0
   469b4:	b	46818 <my_regprop@@Base+0xc554>
   469b8:	ldr	x6, [x28, #48]
   469bc:	ldr	x5, [x28, #56]
   469c0:	sub	w5, w5, w6
   469c4:	mov	x4, x7
   469c8:	mov	w3, #0x43a7                	// #17319
   469cc:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   469d0:	add	x2, x2, #0xfb8
   469d4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   469d8:	add	x1, x1, #0x870
   469dc:	mov	x0, x27
   469e0:	bl	5420 <Perl_croak@plt>
   469e4:	str	xzr, [sp, #464]
   469e8:	eor	w2, w19, #0x1
   469ec:	mov	w1, #0x1                   	// #1
   469f0:	lsl	w1, w1, w2
   469f4:	ldr	w2, [sp, #264]
   469f8:	tst	w1, w2
   469fc:	b.eq	46a40 <my_regprop@@Base+0xc77c>  // b.none
   46a00:	mov	x3, #0xffffffffffffffff    	// #-1
   46a04:	mov	x2, #0x0                   	// #0
   46a08:	ldr	x1, [sp, #392]
   46a0c:	mov	x0, x27
   46a10:	bl	5450 <Perl__add_range_to_invlist@plt>
   46a14:	str	x0, [sp, #392]
   46a18:	ldr	w0, [sp, #192]
   46a1c:	and	w0, w0, #0xfffffffb
   46a20:	str	w0, [sp, #192]
   46a24:	ldr	w0, [sp, #184]
   46a28:	and	w0, w0, #0xfffffffd
   46a2c:	and	w0, w0, #0xff
   46a30:	str	w0, [sp, #184]
   46a34:	str	wzr, [sp, #264]
   46a38:	str	xzr, [sp, #208]
   46a3c:	b	43b74 <my_regprop@@Base+0x98b0>
   46a40:	mov	w1, #0x1                   	// #1
   46a44:	lsl	w1, w1, w19
   46a48:	ldr	w2, [sp, #264]
   46a4c:	orr	w1, w2, w1
   46a50:	str	w1, [sp, #264]
   46a54:	ldr	w1, [sp, #192]
   46a58:	orr	w1, w1, #0x4
   46a5c:	str	w1, [sp, #192]
   46a60:	ldr	w1, [sp, #184]
   46a64:	orr	w1, w1, #0x2
   46a68:	and	w1, w1, #0xff
   46a6c:	str	w1, [sp, #184]
   46a70:	and	x0, x0, #0xff
   46a74:	add	x4, sp, #0x1d0
   46a78:	and	w3, w19, #0x1
   46a7c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   46a80:	ldr	x1, [x1, #3928]
   46a84:	ldr	x2, [x1, x0, lsl #3]
   46a88:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   46a8c:	ldr	x0, [x0, #3968]
   46a90:	ldr	x1, [x0]
   46a94:	mov	x0, x27
   46a98:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   46a9c:	ldr	x1, [sp, #392]
   46aa0:	cbz	x1, 46ad4 <my_regprop@@Base+0xc810>
   46aa4:	add	x4, sp, #0x188
   46aa8:	mov	w3, #0x0                   	// #0
   46aac:	ldr	x2, [sp, #464]
   46ab0:	mov	x0, x27
   46ab4:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   46ab8:	ldr	x1, [sp, #464]
   46abc:	ldr	w2, [x1, #8]
   46ac0:	cmp	w2, #0x1
   46ac4:	b.ls	46ae0 <my_regprop@@Base+0xc81c>  // b.plast
   46ac8:	sub	w2, w2, #0x1
   46acc:	str	w2, [x1, #8]
   46ad0:	b	46a38 <my_regprop@@Base+0xc774>
   46ad4:	ldr	x0, [sp, #464]
   46ad8:	str	x0, [sp, #392]
   46adc:	b	46a38 <my_regprop@@Base+0xc774>
   46ae0:	mov	x0, x27
   46ae4:	bl	5860 <Perl_sv_free2@plt>
   46ae8:	b	46a38 <my_regprop@@Base+0xc774>
   46aec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   46af0:	add	x3, x3, #0xc10
   46af4:	add	x3, x3, #0x870
   46af8:	mov	w2, #0x43fe                	// #17406
   46afc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   46b00:	add	x1, x1, #0xfb8
   46b04:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   46b08:	add	x0, x0, #0xb18
   46b0c:	bl	58e0 <__assert_fail@plt>
   46b10:	tst	w3, #0x6
   46b14:	ccmp	w1, #0xe, #0x4, eq  // eq = none
   46b18:	b.ne	46d50 <my_regprop@@Base+0xca8c>  // b.any
   46b1c:	ldr	x1, [sp, #376]
   46b20:	cmp	w2, #0x2
   46b24:	b.ls	4a038 <my_regprop@@Base+0xfd74>  // b.plast
   46b28:	and	x0, x0, #0xff
   46b2c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   46b30:	ldr	x2, [x2, #3904]
   46b34:	ldr	x2, [x2, x0, lsl #3]
   46b38:	add	x4, sp, #0x178
   46b3c:	and	w3, w19, #0x1
   46b40:	mov	x0, x27
   46b44:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   46b48:	cbnz	w21, 46d98 <my_regprop@@Base+0xcad4>
   46b4c:	ldr	x0, [sp, #336]
   46b50:	str	x0, [sp, #280]
   46b54:	cbnz	w22, 46f10 <my_regprop@@Base+0xcc4c>
   46b58:	ldr	x0, [x28, #64]
   46b5c:	ldrb	w1, [x0]
   46b60:	str	xzr, [sp, #208]
   46b64:	cmp	w1, #0x2d
   46b68:	b.ne	46eb8 <my_regprop@@Base+0xcbf4>  // b.any
   46b6c:	add	x2, x0, #0x1
   46b70:	str	x2, [sp, #208]
   46b74:	cbz	w21, 46bb4 <my_regprop@@Base+0xc8f0>
   46b78:	ldrb	w1, [x0, #1]
   46b7c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   46b80:	ldr	x0, [x0, #3880]
   46b84:	ldr	w1, [x0, x1, lsl #2]
   46b88:	mov	w0, #0x4800                	// #18432
   46b8c:	bics	wzr, w0, w1
   46b90:	b.ne	46bb4 <my_regprop@@Base+0xc8f0>  // b.any
   46b94:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   46b98:	ldr	x0, [x0, #3880]
   46b9c:	mov	w1, #0x4800                	// #18432
   46ba0:	ldrb	w3, [x2, #1]!
   46ba4:	ldr	w3, [x0, x3, lsl #2]
   46ba8:	bics	wzr, w1, w3
   46bac:	b.eq	46ba0 <my_regprop@@Base+0xc8dc>  // b.none
   46bb0:	str	x2, [sp, #208]
   46bb4:	ldr	x0, [x28, #56]
   46bb8:	ldr	x1, [sp, #208]
   46bbc:	cmp	x0, x1
   46bc0:	b.ls	46f18 <my_regprop@@Base+0xcc54>  // b.plast
   46bc4:	ldrb	w0, [x1]
   46bc8:	cmp	w0, #0x5d
   46bcc:	b.eq	46f20 <my_regprop@@Base+0xcc5c>  // b.none
   46bd0:	str	x1, [x28, #64]
   46bd4:	tbnz	w19, #31, 4427c <my_regprop@@Base+0x9fb8>
   46bd8:	cbnz	w23, 49f64 <my_regprop@@Base+0xfca0>
   46bdc:	mov	w1, #0x14                  	// #20
   46be0:	mov	x0, x27
   46be4:	bl	5870 <Perl_ckwarn@plt>
   46be8:	and	w0, w0, #0xff
   46bec:	cbz	w0, 46d1c <my_regprop@@Base+0xca58>
   46bf0:	ldr	x0, [sp, #208]
   46bf4:	ldr	x1, [sp, #232]
   46bf8:	sub	x19, x0, x1
   46bfc:	cmp	x1, x0
   46c00:	csel	w19, w19, wzr, ls  // ls = plast
   46c04:	ldr	x0, [x28, #72]
   46c08:	cbz	x0, 46e10 <my_regprop@@Base+0xcb4c>
   46c0c:	ldr	x1, [sp, #208]
   46c10:	sub	x1, x1, x0
   46c14:	ldr	x0, [x28, #80]
   46c18:	add	x0, x0, x1
   46c1c:	ldr	x1, [x28, #8]
   46c20:	sub	x0, x0, x1
   46c24:	ldr	x1, [x28, #136]
   46c28:	cmp	x0, x1
   46c2c:	b.le	46d1c <my_regprop@@Base+0xca58>
   46c30:	ldr	x0, [x27, #224]
   46c34:	cbz	x0, 46c5c <my_regprop@@Base+0xc998>
   46c38:	ldr	x0, [x0, #64]
   46c3c:	cmp	x0, #0x0
   46c40:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   46c44:	ldr	x1, [x1, #3984]
   46c48:	ccmp	x0, x1, #0x4, ne  // ne = any
   46c4c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   46c50:	ldr	x1, [x1, #3832]
   46c54:	ccmp	x0, x1, #0x4, ne  // ne = any
   46c58:	b.ne	46e30 <my_regprop@@Base+0xcb6c>  // b.any
   46c5c:	ldr	w0, [x28, #192]
   46c60:	cmp	w0, #0x0
   46c64:	cset	w6, ne  // ne = any
   46c68:	ldr	x0, [x28, #64]
   46c6c:	ldr	x1, [x28, #72]
   46c70:	sub	x1, x0, x1
   46c74:	ldr	x0, [x28, #80]
   46c78:	add	x0, x0, x1
   46c7c:	ldr	x2, [x28, #16]
   46c80:	cmp	x0, x2
   46c84:	b.hi	46e78 <my_regprop@@Base+0xcbb4>  // b.pmore
   46c88:	ldr	x1, [x28, #8]
   46c8c:	subs	x4, x0, x1
   46c90:	b.mi	46e88 <my_regprop@@Base+0xcbc4>  // b.first
   46c94:	mov	x7, x4
   46c98:	sub	x3, x2, x0
   46c9c:	cmp	x0, x2
   46ca0:	csel	x0, x0, x2, ls  // ls = plast
   46ca4:	str	x0, [sp, #24]
   46ca8:	str	x3, [sp, #16]
   46cac:	str	w6, [sp, #8]
   46cb0:	str	x1, [sp]
   46cb4:	ldr	x5, [sp, #232]
   46cb8:	mov	w4, w19
   46cbc:	mov	w3, w19
   46cc0:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   46cc4:	add	x2, x2, #0xb90
   46cc8:	mov	w1, #0x14                  	// #20
   46ccc:	mov	x0, x27
   46cd0:	bl	5110 <Perl_warner@plt>
   46cd4:	ldr	x0, [x28, #72]
   46cd8:	cbz	x0, 46d1c <my_regprop@@Base+0xca58>
   46cdc:	ldr	x1, [x28, #64]
   46ce0:	sub	x1, x1, x0
   46ce4:	ldr	x0, [x28, #80]
   46ce8:	add	x1, x0, x1
   46cec:	ldr	x2, [x28, #8]
   46cf0:	sub	x3, x1, x2
   46cf4:	ldr	x0, [x28, #136]
   46cf8:	cmp	x3, x0
   46cfc:	b.le	46d1c <my_regprop@@Base+0xca58>
   46d00:	ldr	x0, [x28, #16]
   46d04:	cmp	x0, x1
   46d08:	csel	x0, x0, x1, ls  // ls = plast
   46d0c:	cmp	x2, x0
   46d10:	csel	x0, x2, x0, hi  // hi = pmore
   46d14:	sub	x0, x0, x2
   46d18:	str	x0, [x28, #136]
   46d1c:	mov	x3, #0x2d                  	// #45
   46d20:	mov	x2, x3
   46d24:	ldr	x1, [sp, #392]
   46d28:	mov	x0, x27
   46d2c:	bl	5450 <Perl__add_range_to_invlist@plt>
   46d30:	str	x0, [sp, #392]
   46d34:	ldr	x0, [sp, #176]
   46d38:	add	x0, x0, #0x1
   46d3c:	str	x0, [sp, #176]
   46d40:	ldr	x0, [sp, #280]
   46d44:	str	x0, [sp, #256]
   46d48:	str	xzr, [sp, #208]
   46d4c:	b	43b74 <my_regprop@@Base+0x98b0>
   46d50:	cbnz	w2, 46d60 <my_regprop@@Base+0xca9c>
   46d54:	cmp	w1, #0x1
   46d58:	ccmp	w1, #0xc, #0x4, ne  // ne = any
   46d5c:	b.eq	4a034 <my_regprop@@Base+0xfd70>  // b.none
   46d60:	and	w3, w19, #0x1
   46d64:	tbnz	w19, #0, 46d8c <my_regprop@@Base+0xcac8>
   46d68:	ldr	x1, [sp, #360]
   46d6c:	add	x4, sp, #0x168
   46d70:	and	x0, x0, #0xff
   46d74:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   46d78:	ldr	x2, [x2, #3928]
   46d7c:	ldr	x2, [x2, x0, lsl #3]
   46d80:	mov	x0, x27
   46d84:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   46d88:	b	46b48 <my_regprop@@Base+0xc884>
   46d8c:	ldr	x1, [sp, #368]
   46d90:	add	x4, sp, #0x170
   46d94:	b	46d70 <my_regprop@@Base+0xcaac>
   46d98:	str	xzr, [sp, #208]
   46d9c:	b	43cb0 <my_regprop@@Base+0x99ec>
   46da0:	ldr	x3, [x28, #8]
   46da4:	sub	x2, x6, x3
   46da8:	mov	x4, #0x0                   	// #0
   46dac:	b	43d84 <my_regprop@@Base+0x9ac0>
   46db0:	ldr	x6, [x28, #48]
   46db4:	ldr	x5, [x28, #56]
   46db8:	sub	w5, w5, w6
   46dbc:	mov	w3, #0x444f                	// #17487
   46dc0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46dc4:	add	x2, x2, #0xfb8
   46dc8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46dcc:	add	x1, x1, #0x870
   46dd0:	mov	x0, x27
   46dd4:	bl	5420 <Perl_croak@plt>
   46dd8:	ldr	x2, [x28, #8]
   46ddc:	sub	x4, x3, x2
   46de0:	mov	x5, #0x0                   	// #0
   46de4:	b	49fe4 <my_regprop@@Base+0xfd20>
   46de8:	ldr	x6, [x28, #48]
   46dec:	ldr	x5, [x28, #56]
   46df0:	sub	w5, w5, w6
   46df4:	mov	w3, #0x446b                	// #17515
   46df8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46dfc:	add	x2, x2, #0xfb8
   46e00:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46e04:	add	x1, x1, #0x870
   46e08:	mov	x0, x27
   46e0c:	bl	5420 <Perl_croak@plt>
   46e10:	ldr	x4, [sp, #208]
   46e14:	mov	w3, #0x446f                	// #17519
   46e18:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46e1c:	add	x2, x2, #0xfb8
   46e20:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46e24:	add	x1, x1, #0xab8
   46e28:	mov	x0, x27
   46e2c:	bl	5420 <Perl_croak@plt>
   46e30:	ldrb	w0, [x0, #13]
   46e34:	tbz	w0, #1, 46c5c <my_regprop@@Base+0xc998>
   46e38:	ldr	x1, [x28, #24]
   46e3c:	cbz	x1, 46e4c <my_regprop@@Base+0xcb88>
   46e40:	mov	w2, #0xb                   	// #11
   46e44:	mov	x0, x27
   46e48:	bl	54b0 <Perl_save_pushptr@plt>
   46e4c:	ldr	x1, [x28, #160]
   46e50:	cbz	x1, 46e60 <my_regprop@@Base+0xcb9c>
   46e54:	mov	w2, #0xa                   	// #10
   46e58:	mov	x0, x27
   46e5c:	bl	54b0 <Perl_save_pushptr@plt>
   46e60:	ldr	x1, [x28, #168]
   46e64:	cbz	x1, 46c5c <my_regprop@@Base+0xc998>
   46e68:	mov	w2, #0xa                   	// #10
   46e6c:	mov	x0, x27
   46e70:	bl	54b0 <Perl_save_pushptr@plt>
   46e74:	b	46c5c <my_regprop@@Base+0xc998>
   46e78:	ldr	x1, [x28, #8]
   46e7c:	sub	x7, x2, x1
   46e80:	mov	x3, #0x0                   	// #0
   46e84:	b	46c9c <my_regprop@@Base+0xc9d8>
   46e88:	ldr	x6, [x28, #48]
   46e8c:	ldr	x5, [x28, #56]
   46e90:	sub	w5, w5, w6
   46e94:	mov	w3, #0x446f                	// #17519
   46e98:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   46e9c:	add	x2, x2, #0xfb8
   46ea0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   46ea4:	add	x1, x1, #0x870
   46ea8:	mov	x0, x27
   46eac:	bl	5420 <Perl_croak@plt>
   46eb0:	ldr	x0, [sp, #256]
   46eb4:	str	x0, [sp, #280]
   46eb8:	tbz	w19, #31, 44290 <my_regprop@@Base+0x9fcc>
   46ebc:	ldr	x1, [sp, #336]
   46ec0:	cmp	x1, #0xff
   46ec4:	b.ls	46f28 <my_regprop@@Base+0xcc64>  // b.plast
   46ec8:	ldr	w0, [x28]
   46ecc:	tst	x0, #0x380
   46ed0:	b.ne	49f28 <my_regprop@@Base+0xfc64>  // b.any
   46ed4:	and	w0, w0, #0xfffffc7f
   46ed8:	orr	w0, w0, #0x100
   46edc:	str	w0, [x28]
   46ee0:	mov	w0, #0x1                   	// #1
   46ee4:	str	w0, [x28, #200]
   46ee8:	ldrb	w0, [x28, #384]
   46eec:	cbz	w0, 49f28 <my_regprop@@Base+0xfc64>
   46ef0:	ldr	w0, [x28, #148]
   46ef4:	tbnz	w0, #31, 49f28 <my_regprop@@Base+0xfc64>
   46ef8:	ldr	x1, [sp, #160]
   46efc:	ldr	w0, [x1]
   46f00:	orr	w0, w0, #0x20
   46f04:	str	w0, [x1]
   46f08:	mov	x19, #0x0                   	// #0
   46f0c:	b	47fb8 <my_regprop@@Base+0xdcf4>
   46f10:	str	xzr, [sp, #208]
   46f14:	b	46eb8 <my_regprop@@Base+0xcbf4>
   46f18:	str	xzr, [sp, #208]
   46f1c:	b	46eb8 <my_regprop@@Base+0xcbf4>
   46f20:	str	xzr, [sp, #208]
   46f24:	b	46eb8 <my_regprop@@Base+0xcbf4>
   46f28:	ldr	w0, [x28]
   46f2c:	ubfx	x0, x0, #2, #1
   46f30:	ldr	w2, [sp, #240]
   46f34:	and	w0, w2, w0
   46f38:	ldr	x2, [sp, #280]
   46f3c:	cmp	x1, x2
   46f40:	csel	w0, w0, wzr, eq  // eq = none
   46f44:	cbnz	w0, 47144 <my_regprop@@Base+0xce80>
   46f48:	cbz	w23, 4711c <my_regprop@@Base+0xce58>
   46f4c:	mov	w1, #0x14                  	// #20
   46f50:	mov	x0, x27
   46f54:	bl	5870 <Perl_ckwarn@plt>
   46f58:	and	w0, w0, #0xff
   46f5c:	cbz	w0, 4711c <my_regprop@@Base+0xce58>
   46f60:	ldr	x0, [sp, #208]
   46f64:	cbz	x0, 47114 <my_regprop@@Base+0xce50>
   46f68:	ldr	x0, [sp, #280]
   46f6c:	cmp	x0, #0xff
   46f70:	ldr	w0, [sp, #244]
   46f74:	ccmp	w0, #0x0, #0x4, ls  // ls = plast
   46f78:	ldr	w0, [sp, #292]
   46f7c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   46f80:	b.ne	47214 <my_regprop@@Base+0xcf50>  // b.any
   46f84:	ldr	x0, [sp, #336]
   46f88:	ldr	x1, [sp, #280]
   46f8c:	cmp	x0, x1
   46f90:	b.eq	47114 <my_regprop@@Base+0xce50>  // b.none
   46f94:	sub	x1, x1, #0x20
   46f98:	cmp	x1, #0x5e
   46f9c:	b.ls	46fac <my_regprop@@Base+0xcce8>  // b.plast
   46fa0:	sub	x1, x0, #0x20
   46fa4:	cmp	x1, #0x5e
   46fa8:	b.hi	475c4 <my_regprop@@Base+0xd300>  // b.pmore
   46fac:	ldr	w1, [sp, #244]
   46fb0:	cbnz	w1, 47008 <my_regprop@@Base+0xcd44>
   46fb4:	ldr	x1, [sp, #280]
   46fb8:	sub	x1, x1, #0x30
   46fbc:	cmp	x1, #0x9
   46fc0:	b.hi	46fd0 <my_regprop@@Base+0xcd0c>  // b.pmore
   46fc4:	sub	x1, x0, #0x30
   46fc8:	cmp	x1, #0x9
   46fcc:	b.ls	475c4 <my_regprop@@Base+0xd300>  // b.plast
   46fd0:	ldr	x1, [sp, #280]
   46fd4:	sub	x1, x1, #0x61
   46fd8:	cmp	x1, #0x19
   46fdc:	b.hi	46fec <my_regprop@@Base+0xcd28>  // b.pmore
   46fe0:	sub	x1, x0, #0x61
   46fe4:	cmp	x1, #0x19
   46fe8:	b.ls	475c4 <my_regprop@@Base+0xd300>  // b.plast
   46fec:	ldr	x1, [sp, #280]
   46ff0:	sub	x1, x1, #0x41
   46ff4:	cmp	x1, #0x19
   46ff8:	b.hi	47008 <my_regprop@@Base+0xcd44>  // b.pmore
   46ffc:	sub	x1, x0, #0x41
   47000:	cmp	x1, #0x19
   47004:	b.ls	475c4 <my_regprop@@Base+0xd300>  // b.plast
   47008:	ldr	x1, [x28, #72]
   4700c:	cbz	x1, 47520 <my_regprop@@Base+0xd25c>
   47010:	ldr	x0, [x28, #64]
   47014:	sub	x1, x0, x1
   47018:	ldr	x0, [x28, #80]
   4701c:	add	x0, x0, x1
   47020:	ldr	x1, [x28, #8]
   47024:	sub	x0, x0, x1
   47028:	ldr	x1, [x28, #136]
   4702c:	cmp	x0, x1
   47030:	b.le	4711c <my_regprop@@Base+0xce58>
   47034:	ldr	x0, [x27, #224]
   47038:	cbz	x0, 47060 <my_regprop@@Base+0xcd9c>
   4703c:	ldr	x0, [x0, #64]
   47040:	cmp	x0, #0x0
   47044:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47048:	ldr	x1, [x1, #3984]
   4704c:	ccmp	x0, x1, #0x4, ne  // ne = any
   47050:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47054:	ldr	x1, [x1, #3832]
   47058:	ccmp	x0, x1, #0x4, ne  // ne = any
   4705c:	b.ne	47540 <my_regprop@@Base+0xd27c>  // b.any
   47060:	ldr	w0, [x28, #192]
   47064:	cmp	w0, #0x0
   47068:	cset	w3, ne  // ne = any
   4706c:	ldr	x0, [x28, #64]
   47070:	ldr	x1, [x28, #72]
   47074:	sub	x1, x0, x1
   47078:	ldr	x0, [x28, #80]
   4707c:	add	x0, x0, x1
   47080:	ldr	x1, [x28, #16]
   47084:	cmp	x0, x1
   47088:	b.ls	47588 <my_regprop@@Base+0xd2c4>  // b.plast
   4708c:	ldr	x5, [x28, #8]
   47090:	sub	x4, x1, x5
   47094:	mov	x7, #0x0                   	// #0
   47098:	cmp	x0, x1
   4709c:	csel	x0, x0, x1, ls  // ls = plast
   470a0:	str	x0, [sp]
   470a4:	mov	w6, w3
   470a8:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   470ac:	add	x2, x2, #0xc58
   470b0:	mov	w1, #0x14                  	// #20
   470b4:	mov	x0, x27
   470b8:	bl	5110 <Perl_warner@plt>
   470bc:	ldr	x0, [x28, #72]
   470c0:	cbz	x0, 47104 <my_regprop@@Base+0xce40>
   470c4:	ldr	x1, [x28, #64]
   470c8:	sub	x1, x1, x0
   470cc:	ldr	x0, [x28, #80]
   470d0:	add	x1, x0, x1
   470d4:	ldr	x2, [x28, #8]
   470d8:	sub	x3, x1, x2
   470dc:	ldr	x0, [x28, #136]
   470e0:	cmp	x3, x0
   470e4:	b.le	47104 <my_regprop@@Base+0xce40>
   470e8:	ldr	x0, [x28, #16]
   470ec:	cmp	x0, x1
   470f0:	csel	x0, x0, x1, ls  // ls = plast
   470f4:	cmp	x2, x0
   470f8:	csel	x0, x2, x0, hi  // hi = pmore
   470fc:	sub	x0, x0, x2
   47100:	str	x0, [x28, #136]
   47104:	ldr	x0, [sp, #336]
   47108:	ldr	x1, [sp, #280]
   4710c:	cmp	x0, x1
   47110:	b.ne	4711c <my_regprop@@Base+0xce58>  // b.any
   47114:	ldr	w0, [sp, #244]
   47118:	cbnz	w0, 47320 <my_regprop@@Base+0xd05c>
   4711c:	ldr	x3, [sp, #336]
   47120:	ldr	x19, [sp, #280]
   47124:	mov	x2, x19
   47128:	ldr	x1, [sp, #224]
   4712c:	mov	x0, x27
   47130:	bl	5450 <Perl__add_range_to_invlist@plt>
   47134:	str	x0, [sp, #224]
   47138:	str	x19, [sp, #256]
   4713c:	str	xzr, [sp, #208]
   47140:	b	43b74 <my_regprop@@Base+0x98b0>
   47144:	cmp	x1, #0xdf
   47148:	b.ne	46f48 <my_regprop@@Base+0xcc84>  // b.any
   4714c:	ldr	w0, [x28]
   47150:	ubfx	x0, x0, #7, #3
   47154:	cmp	w0, #0x4
   47158:	mov	w4, #0x6                   	// #6
   4715c:	mov	w0, #0x2                   	// #2
   47160:	csel	w4, w4, w0, eq  // eq = none
   47164:	add	x3, sp, #0x1d0
   47168:	add	x2, sp, #0x228
   4716c:	ldr	x1, [sp, #336]
   47170:	mov	x0, x27
   47174:	bl	5320 <Perl__to_uni_fold_flags@plt>
   47178:	ldr	x1, [sp, #336]
   4717c:	cmp	x1, x0
   47180:	b.eq	46f48 <my_regprop@@Base+0xcc84>  // b.none
   47184:	ldr	w0, [x28, #256]
   47188:	cbz	w0, 471a4 <my_regprop@@Base+0xcee0>
   4718c:	ldr	x0, [sp, #176]
   47190:	sub	x0, x0, #0x1
   47194:	str	x0, [sp, #176]
   47198:	ldr	x0, [sp, #304]
   4719c:	str	x0, [sp, #336]
   471a0:	b	43b74 <my_regprop@@Base+0x98b0>
   471a4:	add	x1, sp, #0x228
   471a8:	ldr	x2, [sp, #464]
   471ac:	add	x2, x1, x2
   471b0:	mov	x0, x27
   471b4:	bl	5720 <Perl_utf8_length@plt>
   471b8:	str	x0, [sp, #280]
   471bc:	mov	x2, #0x0                   	// #0
   471c0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   471c4:	add	x1, x1, #0x20
   471c8:	mov	x0, x27
   471cc:	bl	59a0 <Perl_newSVpvn@plt>
   471d0:	mov	x1, x0
   471d4:	mov	x0, x27
   471d8:	bl	55d0 <Perl_sv_2mortal@plt>
   471dc:	mov	x19, x0
   471e0:	ldr	x3, [sp, #336]
   471e4:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   471e8:	add	x2, x2, #0x1c8
   471ec:	mov	x1, x0
   471f0:	mov	x0, x27
   471f4:	bl	5120 <Perl_sv_catpvf@plt>
   471f8:	ldr	x3, [sp, #280]
   471fc:	mov	x2, x19
   47200:	ldr	x1, [sp, #144]
   47204:	mov	x0, x27
   47208:	bl	291fc <my_regexec@@Base+0x5d08>
   4720c:	str	x0, [sp, #144]
   47210:	b	4718c <my_regprop@@Base+0xcec8>
   47214:	ldr	x1, [x28, #72]
   47218:	cbz	x1, 4747c <my_regprop@@Base+0xd1b8>
   4721c:	ldr	x0, [x28, #64]
   47220:	sub	x1, x0, x1
   47224:	ldr	x0, [x28, #80]
   47228:	add	x0, x0, x1
   4722c:	ldr	x1, [x28, #8]
   47230:	sub	x0, x0, x1
   47234:	ldr	x1, [x28, #136]
   47238:	cmp	x0, x1
   4723c:	b.le	47310 <my_regprop@@Base+0xd04c>
   47240:	ldr	x0, [x27, #224]
   47244:	cbz	x0, 4726c <my_regprop@@Base+0xcfa8>
   47248:	ldr	x0, [x0, #64]
   4724c:	cmp	x0, #0x0
   47250:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47254:	ldr	x1, [x1, #3984]
   47258:	ccmp	x0, x1, #0x4, ne  // ne = any
   4725c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47260:	ldr	x1, [x1, #3832]
   47264:	ccmp	x0, x1, #0x4, ne  // ne = any
   47268:	b.ne	4749c <my_regprop@@Base+0xd1d8>  // b.any
   4726c:	ldr	w0, [x28, #192]
   47270:	cmp	w0, #0x0
   47274:	cset	w3, ne  // ne = any
   47278:	ldr	x0, [x28, #64]
   4727c:	ldr	x1, [x28, #72]
   47280:	sub	x1, x0, x1
   47284:	ldr	x0, [x28, #80]
   47288:	add	x0, x0, x1
   4728c:	ldr	x1, [x28, #16]
   47290:	cmp	x0, x1
   47294:	b.ls	474e4 <my_regprop@@Base+0xd220>  // b.plast
   47298:	ldr	x5, [x28, #8]
   4729c:	sub	x4, x1, x5
   472a0:	mov	x7, #0x0                   	// #0
   472a4:	cmp	x0, x1
   472a8:	csel	x0, x0, x1, ls  // ls = plast
   472ac:	str	x0, [sp]
   472b0:	mov	w6, w3
   472b4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   472b8:	add	x2, x2, #0xbe8
   472bc:	mov	w1, #0x14                  	// #20
   472c0:	mov	x0, x27
   472c4:	bl	5110 <Perl_warner@plt>
   472c8:	ldr	x0, [x28, #72]
   472cc:	cbz	x0, 47310 <my_regprop@@Base+0xd04c>
   472d0:	ldr	x1, [x28, #64]
   472d4:	sub	x1, x1, x0
   472d8:	ldr	x0, [x28, #80]
   472dc:	add	x1, x0, x1
   472e0:	ldr	x2, [x28, #8]
   472e4:	sub	x3, x1, x2
   472e8:	ldr	x0, [x28, #136]
   472ec:	cmp	x3, x0
   472f0:	b.le	47310 <my_regprop@@Base+0xd04c>
   472f4:	ldr	x0, [x28, #16]
   472f8:	cmp	x0, x1
   472fc:	csel	x0, x0, x1, ls  // ls = plast
   47300:	cmp	x2, x0
   47304:	csel	x0, x2, x0, hi  // hi = pmore
   47308:	sub	x0, x0, x2
   4730c:	str	x0, [x28, #136]
   47310:	ldr	x0, [sp, #336]
   47314:	ldr	x1, [sp, #280]
   47318:	cmp	x1, x0
   4731c:	b.ne	4711c <my_regprop@@Base+0xce58>  // b.any
   47320:	ldr	x19, [sp, #336]
   47324:	sub	x0, x19, #0x20
   47328:	cmp	x0, #0x5e
   4732c:	b.hi	478d0 <my_regprop@@Base+0xd60c>  // b.pmore
   47330:	mov	w1, w19
   47334:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   47338:	add	x0, x0, #0x988
   4733c:	bl	5610 <strchr@plt>
   47340:	mov	w1, #0x0                   	// #0
   47344:	cbz	x0, 47354 <my_regprop@@Base+0xd090>
   47348:	mov	w0, #0x5c                  	// #92
   4734c:	strb	w0, [sp, #552]
   47350:	mov	w1, #0x1                   	// #1
   47354:	add	x0, sp, #0x228
   47358:	strb	w19, [x0, w1, uxtw]
   4735c:	add	w1, w1, #0x1
   47360:	strb	wzr, [x0, w1, uxtw]
   47364:	ldr	x1, [x28, #72]
   47368:	cbz	x1, 47828 <my_regprop@@Base+0xd564>
   4736c:	ldr	x0, [x28, #64]
   47370:	sub	x1, x0, x1
   47374:	ldr	x0, [x28, #80]
   47378:	add	x0, x0, x1
   4737c:	ldr	x1, [x28, #8]
   47380:	sub	x0, x0, x1
   47384:	ldr	x1, [x28, #136]
   47388:	cmp	x0, x1
   4738c:	b.le	4711c <my_regprop@@Base+0xce58>
   47390:	ldr	x0, [x27, #224]
   47394:	cbz	x0, 473bc <my_regprop@@Base+0xd0f8>
   47398:	ldr	x0, [x0, #64]
   4739c:	cmp	x0, #0x0
   473a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   473a4:	ldr	x1, [x1, #3984]
   473a8:	ccmp	x0, x1, #0x4, ne  // ne = any
   473ac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   473b0:	ldr	x1, [x1, #3832]
   473b4:	ccmp	x0, x1, #0x4, ne  // ne = any
   473b8:	b.ne	47848 <my_regprop@@Base+0xd584>  // b.any
   473bc:	ldr	x0, [x28, #64]
   473c0:	ldr	x1, [sp, #232]
   473c4:	sub	x3, x0, x1
   473c8:	ldr	w1, [x28, #192]
   473cc:	cmp	w1, #0x0
   473d0:	cset	w6, ne  // ne = any
   473d4:	ldr	x1, [x28, #72]
   473d8:	sub	x1, x0, x1
   473dc:	ldr	x0, [x28, #80]
   473e0:	add	x0, x0, x1
   473e4:	ldr	x2, [x28, #16]
   473e8:	cmp	x0, x2
   473ec:	b.ls	47890 <my_regprop@@Base+0xd5cc>  // b.plast
   473f0:	ldr	x1, [x28, #8]
   473f4:	sub	x7, x2, x1
   473f8:	mov	x4, #0x0                   	// #0
   473fc:	cmp	x0, x2
   47400:	csel	x0, x0, x2, ls  // ls = plast
   47404:	str	x0, [sp, #24]
   47408:	str	x4, [sp, #16]
   4740c:	str	w6, [sp, #8]
   47410:	str	x1, [sp]
   47414:	add	x5, sp, #0x228
   47418:	ldr	x4, [sp, #232]
   4741c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   47420:	add	x2, x2, #0xd60
   47424:	mov	w1, #0x14                  	// #20
   47428:	mov	x0, x27
   4742c:	bl	5110 <Perl_warner@plt>
   47430:	ldr	x0, [x28, #72]
   47434:	cbz	x0, 4711c <my_regprop@@Base+0xce58>
   47438:	ldr	x1, [x28, #64]
   4743c:	sub	x1, x1, x0
   47440:	ldr	x0, [x28, #80]
   47444:	add	x1, x0, x1
   47448:	ldr	x2, [x28, #8]
   4744c:	sub	x3, x1, x2
   47450:	ldr	x0, [x28, #136]
   47454:	cmp	x3, x0
   47458:	b.le	4711c <my_regprop@@Base+0xce58>
   4745c:	ldr	x0, [x28, #16]
   47460:	cmp	x0, x1
   47464:	csel	x0, x0, x1, ls  // ls = plast
   47468:	cmp	x2, x0
   4746c:	csel	x0, x2, x0, hi  // hi = pmore
   47470:	sub	x0, x0, x2
   47474:	str	x0, [x28, #136]
   47478:	b	4711c <my_regprop@@Base+0xce58>
   4747c:	ldr	x4, [x28, #64]
   47480:	mov	w3, #0x44d0                	// #17616
   47484:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47488:	add	x2, x2, #0xfb8
   4748c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47490:	add	x1, x1, #0xab8
   47494:	mov	x0, x27
   47498:	bl	5420 <Perl_croak@plt>
   4749c:	ldrb	w0, [x0, #13]
   474a0:	tbz	w0, #1, 4726c <my_regprop@@Base+0xcfa8>
   474a4:	ldr	x1, [x28, #24]
   474a8:	cbz	x1, 474b8 <my_regprop@@Base+0xd1f4>
   474ac:	mov	w2, #0xb                   	// #11
   474b0:	mov	x0, x27
   474b4:	bl	54b0 <Perl_save_pushptr@plt>
   474b8:	ldr	x1, [x28, #160]
   474bc:	cbz	x1, 474cc <my_regprop@@Base+0xd208>
   474c0:	mov	w2, #0xa                   	// #10
   474c4:	mov	x0, x27
   474c8:	bl	54b0 <Perl_save_pushptr@plt>
   474cc:	ldr	x1, [x28, #168]
   474d0:	cbz	x1, 4726c <my_regprop@@Base+0xcfa8>
   474d4:	mov	w2, #0xa                   	// #10
   474d8:	mov	x0, x27
   474dc:	bl	54b0 <Perl_save_pushptr@plt>
   474e0:	b	4726c <my_regprop@@Base+0xcfa8>
   474e4:	ldr	x5, [x28, #8]
   474e8:	subs	x4, x0, x5
   474ec:	b.mi	474f8 <my_regprop@@Base+0xd234>  // b.first
   474f0:	sub	x7, x1, x0
   474f4:	b	472a4 <my_regprop@@Base+0xcfe0>
   474f8:	ldr	x6, [x28, #48]
   474fc:	ldr	x5, [x28, #56]
   47500:	sub	w5, w5, w6
   47504:	mov	w3, #0x44d0                	// #17616
   47508:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4750c:	add	x2, x2, #0xfb8
   47510:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47514:	add	x1, x1, #0x870
   47518:	mov	x0, x27
   4751c:	bl	5420 <Perl_croak@plt>
   47520:	ldr	x4, [x28, #64]
   47524:	mov	w3, #0x44e1                	// #17633
   47528:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4752c:	add	x2, x2, #0xfb8
   47530:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47534:	add	x1, x1, #0xab8
   47538:	mov	x0, x27
   4753c:	bl	5420 <Perl_croak@plt>
   47540:	ldrb	w0, [x0, #13]
   47544:	tbz	w0, #1, 47060 <my_regprop@@Base+0xcd9c>
   47548:	ldr	x1, [x28, #24]
   4754c:	cbz	x1, 4755c <my_regprop@@Base+0xd298>
   47550:	mov	w2, #0xb                   	// #11
   47554:	mov	x0, x27
   47558:	bl	54b0 <Perl_save_pushptr@plt>
   4755c:	ldr	x1, [x28, #160]
   47560:	cbz	x1, 47570 <my_regprop@@Base+0xd2ac>
   47564:	mov	w2, #0xa                   	// #10
   47568:	mov	x0, x27
   4756c:	bl	54b0 <Perl_save_pushptr@plt>
   47570:	ldr	x1, [x28, #168]
   47574:	cbz	x1, 47060 <my_regprop@@Base+0xcd9c>
   47578:	mov	w2, #0xa                   	// #10
   4757c:	mov	x0, x27
   47580:	bl	54b0 <Perl_save_pushptr@plt>
   47584:	b	47060 <my_regprop@@Base+0xcd9c>
   47588:	ldr	x5, [x28, #8]
   4758c:	subs	x4, x0, x5
   47590:	b.mi	4759c <my_regprop@@Base+0xd2d8>  // b.first
   47594:	sub	x7, x1, x0
   47598:	b	47098 <my_regprop@@Base+0xcdd4>
   4759c:	ldr	x6, [x28, #48]
   475a0:	ldr	x5, [x28, #56]
   475a4:	sub	w5, w5, w6
   475a8:	mov	w3, #0x44e1                	// #17633
   475ac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   475b0:	add	x2, x2, #0xfb8
   475b4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   475b8:	add	x1, x1, #0x870
   475bc:	mov	x0, x27
   475c0:	bl	5420 <Perl_croak@plt>
   475c4:	ldr	x2, [sp, #280]
   475c8:	cmp	x2, #0x65f
   475cc:	b.ls	4711c <my_regprop@@Base+0xce58>  // b.plast
   475d0:	mov	x1, #0x19cf                	// #6607
   475d4:	cmp	x2, x1
   475d8:	mov	x1, #0x19da                	// #6618
   475dc:	ccmp	x0, x1, #0x0, hi  // hi = pmore
   475e0:	b.eq	47644 <my_regprop@@Base+0xd380>  // b.none
   475e4:	mov	x1, #0xd7ff                	// #55295
   475e8:	movk	x1, #0x1, lsl #16
   475ec:	cmp	x0, x1
   475f0:	mov	x1, #0xd7cd                	// #55245
   475f4:	movk	x1, #0x1, lsl #16
   475f8:	ccmp	x2, x1, #0x0, ls  // ls = plast
   475fc:	b.hi	47744 <my_regprop@@Base+0xd480>  // b.pmore
   47600:	ldr	x1, [sp, #280]
   47604:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   47608:	ldr	x0, [x0, #3928]
   4760c:	ldr	x0, [x0, #8]
   47610:	bl	59d0 <Perl__invlist_search@plt>
   47614:	mov	x19, x0
   47618:	tbnz	x0, #63, 47104 <my_regprop@@Base+0xce40>
   4761c:	tbnz	w0, #0, 47104 <my_regprop@@Base+0xce40>
   47620:	ldr	x1, [sp, #336]
   47624:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   47628:	ldr	x0, [x0, #3928]
   4762c:	ldr	x0, [x0, #8]
   47630:	bl	59d0 <Perl__invlist_search@plt>
   47634:	cmp	x0, #0x0
   47638:	ccmp	x19, x0, #0x4, ge  // ge = tcont
   4763c:	b.eq	47104 <my_regprop@@Base+0xce40>  // b.none
   47640:	tbnz	w0, #0, 47104 <my_regprop@@Base+0xce40>
   47644:	ldr	x1, [x28, #72]
   47648:	cbz	x1, 47784 <my_regprop@@Base+0xd4c0>
   4764c:	ldr	x0, [x28, #64]
   47650:	sub	x1, x0, x1
   47654:	ldr	x0, [x28, #80]
   47658:	add	x0, x0, x1
   4765c:	ldr	x1, [x28, #8]
   47660:	sub	x0, x0, x1
   47664:	ldr	x1, [x28, #136]
   47668:	cmp	x0, x1
   4766c:	b.le	47104 <my_regprop@@Base+0xce40>
   47670:	ldr	x0, [x27, #224]
   47674:	cbz	x0, 4769c <my_regprop@@Base+0xd3d8>
   47678:	ldr	x0, [x0, #64]
   4767c:	cmp	x0, #0x0
   47680:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47684:	ldr	x1, [x1, #3984]
   47688:	ccmp	x0, x1, #0x4, ne  // ne = any
   4768c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47690:	ldr	x1, [x1, #3832]
   47694:	ccmp	x0, x1, #0x4, ne  // ne = any
   47698:	b.ne	477a4 <my_regprop@@Base+0xd4e0>  // b.any
   4769c:	ldr	w0, [x28, #192]
   476a0:	cmp	w0, #0x0
   476a4:	cset	w3, ne  // ne = any
   476a8:	ldr	x0, [x28, #64]
   476ac:	ldr	x1, [x28, #72]
   476b0:	sub	x1, x0, x1
   476b4:	ldr	x0, [x28, #80]
   476b8:	add	x0, x0, x1
   476bc:	ldr	x1, [x28, #16]
   476c0:	cmp	x0, x1
   476c4:	b.ls	477ec <my_regprop@@Base+0xd528>  // b.plast
   476c8:	ldr	x5, [x28, #8]
   476cc:	sub	x4, x1, x5
   476d0:	mov	x7, #0x0                   	// #0
   476d4:	cmp	x0, x1
   476d8:	csel	x0, x0, x1, ls  // ls = plast
   476dc:	str	x0, [sp]
   476e0:	mov	w6, w3
   476e4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   476e8:	add	x2, x2, #0xce8
   476ec:	mov	w1, #0x14                  	// #20
   476f0:	mov	x0, x27
   476f4:	bl	5110 <Perl_warner@plt>
   476f8:	ldr	x0, [x28, #72]
   476fc:	cbz	x0, 47104 <my_regprop@@Base+0xce40>
   47700:	ldr	x1, [x28, #64]
   47704:	sub	x1, x1, x0
   47708:	ldr	x0, [x28, #80]
   4770c:	add	x1, x0, x1
   47710:	ldr	x2, [x28, #8]
   47714:	sub	x3, x1, x2
   47718:	ldr	x0, [x28, #136]
   4771c:	cmp	x3, x0
   47720:	b.le	47104 <my_regprop@@Base+0xce40>
   47724:	ldr	x0, [x28, #16]
   47728:	cmp	x0, x1
   4772c:	csel	x0, x0, x1, ls  // ls = plast
   47730:	cmp	x2, x0
   47734:	csel	x0, x2, x0, hi  // hi = pmore
   47738:	sub	x0, x0, x2
   4773c:	str	x0, [x28, #136]
   47740:	b	47104 <my_regprop@@Base+0xce40>
   47744:	mov	x4, x2
   47748:	sub	x1, x0, x2
   4774c:	cmp	x1, #0x9
   47750:	b.hi	47644 <my_regprop@@Base+0xd380>  // b.pmore
   47754:	mov	x1, #0xffffffffffff2832    	// #-55246
   47758:	movk	x1, #0xfffe, lsl #16
   4775c:	add	x0, x0, x1
   47760:	mov	x2, #0xa                   	// #10
   47764:	udiv	x3, x0, x2
   47768:	msub	x3, x3, x2, x0
   4776c:	add	x0, x4, x1
   47770:	udiv	x1, x0, x2
   47774:	msub	x0, x1, x2, x0
   47778:	cmp	x3, x0
   4777c:	b.hi	4711c <my_regprop@@Base+0xce58>  // b.pmore
   47780:	b	47644 <my_regprop@@Base+0xd380>
   47784:	ldr	x4, [x28, #64]
   47788:	mov	w3, #0x4528                	// #17704
   4778c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47790:	add	x2, x2, #0xfb8
   47794:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47798:	add	x1, x1, #0xab8
   4779c:	mov	x0, x27
   477a0:	bl	5420 <Perl_croak@plt>
   477a4:	ldrb	w0, [x0, #13]
   477a8:	tbz	w0, #1, 4769c <my_regprop@@Base+0xd3d8>
   477ac:	ldr	x1, [x28, #24]
   477b0:	cbz	x1, 477c0 <my_regprop@@Base+0xd4fc>
   477b4:	mov	w2, #0xb                   	// #11
   477b8:	mov	x0, x27
   477bc:	bl	54b0 <Perl_save_pushptr@plt>
   477c0:	ldr	x1, [x28, #160]
   477c4:	cbz	x1, 477d4 <my_regprop@@Base+0xd510>
   477c8:	mov	w2, #0xa                   	// #10
   477cc:	mov	x0, x27
   477d0:	bl	54b0 <Perl_save_pushptr@plt>
   477d4:	ldr	x1, [x28, #168]
   477d8:	cbz	x1, 4769c <my_regprop@@Base+0xd3d8>
   477dc:	mov	w2, #0xa                   	// #10
   477e0:	mov	x0, x27
   477e4:	bl	54b0 <Perl_save_pushptr@plt>
   477e8:	b	4769c <my_regprop@@Base+0xd3d8>
   477ec:	ldr	x5, [x28, #8]
   477f0:	subs	x4, x0, x5
   477f4:	b.mi	47800 <my_regprop@@Base+0xd53c>  // b.first
   477f8:	sub	x7, x1, x0
   477fc:	b	476d4 <my_regprop@@Base+0xd410>
   47800:	ldr	x6, [x28, #48]
   47804:	ldr	x5, [x28, #56]
   47808:	sub	w5, w5, w6
   4780c:	mov	w3, #0x4528                	// #17704
   47810:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47814:	add	x2, x2, #0xfb8
   47818:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4781c:	add	x1, x1, #0x870
   47820:	mov	x0, x27
   47824:	bl	5420 <Perl_croak@plt>
   47828:	ldr	x4, [x28, #64]
   4782c:	mov	w3, #0x453a                	// #17722
   47830:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47834:	add	x2, x2, #0xfb8
   47838:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4783c:	add	x1, x1, #0xab8
   47840:	mov	x0, x27
   47844:	bl	5420 <Perl_croak@plt>
   47848:	ldrb	w0, [x0, #13]
   4784c:	tbz	w0, #1, 473bc <my_regprop@@Base+0xd0f8>
   47850:	ldr	x1, [x28, #24]
   47854:	cbz	x1, 47864 <my_regprop@@Base+0xd5a0>
   47858:	mov	w2, #0xb                   	// #11
   4785c:	mov	x0, x27
   47860:	bl	54b0 <Perl_save_pushptr@plt>
   47864:	ldr	x1, [x28, #160]
   47868:	cbz	x1, 47878 <my_regprop@@Base+0xd5b4>
   4786c:	mov	w2, #0xa                   	// #10
   47870:	mov	x0, x27
   47874:	bl	54b0 <Perl_save_pushptr@plt>
   47878:	ldr	x1, [x28, #168]
   4787c:	cbz	x1, 473bc <my_regprop@@Base+0xd0f8>
   47880:	mov	w2, #0xa                   	// #10
   47884:	mov	x0, x27
   47888:	bl	54b0 <Perl_save_pushptr@plt>
   4788c:	b	473bc <my_regprop@@Base+0xd0f8>
   47890:	ldr	x1, [x28, #8]
   47894:	subs	x4, x0, x1
   47898:	b.mi	478a8 <my_regprop@@Base+0xd5e4>  // b.first
   4789c:	mov	x7, x4
   478a0:	sub	x4, x2, x0
   478a4:	b	473fc <my_regprop@@Base+0xd138>
   478a8:	ldr	x6, [x28, #48]
   478ac:	ldr	x5, [x28, #56]
   478b0:	sub	w5, w5, w6
   478b4:	mov	w3, #0x453a                	// #17722
   478b8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   478bc:	add	x2, x2, #0xfb8
   478c0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   478c4:	add	x1, x1, #0x870
   478c8:	mov	x0, x27
   478cc:	bl	5420 <Perl_croak@plt>
   478d0:	ands	x0, x19, #0xffffffffffffff00
   478d4:	str	x0, [sp, #208]
   478d8:	b.ne	4711c <my_regprop@@Base+0xce58>  // b.any
   478dc:	and	x19, x19, #0xff
   478e0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   478e4:	ldr	x0, [x0, #3880]
   478e8:	ldr	w0, [x0, x19, lsl #2]
   478ec:	tbz	w0, #23, 4711c <my_regprop@@Base+0xce58>
   478f0:	ldr	x1, [x28, #72]
   478f4:	cbz	x1, 47a18 <my_regprop@@Base+0xd754>
   478f8:	ldr	x0, [x28, #64]
   478fc:	sub	x1, x0, x1
   47900:	ldr	x0, [x28, #80]
   47904:	add	x0, x0, x1
   47908:	ldr	x1, [x28, #8]
   4790c:	sub	x0, x0, x1
   47910:	ldr	x1, [x28, #136]
   47914:	cmp	x0, x1
   47918:	b.le	4711c <my_regprop@@Base+0xce58>
   4791c:	ldr	x0, [x27, #224]
   47920:	cbz	x0, 47948 <my_regprop@@Base+0xd684>
   47924:	ldr	x0, [x0, #64]
   47928:	cmp	x0, #0x0
   4792c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47930:	ldr	x1, [x1, #3984]
   47934:	ccmp	x0, x1, #0x4, ne  // ne = any
   47938:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4793c:	ldr	x1, [x1, #3832]
   47940:	ccmp	x0, x1, #0x4, ne  // ne = any
   47944:	b.ne	47a38 <my_regprop@@Base+0xd774>  // b.any
   47948:	ldr	x19, [x28, #64]
   4794c:	ldr	x0, [sp, #232]
   47950:	sub	x0, x19, x0
   47954:	str	x0, [sp, #256]
   47958:	ldrb	w0, [sp, #336]
   4795c:	bl	26214 <my_regexec@@Base+0x2d20>
   47960:	mov	x5, x0
   47964:	ldr	w0, [x28, #192]
   47968:	cmp	w0, #0x0
   4796c:	cset	w6, ne  // ne = any
   47970:	ldr	x0, [x28, #72]
   47974:	sub	x19, x19, x0
   47978:	ldr	x0, [x28, #80]
   4797c:	add	x0, x0, x19
   47980:	ldr	x2, [x28, #16]
   47984:	cmp	x0, x2
   47988:	b.ls	47a80 <my_regprop@@Base+0xd7bc>  // b.plast
   4798c:	ldr	x1, [x28, #8]
   47990:	sub	x7, x2, x1
   47994:	cmp	x0, x2
   47998:	csel	x0, x0, x2, ls  // ls = plast
   4799c:	str	x0, [sp, #24]
   479a0:	ldr	x0, [sp, #208]
   479a4:	str	x0, [sp, #16]
   479a8:	str	w6, [sp, #8]
   479ac:	str	x1, [sp]
   479b0:	ldr	x4, [sp, #232]
   479b4:	ldr	w3, [sp, #256]
   479b8:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   479bc:	add	x2, x2, #0xd60
   479c0:	mov	w1, #0x14                  	// #20
   479c4:	mov	x0, x27
   479c8:	bl	5110 <Perl_warner@plt>
   479cc:	ldr	x0, [x28, #72]
   479d0:	cbz	x0, 4711c <my_regprop@@Base+0xce58>
   479d4:	ldr	x1, [x28, #64]
   479d8:	sub	x1, x1, x0
   479dc:	ldr	x0, [x28, #80]
   479e0:	add	x1, x0, x1
   479e4:	ldr	x2, [x28, #8]
   479e8:	sub	x3, x1, x2
   479ec:	ldr	x0, [x28, #136]
   479f0:	cmp	x3, x0
   479f4:	b.le	4711c <my_regprop@@Base+0xce58>
   479f8:	ldr	x0, [x28, #16]
   479fc:	cmp	x0, x1
   47a00:	csel	x0, x0, x1, ls  // ls = plast
   47a04:	cmp	x2, x0
   47a08:	csel	x0, x2, x0, hi  // hi = pmore
   47a0c:	sub	x0, x0, x2
   47a10:	str	x0, [x28, #136]
   47a14:	b	4711c <my_regprop@@Base+0xce58>
   47a18:	ldr	x4, [x28, #64]
   47a1c:	mov	w3, #0x4542                	// #17730
   47a20:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47a24:	add	x2, x2, #0xfb8
   47a28:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47a2c:	add	x1, x1, #0xab8
   47a30:	mov	x0, x27
   47a34:	bl	5420 <Perl_croak@plt>
   47a38:	ldrb	w0, [x0, #13]
   47a3c:	tbz	w0, #1, 47948 <my_regprop@@Base+0xd684>
   47a40:	ldr	x1, [x28, #24]
   47a44:	cbz	x1, 47a54 <my_regprop@@Base+0xd790>
   47a48:	mov	w2, #0xb                   	// #11
   47a4c:	mov	x0, x27
   47a50:	bl	54b0 <Perl_save_pushptr@plt>
   47a54:	ldr	x1, [x28, #160]
   47a58:	cbz	x1, 47a68 <my_regprop@@Base+0xd7a4>
   47a5c:	mov	w2, #0xa                   	// #10
   47a60:	mov	x0, x27
   47a64:	bl	54b0 <Perl_save_pushptr@plt>
   47a68:	ldr	x1, [x28, #168]
   47a6c:	cbz	x1, 47948 <my_regprop@@Base+0xd684>
   47a70:	mov	w2, #0xa                   	// #10
   47a74:	mov	x0, x27
   47a78:	bl	54b0 <Perl_save_pushptr@plt>
   47a7c:	b	47948 <my_regprop@@Base+0xd684>
   47a80:	ldr	x1, [x28, #8]
   47a84:	subs	x4, x0, x1
   47a88:	b.mi	47a9c <my_regprop@@Base+0xd7d8>  // b.first
   47a8c:	mov	x7, x4
   47a90:	sub	x3, x2, x0
   47a94:	str	x3, [sp, #208]
   47a98:	b	47994 <my_regprop@@Base+0xd6d0>
   47a9c:	ldr	x6, [x28, #48]
   47aa0:	ldr	x5, [x28, #56]
   47aa4:	sub	w5, w5, w6
   47aa8:	mov	w3, #0x4542                	// #17730
   47aac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   47ab0:	add	x2, x2, #0xfb8
   47ab4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   47ab8:	add	x1, x1, #0x870
   47abc:	mov	x0, x27
   47ac0:	bl	5420 <Perl_croak@plt>
   47ac4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47ac8:	add	x3, x3, #0xc10
   47acc:	add	x3, x3, #0x870
   47ad0:	mov	w2, #0x4578                	// #17784
   47ad4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47ad8:	add	x1, x1, #0xfb8
   47adc:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   47ae0:	add	x0, x0, #0x6d8
   47ae4:	bl	58e0 <__assert_fail@plt>
   47ae8:	mov	x1, x28
   47aec:	mov	x0, x27
   47af0:	bl	29a90 <my_regexec@@Base+0x659c>
   47af4:	b	442f8 <my_regprop@@Base+0xa034>
   47af8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47afc:	add	x3, x3, #0xc10
   47b00:	add	x3, x3, #0x870
   47b04:	mov	w2, #0x458d                	// #17805
   47b08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47b0c:	add	x1, x1, #0xfb8
   47b10:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   47b14:	add	x0, x0, #0xdd0
   47b18:	bl	58e0 <__assert_fail@plt>
   47b1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47b20:	add	x3, x3, #0xc10
   47b24:	add	x3, x3, #0x870
   47b28:	mov	w2, #0x458f                	// #17807
   47b2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47b30:	add	x1, x1, #0xfb8
   47b34:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   47b38:	add	x0, x0, #0xde0
   47b3c:	bl	58e0 <__assert_fail@plt>
   47b40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47b44:	add	x3, x3, #0xc10
   47b48:	add	x3, x3, #0x870
   47b4c:	mov	w2, #0x4599                	// #17817
   47b50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47b54:	add	x1, x1, #0xfb8
   47b58:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   47b5c:	add	x0, x0, #0xe10
   47b60:	bl	58e0 <__assert_fail@plt>
   47b64:	mov	w4, #0x2                   	// #2
   47b68:	mov	x3, #0x1                   	// #1
   47b6c:	mov	x2, x25
   47b70:	mov	x1, x20
   47b74:	mov	x0, x27
   47b78:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   47b7c:	b	47c08 <my_regprop@@Base+0xd944>
   47b80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47b84:	add	x3, x3, #0xc10
   47b88:	add	x3, x3, #0x870
   47b8c:	mov	w2, #0x45ac                	// #17836
   47b90:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47b94:	add	x1, x1, #0xfb8
   47b98:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47b9c:	add	x0, x0, #0xd10
   47ba0:	bl	58e0 <__assert_fail@plt>
   47ba4:	and	w1, w0, #0xff
   47ba8:	sub	w1, w1, #0x9
   47bac:	cmp	w1, #0x1
   47bb0:	b.hi	47c24 <my_regprop@@Base+0xd960>  // b.pmore
   47bb4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47bb8:	add	x3, x3, #0xc10
   47bbc:	add	x3, x3, #0x870
   47bc0:	mov	w2, #0x45ac                	// #17836
   47bc4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47bc8:	add	x1, x1, #0xfb8
   47bcc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47bd0:	add	x0, x0, #0xd40
   47bd4:	bl	58e0 <__assert_fail@plt>
   47bd8:	ldr	x2, [x19, #16]
   47bdc:	mov	x1, x20
   47be0:	mov	x0, x27
   47be4:	bl	57f0 <Perl_sv_catpv@plt>
   47be8:	mov	w26, w28
   47bec:	ldr	x1, [x21]
   47bf0:	mov	x0, x27
   47bf4:	bl	5510 <Perl_av_pop@plt>
   47bf8:	mov	x19, x0
   47bfc:	cmp	x0, x22
   47c00:	b.eq	47c60 <my_regprop@@Base+0xd99c>  // b.none
   47c04:	cbz	w26, 47b64 <my_regprop@@Base+0xd8a0>
   47c08:	ldr	w0, [x19, #12]
   47c0c:	and	w1, w0, #0xf
   47c10:	ldrb	w1, [x23, w1, uxtw]
   47c14:	cbz	w1, 47b80 <my_regprop@@Base+0xd8bc>
   47c18:	and	w1, w0, #0xc000
   47c1c:	cmp	w1, #0x8, lsl #12
   47c20:	b.eq	47ba4 <my_regprop@@Base+0xd8e0>  // b.none
   47c24:	and	w0, w0, #0xff
   47c28:	cmp	w0, #0xf
   47c2c:	b.ne	47bd8 <my_regprop@@Base+0xd914>  // b.any
   47c30:	ldr	x0, [x19]
   47c34:	ldrb	w0, [x0, #129]
   47c38:	tbnz	w0, #6, 47bd8 <my_regprop@@Base+0xd914>
   47c3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47c40:	add	x3, x3, #0xc10
   47c44:	add	x3, x3, #0x870
   47c48:	mov	w2, #0x45ac                	// #17836
   47c4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47c50:	add	x1, x1, #0xfb8
   47c54:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47c58:	add	x0, x0, #0xd58
   47c5c:	bl	58e0 <__assert_fail@plt>
   47c60:	sub	x24, x24, #0x1
   47c64:	ldr	x0, [sp, #152]
   47c68:	cmp	x24, x0
   47c6c:	b.eq	47ca8 <my_regprop@@Base+0xd9e4>  // b.none
   47c70:	mov	x2, x24
   47c74:	ldr	x1, [sp, #144]
   47c78:	mov	x0, x27
   47c7c:	bl	5840 <Perl_av_exists@plt>
   47c80:	and	w0, w0, #0xff
   47c84:	cbz	w0, 47c60 <my_regprop@@Base+0xd99c>
   47c88:	mov	w3, #0x0                   	// #0
   47c8c:	mov	x2, x24
   47c90:	ldr	x1, [sp, #144]
   47c94:	mov	x0, x27
   47c98:	bl	56f0 <Perl_av_fetch@plt>
   47c9c:	mov	x21, x0
   47ca0:	add	x22, x27, #0x150
   47ca4:	b	47bec <my_regprop@@Base+0xd928>
   47ca8:	ldr	x28, [sp, #208]
   47cac:	ldr	x0, [sp, #176]
   47cb0:	cbz	x0, 47d48 <my_regprop@@Base+0xda84>
   47cb4:	mov	w4, #0x2                   	// #2
   47cb8:	mov	x3, #0x2                   	// #2
   47cbc:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   47cc0:	add	x2, x2, #0xe58
   47cc4:	mov	x1, x20
   47cc8:	mov	x0, x27
   47ccc:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   47cd0:	ldr	w0, [x20, #12]
   47cd4:	and	w2, w0, #0xf
   47cd8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47cdc:	ldr	x1, [x1, #3888]
   47ce0:	ldrb	w1, [x1, w2, uxtw]
   47ce4:	cbz	w1, 47dbc <my_regprop@@Base+0xdaf8>
   47ce8:	and	w1, w0, #0xc000
   47cec:	cmp	w1, #0x8, lsl #12
   47cf0:	b.eq	47de0 <my_regprop@@Base+0xdb1c>  // b.none
   47cf4:	and	w0, w0, #0xff
   47cf8:	cmp	w0, #0xf
   47cfc:	b.ne	47d0c <my_regprop@@Base+0xda48>  // b.any
   47d00:	ldr	x0, [x20]
   47d04:	ldrb	w0, [x0, #129]
   47d08:	tbz	w0, #6, 47e14 <my_regprop@@Base+0xdb50>
   47d0c:	ldr	x0, [x20]
   47d10:	ldr	x0, [x0, #16]
   47d14:	str	x0, [sp, #176]
   47d18:	ldr	x3, [x28, #64]
   47d1c:	mov	w4, #0x2                   	// #2
   47d20:	ldr	x0, [sp, #248]
   47d24:	sub	x3, x3, x0
   47d28:	mov	x2, x0
   47d2c:	mov	x1, x20
   47d30:	mov	x0, x27
   47d34:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   47d38:	ldr	x1, [x28, #64]
   47d3c:	ldr	x0, [x28, #56]
   47d40:	cmp	x1, x0
   47d44:	b.cc	47e38 <my_regprop@@Base+0xdb74>  // b.lo, b.ul, b.last
   47d48:	mov	w4, #0x2                   	// #2
   47d4c:	mov	x3, #0x1                   	// #1
   47d50:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   47d54:	add	x2, x2, #0x868
   47d58:	mov	x1, x20
   47d5c:	mov	x0, x27
   47d60:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   47d64:	ldr	x0, [sp, #248]
   47d68:	str	x0, [x28, #80]
   47d6c:	ldr	w0, [x20, #12]
   47d70:	and	w1, w0, #0x3ffc00
   47d74:	and	w1, w1, #0xffe007ff
   47d78:	cmp	w1, #0x400
   47d7c:	b.ne	4803c <my_regprop@@Base+0xdd78>  // b.any
   47d80:	and	w2, w0, #0xf
   47d84:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   47d88:	ldr	x1, [x1, #3888]
   47d8c:	ldrb	w1, [x1, w2, uxtw]
   47d90:	cbz	w1, 47e58 <my_regprop@@Base+0xdb94>
   47d94:	and	w1, w0, #0xc000
   47d98:	cmp	w1, #0x8, lsl #12
   47d9c:	b.eq	47e7c <my_regprop@@Base+0xdbb8>  // b.none
   47da0:	and	w0, w0, #0xff
   47da4:	cmp	w0, #0xf
   47da8:	b.eq	47ef8 <my_regprop@@Base+0xdc34>  // b.none
   47dac:	ldr	x0, [x20]
   47db0:	ldr	x0, [x0, #16]
   47db4:	str	x0, [sp, #464]
   47db8:	b	47f18 <my_regprop@@Base+0xdc54>
   47dbc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47dc0:	add	x3, x3, #0xc10
   47dc4:	add	x3, x3, #0x870
   47dc8:	mov	w2, #0x45b5                	// #17845
   47dcc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47dd0:	add	x1, x1, #0xfb8
   47dd4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47dd8:	add	x0, x0, #0xe40
   47ddc:	bl	58e0 <__assert_fail@plt>
   47de0:	and	w1, w0, #0xff
   47de4:	sub	w1, w1, #0x9
   47de8:	cmp	w1, #0x1
   47dec:	b.hi	47cf4 <my_regprop@@Base+0xda30>  // b.pmore
   47df0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47df4:	add	x3, x3, #0xc10
   47df8:	add	x3, x3, #0x870
   47dfc:	mov	w2, #0x45b5                	// #17845
   47e00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47e04:	add	x1, x1, #0xfb8
   47e08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47e0c:	add	x0, x0, #0xe70
   47e10:	bl	58e0 <__assert_fail@plt>
   47e14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47e18:	add	x3, x3, #0xc10
   47e1c:	add	x3, x3, #0x870
   47e20:	mov	w2, #0x45b5                	// #17845
   47e24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47e28:	add	x1, x1, #0xfb8
   47e2c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47e30:	add	x0, x0, #0xe88
   47e34:	bl	58e0 <__assert_fail@plt>
   47e38:	mov	w4, #0x2                   	// #2
   47e3c:	mov	x3, #0x1                   	// #1
   47e40:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   47e44:	add	x2, x2, #0x538
   47e48:	mov	x1, x20
   47e4c:	mov	x0, x27
   47e50:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   47e54:	b	47d48 <my_regprop@@Base+0xda84>
   47e58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47e5c:	add	x3, x3, #0xc10
   47e60:	add	x3, x3, #0x870
   47e64:	mov	w2, #0x45cd                	// #17869
   47e68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47e6c:	add	x1, x1, #0xfb8
   47e70:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47e74:	add	x0, x0, #0xe40
   47e78:	bl	58e0 <__assert_fail@plt>
   47e7c:	and	w1, w0, #0xff
   47e80:	sub	w1, w1, #0x9
   47e84:	cmp	w1, #0x1
   47e88:	b.ls	47ed4 <my_regprop@@Base+0xdc10>  // b.plast
   47e8c:	and	w0, w0, #0xff
   47e90:	cmp	w0, #0xf
   47e94:	b.eq	47ef8 <my_regprop@@Base+0xdc34>  // b.none
   47e98:	ldr	x1, [x20]
   47e9c:	ldr	x1, [x1, #16]
   47ea0:	str	x1, [sp, #464]
   47ea4:	sub	w0, w0, #0x9
   47ea8:	cmp	w0, #0x1
   47eac:	b.hi	47f18 <my_regprop@@Base+0xdc54>  // b.pmore
   47eb0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47eb4:	add	x3, x3, #0xc10
   47eb8:	add	x3, x3, #0x870
   47ebc:	mov	w2, #0x45cd                	// #17869
   47ec0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47ec4:	add	x1, x1, #0xfb8
   47ec8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47ecc:	add	x0, x0, #0xd40
   47ed0:	bl	58e0 <__assert_fail@plt>
   47ed4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47ed8:	add	x3, x3, #0xc10
   47edc:	add	x3, x3, #0x870
   47ee0:	mov	w2, #0x45cd                	// #17869
   47ee4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   47ee8:	add	x1, x1, #0xfb8
   47eec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   47ef0:	add	x0, x0, #0xe70
   47ef4:	bl	58e0 <__assert_fail@plt>
   47ef8:	ldr	x0, [x20]
   47efc:	ldrb	w1, [x0, #129]
   47f00:	tbz	w1, #6, 47ff4 <my_regprop@@Base+0xdd30>
   47f04:	ldr	x0, [x0, #16]
   47f08:	str	x0, [sp, #464]
   47f0c:	ldr	x0, [x20]
   47f10:	ldrb	w0, [x0, #129]
   47f14:	tbz	w0, #6, 48018 <my_regprop@@Base+0xdd54>
   47f18:	ldr	x0, [x20, #16]
   47f1c:	str	x0, [x28, #64]
   47f20:	str	x0, [x28, #48]
   47f24:	ldr	x1, [sp, #176]
   47f28:	add	x1, x0, x1
   47f2c:	str	x1, [x28, #72]
   47f30:	ldr	x1, [sp, #464]
   47f34:	add	x0, x0, x1
   47f38:	str	x0, [x28, #56]
   47f3c:	mov	w2, #0x1                   	// #1
   47f40:	str	w2, [x28, #256]
   47f44:	ldr	w0, [sp, #216]
   47f48:	add	w4, w0, w2
   47f4c:	add	x3, sp, #0x1c8
   47f50:	mov	x1, x28
   47f54:	mov	x0, x27
   47f58:	bl	3c268 <my_regprop@@Base+0x1fa4>
   47f5c:	mov	x19, x0
   47f60:	ldr	w0, [sp, #456]
   47f64:	mov	w1, #0x6f                  	// #111
   47f68:	and	w1, w0, w1
   47f6c:	ldr	x2, [sp, #160]
   47f70:	ldr	w0, [x2]
   47f74:	orr	w0, w0, w1
   47f78:	str	w0, [x2]
   47f7c:	ldr	x0, [sp, #192]
   47f80:	str	x0, [x28, #64]
   47f84:	ldr	x0, [sp, #200]
   47f88:	str	x0, [x28, #80]
   47f8c:	str	x0, [x28, #72]
   47f90:	str	x0, [x28, #48]
   47f94:	ldr	x0, [sp, #184]
   47f98:	str	x0, [x28, #56]
   47f9c:	str	wzr, [x28, #256]
   47fa0:	ldr	x0, [sp, #144]
   47fa4:	ldr	w2, [x0, #8]
   47fa8:	cmp	w2, #0x1
   47fac:	b.ls	48054 <my_regprop@@Base+0xdd90>  // b.plast
   47fb0:	sub	w2, w2, #0x1
   47fb4:	str	w2, [x0, #8]
   47fb8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   47fbc:	ldr	x0, [x0, #3920]
   47fc0:	ldr	x1, [sp, #568]
   47fc4:	ldr	x0, [x0]
   47fc8:	eor	x0, x1, x0
   47fcc:	cbnz	x0, 4a208 <my_regprop@@Base+0xff44>
   47fd0:	mov	x0, x19
   47fd4:	ldp	x19, x20, [sp, #64]
   47fd8:	ldp	x21, x22, [sp, #80]
   47fdc:	ldp	x23, x24, [sp, #96]
   47fe0:	ldp	x25, x26, [sp, #112]
   47fe4:	ldp	x27, x28, [sp, #128]
   47fe8:	ldp	x29, x30, [sp, #48]
   47fec:	add	sp, sp, #0x240
   47ff0:	ret
   47ff4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   47ff8:	add	x3, x3, #0xc10
   47ffc:	add	x3, x3, #0x870
   48000:	mov	w2, #0x45cd                	// #17869
   48004:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48008:	add	x1, x1, #0xfb8
   4800c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   48010:	add	x0, x0, #0xe88
   48014:	bl	58e0 <__assert_fail@plt>
   48018:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4801c:	add	x3, x3, #0xc10
   48020:	add	x3, x3, #0x870
   48024:	mov	w2, #0x45cd                	// #17869
   48028:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4802c:	add	x1, x1, #0xfb8
   48030:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   48034:	add	x0, x0, #0xd58
   48038:	bl	58e0 <__assert_fail@plt>
   4803c:	mov	w3, #0x2                   	// #2
   48040:	add	x2, sp, #0x1d0
   48044:	mov	x1, x20
   48048:	mov	x0, x27
   4804c:	bl	5200 <Perl_sv_2pv_flags@plt>
   48050:	b	47f1c <my_regprop@@Base+0xdc58>
   48054:	ldr	x1, [sp, #144]
   48058:	mov	x0, x27
   4805c:	bl	5860 <Perl_sv_free2@plt>
   48060:	b	47fb8 <my_regprop@@Base+0xdcf4>
   48064:	ldr	x2, [sp, #224]
   48068:	cbz	x2, 48390 <my_regprop@@Base+0xe0cc>
   4806c:	ldr	w0, [x28]
   48070:	tbz	w0, #2, 48360 <my_regprop@@Base+0xe09c>
   48074:	str	xzr, [sp, #448]
   48078:	ubfx	x0, x0, #7, #3
   4807c:	cmp	w0, #0x1
   48080:	add	x23, sp, #0x190
   48084:	add	x0, sp, #0x188
   48088:	csel	x23, x23, x0, eq  // eq = none
   4808c:	add	x4, sp, #0x1c0
   48090:	mov	w3, #0x0                   	// #0
   48094:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   48098:	ldr	x0, [x0, #3808]
   4809c:	ldr	x1, [x0]
   480a0:	mov	x0, x27
   480a4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   480a8:	ldr	x0, [sp, #448]
   480ac:	cbz	x0, 48118 <my_regprop@@Base+0xde54>
   480b0:	ldrb	w1, [x0, #12]
   480b4:	cmp	w1, #0x4
   480b8:	b.ne	4813c <my_regprop@@Base+0xde78>  // b.any
   480bc:	ldr	x0, [x0]
   480c0:	str	xzr, [x0, #40]
   480c4:	add	x0, sp, #0x1b8
   480c8:	str	x0, [sp, #176]
   480cc:	add	x0, sp, #0x1c8
   480d0:	add	x1, sp, #0x228
   480d4:	str	x1, [sp, #144]
   480d8:	str	x25, [sp, #208]
   480dc:	str	x24, [sp, #216]
   480e0:	mov	x24, x0
   480e4:	ldr	x2, [sp, #176]
   480e8:	add	x1, sp, #0x1b0
   480ec:	ldr	x0, [sp, #448]
   480f0:	bl	2da40 <my_regexec@@Base+0xa54c>
   480f4:	and	w0, w0, #0xff
   480f8:	cbz	w0, 48340 <my_regprop@@Base+0xe07c>
   480fc:	ldr	x20, [sp, #432]
   48100:	ldr	x0, [sp, #440]
   48104:	cmp	x20, x0
   48108:	b.hi	480e4 <my_regprop@@Base+0xde20>  // b.pmore
   4810c:	add	x26, sp, #0x1d0
   48110:	add	x25, sp, #0x14c
   48114:	b	481c0 <my_regprop@@Base+0xdefc>
   48118:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4811c:	add	x3, x3, #0xc10
   48120:	add	x3, x3, #0x3d8
   48124:	mov	w2, #0x283d                	// #10301
   48128:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4812c:	add	x1, x1, #0xfb8
   48130:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   48134:	add	x0, x0, #0x568
   48138:	bl	58e0 <__assert_fail@plt>
   4813c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48140:	add	x3, x3, #0xc10
   48144:	add	x3, x3, #0x390
   48148:	mov	w2, #0x2835                	// #10293
   4814c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48150:	add	x1, x1, #0xfb8
   48154:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48158:	add	x0, x0, #0xfc8
   4815c:	bl	58e0 <__assert_fail@plt>
   48160:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   48164:	ldr	x0, [x0, #3752]
   48168:	ldrb	w2, [x20, x0]
   4816c:	mov	x3, x2
   48170:	ldr	x1, [x23]
   48174:	mov	x0, x27
   48178:	bl	5450 <Perl__add_range_to_invlist@plt>
   4817c:	str	x0, [x23]
   48180:	tbz	w21, #19, 481b0 <my_regprop@@Base+0xdeec>
   48184:	cmp	x20, #0x7f
   48188:	b.hi	4819c <my_regprop@@Base+0xded8>  // b.pmore
   4818c:	ldr	w0, [x28]
   48190:	ubfx	x0, x0, #7, #3
   48194:	cmp	w0, #0x4
   48198:	b.eq	481b0 <my_regprop@@Base+0xdeec>  // b.none
   4819c:	mov	x3, x23
   481a0:	mov	w2, w19
   481a4:	mov	x1, x28
   481a8:	mov	x0, x27
   481ac:	bl	29390 <my_regexec@@Base+0x5e9c>
   481b0:	add	x20, x20, #0x1
   481b4:	ldr	x0, [sp, #440]
   481b8:	cmp	x0, x20
   481bc:	b.cc	480e4 <my_regprop@@Base+0xde20>  // b.lo, b.ul, b.last
   481c0:	cmp	x20, #0xff
   481c4:	b.hi	48234 <my_regprop@@Base+0xdf70>  // b.pmore
   481c8:	and	w19, w20, #0xff
   481cc:	and	x1, x20, #0xff
   481d0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   481d4:	ldr	x0, [x0, #3880]
   481d8:	ldr	w21, [x0, x1, lsl #2]
   481dc:	tbz	w21, #22, 48180 <my_regprop@@Base+0xdebc>
   481e0:	ldr	w0, [x28]
   481e4:	ubfx	x0, x0, #7, #3
   481e8:	cmp	x20, #0xb5
   481ec:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   481f0:	b.eq	48180 <my_regprop@@Base+0xdebc>  // b.none
   481f4:	cmp	x20, #0x7f
   481f8:	ccmp	w0, #0x0, #0x0, hi  // hi = pmore
   481fc:	b.ne	48160 <my_regprop@@Base+0xde9c>  // b.any
   48200:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   48204:	ldr	x0, [x0, #3752]
   48208:	ldrb	w2, [x20, x0]
   4820c:	cmp	x2, x20
   48210:	b.ne	4821c <my_regprop@@Base+0xdf58>  // b.any
   48214:	tbnz	w21, #19, 4819c <my_regprop@@Base+0xded8>
   48218:	b	481b0 <my_regprop@@Base+0xdeec>
   4821c:	mov	x3, x2
   48220:	ldr	x1, [sp, #384]
   48224:	mov	x0, x27
   48228:	bl	5450 <Perl__add_range_to_invlist@plt>
   4822c:	str	x0, [sp, #384]
   48230:	b	48214 <my_regprop@@Base+0xdf50>
   48234:	ldr	w0, [x28]
   48238:	ubfx	x0, x0, #7, #3
   4823c:	cmp	w0, #0x4
   48240:	cset	w4, eq  // eq = none
   48244:	ubfiz	w4, w4, #2, #6
   48248:	mov	x3, x24
   4824c:	ldr	x2, [sp, #144]
   48250:	mov	x1, x20
   48254:	mov	x0, x27
   48258:	bl	5320 <Perl__to_uni_fold_flags@plt>
   4825c:	mov	x21, x0
   48260:	mov	x3, x26
   48264:	mov	x2, x25
   48268:	mov	x1, x0
   4826c:	mov	x0, x27
   48270:	bl	5a00 <Perl__inverse_folds@plt>
   48274:	mov	x22, x0
   48278:	mov	x2, x21
   4827c:	mov	w19, #0x0                   	// #0
   48280:	b	48294 <my_regprop@@Base+0xdfd0>
   48284:	sub	w19, w19, #0x1
   48288:	ldr	x1, [sp, #464]
   4828c:	ldr	w2, [x1, x19, lsl #2]
   48290:	mov	w19, w0
   48294:	ldr	w0, [x28]
   48298:	lsr	w1, w0, #7
   4829c:	ubfx	x0, x0, #7, #3
   482a0:	cmp	w0, #0x4
   482a4:	b.eq	48304 <my_regprop@@Base+0xe040>  // b.none
   482a8:	cmp	x2, #0xff
   482ac:	ccmp	w0, #0x1, #0x0, ls  // ls = plast
   482b0:	b.eq	48310 <my_regprop@@Base+0xe04c>  // b.none
   482b4:	sub	x0, x2, #0x80
   482b8:	cmp	x0, #0x7f
   482bc:	b.hi	482c8 <my_regprop@@Base+0xe004>  // b.pmore
   482c0:	tst	w1, #0x6
   482c4:	b.eq	48328 <my_regprop@@Base+0xe064>  // b.none
   482c8:	mov	x3, x2
   482cc:	ldr	x1, [sp, #392]
   482d0:	mov	x0, x27
   482d4:	bl	5450 <Perl__add_range_to_invlist@plt>
   482d8:	str	x0, [sp, #392]
   482dc:	add	w0, w19, #0x1
   482e0:	add	w1, w19, #0x1
   482e4:	cmp	x1, x22
   482e8:	b.hi	481b0 <my_regprop@@Base+0xdeec>  // b.pmore
   482ec:	mov	x2, x21
   482f0:	cbz	w0, 48290 <my_regprop@@Base+0xdfcc>
   482f4:	cmp	w0, #0x1
   482f8:	b.ne	48284 <my_regprop@@Base+0xdfc0>  // b.any
   482fc:	ldr	w2, [sp, #332]
   48300:	b	48290 <my_regprop@@Base+0xdfcc>
   48304:	cmp	x2, #0x7f
   48308:	b.hi	482b4 <my_regprop@@Base+0xdff0>  // b.pmore
   4830c:	b	482dc <my_regprop@@Base+0xe018>
   48310:	mov	x3, x2
   48314:	ldr	x1, [x23]
   48318:	mov	x0, x27
   4831c:	bl	5450 <Perl__add_range_to_invlist@plt>
   48320:	str	x0, [x23]
   48324:	b	482dc <my_regprop@@Base+0xe018>
   48328:	mov	x3, x2
   4832c:	ldr	x1, [sp, #384]
   48330:	mov	x0, x27
   48334:	bl	5450 <Perl__add_range_to_invlist@plt>
   48338:	str	x0, [sp, #384]
   4833c:	b	482dc <my_regprop@@Base+0xe018>
   48340:	ldr	x25, [sp, #208]
   48344:	ldr	x24, [sp, #216]
   48348:	ldr	x1, [sp, #448]
   4834c:	ldr	w2, [x1, #8]
   48350:	cmp	w2, #0x1
   48354:	b.ls	485b0 <my_regprop@@Base+0xe2ec>  // b.plast
   48358:	sub	w2, w2, #0x1
   4835c:	str	w2, [x1, #8]
   48360:	add	x4, sp, #0x188
   48364:	mov	w3, #0x0                   	// #0
   48368:	ldr	x19, [sp, #224]
   4836c:	mov	x2, x19
   48370:	ldr	x1, [sp, #392]
   48374:	mov	x0, x27
   48378:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4837c:	ldr	w2, [x19, #8]
   48380:	cmp	w2, #0x1
   48384:	b.ls	485bc <my_regprop@@Base+0xe2f8>  // b.plast
   48388:	sub	w2, w2, #0x1
   4838c:	str	w2, [x19, #8]
   48390:	ldr	x2, [sp, #376]
   48394:	cbz	x2, 483c8 <my_regprop@@Base+0xe104>
   48398:	ldr	x1, [sp, #392]
   4839c:	cbz	x1, 485d8 <my_regprop@@Base+0xe314>
   483a0:	add	x4, sp, #0x188
   483a4:	mov	w3, #0x0                   	// #0
   483a8:	mov	x0, x27
   483ac:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   483b0:	ldr	x1, [sp, #376]
   483b4:	ldr	w2, [x1, #8]
   483b8:	cmp	w2, #0x1
   483bc:	b.ls	485cc <my_regprop@@Base+0xe308>  // b.plast
   483c0:	sub	w2, w2, #0x1
   483c4:	str	w2, [x1, #8]
   483c8:	ldr	x1, [sp, #360]
   483cc:	cbz	x1, 485e0 <my_regprop@@Base+0xe31c>
   483d0:	ldr	w0, [x28]
   483d4:	tst	x0, #0x380
   483d8:	b.ne	48610 <my_regprop@@Base+0xe34c>  // b.any
   483dc:	ldr	x0, [sp, #368]
   483e0:	cbz	x0, 48744 <my_regprop@@Base+0xe480>
   483e4:	mov	x2, #0x0                   	// #0
   483e8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   483ec:	ldr	x0, [x0, #3960]
   483f0:	ldr	x1, [x0]
   483f4:	mov	x0, x27
   483f8:	bl	5500 <Perl_invlist_clone@plt>
   483fc:	str	x0, [sp, #464]
   48400:	ldr	x1, [sp, #392]
   48404:	cbz	x1, 486b4 <my_regprop@@Base+0xe3f0>
   48408:	add	x4, sp, #0x188
   4840c:	mov	w3, #0x0                   	// #0
   48410:	ldr	x2, [sp, #368]
   48414:	mov	x0, x27
   48418:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4841c:	ldr	x1, [sp, #368]
   48420:	ldr	w2, [x1, #8]
   48424:	cmp	w2, #0x1
   48428:	b.ls	486a8 <my_regprop@@Base+0xe3e4>  // b.plast
   4842c:	sub	w2, w2, #0x1
   48430:	str	w2, [x1, #8]
   48434:	str	xzr, [sp, #368]
   48438:	add	x4, sp, #0x188
   4843c:	mov	w3, #0x0                   	// #0
   48440:	ldr	x2, [sp, #392]
   48444:	ldr	x1, [sp, #360]
   48448:	mov	x0, x27
   4844c:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   48450:	ldr	x2, [sp, #384]
   48454:	cbz	x2, 48488 <my_regprop@@Base+0xe1c4>
   48458:	add	x4, sp, #0x188
   4845c:	mov	w3, #0x0                   	// #0
   48460:	ldr	x1, [sp, #392]
   48464:	mov	x0, x27
   48468:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4846c:	ldr	x1, [sp, #384]
   48470:	ldr	w2, [x1, #8]
   48474:	cmp	w2, #0x1
   48478:	b.ls	486c0 <my_regprop@@Base+0xe3fc>  // b.plast
   4847c:	sub	w2, w2, #0x1
   48480:	str	w2, [x1, #8]
   48484:	str	xzr, [sp, #384]
   48488:	add	x4, sp, #0x1d0
   4848c:	mov	w3, #0x1                   	// #1
   48490:	ldr	x2, [sp, #392]
   48494:	ldr	x1, [sp, #464]
   48498:	mov	x0, x27
   4849c:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   484a0:	ldr	x1, [sp, #464]
   484a4:	cbz	x1, 486cc <my_regprop@@Base+0xe408>
   484a8:	ldr	w0, [x1, #12]
   484ac:	and	w2, w0, #0xff
   484b0:	cmp	w2, #0x4
   484b4:	b.ne	486f0 <my_regprop@@Base+0xe42c>  // b.any
   484b8:	and	w0, w0, #0xf
   484bc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   484c0:	ldr	x2, [x2, #3888]
   484c4:	ldrb	w0, [x2, w0, uxtw]
   484c8:	cbz	w0, 48714 <my_regprop@@Base+0xe450>
   484cc:	ldr	x2, [x1]
   484d0:	ldr	x0, [x2, #16]
   484d4:	cbz	x0, 484f4 <my_regprop@@Base+0xe230>
   484d8:	ldrb	w2, [x2, #48]
   484dc:	cmp	x2, x0, lsr #3
   484e0:	b.eq	484f4 <my_regprop@@Base+0xe230>  // b.none
   484e4:	ldr	w0, [sp, #184]
   484e8:	orr	w0, w0, #0xffffff80
   484ec:	and	w0, w0, #0xff
   484f0:	str	w0, [sp, #184]
   484f4:	ldr	w2, [x1, #8]
   484f8:	cmp	w2, #0x1
   484fc:	b.ls	48738 <my_regprop@@Base+0xe474>  // b.plast
   48500:	sub	w2, w2, #0x1
   48504:	str	w2, [x1, #8]
   48508:	ldr	x20, [sp, #352]
   4850c:	cbz	x20, 4856c <my_regprop@@Base+0xe2a8>
   48510:	ldr	x19, [sp, #392]
   48514:	cbz	x19, 48930 <my_regprop@@Base+0xe66c>
   48518:	ldr	w0, [sp, #200]
   4851c:	cbnz	w0, 488fc <my_regprop@@Base+0xe638>
   48520:	add	x4, sp, #0x188
   48524:	mov	w3, #0x0                   	// #0
   48528:	mov	x2, x19
   4852c:	mov	x1, x20
   48530:	mov	x0, x27
   48534:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   48538:	ldr	x1, [sp, #352]
   4853c:	ldr	w2, [x1, #8]
   48540:	cmp	w2, #0x1
   48544:	b.ls	48924 <my_regprop@@Base+0xe660>  // b.plast
   48548:	sub	w2, w2, #0x1
   4854c:	str	w2, [x1, #8]
   48550:	ldr	w0, [sp, #200]
   48554:	cbz	w0, 4856c <my_regprop@@Base+0xe2a8>
   48558:	ldr	w0, [sp, #184]
   4855c:	orr	w0, w0, #0xffffff80
   48560:	and	w0, w0, #0xff
   48564:	str	w0, [sp, #184]
   48568:	str	wzr, [sp, #152]
   4856c:	ldr	w1, [x28]
   48570:	ubfx	x0, x1, #7, #3
   48574:	cmp	w0, #0x1
   48578:	b.eq	48938 <my_regprop@@Base+0xe674>  // b.none
   4857c:	cbnz	w0, 48b98 <my_regprop@@Base+0xe8d4>
   48580:	ldr	x0, [sp, #384]
   48584:	cbz	x0, 48b90 <my_regprop@@Base+0xe8cc>
   48588:	mov	w0, #0x1                   	// #1
   4858c:	strb	w0, [x28, #384]
   48590:	ldr	w0, [sp, #192]
   48594:	orr	w0, w0, #0x2
   48598:	str	w0, [sp, #192]
   4859c:	cbz	x24, 48bc4 <my_regprop@@Base+0xe900>
   485a0:	ldr	x0, [sp, #392]
   485a4:	str	x0, [x24]
   485a8:	ldr	x19, [x28, #104]
   485ac:	b	47fb8 <my_regprop@@Base+0xdcf4>
   485b0:	mov	x0, x27
   485b4:	bl	5860 <Perl_sv_free2@plt>
   485b8:	b	48360 <my_regprop@@Base+0xe09c>
   485bc:	ldr	x1, [sp, #224]
   485c0:	mov	x0, x27
   485c4:	bl	5860 <Perl_sv_free2@plt>
   485c8:	b	48390 <my_regprop@@Base+0xe0cc>
   485cc:	mov	x0, x27
   485d0:	bl	5860 <Perl_sv_free2@plt>
   485d4:	b	483c8 <my_regprop@@Base+0xe104>
   485d8:	str	x2, [sp, #392]
   485dc:	b	483c8 <my_regprop@@Base+0xe104>
   485e0:	ldr	x0, [sp, #368]
   485e4:	cbz	x0, 48508 <my_regprop@@Base+0xe244>
   485e8:	ldr	w0, [x28]
   485ec:	tst	x0, #0x380
   485f0:	b.eq	483e4 <my_regprop@@Base+0xe120>  // b.none
   485f4:	ldr	x19, [sp, #368]
   485f8:	ldr	x1, [sp, #392]
   485fc:	cbnz	x1, 4866c <my_regprop@@Base+0xe3a8>
   48600:	str	x19, [sp, #392]
   48604:	ldr	x20, [sp, #352]
   48608:	cbnz	x20, 48518 <my_regprop@@Base+0xe254>
   4860c:	b	4856c <my_regprop@@Base+0xe2a8>
   48610:	ldr	x0, [sp, #392]
   48614:	cbz	x0, 48660 <my_regprop@@Base+0xe39c>
   48618:	add	x4, sp, #0x188
   4861c:	mov	w3, #0x0                   	// #0
   48620:	mov	x2, x1
   48624:	mov	x1, x0
   48628:	mov	x0, x27
   4862c:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   48630:	ldr	x1, [sp, #360]
   48634:	ldr	w2, [x1, #8]
   48638:	cmp	w2, #0x1
   4863c:	b.ls	48654 <my_regprop@@Base+0xe390>  // b.plast
   48640:	sub	w2, w2, #0x1
   48644:	str	w2, [x1, #8]
   48648:	ldr	x19, [sp, #368]
   4864c:	cbz	x19, 48508 <my_regprop@@Base+0xe244>
   48650:	b	485f8 <my_regprop@@Base+0xe334>
   48654:	mov	x0, x27
   48658:	bl	5860 <Perl_sv_free2@plt>
   4865c:	b	48648 <my_regprop@@Base+0xe384>
   48660:	str	x1, [sp, #392]
   48664:	ldr	x19, [sp, #368]
   48668:	cbz	x19, 4a1c4 <my_regprop@@Base+0xff00>
   4866c:	add	x4, sp, #0x188
   48670:	mov	w3, #0x0                   	// #0
   48674:	mov	x2, x19
   48678:	mov	x0, x27
   4867c:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   48680:	ldr	x1, [sp, #368]
   48684:	ldr	w2, [x1, #8]
   48688:	cmp	w2, #0x1
   4868c:	b.ls	4869c <my_regprop@@Base+0xe3d8>  // b.plast
   48690:	sub	w2, w2, #0x1
   48694:	str	w2, [x1, #8]
   48698:	b	48508 <my_regprop@@Base+0xe244>
   4869c:	mov	x0, x27
   486a0:	bl	5860 <Perl_sv_free2@plt>
   486a4:	b	48508 <my_regprop@@Base+0xe244>
   486a8:	mov	x0, x27
   486ac:	bl	5860 <Perl_sv_free2@plt>
   486b0:	b	48434 <my_regprop@@Base+0xe170>
   486b4:	ldr	x0, [sp, #368]
   486b8:	str	x0, [sp, #392]
   486bc:	b	48438 <my_regprop@@Base+0xe174>
   486c0:	mov	x0, x27
   486c4:	bl	5860 <Perl_sv_free2@plt>
   486c8:	b	48484 <my_regprop@@Base+0xe1c0>
   486cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   486d0:	add	x3, x3, #0xc10
   486d4:	add	x3, x3, #0x18
   486d8:	mov	w2, #0x2f                  	// #47
   486dc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   486e0:	add	x1, x1, #0x550
   486e4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   486e8:	add	x0, x0, #0x568
   486ec:	bl	58e0 <__assert_fail@plt>
   486f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   486f4:	add	x3, x3, #0xc10
   486f8:	add	x3, x3, #0x18
   486fc:	mov	w2, #0x31                  	// #49
   48700:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   48704:	add	x1, x1, #0x550
   48708:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   4870c:	add	x0, x0, #0xfc8
   48710:	bl	58e0 <__assert_fail@plt>
   48714:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48718:	add	x3, x3, #0xc10
   4871c:	add	x3, x3, #0x18
   48720:	mov	w2, #0x33                  	// #51
   48724:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   48728:	add	x1, x1, #0x550
   4872c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   48730:	add	x0, x0, #0xe40
   48734:	bl	58e0 <__assert_fail@plt>
   48738:	mov	x0, x27
   4873c:	bl	5860 <Perl_sv_free2@plt>
   48740:	b	48508 <my_regprop@@Base+0xe244>
   48744:	str	xzr, [sp, #464]
   48748:	add	x4, sp, #0x1d0
   4874c:	mov	w3, #0x0                   	// #0
   48750:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   48754:	ldr	x0, [x0, #3960]
   48758:	ldr	x2, [x0]
   4875c:	mov	x0, x27
   48760:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   48764:	add	x4, sp, #0x180
   48768:	mov	w3, #0x0                   	// #0
   4876c:	ldr	x2, [sp, #464]
   48770:	ldr	x1, [sp, #384]
   48774:	mov	x0, x27
   48778:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4877c:	add	x4, sp, #0x168
   48780:	mov	w3, #0x1                   	// #1
   48784:	ldr	x2, [sp, #464]
   48788:	ldr	x1, [sp, #360]
   4878c:	mov	x0, x27
   48790:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   48794:	ldr	x1, [sp, #392]
   48798:	cbz	x1, 4886c <my_regprop@@Base+0xe5a8>
   4879c:	add	x4, sp, #0x188
   487a0:	mov	w3, #0x0                   	// #0
   487a4:	ldr	x2, [sp, #360]
   487a8:	mov	x0, x27
   487ac:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   487b0:	ldr	x1, [sp, #360]
   487b4:	ldr	w2, [x1, #8]
   487b8:	cmp	w2, #0x1
   487bc:	b.ls	48860 <my_regprop@@Base+0xe59c>  // b.plast
   487c0:	sub	w2, w2, #0x1
   487c4:	str	w2, [x1, #8]
   487c8:	str	xzr, [sp, #360]
   487cc:	ldr	x1, [sp, #464]
   487d0:	cbz	x1, 487e8 <my_regprop@@Base+0xe524>
   487d4:	ldr	w2, [x1, #8]
   487d8:	cmp	w2, #0x1
   487dc:	b.ls	48878 <my_regprop@@Base+0xe5b4>  // b.plast
   487e0:	sub	w2, w2, #0x1
   487e4:	str	w2, [x1, #8]
   487e8:	add	x4, sp, #0x180
   487ec:	mov	w3, #0x1                   	// #1
   487f0:	ldr	x2, [sp, #392]
   487f4:	ldr	x1, [sp, #384]
   487f8:	mov	x0, x27
   487fc:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   48800:	ldr	x1, [sp, #384]
   48804:	cbz	x1, 48884 <my_regprop@@Base+0xe5c0>
   48808:	ldr	w0, [x1, #12]
   4880c:	and	w2, w0, #0xff
   48810:	cmp	w2, #0x4
   48814:	b.ne	488a8 <my_regprop@@Base+0xe5e4>  // b.any
   48818:	and	w0, w0, #0xf
   4881c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   48820:	ldr	x2, [x2, #3888]
   48824:	ldrb	w0, [x2, w0, uxtw]
   48828:	cbz	w0, 488cc <my_regprop@@Base+0xe608>
   4882c:	ldr	x2, [x1]
   48830:	ldr	x0, [x2, #16]
   48834:	cbz	x0, 48844 <my_regprop@@Base+0xe580>
   48838:	ldrb	w2, [x2, #48]
   4883c:	cmp	x2, x0, lsr #3
   48840:	b.ne	48508 <my_regprop@@Base+0xe244>  // b.any
   48844:	ldr	w2, [x1, #8]
   48848:	cmp	w2, #0x1
   4884c:	b.ls	488f0 <my_regprop@@Base+0xe62c>  // b.plast
   48850:	sub	w2, w2, #0x1
   48854:	str	w2, [x1, #8]
   48858:	str	xzr, [sp, #384]
   4885c:	b	48508 <my_regprop@@Base+0xe244>
   48860:	mov	x0, x27
   48864:	bl	5860 <Perl_sv_free2@plt>
   48868:	b	487c8 <my_regprop@@Base+0xe504>
   4886c:	ldr	x0, [sp, #360]
   48870:	str	x0, [sp, #392]
   48874:	b	487cc <my_regprop@@Base+0xe508>
   48878:	mov	x0, x27
   4887c:	bl	5860 <Perl_sv_free2@plt>
   48880:	b	487e8 <my_regprop@@Base+0xe524>
   48884:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48888:	add	x3, x3, #0xc10
   4888c:	add	x3, x3, #0x18
   48890:	mov	w2, #0x2f                  	// #47
   48894:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   48898:	add	x1, x1, #0x550
   4889c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   488a0:	add	x0, x0, #0x568
   488a4:	bl	58e0 <__assert_fail@plt>
   488a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   488ac:	add	x3, x3, #0xc10
   488b0:	add	x3, x3, #0x18
   488b4:	mov	w2, #0x31                  	// #49
   488b8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   488bc:	add	x1, x1, #0x550
   488c0:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   488c4:	add	x0, x0, #0xfc8
   488c8:	bl	58e0 <__assert_fail@plt>
   488cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   488d0:	add	x3, x3, #0xc10
   488d4:	add	x3, x3, #0x18
   488d8:	mov	w2, #0x33                  	// #51
   488dc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   488e0:	add	x1, x1, #0x550
   488e4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   488e8:	add	x0, x0, #0xe40
   488ec:	bl	58e0 <__assert_fail@plt>
   488f0:	mov	x0, x27
   488f4:	bl	5860 <Perl_sv_free2@plt>
   488f8:	b	48858 <my_regprop@@Base+0xe594>
   488fc:	mov	x0, x19
   48900:	bl	2d92c <my_regexec@@Base+0xa438>
   48904:	mov	w1, #0x10ffff              	// #1114111
   48908:	cmp	x0, x1
   4890c:	cset	w0, hi  // hi = pmore
   48910:	ldr	w1, [sp, #172]
   48914:	cmp	w0, w1
   48918:	cset	w0, eq  // eq = none
   4891c:	str	w0, [sp, #200]
   48920:	b	48520 <my_regprop@@Base+0xe25c>
   48924:	mov	x0, x27
   48928:	bl	5860 <Perl_sv_free2@plt>
   4892c:	b	48550 <my_regprop@@Base+0xe28c>
   48930:	str	x20, [sp, #392]
   48934:	b	48550 <my_regprop@@Base+0xe28c>
   48938:	tbz	w1, #2, 48b98 <my_regprop@@Base+0xe8d4>
   4893c:	ldr	x1, [sp, #400]
   48940:	cbz	x1, 48a44 <my_regprop@@Base+0xe780>
   48944:	ldr	x2, [sp, #392]
   48948:	cbz	x2, 489a0 <my_regprop@@Base+0xe6dc>
   4894c:	add	x4, sp, #0x190
   48950:	mov	w3, #0x1                   	// #1
   48954:	mov	x0, x27
   48958:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4895c:	ldr	x1, [sp, #400]
   48960:	cbz	x1, 489c0 <my_regprop@@Base+0xe6fc>
   48964:	ldr	w0, [x1, #12]
   48968:	and	w2, w0, #0xff
   4896c:	cmp	w2, #0x4
   48970:	b.ne	489e4 <my_regprop@@Base+0xe720>  // b.any
   48974:	and	w0, w0, #0xf
   48978:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4897c:	ldr	x2, [x2, #3888]
   48980:	ldrb	w0, [x2, w0, uxtw]
   48984:	cbz	w0, 48a08 <my_regprop@@Base+0xe744>
   48988:	ldr	x2, [x1]
   4898c:	ldr	x0, [x2, #16]
   48990:	cbz	x0, 48a2c <my_regprop@@Base+0xe768>
   48994:	ldrb	w2, [x2, #48]
   48998:	cmp	x2, x0, lsr #3
   4899c:	b.eq	48a2c <my_regprop@@Base+0xe768>  // b.none
   489a0:	ldr	w0, [sp, #192]
   489a4:	orr	w0, w0, #0x4
   489a8:	str	w0, [sp, #192]
   489ac:	ldr	w0, [sp, #184]
   489b0:	orr	w0, w0, #0xc
   489b4:	and	w0, w0, #0xff
   489b8:	str	w0, [sp, #184]
   489bc:	b	4859c <my_regprop@@Base+0xe2d8>
   489c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   489c4:	add	x3, x3, #0xc10
   489c8:	add	x3, x3, #0x18
   489cc:	mov	w2, #0x2f                  	// #47
   489d0:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   489d4:	add	x1, x1, #0x550
   489d8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   489dc:	add	x0, x0, #0x568
   489e0:	bl	58e0 <__assert_fail@plt>
   489e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   489e8:	add	x3, x3, #0xc10
   489ec:	add	x3, x3, #0x18
   489f0:	mov	w2, #0x31                  	// #49
   489f4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   489f8:	add	x1, x1, #0x550
   489fc:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48a00:	add	x0, x0, #0xfc8
   48a04:	bl	58e0 <__assert_fail@plt>
   48a08:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48a0c:	add	x3, x3, #0xc10
   48a10:	add	x3, x3, #0x18
   48a14:	mov	w2, #0x33                  	// #51
   48a18:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   48a1c:	add	x1, x1, #0x550
   48a20:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   48a24:	add	x0, x0, #0xe40
   48a28:	bl	58e0 <__assert_fail@plt>
   48a2c:	ldr	w2, [x1, #8]
   48a30:	cmp	w2, #0x1
   48a34:	b.ls	48af4 <my_regprop@@Base+0xe830>  // b.plast
   48a38:	sub	w2, w2, #0x1
   48a3c:	str	w2, [x1, #8]
   48a40:	str	xzr, [sp, #400]
   48a44:	ldr	x0, [sp, #392]
   48a48:	cbz	x0, 4859c <my_regprop@@Base+0xe2d8>
   48a4c:	mov	x1, #0x130                 	// #304
   48a50:	bl	59d0 <Perl__invlist_search@plt>
   48a54:	tbnz	x0, #63, 48a5c <my_regprop@@Base+0xe798>
   48a58:	tbz	w0, #0, 489a0 <my_regprop@@Base+0xe6dc>
   48a5c:	ldr	x19, [sp, #392]
   48a60:	mov	x1, #0x131                 	// #305
   48a64:	mov	x0, x19
   48a68:	bl	59d0 <Perl__invlist_search@plt>
   48a6c:	cbz	x19, 48b00 <my_regprop@@Base+0xe83c>
   48a70:	tbnz	x0, #63, 48a78 <my_regprop@@Base+0xe7b4>
   48a74:	tbz	w0, #0, 489a0 <my_regprop@@Base+0xe6dc>
   48a78:	ldr	x0, [sp, #392]
   48a7c:	cbz	x0, 4859c <my_regprop@@Base+0xe2d8>
   48a80:	ldrb	w1, [x0, #12]
   48a84:	cmp	w1, #0x4
   48a88:	b.ne	48b24 <my_regprop@@Base+0xe860>  // b.any
   48a8c:	ldr	x1, [x0]
   48a90:	str	xzr, [x1, #40]
   48a94:	add	x2, sp, #0x1d0
   48a98:	add	x1, sp, #0x1c8
   48a9c:	bl	2da40 <my_regexec@@Base+0xa54c>
   48aa0:	and	w0, w0, #0xff
   48aa4:	cbz	w0, 48ad0 <my_regprop@@Base+0xe80c>
   48aa8:	ldr	x0, [sp, #456]
   48aac:	cmp	x0, #0xff
   48ab0:	b.hi	48ad0 <my_regprop@@Base+0xe80c>  // b.pmore
   48ab4:	ldr	w0, [sp, #184]
   48ab8:	orr	w0, w0, #0x4
   48abc:	and	w0, w0, #0xff
   48ac0:	str	w0, [sp, #184]
   48ac4:	ldr	w0, [sp, #192]
   48ac8:	orr	w0, w0, #0x4
   48acc:	str	w0, [sp, #192]
   48ad0:	ldr	x1, [sp, #392]
   48ad4:	cbz	x1, 48b48 <my_regprop@@Base+0xe884>
   48ad8:	ldrb	w0, [x1, #12]
   48adc:	cmp	w0, #0x4
   48ae0:	b.ne	48b6c <my_regprop@@Base+0xe8a8>  // b.any
   48ae4:	ldr	x0, [x1]
   48ae8:	mov	x2, #0xffffffffffffffff    	// #-1
   48aec:	str	x2, [x0, #40]
   48af0:	b	48ba0 <my_regprop@@Base+0xe8dc>
   48af4:	mov	x0, x27
   48af8:	bl	5860 <Perl_sv_free2@plt>
   48afc:	b	48a40 <my_regprop@@Base+0xe77c>
   48b00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48b04:	add	x3, x3, #0xc10
   48b08:	add	x3, x3, #0x118
   48b0c:	mov	w2, #0x3f                  	// #63
   48b10:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   48b14:	add	x1, x1, #0x550
   48b18:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   48b1c:	add	x0, x0, #0x568
   48b20:	bl	58e0 <__assert_fail@plt>
   48b24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48b28:	add	x3, x3, #0xc10
   48b2c:	add	x3, x3, #0x390
   48b30:	mov	w2, #0x2835                	// #10293
   48b34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48b38:	add	x1, x1, #0xfb8
   48b3c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48b40:	add	x0, x0, #0xfc8
   48b44:	bl	58e0 <__assert_fail@plt>
   48b48:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48b4c:	add	x3, x3, #0xc10
   48b50:	add	x3, x3, #0x3f0
   48b54:	mov	w2, #0x284d                	// #10317
   48b58:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48b5c:	add	x1, x1, #0xfb8
   48b60:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   48b64:	add	x0, x0, #0x568
   48b68:	bl	58e0 <__assert_fail@plt>
   48b6c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48b70:	add	x3, x3, #0xc10
   48b74:	add	x3, x3, #0x390
   48b78:	mov	w2, #0x2835                	// #10293
   48b7c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48b80:	add	x1, x1, #0xfb8
   48b84:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48b88:	add	x0, x0, #0xfc8
   48b8c:	bl	58e0 <__assert_fail@plt>
   48b90:	ldr	x0, [sp, #184]
   48b94:	tbnz	w0, #7, 48588 <my_regprop@@Base+0xe2c4>
   48b98:	ldr	x1, [sp, #392]
   48b9c:	cbz	x1, 4859c <my_regprop@@Base+0xe2d8>
   48ba0:	ldr	w0, [sp, #192]
   48ba4:	cmp	w0, #0x0
   48ba8:	ldr	w0, [sp, #172]
   48bac:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   48bb0:	b.eq	4859c <my_regprop@@Base+0xe2d8>  // b.none
   48bb4:	mov	x0, x27
   48bb8:	bl	52b0 <Perl__invlist_invert@plt>
   48bbc:	str	wzr, [sp, #172]
   48bc0:	b	4859c <my_regprop@@Base+0xe2d8>
   48bc4:	ldr	x1, [sp, #160]
   48bc8:	ldr	w0, [x1]
   48bcc:	orr	w0, w0, #0x3
   48bd0:	str	w0, [x1]
   48bd4:	ldr	w0, [sp, #184]
   48bd8:	ands	w22, w0, #0x6
   48bdc:	b.eq	48be8 <my_regprop@@Base+0xe924>  // b.none
   48be0:	mov	w0, #0x1                   	// #1
   48be4:	str	w0, [x28, #248]
   48be8:	ldr	w0, [sp, #152]
   48bec:	cbz	w0, 49bfc <my_regprop@@Base+0xf938>
   48bf0:	adrp	x0, 7e000 <boot_re@@Base+0x1c41c>
   48bf4:	add	x0, x0, #0x6c0
   48bf8:	ld1	{v0.16b, v1.16b}, [x0]
   48bfc:	add	x0, sp, #0x1d8
   48c00:	st1	{v0.16b, v1.16b}, [x0]
   48c04:	add	x0, sp, #0x1f8
   48c08:	st1	{v0.16b, v1.16b}, [x0]
   48c0c:	ldr	x0, [sp, #392]
   48c10:	cbz	x0, 48f20 <my_regprop@@Base+0xec5c>
   48c14:	ldrb	w1, [x0, #12]
   48c18:	cmp	w1, #0x4
   48c1c:	b.ne	48eb4 <my_regprop@@Base+0xebf0>  // b.any
   48c20:	ldr	x0, [x0]
   48c24:	str	xzr, [x0, #40]
   48c28:	add	x20, sp, #0x1d8
   48c2c:	add	x21, sp, #0x1f8
   48c30:	add	x26, x20, #0x20
   48c34:	mov	x19, #0x0                   	// #0
   48c38:	add	x23, x19, #0x1
   48c3c:	mov	x2, x21
   48c40:	mov	x1, x20
   48c44:	ldr	x0, [sp, #392]
   48c48:	bl	2da40 <my_regexec@@Base+0xa54c>
   48c4c:	and	w0, w0, #0xff
   48c50:	cbz	w0, 48c6c <my_regprop@@Base+0xe9a8>
   48c54:	ldr	x19, [x21], #8
   48c58:	ldr	x0, [x20], #8
   48c5c:	sub	x19, x19, x0
   48c60:	add	x19, x19, x23
   48c64:	cmp	x20, x26
   48c68:	b.ne	48c38 <my_regprop@@Base+0xe974>  // b.any
   48c6c:	ldr	x0, [sp, #392]
   48c70:	cbz	x0, 48ed8 <my_regprop@@Base+0xec14>
   48c74:	ldrb	w1, [x0, #12]
   48c78:	cmp	w1, #0x4
   48c7c:	b.ne	48efc <my_regprop@@Base+0xec38>  // b.any
   48c80:	ldr	x0, [x0]
   48c84:	mov	x1, #0xffffffffffffffff    	// #-1
   48c88:	str	x1, [x0, #40]
   48c8c:	ldr	x4, [sp, #472]
   48c90:	cbnz	x4, 48ca0 <my_regprop@@Base+0xe9dc>
   48c94:	ldr	x0, [sp, #504]
   48c98:	cmn	x0, #0x1
   48c9c:	b.eq	48f28 <my_regprop@@Base+0xec64>  // b.none
   48ca0:	ldr	w5, [sp, #264]
   48ca4:	cbz	w5, 48d90 <my_regprop@@Base+0xeacc>
   48ca8:	and	w0, w5, #0x3
   48cac:	cmp	w0, #0x3
   48cb0:	b.eq	48f78 <my_regprop@@Base+0xecb4>  // b.none
   48cb4:	mov	w1, #0x2                   	// #2
   48cb8:	mov	w2, #0x1                   	// #1
   48cbc:	add	w0, w1, #0x1
   48cc0:	lsl	w0, w2, w0
   48cc4:	lsl	w3, w2, w1
   48cc8:	orr	w0, w0, w3
   48ccc:	bics	wzr, w0, w5
   48cd0:	b.eq	48f78 <my_regprop@@Base+0xecb4>  // b.none
   48cd4:	add	w1, w1, #0x2
   48cd8:	cmp	w1, #0x1e
   48cdc:	b.ne	48cbc <my_regprop@@Base+0xe9f8>  // b.any
   48ce0:	ldr	w2, [sp, #264]
   48ce4:	sub	w0, w2, #0x1
   48ce8:	tst	w0, w2
   48cec:	b.ne	48d90 <my_regprop@@Base+0xeacc>  // b.any
   48cf0:	cmp	x4, #0xff
   48cf4:	ccmp	x19, #0x0, #0x4, ls  // ls = plast
   48cf8:	b.ne	48d90 <my_regprop@@Base+0xeacc>  // b.any
   48cfc:	str	xzr, [sp, #464]
   48d00:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   48d04:	add	x0, x0, #0xc10
   48d08:	add	x0, x0, #0x880
   48d0c:	mov	w1, #0xb531                	// #46385
   48d10:	movk	w1, #0x77c, lsl #16
   48d14:	mul	w1, w2, w1
   48d18:	lsr	w1, w1, #27
   48d1c:	ldr	w1, [x0, x1, lsl #2]
   48d20:	add	w0, w1, w1, lsr #31
   48d24:	asr	w21, w0, #1
   48d28:	ubfx	x0, x0, #1, #8
   48d2c:	cmp	w1, w0, lsl #1
   48d30:	cset	w23, ne  // ne = any
   48d34:	add	x4, sp, #0x1d0
   48d38:	mov	w3, w23
   48d3c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   48d40:	ldr	x1, [x1, #3928]
   48d44:	ldr	x2, [x1, w0, sxtw #3]
   48d48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   48d4c:	ldr	x0, [x0, #3968]
   48d50:	ldr	x1, [x0]
   48d54:	mov	x0, x27
   48d58:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   48d5c:	mov	w3, #0x0                   	// #0
   48d60:	ldr	x2, [sp, #392]
   48d64:	ldr	x1, [sp, #464]
   48d68:	mov	x0, x27
   48d6c:	bl	53a0 <Perl__invlistEQ@plt>
   48d70:	and	w20, w0, #0xff
   48d74:	ldr	x1, [sp, #464]
   48d78:	ldr	w2, [x1, #8]
   48d7c:	cmp	w2, #0x1
   48d80:	b.ls	48fc8 <my_regprop@@Base+0xed04>  // b.plast
   48d84:	sub	w2, w2, #0x1
   48d88:	str	w2, [x1, #8]
   48d8c:	cbnz	w20, 48fd4 <my_regprop@@Base+0xed10>
   48d90:	ldr	w0, [sp, #192]
   48d94:	tbnz	w0, #0, 49bfc <my_regprop@@Base+0xf938>
   48d98:	cbnz	w0, 49ed4 <my_regprop@@Base+0xfc10>
   48d9c:	cbz	x19, 49008 <my_regprop@@Base+0xed44>
   48da0:	ldr	x0, [sp, #472]
   48da4:	cbnz	x0, 48db4 <my_regprop@@Base+0xeaf0>
   48da8:	ldr	x0, [sp, #504]
   48dac:	cmp	x0, #0x9
   48db0:	b.eq	49044 <my_regprop@@Base+0xed80>  // b.none
   48db4:	ldr	w0, [sp, #264]
   48db8:	cmp	w0, #0x0
   48dbc:	cset	w1, eq  // eq = none
   48dc0:	ldr	w0, [sp, #172]
   48dc4:	eor	w0, w0, #0x1
   48dc8:	tst	w1, w0
   48dcc:	b.ne	4a16c <my_regprop@@Base+0xfea8>  // b.any
   48dd0:	ldr	x19, [sp, #392]
   48dd4:	mov	x0, x19
   48dd8:	bl	2d92c <my_regexec@@Base+0xa438>
   48ddc:	cmp	x0, #0x7f
   48de0:	b.hi	496c8 <my_regprop@@Base+0xf404>  // b.pmore
   48de4:	ldr	x20, [sp, #392]
   48de8:	mov	x0, x20
   48dec:	bl	2d92c <my_regexec@@Base+0xa438>
   48df0:	cmp	x0, #0x7f
   48df4:	b.hi	49ef0 <my_regprop@@Base+0xfc2c>  // b.pmore
   48df8:	mov	w21, #0x0                   	// #0
   48dfc:	cbz	x20, 49708 <my_regprop@@Base+0xf444>
   48e00:	ldrb	w0, [x20, #12]
   48e04:	cmp	w0, #0x4
   48e08:	b.ne	4972c <my_regprop@@Base+0xf468>  // b.any
   48e0c:	ldr	x0, [x20]
   48e10:	str	xzr, [x0, #40]
   48e14:	mov	x19, #0x0                   	// #0
   48e18:	mov	w20, #0x0                   	// #0
   48e1c:	mov	x23, #0xffffffffffffffff    	// #-1
   48e20:	add	x0, sp, #0x1d0
   48e24:	str	x0, [sp, #144]
   48e28:	add	x26, sp, #0x1c8
   48e2c:	ldr	x2, [sp, #144]
   48e30:	mov	x1, x26
   48e34:	ldr	x0, [sp, #392]
   48e38:	bl	2da40 <my_regexec@@Base+0xa54c>
   48e3c:	and	w0, w0, #0xff
   48e40:	cbz	w0, 49760 <my_regprop@@Base+0xf49c>
   48e44:	ldr	x1, [sp, #456]
   48e48:	mov	w0, w1
   48e4c:	ldr	w2, [sp, #152]
   48e50:	cbz	w2, 48e64 <my_regprop@@Base+0xeba0>
   48e54:	cmp	w1, #0x7f
   48e58:	b.hi	48ea4 <my_regprop@@Base+0xebe0>  // b.pmore
   48e5c:	add	w0, w1, #0x1
   48e60:	mov	x23, x1
   48e64:	ldr	x3, [sp, #464]
   48e68:	add	x5, x3, #0x1
   48e6c:	cmp	x3, w0, uxtw
   48e70:	b.cc	49750 <my_regprop@@Base+0xf48c>  // b.lo, b.ul, b.last
   48e74:	cmp	w0, #0x7f
   48e78:	b.hi	48ea4 <my_regprop@@Base+0xebe0>  // b.pmore
   48e7c:	add	w2, w0, #0x1
   48e80:	eor	w4, w0, w23
   48e84:	orr	w20, w20, w4
   48e88:	and	w20, w20, #0xff
   48e8c:	add	w0, w0, #0x1
   48e90:	cmp	x3, x2
   48e94:	b.cc	49750 <my_regprop@@Base+0xf48c>  // b.lo, b.ul, b.last
   48e98:	add	x2, x2, #0x1
   48e9c:	cmp	w0, #0x80
   48ea0:	b.ne	48e80 <my_regprop@@Base+0xebbc>  // b.any
   48ea4:	mov	w26, #0x0                   	// #0
   48ea8:	mov	x19, #0xffffffffffffffff    	// #-1
   48eac:	cbz	w21, 49ef0 <my_regprop@@Base+0xfc2c>
   48eb0:	b	496f4 <my_regprop@@Base+0xf430>
   48eb4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48eb8:	add	x3, x3, #0xc10
   48ebc:	add	x3, x3, #0x390
   48ec0:	mov	w2, #0x2835                	// #10293
   48ec4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48ec8:	add	x1, x1, #0xfb8
   48ecc:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48ed0:	add	x0, x0, #0xfc8
   48ed4:	bl	58e0 <__assert_fail@plt>
   48ed8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48edc:	add	x3, x3, #0xc10
   48ee0:	add	x3, x3, #0x3f0
   48ee4:	mov	w2, #0x284d                	// #10317
   48ee8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48eec:	add	x1, x1, #0xfb8
   48ef0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   48ef4:	add	x0, x0, #0x568
   48ef8:	bl	58e0 <__assert_fail@plt>
   48efc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   48f00:	add	x3, x3, #0xc10
   48f04:	add	x3, x3, #0x390
   48f08:	mov	w2, #0x2835                	// #10293
   48f0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   48f10:	add	x1, x1, #0xfb8
   48f14:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   48f18:	add	x0, x0, #0xfc8
   48f1c:	bl	58e0 <__assert_fail@plt>
   48f20:	mov	x19, #0x0                   	// #0
   48f24:	b	48c8c <my_regprop@@Base+0xe9c8>
   48f28:	ldr	w0, [sp, #172]
   48f2c:	cbz	w0, 48f4c <my_regprop@@Base+0xec88>
   48f30:	mov	w3, #0x0                   	// #0
   48f34:	mov	w2, #0x5a                  	// #90
   48f38:	mov	x1, x28
   48f3c:	mov	x0, x27
   48f40:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   48f44:	mov	x19, x0
   48f48:	b	49a3c <my_regprop@@Base+0xf778>
   48f4c:	mov	w2, #0x11                  	// #17
   48f50:	mov	x1, x28
   48f54:	mov	x0, x27
   48f58:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   48f5c:	mov	x19, x0
   48f60:	ldr	w0, [x28, #112]
   48f64:	cmp	w0, #0x9
   48f68:	b.gt	49a3c <my_regprop@@Base+0xf778>
   48f6c:	add	w0, w0, #0x1
   48f70:	str	w0, [x28, #112]
   48f74:	b	49a3c <my_regprop@@Base+0xf778>
   48f78:	ldr	w0, [sp, #172]
   48f7c:	cbz	w0, 48f9c <my_regprop@@Base+0xecd8>
   48f80:	mov	w3, #0x0                   	// #0
   48f84:	mov	w2, #0x5a                  	// #90
   48f88:	mov	x1, x28
   48f8c:	mov	x0, x27
   48f90:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   48f94:	mov	x19, x0
   48f98:	b	49a3c <my_regprop@@Base+0xf778>
   48f9c:	mov	w2, #0x11                  	// #17
   48fa0:	mov	x1, x28
   48fa4:	mov	x0, x27
   48fa8:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   48fac:	mov	x19, x0
   48fb0:	ldr	w0, [x28, #112]
   48fb4:	cmp	w0, #0x9
   48fb8:	b.gt	49a3c <my_regprop@@Base+0xf778>
   48fbc:	add	w0, w0, #0x1
   48fc0:	str	w0, [x28, #112]
   48fc4:	b	49a3c <my_regprop@@Base+0xf778>
   48fc8:	mov	x0, x27
   48fcc:	bl	5860 <Perl_sv_free2@plt>
   48fd0:	b	48d8c <my_regprop@@Base+0xeac8>
   48fd4:	ldr	w0, [sp, #172]
   48fd8:	cmp	w0, w23
   48fdc:	cset	w2, ne  // ne = any
   48fe0:	ubfiz	w2, w2, #2, #6
   48fe4:	add	w2, w2, #0x1a
   48fe8:	mov	x1, x28
   48fec:	mov	x0, x27
   48ff0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   48ff4:	mov	x19, x0
   48ff8:	ldr	x1, [x28, #96]
   48ffc:	lsl	x0, x0, #2
   49000:	strb	w21, [x1, x0]
   49004:	b	49a3c <my_regprop@@Base+0xf778>
   49008:	ldr	w0, [sp, #172]
   4900c:	cbz	w0, 49028 <my_regprop@@Base+0xed64>
   49010:	mov	w2, #0x11                  	// #17
   49014:	mov	x1, x28
   49018:	mov	x0, x27
   4901c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   49020:	mov	x19, x0
   49024:	b	49a3c <my_regprop@@Base+0xf778>
   49028:	mov	w3, #0x0                   	// #0
   4902c:	mov	w2, #0x5a                  	// #90
   49030:	mov	x1, x28
   49034:	mov	x0, x27
   49038:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   4903c:	mov	x19, x0
   49040:	b	49a3c <my_regprop@@Base+0xf778>
   49044:	ldr	x0, [sp, #480]
   49048:	cmp	x0, #0xb
   4904c:	b.ne	48db4 <my_regprop@@Base+0xeaf0>  // b.any
   49050:	ldr	x0, [sp, #512]
   49054:	cmn	x0, #0x1
   49058:	b.ne	48db4 <my_regprop@@Base+0xeaf0>  // b.any
   4905c:	ldr	w0, [sp, #172]
   49060:	cbnz	w0, 49090 <my_regprop@@Base+0xedcc>
   49064:	mov	w2, #0x10                  	// #16
   49068:	mov	x1, x28
   4906c:	mov	x0, x27
   49070:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   49074:	mov	x19, x0
   49078:	ldr	w0, [x28, #112]
   4907c:	cmp	w0, #0x9
   49080:	b.gt	49a3c <my_regprop@@Base+0xf778>
   49084:	add	w0, w0, #0x1
   49088:	str	w0, [x28, #112]
   4908c:	b	49a3c <my_regprop@@Base+0xf778>
   49090:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49094:	add	x3, x3, #0xc10
   49098:	add	x3, x3, #0x870
   4909c:	mov	w2, #0x4806                	// #18438
   490a0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   490a4:	add	x1, x1, #0xfb8
   490a8:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   490ac:	add	x0, x0, #0xdd0
   490b0:	bl	58e0 <__assert_fail@plt>
   490b4:	ldr	x0, [sp, #384]
   490b8:	cbnz	x0, 4a1ac <my_regprop@@Base+0xfee8>
   490bc:	ldr	w0, [x28]
   490c0:	ubfx	x2, x0, #7, #3
   490c4:	cmp	w2, #0x1
   490c8:	b.eq	490e4 <my_regprop@@Base+0xee20>  // b.none
   490cc:	tbnz	w0, #2, 49164 <my_regprop@@Base+0xeea0>
   490d0:	cmp	x1, #0x100
   490d4:	mov	w21, #0x23                  	// #35
   490d8:	mov	w0, #0x2c                  	// #44
   490dc:	csel	w21, w21, w0, cc  // cc = lo, ul, last
   490e0:	b	490f4 <my_regprop@@Base+0xee30>
   490e4:	tst	x0, #0x4
   490e8:	mov	w21, #0x26                  	// #38
   490ec:	mov	w0, #0x24                  	// #36
   490f0:	csel	w21, w21, w0, ne  // ne = any
   490f4:	ldr	x0, [sp, #472]
   490f8:	str	x0, [sp, #336]
   490fc:	ldr	w0, [x28, #192]
   49100:	cbnz	w0, 49ec0 <my_regprop@@Base+0xfbfc>
   49104:	ldr	x0, [sp, #336]
   49108:	cmp	x0, #0xff
   4910c:	b.ls	49600 <my_regprop@@Base+0xf33c>  // b.plast
   49110:	str	xzr, [sp, #464]
   49114:	ldr	w0, [x28]
   49118:	tbz	w0, #2, 4958c <my_regprop@@Base+0xf2c8>
   4911c:	add	x4, sp, #0x1d0
   49120:	mov	w3, #0x0                   	// #0
   49124:	ldr	x2, [sp, #392]
   49128:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4912c:	ldr	x0, [x0, #3800]
   49130:	ldr	x1, [x0]
   49134:	mov	x0, x27
   49138:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4913c:	ldr	x0, [sp, #464]
   49140:	bl	2634c <my_regexec@@Base+0x2e58>
   49144:	cbz	x0, 4a1b8 <my_regprop@@Base+0xfef4>
   49148:	ldr	w0, [x28, #192]
   4914c:	cbnz	w0, 49ec0 <my_regprop@@Base+0xfbfc>
   49150:	mov	w0, #0x60                  	// #96
   49154:	ldr	x1, [sp, #160]
   49158:	str	w0, [x1]
   4915c:	mov	x19, #0x0                   	// #0
   49160:	b	47fb8 <my_regprop@@Base+0xdcf4>
   49164:	cmp	x1, #0xff
   49168:	b.hi	49190 <my_regprop@@Base+0xeecc>  // b.pmore
   4916c:	and	x1, x1, #0xff
   49170:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   49174:	ldr	x0, [x0, #3880]
   49178:	ldr	w0, [x0, x1, lsl #2]
   4917c:	tst	x0, #0x400000
   49180:	mov	w21, #0x27                  	// #39
   49184:	mov	w0, #0x23                  	// #35
   49188:	csel	w21, w21, w0, ne  // ne = any
   4918c:	b	490f4 <my_regprop@@Base+0xee30>
   49190:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   49194:	ldr	x0, [x0, #3800]
   49198:	ldr	x0, [x0]
   4919c:	bl	291a4 <my_regexec@@Base+0x5cb0>
   491a0:	ands	w0, w0, #0xff
   491a4:	cset	w21, ne  // ne = any
   491a8:	add	w21, w21, #0x2c
   491ac:	b	490f4 <my_regprop@@Base+0xee30>
   491b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   491b4:	ldr	x0, [x0, #3808]
   491b8:	ldr	x20, [x0]
   491bc:	mov	x0, x20
   491c0:	bl	59d0 <Perl__invlist_search@plt>
   491c4:	cbz	x20, 49314 <my_regprop@@Base+0xf050>
   491c8:	tbnz	x0, #63, 4a1b8 <my_regprop@@Base+0xfef4>
   491cc:	tbnz	w0, #0, 4a1b8 <my_regprop@@Base+0xfef4>
   491d0:	cmp	x19, #0x2
   491d4:	b.eq	49338 <my_regprop@@Base+0xf074>  // b.none
   491d8:	ldr	x19, [sp, #384]
   491dc:	cbz	x19, 49210 <my_regprop@@Base+0xef4c>
   491e0:	mov	x0, x19
   491e4:	bl	2634c <my_regexec@@Base+0x2e58>
   491e8:	cmp	x0, #0x2
   491ec:	b.ne	4a1b8 <my_regprop@@Base+0xfef4>  // b.any
   491f0:	mov	x0, x19
   491f4:	bl	2d92c <my_regexec@@Base+0xa438>
   491f8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   491fc:	ldr	x1, [x1, #3752]
   49200:	ldrb	w1, [x1, x0]
   49204:	ldr	x0, [sp, #472]
   49208:	cmp	x1, x0
   4920c:	b.ne	4a1b8 <my_regprop@@Base+0xfef4>  // b.any
   49210:	mov	w4, #0x0                   	// #0
   49214:	add	x3, sp, #0x1c0
   49218:	add	x2, sp, #0x228
   4921c:	ldr	x1, [sp, #472]
   49220:	mov	x0, x27
   49224:	bl	5320 <Perl__to_uni_fold_flags@plt>
   49228:	mov	x20, x0
   4922c:	add	x3, sp, #0x1c8
   49230:	add	x2, sp, #0x1b8
   49234:	mov	x1, x0
   49238:	mov	x0, x27
   4923c:	bl	5a00 <Perl__inverse_folds@plt>
   49240:	mov	x23, x0
   49244:	add	x1, x0, #0x1
   49248:	mov	x0, x27
   4924c:	bl	5090 <Perl__new_invlist@plt>
   49250:	mov	x19, x0
   49254:	str	xzr, [sp, #464]
   49258:	ldr	x0, [sp, #384]
   4925c:	cbz	x0, 493fc <my_regprop@@Base+0xf138>
   49260:	mov	x1, #0x0                   	// #0
   49264:	mov	x0, x27
   49268:	bl	5090 <Perl__new_invlist@plt>
   4926c:	str	x0, [sp, #464]
   49270:	add	x21, sp, #0x1d0
   49274:	mov	x4, x21
   49278:	mov	w3, #0x0                   	// #0
   4927c:	ldr	x2, [sp, #384]
   49280:	ldr	x1, [sp, #392]
   49284:	mov	x0, x27
   49288:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4928c:	ldr	x2, [sp, #472]
   49290:	mov	x3, x2
   49294:	mov	x1, x19
   49298:	mov	x0, x27
   4929c:	bl	5450 <Perl__add_range_to_invlist@plt>
   492a0:	mov	x3, x20
   492a4:	mov	x2, x20
   492a8:	mov	x1, x0
   492ac:	mov	x0, x27
   492b0:	bl	5450 <Perl__add_range_to_invlist@plt>
   492b4:	mov	x19, x0
   492b8:	cbnz	x23, 49404 <my_regprop@@Base+0xf140>
   492bc:	mov	w3, #0x0                   	// #0
   492c0:	mov	x2, x19
   492c4:	ldr	x1, [x21]
   492c8:	mov	x0, x27
   492cc:	bl	53a0 <Perl__invlistEQ@plt>
   492d0:	and	w0, w0, #0xff
   492d4:	cbz	w0, 4952c <my_regprop@@Base+0xf268>
   492d8:	ldr	x1, [sp, #472]
   492dc:	cmp	x1, #0xff
   492e0:	b.ls	49480 <my_regprop@@Base+0xf1bc>  // b.plast
   492e4:	ldr	w0, [x28]
   492e8:	tbz	w0, #2, 49454 <my_regprop@@Base+0xf190>
   492ec:	ldr	w0, [x28]
   492f0:	ubfx	x0, x0, #7, #3
   492f4:	cmp	w0, #0x1
   492f8:	b.eq	49478 <my_regprop@@Base+0xf1b4>  // b.none
   492fc:	cmp	w0, #0x4
   49300:	mov	w21, #0x28                  	// #40
   49304:	mov	w0, #0x2d                  	// #45
   49308:	csel	w21, w21, w0, eq  // eq = none
   4930c:	str	x20, [sp, #336]
   49310:	b	49530 <my_regprop@@Base+0xf26c>
   49314:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49318:	add	x3, x3, #0xc10
   4931c:	add	x3, x3, #0x118
   49320:	mov	w2, #0x3f                  	// #63
   49324:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   49328:	add	x1, x1, #0x550
   4932c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   49330:	add	x0, x0, #0x568
   49334:	bl	58e0 <__assert_fail@plt>
   49338:	ldr	x0, [sp, #472]
   4933c:	cmp	x0, #0x7f
   49340:	b.hi	491d8 <my_regprop@@Base+0xef14>  // b.pmore
   49344:	and	x1, x0, #0xffffffffffffffdf
   49348:	sub	x1, x1, #0x41
   4934c:	cmp	x1, #0x19
   49350:	b.hi	493a8 <my_regprop@@Base+0xf0e4>  // b.pmore
   49354:	ldr	x1, [sp, #504]
   49358:	cmp	x0, x1
   4935c:	b.ne	4a1b8 <my_regprop@@Base+0xfef4>  // b.any
   49360:	ldr	x1, [sp, #480]
   49364:	eor	x1, x0, x1
   49368:	tst	x1, #0xffffffffffffffdf
   4936c:	b.ne	4a1b8 <my_regprop@@Base+0xfef4>  // b.any
   49370:	ldr	w3, [x28]
   49374:	ubfx	x1, x3, #7, #3
   49378:	cmp	w1, #0x4
   4937c:	b.eq	493cc <my_regprop@@Base+0xf108>  // b.none
   49380:	and	x2, x0, #0xff
   49384:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   49388:	ldr	x1, [x1, #3880]
   4938c:	ldr	w1, [x1, x2, lsl #2]
   49390:	tbnz	w1, #19, 493ec <my_regprop@@Base+0xf128>
   49394:	tbz	w1, #18, 493f4 <my_regprop@@Base+0xf130>
   49398:	tst	x3, #0x4
   4939c:	cset	w21, eq  // eq = none
   493a0:	add	w21, w21, #0x27
   493a4:	b	493d0 <my_regprop@@Base+0xf10c>
   493a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   493ac:	add	x3, x3, #0xc10
   493b0:	add	x3, x3, #0x870
   493b4:	mov	w2, #0x4875                	// #18549
   493b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   493bc:	add	x1, x1, #0xfb8
   493c0:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   493c4:	add	x0, x0, #0xe60
   493c8:	bl	58e0 <__assert_fail@plt>
   493cc:	mov	w21, #0x28                  	// #40
   493d0:	sub	x1, x0, #0x41
   493d4:	cmp	x1, #0x19
   493d8:	b.hi	493e4 <my_regprop@@Base+0xf120>  // b.pmore
   493dc:	add	w0, w0, #0x20
   493e0:	and	x0, x0, #0xff
   493e4:	str	x0, [sp, #336]
   493e8:	b	490fc <my_regprop@@Base+0xee38>
   493ec:	mov	w21, #0x28                  	// #40
   493f0:	b	493d0 <my_regprop@@Base+0xf10c>
   493f4:	mov	w21, #0x27                  	// #39
   493f8:	b	493d0 <my_regprop@@Base+0xf10c>
   493fc:	add	x21, sp, #0x188
   49400:	b	4928c <my_regprop@@Base+0xefc8>
   49404:	ldr	w2, [sp, #440]
   49408:	mov	x3, x2
   4940c:	mov	x1, x0
   49410:	mov	x0, x27
   49414:	bl	5450 <Perl__add_range_to_invlist@plt>
   49418:	mov	x1, x0
   4941c:	b	4943c <my_regprop@@Base+0xf178>
   49420:	ldr	x0, [sp, #456]
   49424:	ldr	w2, [x0, w26, uxtw #2]
   49428:	mov	x3, x2
   4942c:	mov	x0, x27
   49430:	bl	5450 <Perl__add_range_to_invlist@plt>
   49434:	mov	x1, x0
   49438:	mov	w26, w19
   4943c:	add	w19, w26, #0x1
   49440:	add	w0, w26, #0x1
   49444:	cmp	x0, x23
   49448:	b.cc	49420 <my_regprop@@Base+0xf15c>  // b.lo, b.ul, b.last
   4944c:	mov	x19, x1
   49450:	b	492bc <my_regprop@@Base+0xeff8>
   49454:	mov	x1, x20
   49458:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4945c:	ldr	x0, [x0, #3800]
   49460:	ldr	x0, [x0]
   49464:	bl	291a4 <my_regexec@@Base+0x5cb0>
   49468:	and	w0, w0, #0xff
   4946c:	cbz	w0, 492ec <my_regprop@@Base+0xf028>
   49470:	mov	w21, #0x0                   	// #0
   49474:	b	49530 <my_regprop@@Base+0xf26c>
   49478:	mov	w21, #0x2a                  	// #42
   4947c:	b	4930c <my_regprop@@Base+0xf048>
   49480:	ldr	w0, [x28]
   49484:	ubfx	x2, x0, #2, #1
   49488:	cmp	x20, #0x73
   4948c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   49490:	b.ne	494c0 <my_regprop@@Base+0xf1fc>  // b.any
   49494:	cbnz	w2, 494ac <my_regprop@@Base+0xf1e8>
   49498:	and	x3, x1, #0xff
   4949c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   494a0:	ldr	x2, [x2, #3880]
   494a4:	ldr	w2, [x2, x3, lsl #2]
   494a8:	tbnz	w2, #18, 49568 <my_regprop@@Base+0xf2a4>
   494ac:	ldr	x2, [sp, #384]
   494b0:	cbz	x2, 494d8 <my_regprop@@Base+0xf214>
   494b4:	str	x1, [sp, #336]
   494b8:	mov	w21, #0x25                  	// #37
   494bc:	b	49530 <my_regprop@@Base+0xf26c>
   494c0:	tst	x0, #0x380
   494c4:	b.ne	494ac <my_regprop@@Base+0xf1e8>  // b.any
   494c8:	mov	x0, #0x73                  	// #115
   494cc:	str	x0, [sp, #336]
   494d0:	mov	w21, #0x2e                  	// #46
   494d4:	b	49530 <my_regprop@@Base+0xf26c>
   494d8:	cmp	x1, #0xb5
   494dc:	b.eq	494fc <my_regprop@@Base+0xf238>  // b.none
   494e0:	ubfx	x0, x0, #7, #3
   494e4:	cmp	x1, #0x7f
   494e8:	ccmp	w0, #0x4, #0x0, hi  // hi = pmore
   494ec:	b.eq	49520 <my_regprop@@Base+0xf25c>  // b.none
   494f0:	str	x20, [sp, #336]
   494f4:	mov	w21, #0x27                  	// #39
   494f8:	b	49530 <my_regprop@@Base+0xf26c>
   494fc:	ldr	w2, [x28, #192]
   49500:	cbnz	w2, 494e0 <my_regprop@@Base+0xf21c>
   49504:	ubfx	x0, x0, #7, #3
   49508:	cmp	w0, #0x4
   4950c:	cset	w21, ne  // ne = any
   49510:	add	w21, w21, #0x28
   49514:	mov	x0, #0xb5                  	// #181
   49518:	str	x0, [sp, #336]
   4951c:	b	49530 <my_regprop@@Base+0xf26c>
   49520:	str	x20, [sp, #336]
   49524:	mov	w21, #0x28                  	// #40
   49528:	b	49530 <my_regprop@@Base+0xf26c>
   4952c:	mov	w21, #0x0                   	// #0
   49530:	ldr	w2, [x19, #8]
   49534:	cmp	w2, #0x1
   49538:	b.ls	49570 <my_regprop@@Base+0xf2ac>  // b.plast
   4953c:	sub	w2, w2, #0x1
   49540:	str	w2, [x19, #8]
   49544:	ldr	x1, [sp, #464]
   49548:	cbz	x1, 49560 <my_regprop@@Base+0xf29c>
   4954c:	ldr	w2, [x1, #8]
   49550:	cmp	w2, #0x1
   49554:	b.ls	49580 <my_regprop@@Base+0xf2bc>  // b.plast
   49558:	sub	w2, w2, #0x1
   4955c:	str	w2, [x1, #8]
   49560:	cbz	w21, 4a1b8 <my_regprop@@Base+0xfef4>
   49564:	b	490fc <my_regprop@@Base+0xee38>
   49568:	mov	w21, #0x0                   	// #0
   4956c:	b	49530 <my_regprop@@Base+0xf26c>
   49570:	mov	x1, x19
   49574:	mov	x0, x27
   49578:	bl	5860 <Perl_sv_free2@plt>
   4957c:	b	49544 <my_regprop@@Base+0xf280>
   49580:	mov	x0, x27
   49584:	bl	5860 <Perl_sv_free2@plt>
   49588:	b	49560 <my_regprop@@Base+0xf29c>
   4958c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49590:	add	x3, x3, #0xc10
   49594:	add	x3, x3, #0x870
   49598:	mov	w2, #0x493f                	// #18751
   4959c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   495a0:	add	x1, x1, #0xfb8
   495a4:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   495a8:	add	x0, x0, #0xe78
   495ac:	bl	58e0 <__assert_fail@plt>
   495b0:	cmp	x0, #0x7ff
   495b4:	b.ls	4967c <my_regprop@@Base+0xf3b8>  // b.plast
   495b8:	mov	x1, #0xffff                	// #65535
   495bc:	cmp	x0, x1
   495c0:	b.ls	49684 <my_regprop@@Base+0xf3c0>  // b.plast
   495c4:	mov	x1, #0x1fffff              	// #2097151
   495c8:	cmp	x0, x1
   495cc:	b.ls	4968c <my_regprop@@Base+0xf3c8>  // b.plast
   495d0:	mov	x1, #0x3ffffff             	// #67108863
   495d4:	cmp	x0, x1
   495d8:	b.ls	49694 <my_regprop@@Base+0xf3d0>  // b.plast
   495dc:	mov	x1, #0x7fffffff            	// #2147483647
   495e0:	cmp	x0, x1
   495e4:	b.ls	4969c <my_regprop@@Base+0xf3d8>  // b.plast
   495e8:	mov	x1, #0xfffffffff           	// #68719476735
   495ec:	cmp	x0, x1
   495f0:	mov	w20, #0x7                   	// #7
   495f4:	mov	w0, #0xd                   	// #13
   495f8:	csel	w20, w20, w0, ls  // ls = plast
   495fc:	b	49604 <my_regprop@@Base+0xf340>
   49600:	mov	w20, #0x1                   	// #1
   49604:	and	x22, x20, #0xff
   49608:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   4960c:	add	x4, x4, #0xe80
   49610:	mov	x3, x22
   49614:	mov	w2, w21
   49618:	mov	x1, x28
   4961c:	mov	x0, x27
   49620:	bl	2a028 <my_regexec@@Base+0x6b34>
   49624:	mov	x19, x0
   49628:	lsl	x2, x0, #2
   4962c:	ldr	x0, [x28, #96]
   49630:	add	x0, x0, x19, lsl #2
   49634:	strb	w21, [x0, #1]
   49638:	ldr	x0, [x28, #96]
   4963c:	add	x0, x0, x19, lsl #2
   49640:	strh	wzr, [x0, #2]
   49644:	ldr	x0, [x28, #104]
   49648:	add	x1, x0, #0x1
   4964c:	add	x0, x22, #0x3
   49650:	add	x0, x1, x0, lsr #2
   49654:	str	x0, [x28, #104]
   49658:	ldr	x0, [x28, #96]
   4965c:	strb	w20, [x0, x2]
   49660:	cmp	w20, #0x1
   49664:	b.ne	496a4 <my_regprop@@Base+0xf3e0>  // b.any
   49668:	ldr	x1, [x28, #96]
   4966c:	add	x1, x1, x2
   49670:	ldr	x0, [sp, #336]
   49674:	strb	w0, [x1, #4]
   49678:	b	49a3c <my_regprop@@Base+0xf778>
   4967c:	mov	w20, #0x2                   	// #2
   49680:	b	49604 <my_regprop@@Base+0xf340>
   49684:	mov	w20, #0x3                   	// #3
   49688:	b	49604 <my_regprop@@Base+0xf340>
   4968c:	mov	w20, #0x4                   	// #4
   49690:	b	49604 <my_regprop@@Base+0xf340>
   49694:	mov	w20, #0x5                   	// #5
   49698:	b	49604 <my_regprop@@Base+0xf340>
   4969c:	mov	w20, #0x6                   	// #6
   496a0:	b	49604 <my_regprop@@Base+0xf340>
   496a4:	ldr	x1, [x28, #96]
   496a8:	add	x1, x1, x2
   496ac:	mov	x4, #0x0                   	// #0
   496b0:	mov	x3, #0x0                   	// #0
   496b4:	ldr	x2, [sp, #336]
   496b8:	add	x1, x1, #0x4
   496bc:	mov	x0, x27
   496c0:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   496c4:	b	49a3c <my_regprop@@Base+0xf778>
   496c8:	mov	x1, x19
   496cc:	mov	x0, x27
   496d0:	bl	52b0 <Perl__invlist_invert@plt>
   496d4:	ldr	x20, [sp, #392]
   496d8:	mov	x0, x20
   496dc:	bl	2d92c <my_regexec@@Base+0xa438>
   496e0:	mov	w26, #0x0                   	// #0
   496e4:	mov	x19, #0xffffffffffffffff    	// #-1
   496e8:	mov	w21, #0x1                   	// #1
   496ec:	cmp	x0, #0x7f
   496f0:	b.ls	48dfc <my_regprop@@Base+0xeb38>  // b.plast
   496f4:	ldr	x1, [sp, #392]
   496f8:	mov	x0, x27
   496fc:	bl	52b0 <Perl__invlist_invert@plt>
   49700:	cbnz	w26, 49a3c <my_regprop@@Base+0xf778>
   49704:	b	49ef0 <my_regprop@@Base+0xfc2c>
   49708:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4970c:	add	x3, x3, #0xc10
   49710:	add	x3, x3, #0x3d8
   49714:	mov	w2, #0x283d                	// #10301
   49718:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4971c:	add	x1, x1, #0xfb8
   49720:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   49724:	add	x0, x0, #0x568
   49728:	bl	58e0 <__assert_fail@plt>
   4972c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49730:	add	x3, x3, #0xc10
   49734:	add	x3, x3, #0x390
   49738:	mov	w2, #0x2835                	// #10293
   4973c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   49740:	add	x1, x1, #0xfb8
   49744:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   49748:	add	x0, x0, #0xfc8
   4974c:	bl	58e0 <__assert_fail@plt>
   49750:	sub	x19, x19, x1
   49754:	add	x19, x5, x19
   49758:	str	wzr, [sp, #152]
   4975c:	b	48e2c <my_regprop@@Base+0xeb68>
   49760:	ldr	x0, [sp, #392]
   49764:	cbz	x0, 497b8 <my_regprop@@Base+0xf4f4>
   49768:	ldrb	w1, [x0, #12]
   4976c:	cmp	w1, #0x4
   49770:	b.ne	497dc <my_regprop@@Base+0xf518>  // b.any
   49774:	ldr	x0, [x0]
   49778:	mov	x1, #0xffffffffffffffff    	// #-1
   4977c:	str	x1, [x0, #40]
   49780:	cmp	w21, #0x0
   49784:	ccmp	x19, #0x1, #0x2, eq  // eq = none
   49788:	b.ls	4a160 <my_regprop@@Base+0xfe9c>  // b.plast
   4978c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   49790:	ldr	x0, [x0, #3760]
   49794:	ldrb	w1, [x0, w20, sxtw]
   49798:	mov	w0, #0x1                   	// #1
   4979c:	lsl	w0, w0, w1
   497a0:	cmp	x0, x19
   497a4:	b.eq	49800 <my_regprop@@Base+0xf53c>  // b.none
   497a8:	cbz	w21, 49ef0 <my_regprop@@Base+0xfc2c>
   497ac:	mov	w26, #0x0                   	// #0
   497b0:	mov	x19, #0xffffffffffffffff    	// #-1
   497b4:	b	496f4 <my_regprop@@Base+0xf430>
   497b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   497bc:	add	x3, x3, #0xc10
   497c0:	add	x3, x3, #0x3f0
   497c4:	mov	w2, #0x284d                	// #10317
   497c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   497cc:	add	x1, x1, #0xfb8
   497d0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   497d4:	add	x0, x0, #0x568
   497d8:	bl	58e0 <__assert_fail@plt>
   497dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   497e0:	add	x3, x3, #0xc10
   497e4:	add	x3, x3, #0x390
   497e8:	mov	w2, #0x2835                	// #10293
   497ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   497f0:	add	x1, x1, #0xfb8
   497f4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   497f8:	add	x0, x0, #0xfc8
   497fc:	bl	58e0 <__assert_fail@plt>
   49800:	add	w0, w21, #0x17
   49804:	and	w26, w0, #0xff
   49808:	mov	w3, w23
   4980c:	mov	w2, w26
   49810:	mov	x1, x28
   49814:	mov	x0, x27
   49818:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   4981c:	mov	x19, x0
   49820:	ldr	x1, [x28, #96]
   49824:	lsl	x0, x0, #2
   49828:	mvn	w20, w20
   4982c:	strb	w20, [x1, x0]
   49830:	cbnz	w21, 496f4 <my_regprop@@Base+0xf430>
   49834:	b	49a3c <my_regprop@@Base+0xf778>
   49838:	str	x22, [sp, #152]
   4983c:	ldr	x0, [x22]
   49840:	b	49b38 <my_regprop@@Base+0xf874>
   49844:	ldr	w0, [sp, #172]
   49848:	cmp	w0, w20
   4984c:	b.eq	498a8 <my_regprop@@Base+0xf5e4>  // b.none
   49850:	ldr	x0, [sp, #184]
   49854:	tbz	w0, #7, 49888 <my_regprop@@Base+0xf5c4>
   49858:	ldr	x0, [sp, #208]
   4985c:	str	x0, [sp, #144]
   49860:	cmp	w20, #0x0
   49864:	cset	w3, ne  // ne = any
   49868:	ldr	x0, [sp, #152]
   4986c:	ldr	x2, [x0]
   49870:	ldr	x0, [sp, #144]
   49874:	ldr	x1, [x0]
   49878:	mov	x0, x27
   4987c:	bl	53a0 <Perl__invlistEQ@plt>
   49880:	and	w0, w0, #0xff
   49884:	cbnz	w0, 499d8 <my_regprop@@Base+0xf714>
   49888:	add	w20, w20, #0x1
   4988c:	cmp	w20, #0x2
   49890:	b.eq	49b14 <my_regprop@@Base+0xf850>  // b.none
   49894:	cmp	w19, #0x19
   49898:	b.eq	49844 <my_regprop@@Base+0xf580>  // b.none
   4989c:	ldr	x0, [sp, #192]
   498a0:	tbz	w0, #1, 49860 <my_regprop@@Base+0xf59c>
   498a4:	b	49888 <my_regprop@@Base+0xf5c4>
   498a8:	ldr	x4, [sp, #200]
   498ac:	mov	w3, #0x0                   	// #0
   498b0:	ldr	x0, [sp, #160]
   498b4:	ldr	x2, [x0]
   498b8:	ldr	x1, [sp, #392]
   498bc:	mov	x0, x27
   498c0:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   498c4:	ldr	x1, [sp, #456]
   498c8:	cbz	x1, 49960 <my_regprop@@Base+0xf69c>
   498cc:	ldr	w0, [x1, #12]
   498d0:	and	w2, w0, #0xff
   498d4:	cmp	w2, #0x4
   498d8:	b.ne	49984 <my_regprop@@Base+0xf6c0>  // b.any
   498dc:	and	w0, w0, #0xf
   498e0:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   498e4:	ldr	x2, [x2, #3888]
   498e8:	ldrb	w0, [x2, w0, uxtw]
   498ec:	cbz	w0, 499a8 <my_regprop@@Base+0xf6e4>
   498f0:	ldr	x1, [x1]
   498f4:	ldr	x0, [x1, #16]
   498f8:	cbz	x0, 49908 <my_regprop@@Base+0xf644>
   498fc:	ldrb	w1, [x1, #48]
   49900:	cmp	x1, x0, lsr #3
   49904:	b.ne	49888 <my_regprop@@Base+0xf5c4>  // b.any
   49908:	ldr	x1, [sp, #464]
   4990c:	cbz	x1, 49924 <my_regprop@@Base+0xf660>
   49910:	ldr	w2, [x1, #8]
   49914:	cmp	w2, #0x1
   49918:	b.ls	499cc <my_regprop@@Base+0xf708>  // b.plast
   4991c:	sub	w2, w2, #0x1
   49920:	str	w2, [x1, #8]
   49924:	mov	x2, #0x0                   	// #0
   49928:	ldr	x1, [sp, #392]
   4992c:	mov	x0, x27
   49930:	bl	5500 <Perl_invlist_clone@plt>
   49934:	mov	x1, x0
   49938:	str	x0, [sp, #464]
   4993c:	ldr	x2, [sp, #384]
   49940:	str	x26, [sp, #144]
   49944:	cbz	x2, 49860 <my_regprop@@Base+0xf59c>
   49948:	mov	x4, x26
   4994c:	mov	w3, #0x0                   	// #0
   49950:	mov	x0, x27
   49954:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   49958:	str	x26, [sp, #144]
   4995c:	b	49860 <my_regprop@@Base+0xf59c>
   49960:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49964:	add	x3, x3, #0xc10
   49968:	add	x3, x3, #0x18
   4996c:	mov	w2, #0x2f                  	// #47
   49970:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   49974:	add	x1, x1, #0x550
   49978:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   4997c:	add	x0, x0, #0x568
   49980:	bl	58e0 <__assert_fail@plt>
   49984:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49988:	add	x3, x3, #0xc10
   4998c:	add	x3, x3, #0x18
   49990:	mov	w2, #0x31                  	// #49
   49994:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   49998:	add	x1, x1, #0x550
   4999c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   499a0:	add	x0, x0, #0xfc8
   499a4:	bl	58e0 <__assert_fail@plt>
   499a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   499ac:	add	x3, x3, #0xc10
   499b0:	add	x3, x3, #0x18
   499b4:	mov	w2, #0x33                  	// #51
   499b8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   499bc:	add	x1, x1, #0x550
   499c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   499c4:	add	x0, x0, #0xe40
   499c8:	bl	58e0 <__assert_fail@plt>
   499cc:	mov	x0, x27
   499d0:	bl	5860 <Perl_sv_free2@plt>
   499d4:	b	49924 <my_regprop@@Base+0xf660>
   499d8:	add	w2, w19, #0x4
   499dc:	and	w2, w2, #0xff
   499e0:	cmp	w20, #0x0
   499e4:	csel	w2, w2, w19, ne  // ne = any
   499e8:	mov	x1, x28
   499ec:	mov	x0, x27
   499f0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   499f4:	mov	x19, x0
   499f8:	ldr	x1, [x28, #96]
   499fc:	lsl	x0, x0, #2
   49a00:	strb	w23, [x1, x0]
   49a04:	ldr	x1, [sp, #464]
   49a08:	cbz	x1, 49a20 <my_regprop@@Base+0xf75c>
   49a0c:	ldr	w2, [x1, #8]
   49a10:	cmp	w2, #0x1
   49a14:	b.ls	49afc <my_regprop@@Base+0xf838>  // b.plast
   49a18:	sub	w2, w2, #0x1
   49a1c:	str	w2, [x1, #8]
   49a20:	ldr	x1, [sp, #456]
   49a24:	cbz	x1, 49a3c <my_regprop@@Base+0xf778>
   49a28:	ldr	w2, [x1, #8]
   49a2c:	cmp	w2, #0x1
   49a30:	b.ls	49b08 <my_regprop@@Base+0xf844>  // b.plast
   49a34:	sub	w2, w2, #0x1
   49a38:	str	w2, [x1, #8]
   49a3c:	ldr	w0, [x27, #2368]
   49a40:	tbnz	w0, #20, 49a4c <my_regprop@@Base+0xf788>
   49a44:	ldr	x0, [sp, #424]
   49a48:	tbz	w0, #18, 49a6c <my_regprop@@Base+0xf7a8>
   49a4c:	ldr	x3, [x28, #48]
   49a50:	ldr	w0, [sp, #248]
   49a54:	sub	w3, w0, w3
   49a58:	mov	w2, w19
   49a5c:	mov	w1, #0x4aa7                	// #19111
   49a60:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   49a64:	add	x0, x0, #0xf30
   49a68:	bl	5010 <Perl_warn_nocontext@plt>
   49a6c:	lsl	x20, x19, #2
   49a70:	tbnz	x19, #61, 49ea0 <my_regprop@@Base+0xfbdc>
   49a74:	asr	x2, x20, #2
   49a78:	lsl	x20, x20, #1
   49a7c:	ldr	x0, [x28, #40]
   49a80:	ldr	x0, [x0, #8]
   49a84:	add	x0, x0, x20
   49a88:	ldr	x1, [x28, #48]
   49a8c:	ldr	x3, [sp, #248]
   49a90:	sub	x1, x3, x1
   49a94:	stur	w1, [x0, #-4]
   49a98:	ldr	w0, [x27, #2368]
   49a9c:	tbnz	w0, #20, 49aa8 <my_regprop@@Base+0xf7e4>
   49aa0:	ldr	x0, [sp, #424]
   49aa4:	tbz	w0, #18, 49ac4 <my_regprop@@Base+0xf800>
   49aa8:	ldr	x3, [x28, #64]
   49aac:	ldr	w0, [sp, #248]
   49ab0:	sub	w3, w3, w0
   49ab4:	mov	w1, #0x4aa7                	// #19111
   49ab8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   49abc:	add	x0, x0, #0x8
   49ac0:	bl	5010 <Perl_warn_nocontext@plt>
   49ac4:	ldr	x0, [x28, #40]
   49ac8:	ldr	x1, [x0, #8]
   49acc:	ldr	x0, [x28, #64]
   49ad0:	ldr	x2, [sp, #248]
   49ad4:	sub	x0, x0, x2
   49ad8:	str	w0, [x1, x20]
   49adc:	ldr	x1, [sp, #392]
   49ae0:	cbz	x1, 47fb8 <my_regprop@@Base+0xdcf4>
   49ae4:	ldr	w2, [x1, #8]
   49ae8:	cmp	w2, #0x1
   49aec:	b.ls	49eb4 <my_regprop@@Base+0xfbf0>  // b.plast
   49af0:	sub	w2, w2, #0x1
   49af4:	str	w2, [x1, #8]
   49af8:	b	47fb8 <my_regprop@@Base+0xdcf4>
   49afc:	mov	x0, x27
   49b00:	bl	5860 <Perl_sv_free2@plt>
   49b04:	b	49a20 <my_regprop@@Base+0xf75c>
   49b08:	mov	x0, x27
   49b0c:	bl	5860 <Perl_sv_free2@plt>
   49b10:	b	49a3c <my_regprop@@Base+0xf778>
   49b14:	add	w23, w23, #0x1
   49b18:	add	x22, x22, #0x8
   49b1c:	add	x21, x21, #0x8
   49b20:	cmp	w23, #0x10
   49b24:	b.eq	49b58 <my_regprop@@Base+0xf894>  // b.none
   49b28:	cmp	w19, #0x1c
   49b2c:	b.eq	49838 <my_regprop@@Base+0xf574>  // b.none
   49b30:	str	x21, [sp, #152]
   49b34:	ldr	x0, [x21]
   49b38:	cbz	x0, 49b14 <my_regprop@@Base+0xf850>
   49b3c:	mov	w20, #0x0                   	// #0
   49b40:	ldr	x0, [sp, #176]
   49b44:	str	x0, [sp, #144]
   49b48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   49b4c:	ldr	x0, [x0, #3960]
   49b50:	str	x0, [sp, #160]
   49b54:	b	49894 <my_regprop@@Base+0xf5d0>
   49b58:	sub	w0, w19, #0x1
   49b5c:	and	w0, w0, #0xff
   49b60:	cmp	w0, #0x18
   49b64:	b.ls	49b94 <my_regprop@@Base+0xf8d0>  // b.plast
   49b68:	sub	w19, w19, #0x1
   49b6c:	and	w19, w19, #0xff
   49b70:	cmp	w19, #0x1a
   49b74:	b.eq	49b68 <my_regprop@@Base+0xf8a4>  // b.none
   49b78:	adrp	x22, 91000 <boot_re@@Base+0x2f41c>
   49b7c:	ldr	x22, [x22, #3904]
   49b80:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   49b84:	ldr	x21, [x21, #3928]
   49b88:	mov	w23, #0x0                   	// #0
   49b8c:	add	x26, sp, #0x1d0
   49b90:	b	49b28 <my_regprop@@Base+0xf864>
   49b94:	ldr	x1, [sp, #464]
   49b98:	cbz	x1, 49bb0 <my_regprop@@Base+0xf8ec>
   49b9c:	ldr	w2, [x1, #8]
   49ba0:	cmp	w2, #0x1
   49ba4:	b.ls	49d80 <my_regprop@@Base+0xfabc>  // b.plast
   49ba8:	sub	w2, w2, #0x1
   49bac:	str	w2, [x1, #8]
   49bb0:	ldr	x1, [sp, #456]
   49bb4:	cbz	x1, 49bcc <my_regprop@@Base+0xf908>
   49bb8:	ldr	w2, [x1, #8]
   49bbc:	cmp	w2, #0x1
   49bc0:	b.ls	49d8c <my_regprop@@Base+0xfac8>  // b.plast
   49bc4:	sub	w2, w2, #0x1
   49bc8:	str	w2, [x1, #8]
   49bcc:	ldr	x19, [sp, #472]
   49bd0:	cmp	x19, #0xff
   49bd4:	b.ls	49bfc <my_regprop@@Base+0xf938>  // b.plast
   49bd8:	ldr	w0, [x28]
   49bdc:	ubfx	x0, x0, #7, #3
   49be0:	cmp	w0, #0x1
   49be4:	b.eq	49bfc <my_regprop@@Base+0xf938>  // b.none
   49be8:	ldr	x0, [sp, #384]
   49bec:	cmp	x0, #0x0
   49bf0:	ldr	w0, [sp, #184]
   49bf4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   49bf8:	b.eq	49d98 <my_regprop@@Base+0xfad4>  // b.none
   49bfc:	mov	w21, #0x13                  	// #19
   49c00:	ldr	x0, [sp, #192]
   49c04:	tbnz	w0, #1, 49c2c <my_regprop@@Base+0xf968>
   49c08:	mov	w21, #0x15                  	// #21
   49c0c:	ldr	w0, [sp, #264]
   49c10:	cbnz	w0, 49c2c <my_regprop@@Base+0xf968>
   49c14:	ldr	w0, [x28]
   49c18:	ubfx	x0, x0, #7, #3
   49c1c:	cmp	w0, #0x1
   49c20:	mov	w21, #0x14                  	// #20
   49c24:	mov	w0, #0x12                  	// #18
   49c28:	csel	w21, w21, w0, eq  // eq = none
   49c2c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   49c30:	add	x0, x0, #0xc10
   49c34:	add	x0, x0, #0x1e8
   49c38:	ldrb	w22, [x0, w21, sxtw]
   49c3c:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   49c40:	add	x4, x4, #0xe88
   49c44:	and	x3, x22, #0xff
   49c48:	mov	w2, w21
   49c4c:	mov	x1, x28
   49c50:	mov	x0, x27
   49c54:	bl	2a028 <my_regexec@@Base+0x6b34>
   49c58:	mov	x19, x0
   49c5c:	lsl	x20, x0, #2
   49c60:	ldr	x0, [x28, #96]
   49c64:	add	x0, x0, x20
   49c68:	strb	w21, [x0, #1]
   49c6c:	ldr	x0, [x28, #96]
   49c70:	add	x0, x0, x20
   49c74:	strh	wzr, [x0, #2]
   49c78:	add	w0, w22, #0x1
   49c7c:	ldr	x1, [x28, #104]
   49c80:	add	x0, x1, w0, sxtw
   49c84:	str	x0, [x28, #104]
   49c88:	ldr	x0, [x28, #96]
   49c8c:	ldrb	w1, [sp, #184]
   49c90:	strb	w1, [x0, x20]
   49c94:	ldr	x1, [x28, #96]
   49c98:	add	x2, sp, #0x188
   49c9c:	add	x1, x1, x20
   49ca0:	mov	x0, x27
   49ca4:	bl	2e5d4 <my_regexec@@Base+0xb0e0>
   49ca8:	ldr	w1, [sp, #264]
   49cac:	cbz	w1, 49cbc <my_regprop@@Base+0xf9f8>
   49cb0:	ldr	x0, [x28, #96]
   49cb4:	add	x0, x0, x20
   49cb8:	str	w1, [x0, #40]
   49cbc:	ldr	w0, [sp, #172]
   49cc0:	cbz	w0, 49cd4 <my_regprop@@Base+0xfa10>
   49cc4:	ldr	x1, [x28, #96]
   49cc8:	ldrb	w0, [x1, x20]
   49ccc:	orr	w0, w0, #0x1
   49cd0:	strb	w0, [x1, x20]
   49cd4:	ldr	x2, [sp, #384]
   49cd8:	cbz	x2, 49d1c <my_regprop@@Base+0xfa58>
   49cdc:	ldr	x1, [sp, #392]
   49ce0:	cbz	x1, 49e10 <my_regprop@@Base+0xfb4c>
   49ce4:	add	x4, sp, #0x188
   49ce8:	mov	w3, #0x0                   	// #0
   49cec:	mov	x0, x27
   49cf0:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   49cf4:	ldr	x1, [sp, #384]
   49cf8:	ldr	w2, [x1, #8]
   49cfc:	cmp	w2, #0x1
   49d00:	b.ls	49e04 <my_regprop@@Base+0xfb40>  // b.plast
   49d04:	sub	w2, w2, #0x1
   49d08:	str	w2, [x1, #8]
   49d0c:	ldr	x1, [x28, #96]
   49d10:	ldrb	w0, [x1, x20]
   49d14:	orr	w0, w0, #0x40
   49d18:	strb	w0, [x1, x20]
   49d1c:	ldr	x2, [x28, #96]
   49d20:	add	x2, x2, x20
   49d24:	ldr	x3, [sp, #392]
   49d28:	ldr	w0, [x25, #12]
   49d2c:	and	w4, w0, #0xf
   49d30:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   49d34:	ldr	x1, [x1, #3888]
   49d38:	ldrb	w1, [x1, w4, uxtw]
   49d3c:	cbz	w1, 49e18 <my_regprop@@Base+0xfb54>
   49d40:	and	w1, w0, #0xc000
   49d44:	cmp	w1, #0x8, lsl #12
   49d48:	b.eq	49e3c <my_regprop@@Base+0xfb78>  // b.none
   49d4c:	and	w0, w0, #0xff
   49d50:	cmp	w0, #0xf
   49d54:	b.eq	49e70 <my_regprop@@Base+0xfbac>  // b.none
   49d58:	ldr	x0, [x25]
   49d5c:	ldr	x0, [x0, #16]
   49d60:	ldr	x1, [sp, #272]
   49d64:	cmp	x0, x1
   49d68:	ldr	x5, [sp, #400]
   49d6c:	csel	x4, x25, x24, ne  // ne = any
   49d70:	mov	x1, x28
   49d74:	mov	x0, x27
   49d78:	bl	29858 <my_regexec@@Base+0x6364>
   49d7c:	b	47fb8 <my_regprop@@Base+0xdcf4>
   49d80:	mov	x0, x27
   49d84:	bl	5860 <Perl_sv_free2@plt>
   49d88:	b	49bb0 <my_regprop@@Base+0xf8ec>
   49d8c:	mov	x0, x27
   49d90:	bl	5860 <Perl_sv_free2@plt>
   49d94:	b	49bcc <my_regprop@@Base+0xf908>
   49d98:	ldr	x0, [sp, #392]
   49d9c:	bl	2d92c <my_regexec@@Base+0xa438>
   49da0:	tbz	x0, #63, 49db0 <my_regprop@@Base+0xfaec>
   49da4:	str	wzr, [sp, #184]
   49da8:	mov	w21, #0x16                  	// #22
   49dac:	b	49c2c <my_regprop@@Base+0xf968>
   49db0:	mov	x4, #0x0                   	// #0
   49db4:	mov	x3, #0x0                   	// #0
   49db8:	mov	x2, x19
   49dbc:	add	x1, sp, #0x218
   49dc0:	mov	x0, x27
   49dc4:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   49dc8:	ldr	x0, [sp, #392]
   49dcc:	bl	2d92c <my_regexec@@Base+0xa438>
   49dd0:	mov	x4, #0x0                   	// #0
   49dd4:	mov	x3, #0x0                   	// #0
   49dd8:	mov	x2, x0
   49ddc:	add	x1, sp, #0x228
   49de0:	mov	x0, x27
   49de4:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   49de8:	ldrb	w0, [sp, #552]
   49dec:	mov	w1, w0
   49df0:	ldrb	w0, [sp, #536]
   49df4:	cmp	w0, w1
   49df8:	csel	w0, w1, wzr, eq  // eq = none
   49dfc:	str	w0, [sp, #184]
   49e00:	b	49da8 <my_regprop@@Base+0xfae4>
   49e04:	mov	x0, x27
   49e08:	bl	5860 <Perl_sv_free2@plt>
   49e0c:	b	49d0c <my_regprop@@Base+0xfa48>
   49e10:	str	x2, [sp, #392]
   49e14:	b	49d0c <my_regprop@@Base+0xfa48>
   49e18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49e1c:	add	x3, x3, #0xc10
   49e20:	add	x3, x3, #0x870
   49e24:	mov	w2, #0x4a9d                	// #19101
   49e28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   49e2c:	add	x1, x1, #0xfb8
   49e30:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   49e34:	add	x0, x0, #0xe40
   49e38:	bl	58e0 <__assert_fail@plt>
   49e3c:	and	w1, w0, #0xff
   49e40:	sub	w1, w1, #0x9
   49e44:	cmp	w1, #0x1
   49e48:	b.hi	49d4c <my_regprop@@Base+0xfa88>  // b.pmore
   49e4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49e50:	add	x3, x3, #0xc10
   49e54:	add	x3, x3, #0x870
   49e58:	mov	w2, #0x4a9d                	// #19101
   49e5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   49e60:	add	x1, x1, #0xfb8
   49e64:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   49e68:	add	x0, x0, #0xe70
   49e6c:	bl	58e0 <__assert_fail@plt>
   49e70:	ldr	x0, [x25]
   49e74:	ldrb	w0, [x0, #129]
   49e78:	tbnz	w0, #6, 49d58 <my_regprop@@Base+0xfa94>
   49e7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   49e80:	add	x3, x3, #0xc10
   49e84:	add	x3, x3, #0x870
   49e88:	mov	w2, #0x4a9d                	// #19101
   49e8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   49e90:	add	x1, x1, #0xfb8
   49e94:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   49e98:	add	x0, x0, #0xe88
   49e9c:	bl	58e0 <__assert_fail@plt>
   49ea0:	ubfx	x2, x20, #2, #32
   49ea4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   49ea8:	add	x1, x1, #0xf58
   49eac:	mov	x0, x27
   49eb0:	bl	5420 <Perl_croak@plt>
   49eb4:	mov	x0, x27
   49eb8:	bl	5860 <Perl_sv_free2@plt>
   49ebc:	b	47fb8 <my_regprop@@Base+0xdcf4>
   49ec0:	ldr	x0, [sp, #336]
   49ec4:	cmp	x0, #0x7f
   49ec8:	b.hi	495b0 <my_regprop@@Base+0xf2ec>  // b.pmore
   49ecc:	mov	w20, #0x1                   	// #1
   49ed0:	b	49604 <my_regprop@@Base+0xf340>
   49ed4:	ldr	w0, [sp, #172]
   49ed8:	eor	w0, w0, #0x1
   49edc:	ldr	w1, [sp, #264]
   49ee0:	cmp	w1, #0x0
   49ee4:	cset	w1, eq  // eq = none
   49ee8:	tst	w1, w0
   49eec:	b.ne	4a17c <my_regprop@@Base+0xfeb8>  // b.any
   49ef0:	cbnz	w22, 49bcc <my_regprop@@Base+0xf908>
   49ef4:	str	xzr, [sp, #456]
   49ef8:	str	xzr, [sp, #464]
   49efc:	mov	w19, #0x1c                  	// #28
   49f00:	add	x0, sp, #0x188
   49f04:	str	x0, [sp, #176]
   49f08:	add	x1, sp, #0x1c8
   49f0c:	str	x1, [sp, #200]
   49f10:	str	x0, [sp, #208]
   49f14:	b	49b70 <my_regprop@@Base+0xf8ac>
   49f18:	ldr	x0, [x28, #64]
   49f1c:	cmp	x20, x0
   49f20:	b.ls	442f8 <my_regprop@@Base+0xa034>  // b.plast
   49f24:	b	43bb0 <my_regprop@@Base+0x98ec>
   49f28:	ldr	w0, [x28]
   49f2c:	ubfx	x0, x0, #2, #1
   49f30:	ldr	w2, [sp, #240]
   49f34:	and	w0, w2, w0
   49f38:	ldr	x2, [sp, #280]
   49f3c:	cmp	x1, x2
   49f40:	csel	w0, w0, wzr, eq  // eq = none
   49f44:	cbz	w0, 46f48 <my_regprop@@Base+0xcc84>
   49f48:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   49f4c:	ldr	x0, [x0, #3736]
   49f50:	ldr	x0, [x0]
   49f54:	bl	291a4 <my_regexec@@Base+0x5cb0>
   49f58:	and	w0, w0, #0xff
   49f5c:	cbz	w0, 46f48 <my_regprop@@Base+0xcc84>
   49f60:	b	4714c <my_regprop@@Base+0xce88>
   49f64:	ldr	x0, [sp, #208]
   49f68:	ldr	x1, [sp, #232]
   49f6c:	sub	x19, x0, x1
   49f70:	cmp	x1, x0
   49f74:	csel	w19, w19, wzr, ls  // ls = plast
   49f78:	ldr	x1, [x28, #24]
   49f7c:	cbz	x1, 49f8c <my_regprop@@Base+0xfcc8>
   49f80:	mov	w2, #0xb                   	// #11
   49f84:	mov	x0, x27
   49f88:	bl	54b0 <Perl_save_pushptr@plt>
   49f8c:	ldr	x1, [x28, #160]
   49f90:	cbz	x1, 49fa0 <my_regprop@@Base+0xfcdc>
   49f94:	mov	w2, #0xa                   	// #10
   49f98:	mov	x0, x27
   49f9c:	bl	54b0 <Perl_save_pushptr@plt>
   49fa0:	ldr	x1, [x28, #168]
   49fa4:	cbz	x1, 49fb4 <my_regprop@@Base+0xfcf0>
   49fa8:	mov	w2, #0xa                   	// #10
   49fac:	mov	x0, x27
   49fb0:	bl	54b0 <Perl_save_pushptr@plt>
   49fb4:	ldr	x0, [x28, #64]
   49fb8:	ldr	x1, [x28, #72]
   49fbc:	sub	x1, x0, x1
   49fc0:	ldr	x0, [x28, #80]
   49fc4:	add	x0, x0, x1
   49fc8:	ldr	x3, [x28, #16]
   49fcc:	cmp	x0, x3
   49fd0:	b.hi	46dd8 <my_regprop@@Base+0xcb14>  // b.pmore
   49fd4:	ldr	x2, [x28, #8]
   49fd8:	sub	x5, x3, x0
   49fdc:	subs	x4, x0, x2
   49fe0:	b.mi	46de8 <my_regprop@@Base+0xcb24>  // b.first
   49fe4:	ldr	w1, [x28, #192]
   49fe8:	cmp	w1, #0x0
   49fec:	cset	w1, ne  // ne = any
   49ff0:	cmp	x0, x3
   49ff4:	csel	x0, x0, x3, ls  // ls = plast
   49ff8:	str	x0, [sp, #32]
   49ffc:	str	x5, [sp, #24]
   4a000:	str	w1, [sp, #16]
   4a004:	str	x2, [sp, #8]
   4a008:	str	x4, [sp]
   4a00c:	mov	w7, w1
   4a010:	ldr	x6, [sp, #232]
   4a014:	mov	w5, w19
   4a018:	mov	w4, w19
   4a01c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4a020:	add	x3, x3, #0x5d8
   4a024:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4a028:	add	x2, x2, #0xb78
   4a02c:	mov	x0, x27
   4a030:	bl	273ac <my_regexec@@Base+0x3eb8>
   4a034:	ldr	x1, [sp, #376]
   4a038:	and	x0, x0, #0xff
   4a03c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4a040:	ldr	x2, [x2, #3928]
   4a044:	ldr	x2, [x2, x0, lsl #3]
   4a048:	b	46b38 <my_regprop@@Base+0xc874>
   4a04c:	mov	x0, #0x4                   	// #4
   4a050:	str	x0, [sp, #344]
   4a054:	ldr	x1, [x28, #64]
   4a058:	sub	x1, x1, #0x1
   4a05c:	str	x1, [x28, #64]
   4a060:	mov	x4, #0x0                   	// #0
   4a064:	add	x3, sp, #0x1d0
   4a068:	add	x2, sp, #0x158
   4a06c:	mov	x0, x27
   4a070:	bl	52e0 <Perl_grok_oct@plt>
   4a074:	str	x0, [sp, #336]
   4a078:	ldr	x3, [sp, #344]
   4a07c:	ldr	x4, [x28, #64]
   4a080:	add	x0, x4, x3
   4a084:	str	x0, [x28, #64]
   4a088:	cmp	x3, #0x3
   4a08c:	b.eq	46148 <my_regprop@@Base+0xbe84>  // b.none
   4a090:	ldr	w1, [x28, #192]
   4a094:	cbz	w1, 4617c <my_regprop@@Base+0xbeb8>
   4a098:	ldr	x1, [x28, #56]
   4a09c:	cmp	x1, x0
   4a0a0:	b.cc	46158 <my_regprop@@Base+0xbe94>  // b.lo, b.ul, b.last
   4a0a4:	sub	x2, x1, x0
   4a0a8:	cmp	x2, #0x0
   4a0ac:	b.le	46228 <my_regprop@@Base+0xbf64>
   4a0b0:	ldrb	w3, [x4, x3]
   4a0b4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a0b8:	ldr	x1, [x1, #4064]
   4a0bc:	ldrb	w1, [x1, x3]
   4a0c0:	cmp	x1, x2
   4a0c4:	csel	x1, x1, x2, le
   4a0c8:	b	46180 <my_regprop@@Base+0xbebc>
   4a0cc:	ldr	x0, [x28, #48]
   4a0d0:	ldr	x1, [sp, #296]
   4a0d4:	sub	x1, x1, #0xb
   4a0d8:	cmp	x1, x0
   4a0dc:	b.eq	45a1c <my_regprop@@Base+0xb758>  // b.none
   4a0e0:	ldrb	w0, [sp, #464]
   4a0e4:	cbz	w0, 45b6c <my_regprop@@Base+0xb8a8>
   4a0e8:	ldr	x0, [sp, #336]
   4a0ec:	cmp	x0, #0x50
   4a0f0:	b.eq	45c94 <my_regprop@@Base+0xb9d0>  // b.none
   4a0f4:	add	x4, sp, #0x160
   4a0f8:	mov	w3, #0x0                   	// #0
   4a0fc:	ldr	x2, [sp, #280]
   4a100:	ldr	x1, [sp, #352]
   4a104:	mov	x0, x27
   4a108:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4a10c:	b	459e8 <my_regprop@@Base+0xb724>
   4a110:	ldr	x0, [sp, #336]
   4a114:	str	x0, [sp, #304]
   4a118:	str	wzr, [sp, #192]
   4a11c:	str	wzr, [sp, #264]
   4a120:	str	wzr, [sp, #184]
   4a124:	str	wzr, [sp, #292]
   4a128:	str	xzr, [sp, #224]
   4a12c:	str	xzr, [sp, #144]
   4a130:	str	xzr, [sp, #176]
   4a134:	mov	x0, #0xbeef                	// #48879
   4a138:	movk	x0, #0xdead, lsl #16
   4a13c:	str	x0, [sp, #256]
   4a140:	ldr	x0, [x28, #64]
   4a144:	str	x0, [sp, #232]
   4a148:	ldr	x0, [sp, #176]
   4a14c:	add	x0, x0, #0x1
   4a150:	str	x0, [sp, #176]
   4a154:	str	xzr, [sp, #208]
   4a158:	str	wzr, [sp, #244]
   4a15c:	b	43c18 <my_regprop@@Base+0x9954>
   4a160:	mov	w26, #0x0                   	// #0
   4a164:	mov	x19, #0xffffffffffffffff    	// #-1
   4a168:	b	49700 <my_regprop@@Base+0xf43c>
   4a16c:	sub	x0, x19, #0x1
   4a170:	cmp	x0, #0x3
   4a174:	b.hi	48dd0 <my_regprop@@Base+0xeb0c>  // b.pmore
   4a178:	b	4a188 <my_regprop@@Base+0xfec4>
   4a17c:	sub	x0, x19, #0x1
   4a180:	cmp	x0, #0x3
   4a184:	b.hi	49ef0 <my_regprop@@Base+0xfc2c>  // b.pmore
   4a188:	ldr	x1, [sp, #472]
   4a18c:	cmp	x1, #0xff
   4a190:	b.ls	4a1a4 <my_regprop@@Base+0xfee0>  // b.plast
   4a194:	ldr	w0, [x28, #192]
   4a198:	cbnz	w0, 4a1a4 <my_regprop@@Base+0xfee0>
   4a19c:	ldr	w0, [x28]
   4a1a0:	tbz	w0, #2, 4a1b8 <my_regprop@@Base+0xfef4>
   4a1a4:	cmp	x19, #0x1
   4a1a8:	b.eq	490b4 <my_regprop@@Base+0xedf0>  // b.none
   4a1ac:	ldr	w0, [sp, #192]
   4a1b0:	ands	w26, w0, #0xfffffffd
   4a1b4:	b.eq	491b0 <my_regprop@@Base+0xeeec>  // b.none
   4a1b8:	ldr	w0, [sp, #192]
   4a1bc:	cbnz	w0, 49ef0 <my_regprop@@Base+0xfc2c>
   4a1c0:	b	48dd0 <my_regprop@@Base+0xeb0c>
   4a1c4:	ldr	x20, [sp, #352]
   4a1c8:	cbz	x20, 4856c <my_regprop@@Base+0xe2a8>
   4a1cc:	ldr	x19, [sp, #392]
   4a1d0:	b	48518 <my_regprop@@Base+0xe254>
   4a1d4:	ldr	x0, [x28, #64]
   4a1d8:	str	x0, [sp, #248]
   4a1dc:	sub	x0, x0, #0x1
   4a1e0:	str	x0, [sp, #408]
   4a1e4:	str	xzr, [sp, #416]
   4a1e8:	mov	w1, #0x14                  	// #20
   4a1ec:	mov	x0, x27
   4a1f0:	bl	5870 <Perl_ckwarn@plt>
   4a1f4:	and	w0, w0, #0xff
   4a1f8:	str	w0, [sp, #268]
   4a1fc:	str	xzr, [sp, #424]
   4a200:	str	wzr, [sp, #200]
   4a204:	b	4394c <my_regprop@@Base+0x9688>
   4a208:	bl	5300 <__stack_chk_fail@plt>
   4a20c:	sub	sp, sp, #0x100
   4a210:	stp	x29, x30, [sp, #32]
   4a214:	add	x29, sp, #0x20
   4a218:	stp	x19, x20, [sp, #48]
   4a21c:	stp	x21, x22, [sp, #64]
   4a220:	stp	x23, x24, [sp, #80]
   4a224:	mov	x21, x0
   4a228:	mov	x23, x1
   4a22c:	str	x2, [sp, #184]
   4a230:	str	x3, [sp, #128]
   4a234:	str	w4, [sp, #148]
   4a238:	str	x5, [sp, #160]
   4a23c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4a240:	ldr	x0, [x0, #3920]
   4a244:	ldr	x1, [x0]
   4a248:	str	x1, [sp, #248]
   4a24c:	mov	x1, #0x0                   	// #0
   4a250:	str	xzr, [sp, #200]
   4a254:	ldr	w0, [x23]
   4a258:	str	w0, [sp, #176]
   4a25c:	ubfx	x0, x0, #7, #3
   4a260:	str	x0, [sp, #168]
   4a264:	str	xzr, [sp, #208]
   4a268:	ldr	x0, [x21, #224]
   4a26c:	cbz	x0, 4a2d4 <my_regprop@@Base+0x10010>
   4a270:	mov	w2, #0x1                   	// #1
   4a274:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   4a278:	add	x1, x1, #0x608
   4a27c:	mov	x0, x21
   4a280:	bl	54f0 <Perl_get_sv@plt>
   4a284:	mov	x19, x0
   4a288:	cbz	x0, 4a2d4 <my_regprop@@Base+0x10010>
   4a28c:	ldr	w0, [x0, #12]
   4a290:	tbz	w0, #8, 4a444 <my_regprop@@Base+0x10180>
   4a294:	ldr	w1, [x19, #12]
   4a298:	and	w0, w1, #0x3fff00
   4a29c:	and	w0, w0, #0xffe001ff
   4a2a0:	cmp	w0, #0x100
   4a2a4:	b.ne	4a4c0 <my_regprop@@Base+0x101fc>  // b.any
   4a2a8:	and	w2, w1, #0xf
   4a2ac:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4a2b0:	ldr	x0, [x0, #3712]
   4a2b4:	ldrb	w0, [x0, w2, uxtw]
   4a2b8:	cbz	w0, 4a458 <my_regprop@@Base+0x10194>
   4a2bc:	and	w0, w1, #0xc000
   4a2c0:	cmp	w0, #0x8, lsl #12
   4a2c4:	b.eq	4a484 <my_regprop@@Base+0x101c0>  // b.none
   4a2c8:	ldr	x0, [x19]
   4a2cc:	ldr	x0, [x0, #32]
   4a2d0:	str	x0, [sp, #208]
   4a2d4:	ldr	x0, [sp, #128]
   4a2d8:	cbz	x0, 4a4d4 <my_regprop@@Base+0x10210>
   4a2dc:	ldr	x0, [sp, #160]
   4a2e0:	cbz	x0, 4a500 <my_regprop@@Base+0x1023c>
   4a2e4:	ldr	w0, [x21, #2368]
   4a2e8:	tbnz	w0, #20, 4a2f4 <my_regprop@@Base+0x10030>
   4a2ec:	ldr	x0, [sp, #208]
   4a2f0:	tbz	w0, #0, 4a3c0 <my_regprop@@Base+0x100fc>
   4a2f4:	ldr	w0, [x21, #2368]
   4a2f8:	tbnz	w0, #20, 4a304 <my_regprop@@Base+0x10040>
   4a2fc:	ldr	x0, [sp, #208]
   4a300:	tbz	w0, #0, 4a3a8 <my_regprop@@Base+0x100e4>
   4a304:	ldr	x2, [x23, #64]
   4a308:	ldr	x0, [x23, #336]
   4a30c:	cmp	x0, x2
   4a310:	b.eq	4a52c <my_regprop@@Base+0x10268>  // b.none
   4a314:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   4a318:	add	x5, x5, #0x20
   4a31c:	ldr	x3, [x23, #56]
   4a320:	mov	w7, #0x820e                	// #33294
   4a324:	mov	x6, x5
   4a328:	mov	x4, #0x10                  	// #16
   4a32c:	sub	x3, x3, x2
   4a330:	ldr	x1, [x23, #368]
   4a334:	mov	x0, x21
   4a338:	bl	53f0 <Perl_pv_pretty@plt>
   4a33c:	mov	x2, x0
   4a340:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4a344:	add	x1, x1, #0xb50
   4a348:	mov	x0, x21
   4a34c:	bl	50e0 <Perl_re_printf@plt>
   4a350:	ldr	x2, [x23, #104]
   4a354:	ldrsw	x0, [x23, #344]
   4a358:	cmp	x0, x2
   4a35c:	b.eq	4a548 <my_regprop@@Base+0x10284>  // b.none
   4a360:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4a364:	add	x1, x1, #0x800
   4a368:	mov	x0, x21
   4a36c:	bl	50e0 <Perl_re_printf@plt>
   4a370:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   4a374:	add	x4, x4, #0xea0
   4a378:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4a37c:	add	x3, x3, #0x20
   4a380:	ldr	w0, [sp, #148]
   4a384:	lsl	w2, w0, #1
   4a388:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4a38c:	add	x1, x1, #0x818
   4a390:	mov	x0, x21
   4a394:	bl	50e0 <Perl_re_printf@plt>
   4a398:	ldr	x0, [x23, #104]
   4a39c:	str	w0, [x23, #344]
   4a3a0:	ldr	x0, [x23, #64]
   4a3a4:	str	x0, [x23, #336]
   4a3a8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   4a3ac:	add	x2, x2, #0x8d8
   4a3b0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   4a3b4:	add	x1, x1, #0x718
   4a3b8:	mov	x0, x21
   4a3bc:	bl	50e0 <Perl_re_printf@plt>
   4a3c0:	ldr	w0, [sp, #168]
   4a3c4:	cmp	w0, #0x1
   4a3c8:	b.eq	4a564 <my_regprop@@Base+0x102a0>  // b.none
   4a3cc:	ldr	w0, [x23]
   4a3d0:	tst	x0, #0x380
   4a3d4:	b.ne	4a578 <my_regprop@@Base+0x102b4>  // b.any
   4a3d8:	and	w0, w0, #0xfffffc7f
   4a3dc:	orr	w0, w0, #0x100
   4a3e0:	str	w0, [x23]
   4a3e4:	mov	w0, #0x1                   	// #1
   4a3e8:	str	w0, [x23, #200]
   4a3ec:	ldrb	w0, [x23, #384]
   4a3f0:	cbz	w0, 4a578 <my_regprop@@Base+0x102b4>
   4a3f4:	ldr	w0, [x23, #148]
   4a3f8:	tbnz	w0, #31, 4a578 <my_regprop@@Base+0x102b4>
   4a3fc:	ldr	x1, [sp, #128]
   4a400:	ldr	w0, [x1]
   4a404:	orr	w0, w0, #0x20
   4a408:	str	w0, [x1]
   4a40c:	mov	x24, #0x0                   	// #0
   4a410:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4a414:	ldr	x0, [x0, #3920]
   4a418:	ldr	x1, [sp, #248]
   4a41c:	ldr	x0, [x0]
   4a420:	eor	x0, x1, x0
   4a424:	cbnz	x0, 4c694 <my_regprop@@Base+0x123d0>
   4a428:	mov	x0, x24
   4a42c:	ldp	x19, x20, [sp, #48]
   4a430:	ldp	x21, x22, [sp, #64]
   4a434:	ldp	x23, x24, [sp, #80]
   4a438:	ldp	x29, x30, [sp, #32]
   4a43c:	add	sp, sp, #0x100
   4a440:	ret
   4a444:	mov	x2, #0xff08                	// #65288
   4a448:	mov	x1, x19
   4a44c:	mov	x0, x21
   4a450:	bl	5310 <Perl_sv_setuv@plt>
   4a454:	b	4a294 <my_regprop@@Base+0xffd0>
   4a458:	stp	x25, x26, [sp, #96]
   4a45c:	stp	x27, x28, [sp, #112]
   4a460:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4a464:	add	x3, x3, #0xc10
   4a468:	add	x3, x3, #0x900
   4a46c:	mov	w2, #0x3d64                	// #15716
   4a470:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4a474:	add	x1, x1, #0xfb8
   4a478:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4a47c:	add	x0, x0, #0xda0
   4a480:	bl	58e0 <__assert_fail@plt>
   4a484:	and	w0, w1, #0xff
   4a488:	sub	w0, w0, #0x9
   4a48c:	cmp	w0, #0x1
   4a490:	b.hi	4a2c8 <my_regprop@@Base+0x10004>  // b.pmore
   4a494:	stp	x25, x26, [sp, #96]
   4a498:	stp	x27, x28, [sp, #112]
   4a49c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4a4a0:	add	x3, x3, #0xc10
   4a4a4:	add	x3, x3, #0x900
   4a4a8:	mov	w2, #0x3d64                	// #15716
   4a4ac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4a4b0:	add	x1, x1, #0xfb8
   4a4b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4a4b8:	add	x0, x0, #0xdd0
   4a4bc:	bl	58e0 <__assert_fail@plt>
   4a4c0:	mov	w2, #0x2                   	// #2
   4a4c4:	mov	x1, x19
   4a4c8:	mov	x0, x21
   4a4cc:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   4a4d0:	b	4a2d0 <my_regprop@@Base+0x1000c>
   4a4d4:	stp	x25, x26, [sp, #96]
   4a4d8:	stp	x27, x28, [sp, #112]
   4a4dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4a4e0:	add	x3, x3, #0xc10
   4a4e4:	add	x3, x3, #0x900
   4a4e8:	mov	w2, #0x3d66                	// #15718
   4a4ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4a4f0:	add	x1, x1, #0xfb8
   4a4f4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   4a4f8:	add	x0, x0, #0xfd0
   4a4fc:	bl	58e0 <__assert_fail@plt>
   4a500:	stp	x25, x26, [sp, #96]
   4a504:	stp	x27, x28, [sp, #112]
   4a508:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4a50c:	add	x3, x3, #0xc10
   4a510:	add	x3, x3, #0x900
   4a514:	mov	w2, #0x3d66                	// #15718
   4a518:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4a51c:	add	x1, x1, #0xfb8
   4a520:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4a524:	add	x0, x0, #0xe90
   4a528:	bl	58e0 <__assert_fail@plt>
   4a52c:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4a530:	add	x2, x2, #0x20
   4a534:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4a538:	add	x1, x1, #0x7f8
   4a53c:	mov	x0, x21
   4a540:	bl	50e0 <Perl_re_printf@plt>
   4a544:	b	4a350 <my_regprop@@Base+0x1008c>
   4a548:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4a54c:	add	x2, x2, #0x20
   4a550:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4a554:	add	x1, x1, #0x808
   4a558:	mov	x0, x21
   4a55c:	bl	50e0 <Perl_re_printf@plt>
   4a560:	b	4a370 <my_regprop@@Base+0x100ac>
   4a564:	ldr	w0, [x23]
   4a568:	and	w0, w0, #0xfffffc7f
   4a56c:	orr	w0, w0, #0x100
   4a570:	str	w0, [x23]
   4a574:	b	4a3cc <my_regprop@@Base+0x10108>
   4a578:	stp	x25, x26, [sp, #96]
   4a57c:	stp	x27, x28, [sp, #112]
   4a580:	ldr	x1, [x23, #72]
   4a584:	cbz	x1, 4a6e0 <my_regprop@@Base+0x1041c>
   4a588:	ldr	x0, [x23, #64]
   4a58c:	sub	x1, x0, x1
   4a590:	ldr	x0, [x23, #80]
   4a594:	add	x0, x0, x1
   4a598:	ldr	x1, [x23, #8]
   4a59c:	sub	x0, x0, x1
   4a5a0:	ldr	x1, [x23, #136]
   4a5a4:	cmp	x0, x1
   4a5a8:	b.le	4a67c <my_regprop@@Base+0x103b8>
   4a5ac:	ldr	x0, [x21, #224]
   4a5b0:	cbz	x0, 4a5d8 <my_regprop@@Base+0x10314>
   4a5b4:	ldr	x0, [x0, #64]
   4a5b8:	cmp	x0, #0x0
   4a5bc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a5c0:	ldr	x1, [x1, #3984]
   4a5c4:	ccmp	x0, x1, #0x4, ne  // ne = any
   4a5c8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a5cc:	ldr	x1, [x1, #3832]
   4a5d0:	ccmp	x0, x1, #0x4, ne  // ne = any
   4a5d4:	b.ne	4a700 <my_regprop@@Base+0x1043c>  // b.any
   4a5d8:	ldr	w0, [x23, #192]
   4a5dc:	cmp	w0, #0x0
   4a5e0:	cset	w3, ne  // ne = any
   4a5e4:	ldr	x0, [x23, #64]
   4a5e8:	ldr	x1, [x23, #72]
   4a5ec:	sub	x1, x0, x1
   4a5f0:	ldr	x0, [x23, #80]
   4a5f4:	add	x0, x0, x1
   4a5f8:	ldr	x1, [x23, #16]
   4a5fc:	cmp	x0, x1
   4a600:	b.ls	4a748 <my_regprop@@Base+0x10484>  // b.plast
   4a604:	ldr	x5, [x23, #8]
   4a608:	sub	x4, x1, x5
   4a60c:	mov	x7, #0x0                   	// #0
   4a610:	cmp	x0, x1
   4a614:	csel	x0, x0, x1, ls  // ls = plast
   4a618:	str	x0, [sp]
   4a61c:	mov	w6, w3
   4a620:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4a624:	add	x2, x2, #0xea8
   4a628:	mov	w1, #0x35                  	// #53
   4a62c:	mov	x0, x21
   4a630:	bl	5630 <Perl_ck_warner_d@plt>
   4a634:	ldr	x1, [x23, #72]
   4a638:	cbz	x1, 4a67c <my_regprop@@Base+0x103b8>
   4a63c:	ldr	x0, [x23, #64]
   4a640:	sub	x1, x0, x1
   4a644:	ldr	x0, [x23, #80]
   4a648:	add	x0, x0, x1
   4a64c:	ldr	x2, [x23, #8]
   4a650:	sub	x3, x0, x2
   4a654:	ldr	x1, [x23, #136]
   4a658:	cmp	x3, x1
   4a65c:	b.le	4a67c <my_regprop@@Base+0x103b8>
   4a660:	ldr	x1, [x23, #16]
   4a664:	cmp	x1, x0
   4a668:	csel	x0, x1, x0, ls  // ls = plast
   4a66c:	cmp	x2, x0
   4a670:	csel	x0, x2, x0, hi  // hi = pmore
   4a674:	sub	x0, x0, x2
   4a678:	str	x0, [x23, #136]
   4a67c:	mov	w1, #0xb                   	// #11
   4a680:	mov	x0, x21
   4a684:	bl	57e0 <Perl_newSV_type@plt>
   4a688:	mov	x22, x0
   4a68c:	mov	x1, x0
   4a690:	mov	x0, x21
   4a694:	bl	55d0 <Perl_sv_2mortal@plt>
   4a698:	mov	w1, #0xb                   	// #11
   4a69c:	mov	x0, x21
   4a6a0:	bl	57e0 <Perl_newSV_type@plt>
   4a6a4:	str	x0, [sp, #136]
   4a6a8:	mov	x1, x0
   4a6ac:	mov	x0, x21
   4a6b0:	bl	55d0 <Perl_sv_2mortal@plt>
   4a6b4:	ldr	x1, [x23, #64]
   4a6b8:	ldr	x0, [x23, #56]
   4a6bc:	cmp	x1, x0
   4a6c0:	b.cs	4be38 <my_regprop@@Base+0x11b74>  // b.hs, b.nlast
   4a6c4:	mov	w25, #0x100                 	// #256
   4a6c8:	movk	w25, #0x8020, lsl #16
   4a6cc:	mov	w24, #0x100                 	// #256
   4a6d0:	movk	w24, #0x8000, lsl #16
   4a6d4:	add	x0, sp, #0xe0
   4a6d8:	str	x0, [sp, #152]
   4a6dc:	b	4a87c <my_regprop@@Base+0x105b8>
   4a6e0:	ldr	x4, [x23, #64]
   4a6e4:	mov	w3, #0x3d72                	// #15730
   4a6e8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4a6ec:	add	x2, x2, #0xfb8
   4a6f0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4a6f4:	add	x1, x1, #0xab8
   4a6f8:	mov	x0, x21
   4a6fc:	bl	5420 <Perl_croak@plt>
   4a700:	ldrb	w0, [x0, #21]
   4a704:	tbz	w0, #3, 4a5d8 <my_regprop@@Base+0x10314>
   4a708:	ldr	x1, [x23, #24]
   4a70c:	cbz	x1, 4a71c <my_regprop@@Base+0x10458>
   4a710:	mov	w2, #0xb                   	// #11
   4a714:	mov	x0, x21
   4a718:	bl	54b0 <Perl_save_pushptr@plt>
   4a71c:	ldr	x1, [x23, #160]
   4a720:	cbz	x1, 4a730 <my_regprop@@Base+0x1046c>
   4a724:	mov	w2, #0xa                   	// #10
   4a728:	mov	x0, x21
   4a72c:	bl	54b0 <Perl_save_pushptr@plt>
   4a730:	ldr	x1, [x23, #168]
   4a734:	cbz	x1, 4a5d8 <my_regprop@@Base+0x10314>
   4a738:	mov	w2, #0xa                   	// #10
   4a73c:	mov	x0, x21
   4a740:	bl	54b0 <Perl_save_pushptr@plt>
   4a744:	b	4a5d8 <my_regprop@@Base+0x10314>
   4a748:	ldr	x5, [x23, #8]
   4a74c:	subs	x4, x0, x5
   4a750:	b.mi	4a75c <my_regprop@@Base+0x10498>  // b.first
   4a754:	sub	x7, x1, x0
   4a758:	b	4a610 <my_regprop@@Base+0x1034c>
   4a75c:	ldr	x6, [x23, #48]
   4a760:	ldr	x5, [x23, #56]
   4a764:	sub	w5, w5, w6
   4a768:	mov	w3, #0x3d72                	// #15730
   4a76c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4a770:	add	x2, x2, #0xfb8
   4a774:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4a778:	add	x1, x1, #0x870
   4a77c:	mov	x0, x21
   4a780:	bl	5420 <Perl_croak@plt>
   4a784:	cmp	w19, #0x21
   4a788:	b.ne	4a80c <my_regprop@@Base+0x10548>  // b.any
   4a78c:	mov	w3, #0x0                   	// #0
   4a790:	sxtw	x2, w20
   4a794:	mov	x1, x22
   4a798:	mov	x0, x21
   4a79c:	bl	56f0 <Perl_av_fetch@plt>
   4a7a0:	cbz	x0, 4a7ec <my_regprop@@Base+0x10528>
   4a7a4:	ldr	x1, [x0]
   4a7a8:	ldr	w0, [x1, #12]
   4a7ac:	tbz	w0, #8, 4a7ec <my_regprop@@Base+0x10528>
   4a7b0:	and	w2, w0, w25
   4a7b4:	cmp	w2, w24
   4a7b8:	b.ne	4b870 <my_regprop@@Base+0x115ac>  // b.any
   4a7bc:	and	w3, w0, #0xf
   4a7c0:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4a7c4:	ldr	x2, [x2, #3712]
   4a7c8:	ldrb	w2, [x2, w3, uxtw]
   4a7cc:	cbz	w2, 4b818 <my_regprop@@Base+0x11554>
   4a7d0:	and	w2, w0, #0xc000
   4a7d4:	cmp	w2, #0x8, lsl #12
   4a7d8:	b.eq	4b83c <my_regprop@@Base+0x11578>  // b.none
   4a7dc:	ldr	x0, [x1]
   4a7e0:	ldr	x0, [x0, #32]
   4a7e4:	cmp	x0, #0x21
   4a7e8:	b.eq	4b884 <my_regprop@@Base+0x115c0>  // b.none
   4a7ec:	mov	x1, #0x21                  	// #33
   4a7f0:	mov	x0, x21
   4a7f4:	bl	5640 <Perl_newSVuv@plt>
   4a7f8:	mov	x2, x0
   4a7fc:	mov	x1, x22
   4a800:	mov	x0, x21
   4a804:	bl	5430 <Perl_av_push@plt>
   4a808:	b	4a848 <my_regprop@@Base+0x10584>
   4a80c:	cmp	w19, #0x26
   4a810:	b.eq	4ab58 <my_regprop@@Base+0x10894>  // b.none
   4a814:	ldr	x0, [x23, #64]
   4a818:	ldr	w2, [x23, #192]
   4a81c:	mov	x1, #0x1                   	// #1
   4a820:	cbz	w2, 4a834 <my_regprop@@Base+0x10570>
   4a824:	ldrb	w2, [x0]
   4a828:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a82c:	ldr	x1, [x1, #4064]
   4a830:	ldrb	w1, [x1, w2, sxtw]
   4a834:	add	x0, x0, x1
   4a838:	str	x0, [x23, #64]
   4a83c:	ldr	x1, [x23, #56]
   4a840:	cmp	x0, x1
   4a844:	b.cc	4b8bc <my_regprop@@Base+0x115f8>  // b.lo, b.ul, b.last
   4a848:	ldr	x0, [x23, #64]
   4a84c:	ldr	w2, [x23, #192]
   4a850:	mov	x1, #0x1                   	// #1
   4a854:	cbz	w2, 4a868 <my_regprop@@Base+0x105a4>
   4a858:	ldrb	w2, [x0]
   4a85c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a860:	ldr	x1, [x1, #4064]
   4a864:	ldrb	w1, [x1, w2, sxtw]
   4a868:	add	x0, x0, x1
   4a86c:	str	x0, [x23, #64]
   4a870:	ldr	x1, [x23, #56]
   4a874:	cmp	x0, x1
   4a878:	b.cs	4be38 <my_regprop@@Base+0x11b74>  // b.hs, b.nlast
   4a87c:	str	xzr, [sp, #216]
   4a880:	mov	w3, #0x1                   	// #1
   4a884:	add	x2, x23, #0x40
   4a888:	mov	x1, x23
   4a88c:	mov	x0, x21
   4a890:	bl	266ac <my_regexec@@Base+0x31b8>
   4a894:	ldr	x0, [x23, #64]
   4a898:	ldr	x1, [x23, #56]
   4a89c:	cmp	x0, x1
   4a8a0:	b.cs	4be38 <my_regprop@@Base+0x11b74>  // b.hs, b.nlast
   4a8a4:	ldrb	w19, [x0]
   4a8a8:	ldrb	w0, [x22, #12]
   4a8ac:	cmp	w0, #0xb
   4a8b0:	b.ne	4b71c <my_regprop@@Base+0x11458>  // b.any
   4a8b4:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   4a8b8:	ldr	x26, [x26, #3712]
   4a8bc:	ldr	x0, [x22]
   4a8c0:	ldr	x20, [x0, #16]
   4a8c4:	mov	w27, w20
   4a8c8:	cmp	w19, #0x2d
   4a8cc:	b.eq	4ab58 <my_regprop@@Base+0x10894>  // b.none
   4a8d0:	b.hi	4a9cc <my_regprop@@Base+0x10708>  // b.pmore
   4a8d4:	cmp	w19, #0x28
   4a8d8:	b.eq	4abec <my_regprop@@Base+0x10928>  // b.none
   4a8dc:	b.ls	4a784 <my_regprop@@Base+0x104c0>  // b.plast
   4a8e0:	cmp	w19, #0x29
   4a8e4:	b.ne	4a9c0 <my_regprop@@Base+0x106fc>  // b.any
   4a8e8:	ldr	x0, [sp, #136]
   4a8ec:	ldrb	w0, [x0, #12]
   4a8f0:	cmp	w0, #0xb
   4a8f4:	b.ne	4b2fc <my_regprop@@Base+0x11038>  // b.any
   4a8f8:	ldr	x0, [sp, #136]
   4a8fc:	ldr	x0, [x0]
   4a900:	ldr	x0, [x0, #16]
   4a904:	tbnz	x0, #63, 4b320 <my_regprop@@Base+0x1105c>
   4a908:	sxtw	x0, w20
   4a90c:	ldr	x1, [sp, #200]
   4a910:	cmp	x0, x1
   4a914:	b.mi	4b410 <my_regprop@@Base+0x1114c>  // b.first
   4a918:	ldr	x1, [sp, #200]
   4a91c:	sub	x0, x0, x1
   4a920:	cmp	x0, #0x0
   4a924:	b.gt	4a9e8 <my_regprop@@Base+0x10724>
   4a928:	ldr	x1, [sp, #136]
   4a92c:	mov	x0, x21
   4a930:	bl	5510 <Perl_av_pop@plt>
   4a934:	mov	x20, x0
   4a938:	cbz	x0, 4b420 <my_regprop@@Base+0x1115c>
   4a93c:	ldr	w0, [x0, #12]
   4a940:	and	w1, w0, #0x3fff00
   4a944:	and	w1, w1, #0xffe001ff
   4a948:	cmp	w1, #0x100
   4a94c:	b.ne	4b49c <my_regprop@@Base+0x111d8>  // b.any
   4a950:	and	w2, w0, #0xf
   4a954:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4a958:	ldr	x1, [x1, #3712]
   4a95c:	ldrb	w1, [x1, w2, uxtw]
   4a960:	cbz	w1, 4b444 <my_regprop@@Base+0x11180>
   4a964:	and	w1, w0, #0xc000
   4a968:	cmp	w1, #0x8, lsl #12
   4a96c:	b.eq	4b468 <my_regprop@@Base+0x111a4>  // b.none
   4a970:	ldr	x0, [x20]
   4a974:	ldr	x0, [x0, #32]
   4a978:	str	x0, [sp, #200]
   4a97c:	ldr	w2, [x20, #8]
   4a980:	cmp	w2, #0x1
   4a984:	b.ls	4b4b0 <my_regprop@@Base+0x111ec>  // b.plast
   4a988:	sub	w2, w2, #0x1
   4a98c:	str	w2, [x20, #8]
   4a990:	ldr	x0, [sp, #200]
   4a994:	tbnz	x0, #63, 4b4c0 <my_regprop@@Base+0x111fc>
   4a998:	mov	x1, x22
   4a99c:	mov	x0, x21
   4a9a0:	bl	5510 <Perl_av_pop@plt>
   4a9a4:	str	x0, [sp, #216]
   4a9a8:	ldr	w0, [x0, #12]
   4a9ac:	tbz	w0, #8, 4b294 <my_regprop@@Base+0x10fd0>
   4a9b0:	ldr	x0, [x23, #64]
   4a9b4:	add	x0, x0, #0x1
   4a9b8:	str	x0, [x23, #64]
   4a9bc:	b	4c0d0 <my_regprop@@Base+0x11e0c>
   4a9c0:	cmp	w19, #0x2b
   4a9c4:	b.eq	4ab58 <my_regprop@@Base+0x10894>  // b.none
   4a9c8:	b	4a814 <my_regprop@@Base+0x10550>
   4a9cc:	cmp	w19, #0x5c
   4a9d0:	b.eq	4b250 <my_regprop@@Base+0x10f8c>  // b.none
   4a9d4:	b.ls	4aac0 <my_regprop@@Base+0x107fc>  // b.plast
   4a9d8:	cmp	w19, #0x5d
   4a9dc:	b.ne	4ab48 <my_regprop@@Base+0x10884>  // b.any
   4a9e0:	cmp	w20, #0x0
   4a9e4:	b.le	4bd74 <my_regprop@@Base+0x11ab0>
   4a9e8:	sub	w2, w20, #0x2
   4a9ec:	mov	w3, #0x0                   	// #0
   4a9f0:	sxtw	x2, w2
   4a9f4:	mov	x1, x22
   4a9f8:	mov	x0, x21
   4a9fc:	bl	56f0 <Perl_av_fetch@plt>
   4aa00:	cbz	x0, 4b4c8 <my_regprop@@Base+0x11204>
   4aa04:	ldr	x1, [x0]
   4aa08:	ldr	w0, [x1, #12]
   4aa0c:	tbz	w0, #8, 4b4c8 <my_regprop@@Base+0x11204>
   4aa10:	and	w2, w0, w25
   4aa14:	cmp	w2, w24
   4aa18:	b.ne	4b61c <my_regprop@@Base+0x11358>  // b.any
   4aa1c:	and	w2, w0, #0xf
   4aa20:	ldrb	w2, [x26, w2, uxtw]
   4aa24:	cbz	w2, 4b5c4 <my_regprop@@Base+0x11300>
   4aa28:	and	w2, w0, #0xc000
   4aa2c:	cmp	w2, #0x8, lsl #12
   4aa30:	b.eq	4b5e8 <my_regprop@@Base+0x11324>  // b.none
   4aa34:	ldr	x0, [x1]
   4aa38:	ldrb	w20, [x0, #32]
   4aa3c:	mov	w0, w19
   4aa40:	bl	262a0 <my_regexec@@Base+0x2dac>
   4aa44:	mov	w27, w0
   4aa48:	mov	w0, w20
   4aa4c:	bl	262a0 <my_regexec@@Base+0x2dac>
   4aa50:	cmp	w27, w0
   4aa54:	b.hi	4b630 <my_regprop@@Base+0x1136c>  // b.pmore
   4aa58:	mov	x1, x22
   4aa5c:	mov	x0, x21
   4aa60:	bl	5510 <Perl_av_pop@plt>
   4aa64:	str	x0, [sp, #224]
   4aa68:	ldr	w0, [x0, #12]
   4aa6c:	tbnz	w0, #8, 4c0d0 <my_regprop@@Base+0x11e0c>
   4aa70:	mov	x1, x22
   4aa74:	mov	x0, x21
   4aa78:	bl	5510 <Perl_av_pop@plt>
   4aa7c:	mov	x27, x0
   4aa80:	ldr	w0, [x0, #12]
   4aa84:	tbnz	w0, #8, 4c0d0 <my_regprop@@Base+0x11e0c>
   4aa88:	cmp	w20, #0x2d
   4aa8c:	b.eq	4b740 <my_regprop@@Base+0x1147c>  // b.none
   4aa90:	b.hi	4b69c <my_regprop@@Base+0x113d8>  // b.pmore
   4aa94:	cmp	w20, #0x26
   4aa98:	b.eq	4b6b0 <my_regprop@@Base+0x113ec>  // b.none
   4aa9c:	cmp	w20, #0x2b
   4aaa0:	b.ne	4b6c8 <my_regprop@@Base+0x11404>  // b.any
   4aaa4:	ldr	x4, [sp, #152]
   4aaa8:	mov	w3, #0x0                   	// #0
   4aaac:	ldr	x2, [sp, #224]
   4aab0:	mov	x1, x27
   4aab4:	mov	x0, x21
   4aab8:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4aabc:	b	4b6c8 <my_regprop@@Base+0x11404>
   4aac0:	cmp	w19, #0x5b
   4aac4:	b.ne	4a814 <my_regprop@@Base+0x10550>  // b.any
   4aac8:	ldr	x2, [x23, #64]
   4aacc:	mov	w5, #0x1                   	// #1
   4aad0:	mov	x4, #0x0                   	// #0
   4aad4:	mov	x3, #0x0                   	// #0
   4aad8:	add	x2, x2, #0x1
   4aadc:	mov	x1, x23
   4aae0:	mov	x0, x21
   4aae4:	bl	2a960 <my_regexec@@Base+0x746c>
   4aae8:	mov	w20, w0
   4aaec:	mvn	w4, w0
   4aaf0:	lsr	w4, w4, #31
   4aaf4:	tbnz	w0, #31, 4b2d4 <my_regprop@@Base+0x11010>
   4aaf8:	add	x0, sp, #0xd8
   4aafc:	str	x0, [sp, #8]
   4ab00:	strb	wzr, [sp]
   4ab04:	mov	w7, #0x1                   	// #1
   4ab08:	mov	w6, w7
   4ab0c:	mov	w5, #0x0                   	// #0
   4ab10:	ldr	w0, [sp, #148]
   4ab14:	add	w3, w0, #0x1
   4ab18:	ldr	x2, [sp, #128]
   4ab1c:	mov	x1, x23
   4ab20:	mov	x0, x21
   4ab24:	bl	437e4 <my_regprop@@Base+0x9520>
   4ab28:	cbz	x0, 4b2e4 <my_regprop@@Base+0x11020>
   4ab2c:	ldr	x0, [sp, #216]
   4ab30:	cbz	x0, 4a848 <my_regprop@@Base+0x10584>
   4ab34:	tbnz	w20, #31, 4b294 <my_regprop@@Base+0x10fd0>
   4ab38:	ldr	x0, [x23, #64]
   4ab3c:	sub	x0, x0, #0x1
   4ab40:	str	x0, [x23, #64]
   4ab44:	b	4b294 <my_regprop@@Base+0x10fd0>
   4ab48:	cmp	w19, #0x5e
   4ab4c:	b.eq	4ab58 <my_regprop@@Base+0x10894>  // b.none
   4ab50:	cmp	w19, #0x7c
   4ab54:	b.ne	4a814 <my_regprop@@Base+0x10550>  // b.any
   4ab58:	sxtw	x27, w20
   4ab5c:	ldr	x0, [sp, #200]
   4ab60:	cmp	x27, x0
   4ab64:	b.mi	4b4d0 <my_regprop@@Base+0x1120c>  // b.first
   4ab68:	ldr	x0, [sp, #200]
   4ab6c:	sub	x0, x27, x0
   4ab70:	cmp	x0, #0x1
   4ab74:	b.eq	4b4d0 <my_regprop@@Base+0x1120c>  // b.none
   4ab78:	mov	w3, #0x0                   	// #0
   4ab7c:	mov	x2, x27
   4ab80:	mov	x1, x22
   4ab84:	mov	x0, x21
   4ab88:	bl	56f0 <Perl_av_fetch@plt>
   4ab8c:	cbz	x0, 4b4d0 <my_regprop@@Base+0x1120c>
   4ab90:	ldr	x0, [x0]
   4ab94:	ldr	w0, [x0, #12]
   4ab98:	tbnz	w0, #8, 4b4d0 <my_regprop@@Base+0x1120c>
   4ab9c:	ldr	x0, [sp, #200]
   4aba0:	sub	x27, x27, x0
   4aba4:	cmp	x27, #0x1
   4aba8:	b.gt	4a9e8 <my_regprop@@Base+0x10724>
   4abac:	mov	x1, x22
   4abb0:	mov	x0, x21
   4abb4:	bl	5510 <Perl_av_pop@plt>
   4abb8:	mov	x20, x0
   4abbc:	and	x1, x19, #0xff
   4abc0:	mov	x0, x21
   4abc4:	bl	5640 <Perl_newSVuv@plt>
   4abc8:	mov	x2, x0
   4abcc:	mov	x1, x22
   4abd0:	mov	x0, x21
   4abd4:	bl	5430 <Perl_av_push@plt>
   4abd8:	mov	x2, x20
   4abdc:	mov	x1, x22
   4abe0:	mov	x0, x21
   4abe4:	bl	5430 <Perl_av_push@plt>
   4abe8:	b	4a848 <my_regprop@@Base+0x10584>
   4abec:	ldr	x20, [x23, #64]
   4abf0:	ldr	x0, [x23, #56]
   4abf4:	sub	x0, x0, #0x2
   4abf8:	cmp	x20, x0
   4abfc:	b.cs	4ac0c <my_regprop@@Base+0x10948>  // b.hs, b.nlast
   4ac00:	ldrb	w0, [x20, #1]
   4ac04:	cmp	w0, #0x3f
   4ac08:	b.eq	4ad2c <my_regprop@@Base+0x10a68>  // b.none
   4ac0c:	sxtw	x19, w27
   4ac10:	ldr	x0, [sp, #200]
   4ac14:	cmp	x19, x0
   4ac18:	b.mi	4b1ec <my_regprop@@Base+0x10f28>  // b.first
   4ac1c:	mov	w3, #0x0                   	// #0
   4ac20:	mov	x2, x19
   4ac24:	mov	x1, x22
   4ac28:	mov	x0, x21
   4ac2c:	bl	56f0 <Perl_av_fetch@plt>
   4ac30:	mov	x20, x0
   4ac34:	cbz	x0, 4ac80 <my_regprop@@Base+0x109bc>
   4ac38:	ldr	x1, [x0]
   4ac3c:	ldr	w0, [x1, #12]
   4ac40:	tbz	w0, #8, 4b1b4 <my_regprop@@Base+0x10ef0>
   4ac44:	and	w2, w0, w25
   4ac48:	cmp	w2, w24
   4ac4c:	b.ne	4b194 <my_regprop@@Base+0x10ed0>  // b.any
   4ac50:	and	w3, w0, #0xf
   4ac54:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4ac58:	ldr	x2, [x2, #3712]
   4ac5c:	ldrb	w2, [x2, w3, uxtw]
   4ac60:	cbz	w2, 4b13c <my_regprop@@Base+0x10e78>
   4ac64:	and	w2, w0, #0xc000
   4ac68:	cmp	w2, #0x8, lsl #12
   4ac6c:	b.eq	4b160 <my_regprop@@Base+0x10e9c>  // b.none
   4ac70:	ldr	x0, [x1]
   4ac74:	ldr	x0, [x0, #32]
   4ac78:	cmp	x0, #0x21
   4ac7c:	b.eq	4b1ec <my_regprop@@Base+0x10f28>  // b.none
   4ac80:	ldr	x0, [x23, #64]
   4ac84:	add	x0, x0, #0x1
   4ac88:	str	x0, [x23, #64]
   4ac8c:	ldr	x1, [x23, #24]
   4ac90:	cbz	x1, 4aca0 <my_regprop@@Base+0x109dc>
   4ac94:	mov	w2, #0xb                   	// #11
   4ac98:	mov	x0, x21
   4ac9c:	bl	54b0 <Perl_save_pushptr@plt>
   4aca0:	ldr	x1, [x23, #160]
   4aca4:	cbz	x1, 4acb4 <my_regprop@@Base+0x109f0>
   4aca8:	mov	w2, #0xa                   	// #10
   4acac:	mov	x0, x21
   4acb0:	bl	54b0 <Perl_save_pushptr@plt>
   4acb4:	ldr	x1, [x23, #168]
   4acb8:	cbz	x1, 4acc8 <my_regprop@@Base+0x10a04>
   4acbc:	mov	w2, #0xa                   	// #10
   4acc0:	mov	x0, x21
   4acc4:	bl	54b0 <Perl_save_pushptr@plt>
   4acc8:	ldr	x0, [x23, #64]
   4accc:	ldr	x1, [x23, #72]
   4acd0:	sub	x1, x0, x1
   4acd4:	ldr	x0, [x23, #80]
   4acd8:	add	x0, x0, x1
   4acdc:	ldr	x1, [x23, #16]
   4ace0:	cmp	x0, x1
   4ace4:	b.hi	4b218 <my_regprop@@Base+0x10f54>  // b.pmore
   4ace8:	ldr	x5, [x23, #8]
   4acec:	sub	x7, x1, x0
   4acf0:	subs	x4, x0, x5
   4acf4:	b.mi	4b228 <my_regprop@@Base+0x10f64>  // b.first
   4acf8:	ldr	w2, [x23, #192]
   4acfc:	cmp	w2, #0x0
   4ad00:	cset	w3, ne  // ne = any
   4ad04:	cmp	x0, x1
   4ad08:	csel	x0, x0, x1, ls  // ls = plast
   4ad0c:	str	x0, [sp]
   4ad10:	mov	w6, w3
   4ad14:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4ad18:	add	x2, x2, #0x28
   4ad1c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4ad20:	add	x1, x1, #0x3a8
   4ad24:	mov	x0, x21
   4ad28:	bl	5420 <Perl_croak@plt>
   4ad2c:	ldrb	w0, [x20, #2]
   4ad30:	cmp	w0, #0x5e
   4ad34:	b.ne	4ac0c <my_regprop@@Base+0x10948>  // b.any
   4ad38:	ldr	w26, [x23]
   4ad3c:	add	x20, x20, #0x2
   4ad40:	str	x20, [x23, #64]
   4ad44:	mov	x1, x23
   4ad48:	mov	x0, x21
   4ad4c:	bl	28254 <my_regexec@@Base+0x4d60>
   4ad50:	ldr	x0, [x23, #64]
   4ad54:	ldr	x1, [x23, #56]
   4ad58:	sub	x2, x1, #0x4
   4ad5c:	cmp	x0, x2
   4ad60:	b.cs	4ae68 <my_regprop@@Base+0x10ba4>  // b.hs, b.nlast
   4ad64:	ldrb	w3, [x0]
   4ad68:	cmp	w3, #0x3a
   4ad6c:	b.ne	4ae28 <my_regprop@@Base+0x10b64>  // b.any
   4ad70:	add	x3, x0, #0x1
   4ad74:	str	x3, [x23, #64]
   4ad78:	ldrb	w19, [x0, #1]
   4ad7c:	cmp	w19, #0x28
   4ad80:	b.ne	4ae1c <my_regprop@@Base+0x10b58>  // b.any
   4ad84:	add	x3, x0, #0x2
   4ad88:	str	x3, [x23, #64]
   4ad8c:	ldrb	w3, [x0, #2]
   4ad90:	cmp	w3, #0x3f
   4ad94:	b.ne	4ae1c <my_regprop@@Base+0x10b58>  // b.any
   4ad98:	add	x3, x0, #0x3
   4ad9c:	str	x3, [x23, #64]
   4ada0:	ldrb	w3, [x0, #3]
   4ada4:	cmp	w3, #0x5b
   4ada8:	b.ne	4ae1c <my_regprop@@Base+0x10b58>  // b.any
   4adac:	add	x0, x0, #0x4
   4adb0:	str	x0, [x23, #64]
   4adb4:	ldr	x5, [sp, #160]
   4adb8:	ldr	w0, [sp, #148]
   4adbc:	add	w4, w0, #0x1
   4adc0:	ldr	x20, [sp, #128]
   4adc4:	mov	x3, x20
   4adc8:	add	x2, sp, #0xd8
   4adcc:	mov	x1, x23
   4add0:	mov	x0, x21
   4add4:	bl	4a20c <my_regprop@@Base+0xff48>
   4add8:	cbnz	x0, 4ade8 <my_regprop@@Base+0x10b24>
   4addc:	ldr	w0, [x20]
   4ade0:	ands	w0, w0, #0x60
   4ade4:	b.ne	4af80 <my_regprop@@Base+0x10cbc>  // b.any
   4ade8:	ldr	x0, [x23, #64]
   4adec:	add	x1, x0, #0x1
   4adf0:	str	x1, [x23, #64]
   4adf4:	ldrb	w1, [x0, #1]
   4adf8:	cmp	w1, #0x29
   4adfc:	b.ne	4af8c <my_regprop@@Base+0x10cc8>  // b.any
   4ae00:	add	x1, x0, #0x2
   4ae04:	str	x1, [x23, #64]
   4ae08:	ldrb	w0, [x0, #2]
   4ae0c:	cmp	w0, #0x29
   4ae10:	b.ne	4b064 <my_regprop@@Base+0x10da0>  // b.any
   4ae14:	str	w26, [x23]
   4ae18:	b	4b294 <my_regprop@@Base+0x10fd0>
   4ae1c:	ldr	x0, [x23, #64]
   4ae20:	cmp	x2, x0
   4ae24:	b.ls	4ae68 <my_regprop@@Base+0x10ba4>  // b.plast
   4ae28:	cmp	x20, x0
   4ae2c:	b.eq	4ae6c <my_regprop@@Base+0x10ba8>  // b.none
   4ae30:	ldr	w2, [x23, #192]
   4ae34:	cbz	w2, 4af30 <my_regprop@@Base+0x10c6c>
   4ae38:	cmp	x1, x0
   4ae3c:	b.cc	4af0c <my_regprop@@Base+0x10c48>  // b.lo, b.ul, b.last
   4ae40:	sub	x1, x1, x0
   4ae44:	cmp	x1, #0x0
   4ae48:	b.le	4af40 <my_regprop@@Base+0x10c7c>
   4ae4c:	ldrb	w3, [x0]
   4ae50:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4ae54:	ldr	x2, [x2, #4064]
   4ae58:	ldrb	w2, [x2, x3]
   4ae5c:	cmp	x2, x1
   4ae60:	csel	x1, x2, x1, le
   4ae64:	b	4af34 <my_regprop@@Base+0x10c70>
   4ae68:	str	x1, [x23, #64]
   4ae6c:	ldr	x1, [x23, #24]
   4ae70:	cbz	x1, 4ae80 <my_regprop@@Base+0x10bbc>
   4ae74:	mov	w2, #0xb                   	// #11
   4ae78:	mov	x0, x21
   4ae7c:	bl	54b0 <Perl_save_pushptr@plt>
   4ae80:	ldr	x1, [x23, #160]
   4ae84:	cbz	x1, 4ae94 <my_regprop@@Base+0x10bd0>
   4ae88:	mov	w2, #0xa                   	// #10
   4ae8c:	mov	x0, x21
   4ae90:	bl	54b0 <Perl_save_pushptr@plt>
   4ae94:	ldr	x1, [x23, #168]
   4ae98:	cbz	x1, 4aea8 <my_regprop@@Base+0x10be4>
   4ae9c:	mov	w2, #0xa                   	// #10
   4aea0:	mov	x0, x21
   4aea4:	bl	54b0 <Perl_save_pushptr@plt>
   4aea8:	ldr	x0, [x23, #64]
   4aeac:	ldr	x1, [x23, #72]
   4aeb0:	sub	x1, x0, x1
   4aeb4:	ldr	x0, [x23, #80]
   4aeb8:	add	x0, x0, x1
   4aebc:	ldr	x1, [x23, #16]
   4aec0:	cmp	x0, x1
   4aec4:	b.hi	4af48 <my_regprop@@Base+0x10c84>  // b.pmore
   4aec8:	ldr	x5, [x23, #8]
   4aecc:	sub	x7, x1, x0
   4aed0:	subs	x4, x0, x5
   4aed4:	b.mi	4af58 <my_regprop@@Base+0x10c94>  // b.first
   4aed8:	ldr	w2, [x23, #192]
   4aedc:	cmp	w2, #0x0
   4aee0:	cset	w3, ne  // ne = any
   4aee4:	cmp	x0, x1
   4aee8:	csel	x0, x0, x1, ls  // ls = plast
   4aeec:	str	x0, [sp]
   4aef0:	mov	w6, w3
   4aef4:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4aef8:	add	x2, x2, #0xf48
   4aefc:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4af00:	add	x1, x1, #0x3a8
   4af04:	mov	x0, x21
   4af08:	bl	5420 <Perl_croak@plt>
   4af0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4af10:	add	x3, x3, #0xc10
   4af14:	add	x3, x3, #0x900
   4af18:	mov	w2, #0x3e11                	// #15889
   4af1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4af20:	add	x1, x1, #0xfb8
   4af24:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   4af28:	add	x0, x0, #0xc18
   4af2c:	bl	58e0 <__assert_fail@plt>
   4af30:	mov	x1, #0x1                   	// #1
   4af34:	add	x0, x0, x1
   4af38:	str	x0, [x23, #64]
   4af3c:	b	4ae6c <my_regprop@@Base+0x10ba8>
   4af40:	mov	x1, #0x0                   	// #0
   4af44:	b	4af34 <my_regprop@@Base+0x10c70>
   4af48:	ldr	x5, [x23, #8]
   4af4c:	sub	x4, x1, x5
   4af50:	mov	x7, #0x0                   	// #0
   4af54:	b	4aed8 <my_regprop@@Base+0x10c14>
   4af58:	ldr	x6, [x23, #48]
   4af5c:	ldr	x5, [x23, #56]
   4af60:	sub	w5, w5, w6
   4af64:	mov	w3, #0x3e14                	// #15892
   4af68:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4af6c:	add	x2, x2, #0xfb8
   4af70:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4af74:	add	x1, x1, #0x870
   4af78:	mov	x0, x21
   4af7c:	bl	5420 <Perl_croak@plt>
   4af80:	ldr	x1, [sp, #128]
   4af84:	str	w0, [x1]
   4af88:	b	4b2c4 <my_regprop@@Base+0x11000>
   4af8c:	ldr	x1, [x23, #24]
   4af90:	cbz	x1, 4afa0 <my_regprop@@Base+0x10cdc>
   4af94:	mov	w2, #0xb                   	// #11
   4af98:	mov	x0, x21
   4af9c:	bl	54b0 <Perl_save_pushptr@plt>
   4afa0:	ldr	x1, [x23, #160]
   4afa4:	cbz	x1, 4afb4 <my_regprop@@Base+0x10cf0>
   4afa8:	mov	w2, #0xa                   	// #10
   4afac:	mov	x0, x21
   4afb0:	bl	54b0 <Perl_save_pushptr@plt>
   4afb4:	ldr	x1, [x23, #168]
   4afb8:	cbz	x1, 4afc8 <my_regprop@@Base+0x10d04>
   4afbc:	mov	w2, #0xa                   	// #10
   4afc0:	mov	x0, x21
   4afc4:	bl	54b0 <Perl_save_pushptr@plt>
   4afc8:	ldr	x0, [x23, #64]
   4afcc:	ldr	x1, [x23, #72]
   4afd0:	sub	x1, x0, x1
   4afd4:	ldr	x0, [x23, #80]
   4afd8:	add	x0, x0, x1
   4afdc:	ldr	x1, [x23, #16]
   4afe0:	cmp	x0, x1
   4afe4:	b.hi	4b02c <my_regprop@@Base+0x10d68>  // b.pmore
   4afe8:	ldr	x5, [x23, #8]
   4afec:	subs	x4, x0, x5
   4aff0:	b.mi	4b03c <my_regprop@@Base+0x10d78>  // b.first
   4aff4:	sub	x7, x1, x0
   4aff8:	ldr	w2, [x23, #192]
   4affc:	cmp	w2, #0x0
   4b000:	cset	w3, ne  // ne = any
   4b004:	cmp	x0, x1
   4b008:	csel	x0, x0, x1, ls  // ls = plast
   4b00c:	str	x0, [sp]
   4b010:	mov	w6, w3
   4b014:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4b018:	add	x2, x2, #0xf68
   4b01c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4b020:	add	x1, x1, #0x3a8
   4b024:	mov	x0, x21
   4b028:	bl	5420 <Perl_croak@plt>
   4b02c:	ldr	x5, [x23, #8]
   4b030:	sub	x4, x1, x5
   4b034:	mov	x7, #0x0                   	// #0
   4b038:	b	4aff8 <my_regprop@@Base+0x10d34>
   4b03c:	ldr	x6, [x23, #48]
   4b040:	ldr	x5, [x23, #56]
   4b044:	sub	w5, w5, w6
   4b048:	mov	w3, #0x3e24                	// #15908
   4b04c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b050:	add	x2, x2, #0xfb8
   4b054:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b058:	add	x1, x1, #0x870
   4b05c:	mov	x0, x21
   4b060:	bl	5420 <Perl_croak@plt>
   4b064:	ldr	x1, [x23, #24]
   4b068:	cbz	x1, 4b078 <my_regprop@@Base+0x10db4>
   4b06c:	mov	w2, #0xb                   	// #11
   4b070:	mov	x0, x21
   4b074:	bl	54b0 <Perl_save_pushptr@plt>
   4b078:	ldr	x1, [x23, #160]
   4b07c:	cbz	x1, 4b08c <my_regprop@@Base+0x10dc8>
   4b080:	mov	w2, #0xa                   	// #10
   4b084:	mov	x0, x21
   4b088:	bl	54b0 <Perl_save_pushptr@plt>
   4b08c:	ldr	x1, [x23, #168]
   4b090:	cbz	x1, 4b0a0 <my_regprop@@Base+0x10ddc>
   4b094:	mov	w2, #0xa                   	// #10
   4b098:	mov	x0, x21
   4b09c:	bl	54b0 <Perl_save_pushptr@plt>
   4b0a0:	ldr	x0, [x23, #64]
   4b0a4:	ldr	x1, [x23, #72]
   4b0a8:	sub	x1, x0, x1
   4b0ac:	ldr	x0, [x23, #80]
   4b0b0:	add	x0, x0, x1
   4b0b4:	ldr	x1, [x23, #16]
   4b0b8:	cmp	x0, x1
   4b0bc:	b.hi	4b104 <my_regprop@@Base+0x10e40>  // b.pmore
   4b0c0:	ldr	x5, [x23, #8]
   4b0c4:	subs	x4, x0, x5
   4b0c8:	b.mi	4b114 <my_regprop@@Base+0x10e50>  // b.first
   4b0cc:	sub	x7, x1, x0
   4b0d0:	ldr	w2, [x23, #192]
   4b0d4:	cmp	w2, #0x0
   4b0d8:	cset	w3, ne  // ne = any
   4b0dc:	cmp	x0, x1
   4b0e0:	csel	x0, x0, x1, ls  // ls = plast
   4b0e4:	str	x0, [sp]
   4b0e8:	mov	w6, w3
   4b0ec:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4b0f0:	add	x2, x2, #0xfa0
   4b0f4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4b0f8:	add	x1, x1, #0x3a8
   4b0fc:	mov	x0, x21
   4b100:	bl	5420 <Perl_croak@plt>
   4b104:	ldr	x5, [x23, #8]
   4b108:	sub	x4, x1, x5
   4b10c:	mov	x7, #0x0                   	// #0
   4b110:	b	4b0d0 <my_regprop@@Base+0x10e0c>
   4b114:	ldr	x6, [x23, #48]
   4b118:	ldr	x5, [x23, #56]
   4b11c:	sub	w5, w5, w6
   4b120:	mov	w3, #0x3e2a                	// #15914
   4b124:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b128:	add	x2, x2, #0xfb8
   4b12c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b130:	add	x1, x1, #0x870
   4b134:	mov	x0, x21
   4b138:	bl	5420 <Perl_croak@plt>
   4b13c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b140:	add	x3, x3, #0xc10
   4b144:	add	x3, x3, #0x900
   4b148:	mov	w2, #0x3e36                	// #15926
   4b14c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b150:	add	x1, x1, #0xfb8
   4b154:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b158:	add	x0, x0, #0xfe0
   4b15c:	bl	58e0 <__assert_fail@plt>
   4b160:	and	w0, w0, #0xff
   4b164:	sub	w0, w0, #0x9
   4b168:	cmp	w0, #0x1
   4b16c:	b.hi	4ac70 <my_regprop@@Base+0x109ac>  // b.pmore
   4b170:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b174:	add	x3, x3, #0xc10
   4b178:	add	x3, x3, #0x900
   4b17c:	mov	w2, #0x3e36                	// #15926
   4b180:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b184:	add	x1, x1, #0xfb8
   4b188:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b18c:	add	x0, x0, #0x10
   4b190:	bl	58e0 <__assert_fail@plt>
   4b194:	mov	w2, #0x2                   	// #2
   4b198:	mov	x0, x21
   4b19c:	bl	4f30 <Perl_sv_2uv_flags@plt>
   4b1a0:	cmp	x0, #0x21
   4b1a4:	b.ne	4ac80 <my_regprop@@Base+0x109bc>  // b.any
   4b1a8:	ldr	x0, [x20]
   4b1ac:	ldr	w0, [x0, #12]
   4b1b0:	tbnz	w0, #8, 4b1ec <my_regprop@@Base+0x10f28>
   4b1b4:	ldr	x0, [sp, #200]
   4b1b8:	sub	x19, x19, x0
   4b1bc:	cmp	x19, #0x0
   4b1c0:	b.le	4ac80 <my_regprop@@Base+0x109bc>
   4b1c4:	sub	w2, w27, #0x1
   4b1c8:	mov	w3, #0x0                   	// #0
   4b1cc:	sxtw	x2, w2
   4b1d0:	mov	x1, x22
   4b1d4:	mov	x0, x21
   4b1d8:	bl	56f0 <Perl_av_fetch@plt>
   4b1dc:	cbz	x0, 4ac80 <my_regprop@@Base+0x109bc>
   4b1e0:	ldr	x0, [x0]
   4b1e4:	ldr	w0, [x0, #12]
   4b1e8:	tbz	w0, #8, 4ac80 <my_regprop@@Base+0x109bc>
   4b1ec:	ldr	x1, [sp, #200]
   4b1f0:	mov	x0, x21
   4b1f4:	bl	58d0 <Perl_newSViv@plt>
   4b1f8:	mov	x2, x0
   4b1fc:	ldr	x1, [sp, #136]
   4b200:	mov	x0, x21
   4b204:	bl	5430 <Perl_av_push@plt>
   4b208:	add	w27, w27, #0x1
   4b20c:	sxtw	x27, w27
   4b210:	str	x27, [sp, #200]
   4b214:	b	4a848 <my_regprop@@Base+0x10584>
   4b218:	ldr	x5, [x23, #8]
   4b21c:	sub	x4, x1, x5
   4b220:	mov	x7, #0x0                   	// #0
   4b224:	b	4acf8 <my_regprop@@Base+0x10a34>
   4b228:	ldr	x6, [x23, #48]
   4b22c:	ldr	x5, [x23, #56]
   4b230:	sub	w5, w5, w6
   4b234:	mov	w3, #0x3e3f                	// #15935
   4b238:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b23c:	add	x2, x2, #0xfb8
   4b240:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b244:	add	x1, x1, #0x870
   4b248:	mov	x0, x21
   4b24c:	bl	5420 <Perl_croak@plt>
   4b250:	add	x0, sp, #0xd8
   4b254:	str	x0, [sp, #8]
   4b258:	strb	wzr, [sp]
   4b25c:	mov	w7, #0x1                   	// #1
   4b260:	mov	w6, #0x0                   	// #0
   4b264:	mov	w5, #0x0                   	// #0
   4b268:	mov	w4, w7
   4b26c:	ldr	w0, [sp, #148]
   4b270:	add	w3, w0, #0x1
   4b274:	ldr	x2, [sp, #128]
   4b278:	mov	x1, x23
   4b27c:	mov	x0, x21
   4b280:	bl	437e4 <my_regprop@@Base+0x9520>
   4b284:	cbz	x0, 4b2b0 <my_regprop@@Base+0x10fec>
   4b288:	ldr	x0, [x23, #64]
   4b28c:	sub	x0, x0, #0x1
   4b290:	str	x0, [x23, #64]
   4b294:	ldrb	w0, [x22, #12]
   4b298:	cmp	w0, #0xb
   4b29c:	b.ne	4b994 <my_regprop@@Base+0x116d0>  // b.any
   4b2a0:	mov	w28, #0x2                   	// #2
   4b2a4:	adrp	x27, 91000 <boot_re@@Base+0x2f41c>
   4b2a8:	ldr	x27, [x27, #3712]
   4b2ac:	b	4ba4c <my_regprop@@Base+0x11788>
   4b2b0:	ldr	x1, [sp, #128]
   4b2b4:	ldr	w0, [x1]
   4b2b8:	ands	w0, w0, #0x60
   4b2bc:	b.eq	4c600 <my_regprop@@Base+0x1233c>  // b.none
   4b2c0:	str	w0, [x1]
   4b2c4:	mov	x24, #0x0                   	// #0
   4b2c8:	ldp	x25, x26, [sp, #96]
   4b2cc:	ldp	x27, x28, [sp, #112]
   4b2d0:	b	4a410 <my_regprop@@Base+0x1014c>
   4b2d4:	ldr	x0, [x23, #64]
   4b2d8:	add	x0, x0, #0x1
   4b2dc:	str	x0, [x23, #64]
   4b2e0:	b	4aaf8 <my_regprop@@Base+0x10834>
   4b2e4:	ldr	x1, [sp, #128]
   4b2e8:	ldr	w0, [x1]
   4b2ec:	ands	w0, w0, #0x60
   4b2f0:	b.eq	4c600 <my_regprop@@Base+0x1233c>  // b.none
   4b2f4:	str	w0, [x1]
   4b2f8:	b	4b2c4 <my_regprop@@Base+0x11000>
   4b2fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b300:	add	x3, x3, #0xc10
   4b304:	add	x3, x3, #0x900
   4b308:	mov	w2, #0x3e92                	// #16018
   4b30c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b310:	add	x1, x1, #0xfb8
   4b314:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b318:	add	x0, x0, #0x58
   4b31c:	bl	58e0 <__assert_fail@plt>
   4b320:	ldr	x0, [x23, #64]
   4b324:	ldurb	w1, [x0, #-1]
   4b328:	cmp	w1, #0x5d
   4b32c:	b.eq	4a848 <my_regprop@@Base+0x10584>  // b.none
   4b330:	add	x0, x0, #0x1
   4b334:	str	x0, [x23, #64]
   4b338:	ldr	x1, [x23, #24]
   4b33c:	cbz	x1, 4b34c <my_regprop@@Base+0x11088>
   4b340:	mov	w2, #0xb                   	// #11
   4b344:	mov	x0, x21
   4b348:	bl	54b0 <Perl_save_pushptr@plt>
   4b34c:	ldr	x1, [x23, #160]
   4b350:	cbz	x1, 4b360 <my_regprop@@Base+0x1109c>
   4b354:	mov	w2, #0xa                   	// #10
   4b358:	mov	x0, x21
   4b35c:	bl	54b0 <Perl_save_pushptr@plt>
   4b360:	ldr	x1, [x23, #168]
   4b364:	cbz	x1, 4b374 <my_regprop@@Base+0x110b0>
   4b368:	mov	w2, #0xa                   	// #10
   4b36c:	mov	x0, x21
   4b370:	bl	54b0 <Perl_save_pushptr@plt>
   4b374:	ldr	x0, [x23, #64]
   4b378:	ldr	x1, [x23, #72]
   4b37c:	sub	x1, x0, x1
   4b380:	ldr	x0, [x23, #80]
   4b384:	add	x0, x0, x1
   4b388:	ldr	x1, [x23, #16]
   4b38c:	cmp	x0, x1
   4b390:	b.hi	4b3d8 <my_regprop@@Base+0x11114>  // b.pmore
   4b394:	ldr	x5, [x23, #8]
   4b398:	subs	x4, x0, x5
   4b39c:	b.mi	4b3e8 <my_regprop@@Base+0x11124>  // b.first
   4b3a0:	sub	x7, x1, x0
   4b3a4:	ldr	w2, [x23, #192]
   4b3a8:	cmp	w2, #0x0
   4b3ac:	cset	w3, ne  // ne = any
   4b3b0:	cmp	x0, x1
   4b3b4:	csel	x0, x0, x1, ls  // ls = plast
   4b3b8:	str	x0, [sp]
   4b3bc:	mov	w6, w3
   4b3c0:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4b3c4:	add	x2, x2, #0x90
   4b3c8:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4b3cc:	add	x1, x1, #0x3a8
   4b3d0:	mov	x0, x21
   4b3d4:	bl	5420 <Perl_croak@plt>
   4b3d8:	ldr	x5, [x23, #8]
   4b3dc:	sub	x4, x1, x5
   4b3e0:	mov	x7, #0x0                   	// #0
   4b3e4:	b	4b3a4 <my_regprop@@Base+0x110e0>
   4b3e8:	ldr	x6, [x23, #48]
   4b3ec:	ldr	x5, [x23, #56]
   4b3f0:	sub	w5, w5, w6
   4b3f4:	mov	w3, #0x3e97                	// #16023
   4b3f8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b3fc:	add	x2, x2, #0xfb8
   4b400:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b404:	add	x1, x1, #0x870
   4b408:	mov	x0, x21
   4b40c:	bl	5420 <Perl_croak@plt>
   4b410:	ldr	x0, [x23, #64]
   4b414:	add	x0, x0, #0x1
   4b418:	str	x0, [x23, #64]
   4b41c:	b	4c0d0 <my_regprop@@Base+0x11e0c>
   4b420:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b424:	add	x3, x3, #0xc10
   4b428:	add	x3, x3, #0x900
   4b42c:	mov	w2, #0x3ea8                	// #16040
   4b430:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b434:	add	x1, x1, #0xfb8
   4b438:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b43c:	add	x0, x0, #0xa0
   4b440:	bl	58e0 <__assert_fail@plt>
   4b444:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b448:	add	x3, x3, #0xc10
   4b44c:	add	x3, x3, #0x900
   4b450:	mov	w2, #0x3ea9                	// #16041
   4b454:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b458:	add	x1, x1, #0xfb8
   4b45c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4b460:	add	x0, x0, #0xda0
   4b464:	bl	58e0 <__assert_fail@plt>
   4b468:	and	w0, w0, #0xff
   4b46c:	sub	w0, w0, #0x9
   4b470:	cmp	w0, #0x1
   4b474:	b.hi	4a970 <my_regprop@@Base+0x106ac>  // b.pmore
   4b478:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b47c:	add	x3, x3, #0xc10
   4b480:	add	x3, x3, #0x900
   4b484:	mov	w2, #0x3ea9                	// #16041
   4b488:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b48c:	add	x1, x1, #0xfb8
   4b490:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4b494:	add	x0, x0, #0xdd0
   4b498:	bl	58e0 <__assert_fail@plt>
   4b49c:	mov	w2, #0x2                   	// #2
   4b4a0:	mov	x1, x20
   4b4a4:	mov	x0, x21
   4b4a8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   4b4ac:	b	4a978 <my_regprop@@Base+0x106b4>
   4b4b0:	mov	x1, x20
   4b4b4:	mov	x0, x21
   4b4b8:	bl	5860 <Perl_sv_free2@plt>
   4b4bc:	b	4a990 <my_regprop@@Base+0x106cc>
   4b4c0:	str	xzr, [sp, #200]
   4b4c4:	b	4a998 <my_regprop@@Base+0x106d4>
   4b4c8:	cmp	w19, #0x5d
   4b4cc:	b.eq	4bd74 <my_regprop@@Base+0x11ab0>  // b.none
   4b4d0:	ldr	x0, [x23, #64]
   4b4d4:	add	x0, x0, #0x1
   4b4d8:	str	x0, [x23, #64]
   4b4dc:	ldr	x1, [x23, #24]
   4b4e0:	cbz	x1, 4b4f0 <my_regprop@@Base+0x1122c>
   4b4e4:	mov	w2, #0xb                   	// #11
   4b4e8:	mov	x0, x21
   4b4ec:	bl	54b0 <Perl_save_pushptr@plt>
   4b4f0:	ldr	x1, [x23, #160]
   4b4f4:	cbz	x1, 4b504 <my_regprop@@Base+0x11240>
   4b4f8:	mov	w2, #0xa                   	// #10
   4b4fc:	mov	x0, x21
   4b500:	bl	54b0 <Perl_save_pushptr@plt>
   4b504:	ldr	x1, [x23, #168]
   4b508:	cbz	x1, 4b518 <my_regprop@@Base+0x11254>
   4b50c:	mov	w2, #0xa                   	// #10
   4b510:	mov	x0, x21
   4b514:	bl	54b0 <Perl_save_pushptr@plt>
   4b518:	ldr	x0, [x23, #64]
   4b51c:	ldr	x1, [x23, #72]
   4b520:	sub	x1, x0, x1
   4b524:	ldr	x0, [x23, #80]
   4b528:	add	x0, x0, x1
   4b52c:	ldr	x2, [x23, #16]
   4b530:	cmp	x0, x2
   4b534:	b.hi	4b58c <my_regprop@@Base+0x112c8>  // b.pmore
   4b538:	ldr	x7, [x23, #8]
   4b53c:	subs	x4, x0, x7
   4b540:	b.mi	4b59c <my_regprop@@Base+0x112d8>  // b.first
   4b544:	mov	x6, x4
   4b548:	sub	x3, x2, x0
   4b54c:	ldr	w1, [x23, #192]
   4b550:	cmp	w1, #0x0
   4b554:	cset	w1, ne  // ne = any
   4b558:	cmp	x0, x2
   4b55c:	csel	x0, x0, x2, ls  // ls = plast
   4b560:	str	x0, [sp, #16]
   4b564:	str	x3, [sp, #8]
   4b568:	str	w1, [sp]
   4b56c:	mov	w5, w1
   4b570:	mov	w4, w19
   4b574:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4b578:	add	x3, x3, #0x5d8
   4b57c:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4b580:	add	x2, x2, #0xb0
   4b584:	mov	x0, x21
   4b588:	bl	273ac <my_regexec@@Base+0x3eb8>
   4b58c:	ldr	x7, [x23, #8]
   4b590:	sub	x6, x2, x7
   4b594:	mov	x3, #0x0                   	// #0
   4b598:	b	4b54c <my_regprop@@Base+0x11288>
   4b59c:	ldr	x6, [x23, #48]
   4b5a0:	ldr	x5, [x23, #56]
   4b5a4:	sub	w5, w5, w6
   4b5a8:	mov	w3, #0x3eec                	// #16108
   4b5ac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b5b0:	add	x2, x2, #0xfb8
   4b5b4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b5b8:	add	x1, x1, #0x870
   4b5bc:	mov	x0, x21
   4b5c0:	bl	5420 <Perl_croak@plt>
   4b5c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b5c8:	add	x3, x3, #0xc10
   4b5cc:	add	x3, x3, #0x900
   4b5d0:	mov	w2, #0x3eef                	// #16111
   4b5d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b5d8:	add	x1, x1, #0xfb8
   4b5dc:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b5e0:	add	x0, x0, #0xfe0
   4b5e4:	bl	58e0 <__assert_fail@plt>
   4b5e8:	and	w0, w0, #0xff
   4b5ec:	sub	w0, w0, #0x9
   4b5f0:	cmp	w0, #0x1
   4b5f4:	b.hi	4aa34 <my_regprop@@Base+0x10770>  // b.pmore
   4b5f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b5fc:	add	x3, x3, #0xc10
   4b600:	add	x3, x3, #0x900
   4b604:	mov	w2, #0x3eef                	// #16111
   4b608:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b60c:	add	x1, x1, #0xfb8
   4b610:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b614:	add	x0, x0, #0x10
   4b618:	bl	58e0 <__assert_fail@plt>
   4b61c:	mov	w2, #0x2                   	// #2
   4b620:	mov	x0, x21
   4b624:	bl	4f30 <Perl_sv_2uv_flags@plt>
   4b628:	and	w20, w0, #0xff
   4b62c:	b	4aa3c <my_regprop@@Base+0x10778>
   4b630:	mov	x1, x22
   4b634:	mov	x0, x21
   4b638:	bl	5510 <Perl_av_pop@plt>
   4b63c:	mov	x20, x0
   4b640:	ldr	w0, [x0, #12]
   4b644:	tbnz	w0, #8, 4b678 <my_regprop@@Base+0x113b4>
   4b648:	and	x1, x19, #0xff
   4b64c:	mov	x0, x21
   4b650:	bl	5640 <Perl_newSVuv@plt>
   4b654:	mov	x2, x0
   4b658:	mov	x1, x22
   4b65c:	mov	x0, x21
   4b660:	bl	5430 <Perl_av_push@plt>
   4b664:	mov	x2, x20
   4b668:	mov	x1, x22
   4b66c:	mov	x0, x21
   4b670:	bl	5430 <Perl_av_push@plt>
   4b674:	b	4a848 <my_regprop@@Base+0x10584>
   4b678:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b67c:	add	x3, x3, #0xc10
   4b680:	add	x3, x3, #0x900
   4b684:	mov	w2, #0x3efb                	// #16123
   4b688:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b68c:	add	x1, x1, #0xfb8
   4b690:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b694:	add	x0, x0, #0xf0
   4b698:	bl	58e0 <__assert_fail@plt>
   4b69c:	cmp	w20, #0x5e
   4b6a0:	b.eq	4b75c <my_regprop@@Base+0x11498>  // b.none
   4b6a4:	cmp	w20, #0x7c
   4b6a8:	b.eq	4aaa4 <my_regprop@@Base+0x107e0>  // b.none
   4b6ac:	b	4b6c8 <my_regprop@@Base+0x11404>
   4b6b0:	ldr	x4, [sp, #152]
   4b6b4:	mov	w3, #0x0                   	// #0
   4b6b8:	ldr	x2, [sp, #224]
   4b6bc:	mov	x1, x27
   4b6c0:	mov	x0, x21
   4b6c4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4b6c8:	ldr	w2, [x27, #8]
   4b6cc:	cmp	w2, #0x1
   4b6d0:	b.ls	4b7f8 <my_regprop@@Base+0x11534>  // b.plast
   4b6d4:	sub	w2, w2, #0x1
   4b6d8:	str	w2, [x27, #8]
   4b6dc:	mov	x1, x22
   4b6e0:	mov	x0, x21
   4b6e4:	bl	5510 <Perl_av_pop@plt>
   4b6e8:	cbz	x0, 4b700 <my_regprop@@Base+0x1143c>
   4b6ec:	ldr	w2, [x0, #8]
   4b6f0:	cmp	w2, #0x1
   4b6f4:	b.ls	4b808 <my_regprop@@Base+0x11544>  // b.plast
   4b6f8:	sub	w2, w2, #0x1
   4b6fc:	str	w2, [x0, #8]
   4b700:	ldr	x2, [sp, #224]
   4b704:	mov	x1, x22
   4b708:	mov	x0, x21
   4b70c:	bl	5430 <Perl_av_push@plt>
   4b710:	ldrb	w0, [x22, #12]
   4b714:	cmp	w0, #0xb
   4b718:	b.eq	4a8bc <my_regprop@@Base+0x105f8>  // b.none
   4b71c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b720:	add	x3, x3, #0xc10
   4b724:	add	x3, x3, #0x900
   4b728:	mov	w2, #0x3ddc                	// #15836
   4b72c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b730:	add	x1, x1, #0xfb8
   4b734:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b738:	add	x0, x0, #0xf10
   4b73c:	bl	58e0 <__assert_fail@plt>
   4b740:	ldr	x4, [sp, #152]
   4b744:	mov	w3, #0x1                   	// #1
   4b748:	ldr	x2, [sp, #224]
   4b74c:	mov	x1, x27
   4b750:	mov	x0, x21
   4b754:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4b758:	b	4b6c8 <my_regprop@@Base+0x11404>
   4b75c:	str	xzr, [sp, #232]
   4b760:	str	xzr, [sp, #240]
   4b764:	add	x4, sp, #0xf0
   4b768:	mov	w3, #0x0                   	// #0
   4b76c:	ldr	x2, [sp, #224]
   4b770:	mov	x1, x27
   4b774:	mov	x0, x21
   4b778:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   4b77c:	add	x4, sp, #0xe8
   4b780:	mov	w3, #0x0                   	// #0
   4b784:	ldr	x2, [sp, #224]
   4b788:	mov	x1, x27
   4b78c:	mov	x0, x21
   4b790:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4b794:	ldr	x4, [sp, #152]
   4b798:	mov	w3, #0x1                   	// #1
   4b79c:	ldr	x2, [sp, #232]
   4b7a0:	ldr	x1, [sp, #240]
   4b7a4:	mov	x0, x21
   4b7a8:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   4b7ac:	ldr	x1, [sp, #232]
   4b7b0:	ldr	w2, [x1, #8]
   4b7b4:	cmp	w2, #0x1
   4b7b8:	b.ls	4b7e0 <my_regprop@@Base+0x1151c>  // b.plast
   4b7bc:	sub	w2, w2, #0x1
   4b7c0:	str	w2, [x1, #8]
   4b7c4:	ldr	x1, [sp, #240]
   4b7c8:	ldr	w2, [x1, #8]
   4b7cc:	cmp	w2, #0x1
   4b7d0:	b.ls	4b7ec <my_regprop@@Base+0x11528>  // b.plast
   4b7d4:	sub	w2, w2, #0x1
   4b7d8:	str	w2, [x1, #8]
   4b7dc:	b	4b6c8 <my_regprop@@Base+0x11404>
   4b7e0:	mov	x0, x21
   4b7e4:	bl	5860 <Perl_sv_free2@plt>
   4b7e8:	b	4b7c4 <my_regprop@@Base+0x11500>
   4b7ec:	mov	x0, x21
   4b7f0:	bl	5860 <Perl_sv_free2@plt>
   4b7f4:	b	4b6c8 <my_regprop@@Base+0x11404>
   4b7f8:	mov	x1, x27
   4b7fc:	mov	x0, x21
   4b800:	bl	5860 <Perl_sv_free2@plt>
   4b804:	b	4b6dc <my_regprop@@Base+0x11418>
   4b808:	mov	x1, x0
   4b80c:	mov	x0, x21
   4b810:	bl	5860 <Perl_sv_free2@plt>
   4b814:	b	4b700 <my_regprop@@Base+0x1143c>
   4b818:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b81c:	add	x3, x3, #0xc10
   4b820:	add	x3, x3, #0x900
   4b824:	mov	w2, #0x3f43                	// #16195
   4b828:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b82c:	add	x1, x1, #0xfb8
   4b830:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b834:	add	x0, x0, #0xfe0
   4b838:	bl	58e0 <__assert_fail@plt>
   4b83c:	and	w0, w0, #0xff
   4b840:	sub	w0, w0, #0x9
   4b844:	cmp	w0, #0x1
   4b848:	b.hi	4a7dc <my_regprop@@Base+0x10518>  // b.pmore
   4b84c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b850:	add	x3, x3, #0xc10
   4b854:	add	x3, x3, #0x900
   4b858:	mov	w2, #0x3f43                	// #16195
   4b85c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b860:	add	x1, x1, #0xfb8
   4b864:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b868:	add	x0, x0, #0x10
   4b86c:	bl	58e0 <__assert_fail@plt>
   4b870:	mov	w2, #0x2                   	// #2
   4b874:	mov	x0, x21
   4b878:	bl	4f30 <Perl_sv_2uv_flags@plt>
   4b87c:	cmp	x0, #0x21
   4b880:	b.ne	4a7ec <my_regprop@@Base+0x10528>  // b.any
   4b884:	mov	x1, x22
   4b888:	mov	x0, x21
   4b88c:	bl	5510 <Perl_av_pop@plt>
   4b890:	cbz	x0, 4a848 <my_regprop@@Base+0x10584>
   4b894:	ldr	w2, [x0, #8]
   4b898:	cmp	w2, #0x1
   4b89c:	b.ls	4b8ac <my_regprop@@Base+0x115e8>  // b.plast
   4b8a0:	sub	w2, w2, #0x1
   4b8a4:	str	w2, [x0, #8]
   4b8a8:	b	4a848 <my_regprop@@Base+0x10584>
   4b8ac:	mov	x1, x0
   4b8b0:	mov	x0, x21
   4b8b4:	bl	5860 <Perl_sv_free2@plt>
   4b8b8:	b	4a848 <my_regprop@@Base+0x10584>
   4b8bc:	ldr	x1, [x23, #24]
   4b8c0:	cbz	x1, 4b8d0 <my_regprop@@Base+0x1160c>
   4b8c4:	mov	w2, #0xb                   	// #11
   4b8c8:	mov	x0, x21
   4b8cc:	bl	54b0 <Perl_save_pushptr@plt>
   4b8d0:	ldr	x1, [x23, #160]
   4b8d4:	cbz	x1, 4b8e4 <my_regprop@@Base+0x11620>
   4b8d8:	mov	w2, #0xa                   	// #10
   4b8dc:	mov	x0, x21
   4b8e0:	bl	54b0 <Perl_save_pushptr@plt>
   4b8e4:	ldr	x1, [x23, #168]
   4b8e8:	cbz	x1, 4b8f8 <my_regprop@@Base+0x11634>
   4b8ec:	mov	w2, #0xa                   	// #10
   4b8f0:	mov	x0, x21
   4b8f4:	bl	54b0 <Perl_save_pushptr@plt>
   4b8f8:	ldr	x0, [x23, #64]
   4b8fc:	ldr	x1, [x23, #72]
   4b900:	sub	x1, x0, x1
   4b904:	ldr	x0, [x23, #80]
   4b908:	add	x0, x0, x1
   4b90c:	ldr	x1, [x23, #16]
   4b910:	cmp	x0, x1
   4b914:	b.hi	4b95c <my_regprop@@Base+0x11698>  // b.pmore
   4b918:	ldr	x5, [x23, #8]
   4b91c:	sub	x7, x1, x0
   4b920:	subs	x4, x0, x5
   4b924:	b.mi	4b96c <my_regprop@@Base+0x116a8>  // b.first
   4b928:	ldr	w2, [x23, #192]
   4b92c:	cmp	w2, #0x0
   4b930:	cset	w3, ne  // ne = any
   4b934:	cmp	x0, x1
   4b938:	csel	x0, x0, x1, ls  // ls = plast
   4b93c:	str	x0, [sp]
   4b940:	mov	w6, w3
   4b944:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4b948:	add	x2, x2, #0x100
   4b94c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4b950:	add	x1, x1, #0x3a8
   4b954:	mov	x0, x21
   4b958:	bl	5420 <Perl_croak@plt>
   4b95c:	ldr	x5, [x23, #8]
   4b960:	sub	x4, x1, x5
   4b964:	mov	x7, #0x0                   	// #0
   4b968:	b	4b928 <my_regprop@@Base+0x11664>
   4b96c:	ldr	x6, [x23, #48]
   4b970:	ldr	x5, [x23, #56]
   4b974:	sub	w5, w5, w6
   4b978:	mov	w3, #0x3f53                	// #16211
   4b97c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4b980:	add	x2, x2, #0xfb8
   4b984:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4b988:	add	x1, x1, #0x870
   4b98c:	mov	x0, x21
   4b990:	bl	5420 <Perl_croak@plt>
   4b994:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b998:	add	x3, x3, #0xc10
   4b99c:	add	x3, x3, #0x900
   4b9a0:	mov	w2, #0x3f5c                	// #16220
   4b9a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b9a8:	add	x1, x1, #0xfb8
   4b9ac:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b9b0:	add	x0, x0, #0xf10
   4b9b4:	bl	58e0 <__assert_fail@plt>
   4b9b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b9bc:	add	x3, x3, #0xc10
   4b9c0:	add	x3, x3, #0x900
   4b9c4:	mov	w2, #0x3f62                	// #16226
   4b9c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b9cc:	add	x1, x1, #0xfb8
   4b9d0:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4b9d4:	add	x0, x0, #0x118
   4b9d8:	bl	58e0 <__assert_fail@plt>
   4b9dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4b9e0:	add	x3, x3, #0xc10
   4b9e4:	add	x3, x3, #0x900
   4b9e8:	mov	w2, #0x3f67                	// #16231
   4b9ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4b9f0:	add	x1, x1, #0xfb8
   4b9f4:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4b9f8:	add	x0, x0, #0xfe0
   4b9fc:	bl	58e0 <__assert_fail@plt>
   4ba00:	ldr	x0, [x1]
   4ba04:	ldrb	w19, [x0, #32]
   4ba08:	cmp	w19, #0x21
   4ba0c:	b.ne	4baf8 <my_regprop@@Base+0x11834>  // b.any
   4ba10:	ldr	x1, [sp, #216]
   4ba14:	mov	x0, x21
   4ba18:	bl	52b0 <Perl__invlist_invert@plt>
   4ba1c:	mov	x1, x22
   4ba20:	mov	x0, x21
   4ba24:	bl	5510 <Perl_av_pop@plt>
   4ba28:	cbz	x0, 4ba40 <my_regprop@@Base+0x1177c>
   4ba2c:	ldr	w2, [x0, #8]
   4ba30:	cmp	w2, #0x1
   4ba34:	b.ls	4bc08 <my_regprop@@Base+0x11944>  // b.plast
   4ba38:	sub	w2, w2, #0x1
   4ba3c:	str	w2, [x0, #8]
   4ba40:	ldrb	w0, [x22, #12]
   4ba44:	cmp	w0, #0xb
   4ba48:	b.ne	4b994 <my_regprop@@Base+0x116d0>  // b.any
   4ba4c:	ldr	x0, [x22]
   4ba50:	ldr	x20, [x0, #16]
   4ba54:	mov	w26, w20
   4ba58:	sxtw	x20, w20
   4ba5c:	ldr	x0, [sp, #200]
   4ba60:	cmp	x20, x0
   4ba64:	b.mi	4bc38 <my_regprop@@Base+0x11974>  // b.first
   4ba68:	mov	w3, #0x0                   	// #0
   4ba6c:	mov	x2, x20
   4ba70:	mov	x1, x22
   4ba74:	mov	x0, x21
   4ba78:	bl	56f0 <Perl_av_fetch@plt>
   4ba7c:	cbz	x0, 4b9b8 <my_regprop@@Base+0x116f4>
   4ba80:	ldr	x1, [x0]
   4ba84:	ldr	w0, [x1, #12]
   4ba88:	tbz	w0, #8, 4bc18 <my_regprop@@Base+0x11954>
   4ba8c:	and	w2, w0, w25
   4ba90:	cmp	w2, w24
   4ba94:	b.ne	4bae4 <my_regprop@@Base+0x11820>  // b.any
   4ba98:	and	w2, w0, #0xf
   4ba9c:	ldrb	w2, [x27, w2, uxtw]
   4baa0:	cbz	w2, 4b9dc <my_regprop@@Base+0x11718>
   4baa4:	and	w2, w0, #0xc000
   4baa8:	cmp	w2, #0x8, lsl #12
   4baac:	b.ne	4ba00 <my_regprop@@Base+0x1173c>  // b.any
   4bab0:	and	w0, w0, #0xff
   4bab4:	sub	w0, w0, #0x9
   4bab8:	cmp	w0, #0x1
   4babc:	b.hi	4ba00 <my_regprop@@Base+0x1173c>  // b.pmore
   4bac0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4bac4:	add	x3, x3, #0xc10
   4bac8:	add	x3, x3, #0x900
   4bacc:	mov	w2, #0x3f67                	// #16231
   4bad0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4bad4:	add	x1, x1, #0xfb8
   4bad8:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4badc:	add	x0, x0, #0x10
   4bae0:	bl	58e0 <__assert_fail@plt>
   4bae4:	mov	w2, w28
   4bae8:	mov	x0, x21
   4baec:	bl	4f30 <Perl_sv_2uv_flags@plt>
   4baf0:	and	w19, w0, #0xff
   4baf4:	b	4ba08 <my_regprop@@Base+0x11744>
   4baf8:	ldr	x1, [sp, #216]
   4bafc:	cbz	x1, 4bb14 <my_regprop@@Base+0x11850>
   4bb00:	ldr	w2, [x1, #8]
   4bb04:	cmp	w2, #0x1
   4bb08:	b.ls	4bbc4 <my_regprop@@Base+0x11900>  // b.plast
   4bb0c:	sub	w2, w2, #0x1
   4bb10:	str	w2, [x1, #8]
   4bb14:	ldr	x1, [x23, #24]
   4bb18:	cbz	x1, 4bb28 <my_regprop@@Base+0x11864>
   4bb1c:	mov	w2, #0xb                   	// #11
   4bb20:	mov	x0, x21
   4bb24:	bl	54b0 <Perl_save_pushptr@plt>
   4bb28:	ldr	x1, [x23, #160]
   4bb2c:	cbz	x1, 4bb3c <my_regprop@@Base+0x11878>
   4bb30:	mov	w2, #0xa                   	// #10
   4bb34:	mov	x0, x21
   4bb38:	bl	54b0 <Perl_save_pushptr@plt>
   4bb3c:	ldr	x1, [x23, #168]
   4bb40:	cbz	x1, 4bb50 <my_regprop@@Base+0x1188c>
   4bb44:	mov	w2, #0xa                   	// #10
   4bb48:	mov	x0, x21
   4bb4c:	bl	54b0 <Perl_save_pushptr@plt>
   4bb50:	ldr	x0, [x23, #64]
   4bb54:	ldr	x1, [x23, #72]
   4bb58:	sub	x1, x0, x1
   4bb5c:	ldr	x0, [x23, #80]
   4bb60:	add	x0, x0, x1
   4bb64:	ldr	x2, [x23, #16]
   4bb68:	cmp	x0, x2
   4bb6c:	b.hi	4bbd0 <my_regprop@@Base+0x1190c>  // b.pmore
   4bb70:	ldr	x7, [x23, #8]
   4bb74:	subs	x4, x0, x7
   4bb78:	b.mi	4bbe0 <my_regprop@@Base+0x1191c>  // b.first
   4bb7c:	mov	x6, x4
   4bb80:	sub	x3, x2, x0
   4bb84:	ldr	w1, [x23, #192]
   4bb88:	cmp	w1, #0x0
   4bb8c:	cset	w1, ne  // ne = any
   4bb90:	cmp	x0, x2
   4bb94:	csel	x0, x0, x2, ls  // ls = plast
   4bb98:	str	x0, [sp, #16]
   4bb9c:	str	x3, [sp, #8]
   4bba0:	str	w1, [sp]
   4bba4:	mov	w5, w1
   4bba8:	mov	w4, w19
   4bbac:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4bbb0:	add	x3, x3, #0x5d8
   4bbb4:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4bbb8:	add	x2, x2, #0xb0
   4bbbc:	mov	x0, x21
   4bbc0:	bl	273ac <my_regexec@@Base+0x3eb8>
   4bbc4:	mov	x0, x21
   4bbc8:	bl	5860 <Perl_sv_free2@plt>
   4bbcc:	b	4bb14 <my_regprop@@Base+0x11850>
   4bbd0:	ldr	x7, [x23, #8]
   4bbd4:	sub	x6, x2, x7
   4bbd8:	mov	x3, #0x0                   	// #0
   4bbdc:	b	4bb84 <my_regprop@@Base+0x118c0>
   4bbe0:	ldr	x6, [x23, #48]
   4bbe4:	ldr	x5, [x23, #56]
   4bbe8:	sub	w5, w5, w6
   4bbec:	mov	w3, #0x3f6a                	// #16234
   4bbf0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4bbf4:	add	x2, x2, #0xfb8
   4bbf8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4bbfc:	add	x1, x1, #0x870
   4bc00:	mov	x0, x21
   4bc04:	bl	5420 <Perl_croak@plt>
   4bc08:	mov	x1, x0
   4bc0c:	mov	x0, x21
   4bc10:	bl	5860 <Perl_sv_free2@plt>
   4bc14:	b	4ba40 <my_regprop@@Base+0x1177c>
   4bc18:	ldr	x0, [sp, #200]
   4bc1c:	cmp	w19, #0x29
   4bc20:	ccmp	x20, x0, #0x0, ne  // ne = any
   4bc24:	b.eq	4bc74 <my_regprop@@Base+0x119b0>  // b.none
   4bc28:	ldr	x0, [sp, #200]
   4bc2c:	sub	x20, x20, x0
   4bc30:	cmp	x20, #0x0
   4bc34:	b.gt	4bc4c <my_regprop@@Base+0x11988>
   4bc38:	ldr	x2, [sp, #216]
   4bc3c:	mov	x1, x22
   4bc40:	mov	x0, x21
   4bc44:	bl	5430 <Perl_av_push@plt>
   4bc48:	b	4a848 <my_regprop@@Base+0x10584>
   4bc4c:	sub	w2, w26, #0x1
   4bc50:	mov	w3, #0x0                   	// #0
   4bc54:	sxtw	x2, w2
   4bc58:	mov	x1, x22
   4bc5c:	mov	x0, x21
   4bc60:	bl	56f0 <Perl_av_fetch@plt>
   4bc64:	cbz	x0, 4bc74 <my_regprop@@Base+0x119b0>
   4bc68:	ldr	x0, [x0]
   4bc6c:	ldr	w0, [x0, #12]
   4bc70:	tbnz	w0, #8, 4bc38 <my_regprop@@Base+0x11974>
   4bc74:	ldr	x1, [sp, #216]
   4bc78:	cbz	x1, 4bc90 <my_regprop@@Base+0x119cc>
   4bc7c:	ldr	w2, [x1, #8]
   4bc80:	cmp	w2, #0x1
   4bc84:	b.ls	4bd30 <my_regprop@@Base+0x11a6c>  // b.plast
   4bc88:	sub	w2, w2, #0x1
   4bc8c:	str	w2, [x1, #8]
   4bc90:	ldr	x1, [x23, #24]
   4bc94:	cbz	x1, 4bca4 <my_regprop@@Base+0x119e0>
   4bc98:	mov	w2, #0xb                   	// #11
   4bc9c:	mov	x0, x21
   4bca0:	bl	54b0 <Perl_save_pushptr@plt>
   4bca4:	ldr	x1, [x23, #160]
   4bca8:	cbz	x1, 4bcb8 <my_regprop@@Base+0x119f4>
   4bcac:	mov	w2, #0xa                   	// #10
   4bcb0:	mov	x0, x21
   4bcb4:	bl	54b0 <Perl_save_pushptr@plt>
   4bcb8:	ldr	x1, [x23, #168]
   4bcbc:	cbz	x1, 4bccc <my_regprop@@Base+0x11a08>
   4bcc0:	mov	w2, #0xa                   	// #10
   4bcc4:	mov	x0, x21
   4bcc8:	bl	54b0 <Perl_save_pushptr@plt>
   4bccc:	ldr	x0, [x23, #64]
   4bcd0:	ldr	x1, [x23, #72]
   4bcd4:	sub	x1, x0, x1
   4bcd8:	ldr	x0, [x23, #80]
   4bcdc:	add	x0, x0, x1
   4bce0:	ldr	x1, [x23, #16]
   4bce4:	cmp	x0, x1
   4bce8:	b.hi	4bd3c <my_regprop@@Base+0x11a78>  // b.pmore
   4bcec:	ldr	x5, [x23, #8]
   4bcf0:	sub	x7, x1, x0
   4bcf4:	subs	x4, x0, x5
   4bcf8:	b.mi	4bd4c <my_regprop@@Base+0x11a88>  // b.first
   4bcfc:	ldr	w2, [x23, #192]
   4bd00:	cmp	w2, #0x0
   4bd04:	cset	w3, ne  // ne = any
   4bd08:	cmp	x0, x1
   4bd0c:	csel	x0, x0, x1, ls  // ls = plast
   4bd10:	str	x0, [sp]
   4bd14:	mov	w6, w3
   4bd18:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4bd1c:	add	x2, x2, #0x120
   4bd20:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4bd24:	add	x1, x1, #0x3a8
   4bd28:	mov	x0, x21
   4bd2c:	bl	5420 <Perl_croak@plt>
   4bd30:	mov	x0, x21
   4bd34:	bl	5860 <Perl_sv_free2@plt>
   4bd38:	b	4bc90 <my_regprop@@Base+0x119cc>
   4bd3c:	ldr	x5, [x23, #8]
   4bd40:	sub	x4, x1, x5
   4bd44:	mov	x7, #0x0                   	// #0
   4bd48:	b	4bcfc <my_regprop@@Base+0x11a38>
   4bd4c:	ldr	x6, [x23, #48]
   4bd50:	ldr	x5, [x23, #56]
   4bd54:	sub	w5, w5, w6
   4bd58:	mov	w3, #0x3f81                	// #16257
   4bd5c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4bd60:	add	x2, x2, #0xfb8
   4bd64:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4bd68:	add	x1, x1, #0x870
   4bd6c:	mov	x0, x21
   4bd70:	bl	5420 <Perl_croak@plt>
   4bd74:	ldr	x0, [x23, #64]
   4bd78:	ldr	x1, [x23, #56]
   4bd7c:	cmp	x0, x1
   4bd80:	b.cs	4bd98 <my_regprop@@Base+0x11ad4>  // b.hs, b.nlast
   4bd84:	ldrb	w1, [x0, #1]
   4bd88:	cmp	w1, #0x29
   4bd8c:	b.eq	4bf48 <my_regprop@@Base+0x11c84>  // b.none
   4bd90:	add	x0, x0, #0x1
   4bd94:	str	x0, [x23, #64]
   4bd98:	ldr	x1, [x23, #24]
   4bd9c:	cbz	x1, 4bdac <my_regprop@@Base+0x11ae8>
   4bda0:	mov	w2, #0xb                   	// #11
   4bda4:	mov	x0, x21
   4bda8:	bl	54b0 <Perl_save_pushptr@plt>
   4bdac:	ldr	x1, [x23, #160]
   4bdb0:	cbz	x1, 4bdc0 <my_regprop@@Base+0x11afc>
   4bdb4:	mov	w2, #0xa                   	// #10
   4bdb8:	mov	x0, x21
   4bdbc:	bl	54b0 <Perl_save_pushptr@plt>
   4bdc0:	ldr	x1, [x23, #168]
   4bdc4:	cbz	x1, 4bdd4 <my_regprop@@Base+0x11b10>
   4bdc8:	mov	w2, #0xa                   	// #10
   4bdcc:	mov	x0, x21
   4bdd0:	bl	54b0 <Perl_save_pushptr@plt>
   4bdd4:	ldr	x0, [x23, #64]
   4bdd8:	ldr	x1, [x23, #72]
   4bddc:	sub	x1, x0, x1
   4bde0:	ldr	x0, [x23, #80]
   4bde4:	add	x0, x0, x1
   4bde8:	ldr	x1, [x23, #16]
   4bdec:	cmp	x0, x1
   4bdf0:	b.hi	4bf10 <my_regprop@@Base+0x11c4c>  // b.pmore
   4bdf4:	ldr	x5, [x23, #8]
   4bdf8:	sub	x7, x1, x0
   4bdfc:	subs	x4, x0, x5
   4be00:	b.mi	4bf20 <my_regprop@@Base+0x11c5c>  // b.first
   4be04:	ldr	w2, [x23, #192]
   4be08:	cmp	w2, #0x0
   4be0c:	cset	w3, ne  // ne = any
   4be10:	cmp	x0, x1
   4be14:	csel	x0, x0, x1, ls  // ls = plast
   4be18:	str	x0, [sp]
   4be1c:	mov	w6, w3
   4be20:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4be24:	add	x2, x2, #0x168
   4be28:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4be2c:	add	x1, x1, #0x3a8
   4be30:	mov	x0, x21
   4be34:	bl	5420 <Perl_croak@plt>
   4be38:	ldr	x1, [x23, #24]
   4be3c:	cbz	x1, 4be4c <my_regprop@@Base+0x11b88>
   4be40:	mov	w2, #0xb                   	// #11
   4be44:	mov	x0, x21
   4be48:	bl	54b0 <Perl_save_pushptr@plt>
   4be4c:	ldr	x1, [x23, #160]
   4be50:	cbz	x1, 4be60 <my_regprop@@Base+0x11b9c>
   4be54:	mov	w2, #0xa                   	// #10
   4be58:	mov	x0, x21
   4be5c:	bl	54b0 <Perl_save_pushptr@plt>
   4be60:	ldr	x1, [x23, #168]
   4be64:	cbz	x1, 4be74 <my_regprop@@Base+0x11bb0>
   4be68:	mov	w2, #0xa                   	// #10
   4be6c:	mov	x0, x21
   4be70:	bl	54b0 <Perl_save_pushptr@plt>
   4be74:	ldr	x0, [x23, #64]
   4be78:	ldr	x1, [x23, #72]
   4be7c:	sub	x1, x0, x1
   4be80:	ldr	x0, [x23, #80]
   4be84:	add	x0, x0, x1
   4be88:	ldr	x1, [x23, #16]
   4be8c:	cmp	x0, x1
   4be90:	b.hi	4bed8 <my_regprop@@Base+0x11c14>  // b.pmore
   4be94:	ldr	x5, [x23, #8]
   4be98:	sub	x7, x1, x0
   4be9c:	subs	x4, x0, x5
   4bea0:	b.mi	4bee8 <my_regprop@@Base+0x11c24>  // b.first
   4bea4:	ldr	w2, [x23, #192]
   4bea8:	cmp	w2, #0x0
   4beac:	cset	w3, ne  // ne = any
   4beb0:	cmp	x0, x1
   4beb4:	csel	x0, x0, x1, ls  // ls = plast
   4beb8:	str	x0, [sp]
   4bebc:	mov	w6, w3
   4bec0:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4bec4:	add	x2, x2, #0x148
   4bec8:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4becc:	add	x1, x1, #0x3a8
   4bed0:	mov	x0, x21
   4bed4:	bl	5420 <Perl_croak@plt>
   4bed8:	ldr	x5, [x23, #8]
   4bedc:	sub	x4, x1, x5
   4bee0:	mov	x7, #0x0                   	// #0
   4bee4:	b	4bea4 <my_regprop@@Base+0x11be0>
   4bee8:	ldr	x6, [x23, #48]
   4beec:	ldr	x5, [x23, #56]
   4bef0:	sub	w5, w5, w6
   4bef4:	mov	w3, #0x3f8e                	// #16270
   4bef8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4befc:	add	x2, x2, #0xfb8
   4bf00:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4bf04:	add	x1, x1, #0x870
   4bf08:	mov	x0, x21
   4bf0c:	bl	5420 <Perl_croak@plt>
   4bf10:	ldr	x5, [x23, #8]
   4bf14:	sub	x4, x1, x5
   4bf18:	mov	x7, #0x0                   	// #0
   4bf1c:	b	4be04 <my_regprop@@Base+0x11b40>
   4bf20:	ldr	x6, [x23, #48]
   4bf24:	ldr	x5, [x23, #56]
   4bf28:	sub	w5, w5, w6
   4bf2c:	mov	w3, #0x3f97                	// #16279
   4bf30:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4bf34:	add	x2, x2, #0xfb8
   4bf38:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4bf3c:	add	x1, x1, #0x870
   4bf40:	mov	x0, x21
   4bf44:	bl	5420 <Perl_croak@plt>
   4bf48:	ldr	x0, [sp, #136]
   4bf4c:	ldrb	w0, [x0, #12]
   4bf50:	cmp	w0, #0xb
   4bf54:	b.ne	4c008 <my_regprop@@Base+0x11d44>  // b.any
   4bf58:	ldr	x0, [sp, #136]
   4bf5c:	ldr	x0, [x0]
   4bf60:	ldr	x0, [x0, #16]
   4bf64:	tbnz	x0, #63, 4c064 <my_regprop@@Base+0x11da0>
   4bf68:	ldr	x1, [x23, #24]
   4bf6c:	cbz	x1, 4bf7c <my_regprop@@Base+0x11cb8>
   4bf70:	mov	w2, #0xb                   	// #11
   4bf74:	mov	x0, x21
   4bf78:	bl	54b0 <Perl_save_pushptr@plt>
   4bf7c:	ldr	x1, [x23, #160]
   4bf80:	cbz	x1, 4bf90 <my_regprop@@Base+0x11ccc>
   4bf84:	mov	w2, #0xa                   	// #10
   4bf88:	mov	x0, x21
   4bf8c:	bl	54b0 <Perl_save_pushptr@plt>
   4bf90:	ldr	x1, [x23, #168]
   4bf94:	cbz	x1, 4bfa4 <my_regprop@@Base+0x11ce0>
   4bf98:	mov	w2, #0xa                   	// #10
   4bf9c:	mov	x0, x21
   4bfa0:	bl	54b0 <Perl_save_pushptr@plt>
   4bfa4:	ldr	x0, [x23, #64]
   4bfa8:	ldr	x1, [x23, #72]
   4bfac:	sub	x1, x0, x1
   4bfb0:	ldr	x0, [x23, #80]
   4bfb4:	add	x0, x0, x1
   4bfb8:	ldr	x1, [x23, #16]
   4bfbc:	cmp	x0, x1
   4bfc0:	b.hi	4c02c <my_regprop@@Base+0x11d68>  // b.pmore
   4bfc4:	ldr	x5, [x23, #8]
   4bfc8:	sub	x7, x1, x0
   4bfcc:	subs	x4, x0, x5
   4bfd0:	b.mi	4c03c <my_regprop@@Base+0x11d78>  // b.first
   4bfd4:	ldr	w2, [x23, #192]
   4bfd8:	cmp	w2, #0x0
   4bfdc:	cset	w3, ne  // ne = any
   4bfe0:	cmp	x0, x1
   4bfe4:	csel	x0, x0, x1, ls  // ls = plast
   4bfe8:	str	x0, [sp]
   4bfec:	mov	w6, w3
   4bff0:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   4bff4:	add	x2, x2, #0x788
   4bff8:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4bffc:	add	x1, x1, #0x3a8
   4c000:	mov	x0, x21
   4c004:	bl	5420 <Perl_croak@plt>
   4c008:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c00c:	add	x3, x3, #0xc10
   4c010:	add	x3, x3, #0x900
   4c014:	mov	w2, #0x3f9a                	// #16282
   4c018:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c01c:	add	x1, x1, #0xfb8
   4c020:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4c024:	add	x0, x0, #0x58
   4c028:	bl	58e0 <__assert_fail@plt>
   4c02c:	ldr	x5, [x23, #8]
   4c030:	sub	x4, x1, x5
   4c034:	mov	x7, #0x0                   	// #0
   4c038:	b	4bfd4 <my_regprop@@Base+0x11d10>
   4c03c:	ldr	x6, [x23, #48]
   4c040:	ldr	x5, [x23, #56]
   4c044:	sub	w5, w5, w6
   4c048:	mov	w3, #0x3f9b                	// #16283
   4c04c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4c050:	add	x2, x2, #0xfb8
   4c054:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4c058:	add	x1, x1, #0x870
   4c05c:	mov	x0, x21
   4c060:	bl	5420 <Perl_croak@plt>
   4c064:	ldrb	w0, [x22, #12]
   4c068:	cmp	w0, #0xb
   4c06c:	b.ne	4c170 <my_regprop@@Base+0x11eac>  // b.any
   4c070:	ldr	x0, [x22]
   4c074:	ldr	x0, [x0, #16]
   4c078:	tbnz	x0, #63, 4c0d0 <my_regprop@@Base+0x11e0c>
   4c07c:	mov	x1, x22
   4c080:	mov	x0, x21
   4c084:	bl	5510 <Perl_av_pop@plt>
   4c088:	mov	x19, x0
   4c08c:	cbz	x0, 4c0d0 <my_regprop@@Base+0x11e0c>
   4c090:	ldr	w0, [x0, #12]
   4c094:	tbnz	w0, #8, 4c0bc <my_regprop@@Base+0x11df8>
   4c098:	and	w0, w0, #0xff
   4c09c:	cmp	w0, #0x4
   4c0a0:	b.ne	4c0bc <my_regprop@@Base+0x11df8>  // b.any
   4c0a4:	ldrb	w0, [x22, #12]
   4c0a8:	cmp	w0, #0xb
   4c0ac:	b.ne	4c194 <my_regprop@@Base+0x11ed0>  // b.any
   4c0b0:	ldr	x0, [x22]
   4c0b4:	ldr	x0, [x0, #16]
   4c0b8:	tbnz	x0, #63, 4c200 <my_regprop@@Base+0x11f3c>
   4c0bc:	ldr	w2, [x19, #8]
   4c0c0:	cmp	w2, #0x1
   4c0c4:	b.ls	4c1b8 <my_regprop@@Base+0x11ef4>  // b.plast
   4c0c8:	sub	w2, w2, #0x1
   4c0cc:	str	w2, [x19, #8]
   4c0d0:	ldr	x1, [x23, #24]
   4c0d4:	cbz	x1, 4c0e4 <my_regprop@@Base+0x11e20>
   4c0d8:	mov	w2, #0xb                   	// #11
   4c0dc:	mov	x0, x21
   4c0e0:	bl	54b0 <Perl_save_pushptr@plt>
   4c0e4:	ldr	x1, [x23, #160]
   4c0e8:	cbz	x1, 4c0f8 <my_regprop@@Base+0x11e34>
   4c0ec:	mov	w2, #0xa                   	// #10
   4c0f0:	mov	x0, x21
   4c0f4:	bl	54b0 <Perl_save_pushptr@plt>
   4c0f8:	ldr	x1, [x23, #168]
   4c0fc:	cbz	x1, 4c10c <my_regprop@@Base+0x11e48>
   4c100:	mov	w2, #0xa                   	// #10
   4c104:	mov	x0, x21
   4c108:	bl	54b0 <Perl_save_pushptr@plt>
   4c10c:	ldr	x0, [x23, #64]
   4c110:	ldr	x1, [x23, #72]
   4c114:	sub	x1, x0, x1
   4c118:	ldr	x0, [x23, #80]
   4c11c:	add	x0, x0, x1
   4c120:	ldr	x1, [x23, #16]
   4c124:	cmp	x0, x1
   4c128:	b.hi	4c1c8 <my_regprop@@Base+0x11f04>  // b.pmore
   4c12c:	ldr	x5, [x23, #8]
   4c130:	sub	x7, x1, x0
   4c134:	subs	x4, x0, x5
   4c138:	b.mi	4c1d8 <my_regprop@@Base+0x11f14>  // b.first
   4c13c:	ldr	w2, [x23, #192]
   4c140:	cmp	w2, #0x0
   4c144:	cset	w3, ne  // ne = any
   4c148:	cmp	x0, x1
   4c14c:	csel	x0, x0, x1, ls  // ls = plast
   4c150:	str	x0, [sp]
   4c154:	mov	w6, w3
   4c158:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4c15c:	add	x2, x2, #0x198
   4c160:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4c164:	add	x1, x1, #0x3a8
   4c168:	mov	x0, x21
   4c16c:	bl	5420 <Perl_croak@plt>
   4c170:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c174:	add	x3, x3, #0xc10
   4c178:	add	x3, x3, #0x900
   4c17c:	mov	w2, #0x3f9e                	// #16286
   4c180:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c184:	add	x1, x1, #0xfb8
   4c188:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4c18c:	add	x0, x0, #0xf10
   4c190:	bl	58e0 <__assert_fail@plt>
   4c194:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c198:	add	x3, x3, #0xc10
   4c19c:	add	x3, x3, #0x900
   4c1a0:	mov	w2, #0x3fa2                	// #16290
   4c1a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c1a8:	add	x1, x1, #0xfb8
   4c1ac:	adrp	x0, 7a000 <boot_re@@Base+0x1841c>
   4c1b0:	add	x0, x0, #0xf10
   4c1b4:	bl	58e0 <__assert_fail@plt>
   4c1b8:	mov	x1, x19
   4c1bc:	mov	x0, x21
   4c1c0:	bl	5860 <Perl_sv_free2@plt>
   4c1c4:	b	4c0d0 <my_regprop@@Base+0x11e0c>
   4c1c8:	ldr	x5, [x23, #8]
   4c1cc:	sub	x4, x1, x5
   4c1d0:	mov	x7, #0x0                   	// #0
   4c1d4:	b	4c13c <my_regprop@@Base+0x11e78>
   4c1d8:	ldr	x6, [x23, #48]
   4c1dc:	ldr	x5, [x23, #56]
   4c1e0:	sub	w5, w5, w6
   4c1e4:	mov	w3, #0x3fa6                	// #16294
   4c1e8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4c1ec:	add	x2, x2, #0xfb8
   4c1f0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4c1f4:	add	x1, x1, #0x870
   4c1f8:	mov	x0, x21
   4c1fc:	bl	5420 <Perl_croak@plt>
   4c200:	ldr	x0, [sp, #184]
   4c204:	cbz	x0, 4c21c <my_regprop@@Base+0x11f58>
   4c208:	str	x19, [x0]
   4c20c:	mov	x24, #0x0                   	// #0
   4c210:	ldp	x25, x26, [sp, #96]
   4c214:	ldp	x27, x28, [sp, #112]
   4c218:	b	4a410 <my_regprop@@Base+0x1014c>
   4c21c:	ldr	x0, [x19]
   4c220:	str	xzr, [x0, #40]
   4c224:	mov	x2, #0x0                   	// #0
   4c228:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   4c22c:	add	x1, x1, #0x20
   4c230:	mov	x0, x21
   4c234:	bl	59a0 <Perl_newSVpvn@plt>
   4c238:	mov	x20, x0
   4c23c:	add	x24, sp, #0xe8
   4c240:	add	x25, sp, #0xe0
   4c244:	adrp	x26, 7b000 <boot_re@@Base+0x1941c>
   4c248:	add	x26, x26, #0x1c0
   4c24c:	adrp	x22, 7b000 <boot_re@@Base+0x1941c>
   4c250:	b	4c264 <my_regprop@@Base+0x11fa0>
   4c254:	add	x2, x22, #0x1c8
   4c258:	mov	x1, x20
   4c25c:	mov	x0, x21
   4c260:	bl	5120 <Perl_sv_catpvf@plt>
   4c264:	mov	x2, x24
   4c268:	mov	x1, x25
   4c26c:	mov	x0, x19
   4c270:	bl	2da40 <my_regexec@@Base+0xa54c>
   4c274:	and	w0, w0, #0xff
   4c278:	cbz	w0, 4c2a0 <my_regprop@@Base+0x11fdc>
   4c27c:	ldr	x3, [sp, #224]
   4c280:	ldr	x4, [sp, #232]
   4c284:	cmp	x3, x4
   4c288:	b.eq	4c254 <my_regprop@@Base+0x11f90>  // b.none
   4c28c:	mov	x2, x26
   4c290:	mov	x1, x20
   4c294:	mov	x0, x21
   4c298:	bl	5120 <Perl_sv_catpvf@plt>
   4c29c:	b	4c264 <my_regprop@@Base+0x11fa0>
   4c2a0:	ldr	x25, [x23, #64]
   4c2a4:	ldr	w0, [x20, #12]
   4c2a8:	and	w1, w0, #0x3ffc00
   4c2ac:	and	w1, w1, #0xffe007ff
   4c2b0:	cmp	w1, #0x400
   4c2b4:	b.ne	4c4d0 <my_regprop@@Base+0x1220c>  // b.any
   4c2b8:	and	x1, x0, #0xf
   4c2bc:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   4c2c0:	ldr	x2, [x2, #3888]
   4c2c4:	ldrb	w1, [x2, x1]
   4c2c8:	cbz	w1, 4c3c0 <my_regprop@@Base+0x120fc>
   4c2cc:	and	w2, w0, #0xc000
   4c2d0:	cmp	w2, #0x8, lsl #12
   4c2d4:	b.eq	4c3e4 <my_regprop@@Base+0x12120>  // b.none
   4c2d8:	and	w0, w0, #0xff
   4c2dc:	cmp	w0, #0xf
   4c2e0:	b.eq	4c468 <my_regprop@@Base+0x121a4>  // b.none
   4c2e4:	ldr	x0, [x20]
   4c2e8:	ldr	x0, [x0, #16]
   4c2ec:	str	x0, [sp, #240]
   4c2f0:	ldr	x0, [x20, #16]
   4c2f4:	str	x0, [x23, #64]
   4c2f8:	ldr	x22, [x23, #56]
   4c2fc:	ldr	x1, [sp, #240]
   4c300:	add	x0, x0, x1
   4c304:	str	x0, [x23, #56]
   4c308:	str	xzr, [x23, #72]
   4c30c:	ldr	w0, [x23]
   4c310:	and	w0, w0, #0xfffffffb
   4c314:	str	w0, [x23]
   4c318:	str	xzr, [sp, #8]
   4c31c:	strb	wzr, [sp]
   4c320:	mov	w7, #0x0                   	// #0
   4c324:	mov	w6, #0x1                   	// #1
   4c328:	mov	w5, #0x0                   	// #0
   4c32c:	mov	w4, #0x0                   	// #0
   4c330:	ldr	w0, [sp, #148]
   4c334:	add	w3, w0, #0x1
   4c338:	ldr	x2, [sp, #128]
   4c33c:	mov	x1, x23
   4c340:	mov	x0, x21
   4c344:	bl	437e4 <my_regprop@@Base+0x9520>
   4c348:	mov	x24, x0
   4c34c:	ldr	x0, [x23, #8]
   4c350:	str	x0, [x23, #72]
   4c354:	add	x25, x25, #0x1
   4c358:	str	x25, [x23, #64]
   4c35c:	str	x22, [x23, #56]
   4c360:	ldr	w2, [x19, #8]
   4c364:	cmp	w2, #0x1
   4c368:	b.ls	4c4e8 <my_regprop@@Base+0x12224>  // b.plast
   4c36c:	sub	w2, w2, #0x1
   4c370:	str	w2, [x19, #8]
   4c374:	ldr	w2, [x20, #8]
   4c378:	cmp	w2, #0x1
   4c37c:	b.ls	4c4f8 <my_regprop@@Base+0x12234>  // b.plast
   4c380:	sub	w2, w2, #0x1
   4c384:	str	w2, [x20, #8]
   4c388:	ldr	x0, [sp, #176]
   4c38c:	tbz	w0, #2, 4c39c <my_regprop@@Base+0x120d8>
   4c390:	ldr	w0, [x23]
   4c394:	orr	w0, w0, #0x4
   4c398:	str	w0, [x23]
   4c39c:	cbnz	x24, 4c508 <my_regprop@@Base+0x12244>
   4c3a0:	ldr	x1, [sp, #128]
   4c3a4:	ldr	w0, [x1]
   4c3a8:	ands	w0, w0, #0x60
   4c3ac:	b.eq	4c600 <my_regprop@@Base+0x1233c>  // b.none
   4c3b0:	str	w0, [x1]
   4c3b4:	ldp	x25, x26, [sp, #96]
   4c3b8:	ldp	x27, x28, [sp, #112]
   4c3bc:	b	4a410 <my_regprop@@Base+0x1014c>
   4c3c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c3c4:	add	x3, x3, #0xc10
   4c3c8:	add	x3, x3, #0x900
   4c3cc:	mov	w2, #0x3fc1                	// #16321
   4c3d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c3d4:	add	x1, x1, #0xfb8
   4c3d8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4c3dc:	add	x0, x0, #0xe40
   4c3e0:	bl	58e0 <__assert_fail@plt>
   4c3e4:	and	w1, w0, #0xff
   4c3e8:	sub	w1, w1, #0x9
   4c3ec:	cmp	w1, #0x1
   4c3f0:	b.ls	4c444 <my_regprop@@Base+0x12180>  // b.plast
   4c3f4:	and	w0, w0, #0xff
   4c3f8:	cmp	w0, #0xf
   4c3fc:	b.eq	4c468 <my_regprop@@Base+0x121a4>  // b.none
   4c400:	ldr	x1, [x20]
   4c404:	ldr	x1, [x1, #16]
   4c408:	str	x1, [sp, #240]
   4c40c:	cmp	w2, #0x8, lsl #12
   4c410:	b.ne	4c2f0 <my_regprop@@Base+0x1202c>  // b.any
   4c414:	sub	w0, w0, #0x9
   4c418:	cmp	w0, #0x1
   4c41c:	b.hi	4c2f0 <my_regprop@@Base+0x1202c>  // b.pmore
   4c420:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c424:	add	x3, x3, #0xc10
   4c428:	add	x3, x3, #0x900
   4c42c:	mov	w2, #0x3fc1                	// #16321
   4c430:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c434:	add	x1, x1, #0xfb8
   4c438:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4c43c:	add	x0, x0, #0xd40
   4c440:	bl	58e0 <__assert_fail@plt>
   4c444:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c448:	add	x3, x3, #0xc10
   4c44c:	add	x3, x3, #0x900
   4c450:	mov	w2, #0x3fc1                	// #16321
   4c454:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c458:	add	x1, x1, #0xfb8
   4c45c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4c460:	add	x0, x0, #0xe70
   4c464:	bl	58e0 <__assert_fail@plt>
   4c468:	ldr	x0, [x20]
   4c46c:	ldrb	w1, [x0, #129]
   4c470:	tbz	w1, #6, 4c4ac <my_regprop@@Base+0x121e8>
   4c474:	ldr	x0, [x0, #16]
   4c478:	str	x0, [sp, #240]
   4c47c:	ldr	x0, [x20]
   4c480:	ldrb	w0, [x0, #129]
   4c484:	tbnz	w0, #6, 4c2f0 <my_regprop@@Base+0x1202c>
   4c488:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c48c:	add	x3, x3, #0xc10
   4c490:	add	x3, x3, #0x900
   4c494:	mov	w2, #0x3fc1                	// #16321
   4c498:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c49c:	add	x1, x1, #0xfb8
   4c4a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4c4a4:	add	x0, x0, #0xd58
   4c4a8:	bl	58e0 <__assert_fail@plt>
   4c4ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c4b0:	add	x3, x3, #0xc10
   4c4b4:	add	x3, x3, #0x900
   4c4b8:	mov	w2, #0x3fc1                	// #16321
   4c4bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c4c0:	add	x1, x1, #0xfb8
   4c4c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4c4c8:	add	x0, x0, #0xe88
   4c4cc:	bl	58e0 <__assert_fail@plt>
   4c4d0:	mov	w3, #0x2                   	// #2
   4c4d4:	add	x2, sp, #0xf0
   4c4d8:	mov	x1, x20
   4c4dc:	mov	x0, x21
   4c4e0:	bl	5200 <Perl_sv_2pv_flags@plt>
   4c4e4:	b	4c2f4 <my_regprop@@Base+0x12030>
   4c4e8:	mov	x1, x19
   4c4ec:	mov	x0, x21
   4c4f0:	bl	5860 <Perl_sv_free2@plt>
   4c4f4:	b	4c374 <my_regprop@@Base+0x120b0>
   4c4f8:	mov	x1, x20
   4c4fc:	mov	x0, x21
   4c500:	bl	5860 <Perl_sv_free2@plt>
   4c504:	b	4c388 <my_regprop@@Base+0x120c4>
   4c508:	ldr	w0, [sp, #168]
   4c50c:	cmp	w0, #0x1
   4c510:	b.ne	4c554 <my_regprop@@Base+0x12290>  // b.any
   4c514:	ldr	w0, [x23]
   4c518:	and	w0, w0, #0xfffffc7f
   4c51c:	orr	w0, w0, #0x80
   4c520:	str	w0, [x23]
   4c524:	lsl	x1, x24, #2
   4c528:	ldr	x0, [x23, #96]
   4c52c:	add	x0, x0, x24, lsl #2
   4c530:	ldrb	w2, [x0, #1]
   4c534:	cmp	w2, #0x12
   4c538:	b.ne	4c5c8 <my_regprop@@Base+0x12304>  // b.any
   4c53c:	mov	w2, #0x14                  	// #20
   4c540:	strb	w2, [x0, #1]
   4c544:	ldr	x2, [x23, #96]
   4c548:	ldrb	w0, [x2, x1]
   4c54c:	orr	w0, w0, #0x8
   4c550:	strb	w0, [x2, x1]
   4c554:	mov	x1, x23
   4c558:	mov	x0, x21
   4c55c:	bl	269a4 <my_regexec@@Base+0x34b0>
   4c560:	ldr	w0, [x21, #2368]
   4c564:	tbnz	w0, #20, 4c570 <my_regprop@@Base+0x122ac>
   4c568:	ldr	x0, [sp, #208]
   4c56c:	tbz	w0, #18, 4c594 <my_regprop@@Base+0x122d0>
   4c570:	ldr	x3, [x23, #64]
   4c574:	ldr	x0, [sp, #160]
   4c578:	sub	x3, x3, x0
   4c57c:	add	w3, w3, #0x1
   4c580:	mov	w2, w24
   4c584:	mov	w1, #0x4001                	// #16385
   4c588:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4c58c:	add	x0, x0, #0x8
   4c590:	bl	5010 <Perl_warn_nocontext@plt>
   4c594:	lsl	x2, x24, #2
   4c598:	tbnz	x24, #61, 4c5ec <my_regprop@@Base+0x12328>
   4c59c:	ldr	x0, [x23, #40]
   4c5a0:	ldr	x1, [x0, #8]
   4c5a4:	lsl	x2, x2, #1
   4c5a8:	ldr	x0, [x23, #64]
   4c5ac:	ldr	x3, [sp, #160]
   4c5b0:	sub	x0, x0, x3
   4c5b4:	add	w0, w0, #0x1
   4c5b8:	str	w0, [x1, x2]
   4c5bc:	ldp	x25, x26, [sp, #96]
   4c5c0:	ldp	x27, x28, [sp, #112]
   4c5c4:	b	4a410 <my_regprop@@Base+0x1014c>
   4c5c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c5cc:	add	x3, x3, #0xc10
   4c5d0:	add	x3, x3, #0x900
   4c5d4:	mov	w2, #0x3ff9                	// #16377
   4c5d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4c5dc:	add	x1, x1, #0xfb8
   4c5e0:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4c5e4:	add	x0, x0, #0x1d0
   4c5e8:	bl	58e0 <__assert_fail@plt>
   4c5ec:	ubfx	x2, x2, #2, #32
   4c5f0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c5f4:	add	x1, x1, #0x888
   4c5f8:	mov	x0, x21
   4c5fc:	bl	5420 <Perl_croak@plt>
   4c600:	ldr	x19, [x23, #16]
   4c604:	ldr	x0, [x23, #8]
   4c608:	sub	x19, x19, x0
   4c60c:	ldr	x1, [x23, #24]
   4c610:	cbz	x1, 4c620 <my_regprop@@Base+0x1235c>
   4c614:	mov	w2, #0xb                   	// #11
   4c618:	mov	x0, x21
   4c61c:	bl	54b0 <Perl_save_pushptr@plt>
   4c620:	ldr	x1, [x23, #160]
   4c624:	cbz	x1, 4c634 <my_regprop@@Base+0x12370>
   4c628:	mov	w2, #0xa                   	// #10
   4c62c:	mov	x0, x21
   4c630:	bl	54b0 <Perl_save_pushptr@plt>
   4c634:	ldr	x1, [x23, #168]
   4c638:	cbz	x1, 4c648 <my_regprop@@Base+0x12384>
   4c63c:	mov	w2, #0xa                   	// #10
   4c640:	mov	x0, x21
   4c644:	bl	54b0 <Perl_save_pushptr@plt>
   4c648:	cmp	x19, #0x7f
   4c64c:	b.le	4c688 <my_regprop@@Base+0x123c4>
   4c650:	mov	x19, #0x75                  	// #117
   4c654:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4c658:	add	x6, x6, #0xfe0
   4c65c:	ldr	w0, [x23, #192]
   4c660:	cmp	w0, #0x0
   4c664:	ldr	x5, [x23, #8]
   4c668:	mov	x4, x19
   4c66c:	cset	w3, ne  // ne = any
   4c670:	ldr	x0, [sp, #128]
   4c674:	ldrsw	x2, [x0]
   4c678:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4c67c:	add	x1, x1, #0x1f0
   4c680:	mov	x0, x21
   4c684:	bl	5420 <Perl_croak@plt>
   4c688:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4c68c:	add	x6, x6, #0x20
   4c690:	b	4c65c <my_regprop@@Base+0x12398>
   4c694:	stp	x25, x26, [sp, #96]
   4c698:	stp	x27, x28, [sp, #112]
   4c69c:	bl	5300 <__stack_chk_fail@plt>
   4c6a0:	sub	sp, sp, #0x160
   4c6a4:	stp	x29, x30, [sp, #48]
   4c6a8:	add	x29, sp, #0x30
   4c6ac:	stp	x19, x20, [sp, #64]
   4c6b0:	stp	x21, x22, [sp, #80]
   4c6b4:	stp	x23, x24, [sp, #96]
   4c6b8:	stp	x25, x26, [sp, #112]
   4c6bc:	stp	x27, x28, [sp, #128]
   4c6c0:	mov	x20, x0
   4c6c4:	mov	x19, x1
   4c6c8:	mov	x27, x2
   4c6cc:	mov	w22, w3
   4c6d0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4c6d4:	ldr	x0, [x0, #3920]
   4c6d8:	ldr	x1, [x0]
   4c6dc:	str	x1, [sp, #344]
   4c6e0:	mov	x1, #0x0                   	// #0
   4c6e4:	ldr	x0, [x19, #64]
   4c6e8:	str	x0, [sp, #152]
   4c6ec:	ldr	x0, [x19, #104]
   4c6f0:	str	x0, [sp, #160]
   4c6f4:	str	xzr, [sp, #280]
   4c6f8:	ldr	x0, [x20, #224]
   4c6fc:	cbz	x0, 4c764 <my_regprop@@Base+0x124a0>
   4c700:	mov	w2, #0x1                   	// #1
   4c704:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   4c708:	add	x1, x1, #0x608
   4c70c:	mov	x0, x20
   4c710:	bl	54f0 <Perl_get_sv@plt>
   4c714:	mov	x21, x0
   4c718:	cbz	x0, 4c764 <my_regprop@@Base+0x124a0>
   4c71c:	ldr	w0, [x0, #12]
   4c720:	tbz	w0, #8, 4ca58 <my_regprop@@Base+0x12794>
   4c724:	ldr	w1, [x21, #12]
   4c728:	and	w0, w1, #0x3fff00
   4c72c:	and	w0, w0, #0xffe001ff
   4c730:	cmp	w0, #0x100
   4c734:	b.ne	4cac4 <my_regprop@@Base+0x12800>  // b.any
   4c738:	and	w2, w1, #0xf
   4c73c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4c740:	ldr	x0, [x0, #3712]
   4c744:	ldrb	w0, [x0, w2, uxtw]
   4c748:	cbz	w0, 4ca6c <my_regprop@@Base+0x127a8>
   4c74c:	and	w0, w1, #0xc000
   4c750:	cmp	w0, #0x8, lsl #12
   4c754:	b.eq	4ca90 <my_regprop@@Base+0x127cc>  // b.none
   4c758:	ldr	x0, [x21]
   4c75c:	ldr	x0, [x0, #32]
   4c760:	str	x0, [sp, #280]
   4c764:	cbz	x27, 4cad8 <my_regprop@@Base+0x12814>
   4c768:	ldr	w0, [x20, #2368]
   4c76c:	tbnz	w0, #20, 4c778 <my_regprop@@Base+0x124b4>
   4c770:	ldr	x0, [sp, #280]
   4c774:	tbz	w0, #0, 4c840 <my_regprop@@Base+0x1257c>
   4c778:	ldr	w0, [x20, #2368]
   4c77c:	tbnz	w0, #20, 4c788 <my_regprop@@Base+0x124c4>
   4c780:	ldr	x0, [sp, #280]
   4c784:	tbz	w0, #0, 4c828 <my_regprop@@Base+0x12564>
   4c788:	ldr	x2, [x19, #64]
   4c78c:	ldr	x0, [x19, #336]
   4c790:	cmp	x0, x2
   4c794:	b.eq	4cafc <my_regprop@@Base+0x12838>  // b.none
   4c798:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   4c79c:	add	x5, x5, #0x20
   4c7a0:	ldr	x3, [x19, #56]
   4c7a4:	mov	w7, #0x820e                	// #33294
   4c7a8:	mov	x6, x5
   4c7ac:	mov	x4, #0x10                  	// #16
   4c7b0:	sub	x3, x3, x2
   4c7b4:	ldr	x1, [x19, #368]
   4c7b8:	mov	x0, x20
   4c7bc:	bl	53f0 <Perl_pv_pretty@plt>
   4c7c0:	mov	x2, x0
   4c7c4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c7c8:	add	x1, x1, #0xb50
   4c7cc:	mov	x0, x20
   4c7d0:	bl	50e0 <Perl_re_printf@plt>
   4c7d4:	ldr	x2, [x19, #104]
   4c7d8:	ldrsw	x0, [x19, #344]
   4c7dc:	cmp	x0, x2
   4c7e0:	b.eq	4cb18 <my_regprop@@Base+0x12854>  // b.none
   4c7e4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c7e8:	add	x1, x1, #0x800
   4c7ec:	mov	x0, x20
   4c7f0:	bl	50e0 <Perl_re_printf@plt>
   4c7f4:	adrp	x4, 7b000 <boot_re@@Base+0x1941c>
   4c7f8:	add	x4, x4, #0x248
   4c7fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c800:	add	x3, x3, #0x20
   4c804:	lsl	w2, w22, #1
   4c808:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c80c:	add	x1, x1, #0x818
   4c810:	mov	x0, x20
   4c814:	bl	50e0 <Perl_re_printf@plt>
   4c818:	ldr	x0, [x19, #104]
   4c81c:	str	w0, [x19, #344]
   4c820:	ldr	x0, [x19, #64]
   4c824:	str	x0, [x19, #336]
   4c828:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   4c82c:	add	x2, x2, #0x8d8
   4c830:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   4c834:	add	x1, x1, #0x718
   4c838:	mov	x0, x20
   4c83c:	bl	50e0 <Perl_re_printf@plt>
   4c840:	add	w28, w22, #0x1
   4c844:	str	xzr, [sp, #288]
   4c848:	str	wzr, [sp, #276]
   4c84c:	str	xzr, [sp, #296]
   4c850:	ldr	x0, [x20, #224]
   4c854:	cbz	x0, 4c8bc <my_regprop@@Base+0x125f8>
   4c858:	mov	w2, #0x1                   	// #1
   4c85c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   4c860:	add	x1, x1, #0x608
   4c864:	mov	x0, x20
   4c868:	bl	54f0 <Perl_get_sv@plt>
   4c86c:	mov	x21, x0
   4c870:	cbz	x0, 4c8bc <my_regprop@@Base+0x125f8>
   4c874:	ldr	w0, [x0, #12]
   4c878:	tbz	w0, #8, 4cb34 <my_regprop@@Base+0x12870>
   4c87c:	ldr	w1, [x21, #12]
   4c880:	and	w0, w1, #0x3fff00
   4c884:	and	w0, w0, #0xffe001ff
   4c888:	cmp	w0, #0x100
   4c88c:	b.ne	4cba0 <my_regprop@@Base+0x128dc>  // b.any
   4c890:	and	w2, w1, #0xf
   4c894:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4c898:	ldr	x0, [x0, #3712]
   4c89c:	ldrb	w0, [x0, w2, uxtw]
   4c8a0:	cbz	w0, 4cb48 <my_regprop@@Base+0x12884>
   4c8a4:	and	w0, w1, #0xc000
   4c8a8:	cmp	w0, #0x8, lsl #12
   4c8ac:	b.eq	4cb6c <my_regprop@@Base+0x128a8>  // b.none
   4c8b0:	ldr	x0, [x21]
   4c8b4:	ldr	x0, [x0, #32]
   4c8b8:	str	x0, [sp, #296]
   4c8bc:	str	wzr, [sp, #272]
   4c8c0:	ldr	w0, [x20, #2368]
   4c8c4:	tbnz	w0, #20, 4c8d0 <my_regprop@@Base+0x1260c>
   4c8c8:	ldr	x0, [sp, #296]
   4c8cc:	tbz	w0, #0, 4c998 <my_regprop@@Base+0x126d4>
   4c8d0:	ldr	w0, [x20, #2368]
   4c8d4:	tbnz	w0, #20, 4c8e0 <my_regprop@@Base+0x1261c>
   4c8d8:	ldr	x0, [sp, #296]
   4c8dc:	tbz	w0, #0, 4c980 <my_regprop@@Base+0x126bc>
   4c8e0:	ldr	x2, [x19, #64]
   4c8e4:	ldr	x0, [x19, #336]
   4c8e8:	cmp	x0, x2
   4c8ec:	b.eq	4cbb4 <my_regprop@@Base+0x128f0>  // b.none
   4c8f0:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   4c8f4:	add	x5, x5, #0x20
   4c8f8:	ldr	x3, [x19, #56]
   4c8fc:	mov	w7, #0x820e                	// #33294
   4c900:	mov	x6, x5
   4c904:	mov	x4, #0x10                  	// #16
   4c908:	sub	x3, x3, x2
   4c90c:	ldr	x1, [x19, #368]
   4c910:	mov	x0, x20
   4c914:	bl	53f0 <Perl_pv_pretty@plt>
   4c918:	mov	x2, x0
   4c91c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c920:	add	x1, x1, #0xb50
   4c924:	mov	x0, x20
   4c928:	bl	50e0 <Perl_re_printf@plt>
   4c92c:	ldr	x2, [x19, #104]
   4c930:	ldrsw	x0, [x19, #344]
   4c934:	cmp	x0, x2
   4c938:	b.eq	4cbd0 <my_regprop@@Base+0x1290c>  // b.none
   4c93c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c940:	add	x1, x1, #0x800
   4c944:	mov	x0, x20
   4c948:	bl	50e0 <Perl_re_printf@plt>
   4c94c:	adrp	x4, 7b000 <boot_re@@Base+0x1941c>
   4c950:	add	x4, x4, #0x250
   4c954:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4c958:	add	x3, x3, #0x20
   4c95c:	lsl	w2, w28, #1
   4c960:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4c964:	add	x1, x1, #0x818
   4c968:	mov	x0, x20
   4c96c:	bl	50e0 <Perl_re_printf@plt>
   4c970:	ldr	x0, [x19, #104]
   4c974:	str	w0, [x19, #344]
   4c978:	ldr	x0, [x19, #64]
   4c97c:	str	x0, [x19, #336]
   4c980:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   4c984:	add	x2, x2, #0x8d8
   4c988:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   4c98c:	add	x1, x1, #0x718
   4c990:	mov	x0, x20
   4c994:	bl	50e0 <Perl_re_printf@plt>
   4c998:	add	w25, w22, #0x2
   4c99c:	add	x24, sp, #0x114
   4c9a0:	mov	w23, #0x2                   	// #2
   4c9a4:	ldr	x21, [x19, #64]
   4c9a8:	ldr	x1, [x19, #56]
   4c9ac:	cmp	x21, x1
   4c9b0:	b.cs	4cbec <my_regprop@@Base+0x12928>  // b.hs, b.nlast
   4c9b4:	ldrb	w0, [x21]
   4c9b8:	cmp	w0, #0x2e
   4c9bc:	b.eq	4cf24 <my_regprop@@Base+0x12c60>  // b.none
   4c9c0:	b.ls	4cc10 <my_regprop@@Base+0x1294c>  // b.plast
   4c9c4:	cmp	w0, #0x5c
   4c9c8:	b.eq	4d368 <my_regprop@@Base+0x130a4>  // b.none
   4c9cc:	b.ls	4cd78 <my_regprop@@Base+0x12ab4>  // b.plast
   4c9d0:	cmp	w0, #0x5e
   4c9d4:	b.ne	4ce1c <my_regprop@@Base+0x12b58>  // b.any
   4c9d8:	ldr	w0, [x19, #156]
   4c9dc:	add	w0, w0, #0x1
   4c9e0:	str	w0, [x19, #156]
   4c9e4:	mov	x1, x19
   4c9e8:	mov	x0, x20
   4c9ec:	bl	269a4 <my_regexec@@Base+0x34b0>
   4c9f0:	ldr	w0, [x19]
   4c9f4:	tbz	w0, #0, 4cecc <my_regprop@@Base+0x12c08>
   4c9f8:	mov	w2, #0x3                   	// #3
   4c9fc:	mov	x1, x19
   4ca00:	mov	x0, x20
   4ca04:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4ca08:	str	x0, [sp, #288]
   4ca0c:	ldr	w0, [x20, #2368]
   4ca10:	tbnz	w0, #20, 4ca1c <my_regprop@@Base+0x12758>
   4ca14:	ldr	x0, [sp, #296]
   4ca18:	tbz	w0, #18, 4ca34 <my_regprop@@Base+0x12770>
   4ca1c:	mov	w3, #0x1                   	// #1
   4ca20:	ldr	w2, [sp, #288]
   4ca24:	mov	w1, #0x33f8                	// #13304
   4ca28:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4ca2c:	add	x0, x0, #0x8
   4ca30:	bl	5010 <Perl_warn_nocontext@plt>
   4ca34:	ldr	x0, [sp, #288]
   4ca38:	lsl	x2, x0, #2
   4ca3c:	tbnz	x0, #61, 4cee4 <my_regprop@@Base+0x12c20>
   4ca40:	ldr	x0, [x19, #40]
   4ca44:	ldr	x0, [x0, #8]
   4ca48:	lsl	x2, x2, #1
   4ca4c:	mov	w1, #0x1                   	// #1
   4ca50:	str	w1, [x0, x2]
   4ca54:	b	51e60 <my_regprop@@Base+0x17b9c>
   4ca58:	mov	x2, #0xff08                	// #65288
   4ca5c:	mov	x1, x21
   4ca60:	mov	x0, x20
   4ca64:	bl	5310 <Perl_sv_setuv@plt>
   4ca68:	b	4c724 <my_regprop@@Base+0x12460>
   4ca6c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4ca70:	add	x3, x3, #0xc10
   4ca74:	add	x3, x3, #0x918
   4ca78:	mov	w2, #0x30a0                	// #12448
   4ca7c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4ca80:	add	x1, x1, #0xfb8
   4ca84:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4ca88:	add	x0, x0, #0xda0
   4ca8c:	bl	58e0 <__assert_fail@plt>
   4ca90:	and	w1, w1, #0xff
   4ca94:	sub	w1, w1, #0x9
   4ca98:	cmp	w1, #0x1
   4ca9c:	b.hi	4c758 <my_regprop@@Base+0x12494>  // b.pmore
   4caa0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4caa4:	add	x3, x3, #0xc10
   4caa8:	add	x3, x3, #0x918
   4caac:	mov	w2, #0x30a0                	// #12448
   4cab0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4cab4:	add	x1, x1, #0xfb8
   4cab8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4cabc:	add	x0, x0, #0xdd0
   4cac0:	bl	58e0 <__assert_fail@plt>
   4cac4:	mov	w2, #0x2                   	// #2
   4cac8:	mov	x1, x21
   4cacc:	mov	x0, x20
   4cad0:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   4cad4:	b	4c760 <my_regprop@@Base+0x1249c>
   4cad8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4cadc:	add	x3, x3, #0xc10
   4cae0:	add	x3, x3, #0x918
   4cae4:	mov	w2, #0x30a2                	// #12450
   4cae8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4caec:	add	x1, x1, #0xfb8
   4caf0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   4caf4:	add	x0, x0, #0xfd0
   4caf8:	bl	58e0 <__assert_fail@plt>
   4cafc:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4cb00:	add	x2, x2, #0x20
   4cb04:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cb08:	add	x1, x1, #0x7f8
   4cb0c:	mov	x0, x20
   4cb10:	bl	50e0 <Perl_re_printf@plt>
   4cb14:	b	4c7d4 <my_regprop@@Base+0x12510>
   4cb18:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4cb1c:	add	x2, x2, #0x20
   4cb20:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cb24:	add	x1, x1, #0x808
   4cb28:	mov	x0, x20
   4cb2c:	bl	50e0 <Perl_re_printf@plt>
   4cb30:	b	4c7f4 <my_regprop@@Base+0x12530>
   4cb34:	mov	x2, #0xff08                	// #65288
   4cb38:	mov	x1, x21
   4cb3c:	mov	x0, x20
   4cb40:	bl	5310 <Perl_sv_setuv@plt>
   4cb44:	b	4c87c <my_regprop@@Base+0x125b8>
   4cb48:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4cb4c:	add	x3, x3, #0xc10
   4cb50:	add	x3, x3, #0x928
   4cb54:	mov	w2, #0x33e5                	// #13285
   4cb58:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4cb5c:	add	x1, x1, #0xfb8
   4cb60:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4cb64:	add	x0, x0, #0xda0
   4cb68:	bl	58e0 <__assert_fail@plt>
   4cb6c:	and	w1, w1, #0xff
   4cb70:	sub	w1, w1, #0x9
   4cb74:	cmp	w1, #0x1
   4cb78:	b.hi	4c8b0 <my_regprop@@Base+0x125ec>  // b.pmore
   4cb7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4cb80:	add	x3, x3, #0xc10
   4cb84:	add	x3, x3, #0x928
   4cb88:	mov	w2, #0x33e5                	// #13285
   4cb8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4cb90:	add	x1, x1, #0xfb8
   4cb94:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   4cb98:	add	x0, x0, #0xdd0
   4cb9c:	bl	58e0 <__assert_fail@plt>
   4cba0:	mov	w2, #0x2                   	// #2
   4cba4:	mov	x1, x21
   4cba8:	mov	x0, x20
   4cbac:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   4cbb0:	b	4c8b8 <my_regprop@@Base+0x125f4>
   4cbb4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4cbb8:	add	x2, x2, #0x20
   4cbbc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cbc0:	add	x1, x1, #0x7f8
   4cbc4:	mov	x0, x20
   4cbc8:	bl	50e0 <Perl_re_printf@plt>
   4cbcc:	b	4c92c <my_regprop@@Base+0x12668>
   4cbd0:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   4cbd4:	add	x2, x2, #0x20
   4cbd8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cbdc:	add	x1, x1, #0x808
   4cbe0:	mov	x0, x20
   4cbe4:	bl	50e0 <Perl_re_printf@plt>
   4cbe8:	b	4c94c <my_regprop@@Base+0x12688>
   4cbec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4cbf0:	add	x3, x3, #0xc10
   4cbf4:	add	x3, x3, #0x928
   4cbf8:	mov	w2, #0x33ef                	// #13295
   4cbfc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4cc00:	add	x1, x1, #0xfb8
   4cc04:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4cc08:	add	x0, x0, #0x258
   4cc0c:	bl	58e0 <__assert_fail@plt>
   4cc10:	cmp	w0, #0x28
   4cc14:	b.eq	4d1dc <my_regprop@@Base+0x12f18>  // b.none
   4cc18:	b.ls	4ccdc <my_regprop@@Base+0x12a18>  // b.plast
   4cc1c:	cmp	w0, #0x29
   4cc20:	b.eq	4ce24 <my_regprop@@Base+0x12b60>  // b.none
   4cc24:	sub	w0, w0, #0x2a
   4cc28:	and	w0, w0, #0xff
   4cc2c:	cmp	w0, #0x1
   4cc30:	b.hi	4e9b4 <my_regprop@@Base+0x146f0>  // b.pmore
   4cc34:	add	x21, x21, #0x1
   4cc38:	str	x21, [x19, #64]
   4cc3c:	ldr	x1, [x19, #24]
   4cc40:	cbz	x1, 4cc50 <my_regprop@@Base+0x1298c>
   4cc44:	mov	w2, #0xb                   	// #11
   4cc48:	mov	x0, x20
   4cc4c:	bl	54b0 <Perl_save_pushptr@plt>
   4cc50:	ldr	x1, [x19, #160]
   4cc54:	cbz	x1, 4cc64 <my_regprop@@Base+0x129a0>
   4cc58:	mov	w2, #0xa                   	// #10
   4cc5c:	mov	x0, x20
   4cc60:	bl	54b0 <Perl_save_pushptr@plt>
   4cc64:	ldr	x1, [x19, #168]
   4cc68:	cbz	x1, 4cc78 <my_regprop@@Base+0x129b4>
   4cc6c:	mov	w2, #0xa                   	// #10
   4cc70:	mov	x0, x20
   4cc74:	bl	54b0 <Perl_save_pushptr@plt>
   4cc78:	ldr	x0, [x19, #64]
   4cc7c:	ldr	x1, [x19, #72]
   4cc80:	sub	x1, x0, x1
   4cc84:	ldr	x0, [x19, #80]
   4cc88:	add	x0, x0, x1
   4cc8c:	ldr	x1, [x19, #16]
   4cc90:	cmp	x0, x1
   4cc94:	b.hi	4d330 <my_regprop@@Base+0x1306c>  // b.pmore
   4cc98:	ldr	x5, [x19, #8]
   4cc9c:	sub	x7, x1, x0
   4cca0:	subs	x4, x0, x5
   4cca4:	b.mi	4d340 <my_regprop@@Base+0x1307c>  // b.first
   4cca8:	ldr	w2, [x19, #192]
   4ccac:	cmp	w2, #0x0
   4ccb0:	cset	w3, ne  // ne = any
   4ccb4:	cmp	x0, x1
   4ccb8:	csel	x0, x0, x1, ls  // ls = plast
   4ccbc:	str	x0, [sp]
   4ccc0:	mov	w6, w3
   4ccc4:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4ccc8:	add	x2, x2, #0x320
   4cccc:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4ccd0:	add	x1, x1, #0x3a8
   4ccd4:	mov	x0, x20
   4ccd8:	bl	5420 <Perl_croak@plt>
   4ccdc:	cmp	w0, #0x23
   4cce0:	b.eq	4e9ac <my_regprop@@Base+0x146e8>  // b.none
   4cce4:	cmp	w0, #0x24
   4cce8:	b.ne	4e9b4 <my_regprop@@Base+0x146f0>  // b.any
   4ccec:	mov	x1, x19
   4ccf0:	mov	x0, x20
   4ccf4:	bl	269a4 <my_regexec@@Base+0x34b0>
   4ccf8:	ldr	x0, [x19, #64]
   4ccfc:	ldrb	w0, [x0]
   4cd00:	cbz	w0, 4cd10 <my_regprop@@Base+0x12a4c>
   4cd04:	ldr	w0, [x19, #156]
   4cd08:	add	w0, w0, #0x1
   4cd0c:	str	w0, [x19, #156]
   4cd10:	ldr	w0, [x19]
   4cd14:	tbz	w0, #0, 4cef8 <my_regprop@@Base+0x12c34>
   4cd18:	mov	w2, #0x5                   	// #5
   4cd1c:	mov	x1, x19
   4cd20:	mov	x0, x20
   4cd24:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4cd28:	str	x0, [sp, #288]
   4cd2c:	ldr	w0, [x20, #2368]
   4cd30:	tbnz	w0, #20, 4cd3c <my_regprop@@Base+0x12a78>
   4cd34:	ldr	x0, [sp, #296]
   4cd38:	tbz	w0, #18, 4cd54 <my_regprop@@Base+0x12a90>
   4cd3c:	mov	w3, #0x1                   	// #1
   4cd40:	ldr	w2, [sp, #288]
   4cd44:	mov	w1, #0x3402                	// #13314
   4cd48:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4cd4c:	add	x0, x0, #0x8
   4cd50:	bl	5010 <Perl_warn_nocontext@plt>
   4cd54:	ldr	x0, [sp, #288]
   4cd58:	lsl	x2, x0, #2
   4cd5c:	tbnz	x0, #61, 4cf10 <my_regprop@@Base+0x12c4c>
   4cd60:	ldr	x0, [x19, #40]
   4cd64:	ldr	x0, [x0, #8]
   4cd68:	lsl	x2, x2, #1
   4cd6c:	mov	w1, #0x1                   	// #1
   4cd70:	str	w1, [x0, x2]
   4cd74:	b	51e60 <my_regprop@@Base+0x17b9c>
   4cd78:	cmp	w0, #0x3f
   4cd7c:	b.eq	4cc34 <my_regprop@@Base+0x12970>  // b.none
   4cd80:	cmp	w0, #0x5b
   4cd84:	b.ne	4e9b4 <my_regprop@@Base+0x146f0>  // b.any
   4cd88:	add	x21, x21, #0x1
   4cd8c:	str	x21, [x19, #64]
   4cd90:	str	xzr, [sp, #8]
   4cd94:	mov	w5, #0x1                   	// #1
   4cd98:	strb	w5, [sp]
   4cd9c:	ldrb	w7, [x19, #385]
   4cda0:	mov	w6, #0x0                   	// #0
   4cda4:	mov	w4, #0x0                   	// #0
   4cda8:	add	w3, w22, #0x2
   4cdac:	add	x2, sp, #0x110
   4cdb0:	mov	x1, x19
   4cdb4:	mov	x0, x20
   4cdb8:	bl	437e4 <my_regprop@@Base+0x9520>
   4cdbc:	str	x0, [sp, #288]
   4cdc0:	cbnz	x0, 4d074 <my_regprop@@Base+0x12db0>
   4cdc4:	ldr	w0, [sp, #272]
   4cdc8:	tbz	w0, #5, 4cfe4 <my_regprop@@Base+0x12d20>
   4cdcc:	ldr	w0, [sp, #272]
   4cdd0:	ands	w0, w0, #0x70
   4cdd4:	b.eq	50b94 <my_regprop@@Base+0x168d0>  // b.none
   4cdd8:	str	w0, [x27]
   4cddc:	mov	x21, #0x0                   	// #0
   4cde0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4cde4:	ldr	x0, [x0, #3920]
   4cde8:	ldr	x1, [sp, #344]
   4cdec:	ldr	x0, [x0]
   4cdf0:	eor	x0, x1, x0
   4cdf4:	cbnz	x0, 520bc <my_regprop@@Base+0x17df8>
   4cdf8:	mov	x0, x21
   4cdfc:	ldp	x19, x20, [sp, #64]
   4ce00:	ldp	x21, x22, [sp, #80]
   4ce04:	ldp	x23, x24, [sp, #96]
   4ce08:	ldp	x25, x26, [sp, #112]
   4ce0c:	ldp	x27, x28, [sp, #128]
   4ce10:	ldp	x29, x30, [sp, #48]
   4ce14:	add	sp, sp, #0x160
   4ce18:	ret
   4ce1c:	cmp	w0, #0x7c
   4ce20:	b.ne	4e9b4 <my_regprop@@Base+0x146f0>  // b.any
   4ce24:	ldr	w0, [sp, #276]
   4ce28:	tbnz	w0, #4, 4d2e8 <my_regprop@@Base+0x13024>
   4ce2c:	ldr	x1, [x19, #24]
   4ce30:	cbz	x1, 4ce40 <my_regprop@@Base+0x12b7c>
   4ce34:	mov	w2, #0xb                   	// #11
   4ce38:	mov	x0, x20
   4ce3c:	bl	54b0 <Perl_save_pushptr@plt>
   4ce40:	ldr	x1, [x19, #160]
   4ce44:	cbz	x1, 4ce54 <my_regprop@@Base+0x12b90>
   4ce48:	mov	w2, #0xa                   	// #10
   4ce4c:	mov	x0, x20
   4ce50:	bl	54b0 <Perl_save_pushptr@plt>
   4ce54:	ldr	x1, [x19, #168]
   4ce58:	cbz	x1, 4ce68 <my_regprop@@Base+0x12ba4>
   4ce5c:	mov	w2, #0xa                   	// #10
   4ce60:	mov	x0, x20
   4ce64:	bl	54b0 <Perl_save_pushptr@plt>
   4ce68:	ldr	x0, [x19, #64]
   4ce6c:	ldr	x1, [x19, #72]
   4ce70:	sub	x1, x0, x1
   4ce74:	ldr	x0, [x19, #80]
   4ce78:	add	x0, x0, x1
   4ce7c:	ldr	x1, [x19, #16]
   4ce80:	cmp	x0, x1
   4ce84:	b.hi	4d2f8 <my_regprop@@Base+0x13034>  // b.pmore
   4ce88:	ldr	x5, [x19, #8]
   4ce8c:	sub	x7, x1, x0
   4ce90:	subs	x4, x0, x5
   4ce94:	b.mi	4d308 <my_regprop@@Base+0x13044>  // b.first
   4ce98:	ldr	w2, [x19, #192]
   4ce9c:	cmp	w2, #0x0
   4cea0:	cset	w3, ne  // ne = any
   4cea4:	cmp	x0, x1
   4cea8:	csel	x0, x0, x1, ls  // ls = plast
   4ceac:	str	x0, [sp]
   4ceb0:	mov	w6, w3
   4ceb4:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4ceb8:	add	x2, x2, #0x310
   4cebc:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4cec0:	add	x1, x1, #0x3a8
   4cec4:	mov	x0, x20
   4cec8:	bl	5420 <Perl_croak@plt>
   4cecc:	mov	w2, #0x2                   	// #2
   4ced0:	mov	x1, x19
   4ced4:	mov	x0, x20
   4ced8:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4cedc:	str	x0, [sp, #288]
   4cee0:	b	4ca0c <my_regprop@@Base+0x12748>
   4cee4:	ubfx	x2, x2, #2, #32
   4cee8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4ceec:	add	x1, x1, #0x888
   4cef0:	mov	x0, x20
   4cef4:	bl	5420 <Perl_croak@plt>
   4cef8:	mov	w2, #0x4                   	// #4
   4cefc:	mov	x1, x19
   4cf00:	mov	x0, x20
   4cf04:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4cf08:	str	x0, [sp, #288]
   4cf0c:	b	4cd2c <my_regprop@@Base+0x12a68>
   4cf10:	ubfx	x2, x2, #2, #32
   4cf14:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cf18:	add	x1, x1, #0x888
   4cf1c:	mov	x0, x20
   4cf20:	bl	5420 <Perl_croak@plt>
   4cf24:	mov	x1, x19
   4cf28:	mov	x0, x20
   4cf2c:	bl	269a4 <my_regexec@@Base+0x34b0>
   4cf30:	ldr	w0, [x19]
   4cf34:	tbz	w0, #1, 4cfb8 <my_regprop@@Base+0x12cf4>
   4cf38:	mov	w2, #0x11                  	// #17
   4cf3c:	mov	x1, x19
   4cf40:	mov	x0, x20
   4cf44:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4cf48:	str	x0, [sp, #288]
   4cf4c:	ldr	w0, [sp, #272]
   4cf50:	orr	w0, w0, #0x3
   4cf54:	str	w0, [sp, #272]
   4cf58:	ldr	w0, [x19, #112]
   4cf5c:	cmp	w0, #0x9
   4cf60:	b.gt	4cf6c <my_regprop@@Base+0x12ca8>
   4cf64:	add	w0, w0, #0x1
   4cf68:	str	w0, [x19, #112]
   4cf6c:	ldr	w0, [x20, #2368]
   4cf70:	tbnz	w0, #20, 4cf7c <my_regprop@@Base+0x12cb8>
   4cf74:	ldr	x0, [sp, #296]
   4cf78:	tbz	w0, #18, 4cf94 <my_regprop@@Base+0x12cd0>
   4cf7c:	mov	w3, #0x1                   	// #1
   4cf80:	ldr	w2, [sp, #288]
   4cf84:	mov	w1, #0x340c                	// #13324
   4cf88:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4cf8c:	add	x0, x0, #0x8
   4cf90:	bl	5010 <Perl_warn_nocontext@plt>
   4cf94:	ldr	x0, [sp, #288]
   4cf98:	lsl	x2, x0, #2
   4cf9c:	tbnz	x0, #61, 4cfd0 <my_regprop@@Base+0x12d0c>
   4cfa0:	ldr	x0, [x19, #40]
   4cfa4:	ldr	x0, [x0, #8]
   4cfa8:	lsl	x2, x2, #1
   4cfac:	mov	w1, #0x1                   	// #1
   4cfb0:	str	w1, [x0, x2]
   4cfb4:	b	51e60 <my_regprop@@Base+0x17b9c>
   4cfb8:	mov	w2, #0x10                  	// #16
   4cfbc:	mov	x1, x19
   4cfc0:	mov	x0, x20
   4cfc4:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4cfc8:	str	x0, [sp, #288]
   4cfcc:	b	4cf4c <my_regprop@@Base+0x12c88>
   4cfd0:	ubfx	x2, x2, #2, #32
   4cfd4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4cfd8:	add	x1, x1, #0x888
   4cfdc:	mov	x0, x20
   4cfe0:	bl	5420 <Perl_croak@plt>
   4cfe4:	ldr	x21, [x19, #16]
   4cfe8:	ldr	x0, [x19, #8]
   4cfec:	sub	x21, x21, x0
   4cff0:	ldr	x1, [x19, #24]
   4cff4:	cbz	x1, 4d004 <my_regprop@@Base+0x12d40>
   4cff8:	mov	w2, #0xb                   	// #11
   4cffc:	mov	x0, x20
   4d000:	bl	54b0 <Perl_save_pushptr@plt>
   4d004:	ldr	x1, [x19, #160]
   4d008:	cbz	x1, 4d018 <my_regprop@@Base+0x12d54>
   4d00c:	mov	w2, #0xa                   	// #10
   4d010:	mov	x0, x20
   4d014:	bl	54b0 <Perl_save_pushptr@plt>
   4d018:	ldr	x1, [x19, #168]
   4d01c:	cbz	x1, 4d02c <my_regprop@@Base+0x12d68>
   4d020:	mov	w2, #0xa                   	// #10
   4d024:	mov	x0, x20
   4d028:	bl	54b0 <Perl_save_pushptr@plt>
   4d02c:	cmp	x21, #0x7f
   4d030:	b.le	4d068 <my_regprop@@Base+0x12da4>
   4d034:	mov	x21, #0x75                  	// #117
   4d038:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4d03c:	add	x6, x6, #0xfe0
   4d040:	ldr	w0, [x19, #192]
   4d044:	cmp	w0, #0x0
   4d048:	ldr	x5, [x19, #8]
   4d04c:	mov	x4, x21
   4d050:	cset	w3, ne  // ne = any
   4d054:	ldrsw	x2, [sp, #272]
   4d058:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4d05c:	add	x1, x1, #0x270
   4d060:	mov	x0, x20
   4d064:	bl	5420 <Perl_croak@plt>
   4d068:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4d06c:	add	x6, x6, #0x20
   4d070:	b	4d040 <my_regprop@@Base+0x12d7c>
   4d074:	ldr	x0, [x19, #64]
   4d078:	ldrb	w0, [x0]
   4d07c:	cmp	w0, #0x5d
   4d080:	b.eq	4d160 <my_regprop@@Base+0x12e9c>  // b.none
   4d084:	str	x21, [x19, #64]
   4d088:	ldr	x1, [x19, #24]
   4d08c:	cbz	x1, 4d09c <my_regprop@@Base+0x12dd8>
   4d090:	mov	w2, #0xb                   	// #11
   4d094:	mov	x0, x20
   4d098:	bl	54b0 <Perl_save_pushptr@plt>
   4d09c:	ldr	x1, [x19, #160]
   4d0a0:	cbz	x1, 4d0b0 <my_regprop@@Base+0x12dec>
   4d0a4:	mov	w2, #0xa                   	// #10
   4d0a8:	mov	x0, x20
   4d0ac:	bl	54b0 <Perl_save_pushptr@plt>
   4d0b0:	ldr	x1, [x19, #168]
   4d0b4:	cbz	x1, 4d0c4 <my_regprop@@Base+0x12e00>
   4d0b8:	mov	w2, #0xa                   	// #10
   4d0bc:	mov	x0, x20
   4d0c0:	bl	54b0 <Perl_save_pushptr@plt>
   4d0c4:	ldr	x0, [x19, #64]
   4d0c8:	ldr	x1, [x19, #72]
   4d0cc:	sub	x1, x0, x1
   4d0d0:	ldr	x0, [x19, #80]
   4d0d4:	add	x0, x0, x1
   4d0d8:	ldr	x1, [x19, #16]
   4d0dc:	cmp	x0, x1
   4d0e0:	b.hi	4d128 <my_regprop@@Base+0x12e64>  // b.pmore
   4d0e4:	ldr	x5, [x19, #8]
   4d0e8:	sub	x7, x1, x0
   4d0ec:	subs	x4, x0, x5
   4d0f0:	b.mi	4d138 <my_regprop@@Base+0x12e74>  // b.first
   4d0f4:	ldr	w2, [x19, #192]
   4d0f8:	cmp	w2, #0x0
   4d0fc:	cset	w3, ne  // ne = any
   4d100:	cmp	x0, x1
   4d104:	csel	x0, x0, x1, ls  // ls = plast
   4d108:	str	x0, [sp]
   4d10c:	mov	w6, w3
   4d110:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4d114:	add	x2, x2, #0x750
   4d118:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4d11c:	add	x1, x1, #0x3a8
   4d120:	mov	x0, x20
   4d124:	bl	5420 <Perl_croak@plt>
   4d128:	ldr	x5, [x19, #8]
   4d12c:	sub	x4, x1, x5
   4d130:	mov	x7, #0x0                   	// #0
   4d134:	b	4d0f4 <my_regprop@@Base+0x12e30>
   4d138:	ldr	x6, [x19, #48]
   4d13c:	ldr	x5, [x19, #56]
   4d140:	sub	w5, w5, w6
   4d144:	mov	w3, #0x341f                	// #13343
   4d148:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d14c:	add	x2, x2, #0xfb8
   4d150:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d154:	add	x1, x1, #0x870
   4d158:	mov	x0, x20
   4d15c:	bl	5420 <Perl_croak@plt>
   4d160:	mov	x1, x19
   4d164:	mov	x0, x20
   4d168:	bl	269a4 <my_regexec@@Base+0x34b0>
   4d16c:	ldr	w0, [x20, #2368]
   4d170:	tbnz	w0, #20, 4d17c <my_regprop@@Base+0x12eb8>
   4d174:	ldr	x0, [sp, #296]
   4d178:	tbz	w0, #18, 4d19c <my_regprop@@Base+0x12ed8>
   4d17c:	ldr	x3, [x19, #64]
   4d180:	sub	x3, x3, x21
   4d184:	add	w3, w3, #0x1
   4d188:	ldr	w2, [sp, #288]
   4d18c:	mov	w1, #0x3422                	// #13346
   4d190:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4d194:	add	x0, x0, #0x8
   4d198:	bl	5010 <Perl_warn_nocontext@plt>
   4d19c:	ldr	x0, [sp, #288]
   4d1a0:	lsl	x2, x0, #2
   4d1a4:	tbnz	x0, #61, 4d1c8 <my_regprop@@Base+0x12f04>
   4d1a8:	ldr	x0, [x19, #40]
   4d1ac:	ldr	x1, [x0, #8]
   4d1b0:	lsl	x2, x2, #1
   4d1b4:	ldr	x0, [x19, #64]
   4d1b8:	sub	x21, x0, x21
   4d1bc:	add	w0, w21, #0x1
   4d1c0:	str	w0, [x1, x2]
   4d1c4:	b	51e60 <my_regprop@@Base+0x17b9c>
   4d1c8:	ubfx	x2, x2, #2, #32
   4d1cc:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4d1d0:	add	x1, x1, #0x888
   4d1d4:	mov	x0, x20
   4d1d8:	bl	5420 <Perl_croak@plt>
   4d1dc:	mov	x1, x19
   4d1e0:	mov	x0, x20
   4d1e4:	bl	269a4 <my_regexec@@Base+0x34b0>
   4d1e8:	mov	w4, w25
   4d1ec:	mov	x3, x24
   4d1f0:	mov	w2, w23
   4d1f4:	mov	x1, x19
   4d1f8:	mov	x0, x20
   4d1fc:	bl	3c268 <my_regprop@@Base+0x1fa4>
   4d200:	str	x0, [sp, #288]
   4d204:	cbnz	x0, 4d2d0 <my_regprop@@Base+0x1300c>
   4d208:	ldr	w0, [sp, #276]
   4d20c:	tbz	w0, #4, 4d230 <my_regprop@@Base+0x12f6c>
   4d210:	ldr	x1, [x19, #64]
   4d214:	ldr	x0, [x19, #56]
   4d218:	cmp	x1, x0
   4d21c:	b.cc	4c9a4 <my_regprop@@Base+0x126e0>  // b.lo, b.ul, b.last
   4d220:	ldr	w0, [sp, #272]
   4d224:	orr	w0, w0, #0x10
   4d228:	str	w0, [sp, #272]
   4d22c:	b	4cdcc <my_regprop@@Base+0x12b08>
   4d230:	ands	w0, w0, #0x60
   4d234:	b.eq	4d240 <my_regprop@@Base+0x12f7c>  // b.none
   4d238:	str	w0, [sp, #272]
   4d23c:	b	4cdcc <my_regprop@@Base+0x12b08>
   4d240:	ldr	x21, [x19, #16]
   4d244:	ldr	x0, [x19, #8]
   4d248:	sub	x21, x21, x0
   4d24c:	ldr	x1, [x19, #24]
   4d250:	cbz	x1, 4d260 <my_regprop@@Base+0x12f9c>
   4d254:	mov	w2, #0xb                   	// #11
   4d258:	mov	x0, x20
   4d25c:	bl	54b0 <Perl_save_pushptr@plt>
   4d260:	ldr	x1, [x19, #160]
   4d264:	cbz	x1, 4d274 <my_regprop@@Base+0x12fb0>
   4d268:	mov	w2, #0xa                   	// #10
   4d26c:	mov	x0, x20
   4d270:	bl	54b0 <Perl_save_pushptr@plt>
   4d274:	ldr	x1, [x19, #168]
   4d278:	cbz	x1, 4d288 <my_regprop@@Base+0x12fc4>
   4d27c:	mov	w2, #0xa                   	// #10
   4d280:	mov	x0, x20
   4d284:	bl	54b0 <Perl_save_pushptr@plt>
   4d288:	cmp	x21, #0x7f
   4d28c:	b.le	4d2c4 <my_regprop@@Base+0x13000>
   4d290:	mov	x21, #0x75                  	// #117
   4d294:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4d298:	add	x6, x6, #0xfe0
   4d29c:	ldr	w0, [x19, #192]
   4d2a0:	cmp	w0, #0x0
   4d2a4:	ldr	x5, [x19, #8]
   4d2a8:	mov	x4, x21
   4d2ac:	cset	w3, ne  // ne = any
   4d2b0:	ldrsw	x2, [sp, #276]
   4d2b4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4d2b8:	add	x1, x1, #0x2c0
   4d2bc:	mov	x0, x20
   4d2c0:	bl	5420 <Perl_croak@plt>
   4d2c4:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4d2c8:	add	x6, x6, #0x20
   4d2cc:	b	4d29c <my_regprop@@Base+0x12fd8>
   4d2d0:	ldr	w0, [sp, #276]
   4d2d4:	and	w1, w0, #0xf
   4d2d8:	ldr	w0, [sp, #272]
   4d2dc:	orr	w0, w0, w1
   4d2e0:	str	w0, [sp, #272]
   4d2e4:	b	51e60 <my_regprop@@Base+0x17b9c>
   4d2e8:	ldr	w0, [sp, #272]
   4d2ec:	orr	w0, w0, #0x10
   4d2f0:	str	w0, [sp, #272]
   4d2f4:	b	4cdcc <my_regprop@@Base+0x12b08>
   4d2f8:	ldr	x5, [x19, #8]
   4d2fc:	sub	x4, x1, x5
   4d300:	mov	x7, #0x0                   	// #0
   4d304:	b	4ce98 <my_regprop@@Base+0x12bd4>
   4d308:	ldr	x6, [x19, #48]
   4d30c:	ldr	x5, [x19, #56]
   4d310:	sub	w5, w5, w6
   4d314:	mov	w3, #0x343d                	// #13373
   4d318:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d31c:	add	x2, x2, #0xfb8
   4d320:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d324:	add	x1, x1, #0x870
   4d328:	mov	x0, x20
   4d32c:	bl	5420 <Perl_croak@plt>
   4d330:	ldr	x5, [x19, #8]
   4d334:	sub	x4, x1, x5
   4d338:	mov	x7, #0x0                   	// #0
   4d33c:	b	4cca8 <my_regprop@@Base+0x129e4>
   4d340:	ldr	x6, [x19, #48]
   4d344:	ldr	x5, [x19, #56]
   4d348:	sub	w5, w5, w6
   4d34c:	mov	w3, #0x3444                	// #13380
   4d350:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d354:	add	x2, x2, #0xfb8
   4d358:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d35c:	add	x1, x1, #0x870
   4d360:	mov	x0, x20
   4d364:	bl	5420 <Perl_croak@plt>
   4d368:	add	x0, x21, #0x1
   4d36c:	str	x0, [x19, #64]
   4d370:	ldrb	w2, [x21, #1]
   4d374:	cmp	w2, #0x7a
   4d378:	b.hi	4e910 <my_regprop@@Base+0x1464c>  // b.pmore
   4d37c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4d380:	add	x3, x3, #0xa1c
   4d384:	ldrh	w3, [x3, w2, uxtw #1]
   4d388:	adr	x4, 4d394 <my_regprop@@Base+0x130d0>
   4d38c:	add	x3, x4, w3, sxth #2
   4d390:	br	x3
   4d394:	mov	w21, #0x1e                  	// #30
   4d398:	b	51cb0 <my_regprop@@Base+0x179ec>
   4d39c:	mov	w21, #0x14                  	// #20
   4d3a0:	b	51d80 <my_regprop@@Base+0x17abc>
   4d3a4:	ldr	w0, [x19, #156]
   4d3a8:	add	w0, w0, #0x1
   4d3ac:	str	w0, [x19, #156]
   4d3b0:	mov	w2, #0x2                   	// #2
   4d3b4:	mov	x1, x19
   4d3b8:	mov	x0, x20
   4d3bc:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d3c0:	str	x0, [sp, #288]
   4d3c4:	ldr	x1, [x19, #96]
   4d3c8:	lsl	x0, x0, #2
   4d3cc:	mov	w2, #0x1                   	// #1
   4d3d0:	strb	w2, [x1, x0]
   4d3d4:	ldr	w0, [sp, #272]
   4d3d8:	orr	w0, w0, #0x2
   4d3dc:	str	w0, [sp, #272]
   4d3e0:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d3e4:	mov	w2, #0x7                   	// #7
   4d3e8:	mov	x1, x19
   4d3ec:	mov	x0, x20
   4d3f0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d3f4:	str	x0, [sp, #288]
   4d3f8:	ldr	w0, [x19, #120]
   4d3fc:	orr	w0, w0, #0x4
   4d400:	str	w0, [x19, #120]
   4d404:	ldr	w0, [sp, #272]
   4d408:	orr	w0, w0, #0x2
   4d40c:	str	w0, [sp, #272]
   4d410:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d414:	ldr	w0, [x19, #156]
   4d418:	add	w0, w0, #0x1
   4d41c:	str	w0, [x19, #156]
   4d420:	mov	w2, #0x62                  	// #98
   4d424:	mov	x1, x19
   4d428:	mov	x0, x20
   4d42c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d430:	str	x0, [sp, #288]
   4d434:	ldr	w0, [sp, #272]
   4d438:	orr	w0, w0, #0x2
   4d43c:	str	w0, [sp, #272]
   4d440:	ldr	w0, [x19, #120]
   4d444:	orr	w0, w0, #0x2
   4d448:	str	w0, [x19, #120]
   4d44c:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d450:	mov	w2, #0x4                   	// #4
   4d454:	mov	x1, x19
   4d458:	mov	x0, x20
   4d45c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d460:	str	x0, [sp, #288]
   4d464:	ldr	w0, [sp, #272]
   4d468:	orr	w0, w0, #0x2
   4d46c:	str	w0, [sp, #272]
   4d470:	ldr	w0, [x19, #156]
   4d474:	add	w0, w0, #0x1
   4d478:	str	w0, [x19, #156]
   4d47c:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d480:	mov	w2, #0x6                   	// #6
   4d484:	mov	x1, x19
   4d488:	mov	x0, x20
   4d48c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d490:	str	x0, [sp, #288]
   4d494:	ldr	w0, [sp, #272]
   4d498:	orr	w0, w0, #0x2
   4d49c:	str	w0, [sp, #272]
   4d4a0:	ldr	w0, [x19, #156]
   4d4a4:	add	w0, w0, #0x1
   4d4a8:	str	w0, [x19, #156]
   4d4ac:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d4b0:	ldr	x1, [x19, #24]
   4d4b4:	cbz	x1, 4d4c4 <my_regprop@@Base+0x13200>
   4d4b8:	mov	w2, #0xb                   	// #11
   4d4bc:	mov	x0, x20
   4d4c0:	bl	54b0 <Perl_save_pushptr@plt>
   4d4c4:	ldr	x1, [x19, #160]
   4d4c8:	cbz	x1, 4d4d8 <my_regprop@@Base+0x13214>
   4d4cc:	mov	w2, #0xa                   	// #10
   4d4d0:	mov	x0, x20
   4d4d4:	bl	54b0 <Perl_save_pushptr@plt>
   4d4d8:	ldr	x1, [x19, #168]
   4d4dc:	cbz	x1, 4d4ec <my_regprop@@Base+0x13228>
   4d4e0:	mov	w2, #0xa                   	// #10
   4d4e4:	mov	x0, x20
   4d4e8:	bl	54b0 <Perl_save_pushptr@plt>
   4d4ec:	ldr	x0, [x19, #64]
   4d4f0:	ldr	x1, [x19, #72]
   4d4f4:	sub	x1, x0, x1
   4d4f8:	ldr	x0, [x19, #80]
   4d4fc:	add	x0, x0, x1
   4d500:	ldr	x1, [x19, #16]
   4d504:	cmp	x0, x1
   4d508:	b.hi	4d550 <my_regprop@@Base+0x1328c>  // b.pmore
   4d50c:	ldr	x5, [x19, #8]
   4d510:	sub	x7, x1, x0
   4d514:	subs	x4, x0, x5
   4d518:	b.mi	4d560 <my_regprop@@Base+0x1329c>  // b.first
   4d51c:	ldr	w2, [x19, #192]
   4d520:	cmp	w2, #0x0
   4d524:	cset	w3, ne  // ne = any
   4d528:	cmp	x0, x1
   4d52c:	csel	x0, x0, x1, ls  // ls = plast
   4d530:	str	x0, [sp]
   4d534:	mov	w6, w3
   4d538:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4d53c:	add	x2, x2, #0x340
   4d540:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4d544:	add	x1, x1, #0x3a8
   4d548:	mov	x0, x20
   4d54c:	bl	5420 <Perl_croak@plt>
   4d550:	ldr	x5, [x19, #8]
   4d554:	sub	x4, x1, x5
   4d558:	mov	x7, #0x0                   	// #0
   4d55c:	b	4d51c <my_regprop@@Base+0x13258>
   4d560:	ldr	x6, [x19, #48]
   4d564:	ldr	x5, [x19, #56]
   4d568:	sub	w5, w5, w6
   4d56c:	mov	w3, #0x3478                	// #13432
   4d570:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d574:	add	x2, x2, #0xfb8
   4d578:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d57c:	add	x1, x1, #0x870
   4d580:	mov	x0, x20
   4d584:	bl	5420 <Perl_croak@plt>
   4d588:	mov	w2, #0x21                  	// #33
   4d58c:	mov	x1, x19
   4d590:	mov	x0, x20
   4d594:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4d598:	str	x0, [sp, #288]
   4d59c:	ldr	w0, [sp, #272]
   4d5a0:	orr	w0, w0, #0x1
   4d5a4:	str	w0, [sp, #272]
   4d5a8:	b	51ce8 <my_regprop@@Base+0x17a24>
   4d5ac:	mov	w2, #0x1                   	// #1
   4d5b0:	str	w2, [sp, #168]
   4d5b4:	b	4d5bc <my_regprop@@Base+0x132f8>
   4d5b8:	str	wzr, [sp, #168]
   4d5bc:	ldr	w25, [x19]
   4d5c0:	ubfx	x26, x25, #7, #3
   4d5c4:	ldr	w2, [x19, #156]
   4d5c8:	add	w2, w2, #0x1
   4d5cc:	str	w2, [x19, #156]
   4d5d0:	ldr	w2, [x19, #120]
   4d5d4:	orr	w2, w2, #0x2
   4d5d8:	str	w2, [x19, #120]
   4d5dc:	add	w22, w26, #0x8
   4d5e0:	cmp	x1, x0
   4d5e4:	b.ls	4d5f4 <my_regprop@@Base+0x13330>  // b.plast
   4d5e8:	ldrb	w0, [x21, #2]
   4d5ec:	cmp	w0, #0x7b
   4d5f0:	b.eq	4d61c <my_regprop@@Base+0x13358>  // b.none
   4d5f4:	cmp	w22, #0xb
   4d5f8:	b.hi	51c44 <my_regprop@@Base+0x17980>  // b.pmore
   4d5fc:	mov	w21, #0x0                   	// #0
   4d600:	cmp	w22, #0x8
   4d604:	b.eq	4dc04 <my_regprop@@Base+0x13940>  // b.none
   4d608:	cmp	w22, #0x9
   4d60c:	b.ne	51c4c <my_regprop@@Base+0x17988>  // b.any
   4d610:	mov	w0, #0x1                   	// #1
   4d614:	str	w0, [x19, #248]
   4d618:	b	51c4c <my_regprop@@Base+0x17988>
   4d61c:	ldrb	w0, [x21, #1]
   4d620:	str	w0, [sp, #176]
   4d624:	add	x23, x21, #0x3
   4d628:	str	x23, [x19, #64]
   4d62c:	sub	x2, x1, x23
   4d630:	mov	w1, #0x7d                  	// #125
   4d634:	mov	x0, x23
   4d638:	bl	5750 <memchr@plt>
   4d63c:	mov	x24, x0
   4d640:	cbz	x0, 4d68c <my_regprop@@Base+0x133c8>
   4d644:	cmp	x23, x0
   4d648:	b.eq	4d774 <my_regprop@@Base+0x134b0>  // b.none
   4d64c:	sub	x23, x0, x23
   4d650:	ldrb	w0, [x21, #3]
   4d654:	cmp	w0, #0x73
   4d658:	b.eq	4d974 <my_regprop@@Base+0x136b0>  // b.none
   4d65c:	b.hi	4d864 <my_regprop@@Base+0x135a0>  // b.pmore
   4d660:	cmp	w0, #0x67
   4d664:	b.eq	4d944 <my_regprop@@Base+0x13680>  // b.none
   4d668:	cmp	w0, #0x6c
   4d66c:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d670:	cmp	x23, #0x2
   4d674:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d678:	ldrb	w0, [x21, #4]
   4d67c:	cmp	w0, #0x62
   4d680:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d684:	mov	w21, #0x2                   	// #2
   4d688:	b	4d9cc <my_regprop@@Base+0x13708>
   4d68c:	ldr	x1, [x19, #24]
   4d690:	cbz	x1, 4d6a0 <my_regprop@@Base+0x133dc>
   4d694:	mov	w2, #0xb                   	// #11
   4d698:	mov	x0, x20
   4d69c:	bl	54b0 <Perl_save_pushptr@plt>
   4d6a0:	ldr	x1, [x19, #160]
   4d6a4:	cbz	x1, 4d6b4 <my_regprop@@Base+0x133f0>
   4d6a8:	mov	w2, #0xa                   	// #10
   4d6ac:	mov	x0, x20
   4d6b0:	bl	54b0 <Perl_save_pushptr@plt>
   4d6b4:	ldr	x1, [x19, #168]
   4d6b8:	cbz	x1, 4d6c8 <my_regprop@@Base+0x13404>
   4d6bc:	mov	w2, #0xa                   	// #10
   4d6c0:	mov	x0, x20
   4d6c4:	bl	54b0 <Perl_save_pushptr@plt>
   4d6c8:	ldr	x0, [x19, #64]
   4d6cc:	ldr	x1, [x19, #72]
   4d6d0:	sub	x1, x0, x1
   4d6d4:	ldr	x0, [x19, #80]
   4d6d8:	add	x0, x0, x1
   4d6dc:	ldr	x2, [x19, #16]
   4d6e0:	cmp	x0, x2
   4d6e4:	b.hi	4d73c <my_regprop@@Base+0x13478>  // b.pmore
   4d6e8:	ldr	x7, [x19, #8]
   4d6ec:	subs	x4, x0, x7
   4d6f0:	b.mi	4d74c <my_regprop@@Base+0x13488>  // b.first
   4d6f4:	mov	x6, x4
   4d6f8:	sub	x3, x2, x0
   4d6fc:	ldr	w1, [x19, #192]
   4d700:	cmp	w1, #0x0
   4d704:	cset	w1, ne  // ne = any
   4d708:	cmp	x0, x2
   4d70c:	csel	x0, x0, x2, ls  // ls = plast
   4d710:	str	x0, [sp, #16]
   4d714:	str	x3, [sp, #8]
   4d718:	str	w1, [sp]
   4d71c:	mov	w5, w1
   4d720:	ldr	w4, [sp, #176]
   4d724:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4d728:	add	x3, x3, #0x5d8
   4d72c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4d730:	add	x2, x2, #0x3f0
   4d734:	mov	x0, x20
   4d738:	bl	273ac <my_regexec@@Base+0x3eb8>
   4d73c:	ldr	x7, [x19, #8]
   4d740:	sub	x6, x2, x7
   4d744:	mov	x3, #0x0                   	// #0
   4d748:	b	4d6fc <my_regprop@@Base+0x13438>
   4d74c:	ldr	x6, [x19, #48]
   4d750:	ldr	x5, [x19, #56]
   4d754:	sub	w5, w5, w6
   4d758:	mov	w3, #0x349f                	// #13471
   4d75c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d760:	add	x2, x2, #0xfb8
   4d764:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d768:	add	x1, x1, #0x870
   4d76c:	mov	x0, x20
   4d770:	bl	5420 <Perl_croak@plt>
   4d774:	add	x21, x21, #0x4
   4d778:	str	x21, [x19, #64]
   4d77c:	ldr	x1, [x19, #24]
   4d780:	cbz	x1, 4d790 <my_regprop@@Base+0x134cc>
   4d784:	mov	w2, #0xb                   	// #11
   4d788:	mov	x0, x20
   4d78c:	bl	54b0 <Perl_save_pushptr@plt>
   4d790:	ldr	x1, [x19, #160]
   4d794:	cbz	x1, 4d7a4 <my_regprop@@Base+0x134e0>
   4d798:	mov	w2, #0xa                   	// #10
   4d79c:	mov	x0, x20
   4d7a0:	bl	54b0 <Perl_save_pushptr@plt>
   4d7a4:	ldr	x1, [x19, #168]
   4d7a8:	cbz	x1, 4d7b8 <my_regprop@@Base+0x134f4>
   4d7ac:	mov	w2, #0xa                   	// #10
   4d7b0:	mov	x0, x20
   4d7b4:	bl	54b0 <Perl_save_pushptr@plt>
   4d7b8:	ldr	x0, [x19, #64]
   4d7bc:	ldr	x1, [x19, #72]
   4d7c0:	sub	x1, x0, x1
   4d7c4:	ldr	x0, [x19, #80]
   4d7c8:	add	x0, x0, x1
   4d7cc:	ldr	x2, [x19, #16]
   4d7d0:	cmp	x0, x2
   4d7d4:	b.hi	4d82c <my_regprop@@Base+0x13568>  // b.pmore
   4d7d8:	ldr	x7, [x19, #8]
   4d7dc:	subs	x4, x0, x7
   4d7e0:	b.mi	4d83c <my_regprop@@Base+0x13578>  // b.first
   4d7e4:	mov	x6, x4
   4d7e8:	sub	x3, x2, x0
   4d7ec:	ldr	w1, [x19, #192]
   4d7f0:	cmp	w1, #0x0
   4d7f4:	cset	w1, ne  // ne = any
   4d7f8:	cmp	x0, x2
   4d7fc:	csel	x0, x0, x2, ls  // ls = plast
   4d800:	str	x0, [sp, #16]
   4d804:	str	x3, [sp, #8]
   4d808:	str	w1, [sp]
   4d80c:	mov	w5, w1
   4d810:	ldr	w4, [sp, #176]
   4d814:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4d818:	add	x3, x3, #0x5d8
   4d81c:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4d820:	add	x2, x2, #0x938
   4d824:	mov	x0, x20
   4d828:	bl	273ac <my_regexec@@Base+0x3eb8>
   4d82c:	ldr	x7, [x19, #8]
   4d830:	sub	x6, x2, x7
   4d834:	mov	x3, #0x0                   	// #0
   4d838:	b	4d7ec <my_regprop@@Base+0x13528>
   4d83c:	ldr	x6, [x19, #48]
   4d840:	ldr	x5, [x19, #56]
   4d844:	sub	w5, w5, w6
   4d848:	mov	w3, #0x34a9                	// #13481
   4d84c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d850:	add	x2, x2, #0xfb8
   4d854:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d858:	add	x1, x1, #0x870
   4d85c:	mov	x0, x20
   4d860:	bl	5420 <Perl_croak@plt>
   4d864:	cmp	w0, #0x77
   4d868:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d86c:	cmp	x23, #0x2
   4d870:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d874:	ldrb	w0, [x21, #4]
   4d878:	cmp	w0, #0x62
   4d87c:	b.eq	4da08 <my_regprop@@Base+0x13744>  // b.none
   4d880:	str	x24, [x19, #64]
   4d884:	ldr	x1, [x19, #24]
   4d888:	cbz	x1, 4d898 <my_regprop@@Base+0x135d4>
   4d88c:	mov	w2, #0xb                   	// #11
   4d890:	mov	x0, x20
   4d894:	bl	54b0 <Perl_save_pushptr@plt>
   4d898:	ldr	x1, [x19, #160]
   4d89c:	cbz	x1, 4d8ac <my_regprop@@Base+0x135e8>
   4d8a0:	mov	w2, #0xa                   	// #10
   4d8a4:	mov	x0, x20
   4d8a8:	bl	54b0 <Perl_save_pushptr@plt>
   4d8ac:	ldr	x1, [x19, #168]
   4d8b0:	cbz	x1, 4d8c0 <my_regprop@@Base+0x135fc>
   4d8b4:	mov	w2, #0xa                   	// #10
   4d8b8:	mov	x0, x20
   4d8bc:	bl	54b0 <Perl_save_pushptr@plt>
   4d8c0:	ldr	x0, [x19, #64]
   4d8c4:	ldr	x1, [x19, #72]
   4d8c8:	sub	x1, x0, x1
   4d8cc:	ldr	x0, [x19, #80]
   4d8d0:	add	x0, x0, x1
   4d8d4:	ldr	x5, [x19, #16]
   4d8d8:	cmp	x0, x5
   4d8dc:	b.hi	4d990 <my_regprop@@Base+0x136cc>  // b.pmore
   4d8e0:	ldr	x3, [x19, #8]
   4d8e4:	subs	x4, x0, x3
   4d8e8:	b.mi	4d9a0 <my_regprop@@Base+0x136dc>  // b.first
   4d8ec:	mov	x2, x4
   4d8f0:	sub	x4, x5, x0
   4d8f4:	ldr	w1, [x19, #192]
   4d8f8:	cmp	w1, #0x0
   4d8fc:	cset	w1, ne  // ne = any
   4d900:	cmp	x0, x5
   4d904:	csel	x0, x0, x5, ls  // ls = plast
   4d908:	str	x0, [sp, #32]
   4d90c:	str	x4, [sp, #24]
   4d910:	str	w1, [sp, #16]
   4d914:	str	x3, [sp, #8]
   4d918:	str	x2, [sp]
   4d91c:	mov	w7, w1
   4d920:	sub	x6, x24, x23
   4d924:	mov	x5, x23
   4d928:	mov	w4, w1
   4d92c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4d930:	add	x3, x3, #0x5d8
   4d934:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4d938:	add	x2, x2, #0x360
   4d93c:	mov	x0, x20
   4d940:	bl	273ac <my_regexec@@Base+0x3eb8>
   4d944:	cmp	x23, #0x1
   4d948:	b.eq	4d9c8 <my_regprop@@Base+0x13704>  // b.none
   4d94c:	cmp	x23, #0x3
   4d950:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d954:	mov	x2, #0x2                   	// #2
   4d958:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4d95c:	add	x1, x1, #0x358
   4d960:	add	x0, x21, #0x4
   4d964:	bl	5460 <memcmp@plt>
   4d968:	cbnz	w0, 4d880 <my_regprop@@Base+0x135bc>
   4d96c:	mov	w21, #0x1                   	// #1
   4d970:	b	4d9cc <my_regprop@@Base+0x13708>
   4d974:	cmp	x23, #0x2
   4d978:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d97c:	ldrb	w0, [x21, #4]
   4d980:	cmp	w0, #0x62
   4d984:	b.ne	4d880 <my_regprop@@Base+0x135bc>  // b.any
   4d988:	mov	w21, #0x3                   	// #3
   4d98c:	b	4d9cc <my_regprop@@Base+0x13708>
   4d990:	ldr	x3, [x19, #8]
   4d994:	sub	x2, x5, x3
   4d998:	mov	x4, #0x0                   	// #0
   4d99c:	b	4d8f4 <my_regprop@@Base+0x13630>
   4d9a0:	ldr	x6, [x19, #48]
   4d9a4:	ldr	x5, [x19, #56]
   4d9a8:	sub	w5, w5, w6
   4d9ac:	mov	w3, #0x34cd                	// #13517
   4d9b0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4d9b4:	add	x2, x2, #0xfb8
   4d9b8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4d9bc:	add	x1, x1, #0x870
   4d9c0:	mov	x0, x20
   4d9c4:	bl	5420 <Perl_croak@plt>
   4d9c8:	mov	w21, #0x1                   	// #1
   4d9cc:	str	x24, [x19, #64]
   4d9d0:	cbnz	w26, 4da10 <my_regprop@@Base+0x1374c>
   4d9d4:	and	w0, w25, #0xfffffc7f
   4d9d8:	orr	w0, w0, #0x100
   4d9dc:	str	w0, [x19]
   4d9e0:	mov	w0, #0x1                   	// #1
   4d9e4:	str	w0, [x19, #200]
   4d9e8:	ldrb	w0, [x19, #384]
   4d9ec:	cbz	w0, 4da10 <my_regprop@@Base+0x1374c>
   4d9f0:	ldr	w0, [x19, #148]
   4d9f4:	tbnz	w0, #31, 4da10 <my_regprop@@Base+0x1374c>
   4d9f8:	ldr	w0, [sp, #272]
   4d9fc:	orr	w0, w0, #0x20
   4da00:	str	w0, [sp, #272]
   4da04:	b	4cdcc <my_regprop@@Base+0x12b08>
   4da08:	mov	w21, #0x4                   	// #4
   4da0c:	b	4d9cc <my_regprop@@Base+0x13708>
   4da10:	cmp	w22, #0x8
   4da14:	b.eq	51c8c <my_regprop@@Base+0x179c8>  // b.none
   4da18:	cmp	w22, #0xa
   4da1c:	b.ls	4d608 <my_regprop@@Base+0x13344>  // b.plast
   4da20:	ldr	x1, [x19, #72]
   4da24:	cbz	x1, 4db64 <my_regprop@@Base+0x138a0>
   4da28:	add	x0, x24, #0x1
   4da2c:	sub	x1, x0, x1
   4da30:	ldr	x0, [x19, #80]
   4da34:	add	x0, x0, x1
   4da38:	ldr	x1, [x19, #8]
   4da3c:	sub	x0, x0, x1
   4da40:	ldr	x1, [x19, #136]
   4da44:	cmp	x0, x1
   4da48:	b.le	51c94 <my_regprop@@Base+0x179d0>
   4da4c:	ldr	x0, [x20, #224]
   4da50:	cbz	x0, 4da78 <my_regprop@@Base+0x137b4>
   4da54:	ldr	x0, [x0, #64]
   4da58:	cmp	x0, #0x0
   4da5c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4da60:	ldr	x1, [x1, #3984]
   4da64:	ccmp	x0, x1, #0x4, ne  // ne = any
   4da68:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4da6c:	ldr	x1, [x1, #3832]
   4da70:	ccmp	x0, x1, #0x4, ne  // ne = any
   4da74:	b.ne	4db84 <my_regprop@@Base+0x138c0>  // b.any
   4da78:	add	x3, x23, #0x4
   4da7c:	sub	x0, x24, x3
   4da80:	add	x0, x0, #0x1
   4da84:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4da88:	add	x1, x1, #0x120
   4da8c:	adrp	x5, 61000 <my_regfree@@Base+0x250>
   4da90:	add	x5, x5, #0xc90
   4da94:	cmp	w26, #0x3
   4da98:	csel	x5, x5, x1, eq  // eq = none
   4da9c:	ldr	w1, [x19, #192]
   4daa0:	cmp	w1, #0x0
   4daa4:	cset	w6, ne  // ne = any
   4daa8:	ldr	x1, [x19, #64]
   4daac:	add	x1, x1, #0x1
   4dab0:	ldr	x2, [x19, #72]
   4dab4:	sub	x2, x1, x2
   4dab8:	ldr	x1, [x19, #80]
   4dabc:	add	x1, x1, x2
   4dac0:	ldr	x8, [x19, #16]
   4dac4:	cmp	x1, x8
   4dac8:	b.hi	4dbcc <my_regprop@@Base+0x13908>  // b.pmore
   4dacc:	ldr	x2, [x19, #8]
   4dad0:	subs	x4, x1, x2
   4dad4:	b.mi	4dbdc <my_regprop@@Base+0x13918>  // b.first
   4dad8:	mov	x7, x4
   4dadc:	sub	x4, x8, x1
   4dae0:	cmp	x1, x8
   4dae4:	csel	x1, x1, x8, ls  // ls = plast
   4dae8:	str	x1, [sp, #24]
   4daec:	str	x4, [sp, #16]
   4daf0:	str	w6, [sp, #8]
   4daf4:	str	x2, [sp]
   4daf8:	mov	x4, x0
   4dafc:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4db00:	add	x2, x2, #0x388
   4db04:	mov	w1, #0x14                  	// #20
   4db08:	mov	x0, x20
   4db0c:	bl	5150 <Perl_ck_warner@plt>
   4db10:	ldr	x0, [x19, #72]
   4db14:	cbz	x0, 51c9c <my_regprop@@Base+0x179d8>
   4db18:	ldr	x1, [x19, #64]
   4db1c:	add	x1, x1, #0x1
   4db20:	sub	x1, x1, x0
   4db24:	ldr	x0, [x19, #80]
   4db28:	add	x1, x0, x1
   4db2c:	ldr	x2, [x19, #8]
   4db30:	sub	x3, x1, x2
   4db34:	ldr	x0, [x19, #136]
   4db38:	cmp	x3, x0
   4db3c:	b.le	51ca4 <my_regprop@@Base+0x179e0>
   4db40:	ldr	x0, [x19, #16]
   4db44:	cmp	x0, x1
   4db48:	csel	x0, x0, x1, ls  // ls = plast
   4db4c:	cmp	x2, x0
   4db50:	csel	x0, x2, x0, hi  // hi = pmore
   4db54:	sub	x0, x0, x2
   4db58:	str	x0, [x19, #136]
   4db5c:	mov	w22, #0xa                   	// #10
   4db60:	b	51c4c <my_regprop@@Base+0x17988>
   4db64:	add	x4, x24, #0x1
   4db68:	mov	w3, #0x34de                	// #13534
   4db6c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4db70:	add	x2, x2, #0xfb8
   4db74:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4db78:	add	x1, x1, #0xab8
   4db7c:	mov	x0, x20
   4db80:	bl	5420 <Perl_croak@plt>
   4db84:	ldrb	w0, [x0, #13]
   4db88:	tbz	w0, #1, 4da78 <my_regprop@@Base+0x137b4>
   4db8c:	ldr	x1, [x19, #24]
   4db90:	cbz	x1, 4dba0 <my_regprop@@Base+0x138dc>
   4db94:	mov	w2, #0xb                   	// #11
   4db98:	mov	x0, x20
   4db9c:	bl	54b0 <Perl_save_pushptr@plt>
   4dba0:	ldr	x1, [x19, #160]
   4dba4:	cbz	x1, 4dbb4 <my_regprop@@Base+0x138f0>
   4dba8:	mov	w2, #0xa                   	// #10
   4dbac:	mov	x0, x20
   4dbb0:	bl	54b0 <Perl_save_pushptr@plt>
   4dbb4:	ldr	x1, [x19, #168]
   4dbb8:	cbz	x1, 4da78 <my_regprop@@Base+0x137b4>
   4dbbc:	mov	w2, #0xa                   	// #10
   4dbc0:	mov	x0, x20
   4dbc4:	bl	54b0 <Perl_save_pushptr@plt>
   4dbc8:	b	4da78 <my_regprop@@Base+0x137b4>
   4dbcc:	ldr	x2, [x19, #8]
   4dbd0:	sub	x7, x8, x2
   4dbd4:	mov	x4, #0x0                   	// #0
   4dbd8:	b	4dae0 <my_regprop@@Base+0x1381c>
   4dbdc:	ldr	x6, [x19, #48]
   4dbe0:	ldr	x5, [x19, #56]
   4dbe4:	sub	w5, w5, w6
   4dbe8:	mov	w3, #0x34de                	// #13534
   4dbec:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4dbf0:	add	x2, x2, #0xfb8
   4dbf4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4dbf8:	add	x1, x1, #0x870
   4dbfc:	mov	x0, x20
   4dc00:	bl	5420 <Perl_croak@plt>
   4dc04:	mov	w0, #0x1                   	// #1
   4dc08:	strb	w0, [x19, #384]
   4dc0c:	b	51c4c <my_regprop@@Base+0x17988>
   4dc10:	ldr	w0, [x19]
   4dc14:	tst	x0, #0x380
   4dc18:	b.ne	5207c <my_regprop@@Base+0x17db8>  // b.any
   4dc1c:	mov	w21, #0x2                   	// #2
   4dc20:	mov	w2, #0x1b                  	// #27
   4dc24:	b	51cbc <my_regprop@@Base+0x179f8>
   4dc28:	mov	w2, #0x63                  	// #99
   4dc2c:	mov	x1, x19
   4dc30:	mov	x0, x20
   4dc34:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   4dc38:	str	x0, [sp, #288]
   4dc3c:	ldr	w0, [sp, #272]
   4dc40:	orr	w0, w0, #0x3
   4dc44:	str	w0, [sp, #272]
   4dc48:	b	51ce8 <my_regprop@@Base+0x17a24>
   4dc4c:	ldr	w2, [x19]
   4dc50:	ubfx	x2, x2, #7, #3
   4dc54:	add	w2, w2, #0x19
   4dc58:	cmp	w2, #0x1c
   4dc5c:	b.ls	4dc70 <my_regprop@@Base+0x139ac>  // b.plast
   4dc60:	mov	w21, #0x14                  	// #20
   4dc64:	mov	w0, #0x0                   	// #0
   4dc68:	mov	w2, #0x1c                  	// #28
   4dc6c:	b	4dc88 <my_regprop@@Base+0x139c4>
   4dc70:	mov	w21, #0x14                  	// #20
   4dc74:	mov	w0, #0x0                   	// #0
   4dc78:	cmp	w2, #0x1a
   4dc7c:	b.eq	4dc90 <my_regprop@@Base+0x139cc>  // b.none
   4dc80:	cmp	w2, #0x19
   4dc84:	b.eq	4dc9c <my_regprop@@Base+0x139d8>  // b.none
   4dc88:	cbz	w0, 51cbc <my_regprop@@Base+0x179f8>
   4dc8c:	b	51cb4 <my_regprop@@Base+0x179f0>
   4dc90:	mov	w1, #0x1                   	// #1
   4dc94:	str	w1, [x19, #248]
   4dc98:	b	4dc88 <my_regprop@@Base+0x139c4>
   4dc9c:	mov	w1, #0x1                   	// #1
   4dca0:	strb	w1, [x19, #384]
   4dca4:	b	4dc88 <my_regprop@@Base+0x139c4>
   4dca8:	mov	w21, #0x1e                  	// #30
   4dcac:	mov	w0, #0x0                   	// #0
   4dcb0:	mov	w2, #0x1b                  	// #27
   4dcb4:	b	4dc88 <my_regprop@@Base+0x139c4>
   4dcb8:	mov	w21, #0x2                   	// #2
   4dcbc:	mov	w2, #0x1c                  	// #28
   4dcc0:	b	51cb4 <my_regprop@@Base+0x179f0>
   4dcc4:	mov	w21, #0x16                  	// #22
   4dcc8:	mov	w2, #0x1b                  	// #27
   4dccc:	b	51cbc <my_regprop@@Base+0x179f8>
   4dcd0:	mov	w21, #0x2                   	// #2
   4dcd4:	mov	w2, #0x1c                  	// #28
   4dcd8:	b	51cbc <my_regprop@@Base+0x179f8>
   4dcdc:	ldr	x1, [x19, #56]
   4dce0:	add	x0, x21, #0x1
   4dce4:	bl	26408 <my_regexec@@Base+0x2f14>
   4dce8:	and	w0, w0, #0xff
   4dcec:	cbnz	w0, 51cf8 <my_regprop@@Base+0x17a34>
   4dcf0:	add	x21, x21, #0x2
   4dcf4:	str	x21, [x19, #64]
   4dcf8:	ldr	x1, [x19, #24]
   4dcfc:	cbz	x1, 4dd0c <my_regprop@@Base+0x13a48>
   4dd00:	mov	w2, #0xb                   	// #11
   4dd04:	mov	x0, x20
   4dd08:	bl	54b0 <Perl_save_pushptr@plt>
   4dd0c:	ldr	x1, [x19, #160]
   4dd10:	cbz	x1, 4dd20 <my_regprop@@Base+0x13a5c>
   4dd14:	mov	w2, #0xa                   	// #10
   4dd18:	mov	x0, x20
   4dd1c:	bl	54b0 <Perl_save_pushptr@plt>
   4dd20:	ldr	x1, [x19, #168]
   4dd24:	cbz	x1, 4dd34 <my_regprop@@Base+0x13a70>
   4dd28:	mov	w2, #0xa                   	// #10
   4dd2c:	mov	x0, x20
   4dd30:	bl	54b0 <Perl_save_pushptr@plt>
   4dd34:	ldr	x0, [x19, #64]
   4dd38:	ldr	x1, [x19, #72]
   4dd3c:	sub	x1, x0, x1
   4dd40:	ldr	x0, [x19, #80]
   4dd44:	add	x0, x0, x1
   4dd48:	ldr	x1, [x19, #16]
   4dd4c:	cmp	x0, x1
   4dd50:	b.hi	4dd98 <my_regprop@@Base+0x13ad4>  // b.pmore
   4dd54:	ldr	x5, [x19, #8]
   4dd58:	sub	x7, x1, x0
   4dd5c:	subs	x4, x0, x5
   4dd60:	b.mi	4dda8 <my_regprop@@Base+0x13ae4>  // b.first
   4dd64:	ldr	w2, [x19, #192]
   4dd68:	cmp	w2, #0x0
   4dd6c:	cset	w3, ne  // ne = any
   4dd70:	cmp	x0, x1
   4dd74:	csel	x0, x0, x1, ls  // ls = plast
   4dd78:	str	x0, [sp]
   4dd7c:	mov	w6, w3
   4dd80:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4dd84:	add	x2, x2, #0x3f0
   4dd88:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4dd8c:	add	x1, x1, #0x3a8
   4dd90:	mov	x0, x20
   4dd94:	bl	5420 <Perl_croak@plt>
   4dd98:	ldr	x5, [x19, #8]
   4dd9c:	sub	x4, x1, x5
   4dda0:	mov	x7, #0x0                   	// #0
   4dda4:	b	4dd64 <my_regprop@@Base+0x13aa0>
   4dda8:	ldr	x6, [x19, #48]
   4ddac:	ldr	x5, [x19, #56]
   4ddb0:	sub	w5, w5, w6
   4ddb4:	mov	w3, #0x3543                	// #13635
   4ddb8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4ddbc:	add	x2, x2, #0xfb8
   4ddc0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4ddc4:	add	x1, x1, #0x870
   4ddc8:	mov	x0, x20
   4ddcc:	bl	5420 <Perl_croak@plt>
   4ddd0:	ubfx	x2, x2, #2, #32
   4ddd4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4ddd8:	add	x1, x1, #0x888
   4dddc:	mov	x0, x20
   4dde0:	bl	5420 <Perl_croak@plt>
   4dde4:	str	x21, [x19, #64]
   4dde8:	str	xzr, [sp, #8]
   4ddec:	mov	w4, #0x1                   	// #1
   4ddf0:	strb	w4, [sp]
   4ddf4:	ldrb	w7, [x19, #385]
   4ddf8:	mov	w6, #0x0                   	// #0
   4ddfc:	mov	w5, #0x0                   	// #0
   4de00:	add	w3, w22, #0x2
   4de04:	add	x2, sp, #0x110
   4de08:	mov	x1, x19
   4de0c:	mov	x0, x20
   4de10:	bl	437e4 <my_regprop@@Base+0x9520>
   4de14:	mov	x2, x0
   4de18:	str	x0, [sp, #288]
   4de1c:	ldr	w0, [sp, #272]
   4de20:	tbnz	w0, #5, 4cdcc <my_regprop@@Base+0x12b08>
   4de24:	cbz	x2, 4dee8 <my_regprop@@Base+0x13c24>
   4de28:	ldr	x0, [x19, #64]
   4de2c:	sub	x0, x0, #0x1
   4de30:	str	x0, [x19, #64]
   4de34:	ldr	w0, [x20, #2368]
   4de38:	tbnz	w0, #20, 4de44 <my_regprop@@Base+0x13b80>
   4de3c:	ldr	x0, [sp, #296]
   4de40:	tbz	w0, #18, 4de5c <my_regprop@@Base+0x13b98>
   4de44:	ldr	x3, [x19, #48]
   4de48:	sub	w3, w21, w3
   4de4c:	mov	w1, #0x355e                	// #13662
   4de50:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   4de54:	add	x0, x0, #0xf30
   4de58:	bl	5010 <Perl_warn_nocontext@plt>
   4de5c:	ldr	x0, [sp, #288]
   4de60:	lsl	x2, x0, #2
   4de64:	tbnz	x0, #61, 4df78 <my_regprop@@Base+0x13cb4>
   4de68:	ldr	x0, [x19, #40]
   4de6c:	ldr	x0, [x0, #8]
   4de70:	add	x2, x0, x2, lsl #1
   4de74:	ldr	x0, [x19, #48]
   4de78:	sub	x0, x21, x0
   4de7c:	stur	w0, [x2, #-4]
   4de80:	ldr	w0, [x20, #2368]
   4de84:	tbnz	w0, #20, 4de90 <my_regprop@@Base+0x13bcc>
   4de88:	ldr	x0, [sp, #296]
   4de8c:	tbz	w0, #18, 4deb0 <my_regprop@@Base+0x13bec>
   4de90:	ldr	x3, [x19, #64]
   4de94:	sub	x3, x3, x21
   4de98:	sub	w3, w3, #0x2
   4de9c:	ldr	w2, [sp, #288]
   4dea0:	mov	w1, #0x355f                	// #13663
   4dea4:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4dea8:	add	x0, x0, #0x8
   4deac:	bl	5010 <Perl_warn_nocontext@plt>
   4deb0:	ldr	x0, [sp, #288]
   4deb4:	lsl	x2, x0, #2
   4deb8:	tbnz	x0, #61, 4df8c <my_regprop@@Base+0x13cc8>
   4debc:	ldr	x0, [x19, #40]
   4dec0:	ldr	x1, [x0, #8]
   4dec4:	lsl	x2, x2, #1
   4dec8:	ldr	x0, [x19, #64]
   4decc:	sub	x0, x0, x21
   4ded0:	sub	w0, w0, #0x2
   4ded4:	str	w0, [x1, x2]
   4ded8:	mov	x1, x19
   4dedc:	mov	x0, x20
   4dee0:	bl	269a4 <my_regexec@@Base+0x34b0>
   4dee4:	b	51e60 <my_regprop@@Base+0x17b9c>
   4dee8:	ldr	x21, [x19, #16]
   4deec:	ldr	x0, [x19, #8]
   4def0:	sub	x21, x21, x0
   4def4:	ldr	x1, [x19, #24]
   4def8:	cbz	x1, 4df08 <my_regprop@@Base+0x13c44>
   4defc:	mov	w2, #0xb                   	// #11
   4df00:	mov	x0, x20
   4df04:	bl	54b0 <Perl_save_pushptr@plt>
   4df08:	ldr	x1, [x19, #160]
   4df0c:	cbz	x1, 4df1c <my_regprop@@Base+0x13c58>
   4df10:	mov	w2, #0xa                   	// #10
   4df14:	mov	x0, x20
   4df18:	bl	54b0 <Perl_save_pushptr@plt>
   4df1c:	ldr	x1, [x19, #168]
   4df20:	cbz	x1, 4df30 <my_regprop@@Base+0x13c6c>
   4df24:	mov	w2, #0xa                   	// #10
   4df28:	mov	x0, x20
   4df2c:	bl	54b0 <Perl_save_pushptr@plt>
   4df30:	cmp	x21, #0x7f
   4df34:	b.le	4df6c <my_regprop@@Base+0x13ca8>
   4df38:	mov	x21, #0x75                  	// #117
   4df3c:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4df40:	add	x6, x6, #0xfe0
   4df44:	ldr	w0, [x19, #192]
   4df48:	cmp	w0, #0x0
   4df4c:	ldr	x5, [x19, #8]
   4df50:	mov	x4, x21
   4df54:	cset	w3, ne  // ne = any
   4df58:	ldrsw	x2, [sp, #272]
   4df5c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4df60:	add	x1, x1, #0x270
   4df64:	mov	x0, x20
   4df68:	bl	5420 <Perl_croak@plt>
   4df6c:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4df70:	add	x6, x6, #0x20
   4df74:	b	4df44 <my_regprop@@Base+0x13c80>
   4df78:	ubfx	x2, x2, #2, #32
   4df7c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4df80:	add	x1, x1, #0xf58
   4df84:	mov	x0, x20
   4df88:	bl	5420 <Perl_croak@plt>
   4df8c:	ubfx	x2, x2, #2, #32
   4df90:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4df94:	add	x1, x1, #0x888
   4df98:	mov	x0, x20
   4df9c:	bl	5420 <Perl_croak@plt>
   4dfa0:	add	x0, x21, #0x2
   4dfa4:	str	x0, [x19, #64]
   4dfa8:	mov	w7, w28
   4dfac:	ldrb	w6, [x19, #385]
   4dfb0:	add	x5, sp, #0x110
   4dfb4:	mov	x4, #0x0                   	// #0
   4dfb8:	mov	x3, #0x0                   	// #0
   4dfbc:	add	x2, sp, #0x120
   4dfc0:	mov	x1, x19
   4dfc4:	mov	x0, x20
   4dfc8:	bl	42288 <my_regprop@@Base+0x7fc4>
   4dfcc:	and	w0, w0, #0xff
   4dfd0:	cbnz	w0, 51e60 <my_regprop@@Base+0x17b9c>
   4dfd4:	ldr	w0, [sp, #272]
   4dfd8:	tbnz	w0, #5, 4cdcc <my_regprop@@Base+0x12b08>
   4dfdc:	str	x21, [x19, #64]
   4dfe0:	b	4e9b4 <my_regprop@@Base+0x146f0>
   4dfe4:	ldr	x7, [x19, #8]
   4dfe8:	sub	x6, x2, x7
   4dfec:	mov	x3, #0x0                   	// #0
   4dff0:	b	4e1e4 <my_regprop@@Base+0x13f20>
   4dff4:	ldr	x6, [x19, #48]
   4dff8:	ldr	x5, [x19, #56]
   4dffc:	sub	w5, w5, w6
   4e000:	mov	w3, #0x358d                	// #13709
   4e004:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e008:	add	x2, x2, #0xfb8
   4e00c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e010:	add	x1, x1, #0x870
   4e014:	mov	x0, x20
   4e018:	bl	5420 <Perl_croak@plt>
   4e01c:	cmp	w2, #0x67
   4e020:	b.ne	4e53c <my_regprop@@Base+0x14278>  // b.any
   4e024:	add	x0, x21, #0x2
   4e028:	str	x0, [x19, #64]
   4e02c:	ldrb	w0, [x21, #2]
   4e030:	cmp	w0, #0x7b
   4e034:	b.eq	4e0f8 <my_regprop@@Base+0x13e34>  // b.none
   4e038:	ldrb	w0, [x21, #2]
   4e03c:	cmp	w0, #0x2d
   4e040:	b.eq	52044 <my_regprop@@Base+0x17d80>  // b.none
   4e044:	mov	w23, #0x0                   	// #0
   4e048:	mov	w22, #0x0                   	// #0
   4e04c:	ldr	x0, [x19, #64]
   4e050:	cmp	x1, x0
   4e054:	b.hi	4e224 <my_regprop@@Base+0x13f60>  // b.pmore
   4e058:	ldr	x1, [x19, #24]
   4e05c:	cbz	x1, 4e06c <my_regprop@@Base+0x13da8>
   4e060:	mov	w2, #0xb                   	// #11
   4e064:	mov	x0, x20
   4e068:	bl	54b0 <Perl_save_pushptr@plt>
   4e06c:	ldr	x1, [x19, #160]
   4e070:	cbz	x1, 4e080 <my_regprop@@Base+0x13dbc>
   4e074:	mov	w2, #0xa                   	// #10
   4e078:	mov	x0, x20
   4e07c:	bl	54b0 <Perl_save_pushptr@plt>
   4e080:	ldr	x1, [x19, #168]
   4e084:	cbz	x1, 4e094 <my_regprop@@Base+0x13dd0>
   4e088:	mov	w2, #0xa                   	// #10
   4e08c:	mov	x0, x20
   4e090:	bl	54b0 <Perl_save_pushptr@plt>
   4e094:	ldr	x0, [x19, #64]
   4e098:	ldr	x1, [x19, #72]
   4e09c:	sub	x1, x0, x1
   4e0a0:	ldr	x0, [x19, #80]
   4e0a4:	add	x0, x0, x1
   4e0a8:	ldr	x1, [x19, #16]
   4e0ac:	cmp	x0, x1
   4e0b0:	b.hi	4e42c <my_regprop@@Base+0x14168>  // b.pmore
   4e0b4:	ldr	x5, [x19, #8]
   4e0b8:	subs	x4, x0, x5
   4e0bc:	b.mi	4e43c <my_regprop@@Base+0x14178>  // b.first
   4e0c0:	sub	x7, x1, x0
   4e0c4:	ldr	w2, [x19, #192]
   4e0c8:	cmp	w2, #0x0
   4e0cc:	cset	w3, ne  // ne = any
   4e0d0:	cmp	x0, x1
   4e0d4:	csel	x0, x0, x1, ls  // ls = plast
   4e0d8:	str	x0, [sp]
   4e0dc:	mov	w6, w3
   4e0e0:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e0e4:	add	x2, x2, #0x460
   4e0e8:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e0ec:	add	x1, x1, #0x3a8
   4e0f0:	mov	x0, x20
   4e0f4:	bl	5420 <Perl_croak@plt>
   4e0f8:	add	x0, x21, #0x3
   4e0fc:	str	x0, [x19, #64]
   4e100:	ldrb	w0, [x21, #3]
   4e104:	cmp	w0, #0x2d
   4e108:	b.eq	52058 <my_regprop@@Base+0x17d94>  // b.none
   4e10c:	ldr	x0, [x19, #64]
   4e110:	ldrb	w0, [x0]
   4e114:	sub	w0, w0, #0x30
   4e118:	cmp	w0, #0x9
   4e11c:	b.hi	4e134 <my_regprop@@Base+0x13e70>  // b.pmore
   4e120:	mov	w23, #0x0                   	// #0
   4e124:	mov	w22, #0x1                   	// #1
   4e128:	b	4e04c <my_regprop@@Base+0x13d88>
   4e12c:	sub	x0, x0, #0x1
   4e130:	str	x0, [x19, #64]
   4e134:	ldr	x0, [x19, #64]
   4e138:	sub	x0, x0, #0x2
   4e13c:	str	x0, [x19, #64]
   4e140:	ldr	x0, [x19, #64]
   4e144:	sub	x1, x1, #0x1
   4e148:	cmp	x0, x1
   4e14c:	b.cs	4e16c <my_regprop@@Base+0x13ea8>  // b.hs, b.nlast
   4e150:	ldrb	w1, [x0, #1]
   4e154:	cmp	w1, #0x3c
   4e158:	b.eq	51c34 <my_regprop@@Base+0x17970>  // b.none
   4e15c:	cmp	w1, #0x27
   4e160:	mov	w2, #0x7b                  	// #123
   4e164:	ccmp	w1, w2, #0x4, ne  // ne = any
   4e168:	b.eq	51c00 <my_regprop@@Base+0x1793c>  // b.none
   4e16c:	add	x0, x0, #0x1
   4e170:	str	x0, [x19, #64]
   4e174:	ldr	x1, [x19, #24]
   4e178:	cbz	x1, 4e188 <my_regprop@@Base+0x13ec4>
   4e17c:	mov	w2, #0xb                   	// #11
   4e180:	mov	x0, x20
   4e184:	bl	54b0 <Perl_save_pushptr@plt>
   4e188:	ldr	x1, [x19, #160]
   4e18c:	cbz	x1, 4e19c <my_regprop@@Base+0x13ed8>
   4e190:	mov	w2, #0xa                   	// #10
   4e194:	mov	x0, x20
   4e198:	bl	54b0 <Perl_save_pushptr@plt>
   4e19c:	ldr	x1, [x19, #168]
   4e1a0:	cbz	x1, 4e1b0 <my_regprop@@Base+0x13eec>
   4e1a4:	mov	w2, #0xa                   	// #10
   4e1a8:	mov	x0, x20
   4e1ac:	bl	54b0 <Perl_save_pushptr@plt>
   4e1b0:	ldr	x0, [x19, #64]
   4e1b4:	ldr	x1, [x19, #72]
   4e1b8:	sub	x1, x0, x1
   4e1bc:	ldr	x0, [x19, #80]
   4e1c0:	add	x0, x0, x1
   4e1c4:	ldr	x2, [x19, #16]
   4e1c8:	cmp	x0, x2
   4e1cc:	b.hi	4dfe4 <my_regprop@@Base+0x13d20>  // b.pmore
   4e1d0:	ldr	x7, [x19, #8]
   4e1d4:	subs	x4, x0, x7
   4e1d8:	b.mi	4dff4 <my_regprop@@Base+0x13d30>  // b.first
   4e1dc:	mov	x6, x4
   4e1e0:	sub	x3, x2, x0
   4e1e4:	ldr	w1, [x19, #192]
   4e1e8:	cmp	w1, #0x0
   4e1ec:	cset	w1, ne  // ne = any
   4e1f0:	cmp	x0, x2
   4e1f4:	csel	x0, x0, x2, ls  // ls = plast
   4e1f8:	str	x0, [sp, #16]
   4e1fc:	str	x3, [sp, #8]
   4e200:	str	w1, [sp]
   4e204:	mov	w5, w1
   4e208:	mov	x4, x21
   4e20c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   4e210:	add	x3, x3, #0x5d8
   4e214:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e218:	add	x2, x2, #0x420
   4e21c:	mov	x0, x20
   4e220:	bl	273ac <my_regexec@@Base+0x3eb8>
   4e224:	bl	26640 <my_regexec@@Base+0x314c>
   4e228:	mov	w3, w0
   4e22c:	cbnz	w0, 4e308 <my_regprop@@Base+0x14044>
   4e230:	ldr	x1, [x19, #24]
   4e234:	cbz	x1, 4e244 <my_regprop@@Base+0x13f80>
   4e238:	mov	w2, #0xb                   	// #11
   4e23c:	mov	x0, x20
   4e240:	bl	54b0 <Perl_save_pushptr@plt>
   4e244:	ldr	x1, [x19, #160]
   4e248:	cbz	x1, 4e258 <my_regprop@@Base+0x13f94>
   4e24c:	mov	w2, #0xa                   	// #10
   4e250:	mov	x0, x20
   4e254:	bl	54b0 <Perl_save_pushptr@plt>
   4e258:	ldr	x1, [x19, #168]
   4e25c:	cbz	x1, 4e26c <my_regprop@@Base+0x13fa8>
   4e260:	mov	w2, #0xa                   	// #10
   4e264:	mov	x0, x20
   4e268:	bl	54b0 <Perl_save_pushptr@plt>
   4e26c:	ldr	x0, [x19, #64]
   4e270:	ldr	x1, [x19, #72]
   4e274:	sub	x1, x0, x1
   4e278:	ldr	x0, [x19, #80]
   4e27c:	add	x0, x0, x1
   4e280:	ldr	x1, [x19, #16]
   4e284:	cmp	x0, x1
   4e288:	b.hi	4e2d0 <my_regprop@@Base+0x1400c>  // b.pmore
   4e28c:	ldr	x5, [x19, #8]
   4e290:	subs	x4, x0, x5
   4e294:	b.mi	4e2e0 <my_regprop@@Base+0x1401c>  // b.first
   4e298:	sub	x7, x1, x0
   4e29c:	ldr	w2, [x19, #192]
   4e2a0:	cmp	w2, #0x0
   4e2a4:	cset	w3, ne  // ne = any
   4e2a8:	cmp	x0, x1
   4e2ac:	csel	x0, x0, x1, ls  // ls = plast
   4e2b0:	str	x0, [sp]
   4e2b4:	mov	w6, w3
   4e2b8:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e2bc:	add	x2, x2, #0x440
   4e2c0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e2c4:	add	x1, x1, #0x3a8
   4e2c8:	mov	x0, x20
   4e2cc:	bl	5420 <Perl_croak@plt>
   4e2d0:	ldr	x5, [x19, #8]
   4e2d4:	sub	x4, x1, x5
   4e2d8:	mov	x7, #0x0                   	// #0
   4e2dc:	b	4e29c <my_regprop@@Base+0x13fd8>
   4e2e0:	ldr	x6, [x19, #48]
   4e2e4:	ldr	x5, [x19, #56]
   4e2e8:	sub	w5, w5, w6
   4e2ec:	mov	w3, #0x35b9                	// #13753
   4e2f0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e2f4:	add	x2, x2, #0xfb8
   4e2f8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e2fc:	add	x1, x1, #0x870
   4e300:	mov	x0, x20
   4e304:	bl	5420 <Perl_croak@plt>
   4e308:	mov	w0, #0x7fffffff            	// #2147483647
   4e30c:	cmp	w3, w0
   4e310:	b.eq	4e340 <my_regprop@@Base+0x1407c>  // b.none
   4e314:	cbz	w23, 4e328 <my_regprop@@Base+0x14064>
   4e318:	ldr	w0, [x19, #144]
   4e31c:	sub	w3, w0, w3
   4e320:	cmp	w3, #0x0
   4e324:	b.le	4e464 <my_regprop@@Base+0x141a0>
   4e328:	ldr	x4, [x19, #64]
   4e32c:	ldrb	w1, [x4]
   4e330:	sub	w0, w1, #0x30
   4e334:	cmp	w0, #0x9
   4e338:	b.ls	4e588 <my_regprop@@Base+0x142c4>  // b.plast
   4e33c:	b	4e5a4 <my_regprop@@Base+0x142e0>
   4e340:	ldr	x0, [x19, #64]
   4e344:	ldrb	w0, [x0]
   4e348:	sub	w0, w0, #0x30
   4e34c:	cmp	w0, #0x9
   4e350:	b.hi	4e058 <my_regprop@@Base+0x13d94>  // b.pmore
   4e354:	ldr	x1, [x19, #24]
   4e358:	cbz	x1, 4e368 <my_regprop@@Base+0x140a4>
   4e35c:	mov	w2, #0xb                   	// #11
   4e360:	mov	x0, x20
   4e364:	bl	54b0 <Perl_save_pushptr@plt>
   4e368:	ldr	x1, [x19, #160]
   4e36c:	cbz	x1, 4e37c <my_regprop@@Base+0x140b8>
   4e370:	mov	w2, #0xa                   	// #10
   4e374:	mov	x0, x20
   4e378:	bl	54b0 <Perl_save_pushptr@plt>
   4e37c:	ldr	x1, [x19, #168]
   4e380:	cbz	x1, 4e390 <my_regprop@@Base+0x140cc>
   4e384:	mov	w2, #0xa                   	// #10
   4e388:	mov	x0, x20
   4e38c:	bl	54b0 <Perl_save_pushptr@plt>
   4e390:	ldr	x0, [x19, #64]
   4e394:	ldr	x1, [x19, #72]
   4e398:	sub	x1, x0, x1
   4e39c:	ldr	x0, [x19, #80]
   4e3a0:	add	x0, x0, x1
   4e3a4:	ldr	x1, [x19, #16]
   4e3a8:	cmp	x0, x1
   4e3ac:	b.hi	4e3f4 <my_regprop@@Base+0x14130>  // b.pmore
   4e3b0:	ldr	x5, [x19, #8]
   4e3b4:	subs	x4, x0, x5
   4e3b8:	b.mi	4e404 <my_regprop@@Base+0x14140>  // b.first
   4e3bc:	sub	x7, x1, x0
   4e3c0:	ldr	w2, [x19, #192]
   4e3c4:	cmp	w2, #0x0
   4e3c8:	cset	w3, ne  // ne = any
   4e3cc:	cmp	x0, x1
   4e3d0:	csel	x0, x0, x1, ls  // ls = plast
   4e3d4:	str	x0, [sp]
   4e3d8:	mov	w6, w3
   4e3dc:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   4e3e0:	add	x2, x2, #0xe18
   4e3e4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e3e8:	add	x1, x1, #0x3a8
   4e3ec:	mov	x0, x20
   4e3f0:	bl	5420 <Perl_croak@plt>
   4e3f4:	ldr	x5, [x19, #8]
   4e3f8:	sub	x4, x1, x5
   4e3fc:	mov	x7, #0x0                   	// #0
   4e400:	b	4e3c0 <my_regprop@@Base+0x140fc>
   4e404:	ldr	x6, [x19, #48]
   4e408:	ldr	x5, [x19, #56]
   4e40c:	sub	w5, w5, w6
   4e410:	mov	w3, #0x35bc                	// #13756
   4e414:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e418:	add	x2, x2, #0xfb8
   4e41c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e420:	add	x1, x1, #0x870
   4e424:	mov	x0, x20
   4e428:	bl	5420 <Perl_croak@plt>
   4e42c:	ldr	x5, [x19, #8]
   4e430:	sub	x4, x1, x5
   4e434:	mov	x7, #0x0                   	// #0
   4e438:	b	4e0c4 <my_regprop@@Base+0x13e00>
   4e43c:	ldr	x6, [x19, #48]
   4e440:	ldr	x5, [x19, #56]
   4e444:	sub	w5, w5, w6
   4e448:	mov	w3, #0x35bf                	// #13759
   4e44c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e450:	add	x2, x2, #0xfb8
   4e454:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e458:	add	x1, x1, #0x870
   4e45c:	mov	x0, x20
   4e460:	bl	5420 <Perl_croak@plt>
   4e464:	ldr	x1, [x19, #24]
   4e468:	cbz	x1, 4e478 <my_regprop@@Base+0x141b4>
   4e46c:	mov	w2, #0xb                   	// #11
   4e470:	mov	x0, x20
   4e474:	bl	54b0 <Perl_save_pushptr@plt>
   4e478:	ldr	x1, [x19, #160]
   4e47c:	cbz	x1, 4e48c <my_regprop@@Base+0x141c8>
   4e480:	mov	w2, #0xa                   	// #10
   4e484:	mov	x0, x20
   4e488:	bl	54b0 <Perl_save_pushptr@plt>
   4e48c:	ldr	x1, [x19, #168]
   4e490:	cbz	x1, 4e4a0 <my_regprop@@Base+0x141dc>
   4e494:	mov	w2, #0xa                   	// #10
   4e498:	mov	x0, x20
   4e49c:	bl	54b0 <Perl_save_pushptr@plt>
   4e4a0:	ldr	x0, [x19, #64]
   4e4a4:	ldr	x1, [x19, #72]
   4e4a8:	sub	x1, x0, x1
   4e4ac:	ldr	x0, [x19, #80]
   4e4b0:	add	x0, x0, x1
   4e4b4:	ldr	x1, [x19, #16]
   4e4b8:	cmp	x0, x1
   4e4bc:	b.hi	4e504 <my_regprop@@Base+0x14240>  // b.pmore
   4e4c0:	ldr	x5, [x19, #8]
   4e4c4:	subs	x4, x0, x5
   4e4c8:	b.mi	4e514 <my_regprop@@Base+0x14250>  // b.first
   4e4cc:	sub	x7, x1, x0
   4e4d0:	ldr	w2, [x19, #192]
   4e4d4:	cmp	w2, #0x0
   4e4d8:	cset	w3, ne  // ne = any
   4e4dc:	cmp	x0, x1
   4e4e0:	csel	x0, x0, x1, ls  // ls = plast
   4e4e4:	str	x0, [sp]
   4e4e8:	mov	w6, w3
   4e4ec:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e4f0:	add	x2, x2, #0x480
   4e4f4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e4f8:	add	x1, x1, #0x3a8
   4e4fc:	mov	x0, x20
   4e500:	bl	5420 <Perl_croak@plt>
   4e504:	ldr	x5, [x19, #8]
   4e508:	sub	x4, x1, x5
   4e50c:	mov	x7, #0x0                   	// #0
   4e510:	b	4e4d0 <my_regprop@@Base+0x1420c>
   4e514:	ldr	x6, [x19, #48]
   4e518:	ldr	x5, [x19, #56]
   4e51c:	sub	w5, w5, w6
   4e520:	mov	w3, #0x35c5                	// #13765
   4e524:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e528:	add	x2, x2, #0xfb8
   4e52c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e530:	add	x1, x1, #0x870
   4e534:	mov	x0, x20
   4e538:	bl	5420 <Perl_croak@plt>
   4e53c:	bl	26640 <my_regexec@@Base+0x314c>
   4e540:	mov	w3, w0
   4e544:	cmp	w0, #0x9
   4e548:	b.le	4e570 <my_regprop@@Base+0x142ac>
   4e54c:	ldr	w0, [x19, #144]
   4e550:	cmp	w3, w0
   4e554:	b.lt	4e570 <my_regprop@@Base+0x142ac>  // b.tstop
   4e558:	ldr	x0, [x19, #64]
   4e55c:	ldrb	w0, [x0]
   4e560:	sub	w0, w0, #0x38
   4e564:	and	w0, w0, #0xff
   4e568:	cmp	w0, #0x1
   4e56c:	b.hi	4e650 <my_regprop@@Base+0x1438c>  // b.pmore
   4e570:	ldr	x4, [x19, #64]
   4e574:	ldrb	w0, [x4]
   4e578:	sub	w0, w0, #0x30
   4e57c:	mov	w22, #0x0                   	// #0
   4e580:	cmp	w0, #0x9
   4e584:	b.hi	4e698 <my_regprop@@Base+0x143d4>  // b.pmore
   4e588:	add	x0, x4, #0x1
   4e58c:	mov	x4, x0
   4e590:	str	x0, [x19, #64]
   4e594:	ldrb	w1, [x0], #1
   4e598:	sub	w2, w1, #0x30
   4e59c:	cmp	w2, #0x9
   4e5a0:	b.ls	4e58c <my_regprop@@Base+0x142c8>  // b.plast
   4e5a4:	cbz	w22, 4e698 <my_regprop@@Base+0x143d4>
   4e5a8:	cmp	w1, #0x7d
   4e5ac:	b.eq	4e690 <my_regprop@@Base+0x143cc>  // b.none
   4e5b0:	ldr	x1, [x19, #24]
   4e5b4:	cbz	x1, 4e5c4 <my_regprop@@Base+0x14300>
   4e5b8:	mov	w2, #0xb                   	// #11
   4e5bc:	mov	x0, x20
   4e5c0:	bl	54b0 <Perl_save_pushptr@plt>
   4e5c4:	ldr	x1, [x19, #160]
   4e5c8:	cbz	x1, 4e5d8 <my_regprop@@Base+0x14314>
   4e5cc:	mov	w2, #0xa                   	// #10
   4e5d0:	mov	x0, x20
   4e5d4:	bl	54b0 <Perl_save_pushptr@plt>
   4e5d8:	ldr	x1, [x19, #168]
   4e5dc:	cbz	x1, 4e5ec <my_regprop@@Base+0x14328>
   4e5e0:	mov	w2, #0xa                   	// #10
   4e5e4:	mov	x0, x20
   4e5e8:	bl	54b0 <Perl_save_pushptr@plt>
   4e5ec:	ldr	x0, [x19, #64]
   4e5f0:	ldr	x1, [x19, #72]
   4e5f4:	sub	x1, x0, x1
   4e5f8:	ldr	x0, [x19, #80]
   4e5fc:	add	x0, x0, x1
   4e600:	ldr	x1, [x19, #16]
   4e604:	cmp	x0, x1
   4e608:	b.hi	4e658 <my_regprop@@Base+0x14394>  // b.pmore
   4e60c:	ldr	x5, [x19, #8]
   4e610:	subs	x4, x0, x5
   4e614:	b.mi	4e668 <my_regprop@@Base+0x143a4>  // b.first
   4e618:	sub	x7, x1, x0
   4e61c:	ldr	w2, [x19, #192]
   4e620:	cmp	w2, #0x0
   4e624:	cset	w3, ne  // ne = any
   4e628:	cmp	x0, x1
   4e62c:	csel	x0, x0, x1, ls  // ls = plast
   4e630:	str	x0, [sp]
   4e634:	mov	w6, w3
   4e638:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e63c:	add	x2, x2, #0x4b0
   4e640:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e644:	add	x1, x1, #0x3a8
   4e648:	mov	x0, x20
   4e64c:	bl	5420 <Perl_croak@plt>
   4e650:	str	x21, [x19, #64]
   4e654:	b	4e9b4 <my_regprop@@Base+0x146f0>
   4e658:	ldr	x5, [x19, #8]
   4e65c:	sub	x4, x1, x5
   4e660:	mov	x7, #0x0                   	// #0
   4e664:	b	4e61c <my_regprop@@Base+0x14358>
   4e668:	ldr	x6, [x19, #48]
   4e66c:	ldr	x5, [x19, #56]
   4e670:	sub	w5, w5, w6
   4e674:	mov	w3, #0x35ed                	// #13805
   4e678:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e67c:	add	x2, x2, #0xfb8
   4e680:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e684:	add	x1, x1, #0x870
   4e688:	mov	x0, x20
   4e68c:	bl	5420 <Perl_croak@plt>
   4e690:	add	x4, x4, #0x1
   4e694:	str	x4, [x19, #64]
   4e698:	ldr	w0, [x19, #144]
   4e69c:	cmp	w0, w3
   4e6a0:	b.gt	4e798 <my_regprop@@Base+0x144d4>
   4e6a4:	ldr	w0, [x19, #148]
   4e6a8:	cmp	w0, #0x0
   4e6ac:	b.le	4e790 <my_regprop@@Base+0x144cc>
   4e6b0:	cmp	w0, w3
   4e6b4:	b.gt	4e798 <my_regprop@@Base+0x144d4>
   4e6b8:	ldr	x1, [x19, #24]
   4e6bc:	cbz	x1, 4e6cc <my_regprop@@Base+0x14408>
   4e6c0:	mov	w2, #0xb                   	// #11
   4e6c4:	mov	x0, x20
   4e6c8:	bl	54b0 <Perl_save_pushptr@plt>
   4e6cc:	ldr	x1, [x19, #160]
   4e6d0:	cbz	x1, 4e6e0 <my_regprop@@Base+0x1441c>
   4e6d4:	mov	w2, #0xa                   	// #10
   4e6d8:	mov	x0, x20
   4e6dc:	bl	54b0 <Perl_save_pushptr@plt>
   4e6e0:	ldr	x1, [x19, #168]
   4e6e4:	cbz	x1, 4e6f4 <my_regprop@@Base+0x14430>
   4e6e8:	mov	w2, #0xa                   	// #10
   4e6ec:	mov	x0, x20
   4e6f0:	bl	54b0 <Perl_save_pushptr@plt>
   4e6f4:	ldr	x0, [x19, #64]
   4e6f8:	ldr	x1, [x19, #72]
   4e6fc:	sub	x1, x0, x1
   4e700:	ldr	x0, [x19, #80]
   4e704:	add	x0, x0, x1
   4e708:	ldr	x1, [x19, #16]
   4e70c:	cmp	x0, x1
   4e710:	b.hi	4e758 <my_regprop@@Base+0x14494>  // b.pmore
   4e714:	ldr	x5, [x19, #8]
   4e718:	subs	x4, x0, x5
   4e71c:	b.mi	4e768 <my_regprop@@Base+0x144a4>  // b.first
   4e720:	sub	x7, x1, x0
   4e724:	ldr	w2, [x19, #192]
   4e728:	cmp	w2, #0x0
   4e72c:	cset	w3, ne  // ne = any
   4e730:	cmp	x0, x1
   4e734:	csel	x0, x0, x1, ls  // ls = plast
   4e738:	str	x0, [sp]
   4e73c:	mov	w6, w3
   4e740:	adrp	x2, 79000 <boot_re@@Base+0x1741c>
   4e744:	add	x2, x2, #0xe18
   4e748:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4e74c:	add	x1, x1, #0x3a8
   4e750:	mov	x0, x20
   4e754:	bl	5420 <Perl_croak@plt>
   4e758:	ldr	x5, [x19, #8]
   4e75c:	sub	x4, x1, x5
   4e760:	mov	x7, #0x0                   	// #0
   4e764:	b	4e724 <my_regprop@@Base+0x14460>
   4e768:	ldr	x6, [x19, #48]
   4e76c:	ldr	x5, [x19, #56]
   4e770:	sub	w5, w5, w6
   4e774:	mov	w3, #0x35f7                	// #13815
   4e778:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4e77c:	add	x2, x2, #0xfb8
   4e780:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e784:	add	x1, x1, #0x870
   4e788:	mov	x0, x20
   4e78c:	bl	5420 <Perl_croak@plt>
   4e790:	mov	w0, #0xffffffff            	// #-1
   4e794:	str	w0, [x19, #148]
   4e798:	mov	w0, #0x1                   	// #1
   4e79c:	str	w0, [x19, #116]
   4e7a0:	ldr	w0, [x19]
   4e7a4:	mov	w2, #0x3c                  	// #60
   4e7a8:	tbz	w0, #2, 4e7d8 <my_regprop@@Base+0x14514>
   4e7ac:	lsr	w1, w0, #7
   4e7b0:	ubfx	x0, x0, #7, #3
   4e7b4:	cmp	w0, #0x4
   4e7b8:	b.eq	4e7d4 <my_regprop@@Base+0x14510>  // b.none
   4e7bc:	tst	w1, #0x6
   4e7c0:	b.ne	4e8cc <my_regprop@@Base+0x14608>  // b.any
   4e7c4:	cmp	w0, #0x1
   4e7c8:	cset	w2, eq  // eq = none
   4e7cc:	add	w2, w2, #0x3d
   4e7d0:	b	4e7d8 <my_regprop@@Base+0x14514>
   4e7d4:	mov	w2, #0x40                  	// #64
   4e7d8:	mov	x1, x19
   4e7dc:	mov	x0, x20
   4e7e0:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   4e7e4:	str	x0, [sp, #288]
   4e7e8:	lsl	x2, x0, #2
   4e7ec:	ldr	x0, [x19, #96]
   4e7f0:	add	x0, x0, x2
   4e7f4:	ldrb	w0, [x0, #1]
   4e7f8:	cmp	w0, #0x3d
   4e7fc:	b.eq	4e8d4 <my_regprop@@Base+0x14610>  // b.none
   4e800:	ldr	w0, [sp, #272]
   4e804:	orr	w0, w0, #0x1
   4e808:	str	w0, [sp, #272]
   4e80c:	ldr	w0, [x20, #2368]
   4e810:	tbnz	w0, #20, 4e81c <my_regprop@@Base+0x14558>
   4e814:	ldr	x0, [sp, #296]
   4e818:	tbz	w0, #18, 4e838 <my_regprop@@Base+0x14574>
   4e81c:	ldr	x3, [x19, #48]
   4e820:	sub	w3, w21, w3
   4e824:	ubfx	x2, x2, #2, #32
   4e828:	mov	w1, #0x3610                	// #13840
   4e82c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   4e830:	add	x0, x0, #0xf30
   4e834:	bl	5010 <Perl_warn_nocontext@plt>
   4e838:	ldr	x0, [sp, #288]
   4e83c:	lsl	x2, x0, #2
   4e840:	tbnz	x0, #61, 4e8e0 <my_regprop@@Base+0x1461c>
   4e844:	ldr	x0, [x19, #40]
   4e848:	ldr	x0, [x0, #8]
   4e84c:	add	x2, x0, x2, lsl #1
   4e850:	ldr	x0, [x19, #48]
   4e854:	sub	x0, x21, x0
   4e858:	stur	w0, [x2, #-4]
   4e85c:	ldr	w0, [x20, #2368]
   4e860:	tbnz	w0, #20, 4e86c <my_regprop@@Base+0x145a8>
   4e864:	ldr	x0, [sp, #296]
   4e868:	tbz	w0, #18, 4e88c <my_regprop@@Base+0x145c8>
   4e86c:	ldr	x3, [x19, #64]
   4e870:	sub	x3, x3, x21
   4e874:	sub	w3, w3, #0x1
   4e878:	ldr	w2, [sp, #288]
   4e87c:	mov	w1, #0x3611                	// #13841
   4e880:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   4e884:	add	x0, x0, #0x8
   4e888:	bl	5010 <Perl_warn_nocontext@plt>
   4e88c:	ldr	x0, [sp, #288]
   4e890:	lsl	x2, x0, #2
   4e894:	tbnz	x0, #61, 4e8f4 <my_regprop@@Base+0x14630>
   4e898:	ldr	x0, [x19, #40]
   4e89c:	ldr	x3, [x0, #8]
   4e8a0:	lsl	x1, x2, #1
   4e8a4:	mov	x2, x19
   4e8a8:	ldr	x0, [x2, #64]!
   4e8ac:	sub	x0, x0, x21
   4e8b0:	sub	w0, w0, #0x1
   4e8b4:	str	w0, [x3, x1]
   4e8b8:	mov	w3, #0x0                   	// #0
   4e8bc:	mov	x1, x19
   4e8c0:	mov	x0, x20
   4e8c4:	bl	266ac <my_regexec@@Base+0x31b8>
   4e8c8:	b	51e60 <my_regprop@@Base+0x17b9c>
   4e8cc:	mov	w2, #0x3f                  	// #63
   4e8d0:	b	4e7d8 <my_regprop@@Base+0x14514>
   4e8d4:	mov	w0, #0x1                   	// #1
   4e8d8:	strb	w0, [x19, #384]
   4e8dc:	b	4e800 <my_regprop@@Base+0x1453c>
   4e8e0:	ubfx	x2, x2, #2, #32
   4e8e4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e8e8:	add	x1, x1, #0xf58
   4e8ec:	mov	x0, x20
   4e8f0:	bl	5420 <Perl_croak@plt>
   4e8f4:	ubfx	x2, x2, #2, #32
   4e8f8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   4e8fc:	add	x1, x1, #0x888
   4e900:	mov	x0, x20
   4e904:	bl	5420 <Perl_croak@plt>
   4e908:	cmp	x1, x0
   4e90c:	b.ls	4e918 <my_regprop@@Base+0x14654>  // b.plast
   4e910:	str	x21, [x19, #64]
   4e914:	b	4e9b4 <my_regprop@@Base+0x146f0>
   4e918:	ldr	x21, [x19, #16]
   4e91c:	ldr	x0, [x19, #8]
   4e920:	sub	x21, x21, x0
   4e924:	ldr	x1, [x19, #24]
   4e928:	cbz	x1, 4e938 <my_regprop@@Base+0x14674>
   4e92c:	mov	w2, #0xb                   	// #11
   4e930:	mov	x0, x20
   4e934:	bl	54b0 <Perl_save_pushptr@plt>
   4e938:	ldr	x1, [x19, #160]
   4e93c:	cbz	x1, 4e94c <my_regprop@@Base+0x14688>
   4e940:	mov	w2, #0xa                   	// #10
   4e944:	mov	x0, x20
   4e948:	bl	54b0 <Perl_save_pushptr@plt>
   4e94c:	ldr	x1, [x19, #168]
   4e950:	cbz	x1, 4e960 <my_regprop@@Base+0x1469c>
   4e954:	mov	w2, #0xa                   	// #10
   4e958:	mov	x0, x20
   4e95c:	bl	54b0 <Perl_save_pushptr@plt>
   4e960:	cmp	x21, #0x7f
   4e964:	b.le	4e9a0 <my_regprop@@Base+0x146dc>
   4e968:	mov	x21, #0x75                  	// #117
   4e96c:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4e970:	add	x6, x6, #0xfe0
   4e974:	ldr	w0, [x19, #192]
   4e978:	cmp	w0, #0x0
   4e97c:	ldr	x5, [x19, #8]
   4e980:	mov	x4, x21
   4e984:	cset	w3, ne  // ne = any
   4e988:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4e98c:	add	x2, x2, #0x4d0
   4e990:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4e994:	add	x1, x1, #0x50
   4e998:	mov	x0, x20
   4e99c:	bl	5420 <Perl_croak@plt>
   4e9a0:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4e9a4:	add	x6, x6, #0x20
   4e9a8:	b	4e974 <my_regprop@@Base+0x146b0>
   4e9ac:	ldr	w0, [x19]
   4e9b0:	tbnz	w0, #3, 4eb58 <my_regprop@@Base+0x14894>
   4e9b4:	str	xzr, [sp, #304]
   4e9b8:	ldr	w0, [x19]
   4e9bc:	mov	w1, #0x0                   	// #0
   4e9c0:	tbz	w0, #2, 4e9d0 <my_regprop@@Base+0x1470c>
   4e9c4:	lsr	w0, w0, #7
   4e9c8:	tst	w0, #0x6
   4e9cc:	cset	w1, eq  // eq = none
   4e9d0:	str	w1, [sp, #228]
   4e9d4:	adrp	x4, 7a000 <boot_re@@Base+0x1841c>
   4e9d8:	add	x4, x4, #0xe80
   4e9dc:	mov	x3, #0x40                  	// #64
   4e9e0:	mov	w2, #0x23                  	// #35
   4e9e4:	mov	x1, x19
   4e9e8:	mov	x0, x20
   4e9ec:	bl	2a028 <my_regexec@@Base+0x6b34>
   4e9f0:	str	x0, [sp, #288]
   4e9f4:	ldr	x1, [x19, #96]
   4e9f8:	add	x0, x1, x0, lsl #2
   4e9fc:	mov	w1, #0x23                  	// #35
   4ea00:	strb	w1, [x0, #1]
   4ea04:	ldr	x1, [x19, #96]
   4ea08:	ldr	x0, [sp, #288]
   4ea0c:	add	x0, x1, x0, lsl #2
   4ea10:	strh	wzr, [x0, #2]
   4ea14:	ldr	x0, [x19, #104]
   4ea18:	add	x0, x0, #0x1
   4ea1c:	str	x0, [x19, #104]
   4ea20:	ldr	x0, [x19, #96]
   4ea24:	ldr	x1, [sp, #288]
   4ea28:	add	x0, x0, x1, lsl #2
   4ea2c:	str	x0, [sp, #264]
   4ea30:	add	x0, x0, #0x4
   4ea34:	str	x0, [sp, #184]
   4ea38:	str	wzr, [sp, #236]
   4ea3c:	str	wzr, [sp, #232]
   4ea40:	str	wzr, [sp, #224]
   4ea44:	mov	w0, #0x2                   	// #2
   4ea48:	str	w0, [sp, #212]
   4ea4c:	mov	x24, #0x0                   	// #0
   4ea50:	mov	w0, #0x23                  	// #35
   4ea54:	str	w0, [sp, #168]
   4ea58:	mov	w0, #0xf2                  	// #242
   4ea5c:	str	w0, [sp, #192]
   4ea60:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4ea64:	ldr	x0, [x0, #4024]
   4ea68:	str	x0, [sp, #256]
   4ea6c:	add	x0, sp, #0x150
   4ea70:	str	x0, [sp, #240]
   4ea74:	ldr	w0, [x19, #192]
   4ea78:	cbz	w0, 4ea94 <my_regprop@@Base+0x147d0>
   4ea7c:	ldr	x0, [x19, #64]
   4ea80:	ldrb	w0, [x0]
   4ea84:	sub	w0, w0, #0x80
   4ea88:	and	w0, w0, #0xff
   4ea8c:	cmp	w0, #0x41
   4ea90:	b.ls	4eb7c <my_regprop@@Base+0x148b8>  // b.plast
   4ea94:	ldr	x0, [x19, #64]
   4ea98:	str	x0, [sp, #312]
   4ea9c:	ldrb	w0, [sp, #192]
   4eaa0:	ands	x0, x0, #0xff
   4eaa4:	str	x0, [sp, #200]
   4eaa8:	b.eq	51dd4 <my_regprop@@Base+0x17b10>  // b.none
   4eaac:	ldr	x22, [sp, #184]
   4eab0:	mov	x26, #0x0                   	// #0
   4eab4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4eab8:	ldr	x0, [x0, #4064]
   4eabc:	str	x0, [sp, #216]
   4eac0:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4eac4:	add	x0, x0, #0x688
   4eac8:	str	x0, [sp, #248]
   4eacc:	str	x22, [sp, #176]
   4ead0:	ldr	x1, [x19, #56]
   4ead4:	ldr	x25, [sp, #312]
   4ead8:	cmp	x25, x1
   4eadc:	b.cs	50258 <my_regprop@@Base+0x15f94>  // b.hs, b.nlast
   4eae0:	mov	x0, #0x1                   	// #1
   4eae4:	str	x0, [sp, #320]
   4eae8:	ldr	w0, [x19]
   4eaec:	tbz	w0, #3, 4eb18 <my_regprop@@Base+0x14854>
   4eaf0:	ldrb	w0, [x25]
   4eaf4:	sub	w2, w0, #0x9
   4eaf8:	cmp	w0, #0x20
   4eafc:	ccmp	w2, #0x4, #0x0, ne  // ne = any
   4eb00:	b.ls	4ec10 <my_regprop@@Base+0x1494c>  // b.plast
   4eb04:	ldr	w2, [x19, #192]
   4eb08:	cbnz	w2, 4eba0 <my_regprop@@Base+0x148dc>
   4eb0c:	cmp	w0, #0x85
   4eb10:	cset	w0, ne  // ne = any
   4eb14:	cbz	w0, 4ec10 <my_regprop@@Base+0x1494c>
   4eb18:	ldrb	w0, [x25]
   4eb1c:	cmp	w0, #0x5d
   4eb20:	b.eq	4eb44 <my_regprop@@Base+0x14880>  // b.none
   4eb24:	b.ls	4ec34 <my_regprop@@Base+0x14970>  // b.plast
   4eb28:	cmp	w0, #0x7b
   4eb2c:	b.eq	4f7c8 <my_regprop@@Base+0x15504>  // b.none
   4eb30:	b.ls	4ec8c <my_regprop@@Base+0x149c8>  // b.plast
   4eb34:	cmp	w0, #0x7c
   4eb38:	b.eq	4fdf0 <my_regprop@@Base+0x15b2c>  // b.none
   4eb3c:	cmp	w0, #0x7d
   4eb40:	b.ne	4ec94 <my_regprop@@Base+0x149d0>  // b.any
   4eb44:	ldr	x0, [x19, #64]
   4eb48:	cmp	x25, x0
   4eb4c:	b.hi	4fabc <my_regprop@@Base+0x157f8>  // b.pmore
   4eb50:	ldr	x0, [sp, #312]
   4eb54:	b	4eca8 <my_regprop@@Base+0x149e4>
   4eb58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4eb5c:	add	x3, x3, #0xc10
   4eb60:	add	x3, x3, #0x928
   4eb64:	mov	w2, #0x3626                	// #13862
   4eb68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4eb6c:	add	x1, x1, #0xfb8
   4eb70:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4eb74:	add	x0, x0, #0x4e0
   4eb78:	bl	58e0 <__assert_fail@plt>
   4eb7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4eb80:	add	x3, x3, #0xc10
   4eb84:	add	x3, x3, #0x928
   4eb88:	mov	w2, #0x3689                	// #13961
   4eb8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4eb90:	add	x1, x1, #0xfb8
   4eb94:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4eb98:	add	x0, x0, #0x508
   4eb9c:	bl	58e0 <__assert_fail@plt>
   4eba0:	sub	x2, x1, x25
   4eba4:	ldr	x3, [sp, #216]
   4eba8:	ldrb	w3, [x3, w0, sxtw]
   4ebac:	cmp	x2, x3
   4ebb0:	b.lt	4eb18 <my_regprop@@Base+0x14854>  // b.tstop
   4ebb4:	cmp	w0, #0xc2
   4ebb8:	b.eq	4ebd0 <my_regprop@@Base+0x1490c>  // b.none
   4ebbc:	mov	w2, #0x1                   	// #1
   4ebc0:	cmp	w0, #0xe2
   4ebc4:	b.eq	4ebe0 <my_regprop@@Base+0x1491c>  // b.none
   4ebc8:	mov	w0, w2
   4ebcc:	b	4eb14 <my_regprop@@Base+0x14850>
   4ebd0:	ldrb	w0, [x25, #1]
   4ebd4:	cmp	w0, #0x85
   4ebd8:	cset	w0, ne  // ne = any
   4ebdc:	b	4eb14 <my_regprop@@Base+0x14850>
   4ebe0:	ldrb	w0, [x25, #1]
   4ebe4:	cmp	w0, #0x80
   4ebe8:	b.ne	4ebc8 <my_regprop@@Base+0x14904>  // b.any
   4ebec:	ldrb	w0, [x25, #2]
   4ebf0:	sub	w3, w0, #0x8e
   4ebf4:	mov	w2, #0x0                   	// #0
   4ebf8:	cmp	w3, #0x1
   4ebfc:	b.ls	4ebc8 <my_regprop@@Base+0x14904>  // b.plast
   4ec00:	sub	w0, w0, #0xa8
   4ec04:	cmp	w0, #0x1
   4ec08:	cset	w2, hi  // hi = pmore
   4ec0c:	b	4ebc8 <my_regprop@@Base+0x14904>
   4ec10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4ec14:	add	x3, x3, #0xc10
   4ec18:	add	x3, x3, #0x928
   4ec1c:	mov	w2, #0x369b                	// #13979
   4ec20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   4ec24:	add	x1, x1, #0xfb8
   4ec28:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   4ec2c:	add	x0, x0, #0x560
   4ec30:	bl	58e0 <__assert_fail@plt>
   4ec34:	sub	w0, w0, #0x24
   4ec38:	and	w3, w0, #0xff
   4ec3c:	cmp	w3, #0x38
   4ec40:	b.hi	4ec94 <my_regprop@@Base+0x149d0>  // b.pmore
   4ec44:	mov	x0, #0x1                   	// #1
   4ec48:	lsl	x0, x0, x3
   4ec4c:	mov	x24, #0x431                 	// #1073
   4ec50:	movk	x24, #0x80, lsl #48
   4ec54:	ands	x24, x0, x24
   4ec58:	b.ne	4fdf0 <my_regprop@@Base+0x15b2c>  // b.any
   4ec5c:	tbz	x0, #56, 4ec94 <my_regprop@@Base+0x149d0>
   4ec60:	add	x0, x25, #0x1
   4ec64:	str	x0, [sp, #312]
   4ec68:	ldrb	w2, [x25, #1]
   4ec6c:	cmp	w2, #0x7a
   4ec70:	b.hi	4f6f0 <my_regprop@@Base+0x1542c>  // b.pmore
   4ec74:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   4ec78:	add	x3, x3, #0xb14
   4ec7c:	ldrh	w3, [x3, w2, uxtw #1]
   4ec80:	adr	x4, 4ec8c <my_regprop@@Base+0x149c8>
   4ec84:	add	x3, x4, w3, sxth #2
   4ec88:	br	x3
   4ec8c:	cmp	w0, #0x5e
   4ec90:	b.eq	4fdf0 <my_regprop@@Base+0x15b2c>  // b.none
   4ec94:	ldr	x0, [sp, #312]
   4ec98:	ldrsb	w1, [x0]
   4ec9c:	tbz	w1, #31, 4eca8 <my_regprop@@Base+0x149e4>
   4eca0:	ldr	w1, [x19, #192]
   4eca4:	cbnz	w1, 4fc78 <my_regprop@@Base+0x159b4>
   4eca8:	add	x1, x0, #0x1
   4ecac:	str	x1, [sp, #312]
   4ecb0:	ldrb	w0, [x0]
   4ecb4:	str	x0, [sp, #304]
   4ecb8:	mov	w3, #0x0                   	// #0
   4ecbc:	add	x2, sp, #0x138
   4ecc0:	mov	x1, x19
   4ecc4:	mov	x0, x20
   4ecc8:	bl	266ac <my_regexec@@Base+0x31b8>
   4eccc:	ldr	x0, [sp, #312]
   4ecd0:	ldr	x1, [x19, #56]
   4ecd4:	cmp	x1, x0
   4ecd8:	b.ls	4ecfc <my_regprop@@Base+0x14a38>  // b.plast
   4ecdc:	ldrb	w2, [x0]
   4ece0:	sub	w1, w2, #0x2a
   4ece4:	and	w1, w1, #0xff
   4ece8:	cmp	w2, #0x3f
   4ecec:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   4ecf0:	b.ls	4fdd4 <my_regprop@@Base+0x15b10>  // b.plast
   4ecf4:	cmp	w2, #0x7b
   4ecf8:	b.eq	4fd5c <my_regprop@@Base+0x15a98>  // b.none
   4ecfc:	cmp	x26, #0x0
   4ed00:	cset	w23, ne  // ne = any
   4ed04:	mov	w22, #0x0                   	// #0
   4ed08:	ldr	w0, [x19]
   4ed0c:	tbnz	w0, #2, 4fea8 <my_regprop@@Base+0x15be4>
   4ed10:	ldr	x2, [sp, #304]
   4ed14:	cmp	x2, #0x7f
   4ed18:	b.ls	4ed24 <my_regprop@@Base+0x14a60>  // b.plast
   4ed1c:	ldr	w0, [x19, #192]
   4ed20:	cbnz	w0, 4fe6c <my_regprop@@Base+0x15ba8>
   4ed24:	ldr	x0, [sp, #176]
   4ed28:	strb	w2, [x0], #1
   4ed2c:	str	x0, [sp, #176]
   4ed30:	ldr	x0, [sp, #320]
   4ed34:	add	x26, x26, x0
   4ed38:	cbnz	w22, 4fdf0 <my_regprop@@Base+0x15b2c>
   4ed3c:	ldr	x0, [sp, #200]
   4ed40:	cmp	x26, x0
   4ed44:	b.cs	5024c <my_regprop@@Base+0x15f88>  // b.hs, b.nlast
   4ed48:	mov	x24, x25
   4ed4c:	b	4ead0 <my_regprop@@Base+0x1480c>
   4ed50:	str	x25, [sp, #312]
   4ed54:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   4ed58:	mov	x0, #0xa                   	// #10
   4ed5c:	str	x0, [sp, #304]
   4ed60:	add	x0, x25, #0x2
   4ed64:	str	x0, [sp, #312]
   4ed68:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4ed6c:	add	x0, x25, #0x2
   4ed70:	str	x0, [x19, #64]
   4ed74:	mov	w7, w28
   4ed78:	ldrb	w6, [x19, #385]
   4ed7c:	add	x5, sp, #0x110
   4ed80:	mov	x4, #0x0                   	// #0
   4ed84:	add	x3, sp, #0x130
   4ed88:	mov	x2, #0x0                   	// #0
   4ed8c:	mov	x1, x19
   4ed90:	mov	x0, x20
   4ed94:	bl	42288 <my_regprop@@Base+0x7fc4>
   4ed98:	and	w0, w0, #0xff
   4ed9c:	cbz	w0, 4edcc <my_regprop@@Base+0x14b08>
   4eda0:	ldr	x0, [x19, #64]
   4eda4:	str	x0, [sp, #312]
   4eda8:	str	x21, [x19, #64]
   4edac:	ldr	w0, [sp, #168]
   4edb0:	cmp	w0, #0x25
   4edb4:	b.ne	4fcf4 <my_regprop@@Base+0x15a30>  // b.any
   4edb8:	ldr	w0, [sp, #228]
   4edbc:	cbz	w0, 4ee78 <my_regprop@@Base+0x14bb4>
   4edc0:	mov	w0, #0x27                  	// #39
   4edc4:	str	w0, [sp, #168]
   4edc8:	b	4fcf4 <my_regprop@@Base+0x15a30>
   4edcc:	ldr	w0, [sp, #272]
   4edd0:	tbnz	w0, #6, 4ede4 <my_regprop@@Base+0x14b20>
   4edd4:	tbnz	w0, #5, 4cdcc <my_regprop@@Base+0x12b08>
   4edd8:	str	x25, [sp, #312]
   4eddc:	str	x25, [x19, #64]
   4ede0:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   4ede4:	ldr	x21, [x19, #16]
   4ede8:	ldr	x0, [x19, #8]
   4edec:	sub	x21, x21, x0
   4edf0:	ldr	x1, [x19, #24]
   4edf4:	cbz	x1, 4ee04 <my_regprop@@Base+0x14b40>
   4edf8:	mov	w2, #0xb                   	// #11
   4edfc:	mov	x0, x20
   4ee00:	bl	54b0 <Perl_save_pushptr@plt>
   4ee04:	ldr	x1, [x19, #160]
   4ee08:	cbz	x1, 4ee18 <my_regprop@@Base+0x14b54>
   4ee0c:	mov	w2, #0xa                   	// #10
   4ee10:	mov	x0, x20
   4ee14:	bl	54b0 <Perl_save_pushptr@plt>
   4ee18:	ldr	x1, [x19, #168]
   4ee1c:	cbz	x1, 4ee2c <my_regprop@@Base+0x14b68>
   4ee20:	mov	w2, #0xa                   	// #10
   4ee24:	mov	x0, x20
   4ee28:	bl	54b0 <Perl_save_pushptr@plt>
   4ee2c:	cmp	x21, #0x7f
   4ee30:	b.le	4ee6c <my_regprop@@Base+0x14ba8>
   4ee34:	mov	x21, #0x75                  	// #117
   4ee38:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4ee3c:	add	x6, x6, #0xfe0
   4ee40:	ldr	w0, [x19, #192]
   4ee44:	cmp	w0, #0x0
   4ee48:	ldr	x5, [x19, #8]
   4ee4c:	mov	x4, x21
   4ee50:	cset	w3, ne  // ne = any
   4ee54:	adrp	x2, 7a000 <boot_re@@Base+0x1841c>
   4ee58:	add	x2, x2, #0x760
   4ee5c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4ee60:	add	x1, x1, #0x50
   4ee64:	mov	x0, x20
   4ee68:	bl	5420 <Perl_croak@plt>
   4ee6c:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4ee70:	add	x6, x6, #0x20
   4ee74:	b	4ee40 <my_regprop@@Base+0x14b7c>
   4ee78:	mov	x24, x25
   4ee7c:	mov	w0, #0x27                  	// #39
   4ee80:	str	w0, [sp, #168]
   4ee84:	b	4ea74 <my_regprop@@Base+0x147b0>
   4ee88:	mov	x0, #0xd                   	// #13
   4ee8c:	str	x0, [sp, #304]
   4ee90:	add	x0, x25, #0x2
   4ee94:	str	x0, [sp, #312]
   4ee98:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4ee9c:	mov	x0, #0x9                   	// #9
   4eea0:	str	x0, [sp, #304]
   4eea4:	add	x0, x25, #0x2
   4eea8:	str	x0, [sp, #312]
   4eeac:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4eeb0:	mov	x0, #0xc                   	// #12
   4eeb4:	str	x0, [sp, #304]
   4eeb8:	add	x0, x25, #0x2
   4eebc:	str	x0, [sp, #312]
   4eec0:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4eec4:	mov	x0, #0x1b                  	// #27
   4eec8:	str	x0, [sp, #304]
   4eecc:	add	x0, x25, #0x2
   4eed0:	str	x0, [sp, #312]
   4eed4:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4eed8:	mov	x0, #0x7                   	// #7
   4eedc:	str	x0, [sp, #304]
   4eee0:	add	x0, x25, #0x2
   4eee4:	str	x0, [sp, #312]
   4eee8:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4eeec:	ldr	x2, [x19, #72]
   4eef0:	mov	w5, #0x0                   	// #0
   4eef4:	cbz	x2, 4ef18 <my_regprop@@Base+0x14c54>
   4eef8:	sub	x0, x0, x2
   4eefc:	ldr	x2, [x19, #80]
   4ef00:	add	x0, x2, x0
   4ef04:	ldr	x2, [x19, #8]
   4ef08:	sub	x0, x0, x2
   4ef0c:	ldr	x2, [x19, #136]
   4ef10:	cmp	x0, x2
   4ef14:	cset	w5, gt
   4ef18:	ldr	w0, [x19, #192]
   4ef1c:	cmp	w0, #0x0
   4ef20:	cset	w0, ne  // ne = any
   4ef24:	strb	w0, [sp]
   4ef28:	mov	w7, #0x1                   	// #1
   4ef2c:	ldrb	w6, [x19, #385]
   4ef30:	ldr	x4, [sp, #240]
   4ef34:	add	x3, sp, #0x148
   4ef38:	mov	x2, x1
   4ef3c:	add	x1, sp, #0x138
   4ef40:	mov	x0, x20
   4ef44:	bl	52c0 <Perl_grok_bslash_o@plt>
   4ef48:	and	w0, w0, #0xff
   4ef4c:	cbz	w0, 4efa8 <my_regprop@@Base+0x14ce4>
   4ef50:	ldr	x1, [x19, #72]
   4ef54:	cbz	x1, 4ef9c <my_regprop@@Base+0x14cd8>
   4ef58:	ldr	x0, [sp, #312]
   4ef5c:	sub	x0, x0, #0x1
   4ef60:	sub	x0, x0, x1
   4ef64:	ldr	x1, [x19, #80]
   4ef68:	add	x0, x1, x0
   4ef6c:	ldr	x2, [x19, #8]
   4ef70:	sub	x3, x0, x2
   4ef74:	ldr	x1, [x19, #136]
   4ef78:	cmp	x3, x1
   4ef7c:	b.le	4ef9c <my_regprop@@Base+0x14cd8>
   4ef80:	ldr	x1, [x19, #16]
   4ef84:	cmp	x1, x0
   4ef88:	csel	x0, x1, x0, ls  // ls = plast
   4ef8c:	cmp	x2, x0
   4ef90:	csel	x0, x2, x0, hi  // hi = pmore
   4ef94:	sub	x0, x0, x2
   4ef98:	str	x0, [x19, #136]
   4ef9c:	ldr	x0, [sp, #328]
   4efa0:	str	x0, [sp, #304]
   4efa4:	b	4fcf4 <my_regprop@@Base+0x15a30>
   4efa8:	ldr	x0, [sp, #312]
   4efac:	str	x0, [x19, #64]
   4efb0:	ldr	x1, [x19, #24]
   4efb4:	cbz	x1, 4efc4 <my_regprop@@Base+0x14d00>
   4efb8:	mov	w2, #0xb                   	// #11
   4efbc:	mov	x0, x20
   4efc0:	bl	54b0 <Perl_save_pushptr@plt>
   4efc4:	ldr	x1, [x19, #160]
   4efc8:	cbz	x1, 4efd8 <my_regprop@@Base+0x14d14>
   4efcc:	mov	w2, #0xa                   	// #10
   4efd0:	mov	x0, x20
   4efd4:	bl	54b0 <Perl_save_pushptr@plt>
   4efd8:	ldr	x1, [x19, #168]
   4efdc:	cbz	x1, 4efec <my_regprop@@Base+0x14d28>
   4efe0:	mov	w2, #0xa                   	// #10
   4efe4:	mov	x0, x20
   4efe8:	bl	54b0 <Perl_save_pushptr@plt>
   4efec:	ldr	x0, [x19, #64]
   4eff0:	ldr	x1, [x19, #72]
   4eff4:	sub	x1, x0, x1
   4eff8:	ldr	x0, [x19, #80]
   4effc:	add	x0, x0, x1
   4f000:	ldr	x1, [x19, #16]
   4f004:	cmp	x0, x1
   4f008:	b.hi	4f050 <my_regprop@@Base+0x14d8c>  // b.pmore
   4f00c:	ldr	x5, [x19, #8]
   4f010:	subs	x4, x0, x5
   4f014:	b.mi	4f05c <my_regprop@@Base+0x14d98>  // b.first
   4f018:	sub	x24, x1, x0
   4f01c:	ldr	w2, [x19, #192]
   4f020:	cmp	w2, #0x0
   4f024:	cset	w3, ne  // ne = any
   4f028:	cmp	x0, x1
   4f02c:	csel	x0, x0, x1, ls  // ls = plast
   4f030:	str	x0, [sp]
   4f034:	mov	x7, x24
   4f038:	mov	w6, w3
   4f03c:	ldr	x2, [sp, #336]
   4f040:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4f044:	add	x1, x1, #0x3a8
   4f048:	mov	x0, x20
   4f04c:	bl	5420 <Perl_croak@plt>
   4f050:	ldr	x5, [x19, #8]
   4f054:	sub	x4, x1, x5
   4f058:	b	4f01c <my_regprop@@Base+0x14d58>
   4f05c:	ldr	x6, [x19, #48]
   4f060:	ldr	x5, [x19, #56]
   4f064:	sub	w5, w5, w6
   4f068:	mov	w3, #0x3723                	// #14115
   4f06c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f070:	add	x2, x2, #0xfb8
   4f074:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f078:	add	x1, x1, #0x870
   4f07c:	mov	x0, x20
   4f080:	bl	5420 <Perl_croak@plt>
   4f084:	mov	x2, #0xffffffffffffffff    	// #-1
   4f088:	str	x2, [sp, #328]
   4f08c:	ldr	x2, [x19, #72]
   4f090:	mov	w5, #0x0                   	// #0
   4f094:	cbz	x2, 4f0b8 <my_regprop@@Base+0x14df4>
   4f098:	sub	x0, x0, x2
   4f09c:	ldr	x2, [x19, #80]
   4f0a0:	add	x0, x2, x0
   4f0a4:	ldr	x2, [x19, #8]
   4f0a8:	sub	x0, x0, x2
   4f0ac:	ldr	x2, [x19, #136]
   4f0b0:	cmp	x0, x2
   4f0b4:	cset	w5, gt
   4f0b8:	ldr	w0, [x19, #192]
   4f0bc:	cmp	w0, #0x0
   4f0c0:	cset	w0, ne  // ne = any
   4f0c4:	strb	w0, [sp]
   4f0c8:	mov	w7, #0x1                   	// #1
   4f0cc:	ldrb	w6, [x19, #385]
   4f0d0:	ldr	x4, [sp, #240]
   4f0d4:	add	x3, sp, #0x148
   4f0d8:	mov	x2, x1
   4f0dc:	add	x1, sp, #0x138
   4f0e0:	mov	x0, x20
   4f0e4:	bl	5900 <Perl_grok_bslash_x@plt>
   4f0e8:	and	w0, w0, #0xff
   4f0ec:	cbz	w0, 4f148 <my_regprop@@Base+0x14e84>
   4f0f0:	ldr	x1, [x19, #72]
   4f0f4:	cbz	x1, 4f13c <my_regprop@@Base+0x14e78>
   4f0f8:	ldr	x0, [sp, #312]
   4f0fc:	sub	x0, x0, #0x1
   4f100:	sub	x0, x0, x1
   4f104:	ldr	x1, [x19, #80]
   4f108:	add	x0, x1, x0
   4f10c:	ldr	x2, [x19, #8]
   4f110:	sub	x3, x0, x2
   4f114:	ldr	x1, [x19, #136]
   4f118:	cmp	x3, x1
   4f11c:	b.le	4f13c <my_regprop@@Base+0x14e78>
   4f120:	ldr	x1, [x19, #16]
   4f124:	cmp	x1, x0
   4f128:	csel	x0, x1, x0, ls  // ls = plast
   4f12c:	cmp	x2, x0
   4f130:	csel	x0, x2, x0, hi  // hi = pmore
   4f134:	sub	x0, x0, x2
   4f138:	str	x0, [x19, #136]
   4f13c:	ldr	x0, [sp, #328]
   4f140:	str	x0, [sp, #304]
   4f144:	b	4fcf4 <my_regprop@@Base+0x15a30>
   4f148:	ldr	x0, [sp, #312]
   4f14c:	str	x0, [x19, #64]
   4f150:	ldr	x1, [x19, #24]
   4f154:	cbz	x1, 4f164 <my_regprop@@Base+0x14ea0>
   4f158:	mov	w2, #0xb                   	// #11
   4f15c:	mov	x0, x20
   4f160:	bl	54b0 <Perl_save_pushptr@plt>
   4f164:	ldr	x1, [x19, #160]
   4f168:	cbz	x1, 4f178 <my_regprop@@Base+0x14eb4>
   4f16c:	mov	w2, #0xa                   	// #10
   4f170:	mov	x0, x20
   4f174:	bl	54b0 <Perl_save_pushptr@plt>
   4f178:	ldr	x1, [x19, #168]
   4f17c:	cbz	x1, 4f18c <my_regprop@@Base+0x14ec8>
   4f180:	mov	w2, #0xa                   	// #10
   4f184:	mov	x0, x20
   4f188:	bl	54b0 <Perl_save_pushptr@plt>
   4f18c:	ldr	x0, [x19, #64]
   4f190:	ldr	x1, [x19, #72]
   4f194:	sub	x1, x0, x1
   4f198:	ldr	x0, [x19, #80]
   4f19c:	add	x0, x0, x1
   4f1a0:	ldr	x1, [x19, #16]
   4f1a4:	cmp	x0, x1
   4f1a8:	b.hi	4f1f0 <my_regprop@@Base+0x14f2c>  // b.pmore
   4f1ac:	ldr	x5, [x19, #8]
   4f1b0:	subs	x4, x0, x5
   4f1b4:	b.mi	4f1fc <my_regprop@@Base+0x14f38>  // b.first
   4f1b8:	sub	x24, x1, x0
   4f1bc:	ldr	w2, [x19, #192]
   4f1c0:	cmp	w2, #0x0
   4f1c4:	cset	w3, ne  // ne = any
   4f1c8:	cmp	x0, x1
   4f1cc:	csel	x0, x0, x1, ls  // ls = plast
   4f1d0:	str	x0, [sp]
   4f1d4:	mov	x7, x24
   4f1d8:	mov	w6, w3
   4f1dc:	ldr	x2, [sp, #336]
   4f1e0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4f1e4:	add	x1, x1, #0x3a8
   4f1e8:	mov	x0, x20
   4f1ec:	bl	5420 <Perl_croak@plt>
   4f1f0:	ldr	x5, [x19, #8]
   4f1f4:	sub	x4, x1, x5
   4f1f8:	b	4f1bc <my_regprop@@Base+0x14ef8>
   4f1fc:	ldr	x6, [x19, #48]
   4f200:	ldr	x5, [x19, #56]
   4f204:	sub	w5, w5, w6
   4f208:	mov	w3, #0x373c                	// #14140
   4f20c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f210:	add	x2, x2, #0xfb8
   4f214:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f218:	add	x1, x1, #0x870
   4f21c:	mov	x0, x20
   4f220:	bl	5420 <Perl_croak@plt>
   4f224:	add	x0, x25, #0x2
   4f228:	str	x0, [sp, #312]
   4f22c:	ldrb	w1, [x25, #2]
   4f230:	ldr	x3, [x19, #72]
   4f234:	mov	w2, #0x0                   	// #0
   4f238:	cbz	x3, 4f25c <my_regprop@@Base+0x14f98>
   4f23c:	sub	x2, x0, x3
   4f240:	ldr	x0, [x19, #80]
   4f244:	add	x0, x0, x2
   4f248:	ldr	x2, [x19, #8]
   4f24c:	sub	x0, x0, x2
   4f250:	ldr	x2, [x19, #136]
   4f254:	cmp	x0, x2
   4f258:	cset	w2, gt
   4f25c:	mov	x0, x20
   4f260:	bl	5240 <Perl_grok_bslash_c@plt>
   4f264:	and	x0, x0, #0xff
   4f268:	str	x0, [sp, #304]
   4f26c:	ldr	x1, [x19, #72]
   4f270:	cbz	x1, 4f2b4 <my_regprop@@Base+0x14ff0>
   4f274:	ldr	x0, [sp, #312]
   4f278:	sub	x1, x0, x1
   4f27c:	ldr	x0, [x19, #80]
   4f280:	add	x0, x0, x1
   4f284:	ldr	x2, [x19, #8]
   4f288:	sub	x3, x0, x2
   4f28c:	ldr	x1, [x19, #136]
   4f290:	cmp	x3, x1
   4f294:	b.le	4f2b4 <my_regprop@@Base+0x14ff0>
   4f298:	ldr	x1, [x19, #16]
   4f29c:	cmp	x1, x0
   4f2a0:	csel	x0, x1, x0, ls  // ls = plast
   4f2a4:	cmp	x2, x0
   4f2a8:	csel	x0, x2, x0, hi  // hi = pmore
   4f2ac:	sub	x0, x0, x2
   4f2b0:	str	x0, [x19, #136]
   4f2b4:	ldr	x0, [sp, #312]
   4f2b8:	add	x0, x0, #0x1
   4f2bc:	str	x0, [sp, #312]
   4f2c0:	b	4ecb8 <my_regprop@@Base+0x149f4>
   4f2c4:	str	x25, [sp, #312]
   4f2c8:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   4f2cc:	ldrb	w2, [x25, #2]
   4f2d0:	sub	w2, w2, #0x30
   4f2d4:	cmp	w2, #0x9
   4f2d8:	b.hi	4f46c <my_regprop@@Base+0x151a8>  // b.pmore
   4f2dc:	bl	26640 <my_regexec@@Base+0x314c>
   4f2e0:	ldr	w1, [x19, #144]
   4f2e4:	cmp	w0, w1
   4f2e8:	b.lt	4f46c <my_regprop@@Base+0x151a8>  // b.tstop
   4f2ec:	mov	w0, #0x4                   	// #4
   4f2f0:	str	w0, [sp, #328]
   4f2f4:	mov	x0, #0x3                   	// #3
   4f2f8:	str	x0, [sp, #336]
   4f2fc:	mov	x4, #0x0                   	// #0
   4f300:	add	x3, sp, #0x148
   4f304:	ldr	x2, [sp, #240]
   4f308:	ldr	x1, [sp, #312]
   4f30c:	mov	x0, x20
   4f310:	bl	52e0 <Perl_grok_oct@plt>
   4f314:	str	x0, [sp, #304]
   4f318:	ldr	x22, [sp, #336]
   4f31c:	ldr	x0, [sp, #312]
   4f320:	add	x23, x0, x22
   4f324:	str	x23, [sp, #312]
   4f328:	ldrb	w0, [x0, x22]
   4f32c:	sub	w0, w0, #0x30
   4f330:	cmp	w0, #0x9
   4f334:	b.hi	4fcf4 <my_regprop@@Base+0x15a30>  // b.pmore
   4f338:	mov	w1, #0x14                  	// #20
   4f33c:	mov	x0, x20
   4f340:	bl	5870 <Perl_ckwarn@plt>
   4f344:	ands	w0, w0, #0xff
   4f348:	ccmp	x22, #0x2, #0x2, ne  // ne = any
   4f34c:	b.hi	4fcf4 <my_regprop@@Base+0x15a30>  // b.pmore
   4f350:	ldr	x1, [x19, #72]
   4f354:	cbz	x1, 4f47c <my_regprop@@Base+0x151b8>
   4f358:	add	x0, x23, #0x1
   4f35c:	sub	x1, x0, x1
   4f360:	ldr	x0, [x19, #80]
   4f364:	add	x0, x0, x1
   4f368:	ldr	x1, [x19, #8]
   4f36c:	sub	x0, x0, x1
   4f370:	ldr	x1, [x19, #136]
   4f374:	cmp	x0, x1
   4f378:	b.le	4fcf4 <my_regprop@@Base+0x15a30>
   4f37c:	ldr	x0, [x20, #224]
   4f380:	cbz	x0, 4f3a8 <my_regprop@@Base+0x150e4>
   4f384:	ldr	x0, [x0, #64]
   4f388:	cmp	x0, #0x0
   4f38c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f390:	ldr	x1, [x1, #3984]
   4f394:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f398:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f39c:	ldr	x1, [x1, #3832]
   4f3a0:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f3a4:	b.ne	4f49c <my_regprop@@Base+0x151d8>  // b.any
   4f3a8:	ldr	x2, [sp, #336]
   4f3ac:	ldr	x1, [sp, #312]
   4f3b0:	mov	x0, x20
   4f3b4:	bl	292dc <my_regexec@@Base+0x5de8>
   4f3b8:	mov	x3, x0
   4f3bc:	ldr	w0, [x19, #192]
   4f3c0:	cmp	w0, #0x0
   4f3c4:	cset	w4, ne  // ne = any
   4f3c8:	ldr	x0, [sp, #312]
   4f3cc:	add	x0, x0, #0x1
   4f3d0:	ldr	x1, [x19, #72]
   4f3d4:	sub	x1, x0, x1
   4f3d8:	ldr	x0, [x19, #80]
   4f3dc:	add	x0, x0, x1
   4f3e0:	ldr	x2, [x19, #16]
   4f3e4:	cmp	x0, x2
   4f3e8:	b.ls	4f4e4 <my_regprop@@Base+0x15220>  // b.plast
   4f3ec:	ldr	x6, [x19, #8]
   4f3f0:	sub	x5, x2, x6
   4f3f4:	cmp	x0, x2
   4f3f8:	csel	x0, x0, x2, ls  // ls = plast
   4f3fc:	str	x0, [sp, #8]
   4f400:	str	x24, [sp]
   4f404:	mov	w7, w4
   4f408:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4f40c:	add	x2, x2, #0x3a8
   4f410:	mov	w1, #0x14                  	// #20
   4f414:	mov	x0, x20
   4f418:	bl	5110 <Perl_warner@plt>
   4f41c:	ldr	x0, [x19, #72]
   4f420:	cbz	x0, 4fcf4 <my_regprop@@Base+0x15a30>
   4f424:	ldr	x1, [sp, #312]
   4f428:	add	x1, x1, #0x1
   4f42c:	sub	x1, x1, x0
   4f430:	ldr	x0, [x19, #80]
   4f434:	add	x1, x0, x1
   4f438:	ldr	x2, [x19, #8]
   4f43c:	sub	x3, x1, x2
   4f440:	ldr	x0, [x19, #136]
   4f444:	cmp	x3, x0
   4f448:	b.le	4fcf4 <my_regprop@@Base+0x15a30>
   4f44c:	ldr	x0, [x19, #16]
   4f450:	cmp	x0, x1
   4f454:	csel	x0, x0, x1, ls  // ls = plast
   4f458:	cmp	x2, x0
   4f45c:	csel	x0, x2, x0, hi  // hi = pmore
   4f460:	sub	x0, x0, x2
   4f464:	str	x0, [x19, #136]
   4f468:	b	4fcf4 <my_regprop@@Base+0x15a30>
   4f46c:	ldr	x0, [sp, #312]
   4f470:	sub	x0, x0, #0x1
   4f474:	str	x0, [sp, #312]
   4f478:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   4f47c:	add	x4, x23, #0x1
   4f480:	mov	w3, #0x3779                	// #14201
   4f484:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f488:	add	x2, x2, #0xfb8
   4f48c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f490:	add	x1, x1, #0xab8
   4f494:	mov	x0, x20
   4f498:	bl	5420 <Perl_croak@plt>
   4f49c:	ldrb	w0, [x0, #13]
   4f4a0:	tbz	w0, #1, 4f3a8 <my_regprop@@Base+0x150e4>
   4f4a4:	ldr	x1, [x19, #24]
   4f4a8:	cbz	x1, 4f4b8 <my_regprop@@Base+0x151f4>
   4f4ac:	mov	w2, #0xb                   	// #11
   4f4b0:	mov	x0, x20
   4f4b4:	bl	54b0 <Perl_save_pushptr@plt>
   4f4b8:	ldr	x1, [x19, #160]
   4f4bc:	cbz	x1, 4f4cc <my_regprop@@Base+0x15208>
   4f4c0:	mov	w2, #0xa                   	// #10
   4f4c4:	mov	x0, x20
   4f4c8:	bl	54b0 <Perl_save_pushptr@plt>
   4f4cc:	ldr	x1, [x19, #168]
   4f4d0:	cbz	x1, 4f3a8 <my_regprop@@Base+0x150e4>
   4f4d4:	mov	w2, #0xa                   	// #10
   4f4d8:	mov	x0, x20
   4f4dc:	bl	54b0 <Perl_save_pushptr@plt>
   4f4e0:	b	4f3a8 <my_regprop@@Base+0x150e4>
   4f4e4:	ldr	x6, [x19, #8]
   4f4e8:	subs	x1, x0, x6
   4f4ec:	b.mi	4f4fc <my_regprop@@Base+0x15238>  // b.first
   4f4f0:	mov	x5, x1
   4f4f4:	sub	x24, x2, x0
   4f4f8:	b	4f3f4 <my_regprop@@Base+0x15130>
   4f4fc:	ldr	x6, [x19, #48]
   4f500:	ldr	x5, [x19, #56]
   4f504:	sub	w5, w5, w6
   4f508:	mov	x4, x1
   4f50c:	mov	w3, #0x3779                	// #14201
   4f510:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f514:	add	x2, x2, #0xfb8
   4f518:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f51c:	add	x1, x1, #0x870
   4f520:	mov	x0, x20
   4f524:	bl	5420 <Perl_croak@plt>
   4f528:	cmp	x1, x0
   4f52c:	b.ls	4f65c <my_regprop@@Base+0x15398>  // b.plast
   4f530:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4f534:	ldr	x0, [x0, #3880]
   4f538:	ldr	w1, [x0]
   4f53c:	mov	w0, #0x4080                	// #16512
   4f540:	bics	wzr, w0, w1
   4f544:	b.ne	4ec94 <my_regprop@@Base+0x149d0>  // b.any
   4f548:	ldr	x1, [x19, #72]
   4f54c:	cbz	x1, 4f728 <my_regprop@@Base+0x15464>
   4f550:	add	x0, x25, #0x2
   4f554:	sub	x1, x0, x1
   4f558:	ldr	x0, [x19, #80]
   4f55c:	add	x0, x0, x1
   4f560:	ldr	x1, [x19, #8]
   4f564:	sub	x0, x0, x1
   4f568:	ldr	x1, [x19, #136]
   4f56c:	cmp	x0, x1
   4f570:	b.le	4ec94 <my_regprop@@Base+0x149d0>
   4f574:	ldr	x0, [x20, #224]
   4f578:	cbz	x0, 4f5a0 <my_regprop@@Base+0x152dc>
   4f57c:	ldr	x0, [x0, #64]
   4f580:	cmp	x0, #0x0
   4f584:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f588:	ldr	x1, [x1, #3984]
   4f58c:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f590:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f594:	ldr	x1, [x1, #3832]
   4f598:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f59c:	b.ne	4f748 <my_regprop@@Base+0x15484>  // b.any
   4f5a0:	ldr	x3, [sp, #312]
   4f5a4:	ldr	w0, [x19, #192]
   4f5a8:	cmp	w0, #0x0
   4f5ac:	cset	w4, ne  // ne = any
   4f5b0:	add	x0, x3, #0x1
   4f5b4:	ldr	x1, [x19, #72]
   4f5b8:	sub	x1, x0, x1
   4f5bc:	ldr	x0, [x19, #80]
   4f5c0:	add	x0, x0, x1
   4f5c4:	ldr	x1, [x19, #16]
   4f5c8:	cmp	x0, x1
   4f5cc:	b.hi	4f790 <my_regprop@@Base+0x154cc>  // b.pmore
   4f5d0:	ldr	x6, [x19, #8]
   4f5d4:	subs	x2, x0, x6
   4f5d8:	b.mi	4f79c <my_regprop@@Base+0x154d8>  // b.first
   4f5dc:	mov	x5, x2
   4f5e0:	sub	x24, x1, x0
   4f5e4:	cmp	x0, x1
   4f5e8:	csel	x0, x0, x1, ls  // ls = plast
   4f5ec:	str	x0, [sp, #8]
   4f5f0:	str	x24, [sp]
   4f5f4:	mov	w7, w4
   4f5f8:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4f5fc:	add	x2, x2, #0x5b0
   4f600:	mov	w1, #0x14                  	// #20
   4f604:	mov	x0, x20
   4f608:	bl	5150 <Perl_ck_warner@plt>
   4f60c:	ldr	x0, [x19, #72]
   4f610:	cbz	x0, 4ec94 <my_regprop@@Base+0x149d0>
   4f614:	ldr	x1, [sp, #312]
   4f618:	add	x1, x1, #0x1
   4f61c:	sub	x1, x1, x0
   4f620:	ldr	x0, [x19, #80]
   4f624:	add	x1, x0, x1
   4f628:	ldr	x2, [x19, #8]
   4f62c:	sub	x3, x1, x2
   4f630:	ldr	x0, [x19, #136]
   4f634:	cmp	x3, x0
   4f638:	b.le	4ec94 <my_regprop@@Base+0x149d0>
   4f63c:	ldr	x0, [x19, #16]
   4f640:	cmp	x0, x1
   4f644:	csel	x0, x0, x1, ls  // ls = plast
   4f648:	cmp	x2, x0
   4f64c:	csel	x0, x2, x0, hi  // hi = pmore
   4f650:	sub	x0, x0, x2
   4f654:	str	x0, [x19, #136]
   4f658:	b	4ec94 <my_regprop@@Base+0x149d0>
   4f65c:	ldr	x21, [x19, #16]
   4f660:	ldr	x0, [x19, #8]
   4f664:	sub	x21, x21, x0
   4f668:	ldr	x1, [x19, #24]
   4f66c:	cbz	x1, 4f67c <my_regprop@@Base+0x153b8>
   4f670:	mov	w2, #0xb                   	// #11
   4f674:	mov	x0, x20
   4f678:	bl	54b0 <Perl_save_pushptr@plt>
   4f67c:	ldr	x1, [x19, #160]
   4f680:	cbz	x1, 4f690 <my_regprop@@Base+0x153cc>
   4f684:	mov	w2, #0xa                   	// #10
   4f688:	mov	x0, x20
   4f68c:	bl	54b0 <Perl_save_pushptr@plt>
   4f690:	ldr	x1, [x19, #168]
   4f694:	cbz	x1, 4f6a4 <my_regprop@@Base+0x153e0>
   4f698:	mov	w2, #0xa                   	// #10
   4f69c:	mov	x0, x20
   4f6a0:	bl	54b0 <Perl_save_pushptr@plt>
   4f6a4:	cmp	x21, #0x7f
   4f6a8:	b.le	4f6e4 <my_regprop@@Base+0x15420>
   4f6ac:	mov	x21, #0x75                  	// #117
   4f6b0:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   4f6b4:	add	x6, x6, #0xfe0
   4f6b8:	ldr	w0, [x19, #192]
   4f6bc:	cmp	w0, #0x0
   4f6c0:	ldr	x5, [x19, #8]
   4f6c4:	mov	x4, x21
   4f6c8:	cset	w3, ne  // ne = any
   4f6cc:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4f6d0:	add	x2, x2, #0x4d0
   4f6d4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f6d8:	add	x1, x1, #0x50
   4f6dc:	mov	x0, x20
   4f6e0:	bl	5420 <Perl_croak@plt>
   4f6e4:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   4f6e8:	add	x6, x6, #0x20
   4f6ec:	b	4f6b8 <my_regprop@@Base+0x153f4>
   4f6f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4f6f4:	ldr	x0, [x0, #3880]
   4f6f8:	ldr	w1, [x0, w2, sxtw #2]
   4f6fc:	mov	w0, #0x4080                	// #16512
   4f700:	bics	wzr, w0, w1
   4f704:	b.ne	4ec94 <my_regprop@@Base+0x149d0>  // b.any
   4f708:	and	w0, w2, #0xffffffdf
   4f70c:	sub	w0, w0, #0x41
   4f710:	cmp	w0, #0x19
   4f714:	b.hi	4f548 <my_regprop@@Base+0x15284>  // b.pmore
   4f718:	ldrb	w0, [x25, #2]
   4f71c:	cmp	w0, #0x7b
   4f720:	b.ne	4f548 <my_regprop@@Base+0x15284>  // b.any
   4f724:	b	4ec94 <my_regprop@@Base+0x149d0>
   4f728:	add	x4, x25, #0x2
   4f72c:	mov	w3, #0x3789                	// #14217
   4f730:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f734:	add	x2, x2, #0xfb8
   4f738:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f73c:	add	x1, x1, #0xab8
   4f740:	mov	x0, x20
   4f744:	bl	5420 <Perl_croak@plt>
   4f748:	ldrb	w0, [x0, #13]
   4f74c:	tbz	w0, #1, 4f5a0 <my_regprop@@Base+0x152dc>
   4f750:	ldr	x1, [x19, #24]
   4f754:	cbz	x1, 4f764 <my_regprop@@Base+0x154a0>
   4f758:	mov	w2, #0xb                   	// #11
   4f75c:	mov	x0, x20
   4f760:	bl	54b0 <Perl_save_pushptr@plt>
   4f764:	ldr	x1, [x19, #160]
   4f768:	cbz	x1, 4f778 <my_regprop@@Base+0x154b4>
   4f76c:	mov	w2, #0xa                   	// #10
   4f770:	mov	x0, x20
   4f774:	bl	54b0 <Perl_save_pushptr@plt>
   4f778:	ldr	x1, [x19, #168]
   4f77c:	cbz	x1, 4f5a0 <my_regprop@@Base+0x152dc>
   4f780:	mov	w2, #0xa                   	// #10
   4f784:	mov	x0, x20
   4f788:	bl	54b0 <Perl_save_pushptr@plt>
   4f78c:	b	4f5a0 <my_regprop@@Base+0x152dc>
   4f790:	ldr	x6, [x19, #8]
   4f794:	sub	x5, x1, x6
   4f798:	b	4f5e4 <my_regprop@@Base+0x15320>
   4f79c:	ldr	x6, [x19, #48]
   4f7a0:	ldr	x5, [x19, #56]
   4f7a4:	sub	w5, w5, w6
   4f7a8:	mov	x4, x2
   4f7ac:	mov	w3, #0x3789                	// #14217
   4f7b0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4f7b4:	add	x2, x2, #0xfb8
   4f7b8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4f7bc:	add	x1, x1, #0x870
   4f7c0:	mov	x0, x20
   4f7c4:	bl	5420 <Perl_croak@plt>
   4f7c8:	cbnz	x26, 4f7ec <my_regprop@@Base+0x15528>
   4f7cc:	ldr	x0, [x19, #48]
   4f7d0:	cmp	x25, x0
   4f7d4:	b.ls	4fd44 <my_regprop@@Base+0x15a80>  // b.plast
   4f7d8:	ldurb	w0, [x25, #-1]
   4f7dc:	and	w0, w0, #0xffffffdf
   4f7e0:	sub	w0, w0, #0x41
   4f7e4:	cmp	w0, #0x19
   4f7e8:	b.hi	4fd4c <my_regprop@@Base+0x15a88>  // b.pmore
   4f7ec:	ldrb	w0, [x19, #385]
   4f7f0:	cbnz	w0, 4f93c <my_regprop@@Base+0x15678>
   4f7f4:	add	x0, x21, #0x1
   4f7f8:	cmp	x25, x0
   4f7fc:	b.ls	4f820 <my_regprop@@Base+0x1555c>  // b.plast
   4f800:	ldurb	w0, [x25, #-1]
   4f804:	and	w0, w0, #0xffffffdf
   4f808:	sub	w0, w0, #0x41
   4f80c:	cmp	w0, #0x19
   4f810:	b.hi	4f820 <my_regprop@@Base+0x1555c>  // b.pmore
   4f814:	ldurb	w0, [x25, #-2]
   4f818:	cmp	w0, #0x5c
   4f81c:	b.eq	4f93c <my_regprop@@Base+0x15678>  // b.none
   4f820:	mov	x0, x25
   4f824:	bl	26408 <my_regexec@@Base+0x2f14>
   4f828:	and	w0, w0, #0xff
   4f82c:	cbnz	w0, 4f93c <my_regprop@@Base+0x15678>
   4f830:	ldr	x1, [x19, #72]
   4f834:	cbz	x1, 4fa1c <my_regprop@@Base+0x15758>
   4f838:	add	x0, x25, #0x1
   4f83c:	sub	x1, x0, x1
   4f840:	ldr	x0, [x19, #80]
   4f844:	add	x0, x0, x1
   4f848:	ldr	x1, [x19, #8]
   4f84c:	sub	x0, x0, x1
   4f850:	ldr	x1, [x19, #136]
   4f854:	cmp	x0, x1
   4f858:	b.le	4fd54 <my_regprop@@Base+0x15a90>
   4f85c:	ldr	x0, [x20, #224]
   4f860:	cbz	x0, 4f888 <my_regprop@@Base+0x155c4>
   4f864:	ldr	x0, [x0, #64]
   4f868:	cmp	x0, #0x0
   4f86c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f870:	ldr	x1, [x1, #3984]
   4f874:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f878:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4f87c:	ldr	x1, [x1, #3832]
   4f880:	ccmp	x0, x1, #0x4, ne  // ne = any
   4f884:	b.ne	4fa3c <my_regprop@@Base+0x15778>  // b.any
   4f888:	ldr	w0, [x19, #192]
   4f88c:	cmp	w0, #0x0
   4f890:	cset	w3, ne  // ne = any
   4f894:	ldr	x0, [sp, #312]
   4f898:	add	x0, x0, #0x1
   4f89c:	ldr	x1, [x19, #72]
   4f8a0:	sub	x1, x0, x1
   4f8a4:	ldr	x0, [x19, #80]
   4f8a8:	add	x0, x0, x1
   4f8ac:	ldr	x1, [x19, #16]
   4f8b0:	cmp	x0, x1
   4f8b4:	b.hi	4fa84 <my_regprop@@Base+0x157c0>  // b.pmore
   4f8b8:	ldr	x5, [x19, #8]
   4f8bc:	subs	x4, x0, x5
   4f8c0:	b.mi	4fa94 <my_regprop@@Base+0x157d0>  // b.first
   4f8c4:	sub	x7, x1, x0
   4f8c8:	cmp	x0, x1
   4f8cc:	csel	x0, x0, x1, ls  // ls = plast
   4f8d0:	str	x0, [sp]
   4f8d4:	mov	w6, w3
   4f8d8:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4f8dc:	add	x2, x2, #0x618
   4f8e0:	mov	w1, #0x14                  	// #20
   4f8e4:	mov	x0, x20
   4f8e8:	bl	5150 <Perl_ck_warner@plt>
   4f8ec:	ldr	x1, [x19, #72]
   4f8f0:	cbz	x1, 4ec94 <my_regprop@@Base+0x149d0>
   4f8f4:	ldr	x0, [sp, #312]
   4f8f8:	add	x0, x0, #0x1
   4f8fc:	sub	x0, x0, x1
   4f900:	ldr	x1, [x19, #80]
   4f904:	add	x0, x1, x0
   4f908:	ldr	x2, [x19, #8]
   4f90c:	sub	x3, x0, x2
   4f910:	ldr	x1, [x19, #136]
   4f914:	cmp	x3, x1
   4f918:	b.le	4ec94 <my_regprop@@Base+0x149d0>
   4f91c:	ldr	x1, [x19, #16]
   4f920:	cmp	x1, x0
   4f924:	csel	x0, x1, x0, ls  // ls = plast
   4f928:	cmp	x2, x0
   4f92c:	csel	x0, x2, x0, hi  // hi = pmore
   4f930:	sub	x0, x0, x2
   4f934:	str	x0, [x19, #136]
   4f938:	b	4ec94 <my_regprop@@Base+0x149d0>
   4f93c:	add	x0, x25, #0x1
   4f940:	str	x0, [x19, #64]
   4f944:	ldr	x1, [x19, #24]
   4f948:	cbz	x1, 4f958 <my_regprop@@Base+0x15694>
   4f94c:	mov	w2, #0xb                   	// #11
   4f950:	mov	x0, x20
   4f954:	bl	54b0 <Perl_save_pushptr@plt>
   4f958:	ldr	x1, [x19, #160]
   4f95c:	cbz	x1, 4f96c <my_regprop@@Base+0x156a8>
   4f960:	mov	w2, #0xa                   	// #10
   4f964:	mov	x0, x20
   4f968:	bl	54b0 <Perl_save_pushptr@plt>
   4f96c:	ldr	x1, [x19, #168]
   4f970:	cbz	x1, 4f980 <my_regprop@@Base+0x156bc>
   4f974:	mov	w2, #0xa                   	// #10
   4f978:	mov	x0, x20
   4f97c:	bl	54b0 <Perl_save_pushptr@plt>
   4f980:	ldr	x0, [x19, #64]
   4f984:	ldr	x1, [x19, #72]
   4f988:	sub	x1, x0, x1
   4f98c:	ldr	x0, [x19, #80]
   4f990:	add	x0, x0, x1
   4f994:	ldr	x1, [x19, #16]
   4f998:	cmp	x0, x1
   4f99c:	b.hi	4f9e4 <my_regprop@@Base+0x15720>  // b.pmore
   4f9a0:	ldr	x5, [x19, #8]
   4f9a4:	sub	x7, x1, x0
   4f9a8:	subs	x4, x0, x5
   4f9ac:	b.mi	4f9f4 <my_regprop@@Base+0x15730>  // b.first
   4f9b0:	ldr	w2, [x19, #192]
   4f9b4:	cmp	w2, #0x0
   4f9b8:	cset	w3, ne  // ne = any
   4f9bc:	cmp	x0, x1
   4f9c0:	csel	x0, x0, x1, ls  // ls = plast
   4f9c4:	str	x0, [sp]
   4f9c8:	mov	w6, w3
   4f9cc:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   4f9d0:	add	x2, x2, #0x3f0
   4f9d4:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   4f9d8:	add	x1, x1, #0x3a8
   4f9dc:	mov	x0, x20
   4f9e0:	bl	5420 <Perl_croak@plt>
   4f9e4:	ldr	x5, [x19, #8]
   4f9e8:	sub	x4, x1, x5
   4f9ec:	mov	x7, #0x0                   	// #0
   4f9f0:	b	4f9b0 <my_regprop@@Base+0x156ec>
   4f9f4:	ldr	x6, [x19, #48]
   4f9f8:	ldr	x5, [x19, #56]
   4f9fc:	sub	w5, w5, w6
   4fa00:	mov	w3, #0x37a8                	// #14248
   4fa04:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4fa08:	add	x2, x2, #0xfb8
   4fa0c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4fa10:	add	x1, x1, #0x870
   4fa14:	mov	x0, x20
   4fa18:	bl	5420 <Perl_croak@plt>
   4fa1c:	add	x4, x25, #0x1
   4fa20:	mov	w3, #0x37ab                	// #14251
   4fa24:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4fa28:	add	x2, x2, #0xfb8
   4fa2c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4fa30:	add	x1, x1, #0xab8
   4fa34:	mov	x0, x20
   4fa38:	bl	5420 <Perl_croak@plt>
   4fa3c:	ldrb	w0, [x0, #13]
   4fa40:	tbz	w0, #1, 4f888 <my_regprop@@Base+0x155c4>
   4fa44:	ldr	x1, [x19, #24]
   4fa48:	cbz	x1, 4fa58 <my_regprop@@Base+0x15794>
   4fa4c:	mov	w2, #0xb                   	// #11
   4fa50:	mov	x0, x20
   4fa54:	bl	54b0 <Perl_save_pushptr@plt>
   4fa58:	ldr	x1, [x19, #160]
   4fa5c:	cbz	x1, 4fa6c <my_regprop@@Base+0x157a8>
   4fa60:	mov	w2, #0xa                   	// #10
   4fa64:	mov	x0, x20
   4fa68:	bl	54b0 <Perl_save_pushptr@plt>
   4fa6c:	ldr	x1, [x19, #168]
   4fa70:	cbz	x1, 4f888 <my_regprop@@Base+0x155c4>
   4fa74:	mov	w2, #0xa                   	// #10
   4fa78:	mov	x0, x20
   4fa7c:	bl	54b0 <Perl_save_pushptr@plt>
   4fa80:	b	4f888 <my_regprop@@Base+0x155c4>
   4fa84:	ldr	x5, [x19, #8]
   4fa88:	sub	x4, x1, x5
   4fa8c:	mov	x7, #0x0                   	// #0
   4fa90:	b	4f8c8 <my_regprop@@Base+0x15604>
   4fa94:	ldr	x6, [x19, #48]
   4fa98:	ldr	x5, [x19, #56]
   4fa9c:	sub	w5, w5, w6
   4faa0:	mov	w3, #0x37ab                	// #14251
   4faa4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4faa8:	add	x2, x2, #0xfb8
   4faac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4fab0:	add	x1, x1, #0x870
   4fab4:	mov	x0, x20
   4fab8:	bl	5420 <Perl_croak@plt>
   4fabc:	ldrb	w0, [x19, #385]
   4fac0:	cbz	w0, 4ec94 <my_regprop@@Base+0x149d0>
   4fac4:	ldr	x1, [x19, #72]
   4fac8:	cbz	x1, 4fbcc <my_regprop@@Base+0x15908>
   4facc:	add	x0, x25, #0x1
   4fad0:	sub	x1, x0, x1
   4fad4:	ldr	x0, [x19, #80]
   4fad8:	add	x0, x0, x1
   4fadc:	ldr	x1, [x19, #8]
   4fae0:	sub	x0, x0, x1
   4fae4:	ldr	x1, [x19, #136]
   4fae8:	cmp	x0, x1
   4faec:	b.le	4ec94 <my_regprop@@Base+0x149d0>
   4faf0:	ldr	x0, [x20, #224]
   4faf4:	cbz	x0, 4fb1c <my_regprop@@Base+0x15858>
   4faf8:	ldr	x0, [x0, #64]
   4fafc:	cmp	x0, #0x0
   4fb00:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4fb04:	ldr	x1, [x1, #3984]
   4fb08:	ccmp	x0, x1, #0x4, ne  // ne = any
   4fb0c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   4fb10:	ldr	x1, [x1, #3832]
   4fb14:	ccmp	x0, x1, #0x4, ne  // ne = any
   4fb18:	b.ne	4fbec <my_regprop@@Base+0x15928>  // b.any
   4fb1c:	ldr	x0, [sp, #312]
   4fb20:	ldrb	w3, [x0], #1
   4fb24:	ldr	w1, [x19, #192]
   4fb28:	cmp	w1, #0x0
   4fb2c:	cset	w4, ne  // ne = any
   4fb30:	ldr	x1, [x19, #72]
   4fb34:	sub	x1, x0, x1
   4fb38:	ldr	x0, [x19, #80]
   4fb3c:	add	x0, x0, x1
   4fb40:	ldr	x1, [x19, #16]
   4fb44:	cmp	x0, x1
   4fb48:	b.ls	4fc34 <my_regprop@@Base+0x15970>  // b.plast
   4fb4c:	ldr	x6, [x19, #8]
   4fb50:	sub	x5, x1, x6
   4fb54:	mov	x2, #0x0                   	// #0
   4fb58:	cmp	x0, x1
   4fb5c:	csel	x0, x0, x1, ls  // ls = plast
   4fb60:	str	x0, [sp, #8]
   4fb64:	str	x2, [sp]
   4fb68:	mov	w7, w4
   4fb6c:	ldr	x2, [sp, #248]
   4fb70:	mov	w1, #0x14                  	// #20
   4fb74:	mov	x0, x20
   4fb78:	bl	5150 <Perl_ck_warner@plt>
   4fb7c:	ldr	x1, [x19, #72]
   4fb80:	cbz	x1, 4ec94 <my_regprop@@Base+0x149d0>
   4fb84:	ldr	x0, [sp, #312]
   4fb88:	add	x0, x0, #0x1
   4fb8c:	sub	x0, x0, x1
   4fb90:	ldr	x1, [x19, #80]
   4fb94:	add	x1, x1, x0
   4fb98:	ldr	x2, [x19, #8]
   4fb9c:	sub	x3, x1, x2
   4fba0:	ldr	x0, [x19, #136]
   4fba4:	cmp	x3, x0
   4fba8:	b.le	4ec94 <my_regprop@@Base+0x149d0>
   4fbac:	ldr	x0, [x19, #16]
   4fbb0:	cmp	x0, x1
   4fbb4:	csel	x0, x0, x1, ls  // ls = plast
   4fbb8:	cmp	x2, x0
   4fbbc:	csel	x0, x2, x0, hi  // hi = pmore
   4fbc0:	sub	x0, x0, x2
   4fbc4:	str	x0, [x19, #136]
   4fbc8:	b	4ec94 <my_regprop@@Base+0x149d0>
   4fbcc:	add	x4, x25, #0x1
   4fbd0:	mov	w3, #0x37b2                	// #14258
   4fbd4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4fbd8:	add	x2, x2, #0xfb8
   4fbdc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4fbe0:	add	x1, x1, #0xab8
   4fbe4:	mov	x0, x20
   4fbe8:	bl	5420 <Perl_croak@plt>
   4fbec:	ldrb	w0, [x0, #13]
   4fbf0:	tbz	w0, #1, 4fb1c <my_regprop@@Base+0x15858>
   4fbf4:	ldr	x1, [x19, #24]
   4fbf8:	cbz	x1, 4fc08 <my_regprop@@Base+0x15944>
   4fbfc:	mov	w2, #0xb                   	// #11
   4fc00:	mov	x0, x20
   4fc04:	bl	54b0 <Perl_save_pushptr@plt>
   4fc08:	ldr	x1, [x19, #160]
   4fc0c:	cbz	x1, 4fc1c <my_regprop@@Base+0x15958>
   4fc10:	mov	w2, #0xa                   	// #10
   4fc14:	mov	x0, x20
   4fc18:	bl	54b0 <Perl_save_pushptr@plt>
   4fc1c:	ldr	x1, [x19, #168]
   4fc20:	cbz	x1, 4fb1c <my_regprop@@Base+0x15858>
   4fc24:	mov	w2, #0xa                   	// #10
   4fc28:	mov	x0, x20
   4fc2c:	bl	54b0 <Perl_save_pushptr@plt>
   4fc30:	b	4fb1c <my_regprop@@Base+0x15858>
   4fc34:	ldr	x6, [x19, #8]
   4fc38:	subs	x5, x0, x6
   4fc3c:	b.mi	4fc48 <my_regprop@@Base+0x15984>  // b.first
   4fc40:	sub	x2, x1, x0
   4fc44:	b	4fb58 <my_regprop@@Base+0x15894>
   4fc48:	mov	x2, x5
   4fc4c:	ldr	x6, [x19, #48]
   4fc50:	ldr	x5, [x19, #56]
   4fc54:	sub	w5, w5, w6
   4fc58:	mov	x4, x2
   4fc5c:	mov	w3, #0x37b2                	// #14258
   4fc60:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   4fc64:	add	x2, x2, #0xfb8
   4fc68:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   4fc6c:	add	x1, x1, #0x870
   4fc70:	mov	x0, x20
   4fc74:	bl	5420 <Perl_croak@plt>
   4fc78:	ldr	x1, [x19, #56]
   4fc7c:	cmp	x0, x1
   4fc80:	b.cs	4fd24 <my_regprop@@Base+0x15a60>  // b.hs, b.nlast
   4fc84:	mov	x7, x0
   4fc88:	mov	x5, #0x0                   	// #0
   4fc8c:	mov	x2, #0x0                   	// #0
   4fc90:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   4fc94:	ldr	x10, [x3, #3824]
   4fc98:	mov	w9, #0xff                  	// #255
   4fc9c:	mov	x8, x10
   4fca0:	ldrb	w6, [x7]
   4fca4:	ldrb	w3, [x10, w6, sxtw]
   4fca8:	and	x4, x3, #0xff
   4fcac:	asr	w3, w9, w3
   4fcb0:	and	w3, w3, w6
   4fcb4:	sxtw	x3, w3
   4fcb8:	bfi	x6, x5, #6, #58
   4fcbc:	cmp	x2, #0x0
   4fcc0:	csel	x5, x6, x3, ne  // ne = any
   4fcc4:	add	x3, x8, x4
   4fcc8:	add	x2, x3, x2
   4fccc:	ldrb	w2, [x2, #256]
   4fcd0:	cbnz	x2, 4fd14 <my_regprop@@Base+0x15a50>
   4fcd4:	sub	x0, x7, x0
   4fcd8:	add	x0, x0, #0x1
   4fcdc:	str	x0, [sp, #336]
   4fce0:	str	x5, [sp, #304]
   4fce4:	ldr	x0, [sp, #312]
   4fce8:	ldr	x1, [sp, #336]
   4fcec:	add	x0, x0, x1
   4fcf0:	str	x0, [sp, #312]
   4fcf4:	ldr	x0, [sp, #304]
   4fcf8:	cmp	x0, #0xff
   4fcfc:	b.ls	4ecb8 <my_regprop@@Base+0x149f4>  // b.plast
   4fd00:	ldr	w0, [x19, #192]
   4fd04:	cbnz	w0, 4ecb8 <my_regprop@@Base+0x149f4>
   4fd08:	mov	w0, #0x60                  	// #96
   4fd0c:	str	w0, [sp, #272]
   4fd10:	b	4cdcc <my_regprop@@Base+0x12b08>
   4fd14:	add	x7, x7, #0x1
   4fd18:	cmp	x1, x7
   4fd1c:	ccmp	x2, #0x1, #0x4, hi  // hi = pmore
   4fd20:	b.ne	4fca0 <my_regprop@@Base+0x159dc>  // b.any
   4fd24:	mov	x5, #0x0                   	// #0
   4fd28:	mov	x4, #0x0                   	// #0
   4fd2c:	mov	w3, #0x0                   	// #0
   4fd30:	ldr	x2, [sp, #240]
   4fd34:	sub	x1, x1, x0
   4fd38:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   4fd3c:	mov	x5, x0
   4fd40:	b	4fce0 <my_regprop@@Base+0x15a1c>
   4fd44:	mov	x0, x25
   4fd48:	b	4eca8 <my_regprop@@Base+0x149e4>
   4fd4c:	mov	x0, x25
   4fd50:	b	4eca8 <my_regprop@@Base+0x149e4>
   4fd54:	mov	x0, x25
   4fd58:	b	4eca8 <my_regprop@@Base+0x149e4>
   4fd5c:	ldrb	w1, [x0, #1]
   4fd60:	sub	w1, w1, #0x30
   4fd64:	mov	w22, #0x0                   	// #0
   4fd68:	cmp	w1, #0x9
   4fd6c:	b.hi	4fdd8 <my_regprop@@Base+0x15b14>  // b.pmore
   4fd70:	add	x0, x0, #0x1
   4fd74:	mov	x3, x0
   4fd78:	ldrb	w1, [x0, #1]!
   4fd7c:	sub	w2, w1, #0x30
   4fd80:	cmp	w2, #0x9
   4fd84:	b.ls	4fd74 <my_regprop@@Base+0x15ab0>  // b.plast
   4fd88:	cmp	w1, #0x2c
   4fd8c:	b.eq	4fda0 <my_regprop@@Base+0x15adc>  // b.none
   4fd90:	ldrb	w0, [x0]
   4fd94:	cmp	w0, #0x7d
   4fd98:	cset	w22, eq  // eq = none
   4fd9c:	b	4fdd8 <my_regprop@@Base+0x15b14>
   4fda0:	add	x3, x3, #0x2
   4fda4:	ldrb	w0, [x0, #1]
   4fda8:	sub	w0, w0, #0x30
   4fdac:	cmp	w0, #0x9
   4fdb0:	b.hi	4fdcc <my_regprop@@Base+0x15b08>  // b.pmore
   4fdb4:	ldrb	w0, [x3, #1]!
   4fdb8:	sub	w0, w0, #0x30
   4fdbc:	cmp	w0, #0x9
   4fdc0:	b.ls	4fdb4 <my_regprop@@Base+0x15af0>  // b.plast
   4fdc4:	mov	x0, x3
   4fdc8:	b	4fd90 <my_regprop@@Base+0x15acc>
   4fdcc:	mov	x0, x3
   4fdd0:	b	4fd90 <my_regprop@@Base+0x15acc>
   4fdd4:	mov	w22, #0x1                   	// #1
   4fdd8:	cmp	x26, #0x0
   4fddc:	cset	w23, ne  // ne = any
   4fde0:	cmp	w23, #0x0
   4fde4:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   4fde8:	b.eq	4ed08 <my_regprop@@Base+0x14a44>  // b.none
   4fdec:	str	x25, [sp, #312]
   4fdf0:	add	x22, x26, #0x3
   4fdf4:	lsr	x22, x22, #2
   4fdf8:	sub	x2, x22, #0x40
   4fdfc:	mov	x1, x19
   4fe00:	mov	x0, x20
   4fe04:	bl	29e08 <my_regexec@@Base+0x6914>
   4fe08:	cbz	x26, 51de4 <my_regprop@@Base+0x17b20>
   4fe0c:	ldr	w0, [sp, #168]
   4fe10:	cmp	w0, #0x23
   4fe14:	b.eq	505c0 <my_regprop@@Base+0x162fc>  // b.none
   4fe18:	ldr	w0, [x19]
   4fe1c:	tbz	w0, #2, 505e8 <my_regprop@@Base+0x16324>
   4fe20:	ldr	w0, [sp, #232]
   4fe24:	cmp	w0, #0x0
   4fe28:	ldr	w0, [sp, #236]
   4fe2c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   4fe30:	b.ne	506b4 <my_regprop@@Base+0x163f0>  // b.any
   4fe34:	ldr	w0, [sp, #168]
   4fe38:	cmp	w0, #0x26
   4fe3c:	b.eq	50704 <my_regprop@@Base+0x16440>  // b.none
   4fe40:	ldr	w0, [sp, #168]
   4fe44:	cmp	w0, #0x25
   4fe48:	b.eq	50720 <my_regprop@@Base+0x1645c>  // b.none
   4fe4c:	ldr	w1, [sp, #168]
   4fe50:	cmp	w1, #0x27
   4fe54:	ldr	w0, [sp, #224]
   4fe58:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   4fe5c:	mov	w0, #0x2d                  	// #45
   4fe60:	csel	w0, w1, w0, eq  // eq = none
   4fe64:	str	w0, [sp, #168]
   4fe68:	b	505e8 <my_regprop@@Base+0x16324>
   4fe6c:	mov	x4, #0x0                   	// #0
   4fe70:	mov	x3, #0x0                   	// #0
   4fe74:	ldr	x23, [sp, #176]
   4fe78:	mov	x1, x23
   4fe7c:	mov	x0, x20
   4fe80:	bl	5680 <Perl_uvoffuni_to_utf8_flags_msgs@plt>
   4fe84:	sub	x1, x0, x23
   4fe88:	str	x1, [sp, #320]
   4fe8c:	str	x0, [sp, #176]
   4fe90:	ldr	x0, [sp, #304]
   4fe94:	cmp	x0, #0x100
   4fe98:	ldr	w0, [sp, #224]
   4fe9c:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   4fea0:	str	w0, [sp, #224]
   4fea4:	b	4ed30 <my_regprop@@Base+0x14a6c>
   4fea8:	ubfx	x1, x0, #7, #3
   4feac:	cmp	w1, #0x1
   4feb0:	b.eq	4fef8 <my_regprop@@Base+0x15c34>  // b.none
   4feb4:	ldr	x1, [sp, #304]
   4feb8:	cmp	x1, #0xff
   4febc:	b.ls	50004 <my_regprop@@Base+0x15d40>  // b.plast
   4fec0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   4fec4:	ldr	x0, [x0, #3808]
   4fec8:	ldr	x24, [x0]
   4fecc:	mov	x0, x24
   4fed0:	bl	59d0 <Perl__invlist_search@plt>
   4fed4:	cbz	x24, 50064 <my_regprop@@Base+0x15da0>
   4fed8:	tbnz	x0, #63, 4fee0 <my_regprop@@Base+0x15c1c>
   4fedc:	tbz	w0, #0, 51bdc <my_regprop@@Base+0x17918>
   4fee0:	ldr	w0, [sp, #168]
   4fee4:	cmp	w0, #0x23
   4fee8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   4feec:	b.eq	4ed10 <my_regprop@@Base+0x14a4c>  // b.none
   4fef0:	str	x25, [sp, #312]
   4fef4:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   4fef8:	ldr	x1, [sp, #304]
   4fefc:	cmp	x1, #0xff
   4ff00:	mov	x0, #0x130                 	// #304
   4ff04:	ccmp	x1, x0, #0x4, hi  // hi = pmore
   4ff08:	b.ne	4ff24 <my_regprop@@Base+0x15c60>  // b.any
   4ff0c:	cbz	x26, 4ffe4 <my_regprop@@Base+0x15d20>
   4ff10:	ldr	w0, [sp, #168]
   4ff14:	cmp	w0, #0x23
   4ff18:	b.eq	4fffc <my_regprop@@Base+0x15d38>  // b.none
   4ff1c:	str	wzr, [sp, #228]
   4ff20:	b	4ed10 <my_regprop@@Base+0x14a4c>
   4ff24:	cmp	x1, x0
   4ff28:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff2c:	cmp	x1, #0x131
   4ff30:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff34:	cmp	x1, #0x149
   4ff38:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff3c:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff40:	cmp	x1, #0x178
   4ff44:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff48:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff4c:	cmp	x1, #0x17f
   4ff50:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff54:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff58:	cmp	x1, #0x1f0
   4ff5c:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff60:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff64:	cmp	x1, #0x307
   4ff68:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff6c:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff70:	cmp	x1, #0x39c
   4ff74:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff78:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff7c:	cmp	x1, #0x3bc
   4ff80:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ff84:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ff88:	sub	x0, x1, #0x1, lsl #12
   4ff8c:	sub	x0, x0, #0xe96
   4ff90:	cmp	x0, #0x4
   4ff94:	b.ls	4ff0c <my_regprop@@Base+0x15c48>  // b.plast
   4ff98:	mov	x0, #0x1e9a                	// #7834
   4ff9c:	cmp	x1, x0
   4ffa0:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ffa4:	mov	x0, #0x1e9e                	// #7838
   4ffa8:	cmp	x1, x0
   4ffac:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ffb0:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ffb4:	mov	x0, #0x212a                	// #8490
   4ffb8:	cmp	x1, x0
   4ffbc:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ffc0:	b.ls	4fec0 <my_regprop@@Base+0x15bfc>  // b.plast
   4ffc4:	mov	x0, #0x212b                	// #8491
   4ffc8:	cmp	x1, x0
   4ffcc:	b.eq	4ff0c <my_regprop@@Base+0x15c48>  // b.none
   4ffd0:	sub	x0, x1, #0xf, lsl #12
   4ffd4:	sub	x0, x0, #0xb00
   4ffd8:	cmp	x0, #0x6
   4ffdc:	b.hi	4fec0 <my_regprop@@Base+0x15bfc>  // b.pmore
   4ffe0:	b	4ff0c <my_regprop@@Base+0x15c48>
   4ffe4:	mov	w0, #0x1                   	// #1
   4ffe8:	str	w0, [x19, #248]
   4ffec:	str	wzr, [sp, #228]
   4fff0:	mov	w0, #0x26                  	// #38
   4fff4:	str	w0, [sp, #168]
   4fff8:	b	4ed10 <my_regprop@@Base+0x14a4c>
   4fffc:	str	x25, [sp, #312]
   50000:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   50004:	and	x1, x1, #0xff
   50008:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   5000c:	ldr	x2, [x2, #3880]
   50010:	ldr	w1, [x2, x1, lsl #2]
   50014:	tbz	w1, #22, 4fee0 <my_regprop@@Base+0x15c1c>
   50018:	cbz	x26, 50088 <my_regprop@@Base+0x15dc4>
   5001c:	ldr	w0, [sp, #168]
   50020:	cmp	w0, #0x23
   50024:	b.eq	500ac <my_regprop@@Base+0x15de8>  // b.none
   50028:	ldr	w0, [x19, #192]
   5002c:	cbz	w0, 50114 <my_regprop@@Base+0x15e50>
   50030:	ldr	x1, [sp, #304]
   50034:	cmp	x1, #0x7f
   50038:	b.hi	500b4 <my_regprop@@Base+0x15df0>  // b.pmore
   5003c:	sub	x3, x1, #0x41
   50040:	add	w0, w1, #0x20
   50044:	and	w2, w0, #0xff
   50048:	and	w0, w1, #0xff
   5004c:	cmp	x3, #0x19
   50050:	csel	w0, w0, w2, hi  // hi = pmore
   50054:	ldr	x1, [sp, #176]
   50058:	strb	w0, [x1], #1
   5005c:	str	x1, [sp, #176]
   50060:	b	4ed30 <my_regprop@@Base+0x14a6c>
   50064:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   50068:	add	x3, x3, #0xc10
   5006c:	add	x3, x3, #0x118
   50070:	mov	w2, #0x3f                  	// #63
   50074:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   50078:	add	x1, x1, #0x550
   5007c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   50080:	add	x0, x0, #0x568
   50084:	bl	58e0 <__assert_fail@plt>
   50088:	ubfx	x0, x0, #7, #3
   5008c:	sub	w1, w0, #0x1
   50090:	and	w1, w1, #0xff
   50094:	cmp	w0, #0x2
   50098:	csel	w0, w1, w0, hi  // hi = pmore
   5009c:	add	w0, w0, #0x25
   500a0:	and	w0, w0, #0xff
   500a4:	str	w0, [sp, #168]
   500a8:	b	50028 <my_regprop@@Base+0x15d64>
   500ac:	str	x25, [sp, #312]
   500b0:	b	4fdf0 <my_regprop@@Base+0x15b2c>
   500b4:	ldr	w0, [x19]
   500b8:	ubfx	x0, x0, #7, #3
   500bc:	cmp	w0, #0x4
   500c0:	mov	w4, #0x6                   	// #6
   500c4:	mov	w0, #0x2                   	// #2
   500c8:	csel	w4, w4, w0, eq  // eq = none
   500cc:	add	x3, sp, #0x140
   500d0:	ldr	x23, [sp, #176]
   500d4:	mov	x2, x23
   500d8:	mov	x0, x20
   500dc:	bl	5320 <Perl__to_uni_fold_flags@plt>
   500e0:	str	x0, [sp, #304]
   500e4:	ldr	x1, [sp, #320]
   500e8:	add	x1, x23, x1
   500ec:	str	x1, [sp, #176]
   500f0:	cmp	x0, #0x3bc
   500f4:	cset	w1, ne  // ne = any
   500f8:	cmp	x0, #0xff
   500fc:	cset	w0, hi  // hi = pmore
   50100:	ands	w1, w1, w0
   50104:	ldr	w0, [sp, #224]
   50108:	csel	w0, w0, w1, eq  // eq = none
   5010c:	str	w0, [sp, #224]
   50110:	b	4ed30 <my_regprop@@Base+0x14a6c>
   50114:	ldr	x0, [sp, #304]
   50118:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5011c:	ldr	x1, [x1, #3944]
   50120:	ldrb	w2, [x1, x0]
   50124:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   50128:	ldr	x1, [x1, #3752]
   5012c:	ldrb	w1, [x1, x0]
   50130:	cmp	w2, w1
   50134:	ldr	w1, [sp, #228]
   50138:	csel	w1, w1, wzr, eq  // eq = none
   5013c:	str	w1, [sp, #228]
   50140:	cmp	x0, #0xdf
   50144:	b.eq	501d4 <my_regprop@@Base+0x15f10>  // b.none
   50148:	and	x1, x0, #0xffffffffffffffdf
   5014c:	cmp	x1, #0x53
   50150:	csel	w23, w23, wzr, eq  // eq = none
   50154:	cbnz	w23, 50184 <my_regprop@@Base+0x15ec0>
   50158:	cmp	x0, #0xb5
   5015c:	b.eq	52020 <my_regprop@@Base+0x17d5c>  // b.none
   50160:	ldr	w1, [x19]
   50164:	tst	x1, #0x380
   50168:	b.eq	50228 <my_regprop@@Base+0x15f64>  // b.none
   5016c:	ldr	x0, [sp, #304]
   50170:	tst	x0, #0xffffffffffffff00
   50174:	b.eq	501bc <my_regprop@@Base+0x15ef8>  // b.none
   50178:	and	w0, w0, #0xff
   5017c:	ldr	x1, [sp, #176]
   50180:	b	50240 <my_regprop@@Base+0x15f7c>
   50184:	ldr	x1, [sp, #176]
   50188:	ldurb	w1, [x1, #-1]
   5018c:	and	w1, w1, #0xffffffdf
   50190:	cmp	w1, #0x53
   50194:	ldr	w2, [sp, #232]
   50198:	csel	w2, w2, w23, ne  // ne = any
   5019c:	str	w2, [sp, #232]
   501a0:	ldr	w1, [sp, #228]
   501a4:	csel	w1, w1, wzr, ne  // ne = any
   501a8:	str	w1, [sp, #228]
   501ac:	ldr	w1, [x19]
   501b0:	tst	x1, #0x380
   501b4:	b.eq	50228 <my_regprop@@Base+0x15f64>  // b.none
   501b8:	ldr	x0, [sp, #304]
   501bc:	and	w0, w0, #0xff
   501c0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   501c4:	ldr	x1, [x1, #4048]
   501c8:	ldrb	w0, [x1, w0, sxtw]
   501cc:	ldr	x1, [sp, #176]
   501d0:	b	50240 <my_regprop@@Base+0x15f7c>
   501d4:	ldr	w0, [sp, #168]
   501d8:	cmp	w0, #0x27
   501dc:	b.eq	501f4 <my_regprop@@Base+0x15f30>  // b.none
   501e0:	mov	w0, #0x1                   	// #1
   501e4:	str	w0, [sp, #232]
   501e8:	str	wzr, [sp, #212]
   501ec:	str	wzr, [sp, #228]
   501f0:	b	52028 <my_regprop@@Base+0x17d64>
   501f4:	ldr	x0, [sp, #176]
   501f8:	mov	w1, #0x73                  	// #115
   501fc:	strb	w1, [x0], #1
   50200:	mov	x1, #0x73                  	// #115
   50204:	str	x1, [sp, #304]
   50208:	mov	x1, #0x2                   	// #2
   5020c:	str	x1, [sp, #320]
   50210:	str	x0, [sp, #176]
   50214:	mov	w0, #0x1                   	// #1
   50218:	str	w0, [sp, #232]
   5021c:	str	wzr, [sp, #212]
   50220:	str	wzr, [sp, #228]
   50224:	b	52028 <my_regprop@@Base+0x17d64>
   50228:	sub	x1, x0, #0x41
   5022c:	cmp	x1, #0x19
   50230:	b.hi	52038 <my_regprop@@Base+0x17d74>  // b.pmore
   50234:	add	w0, w0, #0x20
   50238:	and	w0, w0, #0xff
   5023c:	ldr	x1, [sp, #176]
   50240:	strb	w0, [x1], #1
   50244:	str	x1, [sp, #176]
   50248:	b	4ed30 <my_regprop@@Base+0x14a6c>
   5024c:	ldr	x22, [sp, #176]
   50250:	mov	x24, x25
   50254:	b	5025c <my_regprop@@Base+0x15f98>
   50258:	ldr	x22, [sp, #176]
   5025c:	ldr	w0, [x19]
   50260:	tbz	w0, #2, 4fdf0 <my_regprop@@Base+0x15b2c>
   50264:	ldr	x2, [x19, #56]
   50268:	ldr	w1, [sp, #192]
   5026c:	cmp	w1, #0xf2
   50270:	ldr	x1, [sp, #312]
   50274:	ccmp	x2, x1, #0x0, eq  // eq = none
   50278:	b.ls	4fdf0 <my_regprop@@Base+0x15b2c>  // b.plast
   5027c:	cmp	x26, #0xf1
   50280:	b.ls	50308 <my_regprop@@Base+0x16044>  // b.plast
   50284:	ldr	w1, [x19, #192]
   50288:	cbnz	w1, 50334 <my_regprop@@Base+0x16070>
   5028c:	ubfx	x0, x0, #7, #3
   50290:	cmp	w0, #0x4
   50294:	b.eq	51bc0 <my_regprop@@Base+0x178fc>  // b.none
   50298:	sub	x0, x22, #0x1
   5029c:	ldr	x1, [sp, #184]
   502a0:	cmp	x1, x0
   502a4:	b.hi	5032c <my_regprop@@Base+0x16068>  // b.pmore
   502a8:	ldr	x1, [sp, #264]
   502ac:	add	x3, x1, #0x3
   502b0:	mov	w23, #0x0                   	// #0
   502b4:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   502b8:	ldr	x2, [x2, #3880]
   502bc:	ldrb	w1, [x0]
   502c0:	ldr	w1, [x2, x1, lsl #2]
   502c4:	tbz	w1, #21, 502e0 <my_regprop@@Base+0x1601c>
   502c8:	add	w23, w23, #0x1
   502cc:	and	w23, w23, #0xff
   502d0:	sub	x0, x0, #0x1
   502d4:	cmp	x0, x3
   502d8:	b.ne	502bc <my_regprop@@Base+0x15ff8>  // b.any
   502dc:	mov	x0, x3
   502e0:	ldr	x1, [sp, #184]
   502e4:	sub	x0, x0, x1
   502e8:	add	x22, x0, #0x1
   502ec:	cbz	x22, 51bc0 <my_regprop@@Base+0x178fc>
   502f0:	cbz	w23, 51bbc <my_regprop@@Base+0x178f8>
   502f4:	cmp	w23, #0x1
   502f8:	b.eq	505b4 <my_regprop@@Base+0x162f0>  // b.none
   502fc:	and	w0, w22, #0xff
   50300:	str	w0, [sp, #192]
   50304:	b	4ea74 <my_regprop@@Base+0x147b0>
   50308:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5030c:	add	x3, x3, #0xc10
   50310:	add	x3, x3, #0x928
   50314:	mov	w2, #0x38b5                	// #14517
   50318:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5031c:	add	x1, x1, #0xfb8
   50320:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   50324:	add	x0, x0, #0x6e0
   50328:	bl	58e0 <__assert_fail@plt>
   5032c:	mov	w23, #0x0                   	// #0
   50330:	b	502e0 <my_regprop@@Base+0x1601c>
   50334:	cbz	x22, 50388 <my_regprop@@Base+0x160c4>
   50338:	ldr	x0, [sp, #184]
   5033c:	cmp	x0, x22
   50340:	b.hi	503ac <my_regprop@@Base+0x160e8>  // b.pmore
   50344:	b.cs	5036c <my_regprop@@Base+0x160a8>  // b.hs, b.nlast
   50348:	ldr	x1, [sp, #184]
   5034c:	ldrb	w0, [x22, #-1]!
   50350:	and	w0, w0, #0xc0
   50354:	cmp	w0, #0x80
   50358:	ccmp	x1, x22, #0x2, eq  // eq = none
   5035c:	b.cc	5034c <my_regprop@@Base+0x16088>  // b.lo, b.ul, b.last
   50360:	ldr	x0, [sp, #184]
   50364:	cmp	x0, x22
   50368:	b.hi	51bc0 <my_regprop@@Base+0x178fc>  // b.pmore
   5036c:	mov	w23, #0x0                   	// #0
   50370:	adrp	x25, 91000 <boot_re@@Base+0x2f41c>
   50374:	ldr	x0, [x25, #4064]
   50378:	str	x0, [sp, #176]
   5037c:	str	x24, [sp, #192]
   50380:	ldr	x24, [sp, #184]
   50384:	b	50548 <my_regprop@@Base+0x16284>
   50388:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5038c:	add	x3, x3, #0xc10
   50390:	add	x3, x3, #0x938
   50394:	mov	w2, #0x636                 	// #1590
   50398:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   5039c:	add	x1, x1, #0xc80
   503a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   503a4:	add	x0, x0, #0xce8
   503a8:	bl	58e0 <__assert_fail@plt>
   503ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   503b0:	add	x3, x3, #0xc10
   503b4:	add	x3, x3, #0x938
   503b8:	mov	w2, #0x63c                 	// #1596
   503bc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   503c0:	add	x1, x1, #0xc80
   503c4:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   503c8:	add	x0, x0, #0x700
   503cc:	bl	58e0 <__assert_fail@plt>
   503d0:	ldr	x24, [sp, #192]
   503d4:	b	5058c <my_regprop@@Base+0x162c8>
   503d8:	and	w1, w0, #0xfe
   503dc:	cmp	w1, #0xc2
   503e0:	b.ne	50470 <my_regprop@@Base+0x161ac>  // b.any
   503e4:	ldrb	w1, [x22, #1]
   503e8:	and	w2, w1, #0xc0
   503ec:	cmp	w2, #0x80
   503f0:	b.ne	50428 <my_regprop@@Base+0x16164>  // b.any
   503f4:	lsl	w2, w0, #6
   503f8:	ubfiz	w0, w0, #6, #5
   503fc:	tst	x0, #0x700
   50400:	b.ne	5044c <my_regprop@@Base+0x16188>  // b.any
   50404:	and	w0, w1, #0x3f
   50408:	orr	w0, w0, w2
   5040c:	and	x0, x0, #0xff
   50410:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   50414:	ldr	x1, [x1, #3880]
   50418:	ldr	w0, [x1, x0, lsl #2]
   5041c:	tbnz	w0, #21, 50570 <my_regprop@@Base+0x162ac>
   50420:	ldr	x24, [sp, #192]
   50424:	b	5058c <my_regprop@@Base+0x162c8>
   50428:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5042c:	add	x3, x3, #0xc10
   50430:	add	x3, x3, #0x928
   50434:	mov	w2, #0x38db                	// #14555
   50438:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5043c:	add	x1, x1, #0xfb8
   50440:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   50444:	add	x0, x0, #0x710
   50448:	bl	58e0 <__assert_fail@plt>
   5044c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   50450:	add	x3, x3, #0xc10
   50454:	add	x3, x3, #0x928
   50458:	mov	w2, #0x38db                	// #14555
   5045c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   50460:	add	x1, x1, #0xfb8
   50464:	adrp	x0, 7b000 <boot_re@@Base+0x1941c>
   50468:	add	x0, x0, #0x878
   5046c:	bl	58e0 <__assert_fail@plt>
   50470:	ldr	x1, [sp, #256]
   50474:	ldr	x25, [x1]
   50478:	ldr	x1, [sp, #176]
   5047c:	ldrb	w2, [x1, w0, sxtw]
   50480:	and	x4, x2, #0xff
   50484:	add	x3, x22, w2, uxtb
   50488:	and	x1, x0, #0xff
   5048c:	cmp	x4, #0x1
   50490:	b.eq	504d0 <my_regprop@@Base+0x1620c>  // b.none
   50494:	sub	w2, w2, #0x2
   50498:	mov	w1, #0x1f                  	// #31
   5049c:	asr	w2, w1, w2
   504a0:	cmp	x4, #0x7
   504a4:	csel	w1, w2, wzr, cc  // cc = lo, ul, last
   504a8:	and	w0, w0, w1
   504ac:	sxtw	x1, w0
   504b0:	add	x0, x22, #0x1
   504b4:	cmp	x3, x0
   504b8:	b.ls	504d0 <my_regprop@@Base+0x1620c>  // b.plast
   504bc:	ldrb	w2, [x0], #1
   504c0:	bfi	x2, x1, #6, #58
   504c4:	mov	x1, x2
   504c8:	cmp	x3, x0
   504cc:	b.ne	504bc <my_regprop@@Base+0x161f8>  // b.any
   504d0:	mov	x0, x25
   504d4:	bl	59d0 <Perl__invlist_search@plt>
   504d8:	cbz	x25, 504ec <my_regprop@@Base+0x16228>
   504dc:	tbnz	x0, #63, 50588 <my_regprop@@Base+0x162c4>
   504e0:	tbz	w0, #0, 50570 <my_regprop@@Base+0x162ac>
   504e4:	ldr	x24, [sp, #192]
   504e8:	b	5058c <my_regprop@@Base+0x162c8>
   504ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   504f0:	add	x3, x3, #0xc10
   504f4:	add	x3, x3, #0x118
   504f8:	mov	w2, #0x3f                  	// #63
   504fc:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   50500:	add	x1, x1, #0x550
   50504:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   50508:	add	x0, x0, #0x568
   5050c:	bl	58e0 <__assert_fail@plt>
   50510:	sub	x1, x22, #0x1
   50514:	ldurb	w0, [x22, #-1]
   50518:	and	w0, w0, #0xc0
   5051c:	cmp	w0, #0x80
   50520:	b.ne	50534 <my_regprop@@Base+0x16270>  // b.any
   50524:	ldrb	w0, [x1, #-1]!
   50528:	and	w0, w0, #0xc0
   5052c:	cmp	w0, #0x80
   50530:	b.eq	50524 <my_regprop@@Base+0x16260>  // b.none
   50534:	add	w23, w23, #0x1
   50538:	and	w23, w23, #0xff
   5053c:	cmp	x24, x1
   50540:	b.hi	51bc0 <my_regprop@@Base+0x178fc>  // b.pmore
   50544:	mov	x22, x1
   50548:	ldrb	w0, [x22]
   5054c:	tbnz	w0, #7, 503d8 <my_regprop@@Base+0x16114>
   50550:	ldr	w1, [x19]
   50554:	ubfx	x1, x1, #7, #3
   50558:	cmp	w1, #0x4
   5055c:	b.eq	50580 <my_regprop@@Base+0x162bc>  // b.none
   50560:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   50564:	ldr	x1, [x1, #3880]
   50568:	ldr	w0, [x1, w0, sxtw #2]
   5056c:	tbz	w0, #21, 503d0 <my_regprop@@Base+0x1610c>
   50570:	cmp	x24, x22
   50574:	b.ne	50510 <my_regprop@@Base+0x1624c>  // b.any
   50578:	sub	x1, x22, #0x1
   5057c:	b	50534 <my_regprop@@Base+0x16270>
   50580:	ldr	x24, [sp, #192]
   50584:	b	5058c <my_regprop@@Base+0x162c8>
   50588:	ldr	x24, [sp, #192]
   5058c:	ldr	x2, [sp, #184]
   50590:	cmp	x2, x22
   50594:	b.hi	51bc0 <my_regprop@@Base+0x178fc>  // b.pmore
   50598:	ldrb	w1, [x22]
   5059c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   505a0:	ldr	x0, [x0, #4064]
   505a4:	ldrb	w1, [x0, w1, sxtw]
   505a8:	sub	x0, x22, x2
   505ac:	add	x22, x1, x0
   505b0:	b	502ec <my_regprop@@Base+0x16028>
   505b4:	str	x24, [sp, #312]
   505b8:	mov	x26, x22
   505bc:	b	51bc0 <my_regprop@@Base+0x178fc>
   505c0:	ldr	w0, [x19]
   505c4:	ubfx	x0, x0, #7, #3
   505c8:	cmp	w0, #0x1
   505cc:	b.eq	50774 <my_regprop@@Base+0x164b0>  // b.none
   505d0:	ldr	w0, [sp, #224]
   505d4:	cmp	w0, #0x0
   505d8:	mov	w0, #0x2c                  	// #44
   505dc:	ldr	w1, [sp, #168]
   505e0:	csel	w0, w1, w0, eq  // eq = none
   505e4:	str	w0, [sp, #168]
   505e8:	ldr	x1, [x19, #96]
   505ec:	ldr	x0, [sp, #288]
   505f0:	add	x0, x1, x0, lsl #2
   505f4:	ldrb	w1, [sp, #168]
   505f8:	strb	w1, [x0, #1]
   505fc:	ldr	x1, [x19, #96]
   50600:	ldr	x0, [sp, #288]
   50604:	lsl	x0, x0, #2
   50608:	strb	w26, [x1, x0]
   5060c:	ldr	x0, [x19, #104]
   50610:	add	x22, x0, x22
   50614:	str	x22, [x19, #104]
   50618:	ldr	w1, [x19, #192]
   5061c:	mov	x0, #0x1                   	// #1
   50620:	cbz	w1, 50690 <my_regprop@@Base+0x163cc>
   50624:	ldr	x1, [sp, #304]
   50628:	cmp	x1, #0x7f
   5062c:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   50630:	mov	x0, #0x2                   	// #2
   50634:	cmp	x1, #0x7ff
   50638:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   5063c:	mov	x0, #0x3                   	// #3
   50640:	mov	x2, #0xffff                	// #65535
   50644:	cmp	x1, x2
   50648:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   5064c:	mov	x0, #0x4                   	// #4
   50650:	mov	x2, #0x1fffff              	// #2097151
   50654:	cmp	x1, x2
   50658:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   5065c:	mov	x0, #0x5                   	// #5
   50660:	mov	x2, #0x3ffffff             	// #67108863
   50664:	cmp	x1, x2
   50668:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   5066c:	mov	x0, #0x6                   	// #6
   50670:	mov	x2, #0x7fffffff            	// #2147483647
   50674:	cmp	x1, x2
   50678:	b.ls	50690 <my_regprop@@Base+0x163cc>  // b.plast
   5067c:	mov	x0, #0xfffffffff           	// #68719476735
   50680:	cmp	x1, x0
   50684:	mov	x0, #0x7                   	// #7
   50688:	mov	x1, #0xd                   	// #13
   5068c:	csel	x0, x0, x1, ls  // ls = plast
   50690:	cmp	x0, x26
   50694:	ldr	w0, [sp, #212]
   50698:	csel	w0, w0, wzr, cs  // cs = hs, nlast
   5069c:	orr	w0, w0, #0x1
   506a0:	and	w1, w0, #0xff
   506a4:	ldr	w0, [sp, #272]
   506a8:	orr	w0, w0, w1
   506ac:	str	w0, [sp, #272]
   506b0:	b	51dfc <my_regprop@@Base+0x17b38>
   506b4:	ldr	w0, [sp, #168]
   506b8:	cmp	w0, #0x27
   506bc:	b.eq	506d0 <my_regprop@@Base+0x1640c>  // b.none
   506c0:	cmp	w0, #0x25
   506c4:	ldr	w0, [sp, #228]
   506c8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   506cc:	b.eq	4fe34 <my_regprop@@Base+0x15b70>  // b.none
   506d0:	ldr	w0, [x19, #192]
   506d4:	mov	w1, #0x29                  	// #41
   506d8:	str	w1, [sp, #168]
   506dc:	cbz	w0, 505e8 <my_regprop@@Base+0x16324>
   506e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   506e4:	add	x3, x3, #0xc10
   506e8:	add	x3, x3, #0x928
   506ec:	mov	w2, #0x3954                	// #14676
   506f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   506f4:	add	x1, x1, #0xfb8
   506f8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   506fc:	add	x0, x0, #0x150
   50700:	bl	58e0 <__assert_fail@plt>
   50704:	ldr	w0, [sp, #228]
   50708:	cmp	w0, #0x0
   5070c:	mov	w0, #0x2a                  	// #42
   50710:	ldr	w1, [sp, #168]
   50714:	csel	w0, w1, w0, eq  // eq = none
   50718:	str	w0, [sp, #168]
   5071c:	b	505e8 <my_regprop@@Base+0x16324>
   50720:	ldr	w0, [sp, #228]
   50724:	cbnz	w0, 50734 <my_regprop@@Base+0x16470>
   50728:	mov	w0, #0x1                   	// #1
   5072c:	strb	w0, [x19, #384]
   50730:	b	505e8 <my_regprop@@Base+0x16324>
   50734:	ldr	x1, [x19, #96]
   50738:	ldr	x0, [sp, #288]
   5073c:	add	x0, x1, x0, lsl #2
   50740:	ldrb	w0, [x0, #4]
   50744:	and	w0, w0, #0xffffffdf
   50748:	mov	w1, #0x2e                  	// #46
   5074c:	str	w1, [sp, #168]
   50750:	cmp	w0, #0x53
   50754:	b.eq	505e8 <my_regprop@@Base+0x16324>  // b.none
   50758:	ldr	x0, [sp, #304]
   5075c:	and	x0, x0, #0xffffffffffffffdf
   50760:	cmp	x0, #0x53
   50764:	b.eq	505e8 <my_regprop@@Base+0x16324>  // b.none
   50768:	mov	w0, #0x27                  	// #39
   5076c:	str	w0, [sp, #168]
   50770:	b	4fe4c <my_regprop@@Base+0x15b88>
   50774:	mov	w0, #0x24                  	// #36
   50778:	str	w0, [sp, #168]
   5077c:	b	505e8 <my_regprop@@Base+0x16324>
   50780:	ubfx	x2, x2, #2, #32
   50784:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   50788:	add	x1, x1, #0x888
   5078c:	mov	x0, x20
   50790:	bl	5420 <Perl_croak@plt>
   50794:	ldr	x1, [x19, #24]
   50798:	cbz	x1, 507a8 <my_regprop@@Base+0x164e4>
   5079c:	mov	w2, #0xb                   	// #11
   507a0:	mov	x0, x20
   507a4:	bl	54b0 <Perl_save_pushptr@plt>
   507a8:	ldr	x1, [x19, #160]
   507ac:	cbz	x1, 507bc <my_regprop@@Base+0x164f8>
   507b0:	mov	w2, #0xa                   	// #10
   507b4:	mov	x0, x20
   507b8:	bl	54b0 <Perl_save_pushptr@plt>
   507bc:	ldr	x1, [x19, #168]
   507c0:	cbz	x1, 507d0 <my_regprop@@Base+0x1650c>
   507c4:	mov	w2, #0xa                   	// #10
   507c8:	mov	x0, x20
   507cc:	bl	54b0 <Perl_save_pushptr@plt>
   507d0:	ldr	x0, [x19, #64]
   507d4:	ldr	x1, [x19, #72]
   507d8:	sub	x1, x0, x1
   507dc:	ldr	x0, [x19, #80]
   507e0:	add	x0, x0, x1
   507e4:	ldr	x1, [x19, #16]
   507e8:	cmp	x0, x1
   507ec:	b.hi	50834 <my_regprop@@Base+0x16570>  // b.pmore
   507f0:	ldr	x5, [x19, #8]
   507f4:	sub	x7, x1, x0
   507f8:	subs	x4, x0, x5
   507fc:	b.mi	50844 <my_regprop@@Base+0x16580>  // b.first
   50800:	ldr	w2, [x19, #192]
   50804:	cmp	w2, #0x0
   50808:	cset	w3, ne  // ne = any
   5080c:	cmp	x0, x1
   50810:	csel	x0, x0, x1, ls  // ls = plast
   50814:	str	x0, [sp]
   50818:	mov	w6, w3
   5081c:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   50820:	add	x2, x2, #0x158
   50824:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   50828:	add	x1, x1, #0x3a8
   5082c:	mov	x0, x20
   50830:	bl	5420 <Perl_croak@plt>
   50834:	ldr	x5, [x19, #8]
   50838:	sub	x4, x1, x5
   5083c:	mov	x7, #0x0                   	// #0
   50840:	b	50800 <my_regprop@@Base+0x1653c>
   50844:	ldr	x6, [x19, #48]
   50848:	ldr	x5, [x19, #56]
   5084c:	sub	w5, w5, w6
   50850:	mov	w3, #0x3995                	// #14741
   50854:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50858:	add	x2, x2, #0xfb8
   5085c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50860:	add	x1, x1, #0x870
   50864:	mov	x0, x20
   50868:	bl	5420 <Perl_croak@plt>
   5086c:	ldr	x2, [x19, #96]
   50870:	ldr	x1, [sp, #288]
   50874:	add	x1, x2, x1, lsl #2
   50878:	ldrb	w1, [x1, #1]
   5087c:	cmp	w1, #0x2
   50880:	b.eq	51e84 <my_regprop@@Base+0x17bc0>  // b.none
   50884:	add	x21, x0, #0x1
   50888:	ldrb	w1, [x0, #1]
   5088c:	sub	w1, w1, #0x30
   50890:	cmp	w1, #0x9
   50894:	b.hi	508c4 <my_regprop@@Base+0x16600>  // b.pmore
   50898:	mov	x1, x21
   5089c:	mov	x4, x1
   508a0:	ldrb	w2, [x1, #1]!
   508a4:	sub	w3, w2, #0x30
   508a8:	cmp	w3, #0x9
   508ac:	b.ls	5089c <my_regprop@@Base+0x165d8>  // b.plast
   508b0:	cmp	w2, #0x2c
   508b4:	b.eq	50970 <my_regprop@@Base+0x166ac>  // b.none
   508b8:	ldrb	w1, [x1]
   508bc:	cmp	w1, #0x7d
   508c0:	b.eq	51e84 <my_regprop@@Base+0x17bc0>  // b.none
   508c4:	ldrb	w1, [x19, #385]
   508c8:	cbz	w1, 509a4 <my_regprop@@Base+0x166e0>
   508cc:	str	x21, [x19, #64]
   508d0:	ldr	x1, [x19, #24]
   508d4:	cbz	x1, 508e4 <my_regprop@@Base+0x16620>
   508d8:	mov	w2, #0xb                   	// #11
   508dc:	mov	x0, x20
   508e0:	bl	54b0 <Perl_save_pushptr@plt>
   508e4:	ldr	x1, [x19, #160]
   508e8:	cbz	x1, 508f8 <my_regprop@@Base+0x16634>
   508ec:	mov	w2, #0xa                   	// #10
   508f0:	mov	x0, x20
   508f4:	bl	54b0 <Perl_save_pushptr@plt>
   508f8:	ldr	x1, [x19, #168]
   508fc:	cbz	x1, 5090c <my_regprop@@Base+0x16648>
   50900:	mov	w2, #0xa                   	// #10
   50904:	mov	x0, x20
   50908:	bl	54b0 <Perl_save_pushptr@plt>
   5090c:	ldr	x0, [x19, #64]
   50910:	ldr	x1, [x19, #72]
   50914:	sub	x1, x0, x1
   50918:	ldr	x0, [x19, #80]
   5091c:	add	x0, x0, x1
   50920:	ldr	x1, [x19, #16]
   50924:	cmp	x0, x1
   50928:	b.hi	50ab8 <my_regprop@@Base+0x167f4>  // b.pmore
   5092c:	ldr	x5, [x19, #8]
   50930:	sub	x7, x1, x0
   50934:	subs	x4, x0, x5
   50938:	b.mi	50ac8 <my_regprop@@Base+0x16804>  // b.first
   5093c:	ldr	w2, [x19, #192]
   50940:	cmp	w2, #0x0
   50944:	cset	w3, ne  // ne = any
   50948:	cmp	x0, x1
   5094c:	csel	x0, x0, x1, ls  // ls = plast
   50950:	str	x0, [sp]
   50954:	mov	w6, w3
   50958:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   5095c:	add	x2, x2, #0x3f0
   50960:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   50964:	add	x1, x1, #0x3a8
   50968:	mov	x0, x20
   5096c:	bl	5420 <Perl_croak@plt>
   50970:	add	x4, x4, #0x2
   50974:	ldrb	w1, [x1, #1]
   50978:	sub	w1, w1, #0x30
   5097c:	cmp	w1, #0x9
   50980:	b.hi	5099c <my_regprop@@Base+0x166d8>  // b.pmore
   50984:	ldrb	w1, [x4, #1]!
   50988:	sub	w1, w1, #0x30
   5098c:	cmp	w1, #0x9
   50990:	b.ls	50984 <my_regprop@@Base+0x166c0>  // b.plast
   50994:	mov	x1, x4
   50998:	b	508b8 <my_regprop@@Base+0x165f4>
   5099c:	mov	x1, x4
   509a0:	b	508b8 <my_regprop@@Base+0x165f4>
   509a4:	ldr	x1, [x19, #56]
   509a8:	bl	26408 <my_regexec@@Base+0x2f14>
   509ac:	and	w0, w0, #0xff
   509b0:	cbnz	w0, 508cc <my_regprop@@Base+0x16608>
   509b4:	ldr	x0, [x19, #72]
   509b8:	cbz	x0, 50af0 <my_regprop@@Base+0x1682c>
   509bc:	sub	x21, x21, x0
   509c0:	ldr	x0, [x19, #80]
   509c4:	add	x21, x0, x21
   509c8:	ldr	x0, [x19, #8]
   509cc:	sub	x0, x21, x0
   509d0:	ldr	x1, [x19, #136]
   509d4:	cmp	x0, x1
   509d8:	b.le	51e84 <my_regprop@@Base+0x17bc0>
   509dc:	ldr	x0, [x20, #224]
   509e0:	cbz	x0, 50a08 <my_regprop@@Base+0x16744>
   509e4:	ldr	x0, [x0, #64]
   509e8:	cmp	x0, #0x0
   509ec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   509f0:	ldr	x1, [x1, #3984]
   509f4:	ccmp	x0, x1, #0x4, ne  // ne = any
   509f8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   509fc:	ldr	x1, [x1, #3832]
   50a00:	ccmp	x0, x1, #0x4, ne  // ne = any
   50a04:	b.ne	50b10 <my_regprop@@Base+0x1684c>  // b.any
   50a08:	ldr	w0, [x19, #192]
   50a0c:	cmp	w0, #0x0
   50a10:	cset	w3, ne  // ne = any
   50a14:	ldr	x0, [x19, #64]
   50a18:	add	x0, x0, #0x1
   50a1c:	ldr	x1, [x19, #72]
   50a20:	sub	x1, x0, x1
   50a24:	ldr	x0, [x19, #80]
   50a28:	add	x0, x0, x1
   50a2c:	ldr	x1, [x19, #16]
   50a30:	cmp	x0, x1
   50a34:	b.ls	50b58 <my_regprop@@Base+0x16894>  // b.plast
   50a38:	ldr	x5, [x19, #8]
   50a3c:	sub	x4, x1, x5
   50a40:	mov	x7, #0x0                   	// #0
   50a44:	cmp	x0, x1
   50a48:	csel	x0, x0, x1, ls  // ls = plast
   50a4c:	str	x0, [sp]
   50a50:	mov	w6, w3
   50a54:	adrp	x2, 7b000 <boot_re@@Base+0x1941c>
   50a58:	add	x2, x2, #0x618
   50a5c:	mov	w1, #0x14                  	// #20
   50a60:	mov	x0, x20
   50a64:	bl	5150 <Perl_ck_warner@plt>
   50a68:	ldr	x1, [x19, #72]
   50a6c:	cbz	x1, 51e84 <my_regprop@@Base+0x17bc0>
   50a70:	ldr	x0, [x19, #64]
   50a74:	add	x0, x0, #0x1
   50a78:	sub	x0, x0, x1
   50a7c:	ldr	x1, [x19, #80]
   50a80:	add	x1, x1, x0
   50a84:	ldr	x2, [x19, #8]
   50a88:	sub	x3, x1, x2
   50a8c:	ldr	x0, [x19, #136]
   50a90:	cmp	x3, x0
   50a94:	b.le	51e84 <my_regprop@@Base+0x17bc0>
   50a98:	ldr	x0, [x19, #16]
   50a9c:	cmp	x0, x1
   50aa0:	csel	x0, x0, x1, ls  // ls = plast
   50aa4:	cmp	x2, x0
   50aa8:	csel	x0, x2, x0, hi  // hi = pmore
   50aac:	sub	x0, x0, x2
   50ab0:	str	x0, [x19, #136]
   50ab4:	b	51e84 <my_regprop@@Base+0x17bc0>
   50ab8:	ldr	x5, [x19, #8]
   50abc:	sub	x4, x1, x5
   50ac0:	mov	x7, #0x0                   	// #0
   50ac4:	b	5093c <my_regprop@@Base+0x16678>
   50ac8:	ldr	x6, [x19, #48]
   50acc:	ldr	x5, [x19, #56]
   50ad0:	sub	w5, w5, w6
   50ad4:	mov	w3, #0x39a4                	// #14756
   50ad8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50adc:	add	x2, x2, #0xfb8
   50ae0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50ae4:	add	x1, x1, #0x870
   50ae8:	mov	x0, x20
   50aec:	bl	5420 <Perl_croak@plt>
   50af0:	mov	x4, x21
   50af4:	mov	w3, #0x39a6                	// #14758
   50af8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50afc:	add	x2, x2, #0xfb8
   50b00:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50b04:	add	x1, x1, #0xab8
   50b08:	mov	x0, x20
   50b0c:	bl	5420 <Perl_croak@plt>
   50b10:	ldrb	w0, [x0, #13]
   50b14:	tbz	w0, #1, 50a08 <my_regprop@@Base+0x16744>
   50b18:	ldr	x1, [x19, #24]
   50b1c:	cbz	x1, 50b2c <my_regprop@@Base+0x16868>
   50b20:	mov	w2, #0xb                   	// #11
   50b24:	mov	x0, x20
   50b28:	bl	54b0 <Perl_save_pushptr@plt>
   50b2c:	ldr	x1, [x19, #160]
   50b30:	cbz	x1, 50b40 <my_regprop@@Base+0x1687c>
   50b34:	mov	w2, #0xa                   	// #10
   50b38:	mov	x0, x20
   50b3c:	bl	54b0 <Perl_save_pushptr@plt>
   50b40:	ldr	x1, [x19, #168]
   50b44:	cbz	x1, 50a08 <my_regprop@@Base+0x16744>
   50b48:	mov	w2, #0xa                   	// #10
   50b4c:	mov	x0, x20
   50b50:	bl	54b0 <Perl_save_pushptr@plt>
   50b54:	b	50a08 <my_regprop@@Base+0x16744>
   50b58:	ldr	x5, [x19, #8]
   50b5c:	subs	x4, x0, x5
   50b60:	b.mi	50b6c <my_regprop@@Base+0x168a8>  // b.first
   50b64:	sub	x7, x1, x0
   50b68:	b	50a44 <my_regprop@@Base+0x16780>
   50b6c:	ldr	x6, [x19, #48]
   50b70:	ldr	x5, [x19, #56]
   50b74:	sub	w5, w5, w6
   50b78:	mov	w3, #0x39a6                	// #14758
   50b7c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50b80:	add	x2, x2, #0xfb8
   50b84:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50b88:	add	x1, x1, #0x870
   50b8c:	mov	x0, x20
   50b90:	bl	5420 <Perl_croak@plt>
   50b94:	ldr	x21, [x19, #16]
   50b98:	ldr	x0, [x19, #8]
   50b9c:	sub	x21, x21, x0
   50ba0:	ldr	x1, [x19, #24]
   50ba4:	cbz	x1, 50bb4 <my_regprop@@Base+0x168f0>
   50ba8:	mov	w2, #0xb                   	// #11
   50bac:	mov	x0, x20
   50bb0:	bl	54b0 <Perl_save_pushptr@plt>
   50bb4:	ldr	x1, [x19, #160]
   50bb8:	cbz	x1, 50bc8 <my_regprop@@Base+0x16904>
   50bbc:	mov	w2, #0xa                   	// #10
   50bc0:	mov	x0, x20
   50bc4:	bl	54b0 <Perl_save_pushptr@plt>
   50bc8:	ldr	x1, [x19, #168]
   50bcc:	cbz	x1, 50bdc <my_regprop@@Base+0x16918>
   50bd0:	mov	w2, #0xa                   	// #10
   50bd4:	mov	x0, x20
   50bd8:	bl	54b0 <Perl_save_pushptr@plt>
   50bdc:	cmp	x21, #0x7f
   50be0:	b.le	50c18 <my_regprop@@Base+0x16954>
   50be4:	mov	x21, #0x75                  	// #117
   50be8:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   50bec:	add	x6, x6, #0xfe0
   50bf0:	ldr	w0, [x19, #192]
   50bf4:	cmp	w0, #0x0
   50bf8:	ldr	x5, [x19, #8]
   50bfc:	mov	x4, x21
   50c00:	cset	w3, ne  // ne = any
   50c04:	ldrsw	x2, [sp, #272]
   50c08:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   50c0c:	add	x1, x1, #0x170
   50c10:	mov	x0, x20
   50c14:	bl	5420 <Perl_croak@plt>
   50c18:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   50c1c:	add	x6, x6, #0x20
   50c20:	b	50bf0 <my_regprop@@Base+0x1692c>
   50c24:	ldrb	w1, [x23, #1]
   50c28:	sub	w0, w1, #0x30
   50c2c:	cmp	w0, #0x9
   50c30:	b.hi	515c0 <my_regprop@@Base+0x172fc>  // b.pmore
   50c34:	add	x0, x23, #0x1
   50c38:	mov	x2, x0
   50c3c:	mov	x5, x2
   50c40:	ldrb	w3, [x2, #1]!
   50c44:	sub	w4, w3, #0x30
   50c48:	cmp	w4, #0x9
   50c4c:	b.ls	50c3c <my_regprop@@Base+0x16978>  // b.plast
   50c50:	cmp	w3, #0x2c
   50c54:	b.eq	50c70 <my_regprop@@Base+0x169ac>  // b.none
   50c58:	ldrb	w2, [x2]
   50c5c:	cmp	w2, #0x7d
   50c60:	b.ne	515c0 <my_regprop@@Base+0x172fc>  // b.any
   50c64:	mov	x26, x0
   50c68:	mov	x24, #0x0                   	// #0
   50c6c:	b	50cb8 <my_regprop@@Base+0x169f4>
   50c70:	add	x5, x5, #0x2
   50c74:	ldrb	w2, [x2, #1]
   50c78:	sub	w2, w2, #0x30
   50c7c:	cmp	w2, #0x9
   50c80:	b.hi	50c9c <my_regprop@@Base+0x169d8>  // b.pmore
   50c84:	ldrb	w2, [x5, #1]!
   50c88:	sub	w2, w2, #0x30
   50c8c:	cmp	w2, #0x9
   50c90:	b.ls	50c84 <my_regprop@@Base+0x169c0>  // b.plast
   50c94:	mov	x2, x5
   50c98:	b	50c58 <my_regprop@@Base+0x16994>
   50c9c:	mov	x2, x5
   50ca0:	b	50c58 <my_regprop@@Base+0x16994>
   50ca4:	ldrb	w1, [x26, #1]!
   50ca8:	sub	w2, w1, #0x30
   50cac:	cmp	w1, #0x2c
   50cb0:	ccmp	w2, #0x9, #0x0, ne  // ne = any
   50cb4:	b.hi	50ccc <my_regprop@@Base+0x16a08>  // b.pmore
   50cb8:	cmp	w1, #0x2c
   50cbc:	b.ne	50ca4 <my_regprop@@Base+0x169e0>  // b.any
   50cc0:	cbnz	x24, 515c0 <my_regprop@@Base+0x172fc>
   50cc4:	mov	x24, x26
   50cc8:	b	50ca4 <my_regprop@@Base+0x169e0>
   50ccc:	cmp	w1, #0x7d
   50cd0:	b.ne	515c0 <my_regprop@@Base+0x172fc>  // b.any
   50cd4:	cmp	x24, #0x0
   50cd8:	csel	x24, x24, x26, ne  // ne = any
   50cdc:	str	x0, [x19, #64]
   50ce0:	ldrb	w1, [x23, #1]
   50ce4:	sub	w1, w1, #0x30
   50ce8:	mov	w25, #0x0                   	// #0
   50cec:	cmp	w1, #0x9
   50cf0:	b.ls	50dd0 <my_regprop@@Base+0x16b0c>  // b.plast
   50cf4:	ldrb	w0, [x24]
   50cf8:	cmp	w0, #0x2c
   50cfc:	b.eq	50fbc <my_regprop@@Base+0x16cf8>  // b.none
   50d00:	ldr	x0, [x19, #64]
   50d04:	ldrb	w1, [x0]
   50d08:	sub	w1, w1, #0x30
   50d0c:	cmp	w1, #0x9
   50d10:	b.hi	51a38 <my_regprop@@Base+0x17774>  // b.pmore
   50d14:	ldr	x1, [x19, #56]
   50d18:	str	x1, [sp, #336]
   50d1c:	add	x2, sp, #0x150
   50d20:	add	x1, sp, #0x148
   50d24:	bl	4f20 <Perl_grok_atoUV@plt>
   50d28:	and	w0, w0, #0xff
   50d2c:	cbnz	w0, 50ffc <my_regprop@@Base+0x16d38>
   50d30:	ldr	x1, [x19, #24]
   50d34:	cbz	x1, 50d44 <my_regprop@@Base+0x16a80>
   50d38:	mov	w2, #0xb                   	// #11
   50d3c:	mov	x0, x20
   50d40:	bl	54b0 <Perl_save_pushptr@plt>
   50d44:	ldr	x1, [x19, #160]
   50d48:	cbz	x1, 50d58 <my_regprop@@Base+0x16a94>
   50d4c:	mov	w2, #0xa                   	// #10
   50d50:	mov	x0, x20
   50d54:	bl	54b0 <Perl_save_pushptr@plt>
   50d58:	ldr	x1, [x19, #168]
   50d5c:	cbz	x1, 50d6c <my_regprop@@Base+0x16aa8>
   50d60:	mov	w2, #0xa                   	// #10
   50d64:	mov	x0, x20
   50d68:	bl	54b0 <Perl_save_pushptr@plt>
   50d6c:	ldr	x0, [x19, #64]
   50d70:	ldr	x1, [x19, #72]
   50d74:	sub	x1, x0, x1
   50d78:	ldr	x0, [x19, #80]
   50d7c:	add	x0, x0, x1
   50d80:	ldr	x1, [x19, #16]
   50d84:	cmp	x0, x1
   50d88:	b.hi	50fc4 <my_regprop@@Base+0x16d00>  // b.pmore
   50d8c:	ldr	x5, [x19, #8]
   50d90:	sub	x7, x1, x0
   50d94:	subs	x4, x0, x5
   50d98:	b.mi	50fd4 <my_regprop@@Base+0x16d10>  // b.first
   50d9c:	ldr	w2, [x19, #192]
   50da0:	cmp	w2, #0x0
   50da4:	cset	w3, ne  // ne = any
   50da8:	cmp	x0, x1
   50dac:	csel	x0, x0, x1, ls  // ls = plast
   50db0:	str	x0, [sp]
   50db4:	mov	w6, w3
   50db8:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   50dbc:	add	x2, x2, #0x1b8
   50dc0:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   50dc4:	add	x1, x1, #0x3a8
   50dc8:	mov	x0, x20
   50dcc:	bl	5420 <Perl_croak@plt>
   50dd0:	ldr	x1, [x19, #56]
   50dd4:	str	x1, [sp, #336]
   50dd8:	add	x2, sp, #0x150
   50ddc:	add	x1, sp, #0x148
   50de0:	bl	4f20 <Perl_grok_atoUV@plt>
   50de4:	and	w0, w0, #0xff
   50de8:	cbnz	w0, 50ec4 <my_regprop@@Base+0x16c00>
   50dec:	ldr	x1, [x19, #24]
   50df0:	cbz	x1, 50e00 <my_regprop@@Base+0x16b3c>
   50df4:	mov	w2, #0xb                   	// #11
   50df8:	mov	x0, x20
   50dfc:	bl	54b0 <Perl_save_pushptr@plt>
   50e00:	ldr	x1, [x19, #160]
   50e04:	cbz	x1, 50e14 <my_regprop@@Base+0x16b50>
   50e08:	mov	w2, #0xa                   	// #10
   50e0c:	mov	x0, x20
   50e10:	bl	54b0 <Perl_save_pushptr@plt>
   50e14:	ldr	x1, [x19, #168]
   50e18:	cbz	x1, 50e28 <my_regprop@@Base+0x16b64>
   50e1c:	mov	w2, #0xa                   	// #10
   50e20:	mov	x0, x20
   50e24:	bl	54b0 <Perl_save_pushptr@plt>
   50e28:	ldr	x0, [x19, #64]
   50e2c:	ldr	x1, [x19, #72]
   50e30:	sub	x1, x0, x1
   50e34:	ldr	x0, [x19, #80]
   50e38:	add	x0, x0, x1
   50e3c:	ldr	x1, [x19, #16]
   50e40:	cmp	x0, x1
   50e44:	b.hi	50e8c <my_regprop@@Base+0x16bc8>  // b.pmore
   50e48:	ldr	x5, [x19, #8]
   50e4c:	sub	x7, x1, x0
   50e50:	subs	x4, x0, x5
   50e54:	b.mi	50e9c <my_regprop@@Base+0x16bd8>  // b.first
   50e58:	ldr	w2, [x19, #192]
   50e5c:	cmp	w2, #0x0
   50e60:	cset	w3, ne  // ne = any
   50e64:	cmp	x0, x1
   50e68:	csel	x0, x0, x1, ls  // ls = plast
   50e6c:	str	x0, [sp]
   50e70:	mov	w6, w3
   50e74:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   50e78:	add	x2, x2, #0x1b8
   50e7c:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   50e80:	add	x1, x1, #0x3a8
   50e84:	mov	x0, x20
   50e88:	bl	5420 <Perl_croak@plt>
   50e8c:	ldr	x5, [x19, #8]
   50e90:	sub	x4, x1, x5
   50e94:	mov	x7, #0x0                   	// #0
   50e98:	b	50e58 <my_regprop@@Base+0x16b94>
   50e9c:	ldr	x6, [x19, #48]
   50ea0:	ldr	x5, [x19, #56]
   50ea4:	sub	w5, w5, w6
   50ea8:	mov	w3, #0x30c5                	// #12485
   50eac:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50eb0:	add	x2, x2, #0xfb8
   50eb4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50eb8:	add	x1, x1, #0x870
   50ebc:	mov	x0, x20
   50ec0:	bl	5420 <Perl_croak@plt>
   50ec4:	ldr	x25, [sp, #328]
   50ec8:	mov	x0, #0xfffe                	// #65534
   50ecc:	cmp	x25, x0
   50ed0:	b.ls	50cf4 <my_regprop@@Base+0x16a30>  // b.plast
   50ed4:	ldr	x1, [x19, #24]
   50ed8:	cbz	x1, 50ee8 <my_regprop@@Base+0x16c24>
   50edc:	mov	w2, #0xb                   	// #11
   50ee0:	mov	x0, x20
   50ee4:	bl	54b0 <Perl_save_pushptr@plt>
   50ee8:	ldr	x1, [x19, #160]
   50eec:	cbz	x1, 50efc <my_regprop@@Base+0x16c38>
   50ef0:	mov	w2, #0xa                   	// #10
   50ef4:	mov	x0, x20
   50ef8:	bl	54b0 <Perl_save_pushptr@plt>
   50efc:	ldr	x1, [x19, #168]
   50f00:	cbz	x1, 50f10 <my_regprop@@Base+0x16c4c>
   50f04:	mov	w2, #0xa                   	// #10
   50f08:	mov	x0, x20
   50f0c:	bl	54b0 <Perl_save_pushptr@plt>
   50f10:	ldr	x0, [x19, #64]
   50f14:	ldr	x1, [x19, #72]
   50f18:	sub	x1, x0, x1
   50f1c:	ldr	x0, [x19, #80]
   50f20:	add	x0, x0, x1
   50f24:	ldr	x2, [x19, #16]
   50f28:	cmp	x0, x2
   50f2c:	b.hi	50f84 <my_regprop@@Base+0x16cc0>  // b.pmore
   50f30:	ldr	x7, [x19, #8]
   50f34:	subs	x4, x0, x7
   50f38:	b.mi	50f94 <my_regprop@@Base+0x16cd0>  // b.first
   50f3c:	mov	x6, x4
   50f40:	sub	x3, x2, x0
   50f44:	ldr	w1, [x19, #192]
   50f48:	cmp	w1, #0x0
   50f4c:	cset	w1, ne  // ne = any
   50f50:	cmp	x0, x2
   50f54:	csel	x0, x0, x2, ls  // ls = plast
   50f58:	str	x0, [sp, #16]
   50f5c:	str	x3, [sp, #8]
   50f60:	str	w1, [sp]
   50f64:	mov	w5, w1
   50f68:	mov	w4, #0xfffe                	// #65534
   50f6c:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   50f70:	add	x3, x3, #0x5d8
   50f74:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   50f78:	add	x2, x2, #0x1d8
   50f7c:	mov	x0, x20
   50f80:	bl	273ac <my_regexec@@Base+0x3eb8>
   50f84:	ldr	x7, [x19, #8]
   50f88:	sub	x6, x2, x7
   50f8c:	mov	x3, #0x0                   	// #0
   50f90:	b	50f44 <my_regprop@@Base+0x16c80>
   50f94:	ldr	x6, [x19, #48]
   50f98:	ldr	x5, [x19, #56]
   50f9c:	sub	w5, w5, w6
   50fa0:	mov	w3, #0x30c7                	// #12487
   50fa4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50fa8:	add	x2, x2, #0xfb8
   50fac:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50fb0:	add	x1, x1, #0x870
   50fb4:	mov	x0, x20
   50fb8:	bl	5420 <Perl_croak@plt>
   50fbc:	add	x0, x24, #0x1
   50fc0:	b	50d04 <my_regprop@@Base+0x16a40>
   50fc4:	ldr	x5, [x19, #8]
   50fc8:	sub	x4, x1, x5
   50fcc:	mov	x7, #0x0                   	// #0
   50fd0:	b	50d9c <my_regprop@@Base+0x16ad8>
   50fd4:	ldr	x6, [x19, #48]
   50fd8:	ldr	x5, [x19, #56]
   50fdc:	sub	w5, w5, w6
   50fe0:	mov	w3, #0x30d3                	// #12499
   50fe4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   50fe8:	add	x2, x2, #0xfb8
   50fec:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   50ff0:	add	x1, x1, #0x870
   50ff4:	mov	x0, x20
   50ff8:	bl	5420 <Perl_croak@plt>
   50ffc:	ldr	x0, [sp, #328]
   51000:	mov	x1, x0
   51004:	str	x0, [sp, #168]
   51008:	mov	x0, #0xfffe                	// #65534
   5100c:	cmp	x1, x0
   51010:	b.ls	510fc <my_regprop@@Base+0x16e38>  // b.plast
   51014:	ldr	x1, [x19, #24]
   51018:	cbz	x1, 51028 <my_regprop@@Base+0x16d64>
   5101c:	mov	w2, #0xb                   	// #11
   51020:	mov	x0, x20
   51024:	bl	54b0 <Perl_save_pushptr@plt>
   51028:	ldr	x1, [x19, #160]
   5102c:	cbz	x1, 5103c <my_regprop@@Base+0x16d78>
   51030:	mov	w2, #0xa                   	// #10
   51034:	mov	x0, x20
   51038:	bl	54b0 <Perl_save_pushptr@plt>
   5103c:	ldr	x1, [x19, #168]
   51040:	cbz	x1, 51050 <my_regprop@@Base+0x16d8c>
   51044:	mov	w2, #0xa                   	// #10
   51048:	mov	x0, x20
   5104c:	bl	54b0 <Perl_save_pushptr@plt>
   51050:	ldr	x0, [x19, #64]
   51054:	ldr	x1, [x19, #72]
   51058:	sub	x1, x0, x1
   5105c:	ldr	x0, [x19, #80]
   51060:	add	x0, x0, x1
   51064:	ldr	x2, [x19, #16]
   51068:	cmp	x0, x2
   5106c:	b.hi	510c4 <my_regprop@@Base+0x16e00>  // b.pmore
   51070:	ldr	x7, [x19, #8]
   51074:	subs	x4, x0, x7
   51078:	b.mi	510d4 <my_regprop@@Base+0x16e10>  // b.first
   5107c:	mov	x6, x4
   51080:	sub	x3, x2, x0
   51084:	ldr	w1, [x19, #192]
   51088:	cmp	w1, #0x0
   5108c:	cset	w1, ne  // ne = any
   51090:	cmp	x0, x2
   51094:	csel	x0, x0, x2, ls  // ls = plast
   51098:	str	x0, [sp, #16]
   5109c:	str	x3, [sp, #8]
   510a0:	str	w1, [sp]
   510a4:	mov	w5, w1
   510a8:	mov	w4, #0xfffe                	// #65534
   510ac:	adrp	x3, 7b000 <boot_re@@Base+0x1941c>
   510b0:	add	x3, x3, #0x5d8
   510b4:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   510b8:	add	x2, x2, #0x1d8
   510bc:	mov	x0, x20
   510c0:	bl	273ac <my_regexec@@Base+0x3eb8>
   510c4:	ldr	x7, [x19, #8]
   510c8:	sub	x6, x2, x7
   510cc:	mov	x3, #0x0                   	// #0
   510d0:	b	51084 <my_regprop@@Base+0x16dc0>
   510d4:	ldr	x6, [x19, #48]
   510d8:	ldr	x5, [x19, #56]
   510dc:	sub	w5, w5, w6
   510e0:	mov	w3, #0x30d5                	// #12501
   510e4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   510e8:	add	x2, x2, #0xfb8
   510ec:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   510f0:	add	x1, x1, #0x870
   510f4:	mov	x0, x20
   510f8:	bl	5420 <Perl_croak@plt>
   510fc:	ldr	w24, [sp, #168]
   51100:	str	x26, [x19, #64]
   51104:	mov	x1, x19
   51108:	mov	x0, x20
   5110c:	bl	269a4 <my_regexec@@Base+0x34b0>
   51110:	ldr	w0, [sp, #168]
   51114:	cmp	w25, w0
   51118:	b.le	512ec <my_regprop@@Base+0x17028>
   5111c:	mov	w4, w28
   51120:	ldr	x3, [sp, #160]
   51124:	mov	w2, #0x5a                  	// #90
   51128:	mov	x1, x19
   5112c:	mov	x0, x20
   51130:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51134:	ldr	x1, [x19, #72]
   51138:	cbz	x1, 5124c <my_regprop@@Base+0x16f88>
   5113c:	ldr	x0, [x19, #64]
   51140:	sub	x1, x0, x1
   51144:	ldr	x0, [x19, #80]
   51148:	add	x0, x0, x1
   5114c:	ldr	x1, [x19, #8]
   51150:	sub	x0, x0, x1
   51154:	ldr	x1, [x19, #136]
   51158:	cmp	x0, x1
   5115c:	b.le	51234 <my_regprop@@Base+0x16f70>
   51160:	ldr	x0, [x20, #224]
   51164:	cbz	x0, 5118c <my_regprop@@Base+0x16ec8>
   51168:	ldr	x0, [x0, #64]
   5116c:	cmp	x0, #0x0
   51170:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   51174:	ldr	x1, [x1, #3984]
   51178:	ccmp	x0, x1, #0x4, ne  // ne = any
   5117c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   51180:	ldr	x1, [x1, #3832]
   51184:	ccmp	x0, x1, #0x4, ne  // ne = any
   51188:	b.ne	5126c <my_regprop@@Base+0x16fa8>  // b.any
   5118c:	ldr	w0, [x19, #192]
   51190:	cmp	w0, #0x0
   51194:	cset	w3, ne  // ne = any
   51198:	ldr	x0, [x19, #64]
   5119c:	ldr	x1, [x19, #72]
   511a0:	sub	x1, x0, x1
   511a4:	ldr	x0, [x19, #80]
   511a8:	add	x0, x0, x1
   511ac:	ldr	x1, [x19, #16]
   511b0:	cmp	x0, x1
   511b4:	b.hi	512b4 <my_regprop@@Base+0x16ff0>  // b.pmore
   511b8:	ldr	x5, [x19, #8]
   511bc:	subs	x4, x0, x5
   511c0:	b.mi	512c4 <my_regprop@@Base+0x17000>  // b.first
   511c4:	sub	x7, x1, x0
   511c8:	cmp	x0, x1
   511cc:	csel	x0, x0, x1, ls  // ls = plast
   511d0:	str	x0, [sp]
   511d4:	mov	w6, w3
   511d8:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   511dc:	add	x2, x2, #0x200
   511e0:	mov	w1, #0x14                  	// #20
   511e4:	mov	x0, x20
   511e8:	bl	5150 <Perl_ck_warner@plt>
   511ec:	ldr	x0, [x19, #72]
   511f0:	cbz	x0, 51234 <my_regprop@@Base+0x16f70>
   511f4:	ldr	x1, [x19, #64]
   511f8:	sub	x1, x1, x0
   511fc:	ldr	x0, [x19, #80]
   51200:	add	x1, x0, x1
   51204:	ldr	x2, [x19, #8]
   51208:	sub	x3, x1, x2
   5120c:	ldr	x0, [x19, #136]
   51210:	cmp	x3, x0
   51214:	b.le	51234 <my_regprop@@Base+0x16f70>
   51218:	ldr	x0, [x19, #16]
   5121c:	cmp	x0, x1
   51220:	csel	x0, x0, x1, ls  // ls = plast
   51224:	cmp	x2, x0
   51228:	csel	x0, x2, x0, hi  // hi = pmore
   5122c:	sub	x0, x0, x2
   51230:	str	x0, [x19, #136]
   51234:	ldr	x0, [x19, #96]
   51238:	ldr	x1, [sp, #160]
   5123c:	add	x0, x0, x1, lsl #2
   51240:	mov	w1, #0x2                   	// #2
   51244:	strh	w1, [x0, #2]
   51248:	b	4cde0 <my_regprop@@Base+0x12b1c>
   5124c:	ldr	x4, [x19, #64]
   51250:	mov	w3, #0x30df                	// #12511
   51254:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   51258:	add	x2, x2, #0xfb8
   5125c:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   51260:	add	x1, x1, #0xab8
   51264:	mov	x0, x20
   51268:	bl	5420 <Perl_croak@plt>
   5126c:	ldrb	w0, [x0, #13]
   51270:	tbz	w0, #1, 5118c <my_regprop@@Base+0x16ec8>
   51274:	ldr	x1, [x19, #24]
   51278:	cbz	x1, 51288 <my_regprop@@Base+0x16fc4>
   5127c:	mov	w2, #0xb                   	// #11
   51280:	mov	x0, x20
   51284:	bl	54b0 <Perl_save_pushptr@plt>
   51288:	ldr	x1, [x19, #160]
   5128c:	cbz	x1, 5129c <my_regprop@@Base+0x16fd8>
   51290:	mov	w2, #0xa                   	// #10
   51294:	mov	x0, x20
   51298:	bl	54b0 <Perl_save_pushptr@plt>
   5129c:	ldr	x1, [x19, #168]
   512a0:	cbz	x1, 5118c <my_regprop@@Base+0x16ec8>
   512a4:	mov	w2, #0xa                   	// #10
   512a8:	mov	x0, x20
   512ac:	bl	54b0 <Perl_save_pushptr@plt>
   512b0:	b	5118c <my_regprop@@Base+0x16ec8>
   512b4:	ldr	x5, [x19, #8]
   512b8:	sub	x4, x1, x5
   512bc:	mov	x7, #0x0                   	// #0
   512c0:	b	511c8 <my_regprop@@Base+0x16f04>
   512c4:	ldr	x6, [x19, #48]
   512c8:	ldr	x5, [x19, #56]
   512cc:	sub	w5, w5, w6
   512d0:	mov	w3, #0x30df                	// #12511
   512d4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   512d8:	add	x2, x2, #0xfb8
   512dc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   512e0:	add	x1, x1, #0x870
   512e4:	mov	x0, x20
   512e8:	bl	5420 <Perl_croak@plt>
   512ec:	ldr	w0, [sp, #168]
   512f0:	cmp	w25, w0
   512f4:	b.ne	51db8 <my_regprop@@Base+0x17af4>  // b.any
   512f8:	ldr	x4, [x19, #64]
   512fc:	ldrb	w0, [x4]
   51300:	cmp	w0, #0x3f
   51304:	b.ne	51a70 <my_regprop@@Base+0x177ac>  // b.any
   51308:	ldr	x1, [x19, #72]
   5130c:	cbz	x1, 51414 <my_regprop@@Base+0x17150>
   51310:	add	x0, x4, #0x1
   51314:	sub	x0, x0, x1
   51318:	ldr	x1, [x19, #80]
   5131c:	add	x0, x1, x0
   51320:	ldr	x1, [x19, #8]
   51324:	sub	x0, x0, x1
   51328:	ldr	x1, [x19, #136]
   5132c:	cmp	x0, x1
   51330:	b.le	51a70 <my_regprop@@Base+0x177ac>
   51334:	ldr	x0, [x20, #224]
   51338:	cbz	x0, 51360 <my_regprop@@Base+0x1709c>
   5133c:	ldr	x0, [x0, #64]
   51340:	cmp	x0, #0x0
   51344:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   51348:	ldr	x1, [x1, #3984]
   5134c:	ccmp	x0, x1, #0x4, ne  // ne = any
   51350:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   51354:	ldr	x1, [x1, #3832]
   51358:	ccmp	x0, x1, #0x4, ne  // ne = any
   5135c:	b.ne	51434 <my_regprop@@Base+0x17170>  // b.any
   51360:	ldr	x0, [x19, #64]
   51364:	ldrb	w3, [x0], #1
   51368:	ldr	w1, [x19, #192]
   5136c:	cmp	w1, #0x0
   51370:	cset	w4, ne  // ne = any
   51374:	ldr	x1, [x19, #72]
   51378:	sub	x1, x0, x1
   5137c:	ldr	x0, [x19, #80]
   51380:	add	x0, x0, x1
   51384:	ldr	x2, [x19, #16]
   51388:	cmp	x0, x2
   5138c:	b.ls	5147c <my_regprop@@Base+0x171b8>  // b.plast
   51390:	ldr	x6, [x19, #8]
   51394:	sub	x5, x2, x6
   51398:	mov	x1, #0x0                   	// #0
   5139c:	cmp	x0, x2
   513a0:	csel	x0, x0, x2, ls  // ls = plast
   513a4:	str	x0, [sp, #8]
   513a8:	str	x1, [sp]
   513ac:	mov	w7, w4
   513b0:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   513b4:	add	x2, x2, #0x268
   513b8:	mov	w1, #0x14                  	// #20
   513bc:	mov	x0, x20
   513c0:	bl	5150 <Perl_ck_warner@plt>
   513c4:	ldr	x0, [x19, #72]
   513c8:	cbz	x0, 51a70 <my_regprop@@Base+0x177ac>
   513cc:	ldr	x1, [x19, #64]
   513d0:	add	x1, x1, #0x1
   513d4:	sub	x1, x1, x0
   513d8:	ldr	x0, [x19, #80]
   513dc:	add	x1, x0, x1
   513e0:	ldr	x2, [x19, #8]
   513e4:	sub	x3, x1, x2
   513e8:	ldr	x0, [x19, #136]
   513ec:	cmp	x3, x0
   513f0:	b.le	51a70 <my_regprop@@Base+0x177ac>
   513f4:	ldr	x0, [x19, #16]
   513f8:	cmp	x0, x1
   513fc:	csel	x0, x0, x1, ls  // ls = plast
   51400:	cmp	x2, x0
   51404:	csel	x0, x2, x0, hi  // hi = pmore
   51408:	sub	x0, x0, x2
   5140c:	str	x0, [x19, #136]
   51410:	b	51a70 <my_regprop@@Base+0x177ac>
   51414:	add	x4, x4, #0x1
   51418:	mov	w3, #0x30e6                	// #12518
   5141c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   51420:	add	x2, x2, #0xfb8
   51424:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   51428:	add	x1, x1, #0xab8
   5142c:	mov	x0, x20
   51430:	bl	5420 <Perl_croak@plt>
   51434:	ldrb	w0, [x0, #13]
   51438:	tbz	w0, #1, 51360 <my_regprop@@Base+0x1709c>
   5143c:	ldr	x1, [x19, #24]
   51440:	cbz	x1, 51450 <my_regprop@@Base+0x1718c>
   51444:	mov	w2, #0xb                   	// #11
   51448:	mov	x0, x20
   5144c:	bl	54b0 <Perl_save_pushptr@plt>
   51450:	ldr	x1, [x19, #160]
   51454:	cbz	x1, 51464 <my_regprop@@Base+0x171a0>
   51458:	mov	w2, #0xa                   	// #10
   5145c:	mov	x0, x20
   51460:	bl	54b0 <Perl_save_pushptr@plt>
   51464:	ldr	x1, [x19, #168]
   51468:	cbz	x1, 51360 <my_regprop@@Base+0x1709c>
   5146c:	mov	w2, #0xa                   	// #10
   51470:	mov	x0, x20
   51474:	bl	54b0 <Perl_save_pushptr@plt>
   51478:	b	51360 <my_regprop@@Base+0x1709c>
   5147c:	ldr	x6, [x19, #8]
   51480:	subs	x1, x0, x6
   51484:	b.mi	51494 <my_regprop@@Base+0x171d0>  // b.first
   51488:	mov	x5, x1
   5148c:	sub	x1, x2, x0
   51490:	b	5139c <my_regprop@@Base+0x170d8>
   51494:	ldr	x6, [x19, #48]
   51498:	ldr	x5, [x19, #56]
   5149c:	sub	w5, w5, w6
   514a0:	mov	x4, x1
   514a4:	mov	w3, #0x30e6                	// #12518
   514a8:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   514ac:	add	x2, x2, #0xfb8
   514b0:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   514b4:	add	x1, x1, #0x870
   514b8:	mov	x0, x20
   514bc:	bl	5420 <Perl_croak@plt>
   514c0:	mov	w4, w28
   514c4:	mov	x3, x21
   514c8:	mov	w2, #0x31                  	// #49
   514cc:	mov	x1, x19
   514d0:	mov	x0, x20
   514d4:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   514d8:	ldr	w0, [x19, #112]
   514dc:	cmp	w0, #0x9
   514e0:	b.gt	514ec <my_regprop@@Base+0x17228>
   514e4:	add	w0, w0, #0x4
   514e8:	str	w0, [x19, #112]
   514ec:	ldr	w0, [x19, #120]
   514f0:	orr	w0, w0, #0x1000
   514f4:	str	w0, [x19, #120]
   514f8:	mov	w24, #0xffff                	// #65535
   514fc:	b	51ee0 <my_regprop@@Base+0x17c1c>
   51500:	mov	w4, w28
   51504:	mov	x3, x21
   51508:	mov	w2, #0x32                  	// #50
   5150c:	mov	x1, x19
   51510:	mov	x0, x20
   51514:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51518:	ldr	w0, [x19, #112]
   5151c:	cmp	w0, #0x9
   51520:	b.gt	5152c <my_regprop@@Base+0x17268>
   51524:	add	w0, w0, #0x3
   51528:	str	w0, [x19, #112]
   5152c:	ldr	w0, [x19, #120]
   51530:	orr	w0, w0, #0x1000
   51534:	str	w0, [x19, #120]
   51538:	b	51ee0 <my_regprop@@Base+0x17c1c>
   5153c:	ubfx	x2, x22, #2, #32
   51540:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   51544:	add	x1, x1, #0xf58
   51548:	mov	x0, x20
   5154c:	bl	5420 <Perl_croak@plt>
   51550:	mov	w4, w28
   51554:	mov	x3, x21
   51558:	mov	w2, #0x46                  	// #70
   5155c:	mov	x1, x19
   51560:	mov	x0, x20
   51564:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51568:	mov	w4, w28
   5156c:	mov	x3, x21
   51570:	mov	w2, #0x2f                  	// #47
   51574:	mov	x1, x19
   51578:	mov	x0, x20
   5157c:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51580:	ldr	x0, [x19, #96]
   51584:	add	x0, x0, x21, lsl #2
   51588:	mov	w1, #0x3                   	// #3
   5158c:	strh	w1, [x0, #2]
   51590:	b	51910 <my_regprop@@Base+0x1764c>
   51594:	ubfx	x2, x26, #2, #32
   51598:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   5159c:	add	x1, x1, #0xf58
   515a0:	mov	x0, x20
   515a4:	bl	5420 <Perl_croak@plt>
   515a8:	ldr	x3, [x19, #64]
   515ac:	sub	w3, w3, w23
   515b0:	b	519a4 <my_regprop@@Base+0x176e0>
   515b4:	ldr	x0, [x19, #64]
   515b8:	sub	w0, w0, w23
   515bc:	b	519c0 <my_regprop@@Base+0x176fc>
   515c0:	ldr	w0, [sp, #272]
   515c4:	str	w0, [x27]
   515c8:	b	4cde0 <my_regprop@@Base+0x12b1c>
   515cc:	ldr	x1, [x19, #72]
   515d0:	cbz	x1, 516ec <my_regprop@@Base+0x17428>
   515d4:	ldr	x0, [x19, #64]
   515d8:	sub	x1, x0, x1
   515dc:	ldr	x0, [x19, #80]
   515e0:	add	x0, x0, x1
   515e4:	ldr	x1, [x19, #8]
   515e8:	sub	x0, x0, x1
   515ec:	ldr	x1, [x19, #136]
   515f0:	cmp	x0, x1
   515f4:	b.le	51ef8 <my_regprop@@Base+0x17c34>
   515f8:	ldr	x0, [x20, #224]
   515fc:	cbz	x0, 51624 <my_regprop@@Base+0x17360>
   51600:	ldr	x0, [x0, #64]
   51604:	cmp	x0, #0x0
   51608:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5160c:	ldr	x1, [x1, #3984]
   51610:	ccmp	x0, x1, #0x4, ne  // ne = any
   51614:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   51618:	ldr	x1, [x1, #3832]
   5161c:	ccmp	x0, x1, #0x4, ne  // ne = any
   51620:	b.ne	5170c <my_regprop@@Base+0x17448>  // b.any
   51624:	ldr	w0, [x19, #192]
   51628:	cmp	w0, #0x0
   5162c:	cset	w3, ne  // ne = any
   51630:	ldr	x0, [x19, #64]
   51634:	ldr	x1, [sp, #152]
   51638:	sub	x4, x0, x1
   5163c:	cmp	x0, x1
   51640:	csel	x4, x4, xzr, cs  // cs = hs, nlast
   51644:	ldr	x1, [x19, #72]
   51648:	sub	x1, x0, x1
   5164c:	ldr	x0, [x19, #80]
   51650:	add	x0, x0, x1
   51654:	ldr	x1, [x19, #16]
   51658:	cmp	x0, x1
   5165c:	b.ls	51754 <my_regprop@@Base+0x17490>  // b.plast
   51660:	ldr	x2, [x19, #8]
   51664:	sub	x7, x1, x2
   51668:	mov	x5, #0x0                   	// #0
   5166c:	cmp	x0, x1
   51670:	csel	x0, x0, x1, ls  // ls = plast
   51674:	str	x0, [sp, #24]
   51678:	str	x5, [sp, #16]
   5167c:	str	w3, [sp, #8]
   51680:	str	x2, [sp]
   51684:	mov	w6, w3
   51688:	ldr	x5, [sp, #152]
   5168c:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   51690:	add	x2, x2, #0x2d0
   51694:	mov	w1, #0x14                  	// #20
   51698:	mov	x0, x20
   5169c:	bl	5150 <Perl_ck_warner@plt>
   516a0:	ldr	x0, [x19, #72]
   516a4:	cbz	x0, 51ef8 <my_regprop@@Base+0x17c34>
   516a8:	ldr	x1, [x19, #64]
   516ac:	sub	x1, x1, x0
   516b0:	ldr	x0, [x19, #80]
   516b4:	add	x0, x0, x1
   516b8:	ldr	x2, [x19, #8]
   516bc:	sub	x3, x0, x2
   516c0:	ldr	x1, [x19, #136]
   516c4:	cmp	x3, x1
   516c8:	b.le	51ef8 <my_regprop@@Base+0x17c34>
   516cc:	ldr	x1, [x19, #16]
   516d0:	cmp	x1, x0
   516d4:	csel	x0, x1, x0, ls  // ls = plast
   516d8:	cmp	x2, x0
   516dc:	csel	x0, x2, x0, hi  // hi = pmore
   516e0:	sub	x0, x0, x2
   516e4:	str	x0, [x19, #136]
   516e8:	b	51ef8 <my_regprop@@Base+0x17c34>
   516ec:	ldr	x4, [x19, #64]
   516f0:	mov	w3, #0x314e                	// #12622
   516f4:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   516f8:	add	x2, x2, #0xfb8
   516fc:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   51700:	add	x1, x1, #0xab8
   51704:	mov	x0, x20
   51708:	bl	5420 <Perl_croak@plt>
   5170c:	ldrb	w0, [x0, #13]
   51710:	tbz	w0, #1, 51624 <my_regprop@@Base+0x17360>
   51714:	ldr	x1, [x19, #24]
   51718:	cbz	x1, 51728 <my_regprop@@Base+0x17464>
   5171c:	mov	w2, #0xb                   	// #11
   51720:	mov	x0, x20
   51724:	bl	54b0 <Perl_save_pushptr@plt>
   51728:	ldr	x1, [x19, #160]
   5172c:	cbz	x1, 5173c <my_regprop@@Base+0x17478>
   51730:	mov	w2, #0xa                   	// #10
   51734:	mov	x0, x20
   51738:	bl	54b0 <Perl_save_pushptr@plt>
   5173c:	ldr	x1, [x19, #168]
   51740:	cbz	x1, 51624 <my_regprop@@Base+0x17360>
   51744:	mov	w2, #0xa                   	// #10
   51748:	mov	x0, x20
   5174c:	bl	54b0 <Perl_save_pushptr@plt>
   51750:	b	51624 <my_regprop@@Base+0x17360>
   51754:	ldr	x2, [x19, #8]
   51758:	subs	x7, x0, x2
   5175c:	b.mi	51768 <my_regprop@@Base+0x174a4>  // b.first
   51760:	sub	x5, x1, x0
   51764:	b	5166c <my_regprop@@Base+0x173a8>
   51768:	ldr	x6, [x19, #48]
   5176c:	ldr	x5, [x19, #56]
   51770:	sub	w5, w5, w6
   51774:	mov	x4, x7
   51778:	mov	w3, #0x314e                	// #12622
   5177c:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   51780:	add	x2, x2, #0xfb8
   51784:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   51788:	add	x1, x1, #0x870
   5178c:	mov	x0, x20
   51790:	bl	5420 <Perl_croak@plt>
   51794:	mov	x1, x19
   51798:	mov	x0, x20
   5179c:	bl	269a4 <my_regexec@@Base+0x34b0>
   517a0:	mov	w4, w28
   517a4:	mov	x3, x21
   517a8:	mov	w2, #0x4e                  	// #78
   517ac:	mov	x1, x19
   517b0:	mov	x0, x20
   517b4:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   517b8:	mov	w4, w28
   517bc:	add	x3, x21, #0x1
   517c0:	mov	x2, x21
   517c4:	mov	x1, x19
   517c8:	mov	x0, x20
   517cc:	bl	3b894 <my_regprop@@Base+0x15d0>
   517d0:	b	51f10 <my_regprop@@Base+0x17c4c>
   517d4:	mov	x1, x19
   517d8:	mov	x0, x20
   517dc:	bl	269a4 <my_regexec@@Base+0x34b0>
   517e0:	mov	w2, #0x1                   	// #1
   517e4:	mov	x1, x19
   517e8:	mov	x0, x20
   517ec:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   517f0:	mov	w4, w28
   517f4:	mov	x3, x0
   517f8:	mov	x2, x21
   517fc:	mov	x1, x19
   51800:	mov	x0, x20
   51804:	bl	3b894 <my_regprop@@Base+0x15d0>
   51808:	mov	w4, w28
   5180c:	mov	x3, x21
   51810:	mov	w2, #0x4a                  	// #74
   51814:	mov	x1, x19
   51818:	mov	x0, x20
   5181c:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51820:	mov	w2, #0x30                  	// #48
   51824:	mov	x1, x19
   51828:	mov	x0, x20
   5182c:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   51830:	mov	w4, w28
   51834:	mov	x3, x0
   51838:	mov	x2, x21
   5183c:	mov	x1, x19
   51840:	mov	x0, x20
   51844:	bl	3b894 <my_regprop@@Base+0x15d0>
   51848:	b	51f10 <my_regprop@@Base+0x17c4c>
   5184c:	add	x4, x4, #0x2
   51850:	ldrb	w0, [x0, #1]
   51854:	sub	w0, w0, #0x30
   51858:	cmp	w0, #0x9
   5185c:	b.hi	51878 <my_regprop@@Base+0x175b4>  // b.pmore
   51860:	ldrb	w0, [x4, #1]!
   51864:	sub	w0, w0, #0x30
   51868:	cmp	w0, #0x9
   5186c:	b.ls	51860 <my_regprop@@Base+0x1759c>  // b.plast
   51870:	mov	x0, x4
   51874:	b	51f64 <my_regprop@@Base+0x17ca0>
   51878:	mov	x0, x4
   5187c:	b	51f64 <my_regprop@@Base+0x17ca0>
   51880:	ldr	x5, [x19, #8]
   51884:	sub	x4, x1, x5
   51888:	mov	x7, #0x0                   	// #0
   5188c:	b	51fe4 <my_regprop@@Base+0x17d20>
   51890:	ldr	x6, [x19, #48]
   51894:	ldr	x5, [x19, #56]
   51898:	sub	w5, w5, w6
   5189c:	mov	w3, #0x3167                	// #12647
   518a0:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   518a4:	add	x2, x2, #0xfb8
   518a8:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   518ac:	add	x1, x1, #0x870
   518b0:	mov	x0, x20
   518b4:	bl	5420 <Perl_croak@plt>
   518b8:	mov	w24, #0x1                   	// #1
   518bc:	mov	w25, #0x0                   	// #0
   518c0:	b	51a70 <my_regprop@@Base+0x177ac>
   518c4:	ldr	w0, [sp, #272]
   518c8:	and	w25, w0, #0x2
   518cc:	mov	w24, #0xffff                	// #65535
   518d0:	tbnz	w0, #1, 514c0 <my_regprop@@Base+0x171fc>
   518d4:	mov	w2, #0x37                  	// #55
   518d8:	mov	x1, x19
   518dc:	mov	x0, x20
   518e0:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   518e4:	mov	x3, x0
   518e8:	ldr	x1, [x19, #96]
   518ec:	lsl	x0, x0, #2
   518f0:	strb	wzr, [x1, x0]
   518f4:	mov	w4, w28
   518f8:	mov	x2, x21
   518fc:	mov	x1, x19
   51900:	mov	x0, x20
   51904:	bl	3b894 <my_regprop@@Base+0x15d0>
   51908:	ldrb	w0, [x19, #388]
   5190c:	cbnz	w0, 51550 <my_regprop@@Base+0x1728c>
   51910:	mov	w4, w28
   51914:	mov	x3, x21
   51918:	mov	w2, #0x36                  	// #54
   5191c:	mov	x1, x19
   51920:	mov	x0, x20
   51924:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51928:	ldr	w0, [x20, #2368]
   5192c:	tbnz	w0, #20, 51938 <my_regprop@@Base+0x17674>
   51930:	ldr	x0, [sp, #280]
   51934:	tbz	w0, #18, 51958 <my_regprop@@Base+0x17694>
   51938:	add	x0, x23, #0x1
   5193c:	ldr	x3, [x19, #48]
   51940:	sub	w3, w0, w3
   51944:	mov	w2, w21
   51948:	mov	w1, #0x310a                	// #12554
   5194c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   51950:	add	x0, x0, #0xf30
   51954:	bl	5010 <Perl_warn_nocontext@plt>
   51958:	lsl	x26, x21, #2
   5195c:	tbnz	x21, #61, 51594 <my_regprop@@Base+0x172d0>
   51960:	asr	x2, x26, #2
   51964:	lsl	x3, x26, #1
   51968:	str	x3, [sp, #160]
   5196c:	ldr	x0, [x19, #40]
   51970:	ldr	x1, [x0, #8]
   51974:	add	x1, x1, x3
   51978:	add	x0, x23, #0x1
   5197c:	ldr	x3, [x19, #48]
   51980:	sub	x0, x0, x3
   51984:	stur	w0, [x1, #-4]
   51988:	ldr	w0, [x20, #2368]
   5198c:	tbnz	w0, #20, 51998 <my_regprop@@Base+0x176d4>
   51990:	ldr	x0, [sp, #280]
   51994:	tbz	w0, #18, 519b4 <my_regprop@@Base+0x176f0>
   51998:	mov	w3, #0x1                   	// #1
   5199c:	cmp	w22, #0x7b
   519a0:	b.eq	515a8 <my_regprop@@Base+0x172e4>  // b.none
   519a4:	mov	w1, #0x310b                	// #12555
   519a8:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   519ac:	add	x0, x0, #0x8
   519b0:	bl	5010 <Perl_warn_nocontext@plt>
   519b4:	mov	w0, #0x1                   	// #1
   519b8:	cmp	w22, #0x7b
   519bc:	b.eq	515b4 <my_regprop@@Base+0x172f0>  // b.none
   519c0:	ldr	x1, [x19, #40]
   519c4:	ldr	x1, [x1, #8]
   519c8:	ldr	x2, [sp, #160]
   519cc:	str	w0, [x1, x2]
   519d0:	ldrb	w0, [x19, #388]
   519d4:	cbz	w0, 519e8 <my_regprop@@Base+0x17724>
   519d8:	ldr	x0, [x19, #96]
   519dc:	add	x26, x0, x26
   519e0:	mov	w0, #0x3                   	// #3
   519e4:	strh	w0, [x26, #2]
   519e8:	mov	w2, #0x2f                  	// #47
   519ec:	mov	x1, x19
   519f0:	mov	x0, x20
   519f4:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   519f8:	mov	w4, w28
   519fc:	mov	x3, x0
   51a00:	mov	x2, x21
   51a04:	mov	x1, x19
   51a08:	mov	x0, x20
   51a0c:	bl	3b894 <my_regprop@@Base+0x15d0>
   51a10:	ldr	x0, [x19, #88]
   51a14:	add	x0, x0, #0x1
   51a18:	str	x0, [x19, #88]
   51a1c:	ldr	w0, [x19, #112]
   51a20:	cmp	w0, #0x9
   51a24:	b.gt	51b5c <my_regprop@@Base+0x17898>
   51a28:	add	w0, w0, #0x2
   51a2c:	lsl	w0, w0, #1
   51a30:	str	w0, [x19, #112]
   51a34:	b	51b5c <my_regprop@@Base+0x17898>
   51a38:	str	x26, [x19, #64]
   51a3c:	mov	x1, x19
   51a40:	mov	x0, x20
   51a44:	bl	269a4 <my_regexec@@Base+0x34b0>
   51a48:	ldr	w0, [sp, #272]
   51a4c:	mov	w24, #0xffff                	// #65535
   51a50:	tbz	w0, #1, 518d4 <my_regprop@@Base+0x17610>
   51a54:	cbz	w25, 514c0 <my_regprop@@Base+0x171fc>
   51a58:	mov	w24, #0xffff                	// #65535
   51a5c:	mov	w1, #0x1                   	// #1
   51a60:	b	51a84 <my_regprop@@Base+0x177c0>
   51a64:	mov	w25, #0x1                   	// #1
   51a68:	str	w25, [x27]
   51a6c:	mov	w24, #0xffff                	// #65535
   51a70:	ldr	w0, [sp, #272]
   51a74:	mov	w1, #0xffff                	// #65535
   51a78:	cmp	w24, w1
   51a7c:	cset	w1, eq  // eq = none
   51a80:	tbz	w0, #1, 518d4 <my_regprop@@Base+0x17610>
   51a84:	cmp	w1, #0x0
   51a88:	ccmp	w25, #0x1, #0x0, ne  // ne = any
   51a8c:	b.eq	51500 <my_regprop@@Base+0x1723c>  // b.none
   51a90:	ldr	w0, [x19, #112]
   51a94:	cmp	w0, #0x9
   51a98:	b.gt	51aac <my_regprop@@Base+0x177e8>
   51a9c:	add	w1, w0, w0, lsr #31
   51aa0:	add	w0, w0, #0x2
   51aa4:	add	w0, w0, w1, asr #1
   51aa8:	str	w0, [x19, #112]
   51aac:	mov	w4, w28
   51ab0:	mov	x3, x21
   51ab4:	mov	w2, #0x33                  	// #51
   51ab8:	mov	x1, x19
   51abc:	mov	x0, x20
   51ac0:	bl	2ffcc <Perl_re_printf@@Base+0xf0>
   51ac4:	ldr	w0, [x20, #2368]
   51ac8:	tbnz	w0, #20, 51ad4 <my_regprop@@Base+0x17810>
   51acc:	ldr	x0, [sp, #280]
   51ad0:	tbz	w0, #18, 51af4 <my_regprop@@Base+0x17830>
   51ad4:	add	x0, x23, #0x1
   51ad8:	ldr	x3, [x19, #48]
   51adc:	sub	w3, w0, w3
   51ae0:	mov	w2, w21
   51ae4:	mov	w1, #0x30fb                	// #12539
   51ae8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   51aec:	add	x0, x0, #0xf30
   51af0:	bl	5010 <Perl_warn_nocontext@plt>
   51af4:	lsl	x22, x21, #2
   51af8:	tbnz	x21, #61, 5153c <my_regprop@@Base+0x17278>
   51afc:	asr	x2, x22, #2
   51b00:	lsl	x22, x22, #1
   51b04:	ldr	x0, [x19, #40]
   51b08:	ldr	x1, [x0, #8]
   51b0c:	add	x1, x1, x22
   51b10:	add	x0, x23, #0x1
   51b14:	ldr	x3, [x19, #48]
   51b18:	sub	x0, x0, x3
   51b1c:	stur	w0, [x1, #-4]
   51b20:	ldr	w0, [x20, #2368]
   51b24:	tbnz	w0, #20, 51b30 <my_regprop@@Base+0x1786c>
   51b28:	ldr	x0, [sp, #280]
   51b2c:	tbz	w0, #18, 51b48 <my_regprop@@Base+0x17884>
   51b30:	ldr	x3, [x19, #64]
   51b34:	sub	w3, w3, w23
   51b38:	mov	w1, #0x30fc                	// #12540
   51b3c:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   51b40:	add	x0, x0, #0x8
   51b44:	bl	5010 <Perl_warn_nocontext@plt>
   51b48:	ldr	x0, [x19, #40]
   51b4c:	ldr	x1, [x0, #8]
   51b50:	ldr	x0, [x19, #64]
   51b54:	sub	x23, x0, x23
   51b58:	str	w23, [x1, x22]
   51b5c:	lsl	x1, x21, #2
   51b60:	ldr	x0, [x19, #96]
   51b64:	strb	wzr, [x0, x1]
   51b68:	cmp	w25, #0x0
   51b6c:	b.le	51b74 <my_regprop@@Base+0x178b0>
   51b70:	str	wzr, [x27]
   51b74:	cmp	w24, #0x0
   51b78:	b.le	51b88 <my_regprop@@Base+0x178c4>
   51b7c:	ldr	w0, [x27]
   51b80:	orr	w0, w0, #0x1
   51b84:	str	w0, [x27]
   51b88:	ldr	x0, [x19, #96]
   51b8c:	add	x0, x0, x1
   51b90:	strh	w25, [x0, #4]
   51b94:	ldr	x0, [x19, #96]
   51b98:	add	x0, x0, x1
   51b9c:	strh	w24, [x0, #6]
   51ba0:	mov	w0, #0xffff                	// #65535
   51ba4:	cmp	w24, w0
   51ba8:	b.ne	51ee0 <my_regprop@@Base+0x17c1c>  // b.any
   51bac:	ldr	w0, [x19, #120]
   51bb0:	orr	w0, w0, #0x1000
   51bb4:	str	w0, [x19, #120]
   51bb8:	b	51ee0 <my_regprop@@Base+0x17c1c>
   51bbc:	mov	x26, x22
   51bc0:	add	x22, x26, #0x3
   51bc4:	lsr	x22, x22, #2
   51bc8:	sub	x2, x22, #0x40
   51bcc:	mov	x1, x19
   51bd0:	mov	x0, x20
   51bd4:	bl	29e08 <my_regexec@@Base+0x6914>
   51bd8:	b	4fe0c <my_regprop@@Base+0x15b48>
   51bdc:	cbnz	x26, 5001c <my_regprop@@Base+0x15d58>
   51be0:	ldr	w0, [x19]
   51be4:	tbnz	w0, #2, 50088 <my_regprop@@Base+0x15dc4>
   51be8:	ubfx	x0, x0, #7, #3
   51bec:	cmp	w0, #0x1
   51bf0:	cset	w0, eq  // eq = none
   51bf4:	add	w0, w0, #0x23
   51bf8:	str	w0, [sp, #168]
   51bfc:	b	50028 <my_regprop@@Base+0x15d64>
   51c00:	add	x0, x0, #0x2
   51c04:	str	x0, [x19, #64]
   51c08:	cmp	w1, #0x7b
   51c0c:	mov	w4, #0x7d                  	// #125
   51c10:	mov	w0, #0x27                  	// #39
   51c14:	csel	w4, w4, w0, eq  // eq = none
   51c18:	mov	x3, x21
   51c1c:	add	x2, sp, #0x110
   51c20:	mov	x1, x19
   51c24:	mov	x0, x20
   51c28:	bl	2a4b0 <my_regexec@@Base+0x6fbc>
   51c2c:	str	x0, [sp, #288]
   51c30:	b	51e60 <my_regprop@@Base+0x17b9c>
   51c34:	add	x0, x0, #0x2
   51c38:	str	x0, [x19, #64]
   51c3c:	mov	w4, #0x3e                  	// #62
   51c40:	b	51c18 <my_regprop@@Base+0x17954>
   51c44:	mov	w21, #0x0                   	// #0
   51c48:	mov	w22, #0xb                   	// #11
   51c4c:	add	w2, w22, #0x4
   51c50:	and	w2, w2, #0xff
   51c54:	ldr	w0, [sp, #168]
   51c58:	cmp	w0, #0x0
   51c5c:	csel	w2, w2, w22, ne  // ne = any
   51c60:	mov	x1, x19
   51c64:	mov	x0, x20
   51c68:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   51c6c:	str	x0, [sp, #288]
   51c70:	ldr	x1, [x19, #96]
   51c74:	lsl	x0, x0, #2
   51c78:	strb	w21, [x1, x0]
   51c7c:	ldr	w0, [sp, #272]
   51c80:	orr	w0, w0, #0x2
   51c84:	str	w0, [sp, #272]
   51c88:	b	51ce8 <my_regprop@@Base+0x17a24>
   51c8c:	mov	w22, #0xa                   	// #10
   51c90:	b	51c4c <my_regprop@@Base+0x17988>
   51c94:	mov	w22, #0xa                   	// #10
   51c98:	b	51c4c <my_regprop@@Base+0x17988>
   51c9c:	mov	w22, #0xa                   	// #10
   51ca0:	b	51c4c <my_regprop@@Base+0x17988>
   51ca4:	mov	w22, #0xa                   	// #10
   51ca8:	b	51c4c <my_regprop@@Base+0x17988>
   51cac:	mov	w21, #0x16                  	// #22
   51cb0:	mov	w2, #0x1b                  	// #27
   51cb4:	add	w2, w2, #0x4
   51cb8:	and	w2, w2, #0xff
   51cbc:	mov	x1, x19
   51cc0:	mov	x0, x20
   51cc4:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   51cc8:	str	x0, [sp, #288]
   51ccc:	ldr	x1, [x19, #96]
   51cd0:	lsl	x0, x0, #2
   51cd4:	lsr	w21, w21, #1
   51cd8:	strb	w21, [x1, x0]
   51cdc:	ldr	w0, [sp, #272]
   51ce0:	orr	w0, w0, #0x3
   51ce4:	str	w0, [sp, #272]
   51ce8:	ldr	x21, [x19, #64]
   51cec:	ldrb	w0, [x21, #1]
   51cf0:	cmp	w0, #0x7b
   51cf4:	b.eq	4dcdc <my_regprop@@Base+0x13a18>  // b.none
   51cf8:	mov	x1, x19
   51cfc:	mov	x0, x20
   51d00:	bl	269a4 <my_regexec@@Base+0x34b0>
   51d04:	ldr	w0, [x20, #2368]
   51d08:	tbnz	w0, #20, 51d14 <my_regprop@@Base+0x17a50>
   51d0c:	ldr	x0, [sp, #296]
   51d10:	tbz	w0, #18, 51d2c <my_regprop@@Base+0x17a68>
   51d14:	mov	w3, #0x2                   	// #2
   51d18:	ldr	w2, [sp, #288]
   51d1c:	mov	w1, #0x3546                	// #13638
   51d20:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   51d24:	add	x0, x0, #0x8
   51d28:	bl	5010 <Perl_warn_nocontext@plt>
   51d2c:	ldr	x0, [sp, #288]
   51d30:	lsl	x2, x0, #2
   51d34:	tbnz	x0, #61, 4ddd0 <my_regprop@@Base+0x13b0c>
   51d38:	ldr	x0, [x19, #40]
   51d3c:	ldr	x0, [x0, #8]
   51d40:	lsl	x2, x2, #1
   51d44:	mov	w1, #0x2                   	// #2
   51d48:	str	w1, [x0, x2]
   51d4c:	b	51e60 <my_regprop@@Base+0x17b9c>
   51d50:	ldr	w2, [x19]
   51d54:	ubfx	x2, x2, #7, #3
   51d58:	add	w2, w2, #0x19
   51d5c:	cmp	w2, #0x1c
   51d60:	b.ls	51d70 <my_regprop@@Base+0x17aac>  // b.plast
   51d64:	mov	w21, #0x0                   	// #0
   51d68:	mov	w2, #0x1c                  	// #28
   51d6c:	b	51cbc <my_regprop@@Base+0x179f8>
   51d70:	mov	w21, #0x0                   	// #0
   51d74:	mov	w0, #0x0                   	// #0
   51d78:	b	4dc78 <my_regprop@@Base+0x139b4>
   51d7c:	mov	w21, #0x0                   	// #0
   51d80:	ldr	w2, [x19]
   51d84:	ubfx	x2, x2, #7, #3
   51d88:	add	w2, w2, #0x19
   51d8c:	mov	w0, #0x1                   	// #1
   51d90:	cmp	w2, #0x1c
   51d94:	b.ls	4dc78 <my_regprop@@Base+0x139b4>  // b.plast
   51d98:	mov	w2, #0x1c                  	// #28
   51d9c:	b	51cb4 <my_regprop@@Base+0x179f0>
   51da0:	ldr	w0, [x19]
   51da4:	tst	x0, #0x380
   51da8:	b.ne	5209c <my_regprop@@Base+0x17dd8>  // b.any
   51dac:	mov	w21, #0x2                   	// #2
   51db0:	mov	w2, #0x1b                  	// #27
   51db4:	b	51cb4 <my_regprop@@Base+0x179f0>
   51db8:	ldr	w0, [sp, #272]
   51dbc:	tbz	w0, #1, 518d4 <my_regprop@@Base+0x17610>
   51dc0:	mov	w0, #0xffff                	// #65535
   51dc4:	ldr	w1, [sp, #168]
   51dc8:	cmp	w1, w0
   51dcc:	cset	w1, eq  // eq = none
   51dd0:	b	51a84 <my_regprop@@Base+0x177c0>
   51dd4:	mov	x2, #0xffffffffffffffc0    	// #-64
   51dd8:	mov	x1, x19
   51ddc:	mov	x0, x20
   51de0:	bl	29e08 <my_regexec@@Base+0x6914>
   51de4:	ldr	x1, [x19, #96]
   51de8:	ldr	x0, [sp, #288]
   51dec:	add	x0, x1, x0, lsl #2
   51df0:	mov	w1, #0x2f                  	// #47
   51df4:	strb	w1, [x0, #1]
   51df8:	mov	x26, #0x0                   	// #0
   51dfc:	ldr	w0, [x20, #2368]
   51e00:	tbnz	w0, #20, 51e0c <my_regprop@@Base+0x17b48>
   51e04:	ldr	x0, [sp, #296]
   51e08:	tbz	w0, #18, 51e2c <my_regprop@@Base+0x17b68>
   51e0c:	ldr	x3, [sp, #312]
   51e10:	sub	x3, x3, x21
   51e14:	sub	w3, w3, #0x1
   51e18:	ldr	w2, [sp, #288]
   51e1c:	mov	w1, #0x398e                	// #14734
   51e20:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   51e24:	add	x0, x0, #0x8
   51e28:	bl	5010 <Perl_warn_nocontext@plt>
   51e2c:	ldr	x0, [sp, #288]
   51e30:	lsl	x2, x0, #2
   51e34:	tbnz	x0, #61, 50780 <my_regprop@@Base+0x164bc>
   51e38:	ldr	x0, [x19, #40]
   51e3c:	ldr	x1, [x0, #8]
   51e40:	lsl	x2, x2, #1
   51e44:	ldr	x0, [sp, #312]
   51e48:	sub	x21, x0, x21
   51e4c:	sub	w21, w21, #0x1
   51e50:	str	w21, [x1, x2]
   51e54:	ldr	x0, [sp, #312]
   51e58:	str	x0, [x19, #64]
   51e5c:	tbnz	x26, #63, 50794 <my_regprop@@Base+0x164d0>
   51e60:	mov	w3, #0x0                   	// #0
   51e64:	add	x2, x19, #0x40
   51e68:	mov	x1, x19
   51e6c:	mov	x0, x20
   51e70:	bl	266ac <my_regexec@@Base+0x31b8>
   51e74:	ldr	x0, [x19, #64]
   51e78:	ldrb	w1, [x0]
   51e7c:	cmp	w1, #0x7b
   51e80:	b.eq	5086c <my_regprop@@Base+0x165a8>  // b.none
   51e84:	ldr	x21, [sp, #288]
   51e88:	cbz	x21, 4cdcc <my_regprop@@Base+0x12b08>
   51e8c:	ldr	x23, [x19, #64]
   51e90:	ldrb	w22, [x23]
   51e94:	cmp	w22, #0x7b
   51e98:	b.eq	50c24 <my_regprop@@Base+0x16960>  // b.none
   51e9c:	sub	w0, w22, #0x2a
   51ea0:	and	w0, w0, #0xff
   51ea4:	cmp	w22, #0x3f
   51ea8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   51eac:	b.hi	515c0 <my_regprop@@Base+0x172fc>  // b.pmore
   51eb0:	mov	x1, x19
   51eb4:	mov	x0, x20
   51eb8:	bl	269a4 <my_regexec@@Base+0x34b0>
   51ebc:	cmp	w22, #0x2b
   51ec0:	b.eq	51a64 <my_regprop@@Base+0x177a0>  // b.none
   51ec4:	mov	w0, #0x5                   	// #5
   51ec8:	str	w0, [x27]
   51ecc:	cmp	w22, #0x2a
   51ed0:	b.eq	518c4 <my_regprop@@Base+0x17600>  // b.none
   51ed4:	cmp	w22, #0x3f
   51ed8:	b.eq	518b8 <my_regprop@@Base+0x175f4>  // b.none
   51edc:	mov	w24, #0xffff                	// #65535
   51ee0:	ldr	w1, [sp, #272]
   51ee4:	mov	w0, #0x9                   	// #9
   51ee8:	tst	w1, w0
   51eec:	mov	w0, #0x5555                	// #21845
   51ef0:	ccmp	w24, w0, #0x4, eq  // eq = none
   51ef4:	b.gt	515cc <my_regprop@@Base+0x17308>
   51ef8:	ldr	x0, [x19, #64]
   51efc:	ldrb	w0, [x0]
   51f00:	cmp	w0, #0x3f
   51f04:	b.eq	51794 <my_regprop@@Base+0x174d0>  // b.none
   51f08:	cmp	w0, #0x2b
   51f0c:	b.eq	517d4 <my_regprop@@Base+0x17510>  // b.none
   51f10:	ldr	x1, [x19, #64]
   51f14:	ldrb	w2, [x1]
   51f18:	sub	w0, w2, #0x2a
   51f1c:	and	w0, w0, #0xff
   51f20:	cmp	w2, #0x3f
   51f24:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   51f28:	b.ls	51f70 <my_regprop@@Base+0x17cac>  // b.plast
   51f2c:	cmp	w2, #0x7b
   51f30:	b.ne	4cde0 <my_regprop@@Base+0x12b1c>  // b.any
   51f34:	ldrb	w0, [x1, #1]
   51f38:	sub	w0, w0, #0x30
   51f3c:	cmp	w0, #0x9
   51f40:	b.hi	4cde0 <my_regprop@@Base+0x12b1c>  // b.pmore
   51f44:	add	x0, x1, #0x1
   51f48:	mov	x4, x0
   51f4c:	ldrb	w2, [x0, #1]!
   51f50:	sub	w3, w2, #0x30
   51f54:	cmp	w3, #0x9
   51f58:	b.ls	51f48 <my_regprop@@Base+0x17c84>  // b.plast
   51f5c:	cmp	w2, #0x2c
   51f60:	b.eq	5184c <my_regprop@@Base+0x17588>  // b.none
   51f64:	ldrb	w0, [x0]
   51f68:	cmp	w0, #0x7d
   51f6c:	b.ne	4cde0 <my_regprop@@Base+0x12b1c>  // b.any
   51f70:	add	x1, x1, #0x1
   51f74:	str	x1, [x19, #64]
   51f78:	ldr	x1, [x19, #24]
   51f7c:	cbz	x1, 51f8c <my_regprop@@Base+0x17cc8>
   51f80:	mov	w2, #0xb                   	// #11
   51f84:	mov	x0, x20
   51f88:	bl	54b0 <Perl_save_pushptr@plt>
   51f8c:	ldr	x1, [x19, #160]
   51f90:	cbz	x1, 51fa0 <my_regprop@@Base+0x17cdc>
   51f94:	mov	w2, #0xa                   	// #10
   51f98:	mov	x0, x20
   51f9c:	bl	54b0 <Perl_save_pushptr@plt>
   51fa0:	ldr	x1, [x19, #168]
   51fa4:	cbz	x1, 51fb4 <my_regprop@@Base+0x17cf0>
   51fa8:	mov	w2, #0xa                   	// #10
   51fac:	mov	x0, x20
   51fb0:	bl	54b0 <Perl_save_pushptr@plt>
   51fb4:	ldr	x0, [x19, #64]
   51fb8:	ldr	x1, [x19, #72]
   51fbc:	sub	x1, x0, x1
   51fc0:	ldr	x0, [x19, #80]
   51fc4:	add	x0, x0, x1
   51fc8:	ldr	x1, [x19, #16]
   51fcc:	cmp	x0, x1
   51fd0:	b.hi	51880 <my_regprop@@Base+0x175bc>  // b.pmore
   51fd4:	ldr	x5, [x19, #8]
   51fd8:	sub	x7, x1, x0
   51fdc:	subs	x4, x0, x5
   51fe0:	b.mi	51890 <my_regprop@@Base+0x175cc>  // b.first
   51fe4:	ldr	w2, [x19, #192]
   51fe8:	cmp	w2, #0x0
   51fec:	cset	w3, ne  // ne = any
   51ff0:	cmp	x0, x1
   51ff4:	csel	x0, x0, x1, ls  // ls = plast
   51ff8:	str	x0, [sp]
   51ffc:	mov	w6, w3
   52000:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   52004:	add	x2, x2, #0x338
   52008:	adrp	x1, 7b000 <boot_re@@Base+0x1941c>
   5200c:	add	x1, x1, #0x3a8
   52010:	mov	x0, x20
   52014:	bl	5420 <Perl_croak@plt>
   52018:	ldr	x0, [sp, #304]
   5201c:	b	501bc <my_regprop@@Base+0x15ef8>
   52020:	mov	w0, #0x1                   	// #1
   52024:	str	w0, [sp, #236]
   52028:	ldr	w1, [x19]
   5202c:	ldr	x0, [sp, #304]
   52030:	tst	x1, #0x380
   52034:	b.ne	52018 <my_regprop@@Base+0x17d54>  // b.any
   52038:	and	w0, w0, #0xff
   5203c:	ldr	x1, [sp, #176]
   52040:	b	50240 <my_regprop@@Base+0x15f7c>
   52044:	add	x0, x21, #0x3
   52048:	str	x0, [x19, #64]
   5204c:	mov	w23, #0x1                   	// #1
   52050:	mov	w22, #0x0                   	// #0
   52054:	b	4e04c <my_regprop@@Base+0x13d88>
   52058:	add	x0, x21, #0x4
   5205c:	str	x0, [x19, #64]
   52060:	ldrb	w2, [x21, #4]
   52064:	sub	w2, w2, #0x30
   52068:	cmp	w2, #0x9
   5206c:	b.hi	4e12c <my_regprop@@Base+0x13e68>  // b.pmore
   52070:	mov	w23, #0x1                   	// #1
   52074:	mov	w22, w23
   52078:	b	4e04c <my_regprop@@Base+0x13d88>
   5207c:	ldr	w2, [x19]
   52080:	ubfx	x2, x2, #7, #3
   52084:	add	w2, w2, #0x19
   52088:	cmp	w2, #0x1c
   5208c:	b.hi	4dcd0 <my_regprop@@Base+0x13a0c>  // b.pmore
   52090:	mov	w21, #0x2                   	// #2
   52094:	mov	w0, #0x0                   	// #0
   52098:	b	4dc78 <my_regprop@@Base+0x139b4>
   5209c:	ldr	w2, [x19]
   520a0:	ubfx	x2, x2, #7, #3
   520a4:	add	w2, w2, #0x19
   520a8:	cmp	w2, #0x1c
   520ac:	b.hi	4dcb8 <my_regprop@@Base+0x139f4>  // b.pmore
   520b0:	mov	w21, #0x2                   	// #2
   520b4:	mov	w0, #0x1                   	// #1
   520b8:	b	4dc78 <my_regprop@@Base+0x139b4>
   520bc:	bl	5300 <__stack_chk_fail@plt>
   520c0:	stp	x29, x30, [sp, #-128]!
   520c4:	mov	x29, sp
   520c8:	stp	x19, x20, [sp, #16]
   520cc:	stp	x21, x22, [sp, #32]
   520d0:	stp	x23, x24, [sp, #48]
   520d4:	mov	x21, x0
   520d8:	mov	x19, x1
   520dc:	mov	x22, x2
   520e0:	mov	w20, w3
   520e4:	mov	w23, w4
   520e8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   520ec:	ldr	x0, [x0, #3920]
   520f0:	ldr	x1, [x0]
   520f4:	str	x1, [sp, #120]
   520f8:	mov	x1, #0x0                   	// #0
   520fc:	str	wzr, [sp, #108]
   52100:	str	xzr, [sp, #112]
   52104:	ldr	x0, [x21, #224]
   52108:	cbz	x0, 5220c <my_regprop@@Base+0x17f48>
   5210c:	mov	w2, #0x1                   	// #1
   52110:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   52114:	add	x1, x1, #0x608
   52118:	mov	x0, x21
   5211c:	bl	54f0 <Perl_get_sv@plt>
   52120:	mov	x24, x0
   52124:	cbz	x0, 52358 <my_regprop@@Base+0x18094>
   52128:	ldr	w0, [x0, #12]
   5212c:	tbz	w0, #8, 52178 <my_regprop@@Base+0x17eb4>
   52130:	ldr	w1, [x24, #12]
   52134:	and	w0, w1, #0x3fff00
   52138:	and	w0, w0, #0xffe001ff
   5213c:	cmp	w0, #0x100
   52140:	b.ne	521f4 <my_regprop@@Base+0x17f30>  // b.any
   52144:	and	w2, w1, #0xf
   52148:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5214c:	ldr	x0, [x0, #3712]
   52150:	ldrb	w0, [x0, w2, uxtw]
   52154:	cbz	w0, 5218c <my_regprop@@Base+0x17ec8>
   52158:	and	w0, w1, #0xc000
   5215c:	cmp	w0, #0x8, lsl #12
   52160:	b.eq	521b8 <my_regprop@@Base+0x17ef4>  // b.none
   52164:	stp	x25, x26, [sp, #64]
   52168:	ldr	x0, [x24]
   5216c:	ldr	x0, [x0, #32]
   52170:	str	x0, [sp, #112]
   52174:	b	52210 <my_regprop@@Base+0x17f4c>
   52178:	mov	x2, #0xff08                	// #65288
   5217c:	mov	x1, x24
   52180:	mov	x0, x21
   52184:	bl	5310 <Perl_sv_setuv@plt>
   52188:	b	52130 <my_regprop@@Base+0x17e6c>
   5218c:	stp	x25, x26, [sp, #64]
   52190:	stp	x27, x28, [sp, #80]
   52194:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52198:	add	x3, x3, #0xc10
   5219c:	add	x3, x3, #0x950
   521a0:	mov	w2, #0x303f                	// #12351
   521a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   521a8:	add	x1, x1, #0xfb8
   521ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   521b0:	add	x0, x0, #0xda0
   521b4:	bl	58e0 <__assert_fail@plt>
   521b8:	and	w0, w1, #0xff
   521bc:	sub	w0, w0, #0x9
   521c0:	cmp	w0, #0x1
   521c4:	b.hi	52164 <my_regprop@@Base+0x17ea0>  // b.pmore
   521c8:	stp	x25, x26, [sp, #64]
   521cc:	stp	x27, x28, [sp, #80]
   521d0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   521d4:	add	x3, x3, #0xc10
   521d8:	add	x3, x3, #0x950
   521dc:	mov	w2, #0x303f                	// #12351
   521e0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   521e4:	add	x1, x1, #0xfb8
   521e8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   521ec:	add	x0, x0, #0xdd0
   521f0:	bl	58e0 <__assert_fail@plt>
   521f4:	stp	x25, x26, [sp, #64]
   521f8:	mov	w2, #0x2                   	// #2
   521fc:	mov	x1, x24
   52200:	mov	x0, x21
   52204:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   52208:	b	52170 <my_regprop@@Base+0x17eac>
   5220c:	stp	x25, x26, [sp, #64]
   52210:	cbz	x19, 52360 <my_regprop@@Base+0x1809c>
   52214:	cbz	x22, 52388 <my_regprop@@Base+0x180c4>
   52218:	ldr	w0, [x21, #2368]
   5221c:	tbnz	w0, #20, 52228 <my_regprop@@Base+0x17f64>
   52220:	ldr	x0, [sp, #112]
   52224:	tbz	w0, #0, 522f0 <my_regprop@@Base+0x1802c>
   52228:	ldr	w0, [x21, #2368]
   5222c:	tbnz	w0, #20, 52238 <my_regprop@@Base+0x17f74>
   52230:	ldr	x0, [sp, #112]
   52234:	tbz	w0, #0, 522d8 <my_regprop@@Base+0x18014>
   52238:	ldr	x2, [x19, #64]
   5223c:	ldr	x0, [x19, #336]
   52240:	cmp	x0, x2
   52244:	b.eq	523b0 <my_regprop@@Base+0x180ec>  // b.none
   52248:	adrp	x5, 7d000 <boot_re@@Base+0x1b41c>
   5224c:	add	x5, x5, #0x20
   52250:	ldr	x3, [x19, #56]
   52254:	mov	w7, #0x820e                	// #33294
   52258:	mov	x6, x5
   5225c:	mov	x4, #0x10                  	// #16
   52260:	sub	x3, x3, x2
   52264:	ldr	x1, [x19, #368]
   52268:	mov	x0, x21
   5226c:	bl	53f0 <Perl_pv_pretty@plt>
   52270:	mov	x2, x0
   52274:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   52278:	add	x1, x1, #0xb50
   5227c:	mov	x0, x21
   52280:	bl	50e0 <Perl_re_printf@plt>
   52284:	ldr	x2, [x19, #104]
   52288:	ldrsw	x0, [x19, #344]
   5228c:	cmp	x0, x2
   52290:	b.eq	523cc <my_regprop@@Base+0x18108>  // b.none
   52294:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   52298:	add	x1, x1, #0x800
   5229c:	mov	x0, x21
   522a0:	bl	50e0 <Perl_re_printf@plt>
   522a4:	adrp	x4, 7c000 <boot_re@@Base+0x1a41c>
   522a8:	add	x4, x4, #0x350
   522ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   522b0:	add	x3, x3, #0x20
   522b4:	lsl	w2, w23, #1
   522b8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   522bc:	add	x1, x1, #0x818
   522c0:	mov	x0, x21
   522c4:	bl	50e0 <Perl_re_printf@plt>
   522c8:	ldr	x0, [x19, #104]
   522cc:	str	w0, [x19, #344]
   522d0:	ldr	x0, [x19, #64]
   522d4:	str	x0, [x19, #336]
   522d8:	adrp	x2, 77000 <boot_re@@Base+0x1541c>
   522dc:	add	x2, x2, #0x8d8
   522e0:	adrp	x1, 79000 <boot_re@@Base+0x1741c>
   522e4:	add	x1, x1, #0x718
   522e8:	mov	x0, x21
   522ec:	bl	50e0 <Perl_re_printf@plt>
   522f0:	cbnz	w20, 5245c <my_regprop@@Base+0x18198>
   522f4:	ldrb	w0, [x19, #388]
   522f8:	cbz	w0, 523e8 <my_regprop@@Base+0x18124>
   522fc:	mov	w3, #0x0                   	// #0
   52300:	mov	w2, #0x47                  	// #71
   52304:	mov	x1, x19
   52308:	mov	x0, x21
   5230c:	bl	2a3dc <my_regexec@@Base+0x6ee8>
   52310:	mov	x24, x0
   52314:	str	wzr, [x22]
   52318:	mov	w3, #0x0                   	// #0
   5231c:	add	x2, x19, #0x40
   52320:	mov	x1, x19
   52324:	mov	x0, x21
   52328:	bl	266ac <my_regexec@@Base+0x31b8>
   5232c:	ldr	x0, [x19, #64]
   52330:	ldr	x1, [x19, #56]
   52334:	mov	w26, #0x0                   	// #0
   52338:	mov	x25, #0x0                   	// #0
   5233c:	cmp	x0, x1
   52340:	b.cs	52668 <my_regprop@@Base+0x183a4>  // b.hs, b.nlast
   52344:	stp	x27, x28, [sp, #80]
   52348:	mov	w27, #0x7c                  	// #124
   5234c:	add	w23, w23, #0x1
   52350:	add	x28, sp, #0x6c
   52354:	b	5253c <my_regprop@@Base+0x18278>
   52358:	stp	x25, x26, [sp, #64]
   5235c:	b	52210 <my_regprop@@Base+0x17f4c>
   52360:	stp	x27, x28, [sp, #80]
   52364:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52368:	add	x3, x3, #0xc10
   5236c:	add	x3, x3, #0x950
   52370:	mov	w2, #0x3041                	// #12353
   52374:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52378:	add	x1, x1, #0xfb8
   5237c:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   52380:	add	x0, x0, #0xfe8
   52384:	bl	58e0 <__assert_fail@plt>
   52388:	stp	x27, x28, [sp, #80]
   5238c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52390:	add	x3, x3, #0xc10
   52394:	add	x3, x3, #0x950
   52398:	mov	w2, #0x3041                	// #12353
   5239c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   523a0:	add	x1, x1, #0xfb8
   523a4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   523a8:	add	x0, x0, #0xfd0
   523ac:	bl	58e0 <__assert_fail@plt>
   523b0:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   523b4:	add	x2, x2, #0x20
   523b8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   523bc:	add	x1, x1, #0x7f8
   523c0:	mov	x0, x21
   523c4:	bl	50e0 <Perl_re_printf@plt>
   523c8:	b	52284 <my_regprop@@Base+0x17fc0>
   523cc:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   523d0:	add	x2, x2, #0x20
   523d4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   523d8:	add	x1, x1, #0x808
   523dc:	mov	x0, x21
   523e0:	bl	50e0 <Perl_re_printf@plt>
   523e4:	b	522a4 <my_regprop@@Base+0x17fe0>
   523e8:	mov	w2, #0x22                  	// #34
   523ec:	mov	x1, x19
   523f0:	mov	x0, x21
   523f4:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   523f8:	mov	x24, x0
   523fc:	ldr	w0, [x21, #2368]
   52400:	tbnz	w0, #20, 5240c <my_regprop@@Base+0x18148>
   52404:	ldr	x0, [sp, #112]
   52408:	tbz	w0, #18, 52424 <my_regprop@@Base+0x18160>
   5240c:	mov	w3, #0x1                   	// #1
   52410:	mov	w2, w24
   52414:	mov	w1, #0x304c                	// #12364
   52418:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   5241c:	add	x0, x0, #0x8
   52420:	bl	5010 <Perl_warn_nocontext@plt>
   52424:	lsl	x2, x24, #2
   52428:	tbnz	x24, #61, 52444 <my_regprop@@Base+0x18180>
   5242c:	ldr	x0, [x19, #40]
   52430:	ldr	x0, [x0, #8]
   52434:	lsl	x2, x2, #1
   52438:	mov	w1, #0x1                   	// #1
   5243c:	str	w1, [x0, x2]
   52440:	b	52314 <my_regprop@@Base+0x18050>
   52444:	stp	x27, x28, [sp, #80]
   52448:	ubfx	x2, x2, #2, #32
   5244c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   52450:	add	x1, x1, #0x888
   52454:	mov	x0, x21
   52458:	bl	5420 <Perl_croak@plt>
   5245c:	mov	x24, #0x0                   	// #0
   52460:	b	52314 <my_regprop@@Base+0x18050>
   52464:	ldr	x20, [x19, #16]
   52468:	ldr	x0, [x19, #8]
   5246c:	sub	x20, x20, x0
   52470:	ldr	x1, [x19, #24]
   52474:	cbz	x1, 52484 <my_regprop@@Base+0x181c0>
   52478:	mov	w2, #0xb                   	// #11
   5247c:	mov	x0, x21
   52480:	bl	54b0 <Perl_save_pushptr@plt>
   52484:	ldr	x1, [x19, #160]
   52488:	cbz	x1, 52498 <my_regprop@@Base+0x181d4>
   5248c:	mov	w2, #0xa                   	// #10
   52490:	mov	x0, x21
   52494:	bl	54b0 <Perl_save_pushptr@plt>
   52498:	ldr	x1, [x19, #168]
   5249c:	cbz	x1, 524ac <my_regprop@@Base+0x181e8>
   524a0:	mov	w2, #0xa                   	// #10
   524a4:	mov	x0, x21
   524a8:	bl	54b0 <Perl_save_pushptr@plt>
   524ac:	cmp	x20, #0x7f
   524b0:	b.le	524e8 <my_regprop@@Base+0x18224>
   524b4:	mov	x20, #0x75                  	// #117
   524b8:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   524bc:	add	x6, x6, #0xfe0
   524c0:	ldr	w0, [x19, #192]
   524c4:	cmp	w0, #0x0
   524c8:	ldr	x5, [x19, #8]
   524cc:	mov	x4, x20
   524d0:	cset	w3, ne  // ne = any
   524d4:	ldrsw	x2, [sp, #108]
   524d8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   524dc:	add	x1, x1, #0x358
   524e0:	mov	x0, x21
   524e4:	bl	5420 <Perl_croak@plt>
   524e8:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   524ec:	add	x6, x6, #0x20
   524f0:	b	524c0 <my_regprop@@Base+0x181fc>
   524f4:	cmp	x24, #0x0
   524f8:	csel	x24, x24, x0, ne  // ne = any
   524fc:	ldr	w1, [sp, #108]
   52500:	mov	w0, #0x9                   	// #9
   52504:	and	w0, w1, w0
   52508:	ldr	w2, [x22]
   5250c:	orr	w0, w0, w2
   52510:	str	w0, [x22]
   52514:	cbnz	x25, 525c0 <my_regprop@@Base+0x182fc>
   52518:	and	w1, w1, #0x4
   5251c:	orr	w0, w1, w0
   52520:	str	w0, [x22]
   52524:	add	w26, w26, #0x1
   52528:	mov	x25, x20
   5252c:	ldr	x0, [x19, #64]
   52530:	ldr	x1, [x19, #56]
   52534:	cmp	x0, x1
   52538:	b.cs	52640 <my_regprop@@Base+0x1837c>  // b.hs, b.nlast
   5253c:	ldrb	w0, [x0]
   52540:	cmp	w0, #0x29
   52544:	ccmp	w0, w27, #0x4, ne  // ne = any
   52548:	b.eq	52614 <my_regprop@@Base+0x18350>  // b.none
   5254c:	ldr	w0, [sp, #108]
   52550:	and	w0, w0, #0xffffffef
   52554:	str	w0, [sp, #108]
   52558:	mov	w3, w23
   5255c:	mov	x2, x28
   52560:	mov	x1, x19
   52564:	mov	x0, x21
   52568:	bl	4c6a0 <my_regprop@@Base+0x123dc>
   5256c:	mov	x20, x0
   52570:	cbnz	x0, 524f4 <my_regprop@@Base+0x18230>
   52574:	ldr	w0, [sp, #108]
   52578:	tbnz	w0, #4, 5252c <my_regprop@@Base+0x18268>
   5257c:	ands	w0, w0, #0x60
   52580:	b.eq	52464 <my_regprop@@Base+0x181a0>  // b.none
   52584:	str	w0, [x22]
   52588:	ldp	x27, x28, [sp, #80]
   5258c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   52590:	ldr	x0, [x0, #3920]
   52594:	ldr	x1, [sp, #120]
   52598:	ldr	x0, [x0]
   5259c:	eor	x0, x1, x0
   525a0:	cbnz	x0, 5268c <my_regprop@@Base+0x183c8>
   525a4:	mov	x0, x20
   525a8:	ldp	x25, x26, [sp, #64]
   525ac:	ldp	x19, x20, [sp, #16]
   525b0:	ldp	x21, x22, [sp, #32]
   525b4:	ldp	x23, x24, [sp, #48]
   525b8:	ldp	x29, x30, [sp], #128
   525bc:	ret
   525c0:	ldr	w0, [x19, #112]
   525c4:	cmp	w0, #0x9
   525c8:	b.gt	525d4 <my_regprop@@Base+0x18310>
   525cc:	add	w0, w0, #0x1
   525d0:	str	w0, [x19, #112]
   525d4:	mov	w4, w23
   525d8:	mov	x3, x20
   525dc:	mov	x2, x25
   525e0:	mov	x1, x19
   525e4:	mov	x0, x21
   525e8:	bl	3b894 <my_regprop@@Base+0x15d0>
   525ec:	and	w0, w0, #0xff
   525f0:	cbnz	w0, 52524 <my_regprop@@Base+0x18260>
   525f4:	mov	w0, #0x1                   	// #1
   525f8:	strb	w0, [x19, #388]
   525fc:	ldr	w0, [x22]
   52600:	orr	w0, w0, #0x20
   52604:	str	w0, [x22]
   52608:	mov	x20, #0x0                   	// #0
   5260c:	ldp	x27, x28, [sp, #80]
   52610:	b	5258c <my_regprop@@Base+0x182c8>
   52614:	mov	x20, x24
   52618:	cbz	x25, 52648 <my_regprop@@Base+0x18384>
   5261c:	ldp	x27, x28, [sp, #80]
   52620:	cmp	w26, #0x1
   52624:	b.ne	5258c <my_regprop@@Base+0x182c8>  // b.any
   52628:	ldr	w0, [sp, #108]
   5262c:	and	w1, w0, #0x2
   52630:	ldr	w0, [x22]
   52634:	orr	w0, w0, w1
   52638:	str	w0, [x22]
   5263c:	b	5258c <my_regprop@@Base+0x182c8>
   52640:	mov	x20, x24
   52644:	b	52618 <my_regprop@@Base+0x18354>
   52648:	mov	w2, #0x2f                  	// #47
   5264c:	mov	x1, x19
   52650:	mov	x0, x21
   52654:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   52658:	cmp	x20, #0x0
   5265c:	csel	x20, x20, x0, ne  // ne = any
   52660:	ldp	x27, x28, [sp, #80]
   52664:	b	52620 <my_regprop@@Base+0x1835c>
   52668:	mov	w2, #0x2f                  	// #47
   5266c:	mov	x1, x19
   52670:	mov	x0, x21
   52674:	bl	2a8a0 <my_regexec@@Base+0x73ac>
   52678:	mov	x20, x0
   5267c:	cbz	x24, 5258c <my_regprop@@Base+0x182c8>
   52680:	mov	x20, x24
   52684:	mov	w26, #0x0                   	// #0
   52688:	b	52620 <my_regprop@@Base+0x1835c>
   5268c:	stp	x27, x28, [sp, #80]
   52690:	bl	5300 <__stack_chk_fail@plt>
   52694:	stp	x29, x30, [sp, #-96]!
   52698:	mov	x29, sp
   5269c:	stp	x19, x20, [sp, #16]
   526a0:	stp	x21, x22, [sp, #32]
   526a4:	stp	x23, x24, [sp, #48]
   526a8:	str	x25, [sp, #64]
   526ac:	mov	x19, x0
   526b0:	mov	x25, x1
   526b4:	mov	x21, x2
   526b8:	mov	x20, x3
   526bc:	mov	w24, w4
   526c0:	mov	w23, w5
   526c4:	str	xzr, [sp, #88]
   526c8:	ldr	x0, [x0, #224]
   526cc:	cbz	x0, 52734 <my_regprop@@Base+0x18470>
   526d0:	mov	w2, #0x1                   	// #1
   526d4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   526d8:	add	x1, x1, #0x608
   526dc:	mov	x0, x19
   526e0:	bl	54f0 <Perl_get_sv@plt>
   526e4:	mov	x22, x0
   526e8:	cbz	x0, 52734 <my_regprop@@Base+0x18470>
   526ec:	ldr	w0, [x0, #12]
   526f0:	tbz	w0, #8, 52810 <my_regprop@@Base+0x1854c>
   526f4:	ldr	w1, [x22, #12]
   526f8:	and	w0, w1, #0x3fff00
   526fc:	and	w0, w0, #0xffe001ff
   52700:	cmp	w0, #0x100
   52704:	b.ne	5287c <my_regprop@@Base+0x185b8>  // b.any
   52708:	and	w2, w1, #0xf
   5270c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   52710:	ldr	x0, [x0, #3712]
   52714:	ldrb	w0, [x0, w2, uxtw]
   52718:	cbz	w0, 52824 <my_regprop@@Base+0x18560>
   5271c:	and	w0, w1, #0xc000
   52720:	cmp	w0, #0x8, lsl #12
   52724:	b.eq	52848 <my_regprop@@Base+0x18584>  // b.none
   52728:	ldr	x0, [x22]
   5272c:	ldr	x0, [x0, #32]
   52730:	str	x0, [sp, #88]
   52734:	ldr	w0, [x19, #2368]
   52738:	tbnz	w0, #20, 52744 <my_regprop@@Base+0x18480>
   5273c:	ldr	x0, [sp, #88]
   52740:	tbz	w0, #1, 527f8 <my_regprop@@Base+0x18534>
   52744:	cbz	x20, 527f8 <my_regprop@@Base+0x18534>
   52748:	mov	x1, x20
   5274c:	mov	x0, x19
   52750:	bl	58a0 <Perl_regnext@plt>
   52754:	mov	x22, x0
   52758:	mov	x5, x21
   5275c:	mov	x4, #0x0                   	// #0
   52760:	mov	x3, x20
   52764:	ldr	x2, [x21, #368]
   52768:	ldr	x1, [x21, #32]
   5276c:	mov	x0, x19
   52770:	bl	5580 <my_regprop@plt>
   52774:	ldr	x3, [x21, #96]
   52778:	sub	x20, x20, x3
   5277c:	asr	x20, x20, #2
   52780:	ldr	x1, [x21, #368]
   52784:	ldr	w0, [x1, #12]
   52788:	and	w0, w0, #0x3ffc00
   5278c:	and	w0, w0, #0xffe007ff
   52790:	cmp	w0, #0x400
   52794:	b.ne	52890 <my_regprop@@Base+0x185cc>  // b.any
   52798:	ldr	x5, [x1, #16]
   5279c:	mov	w6, #0x0                   	// #0
   527a0:	cbz	x22, 527b0 <my_regprop@@Base+0x184ec>
   527a4:	ldr	x6, [x21, #96]
   527a8:	sub	x22, x22, x6
   527ac:	ubfx	x6, x22, #2, #32
   527b0:	mov	w4, w20
   527b4:	mov	x3, x25
   527b8:	mov	w2, w24
   527bc:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   527c0:	add	x1, x1, #0x3a0
   527c4:	mov	x0, x19
   527c8:	bl	5940 <Perl_re_indentf@plt>
   527cc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   527d0:	add	x3, x3, #0x538
   527d4:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   527d8:	add	x2, x2, #0x3b0
   527dc:	mov	w1, w23
   527e0:	mov	x0, x19
   527e4:	bl	31ff4 <Perl_re_printf@@Base+0x2118>
   527e8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   527ec:	add	x1, x1, #0x8d8
   527f0:	mov	x0, x19
   527f4:	bl	50e0 <Perl_re_printf@plt>
   527f8:	ldp	x19, x20, [sp, #16]
   527fc:	ldp	x21, x22, [sp, #32]
   52800:	ldp	x23, x24, [sp, #48]
   52804:	ldr	x25, [sp, #64]
   52808:	ldp	x29, x30, [sp], #96
   5280c:	ret
   52810:	mov	x2, #0xff08                	// #65288
   52814:	mov	x1, x22
   52818:	mov	x0, x19
   5281c:	bl	5310 <Perl_sv_setuv@plt>
   52820:	b	526f4 <my_regprop@@Base+0x18430>
   52824:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52828:	add	x3, x3, #0xc10
   5282c:	add	x3, x3, #0x960
   52830:	mov	w2, #0x499                 	// #1177
   52834:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52838:	add	x1, x1, #0xfb8
   5283c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52840:	add	x0, x0, #0xda0
   52844:	bl	58e0 <__assert_fail@plt>
   52848:	and	w1, w1, #0xff
   5284c:	sub	w1, w1, #0x9
   52850:	cmp	w1, #0x1
   52854:	b.hi	52728 <my_regprop@@Base+0x18464>  // b.pmore
   52858:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5285c:	add	x3, x3, #0xc10
   52860:	add	x3, x3, #0x960
   52864:	mov	w2, #0x499                 	// #1177
   52868:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5286c:	add	x1, x1, #0xfb8
   52870:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52874:	add	x0, x0, #0xdd0
   52878:	bl	58e0 <__assert_fail@plt>
   5287c:	mov	w2, #0x2                   	// #2
   52880:	mov	x1, x22
   52884:	mov	x0, x19
   52888:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5288c:	b	52730 <my_regprop@@Base+0x1846c>
   52890:	mov	w3, #0x22                  	// #34
   52894:	mov	x2, #0x0                   	// #0
   52898:	mov	x0, x19
   5289c:	bl	5200 <Perl_sv_2pv_flags@plt>
   528a0:	mov	x5, x0
   528a4:	b	5279c <my_regprop@@Base+0x184d8>
   528a8:	sub	sp, sp, #0x2d0
   528ac:	stp	x29, x30, [sp, #32]
   528b0:	add	x29, sp, #0x20
   528b4:	stp	x19, x20, [sp, #48]
   528b8:	stp	x21, x22, [sp, #64]
   528bc:	stp	x23, x24, [sp, #80]
   528c0:	stp	x25, x26, [sp, #96]
   528c4:	stp	x27, x28, [sp, #112]
   528c8:	mov	x26, x0
   528cc:	mov	x28, x1
   528d0:	str	x2, [sp, #328]
   528d4:	str	x3, [sp, #200]
   528d8:	str	x4, [sp, #320]
   528dc:	str	x5, [sp, #168]
   528e0:	mov	x27, x6
   528e4:	str	w7, [sp, #188]
   528e8:	ldr	x0, [sp, #728]
   528ec:	str	x0, [sp, #296]
   528f0:	ldr	w25, [sp, #736]
   528f4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   528f8:	ldr	x0, [x0, #3920]
   528fc:	ldr	x1, [x0]
   52900:	str	x1, [sp, #712]
   52904:	mov	x1, #0x0                   	// #0
   52908:	ldr	x0, [x2]
   5290c:	str	x0, [sp, #304]
   52910:	str	x0, [sp, #336]
   52914:	str	wzr, [sp, #144]
   52918:	tbz	w25, #10, 52928 <my_regprop@@Base+0x18664>
   5291c:	ldr	w0, [x6, #152]
   52920:	ubfx	x0, x0, #6, #1
   52924:	str	x0, [sp, #144]
   52928:	ldr	x0, [sp, #304]
   5292c:	ldrb	w0, [x0, #1]
   52930:	str	wzr, [sp, #316]
   52934:	cmp	w0, #0x38
   52938:	b.eq	52a3c <my_regprop@@Base+0x18778>  // b.none
   5293c:	str	xzr, [sp, #344]
   52940:	ldr	x0, [x26, #224]
   52944:	cbz	x0, 529ac <my_regprop@@Base+0x186e8>
   52948:	mov	w2, #0x1                   	// #1
   5294c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   52950:	add	x1, x1, #0x608
   52954:	mov	x0, x26
   52958:	bl	54f0 <Perl_get_sv@plt>
   5295c:	mov	x19, x0
   52960:	cbz	x0, 529ac <my_regprop@@Base+0x186e8>
   52964:	ldr	w0, [x0, #12]
   52968:	tbz	w0, #8, 52a4c <my_regprop@@Base+0x18788>
   5296c:	ldr	w0, [x19, #12]
   52970:	and	w1, w0, #0x3fff00
   52974:	and	w1, w1, #0xffe001ff
   52978:	cmp	w1, #0x100
   5297c:	b.ne	52ab8 <my_regprop@@Base+0x187f4>  // b.any
   52980:	and	w2, w0, #0xf
   52984:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   52988:	ldr	x1, [x1, #3712]
   5298c:	ldrb	w1, [x1, w2, uxtw]
   52990:	cbz	w1, 52a60 <my_regprop@@Base+0x1879c>
   52994:	and	w1, w0, #0xc000
   52998:	cmp	w1, #0x8, lsl #12
   5299c:	b.eq	52a84 <my_regprop@@Base+0x187c0>  // b.none
   529a0:	ldr	x0, [x19]
   529a4:	ldr	x0, [x0, #32]
   529a8:	str	x0, [sp, #344]
   529ac:	cbz	x28, 52acc <my_regprop@@Base+0x18808>
   529b0:	ldr	x0, [sp, #200]
   529b4:	cbz	x0, 52af0 <my_regprop@@Base+0x1882c>
   529b8:	ldr	x0, [sp, #320]
   529bc:	cbz	x0, 52b14 <my_regprop@@Base+0x18850>
   529c0:	ldr	x0, [sp, #168]
   529c4:	cbz	x0, 52b38 <my_regprop@@Base+0x18874>
   529c8:	mov	w0, #0x1                   	// #1
   529cc:	strb	w0, [x28, #386]
   529d0:	stp	xzr, xzr, [sp, #496]
   529d4:	add	x0, sp, #0x200
   529d8:	stp	xzr, xzr, [x0]
   529dc:	stp	xzr, xzr, [x0, #16]
   529e0:	stp	xzr, xzr, [x0, #32]
   529e4:	stp	xzr, xzr, [x0, #48]
   529e8:	stp	xzr, xzr, [x0, #64]
   529ec:	stp	xzr, xzr, [x0, #80]
   529f0:	stp	xzr, xzr, [x0, #96]
   529f4:	stp	xzr, xzr, [x0, #112]
   529f8:	stp	xzr, xzr, [x0, #128]
   529fc:	stp	xzr, xzr, [x0, #144]
   52a00:	ldr	w0, [sp, #744]
   52a04:	cbz	w0, 52b5c <my_regprop@@Base+0x18898>
   52a08:	str	xzr, [sp, #248]
   52a0c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   52a10:	str	x0, [sp, #240]
   52a14:	str	xzr, [sp, #272]
   52a18:	str	wzr, [sp, #256]
   52a1c:	str	xzr, [sp, #216]
   52a20:	str	wzr, [sp, #260]
   52a24:	str	xzr, [sp, #192]
   52a28:	mov	x0, x27
   52a2c:	mov	x27, x28
   52a30:	str	w25, [sp, #136]
   52a34:	mov	x28, x0
   52a38:	b	5a828 <my_regprop@@Base+0x20564>
   52a3c:	ldr	x0, [sp, #304]
   52a40:	ldr	w0, [x0, #4]
   52a44:	str	w0, [sp, #316]
   52a48:	b	5293c <my_regprop@@Base+0x18678>
   52a4c:	mov	x2, #0xff08                	// #65288
   52a50:	mov	x1, x19
   52a54:	mov	x0, x26
   52a58:	bl	5310 <Perl_sv_setuv@plt>
   52a5c:	b	5296c <my_regprop@@Base+0x186a8>
   52a60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52a64:	add	x3, x3, #0xc10
   52a68:	add	x3, x3, #0x970
   52a6c:	mov	w2, #0x1166                	// #4454
   52a70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52a74:	add	x1, x1, #0xfb8
   52a78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52a7c:	add	x0, x0, #0xda0
   52a80:	bl	58e0 <__assert_fail@plt>
   52a84:	and	w0, w0, #0xff
   52a88:	sub	w0, w0, #0x9
   52a8c:	cmp	w0, #0x1
   52a90:	b.hi	529a0 <my_regprop@@Base+0x186dc>  // b.pmore
   52a94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52a98:	add	x3, x3, #0xc10
   52a9c:	add	x3, x3, #0x970
   52aa0:	mov	w2, #0x1166                	// #4454
   52aa4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52aa8:	add	x1, x1, #0xfb8
   52aac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52ab0:	add	x0, x0, #0xdd0
   52ab4:	bl	58e0 <__assert_fail@plt>
   52ab8:	mov	w2, #0x2                   	// #2
   52abc:	mov	x1, x19
   52ac0:	mov	x0, x26
   52ac4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   52ac8:	b	529a8 <my_regprop@@Base+0x186e4>
   52acc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52ad0:	add	x3, x3, #0xc10
   52ad4:	add	x3, x3, #0x970
   52ad8:	mov	w2, #0x1168                	// #4456
   52adc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52ae0:	add	x1, x1, #0xfb8
   52ae4:	adrp	x0, 75000 <boot_re@@Base+0x1341c>
   52ae8:	add	x0, x0, #0xfe8
   52aec:	bl	58e0 <__assert_fail@plt>
   52af0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52af4:	add	x3, x3, #0xc10
   52af8:	add	x3, x3, #0x970
   52afc:	mov	w2, #0x1168                	// #4456
   52b00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52b04:	add	x1, x1, #0xfb8
   52b08:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   52b0c:	add	x0, x0, #0xb98
   52b10:	bl	58e0 <__assert_fail@plt>
   52b14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52b18:	add	x3, x3, #0xc10
   52b1c:	add	x3, x3, #0x970
   52b20:	mov	w2, #0x1168                	// #4456
   52b24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52b28:	add	x1, x1, #0xfb8
   52b2c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   52b30:	add	x0, x0, #0x3b8
   52b34:	bl	58e0 <__assert_fail@plt>
   52b38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52b3c:	add	x3, x3, #0xc10
   52b40:	add	x3, x3, #0x970
   52b44:	mov	w2, #0x1168                	// #4456
   52b48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52b4c:	add	x1, x1, #0xfb8
   52b50:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   52b54:	add	x0, x0, #0xc88
   52b58:	bl	58e0 <__assert_fail@plt>
   52b5c:	ldr	x1, [sp, #304]
   52b60:	ldrb	w0, [x1, #1]
   52b64:	cmp	w0, #0x38
   52b68:	b.ne	52b84 <my_regprop@@Base+0x188c0>  // b.any
   52b6c:	mov	x0, x26
   52b70:	bl	58a0 <Perl_regnext@plt>
   52b74:	mov	x1, x0
   52b78:	cbnz	x0, 52b60 <my_regprop@@Base+0x1889c>
   52b7c:	str	x0, [sp, #304]
   52b80:	b	52a08 <my_regprop@@Base+0x18744>
   52b84:	str	x1, [sp, #304]
   52b88:	b	52a08 <my_regprop@@Base+0x18744>
   52b8c:	ldr	x0, [sp, #168]
   52b90:	str	x0, [sp]
   52b94:	ldr	x7, [sp, #336]
   52b98:	ldr	w6, [sp, #720]
   52b9c:	ldr	w5, [sp, #744]
   52ba0:	mov	w4, w4
   52ba4:	ldrsw	x3, [sp, #188]
   52ba8:	ldr	w2, [sp, #744]
   52bac:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   52bb0:	add	x1, x1, #0x3c0
   52bb4:	mov	x0, x26
   52bb8:	bl	5940 <Perl_re_indentf@plt>
   52bbc:	ldr	w0, [sp, #720]
   52bc0:	cbz	w0, 52c30 <my_regprop@@Base+0x1896c>
   52bc4:	mov	w19, #0x0                   	// #0
   52bc8:	adrp	x20, 7c000 <boot_re@@Base+0x1a41c>
   52bcc:	add	x20, x20, #0x420
   52bd0:	adrp	x21, 79000 <boot_re@@Base+0x1741c>
   52bd4:	add	x21, x21, #0x420
   52bd8:	ldr	w22, [sp, #720]
   52bdc:	b	52c50 <my_regprop@@Base+0x1898c>
   52be0:	add	w2, w2, #0x1
   52be4:	cmp	w2, w5
   52be8:	b.eq	52c24 <my_regprop@@Base+0x18960>  // b.none
   52bec:	lsr	w0, w2, #3
   52bf0:	lsr	w3, w2, #3
   52bf4:	and	w1, w2, #0x7
   52bf8:	ldrb	w0, [x4, w0, uxtw]
   52bfc:	asr	w0, w0, w1
   52c00:	tbz	w0, #0, 52be0 <my_regprop@@Base+0x1891c>
   52c04:	cbz	w19, 52c18 <my_regprop@@Base+0x18954>
   52c08:	add	x3, x7, x3
   52c0c:	ldrb	w0, [x3, x6]
   52c10:	asr	w1, w0, w1
   52c14:	tbnz	w1, #0, 52be0 <my_regprop@@Base+0x1891c>
   52c18:	mov	x1, x20
   52c1c:	mov	x0, x26
   52c20:	bl	50e0 <Perl_re_printf@plt>
   52c24:	add	w19, w19, #0x1
   52c28:	cmp	w19, w22
   52c2c:	b.ne	52c44 <my_regprop@@Base+0x18980>  // b.any
   52c30:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   52c34:	add	x1, x1, #0x8d8
   52c38:	mov	x0, x26
   52c3c:	bl	50e0 <Perl_re_printf@plt>
   52c40:	b	5a850 <my_regprop@@Base+0x2058c>
   52c44:	mov	x1, x21
   52c48:	mov	x0, x26
   52c4c:	bl	50e0 <Perl_re_printf@plt>
   52c50:	ldr	w5, [x27, #148]
   52c54:	cbz	w5, 52c24 <my_regprop@@Base+0x18960>
   52c58:	ldr	x7, [x27, #232]
   52c5c:	ldr	w6, [x27, #240]
   52c60:	mul	w4, w6, w19
   52c64:	sub	w6, w4, w6
   52c68:	mov	w2, #0x0                   	// #0
   52c6c:	add	x4, x7, w4, uxtw
   52c70:	b	52bec <my_regprop@@Base+0x18928>
   52c74:	ldr	w0, [sp, #744]
   52c78:	add	w0, w0, #0x1
   52c7c:	str	w0, [sp, #152]
   52c80:	mov	x1, x20
   52c84:	mov	x0, x26
   52c88:	bl	58a0 <Perl_regnext@plt>
   52c8c:	mov	x19, x0
   52c90:	ldrb	w21, [x20]
   52c94:	add	x21, x21, #0x3
   52c98:	and	x21, x21, #0xfffffffffffffffc
   52c9c:	add	x21, x21, #0x4
   52ca0:	add	x21, x20, x21
   52ca4:	str	xzr, [sp, #360]
   52ca8:	ldr	x0, [x26, #224]
   52cac:	cbz	x0, 52d14 <my_regprop@@Base+0x18a50>
   52cb0:	mov	w2, #0x1                   	// #1
   52cb4:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   52cb8:	add	x1, x1, #0x608
   52cbc:	mov	x0, x26
   52cc0:	bl	54f0 <Perl_get_sv@plt>
   52cc4:	mov	x22, x0
   52cc8:	cbz	x0, 52d14 <my_regprop@@Base+0x18a50>
   52ccc:	ldr	w0, [x0, #12]
   52cd0:	tbz	w0, #8, 52d80 <my_regprop@@Base+0x18abc>
   52cd4:	ldr	w1, [x22, #12]
   52cd8:	and	w0, w1, #0x3fff00
   52cdc:	and	w0, w0, #0xffe001ff
   52ce0:	cmp	w0, #0x100
   52ce4:	b.ne	52dec <my_regprop@@Base+0x18b28>  // b.any
   52ce8:	and	w2, w1, #0xf
   52cec:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   52cf0:	ldr	x0, [x0, #3712]
   52cf4:	ldrb	w0, [x0, w2, uxtw]
   52cf8:	cbz	w0, 52d94 <my_regprop@@Base+0x18ad0>
   52cfc:	and	w0, w1, #0xc000
   52d00:	cmp	w0, #0x8, lsl #12
   52d04:	b.eq	52db8 <my_regprop@@Base+0x18af4>  // b.none
   52d08:	ldr	x0, [x22]
   52d0c:	ldr	x0, [x0, #32]
   52d10:	str	x0, [sp, #360]
   52d14:	mov	w5, #0x0                   	// #0
   52d18:	ldr	w4, [sp, #152]
   52d1c:	mov	x3, x20
   52d20:	mov	x2, x27
   52d24:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   52d28:	add	x1, x1, #0x430
   52d2c:	mov	x0, x26
   52d30:	bl	52694 <my_regprop@@Base+0x183d0>
   52d34:	ldrb	w1, [x20, #1]
   52d38:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   52d3c:	ldr	x0, [x0, #3768]
   52d40:	ldrb	w0, [x0, w1, sxtw]
   52d44:	cmp	w0, #0x23
   52d48:	b.ne	52e0c <my_regprop@@Base+0x18b48>  // b.any
   52d4c:	cbz	x19, 52e00 <my_regprop@@Base+0x18b3c>
   52d50:	mov	x24, x20
   52d54:	mov	w22, #0x1                   	// #1
   52d58:	str	wzr, [sp, #160]
   52d5c:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   52d60:	ldr	x23, [x23, #3768]
   52d64:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   52d68:	add	x0, x0, #0x458
   52d6c:	str	x0, [sp, #224]
   52d70:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   52d74:	add	x0, x0, #0x460
   52d78:	str	x0, [sp, #208]
   52d7c:	b	52f18 <my_regprop@@Base+0x18c54>
   52d80:	mov	x2, #0xff08                	// #65288
   52d84:	mov	x1, x22
   52d88:	mov	x0, x26
   52d8c:	bl	5310 <Perl_sv_setuv@plt>
   52d90:	b	52cd4 <my_regprop@@Base+0x18a10>
   52d94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52d98:	add	x3, x3, #0xc10
   52d9c:	add	x3, x3, #0x980
   52da0:	mov	w2, #0xf97                 	// #3991
   52da4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52da8:	add	x1, x1, #0xfb8
   52dac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52db0:	add	x0, x0, #0xda0
   52db4:	bl	58e0 <__assert_fail@plt>
   52db8:	and	w0, w1, #0xff
   52dbc:	sub	w0, w0, #0x9
   52dc0:	cmp	w0, #0x1
   52dc4:	b.hi	52d08 <my_regprop@@Base+0x18a44>  // b.pmore
   52dc8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52dcc:	add	x3, x3, #0xc10
   52dd0:	add	x3, x3, #0x980
   52dd4:	mov	w2, #0xf97                 	// #3991
   52dd8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52ddc:	add	x1, x1, #0xfb8
   52de0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   52de4:	add	x0, x0, #0xdd0
   52de8:	bl	58e0 <__assert_fail@plt>
   52dec:	mov	w2, #0x2                   	// #2
   52df0:	mov	x1, x22
   52df4:	mov	x0, x26
   52df8:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   52dfc:	b	52d10 <my_regprop@@Base+0x18a4c>
   52e00:	mov	x24, x20
   52e04:	str	wzr, [sp, #160]
   52e08:	b	53060 <my_regprop@@Base+0x18d9c>
   52e0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   52e10:	add	x3, x3, #0xc10
   52e14:	add	x3, x3, #0x980
   52e18:	mov	w2, #0xfa3                 	// #4003
   52e1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   52e20:	add	x1, x1, #0xfb8
   52e24:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   52e28:	add	x0, x0, #0x438
   52e2c:	bl	58e0 <__assert_fail@plt>
   52e30:	cmp	w1, #0x2f
   52e34:	b.eq	52f6c <my_regprop@@Base+0x18ca8>  // b.none
   52e38:	cbz	w22, 52f18 <my_regprop@@Base+0x18c54>
   52e3c:	ldrb	w28, [x20]
   52e40:	mov	x1, x19
   52e44:	mov	x0, x26
   52e48:	bl	58a0 <Perl_regnext@plt>
   52e4c:	str	x0, [sp, #176]
   52e50:	ldrb	w1, [x19]
   52e54:	add	w0, w28, w1
   52e58:	cmp	w0, #0xff
   52e5c:	b.hi	53060 <my_regprop@@Base+0x18d9c>  // b.pmore
   52e60:	ldrb	w0, [x20, #1]
   52e64:	cmp	w0, #0x23
   52e68:	b.eq	52fb8 <my_regprop@@Base+0x18cf4>  // b.none
   52e6c:	cmp	w0, #0x2c
   52e70:	b.eq	52fd0 <my_regprop@@Base+0x18d0c>  // b.none
   52e74:	cmp	w0, #0x27
   52e78:	b.eq	52fe0 <my_regprop@@Base+0x18d1c>  // b.none
   52e7c:	cmp	w0, #0x2d
   52e80:	b.eq	5303c <my_regprop@@Base+0x18d78>  // b.none
   52e84:	cmp	w0, #0x25
   52e88:	b.eq	5304c <my_regprop@@Base+0x18d88>  // b.none
   52e8c:	cmp	w0, #0x2e
   52e90:	b.eq	53188 <my_regprop@@Base+0x18ec4>  // b.none
   52e94:	ldrb	w1, [x19, #1]
   52e98:	cmp	w1, w0
   52e9c:	b.ne	53060 <my_regprop@@Base+0x18d9c>  // b.any
   52ea0:	mov	w5, #0x0                   	// #0
   52ea4:	ldr	w4, [sp, #152]
   52ea8:	mov	x3, x19
   52eac:	mov	x2, x27
   52eb0:	ldr	x1, [sp, #208]
   52eb4:	mov	x0, x26
   52eb8:	bl	52694 <my_regprop@@Base+0x183d0>
   52ebc:	ldr	w0, [sp, #160]
   52ec0:	add	w0, w0, #0x1
   52ec4:	str	w0, [sp, #160]
   52ec8:	ldrh	w0, [x20, #2]
   52ecc:	ldrh	w1, [x19, #2]
   52ed0:	add	w0, w0, w1
   52ed4:	strh	w0, [x20, #2]
   52ed8:	ldrb	w1, [x20]
   52edc:	ldrb	w0, [x19]
   52ee0:	add	w1, w1, w0
   52ee4:	mov	x0, x20
   52ee8:	strb	w1, [x0], #4
   52eec:	ldrb	w2, [x19]
   52ef0:	add	x24, x2, #0x3
   52ef4:	and	x24, x24, #0xfffffffffffffffc
   52ef8:	add	x21, x24, #0x4
   52efc:	add	x21, x19, x21
   52f00:	add	x1, x19, #0x4
   52f04:	add	x0, x0, w28, uxtb
   52f08:	bl	4e70 <memmove@plt>
   52f0c:	add	x24, x19, x24
   52f10:	ldr	x19, [sp, #176]
   52f14:	cbz	x19, 53060 <my_regprop@@Base+0x18d9c>
   52f18:	ldrb	w2, [x19, #1]
   52f1c:	ldrb	w1, [x23, w2, sxtw]
   52f20:	cmp	w1, #0x2f
   52f24:	b.eq	52f34 <my_regprop@@Base+0x18c70>  // b.none
   52f28:	cmp	w1, #0x23
   52f2c:	ccmp	w22, #0x0, #0x4, eq  // eq = none
   52f30:	b.eq	53060 <my_regprop@@Base+0x18d9c>  // b.none
   52f34:	ldrh	w3, [x19, #2]
   52f38:	cbz	w3, 53060 <my_regprop@@Base+0x18d9c>
   52f3c:	ldrh	w0, [x20, #2]
   52f40:	add	w0, w0, w3
   52f44:	mov	w3, #0x7ffe                	// #32766
   52f48:	cmp	w0, w3
   52f4c:	b.gt	53060 <my_regprop@@Base+0x18d9c>
   52f50:	cmp	w2, #0x30
   52f54:	ccmp	x19, x21, #0x2, ne  // ne = any
   52f58:	b.ls	52e30 <my_regprop@@Base+0x18b6c>  // b.plast
   52f5c:	cmp	w1, #0x2f
   52f60:	b.eq	5ab8c <my_regprop@@Base+0x208c8>  // b.none
   52f64:	mov	w22, #0x0                   	// #0
   52f68:	b	52f18 <my_regprop@@Base+0x18c54>
   52f6c:	mov	w5, #0x0                   	// #0
   52f70:	ldr	w4, [sp, #152]
   52f74:	mov	x3, x19
   52f78:	mov	x2, x27
   52f7c:	ldr	x1, [sp, #224]
   52f80:	mov	x0, x26
   52f84:	bl	52694 <my_regprop@@Base+0x183d0>
   52f88:	ldrh	w0, [x20, #2]
   52f8c:	ldrh	w1, [x19, #2]
   52f90:	add	w0, w0, w1
   52f94:	strh	w0, [x20, #2]
   52f98:	add	x21, x19, #0x4
   52f9c:	cmp	w22, #0x0
   52fa0:	csel	x24, x24, x19, eq  // eq = none
   52fa4:	mov	x1, x19
   52fa8:	mov	x0, x26
   52fac:	bl	58a0 <Perl_regnext@plt>
   52fb0:	mov	x19, x0
   52fb4:	b	52f14 <my_regprop@@Base+0x18c50>
   52fb8:	ldrb	w1, [x19, #1]
   52fbc:	cmp	w1, #0x2c
   52fc0:	b.ne	52e94 <my_regprop@@Base+0x18bd0>  // b.any
   52fc4:	mov	w0, #0x2c                  	// #44
   52fc8:	strb	w0, [x20, #1]
   52fcc:	b	52ea0 <my_regprop@@Base+0x18bdc>
   52fd0:	ldrb	w1, [x19, #1]
   52fd4:	cmp	w1, #0x23
   52fd8:	b.ne	52e94 <my_regprop@@Base+0x18bd0>  // b.any
   52fdc:	b	52ea0 <my_regprop@@Base+0x18bdc>
   52fe0:	ldrb	w2, [x19, #1]
   52fe4:	cmp	w2, #0x2d
   52fe8:	b.eq	53030 <my_regprop@@Base+0x18d6c>  // b.none
   52fec:	ldrb	w2, [x19, #1]
   52ff0:	cmp	w2, #0x27
   52ff4:	b.eq	52ea0 <my_regprop@@Base+0x18bdc>  // b.none
   52ff8:	cmp	w2, #0x2e
   52ffc:	b.ne	52e94 <my_regprop@@Base+0x18bd0>  // b.any
   53000:	sub	w0, w1, #0x1
   53004:	add	x0, x19, w0, sxtw
   53008:	ldrb	w0, [x0, #4]
   5300c:	cmp	w0, #0x73
   53010:	b.ne	52ea0 <my_regprop@@Base+0x18bdc>  // b.any
   53014:	ldr	x0, [sp, #176]
   53018:	ldrb	w0, [x0, #1]
   5301c:	cmp	w0, #0x25
   53020:	b.eq	5306c <my_regprop@@Base+0x18da8>  // b.none
   53024:	mov	w0, #0x2e                  	// #46
   53028:	strb	w0, [x20, #1]
   5302c:	b	52ea0 <my_regprop@@Base+0x18bdc>
   53030:	mov	w0, #0x2d                  	// #45
   53034:	strb	w0, [x20, #1]
   53038:	b	52ea0 <my_regprop@@Base+0x18bdc>
   5303c:	ldrb	w1, [x19, #1]
   53040:	cmp	w1, #0x27
   53044:	b.ne	52e94 <my_regprop@@Base+0x18bd0>  // b.any
   53048:	b	52ea0 <my_regprop@@Base+0x18bdc>
   5304c:	ldrb	w0, [x19, #1]
   53050:	cmp	w0, #0x25
   53054:	b.eq	52ea0 <my_regprop@@Base+0x18bdc>  // b.none
   53058:	cmp	w0, #0x2e
   5305c:	b.eq	53104 <my_regprop@@Base+0x18e40>  // b.none
   53060:	ldrb	w0, [x20, #1]
   53064:	cmp	w0, #0x2e
   53068:	b.eq	531f4 <my_regprop@@Base+0x18f30>  // b.none
   5306c:	ldrb	w0, [x20, #1]
   53070:	sub	w1, w0, #0x23
   53074:	and	w1, w1, #0xff
   53078:	cmp	w1, #0x1
   5307c:	cset	w23, hi  // hi = pmore
   53080:	cmp	w0, #0x2c
   53084:	csel	w23, w23, wzr, ne  // ne = any
   53088:	mov	x21, #0x0                   	// #0
   5308c:	cbnz	w23, 53118 <my_regprop@@Base+0x18e54>
   53090:	ldrb	w0, [x20]
   53094:	add	x0, x0, #0x3
   53098:	and	x0, x0, #0xfffffffffffffffc
   5309c:	add	x0, x0, #0x4
   530a0:	add	x0, x20, x0
   530a4:	cmp	x0, x24
   530a8:	b.hi	530c8 <my_regprop@@Base+0x18e04>  // b.pmore
   530ac:	mov	w1, #0x64                  	// #100
   530b0:	strb	w1, [x0, #1]
   530b4:	strb	wzr, [x0]
   530b8:	strh	wzr, [x0, #2]
   530bc:	add	x0, x0, #0x4
   530c0:	cmp	x0, x24
   530c4:	b.ls	530b0 <my_regprop@@Base+0x18dec>  // b.plast
   530c8:	ldr	w0, [x26, #2368]
   530cc:	tbnz	w0, #20, 530d8 <my_regprop@@Base+0x18e14>
   530d0:	ldr	x0, [sp, #360]
   530d4:	tbz	w0, #1, 54c00 <my_regprop@@Base+0x1a93c>
   530d8:	ldr	w0, [sp, #160]
   530dc:	cbz	w0, 54c00 <my_regprop@@Base+0x1a93c>
   530e0:	mov	w5, #0x0                   	// #0
   530e4:	ldr	w4, [sp, #152]
   530e8:	mov	x3, x20
   530ec:	mov	x2, x27
   530f0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   530f4:	add	x1, x1, #0x480
   530f8:	mov	x0, x26
   530fc:	bl	52694 <my_regprop@@Base+0x183d0>
   53100:	b	54c00 <my_regprop@@Base+0x1a93c>
   53104:	ldr	x0, [sp, #176]
   53108:	ldrb	w0, [x0, #1]
   5310c:	cmp	w0, #0x27
   53110:	b.ne	52ea0 <my_regprop@@Base+0x18bdc>  // b.any
   53114:	ldrb	w0, [x20, #1]
   53118:	mov	x21, x20
   5311c:	ldrb	w1, [x21], #4
   53120:	str	x21, [sp, #224]
   53124:	add	x28, x21, w1, uxtb
   53128:	ldr	w2, [x27, #192]
   5312c:	cbz	w2, 54770 <my_regprop@@Base+0x1a4ac>
   53130:	cmp	w0, #0x26
   53134:	b.ne	5ab4c <my_regprop@@Base+0x20888>  // b.any
   53138:	add	w1, w1, w1, lsl #1
   5313c:	add	w0, w1, #0x1
   53140:	sxtw	x0, w0
   53144:	bl	5250 <Perl_safesysmalloc@plt>
   53148:	str	x0, [sp, #176]
   5314c:	cmp	x21, x28
   53150:	b.cs	546bc <my_regprop@@Base+0x1a3f8>  // b.hs, b.nlast
   53154:	mov	x19, x0
   53158:	mov	w23, #0x0                   	// #0
   5315c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   53160:	ldr	x22, [x0, #4064]
   53164:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   53168:	add	x0, x0, #0x20
   5316c:	str	x0, [sp, #208]
   53170:	add	x0, sp, #0x178
   53174:	str	x0, [sp, #232]
   53178:	str	x20, [sp, #264]
   5317c:	str	x24, [sp, #280]
   53180:	ldr	w24, [sp, #312]
   53184:	b	53304 <my_regprop@@Base+0x19040>
   53188:	ldrb	w0, [x19, #1]
   5318c:	cmp	w0, #0x2e
   53190:	b.eq	531ac <my_regprop@@Base+0x18ee8>  // b.none
   53194:	cmp	w0, #0x27
   53198:	b.eq	531dc <my_regprop@@Base+0x18f18>  // b.none
   5319c:	cmp	w0, #0x25
   531a0:	b.ne	53060 <my_regprop@@Base+0x18d9c>  // b.any
   531a4:	strb	w0, [x20, #1]
   531a8:	b	52ea0 <my_regprop@@Base+0x18bdc>
   531ac:	ldrb	w0, [x20]
   531b0:	sub	w0, w0, #0x1
   531b4:	add	x0, x20, w0, sxtw
   531b8:	ldrb	w0, [x0, #4]
   531bc:	cmp	w0, #0x73
   531c0:	b.ne	52ea0 <my_regprop@@Base+0x18bdc>  // b.any
   531c4:	ldrb	w0, [x19, #4]
   531c8:	cmp	w0, #0x73
   531cc:	b.ne	52ea0 <my_regprop@@Base+0x18bdc>  // b.any
   531d0:	mov	w0, #0x25                  	// #37
   531d4:	strb	w0, [x20, #1]
   531d8:	b	52ea0 <my_regprop@@Base+0x18bdc>
   531dc:	ldrb	w0, [x19, #4]
   531e0:	cmp	w0, #0x73
   531e4:	b.eq	52ea0 <my_regprop@@Base+0x18bdc>  // b.none
   531e8:	mov	w0, #0x27                  	// #39
   531ec:	strb	w0, [x20, #1]
   531f0:	b	52ea0 <my_regprop@@Base+0x18bdc>
   531f4:	mov	w0, #0x27                  	// #39
   531f8:	strb	w0, [x20, #1]
   531fc:	mov	x1, x20
   53200:	ldrb	w19, [x1], #4
   53204:	add	x19, x1, x19
   53208:	ldr	w0, [x27, #192]
   5320c:	cbnz	w0, 5ab54 <my_regprop@@Base+0x20890>
   53210:	mov	w0, #0x27                  	// #39
   53214:	cmp	w0, #0x28
   53218:	b.eq	5477c <my_regprop@@Base+0x1a4b8>  // b.none
   5321c:	sub	w0, w0, #0x25
   53220:	and	w0, w0, #0xff
   53224:	cmp	w0, #0x1
   53228:	cset	x2, hi  // hi = pmore
   5322c:	sub	x2, x19, x2
   53230:	cmp	x1, x2
   53234:	b.cs	54934 <my_regprop@@Base+0x1a670>  // b.hs, b.nlast
   53238:	mov	w23, #0x0                   	// #0
   5323c:	mov	x21, #0x0                   	// #0
   53240:	mov	w4, #0x2                   	// #2
   53244:	mov	w7, #0x29                  	// #41
   53248:	mov	w5, #0x49                  	// #73
   5324c:	mov	w3, #0x4c                  	// #76
   53250:	mov	w6, #0x3                   	// #3
   53254:	ldr	w8, [sp, #312]
   53258:	b	54898 <my_regprop@@Base+0x1a5d4>
   5325c:	sub	w3, w0, #0xc2
   53260:	cmp	w3, #0x1
   53264:	b.ls	53318 <my_regprop@@Base+0x19054>  // b.plast
   53268:	cmp	w0, #0xc4
   5326c:	b.eq	53360 <my_regprop@@Base+0x1909c>  // b.none
   53270:	cmp	w0, #0xc5
   53274:	b.eq	5338c <my_regprop@@Base+0x190c8>  // b.none
   53278:	cmp	w0, #0xc7
   5327c:	b.eq	533b8 <my_regprop@@Base+0x190f4>  // b.none
   53280:	cmp	w0, #0xcc
   53284:	b.eq	533c8 <my_regprop@@Base+0x19104>  // b.none
   53288:	cmp	w0, #0xce
   5328c:	b.eq	533dc <my_regprop@@Base+0x19118>  // b.none
   53290:	cmp	w0, #0xe1
   53294:	b.eq	53408 <my_regprop@@Base+0x19144>  // b.none
   53298:	cmp	w0, #0xe2
   5329c:	b.eq	53498 <my_regprop@@Base+0x191d4>  // b.none
   532a0:	cmp	w0, #0xef
   532a4:	b.ne	53370 <my_regprop@@Base+0x190ac>  // b.any
   532a8:	ldrb	w3, [x21, #1]
   532ac:	cmp	w3, #0xac
   532b0:	b.ne	53370 <my_regprop@@Base+0x190ac>  // b.any
   532b4:	ldrb	w3, [x21, #2]
   532b8:	sub	w3, w3, #0x80
   532bc:	cmp	w3, #0x6
   532c0:	b.hi	53370 <my_regprop@@Base+0x190ac>  // b.pmore
   532c4:	cmp	w0, #0xc3
   532c8:	b.ne	534f0 <my_regprop@@Base+0x1922c>  // b.any
   532cc:	ldrb	w0, [x21, #1]
   532d0:	cmp	w0, #0x9f
   532d4:	cset	w0, eq  // eq = none
   532d8:	cbz	w0, 535d8 <my_regprop@@Base+0x19314>
   532dc:	cbz	x19, 535b4 <my_regprop@@Base+0x192f0>
   532e0:	mov	x2, x20
   532e4:	mov	x1, x21
   532e8:	mov	x0, x19
   532ec:	bl	4e60 <memcpy@plt>
   532f0:	add	x19, x19, x20
   532f4:	mov	w23, w24
   532f8:	add	x21, x21, x20
   532fc:	cmp	x28, x21
   53300:	b.ls	53608 <my_regprop@@Base+0x19344>  // b.plast
   53304:	ldrb	w0, [x21]
   53308:	mov	w2, w0
   5330c:	ldrb	w20, [x22, w0, sxtw]
   53310:	sxtb	w1, w0
   53314:	tbnz	w0, #7, 5325c <my_regprop@@Base+0x18f98>
   53318:	cmp	w0, #0xc3
   5331c:	b.eq	532cc <my_regprop@@Base+0x19008>  // b.none
   53320:	cmp	w0, #0xc4
   53324:	mov	w3, #0xc7                  	// #199
   53328:	ccmp	w0, w3, #0x4, ne  // ne = any
   5332c:	b.ne	534e0 <my_regprop@@Base+0x1921c>  // b.any
   53330:	ldrb	w3, [x21, #1]
   53334:	cmp	w3, #0xb0
   53338:	cset	w3, eq  // eq = none
   5333c:	cbnz	w3, 532dc <my_regprop@@Base+0x19018>
   53340:	tbnz	w1, #31, 535d8 <my_regprop@@Base+0x19314>
   53344:	sub	w2, w2, #0x41
   53348:	add	w1, w1, #0x20
   5334c:	and	w1, w1, #0xff
   53350:	cmp	w2, #0x1a
   53354:	csel	w0, w1, w0, cc  // cc = lo, ul, last
   53358:	strb	w0, [x19], #1
   5335c:	b	532f8 <my_regprop@@Base+0x19034>
   53360:	ldrb	w3, [x21, #1]
   53364:	sub	w3, w3, #0xb0
   53368:	cmp	w3, #0x1
   5336c:	b.ls	53330 <my_regprop@@Base+0x1906c>  // b.plast
   53370:	cbz	x19, 534bc <my_regprop@@Base+0x191f8>
   53374:	mov	x2, x20
   53378:	mov	x1, x21
   5337c:	mov	x0, x19
   53380:	bl	4e60 <memcpy@plt>
   53384:	add	x19, x19, x20
   53388:	b	532f8 <my_regprop@@Base+0x19034>
   5338c:	ldrb	w0, [x21, #1]
   53390:	cmp	w0, #0x89
   53394:	mov	w1, #0xb8                  	// #184
   53398:	ccmp	w0, w1, #0x4, ne  // ne = any
   5339c:	mov	w1, #0xbf                  	// #191
   533a0:	ccmp	w0, w1, #0x4, ne  // ne = any
   533a4:	b.ne	53370 <my_regprop@@Base+0x190ac>  // b.any
   533a8:	ldrb	w0, [x21, #1]
   533ac:	cmp	w0, #0x89
   533b0:	cset	w0, eq  // eq = none
   533b4:	b	532d8 <my_regprop@@Base+0x19014>
   533b8:	ldrb	w3, [x21, #1]
   533bc:	cmp	w3, #0xb0
   533c0:	b.eq	53330 <my_regprop@@Base+0x1906c>  // b.none
   533c4:	b	53370 <my_regprop@@Base+0x190ac>
   533c8:	ldrb	w3, [x21, #1]
   533cc:	cmp	w3, #0x87
   533d0:	cset	w3, ne  // ne = any
   533d4:	cbz	w3, 5333c <my_regprop@@Base+0x19078>
   533d8:	b	53370 <my_regprop@@Base+0x190ac>
   533dc:	ldrb	w0, [x21, #1]
   533e0:	and	w0, w0, #0xffffffdf
   533e4:	and	w0, w0, #0xff
   533e8:	cmp	w0, #0x9c
   533ec:	b.ne	53370 <my_regprop@@Base+0x190ac>  // b.any
   533f0:	ldrb	w0, [x21, #1]
   533f4:	and	w0, w0, #0xffffffdf
   533f8:	and	w0, w0, #0xff
   533fc:	cmp	w0, #0x90
   53400:	cset	w0, eq  // eq = none
   53404:	b	532d8 <my_regprop@@Base+0x19014>
   53408:	ldrb	w1, [x21, #1]
   5340c:	mov	w0, #0x1                   	// #1
   53410:	cmp	w1, #0xba
   53414:	b.eq	53480 <my_regprop@@Base+0x191bc>  // b.none
   53418:	cbnz	w0, 53370 <my_regprop@@Base+0x190ac>
   5341c:	ldrb	w1, [x21, #1]
   53420:	cmp	w1, #0xba
   53424:	b.eq	5354c <my_regprop@@Base+0x19288>  // b.none
   53428:	cmp	w1, #0xbd
   5342c:	b.eq	53568 <my_regprop@@Base+0x192a4>  // b.none
   53430:	cmp	w1, #0xbe
   53434:	b.eq	53580 <my_regprop@@Base+0x192bc>  // b.none
   53438:	mov	w0, #0x0                   	// #0
   5343c:	cmp	w1, #0xbf
   53440:	b.ne	532d8 <my_regprop@@Base+0x19014>  // b.any
   53444:	ldrb	w1, [x21, #2]
   53448:	mov	w2, #0xffffffca            	// #-54
   5344c:	and	w2, w1, w2
   53450:	mov	w0, #0x1                   	// #1
   53454:	cmp	w2, #0x82
   53458:	b.eq	532d8 <my_regprop@@Base+0x19014>  // b.none
   5345c:	and	w0, w1, #0xfffffff7
   53460:	and	w0, w0, #0xff
   53464:	cmp	w0, #0x84
   53468:	mov	w2, #0xa4                  	// #164
   5346c:	ccmp	w1, w2, #0x4, ne  // ne = any
   53470:	mov	w1, #0xb4                  	// #180
   53474:	ccmp	w0, w1, #0x4, ne  // ne = any
   53478:	cset	w0, eq  // eq = none
   5347c:	b	532d8 <my_regprop@@Base+0x19014>
   53480:	ldrb	w0, [x21, #2]
   53484:	sub	w1, w0, #0x96
   53488:	cmp	w0, #0x9e
   5348c:	ccmp	w1, #0x4, #0x0, ne  // ne = any
   53490:	cset	w0, hi  // hi = pmore
   53494:	b	53418 <my_regprop@@Base+0x19154>
   53498:	ldrb	w4, [x21, #1]
   5349c:	mov	w3, #0x1                   	// #1
   534a0:	cmp	w4, #0x84
   534a4:	b.ne	533d4 <my_regprop@@Base+0x19110>  // b.any
   534a8:	ldrb	w3, [x21, #2]
   534ac:	sub	w3, w3, #0xaa
   534b0:	cmp	w3, #0x1
   534b4:	cset	w3, hi  // hi = pmore
   534b8:	b	533d4 <my_regprop@@Base+0x19110>
   534bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   534c0:	add	x3, x3, #0xc10
   534c4:	add	x3, x3, #0x980
   534c8:	mov	w2, #0x107a                	// #4218
   534cc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   534d0:	add	x1, x1, #0xfb8
   534d4:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   534d8:	add	x0, x0, #0x468
   534dc:	bl	58e0 <__assert_fail@plt>
   534e0:	cmp	w0, #0xc5
   534e4:	b.eq	533a8 <my_regprop@@Base+0x190e4>  // b.none
   534e8:	cmp	w0, #0xce
   534ec:	b.eq	533f0 <my_regprop@@Base+0x1912c>  // b.none
   534f0:	cmp	w0, #0xd6
   534f4:	b.eq	5353c <my_regprop@@Base+0x19278>  // b.none
   534f8:	cmp	w0, #0xe1
   534fc:	b.eq	5341c <my_regprop@@Base+0x19158>  // b.none
   53500:	mov	w3, #0x0                   	// #0
   53504:	cmp	w0, #0xef
   53508:	b.ne	5333c <my_regprop@@Base+0x19078>  // b.any
   5350c:	ldrb	w4, [x21, #1]
   53510:	cmp	w4, #0xac
   53514:	b.ne	5333c <my_regprop@@Base+0x19078>  // b.any
   53518:	ldrb	w4, [x21, #2]
   5351c:	sub	w5, w4, #0x80
   53520:	mov	w3, #0x1                   	// #1
   53524:	cmp	w5, #0x6
   53528:	b.ls	5333c <my_regprop@@Base+0x19078>  // b.plast
   5352c:	sub	w4, w4, #0x93
   53530:	cmp	w4, #0x4
   53534:	cset	w3, ls  // ls = plast
   53538:	b	5333c <my_regprop@@Base+0x19078>
   5353c:	ldrb	w0, [x21, #1]
   53540:	cmp	w0, #0x87
   53544:	cset	w0, eq  // eq = none
   53548:	b	532d8 <my_regprop@@Base+0x19014>
   5354c:	ldrb	w1, [x21, #2]
   53550:	sub	w0, w1, #0x96
   53554:	cmp	w0, #0x4
   53558:	cset	w0, ls  // ls = plast
   5355c:	cmp	w1, #0x9e
   53560:	csinc	w0, w0, wzr, ne  // ne = any
   53564:	b	532d8 <my_regprop@@Base+0x19014>
   53568:	ldrb	w0, [x21, #2]
   5356c:	and	w0, w0, #0xfffffff9
   53570:	and	w0, w0, #0xff
   53574:	cmp	w0, #0x90
   53578:	cset	w0, eq  // eq = none
   5357c:	b	532d8 <my_regprop@@Base+0x19014>
   53580:	ldrb	w1, [x21, #2]
   53584:	sub	w2, w1, #0x80
   53588:	mov	w0, #0x1                   	// #1
   5358c:	cmp	w2, #0x2f
   53590:	b.ls	532d8 <my_regprop@@Base+0x19014>  // b.plast
   53594:	sub	w2, w1, #0xb2
   53598:	cmp	w2, #0x2
   5359c:	b.ls	532d8 <my_regprop@@Base+0x19014>  // b.plast
   535a0:	sub	w0, w1, #0xb6
   535a4:	cmp	w1, #0xbc
   535a8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   535ac:	cset	w0, ls  // ls = plast
   535b0:	b	532d8 <my_regprop@@Base+0x19014>
   535b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   535b8:	add	x3, x3, #0xc10
   535bc:	add	x3, x3, #0x980
   535c0:	mov	w2, #0x107f                	// #4223
   535c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   535c8:	add	x1, x1, #0xfb8
   535cc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   535d0:	add	x0, x0, #0x468
   535d4:	bl	58e0 <__assert_fail@plt>
   535d8:	mov	w7, #0x0                   	// #0
   535dc:	ldr	x6, [sp, #208]
   535e0:	mov	w5, #0x2                   	// #2
   535e4:	ldr	x4, [sp, #232]
   535e8:	mov	x3, x19
   535ec:	mov	x2, x28
   535f0:	mov	x1, x21
   535f4:	mov	x0, x26
   535f8:	bl	5330 <Perl__to_utf8_fold_flags@plt>
   535fc:	ldr	x0, [sp, #376]
   53600:	add	x19, x19, x0
   53604:	b	532f8 <my_regprop@@Base+0x19034>
   53608:	ldr	x20, [sp, #264]
   5360c:	ldr	x24, [sp, #280]
   53610:	sub	x28, x19, #0x1
   53614:	ldr	x0, [sp, #176]
   53618:	mov	x1, x0
   5361c:	cmp	x0, x28
   53620:	b.cc	5ab6c <my_regprop@@Base+0x208a8>  // b.lo, b.ul, b.last
   53624:	mov	w19, #0x0                   	// #0
   53628:	b	546d0 <my_regprop@@Base+0x1a40c>
   5362c:	ldrb	w0, [x1, #1]
   53630:	cmp	w0, #0xca
   53634:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53638:	ldrb	w0, [x1, #2]
   5363c:	mov	w21, #0x3                   	// #3
   53640:	cmp	w0, #0xbe
   53644:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53648:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5364c:	ldr	x0, [x0, #4064]
   53650:	ldrb	w2, [x1]
   53654:	ldrb	w0, [x0, w2, sxtw]
   53658:	add	x1, x1, x0
   5365c:	cmp	x1, x28
   53660:	b.cs	546c8 <my_regprop@@Base+0x1a404>  // b.hs, b.nlast
   53664:	sub	x0, x19, x1
   53668:	cmp	x0, #0x5
   5366c:	b.le	53c1c <my_regprop@@Base+0x19958>
   53670:	ldrb	w0, [x1]
   53674:	cmp	w0, #0x61
   53678:	b.eq	5362c <my_regprop@@Base+0x19368>  // b.none
   5367c:	cmp	w0, #0x66
   53680:	b.eq	536dc <my_regprop@@Base+0x19418>  // b.none
   53684:	cmp	w0, #0x68
   53688:	b.eq	5374c <my_regprop@@Base+0x19488>  // b.none
   5368c:	cmp	w0, #0x69
   53690:	b.eq	5376c <my_regprop@@Base+0x194a8>  // b.none
   53694:	cmp	w0, #0x6a
   53698:	b.eq	5378c <my_regprop@@Base+0x194c8>  // b.none
   5369c:	cmp	w0, #0x73
   536a0:	b.eq	537ac <my_regprop@@Base+0x194e8>  // b.none
   536a4:	cmp	w0, #0x74
   536a8:	b.eq	537c4 <my_regprop@@Base+0x19500>  // b.none
   536ac:	sub	w2, w0, #0x77
   536b0:	and	w2, w2, #0xfffffffd
   536b4:	tst	w2, #0xff
   536b8:	b.ne	537e4 <my_regprop@@Base+0x19520>  // b.any
   536bc:	ldrb	w0, [x1, #1]
   536c0:	cmp	w0, #0xcc
   536c4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   536c8:	ldrb	w0, [x1, #2]
   536cc:	cmp	w0, #0x8a
   536d0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   536d4:	mov	w21, #0x3                   	// #3
   536d8:	b	536fc <my_regprop@@Base+0x19438>
   536dc:	ldrb	w0, [x1, #1]
   536e0:	cmp	w0, #0x66
   536e4:	b.eq	53730 <my_regprop@@Base+0x1946c>  // b.none
   536e8:	cmp	w0, #0x69
   536ec:	mov	w21, #0x2                   	// #2
   536f0:	mov	w2, #0x6c                  	// #108
   536f4:	ccmp	w0, w2, #0x4, ne  // ne = any
   536f8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   536fc:	add	x21, x1, w21, sxtw
   53700:	ldrb	w0, [x20, #1]
   53704:	cmp	w0, #0x28
   53708:	mov	w2, #0x2b                  	// #43
   5370c:	ccmp	w0, w2, #0x4, ne  // ne = any
   53710:	b.eq	54688 <my_regprop@@Base+0x1a3c4>  // b.none
   53714:	mov	x2, x21
   53718:	mov	x0, x26
   5371c:	bl	5720 <Perl_utf8_length@plt>
   53720:	mov	x1, x21
   53724:	sub	w2, w23, #0x1
   53728:	add	w23, w2, w0
   5372c:	b	5365c <my_regprop@@Base+0x19398>
   53730:	ldrb	w0, [x1, #2]
   53734:	cmp	w0, #0x69
   53738:	mov	w2, #0x6c                  	// #108
   5373c:	ccmp	w0, w2, #0x4, ne  // ne = any
   53740:	cset	w21, eq  // eq = none
   53744:	add	w21, w21, #0x2
   53748:	b	536fc <my_regprop@@Base+0x19438>
   5374c:	ldrb	w0, [x1, #1]
   53750:	cmp	w0, #0xcc
   53754:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53758:	ldrb	w0, [x1, #2]
   5375c:	mov	w21, #0x3                   	// #3
   53760:	cmp	w0, #0xb1
   53764:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53768:	b	53648 <my_regprop@@Base+0x19384>
   5376c:	ldrb	w0, [x1, #1]
   53770:	cmp	w0, #0xcc
   53774:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53778:	ldrb	w0, [x1, #2]
   5377c:	mov	w21, #0x3                   	// #3
   53780:	cmp	w0, #0x87
   53784:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53788:	b	53648 <my_regprop@@Base+0x19384>
   5378c:	ldrb	w0, [x1, #1]
   53790:	cmp	w0, #0xcc
   53794:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53798:	ldrb	w0, [x1, #2]
   5379c:	mov	w21, #0x3                   	// #3
   537a0:	cmp	w0, #0x8c
   537a4:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   537a8:	b	53648 <my_regprop@@Base+0x19384>
   537ac:	ldrb	w0, [x1, #1]
   537b0:	sub	w0, w0, #0x73
   537b4:	mov	w21, #0x2                   	// #2
   537b8:	cmp	w0, #0x1
   537bc:	b.ls	536fc <my_regprop@@Base+0x19438>  // b.plast
   537c0:	b	53648 <my_regprop@@Base+0x19384>
   537c4:	ldrb	w0, [x1, #1]
   537c8:	cmp	w0, #0xcc
   537cc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   537d0:	ldrb	w0, [x1, #2]
   537d4:	mov	w21, #0x3                   	// #3
   537d8:	cmp	w0, #0x88
   537dc:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   537e0:	b	53648 <my_regprop@@Base+0x19384>
   537e4:	cmp	w0, #0xc5
   537e8:	b.eq	53870 <my_regprop@@Base+0x195ac>  // b.none
   537ec:	cmp	w0, #0xca
   537f0:	b.eq	5389c <my_regprop@@Base+0x195d8>  // b.none
   537f4:	cmp	w0, #0xce
   537f8:	b.eq	538bc <my_regprop@@Base+0x195f8>  // b.none
   537fc:	cmp	w0, #0xcf
   53800:	b.eq	539d4 <my_regprop@@Base+0x19710>  // b.none
   53804:	cmp	w0, #0xd5
   53808:	b.eq	53b54 <my_regprop@@Base+0x19890>  // b.none
   5380c:	cmp	w0, #0xe1
   53810:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53814:	ldrb	w0, [x1, #1]
   53818:	cmp	w0, #0xbc
   5381c:	b.eq	53be8 <my_regprop@@Base+0x19924>  // b.none
   53820:	cmp	w0, #0xbd
   53824:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53828:	ldrb	w0, [x1, #2]
   5382c:	and	w2, w0, #0xf8
   53830:	cmp	w2, #0xa0
   53834:	b.eq	53850 <my_regprop@@Base+0x1958c>  // b.none
   53838:	and	w2, w0, #0xfffffffb
   5383c:	and	w2, w2, #0xff
   53840:	cmp	w2, #0xb0
   53844:	mov	w2, #0xbc                  	// #188
   53848:	ccmp	w0, w2, #0x4, ne  // ne = any
   5384c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53850:	ldrb	w0, [x1, #3]
   53854:	cmp	w0, #0xce
   53858:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5385c:	ldrb	w0, [x1, #4]
   53860:	cmp	w0, #0xb9
   53864:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53868:	mov	w21, #0x5                   	// #5
   5386c:	b	536fc <my_regprop@@Base+0x19438>
   53870:	ldrb	w0, [x1, #1]
   53874:	cmp	w0, #0xbf
   53878:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5387c:	ldrb	w0, [x1, #2]
   53880:	cmp	w0, #0xc5
   53884:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53888:	ldrb	w0, [x1, #3]
   5388c:	cmp	w0, #0xbf
   53890:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53894:	mov	w21, #0x4                   	// #4
   53898:	b	536fc <my_regprop@@Base+0x19438>
   5389c:	ldrb	w0, [x1, #1]
   538a0:	cmp	w0, #0xbc
   538a4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   538a8:	ldrb	w0, [x1, #2]
   538ac:	cmp	w0, #0x6e
   538b0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   538b4:	mov	w21, #0x3                   	// #3
   538b8:	b	536fc <my_regprop@@Base+0x19438>
   538bc:	ldrb	w0, [x1, #1]
   538c0:	and	w2, w0, #0xfffffffd
   538c4:	and	w2, w2, #0xff
   538c8:	cmp	w2, #0xac
   538cc:	b.eq	53908 <my_regprop@@Base+0x19644>  // b.none
   538d0:	cmp	w0, #0xb1
   538d4:	mov	w2, #0xb7                  	// #183
   538d8:	ccmp	w0, w2, #0x4, ne  // ne = any
   538dc:	b.ne	53958 <my_regprop@@Base+0x19694>  // b.any
   538e0:	ldrb	w0, [x1, #2]
   538e4:	cmp	w0, #0xcd
   538e8:	b.eq	53928 <my_regprop@@Base+0x19664>  // b.none
   538ec:	cmp	w0, #0xce
   538f0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   538f4:	ldrb	w0, [x1, #3]
   538f8:	cmp	w0, #0xb9
   538fc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53900:	mov	w21, #0x4                   	// #4
   53904:	b	536fc <my_regprop@@Base+0x19438>
   53908:	ldrb	w0, [x1, #2]
   5390c:	cmp	w0, #0xce
   53910:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53914:	ldrb	w0, [x1, #3]
   53918:	cmp	w0, #0xb9
   5391c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53920:	mov	w21, #0x4                   	// #4
   53924:	b	536fc <my_regprop@@Base+0x19438>
   53928:	ldrb	w0, [x1, #3]
   5392c:	cmp	w0, #0x82
   53930:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53934:	ldrb	w0, [x1, #4]
   53938:	mov	w21, #0x4                   	// #4
   5393c:	cmp	w0, #0xce
   53940:	b.ne	536fc <my_regprop@@Base+0x19438>  // b.any
   53944:	ldrb	w0, [x1, #5]
   53948:	cmp	w0, #0xb9
   5394c:	mov	w0, #0x6                   	// #6
   53950:	csel	w21, w21, w0, ne  // ne = any
   53954:	b	536fc <my_regprop@@Base+0x19438>
   53958:	cmp	w0, #0xb9
   5395c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53960:	ldrb	w0, [x1, #2]
   53964:	cmp	w0, #0xcc
   53968:	b.eq	53988 <my_regprop@@Base+0x196c4>  // b.none
   5396c:	cmp	w0, #0xcd
   53970:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53974:	ldrb	w0, [x1, #3]
   53978:	cmp	w0, #0x82
   5397c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53980:	mov	w21, #0x4                   	// #4
   53984:	b	536fc <my_regprop@@Base+0x19438>
   53988:	ldrb	w0, [x1, #3]
   5398c:	cmp	w0, #0x88
   53990:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53994:	ldrb	w0, [x1, #4]
   53998:	cmp	w0, #0xcc
   5399c:	b.eq	539bc <my_regprop@@Base+0x196f8>  // b.none
   539a0:	cmp	w0, #0xcd
   539a4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   539a8:	ldrb	w0, [x1, #5]
   539ac:	cmp	w0, #0x82
   539b0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   539b4:	mov	w21, #0x6                   	// #6
   539b8:	b	536fc <my_regprop@@Base+0x19438>
   539bc:	ldrb	w0, [x1, #5]
   539c0:	sub	w0, w0, #0x80
   539c4:	cmp	w0, #0x1
   539c8:	b.hi	53648 <my_regprop@@Base+0x19384>  // b.pmore
   539cc:	mov	w21, #0x6                   	// #6
   539d0:	b	536fc <my_regprop@@Base+0x19438>
   539d4:	ldrb	w0, [x1, #1]
   539d8:	cmp	w0, #0x81
   539dc:	b.eq	53a18 <my_regprop@@Base+0x19754>  // b.none
   539e0:	cmp	w0, #0x85
   539e4:	b.eq	53a38 <my_regprop@@Base+0x19774>  // b.none
   539e8:	cmp	w0, #0x89
   539ec:	b.eq	53afc <my_regprop@@Base+0x19838>  // b.none
   539f0:	cmp	w0, #0x8e
   539f4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   539f8:	ldrb	w0, [x1, #2]
   539fc:	cmp	w0, #0xce
   53a00:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a04:	ldrb	w0, [x1, #3]
   53a08:	cmp	w0, #0xb9
   53a0c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a10:	mov	w21, #0x4                   	// #4
   53a14:	b	536fc <my_regprop@@Base+0x19438>
   53a18:	ldrb	w0, [x1, #2]
   53a1c:	cmp	w0, #0xcc
   53a20:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a24:	ldrb	w0, [x1, #3]
   53a28:	cmp	w0, #0x93
   53a2c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a30:	mov	w21, #0x4                   	// #4
   53a34:	b	536fc <my_regprop@@Base+0x19438>
   53a38:	ldrb	w0, [x1, #2]
   53a3c:	cmp	w0, #0xcc
   53a40:	b.eq	53a60 <my_regprop@@Base+0x1979c>  // b.none
   53a44:	cmp	w0, #0xcd
   53a48:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a4c:	ldrb	w0, [x1, #3]
   53a50:	cmp	w0, #0x82
   53a54:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a58:	mov	w21, #0x4                   	// #4
   53a5c:	b	536fc <my_regprop@@Base+0x19438>
   53a60:	ldrb	w0, [x1, #3]
   53a64:	cmp	w0, #0x88
   53a68:	b.eq	53aa0 <my_regprop@@Base+0x197dc>  // b.none
   53a6c:	cmp	w0, #0x93
   53a70:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53a74:	ldrb	w0, [x1, #4]
   53a78:	cmp	w0, #0xcc
   53a7c:	b.eq	53ae0 <my_regprop@@Base+0x1981c>  // b.none
   53a80:	mov	w21, #0x4                   	// #4
   53a84:	cmp	w0, #0xcd
   53a88:	b.ne	536fc <my_regprop@@Base+0x19438>  // b.any
   53a8c:	ldrb	w0, [x1, #5]
   53a90:	cmp	w0, #0x82
   53a94:	mov	w0, #0x6                   	// #6
   53a98:	csel	w21, w21, w0, ne  // ne = any
   53a9c:	b	536fc <my_regprop@@Base+0x19438>
   53aa0:	ldrb	w0, [x1, #4]
   53aa4:	cmp	w0, #0xcc
   53aa8:	b.eq	53ac8 <my_regprop@@Base+0x19804>  // b.none
   53aac:	cmp	w0, #0xcd
   53ab0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ab4:	ldrb	w0, [x1, #5]
   53ab8:	cmp	w0, #0x82
   53abc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ac0:	mov	w21, #0x6                   	// #6
   53ac4:	b	536fc <my_regprop@@Base+0x19438>
   53ac8:	ldrb	w0, [x1, #5]
   53acc:	sub	w0, w0, #0x80
   53ad0:	cmp	w0, #0x1
   53ad4:	b.hi	53648 <my_regprop@@Base+0x19384>  // b.pmore
   53ad8:	mov	w21, #0x6                   	// #6
   53adc:	b	536fc <my_regprop@@Base+0x19438>
   53ae0:	ldrb	w0, [x1, #5]
   53ae4:	sub	w0, w0, #0x80
   53ae8:	cmp	w0, #0x2
   53aec:	mov	w21, #0x6                   	// #6
   53af0:	mov	w0, #0x4                   	// #4
   53af4:	csel	w21, w21, w0, cc  // cc = lo, ul, last
   53af8:	b	536fc <my_regprop@@Base+0x19438>
   53afc:	ldrb	w0, [x1, #2]
   53b00:	cmp	w0, #0xcd
   53b04:	b.eq	53b24 <my_regprop@@Base+0x19860>  // b.none
   53b08:	cmp	w0, #0xce
   53b0c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b10:	ldrb	w0, [x1, #3]
   53b14:	cmp	w0, #0xb9
   53b18:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b1c:	mov	w21, #0x4                   	// #4
   53b20:	b	536fc <my_regprop@@Base+0x19438>
   53b24:	ldrb	w0, [x1, #3]
   53b28:	cmp	w0, #0x82
   53b2c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b30:	ldrb	w0, [x1, #4]
   53b34:	mov	w21, #0x4                   	// #4
   53b38:	cmp	w0, #0xce
   53b3c:	b.ne	536fc <my_regprop@@Base+0x19438>  // b.any
   53b40:	ldrb	w0, [x1, #5]
   53b44:	cmp	w0, #0xb9
   53b48:	mov	w0, #0x6                   	// #6
   53b4c:	csel	w21, w21, w0, ne  // ne = any
   53b50:	b	536fc <my_regprop@@Base+0x19438>
   53b54:	ldrb	w0, [x1, #1]
   53b58:	cmp	w0, #0xa5
   53b5c:	b.eq	53b90 <my_regprop@@Base+0x198cc>  // b.none
   53b60:	cmp	w0, #0xb4
   53b64:	b.eq	53bb0 <my_regprop@@Base+0x198ec>  // b.none
   53b68:	cmp	w0, #0xbe
   53b6c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b70:	ldrb	w0, [x1, #2]
   53b74:	cmp	w0, #0xd5
   53b78:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b7c:	ldrb	w0, [x1, #3]
   53b80:	cmp	w0, #0xb6
   53b84:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b88:	mov	w21, #0x4                   	// #4
   53b8c:	b	536fc <my_regprop@@Base+0x19438>
   53b90:	ldrb	w0, [x1, #2]
   53b94:	cmp	w0, #0xd6
   53b98:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53b9c:	ldrb	w0, [x1, #3]
   53ba0:	cmp	w0, #0x82
   53ba4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ba8:	mov	w21, #0x4                   	// #4
   53bac:	b	536fc <my_regprop@@Base+0x19438>
   53bb0:	ldrb	w0, [x1, #2]
   53bb4:	cmp	w0, #0xd5
   53bb8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53bbc:	ldrb	w2, [x1, #3]
   53bc0:	and	w0, w2, #0xfffffff7
   53bc4:	and	w0, w0, #0xff
   53bc8:	cmp	w2, #0xab
   53bcc:	mov	w3, #0xb6                  	// #182
   53bd0:	ccmp	w2, w3, #0x4, ne  // ne = any
   53bd4:	mov	w21, #0x4                   	// #4
   53bd8:	mov	w2, #0xa5                  	// #165
   53bdc:	ccmp	w0, w2, #0x4, ne  // ne = any
   53be0:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53be4:	b	53648 <my_regprop@@Base+0x19384>
   53be8:	ldrb	w0, [x1, #2]
   53bec:	mov	w2, #0xd8                  	// #216
   53bf0:	and	w0, w0, w2
   53bf4:	cmp	w0, #0x80
   53bf8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53bfc:	ldrb	w0, [x1, #3]
   53c00:	cmp	w0, #0xce
   53c04:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53c08:	ldrb	w0, [x1, #4]
   53c0c:	cmp	w0, #0xb9
   53c10:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53c14:	mov	w21, #0x5                   	// #5
   53c18:	b	536fc <my_regprop@@Base+0x19438>
   53c1c:	b.ne	540a8 <my_regprop@@Base+0x19de4>  // b.any
   53c20:	ldrb	w0, [x1]
   53c24:	cmp	w0, #0x61
   53c28:	b.eq	53c8c <my_regprop@@Base+0x199c8>  // b.none
   53c2c:	cmp	w0, #0x66
   53c30:	b.eq	53cac <my_regprop@@Base+0x199e8>  // b.none
   53c34:	cmp	w0, #0x68
   53c38:	b.eq	53cec <my_regprop@@Base+0x19a28>  // b.none
   53c3c:	cmp	w0, #0x69
   53c40:	b.eq	53d0c <my_regprop@@Base+0x19a48>  // b.none
   53c44:	cmp	w0, #0x6a
   53c48:	b.eq	53d2c <my_regprop@@Base+0x19a68>  // b.none
   53c4c:	cmp	w0, #0x73
   53c50:	b.eq	53d4c <my_regprop@@Base+0x19a88>  // b.none
   53c54:	cmp	w0, #0x74
   53c58:	b.eq	53d64 <my_regprop@@Base+0x19aa0>  // b.none
   53c5c:	sub	w2, w0, #0x77
   53c60:	and	w2, w2, #0xfffffffd
   53c64:	tst	w2, #0xff
   53c68:	b.ne	53d84 <my_regprop@@Base+0x19ac0>  // b.any
   53c6c:	ldrb	w0, [x1, #1]
   53c70:	cmp	w0, #0xcc
   53c74:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53c78:	ldrb	w0, [x1, #2]
   53c7c:	cmp	w0, #0x8a
   53c80:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53c84:	mov	w21, #0x3                   	// #3
   53c88:	b	536fc <my_regprop@@Base+0x19438>
   53c8c:	ldrb	w0, [x1, #1]
   53c90:	cmp	w0, #0xca
   53c94:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53c98:	ldrb	w0, [x1, #2]
   53c9c:	mov	w21, #0x3                   	// #3
   53ca0:	cmp	w0, #0xbe
   53ca4:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53ca8:	b	53648 <my_regprop@@Base+0x19384>
   53cac:	ldrb	w0, [x1, #1]
   53cb0:	cmp	w0, #0x66
   53cb4:	b.eq	53cd0 <my_regprop@@Base+0x19a0c>  // b.none
   53cb8:	cmp	w0, #0x69
   53cbc:	mov	w21, #0x2                   	// #2
   53cc0:	mov	w2, #0x6c                  	// #108
   53cc4:	ccmp	w0, w2, #0x4, ne  // ne = any
   53cc8:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53ccc:	b	53648 <my_regprop@@Base+0x19384>
   53cd0:	ldrb	w0, [x1, #2]
   53cd4:	cmp	w0, #0x69
   53cd8:	mov	w2, #0x6c                  	// #108
   53cdc:	ccmp	w0, w2, #0x4, ne  // ne = any
   53ce0:	cset	w21, eq  // eq = none
   53ce4:	add	w21, w21, #0x2
   53ce8:	b	536fc <my_regprop@@Base+0x19438>
   53cec:	ldrb	w0, [x1, #1]
   53cf0:	cmp	w0, #0xcc
   53cf4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53cf8:	ldrb	w0, [x1, #2]
   53cfc:	mov	w21, #0x3                   	// #3
   53d00:	cmp	w0, #0xb1
   53d04:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53d08:	b	53648 <my_regprop@@Base+0x19384>
   53d0c:	ldrb	w0, [x1, #1]
   53d10:	cmp	w0, #0xcc
   53d14:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53d18:	ldrb	w0, [x1, #2]
   53d1c:	mov	w21, #0x3                   	// #3
   53d20:	cmp	w0, #0x87
   53d24:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53d28:	b	53648 <my_regprop@@Base+0x19384>
   53d2c:	ldrb	w0, [x1, #1]
   53d30:	cmp	w0, #0xcc
   53d34:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53d38:	ldrb	w0, [x1, #2]
   53d3c:	mov	w21, #0x3                   	// #3
   53d40:	cmp	w0, #0x8c
   53d44:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   53d48:	b	53648 <my_regprop@@Base+0x19384>
   53d4c:	ldrb	w0, [x1, #1]
   53d50:	sub	w0, w0, #0x73
   53d54:	mov	w21, #0x2                   	// #2
   53d58:	cmp	w0, #0x1
   53d5c:	b.ls	536fc <my_regprop@@Base+0x19438>  // b.plast
   53d60:	b	53648 <my_regprop@@Base+0x19384>
   53d64:	ldrb	w0, [x1, #1]
   53d68:	cmp	w0, #0xcc
   53d6c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53d70:	ldrb	w0, [x1, #2]
   53d74:	cmp	w0, #0x88
   53d78:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53d7c:	mov	w21, #0x3                   	// #3
   53d80:	b	536fc <my_regprop@@Base+0x19438>
   53d84:	cmp	w0, #0xc5
   53d88:	b.eq	53e10 <my_regprop@@Base+0x19b4c>  // b.none
   53d8c:	cmp	w0, #0xca
   53d90:	b.eq	53e3c <my_regprop@@Base+0x19b78>  // b.none
   53d94:	cmp	w0, #0xce
   53d98:	b.eq	53e5c <my_regprop@@Base+0x19b98>  // b.none
   53d9c:	cmp	w0, #0xcf
   53da0:	b.eq	53f04 <my_regprop@@Base+0x19c40>  // b.none
   53da4:	cmp	w0, #0xd5
   53da8:	b.eq	53fe0 <my_regprop@@Base+0x19d1c>  // b.none
   53dac:	cmp	w0, #0xe1
   53db0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53db4:	ldrb	w0, [x1, #1]
   53db8:	cmp	w0, #0xbc
   53dbc:	b.eq	54074 <my_regprop@@Base+0x19db0>  // b.none
   53dc0:	cmp	w0, #0xbd
   53dc4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53dc8:	ldrb	w0, [x1, #2]
   53dcc:	and	w2, w0, #0xf8
   53dd0:	cmp	w2, #0xa0
   53dd4:	b.eq	53df0 <my_regprop@@Base+0x19b2c>  // b.none
   53dd8:	and	w2, w0, #0xfffffffb
   53ddc:	and	w2, w2, #0xff
   53de0:	cmp	w2, #0xb0
   53de4:	mov	w2, #0xbc                  	// #188
   53de8:	ccmp	w0, w2, #0x4, ne  // ne = any
   53dec:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53df0:	ldrb	w0, [x1, #3]
   53df4:	cmp	w0, #0xce
   53df8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53dfc:	ldrb	w0, [x1, #4]
   53e00:	cmp	w0, #0xb9
   53e04:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e08:	mov	w21, #0x5                   	// #5
   53e0c:	b	536fc <my_regprop@@Base+0x19438>
   53e10:	ldrb	w0, [x1, #1]
   53e14:	cmp	w0, #0xbf
   53e18:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e1c:	ldrb	w0, [x1, #2]
   53e20:	cmp	w0, #0xc5
   53e24:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e28:	ldrb	w0, [x1, #3]
   53e2c:	cmp	w0, #0xbf
   53e30:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e34:	mov	w21, #0x4                   	// #4
   53e38:	b	536fc <my_regprop@@Base+0x19438>
   53e3c:	ldrb	w0, [x1, #1]
   53e40:	cmp	w0, #0xbc
   53e44:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e48:	ldrb	w0, [x1, #2]
   53e4c:	cmp	w0, #0x6e
   53e50:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e54:	mov	w21, #0x3                   	// #3
   53e58:	b	536fc <my_regprop@@Base+0x19438>
   53e5c:	ldrb	w0, [x1, #1]
   53e60:	and	w2, w0, #0xfffffffd
   53e64:	and	w2, w2, #0xff
   53e68:	cmp	w2, #0xac
   53e6c:	b.eq	53ea8 <my_regprop@@Base+0x19be4>  // b.none
   53e70:	cmp	w0, #0xb1
   53e74:	mov	w2, #0xb7                  	// #183
   53e78:	ccmp	w0, w2, #0x4, ne  // ne = any
   53e7c:	b.ne	53edc <my_regprop@@Base+0x19c18>  // b.any
   53e80:	ldrb	w0, [x1, #2]
   53e84:	cmp	w0, #0xcd
   53e88:	b.eq	53ec8 <my_regprop@@Base+0x19c04>  // b.none
   53e8c:	cmp	w0, #0xce
   53e90:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53e94:	ldrb	w0, [x1, #3]
   53e98:	cmp	w0, #0xb9
   53e9c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ea0:	mov	w21, #0x4                   	// #4
   53ea4:	b	536fc <my_regprop@@Base+0x19438>
   53ea8:	ldrb	w0, [x1, #2]
   53eac:	cmp	w0, #0xce
   53eb0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53eb4:	ldrb	w0, [x1, #3]
   53eb8:	cmp	w0, #0xb9
   53ebc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ec0:	mov	w21, #0x4                   	// #4
   53ec4:	b	536fc <my_regprop@@Base+0x19438>
   53ec8:	ldrb	w0, [x1, #3]
   53ecc:	cmp	w0, #0x82
   53ed0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ed4:	mov	w21, #0x4                   	// #4
   53ed8:	b	536fc <my_regprop@@Base+0x19438>
   53edc:	cmp	w0, #0xb9
   53ee0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ee4:	ldrb	w0, [x1, #2]
   53ee8:	cmp	w0, #0xcd
   53eec:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ef0:	ldrb	w0, [x1, #3]
   53ef4:	cmp	w0, #0x82
   53ef8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53efc:	mov	w21, #0x4                   	// #4
   53f00:	b	536fc <my_regprop@@Base+0x19438>
   53f04:	ldrb	w0, [x1, #1]
   53f08:	cmp	w0, #0x81
   53f0c:	b.eq	53f48 <my_regprop@@Base+0x19c84>  // b.none
   53f10:	cmp	w0, #0x85
   53f14:	b.eq	53f68 <my_regprop@@Base+0x19ca4>  // b.none
   53f18:	cmp	w0, #0x89
   53f1c:	b.eq	53fa4 <my_regprop@@Base+0x19ce0>  // b.none
   53f20:	cmp	w0, #0x8e
   53f24:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f28:	ldrb	w0, [x1, #2]
   53f2c:	cmp	w0, #0xce
   53f30:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f34:	ldrb	w0, [x1, #3]
   53f38:	cmp	w0, #0xb9
   53f3c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f40:	mov	w21, #0x4                   	// #4
   53f44:	b	536fc <my_regprop@@Base+0x19438>
   53f48:	ldrb	w0, [x1, #2]
   53f4c:	cmp	w0, #0xcc
   53f50:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f54:	ldrb	w0, [x1, #3]
   53f58:	cmp	w0, #0x93
   53f5c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f60:	mov	w21, #0x4                   	// #4
   53f64:	b	536fc <my_regprop@@Base+0x19438>
   53f68:	ldrb	w0, [x1, #2]
   53f6c:	cmp	w0, #0xcc
   53f70:	b.eq	53f90 <my_regprop@@Base+0x19ccc>  // b.none
   53f74:	cmp	w0, #0xcd
   53f78:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f7c:	ldrb	w0, [x1, #3]
   53f80:	cmp	w0, #0x82
   53f84:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f88:	mov	w21, #0x4                   	// #4
   53f8c:	b	536fc <my_regprop@@Base+0x19438>
   53f90:	ldrb	w0, [x1, #3]
   53f94:	cmp	w0, #0x93
   53f98:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53f9c:	mov	w21, #0x4                   	// #4
   53fa0:	b	536fc <my_regprop@@Base+0x19438>
   53fa4:	ldrb	w0, [x1, #2]
   53fa8:	cmp	w0, #0xcd
   53fac:	b.eq	53fcc <my_regprop@@Base+0x19d08>  // b.none
   53fb0:	cmp	w0, #0xce
   53fb4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53fb8:	ldrb	w0, [x1, #3]
   53fbc:	cmp	w0, #0xb9
   53fc0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53fc4:	mov	w21, #0x4                   	// #4
   53fc8:	b	536fc <my_regprop@@Base+0x19438>
   53fcc:	ldrb	w0, [x1, #3]
   53fd0:	cmp	w0, #0x82
   53fd4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53fd8:	mov	w21, #0x4                   	// #4
   53fdc:	b	536fc <my_regprop@@Base+0x19438>
   53fe0:	ldrb	w0, [x1, #1]
   53fe4:	cmp	w0, #0xa5
   53fe8:	b.eq	5401c <my_regprop@@Base+0x19d58>  // b.none
   53fec:	cmp	w0, #0xb4
   53ff0:	b.eq	5403c <my_regprop@@Base+0x19d78>  // b.none
   53ff4:	cmp	w0, #0xbe
   53ff8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   53ffc:	ldrb	w0, [x1, #2]
   54000:	cmp	w0, #0xd5
   54004:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54008:	ldrb	w0, [x1, #3]
   5400c:	cmp	w0, #0xb6
   54010:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54014:	mov	w21, #0x4                   	// #4
   54018:	b	536fc <my_regprop@@Base+0x19438>
   5401c:	ldrb	w0, [x1, #2]
   54020:	cmp	w0, #0xd6
   54024:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54028:	ldrb	w0, [x1, #3]
   5402c:	cmp	w0, #0x82
   54030:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54034:	mov	w21, #0x4                   	// #4
   54038:	b	536fc <my_regprop@@Base+0x19438>
   5403c:	ldrb	w0, [x1, #2]
   54040:	cmp	w0, #0xd5
   54044:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54048:	ldrb	w2, [x1, #3]
   5404c:	and	w0, w2, #0xfffffff7
   54050:	and	w0, w0, #0xff
   54054:	cmp	w2, #0xab
   54058:	mov	w3, #0xb6                  	// #182
   5405c:	ccmp	w2, w3, #0x4, ne  // ne = any
   54060:	mov	w21, #0x4                   	// #4
   54064:	mov	w2, #0xa5                  	// #165
   54068:	ccmp	w0, w2, #0x4, ne  // ne = any
   5406c:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   54070:	b	53648 <my_regprop@@Base+0x19384>
   54074:	ldrb	w0, [x1, #2]
   54078:	mov	w2, #0xd8                  	// #216
   5407c:	and	w0, w0, w2
   54080:	cmp	w0, #0x80
   54084:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54088:	ldrb	w0, [x1, #3]
   5408c:	cmp	w0, #0xce
   54090:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54094:	ldrb	w0, [x1, #4]
   54098:	cmp	w0, #0xb9
   5409c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   540a0:	mov	w21, #0x5                   	// #5
   540a4:	b	536fc <my_regprop@@Base+0x19438>
   540a8:	cmp	x0, #0x3
   540ac:	b.le	544a0 <my_regprop@@Base+0x1a1dc>
   540b0:	ldrb	w0, [x1]
   540b4:	cmp	w0, #0x61
   540b8:	b.eq	5411c <my_regprop@@Base+0x19e58>  // b.none
   540bc:	cmp	w0, #0x66
   540c0:	b.eq	5413c <my_regprop@@Base+0x19e78>  // b.none
   540c4:	cmp	w0, #0x68
   540c8:	b.eq	5417c <my_regprop@@Base+0x19eb8>  // b.none
   540cc:	cmp	w0, #0x69
   540d0:	b.eq	5419c <my_regprop@@Base+0x19ed8>  // b.none
   540d4:	cmp	w0, #0x6a
   540d8:	b.eq	541bc <my_regprop@@Base+0x19ef8>  // b.none
   540dc:	cmp	w0, #0x73
   540e0:	b.eq	541dc <my_regprop@@Base+0x19f18>  // b.none
   540e4:	cmp	w0, #0x74
   540e8:	b.eq	541f4 <my_regprop@@Base+0x19f30>  // b.none
   540ec:	sub	w2, w0, #0x77
   540f0:	and	w2, w2, #0xfffffffd
   540f4:	tst	w2, #0xff
   540f8:	b.ne	54214 <my_regprop@@Base+0x19f50>  // b.any
   540fc:	ldrb	w0, [x1, #1]
   54100:	cmp	w0, #0xcc
   54104:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54108:	ldrb	w0, [x1, #2]
   5410c:	cmp	w0, #0x8a
   54110:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54114:	mov	w21, #0x3                   	// #3
   54118:	b	536fc <my_regprop@@Base+0x19438>
   5411c:	ldrb	w0, [x1, #1]
   54120:	cmp	w0, #0xca
   54124:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54128:	ldrb	w0, [x1, #2]
   5412c:	mov	w21, #0x3                   	// #3
   54130:	cmp	w0, #0xbe
   54134:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   54138:	b	53648 <my_regprop@@Base+0x19384>
   5413c:	ldrb	w0, [x1, #1]
   54140:	cmp	w0, #0x66
   54144:	b.eq	54160 <my_regprop@@Base+0x19e9c>  // b.none
   54148:	cmp	w0, #0x69
   5414c:	mov	w21, #0x2                   	// #2
   54150:	mov	w2, #0x6c                  	// #108
   54154:	ccmp	w0, w2, #0x4, ne  // ne = any
   54158:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   5415c:	b	53648 <my_regprop@@Base+0x19384>
   54160:	ldrb	w0, [x1, #2]
   54164:	cmp	w0, #0x69
   54168:	mov	w2, #0x6c                  	// #108
   5416c:	ccmp	w0, w2, #0x4, ne  // ne = any
   54170:	cset	w21, eq  // eq = none
   54174:	add	w21, w21, #0x2
   54178:	b	536fc <my_regprop@@Base+0x19438>
   5417c:	ldrb	w0, [x1, #1]
   54180:	cmp	w0, #0xcc
   54184:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54188:	ldrb	w0, [x1, #2]
   5418c:	mov	w21, #0x3                   	// #3
   54190:	cmp	w0, #0xb1
   54194:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   54198:	b	53648 <my_regprop@@Base+0x19384>
   5419c:	ldrb	w0, [x1, #1]
   541a0:	cmp	w0, #0xcc
   541a4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   541a8:	ldrb	w0, [x1, #2]
   541ac:	mov	w21, #0x3                   	// #3
   541b0:	cmp	w0, #0x87
   541b4:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   541b8:	b	53648 <my_regprop@@Base+0x19384>
   541bc:	ldrb	w0, [x1, #1]
   541c0:	cmp	w0, #0xcc
   541c4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   541c8:	ldrb	w0, [x1, #2]
   541cc:	mov	w21, #0x3                   	// #3
   541d0:	cmp	w0, #0x8c
   541d4:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   541d8:	b	53648 <my_regprop@@Base+0x19384>
   541dc:	ldrb	w0, [x1, #1]
   541e0:	sub	w0, w0, #0x73
   541e4:	cmp	w0, #0x1
   541e8:	b.hi	53648 <my_regprop@@Base+0x19384>  // b.pmore
   541ec:	mov	w21, #0x2                   	// #2
   541f0:	b	536fc <my_regprop@@Base+0x19438>
   541f4:	ldrb	w0, [x1, #1]
   541f8:	cmp	w0, #0xcc
   541fc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54200:	ldrb	w0, [x1, #2]
   54204:	cmp	w0, #0x88
   54208:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5420c:	mov	w21, #0x3                   	// #3
   54210:	b	536fc <my_regprop@@Base+0x19438>
   54214:	cmp	w0, #0xc5
   54218:	b.eq	54278 <my_regprop@@Base+0x19fb4>  // b.none
   5421c:	cmp	w0, #0xca
   54220:	b.eq	542a4 <my_regprop@@Base+0x19fe0>  // b.none
   54224:	cmp	w0, #0xce
   54228:	b.eq	542c4 <my_regprop@@Base+0x1a000>  // b.none
   5422c:	cmp	w0, #0xcf
   54230:	b.eq	5436c <my_regprop@@Base+0x1a0a8>  // b.none
   54234:	cmp	w0, #0xd5
   54238:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5423c:	ldrb	w0, [x1, #1]
   54240:	cmp	w0, #0xa5
   54244:	b.eq	54448 <my_regprop@@Base+0x1a184>  // b.none
   54248:	cmp	w0, #0xb4
   5424c:	b.eq	54468 <my_regprop@@Base+0x1a1a4>  // b.none
   54250:	cmp	w0, #0xbe
   54254:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54258:	ldrb	w0, [x1, #2]
   5425c:	cmp	w0, #0xd5
   54260:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54264:	ldrb	w0, [x1, #3]
   54268:	cmp	w0, #0xb6
   5426c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54270:	mov	w21, #0x4                   	// #4
   54274:	b	536fc <my_regprop@@Base+0x19438>
   54278:	ldrb	w0, [x1, #1]
   5427c:	cmp	w0, #0xbf
   54280:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54284:	ldrb	w0, [x1, #2]
   54288:	cmp	w0, #0xc5
   5428c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54290:	ldrb	w0, [x1, #3]
   54294:	cmp	w0, #0xbf
   54298:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5429c:	mov	w21, #0x4                   	// #4
   542a0:	b	536fc <my_regprop@@Base+0x19438>
   542a4:	ldrb	w0, [x1, #1]
   542a8:	cmp	w0, #0xbc
   542ac:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   542b0:	ldrb	w0, [x1, #2]
   542b4:	cmp	w0, #0x6e
   542b8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   542bc:	mov	w21, #0x3                   	// #3
   542c0:	b	536fc <my_regprop@@Base+0x19438>
   542c4:	ldrb	w0, [x1, #1]
   542c8:	and	w2, w0, #0xfffffffd
   542cc:	and	w2, w2, #0xff
   542d0:	cmp	w2, #0xac
   542d4:	b.eq	54310 <my_regprop@@Base+0x1a04c>  // b.none
   542d8:	cmp	w0, #0xb1
   542dc:	mov	w2, #0xb7                  	// #183
   542e0:	ccmp	w0, w2, #0x4, ne  // ne = any
   542e4:	b.ne	54344 <my_regprop@@Base+0x1a080>  // b.any
   542e8:	ldrb	w0, [x1, #2]
   542ec:	cmp	w0, #0xcd
   542f0:	b.eq	54330 <my_regprop@@Base+0x1a06c>  // b.none
   542f4:	cmp	w0, #0xce
   542f8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   542fc:	ldrb	w0, [x1, #3]
   54300:	cmp	w0, #0xb9
   54304:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54308:	mov	w21, #0x4                   	// #4
   5430c:	b	536fc <my_regprop@@Base+0x19438>
   54310:	ldrb	w0, [x1, #2]
   54314:	cmp	w0, #0xce
   54318:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5431c:	ldrb	w0, [x1, #3]
   54320:	cmp	w0, #0xb9
   54324:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54328:	mov	w21, #0x4                   	// #4
   5432c:	b	536fc <my_regprop@@Base+0x19438>
   54330:	ldrb	w0, [x1, #3]
   54334:	cmp	w0, #0x82
   54338:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5433c:	mov	w21, #0x4                   	// #4
   54340:	b	536fc <my_regprop@@Base+0x19438>
   54344:	cmp	w0, #0xb9
   54348:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5434c:	ldrb	w0, [x1, #2]
   54350:	cmp	w0, #0xcd
   54354:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54358:	ldrb	w0, [x1, #3]
   5435c:	cmp	w0, #0x82
   54360:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54364:	mov	w21, #0x4                   	// #4
   54368:	b	536fc <my_regprop@@Base+0x19438>
   5436c:	ldrb	w0, [x1, #1]
   54370:	cmp	w0, #0x81
   54374:	b.eq	543b0 <my_regprop@@Base+0x1a0ec>  // b.none
   54378:	cmp	w0, #0x85
   5437c:	b.eq	543d0 <my_regprop@@Base+0x1a10c>  // b.none
   54380:	cmp	w0, #0x89
   54384:	b.eq	5440c <my_regprop@@Base+0x1a148>  // b.none
   54388:	cmp	w0, #0x8e
   5438c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54390:	ldrb	w0, [x1, #2]
   54394:	cmp	w0, #0xce
   54398:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5439c:	ldrb	w0, [x1, #3]
   543a0:	cmp	w0, #0xb9
   543a4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   543a8:	mov	w21, #0x4                   	// #4
   543ac:	b	536fc <my_regprop@@Base+0x19438>
   543b0:	ldrb	w0, [x1, #2]
   543b4:	cmp	w0, #0xcc
   543b8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   543bc:	ldrb	w0, [x1, #3]
   543c0:	cmp	w0, #0x93
   543c4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   543c8:	mov	w21, #0x4                   	// #4
   543cc:	b	536fc <my_regprop@@Base+0x19438>
   543d0:	ldrb	w0, [x1, #2]
   543d4:	cmp	w0, #0xcc
   543d8:	b.eq	543f8 <my_regprop@@Base+0x1a134>  // b.none
   543dc:	cmp	w0, #0xcd
   543e0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   543e4:	ldrb	w0, [x1, #3]
   543e8:	cmp	w0, #0x82
   543ec:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   543f0:	mov	w21, #0x4                   	// #4
   543f4:	b	536fc <my_regprop@@Base+0x19438>
   543f8:	ldrb	w0, [x1, #3]
   543fc:	cmp	w0, #0x93
   54400:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54404:	mov	w21, #0x4                   	// #4
   54408:	b	536fc <my_regprop@@Base+0x19438>
   5440c:	ldrb	w0, [x1, #2]
   54410:	cmp	w0, #0xcd
   54414:	b.eq	54434 <my_regprop@@Base+0x1a170>  // b.none
   54418:	cmp	w0, #0xce
   5441c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54420:	ldrb	w0, [x1, #3]
   54424:	cmp	w0, #0xb9
   54428:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5442c:	mov	w21, #0x4                   	// #4
   54430:	b	536fc <my_regprop@@Base+0x19438>
   54434:	ldrb	w0, [x1, #3]
   54438:	cmp	w0, #0x82
   5443c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54440:	mov	w21, #0x4                   	// #4
   54444:	b	536fc <my_regprop@@Base+0x19438>
   54448:	ldrb	w0, [x1, #2]
   5444c:	cmp	w0, #0xd6
   54450:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54454:	ldrb	w0, [x1, #3]
   54458:	cmp	w0, #0x82
   5445c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54460:	mov	w21, #0x4                   	// #4
   54464:	b	536fc <my_regprop@@Base+0x19438>
   54468:	ldrb	w0, [x1, #2]
   5446c:	cmp	w0, #0xd5
   54470:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54474:	ldrb	w2, [x1, #3]
   54478:	and	w0, w2, #0xfffffff7
   5447c:	and	w0, w0, #0xff
   54480:	cmp	w2, #0xb6
   54484:	mov	w3, #0xab                  	// #171
   54488:	ccmp	w2, w3, #0x4, ne  // ne = any
   5448c:	mov	w21, #0x4                   	// #4
   54490:	mov	w2, #0xa5                  	// #165
   54494:	ccmp	w0, w2, #0x4, ne  // ne = any
   54498:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   5449c:	b	53648 <my_regprop@@Base+0x19384>
   544a0:	b.ne	54630 <my_regprop@@Base+0x1a36c>  // b.any
   544a4:	ldrb	w0, [x1]
   544a8:	cmp	w0, #0x61
   544ac:	b.eq	54510 <my_regprop@@Base+0x1a24c>  // b.none
   544b0:	cmp	w0, #0x66
   544b4:	b.eq	54530 <my_regprop@@Base+0x1a26c>  // b.none
   544b8:	cmp	w0, #0x68
   544bc:	b.eq	54570 <my_regprop@@Base+0x1a2ac>  // b.none
   544c0:	cmp	w0, #0x69
   544c4:	b.eq	54590 <my_regprop@@Base+0x1a2cc>  // b.none
   544c8:	cmp	w0, #0x6a
   544cc:	b.eq	545b0 <my_regprop@@Base+0x1a2ec>  // b.none
   544d0:	cmp	w0, #0x73
   544d4:	b.eq	545d0 <my_regprop@@Base+0x1a30c>  // b.none
   544d8:	cmp	w0, #0x74
   544dc:	b.eq	545e8 <my_regprop@@Base+0x1a324>  // b.none
   544e0:	sub	w2, w0, #0x77
   544e4:	and	w2, w2, #0xfffffffd
   544e8:	tst	w2, #0xff
   544ec:	b.ne	54608 <my_regprop@@Base+0x1a344>  // b.any
   544f0:	ldrb	w0, [x1, #1]
   544f4:	cmp	w0, #0xcc
   544f8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   544fc:	ldrb	w0, [x1, #2]
   54500:	cmp	w0, #0x8a
   54504:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54508:	mov	w21, #0x3                   	// #3
   5450c:	b	536fc <my_regprop@@Base+0x19438>
   54510:	ldrb	w0, [x1, #1]
   54514:	cmp	w0, #0xca
   54518:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5451c:	ldrb	w0, [x1, #2]
   54520:	mov	w21, #0x3                   	// #3
   54524:	cmp	w0, #0xbe
   54528:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   5452c:	b	53648 <my_regprop@@Base+0x19384>
   54530:	ldrb	w0, [x1, #1]
   54534:	cmp	w0, #0x66
   54538:	b.eq	54554 <my_regprop@@Base+0x1a290>  // b.none
   5453c:	cmp	w0, #0x69
   54540:	mov	w21, #0x2                   	// #2
   54544:	mov	w2, #0x6c                  	// #108
   54548:	ccmp	w0, w2, #0x4, ne  // ne = any
   5454c:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   54550:	b	53648 <my_regprop@@Base+0x19384>
   54554:	ldrb	w0, [x1, #2]
   54558:	cmp	w0, #0x69
   5455c:	mov	w2, #0x6c                  	// #108
   54560:	ccmp	w0, w2, #0x4, ne  // ne = any
   54564:	cset	w21, eq  // eq = none
   54568:	add	w21, w21, #0x2
   5456c:	b	536fc <my_regprop@@Base+0x19438>
   54570:	ldrb	w0, [x1, #1]
   54574:	cmp	w0, #0xcc
   54578:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5457c:	ldrb	w0, [x1, #2]
   54580:	mov	w21, #0x3                   	// #3
   54584:	cmp	w0, #0xb1
   54588:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   5458c:	b	53648 <my_regprop@@Base+0x19384>
   54590:	ldrb	w0, [x1, #1]
   54594:	cmp	w0, #0xcc
   54598:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5459c:	ldrb	w0, [x1, #2]
   545a0:	cmp	w0, #0x87
   545a4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   545a8:	mov	w21, #0x3                   	// #3
   545ac:	b	536fc <my_regprop@@Base+0x19438>
   545b0:	ldrb	w0, [x1, #1]
   545b4:	cmp	w0, #0xcc
   545b8:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   545bc:	ldrb	w0, [x1, #2]
   545c0:	cmp	w0, #0x8c
   545c4:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   545c8:	mov	w21, #0x3                   	// #3
   545cc:	b	536fc <my_regprop@@Base+0x19438>
   545d0:	ldrb	w0, [x1, #1]
   545d4:	sub	w0, w0, #0x73
   545d8:	cmp	w0, #0x1
   545dc:	b.hi	53648 <my_regprop@@Base+0x19384>  // b.pmore
   545e0:	mov	w21, #0x2                   	// #2
   545e4:	b	536fc <my_regprop@@Base+0x19438>
   545e8:	ldrb	w0, [x1, #1]
   545ec:	cmp	w0, #0xcc
   545f0:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   545f4:	ldrb	w0, [x1, #2]
   545f8:	cmp	w0, #0x88
   545fc:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54600:	mov	w21, #0x3                   	// #3
   54604:	b	536fc <my_regprop@@Base+0x19438>
   54608:	cmp	w0, #0xca
   5460c:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54610:	ldrb	w0, [x1, #1]
   54614:	cmp	w0, #0xbc
   54618:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5461c:	ldrb	w0, [x1, #2]
   54620:	cmp	w0, #0x6e
   54624:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   54628:	mov	w21, #0x3                   	// #3
   5462c:	b	536fc <my_regprop@@Base+0x19438>
   54630:	cmp	x0, #0x1
   54634:	b.le	53648 <my_regprop@@Base+0x19384>
   54638:	ldrb	w0, [x1]
   5463c:	cmp	w0, #0x66
   54640:	b.eq	54664 <my_regprop@@Base+0x1a3a0>  // b.none
   54644:	cmp	w0, #0x73
   54648:	b.ne	53648 <my_regprop@@Base+0x19384>  // b.any
   5464c:	ldrb	w0, [x1, #1]
   54650:	sub	w0, w0, #0x73
   54654:	cmp	w0, #0x1
   54658:	b.hi	53648 <my_regprop@@Base+0x19384>  // b.pmore
   5465c:	mov	w21, #0x2                   	// #2
   54660:	b	536fc <my_regprop@@Base+0x19438>
   54664:	ldrb	w0, [x1, #1]
   54668:	cmp	w0, #0x66
   5466c:	mov	w2, #0x69                  	// #105
   54670:	ccmp	w0, w2, #0x4, ne  // ne = any
   54674:	mov	w21, #0x2                   	// #2
   54678:	mov	w2, #0x6c                  	// #108
   5467c:	ccmp	w0, w2, #0x4, ne  // ne = any
   54680:	b.eq	536fc <my_regprop@@Base+0x19438>  // b.none
   54684:	b	53648 <my_regprop@@Base+0x19384>
   54688:	mov	w0, #0x0                   	// #0
   5468c:	cmp	x21, x1
   54690:	b.ls	53724 <my_regprop@@Base+0x19460>  // b.plast
   54694:	ldrb	w2, [x1]
   54698:	tbz	w2, #7, 546b4 <my_regprop@@Base+0x1a3f0>
   5469c:	ldrb	w2, [x22, w2, sxtw]
   546a0:	add	x1, x1, x2
   546a4:	add	w0, w0, #0x1
   546a8:	cmp	x21, x1
   546ac:	b.hi	54694 <my_regprop@@Base+0x1a3d0>  // b.pmore
   546b0:	b	53724 <my_regprop@@Base+0x19460>
   546b4:	add	x1, x1, #0x1
   546b8:	b	5365c <my_regprop@@Base+0x19398>
   546bc:	ldr	x19, [sp, #176]
   546c0:	mov	w23, #0x0                   	// #0
   546c4:	b	53610 <my_regprop@@Base+0x1934c>
   546c8:	mov	w19, w23
   546cc:	ldr	w23, [sp, #208]
   546d0:	ldrb	w0, [x20, #1]
   546d4:	cmp	w0, #0x26
   546d8:	b.eq	54748 <my_regprop@@Base+0x1a484>  // b.none
   546dc:	sxtw	x21, w19
   546e0:	ldr	x0, [sp, #176]
   546e4:	bl	5650 <Perl_safesysfree@plt>
   546e8:	ldrb	w0, [x20]
   546ec:	cmp	w0, #0x1
   546f0:	b.ne	53090 <my_regprop@@Base+0x18dcc>  // b.any
   546f4:	ldrb	w1, [x20, #4]
   546f8:	and	w0, w1, #0xffffffdf
   546fc:	sub	w0, w0, #0x41
   54700:	cmp	w0, #0x19
   54704:	b.hi	53090 <my_regprop@@Base+0x18dcc>  // b.pmore
   54708:	ldrb	w0, [x20, #1]
   5470c:	cmp	w0, #0x28
   54710:	b.eq	5472c <my_regprop@@Base+0x1a468>  // b.none
   54714:	cmp	w0, #0x27
   54718:	b.ne	53090 <my_regprop@@Base+0x18dcc>  // b.any
   5471c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   54720:	ldr	x0, [x0, #3880]
   54724:	ldr	w0, [x0, w1, sxtw #2]
   54728:	tbnz	w0, #19, 53090 <my_regprop@@Base+0x18dcc>
   5472c:	mov	w0, #0x17                  	// #23
   54730:	strb	w0, [x20, #1]
   54734:	and	w1, w1, #0xffffffdf
   54738:	str	w1, [x20, #4]
   5473c:	mov	w0, #0xffffffdf            	// #-33
   54740:	strb	w0, [x20]
   54744:	b	53090 <my_regprop@@Base+0x18dcc>
   54748:	ldrb	w2, [x20]
   5474c:	ldr	x0, [sp, #224]
   54750:	add	x2, x0, x2
   54754:	mov	x1, x0
   54758:	mov	x0, x26
   5475c:	bl	5720 <Perl_utf8_length@plt>
   54760:	cmp	w19, w0
   54764:	csel	w0, w19, w0, le
   54768:	mov	w19, w0
   5476c:	b	546dc <my_regprop@@Base+0x1a418>
   54770:	mov	x19, x28
   54774:	ldr	x1, [sp, #224]
   54778:	b	53214 <my_regprop@@Base+0x18f50>
   5477c:	cmp	x19, x1
   54780:	b.ls	54928 <my_regprop@@Base+0x1a664>  // b.plast
   54784:	ldrb	w0, [x1]
   54788:	cmp	w0, #0xdf
   5478c:	b.eq	547a8 <my_regprop@@Base+0x1a4e4>  // b.none
   54790:	add	x1, x1, #0x1
   54794:	cmp	x19, x1
   54798:	b.ne	54784 <my_regprop@@Base+0x1a4c0>  // b.any
   5479c:	mov	w23, #0x0                   	// #0
   547a0:	mov	x21, #0x0                   	// #0
   547a4:	b	546e8 <my_regprop@@Base+0x1a424>
   547a8:	mov	w0, #0x2b                  	// #43
   547ac:	strb	w0, [x20, #1]
   547b0:	ldr	w23, [sp, #312]
   547b4:	mov	x21, #0x0                   	// #0
   547b8:	b	546e8 <my_regprop@@Base+0x1a424>
   547bc:	ldrb	w0, [x1, #1]
   547c0:	and	w0, w0, #0xffffffdf
   547c4:	and	w0, w0, #0xff
   547c8:	cmp	w0, #0x46
   547cc:	b.eq	547e0 <my_regprop@@Base+0x1a51c>  // b.none
   547d0:	cmp	w0, #0x49
   547d4:	ccmp	w0, w3, #0x4, ne  // ne = any
   547d8:	b.eq	5485c <my_regprop@@Base+0x1a598>  // b.none
   547dc:	b	5488c <my_regprop@@Base+0x1a5c8>
   547e0:	ldrb	w9, [x1, #2]
   547e4:	and	w9, w9, #0xffffffdf
   547e8:	and	w9, w9, #0xff
   547ec:	cmp	w9, #0x49
   547f0:	mov	w0, w6
   547f4:	ccmp	w9, w3, #0x4, ne  // ne = any
   547f8:	b.eq	54870 <my_regprop@@Base+0x1a5ac>  // b.none
   547fc:	b	5485c <my_regprop@@Base+0x1a598>
   54800:	b.ne	54880 <my_regprop@@Base+0x1a5bc>  // b.any
   54804:	ldrb	w0, [x1]
   54808:	and	w0, w0, #0xffffffdf
   5480c:	and	w0, w0, #0xff
   54810:	cmp	w0, #0x46
   54814:	b.eq	54840 <my_regprop@@Base+0x1a57c>  // b.none
   54818:	cmp	w0, #0x53
   5481c:	b.ne	54880 <my_regprop@@Base+0x1a5bc>  // b.any
   54820:	ldrb	w0, [x1, #1]
   54824:	sub	w9, w0, #0x53
   54828:	cmp	w9, #0x1
   5482c:	b.ls	5485c <my_regprop@@Base+0x1a598>  // b.plast
   54830:	sub	w0, w0, #0x73
   54834:	cmp	w0, #0x1
   54838:	b.ls	5485c <my_regprop@@Base+0x1a598>  // b.plast
   5483c:	b	5488c <my_regprop@@Base+0x1a5c8>
   54840:	ldrb	w0, [x1, #1]
   54844:	and	w0, w0, #0xffffffdf
   54848:	and	w0, w0, #0xff
   5484c:	cmp	w0, #0x46
   54850:	ccmp	w0, w5, #0x4, ne  // ne = any
   54854:	ccmp	w0, w3, #0x4, ne  // ne = any
   54858:	b.ne	5488c <my_regprop@@Base+0x1a5c8>  // b.any
   5485c:	ldrb	w0, [x1]
   54860:	and	w0, w0, #0xffffffdf
   54864:	cmp	w0, #0x53
   54868:	b.eq	548f8 <my_regprop@@Base+0x1a634>  // b.none
   5486c:	mov	w0, w4
   54870:	sub	w9, w0, #0x1
   54874:	add	x21, x21, w9, sxtw
   54878:	add	x1, x1, w0, sxtw
   5487c:	b	54890 <my_regprop@@Base+0x1a5cc>
   54880:	ldrb	w0, [x1]
   54884:	cmp	w0, #0xdf
   54888:	b.eq	548e0 <my_regprop@@Base+0x1a61c>  // b.none
   5488c:	add	x1, x1, #0x1
   54890:	cmp	x1, x2
   54894:	b.cs	546e8 <my_regprop@@Base+0x1a424>  // b.hs, b.nlast
   54898:	sub	x0, x19, x1
   5489c:	cmp	x0, #0x2
   548a0:	b.le	54800 <my_regprop@@Base+0x1a53c>
   548a4:	ldrb	w0, [x1]
   548a8:	and	w0, w0, #0xffffffdf
   548ac:	and	w0, w0, #0xff
   548b0:	cmp	w0, #0x46
   548b4:	b.eq	547bc <my_regprop@@Base+0x1a4f8>  // b.none
   548b8:	cmp	w0, #0x53
   548bc:	b.ne	54880 <my_regprop@@Base+0x1a5bc>  // b.any
   548c0:	ldrb	w0, [x1, #1]
   548c4:	sub	w9, w0, #0x53
   548c8:	cmp	w9, #0x1
   548cc:	b.ls	5485c <my_regprop@@Base+0x1a598>  // b.plast
   548d0:	sub	w0, w0, #0x73
   548d4:	cmp	w0, #0x1
   548d8:	b.ls	5485c <my_regprop@@Base+0x1a598>  // b.plast
   548dc:	b	5488c <my_regprop@@Base+0x1a5c8>
   548e0:	ldrb	w0, [x20, #1]
   548e4:	sub	w0, w0, #0x25
   548e8:	and	w0, w0, #0xff
   548ec:	cmp	w0, #0x1
   548f0:	csel	w23, w23, w8, hi  // hi = pmore
   548f4:	b	5488c <my_regprop@@Base+0x1a5c8>
   548f8:	ldrb	w9, [x1, #1]
   548fc:	and	w9, w9, #0xffffffdf
   54900:	mov	w0, w4
   54904:	cmp	w9, #0x53
   54908:	b.ne	54870 <my_regprop@@Base+0x1a5ac>  // b.any
   5490c:	ldrb	w9, [x20, #1]
   54910:	sub	w9, w9, #0x25
   54914:	and	w9, w9, #0xff
   54918:	cmp	w9, #0x1
   5491c:	b.ls	54870 <my_regprop@@Base+0x1a5ac>  // b.plast
   54920:	strb	w7, [x20, #1]
   54924:	b	54870 <my_regprop@@Base+0x1a5ac>
   54928:	mov	w23, #0x0                   	// #0
   5492c:	mov	x21, #0x0                   	// #0
   54930:	b	546e8 <my_regprop@@Base+0x1a424>
   54934:	mov	w23, #0x0                   	// #0
   54938:	mov	x21, #0x0                   	// #0
   5493c:	b	546e8 <my_regprop@@Base+0x1a424>
   54940:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   54944:	add	x1, x1, #0xc10
   54948:	add	x1, x1, #0x7d0
   5494c:	ldrb	w0, [x1, w0, sxtw]
   54950:	cbnz	w0, 5ab34 <my_regprop@@Base+0x20870>
   54954:	ldrh	w19, [x24, #2]
   54958:	mov	w22, #0xffff                	// #65535
   5495c:	b	5ab3c <my_regprop@@Base+0x20878>
   54960:	cmp	w2, #0x46
   54964:	b.ne	549ac <my_regprop@@Base+0x1a6e8>  // b.any
   54968:	ldr	w0, [x1, #4]
   5496c:	cbz	w0, 549ac <my_regprop@@Base+0x1a6e8>
   54970:	add	w0, w19, w0
   54974:	cmp	w0, w22
   54978:	b.ge	549ac <my_regprop@@Base+0x1a6e8>  // b.tcont
   5497c:	mov	w19, w0
   54980:	mov	x0, x26
   54984:	bl	58a0 <Perl_regnext@plt>
   54988:	mov	x1, x0
   5498c:	cbz	x0, 549ac <my_regprop@@Base+0x1a6e8>
   54990:	ldrb	w2, [x0, #1]
   54994:	ldrb	w0, [x20, w2, sxtw]
   54998:	cmp	w0, #0x2f
   5499c:	b.ne	54960 <my_regprop@@Base+0x1a69c>  // b.any
   549a0:	ldrh	w0, [x1, #2]
   549a4:	cbnz	w0, 54970 <my_regprop@@Base+0x1a6ac>
   549a8:	b	54960 <my_regprop@@Base+0x1a69c>
   549ac:	ldr	x1, [sp, #336]
   549b0:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   549b4:	add	x0, x0, #0xc10
   549b8:	add	x0, x0, #0x7d0
   549bc:	ldrb	w2, [x1, #1]
   549c0:	ldrb	w0, [x0, w2, sxtw]
   549c4:	cbz	w0, 54a3c <my_regprop@@Base+0x1a778>
   549c8:	str	w19, [x1, #4]
   549cc:	ldr	x24, [sp, #336]
   549d0:	ldrb	w0, [x24, #1]
   549d4:	cmp	w0, #0x58
   549d8:	b.eq	54a44 <my_regprop@@Base+0x1a780>  // b.none
   549dc:	sub	w1, w0, #0x47
   549e0:	and	w1, w1, #0xfffffffb
   549e4:	and	w1, w1, #0xff
   549e8:	cmp	w0, #0x22
   549ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   549f0:	b.ne	54c10 <my_regprop@@Base+0x1a94c>  // b.any
   549f4:	mov	x1, x24
   549f8:	mov	x0, x26
   549fc:	bl	58a0 <Perl_regnext@plt>
   54a00:	ldr	x28, [sp, #336]
   54a04:	ldrb	w19, [x28, #1]
   54a08:	str	w19, [sp, #152]
   54a0c:	cmp	w19, #0x4b
   54a10:	cset	w23, eq  // eq = none
   54a14:	ldrb	w0, [x0, #1]
   54a18:	cmp	w23, #0x0
   54a1c:	ccmp	w0, w19, #0x4, eq  // eq = none
   54a20:	b.eq	54d08 <my_regprop@@Base+0x1aa44>  // b.none
   54a24:	add	x0, x28, #0x4
   54a28:	add	x28, x28, #0x8
   54a2c:	cmp	w19, #0x47
   54a30:	csel	x28, x28, x0, eq  // eq = none
   54a34:	str	x28, [sp, #336]
   54a38:	b	54b84 <my_regprop@@Base+0x1a8c0>
   54a3c:	strh	w19, [x1, #2]
   54a40:	b	549cc <my_regprop@@Base+0x1a708>
   54a44:	str	xzr, [sp, #352]
   54a48:	str	xzr, [sp, #368]
   54a4c:	str	xzr, [sp, #376]
   54a50:	stp	xzr, xzr, [sp, #496]
   54a54:	add	x0, sp, #0x200
   54a58:	stp	xzr, xzr, [x0]
   54a5c:	stp	xzr, xzr, [x0, #16]
   54a60:	stp	xzr, xzr, [x0, #32]
   54a64:	stp	xzr, xzr, [x0, #48]
   54a68:	stp	xzr, xzr, [x0, #64]
   54a6c:	stp	xzr, xzr, [x0, #80]
   54a70:	stp	xzr, xzr, [x0, #96]
   54a74:	stp	xzr, xzr, [x0, #112]
   54a78:	stp	xzr, xzr, [x0, #128]
   54a7c:	stp	xzr, xzr, [x0, #144]
   54a80:	mov	x1, x24
   54a84:	mov	x0, x26
   54a88:	bl	58a0 <Perl_regnext@plt>
   54a8c:	mov	x3, x0
   54a90:	str	x0, [sp, #336]
   54a94:	ldrb	w0, [x0, #1]
   54a98:	cmp	w0, #0x4b
   54a9c:	b.ne	54ce4 <my_regprop@@Base+0x1aa20>  // b.any
   54aa0:	ldr	w20, [sp, #136]
   54aa4:	mov	w5, w20
   54aa8:	ldr	w4, [sp, #744]
   54aac:	mov	x2, x27
   54ab0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   54ab4:	add	x1, x1, #0x4a0
   54ab8:	mov	x0, x26
   54abc:	bl	52694 <my_regprop@@Base+0x183d0>
   54ac0:	add	x0, sp, #0x178
   54ac4:	str	x0, [sp, #656]
   54ac8:	ldr	x0, [sp, #200]
   54acc:	ldr	x0, [x0]
   54ad0:	str	x0, [sp, #352]
   54ad4:	ldr	x1, [sp, #336]
   54ad8:	mov	x0, x26
   54adc:	bl	58a0 <Perl_regnext@plt>
   54ae0:	mov	x19, x0
   54ae4:	ldr	x3, [sp, #336]
   54ae8:	add	x3, x3, #0x8
   54aec:	str	x3, [sp, #336]
   54af0:	mov	w5, w20
   54af4:	ldr	w4, [sp, #744]
   54af8:	mov	x2, x27
   54afc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   54b00:	add	x1, x1, #0xe00
   54b04:	mov	x0, x26
   54b08:	bl	52694 <my_regprop@@Base+0x183d0>
   54b0c:	mov	w5, w20
   54b10:	ldr	w4, [sp, #744]
   54b14:	mov	x3, x19
   54b18:	mov	x2, x27
   54b1c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   54b20:	add	x1, x1, #0x438
   54b24:	mov	x0, x26
   54b28:	bl	52694 <my_regprop@@Base+0x183d0>
   54b2c:	ldr	w0, [sp, #744]
   54b30:	add	w0, w0, #0x1
   54b34:	str	w0, [sp, #24]
   54b38:	mov	w0, #0x20000               	// #131072
   54b3c:	str	w0, [sp, #16]
   54b40:	str	xzr, [sp, #8]
   54b44:	ldr	w0, [sp, #720]
   54b48:	str	w0, [sp]
   54b4c:	ldr	w7, [sp, #188]
   54b50:	add	x6, sp, #0x1f0
   54b54:	mov	x5, x19
   54b58:	add	x4, sp, #0x170
   54b5c:	add	x3, sp, #0x160
   54b60:	add	x2, sp, #0x150
   54b64:	mov	x1, x27
   54b68:	mov	x0, x26
   54b6c:	bl	528a8 <my_regprop@@Base+0x185e4>
   54b70:	str	x19, [sp, #336]
   54b74:	ldr	x1, [sp, #336]
   54b78:	mov	x0, x26
   54b7c:	bl	58a0 <Perl_regnext@plt>
   54b80:	str	x0, [sp, #336]
   54b84:	ldr	x0, [sp, #336]
   54b88:	cbz	x0, 5a88c <my_regprop@@Base+0x205c8>
   54b8c:	ldrb	w1, [x0, #1]
   54b90:	cmp	w1, #0x0
   54b94:	ldr	x1, [sp, #168]
   54b98:	ccmp	x0, x1, #0x2, ne  // ne = any
   54b9c:	b.cs	5a7a4 <my_regprop@@Base+0x204e0>  // b.hs, b.nlast
   54ba0:	adrp	x19, 7c000 <boot_re@@Base+0x1a41c>
   54ba4:	add	x19, x19, #0x428
   54ba8:	ldr	w4, [sp, #144]
   54bac:	ldr	w3, [sp, #744]
   54bb0:	mov	x2, x25
   54bb4:	mov	x1, x19
   54bb8:	mov	x0, x26
   54bbc:	bl	32364 <Perl_re_indentf@@Base+0x138>
   54bc0:	ldr	w5, [sp, #136]
   54bc4:	ldr	w4, [sp, #744]
   54bc8:	ldr	x3, [sp, #336]
   54bcc:	mov	x2, x27
   54bd0:	mov	x1, x19
   54bd4:	mov	x0, x26
   54bd8:	bl	52694 <my_regprop@@Base+0x183d0>
   54bdc:	ldr	x20, [sp, #336]
   54be0:	ldrb	w1, [x20, #1]
   54be4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   54be8:	ldr	x0, [x0, #3768]
   54bec:	ldrb	w0, [x0, w1, sxtw]
   54bf0:	mov	w23, #0x0                   	// #0
   54bf4:	mov	x21, #0x0                   	// #0
   54bf8:	cmp	w0, #0x23
   54bfc:	b.eq	52c74 <my_regprop@@Base+0x189b0>  // b.none
   54c00:	ldr	x24, [sp, #336]
   54c04:	ldrb	w0, [x24, #1]
   54c08:	cmp	w0, #0x36
   54c0c:	b.ne	54940 <my_regprop@@Base+0x1a67c>  // b.any
   54c10:	cmp	w0, #0x4a
   54c14:	mov	w1, #0x55                  	// #85
   54c18:	ccmp	w0, w1, #0x4, ne  // ne = any
   54c1c:	b.ne	55c28 <my_regprop@@Base+0x1b964>  // b.any
   54c20:	cmp	w0, #0x4a
   54c24:	b.eq	55b7c <my_regprop@@Base+0x1b8b8>  // b.none
   54c28:	ldr	w19, [x24, #4]
   54c2c:	ldrsw	x1, [x24, #8]
   54c30:	ldr	x0, [x27, #216]
   54c34:	str	x24, [x0, x1, lsl #3]
   54c38:	ldr	x0, [sp, #136]
   54c3c:	tbnz	w0, #17, 55968 <my_regprop@@Base+0x1b6a4>
   54c40:	ldr	w0, [sp, #144]
   54c44:	ldr	w1, [sp, #256]
   54c48:	orr	w0, w0, w1
   54c4c:	cbnz	w0, 54c5c <my_regprop@@Base+0x1a998>
   54c50:	cbz	x25, 54c68 <my_regprop@@Base+0x1a9a4>
   54c54:	ldr	w0, [x25, #152]
   54c58:	tbz	w0, #6, 54c68 <my_regprop@@Base+0x1a9a4>
   54c5c:	ldr	w0, [sp, #136]
   54c60:	tst	w0, #0x1c00
   54c64:	b.eq	55968 <my_regprop@@Base+0x1b6a4>  // b.none
   54c68:	mov	w24, w19
   54c6c:	ldr	x22, [x27, #96]
   54c70:	sxtw	x0, w19
   54c74:	ldr	x1, [x27, #160]
   54c78:	ldr	x21, [x1, x0, lsl #3]
   54c7c:	ldr	x1, [x27, #168]
   54c80:	ldr	x20, [x1, x0, lsl #3]
   54c84:	ldr	w0, [sp, #720]
   54c88:	cbz	w0, 5597c <my_regprop@@Base+0x1b6b8>
   54c8c:	ldr	x1, [x27, #232]
   54c90:	ldr	w2, [x27, #240]
   54c94:	ldr	w0, [sp, #720]
   54c98:	sub	w0, w0, #0x1
   54c9c:	mul	w0, w0, w2
   54ca0:	asr	w3, w19, #3
   54ca4:	add	x0, x1, x0
   54ca8:	ldrb	w0, [x0, w3, sxtw]
   54cac:	and	w3, w19, #0x7
   54cb0:	asr	w0, w0, w3
   54cb4:	and	w23, w0, #0x1
   54cb8:	tbnz	w0, #0, 55b04 <my_regprop@@Base+0x1b840>
   54cbc:	ldr	w0, [sp, #720]
   54cc0:	mul	w3, w2, w0
   54cc4:	adds	x0, x1, w3, uxtw
   54cc8:	b.eq	55abc <my_regprop@@Base+0x1b7f8>  // b.none
   54ccc:	sub	w3, w3, w2
   54cd0:	adds	x1, x1, x3
   54cd4:	b.eq	55ae0 <my_regprop@@Base+0x1b81c>  // b.none
   54cd8:	mov	w2, w2
   54cdc:	bl	4e60 <memcpy@plt>
   54ce0:	b	55990 <my_regprop@@Base+0x1b6cc>
   54ce4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   54ce8:	add	x3, x3, #0xc10
   54cec:	add	x3, x3, #0x970
   54cf0:	mov	w2, #0x11cb                	// #4555
   54cf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   54cf8:	add	x1, x1, #0xfb8
   54cfc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   54d00:	add	x0, x0, #0x488
   54d04:	bl	58e0 <__assert_fail@plt>
   54d08:	ldr	x0, [sp, #136]
   54d0c:	tbnz	w0, #10, 54d74 <my_regprop@@Base+0x1aab0>
   54d10:	ldr	w0, [sp, #136]
   54d14:	mov	x3, x28
   54d18:	tst	w0, #0x1800
   54d1c:	b.ne	54d98 <my_regprop@@Base+0x1aad4>  // b.any
   54d20:	mov	x24, #0x0                   	// #0
   54d24:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   54d28:	mov	x22, #0x0                   	// #0
   54d2c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   54d30:	add	x0, x0, #0x4b0
   54d34:	str	x0, [sp, #160]
   54d38:	add	x0, sp, #0x178
   54d3c:	str	x0, [sp, #264]
   54d40:	add	x0, sp, #0x1b8
   54d44:	str	x0, [sp, #232]
   54d48:	add	x0, sp, #0x1f0
   54d4c:	str	x0, [sp, #176]
   54d50:	add	x0, sp, #0x170
   54d54:	str	x0, [sp, #208]
   54d58:	str	x28, [sp, #280]
   54d5c:	str	w19, [sp, #224]
   54d60:	ldr	w28, [sp, #260]
   54d64:	str	w23, [sp, #288]
   54d68:	ldr	w21, [sp, #136]
   54d6c:	ldr	w19, [sp, #744]
   54d70:	b	54e34 <my_regprop@@Base+0x1ab70>
   54d74:	ldr	w4, [sp, #144]
   54d78:	ldr	x3, [sp, #200]
   54d7c:	mov	x2, x25
   54d80:	mov	x1, x27
   54d84:	mov	x0, x26
   54d88:	bl	32660 <Perl_re_indentf@@Base+0x434>
   54d8c:	ldr	w0, [sp, #136]
   54d90:	tst	w0, #0x1800
   54d94:	b.eq	54da8 <my_regprop@@Base+0x1aae4>  // b.none
   54d98:	add	x2, sp, #0x180
   54d9c:	mov	x1, x27
   54da0:	mov	x0, x26
   54da4:	bl	29d54 <my_regexec@@Base+0x6860>
   54da8:	ldr	x3, [sp, #336]
   54dac:	ldrb	w0, [x3, #1]
   54db0:	cmp	w0, w19
   54db4:	b.eq	54d20 <my_regprop@@Base+0x1aa5c>  // b.none
   54db8:	mov	x24, #0x0                   	// #0
   54dbc:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   54dc0:	mov	x22, #0x0                   	// #0
   54dc4:	b	54fbc <my_regprop@@Base+0x1acf8>
   54dc8:	ldr	x0, [sp, #264]
   54dcc:	str	x0, [sp, #656]
   54dd0:	b	54e94 <my_regprop@@Base+0x1abd0>
   54dd4:	ldr	x2, [sp, #232]
   54dd8:	mov	x1, x27
   54ddc:	mov	x0, x26
   54de0:	bl	29d54 <my_regexec@@Base+0x6860>
   54de4:	ldr	x0, [sp, #232]
   54de8:	str	x0, [sp, #664]
   54dec:	mov	w0, #0x800                 	// #2048
   54df0:	b	54ed4 <my_regprop@@Base+0x1ac10>
   54df4:	mov	x22, x1
   54df8:	mov	w1, #0x1                   	// #1
   54dfc:	str	w1, [sp, #256]
   54e00:	str	w1, [sp, #144]
   54e04:	b	54f40 <my_regprop@@Base+0x1ac7c>
   54e08:	cbnz	x25, 54f80 <my_regprop@@Base+0x1acbc>
   54e0c:	b	54e18 <my_regprop@@Base+0x1ab54>
   54e10:	ldr	w0, [sp, #652]
   54e14:	str	w0, [x25, #156]
   54e18:	tst	w21, #0x1800
   54e1c:	b.ne	54f94 <my_regprop@@Base+0x1acd0>  // b.any
   54e20:	ldr	x3, [sp, #336]
   54e24:	ldrb	w0, [x3, #1]
   54e28:	ldr	w1, [sp, #224]
   54e2c:	cmp	w0, w1
   54e30:	b.ne	54fac <my_regprop@@Base+0x1ace8>  // b.any
   54e34:	mov	w5, w21
   54e38:	mov	w4, w19
   54e3c:	mov	x2, x27
   54e40:	ldr	x1, [sp, #160]
   54e44:	mov	x0, x26
   54e48:	bl	52694 <my_regprop@@Base+0x183d0>
   54e4c:	add	x24, x24, #0x1
   54e50:	stp	xzr, xzr, [sp, #496]
   54e54:	add	x0, sp, #0x200
   54e58:	stp	xzr, xzr, [x0]
   54e5c:	stp	xzr, xzr, [x0, #16]
   54e60:	stp	xzr, xzr, [x0, #32]
   54e64:	stp	xzr, xzr, [x0, #48]
   54e68:	stp	xzr, xzr, [x0, #64]
   54e6c:	stp	xzr, xzr, [x0, #80]
   54e70:	stp	xzr, xzr, [x0, #96]
   54e74:	stp	xzr, xzr, [x0, #112]
   54e78:	stp	xzr, xzr, [x0, #128]
   54e7c:	stp	xzr, xzr, [x0, #144]
   54e80:	cbz	x25, 54dc8 <my_regprop@@Base+0x1ab04>
   54e84:	ldr	w0, [x25, #156]
   54e88:	str	w0, [sp, #652]
   54e8c:	ldr	x0, [x25, #160]
   54e90:	str	x0, [sp, #656]
   54e94:	ldr	x0, [sp, #216]
   54e98:	str	x0, [sp, #504]
   54e9c:	ldr	x1, [sp, #336]
   54ea0:	mov	x0, x26
   54ea4:	bl	58a0 <Perl_regnext@plt>
   54ea8:	mov	x23, x0
   54eac:	ldr	x0, [sp, #336]
   54eb0:	add	x1, x0, #0x8
   54eb4:	add	x0, x0, #0x4
   54eb8:	ldr	w2, [sp, #152]
   54ebc:	cmp	w2, #0x22
   54ec0:	csel	x0, x0, x1, eq  // eq = none
   54ec4:	str	x0, [sp, #336]
   54ec8:	mov	w0, #0x0                   	// #0
   54ecc:	tst	w21, #0x1800
   54ed0:	b.ne	54dd4 <my_regprop@@Base+0x1ab10>  // b.any
   54ed4:	orr	w1, w0, #0x2000
   54ed8:	tst	x21, #0x2000
   54edc:	csel	w0, w1, w0, ne  // ne = any
   54ee0:	add	w1, w19, #0x1
   54ee4:	str	w1, [sp, #24]
   54ee8:	str	w0, [sp, #16]
   54eec:	str	xzr, [sp, #8]
   54ef0:	ldr	w0, [sp, #720]
   54ef4:	str	w0, [sp]
   54ef8:	ldr	w7, [sp, #188]
   54efc:	ldr	x6, [sp, #176]
   54f00:	mov	x5, x23
   54f04:	ldr	x4, [sp, #208]
   54f08:	ldr	x3, [sp, #200]
   54f0c:	add	x2, sp, #0x150
   54f10:	mov	x1, x27
   54f14:	mov	x0, x26
   54f18:	bl	528a8 <my_regprop@@Base+0x185e4>
   54f1c:	cmp	x20, x0
   54f20:	csel	x20, x20, x0, le
   54f24:	ldr	x1, [sp, #368]
   54f28:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   54f2c:	cmp	x1, x2
   54f30:	b.eq	54df4 <my_regprop@@Base+0x1ab30>  // b.none
   54f34:	add	x1, x1, x0
   54f38:	cmp	x22, x1
   54f3c:	csel	x22, x22, x1, ge  // ge = tcont
   54f40:	str	x23, [sp, #336]
   54f44:	ldr	w1, [sp, #648]
   54f48:	tst	w1, #0x180
   54f4c:	cinc	w28, w28, ne  // ne = any
   54f50:	tbz	w1, #15, 54e08 <my_regprop@@Base+0x1ab44>
   54f54:	ldr	x2, [sp, #192]
   54f58:	add	x2, x20, x2
   54f5c:	ldr	x3, [sp, #240]
   54f60:	cmp	x0, x3
   54f64:	csel	x0, x2, x3, lt  // lt = tstop
   54f68:	str	x0, [sp, #240]
   54f6c:	and	w21, w21, #0xfffffbff
   54f70:	cbz	x25, 54e18 <my_regprop@@Base+0x1ab54>
   54f74:	ldr	w0, [x25, #152]
   54f78:	orr	w0, w0, #0x8000
   54f7c:	str	w0, [x25, #152]
   54f80:	tbz	w1, #9, 54e10 <my_regprop@@Base+0x1ab4c>
   54f84:	ldr	w0, [x25, #152]
   54f88:	orr	w0, w0, #0x200
   54f8c:	str	w0, [x25, #152]
   54f90:	b	54e10 <my_regprop@@Base+0x1ab4c>
   54f94:	ldr	x3, [sp, #232]
   54f98:	add	x2, sp, #0x180
   54f9c:	mov	x1, x27
   54fa0:	mov	x0, x26
   54fa4:	bl	2d628 <my_regexec@@Base+0xa134>
   54fa8:	b	54e20 <my_regprop@@Base+0x1ab5c>
   54fac:	str	w28, [sp, #260]
   54fb0:	ldr	x28, [sp, #280]
   54fb4:	ldr	w23, [sp, #288]
   54fb8:	str	w21, [sp, #136]
   54fbc:	cmp	w23, #0x0
   54fc0:	ccmp	x24, #0x1, #0x0, ne  // ne = any
   54fc4:	csel	x20, x20, xzr, gt
   54fc8:	ldr	x0, [sp, #136]
   54fcc:	tbz	w0, #10, 5501c <my_regprop@@Base+0x1ad58>
   54fd0:	ldr	x0, [x25]
   54fd4:	add	x0, x0, x20
   54fd8:	str	x0, [x25]
   54fdc:	ldr	x2, [x25, #8]
   54fe0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   54fe4:	sub	x1, x1, x22
   54fe8:	add	x1, x1, x20
   54fec:	add	x0, x2, x22
   54ff0:	sub	x0, x0, x20
   54ff4:	cmp	x2, x1
   54ff8:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   54ffc:	csel	x0, x0, x1, lt  // lt = tstop
   55000:	str	x0, [x25, #8]
   55004:	ldr	w0, [sp, #144]
   55008:	cmp	w0, #0x0
   5500c:	ccmp	x20, x22, #0x0, eq  // eq = none
   55010:	b.eq	5501c <my_regprop@@Base+0x1ad58>  // b.none
   55014:	mov	w0, #0x1                   	// #1
   55018:	strb	w0, [x25, #48]
   5501c:	ldr	x0, [sp, #192]
   55020:	add	x0, x0, x20
   55024:	str	x0, [sp, #192]
   55028:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   5502c:	ldr	x2, [sp, #216]
   55030:	cmp	x2, x0
   55034:	b.eq	55060 <my_regprop@@Base+0x1ad9c>  // b.none
   55038:	mov	x1, x0
   5503c:	mov	x0, x2
   55040:	sub	x1, x1, x2
   55044:	sub	x2, x20, x22
   55048:	add	x0, x0, x22
   5504c:	sub	x0, x0, x20
   55050:	cmn	x1, x2
   55054:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   55058:	csel	x0, x0, x1, pl  // pl = nfrst
   5505c:	str	x0, [sp, #216]
   55060:	ldr	x0, [sp, #136]
   55064:	tbnz	w0, #12, 55260 <my_regprop@@Base+0x1af9c>
   55068:	ldr	x0, [sp, #136]
   5506c:	tbz	w0, #11, 550f0 <my_regprop@@Base+0x1ae2c>
   55070:	cbnz	x20, 5529c <my_regprop@@Base+0x1afd8>
   55074:	ldr	x0, [sp, #296]
   55078:	cbnz	x0, 552c0 <my_regprop@@Base+0x1affc>
   5507c:	mov	x0, #0x38                  	// #56
   55080:	bl	5250 <Perl_safesysmalloc@plt>
   55084:	mov	x19, x0
   55088:	str	x0, [sp, #296]
   5508c:	mov	w2, #0xa                   	// #10
   55090:	mov	x1, x0
   55094:	mov	x0, x26
   55098:	bl	54b0 <Perl_save_pushptr@plt>
   5509c:	ldr	x0, [x25, #168]
   550a0:	ldp	x2, x3, [x0]
   550a4:	stp	x2, x3, [x19]
   550a8:	ldp	x2, x3, [x0, #16]
   550ac:	stp	x2, x3, [x19, #16]
   550b0:	ldp	x2, x3, [x0, #32]
   550b4:	stp	x2, x3, [x19, #32]
   550b8:	ldr	x1, [x0, #48]
   550bc:	str	x1, [x19, #48]
   550c0:	ldr	w1, [sp, #136]
   550c4:	and	w1, w1, #0xfffff7ff
   550c8:	ldp	x2, x3, [sp, #384]
   550cc:	stp	x2, x3, [x0]
   550d0:	ldp	x2, x3, [sp, #400]
   550d4:	stp	x2, x3, [x0, #16]
   550d8:	ldp	x2, x3, [sp, #416]
   550dc:	stp	x2, x3, [x0, #32]
   550e0:	ldr	x2, [sp, #432]
   550e4:	str	x2, [x0, #48]
   550e8:	orr	w0, w1, #0x1000
   550ec:	str	w0, [sp, #136]
   550f0:	ldrb	w0, [x28, #1]
   550f4:	cmp	w0, #0x22
   550f8:	b.ne	54b84 <my_regprop@@Base+0x1a8c0>  // b.any
   550fc:	ldr	x0, [sp, #272]
   55100:	cbz	x0, 552e4 <my_regprop@@Base+0x1b020>
   55104:	ldr	x0, [sp, #272]
   55108:	ldr	w0, [x0, #12]
   5510c:	and	w1, w0, #0x3fff00
   55110:	and	w1, w1, #0xffe001ff
   55114:	cmp	w1, #0x100
   55118:	b.ne	55360 <my_regprop@@Base+0x1b09c>  // b.any
   5511c:	and	w2, w0, #0xf
   55120:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   55124:	ldr	x1, [x1, #3712]
   55128:	ldrb	w1, [x1, w2, uxtw]
   5512c:	cbz	w1, 55318 <my_regprop@@Base+0x1b054>
   55130:	and	w1, w0, #0xc000
   55134:	cmp	w1, #0x8, lsl #12
   55138:	b.ne	5514c <my_regprop@@Base+0x1ae88>  // b.any
   5513c:	and	w0, w0, #0xff
   55140:	sub	w0, w0, #0x9
   55144:	cmp	w0, #0x1
   55148:	b.ls	5533c <my_regprop@@Base+0x1b078>  // b.plast
   5514c:	ldr	x0, [sp, #272]
   55150:	ldr	x0, [x0]
   55154:	ldr	x0, [x0, #32]
   55158:	mvn	x0, x0
   5515c:	lsr	x0, x0, #63
   55160:	and	w0, w0, #0xff
   55164:	cbz	w0, 54b84 <my_regprop@@Base+0x1a8c0>
   55168:	ldr	x24, [sp, #336]
   5516c:	ldrb	w0, [x24, #1]
   55170:	cmp	w0, #0x30
   55174:	b.ne	55198 <my_regprop@@Base+0x1aed4>  // b.any
   55178:	mov	x1, x24
   5517c:	mov	x0, x26
   55180:	bl	58a0 <Perl_regnext@plt>
   55184:	mov	x1, x0
   55188:	ldrb	w0, [x0, #1]
   5518c:	cmp	w0, #0x30
   55190:	b.eq	5517c <my_regprop@@Base+0x1aeb8>  // b.none
   55194:	mov	x24, x1
   55198:	ldr	w0, [x26, #2368]
   5519c:	tbnz	w0, #20, 551a8 <my_regprop@@Base+0x1aee4>
   551a0:	ldr	x0, [sp, #344]
   551a4:	tbz	w0, #2, 55214 <my_regprop@@Base+0x1af50>
   551a8:	mov	x5, x27
   551ac:	mov	x4, #0x0                   	// #0
   551b0:	mov	x3, x24
   551b4:	ldr	x2, [x27, #368]
   551b8:	ldr	x1, [x27, #32]
   551bc:	mov	x0, x26
   551c0:	bl	5580 <my_regprop@plt>
   551c4:	ldr	w0, [sp, #744]
   551c8:	add	w20, w0, #0x1
   551cc:	ldr	x19, [x27, #96]
   551d0:	sub	x19, x24, x19
   551d4:	asr	x19, x19, #2
   551d8:	ldr	x1, [x27, #368]
   551dc:	ldr	w0, [x1, #12]
   551e0:	and	w0, w0, #0x3ffc00
   551e4:	and	w0, w0, #0xffe007ff
   551e8:	cmp	w0, #0x400
   551ec:	b.ne	55380 <my_regprop@@Base+0x1b0bc>  // b.any
   551f0:	ldr	x5, [x1, #16]
   551f4:	mov	x4, x19
   551f8:	adrp	x3, 7c000 <boot_re@@Base+0x1a41c>
   551fc:	add	x3, x3, #0x4c8
   55200:	mov	w2, w20
   55204:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55208:	add	x1, x1, #0x4f8
   5520c:	mov	x0, x26
   55210:	bl	5940 <Perl_re_indentf@plt>
   55214:	ldr	x22, [sp, #336]
   55218:	cmp	x28, x22
   5521c:	b.eq	558a4 <my_regprop@@Base+0x1b5e0>  // b.none
   55220:	mov	x22, x28
   55224:	str	wzr, [sp, #176]
   55228:	mov	w23, #0x0                   	// #0
   5522c:	mov	x1, #0x0                   	// #0
   55230:	str	xzr, [sp, #152]
   55234:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   55238:	add	x0, x0, #0x508
   5523c:	str	x0, [sp, #232]
   55240:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   55244:	add	x0, x0, #0x518
   55248:	str	x0, [sp, #264]
   5524c:	str	x28, [sp, #280]
   55250:	mov	x28, x1
   55254:	str	x24, [sp, #208]
   55258:	str	x25, [sp, #288]
   5525c:	b	5aa94 <my_regprop@@Base+0x207d0>
   55260:	add	x3, sp, #0x180
   55264:	ldr	x2, [x25, #168]
   55268:	mov	x1, x27
   5526c:	mov	x0, x26
   55270:	bl	2d628 <my_regexec@@Base+0xa134>
   55274:	cbz	x20, 550f0 <my_regprop@@Base+0x1ae2c>
   55278:	ldr	x3, [sp, #296]
   5527c:	ldr	x2, [x25, #168]
   55280:	mov	x1, x27
   55284:	mov	x0, x26
   55288:	bl	2eb68 <my_regexec@@Base+0xb674>
   5528c:	ldr	w0, [sp, #136]
   55290:	and	w0, w0, #0xffffe7ff
   55294:	str	w0, [sp, #136]
   55298:	b	550f0 <my_regprop@@Base+0x1ae2c>
   5529c:	add	x3, sp, #0x180
   552a0:	ldr	x2, [x25, #168]
   552a4:	mov	x1, x27
   552a8:	mov	x0, x26
   552ac:	bl	2eb68 <my_regexec@@Base+0xb674>
   552b0:	ldr	w0, [sp, #136]
   552b4:	and	w0, w0, #0xffffe7ff
   552b8:	str	w0, [sp, #136]
   552bc:	b	550f0 <my_regprop@@Base+0x1ae2c>
   552c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   552c4:	add	x3, x3, #0xc10
   552c8:	add	x3, x3, #0x970
   552cc:	mov	w2, #0x1259                	// #4697
   552d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   552d4:	add	x1, x1, #0xfb8
   552d8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   552dc:	add	x0, x0, #0x4b8
   552e0:	bl	58e0 <__assert_fail@plt>
   552e4:	mov	w2, #0x1                   	// #1
   552e8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   552ec:	add	x1, x1, #0xcd0
   552f0:	mov	x0, x26
   552f4:	bl	54f0 <Perl_get_sv@plt>
   552f8:	str	x0, [sp, #272]
   552fc:	ldr	w0, [x0, #12]
   55300:	tbnz	w0, #8, 55104 <my_regprop@@Base+0x1ae40>
   55304:	mov	x2, #0x10000               	// #65536
   55308:	ldr	x1, [sp, #272]
   5530c:	mov	x0, x26
   55310:	bl	5970 <Perl_sv_setiv@plt>
   55314:	b	55104 <my_regprop@@Base+0x1ae40>
   55318:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5531c:	add	x3, x3, #0xc10
   55320:	add	x3, x3, #0x970
   55324:	mov	w2, #0x1295                	// #4757
   55328:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5532c:	add	x1, x1, #0xfb8
   55330:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   55334:	add	x0, x0, #0xda0
   55338:	bl	58e0 <__assert_fail@plt>
   5533c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55340:	add	x3, x3, #0xc10
   55344:	add	x3, x3, #0x970
   55348:	mov	w2, #0x1295                	// #4757
   5534c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55350:	add	x1, x1, #0xfb8
   55354:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   55358:	add	x0, x0, #0xdd0
   5535c:	bl	58e0 <__assert_fail@plt>
   55360:	mov	w2, #0x2                   	// #2
   55364:	ldr	x1, [sp, #272]
   55368:	mov	x0, x26
   5536c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   55370:	mvn	x0, x0
   55374:	lsr	x0, x0, #63
   55378:	and	w0, w0, #0xff
   5537c:	b	55164 <my_regprop@@Base+0x1aea0>
   55380:	mov	w3, #0x22                  	// #34
   55384:	mov	x2, #0x0                   	// #0
   55388:	mov	x0, x26
   5538c:	bl	5200 <Perl_sv_2pv_flags@plt>
   55390:	mov	x5, x0
   55394:	b	551f4 <my_regprop@@Base+0x1af30>
   55398:	cmp	w19, #0x28
   5539c:	b.eq	553b8 <my_regprop@@Base+0x1b0f4>  // b.none
   553a0:	cmp	w19, #0x24
   553a4:	b.eq	553b8 <my_regprop@@Base+0x1b0f4>  // b.none
   553a8:	cmp	w19, #0x2a
   553ac:	csel	w19, w19, wzr, eq  // eq = none
   553b0:	b	553b8 <my_regprop@@Base+0x1b0f4>
   553b4:	mov	w19, #0x23                  	// #35
   553b8:	mov	x1, x21
   553bc:	mov	x0, x26
   553c0:	bl	58a0 <Perl_regnext@plt>
   553c4:	mov	x20, x0
   553c8:	cmp	x0, #0x0
   553cc:	ldr	x0, [sp, #208]
   553d0:	ccmp	x20, x0, #0x2, ne  // ne = any
   553d4:	b.cs	55440 <my_regprop@@Base+0x1b17c>  // b.hs, b.nlast
   553d8:	ldrb	w24, [x20, #1]
   553dc:	str	w24, [sp, #160]
   553e0:	cmp	w24, #0x2f
   553e4:	b.eq	55448 <my_regprop@@Base+0x1b184>  // b.none
   553e8:	cmp	w24, #0x23
   553ec:	mov	w0, #0x23                  	// #35
   553f0:	str	w0, [sp, #160]
   553f4:	mov	w0, #0x2c                  	// #44
   553f8:	ccmp	w24, w0, #0x4, ne  // ne = any
   553fc:	b.eq	55448 <my_regprop@@Base+0x1b184>  // b.none
   55400:	and	w0, w24, #0xfffffffb
   55404:	and	w0, w0, #0xff
   55408:	cmp	w0, #0x29
   5540c:	mov	w0, #0x27                  	// #39
   55410:	str	w0, [sp, #160]
   55414:	ccmp	w24, w0, #0x4, ne  // ne = any
   55418:	b.eq	55448 <my_regprop@@Base+0x1b184>  // b.none
   5541c:	str	w24, [sp, #160]
   55420:	cmp	w24, #0x28
   55424:	b.eq	55448 <my_regprop@@Base+0x1b184>  // b.none
   55428:	cmp	w24, #0x24
   5542c:	b.eq	55448 <my_regprop@@Base+0x1b184>  // b.none
   55430:	cmp	w24, #0x2a
   55434:	csel	w0, w24, wzr, eq  // eq = none
   55438:	str	w0, [sp, #160]
   5543c:	b	55448 <my_regprop@@Base+0x1b184>
   55440:	mov	w24, #0x0                   	// #0
   55444:	str	wzr, [sp, #160]
   55448:	ldr	w0, [x26, #2368]
   5544c:	tbnz	w0, #20, 55458 <my_regprop@@Base+0x1b194>
   55450:	ldr	x0, [sp, #344]
   55454:	tbz	w0, #2, 555e4 <my_regprop@@Base+0x1b320>
   55458:	mov	x5, x27
   5545c:	mov	x4, #0x0                   	// #0
   55460:	mov	x3, x22
   55464:	ldr	x2, [x27, #368]
   55468:	ldr	x1, [x27, #32]
   5546c:	mov	x0, x26
   55470:	bl	5580 <my_regprop@plt>
   55474:	ldr	w0, [sp, #744]
   55478:	add	w0, w0, #0x1
   5547c:	str	w0, [sp, #224]
   55480:	ldr	x25, [x27, #96]
   55484:	sub	x25, x22, x25
   55488:	asr	x25, x25, #2
   5548c:	ldr	x1, [x27, #368]
   55490:	ldr	w0, [x1, #12]
   55494:	mov	w2, #0x400                 	// #1024
   55498:	movk	w2, #0x20, lsl #16
   5549c:	and	w0, w0, w2
   554a0:	cmp	w0, #0x400
   554a4:	b.ne	55630 <my_regprop@@Base+0x1b36c>  // b.any
   554a8:	ldr	x4, [x1, #16]
   554ac:	ldr	x5, [x27, #96]
   554b0:	sub	x5, x22, x5
   554b4:	ubfx	x5, x5, #2, #32
   554b8:	mov	w3, w25
   554bc:	ldr	w2, [sp, #224]
   554c0:	ldr	x1, [sp, #232]
   554c4:	mov	x0, x26
   554c8:	bl	5940 <Perl_re_indentf@plt>
   554cc:	mov	x5, x27
   554d0:	mov	x4, #0x0                   	// #0
   554d4:	mov	x3, x21
   554d8:	ldr	x2, [x27, #368]
   554dc:	ldr	x1, [x27, #32]
   554e0:	mov	x0, x26
   554e4:	bl	5580 <my_regprop@plt>
   554e8:	ldr	x0, [x27, #96]
   554ec:	sub	x21, x21, x0
   554f0:	asr	x21, x21, #2
   554f4:	ldr	x1, [x27, #368]
   554f8:	ldr	w0, [x1, #12]
   554fc:	mov	w2, #0x400                 	// #1024
   55500:	movk	w2, #0x20, lsl #16
   55504:	and	w0, w0, w2
   55508:	cmp	w0, #0x400
   5550c:	b.ne	55648 <my_regprop@@Base+0x1b384>  // b.any
   55510:	ldr	x3, [x1, #16]
   55514:	mov	w2, w21
   55518:	ldr	x1, [sp, #264]
   5551c:	mov	x0, x26
   55520:	bl	50e0 <Perl_re_printf@plt>
   55524:	cbz	x20, 55584 <my_regprop@@Base+0x1b2c0>
   55528:	mov	x5, x27
   5552c:	mov	x4, #0x0                   	// #0
   55530:	mov	x3, x20
   55534:	ldr	x2, [x27, #368]
   55538:	ldr	x1, [x27, #32]
   5553c:	mov	x0, x26
   55540:	bl	5580 <my_regprop@plt>
   55544:	ldr	x0, [x27, #96]
   55548:	sub	x20, x20, x0
   5554c:	asr	x20, x20, #2
   55550:	ldr	x1, [x27, #368]
   55554:	ldr	w0, [x1, #12]
   55558:	mov	w2, #0x400                 	// #1024
   5555c:	movk	w2, #0x20, lsl #16
   55560:	and	w0, w0, w2
   55564:	cmp	w0, #0x400
   55568:	b.ne	55660 <my_regprop@@Base+0x1b39c>  // b.any
   5556c:	ldr	x3, [x1, #16]
   55570:	mov	w2, w20
   55574:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55578:	add	x1, x1, #0x528
   5557c:	mov	x0, x26
   55580:	bl	50e0 <Perl_re_printf@plt>
   55584:	mov	w2, #0xffffffff            	// #-1
   55588:	ldr	x0, [sp, #152]
   5558c:	cbz	x0, 5559c <my_regprop@@Base+0x1b2d8>
   55590:	ldr	x2, [x27, #96]
   55594:	sub	x2, x0, x2
   55598:	ubfx	x2, x2, #2, #32
   5559c:	mov	w3, #0xffffffff            	// #-1
   555a0:	cbz	x28, 555b0 <my_regprop@@Base+0x1b2ec>
   555a4:	ldr	x3, [x27, #96]
   555a8:	sub	x3, x28, x3
   555ac:	ubfx	x3, x3, #2, #32
   555b0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   555b4:	ldr	x0, [x0, #3776]
   555b8:	ldr	x4, [x27, #96]
   555bc:	sub	x4, x22, x4
   555c0:	ldr	w1, [sp, #160]
   555c4:	ldr	x7, [x0, w1, sxtw #3]
   555c8:	ldr	x6, [x0, w19, sxtw #3]
   555cc:	ldr	x5, [x0, w23, sxtw #3]
   555d0:	ubfx	x4, x4, #2, #32
   555d4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   555d8:	add	x1, x1, #0x538
   555dc:	mov	x0, x26
   555e0:	bl	50e0 <Perl_re_printf@plt>
   555e4:	cbz	w19, 5aa4c <my_regprop@@Base+0x20788>
   555e8:	cmp	w19, #0x2f
   555ec:	ccmp	w19, w23, #0x4, ne  // ne = any
   555f0:	mov	w0, #0x2f                  	// #47
   555f4:	ccmp	w23, w0, #0x4, ne  // ne = any
   555f8:	b.ne	5aad4 <my_regprop@@Base+0x20810>  // b.any
   555fc:	mov	w0, #0xfffe                	// #65534
   55600:	ldr	w1, [sp, #176]
   55604:	cmp	w1, w0
   55608:	b.hi	5aad4 <my_regprop@@Base+0x20810>  // b.pmore
   5560c:	ldr	x0, [sp, #152]
   55610:	cbz	x0, 55678 <my_regprop@@Base+0x1b3b4>
   55614:	cmp	w23, #0x2f
   55618:	csel	w23, w23, w19, ne  // ne = any
   5561c:	mov	x28, x22
   55620:	ldr	w0, [sp, #176]
   55624:	add	w0, w0, #0x1
   55628:	str	w0, [sp, #176]
   5562c:	b	5aa78 <my_regprop@@Base+0x207b4>
   55630:	mov	w3, #0x22                  	// #34
   55634:	mov	x2, #0x0                   	// #0
   55638:	mov	x0, x26
   5563c:	bl	5200 <Perl_sv_2pv_flags@plt>
   55640:	mov	x4, x0
   55644:	b	554ac <my_regprop@@Base+0x1b1e8>
   55648:	mov	w3, #0x22                  	// #34
   5564c:	mov	x2, #0x0                   	// #0
   55650:	mov	x0, x26
   55654:	bl	5200 <Perl_sv_2pv_flags@plt>
   55658:	mov	x3, x0
   5565c:	b	55514 <my_regprop@@Base+0x1b250>
   55660:	mov	w3, #0x22                  	// #34
   55664:	mov	x2, #0x0                   	// #0
   55668:	mov	x0, x26
   5566c:	bl	5200 <Perl_sv_2pv_flags@plt>
   55670:	mov	x3, x0
   55674:	b	55570 <my_regprop@@Base+0x1b2ac>
   55678:	cmp	w19, #0x2f
   5567c:	b.eq	5568c <my_regprop@@Base+0x1b3c8>  // b.none
   55680:	mov	w23, w19
   55684:	str	x22, [sp, #152]
   55688:	b	55620 <my_regprop@@Base+0x1b35c>
   5568c:	ldr	w0, [sp, #160]
   55690:	cbnz	w0, 5aa40 <my_regprop@@Base+0x2077c>
   55694:	cbnz	w24, 5aa78 <my_regprop@@Base+0x207b4>
   55698:	str	x22, [sp, #152]
   5569c:	b	55620 <my_regprop@@Base+0x1b35c>
   556a0:	ldr	w0, [sp, #744]
   556a4:	add	w0, w0, #0x1
   556a8:	str	w0, [sp]
   556ac:	mov	w7, w23
   556b0:	ldr	w6, [sp, #176]
   556b4:	ldr	x5, [sp, #208]
   556b8:	mov	x4, x22
   556bc:	ldr	x3, [sp, #152]
   556c0:	ldr	x2, [sp, #280]
   556c4:	mov	x1, x27
   556c8:	mov	x0, x26
   556cc:	bl	32be4 <Perl_re_indentf@@Base+0x9b8>
   556d0:	cbz	w19, 5aa5c <my_regprop@@Base+0x20798>
   556d4:	mov	w23, w19
   556d8:	str	x22, [sp, #152]
   556dc:	mov	w0, #0x1                   	// #1
   556e0:	str	w0, [sp, #176]
   556e4:	mov	x28, #0x0                   	// #0
   556e8:	b	5aa78 <my_regprop@@Base+0x207b4>
   556ec:	mov	x20, x28
   556f0:	ldr	x28, [sp, #280]
   556f4:	ldr	x24, [sp, #208]
   556f8:	ldr	x25, [sp, #288]
   556fc:	ldr	w0, [x26, #2368]
   55700:	tbnz	w0, #20, 5570c <my_regprop@@Base+0x1b448>
   55704:	ldr	x0, [sp, #344]
   55708:	tbz	w0, #2, 557d0 <my_regprop@@Base+0x1b50c>
   5570c:	mov	x5, x27
   55710:	mov	x4, #0x0                   	// #0
   55714:	mov	x3, x22
   55718:	ldr	x2, [x27, #368]
   5571c:	ldr	x1, [x27, #32]
   55720:	mov	x0, x26
   55724:	bl	5580 <my_regprop@plt>
   55728:	ldr	w0, [sp, #744]
   5572c:	add	w19, w0, #0x1
   55730:	ldr	x1, [x27, #368]
   55734:	ldr	w0, [x1, #12]
   55738:	and	w0, w0, #0x3ffc00
   5573c:	and	w0, w0, #0xffe007ff
   55740:	cmp	w0, #0x400
   55744:	b.ne	558b8 <my_regprop@@Base+0x1b5f4>  // b.any
   55748:	ldr	x3, [x1, #16]
   5574c:	mov	w4, #0xffffffff            	// #-1
   55750:	cbz	x22, 55760 <my_regprop@@Base+0x1b49c>
   55754:	ldr	x4, [x27, #96]
   55758:	sub	x4, x22, x4
   5575c:	ubfx	x4, x4, #2, #32
   55760:	mov	w2, w19
   55764:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55768:	add	x1, x1, #0x570
   5576c:	mov	x0, x26
   55770:	bl	5940 <Perl_re_indentf@plt>
   55774:	mov	w2, #0xffffffff            	// #-1
   55778:	ldr	x0, [sp, #152]
   5577c:	cbz	x0, 5578c <my_regprop@@Base+0x1b4c8>
   55780:	ldr	x2, [x27, #96]
   55784:	sub	x2, x0, x2
   55788:	ubfx	x2, x2, #2, #32
   5578c:	mov	w3, #0xffffffff            	// #-1
   55790:	cbz	x20, 557a0 <my_regprop@@Base+0x1b4dc>
   55794:	ldr	x3, [x27, #96]
   55798:	sub	x3, x20, x3
   5579c:	ubfx	x3, x3, #2, #32
   557a0:	mov	w4, #0xffffffff            	// #-1
   557a4:	cbz	x22, 557b4 <my_regprop@@Base+0x1b4f0>
   557a8:	ldr	x4, [x27, #96]
   557ac:	sub	x4, x22, x4
   557b0:	ubfx	x4, x4, #2, #32
   557b4:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   557b8:	ldr	x0, [x0, #3776]
   557bc:	ldr	x5, [x0, w23, sxtw #3]
   557c0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   557c4:	add	x1, x1, #0x590
   557c8:	mov	x0, x26
   557cc:	bl	50e0 <Perl_re_printf@plt>
   557d0:	cmp	x20, #0x0
   557d4:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   557d8:	b.eq	54b84 <my_regprop@@Base+0x1a8c0>  // b.none
   557dc:	cmp	w23, #0x2f
   557e0:	b.ne	558d0 <my_regprop@@Base+0x1b60c>  // b.any
   557e4:	ldr	x0, [sp, #152]
   557e8:	cmp	x28, x0
   557ec:	b.ne	54b84 <my_regprop@@Base+0x1a8c0>  // b.any
   557f0:	ldr	w0, [x26, #2368]
   557f4:	tbnz	w0, #20, 55800 <my_regprop@@Base+0x1b53c>
   557f8:	ldr	x0, [sp, #344]
   557fc:	tbz	w0, #2, 55868 <my_regprop@@Base+0x1b5a4>
   55800:	mov	x5, x27
   55804:	mov	x4, #0x0                   	// #0
   55808:	mov	x3, x22
   5580c:	ldr	x2, [x27, #368]
   55810:	ldr	x1, [x27, #32]
   55814:	mov	x0, x26
   55818:	bl	5580 <my_regprop@plt>
   5581c:	ldr	w0, [sp, #744]
   55820:	add	w19, w0, #0x1
   55824:	ldr	x1, [x27, #368]
   55828:	ldr	w0, [x1, #12]
   5582c:	and	w0, w0, #0x3ffc00
   55830:	and	w0, w0, #0xffe007ff
   55834:	cmp	w0, #0x400
   55838:	b.ne	55950 <my_regprop@@Base+0x1b68c>  // b.any
   5583c:	ldr	x3, [x1, #16]
   55840:	mov	w4, #0xffffffff            	// #-1
   55844:	cbz	x22, 55854 <my_regprop@@Base+0x1b590>
   55848:	ldr	x0, [x27, #96]
   5584c:	sub	x0, x22, x0
   55850:	ubfx	x4, x0, #2, #32
   55854:	mov	w2, w19
   55858:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5585c:	add	x1, x1, #0x5b8
   55860:	mov	x0, x26
   55864:	bl	5940 <Perl_re_indentf@plt>
   55868:	mov	w0, #0x2f                  	// #47
   5586c:	ldr	x1, [sp, #152]
   55870:	strb	w0, [x1, #1]
   55874:	sub	x0, x24, x1
   55878:	asr	x0, x0, #2
   5587c:	strh	w0, [x1, #2]
   55880:	add	x0, x1, #0x4
   55884:	cmp	x0, x24
   55888:	b.cs	54b84 <my_regprop@@Base+0x1a8c0>  // b.hs, b.nlast
   5588c:	mov	w1, #0x64                  	// #100
   55890:	strb	w1, [x0, #1]
   55894:	add	x0, x0, #0x4
   55898:	cmp	x0, x24
   5589c:	b.cc	55890 <my_regprop@@Base+0x1b5cc>  // b.lo, b.ul, b.last
   558a0:	b	54b84 <my_regprop@@Base+0x1a8c0>
   558a4:	str	wzr, [sp, #176]
   558a8:	mov	w23, #0x0                   	// #0
   558ac:	mov	x20, #0x0                   	// #0
   558b0:	str	xzr, [sp, #152]
   558b4:	b	556fc <my_regprop@@Base+0x1b438>
   558b8:	mov	w3, #0x22                  	// #34
   558bc:	mov	x2, #0x0                   	// #0
   558c0:	mov	x0, x26
   558c4:	bl	5200 <Perl_sv_2pv_flags@plt>
   558c8:	mov	x3, x0
   558cc:	b	5574c <my_regprop@@Base+0x1b488>
   558d0:	ldr	w0, [sp, #744]
   558d4:	add	w0, w0, #0x1
   558d8:	str	w0, [sp]
   558dc:	mov	w7, w23
   558e0:	ldr	w6, [sp, #176]
   558e4:	mov	x5, x24
   558e8:	ldr	x4, [sp, #336]
   558ec:	ldr	x19, [sp, #152]
   558f0:	mov	x3, x19
   558f4:	mov	x2, x28
   558f8:	mov	x1, x27
   558fc:	mov	x0, x26
   55900:	bl	32be4 <Perl_re_indentf@@Base+0x9b8>
   55904:	cmp	w0, #0x4
   55908:	ccmp	x28, x19, #0x0, eq  // eq = none
   5590c:	ldr	x1, [sp, #304]
   55910:	ccmp	x1, x19, #0x4, ne  // ne = any
   55914:	b.ne	54b84 <my_regprop@@Base+0x1a8c0>  // b.any
   55918:	ldr	w1, [sp, #744]
   5591c:	cbnz	w1, 54b84 <my_regprop@@Base+0x1a8c0>
   55920:	ldr	w1, [sp, #136]
   55924:	orr	w1, w1, #0x4000
   55928:	str	w1, [sp, #136]
   5592c:	cmp	x28, x19
   55930:	b.ne	54b84 <my_regprop@@Base+0x1a8c0>  // b.any
   55934:	ldr	x0, [sp, #336]
   55938:	cmp	x0, x24
   5593c:	b.cc	54b84 <my_regprop@@Base+0x1a8c0>  // b.lo, b.ul, b.last
   55940:	ldr	w0, [x27, #120]
   55944:	and	w0, w0, #0xffffffbf
   55948:	str	w0, [x27, #120]
   5594c:	b	54b84 <my_regprop@@Base+0x1a8c0>
   55950:	mov	w3, #0x22                  	// #34
   55954:	mov	x2, #0x0                   	// #0
   55958:	mov	x0, x26
   5595c:	bl	5200 <Perl_sv_2pv_flags@plt>
   55960:	mov	x3, x0
   55964:	b	55840 <my_regprop@@Base+0x1b57c>
   55968:	mov	x1, x24
   5596c:	mov	x0, x26
   55970:	bl	58a0 <Perl_regnext@plt>
   55974:	str	x0, [sp, #336]
   55978:	b	54b84 <my_regprop@@Base+0x1a8c0>
   5597c:	ldr	x0, [x27, #232]
   55980:	cbz	x0, 55a98 <my_regprop@@Base+0x1b7d4>
   55984:	ldr	w2, [x27, #240]
   55988:	mov	w1, #0x0                   	// #0
   5598c:	bl	51f0 <memset@plt>
   55990:	add	x21, x22, x21, lsl #2
   55994:	ldr	w4, [sp, #144]
   55998:	ldr	w3, [sp, #744]
   5599c:	mov	x2, x25
   559a0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   559a4:	add	x1, x1, #0x708
   559a8:	mov	x0, x26
   559ac:	bl	32364 <Perl_re_indentf@@Base+0x138>
   559b0:	ldr	w0, [x27, #240]
   559b4:	ldr	w1, [sp, #720]
   559b8:	mul	w0, w1, w0
   559bc:	asr	w1, w19, #3
   559c0:	add	x1, x0, w1, sxtw
   559c4:	ldr	x2, [x27, #232]
   559c8:	and	w19, w19, #0x7
   559cc:	mov	w0, #0x1                   	// #1
   559d0:	lsl	w19, w0, w19
   559d4:	ldrb	w0, [x2, x1]
   559d8:	orr	w0, w19, w0
   559dc:	strb	w0, [x2, x1]
   559e0:	cbz	x21, 54b74 <my_regprop@@Base+0x1a8b0>
   559e4:	add	x20, x22, x20, lsl #2
   559e8:	ldr	w0, [sp, #720]
   559ec:	add	w22, w0, #0x1
   559f0:	cbz	x20, 55b9c <my_regprop@@Base+0x1b8d8>
   559f4:	ldr	x0, [x27, #296]
   559f8:	cbz	x0, 55bc0 <my_regprop@@Base+0x1b8fc>
   559fc:	ldr	x19, [x0, #40]
   55a00:	cbz	x19, 55bf8 <my_regprop@@Base+0x1b934>
   55a04:	str	x19, [x27, #296]
   55a08:	ldr	x1, [sp, #336]
   55a0c:	mov	x0, x26
   55a10:	bl	58a0 <Perl_regnext@plt>
   55a14:	str	x0, [x19, #8]
   55a18:	ldr	x0, [sp, #168]
   55a1c:	str	x0, [x19]
   55a20:	ldr	w0, [sp, #188]
   55a24:	str	w0, [x19, #20]
   55a28:	ldr	w0, [sp, #720]
   55a2c:	str	w0, [x19, #16]
   55a30:	ldr	x0, [sp, #248]
   55a34:	str	x0, [x19, #24]
   55a38:	ldr	w4, [sp, #144]
   55a3c:	ldr	w3, [sp, #744]
   55a40:	mov	x2, x25
   55a44:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55a48:	add	x1, x1, #0x728
   55a4c:	mov	x0, x26
   55a50:	bl	32364 <Perl_re_indentf@@Base+0x138>
   55a54:	ldr	w5, [sp, #136]
   55a58:	ldr	w4, [sp, #744]
   55a5c:	ldr	x3, [sp, #336]
   55a60:	mov	x2, x27
   55a64:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55a68:	add	x1, x1, #0x738
   55a6c:	mov	x0, x26
   55a70:	bl	52694 <my_regprop@@Base+0x183d0>
   55a74:	str	x21, [sp, #336]
   55a78:	ldr	w0, [sp, #744]
   55a7c:	add	w0, w0, #0x1
   55a80:	str	w0, [sp, #744]
   55a84:	str	x19, [sp, #248]
   55a88:	str	w22, [sp, #720]
   55a8c:	str	w24, [sp, #188]
   55a90:	str	x20, [sp, #168]
   55a94:	b	54b84 <my_regprop@@Base+0x1a8c0>
   55a98:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55a9c:	add	x3, x3, #0xc10
   55aa0:	add	x3, x3, #0x970
   55aa4:	mov	w2, #0x13f5                	// #5109
   55aa8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55aac:	add	x1, x1, #0xfb8
   55ab0:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   55ab4:	add	x0, x0, #0x5e0
   55ab8:	bl	58e0 <__assert_fail@plt>
   55abc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55ac0:	add	x3, x3, #0xc10
   55ac4:	add	x3, x3, #0x970
   55ac8:	mov	w2, #0x13f7                	// #5111
   55acc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55ad0:	add	x1, x1, #0xfb8
   55ad4:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   55ad8:	add	x0, x0, #0x618
   55adc:	bl	58e0 <__assert_fail@plt>
   55ae0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55ae4:	add	x3, x3, #0xc10
   55ae8:	add	x3, x3, #0x970
   55aec:	mov	w2, #0x13f7                	// #5111
   55af0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55af4:	add	x1, x1, #0xfb8
   55af8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   55afc:	add	x0, x0, #0x690
   55b00:	bl	58e0 <__assert_fail@plt>
   55b04:	ldr	w4, [sp, #144]
   55b08:	ldr	w3, [sp, #744]
   55b0c:	mov	x2, x25
   55b10:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   55b14:	add	x1, x1, #0x718
   55b18:	mov	x0, x26
   55b1c:	bl	32364 <Perl_re_indentf@@Base+0x138>
   55b20:	ldr	x0, [sp, #136]
   55b24:	tbnz	w0, #10, 55b48 <my_regprop@@Base+0x1b884>
   55b28:	ldr	x0, [sp, #136]
   55b2c:	tbnz	w0, #12, 55b6c <my_regprop@@Base+0x1b8a8>
   55b30:	ldr	w0, [sp, #136]
   55b34:	and	w0, w0, #0xffffe7ff
   55b38:	str	w0, [sp, #136]
   55b3c:	str	w23, [sp, #256]
   55b40:	str	w23, [sp, #144]
   55b44:	b	54b74 <my_regprop@@Base+0x1a8b0>
   55b48:	ldr	w4, [sp, #144]
   55b4c:	ldr	x3, [sp, #200]
   55b50:	mov	x2, x25
   55b54:	mov	x1, x27
   55b58:	mov	x0, x26
   55b5c:	bl	32660 <Perl_re_indentf@@Base+0x434>
   55b60:	mov	w0, #0x1                   	// #1
   55b64:	strb	w0, [x25, #48]
   55b68:	b	55b28 <my_regprop@@Base+0x1b864>
   55b6c:	ldr	x1, [x25, #168]
   55b70:	mov	x0, x26
   55b74:	bl	26b0c <my_regexec@@Base+0x3618>
   55b78:	b	55b30 <my_regprop@@Base+0x1b86c>
   55b7c:	add	x21, x24, #0x8
   55b80:	mov	x1, x24
   55b84:	mov	x0, x26
   55b88:	bl	58a0 <Perl_regnext@plt>
   55b8c:	mov	x20, x0
   55b90:	ldr	w22, [sp, #720]
   55b94:	ldr	w24, [sp, #188]
   55b98:	b	559f0 <my_regprop@@Base+0x1b72c>
   55b9c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55ba0:	add	x3, x3, #0xc10
   55ba4:	add	x3, x3, #0x970
   55ba8:	mov	w2, #0x1415                	// #5141
   55bac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55bb0:	add	x1, x1, #0xfb8
   55bb4:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   55bb8:	add	x0, x0, #0x118
   55bbc:	bl	58e0 <__assert_fail@plt>
   55bc0:	mov	x1, #0x30                  	// #48
   55bc4:	mov	x0, #0x1                   	// #1
   55bc8:	bl	54c0 <Perl_safesyscalloc@plt>
   55bcc:	mov	x19, x0
   55bd0:	mov	x2, x0
   55bd4:	adrp	x1, 26000 <my_regexec@@Base+0x2b0c>
   55bd8:	add	x1, x1, #0xa70
   55bdc:	mov	x0, x26
   55be0:	bl	5890 <Perl_save_destructor_x@plt>
   55be4:	str	x19, [x27, #288]
   55be8:	ldr	w0, [x27, #304]
   55bec:	add	w0, w0, #0x1
   55bf0:	str	w0, [x27, #304]
   55bf4:	b	55a04 <my_regprop@@Base+0x1b740>
   55bf8:	mov	x1, #0x30                  	// #48
   55bfc:	mov	x0, #0x1                   	// #1
   55c00:	bl	54c0 <Perl_safesyscalloc@plt>
   55c04:	mov	x19, x0
   55c08:	ldr	x0, [x27, #296]
   55c0c:	str	x19, [x0, #40]
   55c10:	ldr	x0, [x27, #296]
   55c14:	str	x0, [x19, #32]
   55c18:	ldr	w0, [x27, #304]
   55c1c:	add	w0, w0, #0x1
   55c20:	str	w0, [x27, #304]
   55c24:	b	55a04 <my_regprop@@Base+0x1b740>
   55c28:	sub	w1, w0, #0x23
   55c2c:	and	w1, w1, #0xff
   55c30:	cmp	w1, #0x1
   55c34:	cset	w19, ls  // ls = plast
   55c38:	cmp	w0, #0x2c
   55c3c:	csinc	w19, w19, wzr, ne  // ne = any
   55c40:	cbz	w19, 560d4 <my_regprop@@Base+0x1be10>
   55c44:	ldrb	w20, [x24]
   55c48:	ands	x21, x20, #0xff
   55c4c:	b.eq	55cec <my_regprop@@Base+0x1ba28>  // b.none
   55c50:	ldr	w0, [x27, #192]
   55c54:	cbz	w0, 55d40 <my_regprop@@Base+0x1ba7c>
   55c58:	add	x24, x24, #0x4
   55c5c:	and	x21, x20, #0xff
   55c60:	add	x20, x24, w20, uxtb
   55c64:	mov	w1, #0x2c                  	// #44
   55c68:	mov	x0, x26
   55c6c:	bl	52a0 <Perl_ckwarn_d@plt>
   55c70:	ands	w0, w0, #0xff
   55c74:	mov	w0, #0x9e                  	// #158
   55c78:	csel	w3, w0, wzr, eq  // eq = none
   55c7c:	cmp	x20, x24
   55c80:	b.ls	55d20 <my_regprop@@Base+0x1ba5c>  // b.plast
   55c84:	mov	x6, x24
   55c88:	mov	x19, #0x0                   	// #0
   55c8c:	mov	x0, #0x0                   	// #0
   55c90:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   55c94:	ldr	x8, [x1, #3824]
   55c98:	mov	w7, #0xff                  	// #255
   55c9c:	mov	x5, x8
   55ca0:	ldrb	w4, [x6]
   55ca4:	ldrb	w1, [x8, w4, sxtw]
   55ca8:	and	x2, x1, #0xff
   55cac:	asr	w1, w7, w1
   55cb0:	and	w1, w1, w4
   55cb4:	sxtw	x1, w1
   55cb8:	bfi	x4, x19, #6, #58
   55cbc:	cmp	x0, #0x0
   55cc0:	csel	x19, x4, x1, ne  // ne = any
   55cc4:	add	x1, x5, x2
   55cc8:	add	x0, x1, x0
   55ccc:	ldrb	w0, [x0, #256]
   55cd0:	cbnz	x0, 55d10 <my_regprop@@Base+0x1ba4c>
   55cd4:	mov	x2, x20
   55cd8:	mov	x1, x24
   55cdc:	mov	x0, x26
   55ce0:	bl	5720 <Perl_utf8_length@plt>
   55ce4:	mov	x21, x0
   55ce8:	b	55d44 <my_regprop@@Base+0x1ba80>
   55cec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55cf0:	add	x3, x3, #0xc10
   55cf4:	add	x3, x3, #0x970
   55cf8:	mov	w2, #0x143e                	// #5182
   55cfc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55d00:	add	x1, x1, #0xfb8
   55d04:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   55d08:	add	x0, x0, #0x118
   55d0c:	bl	58e0 <__assert_fail@plt>
   55d10:	add	x6, x6, #0x1
   55d14:	cmp	x20, x6
   55d18:	ccmp	x0, #0x1, #0x4, hi  // hi = pmore
   55d1c:	b.ne	55ca0 <my_regprop@@Base+0x1b9dc>  // b.any
   55d20:	mov	x5, #0x0                   	// #0
   55d24:	mov	x4, #0x0                   	// #0
   55d28:	mov	x2, #0x0                   	// #0
   55d2c:	mov	x1, x21
   55d30:	mov	x0, x24
   55d34:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   55d38:	mov	x19, x0
   55d3c:	b	55cd4 <my_regprop@@Base+0x1ba10>
   55d40:	ldrb	w19, [x24, #4]
   55d44:	ldr	x0, [sp, #192]
   55d48:	add	x0, x0, x21
   55d4c:	str	x0, [sp, #192]
   55d50:	ldr	x0, [sp, #136]
   55d54:	tbz	w0, #10, 55dc4 <my_regprop@@Base+0x1bb00>
   55d58:	ldr	x0, [x25, #24]
   55d5c:	cmn	x0, #0x1
   55d60:	b.eq	55de4 <my_regprop@@Base+0x1bb20>  // b.none
   55d64:	ldr	x2, [sp, #336]
   55d68:	mov	w4, #0x2                   	// #2
   55d6c:	ldrb	w3, [x2], #4
   55d70:	ldr	x1, [x25, #16]
   55d74:	mov	x0, x26
   55d78:	bl	4f60 <Perl_sv_catpvn_flags@plt>
   55d7c:	ldr	w0, [x27, #192]
   55d80:	cbz	w0, 55d94 <my_regprop@@Base+0x1bad0>
   55d84:	ldr	x1, [x25, #16]
   55d88:	ldr	w0, [x1, #12]
   55d8c:	orr	w0, w0, #0x20000000
   55d90:	str	w0, [x1, #12]
   55d94:	ldr	x0, [x25, #16]
   55d98:	ldr	w1, [x0, #12]
   55d9c:	tbz	w1, #29, 55da8 <my_regprop@@Base+0x1bae4>
   55da0:	tst	w1, #0xe00000
   55da4:	b.ne	55e08 <my_regprop@@Base+0x1bb44>  // b.any
   55da8:	ldr	x0, [x25]
   55dac:	add	x21, x21, x0
   55db0:	str	x21, [x25, #24]
   55db4:	str	x21, [x25]
   55db8:	ldr	w0, [x25, #152]
   55dbc:	and	w0, w0, #0xfffffffc
   55dc0:	str	w0, [x25, #152]
   55dc4:	ldr	x0, [sp, #136]
   55dc8:	tbnz	w0, #11, 55e44 <my_regprop@@Base+0x1bb80>
   55dcc:	ldr	x0, [sp, #136]
   55dd0:	tbnz	w0, #12, 56020 <my_regprop@@Base+0x1bd5c>
   55dd4:	ldr	w0, [sp, #136]
   55dd8:	and	w0, w0, #0xffffe7ff
   55ddc:	str	w0, [sp, #136]
   55de0:	b	54b74 <my_regprop@@Base+0x1a8b0>
   55de4:	ldr	x1, [x25]
   55de8:	str	x1, [x25, #32]
   55dec:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   55df0:	ldr	w2, [sp, #144]
   55df4:	cbnz	w2, 55e00 <my_regprop@@Base+0x1bb3c>
   55df8:	ldr	x0, [x25, #8]
   55dfc:	add	x0, x1, x0
   55e00:	str	x0, [x25, #40]
   55e04:	b	55d64 <my_regprop@@Base+0x1baa0>
   55e08:	mov	w1, #0x77                  	// #119
   55e0c:	bl	57d0 <Perl_mg_find@plt>
   55e10:	mov	x20, x0
   55e14:	cbz	x0, 55da8 <my_regprop@@Base+0x1bae4>
   55e18:	ldr	x0, [x0, #24]
   55e1c:	tbnz	x0, #63, 55da8 <my_regprop@@Base+0x1bae4>
   55e20:	ldr	x1, [sp, #336]
   55e24:	ldrb	w2, [x1], #4
   55e28:	add	x2, x1, x2
   55e2c:	mov	x0, x26
   55e30:	bl	5720 <Perl_utf8_length@plt>
   55e34:	ldr	x1, [x20, #24]
   55e38:	add	x1, x1, x0
   55e3c:	str	x1, [x20, #24]
   55e40:	b	55da8 <my_regprop@@Base+0x1bae4>
   55e44:	ldr	x20, [x25, #168]
   55e48:	mov	x1, #0x2                   	// #2
   55e4c:	mov	x0, x26
   55e50:	bl	5090 <Perl__new_invlist@plt>
   55e54:	mov	x1, x0
   55e58:	cbz	x20, 55f38 <my_regprop@@Base+0x1bc74>
   55e5c:	ldrb	w2, [x20, #1]
   55e60:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   55e64:	ldr	x0, [x0, #3768]
   55e68:	ldrb	w0, [x0, w2, sxtw]
   55e6c:	cmp	w0, #0x12
   55e70:	b.ne	55f5c <my_regprop@@Base+0x1bc98>  // b.any
   55e74:	ldrh	w0, [x20, #2]
   55e78:	cmp	w0, #0x1
   55e7c:	b.ne	55f5c <my_regprop@@Base+0x1bc98>  // b.any
   55e80:	mov	x3, x19
   55e84:	mov	x2, x19
   55e88:	mov	x0, x26
   55e8c:	bl	5450 <Perl__add_range_to_invlist@plt>
   55e90:	mov	x19, x0
   55e94:	cbz	x0, 55f80 <my_regprop@@Base+0x1bcbc>
   55e98:	ldrb	w1, [x20, #1]
   55e9c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   55ea0:	ldr	x0, [x0, #3768]
   55ea4:	ldrb	w0, [x0, w1, sxtw]
   55ea8:	cmp	w0, #0x12
   55eac:	b.ne	55fa4 <my_regprop@@Base+0x1bce0>  // b.any
   55eb0:	ldrh	w0, [x20, #2]
   55eb4:	cmp	w0, #0x1
   55eb8:	b.ne	55fa4 <my_regprop@@Base+0x1bce0>  // b.any
   55ebc:	add	x4, x20, #0x30
   55ec0:	mov	w3, #0x0                   	// #0
   55ec4:	mov	x2, x19
   55ec8:	ldr	x1, [x20, #48]
   55ecc:	mov	x0, x26
   55ed0:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   55ed4:	ldr	w2, [x19, #8]
   55ed8:	cmp	w2, #0x1
   55edc:	b.ls	55fc8 <my_regprop@@Base+0x1bd04>  // b.plast
   55ee0:	sub	w2, w2, #0x1
   55ee4:	str	w2, [x19, #8]
   55ee8:	ldr	x1, [x25, #168]
   55eec:	ldrb	w0, [x1]
   55ef0:	and	w0, w0, #0xfffffffe
   55ef4:	strb	w0, [x1]
   55ef8:	ldr	x0, [x25, #168]
   55efc:	cbz	x0, 55fd8 <my_regprop@@Base+0x1bd14>
   55f00:	ldrb	w2, [x0, #1]
   55f04:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   55f08:	ldr	x1, [x1, #3768]
   55f0c:	ldrb	w1, [x1, w2, sxtw]
   55f10:	cmp	w1, #0x12
   55f14:	b.ne	55ffc <my_regprop@@Base+0x1bd38>  // b.any
   55f18:	ldrh	w1, [x0, #2]
   55f1c:	cmp	w1, #0x1
   55f20:	b.ne	55ffc <my_regprop@@Base+0x1bd38>  // b.any
   55f24:	str	wzr, [x0, #40]
   55f28:	ldrb	w1, [x0]
   55f2c:	and	w1, w1, #0xfffffff9
   55f30:	strb	w1, [x0]
   55f34:	b	55dd4 <my_regprop@@Base+0x1bb10>
   55f38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55f3c:	add	x3, x3, #0xc10
   55f40:	add	x3, x3, #0x990
   55f44:	mov	w2, #0x7e0                 	// #2016
   55f48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55f4c:	add	x1, x1, #0xfb8
   55f50:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   55f54:	add	x0, x0, #0xb8
   55f58:	bl	58e0 <__assert_fail@plt>
   55f5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55f60:	add	x3, x3, #0xc10
   55f64:	add	x3, x3, #0x990
   55f68:	mov	w2, #0x7e2                 	// #2018
   55f6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55f70:	add	x1, x1, #0xfb8
   55f74:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   55f78:	add	x0, x0, #0xc0
   55f7c:	bl	58e0 <__assert_fail@plt>
   55f80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55f84:	add	x3, x3, #0xc10
   55f88:	add	x3, x3, #0x498
   55f8c:	mov	w2, #0x7c5                 	// #1989
   55f90:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55f94:	add	x1, x1, #0xfb8
   55f98:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   55f9c:	add	x0, x0, #0x568
   55fa0:	bl	58e0 <__assert_fail@plt>
   55fa4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55fa8:	add	x3, x3, #0xc10
   55fac:	add	x3, x3, #0x498
   55fb0:	mov	w2, #0x7c7                 	// #1991
   55fb4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55fb8:	add	x1, x1, #0xfb8
   55fbc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   55fc0:	add	x0, x0, #0xc0
   55fc4:	bl	58e0 <__assert_fail@plt>
   55fc8:	mov	x1, x19
   55fcc:	mov	x0, x26
   55fd0:	bl	5860 <Perl_sv_free2@plt>
   55fd4:	b	55ee8 <my_regprop@@Base+0x1bc24>
   55fd8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   55fdc:	add	x3, x3, #0xc10
   55fe0:	add	x3, x3, #0x9a0
   55fe4:	mov	w2, #0x7ef                 	// #2031
   55fe8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   55fec:	add	x1, x1, #0xfb8
   55ff0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   55ff4:	add	x0, x0, #0xb8
   55ff8:	bl	58e0 <__assert_fail@plt>
   55ffc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   56000:	add	x3, x3, #0xc10
   56004:	add	x3, x3, #0x9a0
   56008:	mov	w2, #0x7f1                 	// #2033
   5600c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   56010:	add	x1, x1, #0xfb8
   56014:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   56018:	add	x0, x0, #0xc0
   5601c:	bl	58e0 <__assert_fail@plt>
   56020:	ldr	x20, [x25, #168]
   56024:	cbz	x20, 5608c <my_regprop@@Base+0x1bdc8>
   56028:	ldrb	w1, [x20, #1]
   5602c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   56030:	ldr	x0, [x0, #3768]
   56034:	ldrb	w0, [x0, w1, sxtw]
   56038:	cmp	w0, #0x12
   5603c:	b.ne	560b0 <my_regprop@@Base+0x1bdec>  // b.any
   56040:	ldrh	w0, [x20, #2]
   56044:	cmp	w0, #0x1
   56048:	b.ne	560b0 <my_regprop@@Base+0x1bdec>  // b.any
   5604c:	mov	x3, x19
   56050:	mov	x2, x19
   56054:	ldr	x1, [x20, #48]
   56058:	mov	x0, x26
   5605c:	bl	5450 <Perl__add_range_to_invlist@plt>
   56060:	str	x0, [x20, #48]
   56064:	ldr	x3, [sp, #296]
   56068:	ldr	x2, [x25, #168]
   5606c:	mov	x1, x27
   56070:	mov	x0, x26
   56074:	bl	2eb68 <my_regexec@@Base+0xb674>
   56078:	ldr	x1, [x25, #168]
   5607c:	ldrb	w0, [x1]
   56080:	and	w0, w0, #0xfffffffe
   56084:	strb	w0, [x1]
   56088:	b	55dd4 <my_regprop@@Base+0x1bb10>
   5608c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   56090:	add	x3, x3, #0xc10
   56094:	add	x3, x3, #0x360
   56098:	mov	w2, #0x7d2                 	// #2002
   5609c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   560a0:	add	x1, x1, #0xfb8
   560a4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   560a8:	add	x0, x0, #0xb8
   560ac:	bl	58e0 <__assert_fail@plt>
   560b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   560b4:	add	x3, x3, #0xc10
   560b8:	add	x3, x3, #0x360
   560bc:	mov	w2, #0x7d4                 	// #2004
   560c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   560c4:	add	x1, x1, #0xfb8
   560c8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   560cc:	add	x0, x0, #0xc0
   560d0:	bl	58e0 <__assert_fail@plt>
   560d4:	mov	w2, w0
   560d8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   560dc:	ldr	x1, [x1, #3768]
   560e0:	ldrb	w1, [x1, w0, sxtw]
   560e4:	cmp	w1, #0x23
   560e8:	b.eq	561d4 <my_regprop@@Base+0x1bf10>  // b.none
   560ec:	lsr	w5, w0, #3
   560f0:	and	w4, w0, #0x7
   560f4:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   560f8:	ldr	x3, [x3, #3856]
   560fc:	ldrb	w3, [x3, w5, sxtw]
   56100:	asr	w3, w3, w4
   56104:	and	w20, w3, #0x1
   56108:	tbz	w3, #0, 58f64 <my_regprop@@Base+0x1eca0>
   5610c:	cmp	w1, #0x33
   56110:	b.eq	57ca0 <my_regprop@@Base+0x1d9dc>  // b.none
   56114:	b.hi	57b4c <my_regprop@@Base+0x1d888>  // b.pmore
   56118:	cmp	w1, #0x31
   5611c:	b.eq	56174 <my_regprop@@Base+0x1beb0>  // b.none
   56120:	cmp	w1, #0x32
   56124:	b.ne	57b34 <my_regprop@@Base+0x1d870>  // b.any
   56128:	ldr	w2, [sp, #136]
   5612c:	tst	w2, #0x1c00
   56130:	b.eq	56154 <my_regprop@@Base+0x1be90>  // b.none
   56134:	ldrb	w1, [x24, #5]
   56138:	sub	w0, w1, #0x23
   5613c:	and	w0, w0, #0xff
   56140:	cmp	w1, #0x2c
   56144:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   56148:	b.ls	57bb0 <my_regprop@@Base+0x1d8ec>  // b.plast
   5614c:	tst	w2, #0x1800
   56150:	b.ne	57bb0 <my_regprop@@Base+0x1d8ec>  // b.any
   56154:	ldr	x0, [sp, #136]
   56158:	tbz	w0, #10, 56168 <my_regprop@@Base+0x1bea4>
   5615c:	ldr	x0, [x25]
   56160:	add	x0, x0, #0x1
   56164:	str	x0, [x25]
   56168:	ldr	x0, [sp, #192]
   5616c:	add	x0, x0, #0x1
   56170:	str	x0, [sp, #192]
   56174:	ldrb	w0, [x24, #5]
   56178:	cmp	w0, #0x2e
   5617c:	b.eq	57be4 <my_regprop@@Base+0x1d920>  // b.none
   56180:	ldrb	w0, [x24, #4]
   56184:	cmp	w0, #0x1
   56188:	b.eq	57bf0 <my_regprop@@Base+0x1d92c>  // b.none
   5618c:	ldr	w19, [sp, #136]
   56190:	tst	w19, #0x1800
   56194:	b.eq	57c44 <my_regprop@@Base+0x1d980>  // b.none
   56198:	ldr	x1, [sp, #336]
   5619c:	mov	x0, x26
   561a0:	bl	58a0 <Perl_regnext@plt>
   561a4:	str	x0, [sp, #208]
   561a8:	ldr	x0, [sp, #336]
   561ac:	add	x0, x0, #0x4
   561b0:	str	x0, [sp, #336]
   561b4:	tbnz	w19, #10, 57ea4 <my_regprop@@Base+0x1dbe0>
   561b8:	str	wzr, [sp, #152]
   561bc:	mov	x22, #0xffff                	// #65535
   561c0:	mov	x21, #0x0                   	// #0
   561c4:	str	xzr, [sp, #160]
   561c8:	str	wzr, [sp, #176]
   561cc:	cbz	x25, 57d34 <my_regprop@@Base+0x1da70>
   561d0:	b	57d14 <my_regprop@@Base+0x1da50>
   561d4:	ldrb	w19, [x24]
   561d8:	ldr	w0, [sp, #136]
   561dc:	and	w20, w0, #0x400
   561e0:	tbz	w0, #10, 56200 <my_regprop@@Base+0x1bf3c>
   561e4:	cbz	x25, 56344 <my_regprop@@Base+0x1c080>
   561e8:	ldr	w4, [sp, #144]
   561ec:	ldr	x3, [sp, #200]
   561f0:	mov	x2, x25
   561f4:	mov	x1, x27
   561f8:	mov	x0, x26
   561fc:	bl	32660 <Perl_re_indentf@@Base+0x434>
   56200:	ldr	w0, [x27, #192]
   56204:	cbnz	w0, 56368 <my_regprop@@Base+0x1c0a4>
   56208:	and	x0, x19, #0xff
   5620c:	cbz	w23, 5621c <my_regprop@@Base+0x1bf58>
   56210:	ldr	w1, [x27, #120]
   56214:	orr	w1, w1, #0x400
   56218:	str	w1, [x27, #120]
   5621c:	sub	x0, x0, x21
   56220:	ldr	x1, [sp, #192]
   56224:	adds	x1, x1, x0
   56228:	str	x1, [sp, #192]
   5622c:	b.mi	5637c <my_regprop@@Base+0x1c0b8>  // b.first
   56230:	ldr	x1, [sp, #216]
   56234:	add	x1, x1, x21
   56238:	str	x1, [sp, #216]
   5623c:	cbz	w20, 56268 <my_regprop@@Base+0x1bfa4>
   56240:	ldr	x1, [x25]
   56244:	adds	x0, x0, x1
   56248:	csel	x0, x0, xzr, pl  // pl = nfrst
   5624c:	str	x0, [x25]
   56250:	ldr	x0, [x25, #8]
   56254:	add	x0, x0, x21
   56258:	str	x0, [x25, #8]
   5625c:	cbz	x21, 56268 <my_regprop@@Base+0x1bfa4>
   56260:	mov	w0, #0x1                   	// #1
   56264:	strb	w0, [x25, #48]
   56268:	ldr	w0, [sp, #136]
   5626c:	tst	w0, #0x1800
   56270:	b.eq	54b74 <my_regprop@@Base+0x1a8b0>  // b.none
   56274:	ldr	x22, [sp, #336]
   56278:	ldrb	w21, [x22]
   5627c:	and	x20, x21, #0xff
   56280:	mov	x1, #0x4                   	// #4
   56284:	mov	x0, x26
   56288:	bl	5090 <Perl__new_invlist@plt>
   5628c:	mov	x1, x0
   56290:	str	x0, [sp, #368]
   56294:	ldr	w0, [x27, #192]
   56298:	cbnz	w0, 564e8 <my_regprop@@Base+0x1c224>
   5629c:	ldrb	w19, [x22, #4]
   562a0:	cmp	x20, #0x2
   562a4:	b.le	563f0 <my_regprop@@Base+0x1c12c>
   562a8:	and	w2, w19, #0xffffffdf
   562ac:	and	w2, w2, #0xff
   562b0:	cmp	w2, #0x46
   562b4:	b.eq	563a0 <my_regprop@@Base+0x1c0dc>  // b.none
   562b8:	cmp	w2, #0x53
   562bc:	b.eq	563cc <my_regprop@@Base+0x1c108>  // b.none
   562c0:	and	w0, w0, #0x1
   562c4:	cbnz	w0, 56460 <my_regprop@@Base+0x1c19c>
   562c8:	and	x20, x19, #0xff
   562cc:	ldrb	w0, [x22, #1]
   562d0:	cmp	w0, #0x26
   562d4:	b.eq	56478 <my_regprop@@Base+0x1c1b4>  // b.none
   562d8:	mov	x3, x20
   562dc:	mov	x2, x20
   562e0:	mov	x0, x26
   562e4:	bl	5450 <Perl__add_range_to_invlist@plt>
   562e8:	mov	x1, x0
   562ec:	str	x0, [sp, #368]
   562f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   562f4:	ldr	x0, [x0, #3880]
   562f8:	ldr	w0, [x0, w19, sxtw #2]
   562fc:	tbnz	w0, #22, 564c8 <my_regprop@@Base+0x1c204>
   56300:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   56304:	ldr	x0, [x0, #3880]
   56308:	ldr	w0, [x0, w19, sxtw #2]
   5630c:	tbz	w0, #19, 57854 <my_regprop@@Base+0x1d590>
   56310:	cmp	x20, #0x7f
   56314:	b.hi	5632c <my_regprop@@Base+0x1c068>  // b.pmore
   56318:	ldrb	w0, [x22, #1]
   5631c:	cmp	w0, #0x28
   56320:	mov	w1, #0x2b                  	// #43
   56324:	ccmp	w0, w1, #0x4, ne  // ne = any
   56328:	b.eq	57854 <my_regprop@@Base+0x1d590>  // b.none
   5632c:	add	x3, sp, #0x170
   56330:	mov	w2, w19
   56334:	mov	x1, x27
   56338:	mov	x0, x26
   5633c:	bl	29390 <my_regexec@@Base+0x5e9c>
   56340:	b	57854 <my_regprop@@Base+0x1d590>
   56344:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   56348:	add	x3, x3, #0xc10
   5634c:	add	x3, x3, #0x970
   56350:	mov	w2, #0x1476                	// #5238
   56354:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   56358:	add	x1, x1, #0xfb8
   5635c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   56360:	add	x0, x0, #0x740
   56364:	bl	58e0 <__assert_fail@plt>
   56368:	add	x1, x24, #0x4
   5636c:	add	x2, x1, w19, uxtb
   56370:	mov	x0, x26
   56374:	bl	5720 <Perl_utf8_length@plt>
   56378:	b	5620c <my_regprop@@Base+0x1bf48>
   5637c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   56380:	add	x3, x3, #0xc10
   56384:	add	x3, x3, #0x970
   56388:	mov	w2, #0x1480                	// #5248
   5638c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   56390:	add	x1, x1, #0xfb8
   56394:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   56398:	add	x0, x0, #0x748
   5639c:	bl	58e0 <__assert_fail@plt>
   563a0:	ldrb	w2, [x22, #5]
   563a4:	and	w2, w2, #0xffffffdf
   563a8:	and	w2, w2, #0xff
   563ac:	mov	w0, #0x1                   	// #1
   563b0:	cmp	w2, #0x46
   563b4:	b.eq	562c4 <my_regprop@@Base+0x1c000>  // b.none
   563b8:	cmp	w2, #0x49
   563bc:	mov	w0, #0x4c                  	// #76
   563c0:	ccmp	w2, w0, #0x4, ne  // ne = any
   563c4:	cset	w0, eq  // eq = none
   563c8:	b	562c4 <my_regprop@@Base+0x1c000>
   563cc:	ldrb	w2, [x22, #5]
   563d0:	sub	w3, w2, #0x53
   563d4:	mov	w0, #0x1                   	// #1
   563d8:	cmp	w3, w0
   563dc:	b.ls	562c0 <my_regprop@@Base+0x1bffc>  // b.plast
   563e0:	sub	w2, w2, #0x73
   563e4:	cmp	w2, w0
   563e8:	cset	w0, ls  // ls = plast
   563ec:	b	562c0 <my_regprop@@Base+0x1bffc>
   563f0:	b.ne	562c8 <my_regprop@@Base+0x1c004>  // b.any
   563f4:	and	w2, w19, #0xffffffdf
   563f8:	and	w2, w2, #0xff
   563fc:	cmp	w2, #0x46
   56400:	b.eq	56414 <my_regprop@@Base+0x1c150>  // b.none
   56404:	cmp	w2, #0x53
   56408:	b.eq	5643c <my_regprop@@Base+0x1c178>  // b.none
   5640c:	and	w0, w0, #0x1
   56410:	b	562c4 <my_regprop@@Base+0x1c000>
   56414:	ldrb	w2, [x22, #5]
   56418:	and	w2, w2, #0xffffffdf
   5641c:	and	w2, w2, #0xff
   56420:	cmp	w2, #0x46
   56424:	mov	w0, #0x49                  	// #73
   56428:	ccmp	w2, w0, #0x4, ne  // ne = any
   5642c:	cset	w0, eq  // eq = none
   56430:	cmp	w2, #0x4c
   56434:	csinc	w0, w0, wzr, ne  // ne = any
   56438:	b	562c4 <my_regprop@@Base+0x1c000>
   5643c:	ldrb	w2, [x22, #5]
   56440:	sub	w3, w2, #0x53
   56444:	mov	w0, #0x1                   	// #1
   56448:	cmp	w3, w0
   5644c:	b.ls	5640c <my_regprop@@Base+0x1c148>  // b.plast
   56450:	sub	w2, w2, #0x73
   56454:	cmp	w2, w0
   56458:	cset	w0, ls  // ls = plast
   5645c:	b	5640c <my_regprop@@Base+0x1c148>
   56460:	mov	x3, #0xffffffffffffffff    	// #-1
   56464:	mov	x2, #0x0                   	// #0
   56468:	mov	x0, x26
   5646c:	bl	5450 <Perl__add_range_to_invlist@plt>
   56470:	str	x0, [sp, #368]
   56474:	b	57854 <my_regprop@@Base+0x1d590>
   56478:	add	x4, sp, #0x170
   5647c:	mov	w3, #0x0                   	// #0
   56480:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   56484:	ldr	x0, [x0, #3872]
   56488:	ldr	x2, [x0]
   5648c:	mov	x0, x26
   56490:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   56494:	mov	x3, #0x131                 	// #305
   56498:	mov	x2, x3
   5649c:	ldr	x1, [sp, #368]
   564a0:	mov	x0, x26
   564a4:	bl	5450 <Perl__add_range_to_invlist@plt>
   564a8:	mov	x1, x0
   564ac:	str	x0, [sp, #368]
   564b0:	mov	x3, #0x130                 	// #304
   564b4:	mov	x2, x3
   564b8:	mov	x0, x26
   564bc:	bl	5450 <Perl__add_range_to_invlist@plt>
   564c0:	str	x0, [sp, #368]
   564c4:	b	56300 <my_regprop@@Base+0x1c03c>
   564c8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   564cc:	ldr	x0, [x0, #3752]
   564d0:	ldrb	w2, [x0, x20]
   564d4:	mov	x3, x2
   564d8:	mov	x0, x26
   564dc:	bl	5450 <Perl__add_range_to_invlist@plt>
   564e0:	str	x0, [sp, #368]
   564e4:	b	56300 <my_regprop@@Base+0x1c03c>
   564e8:	add	x19, x22, #0x4
   564ec:	add	x0, sp, #0x200
   564f0:	stp	xzr, xzr, [x0, #160]
   564f4:	stp	xzr, xzr, [x0, #176]
   564f8:	str	xzr, [sp, #704]
   564fc:	and	x23, x21, #0xff
   56500:	add	x21, x19, w21, uxtb
   56504:	cbz	x20, 56600 <my_regprop@@Base+0x1c33c>
   56508:	mov	w1, #0x2c                  	// #44
   5650c:	mov	x0, x26
   56510:	bl	52a0 <Perl_ckwarn_d@plt>
   56514:	ands	w0, w0, #0xff
   56518:	mov	w3, #0x9e                  	// #158
   5651c:	csel	w3, w3, wzr, eq  // eq = none
   56520:	cmp	x19, x21
   56524:	b.cs	56634 <my_regprop@@Base+0x1c370>  // b.hs, b.nlast
   56528:	mov	x7, x19
   5652c:	mov	x0, #0x0                   	// #0
   56530:	mov	x1, #0x0                   	// #0
   56534:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   56538:	ldr	x9, [x2, #3824]
   5653c:	mov	w8, #0xff                  	// #255
   56540:	mov	x6, x9
   56544:	ldrb	w5, [x7]
   56548:	ldrb	w2, [x9, w5, sxtw]
   5654c:	and	x4, x2, #0xff
   56550:	asr	w2, w8, w2
   56554:	and	w2, w2, w5
   56558:	sxtw	x2, w2
   5655c:	bfi	x5, x0, #6, #58
   56560:	cmp	x1, #0x0
   56564:	csel	x0, x5, x2, ne  // ne = any
   56568:	add	x2, x6, x4
   5656c:	add	x1, x2, x1
   56570:	ldrb	w1, [x1, #256]
   56574:	cbnz	x1, 56624 <my_regprop@@Base+0x1c360>
   56578:	mov	x20, x0
   5657c:	ldrb	w1, [x22, #1]
   56580:	cmp	w1, #0x26
   56584:	b.eq	56650 <my_regprop@@Base+0x1c38c>  // b.none
   56588:	sub	x21, x21, x19
   5658c:	cmp	x21, #0x5
   56590:	b.le	56d1c <my_regprop@@Base+0x1ca58>
   56594:	ldrb	w0, [x19]
   56598:	cmp	w0, #0x61
   5659c:	b.eq	567f0 <my_regprop@@Base+0x1c52c>  // b.none
   565a0:	cmp	w0, #0x66
   565a4:	b.eq	56858 <my_regprop@@Base+0x1c594>  // b.none
   565a8:	cmp	w0, #0x68
   565ac:	b.eq	5687c <my_regprop@@Base+0x1c5b8>  // b.none
   565b0:	cmp	w0, #0x69
   565b4:	b.eq	5689c <my_regprop@@Base+0x1c5d8>  // b.none
   565b8:	cmp	w0, #0x6a
   565bc:	b.eq	568bc <my_regprop@@Base+0x1c5f8>  // b.none
   565c0:	cmp	w0, #0x73
   565c4:	b.eq	568dc <my_regprop@@Base+0x1c618>  // b.none
   565c8:	cmp	w0, #0x74
   565cc:	b.eq	568f0 <my_regprop@@Base+0x1c62c>  // b.none
   565d0:	sub	w1, w0, #0x77
   565d4:	and	w1, w1, #0xfffffffd
   565d8:	tst	w1, #0xff
   565dc:	b.ne	56910 <my_regprop@@Base+0x1c64c>  // b.any
   565e0:	ldrb	w1, [x19, #1]
   565e4:	mov	w0, #0x0                   	// #0
   565e8:	cmp	w1, #0xcc
   565ec:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   565f0:	ldrb	w0, [x19, #2]
   565f4:	cmp	w0, #0x8a
   565f8:	cset	w0, eq  // eq = none
   565fc:	b	56800 <my_regprop@@Base+0x1c53c>
   56600:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   56604:	add	x3, x3, #0xc10
   56608:	add	x3, x3, #0x9b8
   5660c:	mov	w2, #0x2981                	// #10625
   56610:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   56614:	add	x1, x1, #0xfb8
   56618:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5661c:	add	x0, x0, #0x758
   56620:	bl	58e0 <__assert_fail@plt>
   56624:	add	x7, x7, #0x1
   56628:	cmp	x1, #0x1
   5662c:	ccmp	x21, x7, #0x0, ne  // ne = any
   56630:	b.hi	56544 <my_regprop@@Base+0x1c280>  // b.pmore
   56634:	mov	x5, #0x0                   	// #0
   56638:	mov	x4, #0x0                   	// #0
   5663c:	mov	x2, #0x0                   	// #0
   56640:	mov	x1, x23
   56644:	mov	x0, x19
   56648:	bl	4ee0 <Perl__utf8n_to_uvchr_msgs_helper@plt>
   5664c:	b	56578 <my_regprop@@Base+0x1c2b4>
   56650:	cmp	x0, #0xff
   56654:	mov	x1, #0x130                 	// #304
   56658:	ccmp	x0, x1, #0x4, hi  // hi = pmore
   5665c:	b.ne	56698 <my_regprop@@Base+0x1c3d4>  // b.any
   56660:	mov	x20, #0xffffffffffffffff    	// #-1
   56664:	cmp	x19, x21
   56668:	b.cs	56804 <my_regprop@@Base+0x1c540>  // b.hs, b.nlast
   5666c:	mov	w24, #0x0                   	// #0
   56670:	mov	x20, #0xffffffffffffffff    	// #-1
   56674:	add	x23, sp, #0x2a0
   56678:	adrp	x28, 7d000 <boot_re@@Base+0x1b41c>
   5667c:	add	x28, x28, #0x20
   56680:	add	x0, sp, #0x178
   56684:	str	x0, [sp, #152]
   56688:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5668c:	ldr	x0, [x0, #4064]
   56690:	str	x0, [sp, #160]
   56694:	b	567ac <my_regprop@@Base+0x1c4e8>
   56698:	cmp	x0, x1
   5669c:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566a0:	cmp	x0, #0x131
   566a4:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566a8:	cmp	x0, #0x149
   566ac:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566b0:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566b4:	cmp	x0, #0x178
   566b8:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566bc:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566c0:	cmp	x0, #0x17f
   566c4:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566c8:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566cc:	cmp	x0, #0x1f0
   566d0:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566d4:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566d8:	cmp	x0, #0x2bc
   566dc:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566e0:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566e4:	cmp	x0, #0x39c
   566e8:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566ec:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566f0:	cmp	x0, #0x3bc
   566f4:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   566f8:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   566fc:	sub	x1, x0, #0x1, lsl #12
   56700:	sub	x1, x1, #0xe96
   56704:	cmp	x1, #0x4
   56708:	b.ls	56660 <my_regprop@@Base+0x1c39c>  // b.plast
   5670c:	mov	x1, #0x1e9a                	// #7834
   56710:	cmp	x0, x1
   56714:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   56718:	mov	x1, #0x1e9e                	// #7838
   5671c:	cmp	x0, x1
   56720:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   56724:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   56728:	mov	x1, #0x212a                	// #8490
   5672c:	cmp	x0, x1
   56730:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   56734:	b.ls	56588 <my_regprop@@Base+0x1c2c4>  // b.plast
   56738:	mov	x1, #0x212b                	// #8491
   5673c:	cmp	x0, x1
   56740:	b.eq	56660 <my_regprop@@Base+0x1c39c>  // b.none
   56744:	sub	x0, x0, #0xf, lsl #12
   56748:	sub	x0, x0, #0xb00
   5674c:	cmp	x0, #0x6
   56750:	b.ls	56660 <my_regprop@@Base+0x1c39c>  // b.plast
   56754:	b	56588 <my_regprop@@Base+0x1c2c4>
   56758:	mov	w7, #0x0                   	// #0
   5675c:	mov	x6, x28
   56760:	mov	w5, #0x2                   	// #2
   56764:	ldr	x4, [sp, #152]
   56768:	mov	x3, x23
   5676c:	mov	x2, x21
   56770:	mov	x1, x19
   56774:	mov	x0, x26
   56778:	bl	5330 <Perl__to_utf8_fold_flags@plt>
   5677c:	cmp	x20, #0x0
   56780:	csel	x20, x20, x0, ge  // ge = tcont
   56784:	ldr	x0, [sp, #376]
   56788:	add	x23, x23, x0
   5678c:	ldrb	w0, [x19]
   56790:	ldr	x1, [sp, #160]
   56794:	ldrb	w0, [x1, w0, sxtw]
   56798:	add	x19, x19, x0
   5679c:	add	w24, w24, #0x1
   567a0:	cmp	w24, #0x2
   567a4:	ccmp	x21, x19, #0x0, le
   567a8:	b.ls	567e4 <my_regprop@@Base+0x1c520>  // b.plast
   567ac:	ldrb	w0, [x19]
   567b0:	sxtb	w1, w0
   567b4:	tbnz	w0, #7, 56758 <my_regprop@@Base+0x1c494>
   567b8:	sub	w2, w0, #0x41
   567bc:	add	w1, w1, #0x20
   567c0:	and	w1, w1, #0xff
   567c4:	cmp	w2, #0x1a
   567c8:	csel	w0, w1, w0, cc  // cc = lo, ul, last
   567cc:	strb	w0, [x23], #1
   567d0:	and	x0, x0, #0xff
   567d4:	cmp	x20, #0x0
   567d8:	csel	x20, x0, x20, lt  // lt = tstop
   567dc:	add	x19, x19, #0x1
   567e0:	b	5679c <my_regprop@@Base+0x1c4d8>
   567e4:	mov	x21, x23
   567e8:	add	x19, sp, #0x2a0
   567ec:	b	56588 <my_regprop@@Base+0x1c2c4>
   567f0:	ldrb	w1, [x19, #1]
   567f4:	mov	w0, #0x0                   	// #0
   567f8:	cmp	w1, #0xca
   567fc:	b.eq	56848 <my_regprop@@Base+0x1c584>  // b.none
   56800:	cbnz	w0, 577c8 <my_regprop@@Base+0x1d504>
   56804:	mov	x24, x20
   56808:	mov	x3, x20
   5680c:	mov	x2, x20
   56810:	ldr	x1, [sp, #368]
   56814:	mov	x0, x26
   56818:	bl	5450 <Perl__add_range_to_invlist@plt>
   5681c:	str	x0, [sp, #368]
   56820:	add	x3, sp, #0x178
   56824:	add	x2, sp, #0x160
   56828:	mov	x1, x20
   5682c:	mov	x0, x26
   56830:	bl	5a00 <Perl__inverse_folds@plt>
   56834:	mov	x21, x0
   56838:	cbz	x0, 57848 <my_regprop@@Base+0x1d584>
   5683c:	mov	w19, #0x0                   	// #0
   56840:	mov	w23, #0x2b                  	// #43
   56844:	b	5780c <my_regprop@@Base+0x1d548>
   56848:	ldrb	w0, [x19, #2]
   5684c:	cmp	w0, #0xbe
   56850:	cset	w0, eq  // eq = none
   56854:	b	56800 <my_regprop@@Base+0x1c53c>
   56858:	ldrb	w1, [x19, #1]
   5685c:	mov	w0, #0x1                   	// #1
   56860:	cmp	w1, #0x66
   56864:	b.eq	56800 <my_regprop@@Base+0x1c53c>  // b.none
   56868:	cmp	w1, #0x69
   5686c:	mov	w0, #0x6c                  	// #108
   56870:	ccmp	w1, w0, #0x4, ne  // ne = any
   56874:	cset	w0, eq  // eq = none
   56878:	b	56800 <my_regprop@@Base+0x1c53c>
   5687c:	ldrb	w1, [x19, #1]
   56880:	mov	w0, #0x0                   	// #0
   56884:	cmp	w1, #0xcc
   56888:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   5688c:	ldrb	w0, [x19, #2]
   56890:	cmp	w0, #0xb1
   56894:	cset	w0, eq  // eq = none
   56898:	b	56800 <my_regprop@@Base+0x1c53c>
   5689c:	ldrb	w1, [x19, #1]
   568a0:	mov	w0, #0x0                   	// #0
   568a4:	cmp	w1, #0xcc
   568a8:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   568ac:	ldrb	w0, [x19, #2]
   568b0:	cmp	w0, #0x87
   568b4:	cset	w0, eq  // eq = none
   568b8:	b	56800 <my_regprop@@Base+0x1c53c>
   568bc:	ldrb	w1, [x19, #1]
   568c0:	mov	w0, #0x0                   	// #0
   568c4:	cmp	w1, #0xcc
   568c8:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   568cc:	ldrb	w0, [x19, #2]
   568d0:	cmp	w0, #0x8c
   568d4:	cset	w0, eq  // eq = none
   568d8:	b	56800 <my_regprop@@Base+0x1c53c>
   568dc:	ldrb	w0, [x19, #1]
   568e0:	sub	w0, w0, #0x73
   568e4:	cmp	w0, #0x1
   568e8:	cset	w0, ls  // ls = plast
   568ec:	b	56800 <my_regprop@@Base+0x1c53c>
   568f0:	ldrb	w1, [x19, #1]
   568f4:	mov	w0, #0x0                   	// #0
   568f8:	cmp	w1, #0xcc
   568fc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56900:	ldrb	w0, [x19, #2]
   56904:	cmp	w0, #0x88
   56908:	cset	w0, eq  // eq = none
   5690c:	b	56800 <my_regprop@@Base+0x1c53c>
   56910:	cmp	w0, #0xc5
   56914:	b.eq	5695c <my_regprop@@Base+0x1c698>  // b.none
   56918:	cmp	w0, #0xca
   5691c:	b.eq	56988 <my_regprop@@Base+0x1c6c4>  // b.none
   56920:	cmp	w0, #0xce
   56924:	b.eq	569a8 <my_regprop@@Base+0x1c6e4>  // b.none
   56928:	cmp	w0, #0xcf
   5692c:	b.eq	56aac <my_regprop@@Base+0x1c7e8>  // b.none
   56930:	cmp	w0, #0xd5
   56934:	b.eq	56be0 <my_regprop@@Base+0x1c91c>  // b.none
   56938:	cmp	w0, #0xe1
   5693c:	b.ne	56804 <my_regprop@@Base+0x1c540>  // b.any
   56940:	ldrb	w0, [x19, #1]
   56944:	cmp	w0, #0xbc
   56948:	b.eq	56c88 <my_regprop@@Base+0x1c9c4>  // b.none
   5694c:	cmp	w0, #0xbd
   56950:	b.eq	56cc8 <my_regprop@@Base+0x1ca04>  // b.none
   56954:	mov	w0, #0x0                   	// #0
   56958:	b	56800 <my_regprop@@Base+0x1c53c>
   5695c:	ldrb	w1, [x19, #1]
   56960:	mov	w0, #0x0                   	// #0
   56964:	cmp	w1, #0xbf
   56968:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   5696c:	ldrb	w1, [x19, #2]
   56970:	cmp	w1, #0xc5
   56974:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56978:	ldrb	w0, [x19, #3]
   5697c:	cmp	w0, #0xbf
   56980:	cset	w0, eq  // eq = none
   56984:	b	56800 <my_regprop@@Base+0x1c53c>
   56988:	ldrb	w1, [x19, #1]
   5698c:	mov	w0, #0x0                   	// #0
   56990:	cmp	w1, #0xbc
   56994:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56998:	ldrb	w0, [x19, #2]
   5699c:	cmp	w0, #0x6e
   569a0:	cset	w0, eq  // eq = none
   569a4:	b	56800 <my_regprop@@Base+0x1c53c>
   569a8:	ldrb	w0, [x19, #1]
   569ac:	and	w1, w0, #0xfffffffd
   569b0:	and	w1, w1, #0xff
   569b4:	cmp	w1, #0xac
   569b8:	b.eq	569e8 <my_regprop@@Base+0x1c724>  // b.none
   569bc:	cmp	w0, #0xb1
   569c0:	mov	w1, #0xb7                  	// #183
   569c4:	ccmp	w0, w1, #0x4, ne  // ne = any
   569c8:	b.ne	56a2c <my_regprop@@Base+0x1c768>  // b.any
   569cc:	ldrb	w0, [x19, #2]
   569d0:	cmp	w0, #0xcd
   569d4:	b.eq	56a0c <my_regprop@@Base+0x1c748>  // b.none
   569d8:	cmp	w0, #0xce
   569dc:	b.eq	56a1c <my_regprop@@Base+0x1c758>  // b.none
   569e0:	mov	w0, #0x0                   	// #0
   569e4:	b	56800 <my_regprop@@Base+0x1c53c>
   569e8:	ldrb	w0, [x19, #2]
   569ec:	cmp	w0, #0xce
   569f0:	b.eq	569fc <my_regprop@@Base+0x1c738>  // b.none
   569f4:	mov	w0, #0x0                   	// #0
   569f8:	b	56800 <my_regprop@@Base+0x1c53c>
   569fc:	ldrb	w0, [x19, #3]
   56a00:	cmp	w0, #0xb9
   56a04:	cset	w0, eq  // eq = none
   56a08:	b	56800 <my_regprop@@Base+0x1c53c>
   56a0c:	ldrb	w0, [x19, #3]
   56a10:	cmp	w0, #0x82
   56a14:	cset	w0, eq  // eq = none
   56a18:	b	56800 <my_regprop@@Base+0x1c53c>
   56a1c:	ldrb	w0, [x19, #3]
   56a20:	cmp	w0, #0xb9
   56a24:	cset	w0, eq  // eq = none
   56a28:	b	56800 <my_regprop@@Base+0x1c53c>
   56a2c:	cmp	w0, #0xb9
   56a30:	b.ne	56804 <my_regprop@@Base+0x1c540>  // b.any
   56a34:	ldrb	w0, [x19, #2]
   56a38:	cmp	w0, #0xcc
   56a3c:	b.eq	56a50 <my_regprop@@Base+0x1c78c>  // b.none
   56a40:	cmp	w0, #0xcd
   56a44:	b.eq	56a9c <my_regprop@@Base+0x1c7d8>  // b.none
   56a48:	mov	w0, #0x0                   	// #0
   56a4c:	b	56800 <my_regprop@@Base+0x1c53c>
   56a50:	ldrb	w0, [x19, #3]
   56a54:	cmp	w0, #0x88
   56a58:	b.ne	56804 <my_regprop@@Base+0x1c540>  // b.any
   56a5c:	ldrb	w0, [x19, #4]
   56a60:	cmp	w0, #0xcc
   56a64:	b.eq	56a78 <my_regprop@@Base+0x1c7b4>  // b.none
   56a68:	cmp	w0, #0xcd
   56a6c:	b.eq	56a8c <my_regprop@@Base+0x1c7c8>  // b.none
   56a70:	mov	w0, #0x0                   	// #0
   56a74:	b	56800 <my_regprop@@Base+0x1c53c>
   56a78:	ldrb	w0, [x19, #5]
   56a7c:	sub	w0, w0, #0x80
   56a80:	cmp	w0, #0x1
   56a84:	cset	w0, ls  // ls = plast
   56a88:	b	56800 <my_regprop@@Base+0x1c53c>
   56a8c:	ldrb	w0, [x19, #5]
   56a90:	cmp	w0, #0x82
   56a94:	cset	w0, eq  // eq = none
   56a98:	b	56800 <my_regprop@@Base+0x1c53c>
   56a9c:	ldrb	w0, [x19, #3]
   56aa0:	cmp	w0, #0x82
   56aa4:	cset	w0, eq  // eq = none
   56aa8:	b	56800 <my_regprop@@Base+0x1c53c>
   56aac:	ldrb	w0, [x19, #1]
   56ab0:	cmp	w0, #0x81
   56ab4:	b.eq	56ad8 <my_regprop@@Base+0x1c814>  // b.none
   56ab8:	cmp	w0, #0x85
   56abc:	b.eq	56afc <my_regprop@@Base+0x1c838>  // b.none
   56ac0:	cmp	w0, #0x89
   56ac4:	b.eq	56b80 <my_regprop@@Base+0x1c8bc>  // b.none
   56ac8:	cmp	w0, #0x8e
   56acc:	b.eq	56bbc <my_regprop@@Base+0x1c8f8>  // b.none
   56ad0:	mov	w0, #0x0                   	// #0
   56ad4:	b	56800 <my_regprop@@Base+0x1c53c>
   56ad8:	ldrb	w0, [x19, #2]
   56adc:	cmp	w0, #0xcc
   56ae0:	b.eq	56aec <my_regprop@@Base+0x1c828>  // b.none
   56ae4:	mov	w0, #0x0                   	// #0
   56ae8:	b	56800 <my_regprop@@Base+0x1c53c>
   56aec:	ldrb	w0, [x19, #3]
   56af0:	cmp	w0, #0x93
   56af4:	cset	w0, eq  // eq = none
   56af8:	b	56800 <my_regprop@@Base+0x1c53c>
   56afc:	ldrb	w0, [x19, #2]
   56b00:	cmp	w0, #0xcc
   56b04:	b.eq	56b18 <my_regprop@@Base+0x1c854>  // b.none
   56b08:	cmp	w0, #0xcd
   56b0c:	b.eq	56b70 <my_regprop@@Base+0x1c8ac>  // b.none
   56b10:	mov	w0, #0x0                   	// #0
   56b14:	b	56800 <my_regprop@@Base+0x1c53c>
   56b18:	ldrb	w0, [x19, #3]
   56b1c:	cmp	w0, #0x88
   56b20:	b.eq	56b30 <my_regprop@@Base+0x1c86c>  // b.none
   56b24:	cmp	w0, #0x93
   56b28:	cset	w0, eq  // eq = none
   56b2c:	b	56800 <my_regprop@@Base+0x1c53c>
   56b30:	ldrb	w0, [x19, #4]
   56b34:	cmp	w0, #0xcc
   56b38:	b.eq	56b4c <my_regprop@@Base+0x1c888>  // b.none
   56b3c:	cmp	w0, #0xcd
   56b40:	b.eq	56b60 <my_regprop@@Base+0x1c89c>  // b.none
   56b44:	mov	w0, #0x0                   	// #0
   56b48:	b	56800 <my_regprop@@Base+0x1c53c>
   56b4c:	ldrb	w0, [x19, #5]
   56b50:	sub	w0, w0, #0x80
   56b54:	cmp	w0, #0x1
   56b58:	cset	w0, ls  // ls = plast
   56b5c:	b	56800 <my_regprop@@Base+0x1c53c>
   56b60:	ldrb	w0, [x19, #5]
   56b64:	cmp	w0, #0x82
   56b68:	cset	w0, eq  // eq = none
   56b6c:	b	56800 <my_regprop@@Base+0x1c53c>
   56b70:	ldrb	w0, [x19, #3]
   56b74:	cmp	w0, #0x82
   56b78:	cset	w0, eq  // eq = none
   56b7c:	b	56800 <my_regprop@@Base+0x1c53c>
   56b80:	ldrb	w0, [x19, #2]
   56b84:	cmp	w0, #0xcd
   56b88:	b.eq	56b9c <my_regprop@@Base+0x1c8d8>  // b.none
   56b8c:	cmp	w0, #0xce
   56b90:	b.eq	56bac <my_regprop@@Base+0x1c8e8>  // b.none
   56b94:	mov	w0, #0x0                   	// #0
   56b98:	b	56800 <my_regprop@@Base+0x1c53c>
   56b9c:	ldrb	w0, [x19, #3]
   56ba0:	cmp	w0, #0x82
   56ba4:	cset	w0, eq  // eq = none
   56ba8:	b	56800 <my_regprop@@Base+0x1c53c>
   56bac:	ldrb	w0, [x19, #3]
   56bb0:	cmp	w0, #0xb9
   56bb4:	cset	w0, eq  // eq = none
   56bb8:	b	56800 <my_regprop@@Base+0x1c53c>
   56bbc:	ldrb	w0, [x19, #2]
   56bc0:	cmp	w0, #0xce
   56bc4:	b.eq	56bd0 <my_regprop@@Base+0x1c90c>  // b.none
   56bc8:	mov	w0, #0x0                   	// #0
   56bcc:	b	56800 <my_regprop@@Base+0x1c53c>
   56bd0:	ldrb	w0, [x19, #3]
   56bd4:	cmp	w0, #0xb9
   56bd8:	cset	w0, eq  // eq = none
   56bdc:	b	56800 <my_regprop@@Base+0x1c53c>
   56be0:	ldrb	w0, [x19, #1]
   56be4:	cmp	w0, #0xa5
   56be8:	b.eq	56c04 <my_regprop@@Base+0x1c940>  // b.none
   56bec:	cmp	w0, #0xb4
   56bf0:	b.eq	56c28 <my_regprop@@Base+0x1c964>  // b.none
   56bf4:	cmp	w0, #0xbe
   56bf8:	b.eq	56c64 <my_regprop@@Base+0x1c9a0>  // b.none
   56bfc:	mov	w0, #0x0                   	// #0
   56c00:	b	56800 <my_regprop@@Base+0x1c53c>
   56c04:	ldrb	w0, [x19, #2]
   56c08:	cmp	w0, #0xd6
   56c0c:	b.eq	56c18 <my_regprop@@Base+0x1c954>  // b.none
   56c10:	mov	w0, #0x0                   	// #0
   56c14:	b	56800 <my_regprop@@Base+0x1c53c>
   56c18:	ldrb	w0, [x19, #3]
   56c1c:	cmp	w0, #0x82
   56c20:	cset	w0, eq  // eq = none
   56c24:	b	56800 <my_regprop@@Base+0x1c53c>
   56c28:	ldrb	w0, [x19, #2]
   56c2c:	cmp	w0, #0xd5
   56c30:	b.eq	56c3c <my_regprop@@Base+0x1c978>  // b.none
   56c34:	mov	w0, #0x0                   	// #0
   56c38:	b	56800 <my_regprop@@Base+0x1c53c>
   56c3c:	ldrb	w1, [x19, #3]
   56c40:	and	w0, w1, #0xfffffff7
   56c44:	and	w0, w0, #0xff
   56c48:	cmp	w1, #0xab
   56c4c:	mov	w2, #0xb6                  	// #182
   56c50:	ccmp	w1, w2, #0x4, ne  // ne = any
   56c54:	mov	w1, #0xa5                  	// #165
   56c58:	ccmp	w0, w1, #0x4, ne  // ne = any
   56c5c:	cset	w0, eq  // eq = none
   56c60:	b	56800 <my_regprop@@Base+0x1c53c>
   56c64:	ldrb	w0, [x19, #2]
   56c68:	cmp	w0, #0xd5
   56c6c:	b.eq	56c78 <my_regprop@@Base+0x1c9b4>  // b.none
   56c70:	mov	w0, #0x0                   	// #0
   56c74:	b	56800 <my_regprop@@Base+0x1c53c>
   56c78:	ldrb	w0, [x19, #3]
   56c7c:	cmp	w0, #0xb6
   56c80:	cset	w0, eq  // eq = none
   56c84:	b	56800 <my_regprop@@Base+0x1c53c>
   56c88:	ldrb	w0, [x19, #2]
   56c8c:	mov	w1, #0xd8                  	// #216
   56c90:	and	w0, w0, w1
   56c94:	cmp	w0, #0x80
   56c98:	b.eq	56ca4 <my_regprop@@Base+0x1c9e0>  // b.none
   56c9c:	mov	w0, #0x0                   	// #0
   56ca0:	b	56800 <my_regprop@@Base+0x1c53c>
   56ca4:	ldrb	w0, [x19, #3]
   56ca8:	cmp	w0, #0xce
   56cac:	b.eq	56cb8 <my_regprop@@Base+0x1c9f4>  // b.none
   56cb0:	mov	w0, #0x0                   	// #0
   56cb4:	b	56800 <my_regprop@@Base+0x1c53c>
   56cb8:	ldrb	w0, [x19, #4]
   56cbc:	cmp	w0, #0xb9
   56cc0:	cset	w0, eq  // eq = none
   56cc4:	b	56800 <my_regprop@@Base+0x1c53c>
   56cc8:	ldrb	w0, [x19, #2]
   56ccc:	and	w1, w0, #0xf8
   56cd0:	cmp	w1, #0xa0
   56cd4:	b.eq	56cf0 <my_regprop@@Base+0x1ca2c>  // b.none
   56cd8:	and	w1, w0, #0xfffffffb
   56cdc:	and	w1, w1, #0xff
   56ce0:	cmp	w1, #0xb0
   56ce4:	mov	w1, #0xbc                  	// #188
   56ce8:	ccmp	w0, w1, #0x4, ne  // ne = any
   56cec:	b.ne	56d14 <my_regprop@@Base+0x1ca50>  // b.any
   56cf0:	ldrb	w0, [x19, #3]
   56cf4:	cmp	w0, #0xce
   56cf8:	b.eq	56d04 <my_regprop@@Base+0x1ca40>  // b.none
   56cfc:	mov	w0, #0x0                   	// #0
   56d00:	b	56800 <my_regprop@@Base+0x1c53c>
   56d04:	ldrb	w0, [x19, #4]
   56d08:	cmp	w0, #0xb9
   56d0c:	cset	w0, eq  // eq = none
   56d10:	b	56800 <my_regprop@@Base+0x1c53c>
   56d14:	mov	w0, #0x0                   	// #0
   56d18:	b	56800 <my_regprop@@Base+0x1c53c>
   56d1c:	b.ne	571e4 <my_regprop@@Base+0x1cf20>  // b.any
   56d20:	ldrb	w0, [x19]
   56d24:	cmp	w0, #0x61
   56d28:	b.eq	56d8c <my_regprop@@Base+0x1cac8>  // b.none
   56d2c:	cmp	w0, #0x66
   56d30:	b.eq	56dac <my_regprop@@Base+0x1cae8>  // b.none
   56d34:	cmp	w0, #0x68
   56d38:	b.eq	56dd0 <my_regprop@@Base+0x1cb0c>  // b.none
   56d3c:	cmp	w0, #0x69
   56d40:	b.eq	56df0 <my_regprop@@Base+0x1cb2c>  // b.none
   56d44:	cmp	w0, #0x6a
   56d48:	b.eq	56e10 <my_regprop@@Base+0x1cb4c>  // b.none
   56d4c:	cmp	w0, #0x73
   56d50:	b.eq	56e30 <my_regprop@@Base+0x1cb6c>  // b.none
   56d54:	cmp	w0, #0x74
   56d58:	b.eq	56e44 <my_regprop@@Base+0x1cb80>  // b.none
   56d5c:	sub	w1, w0, #0x77
   56d60:	and	w1, w1, #0xfffffffd
   56d64:	tst	w1, #0xff
   56d68:	b.ne	56e64 <my_regprop@@Base+0x1cba0>  // b.any
   56d6c:	ldrb	w1, [x19, #1]
   56d70:	mov	w0, #0x0                   	// #0
   56d74:	cmp	w1, #0xcc
   56d78:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56d7c:	ldrb	w0, [x19, #2]
   56d80:	cmp	w0, #0x8a
   56d84:	cset	w0, eq  // eq = none
   56d88:	b	56800 <my_regprop@@Base+0x1c53c>
   56d8c:	ldrb	w1, [x19, #1]
   56d90:	mov	w0, #0x0                   	// #0
   56d94:	cmp	w1, #0xca
   56d98:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56d9c:	ldrb	w0, [x19, #2]
   56da0:	cmp	w0, #0xbe
   56da4:	cset	w0, eq  // eq = none
   56da8:	b	56800 <my_regprop@@Base+0x1c53c>
   56dac:	ldrb	w1, [x19, #1]
   56db0:	mov	w0, #0x1                   	// #1
   56db4:	cmp	w1, #0x66
   56db8:	b.eq	56800 <my_regprop@@Base+0x1c53c>  // b.none
   56dbc:	cmp	w1, #0x69
   56dc0:	mov	w0, #0x6c                  	// #108
   56dc4:	ccmp	w1, w0, #0x4, ne  // ne = any
   56dc8:	cset	w0, eq  // eq = none
   56dcc:	b	56800 <my_regprop@@Base+0x1c53c>
   56dd0:	ldrb	w1, [x19, #1]
   56dd4:	mov	w0, #0x0                   	// #0
   56dd8:	cmp	w1, #0xcc
   56ddc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56de0:	ldrb	w0, [x19, #2]
   56de4:	cmp	w0, #0xb1
   56de8:	cset	w0, eq  // eq = none
   56dec:	b	56800 <my_regprop@@Base+0x1c53c>
   56df0:	ldrb	w1, [x19, #1]
   56df4:	mov	w0, #0x0                   	// #0
   56df8:	cmp	w1, #0xcc
   56dfc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56e00:	ldrb	w0, [x19, #2]
   56e04:	cmp	w0, #0x87
   56e08:	cset	w0, eq  // eq = none
   56e0c:	b	56800 <my_regprop@@Base+0x1c53c>
   56e10:	ldrb	w1, [x19, #1]
   56e14:	mov	w0, #0x0                   	// #0
   56e18:	cmp	w1, #0xcc
   56e1c:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56e20:	ldrb	w0, [x19, #2]
   56e24:	cmp	w0, #0x8c
   56e28:	cset	w0, eq  // eq = none
   56e2c:	b	56800 <my_regprop@@Base+0x1c53c>
   56e30:	ldrb	w0, [x19, #1]
   56e34:	sub	w0, w0, #0x73
   56e38:	cmp	w0, #0x1
   56e3c:	cset	w0, ls  // ls = plast
   56e40:	b	56800 <my_regprop@@Base+0x1c53c>
   56e44:	ldrb	w1, [x19, #1]
   56e48:	mov	w0, #0x0                   	// #0
   56e4c:	cmp	w1, #0xcc
   56e50:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56e54:	ldrb	w0, [x19, #2]
   56e58:	cmp	w0, #0x88
   56e5c:	cset	w0, eq  // eq = none
   56e60:	b	56800 <my_regprop@@Base+0x1c53c>
   56e64:	cmp	w0, #0xc5
   56e68:	b.eq	56eb0 <my_regprop@@Base+0x1cbec>  // b.none
   56e6c:	cmp	w0, #0xca
   56e70:	b.eq	56ee4 <my_regprop@@Base+0x1cc20>  // b.none
   56e74:	cmp	w0, #0xce
   56e78:	b.eq	56f04 <my_regprop@@Base+0x1cc40>  // b.none
   56e7c:	cmp	w0, #0xcf
   56e80:	b.eq	56fbc <my_regprop@@Base+0x1ccf8>  // b.none
   56e84:	cmp	w0, #0xd5
   56e88:	b.eq	570a8 <my_regprop@@Base+0x1cde4>  // b.none
   56e8c:	cmp	w0, #0xe1
   56e90:	b.ne	56804 <my_regprop@@Base+0x1c540>  // b.any
   56e94:	ldrb	w0, [x19, #1]
   56e98:	cmp	w0, #0xbc
   56e9c:	b.eq	57150 <my_regprop@@Base+0x1ce8c>  // b.none
   56ea0:	cmp	w0, #0xbd
   56ea4:	b.eq	57190 <my_regprop@@Base+0x1cecc>  // b.none
   56ea8:	mov	w0, #0x0                   	// #0
   56eac:	b	56800 <my_regprop@@Base+0x1c53c>
   56eb0:	ldrb	w1, [x19, #1]
   56eb4:	mov	w0, #0x0                   	// #0
   56eb8:	cmp	w1, #0xbf
   56ebc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56ec0:	ldrb	w0, [x19, #2]
   56ec4:	cmp	w0, #0xc5
   56ec8:	b.eq	56ed4 <my_regprop@@Base+0x1cc10>  // b.none
   56ecc:	mov	w0, #0x0                   	// #0
   56ed0:	b	56800 <my_regprop@@Base+0x1c53c>
   56ed4:	ldrb	w0, [x19, #3]
   56ed8:	cmp	w0, #0xbf
   56edc:	cset	w0, eq  // eq = none
   56ee0:	b	56800 <my_regprop@@Base+0x1c53c>
   56ee4:	ldrb	w1, [x19, #1]
   56ee8:	mov	w0, #0x0                   	// #0
   56eec:	cmp	w1, #0xbc
   56ef0:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   56ef4:	ldrb	w0, [x19, #2]
   56ef8:	cmp	w0, #0x6e
   56efc:	cset	w0, eq  // eq = none
   56f00:	b	56800 <my_regprop@@Base+0x1c53c>
   56f04:	ldrb	w0, [x19, #1]
   56f08:	and	w1, w0, #0xfffffffd
   56f0c:	and	w1, w1, #0xff
   56f10:	cmp	w1, #0xac
   56f14:	b.eq	56f44 <my_regprop@@Base+0x1cc80>  // b.none
   56f18:	cmp	w0, #0xb1
   56f1c:	mov	w1, #0xb7                  	// #183
   56f20:	ccmp	w0, w1, #0x4, ne  // ne = any
   56f24:	b.ne	56f88 <my_regprop@@Base+0x1ccc4>  // b.any
   56f28:	ldrb	w0, [x19, #2]
   56f2c:	cmp	w0, #0xcd
   56f30:	b.eq	56f68 <my_regprop@@Base+0x1cca4>  // b.none
   56f34:	cmp	w0, #0xce
   56f38:	b.eq	56f78 <my_regprop@@Base+0x1ccb4>  // b.none
   56f3c:	mov	w0, #0x0                   	// #0
   56f40:	b	56800 <my_regprop@@Base+0x1c53c>
   56f44:	ldrb	w0, [x19, #2]
   56f48:	cmp	w0, #0xce
   56f4c:	b.eq	56f58 <my_regprop@@Base+0x1cc94>  // b.none
   56f50:	mov	w0, #0x0                   	// #0
   56f54:	b	56800 <my_regprop@@Base+0x1c53c>
   56f58:	ldrb	w0, [x19, #3]
   56f5c:	cmp	w0, #0xb9
   56f60:	cset	w0, eq  // eq = none
   56f64:	b	56800 <my_regprop@@Base+0x1c53c>
   56f68:	ldrb	w0, [x19, #3]
   56f6c:	cmp	w0, #0x82
   56f70:	cset	w0, eq  // eq = none
   56f74:	b	56800 <my_regprop@@Base+0x1c53c>
   56f78:	ldrb	w0, [x19, #3]
   56f7c:	cmp	w0, #0xb9
   56f80:	cset	w0, eq  // eq = none
   56f84:	b	56800 <my_regprop@@Base+0x1c53c>
   56f88:	cmp	w0, #0xb9
   56f8c:	b.eq	56f98 <my_regprop@@Base+0x1ccd4>  // b.none
   56f90:	mov	w0, #0x0                   	// #0
   56f94:	b	56800 <my_regprop@@Base+0x1c53c>
   56f98:	ldrb	w0, [x19, #2]
   56f9c:	cmp	w0, #0xcd
   56fa0:	b.eq	56fac <my_regprop@@Base+0x1cce8>  // b.none
   56fa4:	mov	w0, #0x0                   	// #0
   56fa8:	b	56800 <my_regprop@@Base+0x1c53c>
   56fac:	ldrb	w0, [x19, #3]
   56fb0:	cmp	w0, #0x82
   56fb4:	cset	w0, eq  // eq = none
   56fb8:	b	56800 <my_regprop@@Base+0x1c53c>
   56fbc:	ldrb	w0, [x19, #1]
   56fc0:	cmp	w0, #0x81
   56fc4:	b.eq	56fe8 <my_regprop@@Base+0x1cd24>  // b.none
   56fc8:	cmp	w0, #0x85
   56fcc:	b.eq	5700c <my_regprop@@Base+0x1cd48>  // b.none
   56fd0:	cmp	w0, #0x89
   56fd4:	b.eq	57048 <my_regprop@@Base+0x1cd84>  // b.none
   56fd8:	cmp	w0, #0x8e
   56fdc:	b.eq	57084 <my_regprop@@Base+0x1cdc0>  // b.none
   56fe0:	mov	w0, #0x0                   	// #0
   56fe4:	b	56800 <my_regprop@@Base+0x1c53c>
   56fe8:	ldrb	w0, [x19, #2]
   56fec:	cmp	w0, #0xcc
   56ff0:	b.eq	56ffc <my_regprop@@Base+0x1cd38>  // b.none
   56ff4:	mov	w0, #0x0                   	// #0
   56ff8:	b	56800 <my_regprop@@Base+0x1c53c>
   56ffc:	ldrb	w0, [x19, #3]
   57000:	cmp	w0, #0x93
   57004:	cset	w0, eq  // eq = none
   57008:	b	56800 <my_regprop@@Base+0x1c53c>
   5700c:	ldrb	w0, [x19, #2]
   57010:	cmp	w0, #0xcc
   57014:	b.eq	57028 <my_regprop@@Base+0x1cd64>  // b.none
   57018:	cmp	w0, #0xcd
   5701c:	b.eq	57038 <my_regprop@@Base+0x1cd74>  // b.none
   57020:	mov	w0, #0x0                   	// #0
   57024:	b	56800 <my_regprop@@Base+0x1c53c>
   57028:	ldrb	w0, [x19, #3]
   5702c:	cmp	w0, #0x93
   57030:	cset	w0, eq  // eq = none
   57034:	b	56800 <my_regprop@@Base+0x1c53c>
   57038:	ldrb	w0, [x19, #3]
   5703c:	cmp	w0, #0x82
   57040:	cset	w0, eq  // eq = none
   57044:	b	56800 <my_regprop@@Base+0x1c53c>
   57048:	ldrb	w0, [x19, #2]
   5704c:	cmp	w0, #0xcd
   57050:	b.eq	57064 <my_regprop@@Base+0x1cda0>  // b.none
   57054:	cmp	w0, #0xce
   57058:	b.eq	57074 <my_regprop@@Base+0x1cdb0>  // b.none
   5705c:	mov	w0, #0x0                   	// #0
   57060:	b	56800 <my_regprop@@Base+0x1c53c>
   57064:	ldrb	w0, [x19, #3]
   57068:	cmp	w0, #0x82
   5706c:	cset	w0, eq  // eq = none
   57070:	b	56800 <my_regprop@@Base+0x1c53c>
   57074:	ldrb	w0, [x19, #3]
   57078:	cmp	w0, #0xb9
   5707c:	cset	w0, eq  // eq = none
   57080:	b	56800 <my_regprop@@Base+0x1c53c>
   57084:	ldrb	w0, [x19, #2]
   57088:	cmp	w0, #0xce
   5708c:	b.eq	57098 <my_regprop@@Base+0x1cdd4>  // b.none
   57090:	mov	w0, #0x0                   	// #0
   57094:	b	56800 <my_regprop@@Base+0x1c53c>
   57098:	ldrb	w0, [x19, #3]
   5709c:	cmp	w0, #0xb9
   570a0:	cset	w0, eq  // eq = none
   570a4:	b	56800 <my_regprop@@Base+0x1c53c>
   570a8:	ldrb	w0, [x19, #1]
   570ac:	cmp	w0, #0xa5
   570b0:	b.eq	570cc <my_regprop@@Base+0x1ce08>  // b.none
   570b4:	cmp	w0, #0xb4
   570b8:	b.eq	570f0 <my_regprop@@Base+0x1ce2c>  // b.none
   570bc:	cmp	w0, #0xbe
   570c0:	b.eq	5712c <my_regprop@@Base+0x1ce68>  // b.none
   570c4:	mov	w0, #0x0                   	// #0
   570c8:	b	56800 <my_regprop@@Base+0x1c53c>
   570cc:	ldrb	w0, [x19, #2]
   570d0:	cmp	w0, #0xd6
   570d4:	b.eq	570e0 <my_regprop@@Base+0x1ce1c>  // b.none
   570d8:	mov	w0, #0x0                   	// #0
   570dc:	b	56800 <my_regprop@@Base+0x1c53c>
   570e0:	ldrb	w0, [x19, #3]
   570e4:	cmp	w0, #0x82
   570e8:	cset	w0, eq  // eq = none
   570ec:	b	56800 <my_regprop@@Base+0x1c53c>
   570f0:	ldrb	w0, [x19, #2]
   570f4:	cmp	w0, #0xd5
   570f8:	b.eq	57104 <my_regprop@@Base+0x1ce40>  // b.none
   570fc:	mov	w0, #0x0                   	// #0
   57100:	b	56800 <my_regprop@@Base+0x1c53c>
   57104:	ldrb	w1, [x19, #3]
   57108:	and	w0, w1, #0xfffffff7
   5710c:	and	w0, w0, #0xff
   57110:	cmp	w1, #0xab
   57114:	mov	w2, #0xb6                  	// #182
   57118:	ccmp	w1, w2, #0x4, ne  // ne = any
   5711c:	mov	w1, #0xa5                  	// #165
   57120:	ccmp	w0, w1, #0x4, ne  // ne = any
   57124:	cset	w0, eq  // eq = none
   57128:	b	56800 <my_regprop@@Base+0x1c53c>
   5712c:	ldrb	w0, [x19, #2]
   57130:	cmp	w0, #0xd5
   57134:	b.eq	57140 <my_regprop@@Base+0x1ce7c>  // b.none
   57138:	mov	w0, #0x0                   	// #0
   5713c:	b	56800 <my_regprop@@Base+0x1c53c>
   57140:	ldrb	w0, [x19, #3]
   57144:	cmp	w0, #0xb6
   57148:	cset	w0, eq  // eq = none
   5714c:	b	56800 <my_regprop@@Base+0x1c53c>
   57150:	ldrb	w0, [x19, #2]
   57154:	mov	w1, #0xd8                  	// #216
   57158:	and	w0, w0, w1
   5715c:	cmp	w0, #0x80
   57160:	b.eq	5716c <my_regprop@@Base+0x1cea8>  // b.none
   57164:	mov	w0, #0x0                   	// #0
   57168:	b	56800 <my_regprop@@Base+0x1c53c>
   5716c:	ldrb	w0, [x19, #3]
   57170:	cmp	w0, #0xce
   57174:	b.eq	57180 <my_regprop@@Base+0x1cebc>  // b.none
   57178:	mov	w0, #0x0                   	// #0
   5717c:	b	56800 <my_regprop@@Base+0x1c53c>
   57180:	ldrb	w0, [x19, #4]
   57184:	cmp	w0, #0xb9
   57188:	cset	w0, eq  // eq = none
   5718c:	b	56800 <my_regprop@@Base+0x1c53c>
   57190:	ldrb	w0, [x19, #2]
   57194:	and	w1, w0, #0xf8
   57198:	cmp	w1, #0xa0
   5719c:	b.eq	571b8 <my_regprop@@Base+0x1cef4>  // b.none
   571a0:	and	w1, w0, #0xfffffffb
   571a4:	and	w1, w1, #0xff
   571a8:	cmp	w1, #0xb0
   571ac:	mov	w1, #0xbc                  	// #188
   571b0:	ccmp	w0, w1, #0x4, ne  // ne = any
   571b4:	b.ne	571dc <my_regprop@@Base+0x1cf18>  // b.any
   571b8:	ldrb	w0, [x19, #3]
   571bc:	cmp	w0, #0xce
   571c0:	b.eq	571cc <my_regprop@@Base+0x1cf08>  // b.none
   571c4:	mov	w0, #0x0                   	// #0
   571c8:	b	56800 <my_regprop@@Base+0x1c53c>
   571cc:	ldrb	w0, [x19, #4]
   571d0:	cmp	w0, #0xb9
   571d4:	cset	w0, eq  // eq = none
   571d8:	b	56800 <my_regprop@@Base+0x1c53c>
   571dc:	mov	w0, #0x0                   	// #0
   571e0:	b	56800 <my_regprop@@Base+0x1c53c>
   571e4:	cmp	x21, #0x3
   571e8:	b.le	575fc <my_regprop@@Base+0x1d338>
   571ec:	ldrb	w0, [x19]
   571f0:	cmp	w0, #0x61
   571f4:	b.eq	57258 <my_regprop@@Base+0x1cf94>  // b.none
   571f8:	cmp	w0, #0x66
   571fc:	b.eq	57278 <my_regprop@@Base+0x1cfb4>  // b.none
   57200:	cmp	w0, #0x68
   57204:	b.eq	5729c <my_regprop@@Base+0x1cfd8>  // b.none
   57208:	cmp	w0, #0x69
   5720c:	b.eq	572bc <my_regprop@@Base+0x1cff8>  // b.none
   57210:	cmp	w0, #0x6a
   57214:	b.eq	572dc <my_regprop@@Base+0x1d018>  // b.none
   57218:	cmp	w0, #0x73
   5721c:	b.eq	572fc <my_regprop@@Base+0x1d038>  // b.none
   57220:	cmp	w0, #0x74
   57224:	b.eq	57310 <my_regprop@@Base+0x1d04c>  // b.none
   57228:	sub	w1, w0, #0x77
   5722c:	and	w1, w1, #0xfffffffd
   57230:	tst	w1, #0xff
   57234:	b.ne	57330 <my_regprop@@Base+0x1d06c>  // b.any
   57238:	ldrb	w1, [x19, #1]
   5723c:	mov	w0, #0x0                   	// #0
   57240:	cmp	w1, #0xcc
   57244:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57248:	ldrb	w0, [x19, #2]
   5724c:	cmp	w0, #0x8a
   57250:	cset	w0, eq  // eq = none
   57254:	b	56800 <my_regprop@@Base+0x1c53c>
   57258:	ldrb	w1, [x19, #1]
   5725c:	mov	w0, #0x0                   	// #0
   57260:	cmp	w1, #0xca
   57264:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57268:	ldrb	w0, [x19, #2]
   5726c:	cmp	w0, #0xbe
   57270:	cset	w0, eq  // eq = none
   57274:	b	56800 <my_regprop@@Base+0x1c53c>
   57278:	ldrb	w1, [x19, #1]
   5727c:	mov	w0, #0x1                   	// #1
   57280:	cmp	w1, #0x66
   57284:	b.eq	56800 <my_regprop@@Base+0x1c53c>  // b.none
   57288:	cmp	w1, #0x69
   5728c:	mov	w0, #0x6c                  	// #108
   57290:	ccmp	w1, w0, #0x4, ne  // ne = any
   57294:	cset	w0, eq  // eq = none
   57298:	b	56800 <my_regprop@@Base+0x1c53c>
   5729c:	ldrb	w1, [x19, #1]
   572a0:	mov	w0, #0x0                   	// #0
   572a4:	cmp	w1, #0xcc
   572a8:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   572ac:	ldrb	w0, [x19, #2]
   572b0:	cmp	w0, #0xb1
   572b4:	cset	w0, eq  // eq = none
   572b8:	b	56800 <my_regprop@@Base+0x1c53c>
   572bc:	ldrb	w1, [x19, #1]
   572c0:	mov	w0, #0x0                   	// #0
   572c4:	cmp	w1, #0xcc
   572c8:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   572cc:	ldrb	w0, [x19, #2]
   572d0:	cmp	w0, #0x87
   572d4:	cset	w0, eq  // eq = none
   572d8:	b	56800 <my_regprop@@Base+0x1c53c>
   572dc:	ldrb	w1, [x19, #1]
   572e0:	mov	w0, #0x0                   	// #0
   572e4:	cmp	w1, #0xcc
   572e8:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   572ec:	ldrb	w0, [x19, #2]
   572f0:	cmp	w0, #0x8c
   572f4:	cset	w0, eq  // eq = none
   572f8:	b	56800 <my_regprop@@Base+0x1c53c>
   572fc:	ldrb	w0, [x19, #1]
   57300:	sub	w0, w0, #0x73
   57304:	cmp	w0, #0x1
   57308:	cset	w0, ls  // ls = plast
   5730c:	b	56800 <my_regprop@@Base+0x1c53c>
   57310:	ldrb	w1, [x19, #1]
   57314:	mov	w0, #0x0                   	// #0
   57318:	cmp	w1, #0xcc
   5731c:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57320:	ldrb	w0, [x19, #2]
   57324:	cmp	w0, #0x88
   57328:	cset	w0, eq  // eq = none
   5732c:	b	56800 <my_regprop@@Base+0x1c53c>
   57330:	cmp	w0, #0xc5
   57334:	b.eq	5737c <my_regprop@@Base+0x1d0b8>  // b.none
   57338:	cmp	w0, #0xca
   5733c:	b.eq	573b0 <my_regprop@@Base+0x1d0ec>  // b.none
   57340:	cmp	w0, #0xce
   57344:	b.eq	573d4 <my_regprop@@Base+0x1d110>  // b.none
   57348:	cmp	w0, #0xcf
   5734c:	b.eq	5748c <my_regprop@@Base+0x1d1c8>  // b.none
   57350:	cmp	w0, #0xd5
   57354:	b.ne	56804 <my_regprop@@Base+0x1c540>  // b.any
   57358:	ldrb	w0, [x19, #1]
   5735c:	cmp	w0, #0xa5
   57360:	b.eq	57578 <my_regprop@@Base+0x1d2b4>  // b.none
   57364:	cmp	w0, #0xb4
   57368:	b.eq	5759c <my_regprop@@Base+0x1d2d8>  // b.none
   5736c:	cmp	w0, #0xbe
   57370:	b.eq	575d8 <my_regprop@@Base+0x1d314>  // b.none
   57374:	mov	w0, #0x0                   	// #0
   57378:	b	56800 <my_regprop@@Base+0x1c53c>
   5737c:	ldrb	w1, [x19, #1]
   57380:	mov	w0, #0x0                   	// #0
   57384:	cmp	w1, #0xbf
   57388:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   5738c:	ldrb	w0, [x19, #2]
   57390:	cmp	w0, #0xc5
   57394:	b.eq	573a0 <my_regprop@@Base+0x1d0dc>  // b.none
   57398:	mov	w0, #0x0                   	// #0
   5739c:	b	56800 <my_regprop@@Base+0x1c53c>
   573a0:	ldrb	w0, [x19, #3]
   573a4:	cmp	w0, #0xbf
   573a8:	cset	w0, eq  // eq = none
   573ac:	b	56800 <my_regprop@@Base+0x1c53c>
   573b0:	ldrb	w0, [x19, #1]
   573b4:	cmp	w0, #0xbc
   573b8:	b.eq	573c4 <my_regprop@@Base+0x1d100>  // b.none
   573bc:	mov	w0, #0x0                   	// #0
   573c0:	b	56800 <my_regprop@@Base+0x1c53c>
   573c4:	ldrb	w0, [x19, #2]
   573c8:	cmp	w0, #0x6e
   573cc:	cset	w0, eq  // eq = none
   573d0:	b	56800 <my_regprop@@Base+0x1c53c>
   573d4:	ldrb	w0, [x19, #1]
   573d8:	and	w1, w0, #0xfffffffd
   573dc:	and	w1, w1, #0xff
   573e0:	cmp	w1, #0xac
   573e4:	b.eq	57414 <my_regprop@@Base+0x1d150>  // b.none
   573e8:	cmp	w0, #0xb1
   573ec:	mov	w1, #0xb7                  	// #183
   573f0:	ccmp	w0, w1, #0x4, ne  // ne = any
   573f4:	b.ne	57458 <my_regprop@@Base+0x1d194>  // b.any
   573f8:	ldrb	w0, [x19, #2]
   573fc:	cmp	w0, #0xcd
   57400:	b.eq	57438 <my_regprop@@Base+0x1d174>  // b.none
   57404:	cmp	w0, #0xce
   57408:	b.eq	57448 <my_regprop@@Base+0x1d184>  // b.none
   5740c:	mov	w0, #0x0                   	// #0
   57410:	b	56800 <my_regprop@@Base+0x1c53c>
   57414:	ldrb	w0, [x19, #2]
   57418:	cmp	w0, #0xce
   5741c:	b.eq	57428 <my_regprop@@Base+0x1d164>  // b.none
   57420:	mov	w0, #0x0                   	// #0
   57424:	b	56800 <my_regprop@@Base+0x1c53c>
   57428:	ldrb	w0, [x19, #3]
   5742c:	cmp	w0, #0xb9
   57430:	cset	w0, eq  // eq = none
   57434:	b	56800 <my_regprop@@Base+0x1c53c>
   57438:	ldrb	w0, [x19, #3]
   5743c:	cmp	w0, #0x82
   57440:	cset	w0, eq  // eq = none
   57444:	b	56800 <my_regprop@@Base+0x1c53c>
   57448:	ldrb	w0, [x19, #3]
   5744c:	cmp	w0, #0xb9
   57450:	cset	w0, eq  // eq = none
   57454:	b	56800 <my_regprop@@Base+0x1c53c>
   57458:	cmp	w0, #0xb9
   5745c:	b.eq	57468 <my_regprop@@Base+0x1d1a4>  // b.none
   57460:	mov	w0, #0x0                   	// #0
   57464:	b	56800 <my_regprop@@Base+0x1c53c>
   57468:	ldrb	w0, [x19, #2]
   5746c:	cmp	w0, #0xcd
   57470:	b.eq	5747c <my_regprop@@Base+0x1d1b8>  // b.none
   57474:	mov	w0, #0x0                   	// #0
   57478:	b	56800 <my_regprop@@Base+0x1c53c>
   5747c:	ldrb	w0, [x19, #3]
   57480:	cmp	w0, #0x82
   57484:	cset	w0, eq  // eq = none
   57488:	b	56800 <my_regprop@@Base+0x1c53c>
   5748c:	ldrb	w0, [x19, #1]
   57490:	cmp	w0, #0x81
   57494:	b.eq	574b8 <my_regprop@@Base+0x1d1f4>  // b.none
   57498:	cmp	w0, #0x85
   5749c:	b.eq	574dc <my_regprop@@Base+0x1d218>  // b.none
   574a0:	cmp	w0, #0x89
   574a4:	b.eq	57518 <my_regprop@@Base+0x1d254>  // b.none
   574a8:	cmp	w0, #0x8e
   574ac:	b.eq	57554 <my_regprop@@Base+0x1d290>  // b.none
   574b0:	mov	w0, #0x0                   	// #0
   574b4:	b	56800 <my_regprop@@Base+0x1c53c>
   574b8:	ldrb	w0, [x19, #2]
   574bc:	cmp	w0, #0xcc
   574c0:	b.eq	574cc <my_regprop@@Base+0x1d208>  // b.none
   574c4:	mov	w0, #0x0                   	// #0
   574c8:	b	56800 <my_regprop@@Base+0x1c53c>
   574cc:	ldrb	w0, [x19, #3]
   574d0:	cmp	w0, #0x93
   574d4:	cset	w0, eq  // eq = none
   574d8:	b	56800 <my_regprop@@Base+0x1c53c>
   574dc:	ldrb	w0, [x19, #2]
   574e0:	cmp	w0, #0xcc
   574e4:	b.eq	574f8 <my_regprop@@Base+0x1d234>  // b.none
   574e8:	cmp	w0, #0xcd
   574ec:	b.eq	57508 <my_regprop@@Base+0x1d244>  // b.none
   574f0:	mov	w0, #0x0                   	// #0
   574f4:	b	56800 <my_regprop@@Base+0x1c53c>
   574f8:	ldrb	w0, [x19, #3]
   574fc:	cmp	w0, #0x93
   57500:	cset	w0, eq  // eq = none
   57504:	b	56800 <my_regprop@@Base+0x1c53c>
   57508:	ldrb	w0, [x19, #3]
   5750c:	cmp	w0, #0x82
   57510:	cset	w0, eq  // eq = none
   57514:	b	56800 <my_regprop@@Base+0x1c53c>
   57518:	ldrb	w0, [x19, #2]
   5751c:	cmp	w0, #0xcd
   57520:	b.eq	57534 <my_regprop@@Base+0x1d270>  // b.none
   57524:	cmp	w0, #0xce
   57528:	b.eq	57544 <my_regprop@@Base+0x1d280>  // b.none
   5752c:	mov	w0, #0x0                   	// #0
   57530:	b	56800 <my_regprop@@Base+0x1c53c>
   57534:	ldrb	w0, [x19, #3]
   57538:	cmp	w0, #0x82
   5753c:	cset	w0, eq  // eq = none
   57540:	b	56800 <my_regprop@@Base+0x1c53c>
   57544:	ldrb	w0, [x19, #3]
   57548:	cmp	w0, #0xb9
   5754c:	cset	w0, eq  // eq = none
   57550:	b	56800 <my_regprop@@Base+0x1c53c>
   57554:	ldrb	w0, [x19, #2]
   57558:	cmp	w0, #0xce
   5755c:	b.eq	57568 <my_regprop@@Base+0x1d2a4>  // b.none
   57560:	mov	w0, #0x0                   	// #0
   57564:	b	56800 <my_regprop@@Base+0x1c53c>
   57568:	ldrb	w0, [x19, #3]
   5756c:	cmp	w0, #0xb9
   57570:	cset	w0, eq  // eq = none
   57574:	b	56800 <my_regprop@@Base+0x1c53c>
   57578:	ldrb	w0, [x19, #2]
   5757c:	cmp	w0, #0xd6
   57580:	b.eq	5758c <my_regprop@@Base+0x1d2c8>  // b.none
   57584:	mov	w0, #0x0                   	// #0
   57588:	b	56800 <my_regprop@@Base+0x1c53c>
   5758c:	ldrb	w0, [x19, #3]
   57590:	cmp	w0, #0x82
   57594:	cset	w0, eq  // eq = none
   57598:	b	56800 <my_regprop@@Base+0x1c53c>
   5759c:	ldrb	w0, [x19, #2]
   575a0:	cmp	w0, #0xd5
   575a4:	b.eq	575b0 <my_regprop@@Base+0x1d2ec>  // b.none
   575a8:	mov	w0, #0x0                   	// #0
   575ac:	b	56800 <my_regprop@@Base+0x1c53c>
   575b0:	ldrb	w1, [x19, #3]
   575b4:	and	w0, w1, #0xfffffff7
   575b8:	and	w0, w0, #0xff
   575bc:	cmp	w1, #0xab
   575c0:	mov	w2, #0xb6                  	// #182
   575c4:	ccmp	w1, w2, #0x4, ne  // ne = any
   575c8:	mov	w1, #0xa5                  	// #165
   575cc:	ccmp	w0, w1, #0x4, ne  // ne = any
   575d0:	cset	w0, eq  // eq = none
   575d4:	b	56800 <my_regprop@@Base+0x1c53c>
   575d8:	ldrb	w0, [x19, #2]
   575dc:	cmp	w0, #0xd5
   575e0:	b.eq	575ec <my_regprop@@Base+0x1d328>  // b.none
   575e4:	mov	w0, #0x0                   	// #0
   575e8:	b	56800 <my_regprop@@Base+0x1c53c>
   575ec:	ldrb	w0, [x19, #3]
   575f0:	cmp	w0, #0xb6
   575f4:	cset	w0, eq  // eq = none
   575f8:	b	56800 <my_regprop@@Base+0x1c53c>
   575fc:	b.ne	57774 <my_regprop@@Base+0x1d4b0>  // b.any
   57600:	ldrb	w1, [x19]
   57604:	cmp	w1, #0x61
   57608:	b.eq	5766c <my_regprop@@Base+0x1d3a8>  // b.none
   5760c:	cmp	w1, #0x66
   57610:	b.eq	5768c <my_regprop@@Base+0x1d3c8>  // b.none
   57614:	cmp	w1, #0x68
   57618:	b.eq	576b0 <my_regprop@@Base+0x1d3ec>  // b.none
   5761c:	cmp	w1, #0x69
   57620:	b.eq	576d0 <my_regprop@@Base+0x1d40c>  // b.none
   57624:	cmp	w1, #0x6a
   57628:	b.eq	576f0 <my_regprop@@Base+0x1d42c>  // b.none
   5762c:	cmp	w1, #0x73
   57630:	b.eq	57710 <my_regprop@@Base+0x1d44c>  // b.none
   57634:	cmp	w1, #0x74
   57638:	b.eq	57724 <my_regprop@@Base+0x1d460>  // b.none
   5763c:	sub	w0, w1, #0x77
   57640:	and	w0, w0, #0xfffffffd
   57644:	tst	w0, #0xff
   57648:	b.ne	57744 <my_regprop@@Base+0x1d480>  // b.any
   5764c:	ldrb	w1, [x19, #1]
   57650:	mov	w0, #0x0                   	// #0
   57654:	cmp	w1, #0xcc
   57658:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   5765c:	ldrb	w0, [x19, #2]
   57660:	cmp	w0, #0x8a
   57664:	cset	w0, eq  // eq = none
   57668:	b	56800 <my_regprop@@Base+0x1c53c>
   5766c:	ldrb	w1, [x19, #1]
   57670:	mov	w0, #0x0                   	// #0
   57674:	cmp	w1, #0xca
   57678:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   5767c:	ldrb	w0, [x19, #2]
   57680:	cmp	w0, #0xbe
   57684:	cset	w0, eq  // eq = none
   57688:	b	56800 <my_regprop@@Base+0x1c53c>
   5768c:	ldrb	w1, [x19, #1]
   57690:	mov	w0, #0x1                   	// #1
   57694:	cmp	w1, #0x66
   57698:	b.eq	56800 <my_regprop@@Base+0x1c53c>  // b.none
   5769c:	cmp	w1, #0x69
   576a0:	mov	w0, #0x6c                  	// #108
   576a4:	ccmp	w1, w0, #0x4, ne  // ne = any
   576a8:	cset	w0, eq  // eq = none
   576ac:	b	56800 <my_regprop@@Base+0x1c53c>
   576b0:	ldrb	w1, [x19, #1]
   576b4:	mov	w0, #0x0                   	// #0
   576b8:	cmp	w1, #0xcc
   576bc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   576c0:	ldrb	w0, [x19, #2]
   576c4:	cmp	w0, #0xb1
   576c8:	cset	w0, eq  // eq = none
   576cc:	b	56800 <my_regprop@@Base+0x1c53c>
   576d0:	ldrb	w1, [x19, #1]
   576d4:	mov	w0, #0x0                   	// #0
   576d8:	cmp	w1, #0xcc
   576dc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   576e0:	ldrb	w0, [x19, #2]
   576e4:	cmp	w0, #0x87
   576e8:	cset	w0, eq  // eq = none
   576ec:	b	56800 <my_regprop@@Base+0x1c53c>
   576f0:	ldrb	w1, [x19, #1]
   576f4:	mov	w0, #0x0                   	// #0
   576f8:	cmp	w1, #0xcc
   576fc:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57700:	ldrb	w0, [x19, #2]
   57704:	cmp	w0, #0x8c
   57708:	cset	w0, eq  // eq = none
   5770c:	b	56800 <my_regprop@@Base+0x1c53c>
   57710:	ldrb	w0, [x19, #1]
   57714:	sub	w0, w0, #0x73
   57718:	cmp	w0, #0x1
   5771c:	cset	w0, ls  // ls = plast
   57720:	b	56800 <my_regprop@@Base+0x1c53c>
   57724:	ldrb	w1, [x19, #1]
   57728:	mov	w0, #0x0                   	// #0
   5772c:	cmp	w1, #0xcc
   57730:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57734:	ldrb	w0, [x19, #2]
   57738:	cmp	w0, #0x88
   5773c:	cset	w0, eq  // eq = none
   57740:	b	56800 <my_regprop@@Base+0x1c53c>
   57744:	mov	w0, #0x0                   	// #0
   57748:	cmp	w1, #0xca
   5774c:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57750:	ldrb	w0, [x19, #1]
   57754:	cmp	w0, #0xbc
   57758:	b.eq	57764 <my_regprop@@Base+0x1d4a0>  // b.none
   5775c:	mov	w0, #0x0                   	// #0
   57760:	b	56800 <my_regprop@@Base+0x1c53c>
   57764:	ldrb	w0, [x19, #2]
   57768:	cmp	w0, #0x6e
   5776c:	cset	w0, eq  // eq = none
   57770:	b	56800 <my_regprop@@Base+0x1c53c>
   57774:	cmp	x21, #0x1
   57778:	b.le	56804 <my_regprop@@Base+0x1c540>
   5777c:	ldrb	w1, [x19]
   57780:	cmp	w1, #0x66
   57784:	b.eq	577a8 <my_regprop@@Base+0x1d4e4>  // b.none
   57788:	mov	w0, #0x0                   	// #0
   5778c:	cmp	w1, #0x73
   57790:	b.ne	56800 <my_regprop@@Base+0x1c53c>  // b.any
   57794:	ldrb	w0, [x19, #1]
   57798:	sub	w0, w0, #0x73
   5779c:	cmp	w0, #0x1
   577a0:	cset	w0, ls  // ls = plast
   577a4:	b	56800 <my_regprop@@Base+0x1c53c>
   577a8:	ldrb	w1, [x19, #1]
   577ac:	cmp	w1, #0x66
   577b0:	mov	w0, #0x69                  	// #105
   577b4:	ccmp	w1, w0, #0x4, ne  // ne = any
   577b8:	cset	w0, eq  // eq = none
   577bc:	cmp	w1, #0x6c
   577c0:	csinc	w0, w0, wzr, ne  // ne = any
   577c4:	b	56800 <my_regprop@@Base+0x1c53c>
   577c8:	mov	x3, #0xffffffffffffffff    	// #-1
   577cc:	mov	x2, #0x0                   	// #0
   577d0:	ldr	x1, [sp, #368]
   577d4:	mov	x0, x26
   577d8:	bl	5450 <Perl__add_range_to_invlist@plt>
   577dc:	str	x0, [sp, #368]
   577e0:	b	57854 <my_regprop@@Base+0x1d590>
   577e4:	ldr	w2, [sp, #352]
   577e8:	b	5781c <my_regprop@@Base+0x1d558>
   577ec:	mov	x3, x2
   577f0:	ldr	x1, [sp, #368]
   577f4:	mov	x0, x26
   577f8:	bl	5450 <Perl__add_range_to_invlist@plt>
   577fc:	str	x0, [sp, #368]
   57800:	add	w19, w19, #0x1
   57804:	cmp	x21, w19, uxtw
   57808:	b.ls	57848 <my_regprop@@Base+0x1d584>  // b.plast
   5780c:	cbz	w19, 577e4 <my_regprop@@Base+0x1d520>
   57810:	sub	w0, w19, #0x1
   57814:	ldr	x1, [sp, #376]
   57818:	ldr	w2, [x1, x0, lsl #2]
   5781c:	ldrb	w0, [x22, #1]
   57820:	cmp	w0, #0x28
   57824:	ccmp	w0, w23, #0x4, ne  // ne = any
   57828:	b.ne	577ec <my_regprop@@Base+0x1d528>  // b.any
   5782c:	cmp	x2, #0x7f
   57830:	cset	w1, ls  // ls = plast
   57834:	cmp	x24, #0x7f
   57838:	cset	w0, ls  // ls = plast
   5783c:	cmp	w0, w1, uxtb
   57840:	b.eq	577ec <my_regprop@@Base+0x1d528>  // b.none
   57844:	b	57800 <my_regprop@@Base+0x1d53c>
   57848:	ldrb	w0, [x22, #1]
   5784c:	cmp	w0, #0x26
   57850:	b.eq	578f4 <my_regprop@@Base+0x1d630>  // b.none
   57854:	ldr	x19, [sp, #368]
   57858:	cbz	x19, 5797c <my_regprop@@Base+0x1d6b8>
   5785c:	ldr	x0, [sp, #136]
   57860:	tbz	w0, #11, 57a70 <my_regprop@@Base+0x1d7ac>
   57864:	ldr	x0, [sp, #336]
   57868:	ldrb	w0, [x0, #1]
   5786c:	cmp	w0, #0x26
   57870:	b.ne	579a0 <my_regprop@@Base+0x1d6dc>  // b.any
   57874:	ldr	x1, [x25, #168]
   57878:	ldrb	w0, [x1]
   5787c:	and	w0, w0, #0xfffffffe
   57880:	strb	w0, [x1]
   57884:	ldr	x0, [x25, #168]
   57888:	str	wzr, [x0, #40]
   5788c:	ldr	x0, [x25, #168]
   57890:	cbz	x0, 57a28 <my_regprop@@Base+0x1d764>
   57894:	ldrb	w2, [x0, #1]
   57898:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5789c:	ldr	x1, [x1, #3768]
   578a0:	ldrb	w1, [x1, w2, sxtw]
   578a4:	cmp	w1, #0x12
   578a8:	b.ne	57a4c <my_regprop@@Base+0x1d788>  // b.any
   578ac:	ldrh	w1, [x0, #2]
   578b0:	cmp	w1, #0x1
   578b4:	b.ne	57a4c <my_regprop@@Base+0x1d788>  // b.any
   578b8:	add	x4, x0, #0x30
   578bc:	mov	w3, #0x0                   	// #0
   578c0:	mov	x2, x19
   578c4:	ldr	x1, [x0, #48]
   578c8:	mov	x0, x26
   578cc:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   578d0:	ldr	w0, [sp, #136]
   578d4:	and	w0, w0, #0xffffe7ff
   578d8:	str	w0, [sp, #136]
   578dc:	ldr	w2, [x19, #8]
   578e0:	cmp	w2, #0x1
   578e4:	b.ls	57b24 <my_regprop@@Base+0x1d860>  // b.plast
   578e8:	sub	w2, w2, #0x1
   578ec:	str	w2, [x19, #8]
   578f0:	b	54b74 <my_regprop@@Base+0x1a8b0>
   578f4:	and	x0, x20, #0xffffffffffffffdf
   578f8:	cmp	x0, #0x49
   578fc:	b.eq	5792c <my_regprop@@Base+0x1d668>  // b.none
   57900:	cmp	x20, #0x131
   57904:	b.eq	57960 <my_regprop@@Base+0x1d69c>  // b.none
   57908:	cmp	x20, #0x130
   5790c:	b.ne	57854 <my_regprop@@Base+0x1d590>  // b.any
   57910:	mov	x3, #0x69                  	// #105
   57914:	mov	x2, x3
   57918:	ldr	x1, [sp, #368]
   5791c:	mov	x0, x26
   57920:	bl	5450 <Perl__add_range_to_invlist@plt>
   57924:	str	x0, [sp, #368]
   57928:	b	57854 <my_regprop@@Base+0x1d590>
   5792c:	mov	x3, #0x131                 	// #305
   57930:	mov	x2, x3
   57934:	ldr	x1, [sp, #368]
   57938:	mov	x0, x26
   5793c:	bl	5450 <Perl__add_range_to_invlist@plt>
   57940:	mov	x1, x0
   57944:	str	x0, [sp, #368]
   57948:	mov	x3, #0x130                 	// #304
   5794c:	mov	x2, x3
   57950:	mov	x0, x26
   57954:	bl	5450 <Perl__add_range_to_invlist@plt>
   57958:	str	x0, [sp, #368]
   5795c:	b	57854 <my_regprop@@Base+0x1d590>
   57960:	mov	x3, #0x49                  	// #73
   57964:	mov	x2, x3
   57968:	ldr	x1, [sp, #368]
   5796c:	mov	x0, x26
   57970:	bl	5450 <Perl__add_range_to_invlist@plt>
   57974:	str	x0, [sp, #368]
   57978:	b	57854 <my_regprop@@Base+0x1d590>
   5797c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57980:	add	x3, x3, #0xc10
   57984:	add	x3, x3, #0x970
   57988:	mov	w2, #0x1490                	// #5264
   5798c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57990:	add	x1, x1, #0xfb8
   57994:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   57998:	add	x0, x0, #0x778
   5799c:	bl	58e0 <__assert_fail@plt>
   579a0:	ldr	x0, [x25, #168]
   579a4:	cbz	x0, 579e0 <my_regprop@@Base+0x1d71c>
   579a8:	ldrb	w2, [x0, #1]
   579ac:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   579b0:	ldr	x1, [x1, #3768]
   579b4:	ldrb	w1, [x1, w2, sxtw]
   579b8:	cmp	w1, #0x12
   579bc:	b.ne	57a04 <my_regprop@@Base+0x1d740>  // b.any
   579c0:	ldrh	w1, [x0, #2]
   579c4:	cmp	w1, #0x1
   579c8:	b.ne	57a04 <my_regprop@@Base+0x1d740>  // b.any
   579cc:	str	wzr, [x0, #40]
   579d0:	ldrb	w1, [x0]
   579d4:	and	w1, w1, #0xfffffff9
   579d8:	strb	w1, [x0]
   579dc:	b	57874 <my_regprop@@Base+0x1d5b0>
   579e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   579e4:	add	x3, x3, #0xc10
   579e8:	add	x3, x3, #0x9a0
   579ec:	mov	w2, #0x7ef                 	// #2031
   579f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   579f4:	add	x1, x1, #0xfb8
   579f8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   579fc:	add	x0, x0, #0xb8
   57a00:	bl	58e0 <__assert_fail@plt>
   57a04:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57a08:	add	x3, x3, #0xc10
   57a0c:	add	x3, x3, #0x9a0
   57a10:	mov	w2, #0x7f1                 	// #2033
   57a14:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57a18:	add	x1, x1, #0xfb8
   57a1c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   57a20:	add	x0, x0, #0xc0
   57a24:	bl	58e0 <__assert_fail@plt>
   57a28:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57a2c:	add	x3, x3, #0xc10
   57a30:	add	x3, x3, #0x498
   57a34:	mov	w2, #0x7c5                 	// #1989
   57a38:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57a3c:	add	x1, x1, #0xfb8
   57a40:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   57a44:	add	x0, x0, #0xb8
   57a48:	bl	58e0 <__assert_fail@plt>
   57a4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57a50:	add	x3, x3, #0xc10
   57a54:	add	x3, x3, #0x498
   57a58:	mov	w2, #0x7c7                 	// #1991
   57a5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57a60:	add	x1, x1, #0xfb8
   57a64:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   57a68:	add	x0, x0, #0xc0
   57a6c:	bl	58e0 <__assert_fail@plt>
   57a70:	ldr	x0, [x25, #168]
   57a74:	cbz	x0, 57adc <my_regprop@@Base+0x1d818>
   57a78:	ldrb	w2, [x0, #1]
   57a7c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   57a80:	ldr	x1, [x1, #3768]
   57a84:	ldrb	w1, [x1, w2, sxtw]
   57a88:	cmp	w1, #0x12
   57a8c:	b.ne	57b00 <my_regprop@@Base+0x1d83c>  // b.any
   57a90:	ldrh	w1, [x0, #2]
   57a94:	cmp	w1, #0x1
   57a98:	b.ne	57b00 <my_regprop@@Base+0x1d83c>  // b.any
   57a9c:	add	x4, x0, #0x30
   57aa0:	mov	w3, #0x0                   	// #0
   57aa4:	mov	x2, x19
   57aa8:	ldr	x1, [x0, #48]
   57aac:	mov	x0, x26
   57ab0:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   57ab4:	ldr	x3, [sp, #296]
   57ab8:	ldr	x2, [x25, #168]
   57abc:	mov	x1, x27
   57ac0:	mov	x0, x26
   57ac4:	bl	2eb68 <my_regexec@@Base+0xb674>
   57ac8:	ldr	x1, [x25, #168]
   57acc:	ldrb	w0, [x1]
   57ad0:	and	w0, w0, #0xfffffffe
   57ad4:	strb	w0, [x1]
   57ad8:	b	578d0 <my_regprop@@Base+0x1d60c>
   57adc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57ae0:	add	x3, x3, #0xc10
   57ae4:	add	x3, x3, #0x370
   57ae8:	mov	w2, #0x7b6                 	// #1974
   57aec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57af0:	add	x1, x1, #0xfb8
   57af4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   57af8:	add	x0, x0, #0xb8
   57afc:	bl	58e0 <__assert_fail@plt>
   57b00:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   57b04:	add	x3, x3, #0xc10
   57b08:	add	x3, x3, #0x370
   57b0c:	mov	w2, #0x7b8                 	// #1976
   57b10:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   57b14:	add	x1, x1, #0xfb8
   57b18:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   57b1c:	add	x0, x0, #0xc0
   57b20:	bl	58e0 <__assert_fail@plt>
   57b24:	mov	x1, x19
   57b28:	mov	x0, x26
   57b2c:	bl	5860 <Perl_sv_free2@plt>
   57b30:	b	54b74 <my_regprop@@Base+0x1a8b0>
   57b34:	cmp	w1, #0x21
   57b38:	b.eq	57b6c <my_regprop@@Base+0x1d8a8>  // b.none
   57b3c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   57b40:	add	x1, x1, #0x898
   57b44:	mov	x0, x26
   57b48:	bl	5420 <Perl_croak@plt>
   57b4c:	cmp	w1, #0x37
   57b50:	b.ne	57b64 <my_regprop@@Base+0x1d8a0>  // b.any
   57b54:	mov	x28, x25
   57b58:	add	x0, x24, #0x4
   57b5c:	str	x0, [sp, #336]
   57b60:	b	5a7a8 <my_regprop@@Base+0x204e4>
   57b64:	cmp	w1, #0x3c
   57b68:	b.ne	57b3c <my_regprop@@Base+0x1d878>  // b.any
   57b6c:	ldr	x0, [sp, #136]
   57b70:	tbnz	w0, #10, 58eb0 <my_regprop@@Base+0x1ebec>
   57b74:	ldr	x0, [sp, #136]
   57b78:	tbz	w0, #12, 57b98 <my_regprop@@Base+0x1d8d4>
   57b7c:	ldr	x0, [sp, #336]
   57b80:	ldrb	w0, [x0, #1]
   57b84:	cmp	w0, #0x21
   57b88:	b.eq	58ed4 <my_regprop@@Base+0x1ec10>  // b.none
   57b8c:	ldr	x1, [x25, #168]
   57b90:	mov	x0, x26
   57b94:	bl	26b0c <my_regexec@@Base+0x3618>
   57b98:	ldr	w0, [sp, #136]
   57b9c:	and	w0, w0, #0xffffe7ff
   57ba0:	str	w0, [sp, #136]
   57ba4:	str	w20, [sp, #256]
   57ba8:	str	w20, [sp, #144]
   57bac:	b	54b74 <my_regprop@@Base+0x1a8b0>
   57bb0:	mov	x1, x24
   57bb4:	mov	x0, x26
   57bb8:	bl	58a0 <Perl_regnext@plt>
   57bbc:	str	x0, [sp, #208]
   57bc0:	ldr	x0, [sp, #336]
   57bc4:	add	x0, x0, #0x4
   57bc8:	str	x0, [sp, #336]
   57bcc:	ldr	x0, [sp, #136]
   57bd0:	tbnz	w0, #10, 57ecc <my_regprop@@Base+0x1dc08>
   57bd4:	str	wzr, [sp, #152]
   57bd8:	mov	x22, #0xffff                	// #65535
   57bdc:	mov	x21, #0x1                   	// #1
   57be0:	b	561c4 <my_regprop@@Base+0x1bf00>
   57be4:	mov	w0, #0x27                  	// #39
   57be8:	strb	w0, [x24, #5]
   57bec:	b	56180 <my_regprop@@Base+0x1bebc>
   57bf0:	ldrb	w0, [x24, #8]
   57bf4:	and	w1, w0, #0xffffffdf
   57bf8:	sub	w1, w1, #0x41
   57bfc:	cmp	w1, #0x19
   57c00:	b.hi	5618c <my_regprop@@Base+0x1bec8>  // b.pmore
   57c04:	ldrb	w1, [x24, #5]
   57c08:	cmp	w1, #0x28
   57c0c:	b.eq	57c28 <my_regprop@@Base+0x1d964>  // b.none
   57c10:	cmp	w1, #0x27
   57c14:	b.ne	5618c <my_regprop@@Base+0x1bec8>  // b.any
   57c18:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   57c1c:	ldr	x1, [x1, #3880]
   57c20:	ldr	w1, [x1, w0, sxtw #2]
   57c24:	tbnz	w1, #19, 5618c <my_regprop@@Base+0x1bec8>
   57c28:	mov	w1, #0x17                  	// #23
   57c2c:	strb	w1, [x24, #5]
   57c30:	and	w0, w0, #0xffffffdf
   57c34:	str	w0, [x24, #8]
   57c38:	mov	w0, #0xffffffdf            	// #-33
   57c3c:	strb	w0, [x24, #4]
   57c40:	b	5618c <my_regprop@@Base+0x1bec8>
   57c44:	ldr	x0, [sp, #136]
   57c48:	tbnz	w0, #10, 57c7c <my_regprop@@Base+0x1d9b8>
   57c4c:	ldr	x1, [sp, #336]
   57c50:	mov	x0, x26
   57c54:	bl	58a0 <Perl_regnext@plt>
   57c58:	str	x0, [sp, #336]
   57c5c:	str	w20, [sp, #256]
   57c60:	str	w20, [sp, #144]
   57c64:	ldrb	w0, [x24, #1]
   57c68:	adrp	x19, 91000 <boot_re@@Base+0x2f41c>
   57c6c:	ldr	x19, [x19, #3768]
   57c70:	cmp	w0, #0x36
   57c74:	b.eq	54b84 <my_regprop@@Base+0x1a8c0>  // b.none
   57c78:	b	58e88 <my_regprop@@Base+0x1ebc4>
   57c7c:	ldr	w4, [sp, #144]
   57c80:	ldr	x3, [sp, #200]
   57c84:	mov	x2, x25
   57c88:	mov	x1, x27
   57c8c:	mov	x0, x26
   57c90:	bl	32660 <Perl_re_indentf@@Base+0x434>
   57c94:	mov	w0, #0x1                   	// #1
   57c98:	strb	w0, [x25, #48]
   57c9c:	b	57c4c <my_regprop@@Base+0x1d988>
   57ca0:	ldr	w1, [sp, #188]
   57ca4:	cmp	w1, #0x0
   57ca8:	b.le	57cbc <my_regprop@@Base+0x1d9f8>
   57cac:	sub	w0, w0, #0x34
   57cb0:	and	w0, w0, #0xff
   57cb4:	cmp	w0, #0x1
   57cb8:	b.ls	57e5c <my_regprop@@Base+0x1db98>  // b.plast
   57cbc:	ldrh	w21, [x24, #4]
   57cc0:	ldrh	w22, [x24, #6]
   57cc4:	mov	x1, x24
   57cc8:	mov	x0, x26
   57ccc:	bl	58a0 <Perl_regnext@plt>
   57cd0:	str	x0, [sp, #208]
   57cd4:	ldr	x0, [sp, #336]
   57cd8:	ldrb	w1, [x0, #1]
   57cdc:	cmp	w1, #0x36
   57ce0:	b.eq	57e74 <my_regprop@@Base+0x1dbb0>  // b.none
   57ce4:	ldr	x0, [sp, #336]
   57ce8:	add	x1, x0, #0x8
   57cec:	str	x1, [sp, #336]
   57cf0:	ldrb	w0, [x0, #9]
   57cf4:	cmp	w0, #0x4d
   57cf8:	cset	w0, eq  // eq = none
   57cfc:	str	w0, [sp, #152]
   57d00:	ldr	x0, [sp, #136]
   57d04:	tbz	w0, #10, 561c4 <my_regprop@@Base+0x1bf00>
   57d08:	cbz	x21, 57eac <my_regprop@@Base+0x1dbe8>
   57d0c:	ldr	x0, [x25]
   57d10:	str	x0, [sp, #160]
   57d14:	ldr	w0, [x25, #152]
   57d18:	str	w0, [sp, #176]
   57d1c:	and	w0, w0, #0xfffffc7f
   57d20:	orr	w1, w0, #0x40
   57d24:	ldr	w2, [sp, #144]
   57d28:	cmp	w2, #0x0
   57d2c:	csel	w0, w0, w1, eq  // eq = none
   57d30:	str	w0, [x25, #152]
   57d34:	ldr	w1, [sp, #136]
   57d38:	mov	w0, w1
   57d3c:	str	xzr, [sp, #224]
   57d40:	ands	w28, w1, #0x1800
   57d44:	b.ne	57edc <my_regprop@@Base+0x1dc18>  // b.any
   57d48:	cmp	x21, #0x1
   57d4c:	b.le	57f0c <my_regprop@@Base+0x1dc48>
   57d50:	and	w0, w0, #0xffffdfff
   57d54:	cbnz	x21, 57f20 <my_regprop@@Base+0x1dc5c>
   57d58:	ldr	w1, [sp, #744]
   57d5c:	add	w1, w1, #0x1
   57d60:	str	w1, [sp, #232]
   57d64:	str	w1, [sp, #24]
   57d68:	and	w0, w0, #0xfffffbff
   57d6c:	str	w0, [sp, #16]
   57d70:	str	xzr, [sp, #8]
   57d74:	ldr	w0, [sp, #720]
   57d78:	str	w0, [sp]
   57d7c:	ldr	w7, [sp, #188]
   57d80:	mov	x6, x25
   57d84:	ldr	x5, [sp, #168]
   57d88:	add	x4, sp, #0x170
   57d8c:	ldr	x3, [sp, #200]
   57d90:	add	x2, sp, #0x150
   57d94:	mov	x1, x27
   57d98:	mov	x0, x26
   57d9c:	bl	528a8 <my_regprop@@Base+0x185e4>
   57da0:	mov	x23, x0
   57da4:	cbnz	w28, 57f6c <my_regprop@@Base+0x1dca8>
   57da8:	cmp	x0, #0x0
   57dac:	cset	w28, eq  // eq = none
   57db0:	ldr	x0, [sp, #136]
   57db4:	tbnz	w0, #12, 58118 <my_regprop@@Base+0x1de54>
   57db8:	ldr	x0, [sp, #136]
   57dbc:	tbz	w0, #11, 57fa8 <my_regprop@@Base+0x1dce4>
   57dc0:	ldr	x0, [sp, #296]
   57dc4:	cbnz	x0, 58130 <my_regprop@@Base+0x1de6c>
   57dc8:	mov	x0, #0x38                  	// #56
   57dcc:	bl	5250 <Perl_safesysmalloc@plt>
   57dd0:	mov	x19, x0
   57dd4:	str	x0, [sp, #296]
   57dd8:	mov	w2, #0xa                   	// #10
   57ddc:	mov	x1, x0
   57de0:	mov	x0, x26
   57de4:	bl	54b0 <Perl_save_pushptr@plt>
   57de8:	ldr	x0, [x25, #168]
   57dec:	ldp	x2, x3, [x0]
   57df0:	stp	x2, x3, [x19]
   57df4:	ldp	x2, x3, [x0, #16]
   57df8:	stp	x2, x3, [x19, #16]
   57dfc:	ldp	x2, x3, [x0, #32]
   57e00:	stp	x2, x3, [x19, #32]
   57e04:	ldr	x1, [x0, #48]
   57e08:	str	x1, [x19, #48]
   57e0c:	ldr	w1, [sp, #136]
   57e10:	and	w1, w1, #0xfffff7ff
   57e14:	add	x2, sp, #0x200
   57e18:	ldp	x2, x3, [x2, #-72]
   57e1c:	stp	x2, x3, [x0]
   57e20:	add	x2, sp, #0x200
   57e24:	ldp	x2, x3, [x2, #-56]
   57e28:	stp	x2, x3, [x0, #16]
   57e2c:	add	x2, sp, #0x2d0
   57e30:	ldp	x2, x3, [x2, #-248]
   57e34:	stp	x2, x3, [x0, #32]
   57e38:	ldr	x2, [sp, #488]
   57e3c:	str	x2, [x0, #48]
   57e40:	orr	w0, w1, #0x1000
   57e44:	str	w0, [sp, #136]
   57e48:	ldr	x1, [x25, #168]
   57e4c:	ldrb	w0, [x1]
   57e50:	orr	w0, w0, #0x1
   57e54:	strb	w0, [x1]
   57e58:	b	57fa8 <my_regprop@@Base+0x1dce4>
   57e5c:	ldrb	w0, [x24]
   57e60:	cmp	w0, w1
   57e64:	b.ne	57cbc <my_regprop@@Base+0x1d9f8>  // b.any
   57e68:	mov	x22, #0x1                   	// #1
   57e6c:	mov	x21, x22
   57e70:	b	57cc4 <my_regprop@@Base+0x1da00>
   57e74:	cbz	x25, 57e9c <my_regprop@@Base+0x1dbd8>
   57e78:	ldr	x1, [x25, #160]
   57e7c:	ldr	x3, [x1]
   57e80:	mov	w2, w3
   57e84:	mov	w1, #0xff                  	// #255
   57e88:	cmp	w3, w1
   57e8c:	b.gt	57e94 <my_regprop@@Base+0x1dbd0>
   57e90:	and	w1, w2, #0xff
   57e94:	strb	w1, [x0]
   57e98:	b	57ce4 <my_regprop@@Base+0x1da20>
   57e9c:	mov	w2, #0x0                   	// #0
   57ea0:	b	57e90 <my_regprop@@Base+0x1dbcc>
   57ea4:	str	wzr, [sp, #152]
   57ea8:	mov	x22, #0xffff                	// #65535
   57eac:	ldr	w4, [sp, #144]
   57eb0:	ldr	x3, [sp, #200]
   57eb4:	mov	x2, x25
   57eb8:	mov	x1, x27
   57ebc:	mov	x0, x26
   57ec0:	bl	32660 <Perl_re_indentf@@Base+0x434>
   57ec4:	mov	x21, #0x0                   	// #0
   57ec8:	b	57d0c <my_regprop@@Base+0x1da48>
   57ecc:	str	wzr, [sp, #152]
   57ed0:	mov	x22, #0xffff                	// #65535
   57ed4:	mov	x21, #0x1                   	// #1
   57ed8:	b	57d0c <my_regprop@@Base+0x1da48>
   57edc:	add	x19, sp, #0x1b8
   57ee0:	mov	x2, x19
   57ee4:	mov	x1, x27
   57ee8:	mov	x0, x26
   57eec:	bl	29d54 <my_regexec@@Base+0x6860>
   57ef0:	ldr	x0, [x25, #168]
   57ef4:	str	x0, [sp, #224]
   57ef8:	str	x19, [x25, #168]
   57efc:	ldr	w0, [sp, #136]
   57f00:	and	w0, w0, #0xffffefff
   57f04:	orr	w0, w0, #0x800
   57f08:	b	57d48 <my_regprop@@Base+0x1da84>
   57f0c:	cmp	x22, #0x1
   57f10:	mov	x1, #0xffff                	// #65535
   57f14:	ccmp	x22, x1, #0x4, gt
   57f18:	b.eq	57d54 <my_regprop@@Base+0x1da90>  // b.none
   57f1c:	b	57d50 <my_regprop@@Base+0x1da8c>
   57f20:	ldr	w1, [sp, #744]
   57f24:	add	w1, w1, #0x1
   57f28:	str	w1, [sp, #232]
   57f2c:	str	w1, [sp, #24]
   57f30:	str	w0, [sp, #16]
   57f34:	str	xzr, [sp, #8]
   57f38:	ldr	w0, [sp, #720]
   57f3c:	str	w0, [sp]
   57f40:	ldr	w7, [sp, #188]
   57f44:	mov	x6, x25
   57f48:	ldr	x5, [sp, #168]
   57f4c:	add	x4, sp, #0x170
   57f50:	ldr	x3, [sp, #200]
   57f54:	add	x2, sp, #0x150
   57f58:	mov	x1, x27
   57f5c:	mov	x0, x26
   57f60:	bl	528a8 <my_regprop@@Base+0x185e4>
   57f64:	mov	x23, x0
   57f68:	cbz	w28, 57f74 <my_regprop@@Base+0x1dcb0>
   57f6c:	ldr	x0, [sp, #224]
   57f70:	str	x0, [x25, #168]
   57f74:	cmp	x23, #0x0
   57f78:	cset	w28, eq  // eq = none
   57f7c:	cmp	x21, #0x0
   57f80:	csinc	w19, w28, wzr, ne  // ne = any
   57f84:	cbnz	w19, 57db0 <my_regprop@@Base+0x1daec>
   57f88:	ldr	x0, [sp, #136]
   57f8c:	tbnz	w0, #12, 58154 <my_regprop@@Base+0x1de90>
   57f90:	ldr	x0, [sp, #136]
   57f94:	tbnz	w0, #11, 58180 <my_regprop@@Base+0x1debc>
   57f98:	ldr	w0, [sp, #136]
   57f9c:	and	w0, w0, #0xffffe7ff
   57fa0:	str	w0, [sp, #136]
   57fa4:	mov	w28, w19
   57fa8:	ldr	x0, [sp, #336]
   57fac:	cbz	x0, 58198 <my_regprop@@Base+0x1ded4>
   57fb0:	ldr	w0, [sp, #136]
   57fb4:	and	w0, w0, #0x1fc00
   57fb8:	and	w0, w0, #0xffff07ff
   57fbc:	cmp	w0, #0x400
   57fc0:	b.eq	581a4 <my_regprop@@Base+0x1dee0>  // b.none
   57fc4:	mul	x19, x21, x23
   57fc8:	ldr	x0, [sp, #192]
   57fcc:	add	x0, x0, x19
   57fd0:	str	x0, [sp, #192]
   57fd4:	ldr	x0, [sp, #368]
   57fd8:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   57fdc:	cmp	x0, x1
   57fe0:	b.eq	58358 <my_regprop@@Base+0x1e094>  // b.none
   57fe4:	mov	x1, #0xffff                	// #65535
   57fe8:	cmp	x22, x1
   57fec:	b.eq	5834c <my_regprop@@Base+0x1e088>  // b.none
   57ff0:	ldr	w1, [sp, #144]
   57ff4:	ldr	w2, [sp, #256]
   57ff8:	orr	w3, w1, w2
   57ffc:	str	w3, [sp, #144]
   58000:	cbnz	w3, 5836c <my_regprop@@Base+0x1e0a8>
   58004:	ldr	x1, [sp, #216]
   58008:	sub	x1, x1, x19
   5800c:	add	x2, x0, x23
   58010:	madd	x1, x2, x22, x1
   58014:	str	x1, [sp, #216]
   58018:	str	w3, [sp, #256]
   5801c:	ldrb	w1, [x24, #1]
   58020:	cmp	x25, #0x0
   58024:	cset	w28, ne  // ne = any
   58028:	cmp	w1, #0x36
   5802c:	ccmp	w28, #0x0, #0x4, eq  // eq = none
   58030:	b.ne	58378 <my_regprop@@Base+0x1e0b4>  // b.any
   58034:	cmp	w1, #0x36
   58038:	b.eq	58608 <my_regprop@@Base+0x1e344>  // b.none
   5803c:	cbz	x25, 5ab10 <my_regprop@@Base+0x2084c>
   58040:	ldr	w0, [sp, #176]
   58044:	tst	w0, #0x180
   58048:	ldr	w0, [sp, #260]
   5804c:	cinc	w0, w0, ne  // ne = any
   58050:	str	w0, [sp, #260]
   58054:	ldr	x0, [sp, #136]
   58058:	tbz	w0, #10, 58100 <my_regprop@@Base+0x1de3c>
   5805c:	cmp	x21, #0x0
   58060:	cset	w0, ne  // ne = any
   58064:	mov	w1, w0
   58068:	str	w0, [sp, #208]
   5806c:	ldr	x0, [x25, #24]
   58070:	cmp	x0, #0x0
   58074:	ccmp	w1, #0x0, #0x4, gt
   58078:	b.ne	58644 <my_regprop@@Base+0x1e380>  // b.any
   5807c:	mov	x28, #0x0                   	// #0
   58080:	mov	x20, #0x0                   	// #0
   58084:	ldr	w2, [sp, #208]
   58088:	and	x0, x2, #0xff
   5808c:	sub	x0, x21, x0
   58090:	ldr	x1, [x25]
   58094:	madd	x0, x0, x23, x1
   58098:	str	x0, [x25]
   5809c:	ldr	x0, [sp, #368]
   580a0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   580a4:	cmp	x0, x1
   580a8:	b.eq	580dc <my_regprop@@Base+0x1de18>  // b.none
   580ac:	sbfx	x1, x2, #0, #1
   580b0:	add	x2, x0, x23
   580b4:	mul	x2, x2, x22
   580b8:	madd	x0, x1, x0, x2
   580bc:	sub	x19, x0, x19
   580c0:	ldr	x0, [x25, #8]
   580c4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   580c8:	sub	x1, x1, x0
   580cc:	add	x0, x19, x0
   580d0:	cmp	x19, x1
   580d4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   580d8:	csel	x0, x0, x1, lt  // lt = tstop
   580dc:	str	x0, [x25, #8]
   580e0:	cmp	x21, x22
   580e4:	b.ne	58dc8 <my_regprop@@Base+0x1eb04>  // b.any
   580e8:	cbz	x20, 58100 <my_regprop@@Base+0x1de3c>
   580ec:	ldr	w2, [x20, #8]
   580f0:	cmp	w2, #0x1
   580f4:	b.ls	58e6c <my_regprop@@Base+0x1eba8>  // b.plast
   580f8:	sub	w2, w2, #0x1
   580fc:	str	w2, [x20, #8]
   58100:	ldr	x0, [sp, #176]
   58104:	tbz	w0, #9, 57c64 <my_regprop@@Base+0x1d9a0>
   58108:	ldr	w0, [x25, #152]
   5810c:	orr	w0, w0, #0x200
   58110:	str	w0, [x25, #152]
   58114:	b	57c64 <my_regprop@@Base+0x1d9a0>
   58118:	add	x3, sp, #0x1b8
   5811c:	ldr	x2, [x25, #168]
   58120:	mov	x1, x27
   58124:	mov	x0, x26
   58128:	bl	2d628 <my_regexec@@Base+0xa134>
   5812c:	b	57fa8 <my_regprop@@Base+0x1dce4>
   58130:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58134:	add	x3, x3, #0xc10
   58138:	add	x3, x3, #0x970
   5813c:	mov	w2, #0x1532                	// #5426
   58140:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58144:	add	x1, x1, #0xfb8
   58148:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5814c:	add	x0, x0, #0x4b8
   58150:	bl	58e0 <__assert_fail@plt>
   58154:	add	x3, sp, #0x1b8
   58158:	ldr	x2, [x25, #168]
   5815c:	mov	x1, x27
   58160:	mov	x0, x26
   58164:	bl	2d628 <my_regexec@@Base+0xa134>
   58168:	ldr	x3, [sp, #296]
   5816c:	ldr	x2, [x25, #168]
   58170:	mov	x1, x27
   58174:	mov	x0, x26
   58178:	bl	2eb68 <my_regexec@@Base+0xb674>
   5817c:	b	57f98 <my_regprop@@Base+0x1dcd4>
   58180:	add	x3, sp, #0x1b8
   58184:	ldr	x2, [x25, #168]
   58188:	mov	x1, x27
   5818c:	mov	x0, x26
   58190:	bl	2eb68 <my_regexec@@Base+0xb674>
   58194:	b	57f98 <my_regprop@@Base+0x1dcd4>
   58198:	ldr	x0, [sp, #208]
   5819c:	str	x0, [sp, #336]
   581a0:	b	57fb0 <my_regprop@@Base+0x1dcec>
   581a4:	ldr	w0, [sp, #152]
   581a8:	cbnz	w0, 581b8 <my_regprop@@Base+0x1def4>
   581ac:	cmp	x21, #0x0
   581b0:	ccmp	x22, #0x1, #0x0, eq  // eq = none
   581b4:	b.eq	582c0 <my_regprop@@Base+0x1dffc>  // b.none
   581b8:	cbz	w28, 57fc4 <my_regprop@@Base+0x1dd00>
   581bc:	ldr	x0, [sp, #368]
   581c0:	cmp	x0, #0x0
   581c4:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   581c8:	b.eq	57fc4 <my_regprop@@Base+0x1dd00>  // b.none
   581cc:	ldr	w0, [x25, #152]
   581d0:	tst	w0, #0x180
   581d4:	mov	x0, #0x5555                	// #21845
   581d8:	ccmp	x22, x0, #0x0, eq  // eq = none
   581dc:	b.le	581f8 <my_regprop@@Base+0x1df34>
   581e0:	mul	x19, x21, x23
   581e4:	ldr	x0, [sp, #192]
   581e8:	add	x0, x0, x19
   581ec:	str	x0, [sp, #192]
   581f0:	mov	x0, #0x0                   	// #0
   581f4:	b	57fe4 <my_regprop@@Base+0x1dd20>
   581f8:	ldr	x1, [x27, #72]
   581fc:	cbz	x1, 582e4 <my_regprop@@Base+0x1e020>
   58200:	ldr	x0, [x27, #16]
   58204:	sub	x1, x0, x1
   58208:	ldr	x0, [x27, #80]
   5820c:	add	x0, x0, x1
   58210:	ldr	x1, [x27, #8]
   58214:	sub	x0, x0, x1
   58218:	ldr	x1, [x27, #136]
   5821c:	cmp	x0, x1
   58220:	b.le	5ab1c <my_regprop@@Base+0x20858>
   58224:	ldr	x0, [x26, #224]
   58228:	cbz	x0, 58250 <my_regprop@@Base+0x1df8c>
   5822c:	ldr	x0, [x0, #64]
   58230:	cmp	x0, #0x0
   58234:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   58238:	ldr	x1, [x1, #3984]
   5823c:	ccmp	x0, x1, #0x4, ne  // ne = any
   58240:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   58244:	ldr	x1, [x1, #3832]
   58248:	ccmp	x0, x1, #0x4, ne  // ne = any
   5824c:	b.ne	58304 <my_regprop@@Base+0x1e040>  // b.any
   58250:	ldr	x5, [x27, #8]
   58254:	ldr	x4, [x27, #16]
   58258:	ldr	w0, [x27, #192]
   5825c:	cmp	w0, #0x0
   58260:	sub	x4, x4, x5
   58264:	cset	w3, ne  // ne = any
   58268:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5826c:	add	x2, x2, #0x788
   58270:	mov	w1, #0x14                  	// #20
   58274:	mov	x0, x26
   58278:	bl	5150 <Perl_ck_warner@plt>
   5827c:	ldr	x1, [x27, #72]
   58280:	cbz	x1, 582c0 <my_regprop@@Base+0x1dffc>
   58284:	ldr	x0, [x27, #16]
   58288:	sub	x2, x0, x1
   5828c:	ldr	x1, [x27, #80]
   58290:	add	x1, x1, x2
   58294:	ldr	x2, [x27, #8]
   58298:	sub	x4, x1, x2
   5829c:	ldr	x3, [x27, #136]
   582a0:	cmp	x4, x3
   582a4:	b.le	582c0 <my_regprop@@Base+0x1dffc>
   582a8:	cmp	x0, x1
   582ac:	csel	x0, x0, x1, ls  // ls = plast
   582b0:	cmp	x2, x0
   582b4:	csel	x0, x2, x0, hi  // hi = pmore
   582b8:	sub	x0, x0, x2
   582bc:	str	x0, [x27, #136]
   582c0:	mul	x19, x21, x23
   582c4:	ldr	x0, [sp, #192]
   582c8:	add	x0, x0, x19
   582cc:	str	x0, [sp, #192]
   582d0:	ldr	x0, [sp, #368]
   582d4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   582d8:	cmp	x0, x1
   582dc:	b.ne	57ff0 <my_regprop@@Base+0x1dd2c>  // b.any
   582e0:	b	58358 <my_regprop@@Base+0x1e094>
   582e4:	ldr	x4, [x27, #16]
   582e8:	mov	w3, #0x154d                	// #5453
   582ec:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   582f0:	add	x2, x2, #0xfb8
   582f4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   582f8:	add	x1, x1, #0xab8
   582fc:	mov	x0, x26
   58300:	bl	5420 <Perl_croak@plt>
   58304:	ldrb	w0, [x0, #13]
   58308:	tbz	w0, #1, 58250 <my_regprop@@Base+0x1df8c>
   5830c:	ldr	x1, [x27, #24]
   58310:	cbz	x1, 58320 <my_regprop@@Base+0x1e05c>
   58314:	mov	w2, #0xb                   	// #11
   58318:	mov	x0, x26
   5831c:	bl	54b0 <Perl_save_pushptr@plt>
   58320:	ldr	x1, [x27, #160]
   58324:	cbz	x1, 58334 <my_regprop@@Base+0x1e070>
   58328:	mov	w2, #0xa                   	// #10
   5832c:	mov	x0, x26
   58330:	bl	54b0 <Perl_save_pushptr@plt>
   58334:	ldr	x1, [x27, #168]
   58338:	cbz	x1, 58250 <my_regprop@@Base+0x1df8c>
   5833c:	mov	w2, #0xa                   	// #10
   58340:	mov	x0, x26
   58344:	bl	54b0 <Perl_save_pushptr@plt>
   58348:	b	58250 <my_regprop@@Base+0x1df8c>
   5834c:	add	x1, x0, x23
   58350:	cmp	x1, #0x0
   58354:	b.le	57ff0 <my_regprop@@Base+0x1dd2c>
   58358:	str	w20, [sp, #144]
   5835c:	str	w20, [sp, #256]
   58360:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   58364:	str	x1, [sp, #216]
   58368:	b	5801c <my_regprop@@Base+0x1dd58>
   5836c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   58370:	str	x1, [sp, #216]
   58374:	b	5801c <my_regprop@@Base+0x1dd58>
   58378:	ldr	w1, [x25, #152]
   5837c:	and	w1, w1, #0x300
   58380:	cmp	w1, #0x100
   58384:	ccmp	x23, #0x1, #0x0, eq  // eq = none
   58388:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   5838c:	b.eq	58414 <my_regprop@@Base+0x1e150>  // b.none
   58390:	ldr	w1, [x25, #152]
   58394:	mov	w0, #0x280                 	// #640
   58398:	tst	w1, w0
   5839c:	b.ne	583b0 <my_regprop@@Base+0x1e0ec>  // b.any
   583a0:	ldr	x0, [sp, #368]
   583a4:	cmp	x0, #0x0
   583a8:	ccmp	x23, #0x0, #0x4, eq  // eq = none
   583ac:	b.ne	584f8 <my_regprop@@Base+0x1e234>  // b.any
   583b0:	ldr	x0, [sp, #136]
   583b4:	tbz	w0, #13, 58040 <my_regprop@@Base+0x1dd7c>
   583b8:	cmp	w28, #0x0
   583bc:	mov	x0, #0xffff                	// #65535
   583c0:	ccmp	x22, x0, #0x0, ne  // ne = any
   583c4:	b.ne	5803c <my_regprop@@Base+0x1dd78>  // b.any
   583c8:	ldrh	w0, [x24, #2]
   583cc:	add	x0, x24, x0, lsl #2
   583d0:	ldurb	w1, [x0, #-3]
   583d4:	cmp	w1, #0x2f
   583d8:	b.eq	58614 <my_regprop@@Base+0x1e350>  // b.none
   583dc:	ldurb	w1, [x0, #-4]
   583e0:	tst	x1, #0xf
   583e4:	b.ne	58040 <my_regprop@@Base+0x1dd7c>  // b.any
   583e8:	ldr	w1, [x25, #156]
   583ec:	add	w1, w1, #0x1
   583f0:	str	w1, [x25, #156]
   583f4:	cmp	w1, #0xf
   583f8:	b.gt	58040 <my_regprop@@Base+0x1dd7c>
   583fc:	ldr	x2, [x27, #88]
   58400:	cmp	x2, w1, sxtw
   58404:	b.lt	58620 <my_regprop@@Base+0x1e35c>  // b.tstop
   58408:	orr	w1, w1, w2, lsl #4
   5840c:	sturb	w1, [x0, #-4]
   58410:	b	58040 <my_regprop@@Base+0x1dd7c>
   58414:	add	x1, x24, #0x8
   58418:	mov	x0, x26
   5841c:	bl	58a0 <Perl_regnext@plt>
   58420:	mov	x20, x0
   58424:	ldrb	w1, [x0, #1]
   58428:	lsr	w2, w1, #3
   5842c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   58430:	ldr	x0, [x0, #4000]
   58434:	ldrb	w0, [x0, w2, sxtw]
   58438:	and	w2, w1, #0x7
   5843c:	asr	w0, w0, w2
   58440:	tbnz	w0, #0, 58464 <my_regprop@@Base+0x1e1a0>
   58444:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   58448:	ldr	x0, [x0, #3768]
   5844c:	ldrb	w0, [x0, w1, sxtw]
   58450:	cmp	w0, #0x23
   58454:	b.ne	584e8 <my_regprop@@Base+0x1e224>  // b.any
   58458:	ldrb	w0, [x20]
   5845c:	cmp	w0, #0x1
   58460:	b.ne	584e8 <my_regprop@@Base+0x1e224>  // b.any
   58464:	mov	x1, x20
   58468:	mov	x0, x26
   5846c:	bl	58a0 <Perl_regnext@plt>
   58470:	ldrb	w1, [x0, #1]
   58474:	cmp	w1, #0x39
   58478:	b.ne	584e8 <my_regprop@@Base+0x1e224>  // b.any
   5847c:	ldr	x2, [x27, #160]
   58480:	cbz	x2, 584b4 <my_regprop@@Base+0x1e1f0>
   58484:	ldr	w3, [x24, #12]
   58488:	ldr	x1, [x27, #96]
   5848c:	sub	x1, x24, x1
   58490:	asr	x1, x1, #2
   58494:	str	x1, [x2, x3, lsl #3]
   58498:	ldr	w3, [x24, #12]
   5849c:	ldr	x2, [x27, #168]
   584a0:	ldr	x1, [x27, #96]
   584a4:	sub	x1, x0, x1
   584a8:	asr	x1, x1, #2
   584ac:	add	x1, x1, #0x2
   584b0:	str	x1, [x2, x3, lsl #3]
   584b4:	ldr	w1, [x0, #4]
   584b8:	strb	w1, [x24]
   584bc:	mov	w1, #0x34                  	// #52
   584c0:	strb	w1, [x24, #1]
   584c4:	mov	w1, #0x2f                  	// #47
   584c8:	strb	w1, [x24, #9]
   584cc:	mov	w1, #0x64                  	// #100
   584d0:	strb	w1, [x24, #13]
   584d4:	strh	wzr, [x24, #14]
   584d8:	strh	wzr, [x20, #2]
   584dc:	strb	w1, [x0, #1]
   584e0:	strb	w1, [x0, #5]
   584e4:	strh	wzr, [x0, #6]
   584e8:	ldrb	w0, [x24, #1]
   584ec:	cmp	w0, #0x36
   584f0:	b.eq	58390 <my_regprop@@Base+0x1e0cc>  // b.none
   584f4:	b	5803c <my_regprop@@Base+0x1dd78>
   584f8:	ldr	w0, [x27, #120]
   584fc:	tbnz	w0, #10, 583b0 <my_regprop@@Base+0x1e0ec>
   58500:	add	x28, x24, #0x8
   58504:	mov	w0, #0x35                  	// #53
   58508:	strb	w0, [x24, #1]
   5850c:	mov	x1, x28
   58510:	mov	x20, x1
   58514:	mov	x0, x26
   58518:	bl	58a0 <Perl_regnext@plt>
   5851c:	mov	x1, x0
   58520:	cbz	x0, 58530 <my_regprop@@Base+0x1e26c>
   58524:	ldrb	w0, [x0, #1]
   58528:	cmp	w0, #0x37
   5852c:	b.ne	58510 <my_regprop@@Base+0x1e24c>  // b.any
   58530:	mov	w0, #0x1                   	// #1
   58534:	strb	w0, [x1, #1]
   58538:	ldr	w0, [x25, #152]
   5853c:	tbz	w0, #8, 5854c <my_regprop@@Base+0x1e288>
   58540:	ldrb	w0, [x20, #1]
   58544:	cmp	w0, #0x39
   58548:	b.eq	58554 <my_regprop@@Base+0x1e290>  // b.none
   5854c:	strb	wzr, [x24]
   58550:	b	58040 <my_regprop@@Base+0x1dd7c>
   58554:	str	x28, [sp, #376]
   58558:	ldr	w0, [x20, #4]
   5855c:	strb	w0, [x24]
   58560:	ldr	x2, [x27, #160]
   58564:	cbz	x2, 585a0 <my_regprop@@Base+0x1e2dc>
   58568:	ldr	x0, [sp, #376]
   5856c:	ldr	w3, [x0, #4]
   58570:	ldr	x0, [x27, #96]
   58574:	sub	x0, x24, x0
   58578:	asr	x0, x0, #2
   5857c:	str	x0, [x2, x3, lsl #3]
   58580:	ldr	x0, [sp, #376]
   58584:	ldr	w3, [x0, #4]
   58588:	ldr	x2, [x27, #168]
   5858c:	ldr	x0, [x27, #96]
   58590:	sub	x0, x1, x0
   58594:	asr	x0, x0, #2
   58598:	add	x0, x0, #0x1
   5859c:	str	x0, [x2, x3, lsl #3]
   585a0:	mov	w0, #0x64                  	// #100
   585a4:	ldr	x1, [sp, #376]
   585a8:	strb	w0, [x1, #1]
   585ac:	strb	w0, [x20, #1]
   585b0:	ldr	x1, [sp, #376]
   585b4:	strb	w0, [x1, #5]
   585b8:	strb	w0, [x20, #5]
   585bc:	ldr	x0, [sp, #376]
   585c0:	strh	wzr, [x0, #6]
   585c4:	strh	wzr, [x20, #6]
   585c8:	ldr	w0, [sp, #232]
   585cc:	str	w0, [sp, #24]
   585d0:	str	wzr, [sp, #16]
   585d4:	str	xzr, [sp, #8]
   585d8:	ldr	w0, [sp, #720]
   585dc:	str	w0, [sp]
   585e0:	ldr	w7, [sp, #188]
   585e4:	mov	x6, #0x0                   	// #0
   585e8:	mov	x5, x20
   585ec:	add	x4, sp, #0x170
   585f0:	ldr	x3, [sp, #200]
   585f4:	add	x2, sp, #0x178
   585f8:	mov	x1, x27
   585fc:	mov	x0, x26
   58600:	bl	528a8 <my_regprop@@Base+0x185e4>
   58604:	b	58040 <my_regprop@@Base+0x1dd7c>
   58608:	ldr	x0, [sp, #136]
   5860c:	tbz	w0, #13, 5803c <my_regprop@@Base+0x1dd78>
   58610:	b	583b8 <my_regprop@@Base+0x1e0f4>
   58614:	ldr	w1, [x0, #4]
   58618:	add	x0, x0, x1, lsl #2
   5861c:	b	583dc <my_regprop@@Base+0x1e118>
   58620:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58624:	add	x3, x3, #0xc10
   58628:	add	x3, x3, #0x970
   5862c:	mov	w2, #0x15e3                	// #5603
   58630:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58634:	add	x1, x1, #0xfb8
   58638:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5863c:	add	x0, x0, #0x7d0
   58640:	bl	58e0 <__assert_fail@plt>
   58644:	ldr	x0, [x25, #32]
   58648:	str	x0, [sp, #232]
   5864c:	ldr	x1, [sp, #160]
   58650:	cmp	x0, x1
   58654:	csel	x20, x0, x1, ge  // ge = tcont
   58658:	ldr	x1, [x25, #16]
   5865c:	ldr	w0, [x1, #12]
   58660:	and	w2, w0, #0x3ffc00
   58664:	and	w2, w2, #0xffe007ff
   58668:	cmp	w2, #0x400
   5866c:	b.ne	587d4 <my_regprop@@Base+0x1e510>  // b.any
   58670:	and	w3, w0, #0xf
   58674:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   58678:	ldr	x2, [x2, #3888]
   5867c:	ldrb	w2, [x2, w3, uxtw]
   58680:	cbz	w2, 5874c <my_regprop@@Base+0x1e488>
   58684:	and	w2, w0, #0xc000
   58688:	cmp	w2, #0x8, lsl #12
   5868c:	b.eq	58770 <my_regprop@@Base+0x1e4ac>  // b.none
   58690:	and	w0, w0, #0xff
   58694:	cmp	w0, #0xf
   58698:	b.eq	587a4 <my_regprop@@Base+0x1e4e0>  // b.none
   5869c:	ldr	x0, [x1]
   586a0:	ldr	x0, [x0, #16]
   586a4:	str	x0, [sp, #376]
   586a8:	ldr	x0, [x1, #16]
   586ac:	str	x0, [sp, #152]
   586b0:	ldr	x0, [x25, #32]
   586b4:	subs	x20, x20, x0
   586b8:	b.mi	587ec <my_regprop@@Base+0x1e528>  // b.first
   586bc:	ldr	w0, [x27, #192]
   586c0:	cbnz	w0, 58810 <my_regprop@@Base+0x1e54c>
   586c4:	str	x20, [sp, #224]
   586c8:	ldr	x2, [sp, #376]
   586cc:	sub	x2, x2, x20
   586d0:	str	x2, [sp, #376]
   586d4:	ldr	x0, [sp, #152]
   586d8:	add	x28, x0, x20
   586dc:	mov	w3, #0x0                   	// #0
   586e0:	mov	x1, x28
   586e4:	mov	x0, x26
   586e8:	bl	5390 <Perl_newSVpvn_flags@plt>
   586ec:	mov	x20, x0
   586f0:	ldr	w0, [x27, #192]
   586f4:	cbnz	w0, 58904 <my_regprop@@Base+0x1e640>
   586f8:	ldr	x28, [sp, #376]
   586fc:	ldr	x0, [sp, #368]
   58700:	cmp	x0, #0x0
   58704:	ldr	x0, [sp, #232]
   58708:	ldr	x1, [sp, #160]
   5870c:	ccmp	x0, x1, #0x0, eq  // eq = none
   58710:	b.le	5892c <my_regprop@@Base+0x1e668>
   58714:	sub	x0, x21, #0x1
   58718:	ldr	x1, [x25, #32]
   5871c:	madd	x0, x0, x23, x1
   58720:	str	x0, [x25, #32]
   58724:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   58728:	ldr	w1, [sp, #144]
   5872c:	cbnz	w1, 58744 <my_regprop@@Base+0x1e480>
   58730:	ldr	x0, [x25, #8]
   58734:	add	x0, x23, x0
   58738:	sub	x1, x22, #0x1
   5873c:	ldr	x2, [x25, #40]
   58740:	madd	x0, x0, x1, x2
   58744:	str	x0, [x25, #40]
   58748:	b	58084 <my_regprop@@Base+0x1ddc0>
   5874c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58750:	add	x3, x3, #0xc10
   58754:	add	x3, x3, #0x970
   58758:	mov	w2, #0x15f4                	// #5620
   5875c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58760:	add	x1, x1, #0xfb8
   58764:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58768:	add	x0, x0, #0xe40
   5876c:	bl	58e0 <__assert_fail@plt>
   58770:	and	w2, w0, #0xff
   58774:	sub	w2, w2, #0x9
   58778:	cmp	w2, #0x1
   5877c:	b.hi	58690 <my_regprop@@Base+0x1e3cc>  // b.pmore
   58780:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58784:	add	x3, x3, #0xc10
   58788:	add	x3, x3, #0x970
   5878c:	mov	w2, #0x15f4                	// #5620
   58790:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58794:	add	x1, x1, #0xfb8
   58798:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5879c:	add	x0, x0, #0xe70
   587a0:	bl	58e0 <__assert_fail@plt>
   587a4:	ldr	x0, [x1]
   587a8:	ldrb	w0, [x0, #129]
   587ac:	tbnz	w0, #6, 5869c <my_regprop@@Base+0x1e3d8>
   587b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   587b4:	add	x3, x3, #0xc10
   587b8:	add	x3, x3, #0x970
   587bc:	mov	w2, #0x15f4                	// #5620
   587c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   587c4:	add	x1, x1, #0xfb8
   587c8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   587cc:	add	x0, x0, #0xe88
   587d0:	bl	58e0 <__assert_fail@plt>
   587d4:	mov	w3, #0x22                  	// #34
   587d8:	add	x2, sp, #0x178
   587dc:	mov	x0, x26
   587e0:	bl	5200 <Perl_sv_2pv_flags@plt>
   587e4:	str	x0, [sp, #152]
   587e8:	b	586b0 <my_regprop@@Base+0x1e3ec>
   587ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   587f0:	add	x3, x3, #0xc10
   587f4:	add	x3, x3, #0x970
   587f8:	mov	w2, #0x15f6                	// #5622
   587fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58800:	add	x1, x1, #0xfb8
   58804:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   58808:	add	x0, x0, #0x7f8
   5880c:	bl	58e0 <__assert_fail@plt>
   58810:	ldr	x0, [x25, #16]
   58814:	ldr	x1, [x0]
   58818:	ldr	x0, [x0, #16]
   5881c:	ldr	x1, [x1, #16]
   58820:	add	x28, x0, x1
   58824:	ldr	x0, [sp, #152]
   58828:	cbz	x0, 58890 <my_regprop@@Base+0x1e5cc>
   5882c:	cbz	x28, 588b4 <my_regprop@@Base+0x1e5f0>
   58830:	ldr	x0, [sp, #152]
   58834:	cmp	x28, x0
   58838:	b.cc	588e0 <my_regprop@@Base+0x1e61c>  // b.lo, b.ul, b.last
   5883c:	mov	x2, x20
   58840:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   58844:	ldr	x1, [x1, #4064]
   58848:	cbz	x20, 588d8 <my_regprop@@Base+0x1e614>
   5884c:	ldrb	w3, [x0]
   58850:	ldrb	w3, [x1, w3, sxtw]
   58854:	sub	x4, x28, x0
   58858:	cmp	x3, x4
   5885c:	b.cs	58870 <my_regprop@@Base+0x1e5ac>  // b.hs, b.nlast
   58860:	add	x0, x0, x3
   58864:	subs	x2, x2, #0x1
   58868:	b.ne	5884c <my_regprop@@Base+0x1e588>  // b.any
   5886c:	mov	x28, x0
   58870:	ldr	x0, [sp, #152]
   58874:	sub	x0, x28, x0
   58878:	str	x0, [sp, #224]
   5887c:	ldr	x2, [sp, #376]
   58880:	sub	x2, x2, x0
   58884:	str	x2, [sp, #376]
   58888:	mov	w3, #0x20000000            	// #536870912
   5888c:	b	586e0 <my_regprop@@Base+0x1e41c>
   58890:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58894:	add	x3, x3, #0xc10
   58898:	add	x3, x3, #0x9d0
   5889c:	mov	w2, #0x60a                 	// #1546
   588a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   588a4:	add	x1, x1, #0xc80
   588a8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   588ac:	add	x0, x0, #0xce8
   588b0:	bl	58e0 <__assert_fail@plt>
   588b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   588b8:	add	x3, x3, #0xc10
   588bc:	add	x3, x3, #0x9d0
   588c0:	mov	w2, #0x60a                 	// #1546
   588c4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   588c8:	add	x1, x1, #0xc80
   588cc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   588d0:	add	x0, x0, #0x118
   588d4:	bl	58e0 <__assert_fail@plt>
   588d8:	mov	x28, x0
   588dc:	b	58870 <my_regprop@@Base+0x1e5ac>
   588e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   588e4:	add	x3, x3, #0xc10
   588e8:	add	x3, x3, #0x9d0
   588ec:	mov	w2, #0x610                 	// #1552
   588f0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   588f4:	add	x1, x1, #0xc80
   588f8:	adrp	x0, 6b000 <boot_re@@Base+0x941c>
   588fc:	add	x0, x0, #0xac8
   58900:	bl	58e0 <__assert_fail@plt>
   58904:	ldr	x2, [sp, #376]
   58908:	ldr	x0, [sp, #224]
   5890c:	add	x2, x0, x2
   58910:	ldr	x0, [sp, #152]
   58914:	add	x2, x0, x2
   58918:	mov	x1, x28
   5891c:	mov	x0, x26
   58920:	bl	5720 <Perl_utf8_length@plt>
   58924:	mov	x28, x0
   58928:	b	586fc <my_regprop@@Base+0x1e438>
   5892c:	cmp	x21, #0x1
   58930:	b.le	58084 <my_regprop@@Base+0x1ddc0>
   58934:	ldr	w0, [x20, #12]
   58938:	tbnz	w0, #28, 58958 <my_regprop@@Base+0x1e694>
   5893c:	ldr	x3, [x20]
   58940:	ldr	x1, [sp, #376]
   58944:	mul	x1, x21, x1
   58948:	add	x1, x1, #0x1
   5894c:	ldr	x2, [x3, #24]
   58950:	cmp	x2, x1
   58954:	b.cs	58ab4 <my_regprop@@Base+0x1e7f0>  // b.hs, b.nlast
   58958:	ldr	x2, [sp, #376]
   5895c:	mul	x2, x21, x2
   58960:	add	x2, x2, #0x1
   58964:	mov	x1, x20
   58968:	mov	x0, x26
   5896c:	bl	53c0 <Perl_sv_grow@plt>
   58970:	ldr	w0, [x20, #12]
   58974:	and	w2, w0, #0xf
   58978:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5897c:	ldr	x1, [x1, #3888]
   58980:	ldrb	w1, [x1, w2, uxtw]
   58984:	cbz	w1, 58b64 <my_regprop@@Base+0x1e8a0>
   58988:	and	w1, w0, #0xc000
   5898c:	cmp	w1, #0x8, lsl #12
   58990:	b.eq	58b88 <my_regprop@@Base+0x1e8c4>  // b.none
   58994:	and	w0, w0, #0xff
   58998:	cmp	w0, #0xf
   5899c:	b.ne	589ac <my_regprop@@Base+0x1e6e8>  // b.any
   589a0:	ldr	x0, [x20]
   589a4:	ldrb	w0, [x0, #129]
   589a8:	tbz	w0, #6, 58bbc <my_regprop@@Base+0x1e8f8>
   589ac:	ldr	x1, [x20, #16]
   589b0:	ldr	x0, [sp, #376]
   589b4:	sub	x2, x21, #0x1
   589b8:	str	x2, [sp, #152]
   589bc:	mov	x3, x2
   589c0:	mov	w2, w0
   589c4:	add	x0, x1, x0
   589c8:	bl	4eb0 <Perl_repeatcpy@plt>
   589cc:	ldr	w0, [x20, #12]
   589d0:	and	w2, w0, #0xf
   589d4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   589d8:	ldr	x1, [x1, #3888]
   589dc:	ldrb	w1, [x1, w2, uxtw]
   589e0:	cbz	w1, 58be0 <my_regprop@@Base+0x1e91c>
   589e4:	and	w1, w0, #0xc000
   589e8:	cmp	w1, #0x8, lsl #12
   589ec:	b.eq	58c04 <my_regprop@@Base+0x1e940>  // b.none
   589f0:	and	w0, w0, #0xff
   589f4:	cmp	w0, #0xf
   589f8:	b.eq	58c7c <my_regprop@@Base+0x1e9b8>  // b.none
   589fc:	ldr	x1, [x20]
   58a00:	str	x21, [sp, #160]
   58a04:	ldr	x0, [x1, #16]
   58a08:	mul	x0, x0, x21
   58a0c:	str	x0, [x1, #16]
   58a10:	ldr	x1, [x25, #16]
   58a14:	ldr	w0, [x1, #12]
   58a18:	and	w3, w0, #0xf
   58a1c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   58a20:	ldr	x2, [x2, #3888]
   58a24:	ldrb	w2, [x2, w3, uxtw]
   58a28:	cbz	w2, 58ce4 <my_regprop@@Base+0x1ea20>
   58a2c:	and	w2, w0, #0xc000
   58a30:	cmp	w2, #0x8, lsl #12
   58a34:	b.eq	58d08 <my_regprop@@Base+0x1ea44>  // b.none
   58a38:	and	w0, w0, #0xff
   58a3c:	cmp	w0, #0xf
   58a40:	b.ne	58a58 <my_regprop@@Base+0x1e794>  // b.any
   58a44:	ldr	x0, [x1]
   58a48:	ldrb	w0, [x0, #129]
   58a4c:	tbz	w0, #6, 58d80 <my_regprop@@Base+0x1eabc>
   58a50:	cmp	w2, #0x8, lsl #12
   58a54:	b.eq	5abc4 <my_regprop@@Base+0x20900>  // b.none
   58a58:	ldr	x1, [x1]
   58a5c:	ldr	x0, [x1, #16]
   58a60:	ldr	x2, [sp, #376]
   58a64:	sub	x0, x0, x2
   58a68:	str	x0, [x1, #16]
   58a6c:	mov	w3, #0x2                   	// #2
   58a70:	mov	x2, x20
   58a74:	ldr	x1, [x25, #16]
   58a78:	mov	x0, x26
   58a7c:	bl	5690 <Perl_sv_catsv_flags@plt>
   58a80:	ldr	x0, [x25, #16]
   58a84:	ldr	w1, [x0, #12]
   58a88:	tbz	w1, #29, 58a94 <my_regprop@@Base+0x1e7d0>
   58a8c:	tst	w1, #0xe00000
   58a90:	b.ne	58da4 <my_regprop@@Base+0x1eae0>  // b.any
   58a94:	ldr	x0, [sp, #160]
   58a98:	mul	x28, x28, x0
   58a9c:	ldr	x1, [x25, #24]
   58aa0:	ldr	x0, [sp, #376]
   58aa4:	ldr	x2, [sp, #152]
   58aa8:	madd	x0, x2, x0, x1
   58aac:	str	x0, [x25, #24]
   58ab0:	b	58084 <my_regprop@@Base+0x1ddc0>
   58ab4:	and	w2, w0, #0xf
   58ab8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   58abc:	ldr	x1, [x1, #3888]
   58ac0:	ldrb	w1, [x1, w2, uxtw]
   58ac4:	cbz	w1, 58b0c <my_regprop@@Base+0x1e848>
   58ac8:	and	w1, w0, #0xc000
   58acc:	cmp	w1, #0x8, lsl #12
   58ad0:	b.eq	58b30 <my_regprop@@Base+0x1e86c>  // b.none
   58ad4:	and	w1, w0, #0xff
   58ad8:	cmp	w1, #0xf
   58adc:	b.ne	58988 <my_regprop@@Base+0x1e6c4>  // b.any
   58ae0:	ldrb	w1, [x3, #129]
   58ae4:	tbnz	w1, #6, 58988 <my_regprop@@Base+0x1e6c4>
   58ae8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58aec:	add	x3, x3, #0xc10
   58af0:	add	x3, x3, #0x970
   58af4:	mov	w2, #0x1605                	// #5637
   58af8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58afc:	add	x1, x1, #0xfb8
   58b00:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58b04:	add	x0, x0, #0xd58
   58b08:	bl	58e0 <__assert_fail@plt>
   58b0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58b10:	add	x3, x3, #0xc10
   58b14:	add	x3, x3, #0x970
   58b18:	mov	w2, #0x1605                	// #5637
   58b1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58b20:	add	x1, x1, #0xfb8
   58b24:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58b28:	add	x0, x0, #0xd10
   58b2c:	bl	58e0 <__assert_fail@plt>
   58b30:	and	w1, w0, #0xff
   58b34:	sub	w1, w1, #0x9
   58b38:	cmp	w1, #0x1
   58b3c:	b.hi	58ad4 <my_regprop@@Base+0x1e810>  // b.pmore
   58b40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58b44:	add	x3, x3, #0xc10
   58b48:	add	x3, x3, #0x970
   58b4c:	mov	w2, #0x1605                	// #5637
   58b50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58b54:	add	x1, x1, #0xfb8
   58b58:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58b5c:	add	x0, x0, #0xd40
   58b60:	bl	58e0 <__assert_fail@plt>
   58b64:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58b68:	add	x3, x3, #0xc10
   58b6c:	add	x3, x3, #0x970
   58b70:	mov	w2, #0x1606                	// #5638
   58b74:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58b78:	add	x1, x1, #0xfb8
   58b7c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58b80:	add	x0, x0, #0xd10
   58b84:	bl	58e0 <__assert_fail@plt>
   58b88:	and	w1, w0, #0xff
   58b8c:	sub	w1, w1, #0x9
   58b90:	cmp	w1, #0x1
   58b94:	b.hi	58994 <my_regprop@@Base+0x1e6d0>  // b.pmore
   58b98:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58b9c:	add	x3, x3, #0xc10
   58ba0:	add	x3, x3, #0x970
   58ba4:	mov	w2, #0x1606                	// #5638
   58ba8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58bac:	add	x1, x1, #0xfb8
   58bb0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58bb4:	add	x0, x0, #0xd40
   58bb8:	bl	58e0 <__assert_fail@plt>
   58bbc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58bc0:	add	x3, x3, #0xc10
   58bc4:	add	x3, x3, #0x970
   58bc8:	mov	w2, #0x1606                	// #5638
   58bcc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58bd0:	add	x1, x1, #0xfb8
   58bd4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58bd8:	add	x0, x0, #0xd58
   58bdc:	bl	58e0 <__assert_fail@plt>
   58be0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58be4:	add	x3, x3, #0xc10
   58be8:	add	x3, x3, #0x970
   58bec:	mov	w2, #0x1609                	// #5641
   58bf0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58bf4:	add	x1, x1, #0xfb8
   58bf8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   58bfc:	add	x0, x0, #0x808
   58c00:	bl	58e0 <__assert_fail@plt>
   58c04:	and	w2, w0, #0xff
   58c08:	sub	w2, w2, #0x9
   58c0c:	cmp	w2, #0x1
   58c10:	b.ls	58c58 <my_regprop@@Base+0x1e994>  // b.plast
   58c14:	and	w0, w0, #0xff
   58c18:	cmp	w0, #0xf
   58c1c:	b.eq	58c7c <my_regprop@@Base+0x1e9b8>  // b.none
   58c20:	cmp	w1, #0x8, lsl #12
   58c24:	b.ne	589fc <my_regprop@@Base+0x1e738>  // b.any
   58c28:	sub	w0, w0, #0x9
   58c2c:	cmp	w0, #0x1
   58c30:	b.hi	589fc <my_regprop@@Base+0x1e738>  // b.pmore
   58c34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58c38:	add	x3, x3, #0xc10
   58c3c:	add	x3, x3, #0x970
   58c40:	mov	w2, #0x1609                	// #5641
   58c44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58c48:	add	x1, x1, #0xfb8
   58c4c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58c50:	add	x0, x0, #0xe70
   58c54:	bl	58e0 <__assert_fail@plt>
   58c58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58c5c:	add	x3, x3, #0xc10
   58c60:	add	x3, x3, #0x970
   58c64:	mov	w2, #0x1609                	// #5641
   58c68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58c6c:	add	x1, x1, #0xfb8
   58c70:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   58c74:	add	x0, x0, #0x838
   58c78:	bl	58e0 <__assert_fail@plt>
   58c7c:	ldr	x0, [x20]
   58c80:	ldrb	w0, [x0, #129]
   58c84:	tbz	w0, #6, 58cc0 <my_regprop@@Base+0x1e9fc>
   58c88:	cmp	w1, #0x8, lsl #12
   58c8c:	b.ne	589fc <my_regprop@@Base+0x1e738>  // b.any
   58c90:	ldr	x0, [x20]
   58c94:	ldrb	w0, [x0, #129]
   58c98:	tbnz	w0, #6, 589fc <my_regprop@@Base+0x1e738>
   58c9c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58ca0:	add	x3, x3, #0xc10
   58ca4:	add	x3, x3, #0x970
   58ca8:	mov	w2, #0x1609                	// #5641
   58cac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58cb0:	add	x1, x1, #0xfb8
   58cb4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58cb8:	add	x0, x0, #0xe88
   58cbc:	bl	58e0 <__assert_fail@plt>
   58cc0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58cc4:	add	x3, x3, #0xc10
   58cc8:	add	x3, x3, #0x970
   58ccc:	mov	w2, #0x1609                	// #5641
   58cd0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58cd4:	add	x1, x1, #0xfb8
   58cd8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   58cdc:	add	x0, x0, #0x850
   58ce0:	bl	58e0 <__assert_fail@plt>
   58ce4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58ce8:	add	x3, x3, #0xc10
   58cec:	add	x3, x3, #0x970
   58cf0:	mov	w2, #0x160b                	// #5643
   58cf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58cf8:	add	x1, x1, #0xfb8
   58cfc:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   58d00:	add	x0, x0, #0xba0
   58d04:	bl	58e0 <__assert_fail@plt>
   58d08:	and	w3, w0, #0xff
   58d0c:	sub	w3, w3, #0x9
   58d10:	cmp	w3, #0x1
   58d14:	b.ls	58d5c <my_regprop@@Base+0x1ea98>  // b.plast
   58d18:	and	w0, w0, #0xff
   58d1c:	cmp	w0, #0xf
   58d20:	b.eq	58a44 <my_regprop@@Base+0x1e780>  // b.none
   58d24:	cmp	w2, #0x8, lsl #12
   58d28:	b.ne	58a58 <my_regprop@@Base+0x1e794>  // b.any
   58d2c:	sub	w0, w0, #0x9
   58d30:	cmp	w0, #0x1
   58d34:	b.hi	58a58 <my_regprop@@Base+0x1e794>  // b.pmore
   58d38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58d3c:	add	x3, x3, #0xc10
   58d40:	add	x3, x3, #0x970
   58d44:	mov	w2, #0x160c                	// #5644
   58d48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58d4c:	add	x1, x1, #0xfb8
   58d50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   58d54:	add	x0, x0, #0xe70
   58d58:	bl	58e0 <__assert_fail@plt>
   58d5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58d60:	add	x3, x3, #0xc10
   58d64:	add	x3, x3, #0x970
   58d68:	mov	w2, #0x160b                	// #5643
   58d6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58d70:	add	x1, x1, #0xfb8
   58d74:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   58d78:	add	x0, x0, #0xbd8
   58d7c:	bl	58e0 <__assert_fail@plt>
   58d80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58d84:	add	x3, x3, #0xc10
   58d88:	add	x3, x3, #0x970
   58d8c:	mov	w2, #0x160b                	// #5643
   58d90:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58d94:	add	x1, x1, #0xfb8
   58d98:	adrp	x0, 77000 <boot_re@@Base+0x1541c>
   58d9c:	add	x0, x0, #0xbf8
   58da0:	bl	58e0 <__assert_fail@plt>
   58da4:	mov	w1, #0x77                  	// #119
   58da8:	bl	57d0 <Perl_mg_find@plt>
   58dac:	cbz	x0, 58a94 <my_regprop@@Base+0x1e7d0>
   58db0:	ldr	x1, [x0, #24]
   58db4:	tbnz	x1, #63, 58a94 <my_regprop@@Base+0x1e7d0>
   58db8:	ldr	x2, [sp, #152]
   58dbc:	madd	x1, x2, x28, x1
   58dc0:	str	x1, [x0, #24]
   58dc4:	b	58a94 <my_regprop@@Base+0x1e7d0>
   58dc8:	ldr	w4, [sp, #144]
   58dcc:	ldr	x3, [sp, #200]
   58dd0:	mov	x2, x25
   58dd4:	mov	x1, x27
   58dd8:	mov	x0, x26
   58ddc:	bl	32660 <Perl_re_indentf@@Base+0x434>
   58de0:	cmp	x20, #0x0
   58de4:	ldr	w0, [sp, #208]
   58de8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   58dec:	b.eq	58e44 <my_regprop@@Base+0x1eb80>  // b.none
   58df0:	ldr	x19, [x25, #16]
   58df4:	ldr	w0, [x19, #12]
   58df8:	tbz	w0, #29, 58e04 <my_regprop@@Base+0x1eb40>
   58dfc:	tst	w0, #0xe00000
   58e00:	b.ne	58e50 <my_regprop@@Base+0x1eb8c>  // b.any
   58e04:	mov	w3, #0x2                   	// #2
   58e08:	mov	x2, x20
   58e0c:	mov	x1, x19
   58e10:	mov	x0, x26
   58e14:	bl	55b0 <Perl_sv_setsv_flags@plt>
   58e18:	ldr	x0, [x25]
   58e1c:	str	x0, [x25, #24]
   58e20:	sub	x1, x0, x28
   58e24:	str	x1, [x25, #32]
   58e28:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   58e2c:	ldr	w2, [sp, #144]
   58e30:	cbnz	w2, 58e40 <my_regprop@@Base+0x1eb7c>
   58e34:	ldr	x1, [x25, #8]
   58e38:	add	x0, x0, x1
   58e3c:	sub	x1, x0, x28
   58e40:	str	x1, [x25, #40]
   58e44:	mov	w0, #0x1                   	// #1
   58e48:	strb	w0, [x25, #48]
   58e4c:	b	580e8 <my_regprop@@Base+0x1de24>
   58e50:	mov	w1, #0x77                  	// #119
   58e54:	mov	x0, x19
   58e58:	bl	57d0 <Perl_mg_find@plt>
   58e5c:	cbz	x0, 58e04 <my_regprop@@Base+0x1eb40>
   58e60:	mov	x1, #0xffffffffffffffff    	// #-1
   58e64:	str	x1, [x0, #24]
   58e68:	b	58e04 <my_regprop@@Base+0x1eb40>
   58e6c:	mov	x1, x20
   58e70:	mov	x0, x26
   58e74:	bl	5860 <Perl_sv_free2@plt>
   58e78:	b	58100 <my_regprop@@Base+0x1de3c>
   58e7c:	ldrh	w1, [x24, #2]
   58e80:	add	w0, w0, w1
   58e84:	strh	w0, [x24, #2]
   58e88:	mov	x1, x24
   58e8c:	mov	x0, x26
   58e90:	bl	58a0 <Perl_regnext@plt>
   58e94:	ldrb	w1, [x0, #1]
   58e98:	ldrb	w1, [x19, w1, sxtw]
   58e9c:	cmp	w1, #0x2f
   58ea0:	b.ne	54b84 <my_regprop@@Base+0x1a8c0>  // b.any
   58ea4:	ldrh	w0, [x0, #2]
   58ea8:	cbnz	w0, 58e7c <my_regprop@@Base+0x1ebb8>
   58eac:	b	54b84 <my_regprop@@Base+0x1a8c0>
   58eb0:	ldr	w4, [sp, #144]
   58eb4:	ldr	x3, [sp, #200]
   58eb8:	mov	x2, x25
   58ebc:	mov	x1, x27
   58ec0:	mov	x0, x26
   58ec4:	bl	32660 <Perl_re_indentf@@Base+0x434>
   58ec8:	mov	w0, #0x1                   	// #1
   58ecc:	strb	w0, [x25, #48]
   58ed0:	b	57b74 <my_regprop@@Base+0x1d8b0>
   58ed4:	ldr	x19, [x25, #168]
   58ed8:	cbz	x19, 58f1c <my_regprop@@Base+0x1ec58>
   58edc:	ldrb	w1, [x19, #1]
   58ee0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   58ee4:	ldr	x0, [x0, #3768]
   58ee8:	ldrb	w0, [x0, w1, sxtw]
   58eec:	cmp	w0, #0x12
   58ef0:	b.ne	58f40 <my_regprop@@Base+0x1ec7c>  // b.any
   58ef4:	ldrh	w0, [x19, #2]
   58ef8:	cmp	w0, #0x1
   58efc:	b.ne	58f40 <my_regprop@@Base+0x1ec7c>  // b.any
   58f00:	mov	x3, #0xffffffffffffffff    	// #-1
   58f04:	mov	x2, #0x0                   	// #0
   58f08:	ldr	x1, [x19, #48]
   58f0c:	mov	x0, x26
   58f10:	bl	5450 <Perl__add_range_to_invlist@plt>
   58f14:	str	x0, [x19, #48]
   58f18:	b	57b98 <my_regprop@@Base+0x1d8d4>
   58f1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58f20:	add	x3, x3, #0xc10
   58f24:	add	x3, x3, #0x360
   58f28:	mov	w2, #0x7d2                 	// #2002
   58f2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58f30:	add	x1, x1, #0xfb8
   58f34:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   58f38:	add	x0, x0, #0xb8
   58f3c:	bl	58e0 <__assert_fail@plt>
   58f40:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   58f44:	add	x3, x3, #0xc10
   58f48:	add	x3, x3, #0x360
   58f4c:	mov	w2, #0x7d4                 	// #2004
   58f50:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   58f54:	add	x1, x1, #0xfb8
   58f58:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   58f5c:	add	x0, x0, #0xc0
   58f60:	bl	58e0 <__assert_fail@plt>
   58f64:	cmp	w0, #0x63
   58f68:	b.eq	5903c <my_regprop@@Base+0x1ed78>  // b.none
   58f6c:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   58f70:	ldr	x2, [x2, #4000]
   58f74:	ldrb	w2, [x2, w5, sxtw]
   58f78:	asr	w4, w2, w4
   58f7c:	and	w20, w4, #0x1
   58f80:	tbz	w4, #0, 59c60 <my_regprop@@Base+0x1f99c>
   58f84:	ldr	x0, [sp, #136]
   58f88:	tbnz	w0, #10, 59308 <my_regprop@@Base+0x1f044>
   58f8c:	ldr	x0, [sp, #192]
   58f90:	add	x0, x0, #0x1
   58f94:	str	x0, [sp, #192]
   58f98:	ldr	w0, [sp, #136]
   58f9c:	tst	w0, #0x1800
   58fa0:	b.eq	54b74 <my_regprop@@Base+0x1a8b0>  // b.none
   58fa4:	str	xzr, [sp, #376]
   58fa8:	ldr	x1, [x25, #168]
   58fac:	ldrb	w0, [x1]
   58fb0:	and	w0, w0, #0xfffffffe
   58fb4:	strb	w0, [x1]
   58fb8:	ldr	x3, [sp, #336]
   58fbc:	ldrb	w2, [x3, #1]
   58fc0:	cmp	w2, #0x1a
   58fc4:	b.eq	5990c <my_regprop@@Base+0x1f648>  // b.none
   58fc8:	b.hi	59370 <my_regprop@@Base+0x1f0ac>  // b.pmore
   58fcc:	cmp	w2, #0x16
   58fd0:	b.hi	59330 <my_regprop@@Base+0x1f06c>  // b.pmore
   58fd4:	cmp	w2, #0x11
   58fd8:	b.hi	59758 <my_regprop@@Base+0x1f494>  // b.pmore
   58fdc:	cmp	w2, #0x10
   58fe0:	b.eq	59508 <my_regprop@@Base+0x1f244>  // b.none
   58fe4:	cmp	w2, #0x11
   58fe8:	b.ne	594b0 <my_regprop@@Base+0x1f1ec>  // b.any
   58fec:	ldr	x0, [sp, #136]
   58ff0:	tbz	w0, #12, 5942c <my_regprop@@Base+0x1f168>
   58ff4:	ldr	x19, [x25, #168]
   58ff8:	cbz	x19, 594c0 <my_regprop@@Base+0x1f1fc>
   58ffc:	ldrb	w1, [x19, #1]
   59000:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   59004:	ldr	x0, [x0, #3768]
   59008:	ldrb	w0, [x0, w1, sxtw]
   5900c:	cmp	w0, #0x12
   59010:	b.ne	594e4 <my_regprop@@Base+0x1f220>  // b.any
   59014:	ldrh	w0, [x19, #2]
   59018:	cmp	w0, #0x1
   5901c:	b.ne	594e4 <my_regprop@@Base+0x1f220>  // b.any
   59020:	mov	x3, #0xffffffffffffffff    	// #-1
   59024:	mov	x2, #0x0                   	// #0
   59028:	ldr	x1, [x19, #48]
   5902c:	mov	x0, x26
   59030:	bl	5450 <Perl__add_range_to_invlist@plt>
   59034:	str	x0, [x19, #48]
   59038:	b	599b0 <my_regprop@@Base+0x1f6ec>
   5903c:	ldr	w0, [sp, #136]
   59040:	tst	w0, #0x1800
   59044:	b.eq	59060 <my_regprop@@Base+0x1ed9c>  // b.none
   59048:	tbnz	w0, #11, 590d0 <my_regprop@@Base+0x1ee0c>
   5904c:	ldr	x0, [sp, #136]
   59050:	tbnz	w0, #12, 59224 <my_regprop@@Base+0x1ef60>
   59054:	ldr	w0, [sp, #136]
   59058:	and	w0, w0, #0xffffe7ff
   5905c:	str	w0, [sp, #136]
   59060:	ldr	x0, [sp, #192]
   59064:	add	x0, x0, #0x1
   59068:	str	x0, [sp, #192]
   5906c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   59070:	ldr	x1, [sp, #216]
   59074:	cmp	x1, x0
   59078:	cinc	x0, x1, ne  // ne = any
   5907c:	str	x0, [sp, #216]
   59080:	ldr	x0, [sp, #136]
   59084:	tbz	w0, #10, 54b74 <my_regprop@@Base+0x1a8b0>
   59088:	ldr	w4, [sp, #144]
   5908c:	ldr	x3, [sp, #200]
   59090:	mov	x2, x25
   59094:	mov	x1, x27
   59098:	mov	x0, x26
   5909c:	bl	32660 <Perl_re_indentf@@Base+0x434>
   590a0:	ldr	x0, [x25]
   590a4:	add	x0, x0, #0x1
   590a8:	str	x0, [x25]
   590ac:	ldr	x0, [x25, #8]
   590b0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   590b4:	cmp	x0, x1
   590b8:	b.eq	590c4 <my_regprop@@Base+0x1ee00>  // b.none
   590bc:	add	x0, x0, #0x1
   590c0:	str	x0, [x25, #8]
   590c4:	mov	w0, #0x1                   	// #1
   590c8:	strb	w0, [x25, #48]
   590cc:	b	54b74 <my_regprop@@Base+0x1a8b0>
   590d0:	ldr	x0, [x25, #168]
   590d4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   590d8:	ldr	x1, [x1, #3928]
   590dc:	ldr	x2, [x1, #120]
   590e0:	cbz	x0, 59170 <my_regprop@@Base+0x1eeac>
   590e4:	cbz	x2, 59194 <my_regprop@@Base+0x1eed0>
   590e8:	ldrb	w3, [x0, #1]
   590ec:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   590f0:	ldr	x1, [x1, #3768]
   590f4:	ldrb	w1, [x1, w3, sxtw]
   590f8:	cmp	w1, #0x12
   590fc:	b.ne	591b8 <my_regprop@@Base+0x1eef4>  // b.any
   59100:	ldrh	w1, [x0, #2]
   59104:	cmp	w1, #0x1
   59108:	b.ne	591b8 <my_regprop@@Base+0x1eef4>  // b.any
   5910c:	add	x4, x0, #0x30
   59110:	mov	w3, #0x0                   	// #0
   59114:	ldr	x1, [x0, #48]
   59118:	mov	x0, x26
   5911c:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   59120:	ldr	x0, [x25, #168]
   59124:	cbz	x0, 591dc <my_regprop@@Base+0x1ef18>
   59128:	ldrb	w2, [x0, #1]
   5912c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59130:	ldr	x1, [x1, #3768]
   59134:	ldrb	w1, [x1, w2, sxtw]
   59138:	cmp	w1, #0x12
   5913c:	b.ne	59200 <my_regprop@@Base+0x1ef3c>  // b.any
   59140:	ldrh	w1, [x0, #2]
   59144:	cmp	w1, #0x1
   59148:	b.ne	59200 <my_regprop@@Base+0x1ef3c>  // b.any
   5914c:	str	wzr, [x0, #40]
   59150:	ldrb	w1, [x0]
   59154:	and	w1, w1, #0xfffffff9
   59158:	strb	w1, [x0]
   5915c:	ldr	x1, [x25, #168]
   59160:	ldrb	w0, [x1]
   59164:	and	w0, w0, #0xfffffffe
   59168:	strb	w0, [x1]
   5916c:	b	59054 <my_regprop@@Base+0x1ed90>
   59170:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59174:	add	x3, x3, #0xc10
   59178:	add	x3, x3, #0x498
   5917c:	mov	w2, #0x7c5                 	// #1989
   59180:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59184:	add	x1, x1, #0xfb8
   59188:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5918c:	add	x0, x0, #0xb8
   59190:	bl	58e0 <__assert_fail@plt>
   59194:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59198:	add	x3, x3, #0xc10
   5919c:	add	x3, x3, #0x498
   591a0:	mov	w2, #0x7c5                 	// #1989
   591a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   591a8:	add	x1, x1, #0xfb8
   591ac:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   591b0:	add	x0, x0, #0x568
   591b4:	bl	58e0 <__assert_fail@plt>
   591b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   591bc:	add	x3, x3, #0xc10
   591c0:	add	x3, x3, #0x498
   591c4:	mov	w2, #0x7c7                 	// #1991
   591c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   591cc:	add	x1, x1, #0xfb8
   591d0:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   591d4:	add	x0, x0, #0xc0
   591d8:	bl	58e0 <__assert_fail@plt>
   591dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   591e0:	add	x3, x3, #0xc10
   591e4:	add	x3, x3, #0x9a0
   591e8:	mov	w2, #0x7ef                 	// #2031
   591ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   591f0:	add	x1, x1, #0xfb8
   591f4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   591f8:	add	x0, x0, #0xb8
   591fc:	bl	58e0 <__assert_fail@plt>
   59200:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59204:	add	x3, x3, #0xc10
   59208:	add	x3, x3, #0x9a0
   5920c:	mov	w2, #0x7f1                 	// #2033
   59210:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59214:	add	x1, x1, #0xfb8
   59218:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5921c:	add	x0, x0, #0xc0
   59220:	bl	58e0 <__assert_fail@plt>
   59224:	ldr	x0, [x25, #168]
   59228:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5922c:	ldr	x1, [x1, #3928]
   59230:	ldr	x2, [x1, #120]
   59234:	cbz	x0, 5929c <my_regprop@@Base+0x1efd8>
   59238:	cbz	x2, 592c0 <my_regprop@@Base+0x1effc>
   5923c:	ldrb	w3, [x0, #1]
   59240:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59244:	ldr	x1, [x1, #3768]
   59248:	ldrb	w1, [x1, w3, sxtw]
   5924c:	cmp	w1, #0x12
   59250:	b.ne	592e4 <my_regprop@@Base+0x1f020>  // b.any
   59254:	ldrh	w1, [x0, #2]
   59258:	cmp	w1, #0x1
   5925c:	b.ne	592e4 <my_regprop@@Base+0x1f020>  // b.any
   59260:	add	x4, x0, #0x30
   59264:	mov	w3, #0x0                   	// #0
   59268:	ldr	x1, [x0, #48]
   5926c:	mov	x0, x26
   59270:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   59274:	ldr	x3, [sp, #296]
   59278:	ldr	x2, [x25, #168]
   5927c:	mov	x1, x27
   59280:	mov	x0, x26
   59284:	bl	2eb68 <my_regexec@@Base+0xb674>
   59288:	ldr	x1, [x25, #168]
   5928c:	ldrb	w0, [x1]
   59290:	and	w0, w0, #0xfffffffe
   59294:	strb	w0, [x1]
   59298:	b	59054 <my_regprop@@Base+0x1ed90>
   5929c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   592a0:	add	x3, x3, #0xc10
   592a4:	add	x3, x3, #0x370
   592a8:	mov	w2, #0x7b6                 	// #1974
   592ac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   592b0:	add	x1, x1, #0xfb8
   592b4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   592b8:	add	x0, x0, #0xb8
   592bc:	bl	58e0 <__assert_fail@plt>
   592c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   592c4:	add	x3, x3, #0xc10
   592c8:	add	x3, x3, #0x370
   592cc:	mov	w2, #0x7b6                 	// #1974
   592d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   592d4:	add	x1, x1, #0xfb8
   592d8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   592dc:	add	x0, x0, #0x568
   592e0:	bl	58e0 <__assert_fail@plt>
   592e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   592e8:	add	x3, x3, #0xc10
   592ec:	add	x3, x3, #0x370
   592f0:	mov	w2, #0x7b8                 	// #1976
   592f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   592f8:	add	x1, x1, #0xfb8
   592fc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59300:	add	x0, x0, #0xc0
   59304:	bl	58e0 <__assert_fail@plt>
   59308:	ldr	w4, [sp, #144]
   5930c:	ldr	x3, [sp, #200]
   59310:	mov	x2, x25
   59314:	mov	x1, x27
   59318:	mov	x0, x26
   5931c:	bl	32660 <Perl_re_indentf@@Base+0x434>
   59320:	ldr	x0, [x25]
   59324:	add	x0, x0, #0x1
   59328:	str	x0, [x25]
   5932c:	b	58f8c <my_regprop@@Base+0x1ecc8>
   59330:	cmp	w2, #0x18
   59334:	b.hi	5945c <my_regprop@@Base+0x1f198>  // b.pmore
   59338:	mov	x1, x3
   5933c:	mov	x0, x26
   59340:	bl	27b90 <my_regexec@@Base+0x469c>
   59344:	mov	x19, x0
   59348:	ldr	x0, [sp, #136]
   5934c:	tbnz	w0, #12, 59788 <my_regprop@@Base+0x1f4c4>
   59350:	ldr	x0, [sp, #136]
   59354:	tbnz	w0, #11, 59840 <my_regprop@@Base+0x1f57c>
   59358:	ldr	w2, [x19, #8]
   5935c:	cmp	w2, #0x1
   59360:	b.ls	598f8 <my_regprop@@Base+0x1f634>  // b.plast
   59364:	sub	w2, w2, #0x1
   59368:	str	w2, [x19, #8]
   5936c:	b	59424 <my_regprop@@Base+0x1f160>
   59370:	cmp	w2, #0x1e
   59374:	b.eq	59908 <my_regprop@@Base+0x1f644>  // b.none
   59378:	b.ls	5943c <my_regprop@@Base+0x1f178>  // b.plast
   5937c:	cmp	w2, #0x1f
   59380:	b.eq	59a78 <my_regprop@@Base+0x1f7b4>  // b.none
   59384:	cmp	w2, #0x20
   59388:	b.ne	594b0 <my_regprop@@Base+0x1f1ec>  // b.any
   5938c:	ldr	w19, [sp, #312]
   59390:	ldrb	w1, [x3]
   59394:	mov	x2, #0x0                   	// #0
   59398:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5939c:	ldr	x0, [x0, #3904]
   593a0:	ldr	x1, [x0, x1, lsl #3]
   593a4:	mov	x0, x26
   593a8:	bl	5500 <Perl_invlist_clone@plt>
   593ac:	str	x0, [sp, #376]
   593b0:	ldr	x0, [sp, #136]
   593b4:	tbnz	w0, #11, 59a80 <my_regprop@@Base+0x1f7bc>
   593b8:	ldr	x0, [sp, #136]
   593bc:	tbz	w0, #12, 59bc4 <my_regprop@@Base+0x1f900>
   593c0:	ldr	x0, [x25, #168]
   593c4:	ldr	x2, [sp, #376]
   593c8:	cbz	x0, 59be8 <my_regprop@@Base+0x1f924>
   593cc:	cbz	x2, 59c0c <my_regprop@@Base+0x1f948>
   593d0:	ldrb	w3, [x0, #1]
   593d4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   593d8:	ldr	x1, [x1, #3768]
   593dc:	ldrb	w1, [x1, w3, sxtw]
   593e0:	cmp	w1, #0x12
   593e4:	b.ne	59c30 <my_regprop@@Base+0x1f96c>  // b.any
   593e8:	ldrh	w1, [x0, #2]
   593ec:	cmp	w1, #0x1
   593f0:	b.ne	59c30 <my_regprop@@Base+0x1f96c>  // b.any
   593f4:	add	x4, x0, #0x30
   593f8:	mov	w3, w19
   593fc:	ldr	x1, [x0, #48]
   59400:	mov	x0, x26
   59404:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   59408:	ldr	x1, [sp, #376]
   5940c:	cbz	x1, 599b0 <my_regprop@@Base+0x1f6ec>
   59410:	ldr	w2, [x1, #8]
   59414:	cmp	w2, #0x1
   59418:	b.ls	59c54 <my_regprop@@Base+0x1f990>  // b.plast
   5941c:	sub	w2, w2, #0x1
   59420:	str	w2, [x1, #8]
   59424:	ldr	x0, [sp, #136]
   59428:	tbnz	w0, #12, 599b0 <my_regprop@@Base+0x1f6ec>
   5942c:	ldr	w0, [sp, #136]
   59430:	and	w0, w0, #0xffffe7ff
   59434:	str	w0, [sp, #136]
   59438:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5943c:	cmp	w2, #0x1c
   59440:	b.eq	59390 <my_regprop@@Base+0x1f0cc>  // b.none
   59444:	cmp	w2, #0x1d
   59448:	b.ne	59454 <my_regprop@@Base+0x1f190>  // b.any
   5944c:	ldr	w19, [sp, #312]
   59450:	b	5945c <my_regprop@@Base+0x1f198>
   59454:	cmp	w2, #0x1b
   59458:	b.ne	594b0 <my_regprop@@Base+0x1f1ec>  // b.any
   5945c:	ldrb	w1, [x3]
   59460:	mov	x2, #0x0                   	// #0
   59464:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   59468:	ldr	x0, [x0, #3928]
   5946c:	ldr	x1, [x0, x1, lsl #3]
   59470:	mov	x0, x26
   59474:	bl	5500 <Perl_invlist_clone@plt>
   59478:	mov	x1, x0
   5947c:	str	x0, [sp, #376]
   59480:	ldr	x0, [sp, #336]
   59484:	ldrb	w0, [x0, #1]
   59488:	cmp	w0, #0x1d
   5948c:	b.ne	593b0 <my_regprop@@Base+0x1f0ec>  // b.any
   59490:	add	x4, sp, #0x178
   59494:	mov	w3, #0x1                   	// #1
   59498:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5949c:	ldr	x0, [x0, #3960]
   594a0:	ldr	x2, [x0]
   594a4:	mov	x0, x26
   594a8:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   594ac:	b	593b0 <my_regprop@@Base+0x1f0ec>
   594b0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   594b4:	add	x1, x1, #0x8c0
   594b8:	mov	x0, x26
   594bc:	bl	5420 <Perl_croak@plt>
   594c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   594c4:	add	x3, x3, #0xc10
   594c8:	add	x3, x3, #0x360
   594cc:	mov	w2, #0x7d2                 	// #2002
   594d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   594d4:	add	x1, x1, #0xfb8
   594d8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   594dc:	add	x0, x0, #0xb8
   594e0:	bl	58e0 <__assert_fail@plt>
   594e4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   594e8:	add	x3, x3, #0xc10
   594ec:	add	x3, x3, #0x360
   594f0:	mov	w2, #0x7d4                 	// #2004
   594f4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   594f8:	add	x1, x1, #0xfb8
   594fc:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59500:	add	x0, x0, #0xc0
   59504:	bl	58e0 <__assert_fail@plt>
   59508:	mov	x1, #0x2                   	// #2
   5950c:	mov	x0, x26
   59510:	bl	5090 <Perl__new_invlist@plt>
   59514:	mov	x3, #0xa                   	// #10
   59518:	mov	x2, x3
   5951c:	mov	x1, x0
   59520:	mov	x0, x26
   59524:	bl	5450 <Perl__add_range_to_invlist@plt>
   59528:	mov	x19, x0
   5952c:	ldr	x0, [sp, #136]
   59530:	tbnz	w0, #12, 59554 <my_regprop@@Base+0x1f290>
   59534:	ldr	x0, [sp, #136]
   59538:	tbnz	w0, #11, 5960c <my_regprop@@Base+0x1f348>
   5953c:	ldr	w2, [x19, #8]
   59540:	cmp	w2, #0x1
   59544:	b.ls	59748 <my_regprop@@Base+0x1f484>  // b.plast
   59548:	sub	w2, w2, #0x1
   5954c:	str	w2, [x19, #8]
   59550:	b	59424 <my_regprop@@Base+0x1f160>
   59554:	ldr	x0, [x25, #168]
   59558:	cbz	x0, 595a0 <my_regprop@@Base+0x1f2dc>
   5955c:	cbz	x19, 595c4 <my_regprop@@Base+0x1f300>
   59560:	ldrb	w2, [x0, #1]
   59564:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59568:	ldr	x1, [x1, #3768]
   5956c:	ldrb	w1, [x1, w2, sxtw]
   59570:	cmp	w1, #0x12
   59574:	b.ne	595e8 <my_regprop@@Base+0x1f324>  // b.any
   59578:	ldrh	w1, [x0, #2]
   5957c:	cmp	w1, #0x1
   59580:	b.ne	595e8 <my_regprop@@Base+0x1f324>  // b.any
   59584:	add	x4, x0, #0x30
   59588:	mov	w3, #0x1                   	// #1
   5958c:	mov	x2, x19
   59590:	ldr	x1, [x0, #48]
   59594:	mov	x0, x26
   59598:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   5959c:	b	5953c <my_regprop@@Base+0x1f278>
   595a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   595a4:	add	x3, x3, #0xc10
   595a8:	add	x3, x3, #0x370
   595ac:	mov	w2, #0x7b6                 	// #1974
   595b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   595b4:	add	x1, x1, #0xfb8
   595b8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   595bc:	add	x0, x0, #0xb8
   595c0:	bl	58e0 <__assert_fail@plt>
   595c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   595c8:	add	x3, x3, #0xc10
   595cc:	add	x3, x3, #0x370
   595d0:	mov	w2, #0x7b6                 	// #1974
   595d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   595d8:	add	x1, x1, #0xfb8
   595dc:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   595e0:	add	x0, x0, #0x568
   595e4:	bl	58e0 <__assert_fail@plt>
   595e8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   595ec:	add	x3, x3, #0xc10
   595f0:	add	x3, x3, #0x370
   595f4:	mov	w2, #0x7b8                 	// #1976
   595f8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   595fc:	add	x1, x1, #0xfb8
   59600:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59604:	add	x0, x0, #0xc0
   59608:	bl	58e0 <__assert_fail@plt>
   5960c:	ldr	x0, [x25, #168]
   59610:	cbz	x0, 59694 <my_regprop@@Base+0x1f3d0>
   59614:	cbz	x19, 596b8 <my_regprop@@Base+0x1f3f4>
   59618:	ldrb	w2, [x0, #1]
   5961c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59620:	ldr	x1, [x1, #3768]
   59624:	ldrb	w1, [x1, w2, sxtw]
   59628:	cmp	w1, #0x12
   5962c:	b.ne	596dc <my_regprop@@Base+0x1f418>  // b.any
   59630:	ldrh	w1, [x0, #2]
   59634:	cmp	w1, #0x1
   59638:	b.ne	596dc <my_regprop@@Base+0x1f418>  // b.any
   5963c:	add	x4, x0, #0x30
   59640:	mov	w3, #0x1                   	// #1
   59644:	mov	x2, x19
   59648:	ldr	x1, [x0, #48]
   5964c:	mov	x0, x26
   59650:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   59654:	ldr	x0, [x25, #168]
   59658:	cbz	x0, 59700 <my_regprop@@Base+0x1f43c>
   5965c:	ldrb	w2, [x0, #1]
   59660:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59664:	ldr	x1, [x1, #3768]
   59668:	ldrb	w1, [x1, w2, sxtw]
   5966c:	cmp	w1, #0x12
   59670:	b.ne	59724 <my_regprop@@Base+0x1f460>  // b.any
   59674:	ldrh	w1, [x0, #2]
   59678:	cmp	w1, #0x1
   5967c:	b.ne	59724 <my_regprop@@Base+0x1f460>  // b.any
   59680:	str	wzr, [x0, #40]
   59684:	ldrb	w1, [x0]
   59688:	and	w1, w1, #0xfffffff9
   5968c:	strb	w1, [x0]
   59690:	b	5953c <my_regprop@@Base+0x1f278>
   59694:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59698:	add	x3, x3, #0xc10
   5969c:	add	x3, x3, #0x498
   596a0:	mov	w2, #0x7c5                 	// #1989
   596a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   596a8:	add	x1, x1, #0xfb8
   596ac:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   596b0:	add	x0, x0, #0xb8
   596b4:	bl	58e0 <__assert_fail@plt>
   596b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   596bc:	add	x3, x3, #0xc10
   596c0:	add	x3, x3, #0x498
   596c4:	mov	w2, #0x7c5                 	// #1989
   596c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   596cc:	add	x1, x1, #0xfb8
   596d0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   596d4:	add	x0, x0, #0x568
   596d8:	bl	58e0 <__assert_fail@plt>
   596dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   596e0:	add	x3, x3, #0xc10
   596e4:	add	x3, x3, #0x498
   596e8:	mov	w2, #0x7c7                 	// #1991
   596ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   596f0:	add	x1, x1, #0xfb8
   596f4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   596f8:	add	x0, x0, #0xc0
   596fc:	bl	58e0 <__assert_fail@plt>
   59700:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59704:	add	x3, x3, #0xc10
   59708:	add	x3, x3, #0x9a0
   5970c:	mov	w2, #0x7ef                 	// #2031
   59710:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59714:	add	x1, x1, #0xfb8
   59718:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5971c:	add	x0, x0, #0xb8
   59720:	bl	58e0 <__assert_fail@plt>
   59724:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59728:	add	x3, x3, #0xc10
   5972c:	add	x3, x3, #0x9a0
   59730:	mov	w2, #0x7f1                 	// #2033
   59734:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59738:	add	x1, x1, #0xfb8
   5973c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59740:	add	x0, x0, #0xc0
   59744:	bl	58e0 <__assert_fail@plt>
   59748:	mov	x1, x19
   5974c:	mov	x0, x26
   59750:	bl	5860 <Perl_sv_free2@plt>
   59754:	b	59424 <my_regprop@@Base+0x1f160>
   59758:	ldr	x0, [sp, #136]
   5975c:	tbz	w0, #11, 59774 <my_regprop@@Base+0x1f4b0>
   59760:	ldr	x2, [x25, #168]
   59764:	mov	x1, x27
   59768:	mov	x0, x26
   5976c:	bl	2eb68 <my_regexec@@Base+0xb674>
   59770:	b	59424 <my_regprop@@Base+0x1f160>
   59774:	ldr	x2, [x25, #168]
   59778:	mov	x1, x27
   5977c:	mov	x0, x26
   59780:	bl	2d628 <my_regexec@@Base+0xa134>
   59784:	b	59424 <my_regprop@@Base+0x1f160>
   59788:	ldr	x0, [x25, #168]
   5978c:	cbz	x0, 597d4 <my_regprop@@Base+0x1f510>
   59790:	cbz	x19, 597f8 <my_regprop@@Base+0x1f534>
   59794:	ldrb	w2, [x0, #1]
   59798:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5979c:	ldr	x1, [x1, #3768]
   597a0:	ldrb	w1, [x1, w2, sxtw]
   597a4:	cmp	w1, #0x12
   597a8:	b.ne	5981c <my_regprop@@Base+0x1f558>  // b.any
   597ac:	ldrh	w1, [x0, #2]
   597b0:	cmp	w1, #0x1
   597b4:	b.ne	5981c <my_regprop@@Base+0x1f558>  // b.any
   597b8:	add	x4, x0, #0x30
   597bc:	mov	w3, #0x0                   	// #0
   597c0:	mov	x2, x19
   597c4:	ldr	x1, [x0, #48]
   597c8:	mov	x0, x26
   597cc:	bl	5710 <Perl__invlist_union_maybe_complement_2nd@plt>
   597d0:	b	59358 <my_regprop@@Base+0x1f094>
   597d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   597d8:	add	x3, x3, #0xc10
   597dc:	add	x3, x3, #0x370
   597e0:	mov	w2, #0x7b6                 	// #1974
   597e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   597e8:	add	x1, x1, #0xfb8
   597ec:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   597f0:	add	x0, x0, #0xb8
   597f4:	bl	58e0 <__assert_fail@plt>
   597f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   597fc:	add	x3, x3, #0xc10
   59800:	add	x3, x3, #0x370
   59804:	mov	w2, #0x7b6                 	// #1974
   59808:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5980c:	add	x1, x1, #0xfb8
   59810:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   59814:	add	x0, x0, #0x568
   59818:	bl	58e0 <__assert_fail@plt>
   5981c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59820:	add	x3, x3, #0xc10
   59824:	add	x3, x3, #0x370
   59828:	mov	w2, #0x7b8                 	// #1976
   5982c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59830:	add	x1, x1, #0xfb8
   59834:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59838:	add	x0, x0, #0xc0
   5983c:	bl	58e0 <__assert_fail@plt>
   59840:	ldr	x0, [x25, #168]
   59844:	cbz	x0, 5988c <my_regprop@@Base+0x1f5c8>
   59848:	cbz	x19, 598b0 <my_regprop@@Base+0x1f5ec>
   5984c:	ldrb	w2, [x0, #1]
   59850:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59854:	ldr	x1, [x1, #3768]
   59858:	ldrb	w1, [x1, w2, sxtw]
   5985c:	cmp	w1, #0x12
   59860:	b.ne	598d4 <my_regprop@@Base+0x1f610>  // b.any
   59864:	ldrh	w1, [x0, #2]
   59868:	cmp	w1, #0x1
   5986c:	b.ne	598d4 <my_regprop@@Base+0x1f610>  // b.any
   59870:	add	x4, x0, #0x30
   59874:	mov	w3, #0x0                   	// #0
   59878:	mov	x2, x19
   5987c:	ldr	x1, [x0, #48]
   59880:	mov	x0, x26
   59884:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   59888:	b	59358 <my_regprop@@Base+0x1f094>
   5988c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59890:	add	x3, x3, #0xc10
   59894:	add	x3, x3, #0x498
   59898:	mov	w2, #0x7c5                 	// #1989
   5989c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   598a0:	add	x1, x1, #0xfb8
   598a4:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   598a8:	add	x0, x0, #0xb8
   598ac:	bl	58e0 <__assert_fail@plt>
   598b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   598b4:	add	x3, x3, #0xc10
   598b8:	add	x3, x3, #0x498
   598bc:	mov	w2, #0x7c5                 	// #1989
   598c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   598c4:	add	x1, x1, #0xfb8
   598c8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   598cc:	add	x0, x0, #0x568
   598d0:	bl	58e0 <__assert_fail@plt>
   598d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   598d8:	add	x3, x3, #0xc10
   598dc:	add	x3, x3, #0x498
   598e0:	mov	w2, #0x7c7                 	// #1991
   598e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   598e8:	add	x1, x1, #0xfb8
   598ec:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   598f0:	add	x0, x0, #0xc0
   598f4:	bl	58e0 <__assert_fail@plt>
   598f8:	mov	x1, x19
   598fc:	mov	x0, x26
   59900:	bl	5860 <Perl_sv_free2@plt>
   59904:	b	59424 <my_regprop@@Base+0x1f160>
   59908:	ldr	w19, [sp, #312]
   5990c:	ldrb	w21, [x3]
   59910:	ubfiz	w21, w21, #1, #7
   59914:	add	w21, w19, w21
   59918:	and	w21, w21, #0xff
   5991c:	ldr	x0, [sp, #136]
   59920:	tbz	w0, #11, 59974 <my_regprop@@Base+0x1f6b0>
   59924:	ldr	x1, [x25, #168]
   59928:	mov	w0, #0x1                   	// #1
   5992c:	lsl	w21, w0, w21
   59930:	ldr	w0, [x1, #40]
   59934:	str	wzr, [x1, #40]
   59938:	tst	w21, w0
   5993c:	b.eq	59950 <my_regprop@@Base+0x1f68c>  // b.none
   59940:	ldr	x1, [x25, #168]
   59944:	ldr	w0, [x1, #40]
   59948:	orr	w21, w0, w21
   5994c:	str	w21, [x1, #40]
   59950:	mov	x1, #0x0                   	// #0
   59954:	mov	x0, x26
   59958:	bl	5090 <Perl__new_invlist@plt>
   5995c:	ldr	x19, [x25, #168]
   59960:	mov	x1, x0
   59964:	mov	x0, x26
   59968:	bl	55d0 <Perl_sv_2mortal@plt>
   5996c:	str	x0, [x19, #48]
   59970:	b	59424 <my_regprop@@Base+0x1f160>
   59974:	cmp	w19, #0x0
   59978:	csinv	w20, w20, wzr, eq  // eq = none
   5997c:	add	w20, w21, w20
   59980:	ldr	x0, [sp, #136]
   59984:	tbz	w0, #12, 599c8 <my_regprop@@Base+0x1f704>
   59988:	ldr	x19, [x25, #168]
   5998c:	ldr	w1, [x19, #40]
   59990:	mov	w0, #0x1                   	// #1
   59994:	lsl	w20, w0, w20
   59998:	tst	w1, w20
   5999c:	b.ne	599ec <my_regprop@@Base+0x1f728>  // b.any
   599a0:	mov	w0, #0x1                   	// #1
   599a4:	lsl	w0, w0, w21
   599a8:	orr	w0, w0, w1
   599ac:	str	w0, [x19, #40]
   599b0:	ldr	x3, [sp, #296]
   599b4:	ldr	x2, [x25, #168]
   599b8:	mov	x1, x27
   599bc:	mov	x0, x26
   599c0:	bl	2eb68 <my_regexec@@Base+0xb674>
   599c4:	b	5942c <my_regprop@@Base+0x1f168>
   599c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   599cc:	add	x3, x3, #0xc10
   599d0:	add	x3, x3, #0x970
   599d4:	mov	w2, #0x16fa                	// #5882
   599d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   599dc:	add	x1, x1, #0xfb8
   599e0:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   599e4:	add	x0, x0, #0x8e8
   599e8:	bl	58e0 <__assert_fail@plt>
   599ec:	ldrb	w1, [x19, #1]
   599f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   599f4:	ldr	x0, [x0, #3768]
   599f8:	ldrb	w0, [x0, w1, sxtw]
   599fc:	cmp	w0, #0x12
   59a00:	b.ne	59a54 <my_regprop@@Base+0x1f790>  // b.any
   59a04:	ldrh	w0, [x19, #2]
   59a08:	cmp	w0, #0x1
   59a0c:	b.ne	59a54 <my_regprop@@Base+0x1f790>  // b.any
   59a10:	mov	x3, #0xffffffffffffffff    	// #-1
   59a14:	mov	x2, #0x0                   	// #0
   59a18:	ldr	x1, [x19, #48]
   59a1c:	mov	x0, x26
   59a20:	bl	5450 <Perl__add_range_to_invlist@plt>
   59a24:	str	x0, [x19, #48]
   59a28:	ldr	x1, [x25, #168]
   59a2c:	mov	w0, #0x1                   	// #1
   59a30:	lsl	w0, w0, w21
   59a34:	ldr	w2, [x1, #40]
   59a38:	bic	w0, w2, w0
   59a3c:	str	w0, [x1, #40]
   59a40:	ldr	x0, [x25, #168]
   59a44:	ldr	w1, [x0, #40]
   59a48:	bic	w20, w1, w20
   59a4c:	str	w20, [x0, #40]
   59a50:	b	599b0 <my_regprop@@Base+0x1f6ec>
   59a54:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59a58:	add	x3, x3, #0xc10
   59a5c:	add	x3, x3, #0x360
   59a60:	mov	w2, #0x7d4                 	// #2004
   59a64:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59a68:	add	x1, x1, #0xfb8
   59a6c:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59a70:	add	x0, x0, #0xc0
   59a74:	bl	58e0 <__assert_fail@plt>
   59a78:	ldr	w19, [sp, #312]
   59a7c:	b	5945c <my_regprop@@Base+0x1f198>
   59a80:	ldr	x0, [x25, #168]
   59a84:	ldr	x2, [sp, #376]
   59a88:	cbz	x0, 59b10 <my_regprop@@Base+0x1f84c>
   59a8c:	cbz	x2, 59b34 <my_regprop@@Base+0x1f870>
   59a90:	ldrb	w3, [x0, #1]
   59a94:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59a98:	ldr	x1, [x1, #3768]
   59a9c:	ldrb	w1, [x1, w3, sxtw]
   59aa0:	cmp	w1, #0x12
   59aa4:	b.ne	59b58 <my_regprop@@Base+0x1f894>  // b.any
   59aa8:	ldrh	w1, [x0, #2]
   59aac:	cmp	w1, #0x1
   59ab0:	b.ne	59b58 <my_regprop@@Base+0x1f894>  // b.any
   59ab4:	add	x4, x0, #0x30
   59ab8:	mov	w3, w19
   59abc:	ldr	x1, [x0, #48]
   59ac0:	mov	x0, x26
   59ac4:	bl	5780 <Perl__invlist_intersection_maybe_complement_2nd@plt>
   59ac8:	ldr	x0, [x25, #168]
   59acc:	cbz	x0, 59b7c <my_regprop@@Base+0x1f8b8>
   59ad0:	ldrb	w2, [x0, #1]
   59ad4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59ad8:	ldr	x1, [x1, #3768]
   59adc:	ldrb	w1, [x1, w2, sxtw]
   59ae0:	cmp	w1, #0x12
   59ae4:	b.ne	59ba0 <my_regprop@@Base+0x1f8dc>  // b.any
   59ae8:	ldrh	w1, [x0, #2]
   59aec:	cmp	w1, #0x1
   59af0:	b.ne	59ba0 <my_regprop@@Base+0x1f8dc>  // b.any
   59af4:	str	wzr, [x0, #40]
   59af8:	ldrb	w1, [x0]
   59afc:	and	w1, w1, #0xfffffff9
   59b00:	strb	w1, [x0]
   59b04:	ldr	x1, [sp, #376]
   59b08:	cbnz	x1, 59410 <my_regprop@@Base+0x1f14c>
   59b0c:	b	59424 <my_regprop@@Base+0x1f160>
   59b10:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59b14:	add	x3, x3, #0xc10
   59b18:	add	x3, x3, #0x498
   59b1c:	mov	w2, #0x7c5                 	// #1989
   59b20:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59b24:	add	x1, x1, #0xfb8
   59b28:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59b2c:	add	x0, x0, #0xb8
   59b30:	bl	58e0 <__assert_fail@plt>
   59b34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59b38:	add	x3, x3, #0xc10
   59b3c:	add	x3, x3, #0x498
   59b40:	mov	w2, #0x7c5                 	// #1989
   59b44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59b48:	add	x1, x1, #0xfb8
   59b4c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   59b50:	add	x0, x0, #0x568
   59b54:	bl	58e0 <__assert_fail@plt>
   59b58:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59b5c:	add	x3, x3, #0xc10
   59b60:	add	x3, x3, #0x498
   59b64:	mov	w2, #0x7c7                 	// #1991
   59b68:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59b6c:	add	x1, x1, #0xfb8
   59b70:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59b74:	add	x0, x0, #0xc0
   59b78:	bl	58e0 <__assert_fail@plt>
   59b7c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59b80:	add	x3, x3, #0xc10
   59b84:	add	x3, x3, #0x9a0
   59b88:	mov	w2, #0x7ef                 	// #2031
   59b8c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59b90:	add	x1, x1, #0xfb8
   59b94:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59b98:	add	x0, x0, #0xb8
   59b9c:	bl	58e0 <__assert_fail@plt>
   59ba0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59ba4:	add	x3, x3, #0xc10
   59ba8:	add	x3, x3, #0x9a0
   59bac:	mov	w2, #0x7f1                 	// #2033
   59bb0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59bb4:	add	x1, x1, #0xfb8
   59bb8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59bbc:	add	x0, x0, #0xc0
   59bc0:	bl	58e0 <__assert_fail@plt>
   59bc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59bc8:	add	x3, x3, #0xc10
   59bcc:	add	x3, x3, #0x970
   59bd0:	mov	w2, #0x172e                	// #5934
   59bd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59bd8:	add	x1, x1, #0xfb8
   59bdc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   59be0:	add	x0, x0, #0x8e8
   59be4:	bl	58e0 <__assert_fail@plt>
   59be8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59bec:	add	x3, x3, #0xc10
   59bf0:	add	x3, x3, #0x370
   59bf4:	mov	w2, #0x7b6                 	// #1974
   59bf8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59bfc:	add	x1, x1, #0xfb8
   59c00:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59c04:	add	x0, x0, #0xb8
   59c08:	bl	58e0 <__assert_fail@plt>
   59c0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59c10:	add	x3, x3, #0xc10
   59c14:	add	x3, x3, #0x370
   59c18:	mov	w2, #0x7b6                 	// #1974
   59c1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59c20:	add	x1, x1, #0xfb8
   59c24:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   59c28:	add	x0, x0, #0x568
   59c2c:	bl	58e0 <__assert_fail@plt>
   59c30:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   59c34:	add	x3, x3, #0xc10
   59c38:	add	x3, x3, #0x370
   59c3c:	mov	w2, #0x7b8                 	// #1976
   59c40:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   59c44:	add	x1, x1, #0xfb8
   59c48:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   59c4c:	add	x0, x0, #0xc0
   59c50:	bl	58e0 <__assert_fail@plt>
   59c54:	mov	x0, x26
   59c58:	bl	5860 <Perl_sv_free2@plt>
   59c5c:	b	59424 <my_regprop@@Base+0x1f160>
   59c60:	cmp	w1, #0x4
   59c64:	b.eq	59e10 <my_regprop@@Base+0x1fb4c>  // b.none
   59c68:	cmp	w1, #0x47
   59c6c:	b.eq	59e4c <my_regprop@@Base+0x1fb88>  // b.none
   59c70:	cmp	w0, #0x38
   59c74:	b.eq	5a2b0 <my_regprop@@Base+0x1ffec>  // b.none
   59c78:	cmp	w0, #0x39
   59c7c:	b.eq	5a2cc <my_regprop@@Base+0x20008>  // b.none
   59c80:	cmp	w0, #0x4d
   59c84:	b.eq	5a330 <my_regprop@@Base+0x2006c>  // b.none
   59c88:	cmp	w1, #0x59
   59c8c:	b.eq	5a344 <my_regprop@@Base+0x20080>  // b.none
   59c90:	ldrh	w3, [x24]
   59c94:	mov	w2, #0x4f02                	// #20226
   59c98:	cmp	w3, w2
   59c9c:	b.eq	5a3ac <my_regprop@@Base+0x200e8>  // b.none
   59ca0:	cmp	w0, #0x7
   59ca4:	b.eq	5a40c <my_regprop@@Base+0x20148>  // b.none
   59ca8:	cmp	w1, #0x51
   59cac:	b.ne	54b74 <my_regprop@@Base+0x1a8b0>  // b.any
   59cb0:	mov	x1, x24
   59cb4:	mov	x0, x26
   59cb8:	bl	58a0 <Perl_regnext@plt>
   59cbc:	str	x0, [sp, #160]
   59cc0:	ldr	x0, [x27, #40]
   59cc4:	ldr	x1, [x0, #24]
   59cc8:	ldr	x0, [sp, #336]
   59ccc:	ldr	w0, [x0, #4]
   59cd0:	add	x0, x0, #0x2
   59cd4:	ldr	x21, [x1, x0, lsl #3]
   59cd8:	ldr	x0, [sp, #136]
   59cdc:	tbnz	w0, #10, 5a484 <my_regprop@@Base+0x201c0>
   59ce0:	ldr	w0, [sp, #136]
   59ce4:	tst	w0, #0x1800
   59ce8:	b.ne	5a4a0 <my_regprop@@Base+0x201dc>  // b.any
   59cec:	ldr	x0, [x21, #40]
   59cf0:	cbnz	x0, 5a4b4 <my_regprop@@Base+0x201f0>
   59cf4:	ldr	x20, [x21, #64]
   59cf8:	ldr	x22, [x21, #72]
   59cfc:	ldr	x0, [sp, #136]
   59d00:	tbz	w0, #10, 59d38 <my_regprop@@Base+0x1fa74>
   59d04:	ldr	x0, [x25]
   59d08:	add	x0, x0, x20
   59d0c:	str	x0, [x25]
   59d10:	ldr	x0, [x25, #8]
   59d14:	add	x0, x22, x0
   59d18:	sub	x0, x0, x20
   59d1c:	str	x0, [x25, #8]
   59d20:	ldr	w0, [sp, #144]
   59d24:	cmp	w0, #0x0
   59d28:	ccmp	x22, x20, #0x0, eq  // eq = none
   59d2c:	b.eq	59d38 <my_regprop@@Base+0x1fa74>  // b.none
   59d30:	mov	w0, #0x1                   	// #1
   59d34:	strb	w0, [x25, #48]
   59d38:	ldr	x0, [sp, #192]
   59d3c:	add	x0, x0, x20
   59d40:	str	x0, [sp, #192]
   59d44:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   59d48:	ldr	x2, [sp, #216]
   59d4c:	cmp	x2, x0
   59d50:	b.eq	59d74 <my_regprop@@Base+0x1fab0>  // b.none
   59d54:	add	x1, x20, x0
   59d58:	sub	x1, x1, x22
   59d5c:	add	x0, x22, x2
   59d60:	sub	x0, x0, x20
   59d64:	cmp	x1, x2
   59d68:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   59d6c:	csel	x0, x0, x1, ge  // ge = tcont
   59d70:	str	x0, [sp, #216]
   59d74:	ldr	x0, [sp, #136]
   59d78:	tbnz	w0, #12, 5a720 <my_regprop@@Base+0x2045c>
   59d7c:	ldr	x0, [sp, #136]
   59d80:	tbz	w0, #11, 59e04 <my_regprop@@Base+0x1fb40>
   59d84:	cbnz	x20, 5a75c <my_regprop@@Base+0x20498>
   59d88:	ldr	x0, [sp, #296]
   59d8c:	cbnz	x0, 5a780 <my_regprop@@Base+0x204bc>
   59d90:	mov	x0, #0x38                  	// #56
   59d94:	bl	5250 <Perl_safesysmalloc@plt>
   59d98:	mov	x19, x0
   59d9c:	str	x0, [sp, #296]
   59da0:	mov	w2, #0xa                   	// #10
   59da4:	mov	x1, x0
   59da8:	mov	x0, x26
   59dac:	bl	54b0 <Perl_save_pushptr@plt>
   59db0:	ldr	x0, [x25, #168]
   59db4:	ldp	x2, x3, [x0]
   59db8:	stp	x2, x3, [x19]
   59dbc:	ldp	x2, x3, [x0, #16]
   59dc0:	stp	x2, x3, [x19, #16]
   59dc4:	ldp	x2, x3, [x0, #32]
   59dc8:	stp	x2, x3, [x19, #32]
   59dcc:	ldr	x1, [x0, #48]
   59dd0:	str	x1, [x19, #48]
   59dd4:	ldr	w1, [sp, #136]
   59dd8:	and	w1, w1, #0xfffff7ff
   59ddc:	ldp	x2, x3, [sp, #384]
   59de0:	stp	x2, x3, [x0]
   59de4:	ldp	x2, x3, [sp, #400]
   59de8:	stp	x2, x3, [x0, #16]
   59dec:	ldp	x2, x3, [sp, #416]
   59df0:	stp	x2, x3, [x0, #32]
   59df4:	ldr	x2, [sp, #432]
   59df8:	str	x2, [x0, #48]
   59dfc:	orr	w0, w1, #0x1000
   59e00:	str	w0, [sp, #136]
   59e04:	ldr	x0, [sp, #160]
   59e08:	str	x0, [sp, #336]
   59e0c:	b	54b84 <my_regprop@@Base+0x1a8c0>
   59e10:	ldr	x2, [sp, #136]
   59e14:	tbz	w2, #10, 59c70 <my_regprop@@Base+0x1f9ac>
   59e18:	ldr	w1, [x25, #152]
   59e1c:	cmp	w0, #0x5
   59e20:	cset	w0, eq  // eq = none
   59e24:	add	w0, w0, #0x1
   59e28:	orr	w0, w1, w0
   59e2c:	str	w0, [x25, #152]
   59e30:	ldr	w4, [sp, #144]
   59e34:	ldr	x3, [sp, #200]
   59e38:	mov	x2, x25
   59e3c:	mov	x1, x27
   59e40:	mov	x0, x26
   59e44:	bl	32660 <Perl_re_indentf@@Base+0x434>
   59e48:	b	54b74 <my_regprop@@Base+0x1a8b0>
   59e4c:	ldrb	w2, [x24]
   59e50:	cmp	w2, #0x0
   59e54:	ccmp	x25, #0x0, #0x0, eq  // eq = none
   59e58:	b.eq	5a0d4 <my_regprop@@Base+0x1fe10>  // b.none
   59e5c:	sub	w2, w0, #0x48
   59e60:	and	w2, w2, #0xff
   59e64:	cmp	w2, #0x1
   59e68:	b.hi	59c70 <my_regprop@@Base+0x1f9ac>  // b.pmore
   59e6c:	str	xzr, [sp, #368]
   59e70:	stp	xzr, xzr, [sp, #496]
   59e74:	add	x0, sp, #0x200
   59e78:	stp	xzr, xzr, [x0]
   59e7c:	stp	xzr, xzr, [x0, #16]
   59e80:	stp	xzr, xzr, [x0, #32]
   59e84:	stp	xzr, xzr, [x0, #48]
   59e88:	stp	xzr, xzr, [x0, #64]
   59e8c:	stp	xzr, xzr, [x0, #80]
   59e90:	stp	xzr, xzr, [x0, #96]
   59e94:	stp	xzr, xzr, [x0, #112]
   59e98:	stp	xzr, xzr, [x0, #128]
   59e9c:	stp	xzr, xzr, [x0, #144]
   59ea0:	cbz	x25, 5a124 <my_regprop@@Base+0x1fe60>
   59ea4:	ldr	w0, [x25, #156]
   59ea8:	str	w0, [sp, #652]
   59eac:	ldr	x0, [x25, #160]
   59eb0:	str	x0, [sp, #656]
   59eb4:	ldr	x0, [sp, #216]
   59eb8:	str	x0, [sp, #504]
   59ebc:	ldr	w0, [sp, #136]
   59ec0:	tst	w0, #0x1800
   59ec4:	b.eq	59ed8 <my_regprop@@Base+0x1fc14>  // b.none
   59ec8:	ldrh	w1, [x24]
   59ecc:	mov	w0, #0x4800                	// #18432
   59ed0:	cmp	w1, w0
   59ed4:	b.eq	5a130 <my_regprop@@Base+0x1fe6c>  // b.none
   59ed8:	orr	w0, w20, #0x2000
   59edc:	ldr	x1, [sp, #136]
   59ee0:	tst	x1, #0x2000
   59ee4:	csel	w20, w0, w20, ne  // ne = any
   59ee8:	ldr	x1, [sp, #336]
   59eec:	mov	x0, x26
   59ef0:	bl	58a0 <Perl_regnext@plt>
   59ef4:	ldr	x0, [sp, #336]
   59ef8:	add	x0, x0, #0x8
   59efc:	str	x0, [sp, #376]
   59f00:	ldr	w0, [sp, #744]
   59f04:	add	w0, w0, #0x1
   59f08:	str	w0, [sp, #24]
   59f0c:	str	w20, [sp, #16]
   59f10:	str	xzr, [sp, #8]
   59f14:	ldr	w0, [sp, #720]
   59f18:	str	w0, [sp]
   59f1c:	ldr	w7, [sp, #188]
   59f20:	add	x6, sp, #0x1f0
   59f24:	ldr	x5, [sp, #168]
   59f28:	add	x4, sp, #0x160
   59f2c:	ldr	x3, [sp, #200]
   59f30:	add	x2, sp, #0x178
   59f34:	mov	x1, x27
   59f38:	mov	x0, x26
   59f3c:	bl	528a8 <my_regprop@@Base+0x185e4>
   59f40:	mov	x19, x0
   59f44:	ldr	x1, [sp, #336]
   59f48:	ldrb	w0, [x1]
   59f4c:	cbz	w0, 5a084 <my_regprop@@Base+0x1fdc0>
   59f50:	ldr	x0, [sp, #352]
   59f54:	cmp	x0, #0xff
   59f58:	mov	x2, #0xff                  	// #255
   59f5c:	ccmp	x19, x2, #0x0, ls  // ls = plast
   59f60:	b.gt	5a150 <my_regprop@@Base+0x1fe8c>
   59f64:	add	x2, x0, x19
   59f68:	cmp	x2, #0xff
   59f6c:	b.gt	5a150 <my_regprop@@Base+0x1fe8c>
   59f70:	cbz	x0, 5a074 <my_regprop@@Base+0x1fdb0>
   59f74:	strh	w0, [x1, #2]
   59f78:	ldr	x1, [x27, #72]
   59f7c:	cbz	x1, 5a1e4 <my_regprop@@Base+0x1ff20>
   59f80:	ldr	x0, [x27, #64]
   59f84:	sub	x1, x0, x1
   59f88:	ldr	x0, [x27, #80]
   59f8c:	add	x0, x0, x1
   59f90:	ldr	x1, [x27, #8]
   59f94:	sub	x0, x0, x1
   59f98:	ldr	x1, [x27, #136]
   59f9c:	cmp	x0, x1
   59fa0:	b.le	5a074 <my_regprop@@Base+0x1fdb0>
   59fa4:	ldr	x0, [x26, #224]
   59fa8:	cbz	x0, 59fd0 <my_regprop@@Base+0x1fd0c>
   59fac:	ldr	x0, [x0, #64]
   59fb0:	cmp	x0, #0x0
   59fb4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59fb8:	ldr	x1, [x1, #3984]
   59fbc:	ccmp	x0, x1, #0x4, ne  // ne = any
   59fc0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   59fc4:	ldr	x1, [x1, #3832]
   59fc8:	ccmp	x0, x1, #0x4, ne  // ne = any
   59fcc:	b.ne	5a204 <my_regprop@@Base+0x1ff40>  // b.any
   59fd0:	ldr	w0, [x27, #192]
   59fd4:	cmp	w0, #0x0
   59fd8:	cset	w3, ne  // ne = any
   59fdc:	ldr	x0, [x27, #64]
   59fe0:	ldr	x1, [x27, #72]
   59fe4:	sub	x1, x0, x1
   59fe8:	ldr	x0, [x27, #80]
   59fec:	add	x0, x0, x1
   59ff0:	ldr	x1, [x27, #16]
   59ff4:	cmp	x0, x1
   59ff8:	b.ls	5a24c <my_regprop@@Base+0x1ff88>  // b.plast
   59ffc:	ldr	x5, [x27, #8]
   5a000:	sub	x4, x1, x5
   5a004:	mov	x7, #0x0                   	// #0
   5a008:	cmp	x0, x1
   5a00c:	csel	x0, x0, x1, ls  // ls = plast
   5a010:	str	x0, [sp]
   5a014:	mov	w6, w3
   5a018:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5a01c:	add	x2, x2, #0x950
   5a020:	mov	w1, #0x48                  	// #72
   5a024:	mov	x0, x26
   5a028:	bl	5630 <Perl_ck_warner_d@plt>
   5a02c:	ldr	x0, [x27, #72]
   5a030:	cbz	x0, 5a074 <my_regprop@@Base+0x1fdb0>
   5a034:	ldr	x1, [x27, #64]
   5a038:	sub	x1, x1, x0
   5a03c:	ldr	x0, [x27, #80]
   5a040:	add	x1, x0, x1
   5a044:	ldr	x2, [x27, #8]
   5a048:	sub	x3, x1, x2
   5a04c:	ldr	x0, [x27, #136]
   5a050:	cmp	x3, x0
   5a054:	b.le	5a074 <my_regprop@@Base+0x1fdb0>
   5a058:	ldr	x0, [x27, #16]
   5a05c:	cmp	x0, x1
   5a060:	csel	x0, x0, x1, ls  // ls = plast
   5a064:	cmp	x2, x0
   5a068:	csel	x0, x2, x0, hi  // hi = pmore
   5a06c:	sub	x0, x0, x2
   5a070:	str	x0, [x27, #136]
   5a074:	ldr	x0, [sp, #352]
   5a078:	add	w19, w19, w0
   5a07c:	ldr	x0, [sp, #336]
   5a080:	strb	w19, [x0]
   5a084:	cbz	x25, 5a0b4 <my_regprop@@Base+0x1fdf0>
   5a088:	ldr	w0, [sp, #648]
   5a08c:	tst	w0, #0x180
   5a090:	ldr	w1, [sp, #260]
   5a094:	cinc	w1, w1, ne  // ne = any
   5a098:	str	w1, [sp, #260]
   5a09c:	tbz	w0, #9, 5a0ac <my_regprop@@Base+0x1fde8>
   5a0a0:	ldr	w0, [x25, #152]
   5a0a4:	orr	w0, w0, #0x200
   5a0a8:	str	w0, [x25, #152]
   5a0ac:	ldr	w0, [sp, #652]
   5a0b0:	str	w0, [x25, #156]
   5a0b4:	tbz	w20, #11, 54b74 <my_regprop@@Base+0x1a8b0>
   5a0b8:	ldr	x0, [sp, #136]
   5a0bc:	tbz	w0, #12, 5a288 <my_regprop@@Base+0x1ffc4>
   5a0c0:	ldr	x2, [x25, #168]
   5a0c4:	mov	x1, x27
   5a0c8:	mov	x0, x26
   5a0cc:	bl	29d54 <my_regexec@@Base+0x6860>
   5a0d0:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a0d4:	ldr	w2, [sp, #136]
   5a0d8:	tst	w2, #0x1800
   5a0dc:	b.eq	59c70 <my_regprop@@Base+0x1f9ac>  // b.none
   5a0e0:	sub	w2, w0, #0x48
   5a0e4:	and	w2, w2, #0xff
   5a0e8:	cmp	w2, #0x1
   5a0ec:	b.hi	59c70 <my_regprop@@Base+0x1f9ac>  // b.pmore
   5a0f0:	str	xzr, [sp, #368]
   5a0f4:	stp	xzr, xzr, [sp, #496]
   5a0f8:	add	x0, sp, #0x200
   5a0fc:	stp	xzr, xzr, [x0]
   5a100:	stp	xzr, xzr, [x0, #16]
   5a104:	stp	xzr, xzr, [x0, #32]
   5a108:	stp	xzr, xzr, [x0, #48]
   5a10c:	stp	xzr, xzr, [x0, #64]
   5a110:	stp	xzr, xzr, [x0, #80]
   5a114:	stp	xzr, xzr, [x0, #96]
   5a118:	stp	xzr, xzr, [x0, #112]
   5a11c:	stp	xzr, xzr, [x0, #128]
   5a120:	stp	xzr, xzr, [x0, #144]
   5a124:	add	x0, sp, #0x170
   5a128:	str	x0, [sp, #656]
   5a12c:	b	59eb4 <my_regprop@@Base+0x1fbf0>
   5a130:	add	x19, sp, #0x1b8
   5a134:	mov	x2, x19
   5a138:	mov	x1, x27
   5a13c:	mov	x0, x26
   5a140:	bl	29d54 <my_regexec@@Base+0x6860>
   5a144:	str	x19, [sp, #664]
   5a148:	mov	w20, #0x800                 	// #2048
   5a14c:	b	59ed8 <my_regprop@@Base+0x1fc14>
   5a150:	mov	x28, x27
   5a154:	ldr	x19, [x27, #16]
   5a158:	ldr	x0, [x27, #8]
   5a15c:	sub	x19, x19, x0
   5a160:	ldr	x1, [x27, #24]
   5a164:	cbz	x1, 5a174 <my_regprop@@Base+0x1feb0>
   5a168:	mov	w2, #0xb                   	// #11
   5a16c:	mov	x0, x26
   5a170:	bl	54b0 <Perl_save_pushptr@plt>
   5a174:	ldr	x1, [x28, #160]
   5a178:	cbz	x1, 5a188 <my_regprop@@Base+0x1fec4>
   5a17c:	mov	w2, #0xa                   	// #10
   5a180:	mov	x0, x26
   5a184:	bl	54b0 <Perl_save_pushptr@plt>
   5a188:	ldr	x1, [x28, #168]
   5a18c:	cbz	x1, 5a19c <my_regprop@@Base+0x1fed8>
   5a190:	mov	w2, #0xa                   	// #10
   5a194:	mov	x0, x26
   5a198:	bl	54b0 <Perl_save_pushptr@plt>
   5a19c:	cmp	x19, #0x7f
   5a1a0:	b.le	5a1d8 <my_regprop@@Base+0x1ff14>
   5a1a4:	mov	x19, #0x75                  	// #117
   5a1a8:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   5a1ac:	add	x6, x6, #0xfe0
   5a1b0:	ldr	w0, [x28, #192]
   5a1b4:	cmp	w0, #0x0
   5a1b8:	ldr	x5, [x28, #8]
   5a1bc:	mov	x4, x19
   5a1c0:	cset	w3, ne  // ne = any
   5a1c4:	mov	x2, #0xff                  	// #255
   5a1c8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5a1cc:	add	x1, x1, #0x908
   5a1d0:	mov	x0, x26
   5a1d4:	bl	5420 <Perl_croak@plt>
   5a1d8:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   5a1dc:	add	x6, x6, #0x20
   5a1e0:	b	5a1b0 <my_regprop@@Base+0x1feec>
   5a1e4:	ldr	x4, [x27, #64]
   5a1e8:	mov	w3, #0x1778                	// #6008
   5a1ec:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   5a1f0:	add	x2, x2, #0xfb8
   5a1f4:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   5a1f8:	add	x1, x1, #0xab8
   5a1fc:	mov	x0, x26
   5a200:	bl	5420 <Perl_croak@plt>
   5a204:	ldrb	w0, [x0, #26]
   5a208:	tbz	w0, #1, 59fd0 <my_regprop@@Base+0x1fd0c>
   5a20c:	ldr	x1, [x27, #24]
   5a210:	cbz	x1, 5a220 <my_regprop@@Base+0x1ff5c>
   5a214:	mov	w2, #0xb                   	// #11
   5a218:	mov	x0, x26
   5a21c:	bl	54b0 <Perl_save_pushptr@plt>
   5a220:	ldr	x1, [x27, #160]
   5a224:	cbz	x1, 5a234 <my_regprop@@Base+0x1ff70>
   5a228:	mov	w2, #0xa                   	// #10
   5a22c:	mov	x0, x26
   5a230:	bl	54b0 <Perl_save_pushptr@plt>
   5a234:	ldr	x1, [x27, #168]
   5a238:	cbz	x1, 59fd0 <my_regprop@@Base+0x1fd0c>
   5a23c:	mov	w2, #0xa                   	// #10
   5a240:	mov	x0, x26
   5a244:	bl	54b0 <Perl_save_pushptr@plt>
   5a248:	b	59fd0 <my_regprop@@Base+0x1fd0c>
   5a24c:	ldr	x5, [x27, #8]
   5a250:	subs	x4, x0, x5
   5a254:	b.mi	5a260 <my_regprop@@Base+0x1ff9c>  // b.first
   5a258:	sub	x7, x1, x0
   5a25c:	b	5a008 <my_regprop@@Base+0x1fd44>
   5a260:	ldr	x6, [x27, #48]
   5a264:	ldr	x5, [x27, #56]
   5a268:	sub	w5, w5, w6
   5a26c:	mov	w3, #0x1778                	// #6008
   5a270:	adrp	x2, 75000 <boot_re@@Base+0x1341c>
   5a274:	add	x2, x2, #0xfb8
   5a278:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   5a27c:	add	x1, x1, #0x870
   5a280:	mov	x0, x26
   5a284:	bl	5420 <Perl_croak@plt>
   5a288:	add	x3, sp, #0x1b8
   5a28c:	ldr	x2, [x25, #168]
   5a290:	mov	x1, x27
   5a294:	mov	x0, x26
   5a298:	bl	2eb68 <my_regexec@@Base+0xb674>
   5a29c:	ldr	x1, [x25, #168]
   5a2a0:	ldrb	w0, [x1]
   5a2a4:	orr	w0, w0, #0x1
   5a2a8:	strb	w0, [x1]
   5a2ac:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a2b0:	ldr	w0, [x24, #4]
   5a2b4:	ldr	w1, [sp, #188]
   5a2b8:	cmp	w0, w1
   5a2bc:	ldr	w0, [sp, #260]
   5a2c0:	cinc	w0, w0, ne  // ne = any
   5a2c4:	str	w0, [sp, #260]
   5a2c8:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a2cc:	ldr	w0, [x24, #4]
   5a2d0:	ldr	w1, [sp, #188]
   5a2d4:	cmp	w0, w1
   5a2d8:	b.eq	5a884 <my_regprop@@Base+0x205c0>  // b.none
   5a2dc:	ldr	w1, [sp, #316]
   5a2e0:	cmp	w0, w1
   5a2e4:	b.eq	5a300 <my_regprop@@Base+0x2003c>  // b.none
   5a2e8:	cbz	x25, 54b74 <my_regprop@@Base+0x1a8b0>
   5a2ec:	ldr	x0, [x25, #160]
   5a2f0:	ldr	x1, [sp, #336]
   5a2f4:	ldr	w1, [x1, #4]
   5a2f8:	str	x1, [x0]
   5a2fc:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a300:	mov	x1, x24
   5a304:	mov	x0, x26
   5a308:	bl	58a0 <Perl_regnext@plt>
   5a30c:	cbz	x0, 5a2e8 <my_regprop@@Base+0x20024>
   5a310:	ldrb	w1, [x0, #1]
   5a314:	cmp	w1, #0x37
   5a318:	ldr	x1, [sp, #168]
   5a31c:	ccmp	x0, x1, #0x2, ne  // ne = any
   5a320:	ldr	w0, [sp, #316]
   5a324:	csel	w0, w0, w20, cs  // cs = hs, nlast
   5a328:	str	w0, [sp, #316]
   5a32c:	b	5a2e8 <my_regprop@@Base+0x20024>
   5a330:	cbz	x25, 54b74 <my_regprop@@Base+0x1a8b0>
   5a334:	ldr	w0, [x25, #152]
   5a338:	orr	w0, w0, #0x200
   5a33c:	str	w0, [x25, #152]
   5a340:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a344:	ldr	x0, [sp, #136]
   5a348:	tbnz	w0, #10, 5a384 <my_regprop@@Base+0x200c0>
   5a34c:	cbz	x25, 54b74 <my_regprop@@Base+0x1a8b0>
   5a350:	ldr	x0, [sp, #336]
   5a354:	ldrb	w0, [x0, #1]
   5a358:	cmp	w0, #0x5b
   5a35c:	b.ne	54b74 <my_regprop@@Base+0x1a8b0>  // b.any
   5a360:	ldr	w0, [x25, #152]
   5a364:	orr	w0, w0, #0x8000
   5a368:	str	w0, [x25, #152]
   5a36c:	ldr	x0, [sp, #240]
   5a370:	ldr	x1, [sp, #192]
   5a374:	cmp	x0, x1
   5a378:	csel	x0, x0, x1, le
   5a37c:	str	x0, [sp, #240]
   5a380:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a384:	ldr	w4, [sp, #144]
   5a388:	ldr	x3, [sp, #200]
   5a38c:	mov	x2, x25
   5a390:	mov	x1, x27
   5a394:	mov	x0, x26
   5a398:	bl	32660 <Perl_re_indentf@@Base+0x434>
   5a39c:	ldr	w0, [sp, #136]
   5a3a0:	and	w0, w0, #0xfffffbff
   5a3a4:	str	w0, [sp, #136]
   5a3a8:	b	5a34c <my_regprop@@Base+0x20088>
   5a3ac:	ldr	x0, [sp, #136]
   5a3b0:	tbnz	w0, #10, 5a3d8 <my_regprop@@Base+0x20114>
   5a3b4:	ldr	x0, [sp, #136]
   5a3b8:	tbnz	w0, #12, 5a3fc <my_regprop@@Base+0x20138>
   5a3bc:	ldr	w0, [sp, #136]
   5a3c0:	and	w0, w0, #0xffffe7ff
   5a3c4:	str	w0, [sp, #136]
   5a3c8:	mov	w0, #0x1                   	// #1
   5a3cc:	str	w0, [sp, #256]
   5a3d0:	str	w0, [sp, #144]
   5a3d4:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a3d8:	ldr	w4, [sp, #144]
   5a3dc:	ldr	x3, [sp, #200]
   5a3e0:	mov	x2, x25
   5a3e4:	mov	x1, x27
   5a3e8:	mov	x0, x26
   5a3ec:	bl	32660 <Perl_re_indentf@@Base+0x434>
   5a3f0:	mov	w0, #0x1                   	// #1
   5a3f4:	strb	w0, [x25, #48]
   5a3f8:	b	5a3b4 <my_regprop@@Base+0x200f0>
   5a3fc:	ldr	x1, [x25, #168]
   5a400:	mov	x0, x26
   5a404:	bl	26b0c <my_regexec@@Base+0x3618>
   5a408:	b	5a3bc <my_regprop@@Base+0x200f8>
   5a40c:	ldr	x1, [x27, #32]
   5a410:	ldr	w0, [x1, #100]
   5a414:	and	w2, w0, #0x200
   5a418:	ldr	w3, [sp, #144]
   5a41c:	orr	w2, w2, w3
   5a420:	cbnz	w2, 5a470 <my_regprop@@Base+0x201ac>
   5a424:	ldr	x2, [sp, #216]
   5a428:	cbnz	x2, 5a470 <my_regprop@@Base+0x201ac>
   5a42c:	cbz	x25, 5a438 <my_regprop@@Base+0x20174>
   5a430:	ldr	x2, [x25, #8]
   5a434:	cbnz	x2, 5a470 <my_regprop@@Base+0x201ac>
   5a438:	tst	w0, #0x1c00
   5a43c:	b.ne	5a450 <my_regprop@@Base+0x2018c>  // b.any
   5a440:	ldr	x2, [sp, #136]
   5a444:	tbz	w2, #10, 5a450 <my_regprop@@Base+0x2018c>
   5a448:	orr	w0, w0, #0x1000
   5a44c:	str	w0, [x1, #100]
   5a450:	ldr	x0, [x27, #32]
   5a454:	ldr	x1, [x0, #80]
   5a458:	str	w20, [sp, #144]
   5a45c:	ldr	x2, [sp, #192]
   5a460:	cmp	x1, x2
   5a464:	b.cs	54b74 <my_regprop@@Base+0x1a8b0>  // b.hs, b.nlast
   5a468:	str	x2, [x0, #80]
   5a46c:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a470:	orr	w0, w0, #0x200
   5a474:	str	w0, [x1, #100]
   5a478:	ldr	x0, [x27, #32]
   5a47c:	str	xzr, [x0, #80]
   5a480:	b	54b74 <my_regprop@@Base+0x1a8b0>
   5a484:	ldr	w4, [sp, #144]
   5a488:	ldr	x3, [sp, #200]
   5a48c:	mov	x2, x25
   5a490:	mov	x1, x27
   5a494:	mov	x0, x26
   5a498:	bl	32660 <Perl_re_indentf@@Base+0x434>
   5a49c:	b	59ce0 <my_regprop@@Base+0x1fa1c>
   5a4a0:	add	x2, sp, #0x180
   5a4a4:	mov	x1, x27
   5a4a8:	mov	x0, x26
   5a4ac:	bl	29d54 <my_regexec@@Base+0x6860>
   5a4b0:	b	59cec <my_regprop@@Base+0x1fa28>
   5a4b4:	ldr	w0, [x21, #88]
   5a4b8:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   5a4bc:	mov	x22, #0x0                   	// #0
   5a4c0:	cbz	w0, 59cfc <my_regprop@@Base+0x1fa38>
   5a4c4:	mov	w19, #0x1                   	// #1
   5a4c8:	mov	x23, #0x0                   	// #0
   5a4cc:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   5a4d0:	mov	x22, #0x0                   	// #0
   5a4d4:	add	x0, sp, #0x178
   5a4d8:	str	x0, [sp, #176]
   5a4dc:	add	x28, sp, #0x1b8
   5a4e0:	add	x0, sp, #0x1f0
   5a4e4:	str	x0, [sp, #208]
   5a4e8:	add	x0, sp, #0x170
   5a4ec:	str	x0, [sp, #224]
   5a4f0:	add	x0, sp, #0x150
   5a4f4:	str	x0, [sp, #232]
   5a4f8:	b	5a584 <my_regprop@@Base+0x202c0>
   5a4fc:	ldr	x0, [sp, #176]
   5a500:	str	x0, [sp, #656]
   5a504:	b	5a5cc <my_regprop@@Base+0x20308>
   5a508:	mov	x2, x28
   5a50c:	mov	x1, x27
   5a510:	mov	x0, x26
   5a514:	bl	29d54 <my_regexec@@Base+0x6860>
   5a518:	str	x28, [sp, #664]
   5a51c:	mov	x0, #0x800                 	// #2048
   5a520:	b	5a5e4 <my_regprop@@Base+0x20320>
   5a524:	ldrh	w23, [x2]
   5a528:	add	x23, x24, x23, lsl #2
   5a52c:	b	5a608 <my_regprop@@Base+0x20344>
   5a530:	mov	x1, x23
   5a534:	mov	x0, x26
   5a538:	bl	58a0 <Perl_regnext@plt>
   5a53c:	mov	x23, x0
   5a540:	b	5a670 <my_regprop@@Base+0x203ac>
   5a544:	mov	x22, x0
   5a548:	mov	w0, #0x1                   	// #1
   5a54c:	str	w0, [sp, #256]
   5a550:	str	w0, [sp, #144]
   5a554:	b	5a6a8 <my_regprop@@Base+0x203e4>
   5a558:	cbnz	x25, 5a6f4 <my_regprop@@Base+0x20430>
   5a55c:	b	5a568 <my_regprop@@Base+0x202a4>
   5a560:	ldr	w0, [sp, #652]
   5a564:	str	w0, [x25, #156]
   5a568:	ldr	w0, [sp, #136]
   5a56c:	tst	w0, #0x1800
   5a570:	b.ne	5a708 <my_regprop@@Base+0x20444>  // b.any
   5a574:	add	w19, w19, #0x1
   5a578:	ldr	w0, [x21, #88]
   5a57c:	cmp	w0, w19
   5a580:	b.cc	59cfc <my_regprop@@Base+0x1fa38>  // b.lo, b.ul, b.last
   5a584:	str	xzr, [sp, #368]
   5a588:	stp	xzr, xzr, [sp, #496]
   5a58c:	add	x0, sp, #0x200
   5a590:	stp	xzr, xzr, [x0]
   5a594:	stp	xzr, xzr, [x0, #16]
   5a598:	stp	xzr, xzr, [x0, #32]
   5a59c:	stp	xzr, xzr, [x0, #48]
   5a5a0:	stp	xzr, xzr, [x0, #64]
   5a5a4:	stp	xzr, xzr, [x0, #80]
   5a5a8:	stp	xzr, xzr, [x0, #96]
   5a5ac:	stp	xzr, xzr, [x0, #112]
   5a5b0:	stp	xzr, xzr, [x0, #128]
   5a5b4:	stp	xzr, xzr, [x0, #144]
   5a5b8:	cbz	x25, 5a4fc <my_regprop@@Base+0x20238>
   5a5bc:	ldr	w0, [x25, #156]
   5a5c0:	str	w0, [sp, #652]
   5a5c4:	ldr	x0, [x25, #160]
   5a5c8:	str	x0, [sp, #656]
   5a5cc:	ldr	x0, [sp, #216]
   5a5d0:	str	x0, [sp, #504]
   5a5d4:	mov	x0, #0x0                   	// #0
   5a5d8:	ldr	w1, [sp, #136]
   5a5dc:	tst	w1, #0x1800
   5a5e0:	b.ne	5a508 <my_regprop@@Base+0x20244>  // b.any
   5a5e4:	orr	x1, x0, #0x2000
   5a5e8:	ldr	x2, [sp, #136]
   5a5ec:	tst	x2, #0x2000
   5a5f0:	csel	x0, x1, x0, ne  // ne = any
   5a5f4:	ldr	x2, [x21, #40]
   5a5f8:	ldrh	w1, [x2, w19, uxtw #1]
   5a5fc:	str	xzr, [sp, #152]
   5a600:	cbz	w1, 5a654 <my_regprop@@Base+0x20390>
   5a604:	cbz	x23, 5a524 <my_regprop@@Base+0x20260>
   5a608:	add	x1, x24, w1, uxth #2
   5a60c:	str	x1, [sp, #336]
   5a610:	ldr	w1, [sp, #744]
   5a614:	add	w1, w1, #0x1
   5a618:	str	w1, [sp, #24]
   5a61c:	str	w0, [sp, #16]
   5a620:	str	xzr, [sp, #8]
   5a624:	ldr	w0, [sp, #720]
   5a628:	str	w0, [sp]
   5a62c:	ldr	w7, [sp, #188]
   5a630:	ldr	x6, [sp, #208]
   5a634:	mov	x5, x23
   5a638:	ldr	x4, [sp, #224]
   5a63c:	ldr	x3, [sp, #200]
   5a640:	ldr	x2, [sp, #232]
   5a644:	mov	x1, x27
   5a648:	mov	x0, x26
   5a64c:	bl	528a8 <my_regprop@@Base+0x185e4>
   5a650:	str	x0, [sp, #152]
   5a654:	cbz	x23, 5a670 <my_regprop@@Base+0x203ac>
   5a658:	ldrb	w1, [x23, #1]
   5a65c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5a660:	ldr	x0, [x0, #3768]
   5a664:	ldrb	w0, [x0, w1, sxtw]
   5a668:	cmp	w0, #0x22
   5a66c:	b.eq	5a530 <my_regprop@@Base+0x2026c>  // b.none
   5a670:	ldr	x0, [x21, #64]
   5a674:	ldr	x2, [sp, #152]
   5a678:	add	x0, x2, x0
   5a67c:	cmp	x20, x0
   5a680:	csel	x20, x20, x0, le
   5a684:	ldr	x0, [sp, #368]
   5a688:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   5a68c:	cmp	x0, x1
   5a690:	b.eq	5a544 <my_regprop@@Base+0x20280>  // b.none
   5a694:	add	x0, x0, x2
   5a698:	ldr	x1, [x21, #72]
   5a69c:	add	x0, x0, x1
   5a6a0:	cmp	x22, x0
   5a6a4:	csel	x22, x22, x0, ge  // ge = tcont
   5a6a8:	ldr	w0, [sp, #648]
   5a6ac:	tst	w0, #0x180
   5a6b0:	ldr	w1, [sp, #260]
   5a6b4:	cinc	w1, w1, ne  // ne = any
   5a6b8:	str	w1, [sp, #260]
   5a6bc:	tbz	w0, #15, 5a558 <my_regprop@@Base+0x20294>
   5a6c0:	ldr	x1, [sp, #192]
   5a6c4:	add	x1, x20, x1
   5a6c8:	ldr	x2, [sp, #240]
   5a6cc:	cmp	x2, x1
   5a6d0:	csel	x1, x2, x1, le
   5a6d4:	str	x1, [sp, #240]
   5a6d8:	ldr	w1, [sp, #136]
   5a6dc:	and	w1, w1, #0xfffffbff
   5a6e0:	str	w1, [sp, #136]
   5a6e4:	cbz	x25, 5a568 <my_regprop@@Base+0x202a4>
   5a6e8:	ldr	w1, [x25, #152]
   5a6ec:	orr	w1, w1, #0x8000
   5a6f0:	str	w1, [x25, #152]
   5a6f4:	tbz	w0, #9, 5a560 <my_regprop@@Base+0x2029c>
   5a6f8:	ldr	w0, [x25, #152]
   5a6fc:	orr	w0, w0, #0x200
   5a700:	str	w0, [x25, #152]
   5a704:	b	5a560 <my_regprop@@Base+0x2029c>
   5a708:	mov	x3, x28
   5a70c:	add	x2, sp, #0x180
   5a710:	mov	x1, x27
   5a714:	mov	x0, x26
   5a718:	bl	2d628 <my_regexec@@Base+0xa134>
   5a71c:	b	5a574 <my_regprop@@Base+0x202b0>
   5a720:	add	x3, sp, #0x180
   5a724:	ldr	x2, [x25, #168]
   5a728:	mov	x1, x27
   5a72c:	mov	x0, x26
   5a730:	bl	2d628 <my_regexec@@Base+0xa134>
   5a734:	cbz	x20, 59e04 <my_regprop@@Base+0x1fb40>
   5a738:	ldr	x3, [sp, #296]
   5a73c:	ldr	x2, [x25, #168]
   5a740:	mov	x1, x27
   5a744:	mov	x0, x26
   5a748:	bl	2eb68 <my_regexec@@Base+0xb674>
   5a74c:	ldr	w0, [sp, #136]
   5a750:	and	w0, w0, #0xffffe7ff
   5a754:	str	w0, [sp, #136]
   5a758:	b	59e04 <my_regprop@@Base+0x1fb40>
   5a75c:	add	x3, sp, #0x180
   5a760:	ldr	x2, [x25, #168]
   5a764:	mov	x1, x27
   5a768:	mov	x0, x26
   5a76c:	bl	2eb68 <my_regexec@@Base+0xb674>
   5a770:	ldr	w0, [sp, #136]
   5a774:	and	w0, w0, #0xffffe7ff
   5a778:	str	w0, [sp, #136]
   5a77c:	b	59e04 <my_regprop@@Base+0x1fb40>
   5a780:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5a784:	add	x3, x3, #0xc10
   5a788:	add	x3, x3, #0x970
   5a78c:	mov	w2, #0x18b2                	// #6322
   5a790:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5a794:	add	x1, x1, #0xfb8
   5a798:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5a79c:	add	x0, x0, #0x4b8
   5a7a0:	bl	58e0 <__assert_fail@plt>
   5a7a4:	mov	x28, x25
   5a7a8:	ldr	x19, [sp, #248]
   5a7ac:	cbz	x19, 5a894 <my_regprop@@Base+0x205d0>
   5a7b0:	ldr	w0, [sp, #744]
   5a7b4:	sub	w0, w0, #0x1
   5a7b8:	str	w0, [sp, #744]
   5a7bc:	ldr	w4, [sp, #144]
   5a7c0:	mov	w3, w0
   5a7c4:	mov	x2, x28
   5a7c8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5a7cc:	add	x1, x1, #0x9c0
   5a7d0:	mov	x0, x26
   5a7d4:	bl	32364 <Perl_re_indentf@@Base+0x138>
   5a7d8:	ldr	w5, [sp, #136]
   5a7dc:	ldr	w4, [sp, #744]
   5a7e0:	ldr	x3, [sp, #336]
   5a7e4:	mov	x2, x27
   5a7e8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5a7ec:	add	x1, x1, #0x9d0
   5a7f0:	mov	x0, x26
   5a7f4:	bl	52694 <my_regprop@@Base+0x183d0>
   5a7f8:	ldr	x0, [x19]
   5a7fc:	str	x0, [sp, #168]
   5a800:	ldr	x0, [x19, #8]
   5a804:	str	x0, [sp, #336]
   5a808:	ldr	w0, [x19, #20]
   5a80c:	str	w0, [sp, #188]
   5a810:	ldr	w0, [x19, #16]
   5a814:	str	w0, [sp, #720]
   5a818:	ldr	x0, [x19, #32]
   5a81c:	str	x0, [x27, #296]
   5a820:	ldr	x0, [x19, #24]
   5a824:	str	x0, [sp, #248]
   5a828:	ldr	w4, [x27, #360]
   5a82c:	add	w4, w4, #0x1
   5a830:	str	w4, [x27, #360]
   5a834:	ldr	w0, [x26, #2368]
   5a838:	tbnz	w0, #20, 52b8c <my_regprop@@Base+0x188c8>
   5a83c:	ldr	x1, [sp, #344]
   5a840:	mov	x0, #0x2                   	// #2
   5a844:	movk	x0, #0x10, lsl #16
   5a848:	bics	xzr, x0, x1
   5a84c:	b.eq	52b8c <my_regprop@@Base+0x188c8>  // b.none
   5a850:	ldr	x1, [sp, #336]
   5a854:	cbz	x1, 5a7a8 <my_regprop@@Base+0x204e4>
   5a858:	ldrb	w0, [x1, #1]
   5a85c:	cmp	w0, #0x0
   5a860:	cset	w0, ne  // ne = any
   5a864:	ldr	x2, [sp, #168]
   5a868:	cmp	x2, x1
   5a86c:	cset	w1, hi  // hi = pmore
   5a870:	ands	w0, w0, w1
   5a874:	str	w0, [sp, #312]
   5a878:	mov	x25, x28
   5a87c:	b.ne	54ba0 <my_regprop@@Base+0x1a8dc>  // b.any
   5a880:	b	5a7a8 <my_regprop@@Base+0x204e4>
   5a884:	mov	x28, x25
   5a888:	b	5a7a8 <my_regprop@@Base+0x204e4>
   5a88c:	mov	x28, x25
   5a890:	b	5a7a8 <my_regprop@@Base+0x204e4>
   5a894:	mov	x0, x28
   5a898:	mov	x28, x27
   5a89c:	ldr	w25, [sp, #136]
   5a8a0:	mov	x27, x0
   5a8a4:	ldr	w19, [sp, #144]
   5a8a8:	mov	w4, w19
   5a8ac:	ldr	w3, [sp, #744]
   5a8b0:	mov	x2, x0
   5a8b4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5a8b8:	add	x1, x1, #0x9d8
   5a8bc:	mov	x0, x26
   5a8c0:	bl	32364 <Perl_re_indentf@@Base+0x138>
   5a8c4:	ldr	x0, [sp, #336]
   5a8c8:	ldr	x1, [sp, #328]
   5a8cc:	str	x0, [x1]
   5a8d0:	ldr	w0, [sp, #256]
   5a8d4:	cmp	w0, #0x0
   5a8d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   5a8dc:	ldr	x1, [sp, #216]
   5a8e0:	csel	x0, x1, x0, eq  // eq = none
   5a8e4:	ldr	x1, [sp, #320]
   5a8e8:	str	x0, [x1]
   5a8ec:	tst	x25, #0x400
   5a8f0:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   5a8f4:	b.ne	5a9cc <my_regprop@@Base+0x20708>  // b.any
   5a8f8:	ldr	w1, [sp, #316]
   5a8fc:	cmp	w1, #0xff
   5a900:	b.gt	5aa14 <my_regprop@@Base+0x20750>
   5a904:	cmp	x27, #0x0
   5a908:	cset	w0, ne  // ne = any
   5a90c:	cmp	w1, #0x0
   5a910:	ldr	w1, [sp, #260]
   5a914:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   5a918:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   5a91c:	b.eq	5aa1c <my_regprop@@Base+0x20758>  // b.none
   5a920:	ldr	w0, [x27, #152]
   5a924:	and	w0, w0, #0xffffff7f
   5a928:	orr	w0, w0, #0x100
   5a92c:	str	w0, [x27, #152]
   5a930:	tbnz	w25, #12, 5a9e0 <my_regprop@@Base+0x2071c>
   5a934:	tbz	w25, #14, 5a944 <my_regprop@@Base+0x20680>
   5a938:	ldr	w0, [x27, #152]
   5a93c:	orr	w0, w0, #0x4000
   5a940:	str	w0, [x27, #152]
   5a944:	ldr	w4, [sp, #144]
   5a948:	ldr	w3, [sp, #744]
   5a94c:	mov	x2, x27
   5a950:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5a954:	add	x1, x1, #0x9e0
   5a958:	mov	x0, x26
   5a95c:	bl	32364 <Perl_re_indentf@@Base+0x138>
   5a960:	ldr	x0, [sp, #192]
   5a964:	ldr	x1, [sp, #240]
   5a968:	cmp	x0, x1
   5a96c:	csel	x0, x0, x1, le
   5a970:	ldr	w1, [x28, #120]
   5a974:	tbnz	w1, #12, 5a994 <my_regprop@@Base+0x206d0>
   5a978:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   5a97c:	ldr	x2, [sp, #216]
   5a980:	sub	x1, x1, x2
   5a984:	cmp	x1, x0
   5a988:	b.ge	5a9f8 <my_regprop@@Base+0x20734>  // b.tcont
   5a98c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   5a990:	str	x1, [x28, #280]
   5a994:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5a998:	ldr	x1, [x1, #3920]
   5a99c:	ldr	x2, [sp, #712]
   5a9a0:	ldr	x1, [x1]
   5a9a4:	eor	x1, x2, x1
   5a9a8:	cbnz	x1, 5abf4 <my_regprop@@Base+0x20930>
   5a9ac:	ldp	x19, x20, [sp, #48]
   5a9b0:	ldp	x21, x22, [sp, #64]
   5a9b4:	ldp	x23, x24, [sp, #80]
   5a9b8:	ldp	x25, x26, [sp, #96]
   5a9bc:	ldp	x27, x28, [sp, #112]
   5a9c0:	ldp	x29, x30, [sp, #32]
   5a9c4:	add	sp, sp, #0x2d0
   5a9c8:	ret
   5a9cc:	ldr	x1, [x27]
   5a9d0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   5a9d4:	sub	x0, x0, x1
   5a9d8:	str	x0, [x27, #8]
   5a9dc:	b	5a8f8 <my_regprop@@Base+0x20634>
   5a9e0:	ldr	x3, [sp, #296]
   5a9e4:	ldr	x2, [x27, #168]
   5a9e8:	mov	x1, x28
   5a9ec:	mov	x0, x26
   5a9f0:	bl	2eb68 <my_regexec@@Base+0xb674>
   5a9f4:	b	5a934 <my_regprop@@Base+0x20670>
   5a9f8:	ldr	x1, [sp, #216]
   5a9fc:	add	x1, x0, x1
   5aa00:	ldr	x2, [x28, #280]
   5aa04:	cmp	x2, x1
   5aa08:	b.ge	5a994 <my_regprop@@Base+0x206d0>  // b.tcont
   5aa0c:	str	x1, [x28, #280]
   5aa10:	b	5a994 <my_regprop@@Base+0x206d0>
   5aa14:	cmp	x27, #0x0
   5aa18:	cset	w0, ne  // ne = any
   5aa1c:	ldr	w1, [sp, #260]
   5aa20:	cmp	w1, #0x0
   5aa24:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   5aa28:	b.eq	5a930 <my_regprop@@Base+0x2066c>  // b.none
   5aa2c:	ldr	w0, [x27, #152]
   5aa30:	and	w0, w0, #0xfffffeff
   5aa34:	orr	w0, w0, #0x80
   5aa38:	str	w0, [x27, #152]
   5aa3c:	b	5a930 <my_regprop@@Base+0x2066c>
   5aa40:	ldr	w23, [sp, #160]
   5aa44:	str	x22, [sp, #152]
   5aa48:	b	55620 <my_regprop@@Base+0x1b35c>
   5aa4c:	cbz	x28, 5aa5c <my_regprop@@Base+0x20798>
   5aa50:	cmp	w23, #0x2f
   5aa54:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   5aa58:	b.ne	556a0 <my_regprop@@Base+0x1b3dc>  // b.any
   5aa5c:	ldr	x0, [sp, #152]
   5aa60:	mov	x28, x0
   5aa64:	cbz	x0, 5aa78 <my_regprop@@Base+0x207b4>
   5aa68:	str	wzr, [sp, #176]
   5aa6c:	mov	w23, #0x0                   	// #0
   5aa70:	mov	x28, #0x0                   	// #0
   5aa74:	str	xzr, [sp, #152]
   5aa78:	mov	x1, x22
   5aa7c:	mov	x0, x26
   5aa80:	bl	58a0 <Perl_regnext@plt>
   5aa84:	mov	x22, x0
   5aa88:	ldr	x0, [sp, #336]
   5aa8c:	cmp	x0, x22
   5aa90:	b.eq	556ec <my_regprop@@Base+0x1b428>  // b.none
   5aa94:	add	x21, x22, #0x4
   5aa98:	ldrb	w19, [x22, #5]
   5aa9c:	cmp	w19, #0x2f
   5aaa0:	b.eq	553b8 <my_regprop@@Base+0x1b0f4>  // b.none
   5aaa4:	cmp	w19, #0x23
   5aaa8:	mov	w0, #0x2c                  	// #44
   5aaac:	ccmp	w19, w0, #0x4, ne  // ne = any
   5aab0:	b.eq	553b4 <my_regprop@@Base+0x1b0f0>  // b.none
   5aab4:	and	w0, w19, #0xfffffffb
   5aab8:	and	w0, w0, #0xff
   5aabc:	cmp	w0, #0x29
   5aac0:	mov	w0, #0x27                  	// #39
   5aac4:	ccmp	w19, w0, #0x4, ne  // ne = any
   5aac8:	b.ne	55398 <my_regprop@@Base+0x1b0d4>  // b.any
   5aacc:	mov	w19, #0x27                  	// #39
   5aad0:	b	553b8 <my_regprop@@Base+0x1b0f4>
   5aad4:	cbz	x28, 5aafc <my_regprop@@Base+0x20838>
   5aad8:	cmp	w23, #0x2f
   5aadc:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   5aae0:	b.ne	556a0 <my_regprop@@Base+0x1b3dc>  // b.any
   5aae4:	mov	w23, w19
   5aae8:	str	x22, [sp, #152]
   5aaec:	mov	w0, #0x1                   	// #1
   5aaf0:	str	w0, [sp, #176]
   5aaf4:	mov	x28, #0x0                   	// #0
   5aaf8:	b	5aa78 <my_regprop@@Base+0x207b4>
   5aafc:	mov	w23, w19
   5ab00:	str	x22, [sp, #152]
   5ab04:	mov	w0, #0x1                   	// #1
   5ab08:	str	w0, [sp, #176]
   5ab0c:	b	5aa78 <my_regprop@@Base+0x207b4>
   5ab10:	ldr	x0, [sp, #136]
   5ab14:	tbnz	w0, #10, 5805c <my_regprop@@Base+0x1dd98>
   5ab18:	b	57c64 <my_regprop@@Base+0x1d9a0>
   5ab1c:	mul	x19, x21, x23
   5ab20:	ldr	x0, [sp, #192]
   5ab24:	add	x0, x0, x19
   5ab28:	str	x0, [sp, #192]
   5ab2c:	mov	x0, #0x0                   	// #0
   5ab30:	b	57ff0 <my_regprop@@Base+0x1dd2c>
   5ab34:	ldr	w19, [x24, #4]
   5ab38:	mov	w22, #0x7fffffff            	// #2147483647
   5ab3c:	adrp	x20, 91000 <boot_re@@Base+0x2f41c>
   5ab40:	ldr	x20, [x20, #3768]
   5ab44:	mov	x1, x24
   5ab48:	b	54980 <my_regprop@@Base+0x1a6bc>
   5ab4c:	mov	x19, x28
   5ab50:	ldr	x1, [sp, #224]
   5ab54:	sub	x28, x19, #0x1
   5ab58:	str	x1, [sp, #224]
   5ab5c:	mov	w23, #0x0                   	// #0
   5ab60:	str	xzr, [sp, #176]
   5ab64:	cmp	x1, x28
   5ab68:	b.cs	5ab84 <my_regprop@@Base+0x208c0>  // b.hs, b.nlast
   5ab6c:	mov	w2, #0x0                   	// #0
   5ab70:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5ab74:	ldr	x22, [x0, #4064]
   5ab78:	str	w23, [sp, #208]
   5ab7c:	mov	w23, w2
   5ab80:	b	53664 <my_regprop@@Base+0x193a0>
   5ab84:	mov	w19, #0x0                   	// #0
   5ab88:	b	546dc <my_regprop@@Base+0x1a418>
   5ab8c:	mov	w5, #0x0                   	// #0
   5ab90:	ldr	w4, [sp, #152]
   5ab94:	mov	x3, x19
   5ab98:	mov	x2, x27
   5ab9c:	ldr	x1, [sp, #224]
   5aba0:	mov	x0, x26
   5aba4:	bl	52694 <my_regprop@@Base+0x183d0>
   5aba8:	ldrh	w0, [x20, #2]
   5abac:	ldrh	w1, [x19, #2]
   5abb0:	add	w0, w0, w1
   5abb4:	strh	w0, [x20, #2]
   5abb8:	add	x21, x19, #0x4
   5abbc:	mov	w22, #0x0                   	// #0
   5abc0:	b	52fa4 <my_regprop@@Base+0x18ce0>
   5abc4:	ldr	x0, [x1]
   5abc8:	ldrb	w0, [x0, #129]
   5abcc:	tbnz	w0, #6, 58a58 <my_regprop@@Base+0x1e794>
   5abd0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5abd4:	add	x3, x3, #0xc10
   5abd8:	add	x3, x3, #0x970
   5abdc:	mov	w2, #0x160c                	// #5644
   5abe0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5abe4:	add	x1, x1, #0xfb8
   5abe8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5abec:	add	x0, x0, #0xe88
   5abf0:	bl	58e0 <__assert_fail@plt>
   5abf4:	bl	5300 <__stack_chk_fail@plt>
   5abf8:	sub	sp, sp, #0x100
   5abfc:	stp	x29, x30, [sp, #16]
   5ac00:	add	x29, sp, #0x10
   5ac04:	stp	x19, x20, [sp, #32]
   5ac08:	stp	x23, x24, [sp, #64]
   5ac0c:	stp	x25, x26, [sp, #80]
   5ac10:	stp	x27, x28, [sp, #96]
   5ac14:	mov	x27, x0
   5ac18:	str	x1, [sp, #128]
   5ac1c:	str	x2, [sp, #120]
   5ac20:	mov	x28, x3
   5ac24:	mov	x26, x4
   5ac28:	mov	x19, x5
   5ac2c:	str	x6, [sp, #136]
   5ac30:	mov	w24, w7
   5ac34:	ldr	x0, [x1, #104]
   5ac38:	str	x0, [sp, #208]
   5ac3c:	str	xzr, [sp, #248]
   5ac40:	ldr	x0, [x27, #224]
   5ac44:	cbz	x0, 5acac <my_regprop@@Base+0x209e8>
   5ac48:	mov	w2, #0x1                   	// #1
   5ac4c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5ac50:	add	x1, x1, #0x608
   5ac54:	mov	x0, x27
   5ac58:	bl	54f0 <Perl_get_sv@plt>
   5ac5c:	mov	x20, x0
   5ac60:	cbz	x0, 5acac <my_regprop@@Base+0x209e8>
   5ac64:	ldr	w0, [x0, #12]
   5ac68:	tbz	w0, #8, 5ad1c <my_regprop@@Base+0x20a58>
   5ac6c:	ldr	w1, [x20, #12]
   5ac70:	and	w0, w1, #0x3fff00
   5ac74:	and	w0, w0, #0xffe001ff
   5ac78:	cmp	w0, #0x100
   5ac7c:	b.ne	5ad90 <my_regprop@@Base+0x20acc>  // b.any
   5ac80:	and	w2, w1, #0xf
   5ac84:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5ac88:	ldr	x0, [x0, #3712]
   5ac8c:	ldrb	w0, [x0, w2, uxtw]
   5ac90:	cbz	w0, 5ad30 <my_regprop@@Base+0x20a6c>
   5ac94:	and	w0, w1, #0xc000
   5ac98:	cmp	w0, #0x8, lsl #12
   5ac9c:	b.eq	5ad58 <my_regprop@@Base+0x20a94>  // b.none
   5aca0:	ldr	x0, [x20]
   5aca4:	ldr	x0, [x0, #32]
   5aca8:	str	x0, [sp, #248]
   5acac:	ldr	x0, [sp, #120]
   5acb0:	cbz	x0, 5ada4 <my_regprop@@Base+0x20ae0>
   5acb4:	cbz	x28, 5adcc <my_regprop@@Base+0x20b08>
   5acb8:	ldr	x0, [sp, #136]
   5acbc:	cbz	x0, 5adf4 <my_regprop@@Base+0x20b30>
   5acc0:	cmp	x19, #0x0
   5acc4:	ccmp	x19, x26, #0x2, ne  // ne = any
   5acc8:	csel	x26, x26, x19, cs  // cs = hs, nlast
   5accc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5acd0:	ldr	x0, [x0, #3768]
   5acd4:	ldrb	w0, [x0, #101]
   5acd8:	cbz	w0, 5b6ac <my_regprop@@Base+0x213e8>
   5acdc:	cmp	x26, #0x0
   5ace0:	cset	w0, eq  // eq = none
   5ace4:	str	w0, [sp, #216]
   5ace8:	cmp	w0, #0x0
   5acec:	mov	x25, #0x0                   	// #0
   5acf0:	ccmp	x28, x26, #0x0, eq  // eq = none
   5acf4:	b.cs	5b648 <my_regprop@@Base+0x21384>  // b.hs, b.nlast
   5acf8:	stp	x21, x22, [sp, #48]
   5acfc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5ad00:	ldr	x0, [x0, #3768]
   5ad04:	str	x0, [sp, #152]
   5ad08:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5ad0c:	add	x0, x0, #0xc10
   5ad10:	add	x0, x0, #0x1e8
   5ad14:	str	x0, [sp, #200]
   5ad18:	b	5af30 <my_regprop@@Base+0x20c6c>
   5ad1c:	mov	x2, #0xff08                	// #65288
   5ad20:	mov	x1, x20
   5ad24:	mov	x0, x27
   5ad28:	bl	5310 <Perl_sv_setuv@plt>
   5ad2c:	b	5ac6c <my_regprop@@Base+0x209a8>
   5ad30:	stp	x21, x22, [sp, #48]
   5ad34:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ad38:	add	x3, x3, #0xc10
   5ad3c:	add	x3, x3, #0x9e8
   5ad40:	mov	w2, #0x556c                	// #21868
   5ad44:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ad48:	add	x1, x1, #0xfb8
   5ad4c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ad50:	add	x0, x0, #0xda0
   5ad54:	bl	58e0 <__assert_fail@plt>
   5ad58:	and	w0, w1, #0xff
   5ad5c:	sub	w0, w0, #0x9
   5ad60:	cmp	w0, #0x1
   5ad64:	b.hi	5aca0 <my_regprop@@Base+0x209dc>  // b.pmore
   5ad68:	stp	x21, x22, [sp, #48]
   5ad6c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ad70:	add	x3, x3, #0xc10
   5ad74:	add	x3, x3, #0x9e8
   5ad78:	mov	w2, #0x556c                	// #21868
   5ad7c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ad80:	add	x1, x1, #0xfb8
   5ad84:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ad88:	add	x0, x0, #0xdd0
   5ad8c:	bl	58e0 <__assert_fail@plt>
   5ad90:	mov	w2, #0x2                   	// #2
   5ad94:	mov	x1, x20
   5ad98:	mov	x0, x27
   5ad9c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5ada0:	b	5aca8 <my_regprop@@Base+0x209e4>
   5ada4:	stp	x21, x22, [sp, #48]
   5ada8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5adac:	add	x3, x3, #0xc10
   5adb0:	add	x3, x3, #0x9e8
   5adb4:	mov	w2, #0x556e                	// #21870
   5adb8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5adbc:	add	x1, x1, #0xfb8
   5adc0:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5adc4:	add	x0, x0, #0xe60
   5adc8:	bl	58e0 <__assert_fail@plt>
   5adcc:	stp	x21, x22, [sp, #48]
   5add0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5add4:	add	x3, x3, #0xc10
   5add8:	add	x3, x3, #0x9e8
   5addc:	mov	w2, #0x556e                	// #21870
   5ade0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ade4:	add	x1, x1, #0xfb8
   5ade8:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5adec:	add	x0, x0, #0xdb8
   5adf0:	bl	58e0 <__assert_fail@plt>
   5adf4:	stp	x21, x22, [sp, #48]
   5adf8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5adfc:	add	x3, x3, #0xc10
   5ae00:	add	x3, x3, #0x9e8
   5ae04:	mov	w2, #0x556e                	// #21870
   5ae08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ae0c:	add	x1, x1, #0xfb8
   5ae10:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5ae14:	add	x0, x0, #0x970
   5ae18:	bl	58e0 <__assert_fail@plt>
   5ae1c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ae20:	add	x3, x3, #0xc10
   5ae24:	add	x3, x3, #0x9e8
   5ae28:	mov	w2, #0x5579                	// #21881
   5ae2c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ae30:	add	x1, x1, #0xfb8
   5ae34:	adrp	x0, 76000 <boot_re@@Base+0x1441c>
   5ae38:	add	x0, x0, #0xdb8
   5ae3c:	bl	58e0 <__assert_fail@plt>
   5ae40:	cbnz	x25, 5b050 <my_regprop@@Base+0x20d8c>
   5ae44:	ldr	x0, [sp, #248]
   5ae48:	tbz	w0, #1, 5b050 <my_regprop@@Base+0x20d8c>
   5ae4c:	mov	x25, x28
   5ae50:	b	5af9c <my_regprop@@Base+0x20cd8>
   5ae54:	mov	x25, #0x0                   	// #0
   5ae58:	b	5af9c <my_regprop@@Base+0x20cd8>
   5ae5c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5ae60:	add	x1, x1, #0xa18
   5ae64:	mov	x0, x27
   5ae68:	bl	50e0 <Perl_re_printf@plt>
   5ae6c:	b	5b040 <my_regprop@@Base+0x20d7c>
   5ae70:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5ae74:	add	x1, x1, #0xa20
   5ae78:	mov	x0, x27
   5ae7c:	bl	50e0 <Perl_re_printf@plt>
   5ae80:	b	5b040 <my_regprop@@Base+0x20d7c>
   5ae84:	cbz	x19, 5b0c8 <my_regprop@@Base+0x20e04>
   5ae88:	ldrb	w0, [x19, #1]
   5ae8c:	cmp	w0, #0x46
   5ae90:	b.eq	5b0ec <my_regprop@@Base+0x20e28>  // b.none
   5ae94:	cmp	x26, #0x0
   5ae98:	ccmp	x19, x26, #0x0, ne  // ne = any
   5ae9c:	csel	x19, x19, x26, ls  // ls = plast
   5aea0:	cbz	x25, 5aecc <my_regprop@@Base+0x20c08>
   5aea4:	ldr	w0, [x27, #2368]
   5aea8:	tbnz	w0, #20, 5aeb4 <my_regprop@@Base+0x20bf0>
   5aeac:	ldr	x0, [sp, #248]
   5aeb0:	tbz	w0, #1, 5aecc <my_regprop@@Base+0x20c08>
   5aeb4:	sub	x2, x28, x25
   5aeb8:	asr	x2, x2, #2
   5aebc:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5aec0:	add	x1, x1, #0x9f8
   5aec4:	mov	x0, x27
   5aec8:	bl	50e0 <Perl_re_printf@plt>
   5aecc:	ldr	w0, [sp, #256]
   5aed0:	add	w0, w0, #0x1
   5aed4:	str	w0, [sp]
   5aed8:	add	w7, w24, #0x1
   5aedc:	ldr	x6, [sp, #136]
   5aee0:	mov	x5, x26
   5aee4:	mov	x4, x19
   5aee8:	add	x3, x28, #0x8
   5aeec:	ldr	x2, [sp, #120]
   5aef0:	ldr	x1, [sp, #128]
   5aef4:	mov	x0, x27
   5aef8:	bl	5abf8 <my_regprop@@Base+0x20934>
   5aefc:	mov	x28, x0
   5af00:	mov	x25, #0x0                   	// #0
   5af04:	cmp	w23, #0x38
   5af08:	mov	w0, #0x36                  	// #54
   5af0c:	ccmp	w20, w0, #0x4, ne  // ne = any
   5af10:	b.ne	5af1c <my_regprop@@Base+0x20c58>  // b.any
   5af14:	add	w24, w24, #0x1
   5af18:	cbz	w21, 5b658 <my_regprop@@Base+0x21394>
   5af1c:	ldr	w0, [sp, #216]
   5af20:	cmp	w0, #0x0
   5af24:	ccmp	x26, x28, #0x2, eq  // eq = none
   5af28:	b.ls	5b650 <my_regprop@@Base+0x2138c>  // b.plast
   5af2c:	cbz	x28, 5ae1c <my_regprop@@Base+0x20b58>
   5af30:	ldrb	w20, [x28, #1]
   5af34:	and	w0, w20, #0xfffffffd
   5af38:	and	w23, w0, #0xff
   5af3c:	cmp	w20, #0x37
   5af40:	mov	w0, #0x39                  	// #57
   5af44:	ccmp	w23, w0, #0x4, ne  // ne = any
   5af48:	cset	w0, eq  // eq = none
   5af4c:	sub	w24, w24, w0
   5af50:	mov	x1, x28
   5af54:	mov	x0, x27
   5af58:	bl	58a0 <Perl_regnext@plt>
   5af5c:	mov	x19, x0
   5af60:	ldrb	w0, [x28, #1]
   5af64:	cmp	w0, #0x64
   5af68:	b.eq	5ae40 <my_regprop@@Base+0x20b7c>  // b.none
   5af6c:	cbz	x25, 5af9c <my_regprop@@Base+0x20cd8>
   5af70:	ldr	w0, [x27, #2368]
   5af74:	tbnz	w0, #20, 5af80 <my_regprop@@Base+0x20cbc>
   5af78:	ldr	x0, [sp, #248]
   5af7c:	tbz	w0, #1, 5ae54 <my_regprop@@Base+0x20b90>
   5af80:	sub	x2, x28, x25
   5af84:	asr	x2, x2, #2
   5af88:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5af8c:	add	x1, x1, #0x9f8
   5af90:	mov	x0, x27
   5af94:	bl	50e0 <Perl_re_printf@plt>
   5af98:	mov	x25, #0x0                   	// #0
   5af9c:	mov	x5, #0x0                   	// #0
   5afa0:	mov	x4, #0x0                   	// #0
   5afa4:	mov	x3, x28
   5afa8:	ldr	x21, [sp, #136]
   5afac:	mov	x2, x21
   5afb0:	ldr	x1, [sp, #128]
   5afb4:	mov	x0, x27
   5afb8:	bl	5580 <my_regprop@plt>
   5afbc:	lsl	w3, w24, #1
   5afc0:	ldr	x0, [sp, #120]
   5afc4:	sub	x2, x28, x0
   5afc8:	ldr	x5, [x21, #16]
   5afcc:	adrp	x4, 7d000 <boot_re@@Base+0x1b41c>
   5afd0:	add	x4, x4, #0x20
   5afd4:	add	w3, w3, #0x1
   5afd8:	asr	x2, x2, #2
   5afdc:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5afe0:	add	x1, x1, #0xa08
   5afe4:	mov	x0, x27
   5afe8:	bl	50e0 <Perl_re_printf@plt>
   5afec:	ldrb	w0, [x28, #1]
   5aff0:	cmp	w0, #0x64
   5aff4:	b.eq	5b050 <my_regprop@@Base+0x20d8c>  // b.none
   5aff8:	cbz	x19, 5ae5c <my_regprop@@Base+0x20b98>
   5affc:	ldr	x0, [sp, #152]
   5b000:	ldrb	w0, [x0, w20, sxtw]
   5b004:	cmp	w0, #0x22
   5b008:	b.ne	5b024 <my_regprop@@Base+0x20d60>  // b.any
   5b00c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5b010:	ldr	x0, [x0, #3768]
   5b014:	ldrb	w1, [x19, #1]
   5b018:	ldrb	w0, [x0, w1, sxtw]
   5b01c:	cmp	w0, #0x22
   5b020:	b.ne	5ae70 <my_regprop@@Base+0x20bac>  // b.any
   5b024:	ldr	x0, [sp, #120]
   5b028:	sub	x2, x19, x0
   5b02c:	asr	x2, x2, #2
   5b030:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b034:	add	x1, x1, #0xa28
   5b038:	mov	x0, x27
   5b03c:	bl	50e0 <Perl_re_printf@plt>
   5b040:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5b044:	add	x1, x1, #0x8d8
   5b048:	mov	x0, x27
   5b04c:	bl	50e0 <Perl_re_printf@plt>
   5b050:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5b054:	ldr	x0, [x0, #3768]
   5b058:	ldrb	w21, [x0, w20, sxtw]
   5b05c:	cmp	w21, #0x47
   5b060:	b.eq	5ae84 <my_regprop@@Base+0x20bc0>  // b.none
   5b064:	cmp	w21, #0x22
   5b068:	b.eq	5b100 <my_regprop@@Base+0x20e3c>  // b.none
   5b06c:	cmp	w21, #0x51
   5b070:	b.eq	5b190 <my_regprop@@Base+0x20ecc>  // b.none
   5b074:	cmp	w20, #0x33
   5b078:	b.eq	5b4d4 <my_regprop@@Base+0x21210>  // b.none
   5b07c:	cmp	w20, #0x36
   5b080:	mov	w0, #0x33                  	// #51
   5b084:	ccmp	w21, w0, #0x0, ne  // ne = any
   5b088:	b.eq	5b53c <my_regprop@@Base+0x21278>  // b.none
   5b08c:	sub	w0, w20, #0x31
   5b090:	and	w0, w0, #0xff
   5b094:	cmp	w0, #0x1
   5b098:	b.ls	5b5cc <my_regprop@@Base+0x21308>  // b.plast
   5b09c:	cmp	w21, #0x23
   5b0a0:	b.eq	5b630 <my_regprop@@Base+0x2136c>  // b.none
   5b0a4:	ldr	x0, [sp, #200]
   5b0a8:	ldrb	w0, [x0, w20, sxtw]
   5b0ac:	add	x0, x0, #0x1
   5b0b0:	add	x28, x28, x0, lsl #2
   5b0b4:	cmp	w20, #0x36
   5b0b8:	mov	w0, #0x38                  	// #56
   5b0bc:	ccmp	w23, w0, #0x4, ne  // ne = any
   5b0c0:	b.eq	5af14 <my_regprop@@Base+0x20c50>  // b.none
   5b0c4:	b	5af18 <my_regprop@@Base+0x20c54>
   5b0c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b0cc:	add	x3, x3, #0xc10
   5b0d0:	add	x3, x3, #0x9e8
   5b0d4:	mov	w2, #0x559b                	// #21915
   5b0d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b0dc:	add	x1, x1, #0xfb8
   5b0e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5b0e4:	add	x0, x0, #0x438
   5b0e8:	bl	58e0 <__assert_fail@plt>
   5b0ec:	mov	x1, x19
   5b0f0:	mov	x0, x27
   5b0f4:	bl	58a0 <Perl_regnext@plt>
   5b0f8:	mov	x19, x0
   5b0fc:	b	5ae94 <my_regprop@@Base+0x20bd0>
   5b100:	cbz	x19, 5b16c <my_regprop@@Base+0x20ea8>
   5b104:	cbz	x25, 5b130 <my_regprop@@Base+0x20e6c>
   5b108:	ldr	w0, [x27, #2368]
   5b10c:	tbnz	w0, #20, 5b118 <my_regprop@@Base+0x20e54>
   5b110:	ldr	x0, [sp, #248]
   5b114:	tbz	w0, #1, 5b130 <my_regprop@@Base+0x20e6c>
   5b118:	sub	x2, x28, x25
   5b11c:	asr	x2, x2, #2
   5b120:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b124:	add	x1, x1, #0x9f8
   5b128:	mov	x0, x27
   5b12c:	bl	50e0 <Perl_re_printf@plt>
   5b130:	ldr	w0, [sp, #256]
   5b134:	add	w0, w0, #0x1
   5b138:	str	w0, [sp]
   5b13c:	add	w7, w24, #0x1
   5b140:	ldr	x6, [sp, #136]
   5b144:	mov	x5, x26
   5b148:	mov	x4, x19
   5b14c:	add	x3, x28, #0x4
   5b150:	ldr	x2, [sp, #120]
   5b154:	ldr	x1, [sp, #128]
   5b158:	mov	x0, x27
   5b15c:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b160:	mov	x28, x0
   5b164:	mov	x25, #0x0                   	// #0
   5b168:	b	5af04 <my_regprop@@Base+0x20c40>
   5b16c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b170:	add	x3, x3, #0xc10
   5b174:	add	x3, x3, #0x9e8
   5b178:	mov	w2, #0x55a6                	// #21926
   5b17c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b180:	add	x1, x1, #0xfb8
   5b184:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5b188:	add	x0, x0, #0x438
   5b18c:	bl	58e0 <__assert_fail@plt>
   5b190:	ldr	w0, [x28, #4]
   5b194:	ldrb	w1, [x28, #1]
   5b198:	cmp	w1, #0x52
   5b19c:	b.ls	5b6cc <my_regprop@@Base+0x21408>  // b.plast
   5b1a0:	ldr	x1, [sp, #208]
   5b1a4:	ldr	x2, [x1, #24]
   5b1a8:	add	x1, x2, w0, uxtw #3
   5b1ac:	ldr	x1, [x1, #16]
   5b1b0:	ldr	w1, [x1, #4]
   5b1b4:	add	x1, x2, w1, uxtw #3
   5b1b8:	ldr	x22, [x1, #16]
   5b1bc:	add	w0, w0, #0x2
   5b1c0:	add	x0, x0, #0x2
   5b1c4:	ldr	x0, [x2, x0, lsl #3]
   5b1c8:	str	x0, [sp, #144]
   5b1cc:	mov	x3, #0x0                   	// #0
   5b1d0:	mov	x2, #0x0                   	// #0
   5b1d4:	ldr	x1, [sp, #136]
   5b1d8:	mov	x0, x27
   5b1dc:	bl	5830 <Perl_sv_setpv_bufsize@plt>
   5b1e0:	ldr	w0, [x22, #88]
   5b1e4:	cmp	w0, #0x0
   5b1e8:	b.le	5b4c4 <my_regprop@@Base+0x21200>
   5b1ec:	ldr	x0, [sp, #120]
   5b1f0:	sub	x0, x19, x0
   5b1f4:	asr	x0, x0, #2
   5b1f8:	str	x0, [sp, #184]
   5b1fc:	str	x28, [sp, #160]
   5b200:	mov	w3, #0x0                   	// #0
   5b204:	mov	x2, #0x0                   	// #0
   5b208:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5b20c:	add	x0, x0, #0x9f0
   5b210:	str	x0, [sp, #192]
   5b214:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5b218:	ldr	x0, [x0, #3888]
   5b21c:	str	w21, [sp, #220]
   5b220:	str	w23, [sp, #232]
   5b224:	mov	x21, x2
   5b228:	str	x19, [sp, #224]
   5b22c:	str	w20, [sp, #236]
   5b230:	mov	w20, w3
   5b234:	str	x28, [sp, #168]
   5b238:	str	x26, [sp, #176]
   5b23c:	ldr	x26, [sp, #136]
   5b240:	mov	x28, x0
   5b244:	b	5b378 <my_regprop@@Base+0x210b4>
   5b248:	mov	w3, #0x22                  	// #34
   5b24c:	mov	x2, #0x0                   	// #0
   5b250:	mov	x0, x27
   5b254:	bl	5200 <Perl_sv_2pv_flags@plt>
   5b258:	mov	x2, x0
   5b25c:	b	5b3b8 <my_regprop@@Base+0x210f4>
   5b260:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b264:	add	x3, x3, #0xc10
   5b268:	add	x3, x3, #0x9e8
   5b26c:	mov	w2, #0x55c0                	// #21952
   5b270:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b274:	add	x1, x1, #0xfb8
   5b278:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b27c:	add	x0, x0, #0xe40
   5b280:	bl	58e0 <__assert_fail@plt>
   5b284:	and	w0, w7, #0xff
   5b288:	sub	w0, w0, #0x9
   5b28c:	cmp	w0, #0x1
   5b290:	b.hi	5b3d8 <my_regprop@@Base+0x21114>  // b.pmore
   5b294:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b298:	add	x3, x3, #0xc10
   5b29c:	add	x3, x3, #0x9e8
   5b2a0:	mov	w2, #0x55c0                	// #21952
   5b2a4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b2a8:	add	x1, x1, #0xfb8
   5b2ac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b2b0:	add	x0, x0, #0xe70
   5b2b4:	bl	58e0 <__assert_fail@plt>
   5b2b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b2bc:	add	x3, x3, #0xc10
   5b2c0:	add	x3, x3, #0x9e8
   5b2c4:	mov	w2, #0x55c0                	// #21952
   5b2c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b2cc:	add	x1, x1, #0xfb8
   5b2d0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b2d4:	add	x0, x0, #0xe88
   5b2d8:	bl	58e0 <__assert_fail@plt>
   5b2dc:	ldr	x3, [sp, #192]
   5b2e0:	b	5b420 <my_regprop@@Base+0x2115c>
   5b2e4:	ldr	x0, [x22, #40]
   5b2e8:	ldrh	w21, [x0]
   5b2ec:	ldr	x0, [sp, #168]
   5b2f0:	add	x21, x0, x21, lsl #2
   5b2f4:	b	5b470 <my_regprop@@Base+0x211ac>
   5b2f8:	ldr	x0, [sp, #160]
   5b2fc:	sub	x2, x0, x25
   5b300:	asr	x2, x2, #2
   5b304:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b308:	add	x1, x1, #0x9f8
   5b30c:	mov	x0, x27
   5b310:	bl	50e0 <Perl_re_printf@plt>
   5b314:	ldr	w0, [sp, #256]
   5b318:	add	w0, w0, #0x1
   5b31c:	str	w0, [sp]
   5b320:	add	w7, w24, #0x1
   5b324:	mov	x6, x26
   5b328:	ldr	x5, [sp, #176]
   5b32c:	mov	x4, x21
   5b330:	mov	x3, x19
   5b334:	ldr	x2, [sp, #120]
   5b338:	ldr	x1, [sp, #128]
   5b33c:	mov	x0, x27
   5b340:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b344:	str	x0, [sp, #160]
   5b348:	mov	x25, #0x0                   	// #0
   5b34c:	cbz	x21, 5b368 <my_regprop@@Base+0x210a4>
   5b350:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5b354:	ldr	x0, [x0, #3768]
   5b358:	ldrb	w1, [x21, #1]
   5b35c:	ldrb	w0, [x0, w1, sxtw]
   5b360:	cmp	w0, #0x22
   5b364:	b.eq	5b488 <my_regprop@@Base+0x211c4>  // b.none
   5b368:	add	w20, w20, #0x1
   5b36c:	ldr	w0, [x22, #88]
   5b370:	cmp	w0, w20
   5b374:	b.le	5b4b0 <my_regprop@@Base+0x211ec>
   5b378:	mov	w3, #0x0                   	// #0
   5b37c:	sxtw	x2, w20
   5b380:	ldr	x1, [sp, #144]
   5b384:	mov	x0, x27
   5b388:	bl	56f0 <Perl_av_fetch@plt>
   5b38c:	mov	x19, x0
   5b390:	add	w23, w24, #0x3
   5b394:	cbz	x0, 5b2dc <my_regprop@@Base+0x21018>
   5b398:	ldr	x1, [x0]
   5b39c:	ldr	w0, [x1, #12]
   5b3a0:	mov	w2, #0x400                 	// #1024
   5b3a4:	movk	w2, #0x20, lsl #16
   5b3a8:	and	w0, w0, w2
   5b3ac:	cmp	w0, #0x400
   5b3b0:	b.ne	5b248 <my_regprop@@Base+0x20f84>  // b.any
   5b3b4:	ldr	x2, [x1, #16]
   5b3b8:	ldr	x1, [x19]
   5b3bc:	ldr	w7, [x1, #12]
   5b3c0:	and	w0, w7, #0xf
   5b3c4:	ldrb	w0, [x28, w0, uxtw]
   5b3c8:	cbz	w0, 5b260 <my_regprop@@Base+0x20f9c>
   5b3cc:	and	w0, w7, #0xc000
   5b3d0:	cmp	w0, #0x8, lsl #12
   5b3d4:	b.eq	5b284 <my_regprop@@Base+0x20fc0>  // b.none
   5b3d8:	and	w0, w7, #0xff
   5b3dc:	cmp	w0, #0xf
   5b3e0:	b.ne	5b3f0 <my_regprop@@Base+0x2112c>  // b.any
   5b3e4:	ldr	x0, [x1]
   5b3e8:	ldrb	w0, [x0, #129]
   5b3ec:	tbz	w0, #6, 5b2b8 <my_regprop@@Base+0x20ff4>
   5b3f0:	lsr	w7, w7, #21
   5b3f4:	and	w7, w7, #0x100
   5b3f8:	ldr	x0, [x1]
   5b3fc:	orr	w7, w7, #0x6
   5b400:	ldr	x6, [x27, #1456]
   5b404:	ldr	x5, [x27, #1448]
   5b408:	ldr	x4, [x27, #3360]
   5b40c:	ldr	x3, [x0, #16]
   5b410:	mov	x1, x26
   5b414:	mov	x0, x27
   5b418:	bl	53f0 <Perl_pv_pretty@plt>
   5b41c:	mov	x3, x0
   5b420:	mov	w2, w23
   5b424:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b428:	add	x1, x1, #0xac0
   5b42c:	mov	x0, x27
   5b430:	bl	5940 <Perl_re_indentf@plt>
   5b434:	ldr	x0, [x22, #40]
   5b438:	cbz	x0, 5b49c <my_regprop@@Base+0x211d8>
   5b43c:	add	x0, x0, w20, sxtw #1
   5b440:	ldrh	w19, [x0, #2]
   5b444:	cbz	w19, 5b6b4 <my_regprop@@Base+0x213f0>
   5b448:	ldr	x0, [sp, #168]
   5b44c:	add	x19, x0, w19, uxth #2
   5b450:	ldr	x0, [sp, #120]
   5b454:	sub	x2, x19, x0
   5b458:	asr	x2, x2, #2
   5b45c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b460:	add	x1, x1, #0xa30
   5b464:	mov	x0, x27
   5b468:	bl	50e0 <Perl_re_printf@plt>
   5b46c:	cbz	x21, 5b2e4 <my_regprop@@Base+0x21020>
   5b470:	cbz	x25, 5b314 <my_regprop@@Base+0x21050>
   5b474:	ldr	w0, [x27, #2368]
   5b478:	tbnz	w0, #20, 5b2f8 <my_regprop@@Base+0x21034>
   5b47c:	ldr	x0, [sp, #248]
   5b480:	tbz	w0, #1, 5b314 <my_regprop@@Base+0x21050>
   5b484:	b	5b2f8 <my_regprop@@Base+0x21034>
   5b488:	mov	x1, x21
   5b48c:	mov	x0, x27
   5b490:	bl	58a0 <Perl_regnext@plt>
   5b494:	mov	x21, x0
   5b498:	b	5b368 <my_regprop@@Base+0x210a4>
   5b49c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5b4a0:	add	x1, x1, #0x8d8
   5b4a4:	mov	x0, x27
   5b4a8:	bl	50e0 <Perl_re_printf@plt>
   5b4ac:	b	5b368 <my_regprop@@Base+0x210a4>
   5b4b0:	ldr	w21, [sp, #220]
   5b4b4:	ldr	w23, [sp, #232]
   5b4b8:	ldr	x19, [sp, #224]
   5b4bc:	ldr	w20, [sp, #236]
   5b4c0:	ldr	x26, [sp, #176]
   5b4c4:	cmp	x26, #0x0
   5b4c8:	ccmp	x19, x26, #0x0, ne  // ne = any
   5b4cc:	csel	x28, x26, x19, hi  // hi = pmore
   5b4d0:	b	5af04 <my_regprop@@Base+0x20c40>
   5b4d4:	cbz	x25, 5b500 <my_regprop@@Base+0x2123c>
   5b4d8:	ldr	w0, [x27, #2368]
   5b4dc:	tbnz	w0, #20, 5b4e8 <my_regprop@@Base+0x21224>
   5b4e0:	ldr	x0, [sp, #248]
   5b4e4:	tbz	w0, #1, 5b500 <my_regprop@@Base+0x2123c>
   5b4e8:	sub	x2, x28, x25
   5b4ec:	asr	x2, x2, #2
   5b4f0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b4f4:	add	x1, x1, #0x9f8
   5b4f8:	mov	x0, x27
   5b4fc:	bl	50e0 <Perl_re_printf@plt>
   5b500:	ldr	w0, [sp, #256]
   5b504:	add	w0, w0, #0x1
   5b508:	str	w0, [sp]
   5b50c:	add	w7, w24, #0x1
   5b510:	ldr	x6, [sp, #136]
   5b514:	mov	x5, x26
   5b518:	add	x4, x28, #0xc
   5b51c:	add	x3, x28, #0x8
   5b520:	ldr	x2, [sp, #120]
   5b524:	ldr	x1, [sp, #128]
   5b528:	mov	x0, x27
   5b52c:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b530:	mov	x28, x0
   5b534:	mov	x25, #0x0                   	// #0
   5b538:	b	5af18 <my_regprop@@Base+0x20c54>
   5b53c:	cbz	x19, 5b5a8 <my_regprop@@Base+0x212e4>
   5b540:	cbz	x25, 5b56c <my_regprop@@Base+0x212a8>
   5b544:	ldr	w0, [x27, #2368]
   5b548:	tbnz	w0, #20, 5b554 <my_regprop@@Base+0x21290>
   5b54c:	ldr	x0, [sp, #248]
   5b550:	tbz	w0, #1, 5b56c <my_regprop@@Base+0x212a8>
   5b554:	sub	x2, x28, x25
   5b558:	asr	x2, x2, #2
   5b55c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b560:	add	x1, x1, #0x9f8
   5b564:	mov	x0, x27
   5b568:	bl	50e0 <Perl_re_printf@plt>
   5b56c:	ldr	w0, [sp, #256]
   5b570:	add	w0, w0, #0x1
   5b574:	str	w0, [sp]
   5b578:	add	w7, w24, #0x1
   5b57c:	ldr	x6, [sp, #136]
   5b580:	mov	x5, x26
   5b584:	mov	x4, x19
   5b588:	add	x3, x28, #0x8
   5b58c:	ldr	x2, [sp, #120]
   5b590:	ldr	x1, [sp, #128]
   5b594:	mov	x0, x27
   5b598:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b59c:	mov	x28, x0
   5b5a0:	mov	x25, #0x0                   	// #0
   5b5a4:	b	5af04 <my_regprop@@Base+0x20c40>
   5b5a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b5ac:	add	x3, x3, #0xc10
   5b5b0:	add	x3, x3, #0x9e8
   5b5b4:	mov	w2, #0x55e3                	// #21987
   5b5b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b5bc:	add	x1, x1, #0xfb8
   5b5c0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5b5c4:	add	x0, x0, #0x438
   5b5c8:	bl	58e0 <__assert_fail@plt>
   5b5cc:	cbz	x25, 5b5f8 <my_regprop@@Base+0x21334>
   5b5d0:	ldr	w0, [x27, #2368]
   5b5d4:	tbnz	w0, #20, 5b5e0 <my_regprop@@Base+0x2131c>
   5b5d8:	ldr	x0, [sp, #248]
   5b5dc:	tbz	w0, #1, 5b5f8 <my_regprop@@Base+0x21334>
   5b5e0:	sub	x2, x28, x25
   5b5e4:	asr	x2, x2, #2
   5b5e8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b5ec:	add	x1, x1, #0x9f8
   5b5f0:	mov	x0, x27
   5b5f4:	bl	50e0 <Perl_re_printf@plt>
   5b5f8:	ldr	w0, [sp, #256]
   5b5fc:	add	w0, w0, #0x1
   5b600:	str	w0, [sp]
   5b604:	add	w7, w24, #0x1
   5b608:	ldr	x6, [sp, #136]
   5b60c:	mov	x5, x26
   5b610:	add	x4, x28, #0x8
   5b614:	add	x3, x28, #0x4
   5b618:	ldr	x2, [sp, #120]
   5b61c:	ldr	x1, [sp, #128]
   5b620:	mov	x0, x27
   5b624:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b628:	mov	x28, x0
   5b62c:	b	5b534 <my_regprop@@Base+0x21270>
   5b630:	ldrb	w0, [x28]
   5b634:	add	x0, x0, #0x3
   5b638:	and	x0, x0, #0x1fc
   5b63c:	add	x0, x0, #0x4
   5b640:	add	x28, x28, x0
   5b644:	b	5af04 <my_regprop@@Base+0x20c40>
   5b648:	mov	x19, x28
   5b64c:	b	5b68c <my_regprop@@Base+0x213c8>
   5b650:	mov	x19, x28
   5b654:	b	5b65c <my_regprop@@Base+0x21398>
   5b658:	mov	x19, x28
   5b65c:	cbz	x25, 5b6dc <my_regprop@@Base+0x21418>
   5b660:	ldr	w0, [x27, #2368]
   5b664:	tbnz	w0, #20, 5b670 <my_regprop@@Base+0x213ac>
   5b668:	ldr	x0, [sp, #248]
   5b66c:	tbz	w0, #1, 5b6e4 <my_regprop@@Base+0x21420>
   5b670:	sub	x2, x19, x25
   5b674:	asr	x2, x2, #2
   5b678:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b67c:	add	x1, x1, #0x9f8
   5b680:	mov	x0, x27
   5b684:	bl	50e0 <Perl_re_printf@plt>
   5b688:	ldp	x21, x22, [sp, #48]
   5b68c:	mov	x0, x19
   5b690:	ldp	x19, x20, [sp, #32]
   5b694:	ldp	x23, x24, [sp, #64]
   5b698:	ldp	x25, x26, [sp, #80]
   5b69c:	ldp	x27, x28, [sp, #96]
   5b6a0:	ldp	x29, x30, [sp, #16]
   5b6a4:	add	sp, sp, #0x100
   5b6a8:	ret
   5b6ac:	mov	x19, x28
   5b6b0:	b	5b68c <my_regprop@@Base+0x213c8>
   5b6b4:	ldr	x2, [sp, #184]
   5b6b8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5b6bc:	add	x1, x1, #0xa30
   5b6c0:	mov	x0, x27
   5b6c4:	bl	50e0 <Perl_re_printf@plt>
   5b6c8:	b	5b34c <my_regprop@@Base+0x21088>
   5b6cc:	ldr	x1, [sp, #208]
   5b6d0:	ldr	x2, [x1, #24]
   5b6d4:	mov	w1, w0
   5b6d8:	b	5b1b4 <my_regprop@@Base+0x20ef0>
   5b6dc:	ldp	x21, x22, [sp, #48]
   5b6e0:	b	5b68c <my_regprop@@Base+0x213c8>
   5b6e4:	ldp	x21, x22, [sp, #48]
   5b6e8:	b	5b68c <my_regprop@@Base+0x213c8>

000000000005b6ec <my_regdump@@Base>:
   5b6ec:	sub	sp, sp, #0xa0
   5b6f0:	stp	x29, x30, [sp, #16]
   5b6f4:	add	x29, sp, #0x10
   5b6f8:	stp	x19, x20, [sp, #32]
   5b6fc:	stp	x21, x22, [sp, #48]
   5b700:	stp	x23, x24, [sp, #64]
   5b704:	stp	x25, x26, [sp, #80]
   5b708:	stp	x27, x28, [sp, #96]
   5b70c:	mov	x19, x0
   5b710:	mov	x20, x1
   5b714:	bl	59b0 <Perl_sv_newmortal@plt>
   5b718:	str	x0, [sp, #128]
   5b71c:	mov	x0, x19
   5b720:	bl	59b0 <Perl_sv_newmortal@plt>
   5b724:	str	x0, [sp, #120]
   5b728:	ldr	x25, [x20, #104]
   5b72c:	str	xzr, [sp, #152]
   5b730:	ldr	x0, [x19, #224]
   5b734:	cbz	x0, 5b79c <my_regdump@@Base+0xb0>
   5b738:	mov	w2, #0x1                   	// #1
   5b73c:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5b740:	add	x1, x1, #0x608
   5b744:	mov	x0, x19
   5b748:	bl	54f0 <Perl_get_sv@plt>
   5b74c:	mov	x21, x0
   5b750:	cbz	x0, 5b79c <my_regdump@@Base+0xb0>
   5b754:	ldr	w0, [x0, #12]
   5b758:	tbz	w0, #8, 5b7e8 <my_regdump@@Base+0xfc>
   5b75c:	ldr	w1, [x21, #12]
   5b760:	and	w0, w1, #0x3fff00
   5b764:	and	w0, w0, #0xffe001ff
   5b768:	cmp	w0, #0x100
   5b76c:	b.ne	5b854 <my_regdump@@Base+0x168>  // b.any
   5b770:	and	w2, w1, #0xf
   5b774:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5b778:	ldr	x0, [x0, #3712]
   5b77c:	ldrb	w0, [x0, w2, uxtw]
   5b780:	cbz	w0, 5b7fc <my_regdump@@Base+0x110>
   5b784:	and	w0, w1, #0xc000
   5b788:	cmp	w0, #0x8, lsl #12
   5b78c:	b.eq	5b820 <my_regdump@@Base+0x134>  // b.none
   5b790:	ldr	x0, [x21]
   5b794:	ldr	x0, [x0, #32]
   5b798:	str	x0, [sp, #152]
   5b79c:	str	wzr, [sp]
   5b7a0:	mov	w7, #0x0                   	// #0
   5b7a4:	ldr	x6, [sp, #128]
   5b7a8:	mov	x5, #0x0                   	// #0
   5b7ac:	mov	x4, #0x0                   	// #0
   5b7b0:	add	x3, x25, #0x2c
   5b7b4:	add	x2, x25, #0x28
   5b7b8:	mov	x1, x20
   5b7bc:	mov	x0, x19
   5b7c0:	bl	5abf8 <my_regprop@@Base+0x20934>
   5b7c4:	mov	w21, #0x0                   	// #0
   5b7c8:	adrp	x26, 91000 <boot_re@@Base+0x2f41c>
   5b7cc:	ldr	x0, [x26, #3888]
   5b7d0:	str	x0, [sp, #136]
   5b7d4:	mov	w24, #0x4000                	// #16384
   5b7d8:	movk	w24, #0x40, lsl #16
   5b7dc:	adrp	x23, 6a000 <boot_re@@Base+0x841c>
   5b7e0:	add	x23, x23, #0xf60
   5b7e4:	b	5ba98 <my_regdump@@Base+0x3ac>
   5b7e8:	mov	x2, #0xff08                	// #65288
   5b7ec:	mov	x1, x21
   5b7f0:	mov	x0, x19
   5b7f4:	bl	5310 <Perl_sv_setuv@plt>
   5b7f8:	b	5b75c <my_regdump@@Base+0x70>
   5b7fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b800:	add	x3, x3, #0xc10
   5b804:	add	x3, x3, #0x9f8
   5b808:	mov	w2, #0x4e5a                	// #20058
   5b80c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b810:	add	x1, x1, #0xfb8
   5b814:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b818:	add	x0, x0, #0xda0
   5b81c:	bl	58e0 <__assert_fail@plt>
   5b820:	and	w0, w1, #0xff
   5b824:	sub	w0, w0, #0x9
   5b828:	cmp	w0, #0x1
   5b82c:	b.hi	5b790 <my_regdump@@Base+0xa4>  // b.pmore
   5b830:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b834:	add	x3, x3, #0xc10
   5b838:	add	x3, x3, #0x9f8
   5b83c:	mov	w2, #0x4e5a                	// #20058
   5b840:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b844:	add	x1, x1, #0xfb8
   5b848:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b84c:	add	x0, x0, #0xdd0
   5b850:	bl	58e0 <__assert_fail@plt>
   5b854:	mov	w2, #0x2                   	// #2
   5b858:	mov	x1, x21
   5b85c:	mov	x0, x19
   5b860:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5b864:	b	5b798 <my_regdump@@Base+0xac>
   5b868:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b86c:	add	x3, x3, #0xc10
   5b870:	add	x3, x3, #0x9f8
   5b874:	mov	w2, #0x4e65                	// #20069
   5b878:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b87c:	add	x1, x1, #0xfb8
   5b880:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b884:	add	x0, x0, #0xe40
   5b888:	bl	58e0 <__assert_fail@plt>
   5b88c:	and	w1, w0, #0xff
   5b890:	sub	w1, w1, #0x9
   5b894:	cmp	w1, #0x1
   5b898:	b.hi	5bad4 <my_regdump@@Base+0x3e8>  // b.pmore
   5b89c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b8a0:	add	x3, x3, #0xc10
   5b8a4:	add	x3, x3, #0x9f8
   5b8a8:	mov	w2, #0x4e65                	// #20069
   5b8ac:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b8b0:	add	x1, x1, #0xfb8
   5b8b4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b8b8:	add	x0, x0, #0xe70
   5b8bc:	bl	58e0 <__assert_fail@plt>
   5b8c0:	ldr	x2, [x22]
   5b8c4:	ldrb	w3, [x2, #129]
   5b8c8:	tbz	w3, #6, 5b8d4 <my_regdump@@Base+0x1e8>
   5b8cc:	ldr	x28, [x2, #16]
   5b8d0:	b	5baf8 <my_regdump@@Base+0x40c>
   5b8d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b8d8:	add	x3, x3, #0xc10
   5b8dc:	add	x3, x3, #0x9f8
   5b8e0:	mov	w2, #0x4e65                	// #20069
   5b8e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b8e8:	add	x1, x1, #0xfb8
   5b8ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b8f0:	add	x0, x0, #0xe88
   5b8f4:	bl	58e0 <__assert_fail@plt>
   5b8f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b8fc:	add	x3, x3, #0xc10
   5b900:	add	x3, x3, #0x9f8
   5b904:	mov	w2, #0x4e65                	// #20069
   5b908:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b90c:	add	x1, x1, #0xfb8
   5b910:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b914:	add	x0, x0, #0xf18
   5b918:	bl	58e0 <__assert_fail@plt>
   5b91c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b920:	add	x3, x3, #0xc10
   5b924:	add	x3, x3, #0x9f8
   5b928:	mov	w2, #0x4e65                	// #20069
   5b92c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b930:	add	x1, x1, #0xfb8
   5b934:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b938:	add	x0, x0, #0xf38
   5b93c:	bl	58e0 <__assert_fail@plt>
   5b940:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b944:	add	x3, x3, #0xc10
   5b948:	add	x3, x3, #0x9f8
   5b94c:	mov	w2, #0x4e65                	// #20069
   5b950:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b954:	add	x1, x1, #0xfb8
   5b958:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b95c:	add	x0, x0, #0xf58
   5b960:	bl	58e0 <__assert_fail@plt>
   5b964:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b968:	add	x3, x3, #0xc10
   5b96c:	add	x3, x3, #0x9f8
   5b970:	mov	w2, #0x4e65                	// #20069
   5b974:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b978:	add	x1, x1, #0xfb8
   5b97c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b980:	add	x0, x0, #0xef8
   5b984:	bl	58e0 <__assert_fail@plt>
   5b988:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b98c:	add	x3, x3, #0xc10
   5b990:	add	x3, x3, #0x9f8
   5b994:	mov	w2, #0x4e65                	// #20069
   5b998:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b99c:	add	x1, x1, #0xfb8
   5b9a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b9a4:	add	x0, x0, #0xf80
   5b9a8:	bl	58e0 <__assert_fail@plt>
   5b9ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b9b0:	add	x3, x3, #0xc10
   5b9b4:	add	x3, x3, #0x9f8
   5b9b8:	mov	w2, #0x4e6b                	// #20075
   5b9bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b9c0:	add	x1, x1, #0xfb8
   5b9c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b9c8:	add	x0, x0, #0xf18
   5b9cc:	bl	58e0 <__assert_fail@plt>
   5b9d0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b9d4:	add	x3, x3, #0xc10
   5b9d8:	add	x3, x3, #0x9f8
   5b9dc:	mov	w2, #0x4e6b                	// #20075
   5b9e0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5b9e4:	add	x1, x1, #0xfb8
   5b9e8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5b9ec:	add	x0, x0, #0xf38
   5b9f0:	bl	58e0 <__assert_fail@plt>
   5b9f4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5b9f8:	add	x3, x3, #0xc10
   5b9fc:	add	x3, x3, #0x9f8
   5ba00:	mov	w2, #0x4e6b                	// #20075
   5ba04:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ba08:	add	x1, x1, #0xfb8
   5ba0c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ba10:	add	x0, x0, #0xf58
   5ba14:	bl	58e0 <__assert_fail@plt>
   5ba18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ba1c:	add	x3, x3, #0xc10
   5ba20:	add	x3, x3, #0x9f8
   5ba24:	mov	w2, #0x4e6b                	// #20075
   5ba28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ba2c:	add	x1, x1, #0xfb8
   5ba30:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ba34:	add	x0, x0, #0xef8
   5ba38:	bl	58e0 <__assert_fail@plt>
   5ba3c:	ldr	x0, [x27]
   5ba40:	ldrb	w0, [x0, #40]
   5ba44:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ba48:	add	x1, x1, #0x20
   5ba4c:	adrp	x4, 6a000 <boot_re@@Base+0x841c>
   5ba50:	add	x4, x4, #0xf80
   5ba54:	cmp	w0, #0x0
   5ba58:	sbfiz	x0, x21, #2, #32
   5ba5c:	add	x0, x0, w21, sxtw
   5ba60:	ldr	x2, [x20, #88]
   5ba64:	add	x0, x2, x0, lsl #3
   5ba68:	ldr	x6, [x0, #16]
   5ba6c:	ldr	x5, [x0, #8]
   5ba70:	csel	x4, x4, x1, ne  // ne = any
   5ba74:	mov	x3, x28
   5ba78:	mov	x2, x22
   5ba7c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5ba80:	add	x1, x1, #0xa68
   5ba84:	mov	x0, x19
   5ba88:	bl	50e0 <Perl_re_printf@plt>
   5ba8c:	add	w21, w21, #0x1
   5ba90:	cmp	w21, #0x2
   5ba94:	b.eq	5bfb4 <my_regdump@@Base+0x8c8>  // b.none
   5ba98:	ldr	x1, [x20, #88]
   5ba9c:	sbfiz	x0, x21, #2, #32
   5baa0:	add	x0, x0, w21, sxtw
   5baa4:	add	x0, x1, x0, lsl #3
   5baa8:	ldr	x22, [x0, #24]
   5baac:	cbz	x22, 5bc14 <my_regdump@@Base+0x528>
   5bab0:	ldr	x27, [x22, #16]
   5bab4:	ldr	w0, [x22, #12]
   5bab8:	ldr	x1, [x26, #3888]
   5babc:	and	w2, w0, #0xf
   5bac0:	ldrb	w1, [x1, w2, uxtw]
   5bac4:	cbz	w1, 5b868 <my_regdump@@Base+0x17c>
   5bac8:	and	w1, w0, #0xc000
   5bacc:	cmp	w1, #0x8, lsl #12
   5bad0:	b.eq	5b88c <my_regdump@@Base+0x1a0>  // b.none
   5bad4:	and	w1, w0, #0xff
   5bad8:	cmp	w1, #0xf
   5badc:	b.eq	5b8c0 <my_regdump@@Base+0x1d4>  // b.none
   5bae0:	ldr	x2, [x22]
   5bae4:	ldr	x28, [x2, #16]
   5bae8:	cmp	w1, #0xb
   5baec:	b.eq	5b8f8 <my_regdump@@Base+0x20c>  // b.none
   5baf0:	cmp	w1, #0xc
   5baf4:	b.eq	5b91c <my_regdump@@Base+0x230>  // b.none
   5baf8:	mov	w3, #0x2200                	// #8704
   5bafc:	tst	w0, w3
   5bb00:	b.ne	5b940 <my_regdump@@Base+0x254>  // b.any
   5bb04:	and	w0, w0, w24
   5bb08:	cmp	w0, #0x404, lsl #12
   5bb0c:	b.ne	5b988 <my_regdump@@Base+0x29c>  // b.any
   5bb10:	cmp	w1, #0x6
   5bb14:	b.ls	5b964 <my_regdump@@Base+0x278>  // b.plast
   5bb18:	ldr	x0, [x2, #8]
   5bb1c:	cbz	x0, 5b988 <my_regdump@@Base+0x29c>
   5bb20:	ldrb	w0, [x0, #18]
   5bb24:	cmp	w0, #0x42
   5bb28:	b.eq	5bb3c <my_regdump@@Base+0x450>  // b.none
   5bb2c:	mov	w1, #0x42                  	// #66
   5bb30:	mov	x0, x22
   5bb34:	bl	57d0 <Perl_mg_find@plt>
   5bb38:	cbz	x0, 5b988 <my_regdump@@Base+0x29c>
   5bb3c:	ldr	x0, [x22]
   5bb40:	ldrb	w3, [x0, #40]
   5bb44:	mov	w7, #0x8403                	// #33795
   5bb48:	ldr	x6, [x19, #1456]
   5bb4c:	ldr	x5, [x19, #1448]
   5bb50:	ldr	x4, [x19, #3360]
   5bb54:	sub	x3, x28, x3
   5bb58:	mov	x2, x27
   5bb5c:	ldr	x1, [sp, #120]
   5bb60:	mov	x0, x19
   5bb64:	bl	53f0 <Perl_pv_pretty@plt>
   5bb68:	mov	x28, x0
   5bb6c:	adrp	x22, 6a000 <boot_re@@Base+0x841c>
   5bb70:	add	x22, x22, #0xf70
   5bb74:	cmp	w21, #0x0
   5bb78:	csel	x22, x22, x23, ne  // ne = any
   5bb7c:	ldr	x1, [x20, #88]
   5bb80:	sbfiz	x0, x21, #2, #32
   5bb84:	add	x0, x0, w21, sxtw
   5bb88:	add	x0, x1, x0, lsl #3
   5bb8c:	ldr	x27, [x0, #24]
   5bb90:	ldr	w0, [x27, #12]
   5bb94:	and	w1, w0, #0xff
   5bb98:	cmp	w1, #0xb
   5bb9c:	b.eq	5b9ac <my_regdump@@Base+0x2c0>  // b.none
   5bba0:	cmp	w1, #0xc
   5bba4:	b.eq	5b9d0 <my_regdump@@Base+0x2e4>  // b.none
   5bba8:	mov	w2, #0x2200                	// #8704
   5bbac:	tst	w0, w2
   5bbb0:	b.ne	5b9f4 <my_regdump@@Base+0x308>  // b.any
   5bbb4:	and	w0, w0, w24
   5bbb8:	cmp	w0, #0x404, lsl #12
   5bbbc:	b.ne	5bbf0 <my_regdump@@Base+0x504>  // b.any
   5bbc0:	cmp	w1, #0x6
   5bbc4:	b.ls	5ba18 <my_regdump@@Base+0x32c>  // b.plast
   5bbc8:	ldr	x0, [x27]
   5bbcc:	ldr	x0, [x0, #8]
   5bbd0:	cbz	x0, 5bbf0 <my_regdump@@Base+0x504>
   5bbd4:	ldrb	w0, [x0, #18]
   5bbd8:	cmp	w0, #0x42
   5bbdc:	b.eq	5ba3c <my_regdump@@Base+0x350>  // b.none
   5bbe0:	mov	w1, #0x42                  	// #66
   5bbe4:	mov	x0, x27
   5bbe8:	bl	57d0 <Perl_mg_find@plt>
   5bbec:	cbnz	x0, 5ba3c <my_regdump@@Base+0x350>
   5bbf0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bbf4:	add	x3, x3, #0xc10
   5bbf8:	add	x3, x3, #0x9f8
   5bbfc:	mov	w2, #0x4e6b                	// #20075
   5bc00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bc04:	add	x1, x1, #0xfb8
   5bc08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bc0c:	add	x0, x0, #0xf80
   5bc10:	bl	58e0 <__assert_fail@plt>
   5bc14:	sbfiz	x0, x21, #2, #32
   5bc18:	add	x0, x0, w21, sxtw
   5bc1c:	add	x1, x1, x0, lsl #3
   5bc20:	ldr	x22, [x1, #32]
   5bc24:	cbz	x22, 5ba8c <my_regdump@@Base+0x3a0>
   5bc28:	ldr	x28, [x22, #16]
   5bc2c:	ldr	w0, [x22, #12]
   5bc30:	and	w1, w0, #0xf
   5bc34:	ldr	x2, [sp, #136]
   5bc38:	ldrb	w1, [x2, w1, uxtw]
   5bc3c:	cbz	w1, 5bdac <my_regdump@@Base+0x6c0>
   5bc40:	and	w1, w0, #0xc000
   5bc44:	cmp	w1, #0x8, lsl #12
   5bc48:	b.eq	5bdd0 <my_regdump@@Base+0x6e4>  // b.none
   5bc4c:	and	w1, w0, #0xff
   5bc50:	cmp	w1, #0xf
   5bc54:	b.eq	5be04 <my_regdump@@Base+0x718>  // b.none
   5bc58:	ldr	x2, [x22]
   5bc5c:	ldr	x27, [x2, #16]
   5bc60:	cmp	w1, #0xb
   5bc64:	b.eq	5be3c <my_regdump@@Base+0x750>  // b.none
   5bc68:	cmp	w1, #0xc
   5bc6c:	b.eq	5be60 <my_regdump@@Base+0x774>  // b.none
   5bc70:	mov	w3, #0x2200                	// #8704
   5bc74:	tst	w0, w3
   5bc78:	b.ne	5be84 <my_regdump@@Base+0x798>  // b.any
   5bc7c:	and	w0, w0, w24
   5bc80:	cmp	w0, #0x404, lsl #12
   5bc84:	b.ne	5becc <my_regdump@@Base+0x7e0>  // b.any
   5bc88:	cmp	w1, #0x6
   5bc8c:	b.ls	5bea8 <my_regdump@@Base+0x7bc>  // b.plast
   5bc90:	ldr	x0, [x2, #8]
   5bc94:	cbz	x0, 5becc <my_regdump@@Base+0x7e0>
   5bc98:	ldrb	w0, [x0, #18]
   5bc9c:	cmp	w0, #0x42
   5bca0:	b.eq	5bcb4 <my_regdump@@Base+0x5c8>  // b.none
   5bca4:	mov	w1, #0x42                  	// #66
   5bca8:	mov	x0, x22
   5bcac:	bl	57d0 <Perl_mg_find@plt>
   5bcb0:	cbz	x0, 5becc <my_regdump@@Base+0x7e0>
   5bcb4:	ldr	x0, [x22]
   5bcb8:	ldrb	w3, [x0, #40]
   5bcbc:	mov	w7, #0x8503                	// #34051
   5bcc0:	ldr	x6, [x19, #1456]
   5bcc4:	ldr	x5, [x19, #1448]
   5bcc8:	mov	x4, #0x1e                  	// #30
   5bccc:	sub	x3, x27, x3
   5bcd0:	mov	x2, x28
   5bcd4:	ldr	x1, [sp, #120]
   5bcd8:	mov	x0, x19
   5bcdc:	bl	53f0 <Perl_pv_pretty@plt>
   5bce0:	mov	x28, x0
   5bce4:	adrp	x27, 6a000 <boot_re@@Base+0x841c>
   5bce8:	add	x27, x27, #0xf70
   5bcec:	cmp	w21, #0x0
   5bcf0:	csel	x27, x27, x23, ne  // ne = any
   5bcf4:	ldr	x1, [x20, #88]
   5bcf8:	sbfiz	x0, x21, #2, #32
   5bcfc:	add	x0, x0, w21, sxtw
   5bd00:	add	x0, x1, x0, lsl #3
   5bd04:	ldr	x22, [x0, #32]
   5bd08:	ldr	w0, [x22, #12]
   5bd0c:	and	w1, w0, #0xff
   5bd10:	cmp	w1, #0xb
   5bd14:	b.eq	5bef0 <my_regdump@@Base+0x804>  // b.none
   5bd18:	cmp	w1, #0xc
   5bd1c:	b.eq	5bf14 <my_regdump@@Base+0x828>  // b.none
   5bd20:	mov	w2, #0x2200                	// #8704
   5bd24:	tst	w0, w2
   5bd28:	b.ne	5bf38 <my_regdump@@Base+0x84c>  // b.any
   5bd2c:	and	w0, w0, w24
   5bd30:	cmp	w0, #0x404, lsl #12
   5bd34:	b.ne	5bf90 <my_regdump@@Base+0x8a4>  // b.any
   5bd38:	cmp	w1, #0x6
   5bd3c:	b.ls	5bf5c <my_regdump@@Base+0x870>  // b.plast
   5bd40:	ldr	x0, [x22]
   5bd44:	ldr	x0, [x0, #8]
   5bd48:	cbz	x0, 5bf90 <my_regdump@@Base+0x8a4>
   5bd4c:	ldrb	w0, [x0, #18]
   5bd50:	cmp	w0, #0x42
   5bd54:	b.ne	5bf80 <my_regdump@@Base+0x894>  // b.any
   5bd58:	ldr	x0, [x22]
   5bd5c:	ldrb	w0, [x0, #40]
   5bd60:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5bd64:	add	x1, x1, #0x20
   5bd68:	adrp	x4, 6a000 <boot_re@@Base+0x841c>
   5bd6c:	add	x4, x4, #0xf80
   5bd70:	cmp	w0, #0x0
   5bd74:	sbfiz	x0, x21, #2, #32
   5bd78:	add	x0, x0, w21, sxtw
   5bd7c:	ldr	x2, [x20, #88]
   5bd80:	add	x0, x2, x0, lsl #3
   5bd84:	ldr	x6, [x0, #16]
   5bd88:	ldr	x5, [x0, #8]
   5bd8c:	csel	x4, x4, x1, ne  // ne = any
   5bd90:	mov	x3, x28
   5bd94:	mov	x2, x27
   5bd98:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5bd9c:	add	x1, x1, #0xa80
   5bda0:	mov	x0, x19
   5bda4:	bl	50e0 <Perl_re_printf@plt>
   5bda8:	b	5ba8c <my_regdump@@Base+0x3a0>
   5bdac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bdb0:	add	x3, x3, #0xc10
   5bdb4:	add	x3, x3, #0x9f8
   5bdb8:	mov	w2, #0x4e72                	// #20082
   5bdbc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bdc0:	add	x1, x1, #0xfb8
   5bdc4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bdc8:	add	x0, x0, #0xe40
   5bdcc:	bl	58e0 <__assert_fail@plt>
   5bdd0:	and	w1, w0, #0xff
   5bdd4:	sub	w1, w1, #0x9
   5bdd8:	cmp	w1, #0x1
   5bddc:	b.hi	5bc4c <my_regdump@@Base+0x560>  // b.pmore
   5bde0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bde4:	add	x3, x3, #0xc10
   5bde8:	add	x3, x3, #0x9f8
   5bdec:	mov	w2, #0x4e72                	// #20082
   5bdf0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bdf4:	add	x1, x1, #0xfb8
   5bdf8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bdfc:	add	x0, x0, #0xe70
   5be00:	bl	58e0 <__assert_fail@plt>
   5be04:	ldr	x2, [x22]
   5be08:	ldrb	w3, [x2, #129]
   5be0c:	tbz	w3, #6, 5be18 <my_regdump@@Base+0x72c>
   5be10:	ldr	x27, [x2, #16]
   5be14:	b	5bc70 <my_regdump@@Base+0x584>
   5be18:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5be1c:	add	x3, x3, #0xc10
   5be20:	add	x3, x3, #0x9f8
   5be24:	mov	w2, #0x4e72                	// #20082
   5be28:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5be2c:	add	x1, x1, #0xfb8
   5be30:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5be34:	add	x0, x0, #0xe88
   5be38:	bl	58e0 <__assert_fail@plt>
   5be3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5be40:	add	x3, x3, #0xc10
   5be44:	add	x3, x3, #0x9f8
   5be48:	mov	w2, #0x4e72                	// #20082
   5be4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5be50:	add	x1, x1, #0xfb8
   5be54:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5be58:	add	x0, x0, #0xf18
   5be5c:	bl	58e0 <__assert_fail@plt>
   5be60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5be64:	add	x3, x3, #0xc10
   5be68:	add	x3, x3, #0x9f8
   5be6c:	mov	w2, #0x4e72                	// #20082
   5be70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5be74:	add	x1, x1, #0xfb8
   5be78:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5be7c:	add	x0, x0, #0xf38
   5be80:	bl	58e0 <__assert_fail@plt>
   5be84:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5be88:	add	x3, x3, #0xc10
   5be8c:	add	x3, x3, #0x9f8
   5be90:	mov	w2, #0x4e72                	// #20082
   5be94:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5be98:	add	x1, x1, #0xfb8
   5be9c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bea0:	add	x0, x0, #0xf58
   5bea4:	bl	58e0 <__assert_fail@plt>
   5bea8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5beac:	add	x3, x3, #0xc10
   5beb0:	add	x3, x3, #0x9f8
   5beb4:	mov	w2, #0x4e72                	// #20082
   5beb8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bebc:	add	x1, x1, #0xfb8
   5bec0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bec4:	add	x0, x0, #0xef8
   5bec8:	bl	58e0 <__assert_fail@plt>
   5becc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bed0:	add	x3, x3, #0xc10
   5bed4:	add	x3, x3, #0x9f8
   5bed8:	mov	w2, #0x4e72                	// #20082
   5bedc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bee0:	add	x1, x1, #0xfb8
   5bee4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bee8:	add	x0, x0, #0xf80
   5beec:	bl	58e0 <__assert_fail@plt>
   5bef0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bef4:	add	x3, x3, #0xc10
   5bef8:	add	x3, x3, #0x9f8
   5befc:	mov	w2, #0x4e78                	// #20088
   5bf00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bf04:	add	x1, x1, #0xfb8
   5bf08:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bf0c:	add	x0, x0, #0xf18
   5bf10:	bl	58e0 <__assert_fail@plt>
   5bf14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bf18:	add	x3, x3, #0xc10
   5bf1c:	add	x3, x3, #0x9f8
   5bf20:	mov	w2, #0x4e78                	// #20088
   5bf24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bf28:	add	x1, x1, #0xfb8
   5bf2c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bf30:	add	x0, x0, #0xf38
   5bf34:	bl	58e0 <__assert_fail@plt>
   5bf38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bf3c:	add	x3, x3, #0xc10
   5bf40:	add	x3, x3, #0x9f8
   5bf44:	mov	w2, #0x4e78                	// #20088
   5bf48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bf4c:	add	x1, x1, #0xfb8
   5bf50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bf54:	add	x0, x0, #0xf58
   5bf58:	bl	58e0 <__assert_fail@plt>
   5bf5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bf60:	add	x3, x3, #0xc10
   5bf64:	add	x3, x3, #0x9f8
   5bf68:	mov	w2, #0x4e78                	// #20088
   5bf6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bf70:	add	x1, x1, #0xfb8
   5bf74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bf78:	add	x0, x0, #0xef8
   5bf7c:	bl	58e0 <__assert_fail@plt>
   5bf80:	mov	w1, #0x42                  	// #66
   5bf84:	mov	x0, x22
   5bf88:	bl	57d0 <Perl_mg_find@plt>
   5bf8c:	cbnz	x0, 5bd58 <my_regdump@@Base+0x66c>
   5bf90:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5bf94:	add	x3, x3, #0xc10
   5bf98:	add	x3, x3, #0x9f8
   5bf9c:	mov	w2, #0x4e78                	// #20088
   5bfa0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5bfa4:	add	x1, x1, #0xfb8
   5bfa8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5bfac:	add	x0, x0, #0xf80
   5bfb0:	bl	58e0 <__assert_fail@plt>
   5bfb4:	ldr	x0, [x20, #88]
   5bfb8:	ldr	x2, [x0, #104]
   5bfbc:	cbz	x2, 5c0c4 <my_regdump@@Base+0x9d8>
   5bfc0:	ldr	x3, [x0, #64]
   5bfc4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5bfc8:	add	x1, x1, #0xa38
   5bfcc:	cmp	x2, x3
   5bfd0:	b.eq	5c0d0 <my_regdump@@Base+0x9e4>  // b.none
   5bfd4:	mov	x0, x19
   5bfd8:	bl	50e0 <Perl_re_printf@plt>
   5bfdc:	ldr	w0, [x20, #100]
   5bfe0:	tbnz	w0, #6, 5c0f4 <my_regdump@@Base+0xa08>
   5bfe4:	ldr	w0, [x20, #56]
   5bfe8:	tbnz	w0, #19, 5c108 <my_regdump@@Base+0xa1c>
   5bfec:	ldr	x0, [x20, #88]
   5bff0:	ldr	x1, [x0, #104]
   5bff4:	cbz	x1, 5c11c <my_regdump@@Base+0xa30>
   5bff8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5bffc:	add	x1, x1, #0xab0
   5c000:	mov	x0, x19
   5c004:	bl	50e0 <Perl_re_printf@plt>
   5c008:	ldr	x3, [x25, #16]
   5c00c:	cbz	x3, 5c040 <my_regdump@@Base+0x954>
   5c010:	mov	x5, #0x0                   	// #0
   5c014:	mov	x4, #0x0                   	// #0
   5c018:	ldr	x21, [sp, #128]
   5c01c:	mov	x2, x21
   5c020:	mov	x1, x20
   5c024:	mov	x0, x19
   5c028:	bl	5580 <my_regprop@plt>
   5c02c:	ldr	x2, [x21, #16]
   5c030:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c034:	add	x1, x1, #0xab8
   5c038:	mov	x0, x19
   5c03c:	bl	50e0 <Perl_re_printf@plt>
   5c040:	ldr	w0, [x20, #100]
   5c044:	tst	w0, #0x1c00
   5c048:	b.ne	5c128 <my_regdump@@Base+0xa3c>  // b.any
   5c04c:	ldr	w0, [x20, #100]
   5c050:	tbnz	w0, #8, 5c1a0 <my_regdump@@Base+0xab4>
   5c054:	ldr	w0, [x20, #100]
   5c058:	tbnz	w0, #0, 5c1b8 <my_regdump@@Base+0xacc>
   5c05c:	ldr	w0, [x20, #100]
   5c060:	tbnz	w0, #1, 5c1cc <my_regdump@@Base+0xae0>
   5c064:	ldr	x2, [x20, #64]
   5c068:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c06c:	add	x1, x1, #0xb08
   5c070:	mov	x0, x19
   5c074:	bl	50e0 <Perl_re_printf@plt>
   5c078:	ldr	w0, [x20, #56]
   5c07c:	tbnz	w0, #17, 5c1e0 <my_regdump@@Base+0xaf4>
   5c080:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c084:	add	x1, x1, #0x8d8
   5c088:	mov	x0, x19
   5c08c:	bl	50e0 <Perl_re_printf@plt>
   5c090:	ldr	w0, [x19, #2368]
   5c094:	tbnz	w0, #20, 5c0a0 <my_regdump@@Base+0x9b4>
   5c098:	ldr	x0, [sp, #152]
   5c09c:	tbz	w0, #4, 5c3c8 <my_regdump@@Base+0xcdc>
   5c0a0:	ldr	w22, [x20, #56]
   5c0a4:	mov	x21, #0x0                   	// #0
   5c0a8:	mov	w0, #0x0                   	// #0
   5c0ac:	mov	w26, #0x1                   	// #1
   5c0b0:	adrp	x25, 91000 <boot_re@@Base+0x2f41c>
   5c0b4:	ldr	x25, [x25, #3912]
   5c0b8:	adrp	x24, 7c000 <boot_re@@Base+0x1a41c>
   5c0bc:	add	x24, x24, #0xac0
   5c0c0:	b	5c214 <my_regdump@@Base+0xb28>
   5c0c4:	ldr	x1, [x0, #112]
   5c0c8:	cbnz	x1, 5bfc0 <my_regdump@@Base+0x8d4>
   5c0cc:	b	5bfdc <my_regdump@@Base+0x8f0>
   5c0d0:	ldr	x3, [x0, #112]
   5c0d4:	ldr	x2, [x0, #72]
   5c0d8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c0dc:	add	x0, x1, #0xa50
   5c0e0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c0e4:	add	x1, x1, #0xa38
   5c0e8:	cmp	x3, x2
   5c0ec:	csel	x1, x1, x0, ne  // ne = any
   5c0f0:	b	5bfd4 <my_regdump@@Base+0x8e8>
   5c0f4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c0f8:	add	x1, x1, #0xaa0
   5c0fc:	mov	x0, x19
   5c100:	bl	50e0 <Perl_re_printf@plt>
   5c104:	b	5bfe4 <my_regdump@@Base+0x8f8>
   5c108:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c10c:	add	x1, x1, #0xaa8
   5c110:	mov	x0, x19
   5c114:	bl	50e0 <Perl_re_printf@plt>
   5c118:	b	5bfec <my_regdump@@Base+0x900>
   5c11c:	ldr	x0, [x0, #112]
   5c120:	cbnz	x0, 5bff8 <my_regdump@@Base+0x90c>
   5c124:	b	5c008 <my_regdump@@Base+0x91c>
   5c128:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5c12c:	add	x1, x1, #0xf60
   5c130:	mov	x0, x19
   5c134:	bl	50e0 <Perl_re_printf@plt>
   5c138:	ldr	w0, [x20, #100]
   5c13c:	tbnz	w0, #10, 5c164 <my_regdump@@Base+0xa78>
   5c140:	ldr	w0, [x20, #100]
   5c144:	tbnz	w0, #11, 5c178 <my_regdump@@Base+0xa8c>
   5c148:	ldr	w0, [x20, #100]
   5c14c:	tbnz	w0, #12, 5c18c <my_regdump@@Base+0xaa0>
   5c150:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5c154:	add	x1, x1, #0x1b8
   5c158:	mov	x0, x19
   5c15c:	bl	50e0 <Perl_re_printf@plt>
   5c160:	b	5c04c <my_regdump@@Base+0x960>
   5c164:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c168:	add	x1, x1, #0xac8
   5c16c:	mov	x0, x19
   5c170:	bl	50e0 <Perl_re_printf@plt>
   5c174:	b	5c140 <my_regdump@@Base+0xa54>
   5c178:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c17c:	add	x1, x1, #0xad0
   5c180:	mov	x0, x19
   5c184:	bl	50e0 <Perl_re_printf@plt>
   5c188:	b	5c148 <my_regdump@@Base+0xa5c>
   5c18c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c190:	add	x1, x1, #0xad8
   5c194:	mov	x0, x19
   5c198:	bl	50e0 <Perl_re_printf@plt>
   5c19c:	b	5c150 <my_regdump@@Base+0xa64>
   5c1a0:	ldr	x2, [x20, #80]
   5c1a4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c1a8:	add	x1, x1, #0xae0
   5c1ac:	mov	x0, x19
   5c1b0:	bl	50e0 <Perl_re_printf@plt>
   5c1b4:	b	5c054 <my_regdump@@Base+0x968>
   5c1b8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c1bc:	add	x1, x1, #0xaf0
   5c1c0:	mov	x0, x19
   5c1c4:	bl	50e0 <Perl_re_printf@plt>
   5c1c8:	b	5c05c <my_regdump@@Base+0x970>
   5c1cc:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c1d0:	add	x1, x1, #0xaf8
   5c1d4:	mov	x0, x19
   5c1d8:	bl	50e0 <Perl_re_printf@plt>
   5c1dc:	b	5c064 <my_regdump@@Base+0x978>
   5c1e0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c1e4:	add	x1, x1, #0xb18
   5c1e8:	mov	x0, x19
   5c1ec:	bl	50e0 <Perl_re_printf@plt>
   5c1f0:	b	5c080 <my_regdump@@Base+0x994>
   5c1f4:	ldr	x2, [x25, x21, lsl #3]
   5c1f8:	mov	x1, x24
   5c1fc:	mov	x0, x19
   5c200:	bl	50e0 <Perl_re_printf@plt>
   5c204:	mov	w0, w23
   5c208:	add	x21, x21, #0x1
   5c20c:	cmp	x21, #0x20
   5c210:	b.eq	5c24c <my_regdump@@Base+0xb60>  // b.none
   5c214:	lsl	w1, w26, w21
   5c218:	tst	w22, w1
   5c21c:	b.eq	5c208 <my_regdump@@Base+0xb1c>  // b.none
   5c220:	tst	w1, #0x380
   5c224:	b.ne	5c208 <my_regdump@@Base+0xb1c>  // b.any
   5c228:	add	w23, w0, #0x1
   5c22c:	cbnz	w0, 5c1f4 <my_regdump@@Base+0xb08>
   5c230:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5c234:	add	x2, x2, #0xb28
   5c238:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c23c:	add	x1, x1, #0xb50
   5c240:	mov	x0, x19
   5c244:	bl	50e0 <Perl_re_printf@plt>
   5c248:	b	5c1f4 <my_regdump@@Base+0xb08>
   5c24c:	lsr	w21, w22, #7
   5c250:	ubfx	x22, x22, #7, #3
   5c254:	cbz	w22, 5c2a8 <my_regdump@@Base+0xbbc>
   5c258:	add	w23, w0, #0x1
   5c25c:	cbnz	w0, 5c278 <my_regdump@@Base+0xb8c>
   5c260:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5c264:	add	x2, x2, #0xb28
   5c268:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c26c:	add	x1, x1, #0xb50
   5c270:	mov	x0, x19
   5c274:	bl	50e0 <Perl_re_printf@plt>
   5c278:	cmp	w22, #0x3
   5c27c:	b.eq	5c318 <my_regdump@@Base+0xc2c>  // b.none
   5c280:	tbnz	w21, #2, 5c2e0 <my_regdump@@Base+0xbf4>
   5c284:	cmp	w22, #0x1
   5c288:	b.eq	5c300 <my_regdump@@Base+0xc14>  // b.none
   5c28c:	cmp	w22, #0x2
   5c290:	b.ne	5c330 <my_regdump@@Base+0xc44>  // b.any
   5c294:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c298:	add	x1, x1, #0xb38
   5c29c:	mov	x0, x19
   5c2a0:	bl	50e0 <Perl_re_printf@plt>
   5c2a4:	mov	w0, w23
   5c2a8:	cbz	w0, 5c348 <my_regdump@@Base+0xc5c>
   5c2ac:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c2b0:	add	x1, x1, #0x8d8
   5c2b4:	mov	x0, x19
   5c2b8:	bl	50e0 <Perl_re_printf@plt>
   5c2bc:	ldr	w25, [x20, #100]
   5c2c0:	mov	x20, #0x0                   	// #0
   5c2c4:	mov	w0, #0x0                   	// #0
   5c2c8:	mov	w24, #0x1                   	// #1
   5c2cc:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   5c2d0:	ldr	x23, [x23, #4032]
   5c2d4:	adrp	x22, 7c000 <boot_re@@Base+0x1a41c>
   5c2d8:	add	x22, x22, #0xac0
   5c2dc:	b	5c39c <my_regdump@@Base+0xcb0>
   5c2e0:	cmp	w22, #0x4
   5c2e4:	b.ne	5c330 <my_regdump@@Base+0xc44>  // b.any
   5c2e8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c2ec:	add	x1, x1, #0xb60
   5c2f0:	mov	x0, x19
   5c2f4:	bl	50e0 <Perl_re_printf@plt>
   5c2f8:	mov	w0, w23
   5c2fc:	b	5c2a8 <my_regdump@@Base+0xbbc>
   5c300:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c304:	add	x1, x1, #0xb40
   5c308:	mov	x0, x19
   5c30c:	bl	50e0 <Perl_re_printf@plt>
   5c310:	mov	w0, w23
   5c314:	b	5c2a8 <my_regdump@@Base+0xbbc>
   5c318:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c31c:	add	x1, x1, #0xb48
   5c320:	mov	x0, x19
   5c324:	bl	50e0 <Perl_re_printf@plt>
   5c328:	mov	w0, w23
   5c32c:	b	5c2a8 <my_regdump@@Base+0xbbc>
   5c330:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c334:	add	x1, x1, #0xb78
   5c338:	mov	x0, x19
   5c33c:	bl	50e0 <Perl_re_printf@plt>
   5c340:	mov	w0, w23
   5c344:	b	5c2a8 <my_regdump@@Base+0xbbc>
   5c348:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5c34c:	add	x2, x2, #0xb28
   5c350:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c354:	add	x1, x1, #0xb90
   5c358:	mov	x0, x19
   5c35c:	bl	50e0 <Perl_re_printf@plt>
   5c360:	b	5c2bc <my_regdump@@Base+0xbd0>
   5c364:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5c368:	add	x2, x2, #0xba0
   5c36c:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c370:	add	x1, x1, #0xb50
   5c374:	mov	x0, x19
   5c378:	bl	50e0 <Perl_re_printf@plt>
   5c37c:	ldr	x2, [x23, x20, lsl #3]
   5c380:	mov	x1, x22
   5c384:	mov	x0, x19
   5c388:	bl	50e0 <Perl_re_printf@plt>
   5c38c:	mov	w0, w21
   5c390:	add	x20, x20, #0x1
   5c394:	cmp	x20, #0xd
   5c398:	b.eq	5c3b4 <my_regdump@@Base+0xcc8>  // b.none
   5c39c:	lsl	w1, w24, w20
   5c3a0:	tst	w1, w25
   5c3a4:	b.eq	5c390 <my_regdump@@Base+0xca4>  // b.none
   5c3a8:	add	w21, w0, #0x1
   5c3ac:	cbnz	w0, 5c37c <my_regdump@@Base+0xc90>
   5c3b0:	b	5c364 <my_regdump@@Base+0xc78>
   5c3b4:	cbz	w0, 5c3e8 <my_regdump@@Base+0xcfc>
   5c3b8:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5c3bc:	add	x1, x1, #0x8d8
   5c3c0:	mov	x0, x19
   5c3c4:	bl	50e0 <Perl_re_printf@plt>
   5c3c8:	ldp	x19, x20, [sp, #32]
   5c3cc:	ldp	x21, x22, [sp, #48]
   5c3d0:	ldp	x23, x24, [sp, #64]
   5c3d4:	ldp	x25, x26, [sp, #80]
   5c3d8:	ldp	x27, x28, [sp, #96]
   5c3dc:	ldp	x29, x30, [sp, #16]
   5c3e0:	add	sp, sp, #0xa0
   5c3e4:	ret
   5c3e8:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5c3ec:	add	x2, x2, #0xba0
   5c3f0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c3f4:	add	x1, x1, #0xb90
   5c3f8:	mov	x0, x19
   5c3fc:	bl	50e0 <Perl_re_printf@plt>
   5c400:	b	5c3c8 <my_regdump@@Base+0xcdc>

000000000005c404 <my_re_op_compile@@Base>:
   5c404:	sub	sp, sp, #0x560
   5c408:	stp	x29, x30, [sp, #32]
   5c40c:	add	x29, sp, #0x20
   5c410:	stp	x19, x20, [sp, #48]
   5c414:	stp	x21, x22, [sp, #64]
   5c418:	stp	x23, x24, [sp, #80]
   5c41c:	stp	x25, x26, [sp, #96]
   5c420:	stp	x27, x28, [sp, #112]
   5c424:	mov	x28, x0
   5c428:	mov	x22, x1
   5c42c:	mov	w19, w2
   5c430:	mov	x20, x3
   5c434:	str	x4, [sp, #160]
   5c438:	str	x5, [sp, #152]
   5c43c:	mov	x21, x6
   5c440:	mov	w25, w7
   5c444:	ldr	w0, [sp, #1376]
   5c448:	str	w0, [sp, #136]
   5c44c:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5c450:	ldr	x0, [x0, #3920]
   5c454:	ldr	x1, [x0]
   5c458:	str	x1, [sp, #1368]
   5c45c:	mov	x1, #0x0                   	// #0
   5c460:	str	xzr, [sp, #272]
   5c464:	strb	wzr, [sp, #243]
   5c468:	str	xzr, [sp, #280]
   5c46c:	ldr	x0, [x28, #224]
   5c470:	cbz	x0, 5c4d8 <my_re_op_compile@@Base+0xd4>
   5c474:	mov	w2, #0x1                   	// #1
   5c478:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5c47c:	add	x1, x1, #0x608
   5c480:	mov	x0, x28
   5c484:	bl	54f0 <Perl_get_sv@plt>
   5c488:	mov	x23, x0
   5c48c:	cbz	x0, 5c4d8 <my_re_op_compile@@Base+0xd4>
   5c490:	ldr	w0, [x0, #12]
   5c494:	tbz	w0, #8, 5c538 <my_re_op_compile@@Base+0x134>
   5c498:	ldr	w0, [x23, #12]
   5c49c:	and	w1, w0, #0x3fff00
   5c4a0:	and	w1, w1, #0xffe001ff
   5c4a4:	cmp	w1, #0x100
   5c4a8:	b.ne	5c5a4 <my_re_op_compile@@Base+0x1a0>  // b.any
   5c4ac:	and	w2, w0, #0xf
   5c4b0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5c4b4:	ldr	x1, [x1, #3712]
   5c4b8:	ldrb	w1, [x1, w2, uxtw]
   5c4bc:	cbz	w1, 5c54c <my_re_op_compile@@Base+0x148>
   5c4c0:	and	w1, w0, #0xc000
   5c4c4:	cmp	w1, #0x8, lsl #12
   5c4c8:	b.eq	5c570 <my_re_op_compile@@Base+0x16c>  // b.none
   5c4cc:	ldr	x0, [x23]
   5c4d0:	ldr	x0, [x0, #32]
   5c4d4:	str	x0, [sp, #280]
   5c4d8:	ldr	x0, [sp, #160]
   5c4dc:	cbz	x0, 5c5b8 <my_re_op_compile@@Base+0x1b4>
   5c4e0:	ldrb	w0, [x28, #2601]
   5c4e4:	cbz	w0, 5c5dc <my_re_op_compile@@Base+0x1d8>
   5c4e8:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5c4ec:	ldr	x0, [x0, #4040]
   5c4f0:	ldr	x0, [x0]
   5c4f4:	cbz	x0, 5c5e8 <my_re_op_compile@@Base+0x1e4>
   5c4f8:	str	xzr, [sp, #648]
   5c4fc:	str	xzr, [sp, #656]
   5c500:	str	xzr, [sp, #600]
   5c504:	cbz	x21, 5c50c <my_re_op_compile@@Base+0x108>
   5c508:	strb	wzr, [x21]
   5c50c:	cbz	x20, 60a20 <my_re_op_compile@@Base+0x461c>
   5c510:	ldrh	w0, [x20, #32]
   5c514:	and	w0, w0, #0x1ff
   5c518:	cmp	w0, #0x9e
   5c51c:	b.eq	5c648 <my_re_op_compile@@Base+0x244>  // b.none
   5c520:	cbnz	w0, 5c680 <my_re_op_compile@@Base+0x27c>
   5c524:	ldr	x0, [x20, #24]
   5c528:	cmp	x0, #0x9e
   5c52c:	b.eq	5c648 <my_re_op_compile@@Base+0x244>  // b.none
   5c530:	cbz	w19, 5c698 <my_re_op_compile@@Base+0x294>
   5c534:	b	5c7a8 <my_re_op_compile@@Base+0x3a4>
   5c538:	mov	x2, #0xff08                	// #65288
   5c53c:	mov	x1, x23
   5c540:	mov	x0, x28
   5c544:	bl	5310 <Perl_sv_setuv@plt>
   5c548:	b	5c498 <my_re_op_compile@@Base+0x94>
   5c54c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c550:	add	x3, x3, #0xc10
   5c554:	add	x3, x3, #0xa08
   5c558:	mov	w2, #0x1cc5                	// #7365
   5c55c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c560:	add	x1, x1, #0xfb8
   5c564:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5c568:	add	x0, x0, #0xda0
   5c56c:	bl	58e0 <__assert_fail@plt>
   5c570:	and	w0, w0, #0xff
   5c574:	sub	w0, w0, #0x9
   5c578:	cmp	w0, #0x1
   5c57c:	b.hi	5c4cc <my_re_op_compile@@Base+0xc8>  // b.pmore
   5c580:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c584:	add	x3, x3, #0xc10
   5c588:	add	x3, x3, #0xa08
   5c58c:	mov	w2, #0x1cc5                	// #7365
   5c590:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c594:	add	x1, x1, #0xfb8
   5c598:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5c59c:	add	x0, x0, #0xdd0
   5c5a0:	bl	58e0 <__assert_fail@plt>
   5c5a4:	mov	w2, #0x2                   	// #2
   5c5a8:	mov	x1, x23
   5c5ac:	mov	x0, x28
   5c5b0:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5c5b4:	b	5c4d4 <my_re_op_compile@@Base+0xd0>
   5c5b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c5bc:	add	x3, x3, #0xc10
   5c5c0:	add	x3, x3, #0xa08
   5c5c4:	mov	w2, #0x1cc7                	// #7367
   5c5c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c5cc:	add	x1, x1, #0xfb8
   5c5d0:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5c5d4:	add	x0, x0, #0xbd8
   5c5d8:	bl	58e0 <__assert_fail@plt>
   5c5dc:	mov	x0, x28
   5c5e0:	bl	54e0 <Perl_reginitcolors@plt>
   5c5e4:	b	5c4e8 <my_re_op_compile@@Base+0xe4>
   5c5e8:	mov	x1, #0x2                   	// #2
   5c5ec:	mov	x0, x28
   5c5f0:	bl	5090 <Perl__new_invlist@plt>
   5c5f4:	mov	x1, x0
   5c5f8:	adrp	x23, 91000 <boot_re@@Base+0x2f41c>
   5c5fc:	ldr	x23, [x23, #4040]
   5c600:	str	x0, [x23]
   5c604:	mov	x3, #0xff                  	// #255
   5c608:	mov	x2, #0x0                   	// #0
   5c60c:	mov	x0, x28
   5c610:	bl	5450 <Perl__add_range_to_invlist@plt>
   5c614:	str	x0, [x23]
   5c618:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5c61c:	add	x0, x0, #0xbe0
   5c620:	bl	5920 <getenv@plt>
   5c624:	cbz	x0, 5c63c <my_re_op_compile@@Base+0x238>
   5c628:	mov	x2, #0x0                   	// #0
   5c62c:	add	x1, x28, #0xd20
   5c630:	bl	4f20 <Perl_grok_atoUV@plt>
   5c634:	and	w0, w0, #0xff
   5c638:	cbnz	w0, 5c4f8 <my_re_op_compile@@Base+0xf4>
   5c63c:	mov	x0, #0x3c                  	// #60
   5c640:	str	x0, [x28, #3360]
   5c644:	b	5c4f8 <my_re_op_compile@@Base+0xf4>
   5c648:	ldr	x0, [x20, #40]
   5c64c:	cbz	x0, 5c680 <my_re_op_compile@@Base+0x27c>
   5c650:	mov	w1, #0x0                   	// #0
   5c654:	b	5c660 <my_re_op_compile@@Base+0x25c>
   5c658:	ldr	x0, [x0, #8]
   5c65c:	cbz	x0, 5c67c <my_re_op_compile@@Base+0x278>
   5c660:	ldrh	w2, [x0, #32]
   5c664:	tst	x2, #0x1ff
   5c668:	b.ne	5c674 <my_re_op_compile@@Base+0x270>  // b.any
   5c66c:	ldrsb	w2, [x0, #34]
   5c670:	add	w1, w1, w2, lsr #31
   5c674:	ldrb	w2, [x0, #33]
   5c678:	tbnz	w2, #6, 5c658 <my_re_op_compile@@Base+0x254>
   5c67c:	cbnz	w1, 5c6a8 <my_re_op_compile@@Base+0x2a4>
   5c680:	cbnz	w19, 5c7a8 <my_re_op_compile@@Base+0x3a4>
   5c684:	ldrh	w0, [x20, #32]
   5c688:	and	w0, w0, #0x1ff
   5c68c:	mov	w19, #0x1                   	// #1
   5c690:	cmp	w0, #0x5
   5c694:	b.eq	5c6d8 <my_re_op_compile@@Base+0x2d4>  // b.none
   5c698:	ldr	x0, [x20, #40]
   5c69c:	cbz	x0, 5c718 <my_re_op_compile@@Base+0x314>
   5c6a0:	mov	w19, #0x0                   	// #0
   5c6a4:	b	5c6c0 <my_re_op_compile@@Base+0x2bc>
   5c6a8:	mov	x0, x28
   5c6ac:	bl	26a9c <my_regexec@@Base+0x35a8>
   5c6b0:	str	x0, [sp, #600]
   5c6b4:	b	5c680 <my_re_op_compile@@Base+0x27c>
   5c6b8:	ldr	x0, [x0, #8]
   5c6bc:	cbz	x0, 5c6d8 <my_re_op_compile@@Base+0x2d4>
   5c6c0:	ldrh	w1, [x0, #32]
   5c6c4:	and	w1, w1, #0x1ff
   5c6c8:	cmp	w1, #0x5
   5c6cc:	cinc	w19, w19, eq  // eq = none
   5c6d0:	ldrb	w1, [x0, #33]
   5c6d4:	tbnz	w1, #6, 5c6b8 <my_re_op_compile@@Base+0x2b4>
   5c6d8:	cbnz	x22, 5c720 <my_re_op_compile@@Base+0x31c>
   5c6dc:	sbfiz	x0, x19, #3, #32
   5c6e0:	bl	5250 <Perl_safesysmalloc@plt>
   5c6e4:	mov	x22, x0
   5c6e8:	mov	w2, #0xa                   	// #10
   5c6ec:	mov	x1, x0
   5c6f0:	mov	x0, x28
   5c6f4:	bl	54b0 <Perl_save_pushptr@plt>
   5c6f8:	ldrh	w0, [x20, #32]
   5c6fc:	and	w0, w0, #0x1ff
   5c700:	cmp	w0, #0x5
   5c704:	b.eq	5c744 <my_re_op_compile@@Base+0x340>  // b.none
   5c708:	ldr	x0, [x20, #40]
   5c70c:	cbz	x0, 5c7a8 <my_re_op_compile@@Base+0x3a4>
   5c710:	mov	w2, #0x0                   	// #0
   5c714:	b	5c790 <my_re_op_compile@@Base+0x38c>
   5c718:	mov	w19, #0x0                   	// #0
   5c71c:	b	5c6d8 <my_re_op_compile@@Base+0x2d4>
   5c720:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c724:	add	x3, x3, #0xc10
   5c728:	add	x3, x3, #0xa08
   5c72c:	mov	w2, #0x1d0a                	// #7434
   5c730:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c734:	add	x1, x1, #0xfb8
   5c738:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5c73c:	add	x0, x0, #0xc00
   5c740:	bl	58e0 <__assert_fail@plt>
   5c744:	ldr	x0, [x20, #40]
   5c748:	cbz	x0, 5c754 <my_re_op_compile@@Base+0x350>
   5c74c:	str	x0, [x22]
   5c750:	b	5c7a8 <my_re_op_compile@@Base+0x3a4>
   5c754:	ldr	x1, [x20, #24]
   5c758:	ldr	x0, [x28, #16]
   5c75c:	ldr	x0, [x0, x1, lsl #3]
   5c760:	b	5c74c <my_re_op_compile@@Base+0x348>
   5c764:	ldr	x1, [x0, #40]
   5c768:	cbz	x1, 5c778 <my_re_op_compile@@Base+0x374>
   5c76c:	str	x1, [x22, w2, sxtw #3]
   5c770:	add	w2, w2, #0x1
   5c774:	b	5c7a0 <my_re_op_compile@@Base+0x39c>
   5c778:	ldr	x3, [x0, #24]
   5c77c:	ldr	x1, [x28, #16]
   5c780:	ldr	x1, [x1, x3, lsl #3]
   5c784:	b	5c76c <my_re_op_compile@@Base+0x368>
   5c788:	ldr	x0, [x0, #8]
   5c78c:	cbz	x0, 5c7a8 <my_re_op_compile@@Base+0x3a4>
   5c790:	ldrh	w1, [x0, #32]
   5c794:	and	w1, w1, #0x1ff
   5c798:	cmp	w1, #0x5
   5c79c:	b.eq	5c764 <my_re_op_compile@@Base+0x360>  // b.none
   5c7a0:	ldrb	w1, [x0, #33]
   5c7a4:	tbnz	w1, #6, 5c788 <my_re_op_compile@@Base+0x384>
   5c7a8:	ldr	w0, [x28, #2368]
   5c7ac:	tbnz	w0, #20, 5c7b8 <my_re_op_compile@@Base+0x3b4>
   5c7b0:	ldr	x0, [sp, #280]
   5c7b4:	tbz	w0, #0, 5c7e4 <my_re_op_compile@@Base+0x3e0>
   5c7b8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5c7bc:	add	x0, x0, #0x20
   5c7c0:	adrp	x3, 7c000 <boot_re@@Base+0x1a41c>
   5c7c4:	add	x3, x3, #0xbb0
   5c7c8:	tst	x25, #0x800
   5c7cc:	csel	x3, x3, x0, ne  // ne = any
   5c7d0:	mov	w2, w19
   5c7d4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5c7d8:	add	x1, x1, #0xc10
   5c7dc:	mov	x0, x28
   5c7e0:	bl	50e0 <Perl_re_printf@plt>
   5c7e4:	ldr	x0, [sp, #600]
   5c7e8:	cbz	x0, 5c864 <my_re_op_compile@@Base+0x460>
   5c7ec:	ldr	w0, [x0, #4]
   5c7f0:	cbz	w0, 5c864 <my_re_op_compile@@Base+0x460>
   5c7f4:	ldrh	w0, [x20, #32]
   5c7f8:	and	w0, w0, #0x1ff
   5c7fc:	cmp	w0, #0x5
   5c800:	b.eq	5c864 <my_re_op_compile@@Base+0x460>  // b.none
   5c804:	ldr	x1, [x20, #40]
   5c808:	ldrh	w0, [x1, #32]
   5c80c:	and	w0, w0, #0x1ff
   5c810:	cmp	w0, #0x3
   5c814:	b.eq	5c854 <my_re_op_compile@@Base+0x450>  // b.none
   5c818:	cbnz	w0, 5c84c <my_re_op_compile@@Base+0x448>
   5c81c:	ldr	x0, [x1, #24]
   5c820:	cmp	x0, #0x3
   5c824:	b.eq	5c854 <my_re_op_compile@@Base+0x450>  // b.none
   5c828:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c82c:	add	x3, x3, #0xc10
   5c830:	add	x3, x3, #0xa08
   5c834:	mov	w2, #0x1d24                	// #7460
   5c838:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c83c:	add	x1, x1, #0xfb8
   5c840:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5c844:	add	x0, x0, #0xc38
   5c848:	bl	58e0 <__assert_fail@plt>
   5c84c:	cmp	w0, #0x187
   5c850:	b.ne	5c828 <my_re_op_compile@@Base+0x424>  // b.any
   5c854:	ldrb	w0, [x1, #33]
   5c858:	mov	x20, #0x0                   	// #0
   5c85c:	tbz	w0, #6, 5c864 <my_re_op_compile@@Base+0x460>
   5c860:	ldr	x20, [x1, #8]
   5c864:	mov	x7, #0x0                   	// #0
   5c868:	add	x6, sp, #0xf3
   5c86c:	mov	x5, x20
   5c870:	mov	w4, w19
   5c874:	mov	x3, x22
   5c878:	mov	x2, #0x0                   	// #0
   5c87c:	add	x1, sp, #0x150
   5c880:	mov	x0, x28
   5c884:	bl	30aa4 <Perl_re_printf@@Base+0xbc8>
   5c888:	mov	x19, x0
   5c88c:	ldr	w0, [x0, #12]
   5c890:	tbz	w0, #11, 5c950 <my_re_op_compile@@Base+0x54c>
   5c894:	and	w2, w0, #0xf
   5c898:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5c89c:	ldr	x1, [x1, #3840]
   5c8a0:	ldrb	w1, [x1, w2, uxtw]
   5c8a4:	cbz	w1, 5c8c8 <my_re_op_compile@@Base+0x4c4>
   5c8a8:	and	w1, w0, #0xc000
   5c8ac:	cmp	w1, #0x8, lsl #12
   5c8b0:	b.eq	5c8ec <my_re_op_compile@@Base+0x4e8>  // b.none
   5c8b4:	and	w1, w0, #0xff
   5c8b8:	cmp	w1, #0xf
   5c8bc:	b.eq	5c920 <my_re_op_compile@@Base+0x51c>  // b.none
   5c8c0:	ldr	x27, [x19, #16]
   5c8c4:	b	5c954 <my_re_op_compile@@Base+0x550>
   5c8c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c8cc:	add	x3, x3, #0xc10
   5c8d0:	add	x3, x3, #0xa08
   5c8d4:	mov	w2, #0x1d31                	// #7473
   5c8d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c8dc:	add	x1, x1, #0xfb8
   5c8e0:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5c8e4:	add	x0, x0, #0x160
   5c8e8:	bl	58e0 <__assert_fail@plt>
   5c8ec:	and	w1, w0, #0xff
   5c8f0:	sub	w1, w1, #0x9
   5c8f4:	cmp	w1, #0x1
   5c8f8:	b.hi	5c8b4 <my_re_op_compile@@Base+0x4b0>  // b.pmore
   5c8fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c900:	add	x3, x3, #0xc10
   5c904:	add	x3, x3, #0xa08
   5c908:	mov	w2, #0x1d31                	// #7473
   5c90c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c910:	add	x1, x1, #0xfb8
   5c914:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5c918:	add	x0, x0, #0x190
   5c91c:	bl	58e0 <__assert_fail@plt>
   5c920:	ldr	x1, [x19]
   5c924:	ldrb	w1, [x1, #129]
   5c928:	tbnz	w1, #6, 5c8c0 <my_re_op_compile@@Base+0x4bc>
   5c92c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5c930:	add	x3, x3, #0xc10
   5c934:	add	x3, x3, #0xa08
   5c938:	mov	w2, #0x1d31                	// #7473
   5c93c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5c940:	add	x1, x1, #0xfb8
   5c944:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5c948:	add	x0, x0, #0x1a8
   5c94c:	bl	58e0 <__assert_fail@plt>
   5c950:	mov	x27, x19
   5c954:	ldrb	w1, [x27, #12]
   5c958:	cmp	w1, #0x8
   5c95c:	b.eq	5caf8 <my_re_op_compile@@Base+0x6f4>  // b.none
   5c960:	and	w1, w0, #0x3ffc00
   5c964:	and	w1, w1, #0xffe007ff
   5c968:	cmp	w1, #0x400
   5c96c:	b.ne	5cc5c <my_re_op_compile@@Base+0x858>  // b.any
   5c970:	and	w2, w0, #0xf
   5c974:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5c978:	ldr	x1, [x1, #3888]
   5c97c:	ldrb	w1, [x1, w2, uxtw]
   5c980:	cbz	w1, 5cb4c <my_re_op_compile@@Base+0x748>
   5c984:	and	w1, w0, #0xc000
   5c988:	cmp	w1, #0x8, lsl #12
   5c98c:	b.eq	5cb70 <my_re_op_compile@@Base+0x76c>  // b.none
   5c990:	and	w0, w0, #0xff
   5c994:	cmp	w0, #0xf
   5c998:	b.eq	5cbf4 <my_re_op_compile@@Base+0x7f0>  // b.none
   5c99c:	ldr	x0, [x19]
   5c9a0:	ldr	x0, [x0, #16]
   5c9a4:	str	x0, [sp, #248]
   5c9a8:	ldr	x1, [x19, #16]
   5c9ac:	str	x1, [sp, #256]
   5c9b0:	ldr	x0, [sp, #160]
   5c9b4:	ldr	x0, [x0, #96]
   5c9b8:	cbz	x0, 5cc78 <my_re_op_compile@@Base+0x874>
   5c9bc:	ldr	x1, [sp, #248]
   5c9c0:	mov	w0, #0x0                   	// #0
   5c9c4:	cbz	x1, 5c9dc <my_re_op_compile@@Base+0x5d8>
   5c9c8:	ldr	x0, [x28, #224]
   5c9cc:	ldr	w0, [x0, #56]
   5c9d0:	tbnz	w0, #3, 5ce94 <my_re_op_compile@@Base+0xa90>
   5c9d4:	ldr	w0, [x19, #12]
   5c9d8:	and	w0, w0, #0x20000000
   5c9dc:	str	w0, [sp, #532]
   5c9e0:	str	w0, [sp, #528]
   5c9e4:	str	wzr, [sp, #536]
   5c9e8:	str	wzr, [sp, #584]
   5c9ec:	ldr	x0, [sp, #136]
   5c9f0:	ubfx	x0, x0, #10, #1
   5c9f4:	strb	w0, [sp, #721]
   5c9f8:	strb	wzr, [sp, #723]
   5c9fc:	strb	wzr, [sp, #722]
   5ca00:	str	xzr, [sp, #664]
   5ca04:	str	xzr, [sp, #624]
   5ca08:	str	xzr, [sp, #632]
   5ca0c:	str	wzr, [sp, #640]
   5ca10:	str	xzr, [sp, #472]
   5ca14:	strb	wzr, [sp, #724]
   5ca18:	str	wzr, [sp, #484]
   5ca1c:	str	xzr, [sp, #496]
   5ca20:	str	xzr, [sp, #504]
   5ca24:	str	xzr, [sp, #544]
   5ca28:	str	xzr, [sp, #464]
   5ca2c:	strb	wzr, [sp, #720]
   5ca30:	str	xzr, [sp, #688]
   5ca34:	mov	x0, x28
   5ca38:	bl	59b0 <Perl_sv_newmortal@plt>
   5ca3c:	str	x0, [sp, #704]
   5ca40:	mov	x0, x28
   5ca44:	bl	59b0 <Perl_sv_newmortal@plt>
   5ca48:	str	x0, [sp, #712]
   5ca4c:	ldr	w0, [x28, #2368]
   5ca50:	tbnz	w0, #20, 5ca60 <my_re_op_compile@@Base+0x65c>
   5ca54:	ldr	x0, [sp, #280]
   5ca58:	tst	w0, #0xff
   5ca5c:	b.eq	5cab8 <my_re_op_compile@@Base+0x6b4>  // b.none
   5ca60:	mov	x0, x28
   5ca64:	bl	59b0 <Perl_sv_newmortal@plt>
   5ca68:	ldr	w1, [sp, #528]
   5ca6c:	cmp	w1, #0x0
   5ca70:	mov	w7, #0x8503                	// #34051
   5ca74:	mov	w1, #0x8403                	// #33795
   5ca78:	csel	w7, w7, w1, ne  // ne = any
   5ca7c:	ldr	x6, [x28, #1456]
   5ca80:	ldr	x5, [x28, #1448]
   5ca84:	ldr	x4, [x28, #3360]
   5ca88:	ldr	x3, [sp, #248]
   5ca8c:	ldr	x2, [sp, #256]
   5ca90:	mov	x1, x0
   5ca94:	mov	x0, x28
   5ca98:	bl	53f0 <Perl_pv_pretty@plt>
   5ca9c:	mov	x4, x0
   5caa0:	ldr	x3, [x28, #1488]
   5caa4:	ldr	x2, [x28, #1480]
   5caa8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5caac:	add	x1, x1, #0xcd0
   5cab0:	mov	x0, x28
   5cab4:	bl	50e0 <Perl_re_printf@plt>
   5cab8:	ldr	w0, [sp, #136]
   5cabc:	tbnz	w0, #31, 5cadc <my_re_op_compile@@Base+0x6d8>
   5cac0:	add	x0, x28, #0x800
   5cac4:	ldr	x1, [x28, #224]
   5cac8:	str	wzr, [sp, #144]
   5cacc:	cmp	x1, x0
   5cad0:	b.ne	5cf38 <my_re_op_compile@@Base+0xb34>  // b.any
   5cad4:	ldr	w0, [x28, #2104]
   5cad8:	tbz	w0, #21, 5cf38 <my_re_op_compile@@Base+0xb34>
   5cadc:	ldr	x5, [sp, #256]
   5cae0:	ldr	x3, [sp, #248]
   5cae4:	cbz	x3, 5cf54 <my_re_op_compile@@Base+0xb50>
   5cae8:	ldr	x1, [sp, #600]
   5caec:	mov	x0, #0x0                   	// #0
   5caf0:	mov	w4, #0x0                   	// #0
   5caf4:	b	5ceb4 <my_re_op_compile@@Base+0xab0>
   5caf8:	cbz	x21, 5cb04 <my_re_op_compile@@Base+0x700>
   5cafc:	mov	w0, #0x1                   	// #1
   5cb00:	strb	w0, [x21]
   5cb04:	ldr	w0, [x27, #8]
   5cb08:	add	w0, w0, #0x1
   5cb0c:	str	w0, [x27, #8]
   5cb10:	ldr	w0, [x28, #2368]
   5cb14:	tbnz	w0, #20, 5cb20 <my_re_op_compile@@Base+0x71c>
   5cb18:	ldr	x0, [sp, #280]
   5cb1c:	tbz	w0, #0, 5cd44 <my_re_op_compile@@Base+0x940>
   5cb20:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5cb24:	add	x0, x0, #0x20
   5cb28:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5cb2c:	add	x2, x2, #0xbb0
   5cb30:	tst	x25, #0x800
   5cb34:	csel	x2, x2, x0, ne  // ne = any
   5cb38:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5cb3c:	add	x1, x1, #0xcb8
   5cb40:	mov	x0, x28
   5cb44:	bl	50e0 <Perl_re_printf@plt>
   5cb48:	b	5cd44 <my_re_op_compile@@Base+0x940>
   5cb4c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cb50:	add	x3, x3, #0xc10
   5cb54:	add	x3, x3, #0xa08
   5cb58:	mov	w2, #0x1d3e                	// #7486
   5cb5c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cb60:	add	x1, x1, #0xfb8
   5cb64:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5cb68:	add	x0, x0, #0xe40
   5cb6c:	bl	58e0 <__assert_fail@plt>
   5cb70:	and	w2, w0, #0xff
   5cb74:	sub	w2, w2, #0x9
   5cb78:	cmp	w2, #0x1
   5cb7c:	b.ls	5cbd0 <my_re_op_compile@@Base+0x7cc>  // b.plast
   5cb80:	and	w0, w0, #0xff
   5cb84:	cmp	w0, #0xf
   5cb88:	b.eq	5cbf4 <my_re_op_compile@@Base+0x7f0>  // b.none
   5cb8c:	ldr	x2, [x19]
   5cb90:	ldr	x2, [x2, #16]
   5cb94:	str	x2, [sp, #248]
   5cb98:	cmp	w1, #0x8, lsl #12
   5cb9c:	b.ne	5c9a8 <my_re_op_compile@@Base+0x5a4>  // b.any
   5cba0:	sub	w0, w0, #0x9
   5cba4:	cmp	w0, #0x1
   5cba8:	b.hi	5c9a8 <my_re_op_compile@@Base+0x5a4>  // b.pmore
   5cbac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cbb0:	add	x3, x3, #0xc10
   5cbb4:	add	x3, x3, #0xa08
   5cbb8:	mov	w2, #0x1d3e                	// #7486
   5cbbc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cbc0:	add	x1, x1, #0xfb8
   5cbc4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5cbc8:	add	x0, x0, #0xd40
   5cbcc:	bl	58e0 <__assert_fail@plt>
   5cbd0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cbd4:	add	x3, x3, #0xc10
   5cbd8:	add	x3, x3, #0xa08
   5cbdc:	mov	w2, #0x1d3e                	// #7486
   5cbe0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cbe4:	add	x1, x1, #0xfb8
   5cbe8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5cbec:	add	x0, x0, #0xe70
   5cbf0:	bl	58e0 <__assert_fail@plt>
   5cbf4:	ldr	x0, [x19]
   5cbf8:	ldrb	w1, [x0, #129]
   5cbfc:	tbz	w1, #6, 5cc38 <my_re_op_compile@@Base+0x834>
   5cc00:	ldr	x0, [x0, #16]
   5cc04:	str	x0, [sp, #248]
   5cc08:	ldr	x0, [x19]
   5cc0c:	ldrb	w0, [x0, #129]
   5cc10:	tbnz	w0, #6, 5c9a8 <my_re_op_compile@@Base+0x5a4>
   5cc14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cc18:	add	x3, x3, #0xc10
   5cc1c:	add	x3, x3, #0xa08
   5cc20:	mov	w2, #0x1d3e                	// #7486
   5cc24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cc28:	add	x1, x1, #0xfb8
   5cc2c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5cc30:	add	x0, x0, #0xd58
   5cc34:	bl	58e0 <__assert_fail@plt>
   5cc38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cc3c:	add	x3, x3, #0xc10
   5cc40:	add	x3, x3, #0xa08
   5cc44:	mov	w2, #0x1d3e                	// #7486
   5cc48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cc4c:	add	x1, x1, #0xfb8
   5cc50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5cc54:	add	x0, x0, #0xe88
   5cc58:	bl	58e0 <__assert_fail@plt>
   5cc5c:	mov	w3, #0x0                   	// #0
   5cc60:	add	x2, sp, #0xf8
   5cc64:	mov	x1, x19
   5cc68:	mov	x0, x28
   5cc6c:	bl	5200 <Perl_sv_2pv_flags@plt>
   5cc70:	mov	x1, x0
   5cc74:	b	5c9ac <my_re_op_compile@@Base+0x5a8>
   5cc78:	ldr	w0, [x19, #12]
   5cc7c:	and	w3, w0, #0x20000000
   5cc80:	tbz	w0, #29, 5cc9c <my_re_op_compile@@Base+0x898>
   5cc84:	ldr	x2, [x28, #224]
   5cc88:	ldr	w2, [x2, #56]
   5cc8c:	tbnz	w2, #3, 60388 <my_re_op_compile@@Base+0x3f84>
   5cc90:	tbz	w0, #21, 5cca0 <my_re_op_compile@@Base+0x89c>
   5cc94:	ldr	x2, [sp, #248]
   5cc98:	b	5cd18 <my_re_op_compile@@Base+0x914>
   5cc9c:	tbnz	w0, #21, 5cd08 <my_re_op_compile@@Base+0x904>
   5cca0:	tbz	w0, #11, 5cd28 <my_re_op_compile@@Base+0x924>
   5cca4:	and	w4, w0, #0xf
   5cca8:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   5ccac:	ldr	x2, [x2, #3840]
   5ccb0:	ldrb	w2, [x2, w4, uxtw]
   5ccb4:	cbz	w2, 5cd80 <my_re_op_compile@@Base+0x97c>
   5ccb8:	and	w5, w0, #0xc000
   5ccbc:	cmp	w5, #0x8, lsl #12
   5ccc0:	b.eq	5cda4 <my_re_op_compile@@Base+0x9a0>  // b.none
   5ccc4:	and	w0, w0, #0xff
   5ccc8:	cmp	w0, #0xf
   5cccc:	b.eq	5cdd8 <my_re_op_compile@@Base+0x9d4>  // b.none
   5ccd0:	ldr	x4, [x19, #16]
   5ccd4:	ldr	w2, [x4, #12]
   5ccd8:	tbz	w2, #20, 5cd28 <my_re_op_compile@@Base+0x924>
   5ccdc:	cmp	w5, #0x8, lsl #12
   5cce0:	b.eq	5ce08 <my_re_op_compile@@Base+0xa04>  // b.none
   5cce4:	cmp	w0, #0xf
   5cce8:	b.eq	5ce38 <my_re_op_compile@@Base+0xa34>  // b.none
   5ccec:	and	w2, w2, #0xff
   5ccf0:	cmp	w2, #0x6
   5ccf4:	b.ls	5ce68 <my_re_op_compile@@Base+0xa64>  // b.plast
   5ccf8:	ldr	x0, [x4]
   5ccfc:	ldr	x0, [x0]
   5cd00:	ldr	w0, [x0, #12]
   5cd04:	tbz	w0, #28, 5cd28 <my_re_op_compile@@Base+0x924>
   5cd08:	ldr	x2, [sp, #248]
   5cd0c:	ldr	x0, [x28, #224]
   5cd10:	ldr	w0, [x0, #56]
   5cd14:	tbnz	w0, #3, 5ce8c <my_re_op_compile@@Base+0xa88>
   5cd18:	orr	w3, w3, #0x80000
   5cd1c:	mov	x0, x28
   5cd20:	bl	5390 <Perl_newSVpvn_flags@plt>
   5cd24:	mov	x19, x0
   5cd28:	ldr	x0, [sp, #160]
   5cd2c:	ldr	x3, [x0]
   5cd30:	mov	w2, w25
   5cd34:	mov	x1, x19
   5cd38:	mov	x0, x28
   5cd3c:	blr	x3
   5cd40:	mov	x27, x0
   5cd44:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5cd48:	ldr	x0, [x0, #3920]
   5cd4c:	ldr	x1, [sp, #1368]
   5cd50:	ldr	x0, [x0]
   5cd54:	eor	x0, x1, x0
   5cd58:	cbnz	x0, 60a48 <my_re_op_compile@@Base+0x4644>
   5cd5c:	mov	x0, x27
   5cd60:	ldp	x19, x20, [sp, #48]
   5cd64:	ldp	x21, x22, [sp, #64]
   5cd68:	ldp	x23, x24, [sp, #80]
   5cd6c:	ldp	x25, x26, [sp, #96]
   5cd70:	ldp	x27, x28, [sp, #112]
   5cd74:	ldp	x29, x30, [sp, #32]
   5cd78:	add	sp, sp, #0x560
   5cd7c:	ret
   5cd80:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cd84:	add	x3, x3, #0xc10
   5cd88:	add	x3, x3, #0xa08
   5cd8c:	mov	w2, #0x1d42                	// #7490
   5cd90:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cd94:	add	x1, x1, #0xfb8
   5cd98:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5cd9c:	add	x0, x0, #0x160
   5cda0:	bl	58e0 <__assert_fail@plt>
   5cda4:	and	w2, w0, #0xff
   5cda8:	sub	w2, w2, #0x9
   5cdac:	cmp	w2, #0x1
   5cdb0:	b.hi	5ccc4 <my_re_op_compile@@Base+0x8c0>  // b.pmore
   5cdb4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cdb8:	add	x3, x3, #0xc10
   5cdbc:	add	x3, x3, #0xa08
   5cdc0:	mov	w2, #0x1d42                	// #7490
   5cdc4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cdc8:	add	x1, x1, #0xfb8
   5cdcc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5cdd0:	add	x0, x0, #0x190
   5cdd4:	bl	58e0 <__assert_fail@plt>
   5cdd8:	ldr	x2, [x19]
   5cddc:	ldrb	w2, [x2, #129]
   5cde0:	tbnz	w2, #6, 5ccd0 <my_re_op_compile@@Base+0x8cc>
   5cde4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cde8:	add	x3, x3, #0xc10
   5cdec:	add	x3, x3, #0xa08
   5cdf0:	mov	w2, #0x1d42                	// #7490
   5cdf4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5cdf8:	add	x1, x1, #0xfb8
   5cdfc:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5ce00:	add	x0, x0, #0x1a8
   5ce04:	bl	58e0 <__assert_fail@plt>
   5ce08:	sub	w5, w0, #0x9
   5ce0c:	cmp	w5, #0x1
   5ce10:	b.hi	5cce4 <my_re_op_compile@@Base+0x8e0>  // b.pmore
   5ce14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ce18:	add	x3, x3, #0xc10
   5ce1c:	add	x3, x3, #0xa08
   5ce20:	mov	w2, #0x1d42                	// #7490
   5ce24:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ce28:	add	x1, x1, #0xfb8
   5ce2c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5ce30:	add	x0, x0, #0x190
   5ce34:	bl	58e0 <__assert_fail@plt>
   5ce38:	ldr	x0, [x19]
   5ce3c:	ldrb	w0, [x0, #129]
   5ce40:	tbnz	w0, #6, 5ccec <my_re_op_compile@@Base+0x8e8>
   5ce44:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ce48:	add	x3, x3, #0xc10
   5ce4c:	add	x3, x3, #0xa08
   5ce50:	mov	w2, #0x1d42                	// #7490
   5ce54:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ce58:	add	x1, x1, #0xfb8
   5ce5c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5ce60:	add	x0, x0, #0x1a8
   5ce64:	bl	58e0 <__assert_fail@plt>
   5ce68:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ce6c:	add	x3, x3, #0xc10
   5ce70:	add	x3, x3, #0xa08
   5ce74:	mov	w2, #0x1d42                	// #7490
   5ce78:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ce7c:	add	x1, x1, #0xfb8
   5ce80:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5ce84:	add	x0, x0, #0x1f0
   5ce88:	bl	58e0 <__assert_fail@plt>
   5ce8c:	mov	w3, #0x80000               	// #524288
   5ce90:	b	5cd1c <my_re_op_compile@@Base+0x918>
   5ce94:	mov	w0, #0x0                   	// #0
   5ce98:	b	5c9dc <my_re_op_compile@@Base+0x5d8>
   5ce9c:	ldrb	w2, [x5, x0]
   5cea0:	cmp	w2, #0x28
   5cea4:	b.eq	5cee8 <my_re_op_compile@@Base+0xae4>  // b.none
   5cea8:	add	x0, x0, #0x1
   5ceac:	cmp	x3, x0
   5ceb0:	b.ls	5cf34 <my_re_op_compile@@Base+0xb30>  // b.plast
   5ceb4:	cbz	x1, 5ce9c <my_re_op_compile@@Base+0xa98>
   5ceb8:	ldr	w2, [x1, #4]
   5cebc:	cmp	w2, w4
   5cec0:	b.le	5ce9c <my_re_op_compile@@Base+0xa98>
   5cec4:	sbfiz	x2, x4, #5, #32
   5cec8:	ldr	x6, [x1, #8]
   5cecc:	add	x7, x6, x2
   5ced0:	ldr	x2, [x6, x2]
   5ced4:	cmp	x0, x2
   5ced8:	b.ne	5ce9c <my_re_op_compile@@Base+0xa98>  // b.any
   5cedc:	ldr	x0, [x7, #8]
   5cee0:	add	w4, w4, #0x1
   5cee4:	b	5cea8 <my_re_op_compile@@Base+0xaa4>
   5cee8:	add	x2, x0, #0x2
   5ceec:	cmp	x3, x2
   5cef0:	b.cc	5cea8 <my_re_op_compile@@Base+0xaa4>  // b.lo, b.ul, b.last
   5cef4:	add	x6, x5, x0
   5cef8:	ldrb	w6, [x6, #1]
   5cefc:	cmp	w6, #0x3f
   5cf00:	b.ne	5cea8 <my_re_op_compile@@Base+0xaa4>  // b.any
   5cf04:	ldrb	w2, [x5, x2]
   5cf08:	cmp	w2, #0x7b
   5cf0c:	b.eq	5cf5c <my_re_op_compile@@Base+0xb58>  // b.none
   5cf10:	cmp	w2, #0x3f
   5cf14:	b.ne	5cea8 <my_re_op_compile@@Base+0xaa4>  // b.any
   5cf18:	add	x2, x5, x0
   5cf1c:	ldrb	w2, [x2, #3]
   5cf20:	cmp	w2, #0x7b
   5cf24:	b.ne	5cea8 <my_re_op_compile@@Base+0xaa4>  // b.any
   5cf28:	mov	w0, #0x1                   	// #1
   5cf2c:	str	w0, [sp, #144]
   5cf30:	b	5cf38 <my_re_op_compile@@Base+0xb34>
   5cf34:	str	wzr, [sp, #144]
   5cf38:	ubfx	x0, x25, #7, #3
   5cf3c:	str	x0, [sp, #168]
   5cf40:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5cf44:	ldr	x0, [x0, #3888]
   5cf48:	str	x0, [sp, #184]
   5cf4c:	add	x26, sp, #0x150
   5cf50:	b	5e2cc <my_re_op_compile@@Base+0x1ec8>
   5cf54:	str	wzr, [sp, #144]
   5cf58:	b	5cf38 <my_re_op_compile@@Base+0xb34>
   5cf5c:	mov	w0, #0x1                   	// #1
   5cf60:	str	w0, [sp, #144]
   5cf64:	b	5cf38 <my_re_op_compile@@Base+0xb34>
   5cf68:	ldr	x4, [x3]
   5cf6c:	and	w3, w1, #0xff
   5cf70:	cmp	w3, #0x8
   5cf74:	b.eq	5cfcc <my_re_op_compile@@Base+0xbc8>  // b.none
   5cf78:	mov	w0, #0x80ff                	// #33023
   5cf7c:	movk	w0, #0x100, lsl #16
   5cf80:	and	w0, w1, w0
   5cf84:	mov	w2, #0xa                   	// #10
   5cf88:	movk	w2, #0x100, lsl #16
   5cf8c:	cmp	w0, w2
   5cf90:	b.ne	5cfa8 <my_re_op_compile@@Base+0xba4>  // b.any
   5cf94:	mov	x2, x4
   5cf98:	cmp	w3, #0xa
   5cf9c:	b.ne	5cfd0 <my_re_op_compile@@Base+0xbcc>  // b.any
   5cfa0:	ldr	x2, [x4, #24]
   5cfa4:	b	5cfd0 <my_re_op_compile@@Base+0xbcc>
   5cfa8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5cfac:	add	x3, x3, #0xc10
   5cfb0:	add	x3, x3, #0x550
   5cfb4:	mov	w2, #0xb6                  	// #182
   5cfb8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   5cfbc:	add	x1, x1, #0xc80
   5cfc0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   5cfc4:	add	x0, x0, #0x128
   5cfc8:	bl	58e0 <__assert_fail@plt>
   5cfcc:	mov	x2, x4
   5cfd0:	ldrh	w0, [x2, #184]
   5cfd4:	ubfx	x0, x0, #4, #9
   5cfd8:	and	w5, w25, #0xfff
   5cfdc:	cmp	w0, w5
   5cfe0:	b.ne	5e2fc <my_re_op_compile@@Base+0x1ef8>  // b.any
   5cfe4:	and	w0, w1, #0xf
   5cfe8:	ldr	x5, [sp, #184]
   5cfec:	ldrb	w0, [x5, w0, uxtw]
   5cff0:	cbz	w0, 5d078 <my_re_op_compile@@Base+0xc74>
   5cff4:	and	w1, w1, #0xc000
   5cff8:	cmp	w1, #0x8, lsl #12
   5cffc:	b.eq	5d09c <my_re_op_compile@@Base+0xc98>  // b.none
   5d000:	cmp	w3, #0xf
   5d004:	b.eq	5d0cc <my_re_op_compile@@Base+0xcc8>  // b.none
   5d008:	ldrb	w5, [x2, #184]
   5d00c:	and	x5, x5, #0xf
   5d010:	ldr	x0, [sp, #152]
   5d014:	ldr	x0, [x0, #16]
   5d018:	adds	x0, x0, x5
   5d01c:	b.eq	5e2fc <my_re_op_compile@@Base+0x1ef8>  // b.none
   5d020:	cmp	w1, #0x8, lsl #12
   5d024:	b.eq	5d0f8 <my_re_op_compile@@Base+0xcf4>  // b.none
   5d028:	cmp	w3, #0xf
   5d02c:	b.eq	5d128 <my_re_op_compile@@Base+0xd24>  // b.none
   5d030:	ldr	x2, [sp, #248]
   5d034:	ldr	x6, [x4, #16]
   5d038:	sub	x6, x6, #0x1
   5d03c:	sub	x5, x6, x5
   5d040:	cmp	x5, x2
   5d044:	b.ne	5e2fc <my_re_op_compile@@Base+0x1ef8>  // b.any
   5d048:	cmp	w1, #0x8, lsl #12
   5d04c:	b.eq	5d154 <my_re_op_compile@@Base+0xd50>  // b.none
   5d050:	cmp	w3, #0xf
   5d054:	b.eq	5d184 <my_re_op_compile@@Base+0xd80>  // b.none
   5d058:	ldr	x1, [sp, #256]
   5d05c:	bl	5460 <memcmp@plt>
   5d060:	cmp	w0, #0x0
   5d064:	ldr	w0, [sp, #144]
   5d068:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   5d06c:	b.ne	5e2fc <my_re_op_compile@@Base+0x1ef8>  // b.any
   5d070:	ldr	x27, [sp, #152]
   5d074:	b	5cd44 <my_re_op_compile@@Base+0x940>
   5d078:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d07c:	add	x3, x3, #0xc10
   5d080:	add	x3, x3, #0xa08
   5d084:	mov	w2, #0x1d85                	// #7557
   5d088:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d08c:	add	x1, x1, #0xfb8
   5d090:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d094:	add	x0, x0, #0xd10
   5d098:	bl	58e0 <__assert_fail@plt>
   5d09c:	sub	w0, w3, #0x9
   5d0a0:	cmp	w0, #0x1
   5d0a4:	b.hi	5d000 <my_re_op_compile@@Base+0xbfc>  // b.pmore
   5d0a8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d0ac:	add	x3, x3, #0xc10
   5d0b0:	add	x3, x3, #0xa08
   5d0b4:	mov	w2, #0x1d85                	// #7557
   5d0b8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d0bc:	add	x1, x1, #0xfb8
   5d0c0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d0c4:	add	x0, x0, #0xd40
   5d0c8:	bl	58e0 <__assert_fail@plt>
   5d0cc:	ldrb	w0, [x4, #129]
   5d0d0:	tbnz	w0, #6, 5d008 <my_re_op_compile@@Base+0xc04>
   5d0d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d0d8:	add	x3, x3, #0xc10
   5d0dc:	add	x3, x3, #0xa08
   5d0e0:	mov	w2, #0x1d85                	// #7557
   5d0e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d0e8:	add	x1, x1, #0xfb8
   5d0ec:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d0f0:	add	x0, x0, #0xd58
   5d0f4:	bl	58e0 <__assert_fail@plt>
   5d0f8:	sub	w2, w3, #0x9
   5d0fc:	cmp	w2, #0x1
   5d100:	b.hi	5d028 <my_re_op_compile@@Base+0xc24>  // b.pmore
   5d104:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d108:	add	x3, x3, #0xc10
   5d10c:	add	x3, x3, #0xa08
   5d110:	mov	w2, #0x1d86                	// #7558
   5d114:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d118:	add	x1, x1, #0xfb8
   5d11c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d120:	add	x0, x0, #0xe70
   5d124:	bl	58e0 <__assert_fail@plt>
   5d128:	ldrb	w2, [x4, #129]
   5d12c:	tbnz	w2, #6, 5d030 <my_re_op_compile@@Base+0xc2c>
   5d130:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d134:	add	x3, x3, #0xc10
   5d138:	add	x3, x3, #0xa08
   5d13c:	mov	w2, #0x1d86                	// #7558
   5d140:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d144:	add	x1, x1, #0xfb8
   5d148:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d14c:	add	x0, x0, #0xe88
   5d150:	bl	58e0 <__assert_fail@plt>
   5d154:	sub	w1, w3, #0x9
   5d158:	cmp	w1, #0x1
   5d15c:	b.hi	5d050 <my_re_op_compile@@Base+0xc4c>  // b.pmore
   5d160:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d164:	add	x3, x3, #0xc10
   5d168:	add	x3, x3, #0xa08
   5d16c:	mov	w2, #0x1d87                	// #7559
   5d170:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d174:	add	x1, x1, #0xfb8
   5d178:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d17c:	add	x0, x0, #0xd40
   5d180:	bl	58e0 <__assert_fail@plt>
   5d184:	ldrb	w1, [x4, #129]
   5d188:	tbnz	w1, #6, 5d058 <my_re_op_compile@@Base+0xc54>
   5d18c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d190:	add	x3, x3, #0xc10
   5d194:	add	x3, x3, #0xa08
   5d198:	mov	w2, #0x1d87                	// #7559
   5d19c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d1a0:	add	x1, x1, #0xfb8
   5d1a4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d1a8:	add	x0, x0, #0xd58
   5d1ac:	bl	58e0 <__assert_fail@plt>
   5d1b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d1b4:	add	x3, x3, #0xc10
   5d1b8:	add	x3, x3, #0x550
   5d1bc:	mov	w2, #0xb6                  	// #182
   5d1c0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   5d1c4:	add	x1, x1, #0xc80
   5d1c8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   5d1cc:	add	x0, x0, #0x128
   5d1d0:	bl	58e0 <__assert_fail@plt>
   5d1d4:	ldr	x19, [sp, #352]
   5d1d8:	ldr	x0, [sp, #344]
   5d1dc:	sub	x19, x19, x0
   5d1e0:	mov	w2, #0xb                   	// #11
   5d1e4:	mov	x1, x27
   5d1e8:	mov	x0, x28
   5d1ec:	bl	54b0 <Perl_save_pushptr@plt>
   5d1f0:	ldr	x1, [sp, #496]
   5d1f4:	cbz	x1, 5d204 <my_re_op_compile@@Base+0xe00>
   5d1f8:	mov	w2, #0xa                   	// #10
   5d1fc:	mov	x0, x28
   5d200:	bl	54b0 <Perl_save_pushptr@plt>
   5d204:	ldr	x1, [sp, #504]
   5d208:	cbz	x1, 5d218 <my_re_op_compile@@Base+0xe14>
   5d20c:	mov	w2, #0xa                   	// #10
   5d210:	mov	x0, x28
   5d214:	bl	54b0 <Perl_save_pushptr@plt>
   5d218:	cmp	x19, #0x7f
   5d21c:	b.le	5d258 <my_re_op_compile@@Base+0xe54>
   5d220:	mov	x19, #0x75                  	// #117
   5d224:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   5d228:	add	x6, x6, #0xfe0
   5d22c:	ldr	w0, [sp, #528]
   5d230:	cmp	w0, #0x0
   5d234:	ldr	x5, [sp, #344]
   5d238:	mov	x4, x19
   5d23c:	cset	w3, ne  // ne = any
   5d240:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   5d244:	add	x2, x2, #0xe30
   5d248:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   5d24c:	add	x1, x1, #0x50
   5d250:	mov	x0, x28
   5d254:	bl	5420 <Perl_croak@plt>
   5d258:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   5d25c:	add	x6, x6, #0x20
   5d260:	b	5d22c <my_re_op_compile@@Base+0xe28>
   5d264:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d268:	add	x3, x3, #0xc10
   5d26c:	add	x3, x3, #0xa08
   5d270:	mov	w2, #0x1da2                	// #7586
   5d274:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d278:	add	x1, x1, #0xfb8
   5d27c:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   5d280:	add	x0, x0, #0x3d8
   5d284:	bl	58e0 <__assert_fail@plt>
   5d288:	ldrb	w0, [x28, #185]
   5d28c:	cbz	w0, 5e3a0 <my_re_op_compile@@Base+0x1f9c>
   5d290:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5d294:	add	x1, x1, #0xce8
   5d298:	mov	x0, x28
   5d29c:	bl	5420 <Perl_croak@plt>
   5d2a0:	mov	x2, #0xff08                	// #65288
   5d2a4:	mov	x1, x21
   5d2a8:	mov	x0, x28
   5d2ac:	bl	5310 <Perl_sv_setuv@plt>
   5d2b0:	b	5e3d8 <my_re_op_compile@@Base+0x1fd4>
   5d2b4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d2b8:	add	x3, x3, #0xc10
   5d2bc:	add	x3, x3, #0xa20
   5d2c0:	mov	w2, #0x1b21                	// #6945
   5d2c4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d2c8:	add	x1, x1, #0xfb8
   5d2cc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d2d0:	add	x0, x0, #0xda0
   5d2d4:	bl	58e0 <__assert_fail@plt>
   5d2d8:	and	w0, w1, #0xff
   5d2dc:	sub	w0, w0, #0x9
   5d2e0:	cmp	w0, #0x1
   5d2e4:	b.hi	5e40c <my_re_op_compile@@Base+0x2008>  // b.pmore
   5d2e8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d2ec:	add	x3, x3, #0xc10
   5d2f0:	add	x3, x3, #0xa20
   5d2f4:	mov	w2, #0x1b21                	// #6945
   5d2f8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d2fc:	add	x1, x1, #0xfb8
   5d300:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d304:	add	x0, x0, #0xdd0
   5d308:	bl	58e0 <__assert_fail@plt>
   5d30c:	mov	w2, #0x2                   	// #2
   5d310:	mov	x1, x21
   5d314:	mov	x0, x28
   5d318:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5d31c:	b	5e414 <my_re_op_compile@@Base+0x2010>
   5d320:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d324:	add	x3, x3, #0xc10
   5d328:	add	x3, x3, #0xa20
   5d32c:	mov	w2, #0x1b2b                	// #6955
   5d330:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d334:	add	x1, x1, #0xfb8
   5d338:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d33c:	add	x0, x0, #0xd18
   5d340:	bl	58e0 <__assert_fail@plt>
   5d344:	add	w0, w20, #0x7
   5d348:	ldr	x22, [x28]
   5d34c:	cbz	x20, 606e0 <my_re_op_compile@@Base+0x42dc>
   5d350:	mov	x1, x19
   5d354:	add	x4, x20, x19
   5d358:	mov	w3, #0x5c                  	// #92
   5d35c:	ldrb	w2, [x1], #1
   5d360:	cmp	w2, #0x27
   5d364:	ccmp	w2, w3, #0x4, ne  // ne = any
   5d368:	cinc	w0, w0, eq  // eq = none
   5d36c:	cmp	x1, x4
   5d370:	b.ne	5d35c <my_re_op_compile@@Base+0xf58>  // b.any
   5d374:	sxtw	x0, w0
   5d378:	bl	5250 <Perl_safesysmalloc@plt>
   5d37c:	mov	x21, x0
   5d380:	mov	w0, #0x71                  	// #113
   5d384:	strb	w0, [x21]
   5d388:	mov	w0, #0x72                  	// #114
   5d38c:	strb	w0, [x21, #1]
   5d390:	add	x1, x21, #0x3
   5d394:	mov	w0, #0x27                  	// #39
   5d398:	strb	w0, [x21, #2]
   5d39c:	ldr	x4, [sp, #600]
   5d3a0:	mov	x0, #0x0                   	// #0
   5d3a4:	mov	w5, #0x0                   	// #0
   5d3a8:	mov	w6, #0x5c                  	// #92
   5d3ac:	mov	w7, #0x5c                  	// #92
   5d3b0:	mov	w11, #0x28                  	// #40
   5d3b4:	mov	w10, #0x3f                  	// #63
   5d3b8:	mov	w8, #0x3d                  	// #61
   5d3bc:	mov	w9, #0x29                  	// #41
   5d3c0:	b	5d438 <my_re_op_compile@@Base+0x1034>
   5d3c4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d3c8:	add	x3, x3, #0xc10
   5d3cc:	add	x3, x3, #0xa20
   5d3d0:	mov	w2, #0x1b4f                	// #6991
   5d3d4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d3d8:	add	x1, x1, #0xfb8
   5d3dc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d3e0:	add	x0, x0, #0xd30
   5d3e4:	bl	58e0 <__assert_fail@plt>
   5d3e8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d3ec:	add	x3, x3, #0xc10
   5d3f0:	add	x3, x3, #0xa20
   5d3f4:	mov	w2, #0x1b50                	// #6992
   5d3f8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d3fc:	add	x1, x1, #0xfb8
   5d400:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d404:	add	x0, x0, #0xd40
   5d408:	bl	58e0 <__assert_fail@plt>
   5d40c:	ldrb	w2, [x19, x0]
   5d410:	cmp	w2, #0x27
   5d414:	mov	x3, x1
   5d418:	ccmp	w2, w6, #0x4, ne  // ne = any
   5d41c:	b.ne	5d424 <my_re_op_compile@@Base+0x1020>  // b.any
   5d420:	strb	w7, [x3], #1
   5d424:	mov	x1, x3
   5d428:	strb	w2, [x1], #1
   5d42c:	add	x0, x0, #0x1
   5d430:	cmp	x20, x0
   5d434:	b.ls	60708 <my_re_op_compile@@Base+0x4304>  // b.plast
   5d438:	cbz	x4, 5d40c <my_re_op_compile@@Base+0x1008>
   5d43c:	ldr	w2, [x4, #4]
   5d440:	cmp	w5, w2
   5d444:	b.ge	5d40c <my_re_op_compile@@Base+0x1008>  // b.tcont
   5d448:	sbfiz	x2, x5, #5, #32
   5d44c:	ldr	x3, [x4, #8]
   5d450:	ldr	x3, [x3, x2]
   5d454:	cmp	x3, x0
   5d458:	b.ne	5d40c <my_re_op_compile@@Base+0x1008>  // b.any
   5d45c:	ldrb	w3, [x19, x0]
   5d460:	cmp	w3, #0x28
   5d464:	b.ne	5d3c4 <my_re_op_compile@@Base+0xfc0>  // b.any
   5d468:	add	x3, x19, x0
   5d46c:	ldrb	w3, [x3, #1]
   5d470:	cmp	w3, #0x3f
   5d474:	b.ne	5d3e8 <my_re_op_compile@@Base+0xfe4>  // b.any
   5d478:	mov	x3, x1
   5d47c:	strb	w11, [x3], #2
   5d480:	strb	w10, [x1, #1]
   5d484:	add	x0, x0, #0x2
   5d488:	ldr	x1, [x4, #8]
   5d48c:	add	x1, x1, x2
   5d490:	ldr	x1, [x1, #8]
   5d494:	cmp	x1, x0
   5d498:	b.ls	5d4b8 <my_re_op_compile@@Base+0x10b4>  // b.plast
   5d49c:	strb	w8, [x3], #1
   5d4a0:	add	x0, x0, #0x1
   5d4a4:	ldr	x1, [x4, #8]
   5d4a8:	add	x1, x1, x2
   5d4ac:	ldr	x1, [x1, #8]
   5d4b0:	cmp	x0, x1
   5d4b4:	b.cc	5d49c <my_re_op_compile@@Base+0x1098>  // b.lo, b.ul, b.last
   5d4b8:	mov	x1, x3
   5d4bc:	strb	w9, [x1], #1
   5d4c0:	add	w5, w5, #0x1
   5d4c4:	b	5d42c <my_re_op_compile@@Base+0x1028>
   5d4c8:	mov	w6, #0x1b71                	// #7025
   5d4cc:	adrp	x5, 75000 <boot_re@@Base+0x1341c>
   5d4d0:	add	x5, x5, #0xfb8
   5d4d4:	ldrsw	x4, [x28, #48]
   5d4d8:	ldrsw	x3, [x28, #64]
   5d4dc:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   5d4e0:	add	x2, x2, #0x6f8
   5d4e4:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5d4e8:	add	x1, x1, #0x700
   5d4ec:	mov	x0, x28
   5d4f0:	bl	4f70 <Perl_deb@plt>
   5d4f4:	b	607ac <my_re_op_compile@@Base+0x43a8>
   5d4f8:	mov	w2, #0x0                   	// #0
   5d4fc:	add	w2, w2, #0x1
   5d500:	ldr	x0, [x0, #16]
   5d504:	cbnz	x0, 5d4fc <my_re_op_compile@@Base+0x10f8>
   5d508:	mov	w4, #0x1b74                	// #7028
   5d50c:	adrp	x3, 75000 <boot_re@@Base+0x1341c>
   5d510:	add	x3, x3, #0xfb8
   5d514:	adrp	x1, 67000 <boot_re@@Base+0x541c>
   5d518:	add	x1, x1, #0xfc0
   5d51c:	mov	x0, x28
   5d520:	bl	4f70 <Perl_deb@plt>
   5d524:	b	607cc <my_re_op_compile@@Base+0x43c8>
   5d528:	mov	w2, #0x14                  	// #20
   5d52c:	mov	w1, #0x20                  	// #32
   5d530:	mov	x0, x28
   5d534:	bl	5520 <Perl_new_stackinfo@plt>
   5d538:	mov	x21, x0
   5d53c:	ldr	x0, [x28, #240]
   5d540:	str	x0, [x21, #16]
   5d544:	str	x21, [x0, #24]
   5d548:	b	607d0 <my_re_op_compile@@Base+0x43cc>
   5d54c:	mov	x1, x20
   5d550:	mov	x0, x28
   5d554:	bl	5860 <Perl_sv_free2@plt>
   5d558:	b	6087c <my_re_op_compile@@Base+0x4478>
   5d55c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d560:	add	x3, x3, #0xc10
   5d564:	add	x3, x3, #0xa20
   5d568:	mov	w2, #0x1b7e                	// #7038
   5d56c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d570:	add	x1, x1, #0xfb8
   5d574:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   5d578:	add	x0, x0, #0xa48
   5d57c:	bl	58e0 <__assert_fail@plt>
   5d580:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d584:	add	x3, x3, #0xc10
   5d588:	add	x3, x3, #0xa20
   5d58c:	mov	w2, #0x1b7e                	// #7038
   5d590:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d594:	add	x1, x1, #0xfb8
   5d598:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   5d59c:	add	x0, x0, #0xa80
   5d5a0:	bl	58e0 <__assert_fail@plt>
   5d5a4:	mov	x0, x28
   5d5a8:	bl	5950 <Perl_gv_add_by_type@plt>
   5d5ac:	ldr	w1, [x0, #12]
   5d5b0:	and	w2, w1, #0xff
   5d5b4:	sub	w2, w2, #0x9
   5d5b8:	cmp	w2, #0x1
   5d5bc:	b.hi	5d5d4 <my_re_op_compile@@Base+0x11d0>  // b.pmore
   5d5c0:	and	w1, w1, #0xc000
   5d5c4:	cmp	w1, #0x8, lsl #12
   5d5c8:	b.ne	5d5f8 <my_re_op_compile@@Base+0x11f4>  // b.any
   5d5cc:	ldr	x0, [x0, #16]
   5d5d0:	b	608b8 <my_re_op_compile@@Base+0x44b4>
   5d5d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d5d8:	add	x3, x3, #0xc10
   5d5dc:	add	x3, x3, #0xa20
   5d5e0:	mov	w2, #0x1b7e                	// #7038
   5d5e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d5e8:	add	x1, x1, #0xfb8
   5d5ec:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   5d5f0:	add	x0, x0, #0xa48
   5d5f4:	bl	58e0 <__assert_fail@plt>
   5d5f8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d5fc:	add	x3, x3, #0xc10
   5d600:	add	x3, x3, #0xa20
   5d604:	mov	w2, #0x1b7e                	// #7038
   5d608:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d60c:	add	x1, x1, #0xfb8
   5d610:	adrp	x0, 64000 <boot_re@@Base+0x241c>
   5d614:	add	x0, x0, #0xa80
   5d618:	bl	58e0 <__assert_fail@plt>
   5d61c:	mov	x1, x20
   5d620:	mov	x0, x28
   5d624:	bl	55e0 <Perl_mg_get@plt>
   5d628:	b	608c4 <my_re_op_compile@@Base+0x44c0>
   5d62c:	ldr	w0, [x20, #12]
   5d630:	tst	w0, #0xff00
   5d634:	b.eq	608f0 <my_re_op_compile@@Base+0x44ec>  // b.none
   5d638:	tbz	w0, #10, 5d674 <my_re_op_compile@@Base+0x1270>
   5d63c:	ldr	x1, [x20]
   5d640:	mov	w0, #0x0                   	// #0
   5d644:	cbz	x1, 608ec <my_re_op_compile@@Base+0x44e8>
   5d648:	ldr	x1, [x1, #16]
   5d64c:	mov	w0, #0x1                   	// #1
   5d650:	cmp	x1, #0x1
   5d654:	b.hi	608ec <my_re_op_compile@@Base+0x44e8>  // b.pmore
   5d658:	mov	w0, #0x0                   	// #0
   5d65c:	cbz	x1, 608ec <my_re_op_compile@@Base+0x44e8>
   5d660:	ldr	x0, [x20, #16]
   5d664:	ldrb	w0, [x0]
   5d668:	cmp	w0, #0x30
   5d66c:	cset	w0, ne  // ne = any
   5d670:	b	608ec <my_re_op_compile@@Base+0x44e8>
   5d674:	tbz	w0, #8, 5d704 <my_re_op_compile@@Base+0x1300>
   5d678:	and	w2, w0, #0xf
   5d67c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5d680:	ldr	x1, [x1, #3712]
   5d684:	ldrb	w1, [x1, w2, uxtw]
   5d688:	cbz	w1, 5d6ac <my_re_op_compile@@Base+0x12a8>
   5d68c:	and	w1, w0, #0xc000
   5d690:	cmp	w1, #0x8, lsl #12
   5d694:	b.eq	5d6d0 <my_re_op_compile@@Base+0x12cc>  // b.none
   5d698:	ldr	x0, [x20]
   5d69c:	ldr	x0, [x0, #32]
   5d6a0:	cmp	x0, #0x0
   5d6a4:	cset	w0, ne  // ne = any
   5d6a8:	b	608ec <my_re_op_compile@@Base+0x44e8>
   5d6ac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d6b0:	add	x3, x3, #0xc10
   5d6b4:	add	x3, x3, #0xa20
   5d6b8:	mov	w2, #0x1b7f                	// #7039
   5d6bc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d6c0:	add	x1, x1, #0xfb8
   5d6c4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d6c8:	add	x0, x0, #0xda0
   5d6cc:	bl	58e0 <__assert_fail@plt>
   5d6d0:	and	w0, w0, #0xff
   5d6d4:	sub	w0, w0, #0x9
   5d6d8:	cmp	w0, #0x1
   5d6dc:	b.hi	5d698 <my_re_op_compile@@Base+0x1294>  // b.pmore
   5d6e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d6e4:	add	x3, x3, #0xc10
   5d6e8:	add	x3, x3, #0xa20
   5d6ec:	mov	w2, #0x1b7f                	// #7039
   5d6f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d6f4:	add	x1, x1, #0xfb8
   5d6f8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5d6fc:	add	x0, x0, #0xdd0
   5d700:	bl	58e0 <__assert_fail@plt>
   5d704:	tbz	w0, #11, 5d770 <my_re_op_compile@@Base+0x136c>
   5d708:	and	w2, w0, #0xf
   5d70c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5d710:	ldr	x1, [x1, #3840]
   5d714:	ldrb	w1, [x1, w2, uxtw]
   5d718:	cbz	w1, 5d78c <my_re_op_compile@@Base+0x1388>
   5d71c:	and	w3, w0, #0xc000
   5d720:	cmp	w3, #0x8, lsl #12
   5d724:	b.eq	5d7b0 <my_re_op_compile@@Base+0x13ac>  // b.none
   5d728:	and	w0, w0, #0xff
   5d72c:	cmp	w0, #0xf
   5d730:	b.eq	5d7e4 <my_re_op_compile@@Base+0x13e0>  // b.none
   5d734:	ldr	x2, [x20, #16]
   5d738:	ldr	w1, [x2, #12]
   5d73c:	tbz	w1, #20, 5d898 <my_re_op_compile@@Base+0x1494>
   5d740:	cmp	w3, #0x8, lsl #12
   5d744:	b.eq	5d814 <my_re_op_compile@@Base+0x1410>  // b.none
   5d748:	cmp	w0, #0xf
   5d74c:	b.eq	5d844 <my_re_op_compile@@Base+0x1440>  // b.none
   5d750:	and	w1, w1, #0xff
   5d754:	cmp	w1, #0x6
   5d758:	b.ls	5d874 <my_re_op_compile@@Base+0x1470>  // b.plast
   5d75c:	ldr	x0, [x2]
   5d760:	ldr	x0, [x0]
   5d764:	ldr	w1, [x0, #12]
   5d768:	mov	w0, #0x1                   	// #1
   5d76c:	tbz	w1, #28, 5d784 <my_re_op_compile@@Base+0x1380>
   5d770:	mov	w2, #0x0                   	// #0
   5d774:	mov	x1, x20
   5d778:	mov	x0, x28
   5d77c:	bl	4ec0 <Perl_sv_2bool_flags@plt>
   5d780:	and	w0, w0, #0xff
   5d784:	and	w0, w0, #0x1
   5d788:	b	608ec <my_re_op_compile@@Base+0x44e8>
   5d78c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d790:	add	x3, x3, #0xc10
   5d794:	add	x3, x3, #0xa20
   5d798:	mov	w2, #0x1b7f                	// #7039
   5d79c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d7a0:	add	x1, x1, #0xfb8
   5d7a4:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d7a8:	add	x0, x0, #0x160
   5d7ac:	bl	58e0 <__assert_fail@plt>
   5d7b0:	and	w1, w0, #0xff
   5d7b4:	sub	w1, w1, #0x9
   5d7b8:	cmp	w1, #0x1
   5d7bc:	b.hi	5d728 <my_re_op_compile@@Base+0x1324>  // b.pmore
   5d7c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d7c4:	add	x3, x3, #0xc10
   5d7c8:	add	x3, x3, #0xa20
   5d7cc:	mov	w2, #0x1b7f                	// #7039
   5d7d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d7d4:	add	x1, x1, #0xfb8
   5d7d8:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d7dc:	add	x0, x0, #0x190
   5d7e0:	bl	58e0 <__assert_fail@plt>
   5d7e4:	ldr	x1, [x20]
   5d7e8:	ldrb	w1, [x1, #129]
   5d7ec:	tbnz	w1, #6, 5d734 <my_re_op_compile@@Base+0x1330>
   5d7f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d7f4:	add	x3, x3, #0xc10
   5d7f8:	add	x3, x3, #0xa20
   5d7fc:	mov	w2, #0x1b7f                	// #7039
   5d800:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d804:	add	x1, x1, #0xfb8
   5d808:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d80c:	add	x0, x0, #0x1a8
   5d810:	bl	58e0 <__assert_fail@plt>
   5d814:	sub	w3, w0, #0x9
   5d818:	cmp	w3, #0x1
   5d81c:	b.hi	5d748 <my_re_op_compile@@Base+0x1344>  // b.pmore
   5d820:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d824:	add	x3, x3, #0xc10
   5d828:	add	x3, x3, #0xa20
   5d82c:	mov	w2, #0x1b7f                	// #7039
   5d830:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d834:	add	x1, x1, #0xfb8
   5d838:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d83c:	add	x0, x0, #0x190
   5d840:	bl	58e0 <__assert_fail@plt>
   5d844:	ldr	x0, [x20]
   5d848:	ldrb	w0, [x0, #129]
   5d84c:	tbnz	w0, #6, 5d750 <my_re_op_compile@@Base+0x134c>
   5d850:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d854:	add	x3, x3, #0xc10
   5d858:	add	x3, x3, #0xa20
   5d85c:	mov	w2, #0x1b7f                	// #7039
   5d860:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d864:	add	x1, x1, #0xfb8
   5d868:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d86c:	add	x0, x0, #0x1a8
   5d870:	bl	58e0 <__assert_fail@plt>
   5d874:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d878:	add	x3, x3, #0xc10
   5d87c:	add	x3, x3, #0xa20
   5d880:	mov	w2, #0x1b7f                	// #7039
   5d884:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d888:	add	x1, x1, #0xfb8
   5d88c:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d890:	add	x0, x0, #0x1f0
   5d894:	bl	58e0 <__assert_fail@plt>
   5d898:	mov	w0, #0x1                   	// #1
   5d89c:	b	5d784 <my_re_op_compile@@Base+0x1380>
   5d8a0:	mov	x1, x20
   5d8a4:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d8a8:	add	x0, x0, #0xd80
   5d8ac:	bl	5530 <Perl_croak_nocontext@plt>
   5d8b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d8b4:	add	x3, x3, #0xc10
   5d8b8:	add	x3, x3, #0xa20
   5d8bc:	mov	w2, #0x1b83                	// #7043
   5d8c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d8c4:	add	x1, x1, #0xfb8
   5d8c8:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d8cc:	add	x0, x0, #0xd88
   5d8d0:	bl	58e0 <__assert_fail@plt>
   5d8d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d8d8:	add	x3, x3, #0xc10
   5d8dc:	add	x3, x3, #0xa20
   5d8e0:	mov	w2, #0x1b84                	// #7044
   5d8e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d8e8:	add	x1, x1, #0xfb8
   5d8ec:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d8f0:	add	x0, x0, #0x160
   5d8f4:	bl	58e0 <__assert_fail@plt>
   5d8f8:	and	w1, w0, #0xff
   5d8fc:	sub	w1, w1, #0x9
   5d900:	cmp	w1, #0x1
   5d904:	b.hi	60918 <my_re_op_compile@@Base+0x4514>  // b.pmore
   5d908:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d90c:	add	x3, x3, #0xc10
   5d910:	add	x3, x3, #0xa20
   5d914:	mov	w2, #0x1b84                	// #7044
   5d918:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d91c:	add	x1, x1, #0xfb8
   5d920:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d924:	add	x0, x0, #0x190
   5d928:	bl	58e0 <__assert_fail@plt>
   5d92c:	ldr	x0, [x21]
   5d930:	ldrb	w0, [x0, #129]
   5d934:	tbnz	w0, #6, 60924 <my_re_op_compile@@Base+0x4520>
   5d938:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d93c:	add	x3, x3, #0xc10
   5d940:	add	x3, x3, #0xa20
   5d944:	mov	w2, #0x1b84                	// #7044
   5d948:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d94c:	add	x1, x1, #0xfb8
   5d950:	adrp	x0, 68000 <boot_re@@Base+0x641c>
   5d954:	add	x0, x0, #0x1a8
   5d958:	bl	58e0 <__assert_fail@plt>
   5d95c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d960:	add	x3, x3, #0xc10
   5d964:	add	x3, x3, #0xa20
   5d968:	mov	w2, #0x1b85                	// #7045
   5d96c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5d970:	add	x1, x1, #0xfb8
   5d974:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5d978:	add	x0, x0, #0xd98
   5d97c:	bl	58e0 <__assert_fail@plt>
   5d980:	mov	w2, #0xffffffff            	// #-1
   5d984:	add	w2, w2, #0x1
   5d988:	ldr	x0, [x0, #16]
   5d98c:	cbnz	x0, 5d984 <my_re_op_compile@@Base+0x1580>
   5d990:	mov	w4, #0x1b89                	// #7049
   5d994:	adrp	x3, 75000 <boot_re@@Base+0x1341c>
   5d998:	add	x3, x3, #0xfb8
   5d99c:	adrp	x1, 68000 <boot_re@@Base+0x641c>
   5d9a0:	add	x1, x1, #0x9e8
   5d9a4:	mov	x0, x28
   5d9a8:	bl	4f70 <Perl_deb@plt>
   5d9ac:	b	60964 <my_re_op_compile@@Base+0x4560>
   5d9b0:	bl	5960 <Perl_croak_popstack@plt>
   5d9b4:	mov	x0, x28
   5d9b8:	bl	5760 <Perl_free_tmps@plt>
   5d9bc:	b	609d0 <my_re_op_compile@@Base+0x45cc>
   5d9c0:	mov	w6, #0x1b8b                	// #7051
   5d9c4:	adrp	x5, 75000 <boot_re@@Base+0x1341c>
   5d9c8:	add	x5, x5, #0xfb8
   5d9cc:	ldrsw	x4, [x28, #48]
   5d9d0:	ldrsw	x3, [x28, #64]
   5d9d4:	adrp	x2, 6a000 <boot_re@@Base+0x841c>
   5d9d8:	add	x2, x2, #0xee0
   5d9dc:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5d9e0:	add	x1, x1, #0x700
   5d9e4:	mov	x0, x28
   5d9e8:	bl	4f70 <Perl_deb@plt>
   5d9ec:	b	609d8 <my_re_op_compile@@Base+0x45d4>
   5d9f0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5d9f4:	add	x3, x3, #0xc10
   5d9f8:	add	x3, x3, #0xa20
   5d9fc:	mov	w2, #0x1b92                	// #7058
   5da00:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5da04:	add	x1, x1, #0xfb8
   5da08:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5da0c:	add	x0, x0, #0xdd8
   5da10:	bl	58e0 <__assert_fail@plt>
   5da14:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5da18:	add	x3, x3, #0xc10
   5da1c:	add	x3, x3, #0x550
   5da20:	mov	w2, #0xb6                  	// #182
   5da24:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   5da28:	add	x1, x1, #0xc80
   5da2c:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   5da30:	add	x0, x0, #0x128
   5da34:	bl	58e0 <__assert_fail@plt>
   5da38:	ldr	w2, [x22, #8]
   5da3c:	cmp	w2, #0x1
   5da40:	b.ls	5da50 <my_re_op_compile@@Base+0x164c>  // b.plast
   5da44:	sub	w2, w2, #0x1
   5da48:	str	w2, [x22, #8]
   5da4c:	b	5dc78 <my_re_op_compile@@Base+0x1874>
   5da50:	mov	x1, x22
   5da54:	mov	x0, x28
   5da58:	bl	5860 <Perl_sv_free2@plt>
   5da5c:	b	5dc78 <my_re_op_compile@@Base+0x1874>
   5da60:	mov	w1, #0x0                   	// #0
   5da64:	mov	x0, x28
   5da68:	bl	26a9c <my_regexec@@Base+0x35a8>
   5da6c:	str	x0, [sp, #600]
   5da70:	b	5e48c <my_re_op_compile@@Base+0x2088>
   5da74:	ldr	x2, [x23, #32]
   5da78:	sbfiz	x0, x3, #5, #32
   5da7c:	ldr	x2, [x2, #8]
   5da80:	add	x0, x2, x0
   5da84:	mov	w5, w7
   5da88:	add	w3, w3, #0x1
   5da8c:	mov	w2, w20
   5da90:	ldr	x4, [x0]
   5da94:	ldrb	w6, [x19, x4]
   5da98:	cmp	w6, #0x28
   5da9c:	b.ne	5db84 <my_re_op_compile@@Base+0x1780>  // b.any
   5daa0:	ldr	x6, [x0, #8]
   5daa4:	ldrb	w6, [x19, x6]
   5daa8:	cmp	w6, #0x29
   5daac:	b.ne	5dba8 <my_re_op_compile@@Base+0x17a4>  // b.any
   5dab0:	str	x4, [x1]
   5dab4:	ldr	x4, [x0, #8]
   5dab8:	str	x4, [x1, #8]
   5dabc:	ldr	x4, [x0, #16]
   5dac0:	str	x4, [x1, #16]
   5dac4:	cbz	w5, 5dbcc <my_re_op_compile@@Base+0x17c8>
   5dac8:	ldr	w0, [x22, #8]
   5dacc:	add	w0, w0, #0x1
   5dad0:	str	w0, [x22, #8]
   5dad4:	mov	x0, x8
   5dad8:	b	5dbd0 <my_re_op_compile@@Base+0x17cc>
   5dadc:	sbfiz	x0, x2, #5, #32
   5dae0:	ldr	x4, [sp, #600]
   5dae4:	ldr	x4, [x4, #8]
   5dae8:	add	x0, x4, x0
   5daec:	add	w2, w2, #0x1
   5daf0:	mov	w5, w9
   5daf4:	b	5da90 <my_re_op_compile@@Base+0x168c>
   5daf8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5dafc:	add	x3, x3, #0xc10
   5db00:	add	x3, x3, #0xa20
   5db04:	mov	w2, #0x1bc1                	// #7105
   5db08:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5db0c:	add	x1, x1, #0xfb8
   5db10:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5db14:	add	x0, x0, #0xdf8
   5db18:	bl	58e0 <__assert_fail@plt>
   5db1c:	b.ls	5db3c <my_re_op_compile@@Base+0x1738>  // b.plast
   5db20:	add	w3, w3, #0x1
   5db24:	ldr	x0, [x10, #8]
   5db28:	cmp	x6, x0
   5db2c:	b.ls	5db60 <my_re_op_compile@@Base+0x175c>  // b.plast
   5db30:	mov	w5, w7
   5db34:	mov	x0, x10
   5db38:	b	5da90 <my_re_op_compile@@Base+0x168c>
   5db3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5db40:	add	x3, x3, #0xc10
   5db44:	add	x3, x3, #0xa20
   5db48:	mov	w2, #0x1bc4                	// #7108
   5db4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5db50:	add	x1, x1, #0xfb8
   5db54:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5db58:	add	x0, x0, #0xe28
   5db5c:	bl	58e0 <__assert_fail@plt>
   5db60:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5db64:	add	x3, x3, #0xc10
   5db68:	add	x3, x3, #0xa20
   5db6c:	mov	w2, #0x1bc8                	// #7112
   5db70:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5db74:	add	x1, x1, #0xfb8
   5db78:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5db7c:	add	x0, x0, #0xe68
   5db80:	bl	58e0 <__assert_fail@plt>
   5db84:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5db88:	add	x3, x3, #0xc10
   5db8c:	add	x3, x3, #0xa20
   5db90:	mov	w2, #0x1bcb                	// #7115
   5db94:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5db98:	add	x1, x1, #0xfb8
   5db9c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5dba0:	add	x0, x0, #0xe98
   5dba4:	bl	58e0 <__assert_fail@plt>
   5dba8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5dbac:	add	x3, x3, #0xc10
   5dbb0:	add	x3, x3, #0xa20
   5dbb4:	mov	w2, #0x1bcc                	// #7116
   5dbb8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5dbbc:	add	x1, x1, #0xfb8
   5dbc0:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5dbc4:	add	x0, x0, #0xeb0
   5dbc8:	bl	58e0 <__assert_fail@plt>
   5dbcc:	ldr	x0, [x0, #24]
   5dbd0:	str	x0, [x1, #24]
   5dbd4:	add	x1, x1, #0x20
   5dbd8:	cmp	w20, w2
   5dbdc:	ccmp	w21, w3, #0x0, le
   5dbe0:	b.le	5dc3c <my_re_op_compile@@Base+0x1838>
   5dbe4:	cmp	w2, w20
   5dbe8:	b.eq	5da74 <my_re_op_compile@@Base+0x1670>  // b.none
   5dbec:	cmp	w21, w3
   5dbf0:	b.eq	5dadc <my_re_op_compile@@Base+0x16d8>  // b.none
   5dbf4:	sbfiz	x4, x2, #5, #32
   5dbf8:	ldr	x0, [sp, #600]
   5dbfc:	ldr	x5, [x0, #8]
   5dc00:	add	x0, x5, x4
   5dc04:	ldr	x6, [x5, x4]
   5dc08:	ldr	x5, [x23, #32]
   5dc0c:	sbfiz	x4, x3, #5, #32
   5dc10:	ldr	x5, [x5, #8]
   5dc14:	add	x10, x5, x4
   5dc18:	ldr	x4, [x5, x4]
   5dc1c:	cmp	x6, x4
   5dc20:	b.cs	5db1c <my_re_op_compile@@Base+0x1718>  // b.hs, b.nlast
   5dc24:	add	w2, w2, #0x1
   5dc28:	ldr	x5, [x0, #8]
   5dc2c:	cmp	x4, x5
   5dc30:	b.ls	5daf8 <my_re_op_compile@@Base+0x16f4>  // b.plast
   5dc34:	mov	w5, w9
   5dc38:	b	5da90 <my_re_op_compile@@Base+0x168c>
   5dc3c:	ldr	x1, [sp, #600]
   5dc40:	ldr	w0, [x1, #4]
   5dc44:	add	w21, w0, w21
   5dc48:	str	w21, [x1, #4]
   5dc4c:	ldr	x0, [sp, #600]
   5dc50:	ldr	x0, [x0, #8]
   5dc54:	bl	5650 <Perl_safesysfree@plt>
   5dc58:	ldr	x0, [sp, #600]
   5dc5c:	ldr	x1, [sp, #176]
   5dc60:	str	x1, [x0, #8]
   5dc64:	ldr	w2, [x22, #8]
   5dc68:	cmp	w2, #0x1
   5dc6c:	b.ls	5dfb4 <my_re_op_compile@@Base+0x1bb0>  // b.plast
   5dc70:	sub	w2, w2, #0x1
   5dc74:	str	w2, [x22, #8]
   5dc78:	ldr	x0, [sp, #664]
   5dc7c:	cbnz	x0, 5dfc4 <my_re_op_compile@@Base+0x1bc0>
   5dc80:	str	wzr, [sp, #452]
   5dc84:	str	wzr, [sp, #456]
   5dc88:	str	xzr, [sp, #616]
   5dc8c:	str	wzr, [sp, #580]
   5dc90:	ldr	x0, [sp, #256]
   5dc94:	ldrb	w1, [x0]
   5dc98:	cmp	w1, #0x5e
   5dc9c:	csetm	w1, eq  // eq = none
   5dca0:	str	w1, [sp, #492]
   5dca4:	str	wzr, [sp, #592]
   5dca8:	str	x0, [sp, #344]
   5dcac:	str	x0, [sp, #416]
   5dcb0:	str	x0, [sp, #408]
   5dcb4:	str	x0, [sp, #384]
   5dcb8:	ldr	x1, [sp, #248]
   5dcbc:	add	x0, x0, x1
   5dcc0:	str	x0, [sp, #392]
   5dcc4:	str	x0, [sp, #352]
   5dcc8:	str	wzr, [sp, #488]
   5dccc:	str	xzr, [sp, #424]
   5dcd0:	str	xzr, [sp, #520]
   5dcd4:	str	xzr, [sp, #552]
   5dcd8:	str	xzr, [sp, #568]
   5dcdc:	str	wzr, [sp, #576]
   5dce0:	str	wzr, [sp, #560]
   5dce4:	str	wzr, [sp, #608]
   5dce8:	mov	x2, x27
   5dcec:	mov	x1, x26
   5dcf0:	mov	x0, x28
   5dcf4:	bl	26d24 <my_regexec@@Base+0x3830>
   5dcf8:	ldr	w0, [x28, #2368]
   5dcfc:	tbnz	w0, #20, 5dd08 <my_re_op_compile@@Base+0x1904>
   5dd00:	ldr	x0, [sp, #280]
   5dd04:	tbz	w0, #0, 5dd20 <my_re_op_compile@@Base+0x191c>
   5dd08:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5dd0c:	add	x1, x1, #0xec8
   5dd10:	mov	x0, x28
   5dd14:	bl	50e0 <Perl_re_printf@plt>
   5dd18:	str	wzr, [sp, #680]
   5dd1c:	str	xzr, [sp, #672]
   5dd20:	ldr	x0, [sp, #464]
   5dd24:	cbnz	x0, 5dd40 <my_re_op_compile@@Base+0x193c>
   5dd28:	ldr	x0, [sp, #392]
   5dd2c:	ldr	x1, [sp, #384]
   5dd30:	sub	x0, x0, x1
   5dd34:	add	x0, x0, #0x3
   5dd38:	lsr	x0, x0, #2
   5dd3c:	str	x0, [sp, #464]
   5dd40:	ldr	x0, [sp, #464]
   5dd44:	add	x0, x0, #0x30
   5dd48:	bl	5250 <Perl_safesysmalloc@plt>
   5dd4c:	mov	x19, x0
   5dd50:	str	x0, [sp, #376]
   5dd54:	cbz	x0, 5dfe8 <my_re_op_compile@@Base+0x1be4>
   5dd58:	ldr	x2, [sp, #464]
   5dd5c:	add	x2, x2, #0x30
   5dd60:	mov	w1, #0x0                   	// #0
   5dd64:	bl	51f0 <memset@plt>
   5dd68:	ldr	x0, [sp, #368]
   5dd6c:	str	x19, [x0, #104]
   5dd70:	str	xzr, [sp, #464]
   5dd74:	ldr	x1, [sp, #160]
   5dd78:	str	x1, [x0, #32]
   5dd7c:	ldr	x0, [sp, #368]
   5dd80:	str	w24, [x0, #56]
   5dd84:	ldrh	w1, [x0, #184]
   5dd88:	bfi	w1, w25, #4, #9
   5dd8c:	strh	w1, [x0, #184]
   5dd90:	ldr	x0, [sp, #136]
   5dd94:	tbz	w0, #30, 5ddbc <my_re_op_compile@@Base+0x19b8>
   5dd98:	ldr	x0, [sp, #376]
   5dd9c:	ldr	x1, [sp, #600]
   5dda0:	str	x1, [x0, #32]
   5dda4:	ldr	x0, [sp, #376]
   5dda8:	ldr	x0, [x0, #32]
   5ddac:	cbz	x0, 5ddbc <my_re_op_compile@@Base+0x19b8>
   5ddb0:	ldr	w1, [x0]
   5ddb4:	add	w1, w1, #0x1
   5ddb8:	str	w1, [x0]
   5ddbc:	ldr	x0, [sp, #368]
   5ddc0:	str	wzr, [x0, #100]
   5ddc4:	str	w24, [sp, #336]
   5ddc8:	ldr	x0, [sp, #256]
   5ddcc:	str	x0, [sp, #400]
   5ddd0:	ldr	x0, [sp, #392]
   5ddd4:	ldrb	w0, [x0]
   5ddd8:	cbnz	w0, 5e07c <my_re_op_compile@@Base+0x1c78>
   5dddc:	str	wzr, [sp, #448]
   5dde0:	mov	w0, #0x1                   	// #1
   5dde4:	str	w0, [sp, #480]
   5dde8:	str	wzr, [sp, #512]
   5ddec:	ldr	x0, [sp, #376]
   5ddf0:	add	x1, x0, #0x28
   5ddf4:	str	x1, [sp, #432]
   5ddf8:	str	wzr, [sp, #608]
   5ddfc:	mov	w1, #0xffffff9c            	// #-100
   5de00:	strb	w1, [x0, #40]
   5de04:	mov	x4, #0x1                   	// #1
   5de08:	str	x4, [sp, #440]
   5de0c:	add	x3, sp, #0xf4
   5de10:	mov	w2, #0x0                   	// #0
   5de14:	mov	x1, x26
   5de18:	mov	x0, x28
   5de1c:	bl	3c268 <my_regprop@@Base+0x1fa4>
   5de20:	cbz	x0, 5e0b0 <my_re_op_compile@@Base+0x1cac>
   5de24:	ldr	w0, [sp, #484]
   5de28:	tbnz	w0, #31, 5e0a0 <my_re_op_compile@@Base+0x1c9c>
   5de2c:	ldr	w0, [sp, #480]
   5de30:	str	w0, [sp, #484]
   5de34:	ldr	w0, [sp, #244]
   5de38:	and	w1, w0, #0x20
   5de3c:	tbnz	w0, #5, 5e0b8 <my_re_op_compile@@Base+0x1cb4>
   5de40:	str	w1, [sp, #232]
   5de44:	mov	x2, x27
   5de48:	add	x1, sp, #0x150
   5de4c:	mov	x0, x28
   5de50:	bl	26d24 <my_regexec@@Base+0x3830>
   5de54:	ldr	w0, [sp, #484]
   5de58:	sub	w0, w0, #0x1
   5de5c:	ldr	x1, [sp, #368]
   5de60:	str	w0, [x1, #96]
   5de64:	ldr	x0, [sp, #424]
   5de68:	cmp	x0, #0xf
   5de6c:	b.le	5de78 <my_re_op_compile@@Base+0x1a74>
   5de70:	mov	x0, #0xf                   	// #15
   5de74:	str	x0, [sp, #424]
   5de78:	ldr	w0, [x28, #2368]
   5de7c:	tbnz	w0, #20, 5de88 <my_re_op_compile@@Base+0x1a84>
   5de80:	ldr	x0, [sp, #280]
   5de84:	tbz	w0, #0, 5dea4 <my_re_op_compile@@Base+0x1aa0>
   5de88:	ldr	x2, [sp, #464]
   5de8c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5de90:	add	x1, x1, #0xfc8
   5de94:	mov	x0, x28
   5de98:	bl	50e0 <Perl_re_printf@plt>
   5de9c:	str	wzr, [sp, #680]
   5dea0:	str	xzr, [sp, #672]
   5dea4:	ldr	w0, [x28, #2368]
   5dea8:	tbnz	w0, #20, 5deb4 <my_re_op_compile@@Base+0x1ab0>
   5deac:	ldr	x0, [sp, #280]
   5deb0:	tbz	w0, #17, 5def0 <my_re_op_compile@@Base+0x1aec>
   5deb4:	ldr	x0, [sp, #376]
   5deb8:	ldr	x1, [x0, #8]
   5debc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5dec0:	add	x0, x0, #0xbc8
   5dec4:	adrp	x2, 7c000 <boot_re@@Base+0x1a41c>
   5dec8:	add	x2, x2, #0xbc0
   5decc:	cmp	x1, #0x0
   5ded0:	ldr	w3, [x1]
   5ded4:	lsl	w3, w3, #1
   5ded8:	add	w3, w3, #0x1
   5dedc:	csel	x2, x2, x0, ne  // ne = any
   5dee0:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5dee4:	add	x1, x1, #0xfe8
   5dee8:	mov	x0, x28
   5deec:	bl	50e0 <Perl_re_printf@plt>
   5def0:	ldr	w0, [x28, #2368]
   5def4:	tbnz	w0, #20, 5df00 <my_re_op_compile@@Base+0x1afc>
   5def8:	ldr	x0, [sp, #280]
   5defc:	tbz	w0, #17, 5e634 <my_re_op_compile@@Base+0x2230>
   5df00:	ldr	x0, [sp, #376]
   5df04:	ldr	x0, [x0, #8]
   5df08:	cbz	x0, 5e634 <my_re_op_compile@@Base+0x2230>
   5df0c:	ldr	w21, [x0]
   5df10:	str	xzr, [sp, #288]
   5df14:	ldr	x0, [x28, #224]
   5df18:	cbz	x0, 5df80 <my_re_op_compile@@Base+0x1b7c>
   5df1c:	mov	w2, #0x1                   	// #1
   5df20:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5df24:	add	x1, x1, #0x608
   5df28:	mov	x0, x28
   5df2c:	bl	54f0 <Perl_get_sv@plt>
   5df30:	mov	x19, x0
   5df34:	cbz	x0, 5df80 <my_re_op_compile@@Base+0x1b7c>
   5df38:	ldr	w0, [x0, #12]
   5df3c:	tbz	w0, #8, 5e558 <my_re_op_compile@@Base+0x2154>
   5df40:	ldr	w0, [x19, #12]
   5df44:	and	w1, w0, #0x3fff00
   5df48:	and	w1, w1, #0xffe001ff
   5df4c:	cmp	w1, #0x100
   5df50:	b.ne	5e5c4 <my_re_op_compile@@Base+0x21c0>  // b.any
   5df54:	and	w2, w0, #0xf
   5df58:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5df5c:	ldr	x1, [x1, #3712]
   5df60:	ldrb	w1, [x1, w2, uxtw]
   5df64:	cbz	w1, 5e56c <my_re_op_compile@@Base+0x2168>
   5df68:	and	w1, w0, #0xc000
   5df6c:	cmp	w1, #0x8, lsl #12
   5df70:	b.eq	5e590 <my_re_op_compile@@Base+0x218c>  // b.none
   5df74:	ldr	x0, [x19]
   5df78:	ldr	x0, [x0, #32]
   5df7c:	str	x0, [sp, #288]
   5df80:	ldr	x0, [sp, #376]
   5df84:	ldr	x0, [x0, #8]
   5df88:	ldr	w2, [x0]
   5df8c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5df90:	add	x1, x1, #0x10
   5df94:	mov	x0, x28
   5df98:	bl	50e0 <Perl_re_printf@plt>
   5df9c:	cbz	x21, 5e624 <my_re_op_compile@@Base+0x2220>
   5dfa0:	mov	x20, #0x4                   	// #4
   5dfa4:	mov	x19, #0x1                   	// #1
   5dfa8:	adrp	x22, 7d000 <boot_re@@Base+0x1b41c>
   5dfac:	add	x22, x22, #0x28
   5dfb0:	b	5e604 <my_re_op_compile@@Base+0x2200>
   5dfb4:	mov	x1, x22
   5dfb8:	mov	x0, x28
   5dfbc:	bl	5860 <Perl_sv_free2@plt>
   5dfc0:	b	5dc78 <my_re_op_compile@@Base+0x1874>
   5dfc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5dfc8:	add	x3, x3, #0xc10
   5dfcc:	add	x3, x3, #0xa08
   5dfd0:	mov	w2, #0x1dae                	// #7598
   5dfd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5dfd8:	add	x1, x1, #0xfb8
   5dfdc:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5dfe0:	add	x0, x0, #0xdd8
   5dfe4:	bl	58e0 <__assert_fail@plt>
   5dfe8:	ldr	x19, [sp, #352]
   5dfec:	ldr	x0, [sp, #344]
   5dff0:	sub	x19, x19, x0
   5dff4:	ldr	x1, [sp, #360]
   5dff8:	cbz	x1, 5e008 <my_re_op_compile@@Base+0x1c04>
   5dffc:	mov	w2, #0xb                   	// #11
   5e000:	mov	x0, x28
   5e004:	bl	54b0 <Perl_save_pushptr@plt>
   5e008:	ldr	x1, [sp, #496]
   5e00c:	cbz	x1, 5e01c <my_re_op_compile@@Base+0x1c18>
   5e010:	mov	w2, #0xa                   	// #10
   5e014:	mov	x0, x28
   5e018:	bl	54b0 <Perl_save_pushptr@plt>
   5e01c:	ldr	x1, [sp, #504]
   5e020:	cbz	x1, 5e030 <my_re_op_compile@@Base+0x1c2c>
   5e024:	mov	w2, #0xa                   	// #10
   5e028:	mov	x0, x28
   5e02c:	bl	54b0 <Perl_save_pushptr@plt>
   5e030:	cmp	x19, #0x7f
   5e034:	b.le	5e070 <my_re_op_compile@@Base+0x1c6c>
   5e038:	mov	x19, #0x75                  	// #117
   5e03c:	adrp	x6, 75000 <boot_re@@Base+0x1341c>
   5e040:	add	x6, x6, #0xfe0
   5e044:	ldr	w0, [sp, #528]
   5e048:	cmp	w0, #0x0
   5e04c:	ldr	x5, [sp, #344]
   5e050:	mov	x4, x19
   5e054:	cset	w3, ne  // ne = any
   5e058:	adrp	x2, 76000 <boot_re@@Base+0x1441c>
   5e05c:	add	x2, x2, #0xe30
   5e060:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   5e064:	add	x1, x1, #0x50
   5e068:	mov	x0, x28
   5e06c:	bl	5420 <Perl_croak@plt>
   5e070:	adrp	x6, 7d000 <boot_re@@Base+0x1b41c>
   5e074:	add	x6, x6, #0x20
   5e078:	b	5e044 <my_re_op_compile@@Base+0x1c40>
   5e07c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e080:	add	x3, x3, #0xc10
   5e084:	add	x3, x3, #0xa08
   5e088:	mov	w2, #0x1e0a                	// #7690
   5e08c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e090:	add	x1, x1, #0xfb8
   5e094:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   5e098:	add	x0, x0, #0x770
   5e09c:	bl	58e0 <__assert_fail@plt>
   5e0a0:	ldr	w0, [sp, #244]
   5e0a4:	orr	w0, w0, #0x20
   5e0a8:	str	w0, [sp, #244]
   5e0ac:	b	5de2c <my_re_op_compile@@Base+0x1a28>
   5e0b0:	ldr	w0, [sp, #244]
   5e0b4:	tbz	w0, #5, 5e10c <my_re_op_compile@@Base+0x1d08>
   5e0b8:	tbz	w0, #6, 5e230 <my_re_op_compile@@Base+0x1e2c>
   5e0bc:	ldr	x3, [sp, #472]
   5e0c0:	cbnz	x3, 5e144 <my_re_op_compile@@Base+0x1d40>
   5e0c4:	ldr	x0, [sp, #600]
   5e0c8:	mov	w4, #0x0                   	// #0
   5e0cc:	cbz	x0, 5e0d4 <my_re_op_compile@@Base+0x1cd0>
   5e0d0:	ldr	w4, [x0, #4]
   5e0d4:	add	x3, sp, #0xf8
   5e0d8:	add	x2, sp, #0x100
   5e0dc:	mov	x1, x26
   5e0e0:	mov	x0, x28
   5e0e4:	bl	30684 <Perl_re_printf@@Base+0x7a8>
   5e0e8:	ldr	w0, [x28, #2368]
   5e0ec:	tbnz	w0, #20, 5e0f8 <my_re_op_compile@@Base+0x1cf4>
   5e0f0:	ldr	x0, [sp, #280]
   5e0f4:	tbz	w0, #0, 5e250 <my_re_op_compile@@Base+0x1e4c>
   5e0f8:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5e0fc:	add	x1, x1, #0xf28
   5e100:	mov	x0, x28
   5e104:	bl	50e0 <Perl_re_printf@plt>
   5e108:	b	5e250 <my_re_op_compile@@Base+0x1e4c>
   5e10c:	ldr	w2, [x27, #8]
   5e110:	cmp	w2, #0x1
   5e114:	b.ls	5e134 <my_re_op_compile@@Base+0x1d30>  // b.plast
   5e118:	sub	w2, w2, #0x1
   5e11c:	str	w2, [x27, #8]
   5e120:	ldrsw	x2, [sp, #244]
   5e124:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5e128:	add	x1, x1, #0xee8
   5e12c:	mov	x0, x28
   5e130:	bl	5420 <Perl_croak@plt>
   5e134:	mov	x1, x27
   5e138:	mov	x0, x28
   5e13c:	bl	5860 <Perl_sv_free2@plt>
   5e140:	b	5e120 <my_re_op_compile@@Base+0x1d1c>
   5e144:	ldr	x0, [sp, #256]
   5e148:	add	x5, x0, x3
   5e14c:	cbz	x0, 5e204 <my_re_op_compile@@Base+0x1e00>
   5e150:	and	x1, x0, #0x7
   5e154:	orr	x2, x0, x0, lsr #1
   5e158:	ubfx	x4, x0, #2, #1
   5e15c:	orr	x2, x2, x4
   5e160:	and	x2, x2, #0x1
   5e164:	add	x2, x2, #0x1
   5e168:	lsl	x2, x2, #3
   5e16c:	sub	x2, x2, x1
   5e170:	cmp	x3, x2
   5e174:	b.cc	5e228 <my_re_op_compile@@Base+0x1e24>  // b.lo, b.ul, b.last
   5e178:	cbz	x1, 5e190 <my_re_op_compile@@Base+0x1d8c>
   5e17c:	mov	x1, #0x0                   	// #0
   5e180:	ldrsb	x2, [x0], #1
   5e184:	add	x1, x1, x2, lsr #63
   5e188:	tst	x0, #0x7
   5e18c:	b.ne	5e180 <my_re_op_compile@@Base+0x1d7c>  // b.any
   5e190:	add	x4, x0, #0x8
   5e194:	mov	x6, #0x101010101010101     	// #72340172838076673
   5e198:	ldur	x2, [x4, #-8]
   5e19c:	lsr	x2, x2, #7
   5e1a0:	and	x2, x2, #0x101010101010101
   5e1a4:	mul	x2, x2, x6
   5e1a8:	add	x1, x1, x2, lsr #56
   5e1ac:	add	x4, x4, #0x8
   5e1b0:	cmp	x5, x4
   5e1b4:	b.cs	5e198 <my_re_op_compile@@Base+0x1d94>  // b.hs, b.nlast
   5e1b8:	sub	x2, x5, #0x8
   5e1bc:	sub	x2, x2, x0
   5e1c0:	and	x2, x2, #0xfffffffffffffff8
   5e1c4:	add	x2, x2, #0x8
   5e1c8:	add	x6, x0, #0x9
   5e1cc:	add	x4, x5, #0x1
   5e1d0:	cmp	x6, x4
   5e1d4:	mov	x4, #0x8                   	// #8
   5e1d8:	csel	x2, x2, x4, ls  // ls = plast
   5e1dc:	add	x0, x0, x2
   5e1e0:	cmp	x0, x5
   5e1e4:	b.cs	5e1f8 <my_re_op_compile@@Base+0x1df4>  // b.hs, b.nlast
   5e1e8:	ldrsb	x2, [x0], #1
   5e1ec:	add	x1, x1, x2, lsr #63
   5e1f0:	cmp	x5, x0
   5e1f4:	b.ne	5e1e8 <my_re_op_compile@@Base+0x1de4>  // b.any
   5e1f8:	add	x1, x3, x1
   5e1fc:	str	x1, [sp, #472]
   5e200:	b	5e0c4 <my_re_op_compile@@Base+0x1cc0>
   5e204:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e208:	add	x3, x3, #0xc10
   5e20c:	add	x3, x3, #0x520
   5e210:	mov	w2, #0x289                 	// #649
   5e214:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   5e218:	add	x1, x1, #0xc80
   5e21c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5e220:	add	x0, x0, #0xce8
   5e224:	bl	58e0 <__assert_fail@plt>
   5e228:	mov	x1, #0x0                   	// #0
   5e22c:	b	5e1e0 <my_re_op_compile@@Base+0x1ddc>
   5e230:	ldr	w0, [x28, #2368]
   5e234:	tbnz	w0, #20, 5e240 <my_re_op_compile@@Base+0x1e3c>
   5e238:	ldr	x0, [sp, #280]
   5e23c:	tbz	w0, #0, 5e250 <my_re_op_compile@@Base+0x1e4c>
   5e240:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5e244:	add	x1, x1, #0xf50
   5e248:	mov	x0, x28
   5e24c:	bl	50e0 <Perl_re_printf@plt>
   5e250:	ldr	w1, [sp, #484]
   5e254:	cmp	w1, #0x0
   5e258:	b.le	5e524 <my_re_op_compile@@Base+0x2120>
   5e25c:	sbfiz	x1, x1, #3, #32
   5e260:	ldr	x0, [sp, #496]
   5e264:	bl	5670 <Perl_safesysrealloc@plt>
   5e268:	str	x0, [sp, #496]
   5e26c:	cbz	x0, 5e4dc <my_re_op_compile@@Base+0x20d8>
   5e270:	ldrsw	x2, [sp, #484]
   5e274:	lsl	x2, x2, #3
   5e278:	mov	w1, #0x0                   	// #0
   5e27c:	bl	51f0 <memset@plt>
   5e280:	ldr	x0, [sp, #496]
   5e284:	mov	x1, #0x1                   	// #1
   5e288:	str	x1, [x0]
   5e28c:	ldrsw	x1, [sp, #484]
   5e290:	lsl	x1, x1, #3
   5e294:	ldr	x0, [sp, #504]
   5e298:	bl	5670 <Perl_safesysrealloc@plt>
   5e29c:	str	x0, [sp, #504]
   5e2a0:	cbz	x0, 5e500 <my_re_op_compile@@Base+0x20fc>
   5e2a4:	ldrsw	x2, [sp, #484]
   5e2a8:	lsl	x2, x2, #3
   5e2ac:	mov	w1, #0x0                   	// #0
   5e2b0:	bl	51f0 <memset@plt>
   5e2b4:	ldr	x1, [sp, #360]
   5e2b8:	ldr	w2, [x1, #8]
   5e2bc:	cmp	w2, #0x1
   5e2c0:	b.ls	5e54c <my_re_op_compile@@Base+0x2148>  // b.plast
   5e2c4:	sub	w2, w2, #0x1
   5e2c8:	str	w2, [x1, #8]
   5e2cc:	ldr	x3, [sp, #152]
   5e2d0:	cbz	x3, 5e2fc <my_re_op_compile@@Base+0x1ef8>
   5e2d4:	ldrb	w0, [sp, #243]
   5e2d8:	cbnz	w0, 5e2fc <my_re_op_compile@@Base+0x1ef8>
   5e2dc:	ldr	w1, [x3, #12]
   5e2e0:	eor	x0, x1, #0x20000000
   5e2e4:	ldr	w2, [sp, #528]
   5e2e8:	cmp	w2, #0x0
   5e2ec:	cset	w2, ne  // ne = any
   5e2f0:	ubfx	w0, w0, #29, #1
   5e2f4:	cmp	w2, w0
   5e2f8:	b.ne	5cf68 <my_re_op_compile@@Base+0xb64>  // b.any
   5e2fc:	mov	w1, #0x8                   	// #8
   5e300:	mov	x0, x28
   5e304:	bl	57e0 <Perl_newSV_type@plt>
   5e308:	mov	x27, x0
   5e30c:	str	x0, [sp, #360]
   5e310:	ldr	x1, [x0]
   5e314:	ldr	w0, [x0, #12]
   5e318:	and	w2, w0, #0xff
   5e31c:	cmp	w2, #0x8
   5e320:	b.eq	5e34c <my_re_op_compile@@Base+0x1f48>  // b.none
   5e324:	mov	w3, #0x80ff                	// #33023
   5e328:	movk	w3, #0x100, lsl #16
   5e32c:	and	w0, w0, w3
   5e330:	mov	w3, #0xa                   	// #10
   5e334:	movk	w3, #0x100, lsl #16
   5e338:	cmp	w0, w3
   5e33c:	b.ne	5d1b0 <my_re_op_compile@@Base+0xdac>  // b.any
   5e340:	cmp	w2, #0xa
   5e344:	b.ne	5e34c <my_re_op_compile@@Base+0x1f48>  // b.any
   5e348:	ldr	x1, [x1, #24]
   5e34c:	str	x1, [sp, #368]
   5e350:	cbz	x1, 5d1d4 <my_re_op_compile@@Base+0xdd0>
   5e354:	ldr	w0, [sp, #528]
   5e358:	ldr	w1, [sp, #536]
   5e35c:	orr	w0, w0, w1
   5e360:	mov	w24, w25
   5e364:	cbz	w0, 5e380 <my_re_op_compile@@Base+0x1f7c>
   5e368:	ldr	w0, [sp, #168]
   5e36c:	cbnz	w0, 5e380 <my_re_op_compile@@Base+0x1f7c>
   5e370:	and	w24, w25, #0xfffffc7f
   5e374:	orr	w24, w24, #0x100
   5e378:	mov	w0, #0x1                   	// #1
   5e37c:	str	w0, [sp, #536]
   5e380:	ldr	w0, [sp, #136]
   5e384:	str	w0, [sp, #340]
   5e388:	ldr	w0, [sp, #144]
   5e38c:	cbz	w0, 5dc78 <my_re_op_compile@@Base+0x1874>
   5e390:	ldrb	w0, [x28, #184]
   5e394:	cbnz	w0, 5d288 <my_re_op_compile@@Base+0xe84>
   5e398:	ldrb	w0, [x28, #185]
   5e39c:	cbnz	w0, 5d264 <my_re_op_compile@@Base+0xe60>
   5e3a0:	ldr	x19, [sp, #256]
   5e3a4:	ldr	x20, [sp, #248]
   5e3a8:	str	xzr, [sp, #320]
   5e3ac:	ldr	x0, [x28, #224]
   5e3b0:	cbz	x0, 5e418 <my_re_op_compile@@Base+0x2014>
   5e3b4:	mov	w2, #0x1                   	// #1
   5e3b8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5e3bc:	add	x1, x1, #0x608
   5e3c0:	mov	x0, x28
   5e3c4:	bl	54f0 <Perl_get_sv@plt>
   5e3c8:	mov	x21, x0
   5e3cc:	cbz	x0, 5e418 <my_re_op_compile@@Base+0x2014>
   5e3d0:	ldr	w0, [x0, #12]
   5e3d4:	tbz	w0, #8, 5d2a0 <my_re_op_compile@@Base+0xe9c>
   5e3d8:	ldr	w1, [x21, #12]
   5e3dc:	and	w0, w1, #0x3fff00
   5e3e0:	and	w0, w0, #0xffe001ff
   5e3e4:	cmp	w0, #0x100
   5e3e8:	b.ne	5d30c <my_re_op_compile@@Base+0xf08>  // b.any
   5e3ec:	and	w2, w1, #0xf
   5e3f0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5e3f4:	ldr	x0, [x0, #3712]
   5e3f8:	ldrb	w0, [x0, w2, uxtw]
   5e3fc:	cbz	w0, 5d2b4 <my_re_op_compile@@Base+0xeb0>
   5e400:	and	w0, w1, #0xc000
   5e404:	cmp	w0, #0x8, lsl #12
   5e408:	b.eq	5d2d8 <my_re_op_compile@@Base+0xed4>  // b.none
   5e40c:	ldr	x0, [x21]
   5e410:	ldr	x0, [x0, #32]
   5e414:	str	x0, [sp, #320]
   5e418:	ldr	x22, [sp, #664]
   5e41c:	cbz	x22, 5d344 <my_re_op_compile@@Base+0xf40>
   5e420:	str	xzr, [sp, #664]
   5e424:	ldr	w0, [sp, #528]
   5e428:	cbz	w0, 5d320 <my_re_op_compile@@Base+0xf1c>
   5e42c:	ldr	w0, [x22, #12]
   5e430:	tbz	w0, #29, 5d320 <my_re_op_compile@@Base+0xf1c>
   5e434:	ldr	x1, [x22]
   5e438:	ldr	w0, [x22, #12]
   5e43c:	and	w2, w0, #0xff
   5e440:	cmp	w2, #0x8
   5e444:	b.eq	5e470 <my_re_op_compile@@Base+0x206c>  // b.none
   5e448:	mov	w3, #0x80ff                	// #33023
   5e44c:	movk	w3, #0x100, lsl #16
   5e450:	and	w0, w0, w3
   5e454:	mov	w3, #0xa                   	// #10
   5e458:	movk	w3, #0x100, lsl #16
   5e45c:	cmp	w0, w3
   5e460:	b.ne	5da14 <my_re_op_compile@@Base+0x1610>  // b.any
   5e464:	cmp	w2, #0xa
   5e468:	b.ne	5e470 <my_re_op_compile@@Base+0x206c>  // b.any
   5e46c:	ldr	x1, [x1, #24]
   5e470:	ldr	x23, [x1, #104]
   5e474:	ldr	x0, [x23, #32]
   5e478:	cbz	x0, 5da38 <my_re_op_compile@@Base+0x1634>
   5e47c:	ldr	w0, [x0, #4]
   5e480:	cbz	w0, 5da38 <my_re_op_compile@@Base+0x1634>
   5e484:	ldr	x0, [sp, #600]
   5e488:	cbz	x0, 5da60 <my_re_op_compile@@Base+0x165c>
   5e48c:	ldr	x0, [sp, #600]
   5e490:	ldr	w20, [x0, #4]
   5e494:	ldr	x0, [x23, #32]
   5e498:	ldr	w21, [x0, #4]
   5e49c:	add	w0, w20, w21
   5e4a0:	sbfiz	x0, x0, #5, #32
   5e4a4:	bl	5250 <Perl_safesysmalloc@plt>
   5e4a8:	mov	x1, x0
   5e4ac:	str	x0, [sp, #176]
   5e4b0:	cmp	w20, #0x0
   5e4b4:	cset	w7, gt
   5e4b8:	cmp	w21, #0x0
   5e4bc:	cset	w0, gt
   5e4c0:	orr	w7, w7, w0
   5e4c4:	cbz	w7, 5dc3c <my_re_op_compile@@Base+0x1838>
   5e4c8:	mov	w3, #0x0                   	// #0
   5e4cc:	mov	w2, #0x0                   	// #0
   5e4d0:	mov	w9, #0x0                   	// #0
   5e4d4:	mov	x8, x22
   5e4d8:	b	5dbe4 <my_re_op_compile@@Base+0x17e0>
   5e4dc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e4e0:	add	x3, x3, #0xc10
   5e4e4:	add	x3, x3, #0xa08
   5e4e8:	mov	w2, #0x1e47                	// #7751
   5e4ec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e4f0:	add	x1, x1, #0xfb8
   5e4f4:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5e4f8:	add	x0, x0, #0xf68
   5e4fc:	bl	58e0 <__assert_fail@plt>
   5e500:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e504:	add	x3, x3, #0xc10
   5e508:	add	x3, x3, #0xa08
   5e50c:	mov	w2, #0x1e4b                	// #7755
   5e510:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e514:	add	x1, x1, #0xfb8
   5e518:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   5e51c:	add	x0, x0, #0xf98
   5e520:	bl	58e0 <__assert_fail@plt>
   5e524:	str	wzr, [sp, #484]
   5e528:	ldr	x0, [sp, #496]
   5e52c:	cbz	x0, 5e538 <my_re_op_compile@@Base+0x2134>
   5e530:	bl	5650 <Perl_safesysfree@plt>
   5e534:	str	xzr, [sp, #496]
   5e538:	ldr	x0, [sp, #504]
   5e53c:	cbz	x0, 5e2b4 <my_re_op_compile@@Base+0x1eb0>
   5e540:	bl	5650 <Perl_safesysfree@plt>
   5e544:	str	xzr, [sp, #504]
   5e548:	b	5e2b4 <my_re_op_compile@@Base+0x1eb0>
   5e54c:	mov	x0, x28
   5e550:	bl	5860 <Perl_sv_free2@plt>
   5e554:	b	5e2cc <my_re_op_compile@@Base+0x1ec8>
   5e558:	mov	x2, #0xff08                	// #65288
   5e55c:	mov	x1, x19
   5e560:	mov	x0, x28
   5e564:	bl	5310 <Perl_sv_setuv@plt>
   5e568:	b	5df40 <my_re_op_compile@@Base+0x1b3c>
   5e56c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e570:	add	x3, x3, #0xc10
   5e574:	add	x3, x3, #0xa08
   5e578:	mov	w2, #0x1e7c                	// #7804
   5e57c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e580:	add	x1, x1, #0xfb8
   5e584:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5e588:	add	x0, x0, #0xda0
   5e58c:	bl	58e0 <__assert_fail@plt>
   5e590:	and	w0, w0, #0xff
   5e594:	sub	w0, w0, #0x9
   5e598:	cmp	w0, #0x1
   5e59c:	b.hi	5df74 <my_re_op_compile@@Base+0x1b70>  // b.pmore
   5e5a0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e5a4:	add	x3, x3, #0xc10
   5e5a8:	add	x3, x3, #0xa08
   5e5ac:	mov	w2, #0x1e7c                	// #7804
   5e5b0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e5b4:	add	x1, x1, #0xfb8
   5e5b8:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5e5bc:	add	x0, x0, #0xdd0
   5e5c0:	bl	58e0 <__assert_fail@plt>
   5e5c4:	mov	w2, #0x2                   	// #2
   5e5c8:	mov	x1, x19
   5e5cc:	mov	x0, x28
   5e5d0:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5e5d4:	b	5df7c <my_re_op_compile@@Base+0x1b78>
   5e5d8:	ldr	w4, [x0, x1]
   5e5dc:	mov	w3, w3
   5e5e0:	mov	x2, x19
   5e5e4:	mov	x1, x22
   5e5e8:	mov	x0, x28
   5e5ec:	bl	50e0 <Perl_re_printf@plt>
   5e5f0:	add	x0, x19, #0x1
   5e5f4:	add	x20, x20, #0x8
   5e5f8:	cmp	x21, x19
   5e5fc:	b.eq	5e624 <my_re_op_compile@@Base+0x2220>  // b.none
   5e600:	mov	x19, x0
   5e604:	ldr	x0, [sp, #376]
   5e608:	ldr	x0, [x0, #8]
   5e60c:	lsl	x1, x19, #3
   5e610:	ldr	w3, [x0, x20]
   5e614:	cbnz	w3, 5e5d8 <my_re_op_compile@@Base+0x21d4>
   5e618:	ldr	w2, [x0, x1]
   5e61c:	cbz	w2, 5e5f0 <my_re_op_compile@@Base+0x21ec>
   5e620:	b	5e5d8 <my_re_op_compile@@Base+0x21d4>
   5e624:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5e628:	add	x1, x1, #0x8d8
   5e62c:	mov	x0, x28
   5e630:	bl	50e0 <Perl_re_printf@plt>
   5e634:	ldr	w0, [x28, #2368]
   5e638:	tbnz	w0, #20, 5e644 <my_re_op_compile@@Base+0x2240>
   5e63c:	ldr	x0, [sp, #280]
   5e640:	tbz	w0, #1, 5e654 <my_re_op_compile@@Base+0x2250>
   5e644:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5e648:	add	x1, x1, #0x38
   5e64c:	mov	x0, x28
   5e650:	bl	50e0 <Perl_re_printf@plt>
   5e654:	ldr	x19, [sp, #368]
   5e658:	mov	x0, #0x80                  	// #128
   5e65c:	bl	5250 <Perl_safesysmalloc@plt>
   5e660:	str	x0, [x19, #88]
   5e664:	ldr	w0, [sp, #560]
   5e668:	cbnz	w0, 5e6b0 <my_re_op_compile@@Base+0x22ac>
   5e66c:	ldr	w0, [sp, #456]
   5e670:	tbnz	w0, #5, 5e6d0 <my_re_op_compile@@Base+0x22cc>
   5e674:	str	xzr, [sp, #272]
   5e678:	ldr	x0, [sp, #368]
   5e67c:	str	xzr, [x0, #64]
   5e680:	str	wzr, [sp, #696]
   5e684:	ldr	x0, [x0, #88]
   5e688:	ldr	w23, [sp, #232]
   5e68c:	cbz	x0, 5e704 <my_re_op_compile@@Base+0x2300>
   5e690:	add	x1, sp, #0x150
   5e694:	str	x1, [sp, #144]
   5e698:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5e69c:	add	x1, x1, #0xc10
   5e6a0:	add	x25, x1, #0x1e8
   5e6a4:	mov	w26, w23
   5e6a8:	str	x27, [sp, #168]
   5e6ac:	b	5fc94 <my_re_op_compile@@Base+0x3890>
   5e6b0:	sbfiz	x0, x0, #3, #32
   5e6b4:	bl	5250 <Perl_safesysmalloc@plt>
   5e6b8:	mov	x1, x0
   5e6bc:	str	x0, [sp, #552]
   5e6c0:	mov	w2, #0xa                   	// #10
   5e6c4:	mov	x0, x28
   5e6c8:	bl	54b0 <Perl_save_pushptr@plt>
   5e6cc:	b	5e66c <my_re_op_compile@@Base+0x2268>
   5e6d0:	ldr	w1, [sp, #484]
   5e6d4:	tst	x1, #0x7
   5e6d8:	asr	w0, w1, #3
   5e6dc:	cinc	w0, w0, ne  // ne = any
   5e6e0:	str	w0, [sp, #576]
   5e6e4:	mul	w0, w1, w0
   5e6e8:	bl	5250 <Perl_safesysmalloc@plt>
   5e6ec:	mov	x1, x0
   5e6f0:	str	x0, [sp, #568]
   5e6f4:	mov	w2, #0xa                   	// #10
   5e6f8:	mov	x0, x28
   5e6fc:	bl	54b0 <Perl_save_pushptr@plt>
   5e700:	b	5e674 <my_re_op_compile@@Base+0x2270>
   5e704:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5e708:	add	x3, x3, #0xc10
   5e70c:	add	x3, x3, #0xa08
   5e710:	mov	w2, #0x1ea6                	// #7846
   5e714:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5e718:	add	x1, x1, #0xfb8
   5e71c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5e720:	add	x0, x0, #0x60
   5e724:	bl	58e0 <__assert_fail@plt>
   5e728:	ldr	w19, [sp, #456]
   5e72c:	ldr	w0, [x28, #2368]
   5e730:	tbnz	w0, #20, 5e73c <my_re_op_compile@@Base+0x2338>
   5e734:	ldr	x0, [sp, #280]
   5e738:	tbz	w0, #1, 5e74c <my_re_op_compile@@Base+0x2348>
   5e73c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5e740:	add	x1, x1, #0x90
   5e744:	mov	x0, x28
   5e748:	bl	50e0 <Perl_re_printf@plt>
   5e74c:	mov	x2, #0x188                 	// #392
   5e750:	add	x1, sp, #0x2d8
   5e754:	ldr	x0, [sp, #144]
   5e758:	bl	4e60 <memcpy@plt>
   5e75c:	tbz	w19, #6, 5e7a0 <my_re_op_compile@@Base+0x239c>
   5e760:	ldr	w0, [sp, #456]
   5e764:	orr	w0, w0, #0x40
   5e768:	str	w0, [sp, #456]
   5e76c:	add	x0, sp, #0x470
   5e770:	stp	xzr, xzr, [x0, #56]
   5e774:	stp	xzr, xzr, [x0, #72]
   5e778:	stp	xzr, xzr, [x0, #88]
   5e77c:	stp	xzr, xzr, [x0, #104]
   5e780:	stp	xzr, xzr, [x0, #120]
   5e784:	stp	xzr, xzr, [x0, #136]
   5e788:	stp	xzr, xzr, [x0, #152]
   5e78c:	stp	xzr, xzr, [x0, #168]
   5e790:	stp	xzr, xzr, [x0, #184]
   5e794:	stp	xzr, xzr, [x0, #200]
   5e798:	stp	xzr, xzr, [x0, #216]
   5e79c:	b	5fd14 <my_re_op_compile@@Base+0x3910>
   5e7a0:	ldr	w0, [sp, #456]
   5e7a4:	and	w0, w0, #0xffffffbf
   5e7a8:	b	5e768 <my_re_op_compile@@Base+0x2364>
   5e7ac:	str	xzr, [sp, #304]
   5e7b0:	str	x1, [sp, #312]
   5e7b4:	mov	x0, x28
   5e7b8:	bl	58a0 <Perl_regnext@plt>
   5e7bc:	ldr	w22, [sp, #232]
   5e7c0:	mov	w20, w22
   5e7c4:	mov	w27, w22
   5e7c8:	mov	w23, w22
   5e7cc:	adrp	x21, 91000 <boot_re@@Base+0x2f41c>
   5e7d0:	ldr	x19, [x21, #3768]
   5e7d4:	b	603b8 <my_re_op_compile@@Base+0x3fb4>
   5e7d8:	mov	w22, #0x1                   	// #1
   5e7dc:	b	603f0 <my_re_op_compile@@Base+0x3fec>
   5e7e0:	cmp	w1, #0x4e
   5e7e4:	csinc	w20, w20, wzr, ne  // ne = any
   5e7e8:	b	60398 <my_re_op_compile@@Base+0x3f94>
   5e7ec:	mov	w22, #0x1                   	// #1
   5e7f0:	b	60398 <my_re_op_compile@@Base+0x3f94>
   5e7f4:	ldrb	w3, [x0, #1]
   5e7f8:	cmp	w3, #0x22
   5e7fc:	b.ne	60398 <my_re_op_compile@@Base+0x3f94>  // b.any
   5e800:	ldrh	w4, [x2]
   5e804:	mov	w3, #0x4800                	// #18432
   5e808:	cmp	w4, w3
   5e80c:	b.eq	5e7ec <my_re_op_compile@@Base+0x23e8>  // b.none
   5e810:	ldrb	w3, [x19, w1, sxtw]
   5e814:	cmp	w3, #0x33
   5e818:	b.eq	5e858 <my_re_op_compile@@Base+0x2454>  // b.none
   5e81c:	cmp	w1, #0x2f
   5e820:	b.ne	5e834 <my_re_op_compile@@Base+0x2430>  // b.any
   5e824:	ldr	x3, [x21, #3768]
   5e828:	ldrb	w4, [x0, #1]
   5e82c:	ldrb	w0, [x3, w4, sxtw]
   5e830:	cbnz	w0, 60398 <my_re_op_compile@@Base+0x3f94>
   5e834:	str	w22, [sp, #176]
   5e838:	adrp	x21, 7d000 <boot_re@@Base+0x1b41c>
   5e83c:	add	x24, x21, #0xa0
   5e840:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5e844:	ldr	x22, [x0, #3768]
   5e848:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   5e84c:	ldr	x0, [x0, #4000]
   5e850:	str	x0, [sp, #184]
   5e854:	b	5f030 <my_re_op_compile@@Base+0x2c2c>
   5e858:	ldrh	w3, [x2, #4]
   5e85c:	cbnz	w3, 60398 <my_re_op_compile@@Base+0x3f94>
   5e860:	b	5e81c <my_re_op_compile@@Base+0x2418>
   5e864:	sub	w1, w0, #0x23
   5e868:	and	w1, w1, #0xff
   5e86c:	cmp	w0, #0x2c
   5e870:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   5e874:	b.ls	5e8c4 <my_re_op_compile@@Base+0x24c0>  // b.plast
   5e878:	ldr	x0, [sp, #376]
   5e87c:	str	x19, [x0, #16]
   5e880:	b	5e8c4 <my_re_op_compile@@Base+0x24c0>
   5e884:	ldr	x2, [sp, #376]
   5e888:	ldr	w3, [x19, #4]
   5e88c:	ldr	x1, [x2, #24]
   5e890:	add	x1, x1, w3, uxtw #3
   5e894:	ldr	x21, [x1, #16]
   5e898:	ldr	x1, [x21, #64]
   5e89c:	cbnz	x1, 5ea68 <my_re_op_compile@@Base+0x2664>
   5e8a0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5e8a4:	ldr	x1, [x1, #4000]
   5e8a8:	lsr	w2, w0, #3
   5e8ac:	ldrb	w1, [x1, w2, sxtw]
   5e8b0:	and	w2, w0, #0x7
   5e8b4:	asr	w1, w1, w2
   5e8b8:	tbz	w1, #0, 5f098 <my_re_op_compile@@Base+0x2c94>
   5e8bc:	ldr	x0, [sp, #376]
   5e8c0:	str	x19, [x0, #16]
   5e8c4:	ldr	w0, [sp, #176]
   5e8c8:	orr	w20, w0, w20
   5e8cc:	cmp	w20, #0x0
   5e8d0:	ccmp	w23, #0x0, #0x4, eq  // eq = none
   5e8d4:	b.ne	5f0b0 <my_re_op_compile@@Base+0x2cac>  // b.any
   5e8d8:	ldr	w0, [x28, #2368]
   5e8dc:	tbnz	w0, #20, 5e8e8 <my_re_op_compile@@Base+0x24e4>
   5e8e0:	ldr	x0, [sp, #280]
   5e8e4:	tbz	w0, #0, 5e8ec <my_re_op_compile@@Base+0x24e8>
   5e8e8:	cbz	w26, 5f0dc <my_re_op_compile@@Base+0x2cd8>
   5e8ec:	adrp	x19, 7d000 <boot_re@@Base+0x1b41c>
   5e8f0:	add	x19, x19, #0x20
   5e8f4:	mov	x2, #0x0                   	// #0
   5e8f8:	mov	x1, x19
   5e8fc:	mov	x0, x28
   5e900:	bl	59a0 <Perl_newSVpvn@plt>
   5e904:	str	x0, [sp, #1248]
   5e908:	mov	x2, #0x0                   	// #0
   5e90c:	mov	x1, x19
   5e910:	mov	x0, x28
   5e914:	bl	59a0 <Perl_newSVpvn@plt>
   5e918:	str	x0, [sp, #1296]
   5e91c:	mov	x2, #0x0                   	// #0
   5e920:	mov	x1, x19
   5e924:	mov	x0, x28
   5e928:	bl	59a0 <Perl_newSVpvn@plt>
   5e92c:	str	x0, [sp, #1208]
   5e930:	strb	wzr, [sp, #1240]
   5e934:	mov	x0, x28
   5e938:	bl	5880 <Perl_push_scope@plt>
   5e93c:	ldr	x0, [x28, #2944]
   5e940:	cbz	x0, 5e958 <my_re_op_compile@@Base+0x2554>
   5e944:	ldrsw	x1, [x28, #64]
   5e948:	add	x0, x0, x1, lsl #3
   5e94c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5e950:	add	x1, x1, #0x130
   5e954:	stur	x1, [x0, #-8]
   5e958:	ldr	w0, [x28, #2368]
   5e95c:	tbnz	w0, #2, 5f104 <my_re_op_compile@@Base+0x2d00>
   5e960:	mov	w2, #0xb                   	// #11
   5e964:	ldr	x1, [sp, #1248]
   5e968:	mov	x0, x28
   5e96c:	bl	54b0 <Perl_save_pushptr@plt>
   5e970:	mov	w2, #0xb                   	// #11
   5e974:	ldr	x1, [sp, #1296]
   5e978:	mov	x0, x28
   5e97c:	bl	54b0 <Perl_save_pushptr@plt>
   5e980:	mov	w2, #0xb                   	// #11
   5e984:	ldr	x1, [sp, #1208]
   5e988:	mov	x0, x28
   5e98c:	bl	54b0 <Perl_save_pushptr@plt>
   5e990:	ldr	x0, [sp, #264]
   5e994:	str	x0, [sp, #312]
   5e998:	ldr	x0, [sp, #376]
   5e99c:	ldr	x0, [x0, #16]
   5e9a0:	ldr	w19, [sp, #232]
   5e9a4:	cbz	x0, 5f134 <my_re_op_compile@@Base+0x2d30>
   5e9a8:	add	x0, sp, #0x130
   5e9ac:	str	x0, [sp, #1352]
   5e9b0:	ldr	w0, [x28, #2368]
   5e9b4:	tbnz	w0, #20, 5f154 <my_re_op_compile@@Base+0x2d50>
   5e9b8:	ldr	x1, [sp, #280]
   5e9bc:	mov	x0, #0x2                   	// #2
   5e9c0:	movk	x0, #0x10, lsl #16
   5e9c4:	bics	xzr, x0, x1
   5e9c8:	b.eq	5f154 <my_re_op_compile@@Base+0x2d50>  // b.none
   5e9cc:	ldr	x0, [sp, #464]
   5e9d0:	ldr	x5, [sp, #264]
   5e9d4:	add	x5, x5, x0, lsl #2
   5e9d8:	cbnz	w26, 60408 <my_re_op_compile@@Base+0x4004>
   5e9dc:	str	wzr, [sp, #24]
   5e9e0:	mov	w0, #0x2400                	// #9216
   5e9e4:	orr	w0, w19, w0
   5e9e8:	str	w0, [sp, #16]
   5e9ec:	str	xzr, [sp, #8]
   5e9f0:	str	wzr, [sp]
   5e9f4:	mov	w7, #0xffffffff            	// #-1
   5e9f8:	add	x6, sp, #0x4a8
   5e9fc:	add	x4, sp, #0x128
   5ea00:	add	x3, sp, #0x110
   5ea04:	add	x2, sp, #0x138
   5ea08:	ldr	x1, [sp, #144]
   5ea0c:	mov	x0, x28
   5ea10:	bl	528a8 <my_regprop@@Base+0x185e4>
   5ea14:	str	x0, [sp, #272]
   5ea18:	ldr	w0, [sp, #1344]
   5ea1c:	tbz	w0, #14, 60400 <my_re_op_compile@@Base+0x3ffc>
   5ea20:	ldr	w0, [x28, #2368]
   5ea24:	tbnz	w0, #2, 5f290 <my_re_op_compile@@Base+0x2e8c>
   5ea28:	ldr	x1, [x28, #2944]
   5ea2c:	cbz	x1, 5ea5c <my_re_op_compile@@Base+0x2658>
   5ea30:	ldrsw	x0, [x28, #64]
   5ea34:	add	x0, x1, x0, lsl #3
   5ea38:	ldur	x0, [x0, #-8]
   5ea3c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ea40:	add	x1, x1, #0x130
   5ea44:	cmp	x0, x1
   5ea48:	b.eq	5ea5c <my_re_op_compile@@Base+0x2658>  // b.none
   5ea4c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ea50:	add	x1, x1, #0x130
   5ea54:	bl	54a0 <strcmp@plt>
   5ea58:	cbnz	w0, 5f2c0 <my_re_op_compile@@Base+0x2ebc>
   5ea5c:	mov	x0, x28
   5ea60:	bl	4fc0 <Perl_pop_scope@plt>
   5ea64:	b	5fc78 <my_re_op_compile@@Base+0x3874>
   5ea68:	str	x2, [sp, #224]
   5ea6c:	str	w3, [sp, #216]
   5ea70:	ldrh	w24, [x21, #56]
   5ea74:	ldr	w0, [x21, #84]
   5ea78:	str	w0, [sp, #184]
   5ea7c:	ldr	w0, [x21, #4]
   5ea80:	add	w22, w24, w0
   5ea84:	ldr	x0, [x21, #16]
   5ea88:	ldr	w0, [x0, #24]
   5ea8c:	str	w0, [sp, #236]
   5ea90:	mov	w2, #0x1                   	// #1
   5ea94:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ea98:	add	x1, x1, #0xa8
   5ea9c:	ldr	x0, [sp, #144]
   5eaa0:	bl	26be8 <my_regexec@@Base+0x36f4>
   5eaa4:	str	w0, [sp, #208]
   5eaa8:	str	xzr, [sp, #328]
   5eaac:	ldr	x0, [x28, #224]
   5eab0:	cbz	x0, 5eb20 <my_re_op_compile@@Base+0x271c>
   5eab4:	mov	w2, #0x1                   	// #1
   5eab8:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   5eabc:	add	x1, x1, #0x608
   5eac0:	mov	x0, x28
   5eac4:	bl	54f0 <Perl_get_sv@plt>
   5eac8:	str	x0, [sp, #192]
   5eacc:	cbz	x0, 5eb20 <my_re_op_compile@@Base+0x271c>
   5ead0:	ldr	w0, [x0, #12]
   5ead4:	tbz	w0, #8, 5ec24 <my_re_op_compile@@Base+0x2820>
   5ead8:	ldr	x0, [sp, #192]
   5eadc:	ldr	w0, [x0, #12]
   5eae0:	and	w1, w0, #0x3fff00
   5eae4:	and	w1, w1, #0xffe001ff
   5eae8:	cmp	w1, #0x100
   5eaec:	b.ne	5ec90 <my_re_op_compile@@Base+0x288c>  // b.any
   5eaf0:	and	w2, w0, #0xf
   5eaf4:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5eaf8:	ldr	x1, [x1, #3712]
   5eafc:	ldrb	w1, [x1, w2, uxtw]
   5eb00:	cbz	w1, 5ec38 <my_re_op_compile@@Base+0x2834>
   5eb04:	and	w1, w0, #0xc000
   5eb08:	cmp	w1, #0x8, lsl #12
   5eb0c:	b.eq	5ec5c <my_re_op_compile@@Base+0x2858>  // b.none
   5eb10:	ldr	x0, [sp, #192]
   5eb14:	ldr	x0, [x0]
   5eb18:	ldr	x0, [x0, #32]
   5eb1c:	str	x0, [sp, #328]
   5eb20:	ldrb	w0, [x19, #1]
   5eb24:	cmp	w0, #0x51
   5eb28:	b.eq	5eca4 <my_re_op_compile@@Base+0x28a0>  // b.none
   5eb2c:	mov	x1, #0x28                  	// #40
   5eb30:	mov	x0, #0x1                   	// #1
   5eb34:	bl	5280 <calloc@plt>
   5eb38:	mov	x2, x0
   5eb3c:	str	x0, [sp, #200]
   5eb40:	ldp	x0, x1, [x19]
   5eb44:	stp	x0, x1, [x2]
   5eb48:	ldp	x0, x1, [x19, #16]
   5eb4c:	stp	x0, x1, [x2, #16]
   5eb50:	ldr	x0, [x19, #32]
   5eb54:	str	x0, [x2, #32]
   5eb58:	ldr	x1, [sp, #200]
   5eb5c:	ldrb	w0, [x1, #1]
   5eb60:	add	w0, w0, #0x2
   5eb64:	strb	w0, [x1, #1]
   5eb68:	ldr	w19, [sp, #208]
   5eb6c:	str	w19, [x1, #4]
   5eb70:	mov	x1, #0x18                  	// #24
   5eb74:	mov	x0, #0x1                   	// #1
   5eb78:	bl	5280 <calloc@plt>
   5eb7c:	mov	x1, x0
   5eb80:	ldr	x0, [sp, #376]
   5eb84:	ldr	x0, [x0, #24]
   5eb88:	add	x0, x0, w19, uxtw #3
   5eb8c:	str	x1, [x0, #16]
   5eb90:	str	x1, [sp, #208]
   5eb94:	ldr	w0, [sp, #216]
   5eb98:	str	w0, [x1, #4]
   5eb9c:	ldr	w0, [sp, #184]
   5eba0:	mov	w2, w0
   5eba4:	str	x2, [sp, #216]
   5eba8:	ubfiz	x19, x0, #4, #32
   5ebac:	mov	x0, x19
   5ebb0:	bl	5100 <malloc@plt>
   5ebb4:	ldr	x1, [sp, #208]
   5ebb8:	str	x0, [x1, #16]
   5ebbc:	cbz	x0, 5ecc4 <my_re_op_compile@@Base+0x28c0>
   5ebc0:	ldr	x1, [x21, #16]
   5ebc4:	cbz	x1, 5ece8 <my_re_op_compile@@Base+0x28e4>
   5ebc8:	mov	x2, x19
   5ebcc:	bl	4e60 <memcpy@plt>
   5ebd0:	ldr	x0, [sp, #216]
   5ebd4:	lsl	x0, x0, #2
   5ebd8:	bl	5250 <Perl_safesysmalloc@plt>
   5ebdc:	mov	x19, x0
   5ebe0:	mov	x1, #0x4                   	// #4
   5ebe4:	ldr	x0, [sp, #216]
   5ebe8:	bl	5280 <calloc@plt>
   5ebec:	mov	x1, x0
   5ebf0:	str	x0, [sp, #192]
   5ebf4:	ldr	x2, [sp, #208]
   5ebf8:	str	x0, [x2, #8]
   5ebfc:	mov	w0, #0x1                   	// #1
   5ec00:	str	w0, [x2]
   5ec04:	str	w0, [x1, #4]
   5ec08:	str	w0, [x1]
   5ec0c:	cbz	w24, 5eed8 <my_re_op_compile@@Base+0x2ad4>
   5ec10:	ldr	w0, [sp, #236]
   5ec14:	add	w1, w24, w0
   5ec18:	ldr	w8, [sp, #160]
   5ec1c:	mov	w3, #0x1                   	// #1
   5ec20:	b	5ed18 <my_re_op_compile@@Base+0x2914>
   5ec24:	mov	x2, #0xff08                	// #65288
   5ec28:	ldr	x1, [sp, #192]
   5ec2c:	mov	x0, x28
   5ec30:	bl	5310 <Perl_sv_setuv@plt>
   5ec34:	b	5ead8 <my_re_op_compile@@Base+0x26d4>
   5ec38:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ec3c:	add	x3, x3, #0xc10
   5ec40:	add	x3, x3, #0xa38
   5ec44:	mov	w2, #0xe9a                 	// #3738
   5ec48:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ec4c:	add	x1, x1, #0xfb8
   5ec50:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ec54:	add	x0, x0, #0xda0
   5ec58:	bl	58e0 <__assert_fail@plt>
   5ec5c:	and	w0, w0, #0xff
   5ec60:	sub	w0, w0, #0x9
   5ec64:	cmp	w0, #0x1
   5ec68:	b.hi	5eb10 <my_re_op_compile@@Base+0x270c>  // b.pmore
   5ec6c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ec70:	add	x3, x3, #0xc10
   5ec74:	add	x3, x3, #0xa38
   5ec78:	mov	w2, #0xe9a                 	// #3738
   5ec7c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ec80:	add	x1, x1, #0xfb8
   5ec84:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5ec88:	add	x0, x0, #0xdd0
   5ec8c:	bl	58e0 <__assert_fail@plt>
   5ec90:	mov	w2, #0x2                   	// #2
   5ec94:	ldr	x1, [sp, #192]
   5ec98:	mov	x0, x28
   5ec9c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   5eca0:	b	5eb1c <my_re_op_compile@@Base+0x2718>
   5eca4:	mov	x1, #0x8                   	// #8
   5eca8:	mov	x0, #0x1                   	// #1
   5ecac:	bl	5280 <calloc@plt>
   5ecb0:	mov	x1, x0
   5ecb4:	str	x0, [sp, #200]
   5ecb8:	ldr	x0, [x19]
   5ecbc:	str	x0, [x1]
   5ecc0:	b	5eb58 <my_re_op_compile@@Base+0x2754>
   5ecc4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ecc8:	add	x3, x3, #0xc10
   5eccc:	add	x3, x3, #0xa38
   5ecd0:	mov	w2, #0xeb4                 	// #3764
   5ecd4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ecd8:	add	x1, x1, #0xfb8
   5ecdc:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5ece0:	add	x0, x0, #0xb0
   5ece4:	bl	58e0 <__assert_fail@plt>
   5ece8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5ecec:	add	x3, x3, #0xc10
   5ecf0:	add	x3, x3, #0xa38
   5ecf4:	mov	w2, #0xeb4                 	// #3764
   5ecf8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5ecfc:	add	x1, x1, #0xfb8
   5ed00:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5ed04:	add	x0, x0, #0xd0
   5ed08:	bl	58e0 <__assert_fail@plt>
   5ed0c:	add	w0, w0, #0x1
   5ed10:	cmp	w0, w1
   5ed14:	b.eq	5ed5c <my_re_op_compile@@Base+0x2958>  // b.none
   5ed18:	cmp	w22, w0
   5ed1c:	ccmp	w24, w0, #0x2, hi  // hi = pmore
   5ed20:	b.hi	5ed0c <my_re_op_compile@@Base+0x2908>  // b.pmore
   5ed24:	sub	w2, w0, w24
   5ed28:	lsl	x2, x2, #3
   5ed2c:	ldr	x4, [x21, #24]
   5ed30:	add	x5, x4, x2
   5ed34:	ldr	w5, [x5, #4]
   5ed38:	cmp	w5, #0x1
   5ed3c:	b.ne	5ed0c <my_re_op_compile@@Base+0x2908>  // b.any
   5ed40:	ldr	w2, [x4, x2]
   5ed44:	cbz	w2, 5ed0c <my_re_op_compile@@Base+0x2908>
   5ed48:	str	w2, [x19, w8, uxtw #2]
   5ed4c:	add	w8, w8, #0x1
   5ed50:	ldr	x4, [sp, #192]
   5ed54:	str	w3, [x4, w2, uxtw #2]
   5ed58:	b	5ed0c <my_re_op_compile@@Base+0x2908>
   5ed5c:	cbz	w8, 5eed8 <my_re_op_compile@@Base+0x2ad4>
   5ed60:	ldr	w12, [sp, #160]
   5ed64:	ldr	w11, [sp, #184]
   5ed68:	ldr	x15, [sp, #208]
   5ed6c:	ldr	x7, [sp, #192]
   5ed70:	b	5eea0 <my_re_op_compile@@Base+0x2a9c>
   5ed74:	add	w0, w13, w3
   5ed78:	lsl	x0, x0, #3
   5ed7c:	ldr	x1, [x21, #24]
   5ed80:	add	x2, x1, x0
   5ed84:	ldr	w2, [x2, #4]
   5ed88:	cmp	w9, w2
   5ed8c:	b.ne	5ee80 <my_re_op_compile@@Base+0x2a7c>  // b.any
   5ed90:	ldr	w10, [x1, x0]
   5ed94:	cbnz	w10, 5ee8c <my_re_op_compile@@Base+0x2a88>
   5ed98:	b	5ee80 <my_re_op_compile@@Base+0x2a7c>
   5ed9c:	cmp	w0, #0x1
   5eda0:	b.eq	5ee24 <my_re_op_compile@@Base+0x2a20>  // b.none
   5eda4:	ldr	w0, [x7, w0, uxtw #2]
   5eda8:	ubfiz	x1, x0, #4, #32
   5edac:	add	x1, x6, x1
   5edb0:	ldr	w4, [x1, #8]
   5edb4:	add	w1, w3, w4
   5edb8:	cmp	w22, w1
   5edbc:	cset	w2, hi  // hi = pmore
   5edc0:	cmp	w24, w1
   5edc4:	cset	w1, ls  // ls = plast
   5edc8:	ands	w1, w2, w1
   5edcc:	b.eq	5ed9c <my_re_op_compile@@Base+0x2998>  // b.none
   5edd0:	sub	w2, w4, w24
   5edd4:	add	w2, w2, w3
   5edd8:	lsl	x2, x2, #3
   5eddc:	ldr	x16, [x21, #24]
   5ede0:	add	x17, x16, x2
   5ede4:	ldr	w17, [x17, #4]
   5ede8:	cmp	w0, w17
   5edec:	b.ne	5ed9c <my_re_op_compile@@Base+0x2998>  // b.any
   5edf0:	ldr	w2, [x16, x2]
   5edf4:	cbz	w2, 5ed9c <my_re_op_compile@@Base+0x2998>
   5edf8:	sub	w1, w3, w24
   5edfc:	add	w1, w1, w4
   5ee00:	lsl	x1, x1, #3
   5ee04:	ldr	x2, [x21, #24]
   5ee08:	add	x4, x2, x1
   5ee0c:	ldr	w4, [x4, #4]
   5ee10:	cmp	w0, w4
   5ee14:	b.ne	5ee28 <my_re_op_compile@@Base+0x2a24>  // b.any
   5ee18:	ldr	w1, [x2, x1]
   5ee1c:	cbnz	w1, 5ee30 <my_re_op_compile@@Base+0x2a2c>
   5ee20:	b	5ee28 <my_re_op_compile@@Base+0x2a24>
   5ee24:	cbnz	w1, 5edf8 <my_re_op_compile@@Base+0x29f4>
   5ee28:	cmp	w0, #0x1
   5ee2c:	cset	w1, eq  // eq = none
   5ee30:	mov	w0, w10
   5ee34:	str	w1, [x7, x0, lsl #2]
   5ee38:	lsl	x0, x0, #4
   5ee3c:	ldrh	w2, [x6, x0]
   5ee40:	cbnz	w2, 5ee54 <my_re_op_compile@@Base+0x2a50>
   5ee44:	ubfiz	x1, x1, #4, #32
   5ee48:	ldrh	w1, [x6, x1]
   5ee4c:	cbz	w1, 5ee54 <my_re_op_compile@@Base+0x2a50>
   5ee50:	strh	w1, [x6, x0]
   5ee54:	udiv	w0, w8, w11
   5ee58:	msub	w0, w0, w11, w8
   5ee5c:	str	w10, [x19, x0, lsl #2]
   5ee60:	add	w8, w8, #0x1
   5ee64:	add	w3, w3, #0x1
   5ee68:	add	w5, w5, #0x1
   5ee6c:	cmp	w24, w3
   5ee70:	b.eq	5ee98 <my_re_op_compile@@Base+0x2a94>  // b.none
   5ee74:	cmp	w5, w22
   5ee78:	ccmp	w5, w24, #0x0, cc  // cc = lo, ul, last
   5ee7c:	b.cs	5ed74 <my_re_op_compile@@Base+0x2970>  // b.hs, b.nlast
   5ee80:	cmp	w9, #0x1
   5ee84:	b.ne	5ee64 <my_re_op_compile@@Base+0x2a60>  // b.any
   5ee88:	mov	w10, w14
   5ee8c:	ldr	x6, [x15, #16]
   5ee90:	mov	w0, w14
   5ee94:	b	5eda4 <my_re_op_compile@@Base+0x29a0>
   5ee98:	cmp	w12, w8
   5ee9c:	b.cs	5eed8 <my_re_op_compile@@Base+0x2ad4>  // b.hs, b.nlast
   5eea0:	mov	w0, w12
   5eea4:	udiv	w1, w12, w11
   5eea8:	add	w12, w12, #0x1
   5eeac:	msub	w0, w1, w11, w0
   5eeb0:	ldr	w9, [x19, x0, lsl #2]
   5eeb4:	ldr	x0, [x21, #16]
   5eeb8:	ubfiz	x1, x9, #4, #32
   5eebc:	add	x0, x0, x1
   5eec0:	ldr	w13, [x0, #8]
   5eec4:	mov	w5, w13
   5eec8:	ldr	w3, [sp, #160]
   5eecc:	mov	w14, w9
   5eed0:	sub	w13, w13, w24
   5eed4:	b	5ee74 <my_re_op_compile@@Base+0x2a70>
   5eed8:	ldr	x0, [sp, #192]
   5eedc:	str	wzr, [x0, #4]
   5eee0:	str	wzr, [x0]
   5eee4:	ldr	w0, [x28, #2368]
   5eee8:	tbnz	w0, #20, 5eef4 <my_re_op_compile@@Base+0x2af0>
   5eeec:	ldr	x0, [sp, #328]
   5eef0:	tbz	w0, #2, 5ef60 <my_re_op_compile@@Base+0x2b5c>
   5eef4:	ldr	x3, [sp, #216]
   5eef8:	mov	w2, #0x0                   	// #0
   5eefc:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ef00:	add	x1, x1, #0xf0
   5ef04:	mov	x0, x28
   5ef08:	bl	5940 <Perl_re_indentf@plt>
   5ef0c:	ldr	w0, [sp, #184]
   5ef10:	cmp	w0, #0x1
   5ef14:	b.ls	5ef50 <my_re_op_compile@@Base+0x2b4c>  // b.plast
   5ef18:	mov	x22, #0x1                   	// #1
   5ef1c:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5ef20:	add	x21, x0, #0x118
   5ef24:	mov	w24, w26
   5ef28:	ldr	x26, [sp, #192]
   5ef2c:	ldr	w2, [x26, x22, lsl #2]
   5ef30:	mov	x1, x21
   5ef34:	mov	x0, x28
   5ef38:	bl	50e0 <Perl_re_printf@plt>
   5ef3c:	add	x22, x22, #0x1
   5ef40:	ldr	w0, [sp, #184]
   5ef44:	cmp	w0, w22
   5ef48:	b.hi	5ef2c <my_re_op_compile@@Base+0x2b28>  // b.pmore
   5ef4c:	mov	w26, w24
   5ef50:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5ef54:	add	x1, x1, #0x8d8
   5ef58:	mov	x0, x28
   5ef5c:	bl	50e0 <Perl_re_printf@plt>
   5ef60:	mov	x0, x19
   5ef64:	bl	5650 <Perl_safesysfree@plt>
   5ef68:	ldr	x0, [sp, #224]
   5ef6c:	ldr	x1, [sp, #200]
   5ef70:	str	x1, [x0, #16]
   5ef74:	b	5e8c4 <my_re_op_compile@@Base+0x24c0>
   5ef78:	ldr	x0, [sp, #376]
   5ef7c:	str	x19, [x0, #16]
   5ef80:	b	5e8c4 <my_re_op_compile@@Base+0x24c0>
   5ef84:	ldr	x2, [sp, #368]
   5ef88:	ldr	w1, [x2, #100]
   5ef8c:	cmp	w0, #0x3
   5ef90:	mov	w0, #0x400                 	// #1024
   5ef94:	mov	w3, #0x800                 	// #2048
   5ef98:	csel	w0, w0, w3, eq  // eq = none
   5ef9c:	orr	w0, w1, w0
   5efa0:	str	w0, [x2, #100]
   5efa4:	add	x19, x19, #0x4
   5efa8:	str	x19, [sp, #312]
   5efac:	b	5f030 <my_re_op_compile@@Base+0x2c2c>
   5efb0:	ldr	x1, [sp, #368]
   5efb4:	ldr	w0, [x1, #100]
   5efb8:	orr	w0, w0, #0x1000
   5efbc:	str	w0, [x1, #100]
   5efc0:	add	x19, x19, #0x4
   5efc4:	str	x19, [sp, #312]
   5efc8:	b	5f030 <my_re_op_compile@@Base+0x2c2c>
   5efcc:	cmp	w0, #0x31
   5efd0:	ldr	w0, [sp, #176]
   5efd4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   5efd8:	b.ne	5e8c4 <my_re_op_compile@@Base+0x24c0>  // b.any
   5efdc:	ldrb	w0, [x19, #5]
   5efe0:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   5efe4:	ldr	x1, [x1, #3768]
   5efe8:	ldrb	w1, [x1, w0, sxtw]
   5efec:	cmp	w1, #0x10
   5eff0:	b.ne	5e8c4 <my_re_op_compile@@Base+0x24c0>  // b.any
   5eff4:	ldr	x1, [sp, #368]
   5eff8:	ldr	w2, [x1, #100]
   5effc:	tst	w2, #0x1c00
   5f000:	b.ne	5e8c4 <my_re_op_compile@@Base+0x24c0>  // b.any
   5f004:	ldr	x3, [sp, #600]
   5f008:	cbnz	x3, 5e8c4 <my_re_op_compile@@Base+0x24c0>
   5f00c:	cmp	w0, #0x10
   5f010:	mov	w0, #0x400                 	// #1024
   5f014:	mov	w3, #0x800                 	// #2048
   5f018:	csel	w0, w0, w3, eq  // eq = none
   5f01c:	orr	w0, w0, w2
   5f020:	orr	w0, w0, #0x2
   5f024:	str	w0, [x1, #100]
   5f028:	add	x19, x19, #0x4
   5f02c:	str	x19, [sp, #312]
   5f030:	mov	w5, #0x0                   	// #0
   5f034:	mov	w4, #0x0                   	// #0
   5f038:	ldr	x3, [sp, #312]
   5f03c:	ldr	x2, [sp, #144]
   5f040:	mov	x1, x24
   5f044:	mov	x0, x28
   5f048:	bl	52694 <my_regprop@@Base+0x183d0>
   5f04c:	ldr	x19, [sp, #312]
   5f050:	ldrb	w0, [x19, #1]
   5f054:	ldrb	w1, [x22, w0, sxtw]
   5f058:	cmp	w1, #0x23
   5f05c:	b.eq	5e864 <my_re_op_compile@@Base+0x2460>  // b.none
   5f060:	cmp	w1, #0x51
   5f064:	b.eq	5e884 <my_re_op_compile@@Base+0x2480>  // b.none
   5f068:	lsr	w2, w0, #3
   5f06c:	ldr	x3, [sp, #184]
   5f070:	ldrb	w2, [x3, w2, sxtw]
   5f074:	and	w3, w0, #0x7
   5f078:	asr	w2, w2, w3
   5f07c:	tbnz	w2, #0, 5e8bc <my_re_op_compile@@Base+0x24b8>
   5f080:	and	w2, w1, #0xfffffffb
   5f084:	and	w2, w2, #0xff
   5f088:	cmp	w2, #0x8
   5f08c:	b.eq	5ef78 <my_re_op_compile@@Base+0x2b74>  // b.none
   5f090:	cmp	w1, #0x2
   5f094:	b.eq	5ef84 <my_re_op_compile@@Base+0x2b80>  // b.none
   5f098:	cmp	w0, #0x7
   5f09c:	b.eq	5efb0 <my_re_op_compile@@Base+0x2bac>  // b.none
   5f0a0:	cbz	w27, 5efcc <my_re_op_compile@@Base+0x2bc8>
   5f0a4:	ldr	w1, [sp, #452]
   5f0a8:	cbz	w1, 5efcc <my_re_op_compile@@Base+0x2bc8>
   5f0ac:	b	5e8d8 <my_re_op_compile@@Base+0x24d4>
   5f0b0:	cbnz	w27, 5f0d0 <my_re_op_compile@@Base+0x2ccc>
   5f0b4:	ldr	x0, [sp, #600]
   5f0b8:	cbnz	x0, 5e8d8 <my_re_op_compile@@Base+0x24d4>
   5f0bc:	ldr	x1, [sp, #368]
   5f0c0:	ldr	w0, [x1, #100]
   5f0c4:	orr	w0, w0, #0x1
   5f0c8:	str	w0, [x1, #100]
   5f0cc:	b	5e8d8 <my_re_op_compile@@Base+0x24d4>
   5f0d0:	ldr	w0, [sp, #452]
   5f0d4:	cbz	w0, 5f0b4 <my_re_op_compile@@Base+0x2cb0>
   5f0d8:	b	5e8d8 <my_re_op_compile@@Base+0x24d4>
   5f0dc:	ldr	x2, [sp, #312]
   5f0e0:	ldr	x0, [sp, #264]
   5f0e4:	sub	x2, x2, x0
   5f0e8:	asr	x2, x2, #2
   5f0ec:	add	x2, x2, #0x1
   5f0f0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f0f4:	add	x1, x1, #0x120
   5f0f8:	mov	x0, x28
   5f0fc:	bl	50e0 <Perl_re_printf@plt>
   5f100:	b	5e8ec <my_re_op_compile@@Base+0x24e8>
   5f104:	mov	w6, #0x1f5a                	// #8026
   5f108:	adrp	x5, 75000 <boot_re@@Base+0x1341c>
   5f10c:	add	x5, x5, #0xfb8
   5f110:	ldrsw	x4, [x28, #48]
   5f114:	ldrsw	x3, [x28, #64]
   5f118:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   5f11c:	add	x2, x2, #0x140
   5f120:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5f124:	add	x1, x1, #0x700
   5f128:	mov	x0, x28
   5f12c:	bl	4f70 <Perl_deb@plt>
   5f130:	b	5e960 <my_re_op_compile@@Base+0x255c>
   5f134:	add	x19, sp, #0x470
   5f138:	mov	x2, x19
   5f13c:	ldr	x1, [sp, #144]
   5f140:	mov	x0, x28
   5f144:	bl	29d54 <my_regexec@@Base+0x6860>
   5f148:	str	x19, [sp, #1360]
   5f14c:	mov	w19, #0x800                 	// #2048
   5f150:	b	5e9a8 <my_re_op_compile@@Base+0x25a4>
   5f154:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f158:	add	x1, x1, #0x158
   5f15c:	mov	x0, x28
   5f160:	bl	50e0 <Perl_re_printf@plt>
   5f164:	ldr	w0, [sp, #456]
   5f168:	tbnz	w0, #0, 5f1c8 <my_re_op_compile@@Base+0x2dc4>
   5f16c:	ldr	w0, [sp, #456]
   5f170:	tbnz	w0, #1, 5f1dc <my_re_op_compile@@Base+0x2dd8>
   5f174:	ldr	w0, [sp, #456]
   5f178:	tbnz	w0, #2, 5f1f0 <my_re_op_compile@@Base+0x2dec>
   5f17c:	ldr	w0, [sp, #456]
   5f180:	tbnz	w0, #5, 5f204 <my_re_op_compile@@Base+0x2e00>
   5f184:	ldr	w0, [sp, #456]
   5f188:	tbnz	w0, #6, 5f218 <my_re_op_compile@@Base+0x2e14>
   5f18c:	ldr	w0, [sp, #456]
   5f190:	tbnz	w0, #7, 5f22c <my_re_op_compile@@Base+0x2e28>
   5f194:	ldr	w0, [sp, #456]
   5f198:	tbnz	w0, #8, 5f240 <my_re_op_compile@@Base+0x2e3c>
   5f19c:	ldr	w0, [sp, #456]
   5f1a0:	tbnz	w0, #9, 5f254 <my_re_op_compile@@Base+0x2e50>
   5f1a4:	ldr	w0, [sp, #456]
   5f1a8:	tbnz	w0, #10, 5f268 <my_re_op_compile@@Base+0x2e64>
   5f1ac:	ldr	w0, [sp, #456]
   5f1b0:	tbnz	w0, #12, 5f27c <my_re_op_compile@@Base+0x2e78>
   5f1b4:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5f1b8:	add	x1, x1, #0x8d8
   5f1bc:	mov	x0, x28
   5f1c0:	bl	50e0 <Perl_re_printf@plt>
   5f1c4:	b	5e9cc <my_re_op_compile@@Base+0x25c8>
   5f1c8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f1cc:	add	x1, x1, #0x168
   5f1d0:	mov	x0, x28
   5f1d4:	bl	50e0 <Perl_re_printf@plt>
   5f1d8:	b	5f16c <my_re_op_compile@@Base+0x2d68>
   5f1dc:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f1e0:	add	x1, x1, #0x180
   5f1e4:	mov	x0, x28
   5f1e8:	bl	50e0 <Perl_re_printf@plt>
   5f1ec:	b	5f174 <my_re_op_compile@@Base+0x2d70>
   5f1f0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f1f4:	add	x1, x1, #0x198
   5f1f8:	mov	x0, x28
   5f1fc:	bl	50e0 <Perl_re_printf@plt>
   5f200:	b	5f17c <my_re_op_compile@@Base+0x2d78>
   5f204:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f208:	add	x1, x1, #0x1a8
   5f20c:	mov	x0, x28
   5f210:	bl	50e0 <Perl_re_printf@plt>
   5f214:	b	5f184 <my_re_op_compile@@Base+0x2d80>
   5f218:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f21c:	add	x1, x1, #0x1c0
   5f220:	mov	x0, x28
   5f224:	bl	50e0 <Perl_re_printf@plt>
   5f228:	b	5f18c <my_re_op_compile@@Base+0x2d88>
   5f22c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f230:	add	x1, x1, #0x1e0
   5f234:	mov	x0, x28
   5f238:	bl	50e0 <Perl_re_printf@plt>
   5f23c:	b	5f194 <my_re_op_compile@@Base+0x2d90>
   5f240:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f244:	add	x1, x1, #0x1f8
   5f248:	mov	x0, x28
   5f24c:	bl	50e0 <Perl_re_printf@plt>
   5f250:	b	5f19c <my_re_op_compile@@Base+0x2d98>
   5f254:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f258:	add	x1, x1, #0x210
   5f25c:	mov	x0, x28
   5f260:	bl	50e0 <Perl_re_printf@plt>
   5f264:	b	5f1a4 <my_re_op_compile@@Base+0x2da0>
   5f268:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f26c:	add	x1, x1, #0x230
   5f270:	mov	x0, x28
   5f274:	bl	50e0 <Perl_re_printf@plt>
   5f278:	b	5f1ac <my_re_op_compile@@Base+0x2da8>
   5f27c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f280:	add	x1, x1, #0x250
   5f284:	mov	x0, x28
   5f288:	bl	50e0 <Perl_re_printf@plt>
   5f28c:	b	5f1b4 <my_re_op_compile@@Base+0x2db0>
   5f290:	mov	w6, #0x1f74                	// #8052
   5f294:	adrp	x5, 75000 <boot_re@@Base+0x1341c>
   5f298:	add	x5, x5, #0xfb8
   5f29c:	ldrsw	x4, [x28, #48]
   5f2a0:	ldrsw	x3, [x28, #64]
   5f2a4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   5f2a8:	add	x2, x2, #0x270
   5f2ac:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5f2b0:	add	x1, x1, #0x700
   5f2b4:	mov	x0, x28
   5f2b8:	bl	4f70 <Perl_deb@plt>
   5f2bc:	b	5ea28 <my_re_op_compile@@Base+0x2624>
   5f2c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f2c4:	add	x3, x3, #0xc10
   5f2c8:	add	x3, x3, #0xa08
   5f2cc:	mov	w2, #0x1f74                	// #8052
   5f2d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f2d4:	add	x1, x1, #0xfb8
   5f2d8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5f2dc:	add	x0, x0, #0x288
   5f2e0:	bl	58e0 <__assert_fail@plt>
   5f2e4:	ldrb	w0, [sp, #1240]
   5f2e8:	cbnz	w0, 60458 <my_re_op_compile@@Base+0x4054>
   5f2ec:	ldr	x0, [sp, #1224]
   5f2f0:	cbnz	x0, 60458 <my_re_op_compile@@Base+0x4054>
   5f2f4:	ldr	x0, [sp, #1216]
   5f2f8:	cmp	x0, #0x0
   5f2fc:	b.le	60458 <my_re_op_compile@@Base+0x4054>
   5f300:	ldr	w0, [sp, #456]
   5f304:	mov	w1, #0x84                  	// #132
   5f308:	and	w0, w0, w1
   5f30c:	ldr	w1, [sp, #492]
   5f310:	orr	w0, w0, w1
   5f314:	cbnz	w0, 60458 <my_re_op_compile@@Base+0x4054>
   5f318:	ldr	x1, [sp, #368]
   5f31c:	ldr	w0, [x1, #56]
   5f320:	orr	w0, w0, #0x80000
   5f324:	str	w0, [x1, #56]
   5f328:	b	60458 <my_re_op_compile@@Base+0x4054>
   5f32c:	ldr	x1, [x22, #104]
   5f330:	mov	x0, x28
   5f334:	bl	5850 <Perl_sv_len_utf8@plt>
   5f338:	mov	x1, x0
   5f33c:	b	5f524 <my_re_op_compile@@Base+0x3120>
   5f340:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f344:	add	x3, x3, #0xc10
   5f348:	add	x3, x3, #0xa08
   5f34c:	mov	w2, #0x1f86                	// #8070
   5f350:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f354:	add	x1, x1, #0xfb8
   5f358:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f35c:	add	x0, x0, #0xe40
   5f360:	bl	58e0 <__assert_fail@plt>
   5f364:	and	w2, w0, #0xff
   5f368:	sub	w2, w2, #0x9
   5f36c:	cmp	w2, #0x1
   5f370:	b.hi	5f510 <my_re_op_compile@@Base+0x310c>  // b.pmore
   5f374:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f378:	add	x3, x3, #0xc10
   5f37c:	add	x3, x3, #0xa08
   5f380:	mov	w2, #0x1f86                	// #8070
   5f384:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f388:	add	x1, x1, #0xfb8
   5f38c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f390:	add	x0, x0, #0xe70
   5f394:	bl	58e0 <__assert_fail@plt>
   5f398:	ldr	x0, [x1]
   5f39c:	ldrb	w0, [x0, #129]
   5f3a0:	tbnz	w0, #6, 5f51c <my_re_op_compile@@Base+0x3118>
   5f3a4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f3a8:	add	x3, x3, #0xc10
   5f3ac:	add	x3, x3, #0xa08
   5f3b0:	mov	w2, #0x1f86                	// #8070
   5f3b4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f3b8:	add	x1, x1, #0xfb8
   5f3bc:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f3c0:	add	x0, x0, #0xe88
   5f3c4:	bl	58e0 <__assert_fail@plt>
   5f3c8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f3cc:	add	x3, x3, #0xc10
   5f3d0:	add	x3, x3, #0xa08
   5f3d4:	mov	w2, #0x1f89                	// #8073
   5f3d8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f3dc:	add	x1, x1, #0xfb8
   5f3e0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f3e4:	add	x0, x0, #0xe40
   5f3e8:	bl	58e0 <__assert_fail@plt>
   5f3ec:	and	w3, w0, #0xff
   5f3f0:	sub	w3, w3, #0x9
   5f3f4:	cmp	w3, #0x1
   5f3f8:	b.hi	5f554 <my_re_op_compile@@Base+0x3150>  // b.pmore
   5f3fc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f400:	add	x3, x3, #0xc10
   5f404:	add	x3, x3, #0xa08
   5f408:	mov	w2, #0x1f89                	// #8073
   5f40c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f410:	add	x1, x1, #0xfb8
   5f414:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f418:	add	x0, x0, #0xe70
   5f41c:	bl	58e0 <__assert_fail@plt>
   5f420:	ldr	x3, [x2]
   5f424:	ldrb	w3, [x3, #129]
   5f428:	tbnz	w3, #6, 5f560 <my_re_op_compile@@Base+0x315c>
   5f42c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f430:	add	x3, x3, #0xc10
   5f434:	add	x3, x3, #0xa08
   5f438:	mov	w2, #0x1f89                	// #8073
   5f43c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f440:	add	x1, x1, #0xfb8
   5f444:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f448:	add	x0, x0, #0xe88
   5f44c:	bl	58e0 <__assert_fail@plt>
   5f450:	cmp	w6, #0x8, lsl #12
   5f454:	b.eq	5f62c <my_re_op_compile@@Base+0x3228>  // b.none
   5f458:	cmp	w0, #0xf
   5f45c:	b.eq	5f65c <my_re_op_compile@@Base+0x3258>  // b.none
   5f460:	ldr	x2, [sp, #1296]
   5f464:	ldr	w0, [x2, #12]
   5f468:	ldr	x3, [x24, #3888]
   5f46c:	and	w6, w0, #0xf
   5f470:	ldrb	w3, [x3, w6, uxtw]
   5f474:	cbz	w3, 5f688 <my_re_op_compile@@Base+0x3284>
   5f478:	and	w3, w0, #0xc000
   5f47c:	cmp	w3, #0x8, lsl #12
   5f480:	b.eq	5f6ac <my_re_op_compile@@Base+0x32a8>  // b.none
   5f484:	and	w0, w0, #0xff
   5f488:	cmp	w0, #0xf
   5f48c:	b.eq	5f6e0 <my_re_op_compile@@Base+0x32dc>  // b.none
   5f490:	ldr	x0, [x2]
   5f494:	ldr	x0, [x0, #16]
   5f498:	cmp	x5, x0
   5f49c:	b.ne	5f57c <my_re_op_compile@@Base+0x3178>  // b.any
   5f4a0:	ldr	x0, [sp, #368]
   5f4a4:	ldr	x3, [x0, #88]
   5f4a8:	sxtw	x2, w20
   5f4ac:	sbfiz	x0, x20, #2, #32
   5f4b0:	add	x1, x0, x2
   5f4b4:	add	x1, x3, x1, lsl #3
   5f4b8:	str	xzr, [x1, #24]
   5f4bc:	ldr	x1, [sp, #368]
   5f4c0:	ldr	x1, [x1, #88]
   5f4c4:	add	x0, x0, x2
   5f4c8:	add	x0, x1, x0, lsl #3
   5f4cc:	str	xzr, [x0, #32]
   5f4d0:	str	xzr, [x4, #8]
   5f4d4:	sub	w20, w20, #0x1
   5f4d8:	sub	x22, x22, #0x30
   5f4dc:	sub	x23, x23, #0x8
   5f4e0:	cmn	w20, #0x1
   5f4e4:	b.eq	5f7cc <my_re_op_compile@@Base+0x33c8>  // b.none
   5f4e8:	ldr	w0, [sp, #528]
   5f4ec:	cbnz	w0, 5f32c <my_re_op_compile@@Base+0x2f28>
   5f4f0:	ldr	x1, [x22, #104]
   5f4f4:	ldr	w0, [x1, #12]
   5f4f8:	and	w2, w0, #0xf
   5f4fc:	ldrb	w2, [x26, w2, uxtw]
   5f500:	cbz	w2, 5f340 <my_re_op_compile@@Base+0x2f3c>
   5f504:	and	w2, w0, #0xc000
   5f508:	cmp	w2, #0x8, lsl #12
   5f50c:	b.eq	5f364 <my_re_op_compile@@Base+0x2f60>  // b.none
   5f510:	and	w0, w0, #0xff
   5f514:	cmp	w0, #0xf
   5f518:	b.eq	5f398 <my_re_op_compile@@Base+0x2f94>  // b.none
   5f51c:	ldr	x0, [x1]
   5f520:	ldr	x1, [x0, #16]
   5f524:	mov	x4, x23
   5f528:	str	x1, [x23, #8]
   5f52c:	cbz	w20, 5f57c <my_re_op_compile@@Base+0x3178>
   5f530:	ldr	x2, [sp, #1248]
   5f534:	ldr	w0, [x2, #12]
   5f538:	and	w3, w0, #0xf
   5f53c:	ldr	x5, [sp, #144]
   5f540:	ldrb	w3, [x5, w3, uxtw]
   5f544:	cbz	w3, 5f3c8 <my_re_op_compile@@Base+0x2fc4>
   5f548:	and	w6, w0, #0xc000
   5f54c:	cmp	w6, #0x8, lsl #12
   5f550:	b.eq	5f3ec <my_re_op_compile@@Base+0x2fe8>  // b.none
   5f554:	and	w0, w0, #0xff
   5f558:	cmp	w0, #0xf
   5f55c:	b.eq	5f420 <my_re_op_compile@@Base+0x301c>  // b.none
   5f560:	ldr	x2, [x2]
   5f564:	ldr	x5, [x2, #16]
   5f568:	cbz	x5, 5f57c <my_re_op_compile@@Base+0x3178>
   5f56c:	ldr	x7, [sp, #1256]
   5f570:	ldr	x3, [sp, #1304]
   5f574:	cmp	x7, x3
   5f578:	b.eq	5f450 <my_re_op_compile@@Base+0x304c>  // b.none
   5f57c:	mov	x21, x22
   5f580:	ldr	w3, [x22, #144]
   5f584:	and	w6, w3, #0x3
   5f588:	ubfx	x3, x3, #1, #1
   5f58c:	cbnz	x1, 5f5a0 <my_re_op_compile@@Base+0x319c>
   5f590:	cbz	w6, 5f4a0 <my_re_op_compile@@Base+0x309c>
   5f594:	cbz	w3, 5f5a0 <my_re_op_compile@@Base+0x319c>
   5f598:	ldr	w0, [sp, #336]
   5f59c:	tbz	w0, #0, 5f4a0 <my_re_op_compile@@Base+0x309c>
   5f5a0:	ldr	w0, [sp, #456]
   5f5a4:	and	w2, w0, #0x400
   5f5a8:	tbnz	w0, #10, 5f4a0 <my_re_op_compile@@Base+0x309c>
   5f5ac:	ldr	x0, [sp, #368]
   5f5b0:	ldr	x4, [x0, #88]
   5f5b4:	ldr	x8, [x21, #104]
   5f5b8:	ldr	w0, [x8, #12]
   5f5bc:	tbz	w0, #29, 5f710 <my_re_op_compile@@Base+0x330c>
   5f5c0:	sxtw	x7, w20
   5f5c4:	sbfiz	x0, x20, #2, #32
   5f5c8:	add	x5, x0, x7
   5f5cc:	add	x5, x4, x5, lsl #3
   5f5d0:	str	xzr, [x5, #24]
   5f5d4:	ldr	x5, [x21, #104]
   5f5d8:	add	x0, x0, x7
   5f5dc:	add	x0, x4, x0, lsl #3
   5f5e0:	str	x5, [x0, #32]
   5f5e4:	ldr	x0, [x21, #128]
   5f5e8:	mov	x5, x1
   5f5ec:	cbz	x0, 5f5f4 <my_re_op_compile@@Base+0x31f0>
   5f5f0:	ldr	x5, [x0]
   5f5f4:	sbfiz	x0, x20, #2, #32
   5f5f8:	add	x0, x0, w20, sxtw
   5f5fc:	add	x0, x4, x0, lsl #3
   5f600:	ldr	x4, [x21, #136]
   5f604:	sub	x1, x4, x1
   5f608:	ldr	x4, [x21, #112]
   5f60c:	sub	x5, x5, x4
   5f610:	add	x1, x1, x5
   5f614:	str	x1, [x0, #40]
   5f618:	cbz	w6, 5f740 <my_re_op_compile@@Base+0x333c>
   5f61c:	cbnz	w3, 5f72c <my_re_op_compile@@Base+0x3328>
   5f620:	ldr	x1, [x21, #104]
   5f624:	mov	w2, #0xf                   	// #15
   5f628:	b	5f744 <my_re_op_compile@@Base+0x3340>
   5f62c:	sub	w3, w0, #0x9
   5f630:	cmp	w3, #0x1
   5f634:	b.hi	5f458 <my_re_op_compile@@Base+0x3054>  // b.pmore
   5f638:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f63c:	add	x3, x3, #0xc10
   5f640:	add	x3, x3, #0xa08
   5f644:	mov	w2, #0x1f8c                	// #8076
   5f648:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f64c:	add	x1, x1, #0xfb8
   5f650:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f654:	add	x0, x0, #0xe70
   5f658:	bl	58e0 <__assert_fail@plt>
   5f65c:	ldrb	w0, [x2, #129]
   5f660:	tbnz	w0, #6, 5f460 <my_re_op_compile@@Base+0x305c>
   5f664:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f668:	add	x3, x3, #0xc10
   5f66c:	add	x3, x3, #0xa08
   5f670:	mov	w2, #0x1f8c                	// #8076
   5f674:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f678:	add	x1, x1, #0xfb8
   5f67c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f680:	add	x0, x0, #0xe88
   5f684:	bl	58e0 <__assert_fail@plt>
   5f688:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f68c:	add	x3, x3, #0xc10
   5f690:	add	x3, x3, #0xa08
   5f694:	mov	w2, #0x1f8d                	// #8077
   5f698:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f69c:	add	x1, x1, #0xfb8
   5f6a0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f6a4:	add	x0, x0, #0xe40
   5f6a8:	bl	58e0 <__assert_fail@plt>
   5f6ac:	and	w3, w0, #0xff
   5f6b0:	sub	w3, w3, #0x9
   5f6b4:	cmp	w3, #0x1
   5f6b8:	b.hi	5f484 <my_re_op_compile@@Base+0x3080>  // b.pmore
   5f6bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f6c0:	add	x3, x3, #0xc10
   5f6c4:	add	x3, x3, #0xa08
   5f6c8:	mov	w2, #0x1f8d                	// #8077
   5f6cc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f6d0:	add	x1, x1, #0xfb8
   5f6d4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f6d8:	add	x0, x0, #0xe70
   5f6dc:	bl	58e0 <__assert_fail@plt>
   5f6e0:	ldr	x0, [x2]
   5f6e4:	ldrb	w0, [x0, #129]
   5f6e8:	tbnz	w0, #6, 5f490 <my_re_op_compile@@Base+0x308c>
   5f6ec:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f6f0:	add	x3, x3, #0xc10
   5f6f4:	add	x3, x3, #0xa08
   5f6f8:	mov	w2, #0x1f8d                	// #8077
   5f6fc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f700:	add	x1, x1, #0xfb8
   5f704:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5f708:	add	x0, x0, #0xe88
   5f70c:	bl	58e0 <__assert_fail@plt>
   5f710:	sxtw	x7, w20
   5f714:	sbfiz	x0, x20, #2, #32
   5f718:	add	x5, x0, x7
   5f71c:	add	x5, x4, x5, lsl #3
   5f720:	str	x8, [x5, #24]
   5f724:	str	xzr, [x5, #32]
   5f728:	b	5f5e4 <my_re_op_compile@@Base+0x31e0>
   5f72c:	ldr	w0, [sp, #336]
   5f730:	tbz	w0, #0, 5f740 <my_re_op_compile@@Base+0x333c>
   5f734:	ldr	x1, [x21, #104]
   5f738:	mov	w2, #0xf                   	// #15
   5f73c:	b	5f744 <my_re_op_compile@@Base+0x3340>
   5f740:	ldr	x1, [x21, #104]
   5f744:	mov	x0, x28
   5f748:	bl	5160 <Perl_fbm_compile@plt>
   5f74c:	ldr	x0, [sp, #368]
   5f750:	ldr	x2, [x0, #88]
   5f754:	sxtw	x3, w20
   5f758:	sbfiz	x0, x20, #2, #32
   5f75c:	add	x1, x0, x3
   5f760:	add	x1, x2, x1, lsl #3
   5f764:	ldr	x2, [x21, #112]
   5f768:	ldr	x4, [x21, #136]
   5f76c:	sub	x2, x2, x4
   5f770:	str	x2, [x1, #8]
   5f774:	ldr	x1, [sp, #368]
   5f778:	ldr	x2, [x1, #88]
   5f77c:	ldr	x1, [x21, #120]
   5f780:	add	x0, x0, x3
   5f784:	add	x0, x2, x0, lsl #3
   5f788:	str	x1, [x0, #16]
   5f78c:	cmp	x1, x25
   5f790:	b.eq	5f7b8 <my_re_op_compile@@Base+0x33b4>  // b.none
   5f794:	sbfiz	x0, x20, #2, #32
   5f798:	add	x0, x0, w20, sxtw
   5f79c:	ldr	x1, [sp, #368]
   5f7a0:	ldr	x1, [x1, #88]
   5f7a4:	add	x0, x1, x0, lsl #3
   5f7a8:	ldr	x1, [x0, #16]
   5f7ac:	ldr	x2, [x21, #136]
   5f7b0:	sub	x1, x1, x2
   5f7b4:	str	x1, [x0, #16]
   5f7b8:	ldr	x1, [x21, #104]
   5f7bc:	ldr	w0, [x1, #8]
   5f7c0:	add	w0, w0, #0x1
   5f7c4:	str	w0, [x1, #8]
   5f7c8:	b	5f4d4 <my_re_op_compile@@Base+0x30d0>
   5f7cc:	ldr	w0, [x28, #2368]
   5f7d0:	tbnz	w0, #2, 5f990 <my_re_op_compile@@Base+0x358c>
   5f7d4:	ldr	x1, [x28, #2944]
   5f7d8:	cbz	x1, 5f808 <my_re_op_compile@@Base+0x3404>
   5f7dc:	ldrsw	x0, [x28, #64]
   5f7e0:	add	x0, x1, x0, lsl #3
   5f7e4:	ldur	x0, [x0, #-8]
   5f7e8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f7ec:	add	x1, x1, #0x130
   5f7f0:	cmp	x0, x1
   5f7f4:	b.eq	5f808 <my_re_op_compile@@Base+0x3404>  // b.none
   5f7f8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5f7fc:	add	x1, x1, #0x130
   5f800:	bl	54a0 <strcmp@plt>
   5f804:	cbnz	w0, 5f9c0 <my_re_op_compile@@Base+0x35bc>
   5f808:	mov	x0, x28
   5f80c:	bl	4fc0 <Perl_pop_scope@plt>
   5f810:	ldr	x1, [sp, #376]
   5f814:	ldr	x0, [x1, #16]
   5f818:	cbz	x0, 5f830 <my_re_op_compile@@Base+0x342c>
   5f81c:	ldrb	w0, [x0, #1]
   5f820:	sub	w0, w0, #0x10
   5f824:	and	w0, w0, #0xff
   5f828:	cmp	w0, #0x1
   5f82c:	b.ls	5f9e4 <my_re_op_compile@@Base+0x35e0>  // b.plast
   5f830:	ldr	x0, [sp, #368]
   5f834:	ldr	x0, [x0, #88]
   5f838:	ldr	x1, [x0, #24]
   5f83c:	cbz	x1, 5f9ec <my_re_op_compile@@Base+0x35e8>
   5f840:	ldr	x0, [x0, #8]
   5f844:	cbz	x0, 5f858 <my_re_op_compile@@Base+0x3454>
   5f848:	cbz	w19, 5f858 <my_re_op_compile@@Base+0x3454>
   5f84c:	ldr	x1, [sp, #1360]
   5f850:	ldrb	w0, [x1]
   5f854:	tbz	w0, #0, 5f9f8 <my_re_op_compile@@Base+0x35f4>
   5f858:	ldr	x5, [sp, #1120]
   5f85c:	ldr	x4, [sp, #1128]
   5f860:	cmp	x5, x4
   5f864:	cset	w0, ls  // ls = plast
   5f868:	ldr	x1, [sp, #368]
   5f86c:	ldr	x1, [x1, #88]
   5f870:	strb	w0, [x1]
   5f874:	ldr	x3, [sp, #368]
   5f878:	ldr	x6, [x3, #88]
   5f87c:	sxtw	x1, w0
   5f880:	lsl	x0, x1, #2
   5f884:	add	x2, x0, x1
   5f888:	add	x2, x6, x2, lsl #3
   5f88c:	ldr	x2, [x2, #40]
   5f890:	str	x2, [x6, #120]
   5f894:	ldr	x6, [x3, #88]
   5f898:	add	x2, x0, x1
   5f89c:	add	x2, x6, x2, lsl #3
   5f8a0:	ldr	x2, [x2, #24]
   5f8a4:	str	x2, [x6, #104]
   5f8a8:	ldr	x6, [x3, #88]
   5f8ac:	add	x2, x0, x1
   5f8b0:	add	x2, x6, x2, lsl #3
   5f8b4:	ldr	x2, [x2, #32]
   5f8b8:	str	x2, [x6, #112]
   5f8bc:	ldr	x6, [x3, #88]
   5f8c0:	add	x2, x0, x1
   5f8c4:	add	x2, x6, x2, lsl #3
   5f8c8:	ldr	x2, [x2, #8]
   5f8cc:	str	x2, [x6, #88]
   5f8d0:	ldr	x2, [x3, #88]
   5f8d4:	add	x0, x0, x1
   5f8d8:	add	x0, x2, x0, lsl #3
   5f8dc:	ldr	x0, [x0, #16]
   5f8e0:	str	x0, [x2, #96]
   5f8e4:	b.ls	5f8fc <my_re_op_compile@@Base+0x34f8>  // b.plast
   5f8e8:	ldr	w0, [x3, #100]
   5f8ec:	tst	w0, #0x1800
   5f8f0:	b.eq	5f8fc <my_re_op_compile@@Base+0x34f8>  // b.none
   5f8f4:	orr	w0, w0, #0x40
   5f8f8:	str	w0, [x3, #100]
   5f8fc:	ldr	x0, [x3, #88]
   5f900:	ldr	x1, [x0, #104]
   5f904:	cbz	x1, 5faf8 <my_re_op_compile@@Base+0x36f4>
   5f908:	ldr	w1, [x3, #56]
   5f90c:	orr	w1, w1, #0x600000
   5f910:	str	w1, [x3, #56]
   5f914:	ldr	x19, [x0, #104]
   5f918:	cbz	x19, 5fb04 <my_re_op_compile@@Base+0x3700>
   5f91c:	ldr	w0, [x19, #12]
   5f920:	and	w1, w0, #0xff
   5f924:	cmp	w1, #0xb
   5f928:	b.eq	5fb0c <my_re_op_compile@@Base+0x3708>  // b.none
   5f92c:	cmp	w1, #0xc
   5f930:	b.eq	5fb30 <my_re_op_compile@@Base+0x372c>  // b.none
   5f934:	mov	w2, #0x2200                	// #8704
   5f938:	tst	w0, w2
   5f93c:	b.ne	5fb54 <my_re_op_compile@@Base+0x3750>  // b.any
   5f940:	and	w0, w0, #0x7fc000
   5f944:	and	w0, w0, #0xffc07fff
   5f948:	cmp	w0, #0x404, lsl #12
   5f94c:	b.ne	5fbac <my_re_op_compile@@Base+0x37a8>  // b.any
   5f950:	cmp	w1, #0x6
   5f954:	b.ls	5fb78 <my_re_op_compile@@Base+0x3774>  // b.plast
   5f958:	ldr	x0, [x19]
   5f95c:	ldr	x0, [x0, #8]
   5f960:	cbz	x0, 5fbac <my_re_op_compile@@Base+0x37a8>
   5f964:	ldrb	w0, [x0, #18]
   5f968:	cmp	w0, #0x42
   5f96c:	b.ne	5fb9c <my_re_op_compile@@Base+0x3798>  // b.any
   5f970:	ldr	x0, [x19]
   5f974:	ldrb	w0, [x0, #40]
   5f978:	cbz	w0, 60520 <my_re_op_compile@@Base+0x411c>
   5f97c:	ldr	x1, [sp, #368]
   5f980:	ldr	w0, [x1, #56]
   5f984:	orr	w0, w0, #0x800000
   5f988:	str	w0, [x1, #56]
   5f98c:	b	60520 <my_re_op_compile@@Base+0x411c>
   5f990:	mov	w6, #0x1fa4                	// #8100
   5f994:	adrp	x5, 75000 <boot_re@@Base+0x1341c>
   5f998:	add	x5, x5, #0xfb8
   5f99c:	ldrsw	x4, [x28, #48]
   5f9a0:	ldrsw	x3, [x28, #64]
   5f9a4:	adrp	x2, 7d000 <boot_re@@Base+0x1b41c>
   5f9a8:	add	x2, x2, #0x270
   5f9ac:	adrp	x1, 6a000 <boot_re@@Base+0x841c>
   5f9b0:	add	x1, x1, #0x700
   5f9b4:	mov	x0, x28
   5f9b8:	bl	4f70 <Perl_deb@plt>
   5f9bc:	b	5f7d4 <my_re_op_compile@@Base+0x33d0>
   5f9c0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5f9c4:	add	x3, x3, #0xc10
   5f9c8:	add	x3, x3, #0xa08
   5f9cc:	mov	w2, #0x1fa4                	// #8100
   5f9d0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5f9d4:	add	x1, x1, #0xfb8
   5f9d8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   5f9dc:	add	x0, x0, #0x288
   5f9e0:	bl	58e0 <__assert_fail@plt>
   5f9e4:	str	xzr, [x1, #16]
   5f9e8:	b	5f830 <my_re_op_compile@@Base+0x342c>
   5f9ec:	ldr	x1, [x0, #32]
   5f9f0:	cbnz	x1, 5f840 <my_re_op_compile@@Base+0x343c>
   5f9f4:	b	5f848 <my_re_op_compile@@Base+0x3444>
   5f9f8:	add	x0, sp, #0x150
   5f9fc:	bl	2fbc0 <my_regexec@@Base+0xc6cc>
   5fa00:	and	w0, w0, #0xff
   5fa04:	cbz	w0, 5f858 <my_re_op_compile@@Base+0x3454>
   5fa08:	add	x20, sp, #0x150
   5fa0c:	mov	w2, #0x1                   	// #1
   5fa10:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5fa14:	add	x1, x1, #0x720
   5fa18:	mov	x0, x20
   5fa1c:	bl	26be8 <my_regexec@@Base+0x36f4>
   5fa20:	mov	w19, w0
   5fa24:	ldr	x2, [sp, #1360]
   5fa28:	mov	x1, x20
   5fa2c:	mov	x0, x28
   5fa30:	bl	2e9b8 <my_regexec@@Base+0xb4c4>
   5fa34:	ldr	x0, [sp, #376]
   5fa38:	ldr	x20, [x0, #24]
   5fa3c:	mov	x0, #0x38                  	// #56
   5fa40:	bl	5250 <Perl_safesysmalloc@plt>
   5fa44:	mov	w1, w19
   5fa48:	add	x1, x1, #0x2
   5fa4c:	str	x0, [x20, x1, lsl #3]
   5fa50:	ldr	x2, [sp, #1360]
   5fa54:	ldr	x0, [sp, #376]
   5fa58:	ldr	x0, [x0, #24]
   5fa5c:	ldr	x0, [x0, x1, lsl #3]
   5fa60:	ldp	x4, x5, [x2]
   5fa64:	stp	x4, x5, [x0]
   5fa68:	ldp	x4, x5, [x2, #16]
   5fa6c:	stp	x4, x5, [x0, #16]
   5fa70:	ldp	x4, x5, [x2, #32]
   5fa74:	stp	x4, x5, [x0, #32]
   5fa78:	ldr	x2, [x2, #48]
   5fa7c:	str	x2, [x0, #48]
   5fa80:	ldr	x0, [sp, #376]
   5fa84:	ldr	x2, [x0, #24]
   5fa88:	ldr	x1, [x2, x1, lsl #3]
   5fa8c:	str	x1, [x0, #16]
   5fa90:	ldr	x1, [sp, #368]
   5fa94:	ldr	w0, [x1, #100]
   5fa98:	and	w0, w0, #0xfffffffe
   5fa9c:	str	w0, [x1, #100]
   5faa0:	ldr	w0, [x28, #2368]
   5faa4:	tbnz	w0, #20, 5fab4 <my_re_op_compile@@Base+0x36b0>
   5faa8:	ldr	x0, [sp, #280]
   5faac:	tst	w0, #0xff
   5fab0:	b.eq	5faf0 <my_re_op_compile@@Base+0x36ec>  // b.none
   5fab4:	mov	x0, x28
   5fab8:	bl	59b0 <Perl_sv_newmortal@plt>
   5fabc:	mov	x19, x0
   5fac0:	add	x5, sp, #0x150
   5fac4:	mov	x4, #0x0                   	// #0
   5fac8:	ldr	x3, [sp, #1360]
   5facc:	mov	x2, x0
   5fad0:	ldr	x1, [sp, #368]
   5fad4:	mov	x0, x28
   5fad8:	bl	5580 <my_regprop@plt>
   5fadc:	ldr	x2, [x19, #16]
   5fae0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fae4:	add	x1, x1, #0x310
   5fae8:	mov	x0, x28
   5faec:	bl	50e0 <Perl_re_printf@plt>
   5faf0:	str	xzr, [sp, #1360]
   5faf4:	b	5f858 <my_re_op_compile@@Base+0x3454>
   5faf8:	ldr	x1, [x0, #112]
   5fafc:	cbnz	x1, 5f908 <my_re_op_compile@@Base+0x3504>
   5fb00:	b	60520 <my_re_op_compile@@Base+0x411c>
   5fb04:	ldr	x19, [x0, #112]
   5fb08:	b	5f91c <my_re_op_compile@@Base+0x3518>
   5fb0c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5fb10:	add	x3, x3, #0xc10
   5fb14:	add	x3, x3, #0xa08
   5fb18:	mov	w2, #0x1fd0                	// #8144
   5fb1c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5fb20:	add	x1, x1, #0xfb8
   5fb24:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5fb28:	add	x0, x0, #0xf18
   5fb2c:	bl	58e0 <__assert_fail@plt>
   5fb30:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5fb34:	add	x3, x3, #0xc10
   5fb38:	add	x3, x3, #0xa08
   5fb3c:	mov	w2, #0x1fd0                	// #8144
   5fb40:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5fb44:	add	x1, x1, #0xfb8
   5fb48:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5fb4c:	add	x0, x0, #0xf38
   5fb50:	bl	58e0 <__assert_fail@plt>
   5fb54:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5fb58:	add	x3, x3, #0xc10
   5fb5c:	add	x3, x3, #0xa08
   5fb60:	mov	w2, #0x1fd0                	// #8144
   5fb64:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5fb68:	add	x1, x1, #0xfb8
   5fb6c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5fb70:	add	x0, x0, #0xf58
   5fb74:	bl	58e0 <__assert_fail@plt>
   5fb78:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5fb7c:	add	x3, x3, #0xc10
   5fb80:	add	x3, x3, #0xa08
   5fb84:	mov	w2, #0x1fd0                	// #8144
   5fb88:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5fb8c:	add	x1, x1, #0xfb8
   5fb90:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5fb94:	add	x0, x0, #0xef8
   5fb98:	bl	58e0 <__assert_fail@plt>
   5fb9c:	mov	w1, #0x42                  	// #66
   5fba0:	mov	x0, x19
   5fba4:	bl	57d0 <Perl_mg_find@plt>
   5fba8:	cbnz	x0, 5f970 <my_re_op_compile@@Base+0x356c>
   5fbac:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   5fbb0:	add	x3, x3, #0xc10
   5fbb4:	add	x3, x3, #0xa08
   5fbb8:	mov	w2, #0x1fd0                	// #8144
   5fbbc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   5fbc0:	add	x1, x1, #0xfb8
   5fbc4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   5fbc8:	add	x0, x0, #0xf80
   5fbcc:	bl	58e0 <__assert_fail@plt>
   5fbd0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fbd4:	add	x1, x1, #0x330
   5fbd8:	mov	x0, x28
   5fbdc:	bl	50e0 <Perl_re_printf@plt>
   5fbe0:	ldr	x0, [sp, #376]
   5fbe4:	add	x0, x0, #0x2c
   5fbe8:	str	x0, [sp, #264]
   5fbec:	add	x19, sp, #0x470
   5fbf0:	mov	x2, x19
   5fbf4:	ldr	x1, [sp, #144]
   5fbf8:	mov	x0, x28
   5fbfc:	bl	29d54 <my_regexec@@Base+0x6860>
   5fc00:	str	x19, [sp, #1360]
   5fc04:	add	x0, sp, #0x138
   5fc08:	str	x0, [sp, #1352]
   5fc0c:	ldr	w0, [x28, #2368]
   5fc10:	tbnz	w0, #20, 5fd90 <my_re_op_compile@@Base+0x398c>
   5fc14:	ldr	x1, [sp, #280]
   5fc18:	mov	x0, #0x2                   	// #2
   5fc1c:	movk	x0, #0x10, lsl #16
   5fc20:	bics	xzr, x0, x1
   5fc24:	b.eq	5fd90 <my_re_op_compile@@Base+0x398c>  // b.none
   5fc28:	ldr	x5, [sp, #464]
   5fc2c:	ldr	x0, [sp, #264]
   5fc30:	add	x5, x0, x5, lsl #2
   5fc34:	cbnz	w26, 60498 <my_re_op_compile@@Base+0x4094>
   5fc38:	str	wzr, [sp, #24]
   5fc3c:	mov	w0, #0x2800                	// #10240
   5fc40:	str	w0, [sp, #16]
   5fc44:	str	xzr, [sp, #8]
   5fc48:	str	wzr, [sp]
   5fc4c:	mov	w7, #0xffffffff            	// #-1
   5fc50:	add	x6, sp, #0x4a8
   5fc54:	add	x4, sp, #0x130
   5fc58:	add	x3, sp, #0x110
   5fc5c:	add	x2, sp, #0x108
   5fc60:	ldr	x1, [sp, #144]
   5fc64:	mov	x0, x28
   5fc68:	bl	528a8 <my_regprop@@Base+0x185e4>
   5fc6c:	str	x0, [sp, #272]
   5fc70:	ldr	w0, [sp, #1344]
   5fc74:	tbz	w0, #14, 60490 <my_re_op_compile@@Base+0x408c>
   5fc78:	str	xzr, [sp, #272]
   5fc7c:	ldr	x0, [sp, #368]
   5fc80:	str	xzr, [x0, #64]
   5fc84:	str	wzr, [sp, #696]
   5fc88:	ldr	x0, [x0, #88]
   5fc8c:	mov	w26, #0x1                   	// #1
   5fc90:	cbz	x0, 5e704 <my_re_op_compile@@Base+0x2300>
   5fc94:	stp	xzr, xzr, [x0]
   5fc98:	stp	xzr, xzr, [x0, #16]
   5fc9c:	stp	xzr, xzr, [x0, #32]
   5fca0:	stp	xzr, xzr, [x0, #48]
   5fca4:	stp	xzr, xzr, [x0, #64]
   5fca8:	stp	xzr, xzr, [x0, #80]
   5fcac:	stp	xzr, xzr, [x0, #96]
   5fcb0:	stp	xzr, xzr, [x0, #112]
   5fcb4:	ldr	x0, [sp, #568]
   5fcb8:	cbz	x0, 5fcd0 <my_re_op_compile@@Base+0x38cc>
   5fcbc:	ldr	w2, [sp, #576]
   5fcc0:	ldr	w1, [sp, #484]
   5fcc4:	mul	w2, w2, w1
   5fcc8:	mov	w1, #0x0                   	// #0
   5fccc:	bl	51f0 <memset@plt>
   5fcd0:	cbnz	w26, 5e728 <my_re_op_compile@@Base+0x2324>
   5fcd4:	add	x0, sp, #0x470
   5fcd8:	stp	xzr, xzr, [x0, #56]
   5fcdc:	stp	xzr, xzr, [x0, #72]
   5fce0:	stp	xzr, xzr, [x0, #88]
   5fce4:	stp	xzr, xzr, [x0, #104]
   5fce8:	stp	xzr, xzr, [x0, #120]
   5fcec:	stp	xzr, xzr, [x0, #136]
   5fcf0:	stp	xzr, xzr, [x0, #152]
   5fcf4:	stp	xzr, xzr, [x0, #168]
   5fcf8:	stp	xzr, xzr, [x0, #184]
   5fcfc:	stp	xzr, xzr, [x0, #200]
   5fd00:	stp	xzr, xzr, [x0, #216]
   5fd04:	mov	x2, #0x188                 	// #392
   5fd08:	ldr	x1, [sp, #144]
   5fd0c:	add	x0, sp, #0x2d8
   5fd10:	bl	4e60 <memcpy@plt>
   5fd14:	ldr	x0, [sp, #368]
   5fd18:	ldr	w1, [sp, #336]
   5fd1c:	str	w1, [x0, #56]
   5fd20:	ldr	w0, [sp, #528]
   5fd24:	cbz	w0, 5fd38 <my_re_op_compile@@Base+0x3934>
   5fd28:	ldr	x1, [sp, #168]
   5fd2c:	ldr	w0, [x1, #12]
   5fd30:	orr	w0, w0, #0x20000000
   5fd34:	str	w0, [x1, #12]
   5fd38:	ldr	x0, [sp, #376]
   5fd3c:	str	xzr, [x0, #16]
   5fd40:	ldr	w0, [sp, #448]
   5fd44:	cmp	w0, #0x9
   5fd48:	b.le	5fd5c <my_re_op_compile@@Base+0x3958>
   5fd4c:	ldr	x1, [sp, #368]
   5fd50:	ldr	w0, [x1, #100]
   5fd54:	orr	w0, w0, #0x4
   5fd58:	str	w0, [x1, #100]
   5fd5c:	ldr	x1, [sp, #376]
   5fd60:	add	x1, x1, #0x2c
   5fd64:	str	x1, [sp, #264]
   5fd68:	ldr	w0, [sp, #456]
   5fd6c:	and	w2, w0, #0x40
   5fd70:	str	w2, [sp, #160]
   5fd74:	tbz	w0, #6, 5e7ac <my_re_op_compile@@Base+0x23a8>
   5fd78:	str	xzr, [sp, #312]
   5fd7c:	ldr	w0, [x28, #2368]
   5fd80:	tbnz	w0, #20, 5fbd0 <my_re_op_compile@@Base+0x37cc>
   5fd84:	ldr	x0, [sp, #280]
   5fd88:	tbz	w0, #0, 5fbe0 <my_re_op_compile@@Base+0x37dc>
   5fd8c:	b	5fbd0 <my_re_op_compile@@Base+0x37cc>
   5fd90:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fd94:	add	x1, x1, #0x158
   5fd98:	mov	x0, x28
   5fd9c:	bl	50e0 <Perl_re_printf@plt>
   5fda0:	ldr	w0, [sp, #456]
   5fda4:	tbnz	w0, #0, 5fe04 <my_re_op_compile@@Base+0x3a00>
   5fda8:	ldr	w0, [sp, #456]
   5fdac:	tbnz	w0, #1, 5fe18 <my_re_op_compile@@Base+0x3a14>
   5fdb0:	ldr	w0, [sp, #456]
   5fdb4:	tbnz	w0, #2, 5fe2c <my_re_op_compile@@Base+0x3a28>
   5fdb8:	ldr	w0, [sp, #456]
   5fdbc:	tbnz	w0, #5, 5fe40 <my_re_op_compile@@Base+0x3a3c>
   5fdc0:	ldr	w0, [sp, #456]
   5fdc4:	tbnz	w0, #6, 5fe54 <my_re_op_compile@@Base+0x3a50>
   5fdc8:	ldr	w0, [sp, #456]
   5fdcc:	tbnz	w0, #7, 5fe68 <my_re_op_compile@@Base+0x3a64>
   5fdd0:	ldr	w0, [sp, #456]
   5fdd4:	tbnz	w0, #8, 5fe7c <my_re_op_compile@@Base+0x3a78>
   5fdd8:	ldr	w0, [sp, #456]
   5fddc:	tbnz	w0, #9, 5fe90 <my_re_op_compile@@Base+0x3a8c>
   5fde0:	ldr	w0, [sp, #456]
   5fde4:	tbnz	w0, #10, 5fea4 <my_re_op_compile@@Base+0x3aa0>
   5fde8:	ldr	w0, [sp, #456]
   5fdec:	tbnz	w0, #12, 5feb8 <my_re_op_compile@@Base+0x3ab4>
   5fdf0:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   5fdf4:	add	x1, x1, #0x8d8
   5fdf8:	mov	x0, x28
   5fdfc:	bl	50e0 <Perl_re_printf@plt>
   5fe00:	b	5fc28 <my_re_op_compile@@Base+0x3824>
   5fe04:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe08:	add	x1, x1, #0x168
   5fe0c:	mov	x0, x28
   5fe10:	bl	50e0 <Perl_re_printf@plt>
   5fe14:	b	5fda8 <my_re_op_compile@@Base+0x39a4>
   5fe18:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe1c:	add	x1, x1, #0x180
   5fe20:	mov	x0, x28
   5fe24:	bl	50e0 <Perl_re_printf@plt>
   5fe28:	b	5fdb0 <my_re_op_compile@@Base+0x39ac>
   5fe2c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe30:	add	x1, x1, #0x198
   5fe34:	mov	x0, x28
   5fe38:	bl	50e0 <Perl_re_printf@plt>
   5fe3c:	b	5fdb8 <my_re_op_compile@@Base+0x39b4>
   5fe40:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe44:	add	x1, x1, #0x1a8
   5fe48:	mov	x0, x28
   5fe4c:	bl	50e0 <Perl_re_printf@plt>
   5fe50:	b	5fdc0 <my_re_op_compile@@Base+0x39bc>
   5fe54:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe58:	add	x1, x1, #0x1c0
   5fe5c:	mov	x0, x28
   5fe60:	bl	50e0 <Perl_re_printf@plt>
   5fe64:	b	5fdc8 <my_re_op_compile@@Base+0x39c4>
   5fe68:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe6c:	add	x1, x1, #0x1e0
   5fe70:	mov	x0, x28
   5fe74:	bl	50e0 <Perl_re_printf@plt>
   5fe78:	b	5fdd0 <my_re_op_compile@@Base+0x39cc>
   5fe7c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe80:	add	x1, x1, #0x1f8
   5fe84:	mov	x0, x28
   5fe88:	bl	50e0 <Perl_re_printf@plt>
   5fe8c:	b	5fdd8 <my_re_op_compile@@Base+0x39d4>
   5fe90:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fe94:	add	x1, x1, #0x210
   5fe98:	mov	x0, x28
   5fe9c:	bl	50e0 <Perl_re_printf@plt>
   5fea0:	b	5fde0 <my_re_op_compile@@Base+0x39dc>
   5fea4:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5fea8:	add	x1, x1, #0x230
   5feac:	mov	x0, x28
   5feb0:	bl	50e0 <Perl_re_printf@plt>
   5feb4:	b	5fde8 <my_re_op_compile@@Base+0x39e4>
   5feb8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5febc:	add	x1, x1, #0x250
   5fec0:	mov	x0, x28
   5fec4:	bl	50e0 <Perl_re_printf@plt>
   5fec8:	b	5fdf0 <my_re_op_compile@@Base+0x39ec>
   5fecc:	add	x0, sp, #0x150
   5fed0:	bl	2fbc0 <my_regexec@@Base+0xc6cc>
   5fed4:	and	w0, w0, #0xff
   5fed8:	cbz	w0, 60520 <my_re_op_compile@@Base+0x411c>
   5fedc:	add	x20, sp, #0x150
   5fee0:	mov	w2, #0x1                   	// #1
   5fee4:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   5fee8:	add	x1, x1, #0x720
   5feec:	mov	x0, x20
   5fef0:	bl	26be8 <my_regexec@@Base+0x36f4>
   5fef4:	mov	w19, w0
   5fef8:	ldr	x2, [sp, #1360]
   5fefc:	mov	x1, x20
   5ff00:	mov	x0, x28
   5ff04:	bl	2e9b8 <my_regexec@@Base+0xb4c4>
   5ff08:	ldr	x0, [sp, #376]
   5ff0c:	ldr	x20, [x0, #24]
   5ff10:	mov	x0, #0x38                  	// #56
   5ff14:	bl	5250 <Perl_safesysmalloc@plt>
   5ff18:	mov	w1, w19
   5ff1c:	add	x1, x1, #0x2
   5ff20:	str	x0, [x20, x1, lsl #3]
   5ff24:	ldr	x2, [sp, #1360]
   5ff28:	ldr	x0, [sp, #376]
   5ff2c:	ldr	x0, [x0, #24]
   5ff30:	ldr	x0, [x0, x1, lsl #3]
   5ff34:	ldp	x4, x5, [x2]
   5ff38:	stp	x4, x5, [x0]
   5ff3c:	ldp	x4, x5, [x2, #16]
   5ff40:	stp	x4, x5, [x0, #16]
   5ff44:	ldp	x4, x5, [x2, #32]
   5ff48:	stp	x4, x5, [x0, #32]
   5ff4c:	ldr	x2, [x2, #48]
   5ff50:	str	x2, [x0, #48]
   5ff54:	ldr	x0, [sp, #376]
   5ff58:	ldr	x2, [x0, #24]
   5ff5c:	ldr	x1, [x2, x1, lsl #3]
   5ff60:	str	x1, [x0, #16]
   5ff64:	ldr	x1, [sp, #368]
   5ff68:	ldr	w0, [x1, #100]
   5ff6c:	and	w0, w0, #0xfffffffe
   5ff70:	str	w0, [x1, #100]
   5ff74:	ldr	w0, [x28, #2368]
   5ff78:	tbnz	w0, #20, 5ff88 <my_re_op_compile@@Base+0x3b84>
   5ff7c:	ldr	x0, [sp, #280]
   5ff80:	tst	w0, #0xff
   5ff84:	b.eq	5ffc4 <my_re_op_compile@@Base+0x3bc0>  // b.none
   5ff88:	mov	x0, x28
   5ff8c:	bl	59b0 <Perl_sv_newmortal@plt>
   5ff90:	mov	x19, x0
   5ff94:	add	x5, sp, #0x150
   5ff98:	mov	x4, #0x0                   	// #0
   5ff9c:	ldr	x3, [sp, #1360]
   5ffa0:	mov	x2, x0
   5ffa4:	ldr	x1, [sp, #368]
   5ffa8:	mov	x0, x28
   5ffac:	bl	5580 <my_regprop@plt>
   5ffb0:	ldr	x2, [x19, #16]
   5ffb4:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   5ffb8:	add	x1, x1, #0x310
   5ffbc:	mov	x0, x28
   5ffc0:	bl	50e0 <Perl_re_printf@plt>
   5ffc4:	str	xzr, [sp, #1360]
   5ffc8:	b	60520 <my_re_op_compile@@Base+0x411c>
   5ffcc:	ldr	x1, [sp, #616]
   5ffd0:	ldr	x0, [sp, #368]
   5ffd4:	str	x1, [x0, #176]
   5ffd8:	b	60540 <my_re_op_compile@@Base+0x413c>
   5ffdc:	ldr	w0, [x19, #100]
   5ffe0:	orr	w0, w0, #0x2000
   5ffe4:	str	w0, [x19, #100]
   5ffe8:	ldr	w0, [x19, #96]
   5ffec:	add	w0, w0, #0x1
   5fff0:	lsl	x0, x0, #3
   5fff4:	bl	5250 <Perl_safesysmalloc@plt>
   5fff8:	str	x0, [x19, #128]
   5fffc:	b	60594 <my_re_op_compile@@Base+0x4190>
   60000:	ldr	x1, [sp, #368]
   60004:	ldr	w0, [x1, #100]
   60008:	orr	w0, w0, #0x20
   6000c:	str	w0, [x1, #100]
   60010:	b	60620 <my_re_op_compile@@Base+0x421c>
   60014:	ldr	x0, [sp, #368]
   60018:	str	xzr, [x0, #48]
   6001c:	b	6063c <my_re_op_compile@@Base+0x4238>
   60020:	ldr	x1, [sp, #368]
   60024:	ldr	w0, [x1, #56]
   60028:	orr	w0, w0, #0x80000000
   6002c:	str	w0, [x1, #56]
   60030:	b	60098 <my_re_op_compile@@Base+0x3c94>
   60034:	ldrb	w0, [x19, #44]
   60038:	cbnz	w0, 60098 <my_re_op_compile@@Base+0x3c94>
   6003c:	cbz	w3, 60088 <my_re_op_compile@@Base+0x3c84>
   60040:	ldr	x3, [sp, #368]
   60044:	ldr	w0, [x3, #56]
   60048:	tbz	w0, #11, 60098 <my_re_op_compile@@Base+0x3c94>
   6004c:	sub	w1, w20, #0x23
   60050:	and	w1, w1, #0xff
   60054:	cmp	w20, #0x2c
   60058:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   6005c:	b.hi	60098 <my_re_op_compile@@Base+0x3c94>  // b.pmore
   60060:	ldrb	w1, [x19, #44]
   60064:	cmp	w1, #0x1
   60068:	b.ne	60098 <my_re_op_compile@@Base+0x3c94>  // b.any
   6006c:	ldrb	w1, [x19, #48]
   60070:	cmp	w1, #0x20
   60074:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   60078:	b.eq	60098 <my_re_op_compile@@Base+0x3c94>  // b.none
   6007c:	orr	w0, w0, #0x60000000
   60080:	str	w0, [x3, #56]
   60084:	b	60098 <my_re_op_compile@@Base+0x3c94>
   60088:	ldr	x1, [sp, #368]
   6008c:	ldr	w0, [x1, #56]
   60090:	orr	w0, w0, #0x10000000
   60094:	str	w0, [x1, #56]
   60098:	ldr	w0, [sp, #584]
   6009c:	cbz	w0, 600b0 <my_re_op_compile@@Base+0x3cac>
   600a0:	ldr	x1, [sp, #368]
   600a4:	ldr	w0, [x1, #56]
   600a8:	orr	w0, w0, #0x8000000
   600ac:	str	w0, [x1, #56]
   600b0:	ldr	x0, [sp, #544]
   600b4:	cbz	x0, 6021c <my_re_op_compile@@Base+0x3e18>
   600b8:	mov	w2, #0x1                   	// #1
   600bc:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   600c0:	add	x1, x1, #0xc90
   600c4:	add	x0, sp, #0x150
   600c8:	bl	26be8 <my_regexec@@Base+0x36f4>
   600cc:	ldr	x1, [sp, #376]
   600d0:	str	w0, [x1]
   600d4:	ldr	x0, [sp, #688]
   600d8:	ldr	x1, [sp, #376]
   600dc:	ldr	x3, [x1, #24]
   600e0:	ldr	w1, [x1]
   600e4:	cbz	x0, 600f4 <my_re_op_compile@@Base+0x3cf0>
   600e8:	ldr	w2, [x0, #8]
   600ec:	add	w2, w2, #0x1
   600f0:	str	w2, [x0, #8]
   600f4:	add	x1, x3, w1, sxtw #3
   600f8:	str	x0, [x1, #16]
   600fc:	ldr	w0, [sp, #560]
   60100:	cmp	w0, #0x0
   60104:	b.le	60154 <my_re_op_compile@@Base+0x3d50>
   60108:	sub	w0, w0, #0x1
   6010c:	str	w0, [sp, #560]
   60110:	ldr	x1, [sp, #552]
   60114:	ldr	x0, [x1, w0, sxtw #3]
   60118:	cbz	x0, 60228 <my_re_op_compile@@Base+0x3e24>
   6011c:	ldrb	w1, [x0, #1]
   60120:	cmp	w1, #0x55
   60124:	b.ne	60228 <my_re_op_compile@@Base+0x3e24>  // b.any
   60128:	ldr	w2, [x0, #4]
   6012c:	ldr	x1, [sp, #496]
   60130:	ldr	x2, [x1, x2, lsl #3]
   60134:	ldr	x1, [sp, #432]
   60138:	sub	x1, x0, x1
   6013c:	neg	x1, x1, asr #2
   60140:	add	w1, w2, w1
   60144:	str	w1, [x0, #8]
   60148:	ldr	w0, [sp, #560]
   6014c:	cmp	w0, #0x0
   60150:	b.gt	60108 <my_re_op_compile@@Base+0x3d04>
   60154:	ldr	x19, [sp, #368]
   60158:	mov	x1, #0x18                  	// #24
   6015c:	ldrsw	x0, [sp, #484]
   60160:	bl	54c0 <Perl_safesyscalloc@plt>
   60164:	str	x0, [x19, #120]
   60168:	ldr	w0, [x28, #2368]
   6016c:	tbnz	w0, #20, 60178 <my_re_op_compile@@Base+0x3d74>
   60170:	ldr	x0, [sp, #280]
   60174:	tbz	w0, #5, 6018c <my_re_op_compile@@Base+0x3d88>
   60178:	ldr	w2, [sp, #696]
   6017c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60180:	add	x1, x1, #0x398
   60184:	mov	x0, x28
   60188:	bl	50e0 <Perl_re_printf@plt>
   6018c:	ldr	w0, [x28, #2368]
   60190:	tbnz	w0, #20, 6019c <my_re_op_compile@@Base+0x3d98>
   60194:	ldr	x0, [sp, #280]
   60198:	tbz	w0, #3, 601d4 <my_re_op_compile@@Base+0x3dd0>
   6019c:	ldr	w0, [x28, #2368]
   601a0:	tbnz	w0, #20, 6024c <my_re_op_compile@@Base+0x3e48>
   601a4:	ldr	x1, [sp, #280]
   601a8:	mov	x0, #0x2                   	// #2
   601ac:	movk	x0, #0x10, lsl #16
   601b0:	bics	xzr, x0, x1
   601b4:	b.eq	6024c <my_re_op_compile@@Base+0x3e48>  // b.none
   601b8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   601bc:	add	x1, x1, #0x3c0
   601c0:	mov	x0, x28
   601c4:	bl	50e0 <Perl_re_printf@plt>
   601c8:	ldr	x1, [sp, #368]
   601cc:	mov	x0, x28
   601d0:	bl	4fe0 <my_regdump@plt>
   601d4:	ldr	x0, [sp, #496]
   601d8:	cbz	x0, 601e4 <my_re_op_compile@@Base+0x3de0>
   601dc:	bl	5650 <Perl_safesysfree@plt>
   601e0:	str	xzr, [sp, #496]
   601e4:	ldr	x0, [sp, #504]
   601e8:	cbz	x0, 601f4 <my_re_op_compile@@Base+0x3df0>
   601ec:	bl	5650 <Perl_safesysfree@plt>
   601f0:	str	xzr, [sp, #504]
   601f4:	ldr	x0, [sp, #152]
   601f8:	cbz	x0, 5cd44 <my_re_op_compile@@Base+0x940>
   601fc:	ldr	w1, [x0, #12]
   60200:	mov	w0, #0x8010000             	// #134283264
   60204:	tst	w1, w0
   60208:	b.eq	5cd44 <my_re_op_compile@@Base+0x940>  // b.none
   6020c:	ldr	w0, [x27, #12]
   60210:	orr	w0, w0, #0x8000000
   60214:	str	w0, [x27, #12]
   60218:	b	5cd44 <my_re_op_compile@@Base+0x940>
   6021c:	ldr	x0, [sp, #376]
   60220:	str	wzr, [x0]
   60224:	b	600fc <my_re_op_compile@@Base+0x3cf8>
   60228:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   6022c:	add	x3, x3, #0xc10
   60230:	add	x3, x3, #0xa08
   60234:	mov	w2, #0x2081                	// #8321
   60238:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   6023c:	add	x1, x1, #0xfb8
   60240:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   60244:	add	x0, x0, #0x378
   60248:	bl	58e0 <__assert_fail@plt>
   6024c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60250:	add	x1, x1, #0x158
   60254:	mov	x0, x28
   60258:	bl	50e0 <Perl_re_printf@plt>
   6025c:	ldr	w0, [sp, #456]
   60260:	tbnz	w0, #0, 602c0 <my_re_op_compile@@Base+0x3ebc>
   60264:	ldr	w0, [sp, #456]
   60268:	tbnz	w0, #1, 602d4 <my_re_op_compile@@Base+0x3ed0>
   6026c:	ldr	w0, [sp, #456]
   60270:	tbnz	w0, #2, 602e8 <my_re_op_compile@@Base+0x3ee4>
   60274:	ldr	w0, [sp, #456]
   60278:	tbnz	w0, #5, 602fc <my_re_op_compile@@Base+0x3ef8>
   6027c:	ldr	w0, [sp, #456]
   60280:	tbnz	w0, #6, 60310 <my_re_op_compile@@Base+0x3f0c>
   60284:	ldr	w0, [sp, #456]
   60288:	tbnz	w0, #7, 60324 <my_re_op_compile@@Base+0x3f20>
   6028c:	ldr	w0, [sp, #456]
   60290:	tbnz	w0, #8, 60338 <my_re_op_compile@@Base+0x3f34>
   60294:	ldr	w0, [sp, #456]
   60298:	tbnz	w0, #9, 6034c <my_re_op_compile@@Base+0x3f48>
   6029c:	ldr	w0, [sp, #456]
   602a0:	tbnz	w0, #10, 60360 <my_re_op_compile@@Base+0x3f5c>
   602a4:	ldr	w0, [sp, #456]
   602a8:	tbnz	w0, #12, 60374 <my_re_op_compile@@Base+0x3f70>
   602ac:	adrp	x1, 77000 <boot_re@@Base+0x1541c>
   602b0:	add	x1, x1, #0x8d8
   602b4:	mov	x0, x28
   602b8:	bl	50e0 <Perl_re_printf@plt>
   602bc:	b	601b8 <my_re_op_compile@@Base+0x3db4>
   602c0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   602c4:	add	x1, x1, #0x168
   602c8:	mov	x0, x28
   602cc:	bl	50e0 <Perl_re_printf@plt>
   602d0:	b	60264 <my_re_op_compile@@Base+0x3e60>
   602d4:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   602d8:	add	x1, x1, #0x180
   602dc:	mov	x0, x28
   602e0:	bl	50e0 <Perl_re_printf@plt>
   602e4:	b	6026c <my_re_op_compile@@Base+0x3e68>
   602e8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   602ec:	add	x1, x1, #0x198
   602f0:	mov	x0, x28
   602f4:	bl	50e0 <Perl_re_printf@plt>
   602f8:	b	60274 <my_re_op_compile@@Base+0x3e70>
   602fc:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60300:	add	x1, x1, #0x1a8
   60304:	mov	x0, x28
   60308:	bl	50e0 <Perl_re_printf@plt>
   6030c:	b	6027c <my_re_op_compile@@Base+0x3e78>
   60310:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60314:	add	x1, x1, #0x1c0
   60318:	mov	x0, x28
   6031c:	bl	50e0 <Perl_re_printf@plt>
   60320:	b	60284 <my_re_op_compile@@Base+0x3e80>
   60324:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60328:	add	x1, x1, #0x1e0
   6032c:	mov	x0, x28
   60330:	bl	50e0 <Perl_re_printf@plt>
   60334:	b	6028c <my_re_op_compile@@Base+0x3e88>
   60338:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   6033c:	add	x1, x1, #0x1f8
   60340:	mov	x0, x28
   60344:	bl	50e0 <Perl_re_printf@plt>
   60348:	b	60294 <my_re_op_compile@@Base+0x3e90>
   6034c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60350:	add	x1, x1, #0x210
   60354:	mov	x0, x28
   60358:	bl	50e0 <Perl_re_printf@plt>
   6035c:	b	6029c <my_re_op_compile@@Base+0x3e98>
   60360:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60364:	add	x1, x1, #0x230
   60368:	mov	x0, x28
   6036c:	bl	50e0 <Perl_re_printf@plt>
   60370:	b	602a4 <my_re_op_compile@@Base+0x3ea0>
   60374:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60378:	add	x1, x1, #0x250
   6037c:	mov	x0, x28
   60380:	bl	50e0 <Perl_re_printf@plt>
   60384:	b	602ac <my_re_op_compile@@Base+0x3ea8>
   60388:	ldr	x2, [sp, #248]
   6038c:	mov	w3, #0x80000               	// #524288
   60390:	b	5cd1c <my_re_op_compile@@Base+0x918>
   60394:	mov	w27, #0x1                   	// #1
   60398:	ldrb	w0, [x25, w1, sxtw]
   6039c:	add	x2, x2, x0, lsl #2
   603a0:	str	x2, [sp, #312]
   603a4:	ldr	x1, [sp, #312]
   603a8:	add	x1, x1, #0x4
   603ac:	str	x1, [sp, #312]
   603b0:	mov	x0, x28
   603b4:	bl	58a0 <Perl_regnext@plt>
   603b8:	ldr	x2, [sp, #312]
   603bc:	ldrb	w1, [x2, #1]
   603c0:	cmp	w1, #0x38
   603c4:	b.eq	60394 <my_re_op_compile@@Base+0x3f90>  // b.none
   603c8:	cmp	w1, #0x22
   603cc:	b.eq	5e7f4 <my_re_op_compile@@Base+0x23f0>  // b.none
   603d0:	ldrh	w4, [x2]
   603d4:	mov	w3, #0x4800                	// #18432
   603d8:	cmp	w4, w3
   603dc:	b.eq	5e7d8 <my_re_op_compile@@Base+0x23d4>  // b.none
   603e0:	cmp	w1, #0x4e
   603e4:	mov	w3, #0x32                  	// #50
   603e8:	ccmp	w1, w3, #0x4, ne  // ne = any
   603ec:	b.ne	5e810 <my_re_op_compile@@Base+0x240c>  // b.any
   603f0:	cmp	w1, #0x32
   603f4:	b.ne	5e7e0 <my_re_op_compile@@Base+0x23dc>  // b.any
   603f8:	mov	w23, #0x1                   	// #1
   603fc:	b	603a4 <my_re_op_compile@@Base+0x3fa0>
   60400:	ldr	x27, [sp, #168]
   60404:	b	6044c <my_re_op_compile@@Base+0x4048>
   60408:	ldr	x27, [sp, #168]
   6040c:	str	wzr, [sp, #24]
   60410:	mov	w0, #0x2400                	// #9216
   60414:	movk	w0, #0x1, lsl #16
   60418:	orr	w0, w19, w0
   6041c:	str	w0, [sp, #16]
   60420:	str	xzr, [sp, #8]
   60424:	str	wzr, [sp]
   60428:	mov	w7, #0xffffffff            	// #-1
   6042c:	add	x6, sp, #0x4a8
   60430:	add	x4, sp, #0x128
   60434:	add	x3, sp, #0x110
   60438:	add	x2, sp, #0x138
   6043c:	add	x1, sp, #0x150
   60440:	mov	x0, x28
   60444:	bl	528a8 <my_regprop@@Base+0x185e4>
   60448:	str	x0, [sp, #272]
   6044c:	ldr	w0, [sp, #484]
   60450:	cmp	w0, #0x1
   60454:	b.eq	5f2e4 <my_re_op_compile@@Base+0x2ee0>  // b.none
   60458:	add	x22, sp, #0x4a8
   6045c:	mov	w4, #0x0                   	// #0
   60460:	add	x3, sp, #0x110
   60464:	mov	x2, x22
   60468:	add	x1, sp, #0x150
   6046c:	mov	x0, x28
   60470:	bl	32660 <Perl_re_indentf@@Base+0x434>
   60474:	add	x23, sp, #0x460
   60478:	mov	w20, #0x1                   	// #1
   6047c:	adrp	x24, 91000 <boot_re@@Base+0x2f41c>
   60480:	ldr	x26, [x24, #3888]
   60484:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
   60488:	str	x26, [sp, #144]
   6048c:	b	5f4e8 <my_re_op_compile@@Base+0x30e4>
   60490:	ldr	x27, [sp, #168]
   60494:	b	604d8 <my_re_op_compile@@Base+0x40d4>
   60498:	ldr	x27, [sp, #168]
   6049c:	str	wzr, [sp, #24]
   604a0:	mov	w0, #0x2800                	// #10240
   604a4:	movk	w0, #0x1, lsl #16
   604a8:	str	w0, [sp, #16]
   604ac:	str	xzr, [sp, #8]
   604b0:	str	wzr, [sp]
   604b4:	mov	w7, #0xffffffff            	// #-1
   604b8:	add	x6, sp, #0x4a8
   604bc:	add	x4, sp, #0x130
   604c0:	add	x3, sp, #0x110
   604c4:	add	x2, sp, #0x108
   604c8:	add	x1, sp, #0x150
   604cc:	mov	x0, x28
   604d0:	bl	528a8 <my_regprop@@Base+0x185e4>
   604d4:	str	x0, [sp, #272]
   604d8:	ldr	x0, [sp, #368]
   604dc:	ldr	x1, [x0, #88]
   604e0:	str	xzr, [x1, #104]
   604e4:	ldr	x1, [x0, #88]
   604e8:	str	xzr, [x1, #112]
   604ec:	ldr	x0, [x0, #88]
   604f0:	str	xzr, [x0, #24]
   604f4:	ldr	x0, [sp, #368]
   604f8:	ldr	x0, [x0, #88]
   604fc:	str	xzr, [x0, #32]
   60500:	ldr	x0, [sp, #368]
   60504:	ldr	x1, [x0, #88]
   60508:	str	xzr, [x1, #64]
   6050c:	ldr	x0, [x0, #88]
   60510:	str	xzr, [x0, #72]
   60514:	ldr	x1, [sp, #1360]
   60518:	ldrb	w0, [x1]
   6051c:	tbz	w0, #0, 5fecc <my_re_op_compile@@Base+0x3ac8>
   60520:	ldr	w0, [sp, #456]
   60524:	tbz	w0, #12, 5ffcc <my_re_op_compile@@Base+0x3bc8>
   60528:	ldr	x0, [sp, #368]
   6052c:	ldr	w1, [x0, #56]
   60530:	orr	w1, w1, #0x40000
   60534:	str	w1, [x0, #56]
   60538:	mov	x1, #0xffff                	// #65535
   6053c:	str	x1, [x0, #176]
   60540:	ldr	w0, [x28, #2368]
   60544:	tbnz	w0, #20, 60550 <my_re_op_compile@@Base+0x414c>
   60548:	ldr	x0, [sp, #280]
   6054c:	tbz	w0, #1, 60570 <my_re_op_compile@@Base+0x416c>
   60550:	ldr	x4, [sp, #616]
   60554:	ldr	x0, [sp, #368]
   60558:	ldr	x3, [x0, #64]
   6055c:	ldr	x2, [sp, #272]
   60560:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60564:	add	x1, x1, #0x348
   60568:	mov	x0, x28
   6056c:	bl	50e0 <Perl_re_printf@plt>
   60570:	ldr	x19, [sp, #368]
   60574:	ldr	x0, [sp, #272]
   60578:	str	x0, [x19, #72]
   6057c:	ldr	x1, [x19, #64]
   60580:	cmp	x0, x1
   60584:	b.le	6058c <my_re_op_compile@@Base+0x4188>
   60588:	str	x0, [x19, #64]
   6058c:	ldr	w0, [sp, #456]
   60590:	tbnz	w0, #5, 5ffdc <my_re_op_compile@@Base+0x3bd8>
   60594:	ldr	w0, [sp, #456]
   60598:	tbz	w0, #2, 605ac <my_re_op_compile@@Base+0x41a8>
   6059c:	ldr	x1, [sp, #368]
   605a0:	ldr	w0, [x1, #100]
   605a4:	orr	w0, w0, #0x100
   605a8:	str	w0, [x1, #100]
   605ac:	ldr	w0, [sp, #456]
   605b0:	tbz	w0, #1, 605c4 <my_re_op_compile@@Base+0x41c0>
   605b4:	ldr	x1, [sp, #368]
   605b8:	ldr	w0, [x1, #56]
   605bc:	orr	w0, w0, #0x10000
   605c0:	str	w0, [x1, #56]
   605c4:	ldr	x0, [sp, #600]
   605c8:	cbz	x0, 605dc <my_re_op_compile@@Base+0x41d8>
   605cc:	ldr	x1, [sp, #368]
   605d0:	ldr	w0, [x1, #56]
   605d4:	orr	w0, w0, #0x20000
   605d8:	str	w0, [x1, #56]
   605dc:	ldr	w0, [sp, #456]
   605e0:	tbz	w0, #7, 60600 <my_re_op_compile@@Base+0x41fc>
   605e4:	ldr	x0, [sp, #368]
   605e8:	ldr	w1, [x0, #100]
   605ec:	orr	w1, w1, #0x8
   605f0:	str	w1, [x0, #100]
   605f4:	ldr	w1, [x0, #56]
   605f8:	orr	w1, w1, #0x10000
   605fc:	str	w1, [x0, #56]
   60600:	ldr	w0, [sp, #456]
   60604:	tbz	w0, #8, 60618 <my_re_op_compile@@Base+0x4214>
   60608:	ldr	x1, [sp, #368]
   6060c:	ldr	w0, [x1, #100]
   60610:	orr	w0, w0, #0x10
   60614:	str	w0, [x1, #100]
   60618:	ldr	w0, [sp, #136]
   6061c:	tbnz	w0, #31, 60000 <my_re_op_compile@@Base+0x3bfc>
   60620:	ldr	x0, [sp, #544]
   60624:	cbz	x0, 60014 <my_re_op_compile@@Base+0x3c10>
   60628:	ldr	w1, [x0, #8]
   6062c:	add	w1, w1, #0x1
   60630:	str	w1, [x0, #8]
   60634:	ldr	x1, [sp, #368]
   60638:	str	x0, [x1, #48]
   6063c:	ldr	x0, [sp, #368]
   60640:	ldr	w1, [x0, #100]
   60644:	tst	w1, #0x1c00
   60648:	b.eq	60658 <my_re_op_compile@@Base+0x4254>  // b.none
   6064c:	ldr	w1, [x0, #56]
   60650:	orr	w1, w1, #0x1000000
   60654:	str	w1, [x0, #56]
   60658:	ldr	x19, [sp, #376]
   6065c:	ldrb	w20, [x19, #45]
   60660:	add	x1, x19, #0x2c
   60664:	mov	x0, x28
   60668:	bl	58a0 <Perl_regnext@plt>
   6066c:	ldrb	w3, [x0, #1]
   60670:	cmp	w3, #0x0
   60674:	cset	w2, eq  // eq = none
   60678:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   6067c:	ldr	x1, [x1, #3768]
   60680:	ldrb	w1, [x1, w20, sxtw]
   60684:	cmp	w1, #0x2f
   60688:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   6068c:	b.ne	60020 <my_re_op_compile@@Base+0x3c1c>  // b.any
   60690:	cmp	w20, #0x3
   60694:	b.eq	6003c <my_re_op_compile@@Base+0x3c38>  // b.none
   60698:	cmp	w20, #0x2
   6069c:	b.eq	60034 <my_re_op_compile@@Base+0x3c30>  // b.none
   606a0:	cmp	w20, #0x32
   606a4:	b.ne	60040 <my_re_op_compile@@Base+0x3c3c>  // b.any
   606a8:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   606ac:	ldr	x1, [x1, #3768]
   606b0:	ldrb	w1, [x1, w3, sxtw]
   606b4:	cmp	w1, #0x19
   606b8:	b.ne	60098 <my_re_op_compile@@Base+0x3c94>  // b.any
   606bc:	ldrb	w0, [x0]
   606c0:	cmp	w2, #0x0
   606c4:	ccmp	w0, #0xa, #0x0, ne  // ne = any
   606c8:	b.ne	60098 <my_re_op_compile@@Base+0x3c94>  // b.any
   606cc:	ldr	x1, [sp, #368]
   606d0:	ldr	w0, [x1, #56]
   606d4:	orr	w0, w0, #0x40000000
   606d8:	str	w0, [x1, #56]
   606dc:	b	60098 <my_re_op_compile@@Base+0x3c94>
   606e0:	sxtw	x0, w0
   606e4:	bl	5250 <Perl_safesysmalloc@plt>
   606e8:	mov	x21, x0
   606ec:	mov	w0, #0x71                  	// #113
   606f0:	strb	w0, [x21]
   606f4:	mov	w0, #0x72                  	// #114
   606f8:	strb	w0, [x21, #1]
   606fc:	add	x1, x21, #0x3
   60700:	mov	w0, #0x27                  	// #39
   60704:	strb	w0, [x21, #2]
   60708:	mov	w0, #0x27                  	// #39
   6070c:	strb	w0, [x1]
   60710:	ldr	w0, [sp, #340]
   60714:	add	x20, x1, #0x1
   60718:	tbz	w0, #3, 60738 <my_re_op_compile@@Base+0x4334>
   6071c:	mov	w2, #0x78                  	// #120
   60720:	strb	w2, [x1, #1]
   60724:	add	x20, x1, #0x2
   60728:	tbz	w0, #4, 60738 <my_re_op_compile@@Base+0x4334>
   6072c:	add	x20, x1, #0x3
   60730:	mov	w0, #0x78                  	// #120
   60734:	strb	w0, [x1, #2]
   60738:	strb	wzr, [x20], #1
   6073c:	ldr	w0, [x28, #2368]
   60740:	tbnz	w0, #20, 60750 <my_re_op_compile@@Base+0x434c>
   60744:	ldr	x0, [sp, #320]
   60748:	tst	w0, #0xff
   6074c:	b.eq	6076c <my_re_op_compile@@Base+0x4368>  // b.none
   60750:	mov	x4, x21
   60754:	ldr	x3, [x28, #1488]
   60758:	ldr	x2, [x28, #1480]
   6075c:	adrp	x1, 7c000 <boot_re@@Base+0x1a41c>
   60760:	add	x1, x1, #0xd50
   60764:	mov	x0, x28
   60768:	bl	50e0 <Perl_re_printf@plt>
   6076c:	sub	x2, x20, x21
   60770:	ldr	w0, [sp, #528]
   60774:	cmp	w0, #0x0
   60778:	cset	w3, ne  // ne = any
   6077c:	lsl	w3, w3, #29
   60780:	sub	x2, x2, #0x1
   60784:	mov	x1, x21
   60788:	mov	x0, x28
   6078c:	bl	5390 <Perl_newSVpvn_flags@plt>
   60790:	mov	x20, x0
   60794:	mov	x0, x21
   60798:	bl	5650 <Perl_safesysfree@plt>
   6079c:	mov	x0, x28
   607a0:	bl	5880 <Perl_push_scope@plt>
   607a4:	ldr	w0, [x28, #2368]
   607a8:	tbnz	w0, #2, 5d4c8 <my_re_op_compile@@Base+0x10c4>
   607ac:	mov	x0, x28
   607b0:	bl	53b0 <Perl_savetmps@plt>
   607b4:	mov	x0, x28
   607b8:	bl	56c0 <Perl_save_re_context@plt>
   607bc:	ldr	x0, [x28, #240]
   607c0:	ldr	x21, [x0, #24]
   607c4:	ldr	w1, [x28, #2368]
   607c8:	tbnz	w1, #2, 5d4f8 <my_re_op_compile@@Base+0x10f4>
   607cc:	cbz	x21, 5d528 <my_re_op_compile@@Base+0x1124>
   607d0:	mov	w0, #0x9                   	// #9
   607d4:	str	w0, [x21, #40]
   607d8:	mov	w0, #0xffffffff            	// #-1
   607dc:	str	w0, [x21, #32]
   607e0:	ldr	x0, [x21]
   607e4:	ldr	x0, [x0]
   607e8:	str	xzr, [x0, #16]
   607ec:	ldr	x0, [x28, #232]
   607f0:	ldr	x1, [x0]
   607f4:	ldr	x0, [x28, #24]
   607f8:	sub	x0, x22, x0
   607fc:	asr	x0, x0, #3
   60800:	str	x0, [x1, #16]
   60804:	ldr	x0, [x21]
   60808:	ldr	x1, [x0, #16]
   6080c:	str	x1, [x28, #24]
   60810:	ldr	x0, [x21]
   60814:	ldr	x0, [x0]
   60818:	ldr	x0, [x0, #24]
   6081c:	add	x0, x1, x0, lsl #3
   60820:	str	x0, [x28, #32]
   60824:	ldr	x0, [x21]
   60828:	ldr	x0, [x0]
   6082c:	ldr	x0, [x0, #16]
   60830:	add	x0, x1, x0, lsl #3
   60834:	str	x0, [x28]
   60838:	ldr	x0, [x21]
   6083c:	str	x0, [x28, #232]
   60840:	str	x21, [x28, #240]
   60844:	ldr	x0, [x28, #120]
   60848:	ldr	x1, [x28, #112]
   6084c:	sub	x0, x0, x1
   60850:	asr	x0, x0, #2
   60854:	str	w0, [x21, #44]
   60858:	mov	w2, #0x802                 	// #2050
   6085c:	mov	x1, x20
   60860:	mov	x0, x28
   60864:	bl	57b0 <Perl_eval_sv@plt>
   60868:	ldr	w2, [x20, #8]
   6086c:	cmp	w2, #0x1
   60870:	b.ls	5d54c <my_re_op_compile@@Base+0x1148>  // b.plast
   60874:	sub	w2, w2, #0x1
   60878:	str	w2, [x20, #8]
   6087c:	ldr	x0, [x28]
   60880:	ldr	x21, [x0], #-8
   60884:	str	x0, [x28]
   60888:	ldr	x1, [x28, #1744]
   6088c:	ldr	w0, [x1, #12]
   60890:	and	w2, w0, #0xff
   60894:	sub	w2, w2, #0x9
   60898:	cmp	w2, #0x1
   6089c:	b.hi	5d55c <my_re_op_compile@@Base+0x1158>  // b.pmore
   608a0:	and	w0, w0, #0xc000
   608a4:	cmp	w0, #0x8, lsl #12
   608a8:	b.ne	5d580 <my_re_op_compile@@Base+0x117c>  // b.any
   608ac:	ldr	x0, [x1, #16]
   608b0:	ldr	x2, [x0]
   608b4:	cbz	x2, 5d5a4 <my_re_op_compile@@Base+0x11a0>
   608b8:	ldr	x20, [x0]
   608bc:	ldr	w0, [x20, #12]
   608c0:	tbnz	w0, #21, 5d61c <my_re_op_compile@@Base+0x1218>
   608c4:	add	x1, x28, #0x138
   608c8:	sub	x0, x20, x1
   608cc:	asr	x0, x0, #3
   608d0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   608d4:	movk	x2, #0xaaab
   608d8:	mul	x0, x0, x2
   608dc:	cmp	x0, #0x3
   608e0:	b.hi	5d62c <my_re_op_compile@@Base+0x1228>  // b.pmore
   608e4:	cmp	x20, x1
   608e8:	cset	w0, eq  // eq = none
   608ec:	cbnz	w0, 5d8a0 <my_re_op_compile@@Base+0x149c>
   608f0:	ldr	w0, [x21, #12]
   608f4:	tbz	w0, #11, 5d8b0 <my_re_op_compile@@Base+0x14ac>
   608f8:	and	w2, w0, #0xf
   608fc:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   60900:	ldr	x1, [x1, #3840]
   60904:	ldrb	w1, [x1, w2, uxtw]
   60908:	cbz	w1, 5d8d4 <my_re_op_compile@@Base+0x14d0>
   6090c:	and	w1, w0, #0xc000
   60910:	cmp	w1, #0x8, lsl #12
   60914:	b.eq	5d8f8 <my_re_op_compile@@Base+0x14f4>  // b.none
   60918:	and	w0, w0, #0xff
   6091c:	cmp	w0, #0xf
   60920:	b.eq	5d92c <my_re_op_compile@@Base+0x1528>  // b.none
   60924:	ldr	x22, [x21, #16]
   60928:	ldrb	w0, [x22, #12]
   6092c:	cmp	w0, #0x8
   60930:	b.ne	5d95c <my_re_op_compile@@Base+0x1558>  // b.any
   60934:	ldr	x0, [x22]
   60938:	ldr	x0, [x0, #32]
   6093c:	ldr	x0, [x0, #96]
   60940:	cbz	x0, 5d95c <my_re_op_compile@@Base+0x1558>
   60944:	ldr	w0, [x22, #8]
   60948:	add	w0, w0, #0x1
   6094c:	str	w0, [x22, #8]
   60950:	ldr	x21, [x28]
   60954:	ldr	x0, [x28, #240]
   60958:	ldr	x20, [x0, #16]
   6095c:	ldr	w1, [x28, #2368]
   60960:	tbnz	w1, #2, 5d980 <my_re_op_compile@@Base+0x157c>
   60964:	cbz	x20, 5d9b0 <my_re_op_compile@@Base+0x15ac>
   60968:	ldr	x0, [x28, #232]
   6096c:	ldr	x1, [x0]
   60970:	ldr	x0, [x28, #24]
   60974:	sub	x0, x21, x0
   60978:	asr	x0, x0, #3
   6097c:	str	x0, [x1, #16]
   60980:	ldr	x0, [x20]
   60984:	ldr	x1, [x0, #16]
   60988:	str	x1, [x28, #24]
   6098c:	ldr	x0, [x20]
   60990:	ldr	x0, [x0]
   60994:	ldr	x0, [x0, #24]
   60998:	add	x0, x1, x0, lsl #3
   6099c:	str	x0, [x28, #32]
   609a0:	ldr	x0, [x20]
   609a4:	ldr	x0, [x0]
   609a8:	ldr	x0, [x0, #16]
   609ac:	add	x0, x1, x0, lsl #3
   609b0:	str	x0, [x28]
   609b4:	ldr	x0, [x20]
   609b8:	str	x0, [x28, #232]
   609bc:	str	x20, [x28, #240]
   609c0:	ldr	x1, [x28, #80]
   609c4:	ldr	x0, [x28, #88]
   609c8:	cmp	x1, x0
   609cc:	b.gt	5d9b4 <my_re_op_compile@@Base+0x15b0>
   609d0:	ldr	w0, [x28, #2368]
   609d4:	tbnz	w0, #2, 5d9c0 <my_re_op_compile@@Base+0x15bc>
   609d8:	mov	x0, x28
   609dc:	bl	4fc0 <Perl_pop_scope@plt>
   609e0:	ldr	w4, [sp, #528]
   609e4:	cbnz	w4, 5e434 <my_re_op_compile@@Base+0x2030>
   609e8:	ldr	w0, [x22, #12]
   609ec:	tbz	w0, #29, 5e434 <my_re_op_compile@@Base+0x2030>
   609f0:	ldr	x0, [sp, #664]
   609f4:	cbnz	x0, 5d9f0 <my_re_op_compile@@Base+0x15ec>
   609f8:	str	x22, [sp, #664]
   609fc:	ldr	x0, [sp, #600]
   60a00:	cbz	x0, 60a08 <my_re_op_compile@@Base+0x4604>
   60a04:	ldr	w4, [x0, #4]
   60a08:	add	x3, sp, #0xf8
   60a0c:	add	x2, sp, #0x100
   60a10:	mov	x1, x26
   60a14:	mov	x0, x28
   60a18:	bl	30684 <Perl_re_printf@@Base+0x7a8>
   60a1c:	b	5e2cc <my_re_op_compile@@Base+0x1ec8>
   60a20:	cbnz	w19, 5c7a8 <my_re_op_compile@@Base+0x3a4>
   60a24:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60a28:	add	x3, x3, #0xc10
   60a2c:	add	x3, x3, #0xa08
   60a30:	mov	w2, #0x1cfe                	// #7422
   60a34:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60a38:	add	x1, x1, #0xfb8
   60a3c:	adrp	x0, 7c000 <boot_re@@Base+0x1a41c>
   60a40:	add	x0, x0, #0xbf8
   60a44:	bl	58e0 <__assert_fail@plt>
   60a48:	bl	5300 <__stack_chk_fail@plt>

0000000000060a4c <my_re_compile@@Base>:
   60a4c:	sub	sp, sp, #0x30
   60a50:	stp	x29, x30, [sp, #16]
   60a54:	add	x29, sp, #0x10
   60a58:	mov	w7, w2
   60a5c:	adrp	x3, 91000 <boot_re@@Base+0x2f41c>
   60a60:	ldr	x3, [x3, #3920]
   60a64:	ldr	x2, [x3]
   60a68:	str	x2, [sp, #40]
   60a6c:	mov	x2, #0x0                   	// #0
   60a70:	str	x1, [sp, #32]
   60a74:	cbz	x1, 60ac0 <my_re_compile@@Base+0x74>
   60a78:	str	wzr, [sp]
   60a7c:	mov	x6, #0x0                   	// #0
   60a80:	mov	x5, #0x0                   	// #0
   60a84:	adrp	x4, 91000 <boot_re@@Base+0x2f41c>
   60a88:	ldr	x4, [x4, #3976]
   60a8c:	mov	x3, #0x0                   	// #0
   60a90:	mov	w2, #0x1                   	// #1
   60a94:	add	x1, sp, #0x20
   60a98:	bl	58b0 <my_re_op_compile@plt>
   60a9c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   60aa0:	ldr	x1, [x1, #3920]
   60aa4:	ldr	x2, [sp, #40]
   60aa8:	ldr	x1, [x1]
   60aac:	eor	x1, x2, x1
   60ab0:	cbnz	x1, 60ae4 <my_re_compile@@Base+0x98>
   60ab4:	ldp	x29, x30, [sp, #16]
   60ab8:	add	sp, sp, #0x30
   60abc:	ret
   60ac0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60ac4:	add	x3, x3, #0xc10
   60ac8:	add	x3, x3, #0xa60
   60acc:	mov	w2, #0x198f                	// #6543
   60ad0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60ad4:	add	x1, x1, #0xfb8
   60ad8:	adrp	x0, 79000 <boot_re@@Base+0x1741c>
   60adc:	add	x0, x0, #0xdf8
   60ae0:	bl	58e0 <__assert_fail@plt>
   60ae4:	bl	5300 <__stack_chk_fail@plt>

0000000000060ae8 <my_re_intuit_string@@Base>:
   60ae8:	sub	sp, sp, #0x80
   60aec:	stp	x29, x30, [sp, #16]
   60af0:	add	x29, sp, #0x10
   60af4:	stp	x19, x20, [sp, #32]
   60af8:	stp	x21, x22, [sp, #48]
   60afc:	mov	x19, x0
   60b00:	mov	x20, x1
   60b04:	ldr	x22, [x1]
   60b08:	ldr	w0, [x1, #12]
   60b0c:	and	w1, w0, #0xff
   60b10:	cmp	w1, #0x8
   60b14:	b.eq	60b40 <my_re_intuit_string@@Base+0x58>  // b.none
   60b18:	mov	w2, #0x80ff                	// #33023
   60b1c:	movk	w2, #0x100, lsl #16
   60b20:	and	w0, w0, w2
   60b24:	mov	w2, #0xa                   	// #10
   60b28:	movk	w2, #0x100, lsl #16
   60b2c:	cmp	w0, w2
   60b30:	b.ne	60cac <my_re_intuit_string@@Base+0x1c4>  // b.any
   60b34:	cmp	w1, #0xa
   60b38:	b.ne	60b40 <my_re_intuit_string@@Base+0x58>  // b.any
   60b3c:	ldr	x22, [x22, #24]
   60b40:	str	xzr, [sp, #120]
   60b44:	ldr	x0, [x19, #224]
   60b48:	cbz	x0, 60bb0 <my_re_intuit_string@@Base+0xc8>
   60b4c:	mov	w2, #0x1                   	// #1
   60b50:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   60b54:	add	x1, x1, #0x608
   60b58:	mov	x0, x19
   60b5c:	bl	54f0 <Perl_get_sv@plt>
   60b60:	mov	x21, x0
   60b64:	cbz	x0, 60bb0 <my_re_intuit_string@@Base+0xc8>
   60b68:	ldr	w0, [x0, #12]
   60b6c:	tbz	w0, #8, 60cdc <my_re_intuit_string@@Base+0x1f4>
   60b70:	ldr	w1, [x21, #12]
   60b74:	and	w0, w1, #0x3fff00
   60b78:	and	w0, w0, #0xffe001ff
   60b7c:	cmp	w0, #0x100
   60b80:	b.ne	60d60 <my_re_intuit_string@@Base+0x278>  // b.any
   60b84:	and	w2, w1, #0xf
   60b88:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   60b8c:	ldr	x0, [x0, #3712]
   60b90:	ldrb	w0, [x0, w2, uxtw]
   60b94:	cbz	w0, 60cf0 <my_re_intuit_string@@Base+0x208>
   60b98:	and	w0, w1, #0xc000
   60b9c:	cmp	w0, #0x8, lsl #12
   60ba0:	b.eq	60d20 <my_re_intuit_string@@Base+0x238>  // b.none
   60ba4:	ldr	x0, [x21]
   60ba8:	ldr	x0, [x0, #32]
   60bac:	str	x0, [sp, #120]
   60bb0:	ldr	w0, [x19, #2368]
   60bb4:	tbnz	w0, #20, 60bc4 <my_re_intuit_string@@Base+0xdc>
   60bb8:	ldr	x0, [sp, #120]
   60bbc:	tst	w0, #0xff
   60bc0:	b.eq	60c88 <my_re_intuit_string@@Base+0x1a0>  // b.none
   60bc4:	stp	x23, x24, [sp, #64]
   60bc8:	stp	x25, x26, [sp, #80]
   60bcc:	str	x27, [sp, #96]
   60bd0:	ldr	w0, [x20, #12]
   60bd4:	tbz	w0, #29, 60d74 <my_re_intuit_string@@Base+0x28c>
   60bd8:	ldr	x0, [x22, #88]
   60bdc:	ldr	x1, [x0, #112]
   60be0:	ldr	w0, [x1, #12]
   60be4:	and	w0, w0, #0x3ffc00
   60be8:	and	w0, w0, #0xffe007ff
   60bec:	cmp	w0, #0x400
   60bf0:	b.ne	60d80 <my_re_intuit_string@@Base+0x298>  // b.any
   60bf4:	ldr	x23, [x1, #16]
   60bf8:	ldrb	w0, [x19, #2601]
   60bfc:	cbz	w0, 60d98 <my_re_intuit_string@@Base+0x2b0>
   60c00:	ldr	x24, [x19, #1480]
   60c04:	ldr	w1, [x20, #12]
   60c08:	adrp	x21, 7d000 <boot_re@@Base+0x1b41c>
   60c0c:	add	x0, x21, #0x20
   60c10:	adrp	x21, 7d000 <boot_re@@Base+0x1b41c>
   60c14:	add	x21, x21, #0x3d0
   60c18:	tst	x1, #0x20000000
   60c1c:	csel	x21, x21, x0, ne  // ne = any
   60c20:	ldr	x25, [x19, #1488]
   60c24:	ldr	x26, [x19, #1448]
   60c28:	ldr	x27, [x19, #1456]
   60c2c:	mov	x0, x23
   60c30:	bl	4ed0 <strlen@plt>
   60c34:	ldr	x3, [x19, #3360]
   60c38:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60c3c:	add	x2, x1, #0x20
   60c40:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60c44:	add	x1, x1, #0xfe0
   60c48:	cmp	x0, x3
   60c4c:	csel	x1, x1, x2, hi  // hi = pmore
   60c50:	str	x1, [sp]
   60c54:	mov	x7, x27
   60c58:	mov	x6, x23
   60c5c:	mov	x5, x26
   60c60:	mov	x4, x25
   60c64:	mov	x3, x21
   60c68:	mov	x2, x24
   60c6c:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   60c70:	add	x1, x1, #0x3d8
   60c74:	mov	x0, x19
   60c78:	bl	50e0 <Perl_re_printf@plt>
   60c7c:	ldp	x23, x24, [sp, #64]
   60c80:	ldp	x25, x26, [sp, #80]
   60c84:	ldr	x27, [sp, #96]
   60c88:	ldr	w0, [x20, #12]
   60c8c:	tbz	w0, #29, 60da4 <my_re_intuit_string@@Base+0x2bc>
   60c90:	ldr	x0, [x22, #88]
   60c94:	ldr	x0, [x0, #112]
   60c98:	ldp	x19, x20, [sp, #32]
   60c9c:	ldp	x21, x22, [sp, #48]
   60ca0:	ldp	x29, x30, [sp, #16]
   60ca4:	add	sp, sp, #0x80
   60ca8:	ret
   60cac:	stp	x23, x24, [sp, #64]
   60cb0:	stp	x25, x26, [sp, #80]
   60cb4:	str	x27, [sp, #96]
   60cb8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60cbc:	add	x3, x3, #0xc10
   60cc0:	add	x3, x3, #0x550
   60cc4:	mov	w2, #0xb6                  	// #182
   60cc8:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   60ccc:	add	x1, x1, #0xc80
   60cd0:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   60cd4:	add	x0, x0, #0x128
   60cd8:	bl	58e0 <__assert_fail@plt>
   60cdc:	mov	x2, #0xff08                	// #65288
   60ce0:	mov	x1, x21
   60ce4:	mov	x0, x19
   60ce8:	bl	5310 <Perl_sv_setuv@plt>
   60cec:	b	60b70 <my_re_intuit_string@@Base+0x88>
   60cf0:	stp	x23, x24, [sp, #64]
   60cf4:	stp	x25, x26, [sp, #80]
   60cf8:	str	x27, [sp, #96]
   60cfc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60d00:	add	x3, x3, #0xc10
   60d04:	add	x3, x3, #0xa70
   60d08:	mov	w2, #0x5066                	// #20582
   60d0c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60d10:	add	x1, x1, #0xfb8
   60d14:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   60d18:	add	x0, x0, #0xda0
   60d1c:	bl	58e0 <__assert_fail@plt>
   60d20:	and	w1, w1, #0xff
   60d24:	sub	w1, w1, #0x9
   60d28:	cmp	w1, #0x1
   60d2c:	b.hi	60ba4 <my_re_intuit_string@@Base+0xbc>  // b.pmore
   60d30:	stp	x23, x24, [sp, #64]
   60d34:	stp	x25, x26, [sp, #80]
   60d38:	str	x27, [sp, #96]
   60d3c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60d40:	add	x3, x3, #0xc10
   60d44:	add	x3, x3, #0xa70
   60d48:	mov	w2, #0x5066                	// #20582
   60d4c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60d50:	add	x1, x1, #0xfb8
   60d54:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   60d58:	add	x0, x0, #0xdd0
   60d5c:	bl	58e0 <__assert_fail@plt>
   60d60:	mov	w2, #0x2                   	// #2
   60d64:	mov	x1, x21
   60d68:	mov	x0, x19
   60d6c:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   60d70:	b	60bac <my_re_intuit_string@@Base+0xc4>
   60d74:	ldr	x0, [x22, #88]
   60d78:	ldr	x1, [x0, #104]
   60d7c:	b	60be0 <my_re_intuit_string@@Base+0xf8>
   60d80:	mov	w3, #0x22                  	// #34
   60d84:	mov	x2, #0x0                   	// #0
   60d88:	mov	x0, x19
   60d8c:	bl	5200 <Perl_sv_2pv_flags@plt>
   60d90:	mov	x23, x0
   60d94:	b	60bf8 <my_re_intuit_string@@Base+0x110>
   60d98:	mov	x0, x19
   60d9c:	bl	54e0 <Perl_reginitcolors@plt>
   60da0:	b	60c00 <my_re_intuit_string@@Base+0x118>
   60da4:	ldr	x0, [x22, #88]
   60da8:	ldr	x0, [x0, #104]
   60dac:	b	60c98 <my_re_intuit_string@@Base+0x1b0>

0000000000060db0 <my_regfree@@Base>:
   60db0:	stp	x29, x30, [sp, #-80]!
   60db4:	mov	x29, sp
   60db8:	stp	x19, x20, [sp, #16]
   60dbc:	stp	x21, x22, [sp, #32]
   60dc0:	mov	x22, x0
   60dc4:	mov	x19, x1
   60dc8:	ldr	x1, [x1]
   60dcc:	ldr	w0, [x19, #12]
   60dd0:	and	w2, w0, #0xff
   60dd4:	cmp	w2, #0x8
   60dd8:	b.eq	60e04 <my_regfree@@Base+0x54>  // b.none
   60ddc:	mov	w3, #0x80ff                	// #33023
   60de0:	movk	w3, #0x100, lsl #16
   60de4:	and	w0, w0, w3
   60de8:	mov	w3, #0xa                   	// #10
   60dec:	movk	w3, #0x100, lsl #16
   60df0:	cmp	w0, w3
   60df4:	b.ne	60f1c <my_regfree@@Base+0x16c>  // b.any
   60df8:	cmp	w2, #0xa
   60dfc:	b.ne	60e04 <my_regfree@@Base+0x54>  // b.any
   60e00:	ldr	x1, [x1, #24]
   60e04:	ldr	x21, [x1, #104]
   60e08:	str	xzr, [sp, #72]
   60e0c:	ldr	x0, [x22, #224]
   60e10:	cbz	x0, 60e78 <my_regfree@@Base+0xc8>
   60e14:	mov	w2, #0x1                   	// #1
   60e18:	adrp	x1, 62000 <boot_re@@Base+0x41c>
   60e1c:	add	x1, x1, #0x608
   60e20:	mov	x0, x22
   60e24:	bl	54f0 <Perl_get_sv@plt>
   60e28:	mov	x20, x0
   60e2c:	cbz	x0, 60e78 <my_regfree@@Base+0xc8>
   60e30:	ldr	w0, [x0, #12]
   60e34:	tbz	w0, #8, 60f44 <my_regfree@@Base+0x194>
   60e38:	ldr	w1, [x20, #12]
   60e3c:	and	w0, w1, #0x3fff00
   60e40:	and	w0, w0, #0xffe001ff
   60e44:	cmp	w0, #0x100
   60e48:	b.ne	60fb8 <my_regfree@@Base+0x208>  // b.any
   60e4c:	and	w2, w1, #0xf
   60e50:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   60e54:	ldr	x0, [x0, #3712]
   60e58:	ldrb	w0, [x0, w2, uxtw]
   60e5c:	cbz	w0, 60f58 <my_regfree@@Base+0x1a8>
   60e60:	and	w0, w1, #0xc000
   60e64:	cmp	w0, #0x8, lsl #12
   60e68:	b.eq	60f80 <my_regfree@@Base+0x1d0>  // b.none
   60e6c:	ldr	x0, [x20]
   60e70:	ldr	x0, [x0, #32]
   60e74:	str	x0, [sp, #72]
   60e78:	cbz	x21, 613c0 <my_regfree@@Base+0x610>
   60e7c:	ldr	w0, [x22, #2368]
   60e80:	tbnz	w0, #20, 60e90 <my_regfree@@Base+0xe0>
   60e84:	ldr	x0, [sp, #72]
   60e88:	tst	w0, #0xff
   60e8c:	b.eq	610ec <my_regfree@@Base+0x33c>  // b.none
   60e90:	ldrb	w0, [x22, #2601]
   60e94:	cbz	w0, 60fcc <my_regfree@@Base+0x21c>
   60e98:	mov	x0, x22
   60e9c:	bl	59b0 <Perl_sv_newmortal@plt>
   60ea0:	mov	x1, x0
   60ea4:	ldr	w3, [x19, #12]
   60ea8:	and	w0, w3, #0xf
   60eac:	adrp	x2, 91000 <boot_re@@Base+0x2f41c>
   60eb0:	ldr	x2, [x2, #3888]
   60eb4:	ldrb	w0, [x2, w0, uxtw]
   60eb8:	cbz	w0, 60fd8 <my_regfree@@Base+0x228>
   60ebc:	and	w7, w3, #0xc000
   60ec0:	cmp	w7, #0x8, lsl #12
   60ec4:	b.eq	61000 <my_regfree@@Base+0x250>  // b.none
   60ec8:	and	w5, w3, #0xff
   60ecc:	cmp	w5, #0xf
   60ed0:	b.ne	61060 <my_regfree@@Base+0x2b0>  // b.any
   60ed4:	ldr	x0, [x19]
   60ed8:	ldrb	w0, [x0, #129]
   60edc:	tbz	w0, #6, 61038 <my_regfree@@Base+0x288>
   60ee0:	ldr	x2, [x19, #16]
   60ee4:	ldr	x6, [x19]
   60ee8:	mov	w0, #0x80ff                	// #33023
   60eec:	movk	w0, #0x100, lsl #16
   60ef0:	and	w0, w3, w0
   60ef4:	mov	w4, #0xa                   	// #10
   60ef8:	movk	w4, #0x100, lsl #16
   60efc:	cmp	w0, w4
   60f00:	b.ne	6118c <my_regfree@@Base+0x3dc>  // b.any
   60f04:	ldrb	w4, [x6, #184]
   60f08:	and	x4, x4, #0xf
   60f0c:	add	x2, x2, x4
   60f10:	cmp	w7, #0x8, lsl #12
   60f14:	b.ne	61090 <my_regfree@@Base+0x2e0>  // b.any
   60f18:	b	61084 <my_regfree@@Base+0x2d4>
   60f1c:	stp	x23, x24, [sp, #48]
   60f20:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60f24:	add	x3, x3, #0xc10
   60f28:	add	x3, x3, #0x550
   60f2c:	mov	w2, #0xb6                  	// #182
   60f30:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   60f34:	add	x1, x1, #0xc80
   60f38:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   60f3c:	add	x0, x0, #0x128
   60f40:	bl	58e0 <__assert_fail@plt>
   60f44:	mov	x2, #0xff08                	// #65288
   60f48:	mov	x1, x20
   60f4c:	mov	x0, x22
   60f50:	bl	5310 <Perl_sv_setuv@plt>
   60f54:	b	60e38 <my_regfree@@Base+0x88>
   60f58:	stp	x23, x24, [sp, #48]
   60f5c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60f60:	add	x3, x3, #0xc10
   60f64:	add	x3, x3, #0xa88
   60f68:	mov	w2, #0x513a                	// #20794
   60f6c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60f70:	add	x1, x1, #0xfb8
   60f74:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   60f78:	add	x0, x0, #0xda0
   60f7c:	bl	58e0 <__assert_fail@plt>
   60f80:	and	w0, w1, #0xff
   60f84:	sub	w0, w0, #0x9
   60f88:	cmp	w0, #0x1
   60f8c:	b.hi	60e6c <my_regfree@@Base+0xbc>  // b.pmore
   60f90:	stp	x23, x24, [sp, #48]
   60f94:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60f98:	add	x3, x3, #0xc10
   60f9c:	add	x3, x3, #0xa88
   60fa0:	mov	w2, #0x513a                	// #20794
   60fa4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60fa8:	add	x1, x1, #0xfb8
   60fac:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   60fb0:	add	x0, x0, #0xdd0
   60fb4:	bl	58e0 <__assert_fail@plt>
   60fb8:	mov	w2, #0x2                   	// #2
   60fbc:	mov	x1, x20
   60fc0:	mov	x0, x22
   60fc4:	bl	4ea0 <Perl_sv_2iv_flags@plt>
   60fc8:	b	60e74 <my_regfree@@Base+0xc4>
   60fcc:	mov	x0, x22
   60fd0:	bl	54e0 <Perl_reginitcolors@plt>
   60fd4:	b	60e98 <my_regfree@@Base+0xe8>
   60fd8:	stp	x23, x24, [sp, #48]
   60fdc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   60fe0:	add	x3, x3, #0xc10
   60fe4:	add	x3, x3, #0xa88
   60fe8:	mov	w2, #0x5148                	// #20808
   60fec:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   60ff0:	add	x1, x1, #0xfb8
   60ff4:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   60ff8:	add	x0, x0, #0xd10
   60ffc:	bl	58e0 <__assert_fail@plt>
   61000:	and	w0, w3, #0xff
   61004:	sub	w0, w0, #0x9
   61008:	cmp	w0, #0x1
   6100c:	b.hi	60ec8 <my_regfree@@Base+0x118>  // b.pmore
   61010:	stp	x23, x24, [sp, #48]
   61014:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   61018:	add	x3, x3, #0xc10
   6101c:	add	x3, x3, #0xa88
   61020:	mov	w2, #0x5148                	// #20808
   61024:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   61028:	add	x1, x1, #0xfb8
   6102c:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   61030:	add	x0, x0, #0xd40
   61034:	bl	58e0 <__assert_fail@plt>
   61038:	stp	x23, x24, [sp, #48]
   6103c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   61040:	add	x3, x3, #0xc10
   61044:	add	x3, x3, #0xa88
   61048:	mov	w2, #0x5148                	// #20808
   6104c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   61050:	add	x1, x1, #0xfb8
   61054:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   61058:	add	x0, x0, #0xd58
   6105c:	bl	58e0 <__assert_fail@plt>
   61060:	ldr	x2, [x19, #16]
   61064:	ldr	x6, [x19]
   61068:	cmp	w5, #0x8
   6106c:	b.ne	61128 <my_regfree@@Base+0x378>  // b.any
   61070:	ldrb	w4, [x6, #184]
   61074:	and	x4, x4, #0xf
   61078:	add	x2, x2, x4
   6107c:	cmp	w7, #0x8, lsl #12
   61080:	b.ne	610a0 <my_regfree@@Base+0x2f0>  // b.any
   61084:	sub	w0, w5, #0x9
   61088:	cmp	w0, #0x1
   6108c:	b.ls	61164 <my_regfree@@Base+0x3b4>  // b.plast
   61090:	cmp	w5, #0xf
   61094:	b.ne	610a0 <my_regfree@@Base+0x2f0>  // b.any
   61098:	ldrb	w0, [x6, #129]
   6109c:	tbz	w0, #6, 611b4 <my_regfree@@Base+0x404>
   610a0:	lsr	w3, w3, #21
   610a4:	and	w5, w3, #0x100
   610a8:	ldr	x3, [x6, #16]
   610ac:	sub	x3, x3, x4
   610b0:	mov	w7, #0x8403                	// #33795
   610b4:	orr	w7, w5, w7
   610b8:	ldr	x6, [x22, #1456]
   610bc:	ldr	x5, [x22, #1448]
   610c0:	ldr	x4, [x22, #3360]
   610c4:	sub	x3, x3, #0x1
   610c8:	mov	x0, x22
   610cc:	bl	53f0 <Perl_pv_pretty@plt>
   610d0:	mov	x4, x0
   610d4:	ldr	x3, [x22, #1488]
   610d8:	ldr	x2, [x22, #1480]
   610dc:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   610e0:	add	x1, x1, #0x400
   610e4:	mov	x0, x22
   610e8:	bl	50e0 <Perl_re_printf@plt>
   610ec:	ldr	x0, [x21, #8]
   610f0:	cbz	x0, 610f8 <my_regfree@@Base+0x348>
   610f4:	bl	5650 <Perl_safesysfree@plt>
   610f8:	ldr	x1, [x21, #32]
   610fc:	cbz	x1, 61108 <my_regfree@@Base+0x358>
   61100:	mov	x0, x22
   61104:	bl	299e8 <my_regexec@@Base+0x64f4>
   61108:	ldr	x0, [x21, #24]
   6110c:	cbz	x0, 613b8 <my_regfree@@Base+0x608>
   61110:	ldr	w19, [x0]
   61114:	subs	w19, w19, #0x1
   61118:	b.mi	613a4 <my_regfree@@Base+0x5f4>  // b.first
   6111c:	stp	x23, x24, [sp, #48]
   61120:	sxtw	x20, w19
   61124:	b	611f4 <my_regfree@@Base+0x444>
   61128:	mov	w0, #0x80ff                	// #33023
   6112c:	movk	w0, #0x100, lsl #16
   61130:	and	w0, w3, w0
   61134:	mov	w4, #0xa                   	// #10
   61138:	movk	w4, #0x100, lsl #16
   6113c:	cmp	w0, w4
   61140:	b.ne	6118c <my_regfree@@Base+0x3dc>  // b.any
   61144:	cmp	w5, #0xa
   61148:	b.ne	60f04 <my_regfree@@Base+0x154>  // b.any
   6114c:	ldr	x0, [x6, #24]
   61150:	ldrb	w4, [x0, #184]
   61154:	and	x4, x4, #0xf
   61158:	add	x2, x2, x4
   6115c:	cmp	w7, #0x8, lsl #12
   61160:	b.ne	610a0 <my_regfree@@Base+0x2f0>  // b.any
   61164:	stp	x23, x24, [sp, #48]
   61168:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   6116c:	add	x3, x3, #0xc10
   61170:	add	x3, x3, #0xa88
   61174:	mov	w2, #0x5148                	// #20808
   61178:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   6117c:	add	x1, x1, #0xfb8
   61180:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   61184:	add	x0, x0, #0xe70
   61188:	bl	58e0 <__assert_fail@plt>
   6118c:	stp	x23, x24, [sp, #48]
   61190:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   61194:	add	x3, x3, #0xc10
   61198:	add	x3, x3, #0x550
   6119c:	mov	w2, #0xb6                  	// #182
   611a0:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   611a4:	add	x1, x1, #0xc80
   611a8:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   611ac:	add	x0, x0, #0x128
   611b0:	bl	58e0 <__assert_fail@plt>
   611b4:	stp	x23, x24, [sp, #48]
   611b8:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   611bc:	add	x3, x3, #0xc10
   611c0:	add	x3, x3, #0xa88
   611c4:	mov	w2, #0x5148                	// #20808
   611c8:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   611cc:	add	x1, x1, #0xfb8
   611d0:	adrp	x0, 61000 <my_regfree@@Base+0x250>
   611d4:	add	x0, x0, #0xe88
   611d8:	bl	58e0 <__assert_fail@plt>
   611dc:	cmp	w2, #0x4c
   611e0:	b.ne	61224 <my_regfree@@Base+0x474>  // b.any
   611e4:	sub	w19, w19, #0x1
   611e8:	sub	x20, x20, #0x1
   611ec:	cmn	w19, #0x1
   611f0:	b.eq	613a0 <my_regfree@@Base+0x5f0>  // b.none
   611f4:	ldr	x1, [x21, #24]
   611f8:	ldr	x0, [x1, #8]
   611fc:	ldrb	w2, [x0, x20]
   61200:	cmp	w2, #0x66
   61204:	b.eq	6129c <my_regfree@@Base+0x4ec>  // b.none
   61208:	b.hi	61250 <my_regfree@@Base+0x4a0>  // b.pmore
   6120c:	cmp	w2, #0x54
   61210:	b.eq	612ac <my_regfree@@Base+0x4fc>  // b.none
   61214:	b.ls	611dc <my_regfree@@Base+0x42c>  // b.plast
   61218:	cmp	w2, #0x61
   6121c:	b.eq	6122c <my_regfree@@Base+0x47c>  // b.none
   61220:	b	61280 <my_regfree@@Base+0x4d0>
   61224:	cmp	w2, #0x53
   61228:	b.ne	61280 <my_regfree@@Base+0x4d0>  // b.any
   6122c:	add	x1, x1, w19, sxtw #3
   61230:	ldr	x1, [x1, #16]
   61234:	cbz	x1, 611e4 <my_regfree@@Base+0x434>
   61238:	ldr	w2, [x1, #8]
   6123c:	cmp	w2, #0x1
   61240:	b.ls	61290 <my_regfree@@Base+0x4e0>  // b.plast
   61244:	sub	w2, w2, #0x1
   61248:	str	w2, [x1, #8]
   6124c:	b	611e4 <my_regfree@@Base+0x434>
   61250:	cmp	w2, #0x74
   61254:	b.eq	6132c <my_regfree@@Base+0x57c>  // b.none
   61258:	b.ls	61268 <my_regfree@@Base+0x4b8>  // b.plast
   6125c:	cmp	w2, #0x75
   61260:	b.eq	6122c <my_regfree@@Base+0x47c>  // b.none
   61264:	b	61280 <my_regfree@@Base+0x4d0>
   61268:	cmp	w2, #0x6c
   6126c:	b.eq	611e4 <my_regfree@@Base+0x434>  // b.none
   61270:	sub	w0, w2, #0x72
   61274:	and	w0, w0, #0xff
   61278:	cmp	w0, #0x1
   6127c:	b.ls	6122c <my_regfree@@Base+0x47c>  // b.plast
   61280:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   61284:	add	x1, x1, #0x428
   61288:	mov	x0, x22
   6128c:	bl	5420 <Perl_croak@plt>
   61290:	mov	x0, x22
   61294:	bl	5860 <Perl_sv_free2@plt>
   61298:	b	611e4 <my_regfree@@Base+0x434>
   6129c:	add	x1, x1, w19, sxtw #3
   612a0:	ldr	x0, [x1, #16]
   612a4:	bl	5650 <Perl_safesysfree@plt>
   612a8:	b	611e4 <my_regfree@@Base+0x434>
   612ac:	add	x1, x1, w19, sxtw #3
   612b0:	ldr	x24, [x1, #16]
   612b4:	mov	x0, x22
   612b8:	bl	5800 <Perl_op_refcnt_lock@plt>
   612bc:	ldr	w23, [x24]
   612c0:	sub	w23, w23, #0x1
   612c4:	str	w23, [x24]
   612c8:	mov	x0, x22
   612cc:	bl	5930 <Perl_op_refcnt_unlock@plt>
   612d0:	cbnz	w23, 611e4 <my_regfree@@Base+0x434>
   612d4:	ldr	x0, [x24, #16]
   612d8:	bl	5550 <free@plt>
   612dc:	ldr	x0, [x24, #8]
   612e0:	bl	5550 <free@plt>
   612e4:	ldr	x0, [x21, #24]
   612e8:	add	x0, x0, w19, sxtw #3
   612ec:	ldr	x0, [x0, #16]
   612f0:	bl	5550 <free@plt>
   612f4:	ldr	x0, [x21, #16]
   612f8:	cbz	x0, 61308 <my_regfree@@Base+0x558>
   612fc:	bl	5550 <free@plt>
   61300:	str	xzr, [x21, #16]
   61304:	b	611e4 <my_regfree@@Base+0x434>
   61308:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   6130c:	add	x3, x3, #0xc10
   61310:	add	x3, x3, #0xa88
   61314:	mov	w2, #0x517d                	// #20861
   61318:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   6131c:	add	x1, x1, #0xfb8
   61320:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   61324:	add	x0, x0, #0x418
   61328:	bl	58e0 <__assert_fail@plt>
   6132c:	add	x1, x1, w19, sxtw #3
   61330:	ldr	x24, [x1, #16]
   61334:	mov	x0, x22
   61338:	bl	5800 <Perl_op_refcnt_lock@plt>
   6133c:	ldr	w23, [x24]
   61340:	sub	w23, w23, #0x1
   61344:	str	w23, [x24]
   61348:	mov	x0, x22
   6134c:	bl	5930 <Perl_op_refcnt_unlock@plt>
   61350:	cbnz	w23, 611e4 <my_regfree@@Base+0x434>
   61354:	ldr	x0, [x24, #8]
   61358:	bl	5550 <free@plt>
   6135c:	ldr	x0, [x24, #16]
   61360:	bl	5550 <free@plt>
   61364:	ldr	x0, [x24, #24]
   61368:	bl	5550 <free@plt>
   6136c:	ldr	x0, [x24, #32]
   61370:	cbz	x0, 61378 <my_regfree@@Base+0x5c8>
   61374:	bl	5550 <free@plt>
   61378:	ldr	x0, [x24, #40]
   6137c:	cbz	x0, 61384 <my_regfree@@Base+0x5d4>
   61380:	bl	5550 <free@plt>
   61384:	ldr	x0, [x24, #48]
   61388:	bl	5550 <free@plt>
   6138c:	ldr	x0, [x21, #24]
   61390:	add	x0, x0, w19, sxtw #3
   61394:	ldr	x0, [x0, #16]
   61398:	bl	5550 <free@plt>
   6139c:	b	611e4 <my_regfree@@Base+0x434>
   613a0:	ldp	x23, x24, [sp, #48]
   613a4:	ldr	x0, [x21, #24]
   613a8:	ldr	x0, [x0, #8]
   613ac:	bl	5650 <Perl_safesysfree@plt>
   613b0:	ldr	x0, [x21, #24]
   613b4:	bl	5650 <Perl_safesysfree@plt>
   613b8:	mov	x0, x21
   613bc:	bl	5650 <Perl_safesysfree@plt>
   613c0:	ldp	x19, x20, [sp, #16]
   613c4:	ldp	x21, x22, [sp, #32]
   613c8:	ldp	x29, x30, [sp], #80
   613cc:	ret

00000000000613d0 <my_regdupe@@Base>:
   613d0:	stp	x29, x30, [sp, #-96]!
   613d4:	mov	x29, sp
   613d8:	stp	x19, x20, [sp, #16]
   613dc:	stp	x21, x22, [sp, #32]
   613e0:	stp	x23, x24, [sp, #48]
   613e4:	stp	x25, x26, [sp, #64]
   613e8:	stp	x27, x28, [sp, #80]
   613ec:	mov	x24, x0
   613f0:	mov	x26, x2
   613f4:	ldr	x2, [x1]
   613f8:	ldr	w0, [x1, #12]
   613fc:	and	w1, w0, #0xff
   61400:	cmp	w1, #0x8
   61404:	b.eq	61430 <my_regdupe@@Base+0x60>  // b.none
   61408:	mov	w3, #0x80ff                	// #33023
   6140c:	movk	w3, #0x100, lsl #16
   61410:	and	w0, w0, w3
   61414:	mov	w3, #0xa                   	// #10
   61418:	movk	w3, #0x100, lsl #16
   6141c:	cmp	w0, w3
   61420:	b.ne	61568 <my_regdupe@@Base+0x198>  // b.any
   61424:	cmp	w1, #0xa
   61428:	b.ne	61430 <my_regdupe@@Base+0x60>  // b.any
   6142c:	ldr	x2, [x2, #24]
   61430:	ldr	x20, [x2, #104]
   61434:	cbz	x26, 6158c <my_regdupe@@Base+0x1bc>
   61438:	ldr	x0, [x20, #8]
   6143c:	ldr	w28, [x0]
   61440:	sxtw	x0, w28
   61444:	add	x0, x0, #0xc
   61448:	lsl	x0, x0, #2
   6144c:	bl	5250 <Perl_safesysmalloc@plt>
   61450:	mov	x23, x0
   61454:	add	w2, w28, #0x1
   61458:	sbfiz	x2, x2, #2, #32
   6145c:	add	x1, x20, #0x28
   61460:	add	x0, x0, #0x28
   61464:	bl	4e60 <memcpy@plt>
   61468:	ldr	x0, [x20, #32]
   6146c:	cbz	x0, 615f8 <my_regdupe@@Base+0x228>
   61470:	mov	x0, #0x10                  	// #16
   61474:	bl	5250 <Perl_safesysmalloc@plt>
   61478:	mov	x19, x0
   6147c:	str	x0, [x23, #32]
   61480:	ldr	x0, [x20, #32]
   61484:	ldrsw	x0, [x0, #4]
   61488:	lsl	x0, x0, #5
   6148c:	bl	5250 <Perl_safesysmalloc@plt>
   61490:	str	x0, [x19, #8]
   61494:	ldr	x0, [x23, #32]
   61498:	ldr	x0, [x0, #8]
   6149c:	cbz	x0, 615b0 <my_regdupe@@Base+0x1e0>
   614a0:	ldr	x2, [x20, #32]
   614a4:	ldr	x1, [x2, #8]
   614a8:	cbz	x1, 615d4 <my_regdupe@@Base+0x204>
   614ac:	ldrsw	x2, [x2, #4]
   614b0:	lsl	x2, x2, #5
   614b4:	bl	4e60 <memcpy@plt>
   614b8:	ldr	x1, [x20, #32]
   614bc:	ldr	w0, [x1, #4]
   614c0:	cmp	w0, #0x0
   614c4:	b.le	6150c <my_regdupe@@Base+0x13c>
   614c8:	mov	w19, #0x0                   	// #0
   614cc:	sbfiz	x2, x19, #5, #32
   614d0:	ldr	x0, [x23, #32]
   614d4:	ldr	x21, [x0, #8]
   614d8:	add	x21, x21, x2
   614dc:	ldr	x0, [x1, #8]
   614e0:	add	x0, x0, x2
   614e4:	mov	x2, x26
   614e8:	ldr	x1, [x0, #24]
   614ec:	mov	x0, x24
   614f0:	bl	5170 <Perl_sv_dup_inc@plt>
   614f4:	str	x0, [x21, #24]
   614f8:	add	w19, w19, #0x1
   614fc:	ldr	x1, [x20, #32]
   61500:	ldr	w0, [x1, #4]
   61504:	cmp	w0, w19
   61508:	b.gt	614cc <my_regdupe@@Base+0xfc>
   6150c:	ldr	x1, [x23, #32]
   61510:	str	w0, [x1, #4]
   61514:	ldr	x0, [x23, #32]
   61518:	mov	w1, #0x1                   	// #1
   6151c:	str	w1, [x0]
   61520:	str	xzr, [x23, #16]
   61524:	ldr	x0, [x20, #24]
   61528:	cbz	x0, 617b4 <my_regdupe@@Base+0x3e4>
   6152c:	ldr	w25, [x0]
   61530:	sxtw	x19, w25
   61534:	add	x0, x19, #0x3
   61538:	lsl	x0, x0, #3
   6153c:	bl	5250 <Perl_safesysmalloc@plt>
   61540:	mov	x22, x0
   61544:	mov	x0, x19
   61548:	bl	5250 <Perl_safesysmalloc@plt>
   6154c:	str	x0, [x22, #8]
   61550:	str	w25, [x22]
   61554:	cmp	w25, #0x0
   61558:	b.le	61754 <my_regdupe@@Base+0x384>
   6155c:	mov	x19, #0x0                   	// #0
   61560:	add	x27, x22, #0x10
   61564:	b	61624 <my_regdupe@@Base+0x254>
   61568:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   6156c:	add	x3, x3, #0xc10
   61570:	add	x3, x3, #0x550
   61574:	mov	w2, #0xb6                  	// #182
   61578:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   6157c:	add	x1, x1, #0xc80
   61580:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   61584:	add	x0, x0, #0x128
   61588:	bl	58e0 <__assert_fail@plt>
   6158c:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   61590:	add	x3, x3, #0xc10
   61594:	add	x3, x3, #0xa98
   61598:	mov	w2, #0x522d                	// #21037
   6159c:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   615a0:	add	x1, x1, #0xfb8
   615a4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   615a8:	add	x0, x0, #0x448
   615ac:	bl	58e0 <__assert_fail@plt>
   615b0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   615b4:	add	x3, x3, #0xc10
   615b8:	add	x3, x3, #0xa98
   615bc:	mov	w2, #0x523b                	// #21051
   615c0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   615c4:	add	x1, x1, #0xfb8
   615c8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   615cc:	add	x0, x0, #0x450
   615d0:	bl	58e0 <__assert_fail@plt>
   615d4:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   615d8:	add	x3, x3, #0xc10
   615dc:	add	x3, x3, #0xa98
   615e0:	mov	w2, #0x523b                	// #21051
   615e4:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   615e8:	add	x1, x1, #0xfb8
   615ec:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   615f0:	add	x0, x0, #0x478
   615f4:	bl	58e0 <__assert_fail@plt>
   615f8:	str	xzr, [x23, #32]
   615fc:	b	61520 <my_regdupe@@Base+0x150>
   61600:	cmp	w0, #0x4c
   61604:	b.ne	6166c <my_regdupe@@Base+0x29c>  // b.any
   61608:	ldr	x0, [x20, #24]
   6160c:	add	x21, x0, w21, sxtw #3
   61610:	ldr	x0, [x21, #16]
   61614:	str	x0, [x27, x19, lsl #3]
   61618:	add	x19, x19, #0x1
   6161c:	cmp	w25, w19
   61620:	b.le	61754 <my_regdupe@@Base+0x384>
   61624:	mov	w21, w19
   61628:	ldr	x0, [x20, #24]
   6162c:	ldr	x0, [x0, #8]
   61630:	ldrb	w1, [x0, x19]
   61634:	ldr	x0, [x22, #8]
   61638:	strb	w1, [x0, x19]
   6163c:	ldr	x0, [x22, #8]
   61640:	ldrb	w0, [x0, x19]
   61644:	cmp	w0, #0x66
   61648:	b.eq	616e0 <my_regdupe@@Base+0x310>  // b.none
   6164c:	b.hi	61694 <my_regdupe@@Base+0x2c4>  // b.pmore
   61650:	cmp	w0, #0x54
   61654:	b.eq	61720 <my_regdupe@@Base+0x350>  // b.none
   61658:	cmp	w0, #0x54
   6165c:	b.ls	61600 <my_regdupe@@Base+0x230>  // b.plast
   61660:	cmp	w0, #0x61
   61664:	b.eq	61674 <my_regdupe@@Base+0x2a4>  // b.none
   61668:	b	616c4 <my_regdupe@@Base+0x2f4>
   6166c:	cmp	w0, #0x53
   61670:	b.ne	616c4 <my_regdupe@@Base+0x2f4>  // b.any
   61674:	ldr	x0, [x20, #24]
   61678:	add	x21, x0, w21, sxtw #3
   6167c:	mov	x2, x26
   61680:	ldr	x1, [x21, #16]
   61684:	mov	x0, x24
   61688:	bl	5170 <Perl_sv_dup_inc@plt>
   6168c:	str	x0, [x27, x19, lsl #3]
   61690:	b	61618 <my_regdupe@@Base+0x248>
   61694:	cmp	w0, #0x74
   61698:	b.eq	61728 <my_regdupe@@Base+0x358>  // b.none
   6169c:	b.ls	616ac <my_regdupe@@Base+0x2dc>  // b.plast
   616a0:	cmp	w0, #0x75
   616a4:	b.eq	61674 <my_regdupe@@Base+0x2a4>  // b.none
   616a8:	b	616c4 <my_regdupe@@Base+0x2f4>
   616ac:	cmp	w0, #0x6c
   616b0:	b.eq	61608 <my_regdupe@@Base+0x238>  // b.none
   616b4:	sub	w0, w0, #0x72
   616b8:	and	w0, w0, #0xff
   616bc:	cmp	w0, #0x1
   616c0:	b.ls	61674 <my_regdupe@@Base+0x2a4>  // b.plast
   616c4:	ldr	x0, [x20, #24]
   616c8:	ldr	x0, [x0, #8]
   616cc:	ldrb	w2, [x0, x19]
   616d0:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   616d4:	add	x1, x1, #0x4a0
   616d8:	mov	x0, x24
   616dc:	bl	5420 <Perl_croak@plt>
   616e0:	mov	x0, #0x38                  	// #56
   616e4:	bl	5250 <Perl_safesysmalloc@plt>
   616e8:	str	x0, [x27, x19, lsl #3]
   616ec:	ldr	x1, [x20, #24]
   616f0:	add	x1, x1, w19, sxtw #3
   616f4:	ldr	x1, [x1, #16]
   616f8:	ldp	x2, x3, [x1]
   616fc:	stp	x2, x3, [x0]
   61700:	ldp	x2, x3, [x1, #16]
   61704:	stp	x2, x3, [x0, #16]
   61708:	ldp	x2, x3, [x1, #32]
   6170c:	stp	x2, x3, [x0, #32]
   61710:	ldr	x1, [x1, #48]
   61714:	str	x1, [x0, #48]
   61718:	str	x0, [x23, #16]
   6171c:	b	61618 <my_regdupe@@Base+0x248>
   61720:	ldr	x0, [x20, #16]
   61724:	str	x0, [x23, #16]
   61728:	mov	x0, x24
   6172c:	bl	5800 <Perl_op_refcnt_lock@plt>
   61730:	ldr	x0, [x20, #24]
   61734:	add	x0, x0, w21, sxtw #3
   61738:	ldr	x1, [x0, #16]
   6173c:	ldr	w0, [x1]
   61740:	add	w0, w0, #0x1
   61744:	str	w0, [x1]
   61748:	mov	x0, x24
   6174c:	bl	5930 <Perl_op_refcnt_unlock@plt>
   61750:	b	61608 <my_regdupe@@Base+0x238>
   61754:	str	x22, [x23, #24]
   61758:	ldr	w0, [x20]
   6175c:	str	w0, [x23]
   61760:	ldr	x0, [x20, #8]
   61764:	cbz	x0, 61794 <my_regdupe@@Base+0x3c4>
   61768:	lsl	w19, w28, #1
   6176c:	add	w19, w19, #0x1
   61770:	sbfiz	x19, x19, #2, #32
   61774:	mov	x0, x19
   61778:	bl	5250 <Perl_safesysmalloc@plt>
   6177c:	str	x0, [x23, #8]
   61780:	cbz	x0, 617bc <my_regdupe@@Base+0x3ec>
   61784:	ldr	x1, [x20, #8]
   61788:	cbz	x1, 617e0 <my_regdupe@@Base+0x410>
   6178c:	mov	x2, x19
   61790:	bl	4e60 <memcpy@plt>
   61794:	mov	x0, x23
   61798:	ldp	x19, x20, [sp, #16]
   6179c:	ldp	x21, x22, [sp, #32]
   617a0:	ldp	x23, x24, [sp, #48]
   617a4:	ldp	x25, x26, [sp, #64]
   617a8:	ldp	x27, x28, [sp, #80]
   617ac:	ldp	x29, x30, [sp], #96
   617b0:	ret
   617b4:	str	xzr, [x23, #24]
   617b8:	b	61758 <my_regdupe@@Base+0x388>
   617bc:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   617c0:	add	x3, x3, #0xc10
   617c4:	add	x3, x3, #0xa98
   617c8:	mov	w2, #0x5291                	// #21137
   617cc:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   617d0:	add	x1, x1, #0xfb8
   617d4:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   617d8:	add	x0, x0, #0x4d0
   617dc:	bl	58e0 <__assert_fail@plt>
   617e0:	adrp	x3, 7d000 <boot_re@@Base+0x1b41c>
   617e4:	add	x3, x3, #0xc10
   617e8:	add	x3, x3, #0xa98
   617ec:	mov	w2, #0x5291                	// #21137
   617f0:	adrp	x1, 75000 <boot_re@@Base+0x1341c>
   617f4:	add	x1, x1, #0xfb8
   617f8:	adrp	x0, 7d000 <boot_re@@Base+0x1b41c>
   617fc:	add	x0, x0, #0x4f0
   61800:	bl	58e0 <__assert_fail@plt>
   61804:	stp	x29, x30, [sp, #-64]!
   61808:	mov	x29, sp
   6180c:	stp	x19, x20, [sp, #16]
   61810:	stp	x21, x22, [sp, #32]
   61814:	stp	x23, x24, [sp, #48]
   61818:	mov	x19, x0
   6181c:	mov	x20, x1
   61820:	ldr	x21, [x0]
   61824:	ldr	w0, [x0, #2368]
   61828:	tbnz	w0, #1, 61908 <my_regdupe@@Base+0x538>
   6182c:	ldr	x0, [x19, #120]
   61830:	ldr	x1, [x19, #112]
   61834:	cmp	x0, x1
   61838:	b.ls	61930 <my_regdupe@@Base+0x560>  // b.plast
   6183c:	sub	x1, x0, #0x4
   61840:	str	x1, [x19, #120]
   61844:	ldr	w0, [x0]
   61848:	ldr	x1, [x19, #24]
   6184c:	add	w2, w0, #0x1
   61850:	add	x0, x1, w0, sxtw #3
   61854:	sub	x0, x21, x0
   61858:	asr	x0, x0, #3
   6185c:	cmp	w0, #0x1
   61860:	b.ne	61950 <my_regdupe@@Base+0x580>  // b.any
   61864:	sxtw	x23, w2
   61868:	sbfiz	x22, x2, #3, #32
   6186c:	ldr	x1, [x1, x23, lsl #3]
   61870:	mov	x0, x19
   61874:	bl	4e90 <Perl_get_re_arg@plt>
   61878:	mov	x20, x0
   6187c:	cbz	x0, 618dc <my_regdupe@@Base+0x50c>
   61880:	ldr	x1, [x0]
   61884:	ldr	w0, [x0, #12]
   61888:	and	w2, w0, #0xff
   6188c:	cmp	w2, #0x8
   61890:	b.eq	618bc <my_regdupe@@Base+0x4ec>  // b.none
   61894:	mov	w3, #0x80ff                	// #33023
   61898:	movk	w3, #0x100, lsl #16
   6189c:	and	w0, w0, w3
   618a0:	mov	w3, #0xa                   	// #10
   618a4:	movk	w3, #0x100, lsl #16
   618a8:	cmp	w0, w3
   618ac:	b.ne	61960 <my_regdupe@@Base+0x590>  // b.any
   618b0:	cmp	w2, #0xa
   618b4:	b.ne	618bc <my_regdupe@@Base+0x4ec>  // b.any
   618b8:	ldr	x1, [x1, #24]
   618bc:	ldr	x2, [x1, #32]
   618c0:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   618c4:	ldr	x0, [x0, #3848]
   618c8:	cmp	x2, x0
   618cc:	adrp	x0, 91000 <boot_re@@Base+0x2f41c>
   618d0:	ldr	x0, [x0, #3976]
   618d4:	ccmp	x2, x0, #0x4, ne  // ne = any
   618d8:	b.eq	61984 <my_regdupe@@Base+0x5b4>  // b.none
   618dc:	ldr	x0, [x19, #24]
   618e0:	add	x1, x19, #0x150
   618e4:	str	x1, [x0, x23, lsl #3]
   618e8:	ldr	x0, [x19, #24]
   618ec:	add	x0, x0, x22
   618f0:	str	x0, [x19]
   618f4:	ldp	x19, x20, [sp, #16]
   618f8:	ldp	x21, x22, [sp, #32]
   618fc:	ldp	x23, x24, [sp, #48]
   61900:	ldp	x29, x30, [sp], #64
   61904:	ret
   61908:	ldr	w0, [x19, #2368]
   6190c:	tbz	w0, #20, 6182c <my_regdupe@@Base+0x45c>
   61910:	mov	x0, x19
   61914:	bl	58f0 <Perl_PerlIO_stderr@plt>
   61918:	ldr	x2, [x19, #120]
   6191c:	ldrsw	x3, [x2, #-4]!
   61920:	adrp	x1, 7e000 <boot_re@@Base+0x1c41c>
   61924:	add	x1, x1, #0x6e0
   61928:	bl	5730 <PerlIO_printf@plt>
   6192c:	b	6182c <my_regdupe@@Base+0x45c>
   61930:	adrp	x3, 7e000 <boot_re@@Base+0x1c41c>
   61934:	add	x3, x3, #0x758
   61938:	mov	w2, #0xac                  	// #172
   6193c:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   61940:	add	x1, x1, #0xc80
   61944:	adrp	x0, 7e000 <boot_re@@Base+0x1c41c>
   61948:	add	x0, x0, #0x6f8
   6194c:	bl	58e0 <__assert_fail@plt>
   61950:	adrp	x1, 76000 <boot_re@@Base+0x1441c>
   61954:	add	x1, x1, #0x970
   61958:	mov	x0, x20
   6195c:	bl	5380 <Perl_croak_xs_usage@plt>
   61960:	adrp	x3, 7e000 <boot_re@@Base+0x1c41c>
   61964:	add	x3, x3, #0x758
   61968:	add	x3, x3, #0x10
   6196c:	mov	w2, #0xb6                  	// #182
   61970:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   61974:	add	x1, x1, #0xc80
   61978:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   6197c:	add	x0, x0, #0x128
   61980:	bl	58e0 <__assert_fail@plt>
   61984:	add	x23, x19, #0x168
   61988:	ldr	x0, [x1, #88]
   6198c:	ldr	x1, [x0, #24]
   61990:	cbz	x1, 61a44 <my_regdupe@@Base+0x674>
   61994:	mov	w2, #0x12                  	// #18
   61998:	mov	x0, x19
   6199c:	bl	5980 <Perl_newSVsv_flags@plt>
   619a0:	mov	x1, x0
   619a4:	mov	x0, x19
   619a8:	bl	55d0 <Perl_sv_2mortal@plt>
   619ac:	mov	x24, x0
   619b0:	ldr	x1, [x20]
   619b4:	ldr	w0, [x20, #12]
   619b8:	and	w2, w0, #0xff
   619bc:	cmp	w2, #0x8
   619c0:	b.eq	619ec <my_regdupe@@Base+0x61c>  // b.none
   619c4:	mov	w3, #0x80ff                	// #33023
   619c8:	movk	w3, #0x100, lsl #16
   619cc:	and	w0, w0, w3
   619d0:	mov	w3, #0xa                   	// #10
   619d4:	movk	w3, #0x100, lsl #16
   619d8:	cmp	w0, w3
   619dc:	b.ne	61a70 <my_regdupe@@Base+0x6a0>  // b.any
   619e0:	cmp	w2, #0xa
   619e4:	b.ne	619ec <my_regdupe@@Base+0x61c>  // b.any
   619e8:	ldr	x1, [x1, #24]
   619ec:	ldr	x0, [x1, #88]
   619f0:	ldr	x1, [x0, #64]
   619f4:	cbz	x1, 61a94 <my_regdupe@@Base+0x6c4>
   619f8:	mov	w2, #0x12                  	// #18
   619fc:	mov	x0, x19
   61a00:	bl	5980 <Perl_newSVsv_flags@plt>
   61a04:	mov	x1, x0
   61a08:	mov	x0, x19
   61a0c:	bl	55d0 <Perl_sv_2mortal@plt>
   61a10:	mov	x23, x0
   61a14:	sub	x1, x21, #0x8
   61a18:	ldr	x2, [x19, #32]
   61a1c:	sub	x2, x2, x1
   61a20:	cmp	x2, #0x8
   61a24:	b.le	61abc <my_regdupe@@Base+0x6ec>
   61a28:	str	x24, [x1, #8]
   61a2c:	str	x23, [x1, #16]
   61a30:	add	x2, x22, #0x8
   61a34:	ldr	x1, [x19, #24]
   61a38:	add	x2, x1, x2
   61a3c:	str	x2, [x19]
   61a40:	b	618f4 <my_regdupe@@Base+0x524>
   61a44:	ldr	x1, [x0, #32]
   61a48:	mov	x24, x23
   61a4c:	cbz	x1, 619b0 <my_regdupe@@Base+0x5e0>
   61a50:	mov	w2, #0x12                  	// #18
   61a54:	mov	x0, x19
   61a58:	bl	5980 <Perl_newSVsv_flags@plt>
   61a5c:	mov	x1, x0
   61a60:	mov	x0, x19
   61a64:	bl	55d0 <Perl_sv_2mortal@plt>
   61a68:	mov	x24, x0
   61a6c:	b	619b0 <my_regdupe@@Base+0x5e0>
   61a70:	adrp	x3, 7e000 <boot_re@@Base+0x1c41c>
   61a74:	add	x3, x3, #0x758
   61a78:	add	x3, x3, #0x10
   61a7c:	mov	w2, #0xb6                  	// #182
   61a80:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   61a84:	add	x1, x1, #0xc80
   61a88:	adrp	x0, 62000 <boot_re@@Base+0x41c>
   61a8c:	add	x0, x0, #0x128
   61a90:	bl	58e0 <__assert_fail@plt>
   61a94:	ldr	x1, [x0, #72]
   61a98:	cbz	x1, 61a14 <my_regdupe@@Base+0x644>
   61a9c:	mov	w2, #0x12                  	// #18
   61aa0:	mov	x0, x19
   61aa4:	bl	5980 <Perl_newSVsv_flags@plt>
   61aa8:	mov	x1, x0
   61aac:	mov	x0, x19
   61ab0:	bl	55d0 <Perl_sv_2mortal@plt>
   61ab4:	mov	x23, x0
   61ab8:	b	61a14 <my_regdupe@@Base+0x644>
   61abc:	mov	x3, #0x2                   	// #2
   61ac0:	mov	x2, x1
   61ac4:	mov	x0, x19
   61ac8:	bl	4f40 <Perl_stack_grow@plt>
   61acc:	mov	x1, x0
   61ad0:	b	61a28 <my_regdupe@@Base+0x658>
   61ad4:	stp	x29, x30, [sp, #-48]!
   61ad8:	mov	x29, sp
   61adc:	stp	x19, x20, [sp, #16]
   61ae0:	str	x21, [sp, #32]
   61ae4:	mov	x19, x0
   61ae8:	mov	x21, x1
   61aec:	ldr	x20, [x0]
   61af0:	ldr	w0, [x0, #2368]
   61af4:	tbnz	w0, #1, 61b70 <my_regdupe@@Base+0x7a0>
   61af8:	ldr	x0, [x19, #120]
   61afc:	ldr	x2, [x19, #112]
   61b00:	cmp	x0, x2
   61b04:	b.ls	61b98 <my_regdupe@@Base+0x7c8>  // b.plast
   61b08:	sub	x1, x0, #0x4
   61b0c:	str	x1, [x19, #120]
   61b10:	ldrsw	x0, [x0]
   61b14:	ldr	x1, [x19, #24]
   61b18:	add	x0, x1, x0, lsl #3
   61b1c:	sub	x0, x20, x0
   61b20:	asr	x0, x0, #3
   61b24:	cbnz	w0, 61bb8 <my_regdupe@@Base+0x7e8>
   61b28:	strb	wzr, [x19, #2601]
   61b2c:	ldr	x0, [x19, #32]
   61b30:	sub	x0, x0, x20
   61b34:	cmp	x0, #0x0
   61b38:	b.le	61bc8 <my_regdupe@@Base+0x7f8>
   61b3c:	adrp	x1, 91000 <boot_re@@Base+0x2f41c>
   61b40:	ldr	x1, [x1, #3976]
   61b44:	mov	x0, x19
   61b48:	bl	58d0 <Perl_newSViv@plt>
   61b4c:	mov	x1, x0
   61b50:	mov	x0, x19
   61b54:	bl	55d0 <Perl_sv_2mortal@plt>
   61b58:	str	x0, [x20, #8]!
   61b5c:	str	x20, [x19]
   61b60:	ldp	x19, x20, [sp, #16]
   61b64:	ldr	x21, [sp, #32]
   61b68:	ldp	x29, x30, [sp], #48
   61b6c:	ret
   61b70:	ldr	w0, [x19, #2368]
   61b74:	tbz	w0, #20, 61af8 <my_regdupe@@Base+0x728>
   61b78:	mov	x0, x19
   61b7c:	bl	58f0 <Perl_PerlIO_stderr@plt>
   61b80:	ldr	x2, [x19, #120]
   61b84:	ldrsw	x3, [x2, #-4]!
   61b88:	adrp	x1, 7e000 <boot_re@@Base+0x1c41c>
   61b8c:	add	x1, x1, #0x6e0
   61b90:	bl	5730 <PerlIO_printf@plt>
   61b94:	b	61af8 <my_regdupe@@Base+0x728>
   61b98:	adrp	x3, 7e000 <boot_re@@Base+0x1c41c>
   61b9c:	add	x3, x3, #0x758
   61ba0:	mov	w2, #0xac                  	// #172
   61ba4:	adrp	x1, 61000 <my_regfree@@Base+0x250>
   61ba8:	add	x1, x1, #0xc80
   61bac:	adrp	x0, 7e000 <boot_re@@Base+0x1c41c>
   61bb0:	add	x0, x0, #0x6f8
   61bb4:	bl	58e0 <__assert_fail@plt>
   61bb8:	adrp	x1, 7d000 <boot_re@@Base+0x1b41c>
   61bbc:	add	x1, x1, #0x20
   61bc0:	mov	x0, x21
   61bc4:	bl	5380 <Perl_croak_xs_usage@plt>
   61bc8:	mov	x3, #0x1                   	// #1
   61bcc:	mov	x2, x20
   61bd0:	mov	x1, x20
   61bd4:	mov	x0, x19
   61bd8:	bl	4f40 <Perl_stack_grow@plt>
   61bdc:	mov	x20, x0
   61be0:	b	61b3c <my_regdupe@@Base+0x76c>

0000000000061be4 <boot_re@@Base>:
   61be4:	stp	x29, x30, [sp, #-48]!
   61be8:	mov	x29, sp
   61bec:	stp	x19, x20, [sp, #16]
   61bf0:	str	x21, [sp, #32]
   61bf4:	mov	x19, x0
   61bf8:	adrp	x20, 7e000 <boot_re@@Base+0x1c41c>
   61bfc:	add	x20, x20, #0x730
   61c00:	mov	x2, x20
   61c04:	mov	x1, x0
   61c08:	mov	w0, #0xffff00e0            	// #-65312
   61c0c:	bl	56d0 <Perl_xs_handshake@plt>
   61c10:	mov	w21, w0
   61c14:	adrp	x2, 61000 <my_regfree@@Base+0x250>
   61c18:	add	x2, x2, #0xad4
   61c1c:	adrp	x1, 7e000 <boot_re@@Base+0x1c41c>
   61c20:	add	x1, x1, #0x738
   61c24:	mov	x0, x19
   61c28:	bl	5540 <Perl_newXS_deffile@plt>
   61c2c:	mov	w5, #0x0                   	// #0
   61c30:	adrp	x4, 6a000 <boot_re@@Base+0x841c>
   61c34:	add	x4, x4, #0xf80
   61c38:	mov	x3, x20
   61c3c:	adrp	x2, 61000 <my_regfree@@Base+0x250>
   61c40:	add	x2, x2, #0x804
   61c44:	adrp	x1, 7e000 <boot_re@@Base+0x1c41c>
   61c48:	add	x1, x1, #0x748
   61c4c:	mov	x0, x19
   61c50:	bl	55c0 <Perl_newXS_flags@plt>
   61c54:	mov	w1, w21
   61c58:	mov	x0, x19
   61c5c:	bl	5210 <Perl_xs_boot_epilog@plt>
   61c60:	ldp	x19, x20, [sp, #16]
   61c64:	ldr	x21, [sp, #32]
   61c68:	ldp	x29, x30, [sp], #48
   61c6c:	ret

Disassembly of section .fini:

0000000000061c70 <.fini>:
   61c70:	stp	x29, x30, [sp, #-16]!
   61c74:	mov	x29, sp
   61c78:	ldp	x29, x30, [sp], #16
   61c7c:	ret
