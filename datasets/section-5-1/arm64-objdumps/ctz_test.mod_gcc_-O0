
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ctz_test.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x458>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	ldr	w0, [sp, #28]
  10:	orr	w0, w0, #0x1
  14:	str	w0, [sp, #28]
  18:	str	wzr, [sp, #44]
  1c:	b	bc <grub_mod_init-0x39c>
  20:	ldr	w0, [sp, #44]
  24:	ldr	w1, [sp, #28]
  28:	lsl	w0, w1, w0
  2c:	rbit	w0, w0
  30:	clz	w0, w0
  34:	ldr	w1, [sp, #44]
  38:	cmp	w1, w0
  3c:	cset	w0, eq  // eq = none
  40:	and	w0, w0, #0xff
  44:	mov	w8, w0
  48:	ldr	w0, [sp, #44]
  4c:	ldr	w1, [sp, #28]
  50:	lsl	w0, w1, w0
  54:	mov	w2, w0
  58:	ldr	w0, [sp, #44]
  5c:	ldr	w1, [sp, #28]
  60:	lsl	w0, w1, w0
  64:	rbit	w0, w0
  68:	clz	w0, w0
  6c:	mov	w7, w0
  70:	mov	x6, x2
  74:	adrp	x0, 0 <grub_mod_init-0x458>
  78:	add	x0, x0, #0x0
  7c:	ldr	x5, [x0]
  80:	adrp	x0, 0 <grub_mod_init-0x458>
  84:	add	x0, x0, #0x0
  88:	ldr	x4, [x0]
  8c:	mov	w3, #0x2b                  	// #43
  90:	adrp	x0, 0 <grub_mod_init-0x458>
  94:	add	x0, x0, #0x0
  98:	ldr	x2, [x0]
  9c:	adrp	x0, 0 <grub_mod_init-0x458>
  a0:	add	x0, x0, #0x0
  a4:	ldr	x1, [x0]
  a8:	mov	w0, w8
  ac:	bl	0 <grub_test_assert_helper>
  b0:	ldr	w0, [sp, #44]
  b4:	add	w0, w0, #0x1
  b8:	str	w0, [sp, #44]
  bc:	ldr	w0, [sp, #44]
  c0:	cmp	w0, #0x1f
  c4:	b.le	20 <grub_mod_init-0x438>
  c8:	nop
  cc:	nop
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
	...
  f8:	stp	x29, x30, [sp, #-48]!
  fc:	mov	x29, sp
 100:	str	x0, [sp, #24]
 104:	ldr	x0, [sp, #24]
 108:	orr	x0, x0, #0x1
 10c:	str	x0, [sp, #24]
 110:	str	wzr, [sp, #44]
 114:	b	1b8 <grub_mod_init-0x2a0>
 118:	ldr	w0, [sp, #44]
 11c:	ldr	x1, [sp, #24]
 120:	lsl	x0, x1, x0
 124:	rbit	x0, x0
 128:	clz	x0, x0
 12c:	mov	w1, w0
 130:	ldr	w0, [sp, #44]
 134:	cmp	w0, w1
 138:	cset	w0, eq  // eq = none
 13c:	and	w0, w0, #0xff
 140:	mov	w8, w0
 144:	ldr	w0, [sp, #44]
 148:	ldr	x1, [sp, #24]
 14c:	lsl	x0, x1, x0
 150:	mov	x2, x0
 154:	ldr	w0, [sp, #44]
 158:	ldr	x1, [sp, #24]
 15c:	lsl	x0, x1, x0
 160:	rbit	w0, w0
 164:	clz	w0, w0
 168:	mov	w7, w0
 16c:	mov	x6, x2
 170:	adrp	x0, 0 <grub_mod_init-0x458>
 174:	add	x0, x0, #0x0
 178:	ldr	x5, [x0]
 17c:	adrp	x0, 0 <grub_mod_init-0x458>
 180:	add	x0, x0, #0x0
 184:	ldr	x4, [x0]
 188:	mov	w3, #0x38                  	// #56
 18c:	adrp	x0, 0 <grub_mod_init-0x458>
 190:	add	x0, x0, #0x0
 194:	ldr	x2, [x0]
 198:	adrp	x0, 0 <grub_mod_init-0x458>
 19c:	add	x0, x0, #0x0
 1a0:	ldr	x1, [x0]
 1a4:	mov	w0, w8
 1a8:	bl	0 <grub_test_assert_helper>
 1ac:	ldr	w0, [sp, #44]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [sp, #44]
 1b8:	ldr	w0, [sp, #44]
 1bc:	cmp	w0, #0x3f
 1c0:	b.le	118 <grub_mod_init-0x340>
 1c4:	nop
 1c8:	nop
 1cc:	ldp	x29, x30, [sp], #48
 1d0:	ret
 1d4:	nop
	...
 1f8:	stp	x29, x30, [sp, #-48]!
 1fc:	mov	x29, sp
 200:	str	x0, [sp, #24]
 204:	ldr	x0, [sp, #24]
 208:	orr	x0, x0, #0x1
 20c:	str	x0, [sp, #24]
 210:	str	wzr, [sp, #44]
 214:	b	2b8 <grub_mod_init-0x1a0>
 218:	ldr	w0, [sp, #44]
 21c:	ldr	x1, [sp, #24]
 220:	lsl	x0, x1, x0
 224:	rbit	x0, x0
 228:	clz	x0, x0
 22c:	mov	w1, w0
 230:	ldr	w0, [sp, #44]
 234:	cmp	w0, w1
 238:	cset	w0, eq  // eq = none
 23c:	and	w0, w0, #0xff
 240:	mov	w8, w0
 244:	ldr	w0, [sp, #44]
 248:	ldr	x1, [sp, #24]
 24c:	lsl	x0, x1, x0
 250:	mov	x2, x0
 254:	ldr	w0, [sp, #44]
 258:	ldr	x1, [sp, #24]
 25c:	lsl	x0, x1, x0
 260:	rbit	w0, w0
 264:	clz	w0, w0
 268:	mov	w7, w0
 26c:	mov	x6, x2
 270:	adrp	x0, 0 <grub_mod_init-0x458>
 274:	add	x0, x0, #0x0
 278:	ldr	x5, [x0]
 27c:	adrp	x0, 0 <grub_mod_init-0x458>
 280:	add	x0, x0, #0x0
 284:	ldr	x4, [x0]
 288:	mov	w3, #0x46                  	// #70
 28c:	adrp	x0, 0 <grub_mod_init-0x458>
 290:	add	x0, x0, #0x0
 294:	ldr	x2, [x0]
 298:	adrp	x0, 0 <grub_mod_init-0x458>
 29c:	add	x0, x0, #0x0
 2a0:	ldr	x1, [x0]
 2a4:	mov	w0, w8
 2a8:	bl	0 <grub_test_assert_helper>
 2ac:	ldr	w0, [sp, #44]
 2b0:	add	w0, w0, #0x1
 2b4:	str	w0, [sp, #44]
 2b8:	ldr	w0, [sp, #44]
 2bc:	cmp	w0, #0x3f
 2c0:	b.le	218 <grub_mod_init-0x240>
 2c4:	nop
 2c8:	nop
 2cc:	ldp	x29, x30, [sp], #48
 2d0:	ret
 2d4:	nop
	...
 2f8:	stp	x29, x30, [sp, #-32]!
 2fc:	mov	x29, sp
 300:	str	x0, [sp, #24]
 304:	ldr	x0, [sp, #24]
 308:	bl	0 <grub_mod_init-0x458>
 30c:	ldr	x0, [sp, #24]
 310:	bl	f8 <grub_mod_init-0x360>
 314:	ldr	x0, [sp, #24]
 318:	bl	1f8 <grub_mod_init-0x260>
 31c:	nop
 320:	ldp	x29, x30, [sp], #32
 324:	ret
 328:	stp	x29, x30, [sp, #-48]!
 32c:	mov	x29, sp
 330:	mov	x0, #0x194                 	// #404
 334:	str	x0, [sp, #40]
 338:	mov	x0, #0x7                   	// #7
 33c:	str	x0, [sp, #32]
 340:	str	xzr, [sp, #24]
 344:	b	36c <grub_mod_init-0xec>
 348:	adrp	x0, 0 <grub_mod_init-0x458>
 34c:	add	x0, x0, #0x0
 350:	ldr	x0, [x0]
 354:	ldr	x1, [sp, #24]
 358:	ldr	x0, [x0, x1, lsl #3]
 35c:	bl	2f8 <grub_mod_init-0x160>
 360:	ldr	x0, [sp, #24]
 364:	add	x0, x0, #0x1
 368:	str	x0, [sp, #24]
 36c:	ldr	x0, [sp, #24]
 370:	cmp	x0, #0x4
 374:	b.ls	348 <grub_mod_init-0x110>  // b.plast
 378:	str	xzr, [sp, #24]
 37c:	b	42c <grub_mod_init-0x2c>
 380:	ldr	x1, [sp, #40]
 384:	mov	x0, x1
 388:	lsl	x0, x0, #4
 38c:	add	x2, x0, x1
 390:	ldr	x1, [sp, #32]
 394:	mov	x0, x1
 398:	lsl	x0, x0, #1
 39c:	add	x0, x0, x1
 3a0:	lsl	x0, x0, #2
 3a4:	add	x0, x0, x1
 3a8:	add	x0, x2, x0
 3ac:	str	x0, [sp, #40]
 3b0:	ldr	x1, [sp, #40]
 3b4:	mov	x0, x1
 3b8:	lsl	x0, x0, #1
 3bc:	add	x0, x0, x1
 3c0:	lsl	x0, x0, #3
 3c4:	sub	x2, x0, x1
 3c8:	ldr	x1, [sp, #32]
 3cc:	mov	x0, x1
 3d0:	lsl	x0, x0, #3
 3d4:	sub	x0, x0, x1
 3d8:	lsl	x0, x0, #2
 3dc:	add	x0, x0, x1
 3e0:	add	x0, x2, x0
 3e4:	str	x0, [sp, #32]
 3e8:	ldr	x0, [sp, #32]
 3ec:	cmp	x0, #0x0
 3f0:	b.ne	3fc <grub_mod_init-0x5c>  // b.any
 3f4:	mov	x0, #0x1                   	// #1
 3f8:	str	x0, [sp, #32]
 3fc:	ldr	x0, [sp, #40]
 400:	cmp	x0, #0x0
 404:	b.ne	410 <grub_mod_init-0x48>  // b.any
 408:	mov	x0, #0x1                   	// #1
 40c:	str	x0, [sp, #40]
 410:	ldr	x0, [sp, #40]
 414:	bl	2f8 <grub_mod_init-0x160>
 418:	ldr	x0, [sp, #32]
 41c:	bl	2f8 <grub_mod_init-0x160>
 420:	ldr	x0, [sp, #24]
 424:	add	x0, x0, #0x1
 428:	str	x0, [sp, #24]
 42c:	ldr	x1, [sp, #24]
 430:	mov	x0, #0x9c3f                	// #39999
 434:	cmp	x1, x0
 438:	b.ls	380 <grub_mod_init-0xd8>  // b.plast
 43c:	nop
 440:	nop
 444:	ldp	x29, x30, [sp], #48
 448:	ret
 44c:	nop
	...

0000000000000458 <grub_mod_init>:
 458:	stp	x29, x30, [sp, #-32]!
 45c:	mov	x29, sp
 460:	str	x0, [sp, #24]
 464:	adrp	x0, 0 <grub_mod_init-0x458>
 468:	add	x0, x0, #0x0
 46c:	ldr	x1, [x0]
 470:	adrp	x0, 0 <grub_mod_init-0x458>
 474:	add	x0, x0, #0x0
 478:	ldr	x0, [x0]
 47c:	bl	0 <grub_test_register>
 480:	nop
 484:	ldp	x29, x30, [sp], #32
 488:	ret
 48c:	nop
	...

00000000000004a0 <grub_mod_fini>:
 4a0:	stp	x29, x30, [sp, #-16]!
 4a4:	mov	x29, sp
 4a8:	adrp	x0, 0 <grub_mod_init-0x458>
 4ac:	add	x0, x0, #0x0
 4b0:	ldr	x0, [x0]
 4b4:	bl	0 <grub_test_unregister>
 4b8:	nop
 4bc:	ldp	x29, x30, [sp], #16
 4c0:	ret
 4c4:	nop
	...
