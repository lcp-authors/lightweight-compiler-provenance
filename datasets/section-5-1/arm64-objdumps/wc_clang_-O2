
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401850 <.init>:
  401850:	stp	x29, x30, [sp, #-16]!
  401854:	mov	x29, sp
  401858:	bl	401d00 <ferror@plt+0x60>
  40185c:	ldp	x29, x30, [sp], #16
  401860:	ret

Disassembly of section .plt:

0000000000401870 <mbrtowc@plt-0x20>:
  401870:	stp	x16, x30, [sp, #-16]!
  401874:	adrp	x16, 417000 <_obstack_memory_used@@Base+0x10944>
  401878:	ldr	x17, [x16, #4088]
  40187c:	add	x16, x16, #0xff8
  401880:	br	x17
  401884:	nop
  401888:	nop
  40188c:	nop

0000000000401890 <mbrtowc@plt>:
  401890:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401894:	ldr	x17, [x16]
  401898:	add	x16, x16, #0x0
  40189c:	br	x17

00000000004018a0 <memcpy@plt>:
  4018a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018a4:	ldr	x17, [x16, #8]
  4018a8:	add	x16, x16, #0x8
  4018ac:	br	x17

00000000004018b0 <_exit@plt>:
  4018b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018b4:	ldr	x17, [x16, #16]
  4018b8:	add	x16, x16, #0x10
  4018bc:	br	x17

00000000004018c0 <strlen@plt>:
  4018c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018c4:	ldr	x17, [x16, #24]
  4018c8:	add	x16, x16, #0x18
  4018cc:	br	x17

00000000004018d0 <exit@plt>:
  4018d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018d4:	ldr	x17, [x16, #32]
  4018d8:	add	x16, x16, #0x20
  4018dc:	br	x17

00000000004018e0 <error@plt>:
  4018e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16, #40]
  4018e8:	add	x16, x16, #0x28
  4018ec:	br	x17

00000000004018f0 <sysinfo@plt>:
  4018f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #48]
  4018f8:	add	x16, x16, #0x30
  4018fc:	br	x17

0000000000401900 <__cxa_atexit@plt>:
  401900:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #56]
  401908:	add	x16, x16, #0x38
  40190c:	br	x17

0000000000401910 <iswcntrl@plt>:
  401910:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #64]
  401918:	add	x16, x16, #0x40
  40191c:	br	x17

0000000000401920 <setvbuf@plt>:
  401920:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #72]
  401928:	add	x16, x16, #0x48
  40192c:	br	x17

0000000000401930 <lseek@plt>:
  401930:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #80]
  401938:	add	x16, x16, #0x50
  40193c:	br	x17

0000000000401940 <__fpending@plt>:
  401940:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #88]
  401948:	add	x16, x16, #0x58
  40194c:	br	x17

0000000000401950 <fileno@plt>:
  401950:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #96]
  401958:	add	x16, x16, #0x60
  40195c:	br	x17

0000000000401960 <fclose@plt>:
  401960:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #104]
  401968:	add	x16, x16, #0x68
  40196c:	br	x17

0000000000401970 <iswspace@plt>:
  401970:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #112]
  401978:	add	x16, x16, #0x70
  40197c:	br	x17

0000000000401980 <nl_langinfo@plt>:
  401980:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #120]
  401988:	add	x16, x16, #0x78
  40198c:	br	x17

0000000000401990 <fopen@plt>:
  401990:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #128]
  401998:	add	x16, x16, #0x80
  40199c:	br	x17

00000000004019a0 <malloc@plt>:
  4019a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #136]
  4019a8:	add	x16, x16, #0x88
  4019ac:	br	x17

00000000004019b0 <wcwidth@plt>:
  4019b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #144]
  4019b8:	add	x16, x16, #0x90
  4019bc:	br	x17

00000000004019c0 <getdelim@plt>:
  4019c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #152]
  4019c8:	add	x16, x16, #0x98
  4019cc:	br	x17

00000000004019d0 <open@plt>:
  4019d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #160]
  4019d8:	add	x16, x16, #0xa0
  4019dc:	br	x17

00000000004019e0 <strncmp@plt>:
  4019e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #168]
  4019e8:	add	x16, x16, #0xa8
  4019ec:	br	x17

00000000004019f0 <bindtextdomain@plt>:
  4019f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #176]
  4019f8:	add	x16, x16, #0xb0
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #184]
  401a08:	add	x16, x16, #0xb8
  401a0c:	br	x17

0000000000401a10 <fgetc@plt>:
  401a10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #192]
  401a18:	add	x16, x16, #0xc0
  401a1c:	br	x17

0000000000401a20 <__printf_chk@plt>:
  401a20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #200]
  401a28:	add	x16, x16, #0xc8
  401a2c:	br	x17

0000000000401a30 <memset@plt>:
  401a30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #208]
  401a38:	add	x16, x16, #0xd0
  401a3c:	br	x17

0000000000401a40 <calloc@plt>:
  401a40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #216]
  401a48:	add	x16, x16, #0xd8
  401a4c:	br	x17

0000000000401a50 <bcmp@plt>:
  401a50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #224]
  401a58:	add	x16, x16, #0xe0
  401a5c:	br	x17

0000000000401a60 <realloc@plt>:
  401a60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #232]
  401a68:	add	x16, x16, #0xe8
  401a6c:	br	x17

0000000000401a70 <getpagesize@plt>:
  401a70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #240]
  401a78:	add	x16, x16, #0xf0
  401a7c:	br	x17

0000000000401a80 <close@plt>:
  401a80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #248]
  401a88:	add	x16, x16, #0xf8
  401a8c:	br	x17

0000000000401a90 <strrchr@plt>:
  401a90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #256]
  401a98:	add	x16, x16, #0x100
  401a9c:	br	x17

0000000000401aa0 <__gmon_start__@plt>:
  401aa0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #264]
  401aa8:	add	x16, x16, #0x108
  401aac:	br	x17

0000000000401ab0 <btowc@plt>:
  401ab0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #272]
  401ab8:	add	x16, x16, #0x110
  401abc:	br	x17

0000000000401ac0 <abort@plt>:
  401ac0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #280]
  401ac8:	add	x16, x16, #0x118
  401acc:	br	x17

0000000000401ad0 <posix_fadvise@plt>:
  401ad0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #288]
  401ad8:	add	x16, x16, #0x120
  401adc:	br	x17

0000000000401ae0 <mbsinit@plt>:
  401ae0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #296]
  401ae8:	add	x16, x16, #0x128
  401aec:	br	x17

0000000000401af0 <__overflow@plt>:
  401af0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #304]
  401af8:	add	x16, x16, #0x130
  401afc:	br	x17

0000000000401b00 <feof@plt>:
  401b00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #312]
  401b08:	add	x16, x16, #0x138
  401b0c:	br	x17

0000000000401b10 <textdomain@plt>:
  401b10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #320]
  401b18:	add	x16, x16, #0x140
  401b1c:	br	x17

0000000000401b20 <getopt_long@plt>:
  401b20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #328]
  401b28:	add	x16, x16, #0x148
  401b2c:	br	x17

0000000000401b30 <__fprintf_chk@plt>:
  401b30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #336]
  401b38:	add	x16, x16, #0x150
  401b3c:	br	x17

0000000000401b40 <strcmp@plt>:
  401b40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #344]
  401b48:	add	x16, x16, #0x158
  401b4c:	br	x17

0000000000401b50 <__ctype_b_loc@plt>:
  401b50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #352]
  401b58:	add	x16, x16, #0x160
  401b5c:	br	x17

0000000000401b60 <fseeko@plt>:
  401b60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #360]
  401b68:	add	x16, x16, #0x168
  401b6c:	br	x17

0000000000401b70 <free@plt>:
  401b70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #368]
  401b78:	add	x16, x16, #0x170
  401b7c:	br	x17

0000000000401b80 <__ctype_get_mb_cur_max@plt>:
  401b80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #376]
  401b88:	add	x16, x16, #0x178
  401b8c:	br	x17

0000000000401b90 <strchr@plt>:
  401b90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #384]
  401b98:	add	x16, x16, #0x180
  401b9c:	br	x17

0000000000401ba0 <fwrite@plt>:
  401ba0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #392]
  401ba8:	add	x16, x16, #0x188
  401bac:	br	x17

0000000000401bb0 <fflush@plt>:
  401bb0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #400]
  401bb8:	add	x16, x16, #0x190
  401bbc:	br	x17

0000000000401bc0 <read@plt>:
  401bc0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #408]
  401bc8:	add	x16, x16, #0x198
  401bcc:	br	x17

0000000000401bd0 <memchr@plt>:
  401bd0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #416]
  401bd8:	add	x16, x16, #0x1a0
  401bdc:	br	x17

0000000000401be0 <sysconf@plt>:
  401be0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #424]
  401be8:	add	x16, x16, #0x1a8
  401bec:	br	x17

0000000000401bf0 <__fxstat@plt>:
  401bf0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #432]
  401bf8:	add	x16, x16, #0x1b0
  401bfc:	br	x17

0000000000401c00 <dcgettext@plt>:
  401c00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #440]
  401c08:	add	x16, x16, #0x1b8
  401c0c:	br	x17

0000000000401c10 <fputs_unlocked@plt>:
  401c10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #448]
  401c18:	add	x16, x16, #0x1c0
  401c1c:	br	x17

0000000000401c20 <__freading@plt>:
  401c20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #456]
  401c28:	add	x16, x16, #0x1c8
  401c2c:	br	x17

0000000000401c30 <iswprint@plt>:
  401c30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #464]
  401c38:	add	x16, x16, #0x1d0
  401c3c:	br	x17

0000000000401c40 <__assert_fail@plt>:
  401c40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #472]
  401c48:	add	x16, x16, #0x1d8
  401c4c:	br	x17

0000000000401c50 <__errno_location@plt>:
  401c50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #480]
  401c58:	add	x16, x16, #0x1e0
  401c5c:	br	x17

0000000000401c60 <getenv@plt>:
  401c60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #488]
  401c68:	add	x16, x16, #0x1e8
  401c6c:	br	x17

0000000000401c70 <__xstat@plt>:
  401c70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #496]
  401c78:	add	x16, x16, #0x1f0
  401c7c:	br	x17

0000000000401c80 <__memmove_chk@plt>:
  401c80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #504]
  401c88:	add	x16, x16, #0x1f8
  401c8c:	br	x17

0000000000401c90 <setlocale@plt>:
  401c90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #512]
  401c98:	add	x16, x16, #0x200
  401c9c:	br	x17

0000000000401ca0 <ferror@plt>:
  401ca0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #520]
  401ca8:	add	x16, x16, #0x208
  401cac:	br	x17

Disassembly of section .text:

0000000000401cb0 <_obstack_begin@@Base-0x46a4>:
  401cb0:	mov	x29, #0x0                   	// #0
  401cb4:	mov	x30, #0x0                   	// #0
  401cb8:	mov	x5, x0
  401cbc:	ldr	x1, [sp]
  401cc0:	add	x2, sp, #0x8
  401cc4:	mov	x6, sp
  401cc8:	movz	x0, #0x0, lsl #48
  401ccc:	movk	x0, #0x0, lsl #32
  401cd0:	movk	x0, #0x40, lsl #16
  401cd4:	movk	x0, #0x202c
  401cd8:	movz	x3, #0x0, lsl #48
  401cdc:	movk	x3, #0x0, lsl #32
  401ce0:	movk	x3, #0x40, lsl #16
  401ce4:	movk	x3, #0x6838
  401ce8:	movz	x4, #0x0, lsl #48
  401cec:	movk	x4, #0x0, lsl #32
  401cf0:	movk	x4, #0x40, lsl #16
  401cf4:	movk	x4, #0x68b8
  401cf8:	bl	401a00 <__libc_start_main@plt>
  401cfc:	bl	401ac0 <abort@plt>
  401d00:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x10944>
  401d04:	ldr	x0, [x0, #4064]
  401d08:	cbz	x0, 401d10 <ferror@plt+0x70>
  401d0c:	b	401aa0 <__gmon_start__@plt>
  401d10:	ret
  401d14:	nop
  401d18:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11944>
  401d1c:	add	x0, x0, #0x290
  401d20:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x11944>
  401d24:	add	x1, x1, #0x290
  401d28:	cmp	x1, x0
  401d2c:	b.eq	401d44 <ferror@plt+0xa4>  // b.none
  401d30:	adrp	x1, 406000 <ferror@plt+0x4360>
  401d34:	ldr	x1, [x1, #2280]
  401d38:	cbz	x1, 401d44 <ferror@plt+0xa4>
  401d3c:	mov	x16, x1
  401d40:	br	x16
  401d44:	ret
  401d48:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11944>
  401d4c:	add	x0, x0, #0x290
  401d50:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x11944>
  401d54:	add	x1, x1, #0x290
  401d58:	sub	x1, x1, x0
  401d5c:	lsr	x2, x1, #63
  401d60:	add	x1, x2, x1, asr #3
  401d64:	cmp	xzr, x1, asr #1
  401d68:	asr	x1, x1, #1
  401d6c:	b.eq	401d84 <ferror@plt+0xe4>  // b.none
  401d70:	adrp	x2, 406000 <ferror@plt+0x4360>
  401d74:	ldr	x2, [x2, #2288]
  401d78:	cbz	x2, 401d84 <ferror@plt+0xe4>
  401d7c:	mov	x16, x2
  401d80:	br	x16
  401d84:	ret
  401d88:	stp	x29, x30, [sp, #-32]!
  401d8c:	mov	x29, sp
  401d90:	str	x19, [sp, #16]
  401d94:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x11944>
  401d98:	ldrb	w0, [x19, #712]
  401d9c:	cbnz	w0, 401dac <ferror@plt+0x10c>
  401da0:	bl	401d18 <ferror@plt+0x78>
  401da4:	mov	w0, #0x1                   	// #1
  401da8:	strb	w0, [x19, #712]
  401dac:	ldr	x19, [sp, #16]
  401db0:	ldp	x29, x30, [sp], #32
  401db4:	ret
  401db8:	b	401d48 <ferror@plt+0xa8>
  401dbc:	sub	sp, sp, #0xa0
  401dc0:	stp	x20, x19, [sp, #144]
  401dc4:	mov	w19, w0
  401dc8:	stp	x29, x30, [sp, #112]
  401dcc:	stp	x22, x21, [sp, #128]
  401dd0:	add	x29, sp, #0x70
  401dd4:	cbnz	w0, 401ff0 <ferror@plt+0x350>
  401dd8:	adrp	x1, 406000 <ferror@plt+0x4360>
  401ddc:	add	x1, x1, #0xb3c
  401de0:	mov	w2, #0x5                   	// #5
  401de4:	mov	x0, xzr
  401de8:	bl	401c00 <dcgettext@plt>
  401dec:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  401df0:	ldr	x2, [x8, #808]
  401df4:	mov	x1, x0
  401df8:	mov	w0, #0x1                   	// #1
  401dfc:	mov	x3, x2
  401e00:	bl	401a20 <__printf_chk@plt>
  401e04:	adrp	x1, 406000 <ferror@plt+0x4360>
  401e08:	add	x1, x1, #0xb83
  401e0c:	mov	w2, #0x5                   	// #5
  401e10:	mov	x0, xzr
  401e14:	bl	401c00 <dcgettext@plt>
  401e18:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x11944>
  401e1c:	ldr	x1, [x22, #688]
  401e20:	bl	401c10 <fputs_unlocked@plt>
  401e24:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401e28:	add	x1, x1, #0x90
  401e2c:	mov	w2, #0x5                   	// #5
  401e30:	mov	x0, xzr
  401e34:	bl	401c00 <dcgettext@plt>
  401e38:	ldr	x1, [x22, #688]
  401e3c:	bl	401c10 <fputs_unlocked@plt>
  401e40:	adrp	x1, 406000 <ferror@plt+0x4360>
  401e44:	add	x1, x1, #0xc3b
  401e48:	mov	w2, #0x5                   	// #5
  401e4c:	mov	x0, xzr
  401e50:	bl	401c00 <dcgettext@plt>
  401e54:	ldr	x1, [x22, #688]
  401e58:	bl	401c10 <fputs_unlocked@plt>
  401e5c:	adrp	x1, 406000 <ferror@plt+0x4360>
  401e60:	add	x1, x1, #0xd68
  401e64:	mov	w2, #0x5                   	// #5
  401e68:	mov	x0, xzr
  401e6c:	bl	401c00 <dcgettext@plt>
  401e70:	ldr	x1, [x22, #688]
  401e74:	bl	401c10 <fputs_unlocked@plt>
  401e78:	adrp	x1, 406000 <ferror@plt+0x4360>
  401e7c:	add	x1, x1, #0xe95
  401e80:	mov	w2, #0x5                   	// #5
  401e84:	mov	x0, xzr
  401e88:	bl	401c00 <dcgettext@plt>
  401e8c:	ldr	x1, [x22, #688]
  401e90:	bl	401c10 <fputs_unlocked@plt>
  401e94:	adrp	x1, 406000 <ferror@plt+0x4360>
  401e98:	add	x1, x1, #0xec2
  401e9c:	mov	w2, #0x5                   	// #5
  401ea0:	mov	x0, xzr
  401ea4:	bl	401c00 <dcgettext@plt>
  401ea8:	ldr	x1, [x22, #688]
  401eac:	bl	401c10 <fputs_unlocked@plt>
  401eb0:	adrp	x8, 406000 <ferror@plt+0x4360>
  401eb4:	add	x8, x8, #0xaa0
  401eb8:	ldp	q0, q1, [x8, #48]
  401ebc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401ec0:	adrp	x20, 406000 <ferror@plt+0x4360>
  401ec4:	add	x1, x1, #0xc8
  401ec8:	str	q0, [sp, #48]
  401ecc:	ldp	q2, q0, [x8, #80]
  401ed0:	mov	x21, sp
  401ed4:	add	x20, x20, #0xef8
  401ed8:	stp	q1, q2, [sp, #64]
  401edc:	ldr	q1, [x8]
  401ee0:	str	q0, [sp, #96]
  401ee4:	ldp	q0, q3, [x8, #16]
  401ee8:	stp	q1, q0, [sp]
  401eec:	str	q3, [sp, #32]
  401ef0:	mov	x0, x20
  401ef4:	bl	401b40 <strcmp@plt>
  401ef8:	cbz	w0, 401f04 <ferror@plt+0x264>
  401efc:	ldr	x1, [x21, #16]!
  401f00:	cbnz	x1, 401ef0 <ferror@plt+0x250>
  401f04:	ldr	x8, [x21, #8]
  401f08:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401f0c:	add	x1, x1, #0x127
  401f10:	mov	w2, #0x5                   	// #5
  401f14:	cmp	x8, #0x0
  401f18:	mov	x0, xzr
  401f1c:	csel	x21, x20, x8, eq  // eq = none
  401f20:	bl	401c00 <dcgettext@plt>
  401f24:	adrp	x2, 406000 <ferror@plt+0x4360>
  401f28:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x944>
  401f2c:	mov	x1, x0
  401f30:	add	x2, x2, #0xf23
  401f34:	add	x3, x3, #0x13e
  401f38:	mov	w0, #0x1                   	// #1
  401f3c:	bl	401a20 <__printf_chk@plt>
  401f40:	mov	w0, #0x5                   	// #5
  401f44:	mov	x1, xzr
  401f48:	bl	401c90 <setlocale@plt>
  401f4c:	cbz	x0, 401f80 <ferror@plt+0x2e0>
  401f50:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401f54:	add	x1, x1, #0x166
  401f58:	mov	w2, #0x3                   	// #3
  401f5c:	bl	4019e0 <strncmp@plt>
  401f60:	cbz	w0, 401f80 <ferror@plt+0x2e0>
  401f64:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401f68:	add	x1, x1, #0x16a
  401f6c:	mov	w2, #0x5                   	// #5
  401f70:	mov	x0, xzr
  401f74:	bl	401c00 <dcgettext@plt>
  401f78:	ldr	x1, [x22, #688]
  401f7c:	bl	401c10 <fputs_unlocked@plt>
  401f80:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401f84:	add	x1, x1, #0x1b1
  401f88:	mov	w2, #0x5                   	// #5
  401f8c:	mov	x0, xzr
  401f90:	bl	401c00 <dcgettext@plt>
  401f94:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  401f98:	mov	x1, x0
  401f9c:	add	x2, x2, #0x13e
  401fa0:	mov	w0, #0x1                   	// #1
  401fa4:	mov	x3, x20
  401fa8:	bl	401a20 <__printf_chk@plt>
  401fac:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  401fb0:	add	x1, x1, #0x1cc
  401fb4:	mov	w2, #0x5                   	// #5
  401fb8:	mov	x0, xzr
  401fbc:	bl	401c00 <dcgettext@plt>
  401fc0:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  401fc4:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  401fc8:	add	x8, x8, #0x51b
  401fcc:	add	x9, x9, #0xe4
  401fd0:	cmp	x21, x20
  401fd4:	mov	x1, x0
  401fd8:	csel	x3, x9, x8, eq  // eq = none
  401fdc:	mov	w0, #0x1                   	// #1
  401fe0:	mov	x2, x21
  401fe4:	bl	401a20 <__printf_chk@plt>
  401fe8:	mov	w0, w19
  401fec:	bl	4018d0 <exit@plt>
  401ff0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  401ff4:	ldr	x20, [x8, #664]
  401ff8:	adrp	x1, 406000 <ferror@plt+0x4360>
  401ffc:	add	x1, x1, #0xb15
  402000:	mov	w2, #0x5                   	// #5
  402004:	mov	x0, xzr
  402008:	bl	401c00 <dcgettext@plt>
  40200c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402010:	ldr	x3, [x8, #808]
  402014:	mov	x2, x0
  402018:	mov	w1, #0x1                   	// #1
  40201c:	mov	x0, x20
  402020:	bl	401b30 <__fprintf_chk@plt>
  402024:	mov	w0, w19
  402028:	bl	4018d0 <exit@plt>
  40202c:	stp	d9, d8, [sp, #-112]!
  402030:	stp	x29, x30, [sp, #16]
  402034:	stp	x28, x27, [sp, #32]
  402038:	stp	x26, x25, [sp, #48]
  40203c:	stp	x24, x23, [sp, #64]
  402040:	stp	x22, x21, [sp, #80]
  402044:	stp	x20, x19, [sp, #96]
  402048:	mov	x29, sp
  40204c:	sub	sp, sp, #0x1b0
  402050:	ldr	x8, [x1]
  402054:	mov	w21, w0
  402058:	mov	x20, x1
  40205c:	mov	x0, x8
  402060:	bl	4039c8 <ferror@plt+0x1d28>
  402064:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402068:	add	x1, x1, #0x51b
  40206c:	mov	w0, #0x6                   	// #6
  402070:	bl	401c90 <setlocale@plt>
  402074:	adrp	x19, 406000 <ferror@plt+0x4360>
  402078:	add	x19, x19, #0xf27
  40207c:	adrp	x1, 406000 <ferror@plt+0x4360>
  402080:	add	x1, x1, #0xefb
  402084:	mov	x0, x19
  402088:	bl	4019f0 <bindtextdomain@plt>
  40208c:	mov	x0, x19
  402090:	bl	401b10 <textdomain@plt>
  402094:	adrp	x0, 403000 <ferror@plt+0x1360>
  402098:	add	x0, x0, #0x674
  40209c:	bl	4068c0 <_obstack_memory_used@@Base+0x204>
  4020a0:	bl	401a70 <getpagesize@plt>
  4020a4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4020a8:	ldr	x8, [x8, #688]
  4020ac:	sxtw	x9, w0
  4020b0:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11944>
  4020b4:	mov	w2, #0x1                   	// #1
  4020b8:	mov	x0, x8
  4020bc:	mov	x1, xzr
  4020c0:	mov	x3, xzr
  4020c4:	str	x9, [x10, #720]
  4020c8:	mov	w24, #0x1                   	// #1
  4020cc:	bl	401920 <setvbuf@plt>
  4020d0:	adrp	x0, 406000 <ferror@plt+0x4360>
  4020d4:	add	x0, x0, #0xf0d
  4020d8:	bl	401c60 <getenv@plt>
  4020dc:	cmp	x0, #0x0
  4020e0:	adrp	x22, 406000 <ferror@plt+0x4360>
  4020e4:	adrp	x23, 406000 <ferror@plt+0x4360>
  4020e8:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x11944>
  4020ec:	adrp	x27, 406000 <ferror@plt+0x4360>
  4020f0:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x11944>
  4020f4:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x11944>
  4020f8:	mov	x19, xzr
  4020fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402100:	adrp	x15, 418000 <_obstack_memory_used@@Base+0x11944>
  402104:	adrp	x16, 418000 <_obstack_memory_used@@Base+0x11944>
  402108:	adrp	x18, 418000 <_obstack_memory_used@@Base+0x11944>
  40210c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11944>
  402110:	adrp	x17, 418000 <_obstack_memory_used@@Base+0x11944>
  402114:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11944>
  402118:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11944>
  40211c:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11944>
  402120:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x11944>
  402124:	adrp	x14, 418000 <_obstack_memory_used@@Base+0x11944>
  402128:	add	x22, x22, #0xf1d
  40212c:	add	x23, x23, #0x980
  402130:	add	x25, x25, #0x2d9
  402134:	add	x27, x27, #0x8f8
  402138:	cset	w9, ne  // ne = any
  40213c:	add	x26, x26, #0x2da
  402140:	add	x28, x28, #0x2db
  402144:	strb	w9, [x8, #728]
  402148:	strb	wzr, [x15, #729]
  40214c:	strb	wzr, [x16, #730]
  402150:	strb	wzr, [x18, #731]
  402154:	strb	wzr, [x0, #732]
  402158:	strb	wzr, [x17, #733]
  40215c:	str	xzr, [x10, #736]
  402160:	str	xzr, [x11, #744]
  402164:	str	xzr, [x12, #752]
  402168:	str	xzr, [x13, #760]
  40216c:	str	xzr, [x14, #768]
  402170:	b	402180 <ferror@plt+0x4e0>
  402174:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402178:	add	x8, x8, #0x2dd
  40217c:	strb	w24, [x8]
  402180:	mov	w0, w21
  402184:	mov	x1, x20
  402188:	mov	x2, x22
  40218c:	mov	x3, x23
  402190:	mov	x4, xzr
  402194:	bl	401b20 <getopt_long@plt>
  402198:	cmp	w0, #0x4b
  40219c:	b.le	4021fc <ferror@plt+0x55c>
  4021a0:	sub	w8, w0, #0x4c
  4021a4:	cmp	w8, #0x2b
  4021a8:	b.hi	4021dc <ferror@plt+0x53c>  // b.pmore
  4021ac:	adr	x9, 402174 <ferror@plt+0x4d4>
  4021b0:	ldrh	w10, [x27, x8, lsl #1]
  4021b4:	add	x9, x9, x10, lsl #2
  4021b8:	mov	x8, x25
  4021bc:	br	x9
  4021c0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4021c4:	add	x8, x8, #0x2dc
  4021c8:	strb	w24, [x8]
  4021cc:	b	402180 <ferror@plt+0x4e0>
  4021d0:	mov	x8, x26
  4021d4:	strb	w24, [x26]
  4021d8:	b	402180 <ferror@plt+0x4e0>
  4021dc:	cmp	w0, #0x100
  4021e0:	b.ne	402944 <ferror@plt+0xca4>  // b.any
  4021e4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4021e8:	ldr	x19, [x8, #672]
  4021ec:	b	402180 <ferror@plt+0x4e0>
  4021f0:	mov	x8, x28
  4021f4:	strb	w24, [x28]
  4021f8:	b	402180 <ferror@plt+0x4e0>
  4021fc:	cmn	w0, #0x1
  402200:	b.ne	4028ec <ferror@plt+0xc4c>  // b.any
  402204:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x11944>
  402208:	ldrb	w8, [x23, #732]
  40220c:	tbnz	w8, #0, 402258 <ferror@plt+0x5b8>
  402210:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402214:	ldrb	w8, [x8, #731]
  402218:	tbnz	w8, #0, 402258 <ferror@plt+0x5b8>
  40221c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402220:	ldrb	w8, [x8, #730]
  402224:	tbnz	w8, #0, 402258 <ferror@plt+0x5b8>
  402228:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40222c:	ldrb	w8, [x8, #729]
  402230:	tbnz	w8, #0, 402258 <ferror@plt+0x5b8>
  402234:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402238:	ldrb	w8, [x8, #733]
  40223c:	tbnz	w8, #0, 402258 <ferror@plt+0x5b8>
  402240:	mov	w8, #0x1                   	// #1
  402244:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  402248:	strb	w8, [x9, #729]
  40224c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  402250:	strb	w8, [x9, #731]
  402254:	strb	w8, [x23, #732]
  402258:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x11944>
  40225c:	ldrsw	x8, [x22, #680]
  402260:	cbz	x19, 4022d8 <ferror@plt+0x638>
  402264:	cmp	w8, w21
  402268:	b.lt	402978 <ferror@plt+0xcd8>  // b.tstop
  40226c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402270:	add	x1, x1, #0x2be
  402274:	mov	x0, x19
  402278:	bl	401b40 <strcmp@plt>
  40227c:	cbz	w0, 40230c <ferror@plt+0x66c>
  402280:	adrp	x1, 406000 <ferror@plt+0x4360>
  402284:	add	x1, x1, #0xfd8
  402288:	mov	x0, x19
  40228c:	bl	401990 <fopen@plt>
  402290:	mov	x20, x0
  402294:	cbnz	x0, 402314 <ferror@plt+0x674>
  402298:	bl	401c50 <__errno_location@plt>
  40229c:	ldr	w20, [x0]
  4022a0:	adrp	x1, 406000 <ferror@plt+0x4360>
  4022a4:	add	x1, x1, #0xf91
  4022a8:	mov	w2, #0x5                   	// #5
  4022ac:	mov	x0, xzr
  4022b0:	bl	401c00 <dcgettext@plt>
  4022b4:	mov	x21, x0
  4022b8:	mov	w0, #0x4                   	// #4
  4022bc:	mov	x1, x19
  4022c0:	bl	404d28 <ferror@plt+0x3088>
  4022c4:	mov	x3, x0
  4022c8:	mov	w0, #0x1                   	// #1
  4022cc:	mov	w1, w20
  4022d0:	mov	x2, x21
  4022d4:	bl	4018e0 <error@plt>
  4022d8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11944>
  4022dc:	add	x9, x20, x8, lsl #3
  4022e0:	add	x10, x10, #0x308
  4022e4:	subs	w8, w21, w8
  4022e8:	csel	x22, x9, x10, gt
  4022ec:	csinc	w8, w8, wzr, gt
  4022f0:	mov	x0, x22
  4022f4:	sxtw	x26, w8
  4022f8:	bl	4034f8 <ferror@plt+0x1858>
  4022fc:	mov	x20, x0
  402300:	mov	w10, wzr
  402304:	cbnz	x20, 402390 <ferror@plt+0x6f0>
  402308:	b	402954 <ferror@plt+0xcb4>
  40230c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402310:	ldr	x20, [x8, #696]
  402314:	mov	x0, x20
  402318:	bl	401950 <fileno@plt>
  40231c:	mov	w1, w0
  402320:	add	x2, sp, #0x8
  402324:	mov	w0, wzr
  402328:	bl	401bf0 <__fxstat@plt>
  40232c:	cbnz	w0, 402374 <ferror@plt+0x6d4>
  402330:	ldr	w8, [sp, #24]
  402334:	and	w8, w8, #0xf000
  402338:	cmp	w8, #0x8, lsl #12
  40233c:	b.ne	402374 <ferror@plt+0x6d4>  // b.any
  402340:	ldr	d0, [sp, #56]
  402344:	scvtf	d8, d0
  402348:	bl	4038f0 <ferror@plt+0x1c50>
  40234c:	fmov	d9, #5.000000000000000000e-01
  402350:	mov	x8, #0x4164000000000000    	// #4711891110136381440
  402354:	fmul	d1, d0, d9
  402358:	fmov	d0, x8
  40235c:	fcmp	d1, d0
  402360:	b.gt	40236c <ferror@plt+0x6cc>
  402364:	bl	4038f0 <ferror@plt+0x1c50>
  402368:	fmul	d0, d0, d9
  40236c:	fcmp	d0, d8
  402370:	b.ge	4028ac <ferror@plt+0xc0c>  // b.tcont
  402374:	mov	x0, x20
  402378:	bl	403528 <ferror@plt+0x1888>
  40237c:	mov	x20, x0
  402380:	mov	x22, xzr
  402384:	mov	x26, xzr
  402388:	mov	w10, wzr
  40238c:	cbz	x20, 402954 <ferror@plt+0xcb4>
  402390:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  402394:	cmp	x26, #0x0
  402398:	movk	x9, #0xf0f1
  40239c:	csinc	x8, x26, xzr, ne  // ne = any
  4023a0:	movk	x9, #0xf0, lsl #48
  4023a4:	cmp	x8, x9
  4023a8:	b.cs	402954 <ferror@plt+0xcb4>  // b.hs, b.nlast
  4023ac:	add	x8, x8, x8, lsl #4
  4023b0:	lsl	x0, x8, #3
  4023b4:	str	w10, [sp, #4]
  4023b8:	bl	405dc8 <ferror@plt+0x4128>
  4023bc:	mov	x21, x0
  4023c0:	cbz	x26, 402408 <ferror@plt+0x768>
  4023c4:	cmp	x26, #0x1
  4023c8:	b.ne	402428 <ferror@plt+0x788>  // b.any
  4023cc:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  4023d0:	ldrb	w8, [x23, #732]
  4023d4:	ldrb	w9, [x9, #731]
  4023d8:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11944>
  4023dc:	ldrb	w10, [x10, #730]
  4023e0:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11944>
  4023e4:	ldrb	w11, [x11, #729]
  4023e8:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11944>
  4023ec:	ldrb	w12, [x12, #733]
  4023f0:	add	w8, w9, w8
  4023f4:	add	w8, w8, w10
  4023f8:	add	w8, w8, w11
  4023fc:	add	w8, w8, w12
  402400:	cmp	w8, #0x1
  402404:	b.ne	402428 <ferror@plt+0x788>  // b.any
  402408:	mov	w8, #0x1                   	// #1
  40240c:	str	w8, [x21]
  402410:	cbz	x26, 402420 <ferror@plt+0x780>
  402414:	ldr	w12, [x21]
  402418:	cmp	w12, #0x0
  40241c:	b.le	40248c <ferror@plt+0x7ec>
  402420:	mov	w8, #0x1                   	// #1
  402424:	b	40250c <ferror@plt+0x86c>
  402428:	adrp	x24, 407000 <_obstack_memory_used@@Base+0x944>
  40242c:	add	x23, x21, #0x8
  402430:	add	x24, x24, #0x2be
  402434:	mov	x27, x26
  402438:	b	402460 <ferror@plt+0x7c0>
  40243c:	mov	w0, wzr
  402440:	mov	w1, wzr
  402444:	mov	x2, x23
  402448:	bl	401bf0 <__fxstat@plt>
  40244c:	stur	w0, [x23, #-8]
  402450:	add	x23, x23, #0x88
  402454:	subs	x27, x27, #0x1
  402458:	add	x22, x22, #0x8
  40245c:	b.eq	402410 <ferror@plt+0x770>  // b.none
  402460:	ldr	x25, [x22]
  402464:	cbz	x25, 40243c <ferror@plt+0x79c>
  402468:	mov	x0, x25
  40246c:	mov	x1, x24
  402470:	bl	401b40 <strcmp@plt>
  402474:	cbz	w0, 40243c <ferror@plt+0x79c>
  402478:	mov	w0, wzr
  40247c:	mov	x1, x25
  402480:	mov	x2, x23
  402484:	bl	401c70 <__xstat@plt>
  402488:	b	40244c <ferror@plt+0x7ac>
  40248c:	mov	x9, xzr
  402490:	add	x10, x21, #0x88
  402494:	sub	x11, x26, #0x1
  402498:	mov	w8, #0x1                   	// #1
  40249c:	cbnz	w12, 4024d8 <ferror@plt+0x838>
  4024a0:	b	4024b0 <ferror@plt+0x810>
  4024a4:	ldr	w12, [x10], #136
  4024a8:	sub	x11, x11, #0x1
  4024ac:	cbnz	w12, 4024d8 <ferror@plt+0x838>
  4024b0:	ldur	w12, [x10, #-112]
  4024b4:	and	w12, w12, #0xf000
  4024b8:	cmp	w12, #0x8, lsl #12
  4024bc:	b.ne	4024cc <ferror@plt+0x82c>  // b.any
  4024c0:	ldur	x12, [x10, #-80]
  4024c4:	add	x9, x12, x9
  4024c8:	b	4024d8 <ferror@plt+0x838>
  4024cc:	mov	w8, #0x7                   	// #7
  4024d0:	cbnz	x11, 4024a4 <ferror@plt+0x804>
  4024d4:	b	4024dc <ferror@plt+0x83c>
  4024d8:	cbnz	x11, 4024a4 <ferror@plt+0x804>
  4024dc:	mov	w10, #0x1                   	// #1
  4024e0:	cmp	x9, #0xa
  4024e4:	b.cc	402504 <ferror@plt+0x864>  // b.lo, b.ul, b.last
  4024e8:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  4024ec:	movk	x11, #0xcccd
  4024f0:	umulh	x12, x9, x11
  4024f4:	cmp	x9, #0x63
  4024f8:	lsr	x9, x12, #3
  4024fc:	add	w10, w10, #0x1
  402500:	b.hi	4024f0 <ferror@plt+0x850>  // b.pmore
  402504:	cmp	w10, w8
  402508:	csel	w8, w8, w10, lt  // lt = tstop
  40250c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  402510:	add	x1, sp, #0x8
  402514:	mov	x0, x20
  402518:	str	w8, [x9, #784]
  40251c:	bl	403560 <ferror@plt+0x18c0>
  402520:	cbz	x0, 402744 <ferror@plt+0xaa4>
  402524:	adrp	x22, 407000 <_obstack_memory_used@@Base+0x944>
  402528:	mov	x27, x0
  40252c:	mov	x25, xzr
  402530:	add	x22, x22, #0x2be
  402534:	mov	w24, #0x1                   	// #1
  402538:	b	402564 <ferror@plt+0x8c4>
  40253c:	mov	w9, #0x1                   	// #1
  402540:	str	w9, [x21]
  402544:	cmp	w8, #0x0
  402548:	add	x1, sp, #0x8
  40254c:	mov	x0, x20
  402550:	cset	w24, ne  // ne = any
  402554:	add	x25, x25, #0x1
  402558:	bl	403560 <ferror@plt+0x18c0>
  40255c:	mov	x27, x0
  402560:	cbz	x0, 402748 <ferror@plt+0xaa8>
  402564:	cbz	x19, 402588 <ferror@plt+0x8e8>
  402568:	mov	x0, x19
  40256c:	mov	x1, x22
  402570:	bl	401b40 <strcmp@plt>
  402574:	cbnz	w0, 402588 <ferror@plt+0x8e8>
  402578:	mov	x0, x27
  40257c:	mov	x1, x22
  402580:	bl	401b40 <strcmp@plt>
  402584:	cbz	w0, 402664 <ferror@plt+0x9c4>
  402588:	mov	w8, wzr
  40258c:	ldrb	w9, [x27]
  402590:	cbz	w9, 4026a8 <ferror@plt+0xa08>
  402594:	tbz	w8, #0, 4025a4 <ferror@plt+0x904>
  402598:	mov	w8, wzr
  40259c:	cbnz	x26, 402544 <ferror@plt+0x8a4>
  4025a0:	b	40253c <ferror@plt+0x89c>
  4025a4:	cmp	x26, #0x0
  4025a8:	csel	x8, xzr, x25, eq  // eq = none
  4025ac:	mov	w9, #0x88                  	// #136
  4025b0:	mov	x0, x27
  4025b4:	mov	x1, x22
  4025b8:	madd	x28, x8, x9, x21
  4025bc:	bl	401b40 <strcmp@plt>
  4025c0:	cbz	w0, 402634 <ferror@plt+0x994>
  4025c4:	mov	x0, x27
  4025c8:	mov	w1, wzr
  4025cc:	bl	4019d0 <open@plt>
  4025d0:	cmn	w0, #0x1
  4025d4:	b.eq	4025fc <ferror@plt+0x95c>  // b.none
  4025d8:	mov	x1, x27
  4025dc:	mov	x2, x28
  4025e0:	mov	x3, xzr
  4025e4:	mov	w23, w0
  4025e8:	bl	402c28 <ferror@plt+0xf88>
  4025ec:	mov	w28, w0
  4025f0:	mov	w0, w23
  4025f4:	bl	401a80 <close@plt>
  4025f8:	cbz	w0, 402654 <ferror@plt+0x9b4>
  4025fc:	bl	401c50 <__errno_location@plt>
  402600:	ldr	w23, [x0]
  402604:	mov	w1, #0x3                   	// #3
  402608:	mov	w0, wzr
  40260c:	mov	x2, x27
  402610:	bl	404f54 <ferror@plt+0x32b4>
  402614:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  402618:	mov	x3, x0
  40261c:	mov	w0, wzr
  402620:	mov	w1, w23
  402624:	add	x2, x2, #0x258
  402628:	bl	4018e0 <error@plt>
  40262c:	mov	w28, wzr
  402630:	b	402654 <ferror@plt+0x9b4>
  402634:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402638:	mov	w9, #0x1                   	// #1
  40263c:	mov	x3, #0xffffffffffffffff    	// #-1
  402640:	mov	x1, x27
  402644:	mov	x2, x28
  402648:	strb	w9, [x8, #788]
  40264c:	bl	402c28 <ferror@plt+0xf88>
  402650:	mov	w28, w0
  402654:	and	w8, w24, w28
  402658:	and	w8, w8, #0x1
  40265c:	cbnz	x26, 402544 <ferror@plt+0x8a4>
  402660:	b	40253c <ferror@plt+0x89c>
  402664:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402668:	mov	w2, #0x5                   	// #5
  40266c:	mov	x0, xzr
  402670:	add	x1, x1, #0x22
  402674:	bl	401c00 <dcgettext@plt>
  402678:	mov	x23, x0
  40267c:	mov	w0, #0x4                   	// #4
  402680:	mov	x1, x27
  402684:	bl	404d28 <ferror@plt+0x3088>
  402688:	mov	x3, x0
  40268c:	mov	w0, wzr
  402690:	mov	w1, wzr
  402694:	mov	x2, x23
  402698:	bl	4018e0 <error@plt>
  40269c:	mov	w8, #0x1                   	// #1
  4026a0:	ldrb	w9, [x27]
  4026a4:	cbnz	w9, 402594 <ferror@plt+0x8f4>
  4026a8:	cbz	x19, 40270c <ferror@plt+0xa6c>
  4026ac:	mov	x0, x20
  4026b0:	bl	403608 <ferror@plt+0x1968>
  4026b4:	mov	x23, x0
  4026b8:	mov	w1, #0x3                   	// #3
  4026bc:	mov	w0, wzr
  4026c0:	mov	x2, x19
  4026c4:	bl	404f54 <ferror@plt+0x32b4>
  4026c8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4026cc:	mov	x27, x0
  4026d0:	mov	w2, #0x5                   	// #5
  4026d4:	mov	x0, xzr
  4026d8:	add	x1, x1, #0x61
  4026dc:	bl	401c00 <dcgettext@plt>
  4026e0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4026e4:	mov	x5, x0
  4026e8:	mov	w0, wzr
  4026ec:	mov	w1, wzr
  4026f0:	add	x2, x2, #0x7f
  4026f4:	mov	x3, x27
  4026f8:	mov	x4, x23
  4026fc:	bl	4018e0 <error@plt>
  402700:	mov	w8, wzr
  402704:	cbnz	x26, 402544 <ferror@plt+0x8a4>
  402708:	b	40253c <ferror@plt+0x89c>
  40270c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402710:	mov	w2, #0x5                   	// #5
  402714:	mov	x0, xzr
  402718:	add	x1, x1, #0x61
  40271c:	bl	401c00 <dcgettext@plt>
  402720:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  402724:	mov	x3, x0
  402728:	mov	w0, wzr
  40272c:	mov	w1, wzr
  402730:	add	x2, x2, #0x258
  402734:	bl	4018e0 <error@plt>
  402738:	mov	w8, wzr
  40273c:	cbnz	x26, 402544 <ferror@plt+0x8a4>
  402740:	b	40253c <ferror@plt+0x89c>
  402744:	mov	w24, #0x1                   	// #1
  402748:	ldr	w8, [sp, #8]
  40274c:	cmp	w8, #0x2
  402750:	b.eq	4027a8 <ferror@plt+0xb08>  // b.none
  402754:	cmp	w8, #0x4
  402758:	b.ne	40294c <ferror@plt+0xcac>  // b.any
  40275c:	bl	401c50 <__errno_location@plt>
  402760:	ldr	w22, [x0]
  402764:	adrp	x1, 406000 <ferror@plt+0x4360>
  402768:	add	x1, x1, #0xfcb
  40276c:	mov	w2, #0x5                   	// #5
  402770:	mov	x0, xzr
  402774:	bl	401c00 <dcgettext@plt>
  402778:	mov	x23, x0
  40277c:	mov	w1, #0x3                   	// #3
  402780:	mov	w0, wzr
  402784:	mov	x2, x19
  402788:	bl	404f54 <ferror@plt+0x32b4>
  40278c:	mov	x3, x0
  402790:	mov	w0, wzr
  402794:	mov	w1, w22
  402798:	mov	x2, x23
  40279c:	bl	4018e0 <error@plt>
  4027a0:	mov	w24, wzr
  4027a4:	b	4027e0 <ferror@plt+0xb40>
  4027a8:	cbnz	x19, 4027e0 <ferror@plt+0xb40>
  4027ac:	eor	w8, w24, #0x1
  4027b0:	tbnz	w8, #0, 4027e0 <ferror@plt+0xb40>
  4027b4:	mov	x0, x20
  4027b8:	bl	403608 <ferror@plt+0x1968>
  4027bc:	cbnz	x0, 4027e0 <ferror@plt+0xb40>
  4027c0:	mov	w8, #0x1                   	// #1
  4027c4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  4027c8:	mov	x3, #0xffffffffffffffff    	// #-1
  4027cc:	mov	x1, xzr
  4027d0:	mov	x2, x21
  4027d4:	strb	w8, [x9, #788]
  4027d8:	bl	402c28 <ferror@plt+0xf88>
  4027dc:	and	w24, w24, w0
  4027e0:	ldr	w8, [sp, #4]
  4027e4:	cbz	w8, 4027f0 <ferror@plt+0xb50>
  4027e8:	add	x0, sp, #0x88
  4027ec:	bl	405364 <ferror@plt+0x36c4>
  4027f0:	mov	x0, x20
  4027f4:	bl	403608 <ferror@plt+0x1968>
  4027f8:	cmp	x0, #0x2
  4027fc:	b.cc	402858 <ferror@plt+0xbb8>  // b.lo, b.ul, b.last
  402800:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402804:	ldr	x19, [x8, #768]
  402808:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40280c:	ldr	x22, [x8, #760]
  402810:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402814:	ldr	x23, [x8, #752]
  402818:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40281c:	ldr	x26, [x8, #744]
  402820:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402824:	ldr	x25, [x8, #736]
  402828:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  40282c:	add	x1, x1, #0x8a
  402830:	mov	w2, #0x5                   	// #5
  402834:	mov	x0, xzr
  402838:	bl	401c00 <dcgettext@plt>
  40283c:	mov	x5, x0
  402840:	mov	x0, x19
  402844:	mov	x1, x22
  402848:	mov	x2, x23
  40284c:	mov	x3, x26
  402850:	mov	x4, x25
  402854:	bl	402a40 <ferror@plt+0xda0>
  402858:	mov	x0, x20
  40285c:	bl	403628 <ferror@plt+0x1988>
  402860:	mov	x0, x21
  402864:	bl	401b70 <free@plt>
  402868:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40286c:	ldrb	w8, [x8, #788]
  402870:	cmp	w8, #0x1
  402874:	b.ne	402884 <ferror@plt+0xbe4>  // b.any
  402878:	mov	w0, wzr
  40287c:	bl	401a80 <close@plt>
  402880:	cbnz	w0, 4029f0 <ferror@plt+0xd50>
  402884:	eor	w0, w24, #0x1
  402888:	add	sp, sp, #0x1b0
  40288c:	ldp	x20, x19, [sp, #96]
  402890:	ldp	x22, x21, [sp, #80]
  402894:	ldp	x24, x23, [sp, #64]
  402898:	ldp	x26, x25, [sp, #48]
  40289c:	ldp	x28, x27, [sp, #32]
  4028a0:	ldp	x29, x30, [sp, #16]
  4028a4:	ldp	d9, d8, [sp], #112
  4028a8:	ret
  4028ac:	add	x0, sp, #0x88
  4028b0:	bl	4052e4 <ferror@plt+0x3644>
  4028b4:	add	x1, sp, #0x88
  4028b8:	mov	x0, x20
  4028bc:	bl	4053a0 <ferror@plt+0x3700>
  4028c0:	tbz	w0, #0, 402a08 <ferror@plt+0xd68>
  4028c4:	mov	x0, x20
  4028c8:	bl	40616c <ferror@plt+0x44cc>
  4028cc:	cbnz	w0, 402a08 <ferror@plt+0xd68>
  4028d0:	ldp	x26, x22, [sp, #136]
  4028d4:	mov	x0, x22
  4028d8:	bl	4034f8 <ferror@plt+0x1858>
  4028dc:	mov	x20, x0
  4028e0:	mov	w10, #0x1                   	// #1
  4028e4:	cbnz	x20, 402390 <ferror@plt+0x6f0>
  4028e8:	b	402954 <ferror@plt+0xcb4>
  4028ec:	cmn	w0, #0x3
  4028f0:	b.ne	402934 <ferror@plt+0xc94>  // b.any
  4028f4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4028f8:	ldr	x0, [x8, #688]
  4028fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402900:	ldr	x3, [x8, #544]
  402904:	adrp	x1, 406000 <ferror@plt+0x4360>
  402908:	adrp	x2, 406000 <ferror@plt+0x4360>
  40290c:	adrp	x4, 406000 <ferror@plt+0x4360>
  402910:	adrp	x5, 406000 <ferror@plt+0x4360>
  402914:	add	x1, x1, #0xef8
  402918:	add	x2, x2, #0xf23
  40291c:	add	x4, x4, #0xf31
  402920:	add	x5, x5, #0xf3c
  402924:	mov	x6, xzr
  402928:	bl	405ca0 <ferror@plt+0x4000>
  40292c:	mov	w0, wzr
  402930:	bl	4018d0 <exit@plt>
  402934:	cmn	w0, #0x2
  402938:	b.ne	402944 <ferror@plt+0xca4>  // b.any
  40293c:	mov	w0, wzr
  402940:	bl	401dbc <ferror@plt+0x11c>
  402944:	mov	w0, #0x1                   	// #1
  402948:	bl	401dbc <ferror@plt+0x11c>
  40294c:	cmp	w8, #0x3
  402950:	b.ne	402958 <ferror@plt+0xcb8>  // b.any
  402954:	bl	4060dc <ferror@plt+0x443c>
  402958:	adrp	x0, 406000 <ferror@plt+0x4360>
  40295c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402960:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x944>
  402964:	add	x0, x0, #0xfda
  402968:	add	x1, x1, #0x2
  40296c:	add	x3, x3, #0xb
  402970:	mov	w2, #0x33f                 	// #831
  402974:	bl	401c40 <__assert_fail@plt>
  402978:	adrp	x1, 406000 <ferror@plt+0x4360>
  40297c:	add	x1, x1, #0xf4c
  402980:	mov	w2, #0x5                   	// #5
  402984:	mov	x0, xzr
  402988:	bl	401c00 <dcgettext@plt>
  40298c:	ldrsw	x8, [x22, #680]
  402990:	mov	x19, x0
  402994:	mov	w0, #0x4                   	// #4
  402998:	ldr	x1, [x20, x8, lsl #3]
  40299c:	bl	404d28 <ferror@plt+0x3088>
  4029a0:	mov	x3, x0
  4029a4:	mov	w0, wzr
  4029a8:	mov	w1, wzr
  4029ac:	mov	x2, x19
  4029b0:	bl	4018e0 <error@plt>
  4029b4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4029b8:	ldr	x19, [x8, #664]
  4029bc:	adrp	x1, 406000 <ferror@plt+0x4360>
  4029c0:	add	x1, x1, #0xf5d
  4029c4:	mov	w2, #0x5                   	// #5
  4029c8:	mov	x0, xzr
  4029cc:	bl	401c00 <dcgettext@plt>
  4029d0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4029d4:	mov	x3, x0
  4029d8:	add	x2, x2, #0x441
  4029dc:	mov	w1, #0x1                   	// #1
  4029e0:	mov	x0, x19
  4029e4:	bl	401b30 <__fprintf_chk@plt>
  4029e8:	mov	w0, #0x1                   	// #1
  4029ec:	bl	401dbc <ferror@plt+0x11c>
  4029f0:	bl	401c50 <__errno_location@plt>
  4029f4:	ldr	w1, [x0]
  4029f8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4029fc:	add	x2, x2, #0x2be
  402a00:	mov	w0, #0x1                   	// #1
  402a04:	bl	4018e0 <error@plt>
  402a08:	adrp	x1, 406000 <ferror@plt+0x4360>
  402a0c:	add	x1, x1, #0xfac
  402a10:	mov	w2, #0x5                   	// #5
  402a14:	mov	x0, xzr
  402a18:	bl	401c00 <dcgettext@plt>
  402a1c:	mov	x20, x0
  402a20:	mov	w0, #0x4                   	// #4
  402a24:	mov	x1, x19
  402a28:	bl	404d28 <ferror@plt+0x3088>
  402a2c:	mov	x3, x0
  402a30:	mov	w0, #0x1                   	// #1
  402a34:	mov	w1, wzr
  402a38:	mov	x2, x20
  402a3c:	bl	4018e0 <error@plt>
  402a40:	sub	sp, sp, #0x70
  402a44:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402a48:	ldrb	w8, [x8, #732]
  402a4c:	stp	x26, x25, [sp, #48]
  402a50:	stp	x24, x23, [sp, #64]
  402a54:	stp	x22, x21, [sp, #80]
  402a58:	stp	x20, x19, [sp, #96]
  402a5c:	mov	x19, x5
  402a60:	mov	x20, x4
  402a64:	mov	x22, x3
  402a68:	mov	x23, x2
  402a6c:	mov	x24, x1
  402a70:	cmp	w8, #0x1
  402a74:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x11944>
  402a78:	stp	x29, x30, [sp, #32]
  402a7c:	add	x29, sp, #0x20
  402a80:	b.ne	402ab0 <ferror@plt+0xe10>  // b.any
  402a84:	ldr	w25, [x26, #784]
  402a88:	adrp	x21, 406000 <ferror@plt+0x4360>
  402a8c:	add	x1, sp, #0x8
  402a90:	add	x21, x21, #0xb10
  402a94:	bl	403780 <ferror@plt+0x1ae0>
  402a98:	mov	x3, x0
  402a9c:	add	x1, x21, #0x1
  402aa0:	mov	w0, #0x1                   	// #1
  402aa4:	mov	w2, w25
  402aa8:	bl	401a20 <__printf_chk@plt>
  402aac:	b	402ab8 <ferror@plt+0xe18>
  402ab0:	adrp	x21, 406000 <ferror@plt+0x4360>
  402ab4:	add	x21, x21, #0xb11
  402ab8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402abc:	ldrb	w8, [x8, #731]
  402ac0:	cmp	w8, #0x1
  402ac4:	b.ne	402af4 <ferror@plt+0xe54>  // b.any
  402ac8:	ldr	w25, [x26, #784]
  402acc:	add	x1, sp, #0x8
  402ad0:	mov	x0, x24
  402ad4:	bl	403780 <ferror@plt+0x1ae0>
  402ad8:	mov	x3, x0
  402adc:	mov	w0, #0x1                   	// #1
  402ae0:	mov	x1, x21
  402ae4:	mov	w2, w25
  402ae8:	bl	401a20 <__printf_chk@plt>
  402aec:	adrp	x21, 406000 <ferror@plt+0x4360>
  402af0:	add	x21, x21, #0xb10
  402af4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402af8:	ldrb	w8, [x8, #730]
  402afc:	cmp	w8, #0x1
  402b00:	b.ne	402b30 <ferror@plt+0xe90>  // b.any
  402b04:	ldr	w24, [x26, #784]
  402b08:	add	x1, sp, #0x8
  402b0c:	mov	x0, x23
  402b10:	bl	403780 <ferror@plt+0x1ae0>
  402b14:	mov	x3, x0
  402b18:	mov	w0, #0x1                   	// #1
  402b1c:	mov	x1, x21
  402b20:	mov	w2, w24
  402b24:	bl	401a20 <__printf_chk@plt>
  402b28:	adrp	x21, 406000 <ferror@plt+0x4360>
  402b2c:	add	x21, x21, #0xb10
  402b30:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402b34:	ldrb	w8, [x8, #729]
  402b38:	cmp	w8, #0x1
  402b3c:	b.ne	402b6c <ferror@plt+0xecc>  // b.any
  402b40:	ldr	w23, [x26, #784]
  402b44:	add	x1, sp, #0x8
  402b48:	mov	x0, x22
  402b4c:	bl	403780 <ferror@plt+0x1ae0>
  402b50:	mov	x3, x0
  402b54:	mov	w0, #0x1                   	// #1
  402b58:	mov	x1, x21
  402b5c:	mov	w2, w23
  402b60:	bl	401a20 <__printf_chk@plt>
  402b64:	adrp	x21, 406000 <ferror@plt+0x4360>
  402b68:	add	x21, x21, #0xb10
  402b6c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402b70:	ldrb	w8, [x8, #733]
  402b74:	cmp	w8, #0x1
  402b78:	b.ne	402ba0 <ferror@plt+0xf00>  // b.any
  402b7c:	ldr	w22, [x26, #784]
  402b80:	add	x1, sp, #0x8
  402b84:	mov	x0, x20
  402b88:	bl	403780 <ferror@plt+0x1ae0>
  402b8c:	mov	x3, x0
  402b90:	mov	w0, #0x1                   	// #1
  402b94:	mov	x1, x21
  402b98:	mov	w2, w22
  402b9c:	bl	401a20 <__printf_chk@plt>
  402ba0:	cbz	x19, 402bdc <ferror@plt+0xf3c>
  402ba4:	mov	w1, #0xa                   	// #10
  402ba8:	mov	x0, x19
  402bac:	bl	401b90 <strchr@plt>
  402bb0:	cbz	x0, 402bc8 <ferror@plt+0xf28>
  402bb4:	mov	w1, #0x3                   	// #3
  402bb8:	mov	w0, wzr
  402bbc:	mov	x2, x19
  402bc0:	bl	404f54 <ferror@plt+0x32b4>
  402bc4:	mov	x19, x0
  402bc8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402bcc:	add	x1, x1, #0x257
  402bd0:	mov	w0, #0x1                   	// #1
  402bd4:	mov	x2, x19
  402bd8:	bl	401a20 <__printf_chk@plt>
  402bdc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402be0:	ldr	x0, [x8, #688]
  402be4:	ldp	x8, x9, [x0, #40]
  402be8:	cmp	x8, x9
  402bec:	b.cs	402c1c <ferror@plt+0xf7c>  // b.hs, b.nlast
  402bf0:	add	x9, x8, #0x1
  402bf4:	mov	w10, #0xa                   	// #10
  402bf8:	str	x9, [x0, #40]
  402bfc:	strb	w10, [x8]
  402c00:	ldp	x20, x19, [sp, #96]
  402c04:	ldp	x22, x21, [sp, #80]
  402c08:	ldp	x24, x23, [sp, #64]
  402c0c:	ldp	x26, x25, [sp, #48]
  402c10:	ldp	x29, x30, [sp, #32]
  402c14:	add	sp, sp, #0x70
  402c18:	ret
  402c1c:	mov	w1, #0xa                   	// #10
  402c20:	bl	401af0 <__overflow@plt>
  402c24:	b	402c00 <ferror@plt+0xf60>
  402c28:	stp	x29, x30, [sp, #-96]!
  402c2c:	stp	x28, x27, [sp, #16]
  402c30:	stp	x26, x25, [sp, #32]
  402c34:	stp	x24, x23, [sp, #48]
  402c38:	stp	x22, x21, [sp, #64]
  402c3c:	stp	x20, x19, [sp, #80]
  402c40:	mov	x29, sp
  402c44:	sub	sp, sp, #0x4, lsl #12
  402c48:	sub	sp, sp, #0x40
  402c4c:	mov	x25, x3
  402c50:	mov	x23, x2
  402c54:	mov	x27, x1
  402c58:	mov	w28, w0
  402c5c:	mov	x22, x1
  402c60:	cbnz	x1, 402c7c <ferror@plt+0xfdc>
  402c64:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  402c68:	add	x1, x1, #0x234
  402c6c:	mov	w2, #0x5                   	// #5
  402c70:	mov	x0, xzr
  402c74:	bl	401c00 <dcgettext@plt>
  402c78:	mov	x22, x0
  402c7c:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402c80:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11944>
  402c84:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402c88:	ldrb	w11, [x11, #730]
  402c8c:	cmp	x0, #0x1
  402c90:	ldrb	w8, [x8, #729]
  402c94:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  402c98:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11944>
  402c9c:	cset	w10, hi  // hi = pmore
  402ca0:	cmp	x0, #0x2
  402ca4:	ldrb	w9, [x9, #731]
  402ca8:	ldrb	w12, [x12, #733]
  402cac:	cset	w13, cc  // cc = lo, ul, last
  402cb0:	and	w13, w11, w13
  402cb4:	orr	w8, w8, w13
  402cb8:	and	w26, w10, w11
  402cbc:	eor	w8, w8, #0x1
  402cc0:	orr	w19, w9, w12
  402cc4:	orr	w20, w26, w8
  402cc8:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x11944>
  402ccc:	tbnz	w20, #0, 402ce4 <ferror@plt+0x1044>
  402cd0:	ldrb	w8, [x21, #732]
  402cd4:	tbnz	w8, #0, 402ce4 <ferror@plt+0x1044>
  402cd8:	tbnz	w19, #0, 402ce4 <ferror@plt+0x1044>
  402cdc:	mov	w8, wzr
  402ce0:	b	402cfc <ferror@plt+0x105c>
  402ce4:	mov	w3, #0x2                   	// #2
  402ce8:	mov	w0, w28
  402cec:	mov	x1, xzr
  402cf0:	mov	x2, xzr
  402cf4:	bl	403748 <ferror@plt+0x1aa8>
  402cf8:	ldrb	w8, [x21, #732]
  402cfc:	orr	w8, w19, w8
  402d00:	orr	w8, w20, w8
  402d04:	str	w26, [sp, #16]
  402d08:	tbz	w8, #0, 402f84 <ferror@plt+0x12e4>
  402d0c:	orr	w8, w26, w19
  402d10:	stp	x22, x27, [sp]
  402d14:	tbz	w8, #0, 402fec <ferror@plt+0x134c>
  402d18:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  402d1c:	cmp	x0, #0x1
  402d20:	mov	x19, xzr
  402d24:	str	w28, [sp, #20]
  402d28:	b.ls	4031cc <ferror@plt+0x152c>  // b.plast
  402d2c:	mov	x28, xzr
  402d30:	mov	x27, xzr
  402d34:	mov	x23, xzr
  402d38:	mov	w22, wzr
  402d3c:	mov	x21, xzr
  402d40:	mov	w20, wzr
  402d44:	mov	x26, xzr
  402d48:	str	xzr, [sp, #24]
  402d4c:	str	xzr, [sp, #40]
  402d50:	b	402d58 <ferror@plt+0x10b8>
  402d54:	mov	x26, xzr
  402d58:	ldr	w0, [sp, #20]
  402d5c:	add	x8, sp, #0x34
  402d60:	add	x1, x8, x26
  402d64:	mov	w8, #0x4000                	// #16384
  402d68:	sub	x2, x8, x26
  402d6c:	bl	405634 <ferror@plt+0x3994>
  402d70:	cbz	x0, 403354 <ferror@plt+0x16b4>
  402d74:	cmn	x0, #0x1
  402d78:	b.eq	40335c <ferror@plt+0x16bc>  // b.none
  402d7c:	ldr	x8, [sp, #24]
  402d80:	add	x24, sp, #0x34
  402d84:	add	x25, x0, x26
  402d88:	add	x8, x0, x8
  402d8c:	str	x8, [sp, #24]
  402d90:	b	402da4 <ferror@plt+0x1104>
  402d94:	add	x24, x24, #0x1
  402d98:	sub	x25, x25, #0x1
  402d9c:	mov	w20, #0x1                   	// #1
  402da0:	cbz	x25, 402d54 <ferror@plt+0x10b4>
  402da4:	tbnz	w20, #0, 402de0 <ferror@plt+0x1140>
  402da8:	ldrb	w9, [x24]
  402dac:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x944>
  402db0:	add	x10, x10, #0x25c
  402db4:	lsr	x8, x9, #3
  402db8:	and	x8, x8, #0x1c
  402dbc:	ldr	w8, [x10, x8]
  402dc0:	lsr	w8, w8, w9
  402dc4:	tbz	w8, #0, 402de0 <ferror@plt+0x1140>
  402dc8:	and	w0, w9, #0xff
  402dcc:	mov	w20, wzr
  402dd0:	mov	w8, wzr
  402dd4:	str	w0, [sp, #36]
  402dd8:	mov	w26, #0x1                   	// #1
  402ddc:	b	402e28 <ferror@plt+0x1188>
  402de0:	ldr	x20, [sp, #40]
  402de4:	add	x0, sp, #0x24
  402de8:	add	x3, sp, #0x28
  402dec:	mov	x1, x24
  402df0:	mov	x2, x25
  402df4:	bl	4062e4 <ferror@plt+0x4644>
  402df8:	cmn	x0, #0x1
  402dfc:	b.eq	402d94 <ferror@plt+0x10f4>  // b.none
  402e00:	mov	x26, x0
  402e04:	cmn	x0, #0x2
  402e08:	b.eq	402f4c <ferror@plt+0x12ac>  // b.none
  402e0c:	add	x0, sp, #0x28
  402e10:	bl	401ae0 <mbsinit@plt>
  402e14:	cmp	w0, #0x0
  402e18:	cset	w20, eq  // eq = none
  402e1c:	cbz	x26, 402e58 <ferror@plt+0x11b8>
  402e20:	ldr	w0, [sp, #36]
  402e24:	mov	w8, #0x1                   	// #1
  402e28:	sub	w9, w0, #0x9
  402e2c:	cmp	w9, #0x17
  402e30:	b.hi	402e7c <ferror@plt+0x11dc>  // b.pmore
  402e34:	adrp	x12, 406000 <ferror@plt+0x4360>
  402e38:	add	x12, x12, #0x968
  402e3c:	adr	x10, 402e4c <ferror@plt+0x11ac>
  402e40:	ldrb	w11, [x12, x9]
  402e44:	add	x10, x10, x11, lsl #2
  402e48:	br	x10
  402e4c:	and	x8, x21, #0xfffffffffffffff8
  402e50:	add	x21, x8, #0x8
  402e54:	b	402eec <ferror@plt+0x124c>
  402e58:	mov	w0, wzr
  402e5c:	str	wzr, [sp, #36]
  402e60:	mov	w26, #0x1                   	// #1
  402e64:	b	402e80 <ferror@plt+0x11e0>
  402e68:	add	x23, x23, #0x1
  402e6c:	cmp	x21, x19
  402e70:	csel	x19, x21, x19, hi  // hi = pmore
  402e74:	mov	x21, xzr
  402e78:	b	402eec <ferror@plt+0x124c>
  402e7c:	cbz	w8, 402f0c <ferror@plt+0x126c>
  402e80:	bl	401c30 <iswprint@plt>
  402e84:	cbz	w0, 402ef8 <ferror@plt+0x1258>
  402e88:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402e8c:	ldrb	w8, [x8, #733]
  402e90:	cmp	w8, #0x1
  402e94:	b.ne	402ea8 <ferror@plt+0x1208>  // b.any
  402e98:	ldr	w0, [sp, #36]
  402e9c:	bl	4019b0 <wcwidth@plt>
  402ea0:	bic	w8, w0, w0, asr #31
  402ea4:	add	x21, x21, x8
  402ea8:	ldr	w0, [sp, #36]
  402eac:	bl	401970 <iswspace@plt>
  402eb0:	cbnz	w0, 402eec <ferror@plt+0x124c>
  402eb4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  402eb8:	ldrb	w8, [x8, #728]
  402ebc:	cbnz	w8, 402f28 <ferror@plt+0x1288>
  402ec0:	ldr	w8, [sp, #36]
  402ec4:	mov	w9, #0x202e                	// #8238
  402ec8:	cmp	w8, w9
  402ecc:	b.gt	402f30 <ferror@plt+0x1290>
  402ed0:	cmp	w8, #0xa0
  402ed4:	b.eq	402eec <ferror@plt+0x124c>  // b.none
  402ed8:	mov	w9, #0x2007                	// #8199
  402edc:	cmp	w8, w9
  402ee0:	b.eq	402eec <ferror@plt+0x124c>  // b.none
  402ee4:	b	402f28 <ferror@plt+0x1288>
  402ee8:	add	x21, x21, #0x1
  402eec:	and	x8, x22, #0x1
  402ef0:	mov	w22, wzr
  402ef4:	add	x27, x27, x8
  402ef8:	add	x24, x24, x26
  402efc:	sub	x25, x25, x26
  402f00:	add	x28, x28, #0x1
  402f04:	cbnz	x25, 402da4 <ferror@plt+0x1104>
  402f08:	b	402d54 <ferror@plt+0x10b4>
  402f0c:	bl	401b50 <__ctype_b_loc@plt>
  402f10:	ldr	x8, [x0]
  402f14:	ldrb	w9, [x24]
  402f18:	ldrh	w8, [x8, x9, lsl #1]
  402f1c:	tbz	w8, #14, 402ef8 <ferror@plt+0x1258>
  402f20:	add	x21, x21, #0x1
  402f24:	tbnz	w8, #13, 402eec <ferror@plt+0x124c>
  402f28:	mov	w22, #0x1                   	// #1
  402f2c:	b	402ef8 <ferror@plt+0x1258>
  402f30:	mov	w9, #0x202f                	// #8239
  402f34:	cmp	w8, w9
  402f38:	b.eq	402eec <ferror@plt+0x124c>  // b.none
  402f3c:	mov	w9, #0x2060                	// #8288
  402f40:	cmp	w8, w9
  402f44:	b.eq	402eec <ferror@plt+0x124c>  // b.none
  402f48:	b	402f28 <ferror@plt+0x1288>
  402f4c:	mov	x26, xzr
  402f50:	str	x20, [sp, #40]
  402f54:	mov	w20, #0x1                   	// #1
  402f58:	cbz	x25, 402d58 <ferror@plt+0x10b8>
  402f5c:	cmp	x25, #0x4, lsl #12
  402f60:	mov	w8, #0x3fff                	// #16383
  402f64:	csel	x26, x8, x25, eq  // eq = none
  402f68:	cinc	x1, x24, eq  // eq = none
  402f6c:	add	x0, sp, #0x34
  402f70:	mov	w3, #0x4001                	// #16385
  402f74:	mov	x2, x26
  402f78:	bl	401c80 <__memmove_chk@plt>
  402f7c:	mov	w20, #0x1                   	// #1
  402f80:	b	402d58 <ferror@plt+0x10b8>
  402f84:	ldr	w0, [x23]
  402f88:	cmp	w0, #0x1
  402f8c:	b.lt	402fa4 <ferror@plt+0x1304>  // b.tstop
  402f90:	add	x2, x23, #0x8
  402f94:	mov	w0, wzr
  402f98:	mov	w1, w28
  402f9c:	bl	401bf0 <__fxstat@plt>
  402fa0:	str	w0, [x23]
  402fa4:	cbz	w0, 403160 <ferror@plt+0x14c0>
  402fa8:	mov	x21, x22
  402fac:	mov	x20, xzr
  402fb0:	mov	w3, #0x2                   	// #2
  402fb4:	mov	w0, w28
  402fb8:	mov	x1, xzr
  402fbc:	mov	x2, xzr
  402fc0:	bl	403748 <ferror@plt+0x1aa8>
  402fc4:	add	x1, sp, #0x34
  402fc8:	mov	w2, #0x4000                	// #16384
  402fcc:	mov	w0, w28
  402fd0:	bl	405634 <ferror@plt+0x3994>
  402fd4:	mov	x24, x0
  402fd8:	cbz	x0, 4030fc <ferror@plt+0x145c>
  402fdc:	cmn	x24, #0x1
  402fe0:	b.eq	403114 <ferror@plt+0x1474>  // b.none
  402fe4:	add	x20, x24, x20
  402fe8:	b	402fc4 <ferror@plt+0x1324>
  402fec:	add	x19, sp, #0x34
  402ff0:	mov	x21, #0x8888888888888888    	// #-8608480567731124088
  402ff4:	mov	w27, w28
  402ff8:	mov	x28, xzr
  402ffc:	mov	x23, xzr
  403000:	mov	w25, wzr
  403004:	orr	x20, x19, #0x1
  403008:	movk	x21, #0x8889
  40300c:	b	403024 <ferror@plt+0x1384>
  403010:	sub	x8, x22, x23
  403014:	umulh	x9, x24, x21
  403018:	cmp	x8, x9, lsr #3
  40301c:	cset	w25, ls  // ls = plast
  403020:	mov	x23, x22
  403024:	add	x1, sp, #0x34
  403028:	mov	w2, #0x4000                	// #16384
  40302c:	mov	w0, w27
  403030:	bl	405634 <ferror@plt+0x3994>
  403034:	mov	x24, x0
  403038:	cbz	x0, 4032f4 <ferror@plt+0x1654>
  40303c:	cmn	x24, #0x1
  403040:	b.eq	403308 <ferror@plt+0x1668>  // b.none
  403044:	add	x28, x24, x28
  403048:	tbz	w25, #0, 403088 <ferror@plt+0x13e8>
  40304c:	add	x0, sp, #0x34
  403050:	mov	w1, #0xa                   	// #10
  403054:	mov	x2, x24
  403058:	bl	401bd0 <memchr@plt>
  40305c:	mov	x22, x23
  403060:	cbz	x0, 403010 <ferror@plt+0x1370>
  403064:	add	x25, x19, x24
  403068:	mov	x22, x23
  40306c:	add	x0, x0, #0x1
  403070:	sub	x2, x25, x0
  403074:	mov	w1, #0xa                   	// #10
  403078:	add	x22, x22, #0x1
  40307c:	bl	401bd0 <memchr@plt>
  403080:	cbnz	x0, 40306c <ferror@plt+0x13cc>
  403084:	b	403010 <ferror@plt+0x1370>
  403088:	cmp	x24, #0x1
  40308c:	b.hi	40309c <ferror@plt+0x13fc>  // b.pmore
  403090:	add	x8, sp, #0x34
  403094:	mov	x22, x23
  403098:	b	4030e0 <ferror@plt+0x1440>
  40309c:	and	x10, x24, #0xfffffffffffffffe
  4030a0:	mov	x9, xzr
  4030a4:	add	x8, x19, x10
  4030a8:	mov	x12, x10
  4030ac:	mov	x13, x20
  4030b0:	mov	x11, x23
  4030b4:	ldurb	w14, [x13, #-1]
  4030b8:	ldrb	w15, [x13], #2
  4030bc:	cmp	w14, #0xa
  4030c0:	cinc	x11, x11, eq  // eq = none
  4030c4:	cmp	w15, #0xa
  4030c8:	cinc	x9, x9, eq  // eq = none
  4030cc:	subs	x12, x12, #0x2
  4030d0:	b.ne	4030b4 <ferror@plt+0x1414>  // b.any
  4030d4:	cmp	x24, x10
  4030d8:	add	x22, x9, x11
  4030dc:	b.eq	403010 <ferror@plt+0x1370>  // b.none
  4030e0:	add	x9, x19, x24
  4030e4:	ldrb	w10, [x8], #1
  4030e8:	cmp	w10, #0xa
  4030ec:	cinc	x22, x22, eq  // eq = none
  4030f0:	cmp	x9, x8
  4030f4:	b.ne	4030e4 <ferror@plt+0x1444>  // b.any
  4030f8:	b	403010 <ferror@plt+0x1370>
  4030fc:	mov	w26, #0x1                   	// #1
  403100:	mov	x28, x24
  403104:	mov	x22, x24
  403108:	mov	x23, x24
  40310c:	str	x20, [sp, #24]
  403110:	b	4033fc <ferror@plt+0x175c>
  403114:	str	x20, [sp, #24]
  403118:	bl	401c50 <__errno_location@plt>
  40311c:	ldr	w22, [x0]
  403120:	mov	w1, #0x3                   	// #3
  403124:	mov	w0, wzr
  403128:	mov	x2, x21
  40312c:	bl	404f54 <ferror@plt+0x32b4>
  403130:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  403134:	mov	x3, x0
  403138:	add	x2, x2, #0x258
  40313c:	mov	w0, wzr
  403140:	mov	w1, w22
  403144:	bl	4018e0 <error@plt>
  403148:	mov	x24, xzr
  40314c:	mov	x28, xzr
  403150:	mov	x22, xzr
  403154:	mov	x23, xzr
  403158:	mov	w26, wzr
  40315c:	b	4033fc <ferror@plt+0x175c>
  403160:	ldr	w8, [x23, #24]
  403164:	and	w8, w8, #0xf000
  403168:	orr	w8, w8, #0x2000
  40316c:	cmp	w8, #0xa, lsl #12
  403170:	b.ne	402fa8 <ferror@plt+0x1308>  // b.any
  403174:	ldr	x19, [x23, #56]
  403178:	tbnz	x19, #63, 402fa8 <ferror@plt+0x1308>
  40317c:	tbz	x25, #63, 403194 <ferror@plt+0x14f4>
  403180:	mov	w2, #0x1                   	// #1
  403184:	mov	w0, w28
  403188:	mov	x1, xzr
  40318c:	bl	401930 <lseek@plt>
  403190:	mov	x25, x0
  403194:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403198:	ldr	x8, [x8, #720]
  40319c:	udiv	x9, x19, x8
  4031a0:	msub	x8, x9, x8, x19
  4031a4:	cbz	x8, 4034b0 <ferror@plt+0x1810>
  4031a8:	subs	x8, x19, x25
  4031ac:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
  4031b0:	mov	x24, xzr
  4031b4:	mov	x28, xzr
  4031b8:	mov	x22, xzr
  4031bc:	mov	x23, xzr
  4031c0:	str	x8, [sp, #24]
  4031c4:	mov	w26, #0x1                   	// #1
  4031c8:	b	4033fc <ferror@plt+0x175c>
  4031cc:	adrp	x26, 406000 <ferror@plt+0x4360>
  4031d0:	mov	x24, xzr
  4031d4:	mov	x20, xzr
  4031d8:	mov	x23, xzr
  4031dc:	mov	w27, wzr
  4031e0:	mov	x21, xzr
  4031e4:	add	x26, x26, #0x950
  4031e8:	b	4031f8 <ferror@plt+0x1558>
  4031ec:	ldr	x24, [sp, #24]
  4031f0:	ldr	w28, [sp, #20]
  4031f4:	add	x24, x22, x24
  4031f8:	add	x1, sp, #0x34
  4031fc:	mov	w2, #0x4000                	// #16384
  403200:	mov	w0, w28
  403204:	bl	405634 <ferror@plt+0x3994>
  403208:	cmn	x0, #0x1
  40320c:	str	x24, [sp, #24]
  403210:	b.eq	4033a8 <ferror@plt+0x1708>  // b.none
  403214:	mov	x22, x0
  403218:	cbz	x0, 4033e0 <ferror@plt+0x1740>
  40321c:	add	x28, sp, #0x34
  403220:	mov	x24, x22
  403224:	b	40324c <ferror@plt+0x15ac>
  403228:	add	x23, x23, #0x1
  40322c:	cmp	x21, x19
  403230:	csel	x19, x21, x19, hi  // hi = pmore
  403234:	mov	x21, xzr
  403238:	and	x8, x27, #0x1
  40323c:	mov	w27, wzr
  403240:	add	x20, x20, x8
  403244:	subs	x24, x24, #0x1
  403248:	b.eq	4031ec <ferror@plt+0x154c>  // b.none
  40324c:	ldrb	w25, [x28], #1
  403250:	sub	w8, w25, #0x9
  403254:	cmp	w8, #0x17
  403258:	b.hi	403278 <ferror@plt+0x15d8>  // b.pmore
  40325c:	adr	x9, 403228 <ferror@plt+0x1588>
  403260:	ldrb	w10, [x26, x8]
  403264:	add	x9, x9, x10, lsl #2
  403268:	br	x9
  40326c:	and	x8, x21, #0xfffffffffffffff8
  403270:	add	x21, x8, #0x8
  403274:	b	403238 <ferror@plt+0x1598>
  403278:	bl	401b50 <__ctype_b_loc@plt>
  40327c:	ldr	x8, [x0]
  403280:	ldrh	w8, [x8, x25, lsl #1]
  403284:	tbz	w8, #14, 403244 <ferror@plt+0x15a4>
  403288:	add	x21, x21, #0x1
  40328c:	tbnz	w8, #13, 403238 <ferror@plt+0x1598>
  403290:	mov	w0, w25
  403294:	bl	401ab0 <btowc@plt>
  403298:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40329c:	ldrb	w8, [x8, #728]
  4032a0:	cbz	w8, 4032b4 <ferror@plt+0x1614>
  4032a4:	mov	w27, #0x1                   	// #1
  4032a8:	b	403244 <ferror@plt+0x15a4>
  4032ac:	add	x21, x21, #0x1
  4032b0:	b	403238 <ferror@plt+0x1598>
  4032b4:	mov	w8, #0x202e                	// #8238
  4032b8:	cmp	w0, w8
  4032bc:	b.gt	4032d8 <ferror@plt+0x1638>
  4032c0:	cmp	w0, #0xa0
  4032c4:	b.eq	403238 <ferror@plt+0x1598>  // b.none
  4032c8:	mov	w8, #0x2007                	// #8199
  4032cc:	cmp	w0, w8
  4032d0:	b.eq	403238 <ferror@plt+0x1598>  // b.none
  4032d4:	b	4032a4 <ferror@plt+0x1604>
  4032d8:	mov	w8, #0x202f                	// #8239
  4032dc:	cmp	w0, w8
  4032e0:	b.eq	403238 <ferror@plt+0x1598>  // b.none
  4032e4:	mov	w8, #0x2060                	// #8288
  4032e8:	cmp	w0, w8
  4032ec:	b.eq	403238 <ferror@plt+0x1598>  // b.none
  4032f0:	b	4032a4 <ferror@plt+0x1604>
  4032f4:	str	x28, [sp, #24]
  4032f8:	mov	w26, #0x1                   	// #1
  4032fc:	mov	x28, x24
  403300:	mov	x22, x24
  403304:	b	40334c <ferror@plt+0x16ac>
  403308:	str	x28, [sp, #24]
  40330c:	bl	401c50 <__errno_location@plt>
  403310:	ldr	x2, [sp]
  403314:	ldr	w22, [x0]
  403318:	mov	w1, #0x3                   	// #3
  40331c:	mov	w0, wzr
  403320:	bl	404f54 <ferror@plt+0x32b4>
  403324:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  403328:	mov	x3, x0
  40332c:	add	x2, x2, #0x258
  403330:	mov	w0, wzr
  403334:	mov	w1, w22
  403338:	bl	4018e0 <error@plt>
  40333c:	mov	x24, xzr
  403340:	mov	x28, xzr
  403344:	mov	x22, xzr
  403348:	mov	w26, wzr
  40334c:	ldr	x27, [sp, #8]
  403350:	b	4033fc <ferror@plt+0x175c>
  403354:	mov	w26, #0x1                   	// #1
  403358:	b	403390 <ferror@plt+0x16f0>
  40335c:	bl	401c50 <__errno_location@plt>
  403360:	ldr	x2, [sp]
  403364:	ldr	w24, [x0]
  403368:	mov	w1, #0x3                   	// #3
  40336c:	mov	w0, wzr
  403370:	bl	404f54 <ferror@plt+0x32b4>
  403374:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  403378:	mov	x3, x0
  40337c:	add	x2, x2, #0x258
  403380:	mov	w0, wzr
  403384:	mov	w1, w24
  403388:	bl	4018e0 <error@plt>
  40338c:	mov	w26, wzr
  403390:	and	x8, x22, #0x1
  403394:	add	x22, x27, x8
  403398:	ldr	x27, [sp, #8]
  40339c:	cmp	x21, x19
  4033a0:	csel	x24, x21, x19, hi  // hi = pmore
  4033a4:	b	4033fc <ferror@plt+0x175c>
  4033a8:	bl	401c50 <__errno_location@plt>
  4033ac:	ldr	x2, [sp]
  4033b0:	ldr	w22, [x0]
  4033b4:	mov	w1, #0x3                   	// #3
  4033b8:	mov	w0, wzr
  4033bc:	bl	404f54 <ferror@plt+0x32b4>
  4033c0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4033c4:	mov	x3, x0
  4033c8:	add	x2, x2, #0x258
  4033cc:	mov	w0, wzr
  4033d0:	mov	w1, w22
  4033d4:	bl	4018e0 <error@plt>
  4033d8:	mov	w26, wzr
  4033dc:	b	4033e4 <ferror@plt+0x1744>
  4033e0:	mov	w26, #0x1                   	// #1
  4033e4:	and	x8, x27, #0x1
  4033e8:	ldr	x27, [sp, #8]
  4033ec:	cmp	x21, x19
  4033f0:	mov	x28, xzr
  4033f4:	csel	x24, x21, x19, hi  // hi = pmore
  4033f8:	add	x22, x20, x8
  4033fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403400:	ldr	w9, [sp, #16]
  403404:	ldrb	w8, [x8, #730]
  403408:	ldr	x19, [sp, #24]
  40340c:	mov	x0, x23
  403410:	eor	w9, w9, #0x1
  403414:	tst	w8, w9
  403418:	csel	x25, x19, x28, ne  // ne = any
  40341c:	mov	x1, x22
  403420:	mov	x2, x25
  403424:	mov	x3, x19
  403428:	mov	x4, x24
  40342c:	mov	x5, x27
  403430:	bl	402a40 <ferror@plt+0xda0>
  403434:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  403438:	ldr	x11, [x9, #768]
  40343c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11944>
  403440:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11944>
  403444:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x11944>
  403448:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40344c:	add	x11, x11, x23
  403450:	ldr	x14, [x10, #760]
  403454:	str	x11, [x9, #768]
  403458:	ldr	x9, [x12, #752]
  40345c:	ldr	x11, [x13, #744]
  403460:	ldr	x15, [x8, #736]
  403464:	add	x14, x14, x22
  403468:	str	x14, [x10, #760]
  40346c:	add	x9, x9, x25
  403470:	add	x10, x11, x19
  403474:	cmp	x24, x15
  403478:	str	x9, [x12, #752]
  40347c:	str	x10, [x13, #744]
  403480:	b.ls	403488 <ferror@plt+0x17e8>  // b.plast
  403484:	str	x24, [x8, #736]
  403488:	mov	w0, w26
  40348c:	add	sp, sp, #0x4, lsl #12
  403490:	add	sp, sp, #0x40
  403494:	ldp	x20, x19, [sp, #80]
  403498:	ldp	x22, x21, [sp, #64]
  40349c:	ldp	x24, x23, [sp, #48]
  4034a0:	ldp	x26, x25, [sp, #32]
  4034a4:	ldp	x28, x27, [sp, #16]
  4034a8:	ldp	x29, x30, [sp], #96
  4034ac:	ret
  4034b0:	ldr	w8, [x23, #64]
  4034b4:	mov	w9, #0x201                 	// #513
  4034b8:	mov	x21, x22
  4034bc:	mov	x20, xzr
  4034c0:	cmp	w8, #0x0
  4034c4:	csinc	w8, w9, w8, le
  4034c8:	tbnz	x25, #63, 402fb0 <ferror@plt+0x1310>
  4034cc:	sxtw	x8, w8
  4034d0:	udiv	x9, x19, x8
  4034d4:	mul	x1, x9, x8
  4034d8:	subs	x19, x1, x25
  4034dc:	b.le	402fb0 <ferror@plt+0x1310>
  4034e0:	mov	w2, #0x1                   	// #1
  4034e4:	mov	w0, w28
  4034e8:	bl	401930 <lseek@plt>
  4034ec:	cmp	x0, #0x0
  4034f0:	csel	x20, xzr, x19, lt  // lt = tstop
  4034f4:	b	402fb0 <ferror@plt+0x1310>
  4034f8:	stp	x29, x30, [sp, #-32]!
  4034fc:	str	x19, [sp, #16]
  403500:	mov	x19, x0
  403504:	mov	w0, #0x30                  	// #48
  403508:	mov	x29, sp
  40350c:	bl	4019a0 <malloc@plt>
  403510:	cbz	x0, 40351c <ferror@plt+0x187c>
  403514:	str	xzr, [x0]
  403518:	stp	x19, x19, [x0, #32]
  40351c:	ldr	x19, [sp, #16]
  403520:	ldp	x29, x30, [sp], #32
  403524:	ret
  403528:	stp	x29, x30, [sp, #-32]!
  40352c:	str	x19, [sp, #16]
  403530:	mov	x19, x0
  403534:	mov	w0, #0x30                  	// #48
  403538:	mov	x29, sp
  40353c:	bl	4019a0 <malloc@plt>
  403540:	cbz	x0, 403554 <ferror@plt+0x18b4>
  403544:	movi	v0.2d, #0x0
  403548:	str	x19, [x0]
  40354c:	stur	q0, [x0, #8]
  403550:	stur	q0, [x0, #24]
  403554:	ldr	x19, [sp, #16]
  403558:	ldp	x29, x30, [sp], #32
  40355c:	ret
  403560:	stp	x29, x30, [sp, #-32]!
  403564:	stp	x20, x19, [sp, #16]
  403568:	ldr	x3, [x0]
  40356c:	mov	x20, x0
  403570:	mov	x19, x1
  403574:	mov	x29, sp
  403578:	cbz	x3, 4035a8 <ferror@plt+0x1908>
  40357c:	add	x0, x20, #0x10
  403580:	add	x1, x20, #0x18
  403584:	mov	w2, wzr
  403588:	bl	4019c0 <getdelim@plt>
  40358c:	tbnz	x0, #63, 4035d0 <ferror@plt+0x1930>
  403590:	mov	w8, #0x1                   	// #1
  403594:	str	w8, [x19]
  403598:	ldp	x8, x0, [x20, #8]
  40359c:	add	x8, x8, #0x1
  4035a0:	str	x8, [x20, #8]
  4035a4:	b	4035fc <ferror@plt+0x195c>
  4035a8:	ldr	x8, [x20, #40]
  4035ac:	ldr	x8, [x8]
  4035b0:	cbz	x8, 4035f0 <ferror@plt+0x1950>
  4035b4:	mov	w8, #0x1                   	// #1
  4035b8:	str	w8, [x19]
  4035bc:	ldr	x8, [x20, #40]
  4035c0:	add	x9, x8, #0x8
  4035c4:	str	x9, [x20, #40]
  4035c8:	ldr	x0, [x8]
  4035cc:	b	4035fc <ferror@plt+0x195c>
  4035d0:	ldr	x0, [x20]
  4035d4:	bl	401b00 <feof@plt>
  4035d8:	mov	w8, w0
  4035dc:	cmp	w8, #0x0
  4035e0:	mov	w8, #0x2                   	// #2
  4035e4:	mov	w9, #0x4                   	// #4
  4035e8:	csel	w8, w9, w8, eq  // eq = none
  4035ec:	b	4035f4 <ferror@plt+0x1954>
  4035f0:	mov	w8, #0x2                   	// #2
  4035f4:	mov	x0, xzr
  4035f8:	str	w8, [x19]
  4035fc:	ldp	x20, x19, [sp, #16]
  403600:	ldp	x29, x30, [sp], #32
  403604:	ret
  403608:	ldr	x8, [x0]
  40360c:	cbz	x8, 403618 <ferror@plt+0x1978>
  403610:	ldr	x0, [x0, #8]
  403614:	ret
  403618:	ldp	x9, x8, [x0, #32]
  40361c:	sub	x8, x8, x9
  403620:	asr	x0, x8, #3
  403624:	ret
  403628:	stp	x29, x30, [sp, #-32]!
  40362c:	ldr	x8, [x0]
  403630:	str	x19, [sp, #16]
  403634:	mov	x19, x0
  403638:	mov	x29, sp
  40363c:	cbz	x8, 403648 <ferror@plt+0x19a8>
  403640:	ldr	x0, [x19, #16]
  403644:	bl	401b70 <free@plt>
  403648:	mov	x0, x19
  40364c:	ldr	x19, [sp, #16]
  403650:	ldp	x29, x30, [sp], #32
  403654:	b	401b70 <free@plt>
  403658:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40365c:	str	x0, [x8, #792]
  403660:	ret
  403664:	and	w8, w0, #0x1
  403668:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  40366c:	strb	w8, [x9, #800]
  403670:	ret
  403674:	stp	x29, x30, [sp, #-48]!
  403678:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40367c:	ldr	x0, [x8, #688]
  403680:	str	x21, [sp, #16]
  403684:	stp	x20, x19, [sp, #32]
  403688:	mov	x29, sp
  40368c:	bl	406730 <_obstack_memory_used@@Base+0x74>
  403690:	cbz	w0, 4036b0 <ferror@plt+0x1a10>
  403694:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403698:	ldrb	w8, [x8, #800]
  40369c:	cbz	w8, 4036d0 <ferror@plt+0x1a30>
  4036a0:	bl	401c50 <__errno_location@plt>
  4036a4:	ldr	w8, [x0]
  4036a8:	cmp	w8, #0x20
  4036ac:	b.ne	4036d0 <ferror@plt+0x1a30>  // b.any
  4036b0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4036b4:	ldr	x0, [x8, #664]
  4036b8:	bl	406730 <_obstack_memory_used@@Base+0x74>
  4036bc:	cbnz	w0, 40373c <ferror@plt+0x1a9c>
  4036c0:	ldp	x20, x19, [sp, #32]
  4036c4:	ldr	x21, [sp, #16]
  4036c8:	ldp	x29, x30, [sp], #48
  4036cc:	ret
  4036d0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4036d4:	add	x1, x1, #0x248
  4036d8:	mov	w2, #0x5                   	// #5
  4036dc:	mov	x0, xzr
  4036e0:	bl	401c00 <dcgettext@plt>
  4036e4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4036e8:	ldr	x21, [x8, #792]
  4036ec:	mov	x19, x0
  4036f0:	bl	401c50 <__errno_location@plt>
  4036f4:	ldr	w20, [x0]
  4036f8:	cbnz	x21, 403718 <ferror@plt+0x1a78>
  4036fc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  403700:	add	x2, x2, #0x258
  403704:	mov	w0, wzr
  403708:	mov	w1, w20
  40370c:	mov	x3, x19
  403710:	bl	4018e0 <error@plt>
  403714:	b	40373c <ferror@plt+0x1a9c>
  403718:	mov	x0, x21
  40371c:	bl	404ea4 <ferror@plt+0x3204>
  403720:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  403724:	mov	x3, x0
  403728:	add	x2, x2, #0x254
  40372c:	mov	w0, wzr
  403730:	mov	w1, w20
  403734:	mov	x4, x19
  403738:	bl	4018e0 <error@plt>
  40373c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403740:	ldr	w0, [x8, #552]
  403744:	bl	4018b0 <_exit@plt>
  403748:	b	401ad0 <posix_fadvise@plt>
  40374c:	cbz	x0, 40377c <ferror@plt+0x1adc>
  403750:	stp	x29, x30, [sp, #-32]!
  403754:	str	x19, [sp, #16]
  403758:	mov	x29, sp
  40375c:	mov	w19, w1
  403760:	bl	401950 <fileno@plt>
  403764:	mov	w3, w19
  403768:	ldr	x19, [sp, #16]
  40376c:	mov	x1, xzr
  403770:	mov	x2, xzr
  403774:	ldp	x29, x30, [sp], #32
  403778:	b	401ad0 <posix_fadvise@plt>
  40377c:	ret
  403780:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  403784:	movk	x8, #0xcccd
  403788:	strb	wzr, [x1, #20]!
  40378c:	mov	w9, #0xa                   	// #10
  403790:	umulh	x10, x0, x8
  403794:	lsr	x10, x10, #3
  403798:	msub	w11, w10, w9, w0
  40379c:	orr	w11, w11, #0x30
  4037a0:	cmp	x0, #0x9
  4037a4:	strb	w11, [x1, #-1]!
  4037a8:	mov	x0, x10
  4037ac:	b.hi	403790 <ferror@plt+0x1af0>  // b.pmore
  4037b0:	mov	x0, x1
  4037b4:	ret
  4037b8:	stp	x29, x30, [sp, #-32]!
  4037bc:	str	x19, [sp, #16]
  4037c0:	mov	x29, sp
  4037c4:	mov	w19, w0
  4037c8:	bl	4019b0 <wcwidth@plt>
  4037cc:	tbz	w0, #31, 4037e0 <ferror@plt+0x1b40>
  4037d0:	mov	w0, w19
  4037d4:	bl	401910 <iswcntrl@plt>
  4037d8:	cmp	w0, #0x0
  4037dc:	cset	w0, eq  // eq = none
  4037e0:	ldr	x19, [sp, #16]
  4037e4:	ldp	x29, x30, [sp], #32
  4037e8:	ret
  4037ec:	stp	x29, x30, [sp, #-48]!
  4037f0:	str	x21, [sp, #16]
  4037f4:	stp	x20, x19, [sp, #32]
  4037f8:	mov	x8, x1
  4037fc:	mov	x19, x1
  403800:	ldr	x1, [x8], #24
  403804:	mov	x20, x0
  403808:	mov	x29, sp
  40380c:	cmp	x1, x8
  403810:	b.ne	403828 <ferror@plt+0x1b88>  // b.any
  403814:	ldr	x2, [x19, #8]
  403818:	add	x21, x20, #0x18
  40381c:	mov	x0, x21
  403820:	bl	4018a0 <memcpy@plt>
  403824:	mov	x1, x21
  403828:	str	x1, [x20]
  40382c:	ldr	x8, [x19, #8]
  403830:	str	x8, [x20, #8]
  403834:	ldrb	w8, [x19, #16]
  403838:	strb	w8, [x20, #16]
  40383c:	cbz	w8, 403848 <ferror@plt+0x1ba8>
  403840:	ldr	w8, [x19, #20]
  403844:	str	w8, [x20, #20]
  403848:	ldp	x20, x19, [sp, #32]
  40384c:	ldr	x21, [sp, #16]
  403850:	ldp	x29, x30, [sp], #48
  403854:	ret
  403858:	lsr	w8, w0, #3
  40385c:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  403860:	and	x8, x8, #0x1c
  403864:	add	x9, x9, #0x25c
  403868:	ldr	w8, [x9, x8]
  40386c:	lsr	w8, w8, w0
  403870:	and	w0, w8, #0x1
  403874:	ret
  403878:	sub	sp, sp, #0x90
  40387c:	mov	w0, #0x55                  	// #85
  403880:	stp	x29, x30, [sp, #112]
  403884:	str	x19, [sp, #128]
  403888:	add	x29, sp, #0x70
  40388c:	bl	401be0 <sysconf@plt>
  403890:	mov	x19, x0
  403894:	mov	w0, #0x1e                  	// #30
  403898:	bl	401be0 <sysconf@plt>
  40389c:	orr	x8, x0, x19
  4038a0:	tbnz	x8, #63, 4038b4 <ferror@plt+0x1c14>
  4038a4:	scvtf	d0, x0
  4038a8:	scvtf	d1, x19
  4038ac:	fmul	d0, d1, d0
  4038b0:	b	4038e0 <ferror@plt+0x1c40>
  4038b4:	mov	x0, sp
  4038b8:	bl	4018f0 <sysinfo@plt>
  4038bc:	cbz	w0, 4038cc <ferror@plt+0x1c2c>
  4038c0:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  4038c4:	fmov	d0, x8
  4038c8:	b	4038e0 <ferror@plt+0x1c40>
  4038cc:	ldr	d0, [sp, #32]
  4038d0:	ldr	s1, [sp, #104]
  4038d4:	ucvtf	d0, d0
  4038d8:	ucvtf	d1, d1
  4038dc:	fmul	d0, d0, d1
  4038e0:	ldr	x19, [sp, #128]
  4038e4:	ldp	x29, x30, [sp, #112]
  4038e8:	add	sp, sp, #0x90
  4038ec:	ret
  4038f0:	sub	sp, sp, #0x90
  4038f4:	mov	w0, #0x56                  	// #86
  4038f8:	stp	x29, x30, [sp, #112]
  4038fc:	str	x19, [sp, #128]
  403900:	add	x29, sp, #0x70
  403904:	bl	401be0 <sysconf@plt>
  403908:	mov	x19, x0
  40390c:	mov	w0, #0x1e                  	// #30
  403910:	bl	401be0 <sysconf@plt>
  403914:	orr	x8, x0, x19
  403918:	tbnz	x8, #63, 40392c <ferror@plt+0x1c8c>
  40391c:	scvtf	d0, x0
  403920:	scvtf	d1, x19
  403924:	fmul	d0, d1, d0
  403928:	b	4039b8 <ferror@plt+0x1d18>
  40392c:	mov	x0, sp
  403930:	bl	4018f0 <sysinfo@plt>
  403934:	cbz	w0, 403964 <ferror@plt+0x1cc4>
  403938:	mov	w0, #0x55                  	// #85
  40393c:	bl	401be0 <sysconf@plt>
  403940:	mov	x19, x0
  403944:	mov	w0, #0x1e                  	// #30
  403948:	bl	401be0 <sysconf@plt>
  40394c:	orr	x8, x0, x19
  403950:	tbnz	x8, #63, 403984 <ferror@plt+0x1ce4>
  403954:	scvtf	d0, x0
  403958:	scvtf	d1, x19
  40395c:	fmul	d0, d1, d0
  403960:	b	4039b0 <ferror@plt+0x1d10>
  403964:	ldr	d0, [sp, #40]
  403968:	ldr	d1, [sp, #56]
  40396c:	ldr	s2, [sp, #104]
  403970:	ucvtf	d0, d0
  403974:	ucvtf	d1, d1
  403978:	fadd	d0, d0, d1
  40397c:	ucvtf	d1, d2
  403980:	b	4039b4 <ferror@plt+0x1d14>
  403984:	mov	x0, sp
  403988:	bl	4018f0 <sysinfo@plt>
  40398c:	cbz	w0, 40399c <ferror@plt+0x1cfc>
  403990:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  403994:	fmov	d0, x8
  403998:	b	4039b0 <ferror@plt+0x1d10>
  40399c:	ldr	d0, [sp, #32]
  4039a0:	ldr	s1, [sp, #104]
  4039a4:	ucvtf	d0, d0
  4039a8:	ucvtf	d1, d1
  4039ac:	fmul	d0, d0, d1
  4039b0:	fmov	d1, #2.500000000000000000e-01
  4039b4:	fmul	d0, d0, d1
  4039b8:	ldr	x19, [sp, #128]
  4039bc:	ldp	x29, x30, [sp, #112]
  4039c0:	add	sp, sp, #0x90
  4039c4:	ret
  4039c8:	stp	x29, x30, [sp, #-32]!
  4039cc:	stp	x20, x19, [sp, #16]
  4039d0:	mov	x29, sp
  4039d4:	cbz	x0, 403a54 <ferror@plt+0x1db4>
  4039d8:	mov	w1, #0x2f                  	// #47
  4039dc:	mov	x19, x0
  4039e0:	bl	401a90 <strrchr@plt>
  4039e4:	cmp	x0, #0x0
  4039e8:	csinc	x20, x19, x0, eq  // eq = none
  4039ec:	sub	x8, x20, x19
  4039f0:	cmp	x8, #0x7
  4039f4:	b.lt	403a38 <ferror@plt+0x1d98>  // b.tstop
  4039f8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4039fc:	sub	x0, x20, #0x7
  403a00:	add	x1, x1, #0x2b4
  403a04:	mov	w2, #0x7                   	// #7
  403a08:	bl	4019e0 <strncmp@plt>
  403a0c:	cbnz	w0, 403a38 <ferror@plt+0x1d98>
  403a10:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  403a14:	add	x1, x1, #0x2bc
  403a18:	mov	w2, #0x3                   	// #3
  403a1c:	mov	x0, x20
  403a20:	bl	4019e0 <strncmp@plt>
  403a24:	mov	x19, x20
  403a28:	cbnz	w0, 403a38 <ferror@plt+0x1d98>
  403a2c:	add	x19, x20, #0x3
  403a30:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403a34:	str	x19, [x8, #704]
  403a38:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403a3c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  403a40:	str	x19, [x8, #808]
  403a44:	str	x19, [x9, #656]
  403a48:	ldp	x20, x19, [sp, #16]
  403a4c:	ldp	x29, x30, [sp], #32
  403a50:	ret
  403a54:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403a58:	ldr	x3, [x8, #664]
  403a5c:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x944>
  403a60:	add	x0, x0, #0x27c
  403a64:	mov	w1, #0x37                  	// #55
  403a68:	mov	w2, #0x1                   	// #1
  403a6c:	bl	401ba0 <fwrite@plt>
  403a70:	bl	401ac0 <abort@plt>
  403a74:	stp	x29, x30, [sp, #-48]!
  403a78:	str	x21, [sp, #16]
  403a7c:	stp	x20, x19, [sp, #32]
  403a80:	mov	x29, sp
  403a84:	mov	x19, x0
  403a88:	bl	401c50 <__errno_location@plt>
  403a8c:	ldr	w21, [x0]
  403a90:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403a94:	add	x8, x8, #0x330
  403a98:	cmp	x19, #0x0
  403a9c:	mov	x20, x0
  403aa0:	csel	x0, x8, x19, eq  // eq = none
  403aa4:	mov	w1, #0x38                  	// #56
  403aa8:	bl	406030 <ferror@plt+0x4390>
  403aac:	str	w21, [x20]
  403ab0:	ldp	x20, x19, [sp, #32]
  403ab4:	ldr	x21, [sp, #16]
  403ab8:	ldp	x29, x30, [sp], #48
  403abc:	ret
  403ac0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403ac4:	add	x8, x8, #0x330
  403ac8:	cmp	x0, #0x0
  403acc:	csel	x8, x8, x0, eq  // eq = none
  403ad0:	ldr	w0, [x8]
  403ad4:	ret
  403ad8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403adc:	add	x8, x8, #0x330
  403ae0:	cmp	x0, #0x0
  403ae4:	csel	x8, x8, x0, eq  // eq = none
  403ae8:	str	w1, [x8]
  403aec:	ret
  403af0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403af4:	add	x8, x8, #0x330
  403af8:	cmp	x0, #0x0
  403afc:	ubfx	w9, w1, #5, #3
  403b00:	csel	x8, x8, x0, eq  // eq = none
  403b04:	add	x8, x8, w9, uxtw #2
  403b08:	ldr	w9, [x8, #8]
  403b0c:	lsr	w10, w9, w1
  403b10:	and	w0, w10, #0x1
  403b14:	and	w10, w2, #0x1
  403b18:	eor	w10, w0, w10
  403b1c:	lsl	w10, w10, w1
  403b20:	eor	w9, w10, w9
  403b24:	str	w9, [x8, #8]
  403b28:	ret
  403b2c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403b30:	add	x8, x8, #0x330
  403b34:	cmp	x0, #0x0
  403b38:	csel	x8, x8, x0, eq  // eq = none
  403b3c:	ldr	w0, [x8, #4]
  403b40:	str	w1, [x8, #4]
  403b44:	ret
  403b48:	stp	x29, x30, [sp, #-16]!
  403b4c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403b50:	add	x8, x8, #0x330
  403b54:	cmp	x0, #0x0
  403b58:	csel	x8, x8, x0, eq  // eq = none
  403b5c:	mov	w9, #0xa                   	// #10
  403b60:	mov	x29, sp
  403b64:	str	w9, [x8]
  403b68:	cbz	x1, 403b7c <ferror@plt+0x1edc>
  403b6c:	cbz	x2, 403b7c <ferror@plt+0x1edc>
  403b70:	stp	x1, x2, [x8, #40]
  403b74:	ldp	x29, x30, [sp], #16
  403b78:	ret
  403b7c:	bl	401ac0 <abort@plt>
  403b80:	sub	sp, sp, #0x60
  403b84:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  403b88:	add	x8, x8, #0x330
  403b8c:	cmp	x4, #0x0
  403b90:	stp	x29, x30, [sp, #16]
  403b94:	str	x25, [sp, #32]
  403b98:	stp	x24, x23, [sp, #48]
  403b9c:	stp	x22, x21, [sp, #64]
  403ba0:	stp	x20, x19, [sp, #80]
  403ba4:	add	x29, sp, #0x10
  403ba8:	mov	x19, x3
  403bac:	mov	x20, x2
  403bb0:	mov	x21, x1
  403bb4:	mov	x22, x0
  403bb8:	csel	x24, x8, x4, eq  // eq = none
  403bbc:	bl	401c50 <__errno_location@plt>
  403bc0:	ldp	w4, w5, [x24]
  403bc4:	ldp	x7, x8, [x24, #40]
  403bc8:	ldr	w25, [x0]
  403bcc:	mov	x23, x0
  403bd0:	add	x6, x24, #0x8
  403bd4:	mov	x0, x22
  403bd8:	mov	x1, x21
  403bdc:	mov	x2, x20
  403be0:	mov	x3, x19
  403be4:	str	x8, [sp]
  403be8:	bl	403c0c <ferror@plt+0x1f6c>
  403bec:	str	w25, [x23]
  403bf0:	ldp	x20, x19, [sp, #80]
  403bf4:	ldp	x22, x21, [sp, #64]
  403bf8:	ldp	x24, x23, [sp, #48]
  403bfc:	ldr	x25, [sp, #32]
  403c00:	ldp	x29, x30, [sp, #16]
  403c04:	add	sp, sp, #0x60
  403c08:	ret
  403c0c:	sub	sp, sp, #0x120
  403c10:	stp	x29, x30, [sp, #192]
  403c14:	add	x29, sp, #0xc0
  403c18:	ldr	x8, [x29, #96]
  403c1c:	stp	x28, x27, [sp, #208]
  403c20:	stp	x26, x25, [sp, #224]
  403c24:	stp	x24, x23, [sp, #240]
  403c28:	stp	x22, x21, [sp, #256]
  403c2c:	stp	x20, x19, [sp, #272]
  403c30:	str	x7, [sp, #88]
  403c34:	stur	x6, [x29, #-40]
  403c38:	mov	w19, w5
  403c3c:	mov	w22, w4
  403c40:	mov	x28, x3
  403c44:	mov	x20, x2
  403c48:	mov	x24, x1
  403c4c:	stur	x8, [x29, #-88]
  403c50:	mov	x21, x0
  403c54:	bl	401b80 <__ctype_get_mb_cur_max@plt>
  403c58:	mov	w4, w22
  403c5c:	mov	w8, wzr
  403c60:	mov	w14, wzr
  403c64:	str	w19, [sp, #80]
  403c68:	ubfx	w19, w19, #1, #1
  403c6c:	add	x9, x20, #0x1
  403c70:	mov	w25, #0x1                   	// #1
  403c74:	str	x0, [sp, #48]
  403c78:	str	xzr, [sp, #64]
  403c7c:	stur	xzr, [x29, #-64]
  403c80:	stur	xzr, [x29, #-32]
  403c84:	str	wzr, [sp, #72]
  403c88:	stur	x20, [x29, #-80]
  403c8c:	str	x9, [sp, #96]
  403c90:	cmp	w4, #0xa
  403c94:	b.hi	404860 <ferror@plt+0x2bc0>  // b.pmore
  403c98:	adrp	x12, 407000 <_obstack_memory_used@@Base+0x944>
  403c9c:	mov	w9, w4
  403ca0:	add	x12, x12, #0x2c0
  403ca4:	mov	x22, x24
  403ca8:	adr	x10, 403cc8 <ferror@plt+0x2028>
  403cac:	ldrb	w11, [x12, x9]
  403cb0:	add	x10, x10, x11, lsl #2
  403cb4:	ldur	x24, [x29, #-80]
  403cb8:	mov	x20, xzr
  403cbc:	mov	w16, wzr
  403cc0:	mov	w9, #0x1                   	// #1
  403cc4:	br	x10
  403cc8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x944>
  403ccc:	add	x0, x0, #0x41c
  403cd0:	mov	w1, w4
  403cd4:	mov	w20, w4
  403cd8:	mov	w23, w14
  403cdc:	bl	4051ac <ferror@plt+0x350c>
  403ce0:	str	x0, [sp, #88]
  403ce4:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x944>
  403ce8:	add	x0, x0, #0x41e
  403cec:	mov	w1, w20
  403cf0:	bl	4051ac <ferror@plt+0x350c>
  403cf4:	mov	w14, w23
  403cf8:	mov	w4, w20
  403cfc:	stur	x0, [x29, #-88]
  403d00:	tbnz	w19, #0, 403d44 <ferror@plt+0x20a4>
  403d04:	ldr	x8, [sp, #88]
  403d08:	ldrb	w9, [x8]
  403d0c:	cbz	w9, 403d44 <ferror@plt+0x20a4>
  403d10:	mov	w27, w14
  403d14:	mov	w26, w4
  403d18:	mov	x10, xzr
  403d1c:	add	x8, x8, #0x1
  403d20:	b	403d34 <ferror@plt+0x2094>
  403d24:	ldrb	w9, [x8, x10]
  403d28:	add	x20, x10, #0x1
  403d2c:	mov	x10, x20
  403d30:	cbz	w9, 403d50 <ferror@plt+0x20b0>
  403d34:	cmp	x10, x22
  403d38:	b.cs	403d24 <ferror@plt+0x2084>  // b.hs, b.nlast
  403d3c:	strb	w9, [x21, x10]
  403d40:	b	403d24 <ferror@plt+0x2084>
  403d44:	mov	w27, w14
  403d48:	mov	w26, w4
  403d4c:	mov	x20, xzr
  403d50:	ldur	x23, [x29, #-88]
  403d54:	mov	x0, x23
  403d58:	bl	4018c0 <strlen@plt>
  403d5c:	stur	x0, [x29, #-32]
  403d60:	stur	x23, [x29, #-64]
  403d64:	mov	w9, #0x1                   	// #1
  403d68:	mov	w16, w19
  403d6c:	mov	w4, w26
  403d70:	mov	w14, w27
  403d74:	b	403e1c <ferror@plt+0x217c>
  403d78:	mov	w8, #0x1                   	// #1
  403d7c:	b	403df8 <ferror@plt+0x2158>
  403d80:	mov	w4, wzr
  403d84:	mov	x20, xzr
  403d88:	mov	w16, wzr
  403d8c:	mov	w9, w8
  403d90:	b	403e1c <ferror@plt+0x217c>
  403d94:	tbnz	w19, #0, 403df8 <ferror@plt+0x2158>
  403d98:	mov	w9, w8
  403d9c:	mov	w16, wzr
  403da0:	cbz	x22, 403dac <ferror@plt+0x210c>
  403da4:	mov	w8, #0x27                  	// #39
  403da8:	strb	w8, [x21]
  403dac:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  403db0:	add	x8, x8, #0x41e
  403db4:	stur	x8, [x29, #-64]
  403db8:	mov	w8, #0x1                   	// #1
  403dbc:	mov	w4, #0x2                   	// #2
  403dc0:	mov	w20, #0x1                   	// #1
  403dc4:	stur	x8, [x29, #-32]
  403dc8:	b	403e1c <ferror@plt+0x217c>
  403dcc:	tbz	w19, #0, 4046f8 <ferror@plt+0x2a58>
  403dd0:	mov	w8, #0x1                   	// #1
  403dd4:	stur	x8, [x29, #-32]
  403dd8:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  403ddc:	add	x8, x8, #0x0
  403de0:	mov	x20, xzr
  403de4:	mov	w4, #0x5                   	// #5
  403de8:	stur	x8, [x29, #-64]
  403dec:	mov	w9, #0x1                   	// #1
  403df0:	b	403e18 <ferror@plt+0x2178>
  403df4:	tbz	w19, #0, 40472c <ferror@plt+0x2a8c>
  403df8:	mov	w9, #0x1                   	// #1
  403dfc:	stur	x9, [x29, #-32]
  403e00:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  403e04:	add	x9, x9, #0x41e
  403e08:	mov	x20, xzr
  403e0c:	mov	w4, #0x2                   	// #2
  403e10:	stur	x9, [x29, #-64]
  403e14:	mov	w9, w8
  403e18:	mov	w16, #0x1                   	// #1
  403e1c:	mov	w15, w9
  403e20:	ldp	x8, x9, [x29, #-40]
  403e24:	eor	w17, w16, #0x1
  403e28:	stur	w17, [x29, #-68]
  403e2c:	mov	x23, xzr
  403e30:	cmp	x8, #0x0
  403e34:	cset	w8, eq  // eq = none
  403e38:	cmp	x9, #0x0
  403e3c:	cset	w9, ne  // ne = any
  403e40:	cmp	w4, #0x2
  403e44:	cset	w10, ne  // ne = any
  403e48:	and	w13, w10, w15
  403e4c:	and	w12, w9, w16
  403e50:	orr	w10, w10, w17
  403e54:	and	w17, w9, w13
  403e58:	orr	w9, w13, w16
  403e5c:	eor	w9, w9, #0x1
  403e60:	cset	w11, eq  // eq = none
  403e64:	orr	w8, w8, w9
  403e68:	and	w12, w15, w12
  403e6c:	str	w10, [sp, #84]
  403e70:	and	w10, w11, w16
  403e74:	stur	w8, [x29, #-24]
  403e78:	eor	w8, w15, #0x1
  403e7c:	str	w12, [sp, #56]
  403e80:	str	w10, [sp, #76]
  403e84:	stur	w15, [x29, #-72]
  403e88:	str	w8, [sp, #60]
  403e8c:	stp	w16, w4, [x29, #-48]
  403e90:	stur	w17, [x29, #-52]
  403e94:	cmn	x28, #0x1
  403e98:	b.eq	403ea8 <ferror@plt+0x2208>  // b.none
  403e9c:	cmp	x23, x28
  403ea0:	b.ne	403eb0 <ferror@plt+0x2210>  // b.any
  403ea4:	b	404688 <ferror@plt+0x29e8>
  403ea8:	ldrb	w8, [x24, x23]
  403eac:	cbz	w8, 404690 <ferror@plt+0x29f0>
  403eb0:	cbz	w17, 403ef0 <ferror@plt+0x2250>
  403eb4:	ldur	x8, [x29, #-32]
  403eb8:	cmp	x8, #0x2
  403ebc:	add	x19, x23, x8
  403ec0:	b.cc	403ee8 <ferror@plt+0x2248>  // b.lo, b.ul, b.last
  403ec4:	cmn	x28, #0x1
  403ec8:	b.ne	403ee8 <ferror@plt+0x2248>  // b.any
  403ecc:	mov	x0, x24
  403ed0:	mov	w26, w14
  403ed4:	bl	4018c0 <strlen@plt>
  403ed8:	ldp	w17, w16, [x29, #-52]
  403edc:	ldur	w4, [x29, #-44]
  403ee0:	mov	w14, w26
  403ee4:	mov	x28, x0
  403ee8:	cmp	x19, x28
  403eec:	b.ls	403ef8 <ferror@plt+0x2258>  // b.plast
  403ef0:	mov	w27, wzr
  403ef4:	b	403f30 <ferror@plt+0x2290>
  403ef8:	ldur	x1, [x29, #-64]
  403efc:	ldur	x2, [x29, #-32]
  403f00:	add	x0, x24, x23
  403f04:	mov	w19, w14
  403f08:	bl	401a50 <bcmp@plt>
  403f0c:	ldur	w9, [x29, #-68]
  403f10:	cmp	w0, #0x0
  403f14:	cset	w8, ne  // ne = any
  403f18:	cset	w27, eq  // eq = none
  403f1c:	orr	w8, w8, w9
  403f20:	tbz	w8, #0, 404764 <ferror@plt+0x2ac4>
  403f24:	ldp	w16, w4, [x29, #-48]
  403f28:	ldur	w17, [x29, #-52]
  403f2c:	mov	w14, w19
  403f30:	ldrb	w19, [x24, x23]
  403f34:	cmp	w19, #0x7e
  403f38:	b.hi	404178 <ferror@plt+0x24d8>  // b.pmore
  403f3c:	adrp	x13, 407000 <_obstack_memory_used@@Base+0x944>
  403f40:	add	x13, x13, #0x2cb
  403f44:	adr	x12, 403f68 <ferror@plt+0x22c8>
  403f48:	ldrb	w9, [x13, x19]
  403f4c:	add	x12, x12, x9, lsl #2
  403f50:	mov	w10, wzr
  403f54:	mov	w8, wzr
  403f58:	mov	w26, #0x1                   	// #1
  403f5c:	mov	w11, #0x6e                  	// #110
  403f60:	mov	w9, #0x61                  	// #97
  403f64:	br	x12
  403f68:	ldur	w9, [x29, #-24]
  403f6c:	tbnz	w9, #0, 403f8c <ferror@plt+0x22ec>
  403f70:	ldur	x10, [x29, #-40]
  403f74:	lsr	w9, w19, #5
  403f78:	ldr	w9, [x10, w9, uxtw #2]
  403f7c:	lsr	w9, w9, w19
  403f80:	tbz	w9, #0, 403f8c <ferror@plt+0x22ec>
  403f84:	mov	w9, w19
  403f88:	b	403f94 <ferror@plt+0x22f4>
  403f8c:	mov	w9, w19
  403f90:	cbz	w27, 4041dc <ferror@plt+0x253c>
  403f94:	tbnz	w16, #0, 40473c <ferror@plt+0x2a9c>
  403f98:	cmp	w4, #0x2
  403f9c:	cset	w8, ne  // ne = any
  403fa0:	orr	w8, w8, w14
  403fa4:	tbnz	w8, #0, 403fe8 <ferror@plt+0x2348>
  403fa8:	cmp	x20, x22
  403fac:	b.cs	403fb8 <ferror@plt+0x2318>  // b.hs, b.nlast
  403fb0:	mov	w8, #0x27                  	// #39
  403fb4:	strb	w8, [x21, x20]
  403fb8:	add	x8, x20, #0x1
  403fbc:	cmp	x8, x22
  403fc0:	b.cs	403fcc <ferror@plt+0x232c>  // b.hs, b.nlast
  403fc4:	mov	w10, #0x24                  	// #36
  403fc8:	strb	w10, [x21, x8]
  403fcc:	add	x8, x20, #0x2
  403fd0:	cmp	x8, x22
  403fd4:	b.cs	403fe0 <ferror@plt+0x2340>  // b.hs, b.nlast
  403fd8:	mov	w10, #0x27                  	// #39
  403fdc:	strb	w10, [x21, x8]
  403fe0:	add	x20, x20, #0x3
  403fe4:	mov	w14, #0x1                   	// #1
  403fe8:	cmp	x20, x22
  403fec:	b.cs	403ff8 <ferror@plt+0x2358>  // b.hs, b.nlast
  403ff0:	mov	w8, #0x5c                  	// #92
  403ff4:	strb	w8, [x21, x20]
  403ff8:	add	x20, x20, #0x1
  403ffc:	cmp	x20, x22
  404000:	b.cs	404008 <ferror@plt+0x2368>  // b.hs, b.nlast
  404004:	strb	w9, [x21, x20]
  404008:	add	x20, x20, #0x1
  40400c:	and	w25, w25, w26
  404010:	add	x23, x23, #0x1
  404014:	cmn	x28, #0x1
  404018:	b.ne	403e9c <ferror@plt+0x21fc>  // b.any
  40401c:	b	403ea8 <ferror@plt+0x2208>
  404020:	cmp	x28, #0x1
  404024:	b.eq	404048 <ferror@plt+0x23a8>  // b.none
  404028:	cmn	x28, #0x1
  40402c:	b.ne	40404c <ferror@plt+0x23ac>  // b.any
  404030:	ldrb	w8, [x24, #1]
  404034:	cbz	w8, 404048 <ferror@plt+0x23a8>
  404038:	mov	w8, wzr
  40403c:	mov	w26, wzr
  404040:	mov	x28, #0xffffffffffffffff    	// #-1
  404044:	b	403f68 <ferror@plt+0x22c8>
  404048:	cbz	x23, 404058 <ferror@plt+0x23b8>
  40404c:	mov	w8, wzr
  404050:	mov	w26, wzr
  404054:	b	403f68 <ferror@plt+0x22c8>
  404058:	mov	w10, #0x1                   	// #1
  40405c:	cmp	w4, #0x2
  404060:	b.ne	404068 <ferror@plt+0x23c8>  // b.any
  404064:	tbnz	w16, #0, 40473c <ferror@plt+0x2a9c>
  404068:	mov	w8, wzr
  40406c:	mov	w26, w10
  404070:	b	403f68 <ferror@plt+0x22c8>
  404074:	cmp	w4, #0x2
  404078:	b.ne	4041c4 <ferror@plt+0x2524>  // b.any
  40407c:	tbz	w16, #0, 4041d0 <ferror@plt+0x2530>
  404080:	b	40473c <ferror@plt+0x2a9c>
  404084:	mov	w9, #0x66                  	// #102
  404088:	b	404220 <ferror@plt+0x2580>
  40408c:	mov	w11, #0x74                  	// #116
  404090:	b	4040a0 <ferror@plt+0x2400>
  404094:	mov	w9, #0x62                  	// #98
  404098:	b	404220 <ferror@plt+0x2580>
  40409c:	mov	w11, #0x72                  	// #114
  4040a0:	ldr	w8, [sp, #84]
  4040a4:	mov	w9, w11
  4040a8:	tbnz	w8, #0, 404220 <ferror@plt+0x2580>
  4040ac:	b	40473c <ferror@plt+0x2a9c>
  4040b0:	ldur	w8, [x29, #-72]
  4040b4:	tbz	w8, #0, 404234 <ferror@plt+0x2594>
  4040b8:	cmp	w4, #0x2
  4040bc:	tbnz	w16, #0, 404854 <ferror@plt+0x2bb4>
  4040c0:	cset	w8, ne  // ne = any
  4040c4:	orr	w8, w8, w14
  4040c8:	tbz	w8, #0, 404564 <ferror@plt+0x28c4>
  4040cc:	mov	x8, x20
  4040d0:	cmp	x8, x22
  4040d4:	b.cc	4045ac <ferror@plt+0x290c>  // b.lo, b.ul, b.last
  4040d8:	b	4045b4 <ferror@plt+0x2914>
  4040dc:	cmp	w4, #0x5
  4040e0:	b.eq	404360 <ferror@plt+0x26c0>  // b.none
  4040e4:	cmp	w4, #0x2
  4040e8:	b.ne	404410 <ferror@plt+0x2770>  // b.any
  4040ec:	tbz	w16, #0, 404410 <ferror@plt+0x2770>
  4040f0:	b	40473c <ferror@plt+0x2a9c>
  4040f4:	mov	w9, #0x76                  	// #118
  4040f8:	b	404220 <ferror@plt+0x2580>
  4040fc:	cmp	w4, #0x2
  404100:	b.ne	404244 <ferror@plt+0x25a4>  // b.any
  404104:	tbnz	w16, #0, 40473c <ferror@plt+0x2a9c>
  404108:	ldr	x10, [sp, #64]
  40410c:	cmp	x22, #0x0
  404110:	cset	w8, eq  // eq = none
  404114:	cmp	x10, #0x0
  404118:	cset	w9, ne  // ne = any
  40411c:	orr	w8, w9, w8
  404120:	cmp	w8, #0x0
  404124:	csel	x10, x10, x22, ne  // ne = any
  404128:	csel	x22, x22, xzr, ne  // ne = any
  40412c:	cmp	x20, x22
  404130:	str	x10, [sp, #64]
  404134:	b.cs	404140 <ferror@plt+0x24a0>  // b.hs, b.nlast
  404138:	mov	w8, #0x27                  	// #39
  40413c:	strb	w8, [x21, x20]
  404140:	add	x8, x20, #0x1
  404144:	cmp	x8, x22
  404148:	b.cs	404154 <ferror@plt+0x24b4>  // b.hs, b.nlast
  40414c:	mov	w9, #0x5c                  	// #92
  404150:	strb	w9, [x21, x8]
  404154:	add	x8, x20, #0x2
  404158:	cmp	x8, x22
  40415c:	b.cs	404168 <ferror@plt+0x24c8>  // b.hs, b.nlast
  404160:	mov	w9, #0x27                  	// #39
  404164:	strb	w9, [x21, x8]
  404168:	mov	w14, wzr
  40416c:	mov	w8, wzr
  404170:	add	x20, x20, #0x3
  404174:	b	404248 <ferror@plt+0x25a8>
  404178:	ldr	x8, [sp, #48]
  40417c:	str	w14, [sp, #28]
  404180:	cmp	x8, #0x1
  404184:	b.ne	40425c <ferror@plt+0x25bc>  // b.any
  404188:	bl	401b50 <__ctype_b_loc@plt>
  40418c:	ldr	x8, [x0]
  404190:	mov	w11, #0x1                   	// #1
  404194:	ldrh	w8, [x8, x19, lsl #1]
  404198:	ubfx	w26, w8, #14, #1
  40419c:	ldr	w8, [sp, #60]
  4041a0:	ldp	w16, w4, [x29, #-48]
  4041a4:	ldr	w14, [sp, #28]
  4041a8:	ldur	w17, [x29, #-52]
  4041ac:	cmp	x11, #0x1
  4041b0:	orr	w8, w26, w8
  4041b4:	b.hi	404420 <ferror@plt+0x2780>  // b.pmore
  4041b8:	tbz	w8, #0, 404420 <ferror@plt+0x2780>
  4041bc:	mov	w8, wzr
  4041c0:	b	403f68 <ferror@plt+0x22c8>
  4041c4:	ldr	w8, [sp, #56]
  4041c8:	mov	w9, #0x5c                  	// #92
  4041cc:	tbz	w8, #0, 404220 <ferror@plt+0x2580>
  4041d0:	mov	w8, wzr
  4041d4:	mov	w26, wzr
  4041d8:	mov	w19, #0x5c                  	// #92
  4041dc:	tbnz	w8, #0, 404210 <ferror@plt+0x2570>
  4041e0:	tbz	w14, #0, 404210 <ferror@plt+0x2570>
  4041e4:	cmp	x20, x22
  4041e8:	b.cs	4041f4 <ferror@plt+0x2554>  // b.hs, b.nlast
  4041ec:	mov	w8, #0x27                  	// #39
  4041f0:	strb	w8, [x21, x20]
  4041f4:	add	x8, x20, #0x1
  4041f8:	cmp	x8, x22
  4041fc:	b.cs	404208 <ferror@plt+0x2568>  // b.hs, b.nlast
  404200:	mov	w9, #0x27                  	// #39
  404204:	strb	w9, [x21, x8]
  404208:	mov	w14, wzr
  40420c:	add	x20, x20, #0x2
  404210:	mov	w9, w19
  404214:	cmp	x20, x22
  404218:	b.cc	404004 <ferror@plt+0x2364>  // b.lo, b.ul, b.last
  40421c:	b	404008 <ferror@plt+0x2368>
  404220:	ldur	w10, [x29, #-72]
  404224:	mov	w8, wzr
  404228:	mov	w26, wzr
  40422c:	tbz	w10, #0, 403f68 <ferror@plt+0x22c8>
  404230:	b	403f94 <ferror@plt+0x22f4>
  404234:	ldr	w8, [sp, #80]
  404238:	tbnz	w8, #0, 404010 <ferror@plt+0x2370>
  40423c:	mov	w19, wzr
  404240:	b	40404c <ferror@plt+0x23ac>
  404244:	mov	w8, wzr
  404248:	mov	w9, #0x1                   	// #1
  40424c:	mov	w19, #0x27                  	// #39
  404250:	str	w9, [sp, #72]
  404254:	mov	w26, #0x1                   	// #1
  404258:	b	403f68 <ferror@plt+0x22c8>
  40425c:	cmn	x28, #0x1
  404260:	stur	xzr, [x29, #-16]
  404264:	b.ne	404274 <ferror@plt+0x25d4>  // b.any
  404268:	mov	x0, x24
  40426c:	bl	4018c0 <strlen@plt>
  404270:	mov	x28, x0
  404274:	ldr	x8, [sp, #96]
  404278:	mov	x11, xzr
  40427c:	mov	w26, #0x1                   	// #1
  404280:	str	x21, [sp, #32]
  404284:	add	x8, x8, x23
  404288:	str	x8, [sp, #16]
  40428c:	b	4042c4 <ferror@plt+0x2624>
  404290:	ldur	w0, [x29, #-20]
  404294:	bl	401c30 <iswprint@plt>
  404298:	ldr	x21, [sp, #40]
  40429c:	cmp	w0, #0x0
  4042a0:	cset	w8, ne  // ne = any
  4042a4:	sub	x0, x29, #0x10
  4042a8:	and	w26, w26, w8
  4042ac:	add	x21, x24, x21
  4042b0:	bl	401ae0 <mbsinit@plt>
  4042b4:	mov	x11, x21
  4042b8:	ldr	x21, [sp, #32]
  4042bc:	ldur	x24, [x29, #-80]
  4042c0:	cbnz	w0, 40419c <ferror@plt+0x24fc>
  4042c4:	add	x21, x11, x23
  4042c8:	add	x1, x24, x21
  4042cc:	sub	x2, x28, x21
  4042d0:	sub	x0, x29, #0x14
  4042d4:	sub	x3, x29, #0x10
  4042d8:	str	x11, [sp, #40]
  4042dc:	bl	4062e4 <ferror@plt+0x4644>
  4042e0:	cbz	x0, 404668 <ferror@plt+0x29c8>
  4042e4:	mov	x24, x0
  4042e8:	cmn	x0, #0x1
  4042ec:	b.eq	404664 <ferror@plt+0x29c4>  // b.none
  4042f0:	cmn	x24, #0x2
  4042f4:	b.eq	404628 <ferror@plt+0x2988>  // b.none
  4042f8:	ldr	w9, [sp, #76]
  4042fc:	ldr	x21, [sp, #32]
  404300:	cmp	x24, #0x2
  404304:	cset	w8, cc  // cc = lo, ul, last
  404308:	eor	w9, w9, #0x1
  40430c:	mov	x12, #0x2b                  	// #43
  404310:	orr	w8, w9, w8
  404314:	mov	w11, #0x1                   	// #1
  404318:	movk	x12, #0x2, lsl #32
  40431c:	tbnz	w8, #0, 404290 <ferror@plt+0x25f0>
  404320:	ldr	x9, [sp, #40]
  404324:	ldr	x10, [sp, #16]
  404328:	sub	x8, x24, #0x1
  40432c:	add	x9, x10, x9
  404330:	b	404340 <ferror@plt+0x26a0>
  404334:	subs	x8, x8, #0x1
  404338:	add	x9, x9, #0x1
  40433c:	b.eq	404290 <ferror@plt+0x25f0>  // b.none
  404340:	ldrb	w10, [x9]
  404344:	sub	w10, w10, #0x5b
  404348:	cmp	w10, #0x21
  40434c:	b.hi	404334 <ferror@plt+0x2694>  // b.pmore
  404350:	lsl	x10, x11, x10
  404354:	tst	x10, x12
  404358:	b.eq	404334 <ferror@plt+0x2694>  // b.none
  40435c:	b	404770 <ferror@plt+0x2ad0>
  404360:	ldr	w8, [sp, #80]
  404364:	tbz	w8, #2, 404410 <ferror@plt+0x2770>
  404368:	add	x9, x23, #0x2
  40436c:	cmp	x9, x28
  404370:	b.cs	404410 <ferror@plt+0x2770>  // b.hs, b.nlast
  404374:	add	x8, x23, x24
  404378:	ldrb	w8, [x8, #1]
  40437c:	cmp	w8, #0x3f
  404380:	b.ne	404410 <ferror@plt+0x2770>  // b.any
  404384:	ldrb	w19, [x24, x9]
  404388:	mov	w8, wzr
  40438c:	cmp	w19, #0x3e
  404390:	b.hi	40467c <ferror@plt+0x29dc>  // b.pmore
  404394:	mov	w10, #0x1                   	// #1
  404398:	mov	x11, #0xa38200000000        	// #179778741075968
  40439c:	lsl	x10, x10, x19
  4043a0:	movk	x11, #0x7000, lsl #48
  4043a4:	tst	x10, x11
  4043a8:	b.eq	40467c <ferror@plt+0x29dc>  // b.none
  4043ac:	tbnz	w16, #0, 40473c <ferror@plt+0x2a9c>
  4043b0:	cmp	x20, x22
  4043b4:	b.cs	4043c0 <ferror@plt+0x2720>  // b.hs, b.nlast
  4043b8:	mov	w8, #0x3f                  	// #63
  4043bc:	strb	w8, [x21, x20]
  4043c0:	add	x8, x20, #0x1
  4043c4:	cmp	x8, x22
  4043c8:	b.cs	4043d4 <ferror@plt+0x2734>  // b.hs, b.nlast
  4043cc:	mov	w10, #0x22                  	// #34
  4043d0:	strb	w10, [x21, x8]
  4043d4:	add	x8, x20, #0x2
  4043d8:	cmp	x8, x22
  4043dc:	b.cs	4043e8 <ferror@plt+0x2748>  // b.hs, b.nlast
  4043e0:	mov	w10, #0x22                  	// #34
  4043e4:	strb	w10, [x21, x8]
  4043e8:	add	x8, x20, #0x3
  4043ec:	cmp	x8, x22
  4043f0:	b.cs	4043fc <ferror@plt+0x275c>  // b.hs, b.nlast
  4043f4:	mov	w10, #0x3f                  	// #63
  4043f8:	strb	w10, [x21, x8]
  4043fc:	mov	w8, wzr
  404400:	mov	w26, wzr
  404404:	add	x20, x20, #0x4
  404408:	mov	x23, x9
  40440c:	b	403f68 <ferror@plt+0x22c8>
  404410:	mov	w8, wzr
  404414:	mov	w26, wzr
  404418:	mov	w19, #0x3f                  	// #63
  40441c:	b	403f68 <ferror@plt+0x22c8>
  404420:	mov	w10, wzr
  404424:	add	x9, x11, x23
  404428:	b	40443c <ferror@plt+0x279c>
  40442c:	ldr	x12, [sp, #96]
  404430:	add	x20, x20, #0x1
  404434:	ldrb	w19, [x12, x23]
  404438:	mov	x23, x11
  40443c:	tbz	w8, #0, 404460 <ferror@plt+0x27c0>
  404440:	tbz	w27, #0, 40450c <ferror@plt+0x286c>
  404444:	cmp	x20, x22
  404448:	b.cs	404454 <ferror@plt+0x27b4>  // b.hs, b.nlast
  40444c:	mov	w11, #0x5c                  	// #92
  404450:	strb	w11, [x21, x20]
  404454:	mov	w27, wzr
  404458:	add	x20, x20, #0x1
  40445c:	b	404510 <ferror@plt+0x2870>
  404460:	tbnz	w16, #0, 40473c <ferror@plt+0x2a9c>
  404464:	cmp	w4, #0x2
  404468:	cset	w10, ne  // ne = any
  40446c:	orr	w10, w10, w14
  404470:	tbnz	w10, #0, 4044b4 <ferror@plt+0x2814>
  404474:	cmp	x20, x22
  404478:	b.cs	404484 <ferror@plt+0x27e4>  // b.hs, b.nlast
  40447c:	mov	w10, #0x27                  	// #39
  404480:	strb	w10, [x21, x20]
  404484:	add	x10, x20, #0x1
  404488:	cmp	x10, x22
  40448c:	b.cs	404498 <ferror@plt+0x27f8>  // b.hs, b.nlast
  404490:	mov	w11, #0x24                  	// #36
  404494:	strb	w11, [x21, x10]
  404498:	add	x10, x20, #0x2
  40449c:	cmp	x10, x22
  4044a0:	b.cs	4044ac <ferror@plt+0x280c>  // b.hs, b.nlast
  4044a4:	mov	w11, #0x27                  	// #39
  4044a8:	strb	w11, [x21, x10]
  4044ac:	add	x20, x20, #0x3
  4044b0:	mov	w14, #0x1                   	// #1
  4044b4:	cmp	x20, x22
  4044b8:	b.cs	4044c4 <ferror@plt+0x2824>  // b.hs, b.nlast
  4044bc:	mov	w10, #0x5c                  	// #92
  4044c0:	strb	w10, [x21, x20]
  4044c4:	add	x10, x20, #0x1
  4044c8:	cmp	x10, x22
  4044cc:	b.cs	4044dc <ferror@plt+0x283c>  // b.hs, b.nlast
  4044d0:	mov	w11, #0x30                  	// #48
  4044d4:	bfxil	w11, w19, #6, #2
  4044d8:	strb	w11, [x21, x10]
  4044dc:	add	x10, x20, #0x2
  4044e0:	cmp	x10, x22
  4044e4:	b.cs	4044f4 <ferror@plt+0x2854>  // b.hs, b.nlast
  4044e8:	mov	w11, #0x30                  	// #48
  4044ec:	bfxil	w11, w19, #3, #3
  4044f0:	strb	w11, [x21, x10]
  4044f4:	mov	w11, #0x30                  	// #48
  4044f8:	bfxil	w11, w19, #0, #3
  4044fc:	add	x20, x20, #0x3
  404500:	mov	w10, #0x1                   	// #1
  404504:	mov	w19, w11
  404508:	b	404510 <ferror@plt+0x2870>
  40450c:	mov	w27, wzr
  404510:	add	x11, x23, #0x1
  404514:	cmp	x9, x11
  404518:	b.ls	40461c <ferror@plt+0x297c>  // b.plast
  40451c:	and	w12, w10, #0x1
  404520:	orn	w12, w12, w14
  404524:	tbnz	w12, #0, 404554 <ferror@plt+0x28b4>
  404528:	cmp	x20, x22
  40452c:	b.cs	404538 <ferror@plt+0x2898>  // b.hs, b.nlast
  404530:	mov	w12, #0x27                  	// #39
  404534:	strb	w12, [x21, x20]
  404538:	add	x12, x20, #0x1
  40453c:	cmp	x12, x22
  404540:	b.cs	40454c <ferror@plt+0x28ac>  // b.hs, b.nlast
  404544:	mov	w13, #0x27                  	// #39
  404548:	strb	w13, [x21, x12]
  40454c:	mov	w14, wzr
  404550:	add	x20, x20, #0x2
  404554:	cmp	x20, x22
  404558:	b.cs	40442c <ferror@plt+0x278c>  // b.hs, b.nlast
  40455c:	strb	w19, [x21, x20]
  404560:	b	40442c <ferror@plt+0x278c>
  404564:	cmp	x20, x22
  404568:	b.cs	404574 <ferror@plt+0x28d4>  // b.hs, b.nlast
  40456c:	mov	w8, #0x27                  	// #39
  404570:	strb	w8, [x21, x20]
  404574:	add	x8, x20, #0x1
  404578:	cmp	x8, x22
  40457c:	b.cs	404588 <ferror@plt+0x28e8>  // b.hs, b.nlast
  404580:	mov	w9, #0x24                  	// #36
  404584:	strb	w9, [x21, x8]
  404588:	add	x8, x20, #0x2
  40458c:	cmp	x8, x22
  404590:	b.cs	40459c <ferror@plt+0x28fc>  // b.hs, b.nlast
  404594:	mov	w9, #0x27                  	// #39
  404598:	strb	w9, [x21, x8]
  40459c:	add	x8, x20, #0x3
  4045a0:	mov	w14, #0x1                   	// #1
  4045a4:	cmp	x8, x22
  4045a8:	b.cs	4045b4 <ferror@plt+0x2914>  // b.hs, b.nlast
  4045ac:	mov	w9, #0x5c                  	// #92
  4045b0:	strb	w9, [x21, x8]
  4045b4:	cmp	w4, #0x2
  4045b8:	add	x20, x8, #0x1
  4045bc:	b.eq	40460c <ferror@plt+0x296c>  // b.none
  4045c0:	add	x9, x23, #0x1
  4045c4:	cmp	x9, x28
  4045c8:	b.cs	40460c <ferror@plt+0x296c>  // b.hs, b.nlast
  4045cc:	ldrb	w9, [x24, x9]
  4045d0:	sub	w9, w9, #0x30
  4045d4:	cmp	w9, #0x9
  4045d8:	b.hi	40460c <ferror@plt+0x296c>  // b.pmore
  4045dc:	cmp	x20, x22
  4045e0:	b.cs	4045ec <ferror@plt+0x294c>  // b.hs, b.nlast
  4045e4:	mov	w9, #0x30                  	// #48
  4045e8:	strb	w9, [x21, x20]
  4045ec:	add	x9, x8, #0x2
  4045f0:	cmp	x9, x22
  4045f4:	b.cs	404600 <ferror@plt+0x2960>  // b.hs, b.nlast
  4045f8:	mov	w10, #0x30                  	// #48
  4045fc:	strb	w10, [x21, x9]
  404600:	mov	w26, wzr
  404604:	add	x20, x8, #0x3
  404608:	b	404610 <ferror@plt+0x2970>
  40460c:	mov	w26, wzr
  404610:	mov	w8, #0x1                   	// #1
  404614:	mov	w19, #0x30                  	// #48
  404618:	b	403f68 <ferror@plt+0x22c8>
  40461c:	and	w8, w10, #0x1
  404620:	tbz	w8, #0, 4041e0 <ferror@plt+0x2540>
  404624:	b	404210 <ferror@plt+0x2570>
  404628:	cmp	x28, x21
  40462c:	b.ls	404664 <ferror@plt+0x29c4>  // b.plast
  404630:	ldur	x24, [x29, #-80]
  404634:	ldp	x21, x11, [sp, #32]
  404638:	sub	x8, x28, x23
  40463c:	add	x9, x24, x23
  404640:	ldrb	w10, [x9, x11]
  404644:	cbz	w10, 404674 <ferror@plt+0x29d4>
  404648:	add	x11, x11, #0x1
  40464c:	add	x10, x23, x11
  404650:	cmp	x10, x28
  404654:	b.cc	404640 <ferror@plt+0x29a0>  // b.lo, b.ul, b.last
  404658:	mov	w26, wzr
  40465c:	mov	x11, x8
  404660:	b	40419c <ferror@plt+0x24fc>
  404664:	mov	w26, wzr
  404668:	ldp	x21, x11, [sp, #32]
  40466c:	ldur	x24, [x29, #-80]
  404670:	b	40419c <ferror@plt+0x24fc>
  404674:	mov	w26, wzr
  404678:	b	40419c <ferror@plt+0x24fc>
  40467c:	mov	w19, #0x3f                  	// #63
  404680:	mov	w26, w8
  404684:	b	403f68 <ferror@plt+0x22c8>
  404688:	mov	x28, x23
  40468c:	b	404694 <ferror@plt+0x29f4>
  404690:	mov	x28, #0xffffffffffffffff    	// #-1
  404694:	cmp	w4, #0x2
  404698:	ldur	w10, [x29, #-72]
  40469c:	cset	w8, eq  // eq = none
  4046a0:	cmp	x20, #0x0
  4046a4:	cset	w9, eq  // eq = none
  4046a8:	and	w8, w8, w9
  4046ac:	and	w8, w16, w8
  4046b0:	tbnz	w8, #0, 404740 <ferror@plt+0x2aa0>
  4046b4:	cmp	w4, #0x2
  4046b8:	cset	w8, ne  // ne = any
  4046bc:	orr	w8, w16, w8
  4046c0:	tbnz	w8, #0, 40480c <ferror@plt+0x2b6c>
  4046c4:	ldr	w8, [sp, #72]
  4046c8:	eor	w8, w8, #0x1
  4046cc:	tbnz	w8, #0, 40480c <ferror@plt+0x2b6c>
  4046d0:	tbnz	w25, #0, 4047dc <ferror@plt+0x2b3c>
  4046d4:	ldr	x24, [sp, #64]
  4046d8:	mov	w19, wzr
  4046dc:	cbz	x24, 404808 <ferror@plt+0x2b68>
  4046e0:	mov	w4, #0x2                   	// #2
  4046e4:	mov	w8, w10
  4046e8:	mov	w25, w19
  4046ec:	mov	w16, w19
  4046f0:	cbz	x22, 403c90 <ferror@plt+0x1ff0>
  4046f4:	b	40480c <ferror@plt+0x2b6c>
  4046f8:	mov	w16, wzr
  4046fc:	cbz	x22, 404708 <ferror@plt+0x2a68>
  404700:	mov	w8, #0x22                  	// #34
  404704:	strb	w8, [x21]
  404708:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  40470c:	add	x8, x8, #0x0
  404710:	stur	x8, [x29, #-64]
  404714:	mov	w8, #0x1                   	// #1
  404718:	mov	w20, #0x1                   	// #1
  40471c:	mov	w4, #0x5                   	// #5
  404720:	stur	x8, [x29, #-32]
  404724:	mov	w9, #0x1                   	// #1
  404728:	b	403e1c <ferror@plt+0x217c>
  40472c:	mov	w9, #0x1                   	// #1
  404730:	mov	w16, wzr
  404734:	cbnz	x22, 403da4 <ferror@plt+0x2104>
  404738:	b	403dac <ferror@plt+0x210c>
  40473c:	ldur	w10, [x29, #-72]
  404740:	tst	w10, #0x1
  404744:	mov	w8, #0x2                   	// #2
  404748:	mov	w9, #0x4                   	// #4
  40474c:	csel	w8, w9, w8, ne  // ne = any
  404750:	cmp	w4, #0x2
  404754:	b.ne	40475c <ferror@plt+0x2abc>  // b.any
  404758:	mov	w4, w8
  40475c:	ldr	x7, [sp, #88]
  404760:	b	40478c <ferror@plt+0x2aec>
  404764:	ldr	x7, [sp, #88]
  404768:	ldur	w4, [x29, #-44]
  40476c:	b	40478c <ferror@plt+0x2aec>
  404770:	ldur	w8, [x29, #-72]
  404774:	ldr	x7, [sp, #88]
  404778:	ldur	x24, [x29, #-80]
  40477c:	mov	w9, #0x4                   	// #4
  404780:	tst	w8, #0x1
  404784:	mov	w8, #0x2                   	// #2
  404788:	csel	w4, w9, w8, ne  // ne = any
  40478c:	ldr	w8, [sp, #80]
  404790:	mov	x0, x21
  404794:	mov	x1, x22
  404798:	mov	x2, x24
  40479c:	and	w5, w8, #0xfffffffd
  4047a0:	ldur	x8, [x29, #-88]
  4047a4:	mov	x3, x28
  4047a8:	mov	x6, xzr
  4047ac:	str	x8, [sp]
  4047b0:	bl	403c0c <ferror@plt+0x1f6c>
  4047b4:	mov	x20, x0
  4047b8:	mov	x0, x20
  4047bc:	ldp	x20, x19, [sp, #272]
  4047c0:	ldp	x22, x21, [sp, #256]
  4047c4:	ldp	x24, x23, [sp, #240]
  4047c8:	ldp	x26, x25, [sp, #224]
  4047cc:	ldp	x28, x27, [sp, #208]
  4047d0:	ldp	x29, x30, [sp, #192]
  4047d4:	add	sp, sp, #0x120
  4047d8:	ret
  4047dc:	ldur	x8, [x29, #-88]
  4047e0:	ldr	x1, [sp, #64]
  4047e4:	ldur	x2, [x29, #-80]
  4047e8:	ldr	w5, [sp, #80]
  4047ec:	ldur	x6, [x29, #-40]
  4047f0:	ldr	x7, [sp, #88]
  4047f4:	mov	w4, #0x5                   	// #5
  4047f8:	str	x8, [sp]
  4047fc:	mov	x0, x21
  404800:	mov	x3, x28
  404804:	b	4047b0 <ferror@plt+0x2b10>
  404808:	mov	w16, w19
  40480c:	ldur	x8, [x29, #-64]
  404810:	cbz	x8, 404844 <ferror@plt+0x2ba4>
  404814:	tbnz	w16, #0, 404844 <ferror@plt+0x2ba4>
  404818:	ldrb	w9, [x8]
  40481c:	cbz	w9, 404844 <ferror@plt+0x2ba4>
  404820:	add	x8, x8, #0x1
  404824:	b	404834 <ferror@plt+0x2b94>
  404828:	ldrb	w9, [x8], #1
  40482c:	add	x20, x20, #0x1
  404830:	cbz	w9, 404844 <ferror@plt+0x2ba4>
  404834:	cmp	x20, x22
  404838:	b.cs	404828 <ferror@plt+0x2b88>  // b.hs, b.nlast
  40483c:	strb	w9, [x21, x20]
  404840:	b	404828 <ferror@plt+0x2b88>
  404844:	cmp	x20, x22
  404848:	b.cs	4047b8 <ferror@plt+0x2b18>  // b.hs, b.nlast
  40484c:	strb	wzr, [x21, x20]
  404850:	b	4047b8 <ferror@plt+0x2b18>
  404854:	b.ne	40475c <ferror@plt+0x2abc>  // b.any
  404858:	mov	w4, #0x4                   	// #4
  40485c:	b	40475c <ferror@plt+0x2abc>
  404860:	bl	401ac0 <abort@plt>
  404864:	sub	sp, sp, #0x60
  404868:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  40486c:	add	x8, x8, #0x330
  404870:	cmp	x2, #0x0
  404874:	stp	x29, x30, [sp, #16]
  404878:	stp	x26, x25, [sp, #32]
  40487c:	stp	x24, x23, [sp, #48]
  404880:	stp	x22, x21, [sp, #64]
  404884:	stp	x20, x19, [sp, #80]
  404888:	add	x29, sp, #0x10
  40488c:	mov	x19, x1
  404890:	mov	x20, x0
  404894:	csel	x25, x8, x2, eq  // eq = none
  404898:	bl	401c50 <__errno_location@plt>
  40489c:	ldp	w4, w8, [x25]
  4048a0:	ldp	x7, x9, [x25, #40]
  4048a4:	ldr	w26, [x0]
  4048a8:	add	x23, x25, #0x8
  4048ac:	orr	w22, w8, #0x1
  4048b0:	mov	x21, x0
  4048b4:	mov	x0, xzr
  4048b8:	mov	x1, xzr
  4048bc:	mov	x2, x20
  4048c0:	mov	x3, x19
  4048c4:	mov	w5, w22
  4048c8:	mov	x6, x23
  4048cc:	str	x9, [sp]
  4048d0:	bl	403c0c <ferror@plt+0x1f6c>
  4048d4:	add	x24, x0, #0x1
  4048d8:	mov	x0, x24
  4048dc:	bl	405dc8 <ferror@plt+0x4128>
  4048e0:	ldr	w4, [x25]
  4048e4:	ldp	x7, x8, [x25, #40]
  4048e8:	mov	x1, x24
  4048ec:	mov	x2, x20
  4048f0:	mov	x3, x19
  4048f4:	mov	w5, w22
  4048f8:	mov	x6, x23
  4048fc:	mov	x25, x0
  404900:	str	x8, [sp]
  404904:	bl	403c0c <ferror@plt+0x1f6c>
  404908:	str	w26, [x21]
  40490c:	mov	x0, x25
  404910:	ldp	x20, x19, [sp, #80]
  404914:	ldp	x22, x21, [sp, #64]
  404918:	ldp	x24, x23, [sp, #48]
  40491c:	ldp	x26, x25, [sp, #32]
  404920:	ldp	x29, x30, [sp, #16]
  404924:	add	sp, sp, #0x60
  404928:	ret
  40492c:	sub	sp, sp, #0x70
  404930:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  404934:	add	x8, x8, #0x330
  404938:	cmp	x3, #0x0
  40493c:	stp	x29, x30, [sp, #16]
  404940:	stp	x28, x27, [sp, #32]
  404944:	stp	x26, x25, [sp, #48]
  404948:	stp	x24, x23, [sp, #64]
  40494c:	stp	x22, x21, [sp, #80]
  404950:	stp	x20, x19, [sp, #96]
  404954:	add	x29, sp, #0x10
  404958:	mov	x19, x2
  40495c:	mov	x22, x1
  404960:	mov	x23, x0
  404964:	csel	x21, x8, x3, eq  // eq = none
  404968:	bl	401c50 <__errno_location@plt>
  40496c:	ldp	w4, w8, [x21]
  404970:	cmp	x19, #0x0
  404974:	ldp	x7, x9, [x21, #40]
  404978:	ldr	w28, [x0]
  40497c:	cset	w10, eq  // eq = none
  404980:	orr	w25, w8, w10
  404984:	add	x26, x21, #0x8
  404988:	mov	x24, x0
  40498c:	mov	x0, xzr
  404990:	mov	x1, xzr
  404994:	mov	x2, x23
  404998:	mov	x3, x22
  40499c:	mov	w5, w25
  4049a0:	mov	x6, x26
  4049a4:	str	x9, [sp]
  4049a8:	bl	403c0c <ferror@plt+0x1f6c>
  4049ac:	add	x27, x0, #0x1
  4049b0:	mov	x20, x0
  4049b4:	mov	x0, x27
  4049b8:	bl	405dc8 <ferror@plt+0x4128>
  4049bc:	ldr	w4, [x21]
  4049c0:	ldp	x7, x8, [x21, #40]
  4049c4:	mov	x1, x27
  4049c8:	mov	x2, x23
  4049cc:	mov	x3, x22
  4049d0:	mov	w5, w25
  4049d4:	mov	x6, x26
  4049d8:	mov	x21, x0
  4049dc:	str	x8, [sp]
  4049e0:	bl	403c0c <ferror@plt+0x1f6c>
  4049e4:	str	w28, [x24]
  4049e8:	cbz	x19, 4049f0 <ferror@plt+0x2d50>
  4049ec:	str	x20, [x19]
  4049f0:	mov	x0, x21
  4049f4:	ldp	x20, x19, [sp, #96]
  4049f8:	ldp	x22, x21, [sp, #80]
  4049fc:	ldp	x24, x23, [sp, #64]
  404a00:	ldp	x26, x25, [sp, #48]
  404a04:	ldp	x28, x27, [sp, #32]
  404a08:	ldp	x29, x30, [sp, #16]
  404a0c:	add	sp, sp, #0x70
  404a10:	ret
  404a14:	stp	x29, x30, [sp, #-64]!
  404a18:	stp	x20, x19, [sp, #48]
  404a1c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x11944>
  404a20:	stp	x22, x21, [sp, #32]
  404a24:	ldr	w8, [x20, #568]
  404a28:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x11944>
  404a2c:	ldr	x19, [x21, #560]
  404a30:	str	x23, [sp, #16]
  404a34:	cmp	w8, #0x2
  404a38:	mov	x29, sp
  404a3c:	b.lt	404a60 <ferror@plt+0x2dc0>  // b.tstop
  404a40:	add	x22, x19, #0x18
  404a44:	mov	w23, #0x1                   	// #1
  404a48:	ldr	x0, [x22], #16
  404a4c:	bl	401b70 <free@plt>
  404a50:	ldrsw	x8, [x20, #568]
  404a54:	add	x23, x23, #0x1
  404a58:	cmp	x23, x8
  404a5c:	b.lt	404a48 <ferror@plt+0x2da8>  // b.tstop
  404a60:	ldr	x0, [x19, #8]
  404a64:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x11944>
  404a68:	add	x23, x23, #0x368
  404a6c:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x11944>
  404a70:	cmp	x0, x23
  404a74:	add	x22, x22, #0x240
  404a78:	b.eq	404a88 <ferror@plt+0x2de8>  // b.none
  404a7c:	bl	401b70 <free@plt>
  404a80:	mov	w8, #0x100                 	// #256
  404a84:	stp	x8, x23, [x22]
  404a88:	cmp	x19, x22
  404a8c:	b.eq	404a9c <ferror@plt+0x2dfc>  // b.none
  404a90:	mov	x0, x19
  404a94:	bl	401b70 <free@plt>
  404a98:	str	x22, [x21, #560]
  404a9c:	mov	w8, #0x1                   	// #1
  404aa0:	str	w8, [x20, #568]
  404aa4:	ldp	x20, x19, [sp, #48]
  404aa8:	ldp	x22, x21, [sp, #32]
  404aac:	ldr	x23, [sp, #16]
  404ab0:	ldp	x29, x30, [sp], #64
  404ab4:	ret
  404ab8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  404abc:	add	x3, x3, #0x330
  404ac0:	mov	x2, #0xffffffffffffffff    	// #-1
  404ac4:	b	404ac8 <ferror@plt+0x2e28>
  404ac8:	sub	sp, sp, #0x80
  404acc:	stp	x29, x30, [sp, #32]
  404ad0:	add	x29, sp, #0x20
  404ad4:	stp	x28, x27, [sp, #48]
  404ad8:	stp	x26, x25, [sp, #64]
  404adc:	stp	x24, x23, [sp, #80]
  404ae0:	stp	x22, x21, [sp, #96]
  404ae4:	stp	x20, x19, [sp, #112]
  404ae8:	mov	x22, x3
  404aec:	stur	x2, [x29, #-8]
  404af0:	mov	x21, x1
  404af4:	mov	w23, w0
  404af8:	bl	401c50 <__errno_location@plt>
  404afc:	tbnz	w23, #31, 404c4c <ferror@plt+0x2fac>
  404b00:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x11944>
  404b04:	ldr	w8, [x25, #568]
  404b08:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x11944>
  404b0c:	ldr	w20, [x0]
  404b10:	ldr	x27, [x28, #560]
  404b14:	mov	x19, x0
  404b18:	cmp	w8, w23
  404b1c:	b.gt	404b88 <ferror@plt+0x2ee8>
  404b20:	mov	w8, #0x7fffffff            	// #2147483647
  404b24:	cmp	w23, w8
  404b28:	stur	w20, [x29, #-12]
  404b2c:	b.eq	404c50 <ferror@plt+0x2fb0>  // b.none
  404b30:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x11944>
  404b34:	add	x20, x20, #0x240
  404b38:	add	w26, w23, #0x1
  404b3c:	cmp	x27, x20
  404b40:	csel	x0, xzr, x27, eq  // eq = none
  404b44:	sbfiz	x1, x26, #4, #32
  404b48:	bl	405e48 <ferror@plt+0x41a8>
  404b4c:	mov	x24, x0
  404b50:	cmp	x27, x20
  404b54:	str	x0, [x28, #560]
  404b58:	b.ne	404b64 <ferror@plt+0x2ec4>  // b.any
  404b5c:	ldr	q0, [x20]
  404b60:	str	q0, [x24]
  404b64:	ldrsw	x8, [x25, #568]
  404b68:	mov	w1, wzr
  404b6c:	add	x0, x24, x8, lsl #4
  404b70:	sub	w8, w26, w8
  404b74:	sbfiz	x2, x8, #4, #32
  404b78:	bl	401a30 <memset@plt>
  404b7c:	ldur	w20, [x29, #-12]
  404b80:	mov	x27, x24
  404b84:	str	w26, [x25, #568]
  404b88:	add	x28, x27, w23, uxtw #4
  404b8c:	mov	x27, x28
  404b90:	ldr	x26, [x28]
  404b94:	ldr	x23, [x27, #8]!
  404b98:	ldp	w4, w8, [x22]
  404b9c:	ldp	x7, x9, [x22, #40]
  404ba0:	ldur	x3, [x29, #-8]
  404ba4:	add	x24, x22, #0x8
  404ba8:	orr	w25, w8, #0x1
  404bac:	mov	x0, x23
  404bb0:	mov	x1, x26
  404bb4:	mov	x2, x21
  404bb8:	mov	w5, w25
  404bbc:	mov	x6, x24
  404bc0:	str	x9, [sp]
  404bc4:	bl	403c0c <ferror@plt+0x1f6c>
  404bc8:	cmp	x26, x0
  404bcc:	b.hi	404c24 <ferror@plt+0x2f84>  // b.pmore
  404bd0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  404bd4:	add	x8, x8, #0x368
  404bd8:	add	x26, x0, #0x1
  404bdc:	cmp	x23, x8
  404be0:	str	x26, [x28]
  404be4:	b.eq	404bf0 <ferror@plt+0x2f50>  // b.none
  404be8:	mov	x0, x23
  404bec:	bl	401b70 <free@plt>
  404bf0:	mov	x0, x26
  404bf4:	bl	405dc8 <ferror@plt+0x4128>
  404bf8:	str	x0, [x27]
  404bfc:	ldr	w4, [x22]
  404c00:	ldp	x7, x8, [x22, #40]
  404c04:	ldur	x3, [x29, #-8]
  404c08:	mov	x1, x26
  404c0c:	mov	x2, x21
  404c10:	mov	w5, w25
  404c14:	mov	x6, x24
  404c18:	mov	x23, x0
  404c1c:	str	x8, [sp]
  404c20:	bl	403c0c <ferror@plt+0x1f6c>
  404c24:	str	w20, [x19]
  404c28:	mov	x0, x23
  404c2c:	ldp	x20, x19, [sp, #112]
  404c30:	ldp	x22, x21, [sp, #96]
  404c34:	ldp	x24, x23, [sp, #80]
  404c38:	ldp	x26, x25, [sp, #64]
  404c3c:	ldp	x28, x27, [sp, #48]
  404c40:	ldp	x29, x30, [sp, #32]
  404c44:	add	sp, sp, #0x80
  404c48:	ret
  404c4c:	bl	401ac0 <abort@plt>
  404c50:	bl	4060dc <ferror@plt+0x443c>
  404c54:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  404c58:	add	x3, x3, #0x330
  404c5c:	b	404ac8 <ferror@plt+0x2e28>
  404c60:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  404c64:	add	x3, x3, #0x330
  404c68:	mov	x2, #0xffffffffffffffff    	// #-1
  404c6c:	mov	x1, x0
  404c70:	mov	w0, wzr
  404c74:	b	404ac8 <ferror@plt+0x2e28>
  404c78:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  404c7c:	mov	x2, x1
  404c80:	add	x3, x3, #0x330
  404c84:	mov	x1, x0
  404c88:	mov	w0, wzr
  404c8c:	b	404ac8 <ferror@plt+0x2e28>
  404c90:	sub	sp, sp, #0x50
  404c94:	movi	v0.2d, #0x0
  404c98:	cmp	w1, #0xa
  404c9c:	stp	x29, x30, [sp, #64]
  404ca0:	add	x29, sp, #0x40
  404ca4:	str	xzr, [sp, #48]
  404ca8:	stp	q0, q0, [sp, #16]
  404cac:	str	q0, [sp]
  404cb0:	b.eq	404cd8 <ferror@plt+0x3038>  // b.none
  404cb4:	mov	x8, x2
  404cb8:	str	w1, [sp]
  404cbc:	mov	x3, sp
  404cc0:	mov	x2, #0xffffffffffffffff    	// #-1
  404cc4:	mov	x1, x8
  404cc8:	bl	404ac8 <ferror@plt+0x2e28>
  404ccc:	ldp	x29, x30, [sp, #64]
  404cd0:	add	sp, sp, #0x50
  404cd4:	ret
  404cd8:	bl	401ac0 <abort@plt>
  404cdc:	sub	sp, sp, #0x50
  404ce0:	movi	v0.2d, #0x0
  404ce4:	cmp	w1, #0xa
  404ce8:	stp	x29, x30, [sp, #64]
  404cec:	add	x29, sp, #0x40
  404cf0:	str	xzr, [sp, #48]
  404cf4:	stp	q0, q0, [sp, #16]
  404cf8:	str	q0, [sp]
  404cfc:	b.eq	404d24 <ferror@plt+0x3084>  // b.none
  404d00:	mov	x8, x3
  404d04:	str	w1, [sp]
  404d08:	mov	x3, sp
  404d0c:	mov	x1, x2
  404d10:	mov	x2, x8
  404d14:	bl	404ac8 <ferror@plt+0x2e28>
  404d18:	ldp	x29, x30, [sp, #64]
  404d1c:	add	sp, sp, #0x50
  404d20:	ret
  404d24:	bl	401ac0 <abort@plt>
  404d28:	sub	sp, sp, #0x50
  404d2c:	movi	v0.2d, #0x0
  404d30:	cmp	w0, #0xa
  404d34:	stp	x29, x30, [sp, #64]
  404d38:	add	x29, sp, #0x40
  404d3c:	str	xzr, [sp, #48]
  404d40:	stp	q0, q0, [sp, #16]
  404d44:	str	q0, [sp]
  404d48:	b.eq	404d6c <ferror@plt+0x30cc>  // b.none
  404d4c:	str	w0, [sp]
  404d50:	mov	x3, sp
  404d54:	mov	x2, #0xffffffffffffffff    	// #-1
  404d58:	mov	w0, wzr
  404d5c:	bl	404ac8 <ferror@plt+0x2e28>
  404d60:	ldp	x29, x30, [sp, #64]
  404d64:	add	sp, sp, #0x50
  404d68:	ret
  404d6c:	bl	401ac0 <abort@plt>
  404d70:	sub	sp, sp, #0x50
  404d74:	movi	v0.2d, #0x0
  404d78:	cmp	w0, #0xa
  404d7c:	stp	x29, x30, [sp, #64]
  404d80:	add	x29, sp, #0x40
  404d84:	str	xzr, [sp, #48]
  404d88:	stp	q0, q0, [sp, #16]
  404d8c:	str	q0, [sp]
  404d90:	b.eq	404db0 <ferror@plt+0x3110>  // b.none
  404d94:	str	w0, [sp]
  404d98:	mov	x3, sp
  404d9c:	mov	w0, wzr
  404da0:	bl	404ac8 <ferror@plt+0x2e28>
  404da4:	ldp	x29, x30, [sp, #64]
  404da8:	add	sp, sp, #0x50
  404dac:	ret
  404db0:	bl	401ac0 <abort@plt>
  404db4:	sub	sp, sp, #0x50
  404db8:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  404dbc:	add	x9, x9, #0x330
  404dc0:	ldp	q0, q1, [x9]
  404dc4:	ubfx	w10, w2, #5, #3
  404dc8:	mov	x11, sp
  404dcc:	mov	x8, x1
  404dd0:	stp	q0, q1, [sp]
  404dd4:	ldr	q0, [x9, #32]
  404dd8:	ldr	x9, [x9, #48]
  404ddc:	mov	x1, x0
  404de0:	mov	x3, sp
  404de4:	str	q0, [sp, #32]
  404de8:	str	x9, [sp, #48]
  404dec:	add	x9, x11, w10, uxtw #2
  404df0:	ldr	w10, [x9, #8]
  404df4:	mov	w0, wzr
  404df8:	stp	x29, x30, [sp, #64]
  404dfc:	add	x29, sp, #0x40
  404e00:	lsr	w11, w10, w2
  404e04:	mvn	w11, w11
  404e08:	and	w11, w11, #0x1
  404e0c:	lsl	w11, w11, w2
  404e10:	eor	w10, w11, w10
  404e14:	mov	x2, x8
  404e18:	str	w10, [x9, #8]
  404e1c:	bl	404ac8 <ferror@plt+0x2e28>
  404e20:	ldp	x29, x30, [sp, #64]
  404e24:	add	sp, sp, #0x50
  404e28:	ret
  404e2c:	sub	sp, sp, #0x50
  404e30:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  404e34:	add	x9, x9, #0x330
  404e38:	ldp	q0, q1, [x9]
  404e3c:	ubfx	w10, w1, #5, #3
  404e40:	mov	x11, sp
  404e44:	mov	x8, x0
  404e48:	stp	q0, q1, [sp]
  404e4c:	ldr	q0, [x9, #32]
  404e50:	ldr	x9, [x9, #48]
  404e54:	mov	x3, sp
  404e58:	mov	x2, #0xffffffffffffffff    	// #-1
  404e5c:	str	q0, [sp, #32]
  404e60:	str	x9, [sp, #48]
  404e64:	add	x9, x11, w10, uxtw #2
  404e68:	ldr	w10, [x9, #8]
  404e6c:	mov	w0, wzr
  404e70:	stp	x29, x30, [sp, #64]
  404e74:	add	x29, sp, #0x40
  404e78:	lsr	w11, w10, w1
  404e7c:	mvn	w11, w11
  404e80:	and	w11, w11, #0x1
  404e84:	lsl	w11, w11, w1
  404e88:	eor	w10, w11, w10
  404e8c:	mov	x1, x8
  404e90:	str	w10, [x9, #8]
  404e94:	bl	404ac8 <ferror@plt+0x2e28>
  404e98:	ldp	x29, x30, [sp, #64]
  404e9c:	add	sp, sp, #0x50
  404ea0:	ret
  404ea4:	sub	sp, sp, #0x50
  404ea8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  404eac:	add	x8, x8, #0x330
  404eb0:	ldp	q0, q1, [x8]
  404eb4:	ldr	q2, [x8, #32]
  404eb8:	ldr	x8, [x8, #48]
  404ebc:	mov	x1, x0
  404ec0:	stp	q0, q1, [sp]
  404ec4:	ldr	w9, [sp, #12]
  404ec8:	str	x8, [sp, #48]
  404ecc:	mov	x3, sp
  404ed0:	mov	x2, #0xffffffffffffffff    	// #-1
  404ed4:	orr	w8, w9, #0x4000000
  404ed8:	mov	w0, wzr
  404edc:	stp	x29, x30, [sp, #64]
  404ee0:	add	x29, sp, #0x40
  404ee4:	str	q2, [sp, #32]
  404ee8:	str	w8, [sp, #12]
  404eec:	bl	404ac8 <ferror@plt+0x2e28>
  404ef0:	ldp	x29, x30, [sp, #64]
  404ef4:	add	sp, sp, #0x50
  404ef8:	ret
  404efc:	sub	sp, sp, #0x50
  404f00:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  404f04:	add	x8, x8, #0x330
  404f08:	ldp	q0, q1, [x8]
  404f0c:	ldr	q2, [x8, #32]
  404f10:	ldr	x8, [x8, #48]
  404f14:	mov	x2, x1
  404f18:	stp	q0, q1, [sp]
  404f1c:	ldr	w9, [sp, #12]
  404f20:	mov	x1, x0
  404f24:	str	x8, [sp, #48]
  404f28:	mov	x3, sp
  404f2c:	orr	w8, w9, #0x4000000
  404f30:	mov	w0, wzr
  404f34:	stp	x29, x30, [sp, #64]
  404f38:	add	x29, sp, #0x40
  404f3c:	str	q2, [sp, #32]
  404f40:	str	w8, [sp, #12]
  404f44:	bl	404ac8 <ferror@plt+0x2e28>
  404f48:	ldp	x29, x30, [sp, #64]
  404f4c:	add	sp, sp, #0x50
  404f50:	ret
  404f54:	sub	sp, sp, #0x80
  404f58:	movi	v0.2d, #0x0
  404f5c:	cmp	w1, #0xa
  404f60:	stp	x29, x30, [sp, #112]
  404f64:	add	x29, sp, #0x70
  404f68:	str	wzr, [sp, #48]
  404f6c:	stp	q0, q0, [sp, #16]
  404f70:	str	q0, [sp]
  404f74:	b.eq	404fc4 <ferror@plt+0x3324>  // b.none
  404f78:	ldp	q0, q1, [sp]
  404f7c:	ldr	w9, [sp, #48]
  404f80:	ldr	q2, [sp, #32]
  404f84:	mov	x8, x2
  404f88:	stur	q0, [sp, #60]
  404f8c:	ldr	w10, [sp, #68]
  404f90:	str	w1, [sp, #56]
  404f94:	str	w9, [sp, #108]
  404f98:	add	x3, sp, #0x38
  404f9c:	orr	w9, w10, #0x4000000
  404fa0:	mov	x2, #0xffffffffffffffff    	// #-1
  404fa4:	mov	x1, x8
  404fa8:	stur	q1, [sp, #76]
  404fac:	stur	q2, [sp, #92]
  404fb0:	str	w9, [sp, #68]
  404fb4:	bl	404ac8 <ferror@plt+0x2e28>
  404fb8:	ldp	x29, x30, [sp, #112]
  404fbc:	add	sp, sp, #0x80
  404fc0:	ret
  404fc4:	bl	401ac0 <abort@plt>
  404fc8:	sub	sp, sp, #0x50
  404fcc:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  404fd0:	add	x9, x9, #0x330
  404fd4:	ldp	q0, q1, [x9]
  404fd8:	ldr	q2, [x9, #32]
  404fdc:	ldr	x9, [x9, #48]
  404fe0:	mov	w10, #0xa                   	// #10
  404fe4:	stp	x29, x30, [sp, #64]
  404fe8:	add	x29, sp, #0x40
  404fec:	stp	q0, q1, [sp]
  404ff0:	str	q2, [sp, #32]
  404ff4:	str	x9, [sp, #48]
  404ff8:	str	w10, [sp]
  404ffc:	cbz	x1, 405028 <ferror@plt+0x3388>
  405000:	cbz	x2, 405028 <ferror@plt+0x3388>
  405004:	mov	x8, x3
  405008:	stp	x1, x2, [sp, #40]
  40500c:	mov	x3, sp
  405010:	mov	x2, #0xffffffffffffffff    	// #-1
  405014:	mov	x1, x8
  405018:	bl	404ac8 <ferror@plt+0x2e28>
  40501c:	ldp	x29, x30, [sp, #64]
  405020:	add	sp, sp, #0x50
  405024:	ret
  405028:	bl	401ac0 <abort@plt>
  40502c:	sub	sp, sp, #0x50
  405030:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  405034:	add	x9, x9, #0x330
  405038:	ldp	q0, q1, [x9]
  40503c:	ldr	x10, [x9, #48]
  405040:	stp	x29, x30, [sp, #64]
  405044:	add	x29, sp, #0x40
  405048:	stp	q0, q1, [sp]
  40504c:	ldr	q0, [x9, #32]
  405050:	mov	w9, #0xa                   	// #10
  405054:	str	x10, [sp, #48]
  405058:	str	w9, [sp]
  40505c:	str	q0, [sp, #32]
  405060:	cbz	x1, 40508c <ferror@plt+0x33ec>
  405064:	cbz	x2, 40508c <ferror@plt+0x33ec>
  405068:	mov	x8, x3
  40506c:	stp	x1, x2, [sp, #40]
  405070:	mov	x3, sp
  405074:	mov	x1, x8
  405078:	mov	x2, x4
  40507c:	bl	404ac8 <ferror@plt+0x2e28>
  405080:	ldp	x29, x30, [sp, #64]
  405084:	add	sp, sp, #0x50
  405088:	ret
  40508c:	bl	401ac0 <abort@plt>
  405090:	sub	sp, sp, #0x50
  405094:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  405098:	add	x9, x9, #0x330
  40509c:	ldp	q0, q1, [x9]
  4050a0:	ldr	q2, [x9, #32]
  4050a4:	ldr	x9, [x9, #48]
  4050a8:	mov	w10, #0xa                   	// #10
  4050ac:	stp	x29, x30, [sp, #64]
  4050b0:	add	x29, sp, #0x40
  4050b4:	stp	q0, q1, [sp]
  4050b8:	str	q2, [sp, #32]
  4050bc:	str	x9, [sp, #48]
  4050c0:	str	w10, [sp]
  4050c4:	cbz	x0, 4050f4 <ferror@plt+0x3454>
  4050c8:	cbz	x1, 4050f4 <ferror@plt+0x3454>
  4050cc:	mov	x8, x2
  4050d0:	stp	x0, x1, [sp, #40]
  4050d4:	mov	x3, sp
  4050d8:	mov	x2, #0xffffffffffffffff    	// #-1
  4050dc:	mov	w0, wzr
  4050e0:	mov	x1, x8
  4050e4:	bl	404ac8 <ferror@plt+0x2e28>
  4050e8:	ldp	x29, x30, [sp, #64]
  4050ec:	add	sp, sp, #0x50
  4050f0:	ret
  4050f4:	bl	401ac0 <abort@plt>
  4050f8:	sub	sp, sp, #0x50
  4050fc:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11944>
  405100:	add	x9, x9, #0x330
  405104:	ldp	q0, q1, [x9]
  405108:	ldr	q2, [x9, #32]
  40510c:	ldr	x9, [x9, #48]
  405110:	mov	w10, #0xa                   	// #10
  405114:	stp	x29, x30, [sp, #64]
  405118:	add	x29, sp, #0x40
  40511c:	stp	q0, q1, [sp]
  405120:	str	q2, [sp, #32]
  405124:	str	x9, [sp, #48]
  405128:	str	w10, [sp]
  40512c:	cbz	x0, 40515c <ferror@plt+0x34bc>
  405130:	cbz	x1, 40515c <ferror@plt+0x34bc>
  405134:	mov	x8, x3
  405138:	stp	x0, x1, [sp, #40]
  40513c:	mov	x3, sp
  405140:	mov	w0, wzr
  405144:	mov	x1, x2
  405148:	mov	x2, x8
  40514c:	bl	404ac8 <ferror@plt+0x2e28>
  405150:	ldp	x29, x30, [sp, #64]
  405154:	add	sp, sp, #0x50
  405158:	ret
  40515c:	bl	401ac0 <abort@plt>
  405160:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  405164:	add	x3, x3, #0x250
  405168:	b	404ac8 <ferror@plt+0x2e28>
  40516c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  405170:	mov	x2, x1
  405174:	add	x3, x3, #0x250
  405178:	mov	x1, x0
  40517c:	mov	w0, wzr
  405180:	b	404ac8 <ferror@plt+0x2e28>
  405184:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  405188:	add	x3, x3, #0x250
  40518c:	mov	x2, #0xffffffffffffffff    	// #-1
  405190:	b	404ac8 <ferror@plt+0x2e28>
  405194:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11944>
  405198:	add	x3, x3, #0x250
  40519c:	mov	x2, #0xffffffffffffffff    	// #-1
  4051a0:	mov	x1, x0
  4051a4:	mov	w0, wzr
  4051a8:	b	404ac8 <ferror@plt+0x2e28>
  4051ac:	stp	x29, x30, [sp, #-32]!
  4051b0:	stp	x20, x19, [sp, #16]
  4051b4:	mov	x20, x0
  4051b8:	mov	w19, w1
  4051bc:	mov	w2, #0x5                   	// #5
  4051c0:	mov	x0, xzr
  4051c4:	mov	x1, x20
  4051c8:	mov	x29, sp
  4051cc:	bl	401c00 <dcgettext@plt>
  4051d0:	cmp	x0, x20
  4051d4:	b.ne	4052b8 <ferror@plt+0x3618>  // b.any
  4051d8:	bl	4067fc <_obstack_memory_used@@Base+0x140>
  4051dc:	ldrb	w8, [x0]
  4051e0:	and	w8, w8, #0xffffffdf
  4051e4:	cmp	w8, #0x47
  4051e8:	b.eq	40524c <ferror@plt+0x35ac>  // b.none
  4051ec:	cmp	w8, #0x55
  4051f0:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  4051f4:	ldrb	w8, [x0, #1]
  4051f8:	and	w8, w8, #0xffffffdf
  4051fc:	cmp	w8, #0x54
  405200:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405204:	ldrb	w8, [x0, #2]
  405208:	and	w8, w8, #0xffffffdf
  40520c:	cmp	w8, #0x46
  405210:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405214:	ldrb	w8, [x0, #3]
  405218:	cmp	w8, #0x2d
  40521c:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405220:	ldrb	w8, [x0, #4]
  405224:	cmp	w8, #0x38
  405228:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  40522c:	ldrb	w8, [x0, #5]
  405230:	cbnz	w8, 4052a0 <ferror@plt+0x3600>
  405234:	ldrb	w8, [x20]
  405238:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  40523c:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x944>
  405240:	add	x9, x9, #0x424
  405244:	add	x10, x10, #0x420
  405248:	b	4052d8 <ferror@plt+0x3638>
  40524c:	ldrb	w8, [x0, #1]
  405250:	and	w8, w8, #0xffffffdf
  405254:	cmp	w8, #0x42
  405258:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  40525c:	ldrb	w8, [x0, #2]
  405260:	cmp	w8, #0x31
  405264:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405268:	ldrb	w8, [x0, #3]
  40526c:	cmp	w8, #0x38
  405270:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405274:	ldrb	w8, [x0, #4]
  405278:	cmp	w8, #0x30
  40527c:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405280:	ldrb	w8, [x0, #5]
  405284:	cmp	w8, #0x33
  405288:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  40528c:	ldrb	w8, [x0, #6]
  405290:	cmp	w8, #0x30
  405294:	b.ne	4052a0 <ferror@plt+0x3600>  // b.any
  405298:	ldrb	w8, [x0, #7]
  40529c:	cbz	w8, 4052c4 <ferror@plt+0x3624>
  4052a0:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  4052a4:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  4052a8:	add	x8, x8, #0x41e
  4052ac:	add	x9, x9, #0x0
  4052b0:	cmp	w19, #0x9
  4052b4:	csel	x0, x9, x8, eq  // eq = none
  4052b8:	ldp	x20, x19, [sp, #16]
  4052bc:	ldp	x29, x30, [sp], #32
  4052c0:	ret
  4052c4:	ldrb	w8, [x20]
  4052c8:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x944>
  4052cc:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x944>
  4052d0:	add	x9, x9, #0x42c
  4052d4:	add	x10, x10, #0x428
  4052d8:	cmp	w8, #0x60
  4052dc:	csel	x0, x10, x9, eq  // eq = none
  4052e0:	b	4052b8 <ferror@plt+0x3618>
  4052e4:	stp	x29, x30, [sp, #-48]!
  4052e8:	str	x21, [sp, #16]
  4052ec:	stp	x20, x19, [sp, #32]
  4052f0:	adrp	x20, 401000 <mbrtowc@plt-0x890>
  4052f4:	adrp	x21, 401000 <mbrtowc@plt-0x890>
  4052f8:	add	x20, x20, #0x9a0
  4052fc:	add	x21, x21, #0xb70
  405300:	mov	x19, x0
  405304:	add	x0, x0, #0x18
  405308:	mov	x1, xzr
  40530c:	mov	x2, xzr
  405310:	mov	x3, x20
  405314:	mov	x4, x21
  405318:	mov	x29, sp
  40531c:	stp	xzr, xzr, [x19]
  405320:	str	xzr, [x19, #16]
  405324:	bl	406354 <_obstack_begin@@Base>
  405328:	add	x0, x19, #0x70
  40532c:	mov	x1, xzr
  405330:	mov	x2, xzr
  405334:	mov	x3, x20
  405338:	mov	x4, x21
  40533c:	bl	406354 <_obstack_begin@@Base>
  405340:	add	x0, x19, #0xc8
  405344:	mov	x3, x20
  405348:	mov	x4, x21
  40534c:	ldp	x20, x19, [sp, #32]
  405350:	ldr	x21, [sp, #16]
  405354:	mov	x1, xzr
  405358:	mov	x2, xzr
  40535c:	ldp	x29, x30, [sp], #48
  405360:	b	406354 <_obstack_begin@@Base>
  405364:	stp	x29, x30, [sp, #-32]!
  405368:	str	x19, [sp, #16]
  40536c:	mov	x19, x0
  405370:	add	x0, x0, #0x18
  405374:	mov	x1, xzr
  405378:	mov	x29, sp
  40537c:	bl	406620 <_obstack_free@@Base>
  405380:	add	x0, x19, #0x70
  405384:	mov	x1, xzr
  405388:	bl	406620 <_obstack_free@@Base>
  40538c:	add	x0, x19, #0xc8
  405390:	ldr	x19, [sp, #16]
  405394:	mov	x1, xzr
  405398:	ldp	x29, x30, [sp], #32
  40539c:	b	406620 <_obstack_free@@Base>
  4053a0:	stp	x29, x30, [sp, #-48]!
  4053a4:	stp	x22, x21, [sp, #16]
  4053a8:	stp	x20, x19, [sp, #32]
  4053ac:	mov	x29, sp
  4053b0:	mov	x20, x1
  4053b4:	mov	x19, x0
  4053b8:	bl	401a10 <fgetc@plt>
  4053bc:	cmn	w0, #0x1
  4053c0:	b.eq	405420 <ferror@plt+0x3780>  // b.none
  4053c4:	mov	w22, w0
  4053c8:	add	x21, x20, #0x18
  4053cc:	b	4053f4 <ferror@plt+0x3754>
  4053d0:	add	x9, x8, #0x1
  4053d4:	str	x9, [x20, #48]
  4053d8:	strb	w22, [x8]
  4053dc:	cbz	w22, 405414 <ferror@plt+0x3774>
  4053e0:	mov	x0, x19
  4053e4:	bl	401a10 <fgetc@plt>
  4053e8:	mov	w22, w0
  4053ec:	cmn	w0, #0x1
  4053f0:	b.eq	405420 <ferror@plt+0x3780>  // b.none
  4053f4:	ldp	x8, x9, [x20, #48]
  4053f8:	cmp	x9, x8
  4053fc:	b.ne	4053d0 <ferror@plt+0x3730>  // b.any
  405400:	mov	w1, #0x1                   	// #1
  405404:	mov	x0, x21
  405408:	bl	4064a8 <_obstack_newchunk@@Base>
  40540c:	ldr	x8, [x20, #48]
  405410:	b	4053d0 <ferror@plt+0x3730>
  405414:	mov	x0, x20
  405418:	bl	405548 <ferror@plt+0x38a8>
  40541c:	b	4053e0 <ferror@plt+0x3740>
  405420:	ldp	x9, x8, [x20, #40]
  405424:	cmp	x8, x9
  405428:	b.eq	40545c <ferror@plt+0x37bc>  // b.none
  40542c:	ldr	x9, [x20, #56]
  405430:	cmp	x9, x8
  405434:	b.ne	405448 <ferror@plt+0x37a8>  // b.any
  405438:	add	x0, x20, #0x18
  40543c:	mov	w1, #0x1                   	// #1
  405440:	bl	4064a8 <_obstack_newchunk@@Base>
  405444:	ldr	x8, [x20, #48]
  405448:	add	x9, x8, #0x1
  40544c:	mov	x0, x20
  405450:	str	x9, [x20, #48]
  405454:	strb	wzr, [x8]
  405458:	bl	405548 <ferror@plt+0x38a8>
  40545c:	ldp	x8, x9, [x20, #136]
  405460:	sub	x9, x9, x8
  405464:	cmp	x9, #0x8
  405468:	b.cs	40547c <ferror@plt+0x37dc>  // b.hs, b.nlast
  40546c:	add	x0, x20, #0x70
  405470:	mov	w1, #0x8                   	// #8
  405474:	bl	4064a8 <_obstack_newchunk@@Base>
  405478:	ldr	x8, [x20, #136]
  40547c:	str	xzr, [x8]
  405480:	ldp	x8, x9, [x20, #128]
  405484:	add	x9, x9, #0x8
  405488:	cmp	x9, x8
  40548c:	str	x9, [x20, #136]
  405490:	b.ne	4054a0 <ferror@plt+0x3800>  // b.any
  405494:	ldrb	w10, [x20, #192]
  405498:	orr	w10, w10, #0x2
  40549c:	strb	w10, [x20, #192]
  4054a0:	ldr	x11, [x20, #160]
  4054a4:	ldr	x12, [x20, #120]
  4054a8:	ldr	x10, [x20, #144]
  4054ac:	add	x9, x11, x9
  4054b0:	bic	x11, x9, x11
  4054b4:	sub	x9, x11, x12
  4054b8:	sub	x12, x10, x12
  4054bc:	cmp	x9, x12
  4054c0:	str	x11, [x20, #136]
  4054c4:	b.ls	4054d0 <ferror@plt+0x3830>  // b.plast
  4054c8:	mov	x11, x10
  4054cc:	str	x10, [x20, #136]
  4054d0:	ldp	x9, x10, [x20, #216]
  4054d4:	str	x11, [x20, #128]
  4054d8:	str	x8, [x20, #8]
  4054dc:	cmp	x10, x9
  4054e0:	b.ne	4054f0 <ferror@plt+0x3850>  // b.any
  4054e4:	ldrb	w8, [x20, #280]
  4054e8:	orr	w8, w8, #0x2
  4054ec:	strb	w8, [x20, #280]
  4054f0:	ldr	x11, [x20, #248]
  4054f4:	ldr	x12, [x20, #208]
  4054f8:	ldr	x8, [x20, #232]
  4054fc:	add	x10, x11, x10
  405500:	bic	x10, x10, x11
  405504:	sub	x11, x10, x12
  405508:	sub	x12, x8, x12
  40550c:	cmp	x11, x12
  405510:	str	x10, [x20, #224]
  405514:	b.ls	405520 <ferror@plt+0x3880>  // b.plast
  405518:	mov	x10, x8
  40551c:	str	x8, [x20, #224]
  405520:	mov	x0, x19
  405524:	str	x10, [x20, #216]
  405528:	str	x9, [x20, #16]
  40552c:	bl	401ca0 <ferror@plt>
  405530:	ldp	x20, x19, [sp, #32]
  405534:	ldp	x22, x21, [sp, #16]
  405538:	cmp	w0, #0x0
  40553c:	cset	w0, eq  // eq = none
  405540:	ldp	x29, x30, [sp], #48
  405544:	ret
  405548:	sub	sp, sp, #0x30
  40554c:	stp	x29, x30, [sp, #16]
  405550:	stp	x20, x19, [sp, #32]
  405554:	ldp	x20, x8, [x0, #40]
  405558:	mov	x19, x0
  40555c:	add	x29, sp, #0x10
  405560:	mvn	x9, x20
  405564:	add	x9, x8, x9
  405568:	cmp	x8, x20
  40556c:	str	x9, [sp, #8]
  405570:	b.ne	405580 <ferror@plt+0x38e0>  // b.any
  405574:	ldrb	w9, [x19, #104]
  405578:	orr	w9, w9, #0x2
  40557c:	strb	w9, [x19, #104]
  405580:	ldr	x9, [x19, #72]
  405584:	ldr	x11, [x19, #32]
  405588:	ldr	x10, [x19, #56]
  40558c:	add	x8, x9, x8
  405590:	bic	x9, x8, x9
  405594:	sub	x8, x9, x11
  405598:	sub	x11, x10, x11
  40559c:	cmp	x8, x11
  4055a0:	str	x9, [x19, #48]
  4055a4:	b.ls	4055b0 <ferror@plt+0x3910>  // b.plast
  4055a8:	mov	x9, x10
  4055ac:	str	x10, [x19, #48]
  4055b0:	ldp	x8, x10, [x19, #136]
  4055b4:	str	x9, [x19, #40]
  4055b8:	sub	x10, x10, x8
  4055bc:	cmp	x10, #0x8
  4055c0:	b.cs	4055d4 <ferror@plt+0x3934>  // b.hs, b.nlast
  4055c4:	add	x0, x19, #0x70
  4055c8:	mov	w1, #0x8                   	// #8
  4055cc:	bl	4064a8 <_obstack_newchunk@@Base>
  4055d0:	ldr	x8, [x19, #136]
  4055d4:	str	x20, [x8]
  4055d8:	ldp	x8, x10, [x19, #224]
  4055dc:	ldr	x9, [x19, #136]
  4055e0:	sub	x10, x10, x8
  4055e4:	add	x9, x9, #0x8
  4055e8:	cmp	x10, #0x7
  4055ec:	str	x9, [x19, #136]
  4055f0:	b.hi	405604 <ferror@plt+0x3964>  // b.pmore
  4055f4:	add	x0, x19, #0xc8
  4055f8:	mov	w1, #0x8                   	// #8
  4055fc:	bl	4064a8 <_obstack_newchunk@@Base>
  405600:	ldr	x8, [x19, #224]
  405604:	ldr	x9, [sp, #8]
  405608:	str	x9, [x8]
  40560c:	ldr	x8, [x19, #224]
  405610:	ldr	x9, [x19]
  405614:	add	x8, x8, #0x8
  405618:	add	x9, x9, #0x1
  40561c:	str	x8, [x19, #224]
  405620:	str	x9, [x19]
  405624:	ldp	x20, x19, [sp, #32]
  405628:	ldp	x29, x30, [sp, #16]
  40562c:	add	sp, sp, #0x30
  405630:	ret
  405634:	stp	x29, x30, [sp, #-64]!
  405638:	str	x23, [sp, #16]
  40563c:	mov	w23, #0x1                   	// #1
  405640:	stp	x22, x21, [sp, #32]
  405644:	stp	x20, x19, [sp, #48]
  405648:	mov	x21, x2
  40564c:	mov	x19, x1
  405650:	mov	w20, w0
  405654:	movk	w23, #0x7ff0, lsl #16
  405658:	mov	x29, sp
  40565c:	mov	w0, w20
  405660:	mov	x1, x19
  405664:	mov	x2, x21
  405668:	bl	401bc0 <read@plt>
  40566c:	mov	x22, x0
  405670:	tbz	x0, #63, 405698 <ferror@plt+0x39f8>
  405674:	bl	401c50 <__errno_location@plt>
  405678:	ldr	w8, [x0]
  40567c:	cmp	w8, #0x4
  405680:	b.eq	40565c <ferror@plt+0x39bc>  // b.none
  405684:	cmp	x21, x23
  405688:	b.cc	405698 <ferror@plt+0x39f8>  // b.lo, b.ul, b.last
  40568c:	cmp	w8, #0x16
  405690:	mov	w21, #0x7ff00000            	// #2146435072
  405694:	b.eq	40565c <ferror@plt+0x39bc>  // b.none
  405698:	mov	x0, x22
  40569c:	ldp	x20, x19, [sp, #48]
  4056a0:	ldp	x22, x21, [sp, #32]
  4056a4:	ldr	x23, [sp, #16]
  4056a8:	ldp	x29, x30, [sp], #64
  4056ac:	ret
  4056b0:	sub	sp, sp, #0x50
  4056b4:	str	x21, [sp, #48]
  4056b8:	stp	x20, x19, [sp, #64]
  4056bc:	mov	x21, x5
  4056c0:	mov	x20, x4
  4056c4:	mov	x5, x3
  4056c8:	mov	x4, x2
  4056cc:	mov	x19, x0
  4056d0:	stp	x29, x30, [sp, #32]
  4056d4:	add	x29, sp, #0x20
  4056d8:	cbz	x1, 4056f8 <ferror@plt+0x3a58>
  4056dc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4056e0:	mov	x3, x1
  4056e4:	add	x2, x2, #0x439
  4056e8:	mov	w1, #0x1                   	// #1
  4056ec:	mov	x0, x19
  4056f0:	bl	401b30 <__fprintf_chk@plt>
  4056f4:	b	405714 <ferror@plt+0x3a74>
  4056f8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  4056fc:	add	x2, x2, #0x445
  405700:	mov	w1, #0x1                   	// #1
  405704:	mov	x0, x19
  405708:	mov	x3, x4
  40570c:	mov	x4, x5
  405710:	bl	401b30 <__fprintf_chk@plt>
  405714:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405718:	add	x1, x1, #0x44c
  40571c:	mov	w2, #0x5                   	// #5
  405720:	mov	x0, xzr
  405724:	bl	401c00 <dcgettext@plt>
  405728:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  40572c:	mov	x3, x0
  405730:	add	x2, x2, #0x717
  405734:	mov	w1, #0x1                   	// #1
  405738:	mov	w4, #0x7e3                 	// #2019
  40573c:	mov	x0, x19
  405740:	bl	401b30 <__fprintf_chk@plt>
  405744:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405748:	add	x1, x1, #0x450
  40574c:	mov	w2, #0x5                   	// #5
  405750:	mov	x0, xzr
  405754:	bl	401c00 <dcgettext@plt>
  405758:	mov	x1, x19
  40575c:	bl	401c10 <fputs_unlocked@plt>
  405760:	cmp	x21, #0x9
  405764:	b.hi	4057b8 <ferror@plt+0x3b18>  // b.pmore
  405768:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  40576c:	add	x8, x8, #0x42f
  405770:	adr	x9, 405780 <ferror@plt+0x3ae0>
  405774:	ldrb	w10, [x8, x21]
  405778:	add	x9, x9, x10, lsl #2
  40577c:	br	x9
  405780:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405784:	add	x1, x1, #0x51c
  405788:	mov	w2, #0x5                   	// #5
  40578c:	mov	x0, xzr
  405790:	bl	401c00 <dcgettext@plt>
  405794:	ldr	x3, [x20]
  405798:	mov	x2, x0
  40579c:	mov	x0, x19
  4057a0:	ldp	x20, x19, [sp, #64]
  4057a4:	ldr	x21, [sp, #48]
  4057a8:	ldp	x29, x30, [sp, #32]
  4057ac:	mov	w1, #0x1                   	// #1
  4057b0:	add	sp, sp, #0x50
  4057b4:	b	401b30 <__fprintf_chk@plt>
  4057b8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4057bc:	add	x1, x1, #0x65b
  4057c0:	b	40591c <ferror@plt+0x3c7c>
  4057c4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4057c8:	add	x1, x1, #0x52c
  4057cc:	mov	w2, #0x5                   	// #5
  4057d0:	mov	x0, xzr
  4057d4:	bl	401c00 <dcgettext@plt>
  4057d8:	ldp	x3, x4, [x20]
  4057dc:	mov	x2, x0
  4057e0:	mov	x0, x19
  4057e4:	ldp	x20, x19, [sp, #64]
  4057e8:	ldr	x21, [sp, #48]
  4057ec:	ldp	x29, x30, [sp, #32]
  4057f0:	mov	w1, #0x1                   	// #1
  4057f4:	add	sp, sp, #0x50
  4057f8:	b	401b30 <__fprintf_chk@plt>
  4057fc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405800:	add	x1, x1, #0x543
  405804:	mov	w2, #0x5                   	// #5
  405808:	mov	x0, xzr
  40580c:	bl	401c00 <dcgettext@plt>
  405810:	ldp	x3, x4, [x20]
  405814:	ldr	x5, [x20, #16]
  405818:	mov	x2, x0
  40581c:	mov	x0, x19
  405820:	ldp	x20, x19, [sp, #64]
  405824:	ldr	x21, [sp, #48]
  405828:	ldp	x29, x30, [sp, #32]
  40582c:	mov	w1, #0x1                   	// #1
  405830:	add	sp, sp, #0x50
  405834:	b	401b30 <__fprintf_chk@plt>
  405838:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  40583c:	add	x1, x1, #0x55f
  405840:	mov	w2, #0x5                   	// #5
  405844:	mov	x0, xzr
  405848:	bl	401c00 <dcgettext@plt>
  40584c:	ldp	x3, x4, [x20]
  405850:	ldp	x5, x6, [x20, #16]
  405854:	mov	x2, x0
  405858:	mov	x0, x19
  40585c:	ldp	x20, x19, [sp, #64]
  405860:	ldr	x21, [sp, #48]
  405864:	ldp	x29, x30, [sp, #32]
  405868:	mov	w1, #0x1                   	// #1
  40586c:	add	sp, sp, #0x50
  405870:	b	401b30 <__fprintf_chk@plt>
  405874:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405878:	add	x1, x1, #0x57f
  40587c:	mov	w2, #0x5                   	// #5
  405880:	mov	x0, xzr
  405884:	bl	401c00 <dcgettext@plt>
  405888:	ldp	x3, x4, [x20]
  40588c:	ldp	x5, x6, [x20, #16]
  405890:	ldr	x7, [x20, #32]
  405894:	mov	x2, x0
  405898:	mov	x0, x19
  40589c:	ldp	x20, x19, [sp, #64]
  4058a0:	ldr	x21, [sp, #48]
  4058a4:	ldp	x29, x30, [sp, #32]
  4058a8:	mov	w1, #0x1                   	// #1
  4058ac:	add	sp, sp, #0x50
  4058b0:	b	401b30 <__fprintf_chk@plt>
  4058b4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4058b8:	add	x1, x1, #0x5a3
  4058bc:	mov	w2, #0x5                   	// #5
  4058c0:	mov	x0, xzr
  4058c4:	bl	401c00 <dcgettext@plt>
  4058c8:	ldp	x3, x4, [x20]
  4058cc:	ldp	x5, x6, [x20, #16]
  4058d0:	ldp	x7, x8, [x20, #32]
  4058d4:	mov	x2, x0
  4058d8:	b	405908 <ferror@plt+0x3c68>
  4058dc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4058e0:	add	x1, x1, #0x5cb
  4058e4:	mov	w2, #0x5                   	// #5
  4058e8:	mov	x0, xzr
  4058ec:	bl	401c00 <dcgettext@plt>
  4058f0:	ldr	x9, [x20, #48]
  4058f4:	ldp	x3, x4, [x20]
  4058f8:	ldp	x5, x6, [x20, #16]
  4058fc:	ldp	x7, x8, [x20, #32]
  405900:	mov	x2, x0
  405904:	str	x9, [sp, #8]
  405908:	mov	w1, #0x1                   	// #1
  40590c:	str	x8, [sp]
  405910:	b	405980 <ferror@plt+0x3ce0>
  405914:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405918:	add	x1, x1, #0x627
  40591c:	mov	w2, #0x5                   	// #5
  405920:	mov	x0, xzr
  405924:	bl	401c00 <dcgettext@plt>
  405928:	ldp	x8, x9, [x20, #56]
  40592c:	ldp	x3, x4, [x20]
  405930:	ldp	x5, x6, [x20, #16]
  405934:	ldr	x7, [x20, #32]
  405938:	ldur	q0, [x20, #40]
  40593c:	mov	x2, x0
  405940:	str	x9, [sp, #24]
  405944:	b	405974 <ferror@plt+0x3cd4>
  405948:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  40594c:	add	x1, x1, #0x5f7
  405950:	mov	w2, #0x5                   	// #5
  405954:	mov	x0, xzr
  405958:	bl	401c00 <dcgettext@plt>
  40595c:	ldp	x3, x4, [x20]
  405960:	ldp	x5, x6, [x20, #16]
  405964:	ldr	x7, [x20, #32]
  405968:	ldur	q0, [x20, #40]
  40596c:	ldr	x8, [x20, #56]
  405970:	mov	x2, x0
  405974:	str	x8, [sp, #16]
  405978:	mov	w1, #0x1                   	// #1
  40597c:	str	q0, [sp]
  405980:	mov	x0, x19
  405984:	bl	401b30 <__fprintf_chk@plt>
  405988:	ldp	x20, x19, [sp, #64]
  40598c:	ldr	x21, [sp, #48]
  405990:	ldp	x29, x30, [sp, #32]
  405994:	add	sp, sp, #0x50
  405998:	ret
  40599c:	mov	x8, xzr
  4059a0:	ldr	x9, [x4, x8, lsl #3]
  4059a4:	add	x8, x8, #0x1
  4059a8:	cbnz	x9, 4059a0 <ferror@plt+0x3d00>
  4059ac:	sub	x5, x8, #0x1
  4059b0:	b	4056b0 <ferror@plt+0x3a10>
  4059b4:	sub	sp, sp, #0x60
  4059b8:	stp	x29, x30, [sp, #80]
  4059bc:	ldr	w9, [x4, #24]
  4059c0:	add	x29, sp, #0x50
  4059c4:	mov	w8, w9
  4059c8:	tbz	w9, #31, 4059ec <ferror@plt+0x3d4c>
  4059cc:	add	w8, w9, #0x8
  4059d0:	cmn	w9, #0x8
  4059d4:	str	w8, [x4, #24]
  4059d8:	b.gt	4059ec <ferror@plt+0x3d4c>
  4059dc:	ldr	x10, [x4, #8]
  4059e0:	sxtw	x9, w9
  4059e4:	add	x9, x10, x9
  4059e8:	b	4059f8 <ferror@plt+0x3d58>
  4059ec:	ldr	x9, [x4]
  4059f0:	add	x10, x9, #0x8
  4059f4:	str	x10, [x4]
  4059f8:	ldr	x9, [x9]
  4059fc:	str	x9, [sp]
  405a00:	cbz	x9, 405a10 <ferror@plt+0x3d70>
  405a04:	tbnz	w8, #31, 405a18 <ferror@plt+0x3d78>
  405a08:	mov	w9, w8
  405a0c:	b	405a34 <ferror@plt+0x3d94>
  405a10:	mov	x5, xzr
  405a14:	b	405c8c <ferror@plt+0x3fec>
  405a18:	add	w9, w8, #0x8
  405a1c:	cmn	w8, #0x8
  405a20:	str	w9, [x4, #24]
  405a24:	b.gt	405a34 <ferror@plt+0x3d94>
  405a28:	ldr	x10, [x4, #8]
  405a2c:	add	x8, x10, w8, sxtw
  405a30:	b	405a40 <ferror@plt+0x3da0>
  405a34:	ldr	x8, [x4]
  405a38:	add	x10, x8, #0x8
  405a3c:	str	x10, [x4]
  405a40:	ldr	x8, [x8]
  405a44:	str	x8, [sp, #8]
  405a48:	cbz	x8, 405a58 <ferror@plt+0x3db8>
  405a4c:	tbnz	w9, #31, 405a60 <ferror@plt+0x3dc0>
  405a50:	mov	w8, w9
  405a54:	b	405a7c <ferror@plt+0x3ddc>
  405a58:	mov	w5, #0x1                   	// #1
  405a5c:	b	405c8c <ferror@plt+0x3fec>
  405a60:	add	w8, w9, #0x8
  405a64:	cmn	w9, #0x8
  405a68:	str	w8, [x4, #24]
  405a6c:	b.gt	405a7c <ferror@plt+0x3ddc>
  405a70:	ldr	x10, [x4, #8]
  405a74:	add	x9, x10, w9, sxtw
  405a78:	b	405a88 <ferror@plt+0x3de8>
  405a7c:	ldr	x9, [x4]
  405a80:	add	x10, x9, #0x8
  405a84:	str	x10, [x4]
  405a88:	ldr	x9, [x9]
  405a8c:	str	x9, [sp, #16]
  405a90:	cbz	x9, 405aa0 <ferror@plt+0x3e00>
  405a94:	tbnz	w8, #31, 405aa8 <ferror@plt+0x3e08>
  405a98:	mov	w9, w8
  405a9c:	b	405ac4 <ferror@plt+0x3e24>
  405aa0:	mov	w5, #0x2                   	// #2
  405aa4:	b	405c8c <ferror@plt+0x3fec>
  405aa8:	add	w9, w8, #0x8
  405aac:	cmn	w8, #0x8
  405ab0:	str	w9, [x4, #24]
  405ab4:	b.gt	405ac4 <ferror@plt+0x3e24>
  405ab8:	ldr	x10, [x4, #8]
  405abc:	add	x8, x10, w8, sxtw
  405ac0:	b	405ad0 <ferror@plt+0x3e30>
  405ac4:	ldr	x8, [x4]
  405ac8:	add	x10, x8, #0x8
  405acc:	str	x10, [x4]
  405ad0:	ldr	x8, [x8]
  405ad4:	str	x8, [sp, #24]
  405ad8:	cbz	x8, 405ae8 <ferror@plt+0x3e48>
  405adc:	tbnz	w9, #31, 405af0 <ferror@plt+0x3e50>
  405ae0:	mov	w8, w9
  405ae4:	b	405b0c <ferror@plt+0x3e6c>
  405ae8:	mov	w5, #0x3                   	// #3
  405aec:	b	405c8c <ferror@plt+0x3fec>
  405af0:	add	w8, w9, #0x8
  405af4:	cmn	w9, #0x8
  405af8:	str	w8, [x4, #24]
  405afc:	b.gt	405b0c <ferror@plt+0x3e6c>
  405b00:	ldr	x10, [x4, #8]
  405b04:	add	x9, x10, w9, sxtw
  405b08:	b	405b18 <ferror@plt+0x3e78>
  405b0c:	ldr	x9, [x4]
  405b10:	add	x10, x9, #0x8
  405b14:	str	x10, [x4]
  405b18:	ldr	x9, [x9]
  405b1c:	str	x9, [sp, #32]
  405b20:	cbz	x9, 405b30 <ferror@plt+0x3e90>
  405b24:	tbnz	w8, #31, 405b38 <ferror@plt+0x3e98>
  405b28:	mov	w9, w8
  405b2c:	b	405b54 <ferror@plt+0x3eb4>
  405b30:	mov	w5, #0x4                   	// #4
  405b34:	b	405c8c <ferror@plt+0x3fec>
  405b38:	add	w9, w8, #0x8
  405b3c:	cmn	w8, #0x8
  405b40:	str	w9, [x4, #24]
  405b44:	b.gt	405b54 <ferror@plt+0x3eb4>
  405b48:	ldr	x10, [x4, #8]
  405b4c:	add	x8, x10, w8, sxtw
  405b50:	b	405b60 <ferror@plt+0x3ec0>
  405b54:	ldr	x8, [x4]
  405b58:	add	x10, x8, #0x8
  405b5c:	str	x10, [x4]
  405b60:	ldr	x8, [x8]
  405b64:	str	x8, [sp, #40]
  405b68:	cbz	x8, 405b78 <ferror@plt+0x3ed8>
  405b6c:	tbnz	w9, #31, 405b80 <ferror@plt+0x3ee0>
  405b70:	mov	w8, w9
  405b74:	b	405b9c <ferror@plt+0x3efc>
  405b78:	mov	w5, #0x5                   	// #5
  405b7c:	b	405c8c <ferror@plt+0x3fec>
  405b80:	add	w8, w9, #0x8
  405b84:	cmn	w9, #0x8
  405b88:	str	w8, [x4, #24]
  405b8c:	b.gt	405b9c <ferror@plt+0x3efc>
  405b90:	ldr	x10, [x4, #8]
  405b94:	add	x9, x10, w9, sxtw
  405b98:	b	405ba8 <ferror@plt+0x3f08>
  405b9c:	ldr	x9, [x4]
  405ba0:	add	x10, x9, #0x8
  405ba4:	str	x10, [x4]
  405ba8:	ldr	x9, [x9]
  405bac:	str	x9, [sp, #48]
  405bb0:	cbz	x9, 405bc0 <ferror@plt+0x3f20>
  405bb4:	tbnz	w8, #31, 405bc8 <ferror@plt+0x3f28>
  405bb8:	mov	w9, w8
  405bbc:	b	405be4 <ferror@plt+0x3f44>
  405bc0:	mov	w5, #0x6                   	// #6
  405bc4:	b	405c8c <ferror@plt+0x3fec>
  405bc8:	add	w9, w8, #0x8
  405bcc:	cmn	w8, #0x8
  405bd0:	str	w9, [x4, #24]
  405bd4:	b.gt	405be4 <ferror@plt+0x3f44>
  405bd8:	ldr	x10, [x4, #8]
  405bdc:	add	x8, x10, w8, sxtw
  405be0:	b	405bf0 <ferror@plt+0x3f50>
  405be4:	ldr	x8, [x4]
  405be8:	add	x10, x8, #0x8
  405bec:	str	x10, [x4]
  405bf0:	ldr	x8, [x8]
  405bf4:	str	x8, [sp, #56]
  405bf8:	cbz	x8, 405c08 <ferror@plt+0x3f68>
  405bfc:	tbnz	w9, #31, 405c10 <ferror@plt+0x3f70>
  405c00:	mov	w8, w9
  405c04:	b	405c2c <ferror@plt+0x3f8c>
  405c08:	mov	w5, #0x7                   	// #7
  405c0c:	b	405c8c <ferror@plt+0x3fec>
  405c10:	add	w8, w9, #0x8
  405c14:	cmn	w9, #0x8
  405c18:	str	w8, [x4, #24]
  405c1c:	b.gt	405c2c <ferror@plt+0x3f8c>
  405c20:	ldr	x10, [x4, #8]
  405c24:	add	x9, x10, w9, sxtw
  405c28:	b	405c38 <ferror@plt+0x3f98>
  405c2c:	ldr	x9, [x4]
  405c30:	add	x10, x9, #0x8
  405c34:	str	x10, [x4]
  405c38:	ldr	x9, [x9]
  405c3c:	str	x9, [sp, #64]
  405c40:	cbz	x9, 405c88 <ferror@plt+0x3fe8>
  405c44:	tbz	w8, #31, 405c64 <ferror@plt+0x3fc4>
  405c48:	add	w9, w8, #0x8
  405c4c:	cmn	w8, #0x8
  405c50:	str	w9, [x4, #24]
  405c54:	b.gt	405c64 <ferror@plt+0x3fc4>
  405c58:	ldr	x9, [x4, #8]
  405c5c:	add	x8, x9, w8, sxtw
  405c60:	b	405c70 <ferror@plt+0x3fd0>
  405c64:	ldr	x8, [x4]
  405c68:	add	x9, x8, #0x8
  405c6c:	str	x9, [x4]
  405c70:	ldr	x8, [x8]
  405c74:	str	x8, [sp, #72]
  405c78:	cmp	x8, #0x0
  405c7c:	mov	w8, #0x9                   	// #9
  405c80:	cinc	x5, x8, ne  // ne = any
  405c84:	b	405c8c <ferror@plt+0x3fec>
  405c88:	mov	w5, #0x8                   	// #8
  405c8c:	mov	x4, sp
  405c90:	bl	4056b0 <ferror@plt+0x3a10>
  405c94:	ldp	x29, x30, [sp, #80]
  405c98:	add	sp, sp, #0x60
  405c9c:	ret
  405ca0:	sub	sp, sp, #0xf0
  405ca4:	stp	x29, x30, [sp, #224]
  405ca8:	add	x29, sp, #0xe0
  405cac:	mov	x8, #0xffffffffffffffe0    	// #-32
  405cb0:	mov	x9, sp
  405cb4:	sub	x10, x29, #0x60
  405cb8:	movk	x8, #0xff80, lsl #32
  405cbc:	add	x11, x29, #0x10
  405cc0:	add	x9, x9, #0x80
  405cc4:	add	x10, x10, #0x20
  405cc8:	stp	x9, x8, [x29, #-16]
  405ccc:	stp	x11, x10, [x29, #-32]
  405cd0:	stp	x4, x5, [x29, #-96]
  405cd4:	stp	x6, x7, [x29, #-80]
  405cd8:	stp	q0, q1, [sp]
  405cdc:	ldp	q0, q1, [x29, #-32]
  405ce0:	sub	x4, x29, #0x40
  405ce4:	stp	q2, q3, [sp, #32]
  405ce8:	stp	q4, q5, [sp, #64]
  405cec:	stp	q6, q7, [sp, #96]
  405cf0:	stp	q0, q1, [x29, #-64]
  405cf4:	bl	4059b4 <ferror@plt+0x3d14>
  405cf8:	ldp	x29, x30, [sp, #224]
  405cfc:	add	sp, sp, #0xf0
  405d00:	ret
  405d04:	stp	x29, x30, [sp, #-16]!
  405d08:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405d0c:	add	x1, x1, #0x697
  405d10:	mov	w2, #0x5                   	// #5
  405d14:	mov	x0, xzr
  405d18:	mov	x29, sp
  405d1c:	bl	401c00 <dcgettext@plt>
  405d20:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  405d24:	mov	x1, x0
  405d28:	add	x2, x2, #0x6ac
  405d2c:	mov	w0, #0x1                   	// #1
  405d30:	bl	401a20 <__printf_chk@plt>
  405d34:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405d38:	add	x1, x1, #0x6c2
  405d3c:	mov	w2, #0x5                   	// #5
  405d40:	mov	x0, xzr
  405d44:	bl	401c00 <dcgettext@plt>
  405d48:	adrp	x2, 406000 <ferror@plt+0x4360>
  405d4c:	adrp	x3, 407000 <_obstack_memory_used@@Base+0x944>
  405d50:	mov	x1, x0
  405d54:	add	x2, x2, #0xf23
  405d58:	add	x3, x3, #0x13e
  405d5c:	mov	w0, #0x1                   	// #1
  405d60:	bl	401a20 <__printf_chk@plt>
  405d64:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  405d68:	add	x1, x1, #0x6d6
  405d6c:	mov	w2, #0x5                   	// #5
  405d70:	mov	x0, xzr
  405d74:	bl	401c00 <dcgettext@plt>
  405d78:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  405d7c:	ldr	x1, [x8, #688]
  405d80:	ldp	x29, x30, [sp], #16
  405d84:	b	401c10 <fputs_unlocked@plt>
  405d88:	stp	x29, x30, [sp, #-32]!
  405d8c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405d90:	udiv	x8, x8, x1
  405d94:	cmp	x8, x0
  405d98:	str	x19, [sp, #16]
  405d9c:	mov	x29, sp
  405da0:	b.cc	405dc4 <ferror@plt+0x4124>  // b.lo, b.ul, b.last
  405da4:	mul	x19, x1, x0
  405da8:	mov	x0, x19
  405dac:	bl	4019a0 <malloc@plt>
  405db0:	cbz	x19, 405db8 <ferror@plt+0x4118>
  405db4:	cbz	x0, 405dc4 <ferror@plt+0x4124>
  405db8:	ldr	x19, [sp, #16]
  405dbc:	ldp	x29, x30, [sp], #32
  405dc0:	ret
  405dc4:	bl	4060dc <ferror@plt+0x443c>
  405dc8:	stp	x29, x30, [sp, #-32]!
  405dcc:	str	x19, [sp, #16]
  405dd0:	mov	x29, sp
  405dd4:	mov	x19, x0
  405dd8:	bl	4019a0 <malloc@plt>
  405ddc:	cbz	x19, 405de4 <ferror@plt+0x4144>
  405de0:	cbz	x0, 405df0 <ferror@plt+0x4150>
  405de4:	ldr	x19, [sp, #16]
  405de8:	ldp	x29, x30, [sp], #32
  405dec:	ret
  405df0:	bl	4060dc <ferror@plt+0x443c>
  405df4:	stp	x29, x30, [sp, #-32]!
  405df8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405dfc:	udiv	x8, x8, x2
  405e00:	cmp	x8, x1
  405e04:	str	x19, [sp, #16]
  405e08:	mov	x29, sp
  405e0c:	b.cc	405e44 <ferror@plt+0x41a4>  // b.lo, b.ul, b.last
  405e10:	mul	x19, x2, x1
  405e14:	cbz	x0, 405e28 <ferror@plt+0x4188>
  405e18:	cbnz	x19, 405e28 <ferror@plt+0x4188>
  405e1c:	bl	401b70 <free@plt>
  405e20:	mov	x0, xzr
  405e24:	b	405e38 <ferror@plt+0x4198>
  405e28:	mov	x1, x19
  405e2c:	bl	401a60 <realloc@plt>
  405e30:	cbz	x19, 405e38 <ferror@plt+0x4198>
  405e34:	cbz	x0, 405e44 <ferror@plt+0x41a4>
  405e38:	ldr	x19, [sp, #16]
  405e3c:	ldp	x29, x30, [sp], #32
  405e40:	ret
  405e44:	bl	4060dc <ferror@plt+0x443c>
  405e48:	stp	x29, x30, [sp, #-32]!
  405e4c:	str	x19, [sp, #16]
  405e50:	mov	x19, x1
  405e54:	mov	x29, sp
  405e58:	cbz	x0, 405e6c <ferror@plt+0x41cc>
  405e5c:	cbnz	x19, 405e6c <ferror@plt+0x41cc>
  405e60:	bl	401b70 <free@plt>
  405e64:	mov	x0, xzr
  405e68:	b	405e7c <ferror@plt+0x41dc>
  405e6c:	mov	x1, x19
  405e70:	bl	401a60 <realloc@plt>
  405e74:	cbz	x19, 405e7c <ferror@plt+0x41dc>
  405e78:	cbz	x0, 405e88 <ferror@plt+0x41e8>
  405e7c:	ldr	x19, [sp, #16]
  405e80:	ldp	x29, x30, [sp], #32
  405e84:	ret
  405e88:	bl	4060dc <ferror@plt+0x443c>
  405e8c:	stp	x29, x30, [sp, #-32]!
  405e90:	ldr	x8, [x1]
  405e94:	str	x19, [sp, #16]
  405e98:	mov	x29, sp
  405e9c:	cbz	x0, 405ed4 <ferror@plt+0x4234>
  405ea0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  405ea4:	movk	x9, #0x5554
  405ea8:	udiv	x9, x9, x2
  405eac:	cmp	x9, x8
  405eb0:	b.ls	405f1c <ferror@plt+0x427c>  // b.plast
  405eb4:	add	x8, x8, x8, lsr #1
  405eb8:	add	x8, x8, #0x1
  405ebc:	mul	x19, x8, x2
  405ec0:	str	x8, [x1]
  405ec4:	cbnz	x19, 405f00 <ferror@plt+0x4260>
  405ec8:	bl	401b70 <free@plt>
  405ecc:	mov	x0, xzr
  405ed0:	b	405f10 <ferror@plt+0x4270>
  405ed4:	cbnz	x8, 405ee8 <ferror@plt+0x4248>
  405ed8:	mov	w8, #0x80                  	// #128
  405edc:	udiv	x8, x8, x2
  405ee0:	cmp	x2, #0x80
  405ee4:	cinc	x8, x8, hi  // hi = pmore
  405ee8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  405eec:	udiv	x9, x9, x2
  405ef0:	cmp	x9, x8
  405ef4:	b.cc	405f1c <ferror@plt+0x427c>  // b.lo, b.ul, b.last
  405ef8:	mul	x19, x8, x2
  405efc:	str	x8, [x1]
  405f00:	mov	x1, x19
  405f04:	bl	401a60 <realloc@plt>
  405f08:	cbz	x19, 405f10 <ferror@plt+0x4270>
  405f0c:	cbz	x0, 405f1c <ferror@plt+0x427c>
  405f10:	ldr	x19, [sp, #16]
  405f14:	ldp	x29, x30, [sp], #32
  405f18:	ret
  405f1c:	bl	4060dc <ferror@plt+0x443c>
  405f20:	stp	x29, x30, [sp, #-32]!
  405f24:	str	x19, [sp, #16]
  405f28:	mov	x29, sp
  405f2c:	mov	x19, x0
  405f30:	bl	4019a0 <malloc@plt>
  405f34:	cbz	x19, 405f3c <ferror@plt+0x429c>
  405f38:	cbz	x0, 405f48 <ferror@plt+0x42a8>
  405f3c:	ldr	x19, [sp, #16]
  405f40:	ldp	x29, x30, [sp], #32
  405f44:	ret
  405f48:	bl	4060dc <ferror@plt+0x443c>
  405f4c:	stp	x29, x30, [sp, #-32]!
  405f50:	str	x19, [sp, #16]
  405f54:	ldr	x19, [x1]
  405f58:	mov	x29, sp
  405f5c:	cbz	x0, 405f8c <ferror@plt+0x42ec>
  405f60:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  405f64:	movk	x8, #0x5554
  405f68:	cmp	x19, x8
  405f6c:	b.cs	405fbc <ferror@plt+0x431c>  // b.hs, b.nlast
  405f70:	add	x8, x19, x19, lsr #1
  405f74:	adds	x19, x8, #0x1
  405f78:	str	x19, [x1]
  405f7c:	b.ne	405fa0 <ferror@plt+0x4300>  // b.any
  405f80:	bl	401b70 <free@plt>
  405f84:	mov	x0, xzr
  405f88:	b	405fb0 <ferror@plt+0x4310>
  405f8c:	cbz	x19, 405f98 <ferror@plt+0x42f8>
  405f90:	tbz	x19, #63, 405f9c <ferror@plt+0x42fc>
  405f94:	b	405fbc <ferror@plt+0x431c>
  405f98:	mov	w19, #0x80                  	// #128
  405f9c:	str	x19, [x1]
  405fa0:	mov	x1, x19
  405fa4:	bl	401a60 <realloc@plt>
  405fa8:	cbz	x19, 405fb0 <ferror@plt+0x4310>
  405fac:	cbz	x0, 405fbc <ferror@plt+0x431c>
  405fb0:	ldr	x19, [sp, #16]
  405fb4:	ldp	x29, x30, [sp], #32
  405fb8:	ret
  405fbc:	bl	4060dc <ferror@plt+0x443c>
  405fc0:	stp	x29, x30, [sp, #-32]!
  405fc4:	stp	x20, x19, [sp, #16]
  405fc8:	mov	x29, sp
  405fcc:	mov	x19, x0
  405fd0:	bl	4019a0 <malloc@plt>
  405fd4:	mov	x20, x0
  405fd8:	cbz	x19, 405fe0 <ferror@plt+0x4340>
  405fdc:	cbz	x20, 406000 <ferror@plt+0x4360>
  405fe0:	mov	x0, x20
  405fe4:	mov	w1, wzr
  405fe8:	mov	x2, x19
  405fec:	bl	401a30 <memset@plt>
  405ff0:	mov	x0, x20
  405ff4:	ldp	x20, x19, [sp, #16]
  405ff8:	ldp	x29, x30, [sp], #32
  405ffc:	ret
  406000:	bl	4060dc <ferror@plt+0x443c>
  406004:	stp	x29, x30, [sp, #-16]!
  406008:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40600c:	udiv	x8, x8, x1
  406010:	cmp	x8, x0
  406014:	mov	x29, sp
  406018:	b.cc	40602c <ferror@plt+0x438c>  // b.lo, b.ul, b.last
  40601c:	bl	406120 <ferror@plt+0x4480>
  406020:	cbz	x0, 40602c <ferror@plt+0x438c>
  406024:	ldp	x29, x30, [sp], #16
  406028:	ret
  40602c:	bl	4060dc <ferror@plt+0x443c>
  406030:	stp	x29, x30, [sp, #-48]!
  406034:	stp	x20, x19, [sp, #32]
  406038:	mov	x20, x0
  40603c:	mov	x0, x1
  406040:	str	x21, [sp, #16]
  406044:	mov	x29, sp
  406048:	mov	x19, x1
  40604c:	bl	4019a0 <malloc@plt>
  406050:	mov	x21, x0
  406054:	cbz	x19, 40605c <ferror@plt+0x43bc>
  406058:	cbz	x21, 406080 <ferror@plt+0x43e0>
  40605c:	mov	x0, x21
  406060:	mov	x1, x20
  406064:	mov	x2, x19
  406068:	bl	4018a0 <memcpy@plt>
  40606c:	mov	x0, x21
  406070:	ldp	x20, x19, [sp, #32]
  406074:	ldr	x21, [sp, #16]
  406078:	ldp	x29, x30, [sp], #48
  40607c:	ret
  406080:	bl	4060dc <ferror@plt+0x443c>
  406084:	stp	x29, x30, [sp, #-48]!
  406088:	str	x21, [sp, #16]
  40608c:	stp	x20, x19, [sp, #32]
  406090:	mov	x29, sp
  406094:	mov	x19, x0
  406098:	bl	4018c0 <strlen@plt>
  40609c:	add	x20, x0, #0x1
  4060a0:	mov	x0, x20
  4060a4:	bl	4019a0 <malloc@plt>
  4060a8:	mov	x21, x0
  4060ac:	cbz	x20, 4060b4 <ferror@plt+0x4414>
  4060b0:	cbz	x21, 4060d8 <ferror@plt+0x4438>
  4060b4:	mov	x0, x21
  4060b8:	mov	x1, x19
  4060bc:	mov	x2, x20
  4060c0:	bl	4018a0 <memcpy@plt>
  4060c4:	mov	x0, x21
  4060c8:	ldp	x20, x19, [sp, #32]
  4060cc:	ldr	x21, [sp, #16]
  4060d0:	ldp	x29, x30, [sp], #48
  4060d4:	ret
  4060d8:	bl	4060dc <ferror@plt+0x443c>
  4060dc:	stp	x29, x30, [sp, #-32]!
  4060e0:	str	x19, [sp, #16]
  4060e4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4060e8:	ldr	w19, [x8, #552]
  4060ec:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4060f0:	add	x1, x1, #0x746
  4060f4:	mov	w2, #0x5                   	// #5
  4060f8:	mov	x0, xzr
  4060fc:	mov	x29, sp
  406100:	bl	401c00 <dcgettext@plt>
  406104:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  406108:	mov	x3, x0
  40610c:	add	x2, x2, #0x258
  406110:	mov	w0, w19
  406114:	mov	w1, wzr
  406118:	bl	4018e0 <error@plt>
  40611c:	bl	401ac0 <abort@plt>
  406120:	mov	x8, x1
  406124:	mov	w1, #0x1                   	// #1
  406128:	mov	w9, #0x1                   	// #1
  40612c:	cbz	x0, 406164 <ferror@plt+0x44c4>
  406130:	cbz	x8, 406164 <ferror@plt+0x44c4>
  406134:	umulh	x10, x8, x0
  406138:	mov	x1, x8
  40613c:	mov	x9, x0
  406140:	cbz	x10, 406164 <ferror@plt+0x44c4>
  406144:	stp	x29, x30, [sp, #-16]!
  406148:	mov	x29, sp
  40614c:	bl	401c50 <__errno_location@plt>
  406150:	mov	w8, #0xc                   	// #12
  406154:	str	w8, [x0]
  406158:	mov	x0, xzr
  40615c:	ldp	x29, x30, [sp], #16
  406160:	ret
  406164:	mov	x0, x9
  406168:	b	401a40 <calloc@plt>
  40616c:	stp	x29, x30, [sp, #-48]!
  406170:	str	x21, [sp, #16]
  406174:	stp	x20, x19, [sp, #32]
  406178:	mov	x29, sp
  40617c:	mov	x19, x0
  406180:	bl	401950 <fileno@plt>
  406184:	tbnz	w0, #31, 4061ec <ferror@plt+0x454c>
  406188:	mov	x0, x19
  40618c:	bl	401c20 <__freading@plt>
  406190:	cbz	w0, 4061b0 <ferror@plt+0x4510>
  406194:	mov	x0, x19
  406198:	bl	401950 <fileno@plt>
  40619c:	mov	w2, #0x1                   	// #1
  4061a0:	mov	x1, xzr
  4061a4:	bl	401930 <lseek@plt>
  4061a8:	cmn	x0, #0x1
  4061ac:	b.eq	4061ec <ferror@plt+0x454c>  // b.none
  4061b0:	mov	x0, x19
  4061b4:	bl	406200 <ferror@plt+0x4560>
  4061b8:	cbz	w0, 4061ec <ferror@plt+0x454c>
  4061bc:	bl	401c50 <__errno_location@plt>
  4061c0:	ldr	w21, [x0]
  4061c4:	mov	x20, x0
  4061c8:	mov	x0, x19
  4061cc:	bl	401960 <fclose@plt>
  4061d0:	cbz	w21, 4061dc <ferror@plt+0x453c>
  4061d4:	mov	w0, #0xffffffff            	// #-1
  4061d8:	str	w21, [x20]
  4061dc:	ldp	x20, x19, [sp, #32]
  4061e0:	ldr	x21, [sp, #16]
  4061e4:	ldp	x29, x30, [sp], #48
  4061e8:	ret
  4061ec:	mov	x0, x19
  4061f0:	ldp	x20, x19, [sp, #32]
  4061f4:	ldr	x21, [sp, #16]
  4061f8:	ldp	x29, x30, [sp], #48
  4061fc:	b	401960 <fclose@plt>
  406200:	stp	x29, x30, [sp, #-32]!
  406204:	str	x19, [sp, #16]
  406208:	mov	x19, x0
  40620c:	mov	x29, sp
  406210:	cbz	x0, 406238 <ferror@plt+0x4598>
  406214:	mov	x0, x19
  406218:	bl	401c20 <__freading@plt>
  40621c:	cbz	w0, 406238 <ferror@plt+0x4598>
  406220:	ldrb	w8, [x19, #1]
  406224:	tbz	w8, #0, 406238 <ferror@plt+0x4598>
  406228:	mov	w2, #0x1                   	// #1
  40622c:	mov	x0, x19
  406230:	mov	x1, xzr
  406234:	bl	406248 <ferror@plt+0x45a8>
  406238:	mov	x0, x19
  40623c:	ldr	x19, [sp, #16]
  406240:	ldp	x29, x30, [sp], #32
  406244:	b	401bb0 <fflush@plt>
  406248:	stp	x29, x30, [sp, #-48]!
  40624c:	str	x21, [sp, #16]
  406250:	stp	x20, x19, [sp, #32]
  406254:	ldp	x9, x8, [x0, #8]
  406258:	mov	w20, w2
  40625c:	mov	x19, x0
  406260:	mov	x21, x1
  406264:	cmp	x8, x9
  406268:	mov	x29, sp
  40626c:	b.ne	406284 <ferror@plt+0x45e4>  // b.any
  406270:	ldp	x9, x8, [x19, #32]
  406274:	cmp	x8, x9
  406278:	b.ne	406284 <ferror@plt+0x45e4>  // b.any
  40627c:	ldr	x8, [x19, #72]
  406280:	cbz	x8, 4062a0 <ferror@plt+0x4600>
  406284:	mov	x0, x19
  406288:	mov	x1, x21
  40628c:	mov	w2, w20
  406290:	ldp	x20, x19, [sp, #32]
  406294:	ldr	x21, [sp, #16]
  406298:	ldp	x29, x30, [sp], #48
  40629c:	b	401b60 <fseeko@plt>
  4062a0:	mov	x0, x19
  4062a4:	bl	401950 <fileno@plt>
  4062a8:	mov	x1, x21
  4062ac:	mov	w2, w20
  4062b0:	bl	401930 <lseek@plt>
  4062b4:	cmn	x0, #0x1
  4062b8:	b.eq	4062d4 <ferror@plt+0x4634>  // b.none
  4062bc:	ldr	w9, [x19]
  4062c0:	mov	x8, x0
  4062c4:	mov	w0, wzr
  4062c8:	str	x8, [x19, #144]
  4062cc:	and	w9, w9, #0xffffffef
  4062d0:	str	w9, [x19]
  4062d4:	ldp	x20, x19, [sp, #32]
  4062d8:	ldr	x21, [sp, #16]
  4062dc:	ldp	x29, x30, [sp], #48
  4062e0:	ret
  4062e4:	sub	sp, sp, #0x40
  4062e8:	stp	x29, x30, [sp, #16]
  4062ec:	add	x29, sp, #0x10
  4062f0:	cmp	x0, #0x0
  4062f4:	sub	x8, x29, #0x4
  4062f8:	stp	x20, x19, [sp, #48]
  4062fc:	csel	x20, x8, x0, eq  // eq = none
  406300:	mov	x0, x20
  406304:	stp	x22, x21, [sp, #32]
  406308:	mov	x22, x2
  40630c:	mov	x19, x1
  406310:	bl	401890 <mbrtowc@plt>
  406314:	mov	x21, x0
  406318:	cbz	x22, 40633c <ferror@plt+0x469c>
  40631c:	cmn	x21, #0x2
  406320:	b.cc	40633c <ferror@plt+0x469c>  // b.lo, b.ul, b.last
  406324:	mov	w0, wzr
  406328:	bl	4067a4 <_obstack_memory_used@@Base+0xe8>
  40632c:	tbnz	w0, #0, 40633c <ferror@plt+0x469c>
  406330:	ldrb	w8, [x19]
  406334:	mov	w21, #0x1                   	// #1
  406338:	str	w8, [x20]
  40633c:	mov	x0, x21
  406340:	ldp	x20, x19, [sp, #48]
  406344:	ldp	x22, x21, [sp, #32]
  406348:	ldp	x29, x30, [sp, #16]
  40634c:	add	sp, sp, #0x40
  406350:	ret

0000000000406354 <_obstack_begin@@Base>:
  406354:	stp	x29, x30, [sp, #-48]!
  406358:	stp	x20, x19, [sp, #32]
  40635c:	ldrb	w8, [x0, #80]
  406360:	cmp	x2, #0x0
  406364:	mov	w9, #0x10                  	// #16
  406368:	csel	x20, x9, x2, eq  // eq = none
  40636c:	mov	w9, #0xfe0                 	// #4064
  406370:	cmp	x1, #0x0
  406374:	str	x21, [sp, #16]
  406378:	mov	x19, x0
  40637c:	str	x4, [x0, #64]
  406380:	csel	x0, x9, x1, eq  // eq = none
  406384:	and	w8, w8, #0xfe
  406388:	sub	x21, x20, #0x1
  40638c:	mov	x29, sp
  406390:	strb	w8, [x19, #80]
  406394:	str	x0, [x19]
  406398:	stp	x21, x3, [x19, #48]
  40639c:	blr	x3
  4063a0:	str	x0, [x19, #8]
  4063a4:	cbz	x0, 4063f0 <_obstack_begin@@Base+0x9c>
  4063a8:	ldr	x10, [x19]
  4063ac:	add	x8, x0, x21
  4063b0:	neg	x9, x20
  4063b4:	add	x8, x8, #0x10
  4063b8:	and	x8, x8, x9
  4063bc:	stp	x8, x8, [x19, #16]
  4063c0:	add	x8, x0, x10
  4063c4:	str	x8, [x0]
  4063c8:	str	x8, [x19, #32]
  4063cc:	str	xzr, [x0, #8]
  4063d0:	ldrb	w8, [x19, #80]
  4063d4:	ldr	x21, [sp, #16]
  4063d8:	mov	w0, #0x1                   	// #1
  4063dc:	and	w8, w8, #0xfffffff9
  4063e0:	strb	w8, [x19, #80]
  4063e4:	ldp	x20, x19, [sp, #32]
  4063e8:	ldp	x29, x30, [sp], #48
  4063ec:	ret
  4063f0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4063f4:	ldr	x8, [x8, #648]
  4063f8:	blr	x8

00000000004063fc <_obstack_begin_1@@Base>:
  4063fc:	stp	x29, x30, [sp, #-48]!
  406400:	stp	x20, x19, [sp, #32]
  406404:	ldrb	w8, [x0, #80]
  406408:	cmp	x2, #0x0
  40640c:	mov	w9, #0x10                  	// #16
  406410:	csel	x20, x9, x2, eq  // eq = none
  406414:	mov	w9, #0xfe0                 	// #4064
  406418:	cmp	x1, #0x0
  40641c:	str	x21, [sp, #16]
  406420:	csel	x1, x9, x1, eq  // eq = none
  406424:	orr	w8, w8, #0x1
  406428:	sub	x21, x20, #0x1
  40642c:	mov	x19, x0
  406430:	stp	x4, x5, [x0, #64]
  406434:	strb	w8, [x0, #80]
  406438:	str	x1, [x0]
  40643c:	stp	x21, x3, [x0, #48]
  406440:	mov	x0, x5
  406444:	mov	x29, sp
  406448:	blr	x3
  40644c:	str	x0, [x19, #8]
  406450:	cbz	x0, 40649c <_obstack_begin_1@@Base+0xa0>
  406454:	ldr	x10, [x19]
  406458:	add	x8, x0, x21
  40645c:	neg	x9, x20
  406460:	add	x8, x8, #0x10
  406464:	and	x8, x8, x9
  406468:	stp	x8, x8, [x19, #16]
  40646c:	add	x8, x0, x10
  406470:	str	x8, [x0]
  406474:	str	x8, [x19, #32]
  406478:	str	xzr, [x0, #8]
  40647c:	ldrb	w8, [x19, #80]
  406480:	ldr	x21, [sp, #16]
  406484:	mov	w0, #0x1                   	// #1
  406488:	and	w8, w8, #0xfffffff9
  40648c:	strb	w8, [x19, #80]
  406490:	ldp	x20, x19, [sp, #32]
  406494:	ldp	x29, x30, [sp], #48
  406498:	ret
  40649c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4064a0:	ldr	x8, [x8, #648]
  4064a4:	blr	x8

00000000004064a8 <_obstack_newchunk@@Base>:
  4064a8:	stp	x29, x30, [sp, #-64]!
  4064ac:	str	x23, [sp, #16]
  4064b0:	stp	x22, x21, [sp, #32]
  4064b4:	stp	x20, x19, [sp, #48]
  4064b8:	ldp	x9, x8, [x0, #16]
  4064bc:	ldr	x10, [x0, #48]
  4064c0:	ldr	x11, [x0]
  4064c4:	mov	x29, sp
  4064c8:	sub	x20, x8, x9
  4064cc:	adds	x8, x20, x1
  4064d0:	lsr	x9, x20, #3
  4064d4:	cset	w12, cs  // cs = hs, nlast
  4064d8:	adds	x10, x8, x10
  4064dc:	add	x9, x9, #0x64
  4064e0:	cset	w8, cs  // cs = hs, nlast
  4064e4:	adds	x9, x9, x10
  4064e8:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4064ec:	cmp	x9, x11
  4064f0:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4064f4:	tbnz	w12, #0, 4065e0 <_obstack_newchunk@@Base+0x138>
  4064f8:	tbnz	w8, #0, 4065e0 <_obstack_newchunk@@Base+0x138>
  4064fc:	ldrb	w8, [x0, #80]
  406500:	ldr	x21, [x0, #8]
  406504:	mov	x19, x0
  406508:	tbnz	w8, #0, 40651c <_obstack_newchunk@@Base+0x74>
  40650c:	ldr	x8, [x19, #56]
  406510:	mov	x0, x23
  406514:	blr	x8
  406518:	b	40652c <_obstack_newchunk@@Base+0x84>
  40651c:	ldr	x8, [x19, #56]
  406520:	ldr	x0, [x19, #72]
  406524:	mov	x1, x23
  406528:	blr	x8
  40652c:	mov	x22, x0
  406530:	cbz	x0, 4065e0 <_obstack_newchunk@@Base+0x138>
  406534:	add	x8, x22, x23
  406538:	str	x22, [x19, #8]
  40653c:	str	x21, [x22, #8]
  406540:	str	x8, [x19, #32]
  406544:	str	x8, [x22]
  406548:	ldr	x8, [x19, #48]
  40654c:	ldr	x1, [x19, #16]
  406550:	mov	x2, x20
  406554:	add	x9, x22, x8
  406558:	add	x9, x9, #0x10
  40655c:	bic	x23, x9, x8
  406560:	mov	x0, x23
  406564:	bl	4018a0 <memcpy@plt>
  406568:	ldrb	w8, [x19, #80]
  40656c:	tbnz	w8, #1, 4065b8 <_obstack_newchunk@@Base+0x110>
  406570:	ldr	x8, [x19, #48]
  406574:	ldr	x9, [x19, #16]
  406578:	add	x10, x21, x8
  40657c:	add	x10, x10, #0x10
  406580:	bic	x8, x10, x8
  406584:	cmp	x9, x8
  406588:	b.ne	4065b8 <_obstack_newchunk@@Base+0x110>  // b.any
  40658c:	ldr	x8, [x21, #8]
  406590:	str	x8, [x22, #8]
  406594:	ldrb	w8, [x19, #80]
  406598:	tbnz	w8, #0, 4065ac <_obstack_newchunk@@Base+0x104>
  40659c:	ldr	x8, [x19, #64]
  4065a0:	mov	x0, x21
  4065a4:	blr	x8
  4065a8:	b	4065b8 <_obstack_newchunk@@Base+0x110>
  4065ac:	ldp	x8, x0, [x19, #64]
  4065b0:	mov	x1, x21
  4065b4:	blr	x8
  4065b8:	ldrb	w8, [x19, #80]
  4065bc:	add	x9, x23, x20
  4065c0:	stp	x23, x9, [x19, #16]
  4065c4:	ldr	x23, [sp, #16]
  4065c8:	and	w8, w8, #0xfffffffd
  4065cc:	strb	w8, [x19, #80]
  4065d0:	ldp	x20, x19, [sp, #48]
  4065d4:	ldp	x22, x21, [sp, #32]
  4065d8:	ldp	x29, x30, [sp], #64
  4065dc:	ret
  4065e0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4065e4:	ldr	x8, [x8, #648]
  4065e8:	blr	x8

00000000004065ec <_obstack_allocated_p@@Base>:
  4065ec:	ldr	x8, [x0, #8]
  4065f0:	cbnz	x8, 406604 <_obstack_allocated_p@@Base+0x18>
  4065f4:	mov	w0, wzr
  4065f8:	ret
  4065fc:	ldr	x8, [x8, #8]
  406600:	cbz	x8, 4065f4 <_obstack_allocated_p@@Base+0x8>
  406604:	cmp	x8, x1
  406608:	b.cs	4065fc <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  40660c:	ldr	x9, [x8]
  406610:	cmp	x9, x1
  406614:	b.cc	4065fc <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  406618:	mov	w0, #0x1                   	// #1
  40661c:	ret

0000000000406620 <_obstack_free@@Base>:
  406620:	stp	x29, x30, [sp, #-48]!
  406624:	stp	x20, x19, [sp, #32]
  406628:	ldr	x8, [x0, #8]
  40662c:	mov	x20, x1
  406630:	str	x21, [sp, #16]
  406634:	mov	x29, sp
  406638:	cbz	x8, 406694 <_obstack_free@@Base+0x74>
  40663c:	mov	x19, x0
  406640:	b	406664 <_obstack_free@@Base+0x44>
  406644:	ldr	x9, [x19, #64]
  406648:	mov	x0, x8
  40664c:	blr	x9
  406650:	ldrb	w8, [x19, #80]
  406654:	orr	w8, w8, #0x2
  406658:	strb	w8, [x19, #80]
  40665c:	mov	x8, x21
  406660:	cbz	x21, 406694 <_obstack_free@@Base+0x74>
  406664:	cmp	x8, x20
  406668:	b.cs	406678 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  40666c:	ldr	x9, [x8]
  406670:	cmp	x9, x20
  406674:	b.cs	40669c <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  406678:	ldrb	w9, [x19, #80]
  40667c:	ldr	x21, [x8, #8]
  406680:	tbz	w9, #0, 406644 <_obstack_free@@Base+0x24>
  406684:	ldp	x9, x0, [x19, #64]
  406688:	mov	x1, x8
  40668c:	blr	x9
  406690:	b	406650 <_obstack_free@@Base+0x30>
  406694:	cbz	x20, 4066ac <_obstack_free@@Base+0x8c>
  406698:	bl	401ac0 <abort@plt>
  40669c:	stp	x20, x20, [x19, #16]
  4066a0:	ldr	x9, [x8]
  4066a4:	str	x8, [x19, #8]
  4066a8:	str	x9, [x19, #32]
  4066ac:	ldp	x20, x19, [sp, #32]
  4066b0:	ldr	x21, [sp, #16]
  4066b4:	ldp	x29, x30, [sp], #48
  4066b8:	ret

00000000004066bc <_obstack_memory_used@@Base>:
  4066bc:	ldr	x8, [x0, #8]
  4066c0:	cbz	x8, 4066dc <_obstack_memory_used@@Base+0x20>
  4066c4:	mov	x0, xzr
  4066c8:	sub	x10, x0, x8
  4066cc:	ldp	x9, x8, [x8]
  4066d0:	add	x0, x10, x9
  4066d4:	cbnz	x8, 4066c8 <_obstack_memory_used@@Base+0xc>
  4066d8:	ret
  4066dc:	mov	x0, xzr
  4066e0:	ret
  4066e4:	stp	x29, x30, [sp, #-32]!
  4066e8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  4066ec:	str	x19, [sp, #16]
  4066f0:	ldr	x19, [x8, #664]
  4066f4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4066f8:	add	x1, x1, #0x746
  4066fc:	mov	w2, #0x5                   	// #5
  406700:	mov	x0, xzr
  406704:	mov	x29, sp
  406708:	bl	401c00 <dcgettext@plt>
  40670c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x944>
  406710:	mov	x3, x0
  406714:	add	x2, x2, #0x441
  406718:	mov	w1, #0x1                   	// #1
  40671c:	mov	x0, x19
  406720:	bl	401b30 <__fprintf_chk@plt>
  406724:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11944>
  406728:	ldr	w0, [x8, #552]
  40672c:	bl	4018d0 <exit@plt>
  406730:	stp	x29, x30, [sp, #-48]!
  406734:	str	x21, [sp, #16]
  406738:	stp	x20, x19, [sp, #32]
  40673c:	mov	x29, sp
  406740:	mov	x20, x0
  406744:	bl	401940 <__fpending@plt>
  406748:	ldr	w21, [x20]
  40674c:	mov	x19, x0
  406750:	mov	x0, x20
  406754:	bl	40616c <ferror@plt+0x44cc>
  406758:	mov	w8, w0
  40675c:	tbnz	w21, #5, 406784 <_obstack_memory_used@@Base+0xc8>
  406760:	cmp	w8, #0x0
  406764:	csetm	w0, ne  // ne = any
  406768:	cbnz	x19, 406794 <_obstack_memory_used@@Base+0xd8>
  40676c:	cbz	w8, 406794 <_obstack_memory_used@@Base+0xd8>
  406770:	bl	401c50 <__errno_location@plt>
  406774:	ldr	w8, [x0]
  406778:	cmp	w8, #0x9
  40677c:	csetm	w0, ne  // ne = any
  406780:	b	406794 <_obstack_memory_used@@Base+0xd8>
  406784:	cbnz	w8, 406790 <_obstack_memory_used@@Base+0xd4>
  406788:	bl	401c50 <__errno_location@plt>
  40678c:	str	wzr, [x0]
  406790:	mov	w0, #0xffffffff            	// #-1
  406794:	ldp	x20, x19, [sp, #32]
  406798:	ldr	x21, [sp, #16]
  40679c:	ldp	x29, x30, [sp], #48
  4067a0:	ret
  4067a4:	stp	x29, x30, [sp, #-32]!
  4067a8:	mov	x1, xzr
  4067ac:	str	x19, [sp, #16]
  4067b0:	mov	x29, sp
  4067b4:	bl	401c90 <setlocale@plt>
  4067b8:	cbz	x0, 4067e4 <_obstack_memory_used@@Base+0x128>
  4067bc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4067c0:	add	x1, x1, #0x757
  4067c4:	mov	x19, x0
  4067c8:	bl	401b40 <strcmp@plt>
  4067cc:	cbz	w0, 4067ec <_obstack_memory_used@@Base+0x130>
  4067d0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x944>
  4067d4:	add	x1, x1, #0x759
  4067d8:	mov	x0, x19
  4067dc:	bl	401b40 <strcmp@plt>
  4067e0:	cbz	w0, 4067ec <_obstack_memory_used@@Base+0x130>
  4067e4:	mov	w0, #0x1                   	// #1
  4067e8:	b	4067f0 <_obstack_memory_used@@Base+0x134>
  4067ec:	mov	w0, wzr
  4067f0:	ldr	x19, [sp, #16]
  4067f4:	ldp	x29, x30, [sp], #32
  4067f8:	ret
  4067fc:	stp	x29, x30, [sp, #-16]!
  406800:	mov	w0, #0xe                   	// #14
  406804:	mov	x29, sp
  406808:	bl	401980 <nl_langinfo@plt>
  40680c:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x944>
  406810:	add	x8, x8, #0x51b
  406814:	cmp	x0, #0x0
  406818:	csel	x8, x8, x0, eq  // eq = none
  40681c:	ldrb	w9, [x8]
  406820:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x944>
  406824:	add	x10, x10, #0x75f
  406828:	cmp	w9, #0x0
  40682c:	csel	x0, x10, x8, eq  // eq = none
  406830:	ldp	x29, x30, [sp], #16
  406834:	ret
  406838:	stp	x29, x30, [sp, #-64]!
  40683c:	mov	x29, sp
  406840:	stp	x19, x20, [sp, #16]
  406844:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x10944>
  406848:	add	x20, x20, #0xdf0
  40684c:	stp	x21, x22, [sp, #32]
  406850:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x10944>
  406854:	add	x21, x21, #0xde8
  406858:	sub	x20, x20, x21
  40685c:	mov	w22, w0
  406860:	stp	x23, x24, [sp, #48]
  406864:	mov	x23, x1
  406868:	mov	x24, x2
  40686c:	bl	401850 <mbrtowc@plt-0x40>
  406870:	cmp	xzr, x20, asr #3
  406874:	b.eq	4068a0 <_obstack_memory_used@@Base+0x1e4>  // b.none
  406878:	asr	x20, x20, #3
  40687c:	mov	x19, #0x0                   	// #0
  406880:	ldr	x3, [x21, x19, lsl #3]
  406884:	mov	x2, x24
  406888:	add	x19, x19, #0x1
  40688c:	mov	x1, x23
  406890:	mov	w0, w22
  406894:	blr	x3
  406898:	cmp	x20, x19
  40689c:	b.ne	406880 <_obstack_memory_used@@Base+0x1c4>  // b.any
  4068a0:	ldp	x19, x20, [sp, #16]
  4068a4:	ldp	x21, x22, [sp, #32]
  4068a8:	ldp	x23, x24, [sp, #48]
  4068ac:	ldp	x29, x30, [sp], #64
  4068b0:	ret
  4068b4:	nop
  4068b8:	ret
  4068bc:	nop
  4068c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x11944>
  4068c4:	mov	x1, #0x0                   	// #0
  4068c8:	ldr	x2, [x2, #536]
  4068cc:	b	401900 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004068d0 <.fini>:
  4068d0:	stp	x29, x30, [sp, #-16]!
  4068d4:	mov	x29, sp
  4068d8:	ldp	x29, x30, [sp], #16
  4068dc:	ret
