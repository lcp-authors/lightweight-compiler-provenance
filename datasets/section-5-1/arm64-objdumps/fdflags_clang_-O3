
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000ba0 <_init>:
 ba0:	stp	x29, x30, [sp, #-16]!
 ba4:	mov	x29, sp
 ba8:	bl	ce0 <call_weak_fn>
 bac:	ldp	x29, x30, [sp], #16
 bb0:	ret

Disassembly of section .plt:

0000000000000bc0 <.plt>:
 bc0:	stp	x16, x30, [sp, #-16]!
 bc4:	adrp	x16, 11000 <__FRAME_END__+0xf324>
 bc8:	ldr	x17, [x16, #4088]
 bcc:	add	x16, x16, #0xff8
 bd0:	br	x17
 bd4:	nop
 bd8:	nop
 bdc:	nop

0000000000000be0 <strtok@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16]
 be8:	add	x16, x16, #0x0
 bec:	br	x17

0000000000000bf0 <builtin_error@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #8]
 bf8:	add	x16, x16, #0x8
 bfc:	br	x17

0000000000000c00 <__cxa_finalize@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #16]
 c08:	add	x16, x16, #0x10
 c0c:	br	x17

0000000000000c10 <putc@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #24]
 c18:	add	x16, x16, #0x18
 c1c:	br	x17

0000000000000c20 <builtin_help@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #32]
 c28:	add	x16, x16, #0x20
 c2c:	br	x17

0000000000000c30 <builtin_usage@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #40]
 c38:	add	x16, x16, #0x28
 c3c:	br	x17

0000000000000c40 <strerror@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #48]
 c48:	add	x16, x16, #0x30
 c4c:	br	x17

0000000000000c50 <__gmon_start__@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #56]
 c58:	add	x16, x16, #0x38
 c5c:	br	x17

0000000000000c60 <strcmp@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #64]
 c68:	add	x16, x16, #0x40
 c6c:	br	x17

0000000000000c70 <internal_getopt@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #72]
 c78:	add	x16, x16, #0x48
 c7c:	br	x17

0000000000000c80 <reset_internal_getopt@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #80]
 c88:	add	x16, x16, #0x50
 c8c:	br	x17

0000000000000c90 <fcntl@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #88]
 c98:	add	x16, x16, #0x58
 c9c:	br	x17

0000000000000ca0 <legal_number@plt>:
 ca0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #96]
 ca8:	add	x16, x16, #0x60
 cac:	br	x17

0000000000000cb0 <printf@plt>:
 cb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #104]
 cb8:	add	x16, x16, #0x68
 cbc:	br	x17

0000000000000cc0 <__errno_location@plt>:
 cc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #112]
 cc8:	add	x16, x16, #0x70
 ccc:	br	x17

0000000000000cd0 <getdtablesize@plt>:
 cd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #120]
 cd8:	add	x16, x16, #0x78
 cdc:	br	x17

Disassembly of section .text:

0000000000000ce0 <call_weak_fn>:
     ce0:	adrp	x0, 11000 <__FRAME_END__+0xf324>
     ce4:	ldr	x0, [x0, #4040]
     ce8:	cbz	x0, cf0 <call_weak_fn+0x10>
     cec:	b	c50 <__gmon_start__@plt>
     cf0:	ret
     cf4:	nop

0000000000000cf8 <deregister_tm_clones>:
     cf8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cfc:	add	x0, x0, #0x128
     d00:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d04:	add	x1, x1, #0x128
     d08:	cmp	x1, x0
     d0c:	b.eq	d24 <deregister_tm_clones+0x2c>  // b.none
     d10:	adrp	x1, 11000 <__FRAME_END__+0xf324>
     d14:	ldr	x1, [x1, #4016]
     d18:	cbz	x1, d24 <deregister_tm_clones+0x2c>
     d1c:	mov	x16, x1
     d20:	br	x16
     d24:	ret

0000000000000d28 <register_tm_clones>:
     d28:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d2c:	add	x0, x0, #0x128
     d30:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d34:	add	x1, x1, #0x128
     d38:	sub	x1, x1, x0
     d3c:	lsr	x2, x1, #63
     d40:	add	x1, x2, x1, asr #3
     d44:	cmp	xzr, x1, asr #1
     d48:	asr	x1, x1, #1
     d4c:	b.eq	d64 <register_tm_clones+0x3c>  // b.none
     d50:	adrp	x2, 11000 <__FRAME_END__+0xf324>
     d54:	ldr	x2, [x2, #4064]
     d58:	cbz	x2, d64 <register_tm_clones+0x3c>
     d5c:	mov	x16, x2
     d60:	br	x16
     d64:	ret

0000000000000d68 <__do_global_dtors_aux>:
     d68:	stp	x29, x30, [sp, #-32]!
     d6c:	mov	x29, sp
     d70:	str	x19, [sp, #16]
     d74:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     d78:	ldrb	w0, [x19, #296]
     d7c:	cbnz	w0, da4 <__do_global_dtors_aux+0x3c>
     d80:	adrp	x0, 11000 <__FRAME_END__+0xf324>
     d84:	ldr	x0, [x0, #4024]
     d88:	cbz	x0, d98 <__do_global_dtors_aux+0x30>
     d8c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d90:	ldr	x0, [x0, #128]
     d94:	bl	c00 <__cxa_finalize@plt>
     d98:	bl	cf8 <deregister_tm_clones>
     d9c:	mov	w0, #0x1                   	// #1
     da0:	strb	w0, [x19, #296]
     da4:	ldr	x19, [sp, #16]
     da8:	ldp	x29, x30, [sp], #32
     dac:	ret

0000000000000db0 <frame_dummy>:
     db0:	b	d28 <register_tm_clones>

0000000000000db4 <fdflags_builtin>:
     db4:	sub	sp, sp, #0x80
     db8:	stp	x29, x30, [sp, #32]
     dbc:	stp	x28, x27, [sp, #48]
     dc0:	stp	x26, x25, [sp, #64]
     dc4:	stp	x24, x23, [sp, #80]
     dc8:	stp	x22, x21, [sp, #96]
     dcc:	stp	x20, x19, [sp, #112]
     dd0:	add	x29, sp, #0x20
     dd4:	mov	x21, x0
     dd8:	bl	c80 <reset_internal_getopt@plt>
     ddc:	adrp	x23, 11000 <__FRAME_END__+0xf324>
     de0:	ldr	x23, [x23, #4048]
     de4:	adrp	x22, 1000 <fdflags_builtin+0x24c>
     de8:	mov	w24, wzr
     dec:	mov	w19, wzr
     df0:	add	x22, x22, #0x890
     df4:	b	e00 <fdflags_builtin+0x4c>
     df8:	ldr	x20, [x23]
     dfc:	mov	w19, #0x1                   	// #1
     e00:	mov	x0, x21
     e04:	mov	x1, x22
     e08:	bl	c70 <internal_getopt@plt>
     e0c:	cmp	w0, #0x73
     e10:	b.eq	df8 <fdflags_builtin+0x44>  // b.none
     e14:	cmn	w0, #0x63
     e18:	b.eq	e34 <fdflags_builtin+0x80>  // b.none
     e1c:	cmn	w0, #0x1
     e20:	b.eq	e3c <fdflags_builtin+0x88>  // b.none
     e24:	cmp	w0, #0x76
     e28:	b.ne	e58 <fdflags_builtin+0xa4>  // b.any
     e2c:	mov	w24, #0x1                   	// #1
     e30:	b	e00 <fdflags_builtin+0x4c>
     e34:	bl	c20 <builtin_help@plt>
     e38:	b	e5c <fdflags_builtin+0xa8>
     e3c:	adrp	x8, 11000 <__FRAME_END__+0xf324>
     e40:	ldr	x8, [x8, #4056]
     e44:	ldr	x28, [x8]
     e48:	cbz	w19, e84 <fdflags_builtin+0xd0>
     e4c:	cbnz	x28, e84 <fdflags_builtin+0xd0>
     e50:	mov	w21, wzr
     e54:	b	e60 <fdflags_builtin+0xac>
     e58:	bl	c30 <builtin_usage@plt>
     e5c:	mov	w21, #0x102                 	// #258
     e60:	mov	w0, w21
     e64:	ldp	x20, x19, [sp, #112]
     e68:	ldp	x22, x21, [sp, #96]
     e6c:	ldp	x24, x23, [sp, #80]
     e70:	ldp	x26, x25, [sp, #64]
     e74:	ldp	x28, x27, [sp, #48]
     e78:	ldp	x29, x30, [sp, #32]
     e7c:	add	sp, sp, #0x80
     e80:	ret
     e84:	cbz	x28, 119c <fdflags_builtin+0x3e8>
     e88:	adrp	x23, 1000 <fdflags_builtin+0x24c>
     e8c:	adrp	x26, 1000 <fdflags_builtin+0x24c>
     e90:	adrp	x27, 11000 <__FRAME_END__+0xf324>
     e94:	mov	w21, wzr
     e98:	add	x23, x23, #0x972
     e9c:	add	x26, x26, #0xbab
     ea0:	add	x27, x27, #0xd28
     ea4:	str	w24, [sp]
     ea8:	b	ecc <fdflags_builtin+0x118>
     eac:	ldr	x8, [x28, #8]
     eb0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
     eb4:	add	x0, x0, #0x8a9
     eb8:	ldr	x1, [x8]
     ebc:	bl	bf0 <builtin_error@plt>
     ec0:	mov	w21, #0x1                   	// #1
     ec4:	ldr	x28, [x28]
     ec8:	cbz	x28, e60 <fdflags_builtin+0xac>
     ecc:	ldr	x8, [x28, #8]
     ed0:	add	x1, sp, #0x8
     ed4:	ldr	x0, [x8]
     ed8:	bl	ca0 <legal_number@plt>
     edc:	cbz	w0, eac <fdflags_builtin+0xf8>
     ee0:	ldr	x22, [sp, #8]
     ee4:	tbnz	x22, #63, eac <fdflags_builtin+0xf8>
     ee8:	cbz	w19, 10c4 <fdflags_builtin+0x310>
     eec:	mov	w1, #0x1                   	// #1
     ef0:	mov	w0, w22
     ef4:	str	w21, [sp, #4]
     ef8:	bl	17c0 <getflags>
     efc:	cmn	w0, #0x1
     f00:	b.eq	1194 <fdflags_builtin+0x3e0>  // b.none
     f04:	mov	w25, w0
     f08:	mov	x0, x20
     f0c:	mov	x1, x23
     f10:	stur	xzr, [x29, #-8]
     f14:	stur	wzr, [x29, #-12]
     f18:	bl	be0 <strtok@plt>
     f1c:	mov	x24, x0
     f20:	cbz	x0, 10d8 <fdflags_builtin+0x324>
     f24:	ldrb	w8, [x24]
     f28:	cmp	w8, #0x2d
     f2c:	b.eq	f58 <fdflags_builtin+0x1a4>  // b.none
     f30:	cmp	w8, #0x2b
     f34:	b.ne	f74 <fdflags_builtin+0x1c0>  // b.any
     f38:	add	x24, x24, #0x1
     f3c:	sub	x21, x29, #0x8
     f40:	mov	x0, x24
     f44:	mov	x1, x26
     f48:	bl	c60 <strcmp@plt>
     f4c:	cbnz	w0, f88 <fdflags_builtin+0x1d4>
     f50:	mov	x8, xzr
     f54:	b	1094 <fdflags_builtin+0x2e0>
     f58:	add	x24, x24, #0x1
     f5c:	sub	x21, x29, #0xc
     f60:	mov	x0, x24
     f64:	mov	x1, x26
     f68:	bl	c60 <strcmp@plt>
     f6c:	cbnz	w0, f88 <fdflags_builtin+0x1d4>
     f70:	b	f50 <fdflags_builtin+0x19c>
     f74:	sub	x21, x29, #0x4
     f78:	mov	x0, x24
     f7c:	mov	x1, x26
     f80:	bl	c60 <strcmp@plt>
     f84:	cbz	w0, f50 <fdflags_builtin+0x19c>
     f88:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     f8c:	mov	x0, x24
     f90:	add	x1, x1, #0xbb2
     f94:	bl	c60 <strcmp@plt>
     f98:	cbz	w0, 1050 <fdflags_builtin+0x29c>
     f9c:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fa0:	mov	x0, x24
     fa4:	add	x1, x1, #0xbb3
     fa8:	bl	c60 <strcmp@plt>
     fac:	cbz	w0, 1058 <fdflags_builtin+0x2a4>
     fb0:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fb4:	mov	x0, x24
     fb8:	add	x1, x1, #0xbb8
     fbc:	bl	c60 <strcmp@plt>
     fc0:	cbz	w0, 1060 <fdflags_builtin+0x2ac>
     fc4:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fc8:	mov	x0, x24
     fcc:	add	x1, x1, #0xbc1
     fd0:	bl	c60 <strcmp@plt>
     fd4:	cbz	w0, 1068 <fdflags_builtin+0x2b4>
     fd8:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fdc:	mov	x0, x24
     fe0:	add	x1, x1, #0xbc7
     fe4:	bl	c60 <strcmp@plt>
     fe8:	cbz	w0, 1070 <fdflags_builtin+0x2bc>
     fec:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     ff0:	mov	x0, x24
     ff4:	add	x1, x1, #0xbcd
     ff8:	bl	c60 <strcmp@plt>
     ffc:	cbz	w0, 1078 <fdflags_builtin+0x2c4>
    1000:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1004:	mov	x0, x24
    1008:	add	x1, x1, #0xbd3
    100c:	bl	c60 <strcmp@plt>
    1010:	cbz	w0, 1080 <fdflags_builtin+0x2cc>
    1014:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1018:	mov	x0, x24
    101c:	add	x1, x1, #0xbda
    1020:	bl	c60 <strcmp@plt>
    1024:	cbz	w0, 1088 <fdflags_builtin+0x2d4>
    1028:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    102c:	mov	x0, x24
    1030:	add	x1, x1, #0xbe2
    1034:	bl	c60 <strcmp@plt>
    1038:	cbz	w0, 1090 <fdflags_builtin+0x2dc>
    103c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1040:	add	x0, x0, #0xc27
    1044:	mov	x1, x24
    1048:	bl	bf0 <builtin_error@plt>
    104c:	b	10a8 <fdflags_builtin+0x2f4>
    1050:	mov	w8, #0x1                   	// #1
    1054:	b	1094 <fdflags_builtin+0x2e0>
    1058:	mov	w8, #0x2                   	// #2
    105c:	b	1094 <fdflags_builtin+0x2e0>
    1060:	mov	w8, #0x3                   	// #3
    1064:	b	1094 <fdflags_builtin+0x2e0>
    1068:	mov	w8, #0x4                   	// #4
    106c:	b	1094 <fdflags_builtin+0x2e0>
    1070:	mov	w8, #0x5                   	// #5
    1074:	b	1094 <fdflags_builtin+0x2e0>
    1078:	mov	w8, #0x6                   	// #6
    107c:	b	1094 <fdflags_builtin+0x2e0>
    1080:	mov	w8, #0x7                   	// #7
    1084:	b	1094 <fdflags_builtin+0x2e0>
    1088:	mov	w8, #0x8                   	// #8
    108c:	b	1094 <fdflags_builtin+0x2e0>
    1090:	mov	w8, #0x9                   	// #9
    1094:	add	x8, x27, x8, lsl #4
    1098:	ldr	w8, [x8, #8]
    109c:	ldr	w9, [x21]
    10a0:	orr	w8, w9, w8
    10a4:	str	w8, [x21]
    10a8:	mov	x0, xzr
    10ac:	mov	x1, x23
    10b0:	bl	be0 <strtok@plt>
    10b4:	mov	x24, x0
    10b8:	cbnz	x0, f24 <fdflags_builtin+0x170>
    10bc:	ldp	w21, w24, [x29, #-12]
    10c0:	b	10dc <fdflags_builtin+0x328>
    10c4:	mov	w1, #0x1                   	// #1
    10c8:	mov	w0, w22
    10cc:	mov	w2, w24
    10d0:	bl	1228 <printone>
    10d4:	b	ec4 <fdflags_builtin+0x110>
    10d8:	mov	w21, wzr
    10dc:	tst	w25, #0x80000
    10e0:	and	w8, w24, #0x80000
    10e4:	cset	w10, eq  // eq = none
    10e8:	and	w9, w25, #0x80000
    10ec:	tst	w10, w8, lsr #19
    10f0:	mov	w8, #0x1                   	// #1
    10f4:	cneg	w8, w8, eq  // eq = none
    10f8:	tst	w21, w9
    10fc:	csel	w2, w8, wzr, eq  // eq = none
    1100:	cmn	w2, #0x1
    1104:	b.eq	113c <fdflags_builtin+0x388>  // b.none
    1108:	mov	w1, #0x2                   	// #2
    110c:	mov	w0, w22
    1110:	bl	c90 <fcntl@plt>
    1114:	cmn	w0, #0x1
    1118:	b.ne	113c <fdflags_builtin+0x388>  // b.any
    111c:	bl	cc0 <__errno_location@plt>
    1120:	ldr	w0, [x0]
    1124:	bl	c40 <strerror@plt>
    1128:	mov	x2, x0
    112c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1130:	add	x0, x0, #0xbea
    1134:	mov	w1, w22
    1138:	bl	bf0 <builtin_error@plt>
    113c:	and	w8, w24, #0xfff7ffff
    1140:	and	w9, w21, #0xfff7ffff
    1144:	and	w10, w25, #0xfff7ffff
    1148:	ldr	w24, [sp]
    114c:	stp	w9, w8, [x29, #-12]
    1150:	orr	w8, w8, w10
    1154:	bic	w2, w8, w9
    1158:	cmp	w2, w10
    115c:	b.eq	1194 <fdflags_builtin+0x3e0>  // b.none
    1160:	mov	w1, #0x4                   	// #4
    1164:	mov	w0, w22
    1168:	bl	c90 <fcntl@plt>
    116c:	cmn	w0, #0x1
    1170:	b.ne	1194 <fdflags_builtin+0x3e0>  // b.any
    1174:	bl	cc0 <__errno_location@plt>
    1178:	ldr	w0, [x0]
    117c:	bl	c40 <strerror@plt>
    1180:	mov	x2, x0
    1184:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1188:	add	x0, x0, #0xc09
    118c:	mov	w1, w22
    1190:	bl	bf0 <builtin_error@plt>
    1194:	ldr	w21, [sp, #4]
    1198:	b	ec4 <fdflags_builtin+0x110>
    119c:	bl	cd0 <getdtablesize@plt>
    11a0:	subs	w8, w0, #0x1
    11a4:	mov	w9, #0xff                  	// #255
    11a8:	csel	w20, w9, w8, lt  // lt = tstop
    11ac:	cmp	w20, #0x1
    11b0:	b.lt	11d4 <fdflags_builtin+0x420>  // b.tstop
    11b4:	add	x2, sp, #0x8
    11b8:	mov	w1, #0x1                   	// #1
    11bc:	mov	w0, w20
    11c0:	bl	c90 <fcntl@plt>
    11c4:	cmn	w0, #0x1
    11c8:	b.ne	11d4 <fdflags_builtin+0x420>  // b.any
    11cc:	subs	w20, w20, #0x1
    11d0:	b.gt	11b4 <fdflags_builtin+0x400>
    11d4:	tbnz	w20, #31, 1204 <fdflags_builtin+0x450>
    11d8:	cbz	w20, e50 <fdflags_builtin+0x9c>
    11dc:	mov	w22, wzr
    11e0:	mov	w0, w22
    11e4:	mov	w1, wzr
    11e8:	mov	w2, w24
    11ec:	bl	1228 <printone>
    11f0:	add	w22, w22, #0x1
    11f4:	cmp	w20, w22
    11f8:	mov	w21, wzr
    11fc:	b.ne	11e0 <fdflags_builtin+0x42c>  // b.any
    1200:	b	e60 <fdflags_builtin+0xac>
    1204:	bl	cc0 <__errno_location@plt>
    1208:	ldr	w0, [x0]
    120c:	bl	c40 <strerror@plt>
    1210:	mov	x1, x0
    1214:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1218:	add	x0, x0, #0x894
    121c:	bl	bf0 <builtin_error@plt>
    1220:	mov	w21, #0x1                   	// #1
    1224:	b	e60 <fdflags_builtin+0xac>

0000000000001228 <printone>:
    1228:	stp	x29, x30, [sp, #-64]!
    122c:	str	x23, [sp, #16]
    1230:	stp	x22, x21, [sp, #32]
    1234:	stp	x20, x19, [sp, #48]
    1238:	mov	x29, sp
    123c:	mov	w21, w2
    1240:	mov	w20, w0
    1244:	bl	17c0 <getflags>
    1248:	cmn	w0, #0x1
    124c:	b.eq	12d0 <printone+0xa8>  // b.none
    1250:	mov	w19, w0
    1254:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1258:	add	x0, x0, #0xb5f
    125c:	mov	w1, w20
    1260:	bl	cb0 <printf@plt>
    1264:	adrp	x22, 11000 <__FRAME_END__+0xf324>
    1268:	ldr	x22, [x22, #4032]
    126c:	adrp	x8, 1000 <fdflags_builtin+0x24c>
    1270:	adrp	x9, 1000 <fdflags_builtin+0x24c>
    1274:	add	x8, x8, #0xc38
    1278:	add	x9, x9, #0xb68
    127c:	cmp	w21, #0x0
    1280:	csel	x20, x9, x8, ne  // ne = any
    1284:	cbz	w21, 12e4 <printone+0xbc>
    1288:	tbnz	w19, #10, 14d8 <printone+0x2b0>
    128c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1290:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1294:	add	x0, x0, #0xb6a
    1298:	add	x1, x1, #0xbab
    129c:	bl	cb0 <printf@plt>
    12a0:	ldr	x1, [x22]
    12a4:	mov	w0, #0x2c                  	// #44
    12a8:	bl	c10 <putc@plt>
    12ac:	tbz	w19, #13, 1504 <printone+0x2dc>
    12b0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    12b4:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    12b8:	add	x0, x0, #0xb63
    12bc:	add	x2, x2, #0xbb2
    12c0:	mov	x1, x20
    12c4:	bl	cb0 <printf@plt>
    12c8:	and	w19, w19, #0xffffdfff
    12cc:	b	1518 <printone+0x2f0>
    12d0:	ldp	x20, x19, [sp, #48]
    12d4:	ldp	x22, x21, [sp, #32]
    12d8:	ldr	x23, [sp, #16]
    12dc:	ldp	x29, x30, [sp], #64
    12e0:	ret
    12e4:	tbz	w19, #10, 1314 <printone+0xec>
    12e8:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    12ec:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    12f0:	add	x0, x0, #0xb63
    12f4:	add	x2, x2, #0xbab
    12f8:	mov	x1, x20
    12fc:	bl	cb0 <printf@plt>
    1300:	ands	w19, w19, #0xfffffbff
    1304:	b.eq	17a4 <printone+0x57c>  // b.none
    1308:	ldr	x1, [x22]
    130c:	mov	w0, #0x2c                  	// #44
    1310:	bl	c10 <putc@plt>
    1314:	tbz	w19, #13, 1344 <printone+0x11c>
    1318:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    131c:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1320:	add	x0, x0, #0xb63
    1324:	add	x2, x2, #0xbb2
    1328:	mov	x1, x20
    132c:	bl	cb0 <printf@plt>
    1330:	ands	w19, w19, #0xffffdfff
    1334:	b.eq	17a4 <printone+0x57c>  // b.none
    1338:	ldr	x1, [x22]
    133c:	mov	w0, #0x2c                  	// #44
    1340:	bl	c10 <putc@plt>
    1344:	mov	w23, #0x1000                	// #4096
    1348:	movk	w23, #0x10, lsl #16
    134c:	mov	w21, #0xefff                	// #61439
    1350:	tst	w19, w23
    1354:	movk	w21, #0xffef, lsl #16
    1358:	b.eq	1388 <printone+0x160>  // b.none
    135c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1360:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1364:	add	x0, x0, #0xb63
    1368:	add	x2, x2, #0xbb3
    136c:	mov	x1, x20
    1370:	bl	cb0 <printf@plt>
    1374:	ands	w19, w19, w21
    1378:	b.eq	17a4 <printone+0x57c>  // b.none
    137c:	ldr	x1, [x22]
    1380:	mov	w0, #0x2c                  	// #44
    1384:	bl	c10 <putc@plt>
    1388:	tbz	w19, #11, 13b8 <printone+0x190>
    138c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1390:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1394:	add	x0, x0, #0xb63
    1398:	add	x2, x2, #0xbb8
    139c:	mov	x1, x20
    13a0:	bl	cb0 <printf@plt>
    13a4:	ands	w19, w19, #0xfffff7ff
    13a8:	b.eq	17a4 <printone+0x57c>  // b.none
    13ac:	ldr	x1, [x22]
    13b0:	mov	w0, #0x2c                  	// #44
    13b4:	bl	c10 <putc@plt>
    13b8:	tst	w19, w23
    13bc:	b.eq	13ec <printone+0x1c4>  // b.none
    13c0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    13c4:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    13c8:	add	x0, x0, #0xb63
    13cc:	add	x2, x2, #0xbc1
    13d0:	mov	x1, x20
    13d4:	bl	cb0 <printf@plt>
    13d8:	ands	w19, w19, w21
    13dc:	b.eq	17a4 <printone+0x57c>  // b.none
    13e0:	ldr	x1, [x22]
    13e4:	mov	w0, #0x2c                  	// #44
    13e8:	bl	c10 <putc@plt>
    13ec:	tbz	w19, #12, 141c <printone+0x1f4>
    13f0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    13f4:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    13f8:	add	x0, x0, #0xb63
    13fc:	add	x2, x2, #0xbc7
    1400:	mov	x1, x20
    1404:	bl	cb0 <printf@plt>
    1408:	ands	w19, w19, #0xffffefff
    140c:	b.eq	17a4 <printone+0x57c>  // b.none
    1410:	ldr	x1, [x22]
    1414:	mov	w0, #0x2c                  	// #44
    1418:	bl	c10 <putc@plt>
    141c:	tst	w19, w23
    1420:	b.eq	1450 <printone+0x228>  // b.none
    1424:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1428:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    142c:	add	x0, x0, #0xb63
    1430:	add	x2, x2, #0xbcd
    1434:	mov	x1, x20
    1438:	bl	cb0 <printf@plt>
    143c:	ands	w19, w19, w21
    1440:	b.eq	17a4 <printone+0x57c>  // b.none
    1444:	ldr	x1, [x22]
    1448:	mov	w0, #0x2c                  	// #44
    144c:	bl	c10 <putc@plt>
    1450:	tbz	w19, #16, 1480 <printone+0x258>
    1454:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1458:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    145c:	add	x0, x0, #0xb63
    1460:	add	x2, x2, #0xbd3
    1464:	mov	x1, x20
    1468:	bl	cb0 <printf@plt>
    146c:	ands	w19, w19, #0xfffeffff
    1470:	b.eq	17a4 <printone+0x57c>  // b.none
    1474:	ldr	x1, [x22]
    1478:	mov	w0, #0x2c                  	// #44
    147c:	bl	c10 <putc@plt>
    1480:	tbz	w19, #18, 14b0 <printone+0x288>
    1484:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1488:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    148c:	add	x0, x0, #0xb63
    1490:	add	x2, x2, #0xbda
    1494:	mov	x1, x20
    1498:	bl	cb0 <printf@plt>
    149c:	ands	w19, w19, #0xfffbffff
    14a0:	b.eq	17a4 <printone+0x57c>  // b.none
    14a4:	ldr	x1, [x22]
    14a8:	mov	w0, #0x2c                  	// #44
    14ac:	bl	c10 <putc@plt>
    14b0:	tbz	w19, #19, 17a4 <printone+0x57c>
    14b4:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    14b8:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    14bc:	add	x0, x0, #0xb63
    14c0:	add	x2, x2, #0xbe2
    14c4:	mov	x1, x20
    14c8:	bl	cb0 <printf@plt>
    14cc:	tst	w19, #0xfff7ffff
    14d0:	b.ne	1798 <printone+0x570>  // b.any
    14d4:	b	17a4 <printone+0x57c>
    14d8:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    14dc:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    14e0:	add	x0, x0, #0xb63
    14e4:	add	x2, x2, #0xbab
    14e8:	mov	x1, x20
    14ec:	bl	cb0 <printf@plt>
    14f0:	and	w19, w19, #0xfffffbff
    14f4:	ldr	x1, [x22]
    14f8:	mov	w0, #0x2c                  	// #44
    14fc:	bl	c10 <putc@plt>
    1500:	tbnz	w19, #13, 12b0 <printone+0x88>
    1504:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1508:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    150c:	add	x0, x0, #0xb6a
    1510:	add	x1, x1, #0xbb2
    1514:	bl	cb0 <printf@plt>
    1518:	ldr	x1, [x22]
    151c:	mov	w21, #0xefff                	// #61439
    1520:	mov	w23, #0x1000                	// #4096
    1524:	mov	w0, #0x2c                  	// #44
    1528:	movk	w21, #0xffef, lsl #16
    152c:	movk	w23, #0x10, lsl #16
    1530:	bl	c10 <putc@plt>
    1534:	tst	w19, w23
    1538:	b.eq	1580 <printone+0x358>  // b.none
    153c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1540:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1544:	add	x0, x0, #0xb63
    1548:	add	x2, x2, #0xbb3
    154c:	mov	x1, x20
    1550:	bl	cb0 <printf@plt>
    1554:	and	w19, w19, w21
    1558:	ldr	x1, [x22]
    155c:	mov	w0, #0x2c                  	// #44
    1560:	bl	c10 <putc@plt>
    1564:	tbnz	w19, #11, 15a4 <printone+0x37c>
    1568:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    156c:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1570:	add	x0, x0, #0xb6a
    1574:	add	x1, x1, #0xbb8
    1578:	bl	cb0 <printf@plt>
    157c:	b	15c0 <printone+0x398>
    1580:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1584:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1588:	add	x0, x0, #0xb6a
    158c:	add	x1, x1, #0xbb3
    1590:	bl	cb0 <printf@plt>
    1594:	ldr	x1, [x22]
    1598:	mov	w0, #0x2c                  	// #44
    159c:	bl	c10 <putc@plt>
    15a0:	tbz	w19, #11, 1568 <printone+0x340>
    15a4:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    15a8:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    15ac:	add	x0, x0, #0xb63
    15b0:	add	x2, x2, #0xbb8
    15b4:	mov	x1, x20
    15b8:	bl	cb0 <printf@plt>
    15bc:	and	w19, w19, #0xfffff7ff
    15c0:	ldr	x1, [x22]
    15c4:	mov	w0, #0x2c                  	// #44
    15c8:	bl	c10 <putc@plt>
    15cc:	tst	w19, w23
    15d0:	b.eq	1618 <printone+0x3f0>  // b.none
    15d4:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    15d8:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    15dc:	add	x0, x0, #0xb63
    15e0:	add	x2, x2, #0xbc1
    15e4:	mov	x1, x20
    15e8:	bl	cb0 <printf@plt>
    15ec:	and	w19, w19, w21
    15f0:	ldr	x1, [x22]
    15f4:	mov	w0, #0x2c                  	// #44
    15f8:	bl	c10 <putc@plt>
    15fc:	tbnz	w19, #12, 163c <printone+0x414>
    1600:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1604:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1608:	add	x0, x0, #0xb6a
    160c:	add	x1, x1, #0xbc7
    1610:	bl	cb0 <printf@plt>
    1614:	b	1658 <printone+0x430>
    1618:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    161c:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1620:	add	x0, x0, #0xb6a
    1624:	add	x1, x1, #0xbc1
    1628:	bl	cb0 <printf@plt>
    162c:	ldr	x1, [x22]
    1630:	mov	w0, #0x2c                  	// #44
    1634:	bl	c10 <putc@plt>
    1638:	tbz	w19, #12, 1600 <printone+0x3d8>
    163c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1640:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1644:	add	x0, x0, #0xb63
    1648:	add	x2, x2, #0xbc7
    164c:	mov	x1, x20
    1650:	bl	cb0 <printf@plt>
    1654:	and	w19, w19, #0xffffefff
    1658:	ldr	x1, [x22]
    165c:	mov	w0, #0x2c                  	// #44
    1660:	bl	c10 <putc@plt>
    1664:	tst	w19, w23
    1668:	b.eq	170c <printone+0x4e4>  // b.none
    166c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1670:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1674:	add	x0, x0, #0xb63
    1678:	add	x2, x2, #0xbcd
    167c:	mov	x1, x20
    1680:	bl	cb0 <printf@plt>
    1684:	and	w19, w19, w21
    1688:	ldr	x1, [x22]
    168c:	mov	w0, #0x2c                  	// #44
    1690:	bl	c10 <putc@plt>
    1694:	tbnz	w19, #16, 1730 <printone+0x508>
    1698:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    169c:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    16a0:	add	x0, x0, #0xb6a
    16a4:	add	x1, x1, #0xbd3
    16a8:	bl	cb0 <printf@plt>
    16ac:	ldr	x1, [x22]
    16b0:	mov	w0, #0x2c                  	// #44
    16b4:	bl	c10 <putc@plt>
    16b8:	tbz	w19, #18, 175c <printone+0x534>
    16bc:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    16c0:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    16c4:	add	x0, x0, #0xb63
    16c8:	add	x2, x2, #0xbda
    16cc:	mov	x1, x20
    16d0:	bl	cb0 <printf@plt>
    16d4:	and	w19, w19, #0xfffbffff
    16d8:	ldr	x1, [x22]
    16dc:	mov	w0, #0x2c                  	// #44
    16e0:	bl	c10 <putc@plt>
    16e4:	tbz	w19, #19, 1780 <printone+0x558>
    16e8:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    16ec:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    16f0:	add	x0, x0, #0xb63
    16f4:	add	x2, x2, #0xbe2
    16f8:	mov	x1, x20
    16fc:	bl	cb0 <printf@plt>
    1700:	and	w19, w19, #0xfff7ffff
    1704:	cbnz	w19, 1798 <printone+0x570>
    1708:	b	17a4 <printone+0x57c>
    170c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1710:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1714:	add	x0, x0, #0xb6a
    1718:	add	x1, x1, #0xbcd
    171c:	bl	cb0 <printf@plt>
    1720:	ldr	x1, [x22]
    1724:	mov	w0, #0x2c                  	// #44
    1728:	bl	c10 <putc@plt>
    172c:	tbz	w19, #16, 1698 <printone+0x470>
    1730:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1734:	adrp	x2, 1000 <fdflags_builtin+0x24c>
    1738:	add	x0, x0, #0xb63
    173c:	add	x2, x2, #0xbd3
    1740:	mov	x1, x20
    1744:	bl	cb0 <printf@plt>
    1748:	and	w19, w19, #0xfffeffff
    174c:	ldr	x1, [x22]
    1750:	mov	w0, #0x2c                  	// #44
    1754:	bl	c10 <putc@plt>
    1758:	tbnz	w19, #18, 16bc <printone+0x494>
    175c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1760:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1764:	add	x0, x0, #0xb6a
    1768:	add	x1, x1, #0xbda
    176c:	bl	cb0 <printf@plt>
    1770:	ldr	x1, [x22]
    1774:	mov	w0, #0x2c                  	// #44
    1778:	bl	c10 <putc@plt>
    177c:	tbnz	w19, #19, 16e8 <printone+0x4c0>
    1780:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1784:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1788:	add	x0, x0, #0xb6a
    178c:	add	x1, x1, #0xbe2
    1790:	bl	cb0 <printf@plt>
    1794:	cbz	w19, 17a4 <printone+0x57c>
    1798:	ldr	x1, [x22]
    179c:	mov	w0, #0x2c                  	// #44
    17a0:	bl	c10 <putc@plt>
    17a4:	ldr	x1, [x22]
    17a8:	ldp	x20, x19, [sp, #48]
    17ac:	ldp	x22, x21, [sp, #32]
    17b0:	ldr	x23, [sp, #16]
    17b4:	mov	w0, #0xa                   	// #10
    17b8:	ldp	x29, x30, [sp], #64
    17bc:	b	c10 <putc@plt>

00000000000017c0 <getflags>:
    17c0:	stp	x29, x30, [sp, #-48]!
    17c4:	stp	x20, x19, [sp, #32]
    17c8:	mov	w20, w1
    17cc:	mov	w1, #0x1                   	// #1
    17d0:	str	x21, [sp, #16]
    17d4:	mov	x29, sp
    17d8:	mov	w19, w0
    17dc:	bl	c90 <fcntl@plt>
    17e0:	cmn	w0, #0x1
    17e4:	b.eq	1828 <getflags+0x68>  // b.none
    17e8:	mov	w21, w0
    17ec:	mov	w1, #0x3                   	// #3
    17f0:	mov	w0, w19
    17f4:	bl	c90 <fcntl@plt>
    17f8:	cmn	w0, #0x1
    17fc:	b.eq	1848 <getflags+0x88>  // b.none
    1800:	orr	w8, w0, #0x80000
    1804:	cmp	w21, #0x0
    1808:	mov	w9, #0x3c00                	// #15360
    180c:	csel	w8, w0, w8, eq  // eq = none
    1810:	movk	w9, #0x1d, lsl #16
    1814:	and	w0, w8, w9
    1818:	ldp	x20, x19, [sp, #32]
    181c:	ldr	x21, [sp, #16]
    1820:	ldp	x29, x30, [sp], #48
    1824:	ret
    1828:	cbz	w20, 186c <getflags+0xac>
    182c:	bl	cc0 <__errno_location@plt>
    1830:	ldr	w0, [x0]
    1834:	bl	c40 <strerror@plt>
    1838:	mov	x2, x0
    183c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1840:	add	x0, x0, #0xb6e
    1844:	b	1864 <getflags+0xa4>
    1848:	cbz	w20, 186c <getflags+0xac>
    184c:	bl	cc0 <__errno_location@plt>
    1850:	ldr	w0, [x0]
    1854:	bl	c40 <strerror@plt>
    1858:	mov	x2, x0
    185c:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1860:	add	x0, x0, #0xb8d
    1864:	mov	w1, w19
    1868:	bl	bf0 <builtin_error@plt>
    186c:	mov	w0, #0xffffffff            	// #-1
    1870:	ldp	x20, x19, [sp, #32]
    1874:	ldr	x21, [sp, #16]
    1878:	ldp	x29, x30, [sp], #48
    187c:	ret

Disassembly of section .fini:

0000000000001880 <_fini>:
    1880:	stp	x29, x30, [sp, #-16]!
    1884:	mov	x29, sp
    1888:	ldp	x29, x30, [sp], #16
    188c:	ret
