
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//binascii.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000016c8 <.init>:
    16c8:	stp	x29, x30, [sp, #-16]!
    16cc:	mov	x29, sp
    16d0:	bl	1930 <PyMem_Malloc@plt+0x10>
    16d4:	ldp	x29, x30, [sp], #16
    16d8:	ret

Disassembly of section .plt:

00000000000016e0 <_PyUnicode_Ready@plt-0x20>:
    16e0:	stp	x16, x30, [sp, #-16]!
    16e4:	adrp	x16, 15000 <PyInit_binascii@@Base+0x135fc>
    16e8:	ldr	x17, [x16, #4088]
    16ec:	add	x16, x16, #0xff8
    16f0:	br	x17
    16f4:	nop
    16f8:	nop
    16fc:	nop

0000000000001700 <_PyUnicode_Ready@plt>:
    1700:	adrp	x16, 16000 <_PyUnicode_Ready>
    1704:	ldr	x17, [x16]
    1708:	add	x16, x16, #0x0
    170c:	br	x17

0000000000001710 <PyModuleDef_Init@plt>:
    1710:	adrp	x16, 16000 <_PyUnicode_Ready>
    1714:	ldr	x17, [x16, #8]
    1718:	add	x16, x16, #0x8
    171c:	br	x17

0000000000001720 <PyMem_Free@plt>:
    1720:	adrp	x16, 16000 <_PyUnicode_Ready>
    1724:	ldr	x17, [x16, #16]
    1728:	add	x16, x16, #0x10
    172c:	br	x17

0000000000001730 <PyBuffer_Release@plt>:
    1730:	adrp	x16, 16000 <_PyUnicode_Ready>
    1734:	ldr	x17, [x16, #24]
    1738:	add	x16, x16, #0x18
    173c:	br	x17

0000000000001740 <__cxa_finalize@plt>:
    1740:	adrp	x16, 16000 <_PyUnicode_Ready>
    1744:	ldr	x17, [x16, #32]
    1748:	add	x16, x16, #0x20
    174c:	br	x17

0000000000001750 <crc32@plt>:
    1750:	adrp	x16, 16000 <_PyUnicode_Ready>
    1754:	ldr	x17, [x16, #40]
    1758:	add	x16, x16, #0x28
    175c:	br	x17

0000000000001760 <PyBuffer_IsContiguous@plt>:
    1760:	adrp	x16, 16000 <_PyUnicode_Ready>
    1764:	ldr	x17, [x16, #48]
    1768:	add	x16, x16, #0x30
    176c:	br	x17

0000000000001770 <PyBytes_FromStringAndSize@plt>:
    1770:	adrp	x16, 16000 <_PyUnicode_Ready>
    1774:	ldr	x17, [x16, #56]
    1778:	add	x16, x16, #0x38
    177c:	br	x17

0000000000001780 <_Py_Dealloc@plt>:
    1780:	adrp	x16, 16000 <_PyUnicode_Ready>
    1784:	ldr	x17, [x16, #64]
    1788:	add	x16, x16, #0x40
    178c:	br	x17

0000000000001790 <PyErr_NoMemory@plt>:
    1790:	adrp	x16, 16000 <_PyUnicode_Ready>
    1794:	ldr	x17, [x16, #72]
    1798:	add	x16, x16, #0x48
    179c:	br	x17

00000000000017a0 <_PyBytesWriter_Prepare@plt>:
    17a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17a4:	ldr	x17, [x16, #80]
    17a8:	add	x16, x16, #0x50
    17ac:	br	x17

00000000000017b0 <_PyArg_UnpackKeywords@plt>:
    17b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17b4:	ldr	x17, [x16, #88]
    17b8:	add	x16, x16, #0x58
    17bc:	br	x17

00000000000017c0 <PyErr_SetString@plt>:
    17c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17c4:	ldr	x17, [x16, #96]
    17c8:	add	x16, x16, #0x60
    17cc:	br	x17

00000000000017d0 <_PyBytesWriter_Finish@plt>:
    17d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17d4:	ldr	x17, [x16, #104]
    17d8:	add	x16, x16, #0x68
    17dc:	br	x17

00000000000017e0 <PyModule_GetState@plt>:
    17e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17e4:	ldr	x17, [x16, #112]
    17e8:	add	x16, x16, #0x70
    17ec:	br	x17

00000000000017f0 <memset@plt>:
    17f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17f4:	ldr	x17, [x16, #120]
    17f8:	add	x16, x16, #0x78
    17fc:	br	x17

0000000000001800 <_PyBytesWriter_Init@plt>:
    1800:	adrp	x16, 16000 <_PyUnicode_Ready>
    1804:	ldr	x17, [x16, #128]
    1808:	add	x16, x16, #0x80
    180c:	br	x17

0000000000001810 <_PyArg_BadArgument@plt>:
    1810:	adrp	x16, 16000 <_PyUnicode_Ready>
    1814:	ldr	x17, [x16, #136]
    1818:	add	x16, x16, #0x88
    181c:	br	x17

0000000000001820 <PyErr_NewException@plt>:
    1820:	adrp	x16, 16000 <_PyUnicode_Ready>
    1824:	ldr	x17, [x16, #144]
    1828:	add	x16, x16, #0x90
    182c:	br	x17

0000000000001830 <_PyBytesWriter_Alloc@plt>:
    1830:	adrp	x16, 16000 <_PyUnicode_Ready>
    1834:	ldr	x17, [x16, #152]
    1838:	add	x16, x16, #0x98
    183c:	br	x17

0000000000001840 <PyLong_AsUnsignedLongMask@plt>:
    1840:	adrp	x16, 16000 <_PyUnicode_Ready>
    1844:	ldr	x17, [x16, #160]
    1848:	add	x16, x16, #0xa0
    184c:	br	x17

0000000000001850 <__gmon_start__@plt>:
    1850:	adrp	x16, 16000 <_PyUnicode_Ready>
    1854:	ldr	x17, [x16, #168]
    1858:	add	x16, x16, #0xa8
    185c:	br	x17

0000000000001860 <_PyArg_CheckPositional@plt>:
    1860:	adrp	x16, 16000 <_PyUnicode_Ready>
    1864:	ldr	x17, [x16, #176]
    1868:	add	x16, x16, #0xb0
    186c:	br	x17

0000000000001870 <PyErr_Occurred@plt>:
    1870:	adrp	x16, 16000 <_PyUnicode_Ready>
    1874:	ldr	x17, [x16, #184]
    1878:	add	x16, x16, #0xb8
    187c:	br	x17

0000000000001880 <PyObject_GetBuffer@plt>:
    1880:	adrp	x16, 16000 <_PyUnicode_Ready>
    1884:	ldr	x17, [x16, #192]
    1888:	add	x16, x16, #0xc0
    188c:	br	x17

0000000000001890 <PyLong_FromUnsignedLong@plt>:
    1890:	adrp	x16, 16000 <_PyUnicode_Ready>
    1894:	ldr	x17, [x16, #200]
    1898:	add	x16, x16, #0xc8
    189c:	br	x17

00000000000018a0 <_Py_strhex_bytes_with_sep@plt>:
    18a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18a4:	ldr	x17, [x16, #208]
    18a8:	add	x16, x16, #0xd0
    18ac:	br	x17

00000000000018b0 <_PyBytesWriter_Dealloc@plt>:
    18b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18b4:	ldr	x17, [x16, #216]
    18b8:	add	x16, x16, #0xd8
    18bc:	br	x17

00000000000018c0 <memchr@plt>:
    18c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18c4:	ldr	x17, [x16, #224]
    18c8:	add	x16, x16, #0xe0
    18cc:	br	x17

00000000000018d0 <PyModule_AddObject@plt>:
    18d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18d4:	ldr	x17, [x16, #232]
    18d8:	add	x16, x16, #0xe8
    18dc:	br	x17

00000000000018e0 <PyType_IsSubtype@plt>:
    18e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18e4:	ldr	x17, [x16, #240]
    18e8:	add	x16, x16, #0xf0
    18ec:	br	x17

00000000000018f0 <PyErr_Format@plt>:
    18f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18f4:	ldr	x17, [x16, #248]
    18f8:	add	x16, x16, #0xf8
    18fc:	br	x17

0000000000001900 <_Py_BuildValue_SizeT@plt>:
    1900:	adrp	x16, 16000 <_PyUnicode_Ready>
    1904:	ldr	x17, [x16, #256]
    1908:	add	x16, x16, #0x100
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 16000 <_PyUnicode_Ready>
    1914:	ldr	x17, [x16, #264]
    1918:	add	x16, x16, #0x108
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 16000 <_PyUnicode_Ready>
    1924:	ldr	x17, [x16, #272]
    1928:	add	x16, x16, #0x110
    192c:	br	x17

Disassembly of section .text:

0000000000001930 <PyInit_binascii@@Base-0xd4>:
    1930:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    1934:	ldr	x0, [x0, #4048]
    1938:	cbz	x0, 1940 <PyMem_Malloc@plt+0x20>
    193c:	b	1850 <__gmon_start__@plt>
    1940:	ret
    1944:	nop
    1948:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    194c:	add	x0, x0, #0x548
    1950:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1954:	add	x1, x1, #0x548
    1958:	cmp	x1, x0
    195c:	b.eq	1974 <PyMem_Malloc@plt+0x54>  // b.none
    1960:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1964:	ldr	x1, [x1, #4008]
    1968:	cbz	x1, 1974 <PyMem_Malloc@plt+0x54>
    196c:	mov	x16, x1
    1970:	br	x16
    1974:	ret
    1978:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    197c:	add	x0, x0, #0x548
    1980:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1984:	add	x1, x1, #0x548
    1988:	sub	x1, x1, x0
    198c:	lsr	x2, x1, #63
    1990:	add	x1, x2, x1, asr #3
    1994:	cmp	xzr, x1, asr #1
    1998:	asr	x1, x1, #1
    199c:	b.eq	19b4 <PyMem_Malloc@plt+0x94>  // b.none
    19a0:	adrp	x2, 15000 <PyInit_binascii@@Base+0x135fc>
    19a4:	ldr	x2, [x2, #4064]
    19a8:	cbz	x2, 19b4 <PyMem_Malloc@plt+0x94>
    19ac:	mov	x16, x2
    19b0:	br	x16
    19b4:	ret
    19b8:	stp	x29, x30, [sp, #-32]!
    19bc:	mov	x29, sp
    19c0:	str	x19, [sp, #16]
    19c4:	adrp	x19, 16000 <PyInit_binascii@@Base+0x145fc>
    19c8:	ldrb	w0, [x19, #1352]
    19cc:	cbnz	w0, 19f4 <PyMem_Malloc@plt+0xd4>
    19d0:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    19d4:	ldr	x0, [x0, #4024]
    19d8:	cbz	x0, 19e8 <PyMem_Malloc@plt+0xc8>
    19dc:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    19e0:	ldr	x0, [x0, #280]
    19e4:	bl	1740 <__cxa_finalize@plt>
    19e8:	bl	1948 <PyMem_Malloc@plt+0x28>
    19ec:	mov	w0, #0x1                   	// #1
    19f0:	strb	w0, [x19, #1352]
    19f4:	ldr	x19, [sp, #16]
    19f8:	ldp	x29, x30, [sp], #32
    19fc:	ret
    1a00:	b	1978 <PyMem_Malloc@plt+0x58>

0000000000001a04 <PyInit_binascii@@Base>:
    1a04:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    1a08:	add	x0, x0, #0x120
    1a0c:	b	1710 <PyModuleDef_Init@plt>
    1a10:	sub	sp, sp, #0x90
    1a14:	stp	x29, x30, [sp, #80]
    1a18:	str	x23, [sp, #96]
    1a1c:	stp	x22, x21, [sp, #112]
    1a20:	stp	x20, x19, [sp, #128]
    1a24:	add	x29, sp, #0x50
    1a28:	mov	x8, x1
    1a2c:	mov	x20, x0
    1a30:	movi	v0.2d, #0x0
    1a34:	mov	x1, sp
    1a38:	mov	x0, x8
    1a3c:	stp	q0, q0, [sp, #48]
    1a40:	stp	q0, q0, [sp, #16]
    1a44:	str	q0, [sp]
    1a48:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    1a4c:	cbz	w0, 1bc8 <PyInit_binascii@@Base+0x1c4>
    1a50:	ldr	x23, [sp]
    1a54:	ldr	x22, [sp, #16]
    1a58:	mov	x0, xzr
    1a5c:	ldrb	w8, [x23]
    1a60:	add	w8, w8, #0x20
    1a64:	and	w21, w8, #0x3f
    1a68:	mov	x1, x21
    1a6c:	bl	1770 <PyBytes_FromStringAndSize@plt>
    1a70:	mov	x19, x0
    1a74:	cbz	x0, 1bcc <PyInit_binascii@@Base+0x1c8>
    1a78:	add	x8, x23, #0x1
    1a7c:	sub	x9, x22, #0x1
    1a80:	cbz	w21, 1b2c <PyInit_binascii@@Base+0x128>
    1a84:	mov	w13, wzr
    1a88:	mov	w11, wzr
    1a8c:	add	x10, x19, #0x20
    1a90:	mov	w12, #0xffffffff            	// #-1
    1a94:	b	1abc <PyInit_binascii@@Base+0xb8>
    1a98:	sub	w11, w11, #0x2
    1a9c:	lsr	w13, w14, w11
    1aa0:	lsl	w15, w12, w11
    1aa4:	strb	w13, [x10], #1
    1aa8:	bic	w13, w14, w15
    1aac:	sub	x21, x21, #0x1
    1ab0:	cmp	x21, #0x0
    1ab4:	add	x8, x8, #0x1
    1ab8:	b.le	1b2c <PyInit_binascii@@Base+0x128>
    1abc:	subs	x9, x9, #0x1
    1ac0:	b.lt	1b04 <PyInit_binascii@@Base+0x100>  // b.tstop
    1ac4:	ldrb	w15, [x8]
    1ac8:	mov	w14, wzr
    1acc:	cmp	w15, #0xa
    1ad0:	b.eq	1af0 <PyInit_binascii@@Base+0xec>  // b.none
    1ad4:	cmp	w15, #0xd
    1ad8:	b.eq	1af0 <PyInit_binascii@@Base+0xec>  // b.none
    1adc:	sub	w14, w15, #0x20
    1ae0:	cmp	w14, #0x41
    1ae4:	b.cs	1b94 <PyInit_binascii@@Base+0x190>  // b.hs, b.nlast
    1ae8:	add	w14, w15, #0x20
    1aec:	and	w14, w14, #0x3f
    1af0:	add	w15, w11, #0x6
    1af4:	cmp	w15, #0x8
    1af8:	bfi	w14, w13, #6, #26
    1afc:	b.ge	1a98 <PyInit_binascii@@Base+0x94>  // b.tcont
    1b00:	b	1b18 <PyInit_binascii@@Base+0x114>
    1b04:	mov	w14, wzr
    1b08:	add	w15, w11, #0x6
    1b0c:	cmp	w15, #0x8
    1b10:	bfi	w14, w13, #6, #26
    1b14:	b.ge	1a98 <PyInit_binascii@@Base+0x94>  // b.tcont
    1b18:	mov	w11, w15
    1b1c:	mov	w13, w14
    1b20:	cmp	x21, #0x0
    1b24:	add	x8, x8, #0x1
    1b28:	b.gt	1abc <PyInit_binascii@@Base+0xb8>
    1b2c:	cmp	x9, #0x1
    1b30:	b.lt	1bcc <PyInit_binascii@@Base+0x1c8>  // b.tstop
    1b34:	mov	x11, #0x2400                	// #9216
    1b38:	add	x9, x9, #0x1
    1b3c:	mov	w10, #0x1                   	// #1
    1b40:	movk	x11, #0x1, lsl #32
    1b44:	b	1b64 <PyInit_binascii@@Base+0x160>
    1b48:	lsl	x13, x10, x12
    1b4c:	tst	x13, x11
    1b50:	b.eq	1b70 <PyInit_binascii@@Base+0x16c>  // b.none
    1b54:	sub	x9, x9, #0x1
    1b58:	cmp	x9, #0x1
    1b5c:	add	x8, x8, #0x1
    1b60:	b.le	1bcc <PyInit_binascii@@Base+0x1c8>
    1b64:	ldrb	w12, [x8]
    1b68:	cmp	w12, #0x20
    1b6c:	b.ls	1b48 <PyInit_binascii@@Base+0x144>  // b.plast
    1b70:	cmp	w12, #0x60
    1b74:	b.eq	1b54 <PyInit_binascii@@Base+0x150>  // b.none
    1b78:	mov	x0, x20
    1b7c:	bl	17e0 <PyModule_GetState@plt>
    1b80:	cbz	x0, 1bc8 <PyInit_binascii@@Base+0x1c4>
    1b84:	ldr	x0, [x0]
    1b88:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1b8c:	add	x1, x1, #0x719
    1b90:	b	1bac <PyInit_binascii@@Base+0x1a8>
    1b94:	mov	x0, x20
    1b98:	bl	17e0 <PyModule_GetState@plt>
    1b9c:	cbz	x0, 1bc8 <PyInit_binascii@@Base+0x1c4>
    1ba0:	ldr	x0, [x0]
    1ba4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1ba8:	add	x1, x1, #0x70c
    1bac:	bl	17c0 <PyErr_SetString@plt>
    1bb0:	ldr	x8, [x19]
    1bb4:	subs	x8, x8, #0x1
    1bb8:	str	x8, [x19]
    1bbc:	b.ne	1bc8 <PyInit_binascii@@Base+0x1c4>  // b.any
    1bc0:	mov	x0, x19
    1bc4:	bl	1780 <_Py_Dealloc@plt>
    1bc8:	mov	x19, xzr
    1bcc:	ldr	x8, [sp, #8]
    1bd0:	cbz	x8, 1bdc <PyInit_binascii@@Base+0x1d8>
    1bd4:	mov	x0, sp
    1bd8:	bl	1730 <PyBuffer_Release@plt>
    1bdc:	mov	x0, x19
    1be0:	ldp	x20, x19, [sp, #128]
    1be4:	ldp	x22, x21, [sp, #112]
    1be8:	ldr	x23, [sp, #96]
    1bec:	ldp	x29, x30, [sp, #80]
    1bf0:	add	sp, sp, #0x90
    1bf4:	ret
    1bf8:	stp	x29, x30, [sp, #-64]!
    1bfc:	str	x28, [sp, #16]
    1c00:	stp	x22, x21, [sp, #32]
    1c04:	stp	x20, x19, [sp, #48]
    1c08:	mov	x29, sp
    1c0c:	sub	sp, sp, #0x2a0
    1c10:	mov	x21, x2
    1c14:	mov	x20, x1
    1c18:	mov	x19, x0
    1c1c:	cbz	x3, 1c28 <PyInit_binascii@@Base+0x224>
    1c20:	ldr	x22, [x3, #16]
    1c24:	b	1c2c <PyInit_binascii@@Base+0x228>
    1c28:	mov	x22, xzr
    1c2c:	movi	v0.2d, #0x0
    1c30:	stp	q0, q0, [sp, #64]
    1c34:	stp	q0, q0, [sp, #32]
    1c38:	str	q0, [sp, #16]
    1c3c:	cbz	x20, 1c4c <PyInit_binascii@@Base+0x248>
    1c40:	cmp	x21, #0x1
    1c44:	b.ne	1c4c <PyInit_binascii@@Base+0x248>  // b.any
    1c48:	cbz	x3, 1c80 <PyInit_binascii@@Base+0x27c>
    1c4c:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    1c50:	add	x8, sp, #0x68
    1c54:	add	x4, x4, #0x3c8
    1c58:	mov	w5, #0x1                   	// #1
    1c5c:	mov	w6, #0x1                   	// #1
    1c60:	mov	x0, x20
    1c64:	mov	x1, x21
    1c68:	mov	x2, xzr
    1c6c:	mov	w7, wzr
    1c70:	str	x8, [sp]
    1c74:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    1c78:	mov	x20, x0
    1c7c:	cbz	x0, 1c94 <PyInit_binascii@@Base+0x290>
    1c80:	ldr	x0, [x20]
    1c84:	add	x1, sp, #0x10
    1c88:	mov	w2, wzr
    1c8c:	bl	1880 <PyObject_GetBuffer@plt>
    1c90:	cbz	w0, 1cc4 <PyInit_binascii@@Base+0x2c0>
    1c94:	mov	x19, xzr
    1c98:	ldr	x8, [sp, #24]
    1c9c:	cbz	x8, 1ca8 <PyInit_binascii@@Base+0x2a4>
    1ca0:	add	x0, sp, #0x10
    1ca4:	bl	1730 <PyBuffer_Release@plt>
    1ca8:	mov	x0, x19
    1cac:	add	sp, sp, #0x2a0
    1cb0:	ldp	x20, x19, [sp, #48]
    1cb4:	ldp	x22, x21, [sp, #32]
    1cb8:	ldr	x28, [sp, #16]
    1cbc:	ldp	x29, x30, [sp], #64
    1cc0:	ret
    1cc4:	add	x0, sp, #0x10
    1cc8:	mov	w1, #0x43                  	// #67
    1ccc:	bl	1760 <PyBuffer_IsContiguous@plt>
    1cd0:	cbz	w0, 1d14 <PyInit_binascii@@Base+0x310>
    1cd4:	add	x8, x22, x21
    1cd8:	cmp	x8, #0x1
    1cdc:	b.ne	1d3c <PyInit_binascii@@Base+0x338>  // b.any
    1ce0:	mov	w20, wzr
    1ce4:	add	x0, sp, #0x78
    1ce8:	bl	1800 <_PyBytesWriter_Init@plt>
    1cec:	ldr	x21, [sp, #32]
    1cf0:	cmp	x21, #0x2e
    1cf4:	b.lt	1d84 <PyInit_binascii@@Base+0x380>  // b.tstop
    1cf8:	mov	x0, x19
    1cfc:	bl	17e0 <PyModule_GetState@plt>
    1d00:	cbz	x0, 1c94 <PyInit_binascii@@Base+0x290>
    1d04:	ldr	x0, [x0]
    1d08:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1d0c:	add	x1, x1, #0x775
    1d10:	b	1d78 <PyInit_binascii@@Base+0x374>
    1d14:	ldr	x3, [x20]
    1d18:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    1d1c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1d20:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    1d24:	add	x0, x0, #0x5e6
    1d28:	add	x1, x1, #0x733
    1d2c:	add	x2, x2, #0x73e
    1d30:	bl	1810 <_PyArg_BadArgument@plt>
    1d34:	mov	x19, xzr
    1d38:	b	1c98 <PyInit_binascii@@Base+0x294>
    1d3c:	ldr	x8, [x20, #8]
    1d40:	ldr	x0, [x8, #8]
    1d44:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d48:	ldr	x8, [x8, #4016]
    1d4c:	cmp	x0, x8
    1d50:	b.eq	1d64 <PyInit_binascii@@Base+0x360>  // b.none
    1d54:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1d58:	ldr	x1, [x1, #4016]
    1d5c:	bl	18e0 <PyType_IsSubtype@plt>
    1d60:	cbz	w0, 1f74 <PyInit_binascii@@Base+0x570>
    1d64:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1d68:	ldr	x8, [x8, #4040]
    1d6c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1d70:	add	x1, x1, #0x750
    1d74:	ldr	x0, [x8]
    1d78:	bl	17c0 <PyErr_SetString@plt>
    1d7c:	mov	x19, xzr
    1d80:	b	1c98 <PyInit_binascii@@Base+0x294>
    1d84:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    1d88:	add	x8, x21, #0x2
    1d8c:	movk	x9, #0x5556
    1d90:	ldr	x19, [sp, #16]
    1d94:	smulh	x8, x8, x9
    1d98:	add	x8, x8, x8, lsr #63
    1d9c:	mov	w1, #0x2                   	// #2
    1da0:	bfi	x1, x8, #2, #62
    1da4:	add	x0, sp, #0x78
    1da8:	bl	1830 <_PyBytesWriter_Alloc@plt>
    1dac:	cbz	x0, 1c94 <PyInit_binascii@@Base+0x290>
    1db0:	cmp	x21, #0x0
    1db4:	add	w8, w21, #0x20
    1db8:	mov	w9, #0x60                  	// #96
    1dbc:	ccmp	w20, #0x0, #0x4, eq  // eq = none
    1dc0:	mov	x1, x0
    1dc4:	csel	w8, w8, w9, eq  // eq = none
    1dc8:	cmp	x21, #0x1
    1dcc:	strb	w8, [x1], #1
    1dd0:	b.lt	2114 <PyInit_binascii@@Base+0x710>  // b.tstop
    1dd4:	mov	w8, wzr
    1dd8:	cbz	w20, 1f98 <PyInit_binascii@@Base+0x594>
    1ddc:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1de0:	ldr	q0, [x12, #2144]
    1de4:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1de8:	ldr	q1, [x12, #2160]
    1dec:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1df0:	ldr	q2, [x12, #2176]
    1df4:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    1df8:	ldr	q3, [x12, #2192]
    1dfc:	mov	w10, #0xaaab                	// #43691
    1e00:	mov	w13, wzr
    1e04:	mov	w14, #0x1                   	// #1
    1e08:	mov	w9, #0xb                   	// #11
    1e0c:	movk	w10, #0xaaaa, lsl #16
    1e10:	mov	w11, #0x60                  	// #96
    1e14:	mov	w12, #0xfffffffa            	// #-6
    1e18:	mvni	v4.4s, #0x5
    1e1c:	movi	v5.16b, #0x3f
    1e20:	movi	v6.16b, #0x20
    1e24:	movi	v7.16b, #0x60
    1e28:	mvni	v16.4s, #0x5f
    1e2c:	lsl	w8, w8, #8
    1e30:	tbz	w14, #0, 1e3c <PyInit_binascii@@Base+0x438>
    1e34:	ldrb	w14, [x19]
    1e38:	orr	w8, w8, w14
    1e3c:	cmn	w13, #0x2
    1e40:	add	w17, w13, #0x8
    1e44:	b.lt	1e6c <PyInit_binascii@@Base+0x468>  // b.tstop
    1e48:	cmp	w17, #0xb
    1e4c:	csel	w14, w17, w9, lt  // lt = tstop
    1e50:	sub	w13, w13, w14
    1e54:	add	w13, w13, #0xd
    1e58:	cmp	w13, #0x5a
    1e5c:	b.cs	1e74 <PyInit_binascii@@Base+0x470>  // b.hs, b.nlast
    1e60:	mov	x14, x1
    1e64:	mov	w13, w17
    1e68:	b	1f28 <PyInit_binascii@@Base+0x524>
    1e6c:	mov	w13, w17
    1e70:	b	1f58 <PyInit_binascii@@Base+0x554>
    1e74:	umull	x13, w13, w10
    1e78:	lsr	x13, x13, #34
    1e7c:	add	w15, w13, #0x1
    1e80:	dup	v20.4s, w17
    1e84:	and	x16, x15, #0x7ffffff0
    1e88:	add	v17.4s, v20.4s, v0.4s
    1e8c:	add	v18.4s, v20.4s, v1.4s
    1e90:	add	v19.4s, v20.4s, v2.4s
    1e94:	add	v20.4s, v20.4s, v3.4s
    1e98:	add	x14, x1, x16
    1e9c:	madd	w13, w16, w12, w17
    1ea0:	dup	v21.4s, w8
    1ea4:	mov	x17, x16
    1ea8:	add	v22.4s, v18.4s, v4.4s
    1eac:	add	v24.4s, v20.4s, v4.4s
    1eb0:	add	v23.4s, v17.4s, v4.4s
    1eb4:	add	v25.4s, v19.4s, v4.4s
    1eb8:	neg	v24.4s, v24.4s
    1ebc:	neg	v22.4s, v22.4s
    1ec0:	neg	v25.4s, v25.4s
    1ec4:	neg	v23.4s, v23.4s
    1ec8:	ushl	v24.4s, v21.4s, v24.4s
    1ecc:	ushl	v22.4s, v21.4s, v22.4s
    1ed0:	ushl	v25.4s, v21.4s, v25.4s
    1ed4:	ushl	v23.4s, v21.4s, v23.4s
    1ed8:	xtn	v22.4h, v22.4s
    1edc:	xtn	v24.4h, v24.4s
    1ee0:	xtn2	v22.8h, v23.4s
    1ee4:	xtn2	v24.8h, v25.4s
    1ee8:	xtn	v23.8b, v24.8h
    1eec:	xtn2	v23.16b, v22.8h
    1ef0:	and	v22.16b, v23.16b, v5.16b
    1ef4:	cmeq	v23.16b, v22.16b, #0
    1ef8:	add	v22.16b, v22.16b, v6.16b
    1efc:	bsl	v23.16b, v7.16b, v22.16b
    1f00:	add	v20.4s, v20.4s, v16.4s
    1f04:	add	v19.4s, v19.4s, v16.4s
    1f08:	add	v18.4s, v18.4s, v16.4s
    1f0c:	subs	x17, x17, #0x10
    1f10:	str	q23, [x1], #16
    1f14:	add	v17.4s, v17.4s, v16.4s
    1f18:	b.ne	1ea8 <PyInit_binascii@@Base+0x4a4>  // b.any
    1f1c:	cmp	x16, x15
    1f20:	mov	x1, x14
    1f24:	b.eq	1f58 <PyInit_binascii@@Base+0x554>  // b.none
    1f28:	mov	x1, x14
    1f2c:	mov	w14, w13
    1f30:	sub	w13, w14, #0x6
    1f34:	lsr	w15, w8, w13
    1f38:	and	w16, w15, #0x3f
    1f3c:	tst	w15, #0x3f
    1f40:	add	w15, w16, #0x20
    1f44:	csel	w15, w11, w15, eq  // eq = none
    1f48:	cmp	w14, #0xb
    1f4c:	strb	w15, [x1], #1
    1f50:	mov	w14, w13
    1f54:	b.gt	1f30 <PyInit_binascii@@Base+0x52c>
    1f58:	sub	x21, x21, #0x1
    1f5c:	cmp	x21, #0x0
    1f60:	add	x19, x19, #0x1
    1f64:	cset	w14, gt
    1f68:	b.gt	1e2c <PyInit_binascii@@Base+0x428>
    1f6c:	cbnz	w13, 1e2c <PyInit_binascii@@Base+0x428>
    1f70:	b	2114 <PyInit_binascii@@Base+0x710>
    1f74:	ldr	x0, [x20, #8]
    1f78:	bl	1910 <_PyLong_AsInt@plt>
    1f7c:	mov	w20, w0
    1f80:	cmn	w0, #0x1
    1f84:	b.ne	1ce4 <PyInit_binascii@@Base+0x2e0>  // b.any
    1f88:	bl	1870 <PyErr_Occurred@plt>
    1f8c:	cbnz	x0, 1c94 <PyInit_binascii@@Base+0x290>
    1f90:	mov	w20, #0xffffffff            	// #-1
    1f94:	b	1ce4 <PyInit_binascii@@Base+0x2e0>
    1f98:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    1f9c:	ldr	q0, [x11, #2144]
    1fa0:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    1fa4:	ldr	q1, [x11, #2160]
    1fa8:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    1fac:	ldr	q2, [x11, #2176]
    1fb0:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    1fb4:	ldr	q3, [x11, #2192]
    1fb8:	mov	w10, #0xaaab                	// #43691
    1fbc:	mov	w12, wzr
    1fc0:	mov	w13, #0x1                   	// #1
    1fc4:	mov	w9, #0xb                   	// #11
    1fc8:	movk	w10, #0xaaaa, lsl #16
    1fcc:	mov	w11, #0xfffffffa            	// #-6
    1fd0:	mvni	v4.4s, #0x5
    1fd4:	movi	v5.16b, #0x3f
    1fd8:	movi	v6.16b, #0x20
    1fdc:	mvni	v7.4s, #0x5f
    1fe0:	lsl	w8, w8, #8
    1fe4:	tbz	w13, #0, 1ff0 <PyInit_binascii@@Base+0x5ec>
    1fe8:	ldrb	w13, [x19]
    1fec:	orr	w8, w8, w13
    1ff0:	cmn	w12, #0x2
    1ff4:	add	w16, w12, #0x8
    1ff8:	b.lt	2020 <PyInit_binascii@@Base+0x61c>  // b.tstop
    1ffc:	cmp	w16, #0xb
    2000:	csel	w13, w16, w9, lt  // lt = tstop
    2004:	sub	w12, w12, w13
    2008:	add	w12, w12, #0xd
    200c:	cmp	w12, #0x59
    2010:	b.hi	2028 <PyInit_binascii@@Base+0x624>  // b.pmore
    2014:	mov	x13, x1
    2018:	mov	w12, w16
    201c:	b	20d4 <PyInit_binascii@@Base+0x6d0>
    2020:	mov	w12, w16
    2024:	b	20fc <PyInit_binascii@@Base+0x6f8>
    2028:	umull	x12, w12, w10
    202c:	lsr	x12, x12, #34
    2030:	add	w14, w12, #0x1
    2034:	dup	v19.4s, w16
    2038:	and	x15, x14, #0x7ffffff0
    203c:	add	v16.4s, v19.4s, v0.4s
    2040:	add	v17.4s, v19.4s, v1.4s
    2044:	add	v18.4s, v19.4s, v2.4s
    2048:	add	v19.4s, v19.4s, v3.4s
    204c:	add	x13, x1, x15
    2050:	madd	w12, w15, w11, w16
    2054:	dup	v20.4s, w8
    2058:	mov	x16, x15
    205c:	add	v21.4s, v17.4s, v4.4s
    2060:	add	v23.4s, v19.4s, v4.4s
    2064:	add	v22.4s, v16.4s, v4.4s
    2068:	add	v24.4s, v18.4s, v4.4s
    206c:	neg	v23.4s, v23.4s
    2070:	neg	v21.4s, v21.4s
    2074:	neg	v24.4s, v24.4s
    2078:	neg	v22.4s, v22.4s
    207c:	ushl	v23.4s, v20.4s, v23.4s
    2080:	ushl	v21.4s, v20.4s, v21.4s
    2084:	ushl	v24.4s, v20.4s, v24.4s
    2088:	ushl	v22.4s, v20.4s, v22.4s
    208c:	xtn	v21.4h, v21.4s
    2090:	xtn	v23.4h, v23.4s
    2094:	xtn2	v21.8h, v22.4s
    2098:	xtn2	v23.8h, v24.4s
    209c:	xtn	v22.8b, v23.8h
    20a0:	xtn2	v22.16b, v21.8h
    20a4:	and	v21.16b, v22.16b, v5.16b
    20a8:	add	v21.16b, v21.16b, v6.16b
    20ac:	add	v19.4s, v19.4s, v7.4s
    20b0:	add	v18.4s, v18.4s, v7.4s
    20b4:	add	v17.4s, v17.4s, v7.4s
    20b8:	subs	x16, x16, #0x10
    20bc:	str	q21, [x1], #16
    20c0:	add	v16.4s, v16.4s, v7.4s
    20c4:	b.ne	205c <PyInit_binascii@@Base+0x658>  // b.any
    20c8:	cmp	x15, x14
    20cc:	mov	x1, x13
    20d0:	b.eq	20fc <PyInit_binascii@@Base+0x6f8>  // b.none
    20d4:	mov	x1, x13
    20d8:	mov	w13, w12
    20dc:	sub	w12, w13, #0x6
    20e0:	lsr	w14, w8, w12
    20e4:	and	w14, w14, #0x3f
    20e8:	add	w14, w14, #0x20
    20ec:	cmp	w13, #0xb
    20f0:	strb	w14, [x1], #1
    20f4:	mov	w13, w12
    20f8:	b.gt	20dc <PyInit_binascii@@Base+0x6d8>
    20fc:	sub	x21, x21, #0x1
    2100:	cmp	x21, #0x0
    2104:	add	x19, x19, #0x1
    2108:	cset	w13, gt
    210c:	b.gt	1fe0 <PyInit_binascii@@Base+0x5dc>
    2110:	cbnz	w12, 1fe0 <PyInit_binascii@@Base+0x5dc>
    2114:	mov	w8, #0xa                   	// #10
    2118:	strb	w8, [x1], #1
    211c:	add	x0, sp, #0x78
    2120:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2124:	mov	x19, x0
    2128:	b	1c98 <PyInit_binascii@@Base+0x294>
    212c:	stp	x29, x30, [sp, #-80]!
    2130:	str	x28, [sp, #16]
    2134:	stp	x24, x23, [sp, #32]
    2138:	stp	x22, x21, [sp, #48]
    213c:	stp	x20, x19, [sp, #64]
    2140:	mov	x29, sp
    2144:	sub	sp, sp, #0x280
    2148:	mov	x8, x1
    214c:	mov	x19, x0
    2150:	movi	v0.2d, #0x0
    2154:	mov	x1, sp
    2158:	mov	x0, x8
    215c:	stp	q0, q0, [sp, #48]
    2160:	stp	q0, q0, [sp, #16]
    2164:	str	q0, [sp]
    2168:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    216c:	cbz	w0, 2374 <PyInit_binascii@@Base+0x970>
    2170:	ldr	x21, [sp, #16]
    2174:	mov	x8, #0xfffffffffffffffd    	// #-3
    2178:	movk	x8, #0x7fff, lsl #48
    217c:	cmp	x21, x8
    2180:	b.lt	2190 <PyInit_binascii@@Base+0x78c>  // b.tstop
    2184:	bl	1790 <PyErr_NoMemory@plt>
    2188:	mov	x19, x0
    218c:	b	2378 <PyInit_binascii@@Base+0x974>
    2190:	add	x8, x21, #0x3
    2194:	ldr	x22, [sp]
    2198:	add	x9, x21, #0x6
    219c:	cmp	x8, #0x0
    21a0:	csel	x8, x9, x8, lt  // lt = tstop
    21a4:	asr	x8, x8, #2
    21a8:	add	x0, sp, #0x58
    21ac:	add	x20, x8, x8, lsl #1
    21b0:	bl	1800 <_PyBytesWriter_Init@plt>
    21b4:	add	x0, sp, #0x58
    21b8:	mov	x1, x20
    21bc:	bl	1830 <_PyBytesWriter_Alloc@plt>
    21c0:	cbz	x0, 2374 <PyInit_binascii@@Base+0x970>
    21c4:	mov	x20, x0
    21c8:	cmp	x21, #0x1
    21cc:	b.lt	234c <PyInit_binascii@@Base+0x948>  // b.tstop
    21d0:	adrp	x9, 5000 <PyInit_binascii@@Base+0x35fc>
    21d4:	mov	w11, wzr
    21d8:	mov	w8, wzr
    21dc:	mov	w24, wzr
    21e0:	add	x9, x9, #0x256
    21e4:	mov	w10, #0xffffffff            	// #-1
    21e8:	mov	x23, x20
    21ec:	b	2210 <PyInit_binascii@@Base+0x80c>
    21f0:	sub	w24, w24, #0x2
    21f4:	lsr	w12, w8, w24
    21f8:	lsl	w13, w10, w24
    21fc:	strb	w12, [x23], #1
    2200:	bic	w8, w8, w13
    2204:	subs	x21, x21, #0x1
    2208:	add	x22, x22, #0x1
    220c:	b.le	2300 <PyInit_binascii@@Base+0x8fc>
    2210:	ldrsb	w12, [x22]
    2214:	tbnz	w12, #31, 2204 <PyInit_binascii@@Base+0x800>
    2218:	and	x12, x12, #0xff
    221c:	cmp	w12, #0x1f
    2220:	b.gt	2238 <PyInit_binascii@@Base+0x834>
    2224:	cmp	w12, #0xa
    2228:	b.eq	2204 <PyInit_binascii@@Base+0x800>  // b.none
    222c:	cmp	w12, #0xd
    2230:	b.eq	2204 <PyInit_binascii@@Base+0x800>  // b.none
    2234:	b	22c4 <PyInit_binascii@@Base+0x8c0>
    2238:	cmp	w12, #0x20
    223c:	b.eq	2204 <PyInit_binascii@@Base+0x800>  // b.none
    2240:	cmp	w12, #0x3d
    2244:	b.ne	22c4 <PyInit_binascii@@Base+0x8c0>  // b.any
    2248:	cmp	w11, #0x2
    224c:	b.lt	2204 <PyInit_binascii@@Base+0x800>  // b.tstop
    2250:	b.ne	2348 <PyInit_binascii@@Base+0x944>  // b.any
    2254:	mov	w11, #0x1                   	// #1
    2258:	mov	w14, #0x3d                  	// #61
    225c:	mov	x12, x21
    2260:	mov	w13, #0x1                   	// #1
    2264:	sxtb	w15, w14
    2268:	tbnz	w15, #31, 2298 <PyInit_binascii@@Base+0x894>
    226c:	and	w14, w14, #0xff
    2270:	and	x15, x14, #0x7f
    2274:	ldrb	w15, [x9, x15]
    2278:	cmp	w15, #0xff
    227c:	b.eq	2298 <PyInit_binascii@@Base+0x894>  // b.none
    2280:	cmp	w13, #0x0
    2284:	csinv	w14, w14, wzr, eq  // eq = none
    2288:	sub	w13, w13, #0x1
    228c:	cmp	x12, #0x2
    2290:	b.ge	22a4 <PyInit_binascii@@Base+0x8a0>  // b.tcont
    2294:	b	22f0 <PyInit_binascii@@Base+0x8ec>
    2298:	mov	w14, #0xffffffff            	// #-1
    229c:	cmp	x12, #0x2
    22a0:	b.lt	22f0 <PyInit_binascii@@Base+0x8ec>  // b.tstop
    22a4:	cmn	w14, #0x1
    22a8:	b.ne	22f0 <PyInit_binascii@@Base+0x8ec>  // b.any
    22ac:	ldrb	w14, [x22, x11]
    22b0:	sub	x12, x12, #0x1
    22b4:	add	x11, x11, #0x1
    22b8:	sxtb	w15, w14
    22bc:	tbz	w15, #31, 226c <PyInit_binascii@@Base+0x868>
    22c0:	b	2298 <PyInit_binascii@@Base+0x894>
    22c4:	ldrb	w12, [x9, x12]
    22c8:	cmp	w12, #0xff
    22cc:	b.eq	2204 <PyInit_binascii@@Base+0x800>  // b.none
    22d0:	add	w11, w11, #0x1
    22d4:	add	w13, w24, #0x6
    22d8:	and	w11, w11, #0x3
    22dc:	cmp	w13, #0x8
    22e0:	orr	w8, w12, w8, lsl #6
    22e4:	b.ge	21f0 <PyInit_binascii@@Base+0x7ec>  // b.tcont
    22e8:	mov	w24, w13
    22ec:	b	2204 <PyInit_binascii@@Base+0x800>
    22f0:	cmp	w14, #0x3d
    22f4:	b.eq	2348 <PyInit_binascii@@Base+0x944>  // b.none
    22f8:	mov	w11, #0x2                   	// #2
    22fc:	b	2204 <PyInit_binascii@@Base+0x800>
    2300:	cbz	w24, 2348 <PyInit_binascii@@Base+0x944>
    2304:	mov	x0, x19
    2308:	bl	17e0 <PyModule_GetState@plt>
    230c:	cbz	x0, 2374 <PyInit_binascii@@Base+0x970>
    2310:	ldr	x0, [x0]
    2314:	cmp	w24, #0x6
    2318:	b.ne	2360 <PyInit_binascii@@Base+0x95c>  // b.any
    231c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    2320:	sub	x8, x23, x20
    2324:	movk	x9, #0x5556
    2328:	smulh	x8, x8, x9
    232c:	add	x8, x8, x8, lsr #63
    2330:	mov	w2, #0x1                   	// #1
    2334:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2338:	bfi	x2, x8, #2, #62
    233c:	add	x1, x1, #0x78e
    2340:	bl	18f0 <PyErr_Format@plt>
    2344:	b	236c <PyInit_binascii@@Base+0x968>
    2348:	mov	x20, x23
    234c:	add	x0, sp, #0x58
    2350:	mov	x1, x20
    2354:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2358:	mov	x19, x0
    235c:	b	2378 <PyInit_binascii@@Base+0x974>
    2360:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2364:	add	x1, x1, #0x7f3
    2368:	bl	17c0 <PyErr_SetString@plt>
    236c:	add	x0, sp, #0x58
    2370:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    2374:	mov	x19, xzr
    2378:	ldr	x8, [sp, #8]
    237c:	cbz	x8, 2388 <PyInit_binascii@@Base+0x984>
    2380:	mov	x0, sp
    2384:	bl	1730 <PyBuffer_Release@plt>
    2388:	mov	x0, x19
    238c:	add	sp, sp, #0x280
    2390:	ldp	x20, x19, [sp, #64]
    2394:	ldp	x22, x21, [sp, #48]
    2398:	ldp	x24, x23, [sp, #32]
    239c:	ldr	x28, [sp, #16]
    23a0:	ldp	x29, x30, [sp], #80
    23a4:	ret
    23a8:	stp	x29, x30, [sp, #-64]!
    23ac:	str	x28, [sp, #16]
    23b0:	stp	x22, x21, [sp, #32]
    23b4:	stp	x20, x19, [sp, #48]
    23b8:	mov	x29, sp
    23bc:	sub	sp, sp, #0x2a0
    23c0:	mov	x21, x2
    23c4:	mov	x19, x1
    23c8:	mov	x20, x0
    23cc:	cbz	x3, 23d8 <PyInit_binascii@@Base+0x9d4>
    23d0:	ldr	x22, [x3, #16]
    23d4:	b	23dc <PyInit_binascii@@Base+0x9d8>
    23d8:	mov	x22, xzr
    23dc:	movi	v0.2d, #0x0
    23e0:	stp	q0, q0, [sp, #64]
    23e4:	stp	q0, q0, [sp, #32]
    23e8:	str	q0, [sp, #16]
    23ec:	cbz	x19, 23fc <PyInit_binascii@@Base+0x9f8>
    23f0:	cmp	x21, #0x1
    23f4:	b.ne	23fc <PyInit_binascii@@Base+0x9f8>  // b.any
    23f8:	cbz	x3, 2430 <PyInit_binascii@@Base+0xa2c>
    23fc:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2400:	add	x8, sp, #0x68
    2404:	add	x4, x4, #0x408
    2408:	mov	w5, #0x1                   	// #1
    240c:	mov	w6, #0x1                   	// #1
    2410:	mov	x0, x19
    2414:	mov	x1, x21
    2418:	mov	x2, xzr
    241c:	mov	w7, wzr
    2420:	str	x8, [sp]
    2424:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2428:	mov	x19, x0
    242c:	cbz	x0, 2448 <PyInit_binascii@@Base+0xa44>
    2430:	ldr	x0, [x19]
    2434:	add	x1, sp, #0x10
    2438:	mov	w2, wzr
    243c:	bl	1880 <PyObject_GetBuffer@plt>
    2440:	cbz	w0, 2474 <PyInit_binascii@@Base+0xa70>
    2444:	mov	x19, xzr
    2448:	ldr	x8, [sp, #24]
    244c:	cbz	x8, 2458 <PyInit_binascii@@Base+0xa54>
    2450:	add	x0, sp, #0x10
    2454:	bl	1730 <PyBuffer_Release@plt>
    2458:	mov	x0, x19
    245c:	add	sp, sp, #0x2a0
    2460:	ldp	x20, x19, [sp, #48]
    2464:	ldp	x22, x21, [sp, #32]
    2468:	ldr	x28, [sp, #16]
    246c:	ldp	x29, x30, [sp], #64
    2470:	ret
    2474:	add	x0, sp, #0x10
    2478:	mov	w1, #0x43                  	// #67
    247c:	bl	1760 <PyBuffer_IsContiguous@plt>
    2480:	cbz	w0, 24cc <PyInit_binascii@@Base+0xac8>
    2484:	add	x8, x22, x21
    2488:	cmp	x8, #0x1
    248c:	b.ne	24f0 <PyInit_binascii@@Base+0xaec>  // b.any
    2490:	mov	w19, #0xffffffff            	// #-1
    2494:	ldr	x21, [sp, #16]
    2498:	ldr	x22, [sp, #32]
    249c:	add	x0, sp, #0x78
    24a0:	bl	1800 <_PyBytesWriter_Init@plt>
    24a4:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    24a8:	cmp	x22, x8
    24ac:	b.lt	2534 <PyInit_binascii@@Base+0xb30>  // b.tstop
    24b0:	mov	x0, x20
    24b4:	bl	17e0 <PyModule_GetState@plt>
    24b8:	cbz	x0, 2444 <PyInit_binascii@@Base+0xa40>
    24bc:	ldr	x0, [x0]
    24c0:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    24c4:	add	x1, x1, #0x80d
    24c8:	b	252c <PyInit_binascii@@Base+0xb28>
    24cc:	ldr	x3, [x19]
    24d0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    24d4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    24d8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    24dc:	add	x0, x0, #0x5f8
    24e0:	add	x1, x1, #0x733
    24e4:	add	x2, x2, #0x73e
    24e8:	bl	1810 <_PyArg_BadArgument@plt>
    24ec:	b	2444 <PyInit_binascii@@Base+0xa40>
    24f0:	ldr	x8, [x19, #8]
    24f4:	ldr	x0, [x8, #8]
    24f8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    24fc:	ldr	x8, [x8, #4016]
    2500:	cmp	x0, x8
    2504:	b.eq	2518 <PyInit_binascii@@Base+0xb14>  // b.none
    2508:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    250c:	ldr	x1, [x1, #4016]
    2510:	bl	18e0 <PyType_IsSubtype@plt>
    2514:	cbz	w0, 25f4 <PyInit_binascii@@Base+0xbf0>
    2518:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    251c:	ldr	x8, [x8, #4040]
    2520:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2524:	add	x1, x1, #0x750
    2528:	ldr	x0, [x8]
    252c:	bl	17c0 <PyErr_SetString@plt>
    2530:	b	2444 <PyInit_binascii@@Base+0xa40>
    2534:	cmp	w19, #0x0
    2538:	mov	w8, #0x2                   	// #2
    253c:	cinc	x8, x8, ne  // ne = any
    2540:	add	x1, x8, x22, lsl #1
    2544:	add	x0, sp, #0x78
    2548:	bl	1830 <_PyBytesWriter_Alloc@plt>
    254c:	cbz	x0, 2444 <PyInit_binascii@@Base+0xa40>
    2550:	mov	x1, x0
    2554:	cmp	x22, #0x1
    2558:	b.lt	2634 <PyInit_binascii@@Base+0xc30>  // b.tstop
    255c:	adrp	x8, 5000 <PyInit_binascii@@Base+0x35fc>
    2560:	mov	w9, wzr
    2564:	mov	w11, wzr
    2568:	add	x8, x8, #0x82b
    256c:	b	2580 <PyInit_binascii@@Base+0xb7c>
    2570:	add	w11, w11, #0x8
    2574:	subs	x22, x22, #0x1
    2578:	add	x21, x21, #0x1
    257c:	b.le	25c8 <PyInit_binascii@@Base+0xbc4>
    2580:	ldrb	w10, [x21]
    2584:	lsl	w9, w9, #8
    2588:	cmn	w11, #0x2
    258c:	orr	x9, x9, x10
    2590:	b.lt	2570 <PyInit_binascii@@Base+0xb6c>  // b.tstop
    2594:	add	w11, w11, #0xe
    2598:	sub	w12, w11, #0xc
    259c:	lsr	x12, x9, x12
    25a0:	and	x12, x12, #0x3f
    25a4:	ldrb	w12, [x8, x12]
    25a8:	sub	w11, w11, #0x6
    25ac:	cmp	w11, #0xb
    25b0:	strb	w12, [x1], #1
    25b4:	b.gt	2598 <PyInit_binascii@@Base+0xb94>
    25b8:	sub	w11, w11, #0x6
    25bc:	subs	x22, x22, #0x1
    25c0:	add	x21, x21, #0x1
    25c4:	b.gt	2580 <PyInit_binascii@@Base+0xb7c>
    25c8:	cmp	w11, #0x4
    25cc:	b.eq	2614 <PyInit_binascii@@Base+0xc10>  // b.none
    25d0:	cmp	w11, #0x2
    25d4:	b.ne	2634 <PyInit_binascii@@Base+0xc30>  // b.any
    25d8:	lsl	w9, w10, #4
    25dc:	and	x9, x9, #0x30
    25e0:	ldrb	w8, [x8, x9]
    25e4:	mov	w9, #0x3d3d                	// #15677
    25e8:	sturh	w9, [x1, #1]
    25ec:	strb	w8, [x1], #3
    25f0:	b	2634 <PyInit_binascii@@Base+0xc30>
    25f4:	ldr	x0, [x19, #8]
    25f8:	bl	1910 <_PyLong_AsInt@plt>
    25fc:	mov	w19, w0
    2600:	cmn	w0, #0x1
    2604:	b.ne	2494 <PyInit_binascii@@Base+0xa90>  // b.any
    2608:	bl	1870 <PyErr_Occurred@plt>
    260c:	cbnz	x0, 2444 <PyInit_binascii@@Base+0xa40>
    2610:	b	2490 <PyInit_binascii@@Base+0xa8c>
    2614:	lsl	w9, w10, #2
    2618:	and	x9, x9, #0x3c
    261c:	ldrb	w8, [x8, x9]
    2620:	mov	w9, #0x3d                  	// #61
    2624:	strb	w9, [x1, #1]
    2628:	strb	w8, [x1]
    262c:	add	x8, x1, #0x2
    2630:	mov	x1, x8
    2634:	cbz	w19, 2640 <PyInit_binascii@@Base+0xc3c>
    2638:	mov	w8, #0xa                   	// #10
    263c:	strb	w8, [x1], #1
    2640:	add	x0, sp, #0x78
    2644:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2648:	mov	x19, x0
    264c:	ldr	x8, [sp, #24]
    2650:	cbnz	x8, 2450 <PyInit_binascii@@Base+0xa4c>
    2654:	b	2458 <PyInit_binascii@@Base+0xa54>
    2658:	stp	x29, x30, [sp, #-48]!
    265c:	stp	x28, x21, [sp, #16]
    2660:	stp	x20, x19, [sp, #32]
    2664:	mov	x29, sp
    2668:	sub	sp, sp, #0x280
    266c:	mov	x8, x1
    2670:	mov	x19, x0
    2674:	movi	v0.2d, #0x0
    2678:	mov	x1, sp
    267c:	mov	x0, x8
    2680:	stp	q0, q0, [sp, #48]
    2684:	stp	q0, q0, [sp, #16]
    2688:	str	q0, [sp]
    268c:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    2690:	cbz	w0, 27d8 <PyInit_binascii@@Base+0xdd4>
    2694:	ldr	x20, [sp]
    2698:	ldr	x21, [sp, #16]
    269c:	add	x0, sp, #0x58
    26a0:	bl	1800 <_PyBytesWriter_Init@plt>
    26a4:	mov	x8, #0x7ffffffffffffffe    	// #9223372036854775806
    26a8:	cmp	x21, x8
    26ac:	b.lt	26c4 <PyInit_binascii@@Base+0xcc0>  // b.tstop
    26b0:	bl	1790 <PyErr_NoMemory@plt>
    26b4:	mov	x19, x0
    26b8:	ldr	x8, [sp, #8]
    26bc:	cbnz	x8, 27e4 <PyInit_binascii@@Base+0xde0>
    26c0:	b	27ec <PyInit_binascii@@Base+0xde8>
    26c4:	add	x1, x21, #0x2
    26c8:	add	x0, sp, #0x58
    26cc:	bl	1830 <_PyBytesWriter_Alloc@plt>
    26d0:	cbz	x0, 27d8 <PyInit_binascii@@Base+0xdd4>
    26d4:	mov	x1, x0
    26d8:	cmp	x21, #0x1
    26dc:	b.lt	2780 <PyInit_binascii@@Base+0xd7c>  // b.tstop
    26e0:	adrp	x11, 5000 <PyInit_binascii@@Base+0x35fc>
    26e4:	mov	w8, wzr
    26e8:	mov	w10, wzr
    26ec:	add	x9, x21, #0x1
    26f0:	add	x11, x11, #0x2d6
    26f4:	mov	w12, #0xffffffff            	// #-1
    26f8:	b	2720 <PyInit_binascii@@Base+0xd1c>
    26fc:	sub	w10, w10, #0x2
    2700:	lsr	w13, w8, w10
    2704:	lsl	w14, w12, w10
    2708:	strb	w13, [x1], #1
    270c:	bic	w8, w8, w14
    2710:	sub	x9, x9, #0x1
    2714:	cmp	x9, #0x1
    2718:	add	x20, x20, #0x1
    271c:	b.le	2760 <PyInit_binascii@@Base+0xd5c>
    2720:	ldrb	w13, [x20]
    2724:	cmp	w13, #0xa
    2728:	b.eq	2710 <PyInit_binascii@@Base+0xd0c>  // b.none
    272c:	cmp	w13, #0xd
    2730:	b.eq	2710 <PyInit_binascii@@Base+0xd0c>  // b.none
    2734:	ldrb	w14, [x11, x13]
    2738:	cmp	w14, #0x7d
    273c:	b.eq	27b4 <PyInit_binascii@@Base+0xdb0>  // b.none
    2740:	cmp	w13, #0x3a
    2744:	b.eq	2804 <PyInit_binascii@@Base+0xe00>  // b.none
    2748:	add	w13, w10, #0x6
    274c:	cmp	w13, #0x8
    2750:	orr	w8, w14, w8, lsl #6
    2754:	b.ge	26fc <PyInit_binascii@@Base+0xcf8>  // b.tcont
    2758:	mov	w10, w13
    275c:	b	2710 <PyInit_binascii@@Base+0xd0c>
    2760:	cbz	w10, 2780 <PyInit_binascii@@Base+0xd7c>
    2764:	mov	x0, x19
    2768:	bl	17e0 <PyModule_GetState@plt>
    276c:	cbz	x0, 27d8 <PyInit_binascii@@Base+0xdd4>
    2770:	ldr	x0, [x0, #8]
    2774:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2778:	add	x1, x1, #0x86c
    277c:	b	27cc <PyInit_binascii@@Base+0xdc8>
    2780:	mov	w19, wzr
    2784:	add	x0, sp, #0x58
    2788:	bl	17d0 <_PyBytesWriter_Finish@plt>
    278c:	cbz	x0, 27d8 <PyInit_binascii@@Base+0xdd4>
    2790:	mov	x1, x0
    2794:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2798:	add	x0, x0, #0x892
    279c:	mov	w2, w19
    27a0:	bl	1900 <_Py_BuildValue_SizeT@plt>
    27a4:	mov	x19, x0
    27a8:	ldr	x8, [sp, #8]
    27ac:	cbnz	x8, 27e4 <PyInit_binascii@@Base+0xde0>
    27b0:	b	27ec <PyInit_binascii@@Base+0xde8>
    27b4:	mov	x0, x19
    27b8:	bl	17e0 <PyModule_GetState@plt>
    27bc:	cbz	x0, 27d8 <PyInit_binascii@@Base+0xdd4>
    27c0:	ldr	x0, [x0]
    27c4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    27c8:	add	x1, x1, #0x70c
    27cc:	bl	17c0 <PyErr_SetString@plt>
    27d0:	add	x0, sp, #0x58
    27d4:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    27d8:	mov	x19, xzr
    27dc:	ldr	x8, [sp, #8]
    27e0:	cbz	x8, 27ec <PyInit_binascii@@Base+0xde8>
    27e4:	mov	x0, sp
    27e8:	bl	1730 <PyBuffer_Release@plt>
    27ec:	mov	x0, x19
    27f0:	add	sp, sp, #0x280
    27f4:	ldp	x20, x19, [sp, #32]
    27f8:	ldp	x28, x21, [sp, #16]
    27fc:	ldp	x29, x30, [sp], #48
    2800:	ret
    2804:	mov	w19, #0x1                   	// #1
    2808:	add	x0, sp, #0x58
    280c:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2810:	cbnz	x0, 2790 <PyInit_binascii@@Base+0xd8c>
    2814:	b	27d8 <PyInit_binascii@@Base+0xdd4>
    2818:	stp	x29, x30, [sp, #-48]!
    281c:	str	x28, [sp, #16]
    2820:	stp	x20, x19, [sp, #32]
    2824:	mov	x29, sp
    2828:	sub	sp, sp, #0x280
    282c:	mov	x19, x1
    2830:	movi	v0.2d, #0x0
    2834:	mov	x1, sp
    2838:	mov	x0, x19
    283c:	mov	w2, wzr
    2840:	stp	q0, q0, [sp, #48]
    2844:	stp	q0, q0, [sp, #16]
    2848:	str	q0, [sp]
    284c:	bl	1880 <PyObject_GetBuffer@plt>
    2850:	cbz	w0, 2880 <PyInit_binascii@@Base+0xe7c>
    2854:	mov	x19, xzr
    2858:	ldr	x8, [sp, #8]
    285c:	cbz	x8, 2868 <PyInit_binascii@@Base+0xe64>
    2860:	mov	x0, sp
    2864:	bl	1730 <PyBuffer_Release@plt>
    2868:	mov	x0, x19
    286c:	add	sp, sp, #0x280
    2870:	ldp	x20, x19, [sp, #32]
    2874:	ldr	x28, [sp, #16]
    2878:	ldp	x29, x30, [sp], #48
    287c:	ret
    2880:	mov	x0, sp
    2884:	mov	w1, #0x43                  	// #67
    2888:	bl	1760 <PyBuffer_IsContiguous@plt>
    288c:	cbz	w0, 28c0 <PyInit_binascii@@Base+0xebc>
    2890:	ldr	x19, [sp]
    2894:	ldr	x20, [sp, #16]
    2898:	add	x0, sp, #0x58
    289c:	bl	1800 <_PyBytesWriter_Init@plt>
    28a0:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    28a4:	cmp	x20, x8
    28a8:	b.lt	28f0 <PyInit_binascii@@Base+0xeec>  // b.tstop
    28ac:	bl	1790 <PyErr_NoMemory@plt>
    28b0:	mov	x19, x0
    28b4:	ldr	x8, [sp, #8]
    28b8:	cbnz	x8, 2860 <PyInit_binascii@@Base+0xe5c>
    28bc:	b	2868 <PyInit_binascii@@Base+0xe64>
    28c0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    28c4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    28c8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    28cc:	add	x0, x0, #0x60b
    28d0:	add	x1, x1, #0x895
    28d4:	add	x2, x2, #0x73e
    28d8:	mov	x3, x19
    28dc:	bl	1810 <_PyArg_BadArgument@plt>
    28e0:	mov	x19, xzr
    28e4:	ldr	x8, [sp, #8]
    28e8:	cbnz	x8, 2860 <PyInit_binascii@@Base+0xe5c>
    28ec:	b	2868 <PyInit_binascii@@Base+0xe64>
    28f0:	lsl	x8, x20, #1
    28f4:	add	x1, x8, #0x2
    28f8:	add	x0, sp, #0x58
    28fc:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2900:	cbz	x0, 2854 <PyInit_binascii@@Base+0xe50>
    2904:	mov	x1, x0
    2908:	cmp	x20, #0x1
    290c:	b.lt	2998 <PyInit_binascii@@Base+0xf94>  // b.tstop
    2910:	adrp	x8, 5000 <PyInit_binascii@@Base+0x35fc>
    2914:	mov	w9, wzr
    2918:	mov	w10, wzr
    291c:	add	x8, x8, #0x89e
    2920:	b	2934 <PyInit_binascii@@Base+0xf30>
    2924:	add	w10, w10, #0x8
    2928:	subs	x20, x20, #0x1
    292c:	add	x19, x19, #0x1
    2930:	b.le	297c <PyInit_binascii@@Base+0xf78>
    2934:	ldrb	w11, [x19]
    2938:	lsl	w9, w9, #8
    293c:	cmn	w10, #0x2
    2940:	orr	x9, x9, x11
    2944:	b.lt	2924 <PyInit_binascii@@Base+0xf20>  // b.tstop
    2948:	add	w10, w10, #0xe
    294c:	sub	w11, w10, #0xc
    2950:	lsr	x11, x9, x11
    2954:	and	x11, x11, #0x3f
    2958:	ldrb	w11, [x8, x11]
    295c:	sub	w10, w10, #0x6
    2960:	cmp	w10, #0xb
    2964:	strb	w11, [x1], #1
    2968:	b.gt	294c <PyInit_binascii@@Base+0xf48>
    296c:	sub	w10, w10, #0x6
    2970:	subs	x20, x20, #0x1
    2974:	add	x19, x19, #0x1
    2978:	b.gt	2934 <PyInit_binascii@@Base+0xf30>
    297c:	cbz	w10, 2998 <PyInit_binascii@@Base+0xf94>
    2980:	mov	w11, #0x6                   	// #6
    2984:	sub	w10, w11, w10
    2988:	lsl	w9, w9, w10
    298c:	and	x9, x9, #0x3f
    2990:	ldrb	w8, [x8, x9]
    2994:	strb	w8, [x1], #1
    2998:	add	x0, sp, #0x58
    299c:	bl	17d0 <_PyBytesWriter_Finish@plt>
    29a0:	mov	x19, x0
    29a4:	ldr	x8, [sp, #8]
    29a8:	cbnz	x8, 2860 <PyInit_binascii@@Base+0xe5c>
    29ac:	b	2868 <PyInit_binascii@@Base+0xe64>
    29b0:	sub	sp, sp, #0x70
    29b4:	stp	x29, x30, [sp, #80]
    29b8:	str	x19, [sp, #96]
    29bc:	add	x29, sp, #0x50
    29c0:	mov	x8, x1
    29c4:	mov	x19, x0
    29c8:	movi	v0.2d, #0x0
    29cc:	mov	x1, sp
    29d0:	mov	x0, x8
    29d4:	stp	q0, q0, [sp, #48]
    29d8:	stp	q0, q0, [sp, #16]
    29dc:	str	q0, [sp]
    29e0:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    29e4:	cbz	w0, 2a20 <PyInit_binascii@@Base+0x101c>
    29e8:	ldr	x1, [sp]
    29ec:	ldr	x2, [sp, #16]
    29f0:	mov	x0, x19
    29f4:	bl	4698 <PyInit_binascii@@Base+0x2c94>
    29f8:	mov	x19, x0
    29fc:	ldr	x8, [sp, #8]
    2a00:	cbz	x8, 2a0c <PyInit_binascii@@Base+0x1008>
    2a04:	mov	x0, sp
    2a08:	bl	1730 <PyBuffer_Release@plt>
    2a0c:	mov	x0, x19
    2a10:	ldr	x19, [sp, #96]
    2a14:	ldp	x29, x30, [sp, #80]
    2a18:	add	sp, sp, #0x70
    2a1c:	ret
    2a20:	mov	x19, xzr
    2a24:	ldr	x8, [sp, #8]
    2a28:	cbnz	x8, 2a04 <PyInit_binascii@@Base+0x1000>
    2a2c:	b	2a0c <PyInit_binascii@@Base+0x1008>
    2a30:	sub	sp, sp, #0xb0
    2a34:	stp	x29, x30, [sp, #128]
    2a38:	str	x21, [sp, #144]
    2a3c:	stp	x20, x19, [sp, #160]
    2a40:	add	x29, sp, #0x80
    2a44:	mov	x20, x2
    2a48:	mov	x19, x1
    2a4c:	cbz	x3, 2a58 <PyInit_binascii@@Base+0x1054>
    2a50:	ldr	x21, [x3, #16]
    2a54:	b	2a5c <PyInit_binascii@@Base+0x1058>
    2a58:	mov	x21, xzr
    2a5c:	movi	v0.2d, #0x0
    2a60:	stp	q0, q0, [sp, #64]
    2a64:	stp	q0, q0, [sp, #32]
    2a68:	str	q0, [sp, #16]
    2a6c:	cbz	x19, 2a80 <PyInit_binascii@@Base+0x107c>
    2a70:	sub	x8, x20, #0x1
    2a74:	cmp	x8, #0x2
    2a78:	b.hi	2a80 <PyInit_binascii@@Base+0x107c>  // b.pmore
    2a7c:	cbz	x3, 2ab4 <PyInit_binascii@@Base+0x10b0>
    2a80:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2a84:	sub	x8, x29, #0x18
    2a88:	add	x4, x4, #0x448
    2a8c:	mov	w5, #0x1                   	// #1
    2a90:	mov	w6, #0x3                   	// #3
    2a94:	mov	x0, x19
    2a98:	mov	x1, x20
    2a9c:	mov	x2, xzr
    2aa0:	mov	w7, wzr
    2aa4:	str	x8, [sp]
    2aa8:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2aac:	mov	x19, x0
    2ab0:	cbz	x0, 2b54 <PyInit_binascii@@Base+0x1150>
    2ab4:	ldr	x0, [x19]
    2ab8:	add	x1, sp, #0x10
    2abc:	mov	w2, wzr
    2ac0:	bl	1880 <PyObject_GetBuffer@plt>
    2ac4:	cbz	w0, 2ad8 <PyInit_binascii@@Base+0x10d4>
    2ac8:	mov	x19, xzr
    2acc:	ldr	x8, [sp, #24]
    2ad0:	cbnz	x8, 2b5c <PyInit_binascii@@Base+0x1158>
    2ad4:	b	2b64 <PyInit_binascii@@Base+0x1160>
    2ad8:	add	x0, sp, #0x10
    2adc:	mov	w1, #0x43                  	// #67
    2ae0:	bl	1760 <PyBuffer_IsContiguous@plt>
    2ae4:	cbz	w0, 2afc <PyInit_binascii@@Base+0x10f8>
    2ae8:	add	x8, x21, x20
    2aec:	cmp	x8, #0x1
    2af0:	b.ne	2b2c <PyInit_binascii@@Base+0x1128>  // b.any
    2af4:	mov	x20, xzr
    2af8:	b	2b3c <PyInit_binascii@@Base+0x1138>
    2afc:	ldr	x3, [x19]
    2b00:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2b04:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2b08:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2b0c:	add	x0, x0, #0x61b
    2b10:	add	x1, x1, #0x920
    2b14:	add	x2, x2, #0x73e
    2b18:	bl	1810 <_PyArg_BadArgument@plt>
    2b1c:	mov	x19, xzr
    2b20:	ldr	x8, [sp, #24]
    2b24:	cbnz	x8, 2b5c <PyInit_binascii@@Base+0x1158>
    2b28:	b	2b64 <PyInit_binascii@@Base+0x1160>
    2b2c:	ldr	x20, [x19, #8]
    2b30:	cmp	x8, #0x2
    2b34:	b.ne	2b7c <PyInit_binascii@@Base+0x1178>  // b.any
    2b38:	cbz	x20, 2b7c <PyInit_binascii@@Base+0x1178>
    2b3c:	mov	w3, #0x1                   	// #1
    2b40:	ldr	x0, [sp, #16]
    2b44:	ldr	x1, [sp, #32]
    2b48:	mov	x2, x20
    2b4c:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    2b50:	mov	x19, x0
    2b54:	ldr	x8, [sp, #24]
    2b58:	cbz	x8, 2b64 <PyInit_binascii@@Base+0x1160>
    2b5c:	add	x0, sp, #0x10
    2b60:	bl	1730 <PyBuffer_Release@plt>
    2b64:	mov	x0, x19
    2b68:	ldp	x20, x19, [sp, #160]
    2b6c:	ldr	x21, [sp, #144]
    2b70:	ldp	x29, x30, [sp, #128]
    2b74:	add	sp, sp, #0xb0
    2b78:	ret
    2b7c:	ldr	x8, [x19, #16]
    2b80:	ldr	x0, [x8, #8]
    2b84:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2b88:	ldr	x8, [x8, #4016]
    2b8c:	cmp	x0, x8
    2b90:	b.eq	2ba4 <PyInit_binascii@@Base+0x11a0>  // b.none
    2b94:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2b98:	ldr	x1, [x1, #4016]
    2b9c:	bl	18e0 <PyType_IsSubtype@plt>
    2ba0:	cbz	w0, 2bcc <PyInit_binascii@@Base+0x11c8>
    2ba4:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2ba8:	ldr	x8, [x8, #4040]
    2bac:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2bb0:	add	x1, x1, #0x750
    2bb4:	ldr	x0, [x8]
    2bb8:	bl	17c0 <PyErr_SetString@plt>
    2bbc:	mov	x19, xzr
    2bc0:	ldr	x8, [sp, #24]
    2bc4:	cbnz	x8, 2b5c <PyInit_binascii@@Base+0x1158>
    2bc8:	b	2b64 <PyInit_binascii@@Base+0x1160>
    2bcc:	ldr	x0, [x19, #16]
    2bd0:	bl	1910 <_PyLong_AsInt@plt>
    2bd4:	cmn	w0, #0x1
    2bd8:	b.eq	2be4 <PyInit_binascii@@Base+0x11e0>  // b.none
    2bdc:	mov	w3, w0
    2be0:	b	2b40 <PyInit_binascii@@Base+0x113c>
    2be4:	bl	1870 <PyErr_Occurred@plt>
    2be8:	cbnz	x0, 2ac8 <PyInit_binascii@@Base+0x10c4>
    2bec:	mov	w3, #0xffffffff            	// #-1
    2bf0:	b	2b40 <PyInit_binascii@@Base+0x113c>
    2bf4:	sub	sp, sp, #0xb0
    2bf8:	stp	x29, x30, [sp, #128]
    2bfc:	str	x21, [sp, #144]
    2c00:	stp	x20, x19, [sp, #160]
    2c04:	add	x29, sp, #0x80
    2c08:	mov	x20, x2
    2c0c:	mov	x19, x1
    2c10:	cbz	x3, 2c1c <PyInit_binascii@@Base+0x1218>
    2c14:	ldr	x21, [x3, #16]
    2c18:	b	2c20 <PyInit_binascii@@Base+0x121c>
    2c1c:	mov	x21, xzr
    2c20:	movi	v0.2d, #0x0
    2c24:	stp	q0, q0, [sp, #64]
    2c28:	stp	q0, q0, [sp, #32]
    2c2c:	str	q0, [sp, #16]
    2c30:	cbz	x19, 2c44 <PyInit_binascii@@Base+0x1240>
    2c34:	sub	x8, x20, #0x1
    2c38:	cmp	x8, #0x2
    2c3c:	b.hi	2c44 <PyInit_binascii@@Base+0x1240>  // b.pmore
    2c40:	cbz	x3, 2c78 <PyInit_binascii@@Base+0x1274>
    2c44:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2c48:	sub	x8, x29, #0x18
    2c4c:	add	x4, x4, #0x488
    2c50:	mov	w5, #0x1                   	// #1
    2c54:	mov	w6, #0x3                   	// #3
    2c58:	mov	x0, x19
    2c5c:	mov	x1, x20
    2c60:	mov	x2, xzr
    2c64:	mov	w7, wzr
    2c68:	str	x8, [sp]
    2c6c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2c70:	mov	x19, x0
    2c74:	cbz	x0, 2d18 <PyInit_binascii@@Base+0x1314>
    2c78:	ldr	x0, [x19]
    2c7c:	add	x1, sp, #0x10
    2c80:	mov	w2, wzr
    2c84:	bl	1880 <PyObject_GetBuffer@plt>
    2c88:	cbz	w0, 2c9c <PyInit_binascii@@Base+0x1298>
    2c8c:	mov	x19, xzr
    2c90:	ldr	x8, [sp, #24]
    2c94:	cbnz	x8, 2d20 <PyInit_binascii@@Base+0x131c>
    2c98:	b	2d28 <PyInit_binascii@@Base+0x1324>
    2c9c:	add	x0, sp, #0x10
    2ca0:	mov	w1, #0x43                  	// #67
    2ca4:	bl	1760 <PyBuffer_IsContiguous@plt>
    2ca8:	cbz	w0, 2cc0 <PyInit_binascii@@Base+0x12bc>
    2cac:	add	x8, x21, x20
    2cb0:	cmp	x8, #0x1
    2cb4:	b.ne	2cf0 <PyInit_binascii@@Base+0x12ec>  // b.any
    2cb8:	mov	x20, xzr
    2cbc:	b	2d00 <PyInit_binascii@@Base+0x12fc>
    2cc0:	ldr	x3, [x19]
    2cc4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2cc8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2ccc:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2cd0:	add	x0, x0, #0x625
    2cd4:	add	x1, x1, #0x920
    2cd8:	add	x2, x2, #0x73e
    2cdc:	bl	1810 <_PyArg_BadArgument@plt>
    2ce0:	mov	x19, xzr
    2ce4:	ldr	x8, [sp, #24]
    2ce8:	cbnz	x8, 2d20 <PyInit_binascii@@Base+0x131c>
    2cec:	b	2d28 <PyInit_binascii@@Base+0x1324>
    2cf0:	ldr	x20, [x19, #8]
    2cf4:	cmp	x8, #0x2
    2cf8:	b.ne	2d40 <PyInit_binascii@@Base+0x133c>  // b.any
    2cfc:	cbz	x20, 2d40 <PyInit_binascii@@Base+0x133c>
    2d00:	mov	w3, #0x1                   	// #1
    2d04:	ldr	x0, [sp, #16]
    2d08:	ldr	x1, [sp, #32]
    2d0c:	mov	x2, x20
    2d10:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    2d14:	mov	x19, x0
    2d18:	ldr	x8, [sp, #24]
    2d1c:	cbz	x8, 2d28 <PyInit_binascii@@Base+0x1324>
    2d20:	add	x0, sp, #0x10
    2d24:	bl	1730 <PyBuffer_Release@plt>
    2d28:	mov	x0, x19
    2d2c:	ldp	x20, x19, [sp, #160]
    2d30:	ldr	x21, [sp, #144]
    2d34:	ldp	x29, x30, [sp, #128]
    2d38:	add	sp, sp, #0xb0
    2d3c:	ret
    2d40:	ldr	x8, [x19, #16]
    2d44:	ldr	x0, [x8, #8]
    2d48:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2d4c:	ldr	x8, [x8, #4016]
    2d50:	cmp	x0, x8
    2d54:	b.eq	2d68 <PyInit_binascii@@Base+0x1364>  // b.none
    2d58:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2d5c:	ldr	x1, [x1, #4016]
    2d60:	bl	18e0 <PyType_IsSubtype@plt>
    2d64:	cbz	w0, 2d90 <PyInit_binascii@@Base+0x138c>
    2d68:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2d6c:	ldr	x8, [x8, #4040]
    2d70:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2d74:	add	x1, x1, #0x750
    2d78:	ldr	x0, [x8]
    2d7c:	bl	17c0 <PyErr_SetString@plt>
    2d80:	mov	x19, xzr
    2d84:	ldr	x8, [sp, #24]
    2d88:	cbnz	x8, 2d20 <PyInit_binascii@@Base+0x131c>
    2d8c:	b	2d28 <PyInit_binascii@@Base+0x1324>
    2d90:	ldr	x0, [x19, #16]
    2d94:	bl	1910 <_PyLong_AsInt@plt>
    2d98:	cmn	w0, #0x1
    2d9c:	b.eq	2da8 <PyInit_binascii@@Base+0x13a4>  // b.none
    2da0:	mov	w3, w0
    2da4:	b	2d04 <PyInit_binascii@@Base+0x1300>
    2da8:	bl	1870 <PyErr_Occurred@plt>
    2dac:	cbnz	x0, 2c8c <PyInit_binascii@@Base+0x1288>
    2db0:	mov	w3, #0xffffffff            	// #-1
    2db4:	b	2d04 <PyInit_binascii@@Base+0x1300>
    2db8:	sub	sp, sp, #0x70
    2dbc:	stp	x29, x30, [sp, #80]
    2dc0:	str	x19, [sp, #96]
    2dc4:	add	x29, sp, #0x50
    2dc8:	mov	x8, x1
    2dcc:	mov	x19, x0
    2dd0:	movi	v0.2d, #0x0
    2dd4:	mov	x1, sp
    2dd8:	mov	x0, x8
    2ddc:	stp	q0, q0, [sp, #48]
    2de0:	stp	q0, q0, [sp, #16]
    2de4:	str	q0, [sp]
    2de8:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    2dec:	cbz	w0, 2e28 <PyInit_binascii@@Base+0x1424>
    2df0:	ldr	x1, [sp]
    2df4:	ldr	x2, [sp, #16]
    2df8:	mov	x0, x19
    2dfc:	bl	4698 <PyInit_binascii@@Base+0x2c94>
    2e00:	mov	x19, x0
    2e04:	ldr	x8, [sp, #8]
    2e08:	cbz	x8, 2e14 <PyInit_binascii@@Base+0x1410>
    2e0c:	mov	x0, sp
    2e10:	bl	1730 <PyBuffer_Release@plt>
    2e14:	mov	x0, x19
    2e18:	ldr	x19, [sp, #96]
    2e1c:	ldp	x29, x30, [sp, #80]
    2e20:	add	sp, sp, #0x70
    2e24:	ret
    2e28:	mov	x19, xzr
    2e2c:	ldr	x8, [sp, #8]
    2e30:	cbnz	x8, 2e0c <PyInit_binascii@@Base+0x1408>
    2e34:	b	2e14 <PyInit_binascii@@Base+0x1410>
    2e38:	stp	x29, x30, [sp, #-48]!
    2e3c:	str	x28, [sp, #16]
    2e40:	stp	x20, x19, [sp, #32]
    2e44:	mov	x29, sp
    2e48:	sub	sp, sp, #0x280
    2e4c:	mov	x19, x1
    2e50:	movi	v0.2d, #0x0
    2e54:	mov	x1, sp
    2e58:	mov	x0, x19
    2e5c:	mov	w2, wzr
    2e60:	stp	q0, q0, [sp, #48]
    2e64:	stp	q0, q0, [sp, #16]
    2e68:	str	q0, [sp]
    2e6c:	bl	1880 <PyObject_GetBuffer@plt>
    2e70:	cbz	w0, 2ea0 <PyInit_binascii@@Base+0x149c>
    2e74:	mov	x19, xzr
    2e78:	ldr	x8, [sp, #8]
    2e7c:	cbz	x8, 2e88 <PyInit_binascii@@Base+0x1484>
    2e80:	mov	x0, sp
    2e84:	bl	1730 <PyBuffer_Release@plt>
    2e88:	mov	x0, x19
    2e8c:	add	sp, sp, #0x280
    2e90:	ldp	x20, x19, [sp, #32]
    2e94:	ldr	x28, [sp, #16]
    2e98:	ldp	x29, x30, [sp], #48
    2e9c:	ret
    2ea0:	mov	x0, sp
    2ea4:	mov	w1, #0x43                  	// #67
    2ea8:	bl	1760 <PyBuffer_IsContiguous@plt>
    2eac:	cbz	w0, 2edc <PyInit_binascii@@Base+0x14d8>
    2eb0:	add	x0, sp, #0x58
    2eb4:	bl	1800 <_PyBytesWriter_Init@plt>
    2eb8:	ldr	x19, [sp, #16]
    2ebc:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    2ec0:	cmp	x19, x8
    2ec4:	b.lt	2f0c <PyInit_binascii@@Base+0x1508>  // b.tstop
    2ec8:	bl	1790 <PyErr_NoMemory@plt>
    2ecc:	mov	x19, x0
    2ed0:	ldr	x8, [sp, #8]
    2ed4:	cbnz	x8, 2e80 <PyInit_binascii@@Base+0x147c>
    2ed8:	b	2e88 <PyInit_binascii@@Base+0x1484>
    2edc:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2ee0:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2ee4:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2ee8:	add	x0, x0, #0x62d
    2eec:	add	x1, x1, #0x895
    2ef0:	add	x2, x2, #0x73e
    2ef4:	mov	x3, x19
    2ef8:	bl	1810 <_PyArg_BadArgument@plt>
    2efc:	mov	x19, xzr
    2f00:	ldr	x8, [sp, #8]
    2f04:	cbnz	x8, 2e80 <PyInit_binascii@@Base+0x147c>
    2f08:	b	2e88 <PyInit_binascii@@Base+0x1484>
    2f0c:	ldr	x20, [sp]
    2f10:	lsl	x8, x19, #1
    2f14:	add	x1, x8, #0x2
    2f18:	add	x0, sp, #0x58
    2f1c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2f20:	cbz	x0, 2e74 <PyInit_binascii@@Base+0x1470>
    2f24:	mov	x1, x0
    2f28:	cmp	x19, #0x1
    2f2c:	b.lt	2fc8 <PyInit_binascii@@Base+0x15c4>  // b.tstop
    2f30:	mov	x10, xzr
    2f34:	add	x8, x20, #0x1
    2f38:	mov	w9, #0x90                  	// #144
    2f3c:	b	2f50 <PyInit_binascii@@Base+0x154c>
    2f40:	strh	w9, [x1], #2
    2f44:	add	x10, x10, #0x1
    2f48:	cmp	x10, x19
    2f4c:	b.ge	2fc8 <PyInit_binascii@@Base+0x15c4>  // b.tcont
    2f50:	ldrb	w11, [x20, x10]
    2f54:	cmp	w11, #0x90
    2f58:	b.eq	2f40 <PyInit_binascii@@Base+0x153c>  // b.none
    2f5c:	mov	x16, xzr
    2f60:	add	x13, x10, #0xff
    2f64:	add	x14, x8, x10
    2f68:	add	x12, x10, x16
    2f6c:	mov	x15, x16
    2f70:	add	x16, x12, #0x1
    2f74:	cmp	x16, x19
    2f78:	b.ge	2f94 <PyInit_binascii@@Base+0x1590>  // b.tcont
    2f7c:	cmp	x16, x13
    2f80:	b.ge	2f94 <PyInit_binascii@@Base+0x1590>  // b.tcont
    2f84:	ldrb	w16, [x14, x15]
    2f88:	cmp	w16, w11
    2f8c:	add	x16, x15, #0x1
    2f90:	b.eq	2f68 <PyInit_binascii@@Base+0x1564>  // b.none
    2f94:	add	x13, x15, #0x1
    2f98:	mov	x14, x1
    2f9c:	cmp	x13, #0x4
    2fa0:	strb	w11, [x14], #1
    2fa4:	b.lt	2fc0 <PyInit_binascii@@Base+0x15bc>  // b.tstop
    2fa8:	add	x10, x1, #0x3
    2fac:	strb	w9, [x1, #1]
    2fb0:	strb	w13, [x1, #2]
    2fb4:	mov	x1, x10
    2fb8:	mov	x10, x12
    2fbc:	b	2f44 <PyInit_binascii@@Base+0x1540>
    2fc0:	mov	x1, x14
    2fc4:	b	2f44 <PyInit_binascii@@Base+0x1540>
    2fc8:	add	x0, sp, #0x58
    2fcc:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2fd0:	mov	x19, x0
    2fd4:	ldr	x8, [sp, #8]
    2fd8:	cbnz	x8, 2e80 <PyInit_binascii@@Base+0x147c>
    2fdc:	b	2e88 <PyInit_binascii@@Base+0x1484>
    2fe0:	stp	x29, x30, [sp, #-80]!
    2fe4:	stp	x28, x25, [sp, #16]
    2fe8:	stp	x24, x23, [sp, #32]
    2fec:	stp	x22, x21, [sp, #48]
    2ff0:	stp	x20, x19, [sp, #64]
    2ff4:	mov	x29, sp
    2ff8:	sub	sp, sp, #0x280
    2ffc:	mov	x20, x1
    3000:	mov	x19, x0
    3004:	movi	v0.2d, #0x0
    3008:	mov	x1, sp
    300c:	mov	x0, x20
    3010:	mov	w2, wzr
    3014:	stp	q0, q0, [sp, #48]
    3018:	stp	q0, q0, [sp, #16]
    301c:	str	q0, [sp]
    3020:	bl	1880 <PyObject_GetBuffer@plt>
    3024:	cbz	w0, 305c <PyInit_binascii@@Base+0x1658>
    3028:	mov	x19, xzr
    302c:	ldr	x8, [sp, #8]
    3030:	cbz	x8, 303c <PyInit_binascii@@Base+0x1638>
    3034:	mov	x0, sp
    3038:	bl	1730 <PyBuffer_Release@plt>
    303c:	mov	x0, x19
    3040:	add	sp, sp, #0x280
    3044:	ldp	x20, x19, [sp, #64]
    3048:	ldp	x22, x21, [sp, #48]
    304c:	ldp	x24, x23, [sp, #32]
    3050:	ldp	x28, x25, [sp, #16]
    3054:	ldp	x29, x30, [sp], #80
    3058:	ret
    305c:	mov	x0, sp
    3060:	mov	w1, #0x43                  	// #67
    3064:	bl	1760 <PyBuffer_IsContiguous@plt>
    3068:	cbz	w0, 30a0 <PyInit_binascii@@Base+0x169c>
    306c:	ldr	x21, [sp]
    3070:	ldr	x20, [sp, #16]
    3074:	add	x0, sp, #0x58
    3078:	bl	1800 <_PyBytesWriter_Init@plt>
    307c:	cbz	x20, 30d0 <PyInit_binascii@@Base+0x16cc>
    3080:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    3084:	cmp	x20, x8
    3088:	b.lt	30f0 <PyInit_binascii@@Base+0x16ec>  // b.tstop
    308c:	bl	1790 <PyErr_NoMemory@plt>
    3090:	mov	x19, x0
    3094:	ldr	x8, [sp, #8]
    3098:	cbnz	x8, 3034 <PyInit_binascii@@Base+0x1630>
    309c:	b	303c <PyInit_binascii@@Base+0x1638>
    30a0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    30a4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    30a8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    30ac:	add	x0, x0, #0x639
    30b0:	add	x1, x1, #0x895
    30b4:	add	x2, x2, #0x73e
    30b8:	mov	x3, x20
    30bc:	bl	1810 <_PyArg_BadArgument@plt>
    30c0:	mov	x19, xzr
    30c4:	ldr	x8, [sp, #8]
    30c8:	cbnz	x8, 3034 <PyInit_binascii@@Base+0x1630>
    30cc:	b	303c <PyInit_binascii@@Base+0x1638>
    30d0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    30d4:	add	x0, x0, #0x92f
    30d8:	mov	x1, xzr
    30dc:	bl	1770 <PyBytes_FromStringAndSize@plt>
    30e0:	mov	x19, x0
    30e4:	ldr	x8, [sp, #8]
    30e8:	cbnz	x8, 3034 <PyInit_binascii@@Base+0x1630>
    30ec:	b	303c <PyInit_binascii@@Base+0x1638>
    30f0:	add	x0, sp, #0x58
    30f4:	mov	x1, x20
    30f8:	bl	1830 <_PyBytesWriter_Alloc@plt>
    30fc:	cbz	x0, 3028 <PyInit_binascii@@Base+0x1624>
    3100:	mov	w8, #0x1                   	// #1
    3104:	subs	x22, x20, #0x1
    3108:	str	w8, [sp, #116]
    310c:	b.mi	3200 <PyInit_binascii@@Base+0x17fc>  // b.first
    3110:	mov	x8, x21
    3114:	ldrb	w9, [x8], #1
    3118:	mov	x1, x0
    311c:	cmp	w9, #0x90
    3120:	b.ne	315c <PyInit_binascii@@Base+0x1758>  // b.any
    3124:	subs	x22, x20, #0x2
    3128:	b.mi	3200 <PyInit_binascii@@Base+0x17fc>  // b.first
    312c:	ldr	x10, [sp, #104]
    3130:	ldrb	w8, [x8]
    3134:	sub	x10, x10, #0x1
    3138:	str	x10, [sp, #104]
    313c:	cbz	w8, 3158 <PyInit_binascii@@Base+0x1754>
    3140:	mov	x0, x19
    3144:	bl	17e0 <PyModule_GetState@plt>
    3148:	cbz	x0, 3028 <PyInit_binascii@@Base+0x1624>
    314c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3150:	add	x1, x1, #0x930
    3154:	b	3218 <PyInit_binascii@@Base+0x1814>
    3158:	add	x8, x21, #0x2
    315c:	cmp	x22, #0x1
    3160:	strb	w9, [x1], #1
    3164:	b.lt	322c <PyInit_binascii@@Base+0x1828>  // b.tstop
    3168:	mov	w23, #0x90                  	// #144
    316c:	mov	x24, x8
    3170:	b	3188 <PyInit_binascii@@Base+0x1784>
    3174:	sub	x22, x22, #0x1
    3178:	strb	w9, [x1], #1
    317c:	cmp	x22, #0x0
    3180:	mov	x8, x24
    3184:	b.le	322c <PyInit_binascii@@Base+0x1828>
    3188:	ldrb	w9, [x24], #1
    318c:	cmp	w9, #0x90
    3190:	b.ne	3174 <PyInit_binascii@@Base+0x1770>  // b.any
    3194:	cmp	x22, #0x1
    3198:	b.le	3200 <PyInit_binascii@@Base+0x17fc>
    319c:	ldr	x9, [sp, #104]
    31a0:	ldrb	w25, [x8, #1]
    31a4:	sub	x22, x22, #0x2
    31a8:	add	x24, x8, #0x2
    31ac:	sub	x8, x9, #0x1
    31b0:	str	x8, [sp, #104]
    31b4:	cbz	x25, 31f8 <PyInit_binascii@@Base+0x17f4>
    31b8:	cmp	w25, #0x1
    31bc:	b.eq	317c <PyInit_binascii@@Base+0x1778>  // b.none
    31c0:	ldurb	w20, [x1, #-1]
    31c4:	sub	x2, x25, #0x1
    31c8:	add	x0, sp, #0x58
    31cc:	bl	17a0 <_PyBytesWriter_Prepare@plt>
    31d0:	cbz	x0, 3220 <PyInit_binascii@@Base+0x181c>
    31d4:	sub	w8, w25, #0x1
    31d8:	and	x2, x8, #0xff
    31dc:	mov	w1, w20
    31e0:	mov	x21, x0
    31e4:	bl	17f0 <memset@plt>
    31e8:	sub	w8, w25, #0x2
    31ec:	add	x8, x21, w8, uxtb
    31f0:	add	x1, x8, #0x1
    31f4:	b	317c <PyInit_binascii@@Base+0x1778>
    31f8:	strb	w23, [x1], #1
    31fc:	b	317c <PyInit_binascii@@Base+0x1778>
    3200:	mov	x0, x19
    3204:	bl	17e0 <PyModule_GetState@plt>
    3208:	cbz	x0, 3028 <PyInit_binascii@@Base+0x1624>
    320c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3210:	add	x0, x0, #0x8
    3214:	add	x1, x1, #0x92f
    3218:	ldr	x0, [x0]
    321c:	bl	17c0 <PyErr_SetString@plt>
    3220:	add	x0, sp, #0x58
    3224:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    3228:	b	3028 <PyInit_binascii@@Base+0x1624>
    322c:	add	x0, sp, #0x58
    3230:	bl	17d0 <_PyBytesWriter_Finish@plt>
    3234:	mov	x19, x0
    3238:	ldr	x8, [sp, #8]
    323c:	cbnz	x8, 3034 <PyInit_binascii@@Base+0x1630>
    3240:	b	303c <PyInit_binascii@@Base+0x1638>
    3244:	sub	sp, sp, #0x70
    3248:	stp	x29, x30, [sp, #80]
    324c:	str	x19, [sp, #96]
    3250:	add	x29, sp, #0x50
    3254:	mov	x19, x1
    3258:	movi	v0.2d, #0x0
    325c:	cmp	x2, #0x2
    3260:	stp	q0, q0, [sp, #48]
    3264:	stp	q0, q0, [sp, #16]
    3268:	str	q0, [sp]
    326c:	b.eq	3290 <PyInit_binascii@@Base+0x188c>  // b.none
    3270:	mov	x8, x2
    3274:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3278:	add	x0, x0, #0x647
    327c:	mov	w2, #0x2                   	// #2
    3280:	mov	w3, #0x2                   	// #2
    3284:	mov	x1, x8
    3288:	bl	1860 <_PyArg_CheckPositional@plt>
    328c:	cbz	w0, 32f4 <PyInit_binascii@@Base+0x18f0>
    3290:	ldr	x0, [x19]
    3294:	mov	x1, sp
    3298:	mov	w2, wzr
    329c:	bl	1880 <PyObject_GetBuffer@plt>
    32a0:	cbnz	w0, 32f4 <PyInit_binascii@@Base+0x18f0>
    32a4:	mov	x0, sp
    32a8:	mov	w1, #0x43                  	// #67
    32ac:	bl	1760 <PyBuffer_IsContiguous@plt>
    32b0:	cbz	w0, 331c <PyInit_binascii@@Base+0x1918>
    32b4:	ldr	x8, [x19, #8]
    32b8:	ldr	x0, [x8, #8]
    32bc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    32c0:	ldr	x8, [x8, #4016]
    32c4:	cmp	x0, x8
    32c8:	b.eq	32dc <PyInit_binascii@@Base+0x18d8>  // b.none
    32cc:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    32d0:	ldr	x1, [x1, #4016]
    32d4:	bl	18e0 <PyType_IsSubtype@plt>
    32d8:	cbz	w0, 334c <PyInit_binascii@@Base+0x1948>
    32dc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    32e0:	ldr	x8, [x8, #4040]
    32e4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    32e8:	add	x1, x1, #0x750
    32ec:	ldr	x0, [x8]
    32f0:	bl	17c0 <PyErr_SetString@plt>
    32f4:	mov	x19, xzr
    32f8:	ldr	x8, [sp, #8]
    32fc:	cbz	x8, 3308 <PyInit_binascii@@Base+0x1904>
    3300:	mov	x0, sp
    3304:	bl	1730 <PyBuffer_Release@plt>
    3308:	mov	x0, x19
    330c:	ldr	x19, [sp, #96]
    3310:	ldp	x29, x30, [sp, #80]
    3314:	add	sp, sp, #0x70
    3318:	ret
    331c:	ldr	x3, [x19]
    3320:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3324:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3328:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    332c:	add	x0, x0, #0x647
    3330:	add	x1, x1, #0x733
    3334:	add	x2, x2, #0x73e
    3338:	bl	1810 <_PyArg_BadArgument@plt>
    333c:	mov	x19, xzr
    3340:	ldr	x8, [sp, #8]
    3344:	cbnz	x8, 3300 <PyInit_binascii@@Base+0x18fc>
    3348:	b	3308 <PyInit_binascii@@Base+0x1904>
    334c:	ldr	x0, [x19, #8]
    3350:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    3354:	cmn	w0, #0x1
    3358:	b.eq	33b0 <PyInit_binascii@@Base+0x19ac>  // b.none
    335c:	ldr	x9, [sp, #16]
    3360:	and	w0, w0, #0xffff
    3364:	cmp	x9, #0x1
    3368:	b.lt	339c <PyInit_binascii@@Base+0x1998>  // b.tstop
    336c:	ldr	x8, [sp]
    3370:	adrp	x10, 5000 <PyInit_binascii@@Base+0x35fc>
    3374:	add	x9, x9, #0x1
    3378:	add	x10, x10, #0x3d6
    337c:	ldrb	w11, [x8], #1
    3380:	ubfiz	w12, w0, #8, #8
    3384:	sub	x9, x9, #0x1
    3388:	cmp	x9, #0x1
    338c:	eor	w11, w11, w0, lsr #8
    3390:	ldrh	w11, [x10, w11, uxtw #1]
    3394:	eor	w0, w12, w11
    3398:	b.gt	337c <PyInit_binascii@@Base+0x1978>
    339c:	bl	1890 <PyLong_FromUnsignedLong@plt>
    33a0:	mov	x19, x0
    33a4:	ldr	x8, [sp, #8]
    33a8:	cbnz	x8, 3300 <PyInit_binascii@@Base+0x18fc>
    33ac:	b	3308 <PyInit_binascii@@Base+0x1904>
    33b0:	bl	1870 <PyErr_Occurred@plt>
    33b4:	cbnz	x0, 32f4 <PyInit_binascii@@Base+0x18f0>
    33b8:	ldr	x9, [sp, #16]
    33bc:	cmp	x9, #0x1
    33c0:	b.lt	33fc <PyInit_binascii@@Base+0x19f8>  // b.tstop
    33c4:	ldr	x8, [sp]
    33c8:	adrp	x10, 5000 <PyInit_binascii@@Base+0x35fc>
    33cc:	add	x9, x9, #0x1
    33d0:	mov	w0, #0xffff                	// #65535
    33d4:	add	x10, x10, #0x3d6
    33d8:	ldrb	w11, [x8], #1
    33dc:	ubfiz	w12, w0, #8, #8
    33e0:	sub	x9, x9, #0x1
    33e4:	cmp	x9, #0x1
    33e8:	eor	w11, w11, w0, lsr #8
    33ec:	ldrh	w11, [x10, w11, uxtw #1]
    33f0:	eor	w0, w12, w11
    33f4:	b.gt	33d8 <PyInit_binascii@@Base+0x19d4>
    33f8:	b	339c <PyInit_binascii@@Base+0x1998>
    33fc:	mov	w0, #0xffff                	// #65535
    3400:	bl	1890 <PyLong_FromUnsignedLong@plt>
    3404:	mov	x19, x0
    3408:	ldr	x8, [sp, #8]
    340c:	cbnz	x8, 3300 <PyInit_binascii@@Base+0x18fc>
    3410:	b	3308 <PyInit_binascii@@Base+0x1904>
    3414:	sub	sp, sp, #0x70
    3418:	stp	x29, x30, [sp, #80]
    341c:	stp	x20, x19, [sp, #96]
    3420:	add	x29, sp, #0x50
    3424:	sub	x8, x2, #0x1
    3428:	mov	x20, x2
    342c:	mov	x19, x1
    3430:	movi	v0.2d, #0x0
    3434:	cmp	x8, #0x2
    3438:	stp	q0, q0, [sp, #48]
    343c:	stp	q0, q0, [sp, #16]
    3440:	str	q0, [sp]
    3444:	b.cc	3464 <PyInit_binascii@@Base+0x1a60>  // b.lo, b.ul, b.last
    3448:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    344c:	add	x0, x0, #0x64f
    3450:	mov	w2, #0x1                   	// #1
    3454:	mov	w3, #0x2                   	// #2
    3458:	mov	x1, x20
    345c:	bl	1860 <_PyArg_CheckPositional@plt>
    3460:	cbz	w0, 3478 <PyInit_binascii@@Base+0x1a74>
    3464:	ldr	x0, [x19]
    3468:	mov	x1, sp
    346c:	mov	w2, wzr
    3470:	bl	1880 <PyObject_GetBuffer@plt>
    3474:	cbz	w0, 34a0 <PyInit_binascii@@Base+0x1a9c>
    3478:	mov	x19, xzr
    347c:	ldr	x8, [sp, #8]
    3480:	cbz	x8, 348c <PyInit_binascii@@Base+0x1a88>
    3484:	mov	x0, sp
    3488:	bl	1730 <PyBuffer_Release@plt>
    348c:	mov	x0, x19
    3490:	ldp	x20, x19, [sp, #96]
    3494:	ldp	x29, x30, [sp, #80]
    3498:	add	sp, sp, #0x70
    349c:	ret
    34a0:	mov	x0, sp
    34a4:	mov	w1, #0x43                  	// #67
    34a8:	bl	1760 <PyBuffer_IsContiguous@plt>
    34ac:	cbz	w0, 34f0 <PyInit_binascii@@Base+0x1aec>
    34b0:	cmp	x20, #0x2
    34b4:	b.ge	3520 <PyInit_binascii@@Base+0x1b1c>  // b.tcont
    34b8:	mov	x0, xzr
    34bc:	ldr	x1, [sp]
    34c0:	ldr	w2, [sp, #16]
    34c4:	and	x0, x0, #0xffffffff
    34c8:	bl	1750 <crc32@plt>
    34cc:	mov	x19, x0
    34d0:	cmn	w19, #0x1
    34d4:	b.eq	3570 <PyInit_binascii@@Base+0x1b6c>  // b.none
    34d8:	and	x0, x19, #0xffffffff
    34dc:	bl	1890 <PyLong_FromUnsignedLong@plt>
    34e0:	mov	x19, x0
    34e4:	ldr	x8, [sp, #8]
    34e8:	cbnz	x8, 3484 <PyInit_binascii@@Base+0x1a80>
    34ec:	b	348c <PyInit_binascii@@Base+0x1a88>
    34f0:	ldr	x3, [x19]
    34f4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    34f8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    34fc:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    3500:	add	x0, x0, #0x64f
    3504:	add	x1, x1, #0x733
    3508:	add	x2, x2, #0x73e
    350c:	bl	1810 <_PyArg_BadArgument@plt>
    3510:	mov	x19, xzr
    3514:	ldr	x8, [sp, #8]
    3518:	cbnz	x8, 3484 <PyInit_binascii@@Base+0x1a80>
    351c:	b	348c <PyInit_binascii@@Base+0x1a88>
    3520:	ldr	x8, [x19, #8]
    3524:	ldr	x0, [x8, #8]
    3528:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    352c:	ldr	x8, [x8, #4016]
    3530:	cmp	x0, x8
    3534:	b.eq	3548 <PyInit_binascii@@Base+0x1b44>  // b.none
    3538:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    353c:	ldr	x1, [x1, #4016]
    3540:	bl	18e0 <PyType_IsSubtype@plt>
    3544:	cbz	w0, 357c <PyInit_binascii@@Base+0x1b78>
    3548:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    354c:	ldr	x8, [x8, #4040]
    3550:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3554:	add	x1, x1, #0x750
    3558:	ldr	x0, [x8]
    355c:	bl	17c0 <PyErr_SetString@plt>
    3560:	mov	x19, xzr
    3564:	ldr	x8, [sp, #8]
    3568:	cbnz	x8, 3484 <PyInit_binascii@@Base+0x1a80>
    356c:	b	348c <PyInit_binascii@@Base+0x1a88>
    3570:	bl	1870 <PyErr_Occurred@plt>
    3574:	cbnz	x0, 3478 <PyInit_binascii@@Base+0x1a74>
    3578:	b	34d8 <PyInit_binascii@@Base+0x1ad4>
    357c:	ldr	x0, [x19, #8]
    3580:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    3584:	cmn	w0, #0x1
    3588:	b.ne	34bc <PyInit_binascii@@Base+0x1ab8>  // b.any
    358c:	bl	1870 <PyErr_Occurred@plt>
    3590:	cbnz	x0, 3478 <PyInit_binascii@@Base+0x1a74>
    3594:	mov	w0, #0xffffffff            	// #-1
    3598:	b	34bc <PyInit_binascii@@Base+0x1ab8>
    359c:	sub	sp, sp, #0xa0
    35a0:	stp	x29, x30, [sp, #112]
    35a4:	stp	x22, x21, [sp, #128]
    35a8:	stp	x20, x19, [sp, #144]
    35ac:	add	x29, sp, #0x70
    35b0:	mov	x20, x2
    35b4:	mov	x19, x1
    35b8:	cbz	x3, 35c4 <PyInit_binascii@@Base+0x1bc0>
    35bc:	ldr	x21, [x3, #16]
    35c0:	b	35c8 <PyInit_binascii@@Base+0x1bc4>
    35c4:	mov	x21, xzr
    35c8:	movi	v0.2d, #0x0
    35cc:	stp	q0, q0, [sp, #64]
    35d0:	stp	q0, q0, [sp, #32]
    35d4:	str	q0, [sp, #16]
    35d8:	cbz	x19, 35ec <PyInit_binascii@@Base+0x1be8>
    35dc:	sub	x8, x20, #0x1
    35e0:	cmp	x8, #0x1
    35e4:	b.hi	35ec <PyInit_binascii@@Base+0x1be8>  // b.pmore
    35e8:	cbz	x3, 3620 <PyInit_binascii@@Base+0x1c1c>
    35ec:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    35f0:	sub	x8, x29, #0x10
    35f4:	add	x4, x4, #0x4c8
    35f8:	mov	w5, #0x1                   	// #1
    35fc:	mov	w6, #0x2                   	// #2
    3600:	mov	x0, x19
    3604:	mov	x1, x20
    3608:	mov	x2, xzr
    360c:	mov	w7, wzr
    3610:	str	x8, [sp]
    3614:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    3618:	mov	x19, x0
    361c:	cbz	x0, 3920 <PyInit_binascii@@Base+0x1f1c>
    3620:	ldr	x0, [x19]
    3624:	add	x1, sp, #0x10
    3628:	bl	4550 <PyInit_binascii@@Base+0x2b4c>
    362c:	cbz	w0, 3920 <PyInit_binascii@@Base+0x1f1c>
    3630:	add	x8, x21, x20
    3634:	cmp	x8, #0x1
    3638:	b.ne	38e0 <PyInit_binascii@@Base+0x1edc>  // b.any
    363c:	mov	w21, wzr
    3640:	ldr	x20, [sp, #32]
    3644:	ldr	x22, [sp, #16]
    3648:	mov	x0, x20
    364c:	bl	1920 <PyMem_Malloc@plt>
    3650:	cbz	x0, 394c <PyInit_binascii@@Base+0x1f48>
    3654:	mov	w1, wzr
    3658:	mov	x2, x20
    365c:	mov	x19, x0
    3660:	bl	17f0 <memset@plt>
    3664:	cmp	x20, #0x1
    3668:	b.lt	3960 <PyInit_binascii@@Base+0x1f5c>  // b.tstop
    366c:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3670:	ldr	x9, [x9, #4056]
    3674:	mov	x12, xzr
    3678:	mov	x1, xzr
    367c:	mov	w8, #0x3d                  	// #61
    3680:	mov	w10, #0x1                   	// #1
    3684:	cbz	w21, 37dc <PyInit_binascii@@Base+0x1dd8>
    3688:	mov	w11, #0x20                  	// #32
    368c:	b	36a8 <PyInit_binascii@@Base+0x1ca4>
    3690:	strb	w11, [x19, x1]
    3694:	add	x1, x1, #0x1
    3698:	add	x13, x12, #0x1
    369c:	cmp	x13, x20
    36a0:	mov	x12, x13
    36a4:	b.ge	3964 <PyInit_binascii@@Base+0x1f60>  // b.tcont
    36a8:	ldrb	w13, [x22, x12]
    36ac:	cmp	w13, #0x3d
    36b0:	b.eq	36cc <PyInit_binascii@@Base+0x1cc8>  // b.none
    36b4:	cmp	w13, #0x5f
    36b8:	b.eq	3690 <PyInit_binascii@@Base+0x1c8c>  // b.none
    36bc:	strb	w13, [x19, x1]
    36c0:	add	x13, x12, #0x1
    36c4:	add	x1, x1, #0x1
    36c8:	b	369c <PyInit_binascii@@Base+0x1c98>
    36cc:	add	x13, x12, #0x1
    36d0:	cmp	x13, x20
    36d4:	b.ge	3964 <PyInit_binascii@@Base+0x1f60>  // b.tcont
    36d8:	ldrb	w14, [x22, x13]
    36dc:	cmp	w14, #0xa
    36e0:	b.eq	37b8 <PyInit_binascii@@Base+0x1db4>  // b.none
    36e4:	cmp	w14, #0x3d
    36e8:	b.eq	3718 <PyInit_binascii@@Base+0x1d14>  // b.none
    36ec:	cmp	w14, #0xd
    36f0:	b.ne	3728 <PyInit_binascii@@Base+0x1d24>  // b.any
    36f4:	add	x12, x12, #0x2
    36f8:	cmp	x20, x12
    36fc:	b.eq	37b4 <PyInit_binascii@@Base+0x1db0>  // b.none
    3700:	ldrb	w13, [x22, x12]
    3704:	add	x12, x12, #0x1
    3708:	cmp	w13, #0xa
    370c:	b.ne	36f8 <PyInit_binascii@@Base+0x1cf4>  // b.any
    3710:	sub	x13, x12, #0x1
    3714:	b	37b8 <PyInit_binascii@@Base+0x1db4>
    3718:	strb	w8, [x19, x1]
    371c:	add	x1, x1, #0x1
    3720:	add	x13, x12, #0x2
    3724:	b	369c <PyInit_binascii@@Base+0x1c98>
    3728:	add	x15, x12, #0x2
    372c:	cmp	x15, x20
    3730:	b.ge	37a4 <PyInit_binascii@@Base+0x1da0>  // b.tcont
    3734:	sub	w16, w14, #0x30
    3738:	and	w16, w16, #0xff
    373c:	cmp	w16, #0xa
    3740:	b.cc	375c <PyInit_binascii@@Base+0x1d58>  // b.lo, b.ul, b.last
    3744:	sub	w16, w14, #0x41
    3748:	cmp	w16, #0x25
    374c:	b.hi	37a4 <PyInit_binascii@@Base+0x1da0>  // b.pmore
    3750:	lsl	x16, x10, x16
    3754:	tst	x16, #0x3f0000003f
    3758:	b.eq	37a4 <PyInit_binascii@@Base+0x1da0>  // b.none
    375c:	ldrb	w15, [x22, x15]
    3760:	sub	w16, w15, #0x30
    3764:	and	w16, w16, #0xff
    3768:	cmp	w16, #0xa
    376c:	b.cc	3788 <PyInit_binascii@@Base+0x1d84>  // b.lo, b.ul, b.last
    3770:	sub	w16, w15, #0x41
    3774:	cmp	w16, #0x25
    3778:	b.hi	37a4 <PyInit_binascii@@Base+0x1da0>  // b.pmore
    377c:	lsl	x16, x10, x16
    3780:	tst	x16, #0x3f0000003f
    3784:	b.eq	37a4 <PyInit_binascii@@Base+0x1da0>  // b.none
    3788:	ldrb	w13, [x9, x14]
    378c:	ldrb	w14, [x9, x15]
    3790:	orr	w13, w14, w13, lsl #4
    3794:	strb	w13, [x19, x1]
    3798:	add	x1, x1, #0x1
    379c:	add	x13, x12, #0x3
    37a0:	b	369c <PyInit_binascii@@Base+0x1c98>
    37a4:	add	x12, x1, #0x1
    37a8:	strb	w8, [x19, x1]
    37ac:	mov	x1, x12
    37b0:	b	369c <PyInit_binascii@@Base+0x1c98>
    37b4:	mov	x13, x20
    37b8:	cmp	x13, x20
    37bc:	cinc	x13, x13, lt  // lt = tstop
    37c0:	b	369c <PyInit_binascii@@Base+0x1c98>
    37c4:	strb	w11, [x19, x1]
    37c8:	add	x11, x12, #0x1
    37cc:	add	x1, x1, #0x1
    37d0:	cmp	x11, x20
    37d4:	mov	x12, x11
    37d8:	b.ge	3964 <PyInit_binascii@@Base+0x1f60>  // b.tcont
    37dc:	ldrb	w11, [x22, x12]
    37e0:	cmp	w11, #0x3d
    37e4:	b.ne	37c4 <PyInit_binascii@@Base+0x1dc0>  // b.any
    37e8:	add	x11, x12, #0x1
    37ec:	cmp	x11, x20
    37f0:	b.ge	3964 <PyInit_binascii@@Base+0x1f60>  // b.tcont
    37f4:	ldrb	w13, [x22, x11]
    37f8:	cmp	w13, #0xa
    37fc:	b.eq	38d4 <PyInit_binascii@@Base+0x1ed0>  // b.none
    3800:	cmp	w13, #0x3d
    3804:	b.eq	3834 <PyInit_binascii@@Base+0x1e30>  // b.none
    3808:	cmp	w13, #0xd
    380c:	b.ne	3844 <PyInit_binascii@@Base+0x1e40>  // b.any
    3810:	add	x11, x12, #0x2
    3814:	cmp	x20, x11
    3818:	b.eq	38d0 <PyInit_binascii@@Base+0x1ecc>  // b.none
    381c:	ldrb	w12, [x22, x11]
    3820:	add	x11, x11, #0x1
    3824:	cmp	w12, #0xa
    3828:	b.ne	3814 <PyInit_binascii@@Base+0x1e10>  // b.any
    382c:	sub	x11, x11, #0x1
    3830:	b	38d4 <PyInit_binascii@@Base+0x1ed0>
    3834:	strb	w8, [x19, x1]
    3838:	add	x1, x1, #0x1
    383c:	add	x11, x12, #0x2
    3840:	b	37d0 <PyInit_binascii@@Base+0x1dcc>
    3844:	add	x14, x12, #0x2
    3848:	cmp	x14, x20
    384c:	b.ge	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.tcont
    3850:	sub	w15, w13, #0x30
    3854:	and	w15, w15, #0xff
    3858:	cmp	w15, #0xa
    385c:	b.cc	3878 <PyInit_binascii@@Base+0x1e74>  // b.lo, b.ul, b.last
    3860:	sub	w15, w13, #0x41
    3864:	cmp	w15, #0x25
    3868:	b.hi	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.pmore
    386c:	lsl	x15, x10, x15
    3870:	tst	x15, #0x3f0000003f
    3874:	b.eq	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.none
    3878:	ldrb	w14, [x22, x14]
    387c:	sub	w15, w14, #0x30
    3880:	and	w15, w15, #0xff
    3884:	cmp	w15, #0xa
    3888:	b.cc	38a4 <PyInit_binascii@@Base+0x1ea0>  // b.lo, b.ul, b.last
    388c:	sub	w15, w14, #0x41
    3890:	cmp	w15, #0x25
    3894:	b.hi	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.pmore
    3898:	lsl	x15, x10, x15
    389c:	tst	x15, #0x3f0000003f
    38a0:	b.eq	38c0 <PyInit_binascii@@Base+0x1ebc>  // b.none
    38a4:	ldrb	w11, [x9, x13]
    38a8:	ldrb	w13, [x9, x14]
    38ac:	orr	w11, w13, w11, lsl #4
    38b0:	strb	w11, [x19, x1]
    38b4:	add	x1, x1, #0x1
    38b8:	add	x11, x12, #0x3
    38bc:	b	37d0 <PyInit_binascii@@Base+0x1dcc>
    38c0:	add	x12, x1, #0x1
    38c4:	strb	w8, [x19, x1]
    38c8:	mov	x1, x12
    38cc:	b	37d0 <PyInit_binascii@@Base+0x1dcc>
    38d0:	mov	x11, x20
    38d4:	cmp	x11, x20
    38d8:	cinc	x11, x11, lt  // lt = tstop
    38dc:	b	37d0 <PyInit_binascii@@Base+0x1dcc>
    38e0:	ldr	x8, [x19, #8]
    38e4:	ldr	x0, [x8, #8]
    38e8:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    38ec:	ldr	x8, [x8, #4016]
    38f0:	cmp	x0, x8
    38f4:	b.eq	3908 <PyInit_binascii@@Base+0x1f04>  // b.none
    38f8:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    38fc:	ldr	x1, [x1, #4016]
    3900:	bl	18e0 <PyType_IsSubtype@plt>
    3904:	cbz	w0, 3984 <PyInit_binascii@@Base+0x1f80>
    3908:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    390c:	ldr	x8, [x8, #4040]
    3910:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3914:	add	x1, x1, #0x750
    3918:	ldr	x0, [x8]
    391c:	bl	17c0 <PyErr_SetString@plt>
    3920:	mov	x20, xzr
    3924:	ldr	x8, [sp, #24]
    3928:	cbz	x8, 3934 <PyInit_binascii@@Base+0x1f30>
    392c:	add	x0, sp, #0x10
    3930:	bl	1730 <PyBuffer_Release@plt>
    3934:	mov	x0, x20
    3938:	ldp	x20, x19, [sp, #144]
    393c:	ldp	x22, x21, [sp, #128]
    3940:	ldp	x29, x30, [sp, #112]
    3944:	add	sp, sp, #0xa0
    3948:	ret
    394c:	bl	1790 <PyErr_NoMemory@plt>
    3950:	mov	x20, xzr
    3954:	ldr	x8, [sp, #24]
    3958:	cbnz	x8, 392c <PyInit_binascii@@Base+0x1f28>
    395c:	b	3934 <PyInit_binascii@@Base+0x1f30>
    3960:	mov	x1, xzr
    3964:	mov	x0, x19
    3968:	bl	1770 <PyBytes_FromStringAndSize@plt>
    396c:	mov	x20, x0
    3970:	mov	x0, x19
    3974:	bl	1720 <PyMem_Free@plt>
    3978:	ldr	x8, [sp, #24]
    397c:	cbnz	x8, 392c <PyInit_binascii@@Base+0x1f28>
    3980:	b	3934 <PyInit_binascii@@Base+0x1f30>
    3984:	ldr	x0, [x19, #8]
    3988:	bl	1910 <_PyLong_AsInt@plt>
    398c:	mov	w21, w0
    3990:	cmn	w0, #0x1
    3994:	b.ne	3640 <PyInit_binascii@@Base+0x1c3c>  // b.any
    3998:	bl	1870 <PyErr_Occurred@plt>
    399c:	cbnz	x0, 3920 <PyInit_binascii@@Base+0x1f1c>
    39a0:	mov	w21, #0xffffffff            	// #-1
    39a4:	b	3640 <PyInit_binascii@@Base+0x1c3c>
    39a8:	sub	sp, sp, #0xd0
    39ac:	stp	x29, x30, [sp, #128]
    39b0:	stp	x26, x25, [sp, #144]
    39b4:	stp	x24, x23, [sp, #160]
    39b8:	stp	x22, x21, [sp, #176]
    39bc:	stp	x20, x19, [sp, #192]
    39c0:	add	x29, sp, #0x80
    39c4:	mov	x19, x2
    39c8:	mov	x21, x1
    39cc:	cbz	x3, 39d8 <PyInit_binascii@@Base+0x1fd4>
    39d0:	ldr	x20, [x3, #16]
    39d4:	b	39dc <PyInit_binascii@@Base+0x1fd8>
    39d8:	mov	x20, xzr
    39dc:	movi	v0.2d, #0x0
    39e0:	stp	q0, q0, [sp, #64]
    39e4:	stp	q0, q0, [sp, #32]
    39e8:	str	q0, [sp, #16]
    39ec:	cbz	x21, 3a00 <PyInit_binascii@@Base+0x1ffc>
    39f0:	sub	x8, x19, #0x1
    39f4:	cmp	x8, #0x3
    39f8:	b.hi	3a00 <PyInit_binascii@@Base+0x1ffc>  // b.pmore
    39fc:	cbz	x3, 3a34 <PyInit_binascii@@Base+0x2030>
    3a00:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    3a04:	sub	x8, x29, #0x20
    3a08:	add	x4, x4, #0x508
    3a0c:	mov	w5, #0x1                   	// #1
    3a10:	mov	w6, #0x4                   	// #4
    3a14:	mov	x0, x21
    3a18:	mov	x1, x19
    3a1c:	mov	x2, xzr
    3a20:	mov	w7, wzr
    3a24:	str	x8, [sp]
    3a28:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    3a2c:	mov	x21, x0
    3a30:	cbz	x0, 3a48 <PyInit_binascii@@Base+0x2044>
    3a34:	ldr	x0, [x21]
    3a38:	add	x1, sp, #0x10
    3a3c:	mov	w2, wzr
    3a40:	bl	1880 <PyObject_GetBuffer@plt>
    3a44:	cbz	w0, 3a7c <PyInit_binascii@@Base+0x2078>
    3a48:	mov	x19, xzr
    3a4c:	ldr	x8, [sp, #24]
    3a50:	cbz	x8, 3a5c <PyInit_binascii@@Base+0x2058>
    3a54:	add	x0, sp, #0x10
    3a58:	bl	1730 <PyBuffer_Release@plt>
    3a5c:	mov	x0, x19
    3a60:	ldp	x20, x19, [sp, #192]
    3a64:	ldp	x22, x21, [sp, #176]
    3a68:	ldp	x24, x23, [sp, #160]
    3a6c:	ldp	x26, x25, [sp, #144]
    3a70:	ldp	x29, x30, [sp, #128]
    3a74:	add	sp, sp, #0xd0
    3a78:	ret
    3a7c:	add	x0, sp, #0x10
    3a80:	mov	w1, #0x43                  	// #67
    3a84:	bl	1760 <PyBuffer_IsContiguous@plt>
    3a88:	cbz	w0, 3ae4 <PyInit_binascii@@Base+0x20e0>
    3a8c:	add	x20, x20, x19
    3a90:	sub	x22, x20, #0x1
    3a94:	cbz	x22, 3b14 <PyInit_binascii@@Base+0x2110>
    3a98:	ldr	x8, [x21, #8]
    3a9c:	cbz	x8, 3e0c <PyInit_binascii@@Base+0x2408>
    3aa0:	ldr	x0, [x8, #8]
    3aa4:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3aa8:	ldr	x8, [x8, #4016]
    3aac:	cmp	x0, x8
    3ab0:	b.eq	405c <PyInit_binascii@@Base+0x2658>  // b.none
    3ab4:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3ab8:	ldr	x1, [x1, #4016]
    3abc:	bl	18e0 <PyType_IsSubtype@plt>
    3ac0:	cbnz	w0, 405c <PyInit_binascii@@Base+0x2658>
    3ac4:	ldr	x0, [x21, #8]
    3ac8:	bl	1910 <_PyLong_AsInt@plt>
    3acc:	mov	w19, w0
    3ad0:	cmn	w0, #0x1
    3ad4:	b.eq	4510 <PyInit_binascii@@Base+0x2b0c>  // b.none
    3ad8:	subs	x22, x20, #0x2
    3adc:	b.ne	3e10 <PyInit_binascii@@Base+0x240c>  // b.any
    3ae0:	b	3b18 <PyInit_binascii@@Base+0x2114>
    3ae4:	ldr	x3, [x21]
    3ae8:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3aec:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3af0:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    3af4:	add	x0, x0, #0x65c
    3af8:	add	x1, x1, #0x920
    3afc:	add	x2, x2, #0x73e
    3b00:	bl	1810 <_PyArg_BadArgument@plt>
    3b04:	mov	x19, xzr
    3b08:	ldr	x8, [sp, #24]
    3b0c:	cbnz	x8, 3a54 <PyInit_binascii@@Base+0x2050>
    3b10:	b	3a5c <PyInit_binascii@@Base+0x2058>
    3b14:	mov	w19, wzr
    3b18:	mov	w21, wzr
    3b1c:	mov	w20, #0x1                   	// #1
    3b20:	ldr	x22, [sp, #16]
    3b24:	ldr	x23, [sp, #32]
    3b28:	mov	w1, #0xa                   	// #10
    3b2c:	mov	x0, x22
    3b30:	mov	x2, x23
    3b34:	bl	18c0 <memchr@plt>
    3b38:	cmp	x0, x22
    3b3c:	b.ls	3e60 <PyInit_binascii@@Base+0x245c>  // b.plast
    3b40:	ldurb	w8, [x0, #-1]
    3b44:	cmp	w8, #0xd
    3b48:	cset	w26, eq  // eq = none
    3b4c:	cmp	x23, #0x1
    3b50:	b.ge	3e6c <PyInit_binascii@@Base+0x2468>  // b.tcont
    3b54:	mov	x24, xzr
    3b58:	mov	x0, x24
    3b5c:	bl	1920 <PyMem_Malloc@plt>
    3b60:	cbz	x0, 44fc <PyInit_binascii@@Base+0x2af8>
    3b64:	mov	w1, wzr
    3b68:	mov	x2, x24
    3b6c:	mov	x25, x0
    3b70:	bl	17f0 <memset@plt>
    3b74:	cmp	x23, #0x1
    3b78:	b.lt	425c <PyInit_binascii@@Base+0x2858>  // b.tstop
    3b7c:	adrp	x11, 5000 <PyInit_binascii@@Base+0x35fc>
    3b80:	adrp	x15, 4000 <PyInit_binascii@@Base+0x25fc>
    3b84:	mov	x17, xzr
    3b88:	mov	w18, wzr
    3b8c:	mov	x16, xzr
    3b90:	mov	w8, #0x3d                  	// #61
    3b94:	mov	w9, #0xa                   	// #10
    3b98:	mov	w10, #0xd                   	// #13
    3b9c:	add	x11, x11, #0x963
    3ba0:	mov	w12, #0x1                   	// #1
    3ba4:	mov	w13, #0x2401                	// #9217
    3ba8:	mov	w14, #0x5f                  	// #95
    3bac:	add	x15, x15, #0x8d0
    3bb0:	b	3bf8 <PyInit_binascii@@Base+0x21f4>
    3bb4:	mov	w18, wzr
    3bb8:	add	x0, x25, x16
    3bbc:	strb	w8, [x0]
    3bc0:	ldrb	w1, [x22, x17]
    3bc4:	add	w18, w18, #0x3
    3bc8:	and	x2, x1, #0xf
    3bcc:	lsr	x1, x1, #4
    3bd0:	ldrb	w3, [x11, x2]
    3bd4:	ldrb	w4, [x11, x1]
    3bd8:	add	x1, x16, #0x3
    3bdc:	add	x2, x17, #0x1
    3be0:	strb	w3, [x0, #2]
    3be4:	strb	w4, [x0, #1]
    3be8:	cmp	x2, x23
    3bec:	mov	x17, x2
    3bf0:	mov	x16, x1
    3bf4:	b.ge	4260 <PyInit_binascii@@Base+0x285c>  // b.tcont
    3bf8:	ldrb	w0, [x22, x17]
    3bfc:	cmp	w21, #0x0
    3c00:	cset	w1, ne  // ne = any
    3c04:	cmp	w0, #0x5f
    3c08:	cset	w2, eq  // eq = none
    3c0c:	cmp	w0, #0x7e
    3c10:	b.hi	3db4 <PyInit_binascii@@Base+0x23b0>  // b.pmore
    3c14:	cmp	w0, #0x3d
    3c18:	b.eq	3db4 <PyInit_binascii@@Base+0x23b0>  // b.none
    3c1c:	and	w1, w1, w2
    3c20:	tbnz	w1, #0, 3db4 <PyInit_binascii@@Base+0x23b0>
    3c24:	cbnz	w18, 3c54 <PyInit_binascii@@Base+0x2250>
    3c28:	cmp	w0, #0x2e
    3c2c:	b.ne	3c54 <PyInit_binascii@@Base+0x2250>  // b.any
    3c30:	add	x1, x17, #0x1
    3c34:	cmp	x1, x23
    3c38:	b.eq	3bb4 <PyInit_binascii@@Base+0x21b0>  // b.none
    3c3c:	ldrb	w1, [x22, x1]
    3c40:	cmp	w1, #0xd
    3c44:	b.hi	3c54 <PyInit_binascii@@Base+0x2250>  // b.pmore
    3c48:	lsl	w1, w12, w1
    3c4c:	tst	w1, w13
    3c50:	b.ne	3bb4 <PyInit_binascii@@Base+0x21b0>  // b.any
    3c54:	cbz	w20, 3c74 <PyInit_binascii@@Base+0x2270>
    3c58:	cmp	w0, #0x20
    3c5c:	b.eq	3c90 <PyInit_binascii@@Base+0x228c>  // b.none
    3c60:	cmp	w0, #0x9
    3c64:	b.eq	3c90 <PyInit_binascii@@Base+0x228c>  // b.none
    3c68:	cmp	w0, #0x20
    3c6c:	b.ls	3c9c <PyInit_binascii@@Base+0x2298>  // b.plast
    3c70:	b	3cac <PyInit_binascii@@Base+0x22a8>
    3c74:	sub	w1, w0, #0x9
    3c78:	cmp	w1, #0x17
    3c7c:	b.hi	3c68 <PyInit_binascii@@Base+0x2264>  // b.pmore
    3c80:	adr	x2, 3c68 <PyInit_binascii@@Base+0x2264>
    3c84:	ldrb	w3, [x15, x1]
    3c88:	add	x2, x2, x3, lsl #2
    3c8c:	br	x2
    3c90:	add	x1, x17, #0x1
    3c94:	cmp	x1, x23
    3c98:	b.eq	3db4 <PyInit_binascii@@Base+0x23b0>  // b.none
    3c9c:	cmp	w0, #0xa
    3ca0:	b.eq	3cac <PyInit_binascii@@Base+0x22a8>  // b.none
    3ca4:	cmp	w0, #0xd
    3ca8:	b.ne	3db0 <PyInit_binascii@@Base+0x23ac>  // b.any
    3cac:	cbz	w20, 3d48 <PyInit_binascii@@Base+0x2344>
    3cb0:	cmp	w0, #0xa
    3cb4:	b.eq	3cd8 <PyInit_binascii@@Base+0x22d4>  // b.none
    3cb8:	add	x2, x17, #0x1
    3cbc:	cmp	x2, x23
    3cc0:	b.ge	3d4c <PyInit_binascii@@Base+0x2348>  // b.tcont
    3cc4:	cmp	w0, #0xd
    3cc8:	b.ne	3d4c <PyInit_binascii@@Base+0x2348>  // b.any
    3ccc:	ldrb	w1, [x22, x2]
    3cd0:	cmp	w1, #0xa
    3cd4:	b.ne	3d4c <PyInit_binascii@@Base+0x2348>  // b.any
    3cd8:	cbz	x16, 3d18 <PyInit_binascii@@Base+0x2314>
    3cdc:	sub	x18, x16, #0x1
    3ce0:	ldrb	w0, [x25, x18]
    3ce4:	cmp	w0, #0x20
    3ce8:	b.eq	3cf4 <PyInit_binascii@@Base+0x22f0>  // b.none
    3cec:	cmp	w0, #0x9
    3cf0:	b.ne	3d18 <PyInit_binascii@@Base+0x2314>  // b.any
    3cf4:	and	x1, x0, #0xf
    3cf8:	lsr	x0, x0, #4
    3cfc:	ldrb	w1, [x11, x1]
    3d00:	ldrb	w0, [x11, x0]
    3d04:	strb	w8, [x25, x18]
    3d08:	add	x18, x25, x16
    3d0c:	add	x16, x16, #0x2
    3d10:	strb	w1, [x18, #1]
    3d14:	strb	w0, [x18]
    3d18:	cbz	w26, 3d28 <PyInit_binascii@@Base+0x2324>
    3d1c:	add	x18, x16, #0x1
    3d20:	strb	w10, [x25, x16]
    3d24:	mov	x16, x18
    3d28:	strb	w9, [x25, x16]
    3d2c:	ldrb	w18, [x22, x17]
    3d30:	add	x1, x16, #0x1
    3d34:	cmp	w18, #0xd
    3d38:	mov	w18, wzr
    3d3c:	b.ne	3df0 <PyInit_binascii@@Base+0x23ec>  // b.any
    3d40:	add	x2, x17, #0x2
    3d44:	b	3be8 <PyInit_binascii@@Base+0x21e4>
    3d48:	add	x2, x17, #0x1
    3d4c:	cmp	x2, x23
    3d50:	b.eq	3d94 <PyInit_binascii@@Base+0x2390>  // b.none
    3d54:	add	w1, w18, #0x1
    3d58:	cmp	w1, #0x4c
    3d5c:	b.cc	3d94 <PyInit_binascii@@Base+0x2390>  // b.lo, b.ul, b.last
    3d60:	ldrb	w1, [x22, x2]
    3d64:	cmp	w1, #0xa
    3d68:	b.eq	3d94 <PyInit_binascii@@Base+0x2390>  // b.none
    3d6c:	add	x1, x16, #0x1
    3d70:	strb	w8, [x25, x16]
    3d74:	cbz	w26, 3d84 <PyInit_binascii@@Base+0x2380>
    3d78:	add	x16, x16, #0x2
    3d7c:	strb	w10, [x25, x1]
    3d80:	mov	x1, x16
    3d84:	strb	w9, [x25, x1]
    3d88:	ldrb	w0, [x22, x17]
    3d8c:	mov	w18, wzr
    3d90:	add	x16, x1, #0x1
    3d94:	add	w18, w18, #0x1
    3d98:	add	x1, x16, #0x1
    3d9c:	cbz	w21, 3de8 <PyInit_binascii@@Base+0x23e4>
    3da0:	cmp	w0, #0x20
    3da4:	b.ne	3de8 <PyInit_binascii@@Base+0x23e4>  // b.any
    3da8:	strb	w14, [x25, x16]
    3dac:	b	3be8 <PyInit_binascii@@Base+0x21e4>
    3db0:	cbz	w19, 3df8 <PyInit_binascii@@Base+0x23f4>
    3db4:	add	w0, w18, #0x3
    3db8:	cmp	w0, #0x4c
    3dbc:	b.cc	3bb8 <PyInit_binascii@@Base+0x21b4>  // b.lo, b.ul, b.last
    3dc0:	add	x0, x16, #0x1
    3dc4:	strb	w8, [x25, x16]
    3dc8:	cbz	w26, 3dd8 <PyInit_binascii@@Base+0x23d4>
    3dcc:	add	x16, x16, #0x2
    3dd0:	strb	w10, [x25, x0]
    3dd4:	mov	x0, x16
    3dd8:	mov	w18, wzr
    3ddc:	add	x16, x0, #0x1
    3de0:	strb	w9, [x25, x0]
    3de4:	b	3bb8 <PyInit_binascii@@Base+0x21b4>
    3de8:	strb	w0, [x25, x16]
    3dec:	b	3be8 <PyInit_binascii@@Base+0x21e4>
    3df0:	add	x2, x17, #0x1
    3df4:	b	3be8 <PyInit_binascii@@Base+0x21e4>
    3df8:	cmp	w0, #0x9
    3dfc:	b.eq	3cac <PyInit_binascii@@Base+0x22a8>  // b.none
    3e00:	cmp	w0, #0x20
    3e04:	b.eq	3cac <PyInit_binascii@@Base+0x22a8>  // b.none
    3e08:	b	3db4 <PyInit_binascii@@Base+0x23b0>
    3e0c:	mov	w19, wzr
    3e10:	ldr	x8, [x21, #16]
    3e14:	cbz	x8, 4030 <PyInit_binascii@@Base+0x262c>
    3e18:	ldr	x0, [x8, #8]
    3e1c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    3e20:	ldr	x8, [x8, #4016]
    3e24:	cmp	x0, x8
    3e28:	b.eq	405c <PyInit_binascii@@Base+0x2658>  // b.none
    3e2c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    3e30:	ldr	x1, [x1, #4016]
    3e34:	bl	18e0 <PyType_IsSubtype@plt>
    3e38:	cbnz	w0, 405c <PyInit_binascii@@Base+0x2658>
    3e3c:	ldr	x0, [x21, #16]
    3e40:	bl	1910 <_PyLong_AsInt@plt>
    3e44:	mov	w20, w0
    3e48:	cmn	w0, #0x1
    3e4c:	b.eq	4534 <PyInit_binascii@@Base+0x2b30>  // b.none
    3e50:	cmp	x22, #0x1
    3e54:	b.ne	4034 <PyInit_binascii@@Base+0x2630>  // b.any
    3e58:	mov	w21, wzr
    3e5c:	b	3b20 <PyInit_binascii@@Base+0x211c>
    3e60:	mov	w26, wzr
    3e64:	cmp	x23, #0x1
    3e68:	b.lt	3b54 <PyInit_binascii@@Base+0x2150>  // b.tstop
    3e6c:	cmp	w26, #0x0
    3e70:	mov	w8, #0x3                   	// #3
    3e74:	mov	w9, #0x5                   	// #5
    3e78:	cinc	x8, x8, ne  // ne = any
    3e7c:	cinc	x9, x9, ne  // ne = any
    3e80:	cbz	w21, 4084 <PyInit_binascii@@Base+0x2680>
    3e84:	cbz	w20, 4280 <PyInit_binascii@@Base+0x287c>
    3e88:	mov	x15, xzr
    3e8c:	mov	w14, wzr
    3e90:	mov	x24, xzr
    3e94:	mov	w10, #0x3                   	// #3
    3e98:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
    3e9c:	mov	w12, #0x1                   	// #1
    3ea0:	mov	w13, #0x2401                	// #9217
    3ea4:	ldrb	w16, [x22, x15]
    3ea8:	cmp	w16, #0x7e
    3eac:	b.hi	3ec0 <PyInit_binascii@@Base+0x24bc>  // b.pmore
    3eb0:	cmp	w16, #0x3d
    3eb4:	b.eq	3ec0 <PyInit_binascii@@Base+0x24bc>  // b.none
    3eb8:	cmp	w16, #0x5f
    3ebc:	b.ne	3ef4 <PyInit_binascii@@Base+0x24f0>  // b.any
    3ec0:	add	w14, w14, #0x3
    3ec4:	cmp	w14, #0x4b
    3ec8:	csel	x18, x9, x10, hi  // hi = pmore
    3ecc:	csel	w14, w10, w14, hi  // hi = pmore
    3ed0:	add	x17, x15, #0x1
    3ed4:	sub	x15, x11, x18
    3ed8:	cmp	x15, x24
    3edc:	b.lt	44fc <PyInit_binascii@@Base+0x2af8>  // b.tstop
    3ee0:	cmp	x17, x23
    3ee4:	add	x24, x18, x24
    3ee8:	mov	x15, x17
    3eec:	b.lt	3ea4 <PyInit_binascii@@Base+0x24a0>  // b.tstop
    3ef0:	b	3b58 <PyInit_binascii@@Base+0x2154>
    3ef4:	cbnz	w14, 3f28 <PyInit_binascii@@Base+0x2524>
    3ef8:	cmp	w16, #0x2e
    3efc:	b.ne	3f28 <PyInit_binascii@@Base+0x2524>  // b.any
    3f00:	add	x16, x15, #0x1
    3f04:	cmp	x16, x23
    3f08:	b.eq	3ec0 <PyInit_binascii@@Base+0x24bc>  // b.none
    3f0c:	ldrb	w16, [x22, x16]
    3f10:	cmp	w16, #0xd
    3f14:	b.hi	3f50 <PyInit_binascii@@Base+0x254c>  // b.pmore
    3f18:	lsl	w16, w12, w16
    3f1c:	tst	w16, w13
    3f20:	b.ne	3ec0 <PyInit_binascii@@Base+0x24bc>  // b.any
    3f24:	b	3f50 <PyInit_binascii@@Base+0x254c>
    3f28:	cmp	w16, #0x20
    3f2c:	b.eq	3f38 <PyInit_binascii@@Base+0x2534>  // b.none
    3f30:	cmp	w16, #0x9
    3f34:	b.ne	3f48 <PyInit_binascii@@Base+0x2544>  // b.any
    3f38:	add	x17, x15, #0x1
    3f3c:	cmp	x17, x23
    3f40:	b.eq	3ec0 <PyInit_binascii@@Base+0x24bc>  // b.none
    3f44:	b	3f68 <PyInit_binascii@@Base+0x2564>
    3f48:	cmp	w16, #0x20
    3f4c:	b.ls	3f68 <PyInit_binascii@@Base+0x2564>  // b.plast
    3f50:	add	x17, x15, #0x1
    3f54:	cmp	x17, x23
    3f58:	b.ne	3fbc <PyInit_binascii@@Base+0x25b8>  // b.any
    3f5c:	mov	w18, #0x1                   	// #1
    3f60:	add	w14, w14, #0x1
    3f64:	b	3ed4 <PyInit_binascii@@Base+0x24d0>
    3f68:	cmp	w16, #0xa
    3f6c:	b.eq	3f98 <PyInit_binascii@@Base+0x2594>  // b.none
    3f70:	cmp	w16, #0xd
    3f74:	b.ne	3fe8 <PyInit_binascii@@Base+0x25e4>  // b.any
    3f78:	add	x17, x15, #0x1
    3f7c:	cmp	x17, x23
    3f80:	b.ge	3f54 <PyInit_binascii@@Base+0x2550>  // b.tcont
    3f84:	cmp	w16, #0xd
    3f88:	b.ne	3f54 <PyInit_binascii@@Base+0x2550>  // b.any
    3f8c:	ldrb	w18, [x22, x17]
    3f90:	cmp	w18, #0xa
    3f94:	b.ne	3f54 <PyInit_binascii@@Base+0x2550>  // b.any
    3f98:	cbz	x15, 4000 <PyInit_binascii@@Base+0x25fc>
    3f9c:	add	x14, x15, x22
    3fa0:	ldurb	w14, [x14, #-1]
    3fa4:	cmp	w14, #0x20
    3fa8:	b.eq	3fb4 <PyInit_binascii@@Base+0x25b0>  // b.none
    3fac:	cmp	w14, #0x9
    3fb0:	b.ne	4000 <PyInit_binascii@@Base+0x25fc>  // b.any
    3fb4:	mov	w14, #0x2                   	// #2
    3fb8:	b	4004 <PyInit_binascii@@Base+0x2600>
    3fbc:	ldrb	w15, [x22, x17]
    3fc0:	add	w16, w14, #0x1
    3fc4:	cmp	w15, #0xa
    3fc8:	cset	w15, ne  // ne = any
    3fcc:	cmp	w16, #0x4b
    3fd0:	cset	w16, hi  // hi = pmore
    3fd4:	tst	w16, w15
    3fd8:	csel	w14, wzr, w14, ne  // ne = any
    3fdc:	csinc	x18, x8, xzr, ne  // ne = any
    3fe0:	add	w14, w14, #0x1
    3fe4:	b	3ed4 <PyInit_binascii@@Base+0x24d0>
    3fe8:	cbnz	w19, 3ec0 <PyInit_binascii@@Base+0x24bc>
    3fec:	cmp	w16, #0x9
    3ff0:	b.eq	3f78 <PyInit_binascii@@Base+0x2574>  // b.none
    3ff4:	cmp	w16, #0x20
    3ff8:	b.eq	3f78 <PyInit_binascii@@Base+0x2574>  // b.none
    3ffc:	b	3ec0 <PyInit_binascii@@Base+0x24bc>
    4000:	mov	x14, xzr
    4004:	add	x17, x14, #0x2
    4008:	orr	x14, x14, #0x1
    400c:	cmp	w26, #0x0
    4010:	csel	x18, x14, x17, eq  // eq = none
    4014:	cmp	w16, #0xd
    4018:	b.ne	4028 <PyInit_binascii@@Base+0x2624>  // b.any
    401c:	mov	w14, wzr
    4020:	add	x17, x15, #0x2
    4024:	b	3ed4 <PyInit_binascii@@Base+0x24d0>
    4028:	mov	w14, wzr
    402c:	b	3ed0 <PyInit_binascii@@Base+0x24cc>
    4030:	mov	w20, #0x1                   	// #1
    4034:	ldr	x8, [x21, #24]
    4038:	ldr	x0, [x8, #8]
    403c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    4040:	ldr	x8, [x8, #4016]
    4044:	cmp	x0, x8
    4048:	b.eq	405c <PyInit_binascii@@Base+0x2658>  // b.none
    404c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    4050:	ldr	x1, [x1, #4016]
    4054:	bl	18e0 <PyType_IsSubtype@plt>
    4058:	cbz	w0, 451c <PyInit_binascii@@Base+0x2b18>
    405c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    4060:	ldr	x8, [x8, #4040]
    4064:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4068:	add	x1, x1, #0x750
    406c:	ldr	x0, [x8]
    4070:	bl	17c0 <PyErr_SetString@plt>
    4074:	mov	x19, xzr
    4078:	ldr	x8, [sp, #24]
    407c:	cbnz	x8, 3a54 <PyInit_binascii@@Base+0x2050>
    4080:	b	3a5c <PyInit_binascii@@Base+0x2058>
    4084:	cbz	w20, 43c4 <PyInit_binascii@@Base+0x29c0>
    4088:	mov	x15, xzr
    408c:	mov	w14, wzr
    4090:	mov	x24, xzr
    4094:	mov	w10, #0x3                   	// #3
    4098:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
    409c:	mov	w12, #0x1                   	// #1
    40a0:	mov	w13, #0x2401                	// #9217
    40a4:	ldrb	w16, [x22, x15]
    40a8:	cmp	w16, #0x7e
    40ac:	b.hi	41c8 <PyInit_binascii@@Base+0x27c4>  // b.pmore
    40b0:	cmp	w16, #0x3d
    40b4:	b.eq	41c8 <PyInit_binascii@@Base+0x27c4>  // b.none
    40b8:	cbnz	w14, 40ec <PyInit_binascii@@Base+0x26e8>
    40bc:	cmp	w16, #0x2e
    40c0:	b.ne	40ec <PyInit_binascii@@Base+0x26e8>  // b.any
    40c4:	add	x16, x15, #0x1
    40c8:	cmp	x16, x23
    40cc:	b.eq	41c8 <PyInit_binascii@@Base+0x27c4>  // b.none
    40d0:	ldrb	w16, [x22, x16]
    40d4:	cmp	w16, #0xd
    40d8:	b.hi	4114 <PyInit_binascii@@Base+0x2710>  // b.pmore
    40dc:	lsl	w16, w12, w16
    40e0:	tst	w16, w13
    40e4:	b.ne	41c8 <PyInit_binascii@@Base+0x27c4>  // b.any
    40e8:	b	4114 <PyInit_binascii@@Base+0x2710>
    40ec:	cmp	w16, #0x20
    40f0:	b.eq	40fc <PyInit_binascii@@Base+0x26f8>  // b.none
    40f4:	cmp	w16, #0x9
    40f8:	b.ne	410c <PyInit_binascii@@Base+0x2708>  // b.any
    40fc:	add	x17, x15, #0x1
    4100:	cmp	x17, x23
    4104:	b.eq	41c8 <PyInit_binascii@@Base+0x27c4>  // b.none
    4108:	b	4138 <PyInit_binascii@@Base+0x2734>
    410c:	cmp	w16, #0x20
    4110:	b.ls	4138 <PyInit_binascii@@Base+0x2734>  // b.plast
    4114:	add	x17, x15, #0x1
    4118:	cmp	x17, x23
    411c:	b.ne	418c <PyInit_binascii@@Base+0x2788>  // b.any
    4120:	mov	w18, #0x1                   	// #1
    4124:	add	w14, w14, #0x1
    4128:	sub	x15, x11, x18
    412c:	cmp	x15, x24
    4130:	b.ge	41e8 <PyInit_binascii@@Base+0x27e4>  // b.tcont
    4134:	b	44fc <PyInit_binascii@@Base+0x2af8>
    4138:	cmp	w16, #0xa
    413c:	b.eq	4168 <PyInit_binascii@@Base+0x2764>  // b.none
    4140:	cmp	w16, #0xd
    4144:	b.ne	41c4 <PyInit_binascii@@Base+0x27c0>  // b.any
    4148:	add	x17, x15, #0x1
    414c:	cmp	x17, x23
    4150:	b.ge	4118 <PyInit_binascii@@Base+0x2714>  // b.tcont
    4154:	cmp	w16, #0xd
    4158:	b.ne	4118 <PyInit_binascii@@Base+0x2714>  // b.any
    415c:	ldrb	w18, [x22, x17]
    4160:	cmp	w18, #0xa
    4164:	b.ne	4118 <PyInit_binascii@@Base+0x2714>  // b.any
    4168:	cbz	x15, 41fc <PyInit_binascii@@Base+0x27f8>
    416c:	add	x14, x15, x22
    4170:	ldurb	w14, [x14, #-1]
    4174:	cmp	w14, #0x20
    4178:	b.eq	4184 <PyInit_binascii@@Base+0x2780>  // b.none
    417c:	cmp	w14, #0x9
    4180:	b.ne	41fc <PyInit_binascii@@Base+0x27f8>  // b.any
    4184:	mov	w14, #0x2                   	// #2
    4188:	b	4200 <PyInit_binascii@@Base+0x27fc>
    418c:	ldrb	w15, [x22, x17]
    4190:	add	w16, w14, #0x1
    4194:	cmp	w15, #0xa
    4198:	cset	w15, ne  // ne = any
    419c:	cmp	w16, #0x4b
    41a0:	cset	w16, hi  // hi = pmore
    41a4:	tst	w16, w15
    41a8:	csel	w14, wzr, w14, ne  // ne = any
    41ac:	csinc	x18, x8, xzr, ne  // ne = any
    41b0:	add	w14, w14, #0x1
    41b4:	sub	x15, x11, x18
    41b8:	cmp	x15, x24
    41bc:	b.ge	41e8 <PyInit_binascii@@Base+0x27e4>  // b.tcont
    41c0:	b	44fc <PyInit_binascii@@Base+0x2af8>
    41c4:	cbz	w19, 4248 <PyInit_binascii@@Base+0x2844>
    41c8:	add	w14, w14, #0x3
    41cc:	cmp	w14, #0x4b
    41d0:	csel	x18, x9, x10, hi  // hi = pmore
    41d4:	csel	w14, w10, w14, hi  // hi = pmore
    41d8:	add	x17, x15, #0x1
    41dc:	sub	x15, x11, x18
    41e0:	cmp	x15, x24
    41e4:	b.lt	44fc <PyInit_binascii@@Base+0x2af8>  // b.tstop
    41e8:	cmp	x17, x23
    41ec:	add	x24, x18, x24
    41f0:	mov	x15, x17
    41f4:	b.lt	40a4 <PyInit_binascii@@Base+0x26a0>  // b.tstop
    41f8:	b	3b58 <PyInit_binascii@@Base+0x2154>
    41fc:	mov	x14, xzr
    4200:	add	x17, x14, #0x2
    4204:	orr	x14, x14, #0x1
    4208:	cmp	w26, #0x0
    420c:	csel	x18, x14, x17, eq  // eq = none
    4210:	cmp	w16, #0xd
    4214:	b.ne	4230 <PyInit_binascii@@Base+0x282c>  // b.any
    4218:	mov	w14, wzr
    421c:	add	x17, x15, #0x2
    4220:	sub	x15, x11, x18
    4224:	cmp	x15, x24
    4228:	b.ge	41e8 <PyInit_binascii@@Base+0x27e4>  // b.tcont
    422c:	b	44fc <PyInit_binascii@@Base+0x2af8>
    4230:	mov	w14, wzr
    4234:	add	x17, x15, #0x1
    4238:	sub	x15, x11, x18
    423c:	cmp	x15, x24
    4240:	b.ge	41e8 <PyInit_binascii@@Base+0x27e4>  // b.tcont
    4244:	b	44fc <PyInit_binascii@@Base+0x2af8>
    4248:	cmp	w16, #0x9
    424c:	b.eq	4148 <PyInit_binascii@@Base+0x2744>  // b.none
    4250:	cmp	w16, #0x20
    4254:	b.eq	4148 <PyInit_binascii@@Base+0x2744>  // b.none
    4258:	b	41c8 <PyInit_binascii@@Base+0x27c4>
    425c:	mov	x1, xzr
    4260:	mov	x0, x25
    4264:	bl	1770 <PyBytes_FromStringAndSize@plt>
    4268:	mov	x19, x0
    426c:	mov	x0, x25
    4270:	bl	1720 <PyMem_Free@plt>
    4274:	ldr	x8, [sp, #24]
    4278:	cbnz	x8, 3a54 <PyInit_binascii@@Base+0x2050>
    427c:	b	3a5c <PyInit_binascii@@Base+0x2058>
    4280:	adrp	x16, 4000 <PyInit_binascii@@Base+0x25fc>
    4284:	mov	x10, xzr
    4288:	mov	w12, wzr
    428c:	mov	x24, xzr
    4290:	mov	w11, #0x3                   	// #3
    4294:	mov	x13, #0x7fffffffffffffff    	// #9223372036854775807
    4298:	mov	w14, #0x1                   	// #1
    429c:	mov	w15, #0x2401                	// #9217
    42a0:	add	x16, x16, #0x8a0
    42a4:	ldrb	w17, [x22, x10]
    42a8:	cmp	w17, #0x7e
    42ac:	b.hi	42c0 <PyInit_binascii@@Base+0x28bc>  // b.pmore
    42b0:	cmp	w17, #0x3d
    42b4:	b.eq	42c0 <PyInit_binascii@@Base+0x28bc>  // b.none
    42b8:	cmp	w17, #0x5f
    42bc:	b.ne	42f0 <PyInit_binascii@@Base+0x28ec>  // b.any
    42c0:	add	w12, w12, #0x3
    42c4:	cmp	w12, #0x4b
    42c8:	csel	x17, x9, x11, hi  // hi = pmore
    42cc:	csel	w12, w11, w12, hi  // hi = pmore
    42d0:	add	x10, x10, #0x1
    42d4:	sub	x18, x13, x17
    42d8:	cmp	x18, x24
    42dc:	b.lt	44fc <PyInit_binascii@@Base+0x2af8>  // b.tstop
    42e0:	cmp	x10, x23
    42e4:	add	x24, x17, x24
    42e8:	b.lt	42a4 <PyInit_binascii@@Base+0x28a0>  // b.tstop
    42ec:	b	3b58 <PyInit_binascii@@Base+0x2154>
    42f0:	cbnz	w12, 4324 <PyInit_binascii@@Base+0x2920>
    42f4:	cmp	w17, #0x2e
    42f8:	b.ne	4324 <PyInit_binascii@@Base+0x2920>  // b.any
    42fc:	add	x17, x10, #0x1
    4300:	cmp	x17, x23
    4304:	b.eq	42c0 <PyInit_binascii@@Base+0x28bc>  // b.none
    4308:	ldrb	w17, [x22, x17]
    430c:	cmp	w17, #0xd
    4310:	b.hi	4368 <PyInit_binascii@@Base+0x2964>  // b.pmore
    4314:	lsl	w17, w14, w17
    4318:	tst	w17, w15
    431c:	b.ne	42c0 <PyInit_binascii@@Base+0x28bc>  // b.any
    4320:	b	4368 <PyInit_binascii@@Base+0x2964>
    4324:	sub	w18, w17, #0x9
    4328:	cmp	w18, #0x17
    432c:	b.hi	4350 <PyInit_binascii@@Base+0x294c>  // b.pmore
    4330:	adr	x0, 42c0 <PyInit_binascii@@Base+0x28bc>
    4334:	ldrb	w1, [x16, x18]
    4338:	add	x0, x0, x1, lsl #2
    433c:	br	x0
    4340:	add	x18, x10, #0x1
    4344:	cmp	x18, x23
    4348:	b.eq	42c0 <PyInit_binascii@@Base+0x28bc>  // b.none
    434c:	b	4358 <PyInit_binascii@@Base+0x2954>
    4350:	cmp	w17, #0x20
    4354:	b.hi	4368 <PyInit_binascii@@Base+0x2964>  // b.pmore
    4358:	cmp	w17, #0xa
    435c:	b.eq	4368 <PyInit_binascii@@Base+0x2964>  // b.none
    4360:	cmp	w17, #0xd
    4364:	b.ne	43ac <PyInit_binascii@@Base+0x29a8>  // b.any
    4368:	add	x10, x10, #0x1
    436c:	cmp	x10, x23
    4370:	b.ne	4380 <PyInit_binascii@@Base+0x297c>  // b.any
    4374:	mov	w17, #0x1                   	// #1
    4378:	add	w12, w12, #0x1
    437c:	b	42d4 <PyInit_binascii@@Base+0x28d0>
    4380:	ldrb	w17, [x22, x10]
    4384:	add	w18, w12, #0x1
    4388:	cmp	w17, #0xa
    438c:	cset	w17, ne  // ne = any
    4390:	cmp	w18, #0x4b
    4394:	cset	w18, hi  // hi = pmore
    4398:	tst	w18, w17
    439c:	csel	w12, wzr, w12, ne  // ne = any
    43a0:	csinc	x17, x8, xzr, ne  // ne = any
    43a4:	add	w12, w12, #0x1
    43a8:	b	42d4 <PyInit_binascii@@Base+0x28d0>
    43ac:	cbnz	w19, 42c0 <PyInit_binascii@@Base+0x28bc>
    43b0:	cmp	w17, #0x20
    43b4:	b.eq	4368 <PyInit_binascii@@Base+0x2964>  // b.none
    43b8:	cmp	w17, #0x9
    43bc:	b.eq	4368 <PyInit_binascii@@Base+0x2964>  // b.none
    43c0:	b	42c0 <PyInit_binascii@@Base+0x28bc>
    43c4:	adrp	x16, 4000 <PyInit_binascii@@Base+0x25fc>
    43c8:	mov	x10, xzr
    43cc:	mov	w12, wzr
    43d0:	mov	x24, xzr
    43d4:	mov	w11, #0x3                   	// #3
    43d8:	mov	x13, #0x7fffffffffffffff    	// #9223372036854775807
    43dc:	mov	w14, #0x1                   	// #1
    43e0:	mov	w15, #0x2401                	// #9217
    43e4:	add	x16, x16, #0x8b8
    43e8:	ldrb	w17, [x22, x10]
    43ec:	cmp	w17, #0x7e
    43f0:	b.hi	44b8 <PyInit_binascii@@Base+0x2ab4>  // b.pmore
    43f4:	cmp	w17, #0x3d
    43f8:	b.eq	44b8 <PyInit_binascii@@Base+0x2ab4>  // b.none
    43fc:	cbnz	w12, 4430 <PyInit_binascii@@Base+0x2a2c>
    4400:	cmp	w17, #0x2e
    4404:	b.ne	4430 <PyInit_binascii@@Base+0x2a2c>  // b.any
    4408:	add	x17, x10, #0x1
    440c:	cmp	x17, x23
    4410:	b.eq	44b8 <PyInit_binascii@@Base+0x2ab4>  // b.none
    4414:	ldrb	w17, [x22, x17]
    4418:	cmp	w17, #0xd
    441c:	b.hi	4474 <PyInit_binascii@@Base+0x2a70>  // b.pmore
    4420:	lsl	w17, w14, w17
    4424:	tst	w17, w15
    4428:	b.ne	44b8 <PyInit_binascii@@Base+0x2ab4>  // b.any
    442c:	b	4474 <PyInit_binascii@@Base+0x2a70>
    4430:	sub	w18, w17, #0x9
    4434:	cmp	w18, #0x17
    4438:	b.hi	445c <PyInit_binascii@@Base+0x2a58>  // b.pmore
    443c:	adr	x0, 444c <PyInit_binascii@@Base+0x2a48>
    4440:	ldrb	w1, [x16, x18]
    4444:	add	x0, x0, x1, lsl #2
    4448:	br	x0
    444c:	add	x18, x10, #0x1
    4450:	cmp	x18, x23
    4454:	b.ne	4464 <PyInit_binascii@@Base+0x2a60>  // b.any
    4458:	b	44b8 <PyInit_binascii@@Base+0x2ab4>
    445c:	cmp	w17, #0x20
    4460:	b.hi	4474 <PyInit_binascii@@Base+0x2a70>  // b.pmore
    4464:	cmp	w17, #0xa
    4468:	b.eq	4474 <PyInit_binascii@@Base+0x2a70>  // b.none
    446c:	cmp	w17, #0xd
    4470:	b.ne	44b4 <PyInit_binascii@@Base+0x2ab0>  // b.any
    4474:	add	x10, x10, #0x1
    4478:	cmp	x10, x23
    447c:	b.ne	4488 <PyInit_binascii@@Base+0x2a84>  // b.any
    4480:	mov	w17, #0x1                   	// #1
    4484:	b	44ac <PyInit_binascii@@Base+0x2aa8>
    4488:	ldrb	w17, [x22, x10]
    448c:	add	w18, w12, #0x1
    4490:	cmp	w17, #0xa
    4494:	cset	w17, ne  // ne = any
    4498:	cmp	w18, #0x4b
    449c:	cset	w18, hi  // hi = pmore
    44a0:	tst	w18, w17
    44a4:	csel	w12, wzr, w12, ne  // ne = any
    44a8:	csinc	x17, x8, xzr, ne  // ne = any
    44ac:	add	w12, w12, #0x1
    44b0:	b	44cc <PyInit_binascii@@Base+0x2ac8>
    44b4:	cbz	w19, 44e8 <PyInit_binascii@@Base+0x2ae4>
    44b8:	add	w12, w12, #0x3
    44bc:	cmp	w12, #0x4b
    44c0:	csel	x17, x9, x11, hi  // hi = pmore
    44c4:	csel	w12, w11, w12, hi  // hi = pmore
    44c8:	add	x10, x10, #0x1
    44cc:	sub	x18, x13, x17
    44d0:	cmp	x18, x24
    44d4:	b.lt	44fc <PyInit_binascii@@Base+0x2af8>  // b.tstop
    44d8:	cmp	x10, x23
    44dc:	add	x24, x17, x24
    44e0:	b.lt	43e8 <PyInit_binascii@@Base+0x29e4>  // b.tstop
    44e4:	b	3b58 <PyInit_binascii@@Base+0x2154>
    44e8:	cmp	w17, #0x9
    44ec:	b.eq	4474 <PyInit_binascii@@Base+0x2a70>  // b.none
    44f0:	cmp	w17, #0x20
    44f4:	b.eq	4474 <PyInit_binascii@@Base+0x2a70>  // b.none
    44f8:	b	44b8 <PyInit_binascii@@Base+0x2ab4>
    44fc:	bl	1790 <PyErr_NoMemory@plt>
    4500:	mov	x19, xzr
    4504:	ldr	x8, [sp, #24]
    4508:	cbnz	x8, 3a54 <PyInit_binascii@@Base+0x2050>
    450c:	b	3a5c <PyInit_binascii@@Base+0x2058>
    4510:	bl	1870 <PyErr_Occurred@plt>
    4514:	cbnz	x0, 3a48 <PyInit_binascii@@Base+0x2044>
    4518:	b	3ad8 <PyInit_binascii@@Base+0x20d4>
    451c:	ldr	x0, [x21, #24]
    4520:	bl	1910 <_PyLong_AsInt@plt>
    4524:	cmn	w0, #0x1
    4528:	b.eq	4540 <PyInit_binascii@@Base+0x2b3c>  // b.none
    452c:	mov	w21, w0
    4530:	b	3b20 <PyInit_binascii@@Base+0x211c>
    4534:	bl	1870 <PyErr_Occurred@plt>
    4538:	cbnz	x0, 3a48 <PyInit_binascii@@Base+0x2044>
    453c:	b	3e50 <PyInit_binascii@@Base+0x244c>
    4540:	bl	1870 <PyErr_Occurred@plt>
    4544:	cbnz	x0, 3a48 <PyInit_binascii@@Base+0x2044>
    4548:	mov	w21, #0xffffffff            	// #-1
    454c:	b	3b20 <PyInit_binascii@@Base+0x211c>
    4550:	stp	x29, x30, [sp, #-32]!
    4554:	stp	x20, x19, [sp, #16]
    4558:	mov	x29, sp
    455c:	mov	x19, x1
    4560:	cbz	x0, 45b8 <PyInit_binascii@@Base+0x2bb4>
    4564:	ldr	x8, [x0, #8]
    4568:	mov	x20, x0
    456c:	ldrb	w8, [x8, #171]
    4570:	tbnz	w8, #4, 45d0 <PyInit_binascii@@Base+0x2bcc>
    4574:	mov	x0, x20
    4578:	mov	x1, x19
    457c:	mov	w2, wzr
    4580:	bl	1880 <PyObject_GetBuffer@plt>
    4584:	cbz	w0, 4620 <PyInit_binascii@@Base+0x2c1c>
    4588:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    458c:	ldr	x8, [x20, #8]
    4590:	ldr	x9, [x9, #4040]
    4594:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4598:	add	x1, x1, #0x698
    459c:	ldr	x2, [x8, #24]
    45a0:	ldr	x0, [x9]
    45a4:	bl	18f0 <PyErr_Format@plt>
    45a8:	mov	w0, wzr
    45ac:	ldp	x20, x19, [sp, #16]
    45b0:	ldp	x29, x30, [sp], #32
    45b4:	ret
    45b8:	mov	x0, x19
    45bc:	bl	1730 <PyBuffer_Release@plt>
    45c0:	mov	w0, #0x1                   	// #1
    45c4:	ldp	x20, x19, [sp, #16]
    45c8:	ldp	x29, x30, [sp], #32
    45cc:	ret
    45d0:	ldr	w8, [x20, #32]
    45d4:	tbnz	w8, #7, 45e8 <PyInit_binascii@@Base+0x2be4>
    45d8:	mov	x0, x20
    45dc:	bl	1700 <_PyUnicode_Ready@plt>
    45e0:	tbnz	w0, #31, 4604 <PyInit_binascii@@Base+0x2c00>
    45e4:	ldr	w8, [x20, #32]
    45e8:	tbnz	w8, #6, 4614 <PyInit_binascii@@Base+0x2c10>
    45ec:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    45f0:	ldr	x8, [x8, #4032]
    45f4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    45f8:	add	x1, x1, #0x663
    45fc:	ldr	x0, [x8]
    4600:	bl	17c0 <PyErr_SetString@plt>
    4604:	mov	w0, wzr
    4608:	ldp	x20, x19, [sp, #16]
    460c:	ldp	x29, x30, [sp], #32
    4610:	ret
    4614:	tbnz	w8, #5, 4640 <PyInit_binascii@@Base+0x2c3c>
    4618:	ldr	x8, [x20, #72]
    461c:	b	4644 <PyInit_binascii@@Base+0x2c40>
    4620:	mov	w1, #0x43                  	// #67
    4624:	mov	x0, x19
    4628:	bl	1760 <PyBuffer_IsContiguous@plt>
    462c:	cbz	w0, 4660 <PyInit_binascii@@Base+0x2c5c>
    4630:	mov	w0, #0x20000               	// #131072
    4634:	ldp	x20, x19, [sp, #16]
    4638:	ldp	x29, x30, [sp], #32
    463c:	ret
    4640:	add	x8, x20, #0x30
    4644:	str	x8, [x19]
    4648:	ldr	x8, [x20, #16]
    464c:	mov	w0, #0x1                   	// #1
    4650:	stp	xzr, x8, [x19, #8]
    4654:	ldp	x20, x19, [sp, #16]
    4658:	ldp	x29, x30, [sp], #32
    465c:	ret
    4660:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    4664:	ldr	x8, [x20, #8]
    4668:	ldr	x9, [x9, #4040]
    466c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4670:	add	x1, x1, #0x6d7
    4674:	ldr	x2, [x8, #24]
    4678:	ldr	x0, [x9]
    467c:	bl	18f0 <PyErr_Format@plt>
    4680:	mov	x0, x19
    4684:	bl	1730 <PyBuffer_Release@plt>
    4688:	mov	w0, wzr
    468c:	ldp	x20, x19, [sp, #16]
    4690:	ldp	x29, x30, [sp], #32
    4694:	ret
    4698:	stp	x29, x30, [sp, #-48]!
    469c:	stp	x22, x21, [sp, #16]
    46a0:	stp	x20, x19, [sp, #32]
    46a4:	mov	x29, sp
    46a8:	mov	x21, x2
    46ac:	mov	x20, x0
    46b0:	tbnz	w21, #0, 4728 <PyInit_binascii@@Base+0x2d24>
    46b4:	cmp	x21, #0x0
    46b8:	cinc	x8, x21, lt  // lt = tstop
    46bc:	mov	x22, x1
    46c0:	asr	x1, x8, #1
    46c4:	mov	x0, xzr
    46c8:	bl	1770 <PyBytes_FromStringAndSize@plt>
    46cc:	mov	x19, x0
    46d0:	cbz	x0, 4748 <PyInit_binascii@@Base+0x2d44>
    46d4:	cmp	x21, #0x1
    46d8:	b.lt	4748 <PyInit_binascii@@Base+0x2d44>  // b.tstop
    46dc:	adrp	x10, 15000 <PyInit_binascii@@Base+0x135fc>
    46e0:	ldr	x10, [x10, #4056]
    46e4:	mov	x8, xzr
    46e8:	mov	w9, #0x20                  	// #32
    46ec:	add	x11, x22, x8
    46f0:	ldrb	w12, [x11]
    46f4:	ldrb	w13, [x11, #1]
    46f8:	ldrb	w11, [x10, x12]
    46fc:	ldrb	w12, [x10, x13]
    4700:	orr	w13, w12, w11
    4704:	cmp	w13, #0x10
    4708:	b.cs	475c <PyInit_binascii@@Base+0x2d58>  // b.hs, b.nlast
    470c:	add	w11, w12, w11, lsl #4
    4710:	add	x8, x8, #0x2
    4714:	strb	w11, [x19, x9]
    4718:	cmp	x8, x21
    471c:	add	x9, x9, #0x1
    4720:	b.lt	46ec <PyInit_binascii@@Base+0x2ce8>  // b.tstop
    4724:	b	4748 <PyInit_binascii@@Base+0x2d44>
    4728:	mov	x0, x20
    472c:	bl	17e0 <PyModule_GetState@plt>
    4730:	cbz	x0, 4744 <PyInit_binascii@@Base+0x2d40>
    4734:	ldr	x0, [x0]
    4738:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    473c:	add	x1, x1, #0x8df
    4740:	bl	17c0 <PyErr_SetString@plt>
    4744:	mov	x19, xzr
    4748:	mov	x0, x19
    474c:	ldp	x20, x19, [sp, #32]
    4750:	ldp	x22, x21, [sp, #16]
    4754:	ldp	x29, x30, [sp], #48
    4758:	ret
    475c:	mov	x0, x20
    4760:	bl	17e0 <PyModule_GetState@plt>
    4764:	cbz	x0, 4744 <PyInit_binascii@@Base+0x2d40>
    4768:	ldr	x0, [x0]
    476c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4770:	add	x1, x1, #0x8f1
    4774:	bl	17c0 <PyErr_SetString@plt>
    4778:	ldr	x8, [x19]
    477c:	subs	x8, x8, #0x1
    4780:	str	x8, [x19]
    4784:	b.ne	4744 <PyInit_binascii@@Base+0x2d40>  // b.any
    4788:	mov	x0, x19
    478c:	bl	1780 <_Py_Dealloc@plt>
    4790:	b	4744 <PyInit_binascii@@Base+0x2d40>
    4794:	stp	x29, x30, [sp, #-32]!
    4798:	stp	x20, x19, [sp, #16]
    479c:	mov	x29, sp
    47a0:	mov	x19, x0
    47a4:	bl	17e0 <PyModule_GetState@plt>
    47a8:	cbz	x0, 4834 <PyInit_binascii@@Base+0x2e30>
    47ac:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    47b0:	ldr	x8, [x8, #4032]
    47b4:	mov	x20, x0
    47b8:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    47bc:	add	x0, x0, #0x974
    47c0:	ldr	x1, [x8]
    47c4:	mov	x2, xzr
    47c8:	bl	1820 <PyErr_NewException@plt>
    47cc:	str	x0, [x20]
    47d0:	cbz	x0, 4834 <PyInit_binascii@@Base+0x2e30>
    47d4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    47d8:	mov	x2, x0
    47dc:	add	x1, x1, #0x97d
    47e0:	mov	x0, x19
    47e4:	bl	18d0 <PyModule_AddObject@plt>
    47e8:	cmn	w0, #0x1
    47ec:	b.eq	4828 <PyInit_binascii@@Base+0x2e24>  // b.none
    47f0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    47f4:	add	x0, x0, #0x983
    47f8:	mov	x1, xzr
    47fc:	mov	x2, xzr
    4800:	bl	1820 <PyErr_NewException@plt>
    4804:	str	x0, [x20, #8]
    4808:	cbz	x0, 4834 <PyInit_binascii@@Base+0x2e30>
    480c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    4810:	mov	x2, x0
    4814:	add	x1, x1, #0x98c
    4818:	mov	x0, x19
    481c:	bl	18d0 <PyModule_AddObject@plt>
    4820:	cmn	w0, #0x1
    4824:	csetm	w0, eq  // eq = none
    4828:	ldp	x20, x19, [sp, #16]
    482c:	ldp	x29, x30, [sp], #32
    4830:	ret
    4834:	mov	w0, #0xffffffff            	// #-1
    4838:	ldp	x20, x19, [sp, #16]
    483c:	ldp	x29, x30, [sp], #32
    4840:	ret

Disassembly of section .fini:

0000000000004844 <.fini>:
    4844:	stp	x29, x30, [sp, #-16]!
    4848:	mov	x29, sp
    484c:	ldp	x29, x30, [sp], #16
    4850:	ret
