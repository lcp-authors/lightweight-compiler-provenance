
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minicmd.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_isprint>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x1f
  10:	b.le	28 <grub_isprint+0x28>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x7e
  1c:	b.gt	28 <grub_isprint+0x28>
  20:	mov	w0, #0x1                   	// #1
  24:	b	2c <grub_isprint+0x2c>
  28:	mov	w0, #0x0                   	// #0
  2c:	add	sp, sp, #0x10
  30:	ret

0000000000000034 <grub_dl_get>:
  34:	stp	x29, x30, [sp, #-48]!
  38:	mov	x29, sp
  3c:	str	x0, [sp, #24]
  40:	adrp	x0, 0 <grub_isprint>
  44:	add	x0, x0, #0x0
  48:	ldr	x0, [x0]
  4c:	ldr	x0, [x0]
  50:	str	x0, [sp, #40]
  54:	b	88 <grub_dl_get+0x54>
  58:	ldr	x0, [sp, #40]
  5c:	ldr	x0, [x0]
  60:	mov	x1, x0
  64:	ldr	x0, [sp, #24]
  68:	bl	0 <grub_strcmp>
  6c:	cmp	w0, #0x0
  70:	b.ne	7c <grub_dl_get+0x48>  // b.any
  74:	ldr	x0, [sp, #40]
  78:	b	98 <grub_dl_get+0x64>
  7c:	ldr	x0, [sp, #40]
  80:	ldr	x0, [x0, #112]
  84:	str	x0, [sp, #40]
  88:	ldr	x0, [sp, #40]
  8c:	cmp	x0, #0x0
  90:	b.ne	58 <grub_dl_get+0x24>  // b.any
  94:	mov	x0, #0x0                   	// #0
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
	...

00000000000000a8 <grub_dl_is_persistent>:
  a8:	sub	sp, sp, #0x10
  ac:	str	x0, [sp, #8]
  b0:	ldr	x0, [sp, #8]
  b4:	ldr	w0, [x0, #12]
  b8:	add	sp, sp, #0x10
  bc:	ret

00000000000000c0 <grub_term_setcolorstate>:
  c0:	stp	x29, x30, [sp, #-32]!
  c4:	mov	x29, sp
  c8:	str	x0, [sp, #24]
  cc:	str	w1, [sp, #20]
  d0:	ldr	x0, [sp, #24]
  d4:	ldr	x0, [x0, #88]
  d8:	cmp	x0, #0x0
  dc:	b.eq	f4 <grub_term_setcolorstate+0x34>  // b.none
  e0:	ldr	x0, [sp, #24]
  e4:	ldr	x2, [x0, #88]
  e8:	ldr	w1, [sp, #20]
  ec:	ldr	x0, [sp, #24]
  f0:	blr	x2
  f4:	nop
  f8:	ldp	x29, x30, [sp], #32
  fc:	ret

0000000000000100 <grub_setcolorstate>:
 100:	stp	x29, x30, [sp, #-48]!
 104:	mov	x29, sp
 108:	str	w0, [sp, #28]
 10c:	adrp	x0, 0 <grub_isprint>
 110:	add	x0, x0, #0x0
 114:	ldr	x0, [x0]
 118:	ldr	x0, [x0]
 11c:	str	x0, [sp, #40]
 120:	b	13c <grub_setcolorstate+0x3c>
 124:	ldr	w1, [sp, #28]
 128:	ldr	x0, [sp, #40]
 12c:	bl	c0 <grub_term_setcolorstate>
 130:	ldr	x0, [sp, #40]
 134:	ldr	x0, [x0]
 138:	str	x0, [sp, #40]
 13c:	ldr	x0, [sp, #40]
 140:	cmp	x0, #0x0
 144:	b.ne	124 <grub_setcolorstate+0x24>  // b.any
 148:	nop
 14c:	nop
 150:	ldp	x29, x30, [sp], #48
 154:	ret
	...

0000000000000160 <grub_register_command>:
 160:	stp	x29, x30, [sp, #-48]!
 164:	mov	x29, sp
 168:	str	x0, [sp, #40]
 16c:	str	x1, [sp, #32]
 170:	str	x2, [sp, #24]
 174:	str	x3, [sp, #16]
 178:	mov	w4, #0x0                   	// #0
 17c:	ldr	x3, [sp, #16]
 180:	ldr	x2, [sp, #24]
 184:	ldr	x1, [sp, #32]
 188:	ldr	x0, [sp, #40]
 18c:	bl	0 <grub_register_command_prio>
 190:	ldp	x29, x30, [sp], #48
 194:	ret

0000000000000198 <grub_mini_cmd_cat>:
 198:	sub	sp, sp, #0x250
 19c:	stp	x29, x30, [sp]
 1a0:	mov	x29, sp
 1a4:	str	x0, [sp, #40]
 1a8:	str	w1, [sp, #36]
 1ac:	str	x2, [sp, #24]
 1b0:	ldr	w0, [sp, #36]
 1b4:	cmp	w0, #0x0
 1b8:	b.gt	1d4 <grub_mini_cmd_cat+0x3c>
 1bc:	adrp	x0, 0 <grub_isprint>
 1c0:	add	x0, x0, #0x0
 1c4:	ldr	x1, [x0]
 1c8:	mov	w0, #0x12                  	// #18
 1cc:	bl	0 <grub_error>
 1d0:	b	300 <grub_mini_cmd_cat+0x168>
 1d4:	ldr	x0, [sp, #24]
 1d8:	ldr	x0, [x0]
 1dc:	mov	w1, #0x2b                  	// #43
 1e0:	bl	0 <grub_file_open>
 1e4:	str	x0, [sp, #576]
 1e8:	ldr	x0, [sp, #576]
 1ec:	cmp	x0, #0x0
 1f0:	b.ne	2ac <grub_mini_cmd_cat+0x114>  // b.any
 1f4:	adrp	x0, 0 <grub_isprint>
 1f8:	add	x0, x0, #0x0
 1fc:	ldr	x0, [x0]
 200:	ldr	w0, [x0]
 204:	b	300 <grub_mini_cmd_cat+0x168>
 208:	str	wzr, [sp, #588]
 20c:	b	29c <grub_mini_cmd_cat+0x104>
 210:	ldrsw	x0, [sp, #588]
 214:	add	x1, sp, #0x30
 218:	ldrb	w0, [x1, x0]
 21c:	strb	w0, [sp, #567]
 220:	ldrb	w0, [sp, #567]
 224:	bl	0 <grub_isprint>
 228:	cmp	w0, #0x0
 22c:	b.ne	240 <grub_mini_cmd_cat+0xa8>  // b.any
 230:	ldrb	w0, [sp, #567]
 234:	bl	0 <grub_isspace>
 238:	cmp	w0, #0x0
 23c:	b.eq	268 <grub_mini_cmd_cat+0xd0>  // b.none
 240:	ldrb	w0, [sp, #567]
 244:	cmp	w0, #0xd
 248:	b.eq	268 <grub_mini_cmd_cat+0xd0>  // b.none
 24c:	ldrb	w0, [sp, #567]
 250:	mov	w1, w0
 254:	adrp	x0, 0 <grub_isprint>
 258:	add	x0, x0, #0x0
 25c:	ldr	x0, [x0]
 260:	bl	0 <grub_printf>
 264:	b	290 <grub_mini_cmd_cat+0xf8>
 268:	mov	w0, #0x2                   	// #2
 26c:	bl	100 <grub_setcolorstate>
 270:	ldrb	w0, [sp, #567]
 274:	mov	w1, w0
 278:	adrp	x0, 0 <grub_isprint>
 27c:	add	x0, x0, #0x0
 280:	ldr	x0, [x0]
 284:	bl	0 <grub_printf>
 288:	mov	w0, #0x0                   	// #0
 28c:	bl	100 <grub_setcolorstate>
 290:	ldr	w0, [sp, #588]
 294:	add	w0, w0, #0x1
 298:	str	w0, [sp, #588]
 29c:	ldrsw	x0, [sp, #588]
 2a0:	ldr	x1, [sp, #568]
 2a4:	cmp	x1, x0
 2a8:	b.gt	210 <grub_mini_cmd_cat+0x78>
 2ac:	add	x0, sp, #0x30
 2b0:	mov	x2, #0x200                 	// #512
 2b4:	mov	x1, x0
 2b8:	ldr	x0, [sp, #576]
 2bc:	bl	0 <grub_file_read>
 2c0:	str	x0, [sp, #568]
 2c4:	ldr	x0, [sp, #568]
 2c8:	cmp	x0, #0x0
 2cc:	b.gt	208 <grub_mini_cmd_cat+0x70>
 2d0:	adrp	x0, 0 <grub_isprint>
 2d4:	add	x0, x0, #0x0
 2d8:	ldr	x0, [x0]
 2dc:	ldr	x1, [x0]
 2e0:	adrp	x0, 0 <grub_isprint>
 2e4:	add	x0, x0, #0x0
 2e8:	ldr	x0, [x0]
 2ec:	blr	x1
 2f0:	bl	0 <grub_refresh>
 2f4:	ldr	x0, [sp, #576]
 2f8:	bl	0 <grub_file_close>
 2fc:	mov	w0, #0x0                   	// #0
 300:	ldp	x29, x30, [sp]
 304:	add	sp, sp, #0x250
 308:	ret
 30c:	nop
	...

0000000000000340 <grub_mini_cmd_help>:
 340:	stp	x29, x30, [sp, #-64]!
 344:	mov	x29, sp
 348:	str	x0, [sp, #40]
 34c:	str	w1, [sp, #36]
 350:	str	x2, [sp, #24]
 354:	adrp	x0, 0 <grub_isprint>
 358:	add	x0, x0, #0x0
 35c:	ldr	x0, [x0]
 360:	ldr	x0, [x0]
 364:	str	x0, [sp, #56]
 368:	b	3d0 <grub_mini_cmd_help+0x90>
 36c:	ldr	x0, [sp, #56]
 370:	ldr	x5, [x0, #16]
 374:	ldr	x0, [sp, #56]
 378:	ldr	w0, [x0, #24]
 37c:	and	w2, w0, #0xff
 380:	ldr	x0, [sp, #56]
 384:	ldr	w0, [x0, #24]
 388:	and	w0, w0, #0x100
 38c:	cmp	w0, #0x0
 390:	b.eq	39c <grub_mini_cmd_help+0x5c>  // b.none
 394:	mov	w0, #0x2b                  	// #43
 398:	b	3a0 <grub_mini_cmd_help+0x60>
 39c:	mov	w0, #0x2d                  	// #45
 3a0:	ldr	x1, [sp, #56]
 3a4:	ldr	x1, [x1, #56]
 3a8:	mov	x4, x1
 3ac:	mov	w3, w0
 3b0:	mov	x1, x5
 3b4:	adrp	x0, 0 <grub_isprint>
 3b8:	add	x0, x0, #0x0
 3bc:	ldr	x0, [x0]
 3c0:	bl	0 <grub_printf>
 3c4:	ldr	x0, [sp, #56]
 3c8:	ldr	x0, [x0]
 3cc:	str	x0, [sp, #56]
 3d0:	ldr	x0, [sp, #56]
 3d4:	cmp	x0, #0x0
 3d8:	b.ne	36c <grub_mini_cmd_help+0x2c>  // b.any
 3dc:	mov	w0, #0x0                   	// #0
 3e0:	ldp	x29, x30, [sp], #64
 3e4:	ret
	...

00000000000003f8 <grub_mini_cmd_dump>:
 3f8:	stp	x29, x30, [sp, #-64]!
 3fc:	mov	x29, sp
 400:	str	x0, [sp, #40]
 404:	str	w1, [sp, #36]
 408:	str	x2, [sp, #24]
 40c:	mov	x0, #0x4                   	// #4
 410:	str	x0, [sp, #48]
 414:	ldr	w0, [sp, #36]
 418:	cmp	w0, #0x0
 41c:	b.ne	438 <grub_mini_cmd_dump+0x40>  // b.any
 420:	adrp	x0, 0 <grub_isprint>
 424:	add	x0, x0, #0x0
 428:	ldr	x1, [x0]
 42c:	mov	w0, #0x12                  	// #18
 430:	bl	0 <grub_error>
 434:	b	500 <grub_mini_cmd_dump+0x108>
 438:	ldr	x0, [sp, #24]
 43c:	ldr	x0, [x0]
 440:	mov	w2, #0x0                   	// #0
 444:	mov	x1, #0x0                   	// #0
 448:	bl	0 <grub_strtoul>
 44c:	str	x0, [sp, #56]
 450:	adrp	x0, 0 <grub_isprint>
 454:	add	x0, x0, #0x0
 458:	ldr	x0, [x0]
 45c:	ldr	w0, [x0]
 460:	cmp	w0, #0x0
 464:	b.eq	47c <grub_mini_cmd_dump+0x84>  // b.none
 468:	adrp	x0, 0 <grub_isprint>
 46c:	add	x0, x0, #0x0
 470:	ldr	x0, [x0]
 474:	ldr	w0, [x0]
 478:	b	500 <grub_mini_cmd_dump+0x108>
 47c:	ldr	w0, [sp, #36]
 480:	cmp	w0, #0x1
 484:	b.le	4e8 <grub_mini_cmd_dump+0xf0>
 488:	ldr	x0, [sp, #24]
 48c:	add	x0, x0, #0x8
 490:	ldr	x0, [x0]
 494:	mov	w2, #0x0                   	// #0
 498:	mov	x1, #0x0                   	// #0
 49c:	bl	0 <grub_strtoul>
 4a0:	str	x0, [sp, #48]
 4a4:	b	4e8 <grub_mini_cmd_dump+0xf0>
 4a8:	ldr	x0, [sp, #56]
 4ac:	ldrb	w0, [x0]
 4b0:	lsr	w0, w0, #4
 4b4:	and	w0, w0, #0xff
 4b8:	mov	w1, w0
 4bc:	ldr	x0, [sp, #56]
 4c0:	ldrb	w0, [x0]
 4c4:	and	w0, w0, #0xf
 4c8:	mov	w2, w0
 4cc:	adrp	x0, 0 <grub_isprint>
 4d0:	add	x0, x0, #0x0
 4d4:	ldr	x0, [x0]
 4d8:	bl	0 <grub_printf>
 4dc:	ldr	x0, [sp, #56]
 4e0:	add	x0, x0, #0x1
 4e4:	str	x0, [sp, #56]
 4e8:	ldr	x0, [sp, #48]
 4ec:	sub	x1, x0, #0x1
 4f0:	str	x1, [sp, #48]
 4f4:	cmp	x0, #0x0
 4f8:	b.ne	4a8 <grub_mini_cmd_dump+0xb0>  // b.any
 4fc:	mov	w0, #0x0                   	// #0
 500:	ldp	x29, x30, [sp], #64
 504:	ret
	...

0000000000000520 <grub_mini_cmd_rmmod>:
 520:	stp	x29, x30, [sp, #-64]!
 524:	mov	x29, sp
 528:	str	x0, [sp, #40]
 52c:	str	w1, [sp, #36]
 530:	str	x2, [sp, #24]
 534:	ldr	w0, [sp, #36]
 538:	cmp	w0, #0x0
 53c:	b.ne	558 <grub_mini_cmd_rmmod+0x38>  // b.any
 540:	adrp	x0, 0 <grub_isprint>
 544:	add	x0, x0, #0x0
 548:	ldr	x1, [x0]
 54c:	mov	w0, #0x12                  	// #18
 550:	bl	0 <grub_error>
 554:	b	5d0 <grub_mini_cmd_rmmod+0xb0>
 558:	ldr	x0, [sp, #24]
 55c:	ldr	x0, [x0]
 560:	bl	34 <grub_dl_get>
 564:	str	x0, [sp, #56]
 568:	ldr	x0, [sp, #56]
 56c:	cmp	x0, #0x0
 570:	b.ne	58c <grub_mini_cmd_rmmod+0x6c>  // b.any
 574:	adrp	x0, 0 <grub_isprint>
 578:	add	x0, x0, #0x0
 57c:	ldr	x1, [x0]
 580:	mov	w0, #0x12                  	// #18
 584:	bl	0 <grub_error>
 588:	b	5d0 <grub_mini_cmd_rmmod+0xb0>
 58c:	ldr	x0, [sp, #56]
 590:	bl	a8 <grub_dl_is_persistent>
 594:	cmp	w0, #0x0
 598:	b.eq	5b4 <grub_mini_cmd_rmmod+0x94>  // b.none
 59c:	adrp	x0, 0 <grub_isprint>
 5a0:	add	x0, x0, #0x0
 5a4:	ldr	x1, [x0]
 5a8:	mov	w0, #0x12                  	// #18
 5ac:	bl	0 <grub_error>
 5b0:	b	5d0 <grub_mini_cmd_rmmod+0xb0>
 5b4:	ldr	x0, [sp, #56]
 5b8:	bl	0 <grub_dl_unref>
 5bc:	cmp	w0, #0x0
 5c0:	b.gt	5cc <grub_mini_cmd_rmmod+0xac>
 5c4:	ldr	x0, [sp, #56]
 5c8:	bl	0 <grub_dl_unload>
 5cc:	mov	w0, #0x0                   	// #0
 5d0:	ldp	x29, x30, [sp], #64
 5d4:	ret
	...

00000000000005f0 <grub_mini_cmd_lsmod>:
 5f0:	stp	x29, x30, [sp, #-64]!
 5f4:	mov	x29, sp
 5f8:	str	x0, [sp, #40]
 5fc:	str	w1, [sp, #36]
 600:	str	x2, [sp, #24]
 604:	adrp	x0, 0 <grub_isprint>
 608:	add	x0, x0, #0x0
 60c:	ldr	x0, [x0]
 610:	bl	0 <grub_printf_>
 614:	adrp	x0, 0 <grub_isprint>
 618:	add	x0, x0, #0x0
 61c:	ldr	x0, [x0]
 620:	ldr	x0, [x0]
 624:	str	x0, [sp, #56]
 628:	b	6f8 <grub_mini_cmd_lsmod+0x108>
 62c:	ldr	x0, [sp, #56]
 630:	ldr	x1, [x0]
 634:	ldr	x0, [sp, #56]
 638:	ldr	w0, [x0, #8]
 63c:	mov	w2, w0
 640:	adrp	x0, 0 <grub_isprint>
 644:	add	x0, x0, #0x0
 648:	ldr	x0, [x0]
 64c:	bl	0 <grub_printf>
 650:	ldr	x0, [sp, #56]
 654:	ldr	x0, [x0, #16]
 658:	str	x0, [sp, #48]
 65c:	b	6c0 <grub_mini_cmd_lsmod+0xd0>
 660:	ldr	x0, [sp, #56]
 664:	ldr	x0, [x0, #16]
 668:	ldr	x1, [sp, #48]
 66c:	cmp	x1, x0
 670:	b.eq	694 <grub_mini_cmd_lsmod+0xa4>  // b.none
 674:	adrp	x0, 0 <grub_isprint>
 678:	add	x0, x0, #0x0
 67c:	ldr	x0, [x0]
 680:	ldr	x1, [x0]
 684:	adrp	x0, 0 <grub_isprint>
 688:	add	x0, x0, #0x0
 68c:	ldr	x0, [x0]
 690:	blr	x1
 694:	ldr	x0, [sp, #48]
 698:	ldr	x0, [x0, #8]
 69c:	ldr	x0, [x0]
 6a0:	mov	x1, x0
 6a4:	adrp	x0, 0 <grub_isprint>
 6a8:	add	x0, x0, #0x0
 6ac:	ldr	x0, [x0]
 6b0:	bl	0 <grub_printf>
 6b4:	ldr	x0, [sp, #48]
 6b8:	ldr	x0, [x0]
 6bc:	str	x0, [sp, #48]
 6c0:	ldr	x0, [sp, #48]
 6c4:	cmp	x0, #0x0
 6c8:	b.ne	660 <grub_mini_cmd_lsmod+0x70>  // b.any
 6cc:	adrp	x0, 0 <grub_isprint>
 6d0:	add	x0, x0, #0x0
 6d4:	ldr	x0, [x0]
 6d8:	ldr	x1, [x0]
 6dc:	adrp	x0, 0 <grub_isprint>
 6e0:	add	x0, x0, #0x0
 6e4:	ldr	x0, [x0]
 6e8:	blr	x1
 6ec:	ldr	x0, [sp, #56]
 6f0:	ldr	x0, [x0, #112]
 6f4:	str	x0, [sp, #56]
 6f8:	ldr	x0, [sp, #56]
 6fc:	cmp	x0, #0x0
 700:	b.ne	62c <grub_mini_cmd_lsmod+0x3c>  // b.any
 704:	mov	w0, #0x0                   	// #0
 708:	ldp	x29, x30, [sp], #64
 70c:	ret
	...

0000000000000748 <grub_mini_cmd_exit>:
 748:	stp	x29, x30, [sp, #-48]!
 74c:	mov	x29, sp
 750:	str	x0, [sp, #40]
 754:	str	w1, [sp, #36]
 758:	str	x2, [sp, #24]
 75c:	bl	0 <grub_exit>

0000000000000760 <grub_mod_init>:
 760:	stp	x29, x30, [sp, #-32]!
 764:	mov	x29, sp
 768:	str	x0, [sp, #24]
 76c:	adrp	x0, 0 <grub_isprint>
 770:	add	x0, x0, #0x0
 774:	ldr	x3, [x0]
 778:	adrp	x0, 0 <grub_isprint>
 77c:	add	x0, x0, #0x0
 780:	ldr	x2, [x0]
 784:	adrp	x0, 0 <grub_isprint>
 788:	add	x0, x0, #0x0
 78c:	ldr	x1, [x0]
 790:	adrp	x0, 0 <grub_isprint>
 794:	add	x0, x0, #0x0
 798:	ldr	x0, [x0]
 79c:	bl	160 <grub_register_command>
 7a0:	mov	x1, x0
 7a4:	adrp	x0, 0 <grub_isprint>
 7a8:	add	x0, x0, #0x0
 7ac:	ldr	x0, [x0]
 7b0:	str	x1, [x0]
 7b4:	adrp	x0, 0 <grub_isprint>
 7b8:	add	x0, x0, #0x0
 7bc:	ldr	x3, [x0]
 7c0:	mov	x2, #0x0                   	// #0
 7c4:	adrp	x0, 0 <grub_isprint>
 7c8:	add	x0, x0, #0x0
 7cc:	ldr	x1, [x0]
 7d0:	adrp	x0, 0 <grub_isprint>
 7d4:	add	x0, x0, #0x0
 7d8:	ldr	x0, [x0]
 7dc:	bl	160 <grub_register_command>
 7e0:	mov	x1, x0
 7e4:	adrp	x0, 0 <grub_isprint>
 7e8:	add	x0, x0, #0x0
 7ec:	ldr	x0, [x0]
 7f0:	str	x1, [x0]
 7f4:	adrp	x0, 0 <grub_isprint>
 7f8:	add	x0, x0, #0x0
 7fc:	ldr	x3, [x0]
 800:	adrp	x0, 0 <grub_isprint>
 804:	add	x0, x0, #0x0
 808:	ldr	x2, [x0]
 80c:	adrp	x0, 0 <grub_isprint>
 810:	add	x0, x0, #0x0
 814:	ldr	x1, [x0]
 818:	adrp	x0, 0 <grub_isprint>
 81c:	add	x0, x0, #0x0
 820:	ldr	x0, [x0]
 824:	bl	160 <grub_register_command>
 828:	mov	x1, x0
 82c:	adrp	x0, 0 <grub_isprint>
 830:	add	x0, x0, #0x0
 834:	ldr	x0, [x0]
 838:	str	x1, [x0]
 83c:	adrp	x0, 0 <grub_isprint>
 840:	add	x0, x0, #0x0
 844:	ldr	x3, [x0]
 848:	adrp	x0, 0 <grub_isprint>
 84c:	add	x0, x0, #0x0
 850:	ldr	x2, [x0]
 854:	adrp	x0, 0 <grub_isprint>
 858:	add	x0, x0, #0x0
 85c:	ldr	x1, [x0]
 860:	adrp	x0, 0 <grub_isprint>
 864:	add	x0, x0, #0x0
 868:	ldr	x0, [x0]
 86c:	bl	160 <grub_register_command>
 870:	mov	x1, x0
 874:	adrp	x0, 0 <grub_isprint>
 878:	add	x0, x0, #0x0
 87c:	ldr	x0, [x0]
 880:	str	x1, [x0]
 884:	adrp	x0, 0 <grub_isprint>
 888:	add	x0, x0, #0x0
 88c:	ldr	x3, [x0]
 890:	mov	x2, #0x0                   	// #0
 894:	adrp	x0, 0 <grub_isprint>
 898:	add	x0, x0, #0x0
 89c:	ldr	x1, [x0]
 8a0:	adrp	x0, 0 <grub_isprint>
 8a4:	add	x0, x0, #0x0
 8a8:	ldr	x0, [x0]
 8ac:	bl	160 <grub_register_command>
 8b0:	mov	x1, x0
 8b4:	adrp	x0, 0 <grub_isprint>
 8b8:	add	x0, x0, #0x0
 8bc:	ldr	x0, [x0]
 8c0:	str	x1, [x0]
 8c4:	adrp	x0, 0 <grub_isprint>
 8c8:	add	x0, x0, #0x0
 8cc:	ldr	x3, [x0]
 8d0:	mov	x2, #0x0                   	// #0
 8d4:	adrp	x0, 0 <grub_isprint>
 8d8:	add	x0, x0, #0x0
 8dc:	ldr	x1, [x0]
 8e0:	adrp	x0, 0 <grub_isprint>
 8e4:	add	x0, x0, #0x0
 8e8:	ldr	x0, [x0]
 8ec:	bl	160 <grub_register_command>
 8f0:	mov	x1, x0
 8f4:	adrp	x0, 0 <grub_isprint>
 8f8:	add	x0, x0, #0x0
 8fc:	ldr	x0, [x0]
 900:	str	x1, [x0]
 904:	nop
 908:	ldp	x29, x30, [sp], #32
 90c:	ret
	...

00000000000009e8 <grub_mod_fini>:
 9e8:	stp	x29, x30, [sp, #-16]!
 9ec:	mov	x29, sp
 9f0:	adrp	x0, 0 <grub_isprint>
 9f4:	add	x0, x0, #0x0
 9f8:	ldr	x0, [x0]
 9fc:	ldr	x0, [x0]
 a00:	bl	0 <grub_unregister_command>
 a04:	adrp	x0, 0 <grub_isprint>
 a08:	add	x0, x0, #0x0
 a0c:	ldr	x0, [x0]
 a10:	ldr	x0, [x0]
 a14:	bl	0 <grub_unregister_command>
 a18:	adrp	x0, 0 <grub_isprint>
 a1c:	add	x0, x0, #0x0
 a20:	ldr	x0, [x0]
 a24:	ldr	x0, [x0]
 a28:	bl	0 <grub_unregister_command>
 a2c:	adrp	x0, 0 <grub_isprint>
 a30:	add	x0, x0, #0x0
 a34:	ldr	x0, [x0]
 a38:	ldr	x0, [x0]
 a3c:	bl	0 <grub_unregister_command>
 a40:	adrp	x0, 0 <grub_isprint>
 a44:	add	x0, x0, #0x0
 a48:	ldr	x0, [x0]
 a4c:	ldr	x0, [x0]
 a50:	bl	0 <grub_unregister_command>
 a54:	adrp	x0, 0 <grub_isprint>
 a58:	add	x0, x0, #0x0
 a5c:	ldr	x0, [x0]
 a60:	ldr	x0, [x0]
 a64:	bl	0 <grub_unregister_command>
 a68:	nop
 a6c:	ldp	x29, x30, [sp], #16
 a70:	ret
 a74:	nop
	...
