
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Piece.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000fc8 <_init>:
 fc8:	stp	x29, x30, [sp, #-16]!
 fcc:	mov	x29, sp
 fd0:	bl	1290 <call_weak_fn>
 fd4:	ldp	x29, x30, [sp], #16
 fd8:	ret

Disassembly of section .plt:

0000000000000fe0 <.plt>:
     fe0:	stp	x16, x30, [sp, #-16]!
     fe4:	adrp	x16, 16000 <__FRAME_END__+0xffa0>
     fe8:	ldr	x17, [x16, #4088]
     fec:	add	x16, x16, #0xff8
     ff0:	br	x17
     ff4:	nop
     ff8:	nop
     ffc:	nop

0000000000001000 <Perl_sv_2iv_flags@plt>:
    1000:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1004:	ldr	x17, [x16]
    1008:	add	x16, x16, #0x0
    100c:	br	x17

0000000000001010 <strlen@plt>:
    1010:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1014:	ldr	x17, [x16, #8]
    1018:	add	x16, x16, #0x8
    101c:	br	x17

0000000000001020 <Perl_newRV_noinc@plt>:
    1020:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1024:	ldr	x17, [x16, #16]
    1028:	add	x16, x16, #0x10
    102c:	br	x17

0000000000001030 <Perl_stack_grow@plt>:
    1030:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1034:	ldr	x17, [x16, #24]
    1038:	add	x16, x16, #0x18
    103c:	br	x17

0000000000001040 <__cxa_finalize@plt>:
    1040:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1044:	ldr	x17, [x16, #32]
    1048:	add	x16, x16, #0x20
    104c:	br	x17

0000000000001050 <strftime@plt>:
    1050:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1054:	ldr	x17, [x16, #40]
    1058:	add	x16, x16, #0x28
    105c:	br	x17

0000000000001060 <Perl_av_len@plt>:
    1060:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1064:	ldr	x17, [x16, #48]
    1068:	add	x16, x16, #0x30
    106c:	br	x17

0000000000001070 <Perl_warn_nocontext@plt>:
    1070:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1074:	ldr	x17, [x16, #56]
    1078:	add	x16, x16, #0x38
    107c:	br	x17

0000000000001080 <localtime@plt>:
    1080:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1084:	ldr	x17, [x16, #64]
    1088:	add	x16, x16, #0x40
    108c:	br	x17

0000000000001090 <malloc@plt>:
    1090:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1094:	ldr	x17, [x16, #72]
    1098:	add	x16, x16, #0x48
    109c:	br	x17

00000000000010a0 <tzset@plt>:
    10a0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10a4:	ldr	x17, [x16, #80]
    10a8:	add	x16, x16, #0x50
    10ac:	br	x17

00000000000010b0 <memset@plt>:
    10b0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10b4:	ldr	x17, [x16, #88]
    10b8:	add	x16, x16, #0x58
    10bc:	br	x17

00000000000010c0 <Perl_sv_2pv_flags@plt>:
    10c0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10c4:	ldr	x17, [x16, #96]
    10c8:	add	x16, x16, #0x60
    10cc:	br	x17

00000000000010d0 <Perl_xs_boot_epilog@plt>:
    10d0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10d4:	ldr	x17, [x16, #104]
    10d8:	add	x16, x16, #0x68
    10dc:	br	x17

00000000000010e0 <Perl_safesysmalloc@plt>:
    10e0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10e4:	ldr	x17, [x16, #112]
    10e8:	add	x16, x16, #0x70
    10ec:	br	x17

00000000000010f0 <gmtime@plt>:
    10f0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    10f4:	ldr	x17, [x16, #120]
    10f8:	add	x16, x16, #0x78
    10fc:	br	x17

0000000000001100 <__stack_chk_fail@plt>:
    1100:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1104:	ldr	x17, [x16, #128]
    1108:	add	x16, x16, #0x80
    110c:	br	x17

0000000000001110 <__gmon_start__@plt>:
    1110:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1114:	ldr	x17, [x16, #136]
    1118:	add	x16, x16, #0x88
    111c:	br	x17

0000000000001120 <Perl_croak_xs_usage@plt>:
    1120:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1124:	ldr	x17, [x16, #144]
    1128:	add	x16, x16, #0x90
    112c:	br	x17

0000000000001130 <Perl_sv_2nv_flags@plt>:
    1130:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1134:	ldr	x17, [x16, #152]
    1138:	add	x16, x16, #0x98
    113c:	br	x17

0000000000001140 <Perl_av_push@plt>:
    1140:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1144:	ldr	x17, [x16, #160]
    1148:	add	x16, x16, #0xa0
    114c:	br	x17

0000000000001150 <Perl_newSVpv@plt>:
    1150:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1154:	ldr	x17, [x16, #168]
    1158:	add	x16, x16, #0xa8
    115c:	br	x17

0000000000001160 <strcmp@plt>:
    1160:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1164:	ldr	x17, [x16, #176]
    1168:	add	x16, x16, #0xb0
    116c:	br	x17

0000000000001170 <__ctype_b_loc@plt>:
    1170:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1174:	ldr	x17, [x16, #184]
    1178:	add	x16, x16, #0xb8
    117c:	br	x17

0000000000001180 <strtol@plt>:
    1180:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1184:	ldr	x17, [x16, #192]
    1188:	add	x16, x16, #0xc0
    118c:	br	x17

0000000000001190 <Perl_croak_nocontext@plt>:
    1190:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1194:	ldr	x17, [x16, #200]
    1198:	add	x16, x16, #0xc8
    119c:	br	x17

00000000000011a0 <free@plt>:
    11a0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11a4:	ldr	x17, [x16, #208]
    11a8:	add	x16, x16, #0xd0
    11ac:	br	x17

00000000000011b0 <strncasecmp@plt>:
    11b0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11b4:	ldr	x17, [x16, #216]
    11b8:	add	x16, x16, #0xd8
    11bc:	br	x17

00000000000011c0 <Perl_newXS_flags@plt>:
    11c0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11c4:	ldr	x17, [x16, #224]
    11c8:	add	x16, x16, #0xe0
    11cc:	br	x17

00000000000011d0 <Perl_sv_2mortal@plt>:
    11d0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11d4:	ldr	x17, [x16, #232]
    11d8:	add	x16, x16, #0xe8
    11dc:	br	x17

00000000000011e0 <Perl_safesysfree@plt>:
    11e0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11e4:	ldr	x17, [x16, #240]
    11e8:	add	x16, x16, #0xf0
    11ec:	br	x17

00000000000011f0 <Perl_safesysrealloc@plt>:
    11f0:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    11f4:	ldr	x17, [x16, #248]
    11f8:	add	x16, x16, #0xf8
    11fc:	br	x17

0000000000001200 <Perl_xs_handshake@plt>:
    1200:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1204:	ldr	x17, [x16, #256]
    1208:	add	x16, x16, #0x100
    120c:	br	x17

0000000000001210 <Perl_av_fetch@plt>:
    1210:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1214:	ldr	x17, [x16, #264]
    1218:	add	x16, x16, #0x108
    121c:	br	x17

0000000000001220 <Perl_hv_common_key_len@plt>:
    1220:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1224:	ldr	x17, [x16, #272]
    1228:	add	x16, x16, #0x110
    122c:	br	x17

0000000000001230 <Perl_newRV@plt>:
    1230:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1234:	ldr	x17, [x16, #280]
    1238:	add	x16, x16, #0x118
    123c:	br	x17

0000000000001240 <Perl_newSV_type@plt>:
    1240:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1244:	ldr	x17, [x16, #288]
    1248:	add	x16, x16, #0x120
    124c:	br	x17

0000000000001250 <strncpy@plt>:
    1250:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1254:	ldr	x17, [x16, #296]
    1258:	add	x16, x16, #0x128
    125c:	br	x17

0000000000001260 <Perl_newSViv@plt>:
    1260:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1264:	ldr	x17, [x16, #304]
    1268:	add	x16, x16, #0x130
    126c:	br	x17

0000000000001270 <__errno_location@plt>:
    1270:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1274:	ldr	x17, [x16, #312]
    1278:	add	x16, x16, #0x138
    127c:	br	x17

0000000000001280 <Perl_newSVpvn@plt>:
    1280:	adrp	x16, 17000 <Perl_sv_2iv_flags>
    1284:	ldr	x17, [x16, #320]
    1288:	add	x16, x16, #0x140
    128c:	br	x17

Disassembly of section .text:

0000000000001290 <call_weak_fn>:
    1290:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    1294:	ldr	x0, [x0, #4040]
    1298:	cbz	x0, 12a0 <call_weak_fn+0x10>
    129c:	b	1110 <__gmon_start__@plt>
    12a0:	ret

00000000000012a4 <deregister_tm_clones>:
    12a4:	stp	x29, x30, [sp, #-32]!
    12a8:	mov	x29, sp
    12ac:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    12b0:	add	x0, x0, #0x150
    12b4:	str	x0, [sp, #24]
    12b8:	ldr	x0, [sp, #24]
    12bc:	str	x0, [sp, #24]
    12c0:	ldr	x1, [sp, #24]
    12c4:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    12c8:	add	x0, x0, #0x150
    12cc:	cmp	x1, x0
    12d0:	b.eq	1308 <deregister_tm_clones+0x64>  // b.none
    12d4:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    12d8:	ldr	x0, [x0, #4024]
    12dc:	str	x0, [sp, #16]
    12e0:	ldr	x0, [sp, #16]
    12e4:	str	x0, [sp, #16]
    12e8:	ldr	x0, [sp, #16]
    12ec:	cmp	x0, #0x0
    12f0:	b.eq	130c <deregister_tm_clones+0x68>  // b.none
    12f4:	ldr	x1, [sp, #16]
    12f8:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    12fc:	add	x0, x0, #0x150
    1300:	blr	x1
    1304:	b	130c <deregister_tm_clones+0x68>
    1308:	nop
    130c:	ldp	x29, x30, [sp], #32
    1310:	ret

0000000000001314 <register_tm_clones>:
    1314:	stp	x29, x30, [sp, #-48]!
    1318:	mov	x29, sp
    131c:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    1320:	add	x0, x0, #0x150
    1324:	str	x0, [sp, #40]
    1328:	ldr	x0, [sp, #40]
    132c:	str	x0, [sp, #40]
    1330:	ldr	x1, [sp, #40]
    1334:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    1338:	add	x0, x0, #0x150
    133c:	sub	x0, x1, x0
    1340:	asr	x0, x0, #3
    1344:	lsr	x1, x0, #63
    1348:	add	x0, x1, x0
    134c:	asr	x0, x0, #1
    1350:	str	x0, [sp, #32]
    1354:	ldr	x0, [sp, #32]
    1358:	cmp	x0, #0x0
    135c:	b.eq	1398 <register_tm_clones+0x84>  // b.none
    1360:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    1364:	ldr	x0, [x0, #4064]
    1368:	str	x0, [sp, #24]
    136c:	ldr	x0, [sp, #24]
    1370:	str	x0, [sp, #24]
    1374:	ldr	x0, [sp, #24]
    1378:	cmp	x0, #0x0
    137c:	b.eq	139c <register_tm_clones+0x88>  // b.none
    1380:	ldr	x2, [sp, #24]
    1384:	ldr	x1, [sp, #32]
    1388:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    138c:	add	x0, x0, #0x150
    1390:	blr	x2
    1394:	b	139c <register_tm_clones+0x88>
    1398:	nop
    139c:	ldp	x29, x30, [sp], #48
    13a0:	ret

00000000000013a4 <__do_global_dtors_aux>:
    13a4:	stp	x29, x30, [sp, #-16]!
    13a8:	mov	x29, sp
    13ac:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    13b0:	add	x0, x0, #0x150
    13b4:	ldrb	w0, [x0]
    13b8:	and	x0, x0, #0xff
    13bc:	cmp	x0, #0x0
    13c0:	b.ne	13fc <__do_global_dtors_aux+0x58>  // b.any
    13c4:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    13c8:	ldr	x0, [x0, #4032]
    13cc:	cmp	x0, #0x0
    13d0:	b.eq	13e4 <__do_global_dtors_aux+0x40>  // b.none
    13d4:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    13d8:	add	x0, x0, #0x148
    13dc:	ldr	x0, [x0]
    13e0:	bl	1040 <__cxa_finalize@plt>
    13e4:	bl	12a4 <deregister_tm_clones>
    13e8:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    13ec:	add	x0, x0, #0x150
    13f0:	mov	w1, #0x1                   	// #1
    13f4:	strb	w1, [x0]
    13f8:	b	1400 <__do_global_dtors_aux+0x5c>
    13fc:	nop
    1400:	ldp	x29, x30, [sp], #16
    1404:	ret

0000000000001408 <frame_dummy>:
    1408:	stp	x29, x30, [sp, #-16]!
    140c:	mov	x29, sp
    1410:	bl	1314 <register_tm_clones>
    1414:	nop
    1418:	ldp	x29, x30, [sp], #16
    141c:	ret

0000000000001420 <S_POPMARK>:
    1420:	sub	sp, sp, #0x10
    1424:	str	x0, [sp, #8]
    1428:	ldr	x0, [sp, #8]
    142c:	ldr	x0, [x0, #120]
    1430:	sub	x2, x0, #0x4
    1434:	ldr	x1, [sp, #8]
    1438:	str	x2, [x1, #120]
    143c:	ldr	w0, [x0]
    1440:	add	sp, sp, #0x10
    1444:	ret

0000000000001448 <S_croak_memory_wrap>:
    1448:	stp	x29, x30, [sp, #-16]!
    144c:	mov	x29, sp
    1450:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    1454:	ldr	x1, [x0, #4056]
    1458:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    145c:	add	x0, x0, #0x820
    1460:	bl	1190 <Perl_croak_nocontext@plt>

0000000000001464 <my_tzset>:
    1464:	stp	x29, x30, [sp, #-32]!
    1468:	mov	x29, sp
    146c:	str	x0, [sp, #24]
    1470:	bl	10a0 <tzset@plt>
    1474:	nop
    1478:	ldp	x29, x30, [sp], #32
    147c:	ret

0000000000001480 <my_mini_mktime>:
    1480:	sub	sp, sp, #0x30
    1484:	str	x0, [sp, #8]
    1488:	ldr	x0, [sp, #8]
    148c:	ldr	w0, [x0, #20]
    1490:	add	w0, w0, #0x76c
    1494:	str	w0, [sp, #32]
    1498:	ldr	x0, [sp, #8]
    149c:	ldr	w0, [x0, #16]
    14a0:	str	w0, [sp, #24]
    14a4:	ldr	x0, [sp, #8]
    14a8:	ldr	w0, [x0, #12]
    14ac:	str	w0, [sp, #28]
    14b0:	ldr	x0, [sp, #8]
    14b4:	ldr	w0, [x0, #28]
    14b8:	cmp	w0, #0x0
    14bc:	b.lt	14f4 <my_mini_mktime+0x74>  // b.tstop
    14c0:	ldr	w0, [sp, #28]
    14c4:	cmp	w0, #0x0
    14c8:	b.gt	14f4 <my_mini_mktime+0x74>
    14cc:	ldr	w0, [sp, #24]
    14d0:	cmp	w0, #0x0
    14d4:	b.gt	14f4 <my_mini_mktime+0x74>
    14d8:	str	wzr, [sp, #24]
    14dc:	str	wzr, [sp, #28]
    14e0:	ldr	x0, [sp, #8]
    14e4:	ldr	w0, [x0, #28]
    14e8:	add	w0, w0, #0x1
    14ec:	str	w0, [sp, #36]
    14f0:	b	14f8 <my_mini_mktime+0x78>
    14f4:	str	wzr, [sp, #36]
    14f8:	ldr	w0, [sp, #24]
    14fc:	cmp	w0, #0x1
    1500:	b.le	1514 <my_mini_mktime+0x94>
    1504:	ldr	w0, [sp, #24]
    1508:	add	w0, w0, #0x2
    150c:	str	w0, [sp, #24]
    1510:	b	152c <my_mini_mktime+0xac>
    1514:	ldr	w0, [sp, #24]
    1518:	add	w0, w0, #0xe
    151c:	str	w0, [sp, #24]
    1520:	ldr	w0, [sp, #32]
    1524:	sub	w0, w0, #0x1
    1528:	str	w0, [sp, #32]
    152c:	ldr	w1, [sp, #32]
    1530:	mov	w0, #0x16d                 	// #365
    1534:	mul	w1, w1, w0
    1538:	ldr	w0, [sp, #32]
    153c:	add	w2, w0, #0x3
    1540:	cmp	w0, #0x0
    1544:	csel	w0, w2, w0, lt  // lt = tstop
    1548:	asr	w0, w0, #2
    154c:	add	w1, w1, w0
    1550:	ldr	w0, [sp, #32]
    1554:	mov	w2, #0x851f                	// #34079
    1558:	movk	w2, #0x51eb, lsl #16
    155c:	smull	x2, w0, w2
    1560:	lsr	x2, x2, #32
    1564:	asr	w2, w2, #5
    1568:	asr	w0, w0, #31
    156c:	sub	w0, w0, w2
    1570:	add	w1, w1, w0
    1574:	ldr	w0, [sp, #32]
    1578:	mov	w2, #0x851f                	// #34079
    157c:	movk	w2, #0x51eb, lsl #16
    1580:	smull	x2, w0, w2
    1584:	lsr	x2, x2, #32
    1588:	asr	w2, w2, #7
    158c:	asr	w0, w0, #31
    1590:	sub	w0, w2, w0
    1594:	add	w0, w1, w0
    1598:	str	w0, [sp, #16]
    159c:	ldr	w1, [sp, #24]
    15a0:	mov	w0, #0x99                  	// #153
    15a4:	mul	w0, w1, w0
    15a8:	mov	w1, #0x6667                	// #26215
    15ac:	movk	w1, #0x6666, lsl #16
    15b0:	smull	x1, w0, w1
    15b4:	lsr	x1, x1, #32
    15b8:	asr	w1, w1, #1
    15bc:	asr	w0, w0, #31
    15c0:	sub	w1, w1, w0
    15c4:	ldr	w0, [sp, #28]
    15c8:	add	w1, w1, w0
    15cc:	ldr	w0, [sp, #36]
    15d0:	add	w0, w1, w0
    15d4:	ldr	w1, [sp, #16]
    15d8:	add	w0, w1, w0
    15dc:	str	w0, [sp, #16]
    15e0:	ldr	x0, [sp, #8]
    15e4:	ldr	w0, [x0]
    15e8:	cmp	w0, #0x3c
    15ec:	b.hi	15f8 <my_mini_mktime+0x178>  // b.pmore
    15f0:	str	wzr, [sp, #20]
    15f4:	b	160c <my_mini_mktime+0x18c>
    15f8:	ldr	x0, [sp, #8]
    15fc:	ldr	w0, [x0]
    1600:	str	w0, [sp, #20]
    1604:	ldr	x0, [sp, #8]
    1608:	str	wzr, [x0]
    160c:	ldr	x0, [sp, #8]
    1610:	ldr	w1, [x0, #4]
    1614:	mov	w0, w1
    1618:	lsl	w0, w0, #4
    161c:	sub	w0, w0, w1
    1620:	lsl	w0, w0, #2
    1624:	mov	w1, w0
    1628:	ldr	w0, [sp, #20]
    162c:	add	w0, w0, w1
    1630:	str	w0, [sp, #20]
    1634:	ldr	x0, [sp, #8]
    1638:	ldr	w1, [x0, #8]
    163c:	mov	w0, #0xe10                 	// #3600
    1640:	mul	w0, w1, w0
    1644:	ldr	w1, [sp, #20]
    1648:	add	w0, w1, w0
    164c:	str	w0, [sp, #20]
    1650:	ldr	w0, [sp, #20]
    1654:	cmp	w0, #0x0
    1658:	b.ge	177c <my_mini_mktime+0x2fc>  // b.tcont
    165c:	ldr	w0, [sp, #20]
    1660:	mov	w1, #0x4507                	// #17671
    1664:	movk	w1, #0xc22e, lsl #16
    1668:	smull	x1, w0, w1
    166c:	lsr	x1, x1, #32
    1670:	add	w1, w0, w1
    1674:	asr	w2, w1, #16
    1678:	asr	w1, w0, #31
    167c:	sub	w1, w2, w1
    1680:	mov	w2, #0x5180                	// #20864
    1684:	movk	w2, #0x1, lsl #16
    1688:	mul	w1, w1, w2
    168c:	sub	w1, w0, w1
    1690:	cmp	w1, #0x0
    1694:	b.ge	1710 <my_mini_mktime+0x290>  // b.tcont
    1698:	ldr	w0, [sp, #20]
    169c:	mov	w1, #0x4507                	// #17671
    16a0:	movk	w1, #0xc22e, lsl #16
    16a4:	smull	x1, w0, w1
    16a8:	lsr	x1, x1, #32
    16ac:	add	w1, w0, w1
    16b0:	asr	w1, w1, #16
    16b4:	asr	w0, w0, #31
    16b8:	sub	w1, w1, w0
    16bc:	ldr	w0, [sp, #16]
    16c0:	add	w0, w1, w0
    16c4:	sub	w0, w0, #0x1
    16c8:	str	w0, [sp, #16]
    16cc:	ldr	w0, [sp, #20]
    16d0:	mov	w1, #0x4507                	// #17671
    16d4:	movk	w1, #0xc22e, lsl #16
    16d8:	smull	x1, w0, w1
    16dc:	lsr	x1, x1, #32
    16e0:	add	w1, w0, w1
    16e4:	asr	w1, w1, #16
    16e8:	asr	w0, w0, #31
    16ec:	sub	w0, w0, w1
    16f0:	add	w1, w0, #0x1
    16f4:	mov	w0, #0x5180                	// #20864
    16f8:	movk	w0, #0x1, lsl #16
    16fc:	mul	w0, w1, w0
    1700:	ldr	w1, [sp, #20]
    1704:	add	w0, w1, w0
    1708:	str	w0, [sp, #20]
    170c:	b	17f8 <my_mini_mktime+0x378>
    1710:	ldr	w0, [sp, #20]
    1714:	mov	w1, #0x4507                	// #17671
    1718:	movk	w1, #0xc22e, lsl #16
    171c:	smull	x1, w0, w1
    1720:	lsr	x1, x1, #32
    1724:	add	w1, w0, w1
    1728:	asr	w1, w1, #16
    172c:	asr	w0, w0, #31
    1730:	sub	w0, w1, w0
    1734:	ldr	w1, [sp, #16]
    1738:	add	w0, w1, w0
    173c:	str	w0, [sp, #16]
    1740:	ldr	w0, [sp, #20]
    1744:	mov	w1, #0x4507                	// #17671
    1748:	movk	w1, #0xc22e, lsl #16
    174c:	smull	x1, w0, w1
    1750:	lsr	x1, x1, #32
    1754:	add	w1, w0, w1
    1758:	asr	w2, w1, #16
    175c:	asr	w1, w0, #31
    1760:	sub	w2, w2, w1
    1764:	mov	w1, #0x5180                	// #20864
    1768:	movk	w1, #0x1, lsl #16
    176c:	mul	w1, w2, w1
    1770:	sub	w0, w0, w1
    1774:	str	w0, [sp, #20]
    1778:	b	17f8 <my_mini_mktime+0x378>
    177c:	ldr	w1, [sp, #20]
    1780:	mov	w0, #0x517f                	// #20863
    1784:	movk	w0, #0x1, lsl #16
    1788:	cmp	w1, w0
    178c:	b.le	17f8 <my_mini_mktime+0x378>
    1790:	ldr	w0, [sp, #20]
    1794:	mov	w1, #0x4507                	// #17671
    1798:	movk	w1, #0xc22e, lsl #16
    179c:	smull	x1, w0, w1
    17a0:	lsr	x1, x1, #32
    17a4:	add	w1, w0, w1
    17a8:	asr	w1, w1, #16
    17ac:	asr	w0, w0, #31
    17b0:	sub	w0, w1, w0
    17b4:	ldr	w1, [sp, #16]
    17b8:	add	w0, w1, w0
    17bc:	str	w0, [sp, #16]
    17c0:	ldr	w0, [sp, #20]
    17c4:	mov	w1, #0x4507                	// #17671
    17c8:	movk	w1, #0xc22e, lsl #16
    17cc:	smull	x1, w0, w1
    17d0:	lsr	x1, x1, #32
    17d4:	add	w1, w0, w1
    17d8:	asr	w2, w1, #16
    17dc:	asr	w1, w0, #31
    17e0:	sub	w2, w2, w1
    17e4:	mov	w1, #0x5180                	// #20864
    17e8:	movk	w1, #0x1, lsl #16
    17ec:	mul	w1, w2, w1
    17f0:	sub	w0, w0, w1
    17f4:	str	w0, [sp, #20]
    17f8:	ldr	w0, [sp, #20]
    17fc:	mov	w1, #0xb3c5                	// #46021
    1800:	movk	w1, #0x91a2, lsl #16
    1804:	smull	x1, w0, w1
    1808:	lsr	x1, x1, #32
    180c:	add	w1, w0, w1
    1810:	asr	w1, w1, #11
    1814:	asr	w0, w0, #31
    1818:	sub	w1, w1, w0
    181c:	ldr	x0, [sp, #8]
    1820:	str	w1, [x0, #8]
    1824:	ldr	w0, [sp, #20]
    1828:	mov	w1, #0xb3c5                	// #46021
    182c:	movk	w1, #0x91a2, lsl #16
    1830:	smull	x1, w0, w1
    1834:	lsr	x1, x1, #32
    1838:	add	w1, w0, w1
    183c:	asr	w2, w1, #11
    1840:	asr	w1, w0, #31
    1844:	sub	w2, w2, w1
    1848:	mov	w1, #0xe10                 	// #3600
    184c:	mul	w1, w2, w1
    1850:	sub	w0, w0, w1
    1854:	str	w0, [sp, #20]
    1858:	ldr	w0, [sp, #20]
    185c:	mov	w1, #0x8889                	// #34953
    1860:	movk	w1, #0x8888, lsl #16
    1864:	smull	x1, w0, w1
    1868:	lsr	x1, x1, #32
    186c:	add	w1, w0, w1
    1870:	asr	w1, w1, #5
    1874:	asr	w0, w0, #31
    1878:	sub	w1, w1, w0
    187c:	ldr	x0, [sp, #8]
    1880:	str	w1, [x0, #4]
    1884:	ldr	w1, [sp, #20]
    1888:	mov	w0, #0x8889                	// #34953
    188c:	movk	w0, #0x8888, lsl #16
    1890:	smull	x0, w1, w0
    1894:	lsr	x0, x0, #32
    1898:	add	w0, w1, w0
    189c:	asr	w2, w0, #5
    18a0:	asr	w0, w1, #31
    18a4:	sub	w2, w2, w0
    18a8:	mov	w0, w2
    18ac:	lsl	w0, w0, #4
    18b0:	sub	w0, w0, w2
    18b4:	lsl	w0, w0, #2
    18b8:	sub	w0, w1, w0
    18bc:	str	w0, [sp, #20]
    18c0:	ldr	x0, [sp, #8]
    18c4:	ldr	w1, [x0]
    18c8:	ldr	w0, [sp, #20]
    18cc:	add	w1, w1, w0
    18d0:	ldr	x0, [sp, #8]
    18d4:	str	w1, [x0]
    18d8:	ldr	w0, [sp, #16]
    18dc:	str	w0, [sp, #36]
    18e0:	ldr	w0, [sp, #16]
    18e4:	sub	w0, w0, #0x7b
    18e8:	str	w0, [sp, #16]
    18ec:	ldr	w0, [sp, #16]
    18f0:	mov	w1, #0x6bd                 	// #1725
    18f4:	movk	w1, #0x396b, lsl #16
    18f8:	smull	x1, w0, w1
    18fc:	lsr	x1, x1, #32
    1900:	asr	w1, w1, #15
    1904:	asr	w0, w0, #31
    1908:	sub	w1, w1, w0
    190c:	mov	w0, #0x190                 	// #400
    1910:	mul	w0, w1, w0
    1914:	str	w0, [sp, #32]
    1918:	ldr	w0, [sp, #16]
    191c:	mov	w1, #0x6bd                 	// #1725
    1920:	movk	w1, #0x396b, lsl #16
    1924:	smull	x1, w0, w1
    1928:	lsr	x1, x1, #32
    192c:	asr	w2, w1, #15
    1930:	asr	w1, w0, #31
    1934:	sub	w2, w2, w1
    1938:	mov	w1, #0x3ab1                	// #15025
    193c:	movk	w1, #0x2, lsl #16
    1940:	mul	w1, w2, w1
    1944:	sub	w0, w0, w1
    1948:	str	w0, [sp, #16]
    194c:	ldr	w0, [sp, #16]
    1950:	mov	w1, #0x81fb                	// #33275
    1954:	movk	w1, #0xe5ac, lsl #16
    1958:	smull	x1, w0, w1
    195c:	lsr	x1, x1, #32
    1960:	add	w1, w0, w1
    1964:	asr	w1, w1, #15
    1968:	asr	w0, w0, #31
    196c:	sub	w0, w1, w0
    1970:	str	w0, [sp, #40]
    1974:	ldr	w1, [sp, #40]
    1978:	mov	w0, #0x64                  	// #100
    197c:	mul	w0, w1, w0
    1980:	ldr	w1, [sp, #32]
    1984:	add	w0, w1, w0
    1988:	str	w0, [sp, #32]
    198c:	ldr	w0, [sp, #16]
    1990:	mov	w1, #0x81fb                	// #33275
    1994:	movk	w1, #0xe5ac, lsl #16
    1998:	smull	x1, w0, w1
    199c:	lsr	x1, x1, #32
    19a0:	add	w1, w0, w1
    19a4:	asr	w2, w1, #15
    19a8:	asr	w1, w0, #31
    19ac:	sub	w2, w2, w1
    19b0:	mov	w1, #0x8eac                	// #36524
    19b4:	mul	w1, w2, w1
    19b8:	sub	w0, w0, w1
    19bc:	str	w0, [sp, #16]
    19c0:	ldr	w0, [sp, #16]
    19c4:	mov	w1, #0xb073                	// #45171
    19c8:	movk	w1, #0x166d, lsl #16
    19cc:	smull	x1, w0, w1
    19d0:	lsr	x1, x1, #32
    19d4:	asr	w1, w1, #7
    19d8:	asr	w0, w0, #31
    19dc:	sub	w0, w1, w0
    19e0:	lsl	w0, w0, #2
    19e4:	ldr	w1, [sp, #32]
    19e8:	add	w0, w1, w0
    19ec:	str	w0, [sp, #32]
    19f0:	ldr	w0, [sp, #16]
    19f4:	mov	w1, #0xb073                	// #45171
    19f8:	movk	w1, #0x166d, lsl #16
    19fc:	smull	x1, w0, w1
    1a00:	lsr	x1, x1, #32
    1a04:	asr	w2, w1, #7
    1a08:	asr	w1, w0, #31
    1a0c:	sub	w2, w2, w1
    1a10:	mov	w1, #0x5b5                 	// #1461
    1a14:	mul	w1, w2, w1
    1a18:	sub	w0, w0, w1
    1a1c:	str	w0, [sp, #16]
    1a20:	ldr	w0, [sp, #16]
    1a24:	mov	w1, #0xf9b1                	// #63921
    1a28:	movk	w1, #0xb38c, lsl #16
    1a2c:	smull	x1, w0, w1
    1a30:	lsr	x1, x1, #32
    1a34:	add	w1, w0, w1
    1a38:	asr	w1, w1, #8
    1a3c:	asr	w0, w0, #31
    1a40:	sub	w0, w1, w0
    1a44:	str	w0, [sp, #44]
    1a48:	ldr	w1, [sp, #32]
    1a4c:	ldr	w0, [sp, #44]
    1a50:	add	w0, w1, w0
    1a54:	str	w0, [sp, #32]
    1a58:	ldr	w0, [sp, #16]
    1a5c:	mov	w1, #0xf9b1                	// #63921
    1a60:	movk	w1, #0xb38c, lsl #16
    1a64:	smull	x1, w0, w1
    1a68:	lsr	x1, x1, #32
    1a6c:	add	w1, w0, w1
    1a70:	asr	w2, w1, #8
    1a74:	asr	w1, w0, #31
    1a78:	sub	w2, w2, w1
    1a7c:	mov	w1, #0x16d                 	// #365
    1a80:	mul	w1, w2, w1
    1a84:	sub	w0, w0, w1
    1a88:	str	w0, [sp, #16]
    1a8c:	ldr	w0, [sp, #16]
    1a90:	cmp	w0, #0x0
    1a94:	b.ne	1ac4 <my_mini_mktime+0x644>  // b.any
    1a98:	ldr	w0, [sp, #40]
    1a9c:	cmp	w0, #0x4
    1aa0:	b.eq	1ab0 <my_mini_mktime+0x630>  // b.none
    1aa4:	ldr	w0, [sp, #44]
    1aa8:	cmp	w0, #0x4
    1aac:	b.ne	1ac4 <my_mini_mktime+0x644>  // b.any
    1ab0:	mov	w0, #0x1                   	// #1
    1ab4:	str	w0, [sp, #24]
    1ab8:	mov	w0, #0x1d                  	// #29
    1abc:	str	w0, [sp, #16]
    1ac0:	b	1b6c <my_mini_mktime+0x6ec>
    1ac4:	ldr	w0, [sp, #16]
    1ac8:	add	w0, w0, #0x7b
    1acc:	str	w0, [sp, #16]
    1ad0:	ldr	w1, [sp, #16]
    1ad4:	mov	w0, w1
    1ad8:	lsl	w0, w0, #2
    1adc:	add	w0, w0, w1
    1ae0:	mov	w1, #0x80d7                	// #32983
    1ae4:	movk	w1, #0xd62b, lsl #16
    1ae8:	smull	x1, w0, w1
    1aec:	lsr	x1, x1, #32
    1af0:	add	w1, w0, w1
    1af4:	asr	w1, w1, #7
    1af8:	asr	w0, w0, #31
    1afc:	sub	w0, w1, w0
    1b00:	str	w0, [sp, #24]
    1b04:	ldr	w1, [sp, #24]
    1b08:	mov	w0, #0x99                  	// #153
    1b0c:	mul	w0, w1, w0
    1b10:	mov	w1, #0x6667                	// #26215
    1b14:	movk	w1, #0x6666, lsl #16
    1b18:	smull	x1, w0, w1
    1b1c:	lsr	x1, x1, #32
    1b20:	asr	w1, w1, #1
    1b24:	asr	w0, w0, #31
    1b28:	sub	w0, w0, w1
    1b2c:	ldr	w1, [sp, #16]
    1b30:	add	w0, w1, w0
    1b34:	str	w0, [sp, #16]
    1b38:	ldr	w0, [sp, #24]
    1b3c:	cmp	w0, #0xd
    1b40:	b.le	1b60 <my_mini_mktime+0x6e0>
    1b44:	ldr	w0, [sp, #24]
    1b48:	sub	w0, w0, #0xe
    1b4c:	str	w0, [sp, #24]
    1b50:	ldr	w0, [sp, #32]
    1b54:	add	w0, w0, #0x1
    1b58:	str	w0, [sp, #32]
    1b5c:	b	1b6c <my_mini_mktime+0x6ec>
    1b60:	ldr	w0, [sp, #24]
    1b64:	sub	w0, w0, #0x2
    1b68:	str	w0, [sp, #24]
    1b6c:	ldr	w0, [sp, #32]
    1b70:	sub	w1, w0, #0x76c
    1b74:	ldr	x0, [sp, #8]
    1b78:	str	w1, [x0, #20]
    1b7c:	ldr	w0, [sp, #16]
    1b80:	cmp	w0, #0x0
    1b84:	b.eq	1ba4 <my_mini_mktime+0x724>  // b.none
    1b88:	ldr	x0, [sp, #8]
    1b8c:	ldr	w1, [sp, #16]
    1b90:	str	w1, [x0, #12]
    1b94:	ldr	x0, [sp, #8]
    1b98:	ldr	w1, [sp, #24]
    1b9c:	str	w1, [x0, #16]
    1ba0:	b	1bc0 <my_mini_mktime+0x740>
    1ba4:	ldr	x0, [sp, #8]
    1ba8:	mov	w1, #0x1f                  	// #31
    1bac:	str	w1, [x0, #12]
    1bb0:	ldr	w0, [sp, #24]
    1bb4:	sub	w1, w0, #0x1
    1bb8:	ldr	x0, [sp, #8]
    1bbc:	str	w1, [x0, #16]
    1bc0:	ldr	w0, [sp, #32]
    1bc4:	sub	w0, w0, #0x1
    1bc8:	str	w0, [sp, #32]
    1bcc:	ldr	w1, [sp, #32]
    1bd0:	mov	w0, #0x16d                 	// #365
    1bd4:	mul	w1, w1, w0
    1bd8:	ldr	w0, [sp, #32]
    1bdc:	add	w2, w0, #0x3
    1be0:	cmp	w0, #0x0
    1be4:	csel	w0, w2, w0, lt  // lt = tstop
    1be8:	asr	w0, w0, #2
    1bec:	add	w1, w1, w0
    1bf0:	ldr	w0, [sp, #32]
    1bf4:	mov	w2, #0x851f                	// #34079
    1bf8:	movk	w2, #0x51eb, lsl #16
    1bfc:	smull	x2, w0, w2
    1c00:	lsr	x2, x2, #32
    1c04:	asr	w2, w2, #5
    1c08:	asr	w0, w0, #31
    1c0c:	sub	w0, w0, w2
    1c10:	add	w1, w1, w0
    1c14:	ldr	w0, [sp, #32]
    1c18:	mov	w2, #0x851f                	// #34079
    1c1c:	movk	w2, #0x51eb, lsl #16
    1c20:	smull	x2, w0, w2
    1c24:	lsr	x2, x2, #32
    1c28:	asr	w2, w2, #7
    1c2c:	asr	w0, w0, #31
    1c30:	sub	w0, w2, w0
    1c34:	add	w0, w1, w0
    1c38:	str	w0, [sp, #16]
    1c3c:	ldr	w0, [sp, #16]
    1c40:	add	w0, w0, #0x1ad
    1c44:	str	w0, [sp, #16]
    1c48:	ldr	w1, [sp, #36]
    1c4c:	ldr	w0, [sp, #16]
    1c50:	sub	w1, w1, w0
    1c54:	ldr	x0, [sp, #8]
    1c58:	str	w1, [x0, #28]
    1c5c:	ldr	w0, [sp, #36]
    1c60:	add	w0, w0, #0x6
    1c64:	mov	w1, #0x2493                	// #9363
    1c68:	movk	w1, #0x9249, lsl #16
    1c6c:	smull	x1, w0, w1
    1c70:	lsr	x1, x1, #32
    1c74:	add	w1, w0, w1
    1c78:	asr	w2, w1, #2
    1c7c:	asr	w1, w0, #31
    1c80:	sub	w2, w2, w1
    1c84:	mov	w1, w2
    1c88:	lsl	w1, w1, #3
    1c8c:	sub	w1, w1, w2
    1c90:	sub	w2, w0, w1
    1c94:	ldr	x0, [sp, #8]
    1c98:	str	w2, [x0, #24]
    1c9c:	nop
    1ca0:	add	sp, sp, #0x30
    1ca4:	ret

0000000000001ca8 <_strptime>:
    1ca8:	stp	x29, x30, [sp, #-208]!
    1cac:	mov	x29, sp
    1cb0:	str	x0, [sp, #56]
    1cb4:	str	x1, [sp, #48]
    1cb8:	str	x2, [sp, #40]
    1cbc:	str	x3, [sp, #32]
    1cc0:	str	x4, [sp, #24]
    1cc4:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    1cc8:	ldr	x0, [x0, #4048]
    1ccc:	ldr	x1, [x0]
    1cd0:	str	x1, [sp, #200]
    1cd4:	mov	x1, #0x0                   	// #0
    1cd8:	ldr	x0, [sp, #40]
    1cdc:	str	x0, [sp, #104]
    1ce0:	b	3600 <_strptime+0x1958>
    1ce4:	ldr	x0, [sp, #48]
    1ce8:	ldrb	w0, [x0]
    1cec:	cmp	w0, #0x0
    1cf0:	b.eq	3614 <_strptime+0x196c>  // b.none
    1cf4:	ldr	x0, [sp, #104]
    1cf8:	add	x1, x0, #0x1
    1cfc:	str	x1, [sp, #104]
    1d00:	ldrb	w0, [x0]
    1d04:	strb	w0, [sp, #67]
    1d08:	ldrb	w0, [sp, #67]
    1d0c:	cmp	w0, #0x25
    1d10:	b.eq	1dac <_strptime+0x104>  // b.none
    1d14:	bl	1170 <__ctype_b_loc@plt>
    1d18:	ldr	x1, [x0]
    1d1c:	ldrb	w0, [sp, #67]
    1d20:	lsl	x0, x0, #1
    1d24:	add	x0, x1, x0
    1d28:	ldrh	w0, [x0]
    1d2c:	and	w0, w0, #0x2000
    1d30:	cmp	w0, #0x0
    1d34:	b.eq	1d88 <_strptime+0xe0>  // b.none
    1d38:	b	1d48 <_strptime+0xa0>
    1d3c:	ldr	x0, [sp, #48]
    1d40:	add	x0, x0, #0x1
    1d44:	str	x0, [sp, #48]
    1d48:	ldr	x0, [sp, #48]
    1d4c:	ldrb	w0, [x0]
    1d50:	cmp	w0, #0x0
    1d54:	b.eq	3600 <_strptime+0x1958>  // b.none
    1d58:	bl	1170 <__ctype_b_loc@plt>
    1d5c:	ldr	x1, [x0]
    1d60:	ldr	x0, [sp, #48]
    1d64:	ldrb	w0, [x0]
    1d68:	and	x0, x0, #0xff
    1d6c:	lsl	x0, x0, #1
    1d70:	add	x0, x1, x0
    1d74:	ldrh	w0, [x0]
    1d78:	and	w0, w0, #0x2000
    1d7c:	cmp	w0, #0x0
    1d80:	b.ne	1d3c <_strptime+0x94>  // b.any
    1d84:	b	3600 <_strptime+0x1958>
    1d88:	ldr	x0, [sp, #48]
    1d8c:	add	x1, x0, #0x1
    1d90:	str	x1, [sp, #48]
    1d94:	ldrb	w0, [x0]
    1d98:	ldrb	w1, [sp, #67]
    1d9c:	cmp	w1, w0
    1da0:	b.eq	3600 <_strptime+0x1958>  // b.none
    1da4:	mov	x0, #0x0                   	// #0
    1da8:	b	361c <_strptime+0x1974>
    1dac:	str	wzr, [sp, #72]
    1db0:	str	wzr, [sp, #76]
    1db4:	ldr	x0, [sp, #104]
    1db8:	add	x1, x0, #0x1
    1dbc:	str	x1, [sp, #104]
    1dc0:	ldrb	w0, [x0]
    1dc4:	strb	w0, [sp, #67]
    1dc8:	ldrb	w0, [sp, #67]
    1dcc:	cmp	w0, #0x7a
    1dd0:	b.hi	3600 <_strptime+0x1958>  // b.pmore
    1dd4:	adrp	x1, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    1dd8:	add	x1, x1, #0x8ac
    1ddc:	ldr	w0, [x1, w0, uxtw #2]
    1de0:	adr	x1, 1dec <_strptime+0x144>
    1de4:	add	x0, x1, w0, sxtw #2
    1de8:	br	x0
    1dec:	ldr	x0, [sp, #48]
    1df0:	add	x1, x0, #0x1
    1df4:	str	x1, [sp, #48]
    1df8:	ldrb	w0, [x0]
    1dfc:	cmp	w0, #0x25
    1e00:	b.eq	3600 <_strptime+0x1958>  // b.none
    1e04:	mov	x0, #0x0                   	// #0
    1e08:	b	361c <_strptime+0x1974>
    1e0c:	ldr	x4, [sp, #24]
    1e10:	ldr	x3, [sp, #32]
    1e14:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    1e18:	add	x2, x0, #0x828
    1e1c:	ldr	x1, [sp, #48]
    1e20:	ldr	x0, [sp, #56]
    1e24:	bl	1ca8 <_strptime>
    1e28:	str	x0, [sp, #48]
    1e2c:	ldr	x0, [sp, #48]
    1e30:	cmp	x0, #0x0
    1e34:	b.ne	3600 <_strptime+0x1958>  // b.any
    1e38:	mov	x0, #0x0                   	// #0
    1e3c:	b	361c <_strptime+0x1974>
    1e40:	bl	1170 <__ctype_b_loc@plt>
    1e44:	ldr	x1, [x0]
    1e48:	ldr	x0, [sp, #48]
    1e4c:	ldrb	w0, [x0]
    1e50:	and	x0, x0, #0xff
    1e54:	lsl	x0, x0, #1
    1e58:	add	x0, x1, x0
    1e5c:	ldrh	w0, [x0]
    1e60:	and	w0, w0, #0x800
    1e64:	cmp	w0, #0x0
    1e68:	b.ne	1e74 <_strptime+0x1cc>  // b.any
    1e6c:	mov	x0, #0x0                   	// #0
    1e70:	b	361c <_strptime+0x1974>
    1e74:	mov	x0, #0x2                   	// #2
    1e78:	str	x0, [sp, #112]
    1e7c:	str	wzr, [sp, #68]
    1e80:	b	1ed0 <_strptime+0x228>
    1e84:	ldr	w1, [sp, #68]
    1e88:	mov	w0, w1
    1e8c:	lsl	w0, w0, #2
    1e90:	add	w0, w0, w1
    1e94:	lsl	w0, w0, #1
    1e98:	str	w0, [sp, #68]
    1e9c:	ldr	x0, [sp, #48]
    1ea0:	ldrb	w0, [x0]
    1ea4:	mov	w1, w0
    1ea8:	ldr	w0, [sp, #68]
    1eac:	add	w0, w1, w0
    1eb0:	sub	w0, w0, #0x30
    1eb4:	str	w0, [sp, #68]
    1eb8:	ldr	x0, [sp, #112]
    1ebc:	sub	x0, x0, #0x1
    1ec0:	str	x0, [sp, #112]
    1ec4:	ldr	x0, [sp, #48]
    1ec8:	add	x0, x0, #0x1
    1ecc:	str	x0, [sp, #48]
    1ed0:	ldr	x0, [sp, #112]
    1ed4:	cmp	x0, #0x0
    1ed8:	b.eq	1f18 <_strptime+0x270>  // b.none
    1edc:	ldr	x0, [sp, #48]
    1ee0:	ldrb	w0, [x0]
    1ee4:	cmp	w0, #0x0
    1ee8:	b.eq	1f18 <_strptime+0x270>  // b.none
    1eec:	bl	1170 <__ctype_b_loc@plt>
    1ef0:	ldr	x1, [x0]
    1ef4:	ldr	x0, [sp, #48]
    1ef8:	ldrb	w0, [x0]
    1efc:	and	x0, x0, #0xff
    1f00:	lsl	x0, x0, #1
    1f04:	add	x0, x1, x0
    1f08:	ldrh	w0, [x0]
    1f0c:	and	w0, w0, #0x800
    1f10:	cmp	w0, #0x0
    1f14:	b.ne	1e84 <_strptime+0x1dc>  // b.any
    1f18:	ldr	w0, [sp, #68]
    1f1c:	cmp	w0, #0x12
    1f20:	b.gt	1f2c <_strptime+0x284>
    1f24:	mov	x0, #0x0                   	// #0
    1f28:	b	361c <_strptime+0x1974>
    1f2c:	ldr	w1, [sp, #68]
    1f30:	mov	w0, #0x64                  	// #100
    1f34:	mul	w0, w1, w0
    1f38:	sub	w1, w0, #0x76c
    1f3c:	ldr	x0, [sp, #32]
    1f40:	str	w1, [x0, #20]
    1f44:	b	3600 <_strptime+0x1958>
    1f48:	ldr	x4, [sp, #24]
    1f4c:	ldr	x3, [sp, #32]
    1f50:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    1f54:	add	x2, x0, #0x830
    1f58:	ldr	x1, [sp, #48]
    1f5c:	ldr	x0, [sp, #56]
    1f60:	bl	1ca8 <_strptime>
    1f64:	str	x0, [sp, #48]
    1f68:	ldr	x0, [sp, #48]
    1f6c:	cmp	x0, #0x0
    1f70:	b.ne	3600 <_strptime+0x1958>  // b.any
    1f74:	mov	x0, #0x0                   	// #0
    1f78:	b	361c <_strptime+0x1974>
    1f7c:	ldr	x4, [sp, #24]
    1f80:	ldr	x3, [sp, #32]
    1f84:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    1f88:	add	x2, x0, #0x850
    1f8c:	ldr	x1, [sp, #48]
    1f90:	ldr	x0, [sp, #56]
    1f94:	bl	1ca8 <_strptime>
    1f98:	str	x0, [sp, #48]
    1f9c:	ldr	x0, [sp, #48]
    1fa0:	cmp	x0, #0x0
    1fa4:	b.ne	3600 <_strptime+0x1958>  // b.any
    1fa8:	mov	x0, #0x0                   	// #0
    1fac:	b	361c <_strptime+0x1974>
    1fb0:	ldr	w0, [sp, #72]
    1fb4:	cmp	w0, #0x0
    1fb8:	b.ne	35fc <_strptime+0x1954>  // b.any
    1fbc:	ldr	w0, [sp, #76]
    1fc0:	cmp	w0, #0x0
    1fc4:	b.ne	35fc <_strptime+0x1954>  // b.any
    1fc8:	ldr	w0, [sp, #72]
    1fcc:	add	w0, w0, #0x1
    1fd0:	str	w0, [sp, #72]
    1fd4:	b	1db4 <_strptime+0x10c>
    1fd8:	ldr	w0, [sp, #72]
    1fdc:	cmp	w0, #0x0
    1fe0:	b.ne	35fc <_strptime+0x1954>  // b.any
    1fe4:	ldr	w0, [sp, #76]
    1fe8:	cmp	w0, #0x0
    1fec:	b.ne	35fc <_strptime+0x1954>  // b.any
    1ff0:	ldr	w0, [sp, #76]
    1ff4:	add	w0, w0, #0x1
    1ff8:	str	w0, [sp, #76]
    1ffc:	b	1db4 <_strptime+0x10c>
    2000:	ldr	x4, [sp, #24]
    2004:	ldr	x3, [sp, #32]
    2008:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    200c:	add	x2, x0, #0x860
    2010:	ldr	x1, [sp, #48]
    2014:	ldr	x0, [sp, #56]
    2018:	bl	1ca8 <_strptime>
    201c:	str	x0, [sp, #48]
    2020:	ldr	x0, [sp, #48]
    2024:	cmp	x0, #0x0
    2028:	b.ne	3600 <_strptime+0x1958>  // b.any
    202c:	mov	x0, #0x0                   	// #0
    2030:	b	361c <_strptime+0x1974>
    2034:	ldr	x4, [sp, #24]
    2038:	ldr	x3, [sp, #32]
    203c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    2040:	add	x2, x0, #0x870
    2044:	ldr	x1, [sp, #48]
    2048:	ldr	x0, [sp, #56]
    204c:	bl	1ca8 <_strptime>
    2050:	str	x0, [sp, #48]
    2054:	ldr	x0, [sp, #48]
    2058:	cmp	x0, #0x0
    205c:	b.ne	3600 <_strptime+0x1958>  // b.any
    2060:	mov	x0, #0x0                   	// #0
    2064:	b	361c <_strptime+0x1974>
    2068:	ldr	x4, [sp, #24]
    206c:	ldr	x3, [sp, #32]
    2070:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    2074:	add	x2, x0, #0x878
    2078:	ldr	x1, [sp, #48]
    207c:	ldr	x0, [sp, #56]
    2080:	bl	1ca8 <_strptime>
    2084:	str	x0, [sp, #48]
    2088:	ldr	x0, [sp, #48]
    208c:	cmp	x0, #0x0
    2090:	b.ne	3600 <_strptime+0x1958>  // b.any
    2094:	mov	x0, #0x0                   	// #0
    2098:	b	361c <_strptime+0x1974>
    209c:	bl	1170 <__ctype_b_loc@plt>
    20a0:	ldr	x1, [x0]
    20a4:	ldr	x0, [sp, #48]
    20a8:	ldrb	w0, [x0]
    20ac:	and	x0, x0, #0xff
    20b0:	lsl	x0, x0, #1
    20b4:	add	x0, x1, x0
    20b8:	ldrh	w0, [x0]
    20bc:	and	w0, w0, #0x2000
    20c0:	cmp	w0, #0x0
    20c4:	b.ne	20dc <_strptime+0x434>  // b.any
    20c8:	mov	x0, #0x0                   	// #0
    20cc:	b	361c <_strptime+0x1974>
    20d0:	ldr	x0, [sp, #48]
    20d4:	add	x0, x0, #0x1
    20d8:	str	x0, [sp, #48]
    20dc:	bl	1170 <__ctype_b_loc@plt>
    20e0:	ldr	x1, [x0]
    20e4:	ldr	x0, [sp, #48]
    20e8:	ldrb	w0, [x0]
    20ec:	and	x0, x0, #0xff
    20f0:	lsl	x0, x0, #1
    20f4:	add	x0, x1, x0
    20f8:	ldrh	w0, [x0]
    20fc:	and	w0, w0, #0x2000
    2100:	cmp	w0, #0x0
    2104:	b.ne	20d0 <_strptime+0x428>  // b.any
    2108:	b	3600 <_strptime+0x1958>
    210c:	ldr	x4, [sp, #24]
    2110:	ldr	x3, [sp, #32]
    2114:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    2118:	add	x2, x0, #0x888
    211c:	ldr	x1, [sp, #48]
    2120:	ldr	x0, [sp, #56]
    2124:	bl	1ca8 <_strptime>
    2128:	str	x0, [sp, #48]
    212c:	ldr	x0, [sp, #48]
    2130:	cmp	x0, #0x0
    2134:	b.ne	3600 <_strptime+0x1958>  // b.any
    2138:	mov	x0, #0x0                   	// #0
    213c:	b	361c <_strptime+0x1974>
    2140:	ldr	x4, [sp, #24]
    2144:	ldr	x3, [sp, #32]
    2148:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    214c:	add	x2, x0, #0x878
    2150:	ldr	x1, [sp, #48]
    2154:	ldr	x0, [sp, #56]
    2158:	bl	1ca8 <_strptime>
    215c:	str	x0, [sp, #48]
    2160:	ldr	x0, [sp, #48]
    2164:	cmp	x0, #0x0
    2168:	b.ne	3600 <_strptime+0x1958>  // b.any
    216c:	mov	x0, #0x0                   	// #0
    2170:	b	361c <_strptime+0x1974>
    2174:	ldr	x4, [sp, #24]
    2178:	ldr	x3, [sp, #32]
    217c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    2180:	add	x2, x0, #0x898
    2184:	ldr	x1, [sp, #48]
    2188:	ldr	x0, [sp, #56]
    218c:	bl	1ca8 <_strptime>
    2190:	str	x0, [sp, #48]
    2194:	ldr	x0, [sp, #48]
    2198:	cmp	x0, #0x0
    219c:	b.ne	3600 <_strptime+0x1958>  // b.any
    21a0:	mov	x0, #0x0                   	// #0
    21a4:	b	361c <_strptime+0x1974>
    21a8:	bl	1170 <__ctype_b_loc@plt>
    21ac:	ldr	x1, [x0]
    21b0:	ldr	x0, [sp, #48]
    21b4:	ldrb	w0, [x0]
    21b8:	and	x0, x0, #0xff
    21bc:	lsl	x0, x0, #1
    21c0:	add	x0, x1, x0
    21c4:	ldrh	w0, [x0]
    21c8:	and	w0, w0, #0x800
    21cc:	cmp	w0, #0x0
    21d0:	b.ne	21dc <_strptime+0x534>  // b.any
    21d4:	mov	x0, #0x0                   	// #0
    21d8:	b	361c <_strptime+0x1974>
    21dc:	mov	x0, #0x3                   	// #3
    21e0:	str	x0, [sp, #112]
    21e4:	str	wzr, [sp, #68]
    21e8:	b	2238 <_strptime+0x590>
    21ec:	ldr	w1, [sp, #68]
    21f0:	mov	w0, w1
    21f4:	lsl	w0, w0, #2
    21f8:	add	w0, w0, w1
    21fc:	lsl	w0, w0, #1
    2200:	str	w0, [sp, #68]
    2204:	ldr	x0, [sp, #48]
    2208:	ldrb	w0, [x0]
    220c:	mov	w1, w0
    2210:	ldr	w0, [sp, #68]
    2214:	add	w0, w1, w0
    2218:	sub	w0, w0, #0x30
    221c:	str	w0, [sp, #68]
    2220:	ldr	x0, [sp, #112]
    2224:	sub	x0, x0, #0x1
    2228:	str	x0, [sp, #112]
    222c:	ldr	x0, [sp, #48]
    2230:	add	x0, x0, #0x1
    2234:	str	x0, [sp, #48]
    2238:	ldr	x0, [sp, #112]
    223c:	cmp	x0, #0x0
    2240:	b.eq	2280 <_strptime+0x5d8>  // b.none
    2244:	ldr	x0, [sp, #48]
    2248:	ldrb	w0, [x0]
    224c:	cmp	w0, #0x0
    2250:	b.eq	2280 <_strptime+0x5d8>  // b.none
    2254:	bl	1170 <__ctype_b_loc@plt>
    2258:	ldr	x1, [x0]
    225c:	ldr	x0, [sp, #48]
    2260:	ldrb	w0, [x0]
    2264:	and	x0, x0, #0xff
    2268:	lsl	x0, x0, #1
    226c:	add	x0, x1, x0
    2270:	ldrh	w0, [x0]
    2274:	and	w0, w0, #0x800
    2278:	cmp	w0, #0x0
    227c:	b.ne	21ec <_strptime+0x544>  // b.any
    2280:	ldr	w0, [sp, #68]
    2284:	cmp	w0, #0x0
    2288:	b.le	2298 <_strptime+0x5f0>
    228c:	ldr	w0, [sp, #68]
    2290:	cmp	w0, #0x16e
    2294:	b.le	22a0 <_strptime+0x5f8>
    2298:	mov	x0, #0x0                   	// #0
    229c:	b	361c <_strptime+0x1974>
    22a0:	ldr	w0, [sp, #68]
    22a4:	sub	w1, w0, #0x1
    22a8:	ldr	x0, [sp, #32]
    22ac:	str	w1, [x0, #28]
    22b0:	ldr	x0, [sp, #32]
    22b4:	str	wzr, [x0, #12]
    22b8:	b	3600 <_strptime+0x1958>
    22bc:	ldr	x0, [sp, #48]
    22c0:	ldrb	w0, [x0]
    22c4:	cmp	w0, #0x0
    22c8:	b.eq	35fc <_strptime+0x1954>  // b.none
    22cc:	bl	1170 <__ctype_b_loc@plt>
    22d0:	ldr	x1, [x0]
    22d4:	ldr	x0, [sp, #48]
    22d8:	ldrb	w0, [x0]
    22dc:	and	x0, x0, #0xff
    22e0:	lsl	x0, x0, #1
    22e4:	add	x0, x1, x0
    22e8:	ldrh	w0, [x0]
    22ec:	and	w0, w0, #0x2000
    22f0:	cmp	w0, #0x0
    22f4:	b.ne	35fc <_strptime+0x1954>  // b.any
    22f8:	bl	1170 <__ctype_b_loc@plt>
    22fc:	ldr	x1, [x0]
    2300:	ldr	x0, [sp, #48]
    2304:	ldrb	w0, [x0]
    2308:	and	x0, x0, #0xff
    230c:	lsl	x0, x0, #1
    2310:	add	x0, x1, x0
    2314:	ldrh	w0, [x0]
    2318:	and	w0, w0, #0x800
    231c:	cmp	w0, #0x0
    2320:	b.ne	232c <_strptime+0x684>  // b.any
    2324:	mov	x0, #0x0                   	// #0
    2328:	b	361c <_strptime+0x1974>
    232c:	mov	x0, #0x2                   	// #2
    2330:	str	x0, [sp, #112]
    2334:	str	wzr, [sp, #68]
    2338:	b	2388 <_strptime+0x6e0>
    233c:	ldr	w1, [sp, #68]
    2340:	mov	w0, w1
    2344:	lsl	w0, w0, #2
    2348:	add	w0, w0, w1
    234c:	lsl	w0, w0, #1
    2350:	str	w0, [sp, #68]
    2354:	ldr	x0, [sp, #48]
    2358:	ldrb	w0, [x0]
    235c:	mov	w1, w0
    2360:	ldr	w0, [sp, #68]
    2364:	add	w0, w1, w0
    2368:	sub	w0, w0, #0x30
    236c:	str	w0, [sp, #68]
    2370:	ldr	x0, [sp, #112]
    2374:	sub	x0, x0, #0x1
    2378:	str	x0, [sp, #112]
    237c:	ldr	x0, [sp, #48]
    2380:	add	x0, x0, #0x1
    2384:	str	x0, [sp, #48]
    2388:	ldr	x0, [sp, #112]
    238c:	cmp	x0, #0x0
    2390:	b.eq	23d0 <_strptime+0x728>  // b.none
    2394:	ldr	x0, [sp, #48]
    2398:	ldrb	w0, [x0]
    239c:	cmp	w0, #0x0
    23a0:	b.eq	23d0 <_strptime+0x728>  // b.none
    23a4:	bl	1170 <__ctype_b_loc@plt>
    23a8:	ldr	x1, [x0]
    23ac:	ldr	x0, [sp, #48]
    23b0:	ldrb	w0, [x0]
    23b4:	and	x0, x0, #0xff
    23b8:	lsl	x0, x0, #1
    23bc:	add	x0, x1, x0
    23c0:	ldrh	w0, [x0]
    23c4:	and	w0, w0, #0x800
    23c8:	cmp	w0, #0x0
    23cc:	b.ne	233c <_strptime+0x694>  // b.any
    23d0:	ldrb	w0, [sp, #67]
    23d4:	cmp	w0, #0x4d
    23d8:	b.ne	2400 <_strptime+0x758>  // b.any
    23dc:	ldr	w0, [sp, #68]
    23e0:	cmp	w0, #0x3b
    23e4:	b.le	23f0 <_strptime+0x748>
    23e8:	mov	x0, #0x0                   	// #0
    23ec:	b	361c <_strptime+0x1974>
    23f0:	ldr	x0, [sp, #32]
    23f4:	ldr	w1, [sp, #68]
    23f8:	str	w1, [x0, #4]
    23fc:	b	2420 <_strptime+0x778>
    2400:	ldr	w0, [sp, #68]
    2404:	cmp	w0, #0x3c
    2408:	b.le	2414 <_strptime+0x76c>
    240c:	mov	x0, #0x0                   	// #0
    2410:	b	361c <_strptime+0x1974>
    2414:	ldr	x0, [sp, #32]
    2418:	ldr	w1, [sp, #68]
    241c:	str	w1, [x0]
    2420:	ldr	x0, [sp, #48]
    2424:	ldrb	w0, [x0]
    2428:	cmp	w0, #0x0
    242c:	b.eq	3600 <_strptime+0x1958>  // b.none
    2430:	bl	1170 <__ctype_b_loc@plt>
    2434:	ldr	x1, [x0]
    2438:	ldr	x0, [sp, #48]
    243c:	ldrb	w0, [x0]
    2440:	and	x0, x0, #0xff
    2444:	lsl	x0, x0, #1
    2448:	add	x0, x1, x0
    244c:	ldrh	w0, [x0]
    2450:	and	w0, w0, #0x2000
    2454:	cmp	w0, #0x0
    2458:	b.eq	3600 <_strptime+0x1958>  // b.none
    245c:	b	246c <_strptime+0x7c4>
    2460:	ldr	x0, [sp, #104]
    2464:	add	x0, x0, #0x1
    2468:	str	x0, [sp, #104]
    246c:	ldr	x0, [sp, #104]
    2470:	ldrb	w0, [x0]
    2474:	cmp	w0, #0x0
    2478:	b.eq	3600 <_strptime+0x1958>  // b.none
    247c:	bl	1170 <__ctype_b_loc@plt>
    2480:	ldr	x1, [x0]
    2484:	ldr	x0, [sp, #104]
    2488:	ldrb	w0, [x0]
    248c:	and	x0, x0, #0xff
    2490:	lsl	x0, x0, #1
    2494:	add	x0, x1, x0
    2498:	ldrh	w0, [x0]
    249c:	and	w0, w0, #0x2000
    24a0:	cmp	w0, #0x0
    24a4:	b.eq	2460 <_strptime+0x7b8>  // b.none
    24a8:	b	3600 <_strptime+0x1958>
    24ac:	bl	1170 <__ctype_b_loc@plt>
    24b0:	ldr	x1, [x0]
    24b4:	ldr	x0, [sp, #48]
    24b8:	ldrb	w0, [x0]
    24bc:	and	x0, x0, #0xff
    24c0:	lsl	x0, x0, #1
    24c4:	add	x0, x1, x0
    24c8:	ldrh	w0, [x0]
    24cc:	and	w0, w0, #0x800
    24d0:	cmp	w0, #0x0
    24d4:	b.ne	24e0 <_strptime+0x838>  // b.any
    24d8:	mov	x0, #0x0                   	// #0
    24dc:	b	361c <_strptime+0x1974>
    24e0:	mov	x0, #0x2                   	// #2
    24e4:	str	x0, [sp, #112]
    24e8:	str	wzr, [sp, #68]
    24ec:	b	253c <_strptime+0x894>
    24f0:	ldr	w1, [sp, #68]
    24f4:	mov	w0, w1
    24f8:	lsl	w0, w0, #2
    24fc:	add	w0, w0, w1
    2500:	lsl	w0, w0, #1
    2504:	str	w0, [sp, #68]
    2508:	ldr	x0, [sp, #48]
    250c:	ldrb	w0, [x0]
    2510:	mov	w1, w0
    2514:	ldr	w0, [sp, #68]
    2518:	add	w0, w1, w0
    251c:	sub	w0, w0, #0x30
    2520:	str	w0, [sp, #68]
    2524:	ldr	x0, [sp, #112]
    2528:	sub	x0, x0, #0x1
    252c:	str	x0, [sp, #112]
    2530:	ldr	x0, [sp, #48]
    2534:	add	x0, x0, #0x1
    2538:	str	x0, [sp, #48]
    253c:	ldr	x0, [sp, #112]
    2540:	cmp	x0, #0x0
    2544:	b.eq	2584 <_strptime+0x8dc>  // b.none
    2548:	ldr	x0, [sp, #48]
    254c:	ldrb	w0, [x0]
    2550:	cmp	w0, #0x0
    2554:	b.eq	2584 <_strptime+0x8dc>  // b.none
    2558:	bl	1170 <__ctype_b_loc@plt>
    255c:	ldr	x1, [x0]
    2560:	ldr	x0, [sp, #48]
    2564:	ldrb	w0, [x0]
    2568:	and	x0, x0, #0xff
    256c:	lsl	x0, x0, #1
    2570:	add	x0, x1, x0
    2574:	ldrh	w0, [x0]
    2578:	and	w0, w0, #0x800
    257c:	cmp	w0, #0x0
    2580:	b.ne	24f0 <_strptime+0x848>  // b.any
    2584:	ldrb	w0, [sp, #67]
    2588:	cmp	w0, #0x48
    258c:	b.eq	259c <_strptime+0x8f4>  // b.none
    2590:	ldrb	w0, [sp, #67]
    2594:	cmp	w0, #0x6b
    2598:	b.ne	25b0 <_strptime+0x908>  // b.any
    259c:	ldr	w0, [sp, #68]
    25a0:	cmp	w0, #0x17
    25a4:	b.le	25c4 <_strptime+0x91c>
    25a8:	mov	x0, #0x0                   	// #0
    25ac:	b	361c <_strptime+0x1974>
    25b0:	ldr	w0, [sp, #68]
    25b4:	cmp	w0, #0xc
    25b8:	b.le	25c4 <_strptime+0x91c>
    25bc:	mov	x0, #0x0                   	// #0
    25c0:	b	361c <_strptime+0x1974>
    25c4:	ldr	x0, [sp, #32]
    25c8:	ldr	w1, [sp, #68]
    25cc:	str	w1, [x0, #8]
    25d0:	ldr	x0, [sp, #48]
    25d4:	ldrb	w0, [x0]
    25d8:	cmp	w0, #0x0
    25dc:	b.eq	3600 <_strptime+0x1958>  // b.none
    25e0:	bl	1170 <__ctype_b_loc@plt>
    25e4:	ldr	x1, [x0]
    25e8:	ldr	x0, [sp, #48]
    25ec:	ldrb	w0, [x0]
    25f0:	and	x0, x0, #0xff
    25f4:	lsl	x0, x0, #1
    25f8:	add	x0, x1, x0
    25fc:	ldrh	w0, [x0]
    2600:	and	w0, w0, #0x2000
    2604:	cmp	w0, #0x0
    2608:	b.eq	3600 <_strptime+0x1958>  // b.none
    260c:	b	261c <_strptime+0x974>
    2610:	ldr	x0, [sp, #104]
    2614:	add	x0, x0, #0x1
    2618:	str	x0, [sp, #104]
    261c:	ldr	x0, [sp, #104]
    2620:	ldrb	w0, [x0]
    2624:	cmp	w0, #0x0
    2628:	b.eq	3600 <_strptime+0x1958>  // b.none
    262c:	bl	1170 <__ctype_b_loc@plt>
    2630:	ldr	x1, [x0]
    2634:	ldr	x0, [sp, #104]
    2638:	ldrb	w0, [x0]
    263c:	and	x0, x0, #0xff
    2640:	lsl	x0, x0, #1
    2644:	add	x0, x1, x0
    2648:	ldrh	w0, [x0]
    264c:	and	w0, w0, #0x2000
    2650:	cmp	w0, #0x0
    2654:	b.eq	2610 <_strptime+0x968>  // b.none
    2658:	b	3600 <_strptime+0x1958>
    265c:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2660:	add	x0, x0, #0x158
    2664:	ldr	x0, [x0, #304]
    2668:	bl	1010 <strlen@plt>
    266c:	str	x0, [sp, #112]
    2670:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2674:	add	x0, x0, #0x158
    2678:	ldr	x0, [x0, #304]
    267c:	ldr	x2, [sp, #112]
    2680:	mov	x1, x0
    2684:	ldr	x0, [sp, #48]
    2688:	bl	11b0 <strncasecmp@plt>
    268c:	cmp	w0, #0x0
    2690:	b.eq	26b8 <_strptime+0xa10>  // b.none
    2694:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2698:	add	x0, x0, #0x158
    269c:	ldr	x0, [x0, #320]
    26a0:	ldr	x2, [sp, #112]
    26a4:	mov	x1, x0
    26a8:	ldr	x0, [sp, #48]
    26ac:	bl	11b0 <strncasecmp@plt>
    26b0:	cmp	w0, #0x0
    26b4:	b.ne	26fc <_strptime+0xa54>  // b.any
    26b8:	ldr	x0, [sp, #32]
    26bc:	ldr	w0, [x0, #8]
    26c0:	cmp	w0, #0xc
    26c4:	b.le	26d0 <_strptime+0xa28>
    26c8:	mov	x0, #0x0                   	// #0
    26cc:	b	361c <_strptime+0x1974>
    26d0:	ldr	x0, [sp, #32]
    26d4:	ldr	w0, [x0, #8]
    26d8:	cmp	w0, #0xc
    26dc:	b.ne	26e8 <_strptime+0xa40>  // b.any
    26e0:	ldr	x0, [sp, #32]
    26e4:	str	wzr, [x0, #8]
    26e8:	ldr	x1, [sp, #48]
    26ec:	ldr	x0, [sp, #112]
    26f0:	add	x0, x1, x0
    26f4:	str	x0, [sp, #48]
    26f8:	b	3600 <_strptime+0x1958>
    26fc:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2700:	add	x0, x0, #0x158
    2704:	ldr	x0, [x0, #312]
    2708:	bl	1010 <strlen@plt>
    270c:	str	x0, [sp, #112]
    2710:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2714:	add	x0, x0, #0x158
    2718:	ldr	x0, [x0, #312]
    271c:	ldr	x2, [sp, #112]
    2720:	mov	x1, x0
    2724:	ldr	x0, [sp, #48]
    2728:	bl	11b0 <strncasecmp@plt>
    272c:	cmp	w0, #0x0
    2730:	b.eq	2758 <_strptime+0xab0>  // b.none
    2734:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2738:	add	x0, x0, #0x158
    273c:	ldr	x0, [x0, #328]
    2740:	ldr	x2, [sp, #112]
    2744:	mov	x1, x0
    2748:	ldr	x0, [sp, #48]
    274c:	bl	11b0 <strncasecmp@plt>
    2750:	cmp	w0, #0x0
    2754:	b.ne	27a8 <_strptime+0xb00>  // b.any
    2758:	ldr	x0, [sp, #32]
    275c:	ldr	w0, [x0, #8]
    2760:	cmp	w0, #0xc
    2764:	b.le	2770 <_strptime+0xac8>
    2768:	mov	x0, #0x0                   	// #0
    276c:	b	361c <_strptime+0x1974>
    2770:	ldr	x0, [sp, #32]
    2774:	ldr	w0, [x0, #8]
    2778:	cmp	w0, #0xc
    277c:	b.eq	2794 <_strptime+0xaec>  // b.none
    2780:	ldr	x0, [sp, #32]
    2784:	ldr	w0, [x0, #8]
    2788:	add	w1, w0, #0xc
    278c:	ldr	x0, [sp, #32]
    2790:	str	w1, [x0, #8]
    2794:	ldr	x1, [sp, #48]
    2798:	ldr	x0, [sp, #112]
    279c:	add	x0, x1, x0
    27a0:	str	x0, [sp, #48]
    27a4:	b	3600 <_strptime+0x1958>
    27a8:	mov	x0, #0x0                   	// #0
    27ac:	b	361c <_strptime+0x1974>
    27b0:	str	wzr, [sp, #68]
    27b4:	b	2874 <_strptime+0xbcc>
    27b8:	ldrb	w0, [sp, #67]
    27bc:	cmp	w0, #0x41
    27c0:	b.ne	2820 <_strptime+0xb78>  // b.any
    27c4:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    27c8:	add	x1, x0, #0x158
    27cc:	ldrsw	x0, [sp, #68]
    27d0:	add	x0, x0, #0x1e
    27d4:	lsl	x0, x0, #3
    27d8:	add	x0, x1, x0
    27dc:	ldr	x0, [x0, #8]
    27e0:	bl	1010 <strlen@plt>
    27e4:	str	x0, [sp, #112]
    27e8:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    27ec:	add	x1, x0, #0x158
    27f0:	ldrsw	x0, [sp, #68]
    27f4:	add	x0, x0, #0x1e
    27f8:	lsl	x0, x0, #3
    27fc:	add	x0, x1, x0
    2800:	ldr	x0, [x0, #8]
    2804:	ldr	x2, [sp, #112]
    2808:	mov	x1, x0
    280c:	ldr	x0, [sp, #48]
    2810:	bl	11b0 <strncasecmp@plt>
    2814:	cmp	w0, #0x0
    2818:	b.ne	2868 <_strptime+0xbc0>  // b.any
    281c:	b	2888 <_strptime+0xbe0>
    2820:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2824:	add	x0, x0, #0x158
    2828:	ldrsw	x1, [sp, #68]
    282c:	add	x1, x1, #0x18
    2830:	ldr	x0, [x0, x1, lsl #3]
    2834:	bl	1010 <strlen@plt>
    2838:	str	x0, [sp, #112]
    283c:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2840:	add	x0, x0, #0x158
    2844:	ldrsw	x1, [sp, #68]
    2848:	add	x1, x1, #0x18
    284c:	ldr	x0, [x0, x1, lsl #3]
    2850:	ldr	x2, [sp, #112]
    2854:	mov	x1, x0
    2858:	ldr	x0, [sp, #48]
    285c:	bl	11b0 <strncasecmp@plt>
    2860:	cmp	w0, #0x0
    2864:	b.eq	2884 <_strptime+0xbdc>  // b.none
    2868:	ldr	w0, [sp, #68]
    286c:	add	w0, w0, #0x1
    2870:	str	w0, [sp, #68]
    2874:	ldr	w0, [sp, #68]
    2878:	cmp	w0, #0x6
    287c:	b.le	27b8 <_strptime+0xb10>
    2880:	b	2888 <_strptime+0xbe0>
    2884:	nop
    2888:	ldr	w0, [sp, #68]
    288c:	cmp	w0, #0x7
    2890:	b.ne	289c <_strptime+0xbf4>  // b.any
    2894:	mov	x0, #0x0                   	// #0
    2898:	b	361c <_strptime+0x1974>
    289c:	ldr	x0, [sp, #32]
    28a0:	ldr	w1, [sp, #68]
    28a4:	str	w1, [x0, #24]
    28a8:	ldr	x1, [sp, #48]
    28ac:	ldr	x0, [sp, #112]
    28b0:	add	x0, x1, x0
    28b4:	str	x0, [sp, #48]
    28b8:	b	3600 <_strptime+0x1958>
    28bc:	bl	1170 <__ctype_b_loc@plt>
    28c0:	ldr	x1, [x0]
    28c4:	ldr	x0, [sp, #48]
    28c8:	ldrb	w0, [x0]
    28cc:	and	x0, x0, #0xff
    28d0:	lsl	x0, x0, #1
    28d4:	add	x0, x1, x0
    28d8:	ldrh	w0, [x0]
    28dc:	and	w0, w0, #0x800
    28e0:	cmp	w0, #0x0
    28e4:	b.ne	28f0 <_strptime+0xc48>  // b.any
    28e8:	mov	x0, #0x0                   	// #0
    28ec:	b	361c <_strptime+0x1974>
    28f0:	mov	x0, #0x2                   	// #2
    28f4:	str	x0, [sp, #112]
    28f8:	str	wzr, [sp, #68]
    28fc:	b	294c <_strptime+0xca4>
    2900:	ldr	w1, [sp, #68]
    2904:	mov	w0, w1
    2908:	lsl	w0, w0, #2
    290c:	add	w0, w0, w1
    2910:	lsl	w0, w0, #1
    2914:	str	w0, [sp, #68]
    2918:	ldr	x0, [sp, #48]
    291c:	ldrb	w0, [x0]
    2920:	mov	w1, w0
    2924:	ldr	w0, [sp, #68]
    2928:	add	w0, w1, w0
    292c:	sub	w0, w0, #0x30
    2930:	str	w0, [sp, #68]
    2934:	ldr	x0, [sp, #112]
    2938:	sub	x0, x0, #0x1
    293c:	str	x0, [sp, #112]
    2940:	ldr	x0, [sp, #48]
    2944:	add	x0, x0, #0x1
    2948:	str	x0, [sp, #48]
    294c:	ldr	x0, [sp, #112]
    2950:	cmp	x0, #0x0
    2954:	b.eq	2994 <_strptime+0xcec>  // b.none
    2958:	ldr	x0, [sp, #48]
    295c:	ldrb	w0, [x0]
    2960:	cmp	w0, #0x0
    2964:	b.eq	2994 <_strptime+0xcec>  // b.none
    2968:	bl	1170 <__ctype_b_loc@plt>
    296c:	ldr	x1, [x0]
    2970:	ldr	x0, [sp, #48]
    2974:	ldrb	w0, [x0]
    2978:	and	x0, x0, #0xff
    297c:	lsl	x0, x0, #1
    2980:	add	x0, x1, x0
    2984:	ldrh	w0, [x0]
    2988:	and	w0, w0, #0x800
    298c:	cmp	w0, #0x0
    2990:	b.ne	2900 <_strptime+0xc58>  // b.any
    2994:	ldr	w0, [sp, #68]
    2998:	cmp	w0, #0x35
    299c:	b.le	29a8 <_strptime+0xd00>
    29a0:	mov	x0, #0x0                   	// #0
    29a4:	b	361c <_strptime+0x1974>
    29a8:	ldr	x0, [sp, #48]
    29ac:	ldrb	w0, [x0]
    29b0:	cmp	w0, #0x0
    29b4:	b.eq	3600 <_strptime+0x1958>  // b.none
    29b8:	bl	1170 <__ctype_b_loc@plt>
    29bc:	ldr	x1, [x0]
    29c0:	ldr	x0, [sp, #48]
    29c4:	ldrb	w0, [x0]
    29c8:	and	x0, x0, #0xff
    29cc:	lsl	x0, x0, #1
    29d0:	add	x0, x1, x0
    29d4:	ldrh	w0, [x0]
    29d8:	and	w0, w0, #0x2000
    29dc:	cmp	w0, #0x0
    29e0:	b.eq	3600 <_strptime+0x1958>  // b.none
    29e4:	b	29f4 <_strptime+0xd4c>
    29e8:	ldr	x0, [sp, #104]
    29ec:	add	x0, x0, #0x1
    29f0:	str	x0, [sp, #104]
    29f4:	ldr	x0, [sp, #104]
    29f8:	ldrb	w0, [x0]
    29fc:	cmp	w0, #0x0
    2a00:	b.eq	3600 <_strptime+0x1958>  // b.none
    2a04:	bl	1170 <__ctype_b_loc@plt>
    2a08:	ldr	x1, [x0]
    2a0c:	ldr	x0, [sp, #104]
    2a10:	ldrb	w0, [x0]
    2a14:	and	x0, x0, #0xff
    2a18:	lsl	x0, x0, #1
    2a1c:	add	x0, x1, x0
    2a20:	ldrh	w0, [x0]
    2a24:	and	w0, w0, #0x2000
    2a28:	cmp	w0, #0x0
    2a2c:	b.eq	29e8 <_strptime+0xd40>  // b.none
    2a30:	b	3600 <_strptime+0x1958>
    2a34:	bl	1170 <__ctype_b_loc@plt>
    2a38:	ldr	x1, [x0]
    2a3c:	ldr	x0, [sp, #48]
    2a40:	ldrb	w0, [x0]
    2a44:	and	x0, x0, #0xff
    2a48:	lsl	x0, x0, #1
    2a4c:	add	x0, x1, x0
    2a50:	ldrh	w0, [x0]
    2a54:	and	w0, w0, #0x800
    2a58:	cmp	w0, #0x0
    2a5c:	b.ne	2a68 <_strptime+0xdc0>  // b.any
    2a60:	mov	x0, #0x0                   	// #0
    2a64:	b	361c <_strptime+0x1974>
    2a68:	ldr	x0, [sp, #48]
    2a6c:	ldrb	w0, [x0]
    2a70:	sub	w0, w0, #0x30
    2a74:	str	w0, [sp, #68]
    2a78:	ldrb	w0, [sp, #67]
    2a7c:	cmp	w0, #0x75
    2a80:	b.ne	2a8c <_strptime+0xde4>  // b.any
    2a84:	mov	w0, #0x7                   	// #7
    2a88:	b	2a90 <_strptime+0xde8>
    2a8c:	mov	w0, #0x6                   	// #6
    2a90:	ldr	w1, [sp, #68]
    2a94:	cmp	w0, w1
    2a98:	b.ge	2aa4 <_strptime+0xdfc>  // b.tcont
    2a9c:	mov	x0, #0x0                   	// #0
    2aa0:	b	361c <_strptime+0x1974>
    2aa4:	ldr	w0, [sp, #68]
    2aa8:	cmp	w0, #0x7
    2aac:	b.ne	2ab4 <_strptime+0xe0c>  // b.any
    2ab0:	str	wzr, [sp, #68]
    2ab4:	ldr	x0, [sp, #32]
    2ab8:	ldr	w1, [sp, #68]
    2abc:	str	w1, [x0, #24]
    2ac0:	ldr	x0, [sp, #48]
    2ac4:	add	x0, x0, #0x1
    2ac8:	str	x0, [sp, #48]
    2acc:	ldr	x0, [sp, #48]
    2ad0:	ldrb	w0, [x0]
    2ad4:	cmp	w0, #0x0
    2ad8:	b.eq	3600 <_strptime+0x1958>  // b.none
    2adc:	bl	1170 <__ctype_b_loc@plt>
    2ae0:	ldr	x1, [x0]
    2ae4:	ldr	x0, [sp, #48]
    2ae8:	ldrb	w0, [x0]
    2aec:	and	x0, x0, #0xff
    2af0:	lsl	x0, x0, #1
    2af4:	add	x0, x1, x0
    2af8:	ldrh	w0, [x0]
    2afc:	and	w0, w0, #0x2000
    2b00:	cmp	w0, #0x0
    2b04:	b.eq	3600 <_strptime+0x1958>  // b.none
    2b08:	b	2b18 <_strptime+0xe70>
    2b0c:	ldr	x0, [sp, #104]
    2b10:	add	x0, x0, #0x1
    2b14:	str	x0, [sp, #104]
    2b18:	ldr	x0, [sp, #104]
    2b1c:	ldrb	w0, [x0]
    2b20:	cmp	w0, #0x0
    2b24:	b.eq	3600 <_strptime+0x1958>  // b.none
    2b28:	bl	1170 <__ctype_b_loc@plt>
    2b2c:	ldr	x1, [x0]
    2b30:	ldr	x0, [sp, #104]
    2b34:	ldrb	w0, [x0]
    2b38:	and	x0, x0, #0xff
    2b3c:	lsl	x0, x0, #1
    2b40:	add	x0, x1, x0
    2b44:	ldrh	w0, [x0]
    2b48:	and	w0, w0, #0x2000
    2b4c:	cmp	w0, #0x0
    2b50:	b.eq	2b0c <_strptime+0xe64>  // b.none
    2b54:	b	3600 <_strptime+0x1958>
    2b58:	bl	1170 <__ctype_b_loc@plt>
    2b5c:	ldr	x1, [x0]
    2b60:	ldr	x0, [sp, #48]
    2b64:	ldrb	w0, [x0]
    2b68:	and	x0, x0, #0xff
    2b6c:	lsl	x0, x0, #1
    2b70:	add	x0, x1, x0
    2b74:	ldrh	w0, [x0]
    2b78:	and	w0, w0, #0x800
    2b7c:	cmp	w0, #0x0
    2b80:	b.ne	2b8c <_strptime+0xee4>  // b.any
    2b84:	mov	x0, #0x0                   	// #0
    2b88:	b	361c <_strptime+0x1974>
    2b8c:	mov	x0, #0x2                   	// #2
    2b90:	str	x0, [sp, #112]
    2b94:	str	wzr, [sp, #68]
    2b98:	b	2be8 <_strptime+0xf40>
    2b9c:	ldr	w1, [sp, #68]
    2ba0:	mov	w0, w1
    2ba4:	lsl	w0, w0, #2
    2ba8:	add	w0, w0, w1
    2bac:	lsl	w0, w0, #1
    2bb0:	str	w0, [sp, #68]
    2bb4:	ldr	x0, [sp, #48]
    2bb8:	ldrb	w0, [x0]
    2bbc:	mov	w1, w0
    2bc0:	ldr	w0, [sp, #68]
    2bc4:	add	w0, w1, w0
    2bc8:	sub	w0, w0, #0x30
    2bcc:	str	w0, [sp, #68]
    2bd0:	ldr	x0, [sp, #112]
    2bd4:	sub	x0, x0, #0x1
    2bd8:	str	x0, [sp, #112]
    2bdc:	ldr	x0, [sp, #48]
    2be0:	add	x0, x0, #0x1
    2be4:	str	x0, [sp, #48]
    2be8:	ldr	x0, [sp, #112]
    2bec:	cmp	x0, #0x0
    2bf0:	b.eq	2c30 <_strptime+0xf88>  // b.none
    2bf4:	ldr	x0, [sp, #48]
    2bf8:	ldrb	w0, [x0]
    2bfc:	cmp	w0, #0x0
    2c00:	b.eq	2c30 <_strptime+0xf88>  // b.none
    2c04:	bl	1170 <__ctype_b_loc@plt>
    2c08:	ldr	x1, [x0]
    2c0c:	ldr	x0, [sp, #48]
    2c10:	ldrb	w0, [x0]
    2c14:	and	x0, x0, #0xff
    2c18:	lsl	x0, x0, #1
    2c1c:	add	x0, x1, x0
    2c20:	ldrh	w0, [x0]
    2c24:	and	w0, w0, #0x800
    2c28:	cmp	w0, #0x0
    2c2c:	b.ne	2b9c <_strptime+0xef4>  // b.any
    2c30:	ldr	w0, [sp, #68]
    2c34:	cmp	w0, #0x1f
    2c38:	b.le	2c44 <_strptime+0xf9c>
    2c3c:	mov	x0, #0x0                   	// #0
    2c40:	b	361c <_strptime+0x1974>
    2c44:	ldr	x0, [sp, #32]
    2c48:	ldr	w1, [sp, #68]
    2c4c:	str	w1, [x0, #12]
    2c50:	ldr	x0, [sp, #48]
    2c54:	ldrb	w0, [x0]
    2c58:	cmp	w0, #0x0
    2c5c:	b.eq	3600 <_strptime+0x1958>  // b.none
    2c60:	bl	1170 <__ctype_b_loc@plt>
    2c64:	ldr	x1, [x0]
    2c68:	ldr	x0, [sp, #48]
    2c6c:	ldrb	w0, [x0]
    2c70:	and	x0, x0, #0xff
    2c74:	lsl	x0, x0, #1
    2c78:	add	x0, x1, x0
    2c7c:	ldrh	w0, [x0]
    2c80:	and	w0, w0, #0x2000
    2c84:	cmp	w0, #0x0
    2c88:	b.eq	3600 <_strptime+0x1958>  // b.none
    2c8c:	b	2c9c <_strptime+0xff4>
    2c90:	ldr	x0, [sp, #104]
    2c94:	add	x0, x0, #0x1
    2c98:	str	x0, [sp, #104]
    2c9c:	ldr	x0, [sp, #104]
    2ca0:	ldrb	w0, [x0]
    2ca4:	cmp	w0, #0x0
    2ca8:	b.eq	3600 <_strptime+0x1958>  // b.none
    2cac:	bl	1170 <__ctype_b_loc@plt>
    2cb0:	ldr	x1, [x0]
    2cb4:	ldr	x0, [sp, #104]
    2cb8:	ldrb	w0, [x0]
    2cbc:	and	x0, x0, #0xff
    2cc0:	lsl	x0, x0, #1
    2cc4:	add	x0, x1, x0
    2cc8:	ldrh	w0, [x0]
    2ccc:	and	w0, w0, #0x2000
    2cd0:	cmp	w0, #0x0
    2cd4:	b.eq	2c90 <_strptime+0xfe8>  // b.none
    2cd8:	b	3600 <_strptime+0x1958>
    2cdc:	str	wzr, [sp, #68]
    2ce0:	b	2dec <_strptime+0x1144>
    2ce4:	ldr	w0, [sp, #76]
    2ce8:	cmp	w0, #0x0
    2cec:	b.eq	2d48 <_strptime+0x10a0>  // b.none
    2cf0:	ldrb	w0, [sp, #67]
    2cf4:	cmp	w0, #0x42
    2cf8:	b.ne	2de0 <_strptime+0x1138>  // b.any
    2cfc:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2d00:	add	x0, x0, #0x158
    2d04:	ldrsw	x1, [sp, #68]
    2d08:	add	x1, x1, #0x2a
    2d0c:	ldr	x0, [x0, x1, lsl #3]
    2d10:	bl	1010 <strlen@plt>
    2d14:	str	x0, [sp, #112]
    2d18:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2d1c:	add	x0, x0, #0x158
    2d20:	ldrsw	x1, [sp, #68]
    2d24:	add	x1, x1, #0x2a
    2d28:	ldr	x0, [x0, x1, lsl #3]
    2d2c:	ldr	x2, [sp, #112]
    2d30:	mov	x1, x0
    2d34:	ldr	x0, [sp, #48]
    2d38:	bl	11b0 <strncasecmp@plt>
    2d3c:	cmp	w0, #0x0
    2d40:	b.ne	2de0 <_strptime+0x1138>  // b.any
    2d44:	b	2e00 <_strptime+0x1158>
    2d48:	ldrb	w0, [sp, #67]
    2d4c:	cmp	w0, #0x42
    2d50:	b.ne	2da0 <_strptime+0x10f8>  // b.any
    2d54:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2d58:	add	x0, x0, #0x158
    2d5c:	ldrsw	x1, [sp, #68]
    2d60:	add	x1, x1, #0xc
    2d64:	ldr	x0, [x0, x1, lsl #3]
    2d68:	bl	1010 <strlen@plt>
    2d6c:	str	x0, [sp, #112]
    2d70:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2d74:	add	x0, x0, #0x158
    2d78:	ldrsw	x1, [sp, #68]
    2d7c:	add	x1, x1, #0xc
    2d80:	ldr	x0, [x0, x1, lsl #3]
    2d84:	ldr	x2, [sp, #112]
    2d88:	mov	x1, x0
    2d8c:	ldr	x0, [sp, #48]
    2d90:	bl	11b0 <strncasecmp@plt>
    2d94:	cmp	w0, #0x0
    2d98:	b.ne	2de0 <_strptime+0x1138>  // b.any
    2d9c:	b	2e00 <_strptime+0x1158>
    2da0:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2da4:	add	x0, x0, #0x158
    2da8:	ldrsw	x1, [sp, #68]
    2dac:	ldr	x0, [x0, x1, lsl #3]
    2db0:	bl	1010 <strlen@plt>
    2db4:	str	x0, [sp, #112]
    2db8:	adrp	x0, 17000 <Perl_sv_2iv_flags>
    2dbc:	add	x0, x0, #0x158
    2dc0:	ldrsw	x1, [sp, #68]
    2dc4:	ldr	x0, [x0, x1, lsl #3]
    2dc8:	ldr	x2, [sp, #112]
    2dcc:	mov	x1, x0
    2dd0:	ldr	x0, [sp, #48]
    2dd4:	bl	11b0 <strncasecmp@plt>
    2dd8:	cmp	w0, #0x0
    2ddc:	b.eq	2dfc <_strptime+0x1154>  // b.none
    2de0:	ldr	w0, [sp, #68]
    2de4:	add	w0, w0, #0x1
    2de8:	str	w0, [sp, #68]
    2dec:	ldr	w0, [sp, #68]
    2df0:	cmp	w0, #0xb
    2df4:	b.le	2ce4 <_strptime+0x103c>
    2df8:	b	2e00 <_strptime+0x1158>
    2dfc:	nop
    2e00:	ldr	w0, [sp, #68]
    2e04:	cmp	w0, #0xc
    2e08:	b.ne	2e14 <_strptime+0x116c>  // b.any
    2e0c:	mov	x0, #0x0                   	// #0
    2e10:	b	361c <_strptime+0x1974>
    2e14:	ldr	x0, [sp, #32]
    2e18:	ldr	w1, [sp, #68]
    2e1c:	str	w1, [x0, #16]
    2e20:	ldr	x1, [sp, #48]
    2e24:	ldr	x0, [sp, #112]
    2e28:	add	x0, x1, x0
    2e2c:	str	x0, [sp, #48]
    2e30:	b	3600 <_strptime+0x1958>
    2e34:	bl	1170 <__ctype_b_loc@plt>
    2e38:	ldr	x1, [x0]
    2e3c:	ldr	x0, [sp, #48]
    2e40:	ldrb	w0, [x0]
    2e44:	and	x0, x0, #0xff
    2e48:	lsl	x0, x0, #1
    2e4c:	add	x0, x1, x0
    2e50:	ldrh	w0, [x0]
    2e54:	and	w0, w0, #0x800
    2e58:	cmp	w0, #0x0
    2e5c:	b.ne	2e68 <_strptime+0x11c0>  // b.any
    2e60:	mov	x0, #0x0                   	// #0
    2e64:	b	361c <_strptime+0x1974>
    2e68:	mov	x0, #0x2                   	// #2
    2e6c:	str	x0, [sp, #112]
    2e70:	str	wzr, [sp, #68]
    2e74:	b	2ec4 <_strptime+0x121c>
    2e78:	ldr	w1, [sp, #68]
    2e7c:	mov	w0, w1
    2e80:	lsl	w0, w0, #2
    2e84:	add	w0, w0, w1
    2e88:	lsl	w0, w0, #1
    2e8c:	str	w0, [sp, #68]
    2e90:	ldr	x0, [sp, #48]
    2e94:	ldrb	w0, [x0]
    2e98:	mov	w1, w0
    2e9c:	ldr	w0, [sp, #68]
    2ea0:	add	w0, w1, w0
    2ea4:	sub	w0, w0, #0x30
    2ea8:	str	w0, [sp, #68]
    2eac:	ldr	x0, [sp, #112]
    2eb0:	sub	x0, x0, #0x1
    2eb4:	str	x0, [sp, #112]
    2eb8:	ldr	x0, [sp, #48]
    2ebc:	add	x0, x0, #0x1
    2ec0:	str	x0, [sp, #48]
    2ec4:	ldr	x0, [sp, #112]
    2ec8:	cmp	x0, #0x0
    2ecc:	b.eq	2f0c <_strptime+0x1264>  // b.none
    2ed0:	ldr	x0, [sp, #48]
    2ed4:	ldrb	w0, [x0]
    2ed8:	cmp	w0, #0x0
    2edc:	b.eq	2f0c <_strptime+0x1264>  // b.none
    2ee0:	bl	1170 <__ctype_b_loc@plt>
    2ee4:	ldr	x1, [x0]
    2ee8:	ldr	x0, [sp, #48]
    2eec:	ldrb	w0, [x0]
    2ef0:	and	x0, x0, #0xff
    2ef4:	lsl	x0, x0, #1
    2ef8:	add	x0, x1, x0
    2efc:	ldrh	w0, [x0]
    2f00:	and	w0, w0, #0x800
    2f04:	cmp	w0, #0x0
    2f08:	b.ne	2e78 <_strptime+0x11d0>  // b.any
    2f0c:	ldr	w0, [sp, #68]
    2f10:	cmp	w0, #0x0
    2f14:	b.le	2f24 <_strptime+0x127c>
    2f18:	ldr	w0, [sp, #68]
    2f1c:	cmp	w0, #0xc
    2f20:	b.le	2f2c <_strptime+0x1284>
    2f24:	mov	x0, #0x0                   	// #0
    2f28:	b	361c <_strptime+0x1974>
    2f2c:	ldr	w0, [sp, #68]
    2f30:	sub	w1, w0, #0x1
    2f34:	ldr	x0, [sp, #32]
    2f38:	str	w1, [x0, #16]
    2f3c:	ldr	x0, [sp, #48]
    2f40:	ldrb	w0, [x0]
    2f44:	cmp	w0, #0x0
    2f48:	b.eq	3600 <_strptime+0x1958>  // b.none
    2f4c:	bl	1170 <__ctype_b_loc@plt>
    2f50:	ldr	x1, [x0]
    2f54:	ldr	x0, [sp, #48]
    2f58:	ldrb	w0, [x0]
    2f5c:	and	x0, x0, #0xff
    2f60:	lsl	x0, x0, #1
    2f64:	add	x0, x1, x0
    2f68:	ldrh	w0, [x0]
    2f6c:	and	w0, w0, #0x2000
    2f70:	cmp	w0, #0x0
    2f74:	b.eq	3600 <_strptime+0x1958>  // b.none
    2f78:	b	2f88 <_strptime+0x12e0>
    2f7c:	ldr	x0, [sp, #104]
    2f80:	add	x0, x0, #0x1
    2f84:	str	x0, [sp, #104]
    2f88:	ldr	x0, [sp, #104]
    2f8c:	ldrb	w0, [x0]
    2f90:	cmp	w0, #0x0
    2f94:	b.eq	3600 <_strptime+0x1958>  // b.none
    2f98:	bl	1170 <__ctype_b_loc@plt>
    2f9c:	ldr	x1, [x0]
    2fa0:	ldr	x0, [sp, #104]
    2fa4:	ldrb	w0, [x0]
    2fa8:	and	x0, x0, #0xff
    2fac:	lsl	x0, x0, #1
    2fb0:	add	x0, x1, x0
    2fb4:	ldrh	w0, [x0]
    2fb8:	and	w0, w0, #0x2000
    2fbc:	cmp	w0, #0x0
    2fc0:	b.eq	2f7c <_strptime+0x12d4>  // b.none
    2fc4:	b	3600 <_strptime+0x1958>
    2fc8:	bl	1270 <__errno_location@plt>
    2fcc:	ldr	w0, [x0]
    2fd0:	str	w0, [sp, #84]
    2fd4:	bl	1270 <__errno_location@plt>
    2fd8:	str	wzr, [x0]
    2fdc:	add	x0, sp, #0x58
    2fe0:	mov	w2, #0xa                   	// #10
    2fe4:	mov	x1, x0
    2fe8:	ldr	x0, [sp, #48]
    2fec:	bl	1180 <strtol@plt>
    2ff0:	str	x0, [sp, #128]
    2ff4:	bl	1270 <__errno_location@plt>
    2ff8:	ldr	w0, [x0]
    2ffc:	cmp	w0, #0x22
    3000:	b.eq	301c <_strptime+0x1374>  // b.none
    3004:	ldr	x0, [sp, #128]
    3008:	str	x0, [sp, #96]
    300c:	ldr	x0, [sp, #96]
    3010:	ldr	x1, [sp, #128]
    3014:	cmp	x1, x0
    3018:	b.eq	3034 <_strptime+0x138c>  // b.none
    301c:	bl	1270 <__errno_location@plt>
    3020:	mov	x1, x0
    3024:	ldr	w0, [sp, #84]
    3028:	str	w0, [x1]
    302c:	mov	x0, #0x0                   	// #0
    3030:	b	361c <_strptime+0x1974>
    3034:	bl	1270 <__errno_location@plt>
    3038:	mov	x1, x0
    303c:	ldr	w0, [sp, #84]
    3040:	str	w0, [x1]
    3044:	ldr	x0, [sp, #88]
    3048:	str	x0, [sp, #48]
    304c:	add	x0, sp, #0x90
    3050:	mov	x2, #0x38                  	// #56
    3054:	mov	w1, #0x0                   	// #0
    3058:	bl	10b0 <memset@plt>
    305c:	ldr	x0, [sp, #24]
    3060:	ldr	w0, [x0]
    3064:	cmp	w0, #0x1
    3068:	b.ne	30a0 <_strptime+0x13f8>  // b.any
    306c:	add	x0, sp, #0x60
    3070:	bl	1080 <localtime@plt>
    3074:	mov	x1, x0
    3078:	add	x0, sp, #0x90
    307c:	ldp	x2, x3, [x1]
    3080:	stp	x2, x3, [x0]
    3084:	ldp	x2, x3, [x1, #16]
    3088:	stp	x2, x3, [x0, #16]
    308c:	ldp	x2, x3, [x1, #32]
    3090:	stp	x2, x3, [x0, #32]
    3094:	ldr	x1, [x1, #48]
    3098:	str	x1, [x0, #48]
    309c:	b	30d0 <_strptime+0x1428>
    30a0:	add	x0, sp, #0x60
    30a4:	bl	10f0 <gmtime@plt>
    30a8:	mov	x1, x0
    30ac:	add	x0, sp, #0x90
    30b0:	ldp	x2, x3, [x1]
    30b4:	stp	x2, x3, [x0]
    30b8:	ldp	x2, x3, [x1, #16]
    30bc:	stp	x2, x3, [x0, #16]
    30c0:	ldp	x2, x3, [x1, #32]
    30c4:	stp	x2, x3, [x0, #32]
    30c8:	ldr	x1, [x1, #48]
    30cc:	str	x1, [x0, #48]
    30d0:	ldr	w1, [sp, #144]
    30d4:	ldr	x0, [sp, #32]
    30d8:	str	w1, [x0]
    30dc:	ldr	w1, [sp, #148]
    30e0:	ldr	x0, [sp, #32]
    30e4:	str	w1, [x0, #4]
    30e8:	ldr	w1, [sp, #152]
    30ec:	ldr	x0, [sp, #32]
    30f0:	str	w1, [x0, #8]
    30f4:	ldr	w1, [sp, #156]
    30f8:	ldr	x0, [sp, #32]
    30fc:	str	w1, [x0, #12]
    3100:	ldr	w1, [sp, #160]
    3104:	ldr	x0, [sp, #32]
    3108:	str	w1, [x0, #16]
    310c:	ldr	w1, [sp, #164]
    3110:	ldr	x0, [sp, #32]
    3114:	str	w1, [x0, #20]
    3118:	ldr	w1, [sp, #168]
    311c:	ldr	x0, [sp, #32]
    3120:	str	w1, [x0, #24]
    3124:	ldr	w1, [sp, #172]
    3128:	ldr	x0, [sp, #32]
    312c:	str	w1, [x0, #28]
    3130:	ldr	w1, [sp, #176]
    3134:	ldr	x0, [sp, #32]
    3138:	str	w1, [x0, #32]
    313c:	b	3600 <_strptime+0x1958>
    3140:	ldr	x0, [sp, #48]
    3144:	ldrb	w0, [x0]
    3148:	cmp	w0, #0x0
    314c:	b.eq	35fc <_strptime+0x1954>  // b.none
    3150:	bl	1170 <__ctype_b_loc@plt>
    3154:	ldr	x1, [x0]
    3158:	ldr	x0, [sp, #48]
    315c:	ldrb	w0, [x0]
    3160:	and	x0, x0, #0xff
    3164:	lsl	x0, x0, #1
    3168:	add	x0, x1, x0
    316c:	ldrh	w0, [x0]
    3170:	and	w0, w0, #0x2000
    3174:	cmp	w0, #0x0
    3178:	b.ne	35fc <_strptime+0x1954>  // b.any
    317c:	bl	1170 <__ctype_b_loc@plt>
    3180:	ldr	x1, [x0]
    3184:	ldr	x0, [sp, #48]
    3188:	ldrb	w0, [x0]
    318c:	and	x0, x0, #0xff
    3190:	lsl	x0, x0, #1
    3194:	add	x0, x1, x0
    3198:	ldrh	w0, [x0]
    319c:	and	w0, w0, #0x800
    31a0:	cmp	w0, #0x0
    31a4:	b.ne	31b0 <_strptime+0x1508>  // b.any
    31a8:	mov	x0, #0x0                   	// #0
    31ac:	b	361c <_strptime+0x1974>
    31b0:	ldrb	w0, [sp, #67]
    31b4:	cmp	w0, #0x59
    31b8:	b.ne	31c4 <_strptime+0x151c>  // b.any
    31bc:	mov	x0, #0x4                   	// #4
    31c0:	b	31c8 <_strptime+0x1520>
    31c4:	mov	x0, #0x2                   	// #2
    31c8:	str	x0, [sp, #112]
    31cc:	str	wzr, [sp, #68]
    31d0:	b	3220 <_strptime+0x1578>
    31d4:	ldr	w1, [sp, #68]
    31d8:	mov	w0, w1
    31dc:	lsl	w0, w0, #2
    31e0:	add	w0, w0, w1
    31e4:	lsl	w0, w0, #1
    31e8:	str	w0, [sp, #68]
    31ec:	ldr	x0, [sp, #48]
    31f0:	ldrb	w0, [x0]
    31f4:	mov	w1, w0
    31f8:	ldr	w0, [sp, #68]
    31fc:	add	w0, w1, w0
    3200:	sub	w0, w0, #0x30
    3204:	str	w0, [sp, #68]
    3208:	ldr	x0, [sp, #112]
    320c:	sub	x0, x0, #0x1
    3210:	str	x0, [sp, #112]
    3214:	ldr	x0, [sp, #48]
    3218:	add	x0, x0, #0x1
    321c:	str	x0, [sp, #48]
    3220:	ldr	x0, [sp, #112]
    3224:	cmp	x0, #0x0
    3228:	b.eq	3268 <_strptime+0x15c0>  // b.none
    322c:	ldr	x0, [sp, #48]
    3230:	ldrb	w0, [x0]
    3234:	cmp	w0, #0x0
    3238:	b.eq	3268 <_strptime+0x15c0>  // b.none
    323c:	bl	1170 <__ctype_b_loc@plt>
    3240:	ldr	x1, [x0]
    3244:	ldr	x0, [sp, #48]
    3248:	ldrb	w0, [x0]
    324c:	and	x0, x0, #0xff
    3250:	lsl	x0, x0, #1
    3254:	add	x0, x1, x0
    3258:	ldrh	w0, [x0]
    325c:	and	w0, w0, #0x800
    3260:	cmp	w0, #0x0
    3264:	b.ne	31d4 <_strptime+0x152c>  // b.any
    3268:	ldrb	w0, [sp, #67]
    326c:	cmp	w0, #0x59
    3270:	b.ne	3280 <_strptime+0x15d8>  // b.any
    3274:	ldr	w0, [sp, #68]
    3278:	sub	w0, w0, #0x76c
    327c:	str	w0, [sp, #68]
    3280:	ldrb	w0, [sp, #67]
    3284:	cmp	w0, #0x79
    3288:	b.ne	32a4 <_strptime+0x15fc>  // b.any
    328c:	ldr	w0, [sp, #68]
    3290:	cmp	w0, #0x44
    3294:	b.gt	32a4 <_strptime+0x15fc>
    3298:	ldr	w0, [sp, #68]
    329c:	add	w0, w0, #0x64
    32a0:	str	w0, [sp, #68]
    32a4:	ldr	w0, [sp, #68]
    32a8:	cmp	w0, #0x0
    32ac:	b.ge	32b8 <_strptime+0x1610>  // b.tcont
    32b0:	mov	x0, #0x0                   	// #0
    32b4:	b	361c <_strptime+0x1974>
    32b8:	ldr	x0, [sp, #32]
    32bc:	ldr	w1, [sp, #68]
    32c0:	str	w1, [x0, #20]
    32c4:	ldr	x0, [sp, #48]
    32c8:	ldrb	w0, [x0]
    32cc:	cmp	w0, #0x0
    32d0:	b.eq	3600 <_strptime+0x1958>  // b.none
    32d4:	bl	1170 <__ctype_b_loc@plt>
    32d8:	ldr	x1, [x0]
    32dc:	ldr	x0, [sp, #48]
    32e0:	ldrb	w0, [x0]
    32e4:	and	x0, x0, #0xff
    32e8:	lsl	x0, x0, #1
    32ec:	add	x0, x1, x0
    32f0:	ldrh	w0, [x0]
    32f4:	and	w0, w0, #0x2000
    32f8:	cmp	w0, #0x0
    32fc:	b.eq	3600 <_strptime+0x1958>  // b.none
    3300:	b	3310 <_strptime+0x1668>
    3304:	ldr	x0, [sp, #104]
    3308:	add	x0, x0, #0x1
    330c:	str	x0, [sp, #104]
    3310:	ldr	x0, [sp, #104]
    3314:	ldrb	w0, [x0]
    3318:	cmp	w0, #0x0
    331c:	b.eq	3600 <_strptime+0x1958>  // b.none
    3320:	bl	1170 <__ctype_b_loc@plt>
    3324:	ldr	x1, [x0]
    3328:	ldr	x0, [sp, #104]
    332c:	ldrb	w0, [x0]
    3330:	and	x0, x0, #0xff
    3334:	lsl	x0, x0, #1
    3338:	add	x0, x1, x0
    333c:	ldrh	w0, [x0]
    3340:	and	w0, w0, #0x2000
    3344:	cmp	w0, #0x0
    3348:	b.eq	3304 <_strptime+0x165c>  // b.none
    334c:	b	3600 <_strptime+0x1958>
    3350:	ldr	x0, [sp, #48]
    3354:	str	x0, [sp, #120]
    3358:	b	3368 <_strptime+0x16c0>
    335c:	ldr	x0, [sp, #120]
    3360:	add	x0, x0, #0x1
    3364:	str	x0, [sp, #120]
    3368:	ldr	x0, [sp, #120]
    336c:	ldrb	w0, [x0]
    3370:	cmp	w0, #0x0
    3374:	b.eq	33a4 <_strptime+0x16fc>  // b.none
    3378:	bl	1170 <__ctype_b_loc@plt>
    337c:	ldr	x1, [x0]
    3380:	ldr	x0, [sp, #120]
    3384:	ldrb	w0, [x0]
    3388:	and	x0, x0, #0xff
    338c:	lsl	x0, x0, #1
    3390:	add	x0, x1, x0
    3394:	ldrh	w0, [x0]
    3398:	and	w0, w0, #0x100
    339c:	cmp	w0, #0x0
    33a0:	b.ne	335c <_strptime+0x16b4>  // b.any
    33a4:	ldr	x1, [sp, #120]
    33a8:	ldr	x0, [sp, #48]
    33ac:	cmp	x1, x0
    33b0:	b.eq	3600 <_strptime+0x1958>  // b.none
    33b4:	ldr	x1, [sp, #120]
    33b8:	ldr	x0, [sp, #48]
    33bc:	sub	x0, x1, x0
    33c0:	add	x0, x0, #0x1
    33c4:	bl	1090 <malloc@plt>
    33c8:	str	x0, [sp, #136]
    33cc:	ldr	x0, [sp, #136]
    33d0:	cmp	x0, #0x0
    33d4:	b.ne	33f0 <_strptime+0x1748>  // b.any
    33d8:	bl	1270 <__errno_location@plt>
    33dc:	mov	x1, x0
    33e0:	mov	w0, #0xc                   	// #12
    33e4:	str	w0, [x1]
    33e8:	mov	x0, #0x0                   	// #0
    33ec:	b	361c <_strptime+0x1974>
    33f0:	ldr	x1, [sp, #120]
    33f4:	ldr	x0, [sp, #48]
    33f8:	sub	x0, x1, x0
    33fc:	mov	x2, x0
    3400:	ldr	x1, [sp, #48]
    3404:	ldr	x0, [sp, #136]
    3408:	bl	1250 <strncpy@plt>
    340c:	ldr	x1, [sp, #120]
    3410:	ldr	x0, [sp, #48]
    3414:	sub	x0, x1, x0
    3418:	mov	x1, x0
    341c:	ldr	x0, [sp, #136]
    3420:	add	x0, x0, x1
    3424:	strb	wzr, [x0]
    3428:	ldr	x0, [sp, #56]
    342c:	bl	1464 <my_tzset>
    3430:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3434:	add	x1, x0, #0x8a8
    3438:	ldr	x0, [sp, #136]
    343c:	bl	1160 <strcmp@plt>
    3440:	cmp	w0, #0x0
    3444:	b.ne	3454 <_strptime+0x17ac>  // b.any
    3448:	ldr	x0, [sp, #24]
    344c:	mov	w1, #0x1                   	// #1
    3450:	str	w1, [x0]
    3454:	ldr	x0, [sp, #136]
    3458:	bl	11a0 <free@plt>
    345c:	ldr	x0, [sp, #24]
    3460:	ldr	w0, [x0]
    3464:	cmp	w0, #0x0
    3468:	b.ne	3474 <_strptime+0x17cc>  // b.any
    346c:	mov	x0, #0x0                   	// #0
    3470:	b	361c <_strptime+0x1974>
    3474:	ldr	x0, [sp, #120]
    3478:	str	x0, [sp, #48]
    347c:	b	3600 <_strptime+0x1958>
    3480:	mov	w0, #0x1                   	// #1
    3484:	str	w0, [sp, #80]
    3488:	ldr	x0, [sp, #48]
    348c:	ldrb	w0, [x0]
    3490:	cmp	w0, #0x2b
    3494:	b.eq	34bc <_strptime+0x1814>  // b.none
    3498:	ldr	x0, [sp, #48]
    349c:	ldrb	w0, [x0]
    34a0:	cmp	w0, #0x2d
    34a4:	b.ne	34b4 <_strptime+0x180c>  // b.any
    34a8:	mov	w0, #0xffffffff            	// #-1
    34ac:	str	w0, [sp, #80]
    34b0:	b	34bc <_strptime+0x1814>
    34b4:	mov	x0, #0x0                   	// #0
    34b8:	b	361c <_strptime+0x1974>
    34bc:	ldr	x0, [sp, #48]
    34c0:	add	x0, x0, #0x1
    34c4:	str	x0, [sp, #48]
    34c8:	str	wzr, [sp, #68]
    34cc:	mov	x0, #0x4                   	// #4
    34d0:	str	x0, [sp, #112]
    34d4:	b	355c <_strptime+0x18b4>
    34d8:	bl	1170 <__ctype_b_loc@plt>
    34dc:	ldr	x1, [x0]
    34e0:	ldr	x0, [sp, #48]
    34e4:	ldrb	w0, [x0]
    34e8:	and	x0, x0, #0xff
    34ec:	lsl	x0, x0, #1
    34f0:	add	x0, x1, x0
    34f4:	ldrh	w0, [x0]
    34f8:	and	w0, w0, #0x800
    34fc:	cmp	w0, #0x0
    3500:	b.eq	3548 <_strptime+0x18a0>  // b.none
    3504:	ldr	w1, [sp, #68]
    3508:	mov	w0, w1
    350c:	lsl	w0, w0, #2
    3510:	add	w0, w0, w1
    3514:	lsl	w0, w0, #1
    3518:	str	w0, [sp, #68]
    351c:	ldr	x0, [sp, #48]
    3520:	ldrb	w0, [x0]
    3524:	mov	w1, w0
    3528:	ldr	w0, [sp, #68]
    352c:	add	w0, w1, w0
    3530:	sub	w0, w0, #0x30
    3534:	str	w0, [sp, #68]
    3538:	ldr	x0, [sp, #48]
    353c:	add	x0, x0, #0x1
    3540:	str	x0, [sp, #48]
    3544:	b	3550 <_strptime+0x18a8>
    3548:	mov	x0, #0x0                   	// #0
    354c:	b	361c <_strptime+0x1974>
    3550:	ldr	x0, [sp, #112]
    3554:	sub	x0, x0, #0x1
    3558:	str	x0, [sp, #112]
    355c:	ldr	x0, [sp, #112]
    3560:	cmp	x0, #0x0
    3564:	b.ne	34d8 <_strptime+0x1830>  // b.any
    3568:	ldr	x0, [sp, #32]
    356c:	ldr	w1, [x0, #8]
    3570:	ldr	w0, [sp, #68]
    3574:	mov	w2, #0x851f                	// #34079
    3578:	movk	w2, #0x51eb, lsl #16
    357c:	smull	x2, w0, w2
    3580:	lsr	x2, x2, #32
    3584:	asr	w2, w2, #5
    3588:	asr	w0, w0, #31
    358c:	sub	w2, w0, w2
    3590:	ldr	w0, [sp, #80]
    3594:	mul	w0, w2, w0
    3598:	add	w1, w1, w0
    359c:	ldr	x0, [sp, #32]
    35a0:	str	w1, [x0, #8]
    35a4:	ldr	x0, [sp, #32]
    35a8:	ldr	w2, [x0, #4]
    35ac:	ldr	w1, [sp, #68]
    35b0:	mov	w0, #0x851f                	// #34079
    35b4:	movk	w0, #0x51eb, lsl #16
    35b8:	smull	x0, w1, w0
    35bc:	lsr	x0, x0, #32
    35c0:	asr	w3, w0, #5
    35c4:	asr	w0, w1, #31
    35c8:	sub	w0, w3, w0
    35cc:	mov	w3, #0x64                  	// #100
    35d0:	mul	w0, w0, w3
    35d4:	sub	w0, w1, w0
    35d8:	ldr	w1, [sp, #80]
    35dc:	mul	w0, w0, w1
    35e0:	sub	w1, w2, w0
    35e4:	ldr	x0, [sp, #32]
    35e8:	str	w1, [x0, #4]
    35ec:	ldr	x0, [sp, #24]
    35f0:	mov	w1, #0x1                   	// #1
    35f4:	str	w1, [x0]
    35f8:	b	3600 <_strptime+0x1958>
    35fc:	nop
    3600:	ldr	x0, [sp, #104]
    3604:	ldrb	w0, [x0]
    3608:	cmp	w0, #0x0
    360c:	b.ne	1ce4 <_strptime+0x3c>  // b.any
    3610:	b	3618 <_strptime+0x1970>
    3614:	nop
    3618:	ldr	x0, [sp, #48]
    361c:	mov	x1, x0
    3620:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    3624:	ldr	x0, [x0, #4048]
    3628:	ldr	x2, [sp, #200]
    362c:	ldr	x0, [x0]
    3630:	eor	x0, x2, x0
    3634:	cmp	x0, #0x0
    3638:	b.eq	3640 <_strptime+0x1998>  // b.none
    363c:	bl	1100 <__stack_chk_fail@plt>
    3640:	mov	x0, x1
    3644:	ldp	x29, x30, [sp], #208
    3648:	ret

000000000000364c <push_common_tm>:
    364c:	stp	x29, x30, [sp, #-48]!
    3650:	mov	x29, sp
    3654:	str	x0, [sp, #40]
    3658:	str	x1, [sp, #32]
    365c:	str	x2, [sp, #24]
    3660:	ldr	x0, [sp, #24]
    3664:	ldr	w0, [x0]
    3668:	sxtw	x1, w0
    366c:	ldr	x0, [sp, #32]
    3670:	add	x0, x0, #0x8
    3674:	str	x0, [sp, #32]
    3678:	ldr	x0, [sp, #40]
    367c:	bl	1260 <Perl_newSViv@plt>
    3680:	mov	x1, x0
    3684:	ldr	x0, [sp, #32]
    3688:	str	x1, [x0]
    368c:	ldr	x0, [sp, #24]
    3690:	ldr	w0, [x0, #4]
    3694:	sxtw	x1, w0
    3698:	ldr	x0, [sp, #32]
    369c:	add	x0, x0, #0x8
    36a0:	str	x0, [sp, #32]
    36a4:	ldr	x0, [sp, #40]
    36a8:	bl	1260 <Perl_newSViv@plt>
    36ac:	mov	x1, x0
    36b0:	ldr	x0, [sp, #32]
    36b4:	str	x1, [x0]
    36b8:	ldr	x0, [sp, #24]
    36bc:	ldr	w0, [x0, #8]
    36c0:	sxtw	x1, w0
    36c4:	ldr	x0, [sp, #32]
    36c8:	add	x0, x0, #0x8
    36cc:	str	x0, [sp, #32]
    36d0:	ldr	x0, [sp, #40]
    36d4:	bl	1260 <Perl_newSViv@plt>
    36d8:	mov	x1, x0
    36dc:	ldr	x0, [sp, #32]
    36e0:	str	x1, [x0]
    36e4:	ldr	x0, [sp, #24]
    36e8:	ldr	w0, [x0, #12]
    36ec:	sxtw	x1, w0
    36f0:	ldr	x0, [sp, #32]
    36f4:	add	x0, x0, #0x8
    36f8:	str	x0, [sp, #32]
    36fc:	ldr	x0, [sp, #40]
    3700:	bl	1260 <Perl_newSViv@plt>
    3704:	mov	x1, x0
    3708:	ldr	x0, [sp, #32]
    370c:	str	x1, [x0]
    3710:	ldr	x0, [sp, #24]
    3714:	ldr	w0, [x0, #16]
    3718:	sxtw	x1, w0
    371c:	ldr	x0, [sp, #32]
    3720:	add	x0, x0, #0x8
    3724:	str	x0, [sp, #32]
    3728:	ldr	x0, [sp, #40]
    372c:	bl	1260 <Perl_newSViv@plt>
    3730:	mov	x1, x0
    3734:	ldr	x0, [sp, #32]
    3738:	str	x1, [x0]
    373c:	ldr	x0, [sp, #24]
    3740:	ldr	w0, [x0, #20]
    3744:	sxtw	x1, w0
    3748:	ldr	x0, [sp, #32]
    374c:	add	x0, x0, #0x8
    3750:	str	x0, [sp, #32]
    3754:	ldr	x0, [sp, #40]
    3758:	bl	1260 <Perl_newSViv@plt>
    375c:	mov	x1, x0
    3760:	ldr	x0, [sp, #32]
    3764:	str	x1, [x0]
    3768:	ldr	x0, [sp, #24]
    376c:	ldr	w0, [x0, #24]
    3770:	sxtw	x1, w0
    3774:	ldr	x0, [sp, #32]
    3778:	add	x0, x0, #0x8
    377c:	str	x0, [sp, #32]
    3780:	ldr	x0, [sp, #40]
    3784:	bl	1260 <Perl_newSViv@plt>
    3788:	mov	x1, x0
    378c:	ldr	x0, [sp, #32]
    3790:	str	x1, [x0]
    3794:	ldr	x0, [sp, #24]
    3798:	ldr	w0, [x0, #28]
    379c:	sxtw	x1, w0
    37a0:	ldr	x0, [sp, #32]
    37a4:	add	x0, x0, #0x8
    37a8:	str	x0, [sp, #32]
    37ac:	ldr	x0, [sp, #40]
    37b0:	bl	1260 <Perl_newSViv@plt>
    37b4:	mov	x1, x0
    37b8:	ldr	x0, [sp, #32]
    37bc:	str	x1, [x0]
    37c0:	ldr	x0, [sp, #24]
    37c4:	ldr	w0, [x0, #32]
    37c8:	sxtw	x1, w0
    37cc:	ldr	x0, [sp, #32]
    37d0:	add	x0, x0, #0x8
    37d4:	str	x0, [sp, #32]
    37d8:	ldr	x0, [sp, #40]
    37dc:	bl	1260 <Perl_newSViv@plt>
    37e0:	mov	x1, x0
    37e4:	ldr	x0, [sp, #32]
    37e8:	str	x1, [x0]
    37ec:	ldr	x0, [sp, #32]
    37f0:	ldp	x29, x30, [sp], #48
    37f4:	ret

00000000000037f8 <return_11part_tm>:
    37f8:	stp	x29, x30, [sp, #-64]!
    37fc:	mov	x29, sp
    3800:	str	x0, [sp, #40]
    3804:	str	x1, [sp, #32]
    3808:	str	x2, [sp, #24]
    380c:	ldr	x0, [sp, #24]
    3810:	bl	1480 <my_mini_mktime>
    3814:	ldr	x0, [sp, #40]
    3818:	ldr	x1, [x0, #32]
    381c:	ldr	x0, [sp, #32]
    3820:	sub	x0, x1, x0
    3824:	cmp	x0, #0x50
    3828:	cset	w0, le
    382c:	and	w0, w0, #0xff
    3830:	and	x0, x0, #0xff
    3834:	cmp	x0, #0x0
    3838:	b.eq	3854 <return_11part_tm+0x5c>  // b.none
    383c:	mov	x3, #0xb                   	// #11
    3840:	ldr	x2, [sp, #32]
    3844:	ldr	x1, [sp, #32]
    3848:	ldr	x0, [sp, #40]
    384c:	bl	1030 <Perl_stack_grow@plt>
    3850:	str	x0, [sp, #32]
    3854:	ldr	x2, [sp, #24]
    3858:	ldr	x1, [sp, #32]
    385c:	ldr	x0, [sp, #40]
    3860:	bl	364c <push_common_tm>
    3864:	str	x0, [sp, #32]
    3868:	ldr	x0, [sp, #32]
    386c:	add	x0, x0, #0x8
    3870:	str	x0, [sp, #32]
    3874:	mov	x1, #0x0                   	// #0
    3878:	ldr	x0, [sp, #40]
    387c:	bl	1260 <Perl_newSViv@plt>
    3880:	mov	x1, x0
    3884:	ldr	x0, [sp, #32]
    3888:	str	x1, [x0]
    388c:	ldr	x0, [sp, #32]
    3890:	add	x0, x0, #0x8
    3894:	str	x0, [sp, #32]
    3898:	mov	x1, #0x0                   	// #0
    389c:	ldr	x0, [sp, #40]
    38a0:	bl	1260 <Perl_newSViv@plt>
    38a4:	mov	x1, x0
    38a8:	ldr	x0, [sp, #32]
    38ac:	str	x1, [x0]
    38b0:	ldr	x0, [sp, #40]
    38b4:	ldr	x1, [sp, #32]
    38b8:	str	x1, [x0]
    38bc:	ldr	x0, [sp, #32]
    38c0:	str	x0, [sp, #56]
    38c4:	ldr	x0, [sp, #32]
    38c8:	sub	x0, x0, #0x50
    38cc:	str	x0, [sp, #32]
    38d0:	ldr	x0, [sp, #32]
    38d4:	add	x1, x0, #0x8
    38d8:	str	x1, [sp, #32]
    38dc:	ldr	x0, [x0]
    38e0:	mov	x1, x0
    38e4:	ldr	x0, [sp, #40]
    38e8:	bl	11d0 <Perl_sv_2mortal@plt>
    38ec:	ldr	x1, [sp, #32]
    38f0:	ldr	x0, [sp, #56]
    38f4:	cmp	x1, x0
    38f8:	b.ls	38d0 <return_11part_tm+0xd8>  // b.plast
    38fc:	nop
    3900:	ldp	x29, x30, [sp], #64
    3904:	ret

0000000000003908 <_populate_C_time_locale>:
    3908:	stp	x29, x30, [sp, #-64]!
    390c:	mov	x29, sp
    3910:	str	x0, [sp, #24]
    3914:	str	x1, [sp, #16]
    3918:	mov	w6, #0x0                   	// #0
    391c:	mov	x5, #0x0                   	// #0
    3920:	mov	w4, #0x20                  	// #32
    3924:	mov	w3, #0x9                   	// #9
    3928:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    392c:	add	x2, x0, #0xa98
    3930:	ldr	x1, [sp, #16]
    3934:	ldr	x0, [sp, #24]
    3938:	bl	1220 <Perl_hv_common_key_len@plt>
    393c:	ldr	x0, [x0]
    3940:	ldr	x0, [x0, #16]
    3944:	str	x0, [sp, #40]
    3948:	mov	w6, #0x0                   	// #0
    394c:	mov	x5, #0x0                   	// #0
    3950:	mov	w4, #0x20                  	// #32
    3954:	mov	w3, #0x5                   	// #5
    3958:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    395c:	add	x2, x0, #0xaa8
    3960:	ldr	x1, [sp, #16]
    3964:	ldr	x0, [sp, #24]
    3968:	bl	1220 <Perl_hv_common_key_len@plt>
    396c:	ldr	x0, [x0]
    3970:	ldr	x0, [x0, #16]
    3974:	str	x0, [sp, #48]
    3978:	mov	w6, #0x0                   	// #0
    397c:	mov	x5, #0x0                   	// #0
    3980:	mov	w4, #0x20                  	// #32
    3984:	mov	w3, #0x3                   	// #3
    3988:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    398c:	add	x2, x0, #0xab0
    3990:	ldr	x1, [sp, #16]
    3994:	ldr	x0, [sp, #24]
    3998:	bl	1220 <Perl_hv_common_key_len@plt>
    399c:	ldr	x0, [x0]
    39a0:	ldr	x0, [x0, #16]
    39a4:	str	x0, [sp, #56]
    39a8:	str	wzr, [sp, #36]
    39ac:	b	3b8c <_populate_C_time_locale+0x284>
    39b0:	ldrsw	x0, [sp, #36]
    39b4:	mov	w3, #0x0                   	// #0
    39b8:	mov	x2, x0
    39bc:	ldr	x1, [sp, #40]
    39c0:	ldr	x0, [sp, #24]
    39c4:	bl	1210 <Perl_av_fetch@plt>
    39c8:	ldr	x0, [x0]
    39cc:	ldr	w1, [x0, #12]
    39d0:	mov	w0, #0x400                 	// #1024
    39d4:	movk	w0, #0x20, lsl #16
    39d8:	and	w0, w1, w0
    39dc:	cmp	w0, #0x400
    39e0:	b.ne	3a08 <_populate_C_time_locale+0x100>  // b.any
    39e4:	ldrsw	x0, [sp, #36]
    39e8:	mov	w3, #0x0                   	// #0
    39ec:	mov	x2, x0
    39f0:	ldr	x1, [sp, #40]
    39f4:	ldr	x0, [sp, #24]
    39f8:	bl	1210 <Perl_av_fetch@plt>
    39fc:	ldr	x0, [x0]
    3a00:	ldr	x0, [x0, #16]
    3a04:	b	3a38 <_populate_C_time_locale+0x130>
    3a08:	ldrsw	x0, [sp, #36]
    3a0c:	mov	w3, #0x0                   	// #0
    3a10:	mov	x2, x0
    3a14:	ldr	x1, [sp, #40]
    3a18:	ldr	x0, [sp, #24]
    3a1c:	bl	1210 <Perl_av_fetch@plt>
    3a20:	ldr	x0, [x0]
    3a24:	mov	w3, #0x2                   	// #2
    3a28:	mov	x2, #0x0                   	// #0
    3a2c:	mov	x1, x0
    3a30:	ldr	x0, [sp, #24]
    3a34:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3a38:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3a3c:	add	x1, x1, #0x158
    3a40:	ldrsw	x2, [sp, #36]
    3a44:	add	x2, x2, #0x2a
    3a48:	str	x0, [x1, x2, lsl #3]
    3a4c:	ldrsw	x0, [sp, #36]
    3a50:	mov	w3, #0x0                   	// #0
    3a54:	mov	x2, x0
    3a58:	ldr	x1, [sp, #48]
    3a5c:	ldr	x0, [sp, #24]
    3a60:	bl	1210 <Perl_av_fetch@plt>
    3a64:	ldr	x0, [x0]
    3a68:	ldr	w1, [x0, #12]
    3a6c:	mov	w0, #0x400                 	// #1024
    3a70:	movk	w0, #0x20, lsl #16
    3a74:	and	w0, w1, w0
    3a78:	cmp	w0, #0x400
    3a7c:	b.ne	3aa4 <_populate_C_time_locale+0x19c>  // b.any
    3a80:	ldrsw	x0, [sp, #36]
    3a84:	mov	w3, #0x0                   	// #0
    3a88:	mov	x2, x0
    3a8c:	ldr	x1, [sp, #48]
    3a90:	ldr	x0, [sp, #24]
    3a94:	bl	1210 <Perl_av_fetch@plt>
    3a98:	ldr	x0, [x0]
    3a9c:	ldr	x0, [x0, #16]
    3aa0:	b	3ad4 <_populate_C_time_locale+0x1cc>
    3aa4:	ldrsw	x0, [sp, #36]
    3aa8:	mov	w3, #0x0                   	// #0
    3aac:	mov	x2, x0
    3ab0:	ldr	x1, [sp, #48]
    3ab4:	ldr	x0, [sp, #24]
    3ab8:	bl	1210 <Perl_av_fetch@plt>
    3abc:	ldr	x0, [x0]
    3ac0:	mov	w3, #0x2                   	// #2
    3ac4:	mov	x2, #0x0                   	// #0
    3ac8:	mov	x1, x0
    3acc:	ldr	x0, [sp, #24]
    3ad0:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3ad4:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3ad8:	add	x1, x1, #0x158
    3adc:	ldrsw	x2, [sp, #36]
    3ae0:	add	x2, x2, #0xc
    3ae4:	str	x0, [x1, x2, lsl #3]
    3ae8:	ldrsw	x0, [sp, #36]
    3aec:	mov	w3, #0x0                   	// #0
    3af0:	mov	x2, x0
    3af4:	ldr	x1, [sp, #56]
    3af8:	ldr	x0, [sp, #24]
    3afc:	bl	1210 <Perl_av_fetch@plt>
    3b00:	ldr	x0, [x0]
    3b04:	ldr	w1, [x0, #12]
    3b08:	mov	w0, #0x400                 	// #1024
    3b0c:	movk	w0, #0x20, lsl #16
    3b10:	and	w0, w1, w0
    3b14:	cmp	w0, #0x400
    3b18:	b.ne	3b40 <_populate_C_time_locale+0x238>  // b.any
    3b1c:	ldrsw	x0, [sp, #36]
    3b20:	mov	w3, #0x0                   	// #0
    3b24:	mov	x2, x0
    3b28:	ldr	x1, [sp, #56]
    3b2c:	ldr	x0, [sp, #24]
    3b30:	bl	1210 <Perl_av_fetch@plt>
    3b34:	ldr	x0, [x0]
    3b38:	ldr	x0, [x0, #16]
    3b3c:	b	3b70 <_populate_C_time_locale+0x268>
    3b40:	ldrsw	x0, [sp, #36]
    3b44:	mov	w3, #0x0                   	// #0
    3b48:	mov	x2, x0
    3b4c:	ldr	x1, [sp, #56]
    3b50:	ldr	x0, [sp, #24]
    3b54:	bl	1210 <Perl_av_fetch@plt>
    3b58:	ldr	x0, [x0]
    3b5c:	mov	w3, #0x2                   	// #2
    3b60:	mov	x2, #0x0                   	// #0
    3b64:	mov	x1, x0
    3b68:	ldr	x0, [sp, #24]
    3b6c:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3b70:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3b74:	add	x1, x1, #0x158
    3b78:	ldrsw	x2, [sp, #36]
    3b7c:	str	x0, [x1, x2, lsl #3]
    3b80:	ldr	w0, [sp, #36]
    3b84:	add	w0, w0, #0x1
    3b88:	str	w0, [sp, #36]
    3b8c:	ldr	x1, [sp, #48]
    3b90:	ldr	x0, [sp, #24]
    3b94:	bl	1060 <Perl_av_len@plt>
    3b98:	add	w0, w0, #0x1
    3b9c:	ldr	w1, [sp, #36]
    3ba0:	cmp	w1, w0
    3ba4:	b.lt	39b0 <_populate_C_time_locale+0xa8>  // b.tstop
    3ba8:	mov	w6, #0x0                   	// #0
    3bac:	mov	x5, #0x0                   	// #0
    3bb0:	mov	w4, #0x20                  	// #32
    3bb4:	mov	w3, #0x7                   	// #7
    3bb8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3bbc:	add	x2, x0, #0xab8
    3bc0:	ldr	x1, [sp, #16]
    3bc4:	ldr	x0, [sp, #24]
    3bc8:	bl	1220 <Perl_hv_common_key_len@plt>
    3bcc:	ldr	x0, [x0]
    3bd0:	ldr	x0, [x0, #16]
    3bd4:	str	x0, [sp, #48]
    3bd8:	mov	w6, #0x0                   	// #0
    3bdc:	mov	x5, #0x0                   	// #0
    3be0:	mov	w4, #0x20                  	// #32
    3be4:	mov	w3, #0x4                   	// #4
    3be8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3bec:	add	x2, x0, #0xac0
    3bf0:	ldr	x1, [sp, #16]
    3bf4:	ldr	x0, [sp, #24]
    3bf8:	bl	1220 <Perl_hv_common_key_len@plt>
    3bfc:	ldr	x0, [x0]
    3c00:	ldr	x0, [x0, #16]
    3c04:	str	x0, [sp, #56]
    3c08:	str	wzr, [sp, #36]
    3c0c:	b	3d5c <_populate_C_time_locale+0x454>
    3c10:	ldrsw	x0, [sp, #36]
    3c14:	mov	w3, #0x0                   	// #0
    3c18:	mov	x2, x0
    3c1c:	ldr	x1, [sp, #56]
    3c20:	ldr	x0, [sp, #24]
    3c24:	bl	1210 <Perl_av_fetch@plt>
    3c28:	ldr	x0, [x0]
    3c2c:	ldr	w1, [x0, #12]
    3c30:	mov	w0, #0x400                 	// #1024
    3c34:	movk	w0, #0x20, lsl #16
    3c38:	and	w0, w1, w0
    3c3c:	cmp	w0, #0x400
    3c40:	b.ne	3c68 <_populate_C_time_locale+0x360>  // b.any
    3c44:	ldrsw	x0, [sp, #36]
    3c48:	mov	w3, #0x0                   	// #0
    3c4c:	mov	x2, x0
    3c50:	ldr	x1, [sp, #56]
    3c54:	ldr	x0, [sp, #24]
    3c58:	bl	1210 <Perl_av_fetch@plt>
    3c5c:	ldr	x0, [x0]
    3c60:	ldr	x0, [x0, #16]
    3c64:	b	3c98 <_populate_C_time_locale+0x390>
    3c68:	ldrsw	x0, [sp, #36]
    3c6c:	mov	w3, #0x0                   	// #0
    3c70:	mov	x2, x0
    3c74:	ldr	x1, [sp, #56]
    3c78:	ldr	x0, [sp, #24]
    3c7c:	bl	1210 <Perl_av_fetch@plt>
    3c80:	ldr	x0, [x0]
    3c84:	mov	w3, #0x2                   	// #2
    3c88:	mov	x2, #0x0                   	// #0
    3c8c:	mov	x1, x0
    3c90:	ldr	x0, [sp, #24]
    3c94:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3c98:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3c9c:	add	x1, x1, #0x158
    3ca0:	ldrsw	x2, [sp, #36]
    3ca4:	add	x2, x2, #0x18
    3ca8:	str	x0, [x1, x2, lsl #3]
    3cac:	ldrsw	x0, [sp, #36]
    3cb0:	mov	w3, #0x0                   	// #0
    3cb4:	mov	x2, x0
    3cb8:	ldr	x1, [sp, #48]
    3cbc:	ldr	x0, [sp, #24]
    3cc0:	bl	1210 <Perl_av_fetch@plt>
    3cc4:	ldr	x0, [x0]
    3cc8:	ldr	w1, [x0, #12]
    3ccc:	mov	w0, #0x400                 	// #1024
    3cd0:	movk	w0, #0x20, lsl #16
    3cd4:	and	w0, w1, w0
    3cd8:	cmp	w0, #0x400
    3cdc:	b.ne	3d04 <_populate_C_time_locale+0x3fc>  // b.any
    3ce0:	ldrsw	x0, [sp, #36]
    3ce4:	mov	w3, #0x0                   	// #0
    3ce8:	mov	x2, x0
    3cec:	ldr	x1, [sp, #48]
    3cf0:	ldr	x0, [sp, #24]
    3cf4:	bl	1210 <Perl_av_fetch@plt>
    3cf8:	ldr	x0, [x0]
    3cfc:	ldr	x0, [x0, #16]
    3d00:	b	3d34 <_populate_C_time_locale+0x42c>
    3d04:	ldrsw	x0, [sp, #36]
    3d08:	mov	w3, #0x0                   	// #0
    3d0c:	mov	x2, x0
    3d10:	ldr	x1, [sp, #48]
    3d14:	ldr	x0, [sp, #24]
    3d18:	bl	1210 <Perl_av_fetch@plt>
    3d1c:	ldr	x0, [x0]
    3d20:	mov	w3, #0x2                   	// #2
    3d24:	mov	x2, #0x0                   	// #0
    3d28:	mov	x1, x0
    3d2c:	ldr	x0, [sp, #24]
    3d30:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3d34:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3d38:	add	x2, x1, #0x158
    3d3c:	ldrsw	x1, [sp, #36]
    3d40:	add	x1, x1, #0x1e
    3d44:	lsl	x1, x1, #3
    3d48:	add	x1, x2, x1
    3d4c:	str	x0, [x1, #8]
    3d50:	ldr	w0, [sp, #36]
    3d54:	add	w0, w0, #0x1
    3d58:	str	w0, [sp, #36]
    3d5c:	ldr	x1, [sp, #48]
    3d60:	ldr	x0, [sp, #24]
    3d64:	bl	1060 <Perl_av_len@plt>
    3d68:	add	w0, w0, #0x1
    3d6c:	ldr	w1, [sp, #36]
    3d70:	cmp	w1, w0
    3d74:	b.lt	3c10 <_populate_C_time_locale+0x308>  // b.tstop
    3d78:	mov	w6, #0x0                   	// #0
    3d7c:	mov	x5, #0x0                   	// #0
    3d80:	mov	w4, #0x20                  	// #32
    3d84:	mov	w3, #0x2                   	// #2
    3d88:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3d8c:	add	x2, x0, #0xac8
    3d90:	ldr	x1, [sp, #16]
    3d94:	ldr	x0, [sp, #24]
    3d98:	bl	1220 <Perl_hv_common_key_len@plt>
    3d9c:	ldr	x0, [x0]
    3da0:	ldr	w1, [x0, #12]
    3da4:	mov	w0, #0x400                 	// #1024
    3da8:	movk	w0, #0x20, lsl #16
    3dac:	and	w0, w1, w0
    3db0:	cmp	w0, #0x400
    3db4:	b.ne	3de8 <_populate_C_time_locale+0x4e0>  // b.any
    3db8:	mov	w6, #0x0                   	// #0
    3dbc:	mov	x5, #0x0                   	// #0
    3dc0:	mov	w4, #0x20                  	// #32
    3dc4:	mov	w3, #0x2                   	// #2
    3dc8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3dcc:	add	x2, x0, #0xac8
    3dd0:	ldr	x1, [sp, #16]
    3dd4:	ldr	x0, [sp, #24]
    3dd8:	bl	1220 <Perl_hv_common_key_len@plt>
    3ddc:	ldr	x0, [x0]
    3de0:	ldr	x0, [x0, #16]
    3de4:	b	3e24 <_populate_C_time_locale+0x51c>
    3de8:	mov	w6, #0x0                   	// #0
    3dec:	mov	x5, #0x0                   	// #0
    3df0:	mov	w4, #0x20                  	// #32
    3df4:	mov	w3, #0x2                   	// #2
    3df8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3dfc:	add	x2, x0, #0xac8
    3e00:	ldr	x1, [sp, #16]
    3e04:	ldr	x0, [sp, #24]
    3e08:	bl	1220 <Perl_hv_common_key_len@plt>
    3e0c:	ldr	x0, [x0]
    3e10:	mov	w3, #0x2                   	// #2
    3e14:	mov	x2, #0x0                   	// #0
    3e18:	mov	x1, x0
    3e1c:	ldr	x0, [sp, #24]
    3e20:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3e24:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3e28:	add	x1, x1, #0x158
    3e2c:	str	x0, [x1, #304]
    3e30:	mov	w6, #0x0                   	// #0
    3e34:	mov	x5, #0x0                   	// #0
    3e38:	mov	w4, #0x20                  	// #32
    3e3c:	mov	w3, #0x2                   	// #2
    3e40:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3e44:	add	x2, x0, #0xad0
    3e48:	ldr	x1, [sp, #16]
    3e4c:	ldr	x0, [sp, #24]
    3e50:	bl	1220 <Perl_hv_common_key_len@plt>
    3e54:	ldr	x0, [x0]
    3e58:	ldr	w1, [x0, #12]
    3e5c:	mov	w0, #0x400                 	// #1024
    3e60:	movk	w0, #0x20, lsl #16
    3e64:	and	w0, w1, w0
    3e68:	cmp	w0, #0x400
    3e6c:	b.ne	3ea0 <_populate_C_time_locale+0x598>  // b.any
    3e70:	mov	w6, #0x0                   	// #0
    3e74:	mov	x5, #0x0                   	// #0
    3e78:	mov	w4, #0x20                  	// #32
    3e7c:	mov	w3, #0x2                   	// #2
    3e80:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3e84:	add	x2, x0, #0xad0
    3e88:	ldr	x1, [sp, #16]
    3e8c:	ldr	x0, [sp, #24]
    3e90:	bl	1220 <Perl_hv_common_key_len@plt>
    3e94:	ldr	x0, [x0]
    3e98:	ldr	x0, [x0, #16]
    3e9c:	b	3edc <_populate_C_time_locale+0x5d4>
    3ea0:	mov	w6, #0x0                   	// #0
    3ea4:	mov	x5, #0x0                   	// #0
    3ea8:	mov	w4, #0x20                  	// #32
    3eac:	mov	w3, #0x2                   	// #2
    3eb0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3eb4:	add	x2, x0, #0xad0
    3eb8:	ldr	x1, [sp, #16]
    3ebc:	ldr	x0, [sp, #24]
    3ec0:	bl	1220 <Perl_hv_common_key_len@plt>
    3ec4:	ldr	x0, [x0]
    3ec8:	mov	w3, #0x2                   	// #2
    3ecc:	mov	x2, #0x0                   	// #0
    3ed0:	mov	x1, x0
    3ed4:	ldr	x0, [sp, #24]
    3ed8:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3edc:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3ee0:	add	x1, x1, #0x158
    3ee4:	str	x0, [x1, #312]
    3ee8:	mov	w6, #0x0                   	// #0
    3eec:	mov	x5, #0x0                   	// #0
    3ef0:	mov	w4, #0x20                  	// #32
    3ef4:	mov	w3, #0x2                   	// #2
    3ef8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3efc:	add	x2, x0, #0xad8
    3f00:	ldr	x1, [sp, #16]
    3f04:	ldr	x0, [sp, #24]
    3f08:	bl	1220 <Perl_hv_common_key_len@plt>
    3f0c:	ldr	x0, [x0]
    3f10:	ldr	w1, [x0, #12]
    3f14:	mov	w0, #0x400                 	// #1024
    3f18:	movk	w0, #0x20, lsl #16
    3f1c:	and	w0, w1, w0
    3f20:	cmp	w0, #0x400
    3f24:	b.ne	3f58 <_populate_C_time_locale+0x650>  // b.any
    3f28:	mov	w6, #0x0                   	// #0
    3f2c:	mov	x5, #0x0                   	// #0
    3f30:	mov	w4, #0x20                  	// #32
    3f34:	mov	w3, #0x2                   	// #2
    3f38:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3f3c:	add	x2, x0, #0xad8
    3f40:	ldr	x1, [sp, #16]
    3f44:	ldr	x0, [sp, #24]
    3f48:	bl	1220 <Perl_hv_common_key_len@plt>
    3f4c:	ldr	x0, [x0]
    3f50:	ldr	x0, [x0, #16]
    3f54:	b	3f94 <_populate_C_time_locale+0x68c>
    3f58:	mov	w6, #0x0                   	// #0
    3f5c:	mov	x5, #0x0                   	// #0
    3f60:	mov	w4, #0x20                  	// #32
    3f64:	mov	w3, #0x2                   	// #2
    3f68:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3f6c:	add	x2, x0, #0xad8
    3f70:	ldr	x1, [sp, #16]
    3f74:	ldr	x0, [sp, #24]
    3f78:	bl	1220 <Perl_hv_common_key_len@plt>
    3f7c:	ldr	x0, [x0]
    3f80:	mov	w3, #0x2                   	// #2
    3f84:	mov	x2, #0x0                   	// #0
    3f88:	mov	x1, x0
    3f8c:	ldr	x0, [sp, #24]
    3f90:	bl	10c0 <Perl_sv_2pv_flags@plt>
    3f94:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    3f98:	add	x1, x1, #0x158
    3f9c:	str	x0, [x1, #320]
    3fa0:	mov	w6, #0x0                   	// #0
    3fa4:	mov	x5, #0x0                   	// #0
    3fa8:	mov	w4, #0x20                  	// #32
    3fac:	mov	w3, #0x2                   	// #2
    3fb0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3fb4:	add	x2, x0, #0xae0
    3fb8:	ldr	x1, [sp, #16]
    3fbc:	ldr	x0, [sp, #24]
    3fc0:	bl	1220 <Perl_hv_common_key_len@plt>
    3fc4:	ldr	x0, [x0]
    3fc8:	ldr	w1, [x0, #12]
    3fcc:	mov	w0, #0x400                 	// #1024
    3fd0:	movk	w0, #0x20, lsl #16
    3fd4:	and	w0, w1, w0
    3fd8:	cmp	w0, #0x400
    3fdc:	b.ne	4010 <_populate_C_time_locale+0x708>  // b.any
    3fe0:	mov	w6, #0x0                   	// #0
    3fe4:	mov	x5, #0x0                   	// #0
    3fe8:	mov	w4, #0x20                  	// #32
    3fec:	mov	w3, #0x2                   	// #2
    3ff0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    3ff4:	add	x2, x0, #0xae0
    3ff8:	ldr	x1, [sp, #16]
    3ffc:	ldr	x0, [sp, #24]
    4000:	bl	1220 <Perl_hv_common_key_len@plt>
    4004:	ldr	x0, [x0]
    4008:	ldr	x0, [x0, #16]
    400c:	b	404c <_populate_C_time_locale+0x744>
    4010:	mov	w6, #0x0                   	// #0
    4014:	mov	x5, #0x0                   	// #0
    4018:	mov	w4, #0x20                  	// #32
    401c:	mov	w3, #0x2                   	// #2
    4020:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    4024:	add	x2, x0, #0xae0
    4028:	ldr	x1, [sp, #16]
    402c:	ldr	x0, [sp, #24]
    4030:	bl	1220 <Perl_hv_common_key_len@plt>
    4034:	ldr	x0, [x0]
    4038:	mov	w3, #0x2                   	// #2
    403c:	mov	x2, #0x0                   	// #0
    4040:	mov	x1, x0
    4044:	ldr	x0, [sp, #24]
    4048:	bl	10c0 <Perl_sv_2pv_flags@plt>
    404c:	adrp	x1, 17000 <Perl_sv_2iv_flags>
    4050:	add	x1, x1, #0x158
    4054:	str	x0, [x1, #328]
    4058:	nop
    405c:	ldp	x29, x30, [sp], #64
    4060:	ret

0000000000004064 <XS_Time__Piece__strftime>:
    4064:	stp	x29, x30, [sp, #-368]!
    4068:	mov	x29, sp
    406c:	str	x19, [sp, #16]
    4070:	str	x0, [sp, #40]
    4074:	str	x1, [sp, #32]
    4078:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    407c:	ldr	x0, [x0, #4048]
    4080:	ldr	x1, [x0]
    4084:	str	x1, [sp, #360]
    4088:	mov	x1, #0x0                   	// #0
    408c:	ldr	x0, [sp, #40]
    4090:	ldr	x0, [x0]
    4094:	str	x0, [sp, #96]
    4098:	ldr	x0, [sp, #40]
    409c:	bl	1420 <S_POPMARK>
    40a0:	str	w0, [sp, #56]
    40a4:	ldr	x0, [sp, #40]
    40a8:	ldr	x1, [x0, #24]
    40ac:	ldr	w0, [sp, #56]
    40b0:	add	w2, w0, #0x1
    40b4:	str	w2, [sp, #56]
    40b8:	sxtw	x0, w0
    40bc:	lsl	x0, x0, #3
    40c0:	add	x0, x1, x0
    40c4:	str	x0, [sp, #104]
    40c8:	ldr	x1, [sp, #96]
    40cc:	ldr	x0, [sp, #104]
    40d0:	sub	x0, x1, x0
    40d4:	asr	x0, x0, #3
    40d8:	str	w0, [sp, #60]
    40dc:	ldr	w0, [sp, #60]
    40e0:	cmp	w0, #0x1
    40e4:	b.le	40f4 <XS_Time__Piece__strftime+0x90>
    40e8:	ldr	w0, [sp, #60]
    40ec:	cmp	w0, #0x3
    40f0:	b.le	4104 <XS_Time__Piece__strftime+0xa0>
    40f4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    40f8:	add	x1, x0, #0xae8
    40fc:	ldr	x0, [sp, #32]
    4100:	bl	1120 <Perl_croak_xs_usage@plt>
    4104:	ldr	x0, [sp, #40]
    4108:	ldr	x1, [x0, #24]
    410c:	ldrsw	x0, [sp, #56]
    4110:	lsl	x0, x0, #3
    4114:	add	x0, x1, x0
    4118:	ldr	x0, [x0]
    411c:	ldr	w1, [x0, #12]
    4120:	mov	w0, #0x400                 	// #1024
    4124:	movk	w0, #0x20, lsl #16
    4128:	and	w0, w1, w0
    412c:	cmp	w0, #0x400
    4130:	b.ne	4154 <XS_Time__Piece__strftime+0xf0>  // b.any
    4134:	ldr	x0, [sp, #40]
    4138:	ldr	x1, [x0, #24]
    413c:	ldrsw	x0, [sp, #56]
    4140:	lsl	x0, x0, #3
    4144:	add	x0, x1, x0
    4148:	ldr	x0, [x0]
    414c:	ldr	x0, [x0, #16]
    4150:	b	4180 <XS_Time__Piece__strftime+0x11c>
    4154:	ldr	x0, [sp, #40]
    4158:	ldr	x1, [x0, #24]
    415c:	ldrsw	x0, [sp, #56]
    4160:	lsl	x0, x0, #3
    4164:	add	x0, x1, x0
    4168:	ldr	x0, [x0]
    416c:	mov	w3, #0x2                   	// #2
    4170:	mov	x2, #0x0                   	// #0
    4174:	mov	x1, x0
    4178:	ldr	x0, [sp, #40]
    417c:	bl	10c0 <Perl_sv_2pv_flags@plt>
    4180:	str	x0, [sp, #112]
    4184:	ldr	x0, [sp, #40]
    4188:	ldr	x1, [x0, #24]
    418c:	ldrsw	x0, [sp, #56]
    4190:	add	x0, x0, #0x1
    4194:	lsl	x0, x0, #3
    4198:	add	x0, x1, x0
    419c:	ldr	x0, [x0]
    41a0:	ldr	w1, [x0, #12]
    41a4:	mov	w0, #0x200                 	// #512
    41a8:	movk	w0, #0x20, lsl #16
    41ac:	and	w0, w1, w0
    41b0:	cmp	w0, #0x200
    41b4:	b.ne	41e4 <XS_Time__Piece__strftime+0x180>  // b.any
    41b8:	ldr	x0, [sp, #40]
    41bc:	ldr	x1, [x0, #24]
    41c0:	ldrsw	x0, [sp, #56]
    41c4:	add	x0, x0, #0x1
    41c8:	lsl	x0, x0, #3
    41cc:	add	x0, x1, x0
    41d0:	ldr	x0, [x0]
    41d4:	ldr	x0, [x0]
    41d8:	ldr	d0, [x0, #40]
    41dc:	fcvtzs	d0, d0
    41e0:	b	4214 <XS_Time__Piece__strftime+0x1b0>
    41e4:	ldr	x0, [sp, #40]
    41e8:	ldr	x1, [x0, #24]
    41ec:	ldrsw	x0, [sp, #56]
    41f0:	add	x0, x0, #0x1
    41f4:	lsl	x0, x0, #3
    41f8:	add	x0, x1, x0
    41fc:	ldr	x0, [x0]
    4200:	mov	w2, #0x2                   	// #2
    4204:	mov	x1, x0
    4208:	ldr	x0, [sp, #40]
    420c:	bl	1130 <Perl_sv_2nv_flags@plt>
    4210:	fcvtzs	d0, d0
    4214:	str	d0, [sp, #64]
    4218:	ldr	w0, [sp, #60]
    421c:	cmp	w0, #0x2
    4220:	b.gt	4230 <XS_Time__Piece__strftime+0x1cc>
    4224:	mov	w0, #0x1                   	// #1
    4228:	str	w0, [sp, #52]
    422c:	b	42bc <XS_Time__Piece__strftime+0x258>
    4230:	ldr	x0, [sp, #40]
    4234:	ldr	x1, [x0, #24]
    4238:	ldrsw	x0, [sp, #56]
    423c:	add	x0, x0, #0x2
    4240:	lsl	x0, x0, #3
    4244:	add	x0, x1, x0
    4248:	ldr	x0, [x0]
    424c:	ldr	w1, [x0, #12]
    4250:	mov	w0, #0x100                 	// #256
    4254:	movk	w0, #0x20, lsl #16
    4258:	and	w0, w1, w0
    425c:	cmp	w0, #0x100
    4260:	b.ne	428c <XS_Time__Piece__strftime+0x228>  // b.any
    4264:	ldr	x0, [sp, #40]
    4268:	ldr	x1, [x0, #24]
    426c:	ldrsw	x0, [sp, #56]
    4270:	add	x0, x0, #0x2
    4274:	lsl	x0, x0, #3
    4278:	add	x0, x1, x0
    427c:	ldr	x0, [x0]
    4280:	ldr	x0, [x0]
    4284:	ldr	x0, [x0, #32]
    4288:	b	42b8 <XS_Time__Piece__strftime+0x254>
    428c:	ldr	x0, [sp, #40]
    4290:	ldr	x1, [x0, #24]
    4294:	ldrsw	x0, [sp, #56]
    4298:	add	x0, x0, #0x2
    429c:	lsl	x0, x0, #3
    42a0:	add	x0, x1, x0
    42a4:	ldr	x0, [x0]
    42a8:	mov	w2, #0x2                   	// #2
    42ac:	mov	x1, x0
    42b0:	ldr	x0, [sp, #40]
    42b4:	bl	1000 <Perl_sv_2iv_flags@plt>
    42b8:	str	w0, [sp, #52]
    42bc:	ldr	w0, [sp, #52]
    42c0:	cmp	w0, #0x1
    42c4:	b.ne	42fc <XS_Time__Piece__strftime+0x298>  // b.any
    42c8:	add	x0, sp, #0x40
    42cc:	bl	1080 <localtime@plt>
    42d0:	mov	x1, x0
    42d4:	add	x0, sp, #0x90
    42d8:	ldp	x2, x3, [x1]
    42dc:	stp	x2, x3, [x0]
    42e0:	ldp	x2, x3, [x1, #16]
    42e4:	stp	x2, x3, [x0, #16]
    42e8:	ldp	x2, x3, [x1, #32]
    42ec:	stp	x2, x3, [x0, #32]
    42f0:	ldr	x1, [x1, #48]
    42f4:	str	x1, [x0, #48]
    42f8:	b	432c <XS_Time__Piece__strftime+0x2c8>
    42fc:	add	x0, sp, #0x40
    4300:	bl	10f0 <gmtime@plt>
    4304:	mov	x1, x0
    4308:	add	x0, sp, #0x90
    430c:	ldp	x2, x3, [x1]
    4310:	stp	x2, x3, [x0]
    4314:	ldp	x2, x3, [x1, #16]
    4318:	stp	x2, x3, [x0, #16]
    431c:	ldp	x2, x3, [x1, #32]
    4320:	stp	x2, x3, [x0, #32]
    4324:	ldr	x1, [x1, #48]
    4328:	str	x1, [x0, #48]
    432c:	add	x1, sp, #0x90
    4330:	add	x0, sp, #0xc8
    4334:	mov	x3, x1
    4338:	ldr	x2, [sp, #112]
    433c:	mov	x1, #0xa0                  	// #160
    4340:	bl	1050 <strftime@plt>
    4344:	str	x0, [sp, #120]
    4348:	ldr	x0, [sp, #120]
    434c:	cmp	x0, #0x0
    4350:	b.eq	4360 <XS_Time__Piece__strftime+0x2fc>  // b.none
    4354:	ldr	x0, [sp, #120]
    4358:	cmp	x0, #0x9f
    435c:	b.ls	437c <XS_Time__Piece__strftime+0x318>  // b.plast
    4360:	ldr	x0, [sp, #120]
    4364:	cmp	x0, #0x0
    4368:	b.ne	43bc <XS_Time__Piece__strftime+0x358>  // b.any
    436c:	ldr	x0, [sp, #112]
    4370:	ldrb	w0, [x0]
    4374:	cmp	w0, #0x0
    4378:	b.ne	43bc <XS_Time__Piece__strftime+0x358>  // b.any
    437c:	add	x0, sp, #0xc8
    4380:	ldr	x2, [sp, #120]
    4384:	mov	x1, x0
    4388:	ldr	x0, [sp, #40]
    438c:	bl	1150 <Perl_newSVpv@plt>
    4390:	mov	x2, x0
    4394:	ldr	x0, [sp, #40]
    4398:	ldr	x1, [x0, #24]
    439c:	ldrsw	x0, [sp, #56]
    43a0:	lsl	x0, x0, #3
    43a4:	add	x19, x1, x0
    43a8:	mov	x1, x2
    43ac:	ldr	x0, [sp, #40]
    43b0:	bl	11d0 <Perl_sv_2mortal@plt>
    43b4:	str	x0, [x19]
    43b8:	b	4514 <XS_Time__Piece__strftime+0x4b0>
    43bc:	ldr	x0, [sp, #112]
    43c0:	bl	1010 <strlen@plt>
    43c4:	str	x0, [sp, #128]
    43c8:	ldr	x0, [sp, #128]
    43cc:	add	x0, x0, #0xa0
    43d0:	str	x0, [sp, #72]
    43d4:	ldr	x0, [sp, #72]
    43d8:	bl	10e0 <Perl_safesysmalloc@plt>
    43dc:	str	x0, [sp, #80]
    43e0:	b	4474 <XS_Time__Piece__strftime+0x410>
    43e4:	add	x0, sp, #0x90
    43e8:	mov	x3, x0
    43ec:	ldr	x2, [sp, #112]
    43f0:	ldr	x1, [sp, #72]
    43f4:	ldr	x0, [sp, #80]
    43f8:	bl	1050 <strftime@plt>
    43fc:	str	x0, [sp, #88]
    4400:	ldr	x0, [sp, #88]
    4404:	cmp	x0, #0x0
    4408:	b.eq	441c <XS_Time__Piece__strftime+0x3b8>  // b.none
    440c:	ldr	x1, [sp, #88]
    4410:	ldr	x0, [sp, #72]
    4414:	cmp	x1, x0
    4418:	b.cc	4484 <XS_Time__Piece__strftime+0x420>  // b.lo, b.ul, b.last
    441c:	ldr	x1, [sp, #128]
    4420:	mov	x0, x1
    4424:	lsl	x0, x0, #1
    4428:	add	x0, x0, x1
    442c:	lsl	x0, x0, #3
    4430:	add	x0, x0, x1
    4434:	lsl	x0, x0, #2
    4438:	mov	x1, x0
    443c:	ldr	x0, [sp, #72]
    4440:	cmp	x0, x1
    4444:	b.ls	4458 <XS_Time__Piece__strftime+0x3f4>  // b.plast
    4448:	ldr	x0, [sp, #80]
    444c:	bl	11e0 <Perl_safesysfree@plt>
    4450:	str	xzr, [sp, #80]
    4454:	b	4488 <XS_Time__Piece__strftime+0x424>
    4458:	ldr	x0, [sp, #72]
    445c:	lsl	x0, x0, #1
    4460:	str	x0, [sp, #72]
    4464:	ldr	x1, [sp, #72]
    4468:	ldr	x0, [sp, #80]
    446c:	bl	11f0 <Perl_safesysrealloc@plt>
    4470:	str	x0, [sp, #80]
    4474:	ldr	x0, [sp, #80]
    4478:	cmp	x0, #0x0
    447c:	b.ne	43e4 <XS_Time__Piece__strftime+0x380>  // b.any
    4480:	b	4488 <XS_Time__Piece__strftime+0x424>
    4484:	nop
    4488:	ldr	x0, [sp, #80]
    448c:	cmp	x0, #0x0
    4490:	b.eq	44d8 <XS_Time__Piece__strftime+0x474>  // b.none
    4494:	ldr	x2, [sp, #88]
    4498:	ldr	x1, [sp, #80]
    449c:	ldr	x0, [sp, #40]
    44a0:	bl	1150 <Perl_newSVpv@plt>
    44a4:	mov	x2, x0
    44a8:	ldr	x0, [sp, #40]
    44ac:	ldr	x1, [x0, #24]
    44b0:	ldrsw	x0, [sp, #56]
    44b4:	lsl	x0, x0, #3
    44b8:	add	x19, x1, x0
    44bc:	mov	x1, x2
    44c0:	ldr	x0, [sp, #40]
    44c4:	bl	11d0 <Perl_sv_2mortal@plt>
    44c8:	str	x0, [x19]
    44cc:	ldr	x0, [sp, #80]
    44d0:	bl	11e0 <Perl_safesysfree@plt>
    44d4:	b	4514 <XS_Time__Piece__strftime+0x4b0>
    44d8:	add	x0, sp, #0xc8
    44dc:	ldr	x2, [sp, #120]
    44e0:	mov	x1, x0
    44e4:	ldr	x0, [sp, #40]
    44e8:	bl	1150 <Perl_newSVpv@plt>
    44ec:	mov	x2, x0
    44f0:	ldr	x0, [sp, #40]
    44f4:	ldr	x1, [x0, #24]
    44f8:	ldrsw	x0, [sp, #56]
    44fc:	lsl	x0, x0, #3
    4500:	add	x19, x1, x0
    4504:	mov	x1, x2
    4508:	ldr	x0, [sp, #40]
    450c:	bl	11d0 <Perl_sv_2mortal@plt>
    4510:	str	x0, [x19]
    4514:	mov	x0, #0x1                   	// #1
    4518:	str	x0, [sp, #136]
    451c:	ldr	x0, [sp, #40]
    4520:	ldr	x1, [x0, #24]
    4524:	ldrsw	x2, [sp, #56]
    4528:	ldr	x0, [sp, #136]
    452c:	add	x0, x2, x0
    4530:	lsl	x0, x0, #3
    4534:	sub	x0, x0, #0x8
    4538:	add	x1, x1, x0
    453c:	ldr	x0, [sp, #40]
    4540:	str	x1, [x0]
    4544:	nop
    4548:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    454c:	ldr	x0, [x0, #4048]
    4550:	ldr	x1, [sp, #360]
    4554:	ldr	x0, [x0]
    4558:	eor	x0, x1, x0
    455c:	cmp	x0, #0x0
    4560:	b.eq	4568 <XS_Time__Piece__strftime+0x504>  // b.none
    4564:	bl	1100 <__stack_chk_fail@plt>
    4568:	ldr	x19, [sp, #16]
    456c:	ldp	x29, x30, [sp], #368
    4570:	ret

0000000000004574 <XS_Time__Piece__tzset>:
    4574:	stp	x29, x30, [sp, #-64]!
    4578:	mov	x29, sp
    457c:	str	x0, [sp, #24]
    4580:	str	x1, [sp, #16]
    4584:	ldr	x0, [sp, #24]
    4588:	ldr	x0, [x0]
    458c:	str	x0, [sp, #48]
    4590:	ldr	x0, [sp, #24]
    4594:	bl	1420 <S_POPMARK>
    4598:	str	w0, [sp, #40]
    459c:	ldr	x0, [sp, #24]
    45a0:	ldr	x1, [x0, #24]
    45a4:	ldr	w0, [sp, #40]
    45a8:	add	w2, w0, #0x1
    45ac:	str	w2, [sp, #40]
    45b0:	sxtw	x0, w0
    45b4:	lsl	x0, x0, #3
    45b8:	add	x0, x1, x0
    45bc:	str	x0, [sp, #56]
    45c0:	ldr	x1, [sp, #48]
    45c4:	ldr	x0, [sp, #56]
    45c8:	sub	x0, x1, x0
    45cc:	asr	x0, x0, #3
    45d0:	str	w0, [sp, #44]
    45d4:	ldr	w0, [sp, #44]
    45d8:	cmp	w0, #0x0
    45dc:	b.eq	45f0 <XS_Time__Piece__tzset+0x7c>  // b.none
    45e0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    45e4:	add	x1, x0, #0xb00
    45e8:	ldr	x0, [sp, #16]
    45ec:	bl	1120 <Perl_croak_xs_usage@plt>
    45f0:	ldrsw	x0, [sp, #44]
    45f4:	lsl	x0, x0, #3
    45f8:	neg	x0, x0
    45fc:	ldr	x1, [sp, #48]
    4600:	add	x0, x1, x0
    4604:	str	x0, [sp, #48]
    4608:	ldr	x0, [sp, #24]
    460c:	ldr	x1, [sp, #48]
    4610:	str	x1, [x0]
    4614:	ldr	x0, [sp, #24]
    4618:	bl	1464 <my_tzset>
    461c:	nop
    4620:	ldp	x29, x30, [sp], #64
    4624:	ret

0000000000004628 <XS_Time__Piece__strptime>:
    4628:	stp	x29, x30, [sp, #-176]!
    462c:	mov	x29, sp
    4630:	str	x0, [sp, #24]
    4634:	str	x1, [sp, #16]
    4638:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    463c:	ldr	x0, [x0, #4048]
    4640:	ldr	x1, [x0]
    4644:	str	x1, [sp, #168]
    4648:	mov	x1, #0x0                   	// #0
    464c:	ldr	x0, [sp, #24]
    4650:	ldr	x0, [x0]
    4654:	str	x0, [sp, #56]
    4658:	ldr	x0, [sp, #24]
    465c:	bl	1420 <S_POPMARK>
    4660:	str	w0, [sp, #48]
    4664:	ldr	x0, [sp, #24]
    4668:	ldr	x1, [x0, #24]
    466c:	ldr	w0, [sp, #48]
    4670:	add	w2, w0, #0x1
    4674:	str	w2, [sp, #48]
    4678:	sxtw	x0, w0
    467c:	lsl	x0, x0, #3
    4680:	add	x0, x1, x0
    4684:	str	x0, [sp, #64]
    4688:	ldr	x1, [sp, #56]
    468c:	ldr	x0, [sp, #64]
    4690:	sub	x0, x1, x0
    4694:	asr	x0, x0, #3
    4698:	str	w0, [sp, #52]
    469c:	ldr	w0, [sp, #52]
    46a0:	cmp	w0, #0x4
    46a4:	b.eq	46b8 <XS_Time__Piece__strptime+0x90>  // b.none
    46a8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    46ac:	add	x1, x0, #0xb08
    46b0:	ldr	x0, [sp, #16]
    46b4:	bl	1120 <Perl_croak_xs_usage@plt>
    46b8:	ldrsw	x0, [sp, #52]
    46bc:	lsl	x0, x0, #3
    46c0:	neg	x0, x0
    46c4:	ldr	x1, [sp, #56]
    46c8:	add	x0, x1, x0
    46cc:	str	x0, [sp, #56]
    46d0:	ldr	x0, [sp, #24]
    46d4:	ldr	x1, [x0, #24]
    46d8:	ldrsw	x0, [sp, #48]
    46dc:	lsl	x0, x0, #3
    46e0:	add	x0, x1, x0
    46e4:	ldr	x0, [x0]
    46e8:	ldr	w1, [x0, #12]
    46ec:	mov	w0, #0x400                 	// #1024
    46f0:	movk	w0, #0x20, lsl #16
    46f4:	and	w0, w1, w0
    46f8:	cmp	w0, #0x400
    46fc:	b.ne	4720 <XS_Time__Piece__strptime+0xf8>  // b.any
    4700:	ldr	x0, [sp, #24]
    4704:	ldr	x1, [x0, #24]
    4708:	ldrsw	x0, [sp, #48]
    470c:	lsl	x0, x0, #3
    4710:	add	x0, x1, x0
    4714:	ldr	x0, [x0]
    4718:	ldr	x0, [x0, #16]
    471c:	b	474c <XS_Time__Piece__strptime+0x124>
    4720:	ldr	x0, [sp, #24]
    4724:	ldr	x1, [x0, #24]
    4728:	ldrsw	x0, [sp, #48]
    472c:	lsl	x0, x0, #3
    4730:	add	x0, x1, x0
    4734:	ldr	x0, [x0]
    4738:	mov	w3, #0x2                   	// #2
    473c:	mov	x2, #0x0                   	// #0
    4740:	mov	x1, x0
    4744:	ldr	x0, [sp, #24]
    4748:	bl	10c0 <Perl_sv_2pv_flags@plt>
    474c:	str	x0, [sp, #72]
    4750:	ldr	x0, [sp, #24]
    4754:	ldr	x1, [x0, #24]
    4758:	ldrsw	x0, [sp, #48]
    475c:	add	x0, x0, #0x1
    4760:	lsl	x0, x0, #3
    4764:	add	x0, x1, x0
    4768:	ldr	x0, [x0]
    476c:	ldr	w1, [x0, #12]
    4770:	mov	w0, #0x400                 	// #1024
    4774:	movk	w0, #0x20, lsl #16
    4778:	and	w0, w1, w0
    477c:	cmp	w0, #0x400
    4780:	b.ne	47a8 <XS_Time__Piece__strptime+0x180>  // b.any
    4784:	ldr	x0, [sp, #24]
    4788:	ldr	x1, [x0, #24]
    478c:	ldrsw	x0, [sp, #48]
    4790:	add	x0, x0, #0x1
    4794:	lsl	x0, x0, #3
    4798:	add	x0, x1, x0
    479c:	ldr	x0, [x0]
    47a0:	ldr	x0, [x0, #16]
    47a4:	b	47d8 <XS_Time__Piece__strptime+0x1b0>
    47a8:	ldr	x0, [sp, #24]
    47ac:	ldr	x1, [x0, #24]
    47b0:	ldrsw	x0, [sp, #48]
    47b4:	add	x0, x0, #0x1
    47b8:	lsl	x0, x0, #3
    47bc:	add	x0, x1, x0
    47c0:	ldr	x0, [x0]
    47c4:	mov	w3, #0x2                   	// #2
    47c8:	mov	x2, #0x0                   	// #0
    47cc:	mov	x1, x0
    47d0:	ldr	x0, [sp, #24]
    47d4:	bl	10c0 <Perl_sv_2pv_flags@plt>
    47d8:	str	x0, [sp, #80]
    47dc:	ldr	x0, [sp, #24]
    47e0:	ldr	x1, [x0, #24]
    47e4:	ldrsw	x0, [sp, #48]
    47e8:	add	x0, x0, #0x2
    47ec:	lsl	x0, x0, #3
    47f0:	add	x0, x1, x0
    47f4:	ldr	x0, [x0]
    47f8:	ldr	w1, [x0, #12]
    47fc:	mov	w0, #0x100                 	// #256
    4800:	movk	w0, #0x20, lsl #16
    4804:	and	w0, w1, w0
    4808:	cmp	w0, #0x100
    480c:	b.ne	4838 <XS_Time__Piece__strptime+0x210>  // b.any
    4810:	ldr	x0, [sp, #24]
    4814:	ldr	x1, [x0, #24]
    4818:	ldrsw	x0, [sp, #48]
    481c:	add	x0, x0, #0x2
    4820:	lsl	x0, x0, #3
    4824:	add	x0, x1, x0
    4828:	ldr	x0, [x0]
    482c:	ldr	x0, [x0]
    4830:	ldr	x0, [x0, #32]
    4834:	b	4864 <XS_Time__Piece__strptime+0x23c>
    4838:	ldr	x0, [sp, #24]
    483c:	ldr	x1, [x0, #24]
    4840:	ldrsw	x0, [sp, #48]
    4844:	add	x0, x0, #0x2
    4848:	lsl	x0, x0, #3
    484c:	add	x0, x1, x0
    4850:	ldr	x0, [x0]
    4854:	mov	w2, #0x2                   	// #2
    4858:	mov	x1, x0
    485c:	ldr	x0, [sp, #24]
    4860:	bl	1000 <Perl_sv_2iv_flags@plt>
    4864:	str	w0, [sp, #44]
    4868:	ldr	x0, [sp, #24]
    486c:	ldr	x1, [x0, #24]
    4870:	ldrsw	x0, [sp, #48]
    4874:	add	x0, x0, #0x3
    4878:	lsl	x0, x0, #3
    487c:	add	x0, x1, x0
    4880:	ldr	x0, [x0]
    4884:	str	x0, [sp, #88]
    4888:	add	x0, sp, #0x70
    488c:	mov	x2, #0x38                  	// #56
    4890:	mov	w1, #0x0                   	// #0
    4894:	bl	10b0 <memset@plt>
    4898:	mov	w0, #0x1                   	// #1
    489c:	str	w0, [sp, #124]
    48a0:	mov	w0, #0x46                  	// #70
    48a4:	str	w0, [sp, #132]
    48a8:	mov	w0, #0x4                   	// #4
    48ac:	str	w0, [sp, #136]
    48b0:	mov	w0, #0xffffffff            	// #-1
    48b4:	str	w0, [sp, #144]
    48b8:	ldr	x0, [sp, #88]
    48bc:	ldr	x0, [x0, #16]
    48c0:	ldr	w0, [x0, #12]
    48c4:	and	w0, w0, #0xff
    48c8:	cmp	w0, #0xc
    48cc:	b.ne	491c <XS_Time__Piece__strptime+0x2f4>  // b.any
    48d0:	ldr	x0, [sp, #88]
    48d4:	ldr	x0, [x0, #16]
    48d8:	str	x0, [sp, #96]
    48dc:	ldr	x1, [sp, #96]
    48e0:	ldr	x0, [sp, #24]
    48e4:	bl	3908 <_populate_C_time_locale>
    48e8:	add	x1, sp, #0x2c
    48ec:	add	x0, sp, #0x70
    48f0:	mov	x4, x1
    48f4:	mov	x3, x0
    48f8:	ldr	x2, [sp, #80]
    48fc:	ldr	x1, [sp, #72]
    4900:	ldr	x0, [sp, #24]
    4904:	bl	1ca8 <_strptime>
    4908:	str	x0, [sp, #104]
    490c:	ldr	x0, [sp, #104]
    4910:	cmp	x0, #0x0
    4914:	b.ne	4934 <XS_Time__Piece__strptime+0x30c>  // b.any
    4918:	b	4928 <XS_Time__Piece__strptime+0x300>
    491c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    4920:	add	x0, x0, #0xb30
    4924:	bl	1190 <Perl_croak_nocontext@plt>
    4928:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    492c:	add	x0, x0, #0xb60
    4930:	bl	1190 <Perl_croak_nocontext@plt>
    4934:	ldr	x0, [sp, #104]
    4938:	ldrb	w0, [x0]
    493c:	cmp	w0, #0x0
    4940:	b.eq	4960 <XS_Time__Piece__strptime+0x338>  // b.none
    4944:	ldr	x1, [sp, #104]
    4948:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    494c:	add	x0, x0, #0xb78
    4950:	bl	1070 <Perl_warn_nocontext@plt>
    4954:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    4958:	add	x0, x0, #0xba8
    495c:	bl	1070 <Perl_warn_nocontext@plt>
    4960:	add	x0, sp, #0x70
    4964:	mov	x2, x0
    4968:	ldr	x1, [sp, #56]
    496c:	ldr	x0, [sp, #24]
    4970:	bl	37f8 <return_11part_tm>
    4974:	nop
    4978:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    497c:	ldr	x0, [x0, #4048]
    4980:	ldr	x1, [sp, #168]
    4984:	ldr	x0, [x0]
    4988:	eor	x0, x1, x0
    498c:	cmp	x0, #0x0
    4990:	b.eq	4998 <XS_Time__Piece__strptime+0x370>  // b.none
    4994:	bl	1100 <__stack_chk_fail@plt>
    4998:	ldp	x29, x30, [sp], #176
    499c:	ret

00000000000049a0 <XS_Time__Piece__mini_mktime>:
    49a0:	stp	x29, x30, [sp, #-160]!
    49a4:	mov	x29, sp
    49a8:	str	x0, [sp, #24]
    49ac:	str	x1, [sp, #16]
    49b0:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    49b4:	ldr	x0, [x0, #4048]
    49b8:	ldr	x1, [x0]
    49bc:	str	x1, [sp, #152]
    49c0:	mov	x1, #0x0                   	// #0
    49c4:	ldr	x0, [sp, #24]
    49c8:	ldr	x0, [x0]
    49cc:	str	x0, [sp, #80]
    49d0:	ldr	x0, [sp, #24]
    49d4:	bl	1420 <S_POPMARK>
    49d8:	str	w0, [sp, #40]
    49dc:	ldr	x0, [sp, #24]
    49e0:	ldr	x1, [x0, #24]
    49e4:	ldr	w0, [sp, #40]
    49e8:	add	w2, w0, #0x1
    49ec:	str	w2, [sp, #40]
    49f0:	sxtw	x0, w0
    49f4:	lsl	x0, x0, #3
    49f8:	add	x0, x1, x0
    49fc:	str	x0, [sp, #88]
    4a00:	ldr	x1, [sp, #80]
    4a04:	ldr	x0, [sp, #88]
    4a08:	sub	x0, x1, x0
    4a0c:	asr	x0, x0, #3
    4a10:	str	w0, [sp, #44]
    4a14:	ldr	w0, [sp, #44]
    4a18:	cmp	w0, #0x6
    4a1c:	b.eq	4a30 <XS_Time__Piece__mini_mktime+0x90>  // b.none
    4a20:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    4a24:	add	x1, x0, #0xbe0
    4a28:	ldr	x0, [sp, #16]
    4a2c:	bl	1120 <Perl_croak_xs_usage@plt>
    4a30:	ldrsw	x0, [sp, #44]
    4a34:	lsl	x0, x0, #3
    4a38:	neg	x0, x0
    4a3c:	ldr	x1, [sp, #80]
    4a40:	add	x0, x1, x0
    4a44:	str	x0, [sp, #80]
    4a48:	ldr	x0, [sp, #24]
    4a4c:	ldr	x1, [x0, #24]
    4a50:	ldrsw	x0, [sp, #40]
    4a54:	lsl	x0, x0, #3
    4a58:	add	x0, x1, x0
    4a5c:	ldr	x0, [x0]
    4a60:	ldr	w1, [x0, #12]
    4a64:	mov	w0, #0x100                 	// #256
    4a68:	movk	w0, #0x20, lsl #16
    4a6c:	and	w0, w1, w0
    4a70:	cmp	w0, #0x100
    4a74:	b.ne	4a9c <XS_Time__Piece__mini_mktime+0xfc>  // b.any
    4a78:	ldr	x0, [sp, #24]
    4a7c:	ldr	x1, [x0, #24]
    4a80:	ldrsw	x0, [sp, #40]
    4a84:	lsl	x0, x0, #3
    4a88:	add	x0, x1, x0
    4a8c:	ldr	x0, [x0]
    4a90:	ldr	x0, [x0]
    4a94:	ldr	x0, [x0, #32]
    4a98:	b	4ac4 <XS_Time__Piece__mini_mktime+0x124>
    4a9c:	ldr	x0, [sp, #24]
    4aa0:	ldr	x1, [x0, #24]
    4aa4:	ldrsw	x0, [sp, #40]
    4aa8:	lsl	x0, x0, #3
    4aac:	add	x0, x1, x0
    4ab0:	ldr	x0, [x0]
    4ab4:	mov	w2, #0x2                   	// #2
    4ab8:	mov	x1, x0
    4abc:	ldr	x0, [sp, #24]
    4ac0:	bl	1000 <Perl_sv_2iv_flags@plt>
    4ac4:	str	w0, [sp, #48]
    4ac8:	ldr	x0, [sp, #24]
    4acc:	ldr	x1, [x0, #24]
    4ad0:	ldrsw	x0, [sp, #40]
    4ad4:	add	x0, x0, #0x1
    4ad8:	lsl	x0, x0, #3
    4adc:	add	x0, x1, x0
    4ae0:	ldr	x0, [x0]
    4ae4:	ldr	w1, [x0, #12]
    4ae8:	mov	w0, #0x100                 	// #256
    4aec:	movk	w0, #0x20, lsl #16
    4af0:	and	w0, w1, w0
    4af4:	cmp	w0, #0x100
    4af8:	b.ne	4b24 <XS_Time__Piece__mini_mktime+0x184>  // b.any
    4afc:	ldr	x0, [sp, #24]
    4b00:	ldr	x1, [x0, #24]
    4b04:	ldrsw	x0, [sp, #40]
    4b08:	add	x0, x0, #0x1
    4b0c:	lsl	x0, x0, #3
    4b10:	add	x0, x1, x0
    4b14:	ldr	x0, [x0]
    4b18:	ldr	x0, [x0]
    4b1c:	ldr	x0, [x0, #32]
    4b20:	b	4b50 <XS_Time__Piece__mini_mktime+0x1b0>
    4b24:	ldr	x0, [sp, #24]
    4b28:	ldr	x1, [x0, #24]
    4b2c:	ldrsw	x0, [sp, #40]
    4b30:	add	x0, x0, #0x1
    4b34:	lsl	x0, x0, #3
    4b38:	add	x0, x1, x0
    4b3c:	ldr	x0, [x0]
    4b40:	mov	w2, #0x2                   	// #2
    4b44:	mov	x1, x0
    4b48:	ldr	x0, [sp, #24]
    4b4c:	bl	1000 <Perl_sv_2iv_flags@plt>
    4b50:	str	w0, [sp, #52]
    4b54:	ldr	x0, [sp, #24]
    4b58:	ldr	x1, [x0, #24]
    4b5c:	ldrsw	x0, [sp, #40]
    4b60:	add	x0, x0, #0x2
    4b64:	lsl	x0, x0, #3
    4b68:	add	x0, x1, x0
    4b6c:	ldr	x0, [x0]
    4b70:	ldr	w1, [x0, #12]
    4b74:	mov	w0, #0x100                 	// #256
    4b78:	movk	w0, #0x20, lsl #16
    4b7c:	and	w0, w1, w0
    4b80:	cmp	w0, #0x100
    4b84:	b.ne	4bb0 <XS_Time__Piece__mini_mktime+0x210>  // b.any
    4b88:	ldr	x0, [sp, #24]
    4b8c:	ldr	x1, [x0, #24]
    4b90:	ldrsw	x0, [sp, #40]
    4b94:	add	x0, x0, #0x2
    4b98:	lsl	x0, x0, #3
    4b9c:	add	x0, x1, x0
    4ba0:	ldr	x0, [x0]
    4ba4:	ldr	x0, [x0]
    4ba8:	ldr	x0, [x0, #32]
    4bac:	b	4bdc <XS_Time__Piece__mini_mktime+0x23c>
    4bb0:	ldr	x0, [sp, #24]
    4bb4:	ldr	x1, [x0, #24]
    4bb8:	ldrsw	x0, [sp, #40]
    4bbc:	add	x0, x0, #0x2
    4bc0:	lsl	x0, x0, #3
    4bc4:	add	x0, x1, x0
    4bc8:	ldr	x0, [x0]
    4bcc:	mov	w2, #0x2                   	// #2
    4bd0:	mov	x1, x0
    4bd4:	ldr	x0, [sp, #24]
    4bd8:	bl	1000 <Perl_sv_2iv_flags@plt>
    4bdc:	str	w0, [sp, #56]
    4be0:	ldr	x0, [sp, #24]
    4be4:	ldr	x1, [x0, #24]
    4be8:	ldrsw	x0, [sp, #40]
    4bec:	add	x0, x0, #0x3
    4bf0:	lsl	x0, x0, #3
    4bf4:	add	x0, x1, x0
    4bf8:	ldr	x0, [x0]
    4bfc:	ldr	w1, [x0, #12]
    4c00:	mov	w0, #0x100                 	// #256
    4c04:	movk	w0, #0x20, lsl #16
    4c08:	and	w0, w1, w0
    4c0c:	cmp	w0, #0x100
    4c10:	b.ne	4c3c <XS_Time__Piece__mini_mktime+0x29c>  // b.any
    4c14:	ldr	x0, [sp, #24]
    4c18:	ldr	x1, [x0, #24]
    4c1c:	ldrsw	x0, [sp, #40]
    4c20:	add	x0, x0, #0x3
    4c24:	lsl	x0, x0, #3
    4c28:	add	x0, x1, x0
    4c2c:	ldr	x0, [x0]
    4c30:	ldr	x0, [x0]
    4c34:	ldr	x0, [x0, #32]
    4c38:	b	4c68 <XS_Time__Piece__mini_mktime+0x2c8>
    4c3c:	ldr	x0, [sp, #24]
    4c40:	ldr	x1, [x0, #24]
    4c44:	ldrsw	x0, [sp, #40]
    4c48:	add	x0, x0, #0x3
    4c4c:	lsl	x0, x0, #3
    4c50:	add	x0, x1, x0
    4c54:	ldr	x0, [x0]
    4c58:	mov	w2, #0x2                   	// #2
    4c5c:	mov	x1, x0
    4c60:	ldr	x0, [sp, #24]
    4c64:	bl	1000 <Perl_sv_2iv_flags@plt>
    4c68:	str	w0, [sp, #60]
    4c6c:	ldr	x0, [sp, #24]
    4c70:	ldr	x1, [x0, #24]
    4c74:	ldrsw	x0, [sp, #40]
    4c78:	add	x0, x0, #0x4
    4c7c:	lsl	x0, x0, #3
    4c80:	add	x0, x1, x0
    4c84:	ldr	x0, [x0]
    4c88:	ldr	w1, [x0, #12]
    4c8c:	mov	w0, #0x100                 	// #256
    4c90:	movk	w0, #0x20, lsl #16
    4c94:	and	w0, w1, w0
    4c98:	cmp	w0, #0x100
    4c9c:	b.ne	4cc8 <XS_Time__Piece__mini_mktime+0x328>  // b.any
    4ca0:	ldr	x0, [sp, #24]
    4ca4:	ldr	x1, [x0, #24]
    4ca8:	ldrsw	x0, [sp, #40]
    4cac:	add	x0, x0, #0x4
    4cb0:	lsl	x0, x0, #3
    4cb4:	add	x0, x1, x0
    4cb8:	ldr	x0, [x0]
    4cbc:	ldr	x0, [x0]
    4cc0:	ldr	x0, [x0, #32]
    4cc4:	b	4cf4 <XS_Time__Piece__mini_mktime+0x354>
    4cc8:	ldr	x0, [sp, #24]
    4ccc:	ldr	x1, [x0, #24]
    4cd0:	ldrsw	x0, [sp, #40]
    4cd4:	add	x0, x0, #0x4
    4cd8:	lsl	x0, x0, #3
    4cdc:	add	x0, x1, x0
    4ce0:	ldr	x0, [x0]
    4ce4:	mov	w2, #0x2                   	// #2
    4ce8:	mov	x1, x0
    4cec:	ldr	x0, [sp, #24]
    4cf0:	bl	1000 <Perl_sv_2iv_flags@plt>
    4cf4:	str	w0, [sp, #64]
    4cf8:	ldr	x0, [sp, #24]
    4cfc:	ldr	x1, [x0, #24]
    4d00:	ldrsw	x0, [sp, #40]
    4d04:	add	x0, x0, #0x5
    4d08:	lsl	x0, x0, #3
    4d0c:	add	x0, x1, x0
    4d10:	ldr	x0, [x0]
    4d14:	ldr	w1, [x0, #12]
    4d18:	mov	w0, #0x100                 	// #256
    4d1c:	movk	w0, #0x20, lsl #16
    4d20:	and	w0, w1, w0
    4d24:	cmp	w0, #0x100
    4d28:	b.ne	4d54 <XS_Time__Piece__mini_mktime+0x3b4>  // b.any
    4d2c:	ldr	x0, [sp, #24]
    4d30:	ldr	x1, [x0, #24]
    4d34:	ldrsw	x0, [sp, #40]
    4d38:	add	x0, x0, #0x5
    4d3c:	lsl	x0, x0, #3
    4d40:	add	x0, x1, x0
    4d44:	ldr	x0, [x0]
    4d48:	ldr	x0, [x0]
    4d4c:	ldr	x0, [x0, #32]
    4d50:	b	4d80 <XS_Time__Piece__mini_mktime+0x3e0>
    4d54:	ldr	x0, [sp, #24]
    4d58:	ldr	x1, [x0, #24]
    4d5c:	ldrsw	x0, [sp, #40]
    4d60:	add	x0, x0, #0x5
    4d64:	lsl	x0, x0, #3
    4d68:	add	x0, x1, x0
    4d6c:	ldr	x0, [x0]
    4d70:	mov	w2, #0x2                   	// #2
    4d74:	mov	x1, x0
    4d78:	ldr	x0, [sp, #24]
    4d7c:	bl	1000 <Perl_sv_2iv_flags@plt>
    4d80:	str	w0, [sp, #68]
    4d84:	str	xzr, [sp, #72]
    4d88:	add	x0, sp, #0x48
    4d8c:	bl	10f0 <gmtime@plt>
    4d90:	mov	x1, x0
    4d94:	add	x0, sp, #0x60
    4d98:	ldp	x2, x3, [x1]
    4d9c:	stp	x2, x3, [x0]
    4da0:	ldp	x2, x3, [x1, #16]
    4da4:	stp	x2, x3, [x0, #16]
    4da8:	ldp	x2, x3, [x1, #32]
    4dac:	stp	x2, x3, [x0, #32]
    4db0:	ldr	x1, [x1, #48]
    4db4:	str	x1, [x0, #48]
    4db8:	ldr	w0, [sp, #48]
    4dbc:	str	w0, [sp, #96]
    4dc0:	ldr	w0, [sp, #52]
    4dc4:	str	w0, [sp, #100]
    4dc8:	ldr	w0, [sp, #56]
    4dcc:	str	w0, [sp, #104]
    4dd0:	ldr	w0, [sp, #60]
    4dd4:	str	w0, [sp, #108]
    4dd8:	ldr	w0, [sp, #64]
    4ddc:	str	w0, [sp, #112]
    4de0:	ldr	w0, [sp, #68]
    4de4:	str	w0, [sp, #116]
    4de8:	add	x0, sp, #0x60
    4dec:	mov	x2, x0
    4df0:	ldr	x1, [sp, #80]
    4df4:	ldr	x0, [sp, #24]
    4df8:	bl	37f8 <return_11part_tm>
    4dfc:	nop
    4e00:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    4e04:	ldr	x0, [x0, #4048]
    4e08:	ldr	x1, [sp, #152]
    4e0c:	ldr	x0, [x0]
    4e10:	eor	x0, x1, x0
    4e14:	cmp	x0, #0x0
    4e18:	b.eq	4e20 <XS_Time__Piece__mini_mktime+0x480>  // b.none
    4e1c:	bl	1100 <__stack_chk_fail@plt>
    4e20:	ldp	x29, x30, [sp], #160
    4e24:	ret

0000000000004e28 <XS_Time__Piece__crt_localtime>:
    4e28:	stp	x29, x30, [sp, #-160]!
    4e2c:	mov	x29, sp
    4e30:	str	x0, [sp, #24]
    4e34:	str	x1, [sp, #16]
    4e38:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    4e3c:	ldr	x0, [x0, #4048]
    4e40:	ldr	x1, [x0]
    4e44:	str	x1, [sp, #152]
    4e48:	mov	x1, #0x0                   	// #0
    4e4c:	ldr	x0, [sp, #24]
    4e50:	ldr	x0, [x0]
    4e54:	str	x0, [sp, #64]
    4e58:	ldr	x0, [sp, #24]
    4e5c:	bl	1420 <S_POPMARK>
    4e60:	str	w0, [sp, #44]
    4e64:	ldr	x0, [sp, #24]
    4e68:	ldr	x1, [x0, #24]
    4e6c:	ldr	w0, [sp, #44]
    4e70:	add	w2, w0, #0x1
    4e74:	str	w2, [sp, #44]
    4e78:	sxtw	x0, w0
    4e7c:	lsl	x0, x0, #3
    4e80:	add	x0, x1, x0
    4e84:	str	x0, [sp, #72]
    4e88:	ldr	x1, [sp, #64]
    4e8c:	ldr	x0, [sp, #72]
    4e90:	sub	x0, x1, x0
    4e94:	asr	x0, x0, #3
    4e98:	str	w0, [sp, #48]
    4e9c:	ldr	x0, [sp, #16]
    4ea0:	ldr	x0, [x0]
    4ea4:	str	x0, [sp, #80]
    4ea8:	ldr	x0, [sp, #80]
    4eac:	ldr	w0, [x0, #40]
    4eb0:	str	w0, [sp, #52]
    4eb4:	ldr	w0, [sp, #48]
    4eb8:	cmp	w0, #0x1
    4ebc:	b.eq	4ed0 <XS_Time__Piece__crt_localtime+0xa8>  // b.none
    4ec0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    4ec4:	add	x1, x0, #0xc00
    4ec8:	ldr	x0, [sp, #16]
    4ecc:	bl	1120 <Perl_croak_xs_usage@plt>
    4ed0:	ldrsw	x0, [sp, #48]
    4ed4:	lsl	x0, x0, #3
    4ed8:	neg	x0, x0
    4edc:	ldr	x1, [sp, #64]
    4ee0:	add	x0, x1, x0
    4ee4:	str	x0, [sp, #64]
    4ee8:	ldr	x0, [sp, #24]
    4eec:	ldr	x1, [x0, #24]
    4ef0:	ldrsw	x0, [sp, #44]
    4ef4:	lsl	x0, x0, #3
    4ef8:	add	x0, x1, x0
    4efc:	ldr	x0, [x0]
    4f00:	ldr	w1, [x0, #12]
    4f04:	mov	w0, #0x200                 	// #512
    4f08:	movk	w0, #0x20, lsl #16
    4f0c:	and	w0, w1, w0
    4f10:	cmp	w0, #0x200
    4f14:	b.ne	4f40 <XS_Time__Piece__crt_localtime+0x118>  // b.any
    4f18:	ldr	x0, [sp, #24]
    4f1c:	ldr	x1, [x0, #24]
    4f20:	ldrsw	x0, [sp, #44]
    4f24:	lsl	x0, x0, #3
    4f28:	add	x0, x1, x0
    4f2c:	ldr	x0, [x0]
    4f30:	ldr	x0, [x0]
    4f34:	ldr	d0, [x0, #40]
    4f38:	fcvtzs	d0, d0
    4f3c:	b	4f6c <XS_Time__Piece__crt_localtime+0x144>
    4f40:	ldr	x0, [sp, #24]
    4f44:	ldr	x1, [x0, #24]
    4f48:	ldrsw	x0, [sp, #44]
    4f4c:	lsl	x0, x0, #3
    4f50:	add	x0, x1, x0
    4f54:	ldr	x0, [x0]
    4f58:	mov	w2, #0x2                   	// #2
    4f5c:	mov	x1, x0
    4f60:	ldr	x0, [sp, #24]
    4f64:	bl	1130 <Perl_sv_2nv_flags@plt>
    4f68:	fcvtzs	d0, d0
    4f6c:	str	d0, [sp, #56]
    4f70:	ldr	w0, [sp, #52]
    4f74:	cmp	w0, #0x0
    4f78:	b.eq	4fb0 <XS_Time__Piece__crt_localtime+0x188>  // b.none
    4f7c:	add	x0, sp, #0x38
    4f80:	bl	10f0 <gmtime@plt>
    4f84:	mov	x1, x0
    4f88:	add	x0, sp, #0x60
    4f8c:	ldp	x2, x3, [x1]
    4f90:	stp	x2, x3, [x0]
    4f94:	ldp	x2, x3, [x1, #16]
    4f98:	stp	x2, x3, [x0, #16]
    4f9c:	ldp	x2, x3, [x1, #32]
    4fa0:	stp	x2, x3, [x0, #32]
    4fa4:	ldr	x1, [x1, #48]
    4fa8:	str	x1, [x0, #48]
    4fac:	b	4fe0 <XS_Time__Piece__crt_localtime+0x1b8>
    4fb0:	add	x0, sp, #0x38
    4fb4:	bl	1080 <localtime@plt>
    4fb8:	mov	x1, x0
    4fbc:	add	x0, sp, #0x60
    4fc0:	ldp	x2, x3, [x1]
    4fc4:	stp	x2, x3, [x0]
    4fc8:	ldp	x2, x3, [x1, #16]
    4fcc:	stp	x2, x3, [x0, #16]
    4fd0:	ldp	x2, x3, [x1, #32]
    4fd4:	stp	x2, x3, [x0, #32]
    4fd8:	ldr	x1, [x1, #48]
    4fdc:	str	x1, [x0, #48]
    4fe0:	ldr	x0, [sp, #24]
    4fe4:	ldr	x1, [x0, #32]
    4fe8:	ldr	x0, [sp, #64]
    4fec:	sub	x0, x1, x0
    4ff0:	cmp	x0, #0x48
    4ff4:	cset	w0, le
    4ff8:	and	w0, w0, #0xff
    4ffc:	and	x0, x0, #0xff
    5000:	cmp	x0, #0x0
    5004:	b.eq	5020 <XS_Time__Piece__crt_localtime+0x1f8>  // b.none
    5008:	mov	x3, #0xa                   	// #10
    500c:	ldr	x2, [sp, #64]
    5010:	ldr	x1, [sp, #64]
    5014:	ldr	x0, [sp, #24]
    5018:	bl	1030 <Perl_stack_grow@plt>
    501c:	str	x0, [sp, #64]
    5020:	add	x0, sp, #0x60
    5024:	mov	x2, x0
    5028:	ldr	x1, [sp, #64]
    502c:	ldr	x0, [sp, #24]
    5030:	bl	364c <push_common_tm>
    5034:	str	x0, [sp, #64]
    5038:	ldr	w0, [sp, #128]
    503c:	sxtw	x1, w0
    5040:	ldr	x0, [sp, #64]
    5044:	add	x0, x0, #0x8
    5048:	str	x0, [sp, #64]
    504c:	ldr	x0, [sp, #24]
    5050:	bl	1260 <Perl_newSViv@plt>
    5054:	mov	x1, x0
    5058:	ldr	x0, [sp, #64]
    505c:	str	x1, [x0]
    5060:	ldr	x0, [sp, #24]
    5064:	ldr	x1, [sp, #64]
    5068:	str	x1, [x0]
    506c:	ldr	x0, [sp, #64]
    5070:	str	x0, [sp, #88]
    5074:	ldr	x0, [sp, #64]
    5078:	sub	x0, x0, #0x48
    507c:	str	x0, [sp, #64]
    5080:	ldr	x0, [sp, #64]
    5084:	add	x1, x0, #0x8
    5088:	str	x1, [sp, #64]
    508c:	ldr	x0, [x0]
    5090:	mov	x1, x0
    5094:	ldr	x0, [sp, #24]
    5098:	bl	11d0 <Perl_sv_2mortal@plt>
    509c:	ldr	x1, [sp, #64]
    50a0:	ldr	x0, [sp, #88]
    50a4:	cmp	x1, x0
    50a8:	b.ls	5080 <XS_Time__Piece__crt_localtime+0x258>  // b.plast
    50ac:	nop
    50b0:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    50b4:	ldr	x0, [x0, #4048]
    50b8:	ldr	x1, [sp, #152]
    50bc:	ldr	x0, [x0]
    50c0:	eor	x0, x1, x0
    50c4:	cmp	x0, #0x0
    50c8:	b.eq	50d0 <XS_Time__Piece__crt_localtime+0x2a8>  // b.none
    50cc:	bl	1100 <__stack_chk_fail@plt>
    50d0:	ldp	x29, x30, [sp], #160
    50d4:	ret

00000000000050d8 <XS_Time__Piece__get_localization>:
    50d8:	stp	x29, x30, [sp, #-416]!
    50dc:	mov	x29, sp
    50e0:	str	x0, [sp, #24]
    50e4:	str	x1, [sp, #16]
    50e8:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    50ec:	ldr	x0, [x0, #4048]
    50f0:	ldr	x1, [x0]
    50f4:	str	x1, [sp, #408]
    50f8:	mov	x1, #0x0                   	// #0
    50fc:	ldr	x0, [sp, #24]
    5100:	ldr	x0, [x0]
    5104:	str	x0, [sp, #64]
    5108:	ldr	x0, [sp, #24]
    510c:	bl	1420 <S_POPMARK>
    5110:	str	w0, [sp, #40]
    5114:	ldr	x0, [sp, #24]
    5118:	ldr	x1, [x0, #24]
    511c:	ldr	w0, [sp, #40]
    5120:	add	w2, w0, #0x1
    5124:	str	w2, [sp, #40]
    5128:	sxtw	x0, w0
    512c:	lsl	x0, x0, #3
    5130:	add	x0, x1, x0
    5134:	str	x0, [sp, #72]
    5138:	ldr	x1, [sp, #64]
    513c:	ldr	x0, [sp, #72]
    5140:	sub	x0, x1, x0
    5144:	asr	x0, x0, #3
    5148:	str	w0, [sp, #44]
    514c:	ldr	w0, [sp, #44]
    5150:	cmp	w0, #0x0
    5154:	b.eq	5168 <XS_Time__Piece__get_localization+0x90>  // b.none
    5158:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    515c:	add	x1, x0, #0xb00
    5160:	ldr	x0, [sp, #16]
    5164:	bl	1120 <Perl_croak_xs_usage@plt>
    5168:	mov	w1, #0xc                   	// #12
    516c:	ldr	x0, [sp, #24]
    5170:	bl	1240 <Perl_newSV_type@plt>
    5174:	str	x0, [sp, #80]
    5178:	ldr	x0, [sp, #80]
    517c:	str	x0, [sp, #88]
    5180:	mov	w1, #0xb                   	// #11
    5184:	ldr	x0, [sp, #24]
    5188:	bl	1240 <Perl_newSV_type@plt>
    518c:	str	x0, [sp, #96]
    5190:	ldr	x0, [sp, #96]
    5194:	str	x0, [sp, #104]
    5198:	mov	w1, #0xb                   	// #11
    519c:	ldr	x0, [sp, #24]
    51a0:	bl	1240 <Perl_newSV_type@plt>
    51a4:	str	x0, [sp, #112]
    51a8:	ldr	x0, [sp, #112]
    51ac:	str	x0, [sp, #120]
    51b0:	mov	w1, #0xb                   	// #11
    51b4:	ldr	x0, [sp, #24]
    51b8:	bl	1240 <Perl_newSV_type@plt>
    51bc:	str	x0, [sp, #128]
    51c0:	ldr	x0, [sp, #128]
    51c4:	str	x0, [sp, #136]
    51c8:	mov	w1, #0xb                   	// #11
    51cc:	ldr	x0, [sp, #24]
    51d0:	bl	1240 <Perl_newSV_type@plt>
    51d4:	str	x0, [sp, #144]
    51d8:	ldr	x0, [sp, #144]
    51dc:	str	x0, [sp, #152]
    51e0:	mov	x0, #0xcc30                	// #52272
    51e4:	movk	x0, #0x4eff, lsl #16
    51e8:	str	x0, [sp, #48]
    51ec:	add	x0, sp, #0x30
    51f0:	bl	10f0 <gmtime@plt>
    51f4:	mov	x1, x0
    51f8:	add	x0, sp, #0xc0
    51fc:	ldp	x2, x3, [x1]
    5200:	stp	x2, x3, [x0]
    5204:	ldp	x2, x3, [x1, #16]
    5208:	stp	x2, x3, [x0, #16]
    520c:	ldp	x2, x3, [x1, #32]
    5210:	stp	x2, x3, [x0, #32]
    5214:	ldr	x1, [x1, #48]
    5218:	str	x1, [x0, #48]
    521c:	str	xzr, [sp, #56]
    5220:	b	52cc <XS_Time__Piece__get_localization+0x1f4>
    5224:	add	x0, sp, #0xc0
    5228:	add	x4, sp, #0xf8
    522c:	mov	x3, x0
    5230:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5234:	add	x2, x0, #0xc08
    5238:	mov	x1, #0xa0                  	// #160
    523c:	mov	x0, x4
    5240:	bl	1050 <strftime@plt>
    5244:	str	x0, [sp, #168]
    5248:	add	x0, sp, #0xf8
    524c:	ldr	x2, [sp, #168]
    5250:	mov	x1, x0
    5254:	ldr	x0, [sp, #24]
    5258:	bl	1280 <Perl_newSVpvn@plt>
    525c:	mov	x2, x0
    5260:	ldr	x1, [sp, #104]
    5264:	ldr	x0, [sp, #24]
    5268:	bl	1140 <Perl_av_push@plt>
    526c:	add	x0, sp, #0xc0
    5270:	add	x4, sp, #0xf8
    5274:	mov	x3, x0
    5278:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    527c:	add	x2, x0, #0xc10
    5280:	mov	x1, #0xa0                  	// #160
    5284:	mov	x0, x4
    5288:	bl	1050 <strftime@plt>
    528c:	str	x0, [sp, #168]
    5290:	add	x0, sp, #0xf8
    5294:	ldr	x2, [sp, #168]
    5298:	mov	x1, x0
    529c:	ldr	x0, [sp, #24]
    52a0:	bl	1280 <Perl_newSVpvn@plt>
    52a4:	mov	x2, x0
    52a8:	ldr	x1, [sp, #120]
    52ac:	ldr	x0, [sp, #24]
    52b0:	bl	1140 <Perl_av_push@plt>
    52b4:	ldr	w0, [sp, #216]
    52b8:	add	w0, w0, #0x1
    52bc:	str	w0, [sp, #216]
    52c0:	ldr	x0, [sp, #56]
    52c4:	add	x0, x0, #0x1
    52c8:	str	x0, [sp, #56]
    52cc:	ldr	x0, [sp, #56]
    52d0:	cmp	x0, #0x6
    52d4:	b.ls	5224 <XS_Time__Piece__get_localization+0x14c>  // b.plast
    52d8:	str	xzr, [sp, #56]
    52dc:	b	5388 <XS_Time__Piece__get_localization+0x2b0>
    52e0:	add	x0, sp, #0xc0
    52e4:	add	x4, sp, #0xf8
    52e8:	mov	x3, x0
    52ec:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    52f0:	add	x2, x0, #0xc18
    52f4:	mov	x1, #0xa0                  	// #160
    52f8:	mov	x0, x4
    52fc:	bl	1050 <strftime@plt>
    5300:	str	x0, [sp, #168]
    5304:	add	x0, sp, #0xf8
    5308:	ldr	x2, [sp, #168]
    530c:	mov	x1, x0
    5310:	ldr	x0, [sp, #24]
    5314:	bl	1280 <Perl_newSVpvn@plt>
    5318:	mov	x2, x0
    531c:	ldr	x1, [sp, #136]
    5320:	ldr	x0, [sp, #24]
    5324:	bl	1140 <Perl_av_push@plt>
    5328:	add	x0, sp, #0xc0
    532c:	add	x4, sp, #0xf8
    5330:	mov	x3, x0
    5334:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5338:	add	x2, x0, #0xc20
    533c:	mov	x1, #0xa0                  	// #160
    5340:	mov	x0, x4
    5344:	bl	1050 <strftime@plt>
    5348:	str	x0, [sp, #168]
    534c:	add	x0, sp, #0xf8
    5350:	ldr	x2, [sp, #168]
    5354:	mov	x1, x0
    5358:	ldr	x0, [sp, #24]
    535c:	bl	1280 <Perl_newSVpvn@plt>
    5360:	mov	x2, x0
    5364:	ldr	x1, [sp, #152]
    5368:	ldr	x0, [sp, #24]
    536c:	bl	1140 <Perl_av_push@plt>
    5370:	ldr	w0, [sp, #208]
    5374:	add	w0, w0, #0x1
    5378:	str	w0, [sp, #208]
    537c:	ldr	x0, [sp, #56]
    5380:	add	x0, x0, #0x1
    5384:	str	x0, [sp, #56]
    5388:	ldr	x0, [sp, #56]
    538c:	cmp	x0, #0xb
    5390:	b.ls	52e0 <XS_Time__Piece__get_localization+0x208>  // b.plast
    5394:	ldr	x1, [sp, #104]
    5398:	ldr	x0, [sp, #24]
    539c:	bl	1020 <Perl_newRV_noinc@plt>
    53a0:	mov	w6, #0x0                   	// #0
    53a4:	mov	x5, x0
    53a8:	mov	w4, #0x24                  	// #36
    53ac:	mov	w3, #0x4                   	// #4
    53b0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    53b4:	add	x2, x0, #0xac0
    53b8:	ldr	x1, [sp, #88]
    53bc:	ldr	x0, [sp, #24]
    53c0:	bl	1220 <Perl_hv_common_key_len@plt>
    53c4:	str	x0, [sp, #160]
    53c8:	ldr	x1, [sp, #120]
    53cc:	ldr	x0, [sp, #24]
    53d0:	bl	1020 <Perl_newRV_noinc@plt>
    53d4:	mov	w6, #0x0                   	// #0
    53d8:	mov	x5, x0
    53dc:	mov	w4, #0x24                  	// #36
    53e0:	mov	w3, #0x7                   	// #7
    53e4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    53e8:	add	x2, x0, #0xab8
    53ec:	ldr	x1, [sp, #88]
    53f0:	ldr	x0, [sp, #24]
    53f4:	bl	1220 <Perl_hv_common_key_len@plt>
    53f8:	str	x0, [sp, #160]
    53fc:	ldr	x1, [sp, #136]
    5400:	ldr	x0, [sp, #24]
    5404:	bl	1020 <Perl_newRV_noinc@plt>
    5408:	mov	w6, #0x0                   	// #0
    540c:	mov	x5, x0
    5410:	mov	w4, #0x24                  	// #36
    5414:	mov	w3, #0x3                   	// #3
    5418:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    541c:	add	x2, x0, #0xab0
    5420:	ldr	x1, [sp, #88]
    5424:	ldr	x0, [sp, #24]
    5428:	bl	1220 <Perl_hv_common_key_len@plt>
    542c:	str	x0, [sp, #160]
    5430:	ldr	x1, [sp, #152]
    5434:	ldr	x0, [sp, #24]
    5438:	bl	1020 <Perl_newRV_noinc@plt>
    543c:	mov	w6, #0x0                   	// #0
    5440:	mov	x5, x0
    5444:	mov	w4, #0x24                  	// #36
    5448:	mov	w3, #0x5                   	// #5
    544c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5450:	add	x2, x0, #0xaa8
    5454:	ldr	x1, [sp, #88]
    5458:	ldr	x0, [sp, #24]
    545c:	bl	1220 <Perl_hv_common_key_len@plt>
    5460:	str	x0, [sp, #160]
    5464:	ldr	x1, [sp, #152]
    5468:	ldr	x0, [sp, #24]
    546c:	bl	1230 <Perl_newRV@plt>
    5470:	mov	w6, #0x0                   	// #0
    5474:	mov	x5, x0
    5478:	mov	w4, #0x24                  	// #36
    547c:	mov	w3, #0x9                   	// #9
    5480:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5484:	add	x2, x0, #0xa98
    5488:	ldr	x1, [sp, #88]
    548c:	ldr	x0, [sp, #24]
    5490:	bl	1220 <Perl_hv_common_key_len@plt>
    5494:	str	x0, [sp, #160]
    5498:	add	x0, sp, #0xc0
    549c:	add	x4, sp, #0xf8
    54a0:	mov	x3, x0
    54a4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    54a8:	add	x2, x0, #0xc28
    54ac:	mov	x1, #0xa0                  	// #160
    54b0:	mov	x0, x4
    54b4:	bl	1050 <strftime@plt>
    54b8:	str	x0, [sp, #168]
    54bc:	add	x0, sp, #0xf8
    54c0:	ldr	x2, [sp, #168]
    54c4:	mov	x1, x0
    54c8:	ldr	x0, [sp, #24]
    54cc:	bl	1280 <Perl_newSVpvn@plt>
    54d0:	mov	w6, #0x0                   	// #0
    54d4:	mov	x5, x0
    54d8:	mov	w4, #0x24                  	// #36
    54dc:	mov	w3, #0x2                   	// #2
    54e0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    54e4:	add	x2, x0, #0xad8
    54e8:	ldr	x1, [sp, #88]
    54ec:	ldr	x0, [sp, #24]
    54f0:	bl	1220 <Perl_hv_common_key_len@plt>
    54f4:	str	x0, [sp, #160]
    54f8:	mov	w0, #0x12                  	// #18
    54fc:	str	w0, [sp, #200]
    5500:	add	x0, sp, #0xc0
    5504:	add	x4, sp, #0xf8
    5508:	mov	x3, x0
    550c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5510:	add	x2, x0, #0xc28
    5514:	mov	x1, #0xa0                  	// #160
    5518:	mov	x0, x4
    551c:	bl	1050 <strftime@plt>
    5520:	str	x0, [sp, #168]
    5524:	add	x0, sp, #0xf8
    5528:	ldr	x2, [sp, #168]
    552c:	mov	x1, x0
    5530:	ldr	x0, [sp, #24]
    5534:	bl	1280 <Perl_newSVpvn@plt>
    5538:	mov	w6, #0x0                   	// #0
    553c:	mov	x5, x0
    5540:	mov	w4, #0x24                  	// #36
    5544:	mov	w3, #0x2                   	// #2
    5548:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    554c:	add	x2, x0, #0xae0
    5550:	ldr	x1, [sp, #88]
    5554:	ldr	x0, [sp, #24]
    5558:	bl	1220 <Perl_hv_common_key_len@plt>
    555c:	str	x0, [sp, #160]
    5560:	ldr	x0, [sp, #160]
    5564:	cmp	x0, #0x0
    5568:	b.eq	5584 <XS_Time__Piece__get_localization+0x4ac>  // b.none
    556c:	ldr	x0, [sp, #160]
    5570:	ldr	x0, [x0]
    5574:	ldr	w0, [x0, #12]
    5578:	and	w0, w0, #0xff00
    557c:	cmp	w0, #0x0
    5580:	b.ne	5590 <XS_Time__Piece__get_localization+0x4b8>  // b.any
    5584:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5588:	add	x0, x0, #0xc30
    558c:	bl	1190 <Perl_croak_nocontext@plt>
    5590:	ldr	x1, [sp, #88]
    5594:	ldr	x0, [sp, #24]
    5598:	bl	1020 <Perl_newRV_noinc@plt>
    559c:	str	x0, [sp, #176]
    55a0:	ldr	x1, [sp, #176]
    55a4:	ldr	x0, [sp, #24]
    55a8:	bl	11d0 <Perl_sv_2mortal@plt>
    55ac:	str	x0, [sp, #176]
    55b0:	ldr	x0, [sp, #24]
    55b4:	ldr	x1, [x0, #24]
    55b8:	ldrsw	x0, [sp, #40]
    55bc:	lsl	x0, x0, #3
    55c0:	add	x0, x1, x0
    55c4:	ldr	x1, [sp, #176]
    55c8:	str	x1, [x0]
    55cc:	mov	x0, #0x1                   	// #1
    55d0:	str	x0, [sp, #184]
    55d4:	ldr	x0, [sp, #24]
    55d8:	ldr	x1, [x0, #24]
    55dc:	ldrsw	x2, [sp, #40]
    55e0:	ldr	x0, [sp, #184]
    55e4:	add	x0, x2, x0
    55e8:	lsl	x0, x0, #3
    55ec:	sub	x0, x0, #0x8
    55f0:	add	x1, x1, x0
    55f4:	ldr	x0, [sp, #24]
    55f8:	str	x1, [x0]
    55fc:	nop
    5600:	adrp	x0, 16000 <__FRAME_END__+0xffa0>
    5604:	ldr	x0, [x0, #4048]
    5608:	ldr	x1, [sp, #408]
    560c:	ldr	x0, [x0]
    5610:	eor	x0, x1, x0
    5614:	cmp	x0, #0x0
    5618:	b.eq	5620 <XS_Time__Piece__get_localization+0x548>  // b.none
    561c:	bl	1100 <__stack_chk_fail@plt>
    5620:	ldp	x29, x30, [sp], #416
    5624:	ret

0000000000005628 <boot_Time__Piece>:
    5628:	stp	x29, x30, [sp, #-80]!
    562c:	mov	x29, sp
    5630:	str	x0, [sp, #24]
    5634:	str	x1, [sp, #16]
    5638:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    563c:	add	x4, x0, #0xc50
    5640:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5644:	add	x3, x0, #0xc58
    5648:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    564c:	add	x2, x0, #0xc60
    5650:	ldr	x1, [sp, #24]
    5654:	mov	w0, #0x4e7                 	// #1255
    5658:	movk	w0, #0xd30, lsl #16
    565c:	bl	1200 <Perl_xs_handshake@plt>
    5660:	str	w0, [sp, #32]
    5664:	ldr	x0, [sp, #24]
    5668:	ldr	x1, [x0, #24]
    566c:	ldrsw	x0, [sp, #32]
    5670:	lsl	x0, x0, #3
    5674:	add	x0, x1, x0
    5678:	str	x0, [sp, #40]
    567c:	ldr	x0, [sp, #24]
    5680:	ldr	x0, [x0]
    5684:	str	x0, [sp, #48]
    5688:	ldr	x1, [sp, #48]
    568c:	ldr	x0, [sp, #40]
    5690:	sub	x0, x1, x0
    5694:	asr	x0, x0, #3
    5698:	str	w0, [sp, #36]
    569c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    56a0:	add	x0, x0, #0xc60
    56a4:	str	x0, [sp, #56]
    56a8:	mov	w5, #0x0                   	// #0
    56ac:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    56b0:	add	x4, x0, #0xc68
    56b4:	ldr	x3, [sp, #56]
    56b8:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    56bc:	add	x2, x0, #0x64
    56c0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    56c4:	add	x1, x0, #0xc70
    56c8:	ldr	x0, [sp, #24]
    56cc:	bl	11c0 <Perl_newXS_flags@plt>
    56d0:	mov	w5, #0x0                   	// #0
    56d4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    56d8:	add	x4, x0, #0xb00
    56dc:	ldr	x3, [sp, #56]
    56e0:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    56e4:	add	x2, x0, #0x574
    56e8:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    56ec:	add	x1, x0, #0xc88
    56f0:	ldr	x0, [sp, #24]
    56f4:	bl	11c0 <Perl_newXS_flags@plt>
    56f8:	mov	w5, #0x0                   	// #0
    56fc:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5700:	add	x4, x0, #0xca0
    5704:	ldr	x3, [sp, #56]
    5708:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    570c:	add	x2, x0, #0x628
    5710:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5714:	add	x1, x0, #0xca8
    5718:	ldr	x0, [sp, #24]
    571c:	bl	11c0 <Perl_newXS_flags@plt>
    5720:	mov	w5, #0x0                   	// #0
    5724:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5728:	add	x4, x0, #0xcc0
    572c:	ldr	x3, [sp, #56]
    5730:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    5734:	add	x2, x0, #0x9a0
    5738:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    573c:	add	x1, x0, #0xcc8
    5740:	ldr	x0, [sp, #24]
    5744:	bl	11c0 <Perl_newXS_flags@plt>
    5748:	mov	w5, #0x0                   	// #0
    574c:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5750:	add	x4, x0, #0xce8
    5754:	ldr	x3, [sp, #56]
    5758:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    575c:	add	x2, x0, #0xe28
    5760:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5764:	add	x1, x0, #0xcf0
    5768:	ldr	x0, [sp, #24]
    576c:	bl	11c0 <Perl_newXS_flags@plt>
    5770:	str	x0, [sp, #16]
    5774:	ldr	x0, [sp, #16]
    5778:	ldr	x0, [x0]
    577c:	str	x0, [sp, #64]
    5780:	ldr	x0, [sp, #64]
    5784:	mov	w1, #0x1                   	// #1
    5788:	str	w1, [x0, #40]
    578c:	mov	w5, #0x0                   	// #0
    5790:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    5794:	add	x4, x0, #0xce8
    5798:	ldr	x3, [sp, #56]
    579c:	adrp	x0, 4000 <_populate_C_time_locale+0x6f8>
    57a0:	add	x2, x0, #0xe28
    57a4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    57a8:	add	x1, x0, #0xd10
    57ac:	ldr	x0, [sp, #24]
    57b0:	bl	11c0 <Perl_newXS_flags@plt>
    57b4:	str	x0, [sp, #16]
    57b8:	ldr	x0, [sp, #16]
    57bc:	ldr	x0, [x0]
    57c0:	str	x0, [sp, #72]
    57c4:	ldr	x0, [sp, #72]
    57c8:	str	wzr, [x0, #40]
    57cc:	mov	w5, #0x0                   	// #0
    57d0:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    57d4:	add	x4, x0, #0xb00
    57d8:	ldr	x3, [sp, #56]
    57dc:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    57e0:	add	x2, x0, #0xd8
    57e4:	adrp	x0, 5000 <XS_Time__Piece__crt_localtime+0x1d8>
    57e8:	add	x1, x0, #0xd30
    57ec:	ldr	x0, [sp, #24]
    57f0:	bl	11c0 <Perl_newXS_flags@plt>
    57f4:	ldr	w1, [sp, #32]
    57f8:	ldr	x0, [sp, #24]
    57fc:	bl	10d0 <Perl_xs_boot_epilog@plt>
    5800:	nop
    5804:	ldp	x29, x30, [sp], #80
    5808:	ret

Disassembly of section .fini:

000000000000580c <_fini>:
    580c:	stp	x29, x30, [sp, #-16]!
    5810:	mov	x29, sp
    5814:	ldp	x29, x30, [sp], #16
    5818:	ret
