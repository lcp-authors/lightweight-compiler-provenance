In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libncurses++w.a_clang_-O3:

cursesf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN16NCursesFormFieldD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN16NCursesFormFieldD1Ev+0x30>
  28:	bl	0 <free_field>
  2c:	cbnz	w0, 3c <_ZN16NCursesFormFieldD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
  68:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN16NCursesFormFieldD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN16NCursesFormFieldD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN16NCursesFormFieldD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>:
  cc:	stp	x29, x30, [sp, #-48]!
  d0:	stp	x22, x21, [sp, #16]
  d4:	stp	x20, x19, [sp, #32]
  d8:	mov	x29, sp
  dc:	ldr	x8, [x1]
  e0:	mov	x20, x1
  e4:	mov	x19, x0
  e8:	ldr	x22, [x8, #8]
  ec:	mov	w8, #0x1                   	// #1
  f0:	cbz	x22, 108 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x3c>
  f4:	ldr	x9, [x20, x8, lsl #3]
  f8:	add	x8, x8, #0x1
  fc:	ldr	x9, [x9, #8]
 100:	cbnz	x9, f4 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x28>
 104:	sxtw	x8, w8
 108:	lsl	x9, x8, #3
 10c:	cmp	xzr, x8, lsr #61
 110:	csinv	x0, x9, xzr, eq  // eq = none
 114:	bl	0 <_Znam>
 118:	mov	x21, x0
 11c:	cbz	x22, 14c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x80>
 120:	add	x9, x20, #0x8
 124:	mov	x8, x21
 128:	str	x22, [x8], #8
 12c:	ldr	x10, [x9], #8
 130:	ldr	x22, [x10, #8]
 134:	cbnz	x22, 128 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x5c>
 138:	str	xzr, [x8]
 13c:	ldr	x0, [x19, #56]
 140:	str	x20, [x19, #80]
 144:	cbnz	x0, 160 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x94>
 148:	b	180 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xb4>
 14c:	mov	x8, x21
 150:	str	xzr, [x8]
 154:	ldr	x0, [x19, #56]
 158:	str	x20, [x19, #80]
 15c:	cbz	x0, 180 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xb4>
 160:	bl	0 <form_fields>
 164:	cbz	x0, 180 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xb4>
 168:	mov	x20, x0
 16c:	ldr	x0, [x19, #56]
 170:	mov	x1, xzr
 174:	bl	0 <set_form_fields>
 178:	mov	x0, x20
 17c:	bl	0 <_ZdaPv>
 180:	mov	x0, x21
 184:	ldp	x20, x19, [sp, #32]
 188:	ldp	x22, x21, [sp, #16]
 18c:	ldp	x29, x30, [sp], #48
 190:	ret

0000000000000194 <_ZN11NCursesForm20setDefaultAttributesEv>:
 194:	stp	x29, x30, [sp, #-64]!
 198:	stp	x24, x23, [sp, #16]
 19c:	stp	x22, x21, [sp, #32]
 1a0:	stp	x20, x19, [sp, #48]
 1a4:	mov	x29, sp
 1a8:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 1ac:	ldr	x8, [x8]
 1b0:	mov	x20, x0
 1b4:	ldr	x0, [x0, #56]
 1b8:	ldr	x19, [x8]
 1bc:	bl	0 <field_count>
 1c0:	cmp	w0, #0x1
 1c4:	b.lt	30c <_ZN11NCursesForm20setDefaultAttributesEv+0x178>  // b.tstop
 1c8:	mov	w21, w0
 1cc:	mov	x22, xzr
 1d0:	mov	w23, #0xa                   	// #10
 1d4:	cbnz	x19, 250 <_ZN11NCursesForm20setDefaultAttributesEv+0xbc>
 1d8:	b	1e8 <_ZN11NCursesForm20setDefaultAttributesEv+0x54>
 1dc:	add	x22, x22, #0x1
 1e0:	cmp	x21, x22
 1e4:	b.eq	30c <_ZN11NCursesForm20setDefaultAttributesEv+0x178>  // b.none
 1e8:	ldr	x0, [x20, #56]
 1ec:	bl	0 <field_count>
 1f0:	cmp	x22, w0, sxtw
 1f4:	b.ge	37c <_ZN11NCursesForm20setDefaultAttributesEv+0x1e8>  // b.tcont
 1f8:	ldr	x8, [x20, #80]
 1fc:	ldr	x24, [x8, x22, lsl #3]
 200:	ldr	x0, [x24, #8]
 204:	bl	0 <field_opts>
 208:	bics	wzr, w23, w0
 20c:	b.ne	1dc <_ZN11NCursesForm20setDefaultAttributesEv+0x48>  // b.any
 210:	ldr	x0, [x24, #8]
 214:	mov	w1, #0x5f                  	// #95
 218:	bl	0 <set_field_pad>
 21c:	cbz	w0, 1dc <_ZN11NCursesForm20setDefaultAttributesEv+0x48>
 220:	b	2d0 <_ZN11NCursesForm20setDefaultAttributesEv+0x13c>
 224:	ldr	x8, [x8, #96]
 228:	mov	x0, x19
 22c:	blr	x8
 230:	ldr	x8, [x24, #8]
 234:	mov	w1, w0
 238:	mov	x0, x8
 23c:	bl	0 <set_field_back>
 240:	cbnz	w0, 3b8 <_ZN11NCursesForm20setDefaultAttributesEv+0x224>
 244:	add	x22, x22, #0x1
 248:	cmp	x21, x22
 24c:	b.eq	310 <_ZN11NCursesForm20setDefaultAttributesEv+0x17c>  // b.none
 250:	ldr	x0, [x20, #56]
 254:	bl	0 <field_count>
 258:	cmp	x22, w0, sxtw
 25c:	b.ge	37c <_ZN11NCursesForm20setDefaultAttributesEv+0x1e8>  // b.tcont
 260:	ldr	x8, [x20, #80]
 264:	ldr	x24, [x8, x22, lsl #3]
 268:	ldr	x0, [x24, #8]
 26c:	bl	0 <field_opts>
 270:	ldr	x8, [x19]
 274:	bics	wzr, w23, w0
 278:	b.ne	224 <_ZN11NCursesForm20setDefaultAttributesEv+0x90>  // b.any
 27c:	ldr	x8, [x8, #72]
 280:	mov	x0, x19
 284:	blr	x8
 288:	ldr	x8, [x24, #8]
 28c:	mov	w1, w0
 290:	mov	x0, x8
 294:	bl	0 <set_field_fore>
 298:	cbnz	w0, 3f4 <_ZN11NCursesForm20setDefaultAttributesEv+0x260>
 29c:	ldr	x8, [x19]
 2a0:	mov	x0, x19
 2a4:	ldr	x8, [x8, #80]
 2a8:	blr	x8
 2ac:	ldr	x8, [x24, #8]
 2b0:	mov	w1, w0
 2b4:	mov	x0, x8
 2b8:	bl	0 <set_field_back>
 2bc:	cbnz	w0, 430 <_ZN11NCursesForm20setDefaultAttributesEv+0x29c>
 2c0:	ldr	x0, [x24, #8]
 2c4:	mov	w1, #0x5f                  	// #95
 2c8:	bl	0 <set_field_pad>
 2cc:	cbz	w0, 244 <_ZN11NCursesForm20setDefaultAttributesEv+0xb0>
 2d0:	mov	w19, w0
 2d4:	mov	w0, #0x18                  	// #24
 2d8:	bl	0 <__cxa_allocate_exception>
 2dc:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 2e0:	ldr	x8, [x8]
 2e4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 2e8:	add	x9, x9, #0x0
 2ec:	str	w19, [x0, #16]
 2f0:	add	x8, x8, #0x10
 2f4:	stp	x8, x9, [x0]
 2f8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 2fc:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 300:	ldr	x1, [x1]
 304:	ldr	x2, [x2]
 308:	bl	0 <__cxa_throw>
 30c:	cbz	x19, 368 <_ZN11NCursesForm20setDefaultAttributesEv+0x1d4>
 310:	ldr	x8, [x19]
 314:	mov	x0, x19
 318:	ldr	x8, [x8, #104]
 31c:	blr	x8
 320:	ldr	x8, [x20, #8]
 324:	orr	w1, w0, #0x20
 328:	mov	x0, x8
 32c:	bl	0 <wbkgd>
 330:	ldr	x20, [x20, #64]
 334:	cbz	x20, 368 <_ZN11NCursesForm20setDefaultAttributesEv+0x1d4>
 338:	ldr	x8, [x19]
 33c:	mov	x0, x19
 340:	ldr	x8, [x8, #104]
 344:	blr	x8
 348:	ldr	x8, [x20, #8]
 34c:	ldp	x20, x19, [sp, #48]
 350:	ldp	x22, x21, [sp, #32]
 354:	ldp	x24, x23, [sp, #16]
 358:	orr	w1, w0, #0x20
 35c:	mov	x0, x8
 360:	ldp	x29, x30, [sp], #64
 364:	b	0 <wbkgd>
 368:	ldp	x20, x19, [sp, #48]
 36c:	ldp	x22, x21, [sp, #32]
 370:	ldp	x24, x23, [sp, #16]
 374:	ldp	x29, x30, [sp], #64
 378:	ret
 37c:	mov	w0, #0x18                  	// #24
 380:	bl	0 <__cxa_allocate_exception>
 384:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 388:	ldr	x8, [x8]
 38c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 390:	add	x9, x9, #0x0
 394:	mov	w10, #0xfffffffe            	// #-2
 398:	add	x8, x8, #0x10
 39c:	stp	x8, x9, [x0]
 3a0:	str	w10, [x0, #16]
 3a4:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 3a8:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 3ac:	ldr	x1, [x1]
 3b0:	ldr	x2, [x2]
 3b4:	bl	0 <__cxa_throw>
 3b8:	mov	w19, w0
 3bc:	mov	w0, #0x18                  	// #24
 3c0:	bl	0 <__cxa_allocate_exception>
 3c4:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 3c8:	ldr	x8, [x8]
 3cc:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 3d0:	add	x9, x9, #0x0
 3d4:	str	w19, [x0, #16]
 3d8:	add	x8, x8, #0x10
 3dc:	stp	x8, x9, [x0]
 3e0:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 3e4:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 3e8:	ldr	x1, [x1]
 3ec:	ldr	x2, [x2]
 3f0:	bl	0 <__cxa_throw>
 3f4:	mov	w19, w0
 3f8:	mov	w0, #0x18                  	// #24
 3fc:	bl	0 <__cxa_allocate_exception>
 400:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 404:	ldr	x8, [x8]
 408:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 40c:	add	x9, x9, #0x0
 410:	str	w19, [x0, #16]
 414:	add	x8, x8, #0x10
 418:	stp	x8, x9, [x0]
 41c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 420:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 424:	ldr	x1, [x1]
 428:	ldr	x2, [x2]
 42c:	bl	0 <__cxa_throw>
 430:	mov	w19, w0
 434:	mov	w0, #0x18                  	// #24
 438:	bl	0 <__cxa_allocate_exception>
 43c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 440:	ldr	x8, [x8]
 444:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 448:	add	x9, x9, #0x0
 44c:	str	w19, [x0, #16]
 450:	add	x8, x8, #0x10
 454:	stp	x8, x9, [x0]
 458:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 45c:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 460:	ldr	x1, [x1]
 464:	ldr	x2, [x2]
 468:	bl	0 <__cxa_throw>
 46c:	bl	0 <__cxa_call_unexpected>
 470:	bl	0 <__cxa_call_unexpected>
 474:	bl	0 <__cxa_call_unexpected>
 478:	bl	0 <__cxa_call_unexpected>
 47c:	bl	0 <__cxa_call_unexpected>

0000000000000480 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb>:
 480:	stp	x29, x30, [sp, #-64]!
 484:	str	x23, [sp, #16]
 488:	stp	x22, x21, [sp, #32]
 48c:	stp	x20, x19, [sp, #48]
 490:	mov	x29, sp
 494:	mov	x19, x0
 498:	ldr	x0, [x0, #8]
 49c:	mov	x21, x1
 4a0:	mov	w1, #0x1                   	// #1
 4a4:	mov	w20, w2
 4a8:	and	w22, w2, #0x1
 4ac:	and	w23, w3, #0x1
 4b0:	bl	0 <keypad>
 4b4:	ldr	x0, [x19, #8]
 4b8:	mov	w1, #0x1                   	// #1
 4bc:	bl	0 <meta>
 4c0:	mov	x0, x19
 4c4:	mov	x1, x21
 4c8:	strb	w22, [x19, #73]
 4cc:	strb	w23, [x19, #74]
 4d0:	str	xzr, [x19, #56]
 4d4:	bl	cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>
 4d8:	bl	0 <new_form>
 4dc:	str	x0, [x19, #56]
 4e0:	cbz	x0, 694 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x214>
 4e4:	mov	x21, x0
 4e8:	mov	w0, #0x18                  	// #24
 4ec:	bl	0 <_Znwm>
 4f0:	mov	x1, x0
 4f4:	stp	xzr, x19, [x0]
 4f8:	str	x21, [x0, #16]
 4fc:	mov	x0, x21
 500:	bl	0 <set_form_userptr>
 504:	adrp	x1, 76c <_nc_xx_frm_init>
 508:	ldr	x0, [x19, #56]
 50c:	ldr	x1, [x1]
 510:	bl	0 <set_form_init>
 514:	adrp	x1, 78c <_nc_xx_frm_term>
 518:	ldr	x0, [x19, #56]
 51c:	ldr	x1, [x1]
 520:	bl	0 <set_form_term>
 524:	adrp	x1, 7ac <_nc_xx_fld_init>
 528:	ldr	x0, [x19, #56]
 52c:	ldr	x1, [x1]
 530:	bl	0 <set_field_init>
 534:	adrp	x1, 7ec <_nc_xx_fld_term>
 538:	ldr	x0, [x19, #56]
 53c:	ldr	x1, [x1]
 540:	bl	0 <set_field_term>
 544:	ldr	x0, [x19, #56]
 548:	add	x1, x29, #0x1c
 54c:	add	x2, x29, #0x18
 550:	bl	0 <scale_form>
 554:	cbnz	w0, 6d0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x250>
 558:	ldr	x0, [x19, #56]
 55c:	ldr	x1, [x19, #8]
 560:	bl	0 <set_form_win>
 564:	tbz	w20, #0, 598 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x118>
 568:	ldr	x8, [x19, #8]
 56c:	ldr	w20, [x29, #28]
 570:	cbz	x8, 5a4 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x124>
 574:	ldrh	w9, [x8, #4]
 578:	mov	w10, #0xfffe                	// #65534
 57c:	cmp	w9, w10
 580:	csinv	w9, w9, wzr, ne  // ne = any
 584:	sxth	w9, w9
 588:	sub	w9, w9, #0x1
 58c:	cmp	w20, w9
 590:	b.le	5b0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x130>
 594:	b	658 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 598:	mov	w8, wzr
 59c:	str	xzr, [x19, #64]
 5a0:	b	614 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x194>
 5a4:	mov	w9, #0xfffffffe            	// #-2
 5a8:	cmp	w20, w9
 5ac:	b.gt	658 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 5b0:	ldr	w21, [x29, #24]
 5b4:	cbz	x8, 64c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1cc>
 5b8:	ldrh	w8, [x8, #6]
 5bc:	mov	w9, #0xfffe                	// #65534
 5c0:	cmp	w8, w9
 5c4:	csinv	w8, w8, wzr, ne  // ne = any
 5c8:	sxth	w8, w8
 5cc:	sub	w8, w8, #0x1
 5d0:	cmp	w21, w8
 5d4:	b.gt	658 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 5d8:	mov	w0, #0x30                  	// #48
 5dc:	bl	0 <_Znwm>
 5e0:	mov	x22, x0
 5e4:	mov	w4, #0x1                   	// #1
 5e8:	mov	w5, #0x1                   	// #1
 5ec:	mov	w6, #0x72                  	// #114
 5f0:	mov	x1, x19
 5f4:	mov	w2, w20
 5f8:	mov	w3, w21
 5fc:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 600:	str	x22, [x19, #64]
 604:	ldr	x0, [x19, #56]
 608:	ldr	x1, [x22, #8]
 60c:	bl	0 <set_form_sub>
 610:	mov	w8, #0x1                   	// #1
 614:	ldr	x0, [x19, #56]
 618:	mov	w1, #0x1                   	// #1
 61c:	strb	w8, [x19, #72]
 620:	bl	0 <form_opts_on>
 624:	cbnz	w0, 70c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x28c>
 628:	ldr	x8, [x19]
 62c:	mov	x0, x19
 630:	ldr	x8, [x8, #96]
 634:	blr	x8
 638:	ldp	x20, x19, [sp, #48]
 63c:	ldp	x22, x21, [sp, #32]
 640:	ldr	x23, [sp, #16]
 644:	ldp	x29, x30, [sp], #64
 648:	ret
 64c:	mov	w8, #0xfffffffe            	// #-2
 650:	cmp	w21, w8
 654:	b.le	5d8 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x158>
 658:	mov	w0, #0x18                  	// #24
 65c:	bl	0 <__cxa_allocate_exception>
 660:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 664:	ldr	x8, [x8]
 668:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 66c:	add	x9, x9, #0x0
 670:	mov	w10, #0xfffffffa            	// #-6
 674:	add	x8, x8, #0x10
 678:	stp	x8, x9, [x0]
 67c:	str	w10, [x0, #16]
 680:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 684:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 688:	ldr	x1, [x1]
 68c:	ldr	x2, [x2]
 690:	bl	0 <__cxa_throw>
 694:	mov	w0, #0x18                  	// #24
 698:	bl	0 <__cxa_allocate_exception>
 69c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 6a0:	ldr	x8, [x8]
 6a4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 6a8:	add	x9, x9, #0x0
 6ac:	mov	w10, #0xffffffff            	// #-1
 6b0:	add	x8, x8, #0x10
 6b4:	stp	x8, x9, [x0]
 6b8:	str	w10, [x0, #16]
 6bc:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6c0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 6c4:	ldr	x1, [x1]
 6c8:	ldr	x2, [x2]
 6cc:	bl	0 <__cxa_throw>
 6d0:	mov	w21, w0
 6d4:	mov	w0, #0x18                  	// #24
 6d8:	bl	0 <__cxa_allocate_exception>
 6dc:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 6e0:	ldr	x8, [x8]
 6e4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 6e8:	add	x9, x9, #0x0
 6ec:	str	w21, [x0, #16]
 6f0:	add	x8, x8, #0x10
 6f4:	stp	x8, x9, [x0]
 6f8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6fc:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 700:	ldr	x1, [x1]
 704:	ldr	x2, [x2]
 708:	bl	0 <__cxa_throw>
 70c:	mov	w20, w0
 710:	mov	w0, #0x18                  	// #24
 714:	bl	0 <__cxa_allocate_exception>
 718:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 71c:	ldr	x8, [x8]
 720:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 724:	add	x9, x9, #0x0
 728:	str	w20, [x0, #16]
 72c:	add	x8, x8, #0x10
 730:	stp	x8, x9, [x0]
 734:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 738:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 73c:	ldr	x1, [x1]
 740:	ldr	x2, [x2]
 744:	bl	0 <__cxa_throw>
 748:	bl	0 <__cxa_call_unexpected>
 74c:	bl	0 <__cxa_call_unexpected>
 750:	bl	0 <__cxa_call_unexpected>
 754:	bl	0 <__cxa_call_unexpected>
 758:	mov	x19, x0
 75c:	mov	x0, x22
 760:	bl	0 <_ZdlPv>
 764:	mov	x0, x19
 768:	bl	0 <_Unwind_Resume>

000000000000076c <_nc_xx_frm_init>:
 76c:	stp	x29, x30, [sp, #-16]!
 770:	mov	x29, sp
 774:	bl	0 <form_userptr>
 778:	ldr	x0, [x0, #8]
 77c:	ldr	x8, [x0]
 780:	ldr	x1, [x8, #104]
 784:	ldp	x29, x30, [sp], #16
 788:	br	x1

000000000000078c <_nc_xx_frm_term>:
 78c:	stp	x29, x30, [sp, #-16]!
 790:	mov	x29, sp
 794:	bl	0 <form_userptr>
 798:	ldr	x0, [x0, #8]
 79c:	ldr	x8, [x0]
 7a0:	ldr	x1, [x8, #112]
 7a4:	ldp	x29, x30, [sp], #16
 7a8:	br	x1

00000000000007ac <_nc_xx_fld_init>:
 7ac:	stp	x29, x30, [sp, #-32]!
 7b0:	stp	x20, x19, [sp, #16]
 7b4:	mov	x29, sp
 7b8:	bl	0 <form_userptr>
 7bc:	ldr	x19, [x0, #8]
 7c0:	ldr	x0, [x19, #56]
 7c4:	ldr	x20, [x19, #80]
 7c8:	bl	0 <current_field>
 7cc:	bl	0 <field_index>
 7d0:	ldr	x8, [x19]
 7d4:	ldr	x1, [x20, w0, sxtw #3]
 7d8:	mov	x0, x19
 7dc:	ldp	x20, x19, [sp, #16]
 7e0:	ldr	x2, [x8, #120]
 7e4:	ldp	x29, x30, [sp], #32
 7e8:	br	x2

00000000000007ec <_nc_xx_fld_term>:
 7ec:	stp	x29, x30, [sp, #-32]!
 7f0:	stp	x20, x19, [sp, #16]
 7f4:	mov	x29, sp
 7f8:	bl	0 <form_userptr>
 7fc:	ldr	x19, [x0, #8]
 800:	ldr	x0, [x19, #56]
 804:	ldr	x20, [x19, #80]
 808:	bl	0 <current_field>
 80c:	bl	0 <field_index>
 810:	ldr	x8, [x19]
 814:	ldr	x1, [x20, w0, sxtw #3]
 818:	mov	x0, x19
 81c:	ldp	x20, x19, [sp, #16]
 820:	ldr	x2, [x8, #128]
 824:	ldp	x29, x30, [sp], #32
 828:	br	x2

000000000000082c <_ZN11NCursesFormD1Ev>:
 82c:	stp	x29, x30, [sp, #-48]!
 830:	stp	x22, x21, [sp, #16]
 834:	stp	x20, x19, [sp, #32]
 838:	mov	x29, sp
 83c:	adrp	x8, 20 <_ZN16NCursesFormFieldD1Ev+0x20>
 840:	mov	x19, x0
 844:	ldr	x0, [x0, #56]
 848:	ldr	x8, [x8]
 84c:	add	x8, x8, #0x10
 850:	str	x8, [x19]
 854:	bl	0 <form_userptr>
 858:	cbz	x0, 860 <_ZN11NCursesFormD1Ev+0x34>
 85c:	bl	0 <_ZdlPv>
 860:	ldrb	w8, [x19, #72]
 864:	cbz	w8, 888 <_ZN11NCursesFormD1Ev+0x5c>
 868:	ldr	x0, [x19, #64]
 86c:	cbz	x0, 87c <_ZN11NCursesFormD1Ev+0x50>
 870:	ldr	x8, [x0]
 874:	ldr	x8, [x8, #16]
 878:	blr	x8
 87c:	ldr	x0, [x19, #56]
 880:	mov	x1, xzr
 884:	bl	0 <set_form_sub>
 888:	ldr	x0, [x19, #56]
 88c:	cbz	x0, 918 <_ZN11NCursesFormD1Ev+0xec>
 890:	bl	0 <form_fields>
 894:	mov	x20, x0
 898:	ldr	x0, [x19, #56]
 89c:	bl	0 <field_count>
 8a0:	mov	w21, w0
 8a4:	ldr	x0, [x19, #56]
 8a8:	mov	x1, xzr
 8ac:	bl	0 <set_form_fields>
 8b0:	cbnz	w0, 930 <_ZN11NCursesFormD1Ev+0x104>
 8b4:	ldrb	w8, [x19, #74]
 8b8:	cbz	w8, 904 <_ZN11NCursesFormD1Ev+0xd8>
 8bc:	cmp	w21, #0x1
 8c0:	b.lt	8f8 <_ZN11NCursesFormD1Ev+0xcc>  // b.tstop
 8c4:	mov	x22, xzr
 8c8:	add	w21, w21, #0x1
 8cc:	b	8dc <_ZN11NCursesFormD1Ev+0xb0>
 8d0:	add	x22, x22, #0x1
 8d4:	cmp	x21, x22
 8d8:	b.eq	8f8 <_ZN11NCursesFormD1Ev+0xcc>  // b.none
 8dc:	ldr	x8, [x19, #80]
 8e0:	ldr	x0, [x8, x22, lsl #3]
 8e4:	cbz	x0, 8d0 <_ZN11NCursesFormD1Ev+0xa4>
 8e8:	ldr	x8, [x0]
 8ec:	ldr	x8, [x8, #8]
 8f0:	blr	x8
 8f4:	b	8d0 <_ZN11NCursesFormD1Ev+0xa4>
 8f8:	ldr	x0, [x19, #80]
 8fc:	cbz	x0, 904 <_ZN11NCursesFormD1Ev+0xd8>
 900:	bl	0 <_ZdaPv>
 904:	ldr	x0, [x19, #56]
 908:	bl	0 <free_form>
 90c:	cbz	x20, 918 <_ZN11NCursesFormD1Ev+0xec>
 910:	mov	x0, x20
 914:	bl	0 <_ZdaPv>
 918:	mov	x0, x19
 91c:	bl	0 <_ZN12NCursesPanelD2Ev>
 920:	ldp	x20, x19, [sp, #32]
 924:	ldp	x22, x21, [sp, #16]
 928:	ldp	x29, x30, [sp], #48
 92c:	ret
 930:	mov	w20, w0
 934:	mov	w0, #0x18                  	// #24
 938:	bl	0 <__cxa_allocate_exception>
 93c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 940:	ldr	x8, [x8]
 944:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 948:	add	x9, x9, #0x0
 94c:	str	w20, [x0, #16]
 950:	add	x8, x8, #0x10
 954:	stp	x8, x9, [x0]
 958:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 95c:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 960:	ldr	x1, [x1]
 964:	ldr	x2, [x2]
 968:	bl	0 <__cxa_throw>
 96c:	mov	x21, x1
 970:	mov	x20, x0
 974:	tbz	w21, #31, 9a0 <_ZN11NCursesFormD1Ev+0x174>
 978:	mov	x0, x20
 97c:	bl	0 <__cxa_call_unexpected>
 980:	b	998 <_ZN11NCursesFormD1Ev+0x16c>
 984:	mov	x21, x1
 988:	mov	x20, x0
 98c:	b	9a8 <_ZN11NCursesFormD1Ev+0x17c>
 990:	b	998 <_ZN11NCursesFormD1Ev+0x16c>
 994:	b	998 <_ZN11NCursesFormD1Ev+0x16c>
 998:	mov	x21, x1
 99c:	mov	x20, x0
 9a0:	mov	x0, x19
 9a4:	bl	0 <_ZN12NCursesPanelD2Ev>
 9a8:	mov	x0, x20
 9ac:	tbz	w21, #31, 9b4 <_ZN11NCursesFormD1Ev+0x188>
 9b0:	bl	0 <__cxa_call_unexpected>
 9b4:	bl	0 <_Unwind_Resume>
 9b8:	bl	0 <_ZN16NCursesFormFieldD1Ev>

00000000000009bc <_ZN11NCursesFormD0Ev>:
 9bc:	stp	x29, x30, [sp, #-48]!
 9c0:	str	x21, [sp, #16]
 9c4:	stp	x20, x19, [sp, #32]
 9c8:	mov	x29, sp
 9cc:	mov	x19, x0
 9d0:	bl	82c <_ZN11NCursesFormD1Ev>
 9d4:	mov	x0, x19
 9d8:	ldp	x20, x19, [sp, #32]
 9dc:	ldr	x21, [sp, #16]
 9e0:	ldp	x29, x30, [sp], #48
 9e4:	b	0 <_ZdlPv>
 9e8:	mov	x20, x0
 9ec:	mov	x0, x19
 9f0:	mov	x21, x1
 9f4:	bl	0 <_ZdlPv>
 9f8:	mov	x0, x20
 9fc:	tbz	w21, #31, a04 <_ZN11NCursesFormD0Ev+0x48>
 a00:	bl	0 <__cxa_call_unexpected>
 a04:	bl	0 <_Unwind_Resume>

0000000000000a08 <_ZN11NCursesForm12setSubWindowER13NCursesWindow>:
 a08:	stp	x29, x30, [sp, #-32]!
 a0c:	stp	x20, x19, [sp, #16]
 a10:	mov	x29, sp
 a14:	mov	x19, x1
 a18:	mov	x20, x0
 a1c:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 a20:	tbz	w0, #0, a58 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x50>
 a24:	ldrb	w8, [x20, #72]
 a28:	cbz	w8, a40 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 a2c:	ldr	x0, [x20, #64]
 a30:	cbz	x0, a40 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 a34:	ldr	x8, [x0]
 a38:	ldr	x8, [x8, #16]
 a3c:	blr	x8
 a40:	str	x19, [x20, #64]
 a44:	ldr	x0, [x20, #56]
 a48:	ldr	x1, [x19, #8]
 a4c:	ldp	x20, x19, [sp, #16]
 a50:	ldp	x29, x30, [sp], #32
 a54:	b	0 <set_form_sub>
 a58:	mov	w0, #0x18                  	// #24
 a5c:	bl	0 <__cxa_allocate_exception>
 a60:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 a64:	ldr	x8, [x8]
 a68:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 a6c:	add	x9, x9, #0x0
 a70:	mov	w10, #0xffffffff            	// #-1
 a74:	add	x8, x8, #0x10
 a78:	stp	x8, x9, [x0]
 a7c:	str	w10, [x0, #16]
 a80:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 a84:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 a88:	ldr	x1, [x1]
 a8c:	ldr	x2, [x2]
 a90:	bl	0 <__cxa_throw>
 a94:	bl	0 <__cxa_call_unexpected>

0000000000000a98 <_ZN11NCursesForm12On_Form_InitEv>:
 a98:	ret

0000000000000a9c <_ZN11NCursesForm19On_Form_TerminationEv>:
 a9c:	ret

0000000000000aa0 <_ZN11NCursesForm13On_Field_InitER16NCursesFormField>:
 aa0:	ret

0000000000000aa4 <_ZN11NCursesForm20On_Field_TerminationER16NCursesFormField>:
 aa4:	ret

0000000000000aa8 <_ZN11NCursesForm6driverEi>:
 aa8:	stp	x29, x30, [sp, #-32]!
 aac:	str	x19, [sp, #16]
 ab0:	mov	x29, sp
 ab4:	ldr	x0, [x0, #56]
 ab8:	bl	0 <form_driver>
 abc:	add	w8, w0, #0xd
 ac0:	cmp	w8, #0xd
 ac4:	b.hi	ae8 <_ZN11NCursesForm6driverEi+0x40>  // b.pmore
 ac8:	mov	w9, #0x1                   	// #1
 acc:	lsl	w8, w9, w8
 ad0:	mov	w9, #0x2023                	// #8227
 ad4:	tst	w8, w9
 ad8:	b.eq	ae8 <_ZN11NCursesForm6driverEi+0x40>  // b.none
 adc:	ldr	x19, [sp, #16]
 ae0:	ldp	x29, x30, [sp], #32
 ae4:	ret
 ae8:	mov	w19, w0
 aec:	mov	w0, #0x18                  	// #24
 af0:	bl	0 <__cxa_allocate_exception>
 af4:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 af8:	ldr	x8, [x8]
 afc:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 b00:	add	x9, x9, #0x0
 b04:	str	w19, [x0, #16]
 b08:	add	x8, x8, #0x10
 b0c:	stp	x8, x9, [x0]
 b10:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 b14:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 b18:	ldr	x1, [x1]
 b1c:	ldr	x2, [x2]
 b20:	bl	0 <__cxa_throw>
 b24:	bl	0 <__cxa_call_unexpected>

0000000000000b28 <_ZNK11NCursesForm17On_Request_DeniedEi>:
 b28:	b	0 <beep>

0000000000000b2c <_ZNK11NCursesForm16On_Invalid_FieldEi>:
 b2c:	b	0 <beep>

0000000000000b30 <_ZNK11NCursesForm18On_Unknown_CommandEi>:
 b30:	b	0 <beep>

0000000000000b34 <_ZN11NCursesFormclEv>:
 b34:	stp	x29, x30, [sp, #-48]!
 b38:	str	x21, [sp, #16]
 b3c:	stp	x20, x19, [sp, #32]
 b40:	mov	x29, sp
 b44:	mov	x19, x0
 b48:	ldr	x0, [x0, #56]
 b4c:	bl	0 <post_form>
 b50:	cbnz	w0, ccc <_ZN11NCursesFormclEv+0x198>
 b54:	ldr	x0, [x19, #48]
 b58:	bl	0 <show_panel>
 b5c:	cmn	w0, #0x1
 b60:	b.eq	d08 <_ZN11NCursesFormclEv+0x1d4>  // b.none
 b64:	ldr	x8, [x19]
 b68:	mov	x0, x19
 b6c:	ldr	x8, [x8, #32]
 b70:	blr	x8
 b74:	ldr	x8, [x19]
 b78:	mov	x0, x19
 b7c:	ldr	x8, [x8, #48]
 b80:	blr	x8
 b84:	ldr	x8, [x19]
 b88:	mov	w20, w0
 b8c:	mov	x0, x19
 b90:	mov	w1, w20
 b94:	ldr	x8, [x8, #136]
 b98:	blr	x8
 b9c:	cmp	w0, #0x280
 ba0:	b.ne	bf4 <_ZN11NCursesFormclEv+0xc0>  // b.any
 ba4:	ldr	x0, [x19, #56]
 ba8:	bl	0 <unpost_form>
 bac:	cbnz	w0, d44 <_ZN11NCursesFormclEv+0x210>
 bb0:	ldr	x0, [x19, #48]
 bb4:	bl	0 <hide_panel>
 bb8:	cmn	w0, #0x1
 bbc:	b.eq	d80 <_ZN11NCursesFormclEv+0x24c>  // b.none
 bc0:	ldr	x8, [x19]
 bc4:	mov	x0, x19
 bc8:	ldr	x8, [x8, #32]
 bcc:	blr	x8
 bd0:	ldr	x0, [x19, #56]
 bd4:	ldr	x20, [x19, #80]
 bd8:	bl	0 <current_field>
 bdc:	bl	0 <field_index>
 be0:	ldr	x0, [x20, w0, sxtw #3]
 be4:	ldp	x20, x19, [sp, #32]
 be8:	ldr	x21, [sp, #16]
 bec:	ldp	x29, x30, [sp], #48
 bf0:	ret
 bf4:	adrp	x21, 0 <_ZN16NCursesFormFieldD1Ev>
 bf8:	mov	w1, w0
 bfc:	add	x21, x21, #0x0
 c00:	b	c4c <_ZN11NCursesFormclEv+0x118>
 c04:	ldr	x8, [x19]
 c08:	ldr	x8, [x8, #168]
 c0c:	mov	x0, x19
 c10:	mov	w1, w20
 c14:	blr	x8
 c18:	ldr	x8, [x19]
 c1c:	mov	x0, x19
 c20:	ldr	x8, [x8, #48]
 c24:	blr	x8
 c28:	ldr	x8, [x19]
 c2c:	mov	w20, w0
 c30:	mov	x0, x19
 c34:	mov	w1, w20
 c38:	ldr	x8, [x8, #136]
 c3c:	blr	x8
 c40:	mov	w1, w0
 c44:	cmp	w0, #0x280
 c48:	b.eq	ba4 <_ZN11NCursesFormclEv+0x70>  // b.none
 c4c:	ldr	x8, [x19]
 c50:	mov	x0, x19
 c54:	ldr	x8, [x8, #88]
 c58:	blr	x8
 c5c:	add	w8, w0, #0xd
 c60:	cmp	w8, #0xd
 c64:	b.hi	c90 <_ZN11NCursesFormclEv+0x15c>  // b.pmore
 c68:	adr	x9, c04 <_ZN11NCursesFormclEv+0xd0>
 c6c:	ldrb	w10, [x21, x8]
 c70:	add	x9, x9, x10, lsl #2
 c74:	br	x9
 c78:	ldr	x8, [x19]
 c7c:	ldr	x8, [x8, #160]
 c80:	b	c0c <_ZN11NCursesFormclEv+0xd8>
 c84:	ldr	x8, [x19]
 c88:	ldr	x8, [x8, #152]
 c8c:	b	c0c <_ZN11NCursesFormclEv+0xd8>
 c90:	mov	w19, w0
 c94:	mov	w0, #0x18                  	// #24
 c98:	bl	0 <__cxa_allocate_exception>
 c9c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 ca0:	ldr	x8, [x8]
 ca4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 ca8:	add	x9, x9, #0x0
 cac:	str	w19, [x0, #16]
 cb0:	add	x8, x8, #0x10
 cb4:	stp	x8, x9, [x0]
 cb8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 cbc:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 cc0:	ldr	x1, [x1]
 cc4:	ldr	x2, [x2]
 cc8:	bl	0 <__cxa_throw>
 ccc:	mov	w20, w0
 cd0:	mov	w0, #0x18                  	// #24
 cd4:	bl	0 <__cxa_allocate_exception>
 cd8:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 cdc:	ldr	x8, [x8]
 ce0:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 ce4:	add	x9, x9, #0x0
 ce8:	str	w20, [x0, #16]
 cec:	add	x8, x8, #0x10
 cf0:	stp	x8, x9, [x0]
 cf4:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 cf8:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 cfc:	ldr	x1, [x1]
 d00:	ldr	x2, [x2]
 d04:	bl	0 <__cxa_throw>
 d08:	mov	w0, #0x18                  	// #24
 d0c:	bl	0 <__cxa_allocate_exception>
 d10:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 d14:	ldr	x8, [x8]
 d18:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d1c:	add	x9, x9, #0x0
 d20:	mov	w10, #0xffffffff            	// #-1
 d24:	add	x8, x8, #0x10
 d28:	stp	x8, x9, [x0]
 d2c:	str	w10, [x0, #16]
 d30:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 d34:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 d38:	ldr	x1, [x1]
 d3c:	ldr	x2, [x2]
 d40:	bl	0 <__cxa_throw>
 d44:	mov	w20, w0
 d48:	mov	w0, #0x18                  	// #24
 d4c:	bl	0 <__cxa_allocate_exception>
 d50:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 d54:	ldr	x8, [x8]
 d58:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d5c:	add	x9, x9, #0x0
 d60:	str	w20, [x0, #16]
 d64:	add	x8, x8, #0x10
 d68:	stp	x8, x9, [x0]
 d6c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 d70:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 d74:	ldr	x1, [x1]
 d78:	ldr	x2, [x2]
 d7c:	bl	0 <__cxa_throw>
 d80:	mov	w0, #0x18                  	// #24
 d84:	bl	0 <__cxa_allocate_exception>
 d88:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 d8c:	ldr	x8, [x8]
 d90:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d94:	add	x9, x9, #0x0
 d98:	mov	w10, #0xffffffff            	// #-1
 d9c:	add	x8, x8, #0x10
 da0:	stp	x8, x9, [x0]
 da4:	str	w10, [x0, #16]
 da8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 dac:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 db0:	ldr	x1, [x1]
 db4:	ldr	x2, [x2]
 db8:	bl	0 <__cxa_throw>
 dbc:	bl	0 <__cxa_call_unexpected>
 dc0:	bl	0 <__cxa_call_unexpected>
 dc4:	bl	0 <__cxa_call_unexpected>
 dc8:	bl	0 <__cxa_call_unexpected>
 dcc:	bl	0 <__cxa_call_unexpected>

0000000000000dd0 <_ZN11NCursesForm10virtualizeEi>:
 dd0:	sub	w8, w1, #0x1
 dd4:	cmp	w8, #0x106
 dd8:	b.hi	e00 <_ZN11NCursesForm10virtualizeEi+0x30>  // b.pmore
 ddc:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 de0:	add	x9, x9, #0x0
 de4:	adr	x10, df8 <_ZN11NCursesForm10virtualizeEi+0x28>
 de8:	ldrb	w11, [x9, x8]
 dec:	add	x10, x10, x11, lsl #2
 df0:	mov	w0, #0x206                 	// #518
 df4:	br	x10
 df8:	mov	w0, #0x222                 	// #546
 dfc:	ret
 e00:	sub	w8, w1, #0x14d
 e04:	cmp	w8, #0x1b
 e08:	b.hi	eec <_ZN11NCursesForm10virtualizeEi+0x11c>  // b.pmore
 e0c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 e10:	add	x9, x9, #0x0
 e14:	adr	x10, e24 <_ZN11NCursesForm10virtualizeEi+0x54>
 e18:	ldrb	w11, [x9, x8]
 e1c:	add	x10, x10, x11, lsl #2
 e20:	br	x10
 e24:	mov	w0, #0x227                 	// #551
 e28:	ret
 e2c:	mov	w0, #0x21e                 	// #542
 e30:	ret
 e34:	mov	w0, #0x216                 	// #534
 e38:	ret
 e3c:	mov	w0, #0x205                 	// #517
 e40:	ret
 e44:	mov	w0, #0x20f                 	// #527
 e48:	ret
 e4c:	mov	w0, #0x217                 	// #535
 e50:	ret
 e54:	mov	w0, #0x204                 	// #516
 e58:	ret
 e5c:	mov	w0, #0x224                 	// #548
 e60:	ret
 e64:	mov	w0, #0x21f                 	// #543
 e68:	ret
 e6c:	mov	w0, #0x226                 	// #550
 e70:	ret
 e74:	mov	w0, #0x20c                 	// #524
 e78:	ret
 e7c:	mov	w0, #0x237                 	// #567
 e80:	ret
 e84:	mov	w0, #0x220                 	// #544
 e88:	ret
 e8c:	mov	w0, #0x238                 	// #568
 e90:	ret
 e94:	mov	w0, #0x20d                 	// #525
 e98:	ret
 e9c:	mov	w0, #0x215                 	// #533
 ea0:	ret
 ea4:	mov	w0, #0x20e                 	// #526
 ea8:	ret
 eac:	mov	w0, #0x221                 	// #545
 eb0:	ret
 eb4:	mov	w0, #0x214                 	// #532
 eb8:	ret
 ebc:	mov	w0, #0x280                 	// #640
 ec0:	ret
 ec4:	mov	w0, #0x223                 	// #547
 ec8:	ret
 ecc:	mov	w0, #0x21d                 	// #541
 ed0:	ret
 ed4:	mov	w0, #0x21c                 	// #540
 ed8:	ret
 edc:	mov	w0, #0x211                 	// #529
 ee0:	ret
 ee4:	mov	w0, #0x210                 	// #528
 ee8:	ret
 eec:	mov	w0, w1
 ef0:	ret
 ef4:	mov	w0, #0x200                 	// #512
 ef8:	ret
 efc:	mov	w0, #0x201                 	// #513
 f00:	ret
 f04:	mov	w0, #0x207                 	// #519
 f08:	ret

0000000000000f0c <_nc_xx_fld_fcheck>:
 f0c:	ldr	x0, [x1, #16]
 f10:	ldr	x8, [x0]
 f14:	ldr	x2, [x8, #24]
 f18:	br	x2

0000000000000f1c <_nc_xx_fld_ccheck>:
 f1c:	ldr	x8, [x1, #16]
 f20:	mov	w1, w0
 f24:	ldr	x9, [x8]
 f28:	mov	x0, x8
 f2c:	ldr	x2, [x9, #32]
 f30:	br	x2

0000000000000f34 <_nc_xx_fld_makearg>:
 f34:	ldrsw	x8, [x0, #24]
 f38:	tbz	w8, #31, f5c <_nc_xx_fld_makearg+0x28>
 f3c:	add	w9, w8, #0x8
 f40:	cmn	w8, #0x8
 f44:	str	w9, [x0, #24]
 f48:	b.gt	f5c <_nc_xx_fld_makearg+0x28>
 f4c:	ldr	x9, [x0, #8]
 f50:	add	x8, x9, x8
 f54:	ldr	x0, [x8]
 f58:	ret
 f5c:	ldr	x8, [x0]
 f60:	add	x9, x8, #0x8
 f64:	str	x9, [x0]
 f68:	ldr	x0, [x8]
 f6c:	ret

0000000000000f70 <_nc_xx_next_choice>:
 f70:	ldr	x0, [x1, #16]
 f74:	ldr	x8, [x0]
 f78:	ldr	x2, [x8, #40]
 f7c:	br	x2

0000000000000f80 <_nc_xx_prev_choice>:
 f80:	ldr	x0, [x1, #16]
 f84:	ldr	x8, [x0]
 f88:	ldr	x2, [x8, #48]
 f8c:	br	x2

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm5frameEPKcS1_:

0000000000000000 <_ZN11NCursesForm5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesForm9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm5labelEPKcS1_:

0000000000000000 <_ZN11NCursesForm5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesf.cc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x19, f0c <_nc_xx_fld_fcheck>
  14:	adrp	x20, f1c <_nc_xx_fld_ccheck>
  18:	ldr	x19, [x19]
  1c:	ldr	x20, [x20]
  20:	mov	x0, x19
  24:	mov	x1, x20
  28:	bl	0 <new_fieldtype>
  2c:	adrp	x21, 0 <_GLOBAL__sub_I_cursesf.cc>
  30:	ldr	x21, [x21]
  34:	mov	x1, x20
  38:	str	x0, [x21]
  3c:	mov	x0, x19
  40:	bl	0 <new_fieldtype>
  44:	adrp	x20, 8 <_GLOBAL__sub_I_cursesf.cc+0x8>
  48:	ldr	x20, [x20]
  4c:	str	x0, [x20]
  50:	mov	w0, #0x4                   	// #4
  54:	bl	0 <_Znwm>
  58:	ldr	x8, [x21]
  5c:	mov	x19, x0
  60:	str	wzr, [x0]
  64:	adrp	x1, f34 <_nc_xx_fld_makearg>
  68:	ldr	x1, [x1]
  6c:	mov	x0, x8
  70:	mov	x2, xzr
  74:	mov	x3, xzr
  78:	bl	0 <set_fieldtype_arg>
  7c:	str	w0, [x19]
  80:	cbnz	w0, c0 <_GLOBAL__sub_I_cursesf.cc+0xc0>
  84:	ldr	x0, [x20]
  88:	adrp	x1, f34 <_nc_xx_fld_makearg>
  8c:	ldr	x1, [x1]
  90:	mov	x2, xzr
  94:	mov	x3, xzr
  98:	bl	0 <set_fieldtype_arg>
  9c:	str	w0, [x19]
  a0:	cbnz	w0, c0 <_GLOBAL__sub_I_cursesf.cc+0xc0>
  a4:	ldr	x0, [x20]
  a8:	adrp	x1, f70 <_nc_xx_next_choice>
  ac:	adrp	x2, f80 <_nc_xx_prev_choice>
  b0:	ldr	x1, [x1]
  b4:	ldr	x2, [x2]
  b8:	bl	0 <set_fieldtype_choice>
  bc:	str	w0, [x19]
  c0:	adrp	x8, 10 <_GLOBAL__sub_I_cursesf.cc+0x10>
  c4:	ldr	x8, [x8]
  c8:	ldr	x21, [sp, #16]
  cc:	str	x19, [x8]
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	mov	x20, x0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZdlPv>
  e8:	mov	x0, x20
  ec:	bl	0 <_Unwind_Resume>

cursesm.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN15NCursesMenuItemD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN15NCursesMenuItemD1Ev+0x30>
  28:	bl	0 <free_item>
  2c:	cbnz	w0, 3c <_ZN15NCursesMenuItemD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
  68:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN15NCursesMenuItemD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN15NCursesMenuItemD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN15NCursesMenuItem6actionEv>:
  cc:	mov	w0, wzr
  d0:	ret

00000000000000d4 <_ZN23NCursesMenuCallbackItemD0Ev>:
  d4:	stp	x29, x30, [sp, #-48]!
  d8:	str	x21, [sp, #16]
  dc:	stp	x20, x19, [sp, #32]
  e0:	mov	x29, sp
  e4:	mov	x19, x0
  e8:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  ec:	mov	x0, x19
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldr	x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	b	0 <_ZdlPv>
 100:	mov	x20, x0
 104:	mov	x0, x19
 108:	mov	x21, x1
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x20
 114:	tbz	w21, #31, 11c <_ZN23NCursesMenuCallbackItemD0Ev+0x48>
 118:	bl	0 <__cxa_call_unexpected>
 11c:	bl	0 <_Unwind_Resume>

0000000000000120 <_ZN23NCursesMenuCallbackItem6actionEv>:
 120:	ldr	x1, [x0, #16]
 124:	cbz	x1, 12c <_ZN23NCursesMenuCallbackItem6actionEv+0xc>
 128:	br	x1
 12c:	mov	w0, wzr
 130:	ret

0000000000000134 <_nc_xx_mnu_init>:
 134:	stp	x29, x30, [sp, #-16]!
 138:	mov	x29, sp
 13c:	bl	0 <menu_userptr>
 140:	ldr	x0, [x0, #8]
 144:	ldr	x8, [x0]
 148:	ldr	x1, [x8, #104]
 14c:	ldp	x29, x30, [sp], #16
 150:	br	x1

0000000000000154 <_nc_xx_mnu_term>:
 154:	stp	x29, x30, [sp, #-16]!
 158:	mov	x29, sp
 15c:	bl	0 <menu_userptr>
 160:	ldr	x0, [x0, #8]
 164:	ldr	x8, [x0]
 168:	ldr	x1, [x8, #112]
 16c:	ldp	x29, x30, [sp], #16
 170:	br	x1

0000000000000174 <_nc_xx_itm_init>:
 174:	stp	x29, x30, [sp, #-32]!
 178:	stp	x20, x19, [sp, #16]
 17c:	mov	x29, sp
 180:	bl	0 <menu_userptr>
 184:	ldr	x19, [x0, #8]
 188:	ldr	x0, [x19, #56]
 18c:	ldr	x20, [x19, #80]
 190:	bl	0 <current_item>
 194:	bl	0 <item_index>
 198:	ldr	x8, [x19]
 19c:	ldr	x1, [x20, w0, sxtw #3]
 1a0:	mov	x0, x19
 1a4:	ldp	x20, x19, [sp, #16]
 1a8:	ldr	x2, [x8, #120]
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	br	x2

00000000000001b4 <_nc_xx_itm_term>:
 1b4:	stp	x29, x30, [sp, #-32]!
 1b8:	stp	x20, x19, [sp, #16]
 1bc:	mov	x29, sp
 1c0:	bl	0 <menu_userptr>
 1c4:	ldr	x19, [x0, #8]
 1c8:	ldr	x0, [x19, #56]
 1cc:	ldr	x20, [x19, #80]
 1d0:	bl	0 <current_item>
 1d4:	bl	0 <item_index>
 1d8:	ldr	x8, [x19]
 1dc:	ldr	x1, [x20, w0, sxtw #3]
 1e0:	mov	x0, x19
 1e4:	ldp	x20, x19, [sp, #16]
 1e8:	ldr	x2, [x8, #128]
 1ec:	ldp	x29, x30, [sp], #32
 1f0:	br	x2

00000000000001f4 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>:
 1f4:	stp	x29, x30, [sp, #-48]!
 1f8:	stp	x22, x21, [sp, #16]
 1fc:	stp	x20, x19, [sp, #32]
 200:	mov	x29, sp
 204:	ldr	x8, [x1]
 208:	mov	x19, x1
 20c:	mov	x20, x0
 210:	ldr	x22, [x8, #8]
 214:	mov	w8, #0x1                   	// #1
 218:	cbz	x22, 230 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x3c>
 21c:	ldr	x9, [x19, x8, lsl #3]
 220:	add	x8, x8, #0x1
 224:	ldr	x9, [x9, #8]
 228:	cbnz	x9, 21c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x28>
 22c:	sxtw	x8, w8
 230:	lsl	x9, x8, #3
 234:	cmp	xzr, x8, lsr #61
 238:	csinv	x0, x9, xzr, eq  // eq = none
 23c:	bl	0 <_Znam>
 240:	mov	x21, x0
 244:	cbz	x22, 274 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x80>
 248:	add	x9, x19, #0x8
 24c:	mov	x8, x21
 250:	str	x22, [x8], #8
 254:	ldr	x10, [x9], #8
 258:	ldr	x22, [x10, #8]
 25c:	cbnz	x22, 250 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x5c>
 260:	str	xzr, [x8]
 264:	ldr	x0, [x20, #56]
 268:	str	x19, [x20, #80]
 26c:	cbnz	x0, 288 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x94>
 270:	b	294 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xa0>
 274:	mov	x8, x21
 278:	str	xzr, [x8]
 27c:	ldr	x0, [x20, #56]
 280:	str	x19, [x20, #80]
 284:	cbz	x0, 294 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xa0>
 288:	bl	0 <menu_items>
 28c:	cbz	x0, 294 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0xa0>
 290:	bl	0 <_ZdaPv>
 294:	mov	x0, x21
 298:	ldp	x20, x19, [sp, #32]
 29c:	ldp	x22, x21, [sp, #16]
 2a0:	ldp	x29, x30, [sp], #48
 2a4:	ret

00000000000002a8 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb>:
 2a8:	sub	sp, sp, #0x50
 2ac:	stp	x29, x30, [sp, #16]
 2b0:	stp	x24, x23, [sp, #32]
 2b4:	stp	x22, x21, [sp, #48]
 2b8:	stp	x20, x19, [sp, #64]
 2bc:	add	x29, sp, #0x10
 2c0:	mov	x19, x0
 2c4:	ldr	x0, [x0, #8]
 2c8:	mov	x21, x1
 2cc:	mov	w1, #0x1                   	// #1
 2d0:	mov	w20, w2
 2d4:	and	w22, w2, #0x1
 2d8:	and	w24, w3, #0x1
 2dc:	mov	w23, #0x1                   	// #1
 2e0:	bl	0 <keypad>
 2e4:	ldr	x0, [x19, #8]
 2e8:	mov	w1, #0x1                   	// #1
 2ec:	bl	0 <meta>
 2f0:	strb	w22, [x19, #73]
 2f4:	strb	w24, [x19, #74]
 2f8:	str	xzr, [x19, #56]
 2fc:	ldr	x8, [x21]
 300:	ldr	x22, [x8, #8]
 304:	cbz	x22, 320 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x78>
 308:	mov	w8, #0x1                   	// #1
 30c:	ldr	x9, [x21, x8, lsl #3]
 310:	add	x8, x8, #0x1
 314:	ldr	x9, [x9, #8]
 318:	cbnz	x9, 30c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x64>
 31c:	sxtw	x23, w8
 320:	lsl	x8, x23, #3
 324:	cmp	xzr, x23, lsr #61
 328:	csinv	x0, x8, xzr, eq  // eq = none
 32c:	bl	0 <_Znam>
 330:	cbz	x22, 350 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0xa8>
 334:	add	x9, x21, #0x8
 338:	mov	x8, x0
 33c:	str	x22, [x8], #8
 340:	ldr	x10, [x9], #8
 344:	ldr	x22, [x10, #8]
 348:	cbnz	x22, 33c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x94>
 34c:	b	354 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0xac>
 350:	mov	x8, x0
 354:	str	xzr, [x8]
 358:	str	x21, [x19, #80]
 35c:	bl	0 <new_menu>
 360:	str	x0, [x19, #56]
 364:	cbz	x0, 50c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x264>
 368:	mov	x21, x0
 36c:	mov	w0, #0x18                  	// #24
 370:	bl	0 <_Znwm>
 374:	mov	x1, x0
 378:	stp	xzr, x19, [x0]
 37c:	str	x21, [x0, #16]
 380:	mov	x0, x21
 384:	bl	0 <set_menu_userptr>
 388:	adrp	x1, 134 <_nc_xx_mnu_init>
 38c:	ldr	x0, [x19, #56]
 390:	ldr	x1, [x1]
 394:	bl	0 <set_menu_init>
 398:	adrp	x1, 154 <_nc_xx_mnu_term>
 39c:	ldr	x0, [x19, #56]
 3a0:	ldr	x1, [x1]
 3a4:	bl	0 <set_menu_term>
 3a8:	adrp	x1, 174 <_nc_xx_itm_init>
 3ac:	ldr	x0, [x19, #56]
 3b0:	ldr	x1, [x1]
 3b4:	bl	0 <set_item_init>
 3b8:	adrp	x1, 1b4 <_nc_xx_itm_term>
 3bc:	ldr	x0, [x19, #56]
 3c0:	ldr	x1, [x1]
 3c4:	bl	0 <set_item_term>
 3c8:	ldr	x0, [x19, #56]
 3cc:	sub	x1, x29, #0x4
 3d0:	add	x2, sp, #0x8
 3d4:	bl	0 <scale_menu>
 3d8:	cbnz	w0, 548 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x2a0>
 3dc:	ldr	x0, [x19, #56]
 3e0:	ldr	x1, [x19, #8]
 3e4:	bl	0 <set_menu_win>
 3e8:	tbz	w20, #0, 41c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x174>
 3ec:	ldr	x8, [x19, #8]
 3f0:	ldur	w20, [x29, #-4]
 3f4:	cbz	x8, 428 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x180>
 3f8:	ldrh	w9, [x8, #4]
 3fc:	mov	w10, #0xfffe                	// #65534
 400:	cmp	w9, w10
 404:	csinv	w9, w9, wzr, ne  // ne = any
 408:	sxth	w9, w9
 40c:	sub	w9, w9, #0x1
 410:	cmp	w20, w9
 414:	b.le	434 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x18c>
 418:	b	4d0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 41c:	mov	w8, wzr
 420:	str	xzr, [x19, #64]
 424:	b	498 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1f0>
 428:	mov	w9, #0xfffffffe            	// #-2
 42c:	cmp	w20, w9
 430:	b.gt	4d0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 434:	ldr	w21, [sp, #8]
 438:	cbz	x8, 4c4 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x21c>
 43c:	ldrh	w8, [x8, #6]
 440:	mov	w9, #0xfffe                	// #65534
 444:	cmp	w8, w9
 448:	csinv	w8, w8, wzr, ne  // ne = any
 44c:	sxth	w8, w8
 450:	sub	w8, w8, #0x1
 454:	cmp	w21, w8
 458:	b.gt	4d0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 45c:	mov	w0, #0x30                  	// #48
 460:	bl	0 <_Znwm>
 464:	mov	x22, x0
 468:	mov	w4, #0x1                   	// #1
 46c:	mov	w5, #0x1                   	// #1
 470:	mov	w6, #0x72                  	// #114
 474:	mov	x1, x19
 478:	mov	w2, w20
 47c:	mov	w3, w21
 480:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 484:	str	x22, [x19, #64]
 488:	ldr	x0, [x19, #56]
 48c:	ldr	x1, [x22, #8]
 490:	bl	0 <set_menu_sub>
 494:	mov	w8, #0x1                   	// #1
 498:	ldr	x9, [x19]
 49c:	strb	w8, [x19, #72]
 4a0:	mov	x0, x19
 4a4:	ldr	x8, [x9, #96]
 4a8:	blr	x8
 4ac:	ldp	x20, x19, [sp, #64]
 4b0:	ldp	x22, x21, [sp, #48]
 4b4:	ldp	x24, x23, [sp, #32]
 4b8:	ldp	x29, x30, [sp, #16]
 4bc:	add	sp, sp, #0x50
 4c0:	ret
 4c4:	mov	w8, #0xfffffffe            	// #-2
 4c8:	cmp	w21, w8
 4cc:	b.le	45c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b4>
 4d0:	mov	w0, #0x18                  	// #24
 4d4:	bl	0 <__cxa_allocate_exception>
 4d8:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 4dc:	ldr	x8, [x8]
 4e0:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 4e4:	add	x9, x9, #0x0
 4e8:	mov	w10, #0xfffffffa            	// #-6
 4ec:	add	x8, x8, #0x10
 4f0:	stp	x8, x9, [x0]
 4f4:	str	w10, [x0, #16]
 4f8:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 4fc:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 500:	ldr	x1, [x1]
 504:	ldr	x2, [x2]
 508:	bl	0 <__cxa_throw>
 50c:	mov	w0, #0x18                  	// #24
 510:	bl	0 <__cxa_allocate_exception>
 514:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 518:	ldr	x8, [x8]
 51c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 520:	add	x9, x9, #0x0
 524:	mov	w10, #0xffffffff            	// #-1
 528:	add	x8, x8, #0x10
 52c:	stp	x8, x9, [x0]
 530:	str	w10, [x0, #16]
 534:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 538:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 53c:	ldr	x1, [x1]
 540:	ldr	x2, [x2]
 544:	bl	0 <__cxa_throw>
 548:	mov	w21, w0
 54c:	mov	w0, #0x18                  	// #24
 550:	bl	0 <__cxa_allocate_exception>
 554:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 558:	ldr	x8, [x8]
 55c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 560:	add	x9, x9, #0x0
 564:	str	w21, [x0, #16]
 568:	add	x8, x8, #0x10
 56c:	stp	x8, x9, [x0]
 570:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 574:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 578:	ldr	x1, [x1]
 57c:	ldr	x2, [x2]
 580:	bl	0 <__cxa_throw>
 584:	bl	0 <__cxa_call_unexpected>
 588:	bl	0 <__cxa_call_unexpected>
 58c:	bl	0 <__cxa_call_unexpected>
 590:	mov	x19, x0
 594:	mov	x0, x22
 598:	bl	0 <_ZdlPv>
 59c:	mov	x0, x19
 5a0:	bl	0 <_Unwind_Resume>

00000000000005a4 <_ZN11NCursesMenu20setDefaultAttributesEv>:
 5a4:	stp	x29, x30, [sp, #-48]!
 5a8:	str	x21, [sp, #16]
 5ac:	stp	x20, x19, [sp, #32]
 5b0:	mov	x29, sp
 5b4:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 5b8:	ldr	x8, [x8]
 5bc:	ldr	x19, [x8]
 5c0:	cbz	x19, 634 <_ZN11NCursesMenu20setDefaultAttributesEv+0x90>
 5c4:	ldr	x8, [x19]
 5c8:	ldr	x21, [x0, #56]
 5cc:	mov	x20, x0
 5d0:	mov	x0, x19
 5d4:	ldr	x8, [x8, #72]
 5d8:	blr	x8
 5dc:	mov	w1, w0
 5e0:	mov	x0, x21
 5e4:	bl	0 <set_menu_fore>
 5e8:	ldr	x8, [x19]
 5ec:	ldr	x21, [x20, #56]
 5f0:	mov	x0, x19
 5f4:	ldr	x8, [x8, #80]
 5f8:	blr	x8
 5fc:	mov	w1, w0
 600:	mov	x0, x21
 604:	bl	0 <set_menu_back>
 608:	ldr	x8, [x19]
 60c:	ldr	x20, [x20, #56]
 610:	mov	x0, x19
 614:	ldr	x8, [x8, #88]
 618:	blr	x8
 61c:	mov	w1, w0
 620:	mov	x0, x20
 624:	ldp	x20, x19, [sp, #32]
 628:	ldr	x21, [sp, #16]
 62c:	ldp	x29, x30, [sp], #48
 630:	b	0 <set_menu_grey>
 634:	ldp	x20, x19, [sp, #32]
 638:	ldr	x21, [sp, #16]
 63c:	ldp	x29, x30, [sp], #48
 640:	ret

0000000000000644 <_ZN11NCursesMenuD1Ev>:
 644:	stp	x29, x30, [sp, #-48]!
 648:	stp	x22, x21, [sp, #16]
 64c:	stp	x20, x19, [sp, #32]
 650:	mov	x29, sp
 654:	adrp	x8, 28 <_ZN15NCursesMenuItemD1Ev+0x28>
 658:	mov	x19, x0
 65c:	ldr	x0, [x0, #56]
 660:	ldr	x8, [x8]
 664:	add	x8, x8, #0x10
 668:	str	x8, [x19]
 66c:	bl	0 <menu_userptr>
 670:	cbz	x0, 678 <_ZN11NCursesMenuD1Ev+0x34>
 674:	bl	0 <_ZdlPv>
 678:	ldrb	w8, [x19, #72]
 67c:	cbz	w8, 6a0 <_ZN11NCursesMenuD1Ev+0x5c>
 680:	ldr	x0, [x19, #56]
 684:	mov	x1, xzr
 688:	bl	0 <set_menu_sub>
 68c:	ldr	x0, [x19, #64]
 690:	cbz	x0, 6a0 <_ZN11NCursesMenuD1Ev+0x5c>
 694:	ldr	x8, [x0]
 698:	ldr	x8, [x8, #16]
 69c:	blr	x8
 6a0:	ldr	x0, [x19, #56]
 6a4:	cbz	x0, 730 <_ZN11NCursesMenuD1Ev+0xec>
 6a8:	bl	0 <menu_items>
 6ac:	mov	x20, x0
 6b0:	ldr	x0, [x19, #56]
 6b4:	bl	0 <item_count>
 6b8:	mov	w21, w0
 6bc:	ldr	x0, [x19, #56]
 6c0:	mov	x1, xzr
 6c4:	bl	0 <set_menu_items>
 6c8:	cbnz	w0, 748 <_ZN11NCursesMenuD1Ev+0x104>
 6cc:	ldrb	w8, [x19, #74]
 6d0:	cbz	w8, 71c <_ZN11NCursesMenuD1Ev+0xd8>
 6d4:	cmp	w21, #0x1
 6d8:	b.lt	710 <_ZN11NCursesMenuD1Ev+0xcc>  // b.tstop
 6dc:	mov	x22, xzr
 6e0:	add	w21, w21, #0x1
 6e4:	b	6f4 <_ZN11NCursesMenuD1Ev+0xb0>
 6e8:	add	x22, x22, #0x1
 6ec:	cmp	x21, x22
 6f0:	b.eq	710 <_ZN11NCursesMenuD1Ev+0xcc>  // b.none
 6f4:	ldr	x8, [x19, #80]
 6f8:	ldr	x0, [x8, x22, lsl #3]
 6fc:	cbz	x0, 6e8 <_ZN11NCursesMenuD1Ev+0xa4>
 700:	ldr	x8, [x0]
 704:	ldr	x8, [x8, #8]
 708:	blr	x8
 70c:	b	6e8 <_ZN11NCursesMenuD1Ev+0xa4>
 710:	ldr	x0, [x19, #80]
 714:	cbz	x0, 71c <_ZN11NCursesMenuD1Ev+0xd8>
 718:	bl	0 <_ZdaPv>
 71c:	ldr	x0, [x19, #56]
 720:	bl	0 <free_menu>
 724:	cbz	x20, 730 <_ZN11NCursesMenuD1Ev+0xec>
 728:	mov	x0, x20
 72c:	bl	0 <_ZdaPv>
 730:	mov	x0, x19
 734:	bl	0 <_ZN12NCursesPanelD2Ev>
 738:	ldp	x20, x19, [sp, #32]
 73c:	ldp	x22, x21, [sp, #16]
 740:	ldp	x29, x30, [sp], #48
 744:	ret
 748:	mov	w20, w0
 74c:	mov	w0, #0x18                  	// #24
 750:	bl	0 <__cxa_allocate_exception>
 754:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 758:	ldr	x8, [x8]
 75c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 760:	add	x9, x9, #0x0
 764:	str	w20, [x0, #16]
 768:	add	x8, x8, #0x10
 76c:	stp	x8, x9, [x0]
 770:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 774:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 778:	ldr	x1, [x1]
 77c:	ldr	x2, [x2]
 780:	bl	0 <__cxa_throw>
 784:	mov	x21, x1
 788:	mov	x20, x0
 78c:	tbz	w21, #31, 7b8 <_ZN11NCursesMenuD1Ev+0x174>
 790:	mov	x0, x20
 794:	bl	0 <__cxa_call_unexpected>
 798:	b	7b0 <_ZN11NCursesMenuD1Ev+0x16c>
 79c:	mov	x21, x1
 7a0:	mov	x20, x0
 7a4:	b	7c0 <_ZN11NCursesMenuD1Ev+0x17c>
 7a8:	b	7b0 <_ZN11NCursesMenuD1Ev+0x16c>
 7ac:	b	7b0 <_ZN11NCursesMenuD1Ev+0x16c>
 7b0:	mov	x21, x1
 7b4:	mov	x20, x0
 7b8:	mov	x0, x19
 7bc:	bl	0 <_ZN12NCursesPanelD2Ev>
 7c0:	mov	x0, x20
 7c4:	tbz	w21, #31, 7cc <_ZN11NCursesMenuD1Ev+0x188>
 7c8:	bl	0 <__cxa_call_unexpected>
 7cc:	bl	0 <_Unwind_Resume>
 7d0:	bl	0 <_ZN15NCursesMenuItemD1Ev>

00000000000007d4 <_ZN11NCursesMenuD0Ev>:
 7d4:	stp	x29, x30, [sp, #-48]!
 7d8:	str	x21, [sp, #16]
 7dc:	stp	x20, x19, [sp, #32]
 7e0:	mov	x29, sp
 7e4:	mov	x19, x0
 7e8:	bl	644 <_ZN11NCursesMenuD1Ev>
 7ec:	mov	x0, x19
 7f0:	ldp	x20, x19, [sp, #32]
 7f4:	ldr	x21, [sp, #16]
 7f8:	ldp	x29, x30, [sp], #48
 7fc:	b	0 <_ZdlPv>
 800:	mov	x20, x0
 804:	mov	x0, x19
 808:	mov	x21, x1
 80c:	bl	0 <_ZdlPv>
 810:	mov	x0, x20
 814:	tbz	w21, #31, 81c <_ZN11NCursesMenuD0Ev+0x48>
 818:	bl	0 <__cxa_call_unexpected>
 81c:	bl	0 <_Unwind_Resume>

0000000000000820 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow>:
 820:	stp	x29, x30, [sp, #-32]!
 824:	stp	x20, x19, [sp, #16]
 828:	mov	x29, sp
 82c:	mov	x19, x1
 830:	mov	x20, x0
 834:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 838:	tbz	w0, #0, 870 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x50>
 83c:	ldrb	w8, [x20, #72]
 840:	cbz	w8, 858 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 844:	ldr	x0, [x20, #64]
 848:	cbz	x0, 858 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 84c:	ldr	x8, [x0]
 850:	ldr	x8, [x8, #16]
 854:	blr	x8
 858:	str	x19, [x20, #64]
 85c:	ldr	x0, [x20, #56]
 860:	ldr	x1, [x19, #8]
 864:	ldp	x20, x19, [sp, #16]
 868:	ldp	x29, x30, [sp], #32
 86c:	b	0 <set_menu_sub>
 870:	mov	w0, #0x18                  	// #24
 874:	bl	0 <__cxa_allocate_exception>
 878:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 87c:	ldr	x8, [x8]
 880:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 884:	add	x9, x9, #0x0
 888:	mov	w10, #0xffffffff            	// #-1
 88c:	add	x8, x8, #0x10
 890:	stp	x8, x9, [x0]
 894:	str	w10, [x0, #16]
 898:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 89c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 8a0:	ldr	x1, [x1]
 8a4:	ldr	x2, [x2]
 8a8:	bl	0 <__cxa_throw>
 8ac:	bl	0 <__cxa_call_unexpected>

00000000000008b0 <_ZN11NCursesMenu11set_patternEPKc>:
 8b0:	stp	x29, x30, [sp, #-32]!
 8b4:	str	x19, [sp, #16]
 8b8:	mov	x29, sp
 8bc:	ldr	x0, [x0, #56]
 8c0:	bl	0 <set_menu_pattern>
 8c4:	cmn	w0, #0x9
 8c8:	b.eq	8e0 <_ZN11NCursesMenu11set_patternEPKc+0x30>  // b.none
 8cc:	cbnz	w0, 8f0 <_ZN11NCursesMenu11set_patternEPKc+0x40>
 8d0:	mov	w0, #0x1                   	// #1
 8d4:	ldr	x19, [sp, #16]
 8d8:	ldp	x29, x30, [sp], #32
 8dc:	ret
 8e0:	mov	w0, wzr
 8e4:	ldr	x19, [sp, #16]
 8e8:	ldp	x29, x30, [sp], #32
 8ec:	ret
 8f0:	mov	w19, w0
 8f4:	mov	w0, #0x18                  	// #24
 8f8:	bl	0 <__cxa_allocate_exception>
 8fc:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 900:	ldr	x8, [x8]
 904:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 908:	add	x9, x9, #0x0
 90c:	str	w19, [x0, #16]
 910:	add	x8, x8, #0x10
 914:	stp	x8, x9, [x0]
 918:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 91c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 920:	ldr	x1, [x1]
 924:	ldr	x2, [x2]
 928:	bl	0 <__cxa_throw>
 92c:	bl	0 <__cxa_call_unexpected>

0000000000000930 <_ZN11NCursesMenu6driverEi>:
 930:	stp	x29, x30, [sp, #-32]!
 934:	str	x19, [sp, #16]
 938:	mov	x29, sp
 93c:	ldr	x0, [x0, #56]
 940:	bl	0 <menu_driver>
 944:	add	w8, w0, #0xc
 948:	cmp	w8, #0xc
 94c:	b.hi	970 <_ZN11NCursesMenu6driverEi+0x40>  // b.pmore
 950:	mov	w9, #0x1                   	// #1
 954:	lsl	w8, w9, w8
 958:	mov	w9, #0x101d                	// #4125
 95c:	tst	w8, w9
 960:	b.eq	970 <_ZN11NCursesMenu6driverEi+0x40>  // b.none
 964:	ldr	x19, [sp, #16]
 968:	ldp	x29, x30, [sp], #32
 96c:	ret
 970:	mov	w19, w0
 974:	mov	w0, #0x18                  	// #24
 978:	bl	0 <__cxa_allocate_exception>
 97c:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 980:	ldr	x8, [x8]
 984:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 988:	add	x9, x9, #0x0
 98c:	str	w19, [x0, #16]
 990:	add	x8, x8, #0x10
 994:	stp	x8, x9, [x0]
 998:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 99c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 9a0:	ldr	x1, [x1]
 9a4:	ldr	x2, [x2]
 9a8:	bl	0 <__cxa_throw>
 9ac:	bl	0 <__cxa_call_unexpected>

00000000000009b0 <_ZN11NCursesMenu10virtualizeEi>:
 9b0:	cmp	w1, #0x101
 9b4:	b.gt	9e8 <_ZN11NCursesMenu10virtualizeEi+0x38>
 9b8:	sub	w8, w1, #0x1
 9bc:	cmp	w8, #0x18
 9c0:	b.hi	ab4 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 9c4:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 9c8:	add	x9, x9, #0x0
 9cc:	adr	x10, 9e0 <_ZN11NCursesMenu10virtualizeEi+0x30>
 9d0:	ldrb	w11, [x9, x8]
 9d4:	add	x10, x10, x11, lsl #2
 9d8:	mov	w0, #0x280                 	// #640
 9dc:	br	x10
 9e0:	mov	w0, #0x281                 	// #641
 9e4:	ret
 9e8:	cmp	w1, #0x151
 9ec:	b.gt	a1c <_ZN11NCursesMenu10virtualizeEi+0x6c>
 9f0:	sub	w8, w1, #0x102
 9f4:	cmp	w8, #0x5
 9f8:	b.hi	ab4 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 9fc:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 a00:	add	x9, x9, #0x0
 a04:	adr	x10, a14 <_ZN11NCursesMenu10virtualizeEi+0x64>
 a08:	ldrb	w11, [x9, x8]
 a0c:	add	x10, x10, x11, lsl #2
 a10:	br	x10
 a14:	mov	w0, #0x203                 	// #515
 a18:	ret
 a1c:	cmp	w1, #0x152
 a20:	b.eq	a44 <_ZN11NCursesMenu10virtualizeEi+0x94>  // b.none
 a24:	cmp	w1, #0x153
 a28:	b.eq	a4c <_ZN11NCursesMenu10virtualizeEi+0x9c>  // b.none
 a2c:	cmp	w1, #0x168
 a30:	b.ne	ab4 <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.any
 a34:	mov	w0, #0x209                 	// #521
 a38:	ret
 a3c:	mov	w0, #0x20e                 	// #526
 a40:	ret
 a44:	mov	w0, #0x206                 	// #518
 a48:	ret
 a4c:	mov	w0, #0x207                 	// #519
 a50:	ret
 a54:	mov	w0, #0x20f                 	// #527
 a58:	ret
 a5c:	mov	w0, #0x205                 	// #517
 a60:	ret
 a64:	mov	w0, #0x210                 	// #528
 a68:	ret
 a6c:	mov	w0, #0x20a                 	// #522
 a70:	ret
 a74:	mov	w0, #0x20b                 	// #523
 a78:	ret
 a7c:	mov	w0, #0x20c                 	// #524
 a80:	ret
 a84:	mov	w0, #0x204                 	// #516
 a88:	ret
 a8c:	mov	w0, #0x20d                 	// #525
 a90:	ret
 a94:	mov	w0, #0x202                 	// #514
 a98:	ret
 a9c:	mov	w0, #0x200                 	// #512
 aa0:	ret
 aa4:	mov	w0, #0x201                 	// #513
 aa8:	ret
 aac:	mov	w0, #0x208                 	// #520
 ab0:	ret
 ab4:	mov	w0, w1
 ab8:	ret

0000000000000abc <_ZN11NCursesMenuclEv>:
 abc:	stp	x29, x30, [sp, #-64]!
 ac0:	stp	x24, x23, [sp, #16]
 ac4:	stp	x22, x21, [sp, #32]
 ac8:	stp	x20, x19, [sp, #48]
 acc:	mov	x29, sp
 ad0:	mov	x19, x0
 ad4:	ldr	x0, [x0, #56]
 ad8:	bl	0 <post_menu>
 adc:	cbnz	w0, d54 <_ZN11NCursesMenuclEv+0x298>
 ae0:	ldr	x0, [x19, #48]
 ae4:	bl	0 <show_panel>
 ae8:	cmn	w0, #0x1
 aec:	b.eq	d90 <_ZN11NCursesMenuclEv+0x2d4>  // b.none
 af0:	ldr	x8, [x19]
 af4:	mov	x0, x19
 af8:	ldr	x8, [x8, #32]
 afc:	blr	x8
 b00:	ldr	x8, [x19]
 b04:	mov	x0, x19
 b08:	ldr	x8, [x8, #48]
 b0c:	blr	x8
 b10:	ldr	x8, [x19]
 b14:	mov	w20, w0
 b18:	mov	x0, x19
 b1c:	mov	w1, w20
 b20:	ldr	x8, [x8, #136]
 b24:	blr	x8
 b28:	cmp	w0, #0x280
 b2c:	b.ne	b70 <_ZN11NCursesMenuclEv+0xb4>  // b.any
 b30:	ldr	x0, [x19, #56]
 b34:	bl	0 <unpost_menu>
 b38:	cbnz	w0, dcc <_ZN11NCursesMenuclEv+0x310>
 b3c:	ldr	x0, [x19, #48]
 b40:	bl	0 <hide_panel>
 b44:	cmn	w0, #0x1
 b48:	b.eq	e08 <_ZN11NCursesMenuclEv+0x34c>  // b.none
 b4c:	ldr	x8, [x19]
 b50:	mov	x0, x19
 b54:	ldr	x8, [x8, #32]
 b58:	blr	x8
 b5c:	ldr	x0, [x19, #56]
 b60:	bl	0 <menu_opts>
 b64:	tbnz	w0, #0, cf0 <_ZN11NCursesMenuclEv+0x234>
 b68:	mov	x0, xzr
 b6c:	b	d04 <_ZN11NCursesMenuclEv+0x248>
 b70:	adrp	x22, 0 <_ZN15NCursesMenuItemD1Ev>
 b74:	mov	w21, w0
 b78:	add	x22, x22, #0x0
 b7c:	b	bc8 <_ZN11NCursesMenuclEv+0x10c>
 b80:	ldr	x8, [x19]
 b84:	ldr	x8, [x8, #160]
 b88:	mov	x0, x19
 b8c:	mov	w1, w20
 b90:	blr	x8
 b94:	ldr	x8, [x19]
 b98:	mov	x0, x19
 b9c:	ldr	x8, [x8, #48]
 ba0:	blr	x8
 ba4:	ldr	x8, [x19]
 ba8:	mov	w20, w0
 bac:	mov	x0, x19
 bb0:	mov	w1, w20
 bb4:	ldr	x8, [x8, #136]
 bb8:	blr	x8
 bbc:	mov	w21, w0
 bc0:	cmp	w0, #0x280
 bc4:	b.eq	b30 <_ZN11NCursesMenuclEv+0x74>  // b.none
 bc8:	ldr	x8, [x19]
 bcc:	mov	x0, x19
 bd0:	mov	w1, w21
 bd4:	ldr	x8, [x8, #88]
 bd8:	blr	x8
 bdc:	add	w8, w0, #0xc
 be0:	cmp	w8, #0xc
 be4:	b.hi	d18 <_ZN11NCursesMenuclEv+0x25c>  // b.pmore
 be8:	adr	x9, b80 <_ZN11NCursesMenuclEv+0xc4>
 bec:	ldrb	w10, [x22, x8]
 bf0:	add	x9, x9, x10, lsl #2
 bf4:	br	x9
 bf8:	ldr	x8, [x19]
 bfc:	ldr	x8, [x8, #152]
 c00:	b	b88 <_ZN11NCursesMenuclEv+0xcc>
 c04:	ldr	x8, [x19]
 c08:	ldr	x8, [x8, #168]
 c0c:	b	b88 <_ZN11NCursesMenuclEv+0xcc>
 c10:	cmp	w21, #0x281
 c14:	b.ne	c90 <_ZN11NCursesMenuclEv+0x1d4>  // b.any
 c18:	ldr	x0, [x19, #56]
 c1c:	bl	0 <menu_opts>
 c20:	tbnz	w0, #0, c9c <_ZN11NCursesMenuclEv+0x1e0>
 c24:	ldr	x0, [x19, #56]
 c28:	bl	0 <item_count>
 c2c:	cmp	w0, #0x1
 c30:	b.lt	b94 <_ZN11NCursesMenuclEv+0xd8>  // b.tstop
 c34:	mov	w8, w0
 c38:	mov	x23, xzr
 c3c:	mov	w21, wzr
 c40:	lsl	x24, x8, #3
 c44:	b	c54 <_ZN11NCursesMenuclEv+0x198>
 c48:	add	x23, x23, #0x8
 c4c:	cmp	x24, x23
 c50:	b.eq	ce8 <_ZN11NCursesMenuclEv+0x22c>  // b.none
 c54:	ldr	x8, [x19, #80]
 c58:	ldr	x20, [x8, x23]
 c5c:	ldr	x0, [x20, #8]
 c60:	bl	0 <item_value>
 c64:	tbz	w0, #0, c48 <_ZN11NCursesMenuclEv+0x18c>
 c68:	ldr	x8, [x20]
 c6c:	mov	x0, x20
 c70:	ldr	x8, [x8, #16]
 c74:	blr	x8
 c78:	ldr	x8, [x19]
 c7c:	orr	w21, w21, w0
 c80:	mov	x0, x19
 c84:	ldr	x8, [x8, #32]
 c88:	blr	x8
 c8c:	b	c48 <_ZN11NCursesMenuclEv+0x18c>
 c90:	ldr	x8, [x19]
 c94:	ldr	x8, [x8, #176]
 c98:	b	b88 <_ZN11NCursesMenuclEv+0xcc>
 c9c:	ldr	x0, [x19, #56]
 ca0:	ldr	x21, [x19, #80]
 ca4:	bl	0 <current_item>
 ca8:	bl	0 <item_index>
 cac:	ldr	x21, [x21, w0, sxtw #3]
 cb0:	ldr	x0, [x21, #8]
 cb4:	bl	0 <item_opts>
 cb8:	tbz	w0, #0, b80 <_ZN11NCursesMenuclEv+0xc4>
 cbc:	ldr	x8, [x21]
 cc0:	mov	x0, x21
 cc4:	ldr	x8, [x8, #16]
 cc8:	blr	x8
 ccc:	ldr	x8, [x19]
 cd0:	mov	w20, w0
 cd4:	mov	x0, x19
 cd8:	ldr	x8, [x8, #32]
 cdc:	blr	x8
 ce0:	tbz	w20, #0, b94 <_ZN11NCursesMenuclEv+0xd8>
 ce4:	b	b30 <_ZN11NCursesMenuclEv+0x74>
 ce8:	tbz	w21, #0, b94 <_ZN11NCursesMenuclEv+0xd8>
 cec:	b	b30 <_ZN11NCursesMenuclEv+0x74>
 cf0:	ldr	x0, [x19, #56]
 cf4:	ldr	x20, [x19, #80]
 cf8:	bl	0 <current_item>
 cfc:	bl	0 <item_index>
 d00:	ldr	x0, [x20, w0, sxtw #3]
 d04:	ldp	x20, x19, [sp, #48]
 d08:	ldp	x22, x21, [sp, #32]
 d0c:	ldp	x24, x23, [sp, #16]
 d10:	ldp	x29, x30, [sp], #64
 d14:	ret
 d18:	mov	w19, w0
 d1c:	mov	w0, #0x18                  	// #24
 d20:	bl	0 <__cxa_allocate_exception>
 d24:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d28:	ldr	x8, [x8]
 d2c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d30:	add	x9, x9, #0x0
 d34:	str	w19, [x0, #16]
 d38:	add	x8, x8, #0x10
 d3c:	stp	x8, x9, [x0]
 d40:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 d44:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d48:	ldr	x1, [x1]
 d4c:	ldr	x2, [x2]
 d50:	bl	0 <__cxa_throw>
 d54:	mov	w20, w0
 d58:	mov	w0, #0x18                  	// #24
 d5c:	bl	0 <__cxa_allocate_exception>
 d60:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d64:	ldr	x8, [x8]
 d68:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d6c:	add	x9, x9, #0x0
 d70:	str	w20, [x0, #16]
 d74:	add	x8, x8, #0x10
 d78:	stp	x8, x9, [x0]
 d7c:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 d80:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d84:	ldr	x1, [x1]
 d88:	ldr	x2, [x2]
 d8c:	bl	0 <__cxa_throw>
 d90:	mov	w0, #0x18                  	// #24
 d94:	bl	0 <__cxa_allocate_exception>
 d98:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d9c:	ldr	x8, [x8]
 da0:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 da4:	add	x9, x9, #0x0
 da8:	mov	w10, #0xffffffff            	// #-1
 dac:	add	x8, x8, #0x10
 db0:	stp	x8, x9, [x0]
 db4:	str	w10, [x0, #16]
 db8:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 dbc:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 dc0:	ldr	x1, [x1]
 dc4:	ldr	x2, [x2]
 dc8:	bl	0 <__cxa_throw>
 dcc:	mov	w20, w0
 dd0:	mov	w0, #0x18                  	// #24
 dd4:	bl	0 <__cxa_allocate_exception>
 dd8:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 ddc:	ldr	x8, [x8]
 de0:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 de4:	add	x9, x9, #0x0
 de8:	str	w20, [x0, #16]
 dec:	add	x8, x8, #0x10
 df0:	stp	x8, x9, [x0]
 df4:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 df8:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 dfc:	ldr	x1, [x1]
 e00:	ldr	x2, [x2]
 e04:	bl	0 <__cxa_throw>
 e08:	mov	w0, #0x18                  	// #24
 e0c:	bl	0 <__cxa_allocate_exception>
 e10:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 e14:	ldr	x8, [x8]
 e18:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 e1c:	add	x9, x9, #0x0
 e20:	mov	w10, #0xffffffff            	// #-1
 e24:	add	x8, x8, #0x10
 e28:	stp	x8, x9, [x0]
 e2c:	str	w10, [x0, #16]
 e30:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 e34:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 e38:	ldr	x1, [x1]
 e3c:	ldr	x2, [x2]
 e40:	bl	0 <__cxa_throw>
 e44:	bl	0 <__cxa_call_unexpected>
 e48:	bl	0 <__cxa_call_unexpected>
 e4c:	bl	0 <__cxa_call_unexpected>
 e50:	bl	0 <__cxa_call_unexpected>
 e54:	bl	0 <__cxa_call_unexpected>

0000000000000e58 <_ZN11NCursesMenu12On_Menu_InitEv>:
 e58:	ret

0000000000000e5c <_ZN11NCursesMenu19On_Menu_TerminationEv>:
 e5c:	ret

0000000000000e60 <_ZN11NCursesMenu12On_Item_InitER15NCursesMenuItem>:
 e60:	ret

0000000000000e64 <_ZN11NCursesMenu19On_Item_TerminationER15NCursesMenuItem>:
 e64:	ret

0000000000000e68 <_ZNK11NCursesMenu17On_Request_DeniedEi>:
 e68:	b	0 <beep>

0000000000000e6c <_ZNK11NCursesMenu17On_Not_SelectableEi>:
 e6c:	b	0 <beep>

0000000000000e70 <_ZNK11NCursesMenu11On_No_MatchEi>:
 e70:	b	0 <beep>

0000000000000e74 <_ZNK11NCursesMenu18On_Unknown_CommandEi>:
 e74:	b	0 <beep>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu5frameEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesMenu9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu5labelEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursesw.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN13NCursesWindow5scanwEPKcz>:
       0:	sub	sp, sp, #0x100
       4:	stp	x29, x30, [sp, #240]
       8:	add	x29, sp, #0xf0
       c:	mov	x8, #0xffffffffffffffd0    	// #-48
      10:	mov	x9, sp
      14:	sub	x10, x29, #0x70
      18:	movk	x8, #0xff80, lsl #32
      1c:	add	x11, x29, #0x10
      20:	add	x9, x9, #0x80
      24:	add	x10, x10, #0x30
      28:	stp	x2, x3, [x29, #-112]
      2c:	stp	x4, x5, [x29, #-96]
      30:	stp	x6, x7, [x29, #-80]
      34:	stp	q1, q2, [sp, #16]
      38:	stp	q3, q4, [sp, #48]
      3c:	str	q0, [sp]
      40:	stp	q5, q6, [sp, #80]
      44:	str	q7, [sp, #112]
      48:	stp	x9, x8, [x29, #-16]
      4c:	stp	x11, x10, [x29, #-32]
      50:	ldp	q0, q1, [x29, #-32]
      54:	ldr	x0, [x0, #8]
      58:	sub	x2, x29, #0x40
      5c:	stp	q0, q1, [x29, #-64]
      60:	bl	0 <vw_scanw>
      64:	ldp	x29, x30, [sp, #240]
      68:	add	sp, sp, #0x100
      6c:	ret

0000000000000070 <_ZN13NCursesWindow5scanwEiiPKcz>:
      70:	sub	sp, sp, #0x100
      74:	stp	x29, x30, [sp, #224]
      78:	stp	x20, x19, [sp, #240]
      7c:	add	x29, sp, #0xe0
      80:	stp	x4, x5, [x29, #-96]
      84:	stp	x6, x7, [x29, #-80]
      88:	stp	q0, q1, [sp]
      8c:	stp	q2, q3, [sp, #32]
      90:	stp	q4, q5, [sp, #64]
      94:	stp	q6, q7, [sp, #96]
      98:	mov	x20, x0
      9c:	ldr	x0, [x0, #8]
      a0:	mov	x19, x3
      a4:	bl	0 <wmove>
      a8:	cmn	w0, #0x1
      ac:	b.eq	ec <_ZN13NCursesWindow5scanwEiiPKcz+0x7c>  // b.none
      b0:	mov	x8, #0xffffffffffffffe0    	// #-32
      b4:	mov	x10, sp
      b8:	sub	x11, x29, #0x60
      bc:	movk	x8, #0xff80, lsl #32
      c0:	add	x9, x29, #0x20
      c4:	add	x10, x10, #0x80
      c8:	add	x11, x11, #0x20
      cc:	stp	x10, x8, [x29, #-16]
      d0:	stp	x9, x11, [x29, #-32]
      d4:	ldp	q0, q1, [x29, #-32]
      d8:	ldr	x0, [x20, #8]
      dc:	sub	x2, x29, #0x40
      e0:	mov	x1, x19
      e4:	stp	q0, q1, [x29, #-64]
      e8:	bl	0 <vw_scanw>
      ec:	ldp	x20, x19, [sp, #240]
      f0:	ldp	x29, x30, [sp, #224]
      f4:	add	sp, sp, #0x100
      f8:	ret

00000000000000fc <_ZN13NCursesWindow5scanwEPKcSt9__va_list>:
      fc:	sub	sp, sp, #0x30
     100:	stp	x29, x30, [sp, #32]
     104:	add	x29, sp, #0x20
     108:	ldp	q1, q0, [x2]
     10c:	ldr	x0, [x0, #8]
     110:	mov	x2, sp
     114:	stp	q1, q0, [sp]
     118:	bl	0 <vw_scanw>
     11c:	ldp	x29, x30, [sp, #32]
     120:	add	sp, sp, #0x30
     124:	ret

0000000000000128 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list>:
     128:	sub	sp, sp, #0x50
     12c:	stp	x29, x30, [sp, #32]
     130:	str	x21, [sp, #48]
     134:	stp	x20, x19, [sp, #64]
     138:	add	x29, sp, #0x20
     13c:	mov	x21, x0
     140:	ldr	x0, [x0, #8]
     144:	mov	x20, x4
     148:	mov	x19, x3
     14c:	bl	0 <wmove>
     150:	cmn	w0, #0x1
     154:	b.eq	170 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list+0x48>  // b.none
     158:	ldp	q1, q0, [x20]
     15c:	ldr	x0, [x21, #8]
     160:	mov	x2, sp
     164:	mov	x1, x19
     168:	stp	q1, q0, [sp]
     16c:	bl	0 <vw_scanw>
     170:	ldp	x20, x19, [sp, #64]
     174:	ldr	x21, [sp, #48]
     178:	ldp	x29, x30, [sp, #32]
     17c:	add	sp, sp, #0x50
     180:	ret

0000000000000184 <_ZN13NCursesWindow6printwEPKcz>:
     184:	sub	sp, sp, #0x100
     188:	stp	x29, x30, [sp, #240]
     18c:	add	x29, sp, #0xf0
     190:	mov	x8, #0xffffffffffffffd0    	// #-48
     194:	mov	x9, sp
     198:	sub	x10, x29, #0x70
     19c:	movk	x8, #0xff80, lsl #32
     1a0:	add	x11, x29, #0x10
     1a4:	add	x9, x9, #0x80
     1a8:	add	x10, x10, #0x30
     1ac:	stp	x2, x3, [x29, #-112]
     1b0:	stp	x4, x5, [x29, #-96]
     1b4:	stp	x6, x7, [x29, #-80]
     1b8:	stp	q1, q2, [sp, #16]
     1bc:	stp	q3, q4, [sp, #48]
     1c0:	str	q0, [sp]
     1c4:	stp	q5, q6, [sp, #80]
     1c8:	str	q7, [sp, #112]
     1cc:	stp	x9, x8, [x29, #-16]
     1d0:	stp	x11, x10, [x29, #-32]
     1d4:	ldp	q0, q1, [x29, #-32]
     1d8:	ldr	x0, [x0, #8]
     1dc:	sub	x2, x29, #0x40
     1e0:	stp	q0, q1, [x29, #-64]
     1e4:	bl	0 <vw_printw>
     1e8:	ldp	x29, x30, [sp, #240]
     1ec:	add	sp, sp, #0x100
     1f0:	ret

00000000000001f4 <_ZN13NCursesWindow6printwEiiPKcz>:
     1f4:	sub	sp, sp, #0x100
     1f8:	stp	x29, x30, [sp, #224]
     1fc:	stp	x20, x19, [sp, #240]
     200:	add	x29, sp, #0xe0
     204:	mov	x8, #0xffffffffffffffe0    	// #-32
     208:	mov	x9, sp
     20c:	sub	x10, x29, #0x60
     210:	movk	x8, #0xff80, lsl #32
     214:	add	x11, x29, #0x20
     218:	add	x9, x9, #0x80
     21c:	add	x10, x10, #0x20
     220:	stp	x4, x5, [x29, #-96]
     224:	stp	x6, x7, [x29, #-80]
     228:	stp	q0, q1, [sp]
     22c:	stp	q2, q3, [sp, #32]
     230:	stp	q4, q5, [sp, #64]
     234:	stp	q6, q7, [sp, #96]
     238:	stp	x9, x8, [x29, #-16]
     23c:	stp	x11, x10, [x29, #-32]
     240:	mov	x20, x0
     244:	ldr	x0, [x0, #8]
     248:	mov	x19, x3
     24c:	bl	0 <wmove>
     250:	cbz	w0, 264 <_ZN13NCursesWindow6printwEiiPKcz+0x70>
     254:	ldp	x20, x19, [sp, #240]
     258:	ldp	x29, x30, [sp, #224]
     25c:	add	sp, sp, #0x100
     260:	ret
     264:	ldp	q0, q1, [x29, #-32]
     268:	ldr	x0, [x20, #8]
     26c:	sub	x2, x29, #0x40
     270:	mov	x1, x19
     274:	stp	q0, q1, [x29, #-64]
     278:	bl	0 <vw_printw>
     27c:	ldp	x20, x19, [sp, #240]
     280:	ldp	x29, x30, [sp, #224]
     284:	add	sp, sp, #0x100
     288:	ret

000000000000028c <_ZN13NCursesWindow6printwEPKcSt9__va_list>:
     28c:	sub	sp, sp, #0x30
     290:	stp	x29, x30, [sp, #32]
     294:	add	x29, sp, #0x20
     298:	ldp	q1, q0, [x2]
     29c:	ldr	x0, [x0, #8]
     2a0:	mov	x2, sp
     2a4:	stp	q1, q0, [sp]
     2a8:	bl	0 <vw_printw>
     2ac:	ldp	x29, x30, [sp, #32]
     2b0:	add	sp, sp, #0x30
     2b4:	ret

00000000000002b8 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list>:
     2b8:	sub	sp, sp, #0x50
     2bc:	stp	x29, x30, [sp, #32]
     2c0:	str	x21, [sp, #48]
     2c4:	stp	x20, x19, [sp, #64]
     2c8:	add	x29, sp, #0x20
     2cc:	mov	x21, x0
     2d0:	ldr	x0, [x0, #8]
     2d4:	mov	x20, x4
     2d8:	mov	x19, x3
     2dc:	bl	0 <wmove>
     2e0:	cbnz	w0, 2fc <_ZN13NCursesWindow6printwEiiPKcSt9__va_list+0x44>
     2e4:	ldp	q1, q0, [x20]
     2e8:	ldr	x0, [x21, #8]
     2ec:	mov	x2, sp
     2f0:	mov	x1, x19
     2f4:	stp	q1, q0, [sp]
     2f8:	bl	0 <vw_printw>
     2fc:	ldp	x20, x19, [sp, #64]
     300:	ldr	x21, [sp, #48]
     304:	ldp	x29, x30, [sp, #32]
     308:	add	sp, sp, #0x50
     30c:	ret

0000000000000310 <_ZN13NCursesWindow12set_keyboardEv>:
     310:	stp	x29, x30, [sp, #-32]!
     314:	str	x19, [sp, #16]
     318:	mov	x29, sp
     31c:	mov	x19, x0
     320:	ldr	x0, [x0, #8]
     324:	mov	w1, #0x1                   	// #1
     328:	bl	0 <keypad>
     32c:	ldr	x0, [x19, #8]
     330:	ldr	x19, [sp, #16]
     334:	mov	w1, #0x1                   	// #1
     338:	ldp	x29, x30, [sp], #32
     33c:	b	0 <meta>

0000000000000340 <_ZNK13NCursesWindow11err_handlerEPKc>:
     340:	stp	x29, x30, [sp, #-32]!
     344:	str	x19, [sp, #16]
     348:	mov	x29, sp
     34c:	mov	w0, #0x18                  	// #24
     350:	mov	x19, x1
     354:	bl	0 <__cxa_allocate_exception>
     358:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     35c:	ldr	x8, [x8]
     360:	mov	w9, #0xffffffff            	// #-1
     364:	str	w9, [x0, #16]
     368:	add	x8, x8, #0x10
     36c:	stp	x8, x19, [x0]
     370:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     374:	adrp	x2, 0 <_ZN13NCursesWindow5scanwEPKcz>
     378:	ldr	x1, [x1]
     37c:	ldr	x2, [x2]
     380:	bl	0 <__cxa_throw>
     384:	bl	0 <__cxa_call_unexpected>

0000000000000388 <_ZN13NCursesWindow10initializeEv>:
     388:	stp	x29, x30, [sp, #-32]!
     38c:	stp	x20, x19, [sp, #16]
     390:	mov	x29, sp
     394:	adrp	x20, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     398:	ldr	x20, [x20]
     39c:	ldrb	w8, [x20]
     3a0:	cbz	w8, 3b0 <_ZN13NCursesWindow10initializeEv+0x28>
     3a4:	ldp	x20, x19, [sp, #16]
     3a8:	ldp	x29, x30, [sp], #32
     3ac:	ret
     3b0:	bl	0 <initscr>
     3b4:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     3b8:	ldr	x19, [x19]
     3bc:	mov	w9, #0x1                   	// #1
     3c0:	strb	w9, [x20]
     3c4:	ldr	w8, [x19]
     3c8:	cmn	w8, #0x1
     3cc:	b.eq	3e0 <_ZN13NCursesWindow10initializeEv+0x58>  // b.none
     3d0:	bl	0 <noecho>
     3d4:	ldp	x20, x19, [sp, #16]
     3d8:	ldp	x29, x30, [sp], #32
     3dc:	b	0 <cbreak>
     3e0:	str	wzr, [x19]
     3e4:	bl	0 <has_colors>
     3e8:	tbz	w0, #0, 3f8 <_ZN13NCursesWindow10initializeEv+0x70>
     3ec:	bl	0 <start_color>
     3f0:	mov	w8, #0x2                   	// #2
     3f4:	b	3fc <_ZN13NCursesWindow10initializeEv+0x74>
     3f8:	mov	w8, #0x1                   	// #1
     3fc:	str	w8, [x19]
     400:	bl	0 <noecho>
     404:	ldp	x20, x19, [sp, #16]
     408:	ldp	x29, x30, [sp], #32
     40c:	b	0 <cbreak>

0000000000000410 <_ZN13NCursesWindow9useColorsEv>:
     410:	stp	x29, x30, [sp, #-32]!
     414:	str	x19, [sp, #16]
     418:	mov	x29, sp
     41c:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     420:	ldr	x19, [x19]
     424:	ldr	w8, [x19]
     428:	cbz	w8, 438 <_ZN13NCursesWindow9useColorsEv+0x28>
     42c:	ldr	x19, [sp, #16]
     430:	ldp	x29, x30, [sp], #32
     434:	ret
     438:	adrp	x8, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     43c:	ldr	x8, [x8]
     440:	ldrb	w8, [x8]
     444:	cbz	w8, 468 <_ZN13NCursesWindow9useColorsEv+0x58>
     448:	bl	0 <has_colors>
     44c:	tbz	w0, #0, 47c <_ZN13NCursesWindow9useColorsEv+0x6c>
     450:	bl	0 <start_color>
     454:	mov	w8, #0x2                   	// #2
     458:	str	w8, [x19]
     45c:	ldr	x19, [sp, #16]
     460:	ldp	x29, x30, [sp], #32
     464:	ret
     468:	mov	w8, #0xffffffff            	// #-1
     46c:	str	w8, [x19]
     470:	ldr	x19, [sp, #16]
     474:	ldp	x29, x30, [sp], #32
     478:	ret
     47c:	mov	w8, #0x1                   	// #1
     480:	str	w8, [x19]
     484:	ldr	x19, [sp, #16]
     488:	ldp	x29, x30, [sp], #32
     48c:	ret

0000000000000490 <_ZN13NCursesWindow12constructingEv>:
     490:	stp	x29, x30, [sp, #-32]!
     494:	stp	x20, x19, [sp, #16]
     498:	mov	x29, sp
     49c:	adrp	x20, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     4a0:	ldr	x20, [x20]
     4a4:	ldrb	w8, [x20]
     4a8:	cbnz	w8, 4f4 <_ZN13NCursesWindow12constructingEv+0x64>
     4ac:	bl	0 <initscr>
     4b0:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     4b4:	ldr	x19, [x19]
     4b8:	mov	w9, #0x1                   	// #1
     4bc:	strb	w9, [x20]
     4c0:	ldr	w8, [x19]
     4c4:	cmn	w8, #0x1
     4c8:	b.ne	4ec <_ZN13NCursesWindow12constructingEv+0x5c>  // b.any
     4cc:	str	wzr, [x19]
     4d0:	bl	0 <has_colors>
     4d4:	tbz	w0, #0, 4e4 <_ZN13NCursesWindow12constructingEv+0x54>
     4d8:	bl	0 <start_color>
     4dc:	mov	w8, #0x2                   	// #2
     4e0:	b	4e8 <_ZN13NCursesWindow12constructingEv+0x58>
     4e4:	mov	w8, #0x1                   	// #1
     4e8:	str	w8, [x19]
     4ec:	bl	0 <noecho>
     4f0:	bl	0 <cbreak>
     4f4:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     4f8:	ldr	x8, [x8]
     4fc:	ldp	x20, x19, [sp, #16]
     500:	ldr	x9, [x8]
     504:	add	x9, x9, #0x1
     508:	str	x9, [x8]
     50c:	ldp	x29, x30, [sp], #32
     510:	ret

0000000000000514 <_ZN13NCursesWindowC1Ev>:
     514:	stp	x29, x30, [sp, #-48]!
     518:	str	x21, [sp, #16]
     51c:	stp	x20, x19, [sp, #32]
     520:	mov	x29, sp
     524:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     528:	ldr	x8, [x8]
     52c:	strb	wzr, [x0, #16]
     530:	stp	xzr, xzr, [x0, #32]
     534:	str	xzr, [x0, #24]
     538:	add	x8, x8, #0x10
     53c:	stp	x8, xzr, [x0]
     540:	adrp	x21, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     544:	ldr	x21, [x21]
     548:	mov	x19, x0
     54c:	ldrb	w8, [x21]
     550:	cbnz	w8, 59c <_ZN13NCursesWindowC1Ev+0x88>
     554:	bl	0 <initscr>
     558:	adrp	x20, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     55c:	ldr	x20, [x20]
     560:	mov	w9, #0x1                   	// #1
     564:	strb	w9, [x21]
     568:	ldr	w8, [x20]
     56c:	cmn	w8, #0x1
     570:	b.ne	594 <_ZN13NCursesWindowC1Ev+0x80>  // b.any
     574:	str	wzr, [x20]
     578:	bl	0 <has_colors>
     57c:	tbz	w0, #0, 58c <_ZN13NCursesWindowC1Ev+0x78>
     580:	bl	0 <start_color>
     584:	mov	w8, #0x2                   	// #2
     588:	b	590 <_ZN13NCursesWindowC1Ev+0x7c>
     58c:	mov	w8, #0x1                   	// #1
     590:	str	w8, [x20]
     594:	bl	0 <noecho>
     598:	bl	0 <cbreak>
     59c:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     5a0:	ldr	x8, [x8]
     5a4:	ldr	x21, [sp, #16]
     5a8:	ldr	x9, [x8]
     5ac:	add	x9, x9, #0x1
     5b0:	str	x9, [x8]
     5b4:	str	xzr, [x19, #8]
     5b8:	ldp	x20, x19, [sp, #32]
     5bc:	ldp	x29, x30, [sp], #48
     5c0:	ret

00000000000005c4 <_ZN13NCursesWindowC1Eiiii>:
     5c4:	stp	x29, x30, [sp, #-80]!
     5c8:	stp	x26, x25, [sp, #16]
     5cc:	stp	x24, x23, [sp, #32]
     5d0:	stp	x22, x21, [sp, #48]
     5d4:	stp	x20, x19, [sp, #64]
     5d8:	mov	x29, sp
     5dc:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     5e0:	ldr	x8, [x8]
     5e4:	mov	w25, #0x1                   	// #1
     5e8:	stp	xzr, xzr, [x0, #32]
     5ec:	str	xzr, [x0, #24]
     5f0:	add	x8, x8, #0x10
     5f4:	strb	w25, [x0, #16]
     5f8:	stp	x8, xzr, [x0]
     5fc:	adrp	x26, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     600:	ldr	x26, [x26]
     604:	mov	w20, w4
     608:	mov	w21, w3
     60c:	mov	w22, w2
     610:	ldrb	w8, [x26]
     614:	mov	x19, x0
     618:	mov	w23, w1
     61c:	cbnz	w8, 664 <_ZN13NCursesWindowC1Eiiii+0xa0>
     620:	bl	0 <initscr>
     624:	adrp	x24, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     628:	ldr	x24, [x24]
     62c:	strb	w25, [x26]
     630:	ldr	w8, [x24]
     634:	cmn	w8, #0x1
     638:	b.ne	65c <_ZN13NCursesWindowC1Eiiii+0x98>  // b.any
     63c:	str	wzr, [x24]
     640:	bl	0 <has_colors>
     644:	tbz	w0, #0, 654 <_ZN13NCursesWindowC1Eiiii+0x90>
     648:	bl	0 <start_color>
     64c:	mov	w8, #0x2                   	// #2
     650:	b	658 <_ZN13NCursesWindowC1Eiiii+0x94>
     654:	mov	w8, #0x1                   	// #1
     658:	str	w8, [x24]
     65c:	bl	0 <noecho>
     660:	bl	0 <cbreak>
     664:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     668:	ldr	x8, [x8]
     66c:	mov	w0, w23
     670:	mov	w1, w22
     674:	mov	w2, w21
     678:	ldr	x9, [x8]
     67c:	mov	w3, w20
     680:	add	x9, x9, #0x1
     684:	str	x9, [x8]
     688:	bl	0 <newwin>
     68c:	str	x0, [x19, #8]
     690:	cbnz	x0, 6b0 <_ZN13NCursesWindowC1Eiiii+0xec>
     694:	ldr	x8, [x19]
     698:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     69c:	add	x1, x1, #0x0
     6a0:	mov	x0, x19
     6a4:	ldr	x8, [x8]
     6a8:	blr	x8
     6ac:	ldr	x0, [x19, #8]
     6b0:	mov	w1, #0x1                   	// #1
     6b4:	bl	0 <keypad>
     6b8:	ldr	x0, [x19, #8]
     6bc:	ldp	x20, x19, [sp, #64]
     6c0:	ldp	x22, x21, [sp, #48]
     6c4:	ldp	x24, x23, [sp, #32]
     6c8:	ldp	x26, x25, [sp, #16]
     6cc:	mov	w1, #0x1                   	// #1
     6d0:	ldp	x29, x30, [sp], #80
     6d4:	b	0 <meta>

00000000000006d8 <_ZN13NCursesWindowC1EP7_win_st>:
     6d8:	stp	x29, x30, [sp, #-48]!
     6dc:	stp	x22, x21, [sp, #16]
     6e0:	stp	x20, x19, [sp, #32]
     6e4:	mov	x29, sp
     6e8:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     6ec:	ldr	x8, [x8]
     6f0:	strb	wzr, [x0, #16]
     6f4:	stp	xzr, xzr, [x0, #32]
     6f8:	str	xzr, [x0, #24]
     6fc:	add	x8, x8, #0x10
     700:	stp	x8, xzr, [x0]
     704:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     708:	ldr	x22, [x22]
     70c:	mov	x19, x0
     710:	mov	x20, x1
     714:	ldrb	w8, [x22]
     718:	cbnz	w8, 764 <_ZN13NCursesWindowC1EP7_win_st+0x8c>
     71c:	bl	0 <initscr>
     720:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     724:	ldr	x21, [x21]
     728:	mov	w9, #0x1                   	// #1
     72c:	strb	w9, [x22]
     730:	ldr	w8, [x21]
     734:	cmn	w8, #0x1
     738:	b.ne	75c <_ZN13NCursesWindowC1EP7_win_st+0x84>  // b.any
     73c:	str	wzr, [x21]
     740:	bl	0 <has_colors>
     744:	tbz	w0, #0, 754 <_ZN13NCursesWindowC1EP7_win_st+0x7c>
     748:	bl	0 <start_color>
     74c:	mov	w8, #0x2                   	// #2
     750:	b	758 <_ZN13NCursesWindowC1EP7_win_st+0x80>
     754:	mov	w8, #0x1                   	// #1
     758:	str	w8, [x21]
     75c:	bl	0 <noecho>
     760:	bl	0 <cbreak>
     764:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     768:	adrp	x9, 0 <stdscr>
     76c:	ldr	x8, [x8]
     770:	ldr	x9, [x9]
     774:	cmp	x20, #0x0
     778:	mov	w1, #0x1                   	// #1
     77c:	ldr	x10, [x8]
     780:	ldr	x9, [x9]
     784:	add	x10, x10, #0x1
     788:	csel	x0, x9, x20, eq  // eq = none
     78c:	str	x10, [x8]
     790:	str	x0, [x19, #8]
     794:	bl	0 <keypad>
     798:	ldr	x0, [x19, #8]
     79c:	ldp	x20, x19, [sp, #32]
     7a0:	ldp	x22, x21, [sp, #16]
     7a4:	mov	w1, #0x1                   	// #1
     7a8:	ldp	x29, x30, [sp], #48
     7ac:	b	0 <meta>

00000000000007b0 <_ZN13NCursesWindowC1ERS_iiiic>:
     7b0:	stp	x29, x30, [sp, #-96]!
     7b4:	stp	x28, x27, [sp, #16]
     7b8:	stp	x26, x25, [sp, #32]
     7bc:	stp	x24, x23, [sp, #48]
     7c0:	stp	x22, x21, [sp, #64]
     7c4:	stp	x20, x19, [sp, #80]
     7c8:	mov	x29, sp
     7cc:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     7d0:	ldr	x8, [x8]
     7d4:	mov	w27, #0x1                   	// #1
     7d8:	stp	xzr, xzr, [x0, #32]
     7dc:	str	xzr, [x0, #24]
     7e0:	add	x8, x8, #0x10
     7e4:	strb	w27, [x0, #16]
     7e8:	stp	x8, xzr, [x0]
     7ec:	adrp	x28, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     7f0:	ldr	x28, [x28]
     7f4:	mov	w25, w6
     7f8:	mov	w21, w5
     7fc:	mov	w22, w4
     800:	ldrb	w8, [x28]
     804:	mov	w23, w3
     808:	mov	w24, w2
     80c:	mov	x19, x0
     810:	mov	x20, x1
     814:	cbnz	w8, 85c <_ZN13NCursesWindowC1ERS_iiiic+0xac>
     818:	bl	0 <initscr>
     81c:	adrp	x26, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     820:	ldr	x26, [x26]
     824:	strb	w27, [x28]
     828:	ldr	w8, [x26]
     82c:	cmn	w8, #0x1
     830:	b.ne	854 <_ZN13NCursesWindowC1ERS_iiiic+0xa4>  // b.any
     834:	str	wzr, [x26]
     838:	bl	0 <has_colors>
     83c:	tbz	w0, #0, 84c <_ZN13NCursesWindowC1ERS_iiiic+0x9c>
     840:	bl	0 <start_color>
     844:	mov	w8, #0x2                   	// #2
     848:	b	850 <_ZN13NCursesWindowC1ERS_iiiic+0xa0>
     84c:	mov	w8, #0x1                   	// #1
     850:	str	w8, [x26]
     854:	bl	0 <noecho>
     858:	bl	0 <cbreak>
     85c:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     860:	ldr	x8, [x8]
     864:	ldr	x9, [x8]
     868:	add	x9, x9, #0x1
     86c:	str	x9, [x8]
     870:	ldr	x0, [x20, #8]
     874:	and	w8, w25, #0xff
     878:	cmp	w8, #0x61
     87c:	b.ne	8a0 <_ZN13NCursesWindowC1ERS_iiiic+0xf0>  // b.any
     880:	cbz	x0, 890 <_ZN13NCursesWindowC1ERS_iiiic+0xe0>
     884:	ldrsh	w8, [x0, #8]
     888:	ldrsh	w9, [x0, #10]
     88c:	b	898 <_ZN13NCursesWindowC1ERS_iiiic+0xe8>
     890:	mov	w8, #0xffffffff            	// #-1
     894:	mov	w9, #0xffffffff            	// #-1
     898:	sub	w22, w22, w8
     89c:	sub	w21, w21, w9
     8a0:	mov	w1, w24
     8a4:	mov	w2, w23
     8a8:	mov	w3, w22
     8ac:	mov	w4, w21
     8b0:	bl	0 <derwin>
     8b4:	str	x0, [x19, #8]
     8b8:	cbnz	x0, 8d4 <_ZN13NCursesWindowC1ERS_iiiic+0x124>
     8bc:	ldr	x8, [x19]
     8c0:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     8c4:	add	x1, x1, #0x0
     8c8:	mov	x0, x19
     8cc:	ldr	x8, [x8]
     8d0:	blr	x8
     8d4:	str	x20, [x19, #24]
     8d8:	ldr	x8, [x20, #32]
     8dc:	str	x8, [x19, #40]
     8e0:	str	x19, [x20, #32]
     8e4:	ldp	x20, x19, [sp, #80]
     8e8:	ldp	x22, x21, [sp, #64]
     8ec:	ldp	x24, x23, [sp, #48]
     8f0:	ldp	x26, x25, [sp, #32]
     8f4:	ldp	x28, x27, [sp, #16]
     8f8:	ldp	x29, x30, [sp], #96
     8fc:	ret

0000000000000900 <_ZN13NCursesWindowC1ERS_b>:
     900:	sub	sp, sp, #0x50
     904:	stp	x29, x30, [sp, #16]
     908:	stp	x24, x23, [sp, #32]
     90c:	stp	x22, x21, [sp, #48]
     910:	stp	x20, x19, [sp, #64]
     914:	add	x29, sp, #0x10
     918:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     91c:	ldr	x8, [x8]
     920:	mov	w23, #0x1                   	// #1
     924:	stp	xzr, xzr, [x0, #32]
     928:	str	xzr, [x0, #24]
     92c:	add	x8, x8, #0x10
     930:	strb	w23, [x0, #16]
     934:	stp	x8, xzr, [x0]
     938:	adrp	x24, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     93c:	ldr	x24, [x24]
     940:	mov	w20, w2
     944:	mov	x21, x0
     948:	mov	x19, x1
     94c:	ldrb	w8, [x24]
     950:	cbnz	w8, 998 <_ZN13NCursesWindowC1ERS_b+0x98>
     954:	bl	0 <initscr>
     958:	adrp	x22, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     95c:	ldr	x22, [x22]
     960:	strb	w23, [x24]
     964:	ldr	w8, [x22]
     968:	cmn	w8, #0x1
     96c:	b.ne	990 <_ZN13NCursesWindowC1ERS_b+0x90>  // b.any
     970:	str	wzr, [x22]
     974:	bl	0 <has_colors>
     978:	tbz	w0, #0, 988 <_ZN13NCursesWindowC1ERS_b+0x88>
     97c:	bl	0 <start_color>
     980:	mov	w8, #0x2                   	// #2
     984:	b	98c <_ZN13NCursesWindowC1ERS_b+0x8c>
     988:	mov	w8, #0x1                   	// #1
     98c:	str	w8, [x22]
     990:	bl	0 <noecho>
     994:	bl	0 <cbreak>
     998:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     99c:	ldr	x8, [x8]
     9a0:	ldr	x9, [x8]
     9a4:	add	x9, x9, #0x1
     9a8:	str	x9, [x8]
     9ac:	ldr	x0, [x19, #8]
     9b0:	cbz	x0, 9e4 <_ZN13NCursesWindowC1ERS_b+0xe4>
     9b4:	ldrh	w8, [x0, #4]
     9b8:	ldrh	w9, [x0, #6]
     9bc:	mov	w10, #0xfffe                	// #65534
     9c0:	cmp	w8, w10
     9c4:	csinv	w8, w8, wzr, ne  // ne = any
     9c8:	cmp	w9, w10
     9cc:	csinv	w9, w9, wzr, ne  // ne = any
     9d0:	sxth	w8, w8
     9d4:	sxth	w9, w9
     9d8:	sub	w1, w8, #0x1
     9dc:	sub	w2, w9, #0x1
     9e0:	b	9ec <_ZN13NCursesWindowC1ERS_b+0xec>
     9e4:	mov	w1, #0xfffffffe            	// #-2
     9e8:	mov	w2, #0xfffffffe            	// #-2
     9ec:	mov	w3, #0x1                   	// #1
     9f0:	mov	w4, #0x1                   	// #1
     9f4:	bl	0 <derwin>
     9f8:	str	x0, [x21, #8]
     9fc:	cbnz	x0, a18 <_ZN13NCursesWindowC1ERS_b+0x118>
     a00:	ldr	x8, [x21]
     a04:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     a08:	add	x1, x1, #0x0
     a0c:	mov	x0, x21
     a10:	ldr	x8, [x8]
     a14:	blr	x8
     a18:	str	x19, [x21, #24]
     a1c:	ldr	x8, [x19, #32]
     a20:	str	x8, [x21, #40]
     a24:	str	x21, [x19, #32]
     a28:	str	xzr, [x21, #32]
     a2c:	tbz	w20, #0, a7c <_ZN13NCursesWindowC1ERS_b+0x17c>
     a30:	ldr	x0, [x19, #8]
     a34:	mov	w1, wzr
     a38:	mov	w2, wzr
     a3c:	mov	w3, wzr
     a40:	mov	w4, wzr
     a44:	mov	w5, wzr
     a48:	mov	w6, wzr
     a4c:	mov	w7, wzr
     a50:	str	wzr, [sp]
     a54:	bl	0 <wborder>
     a58:	ldr	x0, [x19, #8]
     a5c:	cbz	x0, a94 <_ZN13NCursesWindowC1ERS_b+0x194>
     a60:	ldrh	w8, [x0, #4]
     a64:	mov	w9, #0xfffe                	// #65534
     a68:	cmp	w8, w9
     a6c:	csinv	w8, w8, wzr, ne  // ne = any
     a70:	sxth	w8, w8
     a74:	add	w2, w8, #0x1
     a78:	b	a98 <_ZN13NCursesWindowC1ERS_b+0x198>
     a7c:	ldp	x20, x19, [sp, #64]
     a80:	ldp	x22, x21, [sp, #48]
     a84:	ldp	x24, x23, [sp, #32]
     a88:	ldp	x29, x30, [sp, #16]
     a8c:	add	sp, sp, #0x50
     a90:	ret
     a94:	mov	w2, wzr
     a98:	ldp	x20, x19, [sp, #64]
     a9c:	ldp	x22, x21, [sp, #48]
     aa0:	ldp	x24, x23, [sp, #32]
     aa4:	ldp	x29, x30, [sp, #16]
     aa8:	mov	w3, #0x1                   	// #1
     aac:	mov	w1, wzr
     ab0:	add	sp, sp, #0x50
     ab4:	b	0 <wtouchln>

0000000000000ab8 <_ZN13NCursesWindow5CloneEv>:
     ab8:	stp	x29, x30, [sp, #-32]!
     abc:	stp	x20, x19, [sp, #16]
     ac0:	mov	x29, sp
     ac4:	mov	x19, x0
     ac8:	ldr	x0, [x0, #8]
     acc:	mov	x20, x8
     ad0:	bl	0 <dupwin>
     ad4:	mov	x1, x0
     ad8:	mov	x0, x20
     adc:	bl	6d8 <_ZN13NCursesWindowC1EP7_win_st>
     ae0:	ldr	x8, [x19, #40]
     ae4:	str	x8, [x20, #40]
     ae8:	ldur	q0, [x19, #24]
     aec:	stur	q0, [x20, #24]
     af0:	ldrb	w8, [x19, #16]
     af4:	strb	w8, [x20, #16]
     af8:	ldp	x20, x19, [sp, #16]
     afc:	ldp	x29, x30, [sp], #32
     b00:	ret

0000000000000b04 <_ZN13NCursesWindowC1EP7_win_sti>:
     b04:	stp	x29, x30, [sp, #-48]!
     b08:	stp	x22, x21, [sp, #16]
     b0c:	stp	x20, x19, [sp, #32]
     b10:	mov	x29, sp
     b14:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     b18:	ldr	x8, [x8]
     b1c:	strb	wzr, [x0, #16]
     b20:	stp	xzr, xzr, [x0, #32]
     b24:	str	xzr, [x0, #24]
     b28:	add	x8, x8, #0x10
     b2c:	stp	x8, xzr, [x0]
     b30:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     b34:	ldr	x22, [x22]
     b38:	mov	x19, x0
     b3c:	mov	x20, x1
     b40:	ldrb	w8, [x22]
     b44:	cbnz	w8, b90 <_ZN13NCursesWindowC1EP7_win_sti+0x8c>
     b48:	bl	0 <initscr>
     b4c:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     b50:	ldr	x21, [x21]
     b54:	mov	w9, #0x1                   	// #1
     b58:	strb	w9, [x22]
     b5c:	ldr	w8, [x21]
     b60:	cmn	w8, #0x1
     b64:	b.ne	b88 <_ZN13NCursesWindowC1EP7_win_sti+0x84>  // b.any
     b68:	str	wzr, [x21]
     b6c:	bl	0 <has_colors>
     b70:	tbz	w0, #0, b80 <_ZN13NCursesWindowC1EP7_win_sti+0x7c>
     b74:	bl	0 <start_color>
     b78:	mov	w8, #0x2                   	// #2
     b7c:	b	b84 <_ZN13NCursesWindowC1EP7_win_sti+0x80>
     b80:	mov	w8, #0x1                   	// #1
     b84:	str	w8, [x21]
     b88:	bl	0 <noecho>
     b8c:	bl	0 <cbreak>
     b90:	str	x20, [x19, #8]
     b94:	ldp	x20, x19, [sp, #32]
     b98:	ldp	x22, x21, [sp, #16]
     b9c:	ldp	x29, x30, [sp], #48
     ba0:	ret

0000000000000ba4 <_nc_xx_ripoff_init>:
     ba4:	sub	sp, sp, #0x40
     ba8:	stp	x29, x30, [sp, #16]
     bac:	stp	x22, x21, [sp, #32]
     bb0:	stp	x20, x19, [sp, #48]
     bb4:	add	x29, sp, #0x10
     bb8:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     bbc:	ldr	x9, [x8]
     bc0:	add	x10, x9, #0x8
     bc4:	str	x10, [x8]
     bc8:	ldr	x1, [x9]
     bcc:	str	x1, [sp, #8]
     bd0:	cbz	x1, c48 <_nc_xx_ripoff_init+0xa4>
     bd4:	mov	x19, x0
     bd8:	mov	w0, #0x30                  	// #48
     bdc:	bl	0 <_Znwm>
     be0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     be4:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     be8:	ldr	x8, [x8]
     bec:	ldr	x22, [x22]
     bf0:	mov	x20, x0
     bf4:	strb	wzr, [x0, #16]
     bf8:	add	x8, x8, #0x10
     bfc:	ldrb	w9, [x22]
     c00:	stp	x8, xzr, [x0]
     c04:	stp	xzr, xzr, [x0, #32]
     c08:	str	xzr, [x0, #24]
     c0c:	cbnz	w9, c70 <_nc_xx_ripoff_init+0xcc>
     c10:	bl	0 <initscr>
     c14:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     c18:	ldr	x21, [x21]
     c1c:	mov	w9, #0x1                   	// #1
     c20:	strb	w9, [x22]
     c24:	ldr	w8, [x21]
     c28:	cmn	w8, #0x1
     c2c:	b.ne	c68 <_nc_xx_ripoff_init+0xc4>  // b.any
     c30:	str	wzr, [x21]
     c34:	bl	0 <has_colors>
     c38:	tbz	w0, #0, c60 <_nc_xx_ripoff_init+0xbc>
     c3c:	bl	0 <start_color>
     c40:	mov	w8, #0x2                   	// #2
     c44:	b	c64 <_nc_xx_ripoff_init+0xc0>
     c48:	ldp	x20, x19, [sp, #48]
     c4c:	ldp	x22, x21, [sp, #32]
     c50:	ldp	x29, x30, [sp, #16]
     c54:	mov	w0, #0xffffffff            	// #-1
     c58:	add	sp, sp, #0x40
     c5c:	ret
     c60:	mov	w8, #0x1                   	// #1
     c64:	str	w8, [x21]
     c68:	bl	0 <noecho>
     c6c:	bl	0 <cbreak>
     c70:	str	x19, [x20, #8]
     c74:	mov	x0, x20
     c78:	ldr	x1, [sp, #8]
     c7c:	ldp	x20, x19, [sp, #48]
     c80:	ldp	x22, x21, [sp, #32]
     c84:	ldp	x29, x30, [sp, #16]
     c88:	add	sp, sp, #0x40
     c8c:	br	x1
     c90:	mov	x19, x0
     c94:	mov	x0, x20
     c98:	bl	0 <_ZdlPv>
     c9c:	mov	x0, x19
     ca0:	bl	0 <_Unwind_Resume>

0000000000000ca4 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>:
     ca4:	stp	x29, x30, [sp, #-32]!
     ca8:	stp	x20, x19, [sp, #16]
     cac:	mov	x29, sp
     cb0:	mov	x19, x1
     cb4:	adrp	x1, ba4 <_nc_xx_ripoff_init>
     cb8:	ldr	x1, [x1]
     cbc:	mov	w20, w0
     cc0:	bl	0 <_nc_ripoffline>
     cc4:	cbz	w20, cec <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     cc8:	cbz	x19, cec <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     ccc:	cbnz	w0, cec <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     cd0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     cd4:	add	x8, x8, #0x0
     cd8:	ldrsw	x9, [x8]
     cdc:	add	w10, w9, #0x1
     ce0:	add	x9, x8, x9, lsl #3
     ce4:	str	w10, [x8]
     ce8:	str	x19, [x9, #8]
     cec:	ldp	x20, x19, [sp, #16]
     cf0:	ldp	x29, x30, [sp], #32
     cf4:	ret

0000000000000cf8 <_ZN13NCursesWindow12isDescendantERS_>:
     cf8:	stp	x29, x30, [sp, #-32]!
     cfc:	stp	x20, x19, [sp, #16]
     d00:	ldr	x19, [x0, #32]
     d04:	mov	x29, sp
     d08:	cbz	x19, d30 <_ZN13NCursesWindow12isDescendantERS_+0x38>
     d0c:	mov	x20, x1
     d10:	cmp	x19, x20
     d14:	b.eq	d40 <_ZN13NCursesWindow12isDescendantERS_+0x48>  // b.none
     d18:	mov	x0, x19
     d1c:	mov	x1, x20
     d20:	bl	cf8 <_ZN13NCursesWindow12isDescendantERS_>
     d24:	tbnz	w0, #0, d40 <_ZN13NCursesWindow12isDescendantERS_+0x48>
     d28:	ldr	x19, [x19, #40]
     d2c:	cbnz	x19, d10 <_ZN13NCursesWindow12isDescendantERS_+0x18>
     d30:	mov	w0, wzr
     d34:	ldp	x20, x19, [sp, #16]
     d38:	ldp	x29, x30, [sp], #32
     d3c:	ret
     d40:	mov	w0, #0x1                   	// #1
     d44:	ldp	x20, x19, [sp, #16]
     d48:	ldp	x29, x30, [sp], #32
     d4c:	ret

0000000000000d50 <_ZN13NCursesWindow15kill_subwindowsEv>:
     d50:	stp	x29, x30, [sp, #-32]!
     d54:	stp	x20, x19, [sp, #16]
     d58:	mov	x29, sp
     d5c:	ldr	x20, [x0, #32]
     d60:	str	xzr, [x0, #32]
     d64:	cbnz	x20, d88 <_ZN13NCursesWindow15kill_subwindowsEv+0x38>
     d68:	ldp	x20, x19, [sp, #16]
     d6c:	ldp	x29, x30, [sp], #32
     d70:	ret
     d74:	ldr	x8, [x19]
     d78:	mov	x0, x19
     d7c:	ldr	x8, [x8, #16]
     d80:	blr	x8
     d84:	cbz	x20, d68 <_ZN13NCursesWindow15kill_subwindowsEv+0x18>
     d88:	mov	x19, x20
     d8c:	ldr	x20, [x20, #40]
     d90:	mov	x0, x19
     d94:	bl	d50 <_ZN13NCursesWindow15kill_subwindowsEv>
     d98:	ldrb	w8, [x19, #16]
     d9c:	cbz	w8, d74 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>
     da0:	ldr	x0, [x19, #8]
     da4:	cbz	x0, d74 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>
     da8:	bl	0 <delwin>
     dac:	b	d74 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>

0000000000000db0 <_ZN13NCursesWindowD1Ev>:
     db0:	stp	x29, x30, [sp, #-32]!
     db4:	str	x19, [sp, #16]
     db8:	mov	x29, sp
     dbc:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     dc0:	ldr	x8, [x8]
     dc4:	mov	x19, x0
     dc8:	add	x8, x8, #0x10
     dcc:	str	x8, [x0]
     dd0:	bl	d50 <_ZN13NCursesWindow15kill_subwindowsEv>
     dd4:	ldr	x8, [x19, #24]
     dd8:	cbz	x8, e10 <_ZN13NCursesWindowD1Ev+0x60>
     ddc:	ldr	x9, [x8, #32]
     de0:	cbz	x9, e10 <_ZN13NCursesWindowD1Ev+0x60>
     de4:	cmp	x9, x19
     de8:	b.eq	e78 <_ZN13NCursesWindowD1Ev+0xc8>  // b.none
     dec:	ldr	x11, [x9, #40]
     df0:	cbz	x11, e10 <_ZN13NCursesWindowD1Ev+0x60>
     df4:	cmp	x11, x19
     df8:	mov	x10, x9
     dfc:	mov	x9, x11
     e00:	b.ne	dec <_ZN13NCursesWindowD1Ev+0x3c>  // b.any
     e04:	ldr	x9, [x19, #40]
     e08:	cbz	x10, e84 <_ZN13NCursesWindowD1Ev+0xd4>
     e0c:	str	x9, [x10, #40]
     e10:	ldrb	w8, [x19, #16]
     e14:	cbz	w8, e6c <_ZN13NCursesWindowD1Ev+0xbc>
     e18:	ldr	x0, [x19, #8]
     e1c:	cbz	x0, e2c <_ZN13NCursesWindowD1Ev+0x7c>
     e20:	bl	0 <delwin>
     e24:	ldrb	w8, [x19, #16]
     e28:	cbz	w8, e6c <_ZN13NCursesWindowD1Ev+0xbc>
     e2c:	adrp	x9, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e30:	ldr	x9, [x9]
     e34:	ldr	x8, [x9]
     e38:	subs	x10, x8, #0x1
     e3c:	str	x10, [x9]
     e40:	b.eq	e68 <_ZN13NCursesWindowD1Ev+0xb8>  // b.none
     e44:	cmp	x8, #0x0
     e48:	b.gt	e6c <_ZN13NCursesWindowD1Ev+0xbc>
     e4c:	ldr	x8, [x19]
     e50:	ldr	x8, [x8]
     e54:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e58:	add	x1, x1, #0x0
     e5c:	mov	x0, x19
     e60:	blr	x8
     e64:	b	e6c <_ZN13NCursesWindowD1Ev+0xbc>
     e68:	bl	0 <endwin>
     e6c:	ldr	x19, [sp, #16]
     e70:	ldp	x29, x30, [sp], #32
     e74:	ret
     e78:	mov	x10, xzr
     e7c:	ldr	x9, [x19, #40]
     e80:	cbnz	x10, e0c <_ZN13NCursesWindowD1Ev+0x5c>
     e84:	str	x9, [x8, #32]
     e88:	ldrb	w8, [x19, #16]
     e8c:	cbnz	w8, e18 <_ZN13NCursesWindowD1Ev+0x68>
     e90:	b	e6c <_ZN13NCursesWindowD1Ev+0xbc>
     e94:	bl	0 <__cxa_call_unexpected>

0000000000000e98 <_ZN13NCursesWindowD0Ev>:
     e98:	stp	x29, x30, [sp, #-48]!
     e9c:	str	x21, [sp, #16]
     ea0:	stp	x20, x19, [sp, #32]
     ea4:	mov	x29, sp
     ea8:	mov	x19, x0
     eac:	bl	db0 <_ZN13NCursesWindowD1Ev>
     eb0:	mov	x0, x19
     eb4:	ldp	x20, x19, [sp, #32]
     eb8:	ldr	x21, [sp, #16]
     ebc:	ldp	x29, x30, [sp], #48
     ec0:	b	0 <_ZdlPv>
     ec4:	mov	x20, x0
     ec8:	mov	x0, x19
     ecc:	mov	x21, x1
     ed0:	bl	0 <_ZdlPv>
     ed4:	mov	x0, x20
     ed8:	tbz	w21, #31, ee0 <_ZN13NCursesWindowD0Ev+0x48>
     edc:	bl	0 <__cxa_call_unexpected>
     ee0:	bl	0 <_Unwind_Resume>

0000000000000ee4 <_ZNK13NCursesWindow7getPairEv>:
     ee4:	ldr	x8, [x0, #8]
     ee8:	cbz	x8, ef4 <_ZNK13NCursesWindow7getPairEv+0x10>
     eec:	ldrb	w0, [x8, #17]
     ef0:	ret
     ef4:	mov	w0, wzr
     ef8:	ret

0000000000000efc <_ZNK13NCursesWindow8getcolorEi>:
     efc:	sub	sp, sp, #0x30
     f00:	stp	x29, x30, [sp, #16]
     f04:	stp	x20, x19, [sp, #32]
     f08:	add	x29, sp, #0x10
     f0c:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f10:	ldr	x8, [x8]
     f14:	mov	w19, w1
     f18:	ldr	w8, [x8]
     f1c:	cmp	w8, #0x2
     f20:	b.ne	f38 <_ZNK13NCursesWindow8getcolorEi+0x3c>  // b.any
     f24:	ldr	x8, [x0, #8]
     f28:	mov	x20, x0
     f2c:	cbz	x8, f48 <_ZNK13NCursesWindow8getcolorEi+0x4c>
     f30:	ldrb	w0, [x8, #17]
     f34:	b	f4c <_ZNK13NCursesWindow8getcolorEi+0x50>
     f38:	mov	w8, #0x7                   	// #7
     f3c:	strh	wzr, [sp, #8]
     f40:	sturh	w8, [x29, #-4]
     f44:	b	f78 <_ZNK13NCursesWindow8getcolorEi+0x7c>
     f48:	mov	w0, wzr
     f4c:	sub	x1, x29, #0x4
     f50:	add	x2, sp, #0x8
     f54:	bl	0 <pair_content>
     f58:	cmn	w0, #0x1
     f5c:	b.ne	f78 <_ZNK13NCursesWindow8getcolorEi+0x7c>  // b.any
     f60:	ldr	x8, [x20]
     f64:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     f68:	add	x1, x1, #0x0
     f6c:	mov	x0, x20
     f70:	ldr	x8, [x8]
     f74:	blr	x8
     f78:	cmp	w19, #0x0
     f7c:	add	x8, sp, #0x8
     f80:	sub	x9, x29, #0x4
     f84:	csel	x8, x9, x8, eq  // eq = none
     f88:	ldrh	w0, [x8]
     f8c:	ldp	x20, x19, [sp, #32]
     f90:	ldp	x29, x30, [sp, #16]
     f94:	add	sp, sp, #0x30
     f98:	ret

0000000000000f9c <_ZN13NCursesWindow14NumberOfColorsEv>:
     f9c:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     fa0:	ldr	x8, [x8]
     fa4:	adrp	x9, 0 <COLORS>
     fa8:	ldr	w8, [x8]
     fac:	ldr	x9, [x9]
     fb0:	cmp	w8, #0x2
     fb4:	ldr	w9, [x9]
     fb8:	csinc	w0, w9, wzr, eq  // eq = none
     fbc:	ret

0000000000000fc0 <_ZNK13NCursesWindow8getcolorEv>:
     fc0:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     fc4:	ldr	x8, [x8]
     fc8:	ldr	w8, [x8]
     fcc:	cmp	w8, #0x2
     fd0:	b.ne	fe4 <_ZNK13NCursesWindow8getcolorEv+0x24>  // b.any
     fd4:	ldr	x8, [x0, #8]
     fd8:	cbz	x8, fe4 <_ZNK13NCursesWindow8getcolorEv+0x24>
     fdc:	ldrb	w0, [x8, #17]
     fe0:	ret
     fe4:	mov	w0, wzr
     fe8:	ret

0000000000000fec <_ZN13NCursesWindow10setpaletteEsss>:
     fec:	adrp	x9, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     ff0:	ldr	x9, [x9]
     ff4:	ldr	w9, [x9]
     ff8:	cmp	w9, #0x2
     ffc:	b.ne	1014 <_ZN13NCursesWindow10setpaletteEsss+0x28>  // b.any
    1000:	mov	w8, w1
    1004:	mov	w1, w0
    1008:	mov	w0, w2
    100c:	mov	w2, w8
    1010:	b	0 <init_pair>
    1014:	mov	w0, wzr
    1018:	ret

000000000000101c <_ZN13NCursesWindow10setpaletteEss>:
    101c:	ldr	x8, [x0, #8]
    1020:	cbz	x8, 102c <_ZN13NCursesWindow10setpaletteEss+0x10>
    1024:	ldrb	w0, [x8, #17]
    1028:	b	1030 <_ZN13NCursesWindow10setpaletteEss+0x14>
    102c:	mov	w0, wzr
    1030:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    1034:	ldr	x8, [x8]
    1038:	ldr	w8, [x8]
    103c:	cmp	w8, #0x2
    1040:	b.ne	1048 <_ZN13NCursesWindow10setpaletteEss+0x2c>  // b.any
    1044:	b	0 <init_pair>
    1048:	mov	w0, wzr
    104c:	ret

0000000000001050 <_ZN13NCursesWindow8setcolorEs>:
    1050:	stp	x29, x30, [sp, #-32]!
    1054:	stp	x20, x19, [sp, #16]
    1058:	mov	x29, sp
    105c:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    1060:	ldr	x8, [x8]
    1064:	ldr	w8, [x8]
    1068:	cmp	w8, #0x2
    106c:	b.ne	10d4 <_ZN13NCursesWindow8setcolorEs+0x84>  // b.any
    1070:	sxth	w20, w1
    1074:	mov	x19, x0
    1078:	cmp	w20, #0x1
    107c:	b.lt	1094 <_ZN13NCursesWindow8setcolorEs+0x44>  // b.tstop
    1080:	adrp	x8, 0 <COLOR_PAIRS>
    1084:	ldr	x8, [x8]
    1088:	ldr	w8, [x8]
    108c:	cmp	w8, w20
    1090:	b.ge	10ac <_ZN13NCursesWindow8setcolorEs+0x5c>  // b.tcont
    1094:	ldr	x8, [x19]
    1098:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
    109c:	add	x1, x1, #0x0
    10a0:	mov	x0, x19
    10a4:	ldr	x8, [x8]
    10a8:	blr	x8
    10ac:	ldr	x0, [x19, #8]
    10b0:	mov	w1, #0xff00                	// #65280
    10b4:	mov	x2, xzr
    10b8:	bl	0 <wattr_off>
    10bc:	ldr	x8, [x19, #8]
    10c0:	cbz	x8, 10d4 <_ZN13NCursesWindow8setcolorEs+0x84>
    10c4:	ubfiz	w9, w20, #8, #8
    10c8:	lsr	w10, w9, #8
    10cc:	str	w10, [x8, #116]
    10d0:	str	w9, [x8, #16]
    10d4:	ldp	x20, x19, [sp, #16]
    10d8:	mov	w0, wzr
    10dc:	ldp	x29, x30, [sp], #32
    10e0:	ret

00000000000010e4 <_ZNK13NCursesWindow9has_mouseEv>:
    10e4:	stp	x29, x30, [sp, #-16]!
    10e8:	mov	x29, sp
    10ec:	mov	w0, #0x199                 	// #409
    10f0:	bl	0 <has_key>
    10f4:	cbz	w0, 1104 <_ZNK13NCursesWindow9has_mouseEv+0x20>
    10f8:	mov	w0, #0x1                   	// #1
    10fc:	ldp	x29, x30, [sp], #16
    1100:	ret
    1104:	ldp	x29, x30, [sp], #16
    1108:	b	0 <has_mouse>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN13NCursesWindow7refreshEv:

0000000000000000 <_ZN13NCursesWindow7refreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wrefresh>

Disassembly of section .text._ZN13NCursesWindow11noutrefreshEv:

0000000000000000 <_ZN13NCursesWindow11noutrefreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wnoutrefresh>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursespad.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN10NCursesPadC1Eii>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w20, w2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	bl	0 <_ZN13NCursesWindowC2Ev>
  20:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
  24:	ldr	x8, [x8]
  28:	movi	v0.2d, #0x0
  2c:	stp	q0, q0, [x19, #48]
  30:	add	x8, x8, #0x10
  34:	str	x8, [x19]
  38:	mov	w0, w21
  3c:	mov	w1, w20
  40:	bl	0 <newpad>
  44:	str	x0, [x19, #8]
  48:	cbnz	x0, 78 <_ZN10NCursesPadC1Eii+0x78>
  4c:	adrp	x8, 0 <_ZN13NCursesWindow5countE>
  50:	ldr	x8, [x8]
  54:	ldr	x9, [x8]
  58:	sub	x9, x9, #0x1
  5c:	str	x9, [x8]
  60:	ldr	x8, [x19]
  64:	ldr	x8, [x8]
  68:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
  6c:	add	x1, x1, #0x0
  70:	mov	x0, x19
  74:	blr	x8
  78:	mov	w8, #0x1                   	// #1
  7c:	strb	w8, [x19, #16]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x20, x0
  94:	mov	x0, x19
  98:	bl	0 <_ZN13NCursesWindowD2Ev>
  9c:	mov	x0, x20
  a0:	bl	0 <_Unwind_Resume>
  a4:	bl	0 <_ZN10NCursesPadC1Eii>

00000000000000a8 <_ZN10NCursesPad6driverEi>:
  a8:	sub	w8, w1, #0x102
  ac:	cmp	w8, #0x3
  b0:	b.hi	d8 <_ZN10NCursesPad6driverEi+0x30>  // b.pmore
  b4:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
  b8:	add	x9, x9, #0x0
  bc:	adr	x10, d0 <_ZN10NCursesPad6driverEi+0x28>
  c0:	ldrb	w11, [x9, x8]
  c4:	add	x10, x10, x11, lsl #2
  c8:	mov	w0, #0x201                 	// #513
  cc:	br	x10
  d0:	mov	w0, #0x202                 	// #514
  d4:	ret
  d8:	mov	w0, w1
  dc:	cmp	w1, #0x18
  e0:	b.eq	ec <_ZN10NCursesPad6driverEi+0x44>  // b.none
  e4:	cmp	w0, #0x169
  e8:	b.ne	100 <_ZN10NCursesPad6driverEi+0x58>  // b.any
  ec:	mov	w0, #0x205                 	// #517
  f0:	ret
  f4:	mov	w0, #0x203                 	// #515
  f8:	ret
  fc:	mov	w0, #0x204                 	// #516
 100:	ret

0000000000000104 <_ZN10NCursesPadclEv>:
 104:	stp	x29, x30, [sp, #-96]!
 108:	str	x27, [sp, #16]
 10c:	stp	x26, x25, [sp, #32]
 110:	stp	x24, x23, [sp, #48]
 114:	stp	x22, x21, [sp, #64]
 118:	stp	x20, x19, [sp, #80]
 11c:	mov	x29, sp
 120:	ldr	x21, [x0, #56]
 124:	mov	x19, x0
 128:	cbnz	x21, 134 <_ZN10NCursesPadclEv+0x30>
 12c:	ldr	x21, [x19, #48]
 130:	cbz	x21, 410 <_ZN10NCursesPadclEv+0x30c>
 134:	ldr	x0, [x21, #8]
 138:	cbz	x0, 16c <_ZN10NCursesPadclEv+0x68>
 13c:	ldrh	w8, [x0, #6]
 140:	ldrh	w9, [x0, #4]
 144:	mov	w10, #0xfffe                	// #65534
 148:	cmp	w8, w10
 14c:	csinv	w8, w8, wzr, ne  // ne = any
 150:	cmp	w9, w10
 154:	sxth	w8, w8
 158:	csinv	w9, w9, wzr, ne  // ne = any
 15c:	add	w22, w8, #0x1
 160:	sxth	w8, w9
 164:	add	w23, w8, #0x1
 168:	b	174 <_ZN10NCursesPadclEv+0x70>
 16c:	mov	w22, wzr
 170:	mov	w23, wzr
 174:	mov	w1, #0x1                   	// #1
 178:	bl	0 <keypad>
 17c:	ldr	x0, [x21, #8]
 180:	mov	w1, #0x1                   	// #1
 184:	bl	0 <meta>
 188:	ldr	x8, [x19]
 18c:	mov	x0, x19
 190:	ldr	x8, [x8, #32]
 194:	blr	x8
 198:	adrp	x26, 0 <_ZN10NCursesPadC1Eii>
 19c:	mvn	w24, w23
 1a0:	mvn	w25, w22
 1a4:	mov	w20, #0x200                 	// #512
 1a8:	add	x26, x26, #0x0
 1ac:	mov	w27, #0xfffe                	// #65534
 1b0:	b	220 <_ZN10NCursesPadclEv+0x11c>
 1b4:	add	w8, w11, w9
 1b8:	str	w8, [x19, #76]
 1bc:	ldr	x8, [x19]
 1c0:	mov	x0, x19
 1c4:	ldr	x8, [x8, #40]
 1c8:	blr	x8
 1cc:	ldr	x0, [x21, #8]
 1d0:	bl	0 <wsyncup>
 1d4:	ldr	x8, [x19]
 1d8:	mov	x0, x19
 1dc:	mov	w1, w20
 1e0:	ldr	x8, [x8, #72]
 1e4:	blr	x8
 1e8:	ldr	x0, [x19, #48]
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #32]
 1f4:	blr	x8
 1f8:	ldr	x0, [x21, #8]
 1fc:	bl	0 <wgetch>
 200:	ldr	x8, [x19]
 204:	mov	w1, w0
 208:	mov	x0, x19
 20c:	ldr	x8, [x8, #48]
 210:	blr	x8
 214:	mov	w20, w0
 218:	cmp	w0, #0x205
 21c:	b.eq	410 <_ZN10NCursesPadclEv+0x30c>  // b.none
 220:	sub	w8, w20, #0x200
 224:	cmp	w8, #0x4
 228:	b.hi	25c <_ZN10NCursesPadclEv+0x158>  // b.pmore
 22c:	adr	x9, 1bc <_ZN10NCursesPadclEv+0xb8>
 230:	ldrb	w10, [x26, x8]
 234:	add	x9, x9, x10, lsl #2
 238:	br	x9
 23c:	ldr	w8, [x19, #72]
 240:	cmp	w8, #0x1
 244:	b.lt	324 <_ZN10NCursesPadclEv+0x220>  // b.tstop
 248:	ldr	w9, [x19, #68]
 24c:	subs	w8, w8, w9
 250:	b.ge	380 <_ZN10NCursesPadclEv+0x27c>  // b.tcont
 254:	str	wzr, [x19, #72]
 258:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 25c:	ldr	x8, [x19]
 260:	mov	x0, x19
 264:	mov	w1, w20
 268:	ldr	x8, [x8, #56]
 26c:	blr	x8
 270:	b	1f8 <_ZN10NCursesPadclEv+0xf4>
 274:	ldr	x8, [x19, #8]
 278:	ldr	w9, [x19, #72]
 27c:	cbz	x8, 330 <_ZN10NCursesPadclEv+0x22c>
 280:	ldrh	w10, [x8, #4]
 284:	cmp	w10, w27
 288:	csinv	w10, w10, wzr, ne  // ne = any
 28c:	sxth	w10, w10
 290:	add	w10, w10, #0x1
 294:	add	w10, w10, w24
 298:	cmp	w9, w10
 29c:	b.ge	340 <_ZN10NCursesPadclEv+0x23c>  // b.tcont
 2a0:	cbz	x8, 388 <_ZN10NCursesPadclEv+0x284>
 2a4:	ldrh	w10, [x8, #4]
 2a8:	cmp	w10, w27
 2ac:	csinv	w10, w10, wzr, ne  // ne = any
 2b0:	sxth	w10, w10
 2b4:	add	w10, w10, #0x1
 2b8:	b	38c <_ZN10NCursesPadclEv+0x288>
 2bc:	ldr	w8, [x19, #76]
 2c0:	cmp	w8, #0x1
 2c4:	b.lt	34c <_ZN10NCursesPadclEv+0x248>  // b.tstop
 2c8:	ldr	w9, [x19, #64]
 2cc:	subs	w8, w8, w9
 2d0:	b.ge	1b8 <_ZN10NCursesPadclEv+0xb4>  // b.tcont
 2d4:	str	wzr, [x19, #76]
 2d8:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 2dc:	ldr	x8, [x19, #8]
 2e0:	ldr	w9, [x19, #76]
 2e4:	cbz	x8, 358 <_ZN10NCursesPadclEv+0x254>
 2e8:	ldrh	w10, [x8, #6]
 2ec:	cmp	w10, w27
 2f0:	csinv	w10, w10, wzr, ne  // ne = any
 2f4:	sxth	w10, w10
 2f8:	add	w10, w10, #0x1
 2fc:	add	w10, w10, w25
 300:	cmp	w9, w10
 304:	b.ge	368 <_ZN10NCursesPadclEv+0x264>  // b.tcont
 308:	cbz	x8, 3d4 <_ZN10NCursesPadclEv+0x2d0>
 30c:	ldrh	w10, [x8, #6]
 310:	cmp	w10, w27
 314:	csinv	w10, w10, wzr, ne  // ne = any
 318:	sxth	w10, w10
 31c:	add	w10, w10, #0x1
 320:	b	3d8 <_ZN10NCursesPadclEv+0x2d4>
 324:	ldr	x8, [x19]
 328:	mov	w1, #0x201                 	// #513
 32c:	b	370 <_ZN10NCursesPadclEv+0x26c>
 330:	mov	w10, wzr
 334:	add	w10, w10, w24
 338:	cmp	w9, w10
 33c:	b.lt	2a0 <_ZN10NCursesPadclEv+0x19c>  // b.tstop
 340:	ldr	x8, [x19]
 344:	mov	w1, #0x202                 	// #514
 348:	b	370 <_ZN10NCursesPadclEv+0x26c>
 34c:	ldr	x8, [x19]
 350:	mov	w1, #0x203                 	// #515
 354:	b	370 <_ZN10NCursesPadclEv+0x26c>
 358:	mov	w10, wzr
 35c:	add	w10, w10, w25
 360:	cmp	w9, w10
 364:	b.lt	308 <_ZN10NCursesPadclEv+0x204>  // b.tstop
 368:	ldr	x8, [x19]
 36c:	mov	w1, #0x204                 	// #516
 370:	ldr	x8, [x8, #64]
 374:	mov	x0, x19
 378:	blr	x8
 37c:	b	1f8 <_ZN10NCursesPadclEv+0xf4>
 380:	str	w8, [x19, #72]
 384:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 388:	mov	w10, wzr
 38c:	ldr	w11, [x19, #68]
 390:	sub	w10, w10, w23
 394:	mvn	w12, w11
 398:	add	w10, w10, w12
 39c:	cmp	w9, w10
 3a0:	b.le	3c8 <_ZN10NCursesPadclEv+0x2c4>
 3a4:	cbz	x8, 3bc <_ZN10NCursesPadclEv+0x2b8>
 3a8:	ldrh	w8, [x8, #4]
 3ac:	cmp	w8, w27
 3b0:	csinv	w8, w8, wzr, ne  // ne = any
 3b4:	sxth	w8, w8
 3b8:	add	w8, w8, #0x1
 3bc:	add	w8, w8, w24
 3c0:	str	w8, [x19, #72]
 3c4:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 3c8:	add	w8, w11, w9
 3cc:	str	w8, [x19, #72]
 3d0:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 3d4:	mov	w10, wzr
 3d8:	ldr	w11, [x19, #64]
 3dc:	sub	w10, w10, w22
 3e0:	mvn	w12, w11
 3e4:	add	w10, w10, w12
 3e8:	cmp	w9, w10
 3ec:	b.le	1b4 <_ZN10NCursesPadclEv+0xb0>
 3f0:	cbz	x8, 408 <_ZN10NCursesPadclEv+0x304>
 3f4:	ldrh	w8, [x8, #6]
 3f8:	cmp	w8, w27
 3fc:	csinv	w8, w8, wzr, ne  // ne = any
 400:	sxth	w8, w8
 404:	add	w8, w8, #0x1
 408:	add	w8, w8, w25
 40c:	b	1b8 <_ZN10NCursesPadclEv+0xb4>
 410:	ldp	x20, x19, [sp, #80]
 414:	ldp	x22, x21, [sp, #64]
 418:	ldp	x24, x23, [sp, #48]
 41c:	ldp	x26, x25, [sp, #32]
 420:	ldr	x27, [sp, #16]
 424:	ldp	x29, x30, [sp], #96
 428:	ret

000000000000042c <_ZN10NCursesPad7refreshEv>:
 42c:	stp	x29, x30, [sp, #-32]!
 430:	str	x19, [sp, #16]
 434:	mov	x29, sp
 438:	ldr	x8, [x0]
 43c:	mov	x19, x0
 440:	ldr	x8, [x8, #40]
 444:	blr	x8
 448:	cbz	w0, 458 <_ZN10NCursesPad7refreshEv+0x2c>
 44c:	ldr	x19, [sp, #16]
 450:	ldp	x29, x30, [sp], #32
 454:	ret
 458:	ldr	x0, [x19, #48]
 45c:	cbz	x0, 44c <_ZN10NCursesPad7refreshEv+0x20>
 460:	ldr	x8, [x0]
 464:	ldr	x19, [sp, #16]
 468:	ldr	x1, [x8, #32]
 46c:	ldp	x29, x30, [sp], #32
 470:	br	x1

0000000000000474 <_ZN10NCursesPad11noutrefreshEv>:
 474:	sub	sp, sp, #0x30
 478:	stp	x29, x30, [sp, #16]
 47c:	stp	x20, x19, [sp, #32]
 480:	add	x29, sp, #0x10
 484:	ldr	x20, [x0, #56]
 488:	mov	x19, x0
 48c:	cbnz	x20, 498 <_ZN10NCursesPad11noutrefreshEv+0x24>
 490:	ldr	x20, [x19, #48]
 494:	cbz	x20, 520 <_ZN10NCursesPad11noutrefreshEv+0xac>
 498:	ldr	x1, [x20, #8]
 49c:	cbz	x1, 4c8 <_ZN10NCursesPad11noutrefreshEv+0x54>
 4a0:	ldrh	w8, [x1, #4]
 4a4:	ldrh	w9, [x1, #6]
 4a8:	mov	w10, #0xfffe                	// #65534
 4ac:	cmp	w8, w10
 4b0:	csinv	w8, w8, wzr, ne  // ne = any
 4b4:	cmp	w9, w10
 4b8:	sxth	w6, w8
 4bc:	csinv	w8, w9, wzr, ne  // ne = any
 4c0:	sxth	w7, w8
 4c4:	b	4d0 <_ZN10NCursesPad11noutrefreshEv+0x5c>
 4c8:	mov	w6, #0xffffffff            	// #-1
 4cc:	mov	w7, #0xffffffff            	// #-1
 4d0:	ldp	w2, w3, [x19, #72]
 4d4:	ldr	x0, [x19, #8]
 4d8:	mov	w4, wzr
 4dc:	mov	w5, wzr
 4e0:	str	wzr, [sp]
 4e4:	bl	0 <copywin>
 4e8:	cbz	w0, 4fc <_ZN10NCursesPad11noutrefreshEv+0x88>
 4ec:	ldp	x20, x19, [sp, #32]
 4f0:	ldp	x29, x30, [sp, #16]
 4f4:	add	sp, sp, #0x30
 4f8:	ret
 4fc:	ldr	x0, [x20, #8]
 500:	bl	0 <wsyncup>
 504:	ldr	x0, [x19, #48]
 508:	ldp	x20, x19, [sp, #32]
 50c:	ldp	x29, x30, [sp, #16]
 510:	ldr	x8, [x0]
 514:	ldr	x1, [x8, #40]
 518:	add	sp, sp, #0x30
 51c:	br	x1
 520:	mov	w0, wzr
 524:	ldp	x20, x19, [sp, #32]
 528:	ldp	x29, x30, [sp, #16]
 52c:	add	sp, sp, #0x30
 530:	ret

0000000000000534 <_ZN10NCursesPad9setWindowER13NCursesWindowii>:
 534:	cmp	w2, #0x1
 538:	str	x1, [x0, #48]
 53c:	str	xzr, [x0, #72]
 540:	b.lt	554 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>  // b.tstop
 544:	cmp	w3, #0x0
 548:	b.le	554 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>
 54c:	stp	w3, w2, [x0, #64]
 550:	ret
 554:	ldr	x8, [x0]
 558:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 55c:	add	x1, x1, #0x0
 560:	ldr	x2, [x8]
 564:	br	x2

0000000000000568 <_ZN10NCursesPad12setSubWindowER13NCursesWindow>:
 568:	stp	x29, x30, [sp, #-32]!
 56c:	stp	x20, x19, [sp, #16]
 570:	mov	x29, sp
 574:	mov	x19, x0
 578:	ldr	x0, [x0, #48]
 57c:	mov	x20, x1
 580:	cbnz	x0, 5a0 <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x38>
 584:	ldr	x8, [x19]
 588:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 58c:	add	x1, x1, #0x0
 590:	mov	x0, x19
 594:	ldr	x8, [x8]
 598:	blr	x8
 59c:	ldr	x0, [x19, #48]
 5a0:	mov	x1, x20
 5a4:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 5a8:	tbz	w0, #0, 5bc <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x54>
 5ac:	str	x20, [x19, #56]
 5b0:	ldp	x20, x19, [sp, #16]
 5b4:	ldp	x29, x30, [sp], #32
 5b8:	ret
 5bc:	mov	w0, #0x18                  	// #24
 5c0:	bl	0 <__cxa_allocate_exception>
 5c4:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
 5c8:	ldr	x8, [x8]
 5cc:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
 5d0:	add	x9, x9, #0x0
 5d4:	mov	w10, #0xffffffff            	// #-1
 5d8:	add	x8, x8, #0x10
 5dc:	stp	x8, x9, [x0]
 5e0:	str	w10, [x0, #16]
 5e4:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 5e8:	adrp	x2, 0 <_ZN10NCursesPadC1Eii>
 5ec:	ldr	x1, [x1]
 5f0:	ldr	x2, [x2]
 5f4:	bl	0 <__cxa_throw>

00000000000005f8 <_ZN16NCursesFramedPad11OnOperationEi>:
 5f8:	sub	sp, sp, #0x70
 5fc:	stp	x29, x30, [sp, #16]
 600:	stp	x28, x27, [sp, #32]
 604:	stp	x26, x25, [sp, #48]
 608:	stp	x24, x23, [sp, #64]
 60c:	stp	x22, x21, [sp, #80]
 610:	stp	x20, x19, [sp, #96]
 614:	add	x29, sp, #0x10
 618:	ldp	x24, x8, [x0, #48]
 61c:	cmp	x8, #0x0
 620:	csel	x8, x24, x8, eq  // eq = none
 624:	cbz	x8, 6a0 <_ZN16NCursesFramedPad11OnOperationEi+0xa8>
 628:	cbz	x24, 6a0 <_ZN16NCursesFramedPad11OnOperationEi+0xa8>
 62c:	ldr	x8, [x8, #8]
 630:	cbz	x8, 6c0 <_ZN16NCursesFramedPad11OnOperationEi+0xc8>
 634:	ldrh	w9, [x8, #6]
 638:	ldrh	w8, [x8, #4]
 63c:	mov	w10, #0xfffe                	// #65534
 640:	cmp	w9, w10
 644:	csinv	w9, w9, wzr, ne  // ne = any
 648:	cmp	w8, w10
 64c:	csinv	w8, w8, wzr, ne  // ne = any
 650:	sxth	w9, w9
 654:	sxth	w8, w8
 658:	add	w19, w9, #0x1
 65c:	add	w20, w8, #0x1
 660:	ldr	x10, [x0, #8]
 664:	cbz	x10, 6d0 <_ZN16NCursesFramedPad11OnOperationEi+0xd8>
 668:	ldrh	w8, [x10, #6]
 66c:	mov	w11, #0xfffe                	// #65534
 670:	cmp	w8, w11
 674:	csinv	w8, w8, wzr, ne  // ne = any
 678:	sxth	w8, w8
 67c:	adds	w9, w8, #0x1
 680:	b.eq	6e4 <_ZN16NCursesFramedPad11OnOperationEi+0xec>  // b.none
 684:	madd	w12, w19, w19, w8
 688:	sdiv	w12, w12, w9
 68c:	cmp	w12, #0x0
 690:	csinc	w12, w12, wzr, ne  // ne = any
 694:	cmp	w12, w19
 698:	csel	w25, w19, w12, gt
 69c:	b	6e8 <_ZN16NCursesFramedPad11OnOperationEi+0xf0>
 6a0:	ldp	x20, x19, [sp, #96]
 6a4:	ldp	x22, x21, [sp, #80]
 6a8:	ldp	x24, x23, [sp, #64]
 6ac:	ldp	x26, x25, [sp, #48]
 6b0:	ldp	x28, x27, [sp, #32]
 6b4:	ldp	x29, x30, [sp, #16]
 6b8:	add	sp, sp, #0x70
 6bc:	ret
 6c0:	mov	w19, wzr
 6c4:	mov	w20, wzr
 6c8:	ldr	x10, [x0, #8]
 6cc:	cbnz	x10, 668 <_ZN16NCursesFramedPad11OnOperationEi+0x70>
 6d0:	mov	w26, wzr
 6d4:	mov	w28, wzr
 6d8:	mov	w25, #0x1                   	// #1
 6dc:	mov	w27, #0x1                   	// #1
 6e0:	b	780 <_ZN16NCursesFramedPad11OnOperationEi+0x188>
 6e4:	mov	w25, #0x1                   	// #1
 6e8:	ldrh	w10, [x10, #4]
 6ec:	cmp	w10, w11
 6f0:	csinv	w10, w10, wzr, ne  // ne = any
 6f4:	sxth	w10, w10
 6f8:	adds	w11, w10, #0x1
 6fc:	b.cc	710 <_ZN16NCursesFramedPad11OnOperationEi+0x118>  // b.lo, b.ul, b.last
 700:	mov	w27, #0x1                   	// #1
 704:	cbz	w9, 754 <_ZN16NCursesFramedPad11OnOperationEi+0x15c>
 708:	mov	w12, wzr
 70c:	b	730 <_ZN16NCursesFramedPad11OnOperationEi+0x138>
 710:	madd	w12, w20, w20, w10
 714:	sdiv	w12, w12, w11
 718:	cmp	w12, #0x0
 71c:	csinc	w12, w12, wzr, ne  // ne = any
 720:	cmp	w12, w20
 724:	csel	w27, w20, w12, gt
 728:	cbz	w9, 760 <_ZN16NCursesFramedPad11OnOperationEi+0x168>
 72c:	mov	w12, #0x1                   	// #1
 730:	ldr	w13, [x0, #76]
 734:	madd	w8, w13, w19, w8
 738:	sdiv	w8, w8, w9
 73c:	add	w9, w8, w25
 740:	sub	w13, w19, w25
 744:	cmp	w9, w19
 748:	csel	w26, w13, w8, gt
 74c:	cbz	w12, 758 <_ZN16NCursesFramedPad11OnOperationEi+0x160>
 750:	b	764 <_ZN16NCursesFramedPad11OnOperationEi+0x16c>
 754:	mov	w26, wzr
 758:	mov	w28, wzr
 75c:	b	780 <_ZN16NCursesFramedPad11OnOperationEi+0x188>
 760:	mov	w26, wzr
 764:	ldr	w8, [x0, #72]
 768:	madd	w8, w8, w20, w10
 76c:	sdiv	w8, w8, w11
 770:	add	w9, w8, w27
 774:	sub	w10, w20, w27
 778:	cmp	w9, w20
 77c:	csel	w28, w10, w8, gt
 780:	ldr	x22, [x24, #8]
 784:	add	w21, w19, #0x1
 788:	mov	w1, #0x1                   	// #1
 78c:	mov	w2, w21
 790:	mov	x0, x22
 794:	bl	0 <wmove>
 798:	cmn	w0, #0x1
 79c:	b.eq	7b0 <_ZN16NCursesFramedPad11OnOperationEi+0x1b8>  // b.none
 7a0:	mov	x0, x22
 7a4:	mov	w1, wzr
 7a8:	mov	w2, w20
 7ac:	bl	0 <wvline>
 7b0:	ldr	x0, [x24, #8]
 7b4:	mov	w1, #0x40000               	// #262144
 7b8:	mov	x2, xzr
 7bc:	bl	0 <wattr_on>
 7c0:	cmp	w27, #0x1
 7c4:	b.le	84c <_ZN16NCursesFramedPad11OnOperationEi+0x254>
 7c8:	stur	w26, [x29, #-4]
 7cc:	adrp	x8, 0 <acs_map>
 7d0:	ldr	x8, [x8]
 7d4:	ldr	x23, [x24, #8]
 7d8:	add	w1, w28, #0x1
 7dc:	mov	w2, w21
 7e0:	ldr	w22, [x8, #180]
 7e4:	mov	x0, x23
 7e8:	bl	0 <wmove>
 7ec:	cmn	w0, #0x1
 7f0:	b.eq	800 <_ZN16NCursesFramedPad11OnOperationEi+0x208>  // b.none
 7f4:	mov	x0, x23
 7f8:	mov	w1, w22
 7fc:	bl	0 <waddch>
 800:	cmp	w27, #0x3
 804:	b.lt	878 <_ZN16NCursesFramedPad11OnOperationEi+0x280>  // b.tstop
 808:	sub	w26, w27, #0x2
 80c:	add	w22, w28, #0x2
 810:	b	820 <_ZN16NCursesFramedPad11OnOperationEi+0x228>
 814:	subs	w26, w26, #0x1
 818:	add	w22, w22, #0x1
 81c:	b.eq	878 <_ZN16NCursesFramedPad11OnOperationEi+0x280>  // b.none
 820:	ldr	x23, [x24, #8]
 824:	mov	w1, w22
 828:	mov	w2, w21
 82c:	mov	x0, x23
 830:	bl	0 <wmove>
 834:	cmn	w0, #0x1
 838:	b.eq	814 <_ZN16NCursesFramedPad11OnOperationEi+0x21c>  // b.none
 83c:	mov	w1, #0x20                  	// #32
 840:	mov	x0, x23
 844:	bl	0 <waddch>
 848:	b	814 <_ZN16NCursesFramedPad11OnOperationEi+0x21c>
 84c:	b.ne	8b0 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.any
 850:	ldr	x22, [x24, #8]
 854:	add	w1, w28, #0x1
 858:	mov	w2, w21
 85c:	mov	x0, x22
 860:	bl	0 <wmove>
 864:	cmn	w0, #0x1
 868:	b.eq	8b0 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.none
 86c:	mov	w1, #0x20                  	// #32
 870:	mov	x0, x22
 874:	b	8ac <_ZN16NCursesFramedPad11OnOperationEi+0x2b4>
 878:	adrp	x8, 0 <acs_map>
 87c:	ldr	x8, [x8]
 880:	ldr	x23, [x24, #8]
 884:	add	w1, w28, w27
 888:	mov	w2, w21
 88c:	ldr	w22, [x8, #184]
 890:	mov	x0, x23
 894:	bl	0 <wmove>
 898:	ldur	w26, [x29, #-4]
 89c:	cmn	w0, #0x1
 8a0:	b.eq	8b0 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.none
 8a4:	mov	x0, x23
 8a8:	mov	w1, w22
 8ac:	bl	0 <waddch>
 8b0:	ldr	x0, [x24, #8]
 8b4:	mov	w1, #0x40000               	// #262144
 8b8:	mov	x2, xzr
 8bc:	bl	0 <wattr_off>
 8c0:	ldr	x21, [x24, #8]
 8c4:	add	w20, w20, #0x1
 8c8:	mov	w2, #0x1                   	// #1
 8cc:	mov	w1, w20
 8d0:	mov	x0, x21
 8d4:	bl	0 <wmove>
 8d8:	cmn	w0, #0x1
 8dc:	b.eq	8f0 <_ZN16NCursesFramedPad11OnOperationEi+0x2f8>  // b.none
 8e0:	mov	x0, x21
 8e4:	mov	w1, wzr
 8e8:	mov	w2, w19
 8ec:	bl	0 <whline>
 8f0:	ldr	x0, [x24, #8]
 8f4:	mov	w1, #0x40000               	// #262144
 8f8:	mov	x2, xzr
 8fc:	bl	0 <wattr_on>
 900:	cmp	w25, #0x1
 904:	b.le	988 <_ZN16NCursesFramedPad11OnOperationEi+0x390>
 908:	adrp	x22, 0 <acs_map>
 90c:	ldr	x22, [x22]
 910:	ldr	x21, [x24, #8]
 914:	add	w2, w26, #0x1
 918:	mov	w1, w20
 91c:	ldr	w19, [x22, #176]
 920:	mov	x0, x21
 924:	bl	0 <wmove>
 928:	cmn	w0, #0x1
 92c:	b.eq	93c <_ZN16NCursesFramedPad11OnOperationEi+0x344>  // b.none
 930:	mov	x0, x21
 934:	mov	w1, w19
 938:	bl	0 <waddch>
 93c:	cmp	w25, #0x3
 940:	b.lt	9b4 <_ZN16NCursesFramedPad11OnOperationEi+0x3bc>  // b.tstop
 944:	sub	w23, w25, #0x2
 948:	add	w19, w26, #0x2
 94c:	b	95c <_ZN16NCursesFramedPad11OnOperationEi+0x364>
 950:	subs	w23, w23, #0x1
 954:	add	w19, w19, #0x1
 958:	b.eq	9b4 <_ZN16NCursesFramedPad11OnOperationEi+0x3bc>  // b.none
 95c:	ldr	x21, [x24, #8]
 960:	mov	w1, w20
 964:	mov	w2, w19
 968:	mov	x0, x21
 96c:	bl	0 <wmove>
 970:	cmn	w0, #0x1
 974:	b.eq	950 <_ZN16NCursesFramedPad11OnOperationEi+0x358>  // b.none
 978:	mov	w1, #0x20                  	// #32
 97c:	mov	x0, x21
 980:	bl	0 <waddch>
 984:	b	950 <_ZN16NCursesFramedPad11OnOperationEi+0x358>
 988:	b.ne	9e0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.any
 98c:	ldr	x19, [x24, #8]
 990:	add	w2, w26, #0x1
 994:	mov	w1, w20
 998:	mov	x0, x19
 99c:	bl	0 <wmove>
 9a0:	cmn	w0, #0x1
 9a4:	b.eq	9e0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.none
 9a8:	mov	w1, #0x20                  	// #32
 9ac:	mov	x0, x19
 9b0:	b	9dc <_ZN16NCursesFramedPad11OnOperationEi+0x3e4>
 9b4:	ldr	x21, [x24, #8]
 9b8:	ldr	w19, [x22, #172]
 9bc:	add	w2, w25, w26
 9c0:	mov	w1, w20
 9c4:	mov	x0, x21
 9c8:	bl	0 <wmove>
 9cc:	cmn	w0, #0x1
 9d0:	b.eq	9e0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.none
 9d4:	mov	x0, x21
 9d8:	mov	w1, w19
 9dc:	bl	0 <waddch>
 9e0:	ldr	x0, [x24, #8]
 9e4:	ldp	x20, x19, [sp, #96]
 9e8:	ldp	x22, x21, [sp, #80]
 9ec:	ldp	x24, x23, [sp, #64]
 9f0:	ldp	x26, x25, [sp, #48]
 9f4:	ldp	x28, x27, [sp, #32]
 9f8:	ldp	x29, x30, [sp, #16]
 9fc:	mov	w1, #0x40000               	// #262144
 a00:	mov	x2, xzr
 a04:	add	sp, sp, #0x70
 a08:	b	0 <wattr_off>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN10NCursesPadD0Ev:

0000000000000000 <_ZN10NCursesPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZN13NCursesWindowD2Ev>
  18:	mov	x0, x19
  1c:	ldp	x20, x19, [sp, #32]
  20:	ldr	x21, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	b	0 <_ZdlPv>
  2c:	mov	x20, x0
  30:	mov	x0, x19
  34:	mov	x21, x1
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	tbz	w21, #31, 48 <_ZN10NCursesPadD0Ev+0x48>
  44:	bl	0 <__cxa_call_unexpected>
  48:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN10NCursesPad18OnUnknownOperationEi:

0000000000000000 <_ZN10NCursesPad18OnUnknownOperationEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad17OnNavigationErrorEi:

0000000000000000 <_ZN10NCursesPad17OnNavigationErrorEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad11OnOperationEi:

0000000000000000 <_ZN10NCursesPad11OnOperationEi>:
   0:	ret

Disassembly of section .text._ZN16NCursesFramedPadD2Ev:

0000000000000000 <_ZN16NCursesFramedPadD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 90 <_ZTV16NCursesFramedPad>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x8, [x8]
  20:	add	x8, x8, #0x10
  24:	str	x8, [x19]
  28:	cbz	x0, 38 <_ZN16NCursesFramedPadD2Ev+0x38>
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN13NCursesWindowD2Ev>
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret
  50:	mov	x21, x1
  54:	mov	x20, x0
  58:	mov	x0, x19
  5c:	bl	0 <_ZN13NCursesWindowD2Ev>
  60:	b	70 <_ZN16NCursesFramedPadD2Ev+0x70>
  64:	bl	0 <_ZN16NCursesFramedPadD2Ev>
  68:	mov	x21, x1
  6c:	mov	x20, x0
  70:	mov	x0, x20
  74:	tbz	w21, #31, 7c <_ZN16NCursesFramedPadD2Ev+0x7c>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPadD0Ev:

0000000000000000 <_ZN16NCursesFramedPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 90 <_ZN16NCursesFramedPadD0Ev+0x90>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x8, [x8]
  20:	add	x8, x8, #0x10
  24:	str	x8, [x19]
  28:	cbz	x0, 38 <_ZN16NCursesFramedPadD0Ev+0x38>
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN13NCursesWindowD2Ev>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	mov	x21, x1
  58:	mov	x20, x0
  5c:	mov	x0, x19
  60:	bl	0 <_ZN13NCursesWindowD2Ev>
  64:	b	74 <_ZN16NCursesFramedPadD0Ev+0x74>
  68:	bl	0 <_ZN16NCursesFramedPadD0Ev>
  6c:	mov	x21, x1
  70:	mov	x20, x0
  74:	tbz	w21, #31, 88 <_ZN16NCursesFramedPadD0Ev+0x88>
  78:	mov	x0, x20
  7c:	bl	0 <__cxa_call_unexpected>
  80:	mov	x21, x1
  84:	mov	x20, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZdlPv>
  90:	mov	x0, x20
  94:	tbz	w21, #31, 9c <_ZN16NCursesFramedPadD0Ev+0x9c>
  98:	bl	0 <__cxa_call_unexpected>
  9c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPad9setWindowER13NCursesWindowii:

0000000000000000 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesFramedPad12setSubWindowER13NCursesWindow:

0000000000000000 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12NCursesPanel4initEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <new_panel>
  18:	str	x0, [x19, #48]
  1c:	cbz	x0, 48 <_ZN12NCursesPanel4initEv+0x48>
  20:	mov	x20, x0
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <_Znwm>
  2c:	stp	xzr, x19, [x0]
  30:	str	x20, [x0, #16]
  34:	mov	x1, x0
  38:	mov	x0, x20
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <set_panel_userptr>
  48:	mov	w0, #0x18                  	// #24
  4c:	bl	0 <__cxa_allocate_exception>
  50:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
  54:	ldr	x8, [x8]
  58:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
  5c:	add	x9, x9, #0x0
  60:	mov	w10, #0xffffffff            	// #-1
  64:	add	x8, x8, #0x10
  68:	stp	x8, x9, [x0]
  6c:	str	w10, [x0, #16]
  70:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
  74:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
  78:	ldr	x1, [x1]
  7c:	ldr	x2, [x2]
  80:	bl	0 <__cxa_throw>
  84:	bl	0 <__cxa_call_unexpected>

0000000000000088 <_ZN12NCursesPanelD1Ev>:
  88:	stp	x29, x30, [sp, #-48]!
  8c:	str	x21, [sp, #16]
  90:	stp	x20, x19, [sp, #32]
  94:	mov	x29, sp
  98:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
  9c:	mov	x19, x0
  a0:	ldr	x0, [x0, #48]
  a4:	ldr	x8, [x8]
  a8:	add	x8, x8, #0x10
  ac:	str	x8, [x19]
  b0:	bl	0 <panel_userptr>
  b4:	cbz	x0, bc <_ZN12NCursesPanelD1Ev+0x34>
  b8:	bl	0 <_ZdlPv>
  bc:	ldr	x0, [x19, #48]
  c0:	bl	0 <del_panel>
  c4:	bl	0 <update_panels>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN13NCursesWindowD2Ev>
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldr	x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x21, x1
  e4:	mov	x20, x0
  e8:	b	fc <_ZN12NCursesPanelD1Ev+0x74>
  ec:	mov	x21, x1
  f0:	mov	x20, x0
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN13NCursesWindowD2Ev>
  fc:	mov	x0, x20
 100:	tbz	w21, #31, 108 <_ZN12NCursesPanelD1Ev+0x80>
 104:	bl	0 <__cxa_call_unexpected>
 108:	bl	0 <_Unwind_Resume>
 10c:	bl	0 <_ZN12NCursesPanel4initEv>

0000000000000110 <_ZN12NCursesPanelD0Ev>:
 110:	stp	x29, x30, [sp, #-48]!
 114:	str	x21, [sp, #16]
 118:	stp	x20, x19, [sp, #32]
 11c:	mov	x29, sp
 120:	mov	x19, x0
 124:	bl	88 <_ZN12NCursesPanelD1Ev>
 128:	mov	x0, x19
 12c:	ldp	x20, x19, [sp, #32]
 130:	ldr	x21, [sp, #16]
 134:	ldp	x29, x30, [sp], #48
 138:	b	0 <_ZdlPv>
 13c:	mov	x20, x0
 140:	mov	x0, x19
 144:	mov	x21, x1
 148:	bl	0 <_ZdlPv>
 14c:	mov	x0, x20
 150:	tbz	w21, #31, 158 <_ZN12NCursesPanelD0Ev+0x48>
 154:	bl	0 <__cxa_call_unexpected>
 158:	bl	0 <_Unwind_Resume>

000000000000015c <_ZN12NCursesPanel6redrawEv>:
 15c:	stp	x29, x30, [sp, #-32]!
 160:	str	x19, [sp, #16]
 164:	mov	x29, sp
 168:	mov	x0, xzr
 16c:	bl	0 <panel_above>
 170:	cbz	x0, 1b4 <_ZN12NCursesPanel6redrawEv+0x58>
 174:	mov	x19, x0
 178:	b	1a0 <_ZN12NCursesPanel6redrawEv+0x44>
 17c:	ldrsh	w8, [x0, #4]
 180:	add	w2, w8, #0x1
 184:	mov	w3, #0x1                   	// #1
 188:	mov	w1, wzr
 18c:	bl	0 <wtouchln>
 190:	mov	x0, x19
 194:	bl	0 <panel_above>
 198:	mov	x19, x0
 19c:	cbz	x0, 1b4 <_ZN12NCursesPanel6redrawEv+0x58>
 1a0:	mov	x0, x19
 1a4:	bl	0 <panel_window>
 1a8:	cbnz	x0, 17c <_ZN12NCursesPanel6redrawEv+0x20>
 1ac:	mov	w2, #0xffffffff            	// #-1
 1b0:	b	184 <_ZN12NCursesPanel6redrawEv+0x28>
 1b4:	bl	0 <update_panels>
 1b8:	ldr	x19, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #32
 1c0:	b	0 <doupdate>

00000000000001c4 <_ZN12NCursesPanel7refreshEv>:
 1c4:	stp	x29, x30, [sp, #-16]!
 1c8:	mov	x29, sp
 1cc:	bl	0 <update_panels>
 1d0:	ldp	x29, x30, [sp], #16
 1d4:	b	0 <doupdate>

00000000000001d8 <_ZN12NCursesPanel11noutrefreshEv>:
 1d8:	stp	x29, x30, [sp, #-16]!
 1dc:	mov	x29, sp
 1e0:	bl	0 <update_panels>
 1e4:	mov	w0, wzr
 1e8:	ldp	x29, x30, [sp], #16
 1ec:	ret

00000000000001f0 <_ZN12NCursesPanel9boldframeEPKcS1_>:
 1f0:	stp	x29, x30, [sp, #-32]!
 1f4:	str	x19, [sp, #16]
 1f8:	mov	x29, sp
 1fc:	ldr	x8, [x0, #8]
 200:	mov	x19, x0
 204:	cbz	x8, 214 <_ZN12NCursesPanel9boldframeEPKcS1_+0x24>
 208:	mov	w9, #0x10000               	// #65536
 20c:	str	wzr, [x8, #116]
 210:	str	w9, [x8, #16]
 214:	ldr	x8, [x19]
 218:	mov	x0, x19
 21c:	ldr	x8, [x8, #56]
 220:	blr	x8
 224:	ldr	x8, [x19, #8]
 228:	cbz	x8, 234 <_ZN12NCursesPanel9boldframeEPKcS1_+0x44>
 22c:	str	wzr, [x8, #116]
 230:	str	wzr, [x8, #16]
 234:	ldr	x19, [sp, #16]
 238:	ldp	x29, x30, [sp], #32
 23c:	ret

0000000000000240 <_ZN12NCursesPanel5frameEPKcS1_>:
 240:	sub	sp, sp, #0x40
 244:	stp	x29, x30, [sp, #16]
 248:	stp	x22, x21, [sp, #32]
 24c:	stp	x20, x19, [sp, #48]
 250:	add	x29, sp, #0x10
 254:	mov	x20, x0
 258:	ldr	x0, [x0, #8]
 25c:	mov	x19, x2
 260:	mov	x21, x1
 264:	orr	x22, x1, x2
 268:	mov	w1, wzr
 26c:	mov	w2, wzr
 270:	mov	w3, wzr
 274:	mov	w4, wzr
 278:	mov	w5, wzr
 27c:	mov	w6, wzr
 280:	mov	w7, wzr
 284:	str	wzr, [sp]
 288:	bl	0 <wborder>
 28c:	cbz	x22, 2bc <_ZN12NCursesPanel5frameEPKcS1_+0x7c>
 290:	cbnz	w0, 2bc <_ZN12NCursesPanel5frameEPKcS1_+0x7c>
 294:	ldr	x8, [x20]
 298:	mov	x0, x20
 29c:	mov	x1, x21
 2a0:	mov	x2, x19
 2a4:	ldr	x3, [x8, #72]
 2a8:	ldp	x20, x19, [sp, #48]
 2ac:	ldp	x22, x21, [sp, #32]
 2b0:	ldp	x29, x30, [sp, #16]
 2b4:	add	sp, sp, #0x40
 2b8:	br	x3
 2bc:	cmn	w0, #0x1
 2c0:	b.eq	2d8 <_ZN12NCursesPanel5frameEPKcS1_+0x98>  // b.none
 2c4:	ldp	x20, x19, [sp, #48]
 2c8:	ldp	x22, x21, [sp, #32]
 2cc:	ldp	x29, x30, [sp, #16]
 2d0:	add	sp, sp, #0x40
 2d4:	ret
 2d8:	mov	w0, #0x18                  	// #24
 2dc:	bl	0 <__cxa_allocate_exception>
 2e0:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
 2e4:	ldr	x8, [x8]
 2e8:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
 2ec:	add	x9, x9, #0x0
 2f0:	mov	w10, #0xffffffff            	// #-1
 2f4:	add	x8, x8, #0x10
 2f8:	stp	x8, x9, [x0]
 2fc:	str	w10, [x0, #16]
 300:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
 304:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
 308:	ldr	x1, [x1]
 30c:	ldr	x2, [x2]
 310:	bl	0 <__cxa_throw>
 314:	bl	0 <__cxa_call_unexpected>

0000000000000318 <_ZN12NCursesPanel5labelEPKcS1_>:
 318:	stp	x29, x30, [sp, #-32]!
 31c:	stp	x20, x19, [sp, #16]
 320:	mov	x29, sp
 324:	mov	x19, x2
 328:	mov	x20, x0
 32c:	cbz	x1, 348 <_ZN12NCursesPanel5labelEPKcS1_+0x30>
 330:	ldr	x8, [x20]
 334:	mov	x2, x1
 338:	mov	x0, x20
 33c:	mov	w1, wzr
 340:	ldr	x8, [x8, #80]
 344:	blr	x8
 348:	cbz	x19, 36c <_ZN12NCursesPanel5labelEPKcS1_+0x54>
 34c:	ldr	x8, [x20, #8]
 350:	cbz	x8, 378 <_ZN12NCursesPanel5labelEPKcS1_+0x60>
 354:	ldrh	w8, [x8, #4]
 358:	mov	w9, #0xfffe                	// #65534
 35c:	cmp	w8, w9
 360:	csinv	w8, w8, wzr, ne  // ne = any
 364:	sxth	w1, w8
 368:	b	37c <_ZN12NCursesPanel5labelEPKcS1_+0x64>
 36c:	ldp	x20, x19, [sp, #16]
 370:	ldp	x29, x30, [sp], #32
 374:	ret
 378:	mov	w1, #0xffffffff            	// #-1
 37c:	ldr	x8, [x20]
 380:	mov	x0, x20
 384:	mov	x2, x19
 388:	ldp	x20, x19, [sp, #16]
 38c:	ldr	x3, [x8, #80]
 390:	ldp	x29, x30, [sp], #32
 394:	br	x3

0000000000000398 <_ZN12NCursesPanel10centertextEiPKc>:
 398:	stp	x29, x30, [sp, #-48]!
 39c:	stp	x22, x21, [sp, #16]
 3a0:	stp	x20, x19, [sp, #32]
 3a4:	mov	x29, sp
 3a8:	cbz	x2, 43c <_ZN12NCursesPanel10centertextEiPKc+0xa4>
 3ac:	ldr	x20, [x0, #8]
 3b0:	mov	x19, x2
 3b4:	mov	w21, w1
 3b8:	cbz	x20, 3d4 <_ZN12NCursesPanel10centertextEiPKc+0x3c>
 3bc:	ldrh	w8, [x20, #6]
 3c0:	mov	w9, #0xfffe                	// #65534
 3c4:	cmp	w8, w9
 3c8:	csinv	w8, w8, wzr, ne  // ne = any
 3cc:	sxth	x22, w8
 3d0:	b	3d8 <_ZN12NCursesPanel10centertextEiPKc+0x40>
 3d4:	mov	x22, #0xffffffffffffffff    	// #-1
 3d8:	mov	x0, x19
 3dc:	bl	0 <strlen>
 3e0:	sub	x8, x22, x0
 3e4:	lsr	x8, x8, #1
 3e8:	bic	w2, w8, w8, asr #31
 3ec:	cbz	x20, 40c <_ZN12NCursesPanel10centertextEiPKc+0x74>
 3f0:	ldrh	w8, [x20, #6]
 3f4:	mov	w9, #0xfffe                	// #65534
 3f8:	cmp	w8, w9
 3fc:	csinv	w8, w8, wzr, ne  // ne = any
 400:	sxth	w8, w8
 404:	add	w22, w8, #0x1
 408:	b	410 <_ZN12NCursesPanel10centertextEiPKc+0x78>
 40c:	mov	w22, wzr
 410:	mov	x0, x20
 414:	mov	w1, w21
 418:	bl	0 <wmove>
 41c:	cmn	w0, #0x1
 420:	b.eq	44c <_ZN12NCursesPanel10centertextEiPKc+0xb4>  // b.none
 424:	mov	x0, x20
 428:	mov	x1, x19
 42c:	mov	w2, w22
 430:	bl	0 <waddnstr>
 434:	cmn	w0, #0x1
 438:	b.eq	44c <_ZN12NCursesPanel10centertextEiPKc+0xb4>  // b.none
 43c:	ldp	x20, x19, [sp, #32]
 440:	ldp	x22, x21, [sp, #16]
 444:	ldp	x29, x30, [sp], #48
 448:	ret
 44c:	mov	w0, #0x18                  	// #24
 450:	bl	0 <__cxa_allocate_exception>
 454:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
 458:	ldr	x8, [x8]
 45c:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
 460:	add	x9, x9, #0x0
 464:	mov	w10, #0xffffffff            	// #-1
 468:	add	x8, x8, #0x10
 46c:	stp	x8, x9, [x0]
 470:	str	w10, [x0, #16]
 474:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
 478:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
 47c:	ldr	x1, [x1]
 480:	ldr	x2, [x2]
 484:	bl	0 <__cxa_throw>
 488:	bl	0 <__cxa_call_unexpected>

000000000000048c <_ZN12NCursesPanel6getKeyEv>:
 48c:	ldr	x0, [x0, #8]
 490:	b	0 <wgetch>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursslk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	mov	x20, x1
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x20>
  1c:	bl	0 <_ZdaPv>
  20:	mov	x0, x20
  24:	bl	0 <strlen>
  28:	add	x0, x0, #0x1
  2c:	bl	0 <_Znam>
  30:	mov	x1, x20
  34:	str	x0, [x19, #8]
  38:	bl	0 <strcpy>
  3c:	mov	x0, x19
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

000000000000004c <_ZN18Soft_Label_Key_Set4initEv>:
  4c:	stp	x29, x30, [sp, #-48]!
  50:	str	x21, [sp, #16]
  54:	stp	x20, x19, [sp, #32]
  58:	mov	x29, sp
  5c:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
  60:	ldr	x8, [x8]
  64:	mov	x19, x0
  68:	ldrsw	x20, [x8]
  6c:	mov	w8, #0x18                  	// #24
  70:	umulh	x8, x20, x8
  74:	add	x9, x20, x20, lsl #1
  78:	cmp	xzr, x8
  7c:	lsl	x21, x9, #3
  80:	cset	w8, ne  // ne = any
  84:	adds	x9, x21, #0x8
  88:	cset	w10, cs  // cs = hs, nlast
  8c:	orr	w8, w8, w10
  90:	cmp	w8, #0x0
  94:	csinv	x0, x9, xzr, eq  // eq = none
  98:	bl	0 <_Znam>
  9c:	mov	x8, x0
  a0:	str	x20, [x8], #8
  a4:	cbz	w20, 150 <_ZN18Soft_Label_Key_Set4initEv+0x104>
  a8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
  ac:	ldr	x9, [x9]
  b0:	sub	x13, x21, #0x18
  b4:	cmp	x13, #0x18
  b8:	mov	x10, x8
  bc:	b.cc	114 <_ZN18Soft_Label_Key_Set4initEv+0xc8>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x13, x10
  cc:	lsr	x10, x10, #4
  d0:	add	x13, x10, #0x1
  d4:	mov	w15, #0x18                  	// #24
  d8:	and	x14, x13, #0x1ffffffffffffffe
  dc:	add	x11, x0, #0x18
  e0:	add	x12, x9, #0x10
  e4:	madd	x10, x14, x15, x8
  e8:	movi	d0, #0xffffffff00000000
  ec:	mov	x15, x14
  f0:	stp	x12, xzr, [x11, #-16]
  f4:	stp	x12, xzr, [x11, #8]
  f8:	str	d0, [x11]
  fc:	str	d0, [x11, #24]
 100:	subs	x15, x15, #0x2
 104:	add	x11, x11, #0x30
 108:	b.ne	f0 <_ZN18Soft_Label_Key_Set4initEv+0xa4>  // b.any
 10c:	cmp	x13, x14
 110:	b.eq	134 <_ZN18Soft_Label_Key_Set4initEv+0xe8>  // b.none
 114:	add	x11, x8, x21
 118:	add	x9, x9, #0x10
 11c:	movi	d0, #0xffffffff00000000
 120:	stp	x9, xzr, [x10]
 124:	str	d0, [x10, #16]
 128:	add	x10, x10, #0x18
 12c:	cmp	x10, x11
 130:	b.ne	120 <_ZN18Soft_Label_Key_Set4initEv+0xd4>  // b.any
 134:	cmp	w20, #0x1
 138:	str	x8, [x19, #16]
 13c:	b.lt	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>  // b.tstop
 140:	cmp	w20, #0x1
 144:	b.ne	158 <_ZN18Soft_Label_Key_Set4initEv+0x10c>  // b.any
 148:	mov	x8, xzr
 14c:	b	184 <_ZN18Soft_Label_Key_Set4initEv+0x138>
 150:	str	x8, [x19, #16]
 154:	b	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>
 158:	mov	x9, xzr
 15c:	and	x8, x20, #0xfffffffffffffffe
 160:	add	x10, x0, #0x34
 164:	add	w11, w9, #0x1
 168:	add	x9, x9, #0x2
 16c:	stur	w11, [x10, #-24]
 170:	str	w9, [x10], #48
 174:	cmp	x8, x9
 178:	b.ne	164 <_ZN18Soft_Label_Key_Set4initEv+0x118>  // b.any
 17c:	cmp	x8, x20
 180:	b.eq	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>  // b.none
 184:	mov	w9, #0x18                  	// #24
 188:	madd	x9, x8, x9, x0
 18c:	add	x9, x9, #0x1c
 190:	add	x8, x8, #0x1
 194:	cmp	x8, x20
 198:	str	w8, [x9], #24
 19c:	b.lt	190 <_ZN18Soft_Label_Key_Set4initEv+0x144>  // b.tstop
 1a0:	strb	wzr, [x19, #8]
 1a4:	ldp	x20, x19, [sp, #32]
 1a8:	ldr	x21, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	ret

00000000000001b4 <_ZN18Soft_Label_Key_SetC1Ev>:
 1b4:	stp	x29, x30, [sp, #-48]!
 1b8:	str	x21, [sp, #16]
 1bc:	stp	x20, x19, [sp, #32]
 1c0:	mov	x29, sp
 1c4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1c8:	ldr	x8, [x8]
 1cc:	strb	wzr, [x0, #8]
 1d0:	str	xzr, [x0, #16]
 1d4:	add	x8, x8, #0x10
 1d8:	str	x8, [x0]
 1dc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1e0:	ldr	x8, [x8]
 1e4:	ldr	w8, [x8]
 1e8:	cmn	w8, #0x1
 1ec:	b.eq	348 <_ZN18Soft_Label_Key_SetC1Ev+0x194>  // b.none
 1f0:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 1f4:	ldr	x8, [x8]
 1f8:	mov	x19, x0
 1fc:	ldrsw	x20, [x8]
 200:	mov	w8, #0x18                  	// #24
 204:	umulh	x8, x20, x8
 208:	add	x9, x20, x20, lsl #1
 20c:	cmp	xzr, x8
 210:	lsl	x21, x9, #3
 214:	cset	w8, ne  // ne = any
 218:	adds	x9, x21, #0x8
 21c:	cset	w10, cs  // cs = hs, nlast
 220:	orr	w8, w8, w10
 224:	cmp	w8, #0x0
 228:	csinv	x0, x9, xzr, eq  // eq = none
 22c:	bl	0 <_Znam>
 230:	mov	x8, x0
 234:	str	x20, [x8], #8
 238:	cbz	w20, 2e4 <_ZN18Soft_Label_Key_SetC1Ev+0x130>
 23c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 240:	ldr	x9, [x9]
 244:	sub	x13, x21, #0x18
 248:	cmp	x13, #0x18
 24c:	mov	x10, x8
 250:	b.cc	2a8 <_ZN18Soft_Label_Key_SetC1Ev+0xf4>  // b.lo, b.ul, b.last
 254:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 258:	movk	x10, #0xaaab
 25c:	umulh	x10, x13, x10
 260:	lsr	x10, x10, #4
 264:	add	x13, x10, #0x1
 268:	mov	w15, #0x18                  	// #24
 26c:	and	x14, x13, #0x1ffffffffffffffe
 270:	add	x11, x0, #0x18
 274:	add	x12, x9, #0x10
 278:	madd	x10, x14, x15, x8
 27c:	movi	d0, #0xffffffff00000000
 280:	mov	x15, x14
 284:	stp	x12, xzr, [x11, #-16]
 288:	stp	x12, xzr, [x11, #8]
 28c:	str	d0, [x11]
 290:	str	d0, [x11, #24]
 294:	subs	x15, x15, #0x2
 298:	add	x11, x11, #0x30
 29c:	b.ne	284 <_ZN18Soft_Label_Key_SetC1Ev+0xd0>  // b.any
 2a0:	cmp	x13, x14
 2a4:	b.eq	2c8 <_ZN18Soft_Label_Key_SetC1Ev+0x114>  // b.none
 2a8:	add	x11, x8, x21
 2ac:	add	x9, x9, #0x10
 2b0:	movi	d0, #0xffffffff00000000
 2b4:	stp	x9, xzr, [x10]
 2b8:	str	d0, [x10, #16]
 2bc:	add	x10, x10, #0x18
 2c0:	cmp	x10, x11
 2c4:	b.ne	2b4 <_ZN18Soft_Label_Key_SetC1Ev+0x100>  // b.any
 2c8:	cmp	w20, #0x1
 2cc:	str	x8, [x19, #16]
 2d0:	b.lt	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>  // b.tstop
 2d4:	cmp	w20, #0x1
 2d8:	b.ne	2ec <_ZN18Soft_Label_Key_SetC1Ev+0x138>  // b.any
 2dc:	mov	x8, xzr
 2e0:	b	318 <_ZN18Soft_Label_Key_SetC1Ev+0x164>
 2e4:	str	x8, [x19, #16]
 2e8:	b	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>
 2ec:	mov	x9, xzr
 2f0:	and	x8, x20, #0xfffffffffffffffe
 2f4:	add	x10, x0, #0x34
 2f8:	add	w11, w9, #0x1
 2fc:	add	x9, x9, #0x2
 300:	stur	w11, [x10, #-24]
 304:	str	w9, [x10], #48
 308:	cmp	x8, x9
 30c:	b.ne	2f8 <_ZN18Soft_Label_Key_SetC1Ev+0x144>  // b.any
 310:	cmp	x8, x20
 314:	b.eq	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>  // b.none
 318:	mov	w9, #0x18                  	// #24
 31c:	madd	x9, x8, x9, x0
 320:	add	x9, x9, #0x1c
 324:	add	x8, x8, #0x1
 328:	cmp	x20, x8
 32c:	str	w8, [x9], #24
 330:	b.ne	324 <_ZN18Soft_Label_Key_SetC1Ev+0x170>  // b.any
 334:	strb	wzr, [x19, #8]
 338:	ldp	x20, x19, [sp, #32]
 33c:	ldr	x21, [sp, #16]
 340:	ldp	x29, x30, [sp], #48
 344:	ret
 348:	mov	w0, #0x18                  	// #24
 34c:	bl	0 <__cxa_allocate_exception>
 350:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 354:	ldr	x8, [x8]
 358:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 35c:	add	x9, x9, #0x0
 360:	mov	w10, #0xffffffff            	// #-1
 364:	add	x8, x8, #0x10
 368:	stp	x8, x9, [x0]
 36c:	str	w10, [x0, #16]
 370:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 374:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 378:	ldr	x1, [x1]
 37c:	ldr	x2, [x2]
 380:	bl	0 <__cxa_throw>
 384:	bl	0 <__cxa_call_unexpected>

0000000000000388 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>:
 388:	stp	x29, x30, [sp, #-48]!
 38c:	str	x21, [sp, #16]
 390:	stp	x20, x19, [sp, #32]
 394:	mov	x29, sp
 398:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 39c:	ldr	x8, [x8]
 3a0:	cmn	w1, #0x1
 3a4:	strb	wzr, [x0, #8]
 3a8:	str	xzr, [x0, #16]
 3ac:	add	x8, x8, #0x10
 3b0:	str	x8, [x0]
 3b4:	b.eq	580 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1f8>  // b.none
 3b8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3bc:	ldr	x8, [x8]
 3c0:	mov	w20, w1
 3c4:	mov	x19, x0
 3c8:	ldr	x9, [x8]
 3cc:	add	x10, x9, #0x1
 3d0:	str	x10, [x8]
 3d4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3d8:	ldr	x8, [x8]
 3dc:	cbz	x9, 3fc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x74>
 3e0:	ldr	w8, [x8]
 3e4:	cmp	w8, w20
 3e8:	b.ne	5bc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x234>  // b.any
 3ec:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 3f0:	ldr	x8, [x8]
 3f4:	ldr	w21, [x8]
 3f8:	b	42c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xa4>
 3fc:	mov	w0, w20
 400:	str	w20, [x8]
 404:	bl	0 <slk_init>
 408:	cmn	w0, #0x1
 40c:	b.eq	5f8 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x270>  // b.none
 410:	cmp	w20, #0x1
 414:	mov	w8, #0x8                   	// #8
 418:	mov	w9, #0xc                   	// #12
 41c:	csel	w21, w9, w8, gt
 420:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 424:	ldr	x8, [x8]
 428:	str	w21, [x8]
 42c:	sxtw	x20, w21
 430:	mov	w8, #0x18                  	// #24
 434:	umulh	x8, x20, x8
 438:	add	x9, x20, w21, sxtw #1
 43c:	cmp	xzr, x8
 440:	lsl	x8, x9, #3
 444:	cset	w9, ne  // ne = any
 448:	adds	x8, x8, #0x8
 44c:	cset	w10, cs  // cs = hs, nlast
 450:	orr	w9, w9, w10
 454:	cmp	w9, #0x0
 458:	csinv	x0, x8, xzr, eq  // eq = none
 45c:	bl	0 <_Znam>
 460:	mov	x8, x0
 464:	str	x20, [x8], #8
 468:	cbz	w21, 51c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x194>
 46c:	adrp	x10, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 470:	add	x9, x20, x20, lsl #1
 474:	ldr	x10, [x10]
 478:	lsl	x9, x9, #3
 47c:	sub	x14, x9, #0x18
 480:	cmp	x14, #0x18
 484:	mov	x11, x8
 488:	b.cc	4e0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x158>  // b.lo, b.ul, b.last
 48c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 490:	movk	x11, #0xaaab
 494:	umulh	x11, x14, x11
 498:	lsr	x11, x11, #4
 49c:	add	x14, x11, #0x1
 4a0:	mov	w16, #0x18                  	// #24
 4a4:	and	x15, x14, #0x1ffffffffffffffe
 4a8:	add	x12, x0, #0x18
 4ac:	add	x13, x10, #0x10
 4b0:	madd	x11, x15, x16, x8
 4b4:	movi	d0, #0xffffffff00000000
 4b8:	mov	x16, x15
 4bc:	stp	x13, xzr, [x12, #-16]
 4c0:	stp	x13, xzr, [x12, #8]
 4c4:	str	d0, [x12]
 4c8:	str	d0, [x12, #24]
 4cc:	subs	x16, x16, #0x2
 4d0:	add	x12, x12, #0x30
 4d4:	b.ne	4bc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x134>  // b.any
 4d8:	cmp	x14, x15
 4dc:	b.eq	500 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x178>  // b.none
 4e0:	add	x9, x8, x9
 4e4:	add	x10, x10, #0x10
 4e8:	movi	d0, #0xffffffff00000000
 4ec:	stp	x10, xzr, [x11]
 4f0:	str	d0, [x11, #16]
 4f4:	add	x11, x11, #0x18
 4f8:	cmp	x11, x9
 4fc:	b.ne	4ec <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x164>  // b.any
 500:	cmp	w20, #0x1
 504:	str	x8, [x19, #16]
 508:	b.lt	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>  // b.tstop
 50c:	cmp	w20, #0x1
 510:	b.ne	524 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x19c>  // b.any
 514:	mov	x8, xzr
 518:	b	550 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1c8>
 51c:	str	x8, [x19, #16]
 520:	b	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>
 524:	mov	x9, xzr
 528:	and	x8, x20, #0xfffffffffffffffe
 52c:	add	x10, x0, #0x34
 530:	add	w11, w9, #0x1
 534:	add	x9, x9, #0x2
 538:	stur	w11, [x10, #-24]
 53c:	str	w9, [x10], #48
 540:	cmp	x8, x9
 544:	b.ne	530 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1a8>  // b.any
 548:	cmp	x8, x20
 54c:	b.eq	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>  // b.none
 550:	mov	w9, #0x18                  	// #24
 554:	madd	x9, x8, x9, x0
 558:	add	x9, x9, #0x1c
 55c:	add	x8, x8, #0x1
 560:	cmp	x20, x8
 564:	str	w8, [x9], #24
 568:	b.ne	55c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1d4>  // b.any
 56c:	strb	wzr, [x19, #8]
 570:	ldp	x20, x19, [sp, #32]
 574:	ldr	x21, [sp, #16]
 578:	ldp	x29, x30, [sp], #48
 57c:	ret
 580:	mov	w0, #0x18                  	// #24
 584:	bl	0 <__cxa_allocate_exception>
 588:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 58c:	ldr	x8, [x8]
 590:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 594:	add	x9, x9, #0x0
 598:	mov	w10, #0xffffffff            	// #-1
 59c:	add	x8, x8, #0x10
 5a0:	stp	x8, x9, [x0]
 5a4:	str	w10, [x0, #16]
 5a8:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5ac:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5b0:	ldr	x1, [x1]
 5b4:	ldr	x2, [x2]
 5b8:	bl	0 <__cxa_throw>
 5bc:	mov	w0, #0x18                  	// #24
 5c0:	bl	0 <__cxa_allocate_exception>
 5c4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5c8:	ldr	x8, [x8]
 5cc:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5d0:	add	x9, x9, #0x0
 5d4:	mov	w10, #0xffffffff            	// #-1
 5d8:	add	x8, x8, #0x10
 5dc:	stp	x8, x9, [x0]
 5e0:	str	w10, [x0, #16]
 5e4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5e8:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5ec:	ldr	x1, [x1]
 5f0:	ldr	x2, [x2]
 5f4:	bl	0 <__cxa_throw>
 5f8:	mov	w0, #0x18                  	// #24
 5fc:	bl	0 <__cxa_allocate_exception>
 600:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 604:	ldr	x8, [x8]
 608:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 60c:	add	x9, x9, #0x0
 610:	mov	w10, #0xffffffff            	// #-1
 614:	add	x8, x8, #0x10
 618:	stp	x8, x9, [x0]
 61c:	str	w10, [x0, #16]
 620:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 624:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 628:	ldr	x1, [x1]
 62c:	ldr	x2, [x2]
 630:	bl	0 <__cxa_throw>
 634:	bl	0 <__cxa_call_unexpected>
 638:	bl	0 <__cxa_call_unexpected>
 63c:	bl	0 <__cxa_call_unexpected>

0000000000000640 <_ZN18Soft_Label_Key_SetD1Ev>:
 640:	stp	x29, x30, [sp, #-48]!
 644:	stp	x22, x21, [sp, #16]
 648:	stp	x20, x19, [sp, #32]
 64c:	mov	x29, sp
 650:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 654:	ldr	x8, [x8]
 658:	mov	x19, x0
 65c:	add	x8, x8, #0x10
 660:	str	x8, [x0]
 664:	bl	0 <isendwin>
 668:	tbnz	w0, #0, 678 <_ZN18Soft_Label_Key_SetD1Ev+0x38>
 66c:	bl	0 <slk_clear>
 670:	cmn	w0, #0x1
 674:	b.eq	6f0 <_ZN18Soft_Label_Key_SetD1Ev+0xb0>  // b.none
 678:	ldr	x20, [x19, #16]
 67c:	cbz	x20, 6cc <_ZN18Soft_Label_Key_SetD1Ev+0x8c>
 680:	mov	x19, x20
 684:	ldr	x8, [x19, #-8]!
 688:	cbz	x8, 6c4 <_ZN18Soft_Label_Key_SetD1Ev+0x84>
 68c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 690:	ldr	x9, [x9]
 694:	add	x8, x8, x8, lsl #1
 698:	lsl	x21, x8, #3
 69c:	add	x22, x9, #0x10
 6a0:	b	6ac <_ZN18Soft_Label_Key_SetD1Ev+0x6c>
 6a4:	subs	x21, x21, #0x18
 6a8:	b.eq	6c4 <_ZN18Soft_Label_Key_SetD1Ev+0x84>  // b.none
 6ac:	add	x8, x20, x21
 6b0:	ldur	x0, [x8, #-16]
 6b4:	stur	x22, [x8, #-24]
 6b8:	cbz	x0, 6a4 <_ZN18Soft_Label_Key_SetD1Ev+0x64>
 6bc:	bl	0 <_ZdaPv>
 6c0:	b	6a4 <_ZN18Soft_Label_Key_SetD1Ev+0x64>
 6c4:	mov	x0, x19
 6c8:	bl	0 <_ZdaPv>
 6cc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6d0:	ldr	x8, [x8]
 6d4:	ldp	x20, x19, [sp, #32]
 6d8:	ldp	x22, x21, [sp, #16]
 6dc:	ldr	x9, [x8]
 6e0:	sub	x9, x9, #0x1
 6e4:	str	x9, [x8]
 6e8:	ldp	x29, x30, [sp], #48
 6ec:	ret
 6f0:	mov	w0, #0x18                  	// #24
 6f4:	bl	0 <__cxa_allocate_exception>
 6f8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6fc:	ldr	x8, [x8]
 700:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 704:	add	x9, x9, #0x0
 708:	mov	w10, #0xffffffff            	// #-1
 70c:	add	x8, x8, #0x10
 710:	stp	x8, x9, [x0]
 714:	str	w10, [x0, #16]
 718:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 71c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 720:	ldr	x1, [x1]
 724:	ldr	x2, [x2]
 728:	bl	0 <__cxa_throw>
 72c:	bl	0 <__cxa_call_unexpected>
 730:	bl	0 <__cxa_call_unexpected>

0000000000000734 <_ZN18Soft_Label_Key_SetD0Ev>:
 734:	stp	x29, x30, [sp, #-48]!
 738:	str	x21, [sp, #16]
 73c:	stp	x20, x19, [sp, #32]
 740:	mov	x29, sp
 744:	mov	x19, x0
 748:	bl	640 <_ZN18Soft_Label_Key_SetD1Ev>
 74c:	mov	x0, x19
 750:	ldp	x20, x19, [sp, #32]
 754:	ldr	x21, [sp, #16]
 758:	ldp	x29, x30, [sp], #48
 75c:	b	0 <_ZdlPv>
 760:	mov	x20, x0
 764:	mov	x0, x19
 768:	mov	x21, x1
 76c:	bl	0 <_ZdlPv>
 770:	mov	x0, x20
 774:	tbz	w21, #31, 77c <_ZN18Soft_Label_Key_SetD0Ev+0x48>
 778:	bl	0 <__cxa_call_unexpected>
 77c:	bl	0 <_Unwind_Resume>

0000000000000780 <_ZN18Soft_Label_Key_SetixEi>:
 780:	stp	x29, x30, [sp, #-16]!
 784:	mov	x29, sp
 788:	subs	w8, w1, #0x1
 78c:	b.lt	7b8 <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 790:	adrp	x9, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 794:	ldr	x9, [x9]
 798:	ldr	w9, [x9]
 79c:	cmp	w9, w1
 7a0:	b.lt	7b8 <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 7a4:	ldr	x9, [x0, #16]
 7a8:	mov	w10, #0x18                  	// #24
 7ac:	smaddl	x0, w8, w10, x9
 7b0:	ldp	x29, x30, [sp], #16
 7b4:	ret
 7b8:	mov	w0, #0x18                  	// #24
 7bc:	bl	0 <__cxa_allocate_exception>
 7c0:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7c4:	ldr	x8, [x8]
 7c8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7cc:	add	x9, x9, #0x0
 7d0:	mov	w10, #0xffffffff            	// #-1
 7d4:	add	x8, x8, #0x10
 7d8:	stp	x8, x9, [x0]
 7dc:	str	w10, [x0, #16]
 7e0:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7e4:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7e8:	ldr	x1, [x1]
 7ec:	ldr	x2, [x2]
 7f0:	bl	0 <__cxa_throw>
 7f4:	bl	0 <__cxa_call_unexpected>

00000000000007f8 <_ZN18Soft_Label_Key_Set14activate_labelEib>:
 7f8:	stp	x29, x30, [sp, #-48]!
 7fc:	str	x21, [sp, #16]
 800:	stp	x20, x19, [sp, #32]
 804:	mov	x29, sp
 808:	ldrb	w8, [x0, #8]
 80c:	mov	w19, w2
 810:	mov	x21, x0
 814:	mov	w20, w1
 818:	cbnz	w8, 84c <_ZN18Soft_Label_Key_Set14activate_labelEib+0x54>
 81c:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 820:	ldr	x8, [x8]
 824:	ldr	x0, [x8]
 828:	cbz	x0, 844 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x4c>
 82c:	ldr	x8, [x0]
 830:	ldr	x8, [x8, #96]
 834:	blr	x8
 838:	bl	0 <slk_attrset>
 83c:	cmn	w0, #0x1
 840:	b.eq	968 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x170>  // b.none
 844:	mov	w8, #0x1                   	// #1
 848:	strb	w8, [x21, #8]
 84c:	cmp	w20, #0x1
 850:	b.lt	8b4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xbc>  // b.tstop
 854:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 858:	ldr	x8, [x8]
 85c:	ldr	w8, [x8]
 860:	cmp	w8, w20
 864:	b.lt	8b4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xbc>  // b.tstop
 868:	ldr	x8, [x21, #16]
 86c:	mov	w9, #0x18                  	// #24
 870:	tst	w19, #0x1
 874:	smaddl	x8, w20, w9, x8
 878:	ldur	x9, [x8, #-16]
 87c:	ldp	w2, w0, [x8, #-8]
 880:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 884:	add	x8, x8, #0x0
 888:	csel	x1, x9, x8, ne  // ne = any
 88c:	bl	0 <slk_set>
 890:	cmn	w0, #0x1
 894:	b.eq	8f0 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xf8>  // b.none
 898:	bl	0 <slk_noutrefresh>
 89c:	cmn	w0, #0x1
 8a0:	b.eq	92c <_ZN18Soft_Label_Key_Set14activate_labelEib+0x134>  // b.none
 8a4:	ldp	x20, x19, [sp, #32]
 8a8:	ldr	x21, [sp, #16]
 8ac:	ldp	x29, x30, [sp], #48
 8b0:	ret
 8b4:	mov	w0, #0x18                  	// #24
 8b8:	bl	0 <__cxa_allocate_exception>
 8bc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8c0:	ldr	x8, [x8]
 8c4:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8c8:	add	x9, x9, #0x0
 8cc:	mov	w10, #0xffffffff            	// #-1
 8d0:	add	x8, x8, #0x10
 8d4:	stp	x8, x9, [x0]
 8d8:	str	w10, [x0, #16]
 8dc:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8e0:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8e4:	ldr	x1, [x1]
 8e8:	ldr	x2, [x2]
 8ec:	bl	0 <__cxa_throw>
 8f0:	mov	w0, #0x18                  	// #24
 8f4:	bl	0 <__cxa_allocate_exception>
 8f8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8fc:	ldr	x8, [x8]
 900:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 904:	add	x9, x9, #0x0
 908:	mov	w10, #0xffffffff            	// #-1
 90c:	add	x8, x8, #0x10
 910:	stp	x8, x9, [x0]
 914:	str	w10, [x0, #16]
 918:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 91c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 920:	ldr	x1, [x1]
 924:	ldr	x2, [x2]
 928:	bl	0 <__cxa_throw>
 92c:	mov	w0, #0x18                  	// #24
 930:	bl	0 <__cxa_allocate_exception>
 934:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 938:	ldr	x8, [x8]
 93c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 940:	add	x9, x9, #0x0
 944:	mov	w10, #0xffffffff            	// #-1
 948:	add	x8, x8, #0x10
 94c:	stp	x8, x9, [x0]
 950:	str	w10, [x0, #16]
 954:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 958:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 95c:	ldr	x1, [x1]
 960:	ldr	x2, [x2]
 964:	bl	0 <__cxa_throw>
 968:	mov	w0, #0x18                  	// #24
 96c:	bl	0 <__cxa_allocate_exception>
 970:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 974:	ldr	x8, [x8]
 978:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 97c:	add	x9, x9, #0x0
 980:	mov	w10, #0xffffffff            	// #-1
 984:	add	x8, x8, #0x10
 988:	stp	x8, x9, [x0]
 98c:	str	w10, [x0, #16]
 990:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 994:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 998:	ldr	x1, [x1]
 99c:	ldr	x2, [x2]
 9a0:	bl	0 <__cxa_throw>
 9a4:	bl	0 <__cxa_call_unexpected>
 9a8:	bl	0 <__cxa_call_unexpected>
 9ac:	bl	0 <__cxa_call_unexpected>
 9b0:	bl	0 <__cxa_call_unexpected>

00000000000009b4 <_ZN18Soft_Label_Key_Set15activate_labelsEb>:
 9b4:	stp	x29, x30, [sp, #-64]!
 9b8:	stp	x24, x23, [sp, #16]
 9bc:	stp	x22, x21, [sp, #32]
 9c0:	stp	x20, x19, [sp, #48]
 9c4:	mov	x29, sp
 9c8:	ldrb	w8, [x0, #8]
 9cc:	mov	x19, x0
 9d0:	mov	w20, w1
 9d4:	cbnz	w8, a08 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x54>
 9d8:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 9dc:	ldr	x8, [x8]
 9e0:	ldr	x0, [x8]
 9e4:	cbz	x0, a00 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x4c>
 9e8:	ldr	x8, [x0]
 9ec:	ldr	x8, [x8, #96]
 9f0:	blr	x8
 9f4:	bl	0 <slk_attrset>
 9f8:	cmn	w0, #0x1
 9fc:	b.eq	bc8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x214>  // b.none
 a00:	mov	w8, #0x1                   	// #1
 a04:	strb	w8, [x19, #8]
 a08:	adrp	x22, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 a0c:	ldr	x22, [x22]
 a10:	ldr	w8, [x22]
 a14:	cmp	w8, #0x1
 a18:	b.lt	a9c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xe8>  // b.tstop
 a1c:	tbz	w20, #0, a5c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xa8>
 a20:	mov	x21, xzr
 a24:	mov	x23, xzr
 a28:	ldr	x8, [x19, #16]
 a2c:	add	x8, x8, x21
 a30:	ldr	x1, [x8, #8]
 a34:	ldp	w2, w0, [x8, #16]
 a38:	bl	0 <slk_set>
 a3c:	cmn	w0, #0x1
 a40:	b.eq	b14 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x160>  // b.none
 a44:	ldrsw	x8, [x22]
 a48:	add	x23, x23, #0x1
 a4c:	add	x21, x21, #0x18
 a50:	cmp	x23, x8
 a54:	b.lt	a28 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x74>  // b.tstop
 a58:	b	a9c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xe8>
 a5c:	adrp	x21, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 a60:	mov	x23, xzr
 a64:	mov	x24, xzr
 a68:	add	x21, x21, #0x0
 a6c:	ldr	x8, [x19, #16]
 a70:	mov	x1, x21
 a74:	add	x8, x8, x23
 a78:	ldp	w2, w0, [x8, #16]
 a7c:	bl	0 <slk_set>
 a80:	cmn	w0, #0x1
 a84:	b.eq	b14 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x160>  // b.none
 a88:	ldrsw	x8, [x22]
 a8c:	add	x24, x24, #0x1
 a90:	add	x23, x23, #0x18
 a94:	cmp	x24, x8
 a98:	b.lt	a6c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xb8>  // b.tstop
 a9c:	tbz	w20, #0, ae8 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x134>
 aa0:	bl	0 <slk_restore>
 aa4:	cmn	w0, #0x1
 aa8:	b.ne	af4 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x140>  // b.any
 aac:	mov	w0, #0x18                  	// #24
 ab0:	bl	0 <__cxa_allocate_exception>
 ab4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ab8:	ldr	x8, [x8]
 abc:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ac0:	add	x9, x9, #0x0
 ac4:	mov	w10, #0xffffffff            	// #-1
 ac8:	add	x8, x8, #0x10
 acc:	stp	x8, x9, [x0]
 ad0:	str	w10, [x0, #16]
 ad4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ad8:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 adc:	ldr	x1, [x1]
 ae0:	ldr	x2, [x2]
 ae4:	bl	0 <__cxa_throw>
 ae8:	bl	0 <slk_clear>
 aec:	cmn	w0, #0x1
 af0:	b.eq	b8c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x1d8>  // b.none
 af4:	bl	0 <slk_noutrefresh>
 af8:	cmn	w0, #0x1
 afc:	b.eq	b50 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x19c>  // b.none
 b00:	ldp	x20, x19, [sp, #48]
 b04:	ldp	x22, x21, [sp, #32]
 b08:	ldp	x24, x23, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #64
 b10:	ret
 b14:	mov	w0, #0x18                  	// #24
 b18:	bl	0 <__cxa_allocate_exception>
 b1c:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b20:	ldr	x8, [x8]
 b24:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b28:	add	x9, x9, #0x0
 b2c:	mov	w10, #0xffffffff            	// #-1
 b30:	add	x8, x8, #0x10
 b34:	stp	x8, x9, [x0]
 b38:	str	w10, [x0, #16]
 b3c:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b40:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b44:	ldr	x1, [x1]
 b48:	ldr	x2, [x2]
 b4c:	bl	0 <__cxa_throw>
 b50:	mov	w0, #0x18                  	// #24
 b54:	bl	0 <__cxa_allocate_exception>
 b58:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b5c:	ldr	x8, [x8]
 b60:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b64:	add	x9, x9, #0x0
 b68:	mov	w10, #0xffffffff            	// #-1
 b6c:	add	x8, x8, #0x10
 b70:	stp	x8, x9, [x0]
 b74:	str	w10, [x0, #16]
 b78:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b7c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b80:	ldr	x1, [x1]
 b84:	ldr	x2, [x2]
 b88:	bl	0 <__cxa_throw>
 b8c:	mov	w0, #0x18                  	// #24
 b90:	bl	0 <__cxa_allocate_exception>
 b94:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b98:	ldr	x8, [x8]
 b9c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ba0:	add	x9, x9, #0x0
 ba4:	mov	w10, #0xffffffff            	// #-1
 ba8:	add	x8, x8, #0x10
 bac:	stp	x8, x9, [x0]
 bb0:	str	w10, [x0, #16]
 bb4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bb8:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bbc:	ldr	x1, [x1]
 bc0:	ldr	x2, [x2]
 bc4:	bl	0 <__cxa_throw>
 bc8:	mov	w0, #0x18                  	// #24
 bcc:	bl	0 <__cxa_allocate_exception>
 bd0:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bd4:	ldr	x8, [x8]
 bd8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bdc:	add	x9, x9, #0x0
 be0:	mov	w10, #0xffffffff            	// #-1
 be4:	add	x8, x8, #0x10
 be8:	stp	x8, x9, [x0]
 bec:	str	w10, [x0, #16]
 bf0:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bf4:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bf8:	ldr	x1, [x1]
 bfc:	ldr	x2, [x2]
 c00:	bl	0 <__cxa_throw>
 c04:	bl	0 <__cxa_call_unexpected>
 c08:	bl	0 <__cxa_call_unexpected>
 c0c:	bl	0 <__cxa_call_unexpected>
 c10:	bl	0 <__cxa_call_unexpected>
 c14:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>:
   0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x9, x9, #0x10
  14:	str	x9, [x8]
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev+0x20>
  1c:	b	0 <_ZdaPv>
  20:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	ldr	x8, [x8]
  18:	mov	x29, sp
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev+0x2c>
  28:	bl	0 <_ZdaPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesapp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18NCursesApplication4initEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	tbz	w1, #0, 18 <_ZN18NCursesApplication4initEb+0x18>
  14:	bl	0 <_ZN13NCursesWindow9useColorsEv>
  18:	bl	0 <_ZN13NCursesWindow14NumberOfColorsEv>
  1c:	cmp	w0, #0x2
  20:	b.lt	d8 <_ZN18NCursesApplication4initEb+0xd8>  // b.tstop
  24:	ldr	x0, [x19, #16]
  28:	mov	w8, #0x1                   	// #1
  2c:	mov	w1, #0x1                   	// #1
  30:	strb	w8, [x19, #8]
  34:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  38:	ldr	x0, [x19, #16]
  3c:	mov	w1, #0x3                   	// #3
  40:	mov	w2, #0x4                   	// #4
  44:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  48:	ldr	x0, [x19, #16]
  4c:	mov	w1, #0x2                   	// #2
  50:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  54:	ldr	x0, [x19, #16]
  58:	mov	w1, #0x6                   	// #6
  5c:	mov	w2, #0x4                   	// #4
  60:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  64:	ldr	x0, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  70:	ldr	x0, [x19, #16]
  74:	mov	w2, #0x4                   	// #4
  78:	mov	w1, wzr
  7c:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  80:	ldr	x0, [x19, #16]
  84:	mov	w1, #0x4                   	// #4
  88:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  8c:	ldr	x0, [x19, #16]
  90:	mov	w2, #0x6                   	// #6
  94:	mov	w1, wzr
  98:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  9c:	ldr	x0, [x19, #16]
  a0:	mov	w1, #0x5                   	// #5
  a4:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  a8:	ldr	x0, [x19, #16]
  ac:	mov	w1, #0x4                   	// #4
  b0:	mov	w2, #0x3                   	// #3
  b4:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  b8:	ldr	x0, [x19, #16]
  bc:	mov	w1, #0x6                   	// #6
  c0:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  c4:	ldr	x0, [x19, #16]
  c8:	mov	w2, #0x2                   	// #2
  cc:	mov	w1, wzr
  d0:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  d4:	b	dc <_ZN18NCursesApplication4initEb+0xdc>
  d8:	strb	wzr, [x19, #8]
  dc:	ldr	x8, [x19]
  e0:	ldr	x20, [x19, #16]
  e4:	mov	x0, x19
  e8:	ldr	x8, [x8, #112]
  ec:	blr	x8
  f0:	ldr	x8, [x20, #8]
  f4:	ldp	x20, x19, [sp, #16]
  f8:	orr	w1, w0, #0x20
  fc:	mov	x0, x8
 100:	ldp	x29, x30, [sp], #32
 104:	b	0 <wbkgd>

0000000000000108 <_ZN18NCursesApplicationD1Ev>:
 108:	stp	x29, x30, [sp, #-48]!
 10c:	stp	x22, x21, [sp, #16]
 110:	stp	x20, x19, [sp, #32]
 114:	mov	x29, sp
 118:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 11c:	ldr	x8, [x8]
 120:	adrp	x20, 8 <_ZN18NCursesApplication4initEb+0x8>
 124:	mov	x19, x0
 128:	add	x8, x8, #0x10
 12c:	str	x8, [x0]
 130:	ldr	x20, [x20]
 134:	ldr	x0, [x20]
 138:	cbz	x0, 148 <_ZN18NCursesApplicationD1Ev+0x40>
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #16]
 144:	blr	x8
 148:	str	xzr, [x20]
 14c:	adrp	x22, 10 <_ZN18NCursesApplication4initEb+0x10>
 150:	ldr	x22, [x22]
 154:	b	168 <_ZN18NCursesApplicationD1Ev+0x60>
 158:	ldr	x8, [x20]
 15c:	ldr	x8, [x8, #8]
 160:	mov	x0, x20
 164:	blr	x8
 168:	ldr	x0, [x22]
 16c:	cbz	x0, 1b8 <_ZN18NCursesApplicationD1Ev+0xb0>
 170:	ldr	x20, [x0, #8]
 174:	cbz	x20, 1b8 <_ZN18NCursesApplicationD1Ev+0xb0>
 178:	ldr	x8, [x0]
 17c:	str	x8, [x22]
 180:	bl	0 <_ZdlPv>
 184:	ldr	x8, [x19, #16]
 188:	cbz	x8, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 18c:	ldr	x8, [x22]
 190:	cbz	x8, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 194:	ldr	x21, [x8, #8]
 198:	cbz	x21, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 19c:	mov	x0, x21
 1a0:	mov	w1, wzr
 1a4:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1a8:	mov	w1, #0x1                   	// #1
 1ac:	mov	x0, x21
 1b0:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1b4:	b	158 <_ZN18NCursesApplicationD1Ev+0x50>
 1b8:	ldr	x0, [x19, #16]
 1bc:	cbz	x0, 1cc <_ZN18NCursesApplicationD1Ev+0xc4>
 1c0:	ldr	x8, [x0]
 1c4:	ldr	x8, [x8, #16]
 1c8:	blr	x8
 1cc:	str	xzr, [x19, #16]
 1d0:	bl	0 <endwin>
 1d4:	ldp	x20, x19, [sp, #32]
 1d8:	ldp	x22, x21, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #48
 1e0:	ret
 1e4:	b	1e8 <_ZN18NCursesApplicationD1Ev+0xe0>
 1e8:	tbz	w1, #31, 1f0 <_ZN18NCursesApplicationD1Ev+0xe8>
 1ec:	bl	0 <__cxa_call_unexpected>
 1f0:	bl	0 <_Unwind_Resume>

00000000000001f4 <_ZNK18NCursesApplication3topEv>:
 1f4:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 1f8:	ldr	x8, [x8]
 1fc:	ldr	x8, [x8]
 200:	cbz	x8, 20c <_ZNK18NCursesApplication3topEv+0x18>
 204:	ldr	x0, [x8, #8]
 208:	ret
 20c:	mov	x0, xzr
 210:	ret

0000000000000214 <_ZN18NCursesApplication3popEv>:
 214:	stp	x29, x30, [sp, #-32]!
 218:	stp	x20, x19, [sp, #16]
 21c:	mov	x29, sp
 220:	adrp	x20, 10 <_ZN18NCursesApplication4initEb+0x10>
 224:	ldr	x20, [x20]
 228:	ldr	x8, [x20]
 22c:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 230:	ldr	x9, [x8]
 234:	mov	x19, x0
 238:	mov	x0, x8
 23c:	str	x9, [x20]
 240:	bl	0 <_ZdlPv>
 244:	ldr	x8, [x19, #16]
 248:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 24c:	ldr	x8, [x20]
 250:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 254:	ldr	x19, [x8, #8]
 258:	cbz	x19, 274 <_ZN18NCursesApplication3popEv+0x60>
 25c:	mov	x0, x19
 260:	mov	w1, wzr
 264:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 268:	mov	w1, #0x1                   	// #1
 26c:	mov	x0, x19
 270:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 274:	ldr	x8, [x20]
 278:	ldp	x20, x19, [sp, #16]
 27c:	cmp	x8, #0x0
 280:	cset	w0, eq  // eq = none
 284:	ldp	x29, x30, [sp], #32
 288:	ret

000000000000028c <_ZN18NCursesApplicationD0Ev>:
 28c:	brk	#0x1

0000000000000290 <_ZN18NCursesApplication5rinitER13NCursesWindow>:
 290:	adrp	x8, 8 <_ZN18NCursesApplication4initEb+0x8>
 294:	ldr	x8, [x8]
 298:	str	x0, [x8]
 29c:	mov	w0, wzr
 2a0:	ret

00000000000002a4 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>:
 2a4:	stp	x29, x30, [sp, #-32]!
 2a8:	stp	x20, x19, [sp, #16]
 2ac:	mov	x29, sp
 2b0:	mov	x20, x0
 2b4:	mov	w0, #0x10                  	// #16
 2b8:	mov	x19, x1
 2bc:	bl	0 <_Znwm>
 2c0:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 2c4:	ldr	x8, [x8]
 2c8:	ldr	x9, [x8]
 2cc:	str	x0, [x8]
 2d0:	stp	x9, x19, [x0]
 2d4:	ldr	x8, [x20, #16]
 2d8:	cbz	x8, 2fc <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set+0x58>
 2dc:	mov	x0, x19
 2e0:	mov	w1, wzr
 2e4:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2e8:	mov	x0, x19
 2ec:	ldp	x20, x19, [sp, #16]
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	ldp	x29, x30, [sp], #32
 2f8:	b	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2fc:	ldp	x20, x19, [sp, #16]
 300:	ldp	x29, x30, [sp], #32
 304:	ret

0000000000000308 <_ZN18NCursesApplicationclEv>:
 308:	stp	x29, x30, [sp, #-64]!
 30c:	stp	x24, x23, [sp, #16]
 310:	stp	x22, x21, [sp, #32]
 314:	stp	x20, x19, [sp, #48]
 318:	mov	x29, sp
 31c:	ldr	x8, [x0]
 320:	ldrb	w24, [x0, #8]
 324:	mov	x19, x0
 328:	ldr	x8, [x8, #8]
 32c:	blr	x8
 330:	mov	w20, w0
 334:	cmp	w0, #0x1
 338:	b.lt	34c <_ZN18NCursesApplicationclEv+0x44>  // b.tstop
 33c:	adrp	x1, 290 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 340:	ldr	x1, [x1]
 344:	mov	w0, w20
 348:	bl	0 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>
 34c:	ldr	x8, [x19]
 350:	mov	x0, x19
 354:	ldr	x8, [x8, #24]
 358:	blr	x8
 35c:	mov	w21, w0
 360:	cmn	w0, #0x1
 364:	b.eq	398 <_ZN18NCursesApplicationclEv+0x90>  // b.none
 368:	mov	w0, #0x18                  	// #24
 36c:	bl	0 <_Znwm>
 370:	mov	x23, x0
 374:	mov	w1, w21
 378:	bl	0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>
 37c:	ldr	x8, [x19]
 380:	mov	x0, x19
 384:	mov	x1, x23
 388:	ldr	x8, [x8, #32]
 38c:	blr	x8
 390:	mov	x22, x23
 394:	b	39c <_ZN18NCursesApplicationclEv+0x94>
 398:	mov	x22, xzr
 39c:	mov	w0, #0x30                  	// #48
 3a0:	bl	0 <_Znwm>
 3a4:	adrp	x8, 0 <stdscr>
 3a8:	ldr	x8, [x8]
 3ac:	mov	x23, x0
 3b0:	ldr	x1, [x8]
 3b4:	bl	0 <_ZN13NCursesWindowC1EP7_win_st>
 3b8:	ldr	x8, [x19]
 3bc:	str	x23, [x19, #16]
 3c0:	cmp	w24, #0x0
 3c4:	cset	w1, ne  // ne = any
 3c8:	ldr	x8, [x8]
 3cc:	mov	x0, x19
 3d0:	blr	x8
 3d4:	cmp	w20, #0x1
 3d8:	b.lt	3ec <_ZN18NCursesApplicationclEv+0xe4>  // b.tstop
 3dc:	ldr	x8, [x19]
 3e0:	mov	x0, x19
 3e4:	ldr	x8, [x8, #16]
 3e8:	blr	x8
 3ec:	cmn	w21, #0x1
 3f0:	b.eq	430 <_ZN18NCursesApplicationclEv+0x128>  // b.none
 3f4:	mov	w0, #0x10                  	// #16
 3f8:	bl	0 <_Znwm>
 3fc:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 400:	ldr	x8, [x8]
 404:	ldr	x9, [x8]
 408:	str	x0, [x8]
 40c:	stp	x9, x22, [x0]
 410:	ldr	x8, [x19, #16]
 414:	cbz	x8, 430 <_ZN18NCursesApplicationclEv+0x128>
 418:	mov	x0, x22
 41c:	mov	w1, wzr
 420:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 424:	mov	w1, #0x1                   	// #1
 428:	mov	x0, x22
 42c:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 430:	ldr	x8, [x19]
 434:	mov	x0, x19
 438:	ldp	x20, x19, [sp, #48]
 43c:	ldp	x22, x21, [sp, #32]
 440:	ldr	x1, [x8, #40]
 444:	ldp	x24, x23, [sp, #16]
 448:	ldp	x29, x30, [sp], #64
 44c:	br	x1
 450:	b	454 <_ZN18NCursesApplicationclEv+0x14c>
 454:	mov	x19, x0
 458:	mov	x0, x23
 45c:	bl	0 <_ZdlPv>
 460:	mov	x0, x19
 464:	bl	0 <_Unwind_Resume>

0000000000000468 <_ZN18NCursesApplicationC2Eb>:
 468:	stp	x29, x30, [sp, #-16]!
 46c:	mov	x29, sp
 470:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 474:	ldr	x9, [x9]
 478:	and	w8, w1, #0x1
 47c:	str	xzr, [x0, #16]
 480:	strb	w8, [x0, #8]
 484:	add	x9, x9, #0x10
 488:	str	x9, [x0]
 48c:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 490:	ldr	x8, [x8]
 494:	ldr	x9, [x8]
 498:	cbnz	x9, 4a8 <_ZN18NCursesApplicationC2Eb+0x40>
 49c:	str	x0, [x8]
 4a0:	ldp	x29, x30, [sp], #16
 4a4:	ret
 4a8:	mov	w0, #0x18                  	// #24
 4ac:	bl	0 <__cxa_allocate_exception>
 4b0:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 4b4:	ldr	x8, [x8]
 4b8:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 4bc:	add	x9, x9, #0x0
 4c0:	mov	w10, #0xffffffff            	// #-1
 4c4:	add	x8, x8, #0x10
 4c8:	stp	x8, x9, [x0]
 4cc:	str	w10, [x0, #16]
 4d0:	adrp	x1, 0 <_ZN18NCursesApplication4initEb>
 4d4:	adrp	x2, 0 <_ZN18NCursesApplication4initEb>
 4d8:	ldr	x1, [x1]
 4dc:	ldr	x2, [x2]
 4e0:	bl	0 <__cxa_throw>

Disassembly of section .text._ZNK18NCursesApplication9titlesizeEv:

0000000000000000 <_ZNK18NCursesApplication9titlesizeEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN18NCursesApplication5titleEv:

0000000000000000 <_ZN18NCursesApplication5titleEv>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication7useSLKsEv:

0000000000000000 <_ZNK18NCursesApplication7useSLKsEv>:
   0:	mov	w0, #0xffffffff            	// #-1
   4:	ret

Disassembly of section .text._ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set:

0000000000000000 <_ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set>:
   0:	ret

Disassembly of section .text._ZN18NCursesApplication10handleArgsEiPPc:

0000000000000000 <_ZN18NCursesApplication10handleArgsEiPPc>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x100                 	// #256
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #9
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x300                 	// #768
   8:	movk	w9, #0x10, lsl #16
   c:	cmp	w8, #0x0
  10:	mov	w8, #0x100000              	// #1048576
  14:	csel	w0, w8, w9, eq  // eq = none
  18:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18window_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18window_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	cmp	w8, #0x0
   8:	mov	w8, #0x500                 	// #1280
   c:	csel	w0, wzr, w8, eq  // eq = none
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication13screen_titlesEv:

0000000000000000 <_ZNK18NCursesApplication13screen_titlesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x600                 	// #1536
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesmain.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <main>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	adrp	x1, 0 <main>
  18:	mov	w20, w0
  1c:	add	x1, x1, #0x0
  20:	mov	w0, #0x6                   	// #6
  24:	bl	0 <setlocale>
  28:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
  2c:	ldr	x8, [x8]
  30:	ldr	x21, [x8]
  34:	cbz	x21, 68 <main+0x68>
  38:	ldr	x8, [x21]
  3c:	mov	x0, x21
  40:	mov	w1, w20
  44:	mov	x2, x19
  48:	ldr	x8, [x8, #64]
  4c:	blr	x8
  50:	bl	0 <endwin>
  54:	mov	x0, x21
  58:	bl	0 <_ZN18NCursesApplicationclEv>
  5c:	mov	w19, w0
  60:	bl	0 <endwin>
  64:	b	6c <main+0x6c>
  68:	mov	w19, #0x1                   	// #1
  6c:	mov	w0, w19
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	cmp	w1, #0x1
  84:	mov	x19, x0
  88:	b.ne	150 <main+0x150>  // b.any
  8c:	mov	x0, x19
  90:	bl	0 <__cxa_begin_catch>
  94:	mov	x19, x0
  98:	bl	0 <endwin>
  9c:	adrp	x21, 0 <_ZSt4cerr>
  a0:	ldr	x20, [x19, #8]
  a4:	ldr	x21, [x21]
  a8:	cbz	x20, cc <main+0xcc>
  ac:	mov	x0, x20
  b0:	bl	0 <strlen>
  b4:	mov	x2, x0
  b8:	adrp	x0, 0 <_ZSt4cerr>
  bc:	ldr	x0, [x0]
  c0:	mov	x1, x20
  c4:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
  c8:	b	e4 <main+0xe4>
  cc:	ldr	x8, [x21]
  d0:	ldur	x8, [x8, #-24]
  d4:	add	x0, x21, x8
  d8:	ldr	w8, [x0, #32]
  dc:	orr	w1, w8, #0x1
  e0:	bl	0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate>
  e4:	ldr	x8, [x21]
  e8:	ldur	x8, [x8, #-24]
  ec:	add	x8, x21, x8
  f0:	ldr	x20, [x8, #240]
  f4:	cbz	x20, 144 <main+0x144>
  f8:	ldrb	w8, [x20, #56]
  fc:	cbz	w8, 108 <main+0x108>
 100:	ldrb	w1, [x20, #67]
 104:	b	128 <main+0x128>
 108:	mov	x0, x20
 10c:	bl	0 <_ZNKSt5ctypeIcE13_M_widen_initEv>
 110:	ldr	x8, [x20]
 114:	ldr	x8, [x8, #48]
 118:	mov	w1, #0xa                   	// #10
 11c:	mov	x0, x20
 120:	blr	x8
 124:	mov	w1, w0
 128:	adrp	x0, 0 <_ZSt4cerr>
 12c:	ldr	x0, [x0]
 130:	bl	0 <_ZNSo3putEc>
 134:	bl	0 <_ZNSo5flushEv>
 138:	ldr	w19, [x19, #16]
 13c:	bl	0 <__cxa_end_catch>
 140:	b	6c <main+0x6c>
 144:	bl	0 <_ZSt16__throw_bad_castv>
 148:	mov	x19, x0
 14c:	bl	0 <__cxa_end_catch>
 150:	mov	x0, x19
 154:	bl	0 <_Unwind_Resume>
 158:	bl	0 <main>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesmain.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesmain.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  20:	ldr	x0, [x0]
  24:	mov	x1, x19
  28:	ldr	x19, [sp, #16]
  2c:	adrp	x2, 0 <__dso_handle>
  30:	add	x2, x2, #0x0
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <__cxa_atexit>
