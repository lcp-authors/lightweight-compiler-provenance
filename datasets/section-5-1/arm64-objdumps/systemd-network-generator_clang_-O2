
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-network-generator_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401948 <_init>:
  401948:	stp	x29, x30, [sp, #-16]!
  40194c:	mov	x29, sp
  401950:	bl	401dc0 <call_weak_fn>
  401954:	ldp	x29, x30, [sp], #16
  401958:	ret

Disassembly of section .plt:

0000000000401960 <__libc_start_main@plt-0x20>:
  401960:	stp	x16, x30, [sp, #-16]!
  401964:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401968:	ldr	x17, [x16, #3552]
  40196c:	add	x16, x16, #0xde0
  401970:	br	x17
  401974:	nop
  401978:	nop
  40197c:	nop

0000000000401980 <__libc_start_main@plt>:
  401980:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401984:	ldr	x17, [x16, #3560]
  401988:	add	x16, x16, #0xde8
  40198c:	br	x17

0000000000401990 <abort@plt>:
  401990:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401994:	ldr	x17, [x16, #3568]
  401998:	add	x16, x16, #0xdf0
  40199c:	br	x17

00000000004019a0 <__gmon_start__@plt>:
  4019a0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019a4:	ldr	x17, [x16, #3576]
  4019a8:	add	x16, x16, #0xdf8
  4019ac:	br	x17

00000000004019b0 <getopt_long@plt>:
  4019b0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019b4:	ldr	x17, [x16, #3584]
  4019b8:	add	x16, x16, #0xe00
  4019bc:	br	x17

00000000004019c0 <printf@plt>:
  4019c0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019c4:	ldr	x17, [x16, #3592]
  4019c8:	add	x16, x16, #0xe08
  4019cc:	br	x17

00000000004019d0 <version@plt>:
  4019d0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019d4:	ldr	x17, [x16, #3600]
  4019d8:	add	x16, x16, #0xe10
  4019dc:	br	x17

00000000004019e0 <strdup@plt>:
  4019e0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019e4:	ldr	x17, [x16, #3608]
  4019e8:	add	x16, x16, #0xe18
  4019ec:	br	x17

00000000004019f0 <strchr@plt>:
  4019f0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  4019f4:	ldr	x17, [x16, #3616]
  4019f8:	add	x16, x16, #0xe20
  4019fc:	br	x17

0000000000401a00 <free@plt>:
  401a00:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a04:	ldr	x17, [x16, #3624]
  401a08:	add	x16, x16, #0xe28
  401a0c:	br	x17

0000000000401a10 <proc_cmdline_parse@plt>:
  401a10:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a14:	ldr	x17, [x16, #3632]
  401a18:	add	x16, x16, #0xe30
  401a1c:	br	x17

0000000000401a20 <log_get_max_level_realm@plt>:
  401a20:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a24:	ldr	x17, [x16, #3640]
  401a28:	add	x16, x16, #0xe38
  401a2c:	br	x17

0000000000401a30 <log_internal_realm@plt>:
  401a30:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a34:	ldr	x17, [x16, #3648]
  401a38:	add	x16, x16, #0xe40
  401a3c:	br	x17

0000000000401a40 <log_oom_internal@plt>:
  401a40:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a44:	ldr	x17, [x16, #3656]
  401a48:	add	x16, x16, #0xe48
  401a4c:	br	x17

0000000000401a50 <ask_password_agent_close@plt>:
  401a50:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a54:	ldr	x17, [x16, #3664]
  401a58:	add	x16, x16, #0xe50
  401a5c:	br	x17

0000000000401a60 <polkit_agent_close@plt>:
  401a60:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a64:	ldr	x17, [x16, #3672]
  401a68:	add	x16, x16, #0xe58
  401a6c:	br	x17

0000000000401a70 <pager_close@plt>:
  401a70:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a74:	ldr	x17, [x16, #3680]
  401a78:	add	x16, x16, #0xe60
  401a7c:	br	x17

0000000000401a80 <mac_selinux_finish@plt>:
  401a80:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a84:	ldr	x17, [x16, #3688]
  401a88:	add	x16, x16, #0xe68
  401a8c:	br	x17

0000000000401a90 <log_assert_failed_realm@plt>:
  401a90:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401a94:	ldr	x17, [x16, #3696]
  401a98:	add	x16, x16, #0xe70
  401a9c:	br	x17

0000000000401aa0 <log_assert_failed_unreachable_realm@plt>:
  401aa0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401aa4:	ldr	x17, [x16, #3704]
  401aa8:	add	x16, x16, #0xe78
  401aac:	br	x17

0000000000401ab0 <strlen@plt>:
  401ab0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ab4:	ldr	x17, [x16, #3712]
  401ab8:	add	x16, x16, #0xe80
  401abc:	br	x17

0000000000401ac0 <stpcpy@plt>:
  401ac0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ac4:	ldr	x17, [x16, #3720]
  401ac8:	add	x16, x16, #0xe88
  401acc:	br	x17

0000000000401ad0 <mkdir_p@plt>:
  401ad0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ad4:	ldr	x17, [x16, #3728]
  401ad8:	add	x16, x16, #0xe90
  401adc:	br	x17

0000000000401ae0 <internal_hashmap_iterate@plt>:
  401ae0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ae4:	ldr	x17, [x16, #3736]
  401ae8:	add	x16, x16, #0xe98
  401aec:	br	x17

0000000000401af0 <safe_fclose@plt>:
  401af0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401af4:	ldr	x17, [x16, #3744]
  401af8:	add	x16, x16, #0xea0
  401afc:	br	x17

0000000000401b00 <asprintf@plt>:
  401b00:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b04:	ldr	x17, [x16, #3752]
  401b08:	add	x16, x16, #0xea8
  401b0c:	br	x17

0000000000401b10 <generator_open_unit_file@plt>:
  401b10:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b14:	ldr	x17, [x16, #3760]
  401b18:	add	x16, x16, #0xeb0
  401b1c:	br	x17

0000000000401b20 <internal_hashmap_get@plt>:
  401b20:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b24:	ldr	x17, [x16, #3768]
  401b28:	add	x16, x16, #0xeb8
  401b2c:	br	x17

0000000000401b30 <strcmp@plt>:
  401b30:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b34:	ldr	x17, [x16, #3776]
  401b38:	add	x16, x16, #0xec0
  401b3c:	br	x17

0000000000401b40 <in_addr_from_string_auto@plt>:
  401b40:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b44:	ldr	x17, [x16, #3784]
  401b48:	add	x16, x16, #0xec8
  401b4c:	br	x17

0000000000401b50 <strv_extend@plt>:
  401b50:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b54:	ldr	x17, [x16, #3792]
  401b58:	add	x16, x16, #0xed0
  401b5c:	br	x17

0000000000401b60 <parse_boolean@plt>:
  401b60:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b64:	ldr	x17, [x16, #3800]
  401b68:	add	x16, x16, #0xed8
  401b6c:	br	x17

0000000000401b70 <string_table_lookup@plt>:
  401b70:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b74:	ldr	x17, [x16, #3808]
  401b78:	add	x16, x16, #0xee0
  401b7c:	br	x17

0000000000401b80 <strnlen@plt>:
  401b80:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b84:	ldr	x17, [x16, #3816]
  401b88:	add	x16, x16, #0xee8
  401b8c:	br	x17

0000000000401b90 <memcpy@plt>:
  401b90:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401b94:	ldr	x17, [x16, #3824]
  401b98:	add	x16, x16, #0xef0
  401b9c:	br	x17

0000000000401ba0 <in_addr_prefix_from_string@plt>:
  401ba0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ba4:	ldr	x17, [x16, #3832]
  401ba8:	add	x16, x16, #0xef8
  401bac:	br	x17

0000000000401bb0 <in_addr_is_null@plt>:
  401bb0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401bb4:	ldr	x17, [x16, #3840]
  401bb8:	add	x16, x16, #0xf00
  401bbc:	br	x17

0000000000401bc0 <malloc@plt>:
  401bc0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401bc4:	ldr	x17, [x16, #3848]
  401bc8:	add	x16, x16, #0xf08
  401bcc:	br	x17

0000000000401bd0 <free_and_strdup@plt>:
  401bd0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401bd4:	ldr	x17, [x16, #3856]
  401bd8:	add	x16, x16, #0xf10
  401bdc:	br	x17

0000000000401be0 <extract_first_word@plt>:
  401be0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401be4:	ldr	x17, [x16, #3864]
  401be8:	add	x16, x16, #0xf18
  401bec:	br	x17

0000000000401bf0 <parse_mtu@plt>:
  401bf0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401bf4:	ldr	x17, [x16, #3872]
  401bf8:	add	x16, x16, #0xf20
  401bfc:	br	x17

0000000000401c00 <ether_addr_from_string@plt>:
  401c00:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c04:	ldr	x17, [x16, #3880]
  401c08:	add	x16, x16, #0xf28
  401c0c:	br	x17

0000000000401c10 <ifname_valid@plt>:
  401c10:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c14:	ldr	x17, [x16, #3888]
  401c18:	add	x16, x16, #0xf30
  401c1c:	br	x17

0000000000401c20 <internal_hashmap_ensure_allocated@plt>:
  401c20:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c24:	ldr	x17, [x16, #3896]
  401c28:	add	x16, x16, #0xf38
  401c2c:	br	x17

0000000000401c30 <hashmap_put@plt>:
  401c30:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c34:	ldr	x17, [x16, #3904]
  401c38:	add	x16, x16, #0xf40
  401c3c:	br	x17

0000000000401c40 <internal_hashmap_size@plt>:
  401c40:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c44:	ldr	x17, [x16, #3912]
  401c48:	add	x16, x16, #0xf48
  401c4c:	br	x17

0000000000401c50 <strv_extend_strv@plt>:
  401c50:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c54:	ldr	x17, [x16, #3920]
  401c58:	add	x16, x16, #0xf50
  401c5c:	br	x17

0000000000401c60 <internal_hashmap_remove@plt>:
  401c60:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c64:	ldr	x17, [x16, #3928]
  401c68:	add	x16, x16, #0xf58
  401c6c:	br	x17

0000000000401c70 <strv_free@plt>:
  401c70:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c74:	ldr	x17, [x16, #3936]
  401c78:	add	x16, x16, #0xf60
  401c7c:	br	x17

0000000000401c80 <internal_hashmap_first_key_and_value@plt>:
  401c80:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c84:	ldr	x17, [x16, #3944]
  401c88:	add	x16, x16, #0xf68
  401c8c:	br	x17

0000000000401c90 <internal_hashmap_free@plt>:
  401c90:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401c94:	ldr	x17, [x16, #3952]
  401c98:	add	x16, x16, #0xf70
  401c9c:	br	x17

0000000000401ca0 <fprintf@plt>:
  401ca0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ca4:	ldr	x17, [x16, #3960]
  401ca8:	add	x16, x16, #0xf78
  401cac:	br	x17

0000000000401cb0 <fwrite@plt>:
  401cb0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401cb4:	ldr	x17, [x16, #3968]
  401cb8:	add	x16, x16, #0xf80
  401cbc:	br	x17

0000000000401cc0 <ether_addr_compare@plt>:
  401cc0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401cc4:	ldr	x17, [x16, #3976]
  401cc8:	add	x16, x16, #0xf88
  401ccc:	br	x17

0000000000401cd0 <ether_addr_to_string@plt>:
  401cd0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401cd4:	ldr	x17, [x16, #3984]
  401cd8:	add	x16, x16, #0xf90
  401cdc:	br	x17

0000000000401ce0 <in_addr_prefix_to_string@plt>:
  401ce0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401ce4:	ldr	x17, [x16, #3992]
  401ce8:	add	x16, x16, #0xf98
  401cec:	br	x17

0000000000401cf0 <in_addr_to_string@plt>:
  401cf0:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401cf4:	ldr	x17, [x16, #4000]
  401cf8:	add	x16, x16, #0xfa0
  401cfc:	br	x17

0000000000401d00 <open_memstream_unlocked@plt>:
  401d00:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d04:	ldr	x17, [x16, #4008]
  401d08:	add	x16, x16, #0xfa8
  401d0c:	br	x17

0000000000401d10 <fputc@plt>:
  401d10:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d14:	ldr	x17, [x16, #4016]
  401d18:	add	x16, x16, #0xfb0
  401d1c:	br	x17

0000000000401d20 <fflush_and_check@plt>:
  401d20:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d24:	ldr	x17, [x16, #4024]
  401d28:	add	x16, x16, #0xfb8
  401d2c:	br	x17

0000000000401d30 <hostname_is_valid@plt>:
  401d30:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d34:	ldr	x17, [x16, #4032]
  401d38:	add	x16, x16, #0xfc0
  401d3c:	br	x17

0000000000401d40 <in_addr_from_string@plt>:
  401d40:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d44:	ldr	x17, [x16, #4040]
  401d48:	add	x16, x16, #0xfc8
  401d4c:	br	x17

0000000000401d50 <in4_addr_netmask_to_prefixlen@plt>:
  401d50:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d54:	ldr	x17, [x16, #4048]
  401d58:	add	x16, x16, #0xfd0
  401d5c:	br	x17

0000000000401d60 <safe_atou8@plt>:
  401d60:	adrp	x16, 41f000 <__FRAME_END__+0x196e8>
  401d64:	ldr	x17, [x16, #4056]
  401d68:	add	x16, x16, #0xfd8
  401d6c:	br	x17

Disassembly of section .text:

0000000000401d70 <_start>:
  401d70:	mov	x29, #0x0                   	// #0
  401d74:	mov	x30, #0x0                   	// #0
  401d78:	mov	x5, x0
  401d7c:	ldr	x1, [sp]
  401d80:	add	x2, sp, #0x8
  401d84:	mov	x6, sp
  401d88:	movz	x0, #0x0, lsl #48
  401d8c:	movk	x0, #0x0, lsl #32
  401d90:	movk	x0, #0x40, lsl #16
  401d94:	movk	x0, #0x1e7c
  401d98:	movz	x3, #0x0, lsl #48
  401d9c:	movk	x3, #0x0, lsl #32
  401da0:	movk	x3, #0x40, lsl #16
  401da4:	movk	x3, #0x4dc8
  401da8:	movz	x4, #0x0, lsl #48
  401dac:	movk	x4, #0x0, lsl #32
  401db0:	movk	x4, #0x40, lsl #16
  401db4:	movk	x4, #0x4e48
  401db8:	bl	401980 <__libc_start_main@plt>
  401dbc:	bl	401990 <abort@plt>

0000000000401dc0 <call_weak_fn>:
  401dc0:	adrp	x0, 41f000 <__FRAME_END__+0x196e8>
  401dc4:	ldr	x0, [x0, #3512]
  401dc8:	cbz	x0, 401dd0 <call_weak_fn+0x10>
  401dcc:	b	4019a0 <__gmon_start__@plt>
  401dd0:	ret
  401dd4:	udf	#0

0000000000401dd8 <deregister_tm_clones>:
  401dd8:	adrp	x0, 420000 <completed.8445>
  401ddc:	add	x0, x0, #0x0
  401de0:	adrp	x1, 420000 <completed.8445>
  401de4:	add	x1, x1, #0x0
  401de8:	cmp	x1, x0
  401dec:	b.eq	401e04 <deregister_tm_clones+0x2c>  // b.none
  401df0:	adrp	x1, 404000 <netdev_format+0x114>
  401df4:	ldr	x1, [x1, #3680]
  401df8:	cbz	x1, 401e04 <deregister_tm_clones+0x2c>
  401dfc:	mov	x16, x1
  401e00:	br	x16
  401e04:	ret

0000000000401e08 <register_tm_clones>:
  401e08:	adrp	x0, 420000 <completed.8445>
  401e0c:	add	x0, x0, #0x0
  401e10:	adrp	x1, 420000 <completed.8445>
  401e14:	add	x1, x1, #0x0
  401e18:	sub	x1, x1, x0
  401e1c:	lsr	x2, x1, #63
  401e20:	add	x1, x2, x1, asr #3
  401e24:	cmp	xzr, x1, asr #1
  401e28:	asr	x1, x1, #1
  401e2c:	b.eq	401e44 <register_tm_clones+0x3c>  // b.none
  401e30:	adrp	x2, 404000 <netdev_format+0x114>
  401e34:	ldr	x2, [x2, #3688]
  401e38:	cbz	x2, 401e44 <register_tm_clones+0x3c>
  401e3c:	mov	x16, x2
  401e40:	br	x16
  401e44:	ret

0000000000401e48 <__do_global_dtors_aux>:
  401e48:	stp	x29, x30, [sp, #-32]!
  401e4c:	mov	x29, sp
  401e50:	str	x19, [sp, #16]
  401e54:	adrp	x19, 420000 <completed.8445>
  401e58:	ldrb	w0, [x19]
  401e5c:	cbnz	w0, 401e6c <__do_global_dtors_aux+0x24>
  401e60:	bl	401dd8 <deregister_tm_clones>
  401e64:	mov	w0, #0x1                   	// #1
  401e68:	strb	w0, [x19]
  401e6c:	ldr	x19, [sp, #16]
  401e70:	ldp	x29, x30, [sp], #32
  401e74:	ret

0000000000401e78 <frame_dummy>:
  401e78:	b	401e08 <register_tm_clones>

0000000000401e7c <main>:
  401e7c:	sub	sp, sp, #0x60
  401e80:	adrp	x8, 420000 <completed.8445>
  401e84:	adrp	x9, 420000 <completed.8445>
  401e88:	stp	x29, x30, [sp, #32]
  401e8c:	stp	x24, x23, [sp, #48]
  401e90:	stp	x22, x21, [sp, #64]
  401e94:	stp	x20, x19, [sp, #80]
  401e98:	add	x29, sp, #0x20
  401e9c:	stp	xzr, xzr, [sp, #8]
  401ea0:	str	w0, [x8, #16]
  401ea4:	str	x1, [x9, #24]
  401ea8:	str	xzr, [sp, #24]
  401eac:	tbnz	w0, #31, 4021b8 <main+0x33c>
  401eb0:	mov	x19, x1
  401eb4:	cbz	x1, 4021dc <main+0x360>
  401eb8:	adrp	x2, 404000 <netdev_format+0x114>
  401ebc:	adrp	x3, 405000 <_fini+0x1b4>
  401ec0:	add	x2, x2, #0xf59
  401ec4:	add	x3, x3, #0x730
  401ec8:	mov	x1, x19
  401ecc:	mov	x4, xzr
  401ed0:	mov	w21, w0
  401ed4:	bl	4019b0 <getopt_long@plt>
  401ed8:	tbnz	w0, #31, 401f74 <main+0xf8>
  401edc:	adrp	x20, 404000 <netdev_format+0x114>
  401ee0:	adrp	x22, 405000 <_fini+0x1b4>
  401ee4:	adrp	x23, 420000 <completed.8445>
  401ee8:	adrp	x24, 420000 <completed.8445>
  401eec:	add	x20, x20, #0xf59
  401ef0:	add	x22, x22, #0x730
  401ef4:	cmp	w0, #0xff
  401ef8:	b.le	401f34 <main+0xb8>
  401efc:	cmp	w0, #0x100
  401f00:	b.eq	401f68 <main+0xec>  // b.none
  401f04:	cmp	w0, #0x101
  401f08:	b.ne	402200 <main+0x384>  // b.any
  401f0c:	ldr	x8, [x23, #32]
  401f10:	mov	w0, w21
  401f14:	mov	x1, x19
  401f18:	mov	x2, x20
  401f1c:	mov	x3, x22
  401f20:	mov	x4, xzr
  401f24:	str	x8, [x24, #8]
  401f28:	bl	4019b0 <getopt_long@plt>
  401f2c:	tbz	w0, #31, 401ef4 <main+0x78>
  401f30:	b	401f74 <main+0xf8>
  401f34:	cmp	w0, #0x3f
  401f38:	b.ne	401f44 <main+0xc8>  // b.any
  401f3c:	mov	w20, #0xffffffea            	// #-22
  401f40:	b	402144 <main+0x2c8>
  401f44:	cmp	w0, #0x68
  401f48:	b.ne	402200 <main+0x384>  // b.any
  401f4c:	adrp	x8, 420000 <completed.8445>
  401f50:	ldr	x1, [x8, #40]
  401f54:	adrp	x0, 404000 <netdev_format+0x114>
  401f58:	add	x0, x0, #0xf6c
  401f5c:	bl	4019c0 <printf@plt>
  401f60:	mov	w20, wzr
  401f64:	b	402144 <main+0x2c8>
  401f68:	bl	4019d0 <version@plt>
  401f6c:	cmp	w0, #0x1
  401f70:	b.lt	402128 <main+0x2ac>  // b.tstop
  401f74:	adrp	x8, 420000 <completed.8445>
  401f78:	ldrsw	x8, [x8, #48]
  401f7c:	cmp	w8, w21
  401f80:	b.ge	401fe0 <main+0x164>  // b.tcont
  401f84:	sub	w22, w21, w8
  401f88:	add	x23, x19, x8, lsl #3
  401f8c:	ldr	x0, [x23]
  401f90:	bl	4019e0 <strdup@plt>
  401f94:	mov	x19, x0
  401f98:	cbz	x0, 4020a0 <main+0x224>
  401f9c:	mov	w1, #0x3d                  	// #61
  401fa0:	mov	x0, x19
  401fa4:	bl	4019f0 <strchr@plt>
  401fa8:	mov	x20, x0
  401fac:	cbz	x0, 401fb4 <main+0x138>
  401fb0:	strb	wzr, [x20], #1
  401fb4:	add	x2, sp, #0x8
  401fb8:	mov	x0, x19
  401fbc:	mov	x1, x20
  401fc0:	bl	4026d4 <parse_cmdline_item>
  401fc4:	tbnz	w0, #31, 4020c0 <main+0x244>
  401fc8:	mov	x0, x19
  401fcc:	bl	401a00 <free@plt>
  401fd0:	subs	w22, w22, #0x1
  401fd4:	add	x23, x23, #0x8
  401fd8:	b.ne	401f8c <main+0x110>  // b.any
  401fdc:	b	401ff8 <main+0x17c>
  401fe0:	adrp	x0, 402000 <main+0x184>
  401fe4:	add	x0, x0, #0x6d4
  401fe8:	add	x1, sp, #0x8
  401fec:	mov	w2, wzr
  401ff0:	bl	401a10 <proc_cmdline_parse@plt>
  401ff4:	tbnz	w0, #31, 402014 <main+0x198>
  401ff8:	add	x0, sp, #0x8
  401ffc:	bl	403484 <context_merge_networks>
  402000:	tbnz	w0, #31, 40204c <main+0x1d0>
  402004:	add	x0, sp, #0x8
  402008:	bl	402224 <context_save>
  40200c:	mov	w20, w0
  402010:	b	402144 <main+0x2c8>
  402014:	mov	w19, w0
  402018:	mov	w0, wzr
  40201c:	bl	401a20 <log_get_max_level_realm@plt>
  402020:	cmp	w0, #0x4
  402024:	b.lt	402090 <main+0x214>  // b.tstop
  402028:	adrp	x2, 404000 <netdev_format+0x114>
  40202c:	adrp	x4, 404000 <netdev_format+0x114>
  402030:	adrp	x5, 404000 <netdev_format+0x114>
  402034:	add	x2, x2, #0xe73
  402038:	add	x4, x4, #0xe90
  40203c:	add	x5, x5, #0xe94
  402040:	mov	w0, #0x4                   	// #4
  402044:	mov	w3, #0xb3                  	// #179
  402048:	b	402080 <main+0x204>
  40204c:	mov	w19, w0
  402050:	mov	w0, wzr
  402054:	bl	401a20 <log_get_max_level_realm@plt>
  402058:	cmp	w0, #0x4
  40205c:	b.lt	402090 <main+0x214>  // b.tstop
  402060:	adrp	x2, 404000 <netdev_format+0x114>
  402064:	adrp	x4, 404000 <netdev_format+0x114>
  402068:	adrp	x5, 404000 <netdev_format+0x114>
  40206c:	add	x2, x2, #0xe73
  402070:	add	x4, x4, #0xe90
  402074:	add	x5, x5, #0xee9
  402078:	mov	w0, #0x4                   	// #4
  40207c:	mov	w3, #0xca                  	// #202
  402080:	mov	w1, w19
  402084:	bl	401a30 <log_internal_realm@plt>
  402088:	mov	w20, w0
  40208c:	b	402144 <main+0x2c8>
  402090:	mov	w8, wzr
  402094:	neg	w9, w19
  402098:	sub	w20, w8, w9, uxtb
  40209c:	b	402144 <main+0x2c8>
  4020a0:	adrp	x1, 404000 <netdev_format+0x114>
  4020a4:	adrp	x3, 404000 <netdev_format+0x114>
  4020a8:	add	x1, x1, #0xe73
  4020ac:	add	x3, x3, #0xe90
  4020b0:	mov	w2, #0xbb                  	// #187
  4020b4:	bl	401a40 <log_oom_internal@plt>
  4020b8:	mov	w20, w0
  4020bc:	b	40213c <main+0x2c0>
  4020c0:	mov	w21, w0
  4020c4:	mov	w0, wzr
  4020c8:	bl	401a20 <log_get_max_level_realm@plt>
  4020cc:	cmp	w0, #0x4
  4020d0:	b.lt	402130 <main+0x2b4>  // b.tstop
  4020d4:	adrp	x8, 404000 <netdev_format+0x114>
  4020d8:	adrp	x9, 404000 <netdev_format+0x114>
  4020dc:	add	x8, x8, #0xee6
  4020e0:	add	x9, x9, #0xee8
  4020e4:	cmp	x20, #0x0
  4020e8:	adrp	x2, 404000 <netdev_format+0x114>
  4020ec:	adrp	x4, 404000 <netdev_format+0x114>
  4020f0:	adrp	x5, 404000 <netdev_format+0x114>
  4020f4:	csel	x7, x9, x8, eq  // eq = none
  4020f8:	csel	x8, x9, x20, eq  // eq = none
  4020fc:	add	x2, x2, #0xe73
  402100:	add	x4, x4, #0xe90
  402104:	add	x5, x5, #0xebc
  402108:	mov	w0, #0x4                   	// #4
  40210c:	mov	w3, #0xc4                  	// #196
  402110:	mov	w1, w21
  402114:	mov	x6, x19
  402118:	str	x8, [sp]
  40211c:	bl	401a30 <log_internal_realm@plt>
  402120:	mov	w20, w0
  402124:	b	40213c <main+0x2c0>
  402128:	mov	w20, w0
  40212c:	b	402144 <main+0x2c8>
  402130:	mov	w8, wzr
  402134:	neg	w9, w21
  402138:	sub	w20, w8, w9, uxtb
  40213c:	mov	x0, x19
  402140:	bl	401a00 <free@plt>
  402144:	add	x0, sp, #0x8
  402148:	bl	403798 <context_clear>
  40214c:	bl	401a50 <ask_password_agent_close@plt>
  402150:	bl	401a60 <polkit_agent_close@plt>
  402154:	bl	401a70 <pager_close@plt>
  402158:	bl	401a80 <mac_selinux_finish@plt>
  40215c:	adrp	x8, 41f000 <__FRAME_END__+0x196e8>
  402160:	ldr	x8, [x8, #3520]
  402164:	adrp	x19, 41f000 <__FRAME_END__+0x196e8>
  402168:	ldr	x19, [x19, #3528]
  40216c:	add	x9, x8, #0x7
  402170:	and	x21, x9, #0xfffffffffffffff8
  402174:	cmp	x21, x19
  402178:	cset	w9, cs  // cs = hs, nlast
  40217c:	cmp	x8, #0x0
  402180:	cset	w8, eq  // eq = none
  402184:	orr	w8, w8, w9
  402188:	tbnz	w8, #0, 40219c <main+0x320>
  40218c:	ldp	x0, x8, [x21], #16
  402190:	blr	x8
  402194:	cmp	x21, x19
  402198:	b.cc	40218c <main+0x310>  // b.lo, b.ul, b.last
  40219c:	lsr	w0, w20, #31
  4021a0:	ldp	x20, x19, [sp, #80]
  4021a4:	ldp	x22, x21, [sp, #64]
  4021a8:	ldp	x24, x23, [sp, #48]
  4021ac:	ldp	x29, x30, [sp, #32]
  4021b0:	add	sp, sp, #0x60
  4021b4:	ret
  4021b8:	adrp	x1, 404000 <netdev_format+0x114>
  4021bc:	adrp	x2, 404000 <netdev_format+0x114>
  4021c0:	adrp	x4, 404000 <netdev_format+0x114>
  4021c4:	add	x1, x1, #0xf2d
  4021c8:	add	x2, x2, #0xe73
  4021cc:	add	x4, x4, #0xf37
  4021d0:	mov	w3, #0x8d                  	// #141
  4021d4:	mov	w0, wzr
  4021d8:	bl	401a90 <log_assert_failed_realm@plt>
  4021dc:	adrp	x1, 404000 <netdev_format+0x114>
  4021e0:	adrp	x2, 404000 <netdev_format+0x114>
  4021e4:	adrp	x4, 404000 <netdev_format+0x114>
  4021e8:	add	x1, x1, #0xf54
  4021ec:	add	x2, x2, #0xe73
  4021f0:	add	x4, x4, #0xf37
  4021f4:	mov	w3, #0x8e                  	// #142
  4021f8:	mov	w0, wzr
  4021fc:	bl	401a90 <log_assert_failed_realm@plt>
  402200:	adrp	x1, 404000 <netdev_format+0x114>
  402204:	adrp	x2, 404000 <netdev_format+0x114>
  402208:	adrp	x4, 404000 <netdev_format+0x114>
  40220c:	add	x1, x1, #0xf5b
  402210:	add	x2, x2, #0xe73
  402214:	add	x4, x4, #0xf37
  402218:	mov	w3, #0xa2                  	// #162
  40221c:	mov	w0, wzr
  402220:	bl	401aa0 <log_assert_failed_unreachable_realm@plt>

0000000000402224 <context_save>:
  402224:	stp	x29, x30, [sp, #-96]!
  402228:	stp	x28, x27, [sp, #16]
  40222c:	stp	x26, x25, [sp, #32]
  402230:	stp	x24, x23, [sp, #48]
  402234:	stp	x22, x21, [sp, #64]
  402238:	stp	x20, x19, [sp, #80]
  40223c:	mov	x29, sp
  402240:	sub	sp, sp, #0x40
  402244:	adrp	x8, 420000 <completed.8445>
  402248:	ldr	x21, [x8, #8]
  40224c:	mov	x19, x0
  402250:	cbz	x21, 4022c8 <context_save+0xa4>
  402254:	ldrb	w8, [x21]
  402258:	adrp	x22, 405000 <_fini+0x1b4>
  40225c:	add	x22, x22, #0x43
  402260:	cbz	w8, 4022d4 <context_save+0xb0>
  402264:	mov	x0, x21
  402268:	bl	401ab0 <strlen@plt>
  40226c:	add	x8, x0, #0x16
  402270:	cmp	x8, #0x400, lsl #12
  402274:	b.hi	402698 <context_save+0x474>  // b.pmore
  402278:	add	x8, x8, #0xf
  40227c:	mov	x9, sp
  402280:	and	x8, x8, #0xfffffffffffffff0
  402284:	sub	x20, x9, x8
  402288:	mov	sp, x20
  40228c:	mov	x0, x20
  402290:	mov	x1, x21
  402294:	bl	401ac0 <stpcpy@plt>
  402298:	mov	x8, x0
  40229c:	cmp	x0, x20
  4022a0:	b.ls	4022b4 <context_save+0x90>  // b.plast
  4022a4:	mov	x0, x8
  4022a8:	ldrb	w9, [x0, #-1]!
  4022ac:	cmp	w9, #0x2f
  4022b0:	b.eq	402298 <context_save+0x74>  // b.none
  4022b4:	ldur	x9, [x22, #13]
  4022b8:	ldr	q0, [x22]
  4022bc:	stur	x9, [x8, #13]
  4022c0:	str	q0, [x8]
  4022c4:	b	4022d8 <context_save+0xb4>
  4022c8:	adrp	x20, 405000 <_fini+0x1b4>
  4022cc:	add	x20, x20, #0x43
  4022d0:	b	4022d8 <context_save+0xb4>
  4022d4:	mov	x20, x22
  4022d8:	mov	w1, #0x1ed                 	// #493
  4022dc:	mov	x0, x20
  4022e0:	bl	401ad0 <mkdir_p@plt>
  4022e4:	mov	w21, w0
  4022e8:	tbnz	w0, #31, 4025bc <context_save+0x398>
  4022ec:	mov	w8, #0xfffffffe            	// #-2
  4022f0:	stur	w8, [x29, #-56]
  4022f4:	stur	xzr, [x29, #-48]
  4022f8:	ldr	x0, [x19]
  4022fc:	sub	x1, x29, #0x38
  402300:	sub	x2, x29, #0x18
  402304:	mov	x3, xzr
  402308:	bl	401ae0 <internal_hashmap_iterate@plt>
  40230c:	tbz	w0, #0, 4023f4 <context_save+0x1d0>
  402310:	adrp	x23, 405000 <_fini+0x1b4>
  402314:	adrp	x22, 405000 <_fini+0x1b4>
  402318:	adrp	x25, 405000 <_fini+0x1b4>
  40231c:	adrp	x28, 405000 <_fini+0x1b4>
  402320:	add	x23, x23, #0x114
  402324:	add	x22, x22, #0x106
  402328:	mov	w24, #0xffffffff            	// #-1
  40232c:	add	x25, x25, #0x12f
  402330:	add	x28, x28, #0x117
  402334:	b	40238c <context_save+0x168>
  402338:	adrp	x1, 404000 <netdev_format+0x114>
  40233c:	adrp	x3, 405000 <_fini+0x1b4>
  402340:	mov	w2, #0x1d                  	// #29
  402344:	mov	w0, wzr
  402348:	add	x1, x1, #0xe73
  40234c:	add	x3, x3, #0x122
  402350:	bl	401a40 <log_oom_internal@plt>
  402354:	mov	w27, w0
  402358:	ldur	x0, [x29, #-16]
  40235c:	bl	401af0 <safe_fclose@plt>
  402360:	ldur	x0, [x29, #-8]
  402364:	bl	401a00 <free@plt>
  402368:	ldr	x0, [x19]
  40236c:	cmp	w27, #0x0
  402370:	ccmp	w21, w24, #0x4, lt  // lt = tstop
  402374:	sub	x1, x29, #0x38
  402378:	sub	x2, x29, #0x18
  40237c:	mov	x3, xzr
  402380:	csel	w21, w27, w21, gt
  402384:	bl	401ae0 <internal_hashmap_iterate@plt>
  402388:	tbz	w0, #0, 4023f4 <context_save+0x1d0>
  40238c:	ldur	x26, [x29, #-24]
  402390:	stp	xzr, xzr, [x29, #-16]
  402394:	cbz	x26, 40262c <context_save+0x408>
  402398:	ldr	x3, [x26]
  40239c:	cbz	x3, 4023ac <context_save+0x188>
  4023a0:	ldrb	w8, [x3]
  4023a4:	mov	x2, x28
  4023a8:	cbnz	w8, 4023b8 <context_save+0x194>
  4023ac:	adrp	x3, 405000 <_fini+0x1b4>
  4023b0:	mov	x2, x23
  4023b4:	add	x3, x3, #0x11a
  4023b8:	sub	x0, x29, #0x8
  4023bc:	mov	x1, x22
  4023c0:	bl	401b00 <asprintf@plt>
  4023c4:	tbnz	w0, #31, 402338 <context_save+0x114>
  4023c8:	ldur	x2, [x29, #-8]
  4023cc:	sub	x3, x29, #0x10
  4023d0:	mov	x0, x20
  4023d4:	mov	x1, x25
  4023d8:	bl	401b10 <generator_open_unit_file@plt>
  4023dc:	tbnz	w0, #31, 402354 <context_save+0x130>
  4023e0:	ldur	x1, [x29, #-16]
  4023e4:	mov	x0, x26
  4023e8:	bl	40388c <network_dump>
  4023ec:	mov	w27, wzr
  4023f0:	b	402358 <context_save+0x134>
  4023f4:	mov	w8, #0xfffffffe            	// #-2
  4023f8:	stur	w8, [x29, #-56]
  4023fc:	stur	xzr, [x29, #-48]
  402400:	ldr	x0, [x19, #8]
  402404:	sub	x1, x29, #0x38
  402408:	sub	x2, x29, #0x20
  40240c:	mov	x3, xzr
  402410:	bl	401ae0 <internal_hashmap_iterate@plt>
  402414:	tbz	w0, #0, 4024d8 <context_save+0x2b4>
  402418:	adrp	x22, 405000 <_fini+0x1b4>
  40241c:	adrp	x23, 404000 <netdev_format+0x114>
  402420:	adrp	x24, 405000 <_fini+0x1b4>
  402424:	adrp	x25, 405000 <_fini+0x1b4>
  402428:	add	x22, x22, #0x172
  40242c:	add	x23, x23, #0xe73
  402430:	add	x24, x24, #0x17f
  402434:	mov	w28, #0xffffffff            	// #-1
  402438:	add	x25, x25, #0x12f
  40243c:	b	40248c <context_save+0x268>
  402440:	mov	w2, #0x32                  	// #50
  402444:	mov	w0, wzr
  402448:	mov	x1, x23
  40244c:	mov	x3, x24
  402450:	bl	401a40 <log_oom_internal@plt>
  402454:	mov	w27, w0
  402458:	ldur	x0, [x29, #-16]
  40245c:	bl	401af0 <safe_fclose@plt>
  402460:	ldur	x0, [x29, #-8]
  402464:	bl	401a00 <free@plt>
  402468:	ldr	x0, [x19, #8]
  40246c:	cmp	w27, #0x0
  402470:	ccmp	w21, w28, #0x4, lt  // lt = tstop
  402474:	sub	x1, x29, #0x38
  402478:	sub	x2, x29, #0x20
  40247c:	mov	x3, xzr
  402480:	csel	w21, w27, w21, gt
  402484:	bl	401ae0 <internal_hashmap_iterate@plt>
  402488:	tbz	w0, #0, 4024d8 <context_save+0x2b4>
  40248c:	ldur	x26, [x29, #-32]
  402490:	stp	xzr, xzr, [x29, #-16]
  402494:	cbz	x26, 402650 <context_save+0x42c>
  402498:	ldr	x2, [x26]
  40249c:	sub	x0, x29, #0x8
  4024a0:	mov	x1, x22
  4024a4:	bl	401b00 <asprintf@plt>
  4024a8:	tbnz	w0, #31, 402440 <context_save+0x21c>
  4024ac:	ldur	x2, [x29, #-8]
  4024b0:	sub	x3, x29, #0x10
  4024b4:	mov	x0, x20
  4024b8:	mov	x1, x25
  4024bc:	bl	401b10 <generator_open_unit_file@plt>
  4024c0:	tbnz	w0, #31, 402454 <context_save+0x230>
  4024c4:	ldur	x1, [x29, #-16]
  4024c8:	mov	x0, x26
  4024cc:	bl	403c24 <netdev_dump>
  4024d0:	mov	w27, wzr
  4024d4:	b	402458 <context_save+0x234>
  4024d8:	mov	w8, #0xfffffffe            	// #-2
  4024dc:	stur	w8, [x29, #-56]
  4024e0:	stur	xzr, [x29, #-48]
  4024e4:	ldr	x0, [x19, #16]
  4024e8:	sub	x1, x29, #0x38
  4024ec:	sub	x2, x29, #0x28
  4024f0:	mov	x3, xzr
  4024f4:	bl	401ae0 <internal_hashmap_iterate@plt>
  4024f8:	tbz	w0, #0, 402608 <context_save+0x3e4>
  4024fc:	adrp	x22, 405000 <_fini+0x1b4>
  402500:	adrp	x23, 404000 <netdev_format+0x114>
  402504:	adrp	x24, 405000 <_fini+0x1b4>
  402508:	adrp	x25, 405000 <_fini+0x1b4>
  40250c:	add	x22, x22, #0x1b4
  402510:	add	x23, x23, #0xe73
  402514:	add	x24, x24, #0x1bf
  402518:	mov	w28, #0xffffffff            	// #-1
  40251c:	add	x25, x25, #0x12f
  402520:	b	402570 <context_save+0x34c>
  402524:	mov	w2, #0x47                  	// #71
  402528:	mov	w0, wzr
  40252c:	mov	x1, x23
  402530:	mov	x3, x24
  402534:	bl	401a40 <log_oom_internal@plt>
  402538:	mov	w27, w0
  40253c:	ldur	x0, [x29, #-16]
  402540:	bl	401af0 <safe_fclose@plt>
  402544:	ldur	x0, [x29, #-8]
  402548:	bl	401a00 <free@plt>
  40254c:	ldr	x0, [x19, #16]
  402550:	cmp	w27, #0x0
  402554:	ccmp	w21, w28, #0x4, lt  // lt = tstop
  402558:	sub	x1, x29, #0x38
  40255c:	sub	x2, x29, #0x28
  402560:	mov	x3, xzr
  402564:	csel	w21, w27, w21, gt
  402568:	bl	401ae0 <internal_hashmap_iterate@plt>
  40256c:	tbz	w0, #0, 402608 <context_save+0x3e4>
  402570:	ldur	x26, [x29, #-40]
  402574:	stp	xzr, xzr, [x29, #-16]
  402578:	cbz	x26, 402674 <context_save+0x450>
  40257c:	ldr	x2, [x26]
  402580:	sub	x0, x29, #0x8
  402584:	mov	x1, x22
  402588:	bl	401b00 <asprintf@plt>
  40258c:	tbnz	w0, #31, 402524 <context_save+0x300>
  402590:	ldur	x2, [x29, #-8]
  402594:	sub	x3, x29, #0x10
  402598:	mov	x0, x20
  40259c:	mov	x1, x25
  4025a0:	bl	401b10 <generator_open_unit_file@plt>
  4025a4:	tbnz	w0, #31, 402538 <context_save+0x314>
  4025a8:	ldur	x1, [x29, #-16]
  4025ac:	mov	x0, x26
  4025b0:	bl	403cc4 <link_dump>
  4025b4:	mov	w27, wzr
  4025b8:	b	40253c <context_save+0x318>
  4025bc:	mov	w0, wzr
  4025c0:	bl	401a20 <log_get_max_level_realm@plt>
  4025c4:	cmp	w0, #0x3
  4025c8:	b.lt	4025fc <context_save+0x3d8>  // b.tstop
  4025cc:	adrp	x2, 404000 <netdev_format+0x114>
  4025d0:	adrp	x4, 405000 <_fini+0x1b4>
  4025d4:	adrp	x5, 405000 <_fini+0x1b4>
  4025d8:	add	x2, x2, #0xe73
  4025dc:	add	x4, x4, #0x93
  4025e0:	add	x5, x5, #0xa0
  4025e4:	mov	w0, #0x3                   	// #3
  4025e8:	mov	w3, #0x5e                  	// #94
  4025ec:	mov	w1, w21
  4025f0:	bl	401a30 <log_internal_realm@plt>
  4025f4:	mov	w21, w0
  4025f8:	b	402608 <context_save+0x3e4>
  4025fc:	mov	w8, wzr
  402600:	neg	w9, w21
  402604:	sub	w21, w8, w9, uxtb
  402608:	mov	w0, w21
  40260c:	mov	sp, x29
  402610:	ldp	x20, x19, [sp, #80]
  402614:	ldp	x22, x21, [sp, #64]
  402618:	ldp	x24, x23, [sp, #48]
  40261c:	ldp	x26, x25, [sp, #32]
  402620:	ldp	x28, x27, [sp, #16]
  402624:	ldp	x29, x30, [sp], #96
  402628:	ret
  40262c:	adrp	x1, 405000 <_fini+0x1b4>
  402630:	adrp	x2, 404000 <netdev_format+0x114>
  402634:	adrp	x4, 405000 <_fini+0x1b4>
  402638:	add	x1, x1, #0xd4
  40263c:	add	x2, x2, #0xe73
  402640:	add	x4, x4, #0xdc
  402644:	mov	w3, #0x17                  	// #23
  402648:	mov	w0, wzr
  40264c:	bl	401a90 <log_assert_failed_realm@plt>
  402650:	adrp	x1, 405000 <_fini+0x1b4>
  402654:	adrp	x2, 404000 <netdev_format+0x114>
  402658:	adrp	x4, 405000 <_fini+0x1b4>
  40265c:	add	x1, x1, #0x143
  402660:	add	x2, x2, #0xe73
  402664:	add	x4, x4, #0x14a
  402668:	mov	w3, #0x2d                  	// #45
  40266c:	mov	w0, wzr
  402670:	bl	401a90 <log_assert_failed_realm@plt>
  402674:	adrp	x1, 405000 <_fini+0x1b4>
  402678:	adrp	x2, 404000 <netdev_format+0x114>
  40267c:	adrp	x4, 405000 <_fini+0x1b4>
  402680:	add	x1, x1, #0x18b
  402684:	add	x2, x2, #0xe73
  402688:	add	x4, x4, #0x190
  40268c:	mov	w3, #0x42                  	// #66
  402690:	mov	w0, wzr
  402694:	bl	401a90 <log_assert_failed_realm@plt>
  402698:	adrp	x1, 405000 <_fini+0x1b4>
  40269c:	adrp	x2, 404000 <netdev_format+0x114>
  4026a0:	adrp	x4, 405000 <_fini+0x1b4>
  4026a4:	add	x1, x1, #0x74
  4026a8:	add	x2, x2, #0xe73
  4026ac:	add	x4, x4, #0x58
  4026b0:	mov	w3, #0x5a                  	// #90
  4026b4:	mov	w0, wzr
  4026b8:	bl	401a90 <log_assert_failed_realm@plt>

00000000004026bc <network_get>:
  4026bc:	ldr	x0, [x0]
  4026c0:	b	401b20 <internal_hashmap_get@plt>

00000000004026c4 <netdev_get>:
  4026c4:	ldr	x0, [x0, #8]
  4026c8:	b	401b20 <internal_hashmap_get@plt>

00000000004026cc <link_get>:
  4026cc:	ldr	x0, [x0, #16]
  4026d0:	b	401b20 <internal_hashmap_get@plt>

00000000004026d4 <parse_cmdline_item>:
  4026d4:	sub	sp, sp, #0x50
  4026d8:	stp	x29, x30, [sp, #32]
  4026dc:	str	x21, [sp, #48]
  4026e0:	stp	x20, x19, [sp, #64]
  4026e4:	add	x29, sp, #0x20
  4026e8:	cbz	x0, 402a9c <parse_cmdline_item+0x3c8>
  4026ec:	mov	x19, x2
  4026f0:	cbz	x2, 402abc <parse_cmdline_item+0x3e8>
  4026f4:	mov	x20, x1
  4026f8:	adrp	x1, 405000 <_fini+0x1b4>
  4026fc:	add	x1, x1, #0x23a
  402700:	mov	x21, x0
  402704:	bl	401b30 <strcmp@plt>
  402708:	cbz	w0, 4027b8 <parse_cmdline_item+0xe4>
  40270c:	adrp	x1, 405000 <_fini+0x1b4>
  402710:	add	x1, x1, #0x23d
  402714:	mov	x0, x21
  402718:	bl	401b30 <strcmp@plt>
  40271c:	cbz	w0, 4027f8 <parse_cmdline_item+0x124>
  402720:	adrp	x1, 405000 <_fini+0x1b4>
  402724:	add	x1, x1, #0x246
  402728:	mov	x0, x21
  40272c:	bl	401b30 <strcmp@plt>
  402730:	cbz	w0, 402818 <parse_cmdline_item+0x144>
  402734:	adrp	x1, 405000 <_fini+0x1b4>
  402738:	add	x1, x1, #0x251
  40273c:	mov	x0, x21
  402740:	bl	401b30 <strcmp@plt>
  402744:	cbz	w0, 4028b8 <parse_cmdline_item+0x1e4>
  402748:	adrp	x1, 405000 <_fini+0x1b4>
  40274c:	add	x1, x1, #0x25c
  402750:	mov	x0, x21
  402754:	bl	401b30 <strcmp@plt>
  402758:	cbz	w0, 40298c <parse_cmdline_item+0x2b8>
  40275c:	adrp	x1, 405000 <_fini+0x1b4>
  402760:	add	x1, x1, #0x261
  402764:	mov	x0, x21
  402768:	bl	401b30 <strcmp@plt>
  40276c:	cbz	w0, 4029ac <parse_cmdline_item+0x2d8>
  402770:	adrp	x1, 405000 <_fini+0x1b4>
  402774:	add	x1, x1, #0x268
  402778:	mov	x0, x21
  40277c:	bl	401b30 <strcmp@plt>
  402780:	cbz	w0, 402a7c <parse_cmdline_item+0x3a8>
  402784:	adrp	x1, 405000 <_fini+0x1b4>
  402788:	add	x1, x1, #0x26d
  40278c:	mov	x0, x21
  402790:	bl	401b30 <strcmp@plt>
  402794:	cbnz	w0, 402984 <parse_cmdline_item+0x2b0>
  402798:	mov	x0, x19
  40279c:	mov	x1, x21
  4027a0:	mov	x2, x20
  4027a4:	ldp	x20, x19, [sp, #64]
  4027a8:	ldr	x21, [sp, #48]
  4027ac:	ldp	x29, x30, [sp, #32]
  4027b0:	add	sp, sp, #0x50
  4027b4:	b	4032bc <parse_cmdline_ifname>
  4027b8:	cbz	x20, 402878 <parse_cmdline_item+0x1a4>
  4027bc:	mov	w1, #0x3a                  	// #58
  4027c0:	mov	x0, x20
  4027c4:	bl	4019f0 <strchr@plt>
  4027c8:	cbz	x0, 40290c <parse_cmdline_item+0x238>
  4027cc:	ldrb	w8, [x20]
  4027d0:	cmp	w8, #0x5b
  4027d4:	b.ne	402970 <parse_cmdline_item+0x29c>  // b.any
  4027d8:	mov	x0, x19
  4027dc:	mov	x2, x20
  4027e0:	ldp	x20, x19, [sp, #64]
  4027e4:	ldr	x21, [sp, #48]
  4027e8:	ldp	x29, x30, [sp, #32]
  4027ec:	mov	w1, #0xa                   	// #10
  4027f0:	add	sp, sp, #0x50
  4027f4:	b	4041e8 <parse_cmdline_ip_address>
  4027f8:	mov	x0, x19
  4027fc:	mov	x1, x21
  402800:	mov	x2, x20
  402804:	ldp	x20, x19, [sp, #64]
  402808:	ldr	x21, [sp, #48]
  40280c:	ldp	x29, x30, [sp, #32]
  402810:	add	sp, sp, #0x50
  402814:	b	402ae0 <parse_cmdline_rd_route>
  402818:	cbz	x20, 402878 <parse_cmdline_item+0x1a4>
  40281c:	add	x1, sp, #0xc
  402820:	add	x2, sp, #0x10
  402824:	mov	x0, x20
  402828:	bl	401b40 <in_addr_from_string_auto@plt>
  40282c:	tbnz	w0, #31, 402870 <parse_cmdline_item+0x19c>
  402830:	ldr	x0, [x19]
  402834:	adrp	x1, 404000 <netdev_format+0x114>
  402838:	add	x1, x1, #0xee8
  40283c:	bl	401b20 <internal_hashmap_get@plt>
  402840:	str	x0, [x29, #24]
  402844:	cbnz	x0, 402864 <parse_cmdline_item+0x190>
  402848:	adrp	x1, 404000 <netdev_format+0x114>
  40284c:	add	x1, x1, #0xee8
  402850:	add	x2, x29, #0x18
  402854:	mov	x0, x19
  402858:	bl	404804 <network_new>
  40285c:	tbnz	w0, #31, 402870 <parse_cmdline_item+0x19c>
  402860:	ldr	x0, [x29, #24]
  402864:	add	x0, x0, #0x18
  402868:	mov	x1, x20
  40286c:	bl	401b50 <strv_extend@plt>
  402870:	mov	w21, w0
  402874:	b	402a48 <parse_cmdline_item+0x374>
  402878:	mov	w0, wzr
  40287c:	bl	401a20 <log_get_max_level_realm@plt>
  402880:	cmp	w0, #0x4
  402884:	b.lt	402968 <parse_cmdline_item+0x294>  // b.tstop
  402888:	adrp	x2, 405000 <_fini+0x1b4>
  40288c:	adrp	x4, 405000 <_fini+0x1b4>
  402890:	adrp	x5, 405000 <_fini+0x1b4>
  402894:	add	x2, x2, #0x484
  402898:	add	x4, x4, #0x49d
  40289c:	add	x5, x5, #0x4b8
  4028a0:	mov	w0, #0x4                   	// #4
  4028a4:	mov	w3, #0x21                  	// #33
  4028a8:	mov	w1, wzr
  4028ac:	mov	x6, x21
  4028b0:	bl	401a30 <log_internal_realm@plt>
  4028b4:	b	402968 <parse_cmdline_item+0x294>
  4028b8:	cbz	x20, 4029cc <parse_cmdline_item+0x2f8>
  4028bc:	mov	x0, x20
  4028c0:	bl	401b60 <parse_boolean@plt>
  4028c4:	mov	w21, w0
  4028c8:	tbnz	w0, #31, 402a48 <parse_cmdline_item+0x374>
  4028cc:	ldr	x0, [x19]
  4028d0:	adrp	x1, 404000 <netdev_format+0x114>
  4028d4:	add	x1, x1, #0xee8
  4028d8:	bl	401b20 <internal_hashmap_get@plt>
  4028dc:	str	x0, [sp, #16]
  4028e0:	cbnz	x0, 402900 <parse_cmdline_item+0x22c>
  4028e4:	adrp	x1, 404000 <netdev_format+0x114>
  4028e8:	add	x1, x1, #0xee8
  4028ec:	add	x2, sp, #0x10
  4028f0:	mov	x0, x19
  4028f4:	bl	404804 <network_new>
  4028f8:	tbnz	w0, #31, 402870 <parse_cmdline_item+0x19c>
  4028fc:	ldr	x0, [sp, #16]
  402900:	cmp	w21, #0x0
  402904:	cset	w8, ne  // ne = any
  402908:	b	402a40 <parse_cmdline_item+0x36c>
  40290c:	adrp	x0, 405000 <_fini+0x1b4>
  402910:	add	x0, x0, #0x7b0
  402914:	mov	w1, #0x9                   	// #9
  402918:	mov	x2, x20
  40291c:	bl	401b70 <string_table_lookup@plt>
  402920:	mov	x20, x0
  402924:	tbnz	w20, #31, 402968 <parse_cmdline_item+0x294>
  402928:	ldr	x0, [x19]
  40292c:	adrp	x1, 404000 <netdev_format+0x114>
  402930:	add	x1, x1, #0xee8
  402934:	bl	401b20 <internal_hashmap_get@plt>
  402938:	str	x0, [sp, #16]
  40293c:	cbnz	x0, 40295c <parse_cmdline_item+0x288>
  402940:	adrp	x1, 404000 <netdev_format+0x114>
  402944:	add	x1, x1, #0xee8
  402948:	add	x2, sp, #0x10
  40294c:	mov	x0, x19
  402950:	bl	404804 <network_new>
  402954:	tbnz	w0, #31, 402870 <parse_cmdline_item+0x19c>
  402958:	ldr	x0, [sp, #16]
  40295c:	mov	w21, wzr
  402960:	str	w20, [x0, #20]
  402964:	b	402a48 <parse_cmdline_item+0x374>
  402968:	mov	w21, #0xffffffea            	// #-22
  40296c:	b	402a48 <parse_cmdline_item+0x374>
  402970:	mov	w1, #0x2                   	// #2
  402974:	mov	x0, x19
  402978:	mov	x2, x20
  40297c:	bl	4041e8 <parse_cmdline_ip_address>
  402980:	tbnz	w0, #31, 402a60 <parse_cmdline_item+0x38c>
  402984:	mov	w21, wzr
  402988:	b	402a48 <parse_cmdline_item+0x374>
  40298c:	mov	x0, x19
  402990:	mov	x1, x21
  402994:	mov	x2, x20
  402998:	ldp	x20, x19, [sp, #64]
  40299c:	ldr	x21, [sp, #48]
  4029a0:	ldp	x29, x30, [sp, #32]
  4029a4:	add	sp, sp, #0x50
  4029a8:	b	402db8 <parse_cmdline_vlan>
  4029ac:	mov	x0, x19
  4029b0:	mov	x1, x21
  4029b4:	mov	x2, x20
  4029b8:	ldp	x20, x19, [sp, #64]
  4029bc:	ldr	x21, [sp, #48]
  4029c0:	ldp	x29, x30, [sp, #32]
  4029c4:	add	sp, sp, #0x50
  4029c8:	b	402ee8 <parse_cmdline_bridge>
  4029cc:	mov	w0, wzr
  4029d0:	bl	401a20 <log_get_max_level_realm@plt>
  4029d4:	cmp	w0, #0x4
  4029d8:	b.lt	402a08 <parse_cmdline_item+0x334>  // b.tstop
  4029dc:	adrp	x2, 405000 <_fini+0x1b4>
  4029e0:	adrp	x4, 405000 <_fini+0x1b4>
  4029e4:	adrp	x5, 405000 <_fini+0x1b4>
  4029e8:	add	x2, x2, #0x484
  4029ec:	add	x4, x4, #0x49d
  4029f0:	add	x5, x5, #0x4b8
  4029f4:	mov	w0, #0x4                   	// #4
  4029f8:	mov	w3, #0x21                  	// #33
  4029fc:	mov	w1, wzr
  402a00:	mov	x6, x21
  402a04:	bl	401a30 <log_internal_realm@plt>
  402a08:	ldr	x0, [x19]
  402a0c:	adrp	x1, 404000 <netdev_format+0x114>
  402a10:	add	x1, x1, #0xee8
  402a14:	bl	401b20 <internal_hashmap_get@plt>
  402a18:	str	x0, [sp, #16]
  402a1c:	cbnz	x0, 402a3c <parse_cmdline_item+0x368>
  402a20:	adrp	x1, 404000 <netdev_format+0x114>
  402a24:	add	x1, x1, #0xee8
  402a28:	add	x2, sp, #0x10
  402a2c:	mov	x0, x19
  402a30:	bl	404804 <network_new>
  402a34:	tbnz	w0, #31, 402870 <parse_cmdline_item+0x19c>
  402a38:	ldr	x0, [sp, #16]
  402a3c:	mov	w8, #0x1                   	// #1
  402a40:	mov	w21, wzr
  402a44:	str	w8, [x0, #64]
  402a48:	mov	w0, w21
  402a4c:	ldp	x20, x19, [sp, #64]
  402a50:	ldr	x21, [sp, #48]
  402a54:	ldp	x29, x30, [sp, #32]
  402a58:	add	sp, sp, #0x50
  402a5c:	ret
  402a60:	mov	x0, x19
  402a64:	mov	x1, x20
  402a68:	ldp	x20, x19, [sp, #64]
  402a6c:	ldr	x21, [sp, #48]
  402a70:	ldp	x29, x30, [sp, #32]
  402a74:	add	sp, sp, #0x50
  402a78:	b	4046c0 <parse_cmdline_ip_interface>
  402a7c:	mov	x0, x19
  402a80:	mov	x1, x21
  402a84:	mov	x2, x20
  402a88:	ldp	x20, x19, [sp, #64]
  402a8c:	ldr	x21, [sp, #48]
  402a90:	ldp	x29, x30, [sp, #32]
  402a94:	add	sp, sp, #0x50
  402a98:	b	403094 <parse_cmdline_bond>
  402a9c:	adrp	x1, 405000 <_fini+0x1b4>
  402aa0:	adrp	x2, 405000 <_fini+0x1b4>
  402aa4:	adrp	x4, 405000 <_fini+0x1b4>
  402aa8:	add	x1, x1, #0x1c9
  402aac:	add	x2, x2, #0x1d0
  402ab0:	add	x4, x4, #0x1fa
  402ab4:	mov	w3, #0x3a4                 	// #932
  402ab8:	bl	401a90 <log_assert_failed_realm@plt>
  402abc:	adrp	x1, 405000 <_fini+0x1b4>
  402ac0:	adrp	x2, 405000 <_fini+0x1b4>
  402ac4:	adrp	x4, 405000 <_fini+0x1b4>
  402ac8:	add	x1, x1, #0x235
  402acc:	add	x2, x2, #0x1d0
  402ad0:	add	x4, x4, #0x1fa
  402ad4:	mov	w3, #0x3a5                 	// #933
  402ad8:	mov	w0, wzr
  402adc:	bl	401a90 <log_assert_failed_realm@plt>

0000000000402ae0 <parse_cmdline_rd_route>:
  402ae0:	stp	x29, x30, [sp, #-64]!
  402ae4:	str	x23, [sp, #16]
  402ae8:	stp	x22, x21, [sp, #32]
  402aec:	stp	x20, x19, [sp, #48]
  402af0:	mov	x29, sp
  402af4:	sub	sp, sp, #0x30
  402af8:	stp	xzr, x2, [x29, #-24]
  402afc:	stp	xzr, xzr, [x29, #-40]
  402b00:	stur	xzr, [x29, #-48]
  402b04:	cbz	x2, 402b84 <parse_cmdline_rd_route+0xa4>
  402b08:	ldrb	w8, [x2]
  402b0c:	mov	x20, x2
  402b10:	mov	x19, x0
  402b14:	cmp	w8, #0x5b
  402b18:	b.ne	402bc8 <parse_cmdline_rd_route+0xe8>  // b.any
  402b1c:	mov	w1, #0x5d                  	// #93
  402b20:	mov	x0, x20
  402b24:	bl	4019f0 <strchr@plt>
  402b28:	cbz	x0, 402cb8 <parse_cmdline_rd_route+0x1d8>
  402b2c:	ldrb	w8, [x0, #1]
  402b30:	mov	x21, x0
  402b34:	cmp	w8, #0x3a
  402b38:	b.ne	402cb8 <parse_cmdline_rd_route+0x1d8>  // b.any
  402b3c:	add	x23, x20, #0x1
  402b40:	mvn	x8, x20
  402b44:	add	x1, x21, x8
  402b48:	mov	x0, x23
  402b4c:	bl	401b80 <strnlen@plt>
  402b50:	add	x8, x0, #0x10
  402b54:	and	x8, x8, #0xfffffffffffffff0
  402b58:	mov	x9, sp
  402b5c:	sub	x22, x9, x8
  402b60:	mov	x2, x0
  402b64:	mov	sp, x22
  402b68:	strb	wzr, [x22, x0]
  402b6c:	mov	x0, x22
  402b70:	mov	x1, x23
  402b74:	bl	401b90 <memcpy@plt>
  402b78:	add	x21, x21, #0x2
  402b7c:	mov	w20, #0xa                   	// #10
  402b80:	b	402c18 <parse_cmdline_rd_route+0x138>
  402b84:	mov	w0, wzr
  402b88:	mov	x21, x1
  402b8c:	bl	401a20 <log_get_max_level_realm@plt>
  402b90:	cmp	w0, #0x4
  402b94:	b.lt	402cb8 <parse_cmdline_rd_route+0x1d8>  // b.tstop
  402b98:	adrp	x2, 405000 <_fini+0x1b4>
  402b9c:	adrp	x4, 405000 <_fini+0x1b4>
  402ba0:	adrp	x5, 405000 <_fini+0x1b4>
  402ba4:	add	x2, x2, #0x484
  402ba8:	add	x4, x4, #0x49d
  402bac:	add	x5, x5, #0x4b8
  402bb0:	mov	w0, #0x4                   	// #4
  402bb4:	mov	w3, #0x21                  	// #33
  402bb8:	mov	w1, wzr
  402bbc:	mov	x6, x21
  402bc0:	bl	401a30 <log_internal_realm@plt>
  402bc4:	b	402cb8 <parse_cmdline_rd_route+0x1d8>
  402bc8:	mov	w1, #0x3a                  	// #58
  402bcc:	mov	x0, x20
  402bd0:	bl	4019f0 <strchr@plt>
  402bd4:	cbz	x0, 402cb8 <parse_cmdline_rd_route+0x1d8>
  402bd8:	mov	x21, x0
  402bdc:	sub	x1, x0, x20
  402be0:	mov	x0, x20
  402be4:	bl	401b80 <strnlen@plt>
  402be8:	add	x8, x0, #0x10
  402bec:	and	x8, x8, #0xfffffffffffffff0
  402bf0:	mov	x9, sp
  402bf4:	sub	x22, x9, x8
  402bf8:	mov	x2, x0
  402bfc:	mov	sp, x22
  402c00:	strb	wzr, [x22, x0]
  402c04:	mov	x0, x22
  402c08:	mov	x1, x20
  402c0c:	bl	401b90 <memcpy@plt>
  402c10:	add	x21, x21, #0x1
  402c14:	mov	w20, #0x2                   	// #2
  402c18:	sub	x2, x29, #0x20
  402c1c:	add	x3, x29, #0x18
  402c20:	mov	x0, x22
  402c24:	mov	w1, w20
  402c28:	stur	x21, [x29, #-16]
  402c2c:	bl	401ba0 <in_addr_prefix_from_string@plt>
  402c30:	tbnz	w0, #31, 402cbc <parse_cmdline_rd_route+0x1dc>
  402c34:	mov	w1, #0x3a                  	// #58
  402c38:	mov	x0, x21
  402c3c:	bl	4019f0 <strchr@plt>
  402c40:	cbnz	x0, 402c84 <parse_cmdline_rd_route+0x1a4>
  402c44:	mov	x0, x21
  402c48:	bl	401ab0 <strlen@plt>
  402c4c:	add	x8, x0, #0x2
  402c50:	cmp	x8, #0x400, lsl #12
  402c54:	b.hi	402d70 <parse_cmdline_rd_route+0x290>  // b.pmore
  402c58:	add	x8, x8, #0xf
  402c5c:	mov	x9, sp
  402c60:	and	x8, x8, #0xfffffffffffffff0
  402c64:	sub	x22, x9, x8
  402c68:	mov	sp, x22
  402c6c:	mov	x0, x22
  402c70:	mov	x1, x21
  402c74:	bl	401ac0 <stpcpy@plt>
  402c78:	mov	w8, #0x3a                  	// #58
  402c7c:	strh	w8, [x0]
  402c80:	stur	x22, [x29, #-16]
  402c84:	sub	x1, x29, #0x10
  402c88:	sub	x2, x29, #0x30
  402c8c:	mov	w0, w20
  402c90:	bl	404944 <parse_ip_address_one>
  402c94:	tbnz	w0, #31, 402cbc <parse_cmdline_rd_route+0x1dc>
  402c98:	ldur	x22, [x29, #-16]
  402c9c:	ldrb	w23, [x29, #24]
  402ca0:	sub	x1, x29, #0x30
  402ca4:	mov	w0, w20
  402ca8:	bl	401bb0 <in_addr_is_null@plt>
  402cac:	cbz	w0, 402cd4 <parse_cmdline_rd_route+0x1f4>
  402cb0:	mov	w0, wzr
  402cb4:	b	402cbc <parse_cmdline_rd_route+0x1dc>
  402cb8:	mov	w0, #0xffffffea            	// #-22
  402cbc:	mov	sp, x29
  402cc0:	ldp	x20, x19, [sp, #48]
  402cc4:	ldp	x22, x21, [sp, #32]
  402cc8:	ldr	x23, [sp, #16]
  402ccc:	ldp	x29, x30, [sp], #64
  402cd0:	ret
  402cd4:	ldr	x0, [x19]
  402cd8:	mov	x1, x22
  402cdc:	bl	401b20 <internal_hashmap_get@plt>
  402ce0:	mov	x21, x0
  402ce4:	stur	x0, [x29, #-8]
  402ce8:	cbnz	x0, 402d04 <parse_cmdline_rd_route+0x224>
  402cec:	sub	x2, x29, #0x8
  402cf0:	mov	x0, x19
  402cf4:	mov	x1, x22
  402cf8:	bl	404804 <network_new>
  402cfc:	tbnz	w0, #31, 402cbc <parse_cmdline_rd_route+0x1dc>
  402d00:	ldur	x21, [x29, #-8]
  402d04:	cbz	x21, 402d94 <parse_cmdline_rd_route+0x2b4>
  402d08:	mov	w0, #0x40                  	// #64
  402d0c:	bl	401bc0 <malloc@plt>
  402d10:	cbz	x0, 402d68 <parse_cmdline_rd_route+0x288>
  402d14:	ldp	q1, q0, [x29, #-48]
  402d18:	ldrh	w9, [x29, #28]
  402d1c:	ldrb	w10, [x29, #30]
  402d20:	str	xzr, [x0]
  402d24:	strb	w23, [x0, #40]
  402d28:	str	w20, [x0, #44]
  402d2c:	stur	q0, [x0, #8]
  402d30:	stur	q1, [x0, #24]
  402d34:	strb	w10, [x0, #43]
  402d38:	sturh	w9, [x0, #41]
  402d3c:	str	xzr, [x0, #56]
  402d40:	ldr	x9, [x21, #80]
  402d44:	mov	x8, x0
  402d48:	str	x9, [x0, #48]
  402d4c:	cbz	x9, 402d54 <parse_cmdline_rd_route+0x274>
  402d50:	str	x8, [x9, #56]
  402d54:	mov	w0, wzr
  402d58:	str	xzr, [x8, #56]
  402d5c:	str	x8, [x21, #80]
  402d60:	str	x21, [x8]
  402d64:	b	402cbc <parse_cmdline_rd_route+0x1dc>
  402d68:	mov	w0, #0xfffffff4            	// #-12
  402d6c:	b	402cbc <parse_cmdline_rd_route+0x1dc>
  402d70:	adrp	x1, 405000 <_fini+0x1b4>
  402d74:	adrp	x2, 405000 <_fini+0x1b4>
  402d78:	adrp	x4, 405000 <_fini+0x1b4>
  402d7c:	add	x1, x1, #0x74
  402d80:	add	x2, x2, #0x1d0
  402d84:	add	x4, x4, #0x55a
  402d88:	mov	w3, #0x2f6                 	// #758
  402d8c:	mov	w0, wzr
  402d90:	bl	401a90 <log_assert_failed_realm@plt>
  402d94:	adrp	x1, 405000 <_fini+0x1b4>
  402d98:	adrp	x2, 405000 <_fini+0x1b4>
  402d9c:	adrp	x4, 405000 <_fini+0x1b4>
  402da0:	add	x1, x1, #0xd4
  402da4:	add	x2, x2, #0x1d0
  402da8:	add	x4, x4, #0x623
  402dac:	mov	w3, #0x7a                  	// #122
  402db0:	mov	w0, wzr
  402db4:	bl	401a90 <log_assert_failed_realm@plt>

0000000000402db8 <parse_cmdline_vlan>:
  402db8:	stp	x29, x30, [sp, #-48]!
  402dbc:	stp	x22, x21, [sp, #16]
  402dc0:	stp	x20, x19, [sp, #32]
  402dc4:	mov	x29, sp
  402dc8:	sub	sp, sp, #0x10
  402dcc:	cbz	x2, 402e90 <parse_cmdline_vlan+0xd8>
  402dd0:	mov	x19, x0
  402dd4:	mov	w1, #0x3a                  	// #58
  402dd8:	mov	x0, x2
  402ddc:	mov	x22, x2
  402de0:	bl	4019f0 <strchr@plt>
  402de4:	cbz	x0, 402ed0 <parse_cmdline_vlan+0x118>
  402de8:	mov	x21, x0
  402dec:	sub	x1, x0, x22
  402df0:	mov	x0, x22
  402df4:	bl	401b80 <strnlen@plt>
  402df8:	add	x8, x0, #0x10
  402dfc:	and	x8, x8, #0xfffffffffffffff0
  402e00:	mov	x9, sp
  402e04:	sub	x20, x9, x8
  402e08:	mov	x2, x0
  402e0c:	mov	sp, x20
  402e10:	strb	wzr, [x20, x0]
  402e14:	mov	x0, x20
  402e18:	mov	x1, x22
  402e1c:	bl	401b90 <memcpy@plt>
  402e20:	ldr	x0, [x19, #8]
  402e24:	mov	x1, x20
  402e28:	bl	401b20 <internal_hashmap_get@plt>
  402e2c:	stur	x0, [x29, #-16]
  402e30:	cbnz	x0, 402e50 <parse_cmdline_vlan+0x98>
  402e34:	adrp	x1, 405000 <_fini+0x1b4>
  402e38:	add	x1, x1, #0x25c
  402e3c:	sub	x3, x29, #0x10
  402e40:	mov	x0, x19
  402e44:	mov	x2, x20
  402e48:	bl	404c64 <netdev_new>
  402e4c:	tbnz	w0, #31, 402ed4 <parse_cmdline_vlan+0x11c>
  402e50:	ldr	x0, [x19]
  402e54:	add	x21, x21, #0x1
  402e58:	mov	x1, x21
  402e5c:	bl	401b20 <internal_hashmap_get@plt>
  402e60:	stur	x0, [x29, #-8]
  402e64:	cbnz	x0, 402e80 <parse_cmdline_vlan+0xc8>
  402e68:	sub	x2, x29, #0x8
  402e6c:	mov	x0, x19
  402e70:	mov	x1, x21
  402e74:	bl	404804 <network_new>
  402e78:	tbnz	w0, #31, 402ed4 <parse_cmdline_vlan+0x11c>
  402e7c:	ldur	x0, [x29, #-8]
  402e80:	add	x0, x0, #0x20
  402e84:	mov	x1, x20
  402e88:	bl	401bd0 <free_and_strdup@plt>
  402e8c:	b	402ed4 <parse_cmdline_vlan+0x11c>
  402e90:	mov	w0, wzr
  402e94:	mov	x20, x1
  402e98:	bl	401a20 <log_get_max_level_realm@plt>
  402e9c:	cmp	w0, #0x4
  402ea0:	b.lt	402ed0 <parse_cmdline_vlan+0x118>  // b.tstop
  402ea4:	adrp	x2, 405000 <_fini+0x1b4>
  402ea8:	adrp	x4, 405000 <_fini+0x1b4>
  402eac:	adrp	x5, 405000 <_fini+0x1b4>
  402eb0:	add	x2, x2, #0x484
  402eb4:	add	x4, x4, #0x49d
  402eb8:	add	x5, x5, #0x4b8
  402ebc:	mov	w0, #0x4                   	// #4
  402ec0:	mov	w3, #0x21                  	// #33
  402ec4:	mov	w1, wzr
  402ec8:	mov	x6, x20
  402ecc:	bl	401a30 <log_internal_realm@plt>
  402ed0:	mov	w0, #0xffffffea            	// #-22
  402ed4:	mov	sp, x29
  402ed8:	ldp	x20, x19, [sp, #32]
  402edc:	ldp	x22, x21, [sp, #16]
  402ee0:	ldp	x29, x30, [sp], #48
  402ee4:	ret

0000000000402ee8 <parse_cmdline_bridge>:
  402ee8:	stp	x29, x30, [sp, #-64]!
  402eec:	str	x23, [sp, #16]
  402ef0:	stp	x22, x21, [sp, #32]
  402ef4:	stp	x20, x19, [sp, #48]
  402ef8:	mov	x29, sp
  402efc:	sub	sp, sp, #0x20
  402f00:	cbz	x2, 40302c <parse_cmdline_bridge+0x144>
  402f04:	mov	x19, x0
  402f08:	mov	w1, #0x3a                  	// #58
  402f0c:	mov	x0, x2
  402f10:	mov	x22, x2
  402f14:	bl	4019f0 <strchr@plt>
  402f18:	stur	x0, [x29, #-8]
  402f1c:	cbz	x0, 40306c <parse_cmdline_bridge+0x184>
  402f20:	mov	x21, x0
  402f24:	sub	x1, x0, x22
  402f28:	mov	x0, x22
  402f2c:	bl	401b80 <strnlen@plt>
  402f30:	add	x8, x0, #0x10
  402f34:	and	x8, x8, #0xfffffffffffffff0
  402f38:	mov	x9, sp
  402f3c:	sub	x20, x9, x8
  402f40:	mov	x2, x0
  402f44:	mov	sp, x20
  402f48:	strb	wzr, [x20, x0]
  402f4c:	mov	x0, x20
  402f50:	mov	x1, x22
  402f54:	bl	401b90 <memcpy@plt>
  402f58:	ldr	x0, [x19, #8]
  402f5c:	mov	x1, x20
  402f60:	bl	401b20 <internal_hashmap_get@plt>
  402f64:	stur	x0, [x29, #-16]
  402f68:	cbnz	x0, 402f8c <parse_cmdline_bridge+0xa4>
  402f6c:	adrp	x1, 405000 <_fini+0x1b4>
  402f70:	add	x1, x1, #0x261
  402f74:	sub	x3, x29, #0x10
  402f78:	mov	x0, x19
  402f7c:	mov	x2, x20
  402f80:	bl	404c64 <netdev_new>
  402f84:	tbnz	w0, #31, 40308c <parse_cmdline_bridge+0x1a4>
  402f88:	ldur	x21, [x29, #-8]
  402f8c:	add	x8, x21, #0x1
  402f90:	stur	x8, [x29, #-8]
  402f94:	ldrb	w8, [x21, #1]
  402f98:	cbz	w8, 40306c <parse_cmdline_bridge+0x184>
  402f9c:	adrp	x22, 405000 <_fini+0x1b4>
  402fa0:	add	x22, x22, #0x5dd
  402fa4:	b	402fbc <parse_cmdline_bridge+0xd4>
  402fa8:	mov	w23, wzr
  402fac:	mov	w21, w0
  402fb0:	ldur	x0, [x29, #-24]
  402fb4:	bl	401a00 <free@plt>
  402fb8:	tbz	w23, #0, 403070 <parse_cmdline_bridge+0x188>
  402fbc:	sub	x0, x29, #0x8
  402fc0:	sub	x1, x29, #0x18
  402fc4:	mov	x2, x22
  402fc8:	mov	w3, wzr
  402fcc:	stur	xzr, [x29, #-24]
  402fd0:	bl	401be0 <extract_first_word@plt>
  402fd4:	cmp	w0, #0x1
  402fd8:	b.lt	402fa8 <parse_cmdline_bridge+0xc0>  // b.tstop
  402fdc:	ldur	x23, [x29, #-24]
  402fe0:	ldr	x0, [x19]
  402fe4:	mov	x1, x23
  402fe8:	bl	401b20 <internal_hashmap_get@plt>
  402fec:	str	x0, [x29, #24]
  402ff0:	cbnz	x0, 40300c <parse_cmdline_bridge+0x124>
  402ff4:	add	x2, x29, #0x18
  402ff8:	mov	x0, x19
  402ffc:	mov	x1, x23
  403000:	bl	404804 <network_new>
  403004:	tbnz	w0, #31, 403018 <parse_cmdline_bridge+0x130>
  403008:	ldr	x0, [x29, #24]
  40300c:	add	x0, x0, #0x28
  403010:	mov	x1, x20
  403014:	bl	401bd0 <free_and_strdup@plt>
  403018:	mvn	w8, w0
  40301c:	cmp	w0, #0x0
  403020:	lsr	w23, w8, #31
  403024:	csel	w21, w0, w21, lt  // lt = tstop
  403028:	b	402fb0 <parse_cmdline_bridge+0xc8>
  40302c:	mov	w0, wzr
  403030:	mov	x20, x1
  403034:	bl	401a20 <log_get_max_level_realm@plt>
  403038:	cmp	w0, #0x4
  40303c:	b.lt	40306c <parse_cmdline_bridge+0x184>  // b.tstop
  403040:	adrp	x2, 405000 <_fini+0x1b4>
  403044:	adrp	x4, 405000 <_fini+0x1b4>
  403048:	adrp	x5, 405000 <_fini+0x1b4>
  40304c:	add	x2, x2, #0x484
  403050:	add	x4, x4, #0x49d
  403054:	add	x5, x5, #0x4b8
  403058:	mov	w0, #0x4                   	// #4
  40305c:	mov	w3, #0x21                  	// #33
  403060:	mov	w1, wzr
  403064:	mov	x6, x20
  403068:	bl	401a30 <log_internal_realm@plt>
  40306c:	mov	w21, #0xffffffea            	// #-22
  403070:	mov	w0, w21
  403074:	mov	sp, x29
  403078:	ldp	x20, x19, [sp, #48]
  40307c:	ldp	x22, x21, [sp, #32]
  403080:	ldr	x23, [sp, #16]
  403084:	ldp	x29, x30, [sp], #64
  403088:	ret
  40308c:	mov	w21, w0
  403090:	b	403070 <parse_cmdline_bridge+0x188>

0000000000403094 <parse_cmdline_bond>:
  403094:	stp	x29, x30, [sp, #-64]!
  403098:	stp	x24, x23, [sp, #16]
  40309c:	stp	x22, x21, [sp, #32]
  4030a0:	stp	x20, x19, [sp, #48]
  4030a4:	mov	x29, sp
  4030a8:	sub	sp, sp, #0x20
  4030ac:	cbz	x2, 403228 <parse_cmdline_bond+0x194>
  4030b0:	mov	x19, x0
  4030b4:	mov	w1, #0x3a                  	// #58
  4030b8:	mov	x0, x2
  4030bc:	mov	x22, x2
  4030c0:	bl	4019f0 <strchr@plt>
  4030c4:	cbz	x0, 403268 <parse_cmdline_bond+0x1d4>
  4030c8:	mov	x21, x0
  4030cc:	sub	x1, x0, x22
  4030d0:	mov	x0, x22
  4030d4:	bl	401b80 <strnlen@plt>
  4030d8:	add	x8, x0, #0x10
  4030dc:	and	x8, x8, #0xfffffffffffffff0
  4030e0:	mov	x9, sp
  4030e4:	sub	x20, x9, x8
  4030e8:	mov	x2, x0
  4030ec:	mov	sp, x20
  4030f0:	strb	wzr, [x20, x0]
  4030f4:	mov	x0, x20
  4030f8:	mov	x1, x22
  4030fc:	bl	401b90 <memcpy@plt>
  403100:	ldr	x0, [x19, #8]
  403104:	mov	x1, x20
  403108:	bl	401b20 <internal_hashmap_get@plt>
  40310c:	stur	x0, [x29, #-16]
  403110:	cbnz	x0, 403130 <parse_cmdline_bond+0x9c>
  403114:	adrp	x1, 405000 <_fini+0x1b4>
  403118:	add	x1, x1, #0x268
  40311c:	sub	x3, x29, #0x10
  403120:	mov	x0, x19
  403124:	mov	x2, x20
  403128:	bl	404c64 <netdev_new>
  40312c:	tbnz	w0, #31, 40326c <parse_cmdline_bond+0x1d8>
  403130:	add	x22, x21, #0x1
  403134:	mov	w1, #0x3a                  	// #58
  403138:	mov	x0, x22
  40313c:	bl	4019f0 <strchr@plt>
  403140:	mov	x21, x0
  403144:	cbz	x0, 403180 <parse_cmdline_bond+0xec>
  403148:	sub	x1, x21, x22
  40314c:	mov	x0, x22
  403150:	bl	401b80 <strnlen@plt>
  403154:	add	x8, x0, #0x10
  403158:	and	x8, x8, #0xfffffffffffffff0
  40315c:	mov	x9, sp
  403160:	sub	x23, x9, x8
  403164:	mov	x2, x0
  403168:	mov	sp, x23
  40316c:	strb	wzr, [x23, x0]
  403170:	mov	x0, x23
  403174:	mov	x1, x22
  403178:	bl	401b90 <memcpy@plt>
  40317c:	mov	x22, x23
  403180:	ldrb	w8, [x22]
  403184:	cbz	w8, 403268 <parse_cmdline_bond+0x1d4>
  403188:	stur	x22, [x29, #-24]
  40318c:	adrp	x22, 405000 <_fini+0x1b4>
  403190:	add	x22, x22, #0x5dd
  403194:	b	4031a8 <parse_cmdline_bond+0x114>
  403198:	mov	w23, #0x2                   	// #2
  40319c:	ldur	x0, [x29, #-32]
  4031a0:	bl	401a00 <free@plt>
  4031a4:	cbnz	w23, 403284 <parse_cmdline_bond+0x1f0>
  4031a8:	sub	x0, x29, #0x18
  4031ac:	sub	x1, x29, #0x20
  4031b0:	mov	x2, x22
  4031b4:	mov	w3, wzr
  4031b8:	stur	xzr, [x29, #-32]
  4031bc:	bl	401be0 <extract_first_word@plt>
  4031c0:	cbz	w0, 403198 <parse_cmdline_bond+0x104>
  4031c4:	tbnz	w0, #31, 403210 <parse_cmdline_bond+0x17c>
  4031c8:	ldur	x23, [x29, #-32]
  4031cc:	ldr	x0, [x19]
  4031d0:	mov	x1, x23
  4031d4:	bl	401b20 <internal_hashmap_get@plt>
  4031d8:	stur	x0, [x29, #-8]
  4031dc:	cbnz	x0, 4031f8 <parse_cmdline_bond+0x164>
  4031e0:	sub	x2, x29, #0x8
  4031e4:	mov	x0, x19
  4031e8:	mov	x1, x23
  4031ec:	bl	404804 <network_new>
  4031f0:	tbnz	w0, #31, 40321c <parse_cmdline_bond+0x188>
  4031f4:	ldur	x0, [x29, #-8]
  4031f8:	add	x0, x0, #0x30
  4031fc:	mov	x1, x20
  403200:	bl	401bd0 <free_and_strdup@plt>
  403204:	tbnz	w0, #31, 40321c <parse_cmdline_bond+0x188>
  403208:	mov	w23, wzr
  40320c:	b	40319c <parse_cmdline_bond+0x108>
  403210:	mov	w23, #0x1                   	// #1
  403214:	mov	w24, w0
  403218:	b	40319c <parse_cmdline_bond+0x108>
  40321c:	mov	w24, w0
  403220:	mov	w23, #0x1                   	// #1
  403224:	b	40319c <parse_cmdline_bond+0x108>
  403228:	mov	w0, wzr
  40322c:	mov	x20, x1
  403230:	bl	401a20 <log_get_max_level_realm@plt>
  403234:	cmp	w0, #0x4
  403238:	b.lt	403268 <parse_cmdline_bond+0x1d4>  // b.tstop
  40323c:	adrp	x2, 405000 <_fini+0x1b4>
  403240:	adrp	x4, 405000 <_fini+0x1b4>
  403244:	adrp	x5, 405000 <_fini+0x1b4>
  403248:	add	x2, x2, #0x484
  40324c:	add	x4, x4, #0x49d
  403250:	add	x5, x5, #0x4b8
  403254:	mov	w0, #0x4                   	// #4
  403258:	mov	w3, #0x21                  	// #33
  40325c:	mov	w1, wzr
  403260:	mov	x6, x20
  403264:	bl	401a30 <log_internal_realm@plt>
  403268:	mov	w0, #0xffffffea            	// #-22
  40326c:	mov	sp, x29
  403270:	ldp	x20, x19, [sp, #48]
  403274:	ldp	x22, x21, [sp, #32]
  403278:	ldp	x24, x23, [sp, #16]
  40327c:	ldp	x29, x30, [sp], #64
  403280:	ret
  403284:	cmp	w23, #0x2
  403288:	csel	w0, w24, wzr, ne  // ne = any
  40328c:	b.ne	40326c <parse_cmdline_bond+0x1d8>  // b.any
  403290:	cbz	x21, 40326c <parse_cmdline_bond+0x1d8>
  403294:	add	x0, x21, #0x1
  403298:	mov	w1, #0x3a                  	// #58
  40329c:	bl	4019f0 <strchr@plt>
  4032a0:	cbz	x0, 40326c <parse_cmdline_bond+0x1d8>
  4032a4:	ldur	x8, [x29, #-16]
  4032a8:	add	x1, x0, #0x1
  4032ac:	mov	w0, wzr
  4032b0:	add	x2, x8, #0x10
  4032b4:	bl	401bf0 <parse_mtu@plt>
  4032b8:	b	40326c <parse_cmdline_bond+0x1d8>

00000000004032bc <parse_cmdline_ifname>:
  4032bc:	stp	x29, x30, [sp, #-48]!
  4032c0:	stp	x22, x21, [sp, #16]
  4032c4:	stp	x20, x19, [sp, #32]
  4032c8:	mov	x29, sp
  4032cc:	sub	sp, sp, #0x10
  4032d0:	cbz	x2, 4033b4 <parse_cmdline_ifname+0xf8>
  4032d4:	mov	x19, x0
  4032d8:	mov	w1, #0x3a                  	// #58
  4032dc:	mov	x0, x2
  4032e0:	mov	x20, x2
  4032e4:	bl	4019f0 <strchr@plt>
  4032e8:	cbz	x0, 4033f4 <parse_cmdline_ifname+0x138>
  4032ec:	mov	x22, x0
  4032f0:	sub	x1, x0, x20
  4032f4:	mov	x0, x20
  4032f8:	bl	401b80 <strnlen@plt>
  4032fc:	add	x8, x0, #0x10
  403300:	and	x8, x8, #0xfffffffffffffff0
  403304:	mov	x9, sp
  403308:	sub	x21, x9, x8
  40330c:	mov	x2, x0
  403310:	mov	sp, x21
  403314:	strb	wzr, [x21, x0]
  403318:	mov	x0, x21
  40331c:	mov	x1, x20
  403320:	bl	401b90 <memcpy@plt>
  403324:	add	x0, x22, #0x1
  403328:	sub	x1, x29, #0x8
  40332c:	bl	401c00 <ether_addr_from_string@plt>
  403330:	tbnz	w0, #31, 4033fc <parse_cmdline_ifname+0x140>
  403334:	cbz	x19, 403460 <parse_cmdline_ifname+0x1a4>
  403338:	mov	x0, x21
  40333c:	bl	401c10 <ifname_valid@plt>
  403340:	tbz	w0, #0, 403404 <parse_cmdline_ifname+0x148>
  403344:	mov	x0, x21
  403348:	bl	4019e0 <strdup@plt>
  40334c:	mov	x21, x0
  403350:	cbz	x0, 403414 <parse_cmdline_ifname+0x158>
  403354:	mov	w0, #0x10                  	// #16
  403358:	bl	401bc0 <malloc@plt>
  40335c:	cbz	x0, 403420 <parse_cmdline_ifname+0x164>
  403360:	ldurh	w8, [x29, #-4]
  403364:	ldur	w9, [x29, #-8]
  403368:	add	x19, x19, #0x10
  40336c:	adrp	x1, 41f000 <__FRAME_END__+0x196e8>
  403370:	mov	x22, x0
  403374:	str	x21, [x0]
  403378:	strh	w8, [x0, #12]
  40337c:	str	w9, [x0, #8]
  403380:	add	x1, x1, #0xfe0
  403384:	mov	x0, x19
  403388:	bl	401c20 <internal_hashmap_ensure_allocated@plt>
  40338c:	tbnz	w0, #31, 403434 <parse_cmdline_ifname+0x178>
  403390:	ldr	x0, [x19]
  403394:	mov	x1, x21
  403398:	mov	x2, x22
  40339c:	bl	401c30 <hashmap_put@plt>
  4033a0:	tbnz	w0, #31, 403430 <parse_cmdline_ifname+0x174>
  4033a4:	mov	x21, xzr
  4033a8:	mov	w20, wzr
  4033ac:	mov	x0, xzr
  4033b0:	b	403444 <parse_cmdline_ifname+0x188>
  4033b4:	mov	w0, wzr
  4033b8:	mov	x21, x1
  4033bc:	bl	401a20 <log_get_max_level_realm@plt>
  4033c0:	cmp	w0, #0x4
  4033c4:	b.lt	4033f4 <parse_cmdline_ifname+0x138>  // b.tstop
  4033c8:	adrp	x2, 405000 <_fini+0x1b4>
  4033cc:	adrp	x4, 405000 <_fini+0x1b4>
  4033d0:	adrp	x5, 405000 <_fini+0x1b4>
  4033d4:	add	x2, x2, #0x484
  4033d8:	add	x4, x4, #0x49d
  4033dc:	add	x5, x5, #0x4b8
  4033e0:	mov	w0, #0x4                   	// #4
  4033e4:	mov	w3, #0x21                  	// #33
  4033e8:	mov	w1, wzr
  4033ec:	mov	x6, x21
  4033f0:	bl	401a30 <log_internal_realm@plt>
  4033f4:	mov	w20, #0xffffffea            	// #-22
  4033f8:	b	403448 <parse_cmdline_ifname+0x18c>
  4033fc:	mov	w20, w0
  403400:	b	403448 <parse_cmdline_ifname+0x18c>
  403404:	mov	x21, xzr
  403408:	mov	w20, #0xffffffea            	// #-22
  40340c:	mov	x0, xzr
  403410:	b	403444 <parse_cmdline_ifname+0x188>
  403414:	mov	w20, #0xfffffff4            	// #-12
  403418:	mov	x0, x21
  40341c:	b	403444 <parse_cmdline_ifname+0x188>
  403420:	mov	x0, x21
  403424:	bl	401a00 <free@plt>
  403428:	mov	w20, #0xfffffff4            	// #-12
  40342c:	b	403448 <parse_cmdline_ifname+0x18c>
  403430:	ldr	x21, [x22]
  403434:	mov	w20, w0
  403438:	mov	x0, x21
  40343c:	bl	401a00 <free@plt>
  403440:	mov	x0, x22
  403444:	bl	401a00 <free@plt>
  403448:	mov	w0, w20
  40344c:	mov	sp, x29
  403450:	ldp	x20, x19, [sp, #32]
  403454:	ldp	x22, x21, [sp, #16]
  403458:	ldp	x29, x30, [sp], #48
  40345c:	ret
  403460:	adrp	x1, 405000 <_fini+0x1b4>
  403464:	adrp	x2, 405000 <_fini+0x1b4>
  403468:	adrp	x4, 405000 <_fini+0x1b4>
  40346c:	add	x1, x1, #0x274
  403470:	add	x2, x2, #0x1d0
  403474:	add	x4, x4, #0x5df
  403478:	mov	w3, #0x11c                 	// #284
  40347c:	mov	w0, wzr
  403480:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403484 <context_merge_networks>:
  403484:	sub	sp, sp, #0x70
  403488:	stp	x29, x30, [sp, #48]
  40348c:	stp	x24, x23, [sp, #64]
  403490:	stp	x22, x21, [sp, #80]
  403494:	stp	x20, x19, [sp, #96]
  403498:	add	x29, sp, #0x30
  40349c:	cbz	x0, 403624 <context_merge_networks+0x1a0>
  4034a0:	mov	x20, x0
  4034a4:	ldr	x0, [x0]
  4034a8:	adrp	x1, 404000 <netdev_format+0x114>
  4034ac:	add	x1, x1, #0xee8
  4034b0:	bl	401b20 <internal_hashmap_get@plt>
  4034b4:	cbz	x0, 4035e8 <context_merge_networks+0x164>
  4034b8:	ldr	x21, [x20]
  4034bc:	mov	x19, x0
  4034c0:	mov	x0, x21
  4034c4:	bl	401c40 <internal_hashmap_size@plt>
  4034c8:	cmp	w0, #0x2
  4034cc:	b.cc	4035dc <context_merge_networks+0x158>  // b.lo, b.ul, b.last
  4034d0:	mov	w8, #0xfffffffe            	// #-2
  4034d4:	mov	x1, sp
  4034d8:	add	x2, sp, #0x10
  4034dc:	mov	x0, x21
  4034e0:	str	w8, [sp]
  4034e4:	str	xzr, [sp, #8]
  4034e8:	b	4034f8 <context_merge_networks+0x74>
  4034ec:	ldr	x0, [x20]
  4034f0:	mov	x1, sp
  4034f4:	add	x2, sp, #0x10
  4034f8:	mov	x3, xzr
  4034fc:	bl	401ae0 <internal_hashmap_iterate@plt>
  403500:	tbz	w0, #0, 4035bc <context_merge_networks+0x138>
  403504:	ldr	x8, [sp, #16]
  403508:	cmp	x8, x19
  40350c:	b.eq	4034ec <context_merge_networks+0x68>  // b.none
  403510:	ldr	w9, [x19, #64]
  403514:	add	x0, x8, #0x18
  403518:	mov	w2, wzr
  40351c:	str	w9, [x8, #64]
  403520:	ldr	x1, [x19, #24]
  403524:	bl	401c50 <strv_extend_strv@plt>
  403528:	tbnz	w0, #31, 4035e8 <context_merge_networks+0x164>
  40352c:	ldr	x21, [x19, #80]
  403530:	cbz	x21, 4034ec <context_merge_networks+0x68>
  403534:	ldr	x22, [sp, #16]
  403538:	b	403550 <context_merge_networks+0xcc>
  40353c:	str	xzr, [x0, #56]
  403540:	str	x0, [x22, #80]
  403544:	str	x22, [x0]
  403548:	ldr	x21, [x21, #48]
  40354c:	cbz	x21, 4034ec <context_merge_networks+0x68>
  403550:	cbz	x22, 403600 <context_merge_networks+0x17c>
  403554:	ldr	w23, [x21, #44]
  403558:	ldrb	w24, [x21, #40]
  40355c:	mov	w0, #0x40                  	// #64
  403560:	bl	401bc0 <malloc@plt>
  403564:	cbz	x0, 4035e4 <context_merge_networks+0x160>
  403568:	add	x8, x21, #0x8
  40356c:	ldr	q0, [x8]
  403570:	add	x8, x21, #0x18
  403574:	str	xzr, [x0]
  403578:	ldurh	w9, [x29, #-20]
  40357c:	stur	q0, [x29, #-16]
  403580:	ldur	q0, [x29, #-16]
  403584:	ldurb	w10, [x29, #-18]
  403588:	stur	q0, [x0, #8]
  40358c:	ldr	q0, [x8]
  403590:	strb	w24, [x0, #40]
  403594:	strb	w10, [x0, #43]
  403598:	sturh	w9, [x0, #41]
  40359c:	str	w23, [x0, #44]
  4035a0:	stur	q0, [x0, #24]
  4035a4:	str	xzr, [x0, #56]
  4035a8:	ldr	x8, [x22, #80]
  4035ac:	str	x8, [x0, #48]
  4035b0:	cbz	x8, 40353c <context_merge_networks+0xb8>
  4035b4:	str	x0, [x8, #56]
  4035b8:	b	40353c <context_merge_networks+0xb8>
  4035bc:	ldr	x0, [x20]
  4035c0:	adrp	x1, 404000 <netdev_format+0x114>
  4035c4:	add	x1, x1, #0xee8
  4035c8:	bl	401c60 <internal_hashmap_remove@plt>
  4035cc:	cmp	x0, x19
  4035d0:	b.ne	403644 <context_merge_networks+0x1c0>  // b.any
  4035d4:	mov	x0, x19
  4035d8:	bl	403668 <network_free>
  4035dc:	mov	w0, wzr
  4035e0:	b	4035e8 <context_merge_networks+0x164>
  4035e4:	mov	w0, #0xfffffff4            	// #-12
  4035e8:	ldp	x20, x19, [sp, #96]
  4035ec:	ldp	x22, x21, [sp, #80]
  4035f0:	ldp	x24, x23, [sp, #64]
  4035f4:	ldp	x29, x30, [sp, #48]
  4035f8:	add	sp, sp, #0x70
  4035fc:	ret
  403600:	adrp	x1, 405000 <_fini+0x1b4>
  403604:	adrp	x2, 405000 <_fini+0x1b4>
  403608:	adrp	x4, 405000 <_fini+0x1b4>
  40360c:	add	x1, x1, #0xd4
  403610:	add	x2, x2, #0x1d0
  403614:	add	x4, x4, #0x623
  403618:	mov	w3, #0x7a                  	// #122
  40361c:	mov	w0, wzr
  403620:	bl	401a90 <log_assert_failed_realm@plt>
  403624:	adrp	x1, 405000 <_fini+0x1b4>
  403628:	adrp	x2, 405000 <_fini+0x1b4>
  40362c:	adrp	x4, 405000 <_fini+0x1b4>
  403630:	add	x1, x1, #0x274
  403634:	add	x2, x2, #0x1d0
  403638:	add	x4, x4, #0x27c
  40363c:	mov	w3, #0x3c1                 	// #961
  403640:	bl	401a90 <log_assert_failed_realm@plt>
  403644:	adrp	x1, 405000 <_fini+0x1b4>
  403648:	adrp	x2, 405000 <_fini+0x1b4>
  40364c:	adrp	x4, 405000 <_fini+0x1b4>
  403650:	add	x1, x1, #0x2a2
  403654:	add	x2, x2, #0x1d0
  403658:	add	x4, x4, #0x27c
  40365c:	mov	w3, #0x3e0                 	// #992
  403660:	mov	w0, wzr
  403664:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403668 <network_free>:
  403668:	stp	x29, x30, [sp, #-32]!
  40366c:	str	x19, [sp, #16]
  403670:	mov	x29, sp
  403674:	cbz	x0, 403768 <network_free+0x100>
  403678:	mov	x19, x0
  40367c:	ldr	x0, [x0]
  403680:	bl	401a00 <free@plt>
  403684:	ldr	x0, [x19, #56]
  403688:	bl	401a00 <free@plt>
  40368c:	ldr	x0, [x19, #24]
  403690:	bl	401c70 <strv_free@plt>
  403694:	ldr	x0, [x19, #32]
  403698:	bl	401a00 <free@plt>
  40369c:	ldr	x0, [x19, #40]
  4036a0:	bl	401a00 <free@plt>
  4036a4:	ldr	x0, [x19, #48]
  4036a8:	b	4036b4 <network_free+0x4c>
  4036ac:	add	x9, x10, #0x30
  4036b0:	str	x8, [x9]
  4036b4:	bl	401a00 <free@plt>
  4036b8:	ldr	x0, [x19, #72]
  4036bc:	cbz	x0, 403700 <network_free+0x98>
  4036c0:	ldr	x9, [x0]
  4036c4:	cbz	x9, 4036b4 <network_free+0x4c>
  4036c8:	ldr	x8, [x0, #48]
  4036cc:	cbz	x8, 4036d8 <network_free+0x70>
  4036d0:	ldr	x10, [x0, #56]
  4036d4:	str	x10, [x8, #56]
  4036d8:	ldr	x10, [x0, #56]
  4036dc:	cbnz	x10, 4036ac <network_free+0x44>
  4036e0:	ldr	x10, [x9, #72]!
  4036e4:	cmp	x10, x0
  4036e8:	b.ne	403774 <network_free+0x10c>  // b.any
  4036ec:	str	x8, [x9]
  4036f0:	b	4036b4 <network_free+0x4c>
  4036f4:	add	x9, x10, #0x30
  4036f8:	str	x8, [x9]
  4036fc:	bl	401a00 <free@plt>
  403700:	ldr	x0, [x19, #80]
  403704:	cbz	x0, 403758 <network_free+0xf0>
  403708:	ldr	x9, [x0]
  40370c:	cbz	x9, 4036fc <network_free+0x94>
  403710:	ldr	x8, [x0, #48]
  403714:	cbz	x8, 403720 <network_free+0xb8>
  403718:	ldr	x10, [x0, #56]
  40371c:	str	x10, [x8, #56]
  403720:	ldr	x10, [x0, #56]
  403724:	cbnz	x10, 4036f4 <network_free+0x8c>
  403728:	ldr	x10, [x9, #80]!
  40372c:	cmp	x10, x0
  403730:	b.eq	4036f8 <network_free+0x90>  // b.none
  403734:	adrp	x1, 405000 <_fini+0x1b4>
  403738:	adrp	x2, 405000 <_fini+0x1b4>
  40373c:	adrp	x4, 405000 <_fini+0x1b4>
  403740:	add	x1, x1, #0x6a9
  403744:	add	x2, x2, #0x1d0
  403748:	add	x4, x4, #0x6b9
  40374c:	mov	w3, #0x71                  	// #113
  403750:	mov	w0, wzr
  403754:	bl	401a90 <log_assert_failed_realm@plt>
  403758:	mov	x0, x19
  40375c:	ldr	x19, [sp, #16]
  403760:	ldp	x29, x30, [sp], #32
  403764:	b	401a00 <free@plt>
  403768:	ldr	x19, [sp, #16]
  40376c:	ldp	x29, x30, [sp], #32
  403770:	ret
  403774:	adrp	x1, 405000 <_fini+0x1b4>
  403778:	adrp	x2, 405000 <_fini+0x1b4>
  40377c:	adrp	x4, 405000 <_fini+0x1b4>
  403780:	add	x1, x1, #0x6a9
  403784:	add	x2, x2, #0x1d0
  403788:	add	x4, x4, #0x688
  40378c:	mov	w3, #0x4d                  	// #77
  403790:	mov	w0, wzr
  403794:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403798 <context_clear>:
  403798:	cbz	x0, 403888 <context_clear+0xf0>
  40379c:	stp	x29, x30, [sp, #-32]!
  4037a0:	stp	x20, x19, [sp, #16]
  4037a4:	mov	x29, sp
  4037a8:	mov	x19, x0
  4037ac:	ldr	x0, [x19]
  4037b0:	mov	w1, #0x1                   	// #1
  4037b4:	mov	x2, xzr
  4037b8:	bl	401c80 <internal_hashmap_first_key_and_value@plt>
  4037bc:	cbz	x0, 4037c8 <context_clear+0x30>
  4037c0:	bl	403668 <network_free>
  4037c4:	b	4037ac <context_clear+0x14>
  4037c8:	ldr	x0, [x19]
  4037cc:	mov	x1, xzr
  4037d0:	mov	x2, xzr
  4037d4:	bl	401c90 <internal_hashmap_free@plt>
  4037d8:	ldr	x0, [x19, #8]
  4037dc:	mov	w1, #0x1                   	// #1
  4037e0:	mov	x2, xzr
  4037e4:	bl	401c80 <internal_hashmap_first_key_and_value@plt>
  4037e8:	cbz	x0, 403820 <context_clear+0x88>
  4037ec:	mov	x20, x0
  4037f0:	ldr	x0, [x20]
  4037f4:	bl	401a00 <free@plt>
  4037f8:	ldr	x0, [x20, #8]
  4037fc:	bl	401a00 <free@plt>
  403800:	mov	x0, x20
  403804:	bl	401a00 <free@plt>
  403808:	ldr	x0, [x19, #8]
  40380c:	mov	w1, #0x1                   	// #1
  403810:	mov	x2, xzr
  403814:	bl	401c80 <internal_hashmap_first_key_and_value@plt>
  403818:	mov	x20, x0
  40381c:	cbnz	x0, 4037f0 <context_clear+0x58>
  403820:	ldr	x0, [x19, #8]
  403824:	mov	x1, xzr
  403828:	mov	x2, xzr
  40382c:	bl	401c90 <internal_hashmap_free@plt>
  403830:	ldr	x0, [x19, #16]
  403834:	mov	w1, #0x1                   	// #1
  403838:	mov	x2, xzr
  40383c:	bl	401c80 <internal_hashmap_first_key_and_value@plt>
  403840:	cbz	x0, 403870 <context_clear+0xd8>
  403844:	mov	x20, x0
  403848:	ldr	x0, [x20]
  40384c:	bl	401a00 <free@plt>
  403850:	mov	x0, x20
  403854:	bl	401a00 <free@plt>
  403858:	ldr	x0, [x19, #16]
  40385c:	mov	w1, #0x1                   	// #1
  403860:	mov	x2, xzr
  403864:	bl	401c80 <internal_hashmap_first_key_and_value@plt>
  403868:	mov	x20, x0
  40386c:	cbnz	x0, 403848 <context_clear+0xb0>
  403870:	ldr	x0, [x19, #16]
  403874:	ldp	x20, x19, [sp, #16]
  403878:	mov	x1, xzr
  40387c:	mov	x2, xzr
  403880:	ldp	x29, x30, [sp], #32
  403884:	b	401c90 <internal_hashmap_free@plt>
  403888:	ret

000000000040388c <network_dump>:
  40388c:	sub	sp, sp, #0x70
  403890:	stp	x29, x30, [sp, #48]
  403894:	stp	x24, x23, [sp, #64]
  403898:	stp	x22, x21, [sp, #80]
  40389c:	stp	x20, x19, [sp, #96]
  4038a0:	add	x29, sp, #0x30
  4038a4:	cbz	x0, 403be0 <network_dump+0x354>
  4038a8:	mov	x19, x1
  4038ac:	cbz	x1, 403c00 <network_dump+0x374>
  4038b0:	ldr	x8, [x0]
  4038b4:	adrp	x2, 405000 <_fini+0x1b4>
  4038b8:	mov	x20, x0
  4038bc:	add	x2, x2, #0x30f
  4038c0:	cbz	x8, 4038d0 <network_dump+0x44>
  4038c4:	ldrb	w9, [x8]
  4038c8:	cmp	w9, #0x0
  4038cc:	csel	x2, x2, x8, eq  // eq = none
  4038d0:	adrp	x1, 405000 <_fini+0x1b4>
  4038d4:	add	x1, x1, #0x2fe
  4038d8:	mov	x0, x19
  4038dc:	bl	401ca0 <fprintf@plt>
  4038e0:	adrp	x0, 405000 <_fini+0x1b4>
  4038e4:	add	x0, x0, #0x311
  4038e8:	mov	w1, #0x8                   	// #8
  4038ec:	mov	w2, #0x1                   	// #1
  4038f0:	mov	x3, x19
  4038f4:	bl	401cb0 <fwrite@plt>
  4038f8:	add	x21, x20, #0x8
  4038fc:	add	x1, sp, #0x8
  403900:	mov	x0, x21
  403904:	strh	wzr, [sp, #12]
  403908:	str	wzr, [sp, #8]
  40390c:	bl	401cc0 <ether_addr_compare@plt>
  403910:	cbz	w0, 403934 <network_dump+0xa8>
  403914:	add	x1, sp, #0x8
  403918:	mov	x0, x21
  40391c:	bl	401cd0 <ether_addr_to_string@plt>
  403920:	adrp	x1, 405000 <_fini+0x1b4>
  403924:	mov	x2, x0
  403928:	add	x1, x1, #0x31a
  40392c:	mov	x0, x19
  403930:	bl	401ca0 <fprintf@plt>
  403934:	ldr	w2, [x20, #16]
  403938:	cbz	w2, 40394c <network_dump+0xc0>
  40393c:	adrp	x1, 405000 <_fini+0x1b4>
  403940:	add	x1, x1, #0x329
  403944:	mov	x0, x19
  403948:	bl	401ca0 <fprintf@plt>
  40394c:	adrp	x0, 405000 <_fini+0x1b4>
  403950:	add	x0, x0, #0x336
  403954:	mov	w1, #0xb                   	// #11
  403958:	mov	w2, #0x1                   	// #1
  40395c:	mov	x3, x19
  403960:	bl	401cb0 <fwrite@plt>
  403964:	ldr	w8, [x20, #20]
  403968:	cmp	w8, #0x8
  40396c:	b.hi	40398c <network_dump+0x100>  // b.pmore
  403970:	adrp	x9, 405000 <_fini+0x1b4>
  403974:	add	x9, x9, #0x7f8
  403978:	ldr	x2, [x9, x8, lsl #3]
  40397c:	adrp	x1, 405000 <_fini+0x1b4>
  403980:	add	x1, x1, #0x342
  403984:	mov	x0, x19
  403988:	bl	401ca0 <fprintf@plt>
  40398c:	ldr	x8, [x20, #24]
  403990:	cbz	x8, 4039bc <network_dump+0x130>
  403994:	ldr	x2, [x8]
  403998:	cbz	x2, 4039bc <network_dump+0x130>
  40399c:	adrp	x21, 405000 <_fini+0x1b4>
  4039a0:	add	x22, x8, #0x8
  4039a4:	add	x21, x21, #0x34b
  4039a8:	mov	x0, x19
  4039ac:	mov	x1, x21
  4039b0:	bl	401ca0 <fprintf@plt>
  4039b4:	ldr	x2, [x22], #8
  4039b8:	cbnz	x2, 4039a8 <network_dump+0x11c>
  4039bc:	ldr	x2, [x20, #32]
  4039c0:	cbz	x2, 4039d4 <network_dump+0x148>
  4039c4:	adrp	x1, 405000 <_fini+0x1b4>
  4039c8:	add	x1, x1, #0x353
  4039cc:	mov	x0, x19
  4039d0:	bl	401ca0 <fprintf@plt>
  4039d4:	ldr	x2, [x20, #40]
  4039d8:	cbz	x2, 4039ec <network_dump+0x160>
  4039dc:	adrp	x1, 405000 <_fini+0x1b4>
  4039e0:	add	x1, x1, #0x35c
  4039e4:	mov	x0, x19
  4039e8:	bl	401ca0 <fprintf@plt>
  4039ec:	ldr	x2, [x20, #48]
  4039f0:	cbz	x2, 403a04 <network_dump+0x178>
  4039f4:	adrp	x1, 405000 <_fini+0x1b4>
  4039f8:	add	x1, x1, #0x367
  4039fc:	mov	x0, x19
  403a00:	bl	401ca0 <fprintf@plt>
  403a04:	adrp	x0, 405000 <_fini+0x1b4>
  403a08:	add	x0, x0, #0x370
  403a0c:	mov	w1, #0x8                   	// #8
  403a10:	mov	w2, #0x1                   	// #1
  403a14:	mov	x3, x19
  403a18:	bl	401cb0 <fwrite@plt>
  403a1c:	ldr	x2, [x20, #56]
  403a20:	cbz	x2, 403a3c <network_dump+0x1b0>
  403a24:	ldrb	w8, [x2]
  403a28:	cbz	w8, 403a3c <network_dump+0x1b0>
  403a2c:	adrp	x1, 405000 <_fini+0x1b4>
  403a30:	add	x1, x1, #0x379
  403a34:	mov	x0, x19
  403a38:	bl	401ca0 <fprintf@plt>
  403a3c:	ldr	w8, [x20, #64]
  403a40:	tbnz	w8, #31, 403a6c <network_dump+0x1e0>
  403a44:	adrp	x9, 405000 <_fini+0x1b4>
  403a48:	adrp	x10, 405000 <_fini+0x1b4>
  403a4c:	add	x9, x9, #0x6d7
  403a50:	add	x10, x10, #0x6d4
  403a54:	cmp	w8, #0x0
  403a58:	adrp	x1, 405000 <_fini+0x1b4>
  403a5c:	csel	x2, x10, x9, eq  // eq = none
  403a60:	add	x1, x1, #0x386
  403a64:	mov	x0, x19
  403a68:	bl	401ca0 <fprintf@plt>
  403a6c:	ldr	x24, [x20, #72]
  403a70:	cbz	x24, 403b0c <network_dump+0x280>
  403a74:	adrp	x21, 405000 <_fini+0x1b4>
  403a78:	adrp	x22, 405000 <_fini+0x1b4>
  403a7c:	add	x21, x21, #0x6e5
  403a80:	add	x22, x22, #0x6fc
  403a84:	b	403aa0 <network_dump+0x214>
  403a88:	ldur	x0, [x29, #-16]
  403a8c:	bl	401a00 <free@plt>
  403a90:	ldur	x0, [x29, #-8]
  403a94:	bl	401a00 <free@plt>
  403a98:	ldr	x24, [x24, #48]
  403a9c:	cbz	x24, 403b0c <network_dump+0x280>
  403aa0:	stp	xzr, xzr, [x29, #-16]
  403aa4:	ldr	w0, [x24, #44]
  403aa8:	ldrb	w2, [x24, #40]
  403aac:	add	x1, x24, #0x8
  403ab0:	sub	x3, x29, #0x8
  403ab4:	bl	401ce0 <in_addr_prefix_to_string@plt>
  403ab8:	tbnz	w0, #31, 403a88 <network_dump+0x1fc>
  403abc:	ldr	w0, [x24, #44]
  403ac0:	add	x23, x24, #0x18
  403ac4:	mov	x1, x23
  403ac8:	bl	401bb0 <in_addr_is_null@plt>
  403acc:	cbnz	w0, 403ae4 <network_dump+0x258>
  403ad0:	ldr	w0, [x24, #44]
  403ad4:	sub	x2, x29, #0x10
  403ad8:	mov	x1, x23
  403adc:	bl	401cf0 <in_addr_to_string@plt>
  403ae0:	tbnz	w0, #31, 403a88 <network_dump+0x1fc>
  403ae4:	ldur	x2, [x29, #-8]
  403ae8:	mov	x0, x19
  403aec:	mov	x1, x21
  403af0:	bl	401ca0 <fprintf@plt>
  403af4:	ldur	x2, [x29, #-16]
  403af8:	cbz	x2, 403a88 <network_dump+0x1fc>
  403afc:	mov	x0, x19
  403b00:	mov	x1, x22
  403b04:	bl	401ca0 <fprintf@plt>
  403b08:	b	403a88 <network_dump+0x1fc>
  403b0c:	ldr	x24, [x20, #80]
  403b10:	cbz	x24, 403bc8 <network_dump+0x33c>
  403b14:	adrp	x20, 405000 <_fini+0x1b4>
  403b18:	adrp	x21, 405000 <_fini+0x1b4>
  403b1c:	adrp	x22, 405000 <_fini+0x1b4>
  403b20:	add	x20, x20, #0x705
  403b24:	add	x21, x21, #0x71f
  403b28:	add	x22, x22, #0x70f
  403b2c:	b	403b58 <network_dump+0x2cc>
  403b30:	ldur	x2, [x29, #-16]
  403b34:	mov	x0, x19
  403b38:	mov	x1, x21
  403b3c:	bl	401ca0 <fprintf@plt>
  403b40:	ldur	x0, [x29, #-16]
  403b44:	bl	401a00 <free@plt>
  403b48:	ldur	x0, [x29, #-8]
  403b4c:	bl	401a00 <free@plt>
  403b50:	ldr	x24, [x24, #48]
  403b54:	cbz	x24, 403bc8 <network_dump+0x33c>
  403b58:	stp	xzr, xzr, [x29, #-16]
  403b5c:	ldr	w0, [x24, #44]
  403b60:	add	x23, x24, #0x8
  403b64:	mov	x1, x23
  403b68:	bl	401bb0 <in_addr_is_null@plt>
  403b6c:	cbnz	w0, 403b88 <network_dump+0x2fc>
  403b70:	ldr	w0, [x24, #44]
  403b74:	ldrb	w2, [x24, #40]
  403b78:	sub	x3, x29, #0x8
  403b7c:	mov	x1, x23
  403b80:	bl	401ce0 <in_addr_prefix_to_string@plt>
  403b84:	tbnz	w0, #31, 403b40 <network_dump+0x2b4>
  403b88:	ldr	w0, [x24, #44]
  403b8c:	add	x1, x24, #0x18
  403b90:	sub	x2, x29, #0x10
  403b94:	bl	401cf0 <in_addr_to_string@plt>
  403b98:	tbnz	w0, #31, 403b40 <network_dump+0x2b4>
  403b9c:	mov	w1, #0x9                   	// #9
  403ba0:	mov	w2, #0x1                   	// #1
  403ba4:	mov	x0, x20
  403ba8:	mov	x3, x19
  403bac:	bl	401cb0 <fwrite@plt>
  403bb0:	ldur	x2, [x29, #-8]
  403bb4:	cbz	x2, 403b30 <network_dump+0x2a4>
  403bb8:	mov	x0, x19
  403bbc:	mov	x1, x22
  403bc0:	bl	401ca0 <fprintf@plt>
  403bc4:	b	403b30 <network_dump+0x2a4>
  403bc8:	ldp	x20, x19, [sp, #96]
  403bcc:	ldp	x22, x21, [sp, #80]
  403bd0:	ldp	x24, x23, [sp, #64]
  403bd4:	ldp	x29, x30, [sp, #48]
  403bd8:	add	sp, sp, #0x70
  403bdc:	ret
  403be0:	adrp	x1, 405000 <_fini+0x1b4>
  403be4:	adrp	x2, 405000 <_fini+0x1b4>
  403be8:	adrp	x4, 405000 <_fini+0x1b4>
  403bec:	add	x1, x1, #0xd4
  403bf0:	add	x2, x2, #0x1d0
  403bf4:	add	x4, x4, #0x2d7
  403bf8:	mov	w3, #0x424                 	// #1060
  403bfc:	bl	401a90 <log_assert_failed_realm@plt>
  403c00:	adrp	x1, 405000 <_fini+0x1b4>
  403c04:	adrp	x2, 405000 <_fini+0x1b4>
  403c08:	adrp	x4, 405000 <_fini+0x1b4>
  403c0c:	add	x1, x1, #0x2fc
  403c10:	add	x2, x2, #0x1d0
  403c14:	add	x4, x4, #0x2d7
  403c18:	mov	w3, #0x425                 	// #1061
  403c1c:	mov	w0, wzr
  403c20:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403c24 <netdev_dump>:
  403c24:	stp	x29, x30, [sp, #-32]!
  403c28:	stp	x20, x19, [sp, #16]
  403c2c:	mov	x29, sp
  403c30:	cbz	x0, 403c80 <netdev_dump+0x5c>
  403c34:	mov	x19, x1
  403c38:	cbz	x1, 403ca0 <netdev_dump+0x7c>
  403c3c:	ldp	x3, x2, [x0]
  403c40:	adrp	x1, 405000 <_fini+0x1b4>
  403c44:	mov	x20, x0
  403c48:	add	x1, x1, #0x3b4
  403c4c:	mov	x0, x19
  403c50:	bl	401ca0 <fprintf@plt>
  403c54:	ldr	w2, [x20, #16]
  403c58:	cbz	w2, 403c74 <netdev_dump+0x50>
  403c5c:	mov	x0, x19
  403c60:	ldp	x20, x19, [sp, #16]
  403c64:	adrp	x1, 405000 <_fini+0x1b4>
  403c68:	add	x1, x1, #0x329
  403c6c:	ldp	x29, x30, [sp], #32
  403c70:	b	401ca0 <fprintf@plt>
  403c74:	ldp	x20, x19, [sp, #16]
  403c78:	ldp	x29, x30, [sp], #32
  403c7c:	ret
  403c80:	adrp	x1, 405000 <_fini+0x1b4>
  403c84:	adrp	x2, 405000 <_fini+0x1b4>
  403c88:	adrp	x4, 405000 <_fini+0x1b4>
  403c8c:	add	x1, x1, #0x143
  403c90:	add	x2, x2, #0x1d0
  403c94:	add	x4, x4, #0x391
  403c98:	mov	w3, #0x456                 	// #1110
  403c9c:	bl	401a90 <log_assert_failed_realm@plt>
  403ca0:	adrp	x1, 405000 <_fini+0x1b4>
  403ca4:	adrp	x2, 405000 <_fini+0x1b4>
  403ca8:	adrp	x4, 405000 <_fini+0x1b4>
  403cac:	add	x1, x1, #0x2fc
  403cb0:	add	x2, x2, #0x1d0
  403cb4:	add	x4, x4, #0x391
  403cb8:	mov	w3, #0x457                 	// #1111
  403cbc:	mov	w0, wzr
  403cc0:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403cc4 <link_dump>:
  403cc4:	sub	sp, sp, #0x50
  403cc8:	stp	x29, x30, [sp, #32]
  403ccc:	str	x21, [sp, #48]
  403cd0:	stp	x20, x19, [sp, #64]
  403cd4:	add	x29, sp, #0x20
  403cd8:	cbz	x0, 403d64 <link_dump+0xa0>
  403cdc:	mov	x19, x1
  403ce0:	cbz	x1, 403d84 <link_dump+0xc0>
  403ce4:	mov	x20, x0
  403ce8:	adrp	x0, 405000 <_fini+0x1b4>
  403cec:	add	x0, x0, #0x3ed
  403cf0:	mov	w1, #0x8                   	// #8
  403cf4:	mov	w2, #0x1                   	// #1
  403cf8:	mov	x3, x19
  403cfc:	bl	401cb0 <fwrite@plt>
  403d00:	add	x21, x20, #0x8
  403d04:	add	x1, sp, #0x8
  403d08:	mov	x0, x21
  403d0c:	strh	wzr, [sp, #12]
  403d10:	str	wzr, [sp, #8]
  403d14:	bl	401cc0 <ether_addr_compare@plt>
  403d18:	cbz	w0, 403d3c <link_dump+0x78>
  403d1c:	add	x1, sp, #0x8
  403d20:	mov	x0, x21
  403d24:	bl	401cd0 <ether_addr_to_string@plt>
  403d28:	adrp	x1, 405000 <_fini+0x1b4>
  403d2c:	mov	x2, x0
  403d30:	add	x1, x1, #0x31a
  403d34:	mov	x0, x19
  403d38:	bl	401ca0 <fprintf@plt>
  403d3c:	ldr	x2, [x20]
  403d40:	adrp	x1, 405000 <_fini+0x1b4>
  403d44:	add	x1, x1, #0x3f6
  403d48:	mov	x0, x19
  403d4c:	bl	401ca0 <fprintf@plt>
  403d50:	ldp	x20, x19, [sp, #64]
  403d54:	ldr	x21, [sp, #48]
  403d58:	ldp	x29, x30, [sp, #32]
  403d5c:	add	sp, sp, #0x50
  403d60:	ret
  403d64:	adrp	x1, 405000 <_fini+0x1b4>
  403d68:	adrp	x2, 405000 <_fini+0x1b4>
  403d6c:	adrp	x4, 405000 <_fini+0x1b4>
  403d70:	add	x1, x1, #0x18b
  403d74:	add	x2, x2, #0x1d0
  403d78:	add	x4, x4, #0x3ce
  403d7c:	mov	w3, #0x467                 	// #1127
  403d80:	bl	401a90 <log_assert_failed_realm@plt>
  403d84:	adrp	x1, 405000 <_fini+0x1b4>
  403d88:	adrp	x2, 405000 <_fini+0x1b4>
  403d8c:	adrp	x4, 405000 <_fini+0x1b4>
  403d90:	add	x1, x1, #0x2fc
  403d94:	add	x2, x2, #0x1d0
  403d98:	add	x4, x4, #0x3ce
  403d9c:	mov	w3, #0x468                 	// #1128
  403da0:	mov	w0, wzr
  403da4:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403da8 <network_format>:
  403da8:	sub	sp, sp, #0x40
  403dac:	stp	x29, x30, [sp, #16]
  403db0:	add	x29, sp, #0x10
  403db4:	str	x21, [sp, #32]
  403db8:	stp	x20, x19, [sp, #48]
  403dbc:	str	xzr, [x29, #24]
  403dc0:	str	xzr, [sp, #8]
  403dc4:	cbz	x0, 403e60 <network_format+0xb8>
  403dc8:	mov	x19, x1
  403dcc:	cbz	x1, 403e80 <network_format+0xd8>
  403dd0:	mov	x20, x0
  403dd4:	add	x0, x29, #0x18
  403dd8:	add	x1, sp, #0x8
  403ddc:	bl	401d00 <open_memstream_unlocked@plt>
  403de0:	cbz	x0, 403e38 <network_format+0x90>
  403de4:	mov	x21, x0
  403de8:	mov	x0, x20
  403dec:	mov	x1, x21
  403df0:	bl	40388c <network_dump>
  403df4:	mov	w0, wzr
  403df8:	mov	x1, x21
  403dfc:	bl	401d10 <fputc@plt>
  403e00:	mov	x0, x21
  403e04:	bl	401d20 <fflush_and_check@plt>
  403e08:	mov	w20, w0
  403e0c:	mov	x0, x21
  403e10:	bl	401af0 <safe_fclose@plt>
  403e14:	tbnz	w20, #31, 403e40 <network_format+0x98>
  403e18:	ldr	x8, [x29, #24]
  403e1c:	cbz	x8, 403ea4 <network_format+0xfc>
  403e20:	str	xzr, [x29, #24]
  403e24:	str	x8, [x19]
  403e28:	ldr	x8, [sp, #8]
  403e2c:	cbz	x8, 403ec8 <network_format+0x120>
  403e30:	sub	w20, w8, #0x1
  403e34:	b	403e40 <network_format+0x98>
  403e38:	bl	401af0 <safe_fclose@plt>
  403e3c:	mov	w20, #0xfffffff4            	// #-12
  403e40:	ldr	x0, [x29, #24]
  403e44:	bl	401a00 <free@plt>
  403e48:	mov	w0, w20
  403e4c:	ldp	x20, x19, [sp, #48]
  403e50:	ldr	x21, [sp, #32]
  403e54:	ldp	x29, x30, [sp, #16]
  403e58:	add	sp, sp, #0x40
  403e5c:	ret
  403e60:	adrp	x1, 405000 <_fini+0x1b4>
  403e64:	adrp	x2, 405000 <_fini+0x1b4>
  403e68:	adrp	x4, 405000 <_fini+0x1b4>
  403e6c:	add	x1, x1, #0xd4
  403e70:	add	x2, x2, #0x1d0
  403e74:	add	x4, x4, #0x407
  403e78:	mov	w3, #0x47a                 	// #1146
  403e7c:	bl	401a90 <log_assert_failed_realm@plt>
  403e80:	adrp	x1, 405000 <_fini+0x1b4>
  403e84:	adrp	x2, 405000 <_fini+0x1b4>
  403e88:	adrp	x4, 405000 <_fini+0x1b4>
  403e8c:	add	x1, x1, #0x42e
  403e90:	add	x2, x2, #0x1d0
  403e94:	add	x4, x4, #0x407
  403e98:	mov	w3, #0x47b                 	// #1147
  403e9c:	mov	w0, wzr
  403ea0:	bl	401a90 <log_assert_failed_realm@plt>
  403ea4:	adrp	x1, 405000 <_fini+0x1b4>
  403ea8:	adrp	x2, 405000 <_fini+0x1b4>
  403eac:	adrp	x4, 405000 <_fini+0x1b4>
  403eb0:	add	x1, x1, #0x432
  403eb4:	add	x2, x2, #0x1d0
  403eb8:	add	x4, x4, #0x407
  403ebc:	mov	w3, #0x48e                 	// #1166
  403ec0:	mov	w0, wzr
  403ec4:	bl	401a90 <log_assert_failed_realm@plt>
  403ec8:	adrp	x1, 405000 <_fini+0x1b4>
  403ecc:	adrp	x2, 405000 <_fini+0x1b4>
  403ed0:	adrp	x4, 405000 <_fini+0x1b4>
  403ed4:	add	x1, x1, #0x434
  403ed8:	add	x2, x2, #0x1d0
  403edc:	add	x4, x4, #0x407
  403ee0:	mov	w3, #0x490                 	// #1168
  403ee4:	mov	w0, wzr
  403ee8:	bl	401a90 <log_assert_failed_realm@plt>

0000000000403eec <netdev_format>:
  403eec:	sub	sp, sp, #0x40
  403ef0:	stp	x29, x30, [sp, #16]
  403ef4:	add	x29, sp, #0x10
  403ef8:	str	x21, [sp, #32]
  403efc:	stp	x20, x19, [sp, #48]
  403f00:	str	xzr, [x29, #24]
  403f04:	str	xzr, [sp, #8]
  403f08:	cbz	x0, 403fc0 <netdev_format+0xd4>
  403f0c:	mov	x19, x1
  403f10:	cbz	x1, 403fe0 <netdev_format+0xf4>
  403f14:	mov	x21, x0
  403f18:	add	x0, x29, #0x18
  403f1c:	add	x1, sp, #0x8
  403f20:	bl	401d00 <open_memstream_unlocked@plt>
  403f24:	cbz	x0, 403f98 <netdev_format+0xac>
  403f28:	ldp	x3, x2, [x21]
  403f2c:	adrp	x1, 405000 <_fini+0x1b4>
  403f30:	add	x1, x1, #0x3b4
  403f34:	mov	x20, x0
  403f38:	bl	401ca0 <fprintf@plt>
  403f3c:	ldr	w2, [x21, #16]
  403f40:	cbz	w2, 403f54 <netdev_format+0x68>
  403f44:	adrp	x1, 405000 <_fini+0x1b4>
  403f48:	add	x1, x1, #0x329
  403f4c:	mov	x0, x20
  403f50:	bl	401ca0 <fprintf@plt>
  403f54:	mov	w0, wzr
  403f58:	mov	x1, x20
  403f5c:	bl	401d10 <fputc@plt>
  403f60:	mov	x0, x20
  403f64:	bl	401d20 <fflush_and_check@plt>
  403f68:	mov	w21, w0
  403f6c:	mov	x0, x20
  403f70:	bl	401af0 <safe_fclose@plt>
  403f74:	tbnz	w21, #31, 403fa0 <netdev_format+0xb4>
  403f78:	ldr	x8, [x29, #24]
  403f7c:	cbz	x8, 404004 <netdev_format+0x118>
  403f80:	str	xzr, [x29, #24]
  403f84:	str	x8, [x19]
  403f88:	ldr	x8, [sp, #8]
  403f8c:	cbz	x8, 404028 <netdev_format+0x13c>
  403f90:	sub	w21, w8, #0x1
  403f94:	b	403fa0 <netdev_format+0xb4>
  403f98:	bl	401af0 <safe_fclose@plt>
  403f9c:	mov	w21, #0xfffffff4            	// #-12
  403fa0:	ldr	x0, [x29, #24]
  403fa4:	bl	401a00 <free@plt>
  403fa8:	mov	w0, w21
  403fac:	ldp	x20, x19, [sp, #48]
  403fb0:	ldr	x21, [sp, #32]
  403fb4:	ldp	x29, x30, [sp, #16]
  403fb8:	add	sp, sp, #0x40
  403fbc:	ret
  403fc0:	adrp	x1, 405000 <_fini+0x1b4>
  403fc4:	adrp	x2, 405000 <_fini+0x1b4>
  403fc8:	adrp	x4, 405000 <_fini+0x1b4>
  403fcc:	add	x1, x1, #0x143
  403fd0:	add	x2, x2, #0x1d0
  403fd4:	add	x4, x4, #0x43b
  403fd8:	mov	w3, #0x499                 	// #1177
  403fdc:	bl	401a90 <log_assert_failed_realm@plt>
  403fe0:	adrp	x1, 405000 <_fini+0x1b4>
  403fe4:	adrp	x2, 405000 <_fini+0x1b4>
  403fe8:	adrp	x4, 405000 <_fini+0x1b4>
  403fec:	add	x1, x1, #0x42e
  403ff0:	add	x2, x2, #0x1d0
  403ff4:	add	x4, x4, #0x43b
  403ff8:	mov	w3, #0x49a                 	// #1178
  403ffc:	mov	w0, wzr
  404000:	bl	401a90 <log_assert_failed_realm@plt>
  404004:	adrp	x1, 405000 <_fini+0x1b4>
  404008:	adrp	x2, 405000 <_fini+0x1b4>
  40400c:	adrp	x4, 405000 <_fini+0x1b4>
  404010:	add	x1, x1, #0x432
  404014:	add	x2, x2, #0x1d0
  404018:	add	x4, x4, #0x43b
  40401c:	mov	w3, #0x4ad                 	// #1197
  404020:	mov	w0, wzr
  404024:	bl	401a90 <log_assert_failed_realm@plt>
  404028:	adrp	x1, 405000 <_fini+0x1b4>
  40402c:	adrp	x2, 405000 <_fini+0x1b4>
  404030:	adrp	x4, 405000 <_fini+0x1b4>
  404034:	add	x1, x1, #0x434
  404038:	add	x2, x2, #0x1d0
  40403c:	add	x4, x4, #0x43b
  404040:	mov	w3, #0x4af                 	// #1199
  404044:	mov	w0, wzr
  404048:	bl	401a90 <log_assert_failed_realm@plt>

000000000040404c <link_format>:
  40404c:	sub	sp, sp, #0x60
  404050:	stp	x29, x30, [sp, #48]
  404054:	stp	x22, x21, [sp, #64]
  404058:	stp	x20, x19, [sp, #80]
  40405c:	add	x29, sp, #0x30
  404060:	stp	xzr, xzr, [sp, #8]
  404064:	cbz	x0, 40415c <link_format+0x110>
  404068:	mov	x19, x1
  40406c:	cbz	x1, 40417c <link_format+0x130>
  404070:	mov	x21, x0
  404074:	add	x0, sp, #0x10
  404078:	add	x1, sp, #0x8
  40407c:	bl	401d00 <open_memstream_unlocked@plt>
  404080:	cbz	x0, 404134 <link_format+0xe8>
  404084:	mov	x20, x0
  404088:	adrp	x0, 405000 <_fini+0x1b4>
  40408c:	add	x0, x0, #0x3ed
  404090:	mov	w1, #0x8                   	// #8
  404094:	mov	w2, #0x1                   	// #1
  404098:	mov	x3, x20
  40409c:	bl	401cb0 <fwrite@plt>
  4040a0:	add	x22, x21, #0x8
  4040a4:	add	x1, sp, #0x18
  4040a8:	mov	x0, x22
  4040ac:	strh	wzr, [sp, #28]
  4040b0:	str	wzr, [sp, #24]
  4040b4:	bl	401cc0 <ether_addr_compare@plt>
  4040b8:	cbz	w0, 4040dc <link_format+0x90>
  4040bc:	add	x1, sp, #0x18
  4040c0:	mov	x0, x22
  4040c4:	bl	401cd0 <ether_addr_to_string@plt>
  4040c8:	adrp	x1, 405000 <_fini+0x1b4>
  4040cc:	mov	x2, x0
  4040d0:	add	x1, x1, #0x31a
  4040d4:	mov	x0, x20
  4040d8:	bl	401ca0 <fprintf@plt>
  4040dc:	ldr	x2, [x21]
  4040e0:	adrp	x1, 405000 <_fini+0x1b4>
  4040e4:	add	x1, x1, #0x3f6
  4040e8:	mov	x0, x20
  4040ec:	bl	401ca0 <fprintf@plt>
  4040f0:	mov	w0, wzr
  4040f4:	mov	x1, x20
  4040f8:	bl	401d10 <fputc@plt>
  4040fc:	mov	x0, x20
  404100:	bl	401d20 <fflush_and_check@plt>
  404104:	mov	w21, w0
  404108:	mov	x0, x20
  40410c:	bl	401af0 <safe_fclose@plt>
  404110:	tbnz	w21, #31, 40413c <link_format+0xf0>
  404114:	ldr	x8, [sp, #16]
  404118:	cbz	x8, 4041a0 <link_format+0x154>
  40411c:	str	xzr, [sp, #16]
  404120:	str	x8, [x19]
  404124:	ldr	x8, [sp, #8]
  404128:	cbz	x8, 4041c4 <link_format+0x178>
  40412c:	sub	w21, w8, #0x1
  404130:	b	40413c <link_format+0xf0>
  404134:	bl	401af0 <safe_fclose@plt>
  404138:	mov	w21, #0xfffffff4            	// #-12
  40413c:	ldr	x0, [sp, #16]
  404140:	bl	401a00 <free@plt>
  404144:	mov	w0, w21
  404148:	ldp	x20, x19, [sp, #80]
  40414c:	ldp	x22, x21, [sp, #64]
  404150:	ldp	x29, x30, [sp, #48]
  404154:	add	sp, sp, #0x60
  404158:	ret
  40415c:	adrp	x1, 405000 <_fini+0x1b4>
  404160:	adrp	x2, 405000 <_fini+0x1b4>
  404164:	adrp	x4, 405000 <_fini+0x1b4>
  404168:	add	x1, x1, #0x18b
  40416c:	add	x2, x2, #0x1d0
  404170:	add	x4, x4, #0x460
  404174:	mov	w3, #0x4b8                 	// #1208
  404178:	bl	401a90 <log_assert_failed_realm@plt>
  40417c:	adrp	x1, 405000 <_fini+0x1b4>
  404180:	adrp	x2, 405000 <_fini+0x1b4>
  404184:	adrp	x4, 405000 <_fini+0x1b4>
  404188:	add	x1, x1, #0x42e
  40418c:	add	x2, x2, #0x1d0
  404190:	add	x4, x4, #0x460
  404194:	mov	w3, #0x4b9                 	// #1209
  404198:	mov	w0, wzr
  40419c:	bl	401a90 <log_assert_failed_realm@plt>
  4041a0:	adrp	x1, 405000 <_fini+0x1b4>
  4041a4:	adrp	x2, 405000 <_fini+0x1b4>
  4041a8:	adrp	x4, 405000 <_fini+0x1b4>
  4041ac:	add	x1, x1, #0x432
  4041b0:	add	x2, x2, #0x1d0
  4041b4:	add	x4, x4, #0x460
  4041b8:	mov	w3, #0x4cc                 	// #1228
  4041bc:	mov	w0, wzr
  4041c0:	bl	401a90 <log_assert_failed_realm@plt>
  4041c4:	adrp	x1, 405000 <_fini+0x1b4>
  4041c8:	adrp	x2, 405000 <_fini+0x1b4>
  4041cc:	adrp	x4, 405000 <_fini+0x1b4>
  4041d0:	add	x1, x1, #0x434
  4041d4:	add	x2, x2, #0x1d0
  4041d8:	add	x4, x4, #0x460
  4041dc:	mov	w3, #0x4ce                 	// #1230
  4041e0:	mov	w0, wzr
  4041e4:	bl	401a90 <log_assert_failed_realm@plt>

00000000004041e8 <parse_cmdline_ip_address>:
  4041e8:	stp	x29, x30, [sp, #-80]!
  4041ec:	str	x25, [sp, #16]
  4041f0:	stp	x24, x23, [sp, #32]
  4041f4:	stp	x22, x21, [sp, #48]
  4041f8:	stp	x20, x19, [sp, #64]
  4041fc:	mov	x29, sp
  404200:	sub	sp, sp, #0x60
  404204:	mov	w21, w1
  404208:	mov	x19, x0
  40420c:	stp	xzr, x2, [x29, #-40]
  404210:	sub	x1, x29, #0x20
  404214:	sub	x2, x29, #0x30
  404218:	mov	w0, w21
  40421c:	stp	xzr, xzr, [x29, #-56]
  404220:	stp	xzr, xzr, [x29, #-72]
  404224:	stur	xzr, [x29, #-80]
  404228:	bl	404944 <parse_ip_address_one>
  40422c:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  404230:	sub	x1, x29, #0x20
  404234:	sub	x2, x29, #0x40
  404238:	mov	w0, w21
  40423c:	bl	404944 <parse_ip_address_one>
  404240:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  404244:	sub	x1, x29, #0x20
  404248:	sub	x2, x29, #0x50
  40424c:	mov	w0, w21
  404250:	bl	404944 <parse_ip_address_one>
  404254:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  404258:	sub	x1, x29, #0x20
  40425c:	sub	x2, x29, #0x54
  404260:	mov	w0, w21
  404264:	bl	404a88 <parse_netmask_or_prefixlen>
  404268:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  40426c:	ldur	x22, [x29, #-32]
  404270:	mov	w1, #0x3a                  	// #58
  404274:	mov	x0, x22
  404278:	bl	4019f0 <strchr@plt>
  40427c:	cbz	x0, 404404 <parse_cmdline_ip_address+0x21c>
  404280:	mov	x20, x0
  404284:	sub	x1, x0, x22
  404288:	mov	x0, x22
  40428c:	bl	401b80 <strnlen@plt>
  404290:	add	x8, x0, #0x10
  404294:	and	x8, x8, #0xfffffffffffffff0
  404298:	mov	x9, sp
  40429c:	sub	x23, x9, x8
  4042a0:	mov	x2, x0
  4042a4:	mov	sp, x23
  4042a8:	strb	wzr, [x23, x0]
  4042ac:	mov	x0, x23
  4042b0:	mov	x1, x22
  4042b4:	bl	401b90 <memcpy@plt>
  4042b8:	mov	x0, x23
  4042bc:	mov	w1, wzr
  4042c0:	bl	401d30 <hostname_is_valid@plt>
  4042c4:	tbz	w0, #0, 404404 <parse_cmdline_ip_address+0x21c>
  4042c8:	add	x22, x20, #0x1
  4042cc:	mov	w1, #0x3a                  	// #58
  4042d0:	mov	x0, x22
  4042d4:	stur	x22, [x29, #-32]
  4042d8:	bl	4019f0 <strchr@plt>
  4042dc:	cbz	x0, 404404 <parse_cmdline_ip_address+0x21c>
  4042e0:	mov	x24, x0
  4042e4:	sub	x1, x0, x22
  4042e8:	mov	x0, x22
  4042ec:	bl	401b80 <strnlen@plt>
  4042f0:	add	x8, x0, #0x10
  4042f4:	and	x8, x8, #0xfffffffffffffff0
  4042f8:	mov	x9, sp
  4042fc:	sub	x20, x9, x8
  404300:	mov	x2, x0
  404304:	mov	sp, x20
  404308:	strb	wzr, [x20, x0]
  40430c:	mov	x0, x20
  404310:	mov	x1, x22
  404314:	bl	401b90 <memcpy@plt>
  404318:	add	x24, x24, #0x1
  40431c:	mov	w1, #0x3a                  	// #58
  404320:	mov	x0, x24
  404324:	stur	x24, [x29, #-32]
  404328:	bl	4019f0 <strchr@plt>
  40432c:	mov	x22, x0
  404330:	cbz	x0, 40436c <parse_cmdline_ip_address+0x184>
  404334:	sub	x1, x22, x24
  404338:	mov	x0, x24
  40433c:	bl	401b80 <strnlen@plt>
  404340:	add	x8, x0, #0x10
  404344:	and	x8, x8, #0xfffffffffffffff0
  404348:	mov	x9, sp
  40434c:	sub	x25, x9, x8
  404350:	mov	x2, x0
  404354:	mov	sp, x25
  404358:	strb	wzr, [x25, x0]
  40435c:	mov	x0, x25
  404360:	mov	x1, x24
  404364:	bl	401b90 <memcpy@plt>
  404368:	mov	x24, x25
  40436c:	adrp	x0, 405000 <_fini+0x1b4>
  404370:	add	x0, x0, #0x7b0
  404374:	mov	w1, #0x9                   	// #9
  404378:	mov	x2, x24
  40437c:	bl	401b70 <string_table_lookup@plt>
  404380:	mov	x24, x0
  404384:	tbnz	w24, #31, 404404 <parse_cmdline_ip_address+0x21c>
  404388:	ldr	x0, [x19]
  40438c:	mov	x1, x20
  404390:	bl	401b20 <internal_hashmap_get@plt>
  404394:	stur	x0, [x29, #-16]
  404398:	cbnz	x0, 4043b4 <parse_cmdline_ip_address+0x1cc>
  40439c:	sub	x2, x29, #0x10
  4043a0:	mov	x0, x19
  4043a4:	mov	x1, x20
  4043a8:	bl	404804 <network_new>
  4043ac:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  4043b0:	ldur	x0, [x29, #-16]
  4043b4:	str	w24, [x0, #20]
  4043b8:	ldr	x0, [x19]
  4043bc:	mov	x1, x20
  4043c0:	bl	401b20 <internal_hashmap_get@plt>
  4043c4:	cbz	x0, 404490 <parse_cmdline_ip_address+0x2a8>
  4043c8:	add	x0, x0, #0x38
  4043cc:	mov	x1, x23
  4043d0:	bl	401bd0 <free_and_strdup@plt>
  4043d4:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  4043d8:	ldurb	w24, [x29, #-84]
  4043dc:	sub	x1, x29, #0x30
  4043e0:	mov	w0, w21
  4043e4:	bl	401bb0 <in_addr_is_null@plt>
  4043e8:	cbz	w0, 404424 <parse_cmdline_ip_address+0x23c>
  4043ec:	sub	x1, x29, #0x50
  4043f0:	mov	w0, w21
  4043f4:	bl	401bb0 <in_addr_is_null@plt>
  4043f8:	cbz	w0, 404498 <parse_cmdline_ip_address+0x2b0>
  4043fc:	mov	w8, wzr
  404400:	b	40452c <parse_cmdline_ip_address+0x344>
  404404:	mov	w0, #0xffffffea            	// #-22
  404408:	mov	sp, x29
  40440c:	ldp	x20, x19, [sp, #64]
  404410:	ldp	x22, x21, [sp, #48]
  404414:	ldp	x24, x23, [sp, #32]
  404418:	ldr	x25, [sp, #16]
  40441c:	ldp	x29, x30, [sp], #80
  404420:	ret
  404424:	ldr	x0, [x19]
  404428:	mov	x1, x20
  40442c:	bl	401b20 <internal_hashmap_get@plt>
  404430:	cbz	x0, 404490 <parse_cmdline_ip_address+0x2a8>
  404434:	mov	x23, x0
  404438:	mov	w0, #0x40                  	// #64
  40443c:	bl	401bc0 <malloc@plt>
  404440:	cbz	x0, 40463c <parse_cmdline_ip_address+0x454>
  404444:	ldp	q1, q0, [x29, #-64]
  404448:	ldurh	w8, [x29, #-16]
  40444c:	ldurb	w9, [x29, #-14]
  404450:	str	xzr, [x0]
  404454:	strb	w24, [x0, #40]
  404458:	str	w21, [x0, #44]
  40445c:	stur	q0, [x0, #8]
  404460:	stur	q1, [x0, #24]
  404464:	strb	w9, [x0, #43]
  404468:	sturh	w8, [x0, #41]
  40446c:	str	xzr, [x0, #56]
  404470:	ldr	x8, [x23, #72]
  404474:	str	x8, [x0, #48]
  404478:	cbz	x8, 404480 <parse_cmdline_ip_address+0x298>
  40447c:	str	x0, [x8, #56]
  404480:	str	xzr, [x0, #56]
  404484:	str	x0, [x23, #72]
  404488:	str	x23, [x0]
  40448c:	b	4043ec <parse_cmdline_ip_address+0x204>
  404490:	mov	w0, #0xffffffed            	// #-19
  404494:	b	404408 <parse_cmdline_ip_address+0x220>
  404498:	ldr	x0, [x19]
  40449c:	mov	x1, x20
  4044a0:	bl	401b20 <internal_hashmap_get@plt>
  4044a4:	mov	x23, x0
  4044a8:	stur	x0, [x29, #-16]
  4044ac:	cbnz	x0, 4044c8 <parse_cmdline_ip_address+0x2e0>
  4044b0:	sub	x2, x29, #0x10
  4044b4:	mov	x0, x19
  4044b8:	mov	x1, x20
  4044bc:	bl	404804 <network_new>
  4044c0:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  4044c4:	ldur	x23, [x29, #-16]
  4044c8:	cbz	x23, 40469c <parse_cmdline_ip_address+0x4b4>
  4044cc:	mov	w0, #0x40                  	// #64
  4044d0:	bl	401bc0 <malloc@plt>
  4044d4:	cbz	x0, 404528 <parse_cmdline_ip_address+0x340>
  4044d8:	ldur	q0, [x29, #-80]
  4044dc:	ldrb	w8, [x29, #26]
  4044e0:	ldrh	w9, [x29, #24]
  4044e4:	stp	xzr, xzr, [x0]
  4044e8:	str	xzr, [x0, #16]
  4044ec:	strb	wzr, [x0, #40]
  4044f0:	str	w21, [x0, #44]
  4044f4:	stur	q0, [x0, #24]
  4044f8:	strb	w8, [x0, #43]
  4044fc:	sturh	w9, [x0, #41]
  404500:	str	xzr, [x0, #56]
  404504:	ldr	x8, [x23, #80]
  404508:	str	x8, [x0, #48]
  40450c:	cbz	x8, 404514 <parse_cmdline_ip_address+0x32c>
  404510:	str	x0, [x8, #56]
  404514:	mov	w8, wzr
  404518:	str	xzr, [x0, #56]
  40451c:	str	x0, [x23, #80]
  404520:	str	x23, [x0]
  404524:	b	40452c <parse_cmdline_ip_address+0x344>
  404528:	mov	w8, #0xfffffff4            	// #-12
  40452c:	and	w0, w8, w8, asr #31
  404530:	tbnz	w8, #31, 404408 <parse_cmdline_ip_address+0x220>
  404534:	cbz	x22, 404408 <parse_cmdline_ip_address+0x220>
  404538:	add	x22, x22, #0x1
  40453c:	mov	x0, x19
  404540:	mov	x1, x20
  404544:	mov	x2, x22
  404548:	bl	404b80 <parse_cmdline_ip_mtu_mac>
  40454c:	tbz	w0, #31, 404694 <parse_cmdline_ip_address+0x4ac>
  404550:	mov	w1, #0x3a                  	// #58
  404554:	mov	x0, x22
  404558:	stur	x22, [x29, #-32]
  40455c:	bl	4019f0 <strchr@plt>
  404560:	cbz	x0, 404644 <parse_cmdline_ip_address+0x45c>
  404564:	mov	x21, x0
  404568:	sub	x1, x0, x22
  40456c:	mov	x0, x22
  404570:	bl	401b80 <strnlen@plt>
  404574:	add	x8, x0, #0x10
  404578:	and	x8, x8, #0xfffffffffffffff0
  40457c:	mov	x9, sp
  404580:	sub	x23, x9, x8
  404584:	mov	x2, x0
  404588:	mov	sp, x23
  40458c:	strb	wzr, [x23, x0]
  404590:	mov	x0, x23
  404594:	mov	x1, x22
  404598:	bl	401b90 <memcpy@plt>
  40459c:	sub	x1, x29, #0x14
  4045a0:	sub	x2, x29, #0x10
  4045a4:	mov	x0, x23
  4045a8:	bl	401b40 <in_addr_from_string_auto@plt>
  4045ac:	tbnz	w0, #31, 4045e8 <parse_cmdline_ip_address+0x400>
  4045b0:	ldr	x0, [x19]
  4045b4:	mov	x1, x20
  4045b8:	bl	401b20 <internal_hashmap_get@plt>
  4045bc:	str	x0, [x29, #24]
  4045c0:	cbnz	x0, 4045dc <parse_cmdline_ip_address+0x3f4>
  4045c4:	add	x2, x29, #0x18
  4045c8:	mov	x0, x19
  4045cc:	mov	x1, x20
  4045d0:	bl	404804 <network_new>
  4045d4:	tbnz	w0, #31, 4045e8 <parse_cmdline_ip_address+0x400>
  4045d8:	ldr	x0, [x29, #24]
  4045dc:	add	x0, x0, #0x18
  4045e0:	mov	x1, x23
  4045e4:	bl	401b50 <strv_extend@plt>
  4045e8:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  4045ec:	add	x21, x21, #0x1
  4045f0:	sub	x1, x29, #0x14
  4045f4:	sub	x2, x29, #0x10
  4045f8:	mov	x0, x21
  4045fc:	bl	401b40 <in_addr_from_string_auto@plt>
  404600:	tbnz	w0, #31, 404690 <parse_cmdline_ip_address+0x4a8>
  404604:	ldr	x0, [x19]
  404608:	mov	x1, x20
  40460c:	bl	401b20 <internal_hashmap_get@plt>
  404610:	str	x0, [x29, #24]
  404614:	cbnz	x0, 404630 <parse_cmdline_ip_address+0x448>
  404618:	add	x2, x29, #0x18
  40461c:	mov	x0, x19
  404620:	mov	x1, x20
  404624:	bl	404804 <network_new>
  404628:	tbnz	w0, #31, 404690 <parse_cmdline_ip_address+0x4a8>
  40462c:	ldr	x0, [x29, #24]
  404630:	add	x0, x0, #0x18
  404634:	mov	x1, x21
  404638:	b	40468c <parse_cmdline_ip_address+0x4a4>
  40463c:	mov	w0, #0xfffffff4            	// #-12
  404640:	b	404408 <parse_cmdline_ip_address+0x220>
  404644:	sub	x1, x29, #0x14
  404648:	sub	x2, x29, #0x10
  40464c:	mov	x0, x22
  404650:	bl	401b40 <in_addr_from_string_auto@plt>
  404654:	tbnz	w0, #31, 404690 <parse_cmdline_ip_address+0x4a8>
  404658:	ldr	x0, [x19]
  40465c:	mov	x1, x20
  404660:	bl	401b20 <internal_hashmap_get@plt>
  404664:	str	x0, [x29, #24]
  404668:	cbnz	x0, 404684 <parse_cmdline_ip_address+0x49c>
  40466c:	add	x2, x29, #0x18
  404670:	mov	x0, x19
  404674:	mov	x1, x20
  404678:	bl	404804 <network_new>
  40467c:	tbnz	w0, #31, 404690 <parse_cmdline_ip_address+0x4a8>
  404680:	ldr	x0, [x29, #24]
  404684:	add	x0, x0, #0x18
  404688:	mov	x1, x22
  40468c:	bl	401b50 <strv_extend@plt>
  404690:	tbnz	w0, #31, 404408 <parse_cmdline_ip_address+0x220>
  404694:	mov	w0, wzr
  404698:	b	404408 <parse_cmdline_ip_address+0x220>
  40469c:	adrp	x1, 405000 <_fini+0x1b4>
  4046a0:	adrp	x2, 405000 <_fini+0x1b4>
  4046a4:	adrp	x4, 405000 <_fini+0x1b4>
  4046a8:	add	x1, x1, #0xd4
  4046ac:	add	x2, x2, #0x1d0
  4046b0:	add	x4, x4, #0x623
  4046b4:	mov	w3, #0x7a                  	// #122
  4046b8:	mov	w0, wzr
  4046bc:	bl	401a90 <log_assert_failed_realm@plt>

00000000004046c0 <parse_cmdline_ip_interface>:
  4046c0:	stp	x29, x30, [sp, #-64]!
  4046c4:	stp	x22, x21, [sp, #32]
  4046c8:	mov	x21, x1
  4046cc:	stp	x20, x19, [sp, #48]
  4046d0:	mov	x19, x0
  4046d4:	mov	w1, #0x3a                  	// #58
  4046d8:	mov	x0, x21
  4046dc:	str	x23, [sp, #16]
  4046e0:	mov	x29, sp
  4046e4:	bl	4019f0 <strchr@plt>
  4046e8:	cbz	x0, 4047c0 <parse_cmdline_ip_interface+0x100>
  4046ec:	mov	x22, x0
  4046f0:	sub	x1, x0, x21
  4046f4:	mov	x0, x21
  4046f8:	bl	401b80 <strnlen@plt>
  4046fc:	add	x8, x0, #0x10
  404700:	and	x8, x8, #0xfffffffffffffff0
  404704:	mov	x9, sp
  404708:	sub	x20, x9, x8
  40470c:	mov	x2, x0
  404710:	mov	sp, x20
  404714:	strb	wzr, [x20, x0]
  404718:	mov	x0, x20
  40471c:	mov	x1, x21
  404720:	bl	401b90 <memcpy@plt>
  404724:	add	x22, x22, #0x1
  404728:	mov	w1, #0x3a                  	// #58
  40472c:	mov	x0, x22
  404730:	bl	4019f0 <strchr@plt>
  404734:	mov	x21, x0
  404738:	cbz	x0, 404774 <parse_cmdline_ip_interface+0xb4>
  40473c:	sub	x1, x21, x22
  404740:	mov	x0, x22
  404744:	bl	401b80 <strnlen@plt>
  404748:	add	x8, x0, #0x10
  40474c:	and	x8, x8, #0xfffffffffffffff0
  404750:	mov	x9, sp
  404754:	sub	x23, x9, x8
  404758:	mov	x2, x0
  40475c:	mov	sp, x23
  404760:	strb	wzr, [x23, x0]
  404764:	mov	x0, x23
  404768:	mov	x1, x22
  40476c:	bl	401b90 <memcpy@plt>
  404770:	mov	x22, x23
  404774:	adrp	x0, 405000 <_fini+0x1b4>
  404778:	add	x0, x0, #0x7b0
  40477c:	mov	w1, #0x9                   	// #9
  404780:	mov	x2, x22
  404784:	bl	401b70 <string_table_lookup@plt>
  404788:	mov	x22, x0
  40478c:	tbnz	w22, #31, 4047c0 <parse_cmdline_ip_interface+0x100>
  404790:	ldr	x0, [x19]
  404794:	mov	x1, x20
  404798:	bl	401b20 <internal_hashmap_get@plt>
  40479c:	str	x0, [x29, #24]
  4047a0:	cbz	x0, 4047dc <parse_cmdline_ip_interface+0x11c>
  4047a4:	str	w22, [x0, #20]
  4047a8:	cbz	x21, 4047fc <parse_cmdline_ip_interface+0x13c>
  4047ac:	add	x2, x21, #0x1
  4047b0:	mov	x0, x19
  4047b4:	mov	x1, x20
  4047b8:	bl	404b80 <parse_cmdline_ip_mtu_mac>
  4047bc:	b	4047c4 <parse_cmdline_ip_interface+0x104>
  4047c0:	mov	w0, #0xffffffea            	// #-22
  4047c4:	mov	sp, x29
  4047c8:	ldp	x20, x19, [sp, #48]
  4047cc:	ldp	x22, x21, [sp, #32]
  4047d0:	ldr	x23, [sp, #16]
  4047d4:	ldp	x29, x30, [sp], #64
  4047d8:	ret
  4047dc:	add	x2, x29, #0x18
  4047e0:	mov	x0, x19
  4047e4:	mov	x1, x20
  4047e8:	bl	404804 <network_new>
  4047ec:	tbnz	w0, #31, 4047c4 <parse_cmdline_ip_interface+0x104>
  4047f0:	ldr	x0, [x29, #24]
  4047f4:	str	w22, [x0, #20]
  4047f8:	cbnz	x21, 4047ac <parse_cmdline_ip_interface+0xec>
  4047fc:	mov	w0, wzr
  404800:	b	4047c4 <parse_cmdline_ip_interface+0x104>

0000000000404804 <network_new>:
  404804:	stp	x29, x30, [sp, #-64]!
  404808:	str	x23, [sp, #16]
  40480c:	stp	x22, x21, [sp, #32]
  404810:	stp	x20, x19, [sp, #48]
  404814:	mov	x29, sp
  404818:	cbz	x0, 404924 <network_new+0x120>
  40481c:	mov	x19, x2
  404820:	mov	x20, x1
  404824:	mov	x22, x0
  404828:	cbz	x1, 404840 <network_new+0x3c>
  40482c:	ldrb	w8, [x20]
  404830:	cbz	w8, 404840 <network_new+0x3c>
  404834:	mov	x0, x20
  404838:	bl	401c10 <ifname_valid@plt>
  40483c:	tbz	w0, #0, 4048d4 <network_new+0xd0>
  404840:	mov	x0, x20
  404844:	bl	4019e0 <strdup@plt>
  404848:	mov	x23, x0
  40484c:	cbz	x0, 4048cc <network_new+0xc8>
  404850:	mov	w0, #0x58                  	// #88
  404854:	bl	401bc0 <malloc@plt>
  404858:	mov	x20, x0
  40485c:	cbz	x0, 4048f4 <network_new+0xf0>
  404860:	adrp	x1, 41f000 <__FRAME_END__+0x196e8>
  404864:	mov	x8, #0xffffffff00000000    	// #-4294967296
  404868:	movi	v0.2d, #0x0
  40486c:	mov	w9, #0xffffffff            	// #-1
  404870:	add	x1, x1, #0xfe0
  404874:	mov	x0, x22
  404878:	stp	x23, xzr, [x20]
  40487c:	str	xzr, [x20, #56]
  404880:	stur	xzr, [x20, #76]
  404884:	stur	xzr, [x20, #68]
  404888:	str	x8, [x20, #16]
  40488c:	stur	q0, [x20, #24]
  404890:	stur	q0, [x20, #40]
  404894:	str	w9, [x20, #64]
  404898:	str	wzr, [x20, #84]
  40489c:	bl	401c20 <internal_hashmap_ensure_allocated@plt>
  4048a0:	tbnz	w0, #31, 4048e8 <network_new+0xe4>
  4048a4:	ldr	x0, [x22]
  4048a8:	ldr	x1, [x20]
  4048ac:	mov	x2, x20
  4048b0:	bl	401c30 <hashmap_put@plt>
  4048b4:	tbnz	w0, #31, 4048e8 <network_new+0xe4>
  4048b8:	mov	x23, xzr
  4048bc:	mov	w21, wzr
  4048c0:	cbz	x19, 4048dc <network_new+0xd8>
  4048c4:	str	x20, [x19]
  4048c8:	b	4048dc <network_new+0xd8>
  4048cc:	mov	w21, #0xfffffff4            	// #-12
  4048d0:	b	4048dc <network_new+0xd8>
  4048d4:	mov	x23, xzr
  4048d8:	mov	w21, #0xffffffea            	// #-22
  4048dc:	mov	x0, x23
  4048e0:	bl	401a00 <free@plt>
  4048e4:	b	40490c <network_new+0x108>
  4048e8:	mov	w21, w0
  4048ec:	mov	x23, xzr
  4048f0:	b	4048f8 <network_new+0xf4>
  4048f4:	mov	w21, #0xfffffff4            	// #-12
  4048f8:	mov	x0, x23
  4048fc:	bl	401a00 <free@plt>
  404900:	cbz	x20, 40490c <network_new+0x108>
  404904:	mov	x0, x20
  404908:	bl	403668 <network_free>
  40490c:	mov	w0, w21
  404910:	ldp	x20, x19, [sp, #48]
  404914:	ldp	x22, x21, [sp, #32]
  404918:	ldr	x23, [sp, #16]
  40491c:	ldp	x29, x30, [sp], #64
  404920:	ret
  404924:	adrp	x1, 405000 <_fini+0x1b4>
  404928:	adrp	x2, 405000 <_fini+0x1b4>
  40492c:	adrp	x4, 405000 <_fini+0x1b4>
  404930:	add	x1, x1, #0x274
  404934:	add	x2, x2, #0x1d0
  404938:	add	x4, x4, #0x525
  40493c:	mov	w3, #0xae                  	// #174
  404940:	bl	401a90 <log_assert_failed_realm@plt>

0000000000404944 <parse_ip_address_one>:
  404944:	stp	x29, x30, [sp, #-80]!
  404948:	stp	x24, x23, [sp, #32]
  40494c:	stp	x22, x21, [sp, #48]
  404950:	stp	x20, x19, [sp, #64]
  404954:	ldr	x22, [x1]
  404958:	mov	x19, x1
  40495c:	str	x25, [sp, #16]
  404960:	mov	x29, sp
  404964:	ldrb	w8, [x22]
  404968:	cmp	w8, #0x3a
  40496c:	b.ne	404980 <parse_ip_address_one+0x3c>  // b.any
  404970:	add	x8, x22, #0x1
  404974:	mov	w0, wzr
  404978:	str	x8, [x19]
  40497c:	b	404a6c <parse_ip_address_one+0x128>
  404980:	mov	x20, x2
  404984:	mov	w21, w0
  404988:	cmp	w0, #0xa
  40498c:	b.ne	4049fc <parse_ip_address_one+0xb8>  // b.any
  404990:	cmp	w8, #0x5b
  404994:	b.ne	404a68 <parse_ip_address_one+0x124>  // b.any
  404998:	add	x24, x22, #0x1
  40499c:	mov	w1, #0x5d                  	// #93
  4049a0:	mov	x0, x24
  4049a4:	bl	4019f0 <strchr@plt>
  4049a8:	cbz	x0, 404a68 <parse_ip_address_one+0x124>
  4049ac:	ldrb	w8, [x0, #1]
  4049b0:	mov	x25, x0
  4049b4:	cmp	w8, #0x3a
  4049b8:	b.ne	404a68 <parse_ip_address_one+0x124>  // b.any
  4049bc:	mvn	x8, x22
  4049c0:	add	x1, x25, x8
  4049c4:	mov	x0, x24
  4049c8:	bl	401b80 <strnlen@plt>
  4049cc:	add	x8, x0, #0x10
  4049d0:	and	x8, x8, #0xfffffffffffffff0
  4049d4:	mov	x9, sp
  4049d8:	sub	x23, x9, x8
  4049dc:	mov	x2, x0
  4049e0:	mov	sp, x23
  4049e4:	strb	wzr, [x23, x0]
  4049e8:	mov	x0, x23
  4049ec:	mov	x1, x24
  4049f0:	bl	401b90 <memcpy@plt>
  4049f4:	add	x22, x25, #0x2
  4049f8:	b	404a48 <parse_ip_address_one+0x104>
  4049fc:	mov	w1, #0x3a                  	// #58
  404a00:	mov	x0, x22
  404a04:	bl	4019f0 <strchr@plt>
  404a08:	cbz	x0, 404a68 <parse_ip_address_one+0x124>
  404a0c:	mov	x24, x0
  404a10:	sub	x1, x0, x22
  404a14:	mov	x0, x22
  404a18:	bl	401b80 <strnlen@plt>
  404a1c:	add	x8, x0, #0x10
  404a20:	and	x8, x8, #0xfffffffffffffff0
  404a24:	mov	x9, sp
  404a28:	sub	x23, x9, x8
  404a2c:	mov	x2, x0
  404a30:	mov	sp, x23
  404a34:	strb	wzr, [x23, x0]
  404a38:	mov	x0, x23
  404a3c:	mov	x1, x22
  404a40:	bl	401b90 <memcpy@plt>
  404a44:	add	x22, x24, #0x1
  404a48:	mov	w0, w21
  404a4c:	mov	x1, x23
  404a50:	mov	x2, x20
  404a54:	bl	401d40 <in_addr_from_string@plt>
  404a58:	tbnz	w0, #31, 404a6c <parse_ip_address_one+0x128>
  404a5c:	mov	w0, #0x1                   	// #1
  404a60:	str	x22, [x19]
  404a64:	b	404a6c <parse_ip_address_one+0x128>
  404a68:	mov	w0, #0xffffffea            	// #-22
  404a6c:	mov	sp, x29
  404a70:	ldp	x20, x19, [sp, #64]
  404a74:	ldp	x22, x21, [sp, #48]
  404a78:	ldp	x24, x23, [sp, #32]
  404a7c:	ldr	x25, [sp, #16]
  404a80:	ldp	x29, x30, [sp], #80
  404a84:	ret

0000000000404a88 <parse_netmask_or_prefixlen>:
  404a88:	stp	x29, x30, [sp, #-64]!
  404a8c:	str	x23, [sp, #16]
  404a90:	stp	x22, x21, [sp, #32]
  404a94:	stp	x20, x19, [sp, #48]
  404a98:	mov	x29, sp
  404a9c:	sub	sp, sp, #0x10
  404aa0:	mov	x19, x2
  404aa4:	sub	x2, x29, #0x10
  404aa8:	mov	x20, x1
  404aac:	mov	w21, w0
  404ab0:	bl	404944 <parse_ip_address_one>
  404ab4:	cmp	w0, #0x1
  404ab8:	b.lt	404adc <parse_netmask_or_prefixlen+0x54>  // b.tstop
  404abc:	cmp	w21, #0xa
  404ac0:	b.eq	404b4c <parse_netmask_or_prefixlen+0xc4>  // b.none
  404ac4:	sub	x0, x29, #0x10
  404ac8:	bl	401d50 <in4_addr_netmask_to_prefixlen@plt>
  404acc:	mov	w8, w0
  404ad0:	mov	w0, wzr
  404ad4:	strb	w8, [x19]
  404ad8:	b	404b68 <parse_netmask_or_prefixlen+0xe0>
  404adc:	cbz	w0, 404b54 <parse_netmask_or_prefixlen+0xcc>
  404ae0:	ldr	x22, [x20]
  404ae4:	mov	w1, #0x3a                  	// #58
  404ae8:	mov	x0, x22
  404aec:	bl	4019f0 <strchr@plt>
  404af0:	cbz	x0, 404b4c <parse_netmask_or_prefixlen+0xc4>
  404af4:	mov	x21, x0
  404af8:	sub	x1, x0, x22
  404afc:	mov	x0, x22
  404b00:	bl	401b80 <strnlen@plt>
  404b04:	add	x8, x0, #0x10
  404b08:	and	x8, x8, #0xfffffffffffffff0
  404b0c:	mov	x9, sp
  404b10:	sub	x23, x9, x8
  404b14:	mov	x2, x0
  404b18:	mov	sp, x23
  404b1c:	strb	wzr, [x23, x0]
  404b20:	mov	x0, x23
  404b24:	mov	x1, x22
  404b28:	bl	401b90 <memcpy@plt>
  404b2c:	mov	x0, x23
  404b30:	mov	x1, x19
  404b34:	bl	401d60 <safe_atou8@plt>
  404b38:	tbnz	w0, #31, 404b68 <parse_netmask_or_prefixlen+0xe0>
  404b3c:	mov	w0, wzr
  404b40:	add	x8, x21, #0x1
  404b44:	str	x8, [x20]
  404b48:	b	404b68 <parse_netmask_or_prefixlen+0xe0>
  404b4c:	mov	w0, #0xffffffea            	// #-22
  404b50:	b	404b68 <parse_netmask_or_prefixlen+0xe0>
  404b54:	cmp	w21, #0xa
  404b58:	mov	w8, #0x20                  	// #32
  404b5c:	mov	w9, #0xffffff80            	// #-128
  404b60:	csel	w8, w9, w8, eq  // eq = none
  404b64:	strb	w8, [x19]
  404b68:	mov	sp, x29
  404b6c:	ldp	x20, x19, [sp, #48]
  404b70:	ldp	x22, x21, [sp, #32]
  404b74:	ldr	x23, [sp, #16]
  404b78:	ldp	x29, x30, [sp], #64
  404b7c:	ret

0000000000404b80 <parse_cmdline_ip_mtu_mac>:
  404b80:	stp	x29, x30, [sp, #-64]!
  404b84:	stp	x22, x21, [sp, #32]
  404b88:	stp	x20, x19, [sp, #48]
  404b8c:	mov	x19, x1
  404b90:	mov	x21, x0
  404b94:	mov	w1, #0x3a                  	// #58
  404b98:	mov	x0, x2
  404b9c:	str	x23, [sp, #16]
  404ba0:	mov	x29, sp
  404ba4:	mov	x22, x2
  404ba8:	bl	4019f0 <strchr@plt>
  404bac:	mov	x20, x0
  404bb0:	cbz	x0, 404bec <parse_cmdline_ip_mtu_mac+0x6c>
  404bb4:	sub	x1, x20, x22
  404bb8:	mov	x0, x22
  404bbc:	bl	401b80 <strnlen@plt>
  404bc0:	add	x8, x0, #0x10
  404bc4:	and	x8, x8, #0xfffffffffffffff0
  404bc8:	mov	x9, sp
  404bcc:	sub	x23, x9, x8
  404bd0:	mov	x2, x0
  404bd4:	mov	sp, x23
  404bd8:	strb	wzr, [x23, x0]
  404bdc:	mov	x0, x23
  404be0:	mov	x1, x22
  404be4:	bl	401b90 <memcpy@plt>
  404be8:	mov	x22, x23
  404bec:	ldr	x0, [x21]
  404bf0:	mov	x1, x19
  404bf4:	bl	401b20 <internal_hashmap_get@plt>
  404bf8:	cbz	x0, 404c48 <parse_cmdline_ip_mtu_mac+0xc8>
  404bfc:	add	x2, x0, #0x10
  404c00:	mov	w0, wzr
  404c04:	mov	x1, x22
  404c08:	bl	401bf0 <parse_mtu@plt>
  404c0c:	mov	w8, w0
  404c10:	and	w0, w0, w0, asr #31
  404c14:	tbnz	w8, #31, 404c4c <parse_cmdline_ip_mtu_mac+0xcc>
  404c18:	cbz	x20, 404c4c <parse_cmdline_ip_mtu_mac+0xcc>
  404c1c:	ldr	x0, [x21]
  404c20:	mov	x1, x19
  404c24:	bl	401b20 <internal_hashmap_get@plt>
  404c28:	cbz	x0, 404c48 <parse_cmdline_ip_mtu_mac+0xc8>
  404c2c:	add	x8, x20, #0x1
  404c30:	add	x1, x0, #0x8
  404c34:	mov	x0, x8
  404c38:	bl	401c00 <ether_addr_from_string@plt>
  404c3c:	tbnz	w0, #31, 404c4c <parse_cmdline_ip_mtu_mac+0xcc>
  404c40:	mov	w0, wzr
  404c44:	b	404c4c <parse_cmdline_ip_mtu_mac+0xcc>
  404c48:	mov	w0, #0xffffffed            	// #-19
  404c4c:	mov	sp, x29
  404c50:	ldp	x20, x19, [sp, #48]
  404c54:	ldp	x22, x21, [sp, #32]
  404c58:	ldr	x23, [sp, #16]
  404c5c:	ldp	x29, x30, [sp], #64
  404c60:	ret

0000000000404c64 <netdev_new>:
  404c64:	stp	x29, x30, [sp, #-64]!
  404c68:	str	x23, [sp, #16]
  404c6c:	stp	x22, x21, [sp, #32]
  404c70:	stp	x20, x19, [sp, #48]
  404c74:	mov	x29, sp
  404c78:	cbz	x0, 404da8 <netdev_new+0x144>
  404c7c:	mov	x20, x0
  404c80:	mov	x0, x2
  404c84:	mov	x23, x3
  404c88:	mov	x19, x2
  404c8c:	mov	x21, x1
  404c90:	bl	401c10 <ifname_valid@plt>
  404c94:	tbz	w0, #0, 404d18 <netdev_new+0xb4>
  404c98:	mov	x0, x21
  404c9c:	bl	4019e0 <strdup@plt>
  404ca0:	mov	x21, x0
  404ca4:	cbz	x0, 404d2c <netdev_new+0xc8>
  404ca8:	mov	x0, x19
  404cac:	bl	4019e0 <strdup@plt>
  404cb0:	mov	x22, x0
  404cb4:	cbz	x0, 404d38 <netdev_new+0xd4>
  404cb8:	mov	w0, #0x18                  	// #24
  404cbc:	bl	401bc0 <malloc@plt>
  404cc0:	mov	x19, x0
  404cc4:	cbz	x0, 404d3c <netdev_new+0xd8>
  404cc8:	stp	x22, x21, [x19]
  404ccc:	add	x21, x20, #0x8
  404cd0:	adrp	x1, 41f000 <__FRAME_END__+0x196e8>
  404cd4:	add	x1, x1, #0xfe0
  404cd8:	mov	x0, x21
  404cdc:	str	wzr, [x19, #16]
  404ce0:	bl	401c20 <internal_hashmap_ensure_allocated@plt>
  404ce4:	tbnz	w0, #31, 404d84 <netdev_new+0x120>
  404ce8:	ldr	x0, [x21]
  404cec:	ldr	x1, [x19]
  404cf0:	mov	x2, x19
  404cf4:	bl	401c30 <hashmap_put@plt>
  404cf8:	tbnz	w0, #31, 404d84 <netdev_new+0x120>
  404cfc:	cbz	x23, 404d94 <netdev_new+0x130>
  404d00:	mov	x21, xzr
  404d04:	mov	x22, xzr
  404d08:	mov	w20, wzr
  404d0c:	str	x19, [x23]
  404d10:	mov	x19, xzr
  404d14:	b	404d40 <netdev_new+0xdc>
  404d18:	mov	x19, xzr
  404d1c:	mov	x21, xzr
  404d20:	mov	x22, xzr
  404d24:	mov	w20, #0xffffffea            	// #-22
  404d28:	b	404d40 <netdev_new+0xdc>
  404d2c:	mov	x19, xzr
  404d30:	mov	x22, xzr
  404d34:	b	404d3c <netdev_new+0xd8>
  404d38:	mov	x19, xzr
  404d3c:	mov	w20, #0xfffffff4            	// #-12
  404d40:	mov	x0, x22
  404d44:	bl	401a00 <free@plt>
  404d48:	mov	x0, x21
  404d4c:	bl	401a00 <free@plt>
  404d50:	cbz	x19, 404d6c <netdev_new+0x108>
  404d54:	ldr	x0, [x19]
  404d58:	bl	401a00 <free@plt>
  404d5c:	ldr	x0, [x19, #8]
  404d60:	bl	401a00 <free@plt>
  404d64:	mov	x0, x19
  404d68:	bl	401a00 <free@plt>
  404d6c:	mov	w0, w20
  404d70:	ldp	x20, x19, [sp, #48]
  404d74:	ldp	x22, x21, [sp, #32]
  404d78:	ldr	x23, [sp, #16]
  404d7c:	ldp	x29, x30, [sp], #64
  404d80:	ret
  404d84:	mov	w20, w0
  404d88:	mov	x21, xzr
  404d8c:	mov	x22, xzr
  404d90:	b	404d40 <netdev_new+0xdc>
  404d94:	mov	x19, xzr
  404d98:	mov	x21, xzr
  404d9c:	mov	x22, xzr
  404da0:	mov	w20, wzr
  404da4:	b	404d40 <netdev_new+0xdc>
  404da8:	adrp	x1, 405000 <_fini+0x1b4>
  404dac:	adrp	x2, 405000 <_fini+0x1b4>
  404db0:	adrp	x4, 405000 <_fini+0x1b4>
  404db4:	add	x1, x1, #0x274
  404db8:	add	x2, x2, #0x1d0
  404dbc:	add	x4, x4, #0x59c
  404dc0:	mov	w3, #0xe4                  	// #228
  404dc4:	bl	401a90 <log_assert_failed_realm@plt>

0000000000404dc8 <__libc_csu_init>:
  404dc8:	stp	x29, x30, [sp, #-64]!
  404dcc:	mov	x29, sp
  404dd0:	stp	x19, x20, [sp, #16]
  404dd4:	adrp	x20, 41f000 <__FRAME_END__+0x196e8>
  404dd8:	add	x20, x20, #0xb90
  404ddc:	stp	x21, x22, [sp, #32]
  404de0:	adrp	x21, 41f000 <__FRAME_END__+0x196e8>
  404de4:	add	x21, x21, #0xb88
  404de8:	sub	x20, x20, x21
  404dec:	mov	w22, w0
  404df0:	stp	x23, x24, [sp, #48]
  404df4:	mov	x23, x1
  404df8:	mov	x24, x2
  404dfc:	bl	401948 <_init>
  404e00:	cmp	xzr, x20, asr #3
  404e04:	b.eq	404e30 <__libc_csu_init+0x68>  // b.none
  404e08:	asr	x20, x20, #3
  404e0c:	mov	x19, #0x0                   	// #0
  404e10:	ldr	x3, [x21, x19, lsl #3]
  404e14:	mov	x2, x24
  404e18:	add	x19, x19, #0x1
  404e1c:	mov	x1, x23
  404e20:	mov	w0, w22
  404e24:	blr	x3
  404e28:	cmp	x20, x19
  404e2c:	b.ne	404e10 <__libc_csu_init+0x48>  // b.any
  404e30:	ldp	x19, x20, [sp, #16]
  404e34:	ldp	x21, x22, [sp, #32]
  404e38:	ldp	x23, x24, [sp, #48]
  404e3c:	ldp	x29, x30, [sp], #64
  404e40:	ret
  404e44:	nop

0000000000404e48 <__libc_csu_fini>:
  404e48:	ret

Disassembly of section .fini:

0000000000404e4c <_fini>:
  404e4c:	stp	x29, x30, [sp, #-16]!
  404e50:	mov	x29, sp
  404e54:	ldp	x29, x30, [sp], #16
  404e58:	ret
