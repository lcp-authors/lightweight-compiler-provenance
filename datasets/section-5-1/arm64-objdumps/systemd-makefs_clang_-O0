
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-makefs_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400c30 <_init>:
  400c30:	stp	x29, x30, [sp, #-16]!
  400c34:	mov	x29, sp
  400c38:	bl	400e38 <call_weak_fn>
  400c3c:	ldp	x29, x30, [sp], #16
  400c40:	ret

Disassembly of section .plt:

0000000000400c48 <__libc_start_main@plt-0x20>:
  400c48:	stp	x16, x30, [sp, #-16]!
  400c4c:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400c50:	ldr	x17, [x16, #3896]
  400c54:	add	x16, x16, #0xf38
  400c58:	br	x17
  400c5c:	nop
  400c60:	nop
  400c64:	nop

0000000000400c68 <__libc_start_main@plt>:
  400c68:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400c6c:	ldr	x17, [x16, #3904]
  400c70:	add	x16, x16, #0xf40
  400c74:	br	x17

0000000000400c78 <abort@plt>:
  400c78:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400c7c:	ldr	x17, [x16, #3912]
  400c80:	add	x16, x16, #0xf48
  400c84:	br	x17

0000000000400c88 <__gmon_start__@plt>:
  400c88:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400c8c:	ldr	x17, [x16, #3920]
  400c90:	add	x16, x16, #0xf50
  400c94:	br	x17

0000000000400c98 <ask_password_agent_close@plt>:
  400c98:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400c9c:	ldr	x17, [x16, #3928]
  400ca0:	add	x16, x16, #0xf58
  400ca4:	br	x17

0000000000400ca8 <polkit_agent_close@plt>:
  400ca8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400cac:	ldr	x17, [x16, #3936]
  400cb0:	add	x16, x16, #0xf60
  400cb4:	br	x17

0000000000400cb8 <pager_close@plt>:
  400cb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400cbc:	ldr	x17, [x16, #3944]
  400cc0:	add	x16, x16, #0xf68
  400cc4:	br	x17

0000000000400cc8 <mac_selinux_finish@plt>:
  400cc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400ccc:	ldr	x17, [x16, #3952]
  400cd0:	add	x16, x16, #0xf70
  400cd4:	br	x17

0000000000400cd8 <log_setup_service@plt>:
  400cd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400cdc:	ldr	x17, [x16, #3960]
  400ce0:	add	x16, x16, #0xf78
  400ce4:	br	x17

0000000000400ce8 <log_get_max_level_realm@plt>:
  400ce8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400cec:	ldr	x17, [x16, #3968]
  400cf0:	add	x16, x16, #0xf80
  400cf4:	br	x17

0000000000400cf8 <log_internal_realm@plt>:
  400cf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400cfc:	ldr	x17, [x16, #3976]
  400d00:	add	x16, x16, #0xf88
  400d04:	br	x17

0000000000400d08 <abs@plt>:
  400d08:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d0c:	ldr	x17, [x16, #3984]
  400d10:	add	x16, x16, #0xf90
  400d14:	br	x17

0000000000400d18 <__errno_location@plt>:
  400d18:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d1c:	ldr	x17, [x16, #3992]
  400d20:	add	x16, x16, #0xf98
  400d24:	br	x17

0000000000400d28 <probe_filesystem@plt>:
  400d28:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d2c:	ldr	x17, [x16, #4000]
  400d30:	add	x16, x16, #0xfa0
  400d34:	br	x17

0000000000400d38 <free@plt>:
  400d38:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d3c:	ldr	x17, [x16, #4008]
  400d40:	add	x16, x16, #0xfa8
  400d44:	br	x17

0000000000400d48 <strcmp@plt>:
  400d48:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d4c:	ldr	x17, [x16, #4016]
  400d50:	add	x16, x16, #0xfb0
  400d54:	br	x17

0000000000400d58 <strlen@plt>:
  400d58:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d5c:	ldr	x17, [x16, #4024]
  400d60:	add	x16, x16, #0xfb8
  400d64:	br	x17

0000000000400d68 <log_assert_failed_realm@plt>:
  400d68:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d6c:	ldr	x17, [x16, #4032]
  400d70:	add	x16, x16, #0xfc0
  400d74:	br	x17

0000000000400d78 <stpcpy@plt>:
  400d78:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d7c:	ldr	x17, [x16, #4040]
  400d80:	add	x16, x16, #0xfc8
  400d84:	br	x17

0000000000400d88 <access@plt>:
  400d88:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d8c:	ldr	x17, [x16, #4048]
  400d90:	add	x16, x16, #0xfd0
  400d94:	br	x17

0000000000400d98 <execv@plt>:
  400d98:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400d9c:	ldr	x17, [x16, #4056]
  400da0:	add	x16, x16, #0xfd8
  400da4:	br	x17

0000000000400da8 <_exit@plt>:
  400da8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400dac:	ldr	x17, [x16, #4064]
  400db0:	add	x16, x16, #0xfe0
  400db4:	br	x17

0000000000400db8 <wait_for_terminate_and_check@plt>:
  400db8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400dbc:	ldr	x17, [x16, #4072]
  400dc0:	add	x16, x16, #0xfe8
  400dc4:	br	x17

0000000000400dc8 <safe_fork_full@plt>:
  400dc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400dcc:	ldr	x17, [x16, #4080]
  400dd0:	add	x16, x16, #0xff0
  400dd4:	br	x17

0000000000400dd8 <__xstat64@plt>:
  400dd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d358>
  400ddc:	ldr	x17, [x16, #4088]
  400de0:	add	x16, x16, #0xff8
  400de4:	br	x17

Disassembly of section .text:

0000000000400de8 <_start>:
  400de8:	mov	x29, #0x0                   	// #0
  400dec:	mov	x30, #0x0                   	// #0
  400df0:	mov	x5, x0
  400df4:	ldr	x1, [sp]
  400df8:	add	x2, sp, #0x8
  400dfc:	mov	x6, sp
  400e00:	movz	x0, #0x0, lsl #48
  400e04:	movk	x0, #0x0, lsl #32
  400e08:	movk	x0, #0x40, lsl #16
  400e0c:	movk	x0, #0xfb0
  400e10:	movz	x3, #0x0, lsl #48
  400e14:	movk	x3, #0x0, lsl #32
  400e18:	movk	x3, #0x40, lsl #16
  400e1c:	movk	x3, #0x1940
  400e20:	movz	x4, #0x0, lsl #48
  400e24:	movk	x4, #0x0, lsl #32
  400e28:	movk	x4, #0x40, lsl #16
  400e2c:	movk	x4, #0x19c0
  400e30:	bl	400c68 <__libc_start_main@plt>
  400e34:	bl	400c78 <abort@plt>

0000000000400e38 <call_weak_fn>:
  400e38:	adrp	x0, 41f000 <__FRAME_END__+0x1d358>
  400e3c:	ldr	x0, [x0, #3856]
  400e40:	cbz	x0, 400e48 <call_weak_fn+0x10>
  400e44:	b	400c88 <__gmon_start__@plt>
  400e48:	ret

0000000000400e4c <deregister_tm_clones>:
  400e4c:	stp	x29, x30, [sp, #-32]!
  400e50:	mov	x29, sp
  400e54:	adrp	x0, 420000 <completed.8445>
  400e58:	add	x0, x0, #0x0
  400e5c:	str	x0, [sp, #24]
  400e60:	ldr	x0, [sp, #24]
  400e64:	str	x0, [sp, #24]
  400e68:	ldr	x1, [sp, #24]
  400e6c:	adrp	x0, 420000 <completed.8445>
  400e70:	add	x0, x0, #0x0
  400e74:	cmp	x1, x0
  400e78:	b.eq	400eb4 <deregister_tm_clones+0x68>  // b.none
  400e7c:	adrp	x0, 401000 <main+0x50>
  400e80:	add	x0, x0, #0x9e8
  400e84:	ldr	x0, [x0]
  400e88:	str	x0, [sp, #16]
  400e8c:	ldr	x0, [sp, #16]
  400e90:	str	x0, [sp, #16]
  400e94:	ldr	x0, [sp, #16]
  400e98:	cmp	x0, #0x0
  400e9c:	b.eq	400eb8 <deregister_tm_clones+0x6c>  // b.none
  400ea0:	ldr	x1, [sp, #16]
  400ea4:	adrp	x0, 420000 <completed.8445>
  400ea8:	add	x0, x0, #0x0
  400eac:	blr	x1
  400eb0:	b	400eb8 <deregister_tm_clones+0x6c>
  400eb4:	nop
  400eb8:	ldp	x29, x30, [sp], #32
  400ebc:	ret

0000000000400ec0 <register_tm_clones>:
  400ec0:	stp	x29, x30, [sp, #-48]!
  400ec4:	mov	x29, sp
  400ec8:	adrp	x0, 420000 <completed.8445>
  400ecc:	add	x0, x0, #0x0
  400ed0:	str	x0, [sp, #40]
  400ed4:	ldr	x0, [sp, #40]
  400ed8:	str	x0, [sp, #40]
  400edc:	ldr	x1, [sp, #40]
  400ee0:	adrp	x0, 420000 <completed.8445>
  400ee4:	add	x0, x0, #0x0
  400ee8:	sub	x0, x1, x0
  400eec:	asr	x0, x0, #3
  400ef0:	lsr	x1, x0, #63
  400ef4:	add	x0, x1, x0
  400ef8:	asr	x0, x0, #1
  400efc:	str	x0, [sp, #32]
  400f00:	ldr	x0, [sp, #32]
  400f04:	cmp	x0, #0x0
  400f08:	b.eq	400f48 <register_tm_clones+0x88>  // b.none
  400f0c:	adrp	x0, 401000 <main+0x50>
  400f10:	add	x0, x0, #0x9f0
  400f14:	ldr	x0, [x0]
  400f18:	str	x0, [sp, #24]
  400f1c:	ldr	x0, [sp, #24]
  400f20:	str	x0, [sp, #24]
  400f24:	ldr	x0, [sp, #24]
  400f28:	cmp	x0, #0x0
  400f2c:	b.eq	400f4c <register_tm_clones+0x8c>  // b.none
  400f30:	ldr	x2, [sp, #24]
  400f34:	ldr	x1, [sp, #32]
  400f38:	adrp	x0, 420000 <completed.8445>
  400f3c:	add	x0, x0, #0x0
  400f40:	blr	x2
  400f44:	b	400f4c <register_tm_clones+0x8c>
  400f48:	nop
  400f4c:	ldp	x29, x30, [sp], #48
  400f50:	ret

0000000000400f54 <__do_global_dtors_aux>:
  400f54:	stp	x29, x30, [sp, #-16]!
  400f58:	mov	x29, sp
  400f5c:	adrp	x0, 420000 <completed.8445>
  400f60:	add	x0, x0, #0x0
  400f64:	ldrb	w0, [x0]
  400f68:	and	x0, x0, #0xff
  400f6c:	cmp	x0, #0x0
  400f70:	b.ne	400f8c <__do_global_dtors_aux+0x38>  // b.any
  400f74:	bl	400e4c <deregister_tm_clones>
  400f78:	adrp	x0, 420000 <completed.8445>
  400f7c:	add	x0, x0, #0x0
  400f80:	mov	w1, #0x1                   	// #1
  400f84:	strb	w1, [x0]
  400f88:	b	400f90 <__do_global_dtors_aux+0x3c>
  400f8c:	nop
  400f90:	ldp	x29, x30, [sp], #16
  400f94:	ret

0000000000400f98 <frame_dummy>:
  400f98:	stp	x29, x30, [sp, #-16]!
  400f9c:	mov	x29, sp
  400fa0:	bl	400ec0 <register_tm_clones>
  400fa4:	nop
  400fa8:	ldp	x29, x30, [sp], #16
  400fac:	ret

0000000000400fb0 <main>:
  400fb0:	sub	sp, sp, #0x30
  400fb4:	stp	x29, x30, [sp, #32]
  400fb8:	add	x29, sp, #0x20
  400fbc:	mov	w8, wzr
  400fc0:	mov	w9, #0x1                   	// #1
  400fc4:	stur	wzr, [x29, #-4]
  400fc8:	stur	w0, [x29, #-8]
  400fcc:	str	x1, [sp, #16]
  400fd0:	ldur	w0, [x29, #-8]
  400fd4:	ldr	x1, [sp, #16]
  400fd8:	str	w8, [sp, #8]
  400fdc:	str	w9, [sp, #4]
  400fe0:	bl	401028 <save_argc_argv>
  400fe4:	ldur	w0, [x29, #-8]
  400fe8:	ldr	x1, [sp, #16]
  400fec:	bl	40105c <run>
  400ff0:	str	w0, [sp, #12]
  400ff4:	bl	400c98 <ask_password_agent_close@plt>
  400ff8:	bl	400ca8 <polkit_agent_close@plt>
  400ffc:	bl	400cb8 <pager_close@plt>
  401000:	bl	400cc8 <mac_selinux_finish@plt>
  401004:	bl	401414 <static_destruct>
  401008:	ldr	w8, [sp, #12]
  40100c:	cmp	w8, #0x0
  401010:	ldr	w8, [sp, #4]
  401014:	ldr	w9, [sp, #8]
  401018:	csel	w0, w8, w9, lt  // lt = tstop
  40101c:	ldp	x29, x30, [sp, #32]
  401020:	add	sp, sp, #0x30
  401024:	ret

0000000000401028 <save_argc_argv>:
  401028:	sub	sp, sp, #0x10
  40102c:	adrp	x8, 420000 <completed.8445>
  401030:	add	x8, x8, #0x8
  401034:	adrp	x9, 420000 <completed.8445>
  401038:	add	x9, x9, #0x10
  40103c:	str	w0, [sp, #12]
  401040:	str	x1, [sp]
  401044:	ldr	w10, [sp, #12]
  401048:	str	w10, [x8]
  40104c:	ldr	x8, [sp]
  401050:	str	x8, [x9]
  401054:	add	sp, sp, #0x10
  401058:	ret

000000000040105c <run>:
  40105c:	sub	sp, sp, #0x150
  401060:	stp	x29, x30, [sp, #304]
  401064:	str	x28, [sp, #320]
  401068:	add	x29, sp, #0x130
  40106c:	mov	x8, xzr
  401070:	adrp	x9, 401000 <main+0x50>
  401074:	add	x9, x9, #0x9f8
  401078:	add	x9, x9, #0x3
  40107c:	adrp	x10, 401000 <main+0x50>
  401080:	add	x10, x10, #0xa12
  401084:	stur	w0, [x29, #-8]
  401088:	stur	x1, [x29, #-16]
  40108c:	stur	x8, [x29, #-40]
  401090:	str	x9, [sp, #40]
  401094:	str	x10, [sp, #32]
  401098:	bl	400cd8 <log_setup_service@plt>
  40109c:	ldur	w11, [x29, #-8]
  4010a0:	cmp	w11, #0x3
  4010a4:	b.eq	401138 <run+0xdc>  // b.none
  4010a8:	mov	w8, #0x3                   	// #3
  4010ac:	str	w8, [sp, #128]
  4010b0:	mov	w8, #0x16                  	// #22
  4010b4:	movk	w8, #0x4000, lsl #16
  4010b8:	str	w8, [sp, #124]
  4010bc:	str	wzr, [sp, #120]
  4010c0:	ldr	w0, [sp, #120]
  4010c4:	bl	400ce8 <log_get_max_level_realm@plt>
  4010c8:	ldr	w8, [sp, #128]
  4010cc:	and	w8, w8, #0x7
  4010d0:	cmp	w0, w8
  4010d4:	b.lt	401108 <run+0xac>  // b.tstop
  4010d8:	ldr	w8, [sp, #120]
  4010dc:	ldr	w9, [sp, #128]
  4010e0:	orr	w0, w9, w8, lsl #10
  4010e4:	ldr	w1, [sp, #124]
  4010e8:	ldr	x2, [sp, #40]
  4010ec:	mov	w3, #0x37                  	// #55
  4010f0:	ldr	x4, [sp, #32]
  4010f4:	adrp	x5, 401000 <main+0x50>
  4010f8:	add	x5, x5, #0xa16
  4010fc:	bl	400cf8 <log_internal_realm@plt>
  401100:	str	w0, [sp, #28]
  401104:	b	40111c <run+0xc0>
  401108:	ldr	w0, [sp, #124]
  40110c:	bl	400d08 <abs@plt>
  401110:	mov	w8, wzr
  401114:	subs	w8, w8, w0, uxtb
  401118:	str	w8, [sp, #28]
  40111c:	ldr	w8, [sp, #28]
  401120:	str	w8, [sp, #116]
  401124:	ldr	w8, [sp, #116]
  401128:	stur	w8, [x29, #-4]
  40112c:	mov	w8, #0x1                   	// #1
  401130:	str	w8, [sp, #112]
  401134:	b	4013f8 <run+0x39c>
  401138:	ldur	x8, [x29, #-16]
  40113c:	ldr	x8, [x8, #8]
  401140:	stur	x8, [x29, #-32]
  401144:	ldur	x8, [x29, #-16]
  401148:	ldr	x8, [x8, #16]
  40114c:	stur	x8, [x29, #-24]
  401150:	ldur	x0, [x29, #-24]
  401154:	add	x1, sp, #0x88
  401158:	bl	4019c8 <stat64>
  40115c:	cmp	w0, #0x0
  401160:	cset	w9, ge  // ge = tcont
  401164:	tbnz	w9, #0, 4011fc <run+0x1a0>
  401168:	mov	w8, #0x3                   	// #3
  40116c:	str	w8, [sp, #108]
  401170:	bl	400d18 <__errno_location@plt>
  401174:	ldr	w8, [x0]
  401178:	str	w8, [sp, #104]
  40117c:	str	wzr, [sp, #100]
  401180:	ldr	w0, [sp, #100]
  401184:	bl	400ce8 <log_get_max_level_realm@plt>
  401188:	ldr	w8, [sp, #108]
  40118c:	and	w8, w8, #0x7
  401190:	cmp	w0, w8
  401194:	b.lt	4011cc <run+0x170>  // b.tstop
  401198:	ldr	w8, [sp, #100]
  40119c:	ldr	w9, [sp, #108]
  4011a0:	orr	w0, w9, w8, lsl #10
  4011a4:	ldr	w1, [sp, #104]
  4011a8:	ldur	x6, [x29, #-24]
  4011ac:	ldr	x2, [sp, #40]
  4011b0:	mov	w3, #0x3d                  	// #61
  4011b4:	ldr	x4, [sp, #32]
  4011b8:	adrp	x5, 401000 <main+0x50>
  4011bc:	add	x5, x5, #0xa3a
  4011c0:	bl	400cf8 <log_internal_realm@plt>
  4011c4:	str	w0, [sp, #24]
  4011c8:	b	4011e0 <run+0x184>
  4011cc:	ldr	w0, [sp, #104]
  4011d0:	bl	400d08 <abs@plt>
  4011d4:	mov	w8, wzr
  4011d8:	subs	w8, w8, w0, uxtb
  4011dc:	str	w8, [sp, #24]
  4011e0:	ldr	w8, [sp, #24]
  4011e4:	str	w8, [sp, #96]
  4011e8:	ldr	w8, [sp, #96]
  4011ec:	stur	w8, [x29, #-4]
  4011f0:	mov	w8, #0x1                   	// #1
  4011f4:	str	w8, [sp, #112]
  4011f8:	b	4013f8 <run+0x39c>
  4011fc:	ldr	w8, [sp, #152]
  401200:	and	w8, w8, #0xf000
  401204:	cmp	w8, #0x6, lsl #12
  401208:	b.eq	401284 <run+0x228>  // b.none
  40120c:	mov	w8, #0x6                   	// #6
  401210:	str	w8, [sp, #92]
  401214:	str	wzr, [sp, #88]
  401218:	str	wzr, [sp, #84]
  40121c:	ldr	w0, [sp, #84]
  401220:	bl	400ce8 <log_get_max_level_realm@plt>
  401224:	ldr	w8, [sp, #92]
  401228:	and	w8, w8, #0x7
  40122c:	cmp	w0, w8
  401230:	b.lt	401268 <run+0x20c>  // b.tstop
  401234:	ldr	w8, [sp, #84]
  401238:	ldr	w9, [sp, #92]
  40123c:	orr	w0, w9, w8, lsl #10
  401240:	ldr	w1, [sp, #88]
  401244:	ldur	x6, [x29, #-24]
  401248:	ldr	x2, [sp, #40]
  40124c:	mov	w3, #0x40                  	// #64
  401250:	ldr	x4, [sp, #32]
  401254:	adrp	x5, 401000 <main+0x50>
  401258:	add	x5, x5, #0xa52
  40125c:	bl	400cf8 <log_internal_realm@plt>
  401260:	str	w0, [sp, #20]
  401264:	b	40127c <run+0x220>
  401268:	ldr	w0, [sp, #88]
  40126c:	bl	400d08 <abs@plt>
  401270:	mov	w8, wzr
  401274:	subs	w8, w8, w0, uxtb
  401278:	str	w8, [sp, #20]
  40127c:	ldr	w8, [sp, #20]
  401280:	str	w8, [sp, #80]
  401284:	ldur	x0, [x29, #-24]
  401288:	sub	x1, x29, #0x28
  40128c:	bl	400d28 <probe_filesystem@plt>
  401290:	str	w0, [sp, #132]
  401294:	ldr	w8, [sp, #132]
  401298:	cmp	w8, #0x0
  40129c:	cset	w8, ge  // ge = tcont
  4012a0:	tbnz	w8, #0, 40134c <run+0x2f0>
  4012a4:	mov	w8, #0x4                   	// #4
  4012a8:	str	w8, [sp, #76]
  4012ac:	ldr	w8, [sp, #132]
  4012b0:	str	w8, [sp, #72]
  4012b4:	str	wzr, [sp, #68]
  4012b8:	ldr	w0, [sp, #68]
  4012bc:	bl	400ce8 <log_get_max_level_realm@plt>
  4012c0:	ldr	w8, [sp, #76]
  4012c4:	and	w8, w8, #0x7
  4012c8:	cmp	w0, w8
  4012cc:	b.lt	40131c <run+0x2c0>  // b.tstop
  4012d0:	ldr	w8, [sp, #68]
  4012d4:	ldr	w9, [sp, #76]
  4012d8:	orr	w0, w9, w8, lsl #10
  4012dc:	ldr	w1, [sp, #72]
  4012e0:	ldr	w8, [sp, #132]
  4012e4:	mov	w9, #0xffffff8b            	// #-117
  4012e8:	adrp	x10, 401000 <main+0x50>
  4012ec:	add	x10, x10, #0xaa7
  4012f0:	adrp	x11, 401000 <main+0x50>
  4012f4:	add	x11, x11, #0xa6c
  4012f8:	cmp	w8, w9
  4012fc:	csel	x5, x11, x10, eq  // eq = none
  401300:	ldur	x6, [x29, #-24]
  401304:	ldr	x2, [sp, #40]
  401308:	mov	w3, #0x48                  	// #72
  40130c:	ldr	x4, [sp, #32]
  401310:	bl	400cf8 <log_internal_realm@plt>
  401314:	str	w0, [sp, #16]
  401318:	b	401330 <run+0x2d4>
  40131c:	ldr	w0, [sp, #72]
  401320:	bl	400d08 <abs@plt>
  401324:	mov	w8, wzr
  401328:	subs	w8, w8, w0, uxtb
  40132c:	str	w8, [sp, #16]
  401330:	ldr	w8, [sp, #16]
  401334:	str	w8, [sp, #64]
  401338:	ldr	w8, [sp, #64]
  40133c:	stur	w8, [x29, #-4]
  401340:	mov	w8, #0x1                   	// #1
  401344:	str	w8, [sp, #112]
  401348:	b	4013f8 <run+0x39c>
  40134c:	ldur	x8, [x29, #-40]
  401350:	cbz	x8, 4013e0 <run+0x384>
  401354:	mov	w8, #0x6                   	// #6
  401358:	str	w8, [sp, #60]
  40135c:	str	wzr, [sp, #56]
  401360:	str	wzr, [sp, #52]
  401364:	ldr	w0, [sp, #52]
  401368:	bl	400ce8 <log_get_max_level_realm@plt>
  40136c:	ldr	w8, [sp, #60]
  401370:	and	w8, w8, #0x7
  401374:	cmp	w0, w8
  401378:	b.lt	4013b4 <run+0x358>  // b.tstop
  40137c:	ldr	w8, [sp, #52]
  401380:	ldr	w9, [sp, #60]
  401384:	orr	w0, w9, w8, lsl #10
  401388:	ldr	w1, [sp, #56]
  40138c:	ldur	x6, [x29, #-24]
  401390:	ldur	x7, [x29, #-40]
  401394:	ldr	x2, [sp, #40]
  401398:	mov	w3, #0x4b                  	// #75
  40139c:	ldr	x4, [sp, #32]
  4013a0:	adrp	x5, 401000 <main+0x50>
  4013a4:	add	x5, x5, #0xac0
  4013a8:	bl	400cf8 <log_internal_realm@plt>
  4013ac:	str	w0, [sp, #12]
  4013b0:	b	4013c8 <run+0x36c>
  4013b4:	ldr	w0, [sp, #56]
  4013b8:	bl	400d08 <abs@plt>
  4013bc:	mov	w8, wzr
  4013c0:	subs	w8, w8, w0, uxtb
  4013c4:	str	w8, [sp, #12]
  4013c8:	ldr	w8, [sp, #12]
  4013cc:	str	w8, [sp, #48]
  4013d0:	stur	wzr, [x29, #-4]
  4013d4:	mov	w8, #0x1                   	// #1
  4013d8:	str	w8, [sp, #112]
  4013dc:	b	4013f8 <run+0x39c>
  4013e0:	ldur	x0, [x29, #-32]
  4013e4:	ldur	x1, [x29, #-24]
  4013e8:	bl	4014bc <makefs>
  4013ec:	stur	w0, [x29, #-4]
  4013f0:	mov	w8, #0x1                   	// #1
  4013f4:	str	w8, [sp, #112]
  4013f8:	sub	x0, x29, #0x28
  4013fc:	bl	401494 <freep>
  401400:	ldur	w0, [x29, #-4]
  401404:	ldr	x28, [sp, #320]
  401408:	ldp	x29, x30, [sp, #304]
  40140c:	add	sp, sp, #0x150
  401410:	ret

0000000000401414 <static_destruct>:
  401414:	sub	sp, sp, #0x20
  401418:	stp	x29, x30, [sp, #16]
  40141c:	add	x29, sp, #0x10
  401420:	adrp	x8, 41f000 <__FRAME_END__+0x1d358>
  401424:	ldr	x8, [x8, #3864]
  401428:	str	x8, [sp]
  40142c:	cbnz	x8, 401434 <static_destruct+0x20>
  401430:	b	401488 <static_destruct+0x74>
  401434:	ldr	x0, [sp]
  401438:	mov	x1, #0x8                   	// #8
  40143c:	bl	40190c <ALIGN_TO>
  401440:	str	x0, [sp, #8]
  401444:	ldr	x8, [sp, #8]
  401448:	adrp	x9, 41f000 <__FRAME_END__+0x1d358>
  40144c:	ldr	x9, [x9, #3872]
  401450:	cmp	x8, x9
  401454:	b.cs	401488 <static_destruct+0x74>  // b.hs, b.nlast
  401458:	ldr	x8, [sp, #8]
  40145c:	ldr	x8, [x8, #8]
  401460:	ldr	x9, [sp, #8]
  401464:	ldr	x0, [x9]
  401468:	blr	x8
  40146c:	ldr	x8, [sp, #8]
  401470:	add	x8, x8, #0x10
  401474:	mov	x0, x8
  401478:	mov	x1, #0x8                   	// #8
  40147c:	bl	40190c <ALIGN_TO>
  401480:	str	x0, [sp, #8]
  401484:	b	401444 <static_destruct+0x30>
  401488:	ldp	x29, x30, [sp, #16]
  40148c:	add	sp, sp, #0x20
  401490:	ret

0000000000401494 <freep>:
  401494:	sub	sp, sp, #0x20
  401498:	stp	x29, x30, [sp, #16]
  40149c:	add	x29, sp, #0x10
  4014a0:	str	x0, [sp, #8]
  4014a4:	ldr	x8, [sp, #8]
  4014a8:	ldr	x0, [x8]
  4014ac:	bl	400d38 <free@plt>
  4014b0:	ldp	x29, x30, [sp, #16]
  4014b4:	add	sp, sp, #0x20
  4014b8:	ret

00000000004014bc <makefs>:
  4014bc:	stp	x29, x30, [sp, #-16]!
  4014c0:	mov	x29, sp
  4014c4:	sub	sp, sp, #0xb0
  4014c8:	adrp	x8, 401000 <main+0x50>
  4014cc:	add	x8, x8, #0xae3
  4014d0:	adrp	x9, 401000 <main+0x50>
  4014d4:	add	x9, x9, #0x9f8
  4014d8:	add	x9, x9, #0x3
  4014dc:	stur	x0, [x29, #-16]
  4014e0:	stur	x1, [x29, #-24]
  4014e4:	ldur	x0, [x29, #-16]
  4014e8:	mov	x1, x8
  4014ec:	stur	x9, [x29, #-160]
  4014f0:	bl	400d48 <strcmp@plt>
  4014f4:	cbnz	w0, 401508 <makefs+0x4c>
  4014f8:	adrp	x8, 401000 <main+0x50>
  4014fc:	add	x8, x8, #0xae8
  401500:	stur	x8, [x29, #-32]
  401504:	b	401728 <makefs+0x26c>
  401508:	sub	x8, x29, #0x38
  40150c:	adrp	x9, 401000 <main+0x50>
  401510:	add	x9, x9, #0xaf5
  401514:	stur	x9, [x29, #-56]
  401518:	ldur	x9, [x29, #-16]
  40151c:	str	x9, [x8, #8]
  401520:	stur	xzr, [x29, #-80]
  401524:	stur	xzr, [x29, #-88]
  401528:	ldur	x8, [x29, #-88]
  40152c:	mov	w9, #0x0                   	// #0
  401530:	cmp	x8, #0x2
  401534:	stur	w9, [x29, #-164]
  401538:	b.cs	401560 <makefs+0xa4>  // b.hs, b.nlast
  40153c:	ldur	x8, [x29, #-88]
  401540:	mov	x9, #0x8                   	// #8
  401544:	mul	x8, x9, x8
  401548:	sub	x9, x29, #0x38
  40154c:	add	x8, x9, x8
  401550:	ldr	x8, [x8]
  401554:	cmp	x8, #0x0
  401558:	cset	w10, ne  // ne = any
  40155c:	stur	w10, [x29, #-164]
  401560:	ldur	w8, [x29, #-164]
  401564:	tbnz	w8, #0, 40156c <makefs+0xb0>
  401568:	b	4015a4 <makefs+0xe8>
  40156c:	ldur	x8, [x29, #-88]
  401570:	mov	x9, #0x8                   	// #8
  401574:	mul	x8, x9, x8
  401578:	sub	x9, x29, #0x38
  40157c:	add	x8, x9, x8
  401580:	ldr	x0, [x8]
  401584:	bl	400d58 <strlen@plt>
  401588:	ldur	x8, [x29, #-80]
  40158c:	add	x8, x8, x0
  401590:	stur	x8, [x29, #-80]
  401594:	ldur	x8, [x29, #-88]
  401598:	add	x8, x8, #0x1
  40159c:	stur	x8, [x29, #-88]
  4015a0:	b	401528 <makefs+0x6c>
  4015a4:	ldur	x8, [x29, #-80]
  4015a8:	add	x8, x8, #0x1
  4015ac:	stur	x8, [x29, #-96]
  4015b0:	ldur	x1, [x29, #-96]
  4015b4:	mov	x0, #0x1                   	// #1
  4015b8:	bl	40185c <size_multiply_overflow>
  4015bc:	mov	w8, #0x1                   	// #1
  4015c0:	eor	w9, w0, #0x1
  4015c4:	eor	w9, w9, w8
  4015c8:	eor	w9, w9, w8
  4015cc:	eor	w8, w9, w8
  4015d0:	and	w8, w8, #0x1
  4015d4:	mov	w1, w8
  4015d8:	sxtw	x10, w1
  4015dc:	cbz	x10, 401604 <makefs+0x148>
  4015e0:	mov	w8, wzr
  4015e4:	mov	w0, w8
  4015e8:	adrp	x1, 401000 <main+0x50>
  4015ec:	add	x1, x1, #0xb01
  4015f0:	ldur	x2, [x29, #-160]
  4015f4:	mov	w3, #0x1a                  	// #26
  4015f8:	adrp	x4, 401000 <main+0x50>
  4015fc:	add	x4, x4, #0xb2c
  401600:	bl	400d68 <log_assert_failed_realm@plt>
  401604:	ldur	x8, [x29, #-96]
  401608:	mov	x9, #0x1                   	// #1
  40160c:	mul	x8, x9, x8
  401610:	cmp	x8, #0x400, lsl #12
  401614:	cset	w10, ls  // ls = plast
  401618:	mov	w11, #0x1                   	// #1
  40161c:	eor	w10, w10, #0x1
  401620:	eor	w10, w10, w11
  401624:	eor	w10, w10, w11
  401628:	and	w10, w10, #0x1
  40162c:	mov	w0, w10
  401630:	sxtw	x8, w0
  401634:	cbz	x8, 40165c <makefs+0x1a0>
  401638:	mov	w8, wzr
  40163c:	mov	w0, w8
  401640:	adrp	x1, 401000 <main+0x50>
  401644:	add	x1, x1, #0xb53
  401648:	ldur	x2, [x29, #-160]
  40164c:	mov	w3, #0x1a                  	// #26
  401650:	adrp	x4, 401000 <main+0x50>
  401654:	add	x4, x4, #0xb2c
  401658:	bl	400d68 <log_assert_failed_realm@plt>
  40165c:	ldur	x8, [x29, #-96]
  401660:	mov	x9, #0x1                   	// #1
  401664:	mul	x8, x9, x8
  401668:	mul	x8, x8, x9
  40166c:	add	x8, x8, #0xf
  401670:	and	x8, x8, #0xfffffffffffffff0
  401674:	mov	x9, sp
  401678:	subs	x8, x9, x8
  40167c:	mov	sp, x8
  401680:	stur	x8, [x29, #-104]
  401684:	ldur	x8, [x29, #-104]
  401688:	stur	x8, [x29, #-64]
  40168c:	stur	x8, [x29, #-72]
  401690:	stur	xzr, [x29, #-88]
  401694:	ldur	x8, [x29, #-88]
  401698:	mov	w9, #0x0                   	// #0
  40169c:	cmp	x8, #0x2
  4016a0:	stur	w9, [x29, #-168]
  4016a4:	b.cs	4016cc <makefs+0x210>  // b.hs, b.nlast
  4016a8:	ldur	x8, [x29, #-88]
  4016ac:	mov	x9, #0x8                   	// #8
  4016b0:	mul	x8, x9, x8
  4016b4:	sub	x9, x29, #0x38
  4016b8:	add	x8, x9, x8
  4016bc:	ldr	x8, [x8]
  4016c0:	cmp	x8, #0x0
  4016c4:	cset	w10, ne  // ne = any
  4016c8:	stur	w10, [x29, #-168]
  4016cc:	ldur	w8, [x29, #-168]
  4016d0:	tbnz	w8, #0, 4016d8 <makefs+0x21c>
  4016d4:	b	40170c <makefs+0x250>
  4016d8:	ldur	x0, [x29, #-72]
  4016dc:	ldur	x8, [x29, #-88]
  4016e0:	mov	x9, #0x8                   	// #8
  4016e4:	mul	x8, x9, x8
  4016e8:	sub	x9, x29, #0x38
  4016ec:	add	x8, x9, x8
  4016f0:	ldr	x1, [x8]
  4016f4:	bl	400d78 <stpcpy@plt>
  4016f8:	stur	x0, [x29, #-72]
  4016fc:	ldur	x8, [x29, #-88]
  401700:	add	x8, x8, #0x1
  401704:	stur	x8, [x29, #-88]
  401708:	b	401694 <makefs+0x1d8>
  40170c:	ldur	x8, [x29, #-72]
  401710:	mov	w9, #0x0                   	// #0
  401714:	strb	w9, [x8]
  401718:	ldur	x8, [x29, #-64]
  40171c:	stur	x8, [x29, #-112]
  401720:	ldur	x8, [x29, #-112]
  401724:	stur	x8, [x29, #-32]
  401728:	ldur	x0, [x29, #-32]
  40172c:	mov	w1, #0x1                   	// #1
  401730:	bl	400d88 <access@plt>
  401734:	cbz	w0, 4017c8 <makefs+0x30c>
  401738:	mov	w8, #0x3                   	// #3
  40173c:	stur	w8, [x29, #-116]
  401740:	bl	400d18 <__errno_location@plt>
  401744:	ldr	w8, [x0]
  401748:	stur	w8, [x29, #-120]
  40174c:	stur	wzr, [x29, #-124]
  401750:	ldur	w0, [x29, #-124]
  401754:	bl	400ce8 <log_get_max_level_realm@plt>
  401758:	ldur	w8, [x29, #-116]
  40175c:	and	w8, w8, #0x7
  401760:	cmp	w0, w8
  401764:	b.lt	4017a0 <makefs+0x2e4>  // b.tstop
  401768:	ldur	w8, [x29, #-124]
  40176c:	ldur	w9, [x29, #-116]
  401770:	orr	w0, w9, w8, lsl #10
  401774:	ldur	w1, [x29, #-120]
  401778:	ldur	x6, [x29, #-32]
  40177c:	ldur	x2, [x29, #-160]
  401780:	mov	w3, #0x1c                  	// #28
  401784:	adrp	x4, 401000 <main+0x50>
  401788:	add	x4, x4, #0xb72
  40178c:	adrp	x5, 401000 <main+0x50>
  401790:	add	x5, x5, #0xb79
  401794:	bl	400cf8 <log_internal_realm@plt>
  401798:	stur	w0, [x29, #-172]
  40179c:	b	4017b4 <makefs+0x2f8>
  4017a0:	ldur	w0, [x29, #-120]
  4017a4:	bl	400d08 <abs@plt>
  4017a8:	mov	w8, wzr
  4017ac:	subs	w8, w8, w0, uxtb
  4017b0:	stur	w8, [x29, #-172]
  4017b4:	ldur	w8, [x29, #-172]
  4017b8:	stur	w8, [x29, #-128]
  4017bc:	ldur	w8, [x29, #-128]
  4017c0:	stur	w8, [x29, #-4]
  4017c4:	b	40184c <makefs+0x390>
  4017c8:	adrp	x0, 401000 <main+0x50>
  4017cc:	add	x0, x0, #0xb92
  4017d0:	mov	w1, #0x225                 	// #549
  4017d4:	sub	x2, x29, #0x24
  4017d8:	bl	4018c4 <safe_fork>
  4017dc:	stur	w0, [x29, #-40]
  4017e0:	ldur	w8, [x29, #-40]
  4017e4:	cmp	w8, #0x0
  4017e8:	cset	w8, ge  // ge = tcont
  4017ec:	tbnz	w8, #0, 4017fc <makefs+0x340>
  4017f0:	ldur	w8, [x29, #-40]
  4017f4:	stur	w8, [x29, #-4]
  4017f8:	b	40184c <makefs+0x390>
  4017fc:	ldur	w8, [x29, #-40]
  401800:	cbnz	w8, 401838 <makefs+0x37c>
  401804:	ldur	x8, [x29, #-32]
  401808:	sub	x9, x29, #0x98
  40180c:	stur	x8, [x29, #-152]
  401810:	ldur	x8, [x29, #-24]
  401814:	str	x8, [x9, #8]
  401818:	mov	x8, xzr
  40181c:	str	x8, [x9, #16]
  401820:	ldur	x0, [x29, #-152]
  401824:	mov	x1, x9
  401828:	bl	400d98 <execv@plt>
  40182c:	mov	w10, #0x1                   	// #1
  401830:	mov	w0, w10
  401834:	bl	400da8 <_exit@plt>
  401838:	ldur	x0, [x29, #-32]
  40183c:	ldur	w1, [x29, #-36]
  401840:	mov	w2, #0x3                   	// #3
  401844:	bl	400db8 <wait_for_terminate_and_check@plt>
  401848:	stur	w0, [x29, #-4]
  40184c:	ldur	w0, [x29, #-4]
  401850:	mov	sp, x29
  401854:	ldp	x29, x30, [sp], #16
  401858:	ret

000000000040185c <size_multiply_overflow>:
  40185c:	sub	sp, sp, #0x20
  401860:	str	x0, [sp, #24]
  401864:	str	x1, [sp, #16]
  401868:	ldr	x8, [sp, #16]
  40186c:	mov	w9, #0x0                   	// #0
  401870:	str	w9, [sp, #12]
  401874:	cbz	x8, 401894 <size_multiply_overflow+0x38>
  401878:	ldr	x8, [sp, #24]
  40187c:	ldr	x9, [sp, #16]
  401880:	mov	x10, #0xffffffffffffffff    	// #-1
  401884:	udiv	x9, x10, x9
  401888:	cmp	x8, x9
  40188c:	cset	w11, hi  // hi = pmore
  401890:	str	w11, [sp, #12]
  401894:	ldr	w8, [sp, #12]
  401898:	mov	w9, #0x1                   	// #1
  40189c:	eor	w8, w8, #0x1
  4018a0:	eor	w8, w8, w9
  4018a4:	and	w8, w8, #0x1
  4018a8:	mov	w0, w8
  4018ac:	sxtw	x10, w0
  4018b0:	cmp	x10, #0x0
  4018b4:	cset	w8, ne  // ne = any
  4018b8:	and	w0, w8, #0x1
  4018bc:	add	sp, sp, #0x20
  4018c0:	ret

00000000004018c4 <safe_fork>:
  4018c4:	sub	sp, sp, #0x30
  4018c8:	stp	x29, x30, [sp, #32]
  4018cc:	add	x29, sp, #0x20
  4018d0:	mov	x8, xzr
  4018d4:	mov	x3, x8
  4018d8:	stur	x0, [x29, #-8]
  4018dc:	stur	w1, [x29, #-12]
  4018e0:	str	x2, [sp, #8]
  4018e4:	ldur	x0, [x29, #-8]
  4018e8:	ldur	w9, [x29, #-12]
  4018ec:	ldr	x4, [sp, #8]
  4018f0:	mov	x1, x3
  4018f4:	mov	x2, x8
  4018f8:	mov	w3, w9
  4018fc:	bl	400dc8 <safe_fork_full@plt>
  401900:	ldp	x29, x30, [sp, #32]
  401904:	add	sp, sp, #0x30
  401908:	ret

000000000040190c <ALIGN_TO>:
  40190c:	sub	sp, sp, #0x10
  401910:	str	x0, [sp, #8]
  401914:	str	x1, [sp]
  401918:	ldr	x8, [sp, #8]
  40191c:	ldr	x9, [sp]
  401920:	add	x8, x8, x9
  401924:	subs	x8, x8, #0x1
  401928:	ldr	x9, [sp]
  40192c:	subs	x9, x9, #0x1
  401930:	bic	x0, x8, x9
  401934:	add	sp, sp, #0x10
  401938:	ret
  40193c:	udf	#0

0000000000401940 <__libc_csu_init>:
  401940:	stp	x29, x30, [sp, #-64]!
  401944:	mov	x29, sp
  401948:	stp	x19, x20, [sp, #16]
  40194c:	adrp	x20, 41f000 <__FRAME_END__+0x1d358>
  401950:	add	x20, x20, #0xce8
  401954:	stp	x21, x22, [sp, #32]
  401958:	adrp	x21, 41f000 <__FRAME_END__+0x1d358>
  40195c:	add	x21, x21, #0xce0
  401960:	sub	x20, x20, x21
  401964:	mov	w22, w0
  401968:	stp	x23, x24, [sp, #48]
  40196c:	mov	x23, x1
  401970:	mov	x24, x2
  401974:	bl	400c30 <_init>
  401978:	cmp	xzr, x20, asr #3
  40197c:	b.eq	4019a8 <__libc_csu_init+0x68>  // b.none
  401980:	asr	x20, x20, #3
  401984:	mov	x19, #0x0                   	// #0
  401988:	ldr	x3, [x21, x19, lsl #3]
  40198c:	mov	x2, x24
  401990:	add	x19, x19, #0x1
  401994:	mov	x1, x23
  401998:	mov	w0, w22
  40199c:	blr	x3
  4019a0:	cmp	x20, x19
  4019a4:	b.ne	401988 <__libc_csu_init+0x48>  // b.any
  4019a8:	ldp	x19, x20, [sp, #16]
  4019ac:	ldp	x21, x22, [sp, #32]
  4019b0:	ldp	x23, x24, [sp, #48]
  4019b4:	ldp	x29, x30, [sp], #64
  4019b8:	ret
  4019bc:	nop

00000000004019c0 <__libc_csu_fini>:
  4019c0:	ret
  4019c4:	udf	#0

00000000004019c8 <stat64>:
  4019c8:	mov	x2, x1
  4019cc:	mov	x1, x0
  4019d0:	mov	w0, #0x0                   	// #0
  4019d4:	b	400dd8 <__xstat64@plt>

Disassembly of section .fini:

00000000004019d8 <_fini>:
  4019d8:	stp	x29, x30, [sp, #-16]!
  4019dc:	mov	x29, sp
  4019e0:	ldp	x29, x30, [sp], #16
  4019e4:	ret
