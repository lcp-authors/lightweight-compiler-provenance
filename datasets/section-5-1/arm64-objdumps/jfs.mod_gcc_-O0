
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//jfs.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1eb8>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_mod_init-0x1eb8>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret
      58:	stp	x29, x30, [sp, #-48]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #40]
      64:	str	x1, [sp, #32]
      68:	str	x2, [sp, #24]
      6c:	ldr	x2, [sp, #24]
      70:	ldr	x1, [sp, #32]
      74:	ldr	x0, [sp, #40]
      78:	bl	0 <grub_memmove>
      7c:	ldp	x29, x30, [sp], #48
      80:	ret
      84:	sub	sp, sp, #0x10
      88:	str	w0, [sp, #12]
      8c:	ldr	w0, [sp, #12]
      90:	cmp	w0, #0x40
      94:	b.le	b0 <grub_mod_init-0x1e08>
      98:	ldr	w0, [sp, #12]
      9c:	cmp	w0, #0x5a
      a0:	b.gt	b0 <grub_mod_init-0x1e08>
      a4:	ldr	w0, [sp, #12]
      a8:	add	w0, w0, #0x20
      ac:	b	b4 <grub_mod_init-0x1e04>
      b0:	ldr	w0, [sp, #12]
      b4:	add	sp, sp, #0x10
      b8:	ret
      bc:	stp	x29, x30, [sp, #-64]!
      c0:	mov	x29, sp
      c4:	str	x19, [sp, #16]
      c8:	str	x0, [sp, #56]
      cc:	str	x1, [sp, #48]
      d0:	str	x2, [sp, #40]
      d4:	ldr	x0, [sp, #40]
      d8:	cmp	x0, #0x0
      dc:	b.ne	124 <grub_mod_init-0x1d94>  // b.any
      e0:	mov	w0, #0x0                   	// #0
      e4:	b	184 <grub_mod_init-0x1d34>
      e8:	ldr	x0, [sp, #56]
      ec:	ldrb	w0, [x0]
      f0:	bl	84 <grub_mod_init-0x1e34>
      f4:	mov	w19, w0
      f8:	ldr	x0, [sp, #48]
      fc:	ldrb	w0, [x0]
     100:	bl	84 <grub_mod_init-0x1e34>
     104:	cmp	w19, w0
     108:	b.ne	160 <grub_mod_init-0x1d58>  // b.any
     10c:	ldr	x0, [sp, #56]
     110:	add	x0, x0, #0x1
     114:	str	x0, [sp, #56]
     118:	ldr	x0, [sp, #48]
     11c:	add	x0, x0, #0x1
     120:	str	x0, [sp, #48]
     124:	ldr	x0, [sp, #56]
     128:	ldrb	w0, [x0]
     12c:	cmp	w0, #0x0
     130:	b.eq	164 <grub_mod_init-0x1d54>  // b.none
     134:	ldr	x0, [sp, #48]
     138:	ldrb	w0, [x0]
     13c:	cmp	w0, #0x0
     140:	b.eq	164 <grub_mod_init-0x1d54>  // b.none
     144:	ldr	x0, [sp, #40]
     148:	sub	x0, x0, #0x1
     14c:	str	x0, [sp, #40]
     150:	ldr	x0, [sp, #40]
     154:	cmp	x0, #0x0
     158:	b.ne	e8 <grub_mod_init-0x1dd0>  // b.any
     15c:	b	164 <grub_mod_init-0x1d54>
     160:	nop
     164:	ldr	x0, [sp, #56]
     168:	ldrb	w0, [x0]
     16c:	bl	84 <grub_mod_init-0x1e34>
     170:	mov	w19, w0
     174:	ldr	x0, [sp, #48]
     178:	ldrb	w0, [x0]
     17c:	bl	84 <grub_mod_init-0x1e34>
     180:	sub	w0, w19, w0
     184:	ldr	x19, [sp, #16]
     188:	ldp	x29, x30, [sp], #64
     18c:	ret
     190:	sub	sp, sp, #0x30
     194:	str	x0, [sp, #24]
     198:	str	x1, [sp, #16]
     19c:	str	x2, [sp, #8]
     1a0:	str	wzr, [sp, #44]
     1a4:	b	4f4 <grub_mod_init-0x19c4>
     1a8:	ldr	x0, [sp, #16]
     1ac:	add	x1, x0, #0x2
     1b0:	str	x1, [sp, #16]
     1b4:	ldrh	w0, [x0]
     1b8:	str	w0, [sp, #40]
     1bc:	ldr	w0, [sp, #44]
     1c0:	cmp	w0, #0x0
     1c4:	b.eq	2dc <grub_mod_init-0x1bdc>  // b.none
     1c8:	ldr	w1, [sp, #40]
     1cc:	mov	w0, #0xdbff                	// #56319
     1d0:	cmp	w1, w0
     1d4:	b.ls	2b4 <grub_mod_init-0x1c04>  // b.plast
     1d8:	ldr	w1, [sp, #40]
     1dc:	mov	w0, #0xdfff                	// #57343
     1e0:	cmp	w1, w0
     1e4:	b.hi	2b4 <grub_mod_init-0x1c04>  // b.pmore
     1e8:	ldr	w1, [sp, #44]
     1ec:	mov	w0, #0xffff2800            	// #-55296
     1f0:	add	w0, w1, w0
     1f4:	lsl	w1, w0, #10
     1f8:	ldr	w0, [sp, #40]
     1fc:	add	w1, w1, w0
     200:	mov	w0, #0x2400                	// #9216
     204:	add	w0, w1, w0
     208:	str	w0, [sp, #40]
     20c:	ldr	w0, [sp, #40]
     210:	lsr	w0, w0, #18
     214:	and	w1, w0, #0xff
     218:	ldr	x0, [sp, #24]
     21c:	add	x2, x0, #0x1
     220:	str	x2, [sp, #24]
     224:	orr	w1, w1, #0xfffffff0
     228:	and	w1, w1, #0xff
     22c:	strb	w1, [x0]
     230:	ldr	w0, [sp, #40]
     234:	lsr	w0, w0, #12
     238:	and	w0, w0, #0xff
     23c:	and	w0, w0, #0x3f
     240:	and	w1, w0, #0xff
     244:	ldr	x0, [sp, #24]
     248:	add	x2, x0, #0x1
     24c:	str	x2, [sp, #24]
     250:	orr	w1, w1, #0xffffff80
     254:	and	w1, w1, #0xff
     258:	strb	w1, [x0]
     25c:	ldr	w0, [sp, #40]
     260:	lsr	w0, w0, #6
     264:	and	w0, w0, #0xff
     268:	and	w0, w0, #0x3f
     26c:	and	w1, w0, #0xff
     270:	ldr	x0, [sp, #24]
     274:	add	x2, x0, #0x1
     278:	str	x2, [sp, #24]
     27c:	orr	w1, w1, #0xffffff80
     280:	and	w1, w1, #0xff
     284:	strb	w1, [x0]
     288:	ldr	w0, [sp, #40]
     28c:	and	w0, w0, #0xff
     290:	and	w0, w0, #0x3f
     294:	and	w1, w0, #0xff
     298:	ldr	x0, [sp, #24]
     29c:	add	x2, x0, #0x1
     2a0:	str	x2, [sp, #24]
     2a4:	orr	w1, w1, #0xffffff80
     2a8:	and	w1, w1, #0xff
     2ac:	strb	w1, [x0]
     2b0:	b	2d4 <grub_mod_init-0x1be4>
     2b4:	ldr	x0, [sp, #24]
     2b8:	add	x1, x0, #0x1
     2bc:	str	x1, [sp, #24]
     2c0:	mov	w1, #0x3f                  	// #63
     2c4:	strb	w1, [x0]
     2c8:	ldr	x0, [sp, #16]
     2cc:	sub	x0, x0, #0x2
     2d0:	str	x0, [sp, #16]
     2d4:	str	wzr, [sp, #44]
     2d8:	b	4f4 <grub_mod_init-0x19c4>
     2dc:	ldr	w0, [sp, #40]
     2e0:	cmp	w0, #0x7f
     2e4:	b.hi	304 <grub_mod_init-0x1bb4>  // b.pmore
     2e8:	ldr	x0, [sp, #24]
     2ec:	add	x1, x0, #0x1
     2f0:	str	x1, [sp, #24]
     2f4:	ldr	w1, [sp, #40]
     2f8:	and	w1, w1, #0xff
     2fc:	strb	w1, [x0]
     300:	b	4f4 <grub_mod_init-0x19c4>
     304:	ldr	w0, [sp, #40]
     308:	cmp	w0, #0x7ff
     30c:	b.hi	360 <grub_mod_init-0x1b58>  // b.pmore
     310:	ldr	w0, [sp, #40]
     314:	lsr	w0, w0, #6
     318:	and	w1, w0, #0xff
     31c:	ldr	x0, [sp, #24]
     320:	add	x2, x0, #0x1
     324:	str	x2, [sp, #24]
     328:	orr	w1, w1, #0xffffffc0
     32c:	and	w1, w1, #0xff
     330:	strb	w1, [x0]
     334:	ldr	w0, [sp, #40]
     338:	and	w0, w0, #0xff
     33c:	and	w0, w0, #0x3f
     340:	and	w1, w0, #0xff
     344:	ldr	x0, [sp, #24]
     348:	add	x2, x0, #0x1
     34c:	str	x2, [sp, #24]
     350:	orr	w1, w1, #0xffffff80
     354:	and	w1, w1, #0xff
     358:	strb	w1, [x0]
     35c:	b	4f4 <grub_mod_init-0x19c4>
     360:	ldr	w1, [sp, #40]
     364:	mov	w0, #0xd7ff                	// #55295
     368:	cmp	w1, w0
     36c:	b.ls	38c <grub_mod_init-0x1b2c>  // b.plast
     370:	ldr	w1, [sp, #40]
     374:	mov	w0, #0xdbff                	// #56319
     378:	cmp	w1, w0
     37c:	b.hi	38c <grub_mod_init-0x1b2c>  // b.pmore
     380:	ldr	w0, [sp, #40]
     384:	str	w0, [sp, #44]
     388:	b	4f4 <grub_mod_init-0x19c4>
     38c:	ldr	w1, [sp, #40]
     390:	mov	w0, #0xdbff                	// #56319
     394:	cmp	w1, w0
     398:	b.ls	3c4 <grub_mod_init-0x1af4>  // b.plast
     39c:	ldr	w1, [sp, #40]
     3a0:	mov	w0, #0xdfff                	// #57343
     3a4:	cmp	w1, w0
     3a8:	b.hi	3c4 <grub_mod_init-0x1af4>  // b.pmore
     3ac:	ldr	x0, [sp, #24]
     3b0:	add	x1, x0, #0x1
     3b4:	str	x1, [sp, #24]
     3b8:	mov	w1, #0x3f                  	// #63
     3bc:	strb	w1, [x0]
     3c0:	b	4f4 <grub_mod_init-0x19c4>
     3c4:	ldr	w1, [sp, #40]
     3c8:	mov	w0, #0xffff                	// #65535
     3cc:	cmp	w1, w0
     3d0:	b.hi	450 <grub_mod_init-0x1a68>  // b.pmore
     3d4:	ldr	w0, [sp, #40]
     3d8:	lsr	w0, w0, #12
     3dc:	and	w1, w0, #0xff
     3e0:	ldr	x0, [sp, #24]
     3e4:	add	x2, x0, #0x1
     3e8:	str	x2, [sp, #24]
     3ec:	orr	w1, w1, #0xffffffe0
     3f0:	and	w1, w1, #0xff
     3f4:	strb	w1, [x0]
     3f8:	ldr	w0, [sp, #40]
     3fc:	lsr	w0, w0, #6
     400:	and	w0, w0, #0xff
     404:	and	w0, w0, #0x3f
     408:	and	w1, w0, #0xff
     40c:	ldr	x0, [sp, #24]
     410:	add	x2, x0, #0x1
     414:	str	x2, [sp, #24]
     418:	orr	w1, w1, #0xffffff80
     41c:	and	w1, w1, #0xff
     420:	strb	w1, [x0]
     424:	ldr	w0, [sp, #40]
     428:	and	w0, w0, #0xff
     42c:	and	w0, w0, #0x3f
     430:	and	w1, w0, #0xff
     434:	ldr	x0, [sp, #24]
     438:	add	x2, x0, #0x1
     43c:	str	x2, [sp, #24]
     440:	orr	w1, w1, #0xffffff80
     444:	and	w1, w1, #0xff
     448:	strb	w1, [x0]
     44c:	b	4f4 <grub_mod_init-0x19c4>
     450:	ldr	w0, [sp, #40]
     454:	lsr	w0, w0, #18
     458:	and	w1, w0, #0xff
     45c:	ldr	x0, [sp, #24]
     460:	add	x2, x0, #0x1
     464:	str	x2, [sp, #24]
     468:	orr	w1, w1, #0xfffffff0
     46c:	and	w1, w1, #0xff
     470:	strb	w1, [x0]
     474:	ldr	w0, [sp, #40]
     478:	lsr	w0, w0, #12
     47c:	and	w0, w0, #0xff
     480:	and	w0, w0, #0x3f
     484:	and	w1, w0, #0xff
     488:	ldr	x0, [sp, #24]
     48c:	add	x2, x0, #0x1
     490:	str	x2, [sp, #24]
     494:	orr	w1, w1, #0xffffff80
     498:	and	w1, w1, #0xff
     49c:	strb	w1, [x0]
     4a0:	ldr	w0, [sp, #40]
     4a4:	lsr	w0, w0, #6
     4a8:	and	w0, w0, #0xff
     4ac:	and	w0, w0, #0x3f
     4b0:	and	w1, w0, #0xff
     4b4:	ldr	x0, [sp, #24]
     4b8:	add	x2, x0, #0x1
     4bc:	str	x2, [sp, #24]
     4c0:	orr	w1, w1, #0xffffff80
     4c4:	and	w1, w1, #0xff
     4c8:	strb	w1, [x0]
     4cc:	ldr	w0, [sp, #40]
     4d0:	and	w0, w0, #0xff
     4d4:	and	w0, w0, #0x3f
     4d8:	and	w1, w0, #0xff
     4dc:	ldr	x0, [sp, #24]
     4e0:	add	x2, x0, #0x1
     4e4:	str	x2, [sp, #24]
     4e8:	orr	w1, w1, #0xffffff80
     4ec:	and	w1, w1, #0xff
     4f0:	strb	w1, [x0]
     4f4:	ldr	x0, [sp, #8]
     4f8:	sub	x1, x0, #0x1
     4fc:	str	x1, [sp, #8]
     500:	cmp	x0, #0x0
     504:	b.ne	1a8 <grub_mod_init-0x1d10>  // b.any
     508:	ldr	x0, [sp, #24]
     50c:	add	sp, sp, #0x30
     510:	ret
     514:	stp	x29, x30, [sp, #-80]!
     518:	mov	x29, sp
     51c:	str	x0, [sp, #40]
     520:	str	x1, [sp, #32]
     524:	str	x2, [sp, #24]
     528:	str	x3, [sp, #16]
     52c:	mov	w0, #0xffffffff            	// #-1
     530:	str	w0, [sp, #76]
     534:	str	wzr, [sp, #72]
     538:	b	64c <grub_mod_init-0x186c>
     53c:	ldr	x0, [sp, #40]
     540:	ldrb	w0, [x0, #16]
     544:	and	w0, w0, #0x2
     548:	cmp	w0, #0x0
     54c:	b.eq	614 <grub_mod_init-0x18a4>  // b.none
     550:	ldrsw	x0, [sp, #72]
     554:	lsl	x0, x0, #4
     558:	ldr	x1, [sp, #32]
     55c:	add	x0, x1, x0
     560:	ldr	w0, [x0, #4]
     564:	mov	w0, w0
     568:	ldr	x1, [sp, #16]
     56c:	cmp	x1, x0
     570:	b.cc	640 <grub_mod_init-0x1878>  // b.lo, b.ul, b.last
     574:	ldrsw	x0, [sp, #72]
     578:	lsl	x0, x0, #4
     57c:	ldr	x1, [sp, #32]
     580:	add	x0, x1, x0
     584:	ldrh	w0, [x0, #8]
     588:	mov	w2, w0
     58c:	ldrsw	x0, [sp, #72]
     590:	lsl	x0, x0, #4
     594:	ldr	x1, [sp, #32]
     598:	add	x0, x1, x0
     59c:	ldrb	w0, [x0, #10]
     5a0:	lsl	w0, w0, #16
     5a4:	add	w0, w2, w0
     5a8:	mov	w2, w0
     5ac:	ldrsw	x0, [sp, #72]
     5b0:	lsl	x0, x0, #4
     5b4:	ldr	x1, [sp, #32]
     5b8:	add	x0, x1, x0
     5bc:	ldr	w0, [x0, #4]
     5c0:	add	w0, w2, w0
     5c4:	mov	w0, w0
     5c8:	ldr	x1, [sp, #16]
     5cc:	cmp	x1, x0
     5d0:	b.cs	640 <grub_mod_init-0x1878>  // b.hs, b.nlast
     5d4:	ldrsw	x0, [sp, #72]
     5d8:	lsl	x0, x0, #4
     5dc:	ldr	x1, [sp, #32]
     5e0:	add	x0, x1, x0
     5e4:	ldr	w0, [x0, #4]
     5e8:	mov	w0, w0
     5ec:	ldr	x1, [sp, #16]
     5f0:	sub	x1, x1, x0
     5f4:	ldrsw	x0, [sp, #72]
     5f8:	lsl	x0, x0, #4
     5fc:	ldr	x2, [sp, #32]
     600:	add	x0, x2, x0
     604:	ldr	w0, [x0, #12]
     608:	mov	w0, w0
     60c:	add	x0, x1, x0
     610:	b	720 <grub_mod_init-0x1798>
     614:	ldrsw	x0, [sp, #72]
     618:	lsl	x0, x0, #4
     61c:	ldr	x1, [sp, #32]
     620:	add	x0, x1, x0
     624:	ldr	w0, [x0, #4]
     628:	mov	w0, w0
     62c:	ldr	x1, [sp, #16]
     630:	cmp	x1, x0
     634:	b.cc	640 <grub_mod_init-0x1878>  // b.lo, b.ul, b.last
     638:	ldr	w0, [sp, #72]
     63c:	str	w0, [sp, #76]
     640:	ldr	w0, [sp, #72]
     644:	add	w0, w0, #0x1
     648:	str	w0, [sp, #72]
     64c:	ldr	x0, [sp, #40]
     650:	ldrh	w0, [x0, #18]
     654:	sub	w0, w0, #0x2
     658:	ldr	w1, [sp, #72]
     65c:	cmp	w1, w0
     660:	b.lt	53c <grub_mod_init-0x197c>  // b.tstop
     664:	ldr	w0, [sp, #76]
     668:	cmn	w0, #0x1
     66c:	b.eq	71c <grub_mod_init-0x179c>  // b.none
     670:	mov	x0, #0xffffffffffffffff    	// #-1
     674:	str	x0, [sp, #64]
     678:	mov	x0, #0x1000                	// #4096
     67c:	bl	0 <grub_zalloc>
     680:	str	x0, [sp, #56]
     684:	ldr	x0, [sp, #56]
     688:	cmp	x0, #0x0
     68c:	b.ne	698 <grub_mod_init-0x1820>  // b.any
     690:	mov	x0, #0xffffffffffffffff    	// #-1
     694:	b	720 <grub_mod_init-0x1798>
     698:	ldr	x0, [sp, #24]
     69c:	ldr	x5, [x0, #168]
     6a0:	ldrsw	x0, [sp, #76]
     6a4:	lsl	x0, x0, #4
     6a8:	ldr	x1, [sp, #32]
     6ac:	add	x0, x1, x0
     6b0:	ldr	w0, [x0, #12]
     6b4:	mov	w1, w0
     6b8:	ldr	x0, [sp, #24]
     6bc:	ldrh	w0, [x0, #20]
     6c0:	sub	w0, w0, #0x9
     6c4:	lsl	x0, x1, x0
     6c8:	ldr	x4, [sp, #56]
     6cc:	mov	x3, #0x1000                	// #4096
     6d0:	mov	x2, #0x0                   	// #0
     6d4:	mov	x1, x0
     6d8:	mov	x0, x5
     6dc:	bl	0 <grub_disk_read>
     6e0:	cmp	w0, #0x0
     6e4:	b.ne	70c <grub_mod_init-0x17ac>  // b.any
     6e8:	ldr	x4, [sp, #56]
     6ec:	ldr	x0, [sp, #56]
     6f0:	add	x0, x0, #0x20
     6f4:	ldr	x3, [sp, #16]
     6f8:	ldr	x2, [sp, #24]
     6fc:	mov	x1, x0
     700:	mov	x0, x4
     704:	bl	514 <grub_mod_init-0x19a4>
     708:	str	x0, [sp, #64]
     70c:	ldr	x0, [sp, #56]
     710:	bl	0 <grub_free>
     714:	ldr	x0, [sp, #64]
     718:	b	720 <grub_mod_init-0x1798>
     71c:	mov	x0, #0xffffffffffffffff    	// #-1
     720:	ldp	x29, x30, [sp], #80
     724:	ret
     728:	stp	x29, x30, [sp, #-48]!
     72c:	mov	x29, sp
     730:	str	x0, [sp, #40]
     734:	str	x1, [sp, #32]
     738:	str	x2, [sp, #24]
     73c:	ldr	x0, [sp, #32]
     740:	add	x4, x0, #0xe0
     744:	ldr	x0, [sp, #32]
     748:	add	x0, x0, #0x100
     74c:	ldr	x3, [sp, #24]
     750:	ldr	x2, [sp, #40]
     754:	mov	x1, x0
     758:	mov	x0, x4
     75c:	bl	514 <grub_mod_init-0x19a4>
     760:	ldp	x29, x30, [sp], #48
     764:	ret
     768:	sub	sp, sp, #0x450
     76c:	stp	x29, x30, [sp]
     770:	mov	x29, sp
     774:	str	x0, [sp, #40]
     778:	str	w1, [sp, #36]
     77c:	str	x2, [sp, #24]
     780:	ldr	w0, [sp, #36]
     784:	lsr	w0, w0, #12
     788:	str	w0, [sp, #1100]
     78c:	ldr	w0, [sp, #36]
     790:	and	w0, w0, #0xfff
     794:	lsr	w0, w0, #5
     798:	str	w0, [sp, #1096]
     79c:	ldr	w0, [sp, #36]
     7a0:	and	w0, w0, #0x1f
     7a4:	str	w0, [sp, #1092]
     7a8:	ldr	x0, [sp, #40]
     7ac:	add	x1, x0, #0xb0
     7b0:	ldr	w0, [sp, #1100]
     7b4:	add	w0, w0, #0x1
     7b8:	mov	w0, w0
     7bc:	mov	x2, x0
     7c0:	ldr	x0, [sp, #40]
     7c4:	bl	728 <grub_mod_init-0x1790>
     7c8:	str	x0, [sp, #1080]
     7cc:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     7d0:	add	x0, x0, #0x0
     7d4:	ldr	x0, [x0]
     7d8:	ldr	w0, [x0]
     7dc:	cmp	w0, #0x0
     7e0:	b.eq	7f8 <grub_mod_init-0x16c0>  // b.none
     7e4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     7e8:	add	x0, x0, #0x0
     7ec:	ldr	x0, [x0]
     7f0:	ldr	w0, [x0]
     7f4:	b	8c8 <grub_mod_init-0x15f0>
     7f8:	ldr	x0, [sp, #40]
     7fc:	ldr	x5, [x0, #168]
     800:	ldr	x0, [sp, #40]
     804:	ldrh	w0, [x0, #20]
     808:	sub	w0, w0, #0x9
     80c:	ldr	x1, [sp, #1080]
     810:	lsl	x0, x1, x0
     814:	add	x1, sp, #0x30
     818:	mov	x4, x1
     81c:	mov	x3, #0x400                 	// #1024
     820:	mov	x2, #0xc00                 	// #3072
     824:	mov	x1, x0
     828:	mov	x0, x5
     82c:	bl	0 <grub_disk_read>
     830:	cmp	w0, #0x0
     834:	b.eq	84c <grub_mod_init-0x166c>  // b.none
     838:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     83c:	add	x0, x0, #0x0
     840:	ldr	x0, [x0]
     844:	ldr	w0, [x0]
     848:	b	8c8 <grub_mod_init-0x15f0>
     84c:	ldr	w0, [sp, #1096]
     850:	lsl	x0, x0, #3
     854:	add	x1, sp, #0x34
     858:	ldr	w0, [x1, x0]
     85c:	mov	w0, w0
     860:	str	x0, [sp, #1072]
     864:	ldr	x0, [sp, #40]
     868:	ldrh	w0, [x0, #20]
     86c:	sub	w0, w0, #0x9
     870:	ldr	x1, [sp, #1072]
     874:	lsl	x0, x1, x0
     878:	str	x0, [sp, #1072]
     87c:	ldr	w0, [sp, #1092]
     880:	ldr	x1, [sp, #1072]
     884:	add	x0, x1, x0
     888:	str	x0, [sp, #1072]
     88c:	ldr	x0, [sp, #40]
     890:	ldr	x0, [x0, #168]
     894:	ldr	x4, [sp, #24]
     898:	mov	x3, #0x200                 	// #512
     89c:	mov	x2, #0x0                   	// #0
     8a0:	ldr	x1, [sp, #1072]
     8a4:	bl	0 <grub_disk_read>
     8a8:	cmp	w0, #0x0
     8ac:	b.eq	8c4 <grub_mod_init-0x15f4>  // b.none
     8b0:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     8b4:	add	x0, x0, #0x0
     8b8:	ldr	x0, [x0]
     8bc:	ldr	w0, [x0]
     8c0:	b	8c8 <grub_mod_init-0x15f0>
     8c4:	mov	w0, #0x0                   	// #0
     8c8:	ldp	x29, x30, [sp]
     8cc:	add	sp, sp, #0x450
     8d0:	ret
     8d4:	nop
	...
     8e0:	stp	x29, x30, [sp, #-48]!
     8e4:	mov	x29, sp
     8e8:	str	x0, [sp, #24]
     8ec:	str	xzr, [sp, #40]
     8f0:	mov	x0, #0x4c0                 	// #1216
     8f4:	bl	0 <grub_malloc>
     8f8:	str	x0, [sp, #40]
     8fc:	ldr	x0, [sp, #40]
     900:	cmp	x0, #0x0
     904:	b.ne	910 <grub_mod_init-0x15a8>  // b.any
     908:	mov	x0, #0x0                   	// #0
     90c:	b	ac0 <grub_mod_init-0x13f8>
     910:	ldr	x0, [sp, #40]
     914:	mov	x4, x0
     918:	mov	x3, #0xa8                  	// #168
     91c:	mov	x2, #0x0                   	// #0
     920:	mov	x1, #0x40                  	// #64
     924:	ldr	x0, [sp, #24]
     928:	bl	0 <grub_disk_read>
     92c:	cmp	w0, #0x0
     930:	b.ne	a7c <grub_mod_init-0x143c>  // b.any
     934:	ldr	x3, [sp, #40]
     938:	mov	x2, #0x4                   	// #4
     93c:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     940:	add	x0, x0, #0x0
     944:	ldr	x1, [x0]
     948:	mov	x0, x3
     94c:	bl	0 <grub_strncmp>
     950:	cmp	w0, #0x0
     954:	b.eq	970 <grub_mod_init-0x1548>  // b.none
     958:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     95c:	add	x0, x0, #0x0
     960:	ldr	x1, [x0]
     964:	mov	w0, #0x9                   	// #9
     968:	bl	0 <grub_error>
     96c:	b	a88 <grub_mod_init-0x1430>
     970:	ldr	x0, [sp, #40]
     974:	ldr	w0, [x0, #16]
     978:	cmp	w0, #0x0
     97c:	b.eq	9b4 <grub_mod_init-0x1504>  // b.none
     980:	ldr	x0, [sp, #40]
     984:	ldr	w1, [x0, #16]
     988:	ldr	x0, [sp, #40]
     98c:	ldrh	w0, [x0, #20]
     990:	mov	w2, w0
     994:	mov	w0, #0x1                   	// #1
     998:	lsl	w0, w0, w2
     99c:	cmp	w1, w0
     9a0:	b.ne	9b4 <grub_mod_init-0x1504>  // b.any
     9a4:	ldr	x0, [sp, #40]
     9a8:	ldrh	w0, [x0, #20]
     9ac:	cmp	w0, #0x8
     9b0:	b.hi	9cc <grub_mod_init-0x14ec>  // b.pmore
     9b4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     9b8:	add	x0, x0, #0x0
     9bc:	ldr	x1, [x0]
     9c0:	mov	w0, #0x9                   	// #9
     9c4:	bl	0 <grub_error>
     9c8:	b	a88 <grub_mod_init-0x1430>
     9cc:	ldr	x0, [sp, #40]
     9d0:	ldr	x1, [sp, #24]
     9d4:	str	x1, [x0, #168]
     9d8:	ldr	x0, [sp, #40]
     9dc:	str	wzr, [x0, #1204]
     9e0:	ldr	x0, [sp, #40]
     9e4:	str	wzr, [x0, #1208]
     9e8:	ldr	x0, [sp, #40]
     9ec:	ldr	x5, [x0, #168]
     9f0:	ldr	x0, [sp, #40]
     9f4:	add	x0, x0, #0xb0
     9f8:	mov	x4, x0
     9fc:	mov	x3, #0x200                 	// #512
     a00:	mov	x2, #0x0                   	// #0
     a04:	mov	x1, #0x68                  	// #104
     a08:	mov	x0, x5
     a0c:	bl	0 <grub_disk_read>
     a10:	cmp	w0, #0x0
     a14:	b.ne	a84 <grub_mod_init-0x1434>  // b.any
     a18:	ldr	x0, [sp, #40]
     a1c:	ldr	w0, [x0, #36]
     a20:	and	w0, w0, #0x200000
     a24:	cmp	w0, #0x0
     a28:	b.eq	a3c <grub_mod_init-0x147c>  // b.none
     a2c:	ldr	x0, [sp, #40]
     a30:	mov	w1, #0xb                   	// #11
     a34:	str	w1, [x0, #1212]
     a38:	b	a48 <grub_mod_init-0x1470>
     a3c:	ldr	x0, [sp, #40]
     a40:	mov	w1, #0xd                   	// #13
     a44:	str	w1, [x0, #1212]
     a48:	ldr	x0, [sp, #40]
     a4c:	ldr	w0, [x0, #36]
     a50:	and	w0, w0, #0x40000000
     a54:	cmp	w0, #0x0
     a58:	b.eq	a6c <grub_mod_init-0x144c>  // b.none
     a5c:	ldr	x0, [sp, #40]
     a60:	mov	w1, #0x1                   	// #1
     a64:	str	w1, [x0, #1200]
     a68:	b	a74 <grub_mod_init-0x1444>
     a6c:	ldr	x0, [sp, #40]
     a70:	str	wzr, [x0, #1200]
     a74:	ldr	x0, [sp, #40]
     a78:	b	ac0 <grub_mod_init-0x13f8>
     a7c:	nop
     a80:	b	a88 <grub_mod_init-0x1430>
     a84:	nop
     a88:	ldr	x0, [sp, #40]
     a8c:	bl	0 <grub_free>
     a90:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     a94:	add	x0, x0, #0x0
     a98:	ldr	x0, [x0]
     a9c:	ldr	w0, [x0]
     aa0:	cmp	w0, #0xb
     aa4:	b.ne	abc <grub_mod_init-0x13fc>  // b.any
     aa8:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     aac:	add	x0, x0, #0x0
     ab0:	ldr	x1, [x0]
     ab4:	mov	w0, #0x9                   	// #9
     ab8:	bl	0 <grub_error>
     abc:	mov	x0, #0x0                   	// #0
     ac0:	ldp	x29, x30, [sp], #48
     ac4:	ret
	...
     ae0:	stp	x29, x30, [sp, #-64]!
     ae4:	mov	x29, sp
     ae8:	str	x0, [sp, #24]
     aec:	str	x1, [sp, #16]
     af0:	ldr	x0, [sp, #16]
     af4:	add	x0, x0, #0xe0
     af8:	str	x0, [sp, #48]
     afc:	ldr	x0, [sp, #16]
     b00:	ldr	w0, [x0, #52]
     b04:	and	w0, w0, #0xf000
     b08:	cmp	w0, #0x4, lsl #12
     b0c:	b.eq	b2c <grub_mod_init-0x138c>  // b.none
     b10:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     b14:	add	x0, x0, #0x0
     b18:	ldr	x1, [x0]
     b1c:	mov	w0, #0x4                   	// #4
     b20:	bl	0 <grub_error>
     b24:	mov	x0, #0x0                   	// #0
     b28:	b	d70 <grub_mod_init-0x1148>
     b2c:	mov	x0, #0x43d                 	// #1085
     b30:	bl	0 <grub_zalloc>
     b34:	str	x0, [sp, #40]
     b38:	ldr	x0, [sp, #40]
     b3c:	cmp	x0, #0x0
     b40:	b.ne	b4c <grub_mod_init-0x136c>  // b.any
     b44:	mov	x0, #0x0                   	// #0
     b48:	b	d70 <grub_mod_init-0x1148>
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x1, [sp, #24]
     b54:	stur	x1, [x0, #12]
     b58:	ldr	x0, [sp, #40]
     b5c:	ldr	x1, [sp, #16]
     b60:	stur	x1, [x0, #20]
     b64:	ldr	x0, [sp, #16]
     b68:	ldrb	w0, [x0, #240]
     b6c:	and	w0, w0, #0x2
     b70:	cmp	w0, #0x0
     b74:	b.eq	bc0 <grub_mod_init-0x12f8>  // b.none
     b78:	ldr	x0, [sp, #16]
     b7c:	add	x1, x0, #0xe0
     b80:	ldr	x0, [sp, #40]
     b84:	str	x1, [x0, #40]
     b88:	ldr	x0, [sp, #40]
     b8c:	ldr	x1, [sp, #48]
     b90:	str	x1, [x0, #48]
     b94:	ldr	x0, [sp, #16]
     b98:	add	x1, x0, #0xf8
     b9c:	ldr	x0, [sp, #40]
     ba0:	str	x1, [x0, #32]
     ba4:	ldr	x0, [sp, #16]
     ba8:	ldrb	w0, [x0, #241]
     bac:	mov	w1, w0
     bb0:	ldr	x0, [sp, #40]
     bb4:	str	w1, [x0, #28]
     bb8:	ldr	x0, [sp, #40]
     bbc:	b	d70 <grub_mod_init-0x1148>
     bc0:	ldr	x0, [sp, #24]
     bc4:	ldr	w0, [x0, #16]
     bc8:	mov	w0, w0
     bcc:	bl	0 <grub_malloc>
     bd0:	mov	x1, x0
     bd4:	ldr	x0, [sp, #40]
     bd8:	stur	x1, [x0, #4]
     bdc:	ldr	x0, [sp, #40]
     be0:	ldur	x0, [x0, #4]
     be4:	cmp	x0, #0x0
     be8:	b.ne	bfc <grub_mod_init-0x12bc>  // b.any
     bec:	ldr	x0, [sp, #40]
     bf0:	bl	0 <grub_free>
     bf4:	mov	x0, #0x0                   	// #0
     bf8:	b	d70 <grub_mod_init-0x1148>
     bfc:	ldr	x0, [sp, #16]
     c00:	ldrb	w0, [x0, #248]
     c04:	and	x0, x0, #0xff
     c08:	lsl	x0, x0, #5
     c0c:	ldr	x1, [sp, #48]
     c10:	add	x0, x1, x0
     c14:	ldr	w0, [x0, #4]
     c18:	mov	w0, w0
     c1c:	str	x0, [sp, #56]
     c20:	ldr	x0, [sp, #24]
     c24:	ldrh	w0, [x0, #20]
     c28:	sub	w0, w0, #0x9
     c2c:	ldr	x1, [sp, #56]
     c30:	lsl	x0, x1, x0
     c34:	str	x0, [sp, #56]
     c38:	ldr	x0, [sp, #24]
     c3c:	ldr	x5, [x0, #168]
     c40:	ldr	x0, [sp, #24]
     c44:	ldr	w0, [x0, #16]
     c48:	mov	w1, w0
     c4c:	ldr	x0, [sp, #40]
     c50:	ldur	x0, [x0, #4]
     c54:	mov	x4, x0
     c58:	mov	x3, x1
     c5c:	mov	x2, #0x0                   	// #0
     c60:	ldr	x1, [sp, #56]
     c64:	mov	x0, x5
     c68:	bl	0 <grub_disk_read>
     c6c:	cmp	w0, #0x0
     c70:	b.eq	c90 <grub_mod_init-0x1228>  // b.none
     c74:	ldr	x0, [sp, #40]
     c78:	ldur	x0, [x0, #4]
     c7c:	bl	0 <grub_free>
     c80:	ldr	x0, [sp, #40]
     c84:	bl	0 <grub_free>
     c88:	mov	x0, #0x0                   	// #0
     c8c:	b	d70 <grub_mod_init-0x1148>
     c90:	ldr	x0, [sp, #40]
     c94:	ldur	x0, [x0, #4]
     c98:	str	x0, [sp, #48]
     c9c:	ldr	x0, [sp, #40]
     ca0:	ldur	x1, [x0, #4]
     ca4:	ldr	x0, [sp, #40]
     ca8:	ldur	x0, [x0, #4]
     cac:	ldrb	w0, [x0, #21]
     cb0:	lsl	w0, w0, #5
     cb4:	sxtw	x0, w0
     cb8:	ldrb	w0, [x1, x0]
     cbc:	str	w0, [sp, #36]
     cc0:	ldrsw	x0, [sp, #36]
     cc4:	lsl	x0, x0, #5
     cc8:	ldr	x1, [sp, #48]
     ccc:	add	x0, x1, x0
     cd0:	ldr	w1, [x0, #4]
     cd4:	ldr	x0, [sp, #24]
     cd8:	ldrh	w0, [x0, #20]
     cdc:	sub	w0, w0, #0x9
     ce0:	lsl	w0, w1, w0
     ce4:	mov	w0, w0
     ce8:	str	x0, [sp, #56]
     cec:	ldr	x0, [sp, #40]
     cf0:	ldur	x0, [x0, #4]
     cf4:	ldrb	w0, [x0, #16]
     cf8:	and	w0, w0, #0x2
     cfc:	cmp	w0, #0x0
     d00:	b.eq	c38 <grub_mod_init-0x1280>  // b.none
     d04:	ldr	x0, [sp, #40]
     d08:	ldur	x0, [x0, #4]
     d0c:	mov	x1, x0
     d10:	ldr	x0, [sp, #40]
     d14:	str	x1, [x0, #40]
     d18:	ldr	x0, [sp, #40]
     d1c:	ldur	x0, [x0, #4]
     d20:	mov	x1, x0
     d24:	ldr	x0, [sp, #40]
     d28:	str	x1, [x0, #48]
     d2c:	ldr	x0, [sp, #40]
     d30:	ldur	x1, [x0, #4]
     d34:	ldr	x0, [sp, #40]
     d38:	ldur	x0, [x0, #4]
     d3c:	ldrb	w0, [x0, #21]
     d40:	lsl	w0, w0, #5
     d44:	sxtw	x0, w0
     d48:	add	x1, x1, x0
     d4c:	ldr	x0, [sp, #40]
     d50:	str	x1, [x0, #32]
     d54:	ldr	x0, [sp, #40]
     d58:	ldur	x0, [x0, #4]
     d5c:	ldrb	w0, [x0, #17]
     d60:	mov	w1, w0
     d64:	ldr	x0, [sp, #40]
     d68:	str	w1, [x0, #28]
     d6c:	ldr	x0, [sp, #40]
     d70:	ldp	x29, x30, [sp], #64
     d74:	ret
	...
     d80:	stp	x29, x30, [sp, #-32]!
     d84:	mov	x29, sp
     d88:	str	x0, [sp, #24]
     d8c:	ldr	x0, [sp, #24]
     d90:	cmp	x0, #0x0
     d94:	b.eq	db0 <grub_mod_init-0x1108>  // b.none
     d98:	ldr	x0, [sp, #24]
     d9c:	ldur	x0, [x0, #4]
     da0:	bl	0 <grub_free>
     da4:	ldr	x0, [sp, #24]
     da8:	bl	0 <grub_free>
     dac:	b	db4 <grub_mod_init-0x1104>
     db0:	nop
     db4:	ldp	x29, x30, [sp], #32
     db8:	ret
     dbc:	sub	sp, sp, #0x20
     dc0:	str	x0, [sp, #24]
     dc4:	str	x1, [sp, #16]
     dc8:	str	x2, [sp, #8]
     dcc:	b	df0 <grub_mod_init-0x10c8>
     dd0:	ldr	x1, [sp, #16]
     dd4:	add	x0, x1, #0x2
     dd8:	str	x0, [sp, #16]
     ddc:	ldr	x0, [sp, #24]
     de0:	add	x2, x0, #0x2
     de4:	str	x2, [sp, #24]
     de8:	ldrh	w1, [x1]
     dec:	strh	w1, [x0]
     df0:	ldr	x0, [sp, #8]
     df4:	sub	x1, x0, #0x1
     df8:	str	x1, [sp, #8]
     dfc:	cmp	x0, #0x0
     e00:	b.ne	dd0 <grub_mod_init-0x10e8>  // b.any
     e04:	nop
     e08:	nop
     e0c:	add	sp, sp, #0x20
     e10:	ret
     e14:	sub	sp, sp, #0x250
     e18:	stp	x29, x30, [sp]
     e1c:	mov	x29, sp
     e20:	str	x0, [sp, #24]
     e24:	str	wzr, [sp, #588]
     e28:	ldr	x0, [sp, #24]
     e2c:	ldr	w1, [x0]
     e30:	ldr	x0, [sp, #24]
     e34:	ldr	w0, [x0, #28]
     e38:	cmp	w1, w0
     e3c:	b.ne	f68 <grub_mod_init-0xf50>  // b.any
     e40:	ldr	x0, [sp, #24]
     e44:	ldur	x0, [x0, #20]
     e48:	ldrb	w0, [x0, #240]
     e4c:	and	w0, w0, #0x2
     e50:	cmp	w0, #0x0
     e54:	b.ne	e6c <grub_mod_init-0x104c>  // b.any
     e58:	ldr	x0, [sp, #24]
     e5c:	ldur	x0, [x0, #4]
     e60:	ldr	x0, [x0]
     e64:	cmp	x0, #0x0
     e68:	b.ne	e74 <grub_mod_init-0x1044>  // b.any
     e6c:	mov	w0, #0xb                   	// #11
     e70:	b	1188 <grub_mod_init-0xd30>
     e74:	ldr	x0, [sp, #24]
     e78:	ldur	x0, [x0, #4]
     e7c:	ldr	x0, [x0]
     e80:	str	x0, [sp, #568]
     e84:	ldr	x0, [sp, #24]
     e88:	ldur	x0, [x0, #12]
     e8c:	ldrh	w0, [x0, #20]
     e90:	sub	w0, w0, #0x9
     e94:	ldr	x1, [sp, #568]
     e98:	lsl	x0, x1, x0
     e9c:	str	x0, [sp, #568]
     ea0:	ldr	x0, [sp, #24]
     ea4:	ldur	x0, [x0, #12]
     ea8:	ldr	x5, [x0, #168]
     eac:	ldr	x0, [sp, #24]
     eb0:	ldur	x0, [x0, #12]
     eb4:	ldr	w0, [x0, #16]
     eb8:	mov	w1, w0
     ebc:	ldr	x0, [sp, #24]
     ec0:	ldur	x0, [x0, #4]
     ec4:	mov	x4, x0
     ec8:	mov	x3, x1
     ecc:	mov	x2, #0x0                   	// #0
     ed0:	ldr	x1, [sp, #568]
     ed4:	mov	x0, x5
     ed8:	bl	0 <grub_disk_read>
     edc:	cmp	w0, #0x0
     ee0:	b.eq	ef8 <grub_mod_init-0xfc0>  // b.none
     ee4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
     ee8:	add	x0, x0, #0x0
     eec:	ldr	x0, [x0]
     ef0:	ldr	w0, [x0]
     ef4:	b	1188 <grub_mod_init-0xd30>
     ef8:	ldr	x0, [sp, #24]
     efc:	ldur	x0, [x0, #4]
     f00:	mov	x1, x0
     f04:	ldr	x0, [sp, #24]
     f08:	str	x1, [x0, #40]
     f0c:	ldr	x0, [sp, #24]
     f10:	ldur	x0, [x0, #4]
     f14:	mov	x1, x0
     f18:	ldr	x0, [sp, #24]
     f1c:	str	x1, [x0, #48]
     f20:	ldr	x0, [sp, #24]
     f24:	ldur	x1, [x0, #4]
     f28:	ldr	x0, [sp, #24]
     f2c:	ldur	x0, [x0, #4]
     f30:	ldrb	w0, [x0, #21]
     f34:	lsl	w0, w0, #5
     f38:	sxtw	x0, w0
     f3c:	add	x1, x1, x0
     f40:	ldr	x0, [sp, #24]
     f44:	str	x1, [x0, #32]
     f48:	ldr	x0, [sp, #24]
     f4c:	ldur	x0, [x0, #4]
     f50:	ldrb	w0, [x0, #17]
     f54:	mov	w1, w0
     f58:	ldr	x0, [sp, #24]
     f5c:	str	w1, [x0, #28]
     f60:	ldr	x0, [sp, #24]
     f64:	str	wzr, [x0]
     f68:	ldr	x0, [sp, #24]
     f6c:	ldr	x1, [x0, #40]
     f70:	ldr	x0, [sp, #24]
     f74:	ldr	x2, [x0, #32]
     f78:	ldr	x0, [sp, #24]
     f7c:	ldr	w0, [x0]
     f80:	sxtw	x0, w0
     f84:	add	x0, x2, x0
     f88:	ldrb	w0, [x0]
     f8c:	and	x0, x0, #0xff
     f90:	lsl	x0, x0, #5
     f94:	add	x0, x1, x0
     f98:	str	x0, [sp, #560]
     f9c:	ldr	x0, [sp, #24]
     fa0:	ldr	x1, [x0, #48]
     fa4:	ldr	x0, [sp, #24]
     fa8:	ldr	w0, [x0]
     fac:	sxtw	x0, w0
     fb0:	lsl	x0, x0, #5
     fb4:	add	x0, x1, x0
     fb8:	str	x0, [sp, #552]
     fbc:	ldr	x0, [sp, #560]
     fc0:	ldrb	w0, [x0, #5]
     fc4:	str	w0, [sp, #584]
     fc8:	ldr	w0, [sp, #584]
     fcc:	cmp	w0, #0x0
     fd0:	b.ne	ff4 <grub_mod_init-0xec4>  // b.any
     fd4:	ldr	x0, [sp, #24]
     fd8:	ldr	w0, [x0]
     fdc:	add	w1, w0, #0x1
     fe0:	ldr	x0, [sp, #24]
     fe4:	str	w1, [x0]
     fe8:	ldr	x0, [sp, #24]
     fec:	bl	e14 <grub_mod_init-0x10a4>
     ff0:	b	1188 <grub_mod_init-0xd30>
     ff4:	ldrsw	x0, [sp, #588]
     ff8:	lsl	x0, x0, #1
     ffc:	add	x1, sp, #0x28
    1000:	add	x3, x1, x0
    1004:	ldr	x0, [sp, #560]
    1008:	add	x4, x0, #0x6
    100c:	ldr	x0, [sp, #24]
    1010:	ldur	x0, [x0, #12]
    1014:	ldr	w0, [x0, #1212]
    1018:	ldr	w2, [sp, #584]
    101c:	ldr	w1, [sp, #584]
    1020:	cmp	w2, w0
    1024:	csel	w0, w1, w0, le
    1028:	sxtw	x0, w0
    102c:	mov	x2, x0
    1030:	mov	x1, x4
    1034:	mov	x0, x3
    1038:	bl	dbc <grub_mod_init-0x10fc>
    103c:	ldr	x0, [sp, #24]
    1040:	ldur	x0, [x0, #12]
    1044:	ldr	w0, [x0, #1212]
    1048:	ldr	w2, [sp, #584]
    104c:	ldr	w1, [sp, #584]
    1050:	cmp	w2, w0
    1054:	csel	w0, w1, w0, le
    1058:	ldr	w1, [sp, #588]
    105c:	add	w0, w1, w0
    1060:	str	w0, [sp, #588]
    1064:	ldr	x0, [sp, #560]
    1068:	ldr	w1, [x0]
    106c:	ldr	x0, [sp, #24]
    1070:	add	x0, x0, #0x400
    1074:	stur	w1, [x0, #57]
    1078:	ldr	x0, [sp, #24]
    107c:	ldur	x0, [x0, #12]
    1080:	ldr	w0, [x0, #1212]
    1084:	ldr	w1, [sp, #584]
    1088:	sub	w0, w1, w0
    108c:	str	w0, [sp, #584]
    1090:	ldr	x0, [sp, #560]
    1094:	ldrb	w0, [x0, #4]
    1098:	str	w0, [sp, #580]
    109c:	ldr	x0, [sp, #560]
    10a0:	ldrb	w0, [x0, #4]
    10a4:	cmp	w0, #0xff
    10a8:	b.eq	1158 <grub_mod_init-0xd60>  // b.none
    10ac:	ldr	x0, [sp, #24]
    10b0:	ldr	x1, [x0, #48]
    10b4:	ldrsw	x0, [sp, #580]
    10b8:	lsl	x0, x0, #5
    10bc:	add	x0, x1, x0
    10c0:	str	x0, [sp, #552]
    10c4:	ldrsw	x0, [sp, #588]
    10c8:	lsl	x0, x0, #1
    10cc:	add	x1, sp, #0x28
    10d0:	add	x3, x1, x0
    10d4:	ldr	x0, [sp, #552]
    10d8:	add	x4, x0, #0x2
    10dc:	ldr	w2, [sp, #584]
    10e0:	ldr	w1, [sp, #584]
    10e4:	mov	w0, #0xf                   	// #15
    10e8:	cmp	w2, #0xf
    10ec:	csel	w0, w1, w0, le
    10f0:	sxtw	x0, w0
    10f4:	mov	x2, x0
    10f8:	mov	x1, x4
    10fc:	mov	x0, x3
    1100:	bl	dbc <grub_mod_init-0x10fc>
    1104:	ldr	w2, [sp, #584]
    1108:	ldr	w1, [sp, #584]
    110c:	mov	w0, #0xf                   	// #15
    1110:	cmp	w2, #0xf
    1114:	csel	w0, w1, w0, le
    1118:	ldr	w1, [sp, #588]
    111c:	add	w0, w1, w0
    1120:	str	w0, [sp, #588]
    1124:	ldr	w0, [sp, #584]
    1128:	sub	w0, w0, #0xf
    112c:	str	w0, [sp, #584]
    1130:	ldr	x0, [sp, #552]
    1134:	ldrb	w0, [x0]
    1138:	str	w0, [sp, #580]
    113c:	ldr	x0, [sp, #552]
    1140:	ldrb	w0, [x0]
    1144:	cmp	w0, #0xff
    1148:	b.eq	1158 <grub_mod_init-0xd60>  // b.none
    114c:	ldr	w0, [sp, #584]
    1150:	cmp	w0, #0x0
    1154:	b.gt	10ac <grub_mod_init-0xe0c>
    1158:	ldr	x0, [sp, #24]
    115c:	ldr	w0, [x0]
    1160:	add	w1, w0, #0x1
    1164:	ldr	x0, [sp, #24]
    1168:	str	w1, [x0]
    116c:	ldr	x0, [sp, #24]
    1170:	add	x0, x0, #0x38
    1174:	ldrsw	x2, [sp, #588]
    1178:	add	x1, sp, #0x28
    117c:	bl	190 <grub_mod_init-0x1d28>
    1180:	strb	wzr, [x0]
    1184:	mov	w0, #0x0                   	// #0
    1188:	ldp	x29, x30, [sp]
    118c:	add	sp, sp, #0x250
    1190:	ret
    1194:	nop
	...
    11a0:	stp	x29, x30, [sp, #-112]!
    11a4:	mov	x29, sp
    11a8:	str	x0, [sp, #56]
    11ac:	str	x1, [sp, #48]
    11b0:	str	x2, [sp, #40]
    11b4:	str	x3, [sp, #32]
    11b8:	str	x4, [sp, #24]
    11bc:	str	x5, [sp, #16]
    11c0:	ldr	x1, [sp, #24]
    11c4:	ldr	x0, [sp, #32]
    11c8:	add	x1, x1, x0
    11cc:	ldr	x0, [sp, #56]
    11d0:	ldr	w0, [x0, #16]
    11d4:	mov	w0, w0
    11d8:	add	x0, x1, x0
    11dc:	sub	x0, x0, #0x1
    11e0:	ldr	x1, [sp, #56]
    11e4:	ldrh	w1, [x1, #20]
    11e8:	lsr	x0, x0, x1
    11ec:	str	x0, [sp, #80]
    11f0:	ldr	x0, [sp, #56]
    11f4:	ldrh	w0, [x0, #20]
    11f8:	mov	w1, w0
    11fc:	ldr	x0, [sp, #32]
    1200:	lsr	x0, x0, x1
    1204:	str	x0, [sp, #104]
    1208:	b	13ac <grub_mod_init-0xb0c>
    120c:	ldr	x0, [sp, #56]
    1210:	ldr	w0, [x0, #16]
    1214:	sub	w0, w0, #0x1
    1218:	ldr	x1, [sp, #32]
    121c:	and	w0, w0, w1
    1220:	str	w0, [sp, #76]
    1224:	ldr	x0, [sp, #56]
    1228:	ldr	w0, [x0, #16]
    122c:	str	w0, [sp, #100]
    1230:	str	xzr, [sp, #88]
    1234:	ldr	x0, [sp, #56]
    1238:	add	x0, x0, #0x2b0
    123c:	ldr	x2, [sp, #104]
    1240:	mov	x1, x0
    1244:	ldr	x0, [sp, #56]
    1248:	bl	728 <grub_mod_init-0x1790>
    124c:	str	x0, [sp, #64]
    1250:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1254:	add	x0, x0, #0x0
    1258:	ldr	x0, [x0]
    125c:	ldr	w0, [x0]
    1260:	cmp	w0, #0x0
    1264:	b.eq	1270 <grub_mod_init-0xc48>  // b.none
    1268:	mov	x0, #0xffffffffffffffff    	// #-1
    126c:	b	13c0 <grub_mod_init-0xaf8>
    1270:	ldr	x0, [sp, #80]
    1274:	sub	x0, x0, #0x1
    1278:	ldr	x1, [sp, #104]
    127c:	cmp	x1, x0
    1280:	b.ne	12c0 <grub_mod_init-0xbf8>  // b.any
    1284:	ldr	x0, [sp, #24]
    1288:	mov	w1, w0
    128c:	ldr	x0, [sp, #32]
    1290:	add	w1, w1, w0
    1294:	ldr	x0, [sp, #56]
    1298:	ldr	w0, [x0, #16]
    129c:	sub	w0, w0, #0x1
    12a0:	and	w0, w1, w0
    12a4:	str	w0, [sp, #100]
    12a8:	ldr	w0, [sp, #100]
    12ac:	cmp	w0, #0x0
    12b0:	b.ne	12c0 <grub_mod_init-0xbf8>  // b.any
    12b4:	ldr	x0, [sp, #56]
    12b8:	ldr	w0, [x0, #16]
    12bc:	str	w0, [sp, #100]
    12c0:	ldr	x0, [sp, #56]
    12c4:	ldrh	w0, [x0, #20]
    12c8:	mov	w1, w0
    12cc:	ldr	x0, [sp, #32]
    12d0:	lsr	x0, x0, x1
    12d4:	ldr	x1, [sp, #104]
    12d8:	cmp	x1, x0
    12dc:	b.ne	12fc <grub_mod_init-0xbbc>  // b.any
    12e0:	ldr	w0, [sp, #76]
    12e4:	str	x0, [sp, #88]
    12e8:	ldr	x0, [sp, #88]
    12ec:	mov	w1, w0
    12f0:	ldr	w0, [sp, #100]
    12f4:	sub	w0, w0, w1
    12f8:	str	w0, [sp, #100]
    12fc:	ldr	x0, [sp, #56]
    1300:	ldr	x0, [x0, #168]
    1304:	ldr	x1, [sp, #48]
    1308:	str	x1, [x0, #48]
    130c:	ldr	x0, [sp, #56]
    1310:	ldr	x0, [x0, #168]
    1314:	ldr	x1, [sp, #40]
    1318:	str	x1, [x0, #56]
    131c:	ldr	x0, [sp, #56]
    1320:	ldr	x5, [x0, #168]
    1324:	ldr	x0, [sp, #56]
    1328:	ldrh	w0, [x0, #20]
    132c:	sub	w0, w0, #0x9
    1330:	ldr	x1, [sp, #64]
    1334:	lsl	x0, x1, x0
    1338:	ldr	w1, [sp, #100]
    133c:	ldr	x4, [sp, #16]
    1340:	mov	x3, x1
    1344:	ldr	x2, [sp, #88]
    1348:	mov	x1, x0
    134c:	mov	x0, x5
    1350:	bl	0 <grub_disk_read>
    1354:	ldr	x0, [sp, #56]
    1358:	ldr	x0, [x0, #168]
    135c:	str	xzr, [x0, #48]
    1360:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1364:	add	x0, x0, #0x0
    1368:	ldr	x0, [x0]
    136c:	ldr	w0, [x0]
    1370:	cmp	w0, #0x0
    1374:	b.eq	1380 <grub_mod_init-0xb38>  // b.none
    1378:	mov	x0, #0xffffffffffffffff    	// #-1
    137c:	b	13c0 <grub_mod_init-0xaf8>
    1380:	ldr	x0, [sp, #56]
    1384:	ldr	w0, [x0, #16]
    1388:	mov	w1, w0
    138c:	ldr	x0, [sp, #88]
    1390:	sub	x0, x1, x0
    1394:	ldr	x1, [sp, #16]
    1398:	add	x0, x1, x0
    139c:	str	x0, [sp, #16]
    13a0:	ldr	x0, [sp, #104]
    13a4:	add	x0, x0, #0x1
    13a8:	str	x0, [sp, #104]
    13ac:	ldr	x1, [sp, #104]
    13b0:	ldr	x0, [sp, #80]
    13b4:	cmp	x1, x0
    13b8:	b.cc	120c <grub_mod_init-0xcac>  // b.lo, b.ul, b.last
    13bc:	ldr	x0, [sp, #24]
    13c0:	ldp	x29, x30, [sp], #112
    13c4:	ret
	...
    13d0:	stp	x29, x30, [sp, #-96]!
    13d4:	mov	x29, sp
    13d8:	str	x0, [sp, #40]
    13dc:	str	x1, [sp, #32]
    13e0:	str	w2, [sp, #28]
    13e4:	ldr	x0, [sp, #32]
    13e8:	str	x0, [sp, #80]
    13ec:	str	xzr, [sp, #72]
    13f0:	ldr	x0, [sp, #40]
    13f4:	add	x0, x0, #0x2b0
    13f8:	mov	x2, x0
    13fc:	ldr	w1, [sp, #28]
    1400:	ldr	x0, [sp, #40]
    1404:	bl	768 <grub_mod_init-0x1750>
    1408:	cmp	w0, #0x0
    140c:	b.eq	1424 <grub_mod_init-0xa94>  // b.none
    1410:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1414:	add	x0, x0, #0x0
    1418:	ldr	x0, [x0]
    141c:	ldr	w0, [x0]
    1420:	b	16f4 <grub_mod_init-0x7c4>
    1424:	ldr	x0, [sp, #80]
    1428:	str	x0, [sp, #88]
    142c:	b	143c <grub_mod_init-0xa7c>
    1430:	ldr	x0, [sp, #88]
    1434:	add	x0, x0, #0x1
    1438:	str	x0, [sp, #88]
    143c:	ldr	x0, [sp, #88]
    1440:	ldrb	w0, [x0]
    1444:	cmp	w0, #0x2f
    1448:	b.eq	1430 <grub_mod_init-0xa88>  // b.none
    144c:	ldr	x0, [sp, #88]
    1450:	ldrb	w0, [x0]
    1454:	cmp	w0, #0x0
    1458:	b.ne	1464 <grub_mod_init-0xa54>  // b.any
    145c:	mov	w0, #0x0                   	// #0
    1460:	b	16f4 <grub_mod_init-0x7c4>
    1464:	ldr	x0, [sp, #88]
    1468:	str	x0, [sp, #80]
    146c:	b	147c <grub_mod_init-0xa3c>
    1470:	ldr	x0, [sp, #80]
    1474:	add	x0, x0, #0x1
    1478:	str	x0, [sp, #80]
    147c:	ldr	x0, [sp, #80]
    1480:	ldrb	w0, [x0]
    1484:	cmp	w0, #0x0
    1488:	b.eq	149c <grub_mod_init-0xa1c>  // b.none
    148c:	ldr	x0, [sp, #80]
    1490:	ldrb	w0, [x0]
    1494:	cmp	w0, #0x2f
    1498:	b.ne	1470 <grub_mod_init-0xa48>  // b.any
    149c:	ldr	x0, [sp, #88]
    14a0:	ldrb	w0, [x0]
    14a4:	cmp	w0, #0x2e
    14a8:	b.ne	14c0 <grub_mod_init-0x9f8>  // b.any
    14ac:	ldr	x0, [sp, #88]
    14b0:	add	x0, x0, #0x1
    14b4:	ldr	x1, [sp, #80]
    14b8:	cmp	x1, x0
    14bc:	b.eq	16d4 <grub_mod_init-0x7e4>  // b.none
    14c0:	ldr	x0, [sp, #88]
    14c4:	ldrb	w0, [x0]
    14c8:	cmp	w0, #0x2e
    14cc:	b.ne	1538 <grub_mod_init-0x980>  // b.any
    14d0:	ldr	x0, [sp, #88]
    14d4:	add	x0, x0, #0x1
    14d8:	ldrb	w0, [x0]
    14dc:	cmp	w0, #0x2e
    14e0:	b.ne	1538 <grub_mod_init-0x980>  // b.any
    14e4:	ldr	x0, [sp, #88]
    14e8:	add	x0, x0, #0x2
    14ec:	ldr	x1, [sp, #80]
    14f0:	cmp	x1, x0
    14f4:	b.ne	1538 <grub_mod_init-0x980>  // b.any
    14f8:	ldr	x0, [sp, #40]
    14fc:	ldr	w0, [x0, #932]
    1500:	str	w0, [sp, #68]
    1504:	ldr	x0, [sp, #40]
    1508:	add	x0, x0, #0x2b0
    150c:	mov	x2, x0
    1510:	ldr	w1, [sp, #68]
    1514:	ldr	x0, [sp, #40]
    1518:	bl	768 <grub_mod_init-0x1750>
    151c:	cmp	w0, #0x0
    1520:	b.eq	16dc <grub_mod_init-0x7dc>  // b.none
    1524:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1528:	add	x0, x0, #0x0
    152c:	ldr	x0, [x0]
    1530:	ldr	w0, [x0]
    1534:	b	16f4 <grub_mod_init-0x7c4>
    1538:	ldr	x0, [sp, #40]
    153c:	add	x0, x0, #0x2b0
    1540:	mov	x1, x0
    1544:	ldr	x0, [sp, #40]
    1548:	bl	ae0 <grub_mod_init-0x13d8>
    154c:	str	x0, [sp, #72]
    1550:	ldr	x0, [sp, #72]
    1554:	cmp	x0, #0x0
    1558:	b.ne	1570 <grub_mod_init-0x948>  // b.any
    155c:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1560:	add	x0, x0, #0x0
    1564:	ldr	x0, [x0]
    1568:	ldr	w0, [x0]
    156c:	b	16f4 <grub_mod_init-0x7c4>
    1570:	ldr	x0, [sp, #72]
    1574:	bl	e14 <grub_mod_init-0x10a4>
    1578:	cmp	w0, #0xb
    157c:	b.ne	15a4 <grub_mod_init-0x914>  // b.any
    1580:	ldr	x0, [sp, #72]
    1584:	bl	d80 <grub_mod_init-0x1138>
    1588:	ldr	x2, [sp, #32]
    158c:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1590:	add	x0, x0, #0x0
    1594:	ldr	x1, [x0]
    1598:	mov	w0, #0x5                   	// #5
    159c:	bl	0 <grub_error>
    15a0:	b	16f4 <grub_mod_init-0x7c4>
    15a4:	ldr	x0, [sp, #40]
    15a8:	ldr	w0, [x0, #1200]
    15ac:	cmp	w0, #0x0
    15b0:	b.eq	15e8 <grub_mod_init-0x8d0>  // b.none
    15b4:	ldr	x0, [sp, #72]
    15b8:	add	x3, x0, #0x38
    15bc:	ldr	x1, [sp, #80]
    15c0:	ldr	x0, [sp, #88]
    15c4:	sub	x0, x1, x0
    15c8:	mov	x2, x0
    15cc:	mov	x1, x3
    15d0:	ldr	x0, [sp, #88]
    15d4:	bl	bc <grub_mod_init-0x1dfc>
    15d8:	cmp	w0, #0x0
    15dc:	cset	w0, eq  // eq = none
    15e0:	and	w0, w0, #0xff
    15e4:	b	1618 <grub_mod_init-0x8a0>
    15e8:	ldr	x0, [sp, #72]
    15ec:	add	x3, x0, #0x38
    15f0:	ldr	x1, [sp, #80]
    15f4:	ldr	x0, [sp, #88]
    15f8:	sub	x0, x1, x0
    15fc:	mov	x2, x0
    1600:	mov	x1, x3
    1604:	ldr	x0, [sp, #88]
    1608:	bl	0 <grub_strncmp>
    160c:	cmp	w0, #0x0
    1610:	cset	w0, eq  // eq = none
    1614:	and	w0, w0, #0xff
    1618:	cmp	w0, #0x0
    161c:	b.eq	1570 <grub_mod_init-0x948>  // b.none
    1620:	ldr	x1, [sp, #80]
    1624:	ldr	x0, [sp, #88]
    1628:	sub	x0, x1, x0
    162c:	ldr	x1, [sp, #72]
    1630:	add	x0, x1, x0
    1634:	ldrb	w0, [x0, #56]
    1638:	cmp	w0, #0x0
    163c:	b.ne	1570 <grub_mod_init-0x948>  // b.any
    1640:	ldr	x0, [sp, #72]
    1644:	add	x0, x0, #0x400
    1648:	ldur	w0, [x0, #57]
    164c:	str	w0, [sp, #64]
    1650:	ldr	x0, [sp, #40]
    1654:	ldr	w0, [x0, #696]
    1658:	str	w0, [sp, #60]
    165c:	ldr	x0, [sp, #72]
    1660:	bl	d80 <grub_mod_init-0x1138>
    1664:	str	xzr, [sp, #72]
    1668:	ldr	x0, [sp, #40]
    166c:	add	x0, x0, #0x2b0
    1670:	mov	x2, x0
    1674:	ldr	w1, [sp, #64]
    1678:	ldr	x0, [sp, #40]
    167c:	bl	768 <grub_mod_init-0x1750>
    1680:	cmp	w0, #0x0
    1684:	b.ne	16e4 <grub_mod_init-0x7d4>  // b.any
    1688:	ldr	x0, [sp, #40]
    168c:	ldr	w0, [x0, #740]
    1690:	and	w0, w0, #0xf000
    1694:	cmp	w0, #0xa, lsl #12
    1698:	b.ne	16ec <grub_mod_init-0x7cc>  // b.any
    169c:	ldr	w1, [sp, #60]
    16a0:	ldr	x0, [sp, #40]
    16a4:	bl	1710 <grub_mod_init-0x7a8>
    16a8:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    16ac:	add	x0, x0, #0x0
    16b0:	ldr	x0, [x0]
    16b4:	ldr	w0, [x0]
    16b8:	cmp	w0, #0x0
    16bc:	b.eq	16ec <grub_mod_init-0x7cc>  // b.none
    16c0:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    16c4:	add	x0, x0, #0x0
    16c8:	ldr	x0, [x0]
    16cc:	ldr	w0, [x0]
    16d0:	b	16f4 <grub_mod_init-0x7c4>
    16d4:	nop
    16d8:	b	1424 <grub_mod_init-0xa94>
    16dc:	nop
    16e0:	b	1424 <grub_mod_init-0xa94>
    16e4:	nop
    16e8:	b	1424 <grub_mod_init-0xa94>
    16ec:	nop
    16f0:	b	1424 <grub_mod_init-0xa94>
    16f4:	ldp	x29, x30, [sp], #96
    16f8:	ret
    16fc:	nop
	...
    1710:	stp	x29, x30, [sp, #-48]!
    1714:	mov	x29, sp
    1718:	str	x0, [sp, #24]
    171c:	str	w1, [sp, #20]
    1720:	ldr	x0, [sp, #24]
    1724:	ldr	x0, [x0, #712]
    1728:	str	x0, [sp, #40]
    172c:	ldr	x0, [sp, #24]
    1730:	ldr	w0, [x0, #1208]
    1734:	add	w1, w0, #0x1
    1738:	ldr	x0, [sp, #24]
    173c:	str	w1, [x0, #1208]
    1740:	ldr	x0, [sp, #24]
    1744:	ldr	w0, [x0, #1208]
    1748:	cmp	w0, #0x8
    174c:	b.le	1768 <grub_mod_init-0x750>
    1750:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1754:	add	x0, x0, #0x0
    1758:	ldr	x1, [x0]
    175c:	mov	w0, #0x19                  	// #25
    1760:	bl	0 <grub_error>
    1764:	b	1850 <grub_mod_init-0x668>
    1768:	ldr	x0, [sp, #40]
    176c:	add	x0, x0, #0x1
    1770:	bl	0 <grub_malloc>
    1774:	str	x0, [sp, #32]
    1778:	ldr	x0, [sp, #32]
    177c:	cmp	x0, #0x0
    1780:	b.ne	1798 <grub_mod_init-0x720>  // b.any
    1784:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1788:	add	x0, x0, #0x0
    178c:	ldr	x0, [x0]
    1790:	ldr	w0, [x0]
    1794:	b	1850 <grub_mod_init-0x668>
    1798:	ldr	x0, [sp, #40]
    179c:	cmp	x0, #0x100
    17a0:	b.hi	17c0 <grub_mod_init-0x6f8>  // b.pmore
    17a4:	ldr	x0, [sp, #24]
    17a8:	add	x0, x0, #0x3b0
    17ac:	ldr	x2, [sp, #40]
    17b0:	mov	x1, x0
    17b4:	ldr	x0, [sp, #32]
    17b8:	bl	58 <grub_mod_init-0x1e60>
    17bc:	b	1800 <grub_mod_init-0x6b8>
    17c0:	ldr	x5, [sp, #32]
    17c4:	ldr	x4, [sp, #40]
    17c8:	mov	x3, #0x0                   	// #0
    17cc:	mov	x2, #0x0                   	// #0
    17d0:	mov	x1, #0x0                   	// #0
    17d4:	ldr	x0, [sp, #24]
    17d8:	bl	11a0 <grub_mod_init-0xd18>
    17dc:	cmp	x0, #0x0
    17e0:	b.ge	1800 <grub_mod_init-0x6b8>  // b.tcont
    17e4:	ldr	x0, [sp, #32]
    17e8:	bl	0 <grub_free>
    17ec:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    17f0:	add	x0, x0, #0x0
    17f4:	ldr	x0, [x0]
    17f8:	ldr	w0, [x0]
    17fc:	b	1850 <grub_mod_init-0x668>
    1800:	ldr	x1, [sp, #32]
    1804:	ldr	x0, [sp, #40]
    1808:	add	x0, x1, x0
    180c:	strb	wzr, [x0]
    1810:	ldr	x0, [sp, #32]
    1814:	ldrb	w0, [x0]
    1818:	cmp	w0, #0x2f
    181c:	b.ne	1828 <grub_mod_init-0x690>  // b.any
    1820:	mov	w0, #0x2                   	// #2
    1824:	str	w0, [sp, #20]
    1828:	ldr	w2, [sp, #20]
    182c:	ldr	x1, [sp, #32]
    1830:	ldr	x0, [sp, #24]
    1834:	bl	13d0 <grub_mod_init-0xae8>
    1838:	ldr	x0, [sp, #32]
    183c:	bl	0 <grub_free>
    1840:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1844:	add	x0, x0, #0x0
    1848:	ldr	x0, [x0]
    184c:	ldr	w0, [x0]
    1850:	ldp	x29, x30, [sp], #48
    1854:	ret
	...
    1868:	sub	sp, sp, #0x250
    186c:	stp	x29, x30, [sp]
    1870:	mov	x29, sp
    1874:	str	x0, [sp, #40]
    1878:	str	x1, [sp, #32]
    187c:	str	x2, [sp, #24]
    1880:	str	x3, [sp, #16]
    1884:	str	xzr, [sp, #576]
    1888:	str	xzr, [sp, #584]
    188c:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1890:	add	x0, x0, #0x0
    1894:	ldr	x0, [x0]
    1898:	ldr	x0, [x0]
    189c:	bl	0 <grub_dl_ref>
    18a0:	ldr	x0, [sp, #40]
    18a4:	ldr	x0, [x0]
    18a8:	bl	8e0 <grub_mod_init-0x15d8>
    18ac:	str	x0, [sp, #576]
    18b0:	ldr	x0, [sp, #576]
    18b4:	cmp	x0, #0x0
    18b8:	b.eq	19c4 <grub_mod_init-0x4f4>  // b.none
    18bc:	mov	w2, #0x2                   	// #2
    18c0:	ldr	x1, [sp, #32]
    18c4:	ldr	x0, [sp, #576]
    18c8:	bl	13d0 <grub_mod_init-0xae8>
    18cc:	cmp	w0, #0x0
    18d0:	b.ne	19cc <grub_mod_init-0x4ec>  // b.any
    18d4:	ldr	x0, [sp, #576]
    18d8:	add	x0, x0, #0x2b0
    18dc:	mov	x1, x0
    18e0:	ldr	x0, [sp, #576]
    18e4:	bl	ae0 <grub_mod_init-0x13d8>
    18e8:	str	x0, [sp, #584]
    18ec:	ldr	x0, [sp, #584]
    18f0:	cmp	x0, #0x0
    18f4:	b.eq	19d4 <grub_mod_init-0x4e4>  // b.none
    18f8:	b	1988 <grub_mod_init-0x530>
    18fc:	add	x0, sp, #0x230
    1900:	mov	x2, #0x10                  	// #16
    1904:	mov	w1, #0x0                   	// #0
    1908:	bl	0 <grub_memset>
    190c:	ldr	x0, [sp, #584]
    1910:	add	x0, x0, #0x400
    1914:	ldur	w0, [x0, #57]
    1918:	add	x1, sp, #0x30
    191c:	mov	x2, x1
    1920:	mov	w1, w0
    1924:	ldr	x0, [sp, #576]
    1928:	bl	768 <grub_mod_init-0x1750>
    192c:	cmp	w0, #0x0
    1930:	b.ne	19dc <grub_mod_init-0x4dc>  // b.any
    1934:	ldr	w0, [sp, #100]
    1938:	and	w0, w0, #0xf000
    193c:	cmp	w0, #0x4, lsl #12
    1940:	cset	w0, eq  // eq = none
    1944:	and	w1, w0, #0xff
    1948:	ldrb	w0, [sp, #560]
    194c:	bfxil	w0, w1, #0, #1
    1950:	strb	w0, [sp, #560]
    1954:	ldrb	w0, [sp, #560]
    1958:	orr	w0, w0, #0x2
    195c:	strb	w0, [sp, #560]
    1960:	ldr	w0, [sp, #120]
    1964:	str	w0, [sp, #564]
    1968:	ldr	x0, [sp, #584]
    196c:	add	x0, x0, #0x38
    1970:	add	x1, sp, #0x230
    1974:	ldr	x3, [sp, #24]
    1978:	ldr	x2, [sp, #16]
    197c:	blr	x3
    1980:	cmp	w0, #0x0
    1984:	b.ne	19e4 <grub_mod_init-0x4d4>  // b.any
    1988:	ldr	x0, [sp, #584]
    198c:	bl	e14 <grub_mod_init-0x10a4>
    1990:	cmp	w0, #0xb
    1994:	b.ne	18fc <grub_mod_init-0x5bc>  // b.any
    1998:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    199c:	add	x0, x0, #0x0
    19a0:	ldr	x0, [x0]
    19a4:	ldr	w0, [x0]
    19a8:	cmp	w0, #0xb
    19ac:	b.ne	19ec <grub_mod_init-0x4cc>  // b.any
    19b0:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    19b4:	add	x0, x0, #0x0
    19b8:	ldr	x0, [x0]
    19bc:	str	wzr, [x0]
    19c0:	b	19f0 <grub_mod_init-0x4c8>
    19c4:	nop
    19c8:	b	19f0 <grub_mod_init-0x4c8>
    19cc:	nop
    19d0:	b	19f0 <grub_mod_init-0x4c8>
    19d4:	nop
    19d8:	b	19f0 <grub_mod_init-0x4c8>
    19dc:	nop
    19e0:	b	19f0 <grub_mod_init-0x4c8>
    19e4:	nop
    19e8:	b	19f0 <grub_mod_init-0x4c8>
    19ec:	nop
    19f0:	ldr	x0, [sp, #584]
    19f4:	bl	d80 <grub_mod_init-0x1138>
    19f8:	ldr	x0, [sp, #576]
    19fc:	bl	0 <grub_free>
    1a00:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1a04:	add	x0, x0, #0x0
    1a08:	ldr	x0, [x0]
    1a0c:	ldr	x0, [x0]
    1a10:	bl	0 <grub_dl_unref>
    1a14:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1a18:	add	x0, x0, #0x0
    1a1c:	ldr	x0, [x0]
    1a20:	ldr	w0, [x0]
    1a24:	ldp	x29, x30, [sp]
    1a28:	add	sp, sp, #0x250
    1a2c:	ret
	...
    1a40:	stp	x29, x30, [sp, #-48]!
    1a44:	mov	x29, sp
    1a48:	str	x0, [sp, #24]
    1a4c:	str	x1, [sp, #16]
    1a50:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1a54:	add	x0, x0, #0x0
    1a58:	ldr	x0, [x0]
    1a5c:	ldr	x0, [x0]
    1a60:	bl	0 <grub_dl_ref>
    1a64:	ldr	x0, [sp, #24]
    1a68:	ldr	x0, [x0, #8]
    1a6c:	ldr	x0, [x0]
    1a70:	bl	8e0 <grub_mod_init-0x15d8>
    1a74:	str	x0, [sp, #40]
    1a78:	ldr	x0, [sp, #40]
    1a7c:	cmp	x0, #0x0
    1a80:	b.eq	1afc <grub_mod_init-0x3bc>  // b.none
    1a84:	mov	w2, #0x2                   	// #2
    1a88:	ldr	x1, [sp, #16]
    1a8c:	ldr	x0, [sp, #40]
    1a90:	bl	13d0 <grub_mod_init-0xae8>
    1a94:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1a98:	add	x0, x0, #0x0
    1a9c:	ldr	x0, [x0]
    1aa0:	ldr	w0, [x0]
    1aa4:	cmp	w0, #0x0
    1aa8:	b.ne	1b04 <grub_mod_init-0x3b4>  // b.any
    1aac:	ldr	x0, [sp, #40]
    1ab0:	ldr	w0, [x0, #740]
    1ab4:	and	w0, w0, #0xf000
    1ab8:	cmp	w0, #0x8, lsl #12
    1abc:	b.eq	1ad8 <grub_mod_init-0x3e0>  // b.none
    1ac0:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1ac4:	add	x0, x0, #0x0
    1ac8:	ldr	x1, [x0]
    1acc:	mov	w0, #0x4                   	// #4
    1ad0:	bl	0 <grub_error>
    1ad4:	b	1b08 <grub_mod_init-0x3b0>
    1ad8:	ldr	x0, [sp, #24]
    1adc:	ldr	x1, [sp, #40]
    1ae0:	str	x1, [x0, #80]
    1ae4:	ldr	x0, [sp, #40]
    1ae8:	ldr	x1, [x0, #712]
    1aec:	ldr	x0, [sp, #24]
    1af0:	str	x1, [x0, #64]
    1af4:	mov	w0, #0x0                   	// #0
    1af8:	b	1b34 <grub_mod_init-0x384>
    1afc:	nop
    1b00:	b	1b08 <grub_mod_init-0x3b0>
    1b04:	nop
    1b08:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1b0c:	add	x0, x0, #0x0
    1b10:	ldr	x0, [x0]
    1b14:	ldr	x0, [x0]
    1b18:	bl	0 <grub_dl_unref>
    1b1c:	ldr	x0, [sp, #40]
    1b20:	bl	0 <grub_free>
    1b24:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1b28:	add	x0, x0, #0x0
    1b2c:	ldr	x0, [x0]
    1b30:	ldr	w0, [x0]
    1b34:	ldp	x29, x30, [sp], #48
    1b38:	ret
    1b3c:	nop
	...
    1b58:	stp	x29, x30, [sp, #-64]!
    1b5c:	mov	x29, sp
    1b60:	str	x0, [sp, #40]
    1b64:	str	x1, [sp, #32]
    1b68:	str	x2, [sp, #24]
    1b6c:	ldr	x0, [sp, #40]
    1b70:	ldr	x0, [x0, #80]
    1b74:	str	x0, [sp, #56]
    1b78:	ldr	x0, [sp, #40]
    1b7c:	ldr	x1, [x0, #88]
    1b80:	ldr	x0, [sp, #40]
    1b84:	ldr	x2, [x0, #96]
    1b88:	ldr	x0, [sp, #40]
    1b8c:	ldr	x0, [x0, #24]
    1b90:	ldr	x5, [sp, #32]
    1b94:	ldr	x4, [sp, #24]
    1b98:	mov	x3, x0
    1b9c:	ldr	x0, [sp, #56]
    1ba0:	bl	11a0 <grub_mod_init-0xd18>
    1ba4:	ldp	x29, x30, [sp], #64
    1ba8:	ret
    1bac:	stp	x29, x30, [sp, #-32]!
    1bb0:	mov	x29, sp
    1bb4:	str	x0, [sp, #24]
    1bb8:	ldr	x0, [sp, #24]
    1bbc:	ldr	x0, [x0, #80]
    1bc0:	bl	0 <grub_free>
    1bc4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1bc8:	add	x0, x0, #0x0
    1bcc:	ldr	x0, [x0]
    1bd0:	ldr	x0, [x0]
    1bd4:	bl	0 <grub_dl_unref>
    1bd8:	mov	w0, #0x0                   	// #0
    1bdc:	ldp	x29, x30, [sp], #32
    1be0:	ret
    1be4:	nop
	...
    1bf0:	sub	sp, sp, #0x80
    1bf4:	stp	x29, x30, [sp, #80]
    1bf8:	add	x29, sp, #0x50
    1bfc:	str	x0, [sp, #104]
    1c00:	str	x1, [sp, #96]
    1c04:	ldr	x0, [sp, #104]
    1c08:	ldr	x0, [x0]
    1c0c:	str	x0, [sp, #120]
    1c10:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1c14:	add	x0, x0, #0x0
    1c18:	ldr	x0, [x0]
    1c1c:	ldr	x0, [x0]
    1c20:	bl	0 <grub_dl_ref>
    1c24:	ldr	x0, [sp, #120]
    1c28:	bl	8e0 <grub_mod_init-0x15d8>
    1c2c:	str	x0, [sp, #112]
    1c30:	ldr	x0, [sp, #112]
    1c34:	cmp	x0, #0x0
    1c38:	b.eq	1d58 <grub_mod_init-0x160>  // b.none
    1c3c:	ldr	x0, [sp, #112]
    1c40:	ldrb	w0, [x0, #136]
    1c44:	mov	w9, w0
    1c48:	ldr	x0, [sp, #112]
    1c4c:	ldrb	w0, [x0, #137]
    1c50:	mov	w10, w0
    1c54:	ldr	x0, [sp, #112]
    1c58:	ldrb	w0, [x0, #138]
    1c5c:	mov	w11, w0
    1c60:	ldr	x0, [sp, #112]
    1c64:	ldrb	w0, [x0, #139]
    1c68:	mov	w12, w0
    1c6c:	ldr	x0, [sp, #112]
    1c70:	ldrb	w0, [x0, #140]
    1c74:	mov	w13, w0
    1c78:	ldr	x0, [sp, #112]
    1c7c:	ldrb	w0, [x0, #141]
    1c80:	mov	w14, w0
    1c84:	ldr	x0, [sp, #112]
    1c88:	ldrb	w0, [x0, #142]
    1c8c:	mov	w15, w0
    1c90:	ldr	x0, [sp, #112]
    1c94:	ldrb	w0, [x0, #143]
    1c98:	mov	w1, w0
    1c9c:	ldr	x0, [sp, #112]
    1ca0:	ldrb	w0, [x0, #144]
    1ca4:	mov	w2, w0
    1ca8:	ldr	x0, [sp, #112]
    1cac:	ldrb	w0, [x0, #145]
    1cb0:	mov	w3, w0
    1cb4:	ldr	x0, [sp, #112]
    1cb8:	ldrb	w0, [x0, #146]
    1cbc:	mov	w4, w0
    1cc0:	ldr	x0, [sp, #112]
    1cc4:	ldrb	w0, [x0, #147]
    1cc8:	mov	w5, w0
    1ccc:	ldr	x0, [sp, #112]
    1cd0:	ldrb	w0, [x0, #148]
    1cd4:	mov	w6, w0
    1cd8:	ldr	x0, [sp, #112]
    1cdc:	ldrb	w0, [x0, #149]
    1ce0:	mov	w7, w0
    1ce4:	ldr	x0, [sp, #112]
    1ce8:	ldrb	w0, [x0, #150]
    1cec:	mov	w8, w0
    1cf0:	ldr	x0, [sp, #112]
    1cf4:	ldrb	w0, [x0, #151]
    1cf8:	str	w0, [sp, #64]
    1cfc:	str	w8, [sp, #56]
    1d00:	str	w7, [sp, #48]
    1d04:	str	w6, [sp, #40]
    1d08:	str	w5, [sp, #32]
    1d0c:	str	w4, [sp, #24]
    1d10:	str	w3, [sp, #16]
    1d14:	str	w2, [sp, #8]
    1d18:	str	w1, [sp]
    1d1c:	mov	w7, w15
    1d20:	mov	w6, w14
    1d24:	mov	w5, w13
    1d28:	mov	w4, w12
    1d2c:	mov	w3, w11
    1d30:	mov	w2, w10
    1d34:	mov	w1, w9
    1d38:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1d3c:	add	x0, x0, #0x0
    1d40:	ldr	x0, [x0]
    1d44:	bl	0 <grub_xasprintf>
    1d48:	mov	x1, x0
    1d4c:	ldr	x0, [sp, #96]
    1d50:	str	x1, [x0]
    1d54:	b	1d60 <grub_mod_init-0x158>
    1d58:	ldr	x0, [sp, #96]
    1d5c:	str	xzr, [x0]
    1d60:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1d64:	add	x0, x0, #0x0
    1d68:	ldr	x0, [x0]
    1d6c:	ldr	x0, [x0]
    1d70:	bl	0 <grub_dl_unref>
    1d74:	ldr	x0, [sp, #112]
    1d78:	bl	0 <grub_free>
    1d7c:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1d80:	add	x0, x0, #0x0
    1d84:	ldr	x0, [x0]
    1d88:	ldr	w0, [x0]
    1d8c:	ldp	x29, x30, [sp, #80]
    1d90:	add	sp, sp, #0x80
    1d94:	ret
	...
    1db0:	stp	x29, x30, [sp, #-48]!
    1db4:	mov	x29, sp
    1db8:	str	x0, [sp, #24]
    1dbc:	str	x1, [sp, #16]
    1dc0:	ldr	x0, [sp, #24]
    1dc4:	ldr	x0, [x0]
    1dc8:	bl	8e0 <grub_mod_init-0x15d8>
    1dcc:	str	x0, [sp, #32]
    1dd0:	ldr	x0, [sp, #32]
    1dd4:	cmp	x0, #0x0
    1dd8:	b.eq	1e88 <grub_mod_init-0x30>  // b.none
    1ddc:	ldr	x0, [sp, #32]
    1de0:	ldrb	w0, [x0, #152]
    1de4:	cmp	w0, #0x1f
    1de8:	b.hi	1e68 <grub_mod_init-0x50>  // b.pmore
    1dec:	ldr	x0, [sp, #32]
    1df0:	add	x0, x0, #0x65
    1df4:	add	x0, x0, #0xa
    1df8:	str	x0, [sp, #40]
    1dfc:	b	1e0c <grub_mod_init-0xac>
    1e00:	ldr	x0, [sp, #40]
    1e04:	sub	x0, x0, #0x1
    1e08:	str	x0, [sp, #40]
    1e0c:	ldr	x0, [sp, #32]
    1e10:	add	x0, x0, #0x65
    1e14:	ldr	x1, [sp, #40]
    1e18:	cmp	x1, x0
    1e1c:	b.cc	1e30 <grub_mod_init-0x88>  // b.lo, b.ul, b.last
    1e20:	ldr	x0, [sp, #40]
    1e24:	ldrb	w0, [x0]
    1e28:	cmp	w0, #0x20
    1e2c:	b.eq	1e00 <grub_mod_init-0xb8>  // b.none
    1e30:	ldr	x0, [sp, #32]
    1e34:	add	x2, x0, #0x65
    1e38:	ldr	x0, [sp, #32]
    1e3c:	add	x0, x0, #0x65
    1e40:	ldr	x1, [sp, #40]
    1e44:	sub	x0, x1, x0
    1e48:	add	x0, x0, #0x1
    1e4c:	mov	x1, x0
    1e50:	mov	x0, x2
    1e54:	bl	0 <grub_strndup>
    1e58:	mov	x1, x0
    1e5c:	ldr	x0, [sp, #16]
    1e60:	str	x1, [x0]
    1e64:	b	1e90 <grub_mod_init-0x28>
    1e68:	ldr	x0, [sp, #32]
    1e6c:	add	x0, x0, #0x98
    1e70:	mov	x1, #0x10                  	// #16
    1e74:	bl	0 <grub_strndup>
    1e78:	mov	x1, x0
    1e7c:	ldr	x0, [sp, #16]
    1e80:	str	x1, [x0]
    1e84:	b	1e90 <grub_mod_init-0x28>
    1e88:	ldr	x0, [sp, #16]
    1e8c:	str	xzr, [x0]
    1e90:	ldr	x0, [sp, #32]
    1e94:	bl	0 <grub_free>
    1e98:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1e9c:	add	x0, x0, #0x0
    1ea0:	ldr	x0, [x0]
    1ea4:	ldr	w0, [x0]
    1ea8:	ldp	x29, x30, [sp], #48
    1eac:	ret
	...

0000000000001eb8 <grub_mod_init>:
    1eb8:	stp	x29, x30, [sp, #-32]!
    1ebc:	mov	x29, sp
    1ec0:	str	x0, [sp, #24]
    1ec4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1ec8:	add	x0, x0, #0x0
    1ecc:	ldr	x0, [x0]
    1ed0:	bl	0 <grub_mod_init-0x1eb8>
    1ed4:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1ed8:	add	x0, x0, #0x0
    1edc:	ldr	x0, [x0]
    1ee0:	ldr	x1, [sp, #24]
    1ee4:	str	x1, [x0]
    1ee8:	nop
    1eec:	ldp	x29, x30, [sp], #32
    1ef0:	ret
    1ef4:	nop
	...

0000000000001f08 <grub_mod_fini>:
    1f08:	stp	x29, x30, [sp, #-16]!
    1f0c:	mov	x29, sp
    1f10:	adrp	x0, 0 <grub_mod_init-0x1eb8>
    1f14:	add	x0, x0, #0x0
    1f18:	ldr	x0, [x0]
    1f1c:	bl	38 <grub_mod_init-0x1e80>
    1f20:	nop
    1f24:	ldp	x29, x30, [sp], #16
    1f28:	ret
    1f2c:	nop
	...
