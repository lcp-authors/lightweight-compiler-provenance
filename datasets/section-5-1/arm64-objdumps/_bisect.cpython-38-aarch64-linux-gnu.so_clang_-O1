
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0x102fc>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0xd4>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	nop
     c48:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c4c:	add	x0, x0, #0x228
     c50:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c54:	add	x1, x1, #0x228
     c58:	cmp	x1, x0
     c5c:	b.eq	c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>  // b.none
     c60:	adrp	x1, 11000 <PyInit__bisect@@Base+0x102fc>
     c64:	ldr	x1, [x1, #4016]
     c68:	cbz	x1, c74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x54>
     c6c:	mov	x16, x1
     c70:	br	x16
     c74:	ret
     c78:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     c7c:	add	x0, x0, #0x228
     c80:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     c84:	add	x1, x1, #0x228
     c88:	sub	x1, x1, x0
     c8c:	lsr	x2, x1, #63
     c90:	add	x1, x2, x1, asr #3
     c94:	cmp	xzr, x1, asr #1
     c98:	asr	x1, x1, #1
     c9c:	b.eq	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>  // b.none
     ca0:	adrp	x2, 11000 <PyInit__bisect@@Base+0x102fc>
     ca4:	ldr	x2, [x2, #4056]
     ca8:	cbz	x2, cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     cac:	mov	x16, x2
     cb0:	br	x16
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-32]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	adrp	x19, 12000 <PyInit__bisect@@Base+0x112fc>
     cc8:	ldrb	w0, [x19, #552]
     ccc:	cbnz	w0, cf4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xd4>
     cd0:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     cd4:	ldr	x0, [x0, #4024]
     cd8:	cbz	x0, ce8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xc8>
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     ce0:	ldr	x0, [x0, #96]
     ce4:	bl	b80 <__cxa_finalize@plt>
     ce8:	bl	c48 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x28>
     cec:	mov	w0, #0x1                   	// #1
     cf0:	strb	w0, [x19, #552]
     cf4:	ldr	x19, [sp, #16]
     cf8:	ldp	x29, x30, [sp], #32
     cfc:	ret
     d00:	b	c78 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58>

0000000000000d04 <PyInit__bisect@@Base>:
     d04:	stp	x29, x30, [sp, #-16]!
     d08:	mov	x29, sp
     d0c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x112fc>
     d10:	add	x0, x0, #0x68
     d14:	mov	w1, #0x3f5                 	// #1013
     d18:	bl	c00 <PyModule_Create2@plt>
     d1c:	ldp	x29, x30, [sp], #16
     d20:	ret
     d24:	sub	sp, sp, #0x30
     d28:	stp	x29, x30, [sp, #32]
     d2c:	add	x29, sp, #0x20
     d30:	mov	x8, #0xffffffffffffffff    	// #-1
     d34:	stp	x8, xzr, [sp]
     d38:	cbnz	x2, d5c <PyInit__bisect@@Base+0x58>
     d3c:	ldr	x8, [x1, #16]
     d40:	cmp	x8, #0x2
     d44:	b.ne	d5c <PyInit__bisect@@Base+0x58>  // b.any
     d48:	ldr	x8, [x1, #24]
     d4c:	stur	x8, [x29, #-8]
     d50:	ldr	x8, [x1, #32]
     d54:	str	x8, [sp, #16]
     d58:	b	d90 <PyInit__bisect@@Base+0x8c>
     d5c:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     d60:	add	x8, x8, #0x246
     d64:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     d68:	add	x3, x3, #0x170
     d6c:	sub	x4, x29, #0x8
     d70:	add	x5, sp, #0x10
     d74:	add	x6, sp, #0x8
     d78:	mov	x7, sp
     d7c:	mov	x0, x1
     d80:	mov	x1, x2
     d84:	mov	x2, x8
     d88:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     d8c:	cbz	w0, dac <PyInit__bisect@@Base+0xa8>
     d90:	ldur	x0, [x29, #-8]
     d94:	ldp	x2, x1, [sp, #8]
     d98:	ldr	x3, [sp]
     d9c:	bl	1034 <PyInit__bisect@@Base+0x330>
     da0:	tbnz	x0, #63, dac <PyInit__bisect@@Base+0xa8>
     da4:	bl	bc0 <PyLong_FromSsize_t@plt>
     da8:	b	db0 <PyInit__bisect@@Base+0xac>
     dac:	mov	x0, xzr
     db0:	ldp	x29, x30, [sp, #32]
     db4:	add	sp, sp, #0x30
     db8:	ret
     dbc:	sub	sp, sp, #0x30
     dc0:	stp	x29, x30, [sp, #32]
     dc4:	add	x29, sp, #0x20
     dc8:	mov	x8, #0xffffffffffffffff    	// #-1
     dcc:	stp	x8, xzr, [sp]
     dd0:	cbnz	x2, df4 <PyInit__bisect@@Base+0xf0>
     dd4:	ldr	x8, [x1, #16]
     dd8:	cmp	x8, #0x2
     ddc:	b.ne	df4 <PyInit__bisect@@Base+0xf0>  // b.any
     de0:	ldr	x8, [x1, #24]
     de4:	stur	x8, [x29, #-8]
     de8:	ldr	x8, [x1, #32]
     dec:	str	x8, [sp, #16]
     df0:	b	e28 <PyInit__bisect@@Base+0x124>
     df4:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     df8:	add	x8, x8, #0x271
     dfc:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     e00:	add	x3, x3, #0x198
     e04:	sub	x4, x29, #0x8
     e08:	add	x5, sp, #0x10
     e0c:	add	x6, sp, #0x8
     e10:	mov	x7, sp
     e14:	mov	x0, x1
     e18:	mov	x1, x2
     e1c:	mov	x2, x8
     e20:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     e24:	cbz	w0, e9c <PyInit__bisect@@Base+0x198>
     e28:	ldur	x0, [x29, #-8]
     e2c:	ldp	x2, x1, [sp, #8]
     e30:	ldr	x3, [sp]
     e34:	bl	1034 <PyInit__bisect@@Base+0x330>
     e38:	tbnz	x0, #63, e9c <PyInit__bisect@@Base+0x198>
     e3c:	mov	x3, x0
     e40:	ldur	x0, [x29, #-8]
     e44:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
     e48:	ldr	x4, [sp, #16]
     e4c:	ldr	x8, [x0, #8]
     e50:	ldr	x9, [x9, #4064]
     e54:	cmp	x8, x9
     e58:	b.eq	e7c <PyInit__bisect@@Base+0x178>  // b.none
     e5c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     e60:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     e64:	add	x1, x1, #0x1c0
     e68:	add	x2, x2, #0x284
     e6c:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     e70:	cbz	x0, ea0 <PyInit__bisect@@Base+0x19c>
     e74:	bl	110c <PyInit__bisect@@Base+0x408>
     e78:	b	e8c <PyInit__bisect@@Base+0x188>
     e7c:	mov	x1, x3
     e80:	mov	x2, x4
     e84:	bl	b70 <PyList_Insert@plt>
     e88:	tbnz	w0, #31, e9c <PyInit__bisect@@Base+0x198>
     e8c:	bl	1138 <PyInit__bisect@@Base+0x434>
     e90:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
     e94:	ldr	x0, [x0, #4048]
     e98:	b	ea0 <PyInit__bisect@@Base+0x19c>
     e9c:	mov	x0, xzr
     ea0:	ldp	x29, x30, [sp, #32]
     ea4:	add	sp, sp, #0x30
     ea8:	ret
     eac:	sub	sp, sp, #0x30
     eb0:	stp	x29, x30, [sp, #32]
     eb4:	add	x29, sp, #0x20
     eb8:	mov	x8, #0xffffffffffffffff    	// #-1
     ebc:	stp	x8, xzr, [sp]
     ec0:	cbnz	x2, ee4 <PyInit__bisect@@Base+0x1e0>
     ec4:	ldr	x8, [x1, #16]
     ec8:	cmp	x8, #0x2
     ecc:	b.ne	ee4 <PyInit__bisect@@Base+0x1e0>  // b.any
     ed0:	ldr	x8, [x1, #24]
     ed4:	stur	x8, [x29, #-8]
     ed8:	ldr	x8, [x1, #32]
     edc:	str	x8, [sp, #16]
     ee0:	b	f18 <PyInit__bisect@@Base+0x214>
     ee4:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     ee8:	add	x8, x8, #0x28e
     eec:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     ef0:	add	x3, x3, #0x1d8
     ef4:	sub	x4, x29, #0x8
     ef8:	add	x5, sp, #0x10
     efc:	add	x6, sp, #0x8
     f00:	mov	x7, sp
     f04:	mov	x0, x1
     f08:	mov	x1, x2
     f0c:	mov	x2, x8
     f10:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     f14:	cbz	w0, f34 <PyInit__bisect@@Base+0x230>
     f18:	ldur	x0, [x29, #-8]
     f1c:	ldp	x2, x1, [sp, #8]
     f20:	ldr	x3, [sp]
     f24:	bl	1150 <PyInit__bisect@@Base+0x44c>
     f28:	tbnz	x0, #63, f34 <PyInit__bisect@@Base+0x230>
     f2c:	bl	bc0 <PyLong_FromSsize_t@plt>
     f30:	b	f38 <PyInit__bisect@@Base+0x234>
     f34:	mov	x0, xzr
     f38:	ldp	x29, x30, [sp, #32]
     f3c:	add	sp, sp, #0x30
     f40:	ret
     f44:	sub	sp, sp, #0x30
     f48:	stp	x29, x30, [sp, #32]
     f4c:	add	x29, sp, #0x20
     f50:	mov	x8, #0xffffffffffffffff    	// #-1
     f54:	stp	x8, xzr, [sp]
     f58:	cbnz	x2, f7c <PyInit__bisect@@Base+0x278>
     f5c:	ldr	x8, [x1, #16]
     f60:	cmp	x8, #0x2
     f64:	b.ne	f7c <PyInit__bisect@@Base+0x278>  // b.any
     f68:	ldr	x8, [x1, #24]
     f6c:	stur	x8, [x29, #-8]
     f70:	ldr	x8, [x1, #32]
     f74:	str	x8, [sp, #16]
     f78:	b	fb0 <PyInit__bisect@@Base+0x2ac>
     f7c:	adrp	x8, 1000 <PyInit__bisect@@Base+0x2fc>
     f80:	add	x8, x8, #0x2a0
     f84:	adrp	x3, 12000 <PyInit__bisect@@Base+0x112fc>
     f88:	add	x3, x3, #0x200
     f8c:	sub	x4, x29, #0x8
     f90:	add	x5, sp, #0x10
     f94:	add	x6, sp, #0x8
     f98:	mov	x7, sp
     f9c:	mov	x0, x1
     fa0:	mov	x1, x2
     fa4:	mov	x2, x8
     fa8:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     fac:	cbz	w0, 1024 <PyInit__bisect@@Base+0x320>
     fb0:	ldur	x0, [x29, #-8]
     fb4:	ldp	x2, x1, [sp, #8]
     fb8:	ldr	x3, [sp]
     fbc:	bl	1150 <PyInit__bisect@@Base+0x44c>
     fc0:	tbnz	x0, #63, 1024 <PyInit__bisect@@Base+0x320>
     fc4:	mov	x3, x0
     fc8:	ldur	x0, [x29, #-8]
     fcc:	adrp	x9, 11000 <PyInit__bisect@@Base+0x102fc>
     fd0:	ldr	x4, [sp, #16]
     fd4:	ldr	x8, [x0, #8]
     fd8:	ldr	x9, [x9, #4064]
     fdc:	cmp	x8, x9
     fe0:	b.eq	1004 <PyInit__bisect@@Base+0x300>  // b.none
     fe4:	adrp	x1, 12000 <PyInit__bisect@@Base+0x112fc>
     fe8:	adrp	x2, 1000 <PyInit__bisect@@Base+0x2fc>
     fec:	add	x1, x1, #0x1c0
     ff0:	add	x2, x2, #0x284
     ff4:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     ff8:	cbz	x0, 1028 <PyInit__bisect@@Base+0x324>
     ffc:	bl	110c <PyInit__bisect@@Base+0x408>
    1000:	b	1014 <PyInit__bisect@@Base+0x310>
    1004:	mov	x1, x3
    1008:	mov	x2, x4
    100c:	bl	b70 <PyList_Insert@plt>
    1010:	tbnz	w0, #31, 1024 <PyInit__bisect@@Base+0x320>
    1014:	bl	1138 <PyInit__bisect@@Base+0x434>
    1018:	adrp	x0, 11000 <PyInit__bisect@@Base+0x102fc>
    101c:	ldr	x0, [x0, #4048]
    1020:	b	1028 <PyInit__bisect@@Base+0x324>
    1024:	mov	x0, xzr
    1028:	ldp	x29, x30, [sp, #32]
    102c:	add	sp, sp, #0x30
    1030:	ret
    1034:	stp	x29, x30, [sp, #-80]!
    1038:	str	x25, [sp, #16]
    103c:	stp	x24, x23, [sp, #32]
    1040:	stp	x22, x21, [sp, #48]
    1044:	stp	x20, x19, [sp, #64]
    1048:	mov	x29, sp
    104c:	tbnz	x2, #63, 10d4 <PyInit__bisect@@Base+0x3d0>
    1050:	mov	x22, x3
    1054:	mov	x19, x2
    1058:	mov	x20, x1
    105c:	mov	x21, x0
    1060:	cmn	x3, #0x1
    1064:	b.ne	1078 <PyInit__bisect@@Base+0x374>  // b.any
    1068:	mov	x0, x21
    106c:	bl	be0 <PySequence_Size@plt>
    1070:	mov	x22, x0
    1074:	tbnz	x0, #63, 10ec <PyInit__bisect@@Base+0x3e8>
    1078:	cmp	x22, x19
    107c:	b.le	10f0 <PyInit__bisect@@Base+0x3ec>
    1080:	add	x8, x19, x22
    1084:	lsr	x23, x8, #1
    1088:	mov	x0, x21
    108c:	mov	x1, x23
    1090:	bl	bb0 <PySequence_GetItem@plt>
    1094:	cbz	x0, 10ec <PyInit__bisect@@Base+0x3e8>
    1098:	mov	x24, x0
    109c:	mov	x0, x20
    10a0:	mov	x1, x24
    10a4:	mov	w2, wzr
    10a8:	bl	bd0 <PyObject_RichCompareBool@plt>
    10ac:	mov	w25, w0
    10b0:	mov	x0, x24
    10b4:	bl	110c <PyInit__bisect@@Base+0x408>
    10b8:	tbnz	w25, #31, 10ec <PyInit__bisect@@Base+0x3e8>
    10bc:	cmp	w25, #0x0
    10c0:	csel	x22, x22, x23, eq  // eq = none
    10c4:	csinc	x19, x19, x23, ne  // ne = any
    10c8:	cmp	x19, x22
    10cc:	b.lt	1080 <PyInit__bisect@@Base+0x37c>  // b.tstop
    10d0:	b	10f0 <PyInit__bisect@@Base+0x3ec>
    10d4:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    10d8:	ldr	x8, [x8, #4032]
    10dc:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    10e0:	add	x1, x1, #0x259
    10e4:	ldr	x0, [x8]
    10e8:	bl	ba0 <PyErr_SetString@plt>
    10ec:	mov	x19, #0xffffffffffffffff    	// #-1
    10f0:	mov	x0, x19
    10f4:	ldp	x20, x19, [sp, #64]
    10f8:	ldp	x22, x21, [sp, #48]
    10fc:	ldp	x24, x23, [sp, #32]
    1100:	ldr	x25, [sp, #16]
    1104:	ldp	x29, x30, [sp], #80
    1108:	ret
    110c:	stp	x29, x30, [sp, #-16]!
    1110:	mov	x29, sp
    1114:	ldr	x8, [x0]
    1118:	subs	x8, x8, #0x1
    111c:	str	x8, [x0]
    1120:	b.eq	112c <PyInit__bisect@@Base+0x428>  // b.none
    1124:	ldp	x29, x30, [sp], #16
    1128:	ret
    112c:	bl	b90 <_Py_Dealloc@plt>
    1130:	ldp	x29, x30, [sp], #16
    1134:	ret
    1138:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    113c:	ldr	x8, [x8, #4048]
    1140:	ldr	x9, [x8]
    1144:	add	x9, x9, #0x1
    1148:	str	x9, [x8]
    114c:	ret
    1150:	stp	x29, x30, [sp, #-80]!
    1154:	str	x25, [sp, #16]
    1158:	stp	x24, x23, [sp, #32]
    115c:	stp	x22, x21, [sp, #48]
    1160:	stp	x20, x19, [sp, #64]
    1164:	mov	x29, sp
    1168:	tbnz	x2, #63, 11ec <PyInit__bisect@@Base+0x4e8>
    116c:	mov	x22, x3
    1170:	mov	x19, x2
    1174:	mov	x20, x1
    1178:	mov	x21, x0
    117c:	cmn	x3, #0x1
    1180:	b.ne	1194 <PyInit__bisect@@Base+0x490>  // b.any
    1184:	mov	x0, x21
    1188:	bl	be0 <PySequence_Size@plt>
    118c:	mov	x22, x0
    1190:	tbnz	x0, #63, 1204 <PyInit__bisect@@Base+0x500>
    1194:	cmp	x22, x19
    1198:	b.le	1208 <PyInit__bisect@@Base+0x504>
    119c:	add	x8, x19, x22
    11a0:	lsr	x23, x8, #1
    11a4:	mov	x0, x21
    11a8:	mov	x1, x23
    11ac:	bl	bb0 <PySequence_GetItem@plt>
    11b0:	cbz	x0, 1204 <PyInit__bisect@@Base+0x500>
    11b4:	mov	x1, x20
    11b8:	mov	w2, wzr
    11bc:	mov	x24, x0
    11c0:	bl	bd0 <PyObject_RichCompareBool@plt>
    11c4:	mov	w25, w0
    11c8:	mov	x0, x24
    11cc:	bl	110c <PyInit__bisect@@Base+0x408>
    11d0:	tbnz	w25, #31, 1204 <PyInit__bisect@@Base+0x500>
    11d4:	cmp	w25, #0x0
    11d8:	csel	x22, x23, x22, eq  // eq = none
    11dc:	csinc	x19, x19, x23, eq  // eq = none
    11e0:	cmp	x19, x22
    11e4:	b.lt	119c <PyInit__bisect@@Base+0x498>  // b.tstop
    11e8:	b	1208 <PyInit__bisect@@Base+0x504>
    11ec:	adrp	x8, 11000 <PyInit__bisect@@Base+0x102fc>
    11f0:	ldr	x8, [x8, #4032]
    11f4:	adrp	x1, 1000 <PyInit__bisect@@Base+0x2fc>
    11f8:	add	x1, x1, #0x259
    11fc:	ldr	x0, [x8]
    1200:	bl	ba0 <PyErr_SetString@plt>
    1204:	mov	x19, #0xffffffffffffffff    	// #-1
    1208:	mov	x0, x19
    120c:	ldp	x20, x19, [sp, #64]
    1210:	ldp	x22, x21, [sp, #48]
    1214:	ldp	x24, x23, [sp, #32]
    1218:	ldr	x25, [sp, #16]
    121c:	ldp	x29, x30, [sp], #80
    1220:	ret

Disassembly of section .fini:

0000000000001224 <.fini>:
    1224:	stp	x29, x30, [sp, #-16]!
    1228:	mov	x29, sp
    122c:	ldp	x29, x30, [sp], #16
    1230:	ret
