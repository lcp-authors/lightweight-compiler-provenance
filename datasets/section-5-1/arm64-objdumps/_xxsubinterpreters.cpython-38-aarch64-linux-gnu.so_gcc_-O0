
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 1a000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0x4420>:
    2940:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	stp	x29, x30, [sp, #-32]!
    2958:	mov	x29, sp
    295c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2960:	add	x0, x0, #0x928
    2964:	str	x0, [sp, #24]
    2968:	ldr	x0, [sp, #24]
    296c:	str	x0, [sp, #24]
    2970:	ldr	x1, [sp, #24]
    2974:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2978:	add	x0, x0, #0x928
    297c:	cmp	x1, x0
    2980:	b.eq	29b8 <PyThread_free_lock@plt+0x88>  // b.none
    2984:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    2988:	ldr	x0, [x0, #3952]
    298c:	str	x0, [sp, #16]
    2990:	ldr	x0, [sp, #16]
    2994:	str	x0, [sp, #16]
    2998:	ldr	x0, [sp, #16]
    299c:	cmp	x0, #0x0
    29a0:	b.eq	29bc <PyThread_free_lock@plt+0x8c>  // b.none
    29a4:	ldr	x1, [sp, #16]
    29a8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    29ac:	add	x0, x0, #0x928
    29b0:	blr	x1
    29b4:	b	29bc <PyThread_free_lock@plt+0x8c>
    29b8:	nop
    29bc:	ldp	x29, x30, [sp], #32
    29c0:	ret
    29c4:	stp	x29, x30, [sp, #-48]!
    29c8:	mov	x29, sp
    29cc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    29d0:	add	x0, x0, #0x928
    29d4:	str	x0, [sp, #40]
    29d8:	ldr	x0, [sp, #40]
    29dc:	str	x0, [sp, #40]
    29e0:	ldr	x1, [sp, #40]
    29e4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    29e8:	add	x0, x0, #0x928
    29ec:	sub	x0, x1, x0
    29f0:	asr	x0, x0, #3
    29f4:	lsr	x1, x0, #63
    29f8:	add	x0, x1, x0
    29fc:	asr	x0, x0, #1
    2a00:	str	x0, [sp, #32]
    2a04:	ldr	x0, [sp, #32]
    2a08:	cmp	x0, #0x0
    2a0c:	b.eq	2a48 <PyThread_free_lock@plt+0x118>  // b.none
    2a10:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    2a14:	ldr	x0, [x0, #4064]
    2a18:	str	x0, [sp, #24]
    2a1c:	ldr	x0, [sp, #24]
    2a20:	str	x0, [sp, #24]
    2a24:	ldr	x0, [sp, #24]
    2a28:	cmp	x0, #0x0
    2a2c:	b.eq	2a4c <PyThread_free_lock@plt+0x11c>  // b.none
    2a30:	ldr	x2, [sp, #24]
    2a34:	ldr	x1, [sp, #32]
    2a38:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2a3c:	add	x0, x0, #0x928
    2a40:	blr	x2
    2a44:	b	2a4c <PyThread_free_lock@plt+0x11c>
    2a48:	nop
    2a4c:	ldp	x29, x30, [sp], #48
    2a50:	ret
    2a54:	stp	x29, x30, [sp, #-16]!
    2a58:	mov	x29, sp
    2a5c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2a60:	add	x0, x0, #0x928
    2a64:	ldrb	w0, [x0]
    2a68:	and	x0, x0, #0xff
    2a6c:	cmp	x0, #0x0
    2a70:	b.ne	2aac <PyThread_free_lock@plt+0x17c>  // b.any
    2a74:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    2a78:	ldr	x0, [x0, #3968]
    2a7c:	cmp	x0, #0x0
    2a80:	b.eq	2a94 <PyThread_free_lock@plt+0x164>  // b.none
    2a84:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2a88:	add	x0, x0, #0x228
    2a8c:	ldr	x0, [x0]
    2a90:	bl	25c0 <__cxa_finalize@plt>
    2a94:	bl	2954 <PyThread_free_lock@plt+0x24>
    2a98:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    2a9c:	add	x0, x0, #0x928
    2aa0:	mov	w1, #0x1                   	// #1
    2aa4:	strb	w1, [x0]
    2aa8:	b	2ab0 <PyThread_free_lock@plt+0x180>
    2aac:	nop
    2ab0:	ldp	x29, x30, [sp], #16
    2ab4:	ret
    2ab8:	stp	x29, x30, [sp, #-16]!
    2abc:	mov	x29, sp
    2ac0:	bl	29c4 <PyThread_free_lock@plt+0x94>
    2ac4:	nop
    2ac8:	ldp	x29, x30, [sp], #16
    2acc:	ret
    2ad0:	sub	sp, sp, #0x10
    2ad4:	str	x0, [sp, #8]
    2ad8:	ldr	x0, [sp, #8]
    2adc:	ldr	x0, [x0]
    2ae0:	add	x1, x0, #0x1
    2ae4:	ldr	x0, [sp, #8]
    2ae8:	str	x1, [x0]
    2aec:	nop
    2af0:	add	sp, sp, #0x10
    2af4:	ret
    2af8:	stp	x29, x30, [sp, #-48]!
    2afc:	mov	x29, sp
    2b00:	str	x0, [sp, #40]
    2b04:	str	w1, [sp, #36]
    2b08:	str	x2, [sp, #24]
    2b0c:	ldr	x0, [sp, #24]
    2b10:	ldr	x0, [x0]
    2b14:	sub	x1, x0, #0x1
    2b18:	ldr	x0, [sp, #24]
    2b1c:	str	x1, [x0]
    2b20:	ldr	x0, [sp, #24]
    2b24:	ldr	x0, [x0]
    2b28:	cmp	x0, #0x0
    2b2c:	b.ne	2b38 <PyThread_free_lock@plt+0x208>  // b.any
    2b30:	ldr	x0, [sp, #24]
    2b34:	bl	25e0 <_Py_Dealloc@plt>
    2b38:	nop
    2b3c:	ldp	x29, x30, [sp], #48
    2b40:	ret
    2b44:	stp	x29, x30, [sp, #-32]!
    2b48:	mov	x29, sp
    2b4c:	str	x0, [sp, #24]
    2b50:	ldr	x0, [sp, #24]
    2b54:	cmp	x0, #0x0
    2b58:	b.eq	2b70 <PyThread_free_lock@plt+0x240>  // b.none
    2b5c:	ldr	x2, [sp, #24]
    2b60:	mov	w1, #0x21d                 	// #541
    2b64:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    2b68:	add	x0, x0, #0xea8
    2b6c:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    2b70:	nop
    2b74:	ldp	x29, x30, [sp], #32
    2b78:	ret
    2b7c:	stp	x29, x30, [sp, #-48]!
    2b80:	mov	x29, sp
    2b84:	str	x0, [sp, #24]
    2b88:	ldr	x0, [sp, #24]
    2b8c:	bl	27e0 <PyUnicode_AsUTF8@plt>
    2b90:	str	x0, [sp, #40]
    2b94:	ldr	x0, [sp, #40]
    2b98:	cmp	x0, #0x0
    2b9c:	b.ne	2ba8 <PyThread_free_lock@plt+0x278>  // b.any
    2ba0:	mov	x0, #0x0                   	// #0
    2ba4:	b	2be4 <PyThread_free_lock@plt+0x2b4>
    2ba8:	ldr	x0, [sp, #40]
    2bac:	bl	2530 <strlen@plt>
    2bb0:	add	x0, x0, #0x1
    2bb4:	bl	2910 <PyMem_Malloc@plt>
    2bb8:	str	x0, [sp, #32]
    2bbc:	ldr	x0, [sp, #32]
    2bc0:	cmp	x0, #0x0
    2bc4:	b.ne	2bd4 <PyThread_free_lock@plt+0x2a4>  // b.any
    2bc8:	bl	2600 <PyErr_NoMemory@plt>
    2bcc:	mov	x0, #0x0                   	// #0
    2bd0:	b	2be4 <PyThread_free_lock@plt+0x2b4>
    2bd4:	ldr	x1, [sp, #40]
    2bd8:	ldr	x0, [sp, #32]
    2bdc:	bl	27f0 <strcpy@plt>
    2be0:	ldr	x0, [sp, #32]
    2be4:	ldp	x29, x30, [sp], #48
    2be8:	ret
    2bec:	stp	x29, x30, [sp, #-16]!
    2bf0:	mov	x29, sp
    2bf4:	bl	2800 <_PyInterpreterState_Get@plt>
    2bf8:	ldp	x29, x30, [sp], #16
    2bfc:	ret
    2c00:	stp	x29, x30, [sp, #-48]!
    2c04:	mov	x29, sp
    2c08:	str	x0, [sp, #40]
    2c0c:	str	x1, [sp, #32]
    2c10:	str	x2, [sp, #24]
    2c14:	ldr	x0, [sp, #32]
    2c18:	bl	2b7c <PyThread_free_lock@plt+0x24c>
    2c1c:	mov	x1, x0
    2c20:	ldr	x0, [sp, #40]
    2c24:	str	x1, [x0]
    2c28:	ldr	x0, [sp, #40]
    2c2c:	ldr	x0, [x0]
    2c30:	cmp	x0, #0x0
    2c34:	b.ne	2c40 <PyThread_free_lock@plt+0x310>  // b.any
    2c38:	mov	w0, #0xffffffff            	// #-1
    2c3c:	b	2c70 <PyThread_free_lock@plt+0x340>
    2c40:	ldr	x0, [sp, #40]
    2c44:	add	x0, x0, #0x8
    2c48:	mov	x1, x0
    2c4c:	ldr	x0, [sp, #24]
    2c50:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    2c54:	cmp	w0, #0x0
    2c58:	b.eq	2c6c <PyThread_free_lock@plt+0x33c>  // b.none
    2c5c:	ldr	x0, [sp, #40]
    2c60:	bl	2c78 <PyThread_free_lock@plt+0x348>
    2c64:	mov	w0, #0xffffffff            	// #-1
    2c68:	b	2c70 <PyThread_free_lock@plt+0x340>
    2c6c:	mov	w0, #0x0                   	// #0
    2c70:	ldp	x29, x30, [sp], #48
    2c74:	ret
    2c78:	stp	x29, x30, [sp, #-32]!
    2c7c:	mov	x29, sp
    2c80:	str	x0, [sp, #24]
    2c84:	ldr	x0, [sp, #24]
    2c88:	ldr	x0, [x0]
    2c8c:	cmp	x0, #0x0
    2c90:	b.eq	2ca8 <PyThread_free_lock@plt+0x378>  // b.none
    2c94:	ldr	x0, [sp, #24]
    2c98:	ldr	x0, [x0]
    2c9c:	bl	2590 <PyMem_Free@plt>
    2ca0:	ldr	x0, [sp, #24]
    2ca4:	str	xzr, [x0]
    2ca8:	ldr	x0, [sp, #24]
    2cac:	add	x0, x0, #0x8
    2cb0:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    2cb4:	nop
    2cb8:	ldp	x29, x30, [sp], #32
    2cbc:	ret
    2cc0:	stp	x29, x30, [sp, #-64]!
    2cc4:	mov	x29, sp
    2cc8:	str	x0, [sp, #24]
    2ccc:	str	x1, [sp, #16]
    2cd0:	ldr	x0, [sp, #24]
    2cd4:	ldr	x0, [x0]
    2cd8:	bl	2840 <PyUnicode_FromString@plt>
    2cdc:	str	x0, [sp, #56]
    2ce0:	ldr	x0, [sp, #56]
    2ce4:	cmp	x0, #0x0
    2ce8:	b.ne	2cf4 <PyThread_free_lock@plt+0x3c4>  // b.any
    2cec:	mov	w0, #0xffffffff            	// #-1
    2cf0:	b	2d6c <PyThread_free_lock@plt+0x43c>
    2cf4:	ldr	x0, [sp, #24]
    2cf8:	add	x0, x0, #0x8
    2cfc:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    2d00:	str	x0, [sp, #48]
    2d04:	ldr	x0, [sp, #48]
    2d08:	cmp	x0, #0x0
    2d0c:	b.ne	2d2c <PyThread_free_lock@plt+0x3fc>  // b.any
    2d10:	ldr	x2, [sp, #56]
    2d14:	mov	w1, #0x4d                  	// #77
    2d18:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    2d1c:	add	x0, x0, #0xec0
    2d20:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    2d24:	mov	w0, #0xffffffff            	// #-1
    2d28:	b	2d6c <PyThread_free_lock@plt+0x43c>
    2d2c:	ldr	x2, [sp, #48]
    2d30:	ldr	x1, [sp, #56]
    2d34:	ldr	x0, [sp, #16]
    2d38:	bl	2870 <PyDict_SetItem@plt>
    2d3c:	str	w0, [sp, #44]
    2d40:	ldr	x2, [sp, #56]
    2d44:	mov	w1, #0x51                  	// #81
    2d48:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    2d4c:	add	x0, x0, #0xec0
    2d50:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    2d54:	ldr	x2, [sp, #48]
    2d58:	mov	w1, #0x52                  	// #82
    2d5c:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    2d60:	add	x0, x0, #0xec0
    2d64:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    2d68:	ldr	w0, [sp, #44]
    2d6c:	ldp	x29, x30, [sp], #64
    2d70:	ret
    2d74:	stp	x29, x30, [sp, #-48]!
    2d78:	mov	x29, sp
    2d7c:	str	x0, [sp, #24]
    2d80:	mov	x0, #0x10                  	// #16
    2d84:	bl	2910 <PyMem_Malloc@plt>
    2d88:	str	x0, [sp, #40]
    2d8c:	ldr	x0, [sp, #40]
    2d90:	cmp	x0, #0x0
    2d94:	b.ne	2da4 <PyThread_free_lock@plt+0x474>  // b.any
    2d98:	bl	2600 <PyErr_NoMemory@plt>
    2d9c:	mov	x0, #0x0                   	// #0
    2da0:	b	2e18 <PyThread_free_lock@plt+0x4e8>
    2da4:	ldr	x0, [sp, #40]
    2da8:	ldr	x1, [sp, #24]
    2dac:	str	x1, [x0]
    2db0:	ldr	x1, [sp, #24]
    2db4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2db8:	movk	x0, #0x2aa, lsl #48
    2dbc:	cmp	x1, x0
    2dc0:	b.hi	2de4 <PyThread_free_lock@plt+0x4b4>  // b.pmore
    2dc4:	ldr	x1, [sp, #24]
    2dc8:	mov	x0, x1
    2dcc:	lsl	x0, x0, #1
    2dd0:	add	x0, x0, x1
    2dd4:	lsl	x0, x0, #4
    2dd8:	bl	2910 <PyMem_Malloc@plt>
    2ddc:	mov	x1, x0
    2de0:	b	2de8 <PyThread_free_lock@plt+0x4b8>
    2de4:	mov	x1, #0x0                   	// #0
    2de8:	ldr	x0, [sp, #40]
    2dec:	str	x1, [x0, #8]
    2df0:	ldr	x0, [sp, #40]
    2df4:	ldr	x0, [x0, #8]
    2df8:	cmp	x0, #0x0
    2dfc:	b.ne	2e14 <PyThread_free_lock@plt+0x4e4>  // b.any
    2e00:	bl	2600 <PyErr_NoMemory@plt>
    2e04:	ldr	x0, [sp, #40]
    2e08:	bl	2590 <PyMem_Free@plt>
    2e0c:	mov	x0, #0x0                   	// #0
    2e10:	b	2e18 <PyThread_free_lock@plt+0x4e8>
    2e14:	ldr	x0, [sp, #40]
    2e18:	ldp	x29, x30, [sp], #48
    2e1c:	ret
    2e20:	stp	x29, x30, [sp, #-48]!
    2e24:	mov	x29, sp
    2e28:	str	x0, [sp, #24]
    2e2c:	str	xzr, [sp, #40]
    2e30:	b	2e64 <PyThread_free_lock@plt+0x534>
    2e34:	ldr	x0, [sp, #24]
    2e38:	ldr	x2, [x0, #8]
    2e3c:	ldr	x1, [sp, #40]
    2e40:	mov	x0, x1
    2e44:	lsl	x0, x0, #1
    2e48:	add	x0, x0, x1
    2e4c:	lsl	x0, x0, #4
    2e50:	add	x0, x2, x0
    2e54:	bl	2c78 <PyThread_free_lock@plt+0x348>
    2e58:	ldr	x0, [sp, #40]
    2e5c:	add	x0, x0, #0x1
    2e60:	str	x0, [sp, #40]
    2e64:	ldr	x0, [sp, #24]
    2e68:	ldr	x0, [x0]
    2e6c:	ldr	x1, [sp, #40]
    2e70:	cmp	x1, x0
    2e74:	b.lt	2e34 <PyThread_free_lock@plt+0x504>  // b.tstop
    2e78:	ldr	x0, [sp, #24]
    2e7c:	ldr	x0, [x0, #8]
    2e80:	bl	2590 <PyMem_Free@plt>
    2e84:	ldr	x0, [sp, #24]
    2e88:	bl	2590 <PyMem_Free@plt>
    2e8c:	nop
    2e90:	ldp	x29, x30, [sp], #48
    2e94:	ret
    2e98:	stp	x29, x30, [sp, #-80]!
    2e9c:	mov	x29, sp
    2ea0:	str	x0, [sp, #24]
    2ea4:	ldr	x0, [sp, #24]
    2ea8:	cmp	x0, #0x0
    2eac:	b.eq	2ec4 <PyThread_free_lock@plt+0x594>  // b.none
    2eb0:	ldr	x1, [sp, #24]
    2eb4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    2eb8:	ldr	x0, [x0, #4048]
    2ebc:	cmp	x1, x0
    2ec0:	b.ne	2ecc <PyThread_free_lock@plt+0x59c>  // b.any
    2ec4:	mov	x0, #0x0                   	// #0
    2ec8:	b	2fc0 <PyThread_free_lock@plt+0x690>
    2ecc:	ldr	x0, [sp, #24]
    2ed0:	bl	2540 <PyDict_Size@plt>
    2ed4:	str	x0, [sp, #64]
    2ed8:	ldr	x0, [sp, #64]
    2edc:	cmp	x0, #0x0
    2ee0:	b.ne	2eec <PyThread_free_lock@plt+0x5bc>  // b.any
    2ee4:	mov	x0, #0x0                   	// #0
    2ee8:	b	2fc0 <PyThread_free_lock@plt+0x690>
    2eec:	ldr	x0, [sp, #64]
    2ef0:	bl	2d74 <PyThread_free_lock@plt+0x444>
    2ef4:	str	x0, [sp, #56]
    2ef8:	ldr	x0, [sp, #56]
    2efc:	cmp	x0, #0x0
    2f00:	b.ne	2f0c <PyThread_free_lock@plt+0x5dc>  // b.any
    2f04:	mov	x0, #0x0                   	// #0
    2f08:	b	2fc0 <PyThread_free_lock@plt+0x690>
    2f0c:	str	xzr, [sp, #48]
    2f10:	str	xzr, [sp, #72]
    2f14:	b	2f80 <PyThread_free_lock@plt+0x650>
    2f18:	add	x2, sp, #0x20
    2f1c:	add	x1, sp, #0x28
    2f20:	add	x0, sp, #0x30
    2f24:	mov	x3, x2
    2f28:	mov	x2, x1
    2f2c:	mov	x1, x0
    2f30:	ldr	x0, [sp, #24]
    2f34:	bl	27d0 <PyDict_Next@plt>
    2f38:	cmp	w0, #0x0
    2f3c:	b.eq	2f94 <PyThread_free_lock@plt+0x664>  // b.none
    2f40:	ldr	x0, [sp, #56]
    2f44:	ldr	x2, [x0, #8]
    2f48:	ldr	x1, [sp, #72]
    2f4c:	mov	x0, x1
    2f50:	lsl	x0, x0, #1
    2f54:	add	x0, x0, x1
    2f58:	lsl	x0, x0, #4
    2f5c:	add	x0, x2, x0
    2f60:	ldr	x1, [sp, #40]
    2f64:	ldr	x2, [sp, #32]
    2f68:	bl	2c00 <PyThread_free_lock@plt+0x2d0>
    2f6c:	cmp	w0, #0x0
    2f70:	b.ne	2f9c <PyThread_free_lock@plt+0x66c>  // b.any
    2f74:	ldr	x0, [sp, #72]
    2f78:	add	x0, x0, #0x1
    2f7c:	str	x0, [sp, #72]
    2f80:	ldr	x1, [sp, #72]
    2f84:	ldr	x0, [sp, #64]
    2f88:	cmp	x1, x0
    2f8c:	b.lt	2f18 <PyThread_free_lock@plt+0x5e8>  // b.tstop
    2f90:	b	2fa0 <PyThread_free_lock@plt+0x670>
    2f94:	nop
    2f98:	b	2fa0 <PyThread_free_lock@plt+0x670>
    2f9c:	nop
    2fa0:	bl	2730 <PyErr_Occurred@plt>
    2fa4:	cmp	x0, #0x0
    2fa8:	b.eq	2fbc <PyThread_free_lock@plt+0x68c>  // b.none
    2fac:	ldr	x0, [sp, #56]
    2fb0:	bl	2e20 <PyThread_free_lock@plt+0x4f0>
    2fb4:	mov	x0, #0x0                   	// #0
    2fb8:	b	2fc0 <PyThread_free_lock@plt+0x690>
    2fbc:	ldr	x0, [sp, #56]
    2fc0:	ldp	x29, x30, [sp], #80
    2fc4:	ret
    2fc8:	stp	x29, x30, [sp, #-48]!
    2fcc:	mov	x29, sp
    2fd0:	str	x0, [sp, #24]
    2fd4:	str	x1, [sp, #16]
    2fd8:	str	xzr, [sp, #40]
    2fdc:	b	3024 <PyThread_free_lock@plt+0x6f4>
    2fe0:	ldr	x0, [sp, #24]
    2fe4:	ldr	x2, [x0, #8]
    2fe8:	ldr	x1, [sp, #40]
    2fec:	mov	x0, x1
    2ff0:	lsl	x0, x0, #1
    2ff4:	add	x0, x0, x1
    2ff8:	lsl	x0, x0, #4
    2ffc:	add	x0, x2, x0
    3000:	ldr	x1, [sp, #16]
    3004:	bl	2cc0 <PyThread_free_lock@plt+0x390>
    3008:	cmp	w0, #0x0
    300c:	b.eq	3018 <PyThread_free_lock@plt+0x6e8>  // b.none
    3010:	mov	w0, #0xffffffff            	// #-1
    3014:	b	303c <PyThread_free_lock@plt+0x70c>
    3018:	ldr	x0, [sp, #40]
    301c:	add	x0, x0, #0x1
    3020:	str	x0, [sp, #40]
    3024:	ldr	x0, [sp, #24]
    3028:	ldr	x0, [x0]
    302c:	ldr	x1, [sp, #40]
    3030:	cmp	x1, x0
    3034:	b.lt	2fe0 <PyThread_free_lock@plt+0x6b0>  // b.tstop
    3038:	mov	w0, #0x0                   	// #0
    303c:	ldp	x29, x30, [sp], #48
    3040:	ret
    3044:	stp	x29, x30, [sp, #-32]!
    3048:	mov	x29, sp
    304c:	mov	x0, #0x10                  	// #16
    3050:	bl	2910 <PyMem_Malloc@plt>
    3054:	str	x0, [sp, #24]
    3058:	ldr	x0, [sp, #24]
    305c:	cmp	x0, #0x0
    3060:	b.ne	3070 <PyThread_free_lock@plt+0x740>  // b.any
    3064:	bl	2600 <PyErr_NoMemory@plt>
    3068:	mov	x0, #0x0                   	// #0
    306c:	b	3084 <PyThread_free_lock@plt+0x754>
    3070:	ldr	x0, [sp, #24]
    3074:	str	xzr, [x0]
    3078:	ldr	x0, [sp, #24]
    307c:	str	xzr, [x0, #8]
    3080:	ldr	x0, [sp, #24]
    3084:	ldp	x29, x30, [sp], #32
    3088:	ret
    308c:	stp	x29, x30, [sp, #-32]!
    3090:	mov	x29, sp
    3094:	str	x0, [sp, #24]
    3098:	ldr	x0, [sp, #24]
    309c:	ldr	x0, [x0]
    30a0:	cmp	x0, #0x0
    30a4:	b.eq	30b4 <PyThread_free_lock@plt+0x784>  // b.none
    30a8:	ldr	x0, [sp, #24]
    30ac:	ldr	x0, [x0]
    30b0:	bl	2590 <PyMem_Free@plt>
    30b4:	ldr	x0, [sp, #24]
    30b8:	ldr	x0, [x0, #8]
    30bc:	cmp	x0, #0x0
    30c0:	b.eq	30d0 <PyThread_free_lock@plt+0x7a0>  // b.none
    30c4:	ldr	x0, [sp, #24]
    30c8:	ldr	x0, [x0, #8]
    30cc:	bl	2590 <PyMem_Free@plt>
    30d0:	nop
    30d4:	ldp	x29, x30, [sp], #32
    30d8:	ret
    30dc:	stp	x29, x30, [sp, #-32]!
    30e0:	mov	x29, sp
    30e4:	str	x0, [sp, #24]
    30e8:	ldr	x0, [sp, #24]
    30ec:	bl	308c <PyThread_free_lock@plt+0x75c>
    30f0:	ldr	x0, [sp, #24]
    30f4:	bl	2590 <PyMem_Free@plt>
    30f8:	nop
    30fc:	ldp	x29, x30, [sp], #32
    3100:	ret
    3104:	stp	x29, x30, [sp, #-80]!
    3108:	mov	x29, sp
    310c:	str	x0, [sp, #40]
    3110:	str	x1, [sp, #32]
    3114:	str	x2, [sp, #24]
    3118:	str	xzr, [sp, #72]
    311c:	bl	3044 <PyThread_free_lock@plt+0x714>
    3120:	str	x0, [sp, #64]
    3124:	ldr	x0, [sp, #64]
    3128:	cmp	x0, #0x0
    312c:	b.eq	3274 <PyThread_free_lock@plt+0x944>  // b.none
    3130:	ldr	x1, [sp, #40]
    3134:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    3138:	add	x0, x0, #0xf00
    313c:	bl	24f0 <PyUnicode_FromFormat@plt>
    3140:	str	x0, [sp, #56]
    3144:	ldr	x0, [sp, #56]
    3148:	cmp	x0, #0x0
    314c:	b.ne	3160 <PyThread_free_lock@plt+0x830>  // b.any
    3150:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    3154:	add	x0, x0, #0xf08
    3158:	str	x0, [sp, #72]
    315c:	b	3280 <PyThread_free_lock@plt+0x950>
    3160:	ldr	x0, [sp, #56]
    3164:	bl	2b7c <PyThread_free_lock@plt+0x24c>
    3168:	mov	x1, x0
    316c:	ldr	x0, [sp, #64]
    3170:	str	x1, [x0]
    3174:	ldr	x2, [sp, #56]
    3178:	mov	w1, #0xdc                  	// #220
    317c:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    3180:	add	x0, x0, #0xec0
    3184:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    3188:	ldr	x0, [sp, #64]
    318c:	ldr	x0, [x0]
    3190:	cmp	x0, #0x0
    3194:	b.ne	31cc <PyThread_free_lock@plt+0x89c>  // b.any
    3198:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    319c:	ldr	x0, [x0, #4008]
    31a0:	ldr	x0, [x0]
    31a4:	bl	26a0 <PyErr_ExceptionMatches@plt>
    31a8:	cmp	w0, #0x0
    31ac:	b.eq	31bc <PyThread_free_lock@plt+0x88c>  // b.none
    31b0:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    31b4:	add	x0, x0, #0xf30
    31b8:	str	x0, [sp, #72]
    31bc:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    31c0:	add	x0, x0, #0xf60
    31c4:	str	x0, [sp, #72]
    31c8:	b	3280 <PyThread_free_lock@plt+0x950>
    31cc:	ldr	x0, [sp, #32]
    31d0:	cmp	x0, #0x0
    31d4:	b.eq	327c <PyThread_free_lock@plt+0x94c>  // b.none
    31d8:	ldr	x1, [sp, #32]
    31dc:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    31e0:	add	x0, x0, #0xf00
    31e4:	bl	24f0 <PyUnicode_FromFormat@plt>
    31e8:	str	x0, [sp, #48]
    31ec:	ldr	x0, [sp, #48]
    31f0:	cmp	x0, #0x0
    31f4:	b.ne	3208 <PyThread_free_lock@plt+0x8d8>  // b.any
    31f8:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    31fc:	add	x0, x0, #0xf90
    3200:	str	x0, [sp, #72]
    3204:	b	3280 <PyThread_free_lock@plt+0x950>
    3208:	ldr	x0, [sp, #48]
    320c:	bl	2b7c <PyThread_free_lock@plt+0x24c>
    3210:	mov	x1, x0
    3214:	ldr	x0, [sp, #64]
    3218:	str	x1, [x0, #8]
    321c:	ldr	x2, [sp, #48]
    3220:	mov	w1, #0xec                  	// #236
    3224:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    3228:	add	x0, x0, #0xec0
    322c:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    3230:	ldr	x0, [sp, #64]
    3234:	ldr	x0, [x0, #8]
    3238:	cmp	x0, #0x0
    323c:	b.ne	327c <PyThread_free_lock@plt+0x94c>  // b.any
    3240:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    3244:	ldr	x0, [x0, #4008]
    3248:	ldr	x0, [x0]
    324c:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3250:	cmp	w0, #0x0
    3254:	b.eq	3264 <PyThread_free_lock@plt+0x934>  // b.none
    3258:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    325c:	add	x0, x0, #0xfb8
    3260:	str	x0, [sp, #72]
    3264:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    3268:	add	x0, x0, #0xfe0
    326c:	str	x0, [sp, #72]
    3270:	b	3280 <PyThread_free_lock@plt+0x950>
    3274:	nop
    3278:	b	3280 <PyThread_free_lock@plt+0x950>
    327c:	nop
    3280:	ldr	x0, [sp, #72]
    3284:	cmp	x0, #0x0
    3288:	b.eq	32c0 <PyThread_free_lock@plt+0x990>  // b.none
    328c:	bl	26f0 <PyErr_Clear@plt>
    3290:	ldr	x0, [sp, #64]
    3294:	ldr	x0, [x0]
    3298:	cmp	x0, #0x0
    329c:	b.eq	32b4 <PyThread_free_lock@plt+0x984>  // b.none
    32a0:	ldr	x0, [sp, #64]
    32a4:	ldr	x0, [x0]
    32a8:	bl	2590 <PyMem_Free@plt>
    32ac:	ldr	x0, [sp, #64]
    32b0:	str	xzr, [x0]
    32b4:	ldr	x0, [sp, #64]
    32b8:	ldr	x1, [sp, #72]
    32bc:	str	x1, [x0, #8]
    32c0:	ldr	x0, [sp, #64]
    32c4:	ldp	x29, x30, [sp], #80
    32c8:	ret
    32cc:	stp	x29, x30, [sp, #-32]!
    32d0:	mov	x29, sp
    32d4:	str	x0, [sp, #24]
    32d8:	str	x1, [sp, #16]
    32dc:	ldr	x0, [sp, #24]
    32e0:	ldr	x0, [x0]
    32e4:	cmp	x0, #0x0
    32e8:	b.eq	3340 <PyThread_free_lock@plt+0xa10>  // b.none
    32ec:	ldr	x0, [sp, #24]
    32f0:	ldr	x0, [x0, #8]
    32f4:	cmp	x0, #0x0
    32f8:	b.eq	3328 <PyThread_free_lock@plt+0x9f8>  // b.none
    32fc:	ldr	x0, [sp, #24]
    3300:	ldr	x1, [x0]
    3304:	ldr	x0, [sp, #24]
    3308:	ldr	x0, [x0, #8]
    330c:	mov	x3, x0
    3310:	mov	x2, x1
    3314:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3318:	add	x1, x0, #0x10
    331c:	ldr	x0, [sp, #16]
    3320:	bl	28c0 <PyErr_Format@plt>
    3324:	b	3370 <PyThread_free_lock@plt+0xa40>
    3328:	ldr	x0, [sp, #24]
    332c:	ldr	x0, [x0]
    3330:	mov	x1, x0
    3334:	ldr	x0, [sp, #16]
    3338:	bl	2670 <PyErr_SetString@plt>
    333c:	b	3370 <PyThread_free_lock@plt+0xa40>
    3340:	ldr	x0, [sp, #24]
    3344:	ldr	x0, [x0, #8]
    3348:	cmp	x0, #0x0
    334c:	b.eq	3368 <PyThread_free_lock@plt+0xa38>  // b.none
    3350:	ldr	x0, [sp, #24]
    3354:	ldr	x0, [x0, #8]
    3358:	mov	x1, x0
    335c:	ldr	x0, [sp, #16]
    3360:	bl	2670 <PyErr_SetString@plt>
    3364:	b	3370 <PyThread_free_lock@plt+0xa40>
    3368:	ldr	x0, [sp, #16]
    336c:	bl	2690 <PyErr_SetNone@plt>
    3370:	nop
    3374:	ldp	x29, x30, [sp], #32
    3378:	ret
    337c:	stp	x29, x30, [sp, #-32]!
    3380:	mov	x29, sp
    3384:	str	x0, [sp, #24]
    3388:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    338c:	ldr	x0, [x0, #4000]
    3390:	ldr	x0, [x0]
    3394:	mov	x2, #0x0                   	// #0
    3398:	mov	x1, x0
    339c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    33a0:	add	x0, x0, #0x18
    33a4:	bl	26e0 <PyErr_NewException@plt>
    33a8:	mov	x1, x0
    33ac:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    33b0:	add	x0, x0, #0x930
    33b4:	str	x1, [x0]
    33b8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    33bc:	add	x0, x0, #0x930
    33c0:	ldr	x0, [x0]
    33c4:	cmp	x0, #0x0
    33c8:	b.ne	33d4 <PyThread_free_lock@plt+0xaa4>  // b.any
    33cc:	mov	w0, #0xffffffff            	// #-1
    33d0:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    33d4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    33d8:	add	x0, x0, #0x930
    33dc:	ldr	x0, [x0]
    33e0:	mov	x2, x0
    33e4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    33e8:	add	x1, x0, #0x38
    33ec:	ldr	x0, [sp, #24]
    33f0:	bl	2510 <PyDict_SetItemString@plt>
    33f4:	cmp	w0, #0x0
    33f8:	b.eq	3404 <PyThread_free_lock@plt+0xad4>  // b.none
    33fc:	mov	w0, #0xffffffff            	// #-1
    3400:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    3404:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3408:	add	x0, x0, #0x930
    340c:	ldr	x0, [x0]
    3410:	mov	x2, #0x0                   	// #0
    3414:	mov	x1, x0
    3418:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    341c:	add	x0, x0, #0x48
    3420:	bl	26e0 <PyErr_NewException@plt>
    3424:	mov	x1, x0
    3428:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    342c:	add	x0, x0, #0x938
    3430:	str	x1, [x0]
    3434:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3438:	add	x0, x0, #0x938
    343c:	ldr	x0, [x0]
    3440:	cmp	x0, #0x0
    3444:	b.ne	3450 <PyThread_free_lock@plt+0xb20>  // b.any
    3448:	mov	w0, #0xffffffff            	// #-1
    344c:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    3450:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3454:	add	x0, x0, #0x938
    3458:	ldr	x0, [x0]
    345c:	mov	x2, x0
    3460:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3464:	add	x1, x0, #0x70
    3468:	ldr	x0, [sp, #24]
    346c:	bl	2510 <PyDict_SetItemString@plt>
    3470:	cmp	w0, #0x0
    3474:	b.eq	3480 <PyThread_free_lock@plt+0xb50>  // b.none
    3478:	mov	w0, #0xffffffff            	// #-1
    347c:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    3480:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3484:	add	x0, x0, #0x930
    3488:	ldr	x0, [x0]
    348c:	mov	x2, #0x0                   	// #0
    3490:	mov	x1, x0
    3494:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3498:	add	x0, x0, #0x88
    349c:	bl	26e0 <PyErr_NewException@plt>
    34a0:	mov	x1, x0
    34a4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    34a8:	add	x0, x0, #0x940
    34ac:	str	x1, [x0]
    34b0:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    34b4:	add	x0, x0, #0x940
    34b8:	ldr	x0, [x0]
    34bc:	cmp	x0, #0x0
    34c0:	b.ne	34cc <PyThread_free_lock@plt+0xb9c>  // b.any
    34c4:	mov	w0, #0xffffffff            	// #-1
    34c8:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    34cc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    34d0:	add	x0, x0, #0x940
    34d4:	ldr	x0, [x0]
    34d8:	mov	x2, x0
    34dc:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    34e0:	add	x1, x0, #0xb0
    34e4:	ldr	x0, [sp, #24]
    34e8:	bl	2510 <PyDict_SetItemString@plt>
    34ec:	cmp	w0, #0x0
    34f0:	b.eq	34fc <PyThread_free_lock@plt+0xbcc>  // b.none
    34f4:	mov	w0, #0xffffffff            	// #-1
    34f8:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    34fc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3500:	add	x0, x0, #0x930
    3504:	ldr	x0, [x0]
    3508:	mov	x2, #0x0                   	// #0
    350c:	mov	x1, x0
    3510:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3514:	add	x0, x0, #0xc8
    3518:	bl	26e0 <PyErr_NewException@plt>
    351c:	mov	x1, x0
    3520:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3524:	add	x0, x0, #0x948
    3528:	str	x1, [x0]
    352c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3530:	add	x0, x0, #0x948
    3534:	ldr	x0, [x0]
    3538:	cmp	x0, #0x0
    353c:	b.ne	3548 <PyThread_free_lock@plt+0xc18>  // b.any
    3540:	mov	w0, #0xffffffff            	// #-1
    3544:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    3548:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    354c:	add	x0, x0, #0x948
    3550:	ldr	x0, [x0]
    3554:	mov	x2, x0
    3558:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    355c:	add	x1, x0, #0xf0
    3560:	ldr	x0, [sp, #24]
    3564:	bl	2510 <PyDict_SetItemString@plt>
    3568:	cmp	w0, #0x0
    356c:	b.eq	3578 <PyThread_free_lock@plt+0xc48>  // b.none
    3570:	mov	w0, #0xffffffff            	// #-1
    3574:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    3578:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    357c:	add	x0, x0, #0x930
    3580:	ldr	x0, [x0]
    3584:	mov	x2, #0x0                   	// #0
    3588:	mov	x1, x0
    358c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3590:	add	x0, x0, #0x108
    3594:	bl	26e0 <PyErr_NewException@plt>
    3598:	mov	x1, x0
    359c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    35a0:	add	x0, x0, #0x950
    35a4:	str	x1, [x0]
    35a8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    35ac:	add	x0, x0, #0x950
    35b0:	ldr	x0, [x0]
    35b4:	cmp	x0, #0x0
    35b8:	b.ne	35c4 <PyThread_free_lock@plt+0xc94>  // b.any
    35bc:	mov	w0, #0xffffffff            	// #-1
    35c0:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    35c4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    35c8:	add	x0, x0, #0x950
    35cc:	ldr	x0, [x0]
    35d0:	mov	x2, x0
    35d4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    35d8:	add	x1, x0, #0x130
    35dc:	ldr	x0, [sp, #24]
    35e0:	bl	2510 <PyDict_SetItemString@plt>
    35e4:	cmp	w0, #0x0
    35e8:	b.eq	35f4 <PyThread_free_lock@plt+0xcc4>  // b.none
    35ec:	mov	w0, #0xffffffff            	// #-1
    35f0:	b	35f8 <PyThread_free_lock@plt+0xcc8>
    35f4:	mov	w0, #0x0                   	// #0
    35f8:	ldp	x29, x30, [sp], #32
    35fc:	ret
    3600:	stp	x29, x30, [sp, #-32]!
    3604:	mov	x29, sp
    3608:	mov	x0, #0x10                  	// #16
    360c:	bl	2910 <PyMem_Malloc@plt>
    3610:	str	x0, [sp, #24]
    3614:	ldr	x0, [sp, #24]
    3618:	cmp	x0, #0x0
    361c:	b.ne	362c <PyThread_free_lock@plt+0xcfc>  // b.any
    3620:	bl	2600 <PyErr_NoMemory@plt>
    3624:	mov	x0, #0x0                   	// #0
    3628:	b	3640 <PyThread_free_lock@plt+0xd10>
    362c:	ldr	x0, [sp, #24]
    3630:	str	xzr, [x0]
    3634:	ldr	x0, [sp, #24]
    3638:	str	xzr, [x0, #8]
    363c:	ldr	x0, [sp, #24]
    3640:	ldp	x29, x30, [sp], #32
    3644:	ret
    3648:	stp	x29, x30, [sp, #-32]!
    364c:	mov	x29, sp
    3650:	str	x0, [sp, #24]
    3654:	ldr	x0, [sp, #24]
    3658:	ldr	x0, [x0]
    365c:	cmp	x0, #0x0
    3660:	b.eq	3684 <PyThread_free_lock@plt+0xd54>  // b.none
    3664:	ldr	x0, [sp, #24]
    3668:	ldr	x0, [x0]
    366c:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3670:	ldr	x0, [sp, #24]
    3674:	ldr	x0, [x0]
    3678:	bl	2590 <PyMem_Free@plt>
    367c:	ldr	x0, [sp, #24]
    3680:	str	xzr, [x0]
    3684:	ldr	x0, [sp, #24]
    3688:	str	xzr, [x0, #8]
    368c:	nop
    3690:	ldp	x29, x30, [sp], #32
    3694:	ret
    3698:	stp	x29, x30, [sp, #-32]!
    369c:	mov	x29, sp
    36a0:	str	x0, [sp, #24]
    36a4:	ldr	x0, [sp, #24]
    36a8:	bl	3648 <PyThread_free_lock@plt+0xd18>
    36ac:	ldr	x0, [sp, #24]
    36b0:	bl	2590 <PyMem_Free@plt>
    36b4:	nop
    36b8:	ldp	x29, x30, [sp], #32
    36bc:	ret
    36c0:	stp	x29, x30, [sp, #-48]!
    36c4:	mov	x29, sp
    36c8:	str	x0, [sp, #24]
    36cc:	b	36ec <PyThread_free_lock@plt+0xdbc>
    36d0:	ldr	x0, [sp, #24]
    36d4:	str	x0, [sp, #40]
    36d8:	ldr	x0, [sp, #24]
    36dc:	ldr	x0, [x0, #8]
    36e0:	str	x0, [sp, #24]
    36e4:	ldr	x0, [sp, #40]
    36e8:	bl	3698 <PyThread_free_lock@plt+0xd68>
    36ec:	ldr	x0, [sp, #24]
    36f0:	cmp	x0, #0x0
    36f4:	b.ne	36d0 <PyThread_free_lock@plt+0xda0>  // b.any
    36f8:	nop
    36fc:	nop
    3700:	ldp	x29, x30, [sp], #48
    3704:	ret
    3708:	stp	x29, x30, [sp, #-48]!
    370c:	mov	x29, sp
    3710:	str	x0, [sp, #24]
    3714:	ldr	x0, [sp, #24]
    3718:	ldr	x0, [x0]
    371c:	str	x0, [sp, #40]
    3720:	ldr	x0, [sp, #24]
    3724:	str	xzr, [x0]
    3728:	ldr	x0, [sp, #24]
    372c:	bl	3698 <PyThread_free_lock@plt+0xd68>
    3730:	ldr	x0, [sp, #40]
    3734:	ldp	x29, x30, [sp], #48
    3738:	ret
    373c:	stp	x29, x30, [sp, #-32]!
    3740:	mov	x29, sp
    3744:	mov	x0, #0x18                  	// #24
    3748:	bl	2910 <PyMem_Malloc@plt>
    374c:	str	x0, [sp, #24]
    3750:	ldr	x0, [sp, #24]
    3754:	cmp	x0, #0x0
    3758:	b.ne	3768 <PyThread_free_lock@plt+0xe38>  // b.any
    375c:	bl	2600 <PyErr_NoMemory@plt>
    3760:	mov	x0, #0x0                   	// #0
    3764:	b	3784 <PyThread_free_lock@plt+0xe54>
    3768:	ldr	x0, [sp, #24]
    376c:	str	xzr, [x0]
    3770:	ldr	x0, [sp, #24]
    3774:	str	xzr, [x0, #8]
    3778:	ldr	x0, [sp, #24]
    377c:	str	xzr, [x0, #16]
    3780:	ldr	x0, [sp, #24]
    3784:	ldp	x29, x30, [sp], #32
    3788:	ret
    378c:	stp	x29, x30, [sp, #-32]!
    3790:	mov	x29, sp
    3794:	str	x0, [sp, #24]
    3798:	ldr	x0, [sp, #24]
    379c:	ldr	x0, [x0, #8]
    37a0:	bl	36c0 <PyThread_free_lock@plt+0xd90>
    37a4:	ldr	x0, [sp, #24]
    37a8:	str	xzr, [x0]
    37ac:	ldr	x0, [sp, #24]
    37b0:	str	xzr, [x0, #8]
    37b4:	ldr	x0, [sp, #24]
    37b8:	str	xzr, [x0, #16]
    37bc:	nop
    37c0:	ldp	x29, x30, [sp], #32
    37c4:	ret
    37c8:	stp	x29, x30, [sp, #-32]!
    37cc:	mov	x29, sp
    37d0:	str	x0, [sp, #24]
    37d4:	ldr	x0, [sp, #24]
    37d8:	bl	378c <PyThread_free_lock@plt+0xe5c>
    37dc:	ldr	x0, [sp, #24]
    37e0:	bl	2590 <PyMem_Free@plt>
    37e4:	nop
    37e8:	ldp	x29, x30, [sp], #32
    37ec:	ret
    37f0:	stp	x29, x30, [sp, #-48]!
    37f4:	mov	x29, sp
    37f8:	str	x0, [sp, #24]
    37fc:	str	x1, [sp, #16]
    3800:	bl	3600 <PyThread_free_lock@plt+0xcd0>
    3804:	str	x0, [sp, #40]
    3808:	ldr	x0, [sp, #40]
    380c:	cmp	x0, #0x0
    3810:	b.ne	381c <PyThread_free_lock@plt+0xeec>  // b.any
    3814:	mov	w0, #0xffffffff            	// #-1
    3818:	b	387c <PyThread_free_lock@plt+0xf4c>
    381c:	ldr	x0, [sp, #40]
    3820:	ldr	x1, [sp, #16]
    3824:	str	x1, [x0]
    3828:	ldr	x0, [sp, #24]
    382c:	ldr	x0, [x0]
    3830:	add	x1, x0, #0x1
    3834:	ldr	x0, [sp, #24]
    3838:	str	x1, [x0]
    383c:	ldr	x0, [sp, #24]
    3840:	ldr	x0, [x0, #8]
    3844:	cmp	x0, #0x0
    3848:	b.ne	385c <PyThread_free_lock@plt+0xf2c>  // b.any
    384c:	ldr	x0, [sp, #24]
    3850:	ldr	x1, [sp, #40]
    3854:	str	x1, [x0, #8]
    3858:	b	386c <PyThread_free_lock@plt+0xf3c>
    385c:	ldr	x0, [sp, #24]
    3860:	ldr	x0, [x0, #16]
    3864:	ldr	x1, [sp, #40]
    3868:	str	x1, [x0, #8]
    386c:	ldr	x0, [sp, #24]
    3870:	ldr	x1, [sp, #40]
    3874:	str	x1, [x0, #16]
    3878:	mov	w0, #0x0                   	// #0
    387c:	ldp	x29, x30, [sp], #48
    3880:	ret
    3884:	stp	x29, x30, [sp, #-48]!
    3888:	mov	x29, sp
    388c:	str	x0, [sp, #24]
    3890:	ldr	x0, [sp, #24]
    3894:	ldr	x0, [x0, #8]
    3898:	str	x0, [sp, #40]
    389c:	ldr	x0, [sp, #40]
    38a0:	cmp	x0, #0x0
    38a4:	b.ne	38b0 <PyThread_free_lock@plt+0xf80>  // b.any
    38a8:	mov	x0, #0x0                   	// #0
    38ac:	b	38f8 <PyThread_free_lock@plt+0xfc8>
    38b0:	ldr	x0, [sp, #40]
    38b4:	ldr	x1, [x0, #8]
    38b8:	ldr	x0, [sp, #24]
    38bc:	str	x1, [x0, #8]
    38c0:	ldr	x0, [sp, #24]
    38c4:	ldr	x0, [x0, #16]
    38c8:	ldr	x1, [sp, #40]
    38cc:	cmp	x1, x0
    38d0:	b.ne	38dc <PyThread_free_lock@plt+0xfac>  // b.any
    38d4:	ldr	x0, [sp, #24]
    38d8:	str	xzr, [x0, #16]
    38dc:	ldr	x0, [sp, #24]
    38e0:	ldr	x0, [x0]
    38e4:	sub	x1, x0, #0x1
    38e8:	ldr	x0, [sp, #24]
    38ec:	str	x1, [x0]
    38f0:	ldr	x0, [sp, #40]
    38f4:	bl	3708 <PyThread_free_lock@plt+0xdd8>
    38f8:	ldp	x29, x30, [sp], #48
    38fc:	ret
    3900:	stp	x29, x30, [sp, #-48]!
    3904:	mov	x29, sp
    3908:	str	x0, [sp, #24]
    390c:	mov	x0, #0x18                  	// #24
    3910:	bl	2910 <PyMem_Malloc@plt>
    3914:	str	x0, [sp, #40]
    3918:	ldr	x0, [sp, #40]
    391c:	cmp	x0, #0x0
    3920:	b.ne	3930 <PyThread_free_lock@plt+0x1000>  // b.any
    3924:	bl	2600 <PyErr_NoMemory@plt>
    3928:	mov	x0, #0x0                   	// #0
    392c:	b	3954 <PyThread_free_lock@plt+0x1024>
    3930:	ldr	x0, [sp, #40]
    3934:	str	xzr, [x0]
    3938:	ldr	x0, [sp, #40]
    393c:	ldr	x1, [sp, #24]
    3940:	str	x1, [x0, #8]
    3944:	ldr	x0, [sp, #40]
    3948:	mov	w1, #0x1                   	// #1
    394c:	str	w1, [x0, #16]
    3950:	ldr	x0, [sp, #40]
    3954:	ldp	x29, x30, [sp], #48
    3958:	ret
    395c:	stp	x29, x30, [sp, #-32]!
    3960:	mov	x29, sp
    3964:	str	x0, [sp, #24]
    3968:	ldr	x0, [sp, #24]
    396c:	bl	2590 <PyMem_Free@plt>
    3970:	nop
    3974:	ldp	x29, x30, [sp], #32
    3978:	ret
    397c:	stp	x29, x30, [sp, #-48]!
    3980:	mov	x29, sp
    3984:	str	x0, [sp, #24]
    3988:	b	39a8 <PyThread_free_lock@plt+0x1078>
    398c:	ldr	x0, [sp, #24]
    3990:	str	x0, [sp, #40]
    3994:	ldr	x0, [sp, #24]
    3998:	ldr	x0, [x0]
    399c:	str	x0, [sp, #24]
    39a0:	ldr	x0, [sp, #40]
    39a4:	bl	395c <PyThread_free_lock@plt+0x102c>
    39a8:	ldr	x0, [sp, #24]
    39ac:	cmp	x0, #0x0
    39b0:	b.ne	398c <PyThread_free_lock@plt+0x105c>  // b.any
    39b4:	nop
    39b8:	nop
    39bc:	ldp	x29, x30, [sp], #48
    39c0:	ret
    39c4:	sub	sp, sp, #0x30
    39c8:	str	x0, [sp, #24]
    39cc:	str	x1, [sp, #16]
    39d0:	str	x2, [sp, #8]
    39d4:	str	xzr, [sp, #40]
    39d8:	ldr	x0, [sp, #24]
    39dc:	str	x0, [sp, #32]
    39e0:	b	3a0c <PyThread_free_lock@plt+0x10dc>
    39e4:	ldr	x0, [sp, #32]
    39e8:	ldr	x0, [x0, #8]
    39ec:	ldr	x1, [sp, #16]
    39f0:	cmp	x1, x0
    39f4:	b.eq	3a1c <PyThread_free_lock@plt+0x10ec>  // b.none
    39f8:	ldr	x0, [sp, #32]
    39fc:	str	x0, [sp, #40]
    3a00:	ldr	x0, [sp, #32]
    3a04:	ldr	x0, [x0]
    3a08:	str	x0, [sp, #32]
    3a0c:	ldr	x0, [sp, #32]
    3a10:	cmp	x0, #0x0
    3a14:	b.ne	39e4 <PyThread_free_lock@plt+0x10b4>  // b.any
    3a18:	b	3a20 <PyThread_free_lock@plt+0x10f0>
    3a1c:	nop
    3a20:	ldr	x0, [sp, #8]
    3a24:	cmp	x0, #0x0
    3a28:	b.eq	3a38 <PyThread_free_lock@plt+0x1108>  // b.none
    3a2c:	ldr	x0, [sp, #8]
    3a30:	ldr	x1, [sp, #40]
    3a34:	str	x1, [x0]
    3a38:	ldr	x0, [sp, #32]
    3a3c:	add	sp, sp, #0x30
    3a40:	ret
    3a44:	stp	x29, x30, [sp, #-32]!
    3a48:	mov	x29, sp
    3a4c:	mov	x0, #0x20                  	// #32
    3a50:	bl	2910 <PyMem_Malloc@plt>
    3a54:	str	x0, [sp, #24]
    3a58:	ldr	x0, [sp, #24]
    3a5c:	cmp	x0, #0x0
    3a60:	b.ne	3a6c <PyThread_free_lock@plt+0x113c>  // b.any
    3a64:	mov	x0, #0x0                   	// #0
    3a68:	b	3a90 <PyThread_free_lock@plt+0x1160>
    3a6c:	ldr	x0, [sp, #24]
    3a70:	str	xzr, [x0]
    3a74:	ldr	x0, [sp, #24]
    3a78:	str	xzr, [x0, #8]
    3a7c:	ldr	x0, [sp, #24]
    3a80:	str	xzr, [x0, #16]
    3a84:	ldr	x0, [sp, #24]
    3a88:	str	xzr, [x0, #24]
    3a8c:	ldr	x0, [sp, #24]
    3a90:	ldp	x29, x30, [sp], #32
    3a94:	ret
    3a98:	stp	x29, x30, [sp, #-32]!
    3a9c:	mov	x29, sp
    3aa0:	str	x0, [sp, #24]
    3aa4:	ldr	x0, [sp, #24]
    3aa8:	ldr	x0, [x0, #16]
    3aac:	bl	397c <PyThread_free_lock@plt+0x104c>
    3ab0:	ldr	x0, [sp, #24]
    3ab4:	str	xzr, [x0, #16]
    3ab8:	ldr	x0, [sp, #24]
    3abc:	str	xzr, [x0]
    3ac0:	ldr	x0, [sp, #24]
    3ac4:	ldr	x0, [x0, #24]
    3ac8:	bl	397c <PyThread_free_lock@plt+0x104c>
    3acc:	ldr	x0, [sp, #24]
    3ad0:	str	xzr, [x0, #24]
    3ad4:	ldr	x0, [sp, #24]
    3ad8:	str	xzr, [x0, #8]
    3adc:	nop
    3ae0:	ldp	x29, x30, [sp], #32
    3ae4:	ret
    3ae8:	stp	x29, x30, [sp, #-32]!
    3aec:	mov	x29, sp
    3af0:	str	x0, [sp, #24]
    3af4:	ldr	x0, [sp, #24]
    3af8:	bl	3a98 <PyThread_free_lock@plt+0x1168>
    3afc:	ldr	x0, [sp, #24]
    3b00:	bl	2590 <PyMem_Free@plt>
    3b04:	nop
    3b08:	ldp	x29, x30, [sp], #32
    3b0c:	ret
    3b10:	stp	x29, x30, [sp, #-64]!
    3b14:	mov	x29, sp
    3b18:	str	x0, [sp, #40]
    3b1c:	str	x1, [sp, #32]
    3b20:	str	x2, [sp, #24]
    3b24:	str	w3, [sp, #20]
    3b28:	ldr	x0, [sp, #24]
    3b2c:	bl	3900 <PyThread_free_lock@plt+0xfd0>
    3b30:	str	x0, [sp, #56]
    3b34:	ldr	x0, [sp, #56]
    3b38:	cmp	x0, #0x0
    3b3c:	b.ne	3b48 <PyThread_free_lock@plt+0x1218>  // b.any
    3b40:	mov	x0, #0x0                   	// #0
    3b44:	b	3bc8 <PyThread_free_lock@plt+0x1298>
    3b48:	ldr	x0, [sp, #32]
    3b4c:	cmp	x0, #0x0
    3b50:	b.ne	3b80 <PyThread_free_lock@plt+0x1250>  // b.any
    3b54:	ldr	w0, [sp, #20]
    3b58:	cmp	w0, #0x0
    3b5c:	b.eq	3b70 <PyThread_free_lock@plt+0x1240>  // b.none
    3b60:	ldr	x0, [sp, #40]
    3b64:	ldr	x1, [sp, #56]
    3b68:	str	x1, [x0, #16]
    3b6c:	b	3b8c <PyThread_free_lock@plt+0x125c>
    3b70:	ldr	x0, [sp, #40]
    3b74:	ldr	x1, [sp, #56]
    3b78:	str	x1, [x0, #24]
    3b7c:	b	3b8c <PyThread_free_lock@plt+0x125c>
    3b80:	ldr	x0, [sp, #32]
    3b84:	ldr	x1, [sp, #56]
    3b88:	str	x1, [x0]
    3b8c:	ldr	w0, [sp, #20]
    3b90:	cmp	w0, #0x0
    3b94:	b.eq	3bb0 <PyThread_free_lock@plt+0x1280>  // b.none
    3b98:	ldr	x0, [sp, #40]
    3b9c:	ldr	x0, [x0]
    3ba0:	add	x1, x0, #0x1
    3ba4:	ldr	x0, [sp, #40]
    3ba8:	str	x1, [x0]
    3bac:	b	3bc4 <PyThread_free_lock@plt+0x1294>
    3bb0:	ldr	x0, [sp, #40]
    3bb4:	ldr	x0, [x0, #8]
    3bb8:	add	x1, x0, #0x1
    3bbc:	ldr	x0, [sp, #40]
    3bc0:	str	x1, [x0, #8]
    3bc4:	ldr	x0, [sp, #56]
    3bc8:	ldp	x29, x30, [sp], #64
    3bcc:	ret
    3bd0:	stp	x29, x30, [sp, #-64]!
    3bd4:	mov	x29, sp
    3bd8:	str	x0, [sp, #40]
    3bdc:	str	x1, [sp, #32]
    3be0:	str	w2, [sp, #28]
    3be4:	ldr	w0, [sp, #28]
    3be8:	cmp	w0, #0x0
    3bec:	b.eq	3bfc <PyThread_free_lock@plt+0x12cc>  // b.none
    3bf0:	ldr	x0, [sp, #40]
    3bf4:	ldr	x0, [x0, #16]
    3bf8:	b	3c04 <PyThread_free_lock@plt+0x12d4>
    3bfc:	ldr	x0, [sp, #40]
    3c00:	ldr	x0, [x0, #24]
    3c04:	add	x1, sp, #0x30
    3c08:	mov	x2, x1
    3c0c:	ldr	x1, [sp, #32]
    3c10:	bl	39c4 <PyThread_free_lock@plt+0x1094>
    3c14:	str	x0, [sp, #56]
    3c18:	ldr	x0, [sp, #56]
    3c1c:	cmp	x0, #0x0
    3c20:	b.eq	3c60 <PyThread_free_lock@plt+0x1330>  // b.none
    3c24:	ldr	x0, [sp, #56]
    3c28:	ldr	w0, [x0, #16]
    3c2c:	cmp	w0, #0x0
    3c30:	b.ne	3c58 <PyThread_free_lock@plt+0x1328>  // b.any
    3c34:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3c38:	add	x0, x0, #0x940
    3c3c:	ldr	x2, [x0]
    3c40:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3c44:	add	x1, x0, #0x148
    3c48:	mov	x0, x2
    3c4c:	bl	2670 <PyErr_SetString@plt>
    3c50:	mov	w0, #0xffffffff            	// #-1
    3c54:	b	3c8c <PyThread_free_lock@plt+0x135c>
    3c58:	mov	w0, #0x0                   	// #0
    3c5c:	b	3c8c <PyThread_free_lock@plt+0x135c>
    3c60:	ldr	x0, [sp, #48]
    3c64:	ldr	w3, [sp, #28]
    3c68:	ldr	x2, [sp, #32]
    3c6c:	mov	x1, x0
    3c70:	ldr	x0, [sp, #40]
    3c74:	bl	3b10 <PyThread_free_lock@plt+0x11e0>
    3c78:	cmp	x0, #0x0
    3c7c:	b.ne	3c88 <PyThread_free_lock@plt+0x1358>  // b.any
    3c80:	mov	w0, #0xffffffff            	// #-1
    3c84:	b	3c8c <PyThread_free_lock@plt+0x135c>
    3c88:	mov	w0, #0x0                   	// #0
    3c8c:	ldp	x29, x30, [sp], #64
    3c90:	ret
    3c94:	sub	sp, sp, #0x10
    3c98:	str	x0, [sp, #8]
    3c9c:	ldr	x0, [sp, #8]
    3ca0:	ldr	x0, [x0]
    3ca4:	cmp	x0, #0x0
    3ca8:	b.ne	3cbc <PyThread_free_lock@plt+0x138c>  // b.any
    3cac:	ldr	x0, [sp, #8]
    3cb0:	ldr	x0, [x0, #8]
    3cb4:	cmp	x0, #0x0
    3cb8:	b.eq	3cc4 <PyThread_free_lock@plt+0x1394>  // b.none
    3cbc:	mov	w0, #0x1                   	// #1
    3cc0:	b	3cf0 <PyThread_free_lock@plt+0x13c0>
    3cc4:	ldr	x0, [sp, #8]
    3cc8:	ldr	x0, [x0, #16]
    3ccc:	cmp	x0, #0x0
    3cd0:	b.ne	3cec <PyThread_free_lock@plt+0x13bc>  // b.any
    3cd4:	ldr	x0, [sp, #8]
    3cd8:	ldr	x0, [x0, #24]
    3cdc:	cmp	x0, #0x0
    3ce0:	b.ne	3cec <PyThread_free_lock@plt+0x13bc>  // b.any
    3ce4:	mov	w0, #0x1                   	// #1
    3ce8:	b	3cf0 <PyThread_free_lock@plt+0x13c0>
    3cec:	mov	w0, #0x0                   	// #0
    3cf0:	add	sp, sp, #0x10
    3cf4:	ret
    3cf8:	sub	sp, sp, #0x20
    3cfc:	str	x0, [sp, #24]
    3d00:	str	x1, [sp, #16]
    3d04:	str	w2, [sp, #12]
    3d08:	ldr	x0, [sp, #16]
    3d0c:	str	wzr, [x0, #16]
    3d10:	ldr	w0, [sp, #12]
    3d14:	cmp	w0, #0x0
    3d18:	b.eq	3d34 <PyThread_free_lock@plt+0x1404>  // b.none
    3d1c:	ldr	x0, [sp, #24]
    3d20:	ldr	x0, [x0]
    3d24:	sub	x1, x0, #0x1
    3d28:	ldr	x0, [sp, #24]
    3d2c:	str	x1, [x0]
    3d30:	b	3d48 <PyThread_free_lock@plt+0x1418>
    3d34:	ldr	x0, [sp, #24]
    3d38:	ldr	x0, [x0, #8]
    3d3c:	sub	x1, x0, #0x1
    3d40:	ldr	x0, [sp, #24]
    3d44:	str	x1, [x0, #8]
    3d48:	nop
    3d4c:	add	sp, sp, #0x20
    3d50:	ret
    3d54:	stp	x29, x30, [sp, #-64]!
    3d58:	mov	x29, sp
    3d5c:	str	x0, [sp, #40]
    3d60:	str	x1, [sp, #32]
    3d64:	str	w2, [sp, #28]
    3d68:	ldr	w0, [sp, #28]
    3d6c:	cmp	w0, #0x0
    3d70:	b.lt	3ddc <PyThread_free_lock@plt+0x14ac>  // b.tstop
    3d74:	ldr	x0, [sp, #40]
    3d78:	ldr	x0, [x0, #16]
    3d7c:	add	x1, sp, #0x30
    3d80:	mov	x2, x1
    3d84:	ldr	x1, [sp, #32]
    3d88:	bl	39c4 <PyThread_free_lock@plt+0x1094>
    3d8c:	str	x0, [sp, #56]
    3d90:	ldr	x0, [sp, #56]
    3d94:	cmp	x0, #0x0
    3d98:	b.ne	3dcc <PyThread_free_lock@plt+0x149c>  // b.any
    3d9c:	ldr	x0, [sp, #48]
    3da0:	mov	w3, #0x1                   	// #1
    3da4:	ldr	x2, [sp, #32]
    3da8:	mov	x1, x0
    3dac:	ldr	x0, [sp, #40]
    3db0:	bl	3b10 <PyThread_free_lock@plt+0x11e0>
    3db4:	str	x0, [sp, #56]
    3db8:	ldr	x0, [sp, #56]
    3dbc:	cmp	x0, #0x0
    3dc0:	b.ne	3dcc <PyThread_free_lock@plt+0x149c>  // b.any
    3dc4:	mov	w0, #0xffffffff            	// #-1
    3dc8:	b	3e54 <PyThread_free_lock@plt+0x1524>
    3dcc:	mov	w2, #0x1                   	// #1
    3dd0:	ldr	x1, [sp, #56]
    3dd4:	ldr	x0, [sp, #40]
    3dd8:	bl	3cf8 <PyThread_free_lock@plt+0x13c8>
    3ddc:	ldr	w0, [sp, #28]
    3de0:	cmp	w0, #0x0
    3de4:	b.gt	3e50 <PyThread_free_lock@plt+0x1520>
    3de8:	ldr	x0, [sp, #40]
    3dec:	ldr	x0, [x0, #24]
    3df0:	add	x1, sp, #0x30
    3df4:	mov	x2, x1
    3df8:	ldr	x1, [sp, #32]
    3dfc:	bl	39c4 <PyThread_free_lock@plt+0x1094>
    3e00:	str	x0, [sp, #56]
    3e04:	ldr	x0, [sp, #56]
    3e08:	cmp	x0, #0x0
    3e0c:	b.ne	3e40 <PyThread_free_lock@plt+0x1510>  // b.any
    3e10:	ldr	x0, [sp, #48]
    3e14:	mov	w3, #0x0                   	// #0
    3e18:	ldr	x2, [sp, #32]
    3e1c:	mov	x1, x0
    3e20:	ldr	x0, [sp, #40]
    3e24:	bl	3b10 <PyThread_free_lock@plt+0x11e0>
    3e28:	str	x0, [sp, #56]
    3e2c:	ldr	x0, [sp, #56]
    3e30:	cmp	x0, #0x0
    3e34:	b.ne	3e40 <PyThread_free_lock@plt+0x1510>  // b.any
    3e38:	mov	w0, #0xffffffff            	// #-1
    3e3c:	b	3e54 <PyThread_free_lock@plt+0x1524>
    3e40:	mov	w2, #0x0                   	// #0
    3e44:	ldr	x1, [sp, #56]
    3e48:	ldr	x0, [sp, #40]
    3e4c:	bl	3cf8 <PyThread_free_lock@plt+0x13c8>
    3e50:	mov	w0, #0x0                   	// #0
    3e54:	ldp	x29, x30, [sp], #64
    3e58:	ret
    3e5c:	stp	x29, x30, [sp, #-48]!
    3e60:	mov	x29, sp
    3e64:	str	x0, [sp, #24]
    3e68:	str	w1, [sp, #20]
    3e6c:	str	w2, [sp, #16]
    3e70:	ldr	x0, [sp, #24]
    3e74:	ldr	x0, [x0, #16]
    3e78:	str	x0, [sp, #40]
    3e7c:	b	3e9c <PyThread_free_lock@plt+0x156c>
    3e80:	mov	w2, #0x1                   	// #1
    3e84:	ldr	x1, [sp, #40]
    3e88:	ldr	x0, [sp, #24]
    3e8c:	bl	3cf8 <PyThread_free_lock@plt+0x13c8>
    3e90:	ldr	x0, [sp, #40]
    3e94:	ldr	x0, [x0]
    3e98:	str	x0, [sp, #40]
    3e9c:	ldr	x0, [sp, #40]
    3ea0:	cmp	x0, #0x0
    3ea4:	b.ne	3e80 <PyThread_free_lock@plt+0x1550>  // b.any
    3ea8:	ldr	x0, [sp, #24]
    3eac:	ldr	x0, [x0, #24]
    3eb0:	str	x0, [sp, #40]
    3eb4:	b	3ed4 <PyThread_free_lock@plt+0x15a4>
    3eb8:	mov	w2, #0x0                   	// #0
    3ebc:	ldr	x1, [sp, #40]
    3ec0:	ldr	x0, [sp, #24]
    3ec4:	bl	3cf8 <PyThread_free_lock@plt+0x13c8>
    3ec8:	ldr	x0, [sp, #40]
    3ecc:	ldr	x0, [x0]
    3ed0:	str	x0, [sp, #40]
    3ed4:	ldr	x0, [sp, #40]
    3ed8:	cmp	x0, #0x0
    3edc:	b.ne	3eb8 <PyThread_free_lock@plt+0x1588>  // b.any
    3ee0:	nop
    3ee4:	nop
    3ee8:	ldp	x29, x30, [sp], #48
    3eec:	ret
    3ef0:	stp	x29, x30, [sp, #-32]!
    3ef4:	mov	x29, sp
    3ef8:	mov	x0, #0x28                  	// #40
    3efc:	bl	2910 <PyMem_Malloc@plt>
    3f00:	str	x0, [sp, #24]
    3f04:	ldr	x0, [sp, #24]
    3f08:	cmp	x0, #0x0
    3f0c:	b.ne	3f18 <PyThread_free_lock@plt+0x15e8>  // b.any
    3f10:	mov	x0, #0x0                   	// #0
    3f14:	b	3fe8 <PyThread_free_lock@plt+0x16b8>
    3f18:	bl	2790 <PyThread_allocate_lock@plt>
    3f1c:	mov	x1, x0
    3f20:	ldr	x0, [sp, #24]
    3f24:	str	x1, [x0]
    3f28:	ldr	x0, [sp, #24]
    3f2c:	ldr	x0, [x0]
    3f30:	cmp	x0, #0x0
    3f34:	b.ne	3f64 <PyThread_free_lock@plt+0x1634>  // b.any
    3f38:	ldr	x0, [sp, #24]
    3f3c:	bl	2590 <PyMem_Free@plt>
    3f40:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    3f44:	add	x0, x0, #0x930
    3f48:	ldr	x2, [x0]
    3f4c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    3f50:	add	x1, x0, #0x160
    3f54:	mov	x0, x2
    3f58:	bl	2670 <PyErr_SetString@plt>
    3f5c:	mov	x0, #0x0                   	// #0
    3f60:	b	3fe8 <PyThread_free_lock@plt+0x16b8>
    3f64:	bl	373c <PyThread_free_lock@plt+0xe0c>
    3f68:	mov	x1, x0
    3f6c:	ldr	x0, [sp, #24]
    3f70:	str	x1, [x0, #8]
    3f74:	ldr	x0, [sp, #24]
    3f78:	ldr	x0, [x0, #8]
    3f7c:	cmp	x0, #0x0
    3f80:	b.ne	3f94 <PyThread_free_lock@plt+0x1664>  // b.any
    3f84:	ldr	x0, [sp, #24]
    3f88:	bl	2590 <PyMem_Free@plt>
    3f8c:	mov	x0, #0x0                   	// #0
    3f90:	b	3fe8 <PyThread_free_lock@plt+0x16b8>
    3f94:	bl	3a44 <PyThread_free_lock@plt+0x1114>
    3f98:	mov	x1, x0
    3f9c:	ldr	x0, [sp, #24]
    3fa0:	str	x1, [x0, #16]
    3fa4:	ldr	x0, [sp, #24]
    3fa8:	ldr	x0, [x0, #16]
    3fac:	cmp	x0, #0x0
    3fb0:	b.ne	3fd0 <PyThread_free_lock@plt+0x16a0>  // b.any
    3fb4:	ldr	x0, [sp, #24]
    3fb8:	ldr	x0, [x0, #8]
    3fbc:	bl	37c8 <PyThread_free_lock@plt+0xe98>
    3fc0:	ldr	x0, [sp, #24]
    3fc4:	bl	2590 <PyMem_Free@plt>
    3fc8:	mov	x0, #0x0                   	// #0
    3fcc:	b	3fe8 <PyThread_free_lock@plt+0x16b8>
    3fd0:	ldr	x0, [sp, #24]
    3fd4:	mov	w1, #0x1                   	// #1
    3fd8:	str	w1, [x0, #24]
    3fdc:	ldr	x0, [sp, #24]
    3fe0:	str	xzr, [x0, #32]
    3fe4:	ldr	x0, [sp, #24]
    3fe8:	ldp	x29, x30, [sp], #32
    3fec:	ret
    3ff0:	stp	x29, x30, [sp, #-32]!
    3ff4:	mov	x29, sp
    3ff8:	str	x0, [sp, #24]
    3ffc:	ldr	x0, [sp, #24]
    4000:	bl	4e70 <PyThread_free_lock@plt+0x2540>
    4004:	ldr	x0, [sp, #24]
    4008:	ldr	x0, [x0]
    400c:	mov	w1, #0x1                   	// #1
    4010:	bl	2640 <PyThread_acquire_lock@plt>
    4014:	ldr	x0, [sp, #24]
    4018:	ldr	x0, [x0, #8]
    401c:	bl	37c8 <PyThread_free_lock@plt+0xe98>
    4020:	ldr	x0, [sp, #24]
    4024:	ldr	x0, [x0, #16]
    4028:	bl	3ae8 <PyThread_free_lock@plt+0x11b8>
    402c:	ldr	x0, [sp, #24]
    4030:	ldr	x0, [x0]
    4034:	bl	27b0 <PyThread_release_lock@plt>
    4038:	ldr	x0, [sp, #24]
    403c:	ldr	x0, [x0]
    4040:	bl	2930 <PyThread_free_lock@plt>
    4044:	ldr	x0, [sp, #24]
    4048:	bl	2590 <PyMem_Free@plt>
    404c:	nop
    4050:	ldp	x29, x30, [sp], #32
    4054:	ret
    4058:	stp	x29, x30, [sp, #-64]!
    405c:	mov	x29, sp
    4060:	str	x0, [sp, #40]
    4064:	str	x1, [sp, #32]
    4068:	str	x2, [sp, #24]
    406c:	mov	w0, #0xffffffff            	// #-1
    4070:	str	w0, [sp, #60]
    4074:	ldr	x0, [sp, #40]
    4078:	ldr	x0, [x0]
    407c:	mov	w1, #0x1                   	// #1
    4080:	bl	2640 <PyThread_acquire_lock@plt>
    4084:	ldr	x0, [sp, #40]
    4088:	ldr	w0, [x0, #24]
    408c:	cmp	w0, #0x0
    4090:	b.ne	40b4 <PyThread_free_lock@plt+0x1784>  // b.any
    4094:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4098:	add	x0, x0, #0x940
    409c:	ldr	x2, [x0]
    40a0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    40a4:	add	x1, x0, #0x188
    40a8:	mov	x0, x2
    40ac:	bl	2670 <PyErr_SetString@plt>
    40b0:	b	40fc <PyThread_free_lock@plt+0x17cc>
    40b4:	ldr	x0, [sp, #40]
    40b8:	ldr	x0, [x0, #16]
    40bc:	mov	w2, #0x1                   	// #1
    40c0:	ldr	x1, [sp, #32]
    40c4:	bl	3bd0 <PyThread_free_lock@plt+0x12a0>
    40c8:	cmp	w0, #0x0
    40cc:	b.ne	40f0 <PyThread_free_lock@plt+0x17c0>  // b.any
    40d0:	ldr	x0, [sp, #40]
    40d4:	ldr	x0, [x0, #8]
    40d8:	ldr	x1, [sp, #24]
    40dc:	bl	37f0 <PyThread_free_lock@plt+0xec0>
    40e0:	cmp	w0, #0x0
    40e4:	b.ne	40f8 <PyThread_free_lock@plt+0x17c8>  // b.any
    40e8:	str	wzr, [sp, #60]
    40ec:	b	40fc <PyThread_free_lock@plt+0x17cc>
    40f0:	nop
    40f4:	b	40fc <PyThread_free_lock@plt+0x17cc>
    40f8:	nop
    40fc:	ldr	x0, [sp, #40]
    4100:	ldr	x0, [x0]
    4104:	bl	27b0 <PyThread_release_lock@plt>
    4108:	ldr	w0, [sp, #60]
    410c:	ldp	x29, x30, [sp], #64
    4110:	ret
    4114:	stp	x29, x30, [sp, #-48]!
    4118:	mov	x29, sp
    411c:	str	x0, [sp, #24]
    4120:	str	x1, [sp, #16]
    4124:	str	xzr, [sp, #40]
    4128:	ldr	x0, [sp, #24]
    412c:	ldr	x0, [x0]
    4130:	mov	w1, #0x1                   	// #1
    4134:	bl	2640 <PyThread_acquire_lock@plt>
    4138:	ldr	x0, [sp, #24]
    413c:	ldr	w0, [x0, #24]
    4140:	cmp	w0, #0x0
    4144:	b.ne	4168 <PyThread_free_lock@plt+0x1838>  // b.any
    4148:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    414c:	add	x0, x0, #0x940
    4150:	ldr	x2, [x0]
    4154:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4158:	add	x1, x0, #0x188
    415c:	mov	x0, x2
    4160:	bl	2670 <PyErr_SetString@plt>
    4164:	b	41d4 <PyThread_free_lock@plt+0x18a4>
    4168:	ldr	x0, [sp, #24]
    416c:	ldr	x0, [x0, #16]
    4170:	mov	w2, #0x0                   	// #0
    4174:	ldr	x1, [sp, #16]
    4178:	bl	3bd0 <PyThread_free_lock@plt+0x12a0>
    417c:	cmp	w0, #0x0
    4180:	b.ne	41c8 <PyThread_free_lock@plt+0x1898>  // b.any
    4184:	ldr	x0, [sp, #24]
    4188:	ldr	x0, [x0, #8]
    418c:	bl	3884 <PyThread_free_lock@plt+0xf54>
    4190:	str	x0, [sp, #40]
    4194:	ldr	x0, [sp, #40]
    4198:	cmp	x0, #0x0
    419c:	b.ne	41d0 <PyThread_free_lock@plt+0x18a0>  // b.any
    41a0:	bl	2730 <PyErr_Occurred@plt>
    41a4:	cmp	x0, #0x0
    41a8:	b.ne	41d0 <PyThread_free_lock@plt+0x18a0>  // b.any
    41ac:	ldr	x0, [sp, #24]
    41b0:	ldr	x0, [x0, #32]
    41b4:	cmp	x0, #0x0
    41b8:	b.eq	41d0 <PyThread_free_lock@plt+0x18a0>  // b.none
    41bc:	ldr	x0, [sp, #24]
    41c0:	str	wzr, [x0, #24]
    41c4:	b	41d4 <PyThread_free_lock@plt+0x18a4>
    41c8:	nop
    41cc:	b	41d4 <PyThread_free_lock@plt+0x18a4>
    41d0:	nop
    41d4:	ldr	x0, [sp, #24]
    41d8:	ldr	x0, [x0]
    41dc:	bl	27b0 <PyThread_release_lock@plt>
    41e0:	ldr	x0, [sp, #24]
    41e4:	ldr	x0, [x0, #8]
    41e8:	ldr	x0, [x0]
    41ec:	cmp	x0, #0x0
    41f0:	b.ne	41fc <PyThread_free_lock@plt+0x18cc>  // b.any
    41f4:	ldr	x0, [sp, #24]
    41f8:	bl	4ec8 <PyThread_free_lock@plt+0x2598>
    41fc:	ldr	x0, [sp, #40]
    4200:	ldp	x29, x30, [sp], #48
    4204:	ret
    4208:	stp	x29, x30, [sp, #-64]!
    420c:	mov	x29, sp
    4210:	str	x0, [sp, #40]
    4214:	str	x1, [sp, #32]
    4218:	str	w2, [sp, #28]
    421c:	ldr	x0, [sp, #40]
    4220:	ldr	x0, [x0]
    4224:	mov	w1, #0x1                   	// #1
    4228:	bl	2640 <PyThread_acquire_lock@plt>
    422c:	mov	w0, #0xffffffff            	// #-1
    4230:	str	w0, [sp, #60]
    4234:	ldr	x0, [sp, #40]
    4238:	ldr	w0, [x0, #24]
    423c:	cmp	w0, #0x0
    4240:	b.ne	4264 <PyThread_free_lock@plt+0x1934>  // b.any
    4244:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4248:	add	x0, x0, #0x940
    424c:	ldr	x2, [x0]
    4250:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4254:	add	x1, x0, #0x148
    4258:	mov	x0, x2
    425c:	bl	2670 <PyErr_SetString@plt>
    4260:	b	42a4 <PyThread_free_lock@plt+0x1974>
    4264:	ldr	x0, [sp, #40]
    4268:	ldr	x0, [x0, #16]
    426c:	ldr	w2, [sp, #28]
    4270:	ldr	x1, [sp, #32]
    4274:	bl	3d54 <PyThread_free_lock@plt+0x1424>
    4278:	cmp	w0, #0x0
    427c:	b.ne	42a0 <PyThread_free_lock@plt+0x1970>  // b.any
    4280:	ldr	x0, [sp, #40]
    4284:	ldr	x0, [x0, #16]
    4288:	bl	3c94 <PyThread_free_lock@plt+0x1364>
    428c:	mov	w1, w0
    4290:	ldr	x0, [sp, #40]
    4294:	str	w1, [x0, #24]
    4298:	str	wzr, [sp, #60]
    429c:	b	42a4 <PyThread_free_lock@plt+0x1974>
    42a0:	nop
    42a4:	ldr	x0, [sp, #40]
    42a8:	ldr	x0, [x0]
    42ac:	bl	27b0 <PyThread_release_lock@plt>
    42b0:	ldr	w0, [sp, #60]
    42b4:	ldp	x29, x30, [sp], #64
    42b8:	ret
    42bc:	stp	x29, x30, [sp, #-48]!
    42c0:	mov	x29, sp
    42c4:	str	x0, [sp, #24]
    42c8:	str	w1, [sp, #20]
    42cc:	str	w2, [sp, #16]
    42d0:	mov	w0, #0xffffffff            	// #-1
    42d4:	str	w0, [sp, #44]
    42d8:	ldr	x0, [sp, #24]
    42dc:	ldr	x0, [x0]
    42e0:	mov	w1, #0x1                   	// #1
    42e4:	bl	2640 <PyThread_acquire_lock@plt>
    42e8:	ldr	x0, [sp, #24]
    42ec:	ldr	w0, [x0, #24]
    42f0:	cmp	w0, #0x0
    42f4:	b.ne	4318 <PyThread_free_lock@plt+0x19e8>  // b.any
    42f8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    42fc:	add	x0, x0, #0x940
    4300:	ldr	x2, [x0]
    4304:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4308:	add	x1, x0, #0x148
    430c:	mov	x0, x2
    4310:	bl	2670 <PyErr_SetString@plt>
    4314:	b	4378 <PyThread_free_lock@plt+0x1a48>
    4318:	ldr	w0, [sp, #16]
    431c:	cmp	w0, #0x0
    4320:	b.ne	4358 <PyThread_free_lock@plt+0x1a28>  // b.any
    4324:	ldr	x0, [sp, #24]
    4328:	ldr	x0, [x0, #8]
    432c:	ldr	x0, [x0]
    4330:	cmp	x0, #0x0
    4334:	b.le	4358 <PyThread_free_lock@plt+0x1a28>
    4338:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    433c:	add	x0, x0, #0x950
    4340:	ldr	x2, [x0]
    4344:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4348:	add	x1, x0, #0x198
    434c:	mov	x0, x2
    4350:	bl	2670 <PyErr_SetString@plt>
    4354:	b	4378 <PyThread_free_lock@plt+0x1a48>
    4358:	ldr	x0, [sp, #24]
    435c:	str	wzr, [x0, #24]
    4360:	ldr	x0, [sp, #24]
    4364:	ldr	x0, [x0, #16]
    4368:	ldr	w2, [sp, #16]
    436c:	ldr	w1, [sp, #20]
    4370:	bl	3e5c <PyThread_free_lock@plt+0x152c>
    4374:	str	wzr, [sp, #44]
    4378:	ldr	x0, [sp, #24]
    437c:	ldr	x0, [x0]
    4380:	bl	27b0 <PyThread_release_lock@plt>
    4384:	ldr	w0, [sp, #44]
    4388:	ldp	x29, x30, [sp], #48
    438c:	ret
    4390:	stp	x29, x30, [sp, #-48]!
    4394:	mov	x29, sp
    4398:	str	x0, [sp, #24]
    439c:	str	x1, [sp, #16]
    43a0:	mov	x0, #0x20                  	// #32
    43a4:	bl	2910 <PyMem_Malloc@plt>
    43a8:	str	x0, [sp, #40]
    43ac:	ldr	x0, [sp, #40]
    43b0:	cmp	x0, #0x0
    43b4:	b.ne	43c0 <PyThread_free_lock@plt+0x1a90>  // b.any
    43b8:	mov	x0, #0x0                   	// #0
    43bc:	b	43ec <PyThread_free_lock@plt+0x1abc>
    43c0:	ldr	x0, [sp, #40]
    43c4:	ldr	x1, [sp, #24]
    43c8:	str	x1, [x0]
    43cc:	ldr	x0, [sp, #40]
    43d0:	ldr	x1, [sp, #16]
    43d4:	str	x1, [x0, #8]
    43d8:	ldr	x0, [sp, #40]
    43dc:	str	xzr, [x0, #16]
    43e0:	ldr	x0, [sp, #40]
    43e4:	str	xzr, [x0, #24]
    43e8:	ldr	x0, [sp, #40]
    43ec:	ldp	x29, x30, [sp], #48
    43f0:	ret
    43f4:	stp	x29, x30, [sp, #-32]!
    43f8:	mov	x29, sp
    43fc:	str	x0, [sp, #24]
    4400:	ldr	x0, [sp, #24]
    4404:	ldr	x0, [x0, #8]
    4408:	cmp	x0, #0x0
    440c:	b.eq	441c <PyThread_free_lock@plt+0x1aec>  // b.none
    4410:	ldr	x0, [sp, #24]
    4414:	ldr	x0, [x0, #8]
    4418:	bl	4e70 <PyThread_free_lock@plt+0x2540>
    441c:	ldr	x0, [sp, #24]
    4420:	bl	2590 <PyMem_Free@plt>
    4424:	nop
    4428:	ldp	x29, x30, [sp], #32
    442c:	ret
    4430:	sub	sp, sp, #0x30
    4434:	str	x0, [sp, #24]
    4438:	str	x1, [sp, #16]
    443c:	str	x2, [sp, #8]
    4440:	str	xzr, [sp, #40]
    4444:	ldr	x0, [sp, #24]
    4448:	str	x0, [sp, #32]
    444c:	b	4478 <PyThread_free_lock@plt+0x1b48>
    4450:	ldr	x0, [sp, #32]
    4454:	ldr	x0, [x0]
    4458:	ldr	x1, [sp, #16]
    445c:	cmp	x1, x0
    4460:	b.eq	4488 <PyThread_free_lock@plt+0x1b58>  // b.none
    4464:	ldr	x0, [sp, #32]
    4468:	str	x0, [sp, #40]
    446c:	ldr	x0, [sp, #32]
    4470:	ldr	x0, [x0, #16]
    4474:	str	x0, [sp, #32]
    4478:	ldr	x0, [sp, #32]
    447c:	cmp	x0, #0x0
    4480:	b.ne	4450 <PyThread_free_lock@plt+0x1b20>  // b.any
    4484:	b	448c <PyThread_free_lock@plt+0x1b5c>
    4488:	nop
    448c:	ldr	x0, [sp, #8]
    4490:	cmp	x0, #0x0
    4494:	b.eq	44a4 <PyThread_free_lock@plt+0x1b74>  // b.none
    4498:	ldr	x0, [sp, #8]
    449c:	ldr	x1, [sp, #40]
    44a0:	str	x1, [x0]
    44a4:	ldr	x0, [sp, #32]
    44a8:	add	sp, sp, #0x30
    44ac:	ret
    44b0:	stp	x29, x30, [sp, #-32]!
    44b4:	mov	x29, sp
    44b8:	str	x0, [sp, #24]
    44bc:	ldr	x0, [sp, #24]
    44c0:	ldr	x0, [x0]
    44c4:	cmp	x0, #0x0
    44c8:	b.ne	4510 <PyThread_free_lock@plt+0x1be0>  // b.any
    44cc:	bl	2790 <PyThread_allocate_lock@plt>
    44d0:	mov	x1, x0
    44d4:	ldr	x0, [sp, #24]
    44d8:	str	x1, [x0]
    44dc:	ldr	x0, [sp, #24]
    44e0:	ldr	x0, [x0]
    44e4:	cmp	x0, #0x0
    44e8:	b.ne	4510 <PyThread_free_lock@plt+0x1be0>  // b.any
    44ec:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    44f0:	add	x0, x0, #0x930
    44f4:	ldr	x2, [x0]
    44f8:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    44fc:	add	x1, x0, #0x1c8
    4500:	mov	x0, x2
    4504:	bl	2670 <PyErr_SetString@plt>
    4508:	mov	w0, #0xffffffff            	// #-1
    450c:	b	452c <PyThread_free_lock@plt+0x1bfc>
    4510:	ldr	x0, [sp, #24]
    4514:	str	xzr, [x0, #8]
    4518:	ldr	x0, [sp, #24]
    451c:	str	xzr, [x0, #16]
    4520:	ldr	x0, [sp, #24]
    4524:	str	xzr, [x0, #24]
    4528:	mov	w0, #0x0                   	// #0
    452c:	ldp	x29, x30, [sp], #32
    4530:	ret
    4534:	stp	x29, x30, [sp, #-48]!
    4538:	mov	x29, sp
    453c:	str	x0, [sp, #24]
    4540:	ldr	x0, [sp, #24]
    4544:	ldr	x0, [x0, #24]
    4548:	str	x0, [sp, #40]
    454c:	ldr	x0, [sp, #40]
    4550:	cmp	x0, #0x0
    4554:	b.ge	457c <PyThread_free_lock@plt+0x1c4c>  // b.tcont
    4558:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    455c:	add	x0, x0, #0x930
    4560:	ldr	x2, [x0]
    4564:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4568:	add	x1, x0, #0x1f8
    456c:	mov	x0, x2
    4570:	bl	2670 <PyErr_SetString@plt>
    4574:	mov	x0, #0xffffffffffffffff    	// #-1
    4578:	b	4594 <PyThread_free_lock@plt+0x1c64>
    457c:	ldr	x0, [sp, #24]
    4580:	ldr	x0, [x0, #24]
    4584:	add	x1, x0, #0x1
    4588:	ldr	x0, [sp, #24]
    458c:	str	x1, [x0, #24]
    4590:	ldr	x0, [sp, #40]
    4594:	ldp	x29, x30, [sp], #48
    4598:	ret
    459c:	stp	x29, x30, [sp, #-64]!
    45a0:	mov	x29, sp
    45a4:	str	x0, [sp, #40]
    45a8:	str	x1, [sp, #32]
    45ac:	str	x2, [sp, #24]
    45b0:	str	xzr, [sp, #56]
    45b4:	ldr	x0, [sp, #40]
    45b8:	ldr	x0, [x0]
    45bc:	mov	w1, #0x1                   	// #1
    45c0:	bl	2640 <PyThread_acquire_lock@plt>
    45c4:	ldr	x0, [sp, #24]
    45c8:	cmp	x0, #0x0
    45cc:	b.eq	45d8 <PyThread_free_lock@plt+0x1ca8>  // b.none
    45d0:	ldr	x0, [sp, #24]
    45d4:	str	xzr, [x0]
    45d8:	ldr	x0, [sp, #40]
    45dc:	ldr	x0, [x0, #8]
    45e0:	mov	x2, #0x0                   	// #0
    45e4:	ldr	x1, [sp, #32]
    45e8:	bl	4430 <PyThread_free_lock@plt+0x1b00>
    45ec:	str	x0, [sp, #48]
    45f0:	ldr	x0, [sp, #48]
    45f4:	cmp	x0, #0x0
    45f8:	b.ne	4620 <PyThread_free_lock@plt+0x1cf0>  // b.any
    45fc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4600:	add	x0, x0, #0x938
    4604:	ldr	x3, [x0]
    4608:	ldr	x2, [sp, #32]
    460c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4610:	add	x1, x0, #0x218
    4614:	mov	x0, x3
    4618:	bl	28c0 <PyErr_Format@plt>
    461c:	b	4690 <PyThread_free_lock@plt+0x1d60>
    4620:	ldr	x0, [sp, #48]
    4624:	ldr	x0, [x0, #8]
    4628:	cmp	x0, #0x0
    462c:	b.eq	4644 <PyThread_free_lock@plt+0x1d14>  // b.none
    4630:	ldr	x0, [sp, #48]
    4634:	ldr	x0, [x0, #8]
    4638:	ldr	w0, [x0, #24]
    463c:	cmp	w0, #0x0
    4640:	b.ne	4668 <PyThread_free_lock@plt+0x1d38>  // b.any
    4644:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4648:	add	x0, x0, #0x940
    464c:	ldr	x3, [x0]
    4650:	ldr	x2, [sp, #32]
    4654:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4658:	add	x1, x0, #0x230
    465c:	mov	x0, x3
    4660:	bl	28c0 <PyErr_Format@plt>
    4664:	b	4690 <PyThread_free_lock@plt+0x1d60>
    4668:	ldr	x0, [sp, #24]
    466c:	cmp	x0, #0x0
    4670:	b.eq	4684 <PyThread_free_lock@plt+0x1d54>  // b.none
    4674:	ldr	x0, [sp, #40]
    4678:	ldr	x1, [x0]
    467c:	ldr	x0, [sp, #24]
    4680:	str	x1, [x0]
    4684:	ldr	x0, [sp, #48]
    4688:	ldr	x0, [x0, #8]
    468c:	str	x0, [sp, #56]
    4690:	ldr	x0, [sp, #24]
    4694:	cmp	x0, #0x0
    4698:	b.eq	46ac <PyThread_free_lock@plt+0x1d7c>  // b.none
    469c:	ldr	x0, [sp, #24]
    46a0:	ldr	x0, [x0]
    46a4:	cmp	x0, #0x0
    46a8:	b.ne	46b8 <PyThread_free_lock@plt+0x1d88>  // b.any
    46ac:	ldr	x0, [sp, #40]
    46b0:	ldr	x0, [x0]
    46b4:	bl	27b0 <PyThread_release_lock@plt>
    46b8:	ldr	x0, [sp, #56]
    46bc:	ldp	x29, x30, [sp], #64
    46c0:	ret
    46c4:	stp	x29, x30, [sp, #-64]!
    46c8:	mov	x29, sp
    46cc:	str	x0, [sp, #24]
    46d0:	str	x1, [sp, #16]
    46d4:	mov	x0, #0xffffffffffffffff    	// #-1
    46d8:	str	x0, [sp, #56]
    46dc:	ldr	x0, [sp, #24]
    46e0:	ldr	x0, [x0]
    46e4:	mov	w1, #0x1                   	// #1
    46e8:	bl	2640 <PyThread_acquire_lock@plt>
    46ec:	ldr	x0, [sp, #24]
    46f0:	bl	4534 <PyThread_free_lock@plt+0x1c04>
    46f4:	str	x0, [sp, #48]
    46f8:	ldr	x0, [sp, #48]
    46fc:	cmp	x0, #0x0
    4700:	b.lt	475c <PyThread_free_lock@plt+0x1e2c>  // b.tstop
    4704:	ldr	x1, [sp, #16]
    4708:	ldr	x0, [sp, #48]
    470c:	bl	4390 <PyThread_free_lock@plt+0x1a60>
    4710:	str	x0, [sp, #40]
    4714:	ldr	x0, [sp, #40]
    4718:	cmp	x0, #0x0
    471c:	b.eq	4764 <PyThread_free_lock@plt+0x1e34>  // b.none
    4720:	ldr	x0, [sp, #24]
    4724:	ldr	x1, [x0, #8]
    4728:	ldr	x0, [sp, #40]
    472c:	str	x1, [x0, #16]
    4730:	ldr	x0, [sp, #24]
    4734:	ldr	x1, [sp, #40]
    4738:	str	x1, [x0, #8]
    473c:	ldr	x0, [sp, #24]
    4740:	ldr	x0, [x0, #16]
    4744:	add	x1, x0, #0x1
    4748:	ldr	x0, [sp, #24]
    474c:	str	x1, [x0, #16]
    4750:	ldr	x0, [sp, #48]
    4754:	str	x0, [sp, #56]
    4758:	b	4768 <PyThread_free_lock@plt+0x1e38>
    475c:	nop
    4760:	b	4768 <PyThread_free_lock@plt+0x1e38>
    4764:	nop
    4768:	ldr	x0, [sp, #24]
    476c:	ldr	x0, [x0]
    4770:	bl	27b0 <PyThread_release_lock@plt>
    4774:	ldr	x0, [sp, #56]
    4778:	ldp	x29, x30, [sp], #64
    477c:	ret
    4780:	stp	x29, x30, [sp, #-64]!
    4784:	mov	x29, sp
    4788:	str	x0, [sp, #40]
    478c:	str	x1, [sp, #32]
    4790:	str	x2, [sp, #24]
    4794:	str	w3, [sp, #20]
    4798:	str	w4, [sp, #16]
    479c:	mov	w0, #0xffffffff            	// #-1
    47a0:	str	w0, [sp, #60]
    47a4:	ldr	x0, [sp, #40]
    47a8:	ldr	x0, [x0]
    47ac:	mov	w1, #0x1                   	// #1
    47b0:	bl	2640 <PyThread_acquire_lock@plt>
    47b4:	ldr	x0, [sp, #24]
    47b8:	cmp	x0, #0x0
    47bc:	b.eq	47c8 <PyThread_free_lock@plt+0x1e98>  // b.none
    47c0:	ldr	x0, [sp, #24]
    47c4:	str	xzr, [x0]
    47c8:	ldr	x0, [sp, #40]
    47cc:	ldr	x0, [x0, #8]
    47d0:	mov	x2, #0x0                   	// #0
    47d4:	ldr	x1, [sp, #32]
    47d8:	bl	4430 <PyThread_free_lock@plt+0x1b00>
    47dc:	str	x0, [sp, #48]
    47e0:	ldr	x0, [sp, #48]
    47e4:	cmp	x0, #0x0
    47e8:	b.ne	4810 <PyThread_free_lock@plt+0x1ee0>  // b.any
    47ec:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    47f0:	add	x0, x0, #0x938
    47f4:	ldr	x3, [x0]
    47f8:	ldr	x2, [sp, #32]
    47fc:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4800:	add	x1, x0, #0x218
    4804:	mov	x0, x3
    4808:	bl	28c0 <PyErr_Format@plt>
    480c:	b	4998 <PyThread_free_lock@plt+0x2068>
    4810:	ldr	x0, [sp, #48]
    4814:	ldr	x0, [x0, #8]
    4818:	cmp	x0, #0x0
    481c:	b.ne	4844 <PyThread_free_lock@plt+0x1f14>  // b.any
    4820:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4824:	add	x0, x0, #0x940
    4828:	ldr	x3, [x0]
    482c:	ldr	x2, [sp, #32]
    4830:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4834:	add	x1, x0, #0x230
    4838:	mov	x0, x3
    483c:	bl	28c0 <PyErr_Format@plt>
    4840:	b	4998 <PyThread_free_lock@plt+0x2068>
    4844:	ldr	w0, [sp, #16]
    4848:	cmp	w0, #0x0
    484c:	b.ne	4894 <PyThread_free_lock@plt+0x1f64>  // b.any
    4850:	ldr	w0, [sp, #20]
    4854:	cmp	w0, #0x1
    4858:	b.ne	4894 <PyThread_free_lock@plt+0x1f64>  // b.any
    485c:	ldr	x0, [sp, #48]
    4860:	ldr	x0, [x0, #8]
    4864:	ldr	x0, [x0, #32]
    4868:	cmp	x0, #0x0
    486c:	b.eq	4894 <PyThread_free_lock@plt+0x1f64>  // b.none
    4870:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4874:	add	x0, x0, #0x940
    4878:	ldr	x3, [x0]
    487c:	ldr	x2, [sp, #32]
    4880:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4884:	add	x1, x0, #0x230
    4888:	mov	x0, x3
    488c:	bl	28c0 <PyErr_Format@plt>
    4890:	b	4998 <PyThread_free_lock@plt+0x2068>
    4894:	ldr	x0, [sp, #48]
    4898:	ldr	x0, [x0, #8]
    489c:	ldr	w2, [sp, #16]
    48a0:	ldr	w1, [sp, #20]
    48a4:	bl	42bc <PyThread_free_lock@plt+0x198c>
    48a8:	cmp	w0, #0x0
    48ac:	b.eq	4950 <PyThread_free_lock@plt+0x2020>  // b.none
    48b0:	ldr	w0, [sp, #20]
    48b4:	cmp	w0, #0x1
    48b8:	b.ne	498c <PyThread_free_lock@plt+0x205c>  // b.any
    48bc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    48c0:	add	x0, x0, #0x950
    48c4:	ldr	x0, [x0]
    48c8:	bl	26a0 <PyErr_ExceptionMatches@plt>
    48cc:	cmp	w0, #0x0
    48d0:	b.eq	498c <PyThread_free_lock@plt+0x205c>  // b.none
    48d4:	ldr	x0, [sp, #48]
    48d8:	ldr	x0, [x0, #8]
    48dc:	ldr	x0, [x0, #32]
    48e0:	cmp	x0, #0x0
    48e4:	b.eq	490c <PyThread_free_lock@plt+0x1fdc>  // b.none
    48e8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    48ec:	add	x0, x0, #0x940
    48f0:	ldr	x3, [x0]
    48f4:	ldr	x2, [sp, #32]
    48f8:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    48fc:	add	x1, x0, #0x230
    4900:	mov	x0, x3
    4904:	bl	28c0 <PyErr_Format@plt>
    4908:	b	4998 <PyThread_free_lock@plt+0x2068>
    490c:	bl	26f0 <PyErr_Clear@plt>
    4910:	ldr	x0, [sp, #40]
    4914:	ldr	x0, [x0]
    4918:	mov	x1, x0
    491c:	ldr	x0, [sp, #48]
    4920:	bl	4da0 <PyThread_free_lock@plt+0x2470>
    4924:	cmp	w0, #0x0
    4928:	b.ne	4994 <PyThread_free_lock@plt+0x2064>  // b.any
    492c:	ldr	x0, [sp, #24]
    4930:	cmp	x0, #0x0
    4934:	b.eq	4948 <PyThread_free_lock@plt+0x2018>  // b.none
    4938:	ldr	x0, [sp, #48]
    493c:	ldr	x1, [x0, #8]
    4940:	ldr	x0, [sp, #24]
    4944:	str	x1, [x0]
    4948:	str	wzr, [sp, #60]
    494c:	b	498c <PyThread_free_lock@plt+0x205c>
    4950:	ldr	x0, [sp, #24]
    4954:	cmp	x0, #0x0
    4958:	b.eq	4970 <PyThread_free_lock@plt+0x2040>  // b.none
    495c:	ldr	x0, [sp, #48]
    4960:	ldr	x1, [x0, #8]
    4964:	ldr	x0, [sp, #24]
    4968:	str	x1, [x0]
    496c:	b	497c <PyThread_free_lock@plt+0x204c>
    4970:	ldr	x0, [sp, #48]
    4974:	ldr	x0, [x0, #8]
    4978:	bl	3ff0 <PyThread_free_lock@plt+0x16c0>
    497c:	ldr	x0, [sp, #48]
    4980:	str	xzr, [x0, #8]
    4984:	str	wzr, [sp, #60]
    4988:	b	4998 <PyThread_free_lock@plt+0x2068>
    498c:	nop
    4990:	b	4998 <PyThread_free_lock@plt+0x2068>
    4994:	nop
    4998:	ldr	x0, [sp, #40]
    499c:	ldr	x0, [x0]
    49a0:	bl	27b0 <PyThread_release_lock@plt>
    49a4:	ldr	w0, [sp, #60]
    49a8:	ldp	x29, x30, [sp], #64
    49ac:	ret
    49b0:	stp	x29, x30, [sp, #-48]!
    49b4:	mov	x29, sp
    49b8:	str	x0, [sp, #40]
    49bc:	str	x1, [sp, #32]
    49c0:	str	x2, [sp, #24]
    49c4:	str	x3, [sp, #16]
    49c8:	ldr	x0, [sp, #40]
    49cc:	ldr	x0, [x0, #8]
    49d0:	ldr	x1, [sp, #32]
    49d4:	cmp	x1, x0
    49d8:	b.ne	49f0 <PyThread_free_lock@plt+0x20c0>  // b.any
    49dc:	ldr	x0, [sp, #32]
    49e0:	ldr	x1, [x0, #16]
    49e4:	ldr	x0, [sp, #40]
    49e8:	str	x1, [x0, #8]
    49ec:	b	4a00 <PyThread_free_lock@plt+0x20d0>
    49f0:	ldr	x0, [sp, #32]
    49f4:	ldr	x1, [x0, #16]
    49f8:	ldr	x0, [sp, #24]
    49fc:	str	x1, [x0, #16]
    4a00:	ldr	x0, [sp, #40]
    4a04:	ldr	x0, [x0, #16]
    4a08:	sub	x1, x0, #0x1
    4a0c:	ldr	x0, [sp, #40]
    4a10:	str	x1, [x0, #16]
    4a14:	ldr	x0, [sp, #16]
    4a18:	cmp	x0, #0x0
    4a1c:	b.eq	4a30 <PyThread_free_lock@plt+0x2100>  // b.none
    4a20:	ldr	x0, [sp, #32]
    4a24:	ldr	x1, [x0, #8]
    4a28:	ldr	x0, [sp, #16]
    4a2c:	str	x1, [x0]
    4a30:	ldr	x0, [sp, #32]
    4a34:	bl	43f4 <PyThread_free_lock@plt+0x1ac4>
    4a38:	nop
    4a3c:	ldp	x29, x30, [sp], #48
    4a40:	ret
    4a44:	stp	x29, x30, [sp, #-80]!
    4a48:	mov	x29, sp
    4a4c:	str	x0, [sp, #40]
    4a50:	str	x1, [sp, #32]
    4a54:	str	x2, [sp, #24]
    4a58:	mov	w0, #0xffffffff            	// #-1
    4a5c:	str	w0, [sp, #76]
    4a60:	ldr	x0, [sp, #40]
    4a64:	ldr	x0, [x0]
    4a68:	mov	w1, #0x1                   	// #1
    4a6c:	bl	2640 <PyThread_acquire_lock@plt>
    4a70:	ldr	x0, [sp, #24]
    4a74:	cmp	x0, #0x0
    4a78:	b.eq	4a84 <PyThread_free_lock@plt+0x2154>  // b.none
    4a7c:	ldr	x0, [sp, #24]
    4a80:	str	xzr, [x0]
    4a84:	str	xzr, [sp, #56]
    4a88:	ldr	x0, [sp, #40]
    4a8c:	ldr	x0, [x0, #8]
    4a90:	add	x1, sp, #0x38
    4a94:	mov	x2, x1
    4a98:	ldr	x1, [sp, #32]
    4a9c:	bl	4430 <PyThread_free_lock@plt+0x1b00>
    4aa0:	str	x0, [sp, #64]
    4aa4:	ldr	x0, [sp, #64]
    4aa8:	cmp	x0, #0x0
    4aac:	b.ne	4ad4 <PyThread_free_lock@plt+0x21a4>  // b.any
    4ab0:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4ab4:	add	x0, x0, #0x938
    4ab8:	ldr	x3, [x0]
    4abc:	ldr	x2, [sp, #32]
    4ac0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4ac4:	add	x1, x0, #0x218
    4ac8:	mov	x0, x3
    4acc:	bl	28c0 <PyErr_Format@plt>
    4ad0:	b	4af0 <PyThread_free_lock@plt+0x21c0>
    4ad4:	ldr	x0, [sp, #56]
    4ad8:	ldr	x3, [sp, #24]
    4adc:	mov	x2, x0
    4ae0:	ldr	x1, [sp, #64]
    4ae4:	ldr	x0, [sp, #40]
    4ae8:	bl	49b0 <PyThread_free_lock@plt+0x2080>
    4aec:	str	wzr, [sp, #76]
    4af0:	ldr	x0, [sp, #40]
    4af4:	ldr	x0, [x0]
    4af8:	bl	27b0 <PyThread_release_lock@plt>
    4afc:	ldr	w0, [sp, #76]
    4b00:	ldp	x29, x30, [sp], #80
    4b04:	ret
    4b08:	stp	x29, x30, [sp, #-48]!
    4b0c:	mov	x29, sp
    4b10:	str	x0, [sp, #24]
    4b14:	str	x1, [sp, #16]
    4b18:	mov	w0, #0xffffffff            	// #-1
    4b1c:	str	w0, [sp, #44]
    4b20:	ldr	x0, [sp, #24]
    4b24:	ldr	x0, [x0]
    4b28:	mov	w1, #0x1                   	// #1
    4b2c:	bl	2640 <PyThread_acquire_lock@plt>
    4b30:	ldr	x0, [sp, #24]
    4b34:	ldr	x0, [x0, #8]
    4b38:	mov	x2, #0x0                   	// #0
    4b3c:	ldr	x1, [sp, #16]
    4b40:	bl	4430 <PyThread_free_lock@plt+0x1b00>
    4b44:	str	x0, [sp, #32]
    4b48:	ldr	x0, [sp, #32]
    4b4c:	cmp	x0, #0x0
    4b50:	b.ne	4b78 <PyThread_free_lock@plt+0x2248>  // b.any
    4b54:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4b58:	add	x0, x0, #0x938
    4b5c:	ldr	x3, [x0]
    4b60:	ldr	x2, [sp, #16]
    4b64:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4b68:	add	x1, x0, #0x218
    4b6c:	mov	x0, x3
    4b70:	bl	28c0 <PyErr_Format@plt>
    4b74:	b	4b90 <PyThread_free_lock@plt+0x2260>
    4b78:	ldr	x0, [sp, #32]
    4b7c:	ldr	x0, [x0, #24]
    4b80:	add	x1, x0, #0x1
    4b84:	ldr	x0, [sp, #32]
    4b88:	str	x1, [x0, #24]
    4b8c:	str	wzr, [sp, #44]
    4b90:	ldr	x0, [sp, #24]
    4b94:	ldr	x0, [x0]
    4b98:	bl	27b0 <PyThread_release_lock@plt>
    4b9c:	ldr	w0, [sp, #44]
    4ba0:	ldp	x29, x30, [sp], #48
    4ba4:	ret
    4ba8:	stp	x29, x30, [sp, #-64]!
    4bac:	mov	x29, sp
    4bb0:	str	x0, [sp, #24]
    4bb4:	str	x1, [sp, #16]
    4bb8:	ldr	x0, [sp, #24]
    4bbc:	ldr	x0, [x0]
    4bc0:	mov	w1, #0x1                   	// #1
    4bc4:	bl	2640 <PyThread_acquire_lock@plt>
    4bc8:	str	xzr, [sp, #48]
    4bcc:	ldr	x0, [sp, #24]
    4bd0:	ldr	x0, [x0, #8]
    4bd4:	add	x1, sp, #0x30
    4bd8:	mov	x2, x1
    4bdc:	ldr	x1, [sp, #16]
    4be0:	bl	4430 <PyThread_free_lock@plt+0x1b00>
    4be4:	str	x0, [sp, #56]
    4be8:	ldr	x0, [sp, #56]
    4bec:	cmp	x0, #0x0
    4bf0:	b.eq	4c50 <PyThread_free_lock@plt+0x2320>  // b.none
    4bf4:	ldr	x0, [sp, #56]
    4bf8:	ldr	x0, [x0, #24]
    4bfc:	sub	x1, x0, #0x1
    4c00:	ldr	x0, [sp, #56]
    4c04:	str	x1, [x0, #24]
    4c08:	ldr	x0, [sp, #56]
    4c0c:	ldr	x0, [x0, #24]
    4c10:	cmp	x0, #0x0
    4c14:	b.ne	4c58 <PyThread_free_lock@plt+0x2328>  // b.any
    4c18:	str	xzr, [sp, #40]
    4c1c:	ldr	x0, [sp, #48]
    4c20:	add	x1, sp, #0x28
    4c24:	mov	x3, x1
    4c28:	mov	x2, x0
    4c2c:	ldr	x1, [sp, #56]
    4c30:	ldr	x0, [sp, #24]
    4c34:	bl	49b0 <PyThread_free_lock@plt+0x2080>
    4c38:	ldr	x0, [sp, #40]
    4c3c:	cmp	x0, #0x0
    4c40:	b.eq	4c5c <PyThread_free_lock@plt+0x232c>  // b.none
    4c44:	ldr	x0, [sp, #40]
    4c48:	bl	3ff0 <PyThread_free_lock@plt+0x16c0>
    4c4c:	b	4c5c <PyThread_free_lock@plt+0x232c>
    4c50:	nop
    4c54:	b	4c5c <PyThread_free_lock@plt+0x232c>
    4c58:	nop
    4c5c:	ldr	x0, [sp, #24]
    4c60:	ldr	x0, [x0]
    4c64:	bl	27b0 <PyThread_release_lock@plt>
    4c68:	nop
    4c6c:	ldp	x29, x30, [sp], #64
    4c70:	ret
    4c74:	stp	x29, x30, [sp, #-80]!
    4c78:	mov	x29, sp
    4c7c:	str	x0, [sp, #24]
    4c80:	str	x1, [sp, #16]
    4c84:	str	xzr, [sp, #72]
    4c88:	ldr	x0, [sp, #24]
    4c8c:	ldr	x0, [x0]
    4c90:	mov	w1, #0x1                   	// #1
    4c94:	bl	2640 <PyThread_acquire_lock@plt>
    4c98:	ldr	x0, [sp, #24]
    4c9c:	ldr	x0, [x0, #16]
    4ca0:	str	x0, [sp, #48]
    4ca4:	ldr	x1, [sp, #48]
    4ca8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    4cac:	cmp	x1, x0
    4cb0:	b.ne	4cd4 <PyThread_free_lock@plt+0x23a4>  // b.any
    4cb4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    4cb8:	ldr	x0, [x0, #4000]
    4cbc:	ldr	x2, [x0]
    4cc0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4cc4:	add	x1, x0, #0x248
    4cc8:	mov	x0, x2
    4ccc:	bl	2670 <PyErr_SetString@plt>
    4cd0:	b	4d88 <PyThread_free_lock@plt+0x2458>
    4cd4:	ldr	x0, [sp, #24]
    4cd8:	ldr	x0, [x0, #16]
    4cdc:	mov	x1, x0
    4ce0:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    4ce4:	cmp	x1, x0
    4ce8:	b.hi	4d00 <PyThread_free_lock@plt+0x23d0>  // b.pmore
    4cec:	ldr	x0, [sp, #24]
    4cf0:	ldr	x0, [x0, #16]
    4cf4:	lsl	x0, x0, #3
    4cf8:	bl	2910 <PyMem_Malloc@plt>
    4cfc:	b	4d04 <PyThread_free_lock@plt+0x23d4>
    4d00:	mov	x0, #0x0                   	// #0
    4d04:	str	x0, [sp, #40]
    4d08:	ldr	x0, [sp, #40]
    4d0c:	cmp	x0, #0x0
    4d10:	b.eq	4d84 <PyThread_free_lock@plt+0x2454>  // b.none
    4d14:	ldr	x0, [sp, #24]
    4d18:	ldr	x0, [x0, #8]
    4d1c:	str	x0, [sp, #64]
    4d20:	str	xzr, [sp, #56]
    4d24:	b	4d5c <PyThread_free_lock@plt+0x242c>
    4d28:	ldr	x0, [sp, #56]
    4d2c:	lsl	x0, x0, #3
    4d30:	ldr	x1, [sp, #40]
    4d34:	add	x0, x1, x0
    4d38:	ldr	x1, [sp, #64]
    4d3c:	ldr	x1, [x1]
    4d40:	str	x1, [x0]
    4d44:	ldr	x0, [sp, #64]
    4d48:	ldr	x0, [x0, #16]
    4d4c:	str	x0, [sp, #64]
    4d50:	ldr	x0, [sp, #56]
    4d54:	add	x0, x0, #0x1
    4d58:	str	x0, [sp, #56]
    4d5c:	ldr	x0, [sp, #64]
    4d60:	cmp	x0, #0x0
    4d64:	b.ne	4d28 <PyThread_free_lock@plt+0x23f8>  // b.any
    4d68:	ldr	x0, [sp, #24]
    4d6c:	ldr	x1, [x0, #16]
    4d70:	ldr	x0, [sp, #16]
    4d74:	str	x1, [x0]
    4d78:	ldr	x0, [sp, #40]
    4d7c:	str	x0, [sp, #72]
    4d80:	b	4d88 <PyThread_free_lock@plt+0x2458>
    4d84:	nop
    4d88:	ldr	x0, [sp, #24]
    4d8c:	ldr	x0, [x0]
    4d90:	bl	27b0 <PyThread_release_lock@plt>
    4d94:	ldr	x0, [sp, #72]
    4d98:	ldp	x29, x30, [sp], #80
    4d9c:	ret
    4da0:	stp	x29, x30, [sp, #-48]!
    4da4:	mov	x29, sp
    4da8:	str	x0, [sp, #24]
    4dac:	str	x1, [sp, #16]
    4db0:	ldr	x0, [sp, #24]
    4db4:	ldr	x0, [x0, #8]
    4db8:	str	x0, [sp, #32]
    4dbc:	ldr	x0, [sp, #32]
    4dc0:	cmp	x0, #0x0
    4dc4:	b.ne	4dd0 <PyThread_free_lock@plt+0x24a0>  // b.any
    4dc8:	mov	w0, #0x0                   	// #0
    4dcc:	b	4e68 <PyThread_free_lock@plt+0x2538>
    4dd0:	mov	w0, #0xffffffff            	// #-1
    4dd4:	str	w0, [sp, #44]
    4dd8:	ldr	x0, [sp, #32]
    4ddc:	ldr	x0, [x0]
    4de0:	mov	w1, #0x1                   	// #1
    4de4:	bl	2640 <PyThread_acquire_lock@plt>
    4de8:	ldr	x0, [sp, #32]
    4dec:	ldr	x0, [x0, #32]
    4df0:	cmp	x0, #0x0
    4df4:	b.eq	4e18 <PyThread_free_lock@plt+0x24e8>  // b.none
    4df8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    4dfc:	add	x0, x0, #0x940
    4e00:	ldr	x2, [x0]
    4e04:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    4e08:	add	x1, x0, #0x188
    4e0c:	mov	x0, x2
    4e10:	bl	2670 <PyErr_SetString@plt>
    4e14:	b	4e58 <PyThread_free_lock@plt+0x2528>
    4e18:	mov	x0, #0x8                   	// #8
    4e1c:	bl	2910 <PyMem_Malloc@plt>
    4e20:	mov	x1, x0
    4e24:	ldr	x0, [sp, #32]
    4e28:	str	x1, [x0, #32]
    4e2c:	ldr	x0, [sp, #32]
    4e30:	ldr	x0, [x0, #32]
    4e34:	cmp	x0, #0x0
    4e38:	b.eq	4e54 <PyThread_free_lock@plt+0x2524>  // b.none
    4e3c:	ldr	x0, [sp, #32]
    4e40:	ldr	x0, [x0, #32]
    4e44:	ldr	x1, [sp, #24]
    4e48:	str	x1, [x0]
    4e4c:	str	wzr, [sp, #44]
    4e50:	b	4e58 <PyThread_free_lock@plt+0x2528>
    4e54:	nop
    4e58:	ldr	x0, [sp, #32]
    4e5c:	ldr	x0, [x0]
    4e60:	bl	27b0 <PyThread_release_lock@plt>
    4e64:	ldr	w0, [sp, #44]
    4e68:	ldp	x29, x30, [sp], #48
    4e6c:	ret
    4e70:	stp	x29, x30, [sp, #-32]!
    4e74:	mov	x29, sp
    4e78:	str	x0, [sp, #24]
    4e7c:	ldr	x0, [sp, #24]
    4e80:	ldr	x0, [x0]
    4e84:	mov	w1, #0x1                   	// #1
    4e88:	bl	2640 <PyThread_acquire_lock@plt>
    4e8c:	ldr	x0, [sp, #24]
    4e90:	ldr	x0, [x0, #32]
    4e94:	cmp	x0, #0x0
    4e98:	b.eq	4eb0 <PyThread_free_lock@plt+0x2580>  // b.none
    4e9c:	ldr	x0, [sp, #24]
    4ea0:	ldr	x0, [x0, #32]
    4ea4:	bl	2590 <PyMem_Free@plt>
    4ea8:	ldr	x0, [sp, #24]
    4eac:	str	xzr, [x0, #32]
    4eb0:	ldr	x0, [sp, #24]
    4eb4:	ldr	x0, [x0]
    4eb8:	bl	27b0 <PyThread_release_lock@plt>
    4ebc:	nop
    4ec0:	ldp	x29, x30, [sp], #32
    4ec4:	ret
    4ec8:	stp	x29, x30, [sp, #-48]!
    4ecc:	mov	x29, sp
    4ed0:	str	x0, [sp, #24]
    4ed4:	ldr	x0, [sp, #24]
    4ed8:	ldr	x0, [x0, #32]
    4edc:	str	x0, [sp, #40]
    4ee0:	ldr	x0, [sp, #40]
    4ee4:	cmp	x0, #0x0
    4ee8:	b.eq	4f14 <PyThread_free_lock@plt+0x25e4>  // b.none
    4eec:	ldr	x0, [sp, #40]
    4ef0:	ldr	x0, [x0]
    4ef4:	str	x0, [sp, #32]
    4ef8:	ldr	x0, [sp, #24]
    4efc:	bl	4e70 <PyThread_free_lock@plt+0x2540>
    4f00:	ldr	x0, [sp, #32]
    4f04:	str	xzr, [x0, #8]
    4f08:	ldr	x0, [sp, #24]
    4f0c:	bl	3ff0 <PyThread_free_lock@plt+0x16c0>
    4f10:	b	4f18 <PyThread_free_lock@plt+0x25e8>
    4f14:	nop
    4f18:	ldp	x29, x30, [sp], #48
    4f1c:	ret
    4f20:	stp	x29, x30, [sp, #-48]!
    4f24:	mov	x29, sp
    4f28:	str	x0, [sp, #24]
    4f2c:	bl	3ef0 <PyThread_free_lock@plt+0x15c0>
    4f30:	str	x0, [sp, #40]
    4f34:	ldr	x0, [sp, #40]
    4f38:	cmp	x0, #0x0
    4f3c:	b.ne	4f48 <PyThread_free_lock@plt+0x2618>  // b.any
    4f40:	mov	x0, #0xffffffffffffffff    	// #-1
    4f44:	b	4f78 <PyThread_free_lock@plt+0x2648>
    4f48:	ldr	x1, [sp, #40]
    4f4c:	ldr	x0, [sp, #24]
    4f50:	bl	46c4 <PyThread_free_lock@plt+0x1d94>
    4f54:	str	x0, [sp, #32]
    4f58:	ldr	x0, [sp, #32]
    4f5c:	cmp	x0, #0x0
    4f60:	b.ge	4f74 <PyThread_free_lock@plt+0x2644>  // b.tcont
    4f64:	ldr	x0, [sp, #40]
    4f68:	bl	3ff0 <PyThread_free_lock@plt+0x16c0>
    4f6c:	mov	x0, #0xffffffffffffffff    	// #-1
    4f70:	b	4f78 <PyThread_free_lock@plt+0x2648>
    4f74:	ldr	x0, [sp, #32]
    4f78:	ldp	x29, x30, [sp], #48
    4f7c:	ret
    4f80:	stp	x29, x30, [sp, #-48]!
    4f84:	mov	x29, sp
    4f88:	str	x0, [sp, #24]
    4f8c:	str	x1, [sp, #16]
    4f90:	str	xzr, [sp, #40]
    4f94:	add	x0, sp, #0x28
    4f98:	mov	x2, x0
    4f9c:	ldr	x1, [sp, #16]
    4fa0:	ldr	x0, [sp, #24]
    4fa4:	bl	4a44 <PyThread_free_lock@plt+0x2114>
    4fa8:	cmp	w0, #0x0
    4fac:	b.eq	4fb8 <PyThread_free_lock@plt+0x2688>  // b.none
    4fb0:	mov	w0, #0xffffffff            	// #-1
    4fb4:	b	4fd0 <PyThread_free_lock@plt+0x26a0>
    4fb8:	ldr	x0, [sp, #40]
    4fbc:	cmp	x0, #0x0
    4fc0:	b.eq	4fcc <PyThread_free_lock@plt+0x269c>  // b.none
    4fc4:	ldr	x0, [sp, #40]
    4fc8:	bl	3ff0 <PyThread_free_lock@plt+0x16c0>
    4fcc:	mov	w0, #0x0                   	// #0
    4fd0:	ldp	x29, x30, [sp], #48
    4fd4:	ret
    4fd8:	stp	x29, x30, [sp, #-96]!
    4fdc:	mov	x29, sp
    4fe0:	str	x0, [sp, #40]
    4fe4:	str	x1, [sp, #32]
    4fe8:	str	x2, [sp, #24]
    4fec:	bl	2bec <PyThread_free_lock@plt+0x2bc>
    4ff0:	str	x0, [sp, #88]
    4ff4:	ldr	x0, [sp, #88]
    4ff8:	cmp	x0, #0x0
    4ffc:	b.ne	5008 <PyThread_free_lock@plt+0x26d8>  // b.any
    5000:	mov	w0, #0xffffffff            	// #-1
    5004:	b	5118 <PyThread_free_lock@plt+0x27e8>
    5008:	str	xzr, [sp, #56]
    500c:	add	x0, sp, #0x38
    5010:	mov	x2, x0
    5014:	ldr	x1, [sp, #32]
    5018:	ldr	x0, [sp, #40]
    501c:	bl	459c <PyThread_free_lock@plt+0x1c6c>
    5020:	str	x0, [sp, #80]
    5024:	ldr	x0, [sp, #80]
    5028:	cmp	x0, #0x0
    502c:	b.ne	5038 <PyThread_free_lock@plt+0x2708>  // b.any
    5030:	mov	w0, #0xffffffff            	// #-1
    5034:	b	5118 <PyThread_free_lock@plt+0x27e8>
    5038:	ldr	x0, [sp, #80]
    503c:	ldr	x0, [x0, #32]
    5040:	cmp	x0, #0x0
    5044:	b.eq	5078 <PyThread_free_lock@plt+0x2748>  // b.none
    5048:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    504c:	add	x0, x0, #0x940
    5050:	ldr	x3, [x0]
    5054:	ldr	x2, [sp, #32]
    5058:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    505c:	add	x1, x0, #0x230
    5060:	mov	x0, x3
    5064:	bl	28c0 <PyErr_Format@plt>
    5068:	ldr	x0, [sp, #56]
    506c:	bl	27b0 <PyThread_release_lock@plt>
    5070:	mov	w0, #0xffffffff            	// #-1
    5074:	b	5118 <PyThread_free_lock@plt+0x27e8>
    5078:	mov	x0, #0x28                  	// #40
    507c:	bl	2910 <PyMem_Malloc@plt>
    5080:	str	x0, [sp, #72]
    5084:	ldr	x0, [sp, #72]
    5088:	cmp	x0, #0x0
    508c:	b.ne	50a0 <PyThread_free_lock@plt+0x2770>  // b.any
    5090:	ldr	x0, [sp, #56]
    5094:	bl	27b0 <PyThread_release_lock@plt>
    5098:	mov	w0, #0xffffffff            	// #-1
    509c:	b	5118 <PyThread_free_lock@plt+0x27e8>
    50a0:	ldr	x1, [sp, #72]
    50a4:	ldr	x0, [sp, #24]
    50a8:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    50ac:	cmp	w0, #0x0
    50b0:	b.eq	50cc <PyThread_free_lock@plt+0x279c>  // b.none
    50b4:	ldr	x0, [sp, #56]
    50b8:	bl	27b0 <PyThread_release_lock@plt>
    50bc:	ldr	x0, [sp, #72]
    50c0:	bl	2590 <PyMem_Free@plt>
    50c4:	mov	w0, #0xffffffff            	// #-1
    50c8:	b	5118 <PyThread_free_lock@plt+0x27e8>
    50cc:	ldr	x0, [sp, #88]
    50d0:	bl	2680 <PyInterpreterState_GetID@plt>
    50d4:	ldr	x2, [sp, #72]
    50d8:	mov	x1, x0
    50dc:	ldr	x0, [sp, #80]
    50e0:	bl	4058 <PyThread_free_lock@plt+0x1728>
    50e4:	str	w0, [sp, #68]
    50e8:	ldr	x0, [sp, #56]
    50ec:	bl	27b0 <PyThread_release_lock@plt>
    50f0:	ldr	w0, [sp, #68]
    50f4:	cmp	w0, #0x0
    50f8:	b.eq	5114 <PyThread_free_lock@plt+0x27e4>  // b.none
    50fc:	ldr	x0, [sp, #72]
    5100:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    5104:	ldr	x0, [sp, #72]
    5108:	bl	2590 <PyMem_Free@plt>
    510c:	mov	w0, #0xffffffff            	// #-1
    5110:	b	5118 <PyThread_free_lock@plt+0x27e8>
    5114:	mov	w0, #0x0                   	// #0
    5118:	ldp	x29, x30, [sp], #96
    511c:	ret
    5120:	stp	x29, x30, [sp, #-80]!
    5124:	mov	x29, sp
    5128:	str	x0, [sp, #24]
    512c:	str	x1, [sp, #16]
    5130:	bl	2bec <PyThread_free_lock@plt+0x2bc>
    5134:	str	x0, [sp, #72]
    5138:	ldr	x0, [sp, #72]
    513c:	cmp	x0, #0x0
    5140:	b.ne	514c <PyThread_free_lock@plt+0x281c>  // b.any
    5144:	mov	x0, #0x0                   	// #0
    5148:	b	5210 <PyThread_free_lock@plt+0x28e0>
    514c:	str	xzr, [sp, #40]
    5150:	add	x0, sp, #0x28
    5154:	mov	x2, x0
    5158:	ldr	x1, [sp, #16]
    515c:	ldr	x0, [sp, #24]
    5160:	bl	459c <PyThread_free_lock@plt+0x1c6c>
    5164:	str	x0, [sp, #64]
    5168:	ldr	x0, [sp, #64]
    516c:	cmp	x0, #0x0
    5170:	b.ne	517c <PyThread_free_lock@plt+0x284c>  // b.any
    5174:	mov	x0, #0x0                   	// #0
    5178:	b	5210 <PyThread_free_lock@plt+0x28e0>
    517c:	ldr	x0, [sp, #72]
    5180:	bl	2680 <PyInterpreterState_GetID@plt>
    5184:	mov	x1, x0
    5188:	ldr	x0, [sp, #64]
    518c:	bl	4114 <PyThread_free_lock@plt+0x17e4>
    5190:	str	x0, [sp, #56]
    5194:	ldr	x0, [sp, #40]
    5198:	bl	27b0 <PyThread_release_lock@plt>
    519c:	ldr	x0, [sp, #56]
    51a0:	cmp	x0, #0x0
    51a4:	b.ne	51dc <PyThread_free_lock@plt+0x28ac>  // b.any
    51a8:	bl	2730 <PyErr_Occurred@plt>
    51ac:	cmp	x0, #0x0
    51b0:	b.ne	51d4 <PyThread_free_lock@plt+0x28a4>  // b.any
    51b4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    51b8:	add	x0, x0, #0x948
    51bc:	ldr	x3, [x0]
    51c0:	ldr	x2, [sp, #16]
    51c4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    51c8:	add	x1, x0, #0x260
    51cc:	mov	x0, x3
    51d0:	bl	28c0 <PyErr_Format@plt>
    51d4:	mov	x0, #0x0                   	// #0
    51d8:	b	5210 <PyThread_free_lock@plt+0x28e0>
    51dc:	ldr	x0, [sp, #56]
    51e0:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    51e4:	str	x0, [sp, #48]
    51e8:	ldr	x0, [sp, #48]
    51ec:	cmp	x0, #0x0
    51f0:	b.ne	51fc <PyThread_free_lock@plt+0x28cc>  // b.any
    51f4:	mov	x0, #0x0                   	// #0
    51f8:	b	5210 <PyThread_free_lock@plt+0x28e0>
    51fc:	ldr	x0, [sp, #56]
    5200:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    5204:	ldr	x0, [sp, #56]
    5208:	bl	2590 <PyMem_Free@plt>
    520c:	ldr	x0, [sp, #48]
    5210:	ldp	x29, x30, [sp], #80
    5214:	ret
    5218:	stp	x29, x30, [sp, #-80]!
    521c:	mov	x29, sp
    5220:	str	x0, [sp, #40]
    5224:	str	x1, [sp, #32]
    5228:	str	w2, [sp, #28]
    522c:	str	w3, [sp, #24]
    5230:	bl	2bec <PyThread_free_lock@plt+0x2bc>
    5234:	str	x0, [sp, #72]
    5238:	ldr	x0, [sp, #72]
    523c:	cmp	x0, #0x0
    5240:	b.ne	524c <PyThread_free_lock@plt+0x291c>  // b.any
    5244:	mov	w0, #0xffffffff            	// #-1
    5248:	b	52b4 <PyThread_free_lock@plt+0x2984>
    524c:	str	xzr, [sp, #48]
    5250:	add	x0, sp, #0x30
    5254:	mov	x2, x0
    5258:	ldr	x1, [sp, #32]
    525c:	ldr	x0, [sp, #40]
    5260:	bl	459c <PyThread_free_lock@plt+0x1c6c>
    5264:	str	x0, [sp, #64]
    5268:	ldr	x0, [sp, #64]
    526c:	cmp	x0, #0x0
    5270:	b.ne	527c <PyThread_free_lock@plt+0x294c>  // b.any
    5274:	mov	w0, #0xffffffff            	// #-1
    5278:	b	52b4 <PyThread_free_lock@plt+0x2984>
    527c:	ldr	x0, [sp, #72]
    5280:	bl	2680 <PyInterpreterState_GetID@plt>
    5284:	mov	x3, x0
    5288:	ldr	w1, [sp, #28]
    528c:	ldr	w0, [sp, #24]
    5290:	sub	w0, w1, w0
    5294:	mov	w2, w0
    5298:	mov	x1, x3
    529c:	ldr	x0, [sp, #64]
    52a0:	bl	4208 <PyThread_free_lock@plt+0x18d8>
    52a4:	str	w0, [sp, #60]
    52a8:	ldr	x0, [sp, #48]
    52ac:	bl	27b0 <PyThread_release_lock@plt>
    52b0:	ldr	w0, [sp, #60]
    52b4:	ldp	x29, x30, [sp], #80
    52b8:	ret
    52bc:	stp	x29, x30, [sp, #-48]!
    52c0:	mov	x29, sp
    52c4:	str	x0, [sp, #40]
    52c8:	str	x1, [sp, #32]
    52cc:	str	w2, [sp, #28]
    52d0:	str	w3, [sp, #24]
    52d4:	ldr	w4, [sp, #24]
    52d8:	ldr	w3, [sp, #28]
    52dc:	mov	x2, #0x0                   	// #0
    52e0:	ldr	x1, [sp, #32]
    52e4:	ldr	x0, [sp, #40]
    52e8:	bl	4780 <PyThread_free_lock@plt+0x1e50>
    52ec:	ldp	x29, x30, [sp], #48
    52f0:	ret
    52f4:	stp	x29, x30, [sp, #-48]!
    52f8:	mov	x29, sp
    52fc:	str	x0, [sp, #24]
    5300:	str	x1, [sp, #16]
    5304:	ldr	x0, [sp, #24]
    5308:	ldr	x1, [x0, #8]
    530c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5310:	add	x0, x0, #0x238
    5314:	cmp	x1, x0
    5318:	b.eq	533c <PyThread_free_lock@plt+0x2a0c>  // b.none
    531c:	ldr	x0, [sp, #24]
    5320:	ldr	x2, [x0, #8]
    5324:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5328:	add	x1, x0, #0x238
    532c:	mov	x0, x2
    5330:	bl	28a0 <PyType_IsSubtype@plt>
    5334:	cmp	w0, #0x0
    5338:	b.eq	534c <PyThread_free_lock@plt+0x2a1c>  // b.none
    533c:	ldr	x0, [sp, #24]
    5340:	ldr	x0, [x0, #16]
    5344:	str	x0, [sp, #40]
    5348:	b	540c <PyThread_free_lock@plt+0x2adc>
    534c:	ldr	x0, [sp, #24]
    5350:	ldr	x0, [x0, #8]
    5354:	ldr	x0, [x0, #96]
    5358:	cmp	x0, #0x0
    535c:	b.eq	53d8 <PyThread_free_lock@plt+0x2aa8>  // b.none
    5360:	ldr	x0, [sp, #24]
    5364:	ldr	x0, [x0, #8]
    5368:	ldr	x0, [x0, #96]
    536c:	ldr	x0, [x0, #264]
    5370:	cmp	x0, #0x0
    5374:	b.eq	53d8 <PyThread_free_lock@plt+0x2aa8>  // b.none
    5378:	ldr	x0, [sp, #24]
    537c:	bl	2890 <PyLong_AsLongLong@plt>
    5380:	str	x0, [sp, #40]
    5384:	ldr	x0, [sp, #40]
    5388:	cmn	x0, #0x1
    538c:	b.ne	53a4 <PyThread_free_lock@plt+0x2a74>  // b.any
    5390:	bl	2730 <PyErr_Occurred@plt>
    5394:	cmp	x0, #0x0
    5398:	b.eq	53a4 <PyThread_free_lock@plt+0x2a74>  // b.none
    539c:	mov	w0, #0x0                   	// #0
    53a0:	b	541c <PyThread_free_lock@plt+0x2aec>
    53a4:	ldr	x0, [sp, #40]
    53a8:	cmp	x0, #0x0
    53ac:	b.ge	540c <PyThread_free_lock@plt+0x2adc>  // b.tcont
    53b0:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    53b4:	ldr	x0, [x0, #4016]
    53b8:	ldr	x3, [x0]
    53bc:	ldr	x2, [sp, #24]
    53c0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    53c4:	add	x1, x0, #0x298
    53c8:	mov	x0, x3
    53cc:	bl	28c0 <PyErr_Format@plt>
    53d0:	mov	w0, #0x0                   	// #0
    53d4:	b	541c <PyThread_free_lock@plt+0x2aec>
    53d8:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    53dc:	ldr	x0, [x0, #4024]
    53e0:	ldr	x3, [x0]
    53e4:	ldr	x0, [sp, #24]
    53e8:	ldr	x0, [x0, #8]
    53ec:	ldr	x0, [x0, #24]
    53f0:	mov	x2, x0
    53f4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    53f8:	add	x1, x0, #0x2c8
    53fc:	mov	x0, x3
    5400:	bl	28c0 <PyErr_Format@plt>
    5404:	mov	w0, #0x0                   	// #0
    5408:	b	541c <PyThread_free_lock@plt+0x2aec>
    540c:	ldr	x0, [sp, #16]
    5410:	ldr	x1, [sp, #40]
    5414:	str	x1, [x0]
    5418:	mov	w0, #0x1                   	// #1
    541c:	ldp	x29, x30, [sp], #48
    5420:	ret
    5424:	stp	x29, x30, [sp, #-80]!
    5428:	mov	x29, sp
    542c:	str	x0, [sp, #56]
    5430:	str	x1, [sp, #48]
    5434:	str	w2, [sp, #44]
    5438:	str	x3, [sp, #32]
    543c:	str	w4, [sp, #40]
    5440:	str	w5, [sp, #28]
    5444:	ldr	x0, [sp, #56]
    5448:	bl	2830 <_PyObject_New@plt>
    544c:	str	x0, [sp, #72]
    5450:	ldr	x0, [sp, #72]
    5454:	cmp	x0, #0x0
    5458:	b.ne	5464 <PyThread_free_lock@plt+0x2b34>  // b.any
    545c:	mov	x0, #0x0                   	// #0
    5460:	b	54f4 <PyThread_free_lock@plt+0x2bc4>
    5464:	ldr	x0, [sp, #72]
    5468:	ldr	x1, [sp, #48]
    546c:	str	x1, [x0, #16]
    5470:	ldr	x0, [sp, #72]
    5474:	ldr	w1, [sp, #44]
    5478:	str	w1, [x0, #24]
    547c:	ldr	x0, [sp, #72]
    5480:	ldr	w1, [sp, #28]
    5484:	str	w1, [x0, #28]
    5488:	ldr	x0, [sp, #72]
    548c:	ldr	x1, [sp, #32]
    5490:	str	x1, [x0, #32]
    5494:	ldr	x1, [sp, #48]
    5498:	ldr	x0, [sp, #32]
    549c:	bl	4b08 <PyThread_free_lock@plt+0x21d8>
    54a0:	cmp	w0, #0x0
    54a4:	b.eq	54f0 <PyThread_free_lock@plt+0x2bc0>  // b.none
    54a8:	ldr	w0, [sp, #40]
    54ac:	cmp	w0, #0x0
    54b0:	b.eq	54d4 <PyThread_free_lock@plt+0x2ba4>  // b.none
    54b4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    54b8:	add	x0, x0, #0x938
    54bc:	ldr	x0, [x0]
    54c0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    54c4:	cmp	w0, #0x0
    54c8:	b.eq	54d4 <PyThread_free_lock@plt+0x2ba4>  // b.none
    54cc:	bl	26f0 <PyErr_Clear@plt>
    54d0:	b	54f0 <PyThread_free_lock@plt+0x2bc0>
    54d4:	ldr	x2, [sp, #72]
    54d8:	mov	w1, #0x5ae                 	// #1454
    54dc:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    54e0:	add	x0, x0, #0xec0
    54e4:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    54e8:	mov	x0, #0x0                   	// #0
    54ec:	b	54f4 <PyThread_free_lock@plt+0x2bc4>
    54f0:	ldr	x0, [sp, #72]
    54f4:	ldp	x29, x30, [sp], #80
    54f8:	ret
    54fc:	sub	sp, sp, #0x70
    5500:	stp	x29, x30, [sp, #16]
    5504:	add	x29, sp, #0x10
    5508:	str	x19, [sp, #32]
    550c:	str	x0, [sp, #72]
    5510:	str	x1, [sp, #64]
    5514:	str	x2, [sp, #56]
    5518:	mov	w0, #0xffffffff            	// #-1
    551c:	str	w0, [sp, #92]
    5520:	mov	w0, #0xffffffff            	// #-1
    5524:	str	w0, [sp, #88]
    5528:	str	wzr, [sp, #84]
    552c:	str	wzr, [sp, #80]
    5530:	add	x3, sp, #0x58
    5534:	add	x2, sp, #0x5c
    5538:	add	x1, sp, #0x60
    553c:	add	x0, sp, #0x50
    5540:	str	x0, [sp, #8]
    5544:	add	x0, sp, #0x54
    5548:	str	x0, [sp]
    554c:	mov	x7, x3
    5550:	mov	x6, x2
    5554:	mov	x5, x1
    5558:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    555c:	add	x4, x0, #0x2f4
    5560:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5564:	add	x3, x0, #0x820
    5568:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    556c:	add	x2, x0, #0x2f0
    5570:	ldr	x1, [sp, #56]
    5574:	ldr	x0, [sp, #64]
    5578:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    557c:	cmp	w0, #0x0
    5580:	b.ne	558c <PyThread_free_lock@plt+0x2c5c>  // b.any
    5584:	mov	x0, #0x0                   	// #0
    5588:	b	5644 <PyThread_free_lock@plt+0x2d14>
    558c:	ldr	w0, [sp, #92]
    5590:	cmp	w0, #0x0
    5594:	b.ne	55c8 <PyThread_free_lock@plt+0x2c98>  // b.any
    5598:	ldr	w0, [sp, #88]
    559c:	cmp	w0, #0x0
    55a0:	b.ne	55c8 <PyThread_free_lock@plt+0x2c98>  // b.any
    55a4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    55a8:	ldr	x0, [x0, #4016]
    55ac:	ldr	x2, [x0]
    55b0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    55b4:	add	x1, x0, #0x310
    55b8:	mov	x0, x2
    55bc:	bl	2670 <PyErr_SetString@plt>
    55c0:	mov	x0, #0x0                   	// #0
    55c4:	b	5644 <PyThread_free_lock@plt+0x2d14>
    55c8:	str	wzr, [sp, #108]
    55cc:	ldr	w0, [sp, #92]
    55d0:	cmp	w0, #0x1
    55d4:	b.ne	55fc <PyThread_free_lock@plt+0x2ccc>  // b.any
    55d8:	ldr	w0, [sp, #88]
    55dc:	cmp	w0, #0x0
    55e0:	b.eq	55f0 <PyThread_free_lock@plt+0x2cc0>  // b.none
    55e4:	ldr	w0, [sp, #88]
    55e8:	cmn	w0, #0x1
    55ec:	b.ne	5610 <PyThread_free_lock@plt+0x2ce0>  // b.any
    55f0:	mov	w0, #0x1                   	// #1
    55f4:	str	w0, [sp, #108]
    55f8:	b	5610 <PyThread_free_lock@plt+0x2ce0>
    55fc:	ldr	w0, [sp, #88]
    5600:	cmp	w0, #0x1
    5604:	b.ne	5610 <PyThread_free_lock@plt+0x2ce0>  // b.any
    5608:	mov	w0, #0xffffffff            	// #-1
    560c:	str	w0, [sp, #108]
    5610:	ldr	x19, [sp, #96]
    5614:	bl	6258 <PyThread_free_lock@plt+0x3928>
    5618:	mov	x2, x0
    561c:	ldr	w0, [sp, #84]
    5620:	ldr	w1, [sp, #80]
    5624:	mov	w5, w1
    5628:	mov	w4, w0
    562c:	mov	x3, x2
    5630:	ldr	w2, [sp, #108]
    5634:	mov	x1, x19
    5638:	ldr	x0, [sp, #72]
    563c:	bl	5424 <PyThread_free_lock@plt+0x2af4>
    5640:	nop
    5644:	ldr	x19, [sp, #32]
    5648:	ldp	x29, x30, [sp, #16]
    564c:	add	sp, sp, #0x70
    5650:	ret
    5654:	stp	x29, x30, [sp, #-48]!
    5658:	mov	x29, sp
    565c:	str	x0, [sp, #24]
    5660:	ldr	x0, [sp, #24]
    5664:	ldr	x0, [x0, #16]
    5668:	str	x0, [sp, #40]
    566c:	ldr	x0, [sp, #24]
    5670:	ldr	x0, [x0, #32]
    5674:	str	x0, [sp, #32]
    5678:	ldr	x0, [sp, #24]
    567c:	ldr	x0, [x0, #8]
    5680:	ldr	x1, [x0, #320]
    5684:	ldr	x0, [sp, #24]
    5688:	blr	x1
    568c:	ldr	x1, [sp, #40]
    5690:	ldr	x0, [sp, #32]
    5694:	bl	4ba8 <PyThread_free_lock@plt+0x2278>
    5698:	nop
    569c:	ldp	x29, x30, [sp], #48
    56a0:	ret
    56a4:	stp	x29, x30, [sp, #-64]!
    56a8:	mov	x29, sp
    56ac:	str	x0, [sp, #24]
    56b0:	ldr	x0, [sp, #24]
    56b4:	ldr	x0, [x0, #8]
    56b8:	str	x0, [sp, #48]
    56bc:	ldr	x0, [sp, #48]
    56c0:	bl	2630 <_PyType_Name@plt>
    56c4:	str	x0, [sp, #40]
    56c8:	ldr	x0, [sp, #24]
    56cc:	str	x0, [sp, #32]
    56d0:	ldr	x0, [sp, #32]
    56d4:	ldr	w0, [x0, #24]
    56d8:	cmp	w0, #0x1
    56dc:	b.ne	56f0 <PyThread_free_lock@plt+0x2dc0>  // b.any
    56e0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    56e4:	add	x0, x0, #0x338
    56e8:	str	x0, [sp, #56]
    56ec:	b	571c <PyThread_free_lock@plt+0x2dec>
    56f0:	ldr	x0, [sp, #32]
    56f4:	ldr	w0, [x0, #24]
    56f8:	cmn	w0, #0x1
    56fc:	b.ne	5710 <PyThread_free_lock@plt+0x2de0>  // b.any
    5700:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5704:	add	x0, x0, #0x350
    5708:	str	x0, [sp, #56]
    570c:	b	571c <PyThread_free_lock@plt+0x2dec>
    5710:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5714:	add	x0, x0, #0x368
    5718:	str	x0, [sp, #56]
    571c:	ldr	x0, [sp, #32]
    5720:	ldr	x0, [x0, #16]
    5724:	mov	x2, x0
    5728:	ldr	x1, [sp, #40]
    572c:	ldr	x0, [sp, #56]
    5730:	bl	24f0 <PyUnicode_FromFormat@plt>
    5734:	ldp	x29, x30, [sp], #64
    5738:	ret
    573c:	stp	x29, x30, [sp, #-48]!
    5740:	mov	x29, sp
    5744:	str	x0, [sp, #24]
    5748:	ldr	x0, [sp, #24]
    574c:	str	x0, [sp, #40]
    5750:	ldr	x0, [sp, #40]
    5754:	ldr	x0, [x0, #16]
    5758:	mov	x1, x0
    575c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5760:	add	x0, x0, #0x370
    5764:	bl	24f0 <PyUnicode_FromFormat@plt>
    5768:	ldp	x29, x30, [sp], #48
    576c:	ret
    5770:	stp	x29, x30, [sp, #-48]!
    5774:	mov	x29, sp
    5778:	str	x0, [sp, #24]
    577c:	ldr	x0, [sp, #24]
    5780:	str	x0, [sp, #40]
    5784:	ldr	x0, [sp, #40]
    5788:	ldr	x0, [x0, #16]
    578c:	bl	28e0 <PyLong_FromLongLong@plt>
    5790:	ldp	x29, x30, [sp], #48
    5794:	ret
    5798:	stp	x29, x30, [sp, #-64]!
    579c:	mov	x29, sp
    57a0:	str	x0, [sp, #24]
    57a4:	ldr	x0, [sp, #24]
    57a8:	str	x0, [sp, #56]
    57ac:	ldr	x0, [sp, #56]
    57b0:	ldr	x0, [x0, #16]
    57b4:	bl	28e0 <PyLong_FromLongLong@plt>
    57b8:	str	x0, [sp, #48]
    57bc:	ldr	x0, [sp, #48]
    57c0:	cmp	x0, #0x0
    57c4:	b.ne	57d0 <PyThread_free_lock@plt+0x2ea0>  // b.any
    57c8:	mov	x0, #0xffffffffffffffff    	// #-1
    57cc:	b	57f4 <PyThread_free_lock@plt+0x2ec4>
    57d0:	ldr	x0, [sp, #48]
    57d4:	bl	27a0 <PyObject_Hash@plt>
    57d8:	str	x0, [sp, #40]
    57dc:	ldr	x2, [sp, #48]
    57e0:	mov	w1, #0x638                 	// #1592
    57e4:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    57e8:	add	x0, x0, #0xec0
    57ec:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    57f0:	ldr	x0, [sp, #40]
    57f4:	ldp	x29, x30, [sp], #64
    57f8:	ret
    57fc:	stp	x29, x30, [sp, #-112]!
    5800:	mov	x29, sp
    5804:	str	x0, [sp, #40]
    5808:	str	x1, [sp, #32]
    580c:	str	w2, [sp, #28]
    5810:	ldr	w0, [sp, #28]
    5814:	cmp	w0, #0x2
    5818:	b.eq	5840 <PyThread_free_lock@plt+0x2f10>  // b.none
    581c:	ldr	w0, [sp, #28]
    5820:	cmp	w0, #0x3
    5824:	b.eq	5840 <PyThread_free_lock@plt+0x2f10>  // b.none
    5828:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    582c:	ldr	x0, [x0, #3992]
    5830:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5834:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5838:	ldr	x0, [x0, #3992]
    583c:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5840:	ldr	x0, [sp, #40]
    5844:	ldr	x1, [x0, #8]
    5848:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    584c:	add	x0, x0, #0x238
    5850:	cmp	x1, x0
    5854:	b.eq	5890 <PyThread_free_lock@plt+0x2f60>  // b.none
    5858:	ldr	x0, [sp, #40]
    585c:	ldr	x2, [x0, #8]
    5860:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5864:	add	x1, x0, #0x238
    5868:	mov	x0, x2
    586c:	bl	28a0 <PyType_IsSubtype@plt>
    5870:	cmp	w0, #0x0
    5874:	b.ne	5890 <PyThread_free_lock@plt+0x2f60>  // b.any
    5878:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    587c:	ldr	x0, [x0, #3992]
    5880:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5884:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5888:	ldr	x0, [x0, #3992]
    588c:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5890:	ldr	x0, [sp, #40]
    5894:	str	x0, [sp, #96]
    5898:	ldr	x0, [sp, #32]
    589c:	ldr	x1, [x0, #8]
    58a0:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    58a4:	add	x0, x0, #0x238
    58a8:	cmp	x1, x0
    58ac:	b.eq	58d0 <PyThread_free_lock@plt+0x2fa0>  // b.none
    58b0:	ldr	x0, [sp, #32]
    58b4:	ldr	x2, [x0, #8]
    58b8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    58bc:	add	x1, x0, #0x238
    58c0:	mov	x0, x2
    58c4:	bl	28a0 <PyType_IsSubtype@plt>
    58c8:	cmp	w0, #0x0
    58cc:	b.eq	591c <PyThread_free_lock@plt+0x2fec>  // b.none
    58d0:	ldr	x0, [sp, #32]
    58d4:	str	x0, [sp, #64]
    58d8:	ldr	x0, [sp, #96]
    58dc:	ldr	w1, [x0, #24]
    58e0:	ldr	x0, [sp, #64]
    58e4:	ldr	w0, [x0, #24]
    58e8:	cmp	w1, w0
    58ec:	b.ne	5910 <PyThread_free_lock@plt+0x2fe0>  // b.any
    58f0:	ldr	x0, [sp, #96]
    58f4:	ldr	x1, [x0, #16]
    58f8:	ldr	x0, [sp, #64]
    58fc:	ldr	x0, [x0, #16]
    5900:	cmp	x1, x0
    5904:	b.ne	5910 <PyThread_free_lock@plt+0x2fe0>  // b.any
    5908:	mov	w0, #0x1                   	// #1
    590c:	b	5914 <PyThread_free_lock@plt+0x2fe4>
    5910:	mov	w0, #0x0                   	// #0
    5914:	str	w0, [sp, #108]
    5918:	b	5a24 <PyThread_free_lock@plt+0x30f4>
    591c:	ldr	x0, [sp, #32]
    5920:	ldr	x0, [x0, #8]
    5924:	ldr	x0, [x0, #168]
    5928:	and	x0, x0, #0x1000000
    592c:	cmp	x0, #0x0
    5930:	b.eq	59a8 <PyThread_free_lock@plt+0x3078>  // b.none
    5934:	add	x0, sp, #0x3c
    5938:	mov	x1, x0
    593c:	ldr	x0, [sp, #32]
    5940:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    5944:	str	x0, [sp, #72]
    5948:	ldr	x0, [sp, #72]
    594c:	cmn	x0, #0x1
    5950:	b.ne	5968 <PyThread_free_lock@plt+0x3038>  // b.any
    5954:	bl	2730 <PyErr_Occurred@plt>
    5958:	cmp	x0, #0x0
    595c:	b.eq	5968 <PyThread_free_lock@plt+0x3038>  // b.none
    5960:	mov	x0, #0x0                   	// #0
    5964:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5968:	ldr	w0, [sp, #60]
    596c:	cmp	w0, #0x0
    5970:	b.ne	599c <PyThread_free_lock@plt+0x306c>  // b.any
    5974:	ldr	x0, [sp, #72]
    5978:	cmp	x0, #0x0
    597c:	b.lt	599c <PyThread_free_lock@plt+0x306c>  // b.tstop
    5980:	ldr	x0, [sp, #96]
    5984:	ldr	x0, [x0, #16]
    5988:	ldr	x1, [sp, #72]
    598c:	cmp	x1, x0
    5990:	b.ne	599c <PyThread_free_lock@plt+0x306c>  // b.any
    5994:	mov	w0, #0x1                   	// #1
    5998:	b	59a0 <PyThread_free_lock@plt+0x3070>
    599c:	mov	w0, #0x0                   	// #0
    59a0:	str	w0, [sp, #108]
    59a4:	b	5a24 <PyThread_free_lock@plt+0x30f4>
    59a8:	ldr	x0, [sp, #32]
    59ac:	bl	2880 <PyNumber_Check@plt>
    59b0:	cmp	w0, #0x0
    59b4:	b.eq	5a0c <PyThread_free_lock@plt+0x30dc>  // b.none
    59b8:	ldr	x0, [sp, #96]
    59bc:	ldr	x0, [x0, #16]
    59c0:	bl	28e0 <PyLong_FromLongLong@plt>
    59c4:	str	x0, [sp, #88]
    59c8:	ldr	x0, [sp, #88]
    59cc:	cmp	x0, #0x0
    59d0:	b.ne	59dc <PyThread_free_lock@plt+0x30ac>  // b.any
    59d4:	mov	x0, #0x0                   	// #0
    59d8:	b	5a80 <PyThread_free_lock@plt+0x3150>
    59dc:	ldr	w2, [sp, #28]
    59e0:	ldr	x1, [sp, #32]
    59e4:	ldr	x0, [sp, #88]
    59e8:	bl	2650 <PyObject_RichCompare@plt>
    59ec:	str	x0, [sp, #80]
    59f0:	ldr	x2, [sp, #88]
    59f4:	mov	w1, #0x65c                 	// #1628
    59f8:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    59fc:	add	x0, x0, #0xec0
    5a00:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    5a04:	ldr	x0, [sp, #80]
    5a08:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5a0c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a10:	ldr	x0, [x0, #3992]
    5a14:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5a18:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a1c:	ldr	x0, [x0, #3992]
    5a20:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5a24:	ldr	w0, [sp, #28]
    5a28:	cmp	w0, #0x2
    5a2c:	b.ne	5a3c <PyThread_free_lock@plt+0x310c>  // b.any
    5a30:	ldr	w0, [sp, #108]
    5a34:	cmp	w0, #0x0
    5a38:	b.ne	5a54 <PyThread_free_lock@plt+0x3124>  // b.any
    5a3c:	ldr	w0, [sp, #28]
    5a40:	cmp	w0, #0x3
    5a44:	b.ne	5a6c <PyThread_free_lock@plt+0x313c>  // b.any
    5a48:	ldr	w0, [sp, #108]
    5a4c:	cmp	w0, #0x0
    5a50:	b.ne	5a6c <PyThread_free_lock@plt+0x313c>  // b.any
    5a54:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a58:	ldr	x0, [x0, #4056]
    5a5c:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5a60:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a64:	ldr	x0, [x0, #4056]
    5a68:	b	5a80 <PyThread_free_lock@plt+0x3150>
    5a6c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a70:	ldr	x0, [x0, #4032]
    5a74:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5a78:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5a7c:	ldr	x0, [x0, #4032]
    5a80:	ldp	x29, x30, [sp], #112
    5a84:	ret
    5a88:	stp	x29, x30, [sp, #-64]!
    5a8c:	mov	x29, sp
    5a90:	str	x0, [sp, #24]
    5a94:	str	w1, [sp, #20]
    5a98:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5a9c:	add	x0, x0, #0x378
    5aa0:	bl	2750 <PyImport_ImportModule@plt>
    5aa4:	str	x0, [sp, #56]
    5aa8:	ldr	x0, [sp, #56]
    5aac:	cmp	x0, #0x0
    5ab0:	b.ne	5adc <PyThread_free_lock@plt+0x31ac>  // b.any
    5ab4:	bl	26f0 <PyErr_Clear@plt>
    5ab8:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5abc:	add	x0, x0, #0x388
    5ac0:	bl	2750 <PyImport_ImportModule@plt>
    5ac4:	str	x0, [sp, #56]
    5ac8:	ldr	x0, [sp, #56]
    5acc:	cmp	x0, #0x0
    5ad0:	b.ne	5adc <PyThread_free_lock@plt+0x31ac>  // b.any
    5ad4:	mov	x0, #0x0                   	// #0
    5ad8:	b	5b78 <PyThread_free_lock@plt+0x3248>
    5adc:	ldr	w0, [sp, #20]
    5ae0:	cmn	w0, #0x1
    5ae4:	b.ne	5af4 <PyThread_free_lock@plt+0x31c4>  // b.any
    5ae8:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5aec:	add	x0, x0, #0x3a8
    5af0:	b	5afc <PyThread_free_lock@plt+0x31cc>
    5af4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5af8:	add	x0, x0, #0x3b8
    5afc:	str	x0, [sp, #48]
    5b00:	ldr	x1, [sp, #48]
    5b04:	ldr	x0, [sp, #56]
    5b08:	bl	25b0 <PyObject_GetAttrString@plt>
    5b0c:	str	x0, [sp, #40]
    5b10:	ldr	x2, [sp, #56]
    5b14:	mov	w1, #0x677                 	// #1655
    5b18:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    5b1c:	add	x0, x0, #0xec0
    5b20:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    5b24:	ldr	x0, [sp, #40]
    5b28:	cmp	x0, #0x0
    5b2c:	b.ne	5b38 <PyThread_free_lock@plt+0x3208>  // b.any
    5b30:	mov	x0, #0x0                   	// #0
    5b34:	b	5b78 <PyThread_free_lock@plt+0x3248>
    5b38:	mov	x2, #0x0                   	// #0
    5b3c:	ldr	x1, [sp, #24]
    5b40:	ldr	x0, [sp, #40]
    5b44:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    5b48:	str	x0, [sp, #32]
    5b4c:	ldr	x2, [sp, #40]
    5b50:	mov	w1, #0x67c                 	// #1660
    5b54:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    5b58:	add	x0, x0, #0xec0
    5b5c:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    5b60:	ldr	x0, [sp, #32]
    5b64:	cmp	x0, #0x0
    5b68:	b.ne	5b74 <PyThread_free_lock@plt+0x3244>  // b.any
    5b6c:	mov	x0, #0x0                   	// #0
    5b70:	b	5b78 <PyThread_free_lock@plt+0x3248>
    5b74:	ldr	x0, [sp, #32]
    5b78:	ldp	x29, x30, [sp], #64
    5b7c:	ret
    5b80:	stp	x29, x30, [sp, #-80]!
    5b84:	mov	x29, sp
    5b88:	stp	x19, x20, [sp, #16]
    5b8c:	str	x0, [sp, #40]
    5b90:	ldr	x0, [sp, #40]
    5b94:	ldr	x0, [x0]
    5b98:	str	x0, [sp, #72]
    5b9c:	ldr	x0, [sp, #72]
    5ba0:	ldr	x19, [x0]
    5ba4:	ldr	x0, [sp, #72]
    5ba8:	ldr	w20, [x0, #8]
    5bac:	bl	6258 <PyThread_free_lock@plt+0x3928>
    5bb0:	mov	w5, #0x0                   	// #0
    5bb4:	mov	w4, #0x0                   	// #0
    5bb8:	mov	x3, x0
    5bbc:	mov	w2, w20
    5bc0:	mov	x1, x19
    5bc4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5bc8:	add	x0, x0, #0x238
    5bcc:	bl	5424 <PyThread_free_lock@plt+0x2af4>
    5bd0:	str	x0, [sp, #64]
    5bd4:	ldr	x0, [sp, #72]
    5bd8:	ldr	w0, [x0, #8]
    5bdc:	cmp	w0, #0x0
    5be0:	b.ne	5bec <PyThread_free_lock@plt+0x32bc>  // b.any
    5be4:	ldr	x0, [sp, #64]
    5be8:	b	5c4c <PyThread_free_lock@plt+0x331c>
    5bec:	ldr	x0, [sp, #72]
    5bf0:	ldr	w0, [x0, #12]
    5bf4:	cmp	w0, #0x0
    5bf8:	b.ne	5c04 <PyThread_free_lock@plt+0x32d4>  // b.any
    5bfc:	ldr	x0, [sp, #64]
    5c00:	b	5c4c <PyThread_free_lock@plt+0x331c>
    5c04:	ldr	x0, [sp, #72]
    5c08:	ldr	w0, [x0, #8]
    5c0c:	mov	w1, w0
    5c10:	ldr	x0, [sp, #64]
    5c14:	bl	5a88 <PyThread_free_lock@plt+0x3158>
    5c18:	str	x0, [sp, #56]
    5c1c:	ldr	x0, [sp, #56]
    5c20:	cmp	x0, #0x0
    5c24:	b.ne	5c34 <PyThread_free_lock@plt+0x3304>  // b.any
    5c28:	bl	26f0 <PyErr_Clear@plt>
    5c2c:	ldr	x0, [sp, #64]
    5c30:	b	5c4c <PyThread_free_lock@plt+0x331c>
    5c34:	ldr	x2, [sp, #64]
    5c38:	mov	w1, #0x69d                 	// #1693
    5c3c:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    5c40:	add	x0, x0, #0xec0
    5c44:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    5c48:	ldr	x0, [sp, #56]
    5c4c:	ldp	x19, x20, [sp, #16]
    5c50:	ldp	x29, x30, [sp], #80
    5c54:	ret
    5c58:	stp	x29, x30, [sp, #-48]!
    5c5c:	mov	x29, sp
    5c60:	str	x0, [sp, #24]
    5c64:	str	x1, [sp, #16]
    5c68:	mov	x0, #0x10                  	// #16
    5c6c:	bl	2910 <PyMem_Malloc@plt>
    5c70:	str	x0, [sp, #40]
    5c74:	ldr	x0, [sp, #40]
    5c78:	cmp	x0, #0x0
    5c7c:	b.ne	5c88 <PyThread_free_lock@plt+0x3358>  // b.any
    5c80:	mov	w0, #0xffffffff            	// #-1
    5c84:	b	5cfc <PyThread_free_lock@plt+0x33cc>
    5c88:	ldr	x0, [sp, #24]
    5c8c:	ldr	x1, [x0, #16]
    5c90:	ldr	x0, [sp, #40]
    5c94:	str	x1, [x0]
    5c98:	ldr	x0, [sp, #24]
    5c9c:	ldr	w1, [x0, #24]
    5ca0:	ldr	x0, [sp, #40]
    5ca4:	str	w1, [x0, #8]
    5ca8:	ldr	x0, [sp, #24]
    5cac:	ldr	w1, [x0, #28]
    5cb0:	ldr	x0, [sp, #40]
    5cb4:	str	w1, [x0, #12]
    5cb8:	ldr	x0, [sp, #16]
    5cbc:	ldr	x1, [sp, #40]
    5cc0:	str	x1, [x0]
    5cc4:	ldr	x0, [sp, #24]
    5cc8:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5ccc:	ldr	x0, [sp, #16]
    5cd0:	ldr	x1, [sp, #24]
    5cd4:	str	x1, [x0, #8]
    5cd8:	ldr	x0, [sp, #16]
    5cdc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5ce0:	add	x1, x1, #0xb80
    5ce4:	str	x1, [x0, #24]
    5ce8:	ldr	x0, [sp, #16]
    5cec:	adrp	x1, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5cf0:	ldr	x1, [x1, #3960]
    5cf4:	str	x1, [x0, #32]
    5cf8:	mov	w0, #0x0                   	// #0
    5cfc:	ldp	x29, x30, [sp], #48
    5d00:	ret
    5d04:	stp	x29, x30, [sp, #-48]!
    5d08:	mov	x29, sp
    5d0c:	str	x0, [sp, #24]
    5d10:	str	x1, [sp, #16]
    5d14:	mov	w0, #0x1                   	// #1
    5d18:	str	w0, [sp, #44]
    5d1c:	ldr	x0, [sp, #24]
    5d20:	str	x0, [sp, #32]
    5d24:	ldr	x0, [sp, #16]
    5d28:	cmp	x0, #0x0
    5d2c:	b.eq	5d6c <PyThread_free_lock@plt+0x343c>  // b.none
    5d30:	ldr	x0, [sp, #24]
    5d34:	ldr	x6, [x0, #8]
    5d38:	ldr	x0, [sp, #32]
    5d3c:	ldr	x1, [x0, #16]
    5d40:	ldr	x0, [sp, #16]
    5d44:	ldr	w2, [x0]
    5d48:	ldr	x0, [sp, #32]
    5d4c:	ldr	x3, [x0, #32]
    5d50:	ldr	x0, [sp, #32]
    5d54:	ldr	w0, [x0, #28]
    5d58:	mov	w5, w0
    5d5c:	ldr	w4, [sp, #44]
    5d60:	mov	x0, x6
    5d64:	bl	5424 <PyThread_free_lock@plt+0x2af4>
    5d68:	b	5db8 <PyThread_free_lock@plt+0x3488>
    5d6c:	ldr	x0, [sp, #32]
    5d70:	ldr	w0, [x0, #24]
    5d74:	cmp	w0, #0x1
    5d78:	b.ne	5d8c <PyThread_free_lock@plt+0x345c>  // b.any
    5d7c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5d80:	add	x0, x0, #0x3c8
    5d84:	bl	2850 <PyUnicode_InternFromString@plt>
    5d88:	b	5db8 <PyThread_free_lock@plt+0x3488>
    5d8c:	ldr	x0, [sp, #32]
    5d90:	ldr	w0, [x0, #24]
    5d94:	cmn	w0, #0x1
    5d98:	b.ne	5dac <PyThread_free_lock@plt+0x347c>  // b.any
    5d9c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5da0:	add	x0, x0, #0x3d0
    5da4:	bl	2850 <PyUnicode_InternFromString@plt>
    5da8:	b	5db8 <PyThread_free_lock@plt+0x3488>
    5dac:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5db0:	add	x0, x0, #0x3d8
    5db4:	bl	2850 <PyUnicode_InternFromString@plt>
    5db8:	ldp	x29, x30, [sp], #48
    5dbc:	ret
    5dc0:	stp	x29, x30, [sp, #-32]!
    5dc4:	mov	x29, sp
    5dc8:	str	x0, [sp, #24]
    5dcc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5dd0:	add	x0, x0, #0x958
    5dd4:	ldr	x0, [x0]
    5dd8:	cmp	x0, #0x0
    5ddc:	b.ne	5e5c <PyThread_free_lock@plt+0x352c>  // b.any
    5de0:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5de4:	ldr	x0, [x0, #4000]
    5de8:	ldr	x0, [x0]
    5dec:	mov	x2, #0x0                   	// #0
    5df0:	mov	x1, x0
    5df4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5df8:	add	x0, x0, #0x488
    5dfc:	bl	26e0 <PyErr_NewException@plt>
    5e00:	mov	x1, x0
    5e04:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5e08:	add	x0, x0, #0x958
    5e0c:	str	x1, [x0]
    5e10:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5e14:	add	x0, x0, #0x958
    5e18:	ldr	x0, [x0]
    5e1c:	cmp	x0, #0x0
    5e20:	b.ne	5e2c <PyThread_free_lock@plt+0x34fc>  // b.any
    5e24:	mov	w0, #0xffffffff            	// #-1
    5e28:	b	5e60 <PyThread_free_lock@plt+0x3530>
    5e2c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    5e30:	add	x0, x0, #0x958
    5e34:	ldr	x0, [x0]
    5e38:	mov	x2, x0
    5e3c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5e40:	add	x1, x0, #0x4b0
    5e44:	ldr	x0, [sp, #24]
    5e48:	bl	2510 <PyDict_SetItemString@plt>
    5e4c:	cmp	w0, #0x0
    5e50:	b.eq	5e5c <PyThread_free_lock@plt+0x352c>  // b.none
    5e54:	mov	w0, #0xffffffff            	// #-1
    5e58:	b	5e60 <PyThread_free_lock@plt+0x3530>
    5e5c:	mov	w0, #0x0                   	// #0
    5e60:	ldp	x29, x30, [sp], #32
    5e64:	ret
    5e68:	stp	x29, x30, [sp, #-48]!
    5e6c:	mov	x29, sp
    5e70:	str	x0, [sp, #24]
    5e74:	ldr	x0, [sp, #24]
    5e78:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    5e7c:	str	x0, [sp, #40]
    5e80:	ldr	x0, [sp, #40]
    5e84:	bl	2780 <PyThreadState_Next@plt>
    5e88:	cmp	x0, #0x0
    5e8c:	b.eq	5eb4 <PyThread_free_lock@plt+0x3584>  // b.none
    5e90:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5e94:	ldr	x0, [x0, #4000]
    5e98:	ldr	x2, [x0]
    5e9c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5ea0:	add	x1, x0, #0x4c0
    5ea4:	mov	x0, x2
    5ea8:	bl	2670 <PyErr_SetString@plt>
    5eac:	mov	w0, #0xffffffff            	// #-1
    5eb0:	b	5ef0 <PyThread_free_lock@plt+0x35c0>
    5eb4:	ldr	x0, [sp, #40]
    5eb8:	ldr	x0, [x0, #24]
    5ebc:	str	x0, [sp, #32]
    5ec0:	ldr	x0, [sp, #32]
    5ec4:	cmp	x0, #0x0
    5ec8:	b.ne	5ee8 <PyThread_free_lock@plt+0x35b8>  // b.any
    5ecc:	bl	2730 <PyErr_Occurred@plt>
    5ed0:	cmp	x0, #0x0
    5ed4:	b.eq	5ee0 <PyThread_free_lock@plt+0x35b0>  // b.none
    5ed8:	mov	w0, #0xffffffff            	// #-1
    5edc:	b	5ef0 <PyThread_free_lock@plt+0x35c0>
    5ee0:	mov	w0, #0x0                   	// #0
    5ee4:	b	5ef0 <PyThread_free_lock@plt+0x35c0>
    5ee8:	ldr	x0, [sp, #32]
    5eec:	ldrb	w0, [x0, #116]
    5ef0:	ldp	x29, x30, [sp], #48
    5ef4:	ret
    5ef8:	stp	x29, x30, [sp, #-48]!
    5efc:	mov	x29, sp
    5f00:	str	x0, [sp, #24]
    5f04:	ldr	x0, [sp, #24]
    5f08:	bl	5e68 <PyThread_free_lock@plt+0x3538>
    5f0c:	str	w0, [sp, #44]
    5f10:	ldr	w0, [sp, #44]
    5f14:	cmp	w0, #0x0
    5f18:	b.ge	5f24 <PyThread_free_lock@plt+0x35f4>  // b.tcont
    5f1c:	mov	w0, #0xffffffff            	// #-1
    5f20:	b	5f58 <PyThread_free_lock@plt+0x3628>
    5f24:	ldr	w0, [sp, #44]
    5f28:	cmp	w0, #0x0
    5f2c:	b.eq	5f54 <PyThread_free_lock@plt+0x3624>  // b.none
    5f30:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    5f34:	ldr	x0, [x0, #4000]
    5f38:	ldr	x2, [x0]
    5f3c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    5f40:	add	x1, x0, #0x4e8
    5f44:	mov	x0, x2
    5f48:	bl	28c0 <PyErr_Format@plt>
    5f4c:	mov	w0, #0xffffffff            	// #-1
    5f50:	b	5f58 <PyThread_free_lock@plt+0x3628>
    5f54:	mov	w0, #0x0                   	// #0
    5f58:	ldp	x29, x30, [sp], #48
    5f5c:	ret
    5f60:	stp	x29, x30, [sp, #-112]!
    5f64:	mov	x29, sp
    5f68:	str	x0, [sp, #40]
    5f6c:	str	x1, [sp, #32]
    5f70:	str	x2, [sp, #24]
    5f74:	str	x3, [sp, #16]
    5f78:	str	xzr, [sp, #72]
    5f7c:	str	xzr, [sp, #64]
    5f80:	str	xzr, [sp, #56]
    5f84:	ldr	x0, [sp, #40]
    5f88:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    5f8c:	str	x0, [sp, #96]
    5f90:	ldr	x0, [sp, #96]
    5f94:	cmp	x0, #0x0
    5f98:	b.eq	6068 <PyThread_free_lock@plt+0x3738>  // b.none
    5f9c:	ldr	x0, [sp, #96]
    5fa0:	bl	28d0 <PyModule_GetDict@plt>
    5fa4:	str	x0, [sp, #88]
    5fa8:	ldr	x2, [sp, #96]
    5fac:	mov	w1, #0x74c                 	// #1868
    5fb0:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    5fb4:	add	x0, x0, #0xec0
    5fb8:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    5fbc:	ldr	x0, [sp, #88]
    5fc0:	cmp	x0, #0x0
    5fc4:	b.eq	6070 <PyThread_free_lock@plt+0x3740>  // b.none
    5fc8:	ldr	x0, [sp, #88]
    5fcc:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    5fd0:	ldr	x0, [sp, #24]
    5fd4:	cmp	x0, #0x0
    5fd8:	b.eq	6008 <PyThread_free_lock@plt+0x36d8>  // b.none
    5fdc:	ldr	x1, [sp, #88]
    5fe0:	ldr	x0, [sp, #24]
    5fe4:	bl	2fc8 <PyThread_free_lock@plt+0x698>
    5fe8:	cmp	w0, #0x0
    5fec:	b.eq	6008 <PyThread_free_lock@plt+0x36d8>  // b.none
    5ff0:	ldr	x2, [sp, #88]
    5ff4:	mov	w1, #0x755                 	// #1877
    5ff8:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    5ffc:	add	x0, x0, #0xec0
    6000:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    6004:	b	607c <PyThread_free_lock@plt+0x374c>
    6008:	mov	x4, #0x0                   	// #0
    600c:	ldr	x3, [sp, #88]
    6010:	ldr	x2, [sp, #88]
    6014:	mov	w1, #0x101                 	// #257
    6018:	ldr	x0, [sp, #32]
    601c:	bl	2760 <PyRun_StringFlags@plt>
    6020:	str	x0, [sp, #80]
    6024:	ldr	x2, [sp, #88]
    6028:	mov	w1, #0x75c                 	// #1884
    602c:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    6030:	add	x0, x0, #0xec0
    6034:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    6038:	ldr	x0, [sp, #80]
    603c:	cmp	x0, #0x0
    6040:	b.eq	6078 <PyThread_free_lock@plt+0x3748>  // b.none
    6044:	ldr	x2, [sp, #80]
    6048:	mov	w1, #0x761                 	// #1889
    604c:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    6050:	add	x0, x0, #0xec0
    6054:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    6058:	ldr	x0, [sp, #16]
    605c:	str	xzr, [x0]
    6060:	mov	w0, #0x0                   	// #0
    6064:	b	6100 <PyThread_free_lock@plt+0x37d0>
    6068:	nop
    606c:	b	607c <PyThread_free_lock@plt+0x374c>
    6070:	nop
    6074:	b	607c <PyThread_free_lock@plt+0x374c>
    6078:	nop
    607c:	add	x2, sp, #0x38
    6080:	add	x1, sp, #0x40
    6084:	add	x0, sp, #0x48
    6088:	bl	2820 <PyErr_Fetch@plt>
    608c:	ldr	x0, [sp, #72]
    6090:	ldr	x1, [sp, #64]
    6094:	ldr	x2, [sp, #56]
    6098:	bl	3104 <PyThread_free_lock@plt+0x7d4>
    609c:	str	x0, [sp, #104]
    60a0:	ldr	x0, [sp, #72]
    60a4:	bl	2b44 <PyThread_free_lock@plt+0x214>
    60a8:	ldr	x0, [sp, #64]
    60ac:	bl	2b44 <PyThread_free_lock@plt+0x214>
    60b0:	ldr	x0, [sp, #56]
    60b4:	bl	2b44 <PyThread_free_lock@plt+0x214>
    60b8:	ldr	x0, [sp, #104]
    60bc:	cmp	x0, #0x0
    60c0:	b.ne	60f0 <PyThread_free_lock@plt+0x37c0>  // b.any
    60c4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    60c8:	ldr	x0, [x0, #3976]
    60cc:	ldr	x0, [x0]
    60d0:	mov	x3, x0
    60d4:	mov	x2, #0x33                  	// #51
    60d8:	mov	x1, #0x1                   	// #1
    60dc:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    60e0:	add	x0, x0, #0x508
    60e4:	bl	27c0 <fwrite@plt>
    60e8:	bl	26f0 <PyErr_Clear@plt>
    60ec:	str	xzr, [sp, #104]
    60f0:	ldr	x0, [sp, #16]
    60f4:	ldr	x1, [sp, #104]
    60f8:	str	x1, [x0]
    60fc:	mov	w0, #0xffffffff            	// #-1
    6100:	ldp	x29, x30, [sp], #112
    6104:	ret
    6108:	stp	x29, x30, [sp, #-96]!
    610c:	mov	x29, sp
    6110:	str	x0, [sp, #40]
    6114:	str	x1, [sp, #32]
    6118:	str	x2, [sp, #24]
    611c:	ldr	x0, [sp, #40]
    6120:	bl	5ef8 <PyThread_free_lock@plt+0x35c8>
    6124:	cmp	w0, #0x0
    6128:	b.ge	6134 <PyThread_free_lock@plt+0x3804>  // b.tcont
    612c:	mov	w0, #0xffffffff            	// #-1
    6130:	b	6220 <PyThread_free_lock@plt+0x38f0>
    6134:	ldr	x0, [sp, #24]
    6138:	bl	2e98 <PyThread_free_lock@plt+0x568>
    613c:	str	x0, [sp, #80]
    6140:	ldr	x0, [sp, #80]
    6144:	cmp	x0, #0x0
    6148:	b.ne	6160 <PyThread_free_lock@plt+0x3830>  // b.any
    614c:	bl	2730 <PyErr_Occurred@plt>
    6150:	cmp	x0, #0x0
    6154:	b.eq	6160 <PyThread_free_lock@plt+0x3830>  // b.none
    6158:	mov	w0, #0xffffffff            	// #-1
    615c:	b	6220 <PyThread_free_lock@plt+0x38f0>
    6160:	str	xzr, [sp, #88]
    6164:	bl	2800 <_PyInterpreterState_Get@plt>
    6168:	mov	x1, x0
    616c:	ldr	x0, [sp, #40]
    6170:	cmp	x0, x1
    6174:	b.eq	6190 <PyThread_free_lock@plt+0x3860>  // b.none
    6178:	ldr	x0, [sp, #40]
    617c:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    6180:	str	x0, [sp, #72]
    6184:	ldr	x0, [sp, #72]
    6188:	bl	2920 <PyThreadState_Swap@plt>
    618c:	str	x0, [sp, #88]
    6190:	str	xzr, [sp, #56]
    6194:	add	x0, sp, #0x38
    6198:	mov	x3, x0
    619c:	ldr	x2, [sp, #80]
    61a0:	ldr	x1, [sp, #32]
    61a4:	ldr	x0, [sp, #40]
    61a8:	bl	5f60 <PyThread_free_lock@plt+0x3630>
    61ac:	str	w0, [sp, #68]
    61b0:	ldr	x0, [sp, #88]
    61b4:	cmp	x0, #0x0
    61b8:	b.eq	61c4 <PyThread_free_lock@plt+0x3894>  // b.none
    61bc:	ldr	x0, [sp, #88]
    61c0:	bl	2920 <PyThreadState_Swap@plt>
    61c4:	ldr	x0, [sp, #56]
    61c8:	cmp	x0, #0x0
    61cc:	b.eq	61f8 <PyThread_free_lock@plt+0x38c8>  // b.none
    61d0:	ldr	x2, [sp, #56]
    61d4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    61d8:	add	x0, x0, #0x958
    61dc:	ldr	x0, [x0]
    61e0:	mov	x1, x0
    61e4:	mov	x0, x2
    61e8:	bl	32cc <PyThread_free_lock@plt+0x99c>
    61ec:	ldr	x0, [sp, #56]
    61f0:	bl	30dc <PyThread_free_lock@plt+0x7ac>
    61f4:	b	6208 <PyThread_free_lock@plt+0x38d8>
    61f8:	ldr	w0, [sp, #68]
    61fc:	cmp	w0, #0x0
    6200:	b.eq	6208 <PyThread_free_lock@plt+0x38d8>  // b.none
    6204:	bl	2600 <PyErr_NoMemory@plt>
    6208:	ldr	x0, [sp, #80]
    620c:	cmp	x0, #0x0
    6210:	b.eq	621c <PyThread_free_lock@plt+0x38ec>  // b.none
    6214:	ldr	x0, [sp, #80]
    6218:	bl	2e20 <PyThread_free_lock@plt+0x4f0>
    621c:	ldr	w0, [sp, #68]
    6220:	ldp	x29, x30, [sp], #96
    6224:	ret
    6228:	stp	x29, x30, [sp, #-16]!
    622c:	mov	x29, sp
    6230:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6234:	add	x0, x0, #0x960
    6238:	bl	44b0 <PyThread_free_lock@plt+0x1b80>
    623c:	cmp	w0, #0x0
    6240:	b.eq	624c <PyThread_free_lock@plt+0x391c>  // b.none
    6244:	mov	w0, #0xffffffff            	// #-1
    6248:	b	6250 <PyThread_free_lock@plt+0x3920>
    624c:	mov	w0, #0x0                   	// #0
    6250:	ldp	x29, x30, [sp], #16
    6254:	ret
    6258:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    625c:	add	x0, x0, #0x960
    6260:	ret
    6264:	stp	x29, x30, [sp, #-64]!
    6268:	mov	x29, sp
    626c:	str	x0, [sp, #24]
    6270:	str	x1, [sp, #16]
    6274:	mov	x3, #0x0                   	// #0
    6278:	mov	x2, #0x0                   	// #0
    627c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6280:	add	x1, x0, #0x540
    6284:	ldr	x0, [sp, #16]
    6288:	bl	2720 <PyArg_UnpackTuple@plt>
    628c:	cmp	w0, #0x0
    6290:	b.ne	629c <PyThread_free_lock@plt+0x396c>  // b.any
    6294:	mov	x0, #0x0                   	// #0
    6298:	b	633c <PyThread_free_lock@plt+0x3a0c>
    629c:	mov	x0, #0x0                   	// #0
    62a0:	bl	2920 <PyThreadState_Swap@plt>
    62a4:	str	x0, [sp, #56]
    62a8:	bl	26b0 <Py_NewInterpreter@plt>
    62ac:	str	x0, [sp, #48]
    62b0:	ldr	x0, [sp, #56]
    62b4:	bl	2920 <PyThreadState_Swap@plt>
    62b8:	ldr	x0, [sp, #48]
    62bc:	cmp	x0, #0x0
    62c0:	b.ne	62e8 <PyThread_free_lock@plt+0x39b8>  // b.any
    62c4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    62c8:	ldr	x0, [x0, #4000]
    62cc:	ldr	x2, [x0]
    62d0:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    62d4:	add	x1, x0, #0x548
    62d8:	mov	x0, x2
    62dc:	bl	2670 <PyErr_SetString@plt>
    62e0:	mov	x0, #0x0                   	// #0
    62e4:	b	633c <PyThread_free_lock@plt+0x3a0c>
    62e8:	ldr	x0, [sp, #48]
    62ec:	ldr	x0, [x0, #16]
    62f0:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    62f4:	str	x0, [sp, #40]
    62f8:	ldr	x0, [sp, #40]
    62fc:	cmp	x0, #0x0
    6300:	b.ne	6328 <PyThread_free_lock@plt+0x39f8>  // b.any
    6304:	ldr	x0, [sp, #48]
    6308:	bl	2920 <PyThreadState_Swap@plt>
    630c:	str	x0, [sp, #56]
    6310:	ldr	x0, [sp, #48]
    6314:	bl	25d0 <Py_EndInterpreter@plt>
    6318:	ldr	x0, [sp, #56]
    631c:	bl	2920 <PyThreadState_Swap@plt>
    6320:	mov	x0, #0x0                   	// #0
    6324:	b	633c <PyThread_free_lock@plt+0x3a0c>
    6328:	ldr	x0, [sp, #48]
    632c:	ldr	x0, [x0, #16]
    6330:	mov	w1, #0x1                   	// #1
    6334:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    6338:	ldr	x0, [sp, #40]
    633c:	ldp	x29, x30, [sp], #64
    6340:	ret
    6344:	stp	x29, x30, [sp, #-96]!
    6348:	mov	x29, sp
    634c:	str	x0, [sp, #40]
    6350:	str	x1, [sp, #32]
    6354:	str	x2, [sp, #24]
    6358:	add	x0, sp, #0x38
    635c:	mov	x4, x0
    6360:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6364:	add	x3, x0, #0x850
    6368:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    636c:	add	x2, x0, #0x5b8
    6370:	ldr	x1, [sp, #24]
    6374:	ldr	x0, [sp, #32]
    6378:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    637c:	cmp	w0, #0x0
    6380:	b.ne	638c <PyThread_free_lock@plt+0x3a5c>  // b.any
    6384:	mov	x0, #0x0                   	// #0
    6388:	b	6450 <PyThread_free_lock@plt+0x3b20>
    638c:	ldr	x0, [sp, #56]
    6390:	bl	2550 <_PyInterpreterID_LookUp@plt>
    6394:	str	x0, [sp, #88]
    6398:	ldr	x0, [sp, #88]
    639c:	cmp	x0, #0x0
    63a0:	b.ne	63ac <PyThread_free_lock@plt+0x3a7c>  // b.any
    63a4:	mov	x0, #0x0                   	// #0
    63a8:	b	6450 <PyThread_free_lock@plt+0x3b20>
    63ac:	bl	2bec <PyThread_free_lock@plt+0x2bc>
    63b0:	str	x0, [sp, #80]
    63b4:	ldr	x0, [sp, #80]
    63b8:	cmp	x0, #0x0
    63bc:	b.ne	63c8 <PyThread_free_lock@plt+0x3a98>  // b.any
    63c0:	mov	x0, #0x0                   	// #0
    63c4:	b	6450 <PyThread_free_lock@plt+0x3b20>
    63c8:	ldr	x1, [sp, #88]
    63cc:	ldr	x0, [sp, #80]
    63d0:	cmp	x1, x0
    63d4:	b.ne	63fc <PyThread_free_lock@plt+0x3acc>  // b.any
    63d8:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    63dc:	ldr	x0, [x0, #4000]
    63e0:	ldr	x2, [x0]
    63e4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    63e8:	add	x1, x0, #0x5c8
    63ec:	mov	x0, x2
    63f0:	bl	2670 <PyErr_SetString@plt>
    63f4:	mov	x0, #0x0                   	// #0
    63f8:	b	6450 <PyThread_free_lock@plt+0x3b20>
    63fc:	ldr	x0, [sp, #88]
    6400:	bl	5ef8 <PyThread_free_lock@plt+0x35c8>
    6404:	cmp	w0, #0x0
    6408:	b.ge	6414 <PyThread_free_lock@plt+0x3ae4>  // b.tcont
    640c:	mov	x0, #0x0                   	// #0
    6410:	b	6450 <PyThread_free_lock@plt+0x3b20>
    6414:	ldr	x0, [sp, #88]
    6418:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    641c:	str	x0, [sp, #72]
    6420:	ldr	x0, [sp, #72]
    6424:	bl	2920 <PyThreadState_Swap@plt>
    6428:	str	x0, [sp, #64]
    642c:	ldr	x0, [sp, #72]
    6430:	bl	25d0 <Py_EndInterpreter@plt>
    6434:	ldr	x0, [sp, #64]
    6438:	bl	2920 <PyThreadState_Swap@plt>
    643c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6440:	ldr	x0, [x0, #4048]
    6444:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6448:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    644c:	ldr	x0, [x0, #4048]
    6450:	ldp	x29, x30, [sp], #96
    6454:	ret
    6458:	stp	x29, x30, [sp, #-64]!
    645c:	mov	x29, sp
    6460:	str	x0, [sp, #24]
    6464:	str	x1, [sp, #16]
    6468:	mov	x0, #0x0                   	// #0
    646c:	bl	2500 <PyList_New@plt>
    6470:	str	x0, [sp, #48]
    6474:	ldr	x0, [sp, #48]
    6478:	cmp	x0, #0x0
    647c:	b.ne	6488 <PyThread_free_lock@plt+0x3b58>  // b.any
    6480:	mov	x0, #0x0                   	// #0
    6484:	b	6534 <PyThread_free_lock@plt+0x3c04>
    6488:	bl	28f0 <PyInterpreterState_Head@plt>
    648c:	str	x0, [sp, #56]
    6490:	b	6524 <PyThread_free_lock@plt+0x3bf4>
    6494:	ldr	x0, [sp, #56]
    6498:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    649c:	str	x0, [sp, #40]
    64a0:	ldr	x0, [sp, #40]
    64a4:	cmp	x0, #0x0
    64a8:	b.ne	64c8 <PyThread_free_lock@plt+0x3b98>  // b.any
    64ac:	ldr	x2, [sp, #48]
    64b0:	mov	w1, #0x82d                 	// #2093
    64b4:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    64b8:	add	x0, x0, #0xec0
    64bc:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    64c0:	mov	x0, #0x0                   	// #0
    64c4:	b	6534 <PyThread_free_lock@plt+0x3c04>
    64c8:	ldr	x2, [sp, #40]
    64cc:	mov	x1, #0x0                   	// #0
    64d0:	ldr	x0, [sp, #48]
    64d4:	bl	2580 <PyList_Insert@plt>
    64d8:	str	w0, [sp, #36]
    64dc:	ldr	x2, [sp, #40]
    64e0:	mov	w1, #0x832                 	// #2098
    64e4:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    64e8:	add	x0, x0, #0xec0
    64ec:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    64f0:	ldr	w0, [sp, #36]
    64f4:	cmp	w0, #0x0
    64f8:	b.ge	6518 <PyThread_free_lock@plt+0x3be8>  // b.tcont
    64fc:	ldr	x2, [sp, #48]
    6500:	mov	w1, #0x834                 	// #2100
    6504:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    6508:	add	x0, x0, #0xec0
    650c:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    6510:	mov	x0, #0x0                   	// #0
    6514:	b	6534 <PyThread_free_lock@plt+0x3c04>
    6518:	ldr	x0, [sp, #56]
    651c:	bl	25f0 <PyInterpreterState_Next@plt>
    6520:	str	x0, [sp, #56]
    6524:	ldr	x0, [sp, #56]
    6528:	cmp	x0, #0x0
    652c:	b.ne	6494 <PyThread_free_lock@plt+0x3b64>  // b.any
    6530:	ldr	x0, [sp, #48]
    6534:	ldp	x29, x30, [sp], #64
    6538:	ret
    653c:	stp	x29, x30, [sp, #-48]!
    6540:	mov	x29, sp
    6544:	str	x0, [sp, #24]
    6548:	str	x1, [sp, #16]
    654c:	bl	2bec <PyThread_free_lock@plt+0x2bc>
    6550:	str	x0, [sp, #40]
    6554:	ldr	x0, [sp, #40]
    6558:	cmp	x0, #0x0
    655c:	b.ne	6568 <PyThread_free_lock@plt+0x3c38>  // b.any
    6560:	mov	x0, #0x0                   	// #0
    6564:	b	6570 <PyThread_free_lock@plt+0x3c40>
    6568:	ldr	x0, [sp, #40]
    656c:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    6570:	ldp	x29, x30, [sp], #48
    6574:	ret
    6578:	stp	x29, x30, [sp, #-48]!
    657c:	mov	x29, sp
    6580:	str	x0, [sp, #24]
    6584:	str	x1, [sp, #16]
    6588:	str	xzr, [sp, #40]
    658c:	ldr	x0, [sp, #40]
    6590:	bl	2810 <_PyInterpreterID_New@plt>
    6594:	ldp	x29, x30, [sp], #48
    6598:	ret
    659c:	stp	x29, x30, [sp, #-96]!
    65a0:	mov	x29, sp
    65a4:	str	x0, [sp, #40]
    65a8:	str	x1, [sp, #32]
    65ac:	str	x2, [sp, #24]
    65b0:	str	xzr, [sp, #56]
    65b4:	add	x2, sp, #0x38
    65b8:	add	x1, sp, #0x40
    65bc:	add	x0, sp, #0x48
    65c0:	mov	x6, x2
    65c4:	mov	x5, x1
    65c8:	mov	x4, x0
    65cc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    65d0:	add	x3, x0, #0x860
    65d4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    65d8:	add	x2, x0, #0x758
    65dc:	ldr	x1, [sp, #24]
    65e0:	ldr	x0, [sp, #32]
    65e4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    65e8:	cmp	w0, #0x0
    65ec:	b.ne	65f8 <PyThread_free_lock@plt+0x3cc8>  // b.any
    65f0:	mov	x0, #0x0                   	// #0
    65f4:	b	66ac <PyThread_free_lock@plt+0x3d7c>
    65f8:	ldr	x0, [sp, #72]
    65fc:	bl	2550 <_PyInterpreterID_LookUp@plt>
    6600:	str	x0, [sp, #88]
    6604:	ldr	x0, [sp, #88]
    6608:	cmp	x0, #0x0
    660c:	b.ne	6618 <PyThread_free_lock@plt+0x3ce8>  // b.any
    6610:	mov	x0, #0x0                   	// #0
    6614:	b	66ac <PyThread_free_lock@plt+0x3d7c>
    6618:	ldr	x0, [sp, #64]
    661c:	add	x1, sp, #0x30
    6620:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    6624:	str	x0, [sp, #80]
    6628:	ldr	x0, [sp, #80]
    662c:	cmp	x0, #0x0
    6630:	b.ne	663c <PyThread_free_lock@plt+0x3d0c>  // b.any
    6634:	mov	x0, #0x0                   	// #0
    6638:	b	66ac <PyThread_free_lock@plt+0x3d7c>
    663c:	ldr	x0, [sp, #80]
    6640:	bl	2530 <strlen@plt>
    6644:	ldr	x1, [sp, #48]
    6648:	cmp	x0, x1
    664c:	b.eq	6674 <PyThread_free_lock@plt+0x3d44>  // b.none
    6650:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6654:	ldr	x0, [x0, #4016]
    6658:	ldr	x2, [x0]
    665c:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6660:	add	x1, x0, #0x768
    6664:	mov	x0, x2
    6668:	bl	2670 <PyErr_SetString@plt>
    666c:	mov	x0, #0x0                   	// #0
    6670:	b	66ac <PyThread_free_lock@plt+0x3d7c>
    6674:	ldr	x0, [sp, #56]
    6678:	mov	x2, x0
    667c:	ldr	x1, [sp, #80]
    6680:	ldr	x0, [sp, #88]
    6684:	bl	6108 <PyThread_free_lock@plt+0x37d8>
    6688:	cmp	w0, #0x0
    668c:	b.eq	6698 <PyThread_free_lock@plt+0x3d68>  // b.none
    6690:	mov	x0, #0x0                   	// #0
    6694:	b	66ac <PyThread_free_lock@plt+0x3d7c>
    6698:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    669c:	ldr	x0, [x0, #4048]
    66a0:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    66a4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    66a8:	ldr	x0, [x0, #4048]
    66ac:	ldp	x29, x30, [sp], #96
    66b0:	ret
    66b4:	stp	x29, x30, [sp, #-64]!
    66b8:	mov	x29, sp
    66bc:	str	x0, [sp, #40]
    66c0:	str	x1, [sp, #32]
    66c4:	str	x2, [sp, #24]
    66c8:	add	x0, sp, #0x38
    66cc:	mov	x4, x0
    66d0:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    66d4:	add	x3, x0, #0x880
    66d8:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    66dc:	add	x2, x0, #0x810
    66e0:	ldr	x1, [sp, #24]
    66e4:	ldr	x0, [sp, #32]
    66e8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    66ec:	cmp	w0, #0x0
    66f0:	b.ne	66fc <PyThread_free_lock@plt+0x3dcc>  // b.any
    66f4:	mov	x0, #0x0                   	// #0
    66f8:	b	673c <PyThread_free_lock@plt+0x3e0c>
    66fc:	ldr	x0, [sp, #56]
    6700:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    6704:	cmp	w0, #0x0
    6708:	b.ne	6724 <PyThread_free_lock@plt+0x3df4>  // b.any
    670c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6710:	ldr	x0, [x0, #4056]
    6714:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6718:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    671c:	ldr	x0, [x0, #4056]
    6720:	b	673c <PyThread_free_lock@plt+0x3e0c>
    6724:	bl	26f0 <PyErr_Clear@plt>
    6728:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    672c:	ldr	x0, [x0, #4032]
    6730:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6734:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6738:	ldr	x0, [x0, #4032]
    673c:	ldp	x29, x30, [sp], #64
    6740:	ret
    6744:	stp	x29, x30, [sp, #-80]!
    6748:	mov	x29, sp
    674c:	str	x0, [sp, #40]
    6750:	str	x1, [sp, #32]
    6754:	str	x2, [sp, #24]
    6758:	add	x0, sp, #0x38
    675c:	mov	x4, x0
    6760:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6764:	add	x3, x0, #0x890
    6768:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    676c:	add	x2, x0, #0x898
    6770:	ldr	x1, [sp, #24]
    6774:	ldr	x0, [sp, #32]
    6778:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    677c:	cmp	w0, #0x0
    6780:	b.ne	678c <PyThread_free_lock@plt+0x3e5c>  // b.any
    6784:	mov	x0, #0x0                   	// #0
    6788:	b	6804 <PyThread_free_lock@plt+0x3ed4>
    678c:	ldr	x0, [sp, #56]
    6790:	bl	2550 <_PyInterpreterID_LookUp@plt>
    6794:	str	x0, [sp, #72]
    6798:	ldr	x0, [sp, #72]
    679c:	cmp	x0, #0x0
    67a0:	b.ne	67ac <PyThread_free_lock@plt+0x3e7c>  // b.any
    67a4:	mov	x0, #0x0                   	// #0
    67a8:	b	6804 <PyThread_free_lock@plt+0x3ed4>
    67ac:	ldr	x0, [sp, #72]
    67b0:	bl	5e68 <PyThread_free_lock@plt+0x3538>
    67b4:	str	w0, [sp, #68]
    67b8:	ldr	w0, [sp, #68]
    67bc:	cmp	w0, #0x0
    67c0:	b.ge	67cc <PyThread_free_lock@plt+0x3e9c>  // b.tcont
    67c4:	mov	x0, #0x0                   	// #0
    67c8:	b	6804 <PyThread_free_lock@plt+0x3ed4>
    67cc:	ldr	w0, [sp, #68]
    67d0:	cmp	w0, #0x0
    67d4:	b.eq	67f0 <PyThread_free_lock@plt+0x3ec0>  // b.none
    67d8:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    67dc:	ldr	x0, [x0, #4056]
    67e0:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    67e4:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    67e8:	ldr	x0, [x0, #4056]
    67ec:	b	6804 <PyThread_free_lock@plt+0x3ed4>
    67f0:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    67f4:	ldr	x0, [x0, #4032]
    67f8:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    67fc:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6800:	ldr	x0, [x0, #4032]
    6804:	ldp	x29, x30, [sp], #80
    6808:	ret
    680c:	stp	x29, x30, [sp, #-48]!
    6810:	mov	x29, sp
    6814:	str	x0, [sp, #24]
    6818:	str	x1, [sp, #16]
    681c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6820:	add	x0, x0, #0x960
    6824:	bl	4f20 <PyThread_free_lock@plt+0x25f0>
    6828:	str	x0, [sp, #40]
    682c:	ldr	x0, [sp, #40]
    6830:	cmp	x0, #0x0
    6834:	b.ge	6840 <PyThread_free_lock@plt+0x3f10>  // b.tcont
    6838:	mov	x0, #0x0                   	// #0
    683c:	b	6890 <PyThread_free_lock@plt+0x3f60>
    6840:	mov	w5, #0x0                   	// #0
    6844:	mov	w4, #0x0                   	// #0
    6848:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    684c:	add	x3, x0, #0x960
    6850:	mov	w2, #0x0                   	// #0
    6854:	ldr	x1, [sp, #40]
    6858:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    685c:	add	x0, x0, #0x238
    6860:	bl	5424 <PyThread_free_lock@plt+0x2af4>
    6864:	str	x0, [sp, #32]
    6868:	ldr	x0, [sp, #32]
    686c:	cmp	x0, #0x0
    6870:	b.ne	688c <PyThread_free_lock@plt+0x3f5c>  // b.any
    6874:	ldr	x1, [sp, #40]
    6878:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    687c:	add	x0, x0, #0x960
    6880:	bl	4f80 <PyThread_free_lock@plt+0x2650>
    6884:	mov	x0, #0x0                   	// #0
    6888:	b	6890 <PyThread_free_lock@plt+0x3f60>
    688c:	ldr	x0, [sp, #32]
    6890:	ldp	x29, x30, [sp], #48
    6894:	ret
    6898:	stp	x29, x30, [sp, #-64]!
    689c:	mov	x29, sp
    68a0:	str	x0, [sp, #40]
    68a4:	str	x1, [sp, #32]
    68a8:	str	x2, [sp, #24]
    68ac:	add	x0, sp, #0x38
    68b0:	mov	x5, x0
    68b4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    68b8:	add	x4, x0, #0x2f4
    68bc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    68c0:	add	x3, x0, #0x8a0
    68c4:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    68c8:	add	x2, x0, #0x968
    68cc:	ldr	x1, [sp, #24]
    68d0:	ldr	x0, [sp, #32]
    68d4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    68d8:	cmp	w0, #0x0
    68dc:	b.ne	68e8 <PyThread_free_lock@plt+0x3fb8>  // b.any
    68e0:	mov	x0, #0x0                   	// #0
    68e4:	b	6920 <PyThread_free_lock@plt+0x3ff0>
    68e8:	ldr	x0, [sp, #56]
    68ec:	mov	x1, x0
    68f0:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    68f4:	add	x0, x0, #0x960
    68f8:	bl	4f80 <PyThread_free_lock@plt+0x2650>
    68fc:	cmp	w0, #0x0
    6900:	b.eq	690c <PyThread_free_lock@plt+0x3fdc>  // b.none
    6904:	mov	x0, #0x0                   	// #0
    6908:	b	6920 <PyThread_free_lock@plt+0x3ff0>
    690c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6910:	ldr	x0, [x0, #4048]
    6914:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6918:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    691c:	ldr	x0, [x0, #4048]
    6920:	ldp	x29, x30, [sp], #64
    6924:	ret
    6928:	stp	x29, x30, [sp, #-80]!
    692c:	mov	x29, sp
    6930:	str	x0, [sp, #24]
    6934:	str	x1, [sp, #16]
    6938:	str	xzr, [sp, #32]
    693c:	add	x0, sp, #0x20
    6940:	mov	x1, x0
    6944:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6948:	add	x0, x0, #0x960
    694c:	bl	4c74 <PyThread_free_lock@plt+0x2344>
    6950:	str	x0, [sp, #48]
    6954:	ldr	x0, [sp, #48]
    6958:	cmp	x0, #0x0
    695c:	b.ne	6980 <PyThread_free_lock@plt+0x4050>  // b.any
    6960:	ldr	x0, [sp, #32]
    6964:	cmp	x0, #0x0
    6968:	b.ne	6978 <PyThread_free_lock@plt+0x4048>  // b.any
    696c:	mov	x0, #0x0                   	// #0
    6970:	bl	2500 <PyList_New@plt>
    6974:	b	6a54 <PyThread_free_lock@plt+0x4124>
    6978:	mov	x0, #0x0                   	// #0
    697c:	b	6a54 <PyThread_free_lock@plt+0x4124>
    6980:	ldr	x0, [sp, #32]
    6984:	bl	2500 <PyList_New@plt>
    6988:	str	x0, [sp, #72]
    698c:	ldr	x0, [sp, #72]
    6990:	cmp	x0, #0x0
    6994:	b.eq	6a44 <PyThread_free_lock@plt+0x4114>  // b.none
    6998:	ldr	x0, [sp, #48]
    699c:	str	x0, [sp, #64]
    69a0:	str	xzr, [sp, #56]
    69a4:	b	6a30 <PyThread_free_lock@plt+0x4100>
    69a8:	ldr	x0, [sp, #64]
    69ac:	ldr	x1, [x0]
    69b0:	mov	w5, #0x0                   	// #0
    69b4:	mov	w4, #0x0                   	// #0
    69b8:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    69bc:	add	x3, x0, #0x960
    69c0:	mov	w2, #0x0                   	// #0
    69c4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    69c8:	add	x0, x0, #0x238
    69cc:	bl	5424 <PyThread_free_lock@plt+0x2af4>
    69d0:	str	x0, [sp, #40]
    69d4:	ldr	x0, [sp, #40]
    69d8:	cmp	x0, #0x0
    69dc:	b.ne	69fc <PyThread_free_lock@plt+0x40cc>  // b.any
    69e0:	ldr	x2, [sp, #72]
    69e4:	mov	w1, #0x906                 	// #2310
    69e8:	adrp	x0, 6000 <PyThread_free_lock@plt+0x36d0>
    69ec:	add	x0, x0, #0xec0
    69f0:	bl	2af8 <PyThread_free_lock@plt+0x1c8>
    69f4:	str	xzr, [sp, #72]
    69f8:	b	6a48 <PyThread_free_lock@plt+0x4118>
    69fc:	ldr	x0, [sp, #72]
    6a00:	ldr	x1, [x0, #24]
    6a04:	ldr	x0, [sp, #56]
    6a08:	lsl	x0, x0, #3
    6a0c:	add	x0, x1, x0
    6a10:	ldr	x1, [sp, #40]
    6a14:	str	x1, [x0]
    6a18:	ldr	x0, [sp, #64]
    6a1c:	add	x0, x0, #0x8
    6a20:	str	x0, [sp, #64]
    6a24:	ldr	x0, [sp, #56]
    6a28:	add	x0, x0, #0x1
    6a2c:	str	x0, [sp, #56]
    6a30:	ldr	x0, [sp, #32]
    6a34:	ldr	x1, [sp, #56]
    6a38:	cmp	x1, x0
    6a3c:	b.lt	69a8 <PyThread_free_lock@plt+0x4078>  // b.tstop
    6a40:	b	6a48 <PyThread_free_lock@plt+0x4118>
    6a44:	nop
    6a48:	ldr	x0, [sp, #48]
    6a4c:	bl	2590 <PyMem_Free@plt>
    6a50:	ldr	x0, [sp, #72]
    6a54:	ldp	x29, x30, [sp], #80
    6a58:	ret
    6a5c:	stp	x29, x30, [sp, #-64]!
    6a60:	mov	x29, sp
    6a64:	str	x0, [sp, #40]
    6a68:	str	x1, [sp, #32]
    6a6c:	str	x2, [sp, #24]
    6a70:	add	x1, sp, #0x30
    6a74:	add	x0, sp, #0x38
    6a78:	mov	x6, x1
    6a7c:	mov	x5, x0
    6a80:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    6a84:	add	x4, x0, #0x2f4
    6a88:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6a8c:	add	x3, x0, #0x8b0
    6a90:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6a94:	add	x2, x0, #0xa58
    6a98:	ldr	x1, [sp, #24]
    6a9c:	ldr	x0, [sp, #32]
    6aa0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    6aa4:	cmp	w0, #0x0
    6aa8:	b.ne	6ab4 <PyThread_free_lock@plt+0x4184>  // b.any
    6aac:	mov	x0, #0x0                   	// #0
    6ab0:	b	6af4 <PyThread_free_lock@plt+0x41c4>
    6ab4:	ldr	x0, [sp, #56]
    6ab8:	ldr	x1, [sp, #48]
    6abc:	mov	x2, x1
    6ac0:	mov	x1, x0
    6ac4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6ac8:	add	x0, x0, #0x960
    6acc:	bl	4fd8 <PyThread_free_lock@plt+0x26a8>
    6ad0:	cmp	w0, #0x0
    6ad4:	b.eq	6ae0 <PyThread_free_lock@plt+0x41b0>  // b.none
    6ad8:	mov	x0, #0x0                   	// #0
    6adc:	b	6af4 <PyThread_free_lock@plt+0x41c4>
    6ae0:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6ae4:	ldr	x0, [x0, #4048]
    6ae8:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6aec:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6af0:	ldr	x0, [x0, #4048]
    6af4:	ldp	x29, x30, [sp], #64
    6af8:	ret
    6afc:	stp	x29, x30, [sp, #-64]!
    6b00:	mov	x29, sp
    6b04:	str	x0, [sp, #40]
    6b08:	str	x1, [sp, #32]
    6b0c:	str	x2, [sp, #24]
    6b10:	add	x0, sp, #0x38
    6b14:	mov	x5, x0
    6b18:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    6b1c:	add	x4, x0, #0x2f4
    6b20:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6b24:	add	x3, x0, #0x8c8
    6b28:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6b2c:	add	x2, x0, #0xab8
    6b30:	ldr	x1, [sp, #24]
    6b34:	ldr	x0, [sp, #32]
    6b38:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    6b3c:	cmp	w0, #0x0
    6b40:	b.ne	6b4c <PyThread_free_lock@plt+0x421c>  // b.any
    6b44:	mov	x0, #0x0                   	// #0
    6b48:	b	6b60 <PyThread_free_lock@plt+0x4230>
    6b4c:	ldr	x0, [sp, #56]
    6b50:	mov	x1, x0
    6b54:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6b58:	add	x0, x0, #0x960
    6b5c:	bl	5120 <PyThread_free_lock@plt+0x27f0>
    6b60:	ldp	x29, x30, [sp], #64
    6b64:	ret
    6b68:	sub	sp, sp, #0x60
    6b6c:	stp	x29, x30, [sp, #16]
    6b70:	add	x29, sp, #0x10
    6b74:	str	x0, [sp, #56]
    6b78:	str	x1, [sp, #48]
    6b7c:	str	x2, [sp, #40]
    6b80:	str	wzr, [sp, #84]
    6b84:	str	wzr, [sp, #80]
    6b88:	str	wzr, [sp, #76]
    6b8c:	add	x3, sp, #0x50
    6b90:	add	x2, sp, #0x54
    6b94:	add	x1, sp, #0x58
    6b98:	add	x0, sp, #0x4c
    6b9c:	str	x0, [sp]
    6ba0:	mov	x7, x3
    6ba4:	mov	x6, x2
    6ba8:	mov	x5, x1
    6bac:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    6bb0:	add	x4, x0, #0x2f4
    6bb4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6bb8:	add	x3, x0, #0x8d8
    6bbc:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6bc0:	add	x2, x0, #0xb28
    6bc4:	ldr	x1, [sp, #40]
    6bc8:	ldr	x0, [sp, #48]
    6bcc:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    6bd0:	cmp	w0, #0x0
    6bd4:	b.ne	6be0 <PyThread_free_lock@plt+0x42b0>  // b.any
    6bd8:	mov	x0, #0x0                   	// #0
    6bdc:	b	6c30 <PyThread_free_lock@plt+0x4300>
    6be0:	ldr	x4, [sp, #88]
    6be4:	ldr	w1, [sp, #84]
    6be8:	ldr	w0, [sp, #80]
    6bec:	sub	w0, w1, w0
    6bf0:	ldr	w1, [sp, #76]
    6bf4:	mov	w3, w1
    6bf8:	mov	w2, w0
    6bfc:	mov	x1, x4
    6c00:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6c04:	add	x0, x0, #0x960
    6c08:	bl	52bc <PyThread_free_lock@plt+0x298c>
    6c0c:	cmp	w0, #0x0
    6c10:	b.eq	6c1c <PyThread_free_lock@plt+0x42ec>  // b.none
    6c14:	mov	x0, #0x0                   	// #0
    6c18:	b	6c30 <PyThread_free_lock@plt+0x4300>
    6c1c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6c20:	ldr	x0, [x0, #4048]
    6c24:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6c28:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6c2c:	ldr	x0, [x0, #4048]
    6c30:	ldp	x29, x30, [sp, #16]
    6c34:	add	sp, sp, #0x60
    6c38:	ret
    6c3c:	sub	sp, sp, #0x60
    6c40:	stp	x29, x30, [sp, #16]
    6c44:	add	x29, sp, #0x10
    6c48:	str	x0, [sp, #56]
    6c4c:	str	x1, [sp, #48]
    6c50:	str	x2, [sp, #40]
    6c54:	str	wzr, [sp, #84]
    6c58:	str	wzr, [sp, #80]
    6c5c:	str	wzr, [sp, #76]
    6c60:	add	x3, sp, #0x50
    6c64:	add	x2, sp, #0x54
    6c68:	add	x1, sp, #0x58
    6c6c:	add	x0, sp, #0x4c
    6c70:	str	x0, [sp]
    6c74:	mov	x7, x3
    6c78:	mov	x6, x2
    6c7c:	mov	x5, x1
    6c80:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    6c84:	add	x4, x0, #0x2f4
    6c88:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6c8c:	add	x3, x0, #0x900
    6c90:	adrp	x0, 7000 <PyInit__xxsubinterpreters@@Base+0x2a0>
    6c94:	add	x2, x0, #0xe90
    6c98:	ldr	x1, [sp, #40]
    6c9c:	ldr	x0, [sp, #48]
    6ca0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    6ca4:	cmp	w0, #0x0
    6ca8:	b.ne	6cb4 <PyThread_free_lock@plt+0x4384>  // b.any
    6cac:	mov	x0, #0x0                   	// #0
    6cb0:	b	6d24 <PyThread_free_lock@plt+0x43f4>
    6cb4:	ldr	w0, [sp, #84]
    6cb8:	cmp	w0, #0x0
    6cbc:	b.ne	6cdc <PyThread_free_lock@plt+0x43ac>  // b.any
    6cc0:	ldr	w0, [sp, #80]
    6cc4:	cmp	w0, #0x0
    6cc8:	b.ne	6cdc <PyThread_free_lock@plt+0x43ac>  // b.any
    6ccc:	mov	w0, #0x1                   	// #1
    6cd0:	str	w0, [sp, #84]
    6cd4:	mov	w0, #0x1                   	// #1
    6cd8:	str	w0, [sp, #80]
    6cdc:	ldr	x0, [sp, #88]
    6ce0:	ldr	w1, [sp, #84]
    6ce4:	ldr	w2, [sp, #80]
    6ce8:	mov	w3, w2
    6cec:	mov	w2, w1
    6cf0:	mov	x1, x0
    6cf4:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6cf8:	add	x0, x0, #0x960
    6cfc:	bl	5218 <PyThread_free_lock@plt+0x28e8>
    6d00:	cmp	w0, #0x0
    6d04:	b.eq	6d10 <PyThread_free_lock@plt+0x43e0>  // b.none
    6d08:	mov	x0, #0x0                   	// #0
    6d0c:	b	6d24 <PyThread_free_lock@plt+0x43f4>
    6d10:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6d14:	ldr	x0, [x0, #4048]
    6d18:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6d1c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6d20:	ldr	x0, [x0, #4048]
    6d24:	ldp	x29, x30, [sp, #16]
    6d28:	add	sp, sp, #0x60
    6d2c:	ret
    6d30:	stp	x29, x30, [sp, #-48]!
    6d34:	mov	x29, sp
    6d38:	str	x0, [sp, #40]
    6d3c:	str	x1, [sp, #32]
    6d40:	str	x2, [sp, #24]
    6d44:	ldr	x2, [sp, #24]
    6d48:	ldr	x1, [sp, #32]
    6d4c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6d50:	add	x0, x0, #0x238
    6d54:	bl	54fc <PyThread_free_lock@plt+0x2bcc>
    6d58:	ldp	x29, x30, [sp], #48
    6d5c:	ret

0000000000006d60 <PyInit__xxsubinterpreters@@Base>:
    6d60:	stp	x29, x30, [sp, #-32]!
    6d64:	mov	x29, sp
    6d68:	bl	6228 <PyThread_free_lock@plt+0x38f8>
    6d6c:	cmp	w0, #0x0
    6d70:	b.eq	6d7c <PyInit__xxsubinterpreters@@Base+0x1c>  // b.none
    6d74:	mov	x0, #0x0                   	// #0
    6d78:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6d7c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6d80:	add	x0, x0, #0x238
    6d84:	bl	26c0 <PyType_Ready@plt>
    6d88:	cmp	w0, #0x0
    6d8c:	b.eq	6d98 <PyInit__xxsubinterpreters@@Base+0x38>  // b.none
    6d90:	mov	x0, #0x0                   	// #0
    6d94:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6d98:	mov	w1, #0x3f5                 	// #1013
    6d9c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6da0:	add	x0, x0, #0x7b8
    6da4:	bl	2740 <PyModule_Create2@plt>
    6da8:	str	x0, [sp, #24]
    6dac:	ldr	x0, [sp, #24]
    6db0:	cmp	x0, #0x0
    6db4:	b.ne	6dc0 <PyInit__xxsubinterpreters@@Base+0x60>  // b.any
    6db8:	mov	x0, #0x0                   	// #0
    6dbc:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6dc0:	ldr	x0, [sp, #24]
    6dc4:	bl	28d0 <PyModule_GetDict@plt>
    6dc8:	str	x0, [sp, #16]
    6dcc:	ldr	x0, [sp, #16]
    6dd0:	bl	5dc0 <PyThread_free_lock@plt+0x3490>
    6dd4:	cmp	w0, #0x0
    6dd8:	b.eq	6de4 <PyInit__xxsubinterpreters@@Base+0x84>  // b.none
    6ddc:	mov	x0, #0x0                   	// #0
    6de0:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6de4:	ldr	x0, [sp, #16]
    6de8:	bl	337c <PyThread_free_lock@plt+0xa4c>
    6dec:	cmp	w0, #0x0
    6df0:	b.eq	6dfc <PyInit__xxsubinterpreters@@Base+0x9c>  // b.none
    6df4:	mov	x0, #0x0                   	// #0
    6df8:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6dfc:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6e00:	add	x0, x0, #0x238
    6e04:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6e08:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6e0c:	add	x2, x0, #0x238
    6e10:	adrp	x0, 8000 <PyInit__xxsubinterpreters@@Base+0x12a0>
    6e14:	add	x1, x0, #0x140
    6e18:	ldr	x0, [sp, #16]
    6e1c:	bl	2510 <PyDict_SetItemString@plt>
    6e20:	cmp	w0, #0x0
    6e24:	b.eq	6e30 <PyInit__xxsubinterpreters@@Base+0xd0>  // b.none
    6e28:	mov	x0, #0x0                   	// #0
    6e2c:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6e30:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6e34:	ldr	x0, [x0, #3984]
    6e38:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    6e3c:	adrp	x0, 19000 <PyInit__xxsubinterpreters@@Base+0x122a0>
    6e40:	ldr	x2, [x0, #3984]
    6e44:	adrp	x0, 8000 <PyInit__xxsubinterpreters@@Base+0x12a0>
    6e48:	add	x1, x0, #0x150
    6e4c:	ldr	x0, [sp, #16]
    6e50:	bl	2510 <PyDict_SetItemString@plt>
    6e54:	cmp	w0, #0x0
    6e58:	b.eq	6e64 <PyInit__xxsubinterpreters@@Base+0x104>  // b.none
    6e5c:	mov	x0, #0x0                   	// #0
    6e60:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6e64:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    6e68:	add	x1, x0, #0xc58
    6e6c:	adrp	x0, 1a000 <PyInit__xxsubinterpreters@@Base+0x132a0>
    6e70:	add	x0, x0, #0x238
    6e74:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    6e78:	cmp	w0, #0x0
    6e7c:	b.eq	6e88 <PyInit__xxsubinterpreters@@Base+0x128>  // b.none
    6e80:	mov	x0, #0x0                   	// #0
    6e84:	b	6e8c <PyInit__xxsubinterpreters@@Base+0x12c>
    6e88:	ldr	x0, [sp, #24]
    6e8c:	ldp	x29, x30, [sp], #32
    6e90:	ret

Disassembly of section .fini:

0000000000006e94 <.fini>:
    6e94:	stp	x29, x30, [sp, #-16]!
    6e98:	mov	x29, sp
    6e9c:	ldp	x29, x30, [sp], #16
    6ea0:	ret
