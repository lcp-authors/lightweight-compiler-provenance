
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pathchk_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000980 <_init>:
 980:	stp	x29, x30, [sp, #-16]!
 984:	mov	x29, sp
 988:	bl	ac0 <call_weak_fn>
 98c:	ldp	x29, x30, [sp], #16
 990:	ret

Disassembly of section .plt:

00000000000009a0 <.plt>:
 9a0:	stp	x16, x30, [sp, #-16]!
 9a4:	adrp	x16, 11000 <__FRAME_END__+0xfcf4>
 9a8:	ldr	x17, [x16, #4088]
 9ac:	add	x16, x16, #0xff8
 9b0:	br	x17
 9b4:	nop
 9b8:	nop
 9bc:	nop

00000000000009c0 <strlen@plt>:
 9c0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16]
 9c8:	add	x16, x16, #0x0
 9cc:	br	x17

00000000000009d0 <builtin_error@plt>:
 9d0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9d4:	ldr	x17, [x16, #8]
 9d8:	add	x16, x16, #0x8
 9dc:	br	x17

00000000000009e0 <__cxa_finalize@plt>:
 9e0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9e4:	ldr	x17, [x16, #16]
 9e8:	add	x16, x16, #0x10
 9ec:	br	x17

00000000000009f0 <builtin_help@plt>:
 9f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9f4:	ldr	x17, [x16, #24]
 9f8:	add	x16, x16, #0x18
 9fc:	br	x17

0000000000000a00 <xmalloc@plt>:
 a00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a04:	ldr	x17, [x16, #32]
 a08:	add	x16, x16, #0x20
 a0c:	br	x17

0000000000000a10 <builtin_usage@plt>:
 a10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a14:	ldr	x17, [x16, #40]
 a18:	add	x16, x16, #0x28
 a1c:	br	x17

0000000000000a20 <strerror@plt>:
 a20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a24:	ldr	x17, [x16, #48]
 a28:	add	x16, x16, #0x30
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a34:	ldr	x17, [x16, #56]
 a38:	add	x16, x16, #0x38
 a3c:	br	x17

0000000000000a40 <access@plt>:
 a40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a44:	ldr	x17, [x16, #64]
 a48:	add	x16, x16, #0x40
 a4c:	br	x17

0000000000000a50 <free@plt>:
 a50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a54:	ldr	x17, [x16, #72]
 a58:	add	x16, x16, #0x48
 a5c:	br	x17

0000000000000a60 <internal_getopt@plt>:
 a60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a64:	ldr	x17, [x16, #80]
 a68:	add	x16, x16, #0x50
 a6c:	br	x17

0000000000000a70 <reset_internal_getopt@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16, #88]
 a78:	add	x16, x16, #0x58
 a7c:	br	x17

0000000000000a80 <strchr@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #96]
 a88:	add	x16, x16, #0x60
 a8c:	br	x17

0000000000000a90 <strcpy@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #104]
 a98:	add	x16, x16, #0x68
 a9c:	br	x17

0000000000000aa0 <__errno_location@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #112]
 aa8:	add	x16, x16, #0x70
 aac:	br	x17

0000000000000ab0 <__xstat@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #120]
 ab8:	add	x16, x16, #0x78
 abc:	br	x17

Disassembly of section .text:

0000000000000ac0 <call_weak_fn>:
 ac0:	adrp	x0, 11000 <__FRAME_END__+0xfcf4>
 ac4:	ldr	x0, [x0, #4048]
 ac8:	cbz	x0, ad0 <call_weak_fn+0x10>
 acc:	b	a30 <__gmon_start__@plt>
 ad0:	ret
 ad4:	nop

0000000000000ad8 <deregister_tm_clones>:
 ad8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 adc:	add	x0, x0, #0xf0
 ae0:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 ae4:	add	x1, x1, #0xf0
 ae8:	cmp	x1, x0
 aec:	b.eq	b04 <deregister_tm_clones+0x2c>  // b.none
 af0:	adrp	x1, 11000 <__FRAME_END__+0xfcf4>
 af4:	ldr	x1, [x1, #4032]
 af8:	cbz	x1, b04 <deregister_tm_clones+0x2c>
 afc:	mov	x16, x1
 b00:	br	x16
 b04:	ret

0000000000000b08 <register_tm_clones>:
 b08:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b0c:	add	x0, x0, #0xf0
 b10:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 b14:	add	x1, x1, #0xf0
 b18:	sub	x1, x1, x0
 b1c:	lsr	x2, x1, #63
 b20:	add	x1, x2, x1, asr #3
 b24:	cmp	xzr, x1, asr #1
 b28:	asr	x1, x1, #1
 b2c:	b.eq	b44 <register_tm_clones+0x3c>  // b.none
 b30:	adrp	x2, 11000 <__FRAME_END__+0xfcf4>
 b34:	ldr	x2, [x2, #4064]
 b38:	cbz	x2, b44 <register_tm_clones+0x3c>
 b3c:	mov	x16, x2
 b40:	br	x16
 b44:	ret

0000000000000b48 <__do_global_dtors_aux>:
 b48:	stp	x29, x30, [sp, #-32]!
 b4c:	mov	x29, sp
 b50:	str	x19, [sp, #16]
 b54:	adrp	x19, 12000 <strlen@GLIBC_2.17>
 b58:	ldrb	w0, [x19, #240]
 b5c:	cbnz	w0, b84 <__do_global_dtors_aux+0x3c>
 b60:	adrp	x0, 11000 <__FRAME_END__+0xfcf4>
 b64:	ldr	x0, [x0, #4040]
 b68:	cbz	x0, b78 <__do_global_dtors_aux+0x30>
 b6c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b70:	ldr	x0, [x0, #128]
 b74:	bl	9e0 <__cxa_finalize@plt>
 b78:	bl	ad8 <deregister_tm_clones>
 b7c:	mov	w0, #0x1                   	// #1
 b80:	strb	w0, [x19, #240]
 b84:	ldr	x19, [sp, #16]
 b88:	ldp	x29, x30, [sp], #32
 b8c:	ret

0000000000000b90 <frame_dummy>:
 b90:	b	b08 <register_tm_clones>
 b94:	nop

0000000000000b98 <xstrdup>:
 b98:	stp	x29, x30, [sp, #-32]!
 b9c:	mov	x29, sp
 ba0:	str	x19, [sp, #16]
 ba4:	mov	x19, x0
 ba8:	bl	9c0 <strlen@plt>
 bac:	add	x0, x0, #0x1
 bb0:	bl	a00 <xmalloc@plt>
 bb4:	mov	x1, x19
 bb8:	ldr	x19, [sp, #16]
 bbc:	ldp	x29, x30, [sp], #32
 bc0:	b	a90 <strcpy@plt>
 bc4:	nop

0000000000000bc8 <pathchk_builtin>:
 bc8:	stp	x29, x30, [sp, #-224]!
 bcc:	mov	x29, sp
 bd0:	stp	x19, x20, [sp, #16]
 bd4:	adrp	x19, 0 <_init-0x980>
 bd8:	add	x19, x19, #0xe98
 bdc:	mov	x20, x0
 be0:	stp	x23, x24, [sp, #48]
 be4:	bl	a70 <reset_internal_getopt@plt>
 be8:	mov	x1, x19
 bec:	mov	x0, x20
 bf0:	bl	a60 <internal_getopt@plt>
 bf4:	cmn	w0, #0x1
 bf8:	b.eq	c44 <pathchk_builtin+0x7c>  // b.none
 bfc:	cmn	w0, #0x63
 c00:	b.eq	c28 <pathchk_builtin+0x60>  // b.none
 c04:	cmp	w0, #0x70
 c08:	b.eq	be8 <pathchk_builtin+0x20>  // b.none
 c0c:	mov	w23, #0x102                 	// #258
 c10:	bl	a10 <builtin_usage@plt>
 c14:	mov	w0, w23
 c18:	ldp	x19, x20, [sp, #16]
 c1c:	ldp	x23, x24, [sp, #48]
 c20:	ldp	x29, x30, [sp], #224
 c24:	ret
 c28:	bl	9f0 <builtin_help@plt>
 c2c:	mov	w23, #0x102                 	// #258
 c30:	mov	w0, w23
 c34:	ldp	x19, x20, [sp, #16]
 c38:	ldp	x23, x24, [sp, #48]
 c3c:	ldp	x29, x30, [sp], #224
 c40:	ret
 c44:	adrp	x0, 11000 <__FRAME_END__+0xfcf4>
 c48:	mov	w23, #0x0                   	// #0
 c4c:	ldr	x0, [x0, #4056]
 c50:	ldr	x24, [x0]
 c54:	cbz	x24, c0c <pathchk_builtin+0x44>
 c58:	stp	x25, x26, [sp, #64]
 c5c:	adrp	x25, 1000 <_fini+0x180>
 c60:	add	x26, sp, #0x60
 c64:	add	x25, x25, #0xd8
 c68:	stp	x21, x22, [sp, #32]
 c6c:	stp	x27, x28, [sp, #80]
 c70:	adrp	x27, 0 <_init-0x980>
 c74:	nop
 c78:	ldr	x0, [x24, #8]
 c7c:	ldr	x21, [x0]
 c80:	ldrb	w3, [x21]
 c84:	cbz	w3, cb8 <pathchk_builtin+0xf0>
 c88:	mov	x0, x21
 c8c:	mov	w2, w3
 c90:	b	c9c <pathchk_builtin+0xd4>
 c94:	ldrb	w2, [x0, #1]!
 c98:	cbz	w2, cd0 <pathchk_builtin+0x108>
 c9c:	ldrb	w1, [x25, w2, sxtw]
 ca0:	cbnz	w1, c94 <pathchk_builtin+0xcc>
 ca4:	adrp	x0, 0 <_init-0x980>
 ca8:	mov	x1, x21
 cac:	add	x0, x0, #0xea0
 cb0:	mov	w23, #0x1                   	// #1
 cb4:	bl	9d0 <builtin_error@plt>
 cb8:	ldr	x24, [x24]
 cbc:	cbnz	x24, c78 <pathchk_builtin+0xb0>
 cc0:	ldp	x21, x22, [sp, #32]
 cc4:	ldp	x25, x26, [sp, #64]
 cc8:	ldp	x27, x28, [sp, #80]
 ccc:	b	c14 <pathchk_builtin+0x4c>
 cd0:	cmp	w3, #0x2f
 cd4:	adrp	x1, 0 <_init-0x980>
 cd8:	add	x1, x1, #0xe90
 cdc:	add	x0, x27, #0xf98
 ce0:	csel	x0, x1, x0, eq  // eq = none
 ce4:	mov	x19, x21
 ce8:	mov	w28, #0x2f                  	// #47
 cec:	bl	b98 <xstrdup>
 cf0:	mov	x22, x0
 cf4:	nop
 cf8:	ldrb	w0, [x19]
 cfc:	cmp	w0, #0x2f
 d00:	b.eq	d7c <pathchk_builtin+0x1b4>  // b.none
 d04:	mov	x0, x19
 d08:	mov	w1, #0x2f                  	// #47
 d0c:	bl	a80 <strchr@plt>
 d10:	mov	x20, x0
 d14:	cbz	x0, d84 <pathchk_builtin+0x1bc>
 d18:	strb	wzr, [x0]
 d1c:	b	d30 <pathchk_builtin+0x168>
 d20:	bl	aa0 <__errno_location@plt>
 d24:	ldr	w0, [x0]
 d28:	cmp	w0, #0x4
 d2c:	b.ne	e08 <pathchk_builtin+0x240>  // b.any
 d30:	mov	x2, x26
 d34:	mov	x1, x21
 d38:	mov	w0, #0x0                   	// #0
 d3c:	bl	ab0 <__xstat@plt>
 d40:	cmp	w0, #0x0
 d44:	b.lt	d20 <pathchk_builtin+0x158>  // b.tstop
 d48:	b.ne	e08 <pathchk_builtin+0x240>  // b.any
 d4c:	ldr	w0, [sp, #112]
 d50:	and	w0, w0, #0xf000
 d54:	cmp	w0, #0x4, lsl #12
 d58:	b.eq	dcc <pathchk_builtin+0x204>  // b.none
 d5c:	adrp	x0, 0 <_init-0x980>
 d60:	mov	x1, x21
 d64:	add	x0, x0, #0xed0
 d68:	bl	9d0 <builtin_error@plt>
 d6c:	mov	x0, x22
 d70:	mov	w23, #0x1                   	// #1
 d74:	bl	a50 <free@plt>
 d78:	b	cb8 <pathchk_builtin+0xf0>
 d7c:	add	x19, x19, #0x1
 d80:	b	cf8 <pathchk_builtin+0x130>
 d84:	mov	x0, x19
 d88:	bl	9c0 <strlen@plt>
 d8c:	cmp	w0, #0xe
 d90:	b.gt	e18 <pathchk_builtin+0x250>
 d94:	mov	x0, x22
 d98:	bl	a50 <free@plt>
 d9c:	mov	x0, x21
 da0:	bl	9c0 <strlen@plt>
 da4:	cmp	x0, #0x100
 da8:	b.ls	cb8 <pathchk_builtin+0xf0>  // b.plast
 dac:	mov	x2, x0
 db0:	mov	x1, x21
 db4:	mov	w23, #0x1                   	// #1
 db8:	adrp	x0, 0 <_init-0x980>
 dbc:	mov	w3, #0x100                 	// #256
 dc0:	add	x0, x0, #0xf48
 dc4:	bl	9d0 <builtin_error@plt>
 dc8:	b	cb8 <pathchk_builtin+0xf0>
 dcc:	mov	x0, x21
 dd0:	mov	w1, #0x1                   	// #1
 dd4:	bl	a40 <access@plt>
 dd8:	cbnz	w0, e40 <pathchk_builtin+0x278>
 ddc:	sub	x0, x20, x19
 de0:	cmp	w0, #0xe
 de4:	b.gt	e18 <pathchk_builtin+0x250>
 de8:	mov	x0, x22
 dec:	bl	a50 <free@plt>
 df0:	mov	x0, x21
 df4:	bl	b98 <xstrdup>
 df8:	mov	x22, x0
 dfc:	mov	x19, x20
 e00:	strb	w28, [x19], #1
 e04:	b	cf8 <pathchk_builtin+0x130>
 e08:	sub	x0, x20, x19
 e0c:	cmp	w0, #0xe
 e10:	b.le	dfc <pathchk_builtin+0x234>
 e14:	nop
 e18:	mov	w2, w0
 e1c:	mov	x1, x19
 e20:	mov	w3, #0xe                   	// #14
 e24:	adrp	x0, 0 <_init-0x980>
 e28:	add	x0, x0, #0xf18
 e2c:	bl	9d0 <builtin_error@plt>
 e30:	mov	x0, x22
 e34:	mov	w23, #0x1                   	// #1
 e38:	bl	a50 <free@plt>
 e3c:	b	cb8 <pathchk_builtin+0xf0>
 e40:	bl	aa0 <__errno_location@plt>
 e44:	ldr	w0, [x0]
 e48:	cmp	w0, #0xd
 e4c:	b.eq	e6c <pathchk_builtin+0x2a4>  // b.none
 e50:	bl	a20 <strerror@plt>
 e54:	mov	x2, x0
 e58:	mov	x1, x21
 e5c:	adrp	x0, 0 <_init-0x980>
 e60:	add	x0, x0, #0xf10
 e64:	bl	9d0 <builtin_error@plt>
 e68:	b	d6c <pathchk_builtin+0x1a4>
 e6c:	mov	x1, x21
 e70:	adrp	x0, 0 <_init-0x980>
 e74:	add	x0, x0, #0xee8
 e78:	bl	9d0 <builtin_error@plt>
 e7c:	b	d6c <pathchk_builtin+0x1a4>

Disassembly of section .fini:

0000000000000e80 <_fini>:
 e80:	stp	x29, x30, [sp, #-16]!
 e84:	mov	x29, sp
 e88:	ldp	x29, x30, [sp], #16
 e8c:	ret
