
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004066d8 <.init>:
  4066d8:	stp	x29, x30, [sp, #-16]!
  4066dc:	mov	x29, sp
  4066e0:	bl	406f60 <_start@@Base+0x50>
  4066e4:	ldp	x29, x30, [sp], #16
  4066e8:	ret

Disassembly of section .plt:

00000000004066f0 <memcpy@plt-0x20>:
  4066f0:	stp	x16, x30, [sp, #-16]!
  4066f4:	adrp	x16, 43d000 <_IO_stdin_used@@Base+0x15680>
  4066f8:	ldr	x17, [x16, #4088]
  4066fc:	add	x16, x16, #0xff8
  406700:	br	x17
  406704:	nop
  406708:	nop
  40670c:	nop

0000000000406710 <memcpy@plt>:
  406710:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406714:	ldr	x17, [x16]
  406718:	add	x16, x16, #0x0
  40671c:	br	x17

0000000000406720 <memmove@plt>:
  406720:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406724:	ldr	x17, [x16, #8]
  406728:	add	x16, x16, #0x8
  40672c:	br	x17

0000000000406730 <_exit@plt>:
  406730:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406734:	ldr	x17, [x16, #16]
  406738:	add	x16, x16, #0x10
  40673c:	br	x17

0000000000406740 <getcwd@plt>:
  406740:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406744:	ldr	x17, [x16, #24]
  406748:	add	x16, x16, #0x18
  40674c:	br	x17

0000000000406750 <strlen@plt>:
  406750:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16, #32]
  406758:	add	x16, x16, #0x20
  40675c:	br	x17

0000000000406760 <fputs@plt>:
  406760:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #40]
  406768:	add	x16, x16, #0x28
  40676c:	br	x17

0000000000406770 <exit@plt>:
  406770:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #48]
  406778:	add	x16, x16, #0x30
  40677c:	br	x17

0000000000406780 <dup@plt>:
  406780:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #56]
  406788:	add	x16, x16, #0x38
  40678c:	br	x17

0000000000406790 <perror@plt>:
  406790:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #64]
  406798:	add	x16, x16, #0x40
  40679c:	br	x17

00000000004067a0 <tmpfile@plt>:
  4067a0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #72]
  4067a8:	add	x16, x16, #0x48
  4067ac:	br	x17

00000000004067b0 <sigprocmask@plt>:
  4067b0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #80]
  4067b8:	add	x16, x16, #0x50
  4067bc:	br	x17

00000000004067c0 <strtod@plt>:
  4067c0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #88]
  4067c8:	add	x16, x16, #0x58
  4067cc:	br	x17

00000000004067d0 <remove@plt>:
  4067d0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #96]
  4067d8:	add	x16, x16, #0x60
  4067dc:	br	x17

00000000004067e0 <ttyname@plt>:
  4067e0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #104]
  4067e8:	add	x16, x16, #0x68
  4067ec:	br	x17

00000000004067f0 <readlink@plt>:
  4067f0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #112]
  4067f8:	add	x16, x16, #0x70
  4067fc:	br	x17

0000000000406800 <sprintf@plt>:
  406800:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #120]
  406808:	add	x16, x16, #0x78
  40680c:	br	x17

0000000000406810 <putc@plt>:
  406810:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #128]
  406818:	add	x16, x16, #0x80
  40681c:	br	x17

0000000000406820 <pipe@plt>:
  406820:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #136]
  406828:	add	x16, x16, #0x88
  40682c:	br	x17

0000000000406830 <opendir@plt>:
  406830:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #144]
  406838:	add	x16, x16, #0x90
  40683c:	br	x17

0000000000406840 <getloadavg@plt>:
  406840:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #152]
  406848:	add	x16, x16, #0x98
  40684c:	br	x17

0000000000406850 <__cxa_atexit@plt>:
  406850:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #160]
  406858:	add	x16, x16, #0xa0
  40685c:	br	x17

0000000000406860 <clock_gettime@plt>:
  406860:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #168]
  406868:	add	x16, x16, #0xa8
  40686c:	br	x17

0000000000406870 <qsort@plt>:
  406870:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #176]
  406878:	add	x16, x16, #0xb0
  40687c:	br	x17

0000000000406880 <dlclose@plt>:
  406880:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #184]
  406888:	add	x16, x16, #0xb8
  40688c:	br	x17

0000000000406890 <ctime@plt>:
  406890:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #192]
  406898:	add	x16, x16, #0xc0
  40689c:	br	x17

00000000004068a0 <kill@plt>:
  4068a0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #200]
  4068a8:	add	x16, x16, #0xc8
  4068ac:	br	x17

00000000004068b0 <setvbuf@plt>:
  4068b0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #208]
  4068b8:	add	x16, x16, #0xd0
  4068bc:	br	x17

00000000004068c0 <lseek@plt>:
  4068c0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #216]
  4068c8:	add	x16, x16, #0xd8
  4068cc:	br	x17

00000000004068d0 <eaccess@plt>:
  4068d0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #224]
  4068d8:	add	x16, x16, #0xe0
  4068dc:	br	x17

00000000004068e0 <dlopen@plt>:
  4068e0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #232]
  4068e8:	add	x16, x16, #0xe8
  4068ec:	br	x17

00000000004068f0 <__ctype_tolower_loc@plt>:
  4068f0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #240]
  4068f8:	add	x16, x16, #0xf0
  4068fc:	br	x17

0000000000406900 <stpcpy@plt>:
  406900:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #248]
  406908:	add	x16, x16, #0xf8
  40690c:	br	x17

0000000000406910 <fileno@plt>:
  406910:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #256]
  406918:	add	x16, x16, #0x100
  40691c:	br	x17

0000000000406920 <localtime@plt>:
  406920:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #264]
  406928:	add	x16, x16, #0x108
  40692c:	br	x17

0000000000406930 <posix_spawn_file_actions_adddup2@plt>:
  406930:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #272]
  406938:	add	x16, x16, #0x110
  40693c:	br	x17

0000000000406940 <signal@plt>:
  406940:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #280]
  406948:	add	x16, x16, #0x118
  40694c:	br	x17

0000000000406950 <fclose@plt>:
  406950:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #288]
  406958:	add	x16, x16, #0x120
  40695c:	br	x17

0000000000406960 <getpid@plt>:
  406960:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #296]
  406968:	add	x16, x16, #0x128
  40696c:	br	x17

0000000000406970 <fopen@plt>:
  406970:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #304]
  406978:	add	x16, x16, #0x130
  40697c:	br	x17

0000000000406980 <time@plt>:
  406980:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #312]
  406988:	add	x16, x16, #0x138
  40698c:	br	x17

0000000000406990 <malloc@plt>:
  406990:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #320]
  406998:	add	x16, x16, #0x140
  40699c:	br	x17

00000000004069a0 <dlerror@plt>:
  4069a0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #328]
  4069a8:	add	x16, x16, #0x148
  4069ac:	br	x17

00000000004069b0 <dlsym@plt>:
  4069b0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #336]
  4069b8:	add	x16, x16, #0x150
  4069bc:	br	x17

00000000004069c0 <open@plt>:
  4069c0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #344]
  4069c8:	add	x16, x16, #0x158
  4069cc:	br	x17

00000000004069d0 <sigemptyset@plt>:
  4069d0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #352]
  4069d8:	add	x16, x16, #0x160
  4069dc:	br	x17

00000000004069e0 <posix_spawnattr_destroy@plt>:
  4069e0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #360]
  4069e8:	add	x16, x16, #0x168
  4069ec:	br	x17

00000000004069f0 <strncmp@plt>:
  4069f0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #368]
  4069f8:	add	x16, x16, #0x170
  4069fc:	br	x17

0000000000406a00 <bindtextdomain@plt>:
  406a00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #376]
  406a08:	add	x16, x16, #0x178
  406a0c:	br	x17

0000000000406a10 <__libc_start_main@plt>:
  406a10:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #384]
  406a18:	add	x16, x16, #0x180
  406a1c:	br	x17

0000000000406a20 <strcat@plt>:
  406a20:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #392]
  406a28:	add	x16, x16, #0x188
  406a2c:	br	x17

0000000000406a30 <memset@plt>:
  406a30:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #400]
  406a38:	add	x16, x16, #0x190
  406a3c:	br	x17

0000000000406a40 <fdopen@plt>:
  406a40:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #408]
  406a48:	add	x16, x16, #0x198
  406a4c:	br	x17

0000000000406a50 <strpbrk@plt>:
  406a50:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #416]
  406a58:	add	x16, x16, #0x1a0
  406a5c:	br	x17

0000000000406a60 <gettimeofday@plt>:
  406a60:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #424]
  406a68:	add	x16, x16, #0x1a8
  406a6c:	br	x17

0000000000406a70 <getpwnam@plt>:
  406a70:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #432]
  406a78:	add	x16, x16, #0x1b0
  406a7c:	br	x17

0000000000406a80 <pselect@plt>:
  406a80:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #440]
  406a88:	add	x16, x16, #0x1b8
  406a8c:	br	x17

0000000000406a90 <calloc@plt>:
  406a90:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #448]
  406a98:	add	x16, x16, #0x1c0
  406a9c:	br	x17

0000000000406aa0 <posix_spawn_file_actions_destroy@plt>:
  406aa0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #456]
  406aa8:	add	x16, x16, #0x1c8
  406aac:	br	x17

0000000000406ab0 <readdir@plt>:
  406ab0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #464]
  406ab8:	add	x16, x16, #0x1d0
  406abc:	br	x17

0000000000406ac0 <realloc@plt>:
  406ac0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #472]
  406ac8:	add	x16, x16, #0x1d8
  406acc:	br	x17

0000000000406ad0 <putenv@plt>:
  406ad0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #480]
  406ad8:	add	x16, x16, #0x1e0
  406adc:	br	x17

0000000000406ae0 <strdup@plt>:
  406ae0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #488]
  406ae8:	add	x16, x16, #0x1e8
  406aec:	br	x17

0000000000406af0 <closedir@plt>:
  406af0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #496]
  406af8:	add	x16, x16, #0x1f0
  406afc:	br	x17

0000000000406b00 <strerror@plt>:
  406b00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #504]
  406b08:	add	x16, x16, #0x1f8
  406b0c:	br	x17

0000000000406b10 <close@plt>:
  406b10:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #512]
  406b18:	add	x16, x16, #0x200
  406b1c:	br	x17

0000000000406b20 <sigaction@plt>:
  406b20:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #520]
  406b28:	add	x16, x16, #0x208
  406b2c:	br	x17

0000000000406b30 <strrchr@plt>:
  406b30:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #528]
  406b38:	add	x16, x16, #0x210
  406b3c:	br	x17

0000000000406b40 <__gmon_start__@plt>:
  406b40:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #536]
  406b48:	add	x16, x16, #0x218
  406b4c:	br	x17

0000000000406b50 <write@plt>:
  406b50:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #544]
  406b58:	add	x16, x16, #0x220
  406b5c:	br	x17

0000000000406b60 <posix_spawnattr_setflags@plt>:
  406b60:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #552]
  406b68:	add	x16, x16, #0x228
  406b6c:	br	x17

0000000000406b70 <abort@plt>:
  406b70:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #560]
  406b78:	add	x16, x16, #0x230
  406b7c:	br	x17

0000000000406b80 <posix_spawnattr_setsigmask@plt>:
  406b80:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #568]
  406b88:	add	x16, x16, #0x238
  406b8c:	br	x17

0000000000406b90 <feof@plt>:
  406b90:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #576]
  406b98:	add	x16, x16, #0x240
  406b9c:	br	x17

0000000000406ba0 <puts@plt>:
  406ba0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #584]
  406ba8:	add	x16, x16, #0x248
  406bac:	br	x17

0000000000406bb0 <posix_spawn_file_actions_init@plt>:
  406bb0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #592]
  406bb8:	add	x16, x16, #0x250
  406bbc:	br	x17

0000000000406bc0 <fread_unlocked@plt>:
  406bc0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #600]
  406bc8:	add	x16, x16, #0x258
  406bcc:	br	x17

0000000000406bd0 <memcmp@plt>:
  406bd0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #608]
  406bd8:	add	x16, x16, #0x260
  406bdc:	br	x17

0000000000406be0 <textdomain@plt>:
  406be0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #616]
  406be8:	add	x16, x16, #0x268
  406bec:	br	x17

0000000000406bf0 <getopt_long@plt>:
  406bf0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #624]
  406bf8:	add	x16, x16, #0x270
  406bfc:	br	x17

0000000000406c00 <execvp@plt>:
  406c00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #632]
  406c08:	add	x16, x16, #0x278
  406c0c:	br	x17

0000000000406c10 <strcmp@plt>:
  406c10:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #640]
  406c18:	add	x16, x16, #0x280
  406c1c:	br	x17

0000000000406c20 <__ctype_b_loc@plt>:
  406c20:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #648]
  406c28:	add	x16, x16, #0x288
  406c2c:	br	x17

0000000000406c30 <strtol@plt>:
  406c30:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #656]
  406c38:	add	x16, x16, #0x290
  406c3c:	br	x17

0000000000406c40 <fread@plt>:
  406c40:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #664]
  406c48:	add	x16, x16, #0x298
  406c4c:	br	x17

0000000000406c50 <chdir@plt>:
  406c50:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #672]
  406c58:	add	x16, x16, #0x2a0
  406c5c:	br	x17

0000000000406c60 <free@plt>:
  406c60:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #680]
  406c68:	add	x16, x16, #0x2a8
  406c6c:	br	x17

0000000000406c70 <strndup@plt>:
  406c70:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #688]
  406c78:	add	x16, x16, #0x2b0
  406c7c:	br	x17

0000000000406c80 <strchr@plt>:
  406c80:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #696]
  406c88:	add	x16, x16, #0x2b8
  406c8c:	br	x17

0000000000406c90 <globfree@plt>:
  406c90:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #704]
  406c98:	add	x16, x16, #0x2c0
  406c9c:	br	x17

0000000000406ca0 <memrchr@plt>:
  406ca0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #712]
  406ca8:	add	x16, x16, #0x2c8
  406cac:	br	x17

0000000000406cb0 <fwrite@plt>:
  406cb0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #720]
  406cb8:	add	x16, x16, #0x2d0
  406cbc:	br	x17

0000000000406cc0 <fnmatch@plt>:
  406cc0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #728]
  406cc8:	add	x16, x16, #0x2d8
  406ccc:	br	x17

0000000000406cd0 <fcntl@plt>:
  406cd0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #736]
  406cd8:	add	x16, x16, #0x2e0
  406cdc:	br	x17

0000000000406ce0 <wait@plt>:
  406ce0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #744]
  406ce8:	add	x16, x16, #0x2e8
  406cec:	br	x17

0000000000406cf0 <fflush@plt>:
  406cf0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #752]
  406cf8:	add	x16, x16, #0x2f0
  406cfc:	br	x17

0000000000406d00 <strcpy@plt>:
  406d00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #760]
  406d08:	add	x16, x16, #0x2f8
  406d0c:	br	x17

0000000000406d10 <posix_spawn@plt>:
  406d10:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #768]
  406d18:	add	x16, x16, #0x300
  406d1c:	br	x17

0000000000406d20 <vsprintf@plt>:
  406d20:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #776]
  406d28:	add	x16, x16, #0x308
  406d2c:	br	x17

0000000000406d30 <__lxstat@plt>:
  406d30:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #784]
  406d38:	add	x16, x16, #0x310
  406d3c:	br	x17

0000000000406d40 <posix_spawnattr_init@plt>:
  406d40:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #792]
  406d48:	add	x16, x16, #0x318
  406d4c:	br	x17

0000000000406d50 <read@plt>:
  406d50:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #800]
  406d58:	add	x16, x16, #0x320
  406d5c:	br	x17

0000000000406d60 <memchr@plt>:
  406d60:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #808]
  406d68:	add	x16, x16, #0x328
  406d6c:	br	x17

0000000000406d70 <mkstemp@plt>:
  406d70:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #816]
  406d78:	add	x16, x16, #0x330
  406d7c:	br	x17

0000000000406d80 <isatty@plt>:
  406d80:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #824]
  406d88:	add	x16, x16, #0x338
  406d8c:	br	x17

0000000000406d90 <fputc_unlocked@plt>:
  406d90:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #832]
  406d98:	add	x16, x16, #0x340
  406d9c:	br	x17

0000000000406da0 <__fxstat@plt>:
  406da0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #840]
  406da8:	add	x16, x16, #0x348
  406dac:	br	x17

0000000000406db0 <strstr@plt>:
  406db0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #848]
  406db8:	add	x16, x16, #0x350
  406dbc:	br	x17

0000000000406dc0 <dcgettext@plt>:
  406dc0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #856]
  406dc8:	add	x16, x16, #0x358
  406dcc:	br	x17

0000000000406dd0 <realpath@plt>:
  406dd0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #864]
  406dd8:	add	x16, x16, #0x360
  406ddc:	br	x17

0000000000406de0 <__isoc99_sscanf@plt>:
  406de0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #872]
  406de8:	add	x16, x16, #0x368
  406dec:	br	x17

0000000000406df0 <fputs_unlocked@plt>:
  406df0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #880]
  406df8:	add	x16, x16, #0x370
  406dfc:	br	x17

0000000000406e00 <glob@plt>:
  406e00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #888]
  406e08:	add	x16, x16, #0x378
  406e0c:	br	x17

0000000000406e10 <ftruncate@plt>:
  406e10:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e14:	ldr	x17, [x16, #896]
  406e18:	add	x16, x16, #0x380
  406e1c:	br	x17

0000000000406e20 <strncpy@plt>:
  406e20:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e24:	ldr	x17, [x16, #904]
  406e28:	add	x16, x16, #0x388
  406e2c:	br	x17

0000000000406e30 <strsignal@plt>:
  406e30:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e34:	ldr	x17, [x16, #912]
  406e38:	add	x16, x16, #0x390
  406e3c:	br	x17

0000000000406e40 <sigaddset@plt>:
  406e40:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e44:	ldr	x17, [x16, #920]
  406e48:	add	x16, x16, #0x398
  406e4c:	br	x17

0000000000406e50 <umask@plt>:
  406e50:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e54:	ldr	x17, [x16, #928]
  406e58:	add	x16, x16, #0x3a0
  406e5c:	br	x17

0000000000406e60 <printf@plt>:
  406e60:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e64:	ldr	x17, [x16, #936]
  406e68:	add	x16, x16, #0x3a8
  406e6c:	br	x17

0000000000406e70 <__errno_location@plt>:
  406e70:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e74:	ldr	x17, [x16, #944]
  406e78:	add	x16, x16, #0x3b0
  406e7c:	br	x17

0000000000406e80 <getenv@plt>:
  406e80:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e84:	ldr	x17, [x16, #952]
  406e88:	add	x16, x16, #0x3b8
  406e8c:	br	x17

0000000000406e90 <__xstat@plt>:
  406e90:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406e94:	ldr	x17, [x16, #960]
  406e98:	add	x16, x16, #0x3c0
  406e9c:	br	x17

0000000000406ea0 <waitpid@plt>:
  406ea0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ea4:	ldr	x17, [x16, #968]
  406ea8:	add	x16, x16, #0x3c8
  406eac:	br	x17

0000000000406eb0 <unlink@plt>:
  406eb0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406eb4:	ldr	x17, [x16, #976]
  406eb8:	add	x16, x16, #0x3d0
  406ebc:	br	x17

0000000000406ec0 <getlogin@plt>:
  406ec0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ec4:	ldr	x17, [x16, #984]
  406ec8:	add	x16, x16, #0x3d8
  406ecc:	br	x17

0000000000406ed0 <fprintf@plt>:
  406ed0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ed4:	ldr	x17, [x16, #992]
  406ed8:	add	x16, x16, #0x3e0
  406edc:	br	x17

0000000000406ee0 <fgets@plt>:
  406ee0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ee4:	ldr	x17, [x16, #1000]
  406ee8:	add	x16, x16, #0x3e8
  406eec:	br	x17

0000000000406ef0 <setlocale@plt>:
  406ef0:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406ef4:	ldr	x17, [x16, #1008]
  406ef8:	add	x16, x16, #0x3f0
  406efc:	br	x17

0000000000406f00 <ferror@plt>:
  406f00:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  406f04:	ldr	x17, [x16, #1016]
  406f08:	add	x16, x16, #0x3f8
  406f0c:	br	x17

Disassembly of section .text:

0000000000406f10 <_start@@Base>:
  406f10:	mov	x29, #0x0                   	// #0
  406f14:	mov	x30, #0x0                   	// #0
  406f18:	mov	x5, x0
  406f1c:	ldr	x1, [sp]
  406f20:	add	x2, sp, #0x8
  406f24:	mov	x6, sp
  406f28:	movz	x0, #0x0, lsl #48
  406f2c:	movk	x0, #0x0, lsl #32
  406f30:	movk	x0, #0x41, lsl #16
  406f34:	movk	x0, #0x5eec
  406f38:	movz	x3, #0x0, lsl #48
  406f3c:	movk	x3, #0x0, lsl #32
  406f40:	movk	x3, #0x42, lsl #16
  406f44:	movk	x3, #0x78b0
  406f48:	movz	x4, #0x0, lsl #48
  406f4c:	movk	x4, #0x0, lsl #32
  406f50:	movk	x4, #0x42, lsl #16
  406f54:	movk	x4, #0x7930
  406f58:	bl	406a10 <__libc_start_main@plt>
  406f5c:	bl	406b70 <abort@plt>
  406f60:	adrp	x0, 43d000 <_IO_stdin_used@@Base+0x15680>
  406f64:	ldr	x0, [x0, #4064]
  406f68:	cbz	x0, 406f70 <_start@@Base+0x60>
  406f6c:	b	406b40 <__gmon_start__@plt>
  406f70:	ret
  406f74:	nop
  406f78:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  406f7c:	add	x0, x0, #0x9b0
  406f80:	adrp	x1, 43e000 <memcpy@GLIBC_2.17>
  406f84:	add	x1, x1, #0x9b0
  406f88:	cmp	x1, x0
  406f8c:	b.eq	406fa4 <_start@@Base+0x94>  // b.none
  406f90:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  406f94:	ldr	x1, [x1, #2440]
  406f98:	cbz	x1, 406fa4 <_start@@Base+0x94>
  406f9c:	mov	x16, x1
  406fa0:	br	x16
  406fa4:	ret
  406fa8:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  406fac:	add	x0, x0, #0x9b0
  406fb0:	adrp	x1, 43e000 <memcpy@GLIBC_2.17>
  406fb4:	add	x1, x1, #0x9b0
  406fb8:	sub	x1, x1, x0
  406fbc:	lsr	x2, x1, #63
  406fc0:	add	x1, x2, x1, asr #3
  406fc4:	cmp	xzr, x1, asr #1
  406fc8:	asr	x1, x1, #1
  406fcc:	b.eq	406fe4 <_start@@Base+0xd4>  // b.none
  406fd0:	adrp	x2, 427000 <jobserver_post_child@@Base+0xcc>
  406fd4:	ldr	x2, [x2, #2448]
  406fd8:	cbz	x2, 406fe4 <_start@@Base+0xd4>
  406fdc:	mov	x16, x2
  406fe0:	br	x16
  406fe4:	ret
  406fe8:	stp	x29, x30, [sp, #-32]!
  406fec:	mov	x29, sp
  406ff0:	str	x19, [sp, #16]
  406ff4:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  406ff8:	ldrb	w0, [x19, #2532]
  406ffc:	cbnz	w0, 40700c <_start@@Base+0xfc>
  407000:	bl	406f78 <_start@@Base+0x68>
  407004:	mov	w0, #0x1                   	// #1
  407008:	strb	w0, [x19, #2532]
  40700c:	ldr	x19, [sp, #16]
  407010:	ldp	x29, x30, [sp], #32
  407014:	ret
  407018:	b	406fa8 <_start@@Base+0x98>

000000000040701c <ar_name@@Base>:
  40701c:	stp	x29, x30, [sp, #-32]!
  407020:	mov	w1, #0x28                  	// #40
  407024:	stp	x20, x19, [sp, #16]
  407028:	mov	x29, sp
  40702c:	mov	x19, x0
  407030:	bl	406c80 <strchr@plt>
  407034:	mov	x20, x0
  407038:	mov	w0, wzr
  40703c:	cbz	x20, 40708c <ar_name@@Base+0x70>
  407040:	cmp	x20, x19
  407044:	b.eq	40708c <ar_name@@Base+0x70>  // b.none
  407048:	mov	x0, x20
  40704c:	bl	406750 <strlen@plt>
  407050:	sub	x9, x0, #0x1
  407054:	add	x8, x20, x9
  407058:	ldrb	w10, [x8]
  40705c:	mov	w0, wzr
  407060:	cmp	w10, #0x29
  407064:	b.ne	40708c <ar_name@@Base+0x70>  // b.any
  407068:	cmp	x9, #0x1
  40706c:	b.eq	40708c <ar_name@@Base+0x70>  // b.none
  407070:	ldrb	w9, [x20, #1]
  407074:	cmp	w9, #0x28
  407078:	b.ne	407088 <ar_name@@Base+0x6c>  // b.any
  40707c:	ldurb	w8, [x8, #-1]
  407080:	cmp	w8, #0x29
  407084:	b.eq	407098 <ar_name@@Base+0x7c>  // b.none
  407088:	mov	w0, #0x1                   	// #1
  40708c:	ldp	x20, x19, [sp, #16]
  407090:	ldp	x29, x30, [sp], #32
  407094:	ret
  407098:	mov	x0, x19
  40709c:	bl	406750 <strlen@plt>
  4070a0:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  4070a4:	mov	x20, x0
  4070a8:	add	x1, x1, #0x9bc
  4070ac:	mov	w2, #0x5                   	// #5
  4070b0:	mov	x0, xzr
  4070b4:	bl	406dc0 <dcgettext@plt>
  4070b8:	mov	x2, x0
  4070bc:	mov	x0, xzr
  4070c0:	mov	x1, x20
  4070c4:	mov	x3, x19
  4070c8:	bl	41aff0 <fatal@@Base>

00000000004070cc <ar_parse_name@@Base>:
  4070cc:	stp	x29, x30, [sp, #-48]!
  4070d0:	str	x21, [sp, #16]
  4070d4:	stp	x20, x19, [sp, #32]
  4070d8:	mov	x29, sp
  4070dc:	mov	x19, x2
  4070e0:	mov	x20, x1
  4070e4:	bl	419e60 <xstrdup@@Base>
  4070e8:	mov	w1, #0x28                  	// #40
  4070ec:	str	x0, [x20]
  4070f0:	bl	406c80 <strchr@plt>
  4070f4:	add	x21, x0, #0x1
  4070f8:	mov	x20, x0
  4070fc:	strb	wzr, [x0]
  407100:	mov	x0, x21
  407104:	bl	406750 <strlen@plt>
  407108:	strb	wzr, [x20, x0]
  40710c:	str	x21, [x19]
  407110:	ldp	x20, x19, [sp, #32]
  407114:	ldr	x21, [sp, #16]
  407118:	ldp	x29, x30, [sp], #48
  40711c:	ret

0000000000407120 <ar_member_date@@Base>:
  407120:	stp	x29, x30, [sp, #-48]!
  407124:	str	x21, [sp, #16]
  407128:	stp	x20, x19, [sp, #32]
  40712c:	mov	x29, sp
  407130:	bl	419e60 <xstrdup@@Base>
  407134:	mov	w1, #0x28                  	// #40
  407138:	mov	x19, x0
  40713c:	bl	406c80 <strchr@plt>
  407140:	add	x20, x0, #0x1
  407144:	mov	x21, x0
  407148:	strb	wzr, [x0]
  40714c:	mov	x0, x20
  407150:	bl	406750 <strlen@plt>
  407154:	strb	wzr, [x21, x0]
  407158:	mov	x0, x19
  40715c:	bl	40aae4 <lookup_file@@Base>
  407160:	cbz	x0, 4071a4 <ar_member_date@@Base+0x84>
  407164:	mov	w1, wzr
  407168:	bl	420fec <f_mtime@@Base>
  40716c:	adrp	x1, 407000 <_start@@Base+0xf0>
  407170:	add	x1, x1, #0x1c4
  407174:	mov	x0, x19
  407178:	mov	x2, x20
  40717c:	bl	407524 <ar_scan@@Base>
  407180:	mov	x20, x0
  407184:	mov	x0, x19
  407188:	bl	406c60 <free@plt>
  40718c:	cmp	x20, #0x1
  407190:	csinv	x0, x20, xzr, ge  // ge = tcont
  407194:	ldp	x20, x19, [sp, #32]
  407198:	ldr	x21, [sp, #16]
  40719c:	ldp	x29, x30, [sp], #48
  4071a0:	ret
  4071a4:	mov	x0, x19
  4071a8:	bl	40934c <file_exists_p@@Base>
  4071ac:	cbz	w0, 40716c <ar_member_date@@Base+0x4c>
  4071b0:	mov	x0, x19
  4071b4:	bl	423690 <strcache_add@@Base>
  4071b8:	bl	40ab6c <enter_file@@Base>
  4071bc:	cbnz	x0, 407164 <ar_member_date@@Base+0x44>
  4071c0:	b	40716c <ar_member_date@@Base+0x4c>
  4071c4:	stp	x29, x30, [sp, #-32]!
  4071c8:	mov	x29, sp
  4071cc:	ldr	x0, [x29, #48]
  4071d0:	str	x19, [sp, #16]
  4071d4:	mov	x19, x6
  4071d8:	bl	407960 <ar_name_equal@@Base>
  4071dc:	cmp	w0, #0x0
  4071e0:	csel	x0, xzr, x19, eq  // eq = none
  4071e4:	ldr	x19, [sp, #16]
  4071e8:	ldp	x29, x30, [sp], #32
  4071ec:	ret

00000000004071f0 <ar_touch@@Base>:
  4071f0:	stp	x29, x30, [sp, #-48]!
  4071f4:	stp	x22, x21, [sp, #16]
  4071f8:	stp	x20, x19, [sp, #32]
  4071fc:	mov	x29, sp
  407200:	mov	x20, x0
  407204:	bl	419e60 <xstrdup@@Base>
  407208:	mov	w1, #0x28                  	// #40
  40720c:	mov	x19, x0
  407210:	bl	406c80 <strchr@plt>
  407214:	add	x21, x0, #0x1
  407218:	mov	x22, x0
  40721c:	strb	wzr, [x0]
  407220:	mov	x0, x21
  407224:	bl	406750 <strlen@plt>
  407228:	strb	wzr, [x22, x0]
  40722c:	mov	x0, x19
  407230:	bl	423690 <strcache_add@@Base>
  407234:	bl	40ab6c <enter_file@@Base>
  407238:	mov	w1, wzr
  40723c:	bl	420fec <f_mtime@@Base>
  407240:	mov	x0, x19
  407244:	mov	x1, x21
  407248:	bl	4079c0 <ar_member_touch@@Base>
  40724c:	add	w8, w0, #0x3
  407250:	cmp	w8, #0x4
  407254:	b.hi	407288 <ar_touch@@Base+0x98>  // b.pmore
  407258:	adrp	x9, 427000 <jobserver_post_child@@Base+0xcc>
  40725c:	add	x9, x9, #0x998
  407260:	adr	x10, 407274 <ar_touch@@Base+0x84>
  407264:	ldrb	w11, [x9, x8]
  407268:	add	x10, x10, x11, lsl #2
  40726c:	mov	w22, w0
  407270:	br	x10
  407274:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  407278:	add	x0, x0, #0xa2b
  40727c:	mov	x1, x19
  407280:	bl	41b1c0 <perror_with_name@@Base>
  407284:	b	407350 <ar_touch@@Base+0x160>
  407288:	mov	x0, x20
  40728c:	bl	406750 <strlen@plt>
  407290:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  407294:	mov	x21, x0
  407298:	add	x1, x1, #0xa5d
  40729c:	mov	w2, #0x5                   	// #5
  4072a0:	mov	x0, xzr
  4072a4:	bl	406dc0 <dcgettext@plt>
  4072a8:	mov	x2, x0
  4072ac:	mov	x0, xzr
  4072b0:	mov	x1, x21
  4072b4:	mov	x3, x20
  4072b8:	b	407304 <ar_touch@@Base+0x114>
  4072bc:	mov	x0, x19
  4072c0:	bl	406750 <strlen@plt>
  4072c4:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  4072c8:	mov	x20, x0
  4072cc:	add	x1, x1, #0xa08
  4072d0:	b	4072e8 <ar_touch@@Base+0xf8>
  4072d4:	mov	x0, x19
  4072d8:	bl	406750 <strlen@plt>
  4072dc:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  4072e0:	mov	x20, x0
  4072e4:	add	x1, x1, #0x9e5
  4072e8:	mov	w2, #0x5                   	// #5
  4072ec:	mov	x0, xzr
  4072f0:	bl	406dc0 <dcgettext@plt>
  4072f4:	mov	x2, x0
  4072f8:	mov	x0, xzr
  4072fc:	mov	x1, x20
  407300:	mov	x3, x19
  407304:	bl	41ae34 <error@@Base>
  407308:	b	407350 <ar_touch@@Base+0x160>
  40730c:	mov	x0, x21
  407310:	bl	406750 <strlen@plt>
  407314:	mov	x20, x0
  407318:	mov	x0, x19
  40731c:	bl	406750 <strlen@plt>
  407320:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  407324:	add	x20, x0, x20
  407328:	add	x1, x1, #0xa33
  40732c:	mov	w2, #0x5                   	// #5
  407330:	mov	x0, xzr
  407334:	bl	406dc0 <dcgettext@plt>
  407338:	mov	x2, x0
  40733c:	mov	x0, xzr
  407340:	mov	x1, x20
  407344:	mov	x3, x21
  407348:	mov	x4, x19
  40734c:	bl	41ae34 <error@@Base>
  407350:	mov	w22, #0x1                   	// #1
  407354:	mov	x0, x19
  407358:	bl	406c60 <free@plt>
  40735c:	mov	w0, w22
  407360:	ldp	x20, x19, [sp, #32]
  407364:	ldp	x22, x21, [sp, #16]
  407368:	ldp	x29, x30, [sp], #48
  40736c:	ret

0000000000407370 <ar_glob@@Base>:
  407370:	stp	x29, x30, [sp, #-32]!
  407374:	str	x19, [sp, #16]
  407378:	mov	x29, sp
  40737c:	sub	sp, sp, #0x30
  407380:	adrp	x8, 427000 <jobserver_post_child@@Base+0xcc>
  407384:	mov	w10, wzr
  407388:	add	x8, x8, #0x99d
  40738c:	mov	x9, x1
  407390:	b	40739c <ar_glob@@Base+0x2c>
  407394:	cbnz	w10, 4073e0 <ar_glob@@Base+0x70>
  407398:	add	x9, x9, #0x1
  40739c:	ldrb	w11, [x9]
  4073a0:	sub	w12, w11, #0x3f
  4073a4:	cmp	w12, #0x1e
  4073a8:	b.hi	4073d4 <ar_glob@@Base+0x64>  // b.pmore
  4073ac:	adr	x11, 407394 <ar_glob@@Base+0x24>
  4073b0:	ldrb	w13, [x8, x12]
  4073b4:	add	x11, x11, x13, lsl #2
  4073b8:	br	x11
  4073bc:	mov	w10, #0x1                   	// #1
  4073c0:	add	x9, x9, #0x1
  4073c4:	b	40739c <ar_glob@@Base+0x2c>
  4073c8:	add	x9, x9, #0x1
  4073cc:	add	x9, x9, #0x1
  4073d0:	b	40739c <ar_glob@@Base+0x2c>
  4073d4:	cbz	w11, 407488 <ar_glob@@Base+0x118>
  4073d8:	cmp	w11, #0x2a
  4073dc:	b.ne	407398 <ar_glob@@Base+0x28>  // b.any
  4073e0:	stp	x0, x1, [x29, #-40]
  4073e4:	adrp	x1, 407000 <_start@@Base+0xf0>
  4073e8:	stp	x2, xzr, [x29, #-24]
  4073ec:	add	x1, x1, #0x49c
  4073f0:	sub	x2, x29, #0x28
  4073f4:	stur	wzr, [x29, #-8]
  4073f8:	bl	407524 <ar_scan@@Base>
  4073fc:	ldur	x8, [x29, #-16]
  407400:	cbz	x8, 407488 <ar_glob@@Base+0x118>
  407404:	ldur	w9, [x29, #-8]
  407408:	mov	x10, sp
  40740c:	lsl	x9, x9, #3
  407410:	add	x9, x9, #0xf
  407414:	and	x9, x9, #0xffffffff0
  407418:	sub	x19, x10, x9
  40741c:	mov	sp, x19
  407420:	mov	w9, wzr
  407424:	ldr	x10, [x8, #8]
  407428:	str	x10, [x19, w9, uxtw #3]
  40742c:	ldr	x8, [x8]
  407430:	add	w10, w9, #0x1
  407434:	mov	w9, w10
  407438:	cbnz	x8, 407424 <ar_glob@@Base+0xb4>
  40743c:	adrp	x3, 419000 <die@@Base+0x5ec>
  407440:	mov	w1, w10
  407444:	add	x3, x3, #0xa2c
  407448:	mov	w2, #0x8                   	// #8
  40744c:	mov	x0, x19
  407450:	bl	406870 <qsort@plt>
  407454:	ldur	x0, [x29, #-16]
  407458:	cbz	x0, 407478 <ar_glob@@Base+0x108>
  40745c:	mov	w9, wzr
  407460:	mov	x8, x0
  407464:	ldr	x10, [x19, w9, uxtw #3]
  407468:	add	w9, w9, #0x1
  40746c:	str	x10, [x8, #8]
  407470:	ldr	x8, [x8]
  407474:	cbnz	x8, 407464 <ar_glob@@Base+0xf4>
  407478:	mov	sp, x29
  40747c:	ldr	x19, [sp, #16]
  407480:	ldp	x29, x30, [sp], #32
  407484:	ret
  407488:	mov	x0, xzr
  40748c:	mov	sp, x29
  407490:	ldr	x19, [sp, #16]
  407494:	ldp	x29, x30, [sp], #32
  407498:	ret
  40749c:	stp	x29, x30, [sp, #-48]!
  4074a0:	mov	x29, sp
  4074a4:	str	x21, [sp, #16]
  4074a8:	ldr	x21, [x29, #64]
  4074ac:	stp	x20, x19, [sp, #32]
  4074b0:	mov	w2, #0x5                   	// #5
  4074b4:	mov	x19, x1
  4074b8:	ldr	x0, [x21, #8]
  4074bc:	bl	406cc0 <fnmatch@plt>
  4074c0:	cbnz	w0, 407510 <ar_glob@@Base+0x1a0>
  4074c4:	ldr	x0, [x21, #16]
  4074c8:	bl	419e38 <xcalloc@@Base>
  4074cc:	ldr	x1, [x21]
  4074d0:	adrp	x2, 427000 <jobserver_post_child@@Base+0xcc>
  4074d4:	adrp	x4, 42d000 <_IO_stdin_used@@Base+0x5680>
  4074d8:	mov	x20, x0
  4074dc:	add	x2, x2, #0xa91
  4074e0:	add	x4, x4, #0x83b
  4074e4:	mov	w0, #0x4                   	// #4
  4074e8:	mov	x3, x19
  4074ec:	bl	419c18 <concat@@Base>
  4074f0:	bl	423690 <strcache_add@@Base>
  4074f4:	str	x0, [x20, #8]
  4074f8:	ldr	x8, [x21, #24]
  4074fc:	str	x8, [x20]
  407500:	ldr	w8, [x21, #32]
  407504:	str	x20, [x21, #24]
  407508:	add	w8, w8, #0x1
  40750c:	str	w8, [x21, #32]
  407510:	ldp	x20, x19, [sp, #32]
  407514:	ldr	x21, [sp, #16]
  407518:	mov	x0, xzr
  40751c:	ldp	x29, x30, [sp], #48
  407520:	ret

0000000000407524 <ar_scan@@Base>:
  407524:	stp	x29, x30, [sp, #-96]!
  407528:	stp	x28, x27, [sp, #16]
  40752c:	stp	x26, x25, [sp, #32]
  407530:	stp	x24, x23, [sp, #48]
  407534:	stp	x22, x21, [sp, #64]
  407538:	stp	x20, x19, [sp, #80]
  40753c:	mov	x29, sp
  407540:	sub	sp, sp, #0xc0
  407544:	mov	x20, x2
  407548:	mov	x21, x1
  40754c:	mov	w1, wzr
  407550:	mov	w2, wzr
  407554:	bl	4069c0 <open@plt>
  407558:	tbnz	w0, #31, 4075a0 <ar_scan@@Base+0x7c>
  40755c:	sub	x1, x29, #0x48
  407560:	mov	w2, #0x8                   	// #8
  407564:	mov	w19, w0
  407568:	bl	419ffc <readbuf@@Base>
  40756c:	cmp	w0, #0x8
  407570:	b.ne	407590 <ar_scan@@Base+0x6c>  // b.any
  407574:	ldur	x8, [x29, #-72]
  407578:	mov	x9, #0x3c21                	// #15393
  40757c:	movk	x9, #0x7261, lsl #16
  407580:	movk	x9, #0x6863, lsl #32
  407584:	movk	x9, #0xa3e, lsl #48
  407588:	cmp	x8, x9
  40758c:	b.eq	4075c8 <ar_scan@@Base+0xa4>  // b.none
  407590:	mov	w0, w19
  407594:	bl	406b10 <close@plt>
  407598:	mov	x23, #0xfffffffffffffffe    	// #-2
  40759c:	b	4075a4 <ar_scan@@Base+0x80>
  4075a0:	mov	x23, #0xffffffffffffffff    	// #-1
  4075a4:	mov	x0, x23
  4075a8:	mov	sp, x29
  4075ac:	ldp	x20, x19, [sp, #80]
  4075b0:	ldp	x22, x21, [sp, #64]
  4075b4:	ldp	x24, x23, [sp, #48]
  4075b8:	ldp	x26, x25, [sp, #32]
  4075bc:	ldp	x28, x27, [sp, #16]
  4075c0:	ldp	x29, x30, [sp], #96
  4075c4:	ret
  4075c8:	sub	x22, x29, #0x60
  4075cc:	add	x9, x22, #0x10
  4075d0:	stur	x9, [x29, #-112]
  4075d4:	orr	x9, x22, #0x1
  4075d8:	sub	x8, x29, #0x48
  4075dc:	stur	x9, [x29, #-192]
  4075e0:	orr	x9, x22, #0x3
  4075e4:	stur	x9, [x29, #-184]
  4075e8:	add	x9, x8, #0x28
  4075ec:	stur	x9, [x29, #-120]
  4075f0:	add	x9, x8, #0x30
  4075f4:	stur	x9, [x29, #-128]
  4075f8:	add	x9, x8, #0x10
  4075fc:	mov	x24, xzr
  407600:	mov	w25, #0x8                   	// #8
  407604:	stur	x9, [x29, #-136]
  407608:	add	x9, x8, #0x1c
  40760c:	add	x8, x8, #0x22
  407610:	stur	x20, [x29, #-160]
  407614:	stur	wzr, [x29, #-164]
  407618:	stp	x8, x9, [x29, #-152]
  40761c:	mov	w0, w19
  407620:	mov	x1, x25
  407624:	mov	w2, wzr
  407628:	bl	4068c0 <lseek@plt>
  40762c:	cmn	x0, #0x1
  407630:	b.ne	407648 <ar_scan@@Base+0x124>  // b.any
  407634:	bl	406e70 <__errno_location@plt>
  407638:	ldr	w8, [x0]
  40763c:	cmp	w8, #0x4
  407640:	b.eq	40761c <ar_scan@@Base+0xf8>  // b.none
  407644:	b	407590 <ar_scan@@Base+0x6c>
  407648:	tbnz	x0, #63, 407590 <ar_scan@@Base+0x6c>
  40764c:	sub	x1, x29, #0x48
  407650:	mov	w2, #0x3c                  	// #60
  407654:	mov	w0, w19
  407658:	bl	419ffc <readbuf@@Base>
  40765c:	cbz	w0, 407940 <ar_scan@@Base+0x41c>
  407660:	cmp	w0, #0x3c
  407664:	b.ne	407590 <ar_scan@@Base+0x6c>  // b.any
  407668:	ldurh	w8, [x29, #-14]
  40766c:	cmp	w8, #0xa60
  407670:	b.ne	407590 <ar_scan@@Base+0x6c>  // b.any
  407674:	ldur	q0, [x29, #-72]
  407678:	ldur	x8, [x29, #-112]
  40767c:	stur	q0, [x29, #-96]
  407680:	cmp	x8, x22
  407684:	strb	wzr, [x8]
  407688:	b.ls	40769c <ar_scan@@Base+0x178>  // b.plast
  40768c:	ldrb	w9, [x8, #-1]!
  407690:	cmp	w9, #0x20
  407694:	b.eq	407680 <ar_scan@@Base+0x15c>  // b.none
  407698:	b	4076a0 <ar_scan@@Base+0x17c>
  40769c:	mov	w9, wzr
  4076a0:	ldurh	w10, [x29, #-96]
  4076a4:	ldurb	w11, [x29, #-94]
  4076a8:	mov	w12, #0x2f2f                	// #12079
  4076ac:	eor	w10, w10, w12
  4076b0:	orr	w10, w10, w11
  4076b4:	tst	w10, #0xffff
  4076b8:	b.eq	40792c <ar_scan@@Base+0x408>  // b.none
  4076bc:	ldur	x10, [x29, #-96]
  4076c0:	mov	x12, #0x5241                	// #21057
  4076c4:	movk	x12, #0x4946, lsl #16
  4076c8:	movk	x12, #0x454c, lsl #32
  4076cc:	movk	x12, #0x414e, lsl #48
  4076d0:	ldur	x11, [x29, #-91]
  4076d4:	eor	x10, x10, x12
  4076d8:	mov	x12, #0x4e45                	// #20037
  4076dc:	movk	x12, #0x4d41, lsl #16
  4076e0:	movk	x12, #0x5345, lsl #32
  4076e4:	movk	x12, #0x2f, lsl #48
  4076e8:	eor	x11, x11, x12
  4076ec:	orr	x10, x10, x11
  4076f0:	cmp	x10, #0x0
  4076f4:	cset	w20, eq  // eq = none
  4076f8:	cmp	w9, #0x2f
  4076fc:	stur	x21, [x29, #-176]
  407700:	b.ne	407708 <ar_scan@@Base+0x1e4>  // b.any
  407704:	strb	wzr, [x8]
  407708:	ldurb	w8, [x29, #-96]
  40770c:	tbnz	w20, #0, 407760 <ar_scan@@Base+0x23c>
  407710:	cmp	w8, #0x2f
  407714:	b.eq	407720 <ar_scan@@Base+0x1fc>  // b.none
  407718:	cmp	w8, #0x20
  40771c:	b.ne	407760 <ar_scan@@Base+0x23c>  // b.any
  407720:	cbz	x24, 407760 <ar_scan@@Base+0x23c>
  407724:	ldur	x0, [x29, #-192]
  407728:	mov	w2, #0xa                   	// #10
  40772c:	mov	x1, xzr
  407730:	bl	406c30 <strtol@plt>
  407734:	tbnz	w0, #31, 407590 <ar_scan@@Base+0x6c>
  407738:	ldur	w8, [x29, #-164]
  40773c:	cmp	w8, w0
  407740:	b.le	407590 <ar_scan@@Base+0x6c>
  407744:	add	x28, x24, w0, uxtw
  407748:	mov	x0, x28
  40774c:	bl	406750 <strlen@plt>
  407750:	cmp	w0, #0x1
  407754:	b.lt	407590 <ar_scan@@Base+0x6c>  // b.tstop
  407758:	mov	w21, wzr
  40775c:	b	4077e4 <ar_scan@@Base+0x2c0>
  407760:	sub	x28, x29, #0x60
  407764:	cmp	w8, #0x23
  407768:	mov	w21, #0x1                   	// #1
  40776c:	b.ne	4077e4 <ar_scan@@Base+0x2c0>  // b.any
  407770:	ldurb	w8, [x29, #-95]
  407774:	cmp	w8, #0x31
  407778:	b.ne	4077e4 <ar_scan@@Base+0x2c0>  // b.any
  40777c:	ldurb	w8, [x29, #-94]
  407780:	cmp	w8, #0x2f
  407784:	b.ne	4077e4 <ar_scan@@Base+0x2c0>  // b.any
  407788:	ldur	x0, [x29, #-184]
  40778c:	mov	w2, #0xa                   	// #10
  407790:	mov	x1, xzr
  407794:	bl	406c30 <strtol@plt>
  407798:	mov	x23, x0
  40779c:	cmp	w23, #0x1
  4077a0:	b.lt	407590 <ar_scan@@Base+0x6c>  // b.tstop
  4077a4:	add	w8, w23, #0x1
  4077a8:	sxtw	x8, w8
  4077ac:	add	x8, x8, #0xf
  4077b0:	and	x8, x8, #0xfffffffffffffff0
  4077b4:	mov	x9, sp
  4077b8:	sub	x28, x9, x8
  4077bc:	mov	sp, x28
  4077c0:	and	x26, x23, #0xffffffff
  4077c4:	mov	w0, w19
  4077c8:	mov	x1, x28
  4077cc:	mov	x2, x26
  4077d0:	bl	419ffc <readbuf@@Base>
  4077d4:	cmp	w23, w0
  4077d8:	b.ne	407590 <ar_scan@@Base+0x6c>  // b.any
  4077dc:	mov	w21, wzr
  4077e0:	strb	wzr, [x28, x26]
  4077e4:	ldur	x0, [x29, #-120]
  4077e8:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  4077ec:	sub	x2, x29, #0x64
  4077f0:	add	x1, x1, #0xaaf
  4077f4:	bl	406de0 <__isoc99_sscanf@plt>
  4077f8:	ldur	x0, [x29, #-128]
  4077fc:	mov	w2, #0xa                   	// #10
  407800:	mov	x1, xzr
  407804:	bl	406c30 <strtol@plt>
  407808:	mov	x26, x0
  40780c:	ldur	x0, [x29, #-136]
  407810:	mov	w2, #0xa                   	// #10
  407814:	mov	x1, xzr
  407818:	add	x27, x25, #0x3c
  40781c:	bl	406c30 <strtol@plt>
  407820:	mov	x23, x0
  407824:	ldur	x0, [x29, #-144]
  407828:	mov	w2, #0xa                   	// #10
  40782c:	mov	x1, xzr
  407830:	bl	406c30 <strtol@plt>
  407834:	mov	x22, x0
  407838:	ldur	x0, [x29, #-152]
  40783c:	mov	w2, #0xa                   	// #10
  407840:	mov	x1, xzr
  407844:	bl	406c30 <strtol@plt>
  407848:	ldur	w8, [x29, #-100]
  40784c:	ldur	x9, [x29, #-160]
  407850:	mov	w2, w21
  407854:	ldur	x21, [x29, #-176]
  407858:	str	w0, [sp, #-32]!
  40785c:	mov	w0, w19
  407860:	mov	x1, x28
  407864:	mov	x3, x25
  407868:	mov	x4, x27
  40786c:	mov	x5, x26
  407870:	mov	x6, x23
  407874:	mov	w7, w22
  407878:	str	x9, [sp, #16]
  40787c:	str	w8, [sp, #8]
  407880:	blr	x21
  407884:	add	sp, sp, #0x20
  407888:	cbnz	x0, 407950 <ar_scan@@Base+0x42c>
  40788c:	sub	x22, x29, #0x60
  407890:	cbz	w20, 40791c <ar_scan@@Base+0x3f8>
  407894:	mov	w8, #0x7fffffff            	// #2147483647
  407898:	cmp	x26, x8
  40789c:	b.gt	407590 <ar_scan@@Base+0x6c>
  4078a0:	add	x9, x26, #0x10
  4078a4:	mov	x8, sp
  4078a8:	and	x9, x9, #0xfffffffffffffff0
  4078ac:	sub	x24, x8, x9
  4078b0:	mov	sp, x24
  4078b4:	mov	w0, w19
  4078b8:	mov	x1, x24
  4078bc:	mov	x2, x26
  4078c0:	bl	419ffc <readbuf@@Base>
  4078c4:	cmp	x26, w0, sxtw
  4078c8:	b.ne	407590 <ar_scan@@Base+0x6c>  // b.any
  4078cc:	cmp	x26, #0x1
  4078d0:	add	x8, x24, x26
  4078d4:	b.lt	407910 <ar_scan@@Base+0x3ec>  // b.tstop
  4078d8:	mov	x9, x24
  4078dc:	b	4078ec <ar_scan@@Base+0x3c8>
  4078e0:	add	x9, x9, #0x1
  4078e4:	cmp	x9, x8
  4078e8:	b.cs	407910 <ar_scan@@Base+0x3ec>  // b.hs, b.nlast
  4078ec:	ldrb	w10, [x9]
  4078f0:	cmp	w10, #0xa
  4078f4:	b.ne	4078e0 <ar_scan@@Base+0x3bc>  // b.any
  4078f8:	ldurb	w10, [x9, #-1]
  4078fc:	strb	wzr, [x9]
  407900:	cmp	w10, #0x2f
  407904:	b.ne	4078e0 <ar_scan@@Base+0x3bc>  // b.any
  407908:	sturb	wzr, [x9, #-1]
  40790c:	b	4078e0 <ar_scan@@Base+0x3bc>
  407910:	strb	wzr, [x8]
  407914:	mov	w8, w26
  407918:	stur	w26, [x29, #-164]
  40791c:	add	x8, x27, x26
  407920:	and	x9, x8, #0x1
  407924:	add	x25, x9, x8
  407928:	b	40761c <ar_scan@@Base+0xf8>
  40792c:	mov	w20, #0x1                   	// #1
  407930:	cmp	w9, #0x2f
  407934:	stur	x21, [x29, #-176]
  407938:	b.eq	407704 <ar_scan@@Base+0x1e0>  // b.none
  40793c:	b	407708 <ar_scan@@Base+0x1e4>
  407940:	mov	w0, w19
  407944:	bl	406b10 <close@plt>
  407948:	mov	x23, xzr
  40794c:	b	4075a4 <ar_scan@@Base+0x80>
  407950:	mov	x23, x0
  407954:	mov	w0, w19
  407958:	bl	406b10 <close@plt>
  40795c:	b	4075a4 <ar_scan@@Base+0x80>

0000000000407960 <ar_name_equal@@Base>:
  407960:	stp	x29, x30, [sp, #-48]!
  407964:	stp	x20, x19, [sp, #32]
  407968:	mov	x19, x1
  40796c:	mov	w1, #0x2f                  	// #47
  407970:	str	x21, [sp, #16]
  407974:	mov	x29, sp
  407978:	mov	w20, w2
  40797c:	mov	x21, x0
  407980:	bl	406b30 <strrchr@plt>
  407984:	cmp	x0, #0x0
  407988:	csinc	x0, x21, x0, eq  // eq = none
  40798c:	cbz	w20, 4079a0 <ar_name_equal@@Base+0x40>
  407990:	mov	w2, #0xf                   	// #15
  407994:	mov	x1, x19
  407998:	bl	4069f0 <strncmp@plt>
  40799c:	b	4079a8 <ar_name_equal@@Base+0x48>
  4079a0:	mov	x1, x19
  4079a4:	bl	406c10 <strcmp@plt>
  4079a8:	ldp	x20, x19, [sp, #32]
  4079ac:	ldr	x21, [sp, #16]
  4079b0:	cmp	w0, #0x0
  4079b4:	cset	w0, eq  // eq = none
  4079b8:	ldp	x29, x30, [sp], #48
  4079bc:	ret

00000000004079c0 <ar_member_touch@@Base>:
  4079c0:	sub	sp, sp, #0xf0
  4079c4:	mov	x2, x1
  4079c8:	adrp	x1, 407000 <_start@@Base+0xf0>
  4079cc:	add	x1, x1, #0xb6c
  4079d0:	stp	x29, x30, [sp, #192]
  4079d4:	str	x21, [sp, #208]
  4079d8:	stp	x20, x19, [sp, #224]
  4079dc:	add	x29, sp, #0xc0
  4079e0:	mov	x21, x0
  4079e4:	bl	407524 <ar_scan@@Base>
  4079e8:	mov	x19, x0
  4079ec:	tbnz	x0, #63, 407b54 <ar_member_touch@@Base+0x194>
  4079f0:	cbz	x19, 407a20 <ar_member_touch@@Base+0x60>
  4079f4:	mov	w1, #0x2                   	// #2
  4079f8:	mov	w2, #0x1b6                 	// #438
  4079fc:	mov	x0, x21
  407a00:	bl	4069c0 <open@plt>
  407a04:	cmn	w0, #0x1
  407a08:	b.ne	407a28 <ar_member_touch@@Base+0x68>  // b.any
  407a0c:	bl	406e70 <__errno_location@plt>
  407a10:	ldr	w8, [x0]
  407a14:	cmp	w8, #0x4
  407a18:	b.eq	4079f4 <ar_member_touch@@Base+0x34>  // b.none
  407a1c:	b	407b50 <ar_member_touch@@Base+0x190>
  407a20:	mov	w19, #0x1                   	// #1
  407a24:	b	407b54 <ar_member_touch@@Base+0x194>
  407a28:	mov	w20, w0
  407a2c:	tbnz	w0, #31, 407b50 <ar_member_touch@@Base+0x190>
  407a30:	mov	w0, w20
  407a34:	mov	x1, x19
  407a38:	mov	w2, wzr
  407a3c:	bl	4068c0 <lseek@plt>
  407a40:	cmn	x0, #0x1
  407a44:	b.ne	407a5c <ar_member_touch@@Base+0x9c>  // b.any
  407a48:	bl	406e70 <__errno_location@plt>
  407a4c:	ldr	w8, [x0]
  407a50:	cmp	w8, #0x4
  407a54:	b.eq	407a30 <ar_member_touch@@Base+0x70>  // b.none
  407a58:	b	407b38 <ar_member_touch@@Base+0x178>
  407a5c:	tbnz	x0, #63, 407b38 <ar_member_touch@@Base+0x178>
  407a60:	sub	x1, x29, #0x40
  407a64:	mov	w2, #0x3c                  	// #60
  407a68:	mov	w0, w20
  407a6c:	bl	419ffc <readbuf@@Base>
  407a70:	cmp	w0, #0x3c
  407a74:	b.ne	407b38 <ar_member_touch@@Base+0x178>  // b.any
  407a78:	mov	x2, sp
  407a7c:	mov	w0, wzr
  407a80:	mov	w1, w20
  407a84:	bl	406da0 <__fxstat@plt>
  407a88:	cmn	w0, #0x1
  407a8c:	b.ne	407aa4 <ar_member_touch@@Base+0xe4>  // b.any
  407a90:	bl	406e70 <__errno_location@plt>
  407a94:	ldr	w8, [x0]
  407a98:	cmp	w8, #0x4
  407a9c:	b.eq	407a78 <ar_member_touch@@Base+0xb8>  // b.none
  407aa0:	b	407b38 <ar_member_touch@@Base+0x178>
  407aa4:	tbnz	w0, #31, 407b38 <ar_member_touch@@Base+0x178>
  407aa8:	ldr	x2, [sp, #88]
  407aac:	sub	x8, x29, #0x40
  407ab0:	add	x21, x8, #0x10
  407ab4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  407ab8:	mov	x8, #0x2020202020202020    	// #2314885530818453536
  407abc:	add	x1, x1, #0x2cf
  407ac0:	mov	x0, x21
  407ac4:	stur	x8, [x29, #-48]
  407ac8:	stur	w8, [x29, #-40]
  407acc:	bl	406800 <sprintf@plt>
  407ad0:	mov	x0, x21
  407ad4:	bl	406750 <strlen@plt>
  407ad8:	mov	w8, #0x20                  	// #32
  407adc:	strb	w8, [x21, x0]
  407ae0:	mov	w0, w20
  407ae4:	mov	x1, x19
  407ae8:	mov	w2, wzr
  407aec:	bl	4068c0 <lseek@plt>
  407af0:	cmn	x0, #0x1
  407af4:	b.ne	407b0c <ar_member_touch@@Base+0x14c>  // b.any
  407af8:	bl	406e70 <__errno_location@plt>
  407afc:	ldr	w8, [x0]
  407b00:	cmp	w8, #0x4
  407b04:	b.eq	407ae0 <ar_member_touch@@Base+0x120>  // b.none
  407b08:	b	407b38 <ar_member_touch@@Base+0x178>
  407b0c:	tbnz	x0, #63, 407b38 <ar_member_touch@@Base+0x178>
  407b10:	sub	x1, x29, #0x40
  407b14:	mov	w2, #0x3c                  	// #60
  407b18:	mov	w0, w20
  407b1c:	bl	419f60 <writebuf@@Base>
  407b20:	cmp	w0, #0x3c
  407b24:	b.ne	407b38 <ar_member_touch@@Base+0x178>  // b.any
  407b28:	mov	w0, w20
  407b2c:	bl	406b10 <close@plt>
  407b30:	mov	w19, wzr
  407b34:	b	407b54 <ar_member_touch@@Base+0x194>
  407b38:	bl	406e70 <__errno_location@plt>
  407b3c:	ldr	w21, [x0]
  407b40:	mov	x19, x0
  407b44:	mov	w0, w20
  407b48:	bl	406b10 <close@plt>
  407b4c:	str	w21, [x19]
  407b50:	mov	w19, #0xfffffffd            	// #-3
  407b54:	mov	w0, w19
  407b58:	ldp	x20, x19, [sp, #224]
  407b5c:	ldr	x21, [sp, #208]
  407b60:	ldp	x29, x30, [sp, #192]
  407b64:	add	sp, sp, #0xf0
  407b68:	ret
  407b6c:	stp	x29, x30, [sp, #-48]!
  407b70:	mov	x29, sp
  407b74:	stp	x22, x21, [sp, #16]
  407b78:	ldr	x22, [x29, #64]
  407b7c:	stp	x20, x19, [sp, #32]
  407b80:	mov	x20, x1
  407b84:	mov	w1, #0x2f                  	// #47
  407b88:	mov	x0, x22
  407b8c:	mov	x19, x3
  407b90:	mov	w21, w2
  407b94:	bl	406b30 <strrchr@plt>
  407b98:	cmp	x0, #0x0
  407b9c:	csinc	x0, x22, x0, eq  // eq = none
  407ba0:	cbz	w21, 407bb4 <ar_member_touch@@Base+0x1f4>
  407ba4:	mov	w2, #0xf                   	// #15
  407ba8:	mov	x1, x20
  407bac:	bl	4069f0 <strncmp@plt>
  407bb0:	b	407bbc <ar_member_touch@@Base+0x1fc>
  407bb4:	mov	x1, x20
  407bb8:	bl	406c10 <strcmp@plt>
  407bbc:	cmp	w0, #0x0
  407bc0:	csel	x0, x19, xzr, eq  // eq = none
  407bc4:	ldp	x20, x19, [sp, #32]
  407bc8:	ldp	x22, x21, [sp, #16]
  407bcc:	ldp	x29, x30, [sp], #48
  407bd0:	ret

0000000000407bd4 <set_file_variables@@Base>:
  407bd4:	stp	x29, x30, [sp, #-96]!
  407bd8:	stp	x28, x27, [sp, #16]
  407bdc:	stp	x26, x25, [sp, #32]
  407be0:	stp	x24, x23, [sp, #48]
  407be4:	stp	x22, x21, [sp, #64]
  407be8:	stp	x20, x19, [sp, #80]
  407bec:	mov	x29, sp
  407bf0:	sub	sp, sp, #0x60
  407bf4:	mov	x19, x0
  407bf8:	ldr	x0, [x0]
  407bfc:	bl	40701c <ar_name@@Base>
  407c00:	ldr	x23, [x19]
  407c04:	cbz	w0, 407c90 <set_file_variables@@Base+0xbc>
  407c08:	mov	w1, #0x28                  	// #40
  407c0c:	mov	x0, x23
  407c10:	bl	406c80 <strchr@plt>
  407c14:	sub	x22, x0, x23
  407c18:	add	x8, x22, #0x10
  407c1c:	and	x8, x8, #0xfffffffffffffff0
  407c20:	mov	x9, sp
  407c24:	mov	x21, x0
  407c28:	sub	x20, x9, x8
  407c2c:	mov	sp, x20
  407c30:	mov	x0, x20
  407c34:	mov	x1, x23
  407c38:	mov	x2, x22
  407c3c:	bl	406710 <memcpy@plt>
  407c40:	strb	wzr, [x20, x22]
  407c44:	add	x22, x21, #0x1
  407c48:	mov	x0, x22
  407c4c:	bl	406750 <strlen@plt>
  407c50:	add	x8, x0, #0xf
  407c54:	and	x8, x8, #0xfffffffffffffff0
  407c58:	mov	x9, sp
  407c5c:	sub	x21, x9, x8
  407c60:	mov	sp, x21
  407c64:	sub	x24, x0, #0x1
  407c68:	mov	x0, x21
  407c6c:	mov	x1, x22
  407c70:	mov	x2, x24
  407c74:	bl	406710 <memcpy@plt>
  407c78:	strb	wzr, [x21, x24]
  407c7c:	ldr	x22, [x19, #40]
  407c80:	cbz	x22, 407ca4 <set_file_variables@@Base+0xd0>
  407c84:	ldr	x8, [x19, #24]
  407c88:	cbnz	x8, 407d74 <set_file_variables@@Base+0x1a0>
  407c8c:	b	407dcc <set_file_variables@@Base+0x1f8>
  407c90:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x2680>
  407c94:	add	x21, x21, #0x3a9
  407c98:	mov	x20, x23
  407c9c:	ldr	x22, [x19, #40]
  407ca0:	cbnz	x22, 407c84 <set_file_variables@@Base+0xb0>
  407ca4:	mov	x0, x23
  407ca8:	bl	40701c <ar_name@@Base>
  407cac:	ldr	x23, [x19]
  407cb0:	cbz	w0, 407cd4 <set_file_variables@@Base+0x100>
  407cb4:	mov	w1, #0x28                  	// #40
  407cb8:	mov	x0, x23
  407cbc:	bl	406c80 <strchr@plt>
  407cc0:	add	x23, x0, #0x1
  407cc4:	mov	x0, x23
  407cc8:	bl	406750 <strlen@plt>
  407ccc:	sub	x24, x0, #0x1
  407cd0:	b	407ce0 <set_file_variables@@Base+0x10c>
  407cd4:	mov	x0, x23
  407cd8:	bl	406750 <strlen@plt>
  407cdc:	mov	x24, x0
  407ce0:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  407ce4:	add	x0, x0, #0xab3
  407ce8:	bl	423690 <strcache_add@@Base>
  407cec:	bl	40ab6c <enter_file@@Base>
  407cf0:	ldr	x27, [x0, #24]
  407cf4:	cbz	x27, 407d60 <set_file_variables@@Base+0x18c>
  407cf8:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x2680>
  407cfc:	add	x22, x22, #0x3a9
  407d00:	b	407d1c <set_file_variables@@Base+0x148>
  407d04:	add	x1, x23, x26
  407d08:	mov	x0, x25
  407d0c:	bl	4069f0 <strncmp@plt>
  407d10:	cbz	w0, 407db0 <set_file_variables@@Base+0x1dc>
  407d14:	ldr	x27, [x27]
  407d18:	cbz	x27, 407d68 <set_file_variables@@Base+0x194>
  407d1c:	ldr	x25, [x27, #8]
  407d20:	mov	x0, x25
  407d24:	cbz	x25, 407d38 <set_file_variables@@Base+0x164>
  407d28:	bl	406750 <strlen@plt>
  407d2c:	subs	x26, x24, x0
  407d30:	b.ls	407d14 <set_file_variables@@Base+0x140>  // b.plast
  407d34:	b	407d4c <set_file_variables@@Base+0x178>
  407d38:	ldr	x8, [x27, #16]
  407d3c:	ldr	x0, [x8]
  407d40:	bl	406750 <strlen@plt>
  407d44:	subs	x26, x24, x0
  407d48:	b.ls	407d14 <set_file_variables@@Base+0x140>  // b.plast
  407d4c:	mov	x2, x0
  407d50:	cbnz	x25, 407d04 <set_file_variables@@Base+0x130>
  407d54:	ldr	x8, [x27, #16]
  407d58:	ldr	x25, [x8]
  407d5c:	b	407d04 <set_file_variables@@Base+0x130>
  407d60:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x2680>
  407d64:	add	x22, x22, #0x3a9
  407d68:	str	x22, [x19, #40]
  407d6c:	ldr	x8, [x19, #24]
  407d70:	cbz	x8, 407dcc <set_file_variables@@Base+0x1f8>
  407d74:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  407d78:	mov	w9, #0x1200                	// #4608
  407d7c:	add	x2, x2, #0x3a9
  407d80:	ldrh	w10, [x8, #32]
  407d84:	tst	w10, w9
  407d88:	b.eq	407d98 <set_file_variables@@Base+0x1c4>  // b.none
  407d8c:	ldr	x8, [x8]
  407d90:	cbnz	x8, 407d80 <set_file_variables@@Base+0x1ac>
  407d94:	b	407dd4 <set_file_variables@@Base+0x200>
  407d98:	tbnz	w10, #11, 407dcc <set_file_variables@@Base+0x1f8>
  407d9c:	ldr	x2, [x8, #8]
  407da0:	cbnz	x2, 407dd4 <set_file_variables@@Base+0x200>
  407da4:	ldr	x8, [x8, #16]
  407da8:	ldr	x2, [x8]
  407dac:	b	407dd4 <set_file_variables@@Base+0x200>
  407db0:	mov	x0, x23
  407db4:	mov	x1, x26
  407db8:	bl	423914 <strcache_add_len@@Base>
  407dbc:	mov	x22, x0
  407dc0:	str	x22, [x19, #40]
  407dc4:	ldr	x8, [x19, #24]
  407dc8:	cbnz	x8, 407d74 <set_file_variables@@Base+0x1a0>
  407dcc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  407dd0:	add	x2, x2, #0x3a9
  407dd4:	ldr	x8, [x19, #32]
  407dd8:	cbz	x8, 407df0 <set_file_variables@@Base+0x21c>
  407ddc:	adrp	x9, 442000 <just_print_flag@@Base>
  407de0:	ldr	x9, [x9, #40]
  407de4:	ldr	x9, [x9, #32]
  407de8:	cmp	x8, x9
  407dec:	csel	x2, x20, x2, eq  // eq = none
  407df0:	ldr	x8, [x19, #80]
  407df4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  407df8:	add	x0, x0, #0x27a
  407dfc:	mov	w1, #0x1                   	// #1
  407e00:	ldr	x5, [x8, #8]
  407e04:	mov	w3, #0x6                   	// #6
  407e08:	mov	w4, wzr
  407e0c:	mov	x6, xzr
  407e10:	bl	423d70 <define_variable_in_set@@Base>
  407e14:	ldr	x8, [x19, #80]
  407e18:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  407e1c:	add	x0, x0, #0x5bf
  407e20:	mov	w1, #0x1                   	// #1
  407e24:	ldr	x5, [x8, #8]
  407e28:	mov	w3, #0x6                   	// #6
  407e2c:	mov	x2, x22
  407e30:	mov	w4, wzr
  407e34:	mov	x6, xzr
  407e38:	bl	423d70 <define_variable_in_set@@Base>
  407e3c:	ldr	x8, [x19, #80]
  407e40:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  407e44:	add	x0, x0, #0x266
  407e48:	mov	w1, #0x1                   	// #1
  407e4c:	ldr	x5, [x8, #8]
  407e50:	mov	w3, #0x6                   	// #6
  407e54:	mov	x2, x20
  407e58:	mov	w4, wzr
  407e5c:	mov	x6, xzr
  407e60:	bl	423d70 <define_variable_in_set@@Base>
  407e64:	ldr	x8, [x19, #80]
  407e68:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  407e6c:	add	x0, x0, #0xda6
  407e70:	mov	w1, #0x1                   	// #1
  407e74:	ldr	x5, [x8, #8]
  407e78:	mov	w3, #0x6                   	// #6
  407e7c:	mov	x2, x21
  407e80:	mov	w4, wzr
  407e84:	mov	x6, xzr
  407e88:	bl	423d70 <define_variable_in_set@@Base>
  407e8c:	ldr	x25, [x19, #24]
  407e90:	cbz	x25, 407f00 <set_file_variables@@Base+0x32c>
  407e94:	mov	x23, xzr
  407e98:	mov	x21, xzr
  407e9c:	mov	x20, x25
  407ea0:	b	407ebc <set_file_variables@@Base+0x2e8>
  407ea4:	cbz	x0, 407eec <set_file_variables@@Base+0x318>
  407ea8:	bl	406750 <strlen@plt>
  407eac:	add	x8, x21, x0
  407eb0:	add	x21, x8, #0x1
  407eb4:	ldr	x20, [x20]
  407eb8:	cbz	x20, 407ef8 <set_file_variables@@Base+0x324>
  407ebc:	ldrh	w8, [x20, #32]
  407ec0:	tst	w8, #0x1800
  407ec4:	b.ne	407eb4 <set_file_variables@@Base+0x2e0>  // b.any
  407ec8:	ldr	x0, [x20, #8]
  407ecc:	tbz	w8, #9, 407ea4 <set_file_variables@@Base+0x2d0>
  407ed0:	cbnz	x0, 407edc <set_file_variables@@Base+0x308>
  407ed4:	ldr	x8, [x20, #16]
  407ed8:	ldr	x0, [x8]
  407edc:	bl	406750 <strlen@plt>
  407ee0:	add	x8, x23, x0
  407ee4:	add	x23, x8, #0x1
  407ee8:	b	407eb4 <set_file_variables@@Base+0x2e0>
  407eec:	ldr	x8, [x20, #16]
  407ef0:	ldr	x0, [x8]
  407ef4:	b	407ea8 <set_file_variables@@Base+0x2d4>
  407ef8:	cbnz	x23, 407f08 <set_file_variables@@Base+0x334>
  407efc:	b	407f04 <set_file_variables@@Base+0x330>
  407f00:	mov	x21, xzr
  407f04:	mov	w23, #0x1                   	// #1
  407f08:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  407f0c:	add	x24, x24, #0x9f0
  407f10:	ldr	x8, [x24, #24]
  407f14:	ldr	x20, [x24]
  407f18:	cmp	x21, #0x0
  407f1c:	csinc	x21, x21, xzr, ne  // ne = any
  407f20:	cmp	x21, x8
  407f24:	b.ls	407f44 <set_file_variables@@Base+0x370>  // b.plast
  407f28:	mov	x0, x20
  407f2c:	mov	x1, x21
  407f30:	str	x21, [x24, #24]
  407f34:	bl	419de0 <xrealloc@@Base>
  407f38:	str	x0, [x24]
  407f3c:	ldr	x25, [x19, #24]
  407f40:	mov	x20, x0
  407f44:	add	x21, x21, #0x1
  407f48:	cbz	x25, 408010 <set_file_variables@@Base+0x43c>
  407f4c:	mov	w27, #0x1a                  	// #26
  407f50:	mov	w28, #0x20                  	// #32
  407f54:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  407f58:	b	407fa4 <set_file_variables@@Base+0x3d0>
  407f5c:	mov	x0, x22
  407f60:	bl	406750 <strlen@plt>
  407f64:	mov	x24, x0
  407f68:	mov	x0, x20
  407f6c:	mov	x1, x22
  407f70:	mov	x2, x24
  407f74:	bl	406710 <memcpy@plt>
  407f78:	add	x20, x20, x24
  407f7c:	strb	w28, [x20], #1
  407f80:	ldrb	w8, [x25, #33]
  407f84:	ldr	w9, [x26, #3296]
  407f88:	and	w8, w8, #0x1
  407f8c:	orr	w8, w8, w9
  407f90:	cmp	w8, #0x0
  407f94:	csinv	x8, xzr, x24, ne  // ne = any
  407f98:	add	x21, x8, x21
  407f9c:	ldr	x25, [x25]
  407fa0:	cbz	x25, 407ffc <set_file_variables@@Base+0x428>
  407fa4:	ldrb	w8, [x25, #33]
  407fa8:	tst	w8, w27
  407fac:	b.ne	407f9c <set_file_variables@@Base+0x3c8>  // b.any
  407fb0:	ldr	x22, [x25, #8]
  407fb4:	cbz	x22, 407fc8 <set_file_variables@@Base+0x3f4>
  407fb8:	mov	x0, x22
  407fbc:	bl	40701c <ar_name@@Base>
  407fc0:	cbnz	w0, 407fdc <set_file_variables@@Base+0x408>
  407fc4:	b	407f5c <set_file_variables@@Base+0x388>
  407fc8:	ldr	x8, [x25, #16]
  407fcc:	ldr	x22, [x8]
  407fd0:	mov	x0, x22
  407fd4:	bl	40701c <ar_name@@Base>
  407fd8:	cbz	w0, 407f5c <set_file_variables@@Base+0x388>
  407fdc:	mov	w1, #0x28                  	// #40
  407fe0:	mov	x0, x22
  407fe4:	bl	406c80 <strchr@plt>
  407fe8:	add	x22, x0, #0x1
  407fec:	mov	x0, x22
  407ff0:	bl	406750 <strlen@plt>
  407ff4:	sub	x24, x0, #0x1
  407ff8:	b	407f68 <set_file_variables@@Base+0x394>
  407ffc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408000:	ldr	x2, [x8, #2544]
  408004:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  408008:	add	x24, x24, #0x9f0
  40800c:	b	408014 <set_file_variables@@Base+0x440>
  408010:	mov	x2, x20
  408014:	cmp	x20, x2
  408018:	cset	w8, hi  // hi = pmore
  40801c:	sub	x8, x20, x8
  408020:	strb	wzr, [x8]
  408024:	ldr	x8, [x19, #80]
  408028:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  40802c:	add	x0, x0, #0x37a
  408030:	mov	w1, #0x1                   	// #1
  408034:	ldr	x5, [x8, #8]
  408038:	mov	w3, #0x6                   	// #6
  40803c:	mov	w4, wzr
  408040:	mov	x6, xzr
  408044:	bl	423d70 <define_variable_in_set@@Base>
  408048:	ldr	x8, [x24, #40]
  40804c:	ldr	x22, [x24]
  408050:	ldr	x20, [x24, #16]
  408054:	cmp	x21, x8
  408058:	b.ls	40807c <set_file_variables@@Base+0x4a8>  // b.plast
  40805c:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  408060:	add	x24, x24, #0xa00
  408064:	mov	x0, x20
  408068:	mov	x1, x21
  40806c:	str	x21, [x24, #24]
  408070:	bl	419de0 <xrealloc@@Base>
  408074:	mov	x20, x0
  408078:	str	x0, [x24]
  40807c:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  408080:	add	x27, x27, #0x9f8
  408084:	ldr	x8, [x27, #24]
  408088:	ldr	x21, [x27]
  40808c:	cmp	x23, x8
  408090:	b.ls	4080ac <set_file_variables@@Base+0x4d8>  // b.plast
  408094:	mov	x0, x21
  408098:	mov	x1, x23
  40809c:	str	x23, [x27, #24]
  4080a0:	bl	419de0 <xrealloc@@Base>
  4080a4:	mov	x21, x0
  4080a8:	str	x0, [x27]
  4080ac:	adrp	x2, 408000 <set_file_variables@@Base+0x42c>
  4080b0:	adrp	x3, 408000 <set_file_variables@@Base+0x42c>
  4080b4:	adrp	x4, 408000 <set_file_variables@@Base+0x42c>
  4080b8:	add	x2, x2, #0x324
  4080bc:	add	x3, x3, #0x360
  4080c0:	add	x4, x4, #0x368
  4080c4:	sub	x0, x29, #0x58
  4080c8:	mov	w1, #0x1f4                 	// #500
  4080cc:	bl	410560 <hash_init@@Base>
  4080d0:	ldr	x23, [x19, #24]
  4080d4:	cbz	x23, 40824c <set_file_variables@@Base+0x678>
  4080d8:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  4080dc:	b	4080f4 <set_file_variables@@Base+0x520>
  4080e0:	sub	x0, x29, #0x58
  4080e4:	mov	x1, x23
  4080e8:	bl	41099c <hash_insert_at@@Base>
  4080ec:	ldr	x23, [x23]
  4080f0:	cbz	x23, 40814c <set_file_variables@@Base+0x578>
  4080f4:	ldrb	w8, [x23, #33]
  4080f8:	tst	w8, #0x18
  4080fc:	b.ne	4080ec <set_file_variables@@Base+0x518>  // b.any
  408100:	sub	x0, x29, #0x58
  408104:	mov	x1, x23
  408108:	bl	410784 <hash_find_slot@@Base>
  40810c:	ldr	x8, [x0]
  408110:	mov	x2, x0
  408114:	cbz	x8, 4080e0 <set_file_variables@@Base+0x50c>
  408118:	ldr	x9, [x24, #2328]
  40811c:	cmp	x8, x9
  408120:	b.eq	4080e0 <set_file_variables@@Base+0x50c>  // b.none
  408124:	ldrh	w10, [x23, #32]
  408128:	ldrh	w9, [x8, #32]
  40812c:	eor	w10, w9, w10
  408130:	tbz	w10, #9, 4080ec <set_file_variables@@Base+0x518>
  408134:	and	w9, w9, #0xfffffdff
  408138:	strh	w9, [x8, #32]
  40813c:	ldrh	w8, [x23, #32]
  408140:	and	w8, w8, #0xfffffdff
  408144:	strh	w8, [x23, #32]
  408148:	b	4080ec <set_file_variables@@Base+0x518>
  40814c:	ldr	x24, [x19, #24]
  408150:	cbz	x24, 40824c <set_file_variables@@Base+0x678>
  408154:	mov	w28, #0x20                  	// #32
  408158:	mov	x23, x22
  40815c:	b	408180 <set_file_variables@@Base+0x5ac>
  408160:	mov	x0, x21
  408164:	mov	x1, x25
  408168:	mov	x2, x26
  40816c:	bl	406710 <memcpy@plt>
  408170:	add	x21, x21, x26
  408174:	strb	w28, [x21], #1
  408178:	ldr	x24, [x24]
  40817c:	cbz	x24, 408250 <set_file_variables@@Base+0x67c>
  408180:	ldrb	w8, [x24, #33]
  408184:	tst	w8, #0x18
  408188:	b.ne	408178 <set_file_variables@@Base+0x5a4>  // b.any
  40818c:	sub	x0, x29, #0x58
  408190:	mov	x1, x24
  408194:	bl	410888 <hash_find_item@@Base>
  408198:	cmp	x0, x24
  40819c:	b.ne	408178 <set_file_variables@@Base+0x5a4>  // b.any
  4081a0:	ldr	x25, [x24, #8]
  4081a4:	cbz	x25, 4081dc <set_file_variables@@Base+0x608>
  4081a8:	mov	x0, x25
  4081ac:	bl	40701c <ar_name@@Base>
  4081b0:	cbz	w0, 4081f0 <set_file_variables@@Base+0x61c>
  4081b4:	mov	w1, #0x28                  	// #40
  4081b8:	mov	x0, x25
  4081bc:	bl	406c80 <strchr@plt>
  4081c0:	add	x25, x0, #0x1
  4081c4:	mov	x0, x25
  4081c8:	bl	406750 <strlen@plt>
  4081cc:	sub	x26, x0, #0x1
  4081d0:	ldrb	w8, [x24, #33]
  4081d4:	tbnz	w8, #1, 408160 <set_file_variables@@Base+0x58c>
  4081d8:	b	408204 <set_file_variables@@Base+0x630>
  4081dc:	ldr	x8, [x24, #16]
  4081e0:	ldr	x25, [x8]
  4081e4:	mov	x0, x25
  4081e8:	bl	40701c <ar_name@@Base>
  4081ec:	cbnz	w0, 4081b4 <set_file_variables@@Base+0x5e0>
  4081f0:	mov	x0, x25
  4081f4:	bl	406750 <strlen@plt>
  4081f8:	mov	x26, x0
  4081fc:	ldrb	w8, [x24, #33]
  408200:	tbnz	w8, #1, 408160 <set_file_variables@@Base+0x58c>
  408204:	mov	x0, x23
  408208:	mov	x1, x25
  40820c:	mov	x2, x26
  408210:	bl	406710 <memcpy@plt>
  408214:	add	x23, x23, x26
  408218:	strb	w28, [x23], #1
  40821c:	ldrb	w8, [x24, #33]
  408220:	tbnz	w8, #0, 408230 <set_file_variables@@Base+0x65c>
  408224:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408228:	ldr	w8, [x8, #3296]
  40822c:	cbz	w8, 408178 <set_file_variables@@Base+0x5a4>
  408230:	mov	x0, x20
  408234:	mov	x1, x25
  408238:	mov	x2, x26
  40823c:	bl	406710 <memcpy@plt>
  408240:	add	x20, x20, x26
  408244:	strb	w28, [x20], #1
  408248:	b	408178 <set_file_variables@@Base+0x5a4>
  40824c:	mov	x23, x22
  408250:	sub	x0, x29, #0x58
  408254:	mov	w1, wzr
  408258:	bl	410e88 <hash_free@@Base>
  40825c:	cmp	x23, x22
  408260:	cset	w8, hi  // hi = pmore
  408264:	sub	x8, x23, x8
  408268:	strb	wzr, [x8]
  40826c:	ldr	x8, [x19, #80]
  408270:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408274:	add	x0, x0, #0xdf3
  408278:	mov	w1, #0x1                   	// #1
  40827c:	ldr	x5, [x8, #8]
  408280:	mov	w3, #0x6                   	// #6
  408284:	mov	x2, x22
  408288:	mov	w4, wzr
  40828c:	mov	x6, xzr
  408290:	bl	423d70 <define_variable_in_set@@Base>
  408294:	ldr	x2, [x27, #8]
  408298:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  40829c:	add	x0, x0, #0x2c0
  4082a0:	mov	w1, #0x1                   	// #1
  4082a4:	cmp	x20, x2
  4082a8:	cset	w8, hi  // hi = pmore
  4082ac:	sub	x8, x20, x8
  4082b0:	strb	wzr, [x8]
  4082b4:	ldr	x8, [x19, #80]
  4082b8:	mov	w3, #0x6                   	// #6
  4082bc:	mov	w4, wzr
  4082c0:	mov	x6, xzr
  4082c4:	ldr	x5, [x8, #8]
  4082c8:	bl	423d70 <define_variable_in_set@@Base>
  4082cc:	ldr	x2, [x27]
  4082d0:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  4082d4:	add	x0, x0, #0xabd
  4082d8:	mov	w1, #0x1                   	// #1
  4082dc:	cmp	x21, x2
  4082e0:	cset	w8, hi  // hi = pmore
  4082e4:	sub	x8, x21, x8
  4082e8:	strb	wzr, [x8]
  4082ec:	ldr	x8, [x19, #80]
  4082f0:	mov	w3, #0x6                   	// #6
  4082f4:	mov	w4, wzr
  4082f8:	mov	x6, xzr
  4082fc:	ldr	x5, [x8, #8]
  408300:	bl	423d70 <define_variable_in_set@@Base>
  408304:	mov	sp, x29
  408308:	ldp	x20, x19, [sp, #80]
  40830c:	ldp	x22, x21, [sp, #64]
  408310:	ldp	x24, x23, [sp, #48]
  408314:	ldp	x26, x25, [sp, #32]
  408318:	ldp	x28, x27, [sp, #16]
  40831c:	ldp	x29, x30, [sp], #96
  408320:	ret
  408324:	stp	x29, x30, [sp, #-16]!
  408328:	mov	x8, x0
  40832c:	ldr	x0, [x0, #8]
  408330:	mov	x29, sp
  408334:	cbz	x0, 408348 <set_file_variables@@Base+0x774>
  408338:	bl	4112ec <jhash_string@@Base>
  40833c:	mov	w0, w0
  408340:	ldp	x29, x30, [sp], #16
  408344:	ret
  408348:	ldr	x8, [x8, #16]
  40834c:	ldr	x0, [x8]
  408350:	bl	4112ec <jhash_string@@Base>
  408354:	mov	w0, w0
  408358:	ldp	x29, x30, [sp], #16
  40835c:	ret
  408360:	mov	x0, xzr
  408364:	ret
  408368:	mov	x8, x0
  40836c:	ldr	x0, [x0, #8]
  408370:	cbz	x0, 408384 <set_file_variables@@Base+0x7b0>
  408374:	ldr	x8, [x1, #8]
  408378:	cbz	x8, 408394 <set_file_variables@@Base+0x7c0>
  40837c:	mov	x1, x8
  408380:	b	406c10 <strcmp@plt>
  408384:	ldr	x8, [x8, #16]
  408388:	ldr	x0, [x8]
  40838c:	ldr	x8, [x1, #8]
  408390:	cbnz	x8, 40837c <set_file_variables@@Base+0x7a8>
  408394:	ldr	x8, [x1, #16]
  408398:	ldr	x8, [x8]
  40839c:	mov	x1, x8
  4083a0:	b	406c10 <strcmp@plt>

00000000004083a4 <chop_commands@@Base>:
  4083a4:	stp	x29, x30, [sp, #-96]!
  4083a8:	stp	x28, x27, [sp, #16]
  4083ac:	stp	x26, x25, [sp, #32]
  4083b0:	stp	x24, x23, [sp, #48]
  4083b4:	stp	x22, x21, [sp, #64]
  4083b8:	stp	x20, x19, [sp, #80]
  4083bc:	mov	x29, sp
  4083c0:	cbz	x0, 4083d0 <chop_commands@@Base+0x2c>
  4083c4:	ldr	x8, [x0, #32]
  4083c8:	mov	x19, x0
  4083cc:	cbz	x8, 4083ec <chop_commands@@Base+0x48>
  4083d0:	ldp	x20, x19, [sp, #80]
  4083d4:	ldp	x22, x21, [sp, #64]
  4083d8:	ldp	x24, x23, [sp, #48]
  4083dc:	ldp	x26, x25, [sp, #32]
  4083e0:	ldp	x28, x27, [sp, #16]
  4083e4:	ldp	x29, x30, [sp], #96
  4083e8:	ret
  4083ec:	adrp	x8, 442000 <just_print_flag@@Base>
  4083f0:	ldr	w8, [x8, #60]
  4083f4:	cbz	w8, 408440 <chop_commands@@Base+0x9c>
  4083f8:	ldr	x0, [x19, #24]
  4083fc:	bl	406750 <strlen@plt>
  408400:	mov	x21, x0
  408404:	mov	w0, #0x8                   	// #8
  408408:	bl	419e14 <xmalloc@@Base>
  40840c:	ldr	x8, [x19, #24]
  408410:	mov	x20, x0
  408414:	mov	x0, x8
  408418:	bl	419e60 <xstrdup@@Base>
  40841c:	str	x0, [x20]
  408420:	cbz	x21, 408438 <chop_commands@@Base+0x94>
  408424:	sub	x8, x21, #0x1
  408428:	ldrb	w9, [x0, x8]
  40842c:	cmp	w9, #0xa
  408430:	b.ne	408438 <chop_commands@@Base+0x94>  // b.any
  408434:	strb	wzr, [x0, x8]
  408438:	mov	w21, #0x1                   	// #1
  40843c:	b	408588 <chop_commands@@Base+0x1e4>
  408440:	mov	w0, #0x28                  	// #40
  408444:	bl	419e14 <xmalloc@@Base>
  408448:	ldr	x22, [x19, #24]
  40844c:	mov	x20, x0
  408450:	ldrb	w8, [x22]
  408454:	cbz	w8, 408534 <chop_commands@@Base+0x190>
  408458:	mov	w24, wzr
  40845c:	mov	w21, #0x5                   	// #5
  408460:	b	408498 <chop_commands@@Base+0xf4>
  408464:	sub	x1, x23, x22
  408468:	mov	x0, x22
  40846c:	bl	419e7c <xstrndup@@Base>
  408470:	and	x8, x24, #0xffff
  408474:	str	x0, [x20, x8, lsl #3]
  408478:	mov	x8, x23
  40847c:	ldrb	w9, [x8], #1
  408480:	cmp	w9, #0x0
  408484:	csel	x22, x23, x8, eq  // eq = none
  408488:	ldrb	w9, [x22]
  40848c:	add	w8, w24, #0x1
  408490:	mov	w24, w8
  408494:	cbz	w9, 408538 <chop_commands@@Base+0x194>
  408498:	mov	w1, #0xa                   	// #10
  40849c:	mov	x0, x22
  4084a0:	bl	406c80 <strchr@plt>
  4084a4:	mov	x23, x0
  4084a8:	cbz	x0, 408508 <chop_commands@@Base+0x164>
  4084ac:	cmp	x23, x22
  4084b0:	b.ls	408514 <chop_commands@@Base+0x170>  // b.plast
  4084b4:	ldurb	w8, [x23, #-1]
  4084b8:	cmp	w8, #0x5c
  4084bc:	b.ne	408514 <chop_commands@@Base+0x170>  // b.any
  4084c0:	sub	x8, x23, #0x2
  4084c4:	mov	w9, #0x1                   	// #1
  4084c8:	cmp	x8, x22
  4084cc:	b.cc	4084f0 <chop_commands@@Base+0x14c>  // b.lo, b.ul, b.last
  4084d0:	ldrb	w10, [x8]
  4084d4:	cmp	w10, #0x5c
  4084d8:	b.ne	4084f0 <chop_commands@@Base+0x14c>  // b.any
  4084dc:	cmp	w9, #0x0
  4084e0:	sub	x8, x8, #0x1
  4084e4:	cset	w9, eq  // eq = none
  4084e8:	cmp	x8, x22
  4084ec:	b.cs	4084d0 <chop_commands@@Base+0x12c>  // b.hs, b.nlast
  4084f0:	cbz	w9, 408514 <chop_commands@@Base+0x170>
  4084f4:	add	x0, x23, #0x1
  4084f8:	mov	w1, #0xa                   	// #10
  4084fc:	bl	406c80 <strchr@plt>
  408500:	mov	x23, x0
  408504:	cbnz	x0, 4084ac <chop_commands@@Base+0x108>
  408508:	mov	x0, x22
  40850c:	bl	406750 <strlen@plt>
  408510:	add	x23, x22, x0
  408514:	cmp	w21, w24, uxth
  408518:	b.ne	408464 <chop_commands@@Base+0xc0>  // b.any
  40851c:	add	w21, w21, #0x2
  408520:	lsl	x1, x21, #3
  408524:	mov	x0, x20
  408528:	bl	419de0 <xrealloc@@Base>
  40852c:	mov	x20, x0
  408530:	b	408464 <chop_commands@@Base+0xc0>
  408534:	mov	w21, #0x5                   	// #5
  408538:	and	w22, w8, #0xffff
  40853c:	cmp	w21, w22
  408540:	b.ne	408574 <chop_commands@@Base+0x1d0>  // b.any
  408544:	cmp	w21, #0x10, lsl #12
  408548:	b.cc	408588 <chop_commands@@Base+0x1e4>  // b.lo, b.ul, b.last
  40854c:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408550:	add	x1, x1, #0xabf
  408554:	mov	w2, #0x5                   	// #5
  408558:	mov	x0, xzr
  40855c:	bl	406dc0 <dcgettext@plt>
  408560:	mov	x2, x0
  408564:	mov	w1, #0x14                  	// #20
  408568:	mov	x0, x19
  40856c:	mov	w3, w21
  408570:	bl	41aff0 <fatal@@Base>
  408574:	lsl	x1, x22, #3
  408578:	mov	x0, x20
  40857c:	bl	419de0 <xrealloc@@Base>
  408580:	mov	x20, x0
  408584:	mov	w21, w22
  408588:	ldrb	w8, [x19, #51]
  40858c:	mov	w0, w21
  408590:	strh	w21, [x19, #48]
  408594:	str	x20, [x19, #32]
  408598:	and	w8, w8, #0xfe
  40859c:	strb	w8, [x19, #51]
  4085a0:	bl	419e14 <xmalloc@@Base>
  4085a4:	str	x0, [x19, #40]
  4085a8:	cbz	w21, 4083d0 <chop_commands@@Base+0x2c>
  4085ac:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  4085b0:	adrp	x22, 427000 <jobserver_post_child@@Base+0xcc>
  4085b4:	mov	w27, #0x5                   	// #5
  4085b8:	mov	w9, wzr
  4085bc:	add	x25, x25, #0xcf0
  4085c0:	add	x22, x22, #0xadf
  4085c4:	mov	w26, #0x1                   	// #1
  4085c8:	movk	w27, #0x20, lsl #16
  4085cc:	and	x28, x9, #0xffff
  4085d0:	ldr	x24, [x20, x28, lsl #3]
  4085d4:	mov	w23, wzr
  4085d8:	ldrb	w8, [x24]
  4085dc:	ldrh	w9, [x25, x8, lsl #1]
  4085e0:	tbnz	w9, #1, 4085fc <chop_commands@@Base+0x258>
  4085e4:	sub	w9, w8, #0x2b
  4085e8:	cmp	w9, #0x15
  4085ec:	b.hi	40863c <chop_commands@@Base+0x298>  // b.pmore
  4085f0:	lsl	w9, w26, w9
  4085f4:	tst	w9, w27
  4085f8:	b.eq	40863c <chop_commands@@Base+0x298>  // b.none
  4085fc:	cmp	w8, #0x2b
  408600:	add	x24, x24, #0x1
  408604:	b.eq	408630 <chop_commands@@Base+0x28c>  // b.none
  408608:	cmp	w8, #0x2d
  40860c:	b.eq	408624 <chop_commands@@Base+0x280>  // b.none
  408610:	cmp	w8, #0x40
  408614:	b.ne	4085d8 <chop_commands@@Base+0x234>  // b.any
  408618:	mov	w8, #0x2                   	// #2
  40861c:	orr	w23, w23, w8
  408620:	b	4085d8 <chop_commands@@Base+0x234>
  408624:	mov	w8, #0x4                   	// #4
  408628:	orr	w23, w23, w8
  40862c:	b	4085d8 <chop_commands@@Base+0x234>
  408630:	mov	w8, #0x1                   	// #1
  408634:	orr	w23, w23, w8
  408638:	b	4085d8 <chop_commands@@Base+0x234>
  40863c:	tbnz	w23, #0, 408668 <chop_commands@@Base+0x2c4>
  408640:	mov	x0, x24
  408644:	mov	x1, x22
  408648:	bl	406db0 <strstr@plt>
  40864c:	cbnz	x0, 408664 <chop_commands@@Base+0x2c0>
  408650:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408654:	mov	x0, x24
  408658:	add	x1, x1, #0xae7
  40865c:	bl	406db0 <strstr@plt>
  408660:	cbz	x0, 408690 <chop_commands@@Base+0x2ec>
  408664:	orr	w23, w23, #0x1
  408668:	mov	w8, #0x1                   	// #1
  40866c:	ldr	x9, [x19, #40]
  408670:	strb	w23, [x9, x28]
  408674:	ldrb	w10, [x19, #51]
  408678:	add	w9, w28, #0x1
  40867c:	cmp	w21, w9, uxth
  408680:	orr	w8, w10, w8
  408684:	strb	w8, [x19, #51]
  408688:	b.hi	4085cc <chop_commands@@Base+0x228>  // b.pmore
  40868c:	b	4083d0 <chop_commands@@Base+0x2c>
  408690:	mov	w8, wzr
  408694:	b	40866c <chop_commands@@Base+0x2c8>

0000000000408698 <execute_file_commands@@Base>:
  408698:	stp	x29, x30, [sp, #-32]!
  40869c:	ldr	x8, [x0, #32]
  4086a0:	str	x19, [sp, #16]
  4086a4:	mov	x19, x0
  4086a8:	mov	x29, sp
  4086ac:	ldr	x8, [x8, #24]
  4086b0:	ldrb	w12, [x8]
  4086b4:	cbz	w12, 40873c <execute_file_commands@@Base+0xa4>
  4086b8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4086bc:	mov	w11, #0x5                   	// #5
  4086c0:	add	x8, x8, #0x1
  4086c4:	add	x9, x9, #0xcf0
  4086c8:	mov	w10, #0x1                   	// #1
  4086cc:	movk	w11, #0x20, lsl #16
  4086d0:	b	4086dc <execute_file_commands@@Base+0x44>
  4086d4:	ldrb	w12, [x8], #1
  4086d8:	cbz	w12, 40873c <execute_file_commands@@Base+0xa4>
  4086dc:	and	x13, x12, #0xff
  4086e0:	ldrh	w13, [x9, x13, lsl #1]
  4086e4:	tst	w13, #0x6
  4086e8:	b.ne	4086d4 <execute_file_commands@@Base+0x3c>  // b.any
  4086ec:	and	w12, w12, #0xff
  4086f0:	sub	w12, w12, #0x2b
  4086f4:	cmp	w12, #0x15
  4086f8:	b.hi	408708 <execute_file_commands@@Base+0x70>  // b.pmore
  4086fc:	lsl	w12, w10, w12
  408700:	tst	w12, w11
  408704:	b.ne	4086d4 <execute_file_commands@@Base+0x3c>  // b.any
  408708:	mov	x0, x19
  40870c:	mov	w1, wzr
  408710:	bl	424334 <initialize_file_variables@@Base>
  408714:	mov	x0, x19
  408718:	bl	407bd4 <set_file_variables@@Base>
  40871c:	ldrb	w8, [x19, #136]
  408720:	tbz	w8, #6, 40872c <execute_file_commands@@Base+0x94>
  408724:	ldr	x0, [x19]
  408728:	bl	415db8 <unload_file@@Base>
  40872c:	mov	x0, x19
  408730:	ldr	x19, [sp, #16]
  408734:	ldp	x29, x30, [sp], #32
  408738:	b	413f08 <new_job@@Base>
  40873c:	mov	w1, #0x2                   	// #2
  408740:	mov	x0, x19
  408744:	bl	40c0c8 <set_command_state@@Base>
  408748:	ldr	w8, [x19, #136]
  40874c:	mov	x0, x19
  408750:	and	w8, w8, #0xfffffffc
  408754:	str	w8, [x19, #136]
  408758:	ldr	x19, [sp, #16]
  40875c:	ldp	x29, x30, [sp], #32
  408760:	b	4218c0 <notice_finished_file@@Base>

0000000000408764 <fatal_error_signal@@Base>:
  408764:	stp	x29, x30, [sp, #-48]!
  408768:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40876c:	mov	w9, #0x1                   	// #1
  408770:	mov	x1, xzr
  408774:	stp	x22, x21, [sp, #16]
  408778:	stp	x20, x19, [sp, #32]
  40877c:	mov	x29, sp
  408780:	mov	w19, w0
  408784:	str	w9, [x8, #2536]
  408788:	bl	406940 <signal@plt>
  40878c:	cmp	w19, #0xf
  408790:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  408794:	b.ne	4087cc <fatal_error_signal@@Base+0x68>  // b.any
  408798:	ldr	x20, [x21, #3040]
  40879c:	cbnz	x20, 4087ac <fatal_error_signal@@Base+0x48>
  4087a0:	b	40882c <fatal_error_signal@@Base+0xc8>
  4087a4:	ldr	x20, [x20, #32]
  4087a8:	cbz	x20, 4087cc <fatal_error_signal@@Base+0x68>
  4087ac:	ldrb	w8, [x20, #80]
  4087b0:	tbnz	w8, #0, 4087a4 <fatal_error_signal@@Base+0x40>
  4087b4:	ldr	w0, [x20, #76]
  4087b8:	cmp	w0, #0x1
  4087bc:	b.lt	4087a4 <fatal_error_signal@@Base+0x40>  // b.tstop
  4087c0:	mov	w1, #0xf                   	// #15
  4087c4:	bl	4068a0 <kill@plt>
  4087c8:	b	4087a4 <fatal_error_signal@@Base+0x40>
  4087cc:	cmp	w19, #0x3
  4087d0:	cset	w20, eq  // eq = none
  4087d4:	cmp	w19, #0xf
  4087d8:	b.hi	4088d4 <fatal_error_signal@@Base+0x170>  // b.pmore
  4087dc:	mov	w8, #0x1                   	// #1
  4087e0:	lsl	w8, w8, w19
  4087e4:	mov	w9, #0x800e                	// #32782
  4087e8:	tst	w8, w9
  4087ec:	b.eq	4088d4 <fatal_error_signal@@Base+0x170>  // b.none
  4087f0:	ldr	x22, [x21, #3040]
  4087f4:	cbnz	x22, 408804 <fatal_error_signal@@Base+0xa0>
  4087f8:	b	40882c <fatal_error_signal@@Base+0xc8>
  4087fc:	ldr	x22, [x22, #32]
  408800:	cbz	x22, 408824 <fatal_error_signal@@Base+0xc0>
  408804:	ldrb	w8, [x22, #80]
  408808:	tbz	w8, #0, 4087fc <fatal_error_signal@@Base+0x98>
  40880c:	ldr	w0, [x22, #76]
  408810:	cmp	w0, #0x1
  408814:	b.lt	4087fc <fatal_error_signal@@Base+0x98>  // b.tstop
  408818:	mov	w1, w19
  40881c:	bl	4272a8 <remote_kill@@Base>
  408820:	b	4087fc <fatal_error_signal@@Base+0x98>
  408824:	ldr	x21, [x21, #3040]
  408828:	cbnz	x21, 40888c <fatal_error_signal@@Base+0x128>
  40882c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  408830:	ldr	w8, [x21, #3048]
  408834:	cbz	w8, 40884c <fatal_error_signal@@Base+0xe8>
  408838:	mov	w0, #0x1                   	// #1
  40883c:	mov	w1, wzr
  408840:	bl	412c28 <reap_children@@Base>
  408844:	ldr	w8, [x21, #3048]
  408848:	cbnz	w8, 408838 <fatal_error_signal@@Base+0xd4>
  40884c:	mov	w0, #0x1                   	// #1
  408850:	bl	40b054 <remove_intermediates@@Base>
  408854:	cbnz	w20, 4088f8 <fatal_error_signal@@Base+0x194>
  408858:	bl	406960 <getpid@plt>
  40885c:	mov	w1, w19
  408860:	bl	4068a0 <kill@plt>
  408864:	tbnz	w0, #31, 408900 <fatal_error_signal@@Base+0x19c>
  408868:	ldp	x20, x19, [sp, #32]
  40886c:	ldp	x22, x21, [sp, #16]
  408870:	ldp	x29, x30, [sp], #48
  408874:	ret
  408878:	ldrb	w8, [x21, #80]
  40887c:	orr	w8, w8, #0x8
  408880:	strb	w8, [x21, #80]
  408884:	ldr	x21, [x21, #32]
  408888:	cbz	x21, 40882c <fatal_error_signal@@Base+0xc8>
  40888c:	ldrb	w8, [x21, #80]
  408890:	tbnz	w8, #3, 408884 <fatal_error_signal@@Base+0x120>
  408894:	ldr	w8, [x21, #76]
  408898:	tbnz	w8, #31, 408884 <fatal_error_signal@@Base+0x120>
  40889c:	ldr	x0, [x21, #40]
  4088a0:	mov	x1, xzr
  4088a4:	bl	408978 <delete_child_targets@@Base+0x6c>
  4088a8:	ldr	x8, [x21, #40]
  4088ac:	ldr	x22, [x8, #48]
  4088b0:	cbnz	x22, 4088bc <fatal_error_signal@@Base+0x158>
  4088b4:	b	408878 <fatal_error_signal@@Base+0x114>
  4088b8:	ldr	x8, [x21, #40]
  4088bc:	ldr	x0, [x22, #16]
  4088c0:	ldr	x1, [x8]
  4088c4:	bl	408978 <delete_child_targets@@Base+0x6c>
  4088c8:	ldr	x22, [x22]
  4088cc:	cbnz	x22, 4088b8 <fatal_error_signal@@Base+0x154>
  4088d0:	b	408878 <fatal_error_signal@@Base+0x114>
  4088d4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4088d8:	ldr	w8, [x21, #3048]
  4088dc:	cbz	w8, 40884c <fatal_error_signal@@Base+0xe8>
  4088e0:	mov	w0, #0x1                   	// #1
  4088e4:	mov	w1, #0x1                   	// #1
  4088e8:	bl	412c28 <reap_children@@Base>
  4088ec:	ldr	w8, [x21, #3048]
  4088f0:	cbnz	w8, 4088e0 <fatal_error_signal@@Base+0x17c>
  4088f4:	b	40884c <fatal_error_signal@@Base+0xe8>
  4088f8:	mov	w0, #0x1                   	// #1
  4088fc:	bl	406770 <exit@plt>
  408900:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408904:	add	x0, x0, #0xaef
  408908:	bl	41a2bc <pfatal_with_name@@Base>

000000000040890c <delete_child_targets@@Base>:
  40890c:	stp	x29, x30, [sp, #-32]!
  408910:	stp	x20, x19, [sp, #16]
  408914:	ldrb	w8, [x0, #80]
  408918:	mov	x29, sp
  40891c:	tbnz	w8, #3, 40896c <delete_child_targets@@Base+0x60>
  408920:	ldr	w8, [x0, #76]
  408924:	mov	x19, x0
  408928:	tbnz	w8, #31, 40896c <delete_child_targets@@Base+0x60>
  40892c:	ldr	x0, [x19, #40]
  408930:	mov	x1, xzr
  408934:	bl	408978 <delete_child_targets@@Base+0x6c>
  408938:	ldr	x8, [x19, #40]
  40893c:	ldr	x20, [x8, #48]
  408940:	cbz	x20, 408960 <delete_child_targets@@Base+0x54>
  408944:	ldr	x0, [x20, #16]
  408948:	ldr	x1, [x8]
  40894c:	bl	408978 <delete_child_targets@@Base+0x6c>
  408950:	ldr	x20, [x20]
  408954:	cbz	x20, 408960 <delete_child_targets@@Base+0x54>
  408958:	ldr	x8, [x19, #40]
  40895c:	b	408944 <delete_child_targets@@Base+0x38>
  408960:	ldrb	w8, [x19, #80]
  408964:	orr	w8, w8, #0x8
  408968:	strb	w8, [x19, #80]
  40896c:	ldp	x20, x19, [sp, #16]
  408970:	ldp	x29, x30, [sp], #32
  408974:	ret
  408978:	sub	sp, sp, #0xb0
  40897c:	stp	x29, x30, [sp, #128]
  408980:	stp	x20, x19, [sp, #160]
  408984:	ldrh	w8, [x0, #136]
  408988:	str	x21, [sp, #144]
  40898c:	add	x29, sp, #0x80
  408990:	tst	w8, #0x20202020
  408994:	b.eq	4089ac <delete_child_targets@@Base+0xa0>  // b.none
  408998:	ldp	x20, x19, [sp, #160]
  40899c:	ldr	x21, [sp, #144]
  4089a0:	ldp	x29, x30, [sp, #128]
  4089a4:	add	sp, sp, #0xb0
  4089a8:	ret
  4089ac:	mov	x19, x0
  4089b0:	ldr	x0, [x0]
  4089b4:	mov	x20, x1
  4089b8:	bl	40701c <ar_name@@Base>
  4089bc:	cbz	w0, 408a44 <delete_child_targets@@Base+0x138>
  4089c0:	ldr	x8, [x19, #112]
  4089c4:	ldr	x0, [x19]
  4089c8:	sub	x9, x8, #0x3
  4089cc:	lsr	x9, x9, #30
  4089d0:	cmp	x8, #0x1
  4089d4:	csinv	x21, x9, xzr, ne  // ne = any
  4089d8:	bl	407120 <ar_member_date@@Base>
  4089dc:	cmp	x0, x21
  4089e0:	b.eq	408998 <delete_child_targets@@Base+0x8c>  // b.none
  4089e4:	cbz	x20, 408ad8 <delete_child_targets@@Base+0x1cc>
  4089e8:	mov	x0, x20
  4089ec:	bl	406750 <strlen@plt>
  4089f0:	ldr	x8, [x19]
  4089f4:	mov	x21, x0
  4089f8:	mov	x0, x8
  4089fc:	bl	406750 <strlen@plt>
  408a00:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408a04:	add	x21, x0, x21
  408a08:	add	x1, x1, #0xb37
  408a0c:	mov	w2, #0x5                   	// #5
  408a10:	mov	x0, xzr
  408a14:	bl	406dc0 <dcgettext@plt>
  408a18:	ldr	x4, [x19]
  408a1c:	mov	x2, x0
  408a20:	mov	x0, xzr
  408a24:	mov	x1, x21
  408a28:	mov	x3, x20
  408a2c:	bl	41ae34 <error@@Base>
  408a30:	b	408998 <delete_child_targets@@Base+0x8c>
  408a34:	bl	406e70 <__errno_location@plt>
  408a38:	ldr	w8, [x0]
  408a3c:	cmp	w8, #0x4
  408a40:	b.ne	408998 <delete_child_targets@@Base+0x8c>  // b.any
  408a44:	ldr	x1, [x19]
  408a48:	mov	x2, sp
  408a4c:	mov	w0, wzr
  408a50:	bl	406e90 <__xstat@plt>
  408a54:	cmn	w0, #0x1
  408a58:	b.eq	408a34 <delete_child_targets@@Base+0x128>  // b.none
  408a5c:	cbnz	w0, 408998 <delete_child_targets@@Base+0x8c>
  408a60:	ldr	w8, [sp, #16]
  408a64:	and	w8, w8, #0xf000
  408a68:	cmp	w8, #0x8, lsl #12
  408a6c:	b.ne	408998 <delete_child_targets@@Base+0x8c>  // b.any
  408a70:	ldr	x0, [x19]
  408a74:	ldp	x1, x2, [sp, #88]
  408a78:	bl	40c114 <file_timestamp_cons@@Base>
  408a7c:	ldr	x8, [x19, #112]
  408a80:	cmp	x0, x8
  408a84:	b.eq	408998 <delete_child_targets@@Base+0x8c>  // b.none
  408a88:	cbz	x20, 408b10 <delete_child_targets@@Base+0x204>
  408a8c:	mov	x0, x20
  408a90:	bl	406750 <strlen@plt>
  408a94:	ldr	x8, [x19]
  408a98:	mov	x21, x0
  408a9c:	mov	x0, x8
  408aa0:	bl	406750 <strlen@plt>
  408aa4:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408aa8:	add	x21, x0, x21
  408aac:	add	x1, x1, #0xba0
  408ab0:	mov	w2, #0x5                   	// #5
  408ab4:	mov	x0, xzr
  408ab8:	bl	406dc0 <dcgettext@plt>
  408abc:	ldr	x4, [x19]
  408ac0:	mov	x2, x0
  408ac4:	mov	x0, xzr
  408ac8:	mov	x1, x21
  408acc:	mov	x3, x20
  408ad0:	bl	41ae34 <error@@Base>
  408ad4:	b	408b44 <delete_child_targets@@Base+0x238>
  408ad8:	ldr	x0, [x19]
  408adc:	bl	406750 <strlen@plt>
  408ae0:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408ae4:	mov	x20, x0
  408ae8:	add	x1, x1, #0xb6e
  408aec:	mov	w2, #0x5                   	// #5
  408af0:	mov	x0, xzr
  408af4:	bl	406dc0 <dcgettext@plt>
  408af8:	ldr	x3, [x19]
  408afc:	mov	x2, x0
  408b00:	mov	x0, xzr
  408b04:	mov	x1, x20
  408b08:	bl	41ae34 <error@@Base>
  408b0c:	b	408998 <delete_child_targets@@Base+0x8c>
  408b10:	ldr	x0, [x19]
  408b14:	bl	406750 <strlen@plt>
  408b18:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408b1c:	mov	x20, x0
  408b20:	add	x1, x1, #0xbbc
  408b24:	mov	w2, #0x5                   	// #5
  408b28:	mov	x0, xzr
  408b2c:	bl	406dc0 <dcgettext@plt>
  408b30:	ldr	x3, [x19]
  408b34:	mov	x2, x0
  408b38:	mov	x0, xzr
  408b3c:	mov	x1, x20
  408b40:	bl	41ae34 <error@@Base>
  408b44:	ldr	x0, [x19]
  408b48:	bl	406eb0 <unlink@plt>
  408b4c:	tbz	w0, #31, 408998 <delete_child_targets@@Base+0x8c>
  408b50:	bl	406e70 <__errno_location@plt>
  408b54:	ldr	w8, [x0]
  408b58:	cmp	w8, #0x2
  408b5c:	b.eq	408998 <delete_child_targets@@Base+0x8c>  // b.none
  408b60:	ldr	x1, [x19]
  408b64:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408b68:	add	x0, x0, #0xbd3
  408b6c:	bl	41b1c0 <perror_with_name@@Base>
  408b70:	b	408998 <delete_child_targets@@Base+0x8c>

0000000000408b74 <print_commands@@Base>:
  408b74:	stp	x29, x30, [sp, #-48]!
  408b78:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408b7c:	stp	x20, x19, [sp, #32]
  408b80:	mov	x19, x0
  408b84:	add	x1, x1, #0xaf4
  408b88:	mov	w2, #0x5                   	// #5
  408b8c:	mov	x0, xzr
  408b90:	str	x21, [sp, #16]
  408b94:	mov	x29, sp
  408b98:	bl	406dc0 <dcgettext@plt>
  408b9c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408ba0:	ldr	x1, [x8, #2504]
  408ba4:	bl	406760 <fputs@plt>
  408ba8:	ldr	x8, [x19]
  408bac:	cbz	x8, 408bdc <print_commands@@Base+0x68>
  408bb0:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408bb4:	add	x1, x1, #0xb16
  408bb8:	mov	w2, #0x5                   	// #5
  408bbc:	mov	x0, xzr
  408bc0:	bl	406dc0 <dcgettext@plt>
  408bc4:	ldp	x1, x2, [x19]
  408bc8:	bl	406e60 <printf@plt>
  408bcc:	ldr	x3, [x19, #24]
  408bd0:	ldrb	w8, [x3]
  408bd4:	cbnz	w8, 408c00 <print_commands@@Base+0x8c>
  408bd8:	b	408c74 <print_commands@@Base+0x100>
  408bdc:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  408be0:	add	x1, x1, #0xb09
  408be4:	mov	w2, #0x5                   	// #5
  408be8:	mov	x0, xzr
  408bec:	bl	406dc0 <dcgettext@plt>
  408bf0:	bl	406ba0 <puts@plt>
  408bf4:	ldr	x3, [x19, #24]
  408bf8:	ldrb	w8, [x3]
  408bfc:	cbz	w8, 408c74 <print_commands@@Base+0x100>
  408c00:	adrp	x19, 427000 <jobserver_post_child@@Base+0xcc>
  408c04:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  408c08:	add	x19, x19, #0xb2f
  408c0c:	b	408c38 <print_commands@@Base+0xc4>
  408c10:	ldrb	w1, [x20, #2376]
  408c14:	sub	w2, w21, w3
  408c18:	mov	x0, x19
  408c1c:	bl	406e60 <printf@plt>
  408c20:	mov	x8, x21
  408c24:	ldrb	w9, [x8], #1
  408c28:	cmp	w9, #0xa
  408c2c:	csel	x3, x21, x8, ne  // ne = any
  408c30:	ldrb	w8, [x3]
  408c34:	cbz	w8, 408c74 <print_commands@@Base+0x100>
  408c38:	mov	w9, wzr
  408c3c:	mov	x21, x3
  408c40:	b	408c60 <print_commands@@Base+0xec>
  408c44:	cmp	w9, #0x0
  408c48:	ldrb	w8, [x21, #1]!
  408c4c:	cset	w9, eq  // eq = none
  408c50:	cmp	w10, #0x5c
  408c54:	cset	w10, eq  // eq = none
  408c58:	and	w9, w10, w9
  408c5c:	cbz	w8, 408c10 <print_commands@@Base+0x9c>
  408c60:	and	w10, w8, #0xff
  408c64:	cmp	w10, #0xa
  408c68:	b.ne	408c44 <print_commands@@Base+0xd0>  // b.any
  408c6c:	cbnz	w9, 408c44 <print_commands@@Base+0xd0>
  408c70:	b	408c10 <print_commands@@Base+0x9c>
  408c74:	ldp	x20, x19, [sp, #32]
  408c78:	ldr	x21, [sp, #16]
  408c7c:	ldp	x29, x30, [sp], #48
  408c80:	ret

0000000000408c84 <set_default_suffixes@@Base>:
  408c84:	stp	x29, x30, [sp, #-32]!
  408c88:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408c8c:	add	x0, x0, #0xab3
  408c90:	str	x19, [sp, #16]
  408c94:	mov	x29, sp
  408c98:	bl	423690 <strcache_add@@Base>
  408c9c:	bl	40ab6c <enter_file@@Base>
  408ca0:	adrp	x19, 442000 <just_print_flag@@Base>
  408ca4:	str	x0, [x19, #216]
  408ca8:	ldr	w8, [x0, #136]
  408cac:	orr	w8, w8, #0x10
  408cb0:	str	w8, [x0, #136]
  408cb4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408cb8:	ldr	w8, [x8, #3264]
  408cbc:	cbz	w8, 408cf8 <set_default_suffixes@@Base+0x74>
  408cc0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408cc4:	ldr	x8, [x8, #2424]
  408cc8:	ldr	x19, [sp, #16]
  408ccc:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408cd0:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  408cd4:	ldr	x5, [x8, #8]
  408cd8:	add	x0, x0, #0xab4
  408cdc:	add	x2, x2, #0x3a9
  408ce0:	mov	w1, #0x8                   	// #8
  408ce4:	mov	w3, wzr
  408ce8:	mov	w4, wzr
  408cec:	mov	x6, xzr
  408cf0:	ldp	x29, x30, [sp], #32
  408cf4:	b	423d70 <define_variable_in_set@@Base>
  408cf8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408cfc:	add	x8, x8, #0x410
  408d00:	add	x0, x29, #0x18
  408d04:	mov	w1, #0x28                  	// #40
  408d08:	mov	w2, #0x1                   	// #1
  408d0c:	mov	x3, xzr
  408d10:	mov	w4, wzr
  408d14:	str	x8, [x29, #24]
  408d18:	bl	41def0 <parse_file_seq@@Base>
  408d1c:	mov	x1, xzr
  408d20:	bl	40b3dc <enter_prereqs@@Base>
  408d24:	ldr	x8, [x19, #216]
  408d28:	str	x0, [x8, #24]
  408d2c:	cbz	x0, 408d48 <set_default_suffixes@@Base+0xc4>
  408d30:	ldr	x8, [x0, #16]
  408d34:	ldr	w9, [x8, #136]
  408d38:	orr	w9, w9, #0x10
  408d3c:	str	w9, [x8, #136]
  408d40:	ldr	x0, [x0]
  408d44:	cbnz	x0, 408d30 <set_default_suffixes@@Base+0xac>
  408d48:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408d4c:	ldr	x8, [x8, #2424]
  408d50:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408d54:	adrp	x2, 43e000 <memcpy@GLIBC_2.17>
  408d58:	add	x0, x0, #0xab4
  408d5c:	ldr	x5, [x8, #8]
  408d60:	add	x2, x2, #0x410
  408d64:	mov	w1, #0x8                   	// #8
  408d68:	mov	w3, wzr
  408d6c:	mov	w4, wzr
  408d70:	mov	x6, xzr
  408d74:	bl	423d70 <define_variable_in_set@@Base>
  408d78:	ldr	x19, [sp, #16]
  408d7c:	ldp	x29, x30, [sp], #32
  408d80:	ret

0000000000408d84 <install_default_suffix_rules@@Base>:
  408d84:	stp	x29, x30, [sp, #-48]!
  408d88:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408d8c:	ldr	w8, [x8, #3264]
  408d90:	str	x21, [sp, #16]
  408d94:	stp	x20, x19, [sp, #32]
  408d98:	mov	x29, sp
  408d9c:	cbnz	w8, 408df8 <install_default_suffix_rules@@Base+0x74>
  408da0:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  408da4:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  408da8:	add	x0, x0, #0xeba
  408dac:	add	x20, x20, #0xaa8
  408db0:	mov	w21, #0x9                   	// #9
  408db4:	bl	423690 <strcache_add@@Base>
  408db8:	bl	40ab6c <enter_file@@Base>
  408dbc:	mov	x19, x0
  408dc0:	mov	w0, #0x38                  	// #56
  408dc4:	bl	419e14 <xmalloc@@Base>
  408dc8:	str	x0, [x19, #32]
  408dcc:	str	xzr, [x0]
  408dd0:	ldur	x0, [x20, #-8]
  408dd4:	bl	419e60 <xstrdup@@Base>
  408dd8:	ldr	x8, [x19, #32]
  408ddc:	stp	x0, xzr, [x8, #24]
  408de0:	strb	w21, [x8, #50]
  408de4:	ldr	w8, [x19, #136]
  408de8:	orr	w8, w8, #0x10
  408dec:	str	w8, [x19, #136]
  408df0:	ldr	x0, [x20], #16
  408df4:	cbnz	x0, 408db4 <install_default_suffix_rules@@Base+0x30>
  408df8:	ldp	x20, x19, [sp, #32]
  408dfc:	ldr	x21, [sp, #16]
  408e00:	ldp	x29, x30, [sp], #48
  408e04:	ret

0000000000408e08 <install_default_implicit_rules@@Base>:
  408e08:	stp	x29, x30, [sp, #-32]!
  408e0c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408e10:	ldr	w8, [x8, #3264]
  408e14:	str	x19, [sp, #16]
  408e18:	mov	x29, sp
  408e1c:	cbnz	w8, 408e70 <install_default_implicit_rules@@Base+0x68>
  408e20:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408e24:	ldr	x8, [x8, #1192]
  408e28:	cbz	x8, 408e48 <install_default_implicit_rules@@Base+0x40>
  408e2c:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  408e30:	add	x19, x19, #0x4a8
  408e34:	mov	x0, x19
  408e38:	mov	w1, wzr
  408e3c:	bl	422d58 <install_pattern_rule@@Base>
  408e40:	ldr	x8, [x19, #24]!
  408e44:	cbnz	x8, 408e34 <install_default_implicit_rules@@Base+0x2c>
  408e48:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408e4c:	ldr	x8, [x8, #1312]
  408e50:	cbz	x8, 408e70 <install_default_implicit_rules@@Base+0x68>
  408e54:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  408e58:	add	x19, x19, #0x520
  408e5c:	mov	w1, #0x1                   	// #1
  408e60:	mov	x0, x19
  408e64:	bl	422d58 <install_pattern_rule@@Base>
  408e68:	ldr	x8, [x19, #24]!
  408e6c:	cbnz	x8, 408e5c <install_default_implicit_rules@@Base+0x54>
  408e70:	ldr	x19, [sp, #16]
  408e74:	ldp	x29, x30, [sp], #32
  408e78:	ret

0000000000408e7c <define_default_variables@@Base>:
  408e7c:	stp	x29, x30, [sp, #-48]!
  408e80:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  408e84:	ldr	w8, [x8, #3268]
  408e88:	str	x21, [sp, #16]
  408e8c:	stp	x20, x19, [sp, #32]
  408e90:	mov	x29, sp
  408e94:	cbnz	w8, 408ee0 <define_default_variables@@Base+0x64>
  408e98:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x680>
  408e9c:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  408ea0:	add	x19, x19, #0x363
  408ea4:	add	x20, x20, #0xdc8
  408ea8:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  408eac:	mov	x0, x19
  408eb0:	bl	406750 <strlen@plt>
  408eb4:	ldr	x8, [x21, #2424]
  408eb8:	ldur	x2, [x20, #-8]
  408ebc:	mov	x1, x0
  408ec0:	mov	w4, #0x1                   	// #1
  408ec4:	ldr	x5, [x8, #8]
  408ec8:	mov	x0, x19
  408ecc:	mov	w3, wzr
  408ed0:	mov	x6, xzr
  408ed4:	bl	423d70 <define_variable_in_set@@Base>
  408ed8:	ldr	x19, [x20], #16
  408edc:	cbnz	x19, 408eac <define_default_variables@@Base+0x30>
  408ee0:	ldp	x20, x19, [sp, #32]
  408ee4:	ldr	x21, [sp, #16]
  408ee8:	ldp	x29, x30, [sp], #48
  408eec:	ret

0000000000408ef0 <undefine_default_variables@@Base>:
  408ef0:	stp	x29, x30, [sp, #-32]!
  408ef4:	stp	x20, x19, [sp, #16]
  408ef8:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x680>
  408efc:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  408f00:	add	x19, x19, #0x363
  408f04:	add	x20, x20, #0xdc8
  408f08:	mov	x29, sp
  408f0c:	mov	x0, x19
  408f10:	bl	406750 <strlen@plt>
  408f14:	mov	x1, x0
  408f18:	mov	x0, x19
  408f1c:	mov	w2, wzr
  408f20:	mov	x3, xzr
  408f24:	bl	424024 <undefine_variable_in_set@@Base>
  408f28:	ldr	x19, [x20], #16
  408f2c:	cbnz	x19, 408f0c <undefine_default_variables@@Base+0x1c>
  408f30:	ldp	x20, x19, [sp, #16]
  408f34:	ldp	x29, x30, [sp], #32
  408f38:	ret

0000000000408f3c <dir_file_exists_p@@Base>:
  408f3c:	stp	x29, x30, [sp, #-32]!
  408f40:	str	x19, [sp, #16]
  408f44:	mov	x29, sp
  408f48:	mov	x19, x1
  408f4c:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  408f50:	ldr	x0, [x0, #8]
  408f54:	mov	x1, x19
  408f58:	ldr	x19, [sp, #16]
  408f5c:	ldp	x29, x30, [sp], #32
  408f60:	b	408f64 <dir_file_exists_p@@Base+0x28>
  408f64:	sub	sp, sp, #0x80
  408f68:	stp	x29, x30, [sp, #32]
  408f6c:	stp	x28, x27, [sp, #48]
  408f70:	stp	x26, x25, [sp, #64]
  408f74:	stp	x24, x23, [sp, #80]
  408f78:	stp	x22, x21, [sp, #96]
  408f7c:	stp	x20, x19, [sp, #112]
  408f80:	add	x29, sp, #0x20
  408f84:	cbz	x0, 40916c <dir_file_exists_p@@Base+0x230>
  408f88:	mov	x20, x0
  408f8c:	ldr	x8, [x20, #16]!
  408f90:	mov	x19, x0
  408f94:	cbz	x8, 4090b4 <dir_file_exists_p@@Base+0x178>
  408f98:	mov	x22, x1
  408f9c:	cbz	x1, 408fd8 <dir_file_exists_p@@Base+0x9c>
  408fa0:	ldrb	w8, [x22]
  408fa4:	cbz	w8, 4090ac <dir_file_exists_p@@Base+0x170>
  408fa8:	mov	x0, x22
  408fac:	str	x22, [sp, #8]
  408fb0:	bl	406750 <strlen@plt>
  408fb4:	str	x0, [sp, #16]
  408fb8:	add	x1, sp, #0x8
  408fbc:	mov	x0, x20
  408fc0:	bl	410888 <hash_find_item@@Base>
  408fc4:	cbz	x0, 408fd8 <dir_file_exists_p@@Base+0x9c>
  408fc8:	ldrh	w8, [x0, #16]
  408fcc:	cmp	w8, #0x0
  408fd0:	cset	w0, eq  // eq = none
  408fd4:	b	40916c <dir_file_exists_p@@Base+0x230>
  408fd8:	ldr	x8, [x19, #104]
  408fdc:	cbz	x8, 4090b4 <dir_file_exists_p@@Base+0x178>
  408fe0:	bl	406e70 <__errno_location@plt>
  408fe4:	mov	x21, x0
  408fe8:	cbz	x22, 409134 <dir_file_exists_p@@Base+0x1f8>
  408fec:	add	x23, x22, #0x1
  408ff0:	str	wzr, [x21]
  408ff4:	ldr	x0, [x19, #104]
  408ff8:	bl	406ab0 <readdir@plt>
  408ffc:	cbnz	x0, 409014 <dir_file_exists_p@@Base+0xd8>
  409000:	ldr	w8, [x21]
  409004:	cbz	w8, 40914c <dir_file_exists_p@@Base+0x210>
  409008:	cmp	w8, #0x4
  40900c:	b.eq	408ff0 <dir_file_exists_p@@Base+0xb4>  // b.none
  409010:	b	40918c <dir_file_exists_p@@Base+0x250>
  409014:	ldr	x8, [x0]
  409018:	mov	x24, x0
  40901c:	cbz	x8, 408ff0 <dir_file_exists_p@@Base+0xb4>
  409020:	add	x25, x24, #0x13
  409024:	mov	x0, x25
  409028:	bl	406750 <strlen@plt>
  40902c:	mov	x26, x0
  409030:	stp	x25, x0, [sp, #8]
  409034:	add	x1, sp, #0x8
  409038:	mov	x0, x20
  40903c:	bl	410784 <hash_find_slot@@Base>
  409040:	mov	x27, x0
  409044:	mov	w0, #0x18                  	// #24
  409048:	bl	419e14 <xmalloc@@Base>
  40904c:	mov	x28, x0
  409050:	mov	x0, x25
  409054:	mov	x1, x26
  409058:	bl	423914 <strcache_add_len@@Base>
  40905c:	str	x0, [x28]
  409060:	ldrb	w8, [x24, #18]
  409064:	mov	x0, x20
  409068:	mov	x1, x28
  40906c:	mov	x2, x27
  409070:	str	x26, [x28, #8]
  409074:	strb	w8, [x28, #18]
  409078:	strh	wzr, [x28, #16]
  40907c:	bl	41099c <hash_insert_at@@Base>
  409080:	cmp	x25, x22
  409084:	b.eq	4090ac <dir_file_exists_p@@Base+0x170>  // b.none
  409088:	ldrb	w8, [x25]
  40908c:	ldrb	w9, [x22]
  409090:	cmp	w8, w9
  409094:	b.ne	408ff0 <dir_file_exists_p@@Base+0xb4>  // b.any
  409098:	cbz	w8, 4090ac <dir_file_exists_p@@Base+0x170>
  40909c:	add	x0, x24, #0x14
  4090a0:	mov	x1, x23
  4090a4:	bl	406c10 <strcmp@plt>
  4090a8:	cbnz	w0, 408ff0 <dir_file_exists_p@@Base+0xb4>
  4090ac:	mov	w0, #0x1                   	// #1
  4090b0:	b	40916c <dir_file_exists_p@@Base+0x230>
  4090b4:	mov	w0, wzr
  4090b8:	b	40916c <dir_file_exists_p@@Base+0x230>
  4090bc:	cmp	w8, #0x4
  4090c0:	b.eq	409134 <dir_file_exists_p@@Base+0x1f8>  // b.none
  4090c4:	b	40918c <dir_file_exists_p@@Base+0x250>
  4090c8:	ldr	x8, [x0]
  4090cc:	mov	x22, x0
  4090d0:	cbz	x8, 409134 <dir_file_exists_p@@Base+0x1f8>
  4090d4:	add	x23, x22, #0x13
  4090d8:	mov	x0, x23
  4090dc:	bl	406750 <strlen@plt>
  4090e0:	mov	x24, x0
  4090e4:	stp	x23, x0, [sp, #8]
  4090e8:	add	x1, sp, #0x8
  4090ec:	mov	x0, x20
  4090f0:	bl	410784 <hash_find_slot@@Base>
  4090f4:	mov	x25, x0
  4090f8:	mov	w0, #0x18                  	// #24
  4090fc:	bl	419e14 <xmalloc@@Base>
  409100:	mov	x26, x0
  409104:	mov	x0, x23
  409108:	mov	x1, x24
  40910c:	bl	423914 <strcache_add_len@@Base>
  409110:	str	x0, [x26]
  409114:	ldrb	w8, [x22, #18]
  409118:	mov	x0, x20
  40911c:	mov	x1, x26
  409120:	mov	x2, x25
  409124:	str	x24, [x26, #8]
  409128:	strb	w8, [x26, #18]
  40912c:	strh	wzr, [x26, #16]
  409130:	bl	41099c <hash_insert_at@@Base>
  409134:	str	wzr, [x21]
  409138:	ldr	x0, [x19, #104]
  40913c:	bl	406ab0 <readdir@plt>
  409140:	cbnz	x0, 4090c8 <dir_file_exists_p@@Base+0x18c>
  409144:	ldr	w8, [x21]
  409148:	cbnz	w8, 4090bc <dir_file_exists_p@@Base+0x180>
  40914c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409150:	ldr	w9, [x8, #2592]
  409154:	sub	w9, w9, #0x1
  409158:	str	w9, [x8, #2592]
  40915c:	ldr	x0, [x19, #104]
  409160:	bl	406af0 <closedir@plt>
  409164:	mov	w0, wzr
  409168:	str	xzr, [x19, #104]
  40916c:	ldp	x20, x19, [sp, #112]
  409170:	ldp	x22, x21, [sp, #96]
  409174:	ldp	x24, x23, [sp, #80]
  409178:	ldp	x26, x25, [sp, #64]
  40917c:	ldp	x28, x27, [sp, #48]
  409180:	ldp	x29, x30, [sp, #32]
  409184:	add	sp, sp, #0x80
  409188:	ret
  40918c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  409190:	add	x0, x0, #0x296
  409194:	bl	41a2bc <pfatal_with_name@@Base>
  409198:	sub	sp, sp, #0x140
  40919c:	stp	x29, x30, [sp, #256]
  4091a0:	add	x29, sp, #0x100
  4091a4:	stp	x20, x19, [sp, #304]
  4091a8:	mov	x20, x0
  4091ac:	stur	x0, [x29, #-16]
  4091b0:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  4091b4:	add	x0, x0, #0xa38
  4091b8:	sub	x1, x29, #0x10
  4091bc:	str	x28, [sp, #272]
  4091c0:	stp	x22, x21, [sp, #288]
  4091c4:	bl	410784 <hash_find_slot@@Base>
  4091c8:	ldr	x19, [x0]
  4091cc:	mov	x21, x0
  4091d0:	cbz	x19, 4091e4 <dir_file_exists_p@@Base+0x2a8>
  4091d4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4091d8:	ldr	x8, [x8, #2328]
  4091dc:	cmp	x8, x19
  4091e0:	b.ne	409330 <dir_file_exists_p@@Base+0x3f4>  // b.any
  4091e4:	mov	x0, x20
  4091e8:	bl	406750 <strlen@plt>
  4091ec:	mov	x22, x0
  4091f0:	mov	w0, #0x10                  	// #16
  4091f4:	bl	419e14 <xmalloc@@Base>
  4091f8:	mov	x19, x0
  4091fc:	mov	x0, x20
  409200:	mov	x1, x22
  409204:	bl	423914 <strcache_add_len@@Base>
  409208:	str	x0, [x19]
  40920c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  409210:	add	x0, x0, #0xa38
  409214:	mov	x1, x19
  409218:	mov	x2, x21
  40921c:	bl	41099c <hash_insert_at@@Base>
  409220:	add	x2, sp, #0x70
  409224:	mov	w0, wzr
  409228:	mov	x1, x20
  40922c:	bl	406e90 <__xstat@plt>
  409230:	cmn	w0, #0x1
  409234:	b.ne	40924c <dir_file_exists_p@@Base+0x310>  // b.any
  409238:	bl	406e70 <__errno_location@plt>
  40923c:	ldr	w8, [x0]
  409240:	cmp	w8, #0x4
  409244:	b.eq	409220 <dir_file_exists_p@@Base+0x2e4>  // b.none
  409248:	b	4092dc <dir_file_exists_p@@Base+0x3a0>
  40924c:	tbnz	w0, #31, 4092dc <dir_file_exists_p@@Base+0x3a0>
  409250:	ldr	q0, [sp, #112]
  409254:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  409258:	add	x0, x0, #0xa90
  40925c:	mov	x1, sp
  409260:	str	q0, [sp]
  409264:	bl	410784 <hash_find_slot@@Base>
  409268:	ldr	x21, [x0]
  40926c:	mov	x22, x0
  409270:	cbz	x21, 409284 <dir_file_exists_p@@Base+0x348>
  409274:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409278:	ldr	x8, [x8, #2328]
  40927c:	cmp	x8, x21
  409280:	b.ne	40932c <dir_file_exists_p@@Base+0x3f0>  // b.any
  409284:	mov	w0, #0x70                  	// #112
  409288:	bl	419e14 <xmalloc@@Base>
  40928c:	ldr	q0, [sp, #112]
  409290:	mov	x21, x0
  409294:	mov	x1, x21
  409298:	mov	x2, x22
  40929c:	str	q0, [x0]
  4092a0:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  4092a4:	add	x0, x0, #0xa90
  4092a8:	bl	41099c <hash_insert_at@@Base>
  4092ac:	bl	406e70 <__errno_location@plt>
  4092b0:	mov	x22, x0
  4092b4:	mov	x0, x20
  4092b8:	str	wzr, [x22]
  4092bc:	bl	406830 <opendir@plt>
  4092c0:	str	x0, [x21, #104]
  4092c4:	cbnz	x0, 4092e4 <dir_file_exists_p@@Base+0x3a8>
  4092c8:	ldr	w8, [x22]
  4092cc:	cmp	w8, #0x4
  4092d0:	b.eq	4092b4 <dir_file_exists_p@@Base+0x378>  // b.none
  4092d4:	str	xzr, [x21, #16]
  4092d8:	b	40932c <dir_file_exists_p@@Base+0x3f0>
  4092dc:	str	xzr, [x19, #8]
  4092e0:	b	409330 <dir_file_exists_p@@Base+0x3f4>
  4092e4:	adrp	x2, 409000 <dir_file_exists_p@@Base+0xc4>
  4092e8:	adrp	x3, 409000 <dir_file_exists_p@@Base+0xc4>
  4092ec:	adrp	x4, 409000 <dir_file_exists_p@@Base+0xc4>
  4092f0:	add	x0, x21, #0x10
  4092f4:	add	x2, x2, #0x548
  4092f8:	add	x3, x3, #0x564
  4092fc:	add	x4, x4, #0x56c
  409300:	mov	w1, #0x6b                  	// #107
  409304:	bl	410560 <hash_init@@Base>
  409308:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40930c:	ldr	w9, [x8, #2592]
  409310:	add	w9, w9, #0x1
  409314:	cmp	w9, #0xa
  409318:	str	w9, [x8, #2592]
  40931c:	b.ne	40932c <dir_file_exists_p@@Base+0x3f0>  // b.any
  409320:	mov	x0, x21
  409324:	mov	x1, xzr
  409328:	bl	408f64 <dir_file_exists_p@@Base+0x28>
  40932c:	str	x21, [x19, #8]
  409330:	mov	x0, x19
  409334:	ldp	x20, x19, [sp, #304]
  409338:	ldp	x22, x21, [sp, #288]
  40933c:	ldr	x28, [sp, #272]
  409340:	ldp	x29, x30, [sp, #256]
  409344:	add	sp, sp, #0x140
  409348:	ret

000000000040934c <file_exists_p@@Base>:
  40934c:	stp	x29, x30, [sp, #-48]!
  409350:	stp	x22, x21, [sp, #16]
  409354:	stp	x20, x19, [sp, #32]
  409358:	mov	x29, sp
  40935c:	mov	x19, x0
  409360:	bl	40701c <ar_name@@Base>
  409364:	cbz	w0, 40937c <file_exists_p@@Base+0x30>
  409368:	mov	x0, x19
  40936c:	bl	407120 <ar_member_date@@Base>
  409370:	cmn	x0, #0x1
  409374:	cset	w0, ne  // ne = any
  409378:	b	40940c <file_exists_p@@Base+0xc0>
  40937c:	mov	w1, #0x2f                  	// #47
  409380:	mov	x0, x19
  409384:	bl	406b30 <strrchr@plt>
  409388:	cbz	x0, 4093c4 <file_exists_p@@Base+0x78>
  40938c:	mov	x20, x0
  409390:	subs	x22, x0, x19
  409394:	b.eq	4093ec <file_exists_p@@Base+0xa0>  // b.none
  409398:	add	x8, x22, #0x10
  40939c:	and	x8, x8, #0xfffffffffffffff0
  4093a0:	mov	x9, sp
  4093a4:	sub	x21, x9, x8
  4093a8:	mov	sp, x21
  4093ac:	mov	x0, x21
  4093b0:	mov	x1, x19
  4093b4:	mov	x2, x22
  4093b8:	bl	406710 <memcpy@plt>
  4093bc:	strb	wzr, [x21, x22]
  4093c0:	b	4093f4 <file_exists_p@@Base+0xa8>
  4093c4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4093c8:	add	x0, x0, #0x456
  4093cc:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  4093d0:	ldr	x0, [x0, #8]
  4093d4:	mov	x1, x19
  4093d8:	mov	sp, x29
  4093dc:	ldp	x20, x19, [sp, #32]
  4093e0:	ldp	x22, x21, [sp, #16]
  4093e4:	ldp	x29, x30, [sp], #48
  4093e8:	b	408f64 <dir_file_exists_p@@Base+0x28>
  4093ec:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x1680>
  4093f0:	add	x21, x21, #0x327
  4093f4:	mov	x0, x21
  4093f8:	add	x19, x20, #0x1
  4093fc:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409400:	ldr	x0, [x0, #8]
  409404:	mov	x1, x19
  409408:	bl	408f64 <dir_file_exists_p@@Base+0x28>
  40940c:	mov	sp, x29
  409410:	ldp	x20, x19, [sp, #32]
  409414:	ldp	x22, x21, [sp, #16]
  409418:	ldp	x29, x30, [sp], #48
  40941c:	ret

0000000000409420 <file_impossible@@Base>:
  409420:	stp	x29, x30, [sp, #-48]!
  409424:	mov	w1, #0x2f                  	// #47
  409428:	stp	x22, x21, [sp, #16]
  40942c:	stp	x20, x19, [sp, #32]
  409430:	mov	x29, sp
  409434:	mov	x19, x0
  409438:	bl	406b30 <strrchr@plt>
  40943c:	cbz	x0, 409478 <file_impossible@@Base+0x58>
  409440:	mov	x21, x0
  409444:	subs	x22, x0, x19
  409448:	b.eq	409494 <file_impossible@@Base+0x74>  // b.none
  40944c:	add	x8, x22, #0x10
  409450:	and	x8, x8, #0xfffffffffffffff0
  409454:	mov	x9, sp
  409458:	sub	x20, x9, x8
  40945c:	mov	sp, x20
  409460:	mov	x0, x20
  409464:	mov	x1, x19
  409468:	mov	x2, x22
  40946c:	bl	406710 <memcpy@plt>
  409470:	strb	wzr, [x20, x22]
  409474:	b	40949c <file_impossible@@Base+0x7c>
  409478:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  40947c:	add	x0, x0, #0x456
  409480:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409484:	mov	x20, x0
  409488:	ldr	x0, [x20, #8]
  40948c:	cbnz	x0, 4094b4 <file_impossible@@Base+0x94>
  409490:	b	409510 <file_impossible@@Base+0xf0>
  409494:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x1680>
  409498:	add	x20, x20, #0x327
  40949c:	mov	x0, x20
  4094a0:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  4094a4:	mov	x20, x0
  4094a8:	add	x19, x21, #0x1
  4094ac:	ldr	x0, [x20, #8]
  4094b0:	cbz	x0, 409510 <file_impossible@@Base+0xf0>
  4094b4:	ldr	x8, [x0, #16]!
  4094b8:	cbz	x8, 409524 <file_impossible@@Base+0x104>
  4094bc:	mov	w0, #0x18                  	// #24
  4094c0:	bl	419e14 <xmalloc@@Base>
  4094c4:	mov	x21, x0
  4094c8:	mov	x0, x19
  4094cc:	bl	406750 <strlen@plt>
  4094d0:	mov	x1, x0
  4094d4:	str	x0, [x21, #8]
  4094d8:	mov	x0, x19
  4094dc:	bl	423914 <strcache_add_len@@Base>
  4094e0:	mov	w8, #0x1                   	// #1
  4094e4:	str	x0, [x21]
  4094e8:	strh	w8, [x21, #16]
  4094ec:	ldr	x8, [x20, #8]
  4094f0:	mov	x1, x21
  4094f4:	add	x0, x8, #0x10
  4094f8:	bl	410660 <hash_insert@@Base>
  4094fc:	mov	sp, x29
  409500:	ldp	x20, x19, [sp, #32]
  409504:	ldp	x22, x21, [sp, #16]
  409508:	ldp	x29, x30, [sp], #48
  40950c:	ret
  409510:	mov	w0, #0x70                  	// #112
  409514:	bl	419e38 <xcalloc@@Base>
  409518:	str	x0, [x20, #8]
  40951c:	ldr	x8, [x0, #16]!
  409520:	cbnz	x8, 4094bc <file_impossible@@Base+0x9c>
  409524:	adrp	x2, 409000 <dir_file_exists_p@@Base+0xc4>
  409528:	adrp	x3, 409000 <dir_file_exists_p@@Base+0xc4>
  40952c:	adrp	x4, 409000 <dir_file_exists_p@@Base+0xc4>
  409530:	add	x2, x2, #0x548
  409534:	add	x3, x3, #0x564
  409538:	add	x4, x4, #0x56c
  40953c:	mov	w1, #0x6b                  	// #107
  409540:	bl	410560 <hash_init@@Base>
  409544:	b	4094bc <file_impossible@@Base+0x9c>
  409548:	stp	x29, x30, [sp, #-16]!
  40954c:	ldr	x0, [x0]
  409550:	mov	x29, sp
  409554:	bl	4112ec <jhash_string@@Base>
  409558:	mov	w0, w0
  40955c:	ldp	x29, x30, [sp], #16
  409560:	ret
  409564:	mov	x0, xzr
  409568:	ret
  40956c:	ldr	w9, [x0, #8]
  409570:	ldr	w10, [x1, #8]
  409574:	mov	x8, x0
  409578:	subs	w0, w9, w10
  40957c:	b.eq	409584 <file_impossible@@Base+0x164>  // b.none
  409580:	ret
  409584:	ldr	x0, [x8]
  409588:	ldr	x1, [x1]
  40958c:	cmp	x0, x1
  409590:	b.eq	409598 <file_impossible@@Base+0x178>  // b.none
  409594:	b	406c10 <strcmp@plt>
  409598:	mov	w0, wzr
  40959c:	ret

00000000004095a0 <file_impossible_p@@Base>:
  4095a0:	stp	x29, x30, [sp, #-48]!
  4095a4:	stp	x22, x21, [sp, #16]
  4095a8:	stp	x20, x19, [sp, #32]
  4095ac:	mov	x29, sp
  4095b0:	sub	sp, sp, #0x20
  4095b4:	mov	w1, #0x2f                  	// #47
  4095b8:	mov	x19, x0
  4095bc:	bl	406b30 <strrchr@plt>
  4095c0:	cbz	x0, 4095fc <file_impossible_p@@Base+0x5c>
  4095c4:	mov	x20, x0
  4095c8:	subs	x22, x0, x19
  4095cc:	b.eq	409614 <file_impossible_p@@Base+0x74>  // b.none
  4095d0:	add	x8, x22, #0x10
  4095d4:	and	x8, x8, #0xfffffffffffffff0
  4095d8:	mov	x9, sp
  4095dc:	sub	x21, x9, x8
  4095e0:	mov	sp, x21
  4095e4:	mov	x0, x21
  4095e8:	mov	x1, x19
  4095ec:	mov	x2, x22
  4095f0:	bl	406710 <memcpy@plt>
  4095f4:	strb	wzr, [x21, x22]
  4095f8:	b	40961c <file_impossible_p@@Base+0x7c>
  4095fc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  409600:	add	x0, x0, #0x456
  409604:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409608:	ldr	x20, [x0, #8]
  40960c:	cbnz	x20, 409630 <file_impossible_p@@Base+0x90>
  409610:	b	409660 <file_impossible_p@@Base+0xc0>
  409614:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x1680>
  409618:	add	x21, x21, #0x327
  40961c:	mov	x0, x21
  409620:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409624:	add	x19, x20, #0x1
  409628:	ldr	x20, [x0, #8]
  40962c:	cbz	x20, 409660 <file_impossible_p@@Base+0xc0>
  409630:	ldr	x8, [x20, #16]!
  409634:	cbz	x8, 409660 <file_impossible_p@@Base+0xc0>
  409638:	mov	x0, x19
  40963c:	stur	x19, [x29, #-24]
  409640:	bl	406750 <strlen@plt>
  409644:	stur	x0, [x29, #-16]
  409648:	sub	x1, x29, #0x18
  40964c:	mov	x0, x20
  409650:	bl	410888 <hash_find_item@@Base>
  409654:	cbz	x0, 409664 <file_impossible_p@@Base+0xc4>
  409658:	ldrsh	w0, [x0, #16]
  40965c:	b	409664 <file_impossible_p@@Base+0xc4>
  409660:	mov	w0, wzr
  409664:	mov	sp, x29
  409668:	ldp	x20, x19, [sp, #32]
  40966c:	ldp	x22, x21, [sp, #16]
  409670:	ldp	x29, x30, [sp], #48
  409674:	ret

0000000000409678 <dir_name@@Base>:
  409678:	stp	x29, x30, [sp, #-16]!
  40967c:	mov	x29, sp
  409680:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409684:	ldr	x0, [x0]
  409688:	ldp	x29, x30, [sp], #16
  40968c:	ret

0000000000409690 <print_dir_data_base@@Base>:
  409690:	stp	x29, x30, [sp, #-96]!
  409694:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409698:	add	x1, x1, #0x1c8
  40969c:	mov	w2, #0x5                   	// #5
  4096a0:	mov	x0, xzr
  4096a4:	stp	x28, x27, [sp, #16]
  4096a8:	stp	x26, x25, [sp, #32]
  4096ac:	stp	x24, x23, [sp, #48]
  4096b0:	stp	x22, x21, [sp, #64]
  4096b4:	stp	x20, x19, [sp, #80]
  4096b8:	mov	x29, sp
  4096bc:	bl	406dc0 <dcgettext@plt>
  4096c0:	bl	406ba0 <puts@plt>
  4096c4:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4096c8:	add	x9, x9, #0xa38
  4096cc:	ldr	x8, [x9, #32]
  4096d0:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  4096d4:	cmp	x8, #0x1
  4096d8:	b.lt	4099c0 <print_dir_data_base@@Base+0x330>  // b.tstop
  4096dc:	ldr	x21, [x9]
  4096e0:	adrp	x24, 42d000 <_IO_stdin_used@@Base+0x5680>
  4096e4:	mov	w20, wzr
  4096e8:	mov	w19, wzr
  4096ec:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  4096f0:	add	x25, x21, x8, lsl #3
  4096f4:	add	x24, x24, #0x56b
  4096f8:	b	409724 <print_dir_data_base@@Base+0x94>
  4096fc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409700:	mov	w2, #0x5                   	// #5
  409704:	mov	x0, xzr
  409708:	add	x1, x1, #0x1d8
  40970c:	bl	406dc0 <dcgettext@plt>
  409710:	ldr	x1, [x27]
  409714:	bl	406e60 <printf@plt>
  409718:	add	x21, x21, #0x8
  40971c:	cmp	x21, x25
  409720:	b.cs	409990 <print_dir_data_base@@Base+0x300>  // b.hs, b.nlast
  409724:	ldr	x27, [x21]
  409728:	cbz	x27, 409718 <print_dir_data_base@@Base+0x88>
  40972c:	ldr	x8, [x23, #2328]
  409730:	cmp	x8, x27
  409734:	b.eq	409718 <print_dir_data_base@@Base+0x88>  // b.none
  409738:	ldr	x10, [x27, #8]
  40973c:	cbz	x10, 4096fc <print_dir_data_base@@Base+0x6c>
  409740:	ldr	x9, [x10, #16]
  409744:	cbz	x9, 409820 <print_dir_data_base@@Base+0x190>
  409748:	ldr	x10, [x10, #48]
  40974c:	cmp	x10, #0x1
  409750:	b.lt	409858 <print_dir_data_base@@Base+0x1c8>  // b.tstop
  409754:	add	x10, x9, x10, lsl #3
  409758:	add	x11, x9, #0x8
  40975c:	cmp	x10, x11
  409760:	csel	x12, x10, x11, hi  // hi = pmore
  409764:	mvn	x13, x9
  409768:	add	x12, x13, x12
  40976c:	lsr	x14, x12, #3
  409770:	cbz	x14, 409954 <print_dir_data_base@@Base+0x2c4>
  409774:	add	x14, x14, #0x1
  409778:	and	x15, x14, #0x3ffffffffffffffe
  40977c:	mov	w12, wzr
  409780:	mov	w13, wzr
  409784:	mov	w16, wzr
  409788:	mov	w17, wzr
  40978c:	add	x9, x9, x15, lsl #3
  409790:	mov	x18, x15
  409794:	b	4097dc <print_dir_data_base@@Base+0x14c>
  409798:	tst	w4, #0xffff
  40979c:	cset	w2, eq  // eq = none
  4097a0:	cset	w4, ne  // ne = any
  4097a4:	tst	w3, #0xffff
  4097a8:	cset	w3, eq  // eq = none
  4097ac:	cset	w5, ne  // ne = any
  4097b0:	and	w4, w1, w4
  4097b4:	and	w1, w2, w1
  4097b8:	and	w2, w0, w5
  4097bc:	and	w0, w3, w0
  4097c0:	subs	x18, x18, #0x2
  4097c4:	add	w16, w16, w1
  4097c8:	add	w12, w12, w4
  4097cc:	add	w17, w17, w0
  4097d0:	add	w13, w13, w2
  4097d4:	add	x11, x11, #0x10
  4097d8:	b.eq	409844 <print_dir_data_base@@Base+0x1b4>  // b.none
  4097dc:	ldp	x3, x2, [x11, #-8]
  4097e0:	cmp	x3, #0x0
  4097e4:	cset	w0, ne  // ne = any
  4097e8:	cmp	x2, #0x0
  4097ec:	cset	w4, ne  // ne = any
  4097f0:	cmp	x8, x3
  4097f4:	cset	w1, ne  // ne = any
  4097f8:	cmp	x8, x2
  4097fc:	cset	w5, ne  // ne = any
  409800:	and	w1, w1, w0
  409804:	cmp	w1, #0x1
  409808:	and	w0, w5, w4
  40980c:	b.ne	409814 <print_dir_data_base@@Base+0x184>  // b.any
  409810:	ldrh	w4, [x3, #16]
  409814:	cbz	w0, 409798 <print_dir_data_base@@Base+0x108>
  409818:	ldrh	w3, [x2, #16]
  40981c:	b	409798 <print_dir_data_base@@Base+0x108>
  409820:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409824:	mov	w2, #0x5                   	// #5
  409828:	mov	x0, xzr
  40982c:	add	x1, x1, #0x1f4
  409830:	bl	406dc0 <dcgettext@plt>
  409834:	ldp	x1, x8, [x27]
  409838:	ldp	x2, x3, [x8]
  40983c:	bl	406e60 <printf@plt>
  409840:	b	409718 <print_dir_data_base@@Base+0x88>
  409844:	add	w26, w17, w16
  409848:	cmp	x14, x15
  40984c:	add	w22, w13, w12
  409850:	b.ne	409970 <print_dir_data_base@@Base+0x2e0>  // b.any
  409854:	b	409860 <print_dir_data_base@@Base+0x1d0>
  409858:	mov	w26, wzr
  40985c:	mov	w22, wzr
  409860:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409864:	mov	w2, #0x5                   	// #5
  409868:	mov	x0, xzr
  40986c:	add	x1, x1, #0x228
  409870:	bl	406dc0 <dcgettext@plt>
  409874:	ldp	x1, x8, [x27]
  409878:	ldp	x2, x3, [x8]
  40987c:	bl	406e60 <printf@plt>
  409880:	cbz	w26, 409894 <print_dir_data_base@@Base+0x204>
  409884:	mov	x0, x24
  409888:	mov	w1, w26
  40988c:	bl	406e60 <printf@plt>
  409890:	b	4098b0 <print_dir_data_base@@Base+0x220>
  409894:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409898:	mov	w2, #0x5                   	// #5
  40989c:	mov	x0, xzr
  4098a0:	add	x1, x1, #0x247
  4098a4:	bl	406dc0 <dcgettext@plt>
  4098a8:	ldr	x1, [x28, #2504]
  4098ac:	bl	406760 <fputs@plt>
  4098b0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4098b4:	mov	w2, #0x5                   	// #5
  4098b8:	mov	x0, xzr
  4098bc:	add	x1, x1, #0x24a
  4098c0:	bl	406dc0 <dcgettext@plt>
  4098c4:	ldr	x1, [x28, #2504]
  4098c8:	bl	406760 <fputs@plt>
  4098cc:	cbz	w22, 4098e0 <print_dir_data_base@@Base+0x250>
  4098d0:	mov	x0, x24
  4098d4:	mov	w1, w22
  4098d8:	bl	406e60 <printf@plt>
  4098dc:	b	4098fc <print_dir_data_base@@Base+0x26c>
  4098e0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4098e4:	mov	w2, #0x5                   	// #5
  4098e8:	mov	x0, xzr
  4098ec:	add	x1, x1, #0x253
  4098f0:	bl	406dc0 <dcgettext@plt>
  4098f4:	ldr	x1, [x28, #2504]
  4098f8:	bl	406760 <fputs@plt>
  4098fc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409900:	mov	w2, #0x5                   	// #5
  409904:	mov	x0, xzr
  409908:	add	x1, x1, #0x256
  40990c:	bl	406dc0 <dcgettext@plt>
  409910:	ldr	x1, [x28, #2504]
  409914:	bl	406760 <fputs@plt>
  409918:	ldr	x8, [x27, #8]
  40991c:	ldr	x8, [x8, #104]
  409920:	cbz	x8, 40993c <print_dir_data_base@@Base+0x2ac>
  409924:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409928:	mov	w2, #0x5                   	// #5
  40992c:	mov	x0, xzr
  409930:	add	x1, x1, #0x267
  409934:	bl	406dc0 <dcgettext@plt>
  409938:	b	409944 <print_dir_data_base@@Base+0x2b4>
  40993c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  409940:	add	x0, x0, #0x456
  409944:	bl	406ba0 <puts@plt>
  409948:	add	w20, w26, w20
  40994c:	add	w19, w22, w19
  409950:	b	409718 <print_dir_data_base@@Base+0x88>
  409954:	mov	w22, wzr
  409958:	mov	w26, wzr
  40995c:	b	409970 <print_dir_data_base@@Base+0x2e0>
  409960:	add	w26, w26, #0x1
  409964:	add	x9, x9, #0x8
  409968:	cmp	x9, x10
  40996c:	b.cs	409860 <print_dir_data_base@@Base+0x1d0>  // b.hs, b.nlast
  409970:	ldr	x11, [x9]
  409974:	cbz	x11, 409964 <print_dir_data_base@@Base+0x2d4>
  409978:	cmp	x8, x11
  40997c:	b.eq	409964 <print_dir_data_base@@Base+0x2d4>  // b.none
  409980:	ldrh	w11, [x11, #16]
  409984:	cbz	w11, 409960 <print_dir_data_base@@Base+0x2d0>
  409988:	add	w22, w22, #0x1
  40998c:	b	409964 <print_dir_data_base@@Base+0x2d4>
  409990:	ldr	x3, [x28, #2504]
  409994:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  409998:	add	x0, x0, #0xaa3
  40999c:	mov	w1, #0x3                   	// #3
  4099a0:	mov	w2, #0x1                   	// #1
  4099a4:	bl	406cb0 <fwrite@plt>
  4099a8:	cbz	w20, 4099dc <print_dir_data_base@@Base+0x34c>
  4099ac:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4099b0:	add	x0, x0, #0x56b
  4099b4:	mov	w1, w20
  4099b8:	bl	406e60 <printf@plt>
  4099bc:	b	4099f8 <print_dir_data_base@@Base+0x368>
  4099c0:	ldr	x3, [x28, #2504]
  4099c4:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4099c8:	add	x0, x0, #0xaa3
  4099cc:	mov	w1, #0x3                   	// #3
  4099d0:	mov	w2, #0x1                   	// #1
  4099d4:	bl	406cb0 <fwrite@plt>
  4099d8:	mov	w19, wzr
  4099dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4099e0:	add	x1, x1, #0x247
  4099e4:	mov	w2, #0x5                   	// #5
  4099e8:	mov	x0, xzr
  4099ec:	bl	406dc0 <dcgettext@plt>
  4099f0:	ldr	x1, [x28, #2504]
  4099f4:	bl	406760 <fputs@plt>
  4099f8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4099fc:	add	x1, x1, #0x24a
  409a00:	mov	w2, #0x5                   	// #5
  409a04:	mov	x0, xzr
  409a08:	bl	406dc0 <dcgettext@plt>
  409a0c:	ldr	x1, [x28, #2504]
  409a10:	bl	406760 <fputs@plt>
  409a14:	cbz	w19, 409a2c <print_dir_data_base@@Base+0x39c>
  409a18:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  409a1c:	add	x0, x0, #0x56b
  409a20:	mov	w1, w19
  409a24:	bl	406e60 <printf@plt>
  409a28:	b	409a48 <print_dir_data_base@@Base+0x3b8>
  409a2c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409a30:	add	x1, x1, #0x253
  409a34:	mov	w2, #0x5                   	// #5
  409a38:	mov	x0, xzr
  409a3c:	bl	406dc0 <dcgettext@plt>
  409a40:	ldr	x1, [x28, #2504]
  409a44:	bl	406760 <fputs@plt>
  409a48:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409a4c:	add	x1, x1, #0x270
  409a50:	mov	w2, #0x5                   	// #5
  409a54:	mov	x0, xzr
  409a58:	bl	406dc0 <dcgettext@plt>
  409a5c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409a60:	ldr	x1, [x8, #2664]
  409a64:	ldp	x20, x19, [sp, #80]
  409a68:	ldp	x22, x21, [sp, #64]
  409a6c:	ldp	x24, x23, [sp, #48]
  409a70:	ldp	x26, x25, [sp, #32]
  409a74:	ldp	x28, x27, [sp, #16]
  409a78:	ldp	x29, x30, [sp], #96
  409a7c:	b	406e60 <printf@plt>

0000000000409a80 <dir_setup_glob@@Base>:
  409a80:	adrp	x8, 409000 <dir_file_exists_p@@Base+0xc4>
  409a84:	adrp	x9, 409000 <dir_file_exists_p@@Base+0xc4>
  409a88:	adrp	x10, 406000 <memcpy@plt-0x710>
  409a8c:	adrp	x11, 427000 <jobserver_post_child@@Base+0xcc>
  409a90:	adrp	x12, 427000 <jobserver_post_child@@Base+0xcc>
  409a94:	add	x8, x8, #0xabc
  409a98:	add	x9, x9, #0xb1c
  409a9c:	add	x10, x10, #0xc60
  409aa0:	add	x11, x11, #0x958
  409aa4:	add	x12, x12, #0x948
  409aa8:	str	xzr, [x0, #16]
  409aac:	stp	x10, x9, [x0, #32]
  409ab0:	stp	x8, x11, [x0, #48]
  409ab4:	str	x12, [x0, #64]
  409ab8:	ret
  409abc:	stp	x29, x30, [sp, #-32]!
  409ac0:	str	x19, [sp, #16]
  409ac4:	mov	x29, sp
  409ac8:	bl	409198 <dir_file_exists_p@@Base+0x25c>
  409acc:	mov	x19, x0
  409ad0:	ldr	x0, [x0, #8]
  409ad4:	cbz	x0, 409b00 <dir_setup_glob@@Base+0x80>
  409ad8:	ldr	x8, [x0, #16]
  409adc:	cbz	x8, 409b0c <dir_setup_glob@@Base+0x8c>
  409ae0:	mov	x1, xzr
  409ae4:	bl	408f64 <dir_file_exists_p@@Base+0x28>
  409ae8:	mov	w0, #0x10                  	// #16
  409aec:	bl	419e14 <xmalloc@@Base>
  409af0:	ldr	x8, [x19, #8]
  409af4:	str	x8, [x0]
  409af8:	ldr	x8, [x8, #16]
  409afc:	str	x8, [x0, #8]
  409b00:	ldr	x19, [sp, #16]
  409b04:	ldp	x29, x30, [sp], #32
  409b08:	ret
  409b0c:	mov	x0, xzr
  409b10:	ldr	x19, [sp, #16]
  409b14:	ldp	x29, x30, [sp], #32
  409b18:	ret
  409b1c:	stp	x29, x30, [sp, #-48]!
  409b20:	stp	x22, x21, [sp, #16]
  409b24:	stp	x20, x19, [sp, #32]
  409b28:	ldp	x9, x8, [x0]
  409b2c:	mov	x29, sp
  409b30:	ldr	x10, [x9, #16]
  409b34:	ldr	x9, [x9, #48]
  409b38:	add	x9, x10, x9, lsl #3
  409b3c:	cmp	x8, x9
  409b40:	b.cs	409bc4 <dir_setup_glob@@Base+0x144>  // b.hs, b.nlast
  409b44:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  409b48:	ldr	x10, [x10, #2328]
  409b4c:	b	409b58 <dir_setup_glob@@Base+0xd8>
  409b50:	cmp	x8, x9
  409b54:	b.cs	409bc4 <dir_setup_glob@@Base+0x144>  // b.hs, b.nlast
  409b58:	mov	x11, x8
  409b5c:	add	x8, x8, #0x8
  409b60:	str	x8, [x0, #8]
  409b64:	ldr	x21, [x11]
  409b68:	cbz	x21, 409b50 <dir_setup_glob@@Base+0xd0>
  409b6c:	cmp	x10, x21
  409b70:	b.eq	409b50 <dir_setup_glob@@Base+0xd0>  // b.none
  409b74:	ldrh	w11, [x21, #16]
  409b78:	cbnz	w11, 409b50 <dir_setup_glob@@Base+0xd0>
  409b7c:	ldr	x10, [x21, #8]
  409b80:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409b84:	ldr	x9, [x8, #2608]
  409b88:	add	x8, x10, #0x19
  409b8c:	add	x19, x10, #0x1
  409b90:	cmp	x8, x9
  409b94:	b.ls	409bdc <dir_setup_glob@@Base+0x15c>  // b.plast
  409b98:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  409b9c:	add	x22, x22, #0xa28
  409ba0:	ldr	x0, [x22]
  409ba4:	lsl	x9, x9, #1
  409ba8:	cmp	x8, x9
  409bac:	csel	x1, x8, x9, hi  // hi = pmore
  409bb0:	str	x1, [x22, #8]
  409bb4:	bl	419de0 <xrealloc@@Base>
  409bb8:	mov	x20, x0
  409bbc:	str	x0, [x22]
  409bc0:	b	409be4 <dir_setup_glob@@Base+0x164>
  409bc4:	mov	x20, xzr
  409bc8:	mov	x0, x20
  409bcc:	ldp	x20, x19, [sp, #32]
  409bd0:	ldp	x22, x21, [sp, #16]
  409bd4:	ldp	x29, x30, [sp], #48
  409bd8:	ret
  409bdc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409be0:	ldr	x20, [x8, #2600]
  409be4:	mov	w8, #0x1                   	// #1
  409be8:	str	x8, [x20]
  409bec:	ldrb	w8, [x21, #18]
  409bf0:	add	x0, x20, #0x13
  409bf4:	mov	x2, x19
  409bf8:	strb	w8, [x20, #18]
  409bfc:	ldr	x1, [x21]
  409c00:	bl	406710 <memcpy@plt>
  409c04:	b	409bc8 <dir_setup_glob@@Base+0x148>

0000000000409c08 <hash_init_directories@@Base>:
  409c08:	stp	x29, x30, [sp, #-32]!
  409c0c:	str	x19, [sp, #16]
  409c10:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  409c14:	add	x19, x19, #0xa38
  409c18:	adrp	x2, 409000 <dir_file_exists_p@@Base+0xc4>
  409c1c:	adrp	x3, 409000 <dir_file_exists_p@@Base+0xc4>
  409c20:	adrp	x4, 409000 <dir_file_exists_p@@Base+0xc4>
  409c24:	add	x2, x2, #0xc6c
  409c28:	add	x3, x3, #0xc88
  409c2c:	add	x4, x4, #0xc90
  409c30:	mov	w1, #0xc7                  	// #199
  409c34:	mov	x0, x19
  409c38:	mov	x29, sp
  409c3c:	bl	410560 <hash_init@@Base>
  409c40:	add	x0, x19, #0x58
  409c44:	ldr	x19, [sp, #16]
  409c48:	adrp	x2, 409000 <dir_file_exists_p@@Base+0xc4>
  409c4c:	adrp	x3, 409000 <dir_file_exists_p@@Base+0xc4>
  409c50:	adrp	x4, 409000 <dir_file_exists_p@@Base+0xc4>
  409c54:	add	x2, x2, #0xcac
  409c58:	add	x3, x3, #0xcbc
  409c5c:	add	x4, x4, #0xccc
  409c60:	mov	w1, #0xc7                  	// #199
  409c64:	ldp	x29, x30, [sp], #32
  409c68:	b	410560 <hash_init@@Base>
  409c6c:	stp	x29, x30, [sp, #-16]!
  409c70:	ldr	x0, [x0]
  409c74:	mov	x29, sp
  409c78:	bl	4112ec <jhash_string@@Base>
  409c7c:	mov	w0, w0
  409c80:	ldp	x29, x30, [sp], #16
  409c84:	ret
  409c88:	mov	x0, xzr
  409c8c:	ret
  409c90:	ldr	x0, [x0]
  409c94:	ldr	x1, [x1]
  409c98:	cmp	x0, x1
  409c9c:	b.eq	409ca4 <hash_init_directories@@Base+0x9c>  // b.none
  409ca0:	b	406c10 <strcmp@plt>
  409ca4:	mov	w0, wzr
  409ca8:	ret
  409cac:	ldr	w8, [x0]
  409cb0:	ldr	w9, [x0, #8]
  409cb4:	eor	w0, w9, w8, lsl #4
  409cb8:	ret
  409cbc:	ldr	w8, [x0]
  409cc0:	ldr	w9, [x0, #8]
  409cc4:	eon	w0, w9, w8, lsl #4
  409cc8:	ret
  409ccc:	ldr	x8, [x0, #8]
  409cd0:	ldr	x9, [x1, #8]
  409cd4:	cmp	x8, x9
  409cd8:	cset	w8, ne  // ne = any
  409cdc:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  409ce0:	cbz	w8, 409cec <hash_init_directories@@Base+0xe4>
  409ce4:	mov	w0, w8
  409ce8:	ret
  409cec:	ldr	x8, [x0]
  409cf0:	ldr	x9, [x1]
  409cf4:	cmp	x8, x9
  409cf8:	cset	w8, ne  // ne = any
  409cfc:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  409d00:	mov	w0, w8
  409d04:	ret

0000000000409d08 <variable_buffer_output@@Base>:
  409d08:	stp	x29, x30, [sp, #-64]!
  409d0c:	stp	x22, x21, [sp, #32]
  409d10:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  409d14:	mov	x21, x0
  409d18:	ldr	x0, [x22, #4016]
  409d1c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409d20:	ldr	x9, [x8, #2792]
  409d24:	str	x23, [sp, #16]
  409d28:	sub	x23, x21, x0
  409d2c:	add	x10, x23, x2
  409d30:	add	x11, x10, #0x5
  409d34:	stp	x20, x19, [sp, #48]
  409d38:	mov	x19, x2
  409d3c:	cmp	x11, x9
  409d40:	mov	x20, x1
  409d44:	mov	x29, sp
  409d48:	b.ls	409d6c <variable_buffer_output@@Base+0x64>  // b.plast
  409d4c:	add	x10, x10, #0x64
  409d50:	lsl	x9, x9, #1
  409d54:	cmp	x10, x9
  409d58:	csel	x1, x10, x9, hi  // hi = pmore
  409d5c:	str	x1, [x8, #2792]
  409d60:	bl	419de0 <xrealloc@@Base>
  409d64:	add	x21, x0, x23
  409d68:	str	x0, [x22, #4016]
  409d6c:	mov	x0, x21
  409d70:	mov	x1, x20
  409d74:	mov	x2, x19
  409d78:	bl	406710 <memcpy@plt>
  409d7c:	add	x0, x21, x19
  409d80:	ldp	x20, x19, [sp, #48]
  409d84:	ldp	x22, x21, [sp, #32]
  409d88:	ldr	x23, [sp, #16]
  409d8c:	ldp	x29, x30, [sp], #64
  409d90:	ret

0000000000409d94 <recursively_expand_for_file@@Base>:
  409d94:	sub	sp, sp, #0x70
  409d98:	stp	x29, x30, [sp, #16]
  409d9c:	stp	x28, x27, [sp, #32]
  409da0:	stp	x26, x25, [sp, #48]
  409da4:	stp	x24, x23, [sp, #64]
  409da8:	stp	x22, x21, [sp, #80]
  409dac:	stp	x20, x19, [sp, #96]
  409db0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  409db4:	mov	x8, x0
  409db8:	ldr	x23, [x21, #1456]
  409dbc:	ldr	x9, [x8, #16]!
  409dc0:	mov	x19, x0
  409dc4:	mov	x20, x1
  409dc8:	add	x29, sp, #0x10
  409dcc:	cbz	x9, 409e0c <recursively_expand_for_file@@Base+0x78>
  409dd0:	add	x9, sp, #0x8
  409dd4:	str	x8, [sp, #8]
  409dd8:	str	x9, [x21, #1456]
  409ddc:	adrp	x11, 441000 <stdio_traced@@Base+0x1a48>
  409de0:	ldr	x10, [x11, #1536]
  409de4:	cbz	x10, 409e1c <recursively_expand_for_file@@Base+0x88>
  409de8:	mov	w25, wzr
  409dec:	ldr	w8, [x19, #44]
  409df0:	tbnz	w8, #6, 409e2c <recursively_expand_for_file@@Base+0x98>
  409df4:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  409df8:	cbz	x20, 409e50 <recursively_expand_for_file@@Base+0xbc>
  409dfc:	ldr	x9, [x20, #80]
  409e00:	ldr	x27, [x10, #2424]
  409e04:	str	x9, [x10, #2424]
  409e08:	b	409e54 <recursively_expand_for_file@@Base+0xc0>
  409e0c:	mov	x9, x23
  409e10:	adrp	x11, 441000 <stdio_traced@@Base+0x1a48>
  409e14:	ldr	x10, [x11, #1536]
  409e18:	cbnz	x10, 409de8 <recursively_expand_for_file@@Base+0x54>
  409e1c:	mov	w25, #0x1                   	// #1
  409e20:	str	x8, [x11, #1536]
  409e24:	ldr	w8, [x19, #44]
  409e28:	tbz	w8, #6, 409df4 <recursively_expand_for_file@@Base+0x60>
  409e2c:	tst	w8, #0x7fff00
  409e30:	b.eq	409f50 <recursively_expand_for_file@@Base+0x1bc>  // b.none
  409e34:	mov	w9, #0x7fff00              	// #8388352
  409e38:	add	w9, w8, w9
  409e3c:	lsr	w9, w9, #8
  409e40:	bfi	w8, w9, #8, #15
  409e44:	str	w8, [x19, #44]
  409e48:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  409e4c:	cbnz	x20, 409dfc <recursively_expand_for_file@@Base+0x68>
  409e50:	mov	x27, xzr
  409e54:	orr	w9, w8, #0x40
  409e58:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  409e5c:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  409e60:	str	w9, [x19, #44]
  409e64:	tbnz	w8, #1, 409e88 <recursively_expand_for_file@@Base+0xf4>
  409e68:	ldr	x1, [x19, #8]
  409e6c:	ldr	x22, [x28, #4016]
  409e70:	ldr	x26, [x24, #2792]
  409e74:	mov	x2, #0xffffffffffffffff    	// #-1
  409e78:	mov	x0, xzr
  409e7c:	str	xzr, [x28, #4016]
  409e80:	bl	40a038 <variable_expand_string@@Base>
  409e84:	b	409f00 <recursively_expand_for_file@@Base+0x16c>
  409e88:	ldr	x22, [x28, #4016]
  409e8c:	str	xzr, [x28, #4016]
  409e90:	ldr	x21, [x19]
  409e94:	ldr	x26, [x24, #2792]
  409e98:	mov	x0, x21
  409e9c:	bl	406750 <strlen@plt>
  409ea0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409ea4:	ldr	x2, [x8, #2424]
  409ea8:	mov	x1, x0
  409eac:	mov	w3, #0x1                   	// #1
  409eb0:	mov	x0, x21
  409eb4:	bl	40a908 <restore_variable_buffer@@Base+0x44>
  409eb8:	ldr	x8, [x28, #4016]
  409ebc:	ldr	x9, [x24, #2792]
  409ec0:	sub	x21, x0, x8
  409ec4:	add	x10, x21, #0x6
  409ec8:	cmp	x10, x9
  409ecc:	b.ls	409ef4 <recursively_expand_for_file@@Base+0x160>  // b.plast
  409ed0:	add	x10, x21, #0x65
  409ed4:	lsl	x9, x9, #1
  409ed8:	cmp	x10, x9
  409edc:	csel	x1, x10, x9, hi  // hi = pmore
  409ee0:	mov	x0, x8
  409ee4:	str	x1, [x24, #2792]
  409ee8:	bl	419de0 <xrealloc@@Base>
  409eec:	str	x0, [x28, #4016]
  409ef0:	add	x0, x0, x21
  409ef4:	strb	wzr, [x0]
  409ef8:	ldr	x0, [x28, #4016]
  409efc:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  409f00:	str	x22, [x28, #4016]
  409f04:	str	x26, [x24, #2792]
  409f08:	ldr	w8, [x19, #44]
  409f0c:	and	w8, w8, #0xffffffbf
  409f10:	str	w8, [x19, #44]
  409f14:	cbz	w25, 409f20 <recursively_expand_for_file@@Base+0x18c>
  409f18:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  409f1c:	str	xzr, [x8, #1536]
  409f20:	cbz	x20, 409f2c <recursively_expand_for_file@@Base+0x198>
  409f24:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  409f28:	str	x27, [x8, #2424]
  409f2c:	str	x23, [x21, #1456]
  409f30:	ldp	x20, x19, [sp, #96]
  409f34:	ldp	x22, x21, [sp, #80]
  409f38:	ldp	x24, x23, [sp, #64]
  409f3c:	ldp	x26, x25, [sp, #48]
  409f40:	ldp	x28, x27, [sp, #32]
  409f44:	ldp	x29, x30, [sp, #16]
  409f48:	add	sp, sp, #0x70
  409f4c:	ret
  409f50:	ldr	x0, [x19]
  409f54:	ldr	x20, [x9]
  409f58:	bl	406750 <strlen@plt>
  409f5c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  409f60:	mov	x21, x0
  409f64:	add	x1, x1, #0x2a8
  409f68:	mov	w2, #0x5                   	// #5
  409f6c:	mov	x0, xzr
  409f70:	bl	406dc0 <dcgettext@plt>
  409f74:	ldr	x3, [x19]
  409f78:	mov	x2, x0
  409f7c:	mov	x0, x20
  409f80:	mov	x1, x21
  409f84:	bl	41aff0 <fatal@@Base>

0000000000409f88 <allocated_variable_expand_for_file@@Base>:
  409f88:	stp	x29, x30, [sp, #-80]!
  409f8c:	stp	x20, x19, [sp, #64]
  409f90:	adrp	x19, 441000 <stdio_traced@@Base+0x1a48>
  409f94:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  409f98:	stp	x22, x21, [sp, #48]
  409f9c:	ldr	x22, [x19, #4016]
  409fa0:	ldr	x21, [x20, #2792]
  409fa4:	mov	x8, x0
  409fa8:	stp	x26, x25, [sp, #16]
  409fac:	stp	x24, x23, [sp, #32]
  409fb0:	mov	x29, sp
  409fb4:	str	xzr, [x19, #4016]
  409fb8:	cbz	x1, 40a008 <allocated_variable_expand_for_file@@Base+0x80>
  409fbc:	ldr	x9, [x1, #80]
  409fc0:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  409fc4:	ldr	x24, [x23, #2424]
  409fc8:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  409fcc:	str	x9, [x23, #2424]
  409fd0:	ldr	x9, [x1, #32]
  409fd4:	ldr	x26, [x25, #1536]
  409fd8:	cbz	x9, 409fe8 <allocated_variable_expand_for_file@@Base+0x60>
  409fdc:	ldr	x10, [x9]
  409fe0:	cmp	x10, #0x0
  409fe4:	csel	x9, xzr, x9, eq  // eq = none
  409fe8:	mov	x2, #0xffffffffffffffff    	// #-1
  409fec:	mov	x0, xzr
  409ff0:	mov	x1, x8
  409ff4:	str	x9, [x25, #1536]
  409ff8:	bl	40a038 <variable_expand_string@@Base>
  409ffc:	str	x24, [x23, #2424]
  40a000:	str	x26, [x25, #1536]
  40a004:	b	40a018 <allocated_variable_expand_for_file@@Base+0x90>
  40a008:	mov	x2, #0xffffffffffffffff    	// #-1
  40a00c:	mov	x0, xzr
  40a010:	mov	x1, x8
  40a014:	bl	40a038 <variable_expand_string@@Base>
  40a018:	str	x22, [x19, #4016]
  40a01c:	str	x21, [x20, #2792]
  40a020:	ldp	x20, x19, [sp, #64]
  40a024:	ldp	x22, x21, [sp, #48]
  40a028:	ldp	x24, x23, [sp, #32]
  40a02c:	ldp	x26, x25, [sp, #16]
  40a030:	ldp	x29, x30, [sp], #80
  40a034:	ret

000000000040a038 <variable_expand_string@@Base>:
  40a038:	stp	x29, x30, [sp, #-96]!
  40a03c:	stp	x28, x27, [sp, #16]
  40a040:	stp	x26, x25, [sp, #32]
  40a044:	stp	x24, x23, [sp, #48]
  40a048:	stp	x22, x21, [sp, #64]
  40a04c:	stp	x20, x19, [sp, #80]
  40a050:	mov	x29, sp
  40a054:	sub	sp, sp, #0x40
  40a058:	mov	x21, x2
  40a05c:	mov	x20, x1
  40a060:	adrp	x26, 441000 <stdio_traced@@Base+0x1a48>
  40a064:	cbz	x0, 40a0c0 <variable_expand_string@@Base+0x88>
  40a068:	mov	x19, x0
  40a06c:	ldr	x0, [x26, #4016]
  40a070:	cmn	x21, #0x1
  40a074:	sub	x22, x19, x0
  40a078:	b.eq	40a0d8 <variable_expand_string@@Base+0xa0>  // b.none
  40a07c:	cbnz	x21, 40a0e8 <variable_expand_string@@Base+0xb0>
  40a080:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a084:	ldr	x9, [x8, #2792]
  40a088:	add	x10, x22, #0x6
  40a08c:	cmp	x10, x9
  40a090:	b.ls	40a0b4 <variable_expand_string@@Base+0x7c>  // b.plast
  40a094:	add	x10, x22, #0x65
  40a098:	lsl	x9, x9, #1
  40a09c:	cmp	x10, x9
  40a0a0:	csel	x1, x10, x9, hi  // hi = pmore
  40a0a4:	str	x1, [x8, #2792]
  40a0a8:	bl	419de0 <xrealloc@@Base>
  40a0ac:	add	x19, x0, x22
  40a0b0:	str	x0, [x26, #4016]
  40a0b4:	strb	wzr, [x19]
  40a0b8:	ldr	x0, [x26, #4016]
  40a0bc:	b	40a514 <variable_expand_string@@Base+0x4dc>
  40a0c0:	ldr	x0, [x26, #4016]
  40a0c4:	cbz	x0, 40a534 <variable_expand_string@@Base+0x4fc>
  40a0c8:	mov	x19, x0
  40a0cc:	cmn	x21, #0x1
  40a0d0:	sub	x22, x19, x0
  40a0d4:	b.ne	40a07c <variable_expand_string@@Base+0x44>  // b.any
  40a0d8:	mov	x0, x20
  40a0dc:	stur	x22, [x29, #-24]
  40a0e0:	bl	419e60 <xstrdup@@Base>
  40a0e4:	b	40a0f8 <variable_expand_string@@Base+0xc0>
  40a0e8:	mov	x0, x20
  40a0ec:	mov	x1, x21
  40a0f0:	stur	x22, [x29, #-24]
  40a0f4:	bl	419e7c <xstrndup@@Base>
  40a0f8:	mov	x22, x0
  40a0fc:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40a100:	stur	x0, [x29, #-32]
  40a104:	b	40a118 <variable_expand_string@@Base+0xe0>
  40a108:	ldrb	w8, [x23]
  40a10c:	strb	w8, [x19], #1
  40a110:	ldrb	w8, [x22], #1
  40a114:	cbz	w8, 40a4c4 <variable_expand_string@@Base+0x48c>
  40a118:	mov	w1, #0x24                  	// #36
  40a11c:	mov	x0, x22
  40a120:	bl	406c80 <strchr@plt>
  40a124:	mov	x23, x0
  40a128:	cbz	x0, 40a134 <variable_expand_string@@Base+0xfc>
  40a12c:	sub	x20, x23, x22
  40a130:	b	40a140 <variable_expand_string@@Base+0x108>
  40a134:	mov	x0, x22
  40a138:	bl	406750 <strlen@plt>
  40a13c:	add	x20, x0, #0x1
  40a140:	ldr	x0, [x26, #4016]
  40a144:	ldr	x8, [x21, #2792]
  40a148:	sub	x24, x19, x0
  40a14c:	add	x9, x24, x20
  40a150:	add	x10, x9, #0x5
  40a154:	cmp	x10, x8
  40a158:	b.ls	40a17c <variable_expand_string@@Base+0x144>  // b.plast
  40a15c:	add	x9, x9, #0x64
  40a160:	lsl	x8, x8, #1
  40a164:	cmp	x9, x8
  40a168:	csel	x1, x9, x8, hi  // hi = pmore
  40a16c:	str	x1, [x21, #2792]
  40a170:	bl	419de0 <xrealloc@@Base>
  40a174:	add	x19, x0, x24
  40a178:	str	x0, [x26, #4016]
  40a17c:	mov	x0, x19
  40a180:	mov	x1, x22
  40a184:	mov	x2, x20
  40a188:	bl	406710 <memcpy@plt>
  40a18c:	add	x19, x19, x20
  40a190:	cbz	x23, 40a4c4 <variable_expand_string@@Base+0x48c>
  40a194:	mov	x22, x23
  40a198:	ldrb	w20, [x22, #1]!
  40a19c:	cmp	w20, #0x27
  40a1a0:	b.gt	40a1ec <variable_expand_string@@Base+0x1b4>
  40a1a4:	cbz	w20, 40a1b0 <variable_expand_string@@Base+0x178>
  40a1a8:	cmp	w20, #0x24
  40a1ac:	b.ne	40a218 <variable_expand_string@@Base+0x1e0>  // b.any
  40a1b0:	ldr	x0, [x26, #4016]
  40a1b4:	ldr	x8, [x21, #2792]
  40a1b8:	sub	x20, x19, x0
  40a1bc:	add	x9, x20, #0x6
  40a1c0:	cmp	x9, x8
  40a1c4:	b.ls	40a108 <variable_expand_string@@Base+0xd0>  // b.plast
  40a1c8:	add	x9, x20, #0x65
  40a1cc:	lsl	x8, x8, #1
  40a1d0:	cmp	x9, x8
  40a1d4:	csel	x1, x9, x8, hi  // hi = pmore
  40a1d8:	str	x1, [x21, #2792]
  40a1dc:	bl	419de0 <xrealloc@@Base>
  40a1e0:	add	x19, x0, x20
  40a1e4:	str	x0, [x26, #4016]
  40a1e8:	b	40a108 <variable_expand_string@@Base+0xd0>
  40a1ec:	cmp	w20, #0x28
  40a1f0:	b.eq	40a1fc <variable_expand_string@@Base+0x1c4>  // b.none
  40a1f4:	cmp	w20, #0x7b
  40a1f8:	b.ne	40a218 <variable_expand_string@@Base+0x1e0>  // b.any
  40a1fc:	sub	x0, x29, #0x10
  40a200:	sub	x1, x29, #0x8
  40a204:	stp	x19, x22, [x29, #-16]
  40a208:	bl	40d93c <handle_function@@Base>
  40a20c:	cbz	w0, 40a248 <variable_expand_string@@Base+0x210>
  40a210:	ldp	x19, x22, [x29, #-16]
  40a214:	b	40a110 <variable_expand_string@@Base+0xd8>
  40a218:	ldrb	w8, [x23]
  40a21c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40a220:	add	x9, x9, #0xcf0
  40a224:	ldrh	w8, [x9, x8, lsl #1]
  40a228:	tst	w8, #0x6
  40a22c:	b.ne	40a110 <variable_expand_string@@Base+0xd8>  // b.any
  40a230:	mov	w2, #0x1                   	// #1
  40a234:	mov	x0, x19
  40a238:	mov	x1, x22
  40a23c:	bl	40a6bc <expand_argument@@Base+0x128>
  40a240:	mov	x19, x0
  40a244:	b	40a110 <variable_expand_string@@Base+0xd8>
  40a248:	cmp	w20, #0x28
  40a24c:	mov	w8, #0x7d                  	// #125
  40a250:	mov	w9, #0x29                  	// #41
  40a254:	add	x25, x23, #0x2
  40a258:	csel	w23, w9, w8, eq  // eq = none
  40a25c:	mov	x0, x25
  40a260:	mov	w1, w23
  40a264:	bl	406c80 <strchr@plt>
  40a268:	cbz	x0, 40a568 <variable_expand_string@@Base+0x530>
  40a26c:	mov	x24, x0
  40a270:	mov	w2, #0x24                  	// #36
  40a274:	mov	x0, x25
  40a278:	mov	x1, x24
  40a27c:	bl	419e98 <lindex@@Base>
  40a280:	cbz	x0, 40a2c8 <variable_expand_string@@Base+0x290>
  40a284:	ldrb	w9, [x25]
  40a288:	cbz	w9, 40a2d4 <variable_expand_string@@Base+0x29c>
  40a28c:	mov	w8, wzr
  40a290:	mov	x22, x25
  40a294:	b	40a2a4 <variable_expand_string@@Base+0x26c>
  40a298:	add	w8, w8, #0x1
  40a29c:	ldrb	w9, [x22, #1]!
  40a2a0:	cbz	w9, 40a2bc <variable_expand_string@@Base+0x284>
  40a2a4:	cmp	w20, w9, uxtb
  40a2a8:	b.eq	40a298 <variable_expand_string@@Base+0x260>  // b.none
  40a2ac:	cmp	w23, w9, uxtb
  40a2b0:	b.ne	40a29c <variable_expand_string@@Base+0x264>  // b.any
  40a2b4:	subs	w8, w8, #0x1
  40a2b8:	b.ge	40a29c <variable_expand_string@@Base+0x264>  // b.tcont
  40a2bc:	tbnz	w8, #31, 40a2e0 <variable_expand_string@@Base+0x2a8>
  40a2c0:	mov	x23, xzr
  40a2c4:	b	40a2fc <variable_expand_string@@Base+0x2c4>
  40a2c8:	mov	x23, xzr
  40a2cc:	mov	x22, x24
  40a2d0:	b	40a2fc <variable_expand_string@@Base+0x2c4>
  40a2d4:	mov	x23, xzr
  40a2d8:	mov	x22, x25
  40a2dc:	b	40a2fc <variable_expand_string@@Base+0x2c4>
  40a2e0:	mov	x0, x25
  40a2e4:	mov	x1, x22
  40a2e8:	bl	40a594 <expand_argument@@Base>
  40a2ec:	mov	x25, x0
  40a2f0:	bl	406750 <strlen@plt>
  40a2f4:	add	x24, x25, x0
  40a2f8:	mov	x23, x25
  40a2fc:	mov	w2, #0x3a                  	// #58
  40a300:	mov	x0, x25
  40a304:	mov	x1, x24
  40a308:	bl	419e98 <lindex@@Base>
  40a30c:	cbz	x0, 40a494 <variable_expand_string@@Base+0x45c>
  40a310:	add	x27, x0, #0x1
  40a314:	mov	x20, x0
  40a318:	mov	w2, #0x3d                  	// #61
  40a31c:	mov	x0, x27
  40a320:	mov	x1, x24
  40a324:	bl	419e98 <lindex@@Base>
  40a328:	cbz	x0, 40a494 <variable_expand_string@@Base+0x45c>
  40a32c:	sub	x20, x20, x25
  40a330:	mov	x28, x0
  40a334:	mov	x0, x25
  40a338:	mov	x1, x20
  40a33c:	stur	x23, [x29, #-40]
  40a340:	bl	424110 <lookup_variable@@Base>
  40a344:	mov	x23, x0
  40a348:	cbnz	x0, 40a390 <variable_expand_string@@Base+0x358>
  40a34c:	adrp	x8, 442000 <just_print_flag@@Base>
  40a350:	ldr	w8, [x8, #64]
  40a354:	cbz	w8, 40a390 <variable_expand_string@@Base+0x358>
  40a358:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40a35c:	ldr	x8, [x8, #1536]
  40a360:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40a364:	mov	w2, #0x5                   	// #5
  40a368:	mov	x0, xzr
  40a36c:	add	x1, x1, #0x2ff
  40a370:	stur	x8, [x29, #-48]
  40a374:	bl	406dc0 <dcgettext@plt>
  40a378:	mov	x2, x0
  40a37c:	ldur	x0, [x29, #-48]
  40a380:	mov	x1, x20
  40a384:	mov	w3, w20
  40a388:	mov	x4, x25
  40a38c:	bl	41ae34 <error@@Base>
  40a390:	cbz	x23, 40a48c <variable_expand_string@@Base+0x454>
  40a394:	ldr	x0, [x23, #8]
  40a398:	ldrb	w8, [x0]
  40a39c:	cbz	w8, 40a48c <variable_expand_string@@Base+0x454>
  40a3a0:	ldrb	w8, [x23, #44]
  40a3a4:	add	x9, x28, #0x1
  40a3a8:	stur	x9, [x29, #-56]
  40a3ac:	tbz	w8, #0, 40a3bc <variable_expand_string@@Base+0x384>
  40a3b0:	mov	x0, x23
  40a3b4:	mov	x1, xzr
  40a3b8:	bl	409d94 <recursively_expand_for_file@@Base>
  40a3bc:	sub	x25, x28, x27
  40a3c0:	add	x8, x25, #0x11
  40a3c4:	and	x8, x8, #0xfffffffffffffff0
  40a3c8:	mov	x9, sp
  40a3cc:	sub	x20, x9, x8
  40a3d0:	stur	x0, [x29, #-48]
  40a3d4:	mov	sp, x20
  40a3d8:	mov	x28, x20
  40a3dc:	mov	w8, #0x25                  	// #37
  40a3e0:	strb	w8, [x28], #1
  40a3e4:	mov	x0, x28
  40a3e8:	mov	x1, x27
  40a3ec:	mov	x2, x25
  40a3f0:	bl	406710 <memcpy@plt>
  40a3f4:	ldur	x1, [x29, #-56]
  40a3f8:	strb	wzr, [x28, x25]
  40a3fc:	mov	x9, sp
  40a400:	sub	x25, x24, x1
  40a404:	add	x8, x25, #0x11
  40a408:	and	x8, x8, #0xfffffffffffffff0
  40a40c:	sub	x27, x9, x8
  40a410:	mov	sp, x27
  40a414:	mov	x24, x27
  40a418:	mov	w8, #0x25                  	// #37
  40a41c:	strb	w8, [x24], #1
  40a420:	mov	x0, x24
  40a424:	mov	x2, x25
  40a428:	bl	406710 <memcpy@plt>
  40a42c:	mov	x0, x28
  40a430:	strb	wzr, [x24, x25]
  40a434:	bl	41d7d0 <find_percent@@Base>
  40a438:	cbz	x0, 40a460 <variable_expand_string@@Base+0x428>
  40a43c:	add	x25, x0, #0x1
  40a440:	mov	x0, x24
  40a444:	bl	41d7d0 <find_percent@@Base>
  40a448:	cmp	x0, #0x0
  40a44c:	csinc	x8, xzr, x0, eq  // eq = none
  40a450:	mov	x27, x24
  40a454:	mov	x20, x28
  40a458:	mov	x28, x25
  40a45c:	mov	x24, x8
  40a460:	ldur	x25, [x29, #-48]
  40a464:	mov	x0, x19
  40a468:	mov	x2, x20
  40a46c:	mov	x3, x27
  40a470:	mov	x1, x25
  40a474:	mov	x4, x28
  40a478:	mov	x5, x24
  40a47c:	bl	40cf94 <patsubst_expand_pat@@Base>
  40a480:	ldrb	w8, [x23, #44]
  40a484:	mov	x19, x0
  40a488:	tbnz	w8, #0, 40a4b4 <variable_expand_string@@Base+0x47c>
  40a48c:	ldur	x23, [x29, #-40]
  40a490:	b	40a4a8 <variable_expand_string@@Base+0x470>
  40a494:	sub	x2, x24, x25
  40a498:	mov	x0, x19
  40a49c:	mov	x1, x25
  40a4a0:	bl	40a6bc <expand_argument@@Base+0x128>
  40a4a4:	mov	x19, x0
  40a4a8:	mov	x0, x23
  40a4ac:	bl	406c60 <free@plt>
  40a4b0:	b	40a110 <variable_expand_string@@Base+0xd8>
  40a4b4:	mov	x0, x25
  40a4b8:	bl	406c60 <free@plt>
  40a4bc:	ldur	x23, [x29, #-40]
  40a4c0:	b	40a4a8 <variable_expand_string@@Base+0x470>
  40a4c4:	ldur	x0, [x29, #-32]
  40a4c8:	bl	406c60 <free@plt>
  40a4cc:	ldr	x0, [x26, #4016]
  40a4d0:	ldr	x8, [x21, #2792]
  40a4d4:	sub	x20, x19, x0
  40a4d8:	add	x9, x20, #0x6
  40a4dc:	cmp	x9, x8
  40a4e0:	b.ls	40a504 <variable_expand_string@@Base+0x4cc>  // b.plast
  40a4e4:	add	x9, x20, #0x65
  40a4e8:	lsl	x8, x8, #1
  40a4ec:	cmp	x9, x8
  40a4f0:	csel	x1, x9, x8, hi  // hi = pmore
  40a4f4:	str	x1, [x21, #2792]
  40a4f8:	bl	419de0 <xrealloc@@Base>
  40a4fc:	add	x19, x0, x20
  40a500:	str	x0, [x26, #4016]
  40a504:	strb	wzr, [x19]
  40a508:	ldr	x8, [x26, #4016]
  40a50c:	ldur	x9, [x29, #-24]
  40a510:	add	x0, x8, x9
  40a514:	mov	sp, x29
  40a518:	ldp	x20, x19, [sp, #80]
  40a51c:	ldp	x22, x21, [sp, #64]
  40a520:	ldp	x24, x23, [sp, #48]
  40a524:	ldp	x26, x25, [sp, #32]
  40a528:	ldp	x28, x27, [sp, #16]
  40a52c:	ldp	x29, x30, [sp], #96
  40a530:	ret
  40a534:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a538:	mov	w9, #0xc8                  	// #200
  40a53c:	mov	w0, #0xc8                  	// #200
  40a540:	str	x9, [x8, #2792]
  40a544:	bl	419e14 <xmalloc@@Base>
  40a548:	str	x0, [x26, #4016]
  40a54c:	strb	wzr, [x0]
  40a550:	ldr	x0, [x26, #4016]
  40a554:	mov	x19, x0
  40a558:	cmn	x21, #0x1
  40a55c:	sub	x22, x19, x0
  40a560:	b.ne	40a07c <variable_expand_string@@Base+0x44>  // b.any
  40a564:	b	40a0d8 <variable_expand_string@@Base+0xa0>
  40a568:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a56c:	ldr	x8, [x8, #1456]
  40a570:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40a574:	add	x1, x1, #0x2df
  40a578:	mov	w2, #0x5                   	// #5
  40a57c:	ldr	x19, [x8]
  40a580:	bl	406dc0 <dcgettext@plt>
  40a584:	mov	x2, x0
  40a588:	mov	x0, x19
  40a58c:	mov	x1, xzr
  40a590:	bl	41aff0 <fatal@@Base>

000000000040a594 <expand_argument@@Base>:
  40a594:	stp	x29, x30, [sp, #-80]!
  40a598:	cmp	x0, x1
  40a59c:	str	x25, [sp, #16]
  40a5a0:	stp	x24, x23, [sp, #32]
  40a5a4:	stp	x22, x21, [sp, #48]
  40a5a8:	stp	x20, x19, [sp, #64]
  40a5ac:	mov	x29, sp
  40a5b0:	b.eq	40a5e4 <expand_argument@@Base+0x50>  // b.none
  40a5b4:	mov	x19, x0
  40a5b8:	cbz	x1, 40a608 <expand_argument@@Base+0x74>
  40a5bc:	ldrb	w8, [x1]
  40a5c0:	cbz	w8, 40a608 <expand_argument@@Base+0x74>
  40a5c4:	sub	x20, x1, x19
  40a5c8:	cmp	x20, #0x3e8
  40a5cc:	add	x0, x20, #0x1
  40a5d0:	b.lt	40a638 <expand_argument@@Base+0xa4>  // b.tstop
  40a5d4:	bl	419e14 <xmalloc@@Base>
  40a5d8:	mov	x21, x0
  40a5dc:	mov	x22, x0
  40a5e0:	b	40a650 <expand_argument@@Base+0xbc>
  40a5e4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  40a5e8:	add	x0, x0, #0x3a9
  40a5ec:	mov	sp, x29
  40a5f0:	ldp	x20, x19, [sp, #64]
  40a5f4:	ldp	x22, x21, [sp, #48]
  40a5f8:	ldp	x24, x23, [sp, #32]
  40a5fc:	ldr	x25, [sp, #16]
  40a600:	ldp	x29, x30, [sp], #80
  40a604:	b	419e60 <xstrdup@@Base>
  40a608:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  40a60c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40a610:	ldr	x22, [x20, #4016]
  40a614:	ldr	x23, [x21, #2792]
  40a618:	mov	x2, #0xffffffffffffffff    	// #-1
  40a61c:	mov	x0, xzr
  40a620:	mov	x1, x19
  40a624:	str	xzr, [x20, #4016]
  40a628:	bl	40a038 <variable_expand_string@@Base>
  40a62c:	str	x22, [x20, #4016]
  40a630:	str	x23, [x21, #2792]
  40a634:	b	40a6a0 <expand_argument@@Base+0x10c>
  40a638:	add	x9, x0, #0xf
  40a63c:	mov	x8, sp
  40a640:	and	x9, x9, #0xfffffffffffffff0
  40a644:	sub	x21, x8, x9
  40a648:	mov	sp, x21
  40a64c:	mov	x22, xzr
  40a650:	mov	x0, x21
  40a654:	mov	x1, x19
  40a658:	mov	x2, x20
  40a65c:	bl	406710 <memcpy@plt>
  40a660:	strb	wzr, [x21, x20]
  40a664:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  40a668:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  40a66c:	ldr	x24, [x20, #4016]
  40a670:	ldr	x25, [x23, #2792]
  40a674:	mov	x2, #0xffffffffffffffff    	// #-1
  40a678:	mov	x0, xzr
  40a67c:	mov	x1, x21
  40a680:	str	xzr, [x20, #4016]
  40a684:	bl	40a038 <variable_expand_string@@Base>
  40a688:	mov	x19, x0
  40a68c:	mov	x0, x22
  40a690:	str	x24, [x20, #4016]
  40a694:	str	x25, [x23, #2792]
  40a698:	bl	406c60 <free@plt>
  40a69c:	mov	x0, x19
  40a6a0:	mov	sp, x29
  40a6a4:	ldp	x20, x19, [sp, #64]
  40a6a8:	ldp	x22, x21, [sp, #48]
  40a6ac:	ldp	x24, x23, [sp, #32]
  40a6b0:	ldr	x25, [sp, #16]
  40a6b4:	ldp	x29, x30, [sp], #80
  40a6b8:	ret
  40a6bc:	stp	x29, x30, [sp, #-64]!
  40a6c0:	stp	x22, x21, [sp, #32]
  40a6c4:	stp	x20, x19, [sp, #48]
  40a6c8:	mov	x21, x1
  40a6cc:	mov	x19, x0
  40a6d0:	mov	x0, x1
  40a6d4:	mov	x1, x2
  40a6d8:	stp	x24, x23, [sp, #16]
  40a6dc:	mov	x29, sp
  40a6e0:	mov	x22, x2
  40a6e4:	bl	424110 <lookup_variable@@Base>
  40a6e8:	mov	x20, x0
  40a6ec:	cbnz	x0, 40a730 <expand_argument@@Base+0x19c>
  40a6f0:	adrp	x8, 442000 <just_print_flag@@Base>
  40a6f4:	ldr	w8, [x8, #64]
  40a6f8:	cbz	w8, 40a730 <expand_argument@@Base+0x19c>
  40a6fc:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40a700:	ldr	x23, [x8, #1536]
  40a704:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40a708:	add	x1, x1, #0x2ff
  40a70c:	mov	w2, #0x5                   	// #5
  40a710:	mov	x0, xzr
  40a714:	bl	406dc0 <dcgettext@plt>
  40a718:	mov	x2, x0
  40a71c:	mov	x0, x23
  40a720:	mov	x1, x22
  40a724:	mov	w3, w22
  40a728:	mov	x4, x21
  40a72c:	bl	41ae34 <error@@Base>
  40a730:	cbz	x20, 40a7d0 <expand_argument@@Base+0x23c>
  40a734:	ldr	x21, [x20, #8]
  40a738:	ldr	w8, [x20, #44]
  40a73c:	ldrb	w9, [x21]
  40a740:	cbnz	w9, 40a748 <expand_argument@@Base+0x1b4>
  40a744:	tbz	w8, #1, 40a7d0 <expand_argument@@Base+0x23c>
  40a748:	tbz	w8, #0, 40a75c <expand_argument@@Base+0x1c8>
  40a74c:	mov	x0, x20
  40a750:	mov	x1, xzr
  40a754:	bl	409d94 <recursively_expand_for_file@@Base>
  40a758:	mov	x21, x0
  40a75c:	mov	x0, x21
  40a760:	bl	406750 <strlen@plt>
  40a764:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  40a768:	mov	x22, x0
  40a76c:	ldr	x0, [x23, #4016]
  40a770:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a774:	ldr	x9, [x8, #2792]
  40a778:	sub	x24, x19, x0
  40a77c:	add	x10, x24, x22
  40a780:	add	x11, x10, #0x5
  40a784:	cmp	x11, x9
  40a788:	b.ls	40a7ac <expand_argument@@Base+0x218>  // b.plast
  40a78c:	add	x10, x10, #0x64
  40a790:	lsl	x9, x9, #1
  40a794:	cmp	x10, x9
  40a798:	csel	x1, x10, x9, hi  // hi = pmore
  40a79c:	str	x1, [x8, #2792]
  40a7a0:	bl	419de0 <xrealloc@@Base>
  40a7a4:	add	x19, x0, x24
  40a7a8:	str	x0, [x23, #4016]
  40a7ac:	mov	x0, x19
  40a7b0:	mov	x1, x21
  40a7b4:	mov	x2, x22
  40a7b8:	bl	406710 <memcpy@plt>
  40a7bc:	ldrb	w8, [x20, #44]
  40a7c0:	add	x19, x19, x22
  40a7c4:	tbz	w8, #0, 40a7d0 <expand_argument@@Base+0x23c>
  40a7c8:	mov	x0, x21
  40a7cc:	bl	406c60 <free@plt>
  40a7d0:	mov	x0, x19
  40a7d4:	ldp	x20, x19, [sp, #48]
  40a7d8:	ldp	x22, x21, [sp, #32]
  40a7dc:	ldp	x24, x23, [sp, #16]
  40a7e0:	ldp	x29, x30, [sp], #64
  40a7e4:	ret

000000000040a7e8 <variable_expand@@Base>:
  40a7e8:	mov	x2, #0xffffffffffffffff    	// #-1
  40a7ec:	mov	x1, x0
  40a7f0:	mov	x0, xzr
  40a7f4:	b	40a038 <variable_expand_string@@Base>

000000000040a7f8 <variable_expand_for_file@@Base>:
  40a7f8:	mov	x8, x0
  40a7fc:	cbz	x1, 40a868 <variable_expand_for_file@@Base+0x70>
  40a800:	stp	x29, x30, [sp, #-48]!
  40a804:	stp	x22, x21, [sp, #16]
  40a808:	stp	x20, x19, [sp, #32]
  40a80c:	ldr	x9, [x1, #80]
  40a810:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  40a814:	ldr	x20, [x19, #2424]
  40a818:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  40a81c:	str	x9, [x19, #2424]
  40a820:	ldr	x9, [x1, #32]
  40a824:	ldr	x22, [x21, #1536]
  40a828:	mov	x29, sp
  40a82c:	cbz	x9, 40a83c <variable_expand_for_file@@Base+0x44>
  40a830:	ldr	x10, [x9]
  40a834:	cmp	x10, #0x0
  40a838:	csel	x9, xzr, x9, eq  // eq = none
  40a83c:	mov	x2, #0xffffffffffffffff    	// #-1
  40a840:	mov	x0, xzr
  40a844:	mov	x1, x8
  40a848:	str	x9, [x21, #1536]
  40a84c:	bl	40a038 <variable_expand_string@@Base>
  40a850:	str	x20, [x19, #2424]
  40a854:	str	x22, [x21, #1536]
  40a858:	ldp	x20, x19, [sp, #32]
  40a85c:	ldp	x22, x21, [sp, #16]
  40a860:	ldp	x29, x30, [sp], #48
  40a864:	ret
  40a868:	mov	x2, #0xffffffffffffffff    	// #-1
  40a86c:	mov	x0, xzr
  40a870:	mov	x1, x8
  40a874:	b	40a038 <variable_expand_string@@Base>

000000000040a878 <install_variable_buffer@@Base>:
  40a878:	stp	x29, x30, [sp, #-32]!
  40a87c:	str	x19, [sp, #16]
  40a880:	adrp	x19, 441000 <stdio_traced@@Base+0x1a48>
  40a884:	ldr	x8, [x19, #4016]
  40a888:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40a88c:	mov	w10, #0xc8                  	// #200
  40a890:	mov	x29, sp
  40a894:	str	x8, [x0]
  40a898:	ldr	x8, [x9, #2792]
  40a89c:	mov	w0, #0xc8                  	// #200
  40a8a0:	str	x8, [x1]
  40a8a4:	str	xzr, [x19, #4016]
  40a8a8:	str	x10, [x9, #2792]
  40a8ac:	bl	419e14 <xmalloc@@Base>
  40a8b0:	str	x0, [x19, #4016]
  40a8b4:	ldr	x19, [sp, #16]
  40a8b8:	strb	wzr, [x0]
  40a8bc:	ldp	x29, x30, [sp], #32
  40a8c0:	ret

000000000040a8c4 <restore_variable_buffer@@Base>:
  40a8c4:	stp	x29, x30, [sp, #-48]!
  40a8c8:	str	x21, [sp, #16]
  40a8cc:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  40a8d0:	ldr	x8, [x21, #4016]
  40a8d4:	stp	x20, x19, [sp, #32]
  40a8d8:	mov	x20, x0
  40a8dc:	mov	x29, sp
  40a8e0:	mov	x0, x8
  40a8e4:	mov	x19, x1
  40a8e8:	bl	406c60 <free@plt>
  40a8ec:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a8f0:	str	x20, [x21, #4016]
  40a8f4:	str	x19, [x8, #2792]
  40a8f8:	ldp	x20, x19, [sp, #32]
  40a8fc:	ldr	x21, [sp, #16]
  40a900:	ldp	x29, x30, [sp], #48
  40a904:	ret
  40a908:	stp	x29, x30, [sp, #-64]!
  40a90c:	stp	x24, x23, [sp, #16]
  40a910:	stp	x22, x21, [sp, #32]
  40a914:	stp	x20, x19, [sp, #48]
  40a918:	mov	x29, sp
  40a91c:	cbz	x2, 40a9b0 <restore_variable_buffer@@Base+0xec>
  40a920:	mov	w23, w3
  40a924:	mov	x21, x2
  40a928:	mov	x20, x1
  40a92c:	mov	x22, x0
  40a930:	b	40a940 <restore_variable_buffer@@Base+0x7c>
  40a934:	ldr	x21, [x21]
  40a938:	mov	w23, w24
  40a93c:	cbz	x21, 40a9b0 <restore_variable_buffer@@Base+0xec>
  40a940:	cbz	w23, 40a954 <restore_variable_buffer@@Base+0x90>
  40a944:	ldr	w8, [x21, #16]
  40a948:	cmp	w8, #0x0
  40a94c:	cset	w24, eq  // eq = none
  40a950:	b	40a958 <restore_variable_buffer@@Base+0x94>
  40a954:	mov	w24, wzr
  40a958:	ldr	x2, [x21, #8]
  40a95c:	mov	x0, x22
  40a960:	mov	x1, x20
  40a964:	bl	42430c <lookup_variable_in_set@@Base>
  40a968:	cbz	x0, 40a934 <restore_variable_buffer@@Base+0x70>
  40a96c:	ldr	w8, [x0, #44]
  40a970:	mov	x19, x0
  40a974:	cbnz	w23, 40a97c <restore_variable_buffer@@Base+0xb8>
  40a978:	tbnz	w8, #7, 40a934 <restore_variable_buffer@@Base+0x70>
  40a97c:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  40a980:	tbnz	w8, #1, 40a9e0 <restore_variable_buffer@@Base+0x11c>
  40a984:	ldr	x20, [x23, #4016]
  40a988:	cbnz	x20, 40aa44 <restore_variable_buffer@@Base+0x180>
  40a98c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a990:	mov	w9, #0xc8                  	// #200
  40a994:	mov	w0, #0xc8                  	// #200
  40a998:	str	x9, [x8, #2792]
  40a99c:	bl	419e14 <xmalloc@@Base>
  40a9a0:	str	x0, [x23, #4016]
  40a9a4:	strb	wzr, [x0]
  40a9a8:	ldr	x20, [x23, #4016]
  40a9ac:	b	40aa44 <restore_variable_buffer@@Base+0x180>
  40a9b0:	adrp	x19, 441000 <stdio_traced@@Base+0x1a48>
  40a9b4:	ldr	x0, [x19, #4016]
  40a9b8:	cbnz	x0, 40aad0 <restore_variable_buffer@@Base+0x20c>
  40a9bc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40a9c0:	mov	w9, #0xc8                  	// #200
  40a9c4:	mov	w0, #0xc8                  	// #200
  40a9c8:	str	x9, [x8, #2792]
  40a9cc:	bl	419e14 <xmalloc@@Base>
  40a9d0:	str	x0, [x19, #4016]
  40a9d4:	strb	wzr, [x0]
  40a9d8:	ldr	x0, [x19, #4016]
  40a9dc:	b	40aad0 <restore_variable_buffer@@Base+0x20c>
  40a9e0:	ldr	x2, [x21]
  40a9e4:	mov	x0, x22
  40a9e8:	mov	x1, x20
  40a9ec:	mov	w3, w24
  40a9f0:	bl	40a908 <restore_variable_buffer@@Base+0x44>
  40a9f4:	ldr	x8, [x23, #4016]
  40a9f8:	mov	x20, x0
  40a9fc:	subs	x21, x0, x8
  40aa00:	b.ls	40aa44 <restore_variable_buffer@@Base+0x180>  // b.plast
  40aa04:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40aa08:	ldr	x10, [x9, #2792]
  40aa0c:	add	x11, x21, #0x6
  40aa10:	cmp	x11, x10
  40aa14:	b.ls	40aa3c <restore_variable_buffer@@Base+0x178>  // b.plast
  40aa18:	add	x11, x21, #0x65
  40aa1c:	lsl	x10, x10, #1
  40aa20:	cmp	x11, x10
  40aa24:	csel	x1, x11, x10, hi  // hi = pmore
  40aa28:	mov	x0, x8
  40aa2c:	str	x1, [x9, #2792]
  40aa30:	bl	419de0 <xrealloc@@Base>
  40aa34:	add	x20, x0, x21
  40aa38:	str	x0, [x23, #4016]
  40aa3c:	mov	w8, #0x20                  	// #32
  40aa40:	strb	w8, [x20], #1
  40aa44:	ldr	w22, [x19, #44]
  40aa48:	ldr	x19, [x19, #8]
  40aa4c:	mov	x0, x19
  40aa50:	bl	406750 <strlen@plt>
  40aa54:	mov	x21, x0
  40aa58:	tbnz	w22, #0, 40aab4 <restore_variable_buffer@@Base+0x1f0>
  40aa5c:	ldr	x0, [x23, #4016]
  40aa60:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40aa64:	ldr	x9, [x8, #2792]
  40aa68:	sub	x22, x20, x0
  40aa6c:	add	x10, x22, x21
  40aa70:	add	x11, x10, #0x5
  40aa74:	cmp	x11, x9
  40aa78:	b.ls	40aa9c <restore_variable_buffer@@Base+0x1d8>  // b.plast
  40aa7c:	add	x10, x10, #0x64
  40aa80:	lsl	x9, x9, #1
  40aa84:	cmp	x10, x9
  40aa88:	csel	x1, x10, x9, hi  // hi = pmore
  40aa8c:	str	x1, [x8, #2792]
  40aa90:	bl	419de0 <xrealloc@@Base>
  40aa94:	add	x20, x0, x22
  40aa98:	str	x0, [x23, #4016]
  40aa9c:	mov	x0, x20
  40aaa0:	mov	x1, x19
  40aaa4:	mov	x2, x21
  40aaa8:	bl	406710 <memcpy@plt>
  40aaac:	add	x0, x20, x21
  40aab0:	b	40aad0 <restore_variable_buffer@@Base+0x20c>
  40aab4:	mov	x0, x20
  40aab8:	mov	x1, x19
  40aabc:	mov	x2, x21
  40aac0:	bl	40a038 <variable_expand_string@@Base>
  40aac4:	mov	x19, x0
  40aac8:	bl	406750 <strlen@plt>
  40aacc:	add	x0, x19, x0
  40aad0:	ldp	x20, x19, [sp, #48]
  40aad4:	ldp	x22, x21, [sp, #32]
  40aad8:	ldp	x24, x23, [sp, #16]
  40aadc:	ldp	x29, x30, [sp], #64
  40aae0:	ret

000000000040aae4 <lookup_file@@Base>:
  40aae4:	sub	sp, sp, #0xa0
  40aae8:	stp	x29, x30, [sp, #144]
  40aaec:	ldrb	w9, [x0]
  40aaf0:	add	x29, sp, #0x90
  40aaf4:	cmp	w9, #0x2e
  40aaf8:	b.eq	40ab40 <lookup_file@@Base+0x5c>  // b.none
  40aafc:	mov	x8, x0
  40ab00:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x1680>
  40ab04:	add	x10, x10, #0x326
  40ab08:	cmp	w9, #0x0
  40ab0c:	csel	x0, x10, x8, eq  // eq = none
  40ab10:	str	x0, [sp, #8]
  40ab14:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ab18:	add	x0, x0, #0xb08
  40ab1c:	mov	x1, sp
  40ab20:	bl	410888 <hash_find_item@@Base>
  40ab24:	ldp	x29, x30, [sp, #144]
  40ab28:	add	sp, sp, #0xa0
  40ab2c:	ret
  40ab30:	cbz	w9, 40ab10 <lookup_file@@Base+0x2c>
  40ab34:	cmp	w9, #0x2e
  40ab38:	mov	x0, x8
  40ab3c:	b.ne	40ab00 <lookup_file@@Base+0x1c>  // b.any
  40ab40:	ldrb	w8, [x0, #1]
  40ab44:	cmp	w8, #0x2f
  40ab48:	b.ne	40ab10 <lookup_file@@Base+0x2c>  // b.any
  40ab4c:	mov	x8, x0
  40ab50:	ldrb	w9, [x8, #2]!
  40ab54:	cmp	w9, #0x2f
  40ab58:	b.ne	40ab30 <lookup_file@@Base+0x4c>  // b.any
  40ab5c:	ldrb	w9, [x8, #1]!
  40ab60:	cmp	w9, #0x2f
  40ab64:	b.eq	40ab5c <lookup_file@@Base+0x78>  // b.none
  40ab68:	b	40ab34 <lookup_file@@Base+0x50>

000000000040ab6c <enter_file@@Base>:
  40ab6c:	sub	sp, sp, #0xd0
  40ab70:	stp	x22, x21, [sp, #176]
  40ab74:	mov	x21, x0
  40ab78:	str	x0, [sp, #8]
  40ab7c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ab80:	add	x0, x0, #0xb08
  40ab84:	mov	x1, sp
  40ab88:	stp	x29, x30, [sp, #144]
  40ab8c:	str	x23, [sp, #160]
  40ab90:	stp	x20, x19, [sp, #192]
  40ab94:	add	x29, sp, #0x90
  40ab98:	bl	410784 <hash_find_slot@@Base>
  40ab9c:	ldr	x19, [x0]
  40aba0:	mov	x20, x0
  40aba4:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  40aba8:	cbz	x19, 40abc0 <enter_file@@Base+0x54>
  40abac:	ldr	x8, [x23, #2328]
  40abb0:	cmp	x8, x19
  40abb4:	b.eq	40abc0 <enter_file@@Base+0x54>  // b.none
  40abb8:	ldr	x8, [x19, #104]
  40abbc:	cbz	x8, 40ac3c <enter_file@@Base+0xd0>
  40abc0:	mov	w0, #0x90                  	// #144
  40abc4:	bl	419e38 <xcalloc@@Base>
  40abc8:	ldr	w8, [x0, #136]
  40abcc:	mov	x22, x0
  40abd0:	stp	x21, x21, [x0]
  40abd4:	and	w8, w8, #0xfffffffc
  40abd8:	orr	w8, w8, #0x1
  40abdc:	str	w8, [x0, #136]
  40abe0:	cbz	x19, 40ac04 <enter_file@@Base+0x98>
  40abe4:	ldr	x8, [x23, #2328]
  40abe8:	cmp	x8, x19
  40abec:	b.eq	40ac04 <enter_file@@Base+0x98>  // b.none
  40abf0:	str	x19, [x22, #104]
  40abf4:	ldr	x8, [x19, #64]
  40abf8:	str	x22, [x8, #56]
  40abfc:	str	x22, [x19, #64]
  40ac00:	b	40ac1c <enter_file@@Base+0xb0>
  40ac04:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ac08:	add	x0, x0, #0xb08
  40ac0c:	mov	x1, x22
  40ac10:	mov	x2, x20
  40ac14:	str	x22, [x22, #64]
  40ac18:	bl	41099c <hash_insert_at@@Base>
  40ac1c:	mov	x19, x22
  40ac20:	mov	x0, x19
  40ac24:	ldp	x20, x19, [sp, #192]
  40ac28:	ldp	x22, x21, [sp, #176]
  40ac2c:	ldr	x23, [sp, #160]
  40ac30:	ldp	x29, x30, [sp, #144]
  40ac34:	add	sp, sp, #0xd0
  40ac38:	ret
  40ac3c:	ldr	w8, [x19, #136]
  40ac40:	and	w8, w8, #0xffffffef
  40ac44:	str	w8, [x19, #136]
  40ac48:	b	40ac20 <enter_file@@Base+0xb4>

000000000040ac4c <rehash_file@@Base>:
  40ac4c:	sub	sp, sp, #0xd0
  40ac50:	stp	x29, x30, [sp, #144]
  40ac54:	stp	x24, x23, [sp, #160]
  40ac58:	stp	x22, x21, [sp, #176]
  40ac5c:	stp	x20, x19, [sp, #192]
  40ac60:	ldr	w8, [x0, #136]
  40ac64:	add	x29, sp, #0x90
  40ac68:	and	w8, w8, #0xffffffef
  40ac6c:	str	w8, [x0, #136]
  40ac70:	str	x1, [sp, #8]
  40ac74:	ldr	x21, [x0, #8]
  40ac78:	cmp	x21, x1
  40ac7c:	b.eq	40afa4 <rehash_file@@Base+0x358>  // b.none
  40ac80:	mov	x22, x0
  40ac84:	mov	x0, x21
  40ac88:	mov	x20, x1
  40ac8c:	bl	406c10 <strcmp@plt>
  40ac90:	cbz	w0, 40afa4 <rehash_file@@Base+0x358>
  40ac94:	str	x21, [sp, #8]
  40ac98:	mov	x19, x22
  40ac9c:	ldr	x22, [x22, #72]
  40aca0:	cbnz	x22, 40ac98 <rehash_file@@Base+0x4c>
  40aca4:	ldr	x0, [x19, #8]
  40aca8:	cmp	x0, x21
  40acac:	b.eq	40acbc <rehash_file@@Base+0x70>  // b.none
  40acb0:	mov	x1, x21
  40acb4:	bl	406c10 <strcmp@plt>
  40acb8:	cbnz	w0, 40afbc <rehash_file@@Base+0x370>
  40acbc:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40acc0:	add	x0, x0, #0xb08
  40acc4:	mov	x1, x19
  40acc8:	bl	410c54 <hash_delete@@Base>
  40accc:	cmp	x19, x0
  40acd0:	b.ne	40afbc <rehash_file@@Base+0x370>  // b.any
  40acd4:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40acd8:	add	x0, x0, #0xb08
  40acdc:	mov	x1, sp
  40ace0:	str	x20, [sp, #8]
  40ace4:	bl	410784 <hash_find_slot@@Base>
  40ace8:	ldr	x8, [x19, #104]
  40acec:	ldr	x24, [x0]
  40acf0:	mov	x2, x0
  40acf4:	str	x20, [x19, #8]
  40acf8:	cbz	x8, 40ad08 <rehash_file@@Base+0xbc>
  40acfc:	str	x20, [x8, #8]
  40ad00:	ldr	x8, [x8, #56]
  40ad04:	cbnz	x8, 40acfc <rehash_file@@Base+0xb0>
  40ad08:	cbz	x24, 40ad8c <rehash_file@@Base+0x140>
  40ad0c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40ad10:	ldr	x8, [x8, #2328]
  40ad14:	cmp	x8, x24
  40ad18:	b.eq	40ad8c <rehash_file@@Base+0x140>  // b.none
  40ad1c:	ldr	x22, [x19, #32]
  40ad20:	cbz	x22, 40ada4 <rehash_file@@Base+0x158>
  40ad24:	ldr	x21, [x24, #32]
  40ad28:	cbz	x21, 40ada0 <rehash_file@@Base+0x154>
  40ad2c:	cmp	x22, x21
  40ad30:	b.eq	40ada4 <rehash_file@@Base+0x158>  // b.none
  40ad34:	ldr	x0, [x19]
  40ad38:	bl	406750 <strlen@plt>
  40ad3c:	ldr	x8, [x21]
  40ad40:	mov	x21, x0
  40ad44:	cbz	x8, 40adc4 <rehash_file@@Base+0x178>
  40ad48:	mov	x0, x8
  40ad4c:	bl	406750 <strlen@plt>
  40ad50:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ad54:	add	x8, x21, x0
  40ad58:	add	x1, x1, #0x329
  40ad5c:	mov	w2, #0x5                   	// #5
  40ad60:	mov	x0, xzr
  40ad64:	add	x23, x8, #0x14
  40ad68:	bl	406dc0 <dcgettext@plt>
  40ad6c:	ldr	x8, [x24, #32]
  40ad70:	ldr	x3, [x19]
  40ad74:	mov	x2, x0
  40ad78:	mov	x0, x22
  40ad7c:	ldp	x4, x5, [x8]
  40ad80:	mov	x1, x23
  40ad84:	bl	41ae34 <error@@Base>
  40ad88:	b	40adec <rehash_file@@Base+0x1a0>
  40ad8c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ad90:	add	x0, x0, #0xb08
  40ad94:	mov	x1, x19
  40ad98:	bl	41099c <hash_insert_at@@Base>
  40ad9c:	b	40afa4 <rehash_file@@Base+0x358>
  40ada0:	str	x22, [x24, #32]
  40ada4:	ldr	x8, [x24, #24]
  40ada8:	cbz	x8, 40ae60 <rehash_file@@Base+0x214>
  40adac:	mov	x9, x8
  40adb0:	ldr	x8, [x8]
  40adb4:	cbnz	x8, 40adac <rehash_file@@Base+0x160>
  40adb8:	ldr	x8, [x19, #24]
  40adbc:	str	x8, [x9]
  40adc0:	b	40ae68 <rehash_file@@Base+0x21c>
  40adc4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40adc8:	add	x1, x1, #0x357
  40adcc:	mov	w2, #0x5                   	// #5
  40add0:	mov	x0, xzr
  40add4:	bl	406dc0 <dcgettext@plt>
  40add8:	ldr	x3, [x19]
  40addc:	mov	x2, x0
  40ade0:	mov	x0, x22
  40ade4:	mov	x1, x21
  40ade8:	bl	41ae34 <error@@Base>
  40adec:	mov	x0, x20
  40adf0:	bl	406750 <strlen@plt>
  40adf4:	ldr	x22, [x19, #32]
  40adf8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40adfc:	add	x21, x0, x21
  40ae00:	add	x1, x1, #0x38f
  40ae04:	mov	w2, #0x5                   	// #5
  40ae08:	mov	x0, xzr
  40ae0c:	bl	406dc0 <dcgettext@plt>
  40ae10:	ldr	x3, [x19]
  40ae14:	mov	x2, x0
  40ae18:	mov	x0, x22
  40ae1c:	mov	x1, x21
  40ae20:	mov	x4, x20
  40ae24:	bl	41ae34 <error@@Base>
  40ae28:	ldr	x22, [x19, #32]
  40ae2c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ae30:	add	x1, x1, #0x3c1
  40ae34:	mov	w2, #0x5                   	// #5
  40ae38:	mov	x0, xzr
  40ae3c:	bl	406dc0 <dcgettext@plt>
  40ae40:	ldr	x4, [x19]
  40ae44:	mov	x2, x0
  40ae48:	mov	x0, x22
  40ae4c:	mov	x1, x21
  40ae50:	mov	x3, x20
  40ae54:	bl	41ae34 <error@@Base>
  40ae58:	ldr	x8, [x24, #24]
  40ae5c:	cbnz	x8, 40adac <rehash_file@@Base+0x160>
  40ae60:	ldr	x8, [x19, #24]
  40ae64:	str	x8, [x24, #24]
  40ae68:	ldr	x1, [x19, #80]
  40ae6c:	add	x0, x24, #0x50
  40ae70:	bl	424b48 <merge_variable_set_lists@@Base>
  40ae74:	ldr	x8, [x24, #104]
  40ae78:	cbz	x8, 40aeb0 <rehash_file@@Base+0x264>
  40ae7c:	ldrb	w8, [x19, #137]
  40ae80:	tbz	w8, #3, 40aec4 <rehash_file@@Base+0x278>
  40ae84:	ldr	x8, [x19, #104]
  40ae88:	cbnz	x8, 40aec4 <rehash_file@@Base+0x278>
  40ae8c:	ldr	x0, [x19]
  40ae90:	bl	406750 <strlen@plt>
  40ae94:	mov	x21, x0
  40ae98:	mov	x0, x20
  40ae9c:	bl	406750 <strlen@plt>
  40aea0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40aea4:	add	x21, x0, x21
  40aea8:	add	x1, x1, #0x3ff
  40aeac:	b	40afe0 <rehash_file@@Base+0x394>
  40aeb0:	ldr	x8, [x19, #104]
  40aeb4:	cbz	x8, 40aec4 <rehash_file@@Base+0x278>
  40aeb8:	ldrb	w9, [x24, #137]
  40aebc:	tbnz	w9, #3, 40afc0 <rehash_file@@Base+0x374>
  40aec0:	str	x8, [x24, #104]
  40aec4:	ldr	x8, [x19, #112]
  40aec8:	ldr	x9, [x24, #112]
  40aecc:	cmp	x8, x9
  40aed0:	b.ls	40aed8 <rehash_file@@Base+0x28c>  // b.plast
  40aed4:	str	x8, [x24, #112]
  40aed8:	ldr	x8, [x19, #120]
  40aedc:	ldr	w9, [x24, #136]
  40aee0:	mov	w11, #0xffef                	// #65519
  40aee4:	movk	w11, #0xfffd, lsl #16
  40aee8:	str	x8, [x24, #120]
  40aeec:	ldr	w8, [x19, #136]
  40aef0:	and	w8, w8, #0x20
  40aef4:	orr	w8, w8, w9
  40aef8:	str	w8, [x24, #136]
  40aefc:	ldr	w10, [x19, #136]
  40af00:	orr	w10, w10, w9
  40af04:	lsr	w10, w10, #8
  40af08:	bfi	w8, w10, #8, #1
  40af0c:	str	w8, [x24, #136]
  40af10:	ldr	w10, [x19, #136]
  40af14:	orr	w10, w10, w9
  40af18:	lsr	w10, w10, #9
  40af1c:	bfi	w8, w10, #9, #1
  40af20:	str	w8, [x24, #136]
  40af24:	ldr	w10, [x19, #136]
  40af28:	orr	w10, w10, w9
  40af2c:	lsr	w10, w10, #10
  40af30:	bfi	w8, w10, #10, #1
  40af34:	str	w8, [x24, #136]
  40af38:	ldr	w10, [x19, #136]
  40af3c:	orr	w10, w10, w9
  40af40:	lsr	w10, w10, #11
  40af44:	bfi	w8, w10, #11, #1
  40af48:	str	w8, [x24, #136]
  40af4c:	ldr	w10, [x19, #136]
  40af50:	orr	w10, w10, w9
  40af54:	lsr	w10, w10, #12
  40af58:	bfi	w8, w10, #12, #1
  40af5c:	str	w8, [x24, #136]
  40af60:	ldr	w10, [x19, #136]
  40af64:	orr	w10, w10, w9
  40af68:	lsr	w10, w10, #13
  40af6c:	bfi	w8, w10, #13, #1
  40af70:	str	w8, [x24, #136]
  40af74:	ldr	w10, [x19, #136]
  40af78:	orr	w10, w10, w9
  40af7c:	lsr	w10, w10, #6
  40af80:	bfi	w8, w10, #6, #1
  40af84:	str	w8, [x24, #136]
  40af88:	ldr	w10, [x19, #136]
  40af8c:	and	w8, w8, w11
  40af90:	orr	w9, w10, w9
  40af94:	and	w9, w9, #0x20000
  40af98:	orr	w8, w8, w9
  40af9c:	str	w8, [x24, #136]
  40afa0:	str	x24, [x19, #72]
  40afa4:	ldp	x20, x19, [sp, #192]
  40afa8:	ldp	x22, x21, [sp, #176]
  40afac:	ldp	x24, x23, [sp, #160]
  40afb0:	ldp	x29, x30, [sp, #144]
  40afb4:	add	sp, sp, #0xd0
  40afb8:	ret
  40afbc:	bl	406b70 <abort@plt>
  40afc0:	ldr	x0, [x19]
  40afc4:	bl	406750 <strlen@plt>
  40afc8:	mov	x21, x0
  40afcc:	mov	x0, x20
  40afd0:	bl	406750 <strlen@plt>
  40afd4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40afd8:	add	x21, x0, x21
  40afdc:	add	x1, x1, #0x433
  40afe0:	mov	w2, #0x5                   	// #5
  40afe4:	mov	x0, xzr
  40afe8:	bl	406dc0 <dcgettext@plt>
  40afec:	ldr	x3, [x19]
  40aff0:	mov	x2, x0
  40aff4:	mov	x0, xzr
  40aff8:	mov	x1, x21
  40affc:	mov	x4, x20
  40b000:	bl	41aff0 <fatal@@Base>
  40b004:	ldr	x0, [x0, #8]
  40b008:	ldr	x1, [x1, #8]
  40b00c:	cmp	x0, x1
  40b010:	b.eq	40b018 <rehash_file@@Base+0x3cc>  // b.none
  40b014:	b	406c10 <strcmp@plt>
  40b018:	mov	w0, wzr
  40b01c:	ret

000000000040b020 <rename_file@@Base>:
  40b020:	stp	x29, x30, [sp, #-32]!
  40b024:	str	x19, [sp, #16]
  40b028:	mov	x29, sp
  40b02c:	mov	x19, x0
  40b030:	bl	40ac4c <rehash_file@@Base>
  40b034:	cbz	x19, 40b048 <rename_file@@Base+0x28>
  40b038:	ldr	x8, [x19, #8]
  40b03c:	str	x8, [x19]
  40b040:	ldr	x19, [x19, #56]
  40b044:	cbnz	x19, 40b038 <rename_file@@Base+0x18>
  40b048:	ldr	x19, [sp, #16]
  40b04c:	ldp	x29, x30, [sp], #32
  40b050:	ret

000000000040b054 <remove_intermediates@@Base>:
  40b054:	stp	x29, x30, [sp, #-96]!
  40b058:	stp	x28, x27, [sp, #16]
  40b05c:	stp	x26, x25, [sp, #32]
  40b060:	stp	x24, x23, [sp, #48]
  40b064:	stp	x22, x21, [sp, #64]
  40b068:	stp	x20, x19, [sp, #80]
  40b06c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b070:	ldrb	w8, [x8, #2808]
  40b074:	mov	x29, sp
  40b078:	tbnz	w8, #0, 40b31c <remove_intermediates@@Base+0x2c8>
  40b07c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b080:	adrp	x9, 442000 <just_print_flag@@Base>
  40b084:	ldr	w8, [x8, #3260]
  40b088:	ldr	w9, [x9, #204]
  40b08c:	orr	w8, w9, w8
  40b090:	cbnz	w8, 40b31c <remove_intermediates@@Base+0x2c8>
  40b094:	mov	w19, w0
  40b098:	adrp	x24, 442000 <just_print_flag@@Base>
  40b09c:	cbz	w0, 40b0a8 <remove_intermediates@@Base+0x54>
  40b0a0:	ldr	w8, [x24]
  40b0a4:	cbnz	w8, 40b31c <remove_intermediates@@Base+0x2c8>
  40b0a8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40b0ac:	add	x9, x9, #0xb08
  40b0b0:	ldr	x8, [x9, #32]
  40b0b4:	cmp	x8, #0x1
  40b0b8:	b.lt	40b31c <remove_intermediates@@Base+0x2c8>  // b.tstop
  40b0bc:	ldr	x25, [x9]
  40b0c0:	mov	w27, #0x20                  	// #32
  40b0c4:	movk	w27, #0x1, lsl #16
  40b0c8:	add	x26, x25, x8, lsl #3
  40b0cc:	cbz	w19, 40b1ac <remove_intermediates@@Base+0x158>
  40b0d0:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x1680>
  40b0d4:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  40b0d8:	mov	w28, #0x9000                	// #36864
  40b0dc:	add	x19, x19, #0x467
  40b0e0:	b	40b0f0 <remove_intermediates@@Base+0x9c>
  40b0e4:	add	x25, x25, #0x8
  40b0e8:	cmp	x25, x26
  40b0ec:	b.cs	40b31c <remove_intermediates@@Base+0x2c8>  // b.hs, b.nlast
  40b0f0:	ldr	x20, [x25]
  40b0f4:	cbz	x20, 40b0e4 <remove_intermediates@@Base+0x90>
  40b0f8:	ldr	x8, [x23, #2328]
  40b0fc:	cmp	x8, x20
  40b100:	b.eq	40b0e4 <remove_intermediates@@Base+0x90>  // b.none
  40b104:	ldr	w8, [x20, #136]
  40b108:	tbz	w8, #14, 40b0e4 <remove_intermediates@@Base+0x90>
  40b10c:	and	w9, w8, w27
  40b110:	cmp	w9, #0x20
  40b114:	b.eq	40b0e4 <remove_intermediates@@Base+0x90>  // b.none
  40b118:	tst	w8, w28
  40b11c:	b.ne	40b0e4 <remove_intermediates@@Base+0x90>  // b.any
  40b120:	and	w8, w8, #0x3
  40b124:	cmp	w8, #0x1
  40b128:	b.eq	40b0e4 <remove_intermediates@@Base+0x90>  // b.none
  40b12c:	ldr	w8, [x24]
  40b130:	cbz	w8, 40b13c <remove_intermediates@@Base+0xe8>
  40b134:	mov	w21, wzr
  40b138:	b	40b15c <remove_intermediates@@Base+0x108>
  40b13c:	ldr	x0, [x20]
  40b140:	bl	406eb0 <unlink@plt>
  40b144:	mov	w21, w0
  40b148:	tbz	w0, #31, 40b15c <remove_intermediates@@Base+0x108>
  40b14c:	bl	406e70 <__errno_location@plt>
  40b150:	ldr	w8, [x0]
  40b154:	cmp	w8, #0x2
  40b158:	b.eq	40b0e4 <remove_intermediates@@Base+0x90>  // b.none
  40b15c:	ldrb	w8, [x20, #138]
  40b160:	tbnz	w8, #0, 40b0e4 <remove_intermediates@@Base+0x90>
  40b164:	ldr	x0, [x20]
  40b168:	bl	406750 <strlen@plt>
  40b16c:	mov	x22, x0
  40b170:	mov	w2, #0x5                   	// #5
  40b174:	mov	x0, xzr
  40b178:	mov	x1, x19
  40b17c:	bl	406dc0 <dcgettext@plt>
  40b180:	ldr	x3, [x20]
  40b184:	mov	x2, x0
  40b188:	mov	x0, xzr
  40b18c:	mov	x1, x22
  40b190:	bl	41ae34 <error@@Base>
  40b194:	tbz	w21, #31, 40b0e4 <remove_intermediates@@Base+0x90>
  40b198:	ldr	x1, [x20]
  40b19c:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  40b1a0:	add	x0, x0, #0xbd3
  40b1a4:	bl	41b1c0 <perror_with_name@@Base>
  40b1a8:	b	40b0e4 <remove_intermediates@@Base+0x90>
  40b1ac:	mov	w20, wzr
  40b1b0:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  40b1b4:	mov	w21, #0x9000                	// #36864
  40b1b8:	b	40b1c8 <remove_intermediates@@Base+0x174>
  40b1bc:	add	x25, x25, #0x8
  40b1c0:	cmp	x25, x26
  40b1c4:	b.cs	40b2e4 <remove_intermediates@@Base+0x290>  // b.hs, b.nlast
  40b1c8:	ldr	x28, [x25]
  40b1cc:	cbz	x28, 40b1bc <remove_intermediates@@Base+0x168>
  40b1d0:	ldr	x8, [x22, #2328]
  40b1d4:	cmp	x8, x28
  40b1d8:	b.eq	40b1bc <remove_intermediates@@Base+0x168>  // b.none
  40b1dc:	ldr	w8, [x28, #136]
  40b1e0:	tbz	w8, #14, 40b1bc <remove_intermediates@@Base+0x168>
  40b1e4:	and	w9, w8, w27
  40b1e8:	cmp	w9, #0x20
  40b1ec:	b.eq	40b1bc <remove_intermediates@@Base+0x168>  // b.none
  40b1f0:	tst	w8, w21
  40b1f4:	b.ne	40b1bc <remove_intermediates@@Base+0x168>  // b.any
  40b1f8:	and	w8, w8, #0x3
  40b1fc:	cmp	w8, #0x1
  40b200:	b.eq	40b1bc <remove_intermediates@@Base+0x168>  // b.none
  40b204:	ldr	w8, [x24]
  40b208:	cbz	w8, 40b214 <remove_intermediates@@Base+0x1c0>
  40b20c:	mov	w23, wzr
  40b210:	b	40b234 <remove_intermediates@@Base+0x1e0>
  40b214:	ldr	x0, [x28]
  40b218:	bl	406eb0 <unlink@plt>
  40b21c:	mov	w23, w0
  40b220:	tbz	w0, #31, 40b234 <remove_intermediates@@Base+0x1e0>
  40b224:	bl	406e70 <__errno_location@plt>
  40b228:	ldr	w8, [x0]
  40b22c:	cmp	w8, #0x2
  40b230:	b.eq	40b1bc <remove_intermediates@@Base+0x168>  // b.none
  40b234:	ldrb	w8, [x28, #138]
  40b238:	tbnz	w8, #0, 40b1bc <remove_intermediates@@Base+0x168>
  40b23c:	cbnz	w20, 40b270 <remove_intermediates@@Base+0x21c>
  40b240:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b244:	ldrb	w8, [x8, #3236]
  40b248:	tbz	w8, #0, 40b270 <remove_intermediates@@Base+0x21c>
  40b24c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40b250:	mov	w2, #0x5                   	// #5
  40b254:	mov	x0, xzr
  40b258:	add	x1, x1, #0x48b
  40b25c:	bl	406dc0 <dcgettext@plt>
  40b260:	bl	406e60 <printf@plt>
  40b264:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b268:	ldr	x0, [x8, #2504]
  40b26c:	bl	406cf0 <fflush@plt>
  40b270:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b274:	ldr	w8, [x8, #3232]
  40b278:	cbnz	w8, 40b2cc <remove_intermediates@@Base+0x278>
  40b27c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40b280:	ldr	x3, [x8, #2504]
  40b284:	cbz	w20, 40b298 <remove_intermediates@@Base+0x244>
  40b288:	mov	w0, #0x20                  	// #32
  40b28c:	mov	x1, x3
  40b290:	bl	406810 <putc@plt>
  40b294:	b	40b2b0 <remove_intermediates@@Base+0x25c>
  40b298:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40b29c:	mov	w1, #0x3                   	// #3
  40b2a0:	mov	w2, #0x1                   	// #1
  40b2a4:	add	x0, x0, #0x4ab
  40b2a8:	mov	w20, #0x1                   	// #1
  40b2ac:	bl	406cb0 <fwrite@plt>
  40b2b0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40b2b4:	ldr	x0, [x28]
  40b2b8:	ldr	x1, [x21, #2504]
  40b2bc:	bl	406760 <fputs@plt>
  40b2c0:	ldr	x0, [x21, #2504]
  40b2c4:	bl	406cf0 <fflush@plt>
  40b2c8:	mov	w21, #0x9000                	// #36864
  40b2cc:	tbz	w23, #31, 40b1bc <remove_intermediates@@Base+0x168>
  40b2d0:	ldr	x1, [x28]
  40b2d4:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  40b2d8:	add	x0, x0, #0xbd3
  40b2dc:	bl	41b1c0 <perror_with_name@@Base>
  40b2e0:	b	40b1bc <remove_intermediates@@Base+0x168>
  40b2e4:	cbnz	w19, 40b31c <remove_intermediates@@Base+0x2c8>
  40b2e8:	cbz	w20, 40b31c <remove_intermediates@@Base+0x2c8>
  40b2ec:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  40b2f0:	ldr	x1, [x19, #2504]
  40b2f4:	mov	w0, #0xa                   	// #10
  40b2f8:	bl	406810 <putc@plt>
  40b2fc:	ldr	x0, [x19, #2504]
  40b300:	ldp	x20, x19, [sp, #80]
  40b304:	ldp	x22, x21, [sp, #64]
  40b308:	ldp	x24, x23, [sp, #48]
  40b30c:	ldp	x26, x25, [sp, #32]
  40b310:	ldp	x28, x27, [sp, #16]
  40b314:	ldp	x29, x30, [sp], #96
  40b318:	b	406cf0 <fflush@plt>
  40b31c:	ldp	x20, x19, [sp, #80]
  40b320:	ldp	x22, x21, [sp, #64]
  40b324:	ldp	x24, x23, [sp, #48]
  40b328:	ldp	x26, x25, [sp, #32]
  40b32c:	ldp	x28, x27, [sp, #16]
  40b330:	ldp	x29, x30, [sp], #96
  40b334:	ret

000000000040b338 <split_prereqs@@Base>:
  40b338:	stp	x29, x30, [sp, #-32]!
  40b33c:	mov	x29, sp
  40b340:	str	x0, [x29, #24]
  40b344:	add	x0, x29, #0x18
  40b348:	mov	w1, #0x28                  	// #40
  40b34c:	mov	w2, #0x100                 	// #256
  40b350:	mov	x3, xzr
  40b354:	mov	w4, wzr
  40b358:	str	x19, [sp, #16]
  40b35c:	bl	41def0 <parse_file_seq@@Base>
  40b360:	ldr	x8, [x29, #24]
  40b364:	mov	x19, x0
  40b368:	ldrb	w9, [x8]
  40b36c:	cbz	w9, 40b3c0 <split_prereqs@@Base+0x88>
  40b370:	add	x8, x8, #0x1
  40b374:	add	x0, x29, #0x18
  40b378:	mov	w1, #0x28                  	// #40
  40b37c:	mov	w2, #0x1                   	// #1
  40b380:	mov	x3, xzr
  40b384:	mov	w4, wzr
  40b388:	str	x8, [x29, #24]
  40b38c:	bl	41def0 <parse_file_seq@@Base>
  40b390:	cbz	x19, 40b3d0 <split_prereqs@@Base+0x98>
  40b394:	mov	x9, x19
  40b398:	mov	x8, x9
  40b39c:	ldr	x9, [x9]
  40b3a0:	cbnz	x9, 40b398 <split_prereqs@@Base+0x60>
  40b3a4:	str	x0, [x8]
  40b3a8:	cbz	x0, 40b3c0 <split_prereqs@@Base+0x88>
  40b3ac:	ldrh	w8, [x0, #32]
  40b3b0:	orr	w8, w8, #0x200
  40b3b4:	strh	w8, [x0, #32]
  40b3b8:	ldr	x0, [x0]
  40b3bc:	cbnz	x0, 40b3ac <split_prereqs@@Base+0x74>
  40b3c0:	mov	x0, x19
  40b3c4:	ldr	x19, [sp, #16]
  40b3c8:	ldp	x29, x30, [sp], #32
  40b3cc:	ret
  40b3d0:	mov	x19, x0
  40b3d4:	cbnz	x0, 40b3ac <split_prereqs@@Base+0x74>
  40b3d8:	b	40b3c0 <split_prereqs@@Base+0x88>

000000000040b3dc <enter_prereqs@@Base>:
  40b3dc:	stp	x29, x30, [sp, #-96]!
  40b3e0:	str	x27, [sp, #16]
  40b3e4:	stp	x26, x25, [sp, #32]
  40b3e8:	stp	x24, x23, [sp, #48]
  40b3ec:	stp	x22, x21, [sp, #64]
  40b3f0:	stp	x20, x19, [sp, #80]
  40b3f4:	mov	x29, sp
  40b3f8:	sub	sp, sp, #0x90
  40b3fc:	mov	x19, x0
  40b400:	cbz	x0, 40b698 <enter_prereqs@@Base+0x2bc>
  40b404:	mov	x20, x1
  40b408:	cbz	x1, 40b54c <enter_prereqs@@Base+0x170>
  40b40c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  40b410:	add	x0, x0, #0x3a9
  40b414:	bl	40a7e8 <variable_expand@@Base>
  40b418:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x1680>
  40b41c:	mov	x21, x0
  40b420:	mov	x27, xzr
  40b424:	add	x22, x22, #0xda6
  40b428:	mov	x23, x19
  40b42c:	b	40b460 <enter_prereqs@@Base+0x84>
  40b430:	sub	x1, x0, x21
  40b434:	mov	x0, x21
  40b438:	bl	423914 <strcache_add_len@@Base>
  40b43c:	str	x0, [x23, #8]
  40b440:	ldrh	w8, [x23, #32]
  40b444:	ldr	x24, [x23]
  40b448:	mov	x27, x23
  40b44c:	str	x20, [x23, #24]
  40b450:	orr	w8, w8, #0x400
  40b454:	strh	w8, [x23, #32]
  40b458:	mov	x23, x24
  40b45c:	cbz	x24, 40b548 <enter_prereqs@@Base+0x16c>
  40b460:	ldr	x25, [x23, #8]
  40b464:	mov	x0, x25
  40b468:	bl	406750 <strlen@plt>
  40b46c:	add	x9, x0, #0x10
  40b470:	mov	x8, sp
  40b474:	and	x9, x9, #0xfffffffffffffff0
  40b478:	sub	x24, x8, x9
  40b47c:	add	x2, x0, #0x1
  40b480:	mov	sp, x24
  40b484:	mov	x0, x24
  40b488:	mov	x1, x25
  40b48c:	bl	406710 <memcpy@plt>
  40b490:	mov	x0, x24
  40b494:	bl	41d7d0 <find_percent@@Base>
  40b498:	cbz	x0, 40b440 <enter_prereqs@@Base+0x64>
  40b49c:	ldrb	w8, [x20]
  40b4a0:	mov	x26, x0
  40b4a4:	add	x25, x0, #0x1
  40b4a8:	cbz	w8, 40b4d4 <enter_prereqs@@Base+0xf8>
  40b4ac:	add	x4, x22, #0x1
  40b4b0:	mov	x0, x21
  40b4b4:	mov	x1, x20
  40b4b8:	mov	x2, x22
  40b4bc:	mov	x3, x24
  40b4c0:	mov	x5, x25
  40b4c4:	bl	40cf94 <patsubst_expand_pat@@Base>
  40b4c8:	ldrb	w8, [x21]
  40b4cc:	cbnz	w8, 40b430 <enter_prereqs@@Base+0x54>
  40b4d0:	b	40b50c <enter_prereqs@@Base+0x130>
  40b4d4:	mov	x0, x26
  40b4d8:	bl	406750 <strlen@plt>
  40b4dc:	mov	x2, x0
  40b4e0:	mov	x0, x26
  40b4e4:	mov	x1, x25
  40b4e8:	bl	406720 <memmove@plt>
  40b4ec:	mov	x0, x24
  40b4f0:	bl	406750 <strlen@plt>
  40b4f4:	add	x2, x0, #0x1
  40b4f8:	mov	x0, x21
  40b4fc:	mov	x1, x24
  40b500:	bl	409d08 <variable_buffer_output@@Base>
  40b504:	ldrb	w8, [x21]
  40b508:	cbnz	w8, 40b430 <enter_prereqs@@Base+0x54>
  40b50c:	cmp	x23, x19
  40b510:	b.eq	40b530 <enter_prereqs@@Base+0x154>  // b.none
  40b514:	ldr	x24, [x23]
  40b518:	str	x24, [x27]
  40b51c:	mov	x0, x23
  40b520:	bl	406c60 <free@plt>
  40b524:	mov	x23, x24
  40b528:	cbnz	x24, 40b460 <enter_prereqs@@Base+0x84>
  40b52c:	b	40b548 <enter_prereqs@@Base+0x16c>
  40b530:	ldr	x24, [x19]
  40b534:	mov	x19, x24
  40b538:	mov	x0, x23
  40b53c:	bl	406c60 <free@plt>
  40b540:	mov	x23, x24
  40b544:	cbnz	x24, 40b460 <enter_prereqs@@Base+0x84>
  40b548:	cbz	x19, 40b698 <enter_prereqs@@Base+0x2bc>
  40b54c:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x1680>
  40b550:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40b554:	add	x23, x23, #0x326
  40b558:	add	x20, x20, #0xb08
  40b55c:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  40b560:	mov	x25, x19
  40b564:	b	40b59c <enter_prereqs@@Base+0x1c0>
  40b568:	mov	x0, x20
  40b56c:	mov	x1, x22
  40b570:	mov	x2, x21
  40b574:	str	x22, [x22, #64]
  40b578:	bl	41099c <hash_insert_at@@Base>
  40b57c:	mov	x26, x22
  40b580:	str	x26, [x25, #16]
  40b584:	ldrh	w8, [x25, #32]
  40b588:	str	xzr, [x25, #8]
  40b58c:	and	w8, w8, #0xfffffbff
  40b590:	strh	w8, [x25, #32]
  40b594:	ldr	x25, [x25]
  40b598:	cbz	x25, 40b698 <enter_prereqs@@Base+0x2bc>
  40b59c:	ldrb	w8, [x25, #33]
  40b5a0:	tbnz	w8, #3, 40b594 <enter_prereqs@@Base+0x1b8>
  40b5a4:	ldr	x8, [x25, #8]
  40b5a8:	ldrb	w9, [x8]
  40b5ac:	cmp	w9, #0x2e
  40b5b0:	b.eq	40b65c <enter_prereqs@@Base+0x280>  // b.none
  40b5b4:	cmp	w9, #0x0
  40b5b8:	csel	x8, x23, x8, eq  // eq = none
  40b5bc:	sub	x1, x29, #0x90
  40b5c0:	mov	x0, x20
  40b5c4:	stur	x8, [x29, #-136]
  40b5c8:	bl	410888 <hash_find_item@@Base>
  40b5cc:	str	x0, [x25, #16]
  40b5d0:	cbnz	x0, 40b584 <enter_prereqs@@Base+0x1a8>
  40b5d4:	ldr	x27, [x25, #8]
  40b5d8:	sub	x1, x29, #0x90
  40b5dc:	mov	x0, x20
  40b5e0:	stur	x27, [x29, #-136]
  40b5e4:	bl	410784 <hash_find_slot@@Base>
  40b5e8:	ldr	x26, [x0]
  40b5ec:	mov	x21, x0
  40b5f0:	cbz	x26, 40b608 <enter_prereqs@@Base+0x22c>
  40b5f4:	ldr	x8, [x24, #2328]
  40b5f8:	cmp	x8, x26
  40b5fc:	b.eq	40b608 <enter_prereqs@@Base+0x22c>  // b.none
  40b600:	ldr	x8, [x26, #104]
  40b604:	cbz	x8, 40b688 <enter_prereqs@@Base+0x2ac>
  40b608:	mov	w0, #0x90                  	// #144
  40b60c:	bl	419e38 <xcalloc@@Base>
  40b610:	ldr	w8, [x0, #136]
  40b614:	mov	x22, x0
  40b618:	stp	x27, x27, [x0]
  40b61c:	and	w8, w8, #0xfffffffc
  40b620:	orr	w8, w8, #0x1
  40b624:	str	w8, [x0, #136]
  40b628:	cbz	x26, 40b568 <enter_prereqs@@Base+0x18c>
  40b62c:	ldr	x8, [x24, #2328]
  40b630:	cmp	x8, x26
  40b634:	b.eq	40b568 <enter_prereqs@@Base+0x18c>  // b.none
  40b638:	str	x26, [x22, #104]
  40b63c:	ldr	x8, [x26, #64]
  40b640:	str	x22, [x8, #56]
  40b644:	str	x22, [x26, #64]
  40b648:	b	40b57c <enter_prereqs@@Base+0x1a0>
  40b64c:	cbz	w9, 40b5bc <enter_prereqs@@Base+0x1e0>
  40b650:	cmp	w9, #0x2e
  40b654:	mov	x8, x10
  40b658:	b.ne	40b5b4 <enter_prereqs@@Base+0x1d8>  // b.any
  40b65c:	ldrb	w9, [x8, #1]
  40b660:	cmp	w9, #0x2f
  40b664:	b.ne	40b5bc <enter_prereqs@@Base+0x1e0>  // b.any
  40b668:	mov	x10, x8
  40b66c:	ldrb	w9, [x10, #2]!
  40b670:	cmp	w9, #0x2f
  40b674:	b.ne	40b64c <enter_prereqs@@Base+0x270>  // b.any
  40b678:	ldrb	w9, [x10, #1]!
  40b67c:	cmp	w9, #0x2f
  40b680:	b.eq	40b678 <enter_prereqs@@Base+0x29c>  // b.none
  40b684:	b	40b650 <enter_prereqs@@Base+0x274>
  40b688:	ldr	w8, [x26, #136]
  40b68c:	and	w8, w8, #0xffffffef
  40b690:	str	w8, [x26, #136]
  40b694:	b	40b580 <enter_prereqs@@Base+0x1a4>
  40b698:	mov	x0, x19
  40b69c:	mov	sp, x29
  40b6a0:	ldp	x20, x19, [sp, #80]
  40b6a4:	ldp	x22, x21, [sp, #64]
  40b6a8:	ldp	x24, x23, [sp, #48]
  40b6ac:	ldp	x26, x25, [sp, #32]
  40b6b0:	ldr	x27, [sp, #16]
  40b6b4:	ldp	x29, x30, [sp], #96
  40b6b8:	ret

000000000040b6bc <expand_extra_prereqs@@Base>:
  40b6bc:	sub	sp, sp, #0xf0
  40b6c0:	stp	x29, x30, [sp, #144]
  40b6c4:	str	x27, [sp, #160]
  40b6c8:	stp	x26, x25, [sp, #176]
  40b6cc:	stp	x24, x23, [sp, #192]
  40b6d0:	stp	x22, x21, [sp, #208]
  40b6d4:	stp	x20, x19, [sp, #224]
  40b6d8:	add	x29, sp, #0x90
  40b6dc:	cbz	x0, 40b8ac <expand_extra_prereqs@@Base+0x1f0>
  40b6e0:	ldr	x0, [x0, #8]
  40b6e4:	bl	40a7e8 <variable_expand@@Base>
  40b6e8:	str	x0, [sp]
  40b6ec:	mov	x0, sp
  40b6f0:	mov	w1, #0x28                  	// #40
  40b6f4:	mov	w2, #0x100                 	// #256
  40b6f8:	mov	x3, xzr
  40b6fc:	mov	w4, wzr
  40b700:	bl	41def0 <parse_file_seq@@Base>
  40b704:	ldr	x8, [sp]
  40b708:	mov	x19, x0
  40b70c:	ldrb	w9, [x8]
  40b710:	cbz	w9, 40b764 <expand_extra_prereqs@@Base+0xa8>
  40b714:	add	x8, x8, #0x1
  40b718:	mov	x0, sp
  40b71c:	mov	w1, #0x28                  	// #40
  40b720:	mov	w2, #0x1                   	// #1
  40b724:	mov	x3, xzr
  40b728:	mov	w4, wzr
  40b72c:	str	x8, [sp]
  40b730:	bl	41def0 <parse_file_seq@@Base>
  40b734:	cbz	x19, 40b8d4 <expand_extra_prereqs@@Base+0x218>
  40b738:	mov	x9, x19
  40b73c:	mov	x8, x9
  40b740:	ldr	x9, [x9]
  40b744:	cbnz	x9, 40b73c <expand_extra_prereqs@@Base+0x80>
  40b748:	str	x0, [x8]
  40b74c:	cbz	x0, 40b764 <expand_extra_prereqs@@Base+0xa8>
  40b750:	ldrh	w8, [x0, #32]
  40b754:	orr	w8, w8, #0x200
  40b758:	strh	w8, [x0, #32]
  40b75c:	ldr	x0, [x0]
  40b760:	cbnz	x0, 40b750 <expand_extra_prereqs@@Base+0x94>
  40b764:	cbz	x19, 40b8b0 <expand_extra_prereqs@@Base+0x1f4>
  40b768:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x1680>
  40b76c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40b770:	add	x23, x23, #0x326
  40b774:	add	x20, x20, #0xb08
  40b778:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  40b77c:	mov	x25, x19
  40b780:	b	40b7b8 <expand_extra_prereqs@@Base+0xfc>
  40b784:	mov	x0, x20
  40b788:	mov	x1, x22
  40b78c:	mov	x2, x21
  40b790:	str	x22, [x22, #64]
  40b794:	bl	41099c <hash_insert_at@@Base>
  40b798:	mov	x26, x22
  40b79c:	str	x26, [x25, #16]
  40b7a0:	ldrh	w8, [x25, #32]
  40b7a4:	str	xzr, [x25, #8]
  40b7a8:	orr	w8, w8, #0x1000
  40b7ac:	strh	w8, [x25, #32]
  40b7b0:	ldr	x25, [x25]
  40b7b4:	cbz	x25, 40b8b0 <expand_extra_prereqs@@Base+0x1f4>
  40b7b8:	ldr	x8, [x25, #8]
  40b7bc:	ldrb	w9, [x8]
  40b7c0:	cmp	w9, #0x2e
  40b7c4:	b.eq	40b870 <expand_extra_prereqs@@Base+0x1b4>  // b.none
  40b7c8:	cmp	w9, #0x0
  40b7cc:	csel	x8, x23, x8, eq  // eq = none
  40b7d0:	mov	x1, sp
  40b7d4:	mov	x0, x20
  40b7d8:	str	x8, [sp, #8]
  40b7dc:	bl	410888 <hash_find_item@@Base>
  40b7e0:	str	x0, [x25, #16]
  40b7e4:	cbnz	x0, 40b7a0 <expand_extra_prereqs@@Base+0xe4>
  40b7e8:	ldr	x27, [x25, #8]
  40b7ec:	mov	x1, sp
  40b7f0:	mov	x0, x20
  40b7f4:	str	x27, [sp, #8]
  40b7f8:	bl	410784 <hash_find_slot@@Base>
  40b7fc:	ldr	x26, [x0]
  40b800:	mov	x21, x0
  40b804:	cbz	x26, 40b81c <expand_extra_prereqs@@Base+0x160>
  40b808:	ldr	x8, [x24, #2328]
  40b80c:	cmp	x8, x26
  40b810:	b.eq	40b81c <expand_extra_prereqs@@Base+0x160>  // b.none
  40b814:	ldr	x8, [x26, #104]
  40b818:	cbz	x8, 40b89c <expand_extra_prereqs@@Base+0x1e0>
  40b81c:	mov	w0, #0x90                  	// #144
  40b820:	bl	419e38 <xcalloc@@Base>
  40b824:	ldr	w8, [x0, #136]
  40b828:	mov	x22, x0
  40b82c:	stp	x27, x27, [x0]
  40b830:	and	w8, w8, #0xfffffffc
  40b834:	orr	w8, w8, #0x1
  40b838:	str	w8, [x0, #136]
  40b83c:	cbz	x26, 40b784 <expand_extra_prereqs@@Base+0xc8>
  40b840:	ldr	x8, [x24, #2328]
  40b844:	cmp	x8, x26
  40b848:	b.eq	40b784 <expand_extra_prereqs@@Base+0xc8>  // b.none
  40b84c:	str	x26, [x22, #104]
  40b850:	ldr	x8, [x26, #64]
  40b854:	str	x22, [x8, #56]
  40b858:	str	x22, [x26, #64]
  40b85c:	b	40b798 <expand_extra_prereqs@@Base+0xdc>
  40b860:	cbz	w9, 40b7d0 <expand_extra_prereqs@@Base+0x114>
  40b864:	cmp	w9, #0x2e
  40b868:	mov	x8, x10
  40b86c:	b.ne	40b7c8 <expand_extra_prereqs@@Base+0x10c>  // b.any
  40b870:	ldrb	w9, [x8, #1]
  40b874:	cmp	w9, #0x2f
  40b878:	b.ne	40b7d0 <expand_extra_prereqs@@Base+0x114>  // b.any
  40b87c:	mov	x10, x8
  40b880:	ldrb	w9, [x10, #2]!
  40b884:	cmp	w9, #0x2f
  40b888:	b.ne	40b860 <expand_extra_prereqs@@Base+0x1a4>  // b.any
  40b88c:	ldrb	w9, [x10, #1]!
  40b890:	cmp	w9, #0x2f
  40b894:	b.eq	40b88c <expand_extra_prereqs@@Base+0x1d0>  // b.none
  40b898:	b	40b864 <expand_extra_prereqs@@Base+0x1a8>
  40b89c:	ldr	w8, [x26, #136]
  40b8a0:	and	w8, w8, #0xffffffef
  40b8a4:	str	w8, [x26, #136]
  40b8a8:	b	40b79c <expand_extra_prereqs@@Base+0xe0>
  40b8ac:	mov	x19, xzr
  40b8b0:	mov	x0, x19
  40b8b4:	ldp	x20, x19, [sp, #224]
  40b8b8:	ldp	x22, x21, [sp, #208]
  40b8bc:	ldp	x24, x23, [sp, #192]
  40b8c0:	ldp	x26, x25, [sp, #176]
  40b8c4:	ldr	x27, [sp, #160]
  40b8c8:	ldp	x29, x30, [sp, #144]
  40b8cc:	add	sp, sp, #0xf0
  40b8d0:	ret
  40b8d4:	mov	x19, x0
  40b8d8:	cbnz	x0, 40b750 <expand_extra_prereqs@@Base+0x94>
  40b8dc:	b	40b764 <expand_extra_prereqs@@Base+0xa8>

000000000040b8e0 <snap_deps@@Base>:
  40b8e0:	sub	sp, sp, #0xd0
  40b8e4:	adrp	x8, 442000 <just_print_flag@@Base>
  40b8e8:	ldr	w8, [x8, #12]
  40b8ec:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40b8f0:	mov	w10, #0x1                   	// #1
  40b8f4:	stp	x29, x30, [sp, #144]
  40b8f8:	str	x23, [sp, #160]
  40b8fc:	stp	x22, x21, [sp, #176]
  40b900:	stp	x20, x19, [sp, #192]
  40b904:	add	x29, sp, #0x90
  40b908:	str	w10, [x9, #2800]
  40b90c:	cbz	w8, 40b9c8 <snap_deps@@Base+0xe8>
  40b910:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40b914:	add	x20, x20, #0xb08
  40b918:	mov	x0, x20
  40b91c:	mov	x1, xzr
  40b920:	mov	x2, xzr
  40b924:	bl	4110c0 <hash_dump@@Base>
  40b928:	ldr	x22, [x20, #48]
  40b92c:	adrp	x8, 427000 <jobserver_post_child@@Base+0xcc>
  40b930:	mov	x19, x0
  40b934:	add	x8, x8, #0xab3
  40b938:	mov	x1, sp
  40b93c:	mov	x0, x20
  40b940:	str	x8, [sp, #8]
  40b944:	bl	410888 <hash_find_item@@Base>
  40b948:	cbz	x0, 40b970 <snap_deps@@Base+0x90>
  40b94c:	ldr	x21, [x0]
  40b950:	mov	x20, x0
  40b954:	mov	x0, x20
  40b958:	bl	40bd38 <snap_deps@@Base+0x458>
  40b95c:	ldr	x20, [x20, #56]
  40b960:	cbnz	x20, 40b954 <snap_deps@@Base+0x74>
  40b964:	cmp	x22, #0x1
  40b968:	b.ge	40b97c <snap_deps@@Base+0x9c>  // b.tcont
  40b96c:	b	40b9c0 <snap_deps@@Base+0xe0>
  40b970:	mov	x21, xzr
  40b974:	cmp	x22, #0x1
  40b978:	b.lt	40b9c0 <snap_deps@@Base+0xe0>  // b.tstop
  40b97c:	add	x22, x19, x22, lsl #3
  40b980:	mov	x23, x19
  40b984:	b	40b994 <snap_deps@@Base+0xb4>
  40b988:	add	x23, x23, #0x8
  40b98c:	cmp	x23, x22
  40b990:	b.cs	40b9c0 <snap_deps@@Base+0xe0>  // b.hs, b.nlast
  40b994:	ldr	x20, [x23]
  40b998:	cbnz	x20, 40b9a8 <snap_deps@@Base+0xc8>
  40b99c:	b	40b988 <snap_deps@@Base+0xa8>
  40b9a0:	ldr	x20, [x20, #56]
  40b9a4:	cbz	x20, 40b988 <snap_deps@@Base+0xa8>
  40b9a8:	ldr	x8, [x20]
  40b9ac:	cmp	x8, x21
  40b9b0:	b.eq	40b9a0 <snap_deps@@Base+0xc0>  // b.none
  40b9b4:	mov	x0, x20
  40b9b8:	bl	40bd38 <snap_deps@@Base+0x458>
  40b9bc:	b	40b9a0 <snap_deps@@Base+0xc0>
  40b9c0:	mov	x0, x19
  40b9c4:	bl	406c60 <free@plt>
  40b9c8:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40b9cc:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40b9d0:	add	x8, x8, #0x4af
  40b9d4:	add	x0, x0, #0xb08
  40b9d8:	mov	x1, sp
  40b9dc:	str	x8, [sp, #8]
  40b9e0:	bl	410888 <hash_find_item@@Base>
  40b9e4:	cbnz	x0, 40ba40 <snap_deps@@Base+0x160>
  40b9e8:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40b9ec:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40b9f0:	add	x8, x8, #0x4b9
  40b9f4:	add	x0, x0, #0xb08
  40b9f8:	mov	x1, sp
  40b9fc:	str	x8, [sp, #8]
  40ba00:	bl	410888 <hash_find_item@@Base>
  40ba04:	cbnz	x0, 40ba7c <snap_deps@@Base+0x19c>
  40ba08:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40ba0c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ba10:	add	x8, x8, #0x4ce
  40ba14:	add	x0, x0, #0xb08
  40ba18:	mov	x1, sp
  40ba1c:	str	x8, [sp, #8]
  40ba20:	bl	410888 <hash_find_item@@Base>
  40ba24:	cbz	x0, 40baf0 <snap_deps@@Base+0x210>
  40ba28:	mov	w9, #0x1                   	// #1
  40ba2c:	mov	w8, #0x2800                	// #10240
  40ba30:	dup	v0.2d, x9
  40ba34:	b	40bab8 <snap_deps@@Base+0x1d8>
  40ba38:	ldr	x0, [x0, #56]
  40ba3c:	cbz	x0, 40b9e8 <snap_deps@@Base+0x108>
  40ba40:	ldr	x8, [x0, #24]
  40ba44:	cbnz	x8, 40ba54 <snap_deps@@Base+0x174>
  40ba48:	b	40ba38 <snap_deps@@Base+0x158>
  40ba4c:	ldr	x8, [x8]
  40ba50:	cbz	x8, 40ba38 <snap_deps@@Base+0x158>
  40ba54:	ldr	x9, [x8, #16]
  40ba58:	cbz	x9, 40ba4c <snap_deps@@Base+0x16c>
  40ba5c:	ldr	w10, [x9, #136]
  40ba60:	orr	w10, w10, #0x20
  40ba64:	str	w10, [x9, #136]
  40ba68:	ldr	x9, [x9, #56]
  40ba6c:	cbnz	x9, 40ba5c <snap_deps@@Base+0x17c>
  40ba70:	b	40ba4c <snap_deps@@Base+0x16c>
  40ba74:	ldr	x0, [x0, #56]
  40ba78:	cbz	x0, 40ba08 <snap_deps@@Base+0x128>
  40ba7c:	ldr	x8, [x0, #24]
  40ba80:	cbnz	x8, 40ba90 <snap_deps@@Base+0x1b0>
  40ba84:	b	40ba74 <snap_deps@@Base+0x194>
  40ba88:	ldr	x8, [x8]
  40ba8c:	cbz	x8, 40ba74 <snap_deps@@Base+0x194>
  40ba90:	ldr	x9, [x8, #16]
  40ba94:	cbz	x9, 40ba88 <snap_deps@@Base+0x1a8>
  40ba98:	ldr	w10, [x9, #136]
  40ba9c:	orr	w10, w10, #0x80
  40baa0:	str	w10, [x9, #136]
  40baa4:	ldr	x9, [x9, #56]
  40baa8:	cbnz	x9, 40ba98 <snap_deps@@Base+0x1b8>
  40baac:	b	40ba88 <snap_deps@@Base+0x1a8>
  40bab0:	ldr	x0, [x0, #56]
  40bab4:	cbz	x0, 40baf0 <snap_deps@@Base+0x210>
  40bab8:	ldr	x9, [x0, #24]
  40babc:	cbnz	x9, 40bacc <snap_deps@@Base+0x1ec>
  40bac0:	b	40bab0 <snap_deps@@Base+0x1d0>
  40bac4:	ldr	x9, [x9]
  40bac8:	cbz	x9, 40bab0 <snap_deps@@Base+0x1d0>
  40bacc:	ldr	x10, [x9, #16]
  40bad0:	cbz	x10, 40bac4 <snap_deps@@Base+0x1e4>
  40bad4:	ldr	w11, [x10, #136]
  40bad8:	str	q0, [x10, #112]
  40badc:	orr	w11, w11, w8
  40bae0:	str	w11, [x10, #136]
  40bae4:	ldr	x10, [x10, #56]
  40bae8:	cbnz	x10, 40bad4 <snap_deps@@Base+0x1f4>
  40baec:	b	40bac4 <snap_deps@@Base+0x1e4>
  40baf0:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40baf4:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40baf8:	add	x8, x8, #0x4d5
  40bafc:	add	x0, x0, #0xb08
  40bb00:	mov	x1, sp
  40bb04:	str	x8, [sp, #8]
  40bb08:	bl	410888 <hash_find_item@@Base>
  40bb0c:	cbnz	x0, 40bb44 <snap_deps@@Base+0x264>
  40bb10:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40bb14:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bb18:	add	x8, x8, #0x4e3
  40bb1c:	add	x0, x0, #0xb08
  40bb20:	mov	x1, sp
  40bb24:	str	x8, [sp, #8]
  40bb28:	bl	410888 <hash_find_item@@Base>
  40bb2c:	cbz	x0, 40bbb8 <snap_deps@@Base+0x2d8>
  40bb30:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40bb34:	mov	w9, #0x1                   	// #1
  40bb38:	b	40bb80 <snap_deps@@Base+0x2a0>
  40bb3c:	ldr	x0, [x0, #56]
  40bb40:	cbz	x0, 40bb10 <snap_deps@@Base+0x230>
  40bb44:	ldr	x8, [x0, #24]
  40bb48:	cbnz	x8, 40bb58 <snap_deps@@Base+0x278>
  40bb4c:	b	40bb3c <snap_deps@@Base+0x25c>
  40bb50:	ldr	x8, [x8]
  40bb54:	cbz	x8, 40bb3c <snap_deps@@Base+0x25c>
  40bb58:	ldr	x9, [x8, #16]
  40bb5c:	cbz	x9, 40bb50 <snap_deps@@Base+0x270>
  40bb60:	ldr	w10, [x9, #136]
  40bb64:	orr	w10, w10, #0x4000
  40bb68:	str	w10, [x9, #136]
  40bb6c:	ldr	x9, [x9, #56]
  40bb70:	cbnz	x9, 40bb60 <snap_deps@@Base+0x280>
  40bb74:	b	40bb50 <snap_deps@@Base+0x270>
  40bb78:	ldr	x0, [x0, #56]
  40bb7c:	cbz	x0, 40bbb8 <snap_deps@@Base+0x2d8>
  40bb80:	ldr	x10, [x0, #24]
  40bb84:	cbnz	x10, 40bb98 <snap_deps@@Base+0x2b8>
  40bb88:	strb	w9, [x8, #2808]
  40bb8c:	b	40bb78 <snap_deps@@Base+0x298>
  40bb90:	ldr	x10, [x10]
  40bb94:	cbz	x10, 40bb78 <snap_deps@@Base+0x298>
  40bb98:	ldr	x11, [x10, #16]
  40bb9c:	cbz	x11, 40bb90 <snap_deps@@Base+0x2b0>
  40bba0:	ldr	w12, [x11, #136]
  40bba4:	orr	w12, w12, #0xc000
  40bba8:	str	w12, [x11, #136]
  40bbac:	ldr	x11, [x11, #56]
  40bbb0:	cbnz	x11, 40bba0 <snap_deps@@Base+0x2c0>
  40bbb4:	b	40bb90 <snap_deps@@Base+0x2b0>
  40bbb8:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40bbbc:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bbc0:	add	x8, x8, #0x4ee
  40bbc4:	add	x0, x0, #0xb08
  40bbc8:	mov	x1, sp
  40bbcc:	str	x8, [sp, #8]
  40bbd0:	bl	410888 <hash_find_item@@Base>
  40bbd4:	cbz	x0, 40bbec <snap_deps@@Base+0x30c>
  40bbd8:	ldrb	w8, [x0, #137]
  40bbdc:	tbz	w8, #3, 40bbec <snap_deps@@Base+0x30c>
  40bbe0:	adrp	x8, 442000 <just_print_flag@@Base>
  40bbe4:	mov	w9, #0x1                   	// #1
  40bbe8:	str	w9, [x8, #260]
  40bbec:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40bbf0:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bbf4:	add	x8, x8, #0x504
  40bbf8:	add	x0, x0, #0xb08
  40bbfc:	mov	x1, sp
  40bc00:	str	x8, [sp, #8]
  40bc04:	bl	410888 <hash_find_item@@Base>
  40bc08:	cbz	x0, 40bc28 <snap_deps@@Base+0x348>
  40bc0c:	ldrb	w8, [x0, #137]
  40bc10:	tbz	w8, #3, 40bc28 <snap_deps@@Base+0x348>
  40bc14:	ldr	x8, [x0, #24]
  40bc18:	cbnz	x8, 40bcf0 <snap_deps@@Base+0x410>
  40bc1c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40bc20:	mov	w9, #0x1                   	// #1
  40bc24:	str	w9, [x8, #3252]
  40bc28:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40bc2c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bc30:	add	x8, x8, #0x50c
  40bc34:	add	x0, x0, #0xb08
  40bc38:	mov	x1, sp
  40bc3c:	str	x8, [sp, #8]
  40bc40:	bl	410888 <hash_find_item@@Base>
  40bc44:	cbz	x0, 40bc64 <snap_deps@@Base+0x384>
  40bc48:	ldrb	w8, [x0, #137]
  40bc4c:	tbz	w8, #3, 40bc64 <snap_deps@@Base+0x384>
  40bc50:	ldr	x8, [x0, #24]
  40bc54:	cbnz	x8, 40bd18 <snap_deps@@Base+0x438>
  40bc58:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40bc5c:	mov	w9, #0x1                   	// #1
  40bc60:	str	w9, [x8, #3232]
  40bc64:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  40bc68:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bc6c:	add	x8, x8, #0x514
  40bc70:	add	x0, x0, #0xb08
  40bc74:	mov	x1, sp
  40bc78:	str	x8, [sp, #8]
  40bc7c:	bl	410888 <hash_find_item@@Base>
  40bc80:	cbz	x0, 40bc98 <snap_deps@@Base+0x3b8>
  40bc84:	ldrb	w8, [x0, #137]
  40bc88:	tbz	w8, #3, 40bc98 <snap_deps@@Base+0x3b8>
  40bc8c:	adrp	x8, 442000 <just_print_flag@@Base>
  40bc90:	mov	w9, #0x1                   	// #1
  40bc94:	str	w9, [x8, #36]
  40bc98:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40bc9c:	add	x0, x0, #0x521
  40bca0:	mov	w1, #0xe                   	// #14
  40bca4:	bl	424110 <lookup_variable@@Base>
  40bca8:	bl	40b6bc <expand_extra_prereqs@@Base>
  40bcac:	mov	x19, x0
  40bcb0:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40bcb4:	adrp	x1, 40b000 <rehash_file@@Base+0x3b4>
  40bcb8:	add	x0, x0, #0xb08
  40bcbc:	add	x1, x1, #0xf4c
  40bcc0:	mov	x2, x19
  40bcc4:	bl	410f74 <hash_map_arg@@Base>
  40bcc8:	mov	x0, x19
  40bccc:	bl	41a130 <free_ns_chain@@Base>
  40bcd0:	ldp	x20, x19, [sp, #192]
  40bcd4:	ldp	x22, x21, [sp, #176]
  40bcd8:	ldr	x23, [sp, #160]
  40bcdc:	ldp	x29, x30, [sp, #144]
  40bce0:	add	sp, sp, #0xd0
  40bce4:	ret
  40bce8:	ldr	x8, [x8]
  40bcec:	cbz	x8, 40bc28 <snap_deps@@Base+0x348>
  40bcf0:	ldr	x9, [x8, #16]
  40bcf4:	cbz	x9, 40bce8 <snap_deps@@Base+0x408>
  40bcf8:	ldr	w10, [x9, #132]
  40bcfc:	orr	w10, w10, #0x4
  40bd00:	str	w10, [x9, #132]
  40bd04:	ldr	x9, [x9, #56]
  40bd08:	cbnz	x9, 40bcf8 <snap_deps@@Base+0x418>
  40bd0c:	b	40bce8 <snap_deps@@Base+0x408>
  40bd10:	ldr	x8, [x8]
  40bd14:	cbz	x8, 40bc64 <snap_deps@@Base+0x384>
  40bd18:	ldr	x9, [x8, #16]
  40bd1c:	cbz	x9, 40bd10 <snap_deps@@Base+0x430>
  40bd20:	ldr	w10, [x9, #132]
  40bd24:	orr	w10, w10, #0x2
  40bd28:	str	w10, [x9, #132]
  40bd2c:	ldr	x9, [x9, #56]
  40bd30:	cbnz	x9, 40bd20 <snap_deps@@Base+0x440>
  40bd34:	b	40bd10 <snap_deps@@Base+0x430>
  40bd38:	sub	sp, sp, #0x70
  40bd3c:	stp	x29, x30, [sp, #16]
  40bd40:	stp	x28, x27, [sp, #32]
  40bd44:	stp	x26, x25, [sp, #48]
  40bd48:	stp	x24, x23, [sp, #64]
  40bd4c:	stp	x22, x21, [sp, #80]
  40bd50:	stp	x20, x19, [sp, #96]
  40bd54:	mov	x27, x0
  40bd58:	ldr	x23, [x27, #24]!
  40bd5c:	add	x29, sp, #0x10
  40bd60:	ldr	w8, [x27, #112]
  40bd64:	ldr	x26, [x27, #16]
  40bd68:	and	w8, w8, #0xfffffdff
  40bd6c:	str	w8, [x27, #112]
  40bd70:	cbz	x23, 40bf2c <snap_deps@@Base+0x64c>
  40bd74:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x1680>
  40bd78:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x1680>
  40bd7c:	mov	x19, x0
  40bd80:	mov	w28, wzr
  40bd84:	add	x21, x21, #0xda6
  40bd88:	add	x22, x22, #0x5be
  40bd8c:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  40bd90:	b	40bda4 <snap_deps@@Base+0x4c4>
  40bd94:	ldr	x8, [x23]
  40bd98:	mov	x27, x23
  40bd9c:	mov	x23, x8
  40bda0:	cbz	x8, 40bf2c <snap_deps@@Base+0x64c>
  40bda4:	ldr	x24, [x23, #8]
  40bda8:	cbz	x24, 40bd94 <snap_deps@@Base+0x4b4>
  40bdac:	ldrh	w8, [x23, #32]
  40bdb0:	tbz	w8, #11, 40bd94 <snap_deps@@Base+0x4b4>
  40bdb4:	tbnz	w8, #10, 40be9c <snap_deps@@Base+0x5bc>
  40bdb8:	cbz	w28, 40bef0 <snap_deps@@Base+0x610>
  40bdbc:	ldr	x8, [x23, #24]
  40bdc0:	cbz	x8, 40bdc8 <snap_deps@@Base+0x4e8>
  40bdc4:	str	x8, [x19, #40]
  40bdc8:	mov	x0, x19
  40bdcc:	bl	407bd4 <set_file_variables@@Base>
  40bdd0:	ldr	x0, [x23, #8]
  40bdd4:	mov	x1, x19
  40bdd8:	bl	40a7f8 <variable_expand_for_file@@Base>
  40bddc:	ldr	x8, [x23, #24]
  40bde0:	mov	x25, x0
  40bde4:	cbz	x8, 40bdec <snap_deps@@Base+0x50c>
  40bde8:	str	x26, [x19, #40]
  40bdec:	mov	x0, x24
  40bdf0:	bl	406c60 <free@plt>
  40bdf4:	add	x0, sp, #0x8
  40bdf8:	mov	w1, #0x28                  	// #40
  40bdfc:	mov	w2, #0x100                 	// #256
  40be00:	mov	x3, xzr
  40be04:	mov	w4, wzr
  40be08:	str	x25, [sp, #8]
  40be0c:	bl	41def0 <parse_file_seq@@Base>
  40be10:	ldr	x8, [sp, #8]
  40be14:	mov	x24, x0
  40be18:	ldrb	w9, [x8]
  40be1c:	cbz	w9, 40be70 <snap_deps@@Base+0x590>
  40be20:	add	x8, x8, #0x1
  40be24:	add	x0, sp, #0x8
  40be28:	mov	w1, #0x28                  	// #40
  40be2c:	mov	w2, #0x1                   	// #1
  40be30:	mov	x3, xzr
  40be34:	mov	w4, wzr
  40be38:	str	x8, [sp, #8]
  40be3c:	bl	41def0 <parse_file_seq@@Base>
  40be40:	cbz	x24, 40bf20 <snap_deps@@Base+0x640>
  40be44:	mov	x9, x24
  40be48:	mov	x8, x9
  40be4c:	ldr	x9, [x9]
  40be50:	cbnz	x9, 40be48 <snap_deps@@Base+0x568>
  40be54:	str	x0, [x8]
  40be58:	cbz	x0, 40be70 <snap_deps@@Base+0x590>
  40be5c:	ldrh	w8, [x0, #32]
  40be60:	orr	w8, w8, #0x200
  40be64:	strh	w8, [x0, #32]
  40be68:	ldr	x0, [x0]
  40be6c:	cbnz	x0, 40be5c <snap_deps@@Base+0x57c>
  40be70:	ldr	x1, [x23, #24]
  40be74:	mov	x0, x24
  40be78:	bl	40b3dc <enter_prereqs@@Base>
  40be7c:	ldr	x8, [x23]
  40be80:	cbz	x0, 40bf0c <snap_deps@@Base+0x62c>
  40be84:	str	x0, [x27]
  40be88:	mov	x27, x0
  40be8c:	ldr	x0, [x0]
  40be90:	cbnz	x0, 40be88 <snap_deps@@Base+0x5a8>
  40be94:	str	x8, [x27]
  40be98:	b	40bd9c <snap_deps@@Base+0x4bc>
  40be9c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  40bea0:	add	x0, x0, #0x3a9
  40bea4:	bl	40a7e8 <variable_expand@@Base>
  40bea8:	mov	w4, #0x1                   	// #1
  40beac:	mov	w5, #0x2                   	// #2
  40beb0:	mov	x1, x24
  40beb4:	mov	x2, x21
  40beb8:	mov	x3, x22
  40bebc:	mov	w6, wzr
  40bec0:	bl	40cd48 <subst_expand@@Base>
  40bec4:	strb	wzr, [x0]
  40bec8:	mov	x0, x24
  40becc:	bl	406c60 <free@plt>
  40bed0:	ldr	x0, [x20, #4016]
  40bed4:	bl	419e60 <xstrdup@@Base>
  40bed8:	ldrh	w8, [x23, #32]
  40bedc:	mov	x24, x0
  40bee0:	str	x0, [x23, #8]
  40bee4:	and	w8, w8, #0xfffffbff
  40bee8:	strh	w8, [x23, #32]
  40beec:	cbnz	w28, 40bdbc <snap_deps@@Base+0x4dc>
  40bef0:	mov	x0, x19
  40bef4:	mov	w1, wzr
  40bef8:	bl	424334 <initialize_file_variables@@Base>
  40befc:	mov	w28, #0x1                   	// #1
  40bf00:	ldr	x8, [x23, #24]
  40bf04:	cbnz	x8, 40bdc4 <snap_deps@@Base+0x4e4>
  40bf08:	b	40bdc8 <snap_deps@@Base+0x4e8>
  40bf0c:	mov	x0, x23
  40bf10:	str	x8, [x27]
  40bf14:	bl	406c60 <free@plt>
  40bf18:	ldr	x8, [x27]
  40bf1c:	b	40bd9c <snap_deps@@Base+0x4bc>
  40bf20:	mov	x24, x0
  40bf24:	cbnz	x0, 40be5c <snap_deps@@Base+0x57c>
  40bf28:	b	40be70 <snap_deps@@Base+0x590>
  40bf2c:	ldp	x20, x19, [sp, #96]
  40bf30:	ldp	x22, x21, [sp, #80]
  40bf34:	ldp	x24, x23, [sp, #64]
  40bf38:	ldp	x26, x25, [sp, #48]
  40bf3c:	ldp	x28, x27, [sp, #32]
  40bf40:	ldp	x29, x30, [sp, #16]
  40bf44:	add	sp, sp, #0x70
  40bf48:	ret
  40bf4c:	stp	x29, x30, [sp, #-64]!
  40bf50:	stp	x22, x21, [sp, #32]
  40bf54:	stp	x20, x19, [sp, #48]
  40bf58:	adrp	x8, 442000 <just_print_flag@@Base>
  40bf5c:	ldr	w8, [x8, #12]
  40bf60:	mov	x19, x0
  40bf64:	str	x23, [sp, #16]
  40bf68:	mov	x29, sp
  40bf6c:	cbz	w8, 40bfac <snap_deps@@Base+0x6cc>
  40bf70:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40bf74:	ldrb	w8, [x8, #2808]
  40bf78:	cmp	w8, #0x1
  40bf7c:	b.eq	40bfc8 <snap_deps@@Base+0x6e8>  // b.none
  40bf80:	ldr	x8, [x19, #80]
  40bf84:	cbz	x8, 40bfdc <snap_deps@@Base+0x6fc>
  40bf88:	ldr	x2, [x8, #8]
  40bf8c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40bf90:	add	x0, x0, #0x521
  40bf94:	mov	w1, #0xe                   	// #14
  40bf98:	bl	42430c <lookup_variable_in_set@@Base>
  40bf9c:	bl	40b6bc <expand_extra_prereqs@@Base>
  40bfa0:	mov	x20, x0
  40bfa4:	cbnz	x0, 40bff4 <snap_deps@@Base+0x714>
  40bfa8:	b	40c0b4 <snap_deps@@Base+0x7d4>
  40bfac:	ldr	w8, [x19, #136]
  40bfb0:	and	w8, w8, #0xfffffdff
  40bfb4:	str	w8, [x19, #136]
  40bfb8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40bfbc:	ldrb	w8, [x8, #2808]
  40bfc0:	cmp	w8, #0x1
  40bfc4:	b.ne	40bf80 <snap_deps@@Base+0x6a0>  // b.any
  40bfc8:	ldr	w8, [x19, #136]
  40bfcc:	orr	w8, w8, #0x4000
  40bfd0:	str	w8, [x19, #136]
  40bfd4:	ldr	x8, [x19, #80]
  40bfd8:	cbnz	x8, 40bf88 <snap_deps@@Base+0x6a8>
  40bfdc:	ldrb	w8, [x19, #137]
  40bfe0:	tbz	w8, #3, 40c0b4 <snap_deps@@Base+0x7d4>
  40bfe4:	mov	x0, x1
  40bfe8:	bl	41a08c <copy_dep_chain@@Base>
  40bfec:	mov	x20, x0
  40bff0:	cbz	x0, 40c0b4 <snap_deps@@Base+0x7d4>
  40bff4:	ldr	x22, [x19]
  40bff8:	mov	x23, x20
  40bffc:	add	x21, x22, #0x1
  40c000:	b	40c01c <snap_deps@@Base+0x73c>
  40c004:	add	x1, x8, #0x1
  40c008:	mov	x0, x21
  40c00c:	bl	406c10 <strcmp@plt>
  40c010:	cbz	w0, 40c07c <snap_deps@@Base+0x79c>
  40c014:	ldr	x23, [x23]
  40c018:	cbz	x23, 40c094 <snap_deps@@Base+0x7b4>
  40c01c:	ldr	x8, [x23, #8]
  40c020:	mov	x9, x8
  40c024:	cbnz	x8, 40c030 <snap_deps@@Base+0x750>
  40c028:	ldr	x9, [x23, #16]
  40c02c:	ldr	x9, [x9]
  40c030:	cmp	x22, x9
  40c034:	b.eq	40c07c <snap_deps@@Base+0x79c>  // b.none
  40c038:	ldrb	w9, [x22]
  40c03c:	mov	x10, x8
  40c040:	cbz	x8, 40c054 <snap_deps@@Base+0x774>
  40c044:	ldrb	w10, [x10]
  40c048:	cmp	w9, w10
  40c04c:	b.ne	40c014 <snap_deps@@Base+0x734>  // b.any
  40c050:	b	40c068 <snap_deps@@Base+0x788>
  40c054:	ldr	x10, [x23, #16]
  40c058:	ldr	x10, [x10]
  40c05c:	ldrb	w10, [x10]
  40c060:	cmp	w9, w10
  40c064:	b.ne	40c014 <snap_deps@@Base+0x734>  // b.any
  40c068:	cbz	w9, 40c07c <snap_deps@@Base+0x79c>
  40c06c:	cbnz	x8, 40c004 <snap_deps@@Base+0x724>
  40c070:	ldr	x8, [x23, #16]
  40c074:	ldr	x8, [x8]
  40c078:	b	40c004 <snap_deps@@Base+0x724>
  40c07c:	mov	x0, x20
  40c080:	ldp	x20, x19, [sp, #48]
  40c084:	ldp	x22, x21, [sp, #32]
  40c088:	ldr	x23, [sp, #16]
  40c08c:	ldp	x29, x30, [sp], #64
  40c090:	b	41a130 <free_ns_chain@@Base>
  40c094:	ldr	x8, [x19, #24]
  40c098:	cbz	x8, 40c0b0 <snap_deps@@Base+0x7d0>
  40c09c:	mov	x9, x8
  40c0a0:	ldr	x8, [x8]
  40c0a4:	cbnz	x8, 40c09c <snap_deps@@Base+0x7bc>
  40c0a8:	str	x20, [x9]
  40c0ac:	b	40c0b4 <snap_deps@@Base+0x7d4>
  40c0b0:	str	x20, [x19, #24]
  40c0b4:	ldp	x20, x19, [sp, #48]
  40c0b8:	ldp	x22, x21, [sp, #32]
  40c0bc:	ldr	x23, [sp, #16]
  40c0c0:	ldp	x29, x30, [sp], #64
  40c0c4:	ret

000000000040c0c8 <set_command_state@@Base>:
  40c0c8:	ldr	w9, [x0, #136]
  40c0cc:	ldr	x8, [x0, #48]
  40c0d0:	bfi	w9, w1, #2, #2
  40c0d4:	str	w9, [x0, #136]
  40c0d8:	cbz	x8, 40c110 <set_command_state@@Base+0x48>
  40c0dc:	ubfiz	w9, w1, #2, #2
  40c0e0:	b	40c0ec <set_command_state@@Base+0x24>
  40c0e4:	ldr	x8, [x8]
  40c0e8:	cbz	x8, 40c110 <set_command_state@@Base+0x48>
  40c0ec:	ldr	x10, [x8, #16]
  40c0f0:	ldr	w11, [x10, #136]
  40c0f4:	ubfx	w12, w11, #2, #2
  40c0f8:	cmp	w12, w1
  40c0fc:	b.cs	40c0e4 <set_command_state@@Base+0x1c>  // b.hs, b.nlast
  40c100:	and	w11, w11, #0xfffffff3
  40c104:	orr	w11, w11, w9
  40c108:	str	w11, [x10, #136]
  40c10c:	b	40c0e4 <set_command_state@@Base+0x1c>
  40c110:	ret

000000000040c114 <file_timestamp_cons@@Base>:
  40c114:	sub	sp, sp, #0x60
  40c118:	stp	x22, x21, [sp, #64]
  40c11c:	mov	x22, #0xffffffffffffca02    	// #-13822
  40c120:	stp	x20, x19, [sp, #80]
  40c124:	mov	x21, x1
  40c128:	mov	x19, x0
  40c12c:	lsr	x8, x1, #34
  40c130:	movk	x22, #0xfb9a, lsl #16
  40c134:	stp	x29, x30, [sp, #48]
  40c138:	add	x29, sp, #0x30
  40c13c:	cbnz	x8, 40c160 <file_timestamp_cons@@Base+0x4c>
  40c140:	lsl	x8, x21, #30
  40c144:	add	w9, w2, #0x3
  40c148:	add	x20, x8, w9, sxtw
  40c14c:	cmp	x8, x20
  40c150:	b.hi	40c160 <file_timestamp_cons@@Base+0x4c>  // b.pmore
  40c154:	add	x8, x22, #0x1
  40c158:	cmp	x20, x8
  40c15c:	b.cc	40c1d8 <file_timestamp_cons@@Base+0xc4>  // b.lo, b.ul, b.last
  40c160:	cbnz	x19, 40c17c <file_timestamp_cons@@Base+0x68>
  40c164:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c168:	add	x1, x1, #0x530
  40c16c:	mov	w2, #0x5                   	// #5
  40c170:	mov	x0, xzr
  40c174:	bl	406dc0 <dcgettext@plt>
  40c178:	mov	x19, x0
  40c17c:	cmp	x21, #0x3
  40c180:	mov	w8, #0x3                   	// #3
  40c184:	csel	x20, x8, x22, cc  // cc = lo, ul, last
  40c188:	add	x0, sp, #0x4
  40c18c:	mov	x1, x20
  40c190:	bl	40c1f0 <file_timestamp_sprintf@@Base>
  40c194:	mov	x0, x19
  40c198:	bl	406750 <strlen@plt>
  40c19c:	mov	x21, x0
  40c1a0:	add	x0, sp, #0x4
  40c1a4:	bl	406750 <strlen@plt>
  40c1a8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c1ac:	add	x21, x0, x21
  40c1b0:	add	x1, x1, #0x53d
  40c1b4:	mov	w2, #0x5                   	// #5
  40c1b8:	mov	x0, xzr
  40c1bc:	bl	406dc0 <dcgettext@plt>
  40c1c0:	mov	x2, x0
  40c1c4:	add	x4, sp, #0x4
  40c1c8:	mov	x0, xzr
  40c1cc:	mov	x1, x21
  40c1d0:	mov	x3, x19
  40c1d4:	bl	41ae34 <error@@Base>
  40c1d8:	mov	x0, x20
  40c1dc:	ldp	x20, x19, [sp, #80]
  40c1e0:	ldp	x22, x21, [sp, #64]
  40c1e4:	ldp	x29, x30, [sp, #48]
  40c1e8:	add	sp, sp, #0x60
  40c1ec:	ret

000000000040c1f0 <file_timestamp_sprintf@@Base>:
  40c1f0:	sub	sp, sp, #0x40
  40c1f4:	stp	x22, x21, [sp, #32]
  40c1f8:	sub	x22, x1, #0x3
  40c1fc:	stp	x20, x19, [sp, #48]
  40c200:	mov	x19, x0
  40c204:	lsr	x8, x22, #30
  40c208:	add	x0, sp, #0x8
  40c20c:	stp	x29, x30, [sp, #16]
  40c210:	add	x29, sp, #0x10
  40c214:	str	x8, [sp, #8]
  40c218:	bl	406920 <localtime@plt>
  40c21c:	cbz	x0, 40c248 <file_timestamp_sprintf@@Base+0x58>
  40c220:	ldp	w9, w8, [x0, #16]
  40c224:	ldp	w5, w4, [x0, #8]
  40c228:	ldp	w7, w6, [x0]
  40c22c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c230:	add	w2, w8, #0x76c
  40c234:	add	w3, w9, #0x1
  40c238:	add	x1, x1, #0x569
  40c23c:	mov	x0, x19
  40c240:	bl	406800 <sprintf@plt>
  40c244:	b	40c26c <file_timestamp_sprintf@@Base+0x7c>
  40c248:	ldr	x2, [sp, #8]
  40c24c:	tbnz	x2, #63, 40c25c <file_timestamp_sprintf@@Base+0x6c>
  40c250:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  40c254:	add	x1, x1, #0x2cf
  40c258:	b	40c264 <file_timestamp_sprintf@@Base+0x74>
  40c25c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c260:	add	x1, x1, #0x587
  40c264:	mov	x0, x19
  40c268:	bl	406800 <sprintf@plt>
  40c26c:	mov	x0, x19
  40c270:	bl	406750 <strlen@plt>
  40c274:	add	x21, x19, x0
  40c278:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c27c:	mov	x20, x0
  40c280:	and	w2, w22, #0x3fffffff
  40c284:	add	x1, x1, #0x58b
  40c288:	mov	x0, x21
  40c28c:	bl	406800 <sprintf@plt>
  40c290:	mov	x0, x21
  40c294:	bl	406750 <strlen@plt>
  40c298:	add	x8, x0, x20
  40c29c:	add	x8, x19, x8
  40c2a0:	ldrb	w9, [x8, #-1]!
  40c2a4:	cmp	w9, #0x30
  40c2a8:	b.eq	40c2a0 <file_timestamp_sprintf@@Base+0xb0>  // b.none
  40c2ac:	cmp	w9, #0x2e
  40c2b0:	cinc	x8, x8, ne  // ne = any
  40c2b4:	strb	wzr, [x8]
  40c2b8:	ldp	x20, x19, [sp, #48]
  40c2bc:	ldp	x22, x21, [sp, #32]
  40c2c0:	ldp	x29, x30, [sp, #16]
  40c2c4:	add	sp, sp, #0x40
  40c2c8:	ret

000000000040c2cc <file_timestamp_now@@Base>:
  40c2cc:	sub	sp, sp, #0x30
  40c2d0:	str	x19, [sp, #32]
  40c2d4:	mov	x19, x0
  40c2d8:	mov	x1, sp
  40c2dc:	mov	w0, wzr
  40c2e0:	stp	x29, x30, [sp, #16]
  40c2e4:	add	x29, sp, #0x10
  40c2e8:	bl	406860 <clock_gettime@plt>
  40c2ec:	cbz	w0, 40c31c <file_timestamp_now@@Base+0x50>
  40c2f0:	mov	x0, sp
  40c2f4:	mov	x1, xzr
  40c2f8:	bl	406a60 <gettimeofday@plt>
  40c2fc:	cbz	w0, 40c328 <file_timestamp_now@@Base+0x5c>
  40c300:	mov	x0, xzr
  40c304:	bl	406980 <time@plt>
  40c308:	mov	w9, #0xca00                	// #51712
  40c30c:	mov	x1, x0
  40c310:	mov	x8, xzr
  40c314:	movk	w9, #0x3b9a, lsl #16
  40c318:	b	40c334 <file_timestamp_now@@Base+0x68>
  40c31c:	ldp	x1, x8, [sp]
  40c320:	mov	w9, #0x1                   	// #1
  40c324:	b	40c334 <file_timestamp_now@@Base+0x68>
  40c328:	ldp	x1, x8, [sp]
  40c32c:	mov	w9, #0x3e8                 	// #1000
  40c330:	mul	x8, x8, x9
  40c334:	sxtw	x2, w8
  40c338:	mov	x0, xzr
  40c33c:	str	w9, [x19]
  40c340:	bl	40c114 <file_timestamp_cons@@Base>
  40c344:	ldr	x19, [sp, #32]
  40c348:	ldp	x29, x30, [sp, #16]
  40c34c:	add	sp, sp, #0x30
  40c350:	ret

000000000040c354 <print_prereqs@@Base>:
  40c354:	stp	x29, x30, [sp, #-48]!
  40c358:	str	x21, [sp, #16]
  40c35c:	stp	x20, x19, [sp, #32]
  40c360:	mov	x29, sp
  40c364:	cbz	x0, 40c428 <print_prereqs@@Base+0xd4>
  40c368:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  40c36c:	mov	x19, x0
  40c370:	mov	x21, xzr
  40c374:	add	x20, x20, #0x5b5
  40c378:	b	40c38c <print_prereqs@@Base+0x38>
  40c37c:	cmp	x21, #0x0
  40c380:	csel	x21, x19, x21, eq  // eq = none
  40c384:	ldr	x19, [x19]
  40c388:	cbz	x19, 40c3c8 <print_prereqs@@Base+0x74>
  40c38c:	ldrb	w8, [x19, #33]
  40c390:	tbnz	w8, #1, 40c37c <print_prereqs@@Base+0x28>
  40c394:	ldr	x1, [x19, #8]
  40c398:	cbz	x1, 40c3b0 <print_prereqs@@Base+0x5c>
  40c39c:	mov	x0, x20
  40c3a0:	bl	406e60 <printf@plt>
  40c3a4:	ldr	x19, [x19]
  40c3a8:	cbnz	x19, 40c38c <print_prereqs@@Base+0x38>
  40c3ac:	b	40c3c8 <print_prereqs@@Base+0x74>
  40c3b0:	ldr	x8, [x19, #16]
  40c3b4:	ldr	x1, [x8]
  40c3b8:	mov	x0, x20
  40c3bc:	bl	406e60 <printf@plt>
  40c3c0:	ldr	x19, [x19]
  40c3c4:	cbnz	x19, 40c38c <print_prereqs@@Base+0x38>
  40c3c8:	cbz	x21, 40c428 <print_prereqs@@Base+0xd4>
  40c3cc:	ldr	x1, [x21, #8]
  40c3d0:	cbnz	x1, 40c3dc <print_prereqs@@Base+0x88>
  40c3d4:	ldr	x8, [x21, #16]
  40c3d8:	ldr	x1, [x8]
  40c3dc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40c3e0:	add	x0, x0, #0x591
  40c3e4:	bl	406e60 <printf@plt>
  40c3e8:	ldr	x20, [x21]
  40c3ec:	cbz	x20, 40c428 <print_prereqs@@Base+0xd4>
  40c3f0:	adrp	x19, 42a000 <_IO_stdin_used@@Base+0x2680>
  40c3f4:	add	x19, x19, #0x5b5
  40c3f8:	b	40c40c <print_prereqs@@Base+0xb8>
  40c3fc:	mov	x0, x19
  40c400:	bl	406e60 <printf@plt>
  40c404:	ldr	x20, [x20]
  40c408:	cbz	x20, 40c428 <print_prereqs@@Base+0xd4>
  40c40c:	ldrb	w8, [x20, #33]
  40c410:	tbz	w8, #1, 40c404 <print_prereqs@@Base+0xb0>
  40c414:	ldr	x1, [x20, #8]
  40c418:	cbnz	x1, 40c3fc <print_prereqs@@Base+0xa8>
  40c41c:	ldr	x8, [x20, #16]
  40c420:	ldr	x1, [x8]
  40c424:	b	40c3fc <print_prereqs@@Base+0xa8>
  40c428:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40c42c:	ldr	x1, [x8, #2504]
  40c430:	ldp	x20, x19, [sp, #32]
  40c434:	ldr	x21, [sp, #16]
  40c438:	mov	w0, #0xa                   	// #10
  40c43c:	ldp	x29, x30, [sp], #48
  40c440:	b	406810 <putc@plt>

000000000040c444 <print_file_data_base@@Base>:
  40c444:	stp	x29, x30, [sp, #-32]!
  40c448:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c44c:	add	x1, x1, #0x597
  40c450:	mov	w2, #0x5                   	// #5
  40c454:	mov	x0, xzr
  40c458:	stp	x20, x19, [sp, #16]
  40c45c:	mov	x29, sp
  40c460:	bl	406dc0 <dcgettext@plt>
  40c464:	bl	406ba0 <puts@plt>
  40c468:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  40c46c:	add	x19, x19, #0xb08
  40c470:	adrp	x1, 40c000 <snap_deps@@Base+0x720>
  40c474:	add	x1, x1, #0x4b4
  40c478:	mov	x0, x19
  40c47c:	bl	410f0c <hash_map@@Base>
  40c480:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c484:	add	x1, x1, #0x5a0
  40c488:	mov	w2, #0x5                   	// #5
  40c48c:	mov	x0, xzr
  40c490:	bl	406dc0 <dcgettext@plt>
  40c494:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40c498:	ldr	x1, [x20, #2504]
  40c49c:	bl	406760 <fputs@plt>
  40c4a0:	ldr	x1, [x20, #2504]
  40c4a4:	mov	x0, x19
  40c4a8:	ldp	x20, x19, [sp, #16]
  40c4ac:	ldp	x29, x30, [sp], #32
  40c4b0:	b	410fec <hash_print_stats@@Base>
  40c4b4:	sub	sp, sp, #0x60
  40c4b8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40c4bc:	ldr	w8, [x8, #3264]
  40c4c0:	stp	x20, x19, [sp, #80]
  40c4c4:	mov	x19, x0
  40c4c8:	stp	x29, x30, [sp, #48]
  40c4cc:	stp	x22, x21, [sp, #64]
  40c4d0:	add	x29, sp, #0x30
  40c4d4:	cbz	w8, 40c4e0 <print_file_data_base@@Base+0x9c>
  40c4d8:	ldrb	w8, [x19, #136]
  40c4dc:	tbnz	w8, #4, 40c87c <print_file_data_base@@Base+0x438>
  40c4e0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40c4e4:	ldr	x1, [x21, #2504]
  40c4e8:	mov	w0, #0xa                   	// #10
  40c4ec:	bl	406810 <putc@plt>
  40c4f0:	ldr	x8, [x19, #32]
  40c4f4:	cbz	x8, 40c54c <print_file_data_base@@Base+0x108>
  40c4f8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40c4fc:	ldrb	w8, [x8, #50]
  40c500:	ldrb	w9, [x20, #2376]
  40c504:	cmp	w8, w9
  40c508:	b.eq	40c54c <print_file_data_base@@Base+0x108>  // b.none
  40c50c:	ldr	x3, [x21, #2504]
  40c510:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40c514:	add	x0, x0, #0x5c1
  40c518:	mov	w1, #0x10                  	// #16
  40c51c:	mov	w2, #0x1                   	// #1
  40c520:	bl	406cb0 <fwrite@plt>
  40c524:	ldr	x8, [x19, #32]
  40c528:	ldrb	w0, [x8, #50]
  40c52c:	cmp	w0, #0x9
  40c530:	strb	w0, [x20, #2376]
  40c534:	b.eq	40c540 <print_file_data_base@@Base+0xfc>  // b.none
  40c538:	ldr	x1, [x21, #2504]
  40c53c:	bl	406810 <putc@plt>
  40c540:	ldr	x1, [x21, #2504]
  40c544:	mov	w0, #0xa                   	// #10
  40c548:	bl	406810 <putc@plt>
  40c54c:	ldr	x8, [x19, #80]
  40c550:	cbz	x8, 40c55c <print_file_data_base@@Base+0x118>
  40c554:	mov	x0, x19
  40c558:	bl	425be4 <print_target_variables@@Base>
  40c55c:	ldrb	w8, [x19, #137]
  40c560:	tbnz	w8, #3, 40c57c <print_file_data_base@@Base+0x138>
  40c564:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c568:	add	x1, x1, #0x5d2
  40c56c:	mov	w2, #0x5                   	// #5
  40c570:	mov	x0, xzr
  40c574:	bl	406dc0 <dcgettext@plt>
  40c578:	bl	406ba0 <puts@plt>
  40c57c:	ldr	x8, [x19, #104]
  40c580:	ldr	x1, [x19]
  40c584:	adrp	x9, 427000 <jobserver_post_child@@Base+0xcc>
  40c588:	adrp	x10, 42a000 <_IO_stdin_used@@Base+0x2680>
  40c58c:	add	x9, x9, #0xb14
  40c590:	add	x10, x10, #0x3a9
  40c594:	cmp	x8, #0x0
  40c598:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40c59c:	csel	x2, x10, x9, eq  // eq = none
  40c5a0:	add	x0, x0, #0x5e2
  40c5a4:	bl	406e60 <printf@plt>
  40c5a8:	ldr	x0, [x19, #24]
  40c5ac:	bl	40c354 <print_prereqs@@Base>
  40c5b0:	ldr	w8, [x19, #136]
  40c5b4:	tbnz	w8, #5, 40c6dc <print_file_data_base@@Base+0x298>
  40c5b8:	tbnz	w8, #13, 40c6fc <print_file_data_base@@Base+0x2b8>
  40c5bc:	tbnz	w8, #12, 40c71c <print_file_data_base@@Base+0x2d8>
  40c5c0:	tbnz	w8, #16, 40c73c <print_file_data_base@@Base+0x2f8>
  40c5c4:	tbz	w8, #4, 40c5e4 <print_file_data_base@@Base+0x1a0>
  40c5c8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c5cc:	add	x1, x1, #0x690
  40c5d0:	mov	w2, #0x5                   	// #5
  40c5d4:	mov	x0, xzr
  40c5d8:	bl	406dc0 <dcgettext@plt>
  40c5dc:	bl	406ba0 <puts@plt>
  40c5e0:	ldr	w8, [x19, #136]
  40c5e4:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  40c5e8:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x1680>
  40c5ec:	add	x9, x9, #0x6a0
  40c5f0:	add	x10, x10, #0x6c7
  40c5f4:	tst	w8, #0x100
  40c5f8:	csel	x1, x10, x9, eq  // eq = none
  40c5fc:	mov	w2, #0x5                   	// #5
  40c600:	mov	x0, xzr
  40c604:	bl	406dc0 <dcgettext@plt>
  40c608:	bl	406ba0 <puts@plt>
  40c60c:	ldr	x8, [x19, #40]
  40c610:	cbz	x8, 40c630 <print_file_data_base@@Base+0x1ec>
  40c614:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c618:	add	x1, x1, #0x6f2
  40c61c:	mov	w2, #0x5                   	// #5
  40c620:	mov	x0, xzr
  40c624:	bl	406dc0 <dcgettext@plt>
  40c628:	ldr	x1, [x19, #40]
  40c62c:	bl	406e60 <printf@plt>
  40c630:	ldrb	w8, [x19, #137]
  40c634:	tbz	w8, #6, 40c650 <print_file_data_base@@Base+0x20c>
  40c638:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c63c:	add	x1, x1, #0x719
  40c640:	mov	w2, #0x5                   	// #5
  40c644:	mov	x0, xzr
  40c648:	bl	406dc0 <dcgettext@plt>
  40c64c:	bl	406ba0 <puts@plt>
  40c650:	ldr	x8, [x19, #48]
  40c654:	cbz	x8, 40c6b8 <print_file_data_base@@Base+0x274>
  40c658:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c65c:	add	x1, x1, #0x742
  40c660:	mov	w2, #0x5                   	// #5
  40c664:	mov	x0, xzr
  40c668:	bl	406dc0 <dcgettext@plt>
  40c66c:	ldr	x1, [x21, #2504]
  40c670:	bl	406760 <fputs@plt>
  40c674:	ldr	x22, [x19, #48]
  40c678:	cbz	x22, 40c6ac <print_file_data_base@@Base+0x268>
  40c67c:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  40c680:	add	x20, x20, #0x5b5
  40c684:	b	40c698 <print_file_data_base@@Base+0x254>
  40c688:	mov	x0, x20
  40c68c:	bl	406e60 <printf@plt>
  40c690:	ldr	x22, [x22]
  40c694:	cbz	x22, 40c6ac <print_file_data_base@@Base+0x268>
  40c698:	ldr	x1, [x22, #8]
  40c69c:	cbnz	x1, 40c688 <print_file_data_base@@Base+0x244>
  40c6a0:	ldr	x8, [x22, #16]
  40c6a4:	ldr	x1, [x8]
  40c6a8:	b	40c688 <print_file_data_base@@Base+0x244>
  40c6ac:	ldr	x1, [x21, #2504]
  40c6b0:	mov	w0, #0xa                   	// #10
  40c6b4:	bl	406810 <putc@plt>
  40c6b8:	ldr	x1, [x19, #112]
  40c6bc:	cmp	x1, #0x2
  40c6c0:	b.eq	40c760 <print_file_data_base@@Base+0x31c>  // b.none
  40c6c4:	cmp	x1, #0x1
  40c6c8:	b.eq	40c76c <print_file_data_base@@Base+0x328>  // b.none
  40c6cc:	cbnz	x1, 40c788 <print_file_data_base@@Base+0x344>
  40c6d0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c6d4:	add	x1, x1, #0x751
  40c6d8:	b	40c774 <print_file_data_base@@Base+0x330>
  40c6dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c6e0:	add	x1, x1, #0x5e8
  40c6e4:	mov	w2, #0x5                   	// #5
  40c6e8:	mov	x0, xzr
  40c6ec:	bl	406dc0 <dcgettext@plt>
  40c6f0:	bl	406ba0 <puts@plt>
  40c6f4:	ldr	w8, [x19, #136]
  40c6f8:	tbz	w8, #13, 40c5bc <print_file_data_base@@Base+0x178>
  40c6fc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c700:	add	x1, x1, #0x616
  40c704:	mov	w2, #0x5                   	// #5
  40c708:	mov	x0, xzr
  40c70c:	bl	406dc0 <dcgettext@plt>
  40c710:	bl	406ba0 <puts@plt>
  40c714:	ldr	w8, [x19, #136]
  40c718:	tbz	w8, #12, 40c5c0 <print_file_data_base@@Base+0x17c>
  40c71c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c720:	add	x1, x1, #0x640
  40c724:	mov	w2, #0x5                   	// #5
  40c728:	mov	x0, xzr
  40c72c:	bl	406dc0 <dcgettext@plt>
  40c730:	bl	406ba0 <puts@plt>
  40c734:	ldr	w8, [x19, #136]
  40c738:	tbz	w8, #16, 40c5c4 <print_file_data_base@@Base+0x180>
  40c73c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c740:	add	x1, x1, #0x658
  40c744:	mov	w2, #0x5                   	// #5
  40c748:	mov	x0, xzr
  40c74c:	bl	406dc0 <dcgettext@plt>
  40c750:	bl	406ba0 <puts@plt>
  40c754:	ldr	w8, [x19, #136]
  40c758:	tbnz	w8, #4, 40c5c8 <print_file_data_base@@Base+0x184>
  40c75c:	b	40c5e4 <print_file_data_base@@Base+0x1a0>
  40c760:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c764:	add	x1, x1, #0x78d
  40c768:	b	40c774 <print_file_data_base@@Base+0x330>
  40c76c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c770:	add	x1, x1, #0x775
  40c774:	mov	w2, #0x5                   	// #5
  40c778:	mov	x0, xzr
  40c77c:	bl	406dc0 <dcgettext@plt>
  40c780:	bl	406ba0 <puts@plt>
  40c784:	b	40c7ac <print_file_data_base@@Base+0x368>
  40c788:	add	x0, sp, #0x4
  40c78c:	bl	40c1f0 <file_timestamp_sprintf@@Base>
  40c790:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c794:	add	x1, x1, #0x7a2
  40c798:	mov	w2, #0x5                   	// #5
  40c79c:	mov	x0, xzr
  40c7a0:	bl	406dc0 <dcgettext@plt>
  40c7a4:	add	x1, sp, #0x4
  40c7a8:	bl	406e60 <printf@plt>
  40c7ac:	ldr	w8, [x19, #136]
  40c7b0:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  40c7b4:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x1680>
  40c7b8:	add	x9, x9, #0x7b7
  40c7bc:	add	x10, x10, #0x7d1
  40c7c0:	tst	w8, #0x400
  40c7c4:	csel	x1, x10, x9, eq  // eq = none
  40c7c8:	mov	w2, #0x5                   	// #5
  40c7cc:	mov	x0, xzr
  40c7d0:	bl	406dc0 <dcgettext@plt>
  40c7d4:	bl	406ba0 <puts@plt>
  40c7d8:	ldr	w8, [x19, #136]
  40c7dc:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x1680>
  40c7e0:	add	x10, x10, #0x322
  40c7e4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c7e8:	ubfx	w9, w8, #2, #2
  40c7ec:	adr	x11, 40c800 <print_file_data_base@@Base+0x3bc>
  40c7f0:	ldrb	w12, [x10, x9]
  40c7f4:	add	x11, x11, x12, lsl #2
  40c7f8:	add	x1, x1, #0x7ef
  40c7fc:	br	x11
  40c800:	ands	w8, w8, #0x3
  40c804:	b.eq	40c830 <print_file_data_base@@Base+0x3ec>  // b.none
  40c808:	cmp	w8, #0x3
  40c80c:	b.eq	40c83c <print_file_data_base@@Base+0x3f8>  // b.none
  40c810:	cmp	w8, #0x2
  40c814:	b.ne	40c854 <print_file_data_base@@Base+0x410>  // b.any
  40c818:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c81c:	add	x1, x1, #0x865
  40c820:	b	40c844 <print_file_data_base@@Base+0x400>
  40c824:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c828:	add	x1, x1, #0x81c
  40c82c:	b	40c844 <print_file_data_base@@Base+0x400>
  40c830:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c834:	add	x1, x1, #0x84c
  40c838:	b	40c844 <print_file_data_base@@Base+0x400>
  40c83c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c840:	add	x1, x1, #0x889
  40c844:	mov	w2, #0x5                   	// #5
  40c848:	mov	x0, xzr
  40c84c:	bl	406dc0 <dcgettext@plt>
  40c850:	bl	406ba0 <puts@plt>
  40c854:	ldr	x8, [x19, #80]
  40c858:	cbz	x8, 40c864 <print_file_data_base@@Base+0x420>
  40c85c:	mov	x0, x19
  40c860:	bl	425b44 <print_file_variables@@Base>
  40c864:	ldr	x0, [x19, #32]
  40c868:	cbz	x0, 40c870 <print_file_data_base@@Base+0x42c>
  40c86c:	bl	408b74 <print_commands@@Base>
  40c870:	ldr	x0, [x19, #56]
  40c874:	cbz	x0, 40c87c <print_file_data_base@@Base+0x438>
  40c878:	bl	40c4b4 <print_file_data_base@@Base+0x70>
  40c87c:	ldp	x20, x19, [sp, #80]
  40c880:	ldp	x22, x21, [sp, #64]
  40c884:	ldp	x29, x30, [sp, #48]
  40c888:	add	sp, sp, #0x60
  40c88c:	ret

000000000040c890 <verify_file_data_base@@Base>:
  40c890:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40c894:	adrp	x1, 40c000 <snap_deps@@Base+0x720>
  40c898:	add	x0, x0, #0xb08
  40c89c:	add	x1, x1, #0x8a4
  40c8a0:	b	410f0c <hash_map@@Base>
  40c8a4:	stp	x29, x30, [sp, #-64]!
  40c8a8:	stp	x22, x21, [sp, #32]
  40c8ac:	stp	x20, x19, [sp, #48]
  40c8b0:	mov	x19, x0
  40c8b4:	ldr	x0, [x0]
  40c8b8:	str	x23, [sp, #16]
  40c8bc:	mov	x29, sp
  40c8c0:	cbz	x0, 40c918 <verify_file_data_base@@Base+0x88>
  40c8c4:	ldrb	w8, [x0]
  40c8c8:	cbz	w8, 40c918 <verify_file_data_base@@Base+0x88>
  40c8cc:	bl	4235f4 <strcache_iscached@@Base>
  40c8d0:	cbnz	w0, 40c918 <verify_file_data_base@@Base+0x88>
  40c8d4:	ldr	x0, [x19]
  40c8d8:	bl	406750 <strlen@plt>
  40c8dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c8e0:	lsl	x8, x0, #1
  40c8e4:	add	x1, x1, #0x8a2
  40c8e8:	mov	w2, #0x5                   	// #5
  40c8ec:	mov	x0, xzr
  40c8f0:	add	x20, x8, #0x4
  40c8f4:	bl	406dc0 <dcgettext@plt>
  40c8f8:	ldr	x3, [x19]
  40c8fc:	adrp	x4, 42c000 <_IO_stdin_used@@Base+0x4680>
  40c900:	mov	x2, x0
  40c904:	add	x4, x4, #0xd1e
  40c908:	mov	x0, xzr
  40c90c:	mov	x1, x20
  40c910:	mov	x5, x3
  40c914:	bl	41ae34 <error@@Base>
  40c918:	ldr	x0, [x19, #8]
  40c91c:	cbz	x0, 40c980 <verify_file_data_base@@Base+0xf0>
  40c920:	ldrb	w8, [x0]
  40c924:	cbz	w8, 40c980 <verify_file_data_base@@Base+0xf0>
  40c928:	bl	4235f4 <strcache_iscached@@Base>
  40c92c:	cbnz	w0, 40c980 <verify_file_data_base@@Base+0xf0>
  40c930:	ldr	x0, [x19]
  40c934:	bl	406750 <strlen@plt>
  40c938:	ldr	x8, [x19, #8]
  40c93c:	mov	x20, x0
  40c940:	mov	x0, x8
  40c944:	bl	406750 <strlen@plt>
  40c948:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c94c:	add	x8, x20, x0
  40c950:	add	x1, x1, #0x8a2
  40c954:	mov	w2, #0x5                   	// #5
  40c958:	mov	x0, xzr
  40c95c:	add	x20, x8, #0x5
  40c960:	bl	406dc0 <dcgettext@plt>
  40c964:	ldp	x3, x5, [x19]
  40c968:	adrp	x4, 429000 <_IO_stdin_used@@Base+0x1680>
  40c96c:	mov	x2, x0
  40c970:	add	x4, x4, #0x8c0
  40c974:	mov	x0, xzr
  40c978:	mov	x1, x20
  40c97c:	bl	41ae34 <error@@Base>
  40c980:	ldr	x0, [x19, #16]
  40c984:	cbz	x0, 40c9ec <verify_file_data_base@@Base+0x15c>
  40c988:	ldrb	w8, [x0]
  40c98c:	cbz	w8, 40c9ec <verify_file_data_base@@Base+0x15c>
  40c990:	bl	4235f4 <strcache_iscached@@Base>
  40c994:	cbnz	w0, 40c9ec <verify_file_data_base@@Base+0x15c>
  40c998:	ldr	x0, [x19]
  40c99c:	bl	406750 <strlen@plt>
  40c9a0:	ldr	x8, [x19, #16]
  40c9a4:	mov	x20, x0
  40c9a8:	mov	x0, x8
  40c9ac:	bl	406750 <strlen@plt>
  40c9b0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40c9b4:	add	x8, x20, x0
  40c9b8:	add	x1, x1, #0x8a2
  40c9bc:	mov	w2, #0x5                   	// #5
  40c9c0:	mov	x0, xzr
  40c9c4:	add	x20, x8, #0x5
  40c9c8:	bl	406dc0 <dcgettext@plt>
  40c9cc:	ldr	x3, [x19]
  40c9d0:	ldr	x5, [x19, #16]
  40c9d4:	adrp	x4, 429000 <_IO_stdin_used@@Base+0x1680>
  40c9d8:	mov	x2, x0
  40c9dc:	add	x4, x4, #0x8c6
  40c9e0:	mov	x0, xzr
  40c9e4:	mov	x1, x20
  40c9e8:	bl	41ae34 <error@@Base>
  40c9ec:	ldr	x0, [x19, #40]
  40c9f0:	cbz	x0, 40ca58 <verify_file_data_base@@Base+0x1c8>
  40c9f4:	ldrb	w8, [x0]
  40c9f8:	cbz	w8, 40ca58 <verify_file_data_base@@Base+0x1c8>
  40c9fc:	bl	4235f4 <strcache_iscached@@Base>
  40ca00:	cbnz	w0, 40ca58 <verify_file_data_base@@Base+0x1c8>
  40ca04:	ldr	x0, [x19]
  40ca08:	bl	406750 <strlen@plt>
  40ca0c:	ldr	x8, [x19, #40]
  40ca10:	mov	x20, x0
  40ca14:	mov	x0, x8
  40ca18:	bl	406750 <strlen@plt>
  40ca1c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ca20:	add	x8, x20, x0
  40ca24:	add	x1, x1, #0x8a2
  40ca28:	mov	w2, #0x5                   	// #5
  40ca2c:	mov	x0, xzr
  40ca30:	add	x20, x8, #0x4
  40ca34:	bl	406dc0 <dcgettext@plt>
  40ca38:	ldr	x3, [x19]
  40ca3c:	ldr	x5, [x19, #40]
  40ca40:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x2680>
  40ca44:	mov	x2, x0
  40ca48:	add	x4, x4, #0x42a
  40ca4c:	mov	x0, xzr
  40ca50:	mov	x1, x20
  40ca54:	bl	41ae34 <error@@Base>
  40ca58:	ldr	x23, [x19, #24]
  40ca5c:	cbz	x23, 40cb54 <verify_file_data_base@@Base+0x2c4>
  40ca60:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x1680>
  40ca64:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40ca68:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x2680>
  40ca6c:	add	x19, x19, #0x8a2
  40ca70:	add	x20, x20, #0xd1e
  40ca74:	add	x21, x21, #0x42a
  40ca78:	b	40ca84 <verify_file_data_base@@Base+0x1f4>
  40ca7c:	ldr	x23, [x23]
  40ca80:	cbz	x23, 40cb54 <verify_file_data_base@@Base+0x2c4>
  40ca84:	ldrb	w8, [x23, #33]
  40ca88:	tbnz	w8, #3, 40caa4 <verify_file_data_base@@Base+0x214>
  40ca8c:	ldr	x0, [x23, #8]
  40ca90:	cbz	x0, 40caa4 <verify_file_data_base@@Base+0x214>
  40ca94:	ldrb	w8, [x0]
  40ca98:	cbz	w8, 40caa4 <verify_file_data_base@@Base+0x214>
  40ca9c:	bl	4235f4 <strcache_iscached@@Base>
  40caa0:	cbz	w0, 40cb0c <verify_file_data_base@@Base+0x27c>
  40caa4:	ldr	x0, [x23, #24]
  40caa8:	cbz	x0, 40ca7c <verify_file_data_base@@Base+0x1ec>
  40caac:	ldrb	w8, [x0]
  40cab0:	cbz	w8, 40ca7c <verify_file_data_base@@Base+0x1ec>
  40cab4:	bl	4235f4 <strcache_iscached@@Base>
  40cab8:	cbnz	w0, 40ca7c <verify_file_data_base@@Base+0x1ec>
  40cabc:	ldr	x0, [x23, #8]
  40cac0:	bl	406750 <strlen@plt>
  40cac4:	ldr	x8, [x23, #24]
  40cac8:	mov	x22, x0
  40cacc:	mov	x0, x8
  40cad0:	bl	406750 <strlen@plt>
  40cad4:	add	x8, x22, x0
  40cad8:	mov	w2, #0x5                   	// #5
  40cadc:	mov	x0, xzr
  40cae0:	mov	x1, x19
  40cae4:	add	x22, x8, #0x4
  40cae8:	bl	406dc0 <dcgettext@plt>
  40caec:	ldr	x3, [x23, #8]
  40caf0:	ldr	x5, [x23, #24]
  40caf4:	mov	x2, x0
  40caf8:	mov	x0, xzr
  40cafc:	mov	x1, x22
  40cb00:	mov	x4, x21
  40cb04:	bl	41ae34 <error@@Base>
  40cb08:	b	40ca7c <verify_file_data_base@@Base+0x1ec>
  40cb0c:	ldr	x0, [x23, #8]
  40cb10:	bl	406750 <strlen@plt>
  40cb14:	lsl	x8, x0, #1
  40cb18:	mov	w2, #0x5                   	// #5
  40cb1c:	mov	x0, xzr
  40cb20:	mov	x1, x19
  40cb24:	add	x22, x8, #0x4
  40cb28:	bl	406dc0 <dcgettext@plt>
  40cb2c:	ldr	x3, [x23, #8]
  40cb30:	mov	x2, x0
  40cb34:	mov	x0, xzr
  40cb38:	mov	x1, x22
  40cb3c:	mov	x4, x20
  40cb40:	mov	x5, x3
  40cb44:	bl	41ae34 <error@@Base>
  40cb48:	ldr	x0, [x23, #24]
  40cb4c:	cbnz	x0, 40caac <verify_file_data_base@@Base+0x21c>
  40cb50:	b	40ca7c <verify_file_data_base@@Base+0x1ec>
  40cb54:	ldp	x20, x19, [sp, #48]
  40cb58:	ldp	x22, x21, [sp, #32]
  40cb5c:	ldr	x23, [sp, #16]
  40cb60:	ldp	x29, x30, [sp], #64
  40cb64:	ret

000000000040cb68 <build_target_list@@Base>:
  40cb68:	stp	x29, x30, [sp, #-96]!
  40cb6c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40cb70:	add	x9, x9, #0xb00
  40cb74:	ldr	x8, [x9, #56]
  40cb78:	ldr	x9, [x9]
  40cb7c:	stp	x20, x19, [sp, #80]
  40cb80:	mov	x19, x0
  40cb84:	stp	x28, x27, [sp, #16]
  40cb88:	cmp	x8, x9
  40cb8c:	stp	x26, x25, [sp, #32]
  40cb90:	stp	x24, x23, [sp, #48]
  40cb94:	stp	x22, x21, [sp, #64]
  40cb98:	mov	x29, sp
  40cb9c:	b.eq	40ccdc <build_target_list@@Base+0x174>  // b.none
  40cba0:	mov	x0, x19
  40cba4:	bl	406750 <strlen@plt>
  40cba8:	mov	x10, #0xf7cf                	// #63439
  40cbac:	movk	x10, #0xe353, lsl #16
  40cbb0:	movk	x10, #0x9ba5, lsl #32
  40cbb4:	lsr	x8, x0, #2
  40cbb8:	movk	x10, #0x20c4, lsl #48
  40cbbc:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40cbc0:	add	x9, x9, #0xb08
  40cbc4:	umulh	x8, x8, x10
  40cbc8:	ldr	x26, [x9]
  40cbcc:	ldr	x21, [x9, #32]
  40cbd0:	lsr	x8, x8, #4
  40cbd4:	mov	w9, #0x1f4                 	// #500
  40cbd8:	mul	x8, x8, x9
  40cbdc:	add	x20, x8, #0x1f4
  40cbe0:	mov	x0, x19
  40cbe4:	mov	x1, x20
  40cbe8:	bl	419de0 <xrealloc@@Base>
  40cbec:	cmp	x21, #0x1
  40cbf0:	mov	x19, x0
  40cbf4:	b.lt	40ccc4 <build_target_list@@Base+0x15c>  // b.tstop
  40cbf8:	mov	x27, xzr
  40cbfc:	add	x28, x26, x21, lsl #3
  40cc00:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  40cc04:	mov	x21, x19
  40cc08:	b	40cc34 <build_target_list@@Base+0xcc>
  40cc0c:	mov	x0, x21
  40cc10:	mov	x1, x23
  40cc14:	mov	x2, x22
  40cc18:	bl	406710 <memcpy@plt>
  40cc1c:	add	x21, x21, x22
  40cc20:	mov	w8, #0x20                  	// #32
  40cc24:	strb	w8, [x21], #1
  40cc28:	add	x26, x26, #0x8
  40cc2c:	cmp	x26, x28
  40cc30:	b.cs	40ccc8 <build_target_list@@Base+0x160>  // b.hs, b.nlast
  40cc34:	ldr	x24, [x26]
  40cc38:	cbz	x24, 40cc28 <build_target_list@@Base+0xc0>
  40cc3c:	ldr	x8, [x25, #2328]
  40cc40:	cmp	x8, x24
  40cc44:	b.eq	40cc28 <build_target_list@@Base+0xc0>  // b.none
  40cc48:	ldrb	w8, [x24, #137]
  40cc4c:	tbz	w8, #3, 40cc28 <build_target_list@@Base+0xc0>
  40cc50:	ldr	x23, [x24]
  40cc54:	mov	x0, x23
  40cc58:	bl	406750 <strlen@plt>
  40cc5c:	add	x8, x0, #0x1
  40cc60:	add	x27, x8, x27
  40cc64:	mov	x22, x0
  40cc68:	cmp	x27, x20
  40cc6c:	b.ls	40cc0c <build_target_list@@Base+0xa4>  // b.plast
  40cc70:	mov	x11, #0xf7cf                	// #63439
  40cc74:	movk	x11, #0xe353, lsl #16
  40cc78:	movk	x11, #0x9ba5, lsl #32
  40cc7c:	lsr	x9, x8, #2
  40cc80:	movk	x11, #0x20c4, lsl #48
  40cc84:	umulh	x9, x9, x11
  40cc88:	add	x10, x20, x8
  40cc8c:	lsr	x9, x9, #4
  40cc90:	neg	x8, x8
  40cc94:	mov	w11, #0x1f4                 	// #500
  40cc98:	madd	x8, x9, x11, x8
  40cc9c:	add	x8, x10, x8
  40cca0:	add	x20, x8, #0x1f4
  40cca4:	mov	x0, x19
  40cca8:	mov	x1, x20
  40ccac:	sub	x21, x21, x19
  40ccb0:	bl	419de0 <xrealloc@@Base>
  40ccb4:	ldr	x23, [x24]
  40ccb8:	mov	x19, x0
  40ccbc:	add	x21, x0, x21
  40ccc0:	b	40cc0c <build_target_list@@Base+0xa4>
  40ccc4:	mov	x21, x19
  40ccc8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40cccc:	sturb	wzr, [x21, #-1]
  40ccd0:	add	x9, x9, #0xb00
  40ccd4:	ldr	x8, [x9, #56]
  40ccd8:	str	x8, [x9]
  40ccdc:	mov	x0, x19
  40cce0:	ldp	x20, x19, [sp, #80]
  40cce4:	ldp	x22, x21, [sp, #64]
  40cce8:	ldp	x24, x23, [sp, #48]
  40ccec:	ldp	x26, x25, [sp, #32]
  40ccf0:	ldp	x28, x27, [sp, #16]
  40ccf4:	ldp	x29, x30, [sp], #96
  40ccf8:	ret

000000000040ccfc <init_hash_files@@Base>:
  40ccfc:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40cd00:	adrp	x2, 40c000 <snap_deps@@Base+0x720>
  40cd04:	adrp	x3, 40c000 <snap_deps@@Base+0x720>
  40cd08:	adrp	x4, 40b000 <rehash_file@@Base+0x3b4>
  40cd0c:	add	x0, x0, #0xb08
  40cd10:	add	x2, x2, #0xd24
  40cd14:	add	x3, x3, #0xd40
  40cd18:	add	x4, x4, #0x4
  40cd1c:	mov	w1, #0x3e8                 	// #1000
  40cd20:	b	410560 <hash_init@@Base>
  40cd24:	stp	x29, x30, [sp, #-16]!
  40cd28:	ldr	x0, [x0, #8]
  40cd2c:	mov	x29, sp
  40cd30:	bl	4112ec <jhash_string@@Base>
  40cd34:	mov	w0, w0
  40cd38:	ldp	x29, x30, [sp], #16
  40cd3c:	ret
  40cd40:	mov	x0, xzr
  40cd44:	ret

000000000040cd48 <subst_expand@@Base>:
  40cd48:	stp	x29, x30, [sp, #-96]!
  40cd4c:	stp	x24, x23, [sp, #48]
  40cd50:	stp	x22, x21, [sp, #64]
  40cd54:	stp	x20, x19, [sp, #80]
  40cd58:	mov	x19, x5
  40cd5c:	mov	x24, x4
  40cd60:	mov	x20, x3
  40cd64:	mov	x21, x2
  40cd68:	mov	x22, x1
  40cd6c:	mov	x23, x0
  40cd70:	str	x27, [sp, #16]
  40cd74:	stp	x26, x25, [sp, #32]
  40cd78:	mov	x29, sp
  40cd7c:	cbnz	x4, 40cdb4 <subst_expand@@Base+0x6c>
  40cd80:	cbnz	w6, 40cdb4 <subst_expand@@Base+0x6c>
  40cd84:	mov	x0, x22
  40cd88:	bl	406750 <strlen@plt>
  40cd8c:	mov	x2, x0
  40cd90:	mov	x0, x23
  40cd94:	mov	x1, x22
  40cd98:	bl	409d08 <variable_buffer_output@@Base>
  40cd9c:	mov	x23, x0
  40cda0:	cbz	x19, 40cf40 <subst_expand@@Base+0x1f8>
  40cda4:	mov	x0, x23
  40cda8:	mov	x1, x20
  40cdac:	mov	x2, x19
  40cdb0:	b	40cf78 <subst_expand@@Base+0x230>
  40cdb4:	cbnz	x24, 40ce50 <subst_expand@@Base+0x108>
  40cdb8:	cbz	w6, 40ce50 <subst_expand@@Base+0x108>
  40cdbc:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40cdc0:	add	x26, x26, #0xcf0
  40cdc4:	mov	x24, x22
  40cdc8:	b	40cde8 <subst_expand@@Base+0xa0>
  40cdcc:	mov	x0, x23
  40cdd0:	mov	x1, x21
  40cdd4:	mov	x2, xzr
  40cdd8:	bl	409d08 <variable_buffer_output@@Base>
  40cddc:	mov	x23, x0
  40cde0:	ldrb	w8, [x24]
  40cde4:	cbz	w8, 40cf40 <subst_expand@@Base+0x1f8>
  40cde8:	mov	x0, x24
  40cdec:	bl	419edc <next_token@@Base>
  40cdf0:	bl	419ebc <end_of_token@@Base>
  40cdf4:	mov	x25, x0
  40cdf8:	subs	x2, x0, x24
  40cdfc:	b.ls	40ce10 <subst_expand@@Base+0xc8>  // b.plast
  40ce00:	mov	x0, x23
  40ce04:	mov	x1, x24
  40ce08:	bl	409d08 <variable_buffer_output@@Base>
  40ce0c:	mov	x23, x0
  40ce10:	cmp	x25, x22
  40ce14:	mov	x24, x25
  40ce18:	b.ls	40ce2c <subst_expand@@Base+0xe4>  // b.plast
  40ce1c:	ldurb	w8, [x24, #-1]
  40ce20:	ldrh	w8, [x26, x8, lsl #1]
  40ce24:	tst	w8, #0x6
  40ce28:	b.eq	40cdcc <subst_expand@@Base+0x84>  // b.none
  40ce2c:	ldrb	w8, [x24]
  40ce30:	ldrh	w8, [x26, x8, lsl #1]
  40ce34:	tst	w8, #0x7
  40ce38:	b.eq	40cdcc <subst_expand@@Base+0x84>  // b.none
  40ce3c:	cbz	x19, 40cde0 <subst_expand@@Base+0x98>
  40ce40:	mov	x0, x23
  40ce44:	mov	x1, x20
  40ce48:	mov	x2, x19
  40ce4c:	b	40cdd8 <subst_expand@@Base+0x90>
  40ce50:	cbz	w6, 40ce70 <subst_expand@@Base+0x128>
  40ce54:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  40ce58:	add	x27, x27, #0xcf0
  40ce5c:	mov	x26, x22
  40ce60:	b	40ced8 <subst_expand@@Base+0x190>
  40ce64:	add	x22, x25, x24
  40ce68:	ldrb	w8, [x22]
  40ce6c:	cbz	w8, 40cf40 <subst_expand@@Base+0x1f8>
  40ce70:	mov	x0, x22
  40ce74:	mov	x1, x21
  40ce78:	bl	406db0 <strstr@plt>
  40ce7c:	cbz	x0, 40cf64 <subst_expand@@Base+0x21c>
  40ce80:	mov	x25, x0
  40ce84:	subs	x2, x0, x22
  40ce88:	b.ls	40ce9c <subst_expand@@Base+0x154>  // b.plast
  40ce8c:	mov	x0, x23
  40ce90:	mov	x1, x22
  40ce94:	bl	409d08 <variable_buffer_output@@Base>
  40ce98:	mov	x23, x0
  40ce9c:	cbz	x19, 40ce64 <subst_expand@@Base+0x11c>
  40cea0:	mov	x0, x23
  40cea4:	mov	x1, x20
  40cea8:	mov	x2, x19
  40ceac:	bl	409d08 <variable_buffer_output@@Base>
  40ceb0:	mov	x23, x0
  40ceb4:	b	40ce64 <subst_expand@@Base+0x11c>
  40ceb8:	mov	x0, x23
  40cebc:	mov	x1, x21
  40cec0:	mov	x2, x24
  40cec4:	bl	409d08 <variable_buffer_output@@Base>
  40cec8:	mov	x23, x0
  40cecc:	add	x26, x25, x24
  40ced0:	ldrb	w8, [x26]
  40ced4:	cbz	w8, 40cf40 <subst_expand@@Base+0x1f8>
  40ced8:	mov	x0, x26
  40cedc:	mov	x1, x21
  40cee0:	bl	406db0 <strstr@plt>
  40cee4:	cbz	x0, 40cf60 <subst_expand@@Base+0x218>
  40cee8:	mov	x25, x0
  40ceec:	subs	x2, x0, x26
  40cef0:	b.ls	40cf04 <subst_expand@@Base+0x1bc>  // b.plast
  40cef4:	mov	x0, x23
  40cef8:	mov	x1, x26
  40cefc:	bl	409d08 <variable_buffer_output@@Base>
  40cf00:	mov	x23, x0
  40cf04:	cmp	x25, x22
  40cf08:	b.ls	40cf1c <subst_expand@@Base+0x1d4>  // b.plast
  40cf0c:	ldurb	w8, [x25, #-1]
  40cf10:	ldrh	w8, [x27, x8, lsl #1]
  40cf14:	tst	w8, #0x6
  40cf18:	b.eq	40ceb8 <subst_expand@@Base+0x170>  // b.none
  40cf1c:	ldrb	w8, [x25, x24]
  40cf20:	ldrh	w8, [x27, x8, lsl #1]
  40cf24:	tst	w8, #0x7
  40cf28:	b.eq	40ceb8 <subst_expand@@Base+0x170>  // b.none
  40cf2c:	cbz	x19, 40cecc <subst_expand@@Base+0x184>
  40cf30:	mov	x0, x23
  40cf34:	mov	x1, x20
  40cf38:	mov	x2, x19
  40cf3c:	b	40cec4 <subst_expand@@Base+0x17c>
  40cf40:	mov	x0, x23
  40cf44:	ldp	x20, x19, [sp, #80]
  40cf48:	ldp	x22, x21, [sp, #64]
  40cf4c:	ldp	x24, x23, [sp, #48]
  40cf50:	ldp	x26, x25, [sp, #32]
  40cf54:	ldr	x27, [sp, #16]
  40cf58:	ldp	x29, x30, [sp], #96
  40cf5c:	ret
  40cf60:	mov	x22, x26
  40cf64:	mov	x0, x22
  40cf68:	bl	406750 <strlen@plt>
  40cf6c:	mov	x2, x0
  40cf70:	mov	x0, x23
  40cf74:	mov	x1, x22
  40cf78:	ldp	x20, x19, [sp, #80]
  40cf7c:	ldp	x22, x21, [sp, #64]
  40cf80:	ldp	x24, x23, [sp, #48]
  40cf84:	ldp	x26, x25, [sp, #32]
  40cf88:	ldr	x27, [sp, #16]
  40cf8c:	ldp	x29, x30, [sp], #96
  40cf90:	b	409d08 <variable_buffer_output@@Base>

000000000040cf94 <patsubst_expand_pat@@Base>:
  40cf94:	sub	sp, sp, #0xc0
  40cf98:	stp	x29, x30, [sp, #96]
  40cf9c:	stp	x28, x27, [sp, #112]
  40cfa0:	stp	x24, x23, [sp, #144]
  40cfa4:	stp	x22, x21, [sp, #160]
  40cfa8:	stp	x20, x19, [sp, #176]
  40cfac:	add	x29, sp, #0x60
  40cfb0:	mov	x20, x5
  40cfb4:	mov	x21, x4
  40cfb8:	mov	x23, x3
  40cfbc:	mov	x27, x2
  40cfc0:	mov	x19, x1
  40cfc4:	mov	x22, x0
  40cfc8:	stp	x26, x25, [sp, #128]
  40cfcc:	stur	x1, [x29, #-8]
  40cfd0:	cbz	x5, 40d194 <patsubst_expand_pat@@Base+0x200>
  40cfd4:	mvn	x8, x23
  40cfd8:	mov	x0, x20
  40cfdc:	add	x24, x20, x8
  40cfe0:	bl	406750 <strlen@plt>
  40cfe4:	stur	x0, [x29, #-32]
  40cfe8:	cbz	x21, 40d1a8 <patsubst_expand_pat@@Base+0x214>
  40cfec:	mov	x0, x21
  40cff0:	bl	406750 <strlen@plt>
  40cff4:	mov	x25, x0
  40cff8:	sub	x0, x29, #0x8
  40cffc:	sub	x1, x29, #0x10
  40d000:	bl	419efc <find_next_token@@Base>
  40d004:	cbz	x0, 40d2f4 <patsubst_expand_pat@@Base+0x360>
  40d008:	mvn	x8, x27
  40d00c:	cmp	x20, #0x0
  40d010:	sub	x9, x25, #0x1
  40d014:	stur	x9, [x29, #-24]
  40d018:	add	x9, x21, x8
  40d01c:	cset	w8, eq  // eq = none
  40d020:	str	w8, [sp, #28]
  40d024:	ldur	x8, [x29, #-32]
  40d028:	mov	x28, x0
  40d02c:	stp	x20, x23, [sp, #40]
  40d030:	add	x23, x25, x9
  40d034:	neg	x8, x8
  40d038:	mov	w20, wzr
  40d03c:	stur	x24, [x29, #-40]
  40d040:	str	x8, [sp, #16]
  40d044:	cbz	x9, 40d1e4 <patsubst_expand_pat@@Base+0x250>
  40d048:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  40d04c:	sub	x24, x9, #0x1
  40d050:	add	x8, x27, #0x1
  40d054:	add	x19, x19, #0x9ec
  40d058:	str	x9, [sp, #8]
  40d05c:	str	x8, [sp, #32]
  40d060:	ldur	x26, [x29, #-16]
  40d064:	cmp	x26, x23
  40d068:	b.cc	40d0a0 <patsubst_expand_pat@@Base+0x10c>  // b.lo, b.ul, b.last
  40d06c:	ldrb	w8, [x28]
  40d070:	ldrb	w9, [x27]
  40d074:	cmp	w8, w9
  40d078:	b.ne	40d0a0 <patsubst_expand_pat@@Base+0x10c>  // b.any
  40d07c:	ldrb	w8, [x28, x24]
  40d080:	ldurb	w9, [x21, #-2]
  40d084:	cmp	w8, w9
  40d088:	b.ne	40d0a0 <patsubst_expand_pat@@Base+0x10c>  // b.any
  40d08c:	ldr	x1, [sp, #32]
  40d090:	add	x0, x28, #0x1
  40d094:	mov	x2, x24
  40d098:	bl	4069f0 <strncmp@plt>
  40d09c:	cbz	w0, 40d0e4 <patsubst_expand_pat@@Base+0x150>
  40d0a0:	mov	x0, x22
  40d0a4:	mov	x1, x28
  40d0a8:	mov	x2, x26
  40d0ac:	bl	409d08 <variable_buffer_output@@Base>
  40d0b0:	mov	x22, x0
  40d0b4:	mov	w2, #0x1                   	// #1
  40d0b8:	mov	x0, x22
  40d0bc:	mov	x1, x19
  40d0c0:	mov	w20, #0x1                   	// #1
  40d0c4:	bl	409d08 <variable_buffer_output@@Base>
  40d0c8:	mov	x22, x0
  40d0cc:	sub	x0, x29, #0x8
  40d0d0:	sub	x1, x29, #0x10
  40d0d4:	bl	419efc <find_next_token@@Base>
  40d0d8:	mov	x28, x0
  40d0dc:	cbnz	x0, 40d060 <patsubst_expand_pat@@Base+0xcc>
  40d0e0:	b	40d2ec <patsubst_expand_pat@@Base+0x358>
  40d0e4:	cbz	x25, 40d128 <patsubst_expand_pat@@Base+0x194>
  40d0e8:	ldur	x9, [x29, #-24]
  40d0ec:	add	x8, x26, x28
  40d0f0:	ldurb	w8, [x8, #-1]
  40d0f4:	ldrb	w9, [x21, x9]
  40d0f8:	cmp	w8, w9
  40d0fc:	b.ne	40d0a0 <patsubst_expand_pat@@Base+0x10c>  // b.any
  40d100:	sub	x8, x26, x25
  40d104:	add	x0, x28, x8
  40d108:	ldrb	w8, [x0]
  40d10c:	ldrb	w9, [x21]
  40d110:	cmp	w8, w9
  40d114:	b.ne	40d0a0 <patsubst_expand_pat@@Base+0x10c>  // b.any
  40d118:	ldur	x2, [x29, #-24]
  40d11c:	mov	x1, x21
  40d120:	bl	4069f0 <strncmp@plt>
  40d124:	cbnz	w0, 40d0a0 <patsubst_expand_pat@@Base+0x10c>
  40d128:	ldr	x1, [sp, #48]
  40d12c:	ldur	x2, [x29, #-40]
  40d130:	mov	x0, x22
  40d134:	bl	409d08 <variable_buffer_output@@Base>
  40d138:	ldr	x26, [sp, #40]
  40d13c:	mov	x22, x0
  40d140:	cbz	x26, 40d16c <patsubst_expand_pat@@Base+0x1d8>
  40d144:	ldur	x8, [x29, #-16]
  40d148:	ldr	x9, [sp, #8]
  40d14c:	mov	x0, x22
  40d150:	sub	x2, x8, x23
  40d154:	add	x1, x28, x9
  40d158:	bl	409d08 <variable_buffer_output@@Base>
  40d15c:	ldur	x2, [x29, #-32]
  40d160:	mov	x1, x26
  40d164:	bl	409d08 <variable_buffer_output@@Base>
  40d168:	mov	x22, x0
  40d16c:	ldur	x8, [x29, #-40]
  40d170:	cbnz	x8, 40d0b4 <patsubst_expand_pat@@Base+0x120>
  40d174:	ldur	x8, [x29, #-16]
  40d178:	ldr	x9, [sp, #16]
  40d17c:	cmp	x8, x9
  40d180:	ldr	w9, [sp, #28]
  40d184:	cset	w8, eq  // eq = none
  40d188:	orr	w8, w8, w9
  40d18c:	tbz	w8, #0, 40d0b4 <patsubst_expand_pat@@Base+0x120>
  40d190:	b	40d0cc <patsubst_expand_pat@@Base+0x138>
  40d194:	mov	x0, x23
  40d198:	bl	406750 <strlen@plt>
  40d19c:	mov	x24, x0
  40d1a0:	stur	xzr, [x29, #-32]
  40d1a4:	cbnz	x21, 40cfec <patsubst_expand_pat@@Base+0x58>
  40d1a8:	mov	x0, x27
  40d1ac:	bl	406750 <strlen@plt>
  40d1b0:	mov	x20, x0
  40d1b4:	mov	x0, x23
  40d1b8:	bl	406750 <strlen@plt>
  40d1bc:	mov	x5, x0
  40d1c0:	mov	w6, #0x1                   	// #1
  40d1c4:	mov	x0, x22
  40d1c8:	mov	x1, x19
  40d1cc:	mov	x2, x27
  40d1d0:	mov	x3, x23
  40d1d4:	mov	x4, x20
  40d1d8:	bl	40cd48 <subst_expand@@Base>
  40d1dc:	mov	x22, x0
  40d1e0:	b	40d2f4 <patsubst_expand_pat@@Base+0x360>
  40d1e4:	ldur	x26, [x29, #-40]
  40d1e8:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  40d1ec:	add	x19, x19, #0x9ec
  40d1f0:	ldur	x24, [x29, #-16]
  40d1f4:	cbz	x25, 40d258 <patsubst_expand_pat@@Base+0x2c4>
  40d1f8:	cmp	x24, x23
  40d1fc:	b.cc	40d258 <patsubst_expand_pat@@Base+0x2c4>  // b.lo, b.ul, b.last
  40d200:	ldur	x9, [x29, #-24]
  40d204:	add	x8, x24, x28
  40d208:	ldurb	w8, [x8, #-1]
  40d20c:	ldrb	w9, [x21, x9]
  40d210:	cmp	w8, w9
  40d214:	b.ne	40d240 <patsubst_expand_pat@@Base+0x2ac>  // b.any
  40d218:	sub	x8, x24, x25
  40d21c:	add	x0, x28, x8
  40d220:	ldrb	w8, [x0]
  40d224:	ldrb	w9, [x21]
  40d228:	cmp	w8, w9
  40d22c:	b.ne	40d240 <patsubst_expand_pat@@Base+0x2ac>  // b.any
  40d230:	ldur	x2, [x29, #-24]
  40d234:	mov	x1, x21
  40d238:	bl	4069f0 <strncmp@plt>
  40d23c:	cbz	w0, 40d260 <patsubst_expand_pat@@Base+0x2cc>
  40d240:	mov	x0, x22
  40d244:	mov	x1, x28
  40d248:	mov	x2, x24
  40d24c:	bl	409d08 <variable_buffer_output@@Base>
  40d250:	mov	x22, x0
  40d254:	b	40d2c0 <patsubst_expand_pat@@Base+0x32c>
  40d258:	cmp	x24, x23
  40d25c:	b.cc	40d240 <patsubst_expand_pat@@Base+0x2ac>  // b.lo, b.ul, b.last
  40d260:	ldr	x1, [sp, #48]
  40d264:	mov	x0, x22
  40d268:	mov	x2, x26
  40d26c:	bl	409d08 <variable_buffer_output@@Base>
  40d270:	ldr	x24, [sp, #40]
  40d274:	mov	x22, x0
  40d278:	cbz	x24, 40d2a0 <patsubst_expand_pat@@Base+0x30c>
  40d27c:	ldur	x8, [x29, #-16]
  40d280:	mov	x0, x22
  40d284:	mov	x1, x28
  40d288:	sub	x2, x8, x23
  40d28c:	bl	409d08 <variable_buffer_output@@Base>
  40d290:	ldur	x2, [x29, #-32]
  40d294:	mov	x1, x24
  40d298:	bl	409d08 <variable_buffer_output@@Base>
  40d29c:	mov	x22, x0
  40d2a0:	cbnz	x26, 40d2c0 <patsubst_expand_pat@@Base+0x32c>
  40d2a4:	ldur	x8, [x29, #-16]
  40d2a8:	ldr	x9, [sp, #16]
  40d2ac:	cmp	x8, x9
  40d2b0:	ldr	w9, [sp, #28]
  40d2b4:	cset	w8, eq  // eq = none
  40d2b8:	orr	w8, w8, w9
  40d2bc:	tbnz	w8, #0, 40d2d8 <patsubst_expand_pat@@Base+0x344>
  40d2c0:	mov	w2, #0x1                   	// #1
  40d2c4:	mov	x0, x22
  40d2c8:	mov	x1, x19
  40d2cc:	mov	w20, #0x1                   	// #1
  40d2d0:	bl	409d08 <variable_buffer_output@@Base>
  40d2d4:	mov	x22, x0
  40d2d8:	sub	x0, x29, #0x8
  40d2dc:	sub	x1, x29, #0x10
  40d2e0:	bl	419efc <find_next_token@@Base>
  40d2e4:	mov	x28, x0
  40d2e8:	cbnz	x0, 40d1f0 <patsubst_expand_pat@@Base+0x25c>
  40d2ec:	cbz	w20, 40d2f4 <patsubst_expand_pat@@Base+0x360>
  40d2f0:	sub	x22, x22, #0x1
  40d2f4:	mov	x0, x22
  40d2f8:	ldp	x20, x19, [sp, #176]
  40d2fc:	ldp	x22, x21, [sp, #160]
  40d300:	ldp	x24, x23, [sp, #144]
  40d304:	ldp	x26, x25, [sp, #128]
  40d308:	ldp	x28, x27, [sp, #112]
  40d30c:	ldp	x29, x30, [sp, #96]
  40d310:	add	sp, sp, #0xc0
  40d314:	ret

000000000040d318 <patsubst_expand@@Base>:
  40d318:	stp	x29, x30, [sp, #-64]!
  40d31c:	stp	x22, x21, [sp, #32]
  40d320:	mov	x22, x0
  40d324:	mov	x0, x2
  40d328:	str	x23, [sp, #16]
  40d32c:	stp	x20, x19, [sp, #48]
  40d330:	mov	x29, sp
  40d334:	mov	x19, x3
  40d338:	mov	x20, x2
  40d33c:	mov	x21, x1
  40d340:	bl	41d7d0 <find_percent@@Base>
  40d344:	mov	x23, x0
  40d348:	mov	x0, x19
  40d34c:	bl	41d7d0 <find_percent@@Base>
  40d350:	cmp	x0, #0x0
  40d354:	csinc	x5, xzr, x0, eq  // eq = none
  40d358:	cmp	x23, #0x0
  40d35c:	csinc	x4, xzr, x23, eq  // eq = none
  40d360:	mov	x0, x22
  40d364:	mov	x1, x21
  40d368:	mov	x2, x20
  40d36c:	mov	x3, x19
  40d370:	ldp	x20, x19, [sp, #48]
  40d374:	ldp	x22, x21, [sp, #32]
  40d378:	ldr	x23, [sp, #16]
  40d37c:	ldp	x29, x30, [sp], #64
  40d380:	b	40cf94 <patsubst_expand_pat@@Base>

000000000040d384 <pattern_matches@@Base>:
  40d384:	stp	x29, x30, [sp, #-64]!
  40d388:	stp	x20, x19, [sp, #48]
  40d38c:	mov	x19, x2
  40d390:	mov	x20, x0
  40d394:	stp	x24, x23, [sp, #16]
  40d398:	stp	x22, x21, [sp, #32]
  40d39c:	mov	x29, sp
  40d3a0:	cbz	x1, 40d3ac <pattern_matches@@Base+0x28>
  40d3a4:	mov	x22, x1
  40d3a8:	b	40d3ec <pattern_matches@@Base+0x68>
  40d3ac:	mov	x0, x20
  40d3b0:	bl	406750 <strlen@plt>
  40d3b4:	add	x9, x0, #0x10
  40d3b8:	mov	x8, sp
  40d3bc:	and	x9, x9, #0xfffffffffffffff0
  40d3c0:	sub	x21, x8, x9
  40d3c4:	add	x2, x0, #0x1
  40d3c8:	mov	sp, x21
  40d3cc:	mov	x0, x21
  40d3d0:	mov	x1, x20
  40d3d4:	bl	406710 <memcpy@plt>
  40d3d8:	mov	x0, x21
  40d3dc:	bl	41d7d0 <find_percent@@Base>
  40d3e0:	cbz	x0, 40d44c <pattern_matches@@Base+0xc8>
  40d3e4:	mov	x22, x0
  40d3e8:	mov	x20, x21
  40d3ec:	add	x21, x22, #0x1
  40d3f0:	mov	x0, x21
  40d3f4:	bl	406750 <strlen@plt>
  40d3f8:	mov	x23, x0
  40d3fc:	mov	x0, x19
  40d400:	bl	406750 <strlen@plt>
  40d404:	sub	x2, x22, x20
  40d408:	add	x8, x2, x23
  40d40c:	cmp	x0, x8
  40d410:	b.cc	40d428 <pattern_matches@@Base+0xa4>  // b.lo, b.ul, b.last
  40d414:	mov	x24, x0
  40d418:	mov	x0, x20
  40d41c:	mov	x1, x19
  40d420:	bl	4069f0 <strncmp@plt>
  40d424:	cbz	w0, 40d430 <pattern_matches@@Base+0xac>
  40d428:	mov	w0, wzr
  40d42c:	b	40d478 <pattern_matches@@Base+0xf4>
  40d430:	sub	x8, x24, x23
  40d434:	add	x1, x19, x8
  40d438:	mov	x0, x21
  40d43c:	bl	406c10 <strcmp@plt>
  40d440:	cmp	w0, #0x0
  40d444:	cset	w0, eq  // eq = none
  40d448:	b	40d478 <pattern_matches@@Base+0xf4>
  40d44c:	cmp	x21, x19
  40d450:	b.eq	40d474 <pattern_matches@@Base+0xf0>  // b.none
  40d454:	ldrb	w8, [x21]
  40d458:	ldrb	w9, [x19]
  40d45c:	cmp	w8, w9
  40d460:	b.ne	40d428 <pattern_matches@@Base+0xa4>  // b.any
  40d464:	cbz	w8, 40d474 <pattern_matches@@Base+0xf0>
  40d468:	add	x0, x21, #0x1
  40d46c:	add	x1, x19, #0x1
  40d470:	b	40d43c <pattern_matches@@Base+0xb8>
  40d474:	mov	w0, #0x1                   	// #1
  40d478:	mov	sp, x29
  40d47c:	ldp	x20, x19, [sp, #48]
  40d480:	ldp	x22, x21, [sp, #32]
  40d484:	ldp	x24, x23, [sp, #16]
  40d488:	ldp	x29, x30, [sp], #64
  40d48c:	ret

000000000040d490 <strip_whitespace@@Base>:
  40d490:	ldr	x8, [x0]
  40d494:	ldr	x9, [x1]
  40d498:	cmp	x8, x9
  40d49c:	b.hi	40d4e4 <strip_whitespace@@Base+0x54>  // b.pmore
  40d4a0:	ldrb	w11, [x8]
  40d4a4:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  40d4a8:	add	x10, x10, #0xcf0
  40d4ac:	ldrh	w11, [x10, x11, lsl #1]
  40d4b0:	tst	w11, #0x6
  40d4b4:	b.eq	40d4e4 <strip_whitespace@@Base+0x54>  // b.none
  40d4b8:	add	x11, x8, #0x1
  40d4bc:	str	x11, [x0]
  40d4c0:	ldr	x9, [x1]
  40d4c4:	mov	x8, x11
  40d4c8:	cmp	x11, x9
  40d4cc:	b.hi	40d4e4 <strip_whitespace@@Base+0x54>  // b.pmore
  40d4d0:	mov	x11, x8
  40d4d4:	ldrb	w12, [x11], #1
  40d4d8:	ldrh	w12, [x10, x12, lsl #1]
  40d4dc:	tst	w12, #0x6
  40d4e0:	b.ne	40d4bc <strip_whitespace@@Base+0x2c>  // b.any
  40d4e4:	cmp	x9, x8
  40d4e8:	b.cc	40d528 <strip_whitespace@@Base+0x98>  // b.lo, b.ul, b.last
  40d4ec:	ldrb	w11, [x9]
  40d4f0:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  40d4f4:	add	x10, x10, #0xcf0
  40d4f8:	ldrh	w11, [x10, x11, lsl #1]
  40d4fc:	tst	w11, #0x6
  40d500:	b.eq	40d528 <strip_whitespace@@Base+0x98>  // b.none
  40d504:	sub	x9, x9, #0x1
  40d508:	str	x9, [x1]
  40d50c:	ldr	x8, [x0]
  40d510:	cmp	x9, x8
  40d514:	b.cc	40d528 <strip_whitespace@@Base+0x98>  // b.lo, b.ul, b.last
  40d518:	ldrb	w11, [x9], #-1
  40d51c:	ldrh	w11, [x10, x11, lsl #1]
  40d520:	tst	w11, #0x6
  40d524:	b.ne	40d508 <strip_whitespace@@Base+0x78>  // b.any
  40d528:	mov	x0, x8
  40d52c:	ret

000000000040d530 <shell_completed@@Base>:
  40d530:	sub	sp, sp, #0x120
  40d534:	cmp	w1, #0x0
  40d538:	add	w8, w1, #0x80
  40d53c:	ccmp	w0, #0x0, #0x0, gt
  40d540:	mov	w10, #0x7f                  	// #127
  40d544:	csel	w2, w8, w0, eq  // eq = none
  40d548:	cmp	w1, #0x0
  40d54c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40d550:	mov	w11, #0xffffffff            	// #-1
  40d554:	ccmp	w0, w10, #0x0, eq  // eq = none
  40d558:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  40d55c:	str	wzr, [x9, #2912]
  40d560:	cneg	w8, w11, ne  // ne = any
  40d564:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40d568:	add	x1, x1, #0xad1
  40d56c:	mov	x0, sp
  40d570:	stp	x29, x30, [sp, #256]
  40d574:	str	x28, [sp, #272]
  40d578:	add	x29, sp, #0x100
  40d57c:	str	w8, [x9, #2916]
  40d580:	bl	406800 <sprintf@plt>
  40d584:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d588:	ldr	x8, [x8, #2424]
  40d58c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40d590:	add	x0, x0, #0x8d4
  40d594:	mov	x2, sp
  40d598:	ldr	x5, [x8, #8]
  40d59c:	mov	w1, #0xc                   	// #12
  40d5a0:	mov	w3, #0x5                   	// #5
  40d5a4:	mov	w4, wzr
  40d5a8:	mov	x6, xzr
  40d5ac:	bl	423d70 <define_variable_in_set@@Base>
  40d5b0:	ldr	x28, [sp, #272]
  40d5b4:	ldp	x29, x30, [sp, #256]
  40d5b8:	add	sp, sp, #0x120
  40d5bc:	ret

000000000040d5c0 <func_shell_base@@Base>:
  40d5c0:	sub	sp, sp, #0x180
  40d5c4:	stp	x29, x30, [sp, #288]
  40d5c8:	stp	x28, x27, [sp, #304]
  40d5cc:	stp	x26, x25, [sp, #320]
  40d5d0:	stp	x24, x23, [sp, #336]
  40d5d4:	stp	x22, x21, [sp, #352]
  40d5d8:	stp	x20, x19, [sp, #368]
  40d5dc:	str	xzr, [sp, #16]
  40d5e0:	ldr	x8, [x1]
  40d5e4:	mov	w21, w2
  40d5e8:	mov	x19, x0
  40d5ec:	add	x4, sp, #0x10
  40d5f0:	mov	x0, x8
  40d5f4:	mov	x1, xzr
  40d5f8:	mov	x2, xzr
  40d5fc:	mov	w3, wzr
  40d600:	add	x29, sp, #0x120
  40d604:	bl	414dfc <construct_command_argv@@Base>
  40d608:	cbz	x0, 40d8fc <func_shell_base@@Base+0x33c>
  40d60c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d610:	ldr	x23, [x8, #2520]
  40d614:	mov	x20, x0
  40d618:	bl	41aa3c <output_start@@Base>
  40d61c:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  40d620:	ldr	x8, [x8, #1456]
  40d624:	cbz	x8, 40d720 <func_shell_base@@Base+0x160>
  40d628:	ldr	w22, [x8, #4]
  40d62c:	tbnz	w22, #31, 40d720 <func_shell_base@@Base+0x160>
  40d630:	add	x0, sp, #0x8
  40d634:	bl	406820 <pipe@plt>
  40d638:	tbnz	w0, #31, 40d73c <func_shell_base@@Base+0x17c>
  40d63c:	ldr	w0, [sp, #12]
  40d640:	bl	4269cc <fd_noinherit@@Base>
  40d644:	ldr	w0, [sp, #8]
  40d648:	bl	4269cc <fd_noinherit@@Base>
  40d64c:	ldrb	w8, [sp, #48]
  40d650:	ldr	w9, [sp, #12]
  40d654:	add	x0, sp, #0x18
  40d658:	mov	w1, #0x1                   	// #1
  40d65c:	orr	w8, w8, #0x1
  40d660:	mov	x2, x20
  40d664:	stp	w9, w22, [sp, #40]
  40d668:	strb	w8, [sp, #48]
  40d66c:	stp	xzr, x23, [sp, #24]
  40d670:	bl	4148a0 <child_execute_job@@Base>
  40d674:	ldr	x8, [sp, #24]
  40d678:	mov	w22, w0
  40d67c:	mov	x0, x8
  40d680:	bl	406c60 <free@plt>
  40d684:	tbnz	w22, #31, 40d898 <func_shell_base@@Base+0x2d8>
  40d688:	ldr	w0, [sp, #12]
  40d68c:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  40d690:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40d694:	str	w22, [x25, #2912]
  40d698:	str	wzr, [x26, #2916]
  40d69c:	tbnz	w0, #31, 40d6a4 <func_shell_base@@Base+0xe4>
  40d6a0:	bl	406b10 <close@plt>
  40d6a4:	mov	w0, #0xc9                  	// #201
  40d6a8:	bl	419e14 <xmalloc@@Base>
  40d6ac:	mov	x22, x0
  40d6b0:	mov	x27, xzr
  40d6b4:	mov	w28, #0xc8                  	// #200
  40d6b8:	cmp	x27, x28
  40d6bc:	b.ne	40d6d4 <func_shell_base@@Base+0x114>  // b.any
  40d6c0:	add	x1, x27, #0x201
  40d6c4:	mov	x0, x22
  40d6c8:	add	x28, x27, #0x200
  40d6cc:	bl	419de0 <xrealloc@@Base>
  40d6d0:	mov	x22, x0
  40d6d4:	add	x23, x22, x27
  40d6d8:	sub	x24, x28, x27
  40d6dc:	ldr	w0, [sp, #8]
  40d6e0:	mov	x1, x23
  40d6e4:	mov	x2, x24
  40d6e8:	bl	406d50 <read@plt>
  40d6ec:	cmn	w0, #0x1
  40d6f0:	b.ne	40d708 <func_shell_base@@Base+0x148>  // b.any
  40d6f4:	bl	406e70 <__errno_location@plt>
  40d6f8:	ldr	w8, [x0]
  40d6fc:	cmp	w8, #0x4
  40d700:	b.eq	40d6dc <func_shell_base@@Base+0x11c>  // b.none
  40d704:	b	40d784 <func_shell_base@@Base+0x1c4>
  40d708:	cmp	w0, #0x1
  40d70c:	b.lt	40d784 <func_shell_base@@Base+0x1c4>  // b.tstop
  40d710:	add	x27, x27, w0, sxtw
  40d714:	cmp	x27, x28
  40d718:	b.eq	40d6c0 <func_shell_base@@Base+0x100>  // b.none
  40d71c:	b	40d6d4 <func_shell_base@@Base+0x114>
  40d720:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d724:	ldr	x0, [x8, #2480]
  40d728:	bl	406910 <fileno@plt>
  40d72c:	mov	w22, w0
  40d730:	add	x0, sp, #0x8
  40d734:	bl	406820 <pipe@plt>
  40d738:	tbz	w0, #31, 40d63c <func_shell_base@@Base+0x7c>
  40d73c:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40d740:	ldr	x21, [x8, #1536]
  40d744:	bl	406e70 <__errno_location@plt>
  40d748:	mov	x22, x0
  40d74c:	ldr	w0, [x0]
  40d750:	bl	406b00 <strerror@plt>
  40d754:	bl	406750 <strlen@plt>
  40d758:	ldr	w8, [x22]
  40d75c:	mov	x22, x0
  40d760:	mov	w0, w8
  40d764:	bl	406b00 <strerror@plt>
  40d768:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  40d76c:	mov	x3, x0
  40d770:	add	x2, x2, #0x8e1
  40d774:	mov	x0, x21
  40d778:	mov	x1, x22
  40d77c:	bl	41ae34 <error@@Base>
  40d780:	b	40d8ec <func_shell_base@@Base+0x32c>
  40d784:	strb	wzr, [x23]
  40d788:	ldr	w0, [sp, #8]
  40d78c:	bl	406b10 <close@plt>
  40d790:	ldr	w8, [x26, #2916]
  40d794:	cbnz	w8, 40d7ac <func_shell_base@@Base+0x1ec>
  40d798:	mov	w0, #0x1                   	// #1
  40d79c:	mov	w1, wzr
  40d7a0:	bl	412c28 <reap_children@@Base>
  40d7a4:	ldr	w8, [x26, #2916]
  40d7a8:	cbz	w8, 40d798 <func_shell_base@@Base+0x1d8>
  40d7ac:	ldr	x0, [sp, #16]
  40d7b0:	cbz	x0, 40d7fc <func_shell_base@@Base+0x23c>
  40d7b4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d7b8:	ldrb	w8, [x8, #3236]
  40d7bc:	tbz	w8, #1, 40d7ec <func_shell_base@@Base+0x22c>
  40d7c0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40d7c4:	add	x1, x1, #0x8ea
  40d7c8:	mov	w2, #0x5                   	// #5
  40d7cc:	mov	x0, xzr
  40d7d0:	bl	406dc0 <dcgettext@plt>
  40d7d4:	ldr	x1, [sp, #16]
  40d7d8:	bl	406e60 <printf@plt>
  40d7dc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d7e0:	ldr	x0, [x8, #2504]
  40d7e4:	bl	406cf0 <fflush@plt>
  40d7e8:	ldr	x0, [sp, #16]
  40d7ec:	bl	4067d0 <remove@plt>
  40d7f0:	ldr	x0, [sp, #16]
  40d7f4:	bl	406c60 <free@plt>
  40d7f8:	ldr	w8, [x26, #2916]
  40d7fc:	cmn	w8, #0x1
  40d800:	str	wzr, [x25, #2912]
  40d804:	b.eq	40d920 <func_shell_base@@Base+0x360>  // b.none
  40d808:	sub	x10, x22, #0x1
  40d80c:	add	x8, x22, #0x1
  40d810:	mov	x9, x22
  40d814:	strb	wzr, [x23]
  40d818:	b	40d82c <func_shell_base@@Base+0x26c>
  40d81c:	mov	x10, x9
  40d820:	strb	w11, [x9]
  40d824:	mov	x9, x12
  40d828:	add	x8, x8, #0x1
  40d82c:	ldurb	w11, [x8, #-1]
  40d830:	cmp	w11, #0xd
  40d834:	b.eq	40d850 <func_shell_base@@Base+0x290>  // b.none
  40d838:	cbz	w11, 40d864 <func_shell_base@@Base+0x2a4>
  40d83c:	cmp	w11, #0xa
  40d840:	add	x12, x9, #0x1
  40d844:	b.ne	40d81c <func_shell_base@@Base+0x25c>  // b.any
  40d848:	mov	w11, #0x20                  	// #32
  40d84c:	b	40d820 <func_shell_base@@Base+0x260>
  40d850:	ldrb	w12, [x8]
  40d854:	cmp	w12, #0xa
  40d858:	b.eq	40d828 <func_shell_base@@Base+0x268>  // b.none
  40d85c:	add	x12, x9, #0x1
  40d860:	b	40d81c <func_shell_base@@Base+0x25c>
  40d864:	sub	x8, x9, #0x2
  40d868:	cmp	x10, x8
  40d86c:	ccmp	w21, #0x0, #0x0, cc  // cc = lo, ul, last
  40d870:	csel	x8, x8, x10, eq  // eq = none
  40d874:	strb	wzr, [x8, #1]!
  40d878:	sub	x2, x8, x22
  40d87c:	mov	x0, x19
  40d880:	mov	x1, x22
  40d884:	bl	409d08 <variable_buffer_output@@Base>
  40d888:	mov	x19, x0
  40d88c:	mov	x0, x22
  40d890:	bl	406c60 <free@plt>
  40d894:	b	40d8ec <func_shell_base@@Base+0x32c>
  40d898:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  40d89c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d8a0:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40d8a4:	mov	w10, #0xffffffff            	// #-1
  40d8a8:	add	x1, x1, #0xad1
  40d8ac:	add	x0, sp, #0x18
  40d8b0:	mov	w2, #0x7f                  	// #127
  40d8b4:	str	wzr, [x8, #2912]
  40d8b8:	str	w10, [x9, #2916]
  40d8bc:	bl	406800 <sprintf@plt>
  40d8c0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40d8c4:	ldr	x8, [x8, #2424]
  40d8c8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  40d8cc:	add	x0, x0, #0x8d4
  40d8d0:	add	x2, sp, #0x18
  40d8d4:	ldr	x5, [x8, #8]
  40d8d8:	mov	w1, #0xc                   	// #12
  40d8dc:	mov	w3, #0x5                   	// #5
  40d8e0:	mov	w4, wzr
  40d8e4:	mov	x6, xzr
  40d8e8:	bl	423d70 <define_variable_in_set@@Base>
  40d8ec:	ldr	x0, [x20]
  40d8f0:	bl	406c60 <free@plt>
  40d8f4:	mov	x0, x20
  40d8f8:	bl	406c60 <free@plt>
  40d8fc:	mov	x0, x19
  40d900:	ldp	x20, x19, [sp, #368]
  40d904:	ldp	x22, x21, [sp, #352]
  40d908:	ldp	x24, x23, [sp, #336]
  40d90c:	ldp	x26, x25, [sp, #320]
  40d910:	ldp	x28, x27, [sp, #304]
  40d914:	ldp	x29, x30, [sp, #288]
  40d918:	add	sp, sp, #0x180
  40d91c:	ret
  40d920:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40d924:	ldr	x1, [x21, #2480]
  40d928:	mov	x0, x22
  40d92c:	bl	406760 <fputs@plt>
  40d930:	ldr	x0, [x21, #2480]
  40d934:	bl	406cf0 <fflush@plt>
  40d938:	b	40d88c <func_shell_base@@Base+0x2cc>

000000000040d93c <handle_function@@Base>:
  40d93c:	stp	x29, x30, [sp, #-96]!
  40d940:	stp	x28, x27, [sp, #16]
  40d944:	stp	x26, x25, [sp, #32]
  40d948:	stp	x24, x23, [sp, #48]
  40d94c:	stp	x22, x21, [sp, #64]
  40d950:	stp	x20, x19, [sp, #80]
  40d954:	mov	x29, sp
  40d958:	sub	sp, sp, #0x30
  40d95c:	ldr	x9, [x1]
  40d960:	mov	w11, #0x7d                  	// #125
  40d964:	mov	w12, #0x29                  	// #41
  40d968:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  40d96c:	mov	x10, x9
  40d970:	ldrb	w26, [x10], #1
  40d974:	mov	x22, x1
  40d978:	mov	x23, x0
  40d97c:	mov	x8, xzr
  40d980:	cmp	w26, #0x28
  40d984:	csel	w20, w12, w11, eq  // eq = none
  40d988:	add	x27, x27, #0xcf0
  40d98c:	ldrb	w11, [x10, x8]
  40d990:	add	x8, x8, #0x1
  40d994:	ldrh	w11, [x27, x11, lsl #1]
  40d998:	tbnz	w11, #13, 40d98c <handle_function@@Base+0x50>
  40d99c:	cmp	x8, #0x1
  40d9a0:	b.eq	40da58 <handle_function@@Base+0x11c>  // b.none
  40d9a4:	and	w10, w11, #0x7
  40d9a8:	cbz	w10, 40da58 <handle_function@@Base+0x11c>
  40d9ac:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40d9b0:	add	x19, x9, #0x1
  40d9b4:	sub	w8, w8, #0x1
  40d9b8:	add	x0, x0, #0xb80
  40d9bc:	sub	x1, x29, #0x18
  40d9c0:	stur	x19, [x29, #-16]
  40d9c4:	sturb	w8, [x29, #-8]
  40d9c8:	bl	410888 <hash_find_item@@Base>
  40d9cc:	cbz	x0, 40dc80 <handle_function@@Base+0x344>
  40d9d0:	ldrb	w8, [x0, #16]
  40d9d4:	mov	x21, x0
  40d9d8:	add	x28, x19, x8
  40d9dc:	ldrb	w11, [x28], #1
  40d9e0:	ldrh	w12, [x27, x11, lsl #1]
  40d9e4:	tst	w12, #0x6
  40d9e8:	b.ne	40d9dc <handle_function@@Base+0xa0>  // b.any
  40d9ec:	cbz	w11, 40dca0 <handle_function@@Base+0x364>
  40d9f0:	mov	w8, wzr
  40d9f4:	sub	x24, x28, #0x1
  40d9f8:	mov	w9, #0x1                   	// #1
  40d9fc:	mov	w10, #0x480                 	// #1152
  40da00:	tst	w12, w10
  40da04:	b.eq	40da3c <handle_function@@Base+0x100>  // b.none
  40da08:	and	w12, w11, #0xff
  40da0c:	cmp	w12, #0x2c
  40da10:	b.ne	40da1c <handle_function@@Base+0xe0>  // b.any
  40da14:	add	w9, w9, #0x1
  40da18:	b	40da3c <handle_function@@Base+0x100>
  40da1c:	cmp	w26, w11, uxtb
  40da20:	b.ne	40da2c <handle_function@@Base+0xf0>  // b.any
  40da24:	add	w8, w8, #0x1
  40da28:	b	40da3c <handle_function@@Base+0x100>
  40da2c:	cmp	w20, w11, uxtb
  40da30:	b.ne	40da3c <handle_function@@Base+0x100>  // b.any
  40da34:	subs	w8, w8, #0x1
  40da38:	b.lt	40da60 <handle_function@@Base+0x124>  // b.tstop
  40da3c:	ldrb	w11, [x28]
  40da40:	cbz	x11, 40da64 <handle_function@@Base+0x128>
  40da44:	ldrh	w12, [x27, x11, lsl #1]
  40da48:	add	x28, x28, #0x1
  40da4c:	tst	w12, w10
  40da50:	b.ne	40da08 <handle_function@@Base+0xcc>  // b.any
  40da54:	b	40da3c <handle_function@@Base+0x100>
  40da58:	mov	w0, wzr
  40da5c:	b	40dc80 <handle_function@@Base+0x344>
  40da60:	sub	x28, x28, #0x1
  40da64:	tbz	w8, #31, 40dca0 <handle_function@@Base+0x364>
  40da68:	add	w8, w9, #0x2
  40da6c:	sbfiz	x8, x8, #3, #32
  40da70:	add	x8, x8, #0xf
  40da74:	and	x8, x8, #0xfffffffffffffff0
  40da78:	mov	x9, sp
  40da7c:	str	x28, [x22]
  40da80:	sub	x22, x9, x8
  40da84:	mov	sp, x22
  40da88:	ldrb	w8, [x21, #19]
  40da8c:	stur	x23, [x29, #-32]
  40da90:	tbnz	w8, #0, 40db60 <handle_function@@Base+0x224>
  40da94:	sub	x23, x28, x24
  40da98:	add	x0, x23, #0x1
  40da9c:	bl	419e14 <xmalloc@@Base>
  40daa0:	mov	x1, x24
  40daa4:	mov	x2, x23
  40daa8:	mov	x25, x0
  40daac:	bl	406710 <memcpy@plt>
  40dab0:	add	x8, x25, x23
  40dab4:	strb	wzr, [x8]
  40dab8:	tbnz	x23, #63, 40db6c <handle_function@@Base+0x230>
  40dabc:	mov	w23, wzr
  40dac0:	mov	w9, #0x480                 	// #1152
  40dac4:	mov	x10, x25
  40dac8:	mov	x15, x22
  40dacc:	b	40dae8 <handle_function@@Base+0x1ac>
  40dad0:	mov	x11, x8
  40dad4:	str	x10, [x22], #8
  40dad8:	strb	wzr, [x11], #1
  40dadc:	cmp	x11, x8
  40dae0:	mov	x10, x11
  40dae4:	b.hi	40db78 <handle_function@@Base+0x23c>  // b.pmore
  40dae8:	cmp	x10, x8
  40daec:	add	w23, w23, #0x1
  40daf0:	mov	x11, x8
  40daf4:	b.cs	40dad4 <handle_function@@Base+0x198>  // b.hs, b.nlast
  40daf8:	ldrb	w11, [x21, #18]
  40dafc:	cmp	w23, w11
  40db00:	mov	x11, x8
  40db04:	b.eq	40dad4 <handle_function@@Base+0x198>  // b.none
  40db08:	mov	w12, wzr
  40db0c:	mov	x11, x10
  40db10:	b	40db24 <handle_function@@Base+0x1e8>
  40db14:	add	w12, w12, #0x1
  40db18:	add	x11, x11, #0x1
  40db1c:	cmp	x8, x11
  40db20:	b.eq	40dad0 <handle_function@@Base+0x194>  // b.none
  40db24:	ldrb	w13, [x11]
  40db28:	ldrh	w14, [x27, x13, lsl #1]
  40db2c:	tst	w14, w9
  40db30:	b.eq	40db18 <handle_function@@Base+0x1dc>  // b.none
  40db34:	cmp	w13, w26
  40db38:	b.eq	40db14 <handle_function@@Base+0x1d8>  // b.none
  40db3c:	cmp	w13, w20
  40db40:	b.ne	40db50 <handle_function@@Base+0x214>  // b.any
  40db44:	subs	w12, w12, #0x1
  40db48:	b.ge	40db18 <handle_function@@Base+0x1dc>  // b.tcont
  40db4c:	b	40dad0 <handle_function@@Base+0x194>
  40db50:	cbnz	w12, 40db18 <handle_function@@Base+0x1dc>
  40db54:	cmp	w13, #0x2c
  40db58:	b.ne	40db18 <handle_function@@Base+0x1dc>  // b.any
  40db5c:	b	40dad4 <handle_function@@Base+0x198>
  40db60:	cmp	x24, x28
  40db64:	b.ls	40db80 <handle_function@@Base+0x244>  // b.plast
  40db68:	mov	x25, xzr
  40db6c:	mov	w23, wzr
  40db70:	mov	x20, x22
  40db74:	b	40dc30 <handle_function@@Base+0x2f4>
  40db78:	mov	x20, x15
  40db7c:	b	40dc30 <handle_function@@Base+0x2f4>
  40db80:	mov	w23, wzr
  40db84:	mov	w19, #0x480                 	// #1152
  40db88:	stur	x22, [x29, #-40]
  40db8c:	b	40dbb0 <handle_function@@Base+0x274>
  40db90:	mov	x25, x28
  40db94:	mov	x0, x24
  40db98:	mov	x1, x25
  40db9c:	bl	40a594 <expand_argument@@Base>
  40dba0:	add	x24, x25, #0x1
  40dba4:	cmp	x24, x28
  40dba8:	str	x0, [x22], #8
  40dbac:	b.hi	40dc28 <handle_function@@Base+0x2ec>  // b.pmore
  40dbb0:	cmp	x24, x28
  40dbb4:	add	w23, w23, #0x1
  40dbb8:	mov	x25, x28
  40dbbc:	b.cs	40db94 <handle_function@@Base+0x258>  // b.hs, b.nlast
  40dbc0:	ldrb	w8, [x21, #18]
  40dbc4:	mov	x25, x28
  40dbc8:	cmp	w23, w8
  40dbcc:	b.eq	40db94 <handle_function@@Base+0x258>  // b.none
  40dbd0:	mov	w8, wzr
  40dbd4:	mov	x25, x24
  40dbd8:	b	40dbec <handle_function@@Base+0x2b0>
  40dbdc:	add	w8, w8, #0x1
  40dbe0:	add	x25, x25, #0x1
  40dbe4:	cmp	x28, x25
  40dbe8:	b.eq	40db90 <handle_function@@Base+0x254>  // b.none
  40dbec:	ldrb	w9, [x25]
  40dbf0:	ldrh	w10, [x27, x9, lsl #1]
  40dbf4:	tst	w10, w19
  40dbf8:	b.eq	40dbe0 <handle_function@@Base+0x2a4>  // b.none
  40dbfc:	cmp	w9, w26
  40dc00:	b.eq	40dbdc <handle_function@@Base+0x2a0>  // b.none
  40dc04:	cmp	w9, w20
  40dc08:	b.ne	40dc18 <handle_function@@Base+0x2dc>  // b.any
  40dc0c:	subs	w8, w8, #0x1
  40dc10:	b.ge	40dbe0 <handle_function@@Base+0x2a4>  // b.tcont
  40dc14:	b	40db90 <handle_function@@Base+0x254>
  40dc18:	cbnz	w8, 40dbe0 <handle_function@@Base+0x2a4>
  40dc1c:	cmp	w9, #0x2c
  40dc20:	b.ne	40dbe0 <handle_function@@Base+0x2a4>  // b.any
  40dc24:	b	40db94 <handle_function@@Base+0x258>
  40dc28:	ldur	x20, [x29, #-40]
  40dc2c:	mov	x25, xzr
  40dc30:	ldur	x19, [x29, #-32]
  40dc34:	str	xzr, [x22]
  40dc38:	mov	w1, w23
  40dc3c:	mov	x2, x20
  40dc40:	ldr	x0, [x19]
  40dc44:	mov	x3, x21
  40dc48:	bl	40dce4 <handle_function@@Base+0x3a8>
  40dc4c:	str	x0, [x19]
  40dc50:	ldrb	w8, [x21, #19]
  40dc54:	tbnz	w8, #0, 40dc64 <handle_function@@Base+0x328>
  40dc58:	mov	x0, x25
  40dc5c:	bl	406c60 <free@plt>
  40dc60:	b	40dc7c <handle_function@@Base+0x340>
  40dc64:	ldr	x0, [x20]
  40dc68:	cbz	x0, 40dc7c <handle_function@@Base+0x340>
  40dc6c:	add	x19, x20, #0x8
  40dc70:	bl	406c60 <free@plt>
  40dc74:	ldr	x0, [x19], #8
  40dc78:	cbnz	x0, 40dc70 <handle_function@@Base+0x334>
  40dc7c:	mov	w0, #0x1                   	// #1
  40dc80:	mov	sp, x29
  40dc84:	ldp	x20, x19, [sp, #80]
  40dc88:	ldp	x22, x21, [sp, #64]
  40dc8c:	ldp	x24, x23, [sp, #48]
  40dc90:	ldp	x26, x25, [sp, #32]
  40dc94:	ldp	x28, x27, [sp, #16]
  40dc98:	ldp	x29, x30, [sp], #96
  40dc9c:	ret
  40dca0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40dca4:	ldr	x8, [x8, #1456]
  40dca8:	ldr	x0, [x21, #8]
  40dcac:	ldr	x19, [x8]
  40dcb0:	bl	406750 <strlen@plt>
  40dcb4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40dcb8:	mov	x22, x0
  40dcbc:	add	x1, x1, #0x90f
  40dcc0:	mov	w2, #0x5                   	// #5
  40dcc4:	mov	x0, xzr
  40dcc8:	bl	406dc0 <dcgettext@plt>
  40dccc:	ldr	x3, [x21, #8]
  40dcd0:	mov	x2, x0
  40dcd4:	mov	x0, x19
  40dcd8:	mov	x1, x22
  40dcdc:	mov	w4, w20
  40dce0:	bl	41aff0 <fatal@@Base>
  40dce4:	stp	x29, x30, [sp, #-48]!
  40dce8:	stp	x22, x21, [sp, #16]
  40dcec:	stp	x20, x19, [sp, #32]
  40dcf0:	ldrb	w8, [x3, #17]
  40dcf4:	mov	x29, sp
  40dcf8:	cmp	w8, w1
  40dcfc:	b.gt	40dd84 <handle_function@@Base+0x448>
  40dd00:	mov	x19, x0
  40dd04:	cbnz	w1, 40dd10 <handle_function@@Base+0x3d4>
  40dd08:	ldrb	w8, [x3, #19]
  40dd0c:	tbz	w8, #1, 40dd70 <handle_function@@Base+0x434>
  40dd10:	ldr	x4, [x3]
  40dd14:	cbz	x4, 40ddd0 <handle_function@@Base+0x494>
  40dd18:	ldrb	w9, [x3, #19]
  40dd1c:	ldr	x8, [x3, #8]
  40dd20:	tbnz	w9, #1, 40dd40 <handle_function@@Base+0x404>
  40dd24:	mov	x0, x19
  40dd28:	ldp	x20, x19, [sp, #32]
  40dd2c:	ldp	x22, x21, [sp, #16]
  40dd30:	mov	x1, x2
  40dd34:	mov	x2, x8
  40dd38:	ldp	x29, x30, [sp], #48
  40dd3c:	br	x4
  40dd40:	mov	x0, x8
  40dd44:	blr	x4
  40dd48:	cbz	x0, 40dd70 <handle_function@@Base+0x434>
  40dd4c:	mov	x20, x0
  40dd50:	bl	406750 <strlen@plt>
  40dd54:	mov	x2, x0
  40dd58:	mov	x0, x19
  40dd5c:	mov	x1, x20
  40dd60:	bl	409d08 <variable_buffer_output@@Base>
  40dd64:	mov	x19, x0
  40dd68:	mov	x0, x20
  40dd6c:	bl	406c60 <free@plt>
  40dd70:	mov	x0, x19
  40dd74:	ldp	x20, x19, [sp, #32]
  40dd78:	ldp	x22, x21, [sp, #16]
  40dd7c:	ldp	x29, x30, [sp], #48
  40dd80:	ret
  40dd84:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40dd88:	ldr	x8, [x8, #1456]
  40dd8c:	ldr	x0, [x3, #8]
  40dd90:	mov	x22, x3
  40dd94:	mov	w20, w1
  40dd98:	ldr	x19, [x8]
  40dd9c:	bl	406750 <strlen@plt>
  40dda0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40dda4:	mov	x21, x0
  40dda8:	add	x1, x1, #0x9f1
  40ddac:	mov	w2, #0x5                   	// #5
  40ddb0:	mov	x0, xzr
  40ddb4:	bl	406dc0 <dcgettext@plt>
  40ddb8:	ldr	x4, [x22, #8]
  40ddbc:	mov	x2, x0
  40ddc0:	mov	x0, x19
  40ddc4:	mov	x1, x21
  40ddc8:	mov	w3, w20
  40ddcc:	bl	41aff0 <fatal@@Base>
  40ddd0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40ddd4:	ldr	x8, [x8, #1456]
  40ddd8:	ldr	x0, [x3, #8]
  40dddc:	mov	x21, x3
  40dde0:	ldr	x19, [x8]
  40dde4:	bl	406750 <strlen@plt>
  40dde8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ddec:	mov	x20, x0
  40ddf0:	add	x1, x1, #0xa28
  40ddf4:	mov	w2, #0x5                   	// #5
  40ddf8:	mov	x0, xzr
  40ddfc:	bl	406dc0 <dcgettext@plt>
  40de00:	ldr	x3, [x21, #8]
  40de04:	mov	x2, x0
  40de08:	mov	x0, x19
  40de0c:	mov	x1, x20
  40de10:	bl	41aff0 <fatal@@Base>

000000000040de14 <define_new_function@@Base>:
  40de14:	stp	x29, x30, [sp, #-64]!
  40de18:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  40de1c:	stp	x24, x23, [sp, #16]
  40de20:	stp	x22, x21, [sp, #32]
  40de24:	stp	x20, x19, [sp, #48]
  40de28:	mov	x22, x5
  40de2c:	mov	w23, w4
  40de30:	mov	w20, w3
  40de34:	mov	w21, w2
  40de38:	mov	x19, x1
  40de3c:	sub	x8, x1, #0x1
  40de40:	add	x10, x10, #0xcf0
  40de44:	mov	x29, sp
  40de48:	ldrb	w9, [x8, #1]!
  40de4c:	ldrh	w11, [x10, x9, lsl #1]
  40de50:	tbnz	w11, #13, 40de48 <define_new_function@@Base+0x34>
  40de54:	subs	x24, x8, x19
  40de58:	b.eq	40df34 <define_new_function@@Base+0x120>  // b.none
  40de5c:	cbnz	w9, 40dedc <define_new_function@@Base+0xc8>
  40de60:	ldrb	w8, [x19]
  40de64:	cmp	w8, #0x2e
  40de68:	b.eq	40dedc <define_new_function@@Base+0xc8>  // b.none
  40de6c:	cmp	x24, #0x100
  40de70:	b.cs	40df5c <define_new_function@@Base+0x148>  // b.hs, b.nlast
  40de74:	cmp	w21, #0x100
  40de78:	b.cs	40df94 <define_new_function@@Base+0x180>  // b.hs, b.nlast
  40de7c:	cmp	w20, #0xff
  40de80:	b.hi	40def8 <define_new_function@@Base+0xe4>  // b.pmore
  40de84:	cbz	w20, 40de90 <define_new_function@@Base+0x7c>
  40de88:	cmp	w20, w21
  40de8c:	b.cc	40def8 <define_new_function@@Base+0xe4>  // b.lo, b.ul, b.last
  40de90:	mov	w0, #0x18                  	// #24
  40de94:	bl	419e14 <xmalloc@@Base>
  40de98:	ldrb	w8, [x0, #19]
  40de9c:	mov	x1, x0
  40dea0:	strb	w24, [x0, #16]
  40dea4:	strb	w21, [x0, #17]
  40dea8:	and	w8, w8, #0xfc
  40deac:	bfxil	w8, w23, #0, #1
  40deb0:	eor	w8, w8, #0x3
  40deb4:	strb	w20, [x0, #18]
  40deb8:	strb	w8, [x1, #19]
  40debc:	stp	x22, x19, [x1]
  40dec0:	ldp	x20, x19, [sp, #48]
  40dec4:	ldp	x22, x21, [sp, #32]
  40dec8:	ldp	x24, x23, [sp, #16]
  40decc:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40ded0:	add	x0, x0, #0xb80
  40ded4:	ldp	x29, x30, [sp], #64
  40ded8:	b	410660 <hash_insert@@Base>
  40dedc:	mov	x20, x0
  40dee0:	mov	x0, x19
  40dee4:	bl	406750 <strlen@plt>
  40dee8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40deec:	mov	x21, x0
  40def0:	add	x1, x1, #0x954
  40def4:	b	40df74 <define_new_function@@Base+0x160>
  40def8:	mov	x21, x0
  40defc:	mov	x0, x19
  40df00:	bl	406750 <strlen@plt>
  40df04:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40df08:	add	x22, x0, #0x14
  40df0c:	add	x1, x1, #0x9bd
  40df10:	mov	w2, #0x5                   	// #5
  40df14:	mov	x0, xzr
  40df18:	bl	406dc0 <dcgettext@plt>
  40df1c:	mov	x2, x0
  40df20:	mov	x0, x21
  40df24:	mov	x1, x22
  40df28:	mov	w3, w20
  40df2c:	mov	x4, x19
  40df30:	bl	41aff0 <fatal@@Base>
  40df34:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40df38:	add	x1, x1, #0x940
  40df3c:	mov	w2, #0x5                   	// #5
  40df40:	mov	x19, x0
  40df44:	mov	x0, xzr
  40df48:	bl	406dc0 <dcgettext@plt>
  40df4c:	mov	x2, x0
  40df50:	mov	x0, x19
  40df54:	mov	x1, xzr
  40df58:	bl	41aff0 <fatal@@Base>
  40df5c:	mov	x20, x0
  40df60:	mov	x0, x19
  40df64:	bl	406750 <strlen@plt>
  40df68:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40df6c:	mov	x21, x0
  40df70:	add	x1, x1, #0x96e
  40df74:	mov	w2, #0x5                   	// #5
  40df78:	mov	x0, xzr
  40df7c:	bl	406dc0 <dcgettext@plt>
  40df80:	mov	x2, x0
  40df84:	mov	x0, x20
  40df88:	mov	x1, x21
  40df8c:	mov	x3, x19
  40df90:	bl	41aff0 <fatal@@Base>
  40df94:	mov	x20, x0
  40df98:	mov	x0, x19
  40df9c:	bl	406750 <strlen@plt>
  40dfa0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40dfa4:	add	x22, x0, #0x14
  40dfa8:	add	x1, x1, #0x989
  40dfac:	mov	w2, #0x5                   	// #5
  40dfb0:	mov	x0, xzr
  40dfb4:	bl	406dc0 <dcgettext@plt>
  40dfb8:	mov	x2, x0
  40dfbc:	mov	x0, x20
  40dfc0:	mov	x1, x22
  40dfc4:	mov	w3, w21
  40dfc8:	mov	x4, x19
  40dfcc:	bl	41aff0 <fatal@@Base>

000000000040dfd0 <hash_init_function_table@@Base>:
  40dfd0:	stp	x29, x30, [sp, #-32]!
  40dfd4:	str	x19, [sp, #16]
  40dfd8:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  40dfdc:	add	x19, x19, #0xb80
  40dfe0:	adrp	x2, 40e000 <hash_init_function_table@@Base+0x30>
  40dfe4:	adrp	x3, 40e000 <hash_init_function_table@@Base+0x30>
  40dfe8:	adrp	x4, 40e000 <hash_init_function_table@@Base+0x30>
  40dfec:	add	x2, x2, #0x28
  40dff0:	add	x3, x3, #0x4c
  40dff4:	add	x4, x4, #0x54
  40dff8:	mov	w1, #0x48                  	// #72
  40dffc:	mov	x0, x19
  40e000:	mov	x29, sp
  40e004:	bl	410560 <hash_init@@Base>
  40e008:	mov	x0, x19
  40e00c:	ldr	x19, [sp, #16]
  40e010:	adrp	x1, 43e000 <memcpy@GLIBC_2.17>
  40e014:	add	x1, x1, #0x5b8
  40e018:	mov	w2, #0x24                  	// #36
  40e01c:	mov	w3, #0x18                  	// #24
  40e020:	ldp	x29, x30, [sp], #32
  40e024:	b	410614 <hash_load@@Base>
  40e028:	stp	x29, x30, [sp, #-16]!
  40e02c:	ldr	x8, [x0, #8]
  40e030:	ldrb	w1, [x0, #16]
  40e034:	mov	x29, sp
  40e038:	mov	x0, x8
  40e03c:	bl	411184 <jhash@@Base>
  40e040:	mov	w0, w0
  40e044:	ldp	x29, x30, [sp], #16
  40e048:	ret
  40e04c:	mov	x0, xzr
  40e050:	ret
  40e054:	ldrb	w2, [x0, #16]
  40e058:	ldrb	w9, [x1, #16]
  40e05c:	mov	x8, x0
  40e060:	subs	w0, w2, w9
  40e064:	b.eq	40e06c <hash_init_function_table@@Base+0x9c>  // b.none
  40e068:	ret
  40e06c:	ldr	x0, [x8, #8]
  40e070:	ldr	x1, [x1, #8]
  40e074:	cmp	x0, x1
  40e078:	b.eq	40e080 <hash_init_function_table@@Base+0xb0>  // b.none
  40e07c:	b	406bd0 <memcmp@plt>
  40e080:	mov	w0, wzr
  40e084:	ret
  40e088:	stp	x29, x30, [sp, #-96]!
  40e08c:	stp	x28, x27, [sp, #16]
  40e090:	stp	x26, x25, [sp, #32]
  40e094:	stp	x24, x23, [sp, #48]
  40e098:	stp	x22, x21, [sp, #64]
  40e09c:	stp	x20, x19, [sp, #80]
  40e0a0:	mov	x29, sp
  40e0a4:	sub	sp, sp, #0x2, lsl #12
  40e0a8:	sub	sp, sp, #0x30
  40e0ac:	ldr	x8, [x1]
  40e0b0:	mov	x19, x0
  40e0b4:	sub	x0, x29, #0x10
  40e0b8:	sub	x1, x29, #0x18
  40e0bc:	stp	xzr, x8, [x29, #-24]
  40e0c0:	bl	419efc <find_next_token@@Base>
  40e0c4:	cbz	x0, 40e2e0 <hash_init_function_table@@Base+0x310>
  40e0c8:	add	x9, sp, #0x1, lsl #12
  40e0cc:	add	x8, sp, #0x10
  40e0d0:	add	x9, x9, #0x14
  40e0d4:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40e0d8:	mov	x1, x0
  40e0dc:	mov	w20, wzr
  40e0e0:	mov	w25, #0x2f                  	// #47
  40e0e4:	add	x26, x26, #0xcf0
  40e0e8:	add	x27, x8, #0x1, lsl #12
  40e0ec:	orr	x24, x8, #0x1
  40e0f0:	orr	x8, x9, #0x1
  40e0f4:	str	x8, [sp, #8]
  40e0f8:	b	40e144 <hash_init_function_table@@Base+0x174>
  40e0fc:	add	x0, sp, #0x10
  40e100:	strb	wzr, [x28]
  40e104:	bl	406750 <strlen@plt>
  40e108:	mov	x2, x0
  40e10c:	add	x1, sp, #0x10
  40e110:	mov	x0, x19
  40e114:	bl	409d08 <variable_buffer_output@@Base>
  40e118:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e11c:	mov	w2, #0x1                   	// #1
  40e120:	add	x1, x1, #0x9ec
  40e124:	mov	w20, #0x1                   	// #1
  40e128:	bl	409d08 <variable_buffer_output@@Base>
  40e12c:	mov	x19, x0
  40e130:	sub	x0, x29, #0x10
  40e134:	sub	x1, x29, #0x18
  40e138:	bl	419efc <find_next_token@@Base>
  40e13c:	mov	x1, x0
  40e140:	cbz	x0, 40e2d8 <hash_init_function_table@@Base+0x308>
  40e144:	ldur	x2, [x29, #-24]
  40e148:	cmp	x2, #0xfff
  40e14c:	b.hi	40e130 <hash_init_function_table@@Base+0x160>  // b.pmore
  40e150:	add	x0, sp, #0x1, lsl #12
  40e154:	add	x0, x0, #0x14
  40e158:	bl	406e20 <strncpy@plt>
  40e15c:	ldur	x8, [x29, #-24]
  40e160:	add	x9, sp, #0x1, lsl #12
  40e164:	add	x9, x9, #0x14
  40e168:	strb	wzr, [x9, x8]
  40e16c:	add	x8, sp, #0x15
  40e170:	ldrb	w8, [x8, #4095]
  40e174:	cbz	w8, 40e130 <hash_init_function_table@@Base+0x160>
  40e178:	cmp	w8, #0x2f
  40e17c:	b.ne	40e198 <hash_init_function_table@@Base+0x1c8>  // b.any
  40e180:	ldr	x23, [sp, #8]
  40e184:	mov	x28, x24
  40e188:	strh	w25, [sp, #16]
  40e18c:	ldrb	w8, [x23]
  40e190:	cbnz	w8, 40e1f0 <hash_init_function_table@@Base+0x220>
  40e194:	b	40e1c8 <hash_init_function_table@@Base+0x1f8>
  40e198:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40e19c:	ldr	x1, [x8, #4088]
  40e1a0:	cbz	x1, 40e130 <hash_init_function_table@@Base+0x160>
  40e1a4:	add	x23, sp, #0x1, lsl #12
  40e1a8:	add	x0, sp, #0x10
  40e1ac:	bl	406d00 <strcpy@plt>
  40e1b0:	add	x0, sp, #0x10
  40e1b4:	bl	406750 <strlen@plt>
  40e1b8:	add	x8, sp, #0x10
  40e1bc:	add	x28, x8, x0
  40e1c0:	ldrb	w8, [x23, #20]!
  40e1c4:	cbnz	w8, 40e1f0 <hash_init_function_table@@Base+0x220>
  40e1c8:	cmp	x28, x24
  40e1cc:	b.ls	40e0fc <hash_init_function_table@@Base+0x12c>  // b.plast
  40e1d0:	mov	x8, x28
  40e1d4:	ldrb	w9, [x8, #-1]!
  40e1d8:	ldrsh	w9, [x26, x9, lsl #1]
  40e1dc:	cmp	w9, #0x0
  40e1e0:	csel	x28, x8, x28, lt  // lt = tstop
  40e1e4:	b	40e0fc <hash_init_function_table@@Base+0x12c>
  40e1e8:	tst	w8, #0xff
  40e1ec:	b.eq	40e1c8 <hash_init_function_table@@Base+0x1f8>  // b.none
  40e1f0:	and	x9, x8, #0xff
  40e1f4:	ldrsh	w10, [x26, x9, lsl #1]
  40e1f8:	mov	w9, w8
  40e1fc:	mov	x1, x23
  40e200:	tbnz	w10, #31, 40e22c <hash_init_function_table@@Base+0x25c>
  40e204:	tst	w10, #0xffff8001
  40e208:	mov	w8, w9
  40e20c:	b.eq	40e248 <hash_init_function_table@@Base+0x278>  // b.none
  40e210:	sub	x22, x23, x1
  40e214:	cmp	x22, #0x1
  40e218:	b.eq	40e25c <hash_init_function_table@@Base+0x28c>  // b.none
  40e21c:	cmp	x22, #0x2
  40e220:	b.eq	40e26c <hash_init_function_table@@Base+0x29c>  // b.none
  40e224:	cbnz	x22, 40e2a0 <hash_init_function_table@@Base+0x2d0>
  40e228:	b	40e1c8 <hash_init_function_table@@Base+0x1f8>
  40e22c:	ldrb	w9, [x1, #1]!
  40e230:	ldrsh	w10, [x26, x9, lsl #1]
  40e234:	tbnz	w10, #31, 40e22c <hash_init_function_table@@Base+0x25c>
  40e238:	mov	x23, x1
  40e23c:	tst	w10, #0xffff8001
  40e240:	mov	w8, w9
  40e244:	b.ne	40e210 <hash_init_function_table@@Base+0x240>  // b.any
  40e248:	ldrb	w8, [x23, #1]!
  40e24c:	ldrh	w10, [x26, x8, lsl #1]
  40e250:	tst	w10, #0xffff8001
  40e254:	b.eq	40e248 <hash_init_function_table@@Base+0x278>  // b.none
  40e258:	b	40e210 <hash_init_function_table@@Base+0x240>
  40e25c:	and	w9, w9, #0xff
  40e260:	cmp	w9, #0x2e
  40e264:	b.eq	40e1e8 <hash_init_function_table@@Base+0x218>  // b.none
  40e268:	b	40e2a0 <hash_init_function_table@@Base+0x2d0>
  40e26c:	and	w9, w9, #0xff
  40e270:	cmp	w9, #0x2e
  40e274:	b.ne	40e2a0 <hash_init_function_table@@Base+0x2d0>  // b.any
  40e278:	ldrb	w9, [x1, #1]
  40e27c:	cmp	w9, #0x2e
  40e280:	b.ne	40e2a0 <hash_init_function_table@@Base+0x2d0>  // b.any
  40e284:	cmp	x28, x24
  40e288:	b.ls	40e1e8 <hash_init_function_table@@Base+0x218>  // b.plast
  40e28c:	ldurb	w9, [x28, #-2]
  40e290:	sub	x28, x28, #0x1
  40e294:	ldrsh	w9, [x26, x9, lsl #1]
  40e298:	tbz	w9, #31, 40e28c <hash_init_function_table@@Base+0x2bc>
  40e29c:	b	40e1e8 <hash_init_function_table@@Base+0x218>
  40e2a0:	ldurb	w8, [x28, #-1]
  40e2a4:	ldrsh	w8, [x26, x8, lsl #1]
  40e2a8:	tbnz	w8, #31, 40e2b0 <hash_init_function_table@@Base+0x2e0>
  40e2ac:	strb	w25, [x28], #1
  40e2b0:	add	x21, x28, x22
  40e2b4:	cmp	x21, x27
  40e2b8:	b.cs	40e130 <hash_init_function_table@@Base+0x160>  // b.hs, b.nlast
  40e2bc:	mov	x0, x28
  40e2c0:	mov	x2, x22
  40e2c4:	bl	406710 <memcpy@plt>
  40e2c8:	ldrb	w8, [x23]
  40e2cc:	strb	wzr, [x28, x22]
  40e2d0:	mov	x28, x21
  40e2d4:	b	40e1e8 <hash_init_function_table@@Base+0x218>
  40e2d8:	cbz	w20, 40e2e0 <hash_init_function_table@@Base+0x310>
  40e2dc:	sub	x19, x19, #0x1
  40e2e0:	mov	x0, x19
  40e2e4:	add	sp, sp, #0x2, lsl #12
  40e2e8:	add	sp, sp, #0x30
  40e2ec:	ldp	x20, x19, [sp, #80]
  40e2f0:	ldp	x22, x21, [sp, #64]
  40e2f4:	ldp	x24, x23, [sp, #48]
  40e2f8:	ldp	x26, x25, [sp, #32]
  40e2fc:	ldp	x28, x27, [sp, #16]
  40e300:	ldp	x29, x30, [sp], #96
  40e304:	ret
  40e308:	sub	sp, sp, #0x50
  40e30c:	stp	x29, x30, [sp, #16]
  40e310:	stp	x22, x21, [sp, #48]
  40e314:	stp	x20, x19, [sp, #64]
  40e318:	ldr	x8, [x1]
  40e31c:	mov	x21, x0
  40e320:	str	x23, [sp, #32]
  40e324:	add	x29, sp, #0x10
  40e328:	mov	x0, x8
  40e32c:	mov	x20, x2
  40e330:	mov	x19, x1
  40e334:	bl	406750 <strlen@plt>
  40e338:	ldr	x8, [x19, #8]
  40e33c:	add	x1, sp, #0x8
  40e340:	str	x8, [x29, #24]
  40e344:	ldrb	w23, [x20, #3]
  40e348:	mov	x20, x0
  40e34c:	add	x0, x29, #0x18
  40e350:	bl	419efc <find_next_token@@Base>
  40e354:	cbz	x0, 40e3fc <hash_init_function_table@@Base+0x42c>
  40e358:	mov	x22, x0
  40e35c:	cmp	w23, #0x70
  40e360:	b.ne	40e3b0 <hash_init_function_table@@Base+0x3e0>  // b.any
  40e364:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e368:	add	x23, x23, #0x9ec
  40e36c:	ldr	x1, [x19]
  40e370:	mov	x0, x21
  40e374:	mov	x2, x20
  40e378:	bl	409d08 <variable_buffer_output@@Base>
  40e37c:	ldr	x2, [sp, #8]
  40e380:	mov	x1, x22
  40e384:	bl	409d08 <variable_buffer_output@@Base>
  40e388:	mov	w2, #0x1                   	// #1
  40e38c:	mov	x1, x23
  40e390:	bl	409d08 <variable_buffer_output@@Base>
  40e394:	mov	x21, x0
  40e398:	add	x0, x29, #0x18
  40e39c:	add	x1, sp, #0x8
  40e3a0:	bl	419efc <find_next_token@@Base>
  40e3a4:	mov	x22, x0
  40e3a8:	cbnz	x0, 40e36c <hash_init_function_table@@Base+0x39c>
  40e3ac:	b	40e3f8 <hash_init_function_table@@Base+0x428>
  40e3b0:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e3b4:	add	x23, x23, #0x9ec
  40e3b8:	ldr	x2, [sp, #8]
  40e3bc:	mov	x0, x21
  40e3c0:	mov	x1, x22
  40e3c4:	bl	409d08 <variable_buffer_output@@Base>
  40e3c8:	ldr	x1, [x19]
  40e3cc:	mov	x2, x20
  40e3d0:	bl	409d08 <variable_buffer_output@@Base>
  40e3d4:	mov	w2, #0x1                   	// #1
  40e3d8:	mov	x1, x23
  40e3dc:	bl	409d08 <variable_buffer_output@@Base>
  40e3e0:	mov	x21, x0
  40e3e4:	add	x0, x29, #0x18
  40e3e8:	add	x1, sp, #0x8
  40e3ec:	bl	419efc <find_next_token@@Base>
  40e3f0:	mov	x22, x0
  40e3f4:	cbnz	x0, 40e3b8 <hash_init_function_table@@Base+0x3e8>
  40e3f8:	sub	x21, x21, #0x1
  40e3fc:	mov	x0, x21
  40e400:	ldp	x20, x19, [sp, #64]
  40e404:	ldp	x22, x21, [sp, #48]
  40e408:	ldr	x23, [sp, #32]
  40e40c:	ldp	x29, x30, [sp, #16]
  40e410:	add	sp, sp, #0x50
  40e414:	ret
  40e418:	sub	sp, sp, #0x50
  40e41c:	stp	x29, x30, [sp, #16]
  40e420:	stp	x22, x21, [sp, #48]
  40e424:	stp	x20, x19, [sp, #64]
  40e428:	ldr	x8, [x1]
  40e42c:	add	x29, sp, #0x10
  40e430:	str	xzr, [sp, #8]
  40e434:	mov	x19, x0
  40e438:	str	x8, [x29, #24]
  40e43c:	ldrb	w20, [x2]
  40e440:	mov	w8, #0x8001                	// #32769
  40e444:	mov	w9, #0x8201                	// #33281
  40e448:	add	x0, x29, #0x18
  40e44c:	cmp	w20, #0x62
  40e450:	add	x1, sp, #0x8
  40e454:	str	x23, [sp, #32]
  40e458:	csel	w22, w9, w8, eq  // eq = none
  40e45c:	bl	419efc <find_next_token@@Base>
  40e460:	cbz	x0, 40e56c <hash_init_function_table@@Base+0x59c>
  40e464:	mov	x1, x0
  40e468:	cmp	w20, #0x62
  40e46c:	b.ne	40e4e4 <hash_init_function_table@@Base+0x514>  // b.any
  40e470:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e474:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  40e478:	add	x20, x20, #0x9ec
  40e47c:	add	x21, x21, #0xcf0
  40e480:	b	40e4b0 <hash_init_function_table@@Base+0x4e0>
  40e484:	mov	x0, x19
  40e488:	bl	409d08 <variable_buffer_output@@Base>
  40e48c:	mov	w2, #0x1                   	// #1
  40e490:	mov	x1, x20
  40e494:	bl	409d08 <variable_buffer_output@@Base>
  40e498:	mov	x19, x0
  40e49c:	add	x0, x29, #0x18
  40e4a0:	add	x1, sp, #0x8
  40e4a4:	bl	419efc <find_next_token@@Base>
  40e4a8:	mov	x1, x0
  40e4ac:	cbz	x0, 40e568 <hash_init_function_table@@Base+0x598>
  40e4b0:	ldr	x2, [sp, #8]
  40e4b4:	add	x8, x1, x2
  40e4b8:	sub	x8, x8, #0x1
  40e4bc:	cmp	x8, x1
  40e4c0:	b.cc	40e484 <hash_init_function_table@@Base+0x4b4>  // b.lo, b.ul, b.last
  40e4c4:	ldrb	w9, [x8]
  40e4c8:	ldrh	w10, [x21, x9, lsl #1]
  40e4cc:	tst	w22, w10
  40e4d0:	b.eq	40e4b8 <hash_init_function_table@@Base+0x4e8>  // b.none
  40e4d4:	cmp	w9, #0x2e
  40e4d8:	b.ne	40e484 <hash_init_function_table@@Base+0x4b4>  // b.any
  40e4dc:	sub	x2, x8, x1
  40e4e0:	b	40e484 <hash_init_function_table@@Base+0x4b4>
  40e4e4:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x1680>
  40e4e8:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e4ec:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  40e4f0:	add	x20, x20, #0x326
  40e4f4:	add	x21, x21, #0x9ec
  40e4f8:	add	x23, x23, #0xcf0
  40e4fc:	b	40e534 <hash_init_function_table@@Base+0x564>
  40e500:	mov	w2, #0x2                   	// #2
  40e504:	mov	x0, x19
  40e508:	mov	x1, x20
  40e50c:	bl	409d08 <variable_buffer_output@@Base>
  40e510:	mov	w2, #0x1                   	// #1
  40e514:	mov	x1, x21
  40e518:	bl	409d08 <variable_buffer_output@@Base>
  40e51c:	mov	x19, x0
  40e520:	add	x0, x29, #0x18
  40e524:	add	x1, sp, #0x8
  40e528:	bl	419efc <find_next_token@@Base>
  40e52c:	mov	x1, x0
  40e530:	cbz	x0, 40e568 <hash_init_function_table@@Base+0x598>
  40e534:	ldr	x8, [sp, #8]
  40e538:	add	x8, x1, x8
  40e53c:	sub	x8, x8, #0x1
  40e540:	cmp	x8, x1
  40e544:	b.cc	40e500 <hash_init_function_table@@Base+0x530>  // b.lo, b.ul, b.last
  40e548:	ldrb	w9, [x8]
  40e54c:	ldrh	w9, [x23, x9, lsl #1]
  40e550:	tst	w22, w9
  40e554:	b.eq	40e53c <hash_init_function_table@@Base+0x56c>  // b.none
  40e558:	sub	x8, x8, x1
  40e55c:	add	x2, x8, #0x1
  40e560:	mov	x0, x19
  40e564:	b	40e50c <hash_init_function_table@@Base+0x53c>
  40e568:	sub	x19, x19, #0x1
  40e56c:	mov	x0, x19
  40e570:	ldp	x20, x19, [sp, #64]
  40e574:	ldp	x22, x21, [sp, #48]
  40e578:	ldr	x23, [sp, #32]
  40e57c:	ldp	x29, x30, [sp, #16]
  40e580:	add	sp, sp, #0x50
  40e584:	ret
  40e588:	sub	sp, sp, #0x60
  40e58c:	stp	x29, x30, [sp, #16]
  40e590:	stp	x24, x23, [sp, #48]
  40e594:	stp	x22, x21, [sp, #64]
  40e598:	stp	x20, x19, [sp, #80]
  40e59c:	ldr	x8, [x1]
  40e5a0:	add	x29, sp, #0x10
  40e5a4:	str	xzr, [sp, #8]
  40e5a8:	mov	x19, x0
  40e5ac:	str	x8, [x29, #24]
  40e5b0:	ldrb	w21, [x2]
  40e5b4:	mov	w8, #0x8000                	// #32768
  40e5b8:	mov	w9, #0x8200                	// #33280
  40e5bc:	add	x0, x29, #0x18
  40e5c0:	cmp	w21, #0x73
  40e5c4:	add	x1, sp, #0x8
  40e5c8:	str	x25, [sp, #32]
  40e5cc:	csel	w23, w9, w8, eq  // eq = none
  40e5d0:	bl	419efc <find_next_token@@Base>
  40e5d4:	cbz	x0, 40e714 <hash_init_function_table@@Base+0x744>
  40e5d8:	mov	x20, x0
  40e5dc:	cmp	w21, #0x73
  40e5e0:	b.ne	40e690 <hash_init_function_table@@Base+0x6c0>  // b.any
  40e5e4:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e5e8:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  40e5ec:	mov	w25, wzr
  40e5f0:	add	x21, x21, #0x9ec
  40e5f4:	add	x24, x24, #0xcf0
  40e5f8:	b	40e610 <hash_init_function_table@@Base+0x640>
  40e5fc:	add	x0, x29, #0x18
  40e600:	add	x1, sp, #0x8
  40e604:	bl	419efc <find_next_token@@Base>
  40e608:	mov	x20, x0
  40e60c:	cbz	x0, 40e70c <hash_init_function_table@@Base+0x73c>
  40e610:	ldr	x8, [sp, #8]
  40e614:	add	x9, x20, x8
  40e618:	sub	x22, x9, #0x1
  40e61c:	cmp	x22, x20
  40e620:	b.cc	40e640 <hash_init_function_table@@Base+0x670>  // b.lo, b.ul, b.last
  40e624:	ldrb	w9, [x22]
  40e628:	ldrh	w10, [x24, x9, lsl #1]
  40e62c:	tst	w23, w10
  40e630:	b.ne	40e664 <hash_init_function_table@@Base+0x694>  // b.any
  40e634:	sub	x22, x22, #0x1
  40e638:	cmp	x22, x20
  40e63c:	b.cs	40e624 <hash_init_function_table@@Base+0x654>  // b.hs, b.nlast
  40e640:	cmp	x22, x20
  40e644:	b.cc	40e5fc <hash_init_function_table@@Base+0x62c>  // b.lo, b.ul, b.last
  40e648:	mov	w2, #0x1                   	// #1
  40e64c:	mov	x0, x19
  40e650:	mov	x1, x21
  40e654:	mov	w25, #0x1                   	// #1
  40e658:	bl	409d08 <variable_buffer_output@@Base>
  40e65c:	mov	x19, x0
  40e660:	b	40e5fc <hash_init_function_table@@Base+0x62c>
  40e664:	cmp	w9, #0x2e
  40e668:	b.ne	40e5fc <hash_init_function_table@@Base+0x62c>  // b.any
  40e66c:	add	x8, x8, x20
  40e670:	sub	x2, x8, x22
  40e674:	mov	x0, x19
  40e678:	mov	x1, x22
  40e67c:	bl	409d08 <variable_buffer_output@@Base>
  40e680:	mov	x19, x0
  40e684:	cmp	x22, x20
  40e688:	b.cc	40e5fc <hash_init_function_table@@Base+0x62c>  // b.lo, b.ul, b.last
  40e68c:	b	40e648 <hash_init_function_table@@Base+0x678>
  40e690:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e694:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  40e698:	add	x21, x21, #0x9ec
  40e69c:	add	x22, x22, #0xcf0
  40e6a0:	b	40e6d4 <hash_init_function_table@@Base+0x704>
  40e6a4:	mov	x0, x19
  40e6a8:	mov	x1, x20
  40e6ac:	bl	409d08 <variable_buffer_output@@Base>
  40e6b0:	mov	w2, #0x1                   	// #1
  40e6b4:	mov	x1, x21
  40e6b8:	bl	409d08 <variable_buffer_output@@Base>
  40e6bc:	mov	x19, x0
  40e6c0:	add	x0, x29, #0x18
  40e6c4:	add	x1, sp, #0x8
  40e6c8:	bl	419efc <find_next_token@@Base>
  40e6cc:	mov	x20, x0
  40e6d0:	cbz	x0, 40e710 <hash_init_function_table@@Base+0x740>
  40e6d4:	ldr	x2, [sp, #8]
  40e6d8:	add	x8, x20, x2
  40e6dc:	sub	x8, x8, #0x1
  40e6e0:	cmp	x8, x20
  40e6e4:	b.cc	40e6a4 <hash_init_function_table@@Base+0x6d4>  // b.lo, b.ul, b.last
  40e6e8:	ldrb	w9, [x8]
  40e6ec:	ldrh	w9, [x22, x9, lsl #1]
  40e6f0:	tst	w23, w9
  40e6f4:	b.eq	40e6dc <hash_init_function_table@@Base+0x70c>  // b.none
  40e6f8:	add	x1, x8, #0x1
  40e6fc:	add	x8, x2, x20
  40e700:	sub	x2, x8, x1
  40e704:	mov	x0, x19
  40e708:	b	40e6ac <hash_init_function_table@@Base+0x6dc>
  40e70c:	cbz	w25, 40e714 <hash_init_function_table@@Base+0x744>
  40e710:	sub	x19, x19, #0x1
  40e714:	mov	x0, x19
  40e718:	ldp	x20, x19, [sp, #80]
  40e71c:	ldp	x22, x21, [sp, #64]
  40e720:	ldp	x24, x23, [sp, #48]
  40e724:	ldr	x25, [sp, #32]
  40e728:	ldp	x29, x30, [sp, #16]
  40e72c:	add	sp, sp, #0x60
  40e730:	ret
  40e734:	stp	x29, x30, [sp, #-64]!
  40e738:	stp	x22, x21, [sp, #32]
  40e73c:	stp	x20, x19, [sp, #48]
  40e740:	ldr	x20, [x1]
  40e744:	str	x23, [sp, #16]
  40e748:	ldp	x21, x19, [x1, #8]
  40e74c:	mov	x22, x0
  40e750:	mov	x0, x20
  40e754:	mov	x29, sp
  40e758:	bl	406750 <strlen@plt>
  40e75c:	mov	x23, x0
  40e760:	mov	x0, x21
  40e764:	bl	406750 <strlen@plt>
  40e768:	mov	x5, x0
  40e76c:	mov	x0, x22
  40e770:	mov	x1, x19
  40e774:	mov	x2, x20
  40e778:	mov	x3, x21
  40e77c:	mov	x4, x23
  40e780:	ldp	x20, x19, [sp, #48]
  40e784:	ldp	x22, x21, [sp, #32]
  40e788:	ldr	x23, [sp, #16]
  40e78c:	mov	w6, wzr
  40e790:	ldp	x29, x30, [sp], #64
  40e794:	b	40cd48 <subst_expand@@Base>
  40e798:	stp	x29, x30, [sp, #-80]!
  40e79c:	str	x25, [sp, #16]
  40e7a0:	stp	x24, x23, [sp, #32]
  40e7a4:	stp	x22, x21, [sp, #48]
  40e7a8:	stp	x20, x19, [sp, #64]
  40e7ac:	mov	x29, sp
  40e7b0:	sub	sp, sp, #0xa0
  40e7b4:	ldr	x8, [x1]
  40e7b8:	ldrb	w21, [x2, #6]
  40e7bc:	mov	x19, x0
  40e7c0:	sub	x0, x29, #0x68
  40e7c4:	stur	x8, [x29, #-104]
  40e7c8:	ldr	x8, [x1, #8]
  40e7cc:	sub	x1, x29, #0x78
  40e7d0:	stur	x8, [x29, #-112]
  40e7d4:	bl	419efc <find_next_token@@Base>
  40e7d8:	mov	w20, wzr
  40e7dc:	cbz	x0, 40e84c <hash_init_function_table@@Base+0x87c>
  40e7e0:	sub	x8, x29, #0x8
  40e7e4:	b	40e828 <hash_init_function_table@@Base+0x858>
  40e7e8:	ldur	x8, [x29, #-120]
  40e7ec:	str	x0, [x22, #8]
  40e7f0:	strb	wzr, [x0, x8]
  40e7f4:	bl	41d7d0 <find_percent@@Base>
  40e7f8:	ldr	x8, [x22, #8]
  40e7fc:	str	x0, [x22, #16]
  40e800:	cmp	x0, #0x0
  40e804:	cinc	w20, w20, eq  // eq = none
  40e808:	mov	x0, x8
  40e80c:	bl	406750 <strlen@plt>
  40e810:	str	x0, [x22, #24]
  40e814:	sub	x0, x29, #0x68
  40e818:	sub	x1, x29, #0x78
  40e81c:	bl	419efc <find_next_token@@Base>
  40e820:	mov	x8, x22
  40e824:	cbz	x0, 40e850 <hash_init_function_table@@Base+0x880>
  40e828:	sub	x22, sp, #0x20
  40e82c:	mov	sp, x22
  40e830:	ldur	x9, [x29, #-104]
  40e834:	str	x22, [x8]
  40e838:	ldrb	w8, [x9]
  40e83c:	cbz	w8, 40e7e8 <hash_init_function_table@@Base+0x818>
  40e840:	add	x8, x9, #0x1
  40e844:	stur	x8, [x29, #-104]
  40e848:	b	40e7e8 <hash_init_function_table@@Base+0x818>
  40e84c:	sub	x22, x29, #0x8
  40e850:	sub	x0, x29, #0x70
  40e854:	sub	x1, x29, #0x78
  40e858:	str	xzr, [x22]
  40e85c:	bl	419efc <find_next_token@@Base>
  40e860:	mov	w23, wzr
  40e864:	cbz	x0, 40e8c4 <hash_init_function_table@@Base+0x8f4>
  40e868:	add	x8, x29, #0x18
  40e86c:	b	40e8a0 <hash_init_function_table@@Base+0x8d0>
  40e870:	ldur	x8, [x29, #-120]
  40e874:	sub	x1, x29, #0x78
  40e878:	add	w23, w23, #0x1
  40e87c:	strb	wzr, [x0, x8]
  40e880:	ldur	x8, [x29, #-120]
  40e884:	stp	xzr, x0, [x24, #8]
  40e888:	sub	x0, x29, #0x70
  40e88c:	str	wzr, [x24, #32]
  40e890:	str	x8, [x24, #24]
  40e894:	bl	419efc <find_next_token@@Base>
  40e898:	mov	x8, x24
  40e89c:	cbz	x0, 40e8c8 <hash_init_function_table@@Base+0x8f8>
  40e8a0:	sub	x24, sp, #0x30
  40e8a4:	mov	sp, x24
  40e8a8:	ldur	x9, [x29, #-112]
  40e8ac:	str	x24, [x8]
  40e8b0:	ldrb	w8, [x9]
  40e8b4:	cbz	w8, 40e870 <hash_init_function_table@@Base+0x8a0>
  40e8b8:	add	x8, x9, #0x1
  40e8bc:	stur	x8, [x29, #-112]
  40e8c0:	b	40e870 <hash_init_function_table@@Base+0x8a0>
  40e8c4:	add	x24, x29, #0x18
  40e8c8:	cmp	w20, #0x1
  40e8cc:	mul	w8, w23, w20
  40e8d0:	cset	w9, hi  // hi = pmore
  40e8d4:	cmp	w8, #0x9
  40e8d8:	cset	w8, hi  // hi = pmore
  40e8dc:	and	w22, w9, w8
  40e8e0:	cmp	w22, #0x1
  40e8e4:	str	xzr, [x24]
  40e8e8:	b.ne	40e918 <hash_init_function_table@@Base+0x948>  // b.any
  40e8ec:	adrp	x2, 410000 <hash_init_function_table@@Base+0x2030>
  40e8f0:	adrp	x3, 410000 <hash_init_function_table@@Base+0x2030>
  40e8f4:	adrp	x4, 410000 <hash_init_function_table@@Base+0x2030>
  40e8f8:	mov	w1, w23
  40e8fc:	add	x2, x2, #0x41c
  40e900:	add	x3, x3, #0x438
  40e904:	add	x4, x4, #0x440
  40e908:	sub	x0, x29, #0x60
  40e90c:	bl	410560 <hash_init@@Base>
  40e910:	ldr	x20, [x29, #24]
  40e914:	cbnz	x20, 40ea2c <hash_init_function_table@@Base+0xa5c>
  40e918:	cbz	w23, 40eae0 <hash_init_function_table@@Base+0xb10>
  40e91c:	ldur	x24, [x29, #-8]
  40e920:	ldr	x23, [x29, #24]
  40e924:	cbnz	x24, 40e948 <hash_init_function_table@@Base+0x978>
  40e928:	cbz	x23, 40eae0 <hash_init_function_table@@Base+0xb10>
  40e92c:	cbz	w21, 40ea88 <hash_init_function_table@@Base+0xab8>
  40e930:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40e934:	mov	w21, wzr
  40e938:	add	x20, x20, #0x9ec
  40e93c:	b	40ea4c <hash_init_function_table@@Base+0xa7c>
  40e940:	ldr	x24, [x24]
  40e944:	cbz	x24, 40e928 <hash_init_function_table@@Base+0x958>
  40e948:	ldr	x1, [x24, #16]
  40e94c:	cbz	x1, 40e998 <hash_init_function_table@@Base+0x9c8>
  40e950:	cbz	x23, 40e940 <hash_init_function_table@@Base+0x970>
  40e954:	ldr	x0, [x24, #8]
  40e958:	ldr	x2, [x23, #16]
  40e95c:	bl	40d384 <pattern_matches@@Base>
  40e960:	ldr	w8, [x23, #32]
  40e964:	ldr	x20, [x23]
  40e968:	orr	w8, w8, w0
  40e96c:	str	w8, [x23, #32]
  40e970:	cbz	x20, 40e940 <hash_init_function_table@@Base+0x970>
  40e974:	ldp	x0, x1, [x24, #8]
  40e978:	ldr	x2, [x20, #16]
  40e97c:	bl	40d384 <pattern_matches@@Base>
  40e980:	ldr	w8, [x20, #32]
  40e984:	orr	w8, w8, w0
  40e988:	str	w8, [x20, #32]
  40e98c:	ldr	x20, [x20]
  40e990:	cbnz	x20, 40e974 <hash_init_function_table@@Base+0x9a4>
  40e994:	b	40e940 <hash_init_function_table@@Base+0x970>
  40e998:	tbz	w22, #0, 40e9d4 <hash_init_function_table@@Base+0xa04>
  40e99c:	ldr	x8, [x24, #8]
  40e9a0:	sub	x0, x29, #0x60
  40e9a4:	sub	x1, x29, #0xa0
  40e9a8:	stur	x8, [x29, #-144]
  40e9ac:	ldr	x8, [x24, #24]
  40e9b0:	stur	x8, [x29, #-136]
  40e9b4:	bl	410888 <hash_find_item@@Base>
  40e9b8:	cbz	x0, 40e940 <hash_init_function_table@@Base+0x970>
  40e9bc:	ldr	w8, [x0, #32]
  40e9c0:	orr	w8, w8, #0x1
  40e9c4:	str	w8, [x0, #32]
  40e9c8:	ldr	x0, [x0, #8]
  40e9cc:	cbnz	x0, 40e9bc <hash_init_function_table@@Base+0x9ec>
  40e9d0:	b	40e940 <hash_init_function_table@@Base+0x970>
  40e9d4:	cbz	x23, 40e940 <hash_init_function_table@@Base+0x970>
  40e9d8:	ldr	x20, [x24, #24]
  40e9dc:	mov	x25, x23
  40e9e0:	b	40ea10 <hash_init_function_table@@Base+0xa40>
  40e9e4:	ldr	x0, [x24, #8]
  40e9e8:	ldr	x1, [x25, #16]
  40e9ec:	mov	x2, x20
  40e9f0:	bl	4069f0 <strncmp@plt>
  40e9f4:	cmp	w0, #0x0
  40e9f8:	cset	w8, eq  // eq = none
  40e9fc:	ldr	w9, [x25, #32]
  40ea00:	orr	w8, w9, w8
  40ea04:	str	w8, [x25, #32]
  40ea08:	ldr	x25, [x25]
  40ea0c:	cbz	x25, 40e940 <hash_init_function_table@@Base+0x970>
  40ea10:	ldr	x8, [x25, #24]
  40ea14:	cmp	x8, x20
  40ea18:	b.eq	40e9e4 <hash_init_function_table@@Base+0xa14>  // b.none
  40ea1c:	mov	w8, wzr
  40ea20:	b	40e9fc <hash_init_function_table@@Base+0xa2c>
  40ea24:	ldr	x20, [x20]
  40ea28:	cbz	x20, 40e918 <hash_init_function_table@@Base+0x948>
  40ea2c:	sub	x0, x29, #0x60
  40ea30:	mov	x1, x20
  40ea34:	bl	410660 <hash_insert@@Base>
  40ea38:	cbz	x0, 40ea24 <hash_init_function_table@@Base+0xa54>
  40ea3c:	str	x0, [x20, #8]
  40ea40:	b	40ea24 <hash_init_function_table@@Base+0xa54>
  40ea44:	ldr	x23, [x23]
  40ea48:	cbz	x23, 40ead8 <hash_init_function_table@@Base+0xb08>
  40ea4c:	ldr	w8, [x23, #32]
  40ea50:	cbnz	w8, 40ea44 <hash_init_function_table@@Base+0xa74>
  40ea54:	ldr	x21, [x23, #16]
  40ea58:	mov	x0, x21
  40ea5c:	bl	406750 <strlen@plt>
  40ea60:	mov	x2, x0
  40ea64:	mov	x0, x19
  40ea68:	mov	x1, x21
  40ea6c:	bl	409d08 <variable_buffer_output@@Base>
  40ea70:	mov	w2, #0x1                   	// #1
  40ea74:	mov	x1, x20
  40ea78:	mov	w21, #0x1                   	// #1
  40ea7c:	bl	409d08 <variable_buffer_output@@Base>
  40ea80:	mov	x19, x0
  40ea84:	b	40ea44 <hash_init_function_table@@Base+0xa74>
  40ea88:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40ea8c:	add	x20, x20, #0x9ec
  40ea90:	b	40ea9c <hash_init_function_table@@Base+0xacc>
  40ea94:	ldr	x23, [x23]
  40ea98:	cbz	x23, 40ead8 <hash_init_function_table@@Base+0xb08>
  40ea9c:	ldr	w8, [x23, #32]
  40eaa0:	cbz	w8, 40ea94 <hash_init_function_table@@Base+0xac4>
  40eaa4:	ldr	x21, [x23, #16]
  40eaa8:	mov	x0, x21
  40eaac:	bl	406750 <strlen@plt>
  40eab0:	mov	x2, x0
  40eab4:	mov	x0, x19
  40eab8:	mov	x1, x21
  40eabc:	bl	409d08 <variable_buffer_output@@Base>
  40eac0:	mov	w2, #0x1                   	// #1
  40eac4:	mov	x1, x20
  40eac8:	mov	w21, #0x1                   	// #1
  40eacc:	bl	409d08 <variable_buffer_output@@Base>
  40ead0:	mov	x19, x0
  40ead4:	b	40ea94 <hash_init_function_table@@Base+0xac4>
  40ead8:	cbz	w21, 40eae0 <hash_init_function_table@@Base+0xb10>
  40eadc:	sub	x19, x19, #0x1
  40eae0:	cbz	w22, 40eaf0 <hash_init_function_table@@Base+0xb20>
  40eae4:	sub	x0, x29, #0x60
  40eae8:	mov	w1, wzr
  40eaec:	bl	410e88 <hash_free@@Base>
  40eaf0:	mov	x0, x19
  40eaf4:	mov	sp, x29
  40eaf8:	ldp	x20, x19, [sp, #64]
  40eafc:	ldp	x22, x21, [sp, #48]
  40eb00:	ldp	x24, x23, [sp, #32]
  40eb04:	ldr	x25, [sp, #16]
  40eb08:	ldp	x29, x30, [sp], #80
  40eb0c:	ret
  40eb10:	stp	x29, x30, [sp, #-32]!
  40eb14:	stp	x20, x19, [sp, #16]
  40eb18:	ldp	x19, x8, [x1]
  40eb1c:	mov	x20, x0
  40eb20:	mov	x29, sp
  40eb24:	mov	x0, x8
  40eb28:	mov	x1, x19
  40eb2c:	bl	406db0 <strstr@plt>
  40eb30:	cbz	x0, 40eb54 <hash_init_function_table@@Base+0xb84>
  40eb34:	mov	x0, x19
  40eb38:	bl	406750 <strlen@plt>
  40eb3c:	mov	x2, x0
  40eb40:	mov	x0, x20
  40eb44:	mov	x1, x19
  40eb48:	ldp	x20, x19, [sp, #16]
  40eb4c:	ldp	x29, x30, [sp], #32
  40eb50:	b	409d08 <variable_buffer_output@@Base>
  40eb54:	mov	x0, x20
  40eb58:	ldp	x20, x19, [sp, #16]
  40eb5c:	ldp	x29, x30, [sp], #32
  40eb60:	ret
  40eb64:	sub	sp, sp, #0x30
  40eb68:	stp	x29, x30, [sp, #16]
  40eb6c:	ldr	x8, [x1]
  40eb70:	add	x29, sp, #0x10
  40eb74:	str	x19, [sp, #32]
  40eb78:	mov	x19, x0
  40eb7c:	add	x0, sp, #0x8
  40eb80:	add	x1, x29, #0x18
  40eb84:	str	x8, [sp, #8]
  40eb88:	bl	419efc <find_next_token@@Base>
  40eb8c:	cbz	x0, 40eba4 <hash_init_function_table@@Base+0xbd4>
  40eb90:	ldr	x2, [x29, #24]
  40eb94:	mov	x1, x0
  40eb98:	mov	x0, x19
  40eb9c:	bl	409d08 <variable_buffer_output@@Base>
  40eba0:	mov	x19, x0
  40eba4:	mov	x0, x19
  40eba8:	ldr	x19, [sp, #32]
  40ebac:	ldp	x29, x30, [sp, #16]
  40ebb0:	add	sp, sp, #0x30
  40ebb4:	ret
  40ebb8:	stp	x29, x30, [sp, #-32]!
  40ebbc:	stp	x20, x19, [sp, #16]
  40ebc0:	ldr	x20, [x1]
  40ebc4:	mov	x19, x0
  40ebc8:	mov	x29, sp
  40ebcc:	mov	x0, x20
  40ebd0:	bl	406750 <strlen@plt>
  40ebd4:	mov	x1, x0
  40ebd8:	mov	x0, x20
  40ebdc:	bl	424110 <lookup_variable@@Base>
  40ebe0:	cbz	x0, 40ec08 <hash_init_function_table@@Base+0xc38>
  40ebe4:	ldrb	w8, [x0, #44]
  40ebe8:	tbnz	w8, #0, 40ec14 <hash_init_function_table@@Base+0xc44>
  40ebec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ebf0:	add	x1, x1, #0xb3a
  40ebf4:	mov	w2, #0x6                   	// #6
  40ebf8:	mov	x0, x19
  40ebfc:	ldp	x20, x19, [sp, #16]
  40ec00:	ldp	x29, x30, [sp], #32
  40ec04:	b	409d08 <variable_buffer_output@@Base>
  40ec08:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ec0c:	add	x1, x1, #0xb26
  40ec10:	b	40ec1c <hash_init_function_table@@Base+0xc4c>
  40ec14:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40ec18:	add	x1, x1, #0xb30
  40ec1c:	mov	w2, #0x9                   	// #9
  40ec20:	mov	x0, x19
  40ec24:	ldp	x20, x19, [sp, #16]
  40ec28:	ldp	x29, x30, [sp], #32
  40ec2c:	b	409d08 <variable_buffer_output@@Base>
  40ec30:	sub	sp, sp, #0x50
  40ec34:	stp	x29, x30, [sp, #32]
  40ec38:	stp	x22, x21, [sp, #48]
  40ec3c:	stp	x20, x19, [sp, #64]
  40ec40:	ldr	x8, [x1]
  40ec44:	add	x29, sp, #0x20
  40ec48:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40ec4c:	mov	x19, x0
  40ec50:	stur	x8, [x29, #-8]
  40ec54:	ldr	x8, [x1, #8]
  40ec58:	mov	w22, wzr
  40ec5c:	add	x20, x20, #0x9ec
  40ec60:	str	x8, [sp, #16]
  40ec64:	b	40ec94 <hash_init_function_table@@Base+0xcc4>
  40ec68:	ldr	x2, [sp]
  40ec6c:	mov	x1, x0
  40ec70:	mov	x0, x19
  40ec74:	bl	409d08 <variable_buffer_output@@Base>
  40ec78:	mov	x19, x0
  40ec7c:	mov	w2, #0x1                   	// #1
  40ec80:	mov	x0, x19
  40ec84:	mov	x1, x20
  40ec88:	mov	w22, #0x1                   	// #1
  40ec8c:	bl	409d08 <variable_buffer_output@@Base>
  40ec90:	mov	x19, x0
  40ec94:	sub	x0, x29, #0x8
  40ec98:	add	x1, sp, #0x8
  40ec9c:	bl	419efc <find_next_token@@Base>
  40eca0:	mov	x21, x0
  40eca4:	cbz	x0, 40ecbc <hash_init_function_table@@Base+0xcec>
  40eca8:	ldr	x2, [sp, #8]
  40ecac:	mov	x0, x19
  40ecb0:	mov	x1, x21
  40ecb4:	bl	409d08 <variable_buffer_output@@Base>
  40ecb8:	mov	x19, x0
  40ecbc:	add	x0, sp, #0x10
  40ecc0:	mov	x1, sp
  40ecc4:	bl	419efc <find_next_token@@Base>
  40ecc8:	cbnz	x0, 40ec68 <hash_init_function_table@@Base+0xc98>
  40eccc:	cbnz	x21, 40ec7c <hash_init_function_table@@Base+0xcac>
  40ecd0:	sub	x8, x19, #0x1
  40ecd4:	cmp	w22, #0x0
  40ecd8:	csel	x0, x19, x8, eq  // eq = none
  40ecdc:	ldp	x20, x19, [sp, #64]
  40ece0:	ldp	x22, x21, [sp, #48]
  40ece4:	ldp	x29, x30, [sp, #32]
  40ece8:	add	sp, sp, #0x50
  40ecec:	ret
  40ecf0:	sub	sp, sp, #0x30
  40ecf4:	stp	x29, x30, [sp, #16]
  40ecf8:	stp	x20, x19, [sp, #32]
  40ecfc:	ldr	x8, [x1]
  40ed00:	mov	x19, x0
  40ed04:	mov	x0, xzr
  40ed08:	add	x29, sp, #0x10
  40ed0c:	str	x8, [sp]
  40ed10:	mov	x20, x0
  40ed14:	mov	x0, sp
  40ed18:	add	x1, sp, #0x8
  40ed1c:	bl	419efc <find_next_token@@Base>
  40ed20:	cbnz	x0, 40ed10 <hash_init_function_table@@Base+0xd40>
  40ed24:	cbz	x20, 40ed3c <hash_init_function_table@@Base+0xd6c>
  40ed28:	ldr	x2, [sp, #8]
  40ed2c:	mov	x0, x19
  40ed30:	mov	x1, x20
  40ed34:	bl	409d08 <variable_buffer_output@@Base>
  40ed38:	mov	x19, x0
  40ed3c:	mov	x0, x19
  40ed40:	ldp	x20, x19, [sp, #32]
  40ed44:	ldp	x29, x30, [sp, #16]
  40ed48:	add	sp, sp, #0x30
  40ed4c:	ret
  40ed50:	stp	x29, x30, [sp, #-64]!
  40ed54:	stp	x22, x21, [sp, #32]
  40ed58:	stp	x20, x19, [sp, #48]
  40ed5c:	ldr	x20, [x1]
  40ed60:	str	x23, [sp, #16]
  40ed64:	ldp	x21, x19, [x1, #8]
  40ed68:	mov	x22, x0
  40ed6c:	mov	x0, x20
  40ed70:	mov	x29, sp
  40ed74:	bl	41d7d0 <find_percent@@Base>
  40ed78:	mov	x23, x0
  40ed7c:	mov	x0, x21
  40ed80:	bl	41d7d0 <find_percent@@Base>
  40ed84:	cmp	x0, #0x0
  40ed88:	csinc	x5, xzr, x0, eq  // eq = none
  40ed8c:	cmp	x23, #0x0
  40ed90:	csinc	x4, xzr, x23, eq  // eq = none
  40ed94:	mov	x0, x22
  40ed98:	mov	x1, x19
  40ed9c:	mov	x2, x20
  40eda0:	mov	x3, x21
  40eda4:	ldp	x20, x19, [sp, #48]
  40eda8:	ldp	x22, x21, [sp, #32]
  40edac:	ldr	x23, [sp, #16]
  40edb0:	ldp	x29, x30, [sp], #64
  40edb4:	b	40cf94 <patsubst_expand_pat@@Base>
  40edb8:	stp	x29, x30, [sp, #-64]!
  40edbc:	stp	x28, x23, [sp, #16]
  40edc0:	stp	x22, x21, [sp, #32]
  40edc4:	stp	x20, x19, [sp, #48]
  40edc8:	mov	x29, sp
  40edcc:	sub	sp, sp, #0x2, lsl #12
  40edd0:	sub	sp, sp, #0xa0
  40edd4:	ldr	x8, [x1]
  40edd8:	mov	x19, x0
  40eddc:	sub	x0, x29, #0x8
  40ede0:	sub	x1, x29, #0x10
  40ede4:	stp	xzr, x8, [x29, #-16]
  40ede8:	bl	419efc <find_next_token@@Base>
  40edec:	cbz	x0, 40eed4 <hash_init_function_table@@Base+0xf04>
  40edf0:	add	x22, sp, #0x1, lsl #12
  40edf4:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  40edf8:	mov	x1, x0
  40edfc:	mov	w23, wzr
  40ee00:	add	x22, x22, #0xc
  40ee04:	add	x20, x20, #0x9ec
  40ee08:	b	40ee20 <hash_init_function_table@@Base+0xe50>
  40ee0c:	sub	x0, x29, #0x8
  40ee10:	sub	x1, x29, #0x10
  40ee14:	bl	419efc <find_next_token@@Base>
  40ee18:	mov	x1, x0
  40ee1c:	cbz	x0, 40eecc <hash_init_function_table@@Base+0xefc>
  40ee20:	ldur	x2, [x29, #-16]
  40ee24:	cmp	x2, #0xfff
  40ee28:	b.hi	40ee0c <hash_init_function_table@@Base+0xe3c>  // b.pmore
  40ee2c:	add	x0, sp, #0x1, lsl #12
  40ee30:	add	x0, x0, #0xc
  40ee34:	bl	406e20 <strncpy@plt>
  40ee38:	ldur	x8, [x29, #-16]
  40ee3c:	strb	wzr, [x22, x8]
  40ee40:	bl	406e70 <__errno_location@plt>
  40ee44:	mov	x21, x0
  40ee48:	add	x0, sp, #0x1, lsl #12
  40ee4c:	add	x0, x0, #0xc
  40ee50:	add	x1, sp, #0x8
  40ee54:	str	wzr, [x21]
  40ee58:	bl	406dd0 <realpath@plt>
  40ee5c:	cbnz	x0, 40ee70 <hash_init_function_table@@Base+0xea0>
  40ee60:	ldr	w8, [x21]
  40ee64:	cmp	w8, #0x4
  40ee68:	b.eq	40ee48 <hash_init_function_table@@Base+0xe78>  // b.none
  40ee6c:	b	40ee0c <hash_init_function_table@@Base+0xe3c>
  40ee70:	add	x1, sp, #0x8
  40ee74:	sub	x2, x29, #0x90
  40ee78:	mov	w0, wzr
  40ee7c:	bl	406e90 <__xstat@plt>
  40ee80:	cmn	w0, #0x1
  40ee84:	b.ne	40ee98 <hash_init_function_table@@Base+0xec8>  // b.any
  40ee88:	ldr	w8, [x21]
  40ee8c:	cmp	w8, #0x4
  40ee90:	b.eq	40ee70 <hash_init_function_table@@Base+0xea0>  // b.none
  40ee94:	b	40ee0c <hash_init_function_table@@Base+0xe3c>
  40ee98:	cbnz	w0, 40ee0c <hash_init_function_table@@Base+0xe3c>
  40ee9c:	add	x0, sp, #0x8
  40eea0:	bl	406750 <strlen@plt>
  40eea4:	mov	x2, x0
  40eea8:	add	x1, sp, #0x8
  40eeac:	mov	x0, x19
  40eeb0:	bl	409d08 <variable_buffer_output@@Base>
  40eeb4:	mov	w2, #0x1                   	// #1
  40eeb8:	mov	x1, x20
  40eebc:	mov	w23, #0x1                   	// #1
  40eec0:	bl	409d08 <variable_buffer_output@@Base>
  40eec4:	mov	x19, x0
  40eec8:	b	40ee0c <hash_init_function_table@@Base+0xe3c>
  40eecc:	cbz	w23, 40eed4 <hash_init_function_table@@Base+0xf04>
  40eed0:	sub	x19, x19, #0x1
  40eed4:	mov	x0, x19
  40eed8:	add	sp, sp, #0x2, lsl #12
  40eedc:	add	sp, sp, #0xa0
  40eee0:	ldp	x20, x19, [sp, #48]
  40eee4:	ldp	x22, x21, [sp, #32]
  40eee8:	ldp	x28, x23, [sp, #16]
  40eeec:	ldp	x29, x30, [sp], #64
  40eef0:	ret
  40eef4:	mov	w2, #0x1                   	// #1
  40eef8:	b	40d5c0 <func_shell_base@@Base>
  40eefc:	sub	sp, sp, #0x70
  40ef00:	stp	x29, x30, [sp, #16]
  40ef04:	stp	x26, x25, [sp, #48]
  40ef08:	stp	x24, x23, [sp, #64]
  40ef0c:	stp	x22, x21, [sp, #80]
  40ef10:	stp	x20, x19, [sp, #96]
  40ef14:	ldr	x8, [x1]
  40ef18:	add	x29, sp, #0x10
  40ef1c:	mov	x21, x1
  40ef20:	mov	x19, x0
  40ef24:	add	x0, x29, #0x18
  40ef28:	mov	x1, xzr
  40ef2c:	str	x27, [sp, #32]
  40ef30:	str	x8, [x29, #24]
  40ef34:	bl	419efc <find_next_token@@Base>
  40ef38:	cbz	x0, 40ef64 <hash_init_function_table@@Base+0xf94>
  40ef3c:	mov	x20, xzr
  40ef40:	ldr	x8, [x29, #24]
  40ef44:	add	x0, x29, #0x18
  40ef48:	mov	x1, xzr
  40ef4c:	add	x8, x8, #0x1
  40ef50:	str	x8, [x29, #24]
  40ef54:	bl	419efc <find_next_token@@Base>
  40ef58:	add	x20, x20, #0x8
  40ef5c:	cbnz	x0, 40ef40 <hash_init_function_table@@Base+0xf70>
  40ef60:	b	40ef68 <hash_init_function_table@@Base+0xf98>
  40ef64:	mov	w20, #0x8                   	// #8
  40ef68:	mov	x0, x20
  40ef6c:	bl	419e14 <xmalloc@@Base>
  40ef70:	ldr	x8, [x21]
  40ef74:	mov	x20, x0
  40ef78:	add	x0, x29, #0x18
  40ef7c:	add	x1, sp, #0x8
  40ef80:	str	x8, [x29, #24]
  40ef84:	bl	419efc <find_next_token@@Base>
  40ef88:	cbz	x0, 40f064 <hash_init_function_table@@Base+0x1094>
  40ef8c:	mov	x22, xzr
  40ef90:	ldr	x8, [x29, #24]
  40ef94:	ldr	x9, [sp, #8]
  40ef98:	add	x1, sp, #0x8
  40ef9c:	add	x8, x8, #0x1
  40efa0:	str	x8, [x29, #24]
  40efa4:	strb	wzr, [x0, x9]
  40efa8:	str	x0, [x20, x22, lsl #3]
  40efac:	add	x0, x29, #0x18
  40efb0:	add	x22, x22, #0x1
  40efb4:	bl	419efc <find_next_token@@Base>
  40efb8:	cbnz	x0, 40ef90 <hash_init_function_table@@Base+0xfc0>
  40efbc:	cbz	w22, 40f064 <hash_init_function_table@@Base+0x1094>
  40efc0:	and	x21, x22, #0xffffffff
  40efc4:	adrp	x3, 419000 <die@@Base+0x5ec>
  40efc8:	add	x3, x3, #0xa2c
  40efcc:	mov	w2, #0x8                   	// #8
  40efd0:	mov	x0, x20
  40efd4:	mov	x1, x21
  40efd8:	bl	406870 <qsort@plt>
  40efdc:	sub	w27, w22, #0x1
  40efe0:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x4680>
  40efe4:	add	x26, x20, #0x8
  40efe8:	add	x22, x22, #0x9ec
  40efec:	b	40f020 <hash_init_function_table@@Base+0x1050>
  40eff0:	mov	x0, x19
  40eff4:	mov	x1, x23
  40eff8:	mov	x2, x24
  40effc:	bl	409d08 <variable_buffer_output@@Base>
  40f000:	mov	w2, #0x1                   	// #1
  40f004:	mov	x1, x22
  40f008:	bl	409d08 <variable_buffer_output@@Base>
  40f00c:	mov	x19, x0
  40f010:	sub	x21, x21, #0x1
  40f014:	add	x26, x26, #0x8
  40f018:	sub	x27, x27, #0x1
  40f01c:	cbz	x21, 40f060 <hash_init_function_table@@Base+0x1090>
  40f020:	ldur	x23, [x26, #-8]
  40f024:	mov	x0, x23
  40f028:	bl	406750 <strlen@plt>
  40f02c:	mov	x24, x0
  40f030:	str	x0, [sp, #8]
  40f034:	cbz	x27, 40eff0 <hash_init_function_table@@Base+0x1020>
  40f038:	ldr	x25, [x26]
  40f03c:	mov	x0, x25
  40f040:	bl	406750 <strlen@plt>
  40f044:	cmp	x0, x24
  40f048:	b.ne	40eff0 <hash_init_function_table@@Base+0x1020>  // b.any
  40f04c:	mov	x0, x23
  40f050:	mov	x1, x25
  40f054:	bl	406c10 <strcmp@plt>
  40f058:	cbnz	w0, 40eff0 <hash_init_function_table@@Base+0x1020>
  40f05c:	b	40f010 <hash_init_function_table@@Base+0x1040>
  40f060:	sub	x19, x19, #0x1
  40f064:	mov	x0, x20
  40f068:	bl	406c60 <free@plt>
  40f06c:	mov	x0, x19
  40f070:	ldp	x20, x19, [sp, #96]
  40f074:	ldp	x22, x21, [sp, #80]
  40f078:	ldp	x24, x23, [sp, #64]
  40f07c:	ldp	x26, x25, [sp, #48]
  40f080:	ldr	x27, [sp, #32]
  40f084:	ldp	x29, x30, [sp, #16]
  40f088:	add	sp, sp, #0x70
  40f08c:	ret
  40f090:	stp	x29, x30, [sp, #-48]!
  40f094:	stp	x22, x21, [sp, #16]
  40f098:	stp	x20, x19, [sp, #32]
  40f09c:	ldr	x1, [x1]
  40f0a0:	mov	x29, sp
  40f0a4:	ldrb	w8, [x1]
  40f0a8:	cbz	w8, 40f170 <hash_init_function_table@@Base+0x11a0>
  40f0ac:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  40f0b0:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  40f0b4:	mov	w21, wzr
  40f0b8:	add	x20, x20, #0xcf0
  40f0bc:	add	x19, x19, #0x9ec
  40f0c0:	and	x9, x8, #0xff
  40f0c4:	ldrh	w9, [x20, x9, lsl #1]
  40f0c8:	tst	w9, #0x6
  40f0cc:	b.ne	40f110 <hash_init_function_table@@Base+0x1140>  // b.any
  40f0d0:	b	40f120 <hash_init_function_table@@Base+0x1150>
  40f0d4:	add	x22, x9, #0x1
  40f0d8:	add	w8, w8, #0x1
  40f0dc:	mov	w2, w8
  40f0e0:	bl	409d08 <variable_buffer_output@@Base>
  40f0e4:	mov	w2, #0x1                   	// #1
  40f0e8:	mov	x1, x19
  40f0ec:	mov	w21, #0x1                   	// #1
  40f0f0:	bl	409d08 <variable_buffer_output@@Base>
  40f0f4:	ldrb	w8, [x22]
  40f0f8:	mov	x1, x22
  40f0fc:	cbz	w8, 40f16c <hash_init_function_table@@Base+0x119c>
  40f100:	and	x9, x8, #0xff
  40f104:	ldrh	w9, [x20, x9, lsl #1]
  40f108:	tst	w9, #0x6
  40f10c:	b.eq	40f120 <hash_init_function_table@@Base+0x1150>  // b.none
  40f110:	ldrb	w8, [x1, #1]!
  40f114:	ldrh	w9, [x20, x8, lsl #1]
  40f118:	tst	w9, #0x6
  40f11c:	b.ne	40f110 <hash_init_function_table@@Base+0x1140>  // b.any
  40f120:	tst	w8, #0xff
  40f124:	b.eq	40f168 <hash_init_function_table@@Base+0x1198>  // b.none
  40f128:	tst	w9, #0x6
  40f12c:	b.eq	40f140 <hash_init_function_table@@Base+0x1170>  // b.none
  40f130:	mov	w8, wzr
  40f134:	mov	x22, x1
  40f138:	cbnz	w8, 40f0dc <hash_init_function_table@@Base+0x110c>
  40f13c:	b	40f168 <hash_init_function_table@@Base+0x1198>
  40f140:	mov	x8, xzr
  40f144:	add	x9, x1, x8
  40f148:	ldrb	w10, [x9, #1]
  40f14c:	cbz	x10, 40f0d4 <hash_init_function_table@@Base+0x1104>
  40f150:	ldrh	w9, [x20, x10, lsl #1]
  40f154:	add	x8, x8, #0x1
  40f158:	tst	w9, #0x6
  40f15c:	b.eq	40f144 <hash_init_function_table@@Base+0x1174>  // b.none
  40f160:	add	x22, x1, x8
  40f164:	cbnz	w8, 40f0dc <hash_init_function_table@@Base+0x110c>
  40f168:	cbz	w21, 40f170 <hash_init_function_table@@Base+0x11a0>
  40f16c:	sub	x0, x0, #0x1
  40f170:	ldp	x20, x19, [sp, #32]
  40f174:	ldp	x22, x21, [sp, #16]
  40f178:	ldp	x29, x30, [sp], #48
  40f17c:	ret
  40f180:	sub	sp, sp, #0x70
  40f184:	stp	x29, x30, [sp, #16]
  40f188:	stp	x28, x27, [sp, #32]
  40f18c:	stp	x26, x25, [sp, #48]
  40f190:	stp	x24, x23, [sp, #64]
  40f194:	stp	x22, x21, [sp, #80]
  40f198:	stp	x20, x19, [sp, #96]
  40f19c:	ldr	x8, [x1]
  40f1a0:	mov	x19, x0
  40f1a4:	add	x0, sp, #0x8
  40f1a8:	mov	w1, #0x10                  	// #16
  40f1ac:	mov	w2, #0x1                   	// #1
  40f1b0:	mov	w4, #0x19                  	// #25
  40f1b4:	mov	x3, xzr
  40f1b8:	add	x29, sp, #0x10
  40f1bc:	str	x8, [sp, #8]
  40f1c0:	bl	41def0 <parse_file_seq@@Base>
  40f1c4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f1c8:	mov	x20, x0
  40f1cc:	ldr	x0, [x8, #2928]
  40f1d0:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  40f1d4:	add	x25, x25, #0xb70
  40f1d8:	cbz	x0, 40f1e8 <hash_init_function_table@@Base+0x1218>
  40f1dc:	mov	x21, x0
  40f1e0:	cbnz	x20, 40f204 <hash_init_function_table@@Base+0x1234>
  40f1e4:	b	40f2b0 <hash_init_function_table@@Base+0x12e0>
  40f1e8:	mov	w8, #0x64                  	// #100
  40f1ec:	mov	w0, #0x64                  	// #100
  40f1f0:	str	x8, [x25, #8]
  40f1f4:	bl	419e14 <xmalloc@@Base>
  40f1f8:	str	x0, [x25]
  40f1fc:	mov	x21, x0
  40f200:	cbz	x20, 40f2b0 <hash_init_function_table@@Base+0x12e0>
  40f204:	str	x19, [sp]
  40f208:	mov	x19, xzr
  40f20c:	mov	w27, #0x20                  	// #32
  40f210:	b	40f264 <hash_init_function_table@@Base+0x1294>
  40f214:	ldr	x0, [x25]
  40f218:	add	x8, x8, x21, lsl #1
  40f21c:	add	x1, x8, #0x2
  40f220:	str	x1, [x25, #8]
  40f224:	bl	419de0 <xrealloc@@Base>
  40f228:	str	x0, [x25]
  40f22c:	ldr	x22, [x20, #8]
  40f230:	mov	x23, x0
  40f234:	add	x0, x23, x19
  40f238:	mov	x1, x22
  40f23c:	mov	x2, x21
  40f240:	bl	406710 <memcpy@plt>
  40f244:	strb	w27, [x23, x26]
  40f248:	ldr	x0, [x20, #8]
  40f24c:	bl	406c60 <free@plt>
  40f250:	mov	x0, x20
  40f254:	bl	406c60 <free@plt>
  40f258:	mov	x20, x28
  40f25c:	mov	x19, x24
  40f260:	cbz	x28, 40f298 <hash_init_function_table@@Base+0x12c8>
  40f264:	ldp	x28, x22, [x20]
  40f268:	mov	x0, x22
  40f26c:	bl	406750 <strlen@plt>
  40f270:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f274:	ldr	x8, [x8, #2936]
  40f278:	add	x26, x0, x19
  40f27c:	add	x24, x26, #0x1
  40f280:	mov	x21, x0
  40f284:	cmp	x24, x8
  40f288:	b.hi	40f214 <hash_init_function_table@@Base+0x1244>  // b.pmore
  40f28c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f290:	ldr	x23, [x8, #2928]
  40f294:	b	40f234 <hash_init_function_table@@Base+0x1264>
  40f298:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f29c:	ldr	x21, [x8, #2928]
  40f2a0:	ldr	x19, [sp]
  40f2a4:	cmp	x24, #0x0
  40f2a8:	add	x8, x21, x26
  40f2ac:	csel	x0, x21, x8, eq  // eq = none
  40f2b0:	strb	wzr, [x0]
  40f2b4:	mov	x0, x21
  40f2b8:	bl	406750 <strlen@plt>
  40f2bc:	mov	x2, x0
  40f2c0:	mov	x0, x19
  40f2c4:	mov	x1, x21
  40f2c8:	bl	409d08 <variable_buffer_output@@Base>
  40f2cc:	ldp	x20, x19, [sp, #96]
  40f2d0:	ldp	x22, x21, [sp, #80]
  40f2d4:	ldp	x24, x23, [sp, #64]
  40f2d8:	ldp	x26, x25, [sp, #48]
  40f2dc:	ldp	x28, x27, [sp, #32]
  40f2e0:	ldp	x29, x30, [sp, #16]
  40f2e4:	add	sp, sp, #0x70
  40f2e8:	ret
  40f2ec:	stp	x29, x30, [sp, #-48]!
  40f2f0:	stp	x20, x19, [sp, #32]
  40f2f4:	str	x21, [sp, #16]
  40f2f8:	ldr	x21, [x1]
  40f2fc:	mov	x20, x1
  40f300:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f304:	mov	x19, x0
  40f308:	add	x1, x1, #0xb41
  40f30c:	mov	w2, #0x5                   	// #5
  40f310:	mov	x0, xzr
  40f314:	mov	x29, sp
  40f318:	bl	406dc0 <dcgettext@plt>
  40f31c:	mov	x1, x0
  40f320:	mov	x0, x21
  40f324:	bl	410474 <hash_init_function_table@@Base+0x24a4>
  40f328:	ldr	x0, [x20]
  40f32c:	mov	w2, #0xa                   	// #10
  40f330:	mov	x1, xzr
  40f334:	bl	406c30 <strtol@plt>
  40f338:	mov	x21, x0
  40f33c:	cbz	w21, 40f394 <hash_init_function_table@@Base+0x13c4>
  40f340:	ldr	x8, [x20, #8]
  40f344:	str	x8, [x29, #24]
  40f348:	add	x0, x29, #0x18
  40f34c:	mov	x1, xzr
  40f350:	bl	419efc <find_next_token@@Base>
  40f354:	mov	x1, x0
  40f358:	cbz	x0, 40f368 <hash_init_function_table@@Base+0x1398>
  40f35c:	subs	w21, w21, #0x1
  40f360:	b.ne	40f348 <hash_init_function_table@@Base+0x1378>  // b.any
  40f364:	b	40f36c <hash_init_function_table@@Base+0x139c>
  40f368:	cbnz	w21, 40f380 <hash_init_function_table@@Base+0x13b0>
  40f36c:	ldr	x8, [x29, #24]
  40f370:	mov	x0, x19
  40f374:	sub	x2, x8, x1
  40f378:	bl	409d08 <variable_buffer_output@@Base>
  40f37c:	mov	x19, x0
  40f380:	mov	x0, x19
  40f384:	ldp	x20, x19, [sp, #32]
  40f388:	ldr	x21, [sp, #16]
  40f38c:	ldp	x29, x30, [sp], #48
  40f390:	ret
  40f394:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f398:	ldr	x8, [x8, #1456]
  40f39c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f3a0:	add	x1, x1, #0xb6f
  40f3a4:	mov	w2, #0x5                   	// #5
  40f3a8:	ldr	x19, [x8]
  40f3ac:	mov	x0, xzr
  40f3b0:	bl	406dc0 <dcgettext@plt>
  40f3b4:	mov	x2, x0
  40f3b8:	mov	x0, x19
  40f3bc:	mov	x1, xzr
  40f3c0:	bl	41aff0 <fatal@@Base>
  40f3c4:	stp	x29, x30, [sp, #-64]!
  40f3c8:	stp	x22, x21, [sp, #32]
  40f3cc:	stp	x20, x19, [sp, #48]
  40f3d0:	ldr	x21, [x1]
  40f3d4:	mov	x20, x1
  40f3d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f3dc:	mov	x19, x0
  40f3e0:	add	x1, x1, #0xbb1
  40f3e4:	mov	w2, #0x5                   	// #5
  40f3e8:	mov	x0, xzr
  40f3ec:	str	x23, [sp, #16]
  40f3f0:	mov	x29, sp
  40f3f4:	bl	406dc0 <dcgettext@plt>
  40f3f8:	mov	x1, x0
  40f3fc:	mov	x0, x21
  40f400:	bl	410474 <hash_init_function_table@@Base+0x24a4>
  40f404:	ldr	x21, [x20, #8]
  40f408:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f40c:	add	x1, x1, #0xbe3
  40f410:	mov	w2, #0x5                   	// #5
  40f414:	mov	x0, xzr
  40f418:	bl	406dc0 <dcgettext@plt>
  40f41c:	mov	x1, x0
  40f420:	mov	x0, x21
  40f424:	bl	410474 <hash_init_function_table@@Base+0x24a4>
  40f428:	ldr	x0, [x20]
  40f42c:	mov	w2, #0xa                   	// #10
  40f430:	mov	x1, xzr
  40f434:	bl	406c30 <strtol@plt>
  40f438:	mov	x21, x0
  40f43c:	cmp	w21, #0x0
  40f440:	b.le	40f4d8 <hash_init_function_table@@Base+0x1508>
  40f444:	ldr	x0, [x20, #8]
  40f448:	mov	w2, #0xa                   	// #10
  40f44c:	mov	x1, xzr
  40f450:	bl	406c30 <strtol@plt>
  40f454:	mov	x22, x0
  40f458:	cmp	w22, w21
  40f45c:	b.mi	40f4c0 <hash_init_function_table@@Base+0x14f0>  // b.first
  40f460:	ldr	x8, [x20, #16]
  40f464:	mov	w23, w21
  40f468:	str	x8, [x29, #24]
  40f46c:	add	x0, x29, #0x18
  40f470:	mov	x1, xzr
  40f474:	bl	419efc <find_next_token@@Base>
  40f478:	cbz	x0, 40f4c0 <hash_init_function_table@@Base+0x14f0>
  40f47c:	subs	w23, w23, #0x1
  40f480:	b.ne	40f46c <hash_init_function_table@@Base+0x149c>  // b.any
  40f484:	mvn	w8, w22
  40f488:	mov	x20, x0
  40f48c:	add	w21, w8, w21
  40f490:	adds	w21, w21, #0x1
  40f494:	b.cs	40f4a8 <hash_init_function_table@@Base+0x14d8>  // b.hs, b.nlast
  40f498:	add	x0, x29, #0x18
  40f49c:	mov	x1, xzr
  40f4a0:	bl	419efc <find_next_token@@Base>
  40f4a4:	cbnz	x0, 40f490 <hash_init_function_table@@Base+0x14c0>
  40f4a8:	ldr	x8, [x29, #24]
  40f4ac:	mov	x0, x19
  40f4b0:	mov	x1, x20
  40f4b4:	sub	x2, x8, x20
  40f4b8:	bl	409d08 <variable_buffer_output@@Base>
  40f4bc:	mov	x19, x0
  40f4c0:	mov	x0, x19
  40f4c4:	ldp	x20, x19, [sp, #48]
  40f4c8:	ldp	x22, x21, [sp, #32]
  40f4cc:	ldr	x23, [sp, #16]
  40f4d0:	ldp	x29, x30, [sp], #64
  40f4d4:	ret
  40f4d8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f4dc:	ldr	x8, [x8, #1456]
  40f4e0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  40f4e4:	add	x2, x2, #0xc16
  40f4e8:	mov	w1, #0x14                  	// #20
  40f4ec:	ldr	x0, [x8]
  40f4f0:	mov	w3, w21
  40f4f4:	bl	41aff0 <fatal@@Base>
  40f4f8:	sub	sp, sp, #0x40
  40f4fc:	stp	x29, x30, [sp, #32]
  40f500:	stp	x20, x19, [sp, #48]
  40f504:	ldr	x8, [x1]
  40f508:	add	x29, sp, #0x20
  40f50c:	mov	x19, x0
  40f510:	mov	w20, #0xffffffff            	// #-1
  40f514:	stur	x8, [x29, #-8]
  40f518:	sub	x0, x29, #0x8
  40f51c:	mov	x1, xzr
  40f520:	bl	419efc <find_next_token@@Base>
  40f524:	add	w20, w20, #0x1
  40f528:	cbnz	x0, 40f518 <hash_init_function_table@@Base+0x1548>
  40f52c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  40f530:	add	x1, x1, #0xad1
  40f534:	add	x0, sp, #0x4
  40f538:	mov	w2, w20
  40f53c:	bl	406800 <sprintf@plt>
  40f540:	add	x0, sp, #0x4
  40f544:	bl	406750 <strlen@plt>
  40f548:	mov	x2, x0
  40f54c:	add	x1, sp, #0x4
  40f550:	mov	x0, x19
  40f554:	bl	409d08 <variable_buffer_output@@Base>
  40f558:	ldp	x20, x19, [sp, #48]
  40f55c:	ldp	x29, x30, [sp, #32]
  40f560:	add	sp, sp, #0x40
  40f564:	ret
  40f568:	stp	x29, x30, [sp, #-32]!
  40f56c:	stp	x20, x19, [sp, #16]
  40f570:	ldr	x20, [x1]
  40f574:	mov	x19, x0
  40f578:	mov	x29, sp
  40f57c:	mov	x0, x20
  40f580:	bl	406750 <strlen@plt>
  40f584:	mov	x1, x0
  40f588:	mov	x0, x20
  40f58c:	bl	424110 <lookup_variable@@Base>
  40f590:	cbz	x0, 40f5d0 <hash_init_function_table@@Base+0x1600>
  40f594:	ldr	w8, [x0, #44]
  40f598:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  40f59c:	add	x9, x9, #0x8cc
  40f5a0:	ubfx	w8, w8, #26, #3
  40f5a4:	adr	x10, 40f5b4 <hash_init_function_table@@Base+0x15e4>
  40f5a8:	ldrb	w11, [x9, x8]
  40f5ac:	add	x10, x10, x11, lsl #2
  40f5b0:	br	x10
  40f5b4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f5b8:	add	x1, x1, #0xc4a
  40f5bc:	mov	w2, #0x7                   	// #7
  40f5c0:	mov	x0, x19
  40f5c4:	ldp	x20, x19, [sp, #16]
  40f5c8:	ldp	x29, x30, [sp], #32
  40f5cc:	b	409d08 <variable_buffer_output@@Base>
  40f5d0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f5d4:	add	x1, x1, #0xb26
  40f5d8:	mov	w2, #0x9                   	// #9
  40f5dc:	mov	x0, x19
  40f5e0:	ldp	x20, x19, [sp, #16]
  40f5e4:	ldp	x29, x30, [sp], #32
  40f5e8:	b	409d08 <variable_buffer_output@@Base>
  40f5ec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f5f0:	add	x1, x1, #0xc73
  40f5f4:	mov	w2, #0xc                   	// #12
  40f5f8:	mov	x0, x19
  40f5fc:	ldp	x20, x19, [sp, #16]
  40f600:	ldp	x29, x30, [sp], #32
  40f604:	b	409d08 <variable_buffer_output@@Base>
  40f608:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  40f60c:	add	x1, x1, #0x781
  40f610:	mov	w2, #0x4                   	// #4
  40f614:	mov	x0, x19
  40f618:	ldp	x20, x19, [sp, #16]
  40f61c:	ldp	x29, x30, [sp], #32
  40f620:	b	409d08 <variable_buffer_output@@Base>
  40f624:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f628:	add	x1, x1, #0xc5e
  40f62c:	mov	w2, #0x14                  	// #20
  40f630:	mov	x0, x19
  40f634:	ldp	x20, x19, [sp, #16]
  40f638:	ldp	x29, x30, [sp], #32
  40f63c:	b	409d08 <variable_buffer_output@@Base>
  40f640:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f644:	add	x1, x1, #0xc52
  40f648:	mov	w2, #0xb                   	// #11
  40f64c:	mov	x0, x19
  40f650:	ldp	x20, x19, [sp, #16]
  40f654:	ldp	x29, x30, [sp], #32
  40f658:	b	409d08 <variable_buffer_output@@Base>
  40f65c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f660:	add	x1, x1, #0xc6a
  40f664:	mov	w2, #0x8                   	// #8
  40f668:	mov	x0, x19
  40f66c:	ldp	x20, x19, [sp, #16]
  40f670:	ldp	x29, x30, [sp], #32
  40f674:	b	409d08 <variable_buffer_output@@Base>
  40f678:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f67c:	add	x1, x1, #0xc80
  40f680:	b	40f5d8 <hash_init_function_table@@Base+0x1608>
  40f684:	bl	406b70 <abort@plt>
  40f688:	sub	sp, sp, #0x60
  40f68c:	stp	x29, x30, [sp, #16]
  40f690:	stp	x24, x23, [sp, #48]
  40f694:	stp	x22, x21, [sp, #64]
  40f698:	stp	x20, x19, [sp, #80]
  40f69c:	ldr	x8, [x1]
  40f6a0:	mov	x21, x1
  40f6a4:	mov	x19, x0
  40f6a8:	mov	x1, xzr
  40f6ac:	mov	x0, x8
  40f6b0:	str	x25, [sp, #32]
  40f6b4:	add	x29, sp, #0x10
  40f6b8:	bl	40a594 <expand_argument@@Base>
  40f6bc:	ldr	x8, [x21, #8]
  40f6c0:	mov	x20, x0
  40f6c4:	mov	x1, xzr
  40f6c8:	mov	x0, x8
  40f6cc:	bl	40a594 <expand_argument@@Base>
  40f6d0:	ldr	x22, [x21, #16]
  40f6d4:	mov	x21, x0
  40f6d8:	str	x0, [x29, #24]
  40f6dc:	mov	x0, x20
  40f6e0:	bl	419edc <next_token@@Base>
  40f6e4:	mov	x23, x0
  40f6e8:	bl	419ebc <end_of_token@@Base>
  40f6ec:	strb	wzr, [x0]
  40f6f0:	bl	424a3c <push_new_variable_scope@@Base>
  40f6f4:	mov	x0, x23
  40f6f8:	bl	406750 <strlen@plt>
  40f6fc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40f700:	ldr	x8, [x8, #2424]
  40f704:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  40f708:	mov	x1, x0
  40f70c:	add	x2, x2, #0x3a9
  40f710:	ldr	x5, [x8, #8]
  40f714:	mov	w3, #0x6                   	// #6
  40f718:	mov	x0, x23
  40f71c:	mov	w4, wzr
  40f720:	mov	x6, xzr
  40f724:	bl	423d70 <define_variable_in_set@@Base>
  40f728:	mov	x23, x0
  40f72c:	add	x0, x29, #0x18
  40f730:	add	x1, sp, #0x8
  40f734:	bl	419efc <find_next_token@@Base>
  40f738:	cbz	x0, 40f7b4 <hash_init_function_table@@Base+0x17e4>
  40f73c:	adrp	x24, 42c000 <_IO_stdin_used@@Base+0x4680>
  40f740:	mov	x25, x0
  40f744:	add	x24, x24, #0x9ec
  40f748:	ldr	x0, [x23, #8]
  40f74c:	bl	406c60 <free@plt>
  40f750:	ldr	x1, [sp, #8]
  40f754:	mov	x0, x25
  40f758:	bl	419e7c <xstrndup@@Base>
  40f75c:	str	x0, [x23, #8]
  40f760:	mov	x0, x22
  40f764:	mov	x1, xzr
  40f768:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  40f76c:	mov	x25, x0
  40f770:	bl	406750 <strlen@plt>
  40f774:	mov	x2, x0
  40f778:	mov	x0, x19
  40f77c:	mov	x1, x25
  40f780:	bl	409d08 <variable_buffer_output@@Base>
  40f784:	mov	w2, #0x1                   	// #1
  40f788:	mov	x1, x24
  40f78c:	bl	409d08 <variable_buffer_output@@Base>
  40f790:	mov	x19, x0
  40f794:	mov	x0, x25
  40f798:	bl	406c60 <free@plt>
  40f79c:	add	x0, x29, #0x18
  40f7a0:	add	x1, sp, #0x8
  40f7a4:	bl	419efc <find_next_token@@Base>
  40f7a8:	mov	x25, x0
  40f7ac:	cbnz	x0, 40f748 <hash_init_function_table@@Base+0x1778>
  40f7b0:	sub	x19, x19, #0x1
  40f7b4:	bl	424ad4 <pop_variable_scope@@Base>
  40f7b8:	mov	x0, x20
  40f7bc:	bl	406c60 <free@plt>
  40f7c0:	mov	x0, x21
  40f7c4:	bl	406c60 <free@plt>
  40f7c8:	mov	x0, x19
  40f7cc:	ldp	x20, x19, [sp, #80]
  40f7d0:	ldp	x22, x21, [sp, #64]
  40f7d4:	ldp	x24, x23, [sp, #48]
  40f7d8:	ldr	x25, [sp, #32]
  40f7dc:	ldp	x29, x30, [sp, #16]
  40f7e0:	add	sp, sp, #0x60
  40f7e4:	ret
  40f7e8:	stp	x29, x30, [sp, #-96]!
  40f7ec:	stp	x28, x27, [sp, #16]
  40f7f0:	stp	x26, x25, [sp, #32]
  40f7f4:	stp	x24, x23, [sp, #48]
  40f7f8:	stp	x22, x21, [sp, #64]
  40f7fc:	stp	x20, x19, [sp, #80]
  40f800:	mov	x29, sp
  40f804:	sub	sp, sp, #0x20
  40f808:	ldr	x8, [x1]
  40f80c:	mov	x19, x0
  40f810:	mov	x20, x1
  40f814:	mov	x0, x8
  40f818:	bl	419edc <next_token@@Base>
  40f81c:	mov	x23, x0
  40f820:	bl	419ebc <end_of_token@@Base>
  40f824:	strb	wzr, [x0]
  40f828:	ldrb	w8, [x23]
  40f82c:	cbz	x8, 40fa90 <hash_init_function_table@@Base+0x1ac0>
  40f830:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  40f834:	add	x10, x10, #0xcf0
  40f838:	ldrh	w9, [x10, x8, lsl #1]
  40f83c:	mov	x8, x23
  40f840:	tbz	w9, #13, 40f854 <hash_init_function_table@@Base+0x1884>
  40f844:	mov	x8, x23
  40f848:	ldrb	w9, [x8, #1]!
  40f84c:	ldrh	w9, [x10, x9, lsl #1]
  40f850:	tbnz	w9, #13, 40f848 <hash_init_function_table@@Base+0x1878>
  40f854:	cmp	x8, x23
  40f858:	b.eq	40f8b0 <hash_init_function_table@@Base+0x18e0>  // b.none
  40f85c:	and	w9, w9, #0x7
  40f860:	cbz	w9, 40f8b0 <hash_init_function_table@@Base+0x18e0>
  40f864:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  40f868:	sub	w8, w8, w23
  40f86c:	add	x0, x0, #0xb80
  40f870:	sub	x1, x29, #0x18
  40f874:	stur	x23, [x29, #-16]
  40f878:	sturb	w8, [x29, #-8]
  40f87c:	bl	410888 <hash_find_item@@Base>
  40f880:	cbz	x0, 40f8b0 <hash_init_function_table@@Base+0x18e0>
  40f884:	mov	x3, x0
  40f888:	add	x8, x20, #0x8
  40f88c:	mov	w1, #0xffffffff            	// #-1
  40f890:	ldr	x9, [x8], #8
  40f894:	add	w1, w1, #0x1
  40f898:	cbnz	x9, 40f890 <hash_init_function_table@@Base+0x18c0>
  40f89c:	add	x2, x20, #0x8
  40f8a0:	mov	x0, x19
  40f8a4:	bl	40dce4 <handle_function@@Base+0x3a8>
  40f8a8:	mov	x19, x0
  40f8ac:	b	40fa90 <hash_init_function_table@@Base+0x1ac0>
  40f8b0:	mov	x0, x23
  40f8b4:	bl	406750 <strlen@plt>
  40f8b8:	mov	x24, x0
  40f8bc:	mov	x0, x23
  40f8c0:	mov	x1, x24
  40f8c4:	bl	424110 <lookup_variable@@Base>
  40f8c8:	mov	x21, x0
  40f8cc:	cbnz	x0, 40f910 <hash_init_function_table@@Base+0x1940>
  40f8d0:	adrp	x8, 442000 <just_print_flag@@Base>
  40f8d4:	ldr	w8, [x8, #64]
  40f8d8:	cbz	w8, 40f910 <hash_init_function_table@@Base+0x1940>
  40f8dc:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40f8e0:	ldr	x22, [x8, #1536]
  40f8e4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  40f8e8:	add	x1, x1, #0x2ff
  40f8ec:	mov	w2, #0x5                   	// #5
  40f8f0:	mov	x0, xzr
  40f8f4:	bl	406dc0 <dcgettext@plt>
  40f8f8:	mov	x2, x0
  40f8fc:	mov	x0, x22
  40f900:	mov	x1, x24
  40f904:	mov	w3, w24
  40f908:	mov	x4, x23
  40f90c:	bl	41ae34 <error@@Base>
  40f910:	cbz	x21, 40fa90 <hash_init_function_table@@Base+0x1ac0>
  40f914:	ldr	x8, [x21, #8]
  40f918:	ldrb	w8, [x8]
  40f91c:	cbz	w8, 40fa90 <hash_init_function_table@@Base+0x1ac0>
  40f920:	add	x9, x24, #0x13
  40f924:	mov	x8, sp
  40f928:	and	x9, x9, #0xfffffffffffffff0
  40f92c:	sub	x22, x8, x9
  40f930:	mov	sp, x22
  40f934:	mov	w8, #0x2824                	// #10276
  40f938:	mov	x0, x22
  40f93c:	strh	w8, [x0], #2
  40f940:	mov	x1, x23
  40f944:	mov	x2, x24
  40f948:	bl	406710 <memcpy@plt>
  40f94c:	add	x8, x24, x22
  40f950:	mov	w9, #0x29                  	// #41
  40f954:	strh	w9, [x8, #2]
  40f958:	add	x23, x24, #0x3
  40f95c:	bl	424a3c <push_new_variable_scope@@Base>
  40f960:	ldr	x8, [x20]
  40f964:	cbz	x8, 40f9d8 <hash_init_function_table@@Base+0x1a08>
  40f968:	adrp	x25, 42d000 <_IO_stdin_used@@Base+0x5680>
  40f96c:	mov	x24, xzr
  40f970:	add	x25, x25, #0xad1
  40f974:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40f978:	sub	x0, x29, #0x18
  40f97c:	mov	x1, x25
  40f980:	mov	w2, w24
  40f984:	add	x27, x20, x24, lsl #3
  40f988:	bl	406800 <sprintf@plt>
  40f98c:	sub	x0, x29, #0x18
  40f990:	bl	406750 <strlen@plt>
  40f994:	ldr	x8, [x26, #2424]
  40f998:	ldr	x2, [x27]
  40f99c:	mov	x1, x0
  40f9a0:	sub	x0, x29, #0x18
  40f9a4:	ldr	x5, [x8, #8]
  40f9a8:	mov	w3, #0x6                   	// #6
  40f9ac:	mov	w4, wzr
  40f9b0:	mov	x6, xzr
  40f9b4:	bl	423d70 <define_variable_in_set@@Base>
  40f9b8:	ldr	x8, [x27, #8]
  40f9bc:	add	x24, x24, #0x1
  40f9c0:	cbnz	x8, 40f978 <hash_init_function_table@@Base+0x19a8>
  40f9c4:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40f9c8:	ldr	w28, [x26, #2920]
  40f9cc:	cmp	w24, w28
  40f9d0:	b.lt	40f9ec <hash_init_function_table@@Base+0x1a1c>  // b.tstop
  40f9d4:	b	40fa4c <hash_init_function_table@@Base+0x1a7c>
  40f9d8:	mov	w24, wzr
  40f9dc:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  40f9e0:	ldr	w28, [x26, #2920]
  40f9e4:	cmp	w24, w28
  40f9e8:	b.ge	40fa4c <hash_init_function_table@@Base+0x1a7c>  // b.tcont
  40f9ec:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  40f9f0:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x2680>
  40f9f4:	add	x20, x20, #0xad1
  40f9f8:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  40f9fc:	add	x25, x25, #0x3a9
  40fa00:	sub	x0, x29, #0x18
  40fa04:	mov	x1, x20
  40fa08:	mov	w2, w24
  40fa0c:	bl	406800 <sprintf@plt>
  40fa10:	sub	x0, x29, #0x18
  40fa14:	bl	406750 <strlen@plt>
  40fa18:	ldr	x8, [x27, #2424]
  40fa1c:	mov	x1, x0
  40fa20:	sub	x0, x29, #0x18
  40fa24:	mov	w3, #0x6                   	// #6
  40fa28:	ldr	x5, [x8, #8]
  40fa2c:	mov	x2, x25
  40fa30:	mov	w4, wzr
  40fa34:	mov	x6, xzr
  40fa38:	bl	423d70 <define_variable_in_set@@Base>
  40fa3c:	ldr	w28, [x26, #2920]
  40fa40:	add	w24, w24, #0x1
  40fa44:	cmp	w24, w28
  40fa48:	b.lt	40fa00 <hash_init_function_table@@Base+0x1a30>  // b.tstop
  40fa4c:	ldr	w8, [x21, #44]
  40fa50:	mov	x0, x19
  40fa54:	mov	x1, x22
  40fa58:	mov	x2, x23
  40fa5c:	orr	w8, w8, #0x7fff00
  40fa60:	str	w8, [x21, #44]
  40fa64:	str	w24, [x26, #2920]
  40fa68:	bl	40a038 <variable_expand_string@@Base>
  40fa6c:	str	w28, [x26, #2920]
  40fa70:	ldr	w8, [x21, #44]
  40fa74:	mov	x19, x0
  40fa78:	and	w8, w8, #0xff8000ff
  40fa7c:	str	w8, [x21, #44]
  40fa80:	bl	424ad4 <pop_variable_scope@@Base>
  40fa84:	mov	x0, x19
  40fa88:	bl	406750 <strlen@plt>
  40fa8c:	add	x19, x19, x0
  40fa90:	mov	x0, x19
  40fa94:	mov	sp, x29
  40fa98:	ldp	x20, x19, [sp, #80]
  40fa9c:	ldp	x22, x21, [sp, #64]
  40faa0:	ldp	x24, x23, [sp, #48]
  40faa4:	ldp	x26, x25, [sp, #32]
  40faa8:	ldp	x28, x27, [sp, #16]
  40faac:	ldp	x29, x30, [sp], #96
  40fab0:	ret
  40fab4:	stp	x29, x30, [sp, #-80]!
  40fab8:	stp	x24, x23, [sp, #32]
  40fabc:	stp	x22, x21, [sp, #48]
  40fac0:	stp	x20, x19, [sp, #64]
  40fac4:	ldr	x23, [x1]
  40fac8:	mov	x20, x2
  40facc:	mov	x22, x1
  40fad0:	mov	x19, x0
  40fad4:	str	x25, [sp, #16]
  40fad8:	mov	x29, sp
  40fadc:	cbz	x23, 40fb0c <hash_init_function_table@@Base+0x1b3c>
  40fae0:	mov	x21, xzr
  40fae4:	add	x24, x22, #0x8
  40fae8:	mov	x8, x23
  40faec:	mov	x0, x8
  40faf0:	bl	406750 <strlen@plt>
  40faf4:	ldr	x8, [x24], #8
  40faf8:	add	x9, x21, x0
  40fafc:	add	x21, x9, #0x2
  40fb00:	cbnz	x8, 40faec <hash_init_function_table@@Base+0x1b1c>
  40fb04:	add	x8, x21, #0x1
  40fb08:	b	40fb10 <hash_init_function_table@@Base+0x1b40>
  40fb0c:	mov	w8, #0x1                   	// #1
  40fb10:	add	x8, x8, #0xf
  40fb14:	mov	x9, sp
  40fb18:	and	x8, x8, #0xfffffffffffffff0
  40fb1c:	sub	x21, x9, x8
  40fb20:	mov	sp, x21
  40fb24:	strb	wzr, [x21]
  40fb28:	ldr	x24, [x22, #8]
  40fb2c:	mov	x0, x21
  40fb30:	mov	x1, x23
  40fb34:	bl	406d00 <strcpy@plt>
  40fb38:	cbz	x24, 40fb6c <hash_init_function_table@@Base+0x1b9c>
  40fb3c:	add	x23, x22, #0x10
  40fb40:	mov	w24, #0x202c                	// #8236
  40fb44:	mov	x22, x21
  40fb48:	ldur	x0, [x23, #-16]
  40fb4c:	bl	406750 <strlen@plt>
  40fb50:	add	x22, x22, x0
  40fb54:	strh	w24, [x22], #2
  40fb58:	ldp	x1, x25, [x23, #-8]
  40fb5c:	mov	x0, x22
  40fb60:	bl	406d00 <strcpy@plt>
  40fb64:	add	x23, x23, #0x8
  40fb68:	cbnz	x25, 40fb48 <hash_init_function_table@@Base+0x1b78>
  40fb6c:	ldrb	w8, [x20]
  40fb70:	cmp	w8, #0x69
  40fb74:	b.eq	40fbac <hash_init_function_table@@Base+0x1bdc>  // b.none
  40fb78:	cmp	w8, #0x77
  40fb7c:	b.ne	40fbe8 <hash_init_function_table@@Base+0x1c18>  // b.any
  40fb80:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40fb84:	ldr	x20, [x8, #1536]
  40fb88:	mov	x0, x21
  40fb8c:	bl	406750 <strlen@plt>
  40fb90:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  40fb94:	mov	x1, x0
  40fb98:	add	x2, x2, #0x5b6
  40fb9c:	mov	x0, x20
  40fba0:	mov	x3, x21
  40fba4:	bl	41ae34 <error@@Base>
  40fba8:	b	40fbc8 <hash_init_function_table@@Base+0x1bf8>
  40fbac:	mov	w0, wzr
  40fbb0:	mov	x1, x21
  40fbb4:	bl	41abd8 <outputs@@Base>
  40fbb8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  40fbbc:	add	x1, x1, #0x3a8
  40fbc0:	mov	w0, wzr
  40fbc4:	bl	41abd8 <outputs@@Base>
  40fbc8:	mov	x0, x19
  40fbcc:	mov	sp, x29
  40fbd0:	ldp	x20, x19, [sp, #64]
  40fbd4:	ldp	x22, x21, [sp, #48]
  40fbd8:	ldp	x24, x23, [sp, #32]
  40fbdc:	ldr	x25, [sp, #16]
  40fbe0:	ldp	x29, x30, [sp], #80
  40fbe4:	ret
  40fbe8:	cmp	w8, #0x65
  40fbec:	b.ne	40fc18 <hash_init_function_table@@Base+0x1c48>  // b.any
  40fbf0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  40fbf4:	ldr	x19, [x8, #1536]
  40fbf8:	mov	x0, x21
  40fbfc:	bl	406750 <strlen@plt>
  40fc00:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  40fc04:	mov	x1, x0
  40fc08:	add	x2, x2, #0x5b6
  40fc0c:	mov	x0, x19
  40fc10:	mov	x3, x21
  40fc14:	bl	41aff0 <fatal@@Base>
  40fc18:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  40fc1c:	ldr	x8, [x8, #1456]
  40fc20:	mov	x0, x20
  40fc24:	ldr	x19, [x8]
  40fc28:	bl	406750 <strlen@plt>
  40fc2c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  40fc30:	mov	x1, x0
  40fc34:	add	x2, x2, #0xc8a
  40fc38:	mov	x0, x19
  40fc3c:	mov	x3, x20
  40fc40:	bl	41aff0 <fatal@@Base>
  40fc44:	stp	x29, x30, [sp, #-48]!
  40fc48:	stp	x20, x19, [sp, #32]
  40fc4c:	str	x21, [sp, #16]
  40fc50:	ldr	x21, [x1]
  40fc54:	mov	x19, x0
  40fc58:	mov	x29, sp
  40fc5c:	mov	x20, x1
  40fc60:	mov	x0, x21
  40fc64:	bl	406750 <strlen@plt>
  40fc68:	add	x8, x21, x0
  40fc6c:	sub	x8, x8, #0x1
  40fc70:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  40fc74:	cmp	x8, x21
  40fc78:	add	x9, x9, #0xcf0
  40fc7c:	b.cc	40fcc4 <hash_init_function_table@@Base+0x1cf4>  // b.lo, b.ul, b.last
  40fc80:	ldrb	w10, [x21]
  40fc84:	ldrh	w10, [x9, x10, lsl #1]
  40fc88:	tst	w10, #0x6
  40fc8c:	b.eq	40fcc4 <hash_init_function_table@@Base+0x1cf4>  // b.none
  40fc90:	add	x11, x21, #0x1
  40fc94:	mov	x10, x11
  40fc98:	cmp	x11, x8
  40fc9c:	b.hi	40fcd4 <hash_init_function_table@@Base+0x1d04>  // b.pmore
  40fca0:	mov	x11, x10
  40fca4:	ldrb	w12, [x11], #1
  40fca8:	ldrh	w12, [x9, x12, lsl #1]
  40fcac:	tst	w12, #0x6
  40fcb0:	b.ne	40fc94 <hash_init_function_table@@Base+0x1cc4>  // b.any
  40fcb4:	sub	x21, x11, #0x1
  40fcb8:	cmp	x8, x10
  40fcbc:	b.cs	40fce0 <hash_init_function_table@@Base+0x1d10>  // b.hs, b.nlast
  40fcc0:	b	40fcfc <hash_init_function_table@@Base+0x1d2c>
  40fcc4:	mov	x10, x21
  40fcc8:	cmp	x8, x10
  40fccc:	b.cs	40fce0 <hash_init_function_table@@Base+0x1d10>  // b.hs, b.nlast
  40fcd0:	b	40fcfc <hash_init_function_table@@Base+0x1d2c>
  40fcd4:	mov	x21, x10
  40fcd8:	cmp	x8, x10
  40fcdc:	b.cc	40fcfc <hash_init_function_table@@Base+0x1d2c>  // b.lo, b.ul, b.last
  40fce0:	ldrb	w10, [x8]
  40fce4:	ldrh	w10, [x9, x10, lsl #1]
  40fce8:	tst	w10, #0x6
  40fcec:	b.eq	40fcfc <hash_init_function_table@@Base+0x1d2c>  // b.none
  40fcf0:	sub	x8, x8, #0x1
  40fcf4:	cmp	x8, x21
  40fcf8:	b.cs	40fce0 <hash_init_function_table@@Base+0x1d10>  // b.hs, b.nlast
  40fcfc:	cmp	x8, x21
  40fd00:	b.cs	40fd14 <hash_init_function_table@@Base+0x1d44>  // b.hs, b.nlast
  40fd04:	mov	w8, #0x2                   	// #2
  40fd08:	ldr	x0, [x20, x8, lsl #3]
  40fd0c:	cbnz	x0, 40fd3c <hash_init_function_table@@Base+0x1d6c>
  40fd10:	b	40fd68 <hash_init_function_table@@Base+0x1d98>
  40fd14:	add	x1, x8, #0x1
  40fd18:	mov	x0, x21
  40fd1c:	bl	40a594 <expand_argument@@Base>
  40fd20:	ldrb	w21, [x0]
  40fd24:	bl	406c60 <free@plt>
  40fd28:	cmp	w21, #0x0
  40fd2c:	mov	w8, #0x1                   	// #1
  40fd30:	cinc	x8, x8, eq  // eq = none
  40fd34:	ldr	x0, [x20, x8, lsl #3]
  40fd38:	cbz	x0, 40fd68 <hash_init_function_table@@Base+0x1d98>
  40fd3c:	mov	x1, xzr
  40fd40:	bl	40a594 <expand_argument@@Base>
  40fd44:	mov	x20, x0
  40fd48:	bl	406750 <strlen@plt>
  40fd4c:	mov	x2, x0
  40fd50:	mov	x0, x19
  40fd54:	mov	x1, x20
  40fd58:	bl	409d08 <variable_buffer_output@@Base>
  40fd5c:	mov	x19, x0
  40fd60:	mov	x0, x20
  40fd64:	bl	406c60 <free@plt>
  40fd68:	mov	x0, x19
  40fd6c:	ldp	x20, x19, [sp, #32]
  40fd70:	ldr	x21, [sp, #16]
  40fd74:	ldp	x29, x30, [sp], #48
  40fd78:	ret
  40fd7c:	stp	x29, x30, [sp, #-48]!
  40fd80:	stp	x22, x21, [sp, #16]
  40fd84:	stp	x20, x19, [sp, #32]
  40fd88:	ldr	x8, [x1]
  40fd8c:	mov	x19, x0
  40fd90:	mov	x29, sp
  40fd94:	cbz	x8, 40fe90 <hash_init_function_table@@Base+0x1ec0>
  40fd98:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  40fd9c:	mov	x20, x1
  40fda0:	add	x22, x22, #0xcf0
  40fda4:	b	40fdb0 <hash_init_function_table@@Base+0x1de0>
  40fda8:	ldr	x8, [x20, #8]!
  40fdac:	cbz	x8, 40fe90 <hash_init_function_table@@Base+0x1ec0>
  40fdb0:	ldr	x21, [x20]
  40fdb4:	mov	x0, x21
  40fdb8:	bl	406750 <strlen@plt>
  40fdbc:	add	x8, x21, x0
  40fdc0:	sub	x8, x8, #0x1
  40fdc4:	cmp	x8, x21
  40fdc8:	b.cc	40fe10 <hash_init_function_table@@Base+0x1e40>  // b.lo, b.ul, b.last
  40fdcc:	ldrb	w9, [x21]
  40fdd0:	ldrh	w9, [x22, x9, lsl #1]
  40fdd4:	tst	w9, #0x6
  40fdd8:	b.eq	40fe10 <hash_init_function_table@@Base+0x1e40>  // b.none
  40fddc:	add	x10, x21, #0x1
  40fde0:	mov	x9, x10
  40fde4:	cmp	x10, x8
  40fde8:	b.hi	40fe3c <hash_init_function_table@@Base+0x1e6c>  // b.pmore
  40fdec:	mov	x10, x9
  40fdf0:	ldrb	w11, [x10], #1
  40fdf4:	ldrh	w11, [x22, x11, lsl #1]
  40fdf8:	tst	w11, #0x6
  40fdfc:	b.ne	40fde0 <hash_init_function_table@@Base+0x1e10>  // b.any
  40fe00:	sub	x21, x10, #0x1
  40fe04:	cmp	x8, x9
  40fe08:	b.cs	40fe1c <hash_init_function_table@@Base+0x1e4c>  // b.hs, b.nlast
  40fe0c:	b	40fe48 <hash_init_function_table@@Base+0x1e78>
  40fe10:	mov	x9, x21
  40fe14:	cmp	x8, x9
  40fe18:	b.cc	40fe48 <hash_init_function_table@@Base+0x1e78>  // b.lo, b.ul, b.last
  40fe1c:	ldrb	w9, [x8]
  40fe20:	ldrh	w9, [x22, x9, lsl #1]
  40fe24:	tst	w9, #0x6
  40fe28:	b.eq	40fe48 <hash_init_function_table@@Base+0x1e78>  // b.none
  40fe2c:	sub	x8, x8, #0x1
  40fe30:	cmp	x8, x21
  40fe34:	b.cs	40fe1c <hash_init_function_table@@Base+0x1e4c>  // b.hs, b.nlast
  40fe38:	b	40fe48 <hash_init_function_table@@Base+0x1e78>
  40fe3c:	mov	x21, x9
  40fe40:	cmp	x8, x9
  40fe44:	b.cs	40fe1c <hash_init_function_table@@Base+0x1e4c>  // b.hs, b.nlast
  40fe48:	cmp	x8, x21
  40fe4c:	b.cc	40fda8 <hash_init_function_table@@Base+0x1dd8>  // b.lo, b.ul, b.last
  40fe50:	add	x1, x8, #0x1
  40fe54:	mov	x0, x21
  40fe58:	bl	40a594 <expand_argument@@Base>
  40fe5c:	mov	x21, x0
  40fe60:	bl	406750 <strlen@plt>
  40fe64:	cbnz	x0, 40fe74 <hash_init_function_table@@Base+0x1ea4>
  40fe68:	mov	x0, x21
  40fe6c:	bl	406c60 <free@plt>
  40fe70:	b	40fda8 <hash_init_function_table@@Base+0x1dd8>
  40fe74:	mov	x2, x0
  40fe78:	mov	x0, x19
  40fe7c:	mov	x1, x21
  40fe80:	bl	409d08 <variable_buffer_output@@Base>
  40fe84:	mov	x19, x0
  40fe88:	mov	x0, x21
  40fe8c:	bl	406c60 <free@plt>
  40fe90:	mov	x0, x19
  40fe94:	ldp	x20, x19, [sp, #32]
  40fe98:	ldp	x22, x21, [sp, #16]
  40fe9c:	ldp	x29, x30, [sp], #48
  40fea0:	ret
  40fea4:	stp	x29, x30, [sp, #-48]!
  40fea8:	stp	x22, x21, [sp, #16]
  40feac:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  40feb0:	stp	x20, x19, [sp, #32]
  40feb4:	mov	x20, x1
  40feb8:	mov	x19, x0
  40febc:	add	x22, x22, #0xcf0
  40fec0:	mov	x29, sp
  40fec4:	ldr	x21, [x20]
  40fec8:	mov	x0, x21
  40fecc:	bl	406750 <strlen@plt>
  40fed0:	add	x8, x21, x0
  40fed4:	sub	x8, x8, #0x1
  40fed8:	cmp	x8, x21
  40fedc:	b.cc	40ff24 <hash_init_function_table@@Base+0x1f54>  // b.lo, b.ul, b.last
  40fee0:	ldrb	w9, [x21]
  40fee4:	ldrh	w9, [x22, x9, lsl #1]
  40fee8:	tst	w9, #0x6
  40feec:	b.eq	40ff24 <hash_init_function_table@@Base+0x1f54>  // b.none
  40fef0:	add	x10, x21, #0x1
  40fef4:	mov	x9, x10
  40fef8:	cmp	x10, x8
  40fefc:	b.hi	40ff50 <hash_init_function_table@@Base+0x1f80>  // b.pmore
  40ff00:	mov	x10, x9
  40ff04:	ldrb	w11, [x10], #1
  40ff08:	ldrh	w11, [x22, x11, lsl #1]
  40ff0c:	tst	w11, #0x6
  40ff10:	b.ne	40fef4 <hash_init_function_table@@Base+0x1f24>  // b.any
  40ff14:	sub	x21, x10, #0x1
  40ff18:	cmp	x8, x9
  40ff1c:	b.cs	40ff30 <hash_init_function_table@@Base+0x1f60>  // b.hs, b.nlast
  40ff20:	b	40ff5c <hash_init_function_table@@Base+0x1f8c>
  40ff24:	mov	x9, x21
  40ff28:	cmp	x8, x9
  40ff2c:	b.cc	40ff5c <hash_init_function_table@@Base+0x1f8c>  // b.lo, b.ul, b.last
  40ff30:	ldrb	w9, [x8]
  40ff34:	ldrh	w9, [x22, x9, lsl #1]
  40ff38:	tst	w9, #0x6
  40ff3c:	b.eq	40ff5c <hash_init_function_table@@Base+0x1f8c>  // b.none
  40ff40:	sub	x8, x8, #0x1
  40ff44:	cmp	x8, x21
  40ff48:	b.cs	40ff30 <hash_init_function_table@@Base+0x1f60>  // b.hs, b.nlast
  40ff4c:	b	40ff5c <hash_init_function_table@@Base+0x1f8c>
  40ff50:	mov	x21, x9
  40ff54:	cmp	x8, x9
  40ff58:	b.cs	40ff30 <hash_init_function_table@@Base+0x1f60>  // b.hs, b.nlast
  40ff5c:	cmp	x8, x21
  40ff60:	b.cc	40ffac <hash_init_function_table@@Base+0x1fdc>  // b.lo, b.ul, b.last
  40ff64:	add	x1, x8, #0x1
  40ff68:	mov	x0, x21
  40ff6c:	bl	40a594 <expand_argument@@Base>
  40ff70:	mov	x21, x0
  40ff74:	bl	406750 <strlen@plt>
  40ff78:	cbz	x0, 40ffa4 <hash_init_function_table@@Base+0x1fd4>
  40ff7c:	ldr	x8, [x20, #8]!
  40ff80:	cbz	x8, 40ff90 <hash_init_function_table@@Base+0x1fc0>
  40ff84:	mov	x0, x21
  40ff88:	bl	406c60 <free@plt>
  40ff8c:	b	40fec4 <hash_init_function_table@@Base+0x1ef4>
  40ff90:	mov	x2, x0
  40ff94:	mov	x0, x19
  40ff98:	mov	x1, x21
  40ff9c:	bl	409d08 <variable_buffer_output@@Base>
  40ffa0:	mov	x19, x0
  40ffa4:	mov	x0, x21
  40ffa8:	bl	406c60 <free@plt>
  40ffac:	mov	x0, x19
  40ffb0:	ldp	x20, x19, [sp, #32]
  40ffb4:	ldp	x22, x21, [sp, #16]
  40ffb8:	ldp	x29, x30, [sp], #48
  40ffbc:	ret
  40ffc0:	stp	x29, x30, [sp, #-32]!
  40ffc4:	stp	x20, x19, [sp, #16]
  40ffc8:	ldr	x20, [x1]
  40ffcc:	mov	x19, x0
  40ffd0:	mov	x29, sp
  40ffd4:	mov	x0, x20
  40ffd8:	bl	406750 <strlen@plt>
  40ffdc:	mov	x1, x0
  40ffe0:	mov	x0, x20
  40ffe4:	bl	424110 <lookup_variable@@Base>
  40ffe8:	cbz	x0, 410010 <hash_init_function_table@@Base+0x2040>
  40ffec:	ldr	x20, [x0, #8]
  40fff0:	mov	x0, x20
  40fff4:	bl	406750 <strlen@plt>
  40fff8:	mov	x2, x0
  40fffc:	mov	x0, x19
  410000:	mov	x1, x20
  410004:	ldp	x20, x19, [sp, #16]
  410008:	ldp	x29, x30, [sp], #32
  41000c:	b	409d08 <variable_buffer_output@@Base>
  410010:	mov	x0, x19
  410014:	ldp	x20, x19, [sp, #16]
  410018:	ldp	x29, x30, [sp], #32
  41001c:	ret
  410020:	sub	sp, sp, #0x30
  410024:	stp	x20, x19, [sp, #32]
  410028:	mov	x19, x1
  41002c:	mov	x20, x0
  410030:	add	x0, sp, #0x8
  410034:	mov	x1, sp
  410038:	stp	x29, x30, [sp, #16]
  41003c:	add	x29, sp, #0x10
  410040:	bl	40a878 <install_variable_buffer@@Base>
  410044:	ldr	x0, [x19]
  410048:	mov	x1, xzr
  41004c:	bl	41ba40 <eval_buffer@@Base>
  410050:	ldp	x1, x0, [sp]
  410054:	bl	40a8c4 <restore_variable_buffer@@Base>
  410058:	mov	x0, x20
  41005c:	ldp	x20, x19, [sp, #32]
  410060:	ldp	x29, x30, [sp, #16]
  410064:	add	sp, sp, #0x30
  410068:	ret
  41006c:	stp	x29, x30, [sp, #-80]!
  410070:	str	x28, [sp, #16]
  410074:	stp	x24, x23, [sp, #32]
  410078:	stp	x22, x21, [sp, #48]
  41007c:	stp	x20, x19, [sp, #64]
  410080:	mov	x29, sp
  410084:	sub	sp, sp, #0x400
  410088:	ldr	x19, [x1]
  41008c:	mov	x22, x1
  410090:	mov	x20, x0
  410094:	ldrb	w8, [x19]
  410098:	cmp	w8, #0x3e
  41009c:	b.eq	410108 <hash_init_function_table@@Base+0x2138>  // b.none
  4100a0:	cmp	w8, #0x3c
  4100a4:	b.ne	410330 <hash_init_function_table@@Base+0x2360>  // b.any
  4100a8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4100ac:	add	x8, x8, #0xcf0
  4100b0:	ldrb	w9, [x19, #1]!
  4100b4:	ldrh	w10, [x8, x9, lsl #1]
  4100b8:	tst	w10, #0x6
  4100bc:	b.ne	4100b0 <hash_init_function_table@@Base+0x20e0>  // b.any
  4100c0:	cbz	w9, 410370 <hash_init_function_table@@Base+0x23a0>
  4100c4:	ldr	x8, [x22, #8]
  4100c8:	cbnz	x8, 4103b8 <hash_init_function_table@@Base+0x23e8>
  4100cc:	bl	406e70 <__errno_location@plt>
  4100d0:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x680>
  4100d4:	mov	x21, x0
  4100d8:	add	x22, x22, #0x76a
  4100dc:	mov	x0, x19
  4100e0:	mov	x1, x22
  4100e4:	str	wzr, [x21]
  4100e8:	bl	406970 <fopen@plt>
  4100ec:	cbnz	x0, 41025c <hash_init_function_table@@Base+0x228c>
  4100f0:	ldr	w23, [x21]
  4100f4:	cmp	w23, #0x2
  4100f8:	b.eq	41023c <hash_init_function_table@@Base+0x226c>  // b.none
  4100fc:	cmp	w23, #0x4
  410100:	b.eq	4100dc <hash_init_function_table@@Base+0x210c>  // b.none
  410104:	b	410174 <hash_init_function_table@@Base+0x21a4>
  410108:	ldrb	w8, [x19, #1]!
  41010c:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  410110:	add	x10, x10, #0xcf0
  410114:	cmp	w8, #0x3e
  410118:	cinc	x9, x19, eq  // eq = none
  41011c:	sub	x19, x9, #0x1
  410120:	ldrb	w9, [x19, #1]!
  410124:	ldrh	w11, [x10, x9, lsl #1]
  410128:	tst	w11, #0x6
  41012c:	b.ne	410120 <hash_init_function_table@@Base+0x2150>  // b.any
  410130:	adrp	x10, 42b000 <_IO_stdin_used@@Base+0x3680>
  410134:	adrp	x11, 428000 <_IO_stdin_used@@Base+0x680>
  410138:	add	x10, x10, #0x684
  41013c:	add	x11, x11, #0xa82
  410140:	cmp	w8, #0x3e
  410144:	csel	x24, x11, x10, eq  // eq = none
  410148:	cbz	w9, 410370 <hash_init_function_table@@Base+0x23a0>
  41014c:	bl	406e70 <__errno_location@plt>
  410150:	mov	x21, x0
  410154:	mov	x0, x19
  410158:	mov	x1, x24
  41015c:	str	wzr, [x21]
  410160:	bl	406970 <fopen@plt>
  410164:	cbnz	x0, 4101d4 <hash_init_function_table@@Base+0x2204>
  410168:	ldr	w23, [x21]
  41016c:	cmp	w23, #0x4
  410170:	b.eq	410154 <hash_init_function_table@@Base+0x2184>  // b.none
  410174:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  410178:	ldr	x20, [x8, #1536]
  41017c:	mov	x0, x19
  410180:	bl	406750 <strlen@plt>
  410184:	mov	x22, x0
  410188:	mov	w0, w23
  41018c:	bl	406b00 <strerror@plt>
  410190:	bl	406750 <strlen@plt>
  410194:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  410198:	add	x22, x0, x22
  41019c:	add	x1, x1, #0xcc2
  4101a0:	mov	w2, #0x5                   	// #5
  4101a4:	mov	x0, xzr
  4101a8:	bl	406dc0 <dcgettext@plt>
  4101ac:	ldr	w8, [x21]
  4101b0:	mov	x21, x0
  4101b4:	mov	w0, w8
  4101b8:	bl	406b00 <strerror@plt>
  4101bc:	mov	x4, x0
  4101c0:	mov	x0, x20
  4101c4:	mov	x1, x22
  4101c8:	mov	x2, x21
  4101cc:	mov	x3, x19
  4101d0:	bl	41aff0 <fatal@@Base>
  4101d4:	ldr	x22, [x22, #8]
  4101d8:	mov	x23, x0
  4101dc:	cbz	x22, 410230 <hash_init_function_table@@Base+0x2260>
  4101e0:	mov	x0, x22
  4101e4:	bl	406750 <strlen@plt>
  4101e8:	cbz	x0, 410200 <hash_init_function_table@@Base+0x2230>
  4101ec:	add	x8, x0, x22
  4101f0:	ldurb	w8, [x8, #-1]
  4101f4:	cmp	w8, #0xa
  4101f8:	cset	w24, ne  // ne = any
  4101fc:	b	410204 <hash_init_function_table@@Base+0x2234>
  410200:	mov	w24, #0x1                   	// #1
  410204:	mov	x0, x22
  410208:	mov	x1, x23
  41020c:	bl	406df0 <fputs_unlocked@plt>
  410210:	cmn	w0, #0x1
  410214:	b.eq	4103e8 <hash_init_function_table@@Base+0x2418>  // b.none
  410218:	cbz	w24, 410230 <hash_init_function_table@@Base+0x2260>
  41021c:	mov	w0, #0xa                   	// #10
  410220:	mov	x1, x23
  410224:	bl	406d90 <fputc_unlocked@plt>
  410228:	cmn	w0, #0x1
  41022c:	b.eq	4103e8 <hash_init_function_table@@Base+0x2418>  // b.none
  410230:	mov	x0, x23
  410234:	bl	406950 <fclose@plt>
  410238:	cbnz	w0, 410384 <hash_init_function_table@@Base+0x23b4>
  41023c:	mov	x0, x20
  410240:	add	sp, sp, #0x400
  410244:	ldp	x20, x19, [sp, #64]
  410248:	ldp	x22, x21, [sp, #48]
  41024c:	ldp	x24, x23, [sp, #32]
  410250:	ldr	x28, [sp, #16]
  410254:	ldp	x29, x30, [sp], #80
  410258:	ret
  41025c:	mov	x23, x0
  410260:	mov	x22, x20
  410264:	b	410274 <hash_init_function_table@@Base+0x22a4>
  410268:	mov	x0, x23
  41026c:	bl	406b90 <feof@plt>
  410270:	cbnz	w0, 4102e8 <hash_init_function_table@@Base+0x2318>
  410274:	mov	x0, sp
  410278:	mov	w1, #0x1                   	// #1
  41027c:	mov	w2, #0x400                 	// #1024
  410280:	mov	x3, x23
  410284:	bl	406bc0 <fread_unlocked@plt>
  410288:	cbz	x0, 4102a0 <hash_init_function_table@@Base+0x22d0>
  41028c:	mov	x2, x0
  410290:	mov	x1, sp
  410294:	mov	x0, x22
  410298:	bl	409d08 <variable_buffer_output@@Base>
  41029c:	mov	x22, x0
  4102a0:	mov	x0, x23
  4102a4:	bl	406f00 <ferror@plt>
  4102a8:	cbz	w0, 410268 <hash_init_function_table@@Base+0x2298>
  4102ac:	ldr	w24, [x21]
  4102b0:	cmp	w24, #0x4
  4102b4:	b.eq	410268 <hash_init_function_table@@Base+0x2298>  // b.none
  4102b8:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4102bc:	ldr	x20, [x8, #1536]
  4102c0:	mov	x0, x19
  4102c4:	bl	406750 <strlen@plt>
  4102c8:	mov	x22, x0
  4102cc:	mov	w0, w24
  4102d0:	bl	406b00 <strerror@plt>
  4102d4:	bl	406750 <strlen@plt>
  4102d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4102dc:	add	x22, x0, x22
  4102e0:	add	x1, x1, #0xd04
  4102e4:	b	4101a0 <hash_init_function_table@@Base+0x21d0>
  4102e8:	mov	x0, x23
  4102ec:	bl	406950 <fclose@plt>
  4102f0:	cbnz	w0, 410384 <hash_init_function_table@@Base+0x23b4>
  4102f4:	cmp	x22, x20
  4102f8:	b.ls	410328 <hash_init_function_table@@Base+0x2358>  // b.plast
  4102fc:	mov	x8, x22
  410300:	ldrb	w9, [x8, #-1]!
  410304:	cmp	w9, #0xa
  410308:	b.ne	410328 <hash_init_function_table@@Base+0x2358>  // b.any
  41030c:	cmp	x8, x20
  410310:	mov	x20, x8
  410314:	b.ls	41023c <hash_init_function_table@@Base+0x226c>  // b.plast
  410318:	ldrb	w9, [x22, #-2]!
  41031c:	cmp	w9, #0xd
  410320:	csel	x20, x22, x8, eq  // eq = none
  410324:	b	41023c <hash_init_function_table@@Base+0x226c>
  410328:	mov	x20, x22
  41032c:	b	41023c <hash_init_function_table@@Base+0x226c>
  410330:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  410334:	ldr	x8, [x8, #1456]
  410338:	mov	x0, x19
  41033c:	ldr	x20, [x8]
  410340:	bl	406750 <strlen@plt>
  410344:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  410348:	mov	x21, x0
  41034c:	add	x1, x1, #0xd11
  410350:	mov	w2, #0x5                   	// #5
  410354:	mov	x0, xzr
  410358:	bl	406dc0 <dcgettext@plt>
  41035c:	mov	x2, x0
  410360:	mov	x0, x20
  410364:	mov	x1, x21
  410368:	mov	x3, x19
  41036c:	bl	41aff0 <fatal@@Base>
  410370:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  410374:	ldr	x8, [x8, #1456]
  410378:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  41037c:	add	x1, x1, #0xcab
  410380:	b	4103c8 <hash_init_function_table@@Base+0x23f8>
  410384:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  410388:	ldr	x20, [x8, #1536]
  41038c:	mov	x0, x19
  410390:	bl	406750 <strlen@plt>
  410394:	ldr	w8, [x21]
  410398:	mov	x22, x0
  41039c:	mov	w0, w8
  4103a0:	bl	406b00 <strerror@plt>
  4103a4:	bl	406750 <strlen@plt>
  4103a8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4103ac:	add	x22, x0, x22
  4103b0:	add	x1, x1, #0xcdd
  4103b4:	b	4101a0 <hash_init_function_table@@Base+0x21d0>
  4103b8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4103bc:	ldr	x8, [x8, #1456]
  4103c0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4103c4:	add	x1, x1, #0xceb
  4103c8:	ldr	x19, [x8]
  4103cc:	mov	w2, #0x5                   	// #5
  4103d0:	mov	x0, xzr
  4103d4:	bl	406dc0 <dcgettext@plt>
  4103d8:	mov	x2, x0
  4103dc:	mov	x0, x19
  4103e0:	mov	x1, xzr
  4103e4:	bl	41aff0 <fatal@@Base>
  4103e8:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4103ec:	ldr	x20, [x8, #1536]
  4103f0:	mov	x0, x19
  4103f4:	bl	406750 <strlen@plt>
  4103f8:	ldr	w8, [x21]
  4103fc:	mov	x22, x0
  410400:	mov	w0, w8
  410404:	bl	406b00 <strerror@plt>
  410408:	bl	406750 <strlen@plt>
  41040c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  410410:	add	x22, x0, x22
  410414:	add	x1, x1, #0xccf
  410418:	b	4101a0 <hash_init_function_table@@Base+0x21d0>
  41041c:	stp	x29, x30, [sp, #-16]!
  410420:	ldr	x0, [x0, #16]
  410424:	mov	x29, sp
  410428:	bl	4112ec <jhash_string@@Base>
  41042c:	mov	w0, w0
  410430:	ldp	x29, x30, [sp], #16
  410434:	ret
  410438:	mov	x0, xzr
  41043c:	ret
  410440:	ldr	w9, [x0, #24]
  410444:	ldr	w10, [x1, #24]
  410448:	mov	x8, x0
  41044c:	subs	w0, w9, w10
  410450:	b.eq	410458 <hash_init_function_table@@Base+0x2488>  // b.none
  410454:	ret
  410458:	ldr	x0, [x8, #16]
  41045c:	ldr	x1, [x1, #16]
  410460:	cmp	x0, x1
  410464:	b.eq	41046c <hash_init_function_table@@Base+0x249c>  // b.none
  410468:	b	406c10 <strcmp@plt>
  41046c:	mov	w0, wzr
  410470:	ret
  410474:	stp	x29, x30, [sp, #-48]!
  410478:	stp	x22, x21, [sp, #16]
  41047c:	stp	x20, x19, [sp, #32]
  410480:	mov	x29, sp
  410484:	mov	x20, x1
  410488:	mov	x19, x0
  41048c:	bl	406750 <strlen@plt>
  410490:	add	x8, x19, x0
  410494:	sub	x8, x8, #0x1
  410498:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  41049c:	cmp	x8, x19
  4104a0:	add	x10, x10, #0xcf0
  4104a4:	mov	x9, x19
  4104a8:	b.cc	4104cc <hash_init_function_table@@Base+0x24fc>  // b.lo, b.ul, b.last
  4104ac:	mov	x9, x19
  4104b0:	ldrb	w11, [x9]
  4104b4:	ldrh	w11, [x10, x11, lsl #1]
  4104b8:	tst	w11, #0x6
  4104bc:	b.eq	4104cc <hash_init_function_table@@Base+0x24fc>  // b.none
  4104c0:	add	x9, x9, #0x1
  4104c4:	cmp	x9, x8
  4104c8:	b.ls	4104b0 <hash_init_function_table@@Base+0x24e0>  // b.plast
  4104cc:	cmp	x8, x9
  4104d0:	b.cc	410504 <hash_init_function_table@@Base+0x2534>  // b.lo, b.ul, b.last
  4104d4:	ldrb	w11, [x8]
  4104d8:	ldrh	w11, [x10, x11, lsl #1]
  4104dc:	tst	w11, #0x6
  4104e0:	b.eq	410504 <hash_init_function_table@@Base+0x2534>  // b.none
  4104e4:	sub	x8, x8, #0x1
  4104e8:	cmp	x8, x9
  4104ec:	b.cs	4104d4 <hash_init_function_table@@Base+0x2504>  // b.hs, b.nlast
  4104f0:	b	410504 <hash_init_function_table@@Base+0x2534>
  4104f4:	ldrb	w10, [x9], #1
  4104f8:	sub	w10, w10, #0x30
  4104fc:	cmp	w10, #0xa
  410500:	b.cs	410524 <hash_init_function_table@@Base+0x2554>  // b.hs, b.nlast
  410504:	cmp	x9, x8
  410508:	b.ls	4104f4 <hash_init_function_table@@Base+0x2524>  // b.plast
  41050c:	cmp	x8, x19
  410510:	b.mi	410524 <hash_init_function_table@@Base+0x2554>  // b.first
  410514:	ldp	x20, x19, [sp, #32]
  410518:	ldp	x22, x21, [sp, #16]
  41051c:	ldp	x29, x30, [sp], #48
  410520:	ret
  410524:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  410528:	ldr	x8, [x8, #1456]
  41052c:	mov	x22, x0
  410530:	mov	x0, x20
  410534:	ldr	x21, [x8]
  410538:	bl	406750 <strlen@plt>
  41053c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  410540:	add	x1, x0, x22
  410544:	add	x2, x2, #0xba8
  410548:	mov	x0, x21
  41054c:	mov	x3, x20
  410550:	mov	x4, x19
  410554:	bl	41aff0 <fatal@@Base>

0000000000410558 <guile_gmake_setup@@Base>:
  410558:	mov	w0, #0x1                   	// #1
  41055c:	ret

0000000000410560 <hash_init@@Base>:
  410560:	stp	x29, x30, [sp, #-48]!
  410564:	orr	x8, x1, x1, lsr #1
  410568:	orr	x8, x8, x8, lsr #2
  41056c:	orr	x8, x8, x8, lsr #4
  410570:	orr	x8, x8, x8, lsr #8
  410574:	orr	x8, x8, x8, lsr #16
  410578:	orr	x8, x8, x8, lsr #32
  41057c:	add	x8, x8, #0x1
  410580:	stp	x22, x21, [sp, #16]
  410584:	stp	x20, x19, [sp, #32]
  410588:	mov	x19, x0
  41058c:	str	x8, [x0, #32]
  410590:	str	x8, [x0, #56]
  410594:	lsl	x0, x8, #3
  410598:	mov	x29, sp
  41059c:	mov	x20, x4
  4105a0:	mov	x21, x3
  4105a4:	mov	x22, x2
  4105a8:	bl	419e38 <xcalloc@@Base>
  4105ac:	str	x0, [x19]
  4105b0:	cbz	x0, 4105e0 <hash_init@@Base+0x80>
  4105b4:	ldr	x8, [x19, #32]
  4105b8:	stp	xzr, xzr, [x19, #64]
  4105bc:	str	wzr, [x19, #80]
  4105c0:	stp	x22, x21, [x19, #8]
  4105c4:	sub	x8, x8, x8, lsr #4
  4105c8:	stp	x8, xzr, [x19, #40]
  4105cc:	str	x20, [x19, #24]
  4105d0:	ldp	x20, x19, [sp, #32]
  4105d4:	ldp	x22, x21, [sp, #16]
  4105d8:	ldp	x29, x30, [sp], #48
  4105dc:	ret
  4105e0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4105e4:	ldr	x20, [x8, #2480]
  4105e8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4105ec:	add	x1, x1, #0xd32
  4105f0:	mov	w2, #0x5                   	// #5
  4105f4:	bl	406dc0 <dcgettext@plt>
  4105f8:	ldr	x8, [x19, #32]
  4105fc:	mov	x1, x0
  410600:	mov	x0, x20
  410604:	lsl	x2, x8, #3
  410608:	bl	406ed0 <fprintf@plt>
  41060c:	mov	w0, #0x1                   	// #1
  410610:	bl	406770 <exit@plt>

0000000000410614 <hash_load@@Base>:
  410614:	stp	x29, x30, [sp, #-48]!
  410618:	stp	x22, x21, [sp, #16]
  41061c:	stp	x20, x19, [sp, #32]
  410620:	mov	x29, sp
  410624:	cbz	x2, 410650 <hash_load@@Base+0x3c>
  410628:	mov	x19, x3
  41062c:	mov	x20, x2
  410630:	mov	x21, x1
  410634:	mov	x22, x0
  410638:	mov	x0, x22
  41063c:	mov	x1, x21
  410640:	sub	x20, x20, #0x1
  410644:	bl	410660 <hash_insert@@Base>
  410648:	add	x21, x21, x19
  41064c:	cbnz	x20, 410638 <hash_load@@Base+0x24>
  410650:	ldp	x20, x19, [sp, #32]
  410654:	ldp	x22, x21, [sp, #16]
  410658:	ldp	x29, x30, [sp], #48
  41065c:	ret

0000000000410660 <hash_insert@@Base>:
  410660:	stp	x29, x30, [sp, #-80]!
  410664:	stp	x24, x23, [sp, #32]
  410668:	stp	x22, x21, [sp, #48]
  41066c:	stp	x20, x19, [sp, #64]
  410670:	ldr	x8, [x0, #8]
  410674:	mov	x19, x0
  410678:	mov	x0, x1
  41067c:	str	x25, [sp, #16]
  410680:	mov	x29, sp
  410684:	mov	x20, x1
  410688:	blr	x8
  41068c:	ldr	w9, [x19, #32]
  410690:	ldr	x8, [x19, #72]
  410694:	ldr	x10, [x19]
  410698:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  41069c:	sub	w9, w9, #0x1
  4106a0:	add	x8, x8, #0x1
  4106a4:	and	w23, w9, w0
  4106a8:	str	x8, [x19, #72]
  4106ac:	add	x21, x10, w23, uxtw #3
  4106b0:	ldr	x1, [x21]
  4106b4:	cbz	x1, 41073c <hash_insert@@Base+0xdc>
  4106b8:	mov	w25, wzr
  4106bc:	mov	x24, xzr
  4106c0:	b	4106e4 <hash_insert@@Base+0x84>
  4106c4:	ldr	w8, [x19, #32]
  4106c8:	ldr	x9, [x19]
  4106cc:	add	w10, w25, w23
  4106d0:	sub	w8, w8, #0x1
  4106d4:	and	w23, w8, w10
  4106d8:	add	x21, x9, w23, uxtw #3
  4106dc:	ldr	x1, [x21]
  4106e0:	cbz	x1, 410740 <hash_insert@@Base+0xe0>
  4106e4:	ldr	x8, [x22, #2328]
  4106e8:	cmp	x1, x8
  4106ec:	b.eq	41071c <hash_insert@@Base+0xbc>  // b.none
  4106f0:	cmp	x1, x20
  4106f4:	b.eq	410748 <hash_insert@@Base+0xe8>  // b.none
  4106f8:	ldr	x8, [x19, #24]
  4106fc:	mov	x0, x20
  410700:	blr	x8
  410704:	cbz	w0, 410748 <hash_insert@@Base+0xe8>
  410708:	ldr	x8, [x19, #64]
  41070c:	add	x8, x8, #0x1
  410710:	str	x8, [x19, #64]
  410714:	cbnz	w25, 4106c4 <hash_insert@@Base+0x64>
  410718:	b	410728 <hash_insert@@Base+0xc8>
  41071c:	cmp	x24, #0x0
  410720:	csel	x24, x21, x24, eq  // eq = none
  410724:	cbnz	w25, 4106c4 <hash_insert@@Base+0x64>
  410728:	ldr	x8, [x19, #16]
  41072c:	mov	x0, x20
  410730:	blr	x8
  410734:	orr	w25, w0, #0x1
  410738:	b	4106c4 <hash_insert@@Base+0x64>
  41073c:	mov	x24, xzr
  410740:	cmp	x24, #0x0
  410744:	csel	x21, x21, x24, eq  // eq = none
  410748:	ldr	x23, [x21]
  41074c:	mov	x0, x19
  410750:	mov	x1, x20
  410754:	mov	x2, x21
  410758:	bl	41099c <hash_insert_at@@Base>
  41075c:	ldr	x8, [x22, #2328]
  410760:	ldp	x20, x19, [sp, #64]
  410764:	ldp	x22, x21, [sp, #48]
  410768:	ldr	x25, [sp, #16]
  41076c:	cmp	x23, x8
  410770:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  410774:	csel	x0, xzr, x23, eq  // eq = none
  410778:	ldp	x24, x23, [sp, #32]
  41077c:	ldp	x29, x30, [sp], #80
  410780:	ret

0000000000410784 <hash_find_slot@@Base>:
  410784:	stp	x29, x30, [sp, #-80]!
  410788:	stp	x24, x23, [sp, #32]
  41078c:	stp	x22, x21, [sp, #48]
  410790:	stp	x20, x19, [sp, #64]
  410794:	ldr	x8, [x0, #8]
  410798:	mov	x19, x0
  41079c:	mov	x0, x1
  4107a0:	str	x25, [sp, #16]
  4107a4:	mov	x29, sp
  4107a8:	mov	x20, x1
  4107ac:	blr	x8
  4107b0:	ldr	w9, [x19, #32]
  4107b4:	ldr	x8, [x19, #72]
  4107b8:	ldr	x10, [x19]
  4107bc:	sub	w9, w9, #0x1
  4107c0:	add	x8, x8, #0x1
  4107c4:	and	w23, w9, w0
  4107c8:	str	x8, [x19, #72]
  4107cc:	add	x21, x10, w23, uxtw #3
  4107d0:	ldr	x1, [x21]
  4107d4:	cbz	x1, 410860 <hash_find_slot@@Base+0xdc>
  4107d8:	mov	w25, wzr
  4107dc:	mov	x22, xzr
  4107e0:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  4107e4:	b	410808 <hash_find_slot@@Base+0x84>
  4107e8:	ldr	w8, [x19, #32]
  4107ec:	ldr	x9, [x19]
  4107f0:	add	w10, w25, w23
  4107f4:	sub	w8, w8, #0x1
  4107f8:	and	w23, w8, w10
  4107fc:	add	x21, x9, w23, uxtw #3
  410800:	ldr	x1, [x21]
  410804:	cbz	x1, 410864 <hash_find_slot@@Base+0xe0>
  410808:	ldr	x8, [x24, #2328]
  41080c:	cmp	x1, x8
  410810:	b.eq	410840 <hash_find_slot@@Base+0xbc>  // b.none
  410814:	cmp	x1, x20
  410818:	b.eq	41086c <hash_find_slot@@Base+0xe8>  // b.none
  41081c:	ldr	x8, [x19, #24]
  410820:	mov	x0, x20
  410824:	blr	x8
  410828:	cbz	w0, 41086c <hash_find_slot@@Base+0xe8>
  41082c:	ldr	x8, [x19, #64]
  410830:	add	x8, x8, #0x1
  410834:	str	x8, [x19, #64]
  410838:	cbnz	w25, 4107e8 <hash_find_slot@@Base+0x64>
  41083c:	b	41084c <hash_find_slot@@Base+0xc8>
  410840:	cmp	x22, #0x0
  410844:	csel	x22, x21, x22, eq  // eq = none
  410848:	cbnz	w25, 4107e8 <hash_find_slot@@Base+0x64>
  41084c:	ldr	x8, [x19, #16]
  410850:	mov	x0, x20
  410854:	blr	x8
  410858:	orr	w25, w0, #0x1
  41085c:	b	4107e8 <hash_find_slot@@Base+0x64>
  410860:	mov	x22, xzr
  410864:	cmp	x22, #0x0
  410868:	csel	x21, x21, x22, eq  // eq = none
  41086c:	mov	x0, x21
  410870:	ldp	x20, x19, [sp, #64]
  410874:	ldp	x22, x21, [sp, #48]
  410878:	ldp	x24, x23, [sp, #32]
  41087c:	ldr	x25, [sp, #16]
  410880:	ldp	x29, x30, [sp], #80
  410884:	ret

0000000000410888 <hash_find_item@@Base>:
  410888:	stp	x29, x30, [sp, #-80]!
  41088c:	stp	x24, x23, [sp, #32]
  410890:	stp	x22, x21, [sp, #48]
  410894:	stp	x20, x19, [sp, #64]
  410898:	ldr	x8, [x0, #8]
  41089c:	mov	x19, x0
  4108a0:	mov	x0, x1
  4108a4:	str	x25, [sp, #16]
  4108a8:	mov	x29, sp
  4108ac:	mov	x20, x1
  4108b0:	blr	x8
  4108b4:	ldr	w9, [x19, #32]
  4108b8:	ldr	x8, [x19, #72]
  4108bc:	ldr	x10, [x19]
  4108c0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4108c4:	sub	w9, w9, #0x1
  4108c8:	add	x8, x8, #0x1
  4108cc:	and	w22, w9, w0
  4108d0:	str	x8, [x19, #72]
  4108d4:	add	x24, x10, w22, uxtw #3
  4108d8:	ldr	x1, [x24]
  4108dc:	cbz	x1, 410964 <hash_find_item@@Base+0xdc>
  4108e0:	mov	w25, wzr
  4108e4:	mov	x23, xzr
  4108e8:	b	41090c <hash_find_item@@Base+0x84>
  4108ec:	ldr	w8, [x19, #32]
  4108f0:	ldr	x9, [x19]
  4108f4:	add	w10, w25, w22
  4108f8:	sub	w8, w8, #0x1
  4108fc:	and	w22, w8, w10
  410900:	add	x24, x9, w22, uxtw #3
  410904:	ldr	x1, [x24]
  410908:	cbz	x1, 410968 <hash_find_item@@Base+0xe0>
  41090c:	ldr	x8, [x21, #2328]
  410910:	cmp	x1, x8
  410914:	b.eq	410944 <hash_find_item@@Base+0xbc>  // b.none
  410918:	cmp	x1, x20
  41091c:	b.eq	410970 <hash_find_item@@Base+0xe8>  // b.none
  410920:	ldr	x8, [x19, #24]
  410924:	mov	x0, x20
  410928:	blr	x8
  41092c:	cbz	w0, 410970 <hash_find_item@@Base+0xe8>
  410930:	ldr	x8, [x19, #64]
  410934:	add	x8, x8, #0x1
  410938:	str	x8, [x19, #64]
  41093c:	cbnz	w25, 4108ec <hash_find_item@@Base+0x64>
  410940:	b	410950 <hash_find_item@@Base+0xc8>
  410944:	cmp	x23, #0x0
  410948:	csel	x23, x24, x23, eq  // eq = none
  41094c:	cbnz	w25, 4108ec <hash_find_item@@Base+0x64>
  410950:	ldr	x8, [x19, #16]
  410954:	mov	x0, x20
  410958:	blr	x8
  41095c:	orr	w25, w0, #0x1
  410960:	b	4108ec <hash_find_item@@Base+0x64>
  410964:	mov	x23, xzr
  410968:	cmp	x23, #0x0
  41096c:	csel	x24, x24, x23, eq  // eq = none
  410970:	ldr	x8, [x24]
  410974:	ldr	x9, [x21, #2328]
  410978:	ldp	x20, x19, [sp, #64]
  41097c:	ldp	x22, x21, [sp, #48]
  410980:	ldp	x24, x23, [sp, #32]
  410984:	ldr	x25, [sp, #16]
  410988:	cmp	x8, x9
  41098c:	ccmp	x8, #0x0, #0x4, ne  // ne = any
  410990:	csel	x0, xzr, x8, eq  // eq = none
  410994:	ldp	x29, x30, [sp], #80
  410998:	ret

000000000041099c <hash_insert_at@@Base>:
  41099c:	sub	sp, sp, #0x70
  4109a0:	stp	x29, x30, [sp, #16]
  4109a4:	stp	x28, x27, [sp, #32]
  4109a8:	stp	x26, x25, [sp, #48]
  4109ac:	stp	x24, x23, [sp, #64]
  4109b0:	stp	x22, x21, [sp, #80]
  4109b4:	stp	x20, x19, [sp, #96]
  4109b8:	ldr	x8, [x2]
  4109bc:	mov	x21, x2
  4109c0:	mov	x19, x1
  4109c4:	mov	x20, x0
  4109c8:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  4109cc:	add	x29, sp, #0x10
  4109d0:	cbz	x8, 4109e0 <hash_insert_at@@Base+0x44>
  4109d4:	ldr	x9, [x23, #2328]
  4109d8:	cmp	x8, x9
  4109dc:	b.ne	4109fc <hash_insert_at@@Base+0x60>  // b.any
  4109e0:	ldr	x9, [x20, #48]
  4109e4:	add	x9, x9, #0x1
  4109e8:	str	x9, [x20, #48]
  4109ec:	cbnz	x8, 4109fc <hash_insert_at@@Base+0x60>
  4109f0:	ldr	x8, [x20, #56]
  4109f4:	sub	x8, x8, #0x1
  4109f8:	str	x8, [x20, #56]
  4109fc:	str	x19, [x21]
  410a00:	ldp	x22, x8, [x20, #32]
  410a04:	ldr	x9, [x20, #56]
  410a08:	sub	x10, x22, x8
  410a0c:	cmp	x9, x10
  410a10:	b.cs	410c30 <hash_insert_at@@Base+0x294>  // b.hs, b.nlast
  410a14:	ldr	x9, [x20, #48]
  410a18:	ldr	x10, [x20]
  410a1c:	cmp	x9, x8
  410a20:	mov	x8, x22
  410a24:	str	x10, [sp, #8]
  410a28:	b.cc	410a3c <hash_insert_at@@Base+0xa0>  // b.lo, b.ul, b.last
  410a2c:	lsl	x8, x22, #1
  410a30:	ubfx	x9, x22, #3, #60
  410a34:	sub	x9, x8, x9
  410a38:	stp	x8, x9, [x20, #32]
  410a3c:	ldr	w9, [x20, #80]
  410a40:	lsl	x0, x8, #3
  410a44:	add	w9, w9, #0x1
  410a48:	str	w9, [x20, #80]
  410a4c:	bl	419e38 <xcalloc@@Base>
  410a50:	cmp	x22, #0x1
  410a54:	str	x0, [x20]
  410a58:	b.lt	410b54 <hash_insert_at@@Base+0x1b8>  // b.tstop
  410a5c:	ldr	x25, [sp, #8]
  410a60:	add	x24, x25, x22, lsl #3
  410a64:	b	410a88 <hash_insert_at@@Base+0xec>
  410a68:	mov	x27, xzr
  410a6c:	cmp	x27, #0x0
  410a70:	csel	x28, x28, x27, eq  // eq = none
  410a74:	ldr	x8, [x25]
  410a78:	str	x8, [x28]
  410a7c:	add	x25, x25, #0x8
  410a80:	cmp	x25, x24
  410a84:	b.cs	410b54 <hash_insert_at@@Base+0x1b8>  // b.hs, b.nlast
  410a88:	ldr	x22, [x25]
  410a8c:	cbz	x22, 410a7c <hash_insert_at@@Base+0xe0>
  410a90:	ldr	x8, [x23, #2328]
  410a94:	cmp	x22, x8
  410a98:	b.eq	410a7c <hash_insert_at@@Base+0xe0>  // b.none
  410a9c:	ldr	x8, [x20, #8]
  410aa0:	mov	x0, x22
  410aa4:	blr	x8
  410aa8:	ldr	w9, [x20, #32]
  410aac:	ldr	x8, [x20, #72]
  410ab0:	ldr	x10, [x20]
  410ab4:	sub	w9, w9, #0x1
  410ab8:	add	x8, x8, #0x1
  410abc:	and	w26, w9, w0
  410ac0:	str	x8, [x20, #72]
  410ac4:	add	x28, x10, w26, uxtw #3
  410ac8:	ldr	x1, [x28]
  410acc:	cbz	x1, 410a68 <hash_insert_at@@Base+0xcc>
  410ad0:	mov	w21, wzr
  410ad4:	mov	x27, xzr
  410ad8:	b	410afc <hash_insert_at@@Base+0x160>
  410adc:	ldr	w8, [x20, #32]
  410ae0:	ldr	x9, [x20]
  410ae4:	add	w10, w21, w26
  410ae8:	sub	w8, w8, #0x1
  410aec:	and	w26, w8, w10
  410af0:	add	x28, x9, w26, uxtw #3
  410af4:	ldr	x1, [x28]
  410af8:	cbz	x1, 410a6c <hash_insert_at@@Base+0xd0>
  410afc:	ldr	x8, [x23, #2328]
  410b00:	cmp	x1, x8
  410b04:	b.eq	410b34 <hash_insert_at@@Base+0x198>  // b.none
  410b08:	cmp	x1, x22
  410b0c:	b.eq	410a74 <hash_insert_at@@Base+0xd8>  // b.none
  410b10:	ldr	x8, [x20, #24]
  410b14:	mov	x0, x22
  410b18:	blr	x8
  410b1c:	cbz	w0, 410a74 <hash_insert_at@@Base+0xd8>
  410b20:	ldr	x8, [x20, #64]
  410b24:	add	x8, x8, #0x1
  410b28:	str	x8, [x20, #64]
  410b2c:	cbnz	w21, 410adc <hash_insert_at@@Base+0x140>
  410b30:	b	410b40 <hash_insert_at@@Base+0x1a4>
  410b34:	cmp	x27, #0x0
  410b38:	csel	x27, x28, x27, eq  // eq = none
  410b3c:	cbnz	w21, 410adc <hash_insert_at@@Base+0x140>
  410b40:	ldr	x8, [x20, #16]
  410b44:	mov	x0, x22
  410b48:	blr	x8
  410b4c:	orr	w21, w0, #0x1
  410b50:	b	410adc <hash_insert_at@@Base+0x140>
  410b54:	ldr	x8, [x20, #32]
  410b58:	ldr	x9, [x20, #48]
  410b5c:	ldr	x0, [sp, #8]
  410b60:	sub	x8, x8, x9
  410b64:	str	x8, [x20, #56]
  410b68:	bl	406c60 <free@plt>
  410b6c:	ldr	x8, [x20, #8]
  410b70:	mov	x0, x19
  410b74:	blr	x8
  410b78:	ldr	w9, [x20, #32]
  410b7c:	ldr	x8, [x20, #72]
  410b80:	ldr	x10, [x20]
  410b84:	sub	w9, w9, #0x1
  410b88:	add	x8, x8, #0x1
  410b8c:	and	w22, w9, w0
  410b90:	str	x8, [x20, #72]
  410b94:	add	x21, x10, w22, uxtw #3
  410b98:	ldr	x1, [x21]
  410b9c:	cbz	x1, 410c24 <hash_insert_at@@Base+0x288>
  410ba0:	mov	w25, wzr
  410ba4:	mov	x24, xzr
  410ba8:	b	410bcc <hash_insert_at@@Base+0x230>
  410bac:	ldr	w8, [x20, #32]
  410bb0:	ldr	x9, [x20]
  410bb4:	add	w10, w25, w22
  410bb8:	sub	w8, w8, #0x1
  410bbc:	and	w22, w8, w10
  410bc0:	add	x21, x9, w22, uxtw #3
  410bc4:	ldr	x1, [x21]
  410bc8:	cbz	x1, 410c28 <hash_insert_at@@Base+0x28c>
  410bcc:	ldr	x8, [x23, #2328]
  410bd0:	cmp	x1, x8
  410bd4:	b.eq	410c04 <hash_insert_at@@Base+0x268>  // b.none
  410bd8:	cmp	x1, x19
  410bdc:	b.eq	410c30 <hash_insert_at@@Base+0x294>  // b.none
  410be0:	ldr	x8, [x20, #24]
  410be4:	mov	x0, x19
  410be8:	blr	x8
  410bec:	cbz	w0, 410c30 <hash_insert_at@@Base+0x294>
  410bf0:	ldr	x8, [x20, #64]
  410bf4:	add	x8, x8, #0x1
  410bf8:	str	x8, [x20, #64]
  410bfc:	cbnz	w25, 410bac <hash_insert_at@@Base+0x210>
  410c00:	b	410c10 <hash_insert_at@@Base+0x274>
  410c04:	cmp	x24, #0x0
  410c08:	csel	x24, x21, x24, eq  // eq = none
  410c0c:	cbnz	w25, 410bac <hash_insert_at@@Base+0x210>
  410c10:	ldr	x8, [x20, #16]
  410c14:	mov	x0, x19
  410c18:	blr	x8
  410c1c:	orr	w25, w0, #0x1
  410c20:	b	410bac <hash_insert_at@@Base+0x210>
  410c24:	mov	x24, xzr
  410c28:	cmp	x24, #0x0
  410c2c:	csel	x21, x21, x24, eq  // eq = none
  410c30:	mov	x0, x21
  410c34:	ldp	x20, x19, [sp, #96]
  410c38:	ldp	x22, x21, [sp, #80]
  410c3c:	ldp	x24, x23, [sp, #64]
  410c40:	ldp	x26, x25, [sp, #48]
  410c44:	ldp	x28, x27, [sp, #32]
  410c48:	ldp	x29, x30, [sp, #16]
  410c4c:	add	sp, sp, #0x70
  410c50:	ret

0000000000410c54 <hash_delete@@Base>:
  410c54:	stp	x29, x30, [sp, #-80]!
  410c58:	stp	x24, x23, [sp, #32]
  410c5c:	stp	x22, x21, [sp, #48]
  410c60:	stp	x20, x19, [sp, #64]
  410c64:	ldr	x8, [x0, #8]
  410c68:	mov	x19, x0
  410c6c:	mov	x0, x1
  410c70:	str	x25, [sp, #16]
  410c74:	mov	x29, sp
  410c78:	mov	x20, x1
  410c7c:	blr	x8
  410c80:	ldr	w9, [x19, #32]
  410c84:	ldr	x8, [x19, #72]
  410c88:	ldr	x10, [x19]
  410c8c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  410c90:	sub	w9, w9, #0x1
  410c94:	add	x8, x8, #0x1
  410c98:	and	w22, w9, w0
  410c9c:	str	x8, [x19, #72]
  410ca0:	add	x23, x10, w22, uxtw #3
  410ca4:	ldr	x1, [x23]
  410ca8:	cbz	x1, 410d30 <hash_delete@@Base+0xdc>
  410cac:	mov	w25, wzr
  410cb0:	mov	x24, xzr
  410cb4:	b	410cd8 <hash_delete@@Base+0x84>
  410cb8:	ldr	w8, [x19, #32]
  410cbc:	ldr	x9, [x19]
  410cc0:	add	w10, w25, w22
  410cc4:	sub	w8, w8, #0x1
  410cc8:	and	w22, w8, w10
  410ccc:	add	x23, x9, w22, uxtw #3
  410cd0:	ldr	x1, [x23]
  410cd4:	cbz	x1, 410d34 <hash_delete@@Base+0xe0>
  410cd8:	ldr	x8, [x21, #2328]
  410cdc:	cmp	x1, x8
  410ce0:	b.eq	410d10 <hash_delete@@Base+0xbc>  // b.none
  410ce4:	cmp	x1, x20
  410ce8:	b.eq	410d3c <hash_delete@@Base+0xe8>  // b.none
  410cec:	ldr	x8, [x19, #24]
  410cf0:	mov	x0, x20
  410cf4:	blr	x8
  410cf8:	cbz	w0, 410d3c <hash_delete@@Base+0xe8>
  410cfc:	ldr	x8, [x19, #64]
  410d00:	add	x8, x8, #0x1
  410d04:	str	x8, [x19, #64]
  410d08:	cbnz	w25, 410cb8 <hash_delete@@Base+0x64>
  410d0c:	b	410d1c <hash_delete@@Base+0xc8>
  410d10:	cmp	x24, #0x0
  410d14:	csel	x24, x23, x24, eq  // eq = none
  410d18:	cbnz	w25, 410cb8 <hash_delete@@Base+0x64>
  410d1c:	ldr	x8, [x19, #16]
  410d20:	mov	x0, x20
  410d24:	blr	x8
  410d28:	orr	w25, w0, #0x1
  410d2c:	b	410cb8 <hash_delete@@Base+0x64>
  410d30:	mov	x24, xzr
  410d34:	cmp	x24, #0x0
  410d38:	csel	x23, x23, x24, eq  // eq = none
  410d3c:	ldr	x0, [x23]
  410d40:	cbz	x0, 410d68 <hash_delete@@Base+0x114>
  410d44:	ldr	x8, [x21, #2328]
  410d48:	cmp	x0, x8
  410d4c:	b.eq	410d64 <hash_delete@@Base+0x110>  // b.none
  410d50:	str	x8, [x23]
  410d54:	ldr	x8, [x19, #48]
  410d58:	sub	x8, x8, #0x1
  410d5c:	str	x8, [x19, #48]
  410d60:	b	410d68 <hash_delete@@Base+0x114>
  410d64:	mov	x0, xzr
  410d68:	ldp	x20, x19, [sp, #64]
  410d6c:	ldp	x22, x21, [sp, #48]
  410d70:	ldp	x24, x23, [sp, #32]
  410d74:	ldr	x25, [sp, #16]
  410d78:	ldp	x29, x30, [sp], #80
  410d7c:	ret

0000000000410d80 <hash_delete_at@@Base>:
  410d80:	ldr	x8, [x1]
  410d84:	cbz	x8, 410da8 <hash_delete_at@@Base+0x28>
  410d88:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  410d8c:	ldr	x9, [x9, #2328]
  410d90:	cmp	x8, x9
  410d94:	b.eq	410db0 <hash_delete_at@@Base+0x30>  // b.none
  410d98:	str	x9, [x1]
  410d9c:	ldr	x9, [x0, #48]
  410da0:	sub	x9, x9, #0x1
  410da4:	str	x9, [x0, #48]
  410da8:	mov	x0, x8
  410dac:	ret
  410db0:	mov	x0, xzr
  410db4:	ret

0000000000410db8 <hash_free_items@@Base>:
  410db8:	stp	x29, x30, [sp, #-48]!
  410dbc:	stp	x22, x21, [sp, #16]
  410dc0:	stp	x20, x19, [sp, #32]
  410dc4:	ldr	x8, [x0, #32]
  410dc8:	mov	x19, x0
  410dcc:	mov	x29, sp
  410dd0:	cmp	x8, #0x1
  410dd4:	b.lt	410e14 <hash_free_items@@Base+0x5c>  // b.tstop
  410dd8:	ldr	x20, [x19]
  410ddc:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  410de0:	add	x21, x20, x8, lsl #3
  410de4:	b	410df4 <hash_free_items@@Base+0x3c>
  410de8:	str	xzr, [x20], #8
  410dec:	cmp	x20, x21
  410df0:	b.cs	410e10 <hash_free_items@@Base+0x58>  // b.hs, b.nlast
  410df4:	ldr	x0, [x20]
  410df8:	cbz	x0, 410de8 <hash_free_items@@Base+0x30>
  410dfc:	ldr	x8, [x22, #2328]
  410e00:	cmp	x0, x8
  410e04:	b.eq	410de8 <hash_free_items@@Base+0x30>  // b.none
  410e08:	bl	406c60 <free@plt>
  410e0c:	b	410de8 <hash_free_items@@Base+0x30>
  410e10:	ldr	x8, [x19, #32]
  410e14:	stp	xzr, x8, [x19, #48]
  410e18:	ldp	x20, x19, [sp, #32]
  410e1c:	ldp	x22, x21, [sp, #16]
  410e20:	ldp	x29, x30, [sp], #48
  410e24:	ret

0000000000410e28 <hash_delete_items@@Base>:
  410e28:	stp	x29, x30, [sp, #-32]!
  410e2c:	stp	x20, x19, [sp, #16]
  410e30:	ldr	x20, [x0, #32]
  410e34:	mov	x19, x0
  410e38:	mov	x29, sp
  410e3c:	cmp	x20, #0x1
  410e40:	b.lt	410e70 <hash_delete_items@@Base+0x48>  // b.tstop
  410e44:	ldr	x0, [x19]
  410e48:	mov	w1, wzr
  410e4c:	add	x8, x0, x20, lsl #3
  410e50:	add	x9, x0, #0x8
  410e54:	cmp	x8, x9
  410e58:	csel	x8, x8, x9, hi  // hi = pmore
  410e5c:	mvn	x9, x0
  410e60:	add	x8, x8, x9
  410e64:	add	x8, x8, #0x8
  410e68:	and	x2, x8, #0xfffffffffffffff8
  410e6c:	bl	406a30 <memset@plt>
  410e70:	stp	xzr, xzr, [x19, #64]
  410e74:	str	wzr, [x19, #80]
  410e78:	stp	xzr, x20, [x19, #48]
  410e7c:	ldp	x20, x19, [sp, #16]
  410e80:	ldp	x29, x30, [sp], #32
  410e84:	ret

0000000000410e88 <hash_free@@Base>:
  410e88:	stp	x29, x30, [sp, #-48]!
  410e8c:	stp	x20, x19, [sp, #32]
  410e90:	mov	x19, x0
  410e94:	stp	x22, x21, [sp, #16]
  410e98:	mov	x29, sp
  410e9c:	cbz	w1, 410ee4 <hash_free@@Base+0x5c>
  410ea0:	ldr	x8, [x19, #32]
  410ea4:	cmp	x8, #0x1
  410ea8:	b.lt	410ee8 <hash_free@@Base+0x60>  // b.tstop
  410eac:	ldr	x20, [x19]
  410eb0:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  410eb4:	add	x21, x20, x8, lsl #3
  410eb8:	b	410ec8 <hash_free@@Base+0x40>
  410ebc:	str	xzr, [x20], #8
  410ec0:	cmp	x20, x21
  410ec4:	b.cs	410ee4 <hash_free@@Base+0x5c>  // b.hs, b.nlast
  410ec8:	ldr	x0, [x20]
  410ecc:	cbz	x0, 410ebc <hash_free@@Base+0x34>
  410ed0:	ldr	x8, [x22, #2328]
  410ed4:	cmp	x0, x8
  410ed8:	b.eq	410ebc <hash_free@@Base+0x34>  // b.none
  410edc:	bl	406c60 <free@plt>
  410ee0:	b	410ebc <hash_free@@Base+0x34>
  410ee4:	ldr	x8, [x19, #32]
  410ee8:	ldr	x0, [x19]
  410eec:	stp	xzr, x8, [x19, #48]
  410ef0:	bl	406c60 <free@plt>
  410ef4:	str	xzr, [x19]
  410ef8:	str	xzr, [x19, #40]
  410efc:	ldp	x20, x19, [sp, #32]
  410f00:	ldp	x22, x21, [sp, #16]
  410f04:	ldp	x29, x30, [sp], #48
  410f08:	ret

0000000000410f0c <hash_map@@Base>:
  410f0c:	stp	x29, x30, [sp, #-48]!
  410f10:	stp	x22, x21, [sp, #16]
  410f14:	stp	x20, x19, [sp, #32]
  410f18:	ldr	x8, [x0, #32]
  410f1c:	mov	x29, sp
  410f20:	cmp	x8, #0x1
  410f24:	b.lt	410f64 <hash_map@@Base+0x58>  // b.tstop
  410f28:	ldr	x20, [x0]
  410f2c:	mov	x19, x1
  410f30:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  410f34:	add	x21, x20, x8, lsl #3
  410f38:	b	410f48 <hash_map@@Base+0x3c>
  410f3c:	add	x20, x20, #0x8
  410f40:	cmp	x20, x21
  410f44:	b.cs	410f64 <hash_map@@Base+0x58>  // b.hs, b.nlast
  410f48:	ldr	x0, [x20]
  410f4c:	cbz	x0, 410f3c <hash_map@@Base+0x30>
  410f50:	ldr	x8, [x22, #2328]
  410f54:	cmp	x0, x8
  410f58:	b.eq	410f3c <hash_map@@Base+0x30>  // b.none
  410f5c:	blr	x19
  410f60:	b	410f3c <hash_map@@Base+0x30>
  410f64:	ldp	x20, x19, [sp, #32]
  410f68:	ldp	x22, x21, [sp, #16]
  410f6c:	ldp	x29, x30, [sp], #48
  410f70:	ret

0000000000410f74 <hash_map_arg@@Base>:
  410f74:	stp	x29, x30, [sp, #-64]!
  410f78:	stp	x22, x21, [sp, #32]
  410f7c:	stp	x20, x19, [sp, #48]
  410f80:	ldr	x8, [x0, #32]
  410f84:	str	x23, [sp, #16]
  410f88:	mov	x29, sp
  410f8c:	cmp	x8, #0x1
  410f90:	b.lt	410fd8 <hash_map_arg@@Base+0x64>  // b.tstop
  410f94:	ldr	x21, [x0]
  410f98:	mov	x19, x2
  410f9c:	mov	x20, x1
  410fa0:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  410fa4:	add	x22, x21, x8, lsl #3
  410fa8:	b	410fb8 <hash_map_arg@@Base+0x44>
  410fac:	add	x21, x21, #0x8
  410fb0:	cmp	x21, x22
  410fb4:	b.cs	410fd8 <hash_map_arg@@Base+0x64>  // b.hs, b.nlast
  410fb8:	ldr	x0, [x21]
  410fbc:	cbz	x0, 410fac <hash_map_arg@@Base+0x38>
  410fc0:	ldr	x8, [x23, #2328]
  410fc4:	cmp	x0, x8
  410fc8:	b.eq	410fac <hash_map_arg@@Base+0x38>  // b.none
  410fcc:	mov	x1, x19
  410fd0:	blr	x20
  410fd4:	b	410fac <hash_map_arg@@Base+0x38>
  410fd8:	ldp	x20, x19, [sp, #48]
  410fdc:	ldp	x22, x21, [sp, #32]
  410fe0:	ldr	x23, [sp, #16]
  410fe4:	ldp	x29, x30, [sp], #64
  410fe8:	ret

0000000000410fec <hash_print_stats@@Base>:
  410fec:	stp	x29, x30, [sp, #-32]!
  410ff0:	stp	x20, x19, [sp, #16]
  410ff4:	mov	x19, x1
  410ff8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  410ffc:	mov	x20, x0
  411000:	add	x1, x1, #0xd6c
  411004:	mov	w2, #0x5                   	// #5
  411008:	mov	x0, xzr
  41100c:	mov	x29, sp
  411010:	bl	406dc0 <dcgettext@plt>
  411014:	ldr	x2, [x20, #48]
  411018:	ldr	x3, [x20, #32]
  41101c:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  411020:	fmov	d0, x8
  411024:	ucvtf	d1, x2
  411028:	fmul	d0, d1, d0
  41102c:	ucvtf	d1, x3
  411030:	mov	x1, x0
  411034:	fdiv	d0, d0, d1
  411038:	mov	x0, x19
  41103c:	bl	406ed0 <fprintf@plt>
  411040:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411044:	add	x1, x1, #0xd82
  411048:	mov	w2, #0x5                   	// #5
  41104c:	mov	x0, xzr
  411050:	bl	406dc0 <dcgettext@plt>
  411054:	ldr	w2, [x20, #80]
  411058:	mov	x1, x0
  41105c:	mov	x0, x19
  411060:	bl	406ed0 <fprintf@plt>
  411064:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411068:	add	x1, x1, #0xd8e
  41106c:	mov	w2, #0x5                   	// #5
  411070:	mov	x0, xzr
  411074:	bl	406dc0 <dcgettext@plt>
  411078:	ldp	x2, x3, [x20, #64]
  41107c:	mov	x1, x0
  411080:	cbz	x3, 4110ac <hash_print_stats@@Base+0xc0>
  411084:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  411088:	ucvtf	d0, x2
  41108c:	fmov	d1, x8
  411090:	fmul	d0, d0, d1
  411094:	ucvtf	d1, x3
  411098:	fdiv	d0, d0, d1
  41109c:	mov	x0, x19
  4110a0:	ldp	x20, x19, [sp, #16]
  4110a4:	ldp	x29, x30, [sp], #32
  4110a8:	b	406ed0 <fprintf@plt>
  4110ac:	fmov	d0, xzr
  4110b0:	mov	x0, x19
  4110b4:	ldp	x20, x19, [sp, #16]
  4110b8:	ldp	x29, x30, [sp], #32
  4110bc:	b	406ed0 <fprintf@plt>

00000000004110c0 <hash_dump@@Base>:
  4110c0:	stp	x29, x30, [sp, #-48]!
  4110c4:	stp	x22, x21, [sp, #16]
  4110c8:	stp	x20, x19, [sp, #32]
  4110cc:	ldr	x8, [x0]
  4110d0:	ldr	x9, [x0, #32]
  4110d4:	mov	x19, x2
  4110d8:	mov	x20, x1
  4110dc:	mov	x21, x0
  4110e0:	add	x22, x8, x9, lsl #3
  4110e4:	mov	x29, sp
  4110e8:	cbz	x1, 4110fc <hash_dump@@Base+0x3c>
  4110ec:	cmp	x8, x22
  4110f0:	mov	x9, x20
  4110f4:	b.cc	411120 <hash_dump@@Base+0x60>  // b.lo, b.ul, b.last
  4110f8:	b	411154 <hash_dump@@Base+0x94>
  4110fc:	ldr	x8, [x21, #48]
  411100:	lsl	x8, x8, #3
  411104:	add	x0, x8, #0x8
  411108:	bl	419e14 <xmalloc@@Base>
  41110c:	ldr	x8, [x21]
  411110:	mov	x20, x0
  411114:	cmp	x8, x22
  411118:	mov	x9, x20
  41111c:	b.cs	411154 <hash_dump@@Base+0x94>  // b.hs, b.nlast
  411120:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  411124:	mov	x9, x20
  411128:	b	411138 <hash_dump@@Base+0x78>
  41112c:	add	x8, x8, #0x8
  411130:	cmp	x8, x22
  411134:	b.cs	411154 <hash_dump@@Base+0x94>  // b.hs, b.nlast
  411138:	ldr	x11, [x8]
  41113c:	cbz	x11, 41112c <hash_dump@@Base+0x6c>
  411140:	ldr	x12, [x10, #2328]
  411144:	cmp	x11, x12
  411148:	b.eq	41112c <hash_dump@@Base+0x6c>  // b.none
  41114c:	str	x11, [x9], #8
  411150:	b	41112c <hash_dump@@Base+0x6c>
  411154:	str	xzr, [x9]
  411158:	cbz	x19, 411170 <hash_dump@@Base+0xb0>
  41115c:	ldr	x1, [x21, #48]
  411160:	mov	w2, #0x8                   	// #8
  411164:	mov	x0, x20
  411168:	mov	x3, x19
  41116c:	bl	406870 <qsort@plt>
  411170:	mov	x0, x20
  411174:	ldp	x20, x19, [sp, #32]
  411178:	ldp	x22, x21, [sp, #16]
  41117c:	ldp	x29, x30, [sp], #48
  411180:	ret

0000000000411184 <jhash@@Base>:
  411184:	mov	w8, #0xbeef                	// #48879
  411188:	movk	w8, #0xdead, lsl #16
  41118c:	cmp	w1, #0xd
  411190:	add	w9, w1, w8
  411194:	b.lt	411218 <jhash@@Base+0x94>  // b.tstop
  411198:	mov	w10, w9
  41119c:	mov	w8, w9
  4111a0:	ldp	w11, w12, [x0]
  4111a4:	cmp	w1, #0x18
  4111a8:	sub	w1, w1, #0xc
  4111ac:	add	w9, w11, w9
  4111b0:	ldr	w11, [x0, #8]
  4111b4:	add	w10, w12, w10
  4111b8:	add	x0, x0, #0xc
  4111bc:	add	w8, w11, w8
  4111c0:	sub	w9, w9, w8
  4111c4:	add	w11, w8, w10
  4111c8:	eor	w8, w9, w8, ror #28
  4111cc:	sub	w9, w10, w8
  4111d0:	add	w10, w8, w11
  4111d4:	eor	w8, w9, w8, ror #26
  4111d8:	sub	w9, w11, w8
  4111dc:	add	w11, w8, w10
  4111e0:	eor	w8, w9, w8, ror #24
  4111e4:	sub	w9, w10, w8
  4111e8:	add	w10, w8, w11
  4111ec:	eor	w8, w9, w8, ror #16
  4111f0:	sub	w11, w11, w8
  4111f4:	add	w9, w8, w10
  4111f8:	eor	w8, w11, w8, ror #13
  4111fc:	sub	w11, w10, w8
  411200:	add	w10, w8, w9
  411204:	eor	w8, w11, w8, ror #28
  411208:	b.gt	4111a0 <jhash@@Base+0x1c>
  41120c:	cbnz	w1, 411224 <jhash@@Base+0xa0>
  411210:	mov	w0, w8
  411214:	ret
  411218:	mov	w8, w9
  41121c:	mov	w10, w9
  411220:	cbz	w1, 411210 <jhash@@Base+0x8c>
  411224:	cmp	w1, #0x9
  411228:	b.lt	41123c <jhash@@Base+0xb8>  // b.tstop
  41122c:	ldr	w11, [x0], #4
  411230:	sub	w1, w1, #0x4
  411234:	add	w9, w11, w9
  411238:	b	411244 <jhash@@Base+0xc0>
  41123c:	cmp	w1, #0x5
  411240:	b.lt	411250 <jhash@@Base+0xcc>  // b.tstop
  411244:	ldr	w11, [x0], #4
  411248:	sub	w1, w1, #0x4
  41124c:	add	w10, w11, w10
  411250:	cmp	w1, #0x4
  411254:	b.ne	411264 <jhash@@Base+0xe0>  // b.any
  411258:	ldrb	w11, [x0, #3]
  41125c:	add	w8, w8, w11, lsl #24
  411260:	b	41126c <jhash@@Base+0xe8>
  411264:	cmp	w1, #0x3
  411268:	b.lt	4112e0 <jhash@@Base+0x15c>  // b.tstop
  41126c:	ldrb	w11, [x0, #2]
  411270:	add	w8, w8, w11, lsl #16
  411274:	ldrb	w11, [x0, #1]
  411278:	add	w8, w8, w11, lsl #8
  41127c:	ldrb	w11, [x0]
  411280:	add	w8, w8, w11
  411284:	ror	w11, w10, #18
  411288:	eor	w8, w8, w10
  41128c:	sub	w8, w8, w11
  411290:	eor	w9, w8, w9
  411294:	ror	w11, w8, #21
  411298:	sub	w9, w9, w11
  41129c:	eor	w10, w9, w10
  4112a0:	ror	w11, w9, #7
  4112a4:	sub	w10, w10, w11
  4112a8:	eor	w8, w10, w8
  4112ac:	ror	w11, w10, #16
  4112b0:	sub	w8, w8, w11
  4112b4:	eor	w9, w8, w9
  4112b8:	ror	w11, w8, #28
  4112bc:	sub	w9, w9, w11
  4112c0:	eor	w10, w9, w10
  4112c4:	ror	w9, w9, #18
  4112c8:	sub	w9, w10, w9
  4112cc:	eor	w8, w9, w8
  4112d0:	ror	w9, w9, #8
  4112d4:	sub	w8, w8, w9
  4112d8:	mov	w0, w8
  4112dc:	ret
  4112e0:	cmp	w1, #0x2
  4112e4:	b.eq	411274 <jhash@@Base+0xf0>  // b.none
  4112e8:	b	41127c <jhash@@Base+0xf8>

00000000004112ec <jhash_string@@Base>:
  4112ec:	sub	sp, sp, #0x70
  4112f0:	stp	x22, x21, [sp, #80]
  4112f4:	mov	w22, #0xfeff                	// #65279
  4112f8:	mov	w21, #0xbeef                	// #48879
  4112fc:	stp	x29, x30, [sp, #16]
  411300:	stp	x28, x27, [sp, #32]
  411304:	stp	x26, x25, [sp, #48]
  411308:	stp	x24, x23, [sp, #64]
  41130c:	stp	x20, x19, [sp, #96]
  411310:	add	x29, sp, #0x10
  411314:	mov	x19, x0
  411318:	movk	w22, #0xfefe, lsl #16
  41131c:	movk	w21, #0xdead, lsl #16
  411320:	bl	406750 <strlen@plt>
  411324:	cmp	x0, #0x4
  411328:	mov	w8, #0x4                   	// #4
  41132c:	mov	x20, x0
  411330:	csel	x2, x0, x8, cc  // cc = lo, ul, last
  411334:	sub	x0, x29, #0x4
  411338:	mov	x1, x19
  41133c:	stur	wzr, [x29, #-4]
  411340:	bl	406710 <memcpy@plt>
  411344:	ldur	w9, [x29, #-4]
  411348:	add	w8, w9, w22
  41134c:	bic	w8, w8, w9
  411350:	tst	w8, #0x80808080
  411354:	b.eq	41138c <jhash_string@@Base+0xa0>  // b.none
  411358:	mov	w23, #0xbeef                	// #48879
  41135c:	mov	w22, #0xbeef                	// #48879
  411360:	movk	w23, #0xdead, lsl #16
  411364:	movk	w22, #0xdead, lsl #16
  411368:	mov	x8, x19
  41136c:	ands	w10, w9, #0xff
  411370:	b.eq	411560 <jhash_string@@Base+0x274>  // b.none
  411374:	tst	w9, #0xff00
  411378:	b.eq	4114dc <jhash_string@@Base+0x1f0>  // b.none
  41137c:	tst	w9, #0xff0000
  411380:	b.eq	41153c <jhash_string@@Base+0x250>  // b.none
  411384:	add	w21, w9, w21
  411388:	b	411560 <jhash_string@@Base+0x274>
  41138c:	mov	w22, #0xbeef                	// #48879
  411390:	mov	w23, #0xbeef                	// #48879
  411394:	mov	w28, #0xfeff                	// #65279
  411398:	mov	x25, xzr
  41139c:	mov	w27, #0xc                   	// #12
  4113a0:	movk	w22, #0xdead, lsl #16
  4113a4:	movk	w23, #0xdead, lsl #16
  4113a8:	movk	w28, #0xfefe, lsl #16
  4113ac:	add	x24, x20, x25
  4113b0:	sub	x8, x24, #0x4
  4113b4:	add	w21, w9, w21
  4113b8:	mov	x26, x19
  4113bc:	add	x19, x19, x27
  4113c0:	cmp	x8, #0x4
  4113c4:	mov	w9, #0x4                   	// #4
  4113c8:	sub	x1, x19, #0x8
  4113cc:	csel	x2, x8, x9, cc  // cc = lo, ul, last
  4113d0:	add	x0, sp, #0x8
  4113d4:	str	wzr, [sp, #8]
  4113d8:	bl	406710 <memcpy@plt>
  4113dc:	ldr	w9, [sp, #8]
  4113e0:	mov	w10, #0x80808080            	// #-2139062144
  4113e4:	add	w8, w9, w28
  4113e8:	bic	w10, w10, w9
  4113ec:	tst	w10, w8
  4113f0:	b.ne	4114e4 <jhash_string@@Base+0x1f8>  // b.any
  4113f4:	sub	x8, x24, #0x8
  4113f8:	add	w22, w9, w22
  4113fc:	cmp	x8, #0x4
  411400:	mov	w9, #0x4                   	// #4
  411404:	sub	x1, x19, #0x4
  411408:	csel	x2, x8, x9, cc  // cc = lo, ul, last
  41140c:	add	x0, sp, #0x4
  411410:	str	wzr, [sp, #4]
  411414:	bl	406710 <memcpy@plt>
  411418:	ldr	w9, [sp, #4]
  41141c:	mov	w10, #0x80808080            	// #-2139062144
  411420:	mov	w24, #0xfeff                	// #65279
  411424:	movk	w24, #0xfefe, lsl #16
  411428:	add	w8, w9, w28
  41142c:	bic	w10, w10, w9
  411430:	tst	w10, w8
  411434:	b.ne	411510 <jhash_string@@Base+0x224>  // b.any
  411438:	add	w8, w9, w23
  41143c:	sub	w10, w21, w8
  411440:	eor	w10, w10, w8, ror #28
  411444:	sub	w11, w22, w10
  411448:	add	w8, w8, w22
  41144c:	eor	w11, w11, w10, ror #26
  411450:	add	w10, w10, w8
  411454:	sub	w8, w8, w11
  411458:	eor	w8, w8, w11, ror #24
  41145c:	add	w11, w11, w10
  411460:	sub	w10, w10, w8
  411464:	eor	w10, w10, w8, ror #16
  411468:	add	w8, w8, w11
  41146c:	sub	w11, w11, w10
  411470:	add	x9, x20, x25
  411474:	eor	w11, w11, w10, ror #13
  411478:	sub	x9, x9, #0xc
  41147c:	add	w21, w10, w8
  411480:	sub	w8, w8, w11
  411484:	cmp	x9, #0x4
  411488:	eor	w23, w8, w11, ror #28
  41148c:	mov	w8, #0x4                   	// #4
  411490:	add	x1, x26, x27
  411494:	csel	x2, x9, x8, cc  // cc = lo, ul, last
  411498:	sub	x0, x29, #0x4
  41149c:	mov	x19, x26
  4114a0:	stur	wzr, [x29, #-4]
  4114a4:	add	w22, w11, w21
  4114a8:	bl	406710 <memcpy@plt>
  4114ac:	ldur	w9, [x29, #-4]
  4114b0:	mov	w10, #0x80808080            	// #-2139062144
  4114b4:	sub	x25, x25, #0xc
  4114b8:	add	x27, x27, #0xc
  4114bc:	add	w8, w9, w24
  4114c0:	bic	w10, w10, w9
  4114c4:	and	w8, w10, w8
  4114c8:	cbz	w8, 4113ac <jhash_string@@Base+0xc0>
  4114cc:	sub	x8, x19, x25
  4114d0:	ands	w10, w9, #0xff
  4114d4:	b.ne	411374 <jhash_string@@Base+0x88>  // b.any
  4114d8:	b	411560 <jhash_string@@Base+0x274>
  4114dc:	add	w21, w10, w21
  4114e0:	b	411560 <jhash_string@@Base+0x274>
  4114e4:	sub	x8, x26, x25
  4114e8:	and	w10, w9, #0xff
  4114ec:	mov	x19, x26
  4114f0:	add	x8, x8, #0x4
  4114f4:	cbz	w10, 411560 <jhash_string@@Base+0x274>
  4114f8:	tst	w9, #0xff00
  4114fc:	b.eq	411544 <jhash_string@@Base+0x258>  // b.none
  411500:	tst	w9, #0xff0000
  411504:	b.eq	411554 <jhash_string@@Base+0x268>  // b.none
  411508:	add	w22, w9, w22
  41150c:	b	411560 <jhash_string@@Base+0x274>
  411510:	sub	x8, x26, x25
  411514:	and	w10, w9, #0xff
  411518:	mov	x19, x26
  41151c:	add	x8, x8, #0x8
  411520:	cbz	w10, 411560 <jhash_string@@Base+0x274>
  411524:	tst	w9, #0xff00
  411528:	b.eq	41154c <jhash_string@@Base+0x260>  // b.none
  41152c:	tst	w9, #0xff0000
  411530:	b.eq	41155c <jhash_string@@Base+0x270>  // b.none
  411534:	add	w23, w9, w23
  411538:	b	411560 <jhash_string@@Base+0x274>
  41153c:	add	w21, w21, w9, uxth
  411540:	b	411560 <jhash_string@@Base+0x274>
  411544:	add	w22, w10, w22
  411548:	b	411560 <jhash_string@@Base+0x274>
  41154c:	add	w23, w10, w23
  411550:	b	411560 <jhash_string@@Base+0x274>
  411554:	add	w22, w22, w9, uxth
  411558:	b	411560 <jhash_string@@Base+0x274>
  41155c:	add	w23, w23, w9, uxth
  411560:	eor	w9, w22, w23
  411564:	ror	w10, w22, #18
  411568:	sub	w9, w9, w10
  41156c:	eor	w10, w9, w21
  411570:	ror	w11, w9, #21
  411574:	sub	w10, w10, w11
  411578:	eor	w11, w10, w22
  41157c:	ror	w12, w10, #7
  411580:	sub	w11, w11, w12
  411584:	eor	w9, w11, w9
  411588:	ror	w12, w11, #16
  41158c:	sub	w9, w9, w12
  411590:	eor	w10, w9, w10
  411594:	ror	w12, w9, #28
  411598:	sub	w10, w10, w12
  41159c:	eor	w11, w10, w11
  4115a0:	ror	w10, w10, #18
  4115a4:	sub	w10, w11, w10
  4115a8:	sub	w8, w8, w19
  4115ac:	ldp	x20, x19, [sp, #96]
  4115b0:	ldp	x22, x21, [sp, #80]
  4115b4:	ldp	x24, x23, [sp, #64]
  4115b8:	ldp	x26, x25, [sp, #48]
  4115bc:	ldp	x28, x27, [sp, #32]
  4115c0:	ldp	x29, x30, [sp, #16]
  4115c4:	eor	w9, w10, w9
  4115c8:	ror	w10, w10, #8
  4115cc:	add	w8, w9, w8
  4115d0:	sub	w0, w8, w10
  4115d4:	add	sp, sp, #0x70
  4115d8:	ret

00000000004115dc <try_implicit_rule@@Base>:
  4115dc:	stp	x29, x30, [sp, #-48]!
  4115e0:	str	x21, [sp, #16]
  4115e4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4115e8:	ldrb	w8, [x21, #3236]
  4115ec:	stp	x20, x19, [sp, #32]
  4115f0:	mov	w19, w1
  4115f4:	mov	x20, x0
  4115f8:	mov	x29, sp
  4115fc:	tbz	w8, #3, 411630 <try_implicit_rule@@Base+0x54>
  411600:	mov	w0, w19
  411604:	bl	419be0 <print_spaces@@Base>
  411608:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  41160c:	add	x1, x1, #0xdcd
  411610:	mov	w2, #0x5                   	// #5
  411614:	mov	x0, xzr
  411618:	bl	406dc0 <dcgettext@plt>
  41161c:	ldr	x1, [x20]
  411620:	bl	406e60 <printf@plt>
  411624:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  411628:	ldr	x0, [x8, #2504]
  41162c:	bl	406cf0 <fflush@plt>
  411630:	mov	x0, x20
  411634:	mov	w1, wzr
  411638:	mov	w2, w19
  41163c:	mov	w3, wzr
  411640:	bl	4116c8 <try_implicit_rule@@Base+0xec>
  411644:	cbz	w0, 411650 <try_implicit_rule@@Base+0x74>
  411648:	mov	w21, #0x1                   	// #1
  41164c:	b	4116b4 <try_implicit_rule@@Base+0xd8>
  411650:	ldr	x0, [x20]
  411654:	bl	40701c <ar_name@@Base>
  411658:	cbz	w0, 4116b0 <try_implicit_rule@@Base+0xd4>
  41165c:	ldrb	w8, [x21, #3236]
  411660:	tbz	w8, #3, 411694 <try_implicit_rule@@Base+0xb8>
  411664:	mov	w0, w19
  411668:	bl	419be0 <print_spaces@@Base>
  41166c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411670:	add	x1, x1, #0xdf5
  411674:	mov	w2, #0x5                   	// #5
  411678:	mov	x0, xzr
  41167c:	bl	406dc0 <dcgettext@plt>
  411680:	ldr	x1, [x20]
  411684:	bl	406e60 <printf@plt>
  411688:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41168c:	ldr	x0, [x8, #2504]
  411690:	bl	406cf0 <fflush@plt>
  411694:	mov	w1, #0x1                   	// #1
  411698:	mov	x0, x20
  41169c:	mov	w2, w19
  4116a0:	mov	w3, wzr
  4116a4:	mov	w21, #0x1                   	// #1
  4116a8:	bl	4116c8 <try_implicit_rule@@Base+0xec>
  4116ac:	cbnz	w0, 4116b4 <try_implicit_rule@@Base+0xd8>
  4116b0:	mov	w21, wzr
  4116b4:	mov	w0, w21
  4116b8:	ldp	x20, x19, [sp, #32]
  4116bc:	ldr	x21, [sp, #16]
  4116c0:	ldp	x29, x30, [sp], #48
  4116c4:	ret
  4116c8:	stp	x29, x30, [sp, #-96]!
  4116cc:	stp	x28, x27, [sp, #16]
  4116d0:	stp	x26, x25, [sp, #32]
  4116d4:	stp	x24, x23, [sp, #48]
  4116d8:	stp	x22, x21, [sp, #64]
  4116dc:	stp	x20, x19, [sp, #80]
  4116e0:	mov	x29, sp
  4116e4:	sub	sp, sp, #0x1, lsl #12
  4116e8:	sub	sp, sp, #0x110
  4116ec:	ldr	x22, [x0]
  4116f0:	mov	x19, sp
  4116f4:	mov	x20, x0
  4116f8:	mov	w21, w1
  4116fc:	str	w3, [x19, #44]
  411700:	str	w2, [x19, #224]
  411704:	cbz	w1, 411718 <try_implicit_rule@@Base+0x13c>
  411708:	mov	w1, #0x28                  	// #40
  41170c:	mov	x0, x22
  411710:	bl	406c80 <strchr@plt>
  411714:	mov	x22, x0
  411718:	mov	x0, x22
  41171c:	bl	406750 <strlen@plt>
  411720:	adrp	x8, 442000 <just_print_flag@@Base>
  411724:	ldr	w8, [x8, #244]
  411728:	mov	x23, x0
  41172c:	lsl	x0, x8, #5
  411730:	str	x8, [x19, #152]
  411734:	bl	419e14 <xmalloc@@Base>
  411738:	adrp	x8, 442000 <just_print_flag@@Base>
  41173c:	ldr	x8, [x8, #232]
  411740:	mov	x9, sp
  411744:	str	x0, [x19, #184]
  411748:	str	x23, [x19, #216]
  41174c:	add	x8, x23, x8
  411750:	add	x8, x8, #0x13
  411754:	and	x8, x8, #0xfffffffffffffff0
  411758:	sub	x8, x9, x8
  41175c:	str	x8, [x19, #128]
  411760:	mov	sp, x8
  411764:	adrp	x8, 442000 <just_print_flag@@Base>
  411768:	adrp	x9, 442000 <just_print_flag@@Base>
  41176c:	ldr	w8, [x8, #256]
  411770:	ldr	w9, [x9, #240]
  411774:	mul	w8, w9, w8
  411778:	lsl	x0, x8, #5
  41177c:	bl	419e14 <xmalloc@@Base>
  411780:	mov	x23, x22
  411784:	mov	x22, x0
  411788:	str	x20, [x19, #232]
  41178c:	str	x23, [x19, #192]
  411790:	cbnz	w21, 4117a0 <try_implicit_rule@@Base+0x1c4>
  411794:	mov	x0, x23
  411798:	bl	40701c <ar_name@@Base>
  41179c:	cbz	w0, 4128a8 <try_implicit_rule@@Base+0x12cc>
  4117a0:	mov	x0, xzr
  4117a4:	adrp	x8, 442000 <just_print_flag@@Base>
  4117a8:	ldr	x26, [x8, #224]
  4117ac:	ldp	x21, x8, [x19, #184]
  4117b0:	cmp	x0, #0x0
  4117b4:	sub	x8, x0, x8
  4117b8:	csinc	x8, xzr, x8, eq  // eq = none
  4117bc:	cbz	x26, 412658 <try_implicit_rule@@Base+0x107c>
  4117c0:	add	x9, x0, #0x1
  4117c4:	str	x9, [x19, #112]
  4117c8:	mvn	x9, x0
  4117cc:	str	wzr, [x19, #100]
  4117d0:	str	wzr, [x19, #136]
  4117d4:	stp	x0, x8, [x19, #168]
  4117d8:	str	x9, [x19, #104]
  4117dc:	str	x22, [x19, #144]
  4117e0:	b	4117f4 <try_implicit_rule@@Base+0x218>
  4117e4:	ldr	x26, [x26]
  4117e8:	ldr	x22, [x19, #144]
  4117ec:	ldp	x23, x21, [x19, #176]
  4117f0:	cbz	x26, 411b74 <try_implicit_rule@@Base+0x598>
  4117f4:	ldr	x9, [x26, #32]
  4117f8:	cbz	x9, 411804 <try_implicit_rule@@Base+0x228>
  4117fc:	ldr	x8, [x26, #40]
  411800:	cbz	x8, 4117e4 <try_implicit_rule@@Base+0x208>
  411804:	ldrb	w8, [x26, #51]
  411808:	cbz	w8, 411848 <try_implicit_rule@@Base+0x26c>
  41180c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  411810:	ldrb	w8, [x8, #3236]
  411814:	tbz	w8, #3, 4117e4 <try_implicit_rule@@Base+0x208>
  411818:	ldr	w0, [x19, #224]
  41181c:	bl	419be0 <print_spaces@@Base>
  411820:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411824:	mov	w2, #0x5                   	// #5
  411828:	mov	x0, xzr
  41182c:	add	x1, x1, #0xe29
  411830:	bl	406dc0 <dcgettext@plt>
  411834:	bl	406e60 <printf@plt>
  411838:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41183c:	ldr	x0, [x8, #2504]
  411840:	bl	406cf0 <fflush@plt>
  411844:	b	4117e4 <try_implicit_rule@@Base+0x208>
  411848:	ldrh	w23, [x26, #48]
  41184c:	ldr	x22, [x19, #192]
  411850:	cbz	x23, 4117e4 <try_implicit_rule@@Base+0x208>
  411854:	ldr	x8, [x26, #8]
  411858:	str	x9, [x19, #120]
  41185c:	str	x8, [x19, #208]
  411860:	ldr	x8, [x26, #24]
  411864:	str	x8, [x19, #200]
  411868:	ldr	w8, [x19, #44]
  41186c:	cbz	w8, 4119f4 <try_implicit_rule@@Base+0x418>
  411870:	mov	x20, xzr
  411874:	b	4118d4 <try_implicit_rule@@Base+0x2f8>
  411878:	ldr	w8, [x19, #136]
  41187c:	cmp	w28, #0x0
  411880:	csinc	w8, w8, wzr, eq  // eq = none
  411884:	str	w8, [x19, #136]
  411888:	ldr	x8, [x19, #120]
  41188c:	cbz	x8, 4119e8 <try_implicit_rule@@Base+0x40c>
  411890:	ldr	w10, [x19, #100]
  411894:	ldr	x9, [x19, #144]
  411898:	cmp	w24, #0x0
  41189c:	mov	w8, w10
  4118a0:	add	x8, x9, x8, lsl #5
  4118a4:	ldr	x9, [x19, #176]
  4118a8:	stp	w20, w10, [x8, #16]
  4118ac:	add	w10, w10, #0x1
  4118b0:	strb	w24, [x8, #24]
  4118b4:	csel	x9, xzr, x9, eq  // eq = none
  4118b8:	add	x9, x9, x21
  4118bc:	stp	x26, x9, [x8]
  4118c0:	str	w10, [x19, #100]
  4118c4:	ldr	x22, [x19, #192]
  4118c8:	add	x20, x20, #0x1
  4118cc:	cmp	x20, x23
  4118d0:	b.cs	4117e4 <try_implicit_rule@@Base+0x208>  // b.hs, b.nlast
  4118d4:	ldr	x9, [x19, #208]
  4118d8:	lsl	x8, x20, #3
  4118dc:	ldr	x25, [x9, x8]
  4118e0:	ldr	x9, [x19, #200]
  4118e4:	ldrb	w28, [x25, #1]
  4118e8:	ldr	x27, [x9, x8]
  4118ec:	cbnz	w28, 4118f8 <try_implicit_rule@@Base+0x31c>
  4118f0:	ldrb	w8, [x26, #50]
  4118f4:	cbz	w8, 4118c8 <try_implicit_rule@@Base+0x2ec>
  4118f8:	ldr	x8, [x26, #16]
  4118fc:	ldr	x9, [x19, #216]
  411900:	ldr	w8, [x8, x20, lsl #2]
  411904:	subs	x8, x9, x8
  411908:	b.cc	4118c8 <try_implicit_rule@@Base+0x2ec>  // b.lo, b.ul, b.last
  41190c:	add	x21, x8, #0x1
  411910:	ldr	x8, [x19, #168]
  411914:	mvn	x9, x25
  411918:	add	x24, x27, x9
  41191c:	add	x22, x22, x24
  411920:	cbz	x8, 411934 <try_implicit_rule@@Base+0x358>
  411924:	mov	w1, #0x2f                  	// #47
  411928:	mov	x0, x25
  41192c:	bl	406c80 <strchr@plt>
  411930:	cbz	x0, 4119a0 <try_implicit_rule@@Base+0x3c4>
  411934:	cmp	x24, #0x1
  411938:	b.lt	411950 <try_implicit_rule@@Base+0x374>  // b.tstop
  41193c:	ldr	x1, [x19, #192]
  411940:	mov	x0, x25
  411944:	mov	x2, x24
  411948:	bl	4069f0 <strncmp@plt>
  41194c:	cbnz	w0, 4118c4 <try_implicit_rule@@Base+0x2e8>
  411950:	mov	w24, wzr
  411954:	ldrb	w8, [x27]
  411958:	ldrb	w9, [x22, x21]
  41195c:	cmp	w8, w9
  411960:	b.ne	4118c4 <try_implicit_rule@@Base+0x2e8>  // b.any
  411964:	cbz	w8, 411878 <try_implicit_rule@@Base+0x29c>
  411968:	add	x8, x21, x22
  41196c:	cmp	x27, x8
  411970:	b.eq	411878 <try_implicit_rule@@Base+0x29c>  // b.none
  411974:	add	x9, x27, #0x1
  411978:	ldrb	w9, [x9]
  41197c:	ldrb	w10, [x8, #1]!
  411980:	cmp	w9, w10
  411984:	b.ne	4118c4 <try_implicit_rule@@Base+0x2e8>  // b.any
  411988:	cbz	w9, 411878 <try_implicit_rule@@Base+0x29c>
  41198c:	add	x0, x27, #0x2
  411990:	add	x1, x8, #0x1
  411994:	bl	406c10 <strcmp@plt>
  411998:	cbnz	w0, 4118c4 <try_implicit_rule@@Base+0x2e8>
  41199c:	b	411878 <try_implicit_rule@@Base+0x29c>
  4119a0:	ldr	x8, [x19, #176]
  4119a4:	subs	x21, x21, x8
  4119a8:	b.cc	4118c4 <try_implicit_rule@@Base+0x2e8>  // b.lo, b.ul, b.last
  4119ac:	ldr	x1, [x19, #112]
  4119b0:	add	x22, x22, x8
  4119b4:	cmp	x22, x1
  4119b8:	b.ls	4119d0 <try_implicit_rule@@Base+0x3f4>  // b.plast
  4119bc:	ldr	x8, [x19, #104]
  4119c0:	mov	x0, x25
  4119c4:	add	x2, x22, x8
  4119c8:	bl	4069f0 <strncmp@plt>
  4119cc:	cbnz	w0, 4118c4 <try_implicit_rule@@Base+0x2e8>
  4119d0:	mov	w24, #0x1                   	// #1
  4119d4:	ldrb	w8, [x27]
  4119d8:	ldrb	w9, [x22, x21]
  4119dc:	cmp	w8, w9
  4119e0:	b.ne	4118c4 <try_implicit_rule@@Base+0x2e8>  // b.any
  4119e4:	b	411964 <try_implicit_rule@@Base+0x388>
  4119e8:	ldr	x8, [x26, #40]
  4119ec:	cbnz	x8, 411890 <try_implicit_rule@@Base+0x2b4>
  4119f0:	b	4118c4 <try_implicit_rule@@Base+0x2e8>
  4119f4:	ldr	x10, [x26, #16]
  4119f8:	mov	x21, xzr
  4119fc:	str	x10, [x19, #160]
  411a00:	b	411a68 <try_implicit_rule@@Base+0x48c>
  411a04:	ldrb	w8, [x25, #1]
  411a08:	cmp	w8, #0x0
  411a0c:	ldr	w8, [x19, #136]
  411a10:	csinc	w8, w8, wzr, eq  // eq = none
  411a14:	str	w8, [x19, #136]
  411a18:	ldr	x8, [x19, #120]
  411a1c:	cbz	x8, 411b68 <try_implicit_rule@@Base+0x58c>
  411a20:	ldr	w10, [x19, #100]
  411a24:	ldr	x9, [x19, #144]
  411a28:	cmp	w22, #0x0
  411a2c:	mov	w8, w10
  411a30:	add	x8, x9, x8, lsl #5
  411a34:	ldr	x9, [x19, #176]
  411a38:	stp	w21, w10, [x8, #16]
  411a3c:	add	w10, w10, #0x1
  411a40:	strb	w22, [x8, #24]
  411a44:	csel	x9, xzr, x9, eq  // eq = none
  411a48:	add	x9, x9, x28
  411a4c:	stp	x26, x9, [x8]
  411a50:	str	w10, [x19, #100]
  411a54:	ldr	x22, [x19, #192]
  411a58:	ldr	x10, [x19, #160]
  411a5c:	add	x21, x21, #0x1
  411a60:	cmp	x21, x23
  411a64:	b.cs	4117e4 <try_implicit_rule@@Base+0x208>  // b.hs, b.nlast
  411a68:	ldr	w8, [x10, x21, lsl #2]
  411a6c:	ldr	x9, [x19, #216]
  411a70:	subs	x8, x9, x8
  411a74:	b.cc	411a5c <try_implicit_rule@@Base+0x480>  // b.lo, b.ul, b.last
  411a78:	ldr	x10, [x19, #208]
  411a7c:	lsl	x9, x21, #3
  411a80:	add	x28, x8, #0x1
  411a84:	ldr	x8, [x19, #168]
  411a88:	ldr	x25, [x10, x9]
  411a8c:	ldr	x10, [x19, #200]
  411a90:	ldr	x27, [x10, x9]
  411a94:	mvn	x9, x25
  411a98:	add	x24, x27, x9
  411a9c:	add	x20, x22, x24
  411aa0:	cbz	x8, 411ab4 <try_implicit_rule@@Base+0x4d8>
  411aa4:	mov	w1, #0x2f                  	// #47
  411aa8:	mov	x0, x25
  411aac:	bl	406c80 <strchr@plt>
  411ab0:	cbz	x0, 411b20 <try_implicit_rule@@Base+0x544>
  411ab4:	cmp	x24, #0x1
  411ab8:	b.lt	411ad0 <try_implicit_rule@@Base+0x4f4>  // b.tstop
  411abc:	mov	x0, x25
  411ac0:	mov	x1, x22
  411ac4:	mov	x2, x24
  411ac8:	bl	4069f0 <strncmp@plt>
  411acc:	cbnz	w0, 411a58 <try_implicit_rule@@Base+0x47c>
  411ad0:	mov	w22, wzr
  411ad4:	ldrb	w8, [x27]
  411ad8:	ldrb	w9, [x20, x28]
  411adc:	cmp	w8, w9
  411ae0:	b.ne	411a54 <try_implicit_rule@@Base+0x478>  // b.any
  411ae4:	cbz	w8, 411a04 <try_implicit_rule@@Base+0x428>
  411ae8:	add	x8, x28, x20
  411aec:	cmp	x27, x8
  411af0:	b.eq	411a04 <try_implicit_rule@@Base+0x428>  // b.none
  411af4:	add	x9, x27, #0x1
  411af8:	ldrb	w9, [x9]
  411afc:	ldrb	w10, [x8, #1]!
  411b00:	cmp	w9, w10
  411b04:	b.ne	411a54 <try_implicit_rule@@Base+0x478>  // b.any
  411b08:	cbz	w9, 411a04 <try_implicit_rule@@Base+0x428>
  411b0c:	add	x0, x27, #0x2
  411b10:	add	x1, x8, #0x1
  411b14:	bl	406c10 <strcmp@plt>
  411b18:	cbnz	w0, 411a54 <try_implicit_rule@@Base+0x478>
  411b1c:	b	411a04 <try_implicit_rule@@Base+0x428>
  411b20:	ldr	x8, [x19, #176]
  411b24:	subs	x28, x28, x8
  411b28:	b.cc	411a58 <try_implicit_rule@@Base+0x47c>  // b.lo, b.ul, b.last
  411b2c:	ldr	x1, [x19, #112]
  411b30:	add	x20, x20, x8
  411b34:	cmp	x20, x1
  411b38:	b.ls	411b50 <try_implicit_rule@@Base+0x574>  // b.plast
  411b3c:	ldr	x8, [x19, #104]
  411b40:	mov	x0, x25
  411b44:	add	x2, x20, x8
  411b48:	bl	4069f0 <strncmp@plt>
  411b4c:	cbnz	w0, 411a58 <try_implicit_rule@@Base+0x47c>
  411b50:	mov	w22, #0x1                   	// #1
  411b54:	ldrb	w8, [x27]
  411b58:	ldrb	w9, [x20, x28]
  411b5c:	cmp	w8, w9
  411b60:	b.ne	411a54 <try_implicit_rule@@Base+0x478>  // b.any
  411b64:	b	411ae4 <try_implicit_rule@@Base+0x508>
  411b68:	ldr	x8, [x26, #40]
  411b6c:	cbnz	x8, 411a20 <try_implicit_rule@@Base+0x444>
  411b70:	b	411a54 <try_implicit_rule@@Base+0x478>
  411b74:	ldr	w20, [x19, #100]
  411b78:	cbz	w20, 412658 <try_implicit_rule@@Base+0x107c>
  411b7c:	cmp	w20, #0x1
  411b80:	b.eq	411b9c <try_implicit_rule@@Base+0x5c0>  // b.none
  411b84:	adrp	x3, 412000 <try_implicit_rule@@Base+0xa24>
  411b88:	mov	w1, w20
  411b8c:	add	x3, x3, #0xab0
  411b90:	mov	w2, #0x20                  	// #32
  411b94:	mov	x0, x22
  411b98:	bl	406870 <qsort@plt>
  411b9c:	mov	w8, w20
  411ba0:	str	x8, [x19, #200]
  411ba4:	ldr	w8, [x19, #136]
  411ba8:	cbz	w8, 411c08 <try_implicit_rule@@Base+0x62c>
  411bac:	cbz	w20, 411c08 <try_implicit_rule@@Base+0x62c>
  411bb0:	mov	x8, xzr
  411bb4:	b	411bcc <try_implicit_rule@@Base+0x5f0>
  411bb8:	str	xzr, [x9]
  411bbc:	ldr	x9, [x19, #200]
  411bc0:	add	x8, x8, #0x1
  411bc4:	cmp	x8, x9
  411bc8:	b.eq	411c08 <try_implicit_rule@@Base+0x62c>  // b.none
  411bcc:	add	x9, x22, x8, lsl #5
  411bd0:	ldr	x11, [x9]
  411bd4:	ldrb	w10, [x11, #50]
  411bd8:	cbnz	w10, 411bbc <try_implicit_rule@@Base+0x5e0>
  411bdc:	ldrh	w10, [x11, #48]
  411be0:	cbz	x10, 411bbc <try_implicit_rule@@Base+0x5e0>
  411be4:	ldr	x11, [x11, #8]
  411be8:	mov	x12, xzr
  411bec:	ldr	x13, [x11, x12, lsl #3]
  411bf0:	ldrb	w13, [x13, #1]
  411bf4:	cbz	w13, 411bb8 <try_implicit_rule@@Base+0x5dc>
  411bf8:	add	x12, x12, #0x1
  411bfc:	cmp	x12, x10
  411c00:	b.cc	411bec <try_implicit_rule@@Base+0x610>  // b.lo, b.ul, b.last
  411c04:	b	411bbc <try_implicit_rule@@Base+0x5e0>
  411c08:	ldr	x10, [x19, #128]
  411c0c:	ldr	x9, [x19, #192]
  411c10:	add	x11, x19, #0x104
  411c14:	mov	w8, wzr
  411c18:	add	x10, x10, x23
  411c1c:	str	x10, [x19, #32]
  411c20:	ldr	w10, [x19, #224]
  411c24:	sub	x9, x9, #0x1
  411c28:	stp	xzr, x9, [x19, #56]
  411c2c:	add	x9, x23, #0x1
  411c30:	add	w10, w10, #0x1
  411c34:	str	w10, [x19, #28]
  411c38:	ldr	w10, [x19, #44]
  411c3c:	add	x9, x9, #0xf
  411c40:	and	x9, x9, #0xfffffffffffffff0
  411c44:	str	wzr, [x19, #40]
  411c48:	add	w10, w10, #0x1
  411c4c:	str	w10, [x19, #24]
  411c50:	add	x10, x11, x23
  411c54:	str	xzr, [x19, #120]
  411c58:	stp	x9, x10, [x19, #8]
  411c5c:	b	411c94 <try_implicit_rule@@Base+0x6b8>
  411c60:	ldr	x26, [x19, #232]
  411c64:	ldr	x8, [x19, #80]
  411c68:	mov	x20, x28
  411c6c:	str	xzr, [x26, #40]
  411c70:	strb	wzr, [x8, #51]
  411c74:	ldp	x10, x22, [x19, #136]
  411c78:	ldp	x23, x21, [x19, #176]
  411c7c:	ldr	w8, [x19, #76]
  411c80:	tbnz	w8, #0, 41266c <try_implicit_rule@@Base+0x1090>
  411c84:	ldr	w20, [x19, #100]
  411c88:	ldr	w9, [x19, #160]
  411c8c:	mov	w8, #0x1                   	// #1
  411c90:	cbnz	w9, 412658 <try_implicit_rule@@Base+0x107c>
  411c94:	str	w8, [x19, #160]
  411c98:	cbz	w20, 411c84 <try_implicit_rule@@Base+0x6a8>
  411c9c:	mov	x24, xzr
  411ca0:	mov	w9, #0x1                   	// #1
  411ca4:	mov	x28, x21
  411ca8:	mov	x20, x21
  411cac:	b	411cd8 <try_implicit_rule@@Base+0x6fc>
  411cb0:	ldr	x24, [x19, #136]
  411cb4:	mov	x21, x28
  411cb8:	mov	x28, x20
  411cbc:	ldr	x8, [x19, #200]
  411cc0:	add	x24, x24, #0x1
  411cc4:	mov	x20, x28
  411cc8:	mov	x28, x21
  411ccc:	cmp	x24, x8
  411cd0:	cset	w9, cc  // cc = lo, ul, last
  411cd4:	b.eq	411c84 <try_implicit_rule@@Base+0x6a8>  // b.none
  411cd8:	add	x10, x22, x24, lsl #5
  411cdc:	ldr	x21, [x10]
  411ce0:	cbz	x21, 411cb4 <try_implicit_rule@@Base+0x6d8>
  411ce4:	ldr	w8, [x19, #160]
  411ce8:	cbz	w8, 411cf4 <try_implicit_rule@@Base+0x718>
  411cec:	ldrb	w8, [x21, #50]
  411cf0:	cbnz	w8, 411cb4 <try_implicit_rule@@Base+0x6d8>
  411cf4:	add	x8, x22, x24, lsl #5
  411cf8:	str	x10, [x19, #112]
  411cfc:	str	w9, [x19, #76]
  411d00:	str	x24, [x19, #136]
  411d04:	ldr	w9, [x8, #16]
  411d08:	ldp	x10, x11, [x21, #16]
  411d0c:	ldr	x12, [x21, #8]
  411d10:	lsl	x13, x9, #3
  411d14:	ldr	w9, [x10, x9, lsl #2]
  411d18:	ldr	x10, [x11, x13]
  411d1c:	ldr	x11, [x12, x13]
  411d20:	ldrb	w12, [x8, #24]
  411d24:	ldr	x8, [x19, #216]
  411d28:	str	w12, [x19, #208]
  411d2c:	sub	x8, x8, x9
  411d30:	sub	x9, x10, x11
  411d34:	ldr	x10, [x19, #64]
  411d38:	add	x24, x8, #0x1
  411d3c:	add	x26, x10, x9
  411d40:	cbz	w12, 411d7c <try_implicit_rule@@Base+0x7a0>
  411d44:	ldr	x8, [x19, #120]
  411d48:	add	x26, x26, x23
  411d4c:	sub	x24, x24, x23
  411d50:	cbnz	x8, 411d7c <try_implicit_rule@@Base+0x7a0>
  411d54:	ldr	x9, [x19, #8]
  411d58:	mov	x8, sp
  411d5c:	sub	x25, x8, x9
  411d60:	mov	sp, x25
  411d64:	ldr	x1, [x19, #192]
  411d68:	mov	x0, x25
  411d6c:	mov	x2, x23
  411d70:	bl	406710 <memcpy@plt>
  411d74:	str	x25, [x19, #120]
  411d78:	strb	wzr, [x25, x23]
  411d7c:	ldr	w8, [x19, #208]
  411d80:	cmp	w8, #0x0
  411d84:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  411d88:	ldr	w8, [x8, #3236]
  411d8c:	csel	x9, x23, xzr, ne  // ne = any
  411d90:	add	x9, x24, x9
  411d94:	cmp	x9, #0x1, lsl #12
  411d98:	b.ls	411df0 <try_implicit_rule@@Base+0x814>  // b.plast
  411d9c:	tbz	w8, #3, 411cb0 <try_implicit_rule@@Base+0x6d4>
  411da0:	ldr	w0, [x19, #224]
  411da4:	bl	419be0 <print_spaces@@Base>
  411da8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411dac:	mov	w2, #0x5                   	// #5
  411db0:	mov	x0, xzr
  411db4:	add	x1, x1, #0xe4c
  411db8:	bl	406dc0 <dcgettext@plt>
  411dbc:	ldr	w8, [x19, #208]
  411dc0:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  411dc4:	add	x9, x9, #0x3a9
  411dc8:	mov	w2, w24
  411dcc:	cmp	w8, #0x0
  411dd0:	ldr	x8, [x19, #120]
  411dd4:	mov	x3, x26
  411dd8:	csel	x1, x8, x9, ne  // ne = any
  411ddc:	bl	406e60 <printf@plt>
  411de0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  411de4:	ldr	x0, [x8, #2504]
  411de8:	bl	406cf0 <fflush@plt>
  411dec:	b	411cb0 <try_implicit_rule@@Base+0x6d4>
  411df0:	tbz	w8, #3, 411e28 <try_implicit_rule@@Base+0x84c>
  411df4:	ldr	w0, [x19, #224]
  411df8:	bl	419be0 <print_spaces@@Base>
  411dfc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  411e00:	mov	w2, #0x5                   	// #5
  411e04:	mov	x0, xzr
  411e08:	add	x1, x1, #0xe66
  411e0c:	bl	406dc0 <dcgettext@plt>
  411e10:	mov	w1, w24
  411e14:	mov	x2, x26
  411e18:	bl	406e60 <printf@plt>
  411e1c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  411e20:	ldr	x0, [x8, #2504]
  411e24:	bl	406cf0 <fflush@plt>
  411e28:	ldr	w8, [x19, #208]
  411e2c:	add	x0, x19, #0x104
  411e30:	str	x24, [x19, #104]
  411e34:	str	x26, [x19, #88]
  411e38:	cbz	w8, 411e60 <try_implicit_rule@@Base+0x884>
  411e3c:	ldr	x1, [x19, #192]
  411e40:	mov	x2, x23
  411e44:	bl	406710 <memcpy@plt>
  411e48:	ldr	x0, [x19, #16]
  411e4c:	mov	x1, x26
  411e50:	mov	x2, x24
  411e54:	bl	406710 <memcpy@plt>
  411e58:	add	x24, x24, x23
  411e5c:	b	411e6c <try_implicit_rule@@Base+0x890>
  411e60:	mov	x1, x26
  411e64:	mov	x2, x24
  411e68:	bl	406710 <memcpy@plt>
  411e6c:	add	x9, x19, #0x104
  411e70:	strb	wzr, [x9, x24]
  411e74:	ldr	x26, [x21, #32]
  411e78:	mov	w24, #0x100                 	// #256
  411e7c:	str	x21, [x19, #80]
  411e80:	cbz	x26, 412660 <try_implicit_rule@@Base+0x1084>
  411e84:	ldr	x8, [x19, #232]
  411e88:	str	x9, [x8, #40]
  411e8c:	mov	w8, #0x1                   	// #1
  411e90:	strb	w8, [x21, #51]
  411e94:	ldr	x22, [x26, #8]
  411e98:	cbnz	x22, 411ea4 <try_implicit_rule@@Base+0x8c8>
  411e9c:	ldr	x8, [x26, #16]
  411ea0:	ldr	x22, [x8]
  411ea4:	adrp	x14, 43e000 <memcpy@GLIBC_2.17>
  411ea8:	mov	w23, wzr
  411eac:	mov	w20, wzr
  411eb0:	add	x14, x14, #0xcf0
  411eb4:	str	xzr, [x19, #48]
  411eb8:	str	x28, [x19, #184]
  411ebc:	adrp	x15, 429000 <_IO_stdin_used@@Base+0x1680>
  411ec0:	add	x15, x15, #0xda8
  411ec4:	cbnz	x22, 411ed8 <try_implicit_rule@@Base+0x8fc>
  411ec8:	ldr	x26, [x26]
  411ecc:	cbz	x26, 411c60 <try_implicit_rule@@Base+0x684>
  411ed0:	ldr	x22, [x26, #8]
  411ed4:	cbz	x22, 411fd8 <try_implicit_rule@@Base+0x9fc>
  411ed8:	ldrb	w8, [x26, #33]
  411edc:	tbz	w8, #3, 411fe8 <try_implicit_rule@@Base+0xa0c>
  411ee0:	ldrb	w8, [x22], #1
  411ee4:	ldrh	w9, [x14, x8, lsl #1]
  411ee8:	tst	w9, #0x6
  411eec:	b.ne	411ee0 <try_implicit_rule@@Base+0x904>  // b.any
  411ef0:	cbz	w8, 411fd0 <try_implicit_rule@@Base+0x9f4>
  411ef4:	sub	x21, x22, #0x1
  411ef8:	mov	x25, x22
  411efc:	mov	w10, w8
  411f00:	b	411f10 <try_implicit_rule@@Base+0x934>
  411f04:	sub	x9, x9, #0x1
  411f08:	ldrb	w10, [x9], #1
  411f0c:	mov	x25, x9
  411f10:	and	w9, w10, #0xff
  411f14:	cmp	w9, #0x24
  411f18:	b.hi	411f5c <try_implicit_rule@@Base+0x980>  // b.pmore
  411f1c:	and	x9, x10, #0xff
  411f20:	adr	x10, 411f08 <try_implicit_rule@@Base+0x92c>
  411f24:	ldrb	w11, [x15, x9]
  411f28:	add	x10, x10, x11, lsl #2
  411f2c:	mov	x9, x25
  411f30:	br	x10
  411f34:	mov	x9, x25
  411f38:	ldrb	w10, [x9], #1
  411f3c:	cmp	w10, #0x28
  411f40:	b.eq	411f6c <try_implicit_rule@@Base+0x990>  // b.none
  411f44:	cmp	w10, #0x7b
  411f48:	b.ne	411f08 <try_implicit_rule@@Base+0x92c>  // b.any
  411f4c:	mov	w11, #0x7d                  	// #125
  411f50:	ldrb	w13, [x9]
  411f54:	cbnz	w13, 411f78 <try_implicit_rule@@Base+0x99c>
  411f58:	b	411f08 <try_implicit_rule@@Base+0x92c>
  411f5c:	cmp	w9, #0x7c
  411f60:	b.eq	411fb0 <try_implicit_rule@@Base+0x9d4>  // b.none
  411f64:	mov	x9, x25
  411f68:	b	411f08 <try_implicit_rule@@Base+0x92c>
  411f6c:	mov	w11, #0x29                  	// #41
  411f70:	ldrb	w13, [x9]
  411f74:	cbz	w13, 411f08 <try_implicit_rule@@Base+0x92c>
  411f78:	mov	w12, wzr
  411f7c:	add	x9, x25, #0x2
  411f80:	b	411f90 <try_implicit_rule@@Base+0x9b4>
  411f84:	add	w12, w12, #0x1
  411f88:	ldrb	w13, [x9], #1
  411f8c:	cbz	w13, 411f04 <try_implicit_rule@@Base+0x928>
  411f90:	cmp	w10, w13, uxtb
  411f94:	b.eq	411f84 <try_implicit_rule@@Base+0x9a8>  // b.none
  411f98:	cmp	w11, w13, uxtb
  411f9c:	b.ne	411f88 <try_implicit_rule@@Base+0x9ac>  // b.any
  411fa0:	subs	w12, w12, #0x1
  411fa4:	b.ge	411f88 <try_implicit_rule@@Base+0x9ac>  // b.tcont
  411fa8:	b	411f08 <try_implicit_rule@@Base+0x92c>
  411fac:	sub	x25, x25, #0x1
  411fb0:	sub	x27, x25, x21
  411fb4:	cbnz	w20, 412114 <try_implicit_rule@@Base+0xb38>
  411fb8:	cmp	x27, #0x1
  411fbc:	b.ne	412114 <try_implicit_rule@@Base+0xb38>  // b.any
  411fc0:	cmp	w8, #0x7c
  411fc4:	b.ne	412114 <try_implicit_rule@@Base+0xb38>  // b.any
  411fc8:	mov	w20, #0x1                   	// #1
  411fcc:	b	411ec4 <try_implicit_rule@@Base+0x8e8>
  411fd0:	mov	x22, xzr
  411fd4:	b	411ec4 <try_implicit_rule@@Base+0x8e8>
  411fd8:	ldr	x8, [x26, #16]
  411fdc:	ldr	x22, [x8]
  411fe0:	ldrb	w8, [x26, #33]
  411fe4:	tbnz	w8, #3, 411ee0 <try_implicit_rule@@Base+0x904>
  411fe8:	mov	w1, #0x25                  	// #37
  411fec:	mov	x0, x22
  411ff0:	bl	406c80 <strchr@plt>
  411ff4:	str	x0, [x19, #240]
  411ff8:	cbz	x0, 41205c <try_implicit_rule@@Base+0xa80>
  411ffc:	ldr	x27, [x19, #128]
  412000:	ldr	w8, [x19, #208]
  412004:	mov	x21, x0
  412008:	mov	x24, x27
  41200c:	cbz	w8, 412024 <try_implicit_rule@@Base+0xa48>
  412010:	ldr	x1, [x19, #192]
  412014:	ldr	x2, [x19, #176]
  412018:	mov	x0, x27
  41201c:	bl	406710 <memcpy@plt>
  412020:	ldr	x24, [x19, #32]
  412024:	sub	x25, x21, x22
  412028:	mov	x0, x24
  41202c:	mov	x1, x22
  412030:	mov	x2, x25
  412034:	bl	406710 <memcpy@plt>
  412038:	add	x22, x24, x25
  41203c:	ldr	x24, [x19, #104]
  412040:	ldr	x1, [x19, #88]
  412044:	mov	x0, x22
  412048:	mov	x2, x24
  41204c:	bl	406710 <memcpy@plt>
  412050:	add	x0, x22, x24
  412054:	add	x1, x21, #0x1
  412058:	b	412068 <try_implicit_rule@@Base+0xa8c>
  41205c:	ldr	x27, [x19, #128]
  412060:	mov	x1, x22
  412064:	mov	x0, x27
  412068:	bl	406d00 <strcpy@plt>
  41206c:	add	x0, x19, #0xf0
  412070:	mov	w1, #0x28                  	// #40
  412074:	mov	w2, #0x1                   	// #1
  412078:	mov	w4, #0x20                  	// #32
  41207c:	mov	x3, xzr
  412080:	str	x27, [x19, #240]
  412084:	bl	41def0 <parse_file_seq@@Base>
  412088:	str	x0, [x19, #248]
  41208c:	cbz	x0, 4120c4 <try_implicit_rule@@Base+0xae8>
  412090:	ldrh	w8, [x26, #32]
  412094:	ldrh	w9, [x0, #32]
  412098:	add	w23, w23, #0x1
  41209c:	lsr	w8, w8, #9
  4120a0:	bfi	w9, w8, #9, #1
  4120a4:	strh	w9, [x0, #32]
  4120a8:	ldrh	w8, [x26, #32]
  4120ac:	and	w9, w9, #0xffffefff
  4120b0:	and	w8, w8, #0x1000
  4120b4:	orr	w8, w9, w8
  4120b8:	strh	w8, [x0, #32]
  4120bc:	ldr	x0, [x0]
  4120c0:	cbnz	x0, 412090 <try_implicit_rule@@Base+0xab4>
  4120c4:	mov	x22, xzr
  4120c8:	ldr	x8, [x19, #152]
  4120cc:	cmp	w23, w8
  4120d0:	b.ls	412304 <try_implicit_rule@@Base+0xd28>  // b.plast
  4120d4:	adrp	x9, 442000 <just_print_flag@@Base>
  4120d8:	ldr	w8, [x9, #244]
  4120dc:	ldr	x0, [x19, #184]
  4120e0:	cmp	w8, w23
  4120e4:	csel	w8, w8, w23, hi  // hi = pmore
  4120e8:	lsl	x1, x8, #5
  4120ec:	sub	x21, x28, x0
  4120f0:	str	w8, [x9, #244]
  4120f4:	str	x8, [x19, #152]
  4120f8:	bl	419de0 <xrealloc@@Base>
  4120fc:	add	x28, x0, x21
  412100:	str	x0, [x19, #184]
  412104:	ldr	x24, [x19, #248]
  412108:	str	x24, [x19, #168]
  41210c:	cbnz	x24, 412344 <try_implicit_rule@@Base+0xd68>
  412110:	b	412310 <try_implicit_rule@@Base+0xd34>
  412114:	mov	w2, #0x25                  	// #37
  412118:	mov	x0, x21
  41211c:	mov	x1, x25
  412120:	bl	419e98 <lindex@@Base>
  412124:	str	x0, [x19, #240]
  412128:	cbz	x0, 412178 <try_implicit_rule@@Base+0xb9c>
  41212c:	sub	x24, x0, x21
  412130:	mov	x1, x21
  412134:	ldr	x21, [x19, #128]
  412138:	mov	x22, x0
  41213c:	mov	x2, x24
  412140:	mov	x0, x21
  412144:	bl	406710 <memcpy@plt>
  412148:	ldr	w9, [x19, #208]
  41214c:	add	x8, x21, x24
  412150:	cbz	w9, 4121c4 <try_implicit_rule@@Base+0xbe8>
  412154:	mov	w9, #0x29                  	// #41
  412158:	strb	w9, [x8, #4]
  41215c:	mov	w9, #0x2824                	// #10276
  412160:	movk	w9, #0x462a, lsl #16
  412164:	str	w9, [x8]
  412168:	mov	w9, #0x1                   	// #1
  41216c:	str	w9, [x19, #168]
  412170:	mov	w9, #0x5                   	// #5
  412174:	b	4121d4 <try_implicit_rule@@Base+0xbf8>
  412178:	ldr	x22, [x19, #128]
  41217c:	mov	x1, x21
  412180:	mov	x2, x27
  412184:	mov	x0, x22
  412188:	bl	406710 <memcpy@plt>
  41218c:	str	wzr, [x19, #168]
  412190:	add	x8, x22, x27
  412194:	strb	wzr, [x8]
  412198:	ldr	w8, [x19, #40]
  41219c:	cbnz	w8, 412208 <try_implicit_rule@@Base+0xc2c>
  4121a0:	ldr	x21, [x19, #232]
  4121a4:	mov	w1, wzr
  4121a8:	mov	x0, x21
  4121ac:	bl	424334 <initialize_file_variables@@Base>
  4121b0:	mov	x0, x21
  4121b4:	bl	407bd4 <set_file_variables@@Base>
  4121b8:	mov	w8, #0x1                   	// #1
  4121bc:	str	w8, [x19, #40]
  4121c0:	b	41224c <try_implicit_rule@@Base+0xc70>
  4121c4:	mov	w9, #0x2a24                	// #10788
  4121c8:	strh	w9, [x8]
  4121cc:	mov	w9, #0x2                   	// #2
  4121d0:	str	wzr, [x19, #168]
  4121d4:	add	x21, x8, x9
  4121d8:	mvn	x8, x24
  4121dc:	add	x1, x22, #0x1
  4121e0:	add	x22, x27, x8
  4121e4:	mov	x0, x21
  4121e8:	mov	x2, x22
  4121ec:	bl	406710 <memcpy@plt>
  4121f0:	add	x8, x21, x22
  4121f4:	ldr	x22, [x19, #128]
  4121f8:	mov	w24, #0x100                 	// #256
  4121fc:	strb	wzr, [x8]
  412200:	ldr	w8, [x19, #40]
  412204:	cbz	w8, 4121a0 <try_implicit_rule@@Base+0xbc4>
  412208:	ldr	x8, [x19, #48]
  41220c:	cbz	w8, 412218 <try_implicit_rule@@Base+0xc3c>
  412210:	ldr	x21, [x19, #232]
  412214:	b	41224c <try_implicit_rule@@Base+0xc70>
  412218:	ldr	x21, [x19, #232]
  41221c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  412220:	mov	w1, #0x1                   	// #1
  412224:	mov	w3, #0x6                   	// #6
  412228:	ldr	x8, [x21, #80]
  41222c:	ldr	x2, [x21, #40]
  412230:	add	x0, x0, #0x5bf
  412234:	mov	w4, wzr
  412238:	ldr	x5, [x8, #8]
  41223c:	mov	w8, #0x1                   	// #1
  412240:	mov	x6, xzr
  412244:	str	x8, [x19, #48]
  412248:	bl	423d70 <define_variable_in_set@@Base>
  41224c:	mov	x0, x22
  412250:	mov	x1, x21
  412254:	bl	40a7f8 <variable_expand_for_file@@Base>
  412258:	ldr	w8, [x19, #168]
  41225c:	add	x22, x19, #0xf8
  412260:	str	x0, [x19, #240]
  412264:	cmp	w8, #0x0
  412268:	ldr	x8, [x19, #120]
  41226c:	csel	x21, xzr, x8, eq  // eq = none
  412270:	b	412278 <try_implicit_rule@@Base+0xc9c>
  412274:	cbz	w8, 4122f4 <try_implicit_rule@@Base+0xd18>
  412278:	cmp	w20, #0x0
  41227c:	csinc	w2, w24, wzr, eq  // eq = none
  412280:	add	x0, x19, #0xf0
  412284:	mov	w1, #0x28                  	// #40
  412288:	mov	x3, x21
  41228c:	mov	w4, wzr
  412290:	bl	41def0 <parse_file_seq@@Base>
  412294:	str	x0, [x22]
  412298:	cbz	x0, 4122d0 <try_implicit_rule@@Base+0xcf4>
  41229c:	cbz	w20, 4122c0 <try_implicit_rule@@Base+0xce4>
  4122a0:	ldrh	w8, [x0, #32]
  4122a4:	mov	x22, x0
  4122a8:	ldr	x0, [x0]
  4122ac:	add	w23, w23, #0x1
  4122b0:	orr	w8, w8, #0x200
  4122b4:	strh	w8, [x22, #32]
  4122b8:	cbnz	x0, 4122a0 <try_implicit_rule@@Base+0xcc4>
  4122bc:	b	4122d0 <try_implicit_rule@@Base+0xcf4>
  4122c0:	mov	x22, x0
  4122c4:	ldr	x0, [x0]
  4122c8:	add	w23, w23, #0x1
  4122cc:	cbnz	x0, 4122c0 <try_implicit_rule@@Base+0xce4>
  4122d0:	ldr	x9, [x19, #240]
  4122d4:	ldrb	w8, [x9]
  4122d8:	cmp	w8, #0x7c
  4122dc:	b.ne	412274 <try_implicit_rule@@Base+0xc98>  // b.any
  4122e0:	add	x8, x9, #0x1
  4122e4:	str	x8, [x19, #240]
  4122e8:	ldrb	w8, [x9, #1]
  4122ec:	mov	w20, #0x1                   	// #1
  4122f0:	b	412274 <try_implicit_rule@@Base+0xc98>
  4122f4:	mov	x22, x25
  4122f8:	ldr	x8, [x19, #152]
  4122fc:	cmp	w23, w8
  412300:	b.hi	4120d4 <try_implicit_rule@@Base+0xaf8>  // b.pmore
  412304:	ldr	x24, [x19, #248]
  412308:	str	x24, [x19, #168]
  41230c:	cbnz	x24, 412344 <try_implicit_rule@@Base+0xd68>
  412310:	ldr	x0, [x19, #168]
  412314:	bl	41a130 <free_ns_chain@@Base>
  412318:	adrp	x14, 43e000 <memcpy@GLIBC_2.17>
  41231c:	add	x14, x14, #0xcf0
  412320:	mov	w24, #0x100                 	// #256
  412324:	b	411ebc <try_implicit_rule@@Base+0x8e0>
  412328:	mov	x0, x21
  41232c:	bl	40aae4 <lookup_file@@Base>
  412330:	cbz	x0, 412480 <try_implicit_rule@@Base+0xea4>
  412334:	ldr	x21, [x24, #8]
  412338:	str	x21, [x28], #32
  41233c:	ldr	x24, [x24]
  412340:	cbz	x24, 412310 <try_implicit_rule@@Base+0xd34>
  412344:	ldr	x25, [x26, #8]
  412348:	ldr	x21, [x24, #8]
  41234c:	cbnz	x25, 412358 <try_implicit_rule@@Base+0xd7c>
  412350:	ldr	x8, [x26, #16]
  412354:	ldr	x25, [x8]
  412358:	mov	x0, x21
  41235c:	bl	4095a0 <file_impossible_p@@Base>
  412360:	cbnz	w0, 4125a4 <try_implicit_rule@@Base+0xfc8>
  412364:	movi	v0.2d, #0x0
  412368:	stp	q0, q0, [x28]
  41236c:	ldrh	w8, [x24, #32]
  412370:	ubfx	w9, w8, #9, #1
  412374:	strb	w9, [x28, #24]
  412378:	ldrh	w9, [x24, #32]
  41237c:	lsr	w9, w9, #11
  412380:	and	w9, w9, #0x2
  412384:	bfxil	w9, w8, #9, #1
  412388:	strb	w9, [x28, #24]
  41238c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412390:	ldrb	w8, [x8, #3236]
  412394:	tbz	w8, #3, 4123d8 <try_implicit_rule@@Base+0xdfc>
  412398:	ldr	w0, [x19, #224]
  41239c:	bl	419be0 <print_spaces@@Base>
  4123a0:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  4123a4:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  4123a8:	cmp	x21, x25
  4123ac:	add	x8, x8, #0xf13
  4123b0:	add	x9, x9, #0xef3
  4123b4:	csel	x1, x9, x8, eq  // eq = none
  4123b8:	mov	w2, #0x5                   	// #5
  4123bc:	mov	x0, xzr
  4123c0:	bl	406dc0 <dcgettext@plt>
  4123c4:	ldr	x1, [x24, #8]
  4123c8:	bl	406e60 <printf@plt>
  4123cc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4123d0:	ldr	x0, [x8, #2504]
  4123d4:	bl	406cf0 <fflush@plt>
  4123d8:	ldr	x8, [x19, #232]
  4123dc:	ldr	x21, [x24, #8]
  4123e0:	ldr	x25, [x8, #24]
  4123e4:	cbz	x25, 412328 <try_implicit_rule@@Base+0xd4c>
  4123e8:	add	x27, x21, #0x1
  4123ec:	b	412408 <try_implicit_rule@@Base+0xe2c>
  4123f0:	add	x0, x8, #0x1
  4123f4:	mov	x1, x27
  4123f8:	bl	406c10 <strcmp@plt>
  4123fc:	cbz	w0, 412338 <try_implicit_rule@@Base+0xd5c>
  412400:	ldr	x25, [x25]
  412404:	cbz	x25, 412328 <try_implicit_rule@@Base+0xd4c>
  412408:	ldr	x8, [x25, #8]
  41240c:	mov	x9, x8
  412410:	cbnz	x8, 41241c <try_implicit_rule@@Base+0xe40>
  412414:	ldr	x9, [x25, #16]
  412418:	ldr	x9, [x9]
  41241c:	cmp	x9, x21
  412420:	b.eq	412338 <try_implicit_rule@@Base+0xd5c>  // b.none
  412424:	mov	x9, x8
  412428:	cbz	x8, 412440 <try_implicit_rule@@Base+0xe64>
  41242c:	ldrb	w9, [x9]
  412430:	ldrb	w10, [x21]
  412434:	cmp	w9, w10
  412438:	b.ne	412400 <try_implicit_rule@@Base+0xe24>  // b.any
  41243c:	b	412458 <try_implicit_rule@@Base+0xe7c>
  412440:	ldr	x9, [x25, #16]
  412444:	ldr	x9, [x9]
  412448:	ldrb	w9, [x9]
  41244c:	ldrb	w10, [x21]
  412450:	cmp	w9, w10
  412454:	b.ne	412400 <try_implicit_rule@@Base+0xe24>  // b.any
  412458:	mov	x9, x8
  41245c:	cbnz	x8, 412468 <try_implicit_rule@@Base+0xe8c>
  412460:	ldr	x9, [x25, #16]
  412464:	ldr	x9, [x9]
  412468:	ldrb	w9, [x9]
  41246c:	cbz	w9, 412338 <try_implicit_rule@@Base+0xd5c>
  412470:	cbnz	x8, 4123f0 <try_implicit_rule@@Base+0xe14>
  412474:	ldr	x8, [x25, #16]
  412478:	ldr	x8, [x8]
  41247c:	b	4123f0 <try_implicit_rule@@Base+0xe14>
  412480:	ldr	x0, [x24, #8]
  412484:	bl	40934c <file_exists_p@@Base>
  412488:	cbnz	w0, 412334 <try_implicit_rule@@Base+0xd58>
  41248c:	ldr	x0, [x24, #8]
  412490:	mov	x1, xzr
  412494:	mov	x2, xzr
  412498:	mov	x3, xzr
  41249c:	bl	4261c4 <vpath_search@@Base>
  4124a0:	cbz	x0, 4124ec <try_implicit_rule@@Base+0xf10>
  4124a4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4124a8:	ldrb	w8, [x8, #3236]
  4124ac:	tbz	w8, #3, 412334 <try_implicit_rule@@Base+0xd58>
  4124b0:	mov	x21, x0
  4124b4:	ldr	w0, [x19, #224]
  4124b8:	bl	419be0 <print_spaces@@Base>
  4124bc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4124c0:	mov	w2, #0x5                   	// #5
  4124c4:	mov	x0, xzr
  4124c8:	add	x1, x1, #0xf37
  4124cc:	bl	406dc0 <dcgettext@plt>
  4124d0:	ldr	x1, [x24, #8]
  4124d4:	mov	x2, x21
  4124d8:	bl	406e60 <printf@plt>
  4124dc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4124e0:	ldr	x0, [x8, #2504]
  4124e4:	bl	406cf0 <fflush@plt>
  4124e8:	b	412334 <try_implicit_rule@@Base+0xd58>
  4124ec:	ldr	w8, [x19, #160]
  4124f0:	cbz	w8, 4125f8 <try_implicit_rule@@Base+0x101c>
  4124f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4124f8:	ldrb	w8, [x8, #3236]
  4124fc:	tbz	w8, #3, 412530 <try_implicit_rule@@Base+0xf54>
  412500:	ldr	w0, [x19, #224]
  412504:	bl	419be0 <print_spaces@@Base>
  412508:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  41250c:	mov	w2, #0x5                   	// #5
  412510:	mov	x0, xzr
  412514:	add	x1, x1, #0xf5e
  412518:	bl	406dc0 <dcgettext@plt>
  41251c:	ldr	x1, [x24, #8]
  412520:	bl	406e60 <printf@plt>
  412524:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412528:	ldr	x0, [x8, #2504]
  41252c:	bl	406cf0 <fflush@plt>
  412530:	ldr	x21, [x19, #56]
  412534:	cbnz	x21, 412540 <try_implicit_rule@@Base+0xf64>
  412538:	sub	x21, sp, #0x90
  41253c:	mov	sp, x21
  412540:	movi	v0.2d, #0x0
  412544:	str	xzr, [x21, #136]
  412548:	stur	q0, [x21, #120]
  41254c:	stur	q0, [x21, #104]
  412550:	stur	q0, [x21, #88]
  412554:	stur	q0, [x21, #72]
  412558:	stur	q0, [x21, #56]
  41255c:	stur	q0, [x21, #40]
  412560:	stur	q0, [x21, #24]
  412564:	stur	q0, [x21, #8]
  412568:	ldr	x8, [x24, #8]
  41256c:	mov	x0, x21
  412570:	mov	w1, wzr
  412574:	str	x8, [x21]
  412578:	ldp	w3, w2, [x19, #24]
  41257c:	bl	4116c8 <try_implicit_rule@@Base+0xec>
  412580:	cbz	w0, 412620 <try_implicit_rule@@Base+0x1044>
  412584:	ldr	x8, [x21]
  412588:	str	xzr, [x19, #56]
  41258c:	str	x8, [x28, #8]
  412590:	mov	x8, x21
  412594:	ldr	x21, [x24, #8]
  412598:	str	x21, [x8]
  41259c:	str	x8, [x28, #16]
  4125a0:	b	412338 <try_implicit_rule@@Base+0xd5c>
  4125a4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4125a8:	ldrb	w8, [x8, #3236]
  4125ac:	tbz	w8, #3, 4125f0 <try_implicit_rule@@Base+0x1014>
  4125b0:	ldr	w0, [x19, #224]
  4125b4:	bl	419be0 <print_spaces@@Base>
  4125b8:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  4125bc:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  4125c0:	cmp	x21, x25
  4125c4:	add	x8, x8, #0xec1
  4125c8:	add	x9, x9, #0xe93
  4125cc:	csel	x1, x9, x8, eq  // eq = none
  4125d0:	mov	w2, #0x5                   	// #5
  4125d4:	mov	x0, xzr
  4125d8:	bl	406dc0 <dcgettext@plt>
  4125dc:	ldr	x1, [x24, #8]
  4125e0:	bl	406e60 <printf@plt>
  4125e4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4125e8:	ldr	x0, [x8, #2504]
  4125ec:	bl	406cf0 <fflush@plt>
  4125f0:	ldr	x8, [x19, #112]
  4125f4:	str	xzr, [x8]
  4125f8:	ldr	x20, [x19, #232]
  4125fc:	ldr	x22, [x19, #144]
  412600:	ldp	x23, x21, [x19, #176]
  412604:	ldr	x25, [x19, #80]
  412608:	ldr	x0, [x19, #168]
  41260c:	ldr	x24, [x19, #136]
  412610:	bl	41a130 <free_ns_chain@@Base>
  412614:	str	xzr, [x20, #40]
  412618:	strb	wzr, [x25, #51]
  41261c:	b	411cbc <try_implicit_rule@@Base+0x6e0>
  412620:	ldr	x0, [x21, #80]
  412624:	cbz	x0, 41262c <try_implicit_rule@@Base+0x1050>
  412628:	bl	423fb8 <free_variable_set@@Base>
  41262c:	str	x21, [x19, #56]
  412630:	ldr	x0, [x21, #88]
  412634:	ldr	x20, [x19, #232]
  412638:	ldr	x22, [x19, #144]
  41263c:	ldp	x23, x21, [x19, #176]
  412640:	ldr	x25, [x19, #80]
  412644:	cbz	x0, 41264c <try_implicit_rule@@Base+0x1070>
  412648:	bl	423fb8 <free_variable_set@@Base>
  41264c:	ldr	x0, [x24, #8]
  412650:	bl	409420 <file_impossible@@Base>
  412654:	b	412608 <try_implicit_rule@@Base+0x102c>
  412658:	mov	x25, xzr
  41265c:	b	412a78 <try_implicit_rule@@Base+0x149c>
  412660:	ldr	x26, [x19, #232]
  412664:	ldr	x10, [x19, #136]
  412668:	mov	x21, x28
  41266c:	ldr	w8, [x19, #44]
  412670:	cbz	w8, 412690 <try_implicit_rule@@Base+0x10b4>
  412674:	ldr	x8, [x19, #80]
  412678:	and	x9, x10, #0xffffffff
  41267c:	add	x9, x22, x9, lsl #5
  412680:	ldr	w9, [x9, #16]
  412684:	ldr	x8, [x8, #8]
  412688:	ldr	x8, [x8, x9, lsl #3]
  41268c:	str	x8, [x26]
  412690:	cmp	x20, x21
  412694:	and	x23, x10, #0xffffffff
  412698:	str	x21, [x19, #184]
  41269c:	b.ls	412858 <try_implicit_rule@@Base+0x127c>  // b.plast
  4126a0:	ldr	x8, [x19, #144]
  4126a4:	mov	w25, #0x4900                	// #18688
  4126a8:	add	x24, x8, x23, lsl #5
  4126ac:	b	4126e4 <try_implicit_rule@@Base+0x1108>
  4126b0:	mov	x0, x22
  4126b4:	bl	40aae4 <lookup_file@@Base>
  4126b8:	str	x0, [x21, #16]
  4126bc:	cbz	x0, 41282c <try_implicit_rule@@Base+0x1250>
  4126c0:	ldur	x8, [x20, #-16]
  4126c4:	sub	x20, x20, #0x20
  4126c8:	cbz	x8, 412808 <try_implicit_rule@@Base+0x122c>
  4126cc:	ldr	x9, [x19, #184]
  4126d0:	ldr	x8, [x26, #24]
  4126d4:	cmp	x20, x9
  4126d8:	str	x8, [x21]
  4126dc:	str	x21, [x26, #24]
  4126e0:	b.ls	412858 <try_implicit_rule@@Base+0x127c>  // b.plast
  4126e4:	ldur	x22, [x20, #-16]
  4126e8:	cbz	x22, 4127b0 <try_implicit_rule@@Base+0x11d4>
  4126ec:	ldr	x0, [x22]
  4126f0:	bl	40aae4 <lookup_file@@Base>
  4126f4:	cbz	x0, 412710 <try_implicit_rule@@Base+0x1134>
  4126f8:	mov	x26, x0
  4126fc:	ldr	w8, [x26, #136]!
  412700:	mov	x21, x0
  412704:	orr	w8, w8, #0x8000
  412708:	str	w8, [x26]
  41270c:	b	412724 <try_implicit_rule@@Base+0x1148>
  412710:	ldr	x0, [x22]
  412714:	bl	40ab6c <enter_file@@Base>
  412718:	mov	x26, x0
  41271c:	ldr	w8, [x26, #136]!
  412720:	mov	x21, x0
  412724:	ldur	q0, [x22, #24]
  412728:	stur	q0, [x21, #24]
  41272c:	ldr	x9, [x22, #40]
  412730:	str	x9, [x21, #40]
  412734:	ldr	q0, [x22, #80]
  412738:	str	q0, [x21, #80]
  41273c:	ldr	w9, [x22, #136]
  412740:	lsr	w9, w9, #18
  412744:	bfi	w8, w9, #18, #1
  412748:	str	w8, [x21, #136]
  41274c:	ldr	x9, [x22, #48]
  412750:	orr	w8, w8, w25
  412754:	str	w8, [x21, #136]
  412758:	str	x9, [x21, #48]
  41275c:	ldur	x0, [x20, #-24]
  412760:	bl	40aae4 <lookup_file@@Base>
  412764:	cbz	x0, 41277c <try_implicit_rule@@Base+0x11a0>
  412768:	ldrb	w8, [x0, #136]
  41276c:	tbz	w8, #5, 41277c <try_implicit_rule@@Base+0x11a0>
  412770:	ldr	w8, [x26]
  412774:	orr	w8, w8, #0x20
  412778:	str	w8, [x26]
  41277c:	ldr	x21, [x21, #24]
  412780:	ldr	x26, [x19, #232]
  412784:	cbz	x21, 4127b0 <try_implicit_rule@@Base+0x11d4>
  412788:	ldr	x0, [x21, #8]
  41278c:	bl	40ab6c <enter_file@@Base>
  412790:	stp	xzr, x0, [x21, #8]
  412794:	ldrh	w8, [x21, #32]
  412798:	ldr	w9, [x0, #136]
  41279c:	and	w8, w8, #0x100
  4127a0:	orr	w8, w9, w8
  4127a4:	str	w8, [x0, #136]
  4127a8:	ldr	x21, [x21]
  4127ac:	cbnz	x21, 412788 <try_implicit_rule@@Base+0x11ac>
  4127b0:	mov	w0, #0x28                  	// #40
  4127b4:	bl	419e38 <xcalloc@@Base>
  4127b8:	ldurb	w8, [x20, #-8]
  4127bc:	ldrh	w9, [x0, #32]
  4127c0:	mov	x21, x0
  4127c4:	and	w8, w8, #0x1
  4127c8:	bfi	w9, w8, #9, #1
  4127cc:	strh	w9, [x0, #32]
  4127d0:	ldurb	w8, [x20, #-8]
  4127d4:	and	w9, w9, #0xffffefff
  4127d8:	ubfx	w8, w8, #1, #1
  4127dc:	orr	w8, w9, w8, lsl #12
  4127e0:	strh	w8, [x0, #32]
  4127e4:	ldur	x0, [x20, #-32]
  4127e8:	bl	423690 <strcache_add@@Base>
  4127ec:	ldr	w8, [x19, #44]
  4127f0:	mov	x22, x0
  4127f4:	cbz	w8, 4126b0 <try_implicit_rule@@Base+0x10d4>
  4127f8:	str	x22, [x21, #8]
  4127fc:	ldur	x8, [x20, #-16]
  412800:	sub	x20, x20, #0x20
  412804:	cbnz	x8, 4126cc <try_implicit_rule@@Base+0x10f0>
  412808:	ldr	x8, [x24]
  41280c:	ldrb	w8, [x8, #50]
  412810:	cbz	w8, 4126cc <try_implicit_rule@@Base+0x10f0>
  412814:	ldr	x8, [x21, #16]
  412818:	cbz	x8, 412848 <try_implicit_rule@@Base+0x126c>
  41281c:	ldr	w9, [x8, #136]
  412820:	orr	w9, w9, #0x100
  412824:	str	w9, [x8, #136]
  412828:	b	4126cc <try_implicit_rule@@Base+0x10f0>
  41282c:	mov	x0, x22
  412830:	bl	40ab6c <enter_file@@Base>
  412834:	str	x0, [x21, #16]
  412838:	ldur	x8, [x20, #-16]
  41283c:	sub	x20, x20, #0x20
  412840:	cbnz	x8, 4126cc <try_implicit_rule@@Base+0x10f0>
  412844:	b	412808 <try_implicit_rule@@Base+0x122c>
  412848:	ldrh	w8, [x21, #32]
  41284c:	orr	w8, w8, #0x100
  412850:	strh	w8, [x21, #32]
  412854:	b	4126cc <try_implicit_rule@@Base+0x10f0>
  412858:	ldr	x8, [x19, #144]
  41285c:	ldr	x1, [x19, #192]
  412860:	add	x8, x8, x23, lsl #5
  412864:	ldrb	w8, [x8, #24]
  412868:	cbz	w8, 4128c0 <try_implicit_rule@@Base+0x12e4>
  41286c:	ldr	x2, [x19, #176]
  412870:	ldr	x22, [x19, #104]
  412874:	add	x0, x19, #0x104
  412878:	add	x21, x19, #0x104
  41287c:	add	x20, x22, x2
  412880:	bl	406710 <memcpy@plt>
  412884:	ldr	x0, [x19, #16]
  412888:	ldr	x1, [x19, #88]
  41288c:	mov	x2, x22
  412890:	bl	406710 <memcpy@plt>
  412894:	add	x0, x19, #0x104
  412898:	strb	wzr, [x21, x20]
  41289c:	bl	423690 <strcache_add@@Base>
  4128a0:	str	x20, [x19, #104]
  4128a4:	b	4128cc <try_implicit_rule@@Base+0x12f0>
  4128a8:	ldr	x8, [x19, #216]
  4128ac:	mov	w1, #0x2f                  	// #47
  4128b0:	mov	x0, x23
  4128b4:	sub	x2, x8, #0x1
  4128b8:	bl	406ca0 <memrchr@plt>
  4128bc:	b	4117a4 <try_implicit_rule@@Base+0x1c8>
  4128c0:	ldr	x0, [x19, #88]
  4128c4:	ldr	x1, [x19, #104]
  4128c8:	bl	423914 <strcache_add_len@@Base>
  4128cc:	ldr	x10, [x19, #80]
  4128d0:	str	x0, [x26, #40]
  4128d4:	ldr	w8, [x26, #136]
  4128d8:	ldr	x22, [x19, #144]
  4128dc:	ldr	x9, [x10, #40]
  4128e0:	orr	w8, w8, #0x800
  4128e4:	add	x20, x22, x23, lsl #5
  4128e8:	str	x9, [x26, #32]
  4128ec:	str	w8, [x26, #136]
  4128f0:	ldr	x8, [x10, #8]
  4128f4:	ldr	w9, [x20, #16]!
  4128f8:	ldr	x0, [x8, x9, lsl #3]
  4128fc:	bl	40aae4 <lookup_file@@Base>
  412900:	cbz	x0, 412918 <try_implicit_rule@@Base+0x133c>
  412904:	ldrb	w8, [x0, #136]
  412908:	tbz	w8, #5, 412918 <try_implicit_rule@@Base+0x133c>
  41290c:	ldr	w8, [x26, #136]
  412910:	orr	w8, w8, #0x20
  412914:	str	w8, [x26, #136]
  412918:	ldr	x25, [x19, #80]
  41291c:	ldrh	w8, [x25, #48]
  412920:	cmp	w8, #0x2
  412924:	b.cc	412a74 <try_implicit_rule@@Base+0x1498>  // b.lo, b.ul, b.last
  412928:	ldr	x28, [x19, #104]
  41292c:	mov	x23, xzr
  412930:	add	x9, x28, #0x1
  412934:	str	x9, [x19, #224]
  412938:	b	412968 <try_implicit_rule@@Base+0x138c>
  41293c:	ldr	x8, [x21, #16]
  412940:	ldr	x25, [x19, #80]
  412944:	ldr	x28, [x19, #104]
  412948:	ldr	w9, [x8, #136]
  41294c:	orr	w9, w9, #0x800
  412950:	str	w9, [x8, #136]
  412954:	str	x21, [x26, #48]
  412958:	ldrh	w8, [x25, #48]
  41295c:	add	x23, x23, #0x1
  412960:	cmp	x23, w8, uxth
  412964:	b.cs	412a70 <try_implicit_rule@@Base+0x1494>  // b.hs, b.nlast
  412968:	ldr	w9, [x20]
  41296c:	cmp	x23, x9
  412970:	b.eq	41295c <try_implicit_rule@@Base+0x1380>  // b.none
  412974:	ldr	x8, [x25, #16]
  412978:	lsl	x26, x23, #2
  41297c:	ldr	x9, [x19, #224]
  412980:	ldr	w8, [x8, x26]
  412984:	add	x8, x9, x8
  412988:	add	x8, x8, #0xf
  41298c:	and	x8, x8, #0xfffffffffffffff0
  412990:	mov	x9, sp
  412994:	sub	x22, x9, x8
  412998:	mov	sp, x22
  41299c:	mov	w0, #0x28                  	// #40
  4129a0:	bl	419e38 <xcalloc@@Base>
  4129a4:	ldr	x8, [x25, #8]
  4129a8:	ldr	x9, [x25, #24]
  4129ac:	lsl	x27, x23, #3
  4129b0:	mov	x21, x0
  4129b4:	ldr	x1, [x8, x27]
  4129b8:	ldr	x8, [x9, x27]
  4129bc:	mov	x0, x22
  4129c0:	mvn	x9, x1
  4129c4:	add	x2, x8, x9
  4129c8:	bl	406710 <memcpy@plt>
  4129cc:	ldr	x8, [x25, #8]
  4129d0:	ldr	x9, [x25, #24]
  4129d4:	ldr	x10, [x19, #232]
  4129d8:	mov	x2, x28
  4129dc:	ldr	x8, [x8, x27]
  4129e0:	ldr	x9, [x9, x27]
  4129e4:	ldr	x1, [x10, #40]
  4129e8:	mvn	x8, x8
  4129ec:	add	x8, x9, x8
  4129f0:	add	x24, x22, x8
  4129f4:	mov	x0, x24
  4129f8:	bl	406710 <memcpy@plt>
  4129fc:	ldp	x9, x8, [x25, #16]
  412a00:	ldr	x10, [x25, #8]
  412a04:	add	x0, x24, x28
  412a08:	ldr	x1, [x8, x27]
  412a0c:	ldr	w8, [x9, x26]
  412a10:	ldr	x9, [x10, x27]
  412a14:	ldr	x26, [x19, #232]
  412a18:	sub	x8, x8, x1
  412a1c:	add	x8, x8, x9
  412a20:	add	x2, x8, #0x1
  412a24:	bl	406710 <memcpy@plt>
  412a28:	mov	x0, x22
  412a2c:	bl	423690 <strcache_add@@Base>
  412a30:	str	x0, [x21, #8]
  412a34:	bl	40ab6c <enter_file@@Base>
  412a38:	str	x0, [x21, #16]
  412a3c:	ldr	x8, [x26, #48]
  412a40:	str	x8, [x21]
  412a44:	ldr	x8, [x25, #8]
  412a48:	ldr	x0, [x8, x27]
  412a4c:	bl	40aae4 <lookup_file@@Base>
  412a50:	cbz	x0, 41293c <try_implicit_rule@@Base+0x1360>
  412a54:	ldrb	w8, [x0, #136]
  412a58:	tbz	w8, #5, 41293c <try_implicit_rule@@Base+0x1360>
  412a5c:	ldr	x8, [x21, #16]
  412a60:	ldr	w9, [x8, #136]
  412a64:	orr	w9, w9, #0x20
  412a68:	str	w9, [x8, #136]
  412a6c:	b	41293c <try_implicit_rule@@Base+0x1360>
  412a70:	ldr	x22, [x19, #144]
  412a74:	ldr	x21, [x19, #184]
  412a78:	mov	x0, x22
  412a7c:	bl	406c60 <free@plt>
  412a80:	mov	x0, x21
  412a84:	bl	406c60 <free@plt>
  412a88:	cmp	x25, #0x0
  412a8c:	cset	w0, ne  // ne = any
  412a90:	mov	sp, x29
  412a94:	ldp	x20, x19, [sp, #80]
  412a98:	ldp	x22, x21, [sp, #64]
  412a9c:	ldp	x24, x23, [sp, #48]
  412aa0:	ldp	x26, x25, [sp, #32]
  412aa4:	ldp	x28, x27, [sp, #16]
  412aa8:	ldp	x29, x30, [sp], #96
  412aac:	ret

0000000000412ab0 <stemlen_compare@@Base>:
  412ab0:	ldr	w9, [x0, #8]
  412ab4:	ldr	w10, [x1, #8]
  412ab8:	mov	x8, x0
  412abc:	subs	w0, w9, w10
  412ac0:	b.eq	412ac8 <stemlen_compare@@Base+0x18>  // b.none
  412ac4:	ret
  412ac8:	ldr	w8, [x8, #20]
  412acc:	ldr	w9, [x1, #20]
  412ad0:	sub	w0, w8, w9
  412ad4:	ret

0000000000412ad8 <is_bourne_compatible_shell@@Base>:
  412ad8:	stp	x29, x30, [sp, #-32]!
  412adc:	mov	w1, #0x2f                  	// #47
  412ae0:	stp	x20, x19, [sp, #16]
  412ae4:	mov	x29, sp
  412ae8:	mov	x19, x0
  412aec:	bl	406b30 <strrchr@plt>
  412af0:	mov	x20, x0
  412af4:	mov	w1, #0x5c                  	// #92
  412af8:	mov	x0, x19
  412afc:	bl	406b30 <strrchr@plt>
  412b00:	cmp	x20, x0
  412b04:	csel	x8, x20, x0, hi  // hi = pmore
  412b08:	cmp	x20, #0x0
  412b0c:	csel	x9, x20, x19, ne  // ne = any
  412b10:	cmp	x0, #0x0
  412b14:	csel	x9, x0, x9, ne  // ne = any
  412b18:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  412b1c:	csel	x19, x8, x9, ne  // ne = any
  412b20:	ldrb	w8, [x19]
  412b24:	cmp	w8, #0x5c
  412b28:	b.eq	412b34 <is_bourne_compatible_shell@@Base+0x5c>  // b.none
  412b2c:	cmp	w8, #0x2f
  412b30:	b.ne	412b38 <is_bourne_compatible_shell@@Base+0x60>  // b.any
  412b34:	add	x19, x19, #0x1
  412b38:	adrp	x1, 427000 <jobserver_post_child@@Base+0xcc>
  412b3c:	add	x1, x1, #0xe17
  412b40:	mov	x0, x19
  412b44:	bl	406c10 <strcmp@plt>
  412b48:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412b4c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412b50:	add	x1, x1, #0x100
  412b54:	mov	x0, x19
  412b58:	bl	406c10 <strcmp@plt>
  412b5c:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412b60:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412b64:	add	x1, x1, #0x106
  412b68:	mov	x0, x19
  412b6c:	bl	406c10 <strcmp@plt>
  412b70:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412b74:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412b78:	add	x1, x1, #0x105
  412b7c:	mov	x0, x19
  412b80:	bl	406c10 <strcmp@plt>
  412b84:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412b88:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412b8c:	add	x1, x1, #0x10a
  412b90:	mov	x0, x19
  412b94:	bl	406c10 <strcmp@plt>
  412b98:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412b9c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412ba0:	add	x1, x1, #0x101
  412ba4:	mov	x0, x19
  412ba8:	bl	406c10 <strcmp@plt>
  412bac:	cbz	w0, 412bd4 <is_bourne_compatible_shell@@Base+0xfc>
  412bb0:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412bb4:	add	x1, x1, #0x10e
  412bb8:	mov	x0, x19
  412bbc:	bl	406c10 <strcmp@plt>
  412bc0:	cmp	w0, #0x0
  412bc4:	cset	w0, eq  // eq = none
  412bc8:	ldp	x20, x19, [sp, #16]
  412bcc:	ldp	x29, x30, [sp], #32
  412bd0:	ret
  412bd4:	mov	w0, #0x1                   	// #1
  412bd8:	ldp	x20, x19, [sp, #16]
  412bdc:	ldp	x29, x30, [sp], #32
  412be0:	ret

0000000000412be4 <unblock_all_sigs@@Base>:
  412be4:	sub	sp, sp, #0x90
  412be8:	mov	x0, sp
  412bec:	stp	x29, x30, [sp, #128]
  412bf0:	add	x29, sp, #0x80
  412bf4:	bl	4069d0 <sigemptyset@plt>
  412bf8:	mov	x1, sp
  412bfc:	mov	w0, #0x2                   	// #2
  412c00:	mov	x2, xzr
  412c04:	bl	4067b0 <sigprocmask@plt>
  412c08:	ldp	x29, x30, [sp, #128]
  412c0c:	add	sp, sp, #0x90
  412c10:	ret

0000000000412c14 <child_handler@@Base>:
  412c14:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412c18:	ldr	w9, [x8, #3080]
  412c1c:	add	w9, w9, #0x1
  412c20:	str	w9, [x8, #3080]
  412c24:	b	427014 <jobserver_signal@@Base>

0000000000412c28 <reap_children@@Base>:
  412c28:	sub	sp, sp, #0x100
  412c2c:	stp	x22, x21, [sp, #224]
  412c30:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  412c34:	ldr	x8, [x21, #3040]
  412c38:	stp	x24, x23, [sp, #208]
  412c3c:	stp	x20, x19, [sp, #240]
  412c40:	mov	w24, w1
  412c44:	mov	w22, w0
  412c48:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  412c4c:	stp	x29, x30, [sp, #160]
  412c50:	stp	x28, x27, [sp, #176]
  412c54:	stp	x26, x25, [sp, #192]
  412c58:	add	x29, sp, #0xa0
  412c5c:	cbnz	x8, 412c68 <reap_children@@Base+0x40>
  412c60:	ldr	w8, [x19, #2912]
  412c64:	cbz	w8, 413560 <reap_children@@Base+0x938>
  412c68:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  412c6c:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  412c70:	mov	w8, #0x1                   	// #1
  412c74:	str	w8, [sp, #8]
  412c78:	ldr	w8, [sp, #8]
  412c7c:	orr	w8, w22, w8
  412c80:	cbz	w8, 413560 <reap_children@@Base+0x938>
  412c84:	cbz	w24, 412cd4 <reap_children@@Base+0xac>
  412c88:	cbz	w22, 412cd4 <reap_children@@Base+0xac>
  412c8c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412c90:	ldr	x0, [x8, #2504]
  412c94:	bl	406cf0 <fflush@plt>
  412c98:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412c9c:	ldrb	w8, [x8, #3072]
  412ca0:	tbnz	w8, #0, 412cc8 <reap_children@@Base+0xa0>
  412ca4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412ca8:	mov	w2, #0x5                   	// #5
  412cac:	mov	x0, xzr
  412cb0:	add	x1, x1, #0x113
  412cb4:	bl	406dc0 <dcgettext@plt>
  412cb8:	mov	x2, x0
  412cbc:	mov	x0, xzr
  412cc0:	mov	x1, xzr
  412cc4:	bl	41ae34 <error@@Base>
  412cc8:	mov	w8, #0x1                   	// #1
  412ccc:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  412cd0:	strb	w8, [x9, #3072]
  412cd4:	ldr	w8, [x26, #3080]
  412cd8:	str	w22, [sp, #12]
  412cdc:	cbz	w8, 412ce8 <reap_children@@Base+0xc0>
  412ce0:	sub	w8, w8, #0x1
  412ce4:	str	w8, [x26, #3080]
  412ce8:	ldr	w8, [x19, #2912]
  412cec:	ldr	x22, [x21, #3040]
  412cf0:	cmp	w8, #0x0
  412cf4:	cset	w25, ne  // ne = any
  412cf8:	cbz	x22, 412df4 <reap_children@@Base+0x1cc>
  412cfc:	mov	x28, x26
  412d00:	mov	x26, x22
  412d04:	ldrb	w8, [x26, #80]!
  412d08:	mov	x19, x21
  412d0c:	mov	w21, w24
  412d10:	mov	x20, x26
  412d14:	ldr	w9, [x20, #-4]!
  412d18:	tbnz	w9, #31, 412e28 <reap_children@@Base+0x200>
  412d1c:	and	w24, w8, #0x1
  412d20:	eor	w8, w24, #0x1
  412d24:	orr	w25, w25, w8
  412d28:	mov	x27, x22
  412d2c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412d30:	ldrb	w8, [x8, #3236]
  412d34:	tbz	w8, #2, 412dbc <reap_children@@Base+0x194>
  412d38:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412d3c:	mov	w2, #0x5                   	// #5
  412d40:	mov	x0, xzr
  412d44:	add	x1, x1, #0x137
  412d48:	bl	406dc0 <dcgettext@plt>
  412d4c:	ldr	x8, [x27, #40]
  412d50:	ldrsw	x2, [x20]
  412d54:	mov	x20, x0
  412d58:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  412d5c:	ldr	x22, [x8]
  412d60:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412d64:	add	x0, x0, #0xc28
  412d68:	add	x1, x1, #0x2cf
  412d6c:	bl	406800 <sprintf@plt>
  412d70:	ldrb	w8, [x26]
  412d74:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x2680>
  412d78:	add	x4, x4, #0x3a9
  412d7c:	tbz	w8, #0, 412d98 <reap_children@@Base+0x170>
  412d80:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  412d84:	mov	w2, #0x5                   	// #5
  412d88:	mov	x0, xzr
  412d8c:	add	x1, x1, #0x155
  412d90:	bl	406dc0 <dcgettext@plt>
  412d94:	mov	x4, x0
  412d98:	adrp	x3, 43e000 <memcpy@GLIBC_2.17>
  412d9c:	mov	x0, x20
  412da0:	mov	x1, x27
  412da4:	mov	x2, x22
  412da8:	add	x3, x3, #0xc28
  412dac:	bl	406e60 <printf@plt>
  412db0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  412db4:	ldr	x0, [x8, #2504]
  412db8:	bl	406cf0 <fflush@plt>
  412dbc:	ldr	x22, [x27, #32]
  412dc0:	cbz	x22, 412ed4 <reap_children@@Base+0x2ac>
  412dc4:	mov	x26, x22
  412dc8:	ldrb	w8, [x26, #80]!
  412dcc:	mov	x23, x27
  412dd0:	mov	x27, x22
  412dd4:	mov	x20, x26
  412dd8:	ldr	w9, [x20, #-4]!
  412ddc:	and	w8, w8, #0x1
  412de0:	orr	w24, w24, w8
  412de4:	eor	w8, w8, #0x1
  412de8:	orr	w25, w25, w8
  412dec:	tbz	w9, #31, 412d2c <reap_children@@Base+0x104>
  412df0:	b	412e2c <reap_children@@Base+0x204>
  412df4:	ldr	w22, [sp, #12]
  412df8:	mov	w20, wzr
  412dfc:	cbz	w25, 412f84 <reap_children@@Base+0x35c>
  412e00:	cbz	w22, 412f20 <reap_children@@Base+0x2f8>
  412e04:	sub	x0, x29, #0x4
  412e08:	bl	406ce0 <wait@plt>
  412e0c:	cmn	w0, #0x1
  412e10:	b.ne	412f30 <reap_children@@Base+0x308>  // b.any
  412e14:	bl	406e70 <__errno_location@plt>
  412e18:	ldr	w8, [x0]
  412e1c:	cmp	w8, #0x4
  412e20:	b.eq	412e04 <reap_children@@Base+0x1dc>  // b.none
  412e24:	b	41358c <reap_children@@Base+0x964>
  412e28:	mov	x23, xzr
  412e2c:	mov	w8, #0x7f                  	// #127
  412e30:	stur	xzr, [x29, #-16]
  412e34:	stur	w8, [x29, #-8]
  412e38:	mov	w24, w21
  412e3c:	mov	x21, x19
  412e40:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  412e44:	mov	x26, x28
  412e48:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  412e4c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  412e50:	ldp	w8, w9, [x29, #-12]
  412e54:	cbnz	w8, 4130b8 <reap_children@@Base+0x490>
  412e58:	cmp	w9, #0x7f
  412e5c:	b.ne	4130b8 <reap_children@@Base+0x490>  // b.any
  412e60:	ldr	x1, [x22]
  412e64:	cbz	x1, 4130b0 <reap_children@@Base+0x488>
  412e68:	add	x2, sp, #0x10
  412e6c:	mov	w0, wzr
  412e70:	bl	406e90 <__xstat@plt>
  412e74:	cmn	w0, #0x1
  412e78:	b.ne	412ea8 <reap_children@@Base+0x280>  // b.any
  412e7c:	bl	406e70 <__errno_location@plt>
  412e80:	mov	x27, x0
  412e84:	ldr	w8, [x27]
  412e88:	cmp	w8, #0x4
  412e8c:	b.ne	413118 <reap_children@@Base+0x4f0>  // b.any
  412e90:	ldr	x1, [x22]
  412e94:	add	x2, sp, #0x10
  412e98:	mov	w0, wzr
  412e9c:	bl	406e90 <__xstat@plt>
  412ea0:	cmn	w0, #0x1
  412ea4:	b.eq	412e84 <reap_children@@Base+0x25c>  // b.none
  412ea8:	tbnz	w0, #31, 413110 <reap_children@@Base+0x4e8>
  412eac:	ldr	w8, [sp, #32]
  412eb0:	mov	w0, #0xd                   	// #13
  412eb4:	and	w9, w8, #0xf000
  412eb8:	cmp	w9, #0x4, lsl #12
  412ebc:	b.eq	41311c <reap_children@@Base+0x4f4>  // b.none
  412ec0:	tbz	w8, #6, 41311c <reap_children@@Base+0x4f4>
  412ec4:	ldr	x8, [sp, #64]
  412ec8:	cbnz	x8, 41315c <reap_children@@Base+0x534>
  412ecc:	mov	w0, #0x8                   	// #8
  412ed0:	b	41311c <reap_children@@Base+0x4f4>
  412ed4:	cbz	w24, 4130f0 <reap_children@@Base+0x4c8>
  412ed8:	sub	x0, x29, #0x8
  412edc:	sub	x1, x29, #0xc
  412ee0:	sub	x2, x29, #0x10
  412ee4:	mov	w3, wzr
  412ee8:	bl	42727c <remote_status@@Base>
  412eec:	ldr	w22, [sp, #12]
  412ef0:	cmp	w0, #0x0
  412ef4:	mov	x26, x28
  412ef8:	b.le	4133d0 <reap_children@@Base+0x7a8>
  412efc:	mov	w8, #0x1                   	// #1
  412f00:	mov	w24, w21
  412f04:	mov	x21, x19
  412f08:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  412f0c:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  412f10:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  412f14:	ldr	x9, [x21, #3040]
  412f18:	cbnz	x9, 412fc8 <reap_children@@Base+0x3a0>
  412f1c:	b	413550 <reap_children@@Base+0x928>
  412f20:	sub	x1, x29, #0x4
  412f24:	mov	w0, #0xffffffff            	// #-1
  412f28:	mov	w2, #0x1                   	// #1
  412f2c:	bl	406ea0 <waitpid@plt>
  412f30:	tbnz	w0, #31, 41358c <reap_children@@Base+0x964>
  412f34:	cbz	w0, 412f84 <reap_children@@Base+0x35c>
  412f38:	ldur	w9, [x29, #-4]
  412f3c:	ldr	w10, [x19, #2912]
  412f40:	mov	w13, #0x1ffffff             	// #33554431
  412f44:	mov	w8, wzr
  412f48:	ubfx	w11, w9, #8, #8
  412f4c:	and	w12, w9, #0x7f
  412f50:	stur	w11, [x29, #-8]
  412f54:	mov	w11, #0x1000000             	// #16777216
  412f58:	add	w11, w11, w12, lsl #24
  412f5c:	cmp	w11, w13
  412f60:	and	w9, w9, #0x80
  412f64:	csel	w11, w12, wzr, gt
  412f68:	cmp	w0, w10
  412f6c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  412f70:	stp	w9, w11, [x29, #-16]
  412f74:	b.eq	413580 <reap_children@@Base+0x958>  // b.none
  412f78:	ldr	x9, [x21, #3040]
  412f7c:	cbnz	x9, 412fc8 <reap_children@@Base+0x3a0>
  412f80:	b	413550 <reap_children@@Base+0x928>
  412f84:	cmp	w22, #0x0
  412f88:	cset	w8, eq  // eq = none
  412f8c:	eor	w9, w20, #0x1
  412f90:	orr	w8, w8, w9
  412f94:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  412f98:	tbnz	w8, #0, 413560 <reap_children@@Base+0x938>
  412f9c:	sub	x0, x29, #0x8
  412fa0:	sub	x1, x29, #0xc
  412fa4:	sub	x2, x29, #0x10
  412fa8:	mov	w3, #0x1                   	// #1
  412fac:	bl	42727c <remote_status@@Base>
  412fb0:	tbnz	w0, #31, 4135a0 <reap_children@@Base+0x978>
  412fb4:	cbz	w0, 413560 <reap_children@@Base+0x938>
  412fb8:	str	wzr, [sp, #8]
  412fbc:	mov	w8, #0x1                   	// #1
  412fc0:	ldr	x9, [x21, #3040]
  412fc4:	cbz	x9, 413550 <reap_children@@Base+0x928>
  412fc8:	mov	x23, xzr
  412fcc:	b	412fdc <reap_children@@Base+0x3b4>
  412fd0:	ldr	x9, [x22, #32]
  412fd4:	mov	x23, x22
  412fd8:	cbz	x9, 4133b0 <reap_children@@Base+0x788>
  412fdc:	mov	x22, x9
  412fe0:	ldr	w9, [x9, #76]
  412fe4:	cmp	w9, w0
  412fe8:	b.ne	412fd0 <reap_children@@Base+0x3a8>  // b.any
  412fec:	ldrb	w9, [x22, #80]
  412ff0:	and	w9, w9, #0x1
  412ff4:	cmp	w8, w9
  412ff8:	b.ne	412fd0 <reap_children@@Base+0x3a8>  // b.any
  412ffc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413000:	ldrb	w8, [x8, #3236]
  413004:	tbz	w8, #2, 41309c <reap_children@@Base+0x474>
  413008:	ldp	w8, w9, [x29, #-12]
  41300c:	mov	w2, #0x5                   	// #5
  413010:	mov	x0, xzr
  413014:	orr	w8, w9, w8
  413018:	cmp	w8, #0x0
  41301c:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  413020:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  413024:	add	x8, x8, #0x196
  413028:	add	x9, x9, #0x172
  41302c:	csel	x1, x9, x8, eq  // eq = none
  413030:	bl	406dc0 <dcgettext@plt>
  413034:	ldrsw	x2, [x22, #76]
  413038:	mov	x20, x0
  41303c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  413040:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413044:	add	x0, x0, #0xc28
  413048:	add	x1, x1, #0x2cf
  41304c:	bl	406800 <sprintf@plt>
  413050:	ldrb	w8, [x22, #80]
  413054:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  413058:	add	x3, x3, #0x3a9
  41305c:	tbz	w8, #0, 413078 <reap_children@@Base+0x450>
  413060:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413064:	mov	w2, #0x5                   	// #5
  413068:	mov	x0, xzr
  41306c:	add	x1, x1, #0x155
  413070:	bl	406dc0 <dcgettext@plt>
  413074:	mov	x3, x0
  413078:	adrp	x2, 43e000 <memcpy@GLIBC_2.17>
  41307c:	mov	x0, x20
  413080:	mov	x1, x22
  413084:	add	x2, x2, #0xc28
  413088:	bl	406e60 <printf@plt>
  41308c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413090:	ldr	x0, [x8, #2504]
  413094:	bl	406cf0 <fflush@plt>
  413098:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41309c:	ldr	x8, [x28, #3056]
  4130a0:	cbz	x8, 412e50 <reap_children@@Base+0x228>
  4130a4:	sub	x8, x8, #0x1
  4130a8:	str	x8, [x28, #3056]
  4130ac:	b	412e50 <reap_children@@Base+0x228>
  4130b0:	mov	w8, wzr
  4130b4:	mov	w9, #0x7f                  	// #127
  4130b8:	orr	w10, w9, w8
  4130bc:	cbz	w10, 41316c <reap_children@@Base+0x544>
  4130c0:	cbnz	w8, 4130e0 <reap_children@@Base+0x4b8>
  4130c4:	cmp	w9, #0x1
  4130c8:	b.ne	4130e0 <reap_children@@Base+0x4b8>  // b.any
  4130cc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4130d0:	ldr	w8, [x8, #3260]
  4130d4:	cbz	w8, 4130e0 <reap_children@@Base+0x4b8>
  4130d8:	ldrb	w8, [x22, #80]
  4130dc:	tbnz	w8, #4, 4130e8 <reap_children@@Base+0x4c0>
  4130e0:	mov	w27, #0x2                   	// #2
  4130e4:	b	413170 <reap_children@@Base+0x548>
  4130e8:	mov	w27, #0x1                   	// #1
  4130ec:	b	413170 <reap_children@@Base+0x548>
  4130f0:	ldr	w22, [sp, #12]
  4130f4:	mov	w20, wzr
  4130f8:	mov	w24, w21
  4130fc:	mov	x21, x19
  413100:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  413104:	mov	x26, x28
  413108:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  41310c:	b	412dfc <reap_children@@Base+0x1d4>
  413110:	bl	406e70 <__errno_location@plt>
  413114:	mov	x27, x0
  413118:	ldr	w0, [x27]
  41311c:	bl	406b00 <strerror@plt>
  413120:	cbz	x0, 41315c <reap_children@@Base+0x534>
  413124:	ldr	x25, [x22]
  413128:	mov	x20, x0
  41312c:	mov	x0, x25
  413130:	bl	406750 <strlen@plt>
  413134:	mov	x27, x0
  413138:	mov	x0, x20
  41313c:	bl	406750 <strlen@plt>
  413140:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  413144:	add	x1, x0, x27
  413148:	mov	x0, xzr
  41314c:	add	x2, x2, #0xd0a
  413150:	mov	x3, x25
  413154:	mov	x4, x20
  413158:	bl	41ae34 <error@@Base>
  41315c:	ldp	w8, w9, [x29, #-12]
  413160:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  413164:	orr	w10, w9, w8
  413168:	cbnz	w10, 4130c0 <reap_children@@Base+0x498>
  41316c:	mov	w27, wzr
  413170:	ldr	x25, [x22, #48]
  413174:	cbz	x25, 413210 <reap_children@@Base+0x5e8>
  413178:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41317c:	ldrb	w8, [x8, #3236]
  413180:	tbz	w8, #2, 4131b0 <reap_children@@Base+0x588>
  413184:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413188:	mov	w2, #0x5                   	// #5
  41318c:	mov	x0, xzr
  413190:	add	x1, x1, #0x1b9
  413194:	bl	406dc0 <dcgettext@plt>
  413198:	ldr	x1, [x22, #48]
  41319c:	bl	406e60 <printf@plt>
  4131a0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4131a4:	ldr	x0, [x8, #2504]
  4131a8:	bl	406cf0 <fflush@plt>
  4131ac:	ldr	x25, [x22, #48]
  4131b0:	bl	406e70 <__errno_location@plt>
  4131b4:	mov	x20, x0
  4131b8:	str	wzr, [x0]
  4131bc:	mov	x0, x25
  4131c0:	bl	4067d0 <remove@plt>
  4131c4:	cbz	w0, 413200 <reap_children@@Base+0x5d8>
  4131c8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4131cc:	ldrb	w8, [x8, #3236]
  4131d0:	tbz	w8, #2, 413200 <reap_children@@Base+0x5d8>
  4131d4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4131d8:	mov	w2, #0x5                   	// #5
  4131dc:	mov	x0, xzr
  4131e0:	add	x1, x1, #0x1d9
  4131e4:	bl	406dc0 <dcgettext@plt>
  4131e8:	ldr	x1, [x22, #48]
  4131ec:	ldr	w2, [x20]
  4131f0:	bl	406e60 <printf@plt>
  4131f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4131f8:	ldr	x0, [x8, #2504]
  4131fc:	bl	406cf0 <fflush@plt>
  413200:	ldr	x0, [x22, #48]
  413204:	bl	406c60 <free@plt>
  413208:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41320c:	str	xzr, [x22, #48]
  413210:	ldrb	w25, [x22, #80]
  413214:	tbz	w25, #2, 413220 <reap_children@@Base+0x5f8>
  413218:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41321c:	strb	wzr, [x8, #3076]
  413220:	cbz	w27, 4132b8 <reap_children@@Base+0x690>
  413224:	tbnz	w25, #1, 4132a4 <reap_children@@Base+0x67c>
  413228:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41322c:	ldr	w8, [x8, #3252]
  413230:	cbnz	w8, 4132a4 <reap_children@@Base+0x67c>
  413234:	cmp	w27, #0x2
  413238:	b.ne	413258 <reap_children@@Base+0x630>  // b.any
  41323c:	ubfx	w8, w25, #6, #1
  413240:	cbnz	w8, 413258 <reap_children@@Base+0x630>
  413244:	ldp	w2, w1, [x29, #-12]
  413248:	ldur	w3, [x29, #-16]
  41324c:	mov	x0, x22
  413250:	mov	w4, wzr
  413254:	bl	4135ac <reap_children@@Base+0x984>
  413258:	ldr	x8, [x22, #40]
  41325c:	cmp	w27, #0x2
  413260:	mov	w10, #0x2                   	// #2
  413264:	cinc	w10, w10, eq  // eq = none
  413268:	ldr	w9, [x8, #136]
  41326c:	and	w9, w9, #0xfffffffc
  413270:	orr	w9, w9, w10
  413274:	str	w9, [x8, #136]
  413278:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41327c:	ldr	w8, [x8, #2348]
  413280:	cmn	w8, #0x1
  413284:	b.ne	413400 <reap_children@@Base+0x7d8>  // b.any
  413288:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41328c:	add	x0, x0, #0x205
  413290:	bl	40aae4 <lookup_file@@Base>
  413294:	cbz	x0, 4133f4 <reap_children@@Base+0x7cc>
  413298:	ldrb	w8, [x0, #137]
  41329c:	ubfx	w8, w8, #3, #1
  4132a0:	b	4133f8 <reap_children@@Base+0x7d0>
  4132a4:	ldp	w2, w1, [x29, #-12]
  4132a8:	ldur	w3, [x29, #-16]
  4132ac:	mov	w4, #0x1                   	// #1
  4132b0:	mov	x0, x22
  4132b4:	bl	4135ac <reap_children@@Base+0x984>
  4132b8:	ldr	x8, [x22, #64]
  4132bc:	cbz	x8, 4132d0 <reap_children@@Base+0x6a8>
  4132c0:	ldrb	w9, [x8]
  4132c4:	ldr	w8, [x22, #72]
  4132c8:	cbz	w9, 4132d4 <reap_children@@Base+0x6ac>
  4132cc:	b	413320 <reap_children@@Base+0x6f8>
  4132d0:	ldr	w8, [x22, #72]
  4132d4:	ldr	x9, [x22, #40]
  4132d8:	ldr	x10, [x9, #32]
  4132dc:	ldrh	w11, [x10, #48]
  4132e0:	cmp	w8, w11
  4132e4:	b.eq	413304 <reap_children@@Base+0x6dc>  // b.none
  4132e8:	ldr	x9, [x22, #56]
  4132ec:	add	w10, w8, #0x1
  4132f0:	str	w10, [x22, #72]
  4132f4:	ldr	x8, [x9, w8, uxtw #3]
  4132f8:	str	x8, [x22, #64]
  4132fc:	cbnz	x8, 4132c0 <reap_children@@Base+0x698>
  413300:	b	4132d0 <reap_children@@Base+0x6a8>
  413304:	str	xzr, [x22, #64]
  413308:	str	xzr, [x10, #16]
  41330c:	ldr	w8, [x9, #136]
  413310:	mov	w27, wzr
  413314:	and	w8, w8, #0xfffffffc
  413318:	str	w8, [x9, #136]
  41331c:	b	413414 <reap_children@@Base+0x7ec>
  413320:	ldr	x9, [x22, #40]
  413324:	sub	w8, w8, #0x1
  413328:	ldr	x10, [x9, #32]
  41332c:	str	x8, [x10, #16]
  413330:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413334:	ldr	w8, [x8, #2536]
  413338:	cbz	w8, 413354 <reap_children@@Base+0x72c>
  41333c:	ldr	w8, [x9, #136]
  413340:	orr	w8, w8, #0x3
  413344:	str	w8, [x9, #136]
  413348:	ldr	x8, [x22, #40]
  41334c:	ldr	w8, [x8, #136]
  413350:	b	4133b8 <reap_children@@Base+0x790>
  413354:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413358:	ldr	w8, [x8, #3304]
  41335c:	cmp	w8, #0x1
  413360:	b.ne	41336c <reap_children@@Base+0x744>  // b.any
  413364:	add	x0, x22, #0x10
  413368:	bl	41a324 <output_dump@@Base>
  41336c:	mov	w0, wzr
  413370:	bl	42726c <start_remote_job_p@@Base>
  413374:	ldrb	w8, [x22, #80]
  413378:	bfxil	w8, w0, #0, #1
  41337c:	mov	x0, x22
  413380:	strb	w8, [x22, #80]
  413384:	bl	4137b4 <reap_children@@Base+0xb8c>
  413388:	adrp	x1, 442000 <just_print_flag@@Base>
  41338c:	mov	w0, #0x1                   	// #1
  413390:	add	x1, x1, #0x48
  413394:	mov	x2, xzr
  413398:	bl	4067b0 <sigprocmask@plt>
  41339c:	ldr	x8, [x22, #40]
  4133a0:	ldr	w8, [x8, #136]
  4133a4:	and	w9, w8, #0xc
  4133a8:	cmp	w9, #0x8
  4133ac:	b.ne	4133b8 <reap_children@@Base+0x790>  // b.any
  4133b0:	ldr	w22, [sp, #12]
  4133b4:	b	413550 <reap_children@@Base+0x928>
  4133b8:	tst	w8, #0x3
  4133bc:	b.eq	4133ec <reap_children@@Base+0x7c4>  // b.none
  4133c0:	mov	x0, x22
  4133c4:	bl	40890c <delete_child_targets@@Base>
  4133c8:	mov	w27, wzr
  4133cc:	b	413414 <reap_children@@Base+0x7ec>
  4133d0:	mov	w24, w21
  4133d4:	mov	x21, x19
  4133d8:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  4133dc:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  4133e0:	tbnz	w0, #31, 4135a0 <reap_children@@Base+0x978>
  4133e4:	mov	w20, #0x1                   	// #1
  4133e8:	b	412dfc <reap_children@@Base+0x1d4>
  4133ec:	mov	w27, wzr
  4133f0:	b	413414 <reap_children@@Base+0x7ec>
  4133f4:	mov	w8, wzr
  4133f8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4133fc:	str	w8, [x9, #2348]
  413400:	ldur	w9, [x29, #-12]
  413404:	orr	w8, w8, w9
  413408:	cbz	w8, 413414 <reap_children@@Base+0x7ec>
  41340c:	mov	x0, x22
  413410:	bl	40890c <delete_child_targets@@Base>
  413414:	add	x0, x22, #0x10
  413418:	bl	41a324 <output_dump@@Base>
  41341c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413420:	ldr	w8, [x8, #2536]
  413424:	cbnz	w8, 413430 <reap_children@@Base+0x808>
  413428:	ldr	x0, [x22, #40]
  41342c:	bl	4218c0 <notice_finished_file@@Base>
  413430:	adrp	x1, 442000 <just_print_flag@@Base>
  413434:	mov	w0, wzr
  413438:	add	x1, x1, #0x48
  41343c:	mov	x2, xzr
  413440:	bl	4067b0 <sigprocmask@plt>
  413444:	ldr	w8, [x22, #76]
  413448:	cmp	w8, #0x1
  41344c:	b.lt	4134d8 <reap_children@@Base+0x8b0>  // b.tstop
  413450:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413454:	ldrb	w8, [x8, #3236]
  413458:	tbz	w8, #2, 4134d8 <reap_children@@Base+0x8b0>
  41345c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413460:	mov	w2, #0x5                   	// #5
  413464:	mov	x0, xzr
  413468:	add	x1, x1, #0x216
  41346c:	bl	406dc0 <dcgettext@plt>
  413470:	ldrsw	x2, [x22, #76]
  413474:	mov	x20, x0
  413478:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  41347c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413480:	add	x0, x0, #0xc28
  413484:	add	x1, x1, #0x2cf
  413488:	bl	406800 <sprintf@plt>
  41348c:	ldrb	w8, [x22, #80]
  413490:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  413494:	add	x3, x3, #0x3a9
  413498:	tbz	w8, #0, 4134b4 <reap_children@@Base+0x88c>
  41349c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4134a0:	mov	w2, #0x5                   	// #5
  4134a4:	mov	x0, xzr
  4134a8:	add	x1, x1, #0x155
  4134ac:	bl	406dc0 <dcgettext@plt>
  4134b0:	mov	x3, x0
  4134b4:	adrp	x2, 43e000 <memcpy@GLIBC_2.17>
  4134b8:	mov	x0, x20
  4134bc:	mov	x1, x22
  4134c0:	add	x2, x2, #0xc28
  4134c4:	bl	406e60 <printf@plt>
  4134c8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4134cc:	ldr	x0, [x8, #2504]
  4134d0:	bl	406cf0 <fflush@plt>
  4134d4:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4134d8:	ldr	w8, [x20, #3048]
  4134dc:	cbz	w8, 4134f0 <reap_children@@Base+0x8c8>
  4134e0:	ldrb	w9, [x22, #80]
  4134e4:	ubfx	w9, w9, #5, #1
  4134e8:	sub	w8, w8, w9
  4134ec:	str	w8, [x20, #3048]
  4134f0:	ldr	x8, [x22, #32]
  4134f4:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  4134f8:	add	x9, x23, #0x20
  4134fc:	cmp	x23, #0x0
  413500:	add	x10, x10, #0xbe0
  413504:	csel	x9, x10, x9, eq  // eq = none
  413508:	mov	x0, x22
  41350c:	str	x8, [x9]
  413510:	bl	413db4 <reap_children@@Base+0x118c>
  413514:	adrp	x1, 442000 <just_print_flag@@Base>
  413518:	mov	w0, #0x1                   	// #1
  41351c:	add	x1, x1, #0x48
  413520:	mov	x2, xzr
  413524:	bl	4067b0 <sigprocmask@plt>
  413528:	mov	w22, wzr
  41352c:	tbnz	w25, #6, 413550 <reap_children@@Base+0x928>
  413530:	cbnz	w24, 413550 <reap_children@@Base+0x928>
  413534:	cbz	w27, 413550 <reap_children@@Base+0x928>
  413538:	adrp	x8, 442000 <just_print_flag@@Base>
  41353c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  413540:	ldr	w8, [x8, #4]
  413544:	ldr	w9, [x9, #2536]
  413548:	orr	w8, w9, w8
  41354c:	cbz	w8, 413598 <reap_children@@Base+0x970>
  413550:	ldr	x8, [x21, #3040]
  413554:	cbnz	x8, 412c78 <reap_children@@Base+0x50>
  413558:	ldr	w8, [x19, #2912]
  41355c:	cbnz	w8, 412c78 <reap_children@@Base+0x50>
  413560:	ldp	x20, x19, [sp, #240]
  413564:	ldp	x22, x21, [sp, #224]
  413568:	ldp	x24, x23, [sp, #208]
  41356c:	ldp	x26, x25, [sp, #192]
  413570:	ldp	x28, x27, [sp, #176]
  413574:	ldp	x29, x30, [sp, #160]
  413578:	add	sp, sp, #0x100
  41357c:	ret
  413580:	ldp	w1, w0, [x29, #-12]
  413584:	bl	40d530 <shell_completed@@Base>
  413588:	b	413560 <reap_children@@Base+0x938>
  41358c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  413590:	add	x0, x0, #0x16d
  413594:	bl	41a2bc <pfatal_with_name@@Base>
  413598:	mov	w0, w27
  41359c:	bl	418a14 <die@@Base>
  4135a0:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4135a4:	add	x0, x0, #0x15f
  4135a8:	bl	41a2bc <pfatal_with_name@@Base>
  4135ac:	stp	x29, x30, [sp, #-96]!
  4135b0:	stp	x28, x27, [sp, #16]
  4135b4:	stp	x26, x25, [sp, #32]
  4135b8:	stp	x24, x23, [sp, #48]
  4135bc:	stp	x22, x21, [sp, #64]
  4135c0:	stp	x20, x19, [sp, #80]
  4135c4:	ldr	x27, [x0, #40]
  4135c8:	mov	w22, w4
  4135cc:	mov	w21, w2
  4135d0:	mov	x24, x0
  4135d4:	ldr	x28, [x27, #32]
  4135d8:	mov	w19, w1
  4135dc:	mov	x29, sp
  4135e0:	cbz	w4, 4135f0 <reap_children@@Base+0x9c8>
  4135e4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4135e8:	ldr	w8, [x8, #3232]
  4135ec:	cbnz	w8, 413794 <reap_children@@Base+0xb6c>
  4135f0:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  4135f4:	add	x20, x20, #0x3a9
  4135f8:	cbz	w21, 413618 <reap_children@@Base+0x9f0>
  4135fc:	cbz	w3, 413618 <reap_children@@Base+0x9f0>
  413600:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413604:	add	x1, x1, #0x333
  413608:	mov	w2, #0x5                   	// #5
  41360c:	mov	x0, xzr
  413610:	bl	406dc0 <dcgettext@plt>
  413614:	mov	x20, x0
  413618:	cbz	w22, 413680 <reap_children@@Base+0xa58>
  41361c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413620:	add	x1, x1, #0x342
  413624:	mov	w2, #0x5                   	// #5
  413628:	mov	x0, xzr
  41362c:	bl	406dc0 <dcgettext@plt>
  413630:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x2680>
  413634:	mov	x23, x0
  413638:	add	x22, x22, #0x3a9
  41363c:	ldr	x26, [x28]
  413640:	cbz	x26, 413698 <reap_children@@Base+0xa70>
  413644:	mov	x0, x26
  413648:	bl	406750 <strlen@plt>
  41364c:	add	x9, x0, #0x2a
  413650:	mov	x8, sp
  413654:	and	x9, x9, #0xfffffffffffffff0
  413658:	sub	x25, x8, x9
  41365c:	mov	sp, x25
  413660:	ldp	x8, x9, [x28, #8]
  413664:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413668:	add	x1, x1, #0x2cc
  41366c:	mov	x0, x25
  413670:	add	x3, x9, x8
  413674:	mov	x2, x26
  413678:	bl	406800 <sprintf@plt>
  41367c:	b	4136b0 <reap_children@@Base+0xa88>
  413680:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x4680>
  413684:	adrp	x23, 42a000 <_IO_stdin_used@@Base+0x2680>
  413688:	add	x22, x22, #0x5eb
  41368c:	add	x23, x23, #0x3a9
  413690:	ldr	x26, [x28]
  413694:	cbnz	x26, 413644 <reap_children@@Base+0xa1c>
  413698:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  41369c:	add	x1, x1, #0x2c2
  4136a0:	mov	w2, #0x5                   	// #5
  4136a4:	mov	x0, xzr
  4136a8:	bl	406dc0 <dcgettext@plt>
  4136ac:	mov	x25, x0
  4136b0:	mov	x0, x22
  4136b4:	bl	406750 <strlen@plt>
  4136b8:	mov	x26, x0
  4136bc:	mov	x0, x25
  4136c0:	bl	406750 <strlen@plt>
  4136c4:	ldr	x8, [x27]
  4136c8:	add	x26, x0, x26
  4136cc:	mov	x0, x8
  4136d0:	bl	406750 <strlen@plt>
  4136d4:	add	x26, x26, x0
  4136d8:	mov	x0, x23
  4136dc:	bl	406750 <strlen@plt>
  4136e0:	ldrb	w8, [x24, #24]
  4136e4:	add	x9, x24, #0x10
  4136e8:	adrp	x24, 43f000 <stopchar_map@@Base+0x310>
  4136ec:	add	x26, x26, x0
  4136f0:	tst	w8, #0x1
  4136f4:	csel	x8, xzr, x9, eq  // eq = none
  4136f8:	str	x8, [x24, #1456]
  4136fc:	bl	4217f8 <show_goal_error@@Base>
  413700:	cbz	w21, 413754 <reap_children@@Base+0xb2c>
  413704:	mov	w0, w21
  413708:	bl	406e30 <strsignal@plt>
  41370c:	mov	x19, x0
  413710:	bl	406750 <strlen@plt>
  413714:	add	x21, x0, x26
  413718:	mov	x0, x20
  41371c:	bl	406750 <strlen@plt>
  413720:	ldr	x5, [x27]
  413724:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  413728:	add	x1, x21, x0
  41372c:	add	x2, x2, #0x363
  413730:	str	x23, [sp, #-16]!
  413734:	mov	x0, xzr
  413738:	mov	x3, x22
  41373c:	mov	x4, x25
  413740:	mov	x6, x19
  413744:	mov	x7, x20
  413748:	bl	41ae34 <error@@Base>
  41374c:	add	sp, sp, #0x10
  413750:	b	413790 <reap_children@@Base+0xb68>
  413754:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413758:	add	x1, x1, #0x34d
  41375c:	mov	w2, #0x5                   	// #5
  413760:	mov	x0, xzr
  413764:	add	x20, x26, #0x14
  413768:	bl	406dc0 <dcgettext@plt>
  41376c:	ldr	x5, [x27]
  413770:	mov	x2, x0
  413774:	mov	x0, xzr
  413778:	mov	x1, x20
  41377c:	mov	x3, x22
  413780:	mov	x4, x25
  413784:	mov	w6, w19
  413788:	mov	x7, x23
  41378c:	bl	41ae34 <error@@Base>
  413790:	str	xzr, [x24, #1456]
  413794:	mov	sp, x29
  413798:	ldp	x20, x19, [sp, #80]
  41379c:	ldp	x22, x21, [sp, #64]
  4137a0:	ldp	x24, x23, [sp, #48]
  4137a4:	ldp	x26, x25, [sp, #32]
  4137a8:	ldp	x28, x27, [sp, #16]
  4137ac:	ldp	x29, x30, [sp], #96
  4137b0:	ret
  4137b4:	sub	sp, sp, #0x70
  4137b8:	stp	x29, x30, [sp, #16]
  4137bc:	stp	x26, x25, [sp, #48]
  4137c0:	stp	x24, x23, [sp, #64]
  4137c4:	stp	x22, x21, [sp, #80]
  4137c8:	stp	x20, x19, [sp, #96]
  4137cc:	ldr	x22, [x0, #64]
  4137d0:	mov	x19, x0
  4137d4:	str	x27, [sp, #32]
  4137d8:	add	x29, sp, #0x10
  4137dc:	cbz	x22, 413b7c <reap_children@@Base+0xf54>
  4137e0:	ldr	x8, [x19, #40]
  4137e4:	ldr	w10, [x19, #72]
  4137e8:	ldr	x9, [x8, #32]
  4137ec:	ldr	w12, [x8, #132]
  4137f0:	ldr	x11, [x9, #40]
  4137f4:	sub	w9, w10, #0x1
  4137f8:	ldrb	w10, [x19, #80]
  4137fc:	ldrb	w11, [x11, x9]
  413800:	orr	w26, w12, w11
  413804:	lsr	w11, w26, #1
  413808:	lsr	w11, w11, #1
  41380c:	bfi	w10, w11, #1, #1
  413810:	adrp	x11, 43e000 <memcpy@GLIBC_2.17>
  413814:	add	x11, x11, #0xcf0
  413818:	strb	w10, [x19, #80]
  41381c:	b	41382c <reap_children@@Base+0xc04>
  413820:	orr	w10, w10, #0x2
  413824:	strb	w10, [x19, #80]
  413828:	add	x22, x22, #0x1
  41382c:	ldrb	w12, [x22]
  413830:	cmp	w12, #0x2c
  413834:	b.le	413854 <reap_children@@Base+0xc2c>
  413838:	cmp	w12, #0x2d
  41383c:	b.eq	413820 <reap_children@@Base+0xbf8>  // b.none
  413840:	cmp	w12, #0x40
  413844:	b.ne	41386c <reap_children@@Base+0xc44>  // b.any
  413848:	orr	w26, w26, #0x2
  41384c:	add	x22, x22, #0x1
  413850:	b	41382c <reap_children@@Base+0xc04>
  413854:	cmp	w12, #0x2b
  413858:	b.ne	413868 <reap_children@@Base+0xc40>  // b.any
  41385c:	orr	w26, w26, #0x1
  413860:	add	x22, x22, #0x1
  413864:	b	41382c <reap_children@@Base+0xc04>
  413868:	cbz	w12, 413874 <reap_children@@Base+0xc4c>
  41386c:	ldrh	w12, [x11, x12, lsl #1]
  413870:	tbnz	w12, #1, 413828 <reap_children@@Base+0xc00>
  413874:	ubfiz	w11, w26, #4, #1
  413878:	and	w10, w10, #0xffffffef
  41387c:	orr	w10, w10, w11
  413880:	strb	w10, [x19, #80]
  413884:	ldr	x8, [x8, #32]
  413888:	and	w20, w26, #0x1
  41388c:	ldr	x8, [x8, #40]
  413890:	ldrb	w10, [x8, x9]
  413894:	orr	w10, w10, w20
  413898:	strb	w10, [x8, x9]
  41389c:	ldrb	w11, [x22]
  4138a0:	mov	x8, x22
  4138a4:	cbz	w11, 4138ec <reap_children@@Base+0xcc4>
  4138a8:	ldr	x8, [x19, #40]
  4138ac:	mov	x10, x22
  4138b0:	ldr	x8, [x8, #32]
  4138b4:	ldrb	w9, [x8, #50]
  4138b8:	mov	x8, x22
  4138bc:	b	4138c8 <reap_children@@Base+0xca0>
  4138c0:	ldrb	w11, [x10, #1]!
  4138c4:	cbz	w11, 4138ec <reap_children@@Base+0xcc4>
  4138c8:	strb	w11, [x8], #1
  4138cc:	ldrb	w11, [x10]
  4138d0:	cmp	w11, #0xa
  4138d4:	b.ne	4138c0 <reap_children@@Base+0xc98>  // b.any
  4138d8:	mov	x11, x10
  4138dc:	ldrb	w12, [x11, #1]!
  4138e0:	cmp	w12, w9
  4138e4:	csel	x10, x11, x10, eq  // eq = none
  4138e8:	b	4138c0 <reap_children@@Base+0xc98>
  4138ec:	strb	wzr, [x8]
  4138f0:	str	xzr, [x29, #24]
  4138f4:	ldr	x21, [x19, #40]
  4138f8:	adrp	x23, 442000 <just_print_flag@@Base>
  4138fc:	ldr	w27, [x23, #64]
  413900:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  413904:	add	x0, x0, #0x314
  413908:	mov	x1, x21
  41390c:	str	wzr, [x23, #64]
  413910:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  413914:	mov	x24, x0
  413918:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41391c:	add	x0, x0, #0x31d
  413920:	mov	x1, x21
  413924:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  413928:	mov	x25, x0
  41392c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  413930:	add	x0, x0, #0x32c
  413934:	mov	x1, x21
  413938:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41393c:	mov	x21, x0
  413940:	add	x1, x29, #0x18
  413944:	mov	x0, x22
  413948:	mov	x2, x24
  41394c:	mov	x3, x25
  413950:	mov	x4, x21
  413954:	str	w27, [x23, #64]
  413958:	bl	414ebc <construct_command_argv@@Base+0xc0>
  41395c:	mov	x23, x0
  413960:	mov	x0, x24
  413964:	bl	406c60 <free@plt>
  413968:	mov	x0, x25
  41396c:	bl	406c60 <free@plt>
  413970:	mov	x0, x21
  413974:	bl	406c60 <free@plt>
  413978:	ldr	x8, [x29, #24]
  41397c:	cbz	x8, 41399c <reap_children@@Base+0xd74>
  413980:	add	x9, x8, #0x1
  413984:	str	x9, [x29, #24]
  413988:	strb	wzr, [x8]
  41398c:	ldr	x8, [x29, #24]
  413990:	str	x8, [x19, #64]
  413994:	cbz	w20, 4139a4 <reap_children@@Base+0xd7c>
  413998:	b	4139e4 <reap_children@@Base+0xdbc>
  41399c:	str	xzr, [x19, #64]
  4139a0:	cbnz	w20, 4139e4 <reap_children@@Base+0xdbc>
  4139a4:	cbz	x23, 4139e4 <reap_children@@Base+0xdbc>
  4139a8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4139ac:	ldr	w8, [x8, #3260]
  4139b0:	cbz	w8, 4139e4 <reap_children@@Base+0xdbc>
  4139b4:	ldr	x0, [x23]
  4139b8:	bl	406c60 <free@plt>
  4139bc:	mov	x0, x23
  4139c0:	bl	406c60 <free@plt>
  4139c4:	ldr	x8, [x19, #40]
  4139c8:	ldr	w9, [x8, #136]
  4139cc:	and	w9, w9, #0xfffffffc
  4139d0:	orr	w9, w9, #0x2
  4139d4:	str	w9, [x8, #136]
  4139d8:	ldr	x0, [x19, #40]
  4139dc:	bl	4218c0 <notice_finished_file@@Base>
  4139e0:	b	413c14 <reap_children@@Base+0xfec>
  4139e4:	adrp	x8, 442000 <just_print_flag@@Base>
  4139e8:	ldr	w8, [x8, #204]
  4139ec:	cmp	w20, #0x0
  4139f0:	cset	w9, ne  // ne = any
  4139f4:	cmp	w8, #0x0
  4139f8:	cset	w8, eq  // eq = none
  4139fc:	orr	w8, w9, w8
  413a00:	cmp	w8, #0x0
  413a04:	csel	x21, x23, xzr, ne  // ne = any
  413a08:	tbnz	w8, #0, 413a2c <reap_children@@Base+0xe04>
  413a0c:	cbz	x23, 413a2c <reap_children@@Base+0xe04>
  413a10:	ldr	x0, [x23]
  413a14:	bl	406c60 <free@plt>
  413a18:	mov	x0, x23
  413a1c:	bl	406c60 <free@plt>
  413a20:	ldr	x8, [x19, #64]
  413a24:	cbnz	x8, 413b84 <reap_children@@Base+0xf5c>
  413a28:	b	413b94 <reap_children@@Base+0xf6c>
  413a2c:	cbz	x21, 413b7c <reap_children@@Base+0xf54>
  413a30:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413a34:	ldr	w8, [x8, #3304]
  413a38:	cbz	w8, 413a50 <reap_children@@Base+0xe28>
  413a3c:	cmp	w20, #0x0
  413a40:	cset	w9, eq  // eq = none
  413a44:	cmp	w8, #0x3
  413a48:	cset	w8, eq  // eq = none
  413a4c:	orr	w8, w8, w9
  413a50:	ldrb	w9, [x19, #24]
  413a54:	add	x0, x19, #0x10
  413a58:	and	w9, w9, #0xfe
  413a5c:	orr	w9, w9, w8
  413a60:	strb	w9, [x19, #24]
  413a64:	cbz	w8, 413a74 <reap_children@@Base+0xe4c>
  413a68:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  413a6c:	str	x0, [x8, #1456]
  413a70:	b	413a80 <reap_children@@Base+0xe58>
  413a74:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  413a78:	str	xzr, [x8, #1456]
  413a7c:	bl	41a324 <output_dump@@Base>
  413a80:	adrp	x23, 442000 <just_print_flag@@Base>
  413a84:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413a88:	ldr	w9, [x23]
  413a8c:	ldr	w8, [x8, #3308]
  413a90:	orr	w8, w8, w9
  413a94:	cbz	w8, 413abc <reap_children@@Base+0xe94>
  413a98:	mov	x0, x22
  413a9c:	bl	406750 <strlen@plt>
  413aa0:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  413aa4:	mov	x1, x0
  413aa8:	add	x2, x2, #0x5b6
  413aac:	mov	w0, wzr
  413ab0:	mov	x3, x22
  413ab4:	bl	41acbc <message@@Base>
  413ab8:	b	413ad0 <reap_children@@Base+0xea8>
  413abc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413ac0:	ldr	w8, [x8, #3232]
  413ac4:	and	w9, w26, #0x2
  413ac8:	orr	w8, w8, w9
  413acc:	cbz	w8, 413a98 <reap_children@@Base+0xe70>
  413ad0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  413ad4:	ldr	w9, [x8, #1608]
  413ad8:	add	w9, w9, #0x1
  413adc:	str	w9, [x8, #1608]
  413ae0:	ldr	x22, [x21]
  413ae4:	cbz	x22, 413b60 <reap_children@@Base+0xf38>
  413ae8:	mov	x0, x22
  413aec:	bl	412ad8 <is_bourne_compatible_shell@@Base>
  413af0:	cbz	w0, 413b60 <reap_children@@Base+0xf38>
  413af4:	ldr	x8, [x21, #8]
  413af8:	cbz	x8, 413b60 <reap_children@@Base+0xf38>
  413afc:	ldrb	w9, [x8]
  413b00:	cmp	w9, #0x2d
  413b04:	b.ne	413b60 <reap_children@@Base+0xf38>  // b.any
  413b08:	ldrb	w9, [x8, #1]
  413b0c:	cmp	w9, #0x65
  413b10:	b.eq	413b28 <reap_children@@Base+0xf00>  // b.none
  413b14:	cmp	w9, #0x63
  413b18:	b.ne	413b60 <reap_children@@Base+0xf38>  // b.any
  413b1c:	ldrb	w8, [x8, #2]
  413b20:	cbnz	w8, 413b60 <reap_children@@Base+0xf38>
  413b24:	b	413b3c <reap_children@@Base+0xf14>
  413b28:	ldrb	w9, [x8, #2]
  413b2c:	cmp	w9, #0x63
  413b30:	b.ne	413b60 <reap_children@@Base+0xf38>  // b.any
  413b34:	ldrb	w8, [x8, #3]
  413b38:	cbnz	w8, 413b60 <reap_children@@Base+0xf38>
  413b3c:	ldr	x8, [x21, #16]
  413b40:	cbz	x8, 413b60 <reap_children@@Base+0xf38>
  413b44:	ldrb	w9, [x8]
  413b48:	cmp	w9, #0x3a
  413b4c:	b.ne	413b60 <reap_children@@Base+0xf38>  // b.any
  413b50:	ldrb	w8, [x8, #1]
  413b54:	cbnz	w8, 413b60 <reap_children@@Base+0xf38>
  413b58:	ldr	x8, [x21, #24]
  413b5c:	cbz	x8, 413b6c <reap_children@@Base+0xf44>
  413b60:	cbnz	w20, 413c34 <reap_children@@Base+0x100c>
  413b64:	ldr	w8, [x23]
  413b68:	cbz	w8, 413c34 <reap_children@@Base+0x100c>
  413b6c:	mov	x0, x22
  413b70:	bl	406c60 <free@plt>
  413b74:	mov	x0, x21
  413b78:	bl	406c60 <free@plt>
  413b7c:	ldr	x8, [x19, #64]
  413b80:	cbz	x8, 413b94 <reap_children@@Base+0xf6c>
  413b84:	ldrb	w9, [x8]
  413b88:	ldr	w8, [x19, #72]
  413b8c:	cbz	w9, 413b98 <reap_children@@Base+0xf70>
  413b90:	b	413bf4 <reap_children@@Base+0xfcc>
  413b94:	ldr	w8, [x19, #72]
  413b98:	ldr	x0, [x19, #40]
  413b9c:	ldr	x9, [x0, #32]
  413ba0:	ldrh	w10, [x9, #48]
  413ba4:	cmp	w8, w10
  413ba8:	b.eq	413bc8 <reap_children@@Base+0xfa0>  // b.none
  413bac:	ldr	x9, [x19, #56]
  413bb0:	add	w10, w8, #0x1
  413bb4:	str	w10, [x19, #72]
  413bb8:	ldr	x8, [x9, w8, uxtw #3]
  413bbc:	str	x8, [x19, #64]
  413bc0:	cbnz	x8, 413b84 <reap_children@@Base+0xf5c>
  413bc4:	b	413b94 <reap_children@@Base+0xf6c>
  413bc8:	mov	w1, #0x2                   	// #2
  413bcc:	str	xzr, [x19, #64]
  413bd0:	str	xzr, [x9, #16]
  413bd4:	bl	40c0c8 <set_command_state@@Base>
  413bd8:	ldr	x8, [x19, #40]
  413bdc:	ldr	w9, [x8, #136]
  413be0:	and	w9, w9, #0xfffffffc
  413be4:	str	w9, [x8, #136]
  413be8:	ldr	x0, [x19, #40]
  413bec:	bl	4218c0 <notice_finished_file@@Base>
  413bf0:	b	413c0c <reap_children@@Base+0xfe4>
  413bf4:	ldr	x9, [x19, #40]
  413bf8:	sub	w8, w8, #0x1
  413bfc:	mov	x0, x19
  413c00:	ldr	x9, [x9, #32]
  413c04:	str	x8, [x9, #16]
  413c08:	bl	4137b4 <reap_children@@Base+0xb8c>
  413c0c:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  413c10:	str	xzr, [x8, #1456]
  413c14:	ldp	x20, x19, [sp, #96]
  413c18:	ldp	x22, x21, [sp, #80]
  413c1c:	ldp	x24, x23, [sp, #64]
  413c20:	ldp	x26, x25, [sp, #48]
  413c24:	ldr	x27, [sp, #32]
  413c28:	ldp	x29, x30, [sp, #16]
  413c2c:	add	sp, sp, #0x70
  413c30:	ret
  413c34:	bl	41aa3c <output_start@@Base>
  413c38:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413c3c:	ldr	x0, [x8, #2504]
  413c40:	bl	406cf0 <fflush@plt>
  413c44:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413c48:	ldr	x0, [x8, #2480]
  413c4c:	bl	406cf0 <fflush@plt>
  413c50:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  413c54:	ldrb	w9, [x23, #3076]
  413c58:	ldrb	w8, [x19, #80]
  413c5c:	mov	w10, #0x4                   	// #4
  413c60:	cmp	w9, #0x0
  413c64:	csel	w10, wzr, w10, ne  // ne = any
  413c68:	and	w8, w8, #0xfffffffb
  413c6c:	orr	w8, w8, w10
  413c70:	strb	w8, [x19, #80]
  413c74:	tbz	w9, #0, 413c90 <reap_children@@Base+0x1068>
  413c78:	ldr	x22, [x19, #8]
  413c7c:	and	w8, w8, #0xfffffff7
  413c80:	strb	w8, [x19, #80]
  413c84:	cbz	x22, 413ca8 <reap_children@@Base+0x1080>
  413c88:	tbnz	w8, #0, 413cc0 <reap_children@@Base+0x1098>
  413c8c:	b	413cf0 <reap_children@@Base+0x10c8>
  413c90:	mov	w9, #0x1                   	// #1
  413c94:	strb	w9, [x23, #3076]
  413c98:	ldr	x22, [x19, #8]
  413c9c:	and	w8, w8, #0xfffffff7
  413ca0:	strb	w8, [x19, #80]
  413ca4:	cbnz	x22, 413c88 <reap_children@@Base+0x1060>
  413ca8:	ldr	x0, [x19, #40]
  413cac:	bl	42510c <target_environment@@Base>
  413cb0:	ldrb	w8, [x19, #80]
  413cb4:	mov	x22, x0
  413cb8:	str	x0, [x19, #8]
  413cbc:	tbz	w8, #0, 413cf0 <reap_children@@Base+0x10c8>
  413cc0:	tbnz	w8, #2, 413cd0 <reap_children@@Base+0x10a8>
  413cc4:	bl	4271ac <get_bad_stdin@@Base>
  413cc8:	mov	w2, w0
  413ccc:	b	413cd4 <reap_children@@Base+0x10ac>
  413cd0:	mov	w2, wzr
  413cd4:	add	x3, x29, #0x18
  413cd8:	add	x4, sp, #0x8
  413cdc:	sub	x5, x29, #0x4
  413ce0:	mov	x0, x21
  413ce4:	mov	x1, x22
  413ce8:	bl	427274 <start_remote_job@@Base>
  413cec:	cbz	w0, 413d7c <reap_children@@Base+0x1154>
  413cf0:	adrp	x1, 442000 <just_print_flag@@Base>
  413cf4:	add	x1, x1, #0x48
  413cf8:	mov	w0, wzr
  413cfc:	mov	x2, xzr
  413d00:	bl	4067b0 <sigprocmask@plt>
  413d04:	ldrb	w8, [x19, #80]
  413d08:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  413d0c:	mov	w0, w20
  413d10:	and	w8, w8, #0xfe
  413d14:	strb	w8, [x19, #80]
  413d18:	ldr	x23, [x22, #2520]
  413d1c:	bl	426de0 <jobserver_pre_child@@Base>
  413d20:	ldrb	w8, [x19, #80]
  413d24:	mov	x0, x19
  413d28:	mov	x2, x21
  413d2c:	ubfx	w1, w8, #2, #1
  413d30:	bl	4148a0 <child_execute_job@@Base>
  413d34:	str	w0, [x19, #76]
  413d38:	mov	w0, w20
  413d3c:	str	x23, [x22, #2520]
  413d40:	bl	426f34 <jobserver_post_child@@Base>
  413d44:	ldr	w8, [x19, #76]
  413d48:	tbnz	w8, #31, 413d5c <reap_children@@Base+0x1134>
  413d4c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413d50:	ldr	x9, [x8, #3056]
  413d54:	add	x9, x9, #0x1
  413d58:	str	x9, [x8, #3056]
  413d5c:	ldr	x0, [x19, #40]
  413d60:	mov	w1, #0x2                   	// #2
  413d64:	bl	40c0c8 <set_command_state@@Base>
  413d68:	ldr	x0, [x21]
  413d6c:	bl	406c60 <free@plt>
  413d70:	mov	x0, x21
  413d74:	bl	406c60 <free@plt>
  413d78:	b	413c0c <reap_children@@Base+0xfe4>
  413d7c:	ldrb	w8, [x19, #80]
  413d80:	tbz	w8, #2, 413d98 <reap_children@@Base+0x1170>
  413d84:	ldur	w9, [x29, #-4]
  413d88:	cbnz	w9, 413d98 <reap_children@@Base+0x1170>
  413d8c:	and	w8, w8, #0xfffffffb
  413d90:	strb	w8, [x19, #80]
  413d94:	strb	wzr, [x23, #3076]
  413d98:	ldrb	w9, [x29, #24]
  413d9c:	bfxil	w8, w9, #0, #1
  413da0:	strb	w8, [x19, #80]
  413da4:	ldr	w8, [sp, #8]
  413da8:	str	w8, [x19, #76]
  413dac:	tbz	w8, #31, 413d4c <reap_children@@Base+0x1124>
  413db0:	b	413d5c <reap_children@@Base+0x1134>
  413db4:	stp	x29, x30, [sp, #-32]!
  413db8:	stp	x20, x19, [sp, #16]
  413dbc:	mov	x19, x0
  413dc0:	add	x0, x0, #0x10
  413dc4:	mov	x29, sp
  413dc8:	bl	41a9b0 <output_close@@Base>
  413dcc:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  413dd0:	ldr	w8, [x20, #3064]
  413dd4:	cbz	w8, 413edc <reap_children@@Base+0x12b4>
  413dd8:	bl	426c14 <jobserver_enabled@@Base>
  413ddc:	cbz	w0, 413e30 <reap_children@@Base+0x1208>
  413de0:	ldr	w8, [x20, #3064]
  413de4:	cmp	w8, #0x2
  413de8:	b.cc	413e30 <reap_children@@Base+0x1208>  // b.lo, b.ul, b.last
  413dec:	mov	w0, #0x1                   	// #1
  413df0:	bl	426c68 <jobserver_release@@Base>
  413df4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413df8:	ldrb	w8, [x8, #3236]
  413dfc:	tbz	w8, #2, 413e30 <reap_children@@Base+0x1208>
  413e00:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  413e04:	add	x1, x1, #0x3aa
  413e08:	mov	w2, #0x5                   	// #5
  413e0c:	mov	x0, xzr
  413e10:	bl	406dc0 <dcgettext@plt>
  413e14:	ldr	x8, [x19, #40]
  413e18:	mov	x1, x19
  413e1c:	ldr	x2, [x8]
  413e20:	bl	406e60 <printf@plt>
  413e24:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  413e28:	ldr	x0, [x8, #2504]
  413e2c:	bl	406cf0 <fflush@plt>
  413e30:	ldr	w8, [x20, #3064]
  413e34:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  413e38:	ldr	w9, [x9, #2536]
  413e3c:	sub	w8, w8, #0x1
  413e40:	str	w8, [x20, #3064]
  413e44:	cbz	w9, 413e54 <reap_children@@Base+0x122c>
  413e48:	ldp	x20, x19, [sp, #16]
  413e4c:	ldp	x29, x30, [sp], #32
  413e50:	ret
  413e54:	ldr	x0, [x19, #56]
  413e58:	cbz	x0, 413e98 <reap_children@@Base+0x1270>
  413e5c:	ldr	x8, [x19, #40]
  413e60:	ldr	x8, [x8, #32]
  413e64:	ldrh	w8, [x8, #48]
  413e68:	cbz	w8, 413e94 <reap_children@@Base+0x126c>
  413e6c:	mov	x20, xzr
  413e70:	ldr	x0, [x0, x20, lsl #3]
  413e74:	bl	406c60 <free@plt>
  413e78:	ldr	x8, [x19, #40]
  413e7c:	ldr	x0, [x19, #56]
  413e80:	add	x20, x20, #0x1
  413e84:	ldr	x8, [x8, #32]
  413e88:	ldrh	w8, [x8, #48]
  413e8c:	cmp	x20, x8
  413e90:	b.cc	413e70 <reap_children@@Base+0x1248>  // b.lo, b.ul, b.last
  413e94:	bl	406c60 <free@plt>
  413e98:	ldr	x0, [x19, #8]
  413e9c:	cbz	x0, 413ec4 <reap_children@@Base+0x129c>
  413ea0:	ldr	x8, [x0]
  413ea4:	cbz	x8, 413ec0 <reap_children@@Base+0x1298>
  413ea8:	add	x20, x0, #0x8
  413eac:	mov	x0, x8
  413eb0:	bl	406c60 <free@plt>
  413eb4:	ldr	x8, [x20], #8
  413eb8:	cbnz	x8, 413eac <reap_children@@Base+0x1284>
  413ebc:	ldr	x0, [x19, #8]
  413ec0:	bl	406c60 <free@plt>
  413ec4:	ldr	x0, [x19]
  413ec8:	bl	406c60 <free@plt>
  413ecc:	mov	x0, x19
  413ed0:	ldp	x20, x19, [sp, #16]
  413ed4:	ldp	x29, x30, [sp], #32
  413ed8:	b	406c60 <free@plt>
  413edc:	ldr	x8, [x19, #40]
  413ee0:	ldr	x20, [x8]
  413ee4:	mov	x0, x20
  413ee8:	bl	406750 <strlen@plt>
  413eec:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  413ef0:	add	x1, x0, #0x14
  413ef4:	add	x2, x2, #0x375
  413ef8:	mov	x0, xzr
  413efc:	mov	x3, x19
  413f00:	mov	x4, x20
  413f04:	bl	41aff0 <fatal@@Base>

0000000000413f08 <new_job@@Base>:
  413f08:	stp	x29, x30, [sp, #-96]!
  413f0c:	stp	x28, x27, [sp, #16]
  413f10:	stp	x26, x25, [sp, #32]
  413f14:	stp	x24, x23, [sp, #48]
  413f18:	stp	x22, x21, [sp, #64]
  413f1c:	stp	x20, x19, [sp, #80]
  413f20:	mov	x29, sp
  413f24:	sub	sp, sp, #0x20
  413f28:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  413f2c:	ldr	x8, [x20, #3088]
  413f30:	ldr	x23, [x0, #32]
  413f34:	mov	x19, x0
  413f38:	cbz	x8, 413f64 <new_job@@Base+0x5c>
  413f3c:	mov	w0, wzr
  413f40:	mov	w1, wzr
  413f44:	bl	412c28 <reap_children@@Base>
  413f48:	ldr	x0, [x20, #3088]
  413f4c:	ldr	x8, [x0, #32]
  413f50:	str	x8, [x20, #3088]
  413f54:	bl	414590 <start_waiting_jobs@@Base+0x44>
  413f58:	cbz	w0, 413f64 <new_job@@Base+0x5c>
  413f5c:	ldr	x8, [x20, #3088]
  413f60:	cbnz	x8, 413f3c <new_job@@Base+0x34>
  413f64:	mov	w0, wzr
  413f68:	mov	w1, wzr
  413f6c:	bl	412c28 <reap_children@@Base>
  413f70:	mov	x0, x23
  413f74:	bl	4083a4 <chop_commands@@Base>
  413f78:	mov	w0, #0x58                  	// #88
  413f7c:	bl	419e38 <xcalloc@@Base>
  413f80:	add	x22, x0, #0x10
  413f84:	mov	x20, x0
  413f88:	mov	x0, x22
  413f8c:	bl	41a798 <output_init@@Base>
  413f90:	stp	x19, xzr, [x20, #40]
  413f94:	ldrb	w8, [x20, #24]
  413f98:	ldrb	w9, [x20, #80]
  413f9c:	ldr	w10, [x19, #136]
  413fa0:	stur	x19, [x29, #-8]
  413fa4:	tst	w8, #0x1
  413fa8:	and	w8, w9, #0xffffffbf
  413fac:	lsr	w9, w10, #10
  413fb0:	and	w9, w9, #0x40
  413fb4:	orr	w8, w9, w8
  413fb8:	adrp	x10, 43f000 <stopchar_map@@Base+0x310>
  413fbc:	csel	x9, xzr, x22, eq  // eq = none
  413fc0:	strb	w8, [x20, #80]
  413fc4:	str	x9, [x10, #1456]
  413fc8:	ldrh	w8, [x23, #48]
  413fcc:	stur	x20, [x29, #-32]
  413fd0:	lsl	x0, x8, #3
  413fd4:	bl	419e14 <xmalloc@@Base>
  413fd8:	ldrh	w8, [x23, #48]
  413fdc:	stur	x23, [x29, #-16]
  413fe0:	cbz	w8, 4141fc <new_job@@Base+0x2f4>
  413fe4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  413fe8:	mov	x27, xzr
  413fec:	mov	w19, #0x7d                  	// #125
  413ff0:	mov	w22, #0x29                  	// #41
  413ff4:	add	x21, x21, #0xcf0
  413ff8:	mov	w28, #0x20                  	// #32
  413ffc:	stur	x0, [x29, #-24]
  414000:	b	414038 <new_job@@Base+0x130>
  414004:	ldp	x23, x1, [x29, #-16]
  414008:	lsl	x20, x27, #3
  41400c:	ldr	x8, [x23, #32]
  414010:	str	x27, [x23, #16]
  414014:	ldr	x0, [x8, x20]
  414018:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41401c:	ldur	x8, [x29, #-24]
  414020:	add	x27, x27, #0x1
  414024:	str	x0, [x8, x20]
  414028:	mov	x0, x8
  41402c:	ldrh	w8, [x23, #48]
  414030:	cmp	x27, x8
  414034:	b.cs	4141fc <new_job@@Base+0x2f4>  // b.hs, b.nlast
  414038:	ldr	x8, [x23, #32]
  41403c:	mov	w1, #0x24                  	// #36
  414040:	ldr	x25, [x8, x27, lsl #3]
  414044:	mov	x0, x25
  414048:	bl	406c80 <strchr@plt>
  41404c:	cbz	x0, 414004 <new_job@@Base+0xfc>
  414050:	mov	x23, x0
  414054:	mov	x24, x25
  414058:	b	414078 <new_job@@Base+0x170>
  41405c:	mov	x24, x9
  414060:	mov	x25, x20
  414064:	mov	w1, #0x24                  	// #36
  414068:	mov	x0, x25
  41406c:	bl	406c80 <strchr@plt>
  414070:	mov	x23, x0
  414074:	cbz	x0, 4141d8 <new_job@@Base+0x2d0>
  414078:	add	x20, x23, #0x1
  41407c:	cmp	x24, x25
  414080:	sub	x26, x20, x25
  414084:	b.eq	414098 <new_job@@Base+0x190>  // b.none
  414088:	mov	x0, x24
  41408c:	mov	x1, x25
  414090:	mov	x2, x26
  414094:	bl	406720 <memmove@plt>
  414098:	ldrb	w8, [x20]
  41409c:	add	x9, x24, x26
  4140a0:	cmp	w8, #0x7b
  4140a4:	b.eq	4140b0 <new_job@@Base+0x1a8>  // b.none
  4140a8:	cmp	w8, #0x28
  4140ac:	b.ne	41405c <new_job@@Base+0x154>  // b.any
  4140b0:	mov	x24, x9
  4140b4:	strb	w8, [x24], #1
  4140b8:	mov	x25, x23
  4140bc:	ldrb	w16, [x25, #2]!
  4140c0:	cmp	w8, #0x28
  4140c4:	csel	w10, w22, w19, eq  // eq = none
  4140c8:	cbz	w16, 414064 <new_job@@Base+0x15c>
  4140cc:	mov	w11, wzr
  4140d0:	sub	x12, x23, #0x1
  4140d4:	add	x13, x23, #0x2
  4140d8:	mov	w14, #0x2                   	// #2
  4140dc:	mov	w15, #0x1                   	// #1
  4140e0:	b	414100 <new_job@@Base+0x1f8>
  4140e4:	add	x16, x9, x15
  4140e8:	strb	w28, [x16]
  4140ec:	add	x25, x23, x14
  4140f0:	ldrb	w16, [x25]
  4140f4:	add	x15, x15, #0x1
  4140f8:	add	x24, x9, x15
  4140fc:	cbz	w16, 414064 <new_job@@Base+0x15c>
  414100:	cmp	w10, w16, uxtb
  414104:	b.ne	414110 <new_job@@Base+0x208>  // b.any
  414108:	subs	w11, w11, #0x1
  41410c:	b.lt	414064 <new_job@@Base+0x15c>  // b.tstop
  414110:	and	w17, w16, #0xff
  414114:	cmp	w17, #0x5c
  414118:	b.ne	414168 <new_job@@Base+0x260>  // b.any
  41411c:	ldrb	w17, [x25, #1]
  414120:	cmp	w17, #0xa
  414124:	b.ne	414168 <new_job@@Base+0x260>  // b.any
  414128:	cmp	x14, #0x3
  41412c:	b.lt	41418c <new_job@@Base+0x284>  // b.tstop
  414130:	mov	w17, wzr
  414134:	mov	x16, x14
  414138:	ldrb	w18, [x12, x16]
  41413c:	cmp	w18, #0x5c
  414140:	mov	w18, w17
  414144:	b.ne	41417c <new_job@@Base+0x274>  // b.any
  414148:	sub	x16, x16, #0x1
  41414c:	cmp	w18, #0x0
  414150:	add	x0, x16, #0x1
  414154:	cset	w17, eq  // eq = none
  414158:	cmp	x0, #0x3
  41415c:	b.gt	414138 <new_job@@Base+0x230>
  414160:	cbnz	w18, 41418c <new_job@@Base+0x284>
  414164:	b	414180 <new_job@@Base+0x278>
  414168:	cmp	w8, w16, uxtb
  41416c:	add	x14, x14, #0x1
  414170:	cinc	w11, w11, eq  // eq = none
  414174:	strb	w16, [x24]
  414178:	b	4140ec <new_job@@Base+0x1e4>
  41417c:	cbz	w18, 41418c <new_job@@Base+0x284>
  414180:	add	x14, x14, #0x1
  414184:	mov	w16, #0x5c                  	// #92
  414188:	b	414174 <new_job@@Base+0x26c>
  41418c:	ldrb	w16, [x13, x14]
  414190:	add	x14, x14, #0x1
  414194:	ldrh	w16, [x21, x16, lsl #1]
  414198:	tst	w16, #0x6
  41419c:	b.ne	41418c <new_job@@Base+0x284>  // b.any
  4141a0:	cmp	x15, #0x2
  4141a4:	add	x14, x14, #0x1
  4141a8:	b.lt	4140e4 <new_job@@Base+0x1dc>  // b.tstop
  4141ac:	add	x16, x9, x15
  4141b0:	ldurb	w17, [x16, #-1]
  4141b4:	ldrh	w17, [x21, x17, lsl #1]
  4141b8:	tbz	w17, #1, 4140e8 <new_job@@Base+0x1e0>
  4141bc:	sub	x17, x15, #0x1
  4141c0:	cmp	x15, #0x2
  4141c4:	mov	x15, x17
  4141c8:	b.gt	4141ac <new_job@@Base+0x2a4>
  4141cc:	add	x16, x9, x17
  4141d0:	mov	x15, x17
  4141d4:	b	4140e8 <new_job@@Base+0x1e0>
  4141d8:	cmp	x24, x25
  4141dc:	b.eq	414004 <new_job@@Base+0xfc>  // b.none
  4141e0:	mov	x0, x25
  4141e4:	bl	406750 <strlen@plt>
  4141e8:	add	x2, x0, #0x1
  4141ec:	mov	x0, x24
  4141f0:	mov	x1, x25
  4141f4:	bl	406720 <memmove@plt>
  4141f8:	b	414004 <new_job@@Base+0xfc>
  4141fc:	ldur	x27, [x29, #-32]
  414200:	str	xzr, [x23, #16]
  414204:	ldr	x8, [x27, #64]
  414208:	str	x0, [x27, #56]
  41420c:	cbz	x8, 414220 <new_job@@Base+0x318>
  414210:	ldrb	w9, [x8]
  414214:	ldr	w8, [x27, #72]
  414218:	cbz	w9, 414224 <new_job@@Base+0x31c>
  41421c:	b	41425c <new_job@@Base+0x354>
  414220:	ldr	w8, [x27, #72]
  414224:	ldr	x9, [x27, #40]
  414228:	ldr	x9, [x9, #32]
  41422c:	ldrh	w10, [x9, #48]
  414230:	cmp	w8, w10
  414234:	b.eq	414250 <new_job@@Base+0x348>  // b.none
  414238:	add	w9, w8, #0x1
  41423c:	str	w9, [x27, #72]
  414240:	ldr	x8, [x0, w8, uxtw #3]
  414244:	str	x8, [x27, #64]
  414248:	cbnz	x8, 414210 <new_job@@Base+0x308>
  41424c:	b	414220 <new_job@@Base+0x318>
  414250:	mov	x8, xzr
  414254:	str	xzr, [x27, #64]
  414258:	b	414268 <new_job@@Base+0x360>
  41425c:	ldr	x9, [x27, #40]
  414260:	sub	w8, w8, #0x1
  414264:	ldr	x9, [x9, #32]
  414268:	str	x8, [x9, #16]
  41426c:	adrp	x19, 442000 <just_print_flag@@Base>
  414270:	ldr	w8, [x19, #208]
  414274:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  414278:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  41427c:	cbz	w8, 4142b0 <new_job@@Base+0x3a8>
  414280:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  414284:	ldr	w9, [x21, #3048]
  414288:	cmp	w9, w8
  41428c:	b.ne	4143a0 <new_job@@Base+0x498>  // b.any
  414290:	mov	w0, #0x1                   	// #1
  414294:	mov	w1, wzr
  414298:	bl	412c28 <reap_children@@Base>
  41429c:	ldr	w8, [x21, #3048]
  4142a0:	ldr	w9, [x19, #208]
  4142a4:	cmp	w8, w9
  4142a8:	b.eq	414290 <new_job@@Base+0x388>  // b.none
  4142ac:	b	4143a0 <new_job@@Base+0x498>
  4142b0:	bl	426c14 <jobserver_enabled@@Base>
  4142b4:	cbz	w0, 4143a0 <new_job@@Base+0x498>
  4142b8:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x2680>
  4142bc:	adrp	x26, 42a000 <_IO_stdin_used@@Base+0x2680>
  4142c0:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x2680>
  4142c4:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  4142c8:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  4142cc:	add	x25, x25, #0x3a9
  4142d0:	add	x26, x26, #0x264
  4142d4:	add	x22, x22, #0x23e
  4142d8:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4142dc:	ldrb	w8, [x23, #3236]
  4142e0:	tbz	w8, #2, 414300 <new_job@@Base+0x3f8>
  4142e4:	ldr	x8, [x24, #3040]
  4142e8:	mov	x0, x22
  4142ec:	cmp	x8, #0x0
  4142f0:	csel	x1, x26, x25, eq  // eq = none
  4142f4:	bl	406e60 <printf@plt>
  4142f8:	ldr	x0, [x21, #2504]
  4142fc:	bl	406cf0 <fflush@plt>
  414300:	ldr	w8, [x20, #3064]
  414304:	cbz	w8, 4143a0 <new_job@@Base+0x498>
  414308:	bl	427018 <jobserver_pre_acquire@@Base>
  41430c:	mov	w0, wzr
  414310:	mov	w1, wzr
  414314:	bl	412c28 <reap_children@@Base>
  414318:	ldr	x8, [x28, #3088]
  41431c:	cbz	x8, 414348 <new_job@@Base+0x440>
  414320:	mov	w0, wzr
  414324:	mov	w1, wzr
  414328:	bl	412c28 <reap_children@@Base>
  41432c:	ldr	x0, [x28, #3088]
  414330:	ldr	x8, [x0, #32]
  414334:	str	x8, [x28, #3088]
  414338:	bl	414590 <start_waiting_jobs@@Base+0x44>
  41433c:	ldr	x8, [x28, #3088]
  414340:	cbz	w0, 414348 <new_job@@Base+0x440>
  414344:	cbnz	x8, 414320 <new_job@@Base+0x418>
  414348:	ldr	w9, [x20, #3064]
  41434c:	cbz	w9, 4143a0 <new_job@@Base+0x498>
  414350:	ldr	x9, [x24, #3040]
  414354:	cbz	x9, 414538 <new_job@@Base+0x630>
  414358:	cmp	x8, #0x0
  41435c:	cset	w0, ne  // ne = any
  414360:	bl	42701c <jobserver_acquire@@Base>
  414364:	cmp	w0, #0x1
  414368:	b.ne	4142dc <new_job@@Base+0x3d4>  // b.any
  41436c:	ldrb	w8, [x23, #3236]
  414370:	tbz	w8, #2, 4143a0 <new_job@@Base+0x498>
  414374:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414378:	add	x1, x1, #0x29c
  41437c:	mov	w2, #0x5                   	// #5
  414380:	mov	x0, xzr
  414384:	bl	406dc0 <dcgettext@plt>
  414388:	ldr	x8, [x27, #40]
  41438c:	mov	x1, x27
  414390:	ldr	x2, [x8]
  414394:	bl	406e60 <printf@plt>
  414398:	ldr	x0, [x21, #2504]
  41439c:	bl	406cf0 <fflush@plt>
  4143a0:	ldr	w8, [x20, #3064]
  4143a4:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4143a8:	ldr	w9, [x9, #3308]
  4143ac:	add	w8, w8, #0x1
  4143b0:	str	w8, [x20, #3064]
  4143b4:	cbz	w9, 4144cc <new_job@@Base+0x5c4>
  4143b8:	ldr	x1, [x27, #40]
  4143bc:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4143c0:	add	x0, x0, #0x2bf
  4143c4:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  4143c8:	ldur	x20, [x29, #-16]
  4143cc:	mov	x22, x0
  4143d0:	ldr	x24, [x20]
  4143d4:	cbz	x24, 414410 <new_job@@Base+0x508>
  4143d8:	mov	x0, x24
  4143dc:	bl	406750 <strlen@plt>
  4143e0:	add	x9, x0, #0x1c
  4143e4:	mov	x8, sp
  4143e8:	and	x9, x9, #0xfffffffffffffff0
  4143ec:	sub	x23, x8, x9
  4143f0:	mov	sp, x23
  4143f4:	ldr	x3, [x20, #8]
  4143f8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4143fc:	add	x1, x1, #0x2cc
  414400:	mov	x0, x23
  414404:	mov	x2, x24
  414408:	bl	406800 <sprintf@plt>
  41440c:	b	414428 <new_job@@Base+0x520>
  414410:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414414:	add	x1, x1, #0x2c2
  414418:	mov	w2, #0x5                   	// #5
  41441c:	mov	x0, xzr
  414420:	bl	406dc0 <dcgettext@plt>
  414424:	mov	x23, x0
  414428:	ldrb	w20, [x22]
  41442c:	mov	x0, x23
  414430:	bl	406750 <strlen@plt>
  414434:	ldr	x8, [x27, #40]
  414438:	mov	x21, x0
  41443c:	ldr	x8, [x8]
  414440:	mov	x0, x8
  414444:	bl	406750 <strlen@plt>
  414448:	add	x21, x0, x21
  41444c:	cbz	w20, 414494 <new_job@@Base+0x58c>
  414450:	mov	x0, x22
  414454:	bl	406750 <strlen@plt>
  414458:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  41445c:	add	x21, x0, x21
  414460:	add	x1, x1, #0x2f2
  414464:	mov	w2, #0x5                   	// #5
  414468:	mov	x0, xzr
  41446c:	bl	406dc0 <dcgettext@plt>
  414470:	ldr	x8, [x27, #40]
  414474:	mov	x2, x0
  414478:	mov	w0, wzr
  41447c:	mov	x1, x21
  414480:	ldr	x4, [x8]
  414484:	mov	x3, x23
  414488:	mov	x5, x22
  41448c:	bl	41acbc <message@@Base>
  414490:	b	4144c4 <new_job@@Base+0x5bc>
  414494:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414498:	add	x1, x1, #0x2d3
  41449c:	mov	w2, #0x5                   	// #5
  4144a0:	mov	x0, xzr
  4144a4:	bl	406dc0 <dcgettext@plt>
  4144a8:	ldr	x8, [x27, #40]
  4144ac:	mov	x2, x0
  4144b0:	mov	w0, wzr
  4144b4:	mov	x1, x21
  4144b8:	ldr	x4, [x8]
  4144bc:	mov	x3, x23
  4144c0:	bl	41acbc <message@@Base>
  4144c4:	mov	x0, x22
  4144c8:	bl	406c60 <free@plt>
  4144cc:	mov	x0, x27
  4144d0:	bl	414590 <start_waiting_jobs@@Base+0x44>
  4144d4:	ldr	w8, [x19, #208]
  4144d8:	ldur	x19, [x29, #-8]
  4144dc:	cmp	w8, #0x1
  4144e0:	b.eq	414500 <new_job@@Base+0x5f8>  // b.none
  4144e4:	adrp	x8, 442000 <just_print_flag@@Base>
  4144e8:	ldr	w8, [x8, #36]
  4144ec:	cbz	w8, 414510 <new_job@@Base+0x608>
  4144f0:	b	414500 <new_job@@Base+0x5f8>
  4144f4:	mov	w0, #0x1                   	// #1
  4144f8:	mov	w1, wzr
  4144fc:	bl	412c28 <reap_children@@Base>
  414500:	ldr	w8, [x19, #136]
  414504:	and	w8, w8, #0xc
  414508:	cmp	w8, #0x8
  41450c:	b.eq	4144f4 <new_job@@Base+0x5ec>  // b.none
  414510:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  414514:	str	xzr, [x8, #1456]
  414518:	mov	sp, x29
  41451c:	ldp	x20, x19, [sp, #80]
  414520:	ldp	x22, x21, [sp, #64]
  414524:	ldp	x24, x23, [sp, #48]
  414528:	ldp	x26, x25, [sp, #32]
  41452c:	ldp	x28, x27, [sp, #16]
  414530:	ldp	x29, x30, [sp], #96
  414534:	ret
  414538:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  41453c:	add	x2, x2, #0x26b
  414540:	mov	x0, xzr
  414544:	mov	x1, xzr
  414548:	bl	41aff0 <fatal@@Base>

000000000041454c <start_waiting_jobs@@Base>:
  41454c:	stp	x29, x30, [sp, #-32]!
  414550:	str	x19, [sp, #16]
  414554:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  414558:	mov	x29, sp
  41455c:	ldr	x8, [x19, #3088]
  414560:	cbz	x8, 414584 <start_waiting_jobs@@Base+0x38>
  414564:	mov	w0, wzr
  414568:	mov	w1, wzr
  41456c:	bl	412c28 <reap_children@@Base>
  414570:	ldr	x0, [x19, #3088]
  414574:	ldr	x8, [x0, #32]
  414578:	str	x8, [x19, #3088]
  41457c:	bl	414590 <start_waiting_jobs@@Base+0x44>
  414580:	cbnz	w0, 41455c <start_waiting_jobs@@Base+0x10>
  414584:	ldr	x19, [sp, #16]
  414588:	ldp	x29, x30, [sp], #32
  41458c:	ret
  414590:	sub	sp, sp, #0x60
  414594:	stp	x29, x30, [sp, #24]
  414598:	stp	x24, x23, [sp, #48]
  41459c:	stp	x22, x21, [sp, #64]
  4145a0:	stp	x20, x19, [sp, #80]
  4145a4:	ldr	x20, [x0, #40]
  4145a8:	mov	x19, x0
  4145ac:	mov	w0, #0x1                   	// #1
  4145b0:	str	d8, [sp, #16]
  4145b4:	str	x25, [sp, #40]
  4145b8:	add	x29, sp, #0x10
  4145bc:	bl	42726c <start_remote_job_p@@Base>
  4145c0:	ldrb	w8, [x19, #80]
  4145c4:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  4145c8:	bfxil	w8, w0, #0, #1
  4145cc:	strb	w8, [x19, #80]
  4145d0:	tbnz	w0, #0, 414734 <start_waiting_jobs@@Base+0x1e8>
  4145d4:	ldr	w8, [x22, #3048]
  4145d8:	cbz	w8, 414734 <start_waiting_jobs@@Base+0x1e8>
  4145dc:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  4145e0:	ldr	d0, [x23, #2360]
  4145e4:	fcmp	d0, #0.0
  4145e8:	b.mi	414734 <start_waiting_jobs@@Base+0x1e8>  // b.first
  4145ec:	bl	41a200 <make_access@@Base>
  4145f0:	add	x0, sp, #0x8
  4145f4:	mov	w1, #0x1                   	// #1
  4145f8:	bl	406840 <getloadavg@plt>
  4145fc:	cmp	w0, #0x1
  414600:	b.eq	414680 <start_waiting_jobs@@Base+0x134>  // b.none
  414604:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  414608:	ldr	w25, [x24, #2352]
  41460c:	bl	406e70 <__errno_location@plt>
  414610:	ldr	w8, [x0]
  414614:	mov	x21, x0
  414618:	cmn	w25, #0x1
  41461c:	b.eq	414628 <start_waiting_jobs@@Base+0xdc>  // b.none
  414620:	cmp	w8, w25
  414624:	b.eq	414674 <start_waiting_jobs@@Base+0x128>  // b.none
  414628:	cbz	w8, 414650 <start_waiting_jobs@@Base+0x104>
  41462c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414630:	add	x1, x1, #0x42f
  414634:	mov	w2, #0x5                   	// #5
  414638:	mov	x0, xzr
  41463c:	bl	406dc0 <dcgettext@plt>
  414640:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414644:	add	x1, x1, #0x44b
  414648:	bl	41b1c0 <perror_with_name@@Base>
  41464c:	b	414674 <start_waiting_jobs@@Base+0x128>
  414650:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414654:	add	x1, x1, #0x3fb
  414658:	mov	w2, #0x5                   	// #5
  41465c:	mov	x0, xzr
  414660:	bl	406dc0 <dcgettext@plt>
  414664:	mov	x2, x0
  414668:	mov	x0, xzr
  41466c:	mov	x1, xzr
  414670:	bl	41ae34 <error@@Base>
  414674:	ldr	w8, [x21]
  414678:	str	xzr, [sp, #8]
  41467c:	str	w8, [x24, #2352]
  414680:	bl	41a1fc <user_access@@Base>
  414684:	mov	x0, xzr
  414688:	bl	406980 <time@plt>
  41468c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414690:	ldr	x8, [x8, #3104]
  414694:	fmov	d0, #2.500000000000000000e-01
  414698:	cmp	x8, x0
  41469c:	b.ge	4146d8 <start_waiting_jobs@@Base+0x18c>  // b.tcont
  4146a0:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  4146a4:	ldr	d1, [x10, #3056]
  4146a8:	sub	x9, x0, #0x1
  4146ac:	fmov	d2, xzr
  4146b0:	adrp	x11, 43e000 <memcpy@GLIBC_2.17>
  4146b4:	ucvtf	d1, d1
  4146b8:	cmp	x8, x9
  4146bc:	fmul	d1, d1, d0
  4146c0:	add	x11, x11, #0xc18
  4146c4:	fcsel	d3, d1, d2, eq  // eq = none
  4146c8:	str	xzr, [x10, #3056]
  4146cc:	str	d3, [x11]
  4146d0:	str	x0, [x11, #8]
  4146d4:	b	4146ec <start_waiting_jobs@@Base+0x1a0>
  4146d8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4146dc:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4146e0:	ldr	d1, [x8, #3056]
  4146e4:	ldr	d3, [x9, #3096]
  4146e8:	ucvtf	d2, d1
  4146ec:	ldr	d1, [sp, #8]
  4146f0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4146f4:	ldrb	w8, [x8, #3236]
  4146f8:	fadd	d2, d3, d2
  4146fc:	fmul	d0, d2, d0
  414700:	fadd	d8, d1, d0
  414704:	tbz	w8, #2, 414728 <start_waiting_jobs@@Base+0x1dc>
  414708:	ldr	d2, [x23, #2360]
  41470c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  414710:	add	x0, x0, #0x456
  414714:	mov	v0.16b, v8.16b
  414718:	bl	406e60 <printf@plt>
  41471c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414720:	ldr	x0, [x8, #2504]
  414724:	bl	406cf0 <fflush@plt>
  414728:	ldr	d0, [x23, #2360]
  41472c:	fcmp	d8, d0
  414730:	b.ge	4147e8 <start_waiting_jobs@@Base+0x29c>  // b.tcont
  414734:	mov	x0, x19
  414738:	bl	4137b4 <reap_children@@Base+0xb8c>
  41473c:	ldr	w9, [x20, #136]
  414740:	ubfx	w8, w9, #2, #2
  414744:	cbz	w8, 4147c8 <start_waiting_jobs@@Base+0x27c>
  414748:	cmp	w8, #0x3
  41474c:	b.eq	4147d0 <start_waiting_jobs@@Base+0x284>  // b.none
  414750:	cmp	w8, #0x2
  414754:	b.ne	4147e0 <start_waiting_jobs@@Base+0x294>  // b.any
  414758:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  41475c:	ldr	w8, [x19, #76]
  414760:	ldr	x9, [x23, #3040]
  414764:	cmp	w8, #0x1
  414768:	str	x9, [x19, #32]
  41476c:	b.lt	414860 <start_waiting_jobs@@Base+0x314>  // b.tstop
  414770:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414774:	ldrb	w8, [x8, #3236]
  414778:	tbz	w8, #2, 414848 <start_waiting_jobs@@Base+0x2fc>
  41477c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414780:	add	x1, x1, #0x3cd
  414784:	mov	w2, #0x5                   	// #5
  414788:	mov	x0, xzr
  41478c:	bl	406dc0 <dcgettext@plt>
  414790:	ldr	x8, [x19, #40]
  414794:	ldrsw	x2, [x19, #76]
  414798:	mov	x21, x0
  41479c:	adrp	x0, 43e000 <memcpy@GLIBC_2.17>
  4147a0:	ldr	x20, [x8]
  4147a4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4147a8:	add	x0, x0, #0xc28
  4147ac:	add	x1, x1, #0x2cf
  4147b0:	bl	406800 <sprintf@plt>
  4147b4:	ldrb	w8, [x19, #80]
  4147b8:	tbnz	w8, #0, 41480c <start_waiting_jobs@@Base+0x2c0>
  4147bc:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x2680>
  4147c0:	add	x4, x4, #0x3a9
  4147c4:	b	414824 <start_waiting_jobs@@Base+0x2d8>
  4147c8:	and	w8, w9, #0xfffffffc
  4147cc:	str	w8, [x20, #136]
  4147d0:	mov	x0, x20
  4147d4:	bl	4218c0 <notice_finished_file@@Base>
  4147d8:	mov	x0, x19
  4147dc:	bl	413db4 <reap_children@@Base+0x118c>
  4147e0:	mov	w20, #0x1                   	// #1
  4147e4:	b	41487c <start_waiting_jobs@@Base+0x330>
  4147e8:	mov	w1, #0x2                   	// #2
  4147ec:	mov	x0, x20
  4147f0:	bl	40c0c8 <set_command_state@@Base>
  4147f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4147f8:	ldr	x9, [x8, #3088]
  4147fc:	mov	w20, wzr
  414800:	str	x9, [x19, #32]
  414804:	str	x19, [x8, #3088]
  414808:	b	41487c <start_waiting_jobs@@Base+0x330>
  41480c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  414810:	add	x1, x1, #0x155
  414814:	mov	w2, #0x5                   	// #5
  414818:	mov	x0, xzr
  41481c:	bl	406dc0 <dcgettext@plt>
  414820:	mov	x4, x0
  414824:	adrp	x3, 43e000 <memcpy@GLIBC_2.17>
  414828:	add	x3, x3, #0xc28
  41482c:	mov	x0, x21
  414830:	mov	x1, x19
  414834:	mov	x2, x20
  414838:	bl	406e60 <printf@plt>
  41483c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414840:	ldr	x0, [x8, #2504]
  414844:	bl	406cf0 <fflush@plt>
  414848:	ldr	w8, [x22, #3048]
  41484c:	add	w8, w8, #0x1
  414850:	str	w8, [x22, #3048]
  414854:	ldrb	w8, [x19, #80]
  414858:	orr	w8, w8, #0x20
  41485c:	strb	w8, [x19, #80]
  414860:	adrp	x1, 442000 <just_print_flag@@Base>
  414864:	add	x1, x1, #0x48
  414868:	mov	w0, #0x1                   	// #1
  41486c:	mov	x2, xzr
  414870:	str	x19, [x23, #3040]
  414874:	mov	w20, #0x1                   	// #1
  414878:	bl	4067b0 <sigprocmask@plt>
  41487c:	mov	w0, w20
  414880:	ldp	x20, x19, [sp, #80]
  414884:	ldp	x22, x21, [sp, #64]
  414888:	ldp	x24, x23, [sp, #48]
  41488c:	ldr	x25, [sp, #40]
  414890:	ldp	x29, x30, [sp, #24]
  414894:	ldr	d8, [sp, #16]
  414898:	add	sp, sp, #0x60
  41489c:	ret

00000000004148a0 <child_execute_job@@Base>:
  4148a0:	stp	x29, x30, [sp, #-96]!
  4148a4:	stp	x28, x27, [sp, #16]
  4148a8:	stp	x26, x25, [sp, #32]
  4148ac:	stp	x24, x23, [sp, #48]
  4148b0:	stp	x22, x21, [sp, #64]
  4148b4:	stp	x20, x19, [sp, #80]
  4148b8:	mov	x29, sp
  4148bc:	sub	sp, sp, #0x220
  4148c0:	mov	x19, x2
  4148c4:	mov	x20, x0
  4148c8:	cbz	w1, 4148dc <child_execute_job@@Base+0x3c>
  4148cc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4148d0:	ldr	x0, [x8, #2512]
  4148d4:	bl	406910 <fileno@plt>
  4148d8:	b	4148e0 <child_execute_job@@Base+0x40>
  4148dc:	bl	4271ac <get_bad_stdin@@Base>
  4148e0:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  4148e4:	mov	w24, w0
  4148e8:	ldr	x0, [x27, #2504]
  4148ec:	bl	406910 <fileno@plt>
  4148f0:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  4148f4:	ldr	x8, [x26, #2480]
  4148f8:	mov	w23, w0
  4148fc:	mov	x0, x8
  414900:	bl	406910 <fileno@plt>
  414904:	ldrb	w8, [x20, #24]
  414908:	mov	w21, w0
  41490c:	tbz	w8, #0, 414924 <child_execute_job@@Base+0x84>
  414910:	ldp	w8, w9, [x20, #16]
  414914:	cmp	w8, #0x0
  414918:	csel	w23, w8, w23, ge  // ge = tcont
  41491c:	cmp	w9, #0x0
  414920:	csel	w21, w9, w21, ge  // ge = tcont
  414924:	add	x0, sp, #0xd0
  414928:	bl	406d40 <posix_spawnattr_init@plt>
  41492c:	mov	w22, w0
  414930:	cbnz	w0, 414990 <child_execute_job@@Base+0xf0>
  414934:	add	x0, sp, #0x80
  414938:	bl	406bb0 <posix_spawn_file_actions_init@plt>
  41493c:	cbz	w0, 414950 <child_execute_job@@Base+0xb0>
  414940:	mov	w22, w0
  414944:	add	x0, sp, #0xd0
  414948:	bl	4069e0 <posix_spawnattr_destroy@plt>
  41494c:	b	414990 <child_execute_job@@Base+0xf0>
  414950:	mov	x0, sp
  414954:	bl	4069d0 <sigemptyset@plt>
  414958:	add	x0, sp, #0xd0
  41495c:	mov	x1, sp
  414960:	bl	406b80 <posix_spawnattr_setsigmask@plt>
  414964:	cmp	w0, #0x0
  414968:	mov	w8, #0x41                  	// #65
  41496c:	mov	w9, #0x49                  	// #73
  414970:	mov	w22, w0
  414974:	csel	w25, w9, w8, eq  // eq = none
  414978:	cbz	w0, 414a00 <child_execute_job@@Base+0x160>
  41497c:	add	x0, sp, #0x80
  414980:	bl	406aa0 <posix_spawn_file_actions_destroy@plt>
  414984:	add	x0, sp, #0xd0
  414988:	bl	4069e0 <posix_spawnattr_destroy@plt>
  41498c:	cbz	w22, 414b0c <child_execute_job@@Base+0x26c>
  414990:	mov	w8, #0xffffffff            	// #-1
  414994:	str	w8, [sp]
  414998:	ldr	x0, [x19]
  41499c:	bl	406750 <strlen@plt>
  4149a0:	mov	x20, x0
  4149a4:	mov	w0, w22
  4149a8:	bl	406b00 <strerror@plt>
  4149ac:	bl	406750 <strlen@plt>
  4149b0:	ldr	x19, [x19]
  4149b4:	add	x20, x0, x20
  4149b8:	mov	w0, w22
  4149bc:	bl	406b00 <strerror@plt>
  4149c0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  4149c4:	mov	x4, x0
  4149c8:	add	x2, x2, #0xd0a
  4149cc:	mov	x0, xzr
  4149d0:	mov	x1, x20
  4149d4:	mov	x3, x19
  4149d8:	bl	41ae34 <error@@Base>
  4149dc:	ldr	w0, [sp]
  4149e0:	add	sp, sp, #0x220
  4149e4:	ldp	x20, x19, [sp, #80]
  4149e8:	ldp	x22, x21, [sp, #64]
  4149ec:	ldp	x24, x23, [sp, #48]
  4149f0:	ldp	x26, x25, [sp, #32]
  4149f4:	ldp	x28, x27, [sp, #16]
  4149f8:	ldp	x29, x30, [sp], #96
  4149fc:	ret
  414a00:	tbnz	w24, #31, 414a38 <child_execute_job@@Base+0x198>
  414a04:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  414a08:	ldr	x0, [x22, #2512]
  414a0c:	bl	406910 <fileno@plt>
  414a10:	cmp	w24, w0
  414a14:	b.eq	414a38 <child_execute_job@@Base+0x198>  // b.none
  414a18:	ldr	x0, [x22, #2512]
  414a1c:	bl	406910 <fileno@plt>
  414a20:	mov	w2, w0
  414a24:	add	x0, sp, #0x80
  414a28:	mov	w1, w24
  414a2c:	bl	406930 <posix_spawn_file_actions_adddup2@plt>
  414a30:	mov	w22, w0
  414a34:	cbnz	w0, 41497c <child_execute_job@@Base+0xdc>
  414a38:	ldr	x0, [x27, #2504]
  414a3c:	bl	406910 <fileno@plt>
  414a40:	cmp	w23, w0
  414a44:	b.eq	414a68 <child_execute_job@@Base+0x1c8>  // b.none
  414a48:	ldr	x0, [x27, #2504]
  414a4c:	bl	406910 <fileno@plt>
  414a50:	mov	w2, w0
  414a54:	add	x0, sp, #0x80
  414a58:	mov	w1, w23
  414a5c:	bl	406930 <posix_spawn_file_actions_adddup2@plt>
  414a60:	mov	w22, w0
  414a64:	cbnz	w0, 41497c <child_execute_job@@Base+0xdc>
  414a68:	ldr	x0, [x26, #2480]
  414a6c:	bl	406910 <fileno@plt>
  414a70:	cmp	w21, w0
  414a74:	b.eq	414a98 <child_execute_job@@Base+0x1f8>  // b.none
  414a78:	ldr	x0, [x26, #2480]
  414a7c:	bl	406910 <fileno@plt>
  414a80:	mov	w2, w0
  414a84:	add	x0, sp, #0x80
  414a88:	mov	w1, w21
  414a8c:	bl	406930 <posix_spawn_file_actions_adddup2@plt>
  414a90:	mov	w22, w0
  414a94:	cbnz	w0, 41497c <child_execute_job@@Base+0xdc>
  414a98:	add	x0, sp, #0xd0
  414a9c:	mov	w1, w25
  414aa0:	bl	406b60 <posix_spawnattr_setflags@plt>
  414aa4:	mov	w22, w0
  414aa8:	cbnz	w0, 41497c <child_execute_job@@Base+0xdc>
  414aac:	ldr	x9, [x20, #8]
  414ab0:	ldr	x8, [x9]
  414ab4:	cbz	x8, 414b1c <child_execute_job@@Base+0x27c>
  414ab8:	add	x9, x9, #0x8
  414abc:	b	414ac8 <child_execute_job@@Base+0x228>
  414ac0:	ldr	x8, [x9], #8
  414ac4:	cbz	x8, 414b1c <child_execute_job@@Base+0x27c>
  414ac8:	ldrb	w10, [x8]
  414acc:	cmp	w10, #0x50
  414ad0:	b.ne	414ac0 <child_execute_job@@Base+0x220>  // b.any
  414ad4:	ldrb	w10, [x8, #1]
  414ad8:	cmp	w10, #0x41
  414adc:	b.ne	414ac0 <child_execute_job@@Base+0x220>  // b.any
  414ae0:	ldrb	w10, [x8, #2]
  414ae4:	cmp	w10, #0x54
  414ae8:	b.ne	414ac0 <child_execute_job@@Base+0x220>  // b.any
  414aec:	ldrb	w10, [x8, #3]
  414af0:	cmp	w10, #0x48
  414af4:	b.ne	414ac0 <child_execute_job@@Base+0x220>  // b.any
  414af8:	ldrb	w10, [x8, #4]
  414afc:	cmp	w10, #0x3d
  414b00:	b.ne	414ac0 <child_execute_job@@Base+0x220>  // b.any
  414b04:	add	x1, x8, #0x5
  414b08:	b	414b20 <child_execute_job@@Base+0x280>
  414b0c:	ldr	w0, [sp]
  414b10:	tbz	w0, #31, 4149e0 <child_execute_job@@Base+0x140>
  414b14:	mov	w22, wzr
  414b18:	b	414998 <child_execute_job@@Base+0xf8>
  414b1c:	mov	x1, xzr
  414b20:	ldr	x0, [x19]
  414b24:	mov	w2, wzr
  414b28:	bl	4272b0 <find_in_given_path@@Base>
  414b2c:	cbz	x0, 414b84 <child_execute_job@@Base+0x2e4>
  414b30:	mov	x21, x0
  414b34:	ldr	x5, [x20, #8]
  414b38:	mov	x0, sp
  414b3c:	add	x2, sp, #0x80
  414b40:	add	x3, sp, #0xd0
  414b44:	mov	x1, x21
  414b48:	mov	x4, x19
  414b4c:	bl	406d10 <posix_spawn@plt>
  414b50:	cmp	w0, #0x4
  414b54:	b.eq	414b34 <child_execute_job@@Base+0x294>  // b.none
  414b58:	mov	w22, w0
  414b5c:	cmp	w0, #0x8
  414b60:	b.ne	414c14 <child_execute_job@@Base+0x374>  // b.any
  414b64:	ldr	x8, [x19]
  414b68:	cbz	x8, 414b90 <child_execute_job@@Base+0x2f0>
  414b6c:	mov	x22, xzr
  414b70:	add	x8, x19, #0x8
  414b74:	ldr	x9, [x8, x22]
  414b78:	add	x22, x22, #0x8
  414b7c:	cbnz	x9, 414b74 <child_execute_job@@Base+0x2d4>
  414b80:	b	414b94 <child_execute_job@@Base+0x2f4>
  414b84:	bl	406e70 <__errno_location@plt>
  414b88:	ldr	w22, [x0]
  414b8c:	b	41497c <child_execute_job@@Base+0xdc>
  414b90:	mov	x22, xzr
  414b94:	add	x0, x22, #0x18
  414b98:	bl	419e14 <xmalloc@@Base>
  414b9c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414ba0:	ldr	x24, [x8, #2336]
  414ba4:	mov	x23, x0
  414ba8:	add	x0, x0, #0x10
  414bac:	add	x1, x19, #0x8
  414bb0:	mov	x2, x22
  414bb4:	stp	x24, x21, [x23]
  414bb8:	bl	406710 <memcpy@plt>
  414bbc:	ldr	x5, [x20, #8]
  414bc0:	mov	x0, sp
  414bc4:	add	x2, sp, #0x80
  414bc8:	add	x3, sp, #0xd0
  414bcc:	mov	x1, x24
  414bd0:	mov	x4, x23
  414bd4:	bl	406d10 <posix_spawn@plt>
  414bd8:	mov	w22, w0
  414bdc:	cmp	w0, #0x4
  414be0:	b.ne	414c0c <child_execute_job@@Base+0x36c>  // b.any
  414be4:	ldr	x1, [x23]
  414be8:	ldr	x5, [x20, #8]
  414bec:	mov	x0, sp
  414bf0:	add	x2, sp, #0x80
  414bf4:	add	x3, sp, #0xd0
  414bf8:	mov	x4, x23
  414bfc:	bl	406d10 <posix_spawn@plt>
  414c00:	cmp	w0, #0x4
  414c04:	b.eq	414be4 <child_execute_job@@Base+0x344>  // b.none
  414c08:	mov	w22, w0
  414c0c:	mov	x0, x23
  414c10:	bl	406c60 <free@plt>
  414c14:	cbnz	w22, 41497c <child_execute_job@@Base+0xdc>
  414c18:	ldr	x0, [x20]
  414c1c:	bl	406c60 <free@plt>
  414c20:	ldr	x8, [x19]
  414c24:	cmp	x21, x8
  414c28:	b.eq	414c38 <child_execute_job@@Base+0x398>  // b.none
  414c2c:	mov	w22, wzr
  414c30:	str	x21, [x20]
  414c34:	b	41497c <child_execute_job@@Base+0xdc>
  414c38:	mov	x0, x21
  414c3c:	bl	419e60 <xstrdup@@Base>
  414c40:	mov	w22, wzr
  414c44:	str	x0, [x20]
  414c48:	b	41497c <child_execute_job@@Base+0xdc>

0000000000414c4c <exec_command@@Base>:
  414c4c:	stp	x29, x30, [sp, #-48]!
  414c50:	stp	x22, x21, [sp, #16]
  414c54:	stp	x20, x19, [sp, #32]
  414c58:	mov	x29, sp
  414c5c:	mov	x19, x1
  414c60:	mov	x20, x0
  414c64:	bl	41a204 <child_access@@Base>
  414c68:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  414c6c:	str	x19, [x8, #2520]
  414c70:	ldr	x0, [x20]
  414c74:	mov	x1, x20
  414c78:	bl	406c00 <execvp@plt>
  414c7c:	bl	406e70 <__errno_location@plt>
  414c80:	ldr	w21, [x0]
  414c84:	mov	x19, x0
  414c88:	cmp	w21, #0x8
  414c8c:	b.eq	414cc0 <exec_command@@Base+0x74>  // b.none
  414c90:	cmp	w21, #0x2
  414c94:	b.ne	414dac <exec_command@@Base+0x160>  // b.any
  414c98:	ldr	x0, [x20]
  414c9c:	bl	406750 <strlen@plt>
  414ca0:	mov	x21, x0
  414ca4:	mov	w0, #0x2                   	// #2
  414ca8:	bl	406b00 <strerror@plt>
  414cac:	bl	406750 <strlen@plt>
  414cb0:	ldr	x20, [x20]
  414cb4:	ldr	w8, [x19]
  414cb8:	add	x19, x0, x21
  414cbc:	b	414dd0 <exec_command@@Base+0x184>
  414cc0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  414cc4:	add	x0, x0, #0xbbb
  414cc8:	bl	406e80 <getenv@plt>
  414ccc:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  414cd0:	ldr	x10, [x10, #2336]
  414cd4:	mov	x8, xzr
  414cd8:	mov	x9, xzr
  414cdc:	add	x11, x20, #0x8
  414ce0:	mov	x12, #0x100000000           	// #4294967296
  414ce4:	ldr	x13, [x11, x9, lsl #3]
  414ce8:	add	x9, x9, #0x1
  414cec:	add	x8, x8, x12
  414cf0:	cbnz	x13, 414ce4 <exec_command@@Base+0x98>
  414cf4:	cmp	x0, #0x0
  414cf8:	csel	x21, x10, x0, eq  // eq = none
  414cfc:	add	w10, w9, #0x2
  414d00:	lsl	x10, x10, #3
  414d04:	add	x10, x10, #0xf
  414d08:	mov	x11, sp
  414d0c:	and	x10, x10, #0xffffffff0
  414d10:	sub	x22, x11, x10
  414d14:	mov	sp, x22
  414d18:	mov	x11, #0x100000000           	// #4294967296
  414d1c:	ldr	x12, [x20]
  414d20:	add	x8, x8, x11
  414d24:	and	x10, x9, #0xffffffff
  414d28:	sub	w9, w9, #0x1
  414d2c:	asr	x8, x8, #32
  414d30:	sub	x11, x10, x9
  414d34:	sub	x8, x8, x9
  414d38:	add	x1, x20, x11, lsl #3
  414d3c:	add	x0, x22, x8, lsl #3
  414d40:	lsl	x2, x10, #3
  414d44:	stp	x21, x12, [x22]
  414d48:	bl	406710 <memcpy@plt>
  414d4c:	mov	x0, x21
  414d50:	mov	x1, x22
  414d54:	bl	406c00 <execvp@plt>
  414d58:	ldr	x0, [x22]
  414d5c:	bl	406750 <strlen@plt>
  414d60:	ldr	w8, [x19]
  414d64:	mov	x20, x0
  414d68:	mov	w0, w8
  414d6c:	bl	406b00 <strerror@plt>
  414d70:	bl	406750 <strlen@plt>
  414d74:	ldr	w8, [x19]
  414d78:	ldr	x21, [x22]
  414d7c:	add	x19, x0, x20
  414d80:	mov	w0, w8
  414d84:	bl	406b00 <strerror@plt>
  414d88:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  414d8c:	mov	x4, x0
  414d90:	add	x2, x2, #0xd0a
  414d94:	mov	x0, xzr
  414d98:	mov	x1, x19
  414d9c:	mov	x3, x21
  414da0:	bl	41ae34 <error@@Base>
  414da4:	mov	w0, #0x7f                  	// #127
  414da8:	bl	406730 <_exit@plt>
  414dac:	ldr	x0, [x20]
  414db0:	bl	406750 <strlen@plt>
  414db4:	mov	x22, x0
  414db8:	mov	w0, w21
  414dbc:	bl	406b00 <strerror@plt>
  414dc0:	bl	406750 <strlen@plt>
  414dc4:	ldr	x20, [x20]
  414dc8:	ldr	w8, [x19]
  414dcc:	add	x19, x0, x22
  414dd0:	mov	w0, w8
  414dd4:	bl	406b00 <strerror@plt>
  414dd8:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  414ddc:	mov	x4, x0
  414de0:	add	x2, x2, #0xd0a
  414de4:	mov	x0, xzr
  414de8:	mov	x1, x19
  414dec:	mov	x3, x20
  414df0:	bl	41ae34 <error@@Base>
  414df4:	mov	w0, #0x7f                  	// #127
  414df8:	bl	406730 <_exit@plt>

0000000000414dfc <construct_command_argv@@Base>:
  414dfc:	stp	x29, x30, [sp, #-80]!
  414e00:	stp	x24, x23, [sp, #32]
  414e04:	adrp	x24, 442000 <just_print_flag@@Base>
  414e08:	str	x25, [sp, #16]
  414e0c:	ldr	w25, [x24, #64]
  414e10:	stp	x22, x21, [sp, #48]
  414e14:	mov	x21, x0
  414e18:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  414e1c:	stp	x20, x19, [sp, #64]
  414e20:	mov	x20, x1
  414e24:	add	x0, x0, #0x314
  414e28:	mov	x1, x2
  414e2c:	mov	x29, sp
  414e30:	mov	x19, x2
  414e34:	str	wzr, [x24, #64]
  414e38:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  414e3c:	mov	x22, x0
  414e40:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  414e44:	add	x0, x0, #0x31d
  414e48:	mov	x1, x19
  414e4c:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  414e50:	mov	x23, x0
  414e54:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  414e58:	add	x0, x0, #0x32c
  414e5c:	mov	x1, x19
  414e60:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  414e64:	mov	x19, x0
  414e68:	mov	x0, x21
  414e6c:	mov	x1, x20
  414e70:	mov	x2, x22
  414e74:	mov	x3, x23
  414e78:	mov	x4, x19
  414e7c:	str	w25, [x24, #64]
  414e80:	bl	414ebc <construct_command_argv@@Base+0xc0>
  414e84:	mov	x20, x0
  414e88:	mov	x0, x22
  414e8c:	bl	406c60 <free@plt>
  414e90:	mov	x0, x23
  414e94:	bl	406c60 <free@plt>
  414e98:	mov	x0, x19
  414e9c:	bl	406c60 <free@plt>
  414ea0:	mov	x0, x20
  414ea4:	ldp	x20, x19, [sp, #64]
  414ea8:	ldp	x22, x21, [sp, #48]
  414eac:	ldp	x24, x23, [sp, #32]
  414eb0:	ldr	x25, [sp, #16]
  414eb4:	ldp	x29, x30, [sp], #80
  414eb8:	ret
  414ebc:	sub	sp, sp, #0xa0
  414ec0:	stp	x24, x23, [sp, #112]
  414ec4:	stp	x22, x21, [sp, #128]
  414ec8:	mov	x23, x4
  414ecc:	mov	x22, x2
  414ed0:	stp	x29, x30, [sp, #64]
  414ed4:	stp	x28, x27, [sp, #80]
  414ed8:	stp	x26, x25, [sp, #96]
  414edc:	stp	x20, x19, [sp, #144]
  414ee0:	add	x29, sp, #0x40
  414ee4:	cbz	x1, 414eec <construct_command_argv@@Base+0xf0>
  414ee8:	str	xzr, [x1]
  414eec:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  414ef0:	sub	x19, x0, #0x1
  414ef4:	add	x28, x28, #0xcf0
  414ef8:	ldrb	w8, [x19, #1]!
  414efc:	ldrh	w9, [x28, x8, lsl #1]
  414f00:	tbnz	w9, #1, 414ef8 <construct_command_argv@@Base+0xfc>
  414f04:	cbz	w8, 415860 <construct_command_argv@@Base+0xa64>
  414f08:	adrp	x8, 442000 <just_print_flag@@Base>
  414f0c:	ldr	w8, [x8, #8]
  414f10:	adrp	x11, 43e000 <memcpy@GLIBC_2.17>
  414f14:	stur	x1, [x29, #-24]
  414f18:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  414f1c:	adrp	x10, 428000 <_IO_stdin_used@@Base+0x680>
  414f20:	ldr	x1, [x11, #2336]
  414f24:	add	x9, x9, #0x54a
  414f28:	add	x10, x10, #0x98a
  414f2c:	cmp	w8, #0x0
  414f30:	csel	x8, x10, x9, eq  // eq = none
  414f34:	cmp	x3, #0x0
  414f38:	csel	x21, x8, x3, eq  // eq = none
  414f3c:	adrp	x26, 442000 <just_print_flag@@Base>
  414f40:	cbz	x22, 414f58 <construct_command_argv@@Base+0x15c>
  414f44:	mov	x0, x22
  414f48:	bl	406c10 <strcmp@plt>
  414f4c:	cbnz	w0, 41539c <construct_command_argv@@Base+0x5a0>
  414f50:	cbnz	x23, 414f68 <construct_command_argv@@Base+0x16c>
  414f54:	b	414f84 <construct_command_argv@@Base+0x188>
  414f58:	mov	x22, x1
  414f5c:	cbnz	x23, 414f68 <construct_command_argv@@Base+0x16c>
  414f60:	b	414f84 <construct_command_argv@@Base+0x188>
  414f64:	add	x23, x23, #0x1
  414f68:	ldrb	w8, [x23]
  414f6c:	sub	w9, w8, #0x9
  414f70:	cmp	w9, #0x2
  414f74:	b.cc	414f64 <construct_command_argv@@Base+0x168>  // b.lo, b.ul, b.last
  414f78:	cmp	w8, #0x20
  414f7c:	b.eq	414f64 <construct_command_argv@@Base+0x168>  // b.none
  414f80:	cbnz	w8, 41539c <construct_command_argv@@Base+0x5a0>
  414f84:	ldrb	w8, [x21]
  414f88:	cmp	w8, #0x2d
  414f8c:	b.ne	41539c <construct_command_argv@@Base+0x5a0>  // b.any
  414f90:	ldrb	w8, [x21, #1]
  414f94:	cmp	w8, #0x65
  414f98:	b.eq	414fb0 <construct_command_argv@@Base+0x1b4>  // b.none
  414f9c:	cmp	w8, #0x63
  414fa0:	b.ne	41539c <construct_command_argv@@Base+0x5a0>  // b.any
  414fa4:	ldrb	w8, [x21, #2]
  414fa8:	cbnz	w8, 41539c <construct_command_argv@@Base+0x5a0>
  414fac:	b	414fc4 <construct_command_argv@@Base+0x1c8>
  414fb0:	ldrb	w8, [x21, #2]
  414fb4:	cmp	w8, #0x63
  414fb8:	b.ne	41539c <construct_command_argv@@Base+0x5a0>  // b.any
  414fbc:	ldrb	w8, [x21, #3]
  414fc0:	cbnz	w8, 41539c <construct_command_argv@@Base+0x5a0>
  414fc4:	mov	x0, x19
  414fc8:	bl	406750 <strlen@plt>
  414fcc:	add	x24, x0, #0x1
  414fd0:	lsl	x0, x24, #3
  414fd4:	bl	419e14 <xmalloc@@Base>
  414fd8:	mov	x23, x0
  414fdc:	mov	x0, x24
  414fe0:	bl	419e14 <xmalloc@@Base>
  414fe4:	str	x0, [x23]
  414fe8:	ldrb	w24, [x19]
  414fec:	str	x0, [sp, #8]
  414ff0:	cbz	w24, 4152e4 <construct_command_argv@@Base+0x4e8>
  414ff4:	mov	w27, wzr
  414ff8:	mov	w8, #0x1                   	// #1
  414ffc:	mov	x11, x0
  415000:	mov	x25, x19
  415004:	str	xzr, [sp, #32]
  415008:	str	wzr, [sp, #24]
  41500c:	str	xzr, [sp, #16]
  415010:	b	41502c <construct_command_argv@@Base+0x230>
  415014:	strb	w24, [x11], #1
  415018:	mov	w27, w20
  41501c:	ldrb	w24, [x25, #1]!
  415020:	cmp	w27, #0x0
  415024:	cset	w8, eq  // eq = none
  415028:	cbz	w24, 415388 <construct_command_argv@@Base+0x58c>
  41502c:	mov	w20, w27
  415030:	and	w27, w24, #0xff
  415034:	tbz	w8, #0, 4150f8 <construct_command_argv@@Base+0x2fc>
  415038:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41503c:	mov	w2, #0x15                  	// #21
  415040:	add	x0, x0, #0x495
  415044:	mov	w1, w27
  415048:	mov	x20, x11
  41504c:	bl	406d60 <memchr@plt>
  415050:	cbnz	x0, 41538c <construct_command_argv@@Base+0x590>
  415054:	and	w8, w24, #0xff
  415058:	mov	x11, x20
  41505c:	cmp	w8, #0xa
  415060:	b.ne	41506c <construct_command_argv@@Base+0x270>  // b.any
  415064:	ldr	w9, [x26, #60]
  415068:	cbnz	w9, 41538c <construct_command_argv@@Base+0x590>
  41506c:	sub	w9, w8, #0x9
  415070:	cmp	w9, #0x34
  415074:	b.hi	4151a8 <construct_command_argv@@Base+0x3ac>  // b.pmore
  415078:	adrp	x12, 429000 <_IO_stdin_used@@Base+0x1680>
  41507c:	add	x12, x12, #0xf90
  415080:	adr	x8, 41501c <construct_command_argv@@Base+0x220>
  415084:	ldrb	w10, [x12, x9]
  415088:	add	x8, x8, x10, lsl #2
  41508c:	br	x8
  415090:	strb	wzr, [x11], #1
  415094:	ldr	x8, [sp, #32]
  415098:	ldp	w10, w9, [sp, #16]
  41509c:	add	x8, x8, #0x1
  4150a0:	cmp	w10, #0x0
  4150a4:	str	x8, [sp]
  4150a8:	str	x11, [x23, x8, lsl #3]
  4150ac:	cset	w8, eq  // eq = none
  4150b0:	orr	w9, w9, w8
  4150b4:	str	w9, [sp, #20]
  4150b8:	cbz	w10, 4150c4 <construct_command_argv@@Base+0x2c8>
  4150bc:	ldr	w8, [sp, #20]
  4150c0:	cbz	w8, 41538c <construct_command_argv@@Base+0x590>
  4150c4:	ldr	x8, [sp, #32]
  4150c8:	cbz	x8, 415244 <construct_command_argv@@Base+0x448>
  4150cc:	sub	x25, x25, #0x1
  4150d0:	ldrb	w8, [x25, #2]
  4150d4:	add	x25, x25, #0x1
  4150d8:	ldrh	w8, [x28, x8, lsl #1]
  4150dc:	tbnz	w8, #1, 4150d0 <construct_command_argv@@Base+0x2d4>
  4150e0:	ldr	x8, [sp]
  4150e4:	mov	w27, wzr
  4150e8:	str	wzr, [sp, #16]
  4150ec:	str	wzr, [sp, #24]
  4150f0:	str	x8, [sp, #32]
  4150f4:	b	41501c <construct_command_argv@@Base+0x220>
  4150f8:	cmp	w20, w27
  4150fc:	b.ne	41511c <construct_command_argv@@Base+0x320>  // b.any
  415100:	ldr	x8, [x23]
  415104:	cmp	x11, x8
  415108:	b.eq	41514c <construct_command_argv@@Base+0x350>  // b.none
  41510c:	ldurb	w8, [x11, #-1]
  415110:	cbz	w8, 41514c <construct_command_argv@@Base+0x350>
  415114:	mov	w27, wzr
  415118:	b	41501c <construct_command_argv@@Base+0x220>
  41511c:	and	w8, w24, #0xff
  415120:	cmp	w8, #0x5c
  415124:	b.ne	41515c <construct_command_argv@@Base+0x360>  // b.any
  415128:	mov	x8, x25
  41512c:	ldrb	w9, [x8, #1]!
  415130:	cmp	w9, #0xa
  415134:	b.ne	415170 <construct_command_argv@@Base+0x374>  // b.any
  415138:	cmp	w20, #0x22
  41513c:	b.ne	4152b0 <construct_command_argv@@Base+0x4b4>  // b.any
  415140:	mov	w27, #0x22                  	// #34
  415144:	mov	x25, x8
  415148:	b	41501c <construct_command_argv@@Base+0x220>
  41514c:	mov	w8, #0x1                   	// #1
  415150:	mov	w27, wzr
  415154:	str	w8, [sp, #24]
  415158:	b	41501c <construct_command_argv@@Base+0x220>
  41515c:	ldur	x8, [x29, #-24]
  415160:	cbz	x8, 415170 <construct_command_argv@@Base+0x374>
  415164:	and	w8, w24, #0xff
  415168:	cmp	w8, #0xa
  41516c:	b.eq	415898 <construct_command_argv@@Base+0xa9c>  // b.none
  415170:	cmp	w20, #0x22
  415174:	b.ne	415014 <construct_command_argv@@Base+0x218>  // b.any
  415178:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41517c:	mov	w2, #0x4                   	// #4
  415180:	add	x0, x0, #0x54e
  415184:	mov	w1, w27
  415188:	mov	x27, x11
  41518c:	bl	406d60 <memchr@plt>
  415190:	mov	x11, x27
  415194:	cbz	x0, 415014 <construct_command_argv@@Base+0x218>
  415198:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41519c:	ldr	w8, [x8, #2344]
  4151a0:	cbz	w8, 415014 <construct_command_argv@@Base+0x218>
  4151a4:	b	41538c <construct_command_argv@@Base+0x590>
  4151a8:	cmp	w8, #0x5c
  4151ac:	b.ne	4151f4 <construct_command_argv@@Base+0x3f8>  // b.any
  4151b0:	mov	x8, x25
  4151b4:	ldrb	w9, [x8, #1]!
  4151b8:	cbz	w9, 415114 <construct_command_argv@@Base+0x318>
  4151bc:	cmp	w9, #0xa
  4151c0:	b.ne	4152d4 <construct_command_argv@@Base+0x4d8>  // b.any
  4151c4:	ldr	x9, [sp, #32]
  4151c8:	ldr	x9, [x23, x9, lsl #3]
  4151cc:	cmp	x11, x9
  4151d0:	b.eq	4151e0 <construct_command_argv@@Base+0x3e4>  // b.none
  4151d4:	mov	w27, wzr
  4151d8:	mov	x25, x8
  4151dc:	b	41501c <construct_command_argv@@Base+0x220>
  4151e0:	ldrb	w8, [x25, #2]
  4151e4:	add	x25, x25, #0x1
  4151e8:	ldrh	w8, [x28, x8, lsl #1]
  4151ec:	tbnz	w8, #1, 4151e0 <construct_command_argv@@Base+0x3e4>
  4151f0:	b	415114 <construct_command_argv@@Base+0x318>
  4151f4:	mov	w27, wzr
  4151f8:	strb	w24, [x11], #1
  4151fc:	b	41501c <construct_command_argv@@Base+0x220>
  415200:	ldr	w8, [sp, #20]
  415204:	cbnz	w8, 415214 <construct_command_argv@@Base+0x418>
  415208:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41520c:	ldr	w8, [x8, #2344]
  415210:	cbnz	w8, 41538c <construct_command_argv@@Base+0x590>
  415214:	mov	w8, #0x3d                  	// #61
  415218:	strb	w8, [x11], #1
  41521c:	mov	w8, #0x1                   	// #1
  415220:	mov	w27, wzr
  415224:	str	w8, [sp, #16]
  415228:	b	41501c <construct_command_argv@@Base+0x220>
  41522c:	ldur	x8, [x29, #-24]
  415230:	cbnz	x8, 4158a4 <construct_command_argv@@Base+0xaa8>
  415234:	mov	w8, #0xa                   	// #10
  415238:	mov	w27, wzr
  41523c:	strb	w8, [x11], #1
  415240:	b	41501c <construct_command_argv@@Base+0x220>
  415244:	ldr	x24, [x23]
  415248:	mov	w20, #0x8                   	// #8
  41524c:	add	x8, x24, #0x1
  415250:	str	x8, [sp, #32]
  415254:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  415258:	add	x8, x8, #0x456
  41525c:	b	415278 <construct_command_argv@@Base+0x47c>
  415260:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  415264:	add	x8, x8, #0xfc8
  415268:	ldr	x8, [x8, x20]
  41526c:	add	x20, x20, #0x8
  415270:	cmp	x20, #0x130
  415274:	b.eq	4150cc <construct_command_argv@@Base+0x2d0>  // b.none
  415278:	cmp	x8, x24
  41527c:	b.eq	41538c <construct_command_argv@@Base+0x590>  // b.none
  415280:	ldrb	w9, [x8]
  415284:	ldrb	w10, [x24]
  415288:	cmp	w9, w10
  41528c:	b.ne	415260 <construct_command_argv@@Base+0x464>  // b.any
  415290:	cbz	w9, 41538c <construct_command_argv@@Base+0x590>
  415294:	ldr	x1, [sp, #32]
  415298:	add	x0, x8, #0x1
  41529c:	mov	x27, x11
  4152a0:	bl	406c10 <strcmp@plt>
  4152a4:	mov	x11, x27
  4152a8:	cbnz	w0, 415260 <construct_command_argv@@Base+0x464>
  4152ac:	b	41538c <construct_command_argv@@Base+0x590>
  4152b0:	mov	w9, #0x5c                  	// #92
  4152b4:	strb	w9, [x11]
  4152b8:	ldrb	w9, [x8]
  4152bc:	add	x10, x11, #0x2
  4152c0:	mov	x25, x8
  4152c4:	mov	w27, w20
  4152c8:	strb	w9, [x11, #1]
  4152cc:	mov	x11, x10
  4152d0:	b	41501c <construct_command_argv@@Base+0x220>
  4152d4:	mov	w27, wzr
  4152d8:	strb	w9, [x11], #1
  4152dc:	mov	x25, x8
  4152e0:	b	41501c <construct_command_argv@@Base+0x220>
  4152e4:	str	wzr, [sp, #24]
  4152e8:	str	xzr, [sp, #32]
  4152ec:	mov	x11, x0
  4152f0:	ldr	x9, [sp, #32]
  4152f4:	strb	wzr, [x11]
  4152f8:	ldr	w10, [sp, #24]
  4152fc:	ldr	x8, [x23, x9, lsl #3]
  415300:	ldrb	w8, [x8]
  415304:	orr	w8, w10, w8
  415308:	cmp	w8, #0x0
  41530c:	cinc	x8, x9, ne  // ne = any
  415310:	str	xzr, [x23, x8, lsl #3]
  415314:	ldr	x20, [x23]
  415318:	cmp	x8, #0x1
  41531c:	b.ne	41537c <construct_command_argv@@Base+0x580>  // b.any
  415320:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  415324:	adrp	x27, 429000 <_IO_stdin_used@@Base+0x1680>
  415328:	add	x25, x20, #0x1
  41532c:	add	x8, x8, #0x456
  415330:	mov	w24, #0x8                   	// #8
  415334:	add	x27, x27, #0xfc8
  415338:	b	41534c <construct_command_argv@@Base+0x550>
  41533c:	ldr	x8, [x27, x24]
  415340:	add	x24, x24, #0x8
  415344:	cmp	x24, #0x130
  415348:	b.eq	415380 <construct_command_argv@@Base+0x584>  // b.none
  41534c:	cmp	x8, x20
  415350:	b.eq	41538c <construct_command_argv@@Base+0x590>  // b.none
  415354:	ldrb	w9, [x8]
  415358:	ldrb	w10, [x20]
  41535c:	cmp	w9, w10
  415360:	b.ne	41533c <construct_command_argv@@Base+0x540>  // b.any
  415364:	cbz	w9, 41538c <construct_command_argv@@Base+0x590>
  415368:	add	x0, x8, #0x1
  41536c:	mov	x1, x25
  415370:	bl	406c10 <strcmp@plt>
  415374:	cbnz	w0, 41533c <construct_command_argv@@Base+0x540>
  415378:	b	41538c <construct_command_argv@@Base+0x590>
  41537c:	cbz	x20, 415888 <construct_command_argv@@Base+0xa8c>
  415380:	mov	x0, x23
  415384:	b	415868 <construct_command_argv@@Base+0xa6c>
  415388:	cbz	w27, 4152f0 <construct_command_argv@@Base+0x4f4>
  41538c:	ldr	x0, [sp, #8]
  415390:	bl	406c60 <free@plt>
  415394:	mov	x0, x23
  415398:	bl	406c60 <free@plt>
  41539c:	mov	x0, x22
  4153a0:	bl	406750 <strlen@plt>
  4153a4:	mov	x20, x0
  4153a8:	mov	x0, x19
  4153ac:	bl	406750 <strlen@plt>
  4153b0:	mov	x25, x0
  4153b4:	cbz	x21, 415490 <construct_command_argv@@Base+0x694>
  4153b8:	mov	x0, x21
  4153bc:	bl	406750 <strlen@plt>
  4153c0:	mov	x23, x0
  4153c4:	ldr	w8, [x26, #60]
  4153c8:	cbz	w8, 41549c <construct_command_argv@@Base+0x6a0>
  4153cc:	mov	x0, x22
  4153d0:	bl	412ad8 <is_bourne_compatible_shell@@Base>
  4153d4:	cbz	w0, 415574 <construct_command_argv@@Base+0x778>
  4153d8:	ldrb	w12, [x19]
  4153dc:	mov	x8, x19
  4153e0:	cbz	w12, 415570 <construct_command_argv@@Base+0x774>
  4153e4:	mov	w10, #0x5                   	// #5
  4153e8:	mov	w9, #0x1                   	// #1
  4153ec:	movk	w10, #0x20, lsl #16
  4153f0:	mov	x8, x19
  4153f4:	mov	x11, x19
  4153f8:	b	41540c <construct_command_argv@@Base+0x610>
  4153fc:	lsl	w14, w9, w14
  415400:	tst	w14, w10
  415404:	b.eq	415428 <construct_command_argv@@Base+0x62c>  // b.none
  415408:	ldrb	w12, [x11, #1]!
  41540c:	and	x13, x12, #0xff
  415410:	ldrh	w13, [x28, x13, lsl #1]
  415414:	tbnz	w13, #1, 415408 <construct_command_argv@@Base+0x60c>
  415418:	and	w13, w12, #0xff
  41541c:	sub	w14, w13, #0x2b
  415420:	cmp	w14, #0x15
  415424:	b.ls	4153fc <construct_command_argv@@Base+0x600>  // b.plast
  415428:	cbz	w13, 415484 <construct_command_argv@@Base+0x688>
  41542c:	mov	x13, xzr
  415430:	mov	w16, wzr
  415434:	b	415450 <construct_command_argv@@Base+0x654>
  415438:	cmp	w16, #0x0
  41543c:	cset	w15, eq  // eq = none
  415440:	ldrb	w12, [x14, #1]
  415444:	add	x13, x13, #0x1
  415448:	mov	w16, w15
  41544c:	cbz	w12, 41556c <construct_command_argv@@Base+0x770>
  415450:	add	x14, x11, x13
  415454:	strb	w12, [x8, x13]
  415458:	ldrb	w12, [x14]
  41545c:	cmp	w12, #0x5c
  415460:	b.eq	415438 <construct_command_argv@@Base+0x63c>  // b.none
  415464:	mov	w15, wzr
  415468:	cbnz	w16, 415440 <construct_command_argv@@Base+0x644>
  41546c:	cmp	w12, #0xa
  415470:	b.ne	415440 <construct_command_argv@@Base+0x644>  // b.any
  415474:	add	x11, x11, x13
  415478:	ldrb	w12, [x11, #1]!
  41547c:	add	x8, x8, x13
  415480:	add	x8, x8, #0x1
  415484:	tst	w12, #0xff
  415488:	b.ne	41540c <construct_command_argv@@Base+0x610>  // b.any
  41548c:	b	415570 <construct_command_argv@@Base+0x774>
  415490:	mov	x23, xzr
  415494:	ldr	w8, [x26, #60]
  415498:	cbnz	w8, 4153cc <construct_command_argv@@Base+0x5d0>
  41549c:	mov	w8, #0x1                   	// #1
  4154a0:	bfi	x8, x20, #1, #63
  4154a4:	add	x8, x8, x25, lsl #1
  4154a8:	add	x8, x8, x23
  4154ac:	add	x0, x8, #0x2
  4154b0:	str	x20, [sp, #32]
  4154b4:	bl	419e14 <xmalloc@@Base>
  4154b8:	ldrb	w24, [x22]
  4154bc:	mov	x25, x0
  4154c0:	mov	x26, x0
  4154c4:	cbz	w24, 41550c <construct_command_argv@@Base+0x710>
  4154c8:	add	x20, x22, #0x1
  4154cc:	adrp	x22, 42a000 <_IO_stdin_used@@Base+0x2680>
  4154d0:	add	x22, x22, #0x495
  4154d4:	mov	w27, #0x5c                  	// #92
  4154d8:	mov	x26, x25
  4154dc:	b	4154ec <construct_command_argv@@Base+0x6f0>
  4154e0:	strb	w24, [x26], #1
  4154e4:	ldrb	w24, [x20], #1
  4154e8:	cbz	w24, 41550c <construct_command_argv@@Base+0x710>
  4154ec:	and	w1, w24, #0xff
  4154f0:	mov	w2, #0x15                  	// #21
  4154f4:	mov	x0, x22
  4154f8:	bl	406d60 <memchr@plt>
  4154fc:	cbz	x0, 4154e0 <construct_command_argv@@Base+0x6e4>
  415500:	strb	w27, [x26], #1
  415504:	ldurb	w24, [x20, #-1]
  415508:	b	4154e0 <construct_command_argv@@Base+0x6e4>
  41550c:	mov	w20, #0x20                  	// #32
  415510:	strb	w20, [x26], #1
  415514:	cbz	x21, 415528 <construct_command_argv@@Base+0x72c>
  415518:	mov	x0, x26
  41551c:	mov	x1, x21
  415520:	mov	x2, x23
  415524:	bl	406710 <memcpy@plt>
  415528:	add	x27, x26, x23
  41552c:	mov	x22, x27
  415530:	strb	w20, [x22], #1
  415534:	ldrb	w26, [x19]
  415538:	cbz	w26, 415804 <construct_command_argv@@Base+0xa08>
  41553c:	ldur	x10, [x29, #-24]
  415540:	cbz	x10, 415704 <construct_command_argv@@Base+0x908>
  415544:	adrp	x12, 42a000 <_IO_stdin_used@@Base+0x2680>
  415548:	mov	x14, #0x21                  	// #33
  41554c:	mov	w21, #0x5c                  	// #92
  415550:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  415554:	mov	w11, #0xa                   	// #10
  415558:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41555c:	add	x12, x12, #0x495
  415560:	mov	w13, #0x1                   	// #1
  415564:	movk	x14, #0x400, lsl #48
  415568:	b	415674 <construct_command_argv@@Base+0x878>
  41556c:	add	x8, x8, x13
  415570:	strb	wzr, [x8]
  415574:	lsl	x8, x23, #2
  415578:	and	x8, x8, #0xfffffffffffffff8
  41557c:	add	x0, x8, #0x20
  415580:	bl	419e14 <xmalloc@@Base>
  415584:	mov	x23, x0
  415588:	mov	x0, x22
  41558c:	bl	419e60 <xstrdup@@Base>
  415590:	str	x0, [x23]
  415594:	cbz	x21, 4155d8 <construct_command_argv@@Base+0x7dc>
  415598:	sub	x0, x29, #0x8
  41559c:	sub	x1, x29, #0x10
  4155a0:	stur	x21, [x29, #-8]
  4155a4:	bl	419efc <find_next_token@@Base>
  4155a8:	mov	w20, #0x1                   	// #1
  4155ac:	cbz	x0, 4155ec <construct_command_argv@@Base+0x7f0>
  4155b0:	ldur	x1, [x29, #-16]
  4155b4:	mov	x21, x20
  4155b8:	bl	419e7c <xstrndup@@Base>
  4155bc:	str	x0, [x23, x21, lsl #3]
  4155c0:	sub	x0, x29, #0x8
  4155c4:	sub	x1, x29, #0x10
  4155c8:	add	x20, x20, #0x1
  4155cc:	bl	419efc <find_next_token@@Base>
  4155d0:	cbnz	x0, 4155b0 <construct_command_argv@@Base+0x7b4>
  4155d4:	b	4155ec <construct_command_argv@@Base+0x7f0>
  4155d8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4155dc:	add	x0, x0, #0x3a9
  4155e0:	bl	419e60 <xstrdup@@Base>
  4155e4:	str	x0, [x23, #8]
  4155e8:	mov	w20, #0x2                   	// #2
  4155ec:	add	w8, w20, #0x1
  4155f0:	str	x19, [x23, w20, uxtw #3]
  4155f4:	str	xzr, [x23, w8, uxtw #3]
  4155f8:	mov	x0, x23
  4155fc:	b	415868 <construct_command_argv@@Base+0xa6c>
  415600:	and	x8, x26, #0xff
  415604:	ldrh	w8, [x28, x8, lsl #1]
  415608:	tst	w8, #0x6
  41560c:	b.eq	415634 <construct_command_argv@@Base+0x838>  // b.none
  415610:	strb	w21, [x22]
  415614:	ldrb	w26, [x19]
  415618:	add	x22, x27, #0x2
  41561c:	strb	w26, [x22]
  415620:	ldrb	w26, [x19, #1]!
  415624:	mov	x27, x22
  415628:	add	x22, x22, #0x1
  41562c:	cbnz	w26, 415674 <construct_command_argv@@Base+0x878>
  415630:	b	415804 <construct_command_argv@@Base+0xa08>
  415634:	mov	w2, #0x15                  	// #21
  415638:	mov	x0, x12
  41563c:	str	x23, [sp, #24]
  415640:	mov	x23, x25
  415644:	mov	x25, x12
  415648:	bl	406d60 <memchr@plt>
  41564c:	mov	x12, x25
  415650:	mov	x25, x23
  415654:	ldr	x23, [sp, #24]
  415658:	ldur	x10, [x29, #-24]
  41565c:	mov	x14, #0x21                  	// #33
  415660:	movk	x14, #0x400, lsl #48
  415664:	mov	w13, #0x1                   	// #1
  415668:	mov	w11, #0xa                   	// #10
  41566c:	cbnz	x0, 415610 <construct_command_argv@@Base+0x814>
  415670:	b	41561c <construct_command_argv@@Base+0x820>
  415674:	and	w8, w26, #0xff
  415678:	cmp	w8, #0x5c
  41567c:	b.eq	41568c <construct_command_argv@@Base+0x890>  // b.none
  415680:	cmp	w8, #0xa
  415684:	b.ne	4156b0 <construct_command_argv@@Base+0x8b4>  // b.any
  415688:	b	415800 <construct_command_argv@@Base+0xa04>
  41568c:	mov	x8, x19
  415690:	ldrb	w9, [x8, #1]!
  415694:	cmp	w9, #0xa
  415698:	b.ne	4156b0 <construct_command_argv@@Base+0x8b4>  // b.any
  41569c:	strb	w21, [x22]
  4156a0:	ldr	w9, [x24, #3032]
  4156a4:	cbz	w9, 4156e0 <construct_command_argv@@Base+0x8e4>
  4156a8:	add	x22, x27, #0x2
  4156ac:	b	4156e8 <construct_command_argv@@Base+0x8ec>
  4156b0:	ldr	w8, [x20, #2344]
  4156b4:	cbz	w8, 41561c <construct_command_argv@@Base+0x820>
  4156b8:	ldr	w8, [x24, #3032]
  4156bc:	cbnz	w8, 41561c <construct_command_argv@@Base+0x820>
  4156c0:	and	w1, w26, #0xff
  4156c4:	sub	w8, w1, #0x22
  4156c8:	cmp	w8, #0x3a
  4156cc:	b.hi	415600 <construct_command_argv@@Base+0x804>  // b.pmore
  4156d0:	lsl	x8, x13, x8
  4156d4:	tst	x8, x14
  4156d8:	b.ne	415610 <construct_command_argv@@Base+0x814>  // b.any
  4156dc:	b	415600 <construct_command_argv@@Base+0x804>
  4156e0:	add	x22, x27, #0x3
  4156e4:	strb	w21, [x27, #2]
  4156e8:	mov	x19, x8
  4156ec:	strb	w11, [x22]
  4156f0:	ldrb	w26, [x19, #1]!
  4156f4:	mov	x27, x22
  4156f8:	add	x22, x22, #0x1
  4156fc:	cbnz	w26, 415674 <construct_command_argv@@Base+0x878>
  415700:	b	415804 <construct_command_argv@@Base+0xa08>
  415704:	mov	x12, #0x21                  	// #33
  415708:	mov	w21, #0x5c                  	// #92
  41570c:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  415710:	mov	w10, #0xa                   	// #10
  415714:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  415718:	mov	w11, #0x1                   	// #1
  41571c:	movk	x12, #0x400, lsl #48
  415720:	b	415754 <construct_command_argv@@Base+0x958>
  415724:	and	x8, x26, #0xff
  415728:	ldrh	w8, [x28, x8, lsl #1]
  41572c:	tst	w8, #0x6
  415730:	b.eq	4157d8 <construct_command_argv@@Base+0x9dc>  // b.none
  415734:	strb	w21, [x22]
  415738:	ldrb	w26, [x19]
  41573c:	add	x22, x27, #0x2
  415740:	strb	w26, [x22]
  415744:	ldrb	w26, [x19, #1]!
  415748:	mov	x27, x22
  41574c:	add	x22, x22, #0x1
  415750:	cbz	w26, 415804 <construct_command_argv@@Base+0xa08>
  415754:	and	w8, w26, #0xff
  415758:	cmp	w8, #0x5c
  41575c:	b.ne	415784 <construct_command_argv@@Base+0x988>  // b.any
  415760:	mov	x8, x19
  415764:	ldrb	w9, [x8, #1]!
  415768:	cmp	w9, #0xa
  41576c:	b.ne	415784 <construct_command_argv@@Base+0x988>  // b.any
  415770:	strb	w21, [x22]
  415774:	ldr	w9, [x24, #3032]
  415778:	cbz	w9, 4157b4 <construct_command_argv@@Base+0x9b8>
  41577c:	add	x22, x27, #0x2
  415780:	b	4157bc <construct_command_argv@@Base+0x9c0>
  415784:	ldr	w8, [x20, #2344]
  415788:	cbz	w8, 415740 <construct_command_argv@@Base+0x944>
  41578c:	ldr	w8, [x24, #3032]
  415790:	cbnz	w8, 415740 <construct_command_argv@@Base+0x944>
  415794:	and	w1, w26, #0xff
  415798:	sub	w8, w1, #0x22
  41579c:	cmp	w8, #0x3a
  4157a0:	b.hi	415724 <construct_command_argv@@Base+0x928>  // b.pmore
  4157a4:	lsl	x8, x11, x8
  4157a8:	tst	x8, x12
  4157ac:	b.ne	415734 <construct_command_argv@@Base+0x938>  // b.any
  4157b0:	b	415724 <construct_command_argv@@Base+0x928>
  4157b4:	add	x22, x27, #0x3
  4157b8:	strb	w21, [x27, #2]
  4157bc:	strb	w10, [x22]
  4157c0:	mov	x19, x8
  4157c4:	ldrb	w26, [x19, #1]!
  4157c8:	mov	x27, x22
  4157cc:	add	x22, x22, #0x1
  4157d0:	cbnz	w26, 415754 <construct_command_argv@@Base+0x958>
  4157d4:	b	415804 <construct_command_argv@@Base+0xa08>
  4157d8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4157dc:	mov	w2, #0x15                  	// #21
  4157e0:	add	x0, x0, #0x495
  4157e4:	bl	406d60 <memchr@plt>
  4157e8:	mov	x12, #0x21                  	// #33
  4157ec:	movk	x12, #0x400, lsl #48
  4157f0:	mov	w11, #0x1                   	// #1
  4157f4:	mov	w10, #0xa                   	// #10
  4157f8:	cbnz	x0, 415734 <construct_command_argv@@Base+0x938>
  4157fc:	b	415740 <construct_command_argv@@Base+0x944>
  415800:	str	x19, [x10]
  415804:	ldr	x8, [sp, #32]
  415808:	add	x8, x25, x8
  41580c:	add	x8, x8, x23
  415810:	add	x8, x8, #0x2
  415814:	cmp	x22, x8
  415818:	b.eq	415858 <construct_command_argv@@Base+0xa5c>  // b.none
  41581c:	strb	wzr, [x22]
  415820:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  415824:	ldr	w8, [x8, #2344]
  415828:	cbz	w8, 4158ac <construct_command_argv@@Base+0xab0>
  41582c:	mov	x0, x25
  415830:	mov	x1, xzr
  415834:	mov	x2, xzr
  415838:	mov	x3, xzr
  41583c:	mov	x4, xzr
  415840:	bl	414ebc <construct_command_argv@@Base+0xc0>
  415844:	mov	x19, x0
  415848:	mov	x0, x25
  41584c:	bl	406c60 <free@plt>
  415850:	mov	x0, x19
  415854:	b	415868 <construct_command_argv@@Base+0xa6c>
  415858:	mov	x0, x25
  41585c:	bl	406c60 <free@plt>
  415860:	mov	x23, xzr
  415864:	mov	x0, xzr
  415868:	ldp	x20, x19, [sp, #144]
  41586c:	ldp	x22, x21, [sp, #128]
  415870:	ldp	x24, x23, [sp, #112]
  415874:	ldp	x26, x25, [sp, #96]
  415878:	ldp	x28, x27, [sp, #80]
  41587c:	ldp	x29, x30, [sp, #64]
  415880:	add	sp, sp, #0xa0
  415884:	ret
  415888:	ldr	x0, [sp, #8]
  41588c:	bl	406c60 <free@plt>
  415890:	mov	x0, x23
  415894:	b	41585c <construct_command_argv@@Base+0xa60>
  415898:	ldur	x8, [x29, #-24]
  41589c:	str	x25, [x8]
  4158a0:	b	41538c <construct_command_argv@@Base+0x590>
  4158a4:	str	x25, [x8]
  4158a8:	b	4152f0 <construct_command_argv@@Base+0x4f4>
  4158ac:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4158b0:	add	x1, x1, #0x552
  4158b4:	mov	w2, #0x5                   	// #5
  4158b8:	mov	x0, xzr
  4158bc:	bl	406dc0 <dcgettext@plt>
  4158c0:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  4158c4:	mov	x2, x0
  4158c8:	add	x3, x3, #0x590
  4158cc:	mov	w1, #0x1d                  	// #29
  4158d0:	mov	w4, #0xe16                 	// #3606
  4158d4:	mov	x0, xzr
  4158d8:	bl	41aff0 <fatal@@Base>

00000000004158dc <load_file@@Base>:
  4158dc:	stp	x29, x30, [sp, #-96]!
  4158e0:	stp	x26, x25, [sp, #32]
  4158e4:	stp	x24, x23, [sp, #48]
  4158e8:	stp	x22, x21, [sp, #64]
  4158ec:	stp	x20, x19, [sp, #80]
  4158f0:	ldr	x21, [x1]
  4158f4:	mov	x19, x0
  4158f8:	str	x27, [sp, #16]
  4158fc:	mov	x29, sp
  415900:	mov	x0, x21
  415904:	mov	w22, w2
  415908:	mov	x20, x1
  41590c:	bl	406750 <strlen@plt>
  415910:	add	x9, x0, #0x1a
  415914:	mov	x8, sp
  415918:	and	x9, x9, #0xfffffffffffffff0
  41591c:	mov	x25, x0
  415920:	sub	x24, x8, x9
  415924:	mov	sp, x24
  415928:	mov	w1, #0x28                  	// #40
  41592c:	mov	x0, x21
  415930:	bl	406c80 <strchr@plt>
  415934:	mov	x23, x0
  415938:	cbz	x0, 4159a8 <load_file@@Base+0xcc>
  41593c:	add	x26, x23, #0x1
  415940:	mov	w1, #0x29                  	// #41
  415944:	mov	x0, x26
  415948:	bl	406c80 <strchr@plt>
  41594c:	cbz	x0, 41595c <load_file@@Base+0x80>
  415950:	ldrb	w8, [x0, #1]
  415954:	mov	x27, x0
  415958:	cbz	w8, 415964 <load_file@@Base+0x88>
  41595c:	mov	x23, xzr
  415960:	b	4159a8 <load_file@@Base+0xcc>
  415964:	cmp	x26, x27
  415968:	b.eq	415d90 <load_file@@Base+0x4b4>  // b.none
  41596c:	sub	x25, x23, x21
  415970:	mov	x0, x24
  415974:	mov	x1, x21
  415978:	mov	x2, x25
  41597c:	bl	406710 <memcpy@plt>
  415980:	add	x23, x24, x25
  415984:	strb	wzr, [x23], #1
  415988:	sub	x21, x27, x26
  41598c:	mov	x0, x23
  415990:	mov	x1, x26
  415994:	mov	x2, x21
  415998:	str	x24, [x20]
  41599c:	bl	406710 <memcpy@plt>
  4159a0:	strb	wzr, [x23, x21]
  4159a4:	mov	x21, x24
  4159a8:	mov	x0, x21
  4159ac:	bl	423690 <strcache_add@@Base>
  4159b0:	str	x0, [x20]
  4159b4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4159b8:	add	x0, x0, #0x5b9
  4159bc:	mov	x1, xzr
  4159c0:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  4159c4:	ldr	x26, [x20]
  4159c8:	mov	x21, x0
  4159cc:	mov	x1, x26
  4159d0:	bl	406db0 <strstr@plt>
  4159d4:	cbz	x0, 4159f8 <load_file@@Base+0x11c>
  4159d8:	cmp	x0, x21
  4159dc:	b.eq	4159ec <load_file@@Base+0x110>  // b.none
  4159e0:	ldurb	w8, [x0, #-1]
  4159e4:	cmp	w8, #0x20
  4159e8:	b.ne	4159f8 <load_file@@Base+0x11c>  // b.any
  4159ec:	ldrb	w8, [x0, x25]
  4159f0:	tst	w8, #0xffffffdf
  4159f4:	b.eq	415b40 <load_file@@Base+0x264>  // b.none
  4159f8:	cbz	x23, 415a1c <load_file@@Base+0x140>
  4159fc:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  415a00:	ldrb	w8, [x27, #3236]
  415a04:	tbnz	w8, #1, 415aa4 <load_file@@Base+0x1c8>
  415a08:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  415a0c:	ldr	x0, [x25, #3224]
  415a10:	ldr	x24, [x20]
  415a14:	cbnz	x0, 415af0 <load_file@@Base+0x214>
  415a18:	b	415ae0 <load_file@@Base+0x204>
  415a1c:	mov	w1, #0x2f                  	// #47
  415a20:	mov	x0, x26
  415a24:	bl	406b30 <strrchr@plt>
  415a28:	cmp	x0, #0x0
  415a2c:	csinc	x23, x26, x0, eq  // eq = none
  415a30:	bl	406c20 <__ctype_b_loc@plt>
  415a34:	ldrb	w8, [x23]
  415a38:	cmp	x8, #0x5f
  415a3c:	b.eq	415a50 <load_file@@Base+0x174>  // b.none
  415a40:	ldr	x9, [x0]
  415a44:	ldrh	w10, [x9, x8, lsl #1]
  415a48:	mov	x9, x24
  415a4c:	tbz	w10, #3, 415a78 <load_file@@Base+0x19c>
  415a50:	add	x10, x23, #0x1
  415a54:	mov	x9, x24
  415a58:	strb	w8, [x9], #1
  415a5c:	ldr	x11, [x0]
  415a60:	ldrb	w8, [x10], #1
  415a64:	ldrh	w11, [x11, x8, lsl #1]
  415a68:	cmp	x8, #0x5f
  415a6c:	and	w11, w11, #0x8
  415a70:	b.eq	415a58 <load_file@@Base+0x17c>  // b.none
  415a74:	cbnz	w11, 415a58 <load_file@@Base+0x17c>
  415a78:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  415a7c:	add	x8, x8, #0x5c4
  415a80:	ldr	x8, [x8]
  415a84:	mov	w10, #0x7574                	// #30068
  415a88:	movk	w10, #0x70, lsl #16
  415a8c:	mov	x23, x24
  415a90:	stur	w10, [x9, #7]
  415a94:	str	x8, [x9]
  415a98:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  415a9c:	ldrb	w8, [x27, #3236]
  415aa0:	tbz	w8, #1, 415a08 <load_file@@Base+0x12c>
  415aa4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415aa8:	add	x1, x1, #0x5cf
  415aac:	mov	w2, #0x5                   	// #5
  415ab0:	mov	x0, xzr
  415ab4:	bl	406dc0 <dcgettext@plt>
  415ab8:	ldr	x2, [x20]
  415abc:	mov	x1, x23
  415ac0:	bl	406e60 <printf@plt>
  415ac4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  415ac8:	ldr	x0, [x8, #2504]
  415acc:	bl	406cf0 <fflush@plt>
  415ad0:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  415ad4:	ldr	x0, [x25, #3224]
  415ad8:	ldr	x24, [x20]
  415adc:	cbnz	x0, 415af0 <load_file@@Base+0x214>
  415ae0:	mov	w1, #0x102                 	// #258
  415ae4:	bl	4068e0 <dlopen@plt>
  415ae8:	str	x0, [x25, #3224]
  415aec:	cbz	x0, 415cc8 <load_file@@Base+0x3ec>
  415af0:	mov	x1, x23
  415af4:	bl	4069b0 <dlsym@plt>
  415af8:	mov	x26, x0
  415afc:	cbnz	x0, 415bbc <load_file@@Base+0x2e0>
  415b00:	mov	w1, #0x2f                  	// #47
  415b04:	mov	x0, x24
  415b08:	bl	406c80 <strchr@plt>
  415b0c:	cbz	x0, 415b48 <load_file@@Base+0x26c>
  415b10:	mov	w1, #0x101                 	// #257
  415b14:	mov	x0, x24
  415b18:	bl	4068e0 <dlopen@plt>
  415b1c:	mov	x25, x0
  415b20:	cbnz	x0, 415b6c <load_file@@Base+0x290>
  415b24:	bl	4069a0 <dlerror@plt>
  415b28:	mov	x20, x0
  415b2c:	cbz	w22, 415c80 <load_file@@Base+0x3a4>
  415b30:	ldrb	w8, [x27, #3236]
  415b34:	tbnz	w8, #0, 415ca4 <load_file@@Base+0x3c8>
  415b38:	mov	w22, wzr
  415b3c:	b	415c5c <load_file@@Base+0x380>
  415b40:	mov	w22, #0x1                   	// #1
  415b44:	b	415c54 <load_file@@Base+0x378>
  415b48:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  415b4c:	add	x1, x1, #0x326
  415b50:	mov	w0, #0x2                   	// #2
  415b54:	mov	x2, x24
  415b58:	bl	419c18 <concat@@Base>
  415b5c:	mov	w1, #0x101                 	// #257
  415b60:	bl	4068e0 <dlopen@plt>
  415b64:	mov	x25, x0
  415b68:	cbz	x0, 415b10 <load_file@@Base+0x234>
  415b6c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415b70:	add	x1, x1, #0x623
  415b74:	mov	x0, x25
  415b78:	bl	4069b0 <dlsym@plt>
  415b7c:	cbz	x0, 415d00 <load_file@@Base+0x424>
  415b80:	mov	x0, x25
  415b84:	mov	x1, x23
  415b88:	bl	4069b0 <dlsym@plt>
  415b8c:	cbz	x0, 415d34 <load_file@@Base+0x458>
  415b90:	mov	x26, x0
  415b94:	mov	w0, #0x18                  	// #24
  415b98:	bl	419e14 <xmalloc@@Base>
  415b9c:	mov	x22, x0
  415ba0:	mov	x0, x24
  415ba4:	bl	419e60 <xstrdup@@Base>
  415ba8:	stp	x0, x25, [x22, #8]
  415bac:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  415bb0:	ldr	x9, [x8, #3216]
  415bb4:	str	x9, [x22]
  415bb8:	str	x22, [x8, #3216]
  415bbc:	mov	x0, x19
  415bc0:	blr	x26
  415bc4:	mov	w22, w0
  415bc8:	cmp	w0, #0x1
  415bcc:	b.lt	415c54 <load_file@@Base+0x378>  // b.tstop
  415bd0:	mov	x0, x21
  415bd4:	bl	406750 <strlen@plt>
  415bd8:	ldr	x20, [x20]
  415bdc:	mov	x24, x0
  415be0:	mov	x0, x20
  415be4:	bl	406750 <strlen@plt>
  415be8:	add	x8, x24, x0
  415bec:	add	x8, x8, #0x11
  415bf0:	and	x8, x8, #0xfffffffffffffff0
  415bf4:	mov	x9, sp
  415bf8:	sub	x23, x9, x8
  415bfc:	mov	sp, x23
  415c00:	cbz	x24, 415c24 <load_file@@Base+0x348>
  415c04:	mov	x0, x23
  415c08:	mov	x1, x21
  415c0c:	mov	x2, x24
  415c10:	bl	406710 <memcpy@plt>
  415c14:	add	x8, x24, #0x1
  415c18:	mov	w9, #0x20                  	// #32
  415c1c:	strb	w9, [x23, x24]
  415c20:	b	415c28 <load_file@@Base+0x34c>
  415c24:	mov	x8, xzr
  415c28:	add	x0, x23, x8
  415c2c:	mov	x1, x20
  415c30:	bl	406d00 <strcpy@plt>
  415c34:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415c38:	add	x1, x1, #0x5ea
  415c3c:	mov	w4, #0x1                   	// #1
  415c40:	mov	x0, x19
  415c44:	mov	x2, x23
  415c48:	mov	w3, wzr
  415c4c:	mov	w5, wzr
  415c50:	bl	4246c0 <do_variable_definition@@Base>
  415c54:	mov	x0, x21
  415c58:	bl	406c60 <free@plt>
  415c5c:	mov	w0, w22
  415c60:	mov	sp, x29
  415c64:	ldp	x20, x19, [sp, #80]
  415c68:	ldp	x22, x21, [sp, #64]
  415c6c:	ldp	x24, x23, [sp, #48]
  415c70:	ldp	x26, x25, [sp, #32]
  415c74:	ldr	x27, [sp, #16]
  415c78:	ldp	x29, x30, [sp], #96
  415c7c:	ret
  415c80:	mov	x0, x20
  415c84:	bl	406750 <strlen@plt>
  415c88:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  415c8c:	mov	x1, x0
  415c90:	add	x2, x2, #0x5b6
  415c94:	mov	x0, x19
  415c98:	mov	x3, x20
  415c9c:	bl	41ae34 <error@@Base>
  415ca0:	b	415c5c <load_file@@Base+0x380>
  415ca4:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  415ca8:	add	x0, x0, #0x5b6
  415cac:	mov	x1, x20
  415cb0:	bl	406e60 <printf@plt>
  415cb4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  415cb8:	ldr	x0, [x8, #2504]
  415cbc:	bl	406cf0 <fflush@plt>
  415cc0:	mov	w22, wzr
  415cc4:	b	415c5c <load_file@@Base+0x380>
  415cc8:	bl	4069a0 <dlerror@plt>
  415ccc:	mov	x20, x0
  415cd0:	bl	406750 <strlen@plt>
  415cd4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415cd8:	mov	x21, x0
  415cdc:	add	x1, x1, #0x5fc
  415ce0:	mov	w2, #0x5                   	// #5
  415ce4:	mov	x0, xzr
  415ce8:	bl	406dc0 <dcgettext@plt>
  415cec:	mov	x2, x0
  415cf0:	mov	x0, x19
  415cf4:	mov	x1, x21
  415cf8:	mov	x3, x20
  415cfc:	bl	41aff0 <fatal@@Base>
  415d00:	mov	x0, x24
  415d04:	bl	406750 <strlen@plt>
  415d08:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415d0c:	mov	x20, x0
  415d10:	add	x1, x1, #0x63c
  415d14:	mov	w2, #0x5                   	// #5
  415d18:	mov	x0, xzr
  415d1c:	bl	406dc0 <dcgettext@plt>
  415d20:	mov	x2, x0
  415d24:	mov	x0, x19
  415d28:	mov	x1, x20
  415d2c:	mov	x3, x24
  415d30:	bl	41aff0 <fatal@@Base>
  415d34:	bl	4069a0 <dlerror@plt>
  415d38:	mov	x20, x0
  415d3c:	mov	x0, x23
  415d40:	bl	406750 <strlen@plt>
  415d44:	mov	x21, x0
  415d48:	mov	x0, x24
  415d4c:	bl	406750 <strlen@plt>
  415d50:	add	x21, x0, x21
  415d54:	mov	x0, x20
  415d58:	bl	406750 <strlen@plt>
  415d5c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415d60:	add	x21, x21, x0
  415d64:	add	x1, x1, #0x672
  415d68:	mov	w2, #0x5                   	// #5
  415d6c:	mov	x0, xzr
  415d70:	bl	406dc0 <dcgettext@plt>
  415d74:	mov	x2, x0
  415d78:	mov	x0, x19
  415d7c:	mov	x1, x21
  415d80:	mov	x3, x23
  415d84:	mov	x4, x24
  415d88:	mov	x5, x20
  415d8c:	bl	41aff0 <fatal@@Base>
  415d90:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  415d94:	add	x1, x1, #0x59a
  415d98:	mov	w2, #0x5                   	// #5
  415d9c:	mov	x0, xzr
  415da0:	bl	406dc0 <dcgettext@plt>
  415da4:	ldr	x3, [x20]
  415da8:	mov	x2, x0
  415dac:	mov	x0, x19
  415db0:	mov	x1, x25
  415db4:	bl	41aff0 <fatal@@Base>

0000000000415db8 <unload_file@@Base>:
  415db8:	stp	x29, x30, [sp, #-48]!
  415dbc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  415dc0:	str	x21, [sp, #16]
  415dc4:	ldr	x21, [x8, #3216]
  415dc8:	stp	x20, x19, [sp, #32]
  415dcc:	mov	x29, sp
  415dd0:	cbz	x21, 415e40 <unload_file@@Base+0x88>
  415dd4:	mov	x19, x0
  415dd8:	add	x20, x0, #0x1
  415ddc:	b	415df0 <unload_file@@Base+0x38>
  415de0:	ldr	x0, [x21, #16]
  415de4:	cbnz	x0, 415e24 <unload_file@@Base+0x6c>
  415de8:	ldr	x21, [x21]
  415dec:	cbz	x21, 415e40 <unload_file@@Base+0x88>
  415df0:	ldr	x8, [x21, #8]
  415df4:	cmp	x8, x19
  415df8:	b.eq	415de0 <unload_file@@Base+0x28>  // b.none
  415dfc:	ldrb	w9, [x8]
  415e00:	ldrb	w10, [x19]
  415e04:	cmp	w9, w10
  415e08:	b.ne	415de8 <unload_file@@Base+0x30>  // b.any
  415e0c:	cbz	w9, 415de0 <unload_file@@Base+0x28>
  415e10:	add	x0, x8, #0x1
  415e14:	mov	x1, x20
  415e18:	bl	406c10 <strcmp@plt>
  415e1c:	cbnz	w0, 415de8 <unload_file@@Base+0x30>
  415e20:	b	415de0 <unload_file@@Base+0x28>
  415e24:	bl	406880 <dlclose@plt>
  415e28:	cbz	w0, 415e3c <unload_file@@Base+0x84>
  415e2c:	ldr	x1, [x21, #8]
  415e30:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  415e34:	add	x0, x0, #0x5f2
  415e38:	bl	41b1c0 <perror_with_name@@Base>
  415e3c:	str	xzr, [x21, #16]
  415e40:	ldp	x20, x19, [sp, #32]
  415e44:	ldr	x21, [sp, #16]
  415e48:	ldp	x29, x30, [sp], #48
  415e4c:	ret

0000000000415e50 <gmk_alloc@@Base>:
  415e50:	mov	w0, w0
  415e54:	b	419e14 <xmalloc@@Base>

0000000000415e58 <gmk_free@@Base>:
  415e58:	b	406c60 <free@plt>

0000000000415e5c <gmk_eval@@Base>:
  415e5c:	sub	sp, sp, #0x50
  415e60:	stp	x20, x19, [sp, #64]
  415e64:	mov	x19, x0
  415e68:	stp	x29, x30, [sp, #48]
  415e6c:	add	x29, sp, #0x30
  415e70:	cbz	x1, 415e88 <gmk_eval@@Base+0x2c>
  415e74:	ldr	q0, [x1]
  415e78:	mov	x20, sp
  415e7c:	str	xzr, [sp, #16]
  415e80:	str	q0, [sp]
  415e84:	b	415e8c <gmk_eval@@Base+0x30>
  415e88:	mov	x20, xzr
  415e8c:	sub	x0, x29, #0x8
  415e90:	sub	x1, x29, #0x10
  415e94:	bl	40a878 <install_variable_buffer@@Base>
  415e98:	mov	x0, x19
  415e9c:	bl	419e60 <xstrdup@@Base>
  415ea0:	mov	x1, x20
  415ea4:	mov	x19, x0
  415ea8:	bl	41ba40 <eval_buffer@@Base>
  415eac:	mov	x0, x19
  415eb0:	bl	406c60 <free@plt>
  415eb4:	ldp	x1, x0, [x29, #-16]
  415eb8:	bl	40a8c4 <restore_variable_buffer@@Base>
  415ebc:	ldp	x20, x19, [sp, #64]
  415ec0:	ldp	x29, x30, [sp, #48]
  415ec4:	add	sp, sp, #0x50
  415ec8:	ret

0000000000415ecc <gmk_expand@@Base>:
  415ecc:	mov	x1, xzr
  415ed0:	b	409f88 <allocated_variable_expand_for_file@@Base>

0000000000415ed4 <gmk_add_function@@Base>:
  415ed4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  415ed8:	ldr	x8, [x8, #1536]
  415edc:	mov	x5, x1
  415ee0:	mov	x1, x0
  415ee4:	mov	x0, x8
  415ee8:	b	40de14 <define_new_function@@Base>

0000000000415eec <main@@Base>:
  415eec:	stp	x29, x30, [sp, #-96]!
  415ef0:	stp	x28, x27, [sp, #16]
  415ef4:	stp	x26, x25, [sp, #32]
  415ef8:	stp	x24, x23, [sp, #48]
  415efc:	stp	x22, x21, [sp, #64]
  415f00:	stp	x20, x19, [sp, #80]
  415f04:	mov	x29, sp
  415f08:	sub	sp, sp, #0x1, lsl #12
  415f0c:	sub	sp, sp, #0x8d0
  415f10:	mov	x19, sp
  415f14:	str	x0, [x19, #24]
  415f18:	adrp	x0, 442000 <just_print_flag@@Base>
  415f1c:	add	x0, x0, #0x30
  415f20:	mov	x25, x2
  415f24:	mov	x24, x1
  415f28:	bl	41a798 <output_init@@Base>
  415f2c:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  415f30:	add	x22, x22, #0xcf0
  415f34:	mov	w9, #0x20                  	// #32
  415f38:	mov	w8, #0x8                   	// #8
  415f3c:	strh	w9, [x22, #122]
  415f40:	mov	w9, #0x800080              	// #8388736
  415f44:	movk	w8, #0x4000, lsl #16
  415f48:	str	w9, [x22, #80]
  415f4c:	mov	w9, #0x80                  	// #128
  415f50:	stur	w8, [x22, #70]
  415f54:	mov	w8, #0x40                  	// #64
  415f58:	strh	w9, [x22, #250]
  415f5c:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  415f60:	movk	w8, #0x10, lsl #16
  415f64:	ldr	d0, [x9, #1688]
  415f68:	str	w8, [x22, #116]
  415f6c:	mov	w8, #0x80                  	// #128
  415f70:	movk	w8, #0x100, lsl #16
  415f74:	mov	w20, #0x1                   	// #1
  415f78:	stur	w8, [x22, #246]
  415f7c:	mov	w8, #0x2000                	// #8192
  415f80:	mov	w21, #0x2                   	// #2
  415f84:	strh	w20, [x22]
  415f88:	strh	w8, [x22, #190]
  415f8c:	strh	w21, [x22, #64]
  415f90:	strh	w21, [x22, #18]
  415f94:	str	d0, [x22, #88]
  415f98:	bl	406c20 <__ctype_b_loc@plt>
  415f9c:	ldr	x8, [x0]
  415fa0:	mov	x11, x22
  415fa4:	b	415fc4 <main@@Base+0xd8>
  415fa8:	add	x9, x11, x20, lsl #1
  415fac:	orr	w10, w10, #0x4
  415fb0:	strh	w10, [x9]
  415fb4:	add	x21, x21, #0x2
  415fb8:	cmp	x21, #0x200
  415fbc:	add	x20, x20, #0x1
  415fc0:	b.eq	415fe8 <main@@Base+0xfc>  // b.none
  415fc4:	ldrh	w9, [x8, x21]
  415fc8:	tbz	w9, #13, 415fd4 <main@@Base+0xe8>
  415fcc:	ldrh	w10, [x11, x21]
  415fd0:	tbz	w10, #1, 415fa8 <main@@Base+0xbc>
  415fd4:	tbz	w9, #3, 415fb4 <main@@Base+0xc8>
  415fd8:	add	x9, x11, x21
  415fdc:	ldrh	w10, [x9]
  415fe0:	orr	w10, w10, #0x2000
  415fe4:	b	415fb0 <main@@Base+0xc4>
  415fe8:	adrp	x23, 42a000 <_IO_stdin_used@@Base+0x2680>
  415fec:	add	x23, x23, #0x3a9
  415ff0:	mov	w0, #0x6                   	// #6
  415ff4:	mov	x1, x23
  415ff8:	bl	406ef0 <setlocale@plt>
  415ffc:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x3680>
  416000:	add	x22, x22, #0x6bc
  416004:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  416008:	add	x1, x1, #0x108
  41600c:	mov	x0, x22
  416010:	bl	406a00 <bindtextdomain@plt>
  416014:	mov	x0, x22
  416018:	bl	406be0 <textdomain@plt>
  41601c:	adrp	x0, 442000 <just_print_flag@@Base>
  416020:	add	x0, x0, #0x48
  416024:	bl	4069d0 <sigemptyset@plt>
  416028:	add	x9, x19, #0x828
  41602c:	adrp	x21, 408000 <set_file_variables@@Base+0x42c>
  416030:	add	x20, x9, #0x8
  416034:	add	x21, x21, #0x764
  416038:	mov	w8, #0x10000000            	// #268435456
  41603c:	mov	x0, x20
  416040:	str	x21, [x19, #2088]
  416044:	str	w8, [x19, #2224]
  416048:	bl	4069d0 <sigemptyset@plt>
  41604c:	mov	w1, #0x1                   	// #1
  416050:	mov	x0, x20
  416054:	bl	406e40 <sigaddset@plt>
  416058:	add	x1, x19, #0x828
  41605c:	add	x2, x19, #0x28
  416060:	mov	w0, #0x1                   	// #1
  416064:	bl	406b20 <sigaction@plt>
  416068:	cbnz	w0, 4160b4 <main@@Base+0x1c8>
  41606c:	ldr	x8, [x19, #40]
  416070:	cmp	x8, #0x1
  416074:	b.ne	4160b4 <main@@Base+0x1c8>  // b.any
  416078:	add	x10, x19, #0x828
  41607c:	add	x20, x10, #0x8
  416080:	mov	w9, #0x10000000            	// #268435456
  416084:	mov	x0, x20
  416088:	str	x8, [x19, #2088]
  41608c:	str	w9, [x19, #2224]
  416090:	bl	4069d0 <sigemptyset@plt>
  416094:	mov	w1, #0x1                   	// #1
  416098:	mov	x0, x20
  41609c:	bl	406e40 <sigaddset@plt>
  4160a0:	add	x1, x19, #0x828
  4160a4:	add	x2, x19, #0x28
  4160a8:	mov	w0, #0x1                   	// #1
  4160ac:	bl	406b20 <sigaction@plt>
  4160b0:	b	4160c4 <main@@Base+0x1d8>
  4160b4:	adrp	x0, 442000 <just_print_flag@@Base>
  4160b8:	add	x0, x0, #0x48
  4160bc:	mov	w1, #0x1                   	// #1
  4160c0:	bl	406e40 <sigaddset@plt>
  4160c4:	add	x9, x19, #0x828
  4160c8:	add	x20, x9, #0x8
  4160cc:	mov	w8, #0x10000000            	// #268435456
  4160d0:	mov	x0, x20
  4160d4:	str	x21, [x19, #2088]
  4160d8:	str	w8, [x19, #2224]
  4160dc:	bl	4069d0 <sigemptyset@plt>
  4160e0:	mov	w1, #0x3                   	// #3
  4160e4:	mov	x0, x20
  4160e8:	bl	406e40 <sigaddset@plt>
  4160ec:	add	x1, x19, #0x828
  4160f0:	add	x2, x19, #0x28
  4160f4:	mov	w0, #0x3                   	// #3
  4160f8:	bl	406b20 <sigaction@plt>
  4160fc:	cbnz	w0, 416148 <main@@Base+0x25c>
  416100:	ldr	x8, [x19, #40]
  416104:	cmp	x8, #0x1
  416108:	b.ne	416148 <main@@Base+0x25c>  // b.any
  41610c:	add	x10, x19, #0x828
  416110:	add	x20, x10, #0x8
  416114:	mov	w9, #0x10000000            	// #268435456
  416118:	mov	x0, x20
  41611c:	str	x8, [x19, #2088]
  416120:	str	w9, [x19, #2224]
  416124:	bl	4069d0 <sigemptyset@plt>
  416128:	mov	w1, #0x3                   	// #3
  41612c:	mov	x0, x20
  416130:	bl	406e40 <sigaddset@plt>
  416134:	add	x1, x19, #0x828
  416138:	add	x2, x19, #0x28
  41613c:	mov	w0, #0x3                   	// #3
  416140:	bl	406b20 <sigaction@plt>
  416144:	b	416158 <main@@Base+0x26c>
  416148:	adrp	x0, 442000 <just_print_flag@@Base>
  41614c:	add	x0, x0, #0x48
  416150:	mov	w1, #0x3                   	// #3
  416154:	bl	406e40 <sigaddset@plt>
  416158:	add	x9, x19, #0x828
  41615c:	add	x20, x9, #0x8
  416160:	mov	w8, #0x10000000            	// #268435456
  416164:	mov	x0, x20
  416168:	str	x21, [x19, #2088]
  41616c:	str	w8, [x19, #2224]
  416170:	bl	4069d0 <sigemptyset@plt>
  416174:	mov	w1, #0x2                   	// #2
  416178:	mov	x0, x20
  41617c:	bl	406e40 <sigaddset@plt>
  416180:	add	x1, x19, #0x828
  416184:	add	x2, x19, #0x28
  416188:	mov	w0, #0x2                   	// #2
  41618c:	bl	406b20 <sigaction@plt>
  416190:	cbnz	w0, 4161dc <main@@Base+0x2f0>
  416194:	ldr	x8, [x19, #40]
  416198:	cmp	x8, #0x1
  41619c:	b.ne	4161dc <main@@Base+0x2f0>  // b.any
  4161a0:	add	x10, x19, #0x828
  4161a4:	add	x20, x10, #0x8
  4161a8:	mov	w9, #0x10000000            	// #268435456
  4161ac:	mov	x0, x20
  4161b0:	str	x8, [x19, #2088]
  4161b4:	str	w9, [x19, #2224]
  4161b8:	bl	4069d0 <sigemptyset@plt>
  4161bc:	mov	w1, #0x2                   	// #2
  4161c0:	mov	x0, x20
  4161c4:	bl	406e40 <sigaddset@plt>
  4161c8:	add	x1, x19, #0x828
  4161cc:	add	x2, x19, #0x28
  4161d0:	mov	w0, #0x2                   	// #2
  4161d4:	bl	406b20 <sigaction@plt>
  4161d8:	b	4161ec <main@@Base+0x300>
  4161dc:	adrp	x0, 442000 <just_print_flag@@Base>
  4161e0:	add	x0, x0, #0x48
  4161e4:	mov	w1, #0x2                   	// #2
  4161e8:	bl	406e40 <sigaddset@plt>
  4161ec:	add	x9, x19, #0x828
  4161f0:	add	x20, x9, #0x8
  4161f4:	mov	w8, #0x10000000            	// #268435456
  4161f8:	mov	x0, x20
  4161fc:	str	x21, [x19, #2088]
  416200:	str	w8, [x19, #2224]
  416204:	bl	4069d0 <sigemptyset@plt>
  416208:	mov	w1, #0xf                   	// #15
  41620c:	mov	x0, x20
  416210:	bl	406e40 <sigaddset@plt>
  416214:	add	x1, x19, #0x828
  416218:	add	x2, x19, #0x28
  41621c:	mov	w0, #0xf                   	// #15
  416220:	bl	406b20 <sigaction@plt>
  416224:	cbnz	w0, 416270 <main@@Base+0x384>
  416228:	ldr	x8, [x19, #40]
  41622c:	cmp	x8, #0x1
  416230:	b.ne	416270 <main@@Base+0x384>  // b.any
  416234:	add	x10, x19, #0x828
  416238:	add	x20, x10, #0x8
  41623c:	mov	w9, #0x10000000            	// #268435456
  416240:	mov	x0, x20
  416244:	str	x8, [x19, #2088]
  416248:	str	w9, [x19, #2224]
  41624c:	bl	4069d0 <sigemptyset@plt>
  416250:	mov	w1, #0xf                   	// #15
  416254:	mov	x0, x20
  416258:	bl	406e40 <sigaddset@plt>
  41625c:	add	x1, x19, #0x828
  416260:	add	x2, x19, #0x28
  416264:	mov	w0, #0xf                   	// #15
  416268:	bl	406b20 <sigaction@plt>
  41626c:	b	416280 <main@@Base+0x394>
  416270:	adrp	x0, 442000 <just_print_flag@@Base>
  416274:	add	x0, x0, #0x48
  416278:	mov	w1, #0xf                   	// #15
  41627c:	bl	406e40 <sigaddset@plt>
  416280:	add	x9, x19, #0x828
  416284:	add	x20, x9, #0x8
  416288:	mov	w8, #0x10000000            	// #268435456
  41628c:	mov	x0, x20
  416290:	str	x21, [x19, #2088]
  416294:	str	w8, [x19, #2224]
  416298:	bl	4069d0 <sigemptyset@plt>
  41629c:	mov	w1, #0x18                  	// #24
  4162a0:	mov	x0, x20
  4162a4:	bl	406e40 <sigaddset@plt>
  4162a8:	add	x1, x19, #0x828
  4162ac:	add	x2, x19, #0x28
  4162b0:	mov	w0, #0x18                  	// #24
  4162b4:	bl	406b20 <sigaction@plt>
  4162b8:	cbnz	w0, 416304 <main@@Base+0x418>
  4162bc:	ldr	x8, [x19, #40]
  4162c0:	cmp	x8, #0x1
  4162c4:	b.ne	416304 <main@@Base+0x418>  // b.any
  4162c8:	add	x10, x19, #0x828
  4162cc:	add	x20, x10, #0x8
  4162d0:	mov	w9, #0x10000000            	// #268435456
  4162d4:	mov	x0, x20
  4162d8:	str	x8, [x19, #2088]
  4162dc:	str	w9, [x19, #2224]
  4162e0:	bl	4069d0 <sigemptyset@plt>
  4162e4:	mov	w1, #0x18                  	// #24
  4162e8:	mov	x0, x20
  4162ec:	bl	406e40 <sigaddset@plt>
  4162f0:	add	x1, x19, #0x828
  4162f4:	add	x2, x19, #0x28
  4162f8:	mov	w0, #0x18                  	// #24
  4162fc:	bl	406b20 <sigaction@plt>
  416300:	b	416314 <main@@Base+0x428>
  416304:	adrp	x0, 442000 <just_print_flag@@Base>
  416308:	add	x0, x0, #0x48
  41630c:	mov	w1, #0x18                  	// #24
  416310:	bl	406e40 <sigaddset@plt>
  416314:	add	x9, x19, #0x828
  416318:	add	x20, x9, #0x8
  41631c:	mov	w8, #0x10000000            	// #268435456
  416320:	mov	x0, x20
  416324:	str	x21, [x19, #2088]
  416328:	str	w8, [x19, #2224]
  41632c:	bl	4069d0 <sigemptyset@plt>
  416330:	mov	w1, #0x19                  	// #25
  416334:	mov	x0, x20
  416338:	bl	406e40 <sigaddset@plt>
  41633c:	add	x1, x19, #0x828
  416340:	add	x2, x19, #0x28
  416344:	mov	w0, #0x19                  	// #25
  416348:	bl	406b20 <sigaction@plt>
  41634c:	cbnz	w0, 416398 <main@@Base+0x4ac>
  416350:	ldr	x8, [x19, #40]
  416354:	cmp	x8, #0x1
  416358:	b.ne	416398 <main@@Base+0x4ac>  // b.any
  41635c:	add	x10, x19, #0x828
  416360:	add	x20, x10, #0x8
  416364:	mov	w9, #0x10000000            	// #268435456
  416368:	mov	x0, x20
  41636c:	str	x8, [x19, #2088]
  416370:	str	w9, [x19, #2224]
  416374:	bl	4069d0 <sigemptyset@plt>
  416378:	mov	w1, #0x19                  	// #25
  41637c:	mov	x0, x20
  416380:	bl	406e40 <sigaddset@plt>
  416384:	add	x1, x19, #0x828
  416388:	add	x2, x19, #0x28
  41638c:	mov	w0, #0x19                  	// #25
  416390:	bl	406b20 <sigaction@plt>
  416394:	b	4163a8 <main@@Base+0x4bc>
  416398:	adrp	x0, 442000 <just_print_flag@@Base>
  41639c:	add	x0, x0, #0x48
  4163a0:	mov	w1, #0x19                  	// #25
  4163a4:	bl	406e40 <sigaddset@plt>
  4163a8:	add	x9, x19, #0x828
  4163ac:	add	x20, x9, #0x8
  4163b0:	mov	w8, #0x10000000            	// #268435456
  4163b4:	mov	x0, x20
  4163b8:	str	xzr, [x19, #2088]
  4163bc:	str	w8, [x19, #2224]
  4163c0:	bl	4069d0 <sigemptyset@plt>
  4163c4:	mov	w1, #0x11                  	// #17
  4163c8:	mov	x0, x20
  4163cc:	bl	406e40 <sigaddset@plt>
  4163d0:	add	x1, x19, #0x828
  4163d4:	add	x2, x19, #0x28
  4163d8:	mov	w0, #0x11                  	// #17
  4163dc:	bl	406b20 <sigaction@plt>
  4163e0:	mov	x0, xzr
  4163e4:	bl	41a798 <output_init@@Base>
  4163e8:	ldr	x0, [x24]
  4163ec:	cbz	x0, 416414 <main@@Base+0x528>
  4163f0:	ldrb	w8, [x0]
  4163f4:	adrp	x20, 442000 <just_print_flag@@Base>
  4163f8:	cbz	w8, 416428 <main@@Base+0x53c>
  4163fc:	mov	w1, #0x2f                  	// #47
  416400:	bl	406b30 <strrchr@plt>
  416404:	str	x0, [x20, #16]
  416408:	cbz	x0, 416430 <main@@Base+0x544>
  41640c:	add	x8, x0, #0x1
  416410:	b	416434 <main@@Base+0x548>
  416414:	mov	x0, x23
  416418:	str	x23, [x24]
  41641c:	ldrb	w8, [x0]
  416420:	adrp	x20, 442000 <just_print_flag@@Base>
  416424:	cbnz	w8, 4163fc <main@@Base+0x510>
  416428:	str	x22, [x20, #16]
  41642c:	b	416438 <main@@Base+0x54c>
  416430:	ldr	x8, [x24]
  416434:	str	x8, [x20, #16]
  416438:	bl	41a1fc <user_access@@Base>
  41643c:	bl	423ce8 <init_hash_global_variable_set@@Base>
  416440:	bl	423974 <strcache_init@@Base>
  416444:	bl	40ccfc <init_hash_files@@Base>
  416448:	bl	409c08 <hash_init_directories@@Base>
  41644c:	bl	40dfd0 <hash_init_function_table@@Base>
  416450:	add	x0, x19, #0x828
  416454:	mov	w1, #0x1000                	// #4096
  416458:	bl	406740 <getcwd@plt>
  41645c:	cbz	x0, 41646c <main@@Base+0x580>
  416460:	add	x0, x19, #0x828
  416464:	bl	419e60 <xstrdup@@Base>
  416468:	b	416488 <main@@Base+0x59c>
  41646c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416470:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  416474:	add	x0, x0, #0x11a
  416478:	add	x1, x1, #0x3a9
  41647c:	bl	41b1c0 <perror_with_name@@Base>
  416480:	mov	x0, xzr
  416484:	strb	wzr, [x19, #2088]
  416488:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41648c:	ldr	x8, [x21, #2424]
  416490:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  416494:	str	x0, [x9, #4024]
  416498:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  41649c:	ldr	x5, [x8, #8]
  4164a0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4164a4:	add	x20, x20, #0x3a9
  4164a8:	add	x0, x0, #0x121
  4164ac:	mov	w1, #0xa                   	// #10
  4164b0:	mov	x2, x20
  4164b4:	mov	w3, wzr
  4164b8:	mov	w4, wzr
  4164bc:	mov	x6, xzr
  4164c0:	str	x24, [x19, #16]
  4164c4:	bl	423d70 <define_variable_in_set@@Base>
  4164c8:	ldr	w8, [x0, #44]
  4164cc:	mov	w1, #0xd                   	// #13
  4164d0:	mov	x2, x20
  4164d4:	mov	w3, wzr
  4164d8:	orr	w8, w8, #0x10
  4164dc:	str	w8, [x0, #44]
  4164e0:	ldr	x8, [x21, #2424]
  4164e4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4164e8:	add	x0, x0, #0x12c
  4164ec:	mov	w4, wzr
  4164f0:	ldr	x5, [x8, #8]
  4164f4:	mov	x6, xzr
  4164f8:	bl	423d70 <define_variable_in_set@@Base>
  4164fc:	ldr	w8, [x0, #44]
  416500:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x680>
  416504:	add	x2, x2, #0x98a
  416508:	mov	w1, #0xb                   	// #11
  41650c:	orr	w8, w8, #0x10
  416510:	str	w8, [x0, #44]
  416514:	ldr	x8, [x21, #2424]
  416518:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41651c:	add	x0, x0, #0x13a
  416520:	mov	w3, wzr
  416524:	ldr	x5, [x8, #8]
  416528:	mov	w4, wzr
  41652c:	mov	x6, xzr
  416530:	bl	423d70 <define_variable_in_set@@Base>
  416534:	ldr	x8, [x21, #2424]
  416538:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41653c:	add	x0, x0, #0x5ea
  416540:	mov	w1, #0x7                   	// #7
  416544:	ldr	x5, [x8, #8]
  416548:	mov	x2, x20
  41654c:	mov	w3, wzr
  416550:	mov	w4, wzr
  416554:	mov	x6, xzr
  416558:	bl	423d70 <define_variable_in_set@@Base>
  41655c:	ldr	x8, [x21, #2424]
  416560:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416564:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x3680>
  416568:	add	x0, x0, #0x1f3
  41656c:	ldr	x5, [x8, #8]
  416570:	add	x2, x2, #0x146
  416574:	mov	w1, #0x9                   	// #9
  416578:	mov	w3, wzr
  41657c:	mov	w4, wzr
  416580:	mov	x6, xzr
  416584:	bl	423d70 <define_variable_in_set@@Base>
  416588:	mov	x0, xzr
  41658c:	bl	410558 <guile_gmake_setup@@Base>
  416590:	ldr	x21, [x25]
  416594:	cbz	x21, 4166e4 <main@@Base+0x7f8>
  416598:	adrp	x26, 42c000 <_IO_stdin_used@@Base+0x4680>
  41659c:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  4165a0:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  4165a4:	mov	w22, wzr
  4165a8:	add	x26, x26, #0xbbb
  4165ac:	add	x23, x23, #0xfc8
  4165b0:	mov	w27, #0x5                   	// #5
  4165b4:	mov	x24, x25
  4165b8:	add	x10, x10, #0xcf0
  4165bc:	str	xzr, [x19, #32]
  4165c0:	b	41660c <main@@Base+0x720>
  4165c4:	mov	x0, x26
  4165c8:	bl	419e60 <xstrdup@@Base>
  4165cc:	str	x0, [x23]
  4165d0:	mov	x0, x28
  4165d4:	str	w27, [x23, #40]
  4165d8:	bl	419e60 <xstrdup@@Base>
  4165dc:	mov	w24, #0x1                   	// #1
  4165e0:	str	x0, [x23, #8]
  4165e4:	ldr	w8, [x20, #44]
  4165e8:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  4165ec:	add	x10, x10, #0xcf0
  4165f0:	and	w8, w8, #0x9fffffff
  4165f4:	bfi	w8, w24, #29, #1
  4165f8:	str	w8, [x20, #44]
  4165fc:	add	w22, w22, #0x1
  416600:	add	x24, x25, w22, uxtw #3
  416604:	ldr	x21, [x24]
  416608:	cbz	x21, 4166e8 <main@@Base+0x7fc>
  41660c:	mov	x28, x21
  416610:	ldrb	w8, [x28], #1
  416614:	ldrh	w9, [x10, x8, lsl #1]
  416618:	tbz	w9, #5, 416610 <main@@Base+0x724>
  41661c:	cbz	w8, 4165fc <main@@Base+0x710>
  416620:	sub	x8, x28, #0x1
  416624:	sub	x20, x8, x21
  416628:	cmp	x20, #0xd
  41662c:	b.ne	416648 <main@@Base+0x75c>  // b.any
  416630:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  416634:	mov	w2, #0xd                   	// #13
  416638:	mov	x0, x21
  41663c:	add	x1, x1, #0x1fd
  416640:	bl	4069f0 <strncmp@plt>
  416644:	cbz	w0, 4166a8 <main@@Base+0x7bc>
  416648:	mov	w24, wzr
  41664c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416650:	ldr	x8, [x8, #2424]
  416654:	mov	w3, #0x1                   	// #1
  416658:	mov	w4, #0x1                   	// #1
  41665c:	mov	x0, x21
  416660:	ldr	x5, [x8, #8]
  416664:	mov	x1, x20
  416668:	mov	x2, x28
  41666c:	mov	x6, xzr
  416670:	bl	423d70 <define_variable_in_set@@Base>
  416674:	ldr	x8, [x0]
  416678:	mov	x20, x0
  41667c:	cmp	x8, x26
  416680:	b.eq	4165c4 <main@@Base+0x6d8>  // b.none
  416684:	ldrb	w9, [x8]
  416688:	cmp	w9, #0x53
  41668c:	b.ne	4165e4 <main@@Base+0x6f8>  // b.any
  416690:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  416694:	add	x0, x8, #0x1
  416698:	add	x1, x1, #0xbbc
  41669c:	bl	406c10 <strcmp@plt>
  4166a0:	cbnz	w0, 4165e4 <main@@Base+0x6f8>
  4166a4:	b	4165c4 <main@@Base+0x6d8>
  4166a8:	ldrb	w8, [x28]
  4166ac:	cmp	w8, #0x2d
  4166b0:	b.ne	4166c4 <main@@Base+0x7d8>  // b.any
  4166b4:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  4166b8:	mov	w9, #0x1                   	// #1
  4166bc:	add	x28, x28, #0x1
  4166c0:	str	w9, [x8, #1464]
  4166c4:	mov	w2, #0xa                   	// #10
  4166c8:	mov	x0, x28
  4166cc:	mov	x1, xzr
  4166d0:	bl	406c30 <strtol@plt>
  4166d4:	ldr	x21, [x24]
  4166d8:	mov	w24, #0x1                   	// #1
  4166dc:	str	x0, [x19, #32]
  4166e0:	b	41664c <main@@Base+0x760>
  4166e4:	str	xzr, [x19, #32]
  4166e8:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  4166ec:	add	x20, x20, #0xa84
  4166f0:	mov	w1, #0xc                   	// #12
  4166f4:	mov	x0, x20
  4166f8:	bl	417d10 <main@@Base+0x1e24>
  4166fc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416700:	ldr	x8, [x8, #2424]
  416704:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  416708:	add	x2, x2, #0x3a9
  41670c:	mov	w1, #0xc                   	// #12
  416710:	ldr	x5, [x8, #8]
  416714:	mov	w3, #0x1                   	// #1
  416718:	mov	x0, x20
  41671c:	mov	w4, wzr
  416720:	mov	x6, xzr
  416724:	bl	423d70 <define_variable_in_set@@Base>
  416728:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  41672c:	add	x0, x0, #0xa87
  416730:	mov	w1, #0x9                   	// #9
  416734:	bl	417d10 <main@@Base+0x1e24>
  416738:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  41673c:	adrp	x21, 442000 <just_print_flag@@Base>
  416740:	ldr	w9, [x24, #3304]
  416744:	add	x21, x21, #0x30
  416748:	ldrb	w8, [x21, #8]
  41674c:	ldp	x22, x0, [x19, #16]
  416750:	sub	w9, w9, #0x1
  416754:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  416758:	cmp	w9, #0x2
  41675c:	and	w8, w8, #0xfe
  416760:	cset	w9, cc  // cc = lo, ul, last
  416764:	ldr	w20, [x25, #2380]
  416768:	orr	w8, w8, w9
  41676c:	adrp	x23, 43f000 <stopchar_map@@Base+0x310>
  416770:	csel	x9, x21, xzr, cc  // cc = lo, ul, last
  416774:	strb	w8, [x21, #8]
  416778:	mov	w8, #0xffffffff            	// #-1
  41677c:	mov	x1, x22
  416780:	mov	w2, wzr
  416784:	str	x9, [x23, #1456]
  416788:	str	w8, [x25, #2380]
  41678c:	bl	417e70 <main@@Base+0x1f84>
  416790:	ldr	w27, [x25, #2380]
  416794:	cmn	w27, #0x1
  416798:	b.ne	4167a0 <main@@Base+0x8b4>  // b.any
  41679c:	str	w20, [x25, #2380]
  4167a0:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4167a4:	ldr	x0, [x20, #2504]
  4167a8:	bl	406910 <fileno@plt>
  4167ac:	bl	406d80 <isatty@plt>
  4167b0:	cbz	w0, 416818 <main@@Base+0x92c>
  4167b4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4167b8:	add	x0, x0, #0x20b
  4167bc:	mov	w1, #0xc                   	// #12
  4167c0:	bl	424110 <lookup_variable@@Base>
  4167c4:	cbnz	x0, 416818 <main@@Base+0x92c>
  4167c8:	ldr	x0, [x20, #2504]
  4167cc:	bl	406910 <fileno@plt>
  4167d0:	bl	4067e0 <ttyname@plt>
  4167d4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4167d8:	ldr	x8, [x8, #2424]
  4167dc:	cmp	x0, #0x0
  4167e0:	mov	w1, #0xc                   	// #12
  4167e4:	mov	w3, wzr
  4167e8:	ldr	x5, [x8, #8]
  4167ec:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  4167f0:	add	x8, x8, #0x218
  4167f4:	csel	x2, x8, x0, eq  // eq = none
  4167f8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4167fc:	add	x0, x0, #0x20b
  416800:	mov	w4, wzr
  416804:	mov	x6, xzr
  416808:	bl	423d70 <define_variable_in_set@@Base>
  41680c:	ldr	w8, [x0, #44]
  416810:	and	w8, w8, #0x9fffffff
  416814:	str	w8, [x0, #44]
  416818:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41681c:	ldr	x0, [x20, #2480]
  416820:	bl	406910 <fileno@plt>
  416824:	bl	406d80 <isatty@plt>
  416828:	cbz	w0, 416890 <main@@Base+0x9a4>
  41682c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416830:	add	x0, x0, #0x21d
  416834:	mov	w1, #0xc                   	// #12
  416838:	bl	424110 <lookup_variable@@Base>
  41683c:	cbnz	x0, 416890 <main@@Base+0x9a4>
  416840:	ldr	x0, [x20, #2480]
  416844:	bl	406910 <fileno@plt>
  416848:	bl	4067e0 <ttyname@plt>
  41684c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416850:	ldr	x8, [x8, #2424]
  416854:	cmp	x0, #0x0
  416858:	mov	w1, #0xc                   	// #12
  41685c:	mov	w3, wzr
  416860:	ldr	x5, [x8, #8]
  416864:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  416868:	add	x8, x8, #0x218
  41686c:	csel	x2, x8, x0, eq  // eq = none
  416870:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416874:	add	x0, x0, #0x21d
  416878:	mov	w4, wzr
  41687c:	mov	x6, xzr
  416880:	bl	423d70 <define_variable_in_set@@Base>
  416884:	ldr	w8, [x0, #44]
  416888:	and	w8, w8, #0x9fffffff
  41688c:	str	w8, [x0, #44]
  416890:	ldr	w9, [x24, #3304]
  416894:	adrp	x8, 442000 <just_print_flag@@Base>
  416898:	ldrb	w8, [x8, #56]
  41689c:	sub	w20, w9, #0x1
  4168a0:	cmp	w20, #0x2
  4168a4:	b.cc	4168b8 <main@@Base+0x9cc>  // b.lo, b.ul, b.last
  4168a8:	tbz	w8, #0, 4168b8 <main@@Base+0x9cc>
  4168ac:	mov	x0, x21
  4168b0:	bl	41a9b0 <output_close@@Base>
  4168b4:	ldrb	w8, [x21, #8]
  4168b8:	cmp	w20, #0x2
  4168bc:	and	w8, w8, #0xfe
  4168c0:	cset	w9, cc  // cc = lo, ul, last
  4168c4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  4168c8:	csel	x10, x21, xzr, cc  // cc = lo, ul, last
  4168cc:	orr	w8, w8, w9
  4168d0:	add	x0, x0, #0x22a
  4168d4:	mov	w1, #0x9                   	// #9
  4168d8:	strb	w8, [x21, #8]
  4168dc:	str	x10, [x23, #1456]
  4168e0:	bl	424110 <lookup_variable@@Base>
  4168e4:	cbz	x0, 416910 <main@@Base+0xa24>
  4168e8:	ldr	x8, [x0, #8]
  4168ec:	mov	w0, wzr
  4168f0:	ldrb	w9, [x8]
  4168f4:	cbz	w9, 416910 <main@@Base+0xa24>
  4168f8:	cmp	w9, #0x2d
  4168fc:	b.eq	416910 <main@@Base+0xa24>  // b.none
  416900:	mov	w2, #0xa                   	// #10
  416904:	mov	x0, x8
  416908:	mov	x1, xzr
  41690c:	bl	406c30 <strtol@plt>
  416910:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416914:	ldr	w8, [x8, #3832]
  416918:	ldr	x10, [x19, #32]
  41691c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  416920:	ldr	w9, [x9, #3284]
  416924:	cmp	w8, #0x0
  416928:	cset	w8, ne  // ne = any
  41692c:	cmp	w10, #0x0
  416930:	cset	w10, eq  // eq = none
  416934:	adrp	x26, 442000 <just_print_flag@@Base>
  416938:	and	w8, w10, w8
  41693c:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  416940:	str	w0, [x26, #32]
  416944:	str	w8, [x10, #3296]
  416948:	cbnz	w9, 417d04 <main@@Base+0x1e18>
  41694c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416950:	ldrb	w8, [x8, #3236]
  416954:	tbz	w8, #0, 41695c <main@@Base+0xa70>
  416958:	bl	4188f8 <main@@Base+0x2a0c>
  41695c:	ldrb	w8, [x19, #2088]
  416960:	cbz	w8, 4169a8 <main@@Base+0xabc>
  416964:	ldr	x20, [x22]
  416968:	cbz	x20, 4169a8 <main@@Base+0xabc>
  41696c:	ldrb	w8, [x20]
  416970:	cmp	w8, #0x2f
  416974:	b.eq	4169a8 <main@@Base+0xabc>  // b.none
  416978:	mov	w1, #0x2f                  	// #47
  41697c:	mov	x0, x20
  416980:	bl	406c80 <strchr@plt>
  416984:	cbz	x0, 4169a8 <main@@Base+0xabc>
  416988:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  41698c:	add	x2, x2, #0x327
  416990:	add	x1, x19, #0x828
  416994:	mov	w0, #0x3                   	// #3
  416998:	mov	x3, x20
  41699c:	bl	419c18 <concat@@Base>
  4169a0:	bl	419e60 <xstrdup@@Base>
  4169a4:	str	x0, [x22]
  4169a8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4169ac:	ldr	x0, [x20, #3864]
  4169b0:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  4169b4:	add	x8, x19, #0x828
  4169b8:	str	x8, [x21, #4088]
  4169bc:	cbz	x0, 416a40 <main@@Base+0xb54>
  4169c0:	cmn	w27, #0x1
  4169c4:	b.eq	4169fc <main@@Base+0xb10>  // b.none
  4169c8:	ldr	x8, [x19, #32]
  4169cc:	cbnz	w8, 416a30 <main@@Base+0xb44>
  4169d0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4169d4:	add	x1, x1, #0x27d
  4169d8:	mov	w2, #0x5                   	// #5
  4169dc:	mov	x0, xzr
  4169e0:	bl	406dc0 <dcgettext@plt>
  4169e4:	mov	x2, x0
  4169e8:	mov	w1, #0x14                  	// #20
  4169ec:	mov	x0, xzr
  4169f0:	mov	w3, w27
  4169f4:	bl	41ae34 <error@@Base>
  4169f8:	b	416a30 <main@@Base+0xb44>
  4169fc:	bl	426a40 <jobserver_parse_auth@@Base>
  416a00:	cbnz	w0, 416a40 <main@@Base+0xb54>
  416a04:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  416a08:	add	x1, x1, #0x234
  416a0c:	mov	w2, #0x5                   	// #5
  416a10:	mov	x0, xzr
  416a14:	bl	406dc0 <dcgettext@plt>
  416a18:	mov	x2, x0
  416a1c:	mov	x0, xzr
  416a20:	mov	x1, xzr
  416a24:	bl	41ae34 <error@@Base>
  416a28:	mov	w8, #0x1                   	// #1
  416a2c:	str	w8, [x25, #2380]
  416a30:	bl	426c28 <jobserver_clear@@Base>
  416a34:	ldr	x0, [x20, #3864]
  416a38:	bl	406c60 <free@plt>
  416a3c:	str	xzr, [x20, #3864]
  416a40:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  416a44:	ldr	x8, [x20, #2424]
  416a48:	ldr	x2, [x22]
  416a4c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416a50:	add	x0, x0, #0x2b8
  416a54:	ldr	x5, [x8, #8]
  416a58:	mov	w1, #0xc                   	// #12
  416a5c:	mov	w3, wzr
  416a60:	mov	w4, wzr
  416a64:	mov	x6, xzr
  416a68:	bl	423d70 <define_variable_in_set@@Base>
  416a6c:	ldr	x8, [x20, #2424]
  416a70:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416a74:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x3680>
  416a78:	add	x0, x0, #0x2c5
  416a7c:	ldr	x5, [x8, #8]
  416a80:	add	x2, x2, #0x2ca
  416a84:	mov	w1, #0x4                   	// #4
  416a88:	mov	w4, #0x1                   	// #1
  416a8c:	mov	w3, wzr
  416a90:	mov	x6, xzr
  416a94:	bl	423d70 <define_variable_in_set@@Base>
  416a98:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416a9c:	ldr	x22, [x8, #3872]
  416aa0:	cbz	x22, 416c20 <main@@Base+0xd34>
  416aa4:	mov	x23, xzr
  416aa8:	mov	x24, x22
  416aac:	ldr	x25, [x24, #8]
  416ab0:	ldr	x0, [x25]
  416ab4:	bl	406750 <strlen@plt>
  416ab8:	ldr	w8, [x25, #44]
  416abc:	mov	x20, x0
  416ac0:	ldr	x0, [x25, #8]
  416ac4:	mvn	w8, w8
  416ac8:	and	x25, x8, #0x1
  416acc:	bl	406750 <strlen@plt>
  416ad0:	ldr	x24, [x24]
  416ad4:	add	x8, x0, x20
  416ad8:	add	x9, x23, x25
  416adc:	add	x8, x9, x8, lsl #1
  416ae0:	add	x23, x8, #0x2
  416ae4:	cbnz	x24, 416aac <main@@Base+0xbc0>
  416ae8:	add	x9, x23, #0xf
  416aec:	mov	x8, sp
  416af0:	and	x9, x9, #0xfffffffffffffff0
  416af4:	sub	x2, x8, x9
  416af8:	mov	sp, x2
  416afc:	adrp	x16, 43e000 <memcpy@GLIBC_2.17>
  416b00:	mov	w8, #0x3a                  	// #58
  416b04:	mov	w9, #0x3d                  	// #61
  416b08:	mov	w10, #0x20                  	// #32
  416b0c:	mov	x11, x2
  416b10:	add	x16, x16, #0xcf0
  416b14:	b	416b28 <main@@Base+0xc3c>
  416b18:	strb	w10, [x13, #1]
  416b1c:	ldr	x22, [x22]
  416b20:	add	x11, x13, #0x2
  416b24:	cbz	x22, 416bc8 <main@@Base+0xcdc>
  416b28:	ldr	x12, [x22, #8]
  416b2c:	ldr	x13, [x12]
  416b30:	b	416b44 <main@@Base+0xc58>
  416b34:	mov	w15, w14
  416b38:	strb	w15, [x11], #1
  416b3c:	ldrb	w14, [x13], #1
  416b40:	strb	w14, [x11], #1
  416b44:	ldrb	w14, [x13]
  416b48:	cmp	w14, #0x24
  416b4c:	b.eq	416b34 <main@@Base+0xc48>  // b.none
  416b50:	cbz	w14, 416b6c <main@@Base+0xc80>
  416b54:	cmp	w14, #0x5c
  416b58:	mov	w15, #0x5c                  	// #92
  416b5c:	b.eq	416b38 <main@@Base+0xc4c>  // b.none
  416b60:	ldrh	w14, [x16, x14, lsl #1]
  416b64:	tbz	w14, #1, 416b3c <main@@Base+0xc50>
  416b68:	b	416b38 <main@@Base+0xc4c>
  416b6c:	ldrb	w13, [x12, #44]
  416b70:	tbnz	w13, #0, 416b78 <main@@Base+0xc8c>
  416b74:	strb	w8, [x11], #1
  416b78:	strb	w9, [x11]
  416b7c:	ldr	x12, [x12, #8]
  416b80:	b	416b98 <main@@Base+0xcac>
  416b84:	mov	w14, w11
  416b88:	add	x11, x13, #0x2
  416b8c:	strb	w14, [x13, #1]
  416b90:	ldrb	w13, [x12], #1
  416b94:	strb	w13, [x11]
  416b98:	mov	x13, x11
  416b9c:	ldrb	w11, [x12]
  416ba0:	cmp	w11, #0x24
  416ba4:	b.eq	416b84 <main@@Base+0xc98>  // b.none
  416ba8:	cbz	w11, 416b18 <main@@Base+0xc2c>
  416bac:	cmp	w11, #0x5c
  416bb0:	mov	w14, #0x5c                  	// #92
  416bb4:	b.eq	416b88 <main@@Base+0xc9c>  // b.none
  416bb8:	ldrh	w11, [x16, x11, lsl #1]
  416bbc:	tbnz	w11, #1, 416b88 <main@@Base+0xc9c>
  416bc0:	add	x11, x13, #0x1
  416bc4:	b	416b90 <main@@Base+0xca4>
  416bc8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  416bcc:	ldr	x8, [x20, #2424]
  416bd0:	strb	wzr, [x13, #1]
  416bd4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  416bd8:	add	x0, x0, #0x358
  416bdc:	ldr	x5, [x8, #8]
  416be0:	mov	w1, #0x17                  	// #23
  416be4:	mov	w3, #0x6                   	// #6
  416be8:	mov	w4, wzr
  416bec:	mov	x6, xzr
  416bf0:	bl	423d70 <define_variable_in_set@@Base>
  416bf4:	ldr	x8, [x20, #2424]
  416bf8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  416bfc:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x3680>
  416c00:	add	x0, x0, #0x34a
  416c04:	ldr	x5, [x8, #8]
  416c08:	add	x2, x2, #0x2da
  416c0c:	mov	w1, #0xd                   	// #13
  416c10:	mov	w3, #0x1                   	// #1
  416c14:	mov	w4, #0x1                   	// #1
  416c18:	mov	x6, xzr
  416c1c:	bl	423d70 <define_variable_in_set@@Base>
  416c20:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  416c24:	ldr	x8, [x23, #3880]
  416c28:	cbz	x8, 416c5c <main@@Base+0xd70>
  416c2c:	ldr	x9, [x8]
  416c30:	ldr	x20, [x9]
  416c34:	cbz	x20, 416c5c <main@@Base+0xd70>
  416c38:	mov	w22, #0x1                   	// #1
  416c3c:	mov	x0, x20
  416c40:	bl	406c50 <chdir@plt>
  416c44:	tbnz	w0, #31, 417cfc <main@@Base+0x1e10>
  416c48:	ldr	x8, [x23, #3880]
  416c4c:	ldr	x9, [x8]
  416c50:	ldr	x20, [x9, w22, uxtw #3]
  416c54:	add	w22, w22, #0x1
  416c58:	cbnz	x20, 416c3c <main@@Base+0xd50>
  416c5c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  416c60:	ldr	w9, [x9, #3836]
  416c64:	cbnz	w9, 416c80 <main@@Base+0xd94>
  416c68:	cbnz	x8, 416c74 <main@@Base+0xd88>
  416c6c:	ldr	w8, [x26, #32]
  416c70:	cbz	w8, 416c80 <main@@Base+0xd94>
  416c74:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416c78:	mov	w9, #0x1                   	// #1
  416c7c:	str	w9, [x8, #3276]
  416c80:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416c84:	ldr	w8, [x8, #3280]
  416c88:	cbz	w8, 416c94 <main@@Base+0xda8>
  416c8c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416c90:	str	wzr, [x8, #3276]
  416c94:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416c98:	ldr	w8, [x8, #3268]
  416c9c:	cbz	w8, 416cac <main@@Base+0xdc0>
  416ca0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416ca4:	mov	w9, #0x1                   	// #1
  416ca8:	str	w9, [x8, #3264]
  416cac:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416cb0:	ldr	x8, [x8, #3888]
  416cb4:	cbz	x8, 416ccc <main@@Base+0xde0>
  416cb8:	ldr	x0, [x8]
  416cbc:	bl	41da0c <construct_include_path@@Base>
  416cc0:	ldr	x8, [x23, #3880]
  416cc4:	cbnz	x8, 416cdc <main@@Base+0xdf0>
  416cc8:	b	416d0c <main@@Base+0xe20>
  416ccc:	mov	x0, xzr
  416cd0:	bl	41da0c <construct_include_path@@Base>
  416cd4:	ldr	x8, [x23, #3880]
  416cd8:	cbz	x8, 416d0c <main@@Base+0xe20>
  416cdc:	add	x0, x19, #0x828
  416ce0:	mov	w1, #0x1000                	// #4096
  416ce4:	add	x20, x19, #0x828
  416ce8:	bl	406740 <getcwd@plt>
  416cec:	cbnz	x0, 416d08 <main@@Base+0xe1c>
  416cf0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416cf4:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  416cf8:	add	x0, x0, #0x11a
  416cfc:	add	x1, x1, #0x3a9
  416d00:	bl	41b1c0 <perror_with_name@@Base>
  416d04:	mov	x20, xzr
  416d08:	str	x20, [x21, #4088]
  416d0c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416d10:	ldr	x8, [x8, #2424]
  416d14:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416d18:	add	x0, x0, #0x2f5
  416d1c:	add	x2, x19, #0x828
  416d20:	ldr	x5, [x8, #8]
  416d24:	mov	w1, #0x6                   	// #6
  416d28:	mov	w3, #0x2                   	// #2
  416d2c:	mov	w4, wzr
  416d30:	mov	x6, xzr
  416d34:	str	w27, [x19]
  416d38:	bl	423d70 <define_variable_in_set@@Base>
  416d3c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416d40:	ldr	x8, [x8, #3896]
  416d44:	adrp	x11, 43e000 <memcpy@GLIBC_2.17>
  416d48:	cbz	x8, 416efc <main@@Base+0x1010>
  416d4c:	ldr	w9, [x8, #8]
  416d50:	cbz	w9, 416efc <main@@Base+0x1010>
  416d54:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x3680>
  416d58:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x3680>
  416d5c:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  416d60:	mov	w27, #0xbbf0                	// #48112
  416d64:	mov	x24, xzr
  416d68:	add	x25, x25, #0x32a
  416d6c:	add	x22, x22, #0x336
  416d70:	add	x26, x26, #0xf10
  416d74:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  416d78:	movk	w27, #0xfffe, lsl #16
  416d7c:	mov	w28, #0x40c                 	// #1036
  416d80:	b	416dd4 <main@@Base+0xee8>
  416d84:	mov	x0, x20
  416d88:	bl	406950 <fclose@plt>
  416d8c:	ldr	x0, [x26]
  416d90:	bl	423690 <strcache_add@@Base>
  416d94:	ldr	x8, [x26, #40]
  416d98:	ldr	x8, [x8]
  416d9c:	str	x0, [x8, x24, lsl #3]
  416da0:	ldr	x0, [x26]
  416da4:	bl	423690 <strcache_add@@Base>
  416da8:	bl	40ab6c <enter_file@@Base>
  416dac:	ldr	w8, [x0, #136]
  416db0:	adrp	x11, 43e000 <memcpy@GLIBC_2.17>
  416db4:	and	w8, w8, w27
  416db8:	orr	w8, w8, w28
  416dbc:	str	w8, [x0, #136]
  416dc0:	ldr	x8, [x26, #40]
  416dc4:	ldr	w9, [x8, #8]
  416dc8:	add	x24, x24, #0x1
  416dcc:	cmp	x24, x9
  416dd0:	b.cs	416efc <main@@Base+0x1010>  // b.hs, b.nlast
  416dd4:	ldr	x9, [x8]
  416dd8:	ldr	x9, [x9, x24, lsl #3]
  416ddc:	ldrb	w10, [x9]
  416de0:	cmp	w10, #0x2d
  416de4:	b.ne	416dc4 <main@@Base+0xed8>  // b.any
  416de8:	ldrb	w9, [x9, #1]
  416dec:	cbnz	w9, 416dc4 <main@@Base+0xed8>
  416df0:	ldr	x8, [x11, #3856]
  416df4:	cbnz	x8, 417060 <main@@Base+0x1174>
  416df8:	mov	x0, x25
  416dfc:	bl	406e80 <getenv@plt>
  416e00:	cbz	x0, 416e10 <main@@Base+0xf24>
  416e04:	ldrb	w8, [x0]
  416e08:	mov	x21, x0
  416e0c:	cbnz	w8, 416e18 <main@@Base+0xf2c>
  416e10:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x3680>
  416e14:	add	x21, x21, #0x331
  416e18:	mov	x0, x21
  416e1c:	bl	406750 <strlen@plt>
  416e20:	add	x9, x0, #0x19
  416e24:	mov	x8, sp
  416e28:	and	x9, x9, #0xfffffffffffffff0
  416e2c:	sub	x20, x8, x9
  416e30:	mov	sp, x20
  416e34:	mov	x0, x20
  416e38:	mov	x1, x21
  416e3c:	bl	406d00 <strcpy@plt>
  416e40:	bl	406750 <strlen@plt>
  416e44:	add	x8, x0, x20
  416e48:	ldurb	w8, [x8, #-1]
  416e4c:	cmp	w8, #0x2f
  416e50:	b.eq	416e64 <main@@Base+0xf78>  // b.none
  416e54:	mov	x0, x20
  416e58:	bl	406750 <strlen@plt>
  416e5c:	mov	w8, #0x2f                  	// #47
  416e60:	strh	w8, [x20, x0]
  416e64:	mov	x0, x20
  416e68:	bl	406750 <strlen@plt>
  416e6c:	ldr	x8, [x22]
  416e70:	add	x9, x20, x0
  416e74:	mov	x0, x26
  416e78:	mov	x1, x20
  416e7c:	str	x8, [x9]
  416e80:	strb	wzr, [x9, #8]
  416e84:	bl	41a15c <get_tmpfile@@Base>
  416e88:	cbz	x0, 41706c <main@@Base+0x1180>
  416e8c:	mov	x20, x0
  416e90:	ldr	x0, [x23, #2512]
  416e94:	bl	406b90 <feof@plt>
  416e98:	cbnz	w0, 416d84 <main@@Base+0xe98>
  416e9c:	ldr	x21, [x23, #2512]
  416ea0:	mov	x0, x21
  416ea4:	bl	406f00 <ferror@plt>
  416ea8:	cbnz	w0, 416d84 <main@@Base+0xe98>
  416eac:	add	x0, x19, #0x28
  416eb0:	mov	w1, #0x1                   	// #1
  416eb4:	mov	w2, #0x800                 	// #2048
  416eb8:	mov	x3, x21
  416ebc:	bl	406c40 <fread@plt>
  416ec0:	cbz	x0, 416e90 <main@@Base+0xfa4>
  416ec4:	mov	x21, x0
  416ec8:	add	x0, x19, #0x28
  416ecc:	mov	w1, #0x1                   	// #1
  416ed0:	mov	x2, x21
  416ed4:	mov	x3, x20
  416ed8:	bl	406cb0 <fwrite@plt>
  416edc:	cmp	x0, x21
  416ee0:	b.eq	416e90 <main@@Base+0xfa4>  // b.none
  416ee4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  416ee8:	add	x1, x1, #0x356
  416eec:	mov	w2, #0x5                   	// #5
  416ef0:	mov	x0, xzr
  416ef4:	bl	406dc0 <dcgettext@plt>
  416ef8:	bl	41a2bc <pfatal_with_name@@Base>
  416efc:	add	x9, x19, #0x28
  416f00:	adrp	x8, 412000 <try_implicit_rule@@Base+0xa24>
  416f04:	add	x20, x9, #0x8
  416f08:	add	x8, x8, #0xc14
  416f0c:	mov	w21, #0x10000000            	// #268435456
  416f10:	mov	x0, x20
  416f14:	str	x8, [x19, #40]
  416f18:	str	w21, [x19, #176]
  416f1c:	bl	4069d0 <sigemptyset@plt>
  416f20:	mov	w1, #0x11                  	// #17
  416f24:	mov	x0, x20
  416f28:	bl	406e40 <sigaddset@plt>
  416f2c:	add	x1, x19, #0x28
  416f30:	sub	x2, x29, #0xa0
  416f34:	mov	w0, #0x11                  	// #17
  416f38:	bl	406b20 <sigaction@plt>
  416f3c:	add	x0, x19, #0x28
  416f40:	add	x20, x19, #0x28
  416f44:	bl	4069d0 <sigemptyset@plt>
  416f48:	add	x0, x19, #0x28
  416f4c:	mov	w1, #0x11                  	// #17
  416f50:	bl	406e40 <sigaddset@plt>
  416f54:	add	x1, x19, #0x28
  416f58:	mov	w0, #0x2                   	// #2
  416f5c:	mov	x2, xzr
  416f60:	bl	4067b0 <sigprocmask@plt>
  416f64:	tbz	w0, #31, 416f74 <main@@Base+0x1088>
  416f68:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416f6c:	add	x0, x0, #0x36e
  416f70:	bl	41a2bc <pfatal_with_name@@Base>
  416f74:	adrp	x8, 418000 <main@@Base+0x2114>
  416f78:	add	x20, x20, #0x8
  416f7c:	add	x8, x8, #0xafc
  416f80:	mov	x0, x20
  416f84:	str	w21, [x19, #176]
  416f88:	str	x8, [x19, #40]
  416f8c:	bl	4069d0 <sigemptyset@plt>
  416f90:	mov	w1, #0xa                   	// #10
  416f94:	mov	x0, x20
  416f98:	bl	406e40 <sigaddset@plt>
  416f9c:	add	x1, x19, #0x28
  416fa0:	sub	x2, x29, #0xa0
  416fa4:	mov	w0, #0xa                   	// #10
  416fa8:	bl	406b20 <sigaction@plt>
  416fac:	bl	408c84 <set_default_suffixes@@Base>
  416fb0:	bl	408d84 <install_default_suffix_rules@@Base>
  416fb4:	bl	424ce4 <define_automatic_variables@@Base>
  416fb8:	mov	w0, wzr
  416fbc:	mov	w1, wzr
  416fc0:	bl	418b14 <die@@Base+0x100>
  416fc4:	ldr	w8, [x0, #44]
  416fc8:	and	w8, w8, #0x9fffffff
  416fcc:	str	w8, [x0, #44]
  416fd0:	bl	408e7c <define_default_variables@@Base>
  416fd4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416fd8:	add	x0, x0, #0x390
  416fdc:	bl	423690 <strcache_add@@Base>
  416fe0:	bl	40ab6c <enter_file@@Base>
  416fe4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  416fe8:	ldr	x8, [x8, #2424]
  416fec:	adrp	x9, 442000 <just_print_flag@@Base>
  416ff0:	str	x0, [x9, #40]
  416ff4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  416ff8:	ldr	x5, [x8, #8]
  416ffc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  417000:	add	x0, x0, #0x399
  417004:	add	x2, x2, #0x3a9
  417008:	mov	w1, #0xd                   	// #13
  41700c:	mov	w3, #0x2                   	// #2
  417010:	mov	w4, wzr
  417014:	mov	x6, xzr
  417018:	bl	423d70 <define_variable_in_set@@Base>
  41701c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  417020:	ldr	x8, [x21, #3904]
  417024:	adrp	x25, 442000 <just_print_flag@@Base>
  417028:	adrp	x9, 442000 <just_print_flag@@Base>
  41702c:	add	x25, x25, #0x30
  417030:	str	x0, [x9, #24]
  417034:	cbz	x8, 41719c <main@@Base+0x12b0>
  417038:	ldr	w9, [x8, #8]
  41703c:	lsl	x22, x9, #3
  417040:	cbnz	w9, 417080 <main@@Base+0x1194>
  417044:	add	x9, x22, #0xf
  417048:	mov	x8, sp
  41704c:	and	x9, x9, #0xffffffff0
  417050:	sub	x2, x8, x9
  417054:	mov	sp, x2
  417058:	mov	x8, x2
  41705c:	b	417170 <main@@Base+0x1284>
  417060:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417064:	add	x1, x1, #0x2fc
  417068:	b	41779c <main@@Base+0x18b0>
  41706c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417070:	add	x1, x1, #0x33f
  417074:	mov	w2, #0x5                   	// #5
  417078:	bl	406dc0 <dcgettext@plt>
  41707c:	bl	41a2bc <pfatal_with_name@@Base>
  417080:	mov	x23, xzr
  417084:	ldr	x8, [x8]
  417088:	ldr	x0, [x8, x23, lsl #3]
  41708c:	bl	419e60 <xstrdup@@Base>
  417090:	mov	x20, x0
  417094:	bl	406750 <strlen@plt>
  417098:	add	x22, x22, x0, lsl #1
  41709c:	mov	x0, x20
  4170a0:	mov	x1, xzr
  4170a4:	bl	41ba40 <eval_buffer@@Base>
  4170a8:	mov	x0, x20
  4170ac:	bl	406c60 <free@plt>
  4170b0:	ldr	x8, [x21, #3904]
  4170b4:	add	x23, x23, #0x1
  4170b8:	ldr	w9, [x8, #8]
  4170bc:	cmp	x23, x9
  4170c0:	b.cc	417084 <main@@Base+0x1198>  // b.lo, b.ul, b.last
  4170c4:	add	x10, x22, #0xf
  4170c8:	mov	x8, sp
  4170cc:	and	x10, x10, #0xfffffffffffffff0
  4170d0:	sub	x2, x8, x10
  4170d4:	mov	sp, x2
  4170d8:	cbnz	w9, 4170e4 <main@@Base+0x11f8>
  4170dc:	mov	x8, x2
  4170e0:	b	417170 <main@@Base+0x1284>
  4170e4:	mov	x10, #0x2d2d                	// #11565
  4170e8:	movk	x10, #0x7665, lsl #16
  4170ec:	movk	x10, #0x6c61, lsl #32
  4170f0:	adrp	x15, 43e000 <memcpy@GLIBC_2.17>
  4170f4:	mov	x9, xzr
  4170f8:	movk	x10, #0x3d, lsl #48
  4170fc:	mov	w11, #0x20                  	// #32
  417100:	mov	x8, x2
  417104:	add	x15, x15, #0xcf0
  417108:	ldr	x12, [x21, #3904]
  41710c:	str	x10, [x8], #7
  417110:	ldr	x12, [x12]
  417114:	ldr	x12, [x12, x9, lsl #3]
  417118:	ldrb	w13, [x12]
  41711c:	cbz	w13, 417158 <main@@Base+0x126c>
  417120:	cmp	w13, #0x24
  417124:	b.ne	417134 <main@@Base+0x1248>  // b.any
  417128:	mov	w14, w13
  41712c:	strb	w14, [x8], #1
  417130:	b	417148 <main@@Base+0x125c>
  417134:	cmp	w13, #0x5c
  417138:	mov	w14, #0x5c                  	// #92
  41713c:	b.eq	41712c <main@@Base+0x1240>  // b.none
  417140:	ldrh	w13, [x15, x13, lsl #1]
  417144:	tbnz	w13, #1, 41712c <main@@Base+0x1240>
  417148:	ldrb	w13, [x12], #1
  41714c:	strb	w13, [x8], #1
  417150:	ldrb	w13, [x12]
  417154:	cbnz	w13, 417120 <main@@Base+0x1234>
  417158:	ldr	x12, [x21, #3904]
  41715c:	strb	w11, [x8], #1
  417160:	add	x9, x9, #0x1
  417164:	ldr	w12, [x12, #8]
  417168:	cmp	x9, x12
  41716c:	b.cc	417108 <main@@Base+0x121c>  // b.lo, b.ul, b.last
  417170:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  417174:	ldr	x9, [x9, #2424]
  417178:	sturb	wzr, [x8, #-1]
  41717c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  417180:	add	x0, x0, #0x3a7
  417184:	ldr	x5, [x9, #8]
  417188:	mov	w1, #0x10                  	// #16
  41718c:	mov	w3, #0x6                   	// #6
  417190:	mov	w4, wzr
  417194:	mov	x6, xzr
  417198:	bl	423d70 <define_variable_in_set@@Base>
  41719c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4171a0:	ldr	x8, [x8, #3896]
  4171a4:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  4171a8:	cbnz	x8, 4171b4 <main@@Base+0x12c8>
  4171ac:	mov	x0, xzr
  4171b0:	b	4171b8 <main@@Base+0x12cc>
  4171b4:	ldr	x0, [x8]
  4171b8:	bl	41b428 <read_all_makefiles@@Base>
  4171bc:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  4171c0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4171c4:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  4171c8:	ldr	w21, [x8, #3268]
  4171cc:	ldr	w23, [x22, #3264]
  4171d0:	ldr	w24, [x27, #2380]
  4171d4:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  4171d8:	add	x20, x20, #0xa84
  4171dc:	mov	x26, x0
  4171e0:	mov	w8, #0xffffffff            	// #-1
  4171e4:	mov	w1, #0xc                   	// #12
  4171e8:	mov	x0, x20
  4171ec:	str	w8, [x27, #2380]
  4171f0:	bl	417d10 <main@@Base+0x1e24>
  4171f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4171f8:	ldr	x8, [x8, #2424]
  4171fc:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  417200:	add	x2, x2, #0x3a9
  417204:	mov	w1, #0xc                   	// #12
  417208:	ldr	x5, [x8, #8]
  41720c:	mov	w3, #0x5                   	// #5
  417210:	mov	x0, x20
  417214:	mov	w4, wzr
  417218:	mov	x6, xzr
  41721c:	bl	423d70 <define_variable_in_set@@Base>
  417220:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  417224:	add	x0, x0, #0xa87
  417228:	mov	w1, #0x9                   	// #9
  41722c:	bl	417d10 <main@@Base+0x1e24>
  417230:	ldr	w8, [x19]
  417234:	cmn	w8, #0x1
  417238:	b.ne	4172a0 <main@@Base+0x13b4>  // b.any
  41723c:	ldr	w8, [x27, #2380]
  417240:	cmn	w8, #0x1
  417244:	b.eq	4172a0 <main@@Base+0x13b4>  // b.none
  417248:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41724c:	ldr	x8, [x8, #3864]
  417250:	cbz	x8, 4172a4 <main@@Base+0x13b8>
  417254:	ldr	x8, [x19, #32]
  417258:	cbnz	w8, 417288 <main@@Base+0x139c>
  41725c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417260:	add	x1, x1, #0x3b8
  417264:	mov	w2, #0x5                   	// #5
  417268:	mov	x0, xzr
  41726c:	bl	406dc0 <dcgettext@plt>
  417270:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417274:	ldr	w3, [x8, #2380]
  417278:	mov	x2, x0
  41727c:	mov	w1, #0x14                  	// #20
  417280:	mov	x0, xzr
  417284:	bl	41ae34 <error@@Base>
  417288:	bl	426c28 <jobserver_clear@@Base>
  41728c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  417290:	ldr	x0, [x20, #3864]
  417294:	bl	406c60 <free@plt>
  417298:	str	xzr, [x20, #3864]
  41729c:	b	4172a4 <main@@Base+0x13b8>
  4172a0:	str	w24, [x27, #2380]
  4172a4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4172a8:	ldr	w9, [x8, #3304]
  4172ac:	adrp	x8, 442000 <just_print_flag@@Base>
  4172b0:	ldrb	w8, [x8, #56]
  4172b4:	sub	w20, w9, #0x1
  4172b8:	cmp	w20, #0x2
  4172bc:	b.cc	4172d0 <main@@Base+0x13e4>  // b.lo, b.ul, b.last
  4172c0:	tbz	w8, #0, 4172d0 <main@@Base+0x13e4>
  4172c4:	mov	x0, x25
  4172c8:	bl	41a9b0 <output_close@@Base>
  4172cc:	ldrb	w8, [x25, #8]
  4172d0:	cmp	w20, #0x2
  4172d4:	and	w8, w8, #0xfe
  4172d8:	cset	w9, cc  // cc = lo, ul, last
  4172dc:	orr	w8, w8, w9
  4172e0:	csel	x10, x25, xzr, cc  // cc = lo, ul, last
  4172e4:	strb	w8, [x25, #8]
  4172e8:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  4172ec:	str	x10, [x8, #1456]
  4172f0:	cbnz	w23, 41734c <main@@Base+0x1460>
  4172f4:	ldr	w8, [x22, #3264]
  4172f8:	cbz	w8, 41734c <main@@Base+0x1460>
  4172fc:	adrp	x22, 442000 <just_print_flag@@Base>
  417300:	ldr	x8, [x22, #216]
  417304:	ldrb	w9, [x8, #136]
  417308:	tbz	w9, #4, 41731c <main@@Base+0x1430>
  41730c:	ldr	x0, [x8, #24]
  417310:	bl	41a130 <free_ns_chain@@Base>
  417314:	ldr	x8, [x22, #216]
  417318:	str	xzr, [x8, #24]
  41731c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417320:	ldr	x8, [x8, #2424]
  417324:	adrp	x0, 427000 <jobserver_post_child@@Base+0xcc>
  417328:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  41732c:	add	x0, x0, #0xab4
  417330:	ldr	x5, [x8, #8]
  417334:	add	x2, x2, #0x3a9
  417338:	mov	w1, #0x8                   	// #8
  41733c:	mov	w3, wzr
  417340:	mov	w4, wzr
  417344:	mov	x6, xzr
  417348:	bl	423d70 <define_variable_in_set@@Base>
  41734c:	cbnz	w21, 417360 <main@@Base+0x1474>
  417350:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417354:	ldr	w8, [x8, #3268]
  417358:	cbz	w8, 417360 <main@@Base+0x1474>
  41735c:	bl	408ef0 <undefine_default_variables@@Base>
  417360:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  417364:	ldr	x8, [x22, #3864]
  417368:	adrp	x21, 442000 <just_print_flag@@Base>
  41736c:	cbnz	x8, 4173bc <main@@Base+0x14d0>
  417370:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417374:	ldr	w8, [x8, #2380]
  417378:	cmn	w8, #0x1
  41737c:	b.ne	41738c <main@@Base+0x14a0>  // b.any
  417380:	mov	w8, #0x1                   	// #1
  417384:	str	w8, [x21, #208]
  417388:	b	4173c0 <main@@Base+0x14d4>
  41738c:	cmp	w8, #0x2
  417390:	str	w8, [x21, #208]
  417394:	b.cc	4173c0 <main@@Base+0x14d4>  // b.lo, b.ul, b.last
  417398:	sub	w0, w8, #0x1
  41739c:	bl	4267e0 <jobserver_setup@@Base>
  4173a0:	cbz	w0, 4173c0 <main@@Base+0x14d4>
  4173a4:	bl	426bd4 <jobserver_get_auth@@Base>
  4173a8:	str	x0, [x22, #3864]
  4173ac:	cbz	x0, 4173c0 <main@@Base+0x14d4>
  4173b0:	ldr	w8, [x21, #208]
  4173b4:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4173b8:	str	w8, [x9, #3840]
  4173bc:	str	wzr, [x21, #208]
  4173c0:	cmp	w20, #0x1
  4173c4:	b.hi	4173f0 <main@@Base+0x1504>  // b.pmore
  4173c8:	ldr	w8, [x21, #208]
  4173cc:	cmp	w8, #0x1
  4173d0:	b.ne	4173f0 <main@@Base+0x1504>  // b.any
  4173d4:	adrp	x0, 442000 <just_print_flag@@Base>
  4173d8:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  4173dc:	add	x0, x0, #0x30
  4173e0:	str	xzr, [x8, #1456]
  4173e4:	bl	41a9b0 <output_close@@Base>
  4173e8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4173ec:	str	wzr, [x8, #3304]
  4173f0:	mov	w0, #0x1                   	// #1
  4173f4:	mov	w1, wzr
  4173f8:	bl	418b14 <die@@Base+0x100>
  4173fc:	bl	40b8e0 <snap_deps@@Base>
  417400:	bl	422884 <convert_to_pattern@@Base>
  417404:	bl	408e08 <install_default_implicit_rules@@Base>
  417408:	bl	4224a0 <snap_implicit_rules@@Base>
  41740c:	bl	425ca4 <build_vpath_lists@@Base>
  417410:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417414:	ldr	x8, [x8, #3912]
  417418:	cbz	x8, 417460 <main@@Base+0x1574>
  41741c:	ldr	x8, [x8]
  417420:	ldr	x0, [x8]
  417424:	cbz	x0, 417460 <main@@Base+0x1574>
  417428:	add	x20, x8, #0x8
  41742c:	mov	w8, #0x2                   	// #2
  417430:	dup	v0.2d, x8
  417434:	mov	w21, #0x40c                 	// #1036
  417438:	str	q0, [x19]
  41743c:	bl	40ab6c <enter_file@@Base>
  417440:	ldr	w8, [x0, #136]
  417444:	ldr	q0, [x19]
  417448:	and	w8, w8, #0xfffffff0
  41744c:	orr	w8, w8, w21
  417450:	str	q0, [x0, #112]
  417454:	str	w8, [x0, #136]
  417458:	ldr	x0, [x20], #8
  41745c:	cbnz	x0, 41743c <main@@Base+0x1550>
  417460:	ldr	x8, [x19, #32]
  417464:	cbnz	w8, 417498 <main@@Base+0x15ac>
  417468:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41746c:	ldr	x8, [x8, #3920]
  417470:	cbz	x8, 417498 <main@@Base+0x15ac>
  417474:	ldr	x8, [x8]
  417478:	ldr	x0, [x8]
  41747c:	cbz	x0, 417498 <main@@Base+0x15ac>
  417480:	add	x20, x8, #0x8
  417484:	mov	x21, #0xffffffffffffffff    	// #-1
  417488:	bl	40ab6c <enter_file@@Base>
  41748c:	stp	x21, x21, [x0, #112]
  417490:	ldr	x0, [x20], #8
  417494:	cbnz	x0, 417488 <main@@Base+0x159c>
  417498:	bl	427264 <remote_setup@@Base>
  41749c:	adrp	x0, 442000 <just_print_flag@@Base>
  4174a0:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  4174a4:	add	x0, x0, #0x30
  4174a8:	str	xzr, [x8, #1456]
  4174ac:	bl	41a9b0 <output_close@@Base>
  4174b0:	cbnz	x26, 4174bc <main@@Base+0x15d0>
  4174b4:	mov	w23, wzr
  4174b8:	b	41762c <main@@Base+0x1740>
  4174bc:	ldrb	w8, [x28, #3236]
  4174c0:	tbz	w8, #0, 4174e8 <main@@Base+0x15fc>
  4174c4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4174c8:	add	x1, x1, #0x3f4
  4174cc:	mov	w2, #0x5                   	// #5
  4174d0:	mov	x0, xzr
  4174d4:	bl	406dc0 <dcgettext@plt>
  4174d8:	bl	406e60 <printf@plt>
  4174dc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4174e0:	ldr	x0, [x8, #2504]
  4174e4:	bl	406cf0 <fflush@plt>
  4174e8:	mov	w8, wzr
  4174ec:	mov	x9, x26
  4174f0:	ldr	x9, [x9]
  4174f4:	add	w8, w8, #0x1
  4174f8:	cbnz	x9, 4174f0 <main@@Base+0x1604>
  4174fc:	mov	w8, w8
  417500:	lsl	x8, x8, #3
  417504:	add	x8, x8, #0xf
  417508:	mov	x9, sp
  41750c:	and	x8, x8, #0xffffffff0
  417510:	sub	x22, x9, x8
  417514:	mov	sp, x22
  417518:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x3680>
  41751c:	mov	w20, wzr
  417520:	mov	x21, xzr
  417524:	add	x23, x23, #0x40c
  417528:	mov	x24, x26
  41752c:	ldr	x0, [x24, #16]
  417530:	ldr	x25, [x0, #104]
  417534:	cbz	x25, 417550 <main@@Base+0x1664>
  417538:	ldr	x8, [x25, #24]
  41753c:	cbnz	x8, 417548 <main@@Base+0x165c>
  417540:	ldr	x8, [x25, #32]
  417544:	cbnz	x8, 417580 <main@@Base+0x1694>
  417548:	ldr	x25, [x25, #56]
  41754c:	cbnz	x25, 417538 <main@@Base+0x164c>
  417550:	ldr	x8, [x0, #112]
  417554:	cbnz	x8, 417564 <main@@Base+0x1678>
  417558:	mov	w1, wzr
  41755c:	bl	420fec <f_mtime@@Base>
  417560:	mov	x8, x0
  417564:	str	x8, [x22, w20, uxtw #3]
  417568:	ldr	x25, [x24]
  41756c:	add	w20, w20, #0x1
  417570:	mov	x21, x24
  417574:	mov	x24, x25
  417578:	cbnz	x25, 41752c <main@@Base+0x1640>
  41757c:	b	4175e0 <main@@Base+0x16f4>
  417580:	ldrb	w8, [x28, #3236]
  417584:	tbz	w8, #1, 4175ac <main@@Base+0x16c0>
  417588:	mov	w2, #0x5                   	// #5
  41758c:	mov	x0, xzr
  417590:	mov	x1, x23
  417594:	bl	406dc0 <dcgettext@plt>
  417598:	ldr	x1, [x25]
  41759c:	bl	406e60 <printf@plt>
  4175a0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4175a4:	ldr	x0, [x8, #2504]
  4175a8:	bl	406cf0 <fflush@plt>
  4175ac:	ldr	x25, [x24]
  4175b0:	cbnz	x21, 4175c8 <main@@Base+0x16dc>
  4175b4:	mov	x0, x24
  4175b8:	bl	406c60 <free@plt>
  4175bc:	mov	x24, xzr
  4175c0:	mov	x26, x25
  4175c4:	b	417570 <main@@Base+0x1684>
  4175c8:	mov	x0, x24
  4175cc:	str	x25, [x21]
  4175d0:	bl	406c60 <free@plt>
  4175d4:	ldr	x25, [x21]
  4175d8:	mov	x24, x21
  4175dc:	b	417570 <main@@Base+0x1684>
  4175e0:	mov	w0, #0x1                   	// #1
  4175e4:	mov	w1, #0x1                   	// #1
  4175e8:	mov	w21, #0x1                   	// #1
  4175ec:	bl	418b14 <die@@Base+0x100>
  4175f0:	ldr	w20, [x28, #3236]
  4175f4:	tbnz	w20, #8, 4175fc <main@@Base+0x1710>
  4175f8:	str	wzr, [x28, #3236]
  4175fc:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  417600:	mov	x0, x26
  417604:	str	w21, [x23, #3300]
  417608:	bl	41fc68 <update_goal_chain@@Base>
  41760c:	str	wzr, [x23, #3300]
  417610:	str	w20, [x28, #3236]
  417614:	cbz	w0, 417924 <main@@Base+0x1a38>
  417618:	cmp	w0, #0x3
  41761c:	mov	w23, wzr
  417620:	b.ne	41762c <main@@Base+0x1740>  // b.any
  417624:	mov	w23, wzr
  417628:	cbnz	x26, 4177b8 <main@@Base+0x18cc>
  41762c:	mov	w0, #0x1                   	// #1
  417630:	mov	w1, wzr
  417634:	bl	418b14 <die@@Base+0x100>
  417638:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41763c:	add	x8, x8, #0xef8
  417640:	ldr	w9, [x8]
  417644:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  417648:	str	w9, [x10, #3296]
  41764c:	ldr	x9, [x19, #32]
  417650:	cbz	w9, 417680 <main@@Base+0x1794>
  417654:	ldr	x8, [x8, #88]
  417658:	cbz	x8, 417680 <main@@Base+0x1794>
  41765c:	ldr	x8, [x8]
  417660:	ldr	x0, [x8]
  417664:	cbz	x0, 417680 <main@@Base+0x1794>
  417668:	add	x20, x8, #0x8
  41766c:	mov	x21, #0xffffffffffffffff    	// #-1
  417670:	bl	40ab6c <enter_file@@Base>
  417674:	stp	x21, x21, [x0, #112]
  417678:	ldr	x0, [x20], #8
  41767c:	cbnz	x0, 417670 <main@@Base+0x1784>
  417680:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  417684:	ldr	x0, [x20, #3856]
  417688:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  41768c:	cbz	x0, 4176c4 <main@@Base+0x17d8>
  417690:	bl	406eb0 <unlink@plt>
  417694:	tbz	w0, #31, 4176c4 <main@@Base+0x17d8>
  417698:	bl	406e70 <__errno_location@plt>
  41769c:	ldr	w8, [x0]
  4176a0:	cmp	w8, #0x2
  4176a4:	b.eq	4176c4 <main@@Base+0x17d8>  // b.none
  4176a8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4176ac:	add	x1, x1, #0x514
  4176b0:	mov	w2, #0x5                   	// #5
  4176b4:	mov	x0, xzr
  4176b8:	bl	406dc0 <dcgettext@plt>
  4176bc:	ldr	x1, [x20, #3856]
  4176c0:	bl	41b1c0 <perror_with_name@@Base>
  4176c4:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  4176c8:	ldr	x0, [x22, #3928]
  4176cc:	cbnz	x0, 41771c <main@@Base+0x1830>
  4176d0:	adrp	x8, 442000 <just_print_flag@@Base>
  4176d4:	ldr	x8, [x8, #24]
  4176d8:	ldrb	w9, [x8, #44]
  4176dc:	tbnz	w9, #0, 41772c <main@@Base+0x1840>
  4176e0:	ldr	x21, [x8, #8]
  4176e4:	adrp	x24, 441000 <stdio_traced@@Base+0x1a48>
  4176e8:	ldr	x20, [x24, #4016]
  4176ec:	mov	x0, x21
  4176f0:	bl	406750 <strlen@plt>
  4176f4:	mov	x2, x0
  4176f8:	mov	x0, x20
  4176fc:	mov	x1, x21
  417700:	bl	409d08 <variable_buffer_output@@Base>
  417704:	strb	wzr, [x0]
  417708:	ldr	x0, [x24, #4016]
  41770c:	str	x0, [x19, #40]
  417710:	ldrb	w8, [x0]
  417714:	cbnz	w8, 417740 <main@@Base+0x1854>
  417718:	b	417768 <main@@Base+0x187c>
  41771c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417720:	ldr	x8, [x8, #3936]
  417724:	str	xzr, [x8]
  417728:	b	417c50 <main@@Base+0x1d64>
  41772c:	ldr	x0, [x8, #8]
  417730:	bl	40a7e8 <variable_expand@@Base>
  417734:	str	x0, [x19, #40]
  417738:	ldrb	w8, [x0]
  41773c:	cbz	w8, 417768 <main@@Base+0x187c>
  417740:	bl	40aae4 <lookup_file@@Base>
  417744:	mov	x20, x0
  417748:	cbnz	x0, 417c3c <main@@Base+0x1d50>
  41774c:	add	x0, x19, #0x28
  417750:	mov	w1, #0x10                  	// #16
  417754:	mov	w2, #0x1                   	// #1
  417758:	mov	x3, xzr
  41775c:	mov	w4, wzr
  417760:	bl	41def0 <parse_file_seq@@Base>
  417764:	cbnz	x0, 417c10 <main@@Base+0x1d24>
  417768:	ldr	x0, [x22, #3928]
  41776c:	cbnz	x0, 417c50 <main@@Base+0x1d64>
  417770:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  417774:	add	x0, x0, #0x55a
  417778:	mov	w1, #0xd                   	// #13
  41777c:	bl	424110 <lookup_variable@@Base>
  417780:	cbz	x0, 417794 <main@@Base+0x18a8>
  417784:	ldr	x8, [x0, #8]
  417788:	cbz	x8, 417794 <main@@Base+0x18a8>
  41778c:	ldrb	w8, [x8]
  417790:	cbnz	w8, 417cf0 <main@@Base+0x1e04>
  417794:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417798:	add	x1, x1, #0x573
  41779c:	mov	w2, #0x5                   	// #5
  4177a0:	mov	x0, xzr
  4177a4:	bl	406dc0 <dcgettext@plt>
  4177a8:	mov	x2, x0
  4177ac:	mov	x0, xzr
  4177b0:	mov	x1, xzr
  4177b4:	bl	41aff0 <fatal@@Base>
  4177b8:	adrp	x28, 42b000 <_IO_stdin_used@@Base+0x3680>
  4177bc:	mov	w25, wzr
  4177c0:	mov	w20, wzr
  4177c4:	mov	w24, wzr
  4177c8:	add	x28, x28, #0x438
  4177cc:	ldr	x0, [x26, #16]
  4177d0:	ldr	w8, [x0, #136]
  4177d4:	tbnz	w8, #10, 417830 <main@@Base+0x1944>
  4177d8:	ldrh	w27, [x26, #32]
  4177dc:	tbnz	w27, #2, 417908 <main@@Base+0x1a1c>
  4177e0:	str	w20, [x19]
  4177e4:	ldr	x20, [x26, #8]
  4177e8:	cbnz	x20, 4177f0 <main@@Base+0x1904>
  4177ec:	ldr	x20, [x0]
  4177f0:	mov	x0, x20
  4177f4:	bl	406750 <strlen@plt>
  4177f8:	mov	x21, x0
  4177fc:	mov	w2, #0x5                   	// #5
  417800:	mov	x0, xzr
  417804:	tbnz	w27, #1, 4178c8 <main@@Base+0x19dc>
  417808:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41780c:	add	x1, x1, #0x47e
  417810:	bl	406dc0 <dcgettext@plt>
  417814:	mov	x2, x0
  417818:	mov	x0, xzr
  41781c:	mov	x1, x21
  417820:	mov	x3, x20
  417824:	bl	41ae34 <error@@Base>
  417828:	mov	w20, #0x1                   	// #1
  41782c:	b	417908 <main@@Base+0x1a1c>
  417830:	tst	w8, #0x3
  417834:	b.ne	417860 <main@@Base+0x1974>  // b.any
  417838:	ldr	x8, [x0, #112]
  41783c:	cbnz	x8, 41784c <main@@Base+0x1960>
  417840:	mov	w1, wzr
  417844:	bl	420fec <f_mtime@@Base>
  417848:	mov	x8, x0
  41784c:	ldr	x9, [x22, w25, uxtw #3]
  417850:	cmp	x8, x9
  417854:	cset	w8, ne  // ne = any
  417858:	orr	w24, w24, w8
  41785c:	b	417908 <main@@Base+0x1a1c>
  417860:	ldrb	w8, [x26, #32]
  417864:	tbnz	w8, #2, 417908 <main@@Base+0x1a1c>
  417868:	ldr	x0, [x0]
  41786c:	mov	w23, w20
  417870:	bl	406750 <strlen@plt>
  417874:	mov	x20, x0
  417878:	mov	w2, #0x5                   	// #5
  41787c:	mov	x0, xzr
  417880:	mov	x1, x28
  417884:	bl	406dc0 <dcgettext@plt>
  417888:	ldr	x8, [x26, #16]
  41788c:	mov	x2, x0
  417890:	mov	x0, xzr
  417894:	mov	x1, x20
  417898:	ldr	x3, [x8]
  41789c:	bl	41ae34 <error@@Base>
  4178a0:	ldr	x8, [x26, #16]
  4178a4:	ldr	x0, [x8, #112]
  4178a8:	cbnz	x0, 4178b8 <main@@Base+0x19cc>
  4178ac:	mov	x0, x8
  4178b0:	mov	w1, wzr
  4178b4:	bl	420fec <f_mtime@@Base>
  4178b8:	cmp	x0, #0x1
  4178bc:	b.ne	4178f0 <main@@Base+0x1a04>  // b.any
  4178c0:	mov	w8, wzr
  4178c4:	b	4178fc <main@@Base+0x1a10>
  4178c8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4178cc:	add	x1, x1, #0x458
  4178d0:	bl	406dc0 <dcgettext@plt>
  4178d4:	mov	x2, x0
  4178d8:	mov	x0, xzr
  4178dc:	mov	x1, x21
  4178e0:	mov	x3, x20
  4178e4:	bl	41ae34 <error@@Base>
  4178e8:	ldr	w20, [x19]
  4178ec:	b	417908 <main@@Base+0x1a1c>
  4178f0:	ldr	x8, [x22, w25, uxtw #3]
  4178f4:	cmp	x0, x8
  4178f8:	cset	w8, ne  // ne = any
  4178fc:	mov	w20, w23
  417900:	orr	w24, w24, w8
  417904:	mov	w23, #0x2                   	// #2
  417908:	ldr	x26, [x26]
  41790c:	add	w25, w25, #0x1
  417910:	cbnz	x26, 4177cc <main@@Base+0x18e0>
  417914:	cbnz	w24, 417924 <main@@Base+0x1a38>
  417918:	cbz	w20, 41762c <main@@Base+0x1740>
  41791c:	mov	w0, #0x2                   	// #2
  417920:	bl	418a14 <die@@Base>
  417924:	mov	w0, wzr
  417928:	bl	40b054 <remove_intermediates@@Base>
  41792c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417930:	ldr	w8, [x8, #3256]
  417934:	cbz	w8, 41793c <main@@Base+0x1a50>
  417938:	bl	4191b4 <die@@Base+0x7a0>
  41793c:	mov	w0, wzr
  417940:	bl	419260 <die@@Base+0x84c>
  417944:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417948:	ldr	x8, [x8, #3896]
  41794c:	ldr	x24, [x19, #16]
  417950:	cbz	x8, 4179d8 <main@@Base+0x1aec>
  417954:	ldr	x8, [x19, #24]
  417958:	cmp	w8, #0x2
  41795c:	b.lt	4179d8 <main@@Base+0x1aec>  // b.tstop
  417960:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x680>
  417964:	mov	w22, wzr
  417968:	mov	w23, #0x1                   	// #1
  41796c:	add	x20, x20, #0x476
  417970:	ldr	x21, [x24, w23, sxtw #3]
  417974:	mov	w2, #0x2                   	// #2
  417978:	mov	x1, x20
  41797c:	mov	x0, x21
  417980:	bl	4069f0 <strncmp@plt>
  417984:	cbnz	w0, 4179c8 <main@@Base+0x1adc>
  417988:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41798c:	ldr	x8, [x8, #3896]
  417990:	ldrb	w9, [x21, #2]
  417994:	sxtw	x21, w23
  417998:	ldr	x8, [x8]
  41799c:	ldr	x2, [x8, w22, sxtw #3]
  4179a0:	cbnz	w9, 4179b0 <main@@Base+0x1ac4>
  4179a4:	add	x23, x21, #0x1
  4179a8:	str	x2, [x24, x23, lsl #3]
  4179ac:	b	4179c4 <main@@Base+0x1ad8>
  4179b0:	mov	w0, #0x2                   	// #2
  4179b4:	mov	x1, x20
  4179b8:	bl	419c18 <concat@@Base>
  4179bc:	bl	419e60 <xstrdup@@Base>
  4179c0:	str	x0, [x24, x21, lsl #3]
  4179c4:	add	w22, w22, #0x1
  4179c8:	ldr	x8, [x19, #24]
  4179cc:	add	w23, w23, #0x1
  4179d0:	cmp	w23, w8
  4179d4:	b.lt	417970 <main@@Base+0x1a84>  // b.tstop
  4179d8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4179dc:	ldr	x8, [x20, #3856]
  4179e0:	cbz	x8, 417a30 <main@@Base+0x1b44>
  4179e4:	ldr	x21, [x19, #24]
  4179e8:	add	w8, w21, #0x2
  4179ec:	sbfiz	x0, x8, #3, #32
  4179f0:	bl	419e14 <xmalloc@@Base>
  4179f4:	sbfiz	x21, x21, #3, #32
  4179f8:	mov	x1, x24
  4179fc:	mov	x2, x21
  417a00:	mov	x22, x20
  417a04:	mov	x20, x0
  417a08:	bl	406710 <memcpy@plt>
  417a0c:	ldr	x2, [x22, #3856]
  417a10:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417a14:	add	x1, x1, #0x49a
  417a18:	mov	w0, #0x2                   	// #2
  417a1c:	bl	419c18 <concat@@Base>
  417a20:	bl	419e60 <xstrdup@@Base>
  417a24:	add	x8, x20, x21
  417a28:	mov	x24, x20
  417a2c:	stp	x0, xzr, [x8]
  417a30:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417a34:	ldr	x8, [x8, #3880]
  417a38:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  417a3c:	cbz	x8, 417a7c <main@@Base+0x1b90>
  417a40:	ldr	w8, [x8, #8]
  417a44:	cbz	w8, 417a7c <main@@Base+0x1b90>
  417a48:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  417a4c:	ldr	x0, [x8, #4024]
  417a50:	cbz	x0, 417a70 <main@@Base+0x1b84>
  417a54:	bl	406c50 <chdir@plt>
  417a58:	tbz	w0, #31, 417a7c <main@@Base+0x1b90>
  417a5c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  417a60:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  417a64:	add	x0, x0, #0x49d
  417a68:	add	x1, x1, #0x3a9
  417a6c:	bl	41b1c0 <perror_with_name@@Base>
  417a70:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417a74:	add	x1, x1, #0x4a3
  417a78:	b	41779c <main@@Base+0x18b0>
  417a7c:	ldr	x9, [x19, #32]
  417a80:	ldrb	w8, [x20, #3236]
  417a84:	add	w21, w9, #0x1
  417a88:	tbz	w8, #0, 417ae4 <main@@Base+0x1bf8>
  417a8c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417a90:	add	x1, x1, #0x4cf
  417a94:	mov	w2, #0x5                   	// #5
  417a98:	mov	x0, xzr
  417a9c:	bl	406dc0 <dcgettext@plt>
  417aa0:	mov	w1, w21
  417aa4:	bl	406e60 <printf@plt>
  417aa8:	ldr	x1, [x24]
  417aac:	cbz	x1, 417acc <main@@Base+0x1be0>
  417ab0:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  417ab4:	add	x22, x24, #0x8
  417ab8:	add	x20, x20, #0x5b5
  417abc:	mov	x0, x20
  417ac0:	bl	406e60 <printf@plt>
  417ac4:	ldr	x1, [x22], #8
  417ac8:	cbnz	x1, 417abc <main@@Base+0x1bd0>
  417acc:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  417ad0:	ldr	x1, [x20, #2504]
  417ad4:	mov	w0, #0xa                   	// #10
  417ad8:	bl	406810 <putc@plt>
  417adc:	ldr	x0, [x20, #2504]
  417ae0:	bl	406cf0 <fflush@plt>
  417ae4:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  417ae8:	ldr	x28, [x25, #2520]
  417aec:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  417af0:	add	x27, x27, #0x36e
  417af4:	ldr	x20, [x28]
  417af8:	cbz	x20, 417ba4 <main@@Base+0x1cb8>
  417afc:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x3680>
  417b00:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x3680>
  417b04:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x3680>
  417b08:	add	x22, x22, #0x4e1
  417b0c:	add	x23, x23, #0x22a
  417b10:	add	x26, x26, #0x4f2
  417b14:	mov	w2, #0xa                   	// #10
  417b18:	mov	x0, x20
  417b1c:	mov	x1, x22
  417b20:	bl	4069f0 <strncmp@plt>
  417b24:	cbnz	w0, 417b50 <main@@Base+0x1c64>
  417b28:	sub	x0, sp, #0x30
  417b2c:	mov	sp, x0
  417b30:	str	x0, [x28]
  417b34:	adrp	x8, 442000 <just_print_flag@@Base>
  417b38:	ldr	w3, [x8, #32]
  417b3c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417b40:	add	x1, x1, #0x4ec
  417b44:	mov	x2, x23
  417b48:	bl	406800 <sprintf@plt>
  417b4c:	b	417b9c <main@@Base+0x1cb0>
  417b50:	mov	w2, #0xe                   	// #14
  417b54:	mov	x0, x20
  417b58:	mov	x1, x26
  417b5c:	bl	4069f0 <strncmp@plt>
  417b60:	cbnz	w0, 417b9c <main@@Base+0x1cb0>
  417b64:	sub	x0, sp, #0x30
  417b68:	mov	sp, x0
  417b6c:	str	x0, [x28]
  417b70:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  417b74:	ldr	w8, [x8, #1464]
  417b78:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417b7c:	add	x1, x1, #0x501
  417b80:	mov	w3, w21
  417b84:	cmp	w8, #0x0
  417b88:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  417b8c:	add	x8, x8, #0x3a9
  417b90:	csel	x2, x8, x27, eq  // eq = none
  417b94:	bl	406800 <sprintf@plt>
  417b98:	mov	w21, wzr
  417b9c:	ldr	x20, [x28, #8]!
  417ba0:	cbnz	x20, 417b14 <main@@Base+0x1c28>
  417ba4:	cbz	w21, 417be4 <main@@Base+0x1cf8>
  417ba8:	sub	x20, sp, #0x30
  417bac:	mov	sp, x20
  417bb0:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  417bb4:	ldr	w8, [x8, #1464]
  417bb8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417bbc:	add	x1, x1, #0x501
  417bc0:	mov	x0, x20
  417bc4:	cmp	w8, #0x0
  417bc8:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  417bcc:	add	x8, x8, #0x3a9
  417bd0:	csel	x2, x8, x27, eq  // eq = none
  417bd4:	mov	w3, w21
  417bd8:	bl	406800 <sprintf@plt>
  417bdc:	mov	x0, x20
  417be0:	bl	406ad0 <putenv@plt>
  417be4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417be8:	ldr	x0, [x8, #2504]
  417bec:	bl	406cf0 <fflush@plt>
  417bf0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417bf4:	ldr	x0, [x8, #2480]
  417bf8:	bl	406cf0 <fflush@plt>
  417bfc:	mov	w0, #0x1                   	// #1
  417c00:	bl	426de0 <jobserver_pre_child@@Base>
  417c04:	ldr	x1, [x25, #2520]
  417c08:	mov	x0, x24
  417c0c:	bl	414c4c <exec_command@@Base>
  417c10:	ldr	x8, [x0]
  417c14:	mov	x21, x0
  417c18:	cbnz	x8, 417ce4 <main@@Base+0x1df8>
  417c1c:	ldr	x0, [x21, #8]
  417c20:	bl	423690 <strcache_add@@Base>
  417c24:	bl	40ab6c <enter_file@@Base>
  417c28:	mov	x20, x0
  417c2c:	mov	x0, x21
  417c30:	str	xzr, [x21, #8]
  417c34:	bl	41a130 <free_ns_chain@@Base>
  417c38:	cbz	x20, 417768 <main@@Base+0x187c>
  417c3c:	mov	w0, #0x40                  	// #64
  417c40:	bl	419e38 <xcalloc@@Base>
  417c44:	str	x0, [x22, #3928]
  417c48:	str	x20, [x0, #16]
  417c4c:	cbz	x0, 417770 <main@@Base+0x1884>
  417c50:	ldrb	w8, [x25, #3236]
  417c54:	tbz	w8, #0, 417c80 <main@@Base+0x1d94>
  417c58:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417c5c:	add	x1, x1, #0x59e
  417c60:	mov	w2, #0x5                   	// #5
  417c64:	mov	x0, xzr
  417c68:	bl	406dc0 <dcgettext@plt>
  417c6c:	bl	406e60 <printf@plt>
  417c70:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417c74:	ldr	x0, [x8, #2504]
  417c78:	bl	406cf0 <fflush@plt>
  417c7c:	ldr	x0, [x22, #3928]
  417c80:	bl	41fc68 <update_goal_chain@@Base>
  417c84:	cmp	w0, #0x3
  417c88:	b.eq	417cd0 <main@@Base+0x1de4>  // b.none
  417c8c:	cmp	w0, #0x2
  417c90:	b.ne	417c98 <main@@Base+0x1dac>  // b.any
  417c94:	mov	w23, #0x1                   	// #1
  417c98:	adrp	x8, 442000 <just_print_flag@@Base>
  417c9c:	ldr	w8, [x8, #200]
  417ca0:	cbz	w8, 417cc8 <main@@Base+0x1ddc>
  417ca4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417ca8:	add	x1, x1, #0x5b9
  417cac:	mov	w2, #0x5                   	// #5
  417cb0:	mov	x0, xzr
  417cb4:	bl	406dc0 <dcgettext@plt>
  417cb8:	mov	x2, x0
  417cbc:	mov	x0, xzr
  417cc0:	mov	x1, xzr
  417cc4:	bl	41ae34 <error@@Base>
  417cc8:	mov	w0, w23
  417ccc:	bl	418a14 <die@@Base>
  417cd0:	mov	w23, #0x2                   	// #2
  417cd4:	adrp	x8, 442000 <just_print_flag@@Base>
  417cd8:	ldr	w8, [x8, #200]
  417cdc:	cbnz	w8, 417ca4 <main@@Base+0x1db8>
  417ce0:	b	417cc8 <main@@Base+0x1ddc>
  417ce4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417ce8:	add	x1, x1, #0x52e
  417cec:	b	41779c <main@@Base+0x18b0>
  417cf0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  417cf4:	add	x1, x1, #0x568
  417cf8:	b	41779c <main@@Base+0x18b0>
  417cfc:	mov	x0, x20
  417d00:	bl	41a2bc <pfatal_with_name@@Base>
  417d04:	bl	4188f8 <main@@Base+0x2a0c>
  417d08:	mov	w0, wzr
  417d0c:	bl	418a14 <die@@Base>
  417d10:	stp	x29, x30, [sp, #-48]!
  417d14:	mov	x2, x1
  417d18:	add	x9, x2, #0x13
  417d1c:	mov	x8, sp
  417d20:	and	x9, x9, #0xfffffffffffffff0
  417d24:	stp	x20, x19, [sp, #32]
  417d28:	sub	x19, x8, x9
  417d2c:	add	x20, x2, x19
  417d30:	stp	x22, x21, [sp, #16]
  417d34:	mov	x29, sp
  417d38:	mov	x1, x0
  417d3c:	mov	sp, x19
  417d40:	mov	w8, #0x2824                	// #10276
  417d44:	mov	x0, x19
  417d48:	strh	w8, [x0], #2
  417d4c:	bl	406710 <memcpy@plt>
  417d50:	mov	w8, #0x29                  	// #41
  417d54:	mov	x0, x19
  417d58:	strh	w8, [x20, #2]
  417d5c:	bl	40a7e8 <variable_expand@@Base>
  417d60:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  417d64:	sub	x20, x0, #0x1
  417d68:	add	x21, x21, #0xcf0
  417d6c:	ldrb	w8, [x20, #1]!
  417d70:	ldrh	w8, [x21, x8, lsl #1]
  417d74:	tst	w8, #0x6
  417d78:	b.ne	417d6c <main@@Base+0x1e80>  // b.any
  417d7c:	mov	x0, x20
  417d80:	bl	406750 <strlen@plt>
  417d84:	cbz	x0, 417e5c <main@@Base+0x1f70>
  417d88:	lsl	x8, x0, #3
  417d8c:	add	x8, x8, #0x1f
  417d90:	mov	x9, sp
  417d94:	and	x8, x8, #0xfffffffffffffff0
  417d98:	sub	x19, x9, x8
  417d9c:	mov	sp, x19
  417da0:	add	x9, x0, #0x11
  417da4:	mov	x8, sp
  417da8:	and	x9, x9, #0xfffffffffffffff0
  417dac:	sub	x22, x8, x9
  417db0:	mov	sp, x22
  417db4:	mov	w9, #0x2d                  	// #45
  417db8:	mov	x8, x22
  417dbc:	strb	w9, [x8], #1
  417dc0:	mov	w9, #0x1                   	// #1
  417dc4:	stp	xzr, x8, [x19]
  417dc8:	b	417de8 <main@@Base+0x1efc>
  417dcc:	mov	x11, x20
  417dd0:	ldrb	w12, [x11, #1]!
  417dd4:	cbz	w12, 417dfc <main@@Base+0x1f10>
  417dd8:	mov	w10, w12
  417ddc:	mov	x20, x11
  417de0:	add	x20, x20, #0x1
  417de4:	sturb	w10, [x8, #-1]
  417de8:	ldrb	w10, [x20]
  417dec:	add	x8, x8, #0x1
  417df0:	cmp	w10, #0x5c
  417df4:	b.eq	417dcc <main@@Base+0x1ee0>  // b.none
  417df8:	cbz	w10, 417e20 <main@@Base+0x1f34>
  417dfc:	ldrh	w11, [x21, x10, lsl #1]
  417e00:	tbz	w11, #1, 417de0 <main@@Base+0x1ef4>
  417e04:	add	x9, x9, #0x1
  417e08:	sturb	wzr, [x8, #-1]
  417e0c:	str	x8, [x19, x9, lsl #3]
  417e10:	ldrb	w10, [x20, #1]!
  417e14:	ldrh	w10, [x21, x10, lsl #1]
  417e18:	tbnz	w10, #1, 417e10 <main@@Base+0x1f24>
  417e1c:	b	417de8 <main@@Base+0x1efc>
  417e20:	add	w20, w9, #0x1
  417e24:	str	xzr, [x19, w20, uxtw #3]
  417e28:	ldr	x0, [x19, #8]
  417e2c:	sturb	wzr, [x8, #-1]
  417e30:	ldrb	w8, [x0]
  417e34:	cmp	w8, #0x2d
  417e38:	b.eq	417e4c <main@@Base+0x1f60>  // b.none
  417e3c:	mov	w1, #0x3d                  	// #61
  417e40:	bl	406c80 <strchr@plt>
  417e44:	cbnz	x0, 417e4c <main@@Base+0x1f60>
  417e48:	str	x22, [x19, #8]
  417e4c:	mov	w2, #0x1                   	// #1
  417e50:	mov	w0, w20
  417e54:	mov	x1, x19
  417e58:	bl	417e70 <main@@Base+0x1f84>
  417e5c:	mov	sp, x29
  417e60:	ldp	x20, x19, [sp, #32]
  417e64:	ldp	x22, x21, [sp, #16]
  417e68:	ldp	x29, x30, [sp], #48
  417e6c:	ret
  417e70:	sub	sp, sp, #0x70
  417e74:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417e78:	ldrb	w8, [x8, #3952]
  417e7c:	stp	x22, x21, [sp, #80]
  417e80:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  417e84:	stp	x20, x19, [sp, #96]
  417e88:	mov	w19, w2
  417e8c:	mov	x20, x1
  417e90:	mov	w21, w0
  417e94:	add	x22, x22, #0xf70
  417e98:	stp	x29, x30, [sp, #16]
  417e9c:	stp	x28, x27, [sp, #32]
  417ea0:	stp	x26, x25, [sp, #48]
  417ea4:	stp	x24, x23, [sp, #64]
  417ea8:	add	x29, sp, #0x10
  417eac:	cbnz	w8, 417ff0 <main@@Base+0x2104>
  417eb0:	mov	w17, #0x2d                  	// #45
  417eb4:	mov	x8, x22
  417eb8:	adrp	x11, 42a000 <_IO_stdin_used@@Base+0x2680>
  417ebc:	mov	x12, #0x205                 	// #517
  417ec0:	adrp	x13, 42a000 <_IO_stdin_used@@Base+0x2680>
  417ec4:	adrp	x14, 43e000 <memcpy@GLIBC_2.17>
  417ec8:	mov	x9, xzr
  417ecc:	mov	x10, xzr
  417ed0:	add	x11, x11, #0x8e8
  417ed4:	movk	x12, #0x10, lsl #32
  417ed8:	add	x13, x13, #0x3a9
  417edc:	add	x14, x14, #0xef8
  417ee0:	mov	w15, #0x1                   	// #1
  417ee4:	mov	w16, #0x3a                  	// #58
  417ee8:	strb	w17, [x8], #1
  417eec:	mov	w17, #0x15800000            	// #360710144
  417ef0:	b	417f14 <main@@Base+0x2028>
  417ef4:	mov	w0, wzr
  417ef8:	add	x18, x14, x9
  417efc:	str	w0, [x18, #240]
  417f00:	add	x9, x9, #0x20
  417f04:	add	x10, x10, #0x1
  417f08:	cmp	x9, #0x480
  417f0c:	add	x11, x11, #0x30
  417f10:	b.eq	417f90 <main@@Base+0x20a4>  // b.none
  417f14:	lsr	x0, x12, x10
  417f18:	mov	x18, x13
  417f1c:	tbnz	w0, #0, 417f24 <main@@Base+0x2038>
  417f20:	ldr	x18, [x11, #40]
  417f24:	ldr	w0, [x11]
  417f28:	add	x1, x14, x9
  417f2c:	str	x18, [x1, #232]
  417f30:	sub	x18, x10, #0x1c
  417f34:	cmp	x18, #0x8
  417f38:	str	xzr, [x1, #248]
  417f3c:	str	w0, [x1, #256]
  417f40:	b.cc	417f48 <main@@Base+0x205c>  // b.lo, b.ul, b.last
  417f44:	strb	w0, [x8], #1
  417f48:	ldr	w0, [x11, #4]
  417f4c:	cmp	w0, #0x7
  417f50:	b.hi	417f00 <main@@Base+0x2014>  // b.pmore
  417f54:	lsl	w0, w15, w0
  417f58:	tst	w0, #0x7c
  417f5c:	b.eq	417ef4 <main@@Base+0x2008>  // b.none
  417f60:	cmp	x18, #0x8
  417f64:	b.cc	417f6c <main@@Base+0x2080>  // b.lo, b.ul, b.last
  417f68:	strb	w16, [x8], #1
  417f6c:	lsr	x1, x17, x10
  417f70:	tst	x1, #0x1
  417f74:	cinc	w0, w15, ne  // ne = any
  417f78:	tbz	w1, #0, 417ef8 <main@@Base+0x200c>
  417f7c:	cmp	x18, #0x8
  417f80:	b.cc	417ef8 <main@@Base+0x200c>  // b.lo, b.ul, b.last
  417f84:	strb	w16, [x8], #1
  417f88:	mov	w0, #0x2                   	// #2
  417f8c:	b	417ef8 <main@@Base+0x200c>
  417f90:	strb	wzr, [x8]
  417f94:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  417f98:	add	x8, x8, #0xfd8
  417f9c:	ldp	q0, q1, [x8]
  417fa0:	adrp	x9, 43f000 <stopchar_map@@Base+0x310>
  417fa4:	add	x9, x9, #0x460
  417fa8:	ldp	q2, q3, [x8, #32]
  417fac:	stp	q0, q1, [x9]
  417fb0:	ldp	q0, q1, [x8, #64]
  417fb4:	str	xzr, [x9, #288]
  417fb8:	stp	q2, q3, [x9, #32]
  417fbc:	ldp	q3, q2, [x8, #96]
  417fc0:	stp	q0, q1, [x9, #64]
  417fc4:	ldp	q0, q1, [x8, #128]
  417fc8:	stp	q3, q2, [x9, #96]
  417fcc:	ldp	q3, q2, [x8, #160]
  417fd0:	stp	q0, q1, [x9, #128]
  417fd4:	ldp	q1, q0, [x8, #192]
  417fd8:	stp	q3, q2, [x9, #160]
  417fdc:	ldp	q3, q2, [x8, #224]
  417fe0:	stp	q1, q0, [x9, #192]
  417fe4:	ldp	q0, q1, [x8, #256]
  417fe8:	stp	q3, q2, [x9, #224]
  417fec:	stp	q0, q1, [x9, #256]
  417ff0:	cmp	w19, #0x0
  417ff4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  417ff8:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  417ffc:	cset	w9, eq  // eq = none
  418000:	cmp	w21, #0x1
  418004:	str	w9, [x8, #2528]
  418008:	str	wzr, [x26, #2496]
  41800c:	b.lt	418024 <main@@Base+0x2138>  // b.tstop
  418010:	adrp	x27, 42a000 <_IO_stdin_used@@Base+0x2680>
  418014:	mov	w9, wzr
  418018:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  41801c:	add	x27, x27, #0x8e8
  418020:	b	41804c <main@@Base+0x2160>
  418024:	mov	w8, wzr
  418028:	mov	w23, wzr
  41802c:	b	418630 <main@@Base+0x2744>
  418030:	mov	x0, x24
  418034:	mov	w1, w19
  418038:	bl	419328 <die@@Base+0x914>
  41803c:	mov	w9, w23
  418040:	ldr	w8, [x26, #2496]
  418044:	cmp	w8, w21
  418048:	b.ge	41860c <main@@Base+0x2720>  // b.tcont
  41804c:	add	x3, x22, #0x70
  418050:	mov	w0, w21
  418054:	mov	x1, x20
  418058:	mov	x2, x22
  41805c:	mov	x4, xzr
  418060:	mov	w23, w9
  418064:	bl	406bf0 <getopt_long@plt>
  418068:	add	w8, w0, #0x1
  41806c:	cmp	w8, #0x109
  418070:	b.hi	41803c <main@@Base+0x2150>  // b.pmore
  418074:	ldr	x24, [x25, #2488]
  418078:	adrp	x11, 42a000 <_IO_stdin_used@@Base+0x2680>
  41807c:	add	x11, x11, #0x6a8
  418080:	adr	x10, 418030 <main@@Base+0x2144>
  418084:	ldrh	w9, [x11, x8, lsl #1]
  418088:	add	x10, x10, x9, lsl #2
  41808c:	mov	w9, #0x1                   	// #1
  418090:	mov	x28, x27
  418094:	br	x10
  418098:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41809c:	add	x28, x28, #0x918
  4180a0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4180a4:	b	4180b4 <main@@Base+0x21c8>
  4180a8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4180ac:	add	x28, x28, #0xf78
  4180b0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4180b4:	mov	w8, #0x1                   	// #1
  4180b8:	ldr	w10, [x28, #4]
  4180bc:	cmp	w10, #0x7
  4180c0:	b.ls	4182d8 <main@@Base+0x23ec>  // b.plast
  4180c4:	b	418614 <main@@Base+0x2728>
  4180c8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4180cc:	add	x28, x28, #0xf48
  4180d0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4180d4:	b	4180b4 <main@@Base+0x21c8>
  4180d8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4180dc:	add	x28, x28, #0xe58
  4180e0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4180e4:	b	4180b4 <main@@Base+0x21c8>
  4180e8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4180ec:	add	x28, x28, #0xaf8
  4180f0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4180f4:	b	4180b4 <main@@Base+0x21c8>
  4180f8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4180fc:	add	x28, x28, #0xac8
  418100:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418104:	b	4180b4 <main@@Base+0x21c8>
  418108:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41810c:	add	x28, x28, #0xc78
  418110:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418114:	b	4180b4 <main@@Base+0x21c8>
  418118:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41811c:	add	x28, x28, #0xdc8
  418120:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418124:	b	4180b4 <main@@Base+0x21c8>
  418128:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41812c:	add	x28, x28, #0xbe8
  418130:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418134:	b	4180b4 <main@@Base+0x21c8>
  418138:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41813c:	add	x28, x28, #0xa38
  418140:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418144:	b	4180b4 <main@@Base+0x21c8>
  418148:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41814c:	add	x28, x28, #0xd08
  418150:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418154:	b	4180b4 <main@@Base+0x21c8>
  418158:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41815c:	add	x28, x28, #0x9a8
  418160:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418164:	b	4180b4 <main@@Base+0x21c8>
  418168:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41816c:	add	x28, x28, #0xa68
  418170:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418174:	b	4180b4 <main@@Base+0x21c8>
  418178:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41817c:	add	x28, x28, #0xd68
  418180:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418184:	b	4180b4 <main@@Base+0x21c8>
  418188:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41818c:	add	x28, x28, #0xca8
  418190:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418194:	b	4180b4 <main@@Base+0x21c8>
  418198:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41819c:	add	x28, x28, #0xee8
  4181a0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181a4:	b	4180b4 <main@@Base+0x21c8>
  4181a8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181ac:	add	x28, x28, #0xf18
  4181b0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181b4:	b	4180b4 <main@@Base+0x21c8>
  4181b8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181bc:	add	x28, x28, #0xc48
  4181c0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181c4:	b	4180b4 <main@@Base+0x21c8>
  4181c8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181cc:	add	x28, x28, #0xbb8
  4181d0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181d4:	b	4180b4 <main@@Base+0x21c8>
  4181d8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181dc:	add	x28, x28, #0xb88
  4181e0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181e4:	b	4180b4 <main@@Base+0x21c8>
  4181e8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181ec:	add	x28, x28, #0xe28
  4181f0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4181f4:	b	4180b4 <main@@Base+0x21c8>
  4181f8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4181fc:	add	x28, x28, #0xa98
  418200:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418204:	b	4180b4 <main@@Base+0x21c8>
  418208:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41820c:	add	x28, x28, #0x9d8
  418210:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418214:	b	4180b4 <main@@Base+0x21c8>
  418218:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41821c:	add	x28, x28, #0xb58
  418220:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418224:	b	4180b4 <main@@Base+0x21c8>
  418228:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41822c:	add	x28, x28, #0xdf8
  418230:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418234:	b	4180b4 <main@@Base+0x21c8>
  418238:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41823c:	add	x28, x28, #0x978
  418240:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418244:	b	4180b4 <main@@Base+0x21c8>
  418248:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41824c:	add	x28, x28, #0x948
  418250:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418254:	b	4180b4 <main@@Base+0x21c8>
  418258:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41825c:	add	x28, x28, #0xa08
  418260:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418264:	b	4180b4 <main@@Base+0x21c8>
  418268:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41826c:	add	x28, x28, #0xcd8
  418270:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418274:	b	4180b4 <main@@Base+0x21c8>
  418278:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41827c:	add	x28, x28, #0xc18
  418280:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418284:	b	4180b4 <main@@Base+0x21c8>
  418288:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41828c:	add	x28, x28, #0xd98
  418290:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  418294:	b	4180b4 <main@@Base+0x21c8>
  418298:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  41829c:	add	x28, x28, #0xd38
  4182a0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4182a4:	b	4180b4 <main@@Base+0x21c8>
  4182a8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4182ac:	add	x28, x28, #0xeb8
  4182b0:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4182b4:	b	4180b4 <main@@Base+0x21c8>
  4182b8:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4182bc:	add	x28, x28, #0xb28
  4182c0:	cbz	w19, 4180b4 <main@@Base+0x21c8>
  4182c4:	ldrb	w8, [x28, #16]
  4182c8:	and	w8, w8, #0x1
  4182cc:	ldr	w10, [x28, #4]
  4182d0:	cmp	w10, #0x7
  4182d4:	b.hi	418614 <main@@Base+0x2728>  // b.pmore
  4182d8:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  4182dc:	add	x9, x9, #0x8bc
  4182e0:	adr	x11, 418040 <main@@Base+0x2154>
  4182e4:	ldrb	w12, [x9, x10]
  4182e8:	add	x11, x11, x12, lsl #2
  4182ec:	mov	w9, w23
  4182f0:	br	x11
  4182f4:	cbz	w8, 41803c <main@@Base+0x2150>
  4182f8:	cbz	x24, 4183a8 <main@@Base+0x24bc>
  4182fc:	ldrb	w8, [x24]
  418300:	cbz	w8, 41847c <main@@Base+0x2590>
  418304:	mov	x22, x27
  418308:	mov	x27, x25
  41830c:	cmp	w10, #0x2
  418310:	b.ne	4183c8 <main@@Base+0x24dc>  // b.any
  418314:	ldr	x25, [x28, #8]
  418318:	ldr	x0, [x25]
  41831c:	bl	406c60 <free@plt>
  418320:	mov	x0, x24
  418324:	bl	419e60 <xstrdup@@Base>
  418328:	str	x0, [x25]
  41832c:	b	418508 <main@@Base+0x261c>
  418330:	cbz	w8, 41803c <main@@Base+0x2150>
  418334:	ldr	x8, [x28, #8]
  418338:	cmp	w10, #0x0
  41833c:	cset	w9, eq  // eq = none
  418340:	str	w9, [x8]
  418344:	b	41803c <main@@Base+0x2150>
  418348:	cbz	x24, 418414 <main@@Base+0x2528>
  41834c:	cbz	w8, 41803c <main@@Base+0x2150>
  418350:	cbz	x24, 418520 <main@@Base+0x2634>
  418354:	mov	x0, x24
  418358:	mov	x1, xzr
  41835c:	bl	4067c0 <strtod@plt>
  418360:	b	418528 <main@@Base+0x263c>
  418364:	cbz	x24, 418448 <main@@Base+0x255c>
  418368:	cbz	w8, 41803c <main@@Base+0x2150>
  41836c:	cbz	x24, 418540 <main@@Base+0x2654>
  418370:	mov	w2, #0xa                   	// #10
  418374:	mov	x0, x24
  418378:	mov	x1, xzr
  41837c:	bl	406c30 <strtol@plt>
  418380:	ldrb	w8, [x24], #1
  418384:	sub	w9, w8, #0x30
  418388:	cmp	w9, #0xa
  41838c:	b.cc	418380 <main@@Base+0x2494>  // b.lo, b.ul, b.last
  418390:	cmp	w0, #0x1
  418394:	b.lt	4185bc <main@@Base+0x26d0>  // b.tstop
  418398:	cbnz	w8, 4185bc <main@@Base+0x26d0>
  41839c:	ldr	x8, [x28, #8]
  4183a0:	str	w0, [x8]
  4183a4:	b	41803c <main@@Base+0x2150>
  4183a8:	ldr	x0, [x28, #24]
  4183ac:	bl	419e60 <xstrdup@@Base>
  4183b0:	ldr	w10, [x28, #4]
  4183b4:	mov	x24, x0
  4183b8:	mov	x22, x27
  4183bc:	mov	x27, x25
  4183c0:	cmp	w10, #0x2
  4183c4:	b.eq	418314 <main@@Base+0x2428>  // b.none
  4183c8:	ldr	x8, [x28, #8]
  4183cc:	ldr	x25, [x8]
  4183d0:	cbz	x25, 4184ac <main@@Base+0x25c0>
  4183d4:	ldp	w9, w8, [x25, #8]
  4183d8:	sub	w10, w8, #0x1
  4183dc:	cmp	w9, w10
  4183e0:	b.ne	4183fc <main@@Base+0x2510>  // b.any
  4183e4:	ldr	x0, [x25]
  4183e8:	add	w8, w8, #0x5
  4183ec:	lsl	x1, x8, #3
  4183f0:	str	w8, [x25, #12]
  4183f4:	bl	419de0 <xrealloc@@Base>
  4183f8:	str	x0, [x25]
  4183fc:	ldr	w8, [x28, #4]
  418400:	mov	x0, x24
  418404:	cmp	w8, #0x4
  418408:	b.ne	4184e8 <main@@Base+0x25fc>  // b.any
  41840c:	bl	4194d0 <die@@Base+0xabc>
  418410:	b	4184ec <main@@Base+0x2600>
  418414:	ldrsw	x9, [x26, #2496]
  418418:	cmp	w9, w21
  41841c:	b.ge	418534 <main@@Base+0x2648>  // b.tcont
  418420:	ldr	x24, [x20, x9, lsl #3]
  418424:	ldrb	w10, [x24]
  418428:	cmp	w10, #0x2e
  41842c:	b.eq	4185ec <main@@Base+0x2700>  // b.none
  418430:	sub	w10, w10, #0x30
  418434:	cmp	w10, #0x9
  418438:	b.ls	4185ec <main@@Base+0x2700>  // b.plast
  41843c:	mov	x24, xzr
  418440:	cbz	w8, 41803c <main@@Base+0x2150>
  418444:	b	418350 <main@@Base+0x2464>
  418448:	ldrsw	x9, [x26, #2496]
  41844c:	cmp	w9, w21
  418450:	b.ge	418554 <main@@Base+0x2668>  // b.tcont
  418454:	ldr	x24, [x20, x9, lsl #3]
  418458:	mov	x10, x24
  41845c:	ldrb	w11, [x10], #1
  418460:	sub	w12, w11, #0x30
  418464:	cmp	w12, #0xa
  418468:	b.cc	41845c <main@@Base+0x2570>  // b.lo, b.ul, b.last
  41846c:	cbz	w11, 4185fc <main@@Base+0x2710>
  418470:	mov	x24, xzr
  418474:	cbz	w8, 41803c <main@@Base+0x2150>
  418478:	b	41836c <main@@Base+0x2480>
  41847c:	ldr	w8, [x28]
  418480:	mov	w9, #0x63                  	// #99
  418484:	sturh	w9, [x29, #-4]
  418488:	cmp	w8, #0xff
  41848c:	b.gt	418560 <main@@Base+0x2674>
  418490:	sub	x23, x29, #0x4
  418494:	sturb	w8, [x29, #-4]
  418498:	b	418564 <main@@Base+0x2678>
  41849c:	adrp	x28, 42a000 <_IO_stdin_used@@Base+0x2680>
  4184a0:	add	x28, x28, #0xe88
  4184a4:	cbnz	w19, 4182c4 <main@@Base+0x23d8>
  4184a8:	b	4180b4 <main@@Base+0x21c8>
  4184ac:	mov	w0, #0x10                  	// #16
  4184b0:	bl	419e14 <xmalloc@@Base>
  4184b4:	adrp	x8, 42a000 <_IO_stdin_used@@Base+0x2680>
  4184b8:	ldr	d0, [x8, #1696]
  4184bc:	mov	x25, x0
  4184c0:	str	d0, [x0, #8]
  4184c4:	mov	w0, #0x28                  	// #40
  4184c8:	bl	419e14 <xmalloc@@Base>
  4184cc:	str	x0, [x25]
  4184d0:	ldr	x8, [x28, #8]
  4184d4:	str	x25, [x8]
  4184d8:	ldr	w8, [x28, #4]
  4184dc:	mov	x0, x24
  4184e0:	cmp	w8, #0x4
  4184e4:	b.eq	41840c <main@@Base+0x2520>  // b.none
  4184e8:	bl	419e60 <xstrdup@@Base>
  4184ec:	ldr	w8, [x25, #8]
  4184f0:	ldr	x9, [x25]
  4184f4:	add	w10, w8, #0x1
  4184f8:	str	w10, [x25, #8]
  4184fc:	str	x0, [x9, w8, uxtw #3]
  418500:	ldr	x8, [x25]
  418504:	str	xzr, [x8, w10, uxtw #3]
  418508:	mov	x25, x27
  41850c:	mov	x27, x22
  418510:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  418514:	mov	w9, w23
  418518:	add	x22, x22, #0xf70
  41851c:	b	418040 <main@@Base+0x2154>
  418520:	ldr	x8, [x28, #24]
  418524:	ldr	d0, [x8]
  418528:	ldr	x8, [x28, #8]
  41852c:	str	d0, [x8]
  418530:	b	41803c <main@@Base+0x2150>
  418534:	mov	x24, xzr
  418538:	cbz	w8, 41803c <main@@Base+0x2150>
  41853c:	b	418350 <main@@Base+0x2464>
  418540:	ldr	x8, [x28, #24]
  418544:	ldr	x9, [x28, #8]
  418548:	ldr	w8, [x8]
  41854c:	str	w8, [x9]
  418550:	b	41803c <main@@Base+0x2150>
  418554:	mov	x24, xzr
  418558:	cbz	w8, 41803c <main@@Base+0x2150>
  41855c:	b	41836c <main@@Base+0x2480>
  418560:	ldr	x23, [x28, #40]
  418564:	mov	x0, x23
  418568:	bl	406750 <strlen@plt>
  41856c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  418570:	mov	x24, x0
  418574:	add	x1, x1, #0x5f7
  418578:	mov	w2, #0x5                   	// #5
  41857c:	mov	x0, xzr
  418580:	bl	406dc0 <dcgettext@plt>
  418584:	ldr	w8, [x28]
  418588:	adrp	x9, 42b000 <_IO_stdin_used@@Base+0x3680>
  41858c:	adrp	x10, 42c000 <_IO_stdin_used@@Base+0x4680>
  418590:	add	x9, x9, #0x62e
  418594:	add	x10, x10, #0x36e
  418598:	cmp	w8, #0x100
  41859c:	mov	x2, x0
  4185a0:	csel	x3, x10, x9, lt  // lt = tstop
  4185a4:	mov	x0, xzr
  4185a8:	mov	x1, x24
  4185ac:	mov	x4, x23
  4185b0:	bl	41ae34 <error@@Base>
  4185b4:	mov	w9, #0x1                   	// #1
  4185b8:	b	418040 <main@@Base+0x2154>
  4185bc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4185c0:	add	x1, x1, #0x631
  4185c4:	mov	w2, #0x5                   	// #5
  4185c8:	mov	x0, xzr
  4185cc:	bl	406dc0 <dcgettext@plt>
  4185d0:	ldr	w3, [x28]
  4185d4:	mov	x2, x0
  4185d8:	mov	x0, xzr
  4185dc:	mov	x1, xzr
  4185e0:	bl	41ae34 <error@@Base>
  4185e4:	mov	w9, #0x1                   	// #1
  4185e8:	b	418040 <main@@Base+0x2154>
  4185ec:	add	w9, w9, #0x1
  4185f0:	str	w9, [x26, #2496]
  4185f4:	cbz	w8, 41803c <main@@Base+0x2150>
  4185f8:	b	418350 <main@@Base+0x2464>
  4185fc:	add	w9, w9, #0x1
  418600:	str	w9, [x26, #2496]
  418604:	cbz	w8, 41803c <main@@Base+0x2150>
  418608:	b	41836c <main@@Base+0x2480>
  41860c:	mov	w23, w9
  418610:	b	418630 <main@@Base+0x2744>
  418614:	bl	406b70 <abort@plt>
  418618:	add	w9, w8, #0x1
  41861c:	str	w9, [x26, #2496]
  418620:	ldr	x0, [x20, w8, sxtw #3]
  418624:	mov	w1, w19
  418628:	bl	419328 <die@@Base+0x914>
  41862c:	ldr	w8, [x26, #2496]
  418630:	cmp	w8, w21
  418634:	b.lt	418618 <main@@Base+0x272c>  // b.tstop
  418638:	cbnz	w19, 41864c <main@@Base+0x2760>
  41863c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418640:	ldr	w8, [x8, #3844]
  418644:	orr	w8, w8, w23
  418648:	cbnz	w8, 4188ac <main@@Base+0x29c0>
  41864c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  418650:	ldr	w8, [x20, #3848]
  418654:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  418658:	cbz	w8, 418664 <main@@Base+0x2778>
  41865c:	mov	w8, #0xfff                 	// #4095
  418660:	str	w8, [x21, #3236]
  418664:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418668:	ldr	x8, [x8, #3944]
  41866c:	cbz	x8, 41873c <main@@Base+0x2850>
  418670:	ldr	x22, [x8]
  418674:	ldr	x19, [x22]
  418678:	cbz	x19, 41873c <main@@Base+0x2850>
  41867c:	bl	4068f0 <__ctype_tolower_loc@plt>
  418680:	ldr	x8, [x0]
  418684:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  418688:	add	x9, x9, #0x8c4
  41868c:	mov	w10, #0x9                   	// #9
  418690:	mov	w11, #0x101                 	// #257
  418694:	b	4186a0 <main@@Base+0x27b4>
  418698:	ldr	x19, [x22, #8]!
  41869c:	cbz	x19, 41873c <main@@Base+0x2850>
  4186a0:	ldrb	w12, [x19]
  4186a4:	and	x12, x12, #0xff
  4186a8:	ldr	w12, [x8, x12, lsl #2]
  4186ac:	sub	w12, w12, #0x61
  4186b0:	cmp	w12, #0x15
  4186b4:	b.hi	418878 <main@@Base+0x298c>  // b.pmore
  4186b8:	adr	x13, 4186cc <main@@Base+0x27e0>
  4186bc:	ldrb	w14, [x9, x12]
  4186c0:	add	x13, x13, x14, lsl #2
  4186c4:	mov	w12, wzr
  4186c8:	br	x13
  4186cc:	ldr	w12, [x21, #3236]
  4186d0:	orr	w12, w12, #0xfff
  4186d4:	b	418710 <main@@Base+0x2824>
  4186d8:	ldr	w12, [x21, #3236]
  4186dc:	orr	w12, w12, w10
  4186e0:	b	418710 <main@@Base+0x2824>
  4186e4:	ldr	w12, [x21, #3236]
  4186e8:	orr	w12, w12, #0x1
  4186ec:	b	418710 <main@@Base+0x2824>
  4186f0:	ldr	w12, [x21, #3236]
  4186f4:	orr	w12, w12, w11
  4186f8:	b	418710 <main@@Base+0x2824>
  4186fc:	ldr	w12, [x21, #3236]
  418700:	orr	w12, w12, #0x3
  418704:	b	418710 <main@@Base+0x2824>
  418708:	ldr	w12, [x21, #3236]
  41870c:	orr	w12, w12, #0x4
  418710:	add	x19, x19, #0x1
  418714:	str	w12, [x21, #3236]
  418718:	ldrb	w12, [x19], #1
  41871c:	cbz	w12, 418698 <main@@Base+0x27ac>
  418720:	cmp	w12, #0x2c
  418724:	b.eq	418730 <main@@Base+0x2844>  // b.none
  418728:	cmp	w12, #0x20
  41872c:	b.ne	418718 <main@@Base+0x282c>  // b.any
  418730:	ldrb	w12, [x19]
  418734:	cbnz	w12, 4186a4 <main@@Base+0x27b8>
  418738:	b	418698 <main@@Base+0x27ac>
  41873c:	ldr	w8, [x21, #3236]
  418740:	cbz	w8, 418760 <main@@Base+0x2874>
  418744:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  418748:	mov	w9, #0x1                   	// #1
  41874c:	str	w9, [x8, #4032]
  418750:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  418754:	ldr	x19, [x20, #3240]
  418758:	cbnz	x19, 418770 <main@@Base+0x2884>
  41875c:	b	418848 <main@@Base+0x295c>
  418760:	str	wzr, [x20, #3848]
  418764:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  418768:	ldr	x19, [x20, #3240]
  41876c:	cbz	x19, 418848 <main@@Base+0x295c>
  418770:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  418774:	add	x8, x8, #0x31f
  418778:	cmp	x19, x8
  41877c:	b.eq	41882c <main@@Base+0x2940>  // b.none
  418780:	ldrb	w21, [x19]
  418784:	cmp	w21, #0x6e
  418788:	b.ne	4187a0 <main@@Base+0x28b4>  // b.any
  41878c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  418790:	add	x0, x19, #0x1
  418794:	add	x1, x1, #0x320
  418798:	bl	406c10 <strcmp@plt>
  41879c:	cbz	w0, 41882c <main@@Base+0x2940>
  4187a0:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x1680>
  4187a4:	add	x8, x8, #0xc7b
  4187a8:	cmp	x19, x8
  4187ac:	b.eq	418834 <main@@Base+0x2948>  // b.none
  4187b0:	cmp	w21, #0x6c
  4187b4:	b.ne	4187cc <main@@Base+0x28e0>  // b.any
  4187b8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  4187bc:	add	x0, x19, #0x1
  4187c0:	add	x1, x1, #0xc7c
  4187c4:	bl	406c10 <strcmp@plt>
  4187c8:	cbz	w0, 418834 <main@@Base+0x2948>
  4187cc:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  4187d0:	add	x8, x8, #0x553
  4187d4:	cmp	x19, x8
  4187d8:	b.eq	41883c <main@@Base+0x2950>  // b.none
  4187dc:	cmp	w21, #0x74
  4187e0:	b.ne	4187f8 <main@@Base+0x290c>  // b.any
  4187e4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4187e8:	add	x0, x19, #0x1
  4187ec:	add	x1, x1, #0x554
  4187f0:	bl	406c10 <strcmp@plt>
  4187f4:	cbz	w0, 41883c <main@@Base+0x2950>
  4187f8:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  4187fc:	add	x8, x8, #0x324
  418800:	cmp	x19, x8
  418804:	b.eq	418824 <main@@Base+0x2938>  // b.none
  418808:	cmp	w21, #0x72
  41880c:	b.ne	4188c4 <main@@Base+0x29d8>  // b.any
  418810:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  418814:	add	x0, x19, #0x1
  418818:	add	x1, x1, #0x325
  41881c:	bl	406c10 <strcmp@plt>
  418820:	cbnz	w0, 4188c4 <main@@Base+0x29d8>
  418824:	mov	w8, #0x3                   	// #3
  418828:	b	418840 <main@@Base+0x2954>
  41882c:	mov	w8, wzr
  418830:	b	418840 <main@@Base+0x2954>
  418834:	mov	w8, #0x1                   	// #1
  418838:	b	418840 <main@@Base+0x2954>
  41883c:	mov	w8, #0x2                   	// #2
  418840:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  418844:	str	w8, [x9, #3304]
  418848:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41884c:	ldr	w8, [x8, #3836]
  418850:	ldp	x20, x19, [sp, #96]
  418854:	ldp	x22, x21, [sp, #80]
  418858:	ldp	x24, x23, [sp, #64]
  41885c:	ldp	x26, x25, [sp, #48]
  418860:	ldp	x28, x27, [sp, #32]
  418864:	ldp	x29, x30, [sp, #16]
  418868:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41886c:	str	w8, [x9, #3232]
  418870:	add	sp, sp, #0x70
  418874:	ret
  418878:	mov	x0, x19
  41887c:	bl	406750 <strlen@plt>
  418880:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  418884:	mov	x20, x0
  418888:	add	x1, x1, #0x2f8
  41888c:	mov	w2, #0x5                   	// #5
  418890:	mov	x0, xzr
  418894:	bl	406dc0 <dcgettext@plt>
  418898:	mov	x2, x0
  41889c:	mov	x0, xzr
  4188a0:	mov	x1, x20
  4188a4:	mov	x3, x19
  4188a8:	bl	41aff0 <fatal@@Base>
  4188ac:	cmp	w23, #0x0
  4188b0:	mov	w0, w23
  4188b4:	cset	w19, ne  // ne = any
  4188b8:	bl	419598 <die@@Base+0xb84>
  4188bc:	lsl	w0, w19, #1
  4188c0:	bl	418a14 <die@@Base>
  4188c4:	mov	x0, x19
  4188c8:	bl	406750 <strlen@plt>
  4188cc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4188d0:	mov	x19, x0
  4188d4:	add	x1, x1, #0x32c
  4188d8:	mov	w2, #0x5                   	// #5
  4188dc:	mov	x0, xzr
  4188e0:	bl	406dc0 <dcgettext@plt>
  4188e4:	ldr	x3, [x20, #3240]
  4188e8:	mov	x2, x0
  4188ec:	mov	x0, xzr
  4188f0:	mov	x1, x19
  4188f4:	bl	41aff0 <fatal@@Base>
  4188f8:	stp	x29, x30, [sp, #-48]!
  4188fc:	stp	x20, x19, [sp, #32]
  418900:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418904:	ldr	w8, [x8, #3256]
  418908:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41890c:	ldrb	w9, [x20, #3828]
  418910:	adrp	x10, 42d000 <_IO_stdin_used@@Base+0x5680>
  418914:	adrp	x11, 42a000 <_IO_stdin_used@@Base+0x2680>
  418918:	add	x10, x10, #0xaa4
  41891c:	add	x11, x11, #0x3a9
  418920:	cmp	w8, #0x0
  418924:	csel	x19, x11, x10, eq  // eq = none
  418928:	str	x21, [sp, #16]
  41892c:	mov	x29, sp
  418930:	tbz	w9, #0, 418944 <main@@Base+0x2a58>
  418934:	ldp	x20, x19, [sp, #32]
  418938:	ldr	x21, [sp, #16]
  41893c:	ldp	x29, x30, [sp], #48
  418940:	ret
  418944:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418948:	ldr	x2, [x8, #2432]
  41894c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  418950:	add	x0, x0, #0x38e
  418954:	mov	x1, x19
  418958:	bl	406e60 <printf@plt>
  41895c:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  418960:	ldr	x8, [x21, #4000]
  418964:	cbz	x8, 41899c <main@@Base+0x2ab0>
  418968:	ldrb	w8, [x8]
  41896c:	cbz	w8, 41899c <main@@Base+0x2ab0>
  418970:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  418974:	add	x1, x1, #0x3ad
  418978:	mov	w2, #0x5                   	// #5
  41897c:	mov	x0, xzr
  418980:	bl	406dc0 <dcgettext@plt>
  418984:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418988:	ldr	x2, [x8, #2440]
  41898c:	ldr	x3, [x21, #4000]
  418990:	mov	x1, x19
  418994:	bl	406e60 <printf@plt>
  418998:	b	4189c0 <main@@Base+0x2ad4>
  41899c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4189a0:	add	x1, x1, #0x39d
  4189a4:	mov	w2, #0x5                   	// #5
  4189a8:	mov	x0, xzr
  4189ac:	bl	406dc0 <dcgettext@plt>
  4189b0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4189b4:	ldr	x2, [x8, #2440]
  4189b8:	mov	x1, x19
  4189bc:	bl	406e60 <printf@plt>
  4189c0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  4189c4:	add	x0, x0, #0x3c2
  4189c8:	mov	x1, x19
  4189cc:	bl	406e60 <printf@plt>
  4189d0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4189d4:	add	x1, x1, #0x3fc
  4189d8:	mov	w2, #0x5                   	// #5
  4189dc:	mov	x0, xzr
  4189e0:	bl	406dc0 <dcgettext@plt>
  4189e4:	mov	x1, x19
  4189e8:	mov	x2, x19
  4189ec:	mov	x3, x19
  4189f0:	bl	406e60 <printf@plt>
  4189f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4189f8:	ldr	x0, [x8, #2504]
  4189fc:	mov	w8, #0x1                   	// #1
  418a00:	strb	w8, [x20, #3828]
  418a04:	ldp	x20, x19, [sp, #32]
  418a08:	ldr	x21, [sp, #16]
  418a0c:	ldp	x29, x30, [sp], #48
  418a10:	b	406cf0 <fflush@plt>

0000000000418a14 <die@@Base>:
  418a14:	stp	x29, x30, [sp, #-48]!
  418a18:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418a1c:	ldrb	w9, [x8, #3824]
  418a20:	stp	x20, x19, [sp, #32]
  418a24:	mov	w19, w0
  418a28:	str	x21, [sp, #16]
  418a2c:	mov	x29, sp
  418a30:	tbnz	w9, #0, 418af4 <die@@Base+0xe0>
  418a34:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  418a38:	ldr	w9, [x9, #3284]
  418a3c:	mov	w10, #0x1                   	// #1
  418a40:	strb	w10, [x8, #3824]
  418a44:	cbz	w9, 418a4c <die@@Base+0x38>
  418a48:	bl	4188f8 <main@@Base+0x2a0c>
  418a4c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  418a50:	ldr	w8, [x21, #3048]
  418a54:	cmp	w19, #0x0
  418a58:	cset	w20, ne  // ne = any
  418a5c:	cbz	w8, 418a74 <die@@Base+0x60>
  418a60:	mov	w0, #0x1                   	// #1
  418a64:	mov	w1, w20
  418a68:	bl	412c28 <reap_children@@Base>
  418a6c:	ldr	w8, [x21, #3048]
  418a70:	cbnz	w8, 418a60 <die@@Base+0x4c>
  418a74:	bl	427268 <remote_cleanup@@Base>
  418a78:	mov	w0, wzr
  418a7c:	bl	40b054 <remove_intermediates@@Base>
  418a80:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418a84:	ldr	w8, [x8, #3256]
  418a88:	cbz	w8, 418a90 <die@@Base+0x7c>
  418a8c:	bl	4191b4 <die@@Base+0x7a0>
  418a90:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  418a94:	ldr	w8, [x8, #4032]
  418a98:	cbz	w8, 418aa0 <die@@Base+0x8c>
  418a9c:	bl	40c890 <verify_file_data_base@@Base>
  418aa0:	mov	w0, w19
  418aa4:	bl	419260 <die@@Base+0x84c>
  418aa8:	adrp	x20, 43f000 <stopchar_map@@Base+0x310>
  418aac:	ldr	x0, [x20, #1456]
  418ab0:	cbz	x0, 418adc <die@@Base+0xc8>
  418ab4:	bl	41a9b0 <output_close@@Base>
  418ab8:	ldr	x8, [x20, #1456]
  418abc:	adrp	x9, 442000 <just_print_flag@@Base>
  418ac0:	add	x9, x9, #0x30
  418ac4:	cmp	x8, x9
  418ac8:	b.eq	418ad8 <die@@Base+0xc4>  // b.none
  418acc:	adrp	x0, 442000 <just_print_flag@@Base>
  418ad0:	add	x0, x0, #0x30
  418ad4:	bl	41a9b0 <output_close@@Base>
  418ad8:	str	xzr, [x20, #1456]
  418adc:	mov	x0, xzr
  418ae0:	bl	41a9b0 <output_close@@Base>
  418ae4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  418ae8:	ldr	x0, [x8, #4024]
  418aec:	cbz	x0, 418af4 <die@@Base+0xe0>
  418af0:	bl	406c50 <chdir@plt>
  418af4:	mov	w0, w19
  418af8:	bl	406770 <exit@plt>
  418afc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  418b00:	ldr	w9, [x8, #3236]
  418b04:	cmp	w9, #0x0
  418b08:	cset	w9, eq  // eq = none
  418b0c:	str	w9, [x8, #3236]
  418b10:	ret
  418b14:	stp	x29, x30, [sp, #-96]!
  418b18:	stp	x28, x27, [sp, #16]
  418b1c:	stp	x26, x25, [sp, #32]
  418b20:	stp	x24, x23, [sp, #48]
  418b24:	stp	x22, x21, [sp, #64]
  418b28:	stp	x20, x19, [sp, #80]
  418b2c:	mov	x29, sp
  418b30:	sub	sp, sp, #0x30
  418b34:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  418b38:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  418b3c:	add	x8, x8, #0x34a
  418b40:	add	x9, x9, #0x358
  418b44:	ldr	x10, [x8]
  418b48:	ldur	x8, [x8, #6]
  418b4c:	ldr	q0, [x9]
  418b50:	ldr	x9, [x9, #16]
  418b54:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x2680>
  418b58:	mov	w20, w1
  418b5c:	mov	w19, w0
  418b60:	mov	x24, xzr
  418b64:	mov	x22, xzr
  418b68:	mov	x28, xzr
  418b6c:	add	x25, x25, #0x8e8
  418b70:	mov	w23, #0x62                  	// #98
  418b74:	stur	x10, [x29, #-16]
  418b78:	stur	x8, [x29, #-10]
  418b7c:	stur	q0, [x29, #-48]
  418b80:	stur	x9, [x29, #-32]
  418b84:	b	418ba8 <die@@Base+0x194>
  418b88:	ldr	x0, [x25, #40]
  418b8c:	bl	406750 <strlen@plt>
  418b90:	add	x8, x28, x0
  418b94:	add	x28, x8, #0x5
  418b98:	mov	x22, x21
  418b9c:	mov	x24, x26
  418ba0:	ldr	w23, [x25, #48]!
  418ba4:	cbz	w23, 418ee0 <die@@Base+0x4cc>
  418ba8:	ldrb	w8, [x25, #16]
  418bac:	tbz	w8, #1, 418ba0 <die@@Base+0x18c>
  418bb0:	cbz	w20, 418bb8 <die@@Base+0x1a4>
  418bb4:	tbnz	w8, #2, 418ba0 <die@@Base+0x18c>
  418bb8:	ldr	w8, [x25, #4]
  418bbc:	cmp	w8, #0x7
  418bc0:	b.hi	4191b0 <die@@Base+0x79c>  // b.pmore
  418bc4:	adrp	x11, 42a000 <_IO_stdin_used@@Base+0x2680>
  418bc8:	add	x11, x11, #0x8da
  418bcc:	adr	x9, 418ba0 <die@@Base+0x18c>
  418bd0:	ldrb	w10, [x11, x8]
  418bd4:	add	x9, x9, x10, lsl #2
  418bd8:	br	x9
  418bdc:	ldr	x9, [x25, #8]
  418be0:	ldr	w9, [x9]
  418be4:	cmp	w9, #0x0
  418be8:	cset	w10, ne  // ne = any
  418bec:	cmp	w8, #0x1
  418bf0:	cset	w8, eq  // eq = none
  418bf4:	cmp	w8, w10
  418bf8:	b.eq	418ba0 <die@@Base+0x18c>  // b.none
  418bfc:	ldr	x8, [x25, #32]
  418c00:	cbz	x8, 418c10 <die@@Base+0x1fc>
  418c04:	ldr	w8, [x8]
  418c08:	cmp	w9, w8
  418c0c:	b.eq	418ba0 <die@@Base+0x18c>  // b.none
  418c10:	mov	x8, sp
  418c14:	sub	x21, x8, #0x20
  418c18:	mov	sp, x21
  418c1c:	stur	xzr, [x8, #-16]
  418c20:	mov	x26, x21
  418c24:	stp	xzr, x25, [x8, #-32]
  418c28:	cbz	x24, 418c34 <die@@Base+0x220>
  418c2c:	mov	x26, x24
  418c30:	str	x21, [x22]
  418c34:	cmp	w23, #0x100
  418c38:	b.ge	418b88 <die@@Base+0x174>  // b.tcont
  418c3c:	add	x28, x28, #0x3
  418c40:	b	418b98 <die@@Base+0x184>
  418c44:	cbz	w19, 418ba0 <die@@Base+0x18c>
  418c48:	ldr	x8, [x25, #8]
  418c4c:	ldr	x8, [x8]
  418c50:	cbz	x8, 418ba0 <die@@Base+0x18c>
  418c54:	ldr	w27, [x8, #8]
  418c58:	cbz	w27, 418ba0 <die@@Base+0x18c>
  418c5c:	ldr	x21, [x8]
  418c60:	cmp	w23, #0xff
  418c64:	b.gt	418e58 <die@@Base+0x444>
  418c68:	mov	x23, xzr
  418c6c:	mov	x8, x24
  418c70:	mov	x9, x22
  418c74:	b	418ca4 <die@@Base+0x290>
  418c78:	ldr	x0, [x21]
  418c7c:	bl	406750 <strlen@plt>
  418c80:	add	x8, x0, x0, lsl #1
  418c84:	add	x8, x28, x8
  418c88:	add	x28, x8, #0x3
  418c8c:	add	x23, x23, #0x1
  418c90:	cmp	x23, x27
  418c94:	add	x21, x21, #0x8
  418c98:	mov	x8, x24
  418c9c:	mov	x9, x22
  418ca0:	b.cs	418ba0 <die@@Base+0x18c>  // b.hs, b.nlast
  418ca4:	mov	x11, sp
  418ca8:	sub	x22, x11, #0x20
  418cac:	mov	sp, x22
  418cb0:	stur	x25, [x11, #-24]
  418cb4:	ldr	x10, [x21]
  418cb8:	mov	x24, x22
  418cbc:	stur	xzr, [x11, #-32]
  418cc0:	stur	x10, [x11, #-16]
  418cc4:	cbz	x8, 418cd0 <die@@Base+0x2bc>
  418cc8:	mov	x24, x8
  418ccc:	str	x22, [x9]
  418cd0:	cbnz	x10, 418c78 <die@@Base+0x264>
  418cd4:	add	x28, x28, #0x3
  418cd8:	b	418c8c <die@@Base+0x278>
  418cdc:	cbz	w19, 418ba0 <die@@Base+0x18c>
  418ce0:	ldr	x8, [x25, #8]
  418ce4:	ldr	x0, [x8]
  418ce8:	cbz	x0, 418ba0 <die@@Base+0x18c>
  418cec:	mov	x8, sp
  418cf0:	sub	x21, x8, #0x20
  418cf4:	mov	sp, x21
  418cf8:	mov	x26, x21
  418cfc:	stp	x25, x0, [x8, #-24]
  418d00:	stur	xzr, [x8, #-32]
  418d04:	cbz	x24, 418d10 <die@@Base+0x2fc>
  418d08:	mov	x26, x24
  418d0c:	str	x21, [x22]
  418d10:	bl	406750 <strlen@plt>
  418d14:	add	x8, x0, x0, lsl #1
  418d18:	add	x8, x28, x8
  418d1c:	cmp	w23, #0x100
  418d20:	add	x28, x8, #0x3
  418d24:	b.lt	418b98 <die@@Base+0x184>  // b.tstop
  418d28:	b	418e44 <die@@Base+0x430>
  418d2c:	cbz	w19, 418ba0 <die@@Base+0x18c>
  418d30:	ldr	x8, [x25, #32]
  418d34:	cbz	x8, 418d4c <die@@Base+0x338>
  418d38:	ldr	x9, [x25, #8]
  418d3c:	ldr	d1, [x8]
  418d40:	ldr	d0, [x9]
  418d44:	fcmp	d0, d1
  418d48:	b.eq	418ba0 <die@@Base+0x18c>  // b.none
  418d4c:	ldr	x9, [x25, #8]
  418d50:	ldr	x8, [x25, #24]
  418d54:	ldr	d0, [x9]
  418d58:	cbz	x8, 418d68 <die@@Base+0x354>
  418d5c:	ldr	d1, [x8]
  418d60:	fcmp	d0, d1
  418d64:	b.eq	418dc0 <die@@Base+0x3ac>  // b.none
  418d68:	sub	x23, sp, #0x70
  418d6c:	mov	sp, x23
  418d70:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  418d74:	mov	x0, x23
  418d78:	add	x1, x1, #0x384
  418d7c:	bl	406800 <sprintf@plt>
  418d80:	b	418e00 <die@@Base+0x3ec>
  418d84:	cbz	w19, 418ba0 <die@@Base+0x18c>
  418d88:	ldr	x8, [x25, #32]
  418d8c:	cbz	x8, 418da4 <die@@Base+0x390>
  418d90:	ldr	x9, [x25, #8]
  418d94:	ldr	w8, [x8]
  418d98:	ldr	w9, [x9]
  418d9c:	cmp	w9, w8
  418da0:	b.eq	418ba0 <die@@Base+0x18c>  // b.none
  418da4:	ldr	x9, [x25, #8]
  418da8:	ldr	x8, [x25, #24]
  418dac:	ldr	w2, [x9]
  418db0:	cbz	x8, 418de8 <die@@Base+0x3d4>
  418db4:	ldr	w8, [x8]
  418db8:	cmp	w2, w8
  418dbc:	b.ne	418de8 <die@@Base+0x3d4>  // b.any
  418dc0:	mov	x8, sp
  418dc4:	sub	x21, x8, #0x20
  418dc8:	mov	sp, x21
  418dcc:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  418dd0:	add	x9, x9, #0x3a9
  418dd4:	stur	x9, [x8, #-16]
  418dd8:	mov	x26, x21
  418ddc:	stp	xzr, x25, [x8, #-32]
  418de0:	cbnz	x24, 418c2c <die@@Base+0x218>
  418de4:	b	418c34 <die@@Base+0x220>
  418de8:	sub	x23, sp, #0x20
  418dec:	mov	sp, x23
  418df0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  418df4:	mov	x0, x23
  418df8:	add	x1, x1, #0x56b
  418dfc:	bl	406800 <sprintf@plt>
  418e00:	mov	x8, sp
  418e04:	sub	x21, x8, #0x20
  418e08:	mov	sp, x21
  418e0c:	mov	x26, x21
  418e10:	stp	x25, x23, [x8, #-24]
  418e14:	stur	xzr, [x8, #-32]
  418e18:	cbz	x24, 418e24 <die@@Base+0x410>
  418e1c:	mov	x26, x24
  418e20:	str	x21, [x22]
  418e24:	mov	x0, x23
  418e28:	bl	406750 <strlen@plt>
  418e2c:	ldr	w8, [x25]
  418e30:	add	x9, x0, x0, lsl #1
  418e34:	add	x9, x28, x9
  418e38:	add	x28, x9, #0x3
  418e3c:	cmp	w8, #0x100
  418e40:	b.lt	418b98 <die@@Base+0x184>  // b.tstop
  418e44:	ldr	x0, [x25, #40]
  418e48:	bl	406750 <strlen@plt>
  418e4c:	add	x8, x28, x0
  418e50:	add	x28, x8, #0x2
  418e54:	b	418b98 <die@@Base+0x184>
  418e58:	ldr	x23, [x25, #40]
  418e5c:	mov	x26, xzr
  418e60:	mov	x8, x24
  418e64:	mov	x9, x22
  418e68:	b	418ea8 <die@@Base+0x494>
  418e6c:	ldr	x0, [x21]
  418e70:	bl	406750 <strlen@plt>
  418e74:	add	x8, x0, x0, lsl #1
  418e78:	add	x8, x28, x8
  418e7c:	add	x28, x8, #0x3
  418e80:	mov	x0, x23
  418e84:	bl	406750 <strlen@plt>
  418e88:	add	x8, x28, x0
  418e8c:	add	x26, x26, #0x1
  418e90:	add	x28, x8, #0x2
  418e94:	cmp	x26, x27
  418e98:	add	x21, x21, #0x8
  418e9c:	mov	x8, x24
  418ea0:	mov	x9, x22
  418ea4:	b.cs	418ba0 <die@@Base+0x18c>  // b.hs, b.nlast
  418ea8:	mov	x11, sp
  418eac:	sub	x22, x11, #0x20
  418eb0:	mov	sp, x22
  418eb4:	stur	x25, [x11, #-24]
  418eb8:	ldr	x10, [x21]
  418ebc:	mov	x24, x22
  418ec0:	stur	xzr, [x11, #-32]
  418ec4:	stur	x10, [x11, #-16]
  418ec8:	cbz	x8, 418ed4 <die@@Base+0x4c0>
  418ecc:	mov	x24, x8
  418ed0:	str	x22, [x9]
  418ed4:	cbnz	x10, 418e6c <die@@Base+0x458>
  418ed8:	add	x28, x28, #0x3
  418edc:	b	418e80 <die@@Base+0x46c>
  418ee0:	add	x9, x28, #0x47
  418ee4:	mov	x8, sp
  418ee8:	and	x9, x9, #0xfffffffffffffff0
  418eec:	sub	x20, x8, x9
  418ef0:	add	x2, x28, #0x38
  418ef4:	mov	sp, x20
  418ef8:	mov	x0, x20
  418efc:	mov	w1, wzr
  418f00:	bl	406a30 <memset@plt>
  418f04:	mov	w8, #0x2d                  	// #45
  418f08:	mov	x23, x20
  418f0c:	strb	w8, [x23], #1
  418f10:	cbz	x24, 419030 <die@@Base+0x61c>
  418f14:	mov	w8, #0x1                   	// #1
  418f18:	ldr	x9, [x24, #16]
  418f1c:	cbnz	x9, 418f48 <die@@Base+0x534>
  418f20:	ldr	x9, [x24, #8]
  418f24:	ldr	w9, [x9]
  418f28:	cmp	w9, #0xff
  418f2c:	b.gt	418f48 <die@@Base+0x534>
  418f30:	strb	w9, [x20, x8]
  418f34:	ldr	x24, [x24]
  418f38:	add	x9, x8, #0x1
  418f3c:	mov	x8, x9
  418f40:	cbnz	x24, 418f18 <die@@Base+0x504>
  418f44:	b	419034 <die@@Base+0x620>
  418f48:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  418f4c:	add	x22, x20, x8
  418f50:	mov	w21, #0x2d20                	// #11552
  418f54:	add	x25, x25, #0xcf0
  418f58:	mov	w26, #0x3d                  	// #61
  418f5c:	mov	w27, #0x2d                  	// #45
  418f60:	b	418f70 <die@@Base+0x55c>
  418f64:	ldr	x24, [x24]
  418f68:	add	x22, x20, x8
  418f6c:	cbz	x24, 41903c <die@@Base+0x628>
  418f70:	strh	w21, [x22]
  418f74:	ldr	x9, [x24, #8]
  418f78:	ldr	w9, [x9]
  418f7c:	cmp	w9, #0xff
  418f80:	b.gt	418f98 <die@@Base+0x584>
  418f84:	add	x8, x8, #0x3
  418f88:	strb	w9, [x22, #2]
  418f8c:	ldr	x9, [x24, #16]
  418f90:	cbnz	x9, 418fc0 <die@@Base+0x5ac>
  418f94:	b	418f64 <die@@Base+0x550>
  418f98:	strb	w27, [x22, #2]
  418f9c:	ldr	x9, [x24, #8]
  418fa0:	add	x22, x8, #0x3
  418fa4:	add	x0, x20, x22
  418fa8:	ldr	x1, [x9, #40]
  418fac:	bl	406d00 <strcpy@plt>
  418fb0:	bl	406750 <strlen@plt>
  418fb4:	add	x8, x0, x22
  418fb8:	ldr	x9, [x24, #16]
  418fbc:	cbz	x9, 418f64 <die@@Base+0x550>
  418fc0:	ldrb	w10, [x9]
  418fc4:	cbz	w10, 418f64 <die@@Base+0x550>
  418fc8:	ldr	x10, [x24, #8]
  418fcc:	ldr	w10, [x10]
  418fd0:	cmp	w10, #0x100
  418fd4:	b.lt	419008 <die@@Base+0x5f4>  // b.tstop
  418fd8:	strb	w26, [x20, x8]
  418fdc:	ldr	x9, [x24, #16]
  418fe0:	add	x8, x8, #0x1
  418fe4:	b	419008 <die@@Base+0x5f4>
  418fe8:	mov	w11, w10
  418fec:	add	x10, x8, #0x1
  418ff0:	strb	w11, [x20, x8]
  418ff4:	mov	x8, x10
  418ff8:	ldrb	w10, [x9], #1
  418ffc:	add	x11, x8, #0x1
  419000:	strb	w10, [x20, x8]
  419004:	mov	x8, x11
  419008:	ldrb	w10, [x9]
  41900c:	cmp	w10, #0x24
  419010:	b.eq	418fe8 <die@@Base+0x5d4>  // b.none
  419014:	cbz	w10, 418f64 <die@@Base+0x550>
  419018:	cmp	w10, #0x5c
  41901c:	mov	w11, #0x5c                  	// #92
  419020:	b.eq	418fec <die@@Base+0x5d8>  // b.none
  419024:	ldrh	w10, [x25, x10, lsl #1]
  419028:	tbz	w10, #1, 418ff8 <die@@Base+0x5e4>
  41902c:	b	418fec <die@@Base+0x5d8>
  419030:	mov	w9, #0x1                   	// #1
  419034:	add	x22, x20, x9
  419038:	mov	x8, x9
  41903c:	cmp	x8, #0x1
  419040:	b.ne	419054 <die@@Base+0x640>  // b.any
  419044:	mov	x8, xzr
  419048:	strb	wzr, [x20]
  41904c:	mov	x22, x20
  419050:	b	419078 <die@@Base+0x664>
  419054:	ldrb	w8, [x20]
  419058:	cmp	w8, #0x2d
  41905c:	b.ne	419074 <die@@Base+0x660>  // b.any
  419060:	ldrb	w8, [x23]
  419064:	cmp	w8, #0x20
  419068:	cset	w8, eq  // eq = none
  41906c:	lsl	x8, x8, #1
  419070:	b	419078 <die@@Base+0x664>
  419074:	mov	x8, xzr
  419078:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  41907c:	ldr	x9, [x24, #2424]
  419080:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  419084:	add	x2, x20, x8
  419088:	add	x0, x0, #0x387
  41908c:	ldr	x5, [x9, #8]
  419090:	mov	w1, #0x6                   	// #6
  419094:	mov	w3, #0x1                   	// #1
  419098:	mov	w4, #0x1                   	// #1
  41909c:	mov	x6, xzr
  4190a0:	bl	423d70 <define_variable_in_set@@Base>
  4190a4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4190a8:	ldr	x8, [x8, #3904]
  4190ac:	cbz	x8, 4190d8 <die@@Base+0x6c4>
  4190b0:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  4190b4:	add	x9, x9, #0x370
  4190b8:	ldr	q0, [x9]
  4190bc:	mov	w9, #0x2a2d                	// #10797
  4190c0:	mov	w8, #0x20                  	// #32
  4190c4:	movk	w9, #0x292d, lsl #16
  4190c8:	strb	w8, [x22]
  4190cc:	str	w9, [x22, #16]
  4190d0:	stur	q0, [x22, #1]
  4190d4:	add	x22, x22, #0x14
  4190d8:	cbz	w19, 419150 <die@@Base+0x73c>
  4190dc:	adrp	x8, 442000 <just_print_flag@@Base>
  4190e0:	ldr	w8, [x8, #8]
  4190e4:	sub	x9, x29, #0x30
  4190e8:	cmp	w8, #0x0
  4190ec:	sub	x8, x29, #0x10
  4190f0:	csel	x19, x8, x9, eq  // eq = none
  4190f4:	mov	x0, x19
  4190f8:	bl	406750 <strlen@plt>
  4190fc:	mov	x21, x0
  419100:	mov	x0, x19
  419104:	mov	x1, x21
  419108:	bl	424110 <lookup_variable@@Base>
  41910c:	cbz	x0, 419150 <die@@Base+0x73c>
  419110:	ldr	x8, [x0, #8]
  419114:	cbz	x8, 419150 <die@@Base+0x73c>
  419118:	ldrb	w8, [x8]
  41911c:	cbz	w8, 419150 <die@@Base+0x73c>
  419120:	mov	w8, #0x2d20                	// #11552
  419124:	movk	w8, #0x202d, lsl #16
  419128:	mov	w9, #0x2824                	// #10276
  41912c:	str	w8, [x22]
  419130:	strh	w9, [x22, #4]
  419134:	add	x22, x22, #0x6
  419138:	mov	x0, x22
  41913c:	mov	x1, x19
  419140:	mov	x2, x21
  419144:	bl	406710 <memcpy@plt>
  419148:	mov	w8, #0x29                  	// #41
  41914c:	strb	w8, [x22, x21]
  419150:	ldr	x9, [x24, #2424]
  419154:	ldrb	w8, [x20]
  419158:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  41915c:	ldr	w10, [x10, #3248]
  419160:	ldr	x5, [x9, #8]
  419164:	cmp	w8, #0x2d
  419168:	csel	x2, x23, x20, eq  // eq = none
  41916c:	cmp	w10, #0x0
  419170:	mov	w8, #0x2                   	// #2
  419174:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  419178:	cinc	w3, w8, ne  // ne = any
  41917c:	add	x0, x0, #0xa87
  419180:	mov	w1, #0x9                   	// #9
  419184:	mov	w4, #0x1                   	// #1
  419188:	mov	x6, xzr
  41918c:	bl	423d70 <define_variable_in_set@@Base>
  419190:	mov	sp, x29
  419194:	ldp	x20, x19, [sp, #80]
  419198:	ldp	x22, x21, [sp, #64]
  41919c:	ldp	x24, x23, [sp, #48]
  4191a0:	ldp	x26, x25, [sp, #32]
  4191a4:	ldp	x28, x27, [sp, #16]
  4191a8:	ldp	x29, x30, [sp], #96
  4191ac:	ret
  4191b0:	bl	406b70 <abort@plt>
  4191b4:	stp	x29, x30, [sp, #-32]!
  4191b8:	mov	x0, xzr
  4191bc:	str	x19, [sp, #16]
  4191c0:	mov	x29, sp
  4191c4:	bl	406980 <time@plt>
  4191c8:	str	x0, [x29, #24]
  4191cc:	bl	4188f8 <main@@Base+0x2a0c>
  4191d0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4191d4:	add	x1, x1, #0x4ca
  4191d8:	mov	w2, #0x5                   	// #5
  4191dc:	mov	x0, xzr
  4191e0:	bl	406dc0 <dcgettext@plt>
  4191e4:	mov	x19, x0
  4191e8:	add	x0, x29, #0x18
  4191ec:	bl	406890 <ctime@plt>
  4191f0:	mov	x1, x0
  4191f4:	mov	x0, x19
  4191f8:	bl	406e60 <printf@plt>
  4191fc:	bl	4257dc <print_variable_data_base@@Base>
  419200:	bl	409690 <print_dir_data_base@@Base>
  419204:	bl	42344c <print_rule_data_base@@Base>
  419208:	bl	40c444 <print_file_data_base@@Base>
  41920c:	bl	426620 <print_vpath_data_base@@Base>
  419210:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  419214:	add	x0, x0, #0x4eb
  419218:	bl	4239d0 <strcache_print_stats@@Base>
  41921c:	mov	x0, xzr
  419220:	bl	406980 <time@plt>
  419224:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419228:	str	x0, [x29, #24]
  41922c:	add	x1, x1, #0x4ed
  419230:	mov	w2, #0x5                   	// #5
  419234:	mov	x0, xzr
  419238:	bl	406dc0 <dcgettext@plt>
  41923c:	mov	x19, x0
  419240:	add	x0, x29, #0x18
  419244:	bl	406890 <ctime@plt>
  419248:	mov	x1, x0
  41924c:	mov	x0, x19
  419250:	bl	406e60 <printf@plt>
  419254:	ldr	x19, [sp, #16]
  419258:	ldp	x29, x30, [sp], #32
  41925c:	ret
  419260:	stp	x29, x30, [sp, #-32]!
  419264:	stp	x20, x19, [sp, #16]
  419268:	mov	x29, sp
  41926c:	mov	w19, w0
  419270:	bl	426c14 <jobserver_enabled@@Base>
  419274:	cbz	w0, 4192b0 <die@@Base+0x89c>
  419278:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41927c:	ldr	w3, [x20, #3064]
  419280:	cbz	w3, 4192b0 <die@@Base+0x89c>
  419284:	cmp	w19, #0x2
  419288:	b.ne	419304 <die@@Base+0x8f0>  // b.any
  41928c:	subs	w8, w3, #0x1
  419290:	str	w8, [x20, #3064]
  419294:	b.eq	4192b0 <die@@Base+0x89c>  // b.none
  419298:	mov	w0, wzr
  41929c:	bl	426c68 <jobserver_release@@Base>
  4192a0:	ldr	w8, [x20, #3064]
  4192a4:	subs	w8, w8, #0x1
  4192a8:	str	w8, [x20, #3064]
  4192ac:	b.ne	419298 <die@@Base+0x884>  // b.any
  4192b0:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  4192b4:	ldr	w8, [x19, #3840]
  4192b8:	cbz	w8, 4192f8 <die@@Base+0x8e4>
  4192bc:	bl	426cf8 <jobserver_acquire_all@@Base>
  4192c0:	ldr	w4, [x19, #3840]
  4192c4:	add	w3, w0, #0x1
  4192c8:	cmp	w3, w4
  4192cc:	b.eq	4192e4 <die@@Base+0x8d0>  // b.none
  4192d0:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  4192d4:	add	x2, x2, #0x549
  4192d8:	mov	w1, #0x28                  	// #40
  4192dc:	mov	x0, xzr
  4192e0:	bl	41ae34 <error@@Base>
  4192e4:	bl	426c28 <jobserver_clear@@Base>
  4192e8:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  4192ec:	ldr	x0, [x19, #3864]
  4192f0:	bl	406c60 <free@plt>
  4192f4:	str	xzr, [x19, #3864]
  4192f8:	ldp	x20, x19, [sp, #16]
  4192fc:	ldp	x29, x30, [sp], #32
  419300:	ret
  419304:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  419308:	add	x2, x2, #0x50f
  41930c:	mov	w1, #0x14                  	// #20
  419310:	mov	x0, xzr
  419314:	bl	41ae34 <error@@Base>
  419318:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  41931c:	ldr	w8, [x19, #3840]
  419320:	cbnz	w8, 4192bc <die@@Base+0x8a8>
  419324:	b	4192f8 <die@@Base+0x8e4>
  419328:	stp	x29, x30, [sp, #-64]!
  41932c:	stp	x24, x23, [sp, #16]
  419330:	stp	x22, x21, [sp, #32]
  419334:	stp	x20, x19, [sp, #48]
  419338:	ldrb	w8, [x0]
  41933c:	mov	x20, x0
  419340:	mov	w21, w1
  419344:	mov	x29, sp
  419348:	cmp	w8, #0x2d
  41934c:	b.ne	419358 <die@@Base+0x944>  // b.any
  419350:	ldrb	w8, [x20, #1]
  419354:	cbz	w8, 4194b8 <die@@Base+0xaa4>
  419358:	mov	w2, #0x4                   	// #4
  41935c:	mov	x0, xzr
  419360:	mov	x1, x20
  419364:	mov	w3, wzr
  419368:	bl	425738 <try_variable_definition@@Base>
  41936c:	cbz	x0, 4193b0 <die@@Base+0x99c>
  419370:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  419374:	ldr	x8, [x20, #3872]
  419378:	mov	x19, x0
  41937c:	cbz	x8, 419394 <die@@Base+0x980>
  419380:	ldr	x9, [x8, #8]
  419384:	cmp	x9, x19
  419388:	b.eq	4194b8 <die@@Base+0xaa4>  // b.none
  41938c:	ldr	x8, [x8]
  419390:	cbnz	x8, 419380 <die@@Base+0x96c>
  419394:	mov	w0, #0x10                  	// #16
  419398:	bl	419e14 <xmalloc@@Base>
  41939c:	str	x19, [x0, #8]
  4193a0:	ldr	x8, [x20, #3872]
  4193a4:	str	x8, [x0]
  4193a8:	str	x0, [x20, #3872]
  4193ac:	b	4194b8 <die@@Base+0xaa4>
  4193b0:	cbnz	w21, 4194b8 <die@@Base+0xaa4>
  4193b4:	mov	x0, x20
  4193b8:	bl	4194d0 <die@@Base+0xabc>
  4193bc:	bl	423690 <strcache_add@@Base>
  4193c0:	bl	40ab6c <enter_file@@Base>
  4193c4:	ldr	w8, [x0, #136]
  4193c8:	mov	x19, x0
  4193cc:	orr	w8, w8, #0x1000
  4193d0:	str	w8, [x0, #136]
  4193d4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4193d8:	ldr	x20, [x8, #3928]
  4193dc:	mov	w0, #0x40                  	// #64
  4193e0:	bl	419e38 <xcalloc@@Base>
  4193e4:	cbz	x20, 4193fc <die@@Base+0x9e8>
  4193e8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4193ec:	ldr	x9, [x8, #3936]
  4193f0:	str	x0, [x9]
  4193f4:	str	x0, [x8, #3936]
  4193f8:	b	419408 <die@@Base+0x9f4>
  4193fc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  419400:	add	x8, x8, #0xf58
  419404:	stp	x0, x0, [x8]
  419408:	str	x19, [x0, #16]
  41940c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  419410:	add	x0, x0, #0x6a8
  419414:	mov	w1, #0xc                   	// #12
  419418:	bl	424110 <lookup_variable@@Base>
  41941c:	cbz	x0, 419488 <die@@Base+0xa74>
  419420:	ldr	x21, [x0, #8]
  419424:	mov	x0, x21
  419428:	bl	406750 <strlen@plt>
  41942c:	ldr	x8, [x19]
  419430:	mov	x22, x0
  419434:	mov	x0, x8
  419438:	bl	406750 <strlen@plt>
  41943c:	add	x24, x22, #0x1
  419440:	add	x23, x0, #0x1
  419444:	add	x8, x23, x24
  419448:	add	x8, x8, #0xf
  41944c:	and	x8, x8, #0xfffffffffffffff0
  419450:	mov	x9, sp
  419454:	sub	x20, x9, x8
  419458:	mov	sp, x20
  41945c:	mov	x0, x20
  419460:	mov	x1, x21
  419464:	mov	x2, x22
  419468:	bl	406710 <memcpy@plt>
  41946c:	mov	w8, #0x20                  	// #32
  419470:	strb	w8, [x20, x22]
  419474:	ldr	x1, [x19]
  419478:	add	x0, x20, x24
  41947c:	mov	x2, x23
  419480:	bl	406710 <memcpy@plt>
  419484:	b	41948c <die@@Base+0xa78>
  419488:	ldr	x20, [x19]
  41948c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  419490:	ldr	x8, [x8, #2424]
  419494:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  419498:	add	x0, x0, #0x6a8
  41949c:	mov	w1, #0xc                   	// #12
  4194a0:	ldr	x5, [x8, #8]
  4194a4:	mov	x2, x20
  4194a8:	mov	w3, wzr
  4194ac:	mov	w4, wzr
  4194b0:	mov	x6, xzr
  4194b4:	bl	423d70 <define_variable_in_set@@Base>
  4194b8:	mov	sp, x29
  4194bc:	ldp	x20, x19, [sp, #48]
  4194c0:	ldp	x22, x21, [sp, #32]
  4194c4:	ldp	x24, x23, [sp, #16]
  4194c8:	ldp	x29, x30, [sp], #64
  4194cc:	ret
  4194d0:	stp	x29, x30, [sp, #-32]!
  4194d4:	stp	x20, x19, [sp, #16]
  4194d8:	ldrb	w8, [x0]
  4194dc:	mov	x19, x0
  4194e0:	mov	x29, sp
  4194e4:	cmp	w8, #0x7e
  4194e8:	b.eq	4194f8 <die@@Base+0xae4>  // b.none
  4194ec:	cbz	w8, 419574 <die@@Base+0xb60>
  4194f0:	mov	x20, xzr
  4194f4:	b	419538 <die@@Base+0xb24>
  4194f8:	mov	x0, x19
  4194fc:	bl	41dda4 <tilde_expand@@Base>
  419500:	mov	x20, x0
  419504:	cbz	x0, 419514 <die@@Base+0xb00>
  419508:	ldrb	w8, [x20]
  41950c:	cmp	w8, #0x0
  419510:	csel	x19, x19, x20, eq  // eq = none
  419514:	ldrb	w8, [x19]
  419518:	b	419538 <die@@Base+0xb24>
  41951c:	ldrb	w8, [x19, #1]
  419520:	cmp	w8, #0x2f
  419524:	b.ne	419550 <die@@Base+0xb3c>  // b.any
  419528:	add	x19, x19, #0x1
  41952c:	ldrb	w8, [x19, #1]!
  419530:	cmp	w8, #0x2f
  419534:	b.eq	41952c <die@@Base+0xb18>  // b.none
  419538:	cmp	w8, #0x2e
  41953c:	b.eq	41951c <die@@Base+0xb08>  // b.none
  419540:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x1680>
  419544:	add	x9, x9, #0x326
  419548:	cmp	w8, #0x0
  41954c:	csel	x19, x9, x19, eq  // eq = none
  419550:	mov	x0, x19
  419554:	bl	423690 <strcache_add@@Base>
  419558:	mov	x19, x0
  41955c:	mov	x0, x20
  419560:	bl	406c60 <free@plt>
  419564:	mov	x0, x19
  419568:	ldp	x20, x19, [sp, #16]
  41956c:	ldp	x29, x30, [sp], #32
  419570:	ret
  419574:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419578:	add	x1, x1, #0x80a
  41957c:	mov	w2, #0x5                   	// #5
  419580:	mov	x0, xzr
  419584:	bl	406dc0 <dcgettext@plt>
  419588:	mov	x2, x0
  41958c:	mov	x0, xzr
  419590:	mov	x1, xzr
  419594:	bl	41aff0 <fatal@@Base>
  419598:	stp	x29, x30, [sp, #-32]!
  41959c:	stp	x20, x19, [sp, #16]
  4195a0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4195a4:	ldr	w8, [x8, #3284]
  4195a8:	mov	w19, w0
  4195ac:	mov	x29, sp
  4195b0:	cbz	w8, 4195b8 <die@@Base+0xba4>
  4195b4:	bl	4188f8 <main@@Base+0x2a0c>
  4195b8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4195bc:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4195c0:	add	x8, x8, #0x9b0
  4195c4:	add	x9, x9, #0x9c8
  4195c8:	cmp	w19, #0x0
  4195cc:	csel	x8, x9, x8, eq  // eq = none
  4195d0:	ldr	x19, [x8]
  4195d4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4195d8:	add	x1, x1, #0x82c
  4195dc:	mov	w2, #0x5                   	// #5
  4195e0:	mov	x0, xzr
  4195e4:	bl	406dc0 <dcgettext@plt>
  4195e8:	adrp	x8, 442000 <just_print_flag@@Base>
  4195ec:	ldr	x2, [x8, #16]
  4195f0:	mov	x1, x0
  4195f4:	mov	x0, x19
  4195f8:	bl	406ed0 <fprintf@plt>
  4195fc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419600:	add	x1, x1, #0x8ae
  419604:	mov	w2, #0x5                   	// #5
  419608:	mov	x0, xzr
  41960c:	bl	406dc0 <dcgettext@plt>
  419610:	mov	x1, x19
  419614:	bl	406760 <fputs@plt>
  419618:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41961c:	add	x1, x1, #0x8b8
  419620:	mov	w2, #0x5                   	// #5
  419624:	mov	x0, xzr
  419628:	bl	406dc0 <dcgettext@plt>
  41962c:	mov	x1, x19
  419630:	bl	406760 <fputs@plt>
  419634:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419638:	add	x1, x1, #0x8f2
  41963c:	mov	w2, #0x5                   	// #5
  419640:	mov	x0, xzr
  419644:	bl	406dc0 <dcgettext@plt>
  419648:	mov	x1, x19
  41964c:	bl	406760 <fputs@plt>
  419650:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419654:	add	x1, x1, #0x933
  419658:	mov	w2, #0x5                   	// #5
  41965c:	mov	x0, xzr
  419660:	bl	406dc0 <dcgettext@plt>
  419664:	mov	x1, x19
  419668:	bl	406760 <fputs@plt>
  41966c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419670:	add	x1, x1, #0x9a3
  419674:	mov	w2, #0x5                   	// #5
  419678:	mov	x0, xzr
  41967c:	bl	406dc0 <dcgettext@plt>
  419680:	mov	x1, x19
  419684:	bl	406760 <fputs@plt>
  419688:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41968c:	add	x1, x1, #0x9e7
  419690:	mov	w2, #0x5                   	// #5
  419694:	mov	x0, xzr
  419698:	bl	406dc0 <dcgettext@plt>
  41969c:	mov	x1, x19
  4196a0:	bl	406760 <fputs@plt>
  4196a4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4196a8:	add	x1, x1, #0xa34
  4196ac:	mov	w2, #0x5                   	// #5
  4196b0:	mov	x0, xzr
  4196b4:	bl	406dc0 <dcgettext@plt>
  4196b8:	mov	x1, x19
  4196bc:	bl	406760 <fputs@plt>
  4196c0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4196c4:	add	x1, x1, #0xa9b
  4196c8:	mov	w2, #0x5                   	// #5
  4196cc:	mov	x0, xzr
  4196d0:	bl	406dc0 <dcgettext@plt>
  4196d4:	mov	x1, x19
  4196d8:	bl	406760 <fputs@plt>
  4196dc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4196e0:	add	x1, x1, #0xae3
  4196e4:	mov	w2, #0x5                   	// #5
  4196e8:	mov	x0, xzr
  4196ec:	bl	406dc0 <dcgettext@plt>
  4196f0:	mov	x1, x19
  4196f4:	bl	406760 <fputs@plt>
  4196f8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4196fc:	add	x1, x1, #0xb43
  419700:	mov	w2, #0x5                   	// #5
  419704:	mov	x0, xzr
  419708:	bl	406dc0 <dcgettext@plt>
  41970c:	mov	x1, x19
  419710:	bl	406760 <fputs@plt>
  419714:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419718:	add	x1, x1, #0xb7f
  41971c:	mov	w2, #0x5                   	// #5
  419720:	mov	x0, xzr
  419724:	bl	406dc0 <dcgettext@plt>
  419728:	mov	x1, x19
  41972c:	bl	406760 <fputs@plt>
  419730:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419734:	add	x1, x1, #0xbba
  419738:	mov	w2, #0x5                   	// #5
  41973c:	mov	x0, xzr
  419740:	bl	406dc0 <dcgettext@plt>
  419744:	mov	x1, x19
  419748:	bl	406760 <fputs@plt>
  41974c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419750:	add	x1, x1, #0xc2a
  419754:	mov	w2, #0x5                   	// #5
  419758:	mov	x0, xzr
  41975c:	bl	406dc0 <dcgettext@plt>
  419760:	mov	x1, x19
  419764:	bl	406760 <fputs@plt>
  419768:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41976c:	add	x1, x1, #0xc7a
  419770:	mov	w2, #0x5                   	// #5
  419774:	mov	x0, xzr
  419778:	bl	406dc0 <dcgettext@plt>
  41977c:	mov	x1, x19
  419780:	bl	406760 <fputs@plt>
  419784:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419788:	add	x1, x1, #0xcc5
  41978c:	mov	w2, #0x5                   	// #5
  419790:	mov	x0, xzr
  419794:	bl	406dc0 <dcgettext@plt>
  419798:	mov	x1, x19
  41979c:	bl	406760 <fputs@plt>
  4197a0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4197a4:	add	x1, x1, #0xd43
  4197a8:	mov	w2, #0x5                   	// #5
  4197ac:	mov	x0, xzr
  4197b0:	bl	406dc0 <dcgettext@plt>
  4197b4:	mov	x1, x19
  4197b8:	bl	406760 <fputs@plt>
  4197bc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4197c0:	add	x1, x1, #0xd94
  4197c4:	mov	w2, #0x5                   	// #5
  4197c8:	mov	x0, xzr
  4197cc:	bl	406dc0 <dcgettext@plt>
  4197d0:	mov	x1, x19
  4197d4:	bl	406760 <fputs@plt>
  4197d8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4197dc:	add	x1, x1, #0xe0a
  4197e0:	mov	w2, #0x5                   	// #5
  4197e4:	mov	x0, xzr
  4197e8:	bl	406dc0 <dcgettext@plt>
  4197ec:	mov	x1, x19
  4197f0:	bl	406760 <fputs@plt>
  4197f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4197f8:	add	x1, x1, #0xe89
  4197fc:	mov	w2, #0x5                   	// #5
  419800:	mov	x0, xzr
  419804:	bl	406dc0 <dcgettext@plt>
  419808:	mov	x1, x19
  41980c:	bl	406760 <fputs@plt>
  419810:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419814:	add	x1, x1, #0xef6
  419818:	mov	w2, #0x5                   	// #5
  41981c:	mov	x0, xzr
  419820:	bl	406dc0 <dcgettext@plt>
  419824:	mov	x1, x19
  419828:	bl	406760 <fputs@plt>
  41982c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419830:	add	x1, x1, #0xf35
  419834:	mov	w2, #0x5                   	// #5
  419838:	mov	x0, xzr
  41983c:	bl	406dc0 <dcgettext@plt>
  419840:	mov	x1, x19
  419844:	bl	406760 <fputs@plt>
  419848:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41984c:	add	x1, x1, #0xf83
  419850:	mov	w2, #0x5                   	// #5
  419854:	mov	x0, xzr
  419858:	bl	406dc0 <dcgettext@plt>
  41985c:	mov	x1, x19
  419860:	bl	406760 <fputs@plt>
  419864:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419868:	add	x1, x1, #0xfc7
  41986c:	mov	w2, #0x5                   	// #5
  419870:	mov	x0, xzr
  419874:	bl	406dc0 <dcgettext@plt>
  419878:	mov	x1, x19
  41987c:	bl	406760 <fputs@plt>
  419880:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419884:	add	x1, x1, #0xe
  419888:	mov	w2, #0x5                   	// #5
  41988c:	mov	x0, xzr
  419890:	bl	406dc0 <dcgettext@plt>
  419894:	mov	x1, x19
  419898:	bl	406760 <fputs@plt>
  41989c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4198a0:	add	x1, x1, #0x41
  4198a4:	mov	w2, #0x5                   	// #5
  4198a8:	mov	x0, xzr
  4198ac:	bl	406dc0 <dcgettext@plt>
  4198b0:	mov	x1, x19
  4198b4:	bl	406760 <fputs@plt>
  4198b8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4198bc:	add	x1, x1, #0x86
  4198c0:	mov	w2, #0x5                   	// #5
  4198c4:	mov	x0, xzr
  4198c8:	bl	406dc0 <dcgettext@plt>
  4198cc:	mov	x1, x19
  4198d0:	bl	406760 <fputs@plt>
  4198d4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4198d8:	add	x1, x1, #0xd1
  4198dc:	mov	w2, #0x5                   	// #5
  4198e0:	mov	x0, xzr
  4198e4:	bl	406dc0 <dcgettext@plt>
  4198e8:	mov	x1, x19
  4198ec:	bl	406760 <fputs@plt>
  4198f0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4198f4:	add	x1, x1, #0x118
  4198f8:	mov	w2, #0x5                   	// #5
  4198fc:	mov	x0, xzr
  419900:	bl	406dc0 <dcgettext@plt>
  419904:	mov	x1, x19
  419908:	bl	406760 <fputs@plt>
  41990c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419910:	add	x1, x1, #0x152
  419914:	mov	w2, #0x5                   	// #5
  419918:	mov	x0, xzr
  41991c:	bl	406dc0 <dcgettext@plt>
  419920:	mov	x1, x19
  419924:	bl	406760 <fputs@plt>
  419928:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41992c:	add	x1, x1, #0x19c
  419930:	mov	w2, #0x5                   	// #5
  419934:	mov	x0, xzr
  419938:	bl	406dc0 <dcgettext@plt>
  41993c:	mov	x1, x19
  419940:	bl	406760 <fputs@plt>
  419944:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419948:	add	x1, x1, #0x1d8
  41994c:	mov	w2, #0x5                   	// #5
  419950:	mov	x0, xzr
  419954:	bl	406dc0 <dcgettext@plt>
  419958:	mov	x1, x19
  41995c:	bl	406760 <fputs@plt>
  419960:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419964:	add	x1, x1, #0x229
  419968:	mov	w2, #0x5                   	// #5
  41996c:	mov	x0, xzr
  419970:	bl	406dc0 <dcgettext@plt>
  419974:	mov	x1, x19
  419978:	bl	406760 <fputs@plt>
  41997c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  419980:	add	x1, x1, #0x2aa
  419984:	mov	w2, #0x5                   	// #5
  419988:	mov	x0, xzr
  41998c:	bl	406dc0 <dcgettext@plt>
  419990:	mov	x1, x19
  419994:	bl	406760 <fputs@plt>
  419998:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  41999c:	ldr	x8, [x20, #4000]
  4199a0:	cbz	x8, 4199dc <die@@Base+0xfc8>
  4199a4:	ldrb	w8, [x8]
  4199a8:	cbz	w8, 4199dc <die@@Base+0xfc8>
  4199ac:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4199b0:	add	x1, x1, #0x86a
  4199b4:	mov	w2, #0x5                   	// #5
  4199b8:	mov	x0, xzr
  4199bc:	bl	406dc0 <dcgettext@plt>
  4199c0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4199c4:	ldr	x2, [x8, #2440]
  4199c8:	ldr	x3, [x20, #4000]
  4199cc:	mov	x1, x0
  4199d0:	mov	x0, x19
  4199d4:	bl	406ed0 <fprintf@plt>
  4199d8:	b	419a04 <die@@Base+0xff0>
  4199dc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4199e0:	add	x1, x1, #0x84e
  4199e4:	mov	w2, #0x5                   	// #5
  4199e8:	mov	x0, xzr
  4199ec:	bl	406dc0 <dcgettext@plt>
  4199f0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4199f4:	ldr	x2, [x8, #2440]
  4199f8:	mov	x1, x0
  4199fc:	mov	x0, x19
  419a00:	bl	406ed0 <fprintf@plt>
  419a04:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  419a08:	add	x1, x1, #0x88b
  419a0c:	mov	w2, #0x5                   	// #5
  419a10:	mov	x0, xzr
  419a14:	bl	406dc0 <dcgettext@plt>
  419a18:	mov	x1, x0
  419a1c:	mov	x0, x19
  419a20:	ldp	x20, x19, [sp, #16]
  419a24:	ldp	x29, x30, [sp], #32
  419a28:	b	406ed0 <fprintf@plt>

0000000000419a2c <alpha_compare@@Base>:
  419a2c:	ldr	x0, [x0]
  419a30:	ldr	x1, [x1]
  419a34:	ldrb	w8, [x0]
  419a38:	ldrb	w9, [x1]
  419a3c:	subs	w8, w8, w9
  419a40:	b.ne	419a48 <alpha_compare@@Base+0x1c>  // b.any
  419a44:	b	406c10 <strcmp@plt>
  419a48:	mov	w0, w8
  419a4c:	ret

0000000000419a50 <collapse_continuations@@Base>:
  419a50:	stp	x29, x30, [sp, #-96]!
  419a54:	mov	w1, #0xa                   	// #10
  419a58:	stp	x28, x27, [sp, #16]
  419a5c:	stp	x26, x25, [sp, #32]
  419a60:	stp	x24, x23, [sp, #48]
  419a64:	stp	x22, x21, [sp, #64]
  419a68:	stp	x20, x19, [sp, #80]
  419a6c:	mov	x29, sp
  419a70:	mov	x19, x0
  419a74:	mov	w24, #0xa                   	// #10
  419a78:	bl	406c80 <strchr@plt>
  419a7c:	cbz	x0, 419bc4 <collapse_continuations@@Base+0x174>
  419a80:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  419a84:	mov	x21, x0
  419a88:	add	x25, x25, #0xcf0
  419a8c:	adrp	x26, 442000 <just_print_flag@@Base>
  419a90:	mov	w27, #0x20                  	// #32
  419a94:	mov	x20, x19
  419a98:	mov	x22, x19
  419a9c:	b	419ac0 <collapse_continuations@@Base+0x70>
  419aa0:	add	x20, x21, #0x1
  419aa4:	strb	w24, [x8]
  419aa8:	mov	w1, #0xa                   	// #10
  419aac:	mov	x0, x20
  419ab0:	add	x22, x8, #0x1
  419ab4:	bl	406c80 <strchr@plt>
  419ab8:	mov	x21, x0
  419abc:	cbz	x0, 419b94 <collapse_continuations@@Base+0x144>
  419ac0:	cmp	x21, x19
  419ac4:	b.ls	419ae8 <collapse_continuations@@Base+0x98>  // b.plast
  419ac8:	ldurb	w8, [x21, #-1]
  419acc:	cmp	w8, #0x5c
  419ad0:	b.ne	419ae8 <collapse_continuations@@Base+0x98>  // b.any
  419ad4:	sub	x8, x21, #0x2
  419ad8:	cmp	x8, x19
  419adc:	b.cs	419af0 <collapse_continuations@@Base+0xa0>  // b.hs, b.nlast
  419ae0:	mov	w8, #0xfffffffe            	// #-2
  419ae4:	b	419b10 <collapse_continuations@@Base+0xc0>
  419ae8:	mov	w28, wzr
  419aec:	b	419b14 <collapse_continuations@@Base+0xc4>
  419af0:	mov	x8, #0xfffffffffffffffe    	// #-2
  419af4:	ldrb	w9, [x21, x8]
  419af8:	cmp	w9, #0x5c
  419afc:	b.ne	419b10 <collapse_continuations@@Base+0xc0>  // b.any
  419b00:	sub	x8, x8, #0x1
  419b04:	add	x9, x21, x8
  419b08:	cmp	x9, x19
  419b0c:	b.cs	419af4 <collapse_continuations@@Base+0xa4>  // b.hs, b.nlast
  419b10:	add	w28, w8, #0x1
  419b14:	cmp	w28, #0x0
  419b18:	sub	x8, x21, x20
  419b1c:	cinc	w9, w28, lt  // lt = tstop
  419b20:	add	x8, x8, w28, sxtw
  419b24:	neg	w9, w9, asr #1
  419b28:	cmp	x22, x20
  419b2c:	add	x23, x8, w9, sxtw
  419b30:	b.eq	419b44 <collapse_continuations@@Base+0xf4>  // b.none
  419b34:	mov	x0, x22
  419b38:	mov	x1, x20
  419b3c:	mov	x2, x23
  419b40:	bl	406720 <memmove@plt>
  419b44:	add	x8, x22, x23
  419b48:	tbz	w28, #0, 419aa0 <collapse_continuations@@Base+0x50>
  419b4c:	mov	x20, x21
  419b50:	ldrb	w9, [x20, #1]!
  419b54:	ldrh	w9, [x25, x9, lsl #1]
  419b58:	tbnz	w9, #1, 419b50 <collapse_continuations@@Base+0x100>
  419b5c:	ldr	w9, [x26, #8]
  419b60:	cbz	w9, 419b6c <collapse_continuations@@Base+0x11c>
  419b64:	mov	x9, x8
  419b68:	b	419b88 <collapse_continuations@@Base+0x138>
  419b6c:	mov	x9, x8
  419b70:	cmp	x8, x19
  419b74:	b.ls	419b88 <collapse_continuations@@Base+0x138>  // b.plast
  419b78:	mov	x8, x9
  419b7c:	ldrb	w10, [x8, #-1]!
  419b80:	ldrh	w10, [x25, x10, lsl #1]
  419b84:	tbnz	w10, #1, 419b6c <collapse_continuations@@Base+0x11c>
  419b88:	strb	w27, [x9]
  419b8c:	mov	x8, x9
  419b90:	b	419aa8 <collapse_continuations@@Base+0x58>
  419b94:	mov	x0, x20
  419b98:	bl	406750 <strlen@plt>
  419b9c:	add	x2, x0, #0x1
  419ba0:	mov	x0, x22
  419ba4:	mov	x1, x20
  419ba8:	ldp	x20, x19, [sp, #80]
  419bac:	ldp	x22, x21, [sp, #64]
  419bb0:	ldp	x24, x23, [sp, #48]
  419bb4:	ldp	x26, x25, [sp, #32]
  419bb8:	ldp	x28, x27, [sp, #16]
  419bbc:	ldp	x29, x30, [sp], #96
  419bc0:	b	406720 <memmove@plt>
  419bc4:	ldp	x20, x19, [sp, #80]
  419bc8:	ldp	x22, x21, [sp, #64]
  419bcc:	ldp	x24, x23, [sp, #48]
  419bd0:	ldp	x26, x25, [sp, #32]
  419bd4:	ldp	x28, x27, [sp, #16]
  419bd8:	ldp	x29, x30, [sp], #96
  419bdc:	ret

0000000000419be0 <print_spaces@@Base>:
  419be0:	stp	x29, x30, [sp, #-32]!
  419be4:	stp	x20, x19, [sp, #16]
  419be8:	mov	x29, sp
  419bec:	cbz	w0, 419c0c <print_spaces@@Base+0x2c>
  419bf0:	mov	w19, w0
  419bf4:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  419bf8:	ldr	x1, [x20, #2504]
  419bfc:	mov	w0, #0x20                  	// #32
  419c00:	sub	w19, w19, #0x1
  419c04:	bl	406810 <putc@plt>
  419c08:	cbnz	w19, 419bf8 <print_spaces@@Base+0x18>
  419c0c:	ldp	x20, x19, [sp, #16]
  419c10:	ldp	x29, x30, [sp], #32
  419c14:	ret

0000000000419c18 <concat@@Base>:
  419c18:	sub	sp, sp, #0x140
  419c1c:	stp	x29, x30, [sp, #224]
  419c20:	add	x29, sp, #0xe0
  419c24:	stp	x24, x23, [sp, #272]
  419c28:	mov	x8, #0xffffffffffffffc8    	// #-56
  419c2c:	mov	x9, sp
  419c30:	sub	x10, x29, #0x58
  419c34:	adrp	x24, 43f000 <stopchar_map@@Base+0x310>
  419c38:	stp	x26, x25, [sp, #256]
  419c3c:	stp	x22, x21, [sp, #288]
  419c40:	movk	x8, #0xff80, lsl #32
  419c44:	add	x11, x29, #0x60
  419c48:	adrp	x25, 43f000 <stopchar_map@@Base+0x310>
  419c4c:	adrp	x22, 43f000 <stopchar_map@@Base+0x310>
  419c50:	add	x9, x9, #0x80
  419c54:	add	x10, x10, #0x38
  419c58:	add	x24, x24, #0x5a0
  419c5c:	stp	x28, x27, [sp, #240]
  419c60:	stp	x20, x19, [sp, #304]
  419c64:	stp	x1, x2, [x29, #-88]
  419c68:	stp	x3, x4, [x29, #-72]
  419c6c:	stp	x5, x6, [x29, #-56]
  419c70:	stur	x7, [x29, #-40]
  419c74:	stp	q0, q1, [sp]
  419c78:	stp	q2, q3, [sp, #32]
  419c7c:	stp	q4, q5, [sp, #64]
  419c80:	stp	q6, q7, [sp, #96]
  419c84:	stp	x9, x8, [x29, #-16]
  419c88:	stp	x11, x10, [x29, #-32]
  419c8c:	cbz	w0, 419d64 <concat@@Base+0x14c>
  419c90:	mov	w19, w0
  419c94:	mov	x23, xzr
  419c98:	mov	w26, #0x3c                  	// #60
  419c9c:	b	419cc0 <concat@@Base+0xa8>
  419ca0:	ldr	x0, [x22, #1448]
  419ca4:	add	x0, x0, x23
  419ca8:	mov	x1, x20
  419cac:	mov	x2, x21
  419cb0:	bl	406710 <memcpy@plt>
  419cb4:	mov	x23, x27
  419cb8:	sub	w19, w19, #0x1
  419cbc:	cbz	w19, 419d68 <concat@@Base+0x150>
  419cc0:	ldursw	x8, [x29, #-8]
  419cc4:	tbz	w8, #31, 419cec <concat@@Base+0xd4>
  419cc8:	add	w9, w8, #0x8
  419ccc:	cmn	w8, #0x8
  419cd0:	stur	w9, [x29, #-8]
  419cd4:	b.gt	419cec <concat@@Base+0xd4>
  419cd8:	ldur	x9, [x29, #-24]
  419cdc:	add	x8, x9, x8
  419ce0:	ldr	x20, [x8]
  419ce4:	cbnz	x20, 419d00 <concat@@Base+0xe8>
  419ce8:	b	419cb8 <concat@@Base+0xa0>
  419cec:	ldur	x8, [x29, #-32]
  419cf0:	add	x9, x8, #0x8
  419cf4:	stur	x9, [x29, #-32]
  419cf8:	ldr	x20, [x8]
  419cfc:	cbz	x20, 419cb8 <concat@@Base+0xa0>
  419d00:	mov	x0, x20
  419d04:	bl	406750 <strlen@plt>
  419d08:	cbz	x0, 419cb8 <concat@@Base+0xa0>
  419d0c:	ldr	x8, [x25, #1440]
  419d10:	add	x27, x0, x23
  419d14:	mov	x21, x0
  419d18:	cmp	x27, x8
  419d1c:	b.ls	419ca0 <concat@@Base+0x88>  // b.plast
  419d20:	cmp	x8, #0x0
  419d24:	csel	x8, x26, x8, eq  // eq = none
  419d28:	ldr	x0, [x24, #8]
  419d2c:	add	x8, x8, x21
  419d30:	lsl	x8, x8, #1
  419d34:	cmp	x8, #0x0
  419d38:	csinc	x1, x8, xzr, ne  // ne = any
  419d3c:	str	x8, [x24]
  419d40:	cbz	x0, 419d50 <concat@@Base+0x138>
  419d44:	bl	406ac0 <realloc@plt>
  419d48:	cbnz	x0, 419d5c <concat@@Base+0x144>
  419d4c:	b	419ddc <concat@@Base+0x1c4>
  419d50:	mov	x0, x1
  419d54:	bl	406990 <malloc@plt>
  419d58:	cbz	x0, 419ddc <concat@@Base+0x1c4>
  419d5c:	str	x0, [x22, #1448]
  419d60:	b	419ca4 <concat@@Base+0x8c>
  419d64:	mov	x23, xzr
  419d68:	ldr	x8, [x25, #1440]
  419d6c:	cmp	x23, x8
  419d70:	b.ne	419da8 <concat@@Base+0x190>  // b.any
  419d74:	lsl	x8, x23, #1
  419d78:	cmp	x23, #0x0
  419d7c:	mov	w9, #0x78                  	// #120
  419d80:	ldr	x0, [x24, #8]
  419d84:	csel	x8, x9, x8, eq  // eq = none
  419d88:	cmp	x8, #0x0
  419d8c:	csinc	x1, x8, xzr, ne  // ne = any
  419d90:	str	x8, [x24]
  419d94:	cbz	x0, 419dd0 <concat@@Base+0x1b8>
  419d98:	bl	406ac0 <realloc@plt>
  419d9c:	cbz	x0, 419ddc <concat@@Base+0x1c4>
  419da0:	str	x0, [x22, #1448]
  419da4:	b	419dac <concat@@Base+0x194>
  419da8:	ldr	x0, [x22, #1448]
  419dac:	strb	wzr, [x0, x23]
  419db0:	ldp	x20, x19, [sp, #304]
  419db4:	ldp	x22, x21, [sp, #288]
  419db8:	ldp	x24, x23, [sp, #272]
  419dbc:	ldp	x26, x25, [sp, #256]
  419dc0:	ldp	x28, x27, [sp, #240]
  419dc4:	ldp	x29, x30, [sp, #224]
  419dc8:	add	sp, sp, #0x140
  419dcc:	ret
  419dd0:	mov	x0, x1
  419dd4:	bl	406990 <malloc@plt>
  419dd8:	cbnz	x0, 419da0 <concat@@Base+0x188>
  419ddc:	bl	41b248 <out_of_memory@@Base>

0000000000419de0 <xrealloc@@Base>:
  419de0:	stp	x29, x30, [sp, #-16]!
  419de4:	cmp	x1, #0x0
  419de8:	csinc	x1, x1, xzr, ne  // ne = any
  419dec:	mov	x29, sp
  419df0:	cbz	x0, 419e04 <xrealloc@@Base+0x24>
  419df4:	bl	406ac0 <realloc@plt>
  419df8:	cbz	x0, 419e10 <xrealloc@@Base+0x30>
  419dfc:	ldp	x29, x30, [sp], #16
  419e00:	ret
  419e04:	mov	x0, x1
  419e08:	bl	406990 <malloc@plt>
  419e0c:	cbnz	x0, 419dfc <xrealloc@@Base+0x1c>
  419e10:	bl	41b248 <out_of_memory@@Base>

0000000000419e14 <xmalloc@@Base>:
  419e14:	stp	x29, x30, [sp, #-16]!
  419e18:	cmp	x0, #0x0
  419e1c:	csinc	x0, x0, xzr, ne  // ne = any
  419e20:	mov	x29, sp
  419e24:	bl	406990 <malloc@plt>
  419e28:	cbz	x0, 419e34 <xmalloc@@Base+0x20>
  419e2c:	ldp	x29, x30, [sp], #16
  419e30:	ret
  419e34:	bl	41b248 <out_of_memory@@Base>

0000000000419e38 <xcalloc@@Base>:
  419e38:	stp	x29, x30, [sp, #-16]!
  419e3c:	cmp	x0, #0x0
  419e40:	csinc	x0, x0, xzr, ne  // ne = any
  419e44:	mov	w1, #0x1                   	// #1
  419e48:	mov	x29, sp
  419e4c:	bl	406a90 <calloc@plt>
  419e50:	cbz	x0, 419e5c <xcalloc@@Base+0x24>
  419e54:	ldp	x29, x30, [sp], #16
  419e58:	ret
  419e5c:	bl	41b248 <out_of_memory@@Base>

0000000000419e60 <xstrdup@@Base>:
  419e60:	stp	x29, x30, [sp, #-16]!
  419e64:	mov	x29, sp
  419e68:	bl	406ae0 <strdup@plt>
  419e6c:	cbz	x0, 419e78 <xstrdup@@Base+0x18>
  419e70:	ldp	x29, x30, [sp], #16
  419e74:	ret
  419e78:	bl	41b248 <out_of_memory@@Base>

0000000000419e7c <xstrndup@@Base>:
  419e7c:	stp	x29, x30, [sp, #-16]!
  419e80:	mov	x29, sp
  419e84:	bl	406c70 <strndup@plt>
  419e88:	cbz	x0, 419e94 <xstrndup@@Base+0x18>
  419e8c:	ldp	x29, x30, [sp], #16
  419e90:	ret
  419e94:	bl	41b248 <out_of_memory@@Base>

0000000000419e98 <lindex@@Base>:
  419e98:	cmp	x0, x1
  419e9c:	b.cs	419eb4 <lindex@@Base+0x1c>  // b.hs, b.nlast
  419ea0:	ldrb	w8, [x0], #1
  419ea4:	cmp	w8, w2
  419ea8:	b.ne	419e98 <lindex@@Base>  // b.any
  419eac:	sub	x0, x0, #0x1
  419eb0:	ret
  419eb4:	mov	x0, xzr
  419eb8:	ret

0000000000419ebc <end_of_token@@Base>:
  419ebc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  419ec0:	sub	x0, x0, #0x1
  419ec4:	add	x8, x8, #0xcf0
  419ec8:	ldrb	w9, [x0, #1]!
  419ecc:	ldrh	w9, [x8, x9, lsl #1]
  419ed0:	tst	w9, #0x7
  419ed4:	b.eq	419ec8 <end_of_token@@Base+0xc>  // b.none
  419ed8:	ret

0000000000419edc <next_token@@Base>:
  419edc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  419ee0:	sub	x0, x0, #0x1
  419ee4:	add	x8, x8, #0xcf0
  419ee8:	ldrb	w9, [x0, #1]!
  419eec:	ldrh	w9, [x8, x9, lsl #1]
  419ef0:	tst	w9, #0x6
  419ef4:	b.ne	419ee8 <next_token@@Base+0xc>  // b.any
  419ef8:	ret

0000000000419efc <find_next_token@@Base>:
  419efc:	ldr	x9, [x0]
  419f00:	mov	x8, x0
  419f04:	sub	x0, x9, #0x1
  419f08:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  419f0c:	add	x9, x9, #0xcf0
  419f10:	ldrb	w10, [x0, #1]!
  419f14:	ldrh	w11, [x9, x10, lsl #1]
  419f18:	tst	w11, #0x6
  419f1c:	b.ne	419f10 <find_next_token@@Base+0x14>  // b.any
  419f20:	cbz	w10, 419f58 <find_next_token@@Base+0x5c>
  419f24:	tst	w11, #0x7
  419f28:	mov	x10, x0
  419f2c:	b.ne	419f44 <find_next_token@@Base+0x48>  // b.any
  419f30:	mov	x10, x0
  419f34:	ldrb	w11, [x10, #1]!
  419f38:	ldrh	w11, [x9, x11, lsl #1]
  419f3c:	tst	w11, #0x7
  419f40:	b.eq	419f34 <find_next_token@@Base+0x38>  // b.none
  419f44:	str	x10, [x8]
  419f48:	cbz	x1, 419f54 <find_next_token@@Base+0x58>
  419f4c:	sub	x8, x10, x0
  419f50:	str	x8, [x1]
  419f54:	ret
  419f58:	mov	x0, xzr
  419f5c:	ret

0000000000419f60 <writebuf@@Base>:
  419f60:	stp	x29, x30, [sp, #-48]!
  419f64:	stp	x22, x21, [sp, #16]
  419f68:	stp	x20, x19, [sp, #32]
  419f6c:	mov	x29, sp
  419f70:	cbz	x2, 419fe8 <writebuf@@Base+0x88>
  419f74:	mov	x19, x2
  419f78:	mov	x20, x1
  419f7c:	mov	w21, w0
  419f80:	mov	x22, x2
  419f84:	mov	w0, w21
  419f88:	mov	x1, x20
  419f8c:	mov	x2, x22
  419f90:	bl	406b50 <write@plt>
  419f94:	cmn	x0, #0x1
  419f98:	b.ne	419fb0 <writebuf@@Base+0x50>  // b.any
  419f9c:	bl	406e70 <__errno_location@plt>
  419fa0:	ldr	w8, [x0]
  419fa4:	cmp	w8, #0x4
  419fa8:	b.eq	419f84 <writebuf@@Base+0x24>  // b.none
  419fac:	b	419fd4 <writebuf@@Base+0x74>
  419fb0:	tbnz	x0, #63, 419fd8 <writebuf@@Base+0x78>
  419fb4:	subs	x22, x22, x0
  419fb8:	add	x20, x20, x0
  419fbc:	b.ne	419f84 <writebuf@@Base+0x24>  // b.any
  419fc0:	mov	x0, x19
  419fc4:	ldp	x20, x19, [sp, #32]
  419fc8:	ldp	x22, x21, [sp, #16]
  419fcc:	ldp	x29, x30, [sp], #48
  419fd0:	ret
  419fd4:	mov	x0, #0xffffffffffffffff    	// #-1
  419fd8:	ldp	x20, x19, [sp, #32]
  419fdc:	ldp	x22, x21, [sp, #16]
  419fe0:	ldp	x29, x30, [sp], #48
  419fe4:	ret
  419fe8:	mov	x0, xzr
  419fec:	ldp	x20, x19, [sp, #32]
  419ff0:	ldp	x22, x21, [sp, #16]
  419ff4:	ldp	x29, x30, [sp], #48
  419ff8:	ret

0000000000419ffc <readbuf@@Base>:
  419ffc:	stp	x29, x30, [sp, #-48]!
  41a000:	stp	x20, x19, [sp, #32]
  41a004:	mov	x19, x1
  41a008:	mov	x20, x1
  41a00c:	stp	x22, x21, [sp, #16]
  41a010:	mov	x29, sp
  41a014:	cbz	x2, 41a064 <readbuf@@Base+0x68>
  41a018:	mov	x21, x2
  41a01c:	mov	w22, w0
  41a020:	mov	x20, x19
  41a024:	mov	w0, w22
  41a028:	mov	x1, x20
  41a02c:	mov	x2, x21
  41a030:	bl	406d50 <read@plt>
  41a034:	cmn	x0, #0x1
  41a038:	b.ne	41a050 <readbuf@@Base+0x54>  // b.any
  41a03c:	bl	406e70 <__errno_location@plt>
  41a040:	ldr	w8, [x0]
  41a044:	cmp	w8, #0x4
  41a048:	b.eq	41a024 <readbuf@@Base+0x28>  // b.none
  41a04c:	b	41a078 <readbuf@@Base+0x7c>
  41a050:	tbnz	x0, #63, 41a068 <readbuf@@Base+0x6c>
  41a054:	cbz	x0, 41a064 <readbuf@@Base+0x68>
  41a058:	subs	x21, x21, x0
  41a05c:	add	x20, x20, x0
  41a060:	b.ne	41a024 <readbuf@@Base+0x28>  // b.any
  41a064:	sub	x0, x20, x19
  41a068:	ldp	x20, x19, [sp, #32]
  41a06c:	ldp	x22, x21, [sp, #16]
  41a070:	ldp	x29, x30, [sp], #48
  41a074:	ret
  41a078:	mov	x0, #0xffffffffffffffff    	// #-1
  41a07c:	ldp	x20, x19, [sp, #32]
  41a080:	ldp	x22, x21, [sp, #16]
  41a084:	ldp	x29, x30, [sp], #48
  41a088:	ret

000000000041a08c <copy_dep_chain@@Base>:
  41a08c:	stp	x29, x30, [sp, #-48]!
  41a090:	stp	x22, x21, [sp, #16]
  41a094:	stp	x20, x19, [sp, #32]
  41a098:	mov	x29, sp
  41a09c:	cbz	x0, 41a114 <copy_dep_chain@@Base+0x88>
  41a0a0:	mov	x19, x0
  41a0a4:	mov	x22, xzr
  41a0a8:	mov	x20, xzr
  41a0ac:	b	41a0c0 <copy_dep_chain@@Base+0x34>
  41a0b0:	mov	x20, x21
  41a0b4:	ldr	x19, [x19]
  41a0b8:	mov	x22, x21
  41a0bc:	cbz	x19, 41a118 <copy_dep_chain@@Base+0x8c>
  41a0c0:	mov	w0, #0x28                  	// #40
  41a0c4:	bl	406990 <malloc@plt>
  41a0c8:	cbz	x0, 41a12c <copy_dep_chain@@Base+0xa0>
  41a0cc:	ldr	x8, [x19, #32]
  41a0d0:	ldp	q0, q1, [x19]
  41a0d4:	mov	x21, x0
  41a0d8:	str	x8, [x0, #32]
  41a0dc:	ubfx	x8, x8, #8, #8
  41a0e0:	stp	q0, q1, [x0]
  41a0e4:	tbz	w8, #3, 41a0f8 <copy_dep_chain@@Base+0x6c>
  41a0e8:	ldr	x0, [x21, #8]
  41a0ec:	bl	406ae0 <strdup@plt>
  41a0f0:	cbz	x0, 41a12c <copy_dep_chain@@Base+0xa0>
  41a0f4:	str	x0, [x21, #8]
  41a0f8:	str	xzr, [x21]
  41a0fc:	cbz	x20, 41a0b0 <copy_dep_chain@@Base+0x24>
  41a100:	str	x21, [x22]
  41a104:	ldr	x19, [x19]
  41a108:	mov	x22, x21
  41a10c:	cbnz	x19, 41a0c0 <copy_dep_chain@@Base+0x34>
  41a110:	b	41a118 <copy_dep_chain@@Base+0x8c>
  41a114:	mov	x20, xzr
  41a118:	mov	x0, x20
  41a11c:	ldp	x20, x19, [sp, #32]
  41a120:	ldp	x22, x21, [sp, #16]
  41a124:	ldp	x29, x30, [sp], #48
  41a128:	ret
  41a12c:	bl	41b248 <out_of_memory@@Base>

000000000041a130 <free_ns_chain@@Base>:
  41a130:	stp	x29, x30, [sp, #-32]!
  41a134:	str	x19, [sp, #16]
  41a138:	mov	x29, sp
  41a13c:	cbz	x0, 41a150 <free_ns_chain@@Base+0x20>
  41a140:	ldr	x19, [x0]
  41a144:	bl	406c60 <free@plt>
  41a148:	mov	x0, x19
  41a14c:	cbnz	x19, 41a140 <free_ns_chain@@Base+0x10>
  41a150:	ldr	x19, [sp, #16]
  41a154:	ldp	x29, x30, [sp], #32
  41a158:	ret

000000000041a15c <get_tmpfile@@Base>:
  41a15c:	stp	x29, x30, [sp, #-48]!
  41a160:	stp	x20, x19, [sp, #32]
  41a164:	mov	x20, x0
  41a168:	mov	w0, #0x3f                  	// #63
  41a16c:	str	x21, [sp, #16]
  41a170:	mov	x29, sp
  41a174:	mov	x21, x1
  41a178:	bl	406e50 <umask@plt>
  41a17c:	mov	w19, w0
  41a180:	mov	x0, x21
  41a184:	bl	406750 <strlen@plt>
  41a188:	adds	x8, x0, #0x1
  41a18c:	csinc	x0, x8, xzr, cc  // cc = lo, ul, last
  41a190:	bl	406990 <malloc@plt>
  41a194:	cbz	x0, 41a1f8 <get_tmpfile@@Base+0x9c>
  41a198:	mov	x1, x21
  41a19c:	str	x0, [x20]
  41a1a0:	bl	406d00 <strcpy@plt>
  41a1a4:	ldr	x0, [x20]
  41a1a8:	bl	406d70 <mkstemp@plt>
  41a1ac:	cmn	w0, #0x1
  41a1b0:	b.ne	41a1cc <get_tmpfile@@Base+0x70>  // b.any
  41a1b4:	bl	406e70 <__errno_location@plt>
  41a1b8:	ldr	w8, [x0]
  41a1bc:	cmp	w8, #0x4
  41a1c0:	b.eq	41a1a4 <get_tmpfile@@Base+0x48>  // b.none
  41a1c4:	mov	x20, xzr
  41a1c8:	b	41a1dc <get_tmpfile@@Base+0x80>
  41a1cc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41a1d0:	add	x1, x1, #0x684
  41a1d4:	bl	406a40 <fdopen@plt>
  41a1d8:	mov	x20, x0
  41a1dc:	mov	w0, w19
  41a1e0:	bl	406e50 <umask@plt>
  41a1e4:	mov	x0, x20
  41a1e8:	ldp	x20, x19, [sp, #32]
  41a1ec:	ldr	x21, [sp, #16]
  41a1f0:	ldp	x29, x30, [sp], #48
  41a1f4:	ret
  41a1f8:	bl	41b248 <out_of_memory@@Base>

000000000041a1fc <user_access@@Base>:
  41a1fc:	ret

000000000041a200 <make_access@@Base>:
  41a200:	ret

000000000041a204 <child_access@@Base>:
  41a204:	ret

000000000041a208 <output_tmpfd@@Base>:
  41a208:	stp	x29, x30, [sp, #-48]!
  41a20c:	mov	w0, #0x3f                  	// #63
  41a210:	str	x21, [sp, #16]
  41a214:	stp	x20, x19, [sp, #32]
  41a218:	mov	x29, sp
  41a21c:	bl	406e50 <umask@plt>
  41a220:	mov	w19, w0
  41a224:	bl	4067a0 <tmpfile@plt>
  41a228:	cbz	x0, 41a2a4 <output_tmpfd@@Base+0x9c>
  41a22c:	mov	x21, x0
  41a230:	bl	406910 <fileno@plt>
  41a234:	bl	406780 <dup@plt>
  41a238:	tbnz	w0, #31, 41a2b0 <output_tmpfd@@Base+0xa8>
  41a23c:	mov	w20, w0
  41a240:	mov	x0, x21
  41a244:	bl	406950 <fclose@plt>
  41a248:	mov	w1, #0x3                   	// #3
  41a24c:	mov	w0, w20
  41a250:	mov	w2, wzr
  41a254:	bl	42749c <rpl_fcntl@@Base>
  41a258:	tbnz	w0, #31, 41a288 <output_tmpfd@@Base+0x80>
  41a25c:	orr	w21, w0, #0x400
  41a260:	mov	w1, #0x4                   	// #4
  41a264:	mov	w0, w20
  41a268:	mov	w2, w21
  41a26c:	bl	42749c <rpl_fcntl@@Base>
  41a270:	cmn	w0, #0x1
  41a274:	b.ne	41a288 <output_tmpfd@@Base+0x80>  // b.any
  41a278:	bl	406e70 <__errno_location@plt>
  41a27c:	ldr	w8, [x0]
  41a280:	cmp	w8, #0x4
  41a284:	b.eq	41a260 <output_tmpfd@@Base+0x58>  // b.none
  41a288:	mov	w0, w19
  41a28c:	bl	406e50 <umask@plt>
  41a290:	mov	w0, w20
  41a294:	ldp	x20, x19, [sp, #32]
  41a298:	ldr	x21, [sp, #16]
  41a29c:	ldp	x29, x30, [sp], #48
  41a2a0:	ret
  41a2a4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a2a8:	add	x0, x0, #0x5a0
  41a2ac:	bl	41a2bc <pfatal_with_name@@Base>
  41a2b0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a2b4:	add	x0, x0, #0x5a8
  41a2b8:	bl	41a2bc <pfatal_with_name@@Base>

000000000041a2bc <pfatal_with_name@@Base>:
  41a2bc:	stp	x29, x30, [sp, #-48]!
  41a2c0:	str	x21, [sp, #16]
  41a2c4:	stp	x20, x19, [sp, #32]
  41a2c8:	mov	x29, sp
  41a2cc:	mov	x19, x0
  41a2d0:	bl	406e70 <__errno_location@plt>
  41a2d4:	ldr	w0, [x0]
  41a2d8:	bl	406b00 <strerror@plt>
  41a2dc:	mov	x20, x0
  41a2e0:	mov	x0, x19
  41a2e4:	bl	406750 <strlen@plt>
  41a2e8:	mov	x21, x0
  41a2ec:	mov	x0, x20
  41a2f0:	bl	406750 <strlen@plt>
  41a2f4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  41a2f8:	add	x21, x0, x21
  41a2fc:	add	x1, x1, #0xd0a
  41a300:	mov	w2, #0x5                   	// #5
  41a304:	mov	x0, xzr
  41a308:	bl	406dc0 <dcgettext@plt>
  41a30c:	mov	x2, x0
  41a310:	mov	x0, xzr
  41a314:	mov	x1, x21
  41a318:	mov	x3, x19
  41a31c:	mov	x4, x20
  41a320:	bl	41aff0 <fatal@@Base>

000000000041a324 <output_dump@@Base>:
  41a324:	stp	x29, x30, [sp, #-64]!
  41a328:	stp	x24, x23, [sp, #16]
  41a32c:	stp	x22, x21, [sp, #32]
  41a330:	stp	x20, x19, [sp, #48]
  41a334:	mov	x19, x0
  41a338:	ldr	w0, [x0]
  41a33c:	mov	x29, sp
  41a340:	cmn	w0, #0x1
  41a344:	b.eq	41a38c <output_dump@@Base+0x68>  // b.none
  41a348:	mov	w2, #0x2                   	// #2
  41a34c:	mov	x1, xzr
  41a350:	bl	4068c0 <lseek@plt>
  41a354:	cmp	x0, #0x0
  41a358:	cset	w22, gt
  41a35c:	ldr	w0, [x19, #4]
  41a360:	cmn	w0, #0x1
  41a364:	b.eq	41a39c <output_dump@@Base+0x78>  // b.none
  41a368:	mov	w2, #0x2                   	// #2
  41a36c:	mov	x1, xzr
  41a370:	bl	4068c0 <lseek@plt>
  41a374:	cmp	x0, #0x0
  41a378:	cset	w23, gt
  41a37c:	orr	w8, w22, w23
  41a380:	cmp	w8, #0x1
  41a384:	b.eq	41a3ac <output_dump@@Base+0x88>  // b.none
  41a388:	b	41a4f4 <output_dump@@Base+0x1d0>
  41a38c:	mov	w22, wzr
  41a390:	ldr	w0, [x19, #4]
  41a394:	cmn	w0, #0x1
  41a398:	b.ne	41a368 <output_dump@@Base+0x44>  // b.any
  41a39c:	mov	w23, wzr
  41a3a0:	orr	w8, w22, w23
  41a3a4:	cmp	w8, #0x1
  41a3a8:	b.ne	41a4f4 <output_dump@@Base+0x1d0>  // b.any
  41a3ac:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a3b0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41a3b4:	ldr	q0, [x8, #1424]
  41a3b8:	ldr	w0, [x21, #2384]
  41a3bc:	adrp	x20, 43f000 <stopchar_map@@Base+0x310>
  41a3c0:	add	x20, x20, #0x5c0
  41a3c4:	mov	w8, #0x1                   	// #1
  41a3c8:	mov	w1, #0x7                   	// #7
  41a3cc:	mov	x2, x20
  41a3d0:	str	w8, [x20]
  41a3d4:	stur	q0, [x20, #8]
  41a3d8:	bl	42749c <rpl_fcntl@@Base>
  41a3dc:	cmn	w0, #0x1
  41a3e0:	b.eq	41a508 <output_dump@@Base+0x1e4>  // b.none
  41a3e4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a3e8:	ldr	w8, [x8, #3276]
  41a3ec:	mov	w24, wzr
  41a3f0:	cbz	w8, 41a410 <output_dump@@Base+0xec>
  41a3f4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a3f8:	ldr	w8, [x8, #3304]
  41a3fc:	cmp	w8, #0x3
  41a400:	b.eq	41a410 <output_dump@@Base+0xec>  // b.none
  41a404:	mov	w0, #0x1                   	// #1
  41a408:	mov	w24, #0x1                   	// #1
  41a40c:	bl	41a548 <output_dump@@Base+0x224>
  41a410:	cbz	w22, 41a424 <output_dump@@Base+0x100>
  41a414:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a418:	ldr	w0, [x19]
  41a41c:	ldr	x1, [x8, #2504]
  41a420:	bl	41a6b8 <output_dump@@Base+0x394>
  41a424:	cbz	w23, 41a440 <output_dump@@Base+0x11c>
  41a428:	ldp	w8, w0, [x19]
  41a42c:	cmp	w0, w8
  41a430:	b.eq	41a440 <output_dump@@Base+0x11c>  // b.none
  41a434:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a438:	ldr	x1, [x8, #2480]
  41a43c:	bl	41a6b8 <output_dump@@Base+0x394>
  41a440:	cbz	w24, 41a44c <output_dump@@Base+0x128>
  41a444:	mov	w0, wzr
  41a448:	bl	41a548 <output_dump@@Base+0x224>
  41a44c:	cbz	x20, 41a470 <output_dump@@Base+0x14c>
  41a450:	mov	w8, #0x2                   	// #2
  41a454:	strh	w8, [x20]
  41a458:	ldr	w0, [x21, #2384]
  41a45c:	mov	w1, #0x7                   	// #7
  41a460:	mov	x2, x20
  41a464:	bl	42749c <rpl_fcntl@@Base>
  41a468:	cmn	w0, #0x1
  41a46c:	b.eq	41a52c <output_dump@@Base+0x208>  // b.none
  41a470:	ldr	w0, [x19]
  41a474:	cmn	w0, #0x1
  41a478:	b.eq	41a4ac <output_dump@@Base+0x188>  // b.none
  41a47c:	mov	x1, xzr
  41a480:	mov	w2, wzr
  41a484:	bl	4068c0 <lseek@plt>
  41a488:	ldr	w0, [x19]
  41a48c:	mov	x1, xzr
  41a490:	bl	406e10 <ftruncate@plt>
  41a494:	cmn	w0, #0x1
  41a498:	b.ne	41a4ac <output_dump@@Base+0x188>  // b.any
  41a49c:	bl	406e70 <__errno_location@plt>
  41a4a0:	ldr	w8, [x0]
  41a4a4:	cmp	w8, #0x4
  41a4a8:	b.eq	41a488 <output_dump@@Base+0x164>  // b.none
  41a4ac:	ldr	w0, [x19, #4]
  41a4b0:	cmn	w0, #0x1
  41a4b4:	b.eq	41a4f4 <output_dump@@Base+0x1d0>  // b.none
  41a4b8:	ldr	w8, [x19]
  41a4bc:	cmp	w0, w8
  41a4c0:	b.eq	41a4f4 <output_dump@@Base+0x1d0>  // b.none
  41a4c4:	mov	x1, xzr
  41a4c8:	mov	w2, wzr
  41a4cc:	bl	4068c0 <lseek@plt>
  41a4d0:	ldr	w0, [x19, #4]
  41a4d4:	mov	x1, xzr
  41a4d8:	bl	406e10 <ftruncate@plt>
  41a4dc:	cmn	w0, #0x1
  41a4e0:	b.ne	41a4f4 <output_dump@@Base+0x1d0>  // b.any
  41a4e4:	bl	406e70 <__errno_location@plt>
  41a4e8:	ldr	w8, [x0]
  41a4ec:	cmp	w8, #0x4
  41a4f0:	b.eq	41a4d0 <output_dump@@Base+0x1ac>  // b.none
  41a4f4:	ldp	x20, x19, [sp, #48]
  41a4f8:	ldp	x22, x21, [sp, #32]
  41a4fc:	ldp	x24, x23, [sp, #16]
  41a500:	ldp	x29, x30, [sp], #64
  41a504:	ret
  41a508:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a50c:	add	x0, x0, #0x619
  41a510:	bl	406790 <perror@plt>
  41a514:	mov	x20, xzr
  41a518:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a51c:	ldr	w8, [x8, #3276]
  41a520:	mov	w24, wzr
  41a524:	cbnz	w8, 41a3f4 <output_dump@@Base+0xd0>
  41a528:	b	41a410 <output_dump@@Base+0xec>
  41a52c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a530:	add	x0, x0, #0x619
  41a534:	bl	406790 <perror@plt>
  41a538:	ldr	w0, [x19]
  41a53c:	cmn	w0, #0x1
  41a540:	b.ne	41a47c <output_dump@@Base+0x158>  // b.any
  41a544:	b	41a4ac <output_dump@@Base+0x188>
  41a548:	stp	x29, x30, [sp, #-80]!
  41a54c:	stp	x24, x23, [sp, #32]
  41a550:	stp	x22, x21, [sp, #48]
  41a554:	stp	x20, x19, [sp, #64]
  41a558:	adrp	x21, 442000 <just_print_flag@@Base>
  41a55c:	ldr	x8, [x21, #16]
  41a560:	mov	w19, w0
  41a564:	str	x25, [sp, #16]
  41a568:	mov	x29, sp
  41a56c:	mov	x0, x8
  41a570:	bl	406750 <strlen@plt>
  41a574:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  41a578:	ldr	x20, [x22, #4088]
  41a57c:	add	x24, x0, #0x17
  41a580:	cbz	x20, 41a590 <output_dump@@Base+0x26c>
  41a584:	mov	x0, x20
  41a588:	bl	406750 <strlen@plt>
  41a58c:	add	x24, x0, x24
  41a590:	adrp	x23, 442000 <just_print_flag@@Base>
  41a594:	ldr	w8, [x23, #32]
  41a598:	cbz	w8, 41a5b4 <output_dump@@Base+0x290>
  41a59c:	cbz	x20, 41a5cc <output_dump@@Base+0x2a8>
  41a5a0:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5a4:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5a8:	add	x8, x8, #0x70d
  41a5ac:	add	x9, x9, #0x6ec
  41a5b0:	b	41a5f0 <output_dump@@Base+0x2cc>
  41a5b4:	cbz	x20, 41a5e0 <output_dump@@Base+0x2bc>
  41a5b8:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5bc:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5c0:	add	x8, x8, #0x683
  41a5c4:	add	x9, x9, #0x666
  41a5c8:	b	41a5f0 <output_dump@@Base+0x2cc>
  41a5cc:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5d0:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5d4:	add	x8, x8, #0x6c6
  41a5d8:	add	x9, x9, #0x69f
  41a5dc:	b	41a5f0 <output_dump@@Base+0x2cc>
  41a5e0:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5e4:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a5e8:	add	x8, x8, #0x644
  41a5ec:	add	x9, x9, #0x621
  41a5f0:	cmp	w19, #0x0
  41a5f4:	csel	x1, x9, x8, ne  // ne = any
  41a5f8:	mov	w2, #0x5                   	// #5
  41a5fc:	mov	x0, xzr
  41a600:	bl	406dc0 <dcgettext@plt>
  41a604:	mov	x19, x0
  41a608:	bl	406750 <strlen@plt>
  41a60c:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  41a610:	add	x25, x25, #0x5e0
  41a614:	mov	x8, x0
  41a618:	ldp	x0, x9, [x25]
  41a61c:	add	x20, x8, x24
  41a620:	cmp	x20, x9
  41a624:	b.ls	41a634 <output_dump@@Base+0x310>  // b.plast
  41a628:	mov	x1, x20
  41a62c:	bl	419de0 <xrealloc@@Base>
  41a630:	stp	x0, x20, [x25]
  41a634:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a638:	ldr	w8, [x8, #3256]
  41a63c:	cbz	w8, 41a648 <output_dump@@Base+0x324>
  41a640:	mov	w8, #0x2023                	// #8227
  41a644:	strh	w8, [x0], #2
  41a648:	ldr	w3, [x23, #32]
  41a64c:	ldr	x4, [x22, #4088]
  41a650:	ldr	x2, [x21, #16]
  41a654:	mov	x1, x19
  41a658:	cbz	w3, 41a668 <output_dump@@Base+0x344>
  41a65c:	cbz	x4, 41a678 <output_dump@@Base+0x354>
  41a660:	bl	406800 <sprintf@plt>
  41a664:	b	41a684 <output_dump@@Base+0x360>
  41a668:	cbz	x4, 41a680 <output_dump@@Base+0x35c>
  41a66c:	mov	x3, x4
  41a670:	bl	406800 <sprintf@plt>
  41a674:	b	41a684 <output_dump@@Base+0x360>
  41a678:	bl	406800 <sprintf@plt>
  41a67c:	b	41a684 <output_dump@@Base+0x360>
  41a680:	bl	406800 <sprintf@plt>
  41a684:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41a688:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41a68c:	ldr	x19, [x9, #2504]
  41a690:	ldr	x0, [x8, #1504]
  41a694:	mov	x1, x19
  41a698:	bl	406760 <fputs@plt>
  41a69c:	mov	x0, x19
  41a6a0:	ldp	x20, x19, [sp, #64]
  41a6a4:	ldp	x22, x21, [sp, #48]
  41a6a8:	ldp	x24, x23, [sp, #32]
  41a6ac:	ldr	x25, [sp, #16]
  41a6b0:	ldp	x29, x30, [sp], #80
  41a6b4:	b	406cf0 <fflush@plt>
  41a6b8:	stp	x29, x30, [sp, #-64]!
  41a6bc:	stp	x20, x19, [sp, #48]
  41a6c0:	mov	x19, x1
  41a6c4:	mov	x1, xzr
  41a6c8:	mov	w2, wzr
  41a6cc:	str	x23, [sp, #16]
  41a6d0:	stp	x22, x21, [sp, #32]
  41a6d4:	mov	x29, sp
  41a6d8:	mov	w20, w0
  41a6dc:	bl	4068c0 <lseek@plt>
  41a6e0:	cmn	x0, #0x1
  41a6e4:	b.eq	41a788 <output_dump@@Base+0x464>  // b.none
  41a6e8:	adrp	x22, 43f000 <stopchar_map@@Base+0x310>
  41a6ec:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a6f0:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a6f4:	add	x22, x22, #0x5e0
  41a6f8:	add	x21, x21, #0x735
  41a6fc:	add	x23, x23, #0x73c
  41a700:	b	41a714 <output_dump@@Base+0x3f0>
  41a704:	bl	406e70 <__errno_location@plt>
  41a708:	ldr	w8, [x0]
  41a70c:	cmp	w8, #0x4
  41a710:	b.ne	41a75c <output_dump@@Base+0x438>  // b.any
  41a714:	mov	w2, #0x2000                	// #8192
  41a718:	mov	w0, w20
  41a71c:	mov	x1, x22
  41a720:	bl	406d50 <read@plt>
  41a724:	cmn	w0, #0x1
  41a728:	b.eq	41a704 <output_dump@@Base+0x3e0>  // b.none
  41a72c:	tbnz	w0, #31, 41a75c <output_dump@@Base+0x438>
  41a730:	cbz	w0, 41a774 <output_dump@@Base+0x450>
  41a734:	sxtw	x1, w0
  41a738:	mov	w2, #0x1                   	// #1
  41a73c:	mov	x0, x22
  41a740:	mov	x3, x19
  41a744:	bl	406cb0 <fwrite@plt>
  41a748:	cbz	x0, 41a758 <output_dump@@Base+0x434>
  41a74c:	mov	x0, x19
  41a750:	bl	406cf0 <fflush@plt>
  41a754:	b	41a714 <output_dump@@Base+0x3f0>
  41a758:	mov	x21, x23
  41a75c:	mov	x0, x21
  41a760:	ldp	x20, x19, [sp, #48]
  41a764:	ldp	x22, x21, [sp, #32]
  41a768:	ldr	x23, [sp, #16]
  41a76c:	ldp	x29, x30, [sp], #64
  41a770:	b	406790 <perror@plt>
  41a774:	ldp	x20, x19, [sp, #48]
  41a778:	ldp	x22, x21, [sp, #32]
  41a77c:	ldr	x23, [sp, #16]
  41a780:	ldp	x29, x30, [sp], #64
  41a784:	ret
  41a788:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a78c:	add	x0, x0, #0x72d
  41a790:	bl	406790 <perror@plt>
  41a794:	b	41a6e8 <output_dump@@Base+0x3c4>

000000000041a798 <output_init@@Base>:
  41a798:	stp	x29, x30, [sp, #-48]!
  41a79c:	str	x21, [sp, #16]
  41a7a0:	stp	x20, x19, [sp, #32]
  41a7a4:	mov	x29, sp
  41a7a8:	cbz	x0, 41a7e4 <output_init@@Base+0x4c>
  41a7ac:	movi	v0.2d, #0xffffffffffffffff
  41a7b0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a7b4:	str	d0, [x0]
  41a7b8:	ldr	w8, [x8, #3304]
  41a7bc:	ldrb	w9, [x0, #8]
  41a7c0:	cmp	w8, #0x0
  41a7c4:	cset	w8, ne  // ne = any
  41a7c8:	and	w9, w9, #0xfe
  41a7cc:	orr	w8, w9, w8
  41a7d0:	strb	w8, [x0, #8]
  41a7d4:	ldp	x20, x19, [sp, #32]
  41a7d8:	ldr	x21, [sp, #16]
  41a7dc:	ldp	x29, x30, [sp], #48
  41a7e0:	ret
  41a7e4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41a7e8:	ldr	x0, [x21, #2504]
  41a7ec:	mov	w2, #0x1                   	// #1
  41a7f0:	mov	w3, #0x2000                	// #8192
  41a7f4:	mov	x1, xzr
  41a7f8:	bl	4068b0 <setvbuf@plt>
  41a7fc:	ldr	x0, [x21, #2504]
  41a800:	bl	406910 <fileno@plt>
  41a804:	mov	w1, #0x3                   	// #3
  41a808:	mov	w2, wzr
  41a80c:	mov	w19, w0
  41a810:	bl	42749c <rpl_fcntl@@Base>
  41a814:	tbnz	w0, #31, 41a844 <output_init@@Base+0xac>
  41a818:	orr	w20, w0, #0x400
  41a81c:	mov	w1, #0x4                   	// #4
  41a820:	mov	w0, w19
  41a824:	mov	w2, w20
  41a828:	bl	42749c <rpl_fcntl@@Base>
  41a82c:	cmn	w0, #0x1
  41a830:	b.ne	41a844 <output_init@@Base+0xac>  // b.any
  41a834:	bl	406e70 <__errno_location@plt>
  41a838:	ldr	w8, [x0]
  41a83c:	cmp	w8, #0x4
  41a840:	b.eq	41a81c <output_init@@Base+0x84>  // b.none
  41a844:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a848:	ldr	x0, [x8, #2480]
  41a84c:	bl	406910 <fileno@plt>
  41a850:	mov	w1, #0x3                   	// #3
  41a854:	mov	w2, wzr
  41a858:	mov	w19, w0
  41a85c:	bl	42749c <rpl_fcntl@@Base>
  41a860:	tbnz	w0, #31, 41a890 <output_init@@Base+0xf8>
  41a864:	orr	w20, w0, #0x400
  41a868:	mov	w1, #0x4                   	// #4
  41a86c:	mov	w0, w19
  41a870:	mov	w2, w20
  41a874:	bl	42749c <rpl_fcntl@@Base>
  41a878:	cmn	w0, #0x1
  41a87c:	b.ne	41a890 <output_init@@Base+0xf8>  // b.any
  41a880:	bl	406e70 <__errno_location@plt>
  41a884:	ldr	w8, [x0]
  41a888:	cmp	w8, #0x4
  41a88c:	b.eq	41a868 <output_init@@Base+0xd0>  // b.none
  41a890:	ldr	x0, [x21, #2504]
  41a894:	bl	406910 <fileno@plt>
  41a898:	mov	w1, #0x1                   	// #1
  41a89c:	bl	42749c <rpl_fcntl@@Base>
  41a8a0:	cmn	w0, #0x1
  41a8a4:	b.ne	41a8b8 <output_init@@Base+0x120>  // b.any
  41a8a8:	bl	406e70 <__errno_location@plt>
  41a8ac:	ldr	w8, [x0]
  41a8b0:	cmp	w8, #0x9
  41a8b4:	b.eq	41a7d4 <output_init@@Base+0x3c>  // b.none
  41a8b8:	ldp	x20, x19, [sp, #32]
  41a8bc:	ldr	x21, [sp, #16]
  41a8c0:	adrp	x0, 41a000 <readbuf@@Base+0x4>
  41a8c4:	add	x0, x0, #0x8d0
  41a8c8:	ldp	x29, x30, [sp], #48
  41a8cc:	b	427938 <__libc_csu_fini@@Base+0x8>
  41a8d0:	stp	x29, x30, [sp, #-48]!
  41a8d4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a8d8:	stp	x20, x19, [sp, #32]
  41a8dc:	ldr	x19, [x8, #2504]
  41a8e0:	str	x21, [sp, #16]
  41a8e4:	mov	x29, sp
  41a8e8:	mov	x0, x19
  41a8ec:	bl	406f00 <ferror@plt>
  41a8f0:	mov	w20, w0
  41a8f4:	mov	x0, x19
  41a8f8:	bl	406950 <fclose@plt>
  41a8fc:	orr	w8, w0, w20
  41a900:	cbnz	w8, 41a914 <output_init@@Base+0x17c>
  41a904:	ldp	x20, x19, [sp, #32]
  41a908:	ldr	x21, [sp, #16]
  41a90c:	ldp	x29, x30, [sp], #48
  41a910:	ret
  41a914:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a918:	add	x1, x1, #0x745
  41a91c:	mov	w2, #0x5                   	// #5
  41a920:	mov	w20, w0
  41a924:	mov	x0, xzr
  41a928:	bl	406dc0 <dcgettext@plt>
  41a92c:	mov	x19, x0
  41a930:	cbnz	w20, 41a94c <output_init@@Base+0x1b4>
  41a934:	mov	x0, xzr
  41a938:	mov	x1, xzr
  41a93c:	mov	x2, x19
  41a940:	bl	41ae34 <error@@Base>
  41a944:	mov	w0, #0x1                   	// #1
  41a948:	bl	406770 <exit@plt>
  41a94c:	bl	406e70 <__errno_location@plt>
  41a950:	ldr	w0, [x0]
  41a954:	bl	406b00 <strerror@plt>
  41a958:	mov	x20, x0
  41a95c:	mov	x0, x19
  41a960:	bl	406750 <strlen@plt>
  41a964:	mov	x21, x0
  41a968:	mov	x0, x20
  41a96c:	bl	406750 <strlen@plt>
  41a970:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41a974:	add	x21, x0, x21
  41a978:	add	x1, x1, #0x5f0
  41a97c:	mov	w2, #0x5                   	// #5
  41a980:	mov	x0, xzr
  41a984:	bl	406dc0 <dcgettext@plt>
  41a988:	adrp	x4, 42a000 <_IO_stdin_used@@Base+0x2680>
  41a98c:	mov	x2, x0
  41a990:	add	x4, x4, #0x3a9
  41a994:	mov	x0, xzr
  41a998:	mov	x1, x21
  41a99c:	mov	x3, x19
  41a9a0:	mov	x5, x20
  41a9a4:	bl	41ae34 <error@@Base>
  41a9a8:	mov	w0, #0x1                   	// #1
  41a9ac:	bl	406770 <exit@plt>

000000000041a9b0 <output_close@@Base>:
  41a9b0:	stp	x29, x30, [sp, #-32]!
  41a9b4:	str	x19, [sp, #16]
  41a9b8:	mov	x29, sp
  41a9bc:	cbz	x0, 41aa20 <output_close@@Base+0x70>
  41a9c0:	mov	x19, x0
  41a9c4:	bl	41a324 <output_dump@@Base>
  41a9c8:	ldr	w0, [x19]
  41a9cc:	tbnz	w0, #31, 41a9d4 <output_close@@Base+0x24>
  41a9d0:	bl	406b10 <close@plt>
  41a9d4:	ldr	w0, [x19, #4]
  41a9d8:	tbnz	w0, #31, 41a9ec <output_close@@Base+0x3c>
  41a9dc:	ldr	w8, [x19]
  41a9e0:	cmp	w0, w8
  41a9e4:	b.eq	41a9ec <output_close@@Base+0x3c>  // b.none
  41a9e8:	bl	406b10 <close@plt>
  41a9ec:	movi	v0.2d, #0xffffffffffffffff
  41a9f0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41a9f4:	str	d0, [x19]
  41a9f8:	ldr	w8, [x8, #3304]
  41a9fc:	ldrb	w9, [x19, #8]
  41aa00:	cmp	w8, #0x0
  41aa04:	cset	w8, ne  // ne = any
  41aa08:	and	w9, w9, #0xfe
  41aa0c:	orr	w8, w9, w8
  41aa10:	strb	w8, [x19, #8]
  41aa14:	ldr	x19, [sp, #16]
  41aa18:	ldp	x29, x30, [sp], #32
  41aa1c:	ret
  41aa20:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  41aa24:	ldr	w8, [x8, #1464]
  41aa28:	cbz	w8, 41aa14 <output_close@@Base+0x64>
  41aa2c:	ldr	x19, [sp, #16]
  41aa30:	mov	w0, wzr
  41aa34:	ldp	x29, x30, [sp], #32
  41aa38:	b	41a548 <output_dump@@Base+0x224>

000000000041aa3c <output_start@@Base>:
  41aa3c:	stp	x29, x30, [sp, #-48]!
  41aa40:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  41aa44:	stp	x20, x19, [sp, #32]
  41aa48:	ldr	x19, [x8, #1456]
  41aa4c:	str	x21, [sp, #16]
  41aa50:	mov	x29, sp
  41aa54:	cbz	x19, 41aa70 <output_start@@Base+0x34>
  41aa58:	ldrb	w8, [x19, #8]
  41aa5c:	tbz	w8, #0, 41aa70 <output_start@@Base+0x34>
  41aa60:	ldr	w8, [x19]
  41aa64:	tbz	w8, #31, 41aa70 <output_start@@Base+0x34>
  41aa68:	ldr	w8, [x19, #4]
  41aa6c:	tbnz	w8, #31, 41aabc <output_start@@Base+0x80>
  41aa70:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41aa74:	ldr	w8, [x8, #3304]
  41aa78:	cmp	w8, #0x3
  41aa7c:	b.eq	41aa84 <output_start@@Base+0x48>  // b.none
  41aa80:	cbnz	w8, 41aaac <output_start@@Base+0x70>
  41aa84:	adrp	x19, 43f000 <stopchar_map@@Base+0x310>
  41aa88:	ldr	w8, [x19, #1464]
  41aa8c:	cbnz	w8, 41aaac <output_start@@Base+0x70>
  41aa90:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41aa94:	ldr	w8, [x8, #3276]
  41aa98:	cbz	w8, 41aaac <output_start@@Base+0x70>
  41aa9c:	mov	w0, #0x1                   	// #1
  41aaa0:	mov	w20, #0x1                   	// #1
  41aaa4:	bl	41a548 <output_dump@@Base+0x224>
  41aaa8:	str	w20, [x19, #1464]
  41aaac:	ldp	x20, x19, [sp, #32]
  41aab0:	ldr	x21, [sp, #16]
  41aab4:	ldp	x29, x30, [sp], #48
  41aab8:	ret
  41aabc:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41aac0:	ldr	w8, [x21, #2388]
  41aac4:	tbz	w8, #31, 41aad0 <output_start@@Base+0x94>
  41aac8:	bl	41b2a8 <out_of_memory@@Base+0x60>
  41aacc:	str	w0, [x21, #2388]
  41aad0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41aad4:	ldr	x0, [x8, #2504]
  41aad8:	bl	406910 <fileno@plt>
  41aadc:	mov	w1, #0x1                   	// #1
  41aae0:	bl	42749c <rpl_fcntl@@Base>
  41aae4:	cmn	w0, #0x1
  41aae8:	b.ne	41aafc <output_start@@Base+0xc0>  // b.any
  41aaec:	bl	406e70 <__errno_location@plt>
  41aaf0:	ldr	w8, [x0]
  41aaf4:	cmp	w8, #0x9
  41aaf8:	b.eq	41ab10 <output_start@@Base+0xd4>  // b.none
  41aafc:	bl	41a208 <output_tmpfd@@Base>
  41ab00:	tbnz	w0, #31, 41ab70 <output_start@@Base+0x134>
  41ab04:	mov	w20, w0
  41ab08:	bl	4269cc <fd_noinherit@@Base>
  41ab0c:	str	w20, [x19]
  41ab10:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41ab14:	ldr	x0, [x8, #2480]
  41ab18:	bl	406910 <fileno@plt>
  41ab1c:	mov	w1, #0x1                   	// #1
  41ab20:	bl	42749c <rpl_fcntl@@Base>
  41ab24:	cmn	w0, #0x1
  41ab28:	b.ne	41ab3c <output_start@@Base+0x100>  // b.any
  41ab2c:	bl	406e70 <__errno_location@plt>
  41ab30:	ldr	w8, [x0]
  41ab34:	cmp	w8, #0x9
  41ab38:	b.eq	41aa70 <output_start@@Base+0x34>  // b.none
  41ab3c:	ldr	w8, [x19]
  41ab40:	cmn	w8, #0x1
  41ab44:	b.eq	41ab58 <output_start@@Base+0x11c>  // b.none
  41ab48:	ldr	w9, [x21, #2388]
  41ab4c:	cbz	w9, 41ab58 <output_start@@Base+0x11c>
  41ab50:	str	w8, [x19, #4]
  41ab54:	b	41aa70 <output_start@@Base+0x34>
  41ab58:	bl	41a208 <output_tmpfd@@Base>
  41ab5c:	tbnz	w0, #31, 41ab70 <output_start@@Base+0x134>
  41ab60:	mov	w20, w0
  41ab64:	bl	4269cc <fd_noinherit@@Base>
  41ab68:	str	w20, [x19, #4]
  41ab6c:	b	41aa70 <output_start@@Base+0x34>
  41ab70:	mov	x0, x19
  41ab74:	bl	41a324 <output_dump@@Base>
  41ab78:	ldr	w0, [x19]
  41ab7c:	tbnz	w0, #31, 41ab84 <output_start@@Base+0x148>
  41ab80:	bl	406b10 <close@plt>
  41ab84:	ldr	w0, [x19, #4]
  41ab88:	tbnz	w0, #31, 41ab9c <output_start@@Base+0x160>
  41ab8c:	ldr	w8, [x19]
  41ab90:	cmp	w0, w8
  41ab94:	b.eq	41ab9c <output_start@@Base+0x160>  // b.none
  41ab98:	bl	406b10 <close@plt>
  41ab9c:	movi	v0.2d, #0xffffffffffffffff
  41aba0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41aba4:	str	d0, [x19]
  41aba8:	ldr	w10, [x8, #3304]
  41abac:	ldrb	w9, [x19, #8]
  41abb0:	cmp	w10, #0x0
  41abb4:	and	w9, w9, #0xfe
  41abb8:	cset	w10, ne  // ne = any
  41abbc:	orr	w9, w9, w10
  41abc0:	strb	w9, [x19, #8]
  41abc4:	str	wzr, [x8, #3304]
  41abc8:	adrp	x19, 43f000 <stopchar_map@@Base+0x310>
  41abcc:	ldr	w8, [x19, #1464]
  41abd0:	cbz	w8, 41aa90 <output_start@@Base+0x54>
  41abd4:	b	41aaac <output_start@@Base+0x70>

000000000041abd8 <outputs@@Base>:
  41abd8:	stp	x29, x30, [sp, #-48]!
  41abdc:	str	x21, [sp, #16]
  41abe0:	stp	x20, x19, [sp, #32]
  41abe4:	mov	x29, sp
  41abe8:	cbz	x1, 41ac50 <outputs@@Base+0x78>
  41abec:	ldrb	w8, [x1]
  41abf0:	mov	x19, x1
  41abf4:	cbz	w8, 41ac50 <outputs@@Base+0x78>
  41abf8:	mov	w20, w0
  41abfc:	bl	41aa3c <output_start@@Base>
  41ac00:	adrp	x8, 43f000 <stopchar_map@@Base+0x310>
  41ac04:	ldr	x8, [x8, #1456]
  41ac08:	cbz	x8, 41ac14 <outputs@@Base+0x3c>
  41ac0c:	ldrb	w9, [x8, #8]
  41ac10:	tbnz	w9, #0, 41ac60 <outputs@@Base+0x88>
  41ac14:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41ac18:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41ac1c:	add	x8, x8, #0x9b0
  41ac20:	add	x9, x9, #0x9c8
  41ac24:	cmp	w20, #0x0
  41ac28:	csel	x8, x9, x8, eq  // eq = none
  41ac2c:	ldr	x20, [x8]
  41ac30:	mov	x0, x19
  41ac34:	mov	x1, x20
  41ac38:	bl	406760 <fputs@plt>
  41ac3c:	mov	x0, x20
  41ac40:	ldp	x20, x19, [sp, #32]
  41ac44:	ldr	x21, [sp, #16]
  41ac48:	ldp	x29, x30, [sp], #48
  41ac4c:	b	406cf0 <fflush@plt>
  41ac50:	ldp	x20, x19, [sp, #32]
  41ac54:	ldr	x21, [sp, #16]
  41ac58:	ldp	x29, x30, [sp], #48
  41ac5c:	ret
  41ac60:	cmp	w20, #0x0
  41ac64:	cset	w9, ne  // ne = any
  41ac68:	ldr	w20, [x8, w9, uxtw #2]
  41ac6c:	mov	x0, x19
  41ac70:	bl	406750 <strlen@plt>
  41ac74:	mov	x21, x0
  41ac78:	mov	w2, #0x2                   	// #2
  41ac7c:	mov	w0, w20
  41ac80:	mov	x1, xzr
  41ac84:	bl	4068c0 <lseek@plt>
  41ac88:	cmn	w0, #0x1
  41ac8c:	b.ne	41aca0 <outputs@@Base+0xc8>  // b.any
  41ac90:	bl	406e70 <__errno_location@plt>
  41ac94:	ldr	w8, [x0]
  41ac98:	cmp	w8, #0x4
  41ac9c:	b.eq	41ac78 <outputs@@Base+0xa0>  // b.none
  41aca0:	mov	w0, w20
  41aca4:	mov	x1, x19
  41aca8:	mov	x2, x21
  41acac:	ldp	x20, x19, [sp, #32]
  41acb0:	ldr	x21, [sp, #16]
  41acb4:	ldp	x29, x30, [sp], #48
  41acb8:	b	419f60 <writebuf@@Base>

000000000041acbc <message@@Base>:
  41acbc:	sub	sp, sp, #0x140
  41acc0:	stp	x29, x30, [sp, #240]
  41acc4:	stp	x22, x21, [sp, #288]
  41acc8:	add	x29, sp, #0xf0
  41accc:	mov	w21, w0
  41acd0:	mov	x0, x2
  41acd4:	stp	x28, x25, [sp, #256]
  41acd8:	stp	x24, x23, [sp, #272]
  41acdc:	stp	x20, x19, [sp, #304]
  41ace0:	mov	x19, x2
  41ace4:	mov	x20, x1
  41ace8:	stp	x3, x4, [x29, #-104]
  41acec:	stp	x5, x6, [x29, #-88]
  41acf0:	stur	x7, [x29, #-72]
  41acf4:	stp	q1, q2, [sp, #16]
  41acf8:	stp	q3, q4, [sp, #48]
  41acfc:	str	q0, [sp]
  41ad00:	stp	q5, q6, [sp, #80]
  41ad04:	str	q7, [sp, #112]
  41ad08:	bl	406750 <strlen@plt>
  41ad0c:	adrp	x23, 442000 <just_print_flag@@Base>
  41ad10:	ldr	x8, [x23, #16]
  41ad14:	mov	x22, x0
  41ad18:	mov	x0, x8
  41ad1c:	bl	406750 <strlen@plt>
  41ad20:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41ad24:	ldr	x8, [x8, #1528]
  41ad28:	add	x9, x20, x22
  41ad2c:	add	x9, x9, x0
  41ad30:	add	x24, x9, #0x1a
  41ad34:	cmp	x8, x24
  41ad38:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  41ad3c:	b.cs	41ad70 <message@@Base+0xb4>  // b.hs, b.nlast
  41ad40:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  41ad44:	add	x25, x25, #0x5f0
  41ad48:	ldr	x0, [x25]
  41ad4c:	add	x1, x8, x24, lsl #1
  41ad50:	str	x1, [x25, #8]
  41ad54:	bl	419de0 <xrealloc@@Base>
  41ad58:	mov	x20, x0
  41ad5c:	str	x0, [x25]
  41ad60:	add	x8, x24, x20
  41ad64:	sturb	wzr, [x8, #-1]
  41ad68:	cbnz	w21, 41ad80 <message@@Base+0xc4>
  41ad6c:	b	41adc0 <message@@Base+0x104>
  41ad70:	ldr	x20, [x22, #1520]
  41ad74:	add	x8, x24, x20
  41ad78:	sturb	wzr, [x8, #-1]
  41ad7c:	cbz	w21, 41adc0 <message@@Base+0x104>
  41ad80:	adrp	x8, 442000 <just_print_flag@@Base>
  41ad84:	ldr	w3, [x8, #32]
  41ad88:	ldr	x2, [x23, #16]
  41ad8c:	cbz	w3, 41ada4 <message@@Base+0xe8>
  41ad90:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ad94:	add	x1, x1, #0x5b1
  41ad98:	mov	x0, x20
  41ad9c:	bl	406800 <sprintf@plt>
  41ada0:	b	41adb4 <message@@Base+0xf8>
  41ada4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ada8:	add	x1, x1, #0x5ac
  41adac:	mov	x0, x20
  41adb0:	bl	406800 <sprintf@plt>
  41adb4:	mov	x0, x20
  41adb8:	bl	406750 <strlen@plt>
  41adbc:	add	x20, x20, x0
  41adc0:	mov	x8, #0xffffffffffffffd8    	// #-40
  41adc4:	mov	x10, sp
  41adc8:	sub	x11, x29, #0x68
  41adcc:	movk	x8, #0xff80, lsl #32
  41add0:	add	x9, x29, #0x50
  41add4:	add	x10, x10, #0x80
  41add8:	add	x11, x11, #0x28
  41addc:	stp	x10, x8, [x29, #-16]
  41ade0:	stp	x9, x11, [x29, #-32]
  41ade4:	ldp	q0, q1, [x29, #-32]
  41ade8:	sub	x2, x29, #0x40
  41adec:	mov	x0, x20
  41adf0:	mov	x1, x19
  41adf4:	stp	q0, q1, [x29, #-64]
  41adf8:	bl	406d20 <vsprintf@plt>
  41adfc:	mov	x0, x20
  41ae00:	bl	406750 <strlen@plt>
  41ae04:	mov	w8, #0xa                   	// #10
  41ae08:	strh	w8, [x20, x0]
  41ae0c:	ldr	x1, [x22, #1520]
  41ae10:	mov	w0, wzr
  41ae14:	bl	41abd8 <outputs@@Base>
  41ae18:	ldp	x20, x19, [sp, #304]
  41ae1c:	ldp	x22, x21, [sp, #288]
  41ae20:	ldp	x24, x23, [sp, #272]
  41ae24:	ldp	x28, x25, [sp, #256]
  41ae28:	ldp	x29, x30, [sp, #240]
  41ae2c:	add	sp, sp, #0x140
  41ae30:	ret

000000000041ae34 <error@@Base>:
  41ae34:	sub	sp, sp, #0x140
  41ae38:	stp	x29, x30, [sp, #240]
  41ae3c:	stp	x20, x19, [sp, #304]
  41ae40:	add	x29, sp, #0xf0
  41ae44:	mov	x20, x0
  41ae48:	mov	x0, x2
  41ae4c:	stp	x28, x25, [sp, #256]
  41ae50:	stp	x24, x23, [sp, #272]
  41ae54:	stp	x22, x21, [sp, #288]
  41ae58:	mov	x19, x2
  41ae5c:	mov	x21, x1
  41ae60:	stp	x3, x4, [x29, #-104]
  41ae64:	stp	x5, x6, [x29, #-88]
  41ae68:	stur	x7, [x29, #-72]
  41ae6c:	stp	q1, q2, [sp, #16]
  41ae70:	stp	q3, q4, [sp, #48]
  41ae74:	str	q0, [sp]
  41ae78:	stp	q5, q6, [sp, #80]
  41ae7c:	str	q7, [sp, #112]
  41ae80:	bl	406750 <strlen@plt>
  41ae84:	adrp	x24, 442000 <just_print_flag@@Base>
  41ae88:	ldr	x8, [x24, #16]
  41ae8c:	mov	x23, x0
  41ae90:	mov	x0, x8
  41ae94:	bl	406750 <strlen@plt>
  41ae98:	mov	x22, x0
  41ae9c:	cbz	x20, 41aeb0 <error@@Base+0x7c>
  41aea0:	ldr	x0, [x20]
  41aea4:	cbz	x0, 41aeb4 <error@@Base+0x80>
  41aea8:	bl	406750 <strlen@plt>
  41aeac:	b	41aeb4 <error@@Base+0x80>
  41aeb0:	mov	x0, xzr
  41aeb4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41aeb8:	add	x9, x21, x23
  41aebc:	ldr	x8, [x8, #1528]
  41aec0:	add	x9, x9, x22
  41aec4:	add	x9, x9, x0
  41aec8:	add	x23, x9, #0x1a
  41aecc:	cmp	x8, x23
  41aed0:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  41aed4:	b.cs	41af08 <error@@Base+0xd4>  // b.hs, b.nlast
  41aed8:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  41aedc:	add	x25, x25, #0x5f0
  41aee0:	ldr	x0, [x25]
  41aee4:	add	x1, x8, x23, lsl #1
  41aee8:	str	x1, [x25, #8]
  41aeec:	bl	419de0 <xrealloc@@Base>
  41aef0:	mov	x21, x0
  41aef4:	str	x0, [x25]
  41aef8:	add	x8, x23, x21
  41aefc:	sturb	wzr, [x8, #-1]
  41af00:	cbnz	x20, 41af18 <error@@Base+0xe4>
  41af04:	b	41af3c <error@@Base+0x108>
  41af08:	ldr	x21, [x22, #1520]
  41af0c:	add	x8, x23, x21
  41af10:	sturb	wzr, [x8, #-1]
  41af14:	cbz	x20, 41af3c <error@@Base+0x108>
  41af18:	ldr	x2, [x20]
  41af1c:	cbz	x2, 41af3c <error@@Base+0x108>
  41af20:	ldp	x8, x9, [x20, #8]
  41af24:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41af28:	add	x1, x1, #0x5ba
  41af2c:	mov	x0, x21
  41af30:	add	x3, x9, x8
  41af34:	bl	406800 <sprintf@plt>
  41af38:	b	41af70 <error@@Base+0x13c>
  41af3c:	adrp	x8, 442000 <just_print_flag@@Base>
  41af40:	ldr	w3, [x8, #32]
  41af44:	ldr	x2, [x24, #16]
  41af48:	cbz	w3, 41af60 <error@@Base+0x12c>
  41af4c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41af50:	add	x1, x1, #0x5b1
  41af54:	mov	x0, x21
  41af58:	bl	406800 <sprintf@plt>
  41af5c:	b	41af70 <error@@Base+0x13c>
  41af60:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41af64:	add	x1, x1, #0x5ac
  41af68:	mov	x0, x21
  41af6c:	bl	406800 <sprintf@plt>
  41af70:	mov	x0, x21
  41af74:	bl	406750 <strlen@plt>
  41af78:	sub	x9, x29, #0x68
  41af7c:	add	x8, x29, #0x50
  41af80:	add	x9, x9, #0x28
  41af84:	mov	x10, sp
  41af88:	stp	x8, x9, [x29, #-32]
  41af8c:	mov	x8, #0xffffffffffffffd8    	// #-40
  41af90:	movk	x8, #0xff80, lsl #32
  41af94:	add	x9, x10, #0x80
  41af98:	stp	x9, x8, [x29, #-16]
  41af9c:	ldp	q0, q1, [x29, #-32]
  41afa0:	add	x20, x21, x0
  41afa4:	sub	x2, x29, #0x40
  41afa8:	mov	x0, x20
  41afac:	mov	x1, x19
  41afb0:	stp	q0, q1, [x29, #-64]
  41afb4:	bl	406d20 <vsprintf@plt>
  41afb8:	mov	x0, x20
  41afbc:	bl	406750 <strlen@plt>
  41afc0:	mov	w8, #0xa                   	// #10
  41afc4:	strh	w8, [x20, x0]
  41afc8:	ldr	x1, [x22, #1520]
  41afcc:	mov	w0, #0x1                   	// #1
  41afd0:	bl	41abd8 <outputs@@Base>
  41afd4:	ldp	x20, x19, [sp, #304]
  41afd8:	ldp	x22, x21, [sp, #288]
  41afdc:	ldp	x24, x23, [sp, #272]
  41afe0:	ldp	x28, x25, [sp, #256]
  41afe4:	ldp	x29, x30, [sp, #240]
  41afe8:	add	sp, sp, #0x140
  41afec:	ret

000000000041aff0 <fatal@@Base>:
  41aff0:	sub	sp, sp, #0x150
  41aff4:	stp	x22, x21, [sp, #304]
  41aff8:	mov	x22, x1
  41affc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b000:	stp	x29, x30, [sp, #240]
  41b004:	stp	x20, x19, [sp, #320]
  41b008:	add	x29, sp, #0xf0
  41b00c:	mov	x19, x2
  41b010:	mov	x21, x0
  41b014:	add	x1, x1, #0x5c3
  41b018:	mov	w2, #0x5                   	// #5
  41b01c:	mov	x0, xzr
  41b020:	str	x28, [sp, #256]
  41b024:	stp	x26, x25, [sp, #272]
  41b028:	stp	x24, x23, [sp, #288]
  41b02c:	stp	x3, x4, [x29, #-104]
  41b030:	stp	x5, x6, [x29, #-88]
  41b034:	stur	x7, [x29, #-72]
  41b038:	stp	q1, q2, [sp, #16]
  41b03c:	stp	q3, q4, [sp, #48]
  41b040:	str	q0, [sp]
  41b044:	stp	q5, q6, [sp, #80]
  41b048:	str	q7, [sp, #112]
  41b04c:	bl	406dc0 <dcgettext@plt>
  41b050:	mov	x20, x0
  41b054:	mov	x0, x19
  41b058:	bl	406750 <strlen@plt>
  41b05c:	adrp	x26, 442000 <just_print_flag@@Base>
  41b060:	ldr	x8, [x26, #16]
  41b064:	mov	x23, x0
  41b068:	mov	x0, x8
  41b06c:	bl	406750 <strlen@plt>
  41b070:	mov	x24, x0
  41b074:	mov	x25, xzr
  41b078:	cbz	x21, 41b094 <fatal@@Base+0xa4>
  41b07c:	ldr	x0, [x21]
  41b080:	cbnz	x0, 41b08c <fatal@@Base+0x9c>
  41b084:	mov	x25, xzr
  41b088:	b	41b094 <fatal@@Base+0xa4>
  41b08c:	bl	406750 <strlen@plt>
  41b090:	mov	x25, x0
  41b094:	mov	x0, x20
  41b098:	bl	406750 <strlen@plt>
  41b09c:	add	x8, x23, x24
  41b0a0:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  41b0a4:	add	x10, x8, x25
  41b0a8:	ldr	x8, [x9, #1528]
  41b0ac:	add	x9, x10, x0
  41b0b0:	add	x9, x9, x22
  41b0b4:	add	x24, x9, #0x1c
  41b0b8:	add	x9, x9, #0x1d
  41b0bc:	cmp	x8, x9
  41b0c0:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  41b0c4:	b.cs	41b0f4 <fatal@@Base+0x104>  // b.hs, b.nlast
  41b0c8:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  41b0cc:	add	x25, x25, #0x5f0
  41b0d0:	ldr	x0, [x25]
  41b0d4:	add	x1, x8, x9, lsl #1
  41b0d8:	str	x1, [x25, #8]
  41b0dc:	bl	419de0 <xrealloc@@Base>
  41b0e0:	mov	x22, x0
  41b0e4:	str	x0, [x25]
  41b0e8:	strb	wzr, [x22, x24]
  41b0ec:	cbnz	x21, 41b100 <fatal@@Base+0x110>
  41b0f0:	b	41b108 <fatal@@Base+0x118>
  41b0f4:	ldr	x22, [x23, #1520]
  41b0f8:	strb	wzr, [x22, x24]
  41b0fc:	cbz	x21, 41b108 <fatal@@Base+0x118>
  41b100:	ldr	x2, [x21]
  41b104:	cbnz	x2, 41b140 <fatal@@Base+0x150>
  41b108:	adrp	x8, 442000 <just_print_flag@@Base>
  41b10c:	ldr	w3, [x8, #32]
  41b110:	ldr	x2, [x26, #16]
  41b114:	cbnz	w3, 41b12c <fatal@@Base+0x13c>
  41b118:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b11c:	add	x1, x1, #0x5da
  41b120:	mov	x0, x22
  41b124:	bl	406800 <sprintf@plt>
  41b128:	b	41b158 <fatal@@Base+0x168>
  41b12c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b130:	add	x1, x1, #0x5e3
  41b134:	mov	x0, x22
  41b138:	bl	406800 <sprintf@plt>
  41b13c:	b	41b158 <fatal@@Base+0x168>
  41b140:	ldp	x8, x9, [x21, #8]
  41b144:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b148:	add	x1, x1, #0x5cd
  41b14c:	mov	x0, x22
  41b150:	add	x3, x9, x8
  41b154:	bl	406800 <sprintf@plt>
  41b158:	mov	x0, x22
  41b15c:	bl	406750 <strlen@plt>
  41b160:	sub	x9, x29, #0x68
  41b164:	add	x8, x29, #0x60
  41b168:	add	x9, x9, #0x28
  41b16c:	mov	x10, sp
  41b170:	stp	x8, x9, [x29, #-32]
  41b174:	mov	x8, #0xffffffffffffffd8    	// #-40
  41b178:	movk	x8, #0xff80, lsl #32
  41b17c:	add	x9, x10, #0x80
  41b180:	stp	x9, x8, [x29, #-16]
  41b184:	ldp	q0, q1, [x29, #-32]
  41b188:	add	x21, x22, x0
  41b18c:	sub	x2, x29, #0x40
  41b190:	mov	x0, x21
  41b194:	mov	x1, x19
  41b198:	stp	q0, q1, [x29, #-64]
  41b19c:	bl	406d20 <vsprintf@plt>
  41b1a0:	mov	x0, x21
  41b1a4:	mov	x1, x20
  41b1a8:	bl	406a20 <strcat@plt>
  41b1ac:	ldr	x1, [x23, #1520]
  41b1b0:	mov	w0, #0x1                   	// #1
  41b1b4:	bl	41abd8 <outputs@@Base>
  41b1b8:	mov	w0, #0x2                   	// #2
  41b1bc:	bl	418a14 <die@@Base>

000000000041b1c0 <perror_with_name@@Base>:
  41b1c0:	stp	x29, x30, [sp, #-48]!
  41b1c4:	stp	x22, x21, [sp, #16]
  41b1c8:	stp	x20, x19, [sp, #32]
  41b1cc:	mov	x29, sp
  41b1d0:	mov	x19, x1
  41b1d4:	mov	x20, x0
  41b1d8:	bl	406e70 <__errno_location@plt>
  41b1dc:	ldr	w0, [x0]
  41b1e0:	bl	406b00 <strerror@plt>
  41b1e4:	mov	x21, x0
  41b1e8:	mov	x0, x20
  41b1ec:	bl	406750 <strlen@plt>
  41b1f0:	mov	x22, x0
  41b1f4:	mov	x0, x19
  41b1f8:	bl	406750 <strlen@plt>
  41b1fc:	add	x22, x0, x22
  41b200:	mov	x0, x21
  41b204:	bl	406750 <strlen@plt>
  41b208:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b20c:	add	x22, x22, x0
  41b210:	add	x1, x1, #0x5f0
  41b214:	mov	w2, #0x5                   	// #5
  41b218:	mov	x0, xzr
  41b21c:	bl	406dc0 <dcgettext@plt>
  41b220:	mov	x1, x22
  41b224:	mov	x3, x20
  41b228:	mov	x4, x19
  41b22c:	mov	x5, x21
  41b230:	ldp	x20, x19, [sp, #32]
  41b234:	ldp	x22, x21, [sp, #16]
  41b238:	mov	x2, x0
  41b23c:	mov	x0, xzr
  41b240:	ldp	x29, x30, [sp], #48
  41b244:	b	41ae34 <error@@Base>

000000000041b248 <out_of_memory@@Base>:
  41b248:	stp	x29, x30, [sp, #-48]!
  41b24c:	str	x21, [sp, #16]
  41b250:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41b254:	ldr	x0, [x21, #2504]
  41b258:	stp	x20, x19, [sp, #32]
  41b25c:	mov	x29, sp
  41b260:	bl	406910 <fileno@plt>
  41b264:	adrp	x8, 442000 <just_print_flag@@Base>
  41b268:	ldr	x19, [x8, #16]
  41b26c:	mov	w20, w0
  41b270:	mov	x0, x19
  41b274:	bl	406750 <strlen@plt>
  41b278:	mov	x2, x0
  41b27c:	mov	w0, w20
  41b280:	mov	x1, x19
  41b284:	bl	419f60 <writebuf@@Base>
  41b288:	ldr	x0, [x21, #2504]
  41b28c:	bl	406910 <fileno@plt>
  41b290:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b294:	add	x1, x1, #0x5f9
  41b298:	mov	w2, #0x1f                  	// #31
  41b29c:	bl	419f60 <writebuf@@Base>
  41b2a0:	mov	w0, #0x2                   	// #2
  41b2a4:	bl	406770 <exit@plt>
  41b2a8:	sub	sp, sp, #0x130
  41b2ac:	stp	x20, x19, [sp, #288]
  41b2b0:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41b2b4:	ldr	x0, [x20, #2504]
  41b2b8:	stp	x29, x30, [sp, #256]
  41b2bc:	str	x28, [sp, #272]
  41b2c0:	add	x29, sp, #0x100
  41b2c4:	bl	406910 <fileno@plt>
  41b2c8:	mov	w1, #0x1                   	// #1
  41b2cc:	bl	42749c <rpl_fcntl@@Base>
  41b2d0:	cmn	w0, #0x1
  41b2d4:	b.ne	41b370 <out_of_memory@@Base+0x128>  // b.any
  41b2d8:	bl	406e70 <__errno_location@plt>
  41b2dc:	ldr	w8, [x0]
  41b2e0:	cmp	w8, #0x9
  41b2e4:	b.ne	41b370 <out_of_memory@@Base+0x128>  // b.any
  41b2e8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  41b2ec:	mov	x19, x0
  41b2f0:	ldr	x0, [x20, #2480]
  41b2f4:	bl	406910 <fileno@plt>
  41b2f8:	mov	w1, #0x1                   	// #1
  41b2fc:	bl	42749c <rpl_fcntl@@Base>
  41b300:	cmn	w0, #0x1
  41b304:	b.ne	41b3f4 <out_of_memory@@Base+0x1ac>  // b.any
  41b308:	ldr	w8, [x19]
  41b30c:	cmp	w8, #0x9
  41b310:	b.ne	41b3f4 <out_of_memory@@Base+0x1ac>  // b.any
  41b314:	mov	w0, #0x9                   	// #9
  41b318:	bl	406b00 <strerror@plt>
  41b31c:	mov	x19, x0
  41b320:	bl	406750 <strlen@plt>
  41b324:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b328:	add	x20, x0, #0x1e
  41b32c:	add	x1, x1, #0x5f0
  41b330:	mov	w2, #0x5                   	// #5
  41b334:	mov	x0, xzr
  41b338:	bl	406dc0 <dcgettext@plt>
  41b33c:	adrp	x3, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b340:	adrp	x4, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b344:	mov	x2, x0
  41b348:	add	x3, x3, #0x759
  41b34c:	add	x4, x4, #0x772
  41b350:	mov	x0, xzr
  41b354:	mov	x1, x20
  41b358:	mov	x5, x19
  41b35c:	bl	41ae34 <error@@Base>
  41b360:	mov	w0, wzr
  41b364:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41b368:	str	wzr, [x8, #3304]
  41b36c:	b	41b414 <out_of_memory@@Base+0x1cc>
  41b370:	ldr	x0, [x20, #2504]
  41b374:	bl	406910 <fileno@plt>
  41b378:	ldr	x8, [x20, #2504]
  41b37c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41b380:	str	w0, [x9, #2384]
  41b384:	mov	x0, x8
  41b388:	bl	406910 <fileno@plt>
  41b38c:	mov	w1, w0
  41b390:	add	x2, sp, #0x80
  41b394:	mov	w0, wzr
  41b398:	bl	406da0 <__fxstat@plt>
  41b39c:	mov	w8, w0
  41b3a0:	mov	w0, wzr
  41b3a4:	cbnz	w8, 41b414 <out_of_memory@@Base+0x1cc>
  41b3a8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41b3ac:	ldr	x0, [x8, #2480]
  41b3b0:	bl	406910 <fileno@plt>
  41b3b4:	mov	w1, w0
  41b3b8:	mov	x2, sp
  41b3bc:	mov	w0, wzr
  41b3c0:	bl	406da0 <__fxstat@plt>
  41b3c4:	mov	w8, w0
  41b3c8:	mov	w0, wzr
  41b3cc:	cbnz	w8, 41b414 <out_of_memory@@Base+0x1cc>
  41b3d0:	ldr	x8, [sp, #128]
  41b3d4:	ldr	x9, [sp]
  41b3d8:	cmp	x8, x9
  41b3dc:	b.ne	41b410 <out_of_memory@@Base+0x1c8>  // b.any
  41b3e0:	ldr	x8, [sp, #136]
  41b3e4:	ldr	x9, [sp, #8]
  41b3e8:	cmp	x8, x9
  41b3ec:	cset	w0, eq  // eq = none
  41b3f0:	b	41b414 <out_of_memory@@Base+0x1cc>
  41b3f4:	ldr	x0, [x20, #2480]
  41b3f8:	bl	406910 <fileno@plt>
  41b3fc:	mov	w8, w0
  41b400:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41b404:	mov	w0, wzr
  41b408:	str	w8, [x9, #2384]
  41b40c:	b	41b414 <out_of_memory@@Base+0x1cc>
  41b410:	mov	w0, wzr
  41b414:	ldp	x20, x19, [sp, #288]
  41b418:	ldr	x28, [sp, #272]
  41b41c:	ldp	x29, x30, [sp, #256]
  41b420:	add	sp, sp, #0x130
  41b424:	ret

000000000041b428 <read_all_makefiles@@Base>:
  41b428:	sub	sp, sp, #0x50
  41b42c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41b430:	ldr	x8, [x8, #2424]
  41b434:	stp	x29, x30, [sp, #16]
  41b438:	stp	x22, x21, [sp, #48]
  41b43c:	stp	x20, x19, [sp, #64]
  41b440:	ldr	x5, [x8, #8]
  41b444:	mov	x19, x0
  41b448:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41b44c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  41b450:	add	x0, x0, #0x55a
  41b454:	add	x2, x2, #0x3a9
  41b458:	mov	w1, #0xd                   	// #13
  41b45c:	mov	w3, #0x2                   	// #2
  41b460:	mov	w4, wzr
  41b464:	mov	x6, xzr
  41b468:	str	x23, [sp, #32]
  41b46c:	add	x29, sp, #0x10
  41b470:	bl	423d70 <define_variable_in_set@@Base>
  41b474:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41b478:	ldrb	w8, [x8, #3236]
  41b47c:	tbz	w8, #0, 41b4a4 <read_all_makefiles@@Base+0x7c>
  41b480:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b484:	add	x1, x1, #0x858
  41b488:	mov	w2, #0x5                   	// #5
  41b48c:	mov	x0, xzr
  41b490:	bl	406dc0 <dcgettext@plt>
  41b494:	bl	406e60 <printf@plt>
  41b498:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41b49c:	ldr	x0, [x8, #2504]
  41b4a0:	bl	406cf0 <fflush@plt>
  41b4a4:	adrp	x21, 442000 <just_print_flag@@Base>
  41b4a8:	ldr	w22, [x21, #64]
  41b4ac:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b4b0:	add	x0, x0, #0x86e
  41b4b4:	mov	x1, xzr
  41b4b8:	str	wzr, [x21, #64]
  41b4bc:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41b4c0:	mov	x20, x0
  41b4c4:	str	w22, [x21, #64]
  41b4c8:	str	x0, [x29, #24]
  41b4cc:	b	41b4dc <read_all_makefiles@@Base+0xb4>
  41b4d0:	bl	423690 <strcache_add@@Base>
  41b4d4:	mov	w1, #0x7                   	// #7
  41b4d8:	bl	41b6e4 <read_all_makefiles@@Base+0x2bc>
  41b4dc:	add	x0, x29, #0x18
  41b4e0:	add	x1, sp, #0x8
  41b4e4:	bl	419efc <find_next_token@@Base>
  41b4e8:	cbz	x0, 41b508 <read_all_makefiles@@Base+0xe0>
  41b4ec:	ldr	x8, [x29, #24]
  41b4f0:	ldrb	w9, [x8]
  41b4f4:	cbz	w9, 41b4d0 <read_all_makefiles@@Base+0xa8>
  41b4f8:	add	x9, x8, #0x1
  41b4fc:	str	x9, [x29, #24]
  41b500:	strb	wzr, [x8]
  41b504:	b	41b4d0 <read_all_makefiles@@Base+0xa8>
  41b508:	mov	x0, x20
  41b50c:	bl	406c60 <free@plt>
  41b510:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  41b514:	cbz	x19, 41b580 <read_all_makefiles@@Base+0x158>
  41b518:	ldr	x0, [x19]
  41b51c:	cbz	x0, 41b580 <read_all_makefiles@@Base+0x158>
  41b520:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x2680>
  41b524:	mov	x23, xzr
  41b528:	add	x20, x20, #0x3a9
  41b52c:	b	41b544 <read_all_makefiles@@Base+0x11c>
  41b530:	add	x9, x19, x23, lsl #3
  41b534:	ldr	x0, [x9, #8]
  41b538:	add	x23, x23, #0x1
  41b53c:	str	x8, [x9]
  41b540:	cbz	x0, 41b57c <read_all_makefiles@@Base+0x154>
  41b544:	mov	w1, wzr
  41b548:	bl	41b6e4 <read_all_makefiles@@Base+0x2bc>
  41b54c:	mov	x21, x0
  41b550:	bl	406e70 <__errno_location@plt>
  41b554:	ldr	w8, [x0]
  41b558:	cbz	w8, 41b568 <read_all_makefiles@@Base+0x140>
  41b55c:	ldr	x1, [x19, x23, lsl #3]
  41b560:	mov	x0, x20
  41b564:	bl	41b1c0 <perror_with_name@@Base>
  41b568:	ldr	x8, [x21, #8]
  41b56c:	cbnz	x8, 41b530 <read_all_makefiles@@Base+0x108>
  41b570:	ldr	x8, [x21, #16]
  41b574:	ldr	x8, [x8]
  41b578:	b	41b530 <read_all_makefiles@@Base+0x108>
  41b57c:	cbnz	w23, 41b6c8 <read_all_makefiles@@Base+0x2a0>
  41b580:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b584:	add	x0, x0, #0x87b
  41b588:	bl	40934c <file_exists_p@@Base>
  41b58c:	cbz	w0, 41b5a4 <read_all_makefiles@@Base+0x17c>
  41b590:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b594:	add	x19, x19, #0x838
  41b598:	ldr	x0, [x19]
  41b59c:	cbnz	x0, 41b5e8 <read_all_makefiles@@Base+0x1c0>
  41b5a0:	b	41b610 <read_all_makefiles@@Base+0x1e8>
  41b5a4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b5a8:	add	x0, x0, #0x87e
  41b5ac:	bl	40934c <file_exists_p@@Base>
  41b5b0:	cbz	w0, 41b5c8 <read_all_makefiles@@Base+0x1a0>
  41b5b4:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b5b8:	add	x19, x19, #0x840
  41b5bc:	ldr	x0, [x19]
  41b5c0:	cbnz	x0, 41b5e8 <read_all_makefiles@@Base+0x1c0>
  41b5c4:	b	41b610 <read_all_makefiles@@Base+0x1e8>
  41b5c8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b5cc:	add	x0, x0, #0x887
  41b5d0:	bl	40934c <file_exists_p@@Base>
  41b5d4:	cbz	w0, 41b610 <read_all_makefiles@@Base+0x1e8>
  41b5d8:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b5dc:	add	x19, x19, #0x848
  41b5e0:	ldr	x0, [x19]
  41b5e4:	cbz	x0, 41b610 <read_all_makefiles@@Base+0x1e8>
  41b5e8:	mov	w1, wzr
  41b5ec:	bl	41b6e4 <read_all_makefiles@@Base+0x2bc>
  41b5f0:	bl	406e70 <__errno_location@plt>
  41b5f4:	ldr	w8, [x0]
  41b5f8:	cbz	w8, 41b6c8 <read_all_makefiles@@Base+0x2a0>
  41b5fc:	ldr	x1, [x19]
  41b600:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41b604:	add	x0, x0, #0x3a9
  41b608:	bl	41b1c0 <perror_with_name@@Base>
  41b60c:	b	41b6c8 <read_all_makefiles@@Base+0x2a0>
  41b610:	ldr	x8, [x22, #1568]
  41b614:	mov	x20, x8
  41b618:	cbz	x8, 41b624 <read_all_makefiles@@Base+0x1fc>
  41b61c:	ldr	x8, [x20]
  41b620:	cbnz	x8, 41b614 <read_all_makefiles@@Base+0x1ec>
  41b624:	mov	w0, #0x40                  	// #64
  41b628:	bl	419e38 <xcalloc@@Base>
  41b62c:	mov	x19, x0
  41b630:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b634:	add	x0, x0, #0x87b
  41b638:	bl	423690 <strcache_add@@Base>
  41b63c:	bl	40ab6c <enter_file@@Base>
  41b640:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  41b644:	add	x23, x23, #0x620
  41b648:	cmp	x20, #0x0
  41b64c:	str	x0, [x19, #16]
  41b650:	mov	w21, #0x4                   	// #4
  41b654:	csel	x8, x23, x20, eq  // eq = none
  41b658:	mov	w0, #0x40                  	// #64
  41b65c:	strb	w21, [x19, #32]
  41b660:	str	x19, [x8]
  41b664:	bl	419e38 <xcalloc@@Base>
  41b668:	mov	x20, x0
  41b66c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b670:	add	x0, x0, #0x87e
  41b674:	bl	423690 <strcache_add@@Base>
  41b678:	bl	40ab6c <enter_file@@Base>
  41b67c:	cmp	x19, #0x0
  41b680:	str	x0, [x20, #16]
  41b684:	csel	x8, x23, x19, eq  // eq = none
  41b688:	mov	w0, #0x40                  	// #64
  41b68c:	strb	w21, [x20, #32]
  41b690:	str	x20, [x8]
  41b694:	bl	419e38 <xcalloc@@Base>
  41b698:	mov	x19, x0
  41b69c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b6a0:	add	x0, x0, #0x887
  41b6a4:	bl	423690 <strcache_add@@Base>
  41b6a8:	bl	40ab6c <enter_file@@Base>
  41b6ac:	cmp	x20, #0x0
  41b6b0:	csel	x8, x23, x20, eq  // eq = none
  41b6b4:	str	x0, [x19, #16]
  41b6b8:	strb	w21, [x19, #32]
  41b6bc:	str	x19, [x8]
  41b6c0:	cbz	x19, 41b6c8 <read_all_makefiles@@Base+0x2a0>
  41b6c4:	str	xzr, [x19]
  41b6c8:	ldr	x0, [x22, #1568]
  41b6cc:	ldp	x20, x19, [sp, #64]
  41b6d0:	ldp	x22, x21, [sp, #48]
  41b6d4:	ldr	x23, [sp, #32]
  41b6d8:	ldp	x29, x30, [sp, #16]
  41b6dc:	add	sp, sp, #0x50
  41b6e0:	ret
  41b6e4:	sub	sp, sp, #0xb0
  41b6e8:	stp	x22, x21, [sp, #144]
  41b6ec:	mov	x21, x0
  41b6f0:	mov	w0, #0x40                  	// #64
  41b6f4:	stp	x29, x30, [sp, #80]
  41b6f8:	stp	x28, x27, [sp, #96]
  41b6fc:	stp	x26, x25, [sp, #112]
  41b700:	stp	x24, x23, [sp, #128]
  41b704:	stp	x20, x19, [sp, #160]
  41b708:	add	x29, sp, #0x50
  41b70c:	mov	w20, w1
  41b710:	bl	419e38 <xcalloc@@Base>
  41b714:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41b718:	ldr	x9, [x8, #1568]
  41b71c:	adrp	x10, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b720:	ldr	q0, [x10, #1920]
  41b724:	mov	x19, x0
  41b728:	str	x9, [x0]
  41b72c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41b730:	ldrb	w9, [x9, #3236]
  41b734:	add	x22, sp, #0x10
  41b738:	str	x0, [x8, #1568]
  41b73c:	str	x21, [sp, #56]
  41b740:	str	q0, [sp, #64]
  41b744:	tbnz	w9, #1, 41b75c <read_all_makefiles@@Base+0x334>
  41b748:	and	w28, w20, #0xffff
  41b74c:	and	w23, w20, #0x8
  41b750:	add	x26, x22, #0x28
  41b754:	cbnz	w23, 41b7e0 <read_all_makefiles@@Base+0x3b8>
  41b758:	b	41b7bc <read_all_makefiles@@Base+0x394>
  41b75c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b760:	add	x1, x1, #0x8af
  41b764:	mov	w2, #0x5                   	// #5
  41b768:	mov	x0, xzr
  41b76c:	bl	406dc0 <dcgettext@plt>
  41b770:	mov	x1, x21
  41b774:	bl	406e60 <printf@plt>
  41b778:	and	w28, w20, #0xffff
  41b77c:	tbnz	w20, #0, 41b8b8 <read_all_makefiles@@Base+0x490>
  41b780:	tbnz	w28, #1, 41b8d4 <read_all_makefiles@@Base+0x4ac>
  41b784:	tbnz	w28, #2, 41b8f0 <read_all_makefiles@@Base+0x4c8>
  41b788:	and	w23, w28, #0x8
  41b78c:	tbz	w28, #3, 41b7a8 <read_all_makefiles@@Base+0x380>
  41b790:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b794:	add	x1, x1, #0x8f5
  41b798:	mov	w2, #0x5                   	// #5
  41b79c:	mov	x0, xzr
  41b7a0:	bl	406dc0 <dcgettext@plt>
  41b7a4:	bl	406e60 <printf@plt>
  41b7a8:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41b7ac:	add	x0, x0, #0x133
  41b7b0:	bl	406ba0 <puts@plt>
  41b7b4:	add	x26, x22, #0x28
  41b7b8:	cbnz	w23, 41b7e0 <read_all_makefiles@@Base+0x3b8>
  41b7bc:	ldrb	w8, [x21]
  41b7c0:	cmp	w8, #0x7e
  41b7c4:	b.ne	41b7e0 <read_all_makefiles@@Base+0x3b8>  // b.any
  41b7c8:	mov	x0, x21
  41b7cc:	bl	41dda4 <tilde_expand@@Base>
  41b7d0:	cmp	x0, #0x0
  41b7d4:	mov	x24, x0
  41b7d8:	csel	x21, x21, x0, eq  // eq = none
  41b7dc:	b	41b7e4 <read_all_makefiles@@Base+0x3bc>
  41b7e0:	mov	x24, xzr
  41b7e4:	bl	406e70 <__errno_location@plt>
  41b7e8:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x680>
  41b7ec:	mov	x23, x0
  41b7f0:	add	x25, x25, #0x76a
  41b7f4:	str	wzr, [x0]
  41b7f8:	mov	x0, x21
  41b7fc:	mov	x1, x25
  41b800:	str	wzr, [x23]
  41b804:	bl	406970 <fopen@plt>
  41b808:	ldr	w8, [x23]
  41b80c:	cbnz	x0, 41b818 <read_all_makefiles@@Base+0x3f0>
  41b810:	cmp	w8, #0x4
  41b814:	b.eq	41b7f8 <read_all_makefiles@@Base+0x3d0>  // b.none
  41b818:	cmp	w8, #0x18
  41b81c:	str	x0, [sp, #48]
  41b820:	str	w8, [x19, #36]
  41b824:	b.hi	41b840 <read_all_makefiles@@Base+0x418>  // b.pmore
  41b828:	mov	w9, #0x1                   	// #1
  41b82c:	mov	w10, #0x1000                	// #4096
  41b830:	lsl	w9, w9, w8
  41b834:	movk	w10, #0x180, lsl #16
  41b838:	tst	w9, w10
  41b83c:	b.ne	41ba10 <read_all_makefiles@@Base+0x5e8>  // b.any
  41b840:	tbz	w28, #1, 41b920 <read_all_makefiles@@Base+0x4f8>
  41b844:	cbnz	x0, 41b920 <read_all_makefiles@@Base+0x4f8>
  41b848:	ldrb	w8, [x21]
  41b84c:	cmp	w8, #0x2f
  41b850:	b.eq	41b920 <read_all_makefiles@@Base+0x4f8>  // b.none
  41b854:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  41b858:	ldr	x8, [x22, #1584]
  41b85c:	ldr	x1, [x8]
  41b860:	cbz	x1, 41b920 <read_all_makefiles@@Base+0x4f8>
  41b864:	str	x26, [sp]
  41b868:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x1680>
  41b86c:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x680>
  41b870:	str	w20, [sp, #12]
  41b874:	mov	w20, #0x1                   	// #1
  41b878:	add	x25, x25, #0x327
  41b87c:	add	x26, x26, #0x76a
  41b880:	mov	w0, #0x3                   	// #3
  41b884:	mov	x2, x25
  41b888:	mov	x3, x21
  41b88c:	bl	419c18 <concat@@Base>
  41b890:	mov	x1, x26
  41b894:	mov	x27, x0
  41b898:	bl	406970 <fopen@plt>
  41b89c:	str	x0, [sp, #48]
  41b8a0:	cbnz	x0, 41b914 <read_all_makefiles@@Base+0x4ec>
  41b8a4:	ldr	x8, [x22, #1584]
  41b8a8:	ldr	x1, [x8, w20, uxtw #3]
  41b8ac:	add	w20, w20, #0x1
  41b8b0:	cbnz	x1, 41b880 <read_all_makefiles@@Base+0x458>
  41b8b4:	b	41b918 <read_all_makefiles@@Base+0x4f0>
  41b8b8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b8bc:	add	x1, x1, #0x8c5
  41b8c0:	mov	w2, #0x5                   	// #5
  41b8c4:	mov	x0, xzr
  41b8c8:	bl	406dc0 <dcgettext@plt>
  41b8cc:	bl	406e60 <printf@plt>
  41b8d0:	tbz	w28, #1, 41b784 <read_all_makefiles@@Base+0x35c>
  41b8d4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b8d8:	add	x1, x1, #0x8d8
  41b8dc:	mov	w2, #0x5                   	// #5
  41b8e0:	mov	x0, xzr
  41b8e4:	bl	406dc0 <dcgettext@plt>
  41b8e8:	bl	406e60 <printf@plt>
  41b8ec:	tbz	w28, #2, 41b788 <read_all_makefiles@@Base+0x360>
  41b8f0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41b8f4:	add	x1, x1, #0x8e7
  41b8f8:	mov	w2, #0x5                   	// #5
  41b8fc:	mov	x0, xzr
  41b900:	bl	406dc0 <dcgettext@plt>
  41b904:	bl	406e60 <printf@plt>
  41b908:	and	w23, w28, #0x8
  41b90c:	tbnz	w28, #3, 41b790 <read_all_makefiles@@Base+0x368>
  41b910:	b	41b7a8 <read_all_makefiles@@Base+0x380>
  41b914:	mov	x21, x27
  41b918:	ldr	w20, [sp, #12]
  41b91c:	ldr	x26, [sp]
  41b920:	mov	x0, x21
  41b924:	bl	423690 <strcache_add@@Base>
  41b928:	mov	x21, x0
  41b92c:	bl	40aae4 <lookup_file@@Base>
  41b930:	str	x0, [x19, #16]
  41b934:	cbnz	x0, 41b944 <read_all_makefiles@@Base+0x51c>
  41b938:	mov	x0, x21
  41b93c:	bl	40ab6c <enter_file@@Base>
  41b940:	str	x0, [x19, #16]
  41b944:	ldr	x21, [x0]
  41b948:	mov	x0, x24
  41b94c:	strb	w20, [x19, #32]
  41b950:	bl	406c60 <free@plt>
  41b954:	ldr	x0, [sp, #48]
  41b958:	cbz	x0, 41b9d8 <read_all_makefiles@@Base+0x5b0>
  41b95c:	str	wzr, [x19, #36]
  41b960:	bl	406910 <fileno@plt>
  41b964:	bl	4269cc <fd_noinherit@@Base>
  41b968:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  41b96c:	add	x1, x1, #0x55a
  41b970:	mov	w3, #0x2                   	// #2
  41b974:	mov	w4, #0x6                   	// #6
  41b978:	mov	x0, x26
  41b97c:	mov	x2, x21
  41b980:	mov	w5, wzr
  41b984:	bl	4246c0 <do_variable_definition@@Base>
  41b988:	mov	w8, #0xc8                  	// #200
  41b98c:	mov	w0, #0xc8                  	// #200
  41b990:	str	x8, [sp, #40]
  41b994:	bl	419e14 <xmalloc@@Base>
  41b998:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  41b99c:	ldr	x21, [x20, #1536]
  41b9a0:	mvn	w8, w28
  41b9a4:	stp	x0, x0, [sp, #24]
  41b9a8:	str	x0, [sp, #16]
  41b9ac:	and	w1, w8, #0x1
  41b9b0:	add	x0, sp, #0x10
  41b9b4:	str	x26, [x20, #1536]
  41b9b8:	bl	41bb24 <eval_buffer@@Base+0xe4>
  41b9bc:	ldr	x0, [sp, #48]
  41b9c0:	str	x21, [x20, #1536]
  41b9c4:	bl	406950 <fclose@plt>
  41b9c8:	ldr	x0, [sp, #32]
  41b9cc:	bl	406c60 <free@plt>
  41b9d0:	str	wzr, [x23]
  41b9d4:	b	41b9ec <read_all_makefiles@@Base+0x5c4>
  41b9d8:	ldr	w8, [x19, #36]
  41b9dc:	mov	w9, #0x1                   	// #1
  41b9e0:	str	w8, [x23]
  41b9e4:	ldr	x8, [x19, #16]
  41b9e8:	str	x9, [x8, #112]
  41b9ec:	mov	x0, x19
  41b9f0:	ldp	x20, x19, [sp, #160]
  41b9f4:	ldp	x22, x21, [sp, #144]
  41b9f8:	ldp	x24, x23, [sp, #128]
  41b9fc:	ldp	x26, x25, [sp, #112]
  41ba00:	ldp	x28, x27, [sp, #96]
  41ba04:	ldp	x29, x30, [sp, #80]
  41ba08:	add	sp, sp, #0xb0
  41ba0c:	ret
  41ba10:	mov	w0, w8
  41ba14:	bl	406b00 <strerror@plt>
  41ba18:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41ba1c:	ldr	x19, [x8, #1536]
  41ba20:	mov	x20, x0
  41ba24:	bl	406750 <strlen@plt>
  41ba28:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  41ba2c:	mov	x1, x0
  41ba30:	add	x2, x2, #0x5b6
  41ba34:	mov	x0, x19
  41ba38:	mov	x3, x20
  41ba3c:	bl	41aff0 <fatal@@Base>

000000000041ba40 <eval_buffer@@Base>:
  41ba40:	sub	sp, sp, #0x90
  41ba44:	stp	x29, x30, [sp, #96]
  41ba48:	stp	x22, x21, [sp, #112]
  41ba4c:	stp	x20, x19, [sp, #128]
  41ba50:	add	x29, sp, #0x60
  41ba54:	mov	x19, x1
  41ba58:	mov	x20, x0
  41ba5c:	bl	406750 <strlen@plt>
  41ba60:	stp	x20, x0, [sp, #48]
  41ba64:	stp	x20, x20, [sp, #32]
  41ba68:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  41ba6c:	str	xzr, [sp, #64]
  41ba70:	cbz	x19, 41ba8c <eval_buffer@@Base+0x4c>
  41ba74:	ldr	x8, [x19, #16]
  41ba78:	ldr	q0, [x19]
  41ba7c:	ldr	x19, [x20, #1536]
  41ba80:	str	x8, [sp, #88]
  41ba84:	stur	q0, [sp, #72]
  41ba88:	b	41bac0 <eval_buffer@@Base+0x80>
  41ba8c:	ldr	x19, [x20, #1536]
  41ba90:	cbz	x19, 41bab0 <eval_buffer@@Base+0x70>
  41ba94:	ldr	x8, [x19, #16]
  41ba98:	ldr	q0, [x19]
  41ba9c:	add	x9, sp, #0x20
  41baa0:	add	x9, x9, #0x28
  41baa4:	str	x8, [x9, #16]
  41baa8:	str	q0, [x9]
  41baac:	b	41bac0 <eval_buffer@@Base+0x80>
  41bab0:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41bab4:	ldr	q0, [x8, #1920]
  41bab8:	str	xzr, [sp, #72]
  41babc:	str	q0, [sp, #80]
  41bac0:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41bac4:	add	x8, sp, #0x20
  41bac8:	ldr	x22, [x21, #2392]
  41bacc:	add	x8, x8, #0x28
  41bad0:	str	x8, [x20, #1536]
  41bad4:	add	x8, sp, #0x8
  41bad8:	add	x0, sp, #0x20
  41badc:	mov	w1, #0x1                   	// #1
  41bae0:	stp	xzr, xzr, [sp, #16]
  41bae4:	str	xzr, [sp, #8]
  41bae8:	str	x8, [x21, #2392]
  41baec:	bl	41bb24 <eval_buffer@@Base+0xe4>
  41baf0:	ldr	x8, [x21, #2392]
  41baf4:	ldr	x0, [x8, #8]
  41baf8:	bl	406c60 <free@plt>
  41bafc:	ldr	x8, [x21, #2392]
  41bb00:	ldr	x0, [x8, #16]
  41bb04:	bl	406c60 <free@plt>
  41bb08:	str	x22, [x21, #2392]
  41bb0c:	str	x19, [x20, #1536]
  41bb10:	ldp	x20, x19, [sp, #128]
  41bb14:	ldp	x22, x21, [sp, #112]
  41bb18:	ldp	x29, x30, [sp, #96]
  41bb1c:	add	sp, sp, #0x90
  41bb20:	ret
  41bb24:	sub	sp, sp, #0x1a0
  41bb28:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41bb2c:	ldrb	w8, [x8, #2376]
  41bb30:	stp	x29, x30, [sp, #320]
  41bb34:	stp	x28, x27, [sp, #336]
  41bb38:	stp	x26, x25, [sp, #352]
  41bb3c:	stp	x24, x23, [sp, #368]
  41bb40:	stp	x22, x21, [sp, #384]
  41bb44:	stp	x20, x19, [sp, #400]
  41bb48:	mov	x9, x0
  41bb4c:	str	w8, [sp, #80]
  41bb50:	ldr	x8, [x9, #40]!
  41bb54:	add	x29, sp, #0x140
  41bb58:	mov	x23, x0
  41bb5c:	mov	w0, #0xc8                  	// #200
  41bb60:	stur	x8, [x29, #-104]
  41bb64:	mov	w8, #0xc8                  	// #200
  41bb68:	mov	w19, w1
  41bb6c:	str	x9, [sp, #160]
  41bb70:	str	x8, [sp, #56]
  41bb74:	bl	419e14 <xmalloc@@Base>
  41bb78:	cmp	w19, #0x0
  41bb7c:	mov	w8, #0x1                   	// #1
  41bb80:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41bb84:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  41bb88:	stp	wzr, w8, [sp, #84]
  41bb8c:	cset	w8, eq  // eq = none
  41bb90:	mov	x24, xzr
  41bb94:	mov	w25, wzr
  41bb98:	mov	x21, xzr
  41bb9c:	add	x27, x27, #0x92c
  41bba0:	mov	w20, #0x5                   	// #5
  41bba4:	add	x22, x22, #0xcf0
  41bba8:	stp	w19, w8, [sp, #48]
  41bbac:	mov	w8, #0x1                   	// #1
  41bbb0:	stp	x0, xzr, [sp, #112]
  41bbb4:	stp	xzr, xzr, [sp, #64]
  41bbb8:	str	xzr, [sp, #96]
  41bbbc:	str	xzr, [sp, #128]
  41bbc0:	str	wzr, [sp, #108]
  41bbc4:	str	wzr, [sp, #144]
  41bbc8:	str	wzr, [sp, #136]
  41bbcc:	stur	xzr, [x29, #-152]
  41bbd0:	str	w8, [sp, #92]
  41bbd4:	b	41bbe4 <eval_buffer@@Base+0x1a4>
  41bbd8:	mov	w28, #0x3                   	// #3
  41bbdc:	cmp	w28, #0x3
  41bbe0:	b.eq	41d600 <eval_buffer@@Base+0x1bc0>  // b.none
  41bbe4:	ldr	x8, [x23, #48]
  41bbe8:	mov	x0, x23
  41bbec:	add	x8, x8, x24
  41bbf0:	str	x8, [x23, #48]
  41bbf4:	bl	41e5bc <parse_file_seq@@Base+0x6cc>
  41bbf8:	mov	x24, x0
  41bbfc:	tbnz	x0, #63, 41bbd8 <eval_buffer@@Base+0x198>
  41bc00:	ldr	x8, [x23, #48]
  41bc04:	ldr	x28, [x23]
  41bc08:	cmp	x8, #0x1
  41bc0c:	b.ne	41bc84 <eval_buffer@@Base+0x244>  // b.any
  41bc10:	ldrb	w19, [x28]
  41bc14:	cmp	w19, #0xef
  41bc18:	b.ne	41bc88 <eval_buffer@@Base+0x248>  // b.any
  41bc1c:	ldrb	w8, [x28, #1]
  41bc20:	cmp	w8, #0xbb
  41bc24:	b.ne	41bc84 <eval_buffer@@Base+0x244>  // b.any
  41bc28:	ldrb	w8, [x28, #2]
  41bc2c:	cmp	w8, #0xbf
  41bc30:	b.ne	41bc84 <eval_buffer@@Base+0x244>  // b.any
  41bc34:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41bc38:	ldrb	w8, [x8, #3236]
  41bc3c:	add	x28, x28, #0x3
  41bc40:	tbz	w8, #0, 41bc84 <eval_buffer@@Base+0x244>
  41bc44:	ldr	x19, [sp, #160]
  41bc48:	ldr	x8, [x19]
  41bc4c:	cbz	x8, 41bc70 <eval_buffer@@Base+0x230>
  41bc50:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41bc54:	mov	w2, #0x5                   	// #5
  41bc58:	mov	x0, xzr
  41bc5c:	add	x1, x1, #0x907
  41bc60:	bl	406dc0 <dcgettext@plt>
  41bc64:	ldr	x1, [x19]
  41bc68:	bl	406e60 <printf@plt>
  41bc6c:	b	41bc84 <eval_buffer@@Base+0x244>
  41bc70:	mov	w2, #0x5                   	// #5
  41bc74:	mov	x0, xzr
  41bc78:	mov	x1, x27
  41bc7c:	bl	406dc0 <dcgettext@plt>
  41bc80:	bl	406e60 <printf@plt>
  41bc84:	ldrb	w19, [x28]
  41bc88:	cbz	w19, 41bcac <eval_buffer@@Base+0x26c>
  41bc8c:	mov	x0, x28
  41bc90:	bl	406750 <strlen@plt>
  41bc94:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41bc98:	ldrb	w8, [x8, #2376]
  41bc9c:	cmp	w19, w8
  41bca0:	mov	x19, x0
  41bca4:	b.ne	41bcd0 <eval_buffer@@Base+0x290>  // b.any
  41bca8:	cbz	w25, 41bcb4 <eval_buffer@@Base+0x274>
  41bcac:	mov	w28, #0x2                   	// #2
  41bcb0:	b	41bbdc <eval_buffer@@Base+0x19c>
  41bcb4:	ldr	x8, [sp, #128]
  41bcb8:	cbz	x8, 41bcd0 <eval_buffer@@Base+0x290>
  41bcbc:	ldr	w8, [sp, #136]
  41bcc0:	cbz	w8, 41bf54 <eval_buffer@@Base+0x514>
  41bcc4:	mov	w25, wzr
  41bcc8:	mov	w28, #0x2                   	// #2
  41bccc:	b	41bbdc <eval_buffer@@Base+0x19c>
  41bcd0:	ldur	x8, [x29, #-152]
  41bcd4:	add	x19, x19, #0x1
  41bcd8:	cmp	x8, x19
  41bcdc:	b.cs	41bcf8 <eval_buffer@@Base+0x2b8>  // b.hs, b.nlast
  41bce0:	mov	x0, x21
  41bce4:	bl	406c60 <free@plt>
  41bce8:	mov	x0, x19
  41bcec:	bl	419e14 <xmalloc@@Base>
  41bcf0:	mov	x21, x0
  41bcf4:	stur	x19, [x29, #-152]
  41bcf8:	mov	x0, x21
  41bcfc:	mov	x1, x28
  41bd00:	bl	406d00 <strcpy@plt>
  41bd04:	bl	419a50 <collapse_continuations@@Base>
  41bd08:	mov	w1, #0x4008                	// #16392
  41bd0c:	mov	x0, x21
  41bd10:	bl	41e43c <parse_file_seq@@Base+0x54c>
  41bd14:	cbz	x0, 41bd1c <eval_buffer@@Base+0x2dc>
  41bd18:	strb	wzr, [x0]
  41bd1c:	mov	w26, w25
  41bd20:	sub	x0, x21, #0x1
  41bd24:	stur	x21, [x29, #-144]
  41bd28:	ldrb	w8, [x0, #1]!
  41bd2c:	ldrh	w8, [x22, x8, lsl #1]
  41bd30:	tst	w8, #0x6
  41bd34:	b.ne	41bd28 <eval_buffer@@Base+0x2e8>  // b.any
  41bd38:	sub	x1, x29, #0x78
  41bd3c:	bl	41e808 <parse_file_seq@@Base+0x918>
  41bd40:	ldurb	w21, [x29, #-120]
  41bd44:	mov	x25, x0
  41bd48:	tbnz	w21, #0, 41bdd8 <eval_buffer@@Base+0x398>
  41bd4c:	ldrb	w8, [x25]
  41bd50:	cbz	w8, 41bdfc <eval_buffer@@Base+0x3bc>
  41bd54:	mov	x0, x25
  41bd58:	bl	419ebc <end_of_token@@Base>
  41bd5c:	sub	x1, x0, x25
  41bd60:	stur	x0, [x29, #-112]
  41bd64:	stur	x1, [x29, #-80]
  41bd68:	ldrb	w8, [x0]
  41bd6c:	ldur	x21, [x29, #-144]
  41bd70:	ldrh	w19, [x22, x8, lsl #1]
  41bd74:	tst	w19, #0x6
  41bd78:	b.eq	41bd94 <eval_buffer@@Base+0x354>  // b.none
  41bd7c:	add	x8, x0, #0x1
  41bd80:	stur	x8, [x29, #-112]
  41bd84:	ldrb	w9, [x8], #1
  41bd88:	ldrh	w19, [x22, x9, lsl #1]
  41bd8c:	tst	w19, #0x6
  41bd90:	b.ne	41bd80 <eval_buffer@@Base+0x340>  // b.any
  41bd94:	ldr	w8, [sp, #144]
  41bd98:	cbz	w8, 41be98 <eval_buffer@@Base+0x458>
  41bd9c:	cmp	x1, #0x5
  41bda0:	b.ne	41bfa0 <eval_buffer@@Base+0x560>  // b.any
  41bda4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41bda8:	mov	w2, #0x5                   	// #5
  41bdac:	add	x0, x0, #0x953
  41bdb0:	mov	x1, x25
  41bdb4:	bl	4069f0 <strncmp@plt>
  41bdb8:	mov	w8, #0x9                   	// #9
  41bdbc:	cmp	w0, #0x0
  41bdc0:	and	w8, w19, w8
  41bdc4:	ccmp	w8, #0x0, #0x4, eq  // eq = none
  41bdc8:	ldr	w8, [sp, #144]
  41bdcc:	csel	w8, w8, wzr, eq  // eq = none
  41bdd0:	str	w8, [sp, #144]
  41bdd4:	b	41bfa0 <eval_buffer@@Base+0x560>
  41bdd8:	tst	w21, #0x10
  41bddc:	mov	w8, #0x2                   	// #2
  41bde0:	csel	w28, w8, w20, eq  // eq = none
  41bde4:	ldr	w8, [sp, #136]
  41bde8:	cbz	w8, 41be0c <eval_buffer@@Base+0x3cc>
  41bdec:	ldr	w8, [sp, #144]
  41bdf0:	tst	w21, #0x2
  41bdf4:	csinc	w8, w8, wzr, eq  // eq = none
  41bdf8:	str	w8, [sp, #144]
  41bdfc:	ldur	x21, [x29, #-144]
  41be00:	mov	w28, #0x2                   	// #2
  41be04:	mov	w25, w26
  41be08:	b	41bbdc <eval_buffer@@Base+0x19c>
  41be0c:	ldr	x0, [sp, #128]
  41be10:	cbz	x0, 41be4c <eval_buffer@@Base+0x40c>
  41be14:	ldp	w8, w5, [sp, #88]
  41be18:	ldr	w1, [sp, #108]
  41be1c:	ldr	x2, [sp, #96]
  41be20:	ldp	x3, x4, [sp, #64]
  41be24:	mov	w8, w8
  41be28:	stp	x8, xzr, [x29, #-96]
  41be2c:	sub	x8, x29, #0x68
  41be30:	str	x8, [sp, #16]
  41be34:	ldr	w8, [sp, #80]
  41be38:	ldp	x6, x7, [sp, #112]
  41be3c:	strb	w8, [sp, #8]
  41be40:	ldr	w8, [sp, #84]
  41be44:	str	w8, [sp]
  41be48:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41be4c:	tbnz	w21, #2, 41bec8 <eval_buffer@@Base+0x488>
  41be50:	tbnz	w21, #1, 41bfac <eval_buffer@@Base+0x56c>
  41be54:	ldr	x0, [sp, #160]
  41be58:	mov	x1, x25
  41be5c:	mov	w2, w28
  41be60:	mov	w3, wzr
  41be64:	bl	425738 <try_variable_definition@@Base>
  41be68:	mov	x19, x0
  41be6c:	tbz	w21, #3, 41be7c <eval_buffer@@Base+0x43c>
  41be70:	ldr	w8, [x19, #44]
  41be74:	and	w8, w8, #0x9fffffff
  41be78:	str	w8, [x19, #44]
  41be7c:	tbnz	w21, #5, 41c01c <eval_buffer@@Base+0x5dc>
  41be80:	mov	w25, wzr
  41be84:	str	xzr, [sp, #96]
  41be88:	stp	xzr, xzr, [sp, #120]
  41be8c:	str	wzr, [sp, #108]
  41be90:	str	wzr, [sp, #136]
  41be94:	b	41c03c <eval_buffer@@Base+0x5fc>
  41be98:	ldr	x2, [sp, #160]
  41be9c:	mov	x0, x25
  41bea0:	bl	41f310 <parse_file_seq@@Base+0x1420>
  41bea4:	cmn	w0, #0x2
  41bea8:	b.eq	41bf94 <eval_buffer@@Base+0x554>  // b.none
  41beac:	cmn	w0, #0x1
  41beb0:	b.eq	41d6ac <eval_buffer@@Base+0x1c6c>  // b.none
  41beb4:	mov	w25, w26
  41beb8:	str	wzr, [sp, #144]
  41bebc:	mov	w28, #0x2                   	// #2
  41bec0:	str	w0, [sp, #136]
  41bec4:	b	41bbdc <eval_buffer@@Base+0x19c>
  41bec8:	mov	x0, x25
  41becc:	mov	x1, xzr
  41bed0:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41bed4:	mov	x19, x0
  41bed8:	bl	419edc <next_token@@Base>
  41bedc:	ldrb	w8, [x0]
  41bee0:	cbz	w8, 41d6b8 <eval_buffer@@Base+0x1c78>
  41bee4:	mov	x20, x0
  41bee8:	bl	406750 <strlen@plt>
  41beec:	ldur	x21, [x29, #-144]
  41bef0:	add	x8, x20, x0
  41bef4:	sub	x10, x8, #0x1
  41bef8:	mov	x8, x10
  41befc:	subs	x9, x10, x20
  41bf00:	b.ls	41bf14 <eval_buffer@@Base+0x4d4>  // b.plast
  41bf04:	mov	x10, x8
  41bf08:	ldrb	w11, [x10], #-1
  41bf0c:	ldrh	w11, [x22, x11, lsl #1]
  41bf10:	tbnz	w11, #1, 41bef8 <eval_buffer@@Base+0x4b8>
  41bf14:	add	x1, x9, #0x1
  41bf18:	mov	x0, x20
  41bf1c:	mov	w2, w28
  41bf20:	mov	x3, xzr
  41bf24:	strb	wzr, [x8, #1]
  41bf28:	bl	424024 <undefine_variable_in_set@@Base>
  41bf2c:	mov	x0, x19
  41bf30:	bl	406c60 <free@plt>
  41bf34:	str	xzr, [sp, #96]
  41bf38:	stp	xzr, xzr, [sp, #120]
  41bf3c:	str	wzr, [sp, #108]
  41bf40:	mov	w25, wzr
  41bf44:	str	wzr, [sp, #136]
  41bf48:	mov	w28, #0x2                   	// #2
  41bf4c:	mov	w20, #0x5                   	// #5
  41bf50:	b	41bbdc <eval_buffer@@Base+0x19c>
  41bf54:	ldr	x9, [sp, #120]
  41bf58:	mov	x25, x21
  41bf5c:	cbnz	x9, 41bf68 <eval_buffer@@Base+0x528>
  41bf60:	ldr	w8, [x23, #48]
  41bf64:	str	w8, [sp, #92]
  41bf68:	ldr	x8, [sp, #56]
  41bf6c:	add	x21, x19, x9
  41bf70:	mov	x26, x24
  41bf74:	cmp	x21, x8
  41bf78:	b.ls	41c048 <eval_buffer@@Base+0x608>  // b.plast
  41bf7c:	ldr	x0, [sp, #112]
  41bf80:	lsl	x1, x21, #1
  41bf84:	str	x1, [sp, #56]
  41bf88:	bl	419de0 <xrealloc@@Base>
  41bf8c:	mov	x24, x0
  41bf90:	b	41c04c <eval_buffer@@Base+0x60c>
  41bf94:	ldr	w8, [sp, #136]
  41bf98:	cbz	w8, 41c09c <eval_buffer@@Base+0x65c>
  41bf9c:	str	wzr, [sp, #144]
  41bfa0:	mov	w28, #0x2                   	// #2
  41bfa4:	mov	w25, w26
  41bfa8:	b	41bbdc <eval_buffer@@Base+0x19c>
  41bfac:	mov	w0, #0x64                  	// #100
  41bfb0:	bl	419e14 <xmalloc@@Base>
  41bfb4:	ldr	x8, [sp, #160]
  41bfb8:	mov	x20, x0
  41bfbc:	sub	x1, x29, #0x38
  41bfc0:	mov	x0, x25
  41bfc4:	ldr	q0, [x8]
  41bfc8:	ldr	x8, [x8, #16]
  41bfcc:	stur	q0, [x29, #-80]
  41bfd0:	stur	x8, [x29, #-64]
  41bfd4:	bl	425450 <parse_variable_definition@@Base>
  41bfd8:	cbz	x0, 41c0d4 <eval_buffer@@Base+0x694>
  41bfdc:	ldur	x8, [x29, #-48]
  41bfe0:	ldrb	w8, [x8]
  41bfe4:	cbz	w8, 41c00c <eval_buffer@@Base+0x5cc>
  41bfe8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41bfec:	mov	w2, #0x5                   	// #5
  41bff0:	mov	x0, xzr
  41bff4:	add	x1, x1, #0xd23
  41bff8:	bl	406dc0 <dcgettext@plt>
  41bffc:	mov	x2, x0
  41c000:	sub	x0, x29, #0x50
  41c004:	mov	x1, xzr
  41c008:	bl	41ae34 <error@@Base>
  41c00c:	ldur	x8, [x29, #-56]
  41c010:	ldur	w9, [x29, #-16]
  41c014:	strb	wzr, [x8, x9]
  41c018:	b	41c0e4 <eval_buffer@@Base+0x6a4>
  41c01c:	stp	xzr, xzr, [sp, #120]
  41c020:	ldr	w8, [x19, #44]
  41c024:	str	xzr, [sp, #96]
  41c028:	str	wzr, [sp, #108]
  41c02c:	mov	w25, wzr
  41c030:	orr	w8, w8, #0x80
  41c034:	str	wzr, [sp, #136]
  41c038:	str	w8, [x19, #44]
  41c03c:	ldur	x21, [x29, #-144]
  41c040:	mov	w28, #0x2                   	// #2
  41c044:	b	41bbdc <eval_buffer@@Base+0x19c>
  41c048:	ldr	x24, [sp, #112]
  41c04c:	ldr	x20, [sp, #120]
  41c050:	sub	x19, x19, #0x1
  41c054:	add	x1, x28, #0x1
  41c058:	mov	x2, x19
  41c05c:	add	x0, x24, x20
  41c060:	bl	406710 <memcpy@plt>
  41c064:	add	x8, x19, x20
  41c068:	mov	w9, #0xa                   	// #10
  41c06c:	mov	w10, wzr
  41c070:	str	wzr, [sp, #136]
  41c074:	stp	x24, x21, [sp, #112]
  41c078:	strb	w9, [x24, x8]
  41c07c:	mov	w28, #0x2                   	// #2
  41c080:	mov	x21, x25
  41c084:	mov	w25, wzr
  41c088:	mov	x24, x26
  41c08c:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c090:	add	x27, x27, #0x92c
  41c094:	mov	w20, #0x5                   	// #5
  41c098:	b	41bbdc <eval_buffer@@Base+0x19c>
  41c09c:	ldur	x8, [x29, #-80]
  41c0a0:	sub	x8, x8, #0x4
  41c0a4:	cmp	x8, #0x4
  41c0a8:	b.hi	41c56c <eval_buffer@@Base+0xb2c>  // b.pmore
  41c0ac:	adrp	x11, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c0b0:	add	x11, x11, #0x790
  41c0b4:	adr	x9, 41c0c4 <eval_buffer@@Base+0x684>
  41c0b8:	ldrh	w10, [x11, x8, lsl #1]
  41c0bc:	add	x9, x9, x10, lsl #2
  41c0c0:	br	x9
  41c0c4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41c0c8:	mov	w2, #0x4                   	// #4
  41c0cc:	add	x0, x0, #0x1ee
  41c0d0:	b	41c39c <eval_buffer@@Base+0x95c>
  41c0d4:	ldur	w8, [x29, #-12]
  41c0d8:	and	w8, w8, #0xfc7fffff
  41c0dc:	orr	w8, w8, #0x1000000
  41c0e0:	stur	w8, [x29, #-12]
  41c0e4:	mov	x0, x25
  41c0e8:	mov	x1, xzr
  41c0ec:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41c0f0:	mov	x19, x0
  41c0f4:	bl	419edc <next_token@@Base>
  41c0f8:	ldrb	w8, [x0]
  41c0fc:	cbz	w8, 41d6c4 <eval_buffer@@Base+0x1c84>
  41c100:	mov	x21, x0
  41c104:	str	x19, [sp, #128]
  41c108:	str	w28, [sp, #136]
  41c10c:	str	x24, [sp, #152]
  41c110:	bl	406750 <strlen@plt>
  41c114:	add	x8, x21, x0
  41c118:	sub	x9, x8, #0x1
  41c11c:	mov	x8, x9
  41c120:	cmp	x9, x21
  41c124:	b.ls	41c138 <eval_buffer@@Base+0x6f8>  // b.plast
  41c128:	mov	x9, x8
  41c12c:	ldrb	w10, [x9], #-1
  41c130:	ldrh	w10, [x22, x10, lsl #1]
  41c134:	tbnz	w10, #1, 41c11c <eval_buffer@@Base+0x6dc>
  41c138:	mov	x0, x23
  41c13c:	str	x21, [sp, #120]
  41c140:	strb	wzr, [x8, #1]
  41c144:	bl	41e5bc <parse_file_seq@@Base+0x6cc>
  41c148:	tbnz	x0, #63, 41d688 <eval_buffer@@Base+0x1c48>
  41c14c:	mov	x26, xzr
  41c150:	mov	w28, #0x1                   	// #1
  41c154:	mov	w21, #0x64                  	// #100
  41c158:	b	41c184 <eval_buffer@@Base+0x744>
  41c15c:	add	x0, x20, x26
  41c160:	mov	x1, x19
  41c164:	mov	x2, x27
  41c168:	bl	406710 <memcpy@plt>
  41c16c:	mov	w8, #0xa                   	// #10
  41c170:	mov	x0, x23
  41c174:	strb	w8, [x20, x25]
  41c178:	bl	41e5bc <parse_file_seq@@Base+0x6cc>
  41c17c:	mov	x26, x24
  41c180:	tbnz	x0, #63, 41d688 <eval_buffer@@Base+0x1c48>
  41c184:	ldr	x8, [x23, #48]
  41c188:	ldr	x19, [x23]
  41c18c:	add	x8, x8, x0
  41c190:	mov	x0, x19
  41c194:	str	x8, [x23, #48]
  41c198:	bl	419a50 <collapse_continuations@@Base>
  41c19c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41c1a0:	ldrb	w8, [x19]
  41c1a4:	ldrb	w9, [x9, #2376]
  41c1a8:	cmp	w8, w9
  41c1ac:	b.eq	41c284 <eval_buffer@@Base+0x844>  // b.none
  41c1b0:	mov	x0, x19
  41c1b4:	bl	419edc <next_token@@Base>
  41c1b8:	mov	x27, x0
  41c1bc:	bl	406750 <strlen@plt>
  41c1c0:	cmp	x0, #0x6
  41c1c4:	b.ne	41c1e8 <eval_buffer@@Base+0x7a8>  // b.any
  41c1c8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c1cc:	mov	w2, #0x6                   	// #6
  41c1d0:	mov	x0, x27
  41c1d4:	add	x1, x1, #0xace
  41c1d8:	bl	4069f0 <strncmp@plt>
  41c1dc:	cbnz	w0, 41c1fc <eval_buffer@@Base+0x7bc>
  41c1e0:	add	w28, w28, #0x1
  41c1e4:	b	41c284 <eval_buffer@@Base+0x844>
  41c1e8:	cmp	x0, #0x7
  41c1ec:	b.cc	41c20c <eval_buffer@@Base+0x7cc>  // b.lo, b.ul, b.last
  41c1f0:	ldrb	w8, [x27, #6]
  41c1f4:	ldrh	w8, [x22, x8, lsl #1]
  41c1f8:	tbnz	w8, #1, 41c1c8 <eval_buffer@@Base+0x788>
  41c1fc:	ldrb	w8, [x27, #5]
  41c200:	ldrh	w8, [x22, x8, lsl #1]
  41c204:	tbnz	w8, #1, 41c214 <eval_buffer@@Base+0x7d4>
  41c208:	b	41c284 <eval_buffer@@Base+0x844>
  41c20c:	cmp	x0, #0x5
  41c210:	b.ne	41c284 <eval_buffer@@Base+0x844>  // b.any
  41c214:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c218:	mov	w2, #0x5                   	// #5
  41c21c:	mov	x0, x27
  41c220:	add	x1, x1, #0x953
  41c224:	bl	4069f0 <strncmp@plt>
  41c228:	cbnz	w0, 41c284 <eval_buffer@@Base+0x844>
  41c22c:	add	x27, x27, #0x5
  41c230:	mov	w1, #0x4008                	// #16392
  41c234:	mov	x0, x27
  41c238:	bl	41e43c <parse_file_seq@@Base+0x54c>
  41c23c:	cbz	x0, 41c244 <eval_buffer@@Base+0x804>
  41c240:	strb	wzr, [x0]
  41c244:	mov	x0, x27
  41c248:	bl	419edc <next_token@@Base>
  41c24c:	ldrb	w8, [x0]
  41c250:	ldr	x24, [sp, #152]
  41c254:	cbz	w8, 41c27c <eval_buffer@@Base+0x83c>
  41c258:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c25c:	mov	w2, #0x5                   	// #5
  41c260:	mov	x0, xzr
  41c264:	add	x1, x1, #0xd73
  41c268:	bl	406dc0 <dcgettext@plt>
  41c26c:	mov	x2, x0
  41c270:	ldr	x0, [sp, #160]
  41c274:	mov	x1, xzr
  41c278:	bl	41ae34 <error@@Base>
  41c27c:	subs	w28, w28, #0x1
  41c280:	b.eq	41c2bc <eval_buffer@@Base+0x87c>  // b.none
  41c284:	mov	x0, x19
  41c288:	bl	406750 <strlen@plt>
  41c28c:	add	x25, x0, x26
  41c290:	add	x24, x25, #0x1
  41c294:	mov	x27, x0
  41c298:	cmp	x24, x21
  41c29c:	b.ls	41c15c <eval_buffer@@Base+0x71c>  // b.plast
  41c2a0:	mov	w1, #0x1                   	// #1
  41c2a4:	bfi	x1, x25, #1, #63
  41c2a8:	mov	x0, x20
  41c2ac:	lsl	x21, x25, #1
  41c2b0:	bl	419de0 <xrealloc@@Base>
  41c2b4:	mov	x20, x0
  41c2b8:	b	41c15c <eval_buffer@@Base+0x71c>
  41c2bc:	add	x8, x26, x20
  41c2c0:	sub	x8, x8, #0x1
  41c2c4:	cmp	x26, #0x0
  41c2c8:	csel	x8, x20, x8, eq  // eq = none
  41c2cc:	strb	wzr, [x8]
  41c2d0:	ldur	w8, [x29, #-12]
  41c2d4:	ldr	x1, [sp, #120]
  41c2d8:	ldr	w3, [sp, #136]
  41c2dc:	sub	x0, x29, #0x50
  41c2e0:	ubfx	w4, w8, #23, #3
  41c2e4:	mov	x2, x20
  41c2e8:	mov	w5, wzr
  41c2ec:	bl	4246c0 <do_variable_definition@@Base>
  41c2f0:	mov	x19, x0
  41c2f4:	mov	x0, x20
  41c2f8:	bl	406c60 <free@plt>
  41c2fc:	ldr	x0, [sp, #128]
  41c300:	bl	406c60 <free@plt>
  41c304:	ldurb	w21, [x29, #-120]
  41c308:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c30c:	add	x27, x27, #0x92c
  41c310:	mov	w20, #0x5                   	// #5
  41c314:	tbnz	w21, #3, 41be70 <eval_buffer@@Base+0x430>
  41c318:	b	41be7c <eval_buffer@@Base+0x43c>
  41c31c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c320:	mov	w2, #0x6                   	// #6
  41c324:	add	x0, x0, #0x979
  41c328:	mov	x1, x25
  41c32c:	bl	4069f0 <strncmp@plt>
  41c330:	cbnz	w0, 41c56c <eval_buffer@@Base+0xb2c>
  41c334:	b	41c764 <eval_buffer@@Base+0xd24>
  41c338:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c33c:	mov	w2, #0x8                   	// #8
  41c340:	add	x0, x0, #0x977
  41c344:	mov	x1, x25
  41c348:	bl	4069f0 <strncmp@plt>
  41c34c:	cbz	w0, 41c764 <eval_buffer@@Base+0xd24>
  41c350:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c354:	mov	w2, #0x8                   	// #8
  41c358:	add	x0, x0, #0x980
  41c35c:	mov	x1, x25
  41c360:	bl	4069f0 <strncmp@plt>
  41c364:	cbz	w0, 41c660 <eval_buffer@@Base+0xc20>
  41c368:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c36c:	mov	w2, #0x8                   	// #8
  41c370:	add	x0, x0, #0x989
  41c374:	b	41c560 <eval_buffer@@Base+0xb20>
  41c378:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  41c37c:	mov	w2, #0x5                   	// #5
  41c380:	add	x0, x0, #0x8c6
  41c384:	mov	x1, x25
  41c388:	bl	4069f0 <strncmp@plt>
  41c38c:	cbz	w0, 41cb10 <eval_buffer@@Base+0x10d0>
  41c390:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41c394:	mov	w2, #0x5                   	// #5
  41c398:	add	x0, x0, #0x694
  41c39c:	mov	x1, x25
  41c3a0:	bl	4069f0 <strncmp@plt>
  41c3a4:	cbnz	w0, 41c56c <eval_buffer@@Base+0xb2c>
  41c3a8:	ldrb	w21, [x25]
  41c3ac:	ldr	x0, [sp, #128]
  41c3b0:	cmp	w21, #0x2d
  41c3b4:	cset	w25, eq  // eq = none
  41c3b8:	cbz	x0, 41c3f4 <eval_buffer@@Base+0x9b4>
  41c3bc:	ldp	w8, w5, [sp, #88]
  41c3c0:	ldr	w1, [sp, #108]
  41c3c4:	ldr	x2, [sp, #96]
  41c3c8:	ldp	x3, x4, [sp, #64]
  41c3cc:	mov	w8, w8
  41c3d0:	stp	x8, xzr, [x29, #-96]
  41c3d4:	sub	x8, x29, #0x68
  41c3d8:	str	x8, [sp, #16]
  41c3dc:	ldr	w8, [sp, #80]
  41c3e0:	ldp	x6, x7, [sp, #112]
  41c3e4:	strb	w8, [sp, #8]
  41c3e8:	ldr	w8, [sp, #84]
  41c3ec:	str	w8, [sp]
  41c3f0:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41c3f4:	ldur	x0, [x29, #-112]
  41c3f8:	mov	x1, xzr
  41c3fc:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41c400:	ldrb	w8, [x0]
  41c404:	mov	x20, x0
  41c408:	cbz	w8, 41cccc <eval_buffer@@Base+0x128c>
  41c40c:	sub	x0, x29, #0x70
  41c410:	mov	w1, #0x10                  	// #16
  41c414:	mov	w2, #0x1                   	// #1
  41c418:	mov	w4, #0x2                   	// #2
  41c41c:	mov	x3, xzr
  41c420:	stur	x20, [x29, #-112]
  41c424:	mov	w28, #0x2                   	// #2
  41c428:	bl	41def0 <parse_file_seq@@Base>
  41c42c:	mov	x19, x0
  41c430:	mov	x0, x20
  41c434:	bl	406c60 <free@plt>
  41c438:	cbz	x19, 41ccfc <eval_buffer@@Base+0x12bc>
  41c43c:	cmp	w21, #0x2d
  41c440:	b.ne	41c4e4 <eval_buffer@@Base+0xaa4>  // b.any
  41c444:	ldur	x21, [x29, #-144]
  41c448:	b	41c460 <eval_buffer@@Base+0xa20>
  41c44c:	ldr	w8, [x0, #136]
  41c450:	orr	w8, w8, #0x40
  41c454:	str	w8, [x0, #136]
  41c458:	mov	w28, #0x2                   	// #2
  41c45c:	cbz	x19, 41cd50 <eval_buffer@@Base+0x1310>
  41c460:	mov	x20, x19
  41c464:	ldp	x19, x8, [x19]
  41c468:	ldr	x0, [sp, #160]
  41c46c:	sub	x1, x29, #0x38
  41c470:	mov	w2, w25
  41c474:	stur	x8, [x29, #-56]
  41c478:	bl	4158dc <load_file@@Base>
  41c47c:	mov	w27, w0
  41c480:	mov	x0, x20
  41c484:	bl	406c60 <free@plt>
  41c488:	cmn	w27, #0x1
  41c48c:	b.eq	41c458 <eval_buffer@@Base+0xa18>  // b.none
  41c490:	mov	w0, #0x40                  	// #64
  41c494:	bl	419e38 <xcalloc@@Base>
  41c498:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  41c49c:	ldr	x8, [x9, #1568]
  41c4a0:	mov	x20, x0
  41c4a4:	str	x8, [x0]
  41c4a8:	ldur	x0, [x29, #-56]
  41c4ac:	str	x20, [x9, #1568]
  41c4b0:	bl	40aae4 <lookup_file@@Base>
  41c4b4:	str	x0, [x20, #16]
  41c4b8:	cbnz	x0, 41c44c <eval_buffer@@Base+0xa0c>
  41c4bc:	ldur	x0, [x29, #-56]
  41c4c0:	bl	40ab6c <enter_file@@Base>
  41c4c4:	str	x0, [x20, #16]
  41c4c8:	b	41c44c <eval_buffer@@Base+0xa0c>
  41c4cc:	ldr	w8, [x0, #136]
  41c4d0:	orr	w8, w8, #0x40
  41c4d4:	str	w8, [x0, #136]
  41c4d8:	mov	w28, #0x2                   	// #2
  41c4dc:	mov	x19, x21
  41c4e0:	cbz	x21, 41cd6c <eval_buffer@@Base+0x132c>
  41c4e4:	ldp	x21, x8, [x19]
  41c4e8:	ldr	x0, [sp, #160]
  41c4ec:	sub	x1, x29, #0x38
  41c4f0:	mov	w2, w25
  41c4f4:	stur	x8, [x29, #-56]
  41c4f8:	bl	4158dc <load_file@@Base>
  41c4fc:	cbz	w0, 41d6d0 <eval_buffer@@Base+0x1c90>
  41c500:	mov	w20, w0
  41c504:	mov	x0, x19
  41c508:	bl	406c60 <free@plt>
  41c50c:	cmn	w20, #0x1
  41c510:	mov	w20, #0x5                   	// #5
  41c514:	b.eq	41c4d8 <eval_buffer@@Base+0xa98>  // b.none
  41c518:	mov	w0, #0x40                  	// #64
  41c51c:	bl	419e38 <xcalloc@@Base>
  41c520:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  41c524:	ldr	x8, [x9, #1568]
  41c528:	mov	x19, x0
  41c52c:	str	x8, [x0]
  41c530:	ldur	x0, [x29, #-56]
  41c534:	str	x19, [x9, #1568]
  41c538:	bl	40aae4 <lookup_file@@Base>
  41c53c:	str	x0, [x19, #16]
  41c540:	cbnz	x0, 41c4cc <eval_buffer@@Base+0xa8c>
  41c544:	ldur	x0, [x29, #-56]
  41c548:	bl	40ab6c <enter_file@@Base>
  41c54c:	str	x0, [x19, #16]
  41c550:	b	41c4cc <eval_buffer@@Base+0xa8c>
  41c554:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c558:	mov	w2, #0x7                   	// #7
  41c55c:	add	x0, x0, #0x981
  41c560:	mov	x1, x25
  41c564:	bl	4069f0 <strncmp@plt>
  41c568:	cbz	w0, 41c660 <eval_buffer@@Base+0xc20>
  41c56c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41c570:	ldrb	w8, [x28]
  41c574:	ldrb	w9, [x9, #2376]
  41c578:	cmp	w8, w9
  41c57c:	b.eq	41d744 <eval_buffer@@Base+0x1d04>  // b.none
  41c580:	ldr	x0, [sp, #128]
  41c584:	cbz	x0, 41c5c0 <eval_buffer@@Base+0xb80>
  41c588:	ldp	w8, w5, [sp, #88]
  41c58c:	ldr	w1, [sp, #108]
  41c590:	ldr	x2, [sp, #96]
  41c594:	ldp	x3, x4, [sp, #64]
  41c598:	mov	w8, w8
  41c59c:	stp	x8, xzr, [x29, #-96]
  41c5a0:	sub	x8, x29, #0x68
  41c5a4:	str	x8, [sp, #16]
  41c5a8:	ldr	w8, [sp, #80]
  41c5ac:	ldp	x6, x7, [sp, #112]
  41c5b0:	strb	w8, [sp, #8]
  41c5b4:	ldr	w8, [sp, #84]
  41c5b8:	str	w8, [sp]
  41c5bc:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41c5c0:	ldr	w8, [x23, #48]
  41c5c4:	mov	w1, #0x4018                	// #16408
  41c5c8:	mov	x0, x28
  41c5cc:	str	w8, [sp, #88]
  41c5d0:	bl	41e43c <parse_file_seq@@Base+0x54c>
  41c5d4:	cbz	x0, 41c5ec <eval_buffer@@Base+0xbac>
  41c5d8:	ldrb	w8, [x0]
  41c5dc:	strb	wzr, [x0], #1
  41c5e0:	cmp	w8, #0x23
  41c5e4:	csel	x26, xzr, x0, eq  // eq = none
  41c5e8:	b	41c5f0 <eval_buffer@@Base+0xbb0>
  41c5ec:	mov	x26, xzr
  41c5f0:	mov	x0, x28
  41c5f4:	bl	419a50 <collapse_continuations@@Base>
  41c5f8:	sub	x1, x29, #0x80
  41c5fc:	sub	x2, x29, #0x50
  41c600:	mov	x0, x28
  41c604:	bl	41fa34 <parse_file_seq@@Base+0x1b44>
  41c608:	mov	w27, w0
  41c60c:	cmp	w0, #0x9
  41c610:	b.hi	41c850 <eval_buffer@@Base+0xe10>  // b.pmore
  41c614:	mov	w8, #0x1                   	// #1
  41c618:	lsl	w8, w8, w27
  41c61c:	mov	w9, #0x330                 	// #816
  41c620:	tst	w8, w9
  41c624:	b.eq	41c648 <eval_buffer@@Base+0xc08>  // b.none
  41c628:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c62c:	str	xzr, [sp, #96]
  41c630:	stp	xzr, xzr, [sp, #120]
  41c634:	str	wzr, [sp, #108]
  41c638:	mov	w25, #0x1                   	// #1
  41c63c:	mov	w28, #0x2                   	// #2
  41c640:	add	x27, x27, #0x92c
  41c644:	b	41cafc <eval_buffer@@Base+0x10bc>
  41c648:	cmp	w27, #0x1
  41c64c:	b.ne	41c850 <eval_buffer@@Base+0xe10>  // b.any
  41c650:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41c654:	add	x27, x27, #0x92c
  41c658:	cbz	x26, 41cae8 <eval_buffer@@Base+0x10a8>
  41c65c:	b	41d704 <eval_buffer@@Base+0x1cc4>
  41c660:	mov	x27, x24
  41c664:	ldrb	w24, [x25]
  41c668:	ldr	x0, [sp, #128]
  41c66c:	cbz	x0, 41c6a8 <eval_buffer@@Base+0xc68>
  41c670:	ldp	w8, w5, [sp, #88]
  41c674:	ldr	w1, [sp, #108]
  41c678:	ldr	x2, [sp, #96]
  41c67c:	ldp	x3, x4, [sp, #64]
  41c680:	mov	w8, w8
  41c684:	stp	x8, xzr, [x29, #-96]
  41c688:	sub	x8, x29, #0x68
  41c68c:	str	x8, [sp, #16]
  41c690:	ldr	w8, [sp, #80]
  41c694:	ldp	x6, x7, [sp, #112]
  41c698:	strb	w8, [sp, #8]
  41c69c:	ldr	w8, [sp, #84]
  41c6a0:	str	w8, [sp]
  41c6a4:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41c6a8:	ldur	x0, [x29, #-112]
  41c6ac:	mov	x1, xzr
  41c6b0:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41c6b4:	ldrb	w8, [x0]
  41c6b8:	mov	x20, x0
  41c6bc:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  41c6c0:	cbz	w8, 41cc6c <eval_buffer@@Base+0x122c>
  41c6c4:	sub	x0, x29, #0x70
  41c6c8:	mov	w1, #0x10                  	// #16
  41c6cc:	mov	w2, #0x1                   	// #1
  41c6d0:	mov	w4, #0x2                   	// #2
  41c6d4:	mov	x3, xzr
  41c6d8:	stur	x20, [x29, #-112]
  41c6dc:	bl	41def0 <parse_file_seq@@Base>
  41c6e0:	mov	x19, x0
  41c6e4:	mov	x0, x20
  41c6e8:	bl	406c60 <free@plt>
  41c6ec:	ldr	x21, [x28, #2392]
  41c6f0:	sub	x8, x29, #0x38
  41c6f4:	stp	xzr, xzr, [x29, #-48]
  41c6f8:	stur	xzr, [x29, #-56]
  41c6fc:	str	x8, [x28, #2392]
  41c700:	cbz	x19, 41cb90 <eval_buffer@@Base+0x1150>
  41c704:	cmp	w24, #0x69
  41c708:	mov	w8, #0xa                   	// #10
  41c70c:	mov	w9, #0xe                   	// #14
  41c710:	csel	w8, w8, w9, eq  // eq = none
  41c714:	ldr	w9, [sp, #52]
  41c718:	orr	w20, w8, w9
  41c71c:	b	41c730 <eval_buffer@@Base+0xcf0>
  41c720:	mov	x0, x19
  41c724:	bl	406c60 <free@plt>
  41c728:	mov	x19, x24
  41c72c:	cbz	x24, 41cb8c <eval_buffer@@Base+0x114c>
  41c730:	ldp	x24, x0, [x19]
  41c734:	mov	w1, w20
  41c738:	bl	41b6e4 <read_all_makefiles@@Base+0x2bc>
  41c73c:	mov	x25, x0
  41c740:	bl	406e70 <__errno_location@plt>
  41c744:	ldr	w8, [x0]
  41c748:	cbz	w8, 41c720 <eval_buffer@@Base+0xce0>
  41c74c:	ldr	x9, [sp, #160]
  41c750:	ldr	x8, [x9, #16]
  41c754:	ldr	q0, [x9]
  41c758:	str	x8, [x25, #56]
  41c75c:	stur	q0, [x25, #40]
  41c760:	b	41c720 <eval_buffer@@Base+0xce0>
  41c764:	ldrb	w21, [x25]
  41c768:	ldr	x0, [sp, #128]
  41c76c:	cmp	w21, #0x75
  41c770:	cset	w19, ne  // ne = any
  41c774:	cbz	x0, 41c7b0 <eval_buffer@@Base+0xd70>
  41c778:	ldp	w8, w5, [sp, #88]
  41c77c:	ldr	w1, [sp, #108]
  41c780:	ldr	x2, [sp, #96]
  41c784:	ldp	x3, x4, [sp, #64]
  41c788:	mov	w8, w8
  41c78c:	stp	x8, xzr, [x29, #-96]
  41c790:	sub	x8, x29, #0x68
  41c794:	str	x8, [sp, #16]
  41c798:	ldr	w8, [sp, #80]
  41c79c:	ldp	x6, x7, [sp, #112]
  41c7a0:	strb	w8, [sp, #8]
  41c7a4:	ldr	w8, [sp, #84]
  41c7a8:	str	w8, [sp]
  41c7ac:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41c7b0:	ldur	x0, [x29, #-112]
  41c7b4:	adrp	x25, 42a000 <_IO_stdin_used@@Base+0x2680>
  41c7b8:	add	x25, x25, #0x3a9
  41c7bc:	ldrb	w8, [x0]
  41c7c0:	cbz	w8, 41cca8 <eval_buffer@@Base+0x1268>
  41c7c4:	mov	x1, xzr
  41c7c8:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41c7cc:	mov	x19, x0
  41c7d0:	stur	x0, [x29, #-128]
  41c7d4:	sub	x0, x29, #0x80
  41c7d8:	sub	x1, x29, #0x38
  41c7dc:	bl	419efc <find_next_token@@Base>
  41c7e0:	cbz	x0, 41cb08 <eval_buffer@@Base+0x10c8>
  41c7e4:	cmp	w21, #0x75
  41c7e8:	cset	w8, eq  // eq = none
  41c7ec:	mov	x20, x0
  41c7f0:	lsl	w21, w8, #29
  41c7f4:	b	41c81c <eval_buffer@@Base+0xddc>
  41c7f8:	ldr	w8, [x0, #44]
  41c7fc:	sub	x1, x29, #0x38
  41c800:	and	w8, w8, #0x9fffffff
  41c804:	orr	w8, w8, w21
  41c808:	str	w8, [x0, #44]
  41c80c:	sub	x0, x29, #0x80
  41c810:	bl	419efc <find_next_token@@Base>
  41c814:	mov	x20, x0
  41c818:	cbz	x0, 41cb08 <eval_buffer@@Base+0x10c8>
  41c81c:	ldur	x1, [x29, #-56]
  41c820:	mov	x0, x20
  41c824:	bl	424110 <lookup_variable@@Base>
  41c828:	cbnz	x0, 41c7f8 <eval_buffer@@Base+0xdb8>
  41c82c:	ldur	x1, [x29, #-56]
  41c830:	ldr	x6, [sp, #160]
  41c834:	mov	w3, #0x2                   	// #2
  41c838:	mov	x0, x20
  41c83c:	mov	x2, x25
  41c840:	mov	w4, wzr
  41c844:	mov	x5, xzr
  41c848:	bl	423d70 <define_variable_in_set@@Base>
  41c84c:	b	41c7f8 <eval_buffer@@Base+0xdb8>
  41c850:	ldur	x1, [x29, #-128]
  41c854:	ldur	x2, [x29, #-80]
  41c858:	mov	x0, xzr
  41c85c:	bl	40a038 <variable_expand_string@@Base>
  41c860:	mov	x20, x0
  41c864:	stp	x26, x24, [sp, #144]
  41c868:	ldur	x8, [x29, #-80]
  41c86c:	ldur	x9, [x29, #-128]
  41c870:	stur	x20, [x29, #-112]
  41c874:	add	x8, x9, x8
  41c878:	stur	x8, [x29, #-128]
  41c87c:	cbnz	x26, 41c994 <eval_buffer@@Base+0xf54>
  41c880:	mov	x19, xzr
  41c884:	add	x21, x20, #0x1
  41c888:	mov	x25, x20
  41c88c:	b	41c8bc <eval_buffer@@Base+0xe7c>
  41c890:	cmp	w24, #0x0
  41c894:	cinc	w9, w24, lt  // lt = tstop
  41c898:	sub	x8, x21, x25
  41c89c:	sbfx	x9, x9, #1, #31
  41c8a0:	add	x0, x25, w24, sxtw
  41c8a4:	add	x25, x25, x9
  41c8a8:	sub	x8, x8, x9
  41c8ac:	add	x2, x8, x19
  41c8b0:	mov	x1, x25
  41c8b4:	bl	406720 <memmove@plt>
  41c8b8:	tbz	w24, #0, 41c930 <eval_buffer@@Base+0xef0>
  41c8bc:	mov	w1, #0x3b                  	// #59
  41c8c0:	mov	x0, x25
  41c8c4:	bl	406c80 <strchr@plt>
  41c8c8:	cbz	x0, 41c98c <eval_buffer@@Base+0xf4c>
  41c8cc:	mov	x25, x0
  41c8d0:	cmp	x0, x20
  41c8d4:	b.ls	41c930 <eval_buffer@@Base+0xef0>  // b.plast
  41c8d8:	ldurb	w8, [x25, #-1]
  41c8dc:	cmp	w8, #0x5c
  41c8e0:	b.ne	41c930 <eval_buffer@@Base+0xef0>  // b.any
  41c8e4:	sub	x8, x25, #0x2
  41c8e8:	cmp	x8, x20
  41c8ec:	b.cs	41c8f8 <eval_buffer@@Base+0xeb8>  // b.hs, b.nlast
  41c8f0:	mov	w8, #0xfffffffe            	// #-2
  41c8f4:	b	41c918 <eval_buffer@@Base+0xed8>
  41c8f8:	mov	x8, #0xfffffffffffffffe    	// #-2
  41c8fc:	ldrb	w9, [x25, x8]
  41c900:	cmp	w9, #0x5c
  41c904:	b.ne	41c918 <eval_buffer@@Base+0xed8>  // b.any
  41c908:	sub	x8, x8, #0x1
  41c90c:	add	x9, x25, x8
  41c910:	cmp	x9, x20
  41c914:	b.cs	41c8fc <eval_buffer@@Base+0xebc>  // b.hs, b.nlast
  41c918:	add	w24, w8, #0x1
  41c91c:	cbnz	x19, 41c890 <eval_buffer@@Base+0xe50>
  41c920:	mov	x0, x20
  41c924:	bl	406750 <strlen@plt>
  41c928:	mov	x19, x0
  41c92c:	b	41c890 <eval_buffer@@Base+0xe50>
  41c930:	ldur	x19, [x29, #-112]
  41c934:	adrp	x24, 441000 <stdio_traced@@Base+0x1a48>
  41c938:	ldr	x8, [x24, #4016]
  41c93c:	mov	x0, x19
  41c940:	sub	x20, x19, x8
  41c944:	sub	x21, x25, x8
  41c948:	bl	406750 <strlen@plt>
  41c94c:	strb	wzr, [x25]
  41c950:	ldur	x1, [x29, #-128]
  41c954:	add	x0, x19, x0
  41c958:	mov	x2, #0xffffffffffffffff    	// #-1
  41c95c:	bl	40a038 <variable_expand_string@@Base>
  41c960:	ldur	x19, [x29, #-128]
  41c964:	mov	x0, x19
  41c968:	bl	406750 <strlen@plt>
  41c96c:	ldr	x8, [x24, #4016]
  41c970:	add	x9, x19, x0
  41c974:	stur	x9, [x29, #-128]
  41c978:	add	x20, x8, x20
  41c97c:	add	x8, x8, x21
  41c980:	stur	x20, [x29, #-112]
  41c984:	add	x26, x8, #0x1
  41c988:	b	41c994 <eval_buffer@@Base+0xf54>
  41c98c:	ldur	x20, [x29, #-112]
  41c990:	mov	x26, xzr
  41c994:	mov	x19, xzr
  41c998:	add	x21, x20, #0x1
  41c99c:	mov	x25, x20
  41c9a0:	b	41c9d0 <eval_buffer@@Base+0xf90>
  41c9a4:	cmp	w24, #0x0
  41c9a8:	cinc	w9, w24, lt  // lt = tstop
  41c9ac:	sub	x8, x21, x25
  41c9b0:	sbfx	x9, x9, #1, #31
  41c9b4:	add	x0, x25, w24, sxtw
  41c9b8:	add	x25, x25, x9
  41c9bc:	sub	x8, x8, x9
  41c9c0:	add	x2, x8, x19
  41c9c4:	mov	x1, x25
  41c9c8:	bl	406720 <memmove@plt>
  41c9cc:	tbz	w24, #0, 41ca98 <eval_buffer@@Base+0x1058>
  41c9d0:	mov	w1, #0x3a                  	// #58
  41c9d4:	mov	x0, x25
  41c9d8:	bl	406c80 <strchr@plt>
  41c9dc:	cbz	x0, 41ca44 <eval_buffer@@Base+0x1004>
  41c9e0:	mov	x25, x0
  41c9e4:	cmp	x0, x20
  41c9e8:	b.ls	41ca98 <eval_buffer@@Base+0x1058>  // b.plast
  41c9ec:	ldurb	w8, [x25, #-1]
  41c9f0:	cmp	w8, #0x5c
  41c9f4:	b.ne	41ca98 <eval_buffer@@Base+0x1058>  // b.any
  41c9f8:	sub	x8, x25, #0x2
  41c9fc:	cmp	x8, x20
  41ca00:	b.cs	41ca0c <eval_buffer@@Base+0xfcc>  // b.hs, b.nlast
  41ca04:	mov	w8, #0xfffffffe            	// #-2
  41ca08:	b	41ca2c <eval_buffer@@Base+0xfec>
  41ca0c:	mov	x8, #0xfffffffffffffffe    	// #-2
  41ca10:	ldrb	w9, [x25, x8]
  41ca14:	cmp	w9, #0x5c
  41ca18:	b.ne	41ca2c <eval_buffer@@Base+0xfec>  // b.any
  41ca1c:	sub	x8, x8, #0x1
  41ca20:	add	x9, x25, x8
  41ca24:	cmp	x9, x20
  41ca28:	b.cs	41ca10 <eval_buffer@@Base+0xfd0>  // b.hs, b.nlast
  41ca2c:	add	w24, w8, #0x1
  41ca30:	cbnz	x19, 41c9a4 <eval_buffer@@Base+0xf64>
  41ca34:	mov	x0, x20
  41ca38:	bl	406750 <strlen@plt>
  41ca3c:	mov	x19, x0
  41ca40:	b	41c9a4 <eval_buffer@@Base+0xf64>
  41ca44:	ldur	x0, [x29, #-128]
  41ca48:	sub	x1, x29, #0x80
  41ca4c:	sub	x2, x29, #0x50
  41ca50:	bl	41fa34 <parse_file_seq@@Base+0x1b44>
  41ca54:	mov	w27, w0
  41ca58:	cmp	w0, #0x1
  41ca5c:	b.eq	41d5f8 <eval_buffer@@Base+0x1bb8>  // b.none
  41ca60:	ldur	x19, [x29, #-112]
  41ca64:	mov	x0, x19
  41ca68:	bl	406750 <strlen@plt>
  41ca6c:	add	x8, x19, x0
  41ca70:	add	x9, x8, #0x1
  41ca74:	stur	x9, [x29, #-112]
  41ca78:	mov	w9, #0x20                  	// #32
  41ca7c:	strb	w9, [x8]
  41ca80:	ldur	x0, [x29, #-112]
  41ca84:	ldur	x1, [x29, #-128]
  41ca88:	ldur	x2, [x29, #-80]
  41ca8c:	bl	40a038 <variable_expand_string@@Base>
  41ca90:	mov	x20, x0
  41ca94:	b	41c868 <eval_buffer@@Base+0xe28>
  41ca98:	ldur	x8, [x29, #-112]
  41ca9c:	cmp	x25, x8
  41caa0:	b.ls	41cab4 <eval_buffer@@Base+0x1074>  // b.plast
  41caa4:	mov	x8, x25
  41caa8:	ldrb	w9, [x8, #-1]!
  41caac:	cmp	w9, #0x26
  41cab0:	csel	x25, x8, x25, eq  // eq = none
  41cab4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41cab8:	ldr	x0, [x8, #4016]
  41cabc:	ldur	x21, [x29, #-144]
  41cac0:	ldr	x24, [sp, #152]
  41cac4:	bl	419edc <next_token@@Base>
  41cac8:	cmp	w27, #0x1
  41cacc:	stur	x0, [x29, #-112]
  41cad0:	b.ne	41cbac <eval_buffer@@Base+0x116c>  // b.any
  41cad4:	ldrb	w8, [x0]
  41cad8:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41cadc:	add	x27, x27, #0x92c
  41cae0:	mov	w20, #0x5                   	// #5
  41cae4:	cbnz	w8, 41d750 <eval_buffer@@Base+0x1d10>
  41cae8:	str	xzr, [sp, #96]
  41caec:	stp	xzr, xzr, [sp, #120]
  41caf0:	str	wzr, [sp, #108]
  41caf4:	mov	w25, wzr
  41caf8:	mov	w28, #0x2                   	// #2
  41cafc:	str	wzr, [sp, #144]
  41cb00:	str	wzr, [sp, #136]
  41cb04:	b	41bbdc <eval_buffer@@Base+0x19c>
  41cb08:	mov	x0, x19
  41cb0c:	b	41ccd0 <eval_buffer@@Base+0x1290>
  41cb10:	ldr	x0, [sp, #128]
  41cb14:	cbz	x0, 41cb50 <eval_buffer@@Base+0x1110>
  41cb18:	ldp	w8, w5, [sp, #88]
  41cb1c:	ldr	w1, [sp, #108]
  41cb20:	ldr	x2, [sp, #96]
  41cb24:	ldp	x3, x4, [sp, #64]
  41cb28:	mov	w8, w8
  41cb2c:	stp	x8, xzr, [x29, #-96]
  41cb30:	sub	x8, x29, #0x68
  41cb34:	str	x8, [sp, #16]
  41cb38:	ldr	w8, [sp, #80]
  41cb3c:	ldp	x6, x7, [sp, #112]
  41cb40:	strb	w8, [sp, #8]
  41cb44:	ldr	w8, [sp, #84]
  41cb48:	str	w8, [sp]
  41cb4c:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41cb50:	ldur	x0, [x29, #-112]
  41cb54:	bl	40a7e8 <variable_expand@@Base>
  41cb58:	stur	x0, [x29, #-56]
  41cb5c:	sub	x0, x29, #0x38
  41cb60:	sub	x1, x29, #0x80
  41cb64:	bl	419efc <find_next_token@@Base>
  41cb68:	cbz	x0, 41cd18 <eval_buffer@@Base+0x12d8>
  41cb6c:	ldur	x1, [x29, #-128]
  41cb70:	bl	419e7c <xstrndup@@Base>
  41cb74:	mov	x19, x0
  41cb78:	sub	x0, x29, #0x38
  41cb7c:	sub	x1, x29, #0x80
  41cb80:	bl	419efc <find_next_token@@Base>
  41cb84:	mov	x1, x0
  41cb88:	b	41cd20 <eval_buffer@@Base+0x12e0>
  41cb8c:	ldr	x8, [x28, #2392]
  41cb90:	ldr	x0, [x8, #8]
  41cb94:	bl	406c60 <free@plt>
  41cb98:	ldr	x8, [x28, #2392]
  41cb9c:	ldr	x0, [x8, #16]
  41cba0:	bl	406c60 <free@plt>
  41cba4:	str	x21, [x28, #2392]
  41cba8:	b	41cc74 <eval_buffer@@Base+0x1234>
  41cbac:	ldrb	w19, [x25]
  41cbb0:	mov	x20, x25
  41cbb4:	sub	x0, x29, #0x70
  41cbb8:	mov	w1, #0x10                  	// #16
  41cbbc:	mov	w2, #0x1                   	// #1
  41cbc0:	mov	x3, xzr
  41cbc4:	mov	w4, wzr
  41cbc8:	strb	wzr, [x20], #1
  41cbcc:	bl	41def0 <parse_file_seq@@Base>
  41cbd0:	cmp	w19, #0x26
  41cbd4:	cset	w8, eq  // eq = none
  41cbd8:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41cbdc:	str	w8, [sp, #108]
  41cbe0:	csel	x8, x25, x20, ne  // ne = any
  41cbe4:	add	x27, x27, #0x92c
  41cbe8:	strb	w19, [x25]
  41cbec:	stur	x8, [x29, #-112]
  41cbf0:	cbz	x0, 41cd8c <eval_buffer@@Base+0x134c>
  41cbf4:	add	x20, x8, #0x1
  41cbf8:	stur	x20, [x29, #-112]
  41cbfc:	ldrb	w8, [x8, #1]
  41cc00:	cmp	w8, #0x3a
  41cc04:	cset	w8, eq  // eq = none
  41cc08:	str	w8, [sp, #84]
  41cc0c:	b.ne	41cc18 <eval_buffer@@Base+0x11d8>  // b.any
  41cc10:	add	x20, x20, #0x1
  41cc14:	stur	x20, [x29, #-112]
  41cc18:	ldur	x25, [x29, #-128]
  41cc1c:	str	x0, [sp, #128]
  41cc20:	ldrb	w8, [x25]
  41cc24:	cbz	w8, 41cda4 <eval_buffer@@Base+0x1364>
  41cc28:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  41cc2c:	ldr	x8, [x28, #4016]
  41cc30:	mov	x0, x20
  41cc34:	sub	x21, x20, x8
  41cc38:	bl	406750 <strlen@plt>
  41cc3c:	mov	x19, x0
  41cc40:	add	x20, x20, x0
  41cc44:	mov	x0, x25
  41cc48:	bl	406750 <strlen@plt>
  41cc4c:	add	x2, x0, #0x1
  41cc50:	mov	x0, x20
  41cc54:	mov	x1, x25
  41cc58:	bl	409d08 <variable_buffer_output@@Base>
  41cc5c:	ldr	x8, [x28, #4016]
  41cc60:	add	x20, x8, x21
  41cc64:	stur	x20, [x29, #-112]
  41cc68:	b	41cda8 <eval_buffer@@Base+0x1368>
  41cc6c:	mov	x0, x20
  41cc70:	bl	406c60 <free@plt>
  41cc74:	ldur	x21, [x29, #-144]
  41cc78:	mov	x24, x27
  41cc7c:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41cc80:	mov	w20, #0x5                   	// #5
  41cc84:	str	xzr, [sp, #96]
  41cc88:	stp	xzr, xzr, [sp, #120]
  41cc8c:	str	wzr, [sp, #108]
  41cc90:	mov	w25, wzr
  41cc94:	str	wzr, [sp, #144]
  41cc98:	str	wzr, [sp, #136]
  41cc9c:	mov	w28, #0x2                   	// #2
  41cca0:	add	x27, x27, #0x92c
  41cca4:	b	41bbdc <eval_buffer@@Base+0x19c>
  41cca8:	adrp	x8, 442000 <just_print_flag@@Base>
  41ccac:	str	xzr, [sp, #96]
  41ccb0:	stp	xzr, xzr, [sp, #120]
  41ccb4:	str	wzr, [sp, #108]
  41ccb8:	mov	w25, wzr
  41ccbc:	str	wzr, [sp, #144]
  41ccc0:	str	wzr, [sp, #136]
  41ccc4:	str	w19, [x8, #260]
  41ccc8:	b	41c03c <eval_buffer@@Base+0x5fc>
  41cccc:	mov	x0, x20
  41ccd0:	bl	406c60 <free@plt>
  41ccd4:	str	xzr, [sp, #96]
  41ccd8:	stp	xzr, xzr, [sp, #120]
  41ccdc:	str	wzr, [sp, #108]
  41cce0:	mov	w25, wzr
  41cce4:	str	wzr, [sp, #144]
  41cce8:	str	wzr, [sp, #136]
  41ccec:	mov	w28, #0x2                   	// #2
  41ccf0:	ldur	x21, [x29, #-144]
  41ccf4:	mov	w20, #0x5                   	// #5
  41ccf8:	b	41bbdc <eval_buffer@@Base+0x19c>
  41ccfc:	mov	w25, wzr
  41cd00:	str	xzr, [sp, #96]
  41cd04:	stp	xzr, xzr, [sp, #120]
  41cd08:	str	wzr, [sp, #108]
  41cd0c:	str	wzr, [sp, #144]
  41cd10:	str	wzr, [sp, #136]
  41cd14:	b	41ccf0 <eval_buffer@@Base+0x12b0>
  41cd18:	mov	x19, xzr
  41cd1c:	mov	x1, xzr
  41cd20:	mov	x0, x19
  41cd24:	bl	425d94 <construct_vpath_list@@Base>
  41cd28:	mov	x0, x19
  41cd2c:	bl	406c60 <free@plt>
  41cd30:	str	xzr, [sp, #96]
  41cd34:	stp	xzr, xzr, [sp, #120]
  41cd38:	str	wzr, [sp, #108]
  41cd3c:	mov	w25, wzr
  41cd40:	str	wzr, [sp, #144]
  41cd44:	str	wzr, [sp, #136]
  41cd48:	mov	w28, #0x2                   	// #2
  41cd4c:	b	41bbdc <eval_buffer@@Base+0x19c>
  41cd50:	mov	w25, wzr
  41cd54:	str	xzr, [sp, #96]
  41cd58:	stp	xzr, xzr, [sp, #120]
  41cd5c:	str	wzr, [sp, #108]
  41cd60:	str	wzr, [sp, #144]
  41cd64:	str	wzr, [sp, #136]
  41cd68:	b	41c08c <eval_buffer@@Base+0x64c>
  41cd6c:	ldur	x21, [x29, #-144]
  41cd70:	str	xzr, [sp, #96]
  41cd74:	stp	xzr, xzr, [sp, #120]
  41cd78:	str	wzr, [sp, #108]
  41cd7c:	mov	w25, wzr
  41cd80:	str	wzr, [sp, #144]
  41cd84:	str	wzr, [sp, #136]
  41cd88:	b	41bbdc <eval_buffer@@Base+0x19c>
  41cd8c:	str	xzr, [sp, #96]
  41cd90:	stp	xzr, xzr, [sp, #120]
  41cd94:	mov	w28, #0x2                   	// #2
  41cd98:	mov	w20, #0x5                   	// #5
  41cd9c:	mov	w25, #0x1                   	// #1
  41cda0:	b	41cafc <eval_buffer@@Base+0x10bc>
  41cda4:	mov	x19, xzr
  41cda8:	sub	x1, x29, #0x78
  41cdac:	mov	x0, x20
  41cdb0:	bl	41e808 <parse_file_seq@@Base+0x918>
  41cdb4:	ldurb	w21, [x29, #-120]
  41cdb8:	stur	x0, [x29, #-112]
  41cdbc:	tbnz	w21, #0, 41ce70 <eval_buffer@@Base+0x1430>
  41cdc0:	ldur	x20, [x29, #-128]
  41cdc4:	mov	x25, xzr
  41cdc8:	add	x21, x20, #0x1
  41cdcc:	mov	x27, x20
  41cdd0:	b	41ce00 <eval_buffer@@Base+0x13c0>
  41cdd4:	cmp	w24, #0x0
  41cdd8:	cinc	w9, w24, lt  // lt = tstop
  41cddc:	sub	x8, x21, x28
  41cde0:	sbfx	x9, x9, #1, #31
  41cde4:	add	x27, x28, x9
  41cde8:	sub	x8, x8, x9
  41cdec:	add	x0, x28, w24, sxtw
  41cdf0:	add	x2, x8, x25
  41cdf4:	mov	x1, x27
  41cdf8:	bl	406720 <memmove@plt>
  41cdfc:	tbz	w24, #0, 41d0d8 <eval_buffer@@Base+0x1698>
  41ce00:	mov	w1, #0x3d                  	// #61
  41ce04:	mov	x0, x27
  41ce08:	bl	406c80 <strchr@plt>
  41ce0c:	cmp	x0, x20
  41ce10:	b.ls	41d0d8 <eval_buffer@@Base+0x1698>  // b.plast
  41ce14:	ldurb	w8, [x0, #-1]
  41ce18:	mov	x28, x0
  41ce1c:	cmp	w8, #0x5c
  41ce20:	b.ne	41d0d8 <eval_buffer@@Base+0x1698>  // b.any
  41ce24:	sub	x8, x28, #0x2
  41ce28:	cmp	x8, x20
  41ce2c:	b.cs	41ce38 <eval_buffer@@Base+0x13f8>  // b.hs, b.nlast
  41ce30:	mov	w8, #0xfffffffe            	// #-2
  41ce34:	b	41ce58 <eval_buffer@@Base+0x1418>
  41ce38:	mov	x8, #0xfffffffffffffffe    	// #-2
  41ce3c:	ldrb	w9, [x28, x8]
  41ce40:	cmp	w9, #0x5c
  41ce44:	b.ne	41ce58 <eval_buffer@@Base+0x1418>  // b.any
  41ce48:	sub	x8, x8, #0x1
  41ce4c:	add	x9, x28, x8
  41ce50:	cmp	x9, x20
  41ce54:	b.cs	41ce3c <eval_buffer@@Base+0x13fc>  // b.hs, b.nlast
  41ce58:	add	w24, w8, #0x1
  41ce5c:	cbnz	x25, 41cdd4 <eval_buffer@@Base+0x1394>
  41ce60:	mov	x0, x20
  41ce64:	bl	406750 <strlen@plt>
  41ce68:	mov	x25, x0
  41ce6c:	b	41cdd4 <eval_buffer@@Base+0x1394>
  41ce70:	ldr	x26, [sp, #144]
  41ce74:	mov	x20, x0
  41ce78:	cbz	x26, 41cecc <eval_buffer@@Base+0x148c>
  41ce7c:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  41ce80:	ldr	x8, [x25, #4016]
  41ce84:	mov	w9, #0x3b                  	// #59
  41ce88:	strb	w9, [x26, #-1]!
  41ce8c:	mov	x0, x26
  41ce90:	sub	x20, x20, x8
  41ce94:	bl	419a50 <collapse_continuations@@Base>
  41ce98:	ldur	x19, [x29, #-112]
  41ce9c:	mov	x0, x19
  41cea0:	bl	406750 <strlen@plt>
  41cea4:	add	x19, x19, x0
  41cea8:	mov	x0, x26
  41ceac:	bl	406750 <strlen@plt>
  41ceb0:	add	x2, x0, #0x1
  41ceb4:	mov	x0, x19
  41ceb8:	mov	x1, x26
  41cebc:	bl	409d08 <variable_buffer_output@@Base>
  41cec0:	ldr	x8, [x25, #4016]
  41cec4:	add	x20, x8, x20
  41cec8:	stur	x20, [x29, #-112]
  41cecc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41ced0:	ldr	x8, [x8, #2424]
  41ced4:	tst	w21, #0x10
  41ced8:	mov	w9, #0x5                   	// #5
  41cedc:	mov	w10, #0x2                   	// #2
  41cee0:	csel	w9, w10, w9, eq  // eq = none
  41cee4:	str	x8, [sp, #120]
  41cee8:	lsl	w8, w21, #2
  41ceec:	mov	w26, w9
  41cef0:	lsl	w9, w9, #26
  41cef4:	ldr	x25, [sp, #128]
  41cef8:	tst	w21, #0x8
  41cefc:	orr	w8, w8, #0x8
  41cf00:	str	w9, [sp, #136]
  41cf04:	mov	w9, #0x60000000            	// #1610612736
  41cf08:	csel	w9, w9, wzr, eq  // eq = none
  41cf0c:	and	w8, w8, #0x88888888
  41cf10:	orr	w8, w9, w8
  41cf14:	str	w8, [sp, #144]
  41cf18:	b	41cf28 <eval_buffer@@Base+0x14e8>
  41cf1c:	mov	w28, #0x2                   	// #2
  41cf20:	mov	x27, x21
  41cf24:	cbz	x25, 41d1dc <eval_buffer@@Base+0x179c>
  41cf28:	ldr	x8, [x25, #8]
  41cf2c:	mov	x0, x25
  41cf30:	stur	x8, [x29, #-56]
  41cf34:	ldr	x28, [x25]
  41cf38:	bl	406c60 <free@plt>
  41cf3c:	sub	x0, x29, #0x38
  41cf40:	bl	41d8b0 <find_percent_cached@@Base>
  41cf44:	ldur	x19, [x29, #-56]
  41cf48:	cbz	x0, 41cfb8 <eval_buffer@@Base+0x1578>
  41cf4c:	mov	x1, x0
  41cf50:	mov	x0, x19
  41cf54:	mov	x21, x27
  41cf58:	bl	423c24 <create_pattern_var@@Base>
  41cf5c:	ldr	x8, [sp, #160]
  41cf60:	mov	x1, x20
  41cf64:	ldr	q0, [x8]
  41cf68:	ldr	x9, [x8, #16]
  41cf6c:	add	x8, x0, #0x20
  41cf70:	str	q0, [x0, #48]
  41cf74:	str	x9, [x0, #64]
  41cf78:	mov	x0, x8
  41cf7c:	bl	425688 <assign_variable_definition@@Base>
  41cf80:	ldr	w8, [x0, #44]
  41cf84:	ldr	w10, [sp, #136]
  41cf88:	mov	x19, x0
  41cf8c:	ldr	x0, [x0, #8]
  41cf90:	and	w9, w8, #0xe3ffffff
  41cf94:	and	w8, w8, #0x3800000
  41cf98:	orr	w9, w9, w10
  41cf9c:	cmp	w8, #0x800, lsl #12
  41cfa0:	str	w9, [x19, #44]
  41cfa4:	b.ne	41cfd4 <eval_buffer@@Base+0x1594>  // b.any
  41cfa8:	mov	x1, xzr
  41cfac:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41cfb0:	str	x0, [x19, #8]
  41cfb4:	b	41d030 <eval_buffer@@Base+0x15f0>
  41cfb8:	mov	x0, x19
  41cfbc:	bl	40aae4 <lookup_file@@Base>
  41cfc0:	cbz	x0, 41cfe0 <eval_buffer@@Base+0x15a0>
  41cfc4:	ldr	x8, [x0, #104]
  41cfc8:	cmp	x8, #0x0
  41cfcc:	csel	x19, x0, x8, eq  // eq = none
  41cfd0:	b	41cff0 <eval_buffer@@Base+0x15b0>
  41cfd4:	bl	419e60 <xstrdup@@Base>
  41cfd8:	str	x0, [x19, #8]
  41cfdc:	b	41d030 <eval_buffer@@Base+0x15f0>
  41cfe0:	mov	x0, x19
  41cfe4:	bl	423690 <strcache_add@@Base>
  41cfe8:	bl	40ab6c <enter_file@@Base>
  41cfec:	mov	x19, x0
  41cff0:	mov	w1, #0x1                   	// #1
  41cff4:	mov	x0, x19
  41cff8:	mov	x21, x27
  41cffc:	bl	424334 <initialize_file_variables@@Base>
  41d000:	ldr	x8, [x19, #80]
  41d004:	ldr	x0, [sp, #160]
  41d008:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  41d00c:	mov	w3, #0x1                   	// #1
  41d010:	mov	x1, x20
  41d014:	mov	w2, w26
  41d018:	str	x8, [x27, #2424]
  41d01c:	bl	425738 <try_variable_definition@@Base>
  41d020:	cbz	x0, 41d710 <eval_buffer@@Base+0x1cd0>
  41d024:	ldr	x8, [sp, #120]
  41d028:	mov	x19, x0
  41d02c:	str	x8, [x27, #2424]
  41d030:	ldr	w8, [x19, #44]
  41d034:	ldr	w10, [sp, #144]
  41d038:	mov	w9, #0xff77                	// #65399
  41d03c:	movk	w9, #0x9fff, lsl #16
  41d040:	and	w9, w8, w9
  41d044:	and	w8, w8, #0x1c000000
  41d048:	orr	w9, w10, w9
  41d04c:	mov	w10, #0x14000000            	// #335544320
  41d050:	mov	x25, x28
  41d054:	cmp	w8, w10
  41d058:	str	w9, [x19, #44]
  41d05c:	b.eq	41cf1c <eval_buffer@@Base+0x14dc>  // b.none
  41d060:	ldr	x27, [x19]
  41d064:	mov	x0, x27
  41d068:	bl	406750 <strlen@plt>
  41d06c:	mov	x1, x0
  41d070:	mov	x0, x27
  41d074:	bl	424110 <lookup_variable@@Base>
  41d078:	cbz	x0, 41cf1c <eval_buffer@@Base+0x14dc>
  41d07c:	mov	x27, x0
  41d080:	cmp	x19, x0
  41d084:	b.eq	41cf1c <eval_buffer@@Base+0x14dc>  // b.none
  41d088:	ldr	w8, [x27, #44]
  41d08c:	ubfx	w8, w8, #26, #3
  41d090:	sub	w8, w8, #0x3
  41d094:	cmp	w8, #0x1
  41d098:	b.hi	41cf1c <eval_buffer@@Base+0x14dc>  // b.pmore
  41d09c:	ldr	x0, [x19, #8]
  41d0a0:	bl	406c60 <free@plt>
  41d0a4:	ldr	x0, [x27, #8]
  41d0a8:	bl	419e60 <xstrdup@@Base>
  41d0ac:	str	x0, [x19, #8]
  41d0b0:	ldr	w8, [x27, #44]
  41d0b4:	ldr	w9, [x19, #44]
  41d0b8:	lsr	w8, w8, #26
  41d0bc:	bfi	w9, w8, #26, #3
  41d0c0:	str	w9, [x19, #44]
  41d0c4:	ldr	w8, [x27, #44]
  41d0c8:	and	w9, w9, #0xfffffffc
  41d0cc:	bfxil	w9, w8, #0, #1
  41d0d0:	str	w9, [x19, #44]
  41d0d4:	b	41cf1c <eval_buffer@@Base+0x14dc>
  41d0d8:	ldur	x1, [x29, #-128]
  41d0dc:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  41d0e0:	ldrb	w9, [x9, #2376]
  41d0e4:	ldrb	w8, [x1]
  41d0e8:	str	w9, [sp, #80]
  41d0ec:	cbz	w8, 41d1f0 <eval_buffer@@Base+0x17b0>
  41d0f0:	ldur	x8, [x29, #-112]
  41d0f4:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  41d0f8:	ldr	x9, [x21, #4016]
  41d0fc:	mov	x2, #0xffffffffffffffff    	// #-1
  41d100:	add	x0, x8, x19
  41d104:	sub	x20, x8, x9
  41d108:	bl	40a038 <variable_expand_string@@Base>
  41d10c:	ldr	x8, [x21, #4016]
  41d110:	ldur	x21, [x29, #-144]
  41d114:	ldr	x28, [sp, #128]
  41d118:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d11c:	add	x19, x8, x20
  41d120:	add	x27, x27, #0x92c
  41d124:	stur	x19, [x29, #-112]
  41d128:	cbnz	x26, 41d20c <eval_buffer@@Base+0x17cc>
  41d12c:	mov	x20, xzr
  41d130:	add	x21, x19, #0x1
  41d134:	mov	x26, x19
  41d138:	b	41d168 <eval_buffer@@Base+0x1728>
  41d13c:	cmp	w24, #0x0
  41d140:	cinc	w9, w24, lt  // lt = tstop
  41d144:	sub	x8, x21, x26
  41d148:	sbfx	x9, x9, #1, #31
  41d14c:	add	x0, x26, w24, sxtw
  41d150:	add	x26, x26, x9
  41d154:	sub	x8, x8, x9
  41d158:	add	x2, x8, x20
  41d15c:	mov	x1, x26
  41d160:	bl	406720 <memmove@plt>
  41d164:	tbz	w24, #0, 41d204 <eval_buffer@@Base+0x17c4>
  41d168:	mov	w1, #0x3b                  	// #59
  41d16c:	mov	x0, x26
  41d170:	bl	406c80 <strchr@plt>
  41d174:	mov	x26, x0
  41d178:	cbz	x0, 41d208 <eval_buffer@@Base+0x17c8>
  41d17c:	cmp	x26, x19
  41d180:	b.ls	41d204 <eval_buffer@@Base+0x17c4>  // b.plast
  41d184:	ldurb	w8, [x26, #-1]
  41d188:	cmp	w8, #0x5c
  41d18c:	b.ne	41d204 <eval_buffer@@Base+0x17c4>  // b.any
  41d190:	sub	x8, x26, #0x2
  41d194:	cmp	x8, x19
  41d198:	b.cs	41d1a4 <eval_buffer@@Base+0x1764>  // b.hs, b.nlast
  41d19c:	mov	w8, #0xfffffffe            	// #-2
  41d1a0:	b	41d1c4 <eval_buffer@@Base+0x1784>
  41d1a4:	mov	x8, #0xfffffffffffffffe    	// #-2
  41d1a8:	ldrb	w9, [x26, x8]
  41d1ac:	cmp	w9, #0x5c
  41d1b0:	b.ne	41d1c4 <eval_buffer@@Base+0x1784>  // b.any
  41d1b4:	sub	x8, x8, #0x1
  41d1b8:	add	x9, x26, x8
  41d1bc:	cmp	x9, x19
  41d1c0:	b.cs	41d1a8 <eval_buffer@@Base+0x1768>  // b.hs, b.nlast
  41d1c4:	add	w24, w8, #0x1
  41d1c8:	cbnz	x20, 41d13c <eval_buffer@@Base+0x16fc>
  41d1cc:	mov	x0, x19
  41d1d0:	bl	406750 <strlen@plt>
  41d1d4:	mov	x20, x0
  41d1d8:	b	41d13c <eval_buffer@@Base+0x16fc>
  41d1dc:	ldur	x21, [x29, #-144]
  41d1e0:	str	xzr, [sp, #96]
  41d1e4:	stp	xzr, xzr, [sp, #120]
  41d1e8:	mov	w20, #0x5                   	// #5
  41d1ec:	b	41cafc <eval_buffer@@Base+0x10bc>
  41d1f0:	ldur	x21, [x29, #-144]
  41d1f4:	ldr	x28, [sp, #128]
  41d1f8:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d1fc:	add	x27, x27, #0x92c
  41d200:	b	41d20c <eval_buffer@@Base+0x17cc>
  41d204:	strb	wzr, [x26], #1
  41d208:	ldur	x21, [x29, #-144]
  41d20c:	ldur	x19, [x29, #-112]
  41d210:	mov	w1, #0x3a                  	// #58
  41d214:	mov	x0, x19
  41d218:	bl	406c80 <strchr@plt>
  41d21c:	ldr	x24, [sp, #152]
  41d220:	mov	w20, #0x5                   	// #5
  41d224:	cbz	x0, 41d264 <eval_buffer@@Base+0x1824>
  41d228:	ldurb	w8, [x0, #-1]
  41d22c:	cmp	w8, #0x5c
  41d230:	b.ne	41d26c <eval_buffer@@Base+0x182c>  // b.any
  41d234:	mov	w9, wzr
  41d238:	sub	x8, x0, #0x2
  41d23c:	ldrb	w11, [x8], #-1
  41d240:	mov	w10, w9
  41d244:	eor	w9, w9, #0x1
  41d248:	cmp	w11, #0x5c
  41d24c:	b.eq	41d23c <eval_buffer@@Base+0x17fc>  // b.none
  41d250:	tbnz	w10, #0, 41d26c <eval_buffer@@Base+0x182c>
  41d254:	add	x0, x0, #0x1
  41d258:	mov	w1, #0x3a                  	// #58
  41d25c:	bl	406c80 <strchr@plt>
  41d260:	cbnz	x0, 41d228 <eval_buffer@@Base+0x17e8>
  41d264:	str	xzr, [sp, #96]
  41d268:	b	41d2c4 <eval_buffer@@Base+0x1884>
  41d26c:	sub	x0, x29, #0x70
  41d270:	mov	w1, #0x10                  	// #16
  41d274:	mov	w2, #0x40                  	// #64
  41d278:	mov	w4, #0x4                   	// #4
  41d27c:	mov	x3, xzr
  41d280:	bl	41def0 <parse_file_seq@@Base>
  41d284:	ldur	x8, [x29, #-112]
  41d288:	add	x8, x8, #0x1
  41d28c:	stur	x8, [x29, #-112]
  41d290:	cbz	x0, 41d71c <eval_buffer@@Base+0x1cdc>
  41d294:	ldr	x8, [x0]
  41d298:	mov	x19, x0
  41d29c:	cbnz	x8, 41d728 <eval_buffer@@Base+0x1ce8>
  41d2a0:	add	x0, x19, #0x8
  41d2a4:	bl	41d8b0 <find_percent_cached@@Base>
  41d2a8:	str	x0, [sp, #64]
  41d2ac:	cbz	x0, 41d734 <eval_buffer@@Base+0x1cf4>
  41d2b0:	ldr	x8, [x19, #8]
  41d2b4:	mov	x0, x19
  41d2b8:	str	x8, [sp, #96]
  41d2bc:	bl	406c60 <free@plt>
  41d2c0:	ldur	x19, [x29, #-112]
  41d2c4:	mov	x0, x19
  41d2c8:	stur	x19, [x29, #-136]
  41d2cc:	bl	406750 <strlen@plt>
  41d2d0:	add	x8, x19, x0
  41d2d4:	sub	x8, x8, #0x1
  41d2d8:	sub	x0, x29, #0x88
  41d2dc:	sub	x1, x29, #0x38
  41d2e0:	stur	x8, [x29, #-56]
  41d2e4:	bl	40d490 <strip_whitespace@@Base>
  41d2e8:	ldur	x0, [x29, #-136]
  41d2ec:	ldur	x8, [x29, #-56]
  41d2f0:	cmp	x0, x8
  41d2f4:	b.hi	41d314 <eval_buffer@@Base+0x18d4>  // b.pmore
  41d2f8:	ldrb	w9, [x0]
  41d2fc:	cbz	w9, 41d314 <eval_buffer@@Base+0x18d4>
  41d300:	sub	x8, x8, x0
  41d304:	add	x1, x8, #0x1
  41d308:	bl	419e7c <xstrndup@@Base>
  41d30c:	str	x0, [sp, #72]
  41d310:	b	41d318 <eval_buffer@@Base+0x18d8>
  41d314:	str	xzr, [sp, #72]
  41d318:	cbz	x26, 41d358 <eval_buffer@@Base+0x1918>
  41d31c:	mov	x0, x26
  41d320:	bl	406750 <strlen@plt>
  41d324:	ldr	w8, [x23, #48]
  41d328:	ldr	x9, [sp, #56]
  41d32c:	mov	x19, x0
  41d330:	str	w8, [sp, #92]
  41d334:	add	x8, x0, #0x2
  41d338:	cmp	x8, x9
  41d33c:	b.ls	41d360 <eval_buffer@@Base+0x1920>  // b.plast
  41d340:	ldr	x0, [sp, #112]
  41d344:	lsl	x1, x8, #1
  41d348:	str	x1, [sp, #56]
  41d34c:	bl	419de0 <xrealloc@@Base>
  41d350:	mov	x20, x0
  41d354:	b	41d364 <eval_buffer@@Base+0x1924>
  41d358:	str	xzr, [sp, #120]
  41d35c:	b	41d388 <eval_buffer@@Base+0x1948>
  41d360:	ldr	x20, [sp, #112]
  41d364:	mov	x0, x20
  41d368:	mov	x1, x26
  41d36c:	mov	x2, x19
  41d370:	bl	406710 <memcpy@plt>
  41d374:	add	x8, x19, #0x1
  41d378:	stp	x20, x8, [sp, #112]
  41d37c:	mov	w8, #0xa                   	// #10
  41d380:	strb	w8, [x20, x19]
  41d384:	mov	w20, #0x5                   	// #5
  41d388:	ldr	w8, [sp, #48]
  41d38c:	cbz	w8, 41d3a4 <eval_buffer@@Base+0x1964>
  41d390:	adrp	x8, 442000 <just_print_flag@@Base>
  41d394:	ldr	x8, [x8, #24]
  41d398:	ldr	x8, [x8, #8]
  41d39c:	ldrb	w8, [x8]
  41d3a0:	cbz	w8, 41d3b0 <eval_buffer@@Base+0x1970>
  41d3a4:	mov	w28, wzr
  41d3a8:	mov	w25, wzr
  41d3ac:	b	41cafc <eval_buffer@@Base+0x10bc>
  41d3b0:	adrp	x8, 442000 <just_print_flag@@Base>
  41d3b4:	ldr	x8, [x8, #216]
  41d3b8:	str	x8, [sp, #32]
  41d3bc:	b	41d3e0 <eval_buffer@@Base+0x19a0>
  41d3c0:	ldr	x28, [sp, #136]
  41d3c4:	ldur	x21, [x29, #-144]
  41d3c8:	ldr	x24, [sp, #152]
  41d3cc:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d3d0:	ldr	x28, [x28]
  41d3d4:	add	x27, x27, #0x92c
  41d3d8:	mov	w20, #0x5                   	// #5
  41d3dc:	cbz	x28, 41d3a8 <eval_buffer@@Base+0x1968>
  41d3e0:	ldr	x25, [x28, #8]
  41d3e4:	mov	w1, #0x25                  	// #37
  41d3e8:	str	x28, [sp, #136]
  41d3ec:	mov	x0, x25
  41d3f0:	bl	406c80 <strchr@plt>
  41d3f4:	cbnz	x0, 41d3a4 <eval_buffer@@Base+0x1964>
  41d3f8:	ldrb	w8, [x25]
  41d3fc:	cmp	w8, #0x2e
  41d400:	str	w8, [sp, #144]
  41d404:	b.ne	41d418 <eval_buffer@@Base+0x19d8>  // b.any
  41d408:	mov	w1, #0x2f                  	// #47
  41d40c:	mov	x0, x25
  41d410:	bl	406c80 <strchr@plt>
  41d414:	cbz	x0, 41d3c0 <eval_buffer@@Base+0x1980>
  41d418:	ldr	x8, [sp, #32]
  41d41c:	ldr	x8, [x8, #24]
  41d420:	cbz	x8, 41d5b4 <eval_buffer@@Base+0x1b74>
  41d424:	mov	x26, x8
  41d428:	add	x8, x25, #0x1
  41d42c:	mov	x20, x26
  41d430:	str	x8, [sp, #40]
  41d434:	b	41d440 <eval_buffer@@Base+0x1a00>
  41d438:	ldr	x20, [x20]
  41d43c:	cbz	x20, 41d5b4 <eval_buffer@@Base+0x1b74>
  41d440:	ldr	x21, [x20, #8]
  41d444:	mov	x8, x21
  41d448:	cbnz	x21, 41d454 <eval_buffer@@Base+0x1a14>
  41d44c:	ldr	x8, [x20, #16]
  41d450:	ldr	x8, [x8]
  41d454:	ldrb	w8, [x8]
  41d458:	cmp	w8, #0x2e
  41d45c:	b.eq	41d4c0 <eval_buffer@@Base+0x1a80>  // b.none
  41d460:	mov	x8, x21
  41d464:	cbnz	x21, 41d470 <eval_buffer@@Base+0x1a30>
  41d468:	ldr	x8, [x20, #16]
  41d46c:	ldr	x8, [x8]
  41d470:	cmp	x25, x8
  41d474:	b.eq	41d3c0 <eval_buffer@@Base+0x1980>  // b.none
  41d478:	mov	x8, x21
  41d47c:	cbnz	x21, 41d488 <eval_buffer@@Base+0x1a48>
  41d480:	ldr	x8, [x20, #16]
  41d484:	ldr	x8, [x8]
  41d488:	ldrb	w8, [x8]
  41d48c:	ldr	w9, [sp, #144]
  41d490:	cmp	w9, w8
  41d494:	b.ne	41d4c0 <eval_buffer@@Base+0x1a80>  // b.any
  41d498:	ldr	w8, [sp, #144]
  41d49c:	cbz	w8, 41d3c0 <eval_buffer@@Base+0x1980>
  41d4a0:	mov	x8, x21
  41d4a4:	cbnz	x21, 41d4b0 <eval_buffer@@Base+0x1a70>
  41d4a8:	ldr	x8, [x20, #16]
  41d4ac:	ldr	x8, [x8]
  41d4b0:	ldr	x0, [sp, #40]
  41d4b4:	add	x1, x8, #0x1
  41d4b8:	bl	406c10 <strcmp@plt>
  41d4bc:	cbz	w0, 41d3c0 <eval_buffer@@Base+0x1980>
  41d4c0:	mov	x24, x26
  41d4c4:	cbz	x21, 41d548 <eval_buffer@@Base+0x1b08>
  41d4c8:	add	x19, x21, #0x1
  41d4cc:	mov	x24, x26
  41d4d0:	b	41d4dc <eval_buffer@@Base+0x1a9c>
  41d4d4:	ldr	x24, [x24]
  41d4d8:	cbz	x24, 41d438 <eval_buffer@@Base+0x19f8>
  41d4dc:	ldr	x27, [x24, #8]
  41d4e0:	cbnz	x27, 41d4ec <eval_buffer@@Base+0x1aac>
  41d4e4:	ldr	x8, [x24, #16]
  41d4e8:	ldr	x27, [x8]
  41d4ec:	mov	x0, x27
  41d4f0:	bl	406750 <strlen@plt>
  41d4f4:	mov	x28, x0
  41d4f8:	mov	x0, x25
  41d4fc:	mov	x1, x27
  41d500:	mov	x2, x28
  41d504:	bl	4069f0 <strncmp@plt>
  41d508:	cbnz	w0, 41d4d4 <eval_buffer@@Base+0x1a94>
  41d50c:	add	x8, x25, x28
  41d510:	cmp	x8, x21
  41d514:	b.eq	41d3c0 <eval_buffer@@Base+0x1980>  // b.none
  41d518:	ldrb	w9, [x8]
  41d51c:	ldrb	w10, [x21]
  41d520:	cmp	w9, w10
  41d524:	b.ne	41d4d4 <eval_buffer@@Base+0x1a94>  // b.any
  41d528:	cbz	w9, 41d3c0 <eval_buffer@@Base+0x1980>
  41d52c:	add	x0, x8, #0x1
  41d530:	mov	x1, x19
  41d534:	bl	406c10 <strcmp@plt>
  41d538:	cbnz	w0, 41d4d4 <eval_buffer@@Base+0x1a94>
  41d53c:	b	41d3c0 <eval_buffer@@Base+0x1980>
  41d540:	ldr	x24, [x24]
  41d544:	cbz	x24, 41d438 <eval_buffer@@Base+0x19f8>
  41d548:	ldr	x19, [x24, #8]
  41d54c:	cbnz	x19, 41d558 <eval_buffer@@Base+0x1b18>
  41d550:	ldr	x8, [x24, #16]
  41d554:	ldr	x19, [x8]
  41d558:	mov	x0, x19
  41d55c:	bl	406750 <strlen@plt>
  41d560:	mov	x27, x0
  41d564:	mov	x0, x25
  41d568:	mov	x1, x19
  41d56c:	mov	x2, x27
  41d570:	bl	4069f0 <strncmp@plt>
  41d574:	cbnz	w0, 41d540 <eval_buffer@@Base+0x1b00>
  41d578:	ldr	x8, [x20, #16]
  41d57c:	add	x9, x25, x27
  41d580:	ldr	x8, [x8]
  41d584:	cmp	x9, x8
  41d588:	b.eq	41d3c0 <eval_buffer@@Base+0x1980>  // b.none
  41d58c:	ldrb	w10, [x9]
  41d590:	ldrb	w11, [x8]
  41d594:	cmp	w10, w11
  41d598:	b.ne	41d540 <eval_buffer@@Base+0x1b00>  // b.any
  41d59c:	cbz	w10, 41d3c0 <eval_buffer@@Base+0x1980>
  41d5a0:	add	x0, x9, #0x1
  41d5a4:	add	x1, x8, #0x1
  41d5a8:	bl	406c10 <strcmp@plt>
  41d5ac:	cbnz	w0, 41d540 <eval_buffer@@Base+0x1b00>
  41d5b0:	b	41d3c0 <eval_buffer@@Base+0x1980>
  41d5b4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41d5b8:	mov	w1, #0xd                   	// #13
  41d5bc:	mov	w3, #0x2                   	// #2
  41d5c0:	add	x0, x0, #0x399
  41d5c4:	mov	x2, x25
  41d5c8:	mov	w4, wzr
  41d5cc:	mov	x5, xzr
  41d5d0:	mov	x6, xzr
  41d5d4:	bl	423d70 <define_variable_in_set@@Base>
  41d5d8:	ldur	x21, [x29, #-144]
  41d5dc:	ldr	x24, [sp, #152]
  41d5e0:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d5e4:	mov	w28, wzr
  41d5e8:	mov	w25, wzr
  41d5ec:	add	x27, x27, #0x92c
  41d5f0:	mov	w20, #0x5                   	// #5
  41d5f4:	b	41cafc <eval_buffer@@Base+0x10bc>
  41d5f8:	mov	x25, xzr
  41d5fc:	b	41cab4 <eval_buffer@@Base+0x1074>
  41d600:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41d604:	ldr	x8, [x8, #2392]
  41d608:	ldr	w8, [x8]
  41d60c:	cbnz	w8, 41d788 <eval_buffer@@Base+0x1d48>
  41d610:	ldr	x19, [sp, #112]
  41d614:	ldr	x0, [sp, #128]
  41d618:	cbz	x0, 41d658 <eval_buffer@@Base+0x1c18>
  41d61c:	ldp	w8, w5, [sp, #88]
  41d620:	ldr	w9, [sp, #80]
  41d624:	ldr	w1, [sp, #108]
  41d628:	ldr	x2, [sp, #96]
  41d62c:	mov	w8, w8
  41d630:	stp	x8, xzr, [x29, #-96]
  41d634:	sub	x8, x29, #0x68
  41d638:	str	x8, [sp, #16]
  41d63c:	ldr	w8, [sp, #84]
  41d640:	ldp	x3, x4, [sp, #64]
  41d644:	ldr	x7, [sp, #120]
  41d648:	mov	x6, x19
  41d64c:	strb	w9, [sp, #8]
  41d650:	str	w8, [sp]
  41d654:	bl	41e9ac <parse_file_seq@@Base+0xabc>
  41d658:	mov	x0, x21
  41d65c:	bl	406c60 <free@plt>
  41d660:	mov	x0, x19
  41d664:	bl	406c60 <free@plt>
  41d668:	ldp	x20, x19, [sp, #400]
  41d66c:	ldp	x22, x21, [sp, #384]
  41d670:	ldp	x24, x23, [sp, #368]
  41d674:	ldp	x26, x25, [sp, #352]
  41d678:	ldp	x28, x27, [sp, #336]
  41d67c:	ldp	x29, x30, [sp, #320]
  41d680:	add	sp, sp, #0x1a0
  41d684:	ret
  41d688:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d68c:	add	x1, x1, #0xd4c
  41d690:	mov	w2, #0x5                   	// #5
  41d694:	mov	x0, xzr
  41d698:	bl	406dc0 <dcgettext@plt>
  41d69c:	mov	x2, x0
  41d6a0:	sub	x0, x29, #0x50
  41d6a4:	mov	x1, xzr
  41d6a8:	bl	41aff0 <fatal@@Base>
  41d6ac:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d6b0:	add	x1, x1, #0x959
  41d6b4:	b	41d790 <eval_buffer@@Base+0x1d50>
  41d6b8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d6bc:	add	x1, x1, #0xd0f
  41d6c0:	b	41d790 <eval_buffer@@Base+0x1d50>
  41d6c4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d6c8:	add	x1, x1, #0xd0f
  41d6cc:	b	41d690 <eval_buffer@@Base+0x1c50>
  41d6d0:	ldur	x0, [x29, #-56]
  41d6d4:	bl	406750 <strlen@plt>
  41d6d8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d6dc:	mov	x19, x0
  41d6e0:	add	x1, x1, #0x992
  41d6e4:	mov	w2, #0x5                   	// #5
  41d6e8:	mov	x0, xzr
  41d6ec:	bl	406dc0 <dcgettext@plt>
  41d6f0:	ldur	x3, [x29, #-56]
  41d6f4:	mov	x2, x0
  41d6f8:	ldr	x0, [sp, #160]
  41d6fc:	mov	x1, x19
  41d700:	bl	41aff0 <fatal@@Base>
  41d704:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d708:	add	x1, x1, #0x9ca
  41d70c:	b	41d790 <eval_buffer@@Base+0x1d50>
  41d710:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d714:	add	x1, x1, #0xe13
  41d718:	b	41d73c <eval_buffer@@Base+0x1cfc>
  41d71c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d720:	add	x1, x1, #0xa3a
  41d724:	b	41d73c <eval_buffer@@Base+0x1cfc>
  41d728:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d72c:	add	x1, x1, #0xa51
  41d730:	b	41d790 <eval_buffer@@Base+0x1d50>
  41d734:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d738:	add	x1, x1, #0xa6a
  41d73c:	mov	w2, #0x5                   	// #5
  41d740:	b	41d798 <eval_buffer@@Base+0x1d58>
  41d744:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d748:	add	x1, x1, #0x9a5
  41d74c:	b	41d790 <eval_buffer@@Base+0x1d50>
  41d750:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41d754:	ldrb	w8, [x8, #2376]
  41d758:	ldr	x26, [sp, #160]
  41d75c:	cmp	w8, #0x9
  41d760:	b.ne	41d7ac <eval_buffer@@Base+0x1d6c>  // b.any
  41d764:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d768:	add	x1, x1, #0x9e5
  41d76c:	mov	w2, #0x8                   	// #8
  41d770:	mov	x0, x28
  41d774:	bl	4069f0 <strncmp@plt>
  41d778:	cbnz	w0, 41d7ac <eval_buffer@@Base+0x1d6c>
  41d77c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d780:	add	x1, x1, #0x9ee
  41d784:	b	41d7b4 <eval_buffer@@Base+0x1d74>
  41d788:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d78c:	add	x1, x1, #0xa8a
  41d790:	mov	w2, #0x5                   	// #5
  41d794:	mov	x0, xzr
  41d798:	bl	406dc0 <dcgettext@plt>
  41d79c:	mov	x2, x0
  41d7a0:	ldr	x0, [sp, #160]
  41d7a4:	mov	x1, xzr
  41d7a8:	bl	41aff0 <fatal@@Base>
  41d7ac:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41d7b0:	add	x1, x1, #0xa28
  41d7b4:	mov	w2, #0x5                   	// #5
  41d7b8:	mov	x0, xzr
  41d7bc:	bl	406dc0 <dcgettext@plt>
  41d7c0:	mov	x2, x0
  41d7c4:	mov	x0, x26
  41d7c8:	mov	x1, xzr
  41d7cc:	bl	41aff0 <fatal@@Base>

000000000041d7d0 <find_percent@@Base>:
  41d7d0:	stp	x29, x30, [sp, #-64]!
  41d7d4:	stp	x22, x21, [sp, #32]
  41d7d8:	stp	x20, x19, [sp, #48]
  41d7dc:	mov	x19, x0
  41d7e0:	mov	x20, xzr
  41d7e4:	add	x22, x0, #0x1
  41d7e8:	mov	x21, x0
  41d7ec:	str	x23, [sp, #16]
  41d7f0:	mov	x29, sp
  41d7f4:	b	41d824 <find_percent@@Base+0x54>
  41d7f8:	cmp	w23, #0x0
  41d7fc:	cinc	w9, w23, lt  // lt = tstop
  41d800:	sub	x8, x22, x21
  41d804:	sbfx	x9, x9, #1, #31
  41d808:	add	x0, x21, w23, sxtw
  41d80c:	add	x21, x21, x9
  41d810:	sub	x8, x8, x9
  41d814:	add	x2, x8, x20
  41d818:	mov	x1, x21
  41d81c:	bl	406720 <memmove@plt>
  41d820:	tbz	w23, #0, 41d898 <find_percent@@Base+0xc8>
  41d824:	mov	w1, #0x25                  	// #37
  41d828:	mov	x0, x21
  41d82c:	bl	406c80 <strchr@plt>
  41d830:	mov	x21, x0
  41d834:	cbz	x0, 41d898 <find_percent@@Base+0xc8>
  41d838:	cmp	x21, x19
  41d83c:	b.ls	41d898 <find_percent@@Base+0xc8>  // b.plast
  41d840:	ldurb	w8, [x21, #-1]
  41d844:	cmp	w8, #0x5c
  41d848:	b.ne	41d898 <find_percent@@Base+0xc8>  // b.any
  41d84c:	sub	x8, x21, #0x2
  41d850:	cmp	x8, x19
  41d854:	b.cs	41d860 <find_percent@@Base+0x90>  // b.hs, b.nlast
  41d858:	mov	w8, #0xfffffffe            	// #-2
  41d85c:	b	41d880 <find_percent@@Base+0xb0>
  41d860:	mov	x8, #0xfffffffffffffffe    	// #-2
  41d864:	ldrb	w9, [x21, x8]
  41d868:	cmp	w9, #0x5c
  41d86c:	b.ne	41d880 <find_percent@@Base+0xb0>  // b.any
  41d870:	sub	x8, x8, #0x1
  41d874:	add	x9, x21, x8
  41d878:	cmp	x9, x19
  41d87c:	b.cs	41d864 <find_percent@@Base+0x94>  // b.hs, b.nlast
  41d880:	add	w23, w8, #0x1
  41d884:	cbnz	x20, 41d7f8 <find_percent@@Base+0x28>
  41d888:	mov	x0, x19
  41d88c:	bl	406750 <strlen@plt>
  41d890:	mov	x20, x0
  41d894:	b	41d7f8 <find_percent@@Base+0x28>
  41d898:	mov	x0, x21
  41d89c:	ldp	x20, x19, [sp, #48]
  41d8a0:	ldp	x22, x21, [sp, #32]
  41d8a4:	ldr	x23, [sp, #16]
  41d8a8:	ldp	x29, x30, [sp], #64
  41d8ac:	ret

000000000041d8b0 <find_percent_cached@@Base>:
  41d8b0:	stp	x29, x30, [sp, #-80]!
  41d8b4:	stp	x26, x25, [sp, #16]
  41d8b8:	stp	x24, x23, [sp, #32]
  41d8bc:	stp	x22, x21, [sp, #48]
  41d8c0:	stp	x20, x19, [sp, #64]
  41d8c4:	ldr	x21, [x0]
  41d8c8:	mov	x29, sp
  41d8cc:	ldrb	w8, [x21]
  41d8d0:	cmp	w8, #0x25
  41d8d4:	b.ne	41d8e0 <find_percent_cached@@Base+0x30>  // b.any
  41d8d8:	mov	x20, x21
  41d8dc:	b	41d9ec <find_percent_cached@@Base+0x13c>
  41d8e0:	mov	x19, x0
  41d8e4:	mov	x24, xzr
  41d8e8:	mov	x22, xzr
  41d8ec:	mov	x23, x21
  41d8f0:	mov	x20, x21
  41d8f4:	b	41d92c <find_percent_cached@@Base+0x7c>
  41d8f8:	cmp	w25, #0x0
  41d8fc:	sub	x8, x20, x23
  41d900:	cinc	w10, w25, lt  // lt = tstop
  41d904:	add	x9, x24, x8
  41d908:	sbfx	x26, x10, #1, #31
  41d90c:	add	x0, x9, w25, sxtw
  41d910:	add	x1, x9, x26
  41d914:	sub	x9, x22, x26
  41d918:	sub	x8, x9, x8
  41d91c:	add	x2, x8, #0x1
  41d920:	bl	406720 <memmove@plt>
  41d924:	add	x20, x20, x26
  41d928:	tbz	w25, #0, 41d9d4 <find_percent_cached@@Base+0x124>
  41d92c:	mov	w1, #0x25                  	// #37
  41d930:	mov	x0, x20
  41d934:	bl	406c80 <strchr@plt>
  41d938:	mov	x20, x0
  41d93c:	cbz	x0, 41d9d0 <find_percent_cached@@Base+0x120>
  41d940:	ldurb	w8, [x20, #-1]
  41d944:	cmp	w8, #0x5c
  41d948:	b.ne	41d9d0 <find_percent_cached@@Base+0x120>  // b.any
  41d94c:	sub	x8, x20, #0x2
  41d950:	cmp	x8, x23
  41d954:	b.cs	41d960 <find_percent_cached@@Base+0xb0>  // b.hs, b.nlast
  41d958:	mov	w8, #0xfffffffe            	// #-2
  41d95c:	b	41d980 <find_percent_cached@@Base+0xd0>
  41d960:	mov	x8, #0xfffffffffffffffe    	// #-2
  41d964:	ldrb	w9, [x20, x8]
  41d968:	cmp	w9, #0x5c
  41d96c:	b.ne	41d980 <find_percent_cached@@Base+0xd0>  // b.any
  41d970:	sub	x8, x8, #0x1
  41d974:	add	x9, x20, x8
  41d978:	cmp	x9, x23
  41d97c:	b.cs	41d964 <find_percent_cached@@Base+0xb4>  // b.hs, b.nlast
  41d980:	add	w25, w8, #0x1
  41d984:	cbnz	x24, 41d8f8 <find_percent_cached@@Base+0x48>
  41d988:	mov	x0, x23
  41d98c:	bl	406750 <strlen@plt>
  41d990:	add	x9, x0, #0x10
  41d994:	mov	x8, sp
  41d998:	and	x9, x9, #0xfffffffffffffff0
  41d99c:	mov	x22, x0
  41d9a0:	sub	x21, x8, x9
  41d9a4:	add	x2, x0, #0x1
  41d9a8:	mov	sp, x21
  41d9ac:	mov	x0, x21
  41d9b0:	mov	x1, x23
  41d9b4:	bl	406710 <memcpy@plt>
  41d9b8:	sub	x8, x20, x23
  41d9bc:	add	x20, x21, x8
  41d9c0:	mov	x23, x21
  41d9c4:	mov	x24, x21
  41d9c8:	str	x21, [x19]
  41d9cc:	b	41d8f8 <find_percent_cached@@Base+0x48>
  41d9d0:	cbz	x24, 41d9ec <find_percent_cached@@Base+0x13c>
  41d9d4:	mov	x0, x21
  41d9d8:	bl	423690 <strcache_add@@Base>
  41d9dc:	str	x0, [x19]
  41d9e0:	cbz	x20, 41d9ec <find_percent_cached@@Base+0x13c>
  41d9e4:	sub	x8, x20, x24
  41d9e8:	add	x20, x0, x8
  41d9ec:	mov	x0, x20
  41d9f0:	mov	sp, x29
  41d9f4:	ldp	x20, x19, [sp, #64]
  41d9f8:	ldp	x22, x21, [sp, #48]
  41d9fc:	ldp	x24, x23, [sp, #32]
  41da00:	ldp	x26, x25, [sp, #16]
  41da04:	ldp	x29, x30, [sp], #80
  41da08:	ret

000000000041da0c <construct_include_path@@Base>:
  41da0c:	sub	sp, sp, #0xc0
  41da10:	stp	x29, x30, [sp, #128]
  41da14:	stp	x24, x23, [sp, #144]
  41da18:	stp	x22, x21, [sp, #160]
  41da1c:	stp	x20, x19, [sp, #176]
  41da20:	add	x29, sp, #0x80
  41da24:	cbz	x0, 41da50 <construct_include_path@@Base+0x44>
  41da28:	ldr	x8, [x0]
  41da2c:	mov	x20, x0
  41da30:	cbz	x8, 41da6c <construct_include_path@@Base+0x60>
  41da34:	mov	x8, xzr
  41da38:	add	x9, x20, #0x8
  41da3c:	ldr	x10, [x9, x8, lsl #3]
  41da40:	add	x8, x8, #0x1
  41da44:	cbnz	x10, 41da3c <construct_include_path@@Base+0x30>
  41da48:	add	x8, x8, #0x5
  41da4c:	b	41da70 <construct_include_path@@Base+0x64>
  41da50:	mov	w0, #0x28                  	// #40
  41da54:	bl	419e14 <xmalloc@@Base>
  41da58:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41da5c:	mov	x19, x0
  41da60:	mov	x23, xzr
  41da64:	str	xzr, [x8, #1576]
  41da68:	b	41da90 <construct_include_path@@Base+0x84>
  41da6c:	mov	w8, #0x5                   	// #5
  41da70:	lsl	x0, x8, #3
  41da74:	bl	419e14 <xmalloc@@Base>
  41da78:	adrp	x24, 441000 <stdio_traced@@Base+0x1a48>
  41da7c:	str	xzr, [x24, #1576]
  41da80:	ldr	x21, [x20]
  41da84:	mov	x19, x0
  41da88:	mov	x23, xzr
  41da8c:	cbnz	x21, 41dae8 <construct_include_path@@Base+0xdc>
  41da90:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41da94:	add	x20, x20, #0xe41
  41da98:	mov	x2, sp
  41da9c:	mov	w0, wzr
  41daa0:	mov	x1, x20
  41daa4:	bl	406e90 <__xstat@plt>
  41daa8:	cmn	w0, #0x1
  41daac:	b.ne	41db90 <construct_include_path@@Base+0x184>  // b.any
  41dab0:	bl	406e70 <__errno_location@plt>
  41dab4:	ldr	w8, [x0]
  41dab8:	cmp	w8, #0x4
  41dabc:	b.eq	41da98 <construct_include_path@@Base+0x8c>  // b.none
  41dac0:	b	41dbd8 <construct_include_path@@Base+0x1cc>
  41dac4:	mov	x0, x21
  41dac8:	bl	423914 <strcache_add_len@@Base>
  41dacc:	add	x8, x23, #0x1
  41dad0:	str	x0, [x19, x23, lsl #3]
  41dad4:	mov	x23, x8
  41dad8:	mov	x0, x22
  41dadc:	bl	406c60 <free@plt>
  41dae0:	ldr	x21, [x20]
  41dae4:	cbz	x21, 41da90 <construct_include_path@@Base+0x84>
  41dae8:	ldrb	w8, [x21]
  41daec:	cmp	w8, #0x7e
  41daf0:	b.ne	41db0c <construct_include_path@@Base+0x100>  // b.any
  41daf4:	mov	x0, x21
  41daf8:	bl	41dda4 <tilde_expand@@Base>
  41dafc:	cmp	x0, #0x0
  41db00:	mov	x22, x0
  41db04:	csel	x21, x21, x0, eq  // eq = none
  41db08:	b	41db10 <construct_include_path@@Base+0x104>
  41db0c:	mov	x22, xzr
  41db10:	add	x20, x20, #0x8
  41db14:	mov	x2, sp
  41db18:	mov	w0, wzr
  41db1c:	mov	x1, x21
  41db20:	bl	406e90 <__xstat@plt>
  41db24:	cmn	w0, #0x1
  41db28:	b.ne	41db40 <construct_include_path@@Base+0x134>  // b.any
  41db2c:	bl	406e70 <__errno_location@plt>
  41db30:	ldr	w8, [x0]
  41db34:	cmp	w8, #0x4
  41db38:	b.eq	41db14 <construct_include_path@@Base+0x108>  // b.none
  41db3c:	b	41dad8 <construct_include_path@@Base+0xcc>
  41db40:	cbnz	w0, 41dad8 <construct_include_path@@Base+0xcc>
  41db44:	ldr	w8, [sp, #16]
  41db48:	and	w8, w8, #0xf000
  41db4c:	cmp	w8, #0x4, lsl #12
  41db50:	b.ne	41dad8 <construct_include_path@@Base+0xcc>  // b.any
  41db54:	mov	x0, x21
  41db58:	bl	406750 <strlen@plt>
  41db5c:	mov	x1, x0
  41db60:	cmp	x0, #0x2
  41db64:	b.cc	41db7c <construct_include_path@@Base+0x170>  // b.lo, b.ul, b.last
  41db68:	add	x8, x21, x1
  41db6c:	ldurb	w8, [x8, #-1]
  41db70:	sub	x0, x1, #0x1
  41db74:	cmp	w8, #0x2f
  41db78:	b.eq	41db5c <construct_include_path@@Base+0x150>  // b.none
  41db7c:	ldr	x8, [x24, #1576]
  41db80:	cmp	x1, x8
  41db84:	b.ls	41dac4 <construct_include_path@@Base+0xb8>  // b.plast
  41db88:	str	x1, [x24, #1576]
  41db8c:	b	41dac4 <construct_include_path@@Base+0xb8>
  41db90:	cbnz	w0, 41dbd8 <construct_include_path@@Base+0x1cc>
  41db94:	ldr	w8, [sp, #16]
  41db98:	and	w8, w8, #0xf000
  41db9c:	cmp	w8, #0x4, lsl #12
  41dba0:	b.ne	41dbd8 <construct_include_path@@Base+0x1cc>  // b.any
  41dba4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41dba8:	ldr	x9, [x8, #1576]
  41dbac:	cmp	x9, #0xb
  41dbb0:	b.hi	41dbbc <construct_include_path@@Base+0x1b0>  // b.pmore
  41dbb4:	mov	w9, #0xc                   	// #12
  41dbb8:	str	x9, [x8, #1576]
  41dbbc:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dbc0:	add	x0, x0, #0xe41
  41dbc4:	mov	w1, #0xc                   	// #12
  41dbc8:	bl	423914 <strcache_add_len@@Base>
  41dbcc:	add	x8, x23, #0x1
  41dbd0:	str	x0, [x19, x23, lsl #3]
  41dbd4:	mov	x23, x8
  41dbd8:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dbdc:	add	x20, x20, #0xe4e
  41dbe0:	mov	x2, sp
  41dbe4:	mov	w0, wzr
  41dbe8:	mov	x1, x20
  41dbec:	bl	406e90 <__xstat@plt>
  41dbf0:	cmn	w0, #0x1
  41dbf4:	b.ne	41dc0c <construct_include_path@@Base+0x200>  // b.any
  41dbf8:	bl	406e70 <__errno_location@plt>
  41dbfc:	ldr	w8, [x0]
  41dc00:	cmp	w8, #0x4
  41dc04:	b.eq	41dbe0 <construct_include_path@@Base+0x1d4>  // b.none
  41dc08:	b	41dc54 <construct_include_path@@Base+0x248>
  41dc0c:	cbnz	w0, 41dc54 <construct_include_path@@Base+0x248>
  41dc10:	ldr	w8, [sp, #16]
  41dc14:	and	w8, w8, #0xf000
  41dc18:	cmp	w8, #0x4, lsl #12
  41dc1c:	b.ne	41dc54 <construct_include_path@@Base+0x248>  // b.any
  41dc20:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41dc24:	ldr	x9, [x8, #1576]
  41dc28:	cmp	x9, #0xf
  41dc2c:	b.hi	41dc38 <construct_include_path@@Base+0x22c>  // b.pmore
  41dc30:	mov	w9, #0x10                  	// #16
  41dc34:	str	x9, [x8, #1576]
  41dc38:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dc3c:	add	x0, x0, #0xe4e
  41dc40:	mov	w1, #0x10                  	// #16
  41dc44:	bl	423914 <strcache_add_len@@Base>
  41dc48:	add	x8, x23, #0x1
  41dc4c:	str	x0, [x19, x23, lsl #3]
  41dc50:	mov	x23, x8
  41dc54:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dc58:	add	x20, x20, #0xe5f
  41dc5c:	mov	x2, sp
  41dc60:	mov	w0, wzr
  41dc64:	mov	x1, x20
  41dc68:	bl	406e90 <__xstat@plt>
  41dc6c:	cmn	w0, #0x1
  41dc70:	b.ne	41dc88 <construct_include_path@@Base+0x27c>  // b.any
  41dc74:	bl	406e70 <__errno_location@plt>
  41dc78:	ldr	w8, [x0]
  41dc7c:	cmp	w8, #0x4
  41dc80:	b.eq	41dc5c <construct_include_path@@Base+0x250>  // b.none
  41dc84:	b	41dcd0 <construct_include_path@@Base+0x2c4>
  41dc88:	cbnz	w0, 41dcd0 <construct_include_path@@Base+0x2c4>
  41dc8c:	ldr	w8, [sp, #16]
  41dc90:	and	w8, w8, #0xf000
  41dc94:	cmp	w8, #0x4, lsl #12
  41dc98:	b.ne	41dcd0 <construct_include_path@@Base+0x2c4>  // b.any
  41dc9c:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41dca0:	ldr	x9, [x8, #1576]
  41dca4:	cmp	x9, #0x11
  41dca8:	b.hi	41dcb4 <construct_include_path@@Base+0x2a8>  // b.pmore
  41dcac:	mov	w9, #0x12                  	// #18
  41dcb0:	str	x9, [x8, #1576]
  41dcb4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dcb8:	add	x0, x0, #0xe5f
  41dcbc:	mov	w1, #0x12                  	// #18
  41dcc0:	bl	423914 <strcache_add_len@@Base>
  41dcc4:	add	x8, x23, #0x1
  41dcc8:	str	x0, [x19, x23, lsl #3]
  41dccc:	mov	x23, x8
  41dcd0:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dcd4:	add	x20, x20, #0xe41
  41dcd8:	mov	x2, sp
  41dcdc:	mov	w0, wzr
  41dce0:	mov	x1, x20
  41dce4:	bl	406e90 <__xstat@plt>
  41dce8:	cmn	w0, #0x1
  41dcec:	b.ne	41dd04 <construct_include_path@@Base+0x2f8>  // b.any
  41dcf0:	bl	406e70 <__errno_location@plt>
  41dcf4:	ldr	w8, [x0]
  41dcf8:	cmp	w8, #0x4
  41dcfc:	b.eq	41dcd8 <construct_include_path@@Base+0x2cc>  // b.none
  41dd00:	b	41dd4c <construct_include_path@@Base+0x340>
  41dd04:	cbnz	w0, 41dd4c <construct_include_path@@Base+0x340>
  41dd08:	ldr	w8, [sp, #16]
  41dd0c:	and	w8, w8, #0xf000
  41dd10:	cmp	w8, #0x4, lsl #12
  41dd14:	b.ne	41dd4c <construct_include_path@@Base+0x340>  // b.any
  41dd18:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41dd1c:	ldr	x9, [x8, #1576]
  41dd20:	cmp	x9, #0xb
  41dd24:	b.hi	41dd30 <construct_include_path@@Base+0x324>  // b.pmore
  41dd28:	mov	w9, #0xc                   	// #12
  41dd2c:	str	x9, [x8, #1576]
  41dd30:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dd34:	add	x0, x0, #0xe41
  41dd38:	mov	w1, #0xc                   	// #12
  41dd3c:	bl	423914 <strcache_add_len@@Base>
  41dd40:	add	x8, x23, #0x1
  41dd44:	str	x0, [x19, x23, lsl #3]
  41dd48:	mov	x23, x8
  41dd4c:	str	xzr, [x19, x23, lsl #3]
  41dd50:	ldr	x2, [x19]
  41dd54:	cbz	x2, 41dd84 <construct_include_path@@Base+0x378>
  41dd58:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41dd5c:	add	x21, x19, #0x8
  41dd60:	add	x20, x20, #0x890
  41dd64:	mov	w4, #0x3                   	// #3
  41dd68:	mov	x0, xzr
  41dd6c:	mov	x1, x20
  41dd70:	mov	w3, wzr
  41dd74:	mov	w5, wzr
  41dd78:	bl	4246c0 <do_variable_definition@@Base>
  41dd7c:	ldr	x2, [x21], #8
  41dd80:	cbnz	x2, 41dd64 <construct_include_path@@Base+0x358>
  41dd84:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41dd88:	str	x19, [x8, #1584]
  41dd8c:	ldp	x20, x19, [sp, #176]
  41dd90:	ldp	x22, x21, [sp, #160]
  41dd94:	ldp	x24, x23, [sp, #144]
  41dd98:	ldp	x29, x30, [sp, #128]
  41dd9c:	add	sp, sp, #0xc0
  41dda0:	ret

000000000041dda4 <tilde_expand@@Base>:
  41dda4:	stp	x29, x30, [sp, #-48]!
  41dda8:	stp	x22, x21, [sp, #16]
  41ddac:	stp	x20, x19, [sp, #32]
  41ddb0:	mov	x19, x0
  41ddb4:	ldrb	w8, [x19, #1]!
  41ddb8:	mov	x29, sp
  41ddbc:	cmp	w8, #0x2f
  41ddc0:	b.eq	41ddc8 <tilde_expand@@Base+0x24>  // b.none
  41ddc4:	cbnz	w8, 41ddfc <tilde_expand@@Base+0x58>
  41ddc8:	adrp	x21, 442000 <just_print_flag@@Base>
  41ddcc:	ldr	w22, [x21, #64]
  41ddd0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ddd4:	add	x0, x0, #0x89e
  41ddd8:	mov	x1, xzr
  41dddc:	str	wzr, [x21, #64]
  41dde0:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41dde4:	str	w22, [x21, #64]
  41dde8:	ldrb	w21, [x0]
  41ddec:	mov	x20, x0
  41ddf0:	cbz	w21, 41de4c <tilde_expand@@Base+0xa8>
  41ddf4:	cbnz	x20, 41de68 <tilde_expand@@Base+0xc4>
  41ddf8:	b	41de70 <tilde_expand@@Base+0xcc>
  41ddfc:	mov	w1, #0x2f                  	// #47
  41de00:	mov	x0, x19
  41de04:	bl	406c80 <strchr@plt>
  41de08:	mov	x20, x0
  41de0c:	cbz	x0, 41de14 <tilde_expand@@Base+0x70>
  41de10:	strb	wzr, [x20]
  41de14:	mov	x0, x19
  41de18:	bl	406a70 <getpwnam@plt>
  41de1c:	cbz	x0, 41dec8 <tilde_expand@@Base+0x124>
  41de20:	ldr	x1, [x0, #32]
  41de24:	cbz	x20, 41dedc <tilde_expand@@Base+0x138>
  41de28:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  41de2c:	add	x3, x20, #0x1
  41de30:	add	x2, x2, #0x327
  41de34:	mov	w0, #0x3                   	// #3
  41de38:	bl	419c18 <concat@@Base>
  41de3c:	ldp	x20, x19, [sp, #32]
  41de40:	ldp	x22, x21, [sp, #16]
  41de44:	ldp	x29, x30, [sp], #48
  41de48:	b	419e60 <xstrdup@@Base>
  41de4c:	mov	x0, x20
  41de50:	bl	406c60 <free@plt>
  41de54:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41de58:	add	x0, x0, #0x8a6
  41de5c:	bl	406e80 <getenv@plt>
  41de60:	mov	x20, x0
  41de64:	cbz	x20, 41de70 <tilde_expand@@Base+0xcc>
  41de68:	ldrb	w8, [x20]
  41de6c:	cbnz	w8, 41de88 <tilde_expand@@Base+0xe4>
  41de70:	bl	406ec0 <getlogin@plt>
  41de74:	cbz	x0, 41deb0 <tilde_expand@@Base+0x10c>
  41de78:	bl	406a70 <getpwnam@plt>
  41de7c:	cbz	x0, 41deb0 <tilde_expand@@Base+0x10c>
  41de80:	ldr	x20, [x0, #32]
  41de84:	cbz	x20, 41deb0 <tilde_expand@@Base+0x10c>
  41de88:	mov	w0, #0x2                   	// #2
  41de8c:	mov	x1, x20
  41de90:	mov	x2, x19
  41de94:	bl	419c18 <concat@@Base>
  41de98:	bl	419e60 <xstrdup@@Base>
  41de9c:	mov	x19, x0
  41dea0:	cbz	w21, 41deb4 <tilde_expand@@Base+0x110>
  41dea4:	mov	x0, x20
  41dea8:	bl	406c60 <free@plt>
  41deac:	b	41deb4 <tilde_expand@@Base+0x110>
  41deb0:	mov	x19, xzr
  41deb4:	mov	x0, x19
  41deb8:	ldp	x20, x19, [sp, #32]
  41debc:	ldp	x22, x21, [sp, #16]
  41dec0:	ldp	x29, x30, [sp], #48
  41dec4:	ret
  41dec8:	mov	x19, xzr
  41decc:	cbz	x20, 41deb4 <tilde_expand@@Base+0x110>
  41ded0:	mov	w8, #0x2f                  	// #47
  41ded4:	strb	w8, [x20]
  41ded8:	b	41deb4 <tilde_expand@@Base+0x110>
  41dedc:	mov	x0, x1
  41dee0:	ldp	x20, x19, [sp, #32]
  41dee4:	ldp	x22, x21, [sp, #16]
  41dee8:	ldp	x29, x30, [sp], #48
  41deec:	b	419e60 <xstrdup@@Base>

000000000041def0 <parse_file_seq@@Base>:
  41def0:	sub	sp, sp, #0x100
  41def4:	orr	w9, w2, #0x1
  41def8:	orr	w8, w2, #0x3
  41defc:	tst	w4, #0x20
  41df00:	csel	w8, w8, w9, eq  // eq = none
  41df04:	str	w8, [sp, #16]
  41df08:	cmp	x1, #0x10
  41df0c:	mov	w8, #0x10                  	// #16
  41df10:	stp	x29, x30, [sp, #160]
  41df14:	stp	x24, x23, [sp, #208]
  41df18:	stp	x22, x21, [sp, #224]
  41df1c:	stp	x20, x19, [sp, #240]
  41df20:	add	x29, sp, #0xa0
  41df24:	mov	w19, w4
  41df28:	mov	x20, x3
  41df2c:	mov	x22, x0
  41df30:	csel	x23, x1, x8, hi  // hi = pmore
  41df34:	stp	x28, x27, [sp, #176]
  41df38:	stp	x26, x25, [sp, #192]
  41df3c:	stur	xzr, [x29, #-8]
  41df40:	str	w9, [sp, #52]
  41df44:	tbnz	w4, #2, 41df50 <parse_file_seq@@Base+0x60>
  41df48:	add	x0, sp, #0x50
  41df4c:	bl	409a80 <dir_setup_glob@@Base>
  41df50:	ldr	x28, [x22]
  41df54:	mov	x0, x28
  41df58:	bl	406750 <strlen@plt>
  41df5c:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  41df60:	add	x21, x21, #0x638
  41df64:	ldp	x10, x8, [x21]
  41df68:	add	x24, x0, #0x1
  41df6c:	str	x22, [sp, #8]
  41df70:	cmp	x24, x8
  41df74:	b.ls	41df90 <parse_file_seq@@Base+0xa0>  // b.plast
  41df78:	mov	x0, x10
  41df7c:	mov	x1, x24
  41df80:	bl	419de0 <xrealloc@@Base>
  41df84:	stp	x0, x24, [x21]
  41df88:	ldr	x28, [x22]
  41df8c:	mov	x10, x0
  41df90:	ldr	w22, [sp, #16]
  41df94:	tst	w19, #0x2
  41df98:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  41df9c:	cset	w8, eq  // eq = none
  41dfa0:	sub	x21, x29, #0x8
  41dfa4:	add	x27, x27, #0xcf0
  41dfa8:	eor	w8, w8, #0x1
  41dfac:	str	w8, [sp, #48]
  41dfb0:	b	41dfc8 <parse_file_seq@@Base+0xd8>
  41dfb4:	bl	419e60 <xstrdup@@Base>
  41dfb8:	ldr	x8, [x21]
  41dfbc:	mov	x10, x26
  41dfc0:	str	x0, [x8, #8]
  41dfc4:	ldr	x21, [x21]
  41dfc8:	sub	x24, x28, #0x1
  41dfcc:	stp	xzr, xzr, [sp, #56]
  41dfd0:	ldrb	w8, [x24, #1]!
  41dfd4:	ldrh	w8, [x27, x8, lsl #1]
  41dfd8:	tst	w8, #0x6
  41dfdc:	b.ne	41dfd0 <parse_file_seq@@Base+0xe0>  // b.any
  41dfe0:	ldr	w9, [sp, #52]
  41dfe4:	tst	w9, w8
  41dfe8:	b.ne	41e40c <parse_file_seq@@Base+0x51c>  // b.any
  41dfec:	mov	x0, x24
  41dff0:	mov	w1, w22
  41dff4:	mov	x26, x10
  41dff8:	bl	41e43c <parse_file_seq@@Base+0x54c>
  41dffc:	cbz	x0, 41e050 <parse_file_seq@@Base+0x160>
  41e000:	tbnz	w19, #0, 41e060 <parse_file_seq@@Base+0x170>
  41e004:	sub	x8, x0, x24
  41e008:	cmp	x8, #0x3
  41e00c:	mov	x10, x26
  41e010:	b.lt	41e064 <parse_file_seq@@Base+0x174>  // b.tstop
  41e014:	ldrb	w8, [x24]
  41e018:	and	w8, w8, #0xff
  41e01c:	cmp	w8, #0x2e
  41e020:	b.ne	41e064 <parse_file_seq@@Base+0x174>  // b.any
  41e024:	ldrb	w8, [x24, #1]
  41e028:	cmp	w8, #0x2f
  41e02c:	b.ne	41e064 <parse_file_seq@@Base+0x174>  // b.any
  41e030:	add	x24, x24, #0x1
  41e034:	ldrb	w8, [x24, #1]!
  41e038:	cmp	w8, #0x2f
  41e03c:	b.eq	41e034 <parse_file_seq@@Base+0x144>  // b.none
  41e040:	sub	x9, x0, x24
  41e044:	cmp	x9, #0x3
  41e048:	b.ge	41e018 <parse_file_seq@@Base+0x128>  // b.tcont
  41e04c:	b	41e064 <parse_file_seq@@Base+0x174>
  41e050:	mov	x0, x24
  41e054:	bl	406750 <strlen@plt>
  41e058:	add	x0, x24, x0
  41e05c:	tbz	w19, #0, 41e004 <parse_file_seq@@Base+0x114>
  41e060:	mov	x10, x26
  41e064:	cmp	x24, x0
  41e068:	b.eq	41e08c <parse_file_seq@@Base+0x19c>  // b.none
  41e06c:	sub	x28, x0, x24
  41e070:	mov	x25, x0
  41e074:	mov	x0, x10
  41e078:	mov	x1, x24
  41e07c:	mov	x2, x28
  41e080:	bl	406710 <memcpy@plt>
  41e084:	mov	x10, x26
  41e088:	b	41e09c <parse_file_seq@@Base+0x1ac>
  41e08c:	mov	w8, #0x2f2e                	// #12078
  41e090:	mov	x25, x0
  41e094:	strh	w8, [x10]
  41e098:	mov	w28, #0x2                   	// #2
  41e09c:	strb	wzr, [x10, x28]
  41e0a0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41e0a4:	ldr	x24, [x8, #1592]
  41e0a8:	ldr	w9, [sp, #48]
  41e0ac:	cmp	x10, x24
  41e0b0:	cset	w8, ne  // ne = any
  41e0b4:	orr	w8, w8, w9
  41e0b8:	tbnz	w8, #0, 41e138 <parse_file_seq@@Base+0x248>
  41e0bc:	ldrb	w8, [x10]
  41e0c0:	cmp	w8, #0x28
  41e0c4:	b.eq	41e138 <parse_file_seq@@Base+0x248>  // b.none
  41e0c8:	add	x8, x28, x10
  41e0cc:	ldurb	w8, [x8, #-1]
  41e0d0:	cmp	w8, #0x29
  41e0d4:	b.eq	41e138 <parse_file_seq@@Base+0x248>  // b.none
  41e0d8:	mov	w1, #0x28                  	// #40
  41e0dc:	mov	x0, x10
  41e0e0:	bl	406c80 <strchr@plt>
  41e0e4:	cbz	x0, 41e3e4 <parse_file_seq@@Base+0x4f4>
  41e0e8:	mov	x9, x25
  41e0ec:	sub	x8, x9, #0x1
  41e0f0:	ldrb	w10, [x8, #1]!
  41e0f4:	ldrh	w11, [x27, x10, lsl #1]
  41e0f8:	tst	w11, #0x6
  41e0fc:	b.ne	41e0f0 <parse_file_seq@@Base+0x200>  // b.any
  41e100:	b	41e10c <parse_file_seq@@Base+0x21c>
  41e104:	ldrb	w10, [x8, #1]!
  41e108:	ldrh	w11, [x27, x10, lsl #1]
  41e10c:	tst	w22, w11
  41e110:	b.eq	41e104 <parse_file_seq@@Base+0x214>  // b.none
  41e114:	cmp	x8, x9
  41e118:	b.eq	41e130 <parse_file_seq@@Base+0x240>  // b.none
  41e11c:	ldurb	w9, [x8, #-1]
  41e120:	cmp	w9, #0x29
  41e124:	b.eq	41e3f4 <parse_file_seq@@Base+0x504>  // b.none
  41e128:	mov	x9, x8
  41e12c:	cbnz	w10, 41e0ec <parse_file_seq@@Base+0x1fc>
  41e130:	mov	x10, x26
  41e134:	cbz	x28, 41e404 <parse_file_seq@@Base+0x514>
  41e138:	cmp	x10, x24
  41e13c:	b.ls	41e170 <parse_file_seq@@Base+0x280>  // b.plast
  41e140:	add	x8, x28, x10
  41e144:	ldurb	w8, [x8, #-1]
  41e148:	cmp	w8, #0x29
  41e14c:	b.ne	41e168 <parse_file_seq@@Base+0x278>  // b.any
  41e150:	cmp	x28, #0x1
  41e154:	mov	x10, x24
  41e158:	mov	x28, x25
  41e15c:	b.ne	41e174 <parse_file_seq@@Base+0x284>  // b.any
  41e160:	mov	x10, x24
  41e164:	b	41dfc8 <parse_file_seq@@Base+0xd8>
  41e168:	mov	w8, #0x29                  	// #41
  41e16c:	strh	w8, [x10, x28]
  41e170:	mov	x28, x25
  41e174:	tbz	w19, #2, 41e1ac <parse_file_seq@@Base+0x2bc>
  41e178:	mov	w0, #0x2                   	// #2
  41e17c:	mov	x1, x20
  41e180:	mov	x2, x24
  41e184:	mov	x26, x10
  41e188:	bl	419c18 <concat@@Base>
  41e18c:	mov	x24, x0
  41e190:	mov	x0, x23
  41e194:	bl	419e38 <xcalloc@@Base>
  41e198:	str	x0, [x21]
  41e19c:	mov	x0, x24
  41e1a0:	tbnz	w19, #4, 41dfb4 <parse_file_seq@@Base+0xc4>
  41e1a4:	bl	423690 <strcache_add@@Base>
  41e1a8:	b	41dfb8 <parse_file_seq@@Base+0xc8>
  41e1ac:	str	x24, [sp, #72]
  41e1b0:	ldrb	w8, [x24]
  41e1b4:	cmp	w8, #0x7e
  41e1b8:	b.ne	41e1e8 <parse_file_seq@@Base+0x2f8>  // b.any
  41e1bc:	mov	x0, x24
  41e1c0:	mov	x26, x10
  41e1c4:	bl	41dda4 <tilde_expand@@Base>
  41e1c8:	mov	x25, x0
  41e1cc:	cbz	x0, 41e1d8 <parse_file_seq@@Base+0x2e8>
  41e1d0:	mov	x24, x25
  41e1d4:	str	x25, [sp, #72]
  41e1d8:	mov	x10, x26
  41e1dc:	str	x10, [sp, #40]
  41e1e0:	tbz	w19, #1, 41e1f4 <parse_file_seq@@Base+0x304>
  41e1e4:	b	41e218 <parse_file_seq@@Base+0x328>
  41e1e8:	mov	x25, xzr
  41e1ec:	str	x10, [sp, #40]
  41e1f0:	tbnz	w19, #1, 41e218 <parse_file_seq@@Base+0x328>
  41e1f4:	mov	x0, x24
  41e1f8:	bl	40701c <ar_name@@Base>
  41e1fc:	cbz	w0, 41e218 <parse_file_seq@@Base+0x328>
  41e200:	add	x1, sp, #0x40
  41e204:	add	x2, sp, #0x38
  41e208:	mov	x0, x24
  41e20c:	bl	4070cc <ar_parse_name@@Base>
  41e210:	ldr	x24, [sp, #64]
  41e214:	str	x24, [sp, #72]
  41e218:	tbnz	w19, #3, 41e230 <parse_file_seq@@Base+0x340>
  41e21c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41e220:	mov	x0, x24
  41e224:	add	x1, x1, #0x8ab
  41e228:	bl	406a50 <strpbrk@plt>
  41e22c:	cbz	x0, 41e298 <parse_file_seq@@Base+0x3a8>
  41e230:	add	x3, sp, #0x50
  41e234:	mov	w1, #0x200                 	// #512
  41e238:	mov	x0, x24
  41e23c:	mov	x2, xzr
  41e240:	bl	406e00 <glob@plt>
  41e244:	cbz	w0, 41e274 <parse_file_seq@@Base+0x384>
  41e248:	cmp	w0, #0x3
  41e24c:	b.eq	41e260 <parse_file_seq@@Base+0x370>  // b.none
  41e250:	cmp	w0, #0x1
  41e254:	stp	x25, x28, [sp, #24]
  41e258:	b.ne	41e268 <parse_file_seq@@Base+0x378>  // b.any
  41e25c:	b	41e438 <parse_file_seq@@Base+0x548>
  41e260:	tbnz	w19, #3, 41e3c4 <parse_file_seq@@Base+0x4d4>
  41e264:	stp	x25, x28, [sp, #24]
  41e268:	add	x28, sp, #0x48
  41e26c:	mov	w25, #0x1                   	// #1
  41e270:	b	41e28c <parse_file_seq@@Base+0x39c>
  41e274:	ldr	x8, [sp, #80]
  41e278:	cmp	w8, #0x1
  41e27c:	b.lt	41e3c4 <parse_file_seq@@Base+0x4d4>  // b.tstop
  41e280:	stp	x25, x28, [sp, #24]
  41e284:	ldr	x28, [sp, #88]
  41e288:	and	x25, x8, #0xffffffff
  41e28c:	mov	w8, #0x1                   	// #1
  41e290:	str	w8, [sp, #20]
  41e294:	b	41e2a8 <parse_file_seq@@Base+0x3b8>
  41e298:	stp	x25, x28, [sp, #24]
  41e29c:	str	wzr, [sp, #20]
  41e2a0:	add	x28, sp, #0x48
  41e2a4:	mov	w25, #0x1                   	// #1
  41e2a8:	mov	x22, xzr
  41e2ac:	b	41e2cc <parse_file_seq@@Base+0x3dc>
  41e2b0:	bl	419e60 <xstrdup@@Base>
  41e2b4:	ldr	x8, [x21]
  41e2b8:	str	x0, [x8, #8]
  41e2bc:	ldr	x21, [x21]
  41e2c0:	add	x22, x22, #0x1
  41e2c4:	cmp	x22, x25
  41e2c8:	b.eq	41e3b8 <parse_file_seq@@Base+0x4c8>  // b.none
  41e2cc:	ldr	x1, [sp, #56]
  41e2d0:	ldr	x2, [x28, x22, lsl #3]
  41e2d4:	cbz	x1, 41e364 <parse_file_seq@@Base+0x474>
  41e2d8:	mov	x0, x2
  41e2dc:	mov	x2, x23
  41e2e0:	bl	407370 <ar_glob@@Base>
  41e2e4:	cbz	x0, 41e374 <parse_file_seq@@Base+0x484>
  41e2e8:	ldr	x9, [x21]
  41e2ec:	mov	x8, x0
  41e2f0:	cmp	x9, #0x0
  41e2f4:	csel	x9, x21, x9, eq  // eq = none
  41e2f8:	str	x0, [x9]
  41e2fc:	tbnz	w19, #4, 41e32c <parse_file_seq@@Base+0x43c>
  41e300:	cbz	x20, 41e354 <parse_file_seq@@Base+0x464>
  41e304:	mov	w0, #0x2                   	// #2
  41e308:	mov	x1, x20
  41e30c:	mov	x2, x24
  41e310:	mov	x21, x8
  41e314:	bl	419c18 <concat@@Base>
  41e318:	bl	423690 <strcache_add@@Base>
  41e31c:	ldr	x8, [x21]
  41e320:	str	x0, [x21, #8]
  41e324:	cbnz	x8, 41e304 <parse_file_seq@@Base+0x414>
  41e328:	b	41e2c0 <parse_file_seq@@Base+0x3d0>
  41e32c:	mov	w0, #0x2                   	// #2
  41e330:	mov	x1, x20
  41e334:	mov	x2, x24
  41e338:	mov	x21, x8
  41e33c:	bl	419c18 <concat@@Base>
  41e340:	bl	419e60 <xstrdup@@Base>
  41e344:	ldr	x8, [x21]
  41e348:	str	x0, [x21, #8]
  41e34c:	cbnz	x8, 41e32c <parse_file_seq@@Base+0x43c>
  41e350:	b	41e2c0 <parse_file_seq@@Base+0x3d0>
  41e354:	mov	x21, x8
  41e358:	ldr	x8, [x8]
  41e35c:	cbnz	x8, 41e354 <parse_file_seq@@Base+0x464>
  41e360:	b	41e2c0 <parse_file_seq@@Base+0x3d0>
  41e364:	mov	w0, #0x2                   	// #2
  41e368:	mov	x1, x20
  41e36c:	bl	419c18 <concat@@Base>
  41e370:	b	41e398 <parse_file_seq@@Base+0x4a8>
  41e374:	ldr	x2, [x28, x22, lsl #3]
  41e378:	ldr	x4, [sp, #56]
  41e37c:	adrp	x3, 427000 <jobserver_post_child@@Base+0xcc>
  41e380:	adrp	x5, 42d000 <_IO_stdin_used@@Base+0x5680>
  41e384:	mov	w0, #0x5                   	// #5
  41e388:	mov	x1, x20
  41e38c:	add	x3, x3, #0xa91
  41e390:	add	x5, x5, #0x83b
  41e394:	bl	419c18 <concat@@Base>
  41e398:	mov	x26, x0
  41e39c:	mov	x0, x23
  41e3a0:	bl	419e38 <xcalloc@@Base>
  41e3a4:	str	x0, [x21]
  41e3a8:	mov	x0, x26
  41e3ac:	tbnz	w19, #4, 41e2b0 <parse_file_seq@@Base+0x3c0>
  41e3b0:	bl	423690 <strcache_add@@Base>
  41e3b4:	b	41e2b4 <parse_file_seq@@Base+0x3c4>
  41e3b8:	ldp	w22, w8, [sp, #16]
  41e3bc:	ldp	x25, x28, [sp, #24]
  41e3c0:	cbz	w8, 41e3cc <parse_file_seq@@Base+0x4dc>
  41e3c4:	add	x0, sp, #0x50
  41e3c8:	bl	406c90 <globfree@plt>
  41e3cc:	ldr	x0, [sp, #64]
  41e3d0:	bl	406c60 <free@plt>
  41e3d4:	mov	x0, x25
  41e3d8:	bl	406c60 <free@plt>
  41e3dc:	ldr	x10, [sp, #40]
  41e3e0:	b	41dfc8 <parse_file_seq@@Base+0xd8>
  41e3e4:	mov	x10, x26
  41e3e8:	cmp	x10, x24
  41e3ec:	b.hi	41e140 <parse_file_seq@@Base+0x250>  // b.pmore
  41e3f0:	b	41e170 <parse_file_seq@@Base+0x280>
  41e3f4:	add	x8, x28, x26
  41e3f8:	add	x10, x0, #0x1
  41e3fc:	sub	x28, x8, x10
  41e400:	cbnz	x28, 41e138 <parse_file_seq@@Base+0x248>
  41e404:	mov	x28, x25
  41e408:	b	41dfc8 <parse_file_seq@@Base+0xd8>
  41e40c:	ldr	x8, [sp, #8]
  41e410:	str	x24, [x8]
  41e414:	ldur	x0, [x29, #-8]
  41e418:	ldp	x20, x19, [sp, #240]
  41e41c:	ldp	x22, x21, [sp, #224]
  41e420:	ldp	x24, x23, [sp, #208]
  41e424:	ldp	x26, x25, [sp, #192]
  41e428:	ldp	x28, x27, [sp, #176]
  41e42c:	ldp	x29, x30, [sp, #160]
  41e430:	add	sp, sp, #0x100
  41e434:	ret
  41e438:	bl	41b248 <out_of_memory@@Base>
  41e43c:	stp	x29, x30, [sp, #-96]!
  41e440:	stp	x24, x23, [sp, #48]
  41e444:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  41e448:	stp	x28, x27, [sp, #16]
  41e44c:	stp	x26, x25, [sp, #32]
  41e450:	stp	x22, x21, [sp, #64]
  41e454:	stp	x20, x19, [sp, #80]
  41e458:	mov	x29, sp
  41e45c:	mov	x19, x0
  41e460:	mov	x20, xzr
  41e464:	orr	w22, w1, #0x1
  41e468:	add	x23, x0, #0x1
  41e46c:	add	x24, x24, #0xcf0
  41e470:	mov	w25, #0x7d                  	// #125
  41e474:	mov	w26, #0x29                  	// #41
  41e478:	mov	x21, x0
  41e47c:	b	41e484 <parse_file_seq@@Base+0x594>
  41e480:	sub	x21, x21, #0x1
  41e484:	mov	x27, x21
  41e488:	ldrb	w8, [x21], #1
  41e48c:	ldrh	w9, [x24, x8, lsl #1]
  41e490:	tst	w22, w9
  41e494:	b.eq	41e484 <parse_file_seq@@Base+0x594>  // b.none
  41e498:	cmp	w8, #0x24
  41e49c:	b.ne	41e500 <parse_file_seq@@Base+0x610>  // b.any
  41e4a0:	ldrb	w8, [x21]
  41e4a4:	cbz	w8, 41e590 <parse_file_seq@@Base+0x6a0>
  41e4a8:	cmp	w8, #0x7b
  41e4ac:	add	x21, x27, #0x2
  41e4b0:	b.eq	41e4bc <parse_file_seq@@Base+0x5cc>  // b.none
  41e4b4:	cmp	w8, #0x28
  41e4b8:	b.ne	41e484 <parse_file_seq@@Base+0x594>  // b.any
  41e4bc:	ldrb	w11, [x21]
  41e4c0:	cmp	w8, #0x28
  41e4c4:	csel	w9, w26, w25, eq  // eq = none
  41e4c8:	cbz	w11, 41e484 <parse_file_seq@@Base+0x594>
  41e4cc:	add	x21, x27, #0x3
  41e4d0:	mov	w10, #0x1                   	// #1
  41e4d4:	b	41e4e4 <parse_file_seq@@Base+0x5f4>
  41e4d8:	add	w10, w10, #0x1
  41e4dc:	ldrb	w11, [x21], #1
  41e4e0:	cbz	w11, 41e480 <parse_file_seq@@Base+0x590>
  41e4e4:	cmp	w8, w11, uxtb
  41e4e8:	b.eq	41e4d8 <parse_file_seq@@Base+0x5e8>  // b.none
  41e4ec:	cmp	w9, w11, uxtb
  41e4f0:	b.ne	41e4dc <parse_file_seq@@Base+0x5ec>  // b.any
  41e4f4:	subs	w10, w10, #0x1
  41e4f8:	b.ne	41e4dc <parse_file_seq@@Base+0x5ec>  // b.any
  41e4fc:	b	41e484 <parse_file_seq@@Base+0x594>
  41e500:	cbz	w8, 41e590 <parse_file_seq@@Base+0x6a0>
  41e504:	cmp	x27, x19
  41e508:	b.ls	41e5b4 <parse_file_seq@@Base+0x6c4>  // b.plast
  41e50c:	ldurb	w8, [x27, #-1]
  41e510:	cmp	w8, #0x5c
  41e514:	b.ne	41e5b4 <parse_file_seq@@Base+0x6c4>  // b.any
  41e518:	sub	x8, x27, #0x2
  41e51c:	cmp	x8, x19
  41e520:	b.cs	41e52c <parse_file_seq@@Base+0x63c>  // b.hs, b.nlast
  41e524:	mov	w8, #0xfffffffe            	// #-2
  41e528:	b	41e54c <parse_file_seq@@Base+0x65c>
  41e52c:	mov	x8, #0xfffffffffffffffe    	// #-2
  41e530:	ldrb	w9, [x27, x8]
  41e534:	cmp	w9, #0x5c
  41e538:	b.ne	41e54c <parse_file_seq@@Base+0x65c>  // b.any
  41e53c:	sub	x8, x8, #0x1
  41e540:	add	x9, x27, x8
  41e544:	cmp	x9, x19
  41e548:	b.cs	41e530 <parse_file_seq@@Base+0x640>  // b.hs, b.nlast
  41e54c:	add	w28, w8, #0x1
  41e550:	cbnz	x20, 41e560 <parse_file_seq@@Base+0x670>
  41e554:	mov	x0, x19
  41e558:	bl	406750 <strlen@plt>
  41e55c:	mov	x20, x0
  41e560:	cmp	w28, #0x0
  41e564:	cinc	w9, w28, lt  // lt = tstop
  41e568:	sub	x8, x23, x27
  41e56c:	sbfx	x9, x9, #1, #31
  41e570:	add	x21, x27, x9
  41e574:	sub	x8, x8, x9
  41e578:	add	x0, x27, w28, sxtw
  41e57c:	add	x2, x8, x20
  41e580:	mov	x1, x21
  41e584:	bl	406720 <memmove@plt>
  41e588:	tbnz	w28, #0, 41e484 <parse_file_seq@@Base+0x594>
  41e58c:	b	41e594 <parse_file_seq@@Base+0x6a4>
  41e590:	mov	x21, xzr
  41e594:	mov	x0, x21
  41e598:	ldp	x20, x19, [sp, #80]
  41e59c:	ldp	x22, x21, [sp, #64]
  41e5a0:	ldp	x24, x23, [sp, #48]
  41e5a4:	ldp	x26, x25, [sp, #32]
  41e5a8:	ldp	x28, x27, [sp, #16]
  41e5ac:	ldp	x29, x30, [sp], #96
  41e5b0:	ret
  41e5b4:	mov	x21, x27
  41e5b8:	b	41e594 <parse_file_seq@@Base+0x6a4>
  41e5bc:	stp	x29, x30, [sp, #-96]!
  41e5c0:	stp	x26, x25, [sp, #32]
  41e5c4:	stp	x24, x23, [sp, #48]
  41e5c8:	stp	x22, x21, [sp, #64]
  41e5cc:	stp	x20, x19, [sp, #80]
  41e5d0:	ldr	x8, [x0, #32]
  41e5d4:	mov	x19, x0
  41e5d8:	str	x27, [sp, #16]
  41e5dc:	mov	x29, sp
  41e5e0:	cbz	x8, 41e728 <parse_file_seq@@Base+0x838>
  41e5e4:	ldp	x21, x22, [x19, #16]
  41e5e8:	strb	wzr, [x21]
  41e5ec:	ldr	x2, [x19, #32]
  41e5f0:	mov	x0, x21
  41e5f4:	mov	w1, w22
  41e5f8:	bl	406ee0 <fgets@plt>
  41e5fc:	mov	x20, xzr
  41e600:	cbz	x0, 41e7a4 <parse_file_seq@@Base+0x8b4>
  41e604:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x4680>
  41e608:	add	x27, x21, x22
  41e60c:	add	x22, x19, #0x28
  41e610:	add	x23, x23, #0xa9a
  41e614:	mov	w26, #0xa                   	// #10
  41e618:	mov	x24, x21
  41e61c:	b	41e668 <parse_file_seq@@Base+0x778>
  41e620:	ldr	x8, [x19, #24]
  41e624:	mov	x0, x24
  41e628:	sub	x21, x21, x24
  41e62c:	lsl	x1, x8, #1
  41e630:	str	x1, [x19, #24]
  41e634:	bl	419de0 <xrealloc@@Base>
  41e638:	ldr	x8, [x19, #24]
  41e63c:	mov	x24, x0
  41e640:	add	x21, x0, x21
  41e644:	str	x0, [x19, #16]
  41e648:	add	x27, x0, x8
  41e64c:	str	x0, [x19]
  41e650:	strb	wzr, [x21]
  41e654:	ldr	x2, [x19, #32]
  41e658:	sub	w1, w27, w21
  41e65c:	mov	x0, x21
  41e660:	bl	406ee0 <fgets@plt>
  41e664:	cbz	x0, 41e7a4 <parse_file_seq@@Base+0x8b4>
  41e668:	mov	x0, x21
  41e66c:	bl	406750 <strlen@plt>
  41e670:	cbnz	x0, 41e698 <parse_file_seq@@Base+0x7a8>
  41e674:	mov	w2, #0x5                   	// #5
  41e678:	mov	x1, x23
  41e67c:	bl	406dc0 <dcgettext@plt>
  41e680:	mov	x2, x0
  41e684:	mov	x0, x22
  41e688:	mov	x1, xzr
  41e68c:	bl	41ae34 <error@@Base>
  41e690:	mov	w0, #0x1                   	// #1
  41e694:	strb	w26, [x21]
  41e698:	add	x21, x21, x0
  41e69c:	mov	x25, x21
  41e6a0:	ldrb	w8, [x25, #-1]!
  41e6a4:	cmp	w8, #0xa
  41e6a8:	b.ne	41e620 <parse_file_seq@@Base+0x730>  // b.any
  41e6ac:	sub	x8, x21, x24
  41e6b0:	cmp	x8, #0x2
  41e6b4:	add	x20, x20, #0x1
  41e6b8:	b.lt	41e6e8 <parse_file_seq@@Base+0x7f8>  // b.tstop
  41e6bc:	ldurb	w8, [x21, #-2]
  41e6c0:	cmp	w8, #0xd
  41e6c4:	b.ne	41e6e8 <parse_file_seq@@Base+0x7f8>  // b.any
  41e6c8:	mov	x0, x25
  41e6cc:	sub	x21, x25, #0x1
  41e6d0:	bl	406750 <strlen@plt>
  41e6d4:	add	x2, x0, #0x1
  41e6d8:	mov	x0, x21
  41e6dc:	mov	x1, x25
  41e6e0:	bl	406720 <memmove@plt>
  41e6e4:	mov	x21, x25
  41e6e8:	sub	x8, x21, #0x2
  41e6ec:	cmp	x8, x24
  41e6f0:	b.cc	41e7a0 <parse_file_seq@@Base+0x8b0>  // b.lo, b.ul, b.last
  41e6f4:	mov	w9, wzr
  41e6f8:	ldrb	w10, [x8]
  41e6fc:	cmp	w10, #0x5c
  41e700:	b.ne	41e714 <parse_file_seq@@Base+0x824>  // b.any
  41e704:	sub	x8, x8, #0x1
  41e708:	cmp	x8, x24
  41e70c:	eor	w9, w9, #0x1
  41e710:	b.cs	41e6f8 <parse_file_seq@@Base+0x808>  // b.hs, b.nlast
  41e714:	cbz	w9, 41e7a0 <parse_file_seq@@Base+0x8b0>
  41e718:	sub	x8, x27, x21
  41e71c:	cmp	x8, #0x4f
  41e720:	b.le	41e620 <parse_file_seq@@Base+0x730>
  41e724:	b	41e654 <parse_file_seq@@Base+0x764>
  41e728:	ldp	x21, x22, [x19, #16]
  41e72c:	ldr	x20, [x19, #8]
  41e730:	add	x8, x21, x22
  41e734:	cmp	x20, x8
  41e738:	b.cs	41e7c8 <parse_file_seq@@Base+0x8d8>  // b.hs, b.nlast
  41e73c:	str	x20, [x19]
  41e740:	b	41e74c <parse_file_seq@@Base+0x85c>
  41e744:	cbz	w10, 41e790 <parse_file_seq@@Base+0x8a0>
  41e748:	add	x20, x0, #0x1
  41e74c:	mov	w1, #0xa                   	// #10
  41e750:	mov	x0, x20
  41e754:	bl	406c80 <strchr@plt>
  41e758:	cbz	x0, 41e7d0 <parse_file_seq@@Base+0x8e0>
  41e75c:	cmp	x0, x20
  41e760:	b.ls	41e790 <parse_file_seq@@Base+0x8a0>  // b.plast
  41e764:	mov	w9, wzr
  41e768:	mov	x8, x0
  41e76c:	ldrb	w10, [x8, #-1]!
  41e770:	cmp	w10, #0x5c
  41e774:	mov	w10, w9
  41e778:	b.ne	41e744 <parse_file_seq@@Base+0x854>  // b.any
  41e77c:	cmp	w10, #0x0
  41e780:	cset	w9, eq  // eq = none
  41e784:	cmp	x8, x20
  41e788:	b.hi	41e76c <parse_file_seq@@Base+0x87c>  // b.pmore
  41e78c:	cbz	w10, 41e748 <parse_file_seq@@Base+0x858>
  41e790:	strb	wzr, [x0], #1
  41e794:	mov	x20, xzr
  41e798:	str	x0, [x19, #8]
  41e79c:	b	41e7e0 <parse_file_seq@@Base+0x8f0>
  41e7a0:	sturb	wzr, [x21, #-1]
  41e7a4:	ldr	x0, [x19, #32]
  41e7a8:	bl	406f00 <ferror@plt>
  41e7ac:	cbnz	w0, 41e800 <parse_file_seq@@Base+0x910>
  41e7b0:	cbnz	x20, 41e7e0 <parse_file_seq@@Base+0x8f0>
  41e7b4:	ldr	x8, [x19, #16]
  41e7b8:	cmp	x21, x8
  41e7bc:	mov	x8, #0xffffffffffffffff    	// #-1
  41e7c0:	cneg	x20, x8, ne  // ne = any
  41e7c4:	b	41e7e0 <parse_file_seq@@Base+0x8f0>
  41e7c8:	mov	x20, #0xffffffffffffffff    	// #-1
  41e7cc:	b	41e7e0 <parse_file_seq@@Base+0x8f0>
  41e7d0:	add	x8, x21, x22
  41e7d4:	add	x8, x8, #0x1
  41e7d8:	mov	x20, xzr
  41e7dc:	str	x8, [x19, #8]
  41e7e0:	mov	x0, x20
  41e7e4:	ldp	x20, x19, [sp, #80]
  41e7e8:	ldp	x22, x21, [sp, #64]
  41e7ec:	ldp	x24, x23, [sp, #48]
  41e7f0:	ldp	x26, x25, [sp, #32]
  41e7f4:	ldr	x27, [sp, #16]
  41e7f8:	ldp	x29, x30, [sp], #96
  41e7fc:	ret
  41e800:	ldr	x0, [x19, #40]
  41e804:	bl	41a2bc <pfatal_with_name@@Base>
  41e808:	sub	sp, sp, #0x80
  41e80c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41e810:	stp	x20, x19, [sp, #112]
  41e814:	mov	x19, x1
  41e818:	sub	x20, x0, #0x1
  41e81c:	add	x8, x8, #0xcf0
  41e820:	stp	x29, x30, [sp, #48]
  41e824:	str	x25, [sp, #64]
  41e828:	stp	x24, x23, [sp, #80]
  41e82c:	stp	x22, x21, [sp, #96]
  41e830:	add	x29, sp, #0x30
  41e834:	str	wzr, [x1]
  41e838:	ldrb	w9, [x20, #1]!
  41e83c:	ldrh	w10, [x8, x9, lsl #1]
  41e840:	tst	w10, #0x6
  41e844:	b.ne	41e838 <parse_file_seq@@Base+0x948>  // b.any
  41e848:	cbz	w9, 41e870 <parse_file_seq@@Base+0x980>
  41e84c:	mov	x1, sp
  41e850:	mov	x0, x20
  41e854:	bl	425450 <parse_variable_definition@@Base>
  41e858:	cbz	x0, 41e890 <parse_file_seq@@Base+0x9a0>
  41e85c:	mov	x25, x20
  41e860:	ldrb	w8, [x19]
  41e864:	mov	x20, x25
  41e868:	orr	w8, w8, #0x1
  41e86c:	strb	w8, [x19]
  41e870:	mov	x0, x20
  41e874:	ldp	x20, x19, [sp, #112]
  41e878:	ldp	x22, x21, [sp, #96]
  41e87c:	ldp	x24, x23, [sp, #80]
  41e880:	ldr	x25, [sp, #64]
  41e884:	ldp	x29, x30, [sp, #48]
  41e888:	add	sp, sp, #0x80
  41e88c:	ret
  41e890:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x1680>
  41e894:	adrp	x23, 42d000 <_IO_stdin_used@@Base+0x5680>
  41e898:	adrp	x24, 42c000 <_IO_stdin_used@@Base+0x4680>
  41e89c:	add	x22, x22, #0xc6a
  41e8a0:	add	x23, x23, #0x962
  41e8a4:	add	x24, x24, #0x979
  41e8a8:	mov	x25, x20
  41e8ac:	mov	x0, x25
  41e8b0:	bl	419ebc <end_of_token@@Base>
  41e8b4:	sub	x8, x0, x25
  41e8b8:	mov	x21, x0
  41e8bc:	cmp	x8, #0x8
  41e8c0:	b.eq	41e8f0 <parse_file_seq@@Base+0xa00>  // b.none
  41e8c4:	cmp	x8, #0x7
  41e8c8:	b.eq	41e90c <parse_file_seq@@Base+0xa1c>  // b.none
  41e8cc:	cmp	x8, #0x6
  41e8d0:	b.ne	41e870 <parse_file_seq@@Base+0x980>  // b.any
  41e8d4:	mov	w2, #0x6                   	// #6
  41e8d8:	mov	x0, x24
  41e8dc:	mov	x1, x25
  41e8e0:	bl	4069f0 <strncmp@plt>
  41e8e4:	cbnz	w0, 41e954 <parse_file_seq@@Base+0xa64>
  41e8e8:	mov	w8, #0x8                   	// #8
  41e8ec:	b	41e924 <parse_file_seq@@Base+0xa34>
  41e8f0:	mov	w2, #0x8                   	// #8
  41e8f4:	mov	x0, x22
  41e8f8:	mov	x1, x25
  41e8fc:	bl	4069f0 <strncmp@plt>
  41e900:	cbnz	w0, 41e978 <parse_file_seq@@Base+0xa88>
  41e904:	mov	w8, #0x10                  	// #16
  41e908:	b	41e924 <parse_file_seq@@Base+0xa34>
  41e90c:	mov	w2, #0x7                   	// #7
  41e910:	mov	x0, x23
  41e914:	mov	x1, x25
  41e918:	bl	4069f0 <strncmp@plt>
  41e91c:	cbnz	w0, 41e870 <parse_file_seq@@Base+0x980>
  41e920:	mov	w8, #0x20                  	// #32
  41e924:	ldrb	w9, [x19]
  41e928:	mov	x0, x21
  41e92c:	orr	w8, w9, w8
  41e930:	strb	w8, [x19]
  41e934:	bl	419edc <next_token@@Base>
  41e938:	ldrb	w8, [x0]
  41e93c:	cbz	w8, 41e870 <parse_file_seq@@Base+0x980>
  41e940:	mov	x1, sp
  41e944:	mov	x25, x0
  41e948:	bl	425450 <parse_variable_definition@@Base>
  41e94c:	cbz	x0, 41e8ac <parse_file_seq@@Base+0x9bc>
  41e950:	b	41e860 <parse_file_seq@@Base+0x970>
  41e954:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41e958:	add	x0, x0, #0xace
  41e95c:	mov	w2, #0x6                   	// #6
  41e960:	mov	x1, x25
  41e964:	bl	4069f0 <strncmp@plt>
  41e968:	cbnz	w0, 41e870 <parse_file_seq@@Base+0x980>
  41e96c:	ldrb	w8, [x19]
  41e970:	orr	w8, w8, #0x2
  41e974:	b	41e998 <parse_file_seq@@Base+0xaa8>
  41e978:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41e97c:	add	x0, x0, #0xacc
  41e980:	mov	w2, #0x8                   	// #8
  41e984:	mov	x1, x25
  41e988:	bl	4069f0 <strncmp@plt>
  41e98c:	cbnz	w0, 41e870 <parse_file_seq@@Base+0x980>
  41e990:	ldrb	w8, [x19]
  41e994:	orr	w8, w8, #0x4
  41e998:	mov	x0, x21
  41e99c:	strb	w8, [x19]
  41e9a0:	bl	419edc <next_token@@Base>
  41e9a4:	mov	x25, x0
  41e9a8:	b	41e860 <parse_file_seq@@Base+0x970>
  41e9ac:	sub	sp, sp, #0x90
  41e9b0:	stp	x29, x30, [sp, #48]
  41e9b4:	add	x29, sp, #0x30
  41e9b8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41e9bc:	stp	x20, x19, [sp, #128]
  41e9c0:	ldr	w8, [x8, #2800]
  41e9c4:	ldr	x20, [x29, #112]
  41e9c8:	stp	x28, x27, [sp, #64]
  41e9cc:	stp	x26, x25, [sp, #80]
  41e9d0:	stp	x24, x23, [sp, #96]
  41e9d4:	stp	x22, x21, [sp, #112]
  41e9d8:	str	x3, [sp, #24]
  41e9dc:	stur	w1, [x29, #-16]
  41e9e0:	cbnz	w8, 41f2b4 <parse_file_seq@@Base+0x13c4>
  41e9e4:	ldr	x8, [x0, #8]
  41e9e8:	mov	x25, x0
  41e9ec:	sub	x0, x29, #0x8
  41e9f0:	mov	x19, x7
  41e9f4:	mov	x21, x6
  41e9f8:	mov	w27, w5
  41e9fc:	mov	x26, x4
  41ea00:	mov	x22, x2
  41ea04:	stur	x8, [x29, #-8]
  41ea08:	bl	41d8b0 <find_percent_cached@@Base>
  41ea0c:	mov	x23, x0
  41ea10:	str	x20, [sp, #8]
  41ea14:	cbz	x19, 41eb74 <parse_file_seq@@Base+0xc84>
  41ea18:	ldrb	w24, [x29, #104]
  41ea1c:	mov	w0, #0x38                  	// #56
  41ea20:	mov	x28, x20
  41ea24:	bl	419e14 <xmalloc@@Base>
  41ea28:	ldr	x8, [x28]
  41ea2c:	mov	w9, w27
  41ea30:	mov	x20, x0
  41ea34:	str	xzr, [x0, #16]
  41ea38:	stp	x8, x9, [x0]
  41ea3c:	mov	x0, x21
  41ea40:	mov	x1, x19
  41ea44:	bl	419e7c <xstrndup@@Base>
  41ea48:	stp	x0, xzr, [x20, #24]
  41ea4c:	strb	w24, [x20, #50]
  41ea50:	ldr	w8, [x29, #96]
  41ea54:	stur	w8, [x29, #-12]
  41ea58:	cbz	x26, 41eb8c <parse_file_seq@@Base+0xc9c>
  41ea5c:	ldr	x24, [sp, #8]
  41ea60:	mov	x19, x26
  41ea64:	mov	x1, x26
  41ea68:	b	41ea7c <parse_file_seq@@Base+0xb8c>
  41ea6c:	mov	x21, x1
  41ea70:	cbz	w8, 41eaf0 <parse_file_seq@@Base+0xc00>
  41ea74:	add	x1, x21, #0x1
  41ea78:	strb	w8, [x19], #1
  41ea7c:	ldrb	w8, [x1]
  41ea80:	cmp	w8, #0x5c
  41ea84:	b.ne	41ea6c <parse_file_seq@@Base+0xb7c>  // b.any
  41ea88:	mov	x21, x1
  41ea8c:	ldrb	w8, [x21, #1]!
  41ea90:	cmp	w8, #0x5c
  41ea94:	b.eq	41ea8c <parse_file_seq@@Base+0xb9c>  // b.none
  41ea98:	cmp	w8, #0x3a
  41ea9c:	sub	x27, x21, x1
  41eaa0:	b.ne	41eacc <parse_file_seq@@Base+0xbdc>  // b.any
  41eaa4:	tbz	w27, #0, 41eacc <parse_file_seq@@Base+0xbdc>
  41eaa8:	cmp	x27, #0x2
  41eaac:	b.cc	41eae8 <parse_file_seq@@Base+0xbf8>  // b.lo, b.ul, b.last
  41eab0:	lsr	x27, x27, #1
  41eab4:	mov	x0, x19
  41eab8:	mov	x2, x27
  41eabc:	bl	406720 <memmove@plt>
  41eac0:	ldrb	w8, [x21]
  41eac4:	add	x19, x19, x27
  41eac8:	b	41ea74 <parse_file_seq@@Base+0xb84>
  41eacc:	mov	x0, x19
  41ead0:	mov	x2, x27
  41ead4:	bl	406720 <memmove@plt>
  41ead8:	ldrb	w8, [x21]
  41eadc:	add	x19, x19, x27
  41eae0:	cbnz	w8, 41ea74 <parse_file_seq@@Base+0xb84>
  41eae4:	b	41eaf0 <parse_file_seq@@Base+0xc00>
  41eae8:	mov	w8, #0x3a                  	// #58
  41eaec:	b	41ea74 <parse_file_seq@@Base+0xb84>
  41eaf0:	strb	wzr, [x19]
  41eaf4:	adrp	x8, 442000 <just_print_flag@@Base>
  41eaf8:	ldr	w8, [x8, #12]
  41eafc:	cbz	w8, 41eb44 <parse_file_seq@@Base+0xc54>
  41eb00:	mov	w1, #0x24                  	// #36
  41eb04:	mov	x0, x26
  41eb08:	bl	406c80 <strchr@plt>
  41eb0c:	cbz	x0, 41eb44 <parse_file_seq@@Base+0xc54>
  41eb10:	mov	w0, #0x28                  	// #40
  41eb14:	bl	419e38 <xcalloc@@Base>
  41eb18:	ldrh	w8, [x0, #32]
  41eb1c:	cmp	x22, #0x0
  41eb20:	mov	w9, #0xc00                 	// #3072
  41eb24:	mov	w10, #0x800                 	// #2048
  41eb28:	and	w8, w8, #0xfffff3ff
  41eb2c:	csel	w9, w10, w9, eq  // eq = none
  41eb30:	mov	x19, x0
  41eb34:	orr	w8, w9, w8
  41eb38:	str	x26, [x0, #8]
  41eb3c:	strh	w8, [x0, #32]
  41eb40:	b	41eb94 <parse_file_seq@@Base+0xca4>
  41eb44:	mov	x0, x26
  41eb48:	bl	40b338 <split_prereqs@@Base>
  41eb4c:	mov	x19, x0
  41eb50:	mov	x0, x26
  41eb54:	bl	406c60 <free@plt>
  41eb58:	orr	x8, x22, x23
  41eb5c:	cbnz	x8, 41eb94 <parse_file_seq@@Base+0xca4>
  41eb60:	mov	x0, x19
  41eb64:	mov	x1, xzr
  41eb68:	bl	40b3dc <enter_prereqs@@Base>
  41eb6c:	mov	x19, x0
  41eb70:	b	41ebcc <parse_file_seq@@Base+0xcdc>
  41eb74:	ldur	w8, [x29, #-16]
  41eb78:	cbnz	w8, 41f2fc <parse_file_seq@@Base+0x140c>
  41eb7c:	mov	x20, xzr
  41eb80:	ldr	w8, [x29, #96]
  41eb84:	stur	w8, [x29, #-12]
  41eb88:	cbnz	x26, 41ea5c <parse_file_seq@@Base+0xb6c>
  41eb8c:	ldr	x24, [sp, #8]
  41eb90:	mov	x19, xzr
  41eb94:	cbz	x23, 41ebcc <parse_file_seq@@Base+0xcdc>
  41eb98:	cbnz	x22, 41f2d8 <parse_file_seq@@Base+0x13e8>
  41eb9c:	ldr	x22, [x25]
  41eba0:	mov	x0, x25
  41eba4:	bl	406c60 <free@plt>
  41eba8:	cbz	x22, 41f1b0 <parse_file_seq@@Base+0x12c0>
  41ebac:	mov	w8, #0x1                   	// #1
  41ebb0:	mov	x9, x22
  41ebb4:	ldr	x9, [x9]
  41ebb8:	add	w8, w8, #0x1
  41ebbc:	cbnz	x9, 41ebb4 <parse_file_seq@@Base+0xcc4>
  41ebc0:	and	x8, x8, #0xffff
  41ebc4:	lsl	x25, x8, #3
  41ebc8:	b	41f1b4 <parse_file_seq@@Base+0x12c4>
  41ebcc:	ldr	x8, [sp, #24]
  41ebd0:	mov	x27, xzr
  41ebd4:	add	x8, x8, #0x1
  41ebd8:	str	x8, [sp, #16]
  41ebdc:	mov	x0, x25
  41ebe0:	ldr	x25, [x25]
  41ebe4:	bl	406c60 <free@plt>
  41ebe8:	adrp	x8, 442000 <just_print_flag@@Base>
  41ebec:	ldr	w8, [x8, #8]
  41ebf0:	cbz	w8, 41ec54 <parse_file_seq@@Base+0xd64>
  41ebf4:	adrp	x8, 442000 <just_print_flag@@Base>
  41ebf8:	ldr	w8, [x8, #12]
  41ebfc:	cbz	w8, 41eea0 <parse_file_seq@@Base+0xfb0>
  41ec00:	adrp	x8, 442000 <just_print_flag@@Base>
  41ec04:	ldr	w8, [x8, #60]
  41ec08:	cbnz	w8, 41edcc <parse_file_seq@@Base+0xedc>
  41ec0c:	ldur	x8, [x29, #-8]
  41ec10:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ec14:	add	x9, x9, #0xbb7
  41ec18:	cmp	x8, x9
  41ec1c:	b.eq	41ec40 <parse_file_seq@@Base+0xd50>  // b.none
  41ec20:	ldrb	w9, [x8]
  41ec24:	cmp	w9, #0x2e
  41ec28:	b.ne	41edcc <parse_file_seq@@Base+0xedc>  // b.any
  41ec2c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ec30:	add	x0, x8, #0x1
  41ec34:	add	x1, x1, #0xbb8
  41ec38:	bl	406c10 <strcmp@plt>
  41ec3c:	cbnz	w0, 41edcc <parse_file_seq@@Base+0xedc>
  41ec40:	mov	w8, #0x1                   	// #1
  41ec44:	adrp	x9, 442000 <just_print_flag@@Base>
  41ec48:	str	w8, [x9, #60]
  41ec4c:	cbnz	x22, 41edd0 <parse_file_seq@@Base+0xee0>
  41ec50:	b	41ede8 <parse_file_seq@@Base+0xef8>
  41ec54:	ldur	x8, [x29, #-8]
  41ec58:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ec5c:	add	x9, x9, #0xb6e
  41ec60:	cmp	x8, x9
  41ec64:	b.eq	41ec88 <parse_file_seq@@Base+0xd98>  // b.none
  41ec68:	ldrb	w9, [x8]
  41ec6c:	cmp	w9, #0x2e
  41ec70:	b.ne	41ebf4 <parse_file_seq@@Base+0xd04>  // b.any
  41ec74:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ec78:	add	x0, x8, #0x1
  41ec7c:	add	x1, x1, #0xb6f
  41ec80:	bl	406c10 <strcmp@plt>
  41ec84:	cbnz	w0, 41ebf4 <parse_file_seq@@Base+0xd04>
  41ec88:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  41ec8c:	ldr	x8, [x21, #2424]
  41ec90:	adrp	x9, 442000 <just_print_flag@@Base>
  41ec94:	mov	w10, #0x1                   	// #1
  41ec98:	str	w10, [x9, #8]
  41ec9c:	ldr	x5, [x8, #8]
  41eca0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  41eca4:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  41eca8:	mov	w1, #0xb                   	// #11
  41ecac:	add	x0, x0, #0x13a
  41ecb0:	add	x2, x2, #0x54a
  41ecb4:	mov	w3, wzr
  41ecb8:	mov	w4, wzr
  41ecbc:	mov	x6, xzr
  41ecc0:	bl	423d70 <define_variable_in_set@@Base>
  41ecc4:	ldr	x8, [x21, #2424]
  41ecc8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  41eccc:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ecd0:	mov	w1, #0x7                   	// #7
  41ecd4:	ldr	x5, [x8, #8]
  41ecd8:	add	x0, x0, #0x369
  41ecdc:	add	x2, x2, #0xb75
  41ece0:	mov	w3, wzr
  41ece4:	mov	w4, wzr
  41ece8:	mov	x6, xzr
  41ecec:	bl	423d70 <define_variable_in_set@@Base>
  41ecf0:	ldr	x8, [x21, #2424]
  41ecf4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  41ecf8:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ecfc:	mov	w1, #0x2                   	// #2
  41ed00:	ldr	x5, [x8, #8]
  41ed04:	add	x0, x0, #0x422
  41ed08:	add	x2, x2, #0xb79
  41ed0c:	mov	w3, wzr
  41ed10:	mov	w4, wzr
  41ed14:	mov	x6, xzr
  41ed18:	bl	423d70 <define_variable_in_set@@Base>
  41ed1c:	ldr	x8, [x21, #2424]
  41ed20:	adrp	x23, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ed24:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ed28:	add	x23, x23, #0xb84
  41ed2c:	ldr	x5, [x8, #8]
  41ed30:	mov	w1, #0x6                   	// #6
  41ed34:	add	x0, x0, #0xb7d
  41ed38:	mov	x2, x23
  41ed3c:	mov	w3, wzr
  41ed40:	mov	w4, wzr
  41ed44:	mov	x6, xzr
  41ed48:	bl	423d70 <define_variable_in_set@@Base>
  41ed4c:	ldr	x8, [x21, #2424]
  41ed50:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x680>
  41ed54:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ed58:	mov	w1, #0x2                   	// #2
  41ed5c:	ldr	x5, [x8, #8]
  41ed60:	add	x0, x0, #0x3d5
  41ed64:	add	x2, x2, #0xb88
  41ed68:	mov	w3, wzr
  41ed6c:	mov	w4, wzr
  41ed70:	mov	x6, xzr
  41ed74:	bl	423d70 <define_variable_in_set@@Base>
  41ed78:	ldr	x8, [x21, #2424]
  41ed7c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ed80:	mov	w1, #0x6                   	// #6
  41ed84:	add	x0, x0, #0xb8f
  41ed88:	ldr	x5, [x8, #8]
  41ed8c:	mov	x2, x23
  41ed90:	mov	w3, wzr
  41ed94:	mov	w4, wzr
  41ed98:	mov	x6, xzr
  41ed9c:	bl	423d70 <define_variable_in_set@@Base>
  41eda0:	ldr	x8, [x21, #2424]
  41eda4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41eda8:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x4680>
  41edac:	mov	w1, #0xc                   	// #12
  41edb0:	ldr	x5, [x8, #8]
  41edb4:	add	x0, x0, #0xb96
  41edb8:	add	x2, x2, #0xba3
  41edbc:	mov	w3, wzr
  41edc0:	mov	w4, wzr
  41edc4:	mov	x6, xzr
  41edc8:	bl	423d70 <define_variable_in_set@@Base>
  41edcc:	cbz	x22, 41ede8 <parse_file_seq@@Base+0xef8>
  41edd0:	ldur	x23, [x29, #-8]
  41edd4:	ldr	x1, [sp, #24]
  41edd8:	mov	x0, x22
  41eddc:	mov	x2, x23
  41ede0:	bl	40d384 <pattern_matches@@Base>
  41ede4:	cbz	w0, 41ef3c <parse_file_seq@@Base+0x104c>
  41ede8:	cbz	x19, 41eee8 <parse_file_seq@@Base+0xff8>
  41edec:	mov	x26, x19
  41edf0:	cbz	x25, 41eeec <parse_file_seq@@Base+0xffc>
  41edf4:	mov	x0, x19
  41edf8:	bl	41a08c <copy_dep_chain@@Base>
  41edfc:	mov	x26, x0
  41ee00:	ldur	x23, [x29, #-8]
  41ee04:	ldur	w8, [x29, #-12]
  41ee08:	cbnz	w8, 41eef8 <parse_file_seq@@Base+0x1008>
  41ee0c:	mov	x0, x23
  41ee10:	bl	423690 <strcache_add@@Base>
  41ee14:	bl	40ab6c <enter_file@@Base>
  41ee18:	ldr	x8, [x0, #104]
  41ee1c:	mov	x28, x0
  41ee20:	cbnz	x8, 41f280 <parse_file_seq@@Base+0x1390>
  41ee24:	cbz	x20, 41ef84 <parse_file_seq@@Base+0x1094>
  41ee28:	ldr	x8, [x28, #32]
  41ee2c:	cmp	x20, x8
  41ee30:	b.eq	41efac <parse_file_seq@@Base+0x10bc>  // b.none
  41ee34:	cbz	x8, 41efe0 <parse_file_seq@@Base+0x10f0>
  41ee38:	ldrb	w8, [x28, #137]
  41ee3c:	tbz	w8, #3, 41efe0 <parse_file_seq@@Base+0x10f0>
  41ee40:	ldr	x0, [x28]
  41ee44:	bl	406750 <strlen@plt>
  41ee48:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ee4c:	mov	x21, x0
  41ee50:	mov	w2, #0x5                   	// #5
  41ee54:	mov	x0, xzr
  41ee58:	add	x1, x1, #0xc4b
  41ee5c:	bl	406dc0 <dcgettext@plt>
  41ee60:	ldr	x3, [x28]
  41ee64:	mov	x2, x0
  41ee68:	mov	x0, x20
  41ee6c:	mov	x1, x21
  41ee70:	bl	41ae34 <error@@Base>
  41ee74:	ldr	x24, [x28, #32]
  41ee78:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ee7c:	mov	w2, #0x5                   	// #5
  41ee80:	mov	x0, xzr
  41ee84:	add	x1, x1, #0xc76
  41ee88:	bl	406dc0 <dcgettext@plt>
  41ee8c:	ldr	x3, [x28]
  41ee90:	mov	x2, x0
  41ee94:	mov	x0, x24
  41ee98:	ldr	x24, [sp, #8]
  41ee9c:	b	41efd8 <parse_file_seq@@Base+0x10e8>
  41eea0:	ldur	x8, [x29, #-8]
  41eea4:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41eea8:	add	x9, x9, #0xba6
  41eeac:	cmp	x8, x9
  41eeb0:	b.eq	41eed4 <parse_file_seq@@Base+0xfe4>  // b.none
  41eeb4:	ldrb	w9, [x8]
  41eeb8:	cmp	w9, #0x2e
  41eebc:	b.ne	41ec00 <parse_file_seq@@Base+0xd10>  // b.any
  41eec0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41eec4:	add	x0, x8, #0x1
  41eec8:	add	x1, x1, #0xba7
  41eecc:	bl	406c10 <strcmp@plt>
  41eed0:	cbnz	w0, 41ec00 <parse_file_seq@@Base+0xd10>
  41eed4:	adrp	x8, 442000 <just_print_flag@@Base>
  41eed8:	mov	w9, #0x1                   	// #1
  41eedc:	str	w9, [x8, #12]
  41eee0:	cbnz	x22, 41edd0 <parse_file_seq@@Base+0xee0>
  41eee4:	b	41ede8 <parse_file_seq@@Base+0xef8>
  41eee8:	mov	x26, xzr
  41eeec:	ldur	x23, [x29, #-8]
  41eef0:	ldur	w8, [x29, #-12]
  41eef4:	cbz	w8, 41ee0c <parse_file_seq@@Base+0xf1c>
  41eef8:	mov	x0, x23
  41eefc:	bl	40aae4 <lookup_file@@Base>
  41ef00:	cbz	x0, 41ef18 <parse_file_seq@@Base+0x1028>
  41ef04:	ldrb	w8, [x0, #137]
  41ef08:	mov	x28, x0
  41ef0c:	tbz	w8, #3, 41ef18 <parse_file_seq@@Base+0x1028>
  41ef10:	ldr	x8, [x28, #104]
  41ef14:	cbz	x8, 41f280 <parse_file_seq@@Base+0x1390>
  41ef18:	mov	x0, x23
  41ef1c:	bl	423690 <strcache_add@@Base>
  41ef20:	bl	40ab6c <enter_file@@Base>
  41ef24:	ldr	x8, [x0, #104]
  41ef28:	mov	x28, x0
  41ef2c:	cbnz	x8, 41ef34 <parse_file_seq@@Base+0x1044>
  41ef30:	str	x28, [x28, #104]
  41ef34:	str	x20, [x28, #32]
  41ef38:	b	41f00c <parse_file_seq@@Base+0x111c>
  41ef3c:	mov	x0, x23
  41ef40:	bl	406750 <strlen@plt>
  41ef44:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ef48:	mov	x26, x0
  41ef4c:	mov	w2, #0x5                   	// #5
  41ef50:	mov	x0, xzr
  41ef54:	add	x1, x1, #0xbc1
  41ef58:	bl	406dc0 <dcgettext@plt>
  41ef5c:	mov	x2, x0
  41ef60:	mov	x0, x24
  41ef64:	mov	x1, x26
  41ef68:	mov	x3, x23
  41ef6c:	bl	41ae34 <error@@Base>
  41ef70:	mov	x26, xzr
  41ef74:	ldur	x23, [x29, #-8]
  41ef78:	ldur	w8, [x29, #-12]
  41ef7c:	cbnz	w8, 41eef8 <parse_file_seq@@Base+0x1008>
  41ef80:	b	41ee0c <parse_file_seq@@Base+0xf1c>
  41ef84:	cmp	x26, #0x0
  41ef88:	cset	w8, eq  // eq = none
  41ef8c:	cbnz	x26, 41efec <parse_file_seq@@Base+0x10fc>
  41ef90:	adrp	x9, 442000 <just_print_flag@@Base>
  41ef94:	ldr	x9, [x9, #40]
  41ef98:	cmp	x28, x9
  41ef9c:	b.ne	41efec <parse_file_seq@@Base+0x10fc>  // b.any
  41efa0:	mov	w8, #0x1                   	// #1
  41efa4:	str	xzr, [x28, #32]
  41efa8:	b	41efec <parse_file_seq@@Base+0x10fc>
  41efac:	ldr	x0, [x28]
  41efb0:	bl	406750 <strlen@plt>
  41efb4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41efb8:	mov	x21, x0
  41efbc:	mov	w2, #0x5                   	// #5
  41efc0:	mov	x0, xzr
  41efc4:	add	x1, x1, #0xc19
  41efc8:	bl	406dc0 <dcgettext@plt>
  41efcc:	ldr	x3, [x28]
  41efd0:	mov	x2, x0
  41efd4:	mov	x0, x24
  41efd8:	mov	x1, x21
  41efdc:	bl	41ae34 <error@@Base>
  41efe0:	cmp	x26, #0x0
  41efe4:	cset	w8, eq  // eq = none
  41efe8:	str	x20, [x28, #32]
  41efec:	cbz	w8, 41f00c <parse_file_seq@@Base+0x111c>
  41eff0:	adrp	x8, 442000 <just_print_flag@@Base>
  41eff4:	ldr	x8, [x8, #216]
  41eff8:	cmp	x28, x8
  41effc:	b.ne	41f00c <parse_file_seq@@Base+0x111c>  // b.any
  41f000:	ldr	x0, [x28, #24]
  41f004:	bl	41a130 <free_ns_chain@@Base>
  41f008:	str	xzr, [x28, #24]
  41f00c:	ldur	w8, [x29, #-16]
  41f010:	cbz	w8, 41f02c <parse_file_seq@@Base+0x113c>
  41f014:	mov	w0, #0x28                  	// #40
  41f018:	bl	419e38 <xcalloc@@Base>
  41f01c:	ldr	x8, [x28]
  41f020:	str	x27, [x0]
  41f024:	mov	x27, x0
  41f028:	stp	x8, x28, [x0, #8]
  41f02c:	ldr	w8, [x28, #136]
  41f030:	orr	w8, w8, #0x800
  41f034:	str	w8, [x28, #136]
  41f038:	cbz	x22, 41f094 <parse_file_seq@@Base+0x11a4>
  41f03c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  41f040:	add	x0, x0, #0x3a9
  41f044:	bl	40a7e8 <variable_expand@@Base>
  41f048:	ldr	x4, [sp, #16]
  41f04c:	adrp	x3, 429000 <_IO_stdin_used@@Base+0x1680>
  41f050:	add	x3, x3, #0xda6
  41f054:	add	x5, x3, #0x1
  41f058:	mov	x1, x23
  41f05c:	mov	x2, x22
  41f060:	mov	x21, x0
  41f064:	bl	40cf94 <patsubst_expand_pat@@Base>
  41f068:	sub	x1, x0, x21
  41f06c:	mov	x0, x21
  41f070:	bl	423914 <strcache_add_len@@Base>
  41f074:	str	x0, [x28, #40]
  41f078:	cbz	x26, 41f0cc <parse_file_seq@@Base+0x11dc>
  41f07c:	ldrb	w8, [x26, #33]
  41f080:	mov	x1, x0
  41f084:	tbnz	w8, #3, 41f0a4 <parse_file_seq@@Base+0x11b4>
  41f088:	mov	x0, x26
  41f08c:	bl	40b3dc <enter_prereqs@@Base>
  41f090:	mov	x26, x0
  41f094:	cbz	x26, 41f0cc <parse_file_seq@@Base+0x11dc>
  41f098:	ldr	x8, [x28, #24]
  41f09c:	cbnz	x8, 41f0b0 <parse_file_seq@@Base+0x11c0>
  41f0a0:	b	41f0c8 <parse_file_seq@@Base+0x11d8>
  41f0a4:	str	x1, [x26, #24]
  41f0a8:	ldr	x8, [x28, #24]
  41f0ac:	cbz	x8, 41f0c8 <parse_file_seq@@Base+0x11d8>
  41f0b0:	mov	x9, x26
  41f0b4:	cbz	x20, 41f114 <parse_file_seq@@Base+0x1224>
  41f0b8:	mov	x10, x9
  41f0bc:	ldr	x9, [x9]
  41f0c0:	cbnz	x9, 41f0b8 <parse_file_seq@@Base+0x11c8>
  41f0c4:	str	x8, [x10]
  41f0c8:	str	x26, [x28, #24]
  41f0cc:	ldr	x8, [x28]
  41f0d0:	stur	x8, [x29, #-8]
  41f0d4:	cbz	x25, 41f130 <parse_file_seq@@Base+0x1240>
  41f0d8:	ldr	x8, [x25, #8]
  41f0dc:	sub	x0, x29, #0x8
  41f0e0:	stur	x8, [x29, #-8]
  41f0e4:	bl	41d8b0 <find_percent_cached@@Base>
  41f0e8:	cbz	x0, 41ebdc <parse_file_seq@@Base+0xcec>
  41f0ec:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f0f0:	mov	w2, #0x5                   	// #5
  41f0f4:	mov	x0, xzr
  41f0f8:	add	x1, x1, #0xca3
  41f0fc:	bl	406dc0 <dcgettext@plt>
  41f100:	mov	x2, x0
  41f104:	mov	x0, x24
  41f108:	mov	x1, xzr
  41f10c:	bl	41ae34 <error@@Base>
  41f110:	b	41ebdc <parse_file_seq@@Base+0xcec>
  41f114:	mov	x9, x8
  41f118:	ldr	x8, [x8]
  41f11c:	cbnz	x8, 41f114 <parse_file_seq@@Base+0x1224>
  41f120:	str	x26, [x9]
  41f124:	ldr	x8, [x28]
  41f128:	stur	x8, [x29, #-8]
  41f12c:	cbnz	x25, 41f0d8 <parse_file_seq@@Base+0x11e8>
  41f130:	cbz	x27, 41f240 <parse_file_seq@@Base+0x1350>
  41f134:	adrp	x19, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f138:	add	x19, x19, #0xcda
  41f13c:	mov	x23, x27
  41f140:	b	41f150 <parse_file_seq@@Base+0x1260>
  41f144:	str	x21, [x24, #48]
  41f148:	ldr	x23, [x23]
  41f14c:	cbz	x23, 41f240 <parse_file_seq@@Base+0x1350>
  41f150:	ldr	x8, [x23]
  41f154:	ldr	x24, [x23, #16]
  41f158:	mov	x21, x27
  41f15c:	cbz	x8, 41f16c <parse_file_seq@@Base+0x127c>
  41f160:	mov	x0, x27
  41f164:	bl	41a08c <copy_dep_chain@@Base>
  41f168:	mov	x21, x0
  41f16c:	ldr	x8, [x24, #48]
  41f170:	cbz	x8, 41f144 <parse_file_seq@@Base+0x1254>
  41f174:	ldr	x0, [x24]
  41f178:	bl	406750 <strlen@plt>
  41f17c:	mov	x22, x0
  41f180:	mov	w2, #0x5                   	// #5
  41f184:	mov	x0, xzr
  41f188:	mov	x1, x19
  41f18c:	bl	406dc0 <dcgettext@plt>
  41f190:	ldr	x3, [x24]
  41f194:	mov	x2, x0
  41f198:	mov	x0, x20
  41f19c:	mov	x1, x22
  41f1a0:	bl	41ae34 <error@@Base>
  41f1a4:	ldr	x0, [x24, #48]
  41f1a8:	bl	41a130 <free_ns_chain@@Base>
  41f1ac:	b	41f144 <parse_file_seq@@Base+0x1254>
  41f1b0:	mov	w25, #0x8                   	// #8
  41f1b4:	mov	x0, x25
  41f1b8:	bl	419e14 <xmalloc@@Base>
  41f1bc:	mov	x24, x0
  41f1c0:	mov	x0, x25
  41f1c4:	bl	419e14 <xmalloc@@Base>
  41f1c8:	ldur	x8, [x29, #-8]
  41f1cc:	mov	x25, x0
  41f1d0:	str	x8, [x24]
  41f1d4:	str	x23, [x0]
  41f1d8:	mov	w23, #0x1                   	// #1
  41f1dc:	cbz	x22, 41f220 <parse_file_seq@@Base+0x1330>
  41f1e0:	ldr	x8, [x22, #8]
  41f1e4:	sub	x0, x29, #0x8
  41f1e8:	stur	x8, [x29, #-8]
  41f1ec:	bl	41d8b0 <find_percent_cached@@Base>
  41f1f0:	cbz	x0, 41f260 <parse_file_seq@@Base+0x1370>
  41f1f4:	ldur	x8, [x29, #-8]
  41f1f8:	and	x9, x23, #0xffff
  41f1fc:	lsl	x9, x9, #3
  41f200:	add	w23, w23, #0x1
  41f204:	str	x8, [x24, x9]
  41f208:	str	x0, [x25, x9]
  41f20c:	ldr	x21, [x22]
  41f210:	mov	x0, x22
  41f214:	bl	406c60 <free@plt>
  41f218:	mov	x22, x21
  41f21c:	cbnz	x21, 41f1e0 <parse_file_seq@@Base+0x12f0>
  41f220:	ldur	w3, [x29, #-12]
  41f224:	mov	w6, #0x1                   	// #1
  41f228:	mov	x0, x24
  41f22c:	mov	x1, x25
  41f230:	mov	w2, w23
  41f234:	mov	x4, x19
  41f238:	mov	x5, x20
  41f23c:	bl	423348 <create_pattern_rule@@Base>
  41f240:	ldp	x20, x19, [sp, #128]
  41f244:	ldp	x22, x21, [sp, #112]
  41f248:	ldp	x24, x23, [sp, #96]
  41f24c:	ldp	x26, x25, [sp, #80]
  41f250:	ldp	x28, x27, [sp, #64]
  41f254:	ldp	x29, x30, [sp, #48]
  41f258:	add	sp, sp, #0x90
  41f25c:	ret
  41f260:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f264:	add	x1, x1, #0xb4e
  41f268:	mov	w2, #0x5                   	// #5
  41f26c:	bl	406dc0 <dcgettext@plt>
  41f270:	mov	x2, x0
  41f274:	ldr	x0, [sp, #8]
  41f278:	mov	x1, xzr
  41f27c:	bl	41aff0 <fatal@@Base>
  41f280:	ldr	x0, [x28]
  41f284:	bl	406750 <strlen@plt>
  41f288:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f28c:	mov	x19, x0
  41f290:	add	x1, x1, #0xbee
  41f294:	mov	w2, #0x5                   	// #5
  41f298:	mov	x0, xzr
  41f29c:	bl	406dc0 <dcgettext@plt>
  41f2a0:	ldr	x3, [x28]
  41f2a4:	mov	x2, x0
  41f2a8:	mov	x0, x24
  41f2ac:	mov	x1, x19
  41f2b0:	bl	41aff0 <fatal@@Base>
  41f2b4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f2b8:	add	x1, x1, #0xad5
  41f2bc:	mov	w2, #0x5                   	// #5
  41f2c0:	mov	x0, xzr
  41f2c4:	bl	406dc0 <dcgettext@plt>
  41f2c8:	mov	x2, x0
  41f2cc:	mov	x0, x20
  41f2d0:	mov	x1, xzr
  41f2d4:	bl	41aff0 <fatal@@Base>
  41f2d8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f2dc:	add	x1, x1, #0xb26
  41f2e0:	mov	w2, #0x5                   	// #5
  41f2e4:	mov	x0, xzr
  41f2e8:	bl	406dc0 <dcgettext@plt>
  41f2ec:	mov	x2, x0
  41f2f0:	mov	x0, x24
  41f2f4:	mov	x1, xzr
  41f2f8:	bl	41aff0 <fatal@@Base>
  41f2fc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f300:	add	x1, x1, #0xb00
  41f304:	mov	w2, #0x5                   	// #5
  41f308:	mov	x0, xzr
  41f30c:	b	41f26c <parse_file_seq@@Base+0x137c>
  41f310:	stp	x29, x30, [sp, #-96]!
  41f314:	stp	x28, x27, [sp, #16]
  41f318:	stp	x26, x25, [sp, #32]
  41f31c:	stp	x24, x23, [sp, #48]
  41f320:	stp	x22, x21, [sp, #64]
  41f324:	stp	x20, x19, [sp, #80]
  41f328:	mov	x29, sp
  41f32c:	sub	sp, sp, #0x10
  41f330:	mov	x19, x2
  41f334:	mov	x21, x1
  41f338:	cmp	x1, #0x4
  41f33c:	mov	x22, x0
  41f340:	b.eq	41f3d4 <parse_file_seq@@Base+0x14e4>  // b.none
  41f344:	cmp	x21, #0x6
  41f348:	b.eq	41f3b0 <parse_file_seq@@Base+0x14c0>  // b.none
  41f34c:	cmp	x21, #0x5
  41f350:	b.ne	41f410 <parse_file_seq@@Base+0x1520>  // b.any
  41f354:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f358:	add	x20, x20, #0xd9b
  41f35c:	mov	w2, #0x5                   	// #5
  41f360:	mov	x0, x20
  41f364:	mov	x1, x22
  41f368:	bl	4069f0 <strncmp@plt>
  41f36c:	cbz	w0, 41f420 <parse_file_seq@@Base+0x1530>
  41f370:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f374:	add	x20, x20, #0xdad
  41f378:	mov	w2, #0x5                   	// #5
  41f37c:	mov	x0, x20
  41f380:	mov	x1, x22
  41f384:	bl	4069f0 <strncmp@plt>
  41f388:	cbz	w0, 41f428 <parse_file_seq@@Base+0x1538>
  41f38c:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f390:	add	x20, x20, #0xdb8
  41f394:	mov	w2, #0x5                   	// #5
  41f398:	mov	x0, x20
  41f39c:	mov	x1, x22
  41f3a0:	mov	w25, #0x5                   	// #5
  41f3a4:	bl	4069f0 <strncmp@plt>
  41f3a8:	cbnz	w0, 41f410 <parse_file_seq@@Base+0x1520>
  41f3ac:	b	41f42c <parse_file_seq@@Base+0x153c>
  41f3b0:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f3b4:	add	x20, x20, #0xda1
  41f3b8:	mov	w2, #0x6                   	// #6
  41f3bc:	mov	x0, x20
  41f3c0:	mov	x1, x22
  41f3c4:	bl	4069f0 <strncmp@plt>
  41f3c8:	cbnz	w0, 41f410 <parse_file_seq@@Base+0x1520>
  41f3cc:	mov	w25, #0x1                   	// #1
  41f3d0:	b	41f42c <parse_file_seq@@Base+0x153c>
  41f3d4:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f3d8:	add	x20, x20, #0xda8
  41f3dc:	mov	w2, #0x4                   	// #4
  41f3e0:	mov	x0, x20
  41f3e4:	mov	x1, x22
  41f3e8:	bl	4069f0 <strncmp@plt>
  41f3ec:	cbz	w0, 41f418 <parse_file_seq@@Base+0x1528>
  41f3f0:	adrp	x20, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f3f4:	add	x20, x20, #0xdb3
  41f3f8:	mov	w2, #0x4                   	// #4
  41f3fc:	mov	x0, x20
  41f400:	mov	x1, x22
  41f404:	mov	w25, #0x4                   	// #4
  41f408:	bl	4069f0 <strncmp@plt>
  41f40c:	cbz	w0, 41f42c <parse_file_seq@@Base+0x153c>
  41f410:	mov	w0, #0xfffffffe            	// #-2
  41f414:	b	41f9bc <parse_file_seq@@Base+0x1acc>
  41f418:	mov	w25, #0x2                   	// #2
  41f41c:	b	41f42c <parse_file_seq@@Base+0x153c>
  41f420:	mov	w25, wzr
  41f424:	b	41f42c <parse_file_seq@@Base+0x153c>
  41f428:	mov	w25, #0x3                   	// #3
  41f42c:	adrp	x27, 43e000 <memcpy@GLIBC_2.17>
  41f430:	add	x22, x22, x21
  41f434:	add	x27, x27, #0xcf0
  41f438:	ldrb	w8, [x22], #1
  41f43c:	ldrh	w9, [x27, x8, lsl #1]
  41f440:	tst	w9, #0x6
  41f444:	b.ne	41f438 <parse_file_seq@@Base+0x1548>  // b.any
  41f448:	sub	x21, x22, #0x1
  41f44c:	cmp	w25, #0x4
  41f450:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  41f454:	b.eq	41f4a8 <parse_file_seq@@Base+0x15b8>  // b.none
  41f458:	cmp	w25, #0x5
  41f45c:	b.ne	41f4e0 <parse_file_seq@@Base+0x15f0>  // b.any
  41f460:	cbz	w8, 41f498 <parse_file_seq@@Base+0x15a8>
  41f464:	mov	x0, x20
  41f468:	bl	406750 <strlen@plt>
  41f46c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f470:	mov	x21, x0
  41f474:	add	x1, x1, #0xdbe
  41f478:	mov	w2, #0x5                   	// #5
  41f47c:	mov	x0, xzr
  41f480:	bl	406dc0 <dcgettext@plt>
  41f484:	mov	x2, x0
  41f488:	mov	x0, x19
  41f48c:	mov	x1, x21
  41f490:	mov	x3, x20
  41f494:	bl	41ae34 <error@@Base>
  41f498:	ldr	x8, [x24, #2392]
  41f49c:	ldr	w9, [x8]
  41f4a0:	cbnz	w9, 41f6f8 <parse_file_seq@@Base+0x1808>
  41f4a4:	b	41f9dc <parse_file_seq@@Base+0x1aec>
  41f4a8:	ldr	x8, [x24, #2392]
  41f4ac:	ldr	w23, [x8]
  41f4b0:	cbz	w23, 41f9dc <parse_file_seq@@Base+0x1aec>
  41f4b4:	ldr	x9, [x8, #16]
  41f4b8:	sub	w25, w23, #0x1
  41f4bc:	ldrb	w9, [x9, x25]
  41f4c0:	cbnz	w9, 41fa10 <parse_file_seq@@Base+0x1b20>
  41f4c4:	ldr	x9, [x8, #8]
  41f4c8:	ldrb	w10, [x9, x25]
  41f4cc:	cbz	w10, 41f63c <parse_file_seq@@Base+0x174c>
  41f4d0:	cmp	w10, #0x1
  41f4d4:	b.ne	41f644 <parse_file_seq@@Base+0x1754>  // b.any
  41f4d8:	mov	w10, wzr
  41f4dc:	b	41f640 <parse_file_seq@@Base+0x1750>
  41f4e0:	ldr	x8, [x24, #2392]
  41f4e4:	ldr	w9, [x8, #4]
  41f4e8:	cbnz	w9, 41f51c <parse_file_seq@@Base+0x162c>
  41f4ec:	mov	w9, #0x5                   	// #5
  41f4f0:	mov	w0, #0x5                   	// #5
  41f4f4:	str	w9, [x8, #4]
  41f4f8:	bl	419e14 <xmalloc@@Base>
  41f4fc:	ldr	x9, [x24, #2392]
  41f500:	ldr	w8, [x9, #4]
  41f504:	str	x0, [x9, #8]
  41f508:	mov	x0, x8
  41f50c:	bl	419e14 <xmalloc@@Base>
  41f510:	ldr	x8, [x24, #2392]
  41f514:	ldr	w9, [x8, #4]
  41f518:	str	x0, [x8, #16]
  41f51c:	ldr	w26, [x8]
  41f520:	add	w10, w26, #0x1
  41f524:	cmp	w10, w9
  41f528:	str	w10, [x8]
  41f52c:	b.ls	41f56c <parse_file_seq@@Base+0x167c>  // b.plast
  41f530:	ldr	x0, [x8, #8]
  41f534:	add	w1, w9, #0x5
  41f538:	str	w1, [x8, #4]
  41f53c:	bl	419de0 <xrealloc@@Base>
  41f540:	ldr	x9, [x24, #2392]
  41f544:	ldr	x8, [x9, #16]
  41f548:	ldr	w1, [x9, #4]
  41f54c:	str	x0, [x9, #8]
  41f550:	mov	x0, x8
  41f554:	bl	419de0 <xrealloc@@Base>
  41f558:	ldr	x8, [x24, #2392]
  41f55c:	str	x0, [x8, #16]
  41f560:	strb	wzr, [x0, x26]
  41f564:	cbnz	w26, 41f578 <parse_file_seq@@Base+0x1688>
  41f568:	b	41f598 <parse_file_seq@@Base+0x16a8>
  41f56c:	ldr	x0, [x8, #16]
  41f570:	strb	wzr, [x0, x26]
  41f574:	cbz	w26, 41f598 <parse_file_seq@@Base+0x16a8>
  41f578:	ldr	x8, [x8, #8]
  41f57c:	mov	x9, x26
  41f580:	mov	x10, x8
  41f584:	ldrb	w11, [x10]
  41f588:	cbnz	w11, 41f6a0 <parse_file_seq@@Base+0x17b0>
  41f58c:	subs	x9, x9, #0x1
  41f590:	add	x10, x10, #0x1
  41f594:	b.ne	41f584 <parse_file_seq@@Base+0x1694>  // b.any
  41f598:	cmp	w25, #0x1
  41f59c:	b.hi	41f5f4 <parse_file_seq@@Base+0x1704>  // b.pmore
  41f5a0:	mov	x0, x21
  41f5a4:	mov	x1, xzr
  41f5a8:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  41f5ac:	mov	x19, x0
  41f5b0:	bl	419ebc <end_of_token@@Base>
  41f5b4:	mov	x8, x0
  41f5b8:	ldrb	w9, [x8], #1
  41f5bc:	ldrh	w10, [x27, x9, lsl #1]
  41f5c0:	tst	w10, #0x6
  41f5c4:	b.ne	41f5b8 <parse_file_seq@@Base+0x16c8>  // b.any
  41f5c8:	cbnz	w9, 41f958 <parse_file_seq@@Base+0x1a68>
  41f5cc:	sub	x1, x0, x19
  41f5d0:	strb	wzr, [x0]
  41f5d4:	mov	x0, x19
  41f5d8:	bl	424110 <lookup_variable@@Base>
  41f5dc:	cbz	x0, 41f798 <parse_file_seq@@Base+0x18a8>
  41f5e0:	ldr	x8, [x0, #8]
  41f5e4:	ldrb	w8, [x8]
  41f5e8:	cmp	w8, #0x0
  41f5ec:	cset	w8, ne  // ne = any
  41f5f0:	b	41f79c <parse_file_seq@@Base+0x18ac>
  41f5f4:	ldrb	w8, [x21]
  41f5f8:	mov	w9, #0x2c                  	// #44
  41f5fc:	cmp	w8, #0x28
  41f600:	csel	w28, w9, w8, eq  // eq = none
  41f604:	cmp	w28, #0x2c
  41f608:	b.eq	41f73c <parse_file_seq@@Base+0x184c>  // b.none
  41f60c:	cmp	w28, #0x27
  41f610:	b.eq	41f61c <parse_file_seq@@Base+0x172c>  // b.none
  41f614:	cmp	w28, #0x22
  41f618:	b.ne	41f958 <parse_file_seq@@Base+0x1a68>  // b.any
  41f61c:	ldrb	w8, [x21, #1]!
  41f620:	cbz	w8, 41f62c <parse_file_seq@@Base+0x173c>
  41f624:	cmp	w8, w28
  41f628:	b.ne	41f61c <parse_file_seq@@Base+0x172c>  // b.any
  41f62c:	cbz	w8, 41f958 <parse_file_seq@@Base+0x1a68>
  41f630:	mov	x23, x21
  41f634:	stur	wzr, [x29, #-4]
  41f638:	b	41f7e0 <parse_file_seq@@Base+0x18f0>
  41f63c:	mov	w10, #0x2                   	// #2
  41f640:	strb	w10, [x9, x25]
  41f644:	ldrb	w9, [x21]
  41f648:	cbz	w9, 41f690 <parse_file_seq@@Base+0x17a0>
  41f64c:	mov	x8, x21
  41f650:	ldrb	w9, [x8, #1]!
  41f654:	ldrh	w9, [x27, x9, lsl #1]
  41f658:	tst	w9, #0x7
  41f65c:	b.eq	41f650 <parse_file_seq@@Base+0x1760>  // b.none
  41f660:	sub	x22, x8, x21
  41f664:	cmp	x22, #0x5
  41f668:	b.eq	41f6ac <parse_file_seq@@Base+0x17bc>  // b.none
  41f66c:	cmp	x22, #0x4
  41f670:	b.ne	41f6c4 <parse_file_seq@@Base+0x17d4>  // b.any
  41f674:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f678:	add	x0, x0, #0xdb3
  41f67c:	mov	w2, #0x4                   	// #4
  41f680:	mov	x1, x21
  41f684:	bl	4069f0 <strncmp@plt>
  41f688:	cbnz	w0, 41f6c4 <parse_file_seq@@Base+0x17d4>
  41f68c:	b	41f704 <parse_file_seq@@Base+0x1814>
  41f690:	ldr	x8, [x8, #16]
  41f694:	mov	w9, #0x1                   	// #1
  41f698:	strb	w9, [x8, x25]
  41f69c:	b	41f988 <parse_file_seq@@Base+0x1a98>
  41f6a0:	mov	w0, #0x1                   	// #1
  41f6a4:	strb	w0, [x8, x26]
  41f6a8:	b	41f9bc <parse_file_seq@@Base+0x1acc>
  41f6ac:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f6b0:	add	x0, x0, #0xdb8
  41f6b4:	mov	w2, #0x5                   	// #5
  41f6b8:	mov	x1, x21
  41f6bc:	bl	4069f0 <strncmp@plt>
  41f6c0:	cbz	w0, 41f704 <parse_file_seq@@Base+0x1814>
  41f6c4:	mov	x0, x21
  41f6c8:	mov	x1, x22
  41f6cc:	mov	x2, x19
  41f6d0:	bl	41f310 <parse_file_seq@@Base+0x1420>
  41f6d4:	tbnz	w0, #31, 41f704 <parse_file_seq@@Base+0x1814>
  41f6d8:	ldr	x8, [x24, #2392]
  41f6dc:	ldr	x9, [x8, #8]
  41f6e0:	ldrb	w10, [x9, x25]
  41f6e4:	cmp	w10, #0x1
  41f6e8:	b.hi	41f6f4 <parse_file_seq@@Base+0x1804>  // b.pmore
  41f6ec:	ldrb	w10, [x9, x23]
  41f6f0:	strb	w10, [x9, x25]
  41f6f4:	ldr	w9, [x8]
  41f6f8:	sub	w9, w9, #0x1
  41f6fc:	str	w9, [x8]
  41f700:	b	41f988 <parse_file_seq@@Base+0x1a98>
  41f704:	mov	x0, x20
  41f708:	bl	406750 <strlen@plt>
  41f70c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f710:	mov	x21, x0
  41f714:	add	x1, x1, #0xdbe
  41f718:	mov	w2, #0x5                   	// #5
  41f71c:	mov	x0, xzr
  41f720:	bl	406dc0 <dcgettext@plt>
  41f724:	mov	x2, x0
  41f728:	mov	x0, x19
  41f72c:	mov	x1, x21
  41f730:	mov	x3, x20
  41f734:	bl	41ae34 <error@@Base>
  41f738:	b	41f988 <parse_file_seq@@Base+0x1a98>
  41f73c:	mov	w8, wzr
  41f740:	mov	x23, x22
  41f744:	ldrb	w9, [x23]
  41f748:	cmp	w9, #0x28
  41f74c:	b.ne	41f764 <parse_file_seq@@Base+0x1874>  // b.any
  41f750:	b	41f784 <parse_file_seq@@Base+0x1894>
  41f754:	sub	w8, w8, #0x1
  41f758:	ldrb	w9, [x23, #1]!
  41f75c:	cmp	w9, #0x28
  41f760:	b.eq	41f784 <parse_file_seq@@Base+0x1894>  // b.none
  41f764:	cmp	w9, #0x29
  41f768:	b.eq	41f754 <parse_file_seq@@Base+0x1864>  // b.none
  41f76c:	cbz	w9, 41f958 <parse_file_seq@@Base+0x1a68>
  41f770:	cmp	w8, #0x0
  41f774:	b.gt	41f788 <parse_file_seq@@Base+0x1898>
  41f778:	cmp	w9, #0x2c
  41f77c:	b.ne	41f788 <parse_file_seq@@Base+0x1898>  // b.any
  41f780:	b	41f7c4 <parse_file_seq@@Base+0x18d4>
  41f784:	add	w8, w8, #0x1
  41f788:	ldrb	w9, [x23, #1]!
  41f78c:	cmp	w9, #0x28
  41f790:	b.ne	41f764 <parse_file_seq@@Base+0x1874>  // b.any
  41f794:	b	41f784 <parse_file_seq@@Base+0x1894>
  41f798:	mov	w8, wzr
  41f79c:	ldr	x9, [x24, #2392]
  41f7a0:	cmp	w25, #0x1
  41f7a4:	cset	w10, eq  // eq = none
  41f7a8:	cmp	w8, w10
  41f7ac:	ldr	x9, [x9, #8]
  41f7b0:	cset	w8, eq  // eq = none
  41f7b4:	mov	x0, x19
  41f7b8:	strb	w8, [x9, x26]
  41f7bc:	bl	406c60 <free@plt>
  41f7c0:	b	41f988 <parse_file_seq@@Base+0x1a98>
  41f7c4:	add	x21, x23, #0x1
  41f7c8:	ldurb	w8, [x21, #-2]
  41f7cc:	sub	x21, x21, #0x1
  41f7d0:	ldrh	w8, [x27, x8, lsl #1]
  41f7d4:	tbnz	w8, #1, 41f7c8 <parse_file_seq@@Base+0x18d8>
  41f7d8:	mov	w8, #0x1                   	// #1
  41f7dc:	stur	w8, [x29, #-4]
  41f7e0:	mov	x0, x22
  41f7e4:	strb	wzr, [x21]
  41f7e8:	bl	40a7e8 <variable_expand@@Base>
  41f7ec:	mov	x22, x0
  41f7f0:	bl	406750 <strlen@plt>
  41f7f4:	add	x9, x0, #0x10
  41f7f8:	mov	x8, sp
  41f7fc:	and	x9, x9, #0xfffffffffffffff0
  41f800:	sub	x21, x8, x9
  41f804:	add	x2, x0, #0x1
  41f808:	mov	sp, x21
  41f80c:	mov	x0, x21
  41f810:	mov	x1, x22
  41f814:	bl	406710 <memcpy@plt>
  41f818:	cmp	w28, #0x2c
  41f81c:	b.eq	41f834 <parse_file_seq@@Base+0x1944>  // b.none
  41f820:	ldrb	w8, [x23, #1]!
  41f824:	ldrh	w8, [x27, x8, lsl #1]
  41f828:	tst	w8, #0x6
  41f82c:	b.ne	41f820 <parse_file_seq@@Base+0x1930>  // b.any
  41f830:	b	41f838 <parse_file_seq@@Base+0x1948>
  41f834:	add	x23, x23, #0x1
  41f838:	ldur	w8, [x29, #-4]
  41f83c:	tbnz	w8, #0, 41f85c <parse_file_seq@@Base+0x196c>
  41f840:	ldrb	w8, [x23]
  41f844:	cmp	w8, #0x22
  41f848:	b.eq	41f8b4 <parse_file_seq@@Base+0x19c4>  // b.none
  41f84c:	cmp	w8, #0x27
  41f850:	b.eq	41f8b4 <parse_file_seq@@Base+0x19c4>  // b.none
  41f854:	cmp	w8, #0x29
  41f858:	b.ne	41f958 <parse_file_seq@@Base+0x1a68>  // b.any
  41f85c:	mov	x0, x23
  41f860:	bl	419edc <next_token@@Base>
  41f864:	mov	x22, x0
  41f868:	mov	w8, wzr
  41f86c:	mov	x23, x0
  41f870:	ldrb	w9, [x23]
  41f874:	cmp	w9, #0x28
  41f878:	b.ne	41f88c <parse_file_seq@@Base+0x199c>  // b.any
  41f87c:	add	w8, w8, #0x1
  41f880:	ldrb	w9, [x23, #1]!
  41f884:	cmp	w9, #0x28
  41f888:	b.eq	41f87c <parse_file_seq@@Base+0x198c>  // b.none
  41f88c:	cmp	w9, #0x29
  41f890:	b.eq	41f89c <parse_file_seq@@Base+0x19ac>  // b.none
  41f894:	cbnz	w9, 41f8a4 <parse_file_seq@@Base+0x19b4>
  41f898:	b	41f958 <parse_file_seq@@Base+0x1a68>
  41f89c:	subs	w8, w8, #0x1
  41f8a0:	b.lt	41f8cc <parse_file_seq@@Base+0x19dc>  // b.tstop
  41f8a4:	ldrb	w9, [x23, #1]!
  41f8a8:	cmp	w9, #0x28
  41f8ac:	b.ne	41f88c <parse_file_seq@@Base+0x199c>  // b.any
  41f8b0:	b	41f87c <parse_file_seq@@Base+0x198c>
  41f8b4:	add	x22, x23, #0x1
  41f8b8:	ldrb	w9, [x23, #1]!
  41f8bc:	cbz	w9, 41f8c8 <parse_file_seq@@Base+0x19d8>
  41f8c0:	cmp	w8, w9
  41f8c4:	b.ne	41f8b8 <parse_file_seq@@Base+0x19c8>  // b.any
  41f8c8:	cbz	w9, 41f958 <parse_file_seq@@Base+0x1a68>
  41f8cc:	strb	wzr, [x23], #1
  41f8d0:	ldrb	w8, [x23], #1
  41f8d4:	ldrh	w9, [x27, x8, lsl #1]
  41f8d8:	tst	w9, #0x6
  41f8dc:	b.ne	41f8d0 <parse_file_seq@@Base+0x19e0>  // b.any
  41f8e0:	cbz	w8, 41f918 <parse_file_seq@@Base+0x1a28>
  41f8e4:	mov	x0, x20
  41f8e8:	bl	406750 <strlen@plt>
  41f8ec:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f8f0:	mov	x23, x0
  41f8f4:	add	x1, x1, #0xdbe
  41f8f8:	mov	w2, #0x5                   	// #5
  41f8fc:	mov	x0, xzr
  41f900:	bl	406dc0 <dcgettext@plt>
  41f904:	mov	x2, x0
  41f908:	mov	x0, x19
  41f90c:	mov	x1, x23
  41f910:	mov	x3, x20
  41f914:	bl	41ae34 <error@@Base>
  41f918:	mov	x0, x22
  41f91c:	bl	40a7e8 <variable_expand@@Base>
  41f920:	cmp	x21, x0
  41f924:	b.eq	41f960 <parse_file_seq@@Base+0x1a70>  // b.none
  41f928:	ldrb	w8, [x21]
  41f92c:	ldrb	w9, [x0]
  41f930:	cmp	w8, w9
  41f934:	b.ne	41f968 <parse_file_seq@@Base+0x1a78>  // b.any
  41f938:	cbz	w8, 41f960 <parse_file_seq@@Base+0x1a70>
  41f93c:	add	x8, x21, #0x1
  41f940:	add	x1, x0, #0x1
  41f944:	mov	x0, x8
  41f948:	bl	406c10 <strcmp@plt>
  41f94c:	cmp	w0, #0x0
  41f950:	cset	w8, eq  // eq = none
  41f954:	b	41f96c <parse_file_seq@@Base+0x1a7c>
  41f958:	mov	w0, #0xffffffff            	// #-1
  41f95c:	b	41f9bc <parse_file_seq@@Base+0x1acc>
  41f960:	mov	w8, #0x1                   	// #1
  41f964:	b	41f96c <parse_file_seq@@Base+0x1a7c>
  41f968:	mov	w8, wzr
  41f96c:	ldr	x9, [x24, #2392]
  41f970:	cmp	w25, #0x3
  41f974:	cset	w10, eq  // eq = none
  41f978:	cmp	w8, w10
  41f97c:	ldr	x9, [x9, #8]
  41f980:	cset	w8, eq  // eq = none
  41f984:	strb	w8, [x9, x26]
  41f988:	ldr	x9, [x24, #2392]
  41f98c:	ldr	w8, [x9]
  41f990:	cbz	w8, 41f9b0 <parse_file_seq@@Base+0x1ac0>
  41f994:	ldr	x9, [x9, #8]
  41f998:	mov	x10, xzr
  41f99c:	ldrb	w11, [x9, x10]
  41f9a0:	cbnz	w11, 41f9b8 <parse_file_seq@@Base+0x1ac8>
  41f9a4:	add	x10, x10, #0x1
  41f9a8:	cmp	x10, x8
  41f9ac:	b.cc	41f99c <parse_file_seq@@Base+0x1aac>  // b.lo, b.ul, b.last
  41f9b0:	mov	w0, wzr
  41f9b4:	b	41f9bc <parse_file_seq@@Base+0x1acc>
  41f9b8:	mov	w0, #0x1                   	// #1
  41f9bc:	mov	sp, x29
  41f9c0:	ldp	x20, x19, [sp, #80]
  41f9c4:	ldp	x22, x21, [sp, #64]
  41f9c8:	ldp	x24, x23, [sp, #48]
  41f9cc:	ldp	x26, x25, [sp, #32]
  41f9d0:	ldp	x28, x27, [sp, #16]
  41f9d4:	ldp	x29, x30, [sp], #96
  41f9d8:	ret
  41f9dc:	mov	x0, x20
  41f9e0:	bl	406750 <strlen@plt>
  41f9e4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41f9e8:	mov	x21, x0
  41f9ec:	add	x1, x1, #0xde3
  41f9f0:	mov	w2, #0x5                   	// #5
  41f9f4:	mov	x0, xzr
  41f9f8:	bl	406dc0 <dcgettext@plt>
  41f9fc:	mov	x2, x0
  41fa00:	mov	x0, x19
  41fa04:	mov	x1, x21
  41fa08:	mov	x3, x20
  41fa0c:	bl	41aff0 <fatal@@Base>
  41fa10:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41fa14:	add	x1, x1, #0xdf3
  41fa18:	mov	w2, #0x5                   	// #5
  41fa1c:	mov	x0, xzr
  41fa20:	bl	406dc0 <dcgettext@plt>
  41fa24:	mov	x2, x0
  41fa28:	mov	x0, x19
  41fa2c:	mov	x1, xzr
  41fa30:	bl	41aff0 <fatal@@Base>
  41fa34:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41fa38:	add	x8, x8, #0xcf0
  41fa3c:	ldrb	w13, [x0], #1
  41fa40:	ldrh	w9, [x8, x13, lsl #1]
  41fa44:	tbnz	w9, #1, 41fa3c <parse_file_seq@@Base+0x1b4c>
  41fa48:	cmp	w13, #0x3f
  41fa4c:	b.hi	41fab4 <parse_file_seq@@Base+0x1bc4>  // b.pmore
  41fa50:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41fa54:	add	x8, x8, #0x79a
  41fa58:	adr	x9, 41fa68 <parse_file_seq@@Base+0x1b78>
  41fa5c:	ldrb	w10, [x8, x13]
  41fa60:	add	x9, x9, x10, lsl #2
  41fa64:	br	x9
  41fa68:	ldrb	w8, [x0]
  41fa6c:	cmp	w8, #0x3d
  41fa70:	b.ne	41fab4 <parse_file_seq@@Base+0x1bc4>  // b.any
  41fa74:	add	x9, x0, #0x1
  41fa78:	mov	w8, #0x7                   	// #7
  41fa7c:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fa80:	mov	w8, #0x1                   	// #1
  41fa84:	mov	x9, x0
  41fa88:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fa8c:	ldrb	w8, [x0]
  41fa90:	cmp	w8, #0x3a
  41fa94:	b.ne	41fab4 <parse_file_seq@@Base+0x1bc4>  // b.any
  41fa98:	mov	x9, x0
  41fa9c:	ldrb	w8, [x9, #1]!
  41faa0:	mov	w10, #0x8                   	// #8
  41faa4:	cmp	w8, #0x3a
  41faa8:	cinc	w8, w10, eq  // eq = none
  41faac:	cinc	x9, x9, eq  // eq = none
  41fab0:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fab4:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41fab8:	mov	x11, #0xb                   	// #11
  41fabc:	mov	w8, #0x2                   	// #2
  41fac0:	add	x9, x9, #0x7da
  41fac4:	mov	w10, #0x1                   	// #1
  41fac8:	movk	x11, #0x4, lsl #32
  41facc:	mov	x12, x0
  41fad0:	b	41fae4 <parse_file_seq@@Base+0x1bf4>
  41fad4:	ldrb	w13, [x12]
  41fad8:	cmp	w13, #0x3a
  41fadc:	b.eq	41fc44 <parse_file_seq@@Base+0x1d54>  // b.none
  41fae0:	ldrb	w13, [x12], #1
  41fae4:	and	w14, w13, #0xff
  41fae8:	cmp	w14, #0x5c
  41faec:	and	x13, x13, #0xff
  41faf0:	b.hi	41fae0 <parse_file_seq@@Base+0x1bf0>  // b.pmore
  41faf4:	adr	x14, 41fad4 <parse_file_seq@@Base+0x1be4>
  41faf8:	ldrb	w15, [x9, x13]
  41fafc:	add	x14, x14, x15, lsl #2
  41fb00:	br	x14
  41fb04:	ldrb	w13, [x12]
  41fb08:	cmp	w13, #0x3d
  41fb0c:	b.ne	41fae0 <parse_file_seq@@Base+0x1bf0>  // b.any
  41fb10:	b	41fc44 <parse_file_seq@@Base+0x1d54>
  41fb14:	mov	x14, x12
  41fb18:	ldrb	w13, [x14], #1
  41fb1c:	cmp	w13, #0x27
  41fb20:	b.le	41fb6c <parse_file_seq@@Base+0x1c7c>
  41fb24:	cmp	w13, #0x28
  41fb28:	b.eq	41fb80 <parse_file_seq@@Base+0x1c90>  // b.none
  41fb2c:	cmp	w13, #0x7b
  41fb30:	b.ne	41fbd4 <parse_file_seq@@Base+0x1ce4>  // b.any
  41fb34:	mov	w8, #0x7d                  	// #125
  41fb38:	ldrb	w15, [x14]
  41fb3c:	cbnz	w15, 41fb8c <parse_file_seq@@Base+0x1c9c>
  41fb40:	b	41fbd4 <parse_file_seq@@Base+0x1ce4>
  41fb44:	ldrb	w13, [x12]
  41fb48:	sub	w13, w13, #0x3a
  41fb4c:	cmp	w13, #0x22
  41fb50:	b.hi	41fae0 <parse_file_seq@@Base+0x1bf0>  // b.pmore
  41fb54:	lsl	x13, x10, x13
  41fb58:	tst	x13, x11
  41fb5c:	b.eq	41fae0 <parse_file_seq@@Base+0x1bf0>  // b.none
  41fb60:	add	x12, x12, #0x1
  41fb64:	ldrb	w13, [x12], #1
  41fb68:	b	41fae4 <parse_file_seq@@Base+0x1bf4>
  41fb6c:	cmp	w13, #0x24
  41fb70:	b.ne	41fbd0 <parse_file_seq@@Base+0x1ce0>  // b.any
  41fb74:	mov	x12, x14
  41fb78:	ldrb	w13, [x12], #1
  41fb7c:	b	41fae4 <parse_file_seq@@Base+0x1bf4>
  41fb80:	mov	w8, #0x29                  	// #41
  41fb84:	ldrb	w15, [x14]
  41fb88:	cbz	w15, 41fbd4 <parse_file_seq@@Base+0x1ce4>
  41fb8c:	mov	w14, wzr
  41fb90:	add	x12, x12, #0x2
  41fb94:	b	41fba4 <parse_file_seq@@Base+0x1cb4>
  41fb98:	add	w14, w14, #0x1
  41fb9c:	ldrb	w15, [x12], #1
  41fba0:	cbz	w15, 41fbc0 <parse_file_seq@@Base+0x1cd0>
  41fba4:	cmp	w13, w15, uxtb
  41fba8:	b.eq	41fb98 <parse_file_seq@@Base+0x1ca8>  // b.none
  41fbac:	cmp	w8, w15, uxtb
  41fbb0:	b.ne	41fb9c <parse_file_seq@@Base+0x1cac>  // b.any
  41fbb4:	subs	w14, w14, #0x1
  41fbb8:	b.ge	41fb9c <parse_file_seq@@Base+0x1cac>  // b.tcont
  41fbbc:	b	41fbc4 <parse_file_seq@@Base+0x1cd4>
  41fbc0:	sub	x12, x12, #0x1
  41fbc4:	ldrb	w13, [x12], #1
  41fbc8:	mov	w8, #0x3                   	// #3
  41fbcc:	b	41fae4 <parse_file_seq@@Base+0x1bf4>
  41fbd0:	cbz	w13, 41fc40 <parse_file_seq@@Base+0x1d50>
  41fbd4:	mov	x12, x14
  41fbd8:	ldrb	w13, [x12], #1
  41fbdc:	mov	w8, #0x3                   	// #3
  41fbe0:	b	41fae4 <parse_file_seq@@Base+0x1bf4>
  41fbe4:	ldrb	w8, [x0]
  41fbe8:	cmp	w8, #0x3a
  41fbec:	b.eq	41fc1c <parse_file_seq@@Base+0x1d2c>  // b.none
  41fbf0:	cmp	w8, #0x3d
  41fbf4:	b.eq	41fa74 <parse_file_seq@@Base+0x1b84>  // b.none
  41fbf8:	mov	w8, #0x4                   	// #4
  41fbfc:	mov	x9, x0
  41fc00:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fc04:	mov	w8, #0x6                   	// #6
  41fc08:	mov	x9, x0
  41fc0c:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fc10:	mov	w8, #0x7                   	// #7
  41fc14:	mov	x9, x0
  41fc18:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fc1c:	mov	x9, x0
  41fc20:	ldrb	w8, [x9, #2]!
  41fc24:	mov	w10, #0x5                   	// #5
  41fc28:	mov	w11, #0x7                   	// #7
  41fc2c:	sub	x12, x9, #0x1
  41fc30:	cmp	w8, #0x3d
  41fc34:	csel	w8, w11, w10, eq  // eq = none
  41fc38:	csel	x9, x9, x12, eq  // eq = none
  41fc3c:	b	41fc48 <parse_file_seq@@Base+0x1d58>
  41fc40:	mov	x12, x14
  41fc44:	sub	x9, x12, #0x1
  41fc48:	sub	x10, x0, #0x1
  41fc4c:	cbz	x1, 41fc54 <parse_file_seq@@Base+0x1d64>
  41fc50:	str	x10, [x1]
  41fc54:	cbz	x2, 41fc60 <parse_file_seq@@Base+0x1d70>
  41fc58:	sub	x9, x9, x10
  41fc5c:	str	x9, [x2]
  41fc60:	mov	w0, w8
  41fc64:	ret

000000000041fc68 <update_goal_chain@@Base>:
  41fc68:	sub	sp, sp, #0x80
  41fc6c:	adrp	x8, 442000 <just_print_flag@@Base>
  41fc70:	ldr	w8, [x8, #204]
  41fc74:	stp	x29, x30, [sp, #32]
  41fc78:	stp	x26, x25, [sp, #64]
  41fc7c:	add	x29, sp, #0x20
  41fc80:	adrp	x25, 43e000 <memcpy@GLIBC_2.17>
  41fc84:	stur	w8, [x29, #-12]
  41fc88:	ldr	w8, [x25, #3260]
  41fc8c:	adrp	x9, 442000 <just_print_flag@@Base>
  41fc90:	stp	x28, x27, [sp, #48]
  41fc94:	stp	x24, x23, [sp, #80]
  41fc98:	stur	w8, [x29, #-8]
  41fc9c:	ldr	w8, [x9]
  41fca0:	stp	x22, x21, [sp, #96]
  41fca4:	stp	x20, x19, [sp, #112]
  41fca8:	mov	x20, x0
  41fcac:	stur	w8, [x29, #-4]
  41fcb0:	bl	41a08c <copy_dep_chain@@Base>
  41fcb4:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  41fcb8:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  41fcbc:	add	x9, x9, #0x650
  41fcc0:	ldr	w8, [x24, #3300]
  41fcc4:	ldr	w10, [x9]
  41fcc8:	mov	w27, #0x1                   	// #1
  41fccc:	cmp	w8, #0x0
  41fcd0:	add	w10, w10, #0x1
  41fcd4:	csel	x11, xzr, x20, eq  // eq = none
  41fcd8:	str	w10, [x9]
  41fcdc:	str	x11, [x9, #8]
  41fce0:	cbz	x0, 420064 <update_goal_chain@@Base+0x3fc>
  41fce4:	mov	x21, x0
  41fce8:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  41fcec:	mov	w20, #0x1                   	// #1
  41fcf0:	b	41fd0c <update_goal_chain@@Base+0xa4>
  41fcf4:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  41fcf8:	ldr	w8, [x9, #1616]
  41fcfc:	add	w8, w8, #0x1
  41fd00:	str	w8, [x9, #1616]
  41fd04:	ldr	x21, [sp]
  41fd08:	cbz	x21, 42001c <update_goal_chain@@Base+0x3b4>
  41fd0c:	bl	41454c <start_waiting_jobs@@Base>
  41fd10:	mov	w0, #0x1                   	// #1
  41fd14:	mov	w1, wzr
  41fd18:	bl	412c28 <reap_children@@Base>
  41fd1c:	mov	x10, xzr
  41fd20:	str	x21, [sp]
  41fd24:	b	41fd3c <update_goal_chain@@Base+0xd4>
  41fd28:	cbz	w26, 41ff20 <update_goal_chain@@Base+0x2b8>
  41fd2c:	ldr	x22, [x21]
  41fd30:	mov	x10, x21
  41fd34:	mov	x21, x22
  41fd38:	cbz	x22, 41fcf4 <update_goal_chain@@Base+0x8c>
  41fd3c:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  41fd40:	str	x21, [x8, #1632]
  41fd44:	ldr	x8, [x21, #16]
  41fd48:	str	x10, [sp, #8]
  41fd4c:	ldr	x9, [x8, #104]
  41fd50:	cmp	x9, #0x0
  41fd54:	csel	x9, x8, x9, eq  // eq = none
  41fd58:	cbz	x9, 41ff20 <update_goal_chain@@Base+0x2b8>
  41fd5c:	mov	w26, wzr
  41fd60:	b	41fd9c <update_goal_chain@@Base+0x134>
  41fd64:	mov	w20, w10
  41fd68:	ldr	x9, [x22, #56]
  41fd6c:	bic	w8, w27, w8, lsr #10
  41fd70:	orr	w26, w8, w26
  41fd74:	cbnz	x9, 41fd9c <update_goal_chain@@Base+0x134>
  41fd78:	b	41fd28 <update_goal_chain@@Base+0xc0>
  41fd7c:	mov	x10, x22
  41fd80:	and	w11, w8, #0xfffeffff
  41fd84:	str	w11, [x9]
  41fd88:	mov	x22, x10
  41fd8c:	ldr	x9, [x22, #56]
  41fd90:	bic	w8, w27, w8, lsr #10
  41fd94:	orr	w26, w8, w26
  41fd98:	cbz	x9, 41fd28 <update_goal_chain@@Base+0xc0>
  41fd9c:	ldrh	w8, [x21, #32]
  41fda0:	ldr	w10, [x9, #136]
  41fda4:	ubfx	w8, w8, #2, #1
  41fda8:	bfi	w10, w8, #16, #1
  41fdac:	str	w10, [x9, #136]
  41fdb0:	mov	x23, x9
  41fdb4:	ldr	x9, [x9, #72]
  41fdb8:	cbnz	x9, 41fdb0 <update_goal_chain@@Base+0x148>
  41fdbc:	ldr	w8, [x24, #3300]
  41fdc0:	cbz	w8, 41fe00 <update_goal_chain@@Base+0x198>
  41fdc4:	ldrb	w9, [x23, #137]
  41fdc8:	tbnz	w9, #4, 41fde4 <update_goal_chain@@Base+0x17c>
  41fdcc:	adrp	x9, 442000 <just_print_flag@@Base>
  41fdd0:	str	wzr, [x9]
  41fdd4:	adrp	x9, 442000 <just_print_flag@@Base>
  41fdd8:	str	wzr, [x25, #3260]
  41fddc:	str	wzr, [x9, #204]
  41fde0:	b	41fe00 <update_goal_chain@@Base+0x198>
  41fde4:	ldur	w10, [x29, #-12]
  41fde8:	adrp	x9, 442000 <just_print_flag@@Base>
  41fdec:	str	w10, [x9, #204]
  41fdf0:	ldp	w9, w10, [x29, #-8]
  41fdf4:	str	w9, [x25, #3260]
  41fdf8:	adrp	x9, 442000 <just_print_flag@@Base>
  41fdfc:	str	w10, [x9]
  41fe00:	ldr	w19, [x28, #1608]
  41fe04:	cmp	w8, #0x0
  41fe08:	cset	w1, ne  // ne = any
  41fe0c:	mov	x0, x23
  41fe10:	bl	420070 <update_goal_chain@@Base+0x408>
  41fe14:	mov	x22, x23
  41fe18:	ldr	x23, [x23, #72]
  41fe1c:	cbnz	x23, 41fe14 <update_goal_chain@@Base+0x1ac>
  41fe20:	ldr	w8, [x28, #1608]
  41fe24:	cmp	w8, w19
  41fe28:	b.ls	41fe38 <update_goal_chain@@Base+0x1d0>  // b.plast
  41fe2c:	ldrh	w8, [x21, #32]
  41fe30:	orr	w8, w8, #0x100
  41fe34:	strh	w8, [x21, #32]
  41fe38:	mov	x9, x22
  41fe3c:	cbz	w0, 41fe50 <update_goal_chain@@Base+0x1e8>
  41fe40:	ldr	w8, [x9, #136]!
  41fe44:	cmp	w20, #0x1
  41fe48:	b.hi	41fd7c <update_goal_chain@@Base+0x114>  // b.pmore
  41fe4c:	b	41fe60 <update_goal_chain@@Base+0x1f8>
  41fe50:	ldr	w8, [x9, #136]!
  41fe54:	cmp	w20, #0x1
  41fe58:	b.hi	41fd7c <update_goal_chain@@Base+0x114>  // b.pmore
  41fe5c:	tbz	w8, #10, 41fd7c <update_goal_chain@@Base+0x114>
  41fe60:	ands	w10, w8, #0x3
  41fe64:	b.eq	41fe90 <update_goal_chain@@Base+0x228>  // b.none
  41fe68:	adrp	x11, 442000 <just_print_flag@@Base>
  41fe6c:	ldr	w13, [x25, #3260]
  41fe70:	ldr	w11, [x11, #4]
  41fe74:	ldr	w12, [x24, #3300]
  41fe78:	and	w14, w8, #0xfffeffff
  41fe7c:	str	w14, [x9]
  41fe80:	cbz	w13, 41fd64 <update_goal_chain@@Base+0xfc>
  41fe84:	orr	w9, w12, w11
  41fe88:	cbnz	w9, 41fd64 <update_goal_chain@@Base+0xfc>
  41fe8c:	b	41ff30 <update_goal_chain@@Base+0x2c8>
  41fe90:	ldr	w8, [x24, #3300]
  41fe94:	ldr	x0, [x22, #112]
  41fe98:	cbz	w8, 41feac <update_goal_chain@@Base+0x244>
  41fe9c:	cbnz	x0, 41febc <update_goal_chain@@Base+0x254>
  41fea0:	mov	x0, x22
  41fea4:	mov	w1, wzr
  41fea8:	b	41feb8 <update_goal_chain@@Base+0x250>
  41feac:	cbnz	x0, 41febc <update_goal_chain@@Base+0x254>
  41feb0:	mov	w1, #0x1                   	// #1
  41feb4:	mov	x0, x22
  41feb8:	bl	420fec <f_mtime@@Base>
  41febc:	mov	x10, x22
  41fec0:	ldr	x22, [x22, #72]
  41fec4:	cbnz	x22, 41febc <update_goal_chain@@Base+0x254>
  41fec8:	mov	x9, x10
  41fecc:	ldr	w8, [x9, #136]!
  41fed0:	tbz	w8, #10, 41fd80 <update_goal_chain@@Base+0x118>
  41fed4:	ldrb	w11, [x21, #33]
  41fed8:	tbz	w11, #0, 41fd80 <update_goal_chain@@Base+0x118>
  41fedc:	ldr	x11, [x10, #120]
  41fee0:	cmp	x0, x11
  41fee4:	b.eq	41fd80 <update_goal_chain@@Base+0x118>  // b.none
  41fee8:	ldr	w11, [x24, #3300]
  41feec:	cbz	w11, 41ff18 <update_goal_chain@@Base+0x2b0>
  41fef0:	adrp	x11, 442000 <just_print_flag@@Base>
  41fef4:	ldr	w11, [x11]
  41fef8:	ldr	w12, [x25, #3260]
  41fefc:	and	w13, w8, #0xfffeffff
  41ff00:	str	w13, [x9]
  41ff04:	orr	w11, w12, w11
  41ff08:	cmp	w11, #0x0
  41ff0c:	csel	w20, wzr, w20, eq  // eq = none
  41ff10:	tbz	w8, #16, 41fd88 <update_goal_chain@@Base+0x120>
  41ff14:	b	420000 <update_goal_chain@@Base+0x398>
  41ff18:	mov	w20, wzr
  41ff1c:	b	41fd80 <update_goal_chain@@Base+0x118>
  41ff20:	mov	w23, #0x1                   	// #1
  41ff24:	ldr	w8, [x24, #3300]
  41ff28:	cbnz	w8, 41ffc0 <update_goal_chain@@Base+0x358>
  41ff2c:	b	41ff40 <update_goal_chain@@Base+0x2d8>
  41ff30:	mov	w23, wzr
  41ff34:	mov	w20, w10
  41ff38:	ldr	w8, [x24, #3300]
  41ff3c:	cbnz	w8, 41ffc0 <update_goal_chain@@Base+0x358>
  41ff40:	ldr	x26, [x21, #16]
  41ff44:	ldr	w22, [x26, #136]
  41ff48:	tst	w22, #0x3
  41ff4c:	b.ne	41ffc0 <update_goal_chain@@Base+0x358>  // b.any
  41ff50:	ldrb	w8, [x21, #33]
  41ff54:	tbnz	w8, #0, 41ffc0 <update_goal_chain@@Base+0x358>
  41ff58:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  41ff5c:	ldr	w8, [x8, #3232]
  41ff60:	ldr	w9, [x25, #3260]
  41ff64:	orr	w8, w9, w8
  41ff68:	cbnz	w8, 41ffc0 <update_goal_chain@@Base+0x358>
  41ff6c:	ldr	x0, [x26]
  41ff70:	bl	406750 <strlen@plt>
  41ff74:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ff78:	mov	x19, x0
  41ff7c:	add	x1, x1, #0xe72
  41ff80:	tbnz	w22, #13, 41ffa0 <update_goal_chain@@Base+0x338>
  41ff84:	ldr	x8, [x26, #32]
  41ff88:	adrp	x9, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ff8c:	add	x9, x9, #0xe8f
  41ff90:	cmp	x8, #0x0
  41ff94:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  41ff98:	add	x8, x8, #0xe72
  41ff9c:	csel	x1, x8, x9, eq  // eq = none
  41ffa0:	mov	w2, #0x5                   	// #5
  41ffa4:	mov	x0, xzr
  41ffa8:	bl	406dc0 <dcgettext@plt>
  41ffac:	ldr	x3, [x26]
  41ffb0:	mov	x2, x0
  41ffb4:	mov	w0, #0x1                   	// #1
  41ffb8:	mov	x1, x19
  41ffbc:	bl	41acbc <message@@Base>
  41ffc0:	ldr	x22, [x21]
  41ffc4:	ldr	x19, [sp, #8]
  41ffc8:	cbz	x19, 41ffe8 <update_goal_chain@@Base+0x380>
  41ffcc:	mov	x0, x21
  41ffd0:	str	x22, [x19]
  41ffd4:	bl	406c60 <free@plt>
  41ffd8:	ldr	x22, [x19]
  41ffdc:	tbz	w23, #0, 420014 <update_goal_chain@@Base+0x3ac>
  41ffe0:	mov	x21, x19
  41ffe4:	b	41fd30 <update_goal_chain@@Base+0xc8>
  41ffe8:	mov	x0, x21
  41ffec:	bl	406c60 <free@plt>
  41fff0:	tbz	w23, #0, 420010 <update_goal_chain@@Base+0x3a8>
  41fff4:	mov	x21, x19
  41fff8:	str	x22, [sp]
  41fffc:	b	41fd30 <update_goal_chain@@Base+0xc8>
  420000:	mov	w23, wzr
  420004:	ldr	w8, [x24, #3300]
  420008:	cbnz	w8, 41ffc0 <update_goal_chain@@Base+0x358>
  42000c:	b	41ff40 <update_goal_chain@@Base+0x2d8>
  420010:	str	x22, [sp]
  420014:	cbnz	x22, 41fd04 <update_goal_chain@@Base+0x9c>
  420018:	b	41fcf4 <update_goal_chain@@Base+0x8c>
  42001c:	ldr	w8, [x24, #3300]
  420020:	cbz	w8, 420040 <update_goal_chain@@Base+0x3d8>
  420024:	ldur	w9, [x29, #-12]
  420028:	adrp	x8, 442000 <just_print_flag@@Base>
  42002c:	str	w9, [x8, #204]
  420030:	ldp	w8, w9, [x29, #-8]
  420034:	str	w8, [x25, #3260]
  420038:	adrp	x8, 442000 <just_print_flag@@Base>
  42003c:	str	w9, [x8]
  420040:	mov	w0, w20
  420044:	ldp	x20, x19, [sp, #112]
  420048:	ldp	x22, x21, [sp, #96]
  42004c:	ldp	x24, x23, [sp, #80]
  420050:	ldp	x26, x25, [sp, #64]
  420054:	ldp	x28, x27, [sp, #48]
  420058:	ldp	x29, x30, [sp, #32]
  42005c:	add	sp, sp, #0x80
  420060:	ret
  420064:	mov	w20, #0x1                   	// #1
  420068:	cbnz	w8, 420024 <update_goal_chain@@Base+0x3bc>
  42006c:	b	420040 <update_goal_chain@@Base+0x3d8>
  420070:	sub	sp, sp, #0xb0
  420074:	stp	x29, x30, [sp, #80]
  420078:	stp	x28, x27, [sp, #96]
  42007c:	stp	x26, x25, [sp, #112]
  420080:	stp	x24, x23, [sp, #128]
  420084:	stp	x22, x21, [sp, #144]
  420088:	stp	x20, x19, [sp, #160]
  42008c:	ldr	x8, [x0, #104]
  420090:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420094:	mov	w23, w1
  420098:	add	x29, sp, #0x50
  42009c:	cmp	x8, #0x0
  4200a0:	csel	x19, x0, x8, eq  // eq = none
  4200a4:	ldr	w9, [x19, #128]
  4200a8:	ldr	w8, [x20, #1616]
  4200ac:	cmp	w9, w8
  4200b0:	b.ne	420128 <update_goal_chain@@Base+0x4c0>  // b.any
  4200b4:	ldr	w9, [x19, #136]
  4200b8:	mov	w10, #0x402                 	// #1026
  4200bc:	movk	w10, #0x8, lsl #16
  4200c0:	orr	w11, w10, #0x10000
  4200c4:	and	w11, w9, w11
  4200c8:	cmp	w11, w10
  4200cc:	b.eq	42012c <update_goal_chain@@Base+0x4c4>  // b.none
  4200d0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4200d4:	ldrb	w8, [x8, #3236]
  4200d8:	tbz	w8, #1, 420114 <update_goal_chain@@Base+0x4ac>
  4200dc:	mov	x21, x0
  4200e0:	mov	w0, w23
  4200e4:	bl	419be0 <print_spaces@@Base>
  4200e8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4200ec:	add	x1, x1, #0xee4
  4200f0:	mov	w2, #0x5                   	// #5
  4200f4:	mov	x0, xzr
  4200f8:	bl	406dc0 <dcgettext@plt>
  4200fc:	ldr	x1, [x21]
  420100:	bl	406e60 <printf@plt>
  420104:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420108:	ldr	x0, [x8, #2504]
  42010c:	bl	406cf0 <fflush@plt>
  420110:	ldr	w9, [x19, #136]
  420114:	mov	w10, #0xc                   	// #12
  420118:	and	w8, w9, #0x3
  42011c:	bics	wzr, w10, w9
  420120:	csel	w26, w8, wzr, eq  // eq = none
  420124:	b	420fc8 <update_goal_chain@@Base+0x1360>
  420128:	cbz	x19, 420fbc <update_goal_chain@@Base+0x1354>
  42012c:	mov	w25, wzr
  420130:	add	w9, w23, #0x1
  420134:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  420138:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  42013c:	str	w9, [sp, #32]
  420140:	str	w23, [sp, #16]
  420144:	str	w8, [x19, #128]
  420148:	ldrb	w8, [x28, #3236]
  42014c:	tbz	w8, #1, 42017c <update_goal_chain@@Base+0x514>
  420150:	mov	w0, w23
  420154:	bl	419be0 <print_spaces@@Base>
  420158:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  42015c:	mov	w2, #0x5                   	// #5
  420160:	mov	x0, xzr
  420164:	add	x1, x1, #0xef8
  420168:	bl	406dc0 <dcgettext@plt>
  42016c:	ldr	x1, [x19]
  420170:	bl	406e60 <printf@plt>
  420174:	ldr	x0, [x21, #2504]
  420178:	bl	406cf0 <fflush@plt>
  42017c:	ldr	w8, [x19, #136]
  420180:	tbnz	w8, #10, 4201a8 <update_goal_chain@@Base+0x540>
  420184:	ubfx	w9, w8, #2, #2
  420188:	cmp	w9, #0x2
  42018c:	b.cc	4201d0 <update_goal_chain@@Base+0x568>  // b.lo, b.ul, b.last
  420190:	cmp	w9, #0x3
  420194:	b.eq	4202b4 <update_goal_chain@@Base+0x64c>  // b.none
  420198:	ldrb	w8, [x28, #3236]
  42019c:	tbnz	w8, #1, 4203c8 <update_goal_chain@@Base+0x760>
  4201a0:	mov	w26, wzr
  4201a4:	b	420a40 <update_goal_chain@@Base+0xdd8>
  4201a8:	ldr	w9, [x28, #3236]
  4201ac:	tbnz	w8, #1, 420264 <update_goal_chain@@Base+0x5fc>
  4201b0:	tbz	w9, #1, 4202f4 <update_goal_chain@@Base+0x68c>
  4201b4:	mov	w0, w23
  4201b8:	bl	419be0 <print_spaces@@Base>
  4201bc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4201c0:	mov	w2, #0x5                   	// #5
  4201c4:	mov	x0, xzr
  4201c8:	add	x1, x1, #0xf47
  4201cc:	b	4203e0 <update_goal_chain@@Base+0x778>
  4201d0:	ldr	x9, [x19, #104]
  4201d4:	lsr	w10, w8, #16
  4201d8:	bfi	w8, w10, #19, #1
  4201dc:	str	w8, [x19, #136]
  4201e0:	cmp	x9, #0x0
  4201e4:	csel	x8, x19, x9, eq  // eq = none
  4201e8:	ldr	w9, [x8, #136]
  4201ec:	orr	w9, w9, #0x200
  4201f0:	str	w9, [x8, #136]
  4201f4:	ldr	x24, [x19, #112]
  4201f8:	cbnz	x24, 42020c <update_goal_chain@@Base+0x5a4>
  4201fc:	mov	w1, #0x1                   	// #1
  420200:	mov	x0, x19
  420204:	bl	420fec <f_mtime@@Base>
  420208:	mov	x24, x0
  42020c:	mov	x8, x19
  420210:	mov	x27, x8
  420214:	ldr	x8, [x8, #72]
  420218:	cbnz	x8, 420210 <update_goal_chain@@Base+0x5a8>
  42021c:	cmp	x24, #0x1
  420220:	cset	w20, eq  // eq = none
  420224:	b.ne	4202fc <update_goal_chain@@Base+0x694>  // b.any
  420228:	ldrb	w8, [x28, #3236]
  42022c:	tbz	w8, #0, 42025c <update_goal_chain@@Base+0x5f4>
  420230:	ldr	w0, [sp, #32]
  420234:	bl	419be0 <print_spaces@@Base>
  420238:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  42023c:	mov	w2, #0x5                   	// #5
  420240:	mov	x0, xzr
  420244:	add	x1, x1, #0xfa3
  420248:	bl	406dc0 <dcgettext@plt>
  42024c:	ldr	x1, [x27]
  420250:	bl	406e60 <printf@plt>
  420254:	ldr	x0, [x21, #2504]
  420258:	bl	406cf0 <fflush@plt>
  42025c:	mov	w8, #0x1                   	// #1
  420260:	b	42037c <update_goal_chain@@Base+0x714>
  420264:	tbz	w9, #1, 420298 <update_goal_chain@@Base+0x630>
  420268:	mov	w0, w23
  42026c:	bl	419be0 <print_spaces@@Base>
  420270:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  420274:	mov	w2, #0x5                   	// #5
  420278:	mov	x0, xzr
  42027c:	add	x1, x1, #0xf17
  420280:	bl	406dc0 <dcgettext@plt>
  420284:	ldr	x1, [x19]
  420288:	bl	406e60 <printf@plt>
  42028c:	ldr	x0, [x21, #2504]
  420290:	bl	406cf0 <fflush@plt>
  420294:	ldr	w8, [x19, #136]
  420298:	mov	w9, #0x90000               	// #589824
  42029c:	and	w9, w8, w9
  4202a0:	cmp	w9, #0x80, lsl #12
  4202a4:	b.ne	4202ec <update_goal_chain@@Base+0x684>  // b.any
  4202a8:	mov	x0, x19
  4202ac:	bl	421f7c <notice_finished_file@@Base+0x6bc>
  4202b0:	b	4202e8 <update_goal_chain@@Base+0x680>
  4202b4:	ldrb	w9, [x28, #3236]
  4202b8:	tbz	w9, #1, 4202ec <update_goal_chain@@Base+0x684>
  4202bc:	mov	w0, w23
  4202c0:	bl	419be0 <print_spaces@@Base>
  4202c4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4202c8:	mov	w2, #0x5                   	// #5
  4202cc:	mov	x0, xzr
  4202d0:	add	x1, x1, #0xf85
  4202d4:	bl	406dc0 <dcgettext@plt>
  4202d8:	ldr	x1, [x19]
  4202dc:	bl	406e60 <printf@plt>
  4202e0:	ldr	x0, [x21, #2504]
  4202e4:	bl	406cf0 <fflush@plt>
  4202e8:	ldr	w8, [x19, #136]
  4202ec:	and	w26, w8, #0x3
  4202f0:	b	420a40 <update_goal_chain@@Base+0xdd8>
  4202f4:	mov	w26, wzr
  4202f8:	b	420a40 <update_goal_chain@@Base+0xdd8>
  4202fc:	mov	x9, #0xffffffffffffc9ff    	// #-13825
  420300:	sub	x8, x24, #0x3
  420304:	movk	x9, #0xfb9a, lsl #16
  420308:	cmp	x8, x9
  42030c:	str	x24, [sp, #24]
  420310:	b.hi	420380 <update_goal_chain@@Base+0x718>  // b.pmore
  420314:	ldrb	w8, [x27, #136]
  420318:	str	x24, [sp, #24]
  42031c:	tbz	w8, #7, 420380 <update_goal_chain@@Base+0x718>
  420320:	mov	w8, #0xfffd                	// #65533
  420324:	movk	w8, #0x3fff, lsl #16
  420328:	add	w8, w24, w8
  42032c:	ands	w21, w8, #0x3fffffff
  420330:	b.eq	420368 <update_goal_chain@@Base+0x700>  // b.none
  420334:	ldr	x0, [x27]
  420338:	bl	406750 <strlen@plt>
  42033c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  420340:	mov	x22, x0
  420344:	mov	w2, #0x5                   	// #5
  420348:	mov	x0, xzr
  42034c:	add	x1, x1, #0xfbe
  420350:	bl	406dc0 <dcgettext@plt>
  420354:	ldr	x3, [x27]
  420358:	mov	x2, x0
  42035c:	mov	x0, xzr
  420360:	mov	x1, x22
  420364:	bl	41ae34 <error@@Base>
  420368:	mov	w8, #0xc9ff                	// #51711
  42036c:	movk	w8, #0x3b9a, lsl #16
  420370:	sub	w8, w8, w21
  420374:	add	x8, x24, w8, sxtw
  420378:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  42037c:	str	x8, [sp, #24]
  420380:	ldr	w8, [x27, #136]
  420384:	tbnz	w8, #13, 420438 <update_goal_chain@@Base+0x7d0>
  420388:	tbnz	w8, #8, 420438 <update_goal_chain@@Base+0x7d0>
  42038c:	ldr	x9, [x27, #32]
  420390:	cbnz	x9, 420438 <update_goal_chain@@Base+0x7d0>
  420394:	ldr	w1, [sp, #32]
  420398:	mov	x0, x27
  42039c:	bl	4115dc <try_implicit_rule@@Base>
  4203a0:	ldr	w8, [x28, #3236]
  4203a4:	cbz	w0, 4203fc <update_goal_chain@@Base+0x794>
  4203a8:	tbz	w8, #3, 42042c <update_goal_chain@@Base+0x7c4>
  4203ac:	ldr	w0, [sp, #32]
  4203b0:	bl	419be0 <print_spaces@@Base>
  4203b4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4203b8:	mov	w2, #0x5                   	// #5
  4203bc:	mov	x0, xzr
  4203c0:	add	x1, x1, #0xb
  4203c4:	b	420418 <update_goal_chain@@Base+0x7b0>
  4203c8:	mov	w0, w23
  4203cc:	bl	419be0 <print_spaces@@Base>
  4203d0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4203d4:	mov	w2, #0x5                   	// #5
  4203d8:	mov	x0, xzr
  4203dc:	add	x1, x1, #0xf6a
  4203e0:	bl	406dc0 <dcgettext@plt>
  4203e4:	ldr	x1, [x19]
  4203e8:	bl	406e60 <printf@plt>
  4203ec:	ldr	x0, [x21, #2504]
  4203f0:	bl	406cf0 <fflush@plt>
  4203f4:	mov	w26, wzr
  4203f8:	b	420a40 <update_goal_chain@@Base+0xdd8>
  4203fc:	tbz	w8, #3, 42042c <update_goal_chain@@Base+0x7c4>
  420400:	ldr	w0, [sp, #32]
  420404:	bl	419be0 <print_spaces@@Base>
  420408:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42040c:	mov	w2, #0x5                   	// #5
  420410:	mov	x0, xzr
  420414:	add	x1, x1, #0x2d
  420418:	bl	406dc0 <dcgettext@plt>
  42041c:	ldr	x1, [x27]
  420420:	bl	406e60 <printf@plt>
  420424:	ldr	x0, [x21, #2504]
  420428:	bl	406cf0 <fflush@plt>
  42042c:	ldr	w8, [x27, #136]
  420430:	orr	w8, w8, #0x100
  420434:	str	w8, [x27, #136]
  420438:	ldr	x9, [x27, #32]
  42043c:	cbz	x9, 42084c <update_goal_chain@@Base+0xbe4>
  420440:	str	x27, [sp, #56]
  420444:	ldr	x8, [x27, #48]
  420448:	str	w25, [sp, #20]
  42044c:	mov	w26, wzr
  420450:	mov	w25, wzr
  420454:	str	x8, [sp, #40]
  420458:	add	x28, sp, #0x28
  42045c:	mov	x8, x27
  420460:	str	x24, [sp, #8]
  420464:	ldr	x21, [x8, #24]
  420468:	ldr	x28, [x28]
  42046c:	cbnz	x21, 420484 <update_goal_chain@@Base+0x81c>
  420470:	b	420688 <update_goal_chain@@Base+0xa20>
  420474:	ldr	x8, [x28, #16]
  420478:	ldr	x21, [x8, #24]
  42047c:	ldr	x28, [x28]
  420480:	cbz	x21, 420688 <update_goal_chain@@Base+0xa20>
  420484:	mov	x23, xzr
  420488:	b	4204b8 <update_goal_chain@@Base+0x850>
  42048c:	cmp	x8, x22
  420490:	ccmp	x22, #0x1, #0x4, eq  // eq = none
  420494:	mov	w8, #0x100                 	// #256
  420498:	csel	w8, w8, wzr, eq  // eq = none
  42049c:	and	w9, w9, #0xfffffeff
  4204a0:	mov	w25, wzr
  4204a4:	orr	w8, w8, w9
  4204a8:	strh	w8, [x21, #32]
  4204ac:	mov	x23, x21
  4204b0:	ldr	x21, [x21]
  4204b4:	cbz	x21, 420688 <update_goal_chain@@Base+0xa20>
  4204b8:	ldr	x24, [x21, #16]
  4204bc:	ldr	x8, [x24, #72]
  4204c0:	cbz	x8, 4204d4 <update_goal_chain@@Base+0x86c>
  4204c4:	mov	x24, x8
  4204c8:	ldr	x8, [x8, #72]
  4204cc:	cbnz	x8, 4204c4 <update_goal_chain@@Base+0x85c>
  4204d0:	str	x24, [x21, #16]
  4204d4:	ldr	x22, [x24, #112]
  4204d8:	cbz	x22, 4204e8 <update_goal_chain@@Base+0x880>
  4204dc:	ldr	x8, [x24, #72]
  4204e0:	cbnz	x8, 420504 <update_goal_chain@@Base+0x89c>
  4204e4:	b	420514 <update_goal_chain@@Base+0x8ac>
  4204e8:	mov	w1, #0x1                   	// #1
  4204ec:	mov	x0, x24
  4204f0:	bl	420fec <f_mtime@@Base>
  4204f4:	ldr	x24, [x21, #16]
  4204f8:	mov	x22, x0
  4204fc:	ldr	x8, [x24, #72]
  420500:	cbz	x8, 420514 <update_goal_chain@@Base+0x8ac>
  420504:	mov	x24, x8
  420508:	ldr	x8, [x8, #72]
  42050c:	cbnz	x8, 420504 <update_goal_chain@@Base+0x89c>
  420510:	str	x24, [x21, #16]
  420514:	ldr	x8, [x24, #104]
  420518:	cmp	x8, #0x0
  42051c:	csel	x8, x24, x8, eq  // eq = none
  420520:	ldrb	w8, [x8, #137]
  420524:	tbnz	w8, #1, 42055c <update_goal_chain@@Base+0x8f4>
  420528:	str	x27, [x24, #96]
  42052c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420530:	ldr	w8, [x8, #3300]
  420534:	str	w20, [sp, #36]
  420538:	cbz	w8, 4205b8 <update_goal_chain@@Base+0x950>
  42053c:	ldr	w9, [x27, #136]
  420540:	ldr	w8, [x24, #136]
  420544:	lsr	w9, w9, #16
  420548:	and	w23, w8, #0x10000
  42054c:	bfi	w8, w9, #16, #1
  420550:	str	w8, [x24, #136]
  420554:	ldr	x24, [x21, #16]
  420558:	b	4205bc <update_goal_chain@@Base+0x954>
  42055c:	ldr	x0, [x27]
  420560:	bl	406750 <strlen@plt>
  420564:	ldr	x8, [x24]
  420568:	mov	x22, x0
  42056c:	mov	x0, x8
  420570:	bl	406750 <strlen@plt>
  420574:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420578:	add	x22, x0, x22
  42057c:	mov	w2, #0x5                   	// #5
  420580:	mov	x0, xzr
  420584:	add	x1, x1, #0x6f
  420588:	bl	406dc0 <dcgettext@plt>
  42058c:	ldr	x8, [x21, #16]
  420590:	ldr	x3, [x27]
  420594:	mov	x2, x0
  420598:	mov	x0, xzr
  42059c:	ldr	x4, [x8]
  4205a0:	mov	x1, x22
  4205a4:	bl	41ae34 <error@@Base>
  4205a8:	ldr	x8, [x21]
  4205ac:	cbz	x23, 420680 <update_goal_chain@@Base+0xa18>
  4205b0:	str	x8, [x23]
  4205b4:	b	4204b0 <update_goal_chain@@Base+0x848>
  4205b8:	mov	w23, wzr
  4205bc:	ldr	w1, [sp, #32]
  4205c0:	ldr	x2, [sp, #24]
  4205c4:	add	x3, sp, #0x24
  4205c8:	mov	x0, x24
  4205cc:	bl	4220dc <notice_finished_file@@Base+0x81c>
  4205d0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4205d4:	ldr	w8, [x8, #3300]
  4205d8:	cmp	w0, w26
  4205dc:	csel	w26, w0, w26, hi  // hi = pmore
  4205e0:	cbz	w8, 4205f8 <update_goal_chain@@Base+0x990>
  4205e4:	ldr	x8, [x21, #16]
  4205e8:	ldr	w9, [x8, #136]
  4205ec:	and	w9, w9, #0xfffeffff
  4205f0:	orr	w9, w9, w23
  4205f4:	str	w9, [x8, #136]
  4205f8:	ldr	x0, [x21, #16]
  4205fc:	ldrh	w9, [x21, #32]
  420600:	ldr	w10, [sp, #36]
  420604:	ldr	x8, [x0, #72]
  420608:	tst	w9, #0x200
  42060c:	csel	w20, w10, w20, eq  // eq = none
  420610:	cbz	x8, 420624 <update_goal_chain@@Base+0x9bc>
  420614:	mov	x0, x8
  420618:	ldr	x8, [x8, #72]
  42061c:	cbnz	x8, 420614 <update_goal_chain@@Base+0x9ac>
  420620:	str	x0, [x21, #16]
  420624:	ldr	x8, [x0, #104]
  420628:	cmp	x8, #0x0
  42062c:	csel	x8, x0, x8, eq  // eq = none
  420630:	ldr	w10, [x8, #136]
  420634:	ldr	x8, [x8, #56]
  420638:	ubfx	w10, w10, #2, #2
  42063c:	sub	w10, w10, #0x1
  420640:	cmp	w10, #0x2
  420644:	cset	w10, cc  // cc = lo, ul, last
  420648:	orr	w25, w25, w10
  42064c:	cbnz	x8, 420630 <update_goal_chain@@Base+0x9c8>
  420650:	cbz	w26, 420660 <update_goal_chain@@Base+0x9f8>
  420654:	adrp	x8, 442000 <just_print_flag@@Base>
  420658:	ldr	w8, [x8, #4]
  42065c:	cbz	w8, 420688 <update_goal_chain@@Base+0xa20>
  420660:	cbnz	w25, 4204ac <update_goal_chain@@Base+0x844>
  420664:	ldr	x8, [x0, #112]
  420668:	cbnz	x8, 42048c <update_goal_chain@@Base+0x824>
  42066c:	mov	w1, #0x1                   	// #1
  420670:	bl	420fec <f_mtime@@Base>
  420674:	ldrh	w9, [x21, #32]
  420678:	mov	x8, x0
  42067c:	b	42048c <update_goal_chain@@Base+0x824>
  420680:	str	x8, [x27, #24]
  420684:	b	4204b0 <update_goal_chain@@Base+0x848>
  420688:	cbnz	x28, 420474 <update_goal_chain@@Base+0x80c>
  42068c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420690:	ldr	w8, [x8, #3296]
  420694:	orr	w8, w8, w20
  420698:	cbz	w8, 4208ac <update_goal_chain@@Base+0xc44>
  42069c:	ldr	x21, [x27, #24]
  4206a0:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  4206a4:	cbnz	x21, 4206b8 <update_goal_chain@@Base+0xa50>
  4206a8:	b	4208b0 <update_goal_chain@@Base+0xc48>
  4206ac:	cbz	w25, 4207dc <update_goal_chain@@Base+0xb74>
  4206b0:	ldr	x21, [x21]
  4206b4:	cbz	x21, 4208b0 <update_goal_chain@@Base+0xc48>
  4206b8:	ldr	x8, [x21, #16]
  4206bc:	ldrb	w9, [x8, #137]
  4206c0:	tbz	w9, #6, 4206b0 <update_goal_chain@@Base+0xa48>
  4206c4:	ldr	x22, [x8, #112]
  4206c8:	cbz	x22, 4206d8 <update_goal_chain@@Base+0xa70>
  4206cc:	ldr	x9, [x8, #72]
  4206d0:	cbnz	x9, 4206f4 <update_goal_chain@@Base+0xa8c>
  4206d4:	b	42071c <update_goal_chain@@Base+0xab4>
  4206d8:	mov	w1, #0x1                   	// #1
  4206dc:	mov	x0, x8
  4206e0:	bl	420fec <f_mtime@@Base>
  4206e4:	ldr	x8, [x21, #16]
  4206e8:	mov	x22, x0
  4206ec:	ldr	x9, [x8, #72]
  4206f0:	cbz	x9, 42071c <update_goal_chain@@Base+0xab4>
  4206f4:	mov	x8, x9
  4206f8:	ldr	x9, [x9, #72]
  4206fc:	cbnz	x9, 4206f4 <update_goal_chain@@Base+0xa8c>
  420700:	str	x8, [x21, #16]
  420704:	str	x27, [x8, #96]
  420708:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  42070c:	ldr	w9, [x9, #3300]
  420710:	cbnz	w9, 42072c <update_goal_chain@@Base+0xac4>
  420714:	mov	w23, wzr
  420718:	b	420748 <update_goal_chain@@Base+0xae0>
  42071c:	str	x27, [x8, #96]
  420720:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  420724:	ldr	w9, [x9, #3300]
  420728:	cbz	w9, 420714 <update_goal_chain@@Base+0xaac>
  42072c:	ldr	w10, [x27, #136]
  420730:	ldr	w9, [x8, #136]
  420734:	lsr	w10, w10, #16
  420738:	and	w23, w9, #0x10000
  42073c:	bfi	w9, w10, #16, #1
  420740:	str	w9, [x8, #136]
  420744:	ldr	x8, [x21, #16]
  420748:	ldr	w1, [sp, #32]
  42074c:	mov	x0, x8
  420750:	str	wzr, [x8, #128]
  420754:	bl	420070 <update_goal_chain@@Base+0x408>
  420758:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  42075c:	ldr	w8, [x8, #3300]
  420760:	cmp	w0, w26
  420764:	csel	w26, w0, w26, hi  // hi = pmore
  420768:	cbz	w8, 420780 <update_goal_chain@@Base+0xb18>
  42076c:	ldr	x8, [x21, #16]
  420770:	ldr	w9, [x8, #136]
  420774:	and	w9, w9, #0xfffeffff
  420778:	orr	w9, w9, w23
  42077c:	str	w9, [x8, #136]
  420780:	ldr	x0, [x21, #16]
  420784:	ldr	x8, [x0, #72]
  420788:	cbz	x8, 42079c <update_goal_chain@@Base+0xb34>
  42078c:	mov	x0, x8
  420790:	ldr	x8, [x8, #72]
  420794:	cbnz	x8, 42078c <update_goal_chain@@Base+0xb24>
  420798:	str	x0, [x21, #16]
  42079c:	ldr	x8, [x0, #104]
  4207a0:	cmp	x8, #0x0
  4207a4:	csel	x8, x0, x8, eq  // eq = none
  4207a8:	ldr	w9, [x8, #136]
  4207ac:	ldr	x8, [x8, #56]
  4207b0:	ubfx	w9, w9, #2, #2
  4207b4:	sub	w9, w9, #0x1
  4207b8:	cmp	w9, #0x2
  4207bc:	cset	w9, cc  // cc = lo, ul, last
  4207c0:	orr	w25, w25, w9
  4207c4:	cbnz	x8, 4207a8 <update_goal_chain@@Base+0xb40>
  4207c8:	cbz	w26, 4206ac <update_goal_chain@@Base+0xa44>
  4207cc:	adrp	x8, 442000 <just_print_flag@@Base>
  4207d0:	ldr	w8, [x8, #4]
  4207d4:	cbnz	w8, 4206ac <update_goal_chain@@Base+0xa44>
  4207d8:	b	4208b0 <update_goal_chain@@Base+0xc48>
  4207dc:	ldrb	w8, [x27, #137]
  4207e0:	tbz	w8, #5, 4207f8 <update_goal_chain@@Base+0xb90>
  4207e4:	ldr	x8, [x27, #32]
  4207e8:	cbz	x8, 4207f8 <update_goal_chain@@Base+0xb90>
  4207ec:	mov	x9, x21
  4207f0:	ldrh	w10, [x9, #32]!
  4207f4:	b	420834 <update_goal_chain@@Base+0xbcc>
  4207f8:	ldr	x8, [x0, #112]
  4207fc:	cbz	x8, 420818 <update_goal_chain@@Base+0xbb0>
  420800:	mov	x9, x21
  420804:	ldrh	w10, [x9, #32]!
  420808:	cmp	x8, x22
  42080c:	b.ne	420834 <update_goal_chain@@Base+0xbcc>  // b.any
  420810:	mov	w8, wzr
  420814:	b	420838 <update_goal_chain@@Base+0xbd0>
  420818:	mov	w1, #0x1                   	// #1
  42081c:	bl	420fec <f_mtime@@Base>
  420820:	mov	x8, x0
  420824:	mov	x9, x21
  420828:	ldrh	w10, [x9, #32]!
  42082c:	cmp	x8, x22
  420830:	b.eq	420810 <update_goal_chain@@Base+0xba8>  // b.none
  420834:	mov	w8, #0x100                 	// #256
  420838:	and	w10, w10, #0xfffffeff
  42083c:	mov	w25, wzr
  420840:	orr	w8, w8, w10
  420844:	strh	w8, [x9]
  420848:	b	4206b0 <update_goal_chain@@Base+0xa48>
  42084c:	tbnz	w8, #11, 420440 <update_goal_chain@@Base+0x7d8>
  420850:	adrp	x8, 442000 <just_print_flag@@Base>
  420854:	ldr	x8, [x8, #40]
  420858:	cbz	x8, 420440 <update_goal_chain@@Base+0x7d8>
  42085c:	ldr	x9, [x8, #32]
  420860:	cbz	x9, 420440 <update_goal_chain@@Base+0x7d8>
  420864:	ldrb	w9, [x28, #3236]
  420868:	tbz	w9, #3, 4208a0 <update_goal_chain@@Base+0xc38>
  42086c:	ldr	w0, [sp, #32]
  420870:	bl	419be0 <print_spaces@@Base>
  420874:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420878:	mov	w2, #0x5                   	// #5
  42087c:	mov	x0, xzr
  420880:	add	x1, x1, #0x4f
  420884:	bl	406dc0 <dcgettext@plt>
  420888:	ldr	x1, [x27]
  42088c:	bl	406e60 <printf@plt>
  420890:	ldr	x0, [x21, #2504]
  420894:	bl	406cf0 <fflush@plt>
  420898:	adrp	x8, 442000 <just_print_flag@@Base>
  42089c:	ldr	x8, [x8, #40]
  4208a0:	ldr	x8, [x8, #32]
  4208a4:	str	x8, [x27, #32]
  4208a8:	b	420440 <update_goal_chain@@Base+0x7d8>
  4208ac:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  4208b0:	ldr	x8, [x27, #104]
  4208b4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4208b8:	cmp	x8, #0x0
  4208bc:	csel	x8, x27, x8, eq  // eq = none
  4208c0:	ldr	w9, [x8, #136]
  4208c4:	and	w9, w9, #0xfffffdff
  4208c8:	str	w9, [x8, #136]
  4208cc:	ldr	x8, [x19, #104]
  4208d0:	cmp	x8, #0x0
  4208d4:	csel	x8, x19, x8, eq  // eq = none
  4208d8:	ldr	w9, [x8, #136]
  4208dc:	and	w9, w9, #0xfffffdff
  4208e0:	str	w9, [x8, #136]
  4208e4:	ldrb	w8, [x28, #3236]
  4208e8:	tbz	w8, #1, 420918 <update_goal_chain@@Base+0xcb0>
  4208ec:	ldr	w0, [sp, #32]
  4208f0:	bl	419be0 <print_spaces@@Base>
  4208f4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4208f8:	mov	w2, #0x5                   	// #5
  4208fc:	mov	x0, xzr
  420900:	add	x1, x1, #0x95
  420904:	bl	406dc0 <dcgettext@plt>
  420908:	ldr	x1, [x27]
  42090c:	bl	406e60 <printf@plt>
  420910:	ldr	x0, [x21, #2504]
  420914:	bl	406cf0 <fflush@plt>
  420918:	cbz	w25, 420938 <update_goal_chain@@Base+0xcd0>
  42091c:	mov	w1, #0x1                   	// #1
  420920:	mov	x0, x27
  420924:	bl	40c0c8 <set_command_state@@Base>
  420928:	ldrb	w8, [x28, #3236]
  42092c:	tbnz	w8, #1, 420a04 <update_goal_chain@@Base+0xd9c>
  420930:	ldr	w23, [sp, #16]
  420934:	b	420a34 <update_goal_chain@@Base+0xdcc>
  420938:	cbz	w26, 420a94 <update_goal_chain@@Base+0xe2c>
  42093c:	ldr	w8, [x27, #136]
  420940:	and	w9, w26, #0x3
  420944:	cmp	w26, #0x1
  420948:	mov	w10, #0x3                   	// #3
  42094c:	csel	w9, w10, w9, eq  // eq = none
  420950:	and	w8, w8, #0xfffffffc
  420954:	orr	w8, w8, w9
  420958:	mov	x0, x27
  42095c:	str	w8, [x27, #136]
  420960:	bl	4218c0 <notice_finished_file@@Base>
  420964:	ldrb	w8, [x28, #3236]
  420968:	ldr	w23, [sp, #16]
  42096c:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420970:	tbz	w8, #1, 4209a0 <update_goal_chain@@Base+0xd38>
  420974:	mov	w0, w23
  420978:	bl	419be0 <print_spaces@@Base>
  42097c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420980:	mov	w2, #0x5                   	// #5
  420984:	mov	x0, xzr
  420988:	add	x1, x1, #0xed
  42098c:	bl	406dc0 <dcgettext@plt>
  420990:	ldr	x1, [x27]
  420994:	bl	406e60 <printf@plt>
  420998:	ldr	x0, [x21, #2504]
  42099c:	bl	406cf0 <fflush@plt>
  4209a0:	adrp	x8, 442000 <just_print_flag@@Base>
  4209a4:	ldr	w8, [x8, #4]
  4209a8:	ldr	w25, [sp, #20]
  4209ac:	cbz	w8, 420a40 <update_goal_chain@@Base+0xdd8>
  4209b0:	adrp	x8, 442000 <just_print_flag@@Base>
  4209b4:	ldr	w8, [x8]
  4209b8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  4209bc:	ldr	w9, [x9, #3260]
  4209c0:	orr	w8, w8, w23
  4209c4:	orr	w8, w8, w9
  4209c8:	cbnz	w8, 420a40 <update_goal_chain@@Base+0xdd8>
  4209cc:	ldr	x0, [x27]
  4209d0:	bl	406750 <strlen@plt>
  4209d4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4209d8:	mov	x22, x0
  4209dc:	mov	w2, #0x5                   	// #5
  4209e0:	mov	x0, xzr
  4209e4:	add	x1, x1, #0x10d
  4209e8:	bl	406dc0 <dcgettext@plt>
  4209ec:	ldr	x3, [x27]
  4209f0:	mov	x2, x0
  4209f4:	mov	x0, xzr
  4209f8:	mov	x1, x22
  4209fc:	bl	41ae34 <error@@Base>
  420a00:	b	420a40 <update_goal_chain@@Base+0xdd8>
  420a04:	ldr	w23, [sp, #16]
  420a08:	mov	w0, w23
  420a0c:	bl	419be0 <print_spaces@@Base>
  420a10:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420a14:	mov	w2, #0x5                   	// #5
  420a18:	mov	x0, xzr
  420a1c:	add	x1, x1, #0xc2
  420a20:	bl	406dc0 <dcgettext@plt>
  420a24:	ldr	x1, [x27]
  420a28:	bl	406e60 <printf@plt>
  420a2c:	ldr	x0, [x21, #2504]
  420a30:	bl	406cf0 <fflush@plt>
  420a34:	mov	w26, wzr
  420a38:	ldr	w25, [sp, #20]
  420a3c:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420a40:	mov	x8, x19
  420a44:	ldr	x19, [x19, #72]
  420a48:	cbnz	x19, 420a40 <update_goal_chain@@Base+0xdd8>
  420a4c:	cbz	w26, 420a5c <update_goal_chain@@Base+0xdf4>
  420a50:	adrp	x9, 442000 <just_print_flag@@Base>
  420a54:	ldr	w9, [x9, #4]
  420a58:	cbz	w9, 420fc8 <update_goal_chain@@Base+0x1360>
  420a5c:	ldr	w9, [x8, #136]
  420a60:	ubfx	w9, w9, #2, #2
  420a64:	sub	w9, w9, #0x1
  420a68:	cmp	w9, #0x2
  420a6c:	b.cc	420fbc <update_goal_chain@@Base+0x1354>  // b.lo, b.ul, b.last
  420a70:	ldr	x19, [x8, #56]
  420a74:	cmp	w26, w25
  420a78:	csel	w25, w26, w25, hi  // hi = pmore
  420a7c:	cbz	x19, 420fc4 <update_goal_chain@@Base+0x135c>
  420a80:	ldr	w8, [x20, #1616]
  420a84:	str	w8, [x19, #128]
  420a88:	ldrb	w8, [x28, #3236]
  420a8c:	tbnz	w8, #1, 420150 <update_goal_chain@@Base+0x4e8>
  420a90:	b	42017c <update_goal_chain@@Base+0x514>
  420a94:	ldr	w8, [x27, #136]
  420a98:	and	w8, w8, #0xc
  420a9c:	cmp	w8, #0x4
  420aa0:	b.ne	420ab0 <update_goal_chain@@Base+0xe48>  // b.any
  420aa4:	mov	x0, x27
  420aa8:	mov	w1, wzr
  420aac:	bl	40c0c8 <set_command_state@@Base>
  420ab0:	ldr	x24, [x27, #24]
  420ab4:	ldr	x26, [sp, #8]
  420ab8:	mov	w21, wzr
  420abc:	cbz	x24, 420c10 <update_goal_chain@@Base+0xfa8>
  420ac0:	ldp	w23, w25, [sp, #16]
  420ac4:	b	420ae8 <update_goal_chain@@Base+0xe80>
  420ac8:	ldr	x2, [x27]
  420acc:	mov	x0, x22
  420ad0:	bl	406e60 <printf@plt>
  420ad4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420ad8:	ldr	x0, [x8, #2504]
  420adc:	bl	406cf0 <fflush@plt>
  420ae0:	ldr	x24, [x24]
  420ae4:	cbz	x24, 420c14 <update_goal_chain@@Base+0xfac>
  420ae8:	ldr	x8, [x24, #16]
  420aec:	ldr	x0, [x8, #112]
  420af0:	cbz	x0, 420b00 <update_goal_chain@@Base+0xe98>
  420af4:	ldr	x9, [x8, #72]
  420af8:	cbnz	x9, 420b18 <update_goal_chain@@Base+0xeb0>
  420afc:	b	420b38 <update_goal_chain@@Base+0xed0>
  420b00:	mov	w1, #0x1                   	// #1
  420b04:	mov	x0, x8
  420b08:	bl	420fec <f_mtime@@Base>
  420b0c:	ldr	x8, [x24, #16]
  420b10:	ldr	x9, [x8, #72]
  420b14:	cbz	x9, 420b38 <update_goal_chain@@Base+0xed0>
  420b18:	mov	x8, x9
  420b1c:	ldr	x9, [x9, #72]
  420b20:	cbnz	x9, 420b18 <update_goal_chain@@Base+0xeb0>
  420b24:	str	x8, [x24, #16]
  420b28:	ldrh	w9, [x24, #32]
  420b2c:	tbz	w9, #9, 420b40 <update_goal_chain@@Base+0xed8>
  420b30:	ubfx	w8, w9, #8, #1
  420b34:	b	420b5c <update_goal_chain@@Base+0xef4>
  420b38:	ldrh	w9, [x24, #32]
  420b3c:	tbnz	w9, #9, 420b30 <update_goal_chain@@Base+0xec8>
  420b40:	cmp	x0, #0x1
  420b44:	b.ne	420b54 <update_goal_chain@@Base+0xeec>  // b.any
  420b48:	ldrb	w8, [x8, #137]
  420b4c:	tst	w8, #0x40
  420b50:	csinc	w20, w20, wzr, ne  // ne = any
  420b54:	ubfx	w8, w9, #8, #1
  420b58:	orr	w21, w21, w8
  420b5c:	ldr	x10, [sp, #24]
  420b60:	cmp	x0, x10
  420b64:	cset	w10, hi  // hi = pmore
  420b68:	cmp	x26, #0x1
  420b6c:	cset	w11, eq  // eq = none
  420b70:	orr	w10, w11, w10
  420b74:	orr	w10, w8, w10
  420b78:	and	w8, w9, #0xfffffeff
  420b7c:	orr	w8, w8, w10, lsl #8
  420b80:	strh	w8, [x24, #32]
  420b84:	b.eq	420ae0 <update_goal_chain@@Base+0xe78>  // b.none
  420b88:	ldr	w8, [x28, #3236]
  420b8c:	tst	w8, #0x3
  420b90:	b.eq	420ae0 <update_goal_chain@@Base+0xe78>  // b.none
  420b94:	tbnz	w9, #9, 420bb0 <update_goal_chain@@Base+0xf48>
  420b98:	cmp	x0, #0x1
  420b9c:	b.ne	420bc0 <update_goal_chain@@Base+0xf58>  // b.any
  420ba0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420ba4:	add	x1, x1, #0x169
  420ba8:	tbz	w8, #0, 420ae0 <update_goal_chain@@Base+0xe78>
  420bac:	b	420be0 <update_goal_chain@@Base+0xf78>
  420bb0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420bb4:	add	x1, x1, #0x137
  420bb8:	tbz	w8, #1, 420ae0 <update_goal_chain@@Base+0xe78>
  420bbc:	b	420be0 <update_goal_chain@@Base+0xf78>
  420bc0:	cbz	w10, 420bd4 <update_goal_chain@@Base+0xf6c>
  420bc4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420bc8:	add	x1, x1, #0x19b
  420bcc:	tbz	w8, #0, 420ae0 <update_goal_chain@@Base+0xe78>
  420bd0:	b	420be0 <update_goal_chain@@Base+0xf78>
  420bd4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420bd8:	add	x1, x1, #0x1c9
  420bdc:	tbz	w8, #1, 420ae0 <update_goal_chain@@Base+0xe78>
  420be0:	mov	w2, #0x5                   	// #5
  420be4:	mov	x0, xzr
  420be8:	bl	406dc0 <dcgettext@plt>
  420bec:	cbz	x0, 420ae0 <update_goal_chain@@Base+0xe78>
  420bf0:	mov	x22, x0
  420bf4:	ldr	w0, [sp, #32]
  420bf8:	bl	419be0 <print_spaces@@Base>
  420bfc:	ldr	x1, [x24, #8]
  420c00:	cbnz	x1, 420ac8 <update_goal_chain@@Base+0xe60>
  420c04:	ldr	x8, [x24, #16]
  420c08:	ldr	x1, [x8]
  420c0c:	b	420ac8 <update_goal_chain@@Base+0xe60>
  420c10:	ldp	w23, w25, [sp, #16]
  420c14:	ldr	x8, [x27, #104]
  420c18:	cbz	x8, 420c24 <update_goal_chain@@Base+0xfbc>
  420c1c:	ldr	x8, [x27, #24]
  420c20:	cbz	x8, 420d74 <update_goal_chain@@Base+0x110c>
  420c24:	cmp	x26, #0x1
  420c28:	b.ne	420c6c <update_goal_chain@@Base+0x1004>  // b.any
  420c2c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  420c30:	cbnz	w20, 420dac <update_goal_chain@@Base+0x1144>
  420c34:	ldr	x8, [x27, #32]
  420c38:	cbz	x8, 420cc4 <update_goal_chain@@Base+0x105c>
  420c3c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420c40:	ldr	w8, [x8, #3296]
  420c44:	cbz	w8, 420cc4 <update_goal_chain@@Base+0x105c>
  420c48:	ldrb	w8, [x28, #3236]
  420c4c:	tbz	w8, #1, 420dac <update_goal_chain@@Base+0x1144>
  420c50:	mov	w0, w23
  420c54:	bl	419be0 <print_spaces@@Base>
  420c58:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420c5c:	mov	w2, #0x5                   	// #5
  420c60:	mov	x0, xzr
  420c64:	add	x1, x1, #0x269
  420c68:	b	420d98 <update_goal_chain@@Base+0x1130>
  420c6c:	cbnz	w21, 420c2c <update_goal_chain@@Base+0xfc4>
  420c70:	ldr	w8, [x27, #136]
  420c74:	tbz	w8, #11, 420c2c <update_goal_chain@@Base+0xfc4>
  420c78:	ldr	x8, [x27, #32]
  420c7c:	cbnz	x8, 420c2c <update_goal_chain@@Base+0xfc4>
  420c80:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  420c84:	ldr	w8, [x8, #3296]
  420c88:	cbnz	w8, 420c2c <update_goal_chain@@Base+0xfc4>
  420c8c:	ldrb	w8, [x28, #3236]
  420c90:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  420c94:	tbz	w8, #1, 420cc4 <update_goal_chain@@Base+0x105c>
  420c98:	mov	w0, w23
  420c9c:	bl	419be0 <print_spaces@@Base>
  420ca0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420ca4:	mov	w2, #0x5                   	// #5
  420ca8:	mov	x0, xzr
  420cac:	add	x1, x1, #0x22e
  420cb0:	bl	406dc0 <dcgettext@plt>
  420cb4:	ldr	x1, [x27]
  420cb8:	bl	406e60 <printf@plt>
  420cbc:	ldr	x0, [x21, #2504]
  420cc0:	bl	406cf0 <fflush@plt>
  420cc4:	ldrb	w8, [x28, #3236]
  420cc8:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420ccc:	tbz	w8, #1, 420d54 <update_goal_chain@@Base+0x10ec>
  420cd0:	mov	w0, w23
  420cd4:	bl	419be0 <print_spaces@@Base>
  420cd8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420cdc:	mov	w2, #0x5                   	// #5
  420ce0:	mov	x0, xzr
  420ce4:	add	x1, x1, #0x28f
  420ce8:	bl	406dc0 <dcgettext@plt>
  420cec:	ldr	x1, [x27]
  420cf0:	bl	406e60 <printf@plt>
  420cf4:	ldp	x8, x9, [x27]
  420cf8:	cmp	x8, x9
  420cfc:	b.eq	420d40 <update_goal_chain@@Base+0x10d8>  // b.none
  420d00:	ldrb	w10, [x8]
  420d04:	ldrb	w11, [x9]
  420d08:	cmp	w10, w11
  420d0c:	b.ne	420d24 <update_goal_chain@@Base+0x10bc>  // b.any
  420d10:	cbz	w10, 420d40 <update_goal_chain@@Base+0x10d8>
  420d14:	add	x0, x8, #0x1
  420d18:	add	x1, x9, #0x1
  420d1c:	bl	406c10 <strcmp@plt>
  420d20:	cbz	w0, 420d40 <update_goal_chain@@Base+0x10d8>
  420d24:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420d28:	mov	w2, #0x5                   	// #5
  420d2c:	mov	x0, xzr
  420d30:	add	x1, x1, #0x2ad
  420d34:	bl	406dc0 <dcgettext@plt>
  420d38:	ldr	x1, [x27, #8]
  420d3c:	bl	406e60 <printf@plt>
  420d40:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  420d44:	add	x0, x0, #0x456
  420d48:	bl	406ba0 <puts@plt>
  420d4c:	ldr	x0, [x21, #2504]
  420d50:	bl	406cf0 <fflush@plt>
  420d54:	mov	x0, x27
  420d58:	bl	4218c0 <notice_finished_file@@Base>
  420d5c:	ldr	x8, [x27, #8]
  420d60:	mov	w26, wzr
  420d64:	str	x8, [x27]
  420d68:	ldr	x27, [x27, #56]
  420d6c:	cbnz	x27, 420d5c <update_goal_chain@@Base+0x10f4>
  420d70:	b	420a40 <update_goal_chain@@Base+0xdd8>
  420d74:	ldrb	w8, [x28, #3236]
  420d78:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  420d7c:	tbz	w8, #0, 420dac <update_goal_chain@@Base+0x1144>
  420d80:	mov	w0, w23
  420d84:	bl	419be0 <print_spaces@@Base>
  420d88:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420d8c:	mov	w2, #0x5                   	// #5
  420d90:	mov	x0, xzr
  420d94:	add	x1, x1, #0x1f7
  420d98:	bl	406dc0 <dcgettext@plt>
  420d9c:	ldr	x1, [x27]
  420da0:	bl	406e60 <printf@plt>
  420da4:	ldr	x0, [x21, #2504]
  420da8:	bl	406cf0 <fflush@plt>
  420dac:	ldrb	w8, [x28, #3236]
  420db0:	tbz	w8, #0, 420de0 <update_goal_chain@@Base+0x1178>
  420db4:	mov	w0, w23
  420db8:	bl	419be0 <print_spaces@@Base>
  420dbc:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420dc0:	mov	w2, #0x5                   	// #5
  420dc4:	mov	x0, xzr
  420dc8:	add	x1, x1, #0x2c5
  420dcc:	bl	406dc0 <dcgettext@plt>
  420dd0:	ldr	x1, [x27]
  420dd4:	bl	406e60 <printf@plt>
  420dd8:	ldr	x0, [x21, #2504]
  420ddc:	bl	406cf0 <fflush@plt>
  420de0:	ldp	x8, x9, [x27]
  420de4:	cmp	x8, x9
  420de8:	b.eq	420e48 <update_goal_chain@@Base+0x11e0>  // b.none
  420dec:	ldrb	w10, [x8]
  420df0:	ldrb	w11, [x9]
  420df4:	cmp	w10, w11
  420df8:	b.ne	420e10 <update_goal_chain@@Base+0x11a8>  // b.any
  420dfc:	cbz	w10, 420e48 <update_goal_chain@@Base+0x11e0>
  420e00:	add	x0, x8, #0x1
  420e04:	add	x1, x9, #0x1
  420e08:	bl	406c10 <strcmp@plt>
  420e0c:	cbz	w0, 420e48 <update_goal_chain@@Base+0x11e0>
  420e10:	ldrb	w8, [x28, #3236]
  420e14:	tbz	w8, #0, 420e3c <update_goal_chain@@Base+0x11d4>
  420e18:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420e1c:	mov	w2, #0x5                   	// #5
  420e20:	mov	x0, xzr
  420e24:	add	x1, x1, #0x2df
  420e28:	bl	406dc0 <dcgettext@plt>
  420e2c:	ldr	x1, [x27, #8]
  420e30:	bl	406e60 <printf@plt>
  420e34:	ldr	x0, [x21, #2504]
  420e38:	bl	406cf0 <fflush@plt>
  420e3c:	ldr	w8, [x27, #136]
  420e40:	orr	w8, w8, #0x20000
  420e44:	str	w8, [x27, #136]
  420e48:	ldr	x0, [x27, #32]
  420e4c:	cbz	x0, 420ea0 <update_goal_chain@@Base+0x1238>
  420e50:	bl	4083a4 <chop_commands@@Base>
  420e54:	adrp	x8, 442000 <just_print_flag@@Base>
  420e58:	ldr	w8, [x8, #204]
  420e5c:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420e60:	cbz	w8, 420e78 <update_goal_chain@@Base+0x1210>
  420e64:	ldr	x8, [x27, #32]
  420e68:	ldrb	w8, [x8, #51]
  420e6c:	tbnz	w8, #0, 420e78 <update_goal_chain@@Base+0x1210>
  420e70:	ldr	w8, [x27, #136]
  420e74:	b	420ed4 <update_goal_chain@@Base+0x126c>
  420e78:	mov	x0, x27
  420e7c:	bl	408698 <execute_file_commands@@Base>
  420e80:	ldr	w8, [x27, #136]
  420e84:	mvn	w9, w8
  420e88:	tst	w9, #0xc
  420e8c:	b.eq	420ef4 <update_goal_chain@@Base+0x128c>  // b.none
  420e90:	ldrb	w8, [x28, #3236]
  420e94:	tbnz	w8, #1, 420f30 <update_goal_chain@@Base+0x12c8>
  420e98:	mov	w26, wzr
  420e9c:	b	420a40 <update_goal_chain@@Base+0xdd8>
  420ea0:	ldr	w8, [x27, #136]
  420ea4:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  420ea8:	tbnz	w8, #13, 420ed4 <update_goal_chain@@Base+0x126c>
  420eac:	tbnz	w8, #11, 420ed4 <update_goal_chain@@Base+0x126c>
  420eb0:	tbz	w8, #16, 420ec0 <update_goal_chain@@Base+0x1258>
  420eb4:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  420eb8:	ldr	w9, [x9, #3300]
  420ebc:	cbnz	w9, 420ecc <update_goal_chain@@Base+0x1264>
  420ec0:	mov	x0, x27
  420ec4:	bl	421f7c <notice_finished_file@@Base+0x6bc>
  420ec8:	ldr	w8, [x27, #136]
  420ecc:	orr	w8, w8, #0x3
  420ed0:	b	420ed8 <update_goal_chain@@Base+0x1270>
  420ed4:	and	w8, w8, #0xfffffffc
  420ed8:	mov	x0, x27
  420edc:	str	w8, [x27, #136]
  420ee0:	bl	4218c0 <notice_finished_file@@Base>
  420ee4:	ldr	w8, [x27, #136]
  420ee8:	mvn	w9, w8
  420eec:	tst	w9, #0xc
  420ef0:	b.ne	420e90 <update_goal_chain@@Base+0x1228>  // b.any
  420ef4:	ands	w8, w8, #0x3
  420ef8:	b.eq	420f54 <update_goal_chain@@Base+0x12ec>  // b.none
  420efc:	cmp	w8, #0x2
  420f00:	b.eq	420f78 <update_goal_chain@@Base+0x1310>  // b.none
  420f04:	cmp	w8, #0x3
  420f08:	b.ne	420fac <update_goal_chain@@Base+0x1344>  // b.any
  420f0c:	ldrb	w8, [x28, #3236]
  420f10:	tbz	w8, #0, 420fac <update_goal_chain@@Base+0x1344>
  420f14:	mov	w0, w23
  420f18:	bl	419be0 <print_spaces@@Base>
  420f1c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420f20:	mov	w2, #0x5                   	// #5
  420f24:	mov	x0, xzr
  420f28:	add	x1, x1, #0x31a
  420f2c:	b	420f98 <update_goal_chain@@Base+0x1330>
  420f30:	mov	w0, w23
  420f34:	bl	419be0 <print_spaces@@Base>
  420f38:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420f3c:	mov	w2, #0x5                   	// #5
  420f40:	mov	x0, xzr
  420f44:	add	x1, x1, #0x2fc
  420f48:	bl	406dc0 <dcgettext@plt>
  420f4c:	ldr	x1, [x27]
  420f50:	b	4203e8 <update_goal_chain@@Base+0x780>
  420f54:	ldrb	w8, [x28, #3236]
  420f58:	tbz	w8, #0, 420fac <update_goal_chain@@Base+0x1344>
  420f5c:	mov	w0, w23
  420f60:	bl	419be0 <print_spaces@@Base>
  420f64:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420f68:	mov	w2, #0x5                   	// #5
  420f6c:	mov	x0, xzr
  420f70:	add	x1, x1, #0x33e
  420f74:	b	420f98 <update_goal_chain@@Base+0x1330>
  420f78:	ldrb	w8, [x28, #3236]
  420f7c:	tbz	w8, #0, 420fac <update_goal_chain@@Base+0x1344>
  420f80:	mov	w0, w23
  420f84:	bl	419be0 <print_spaces@@Base>
  420f88:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  420f8c:	mov	w2, #0x5                   	// #5
  420f90:	mov	x0, xzr
  420f94:	add	x1, x1, #0x365
  420f98:	bl	406dc0 <dcgettext@plt>
  420f9c:	ldr	x1, [x27]
  420fa0:	bl	406e60 <printf@plt>
  420fa4:	ldr	x0, [x21, #2504]
  420fa8:	bl	406cf0 <fflush@plt>
  420fac:	ldr	w8, [x27, #136]
  420fb0:	orr	w9, w8, #0x400
  420fb4:	str	w9, [x27, #136]
  420fb8:	b	4202ec <update_goal_chain@@Base+0x684>
  420fbc:	mov	w26, wzr
  420fc0:	b	420fc8 <update_goal_chain@@Base+0x1360>
  420fc4:	mov	w26, w25
  420fc8:	mov	w0, w26
  420fcc:	ldp	x20, x19, [sp, #160]
  420fd0:	ldp	x22, x21, [sp, #144]
  420fd4:	ldp	x24, x23, [sp, #128]
  420fd8:	ldp	x26, x25, [sp, #112]
  420fdc:	ldp	x28, x27, [sp, #96]
  420fe0:	ldp	x29, x30, [sp, #80]
  420fe4:	add	sp, sp, #0xb0
  420fe8:	ret

0000000000420fec <f_mtime@@Base>:
  420fec:	stp	x29, x30, [sp, #-96]!
  420ff0:	stp	x28, x27, [sp, #16]
  420ff4:	stp	x26, x25, [sp, #32]
  420ff8:	stp	x24, x23, [sp, #48]
  420ffc:	stp	x22, x21, [sp, #64]
  421000:	stp	x20, x19, [sp, #80]
  421004:	mov	x29, sp
  421008:	sub	sp, sp, #0xb0
  42100c:	mov	x19, x0
  421010:	ldr	x0, [x0]
  421014:	mov	w21, w1
  421018:	bl	40701c <ar_name@@Base>
  42101c:	cbz	w0, 421118 <f_mtime@@Base+0x12c>
  421020:	ldr	x0, [x19]
  421024:	sub	x1, x29, #0x90
  421028:	sub	x2, x29, #0x10
  42102c:	bl	4070cc <ar_parse_name@@Base>
  421030:	ldur	x0, [x29, #-144]
  421034:	bl	40aae4 <lookup_file@@Base>
  421038:	mov	x20, x0
  42103c:	cbnz	x0, 421050 <f_mtime@@Base+0x64>
  421040:	ldur	x0, [x29, #-144]
  421044:	bl	423690 <strcache_add@@Base>
  421048:	bl	40ab6c <enter_file@@Base>
  42104c:	mov	x20, x0
  421050:	mov	x0, x20
  421054:	mov	w1, w21
  421058:	bl	420fec <f_mtime@@Base>
  42105c:	stur	x0, [x29, #-40]
  421060:	mov	x25, x20
  421064:	ldr	x20, [x20, #72]
  421068:	cbnz	x20, 421060 <f_mtime@@Base+0x74>
  42106c:	cbz	w21, 421110 <f_mtime@@Base+0x124>
  421070:	ldr	x20, [x25, #8]
  421074:	ldur	x1, [x29, #-144]
  421078:	mov	x0, x20
  42107c:	bl	406c10 <strcmp@plt>
  421080:	cbz	w0, 421110 <f_mtime@@Base+0x124>
  421084:	mov	x0, x20
  421088:	bl	406750 <strlen@plt>
  42108c:	ldur	x21, [x29, #-16]
  421090:	mov	x22, x0
  421094:	mov	x0, x21
  421098:	bl	406750 <strlen@plt>
  42109c:	add	x8, x22, x0
  4210a0:	add	x9, x8, #0x12
  4210a4:	and	x9, x9, #0xfffffffffffffff0
  4210a8:	mov	x10, sp
  4210ac:	sub	x24, x10, x9
  4210b0:	mov	x23, x0
  4210b4:	add	x26, x8, x24
  4210b8:	mov	sp, x24
  4210bc:	mov	x0, x24
  4210c0:	mov	x1, x20
  4210c4:	mov	x2, x22
  4210c8:	bl	406710 <memcpy@plt>
  4210cc:	add	x0, x24, x22
  4210d0:	mov	w8, #0x28                  	// #40
  4210d4:	strb	w8, [x0], #1
  4210d8:	mov	x1, x21
  4210dc:	mov	x2, x23
  4210e0:	bl	406710 <memcpy@plt>
  4210e4:	mov	w8, #0x29                  	// #41
  4210e8:	sturh	w8, [x26, #1]
  4210ec:	ldp	x20, x21, [x25]
  4210f0:	mov	x0, x24
  4210f4:	bl	423690 <strcache_add@@Base>
  4210f8:	cmp	x20, x21
  4210fc:	mov	x1, x0
  421100:	mov	x0, x19
  421104:	b.eq	4211d4 <f_mtime@@Base+0x1e8>  // b.none
  421108:	bl	40ac4c <rehash_file@@Base>
  42110c:	b	4211d8 <f_mtime@@Base+0x1ec>
  421110:	mov	x21, x19
  421114:	b	4211e4 <f_mtime@@Base+0x1f8>
  421118:	ldr	x0, [x19]
  42111c:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  421120:	mov	x20, x0
  421124:	stur	x0, [x29, #-40]
  421128:	cbz	w21, 4211c0 <f_mtime@@Base+0x1d4>
  42112c:	cmp	x20, #0x1
  421130:	b.ne	4211c0 <f_mtime@@Base+0x1d4>  // b.any
  421134:	ldrb	w8, [x19, #138]
  421138:	tbnz	w8, #1, 42160c <f_mtime@@Base+0x620>
  42113c:	ldr	x0, [x19]
  421140:	sub	x1, x29, #0x28
  421144:	mov	x2, xzr
  421148:	mov	x3, xzr
  42114c:	bl	4261c4 <vpath_search@@Base>
  421150:	mov	x20, x0
  421154:	cbz	x0, 42125c <f_mtime@@Base+0x270>
  421158:	ldur	x8, [x29, #-40]
  42115c:	cbz	x8, 421164 <f_mtime@@Base+0x178>
  421160:	str	x8, [x19, #112]
  421164:	mov	x0, x20
  421168:	bl	406750 <strlen@plt>
  42116c:	ldr	x8, [x19]
  421170:	mov	x21, x0
  421174:	mov	x0, x8
  421178:	bl	406750 <strlen@plt>
  42117c:	mvn	x8, x0
  421180:	add	x1, x21, x8
  421184:	mov	x0, x20
  421188:	bl	426134 <gpath_search@@Base>
  42118c:	cbz	w0, 4215ac <f_mtime@@Base+0x5c0>
  421190:	mov	x0, x19
  421194:	mov	x1, x20
  421198:	bl	40b020 <rename_file@@Base>
  42119c:	mov	x0, x19
  4211a0:	ldr	x19, [x19, #72]
  4211a4:	cbnz	x19, 42119c <f_mtime@@Base+0x1b0>
  4211a8:	ldr	x20, [x0, #112]
  4211ac:	cbnz	x20, 4217d4 <f_mtime@@Base+0x7e8>
  4211b0:	mov	w1, #0x1                   	// #1
  4211b4:	bl	420fec <f_mtime@@Base>
  4211b8:	mov	x20, x0
  4211bc:	b	4217d4 <f_mtime@@Base+0x7e8>
  4211c0:	mov	x21, x19
  4211c4:	adrp	x22, 442000 <just_print_flag@@Base>
  4211c8:	ldr	w8, [x22, #200]
  4211cc:	cbnz	w8, 421740 <f_mtime@@Base+0x754>
  4211d0:	b	421620 <f_mtime@@Base+0x634>
  4211d4:	bl	40b020 <rename_file@@Base>
  4211d8:	mov	x21, x19
  4211dc:	ldr	x19, [x19, #72]
  4211e0:	cbnz	x19, 4211d8 <f_mtime@@Base+0x1ec>
  4211e4:	ldur	x0, [x29, #-144]
  4211e8:	bl	406c60 <free@plt>
  4211ec:	ldr	w8, [x21, #136]
  4211f0:	orr	w8, w8, #0x80
  4211f4:	str	w8, [x21, #136]
  4211f8:	ldur	x8, [x29, #-40]
  4211fc:	cmp	x8, #0x1
  421200:	b.ne	42120c <f_mtime@@Base+0x220>  // b.any
  421204:	mov	w20, #0x1                   	// #1
  421208:	b	4217d4 <f_mtime@@Base+0x7e8>
  42120c:	ldr	x0, [x21, #8]
  421210:	bl	407120 <ar_member_date@@Base>
  421214:	cmn	x0, #0x1
  421218:	b.eq	421244 <f_mtime@@Base+0x258>  // b.none
  42121c:	mov	x1, x0
  421220:	ldr	x0, [x21, #8]
  421224:	mov	x2, xzr
  421228:	bl	40c114 <file_timestamp_cons@@Base>
  42122c:	mov	x20, x0
  421230:	stur	x0, [x29, #-40]
  421234:	adrp	x22, 442000 <just_print_flag@@Base>
  421238:	ldr	w8, [x22, #200]
  42123c:	cbnz	w8, 421740 <f_mtime@@Base+0x754>
  421240:	b	421620 <f_mtime@@Base+0x634>
  421244:	mov	w20, #0x1                   	// #1
  421248:	stur	x20, [x29, #-40]
  42124c:	adrp	x22, 442000 <just_print_flag@@Base>
  421250:	ldr	w8, [x22, #200]
  421254:	cbnz	w8, 421740 <f_mtime@@Base+0x754>
  421258:	b	421620 <f_mtime@@Base+0x634>
  42125c:	ldr	x20, [x19]
  421260:	ldrb	w8, [x20]
  421264:	cmp	w8, #0x2d
  421268:	b.ne	42160c <f_mtime@@Base+0x620>  // b.any
  42126c:	ldrb	w8, [x20, #1]
  421270:	cmp	w8, #0x6c
  421274:	b.ne	42160c <f_mtime@@Base+0x620>  // b.any
  421278:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  42127c:	add	x0, x0, #0x474
  421280:	bl	40a7e8 <variable_expand@@Base>
  421284:	bl	419e60 <xstrdup@@Base>
  421288:	mov	x21, x0
  42128c:	add	x0, x20, #0x2
  421290:	stur	x0, [x29, #-152]
  421294:	bl	406750 <strlen@plt>
  421298:	stur	x0, [x29, #-160]
  42129c:	sub	x0, x29, #0x10
  4212a0:	sub	x1, x29, #0x18
  4212a4:	stur	x21, [x29, #-176]
  4212a8:	stur	x21, [x29, #-16]
  4212ac:	bl	419efc <find_next_token@@Base>
  4212b0:	cbz	x0, 4215e8 <f_mtime@@Base+0x5fc>
  4212b4:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  4212b8:	mov	x21, x0
  4212bc:	mov	x20, xzr
  4212c0:	mov	w22, wzr
  4212c4:	add	x28, x28, #0x654
  4212c8:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  4212cc:	stur	wzr, [x29, #-164]
  4212d0:	b	421324 <f_mtime@@Base+0x338>
  4212d4:	mov	x0, x21
  4212d8:	bl	406750 <strlen@plt>
  4212dc:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4212e0:	mov	x25, x0
  4212e4:	mov	w2, #0x5                   	// #5
  4212e8:	mov	x0, xzr
  4212ec:	add	x1, x1, #0x484
  4212f0:	bl	406dc0 <dcgettext@plt>
  4212f4:	mov	x2, x0
  4212f8:	mov	x0, xzr
  4212fc:	mov	x1, x25
  421300:	mov	x3, x21
  421304:	bl	41ae34 <error@@Base>
  421308:	ldur	x8, [x29, #-24]
  42130c:	strb	w26, [x21, x8]
  421310:	sub	x0, x29, #0x10
  421314:	sub	x1, x29, #0x18
  421318:	bl	419efc <find_next_token@@Base>
  42131c:	mov	x21, x0
  421320:	cbz	x0, 421600 <f_mtime@@Base+0x614>
  421324:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  421328:	add	x0, x0, #0x3a9
  42132c:	bl	40a7e8 <variable_expand@@Base>
  421330:	ldur	x8, [x29, #-24]
  421334:	mov	x25, x0
  421338:	mov	x0, x21
  42133c:	ldrb	w26, [x21, x8]
  421340:	strb	wzr, [x21, x8]
  421344:	bl	41d7d0 <find_percent@@Base>
  421348:	cbz	x0, 4212d4 <f_mtime@@Base+0x2e8>
  42134c:	sub	x24, x0, x21
  421350:	mov	x27, x0
  421354:	mov	x0, x25
  421358:	mov	x1, x21
  42135c:	mov	x2, x24
  421360:	bl	409d08 <variable_buffer_output@@Base>
  421364:	ldp	x2, x1, [x29, #-160]
  421368:	bl	409d08 <variable_buffer_output@@Base>
  42136c:	ldur	x8, [x29, #-24]
  421370:	add	x1, x27, #0x1
  421374:	sub	x2, x8, x24
  421378:	bl	409d08 <variable_buffer_output@@Base>
  42137c:	ldur	x8, [x29, #-24]
  421380:	mov	x0, x25
  421384:	strb	w26, [x21, x8]
  421388:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  42138c:	cmp	x0, #0x1
  421390:	stur	x0, [x29, #-144]
  421394:	b.ne	4215f0 <f_mtime@@Base+0x604>  // b.any
  421398:	sub	x1, x29, #0x90
  42139c:	sub	x2, x29, #0x1c
  4213a0:	sub	x3, x29, #0x20
  4213a4:	mov	x0, x25
  4213a8:	bl	4261c4 <vpath_search@@Base>
  4213ac:	cbz	x0, 4213f0 <f_mtime@@Base+0x404>
  4213b0:	ldur	w9, [x29, #-28]
  4213b4:	cbz	x20, 4213d8 <f_mtime@@Base+0x3ec>
  4213b8:	cmp	w9, w22
  4213bc:	b.cc	4213d8 <f_mtime@@Base+0x3ec>  // b.lo, b.ul, b.last
  4213c0:	b.ne	4213f0 <f_mtime@@Base+0x404>  // b.any
  4213c4:	ldur	w8, [x29, #-32]
  4213c8:	ldur	w9, [x29, #-164]
  4213cc:	cmp	w8, w9
  4213d0:	b.cc	4213e0 <f_mtime@@Base+0x3f4>  // b.lo, b.ul, b.last
  4213d4:	b	4213f0 <f_mtime@@Base+0x404>
  4213d8:	ldur	w8, [x29, #-32]
  4213dc:	mov	w22, w9
  4213e0:	ldur	x9, [x29, #-144]
  4213e4:	mov	x20, x0
  4213e8:	stur	w8, [x29, #-164]
  4213ec:	stur	x9, [x29, #-40]
  4213f0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4213f4:	ldr	x21, [x8, #1656]
  4213f8:	cbz	x21, 421438 <f_mtime@@Base+0x44c>
  4213fc:	mov	x0, x25
  421400:	bl	406750 <strlen@plt>
  421404:	cmp	x21, x0
  421408:	b.cs	421458 <f_mtime@@Base+0x46c>  // b.hs, b.nlast
  42140c:	adrp	x21, 441000 <stdio_traced@@Base+0x1a48>
  421410:	add	x21, x21, #0x670
  421414:	ldr	x9, [x21, #16]
  421418:	ldr	x8, [x21]
  42141c:	str	x0, [x21, #8]
  421420:	add	x9, x0, x9
  421424:	add	x1, x9, #0x2
  421428:	mov	x0, x8
  42142c:	bl	419de0 <xrealloc@@Base>
  421430:	str	x0, [x21]
  421434:	b	42149c <f_mtime@@Base+0x4b0>
  421438:	ldur	x21, [x28, #44]
  42143c:	ldr	w8, [x28]
  421440:	cmp	x21, #0x3
  421444:	b.hi	421460 <f_mtime@@Base+0x474>  // b.pmore
  421448:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  42144c:	mov	w10, #0x4                   	// #4
  421450:	str	x10, [x9, #1664]
  421454:	b	421468 <f_mtime@@Base+0x47c>
  421458:	ldr	x0, [x23, #1648]
  42145c:	b	42149c <f_mtime@@Base+0x4b0>
  421460:	cmp	x21, #0x8
  421464:	b.cs	421478 <f_mtime@@Base+0x48c>  // b.hs, b.nlast
  421468:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  42146c:	mov	w10, #0x8                   	// #8
  421470:	mov	w21, #0x8                   	// #8
  421474:	str	x10, [x9, #1664]
  421478:	add	w8, w8, #0x3
  42147c:	mov	x0, x25
  421480:	str	w8, [x28]
  421484:	bl	406750 <strlen@plt>
  421488:	add	x8, x21, x0
  42148c:	stur	x0, [x28, #36]
  421490:	add	x0, x8, #0x2
  421494:	bl	419e14 <xmalloc@@Base>
  421498:	stur	x0, [x28, #28]
  42149c:	ldr	w21, [x28]
  4214a0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4214a4:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  4214a8:	add	x1, x1, #0x4af
  4214ac:	add	x2, x2, #0x46f
  4214b0:	mov	x3, x25
  4214b4:	bl	406800 <sprintf@plt>
  4214b8:	ldur	x0, [x28, #28]
  4214bc:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  4214c0:	cmp	x0, #0x1
  4214c4:	stur	x0, [x29, #-144]
  4214c8:	b.eq	4214f4 <f_mtime@@Base+0x508>  // b.none
  4214cc:	mvn	w24, w21
  4214d0:	cbz	x20, 4214dc <f_mtime@@Base+0x4f0>
  4214d4:	cmp	w22, w24
  4214d8:	b.ls	4214f4 <f_mtime@@Base+0x508>  // b.plast
  4214dc:	ldr	x0, [x23, #1648]
  4214e0:	bl	423690 <strcache_add@@Base>
  4214e4:	ldur	x8, [x29, #-144]
  4214e8:	mov	x20, x0
  4214ec:	mov	w22, w24
  4214f0:	stur	x8, [x29, #-40]
  4214f4:	ldr	x0, [x23, #1648]
  4214f8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4214fc:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  421500:	add	x1, x1, #0x4af
  421504:	add	x2, x2, #0x46b
  421508:	mov	x3, x25
  42150c:	bl	406800 <sprintf@plt>
  421510:	ldr	x0, [x23, #1648]
  421514:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  421518:	cmp	x0, #0x1
  42151c:	stur	x0, [x29, #-144]
  421520:	b.eq	42154c <f_mtime@@Base+0x560>  // b.none
  421524:	neg	w24, w21
  421528:	cmp	w22, w24
  42152c:	b.hi	421534 <f_mtime@@Base+0x548>  // b.pmore
  421530:	cbnz	x20, 42154c <f_mtime@@Base+0x560>
  421534:	ldr	x0, [x23, #1648]
  421538:	bl	423690 <strcache_add@@Base>
  42153c:	ldur	x8, [x29, #-144]
  421540:	mov	x20, x0
  421544:	mov	w22, w24
  421548:	stur	x8, [x29, #-40]
  42154c:	ldr	x0, [x23, #1648]
  421550:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  421554:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  421558:	add	x1, x1, #0x4af
  42155c:	add	x2, x2, #0x46b
  421560:	mov	x3, x25
  421564:	bl	406800 <sprintf@plt>
  421568:	ldr	x0, [x23, #1648]
  42156c:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  421570:	cmp	x0, #0x1
  421574:	stur	x0, [x29, #-144]
  421578:	b.eq	421310 <f_mtime@@Base+0x324>  // b.none
  42157c:	mov	w8, #0x1                   	// #1
  421580:	sub	w21, w8, w21
  421584:	cmp	w21, w22
  421588:	b.cc	421590 <f_mtime@@Base+0x5a4>  // b.lo, b.ul, b.last
  42158c:	cbnz	x20, 421310 <f_mtime@@Base+0x324>
  421590:	ldr	x0, [x23, #1648]
  421594:	bl	423690 <strcache_add@@Base>
  421598:	ldur	x8, [x29, #-144]
  42159c:	mov	x20, x0
  4215a0:	mov	w22, w21
  4215a4:	stur	x8, [x29, #-40]
  4215a8:	b	421310 <f_mtime@@Base+0x324>
  4215ac:	mov	x0, x19
  4215b0:	mov	x1, x20
  4215b4:	bl	40ac4c <rehash_file@@Base>
  4215b8:	mov	x21, x19
  4215bc:	ldr	x19, [x19, #72]
  4215c0:	cbnz	x19, 4215b8 <f_mtime@@Base+0x5cc>
  4215c4:	ldur	x8, [x29, #-40]
  4215c8:	cmn	x8, #0x1
  4215cc:	b.eq	421610 <f_mtime@@Base+0x624>  // b.none
  4215d0:	cmp	x8, #0x2
  4215d4:	b.eq	421610 <f_mtime@@Base+0x624>  // b.none
  4215d8:	mov	x0, x20
  4215dc:	bl	421d64 <notice_finished_file@@Base+0x4a4>
  4215e0:	stur	x0, [x29, #-40]
  4215e4:	b	421610 <f_mtime@@Base+0x624>
  4215e8:	mov	x20, xzr
  4215ec:	b	421600 <f_mtime@@Base+0x614>
  4215f0:	stur	x0, [x29, #-40]
  4215f4:	mov	x0, x25
  4215f8:	bl	423690 <strcache_add@@Base>
  4215fc:	mov	x20, x0
  421600:	ldur	x0, [x29, #-176]
  421604:	bl	406c60 <free@plt>
  421608:	cbnz	x20, 421158 <f_mtime@@Base+0x16c>
  42160c:	mov	x21, x19
  421610:	ldur	x20, [x29, #-40]
  421614:	adrp	x22, 442000 <just_print_flag@@Base>
  421618:	ldr	w8, [x22, #200]
  42161c:	cbnz	w8, 421740 <f_mtime@@Base+0x754>
  421620:	cmn	x20, #0x1
  421624:	b.eq	421740 <f_mtime@@Base+0x754>  // b.none
  421628:	cmp	x20, #0x1
  42162c:	b.eq	421740 <f_mtime@@Base+0x754>  // b.none
  421630:	ldrb	w8, [x21, #137]
  421634:	tbnz	w8, #2, 421740 <f_mtime@@Base+0x754>
  421638:	adrp	x19, 441000 <stdio_traced@@Base+0x1a48>
  42163c:	ldr	x8, [x19, #1640]
  421640:	cmp	x8, x20
  421644:	b.cs	421740 <f_mtime@@Base+0x754>  // b.hs, b.nlast
  421648:	sub	x0, x29, #0x10
  42164c:	bl	40c2cc <file_timestamp_now@@Base>
  421650:	ldursw	x8, [x29, #-16]
  421654:	add	x8, x8, x0
  421658:	sub	x8, x8, #0x1
  42165c:	cmp	x8, x20
  421660:	str	x8, [x19, #1640]
  421664:	b.cs	42173c <f_mtime@@Base+0x750>  // b.hs, b.nlast
  421668:	ldur	x8, [x29, #-40]
  42166c:	mov	x9, #0xcd6500000000        	// #225833675390976
  421670:	movk	x9, #0x41cd, lsl #48
  421674:	sub	x10, x0, #0x3
  421678:	sub	x8, x8, #0x3
  42167c:	fmov	d0, x9
  421680:	lsr	x9, x8, #30
  421684:	sub	x9, x9, x10, lsr #30
  421688:	and	w10, w10, #0x3fffffff
  42168c:	and	w8, w8, #0x3fffffff
  421690:	sub	w8, w8, w10
  421694:	scvtf	d2, w8
  421698:	mov	x8, #0xc00000000000        	// #211106232532992
  42169c:	ucvtf	d1, x9
  4216a0:	fdiv	d0, d2, d0
  4216a4:	movk	x8, #0x4058, lsl #48
  4216a8:	fadd	d0, d0, d1
  4216ac:	fmov	d1, x8
  4216b0:	fcmp	d0, d1
  4216b4:	b.lt	4216e0 <f_mtime@@Base+0x6f4>  // b.tstop
  4216b8:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  4216bc:	fmov	d1, x8
  4216c0:	fcmp	d0, d1
  4216c4:	b.hi	4216e0 <f_mtime@@Base+0x6f4>  // b.pmore
  4216c8:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  4216cc:	fcvtzu	x2, d0
  4216d0:	add	x1, x1, #0x2cf
  4216d4:	sub	x0, x29, #0x90
  4216d8:	bl	406800 <sprintf@plt>
  4216dc:	b	4216f0 <f_mtime@@Base+0x704>
  4216e0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4216e4:	add	x1, x1, #0xea3
  4216e8:	sub	x0, x29, #0x90
  4216ec:	bl	406800 <sprintf@plt>
  4216f0:	ldr	x0, [x21]
  4216f4:	bl	406750 <strlen@plt>
  4216f8:	mov	x19, x0
  4216fc:	sub	x0, x29, #0x90
  421700:	bl	406750 <strlen@plt>
  421704:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  421708:	add	x19, x0, x19
  42170c:	add	x1, x1, #0xea8
  421710:	mov	w2, #0x5                   	// #5
  421714:	mov	x0, xzr
  421718:	bl	406dc0 <dcgettext@plt>
  42171c:	ldr	x3, [x21]
  421720:	mov	x2, x0
  421724:	sub	x4, x29, #0x90
  421728:	mov	x0, xzr
  42172c:	mov	x1, x19
  421730:	bl	41ae34 <error@@Base>
  421734:	mov	w8, #0x1                   	// #1
  421738:	str	w8, [x22, #200]
  42173c:	ldur	x20, [x29, #-40]
  421740:	ldr	x8, [x21, #104]
  421744:	cmp	x8, #0x0
  421748:	csel	x8, x21, x8, eq  // eq = none
  42174c:	ldr	w9, [x8, #136]
  421750:	cmp	x20, #0x1
  421754:	b.ne	421784 <f_mtime@@Base+0x798>  // b.any
  421758:	mov	w10, w9
  42175c:	eor	w10, w10, w9
  421760:	tbnz	w10, #10, 421778 <f_mtime@@Base+0x78c>
  421764:	b	421774 <f_mtime@@Base+0x788>
  421768:	ldr	w10, [x8, #136]
  42176c:	eor	w10, w10, w9
  421770:	tbnz	w10, #10, 421778 <f_mtime@@Base+0x78c>
  421774:	str	x20, [x8, #112]
  421778:	ldr	x8, [x8, #56]
  42177c:	cbnz	x8, 421768 <f_mtime@@Base+0x77c>
  421780:	b	4217d4 <f_mtime@@Base+0x7e8>
  421784:	mov	w10, #0x410c                	// #16652
  421788:	mov	w11, w9
  42178c:	and	w12, w11, w10
  421790:	cmp	w12, #0x4, lsl #12
  421794:	b.eq	4217bc <f_mtime@@Base+0x7d0>  // b.none
  421798:	eor	w11, w11, w9
  42179c:	tbnz	w11, #10, 4217cc <f_mtime@@Base+0x7e0>
  4217a0:	str	x20, [x8, #112]
  4217a4:	ldr	x8, [x8, #56]
  4217a8:	cbz	x8, 4217d4 <f_mtime@@Base+0x7e8>
  4217ac:	ldr	w11, [x8, #136]
  4217b0:	and	w12, w11, w10
  4217b4:	cmp	w12, #0x4, lsl #12
  4217b8:	b.ne	421798 <f_mtime@@Base+0x7ac>  // b.any
  4217bc:	and	w11, w11, #0xffffbfff
  4217c0:	str	w11, [x8, #136]
  4217c4:	eor	w11, w11, w9
  4217c8:	tbz	w11, #10, 4217a0 <f_mtime@@Base+0x7b4>
  4217cc:	ldr	x8, [x8, #56]
  4217d0:	cbnz	x8, 4217ac <f_mtime@@Base+0x7c0>
  4217d4:	mov	x0, x20
  4217d8:	mov	sp, x29
  4217dc:	ldp	x20, x19, [sp, #80]
  4217e0:	ldp	x22, x21, [sp, #64]
  4217e4:	ldp	x24, x23, [sp, #48]
  4217e8:	ldp	x26, x25, [sp, #32]
  4217ec:	ldp	x28, x27, [sp, #16]
  4217f0:	ldp	x29, x30, [sp], #96
  4217f4:	ret

00000000004217f8 <show_goal_error@@Base>:
  4217f8:	stp	x29, x30, [sp, #-48]!
  4217fc:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  421800:	ldr	x8, [x8, #1632]
  421804:	stp	x22, x21, [sp, #16]
  421808:	stp	x20, x19, [sp, #32]
  42180c:	mov	x29, sp
  421810:	ldrh	w9, [x8, #32]
  421814:	and	w9, w9, #0x6
  421818:	cmp	w9, #0x2
  42181c:	b.ne	421844 <show_goal_error@@Base+0x4c>  // b.any
  421820:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  421824:	ldr	x22, [x9, #1624]
  421828:	cbz	x22, 421844 <show_goal_error@@Base+0x4c>
  42182c:	ldr	x8, [x8, #16]
  421830:	ldr	x9, [x22, #16]
  421834:	cmp	x8, x9
  421838:	b.eq	421854 <show_goal_error@@Base+0x5c>  // b.none
  42183c:	ldr	x22, [x22]
  421840:	cbnz	x22, 421830 <show_goal_error@@Base+0x38>
  421844:	ldp	x20, x19, [sp, #32]
  421848:	ldp	x22, x21, [sp, #16]
  42184c:	ldp	x29, x30, [sp], #48
  421850:	ret
  421854:	ldr	w19, [x22, #36]
  421858:	cbz	w19, 421844 <show_goal_error@@Base+0x4c>
  42185c:	ldr	x0, [x8]
  421860:	add	x20, x22, #0x28
  421864:	bl	406750 <strlen@plt>
  421868:	mov	x21, x0
  42186c:	mov	w0, w19
  421870:	bl	406b00 <strerror@plt>
  421874:	bl	406750 <strlen@plt>
  421878:	ldr	x8, [x22, #16]
  42187c:	add	x21, x0, x21
  421880:	ldr	x19, [x8]
  421884:	ldr	w8, [x22, #36]
  421888:	mov	w0, w8
  42188c:	bl	406b00 <strerror@plt>
  421890:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x1680>
  421894:	mov	x4, x0
  421898:	add	x2, x2, #0xd0a
  42189c:	mov	x0, x20
  4218a0:	mov	x1, x21
  4218a4:	mov	x3, x19
  4218a8:	bl	41ae34 <error@@Base>
  4218ac:	str	wzr, [x22, #36]
  4218b0:	ldp	x20, x19, [sp, #32]
  4218b4:	ldp	x22, x21, [sp, #16]
  4218b8:	ldp	x29, x30, [sp], #48
  4218bc:	ret

00000000004218c0 <notice_finished_file@@Base>:
  4218c0:	sub	sp, sp, #0xc0
  4218c4:	stp	x29, x30, [sp, #128]
  4218c8:	stp	x22, x21, [sp, #160]
  4218cc:	stp	x20, x19, [sp, #176]
  4218d0:	str	x23, [sp, #144]
  4218d4:	ldr	w23, [x0, #136]
  4218d8:	mov	w8, #0x40c                 	// #1036
  4218dc:	mov	x19, x0
  4218e0:	mov	w10, wzr
  4218e4:	orr	w9, w23, w8
  4218e8:	tst	w23, #0x3
  4218ec:	adrp	x22, 442000 <just_print_flag@@Base>
  4218f0:	add	x29, sp, #0x80
  4218f4:	str	w9, [x0, #136]
  4218f8:	b.ne	4219cc <notice_finished_file@@Base+0x10c>  // b.any
  4218fc:	ldr	w8, [x22, #204]
  421900:	cbz	w8, 4219cc <notice_finished_file@@Base+0x10c>
  421904:	ldr	x8, [x19, #32]
  421908:	cbz	x8, 421914 <notice_finished_file@@Base+0x54>
  42190c:	ldrb	w10, [x8, #51]
  421910:	tbnz	w10, #0, 421990 <notice_finished_file@@Base+0xd0>
  421914:	tbnz	w23, #13, 421960 <notice_finished_file@@Base+0xa0>
  421918:	cbz	x8, 4219c8 <notice_finished_file@@Base+0x108>
  42191c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  421920:	ldr	w8, [x8, #3232]
  421924:	cbnz	w8, 42194c <notice_finished_file@@Base+0x8c>
  421928:	ldr	x20, [x19]
  42192c:	mov	x0, x20
  421930:	bl	406750 <strlen@plt>
  421934:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  421938:	mov	x1, x0
  42193c:	add	x2, x2, #0x406
  421940:	mov	w0, wzr
  421944:	mov	x3, x20
  421948:	bl	41acbc <message@@Base>
  42194c:	adrp	x8, 442000 <just_print_flag@@Base>
  421950:	ldr	w8, [x8]
  421954:	cbz	w8, 421b44 <notice_finished_file@@Base+0x284>
  421958:	mov	w8, wzr
  42195c:	b	421d30 <notice_finished_file@@Base+0x470>
  421960:	and	w9, w9, #0xfffffffc
  421964:	mov	w10, wzr
  421968:	str	w9, [x19, #136]
  42196c:	ldr	x11, [x19, #120]
  421970:	and	w8, w23, #0xc
  421974:	cbnz	x11, 4219d8 <notice_finished_file@@Base+0x118>
  421978:	ldr	x11, [x19, #112]
  42197c:	str	x11, [x19, #120]
  421980:	cmp	w8, #0x8
  421984:	b.eq	4219e0 <notice_finished_file@@Base+0x120>  // b.none
  421988:	cbnz	w10, 4219e8 <notice_finished_file@@Base+0x128>
  42198c:	b	421a5c <notice_finished_file@@Base+0x19c>
  421990:	ldrh	w10, [x8, #48]
  421994:	cbz	x10, 4219cc <notice_finished_file@@Base+0x10c>
  421998:	ldr	x11, [x8, #40]
  42199c:	mov	x12, xzr
  4219a0:	ldrb	w13, [x11, x12]
  4219a4:	tbz	w13, #0, 421914 <notice_finished_file@@Base+0x54>
  4219a8:	add	x12, x12, #0x1
  4219ac:	cmp	x12, x10
  4219b0:	b.cc	4219a0 <notice_finished_file@@Base+0xe0>  // b.lo, b.ul, b.last
  4219b4:	mov	w10, wzr
  4219b8:	ldr	x11, [x19, #120]
  4219bc:	and	w8, w23, #0xc
  4219c0:	cbnz	x11, 4219d8 <notice_finished_file@@Base+0x118>
  4219c4:	b	421978 <notice_finished_file@@Base+0xb8>
  4219c8:	mov	w10, wzr
  4219cc:	ldr	x11, [x19, #120]
  4219d0:	and	w8, w23, #0xc
  4219d4:	cbz	x11, 421978 <notice_finished_file@@Base+0xb8>
  4219d8:	cmp	w8, #0x8
  4219dc:	b.ne	421988 <notice_finished_file@@Base+0xc8>  // b.any
  4219e0:	cbnz	w10, 4219e8 <notice_finished_file@@Base+0x128>
  4219e4:	tbnz	w9, #13, 421a5c <notice_finished_file@@Base+0x19c>
  4219e8:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  4219ec:	adrp	x11, 442000 <just_print_flag@@Base>
  4219f0:	ldr	w10, [x10, #3260]
  4219f4:	ldr	w11, [x11]
  4219f8:	ldr	w12, [x22, #204]
  4219fc:	orr	w10, w11, w10
  421a00:	orr	w10, w10, w12
  421a04:	cbz	w10, 421a38 <notice_finished_file@@Base+0x178>
  421a08:	ldr	x10, [x19, #32]
  421a0c:	cbz	x10, 421a38 <notice_finished_file@@Base+0x178>
  421a10:	ldrh	w9, [x10, #48]
  421a14:	subs	x11, x9, #0x1
  421a18:	b.lt	421a3c <notice_finished_file@@Base+0x17c>  // b.tstop
  421a1c:	ldr	x12, [x10, #40]
  421a20:	add	x9, x12, x9
  421a24:	ldurb	w12, [x9, #-1]
  421a28:	mov	x9, x11
  421a2c:	tbnz	w12, #0, 421a14 <notice_finished_file@@Base+0x154>
  421a30:	add	w9, w11, #0x1
  421a34:	b	421a50 <notice_finished_file@@Base+0x190>
  421a38:	tbnz	w9, #11, 421a44 <notice_finished_file@@Base+0x184>
  421a3c:	mov	w9, wzr
  421a40:	b	421a50 <notice_finished_file@@Base+0x190>
  421a44:	ldr	x9, [x19, #32]
  421a48:	cmp	x9, #0x0
  421a4c:	cset	w9, eq  // eq = none
  421a50:	cmp	w9, #0x0
  421a54:	csetm	x9, ne  // ne = any
  421a58:	str	x9, [x19, #112]
  421a5c:	ldr	x9, [x19, #104]
  421a60:	cbz	x9, 421aa4 <notice_finished_file@@Base+0x1e4>
  421a64:	ldr	x10, [x19, #112]
  421a68:	mov	x11, x9
  421a6c:	b	421a78 <notice_finished_file@@Base+0x1b8>
  421a70:	ldr	x11, [x11, #56]
  421a74:	cbz	x11, 421a98 <notice_finished_file@@Base+0x1d8>
  421a78:	ldrb	w12, [x11, #137]
  421a7c:	tbz	w12, #2, 421aa4 <notice_finished_file@@Base+0x1e4>
  421a80:	cbz	x10, 421a70 <notice_finished_file@@Base+0x1b0>
  421a84:	ldr	x12, [x11, #112]
  421a88:	sub	x13, x12, #0x1
  421a8c:	cmp	x13, x10
  421a90:	csel	x10, x10, x12, cc  // cc = lo, ul, last
  421a94:	b	421a70 <notice_finished_file@@Base+0x1b0>
  421a98:	str	x10, [x9, #112]
  421a9c:	ldr	x9, [x9, #56]
  421aa0:	cbnz	x9, 421a98 <notice_finished_file@@Base+0x1d8>
  421aa4:	ldr	w9, [x19, #136]
  421aa8:	and	w10, w9, #0x3
  421aac:	cmp	w10, #0x1
  421ab0:	b.eq	421b1c <notice_finished_file@@Base+0x25c>  // b.none
  421ab4:	cmp	w8, #0x8
  421ab8:	b.ne	421b1c <notice_finished_file@@Base+0x25c>  // b.any
  421abc:	ldr	x20, [x19, #48]
  421ac0:	cbnz	x20, 421ad0 <notice_finished_file@@Base+0x210>
  421ac4:	b	421b2c <notice_finished_file@@Base+0x26c>
  421ac8:	ldr	x20, [x20]
  421acc:	cbz	x20, 421b2c <notice_finished_file@@Base+0x26c>
  421ad0:	ldr	x8, [x20, #16]
  421ad4:	ldr	w9, [x8, #136]
  421ad8:	orr	w9, w9, #0xc
  421adc:	str	w9, [x8, #136]
  421ae0:	ldr	x8, [x20, #16]
  421ae4:	ldr	w9, [x8, #136]
  421ae8:	orr	w9, w9, #0x400
  421aec:	str	w9, [x8, #136]
  421af0:	ldr	x8, [x20, #16]
  421af4:	ldr	w9, [x19, #136]
  421af8:	ldr	w10, [x8, #136]
  421afc:	bfxil	w10, w9, #0, #2
  421b00:	str	w10, [x8, #136]
  421b04:	ldr	x0, [x20, #16]
  421b08:	ldrb	w8, [x0, #137]
  421b0c:	tbnz	w8, #5, 421ac8 <notice_finished_file@@Base+0x208>
  421b10:	mov	w1, wzr
  421b14:	bl	420fec <f_mtime@@Base>
  421b18:	b	421ac8 <notice_finished_file@@Base+0x208>
  421b1c:	cmp	w10, #0x1
  421b20:	b.ne	421b2c <notice_finished_file@@Base+0x26c>  // b.any
  421b24:	and	w8, w9, #0xfffffffc
  421b28:	str	w8, [x19, #136]
  421b2c:	ldp	x20, x19, [sp, #176]
  421b30:	ldp	x22, x21, [sp, #160]
  421b34:	ldr	x23, [sp, #144]
  421b38:	ldp	x29, x30, [sp, #128]
  421b3c:	add	sp, sp, #0xc0
  421b40:	ret
  421b44:	ldr	x0, [x19]
  421b48:	bl	40701c <ar_name@@Base>
  421b4c:	cbz	w0, 421b78 <notice_finished_file@@Base+0x2b8>
  421b50:	ldr	x0, [x19]
  421b54:	bl	4071f0 <ar_touch@@Base>
  421b58:	cmp	w0, #0x0
  421b5c:	mov	w8, #0x3                   	// #3
  421b60:	csel	w8, wzr, w8, eq  // eq = none
  421b64:	b	421d30 <notice_finished_file@@Base+0x470>
  421b68:	bl	406e70 <__errno_location@plt>
  421b6c:	ldr	w8, [x0]
  421b70:	cmp	w8, #0x4
  421b74:	b.ne	421bd4 <notice_finished_file@@Base+0x314>  // b.any
  421b78:	ldr	x0, [x19]
  421b7c:	mov	w1, #0x42                  	// #66
  421b80:	mov	w2, #0x1b6                 	// #438
  421b84:	bl	4069c0 <open@plt>
  421b88:	cmn	w0, #0x1
  421b8c:	b.eq	421b68 <notice_finished_file@@Base+0x2a8>  // b.none
  421b90:	mov	w21, w0
  421b94:	tbnz	w0, #31, 421bd4 <notice_finished_file@@Base+0x314>
  421b98:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421b9c:	mov	w8, #0x78                  	// #120
  421ba0:	add	x20, x20, #0x41d
  421ba4:	strb	w8, [x29, #28]
  421ba8:	mov	x2, sp
  421bac:	mov	w0, wzr
  421bb0:	mov	w1, w21
  421bb4:	bl	406da0 <__fxstat@plt>
  421bb8:	cmn	w0, #0x1
  421bbc:	b.ne	421be4 <notice_finished_file@@Base+0x324>  // b.any
  421bc0:	bl	406e70 <__errno_location@plt>
  421bc4:	ldr	w8, [x0]
  421bc8:	cmp	w8, #0x4
  421bcc:	b.eq	421ba8 <notice_finished_file@@Base+0x2e8>  // b.none
  421bd0:	b	421d20 <notice_finished_file@@Base+0x460>
  421bd4:	ldr	x1, [x19]
  421bd8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  421bdc:	add	x0, x0, #0x40f
  421be0:	b	421d28 <notice_finished_file@@Base+0x468>
  421be4:	tbnz	w0, #31, 421c1c <notice_finished_file@@Base+0x35c>
  421be8:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421bec:	add	x20, x20, #0x42c
  421bf0:	add	x1, x29, #0x1c
  421bf4:	mov	w2, #0x1                   	// #1
  421bf8:	mov	w0, w21
  421bfc:	bl	406d50 <read@plt>
  421c00:	cmn	w0, #0x1
  421c04:	b.ne	421c28 <notice_finished_file@@Base+0x368>  // b.any
  421c08:	bl	406e70 <__errno_location@plt>
  421c0c:	ldr	w8, [x0]
  421c10:	cmp	w8, #0x4
  421c14:	b.eq	421bf0 <notice_finished_file@@Base+0x330>  // b.none
  421c18:	b	421d20 <notice_finished_file@@Base+0x460>
  421c1c:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421c20:	add	x20, x20, #0x41d
  421c24:	b	421d20 <notice_finished_file@@Base+0x460>
  421c28:	tbnz	w0, #31, 421c60 <notice_finished_file@@Base+0x3a0>
  421c2c:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421c30:	add	x20, x20, #0x43a
  421c34:	mov	w0, w21
  421c38:	mov	x1, xzr
  421c3c:	mov	w2, wzr
  421c40:	bl	4068c0 <lseek@plt>
  421c44:	cmn	x0, #0x1
  421c48:	b.ne	421c6c <notice_finished_file@@Base+0x3ac>  // b.any
  421c4c:	bl	406e70 <__errno_location@plt>
  421c50:	ldr	w8, [x0]
  421c54:	cmp	w8, #0x4
  421c58:	b.eq	421c34 <notice_finished_file@@Base+0x374>  // b.none
  421c5c:	b	421d20 <notice_finished_file@@Base+0x460>
  421c60:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421c64:	add	x20, x20, #0x42c
  421c68:	b	421d20 <notice_finished_file@@Base+0x460>
  421c6c:	tbnz	x0, #63, 421ca4 <notice_finished_file@@Base+0x3e4>
  421c70:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421c74:	add	x20, x20, #0x449
  421c78:	add	x1, x29, #0x1c
  421c7c:	mov	w2, #0x1                   	// #1
  421c80:	mov	w0, w21
  421c84:	bl	406b50 <write@plt>
  421c88:	cmn	w0, #0x1
  421c8c:	b.ne	421cb0 <notice_finished_file@@Base+0x3f0>  // b.any
  421c90:	bl	406e70 <__errno_location@plt>
  421c94:	ldr	w8, [x0]
  421c98:	cmp	w8, #0x4
  421c9c:	b.eq	421c78 <notice_finished_file@@Base+0x3b8>  // b.none
  421ca0:	b	421d20 <notice_finished_file@@Base+0x460>
  421ca4:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421ca8:	add	x20, x20, #0x43a
  421cac:	b	421d20 <notice_finished_file@@Base+0x460>
  421cb0:	tbnz	w0, #31, 421cc8 <notice_finished_file@@Base+0x408>
  421cb4:	ldr	x8, [sp, #48]
  421cb8:	cbz	x8, 421cd4 <notice_finished_file@@Base+0x414>
  421cbc:	mov	w0, w21
  421cc0:	bl	406b10 <close@plt>
  421cc4:	b	421958 <notice_finished_file@@Base+0x98>
  421cc8:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421ccc:	add	x20, x20, #0x449
  421cd0:	b	421d20 <notice_finished_file@@Base+0x460>
  421cd4:	mov	w0, w21
  421cd8:	bl	406b10 <close@plt>
  421cdc:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421ce0:	add	x20, x20, #0x40f
  421ce4:	ldr	x0, [x19]
  421ce8:	mov	w1, #0x202                 	// #514
  421cec:	mov	w2, #0x1b6                 	// #438
  421cf0:	bl	4069c0 <open@plt>
  421cf4:	cmn	w0, #0x1
  421cf8:	b.ne	421d10 <notice_finished_file@@Base+0x450>  // b.any
  421cfc:	bl	406e70 <__errno_location@plt>
  421d00:	ldr	w8, [x0]
  421d04:	cmp	w8, #0x4
  421d08:	b.eq	421ce4 <notice_finished_file@@Base+0x424>  // b.none
  421d0c:	b	421d20 <notice_finished_file@@Base+0x460>
  421d10:	mov	w21, w0
  421d14:	tbz	w0, #31, 421cbc <notice_finished_file@@Base+0x3fc>
  421d18:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  421d1c:	add	x20, x20, #0x40f
  421d20:	ldr	x1, [x19]
  421d24:	mov	x0, x20
  421d28:	bl	41b1c0 <perror_with_name@@Base>
  421d2c:	mov	w8, #0x3                   	// #3
  421d30:	ldr	w9, [x19, #136]
  421d34:	adrp	x10, 441000 <stdio_traced@@Base+0x1a48>
  421d38:	and	w9, w9, #0xfffffffc
  421d3c:	orr	w9, w9, w8
  421d40:	str	w9, [x19, #136]
  421d44:	ldr	w8, [x10, #1608]
  421d48:	add	w8, w8, #0x1
  421d4c:	str	w8, [x10, #1608]
  421d50:	mov	w10, #0x1                   	// #1
  421d54:	ldr	x11, [x19, #120]
  421d58:	and	w8, w23, #0xc
  421d5c:	cbnz	x11, 4219d8 <notice_finished_file@@Base+0x118>
  421d60:	b	421978 <notice_finished_file@@Base+0xb8>
  421d64:	stp	x29, x30, [sp, #-64]!
  421d68:	stp	x28, x23, [sp, #16]
  421d6c:	stp	x22, x21, [sp, #32]
  421d70:	stp	x20, x19, [sp, #48]
  421d74:	mov	x29, sp
  421d78:	sub	sp, sp, #0x2, lsl #12
  421d7c:	sub	sp, sp, #0x90
  421d80:	mov	x20, x0
  421d84:	sub	x2, x29, #0x80
  421d88:	mov	w0, wzr
  421d8c:	mov	x1, x20
  421d90:	bl	406e90 <__xstat@plt>
  421d94:	cmn	w0, #0x1
  421d98:	b.ne	421dbc <notice_finished_file@@Base+0x4fc>  // b.any
  421d9c:	bl	406e70 <__errno_location@plt>
  421da0:	ldr	w8, [x0]
  421da4:	cmp	w8, #0x4
  421da8:	b.eq	421d84 <notice_finished_file@@Base+0x4c4>  // b.none
  421dac:	cmp	w8, #0x2
  421db0:	mov	w19, #0x1                   	// #1
  421db4:	b.ne	421de8 <notice_finished_file@@Base+0x528>  // b.any
  421db8:	b	421df0 <notice_finished_file@@Base+0x530>
  421dbc:	cbnz	w0, 421dd4 <notice_finished_file@@Base+0x514>
  421dc0:	ldp	x1, x2, [x29, #-40]
  421dc4:	mov	x0, x20
  421dc8:	bl	40c114 <file_timestamp_cons@@Base>
  421dcc:	mov	x19, x0
  421dd0:	b	421df0 <notice_finished_file@@Base+0x530>
  421dd4:	bl	406e70 <__errno_location@plt>
  421dd8:	ldr	w8, [x0]
  421ddc:	cmp	w8, #0x2
  421de0:	mov	w19, #0x1                   	// #1
  421de4:	b.eq	421df0 <notice_finished_file@@Base+0x530>  // b.none
  421de8:	cmp	w8, #0x14
  421dec:	b.ne	421f0c <notice_finished_file@@Base+0x64c>  // b.any
  421df0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  421df4:	ldr	w8, [x8, #3272]
  421df8:	cbz	w8, 421f5c <notice_finished_file@@Base+0x69c>
  421dfc:	mov	x0, x20
  421e00:	bl	406750 <strlen@plt>
  421e04:	cmp	x0, #0x1, lsl #12
  421e08:	b.hi	421f5c <notice_finished_file@@Base+0x69c>  // b.pmore
  421e0c:	add	x0, sp, #0x1, lsl #12
  421e10:	add	x0, x0, #0xc
  421e14:	add	x22, sp, #0x1, lsl #12
  421e18:	mov	x1, x20
  421e1c:	add	x22, x22, #0xc
  421e20:	bl	406d00 <strcpy@plt>
  421e24:	add	x23, sp, #0x8
  421e28:	add	x1, sp, #0x1, lsl #12
  421e2c:	add	x1, x1, #0xc
  421e30:	sub	x2, x29, #0x80
  421e34:	mov	w0, wzr
  421e38:	bl	406d30 <__lxstat@plt>
  421e3c:	cmn	w0, #0x1
  421e40:	b.ne	421e58 <notice_finished_file@@Base+0x598>  // b.any
  421e44:	bl	406e70 <__errno_location@plt>
  421e48:	ldr	w8, [x0]
  421e4c:	cmp	w8, #0x4
  421e50:	b.eq	421e28 <notice_finished_file@@Base+0x568>  // b.none
  421e54:	b	421f2c <notice_finished_file@@Base+0x66c>
  421e58:	cbnz	w0, 421f24 <notice_finished_file@@Base+0x664>
  421e5c:	ldur	w8, [x29, #-112]
  421e60:	and	w8, w8, #0xf000
  421e64:	cmp	w8, #0xa, lsl #12
  421e68:	b.ne	421f5c <notice_finished_file@@Base+0x69c>  // b.any
  421e6c:	ldp	x1, x2, [x29, #-40]
  421e70:	add	x0, sp, #0x1, lsl #12
  421e74:	add	x0, x0, #0xc
  421e78:	bl	40c114 <file_timestamp_cons@@Base>
  421e7c:	cmp	x0, x19
  421e80:	csel	x19, x0, x19, hi  // hi = pmore
  421e84:	add	x0, sp, #0x1, lsl #12
  421e88:	add	x0, x0, #0xc
  421e8c:	add	x1, sp, #0x8
  421e90:	mov	w2, #0x1000                	// #4096
  421e94:	bl	4067f0 <readlink@plt>
  421e98:	cmn	x0, #0x1
  421e9c:	b.ne	421eb4 <notice_finished_file@@Base+0x5f4>  // b.any
  421ea0:	bl	406e70 <__errno_location@plt>
  421ea4:	ldr	w8, [x0]
  421ea8:	cmp	w8, #0x4
  421eac:	b.eq	421e84 <notice_finished_file@@Base+0x5c4>  // b.none
  421eb0:	b	421f48 <notice_finished_file@@Base+0x688>
  421eb4:	mov	x20, x0
  421eb8:	tbnz	x0, #63, 421f48 <notice_finished_file@@Base+0x688>
  421ebc:	strb	wzr, [x23, x20]
  421ec0:	ldrb	w8, [sp, #8]
  421ec4:	add	x21, sp, #0x1, lsl #12
  421ec8:	add	x21, x21, #0xc
  421ecc:	cmp	w8, #0x2f
  421ed0:	b.eq	421efc <notice_finished_file@@Base+0x63c>  // b.none
  421ed4:	add	x0, sp, #0x1, lsl #12
  421ed8:	add	x0, x0, #0xc
  421edc:	mov	w1, #0x2f                  	// #47
  421ee0:	bl	406b30 <strrchr@plt>
  421ee4:	cbz	x0, 421efc <notice_finished_file@@Base+0x63c>
  421ee8:	sub	x8, x20, x22
  421eec:	add	x8, x8, x0
  421ef0:	cmp	x8, #0xffe
  421ef4:	b.gt	421f5c <notice_finished_file@@Base+0x69c>
  421ef8:	add	x21, x0, #0x1
  421efc:	add	x1, sp, #0x8
  421f00:	mov	x0, x21
  421f04:	bl	406d00 <strcpy@plt>
  421f08:	b	421e28 <notice_finished_file@@Base+0x568>
  421f0c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  421f10:	add	x0, x0, #0x425
  421f14:	mov	x1, x20
  421f18:	bl	41b1c0 <perror_with_name@@Base>
  421f1c:	mov	w19, #0x1                   	// #1
  421f20:	b	421f5c <notice_finished_file@@Base+0x69c>
  421f24:	bl	406e70 <__errno_location@plt>
  421f28:	ldr	w8, [x0]
  421f2c:	cmp	w8, #0x2
  421f30:	b.eq	421f5c <notice_finished_file@@Base+0x69c>  // b.none
  421f34:	cmp	w8, #0x14
  421f38:	b.eq	421f5c <notice_finished_file@@Base+0x69c>  // b.none
  421f3c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  421f40:	add	x0, x0, #0x458
  421f44:	b	421f50 <notice_finished_file@@Base+0x690>
  421f48:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  421f4c:	add	x0, x0, #0x460
  421f50:	add	x1, sp, #0x1, lsl #12
  421f54:	add	x1, x1, #0xc
  421f58:	bl	41b1c0 <perror_with_name@@Base>
  421f5c:	mov	x0, x19
  421f60:	add	sp, sp, #0x2, lsl #12
  421f64:	add	sp, sp, #0x90
  421f68:	ldp	x20, x19, [sp, #48]
  421f6c:	ldp	x22, x21, [sp, #32]
  421f70:	ldp	x28, x23, [sp, #16]
  421f74:	ldp	x29, x30, [sp], #64
  421f78:	ret
  421f7c:	stp	x29, x30, [sp, #-48]!
  421f80:	stp	x20, x19, [sp, #32]
  421f84:	ldr	x8, [x0, #24]
  421f88:	str	x21, [sp, #16]
  421f8c:	mov	x29, sp
  421f90:	cbz	x8, 421fcc <notice_finished_file@@Base+0x70c>
  421f94:	mov	w9, #0x402                 	// #1026
  421f98:	b	421fa4 <notice_finished_file@@Base+0x6e4>
  421f9c:	ldr	x8, [x8]
  421fa0:	cbz	x8, 421fcc <notice_finished_file@@Base+0x70c>
  421fa4:	ldr	x20, [x8, #16]
  421fa8:	ldr	w10, [x20, #136]
  421fac:	bics	wzr, w9, w10
  421fb0:	b.ne	421f9c <notice_finished_file@@Base+0x6dc>  // b.any
  421fb4:	ldrb	w10, [x0, #138]
  421fb8:	tbz	w10, #3, 421f9c <notice_finished_file@@Base+0x6dc>
  421fbc:	ldr	x8, [x20, #24]
  421fc0:	mov	x0, x20
  421fc4:	cbnz	x8, 421fa4 <notice_finished_file@@Base+0x6e4>
  421fc8:	b	421fd0 <notice_finished_file@@Base+0x710>
  421fcc:	mov	x20, x0
  421fd0:	bl	4217f8 <show_goal_error@@Base>
  421fd4:	ldr	x0, [x20]
  421fd8:	ldr	x21, [x20, #96]
  421fdc:	bl	406750 <strlen@plt>
  421fe0:	mov	x19, x0
  421fe4:	cbz	x21, 422048 <notice_finished_file@@Base+0x788>
  421fe8:	ldr	x0, [x21]
  421fec:	bl	406750 <strlen@plt>
  421ff0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  421ff4:	add	x8, x19, x0
  421ff8:	add	x1, x1, #0x394
  421ffc:	mov	w2, #0x5                   	// #5
  422000:	mov	x0, xzr
  422004:	add	x19, x8, #0x4
  422008:	bl	406dc0 <dcgettext@plt>
  42200c:	ldr	x8, [x20, #96]
  422010:	adrp	x9, 442000 <just_print_flag@@Base>
  422014:	ldr	w9, [x9, #4]
  422018:	ldr	x4, [x20]
  42201c:	ldr	x5, [x8]
  422020:	mov	x2, x0
  422024:	cbz	w9, 4220ac <notice_finished_file@@Base+0x7ec>
  422028:	adrp	x3, 42c000 <_IO_stdin_used@@Base+0x4680>
  42202c:	adrp	x6, 42b000 <_IO_stdin_used@@Base+0x3680>
  422030:	add	x3, x3, #0x5eb
  422034:	add	x6, x6, #0x456
  422038:	mov	x0, xzr
  42203c:	mov	x1, x19
  422040:	bl	41ae34 <error@@Base>
  422044:	b	422090 <notice_finished_file@@Base+0x7d0>
  422048:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42204c:	add	x1, x1, #0x3c4
  422050:	mov	w2, #0x5                   	// #5
  422054:	mov	x0, xzr
  422058:	add	x19, x19, #0x4
  42205c:	bl	406dc0 <dcgettext@plt>
  422060:	adrp	x8, 442000 <just_print_flag@@Base>
  422064:	ldr	w8, [x8, #4]
  422068:	ldr	x4, [x20]
  42206c:	mov	x2, x0
  422070:	cbz	w8, 4220c4 <notice_finished_file@@Base+0x804>
  422074:	adrp	x3, 42c000 <_IO_stdin_used@@Base+0x4680>
  422078:	adrp	x5, 42b000 <_IO_stdin_used@@Base+0x3680>
  42207c:	add	x3, x3, #0x5eb
  422080:	add	x5, x5, #0x456
  422084:	mov	x0, xzr
  422088:	mov	x1, x19
  42208c:	bl	41ae34 <error@@Base>
  422090:	ldr	w8, [x20, #136]
  422094:	ldr	x21, [sp, #16]
  422098:	and	w8, w8, #0xfff7ffff
  42209c:	str	w8, [x20, #136]
  4220a0:	ldp	x20, x19, [sp, #32]
  4220a4:	ldp	x29, x30, [sp], #48
  4220a8:	ret
  4220ac:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  4220b0:	add	x3, x3, #0x3a9
  4220b4:	mov	x0, xzr
  4220b8:	mov	x1, x19
  4220bc:	mov	x6, x3
  4220c0:	bl	41aff0 <fatal@@Base>
  4220c4:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  4220c8:	add	x3, x3, #0x3a9
  4220cc:	mov	x0, xzr
  4220d0:	mov	x1, x19
  4220d4:	mov	x5, x3
  4220d8:	bl	41aff0 <fatal@@Base>
  4220dc:	sub	sp, sp, #0x70
  4220e0:	stp	x29, x30, [sp, #16]
  4220e4:	stp	x28, x27, [sp, #32]
  4220e8:	stp	x26, x25, [sp, #48]
  4220ec:	stp	x24, x23, [sp, #64]
  4220f0:	stp	x22, x21, [sp, #80]
  4220f4:	stp	x20, x19, [sp, #96]
  4220f8:	ldr	x8, [x0, #104]
  4220fc:	mov	x20, x3
  422100:	mov	x19, x0
  422104:	add	w22, w1, #0x1
  422108:	cmp	x8, #0x0
  42210c:	csel	x8, x0, x8, eq  // eq = none
  422110:	ldr	w9, [x8, #136]
  422114:	add	x29, sp, #0x10
  422118:	str	x2, [sp]
  42211c:	orr	w9, w9, #0x200
  422120:	str	w9, [x8, #136]
  422124:	ldr	w8, [x0, #136]
  422128:	and	w9, w8, #0x6000
  42212c:	cmp	w9, #0x4, lsl #12
  422130:	b.ne	422170 <notice_finished_file@@Base+0x8b0>  // b.any
  422134:	ldr	x9, [x19, #32]
  422138:	tbnz	w8, #8, 42220c <notice_finished_file@@Base+0x94c>
  42213c:	cbnz	x9, 42220c <notice_finished_file@@Base+0x94c>
  422140:	mov	x0, x19
  422144:	mov	w1, w22
  422148:	bl	4115dc <try_implicit_rule@@Base>
  42214c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  422150:	ldr	w8, [x8, #3236]
  422154:	cbz	w0, 4221c8 <notice_finished_file@@Base+0x908>
  422158:	tbz	w8, #3, 4221fc <notice_finished_file@@Base+0x93c>
  42215c:	mov	w0, w22
  422160:	bl	419be0 <print_spaces@@Base>
  422164:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  422168:	add	x1, x1, #0xb
  42216c:	b	4221dc <notice_finished_file@@Base+0x91c>
  422170:	mov	x0, x19
  422174:	mov	w1, w22
  422178:	bl	420070 <update_goal_chain@@Base+0x408>
  42217c:	mov	w24, w0
  422180:	mov	x8, x19
  422184:	mov	x22, x8
  422188:	ldr	x8, [x8, #72]
  42218c:	cbnz	x8, 422184 <notice_finished_file@@Base+0x8c4>
  422190:	ldr	x0, [x22, #112]
  422194:	cbnz	x0, 4221a4 <notice_finished_file@@Base+0x8e4>
  422198:	mov	w1, #0x1                   	// #1
  42219c:	mov	x0, x22
  4221a0:	bl	420fec <f_mtime@@Base>
  4221a4:	mov	x23, x22
  4221a8:	ldr	x22, [x22, #72]
  4221ac:	cbnz	x22, 4221a4 <notice_finished_file@@Base+0x8e4>
  4221b0:	cmp	x0, #0x1
  4221b4:	b.eq	422258 <notice_finished_file@@Base+0x998>  // b.none
  4221b8:	ldr	x8, [sp]
  4221bc:	cmp	x0, x8
  4221c0:	b.ls	422260 <notice_finished_file@@Base+0x9a0>  // b.plast
  4221c4:	b	422258 <notice_finished_file@@Base+0x998>
  4221c8:	tbz	w8, #3, 4221fc <notice_finished_file@@Base+0x93c>
  4221cc:	mov	w0, w22
  4221d0:	bl	419be0 <print_spaces@@Base>
  4221d4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4221d8:	add	x1, x1, #0x2d
  4221dc:	mov	w2, #0x5                   	// #5
  4221e0:	mov	x0, xzr
  4221e4:	bl	406dc0 <dcgettext@plt>
  4221e8:	ldr	x1, [x19]
  4221ec:	bl	406e60 <printf@plt>
  4221f0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4221f4:	ldr	x0, [x8, #2504]
  4221f8:	bl	406cf0 <fflush@plt>
  4221fc:	ldr	w8, [x19, #136]
  422200:	ldr	x9, [x19, #32]
  422204:	orr	w8, w8, #0x100
  422208:	str	w8, [x19, #136]
  42220c:	cbz	x9, 422420 <notice_finished_file@@Base+0xb60>
  422210:	mov	x8, x19
  422214:	mov	x24, x8
  422218:	ldr	x8, [x8, #72]
  42221c:	cbnz	x8, 422214 <notice_finished_file@@Base+0x954>
  422220:	ldr	x0, [x24, #112]
  422224:	cbnz	x0, 422234 <notice_finished_file@@Base+0x974>
  422228:	mov	w1, #0x1                   	// #1
  42222c:	mov	x0, x24
  422230:	bl	420fec <f_mtime@@Base>
  422234:	mov	x23, x24
  422238:	ldr	x24, [x24, #72]
  42223c:	cbnz	x24, 422234 <notice_finished_file@@Base+0x974>
  422240:	cmp	x0, #0x1
  422244:	b.eq	4222b4 <notice_finished_file@@Base+0x9f4>  // b.none
  422248:	ldr	x8, [sp]
  42224c:	cmp	x0, x8
  422250:	b.ls	4222b4 <notice_finished_file@@Base+0x9f4>  // b.plast
  422254:	mov	w24, wzr
  422258:	mov	w8, #0x1                   	// #1
  42225c:	str	w8, [x20]
  422260:	ldr	x8, [x23, #104]
  422264:	mov	w0, w24
  422268:	cmp	x8, #0x0
  42226c:	csel	x8, x23, x8, eq  // eq = none
  422270:	ldr	w9, [x8, #136]
  422274:	and	w9, w9, #0xfffffdff
  422278:	str	w9, [x8, #136]
  42227c:	ldr	x8, [x19, #104]
  422280:	cmp	x8, #0x0
  422284:	csel	x8, x19, x8, eq  // eq = none
  422288:	ldr	w9, [x8, #136]
  42228c:	and	w9, w9, #0xfffffdff
  422290:	str	w9, [x8, #136]
  422294:	ldp	x20, x19, [sp, #96]
  422298:	ldp	x22, x21, [sp, #80]
  42229c:	ldp	x24, x23, [sp, #64]
  4222a0:	ldp	x26, x25, [sp, #48]
  4222a4:	ldp	x28, x27, [sp, #32]
  4222a8:	ldp	x29, x30, [sp, #16]
  4222ac:	add	sp, sp, #0x70
  4222b0:	ret
  4222b4:	ldr	w8, [x23, #136]
  4222b8:	ubfx	w8, w8, #2, #2
  4222bc:	cmp	w8, #0x2
  4222c0:	b.eq	4222dc <notice_finished_file@@Base+0xa1c>  // b.none
  4222c4:	cmp	w8, #0x1
  4222c8:	b.ne	4222d0 <notice_finished_file@@Base+0xa10>  // b.any
  4222cc:	str	wzr, [x23, #128]
  4222d0:	mov	x0, x23
  4222d4:	mov	w1, wzr
  4222d8:	bl	40c0c8 <set_command_state@@Base>
  4222dc:	mov	x26, x23
  4222e0:	ldr	x21, [x26, #24]!
  4222e4:	cbz	x21, 422498 <notice_finished_file@@Base+0xbd8>
  4222e8:	mov	w28, wzr
  4222ec:	mov	x25, xzr
  4222f0:	mov	w24, wzr
  4222f4:	b	422320 <notice_finished_file@@Base+0xa60>
  4222f8:	ldr	w8, [x8, #136]
  4222fc:	mov	x25, x21
  422300:	ubfx	w8, w8, #2, #2
  422304:	sub	w8, w8, #0x1
  422308:	cmp	w8, #0x1
  42230c:	csinc	w28, w28, wzr, hi  // hi = pmore
  422310:	ldr	x8, [x25]
  422314:	mov	x25, x21
  422318:	mov	x21, x8
  42231c:	cbz	x8, 422484 <notice_finished_file@@Base+0xbc4>
  422320:	ldr	x27, [x21, #16]
  422324:	ldr	x8, [x27, #104]
  422328:	cmp	x8, #0x0
  42232c:	csel	x8, x27, x8, eq  // eq = none
  422330:	ldrb	w8, [x8, #137]
  422334:	tbnz	w8, #1, 4223a0 <notice_finished_file@@Base+0xae0>
  422338:	str	x23, [x27, #96]
  42233c:	ldr	w8, [x20]
  422340:	ldr	x2, [sp]
  422344:	sub	x3, x29, #0x4
  422348:	mov	x0, x27
  42234c:	mov	w1, w22
  422350:	stur	w8, [x29, #-4]
  422354:	bl	4220dc <notice_finished_file@@Base+0x81c>
  422358:	ldrb	w8, [x21, #33]
  42235c:	cmp	w0, w24
  422360:	csel	w24, w0, w24, hi  // hi = pmore
  422364:	tbnz	w8, #1, 422370 <notice_finished_file@@Base+0xab0>
  422368:	ldur	w8, [x29, #-4]
  42236c:	str	w8, [x20]
  422370:	ldr	x8, [x21, #16]
  422374:	ldr	x9, [x8, #72]
  422378:	cbz	x9, 42238c <notice_finished_file@@Base+0xacc>
  42237c:	mov	x8, x9
  422380:	ldr	x9, [x9, #72]
  422384:	cbnz	x9, 42237c <notice_finished_file@@Base+0xabc>
  422388:	str	x8, [x21, #16]
  42238c:	cbz	w24, 4222f8 <notice_finished_file@@Base+0xa38>
  422390:	adrp	x9, 442000 <just_print_flag@@Base>
  422394:	ldr	w9, [x9, #4]
  422398:	cbnz	w9, 4222f8 <notice_finished_file@@Base+0xa38>
  42239c:	b	422484 <notice_finished_file@@Base+0xbc4>
  4223a0:	ldr	x0, [x23]
  4223a4:	bl	406750 <strlen@plt>
  4223a8:	ldr	x8, [x27]
  4223ac:	mov	x27, x0
  4223b0:	mov	x0, x8
  4223b4:	bl	406750 <strlen@plt>
  4223b8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4223bc:	add	x27, x0, x27
  4223c0:	mov	w2, #0x5                   	// #5
  4223c4:	mov	x0, xzr
  4223c8:	add	x1, x1, #0x6f
  4223cc:	bl	406dc0 <dcgettext@plt>
  4223d0:	ldr	x8, [x21, #16]
  4223d4:	ldr	x3, [x23]
  4223d8:	mov	x2, x0
  4223dc:	mov	x0, xzr
  4223e0:	ldr	x4, [x8]
  4223e4:	mov	x1, x27
  4223e8:	bl	41ae34 <error@@Base>
  4223ec:	ldr	x8, [x21]
  4223f0:	cbz	x25, 422408 <notice_finished_file@@Base+0xb48>
  4223f4:	mov	x0, x21
  4223f8:	str	x8, [x25]
  4223fc:	bl	406c60 <free@plt>
  422400:	mov	x21, x25
  422404:	b	422310 <notice_finished_file@@Base+0xa50>
  422408:	mov	x0, x21
  42240c:	str	x8, [x26]
  422410:	bl	406c60 <free@plt>
  422414:	mov	x21, xzr
  422418:	mov	x25, x26
  42241c:	b	422310 <notice_finished_file@@Base+0xa50>
  422420:	tbnz	w8, #11, 422210 <notice_finished_file@@Base+0x950>
  422424:	adrp	x21, 442000 <just_print_flag@@Base>
  422428:	ldr	x8, [x21, #40]
  42242c:	cbz	x8, 422210 <notice_finished_file@@Base+0x950>
  422430:	ldr	x9, [x8, #32]
  422434:	cbz	x9, 422210 <notice_finished_file@@Base+0x950>
  422438:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  42243c:	ldrb	w9, [x9, #3236]
  422440:	tbz	w9, #3, 422478 <notice_finished_file@@Base+0xbb8>
  422444:	mov	w0, w22
  422448:	bl	419be0 <print_spaces@@Base>
  42244c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  422450:	add	x1, x1, #0x3e4
  422454:	mov	w2, #0x5                   	// #5
  422458:	mov	x0, xzr
  42245c:	bl	406dc0 <dcgettext@plt>
  422460:	ldr	x1, [x19]
  422464:	bl	406e60 <printf@plt>
  422468:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  42246c:	ldr	x0, [x8, #2504]
  422470:	bl	406cf0 <fflush@plt>
  422474:	ldr	x8, [x21, #40]
  422478:	ldr	x8, [x8, #32]
  42247c:	str	x8, [x19, #32]
  422480:	b	422210 <notice_finished_file@@Base+0x950>
  422484:	cbz	w28, 422260 <notice_finished_file@@Base+0x9a0>
  422488:	mov	w1, #0x1                   	// #1
  42248c:	mov	x0, x23
  422490:	bl	40c0c8 <set_command_state@@Base>
  422494:	b	422260 <notice_finished_file@@Base+0x9a0>
  422498:	mov	w24, wzr
  42249c:	b	422260 <notice_finished_file@@Base+0x9a0>

00000000004224a0 <snap_implicit_rules@@Base>:
  4224a0:	sub	sp, sp, #0x70
  4224a4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x1680>
  4224a8:	add	x0, x0, #0x521
  4224ac:	mov	w1, #0xe                   	// #14
  4224b0:	stp	x29, x30, [sp, #16]
  4224b4:	stp	x28, x27, [sp, #32]
  4224b8:	stp	x26, x25, [sp, #48]
  4224bc:	stp	x24, x23, [sp, #64]
  4224c0:	stp	x22, x21, [sp, #80]
  4224c4:	stp	x20, x19, [sp, #96]
  4224c8:	add	x29, sp, #0x10
  4224cc:	bl	424110 <lookup_variable@@Base>
  4224d0:	bl	40b6bc <expand_extra_prereqs@@Base>
  4224d4:	mov	x21, x0
  4224d8:	adrp	x25, 442000 <just_print_flag@@Base>
  4224dc:	str	xzr, [x25, #232]
  4224e0:	cbz	x0, 422538 <snap_implicit_rules@@Base+0x98>
  4224e4:	mov	x20, xzr
  4224e8:	mov	w22, wzr
  4224ec:	mov	x19, x21
  4224f0:	b	422500 <snap_implicit_rules@@Base+0x60>
  4224f4:	ldr	x19, [x19]
  4224f8:	add	w22, w22, #0x1
  4224fc:	cbz	x19, 42253c <snap_implicit_rules@@Base+0x9c>
  422500:	ldr	x0, [x19, #8]
  422504:	cbz	x0, 422518 <snap_implicit_rules@@Base+0x78>
  422508:	bl	406750 <strlen@plt>
  42250c:	cmp	x0, x20
  422510:	b.ls	4224f4 <snap_implicit_rules@@Base+0x54>  // b.plast
  422514:	b	42252c <snap_implicit_rules@@Base+0x8c>
  422518:	ldr	x8, [x19, #16]
  42251c:	ldr	x0, [x8]
  422520:	bl	406750 <strlen@plt>
  422524:	cmp	x0, x20
  422528:	b.ls	4224f4 <snap_implicit_rules@@Base+0x54>  // b.plast
  42252c:	mov	x20, x0
  422530:	str	x0, [x25, #232]
  422534:	b	4224f4 <snap_implicit_rules@@Base+0x54>
  422538:	mov	w22, wzr
  42253c:	adrp	x8, 442000 <just_print_flag@@Base>
  422540:	ldr	x28, [x8, #224]
  422544:	adrp	x9, 442000 <just_print_flag@@Base>
  422548:	adrp	x19, 442000 <just_print_flag@@Base>
  42254c:	adrp	x10, 442000 <just_print_flag@@Base>
  422550:	str	wzr, [x9, #244]
  422554:	str	wzr, [x19, #240]
  422558:	str	wzr, [x10, #256]
  42255c:	cbz	x28, 422700 <snap_implicit_rules@@Base+0x260>
  422560:	mov	w8, wzr
  422564:	mov	w9, wzr
  422568:	mov	x20, xzr
  42256c:	mov	x27, xzr
  422570:	stur	w22, [x29, #-4]
  422574:	str	x21, [sp]
  422578:	cbz	x21, 422708 <snap_implicit_rules@@Base+0x268>
  42257c:	add	w9, w9, #0x1
  422580:	str	w9, [x10, #256]
  422584:	ldrh	w9, [x28, #48]
  422588:	cmp	w8, w9
  42258c:	b.cs	422594 <snap_implicit_rules@@Base+0xf4>  // b.hs, b.nlast
  422590:	str	w9, [x19, #240]
  422594:	ldr	x21, [x28, #32]
  422598:	cbz	x21, 4226b4 <snap_implicit_rules@@Base+0x214>
  42259c:	ldur	w26, [x29, #-4]
  4225a0:	mov	x19, xzr
  4225a4:	b	4225bc <snap_implicit_rules@@Base+0x11c>
  4225a8:	ldrh	w9, [x21, #32]
  4225ac:	and	w9, w9, #0xfffffeff
  4225b0:	strh	w9, [x21, #32]
  4225b4:	mov	x21, x8
  4225b8:	cbz	x21, 422688 <snap_implicit_rules@@Base+0x1e8>
  4225bc:	ldr	x22, [x21, #8]
  4225c0:	cbnz	x22, 4225cc <snap_implicit_rules@@Base+0x12c>
  4225c4:	ldr	x8, [x21, #16]
  4225c8:	ldr	x22, [x8]
  4225cc:	mov	x0, x22
  4225d0:	bl	406750 <strlen@plt>
  4225d4:	mov	x24, x0
  4225d8:	mov	w1, #0x2f                  	// #47
  4225dc:	mov	x0, x22
  4225e0:	bl	406b30 <strrchr@plt>
  4225e4:	mov	x23, x0
  4225e8:	cbz	x0, 4225f8 <snap_implicit_rules@@Base+0x158>
  4225ec:	mov	w1, #0x25                  	// #37
  4225f0:	mov	x0, x23
  4225f4:	bl	406c80 <strchr@plt>
  4225f8:	ldr	x8, [x25, #232]
  4225fc:	cmp	x24, x8
  422600:	b.ls	422608 <snap_implicit_rules@@Base+0x168>  // b.plast
  422604:	str	x24, [x25, #232]
  422608:	ldr	x8, [x21]
  42260c:	add	w26, w26, #0x1
  422610:	cmp	x8, #0x0
  422614:	csel	x19, x21, x19, eq  // eq = none
  422618:	cbz	x0, 4225a8 <snap_implicit_rules@@Base+0x108>
  42261c:	cmp	x23, x22
  422620:	cinc	x8, x23, eq  // eq = none
  422624:	sub	x23, x8, x22
  422628:	cmp	x23, x27
  42262c:	b.ls	422644 <snap_implicit_rules@@Base+0x1a4>  // b.plast
  422630:	add	x1, x23, #0x1
  422634:	mov	x0, x20
  422638:	bl	419de0 <xrealloc@@Base>
  42263c:	mov	x20, x0
  422640:	mov	x27, x23
  422644:	mov	x0, x20
  422648:	mov	x1, x22
  42264c:	mov	x2, x23
  422650:	bl	406710 <memcpy@plt>
  422654:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  422658:	mov	x0, x20
  42265c:	add	x1, x1, #0x3a9
  422660:	strb	wzr, [x20, x23]
  422664:	bl	408f3c <dir_file_exists_p@@Base>
  422668:	ldrh	w8, [x21, #32]
  42266c:	cmp	w0, #0x0
  422670:	cset	w9, eq  // eq = none
  422674:	and	w8, w8, #0xfffffeff
  422678:	orr	w8, w8, w9, lsl #8
  42267c:	strh	w8, [x21, #32]
  422680:	ldr	x21, [x21]
  422684:	cbnz	x21, 4225bc <snap_implicit_rules@@Base+0x11c>
  422688:	ldr	x21, [sp]
  42268c:	mov	x0, x21
  422690:	bl	41a08c <copy_dep_chain@@Base>
  422694:	cbz	x19, 4226c8 <snap_implicit_rules@@Base+0x228>
  422698:	str	x0, [x19]
  42269c:	adrp	x19, 442000 <just_print_flag@@Base>
  4226a0:	adrp	x8, 442000 <just_print_flag@@Base>
  4226a4:	ldr	w8, [x8, #244]
  4226a8:	cmp	w26, w8
  4226ac:	b.hi	4226e0 <snap_implicit_rules@@Base+0x240>  // b.pmore
  4226b0:	b	4226e8 <snap_implicit_rules@@Base+0x248>
  4226b4:	ldr	x21, [sp]
  4226b8:	mov	x0, x21
  4226bc:	bl	41a08c <copy_dep_chain@@Base>
  4226c0:	ldur	w26, [x29, #-4]
  4226c4:	b	4226cc <snap_implicit_rules@@Base+0x22c>
  4226c8:	adrp	x19, 442000 <just_print_flag@@Base>
  4226cc:	str	x0, [x28, #32]
  4226d0:	adrp	x8, 442000 <just_print_flag@@Base>
  4226d4:	ldr	w8, [x8, #244]
  4226d8:	cmp	w26, w8
  4226dc:	b.ls	4226e8 <snap_implicit_rules@@Base+0x248>  // b.plast
  4226e0:	adrp	x8, 442000 <just_print_flag@@Base>
  4226e4:	str	w26, [x8, #244]
  4226e8:	ldr	x28, [x28]
  4226ec:	cbz	x28, 422858 <snap_implicit_rules@@Base+0x3b8>
  4226f0:	adrp	x10, 442000 <just_print_flag@@Base>
  4226f4:	ldr	w9, [x10, #256]
  4226f8:	ldr	w8, [x19, #240]
  4226fc:	b	42257c <snap_implicit_rules@@Base+0xdc>
  422700:	mov	x20, xzr
  422704:	b	422858 <snap_implicit_rules@@Base+0x3b8>
  422708:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x2680>
  42270c:	add	x21, x21, #0x3a9
  422710:	add	w9, w9, #0x1
  422714:	str	w9, [x10, #256]
  422718:	ldrh	w9, [x28, #48]
  42271c:	cmp	w8, w9
  422720:	b.cs	422728 <snap_implicit_rules@@Base+0x288>  // b.hs, b.nlast
  422724:	str	w9, [x19, #240]
  422728:	ldr	x26, [x28, #32]
  42272c:	cbz	x26, 42283c <snap_implicit_rules@@Base+0x39c>
  422730:	ldur	w19, [x29, #-4]
  422734:	b	42274c <snap_implicit_rules@@Base+0x2ac>
  422738:	ldrh	w8, [x26, #32]
  42273c:	and	w8, w8, #0xfffffeff
  422740:	strh	w8, [x26, #32]
  422744:	ldr	x26, [x26]
  422748:	cbz	x26, 422808 <snap_implicit_rules@@Base+0x368>
  42274c:	ldr	x22, [x26, #8]
  422750:	cbnz	x22, 42275c <snap_implicit_rules@@Base+0x2bc>
  422754:	ldr	x8, [x26, #16]
  422758:	ldr	x22, [x8]
  42275c:	mov	x0, x22
  422760:	bl	406750 <strlen@plt>
  422764:	mov	x24, x0
  422768:	mov	w1, #0x2f                  	// #47
  42276c:	mov	x0, x22
  422770:	bl	406b30 <strrchr@plt>
  422774:	mov	x23, x0
  422778:	cbz	x0, 422788 <snap_implicit_rules@@Base+0x2e8>
  42277c:	mov	w1, #0x25                  	// #37
  422780:	mov	x0, x23
  422784:	bl	406c80 <strchr@plt>
  422788:	ldr	x8, [x25, #232]
  42278c:	cmp	x24, x8
  422790:	b.ls	422798 <snap_implicit_rules@@Base+0x2f8>  // b.plast
  422794:	str	x24, [x25, #232]
  422798:	add	w19, w19, #0x1
  42279c:	cbz	x0, 422738 <snap_implicit_rules@@Base+0x298>
  4227a0:	cmp	x23, x22
  4227a4:	cinc	x8, x23, eq  // eq = none
  4227a8:	sub	x23, x8, x22
  4227ac:	cmp	x23, x27
  4227b0:	b.ls	4227c8 <snap_implicit_rules@@Base+0x328>  // b.plast
  4227b4:	add	x1, x23, #0x1
  4227b8:	mov	x0, x20
  4227bc:	bl	419de0 <xrealloc@@Base>
  4227c0:	mov	x20, x0
  4227c4:	mov	x27, x23
  4227c8:	mov	x0, x20
  4227cc:	mov	x1, x22
  4227d0:	mov	x2, x23
  4227d4:	bl	406710 <memcpy@plt>
  4227d8:	mov	x0, x20
  4227dc:	mov	x1, x21
  4227e0:	strb	wzr, [x20, x23]
  4227e4:	bl	408f3c <dir_file_exists_p@@Base>
  4227e8:	ldrh	w8, [x26, #32]
  4227ec:	cmp	w0, #0x0
  4227f0:	cset	w9, eq  // eq = none
  4227f4:	and	w8, w8, #0xfffffeff
  4227f8:	orr	w8, w8, w9, lsl #8
  4227fc:	strh	w8, [x26, #32]
  422800:	ldr	x26, [x26]
  422804:	cbnz	x26, 42274c <snap_implicit_rules@@Base+0x2ac>
  422808:	adrp	x8, 442000 <just_print_flag@@Base>
  42280c:	ldr	w8, [x8, #244]
  422810:	cmp	w19, w8
  422814:	b.ls	422820 <snap_implicit_rules@@Base+0x380>  // b.plast
  422818:	adrp	x8, 442000 <just_print_flag@@Base>
  42281c:	str	w19, [x8, #244]
  422820:	ldr	x28, [x28]
  422824:	adrp	x10, 442000 <just_print_flag@@Base>
  422828:	cbz	x28, 422854 <snap_implicit_rules@@Base+0x3b4>
  42282c:	adrp	x19, 442000 <just_print_flag@@Base>
  422830:	ldr	w9, [x10, #256]
  422834:	ldr	w8, [x19, #240]
  422838:	b	422710 <snap_implicit_rules@@Base+0x270>
  42283c:	ldur	w19, [x29, #-4]
  422840:	adrp	x8, 442000 <just_print_flag@@Base>
  422844:	ldr	w8, [x8, #244]
  422848:	cmp	w19, w8
  42284c:	b.hi	422818 <snap_implicit_rules@@Base+0x378>  // b.pmore
  422850:	b	422820 <snap_implicit_rules@@Base+0x380>
  422854:	ldr	x21, [sp]
  422858:	mov	x0, x20
  42285c:	bl	406c60 <free@plt>
  422860:	mov	x0, x21
  422864:	ldp	x20, x19, [sp, #96]
  422868:	ldp	x22, x21, [sp, #80]
  42286c:	ldp	x24, x23, [sp, #64]
  422870:	ldp	x26, x25, [sp, #48]
  422874:	ldp	x28, x27, [sp, #32]
  422878:	ldp	x29, x30, [sp, #16]
  42287c:	add	sp, sp, #0x70
  422880:	b	41a130 <free_ns_chain@@Base>

0000000000422884 <convert_to_pattern@@Base>:
  422884:	stp	x29, x30, [sp, #-96]!
  422888:	adrp	x8, 442000 <just_print_flag@@Base>
  42288c:	ldr	x8, [x8, #216]
  422890:	stp	x28, x27, [sp, #16]
  422894:	stp	x26, x25, [sp, #32]
  422898:	stp	x24, x23, [sp, #48]
  42289c:	stp	x22, x21, [sp, #64]
  4228a0:	stp	x20, x19, [sp, #80]
  4228a4:	ldr	x28, [x8, #24]
  4228a8:	mov	x29, sp
  4228ac:	cbz	x28, 422bb0 <convert_to_pattern@@Base+0x32c>
  4228b0:	mov	x19, xzr
  4228b4:	mov	x20, x28
  4228b8:	b	4228d0 <convert_to_pattern@@Base+0x4c>
  4228bc:	bl	406750 <strlen@plt>
  4228c0:	ldr	x20, [x20]
  4228c4:	cmp	x0, x19
  4228c8:	csel	x19, x0, x19, hi  // hi = pmore
  4228cc:	cbz	x20, 4228e4 <convert_to_pattern@@Base+0x60>
  4228d0:	ldr	x0, [x20, #8]
  4228d4:	cbnz	x0, 4228bc <convert_to_pattern@@Base+0x38>
  4228d8:	ldr	x8, [x20, #16]
  4228dc:	ldr	x0, [x8]
  4228e0:	b	4228bc <convert_to_pattern@@Base+0x38>
  4228e4:	mov	w8, #0x1                   	// #1
  4228e8:	bfi	x8, x19, #1, #63
  4228ec:	add	x8, x8, #0xf
  4228f0:	and	x8, x8, #0xfffffffffffffff0
  4228f4:	mov	x9, sp
  4228f8:	sub	x19, x9, x8
  4228fc:	mov	sp, x19
  422900:	cbz	x28, 422bb0 <convert_to_pattern@@Base+0x32c>
  422904:	adrp	x21, 442000 <just_print_flag@@Base>
  422908:	b	422914 <convert_to_pattern@@Base+0x90>
  42290c:	ldr	x28, [x28]
  422910:	cbz	x28, 422bb0 <convert_to_pattern@@Base+0x32c>
  422914:	ldr	x0, [x28, #8]
  422918:	cbnz	x0, 422924 <convert_to_pattern@@Base+0xa0>
  42291c:	ldr	x8, [x28, #16]
  422920:	ldr	x0, [x8]
  422924:	mov	x1, xzr
  422928:	mov	x2, xzr
  42292c:	bl	422bd0 <convert_to_pattern@@Base+0x34c>
  422930:	ldr	x8, [x28, #16]
  422934:	ldr	x2, [x8, #32]
  422938:	cbz	x2, 422954 <convert_to_pattern@@Base+0xd0>
  42293c:	ldr	x1, [x28, #8]
  422940:	cbnz	x1, 422948 <convert_to_pattern@@Base+0xc4>
  422944:	ldr	x1, [x8]
  422948:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  42294c:	add	x0, x0, #0x3a9
  422950:	bl	422bd0 <convert_to_pattern@@Base+0x34c>
  422954:	ldr	x23, [x28, #8]
  422958:	cbnz	x23, 422964 <convert_to_pattern@@Base+0xe0>
  42295c:	ldr	x8, [x28, #16]
  422960:	ldr	x23, [x8]
  422964:	mov	x0, x23
  422968:	bl	406750 <strlen@plt>
  42296c:	mov	x22, x0
  422970:	mov	x0, x19
  422974:	mov	x1, x23
  422978:	mov	x2, x22
  42297c:	bl	406710 <memcpy@plt>
  422980:	adrp	x8, 442000 <just_print_flag@@Base>
  422984:	ldr	x8, [x8, #216]
  422988:	ldr	x27, [x8, #24]
  42298c:	cbz	x27, 42290c <convert_to_pattern@@Base+0x88>
  422990:	add	x23, x19, x22
  422994:	add	x20, x22, #0x1
  422998:	b	4229ac <convert_to_pattern@@Base+0x128>
  42299c:	ldr	x2, [x25, #32]
  4229a0:	bl	422bd0 <convert_to_pattern@@Base+0x34c>
  4229a4:	ldr	x27, [x27]
  4229a8:	cbz	x27, 42290c <convert_to_pattern@@Base+0x88>
  4229ac:	ldr	x25, [x27, #8]
  4229b0:	mov	x0, x25
  4229b4:	cbz	x25, 4229cc <convert_to_pattern@@Base+0x148>
  4229b8:	bl	406750 <strlen@plt>
  4229bc:	mov	x24, x0
  4229c0:	cmp	x22, x0
  4229c4:	b.eq	4229e4 <convert_to_pattern@@Base+0x160>  // b.none
  4229c8:	b	422adc <convert_to_pattern@@Base+0x258>
  4229cc:	ldr	x8, [x27, #16]
  4229d0:	ldr	x0, [x8]
  4229d4:	bl	406750 <strlen@plt>
  4229d8:	mov	x24, x0
  4229dc:	cmp	x22, x0
  4229e0:	b.ne	422adc <convert_to_pattern@@Base+0x258>  // b.any
  4229e4:	ldr	x8, [x28, #8]
  4229e8:	mov	x9, x8
  4229ec:	cbz	x8, 422a04 <convert_to_pattern@@Base+0x180>
  4229f0:	mov	x10, x25
  4229f4:	cbz	x25, 422a14 <convert_to_pattern@@Base+0x190>
  4229f8:	cmp	x9, x10
  4229fc:	b.ne	422a24 <convert_to_pattern@@Base+0x1a0>  // b.any
  422a00:	b	4229a4 <convert_to_pattern@@Base+0x120>
  422a04:	ldr	x9, [x28, #16]
  422a08:	ldr	x9, [x9]
  422a0c:	mov	x10, x25
  422a10:	cbnz	x25, 4229f8 <convert_to_pattern@@Base+0x174>
  422a14:	ldr	x10, [x27, #16]
  422a18:	ldr	x10, [x10]
  422a1c:	cmp	x9, x10
  422a20:	b.eq	4229a4 <convert_to_pattern@@Base+0x120>  // b.none
  422a24:	mov	x9, x8
  422a28:	cbz	x8, 422a48 <convert_to_pattern@@Base+0x1c4>
  422a2c:	ldrb	w9, [x9]
  422a30:	mov	x10, x25
  422a34:	cbz	x25, 422a5c <convert_to_pattern@@Base+0x1d8>
  422a38:	ldrb	w10, [x10]
  422a3c:	cmp	w9, w10
  422a40:	b.eq	422a70 <convert_to_pattern@@Base+0x1ec>  // b.none
  422a44:	b	422adc <convert_to_pattern@@Base+0x258>
  422a48:	ldr	x9, [x28, #16]
  422a4c:	ldr	x9, [x9]
  422a50:	ldrb	w9, [x9]
  422a54:	mov	x10, x25
  422a58:	cbnz	x25, 422a38 <convert_to_pattern@@Base+0x1b4>
  422a5c:	ldr	x10, [x27, #16]
  422a60:	ldr	x10, [x10]
  422a64:	ldrb	w10, [x10]
  422a68:	cmp	w9, w10
  422a6c:	b.ne	422adc <convert_to_pattern@@Base+0x258>  // b.any
  422a70:	mov	x9, x8
  422a74:	cbz	x8, 422a84 <convert_to_pattern@@Base+0x200>
  422a78:	ldrb	w9, [x9]
  422a7c:	cbnz	w9, 422a94 <convert_to_pattern@@Base+0x210>
  422a80:	b	4229a4 <convert_to_pattern@@Base+0x120>
  422a84:	ldr	x9, [x28, #16]
  422a88:	ldr	x9, [x9]
  422a8c:	ldrb	w9, [x9]
  422a90:	cbz	w9, 4229a4 <convert_to_pattern@@Base+0x120>
  422a94:	cbz	x8, 422ab4 <convert_to_pattern@@Base+0x230>
  422a98:	add	x0, x8, #0x1
  422a9c:	mov	x8, x25
  422aa0:	cbz	x25, 422ac8 <convert_to_pattern@@Base+0x244>
  422aa4:	add	x1, x8, #0x1
  422aa8:	bl	406c10 <strcmp@plt>
  422aac:	cbnz	w0, 422adc <convert_to_pattern@@Base+0x258>
  422ab0:	b	4229a4 <convert_to_pattern@@Base+0x120>
  422ab4:	ldr	x8, [x28, #16]
  422ab8:	ldr	x8, [x8]
  422abc:	add	x0, x8, #0x1
  422ac0:	mov	x8, x25
  422ac4:	cbnz	x25, 422aa4 <convert_to_pattern@@Base+0x220>
  422ac8:	ldr	x8, [x27, #16]
  422acc:	ldr	x8, [x8]
  422ad0:	add	x1, x8, #0x1
  422ad4:	bl	406c10 <strcmp@plt>
  422ad8:	cbz	w0, 4229a4 <convert_to_pattern@@Base+0x120>
  422adc:	cbnz	x25, 422ae8 <convert_to_pattern@@Base+0x264>
  422ae0:	ldr	x8, [x27, #16]
  422ae4:	ldr	x25, [x8]
  422ae8:	add	x2, x24, #0x1
  422aec:	mov	x0, x23
  422af0:	mov	x1, x25
  422af4:	bl	406710 <memcpy@plt>
  422af8:	mov	x0, x19
  422afc:	bl	40aae4 <lookup_file@@Base>
  422b00:	cbz	x0, 4229a4 <convert_to_pattern@@Base+0x120>
  422b04:	ldr	x26, [x0, #32]
  422b08:	mov	x25, x0
  422b0c:	cbz	x26, 4229a4 <convert_to_pattern@@Base+0x120>
  422b10:	ldr	x8, [x25, #24]
  422b14:	cbz	x8, 422b44 <convert_to_pattern@@Base+0x2c0>
  422b18:	ldr	w8, [x21, #8]
  422b1c:	cbnz	w8, 4229a4 <convert_to_pattern@@Base+0x120>
  422b20:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  422b24:	mov	w2, #0x5                   	// #5
  422b28:	mov	x0, xzr
  422b2c:	add	x1, x1, #0x4b5
  422b30:	bl	406dc0 <dcgettext@plt>
  422b34:	mov	x2, x0
  422b38:	mov	x0, x26
  422b3c:	mov	x1, xzr
  422b40:	bl	41ae34 <error@@Base>
  422b44:	cmp	x24, #0x2
  422b48:	b.ne	422b80 <convert_to_pattern@@Base+0x2fc>  // b.any
  422b4c:	ldrb	w8, [x23]
  422b50:	cmp	w8, #0x2e
  422b54:	b.ne	422b80 <convert_to_pattern@@Base+0x2fc>  // b.any
  422b58:	ldrb	w8, [x19, x20]
  422b5c:	cmp	w8, #0x61
  422b60:	b.ne	422b80 <convert_to_pattern@@Base+0x2fc>  // b.any
  422b64:	ldr	x1, [x28, #8]
  422b68:	cbnz	x1, 422b74 <convert_to_pattern@@Base+0x2f0>
  422b6c:	ldr	x8, [x28, #16]
  422b70:	ldr	x1, [x8]
  422b74:	ldr	x2, [x25, #32]
  422b78:	mov	x0, xzr
  422b7c:	bl	422bd0 <convert_to_pattern@@Base+0x34c>
  422b80:	ldr	x0, [x27, #8]
  422b84:	cbz	x0, 422b94 <convert_to_pattern@@Base+0x310>
  422b88:	ldr	x1, [x28, #8]
  422b8c:	cbnz	x1, 42299c <convert_to_pattern@@Base+0x118>
  422b90:	b	422ba4 <convert_to_pattern@@Base+0x320>
  422b94:	ldr	x8, [x27, #16]
  422b98:	ldr	x0, [x8]
  422b9c:	ldr	x1, [x28, #8]
  422ba0:	cbnz	x1, 42299c <convert_to_pattern@@Base+0x118>
  422ba4:	ldr	x8, [x28, #16]
  422ba8:	ldr	x1, [x8]
  422bac:	b	42299c <convert_to_pattern@@Base+0x118>
  422bb0:	mov	sp, x29
  422bb4:	ldp	x20, x19, [sp, #80]
  422bb8:	ldp	x22, x21, [sp, #64]
  422bbc:	ldp	x24, x23, [sp, #48]
  422bc0:	ldp	x26, x25, [sp, #32]
  422bc4:	ldp	x28, x27, [sp, #16]
  422bc8:	ldp	x29, x30, [sp], #96
  422bcc:	ret
  422bd0:	stp	x29, x30, [sp, #-80]!
  422bd4:	stp	x24, x23, [sp, #32]
  422bd8:	mov	x23, x0
  422bdc:	mov	w0, #0x8                   	// #8
  422be0:	str	x25, [sp, #16]
  422be4:	stp	x22, x21, [sp, #48]
  422be8:	stp	x20, x19, [sp, #64]
  422bec:	mov	x29, sp
  422bf0:	mov	x20, x2
  422bf4:	mov	x22, x1
  422bf8:	bl	419e14 <xmalloc@@Base>
  422bfc:	mov	x19, x0
  422c00:	mov	w0, #0x8                   	// #8
  422c04:	bl	419e14 <xmalloc@@Base>
  422c08:	mov	x21, x0
  422c0c:	cbz	x23, 422cb8 <convert_to_pattern@@Base+0x434>
  422c10:	mov	x0, x23
  422c14:	bl	406750 <strlen@plt>
  422c18:	add	x9, x0, #0x11
  422c1c:	mov	x8, sp
  422c20:	and	x9, x9, #0xfffffffffffffff0
  422c24:	sub	x25, x8, x9
  422c28:	add	x24, x0, #0x1
  422c2c:	mov	sp, x25
  422c30:	mov	w8, #0x25                  	// #37
  422c34:	mov	x0, x25
  422c38:	strb	w8, [x0], #1
  422c3c:	mov	x1, x23
  422c40:	mov	x2, x24
  422c44:	bl	406710 <memcpy@plt>
  422c48:	mov	x0, x25
  422c4c:	mov	x1, x24
  422c50:	bl	423914 <strcache_add_len@@Base>
  422c54:	str	x0, [x19]
  422c58:	str	x0, [x21]
  422c5c:	cbz	x22, 422cd8 <convert_to_pattern@@Base+0x454>
  422c60:	mov	x0, x22
  422c64:	bl	406750 <strlen@plt>
  422c68:	add	x9, x0, #0x11
  422c6c:	mov	x8, sp
  422c70:	and	x9, x9, #0xfffffffffffffff0
  422c74:	sub	x25, x8, x9
  422c78:	add	x24, x0, #0x1
  422c7c:	mov	sp, x25
  422c80:	mov	w8, #0x25                  	// #37
  422c84:	mov	x0, x25
  422c88:	strb	w8, [x0], #1
  422c8c:	mov	x1, x22
  422c90:	mov	x2, x24
  422c94:	bl	406710 <memcpy@plt>
  422c98:	mov	w0, #0x28                  	// #40
  422c9c:	bl	419e38 <xcalloc@@Base>
  422ca0:	mov	x23, x0
  422ca4:	mov	x0, x25
  422ca8:	mov	x1, x24
  422cac:	bl	423914 <strcache_add_len@@Base>
  422cb0:	str	x0, [x23, #8]
  422cb4:	b	422cdc <convert_to_pattern@@Base+0x458>
  422cb8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  422cbc:	add	x0, x0, #0x56e
  422cc0:	mov	w1, #0x5                   	// #5
  422cc4:	bl	423914 <strcache_add_len@@Base>
  422cc8:	str	x0, [x19]
  422ccc:	add	x0, x0, #0x1
  422cd0:	str	x0, [x21]
  422cd4:	cbnz	x22, 422c60 <convert_to_pattern@@Base+0x3dc>
  422cd8:	mov	x23, xzr
  422cdc:	mov	w0, #0x38                  	// #56
  422ce0:	bl	419e14 <xmalloc@@Base>
  422ce4:	mov	w8, #0x1                   	// #1
  422ce8:	mov	x22, x0
  422cec:	stp	x23, x20, [x0, #32]
  422cf0:	str	x19, [x0, #8]
  422cf4:	strh	w8, [x0, #48]
  422cf8:	str	x21, [x0, #24]
  422cfc:	mov	w0, #0x4                   	// #4
  422d00:	bl	419e14 <xmalloc@@Base>
  422d04:	str	x0, [x22, #16]
  422d08:	mov	x20, x0
  422d0c:	ldr	x0, [x19]
  422d10:	bl	406750 <strlen@plt>
  422d14:	str	w0, [x20]
  422d18:	ldr	x8, [x22, #24]
  422d1c:	mov	x0, x22
  422d20:	mov	w1, wzr
  422d24:	ldr	x9, [x8]
  422d28:	add	x9, x9, #0x1
  422d2c:	str	x9, [x8]
  422d30:	bl	422e68 <install_pattern_rule@@Base+0x110>
  422d34:	cbz	w0, 422d3c <convert_to_pattern@@Base+0x4b8>
  422d38:	strb	wzr, [x22, #50]
  422d3c:	mov	sp, x29
  422d40:	ldp	x20, x19, [sp, #64]
  422d44:	ldp	x22, x21, [sp, #48]
  422d48:	ldp	x24, x23, [sp, #32]
  422d4c:	ldr	x25, [sp, #16]
  422d50:	ldp	x29, x30, [sp], #80
  422d54:	ret

0000000000422d58 <install_pattern_rule@@Base>:
  422d58:	stp	x29, x30, [sp, #-64]!
  422d5c:	stp	x20, x19, [sp, #48]
  422d60:	mov	x19, x0
  422d64:	mov	w0, #0x38                  	// #56
  422d68:	str	x23, [sp, #16]
  422d6c:	stp	x22, x21, [sp, #32]
  422d70:	mov	x29, sp
  422d74:	mov	w21, w1
  422d78:	bl	419e14 <xmalloc@@Base>
  422d7c:	mov	w8, #0x1                   	// #1
  422d80:	mov	x20, x0
  422d84:	strh	w8, [x0, #48]
  422d88:	mov	w0, #0x8                   	// #8
  422d8c:	bl	419e14 <xmalloc@@Base>
  422d90:	str	x0, [x20, #8]
  422d94:	mov	w0, #0x8                   	// #8
  422d98:	bl	419e14 <xmalloc@@Base>
  422d9c:	str	x0, [x20, #24]
  422da0:	mov	w0, #0x4                   	// #4
  422da4:	bl	419e14 <xmalloc@@Base>
  422da8:	str	x0, [x20, #16]
  422dac:	ldr	x23, [x19]
  422db0:	mov	x22, x0
  422db4:	mov	x0, x23
  422db8:	bl	406750 <strlen@plt>
  422dbc:	str	w0, [x22]
  422dc0:	ldr	x8, [x20, #8]
  422dc4:	str	x23, [x8]
  422dc8:	ldr	x0, [x20, #8]
  422dcc:	bl	41d8b0 <find_percent_cached@@Base>
  422dd0:	ldr	x8, [x20, #24]
  422dd4:	mov	w1, #0x28                  	// #40
  422dd8:	mov	w2, #0x1                   	// #1
  422ddc:	mov	x3, xzr
  422de0:	str	x0, [x8]
  422de4:	ldr	x8, [x20, #24]
  422de8:	add	x0, x29, #0x18
  422dec:	mov	w4, wzr
  422df0:	ldr	x9, [x8]
  422df4:	add	x9, x9, #0x1
  422df8:	str	x9, [x8]
  422dfc:	ldr	x8, [x19, #8]
  422e00:	str	x8, [x29, #24]
  422e04:	bl	41def0 <parse_file_seq@@Base>
  422e08:	str	x0, [x20, #32]
  422e0c:	mov	x0, x20
  422e10:	mov	w1, wzr
  422e14:	bl	422e68 <install_pattern_rule@@Base+0x110>
  422e18:	cbz	w0, 422e54 <install_pattern_rule@@Base+0xfc>
  422e1c:	cmp	w21, #0x0
  422e20:	cset	w8, ne  // ne = any
  422e24:	mov	w0, #0x38                  	// #56
  422e28:	strb	w8, [x20, #50]
  422e2c:	bl	419e14 <xmalloc@@Base>
  422e30:	str	x0, [x20, #40]
  422e34:	stp	xzr, xzr, [x0, #8]
  422e38:	str	xzr, [x0]
  422e3c:	ldr	x0, [x19, #16]
  422e40:	bl	419e60 <xstrdup@@Base>
  422e44:	ldr	x8, [x20, #40]
  422e48:	mov	w9, #0x9                   	// #9
  422e4c:	stp	x0, xzr, [x8, #24]
  422e50:	strb	w9, [x8, #50]
  422e54:	ldp	x20, x19, [sp, #48]
  422e58:	ldp	x22, x21, [sp, #32]
  422e5c:	ldr	x23, [sp, #16]
  422e60:	ldp	x29, x30, [sp], #64
  422e64:	ret
  422e68:	sub	sp, sp, #0x80
  422e6c:	adrp	x11, 442000 <just_print_flag@@Base>
  422e70:	stp	x29, x30, [sp, #32]
  422e74:	stp	x28, x27, [sp, #48]
  422e78:	stp	x26, x25, [sp, #64]
  422e7c:	stp	x24, x23, [sp, #80]
  422e80:	stp	x22, x21, [sp, #96]
  422e84:	stp	x20, x19, [sp, #112]
  422e88:	strh	wzr, [x0, #50]
  422e8c:	str	xzr, [x0]
  422e90:	add	x11, x11, #0xe0
  422e94:	ldr	x9, [x11]
  422e98:	mov	x8, x0
  422e9c:	adrp	x10, 442000 <just_print_flag@@Base>
  422ea0:	add	x29, sp, #0x20
  422ea4:	cbz	x9, 4232d4 <install_pattern_rule@@Base+0x57c>
  422ea8:	ldrh	w28, [x8, #48]
  422eac:	mov	x20, xzr
  422eb0:	stur	x8, [x29, #-8]
  422eb4:	mov	x8, x9
  422eb8:	str	w1, [sp, #12]
  422ebc:	str	x9, [sp]
  422ec0:	b	422ecc <install_pattern_rule@@Base+0x174>
  422ec4:	ldr	x8, [x20]
  422ec8:	cbz	x8, 42331c <install_pattern_rule@@Base+0x5c4>
  422ecc:	str	x20, [sp, #16]
  422ed0:	mov	x20, x8
  422ed4:	cbz	w28, 422ec4 <install_pattern_rule@@Base+0x16c>
  422ed8:	ldrh	w24, [x20, #48]
  422edc:	cbz	w24, 42308c <install_pattern_rule@@Base+0x334>
  422ee0:	ldur	x8, [x29, #-8]
  422ee4:	ldr	x27, [x20, #8]
  422ee8:	mov	x26, xzr
  422eec:	ldr	x21, [x8, #8]
  422ef0:	b	422f08 <install_pattern_rule@@Base+0x1b0>
  422ef4:	orr	x8, x22, x23
  422ef8:	cbz	x8, 4231e8 <install_pattern_rule@@Base+0x490>
  422efc:	add	x26, x26, #0x1
  422f00:	cmp	x26, x28
  422f04:	b.cs	422ec4 <install_pattern_rule@@Base+0x16c>  // b.hs, b.nlast
  422f08:	ldr	x23, [x21, x26, lsl #3]
  422f0c:	mov	x19, xzr
  422f10:	add	x22, x23, #0x1
  422f14:	b	422f24 <install_pattern_rule@@Base+0x1cc>
  422f18:	add	x19, x19, #0x1
  422f1c:	cmp	x19, x24
  422f20:	b.cs	422f54 <install_pattern_rule@@Base+0x1fc>  // b.hs, b.nlast
  422f24:	ldr	x8, [x27, x19, lsl #3]
  422f28:	cmp	x23, x8
  422f2c:	b.eq	422f18 <install_pattern_rule@@Base+0x1c0>  // b.none
  422f30:	ldrb	w9, [x23]
  422f34:	ldrb	w10, [x8]
  422f38:	cmp	w9, w10
  422f3c:	b.ne	422f54 <install_pattern_rule@@Base+0x1fc>  // b.any
  422f40:	cbz	w9, 422f18 <install_pattern_rule@@Base+0x1c0>
  422f44:	add	x1, x8, #0x1
  422f48:	mov	x0, x22
  422f4c:	bl	406c10 <strcmp@plt>
  422f50:	cbz	w0, 422f18 <install_pattern_rule@@Base+0x1c0>
  422f54:	cmp	w19, w24
  422f58:	b.ne	422efc <install_pattern_rule@@Base+0x1a4>  // b.any
  422f5c:	ldur	x8, [x29, #-8]
  422f60:	ldr	x25, [x20, #32]
  422f64:	ldr	x19, [x8, #32]
  422f68:	mov	x22, x25
  422f6c:	mov	x23, x19
  422f70:	cbz	x25, 422ef4 <install_pattern_rule@@Base+0x19c>
  422f74:	mov	x22, x25
  422f78:	mov	x23, x19
  422f7c:	cbz	x19, 422ef4 <install_pattern_rule@@Base+0x19c>
  422f80:	ldr	x8, [x23, #8]
  422f84:	mov	x10, x8
  422f88:	cbz	x8, 422fa4 <install_pattern_rule@@Base+0x24c>
  422f8c:	ldr	x9, [x22, #8]
  422f90:	mov	x11, x9
  422f94:	cbz	x9, 422fb8 <install_pattern_rule@@Base+0x260>
  422f98:	cmp	x10, x11
  422f9c:	b.ne	422fc8 <install_pattern_rule@@Base+0x270>  // b.any
  422fa0:	b	423078 <install_pattern_rule@@Base+0x320>
  422fa4:	ldr	x9, [x23, #16]
  422fa8:	ldr	x10, [x9]
  422fac:	ldr	x9, [x22, #8]
  422fb0:	mov	x11, x9
  422fb4:	cbnz	x9, 422f98 <install_pattern_rule@@Base+0x240>
  422fb8:	ldr	x11, [x22, #16]
  422fbc:	ldr	x11, [x11]
  422fc0:	cmp	x10, x11
  422fc4:	b.eq	423078 <install_pattern_rule@@Base+0x320>  // b.none
  422fc8:	mov	x10, x8
  422fcc:	cbz	x8, 422fec <install_pattern_rule@@Base+0x294>
  422fd0:	ldrb	w10, [x10]
  422fd4:	mov	x11, x9
  422fd8:	cbz	x9, 423000 <install_pattern_rule@@Base+0x2a8>
  422fdc:	ldrb	w11, [x11]
  422fe0:	cmp	w10, w11
  422fe4:	b.eq	423014 <install_pattern_rule@@Base+0x2bc>  // b.none
  422fe8:	b	422efc <install_pattern_rule@@Base+0x1a4>
  422fec:	ldr	x10, [x23, #16]
  422ff0:	ldr	x10, [x10]
  422ff4:	ldrb	w10, [x10]
  422ff8:	mov	x11, x9
  422ffc:	cbnz	x9, 422fdc <install_pattern_rule@@Base+0x284>
  423000:	ldr	x11, [x22, #16]
  423004:	ldr	x11, [x11]
  423008:	ldrb	w11, [x11]
  42300c:	cmp	w10, w11
  423010:	b.ne	422efc <install_pattern_rule@@Base+0x1a4>  // b.any
  423014:	mov	x10, x8
  423018:	cbz	x8, 423028 <install_pattern_rule@@Base+0x2d0>
  42301c:	ldrb	w10, [x10]
  423020:	cbnz	w10, 423038 <install_pattern_rule@@Base+0x2e0>
  423024:	b	423078 <install_pattern_rule@@Base+0x320>
  423028:	ldr	x10, [x23, #16]
  42302c:	ldr	x10, [x10]
  423030:	ldrb	w10, [x10]
  423034:	cbz	w10, 423078 <install_pattern_rule@@Base+0x320>
  423038:	cbz	x8, 423054 <install_pattern_rule@@Base+0x2fc>
  42303c:	add	x0, x8, #0x1
  423040:	cbz	x9, 423064 <install_pattern_rule@@Base+0x30c>
  423044:	add	x1, x9, #0x1
  423048:	bl	406c10 <strcmp@plt>
  42304c:	cbz	w0, 423078 <install_pattern_rule@@Base+0x320>
  423050:	b	422efc <install_pattern_rule@@Base+0x1a4>
  423054:	ldr	x8, [x23, #16]
  423058:	ldr	x8, [x8]
  42305c:	add	x0, x8, #0x1
  423060:	cbnz	x9, 423044 <install_pattern_rule@@Base+0x2ec>
  423064:	ldr	x8, [x22, #16]
  423068:	ldr	x9, [x8]
  42306c:	add	x1, x9, #0x1
  423070:	bl	406c10 <strcmp@plt>
  423074:	cbnz	w0, 422efc <install_pattern_rule@@Base+0x1a4>
  423078:	ldr	x22, [x22]
  42307c:	ldr	x23, [x23]
  423080:	cbz	x22, 422ef4 <install_pattern_rule@@Base+0x19c>
  423084:	cbnz	x23, 422f80 <install_pattern_rule@@Base+0x228>
  423088:	b	422ef4 <install_pattern_rule@@Base+0x19c>
  42308c:	ldur	x8, [x29, #-8]
  423090:	ldr	x25, [x20, #32]
  423094:	mov	w21, wzr
  423098:	ldr	x19, [x8, #32]
  42309c:	cmp	x19, #0x0
  4230a0:	cset	w8, ne  // ne = any
  4230a4:	cmp	x25, #0x0
  4230a8:	cset	w9, ne  // ne = any
  4230ac:	and	w24, w9, w8
  4230b0:	b	4230c8 <install_pattern_rule@@Base+0x370>
  4230b4:	orr	x8, x22, x23
  4230b8:	cbz	x8, 4231e8 <install_pattern_rule@@Base+0x490>
  4230bc:	add	w21, w21, #0x1
  4230c0:	cmp	w21, w28
  4230c4:	b.cs	422ec4 <install_pattern_rule@@Base+0x16c>  // b.hs, b.nlast
  4230c8:	mov	x22, x25
  4230cc:	mov	x23, x19
  4230d0:	cbz	w24, 4230b4 <install_pattern_rule@@Base+0x35c>
  4230d4:	mov	x23, x19
  4230d8:	mov	x22, x25
  4230dc:	ldr	x8, [x23, #8]
  4230e0:	mov	x10, x8
  4230e4:	cbz	x8, 423100 <install_pattern_rule@@Base+0x3a8>
  4230e8:	ldr	x9, [x22, #8]
  4230ec:	mov	x11, x9
  4230f0:	cbz	x9, 423114 <install_pattern_rule@@Base+0x3bc>
  4230f4:	cmp	x10, x11
  4230f8:	b.ne	423124 <install_pattern_rule@@Base+0x3cc>  // b.any
  4230fc:	b	4231d4 <install_pattern_rule@@Base+0x47c>
  423100:	ldr	x9, [x23, #16]
  423104:	ldr	x10, [x9]
  423108:	ldr	x9, [x22, #8]
  42310c:	mov	x11, x9
  423110:	cbnz	x9, 4230f4 <install_pattern_rule@@Base+0x39c>
  423114:	ldr	x11, [x22, #16]
  423118:	ldr	x11, [x11]
  42311c:	cmp	x10, x11
  423120:	b.eq	4231d4 <install_pattern_rule@@Base+0x47c>  // b.none
  423124:	mov	x10, x8
  423128:	cbz	x8, 423148 <install_pattern_rule@@Base+0x3f0>
  42312c:	ldrb	w10, [x10]
  423130:	mov	x11, x9
  423134:	cbz	x9, 42315c <install_pattern_rule@@Base+0x404>
  423138:	ldrb	w11, [x11]
  42313c:	cmp	w10, w11
  423140:	b.eq	423170 <install_pattern_rule@@Base+0x418>  // b.none
  423144:	b	4230bc <install_pattern_rule@@Base+0x364>
  423148:	ldr	x10, [x23, #16]
  42314c:	ldr	x10, [x10]
  423150:	ldrb	w10, [x10]
  423154:	mov	x11, x9
  423158:	cbnz	x9, 423138 <install_pattern_rule@@Base+0x3e0>
  42315c:	ldr	x11, [x22, #16]
  423160:	ldr	x11, [x11]
  423164:	ldrb	w11, [x11]
  423168:	cmp	w10, w11
  42316c:	b.ne	4230bc <install_pattern_rule@@Base+0x364>  // b.any
  423170:	mov	x10, x8
  423174:	cbz	x8, 423184 <install_pattern_rule@@Base+0x42c>
  423178:	ldrb	w10, [x10]
  42317c:	cbnz	w10, 423194 <install_pattern_rule@@Base+0x43c>
  423180:	b	4231d4 <install_pattern_rule@@Base+0x47c>
  423184:	ldr	x10, [x23, #16]
  423188:	ldr	x10, [x10]
  42318c:	ldrb	w10, [x10]
  423190:	cbz	w10, 4231d4 <install_pattern_rule@@Base+0x47c>
  423194:	cbz	x8, 4231b0 <install_pattern_rule@@Base+0x458>
  423198:	add	x0, x8, #0x1
  42319c:	cbz	x9, 4231c0 <install_pattern_rule@@Base+0x468>
  4231a0:	add	x1, x9, #0x1
  4231a4:	bl	406c10 <strcmp@plt>
  4231a8:	cbz	w0, 4231d4 <install_pattern_rule@@Base+0x47c>
  4231ac:	b	4230bc <install_pattern_rule@@Base+0x364>
  4231b0:	ldr	x8, [x23, #16]
  4231b4:	ldr	x8, [x8]
  4231b8:	add	x0, x8, #0x1
  4231bc:	cbnz	x9, 4231a0 <install_pattern_rule@@Base+0x448>
  4231c0:	ldr	x8, [x22, #16]
  4231c4:	ldr	x9, [x8]
  4231c8:	add	x1, x9, #0x1
  4231cc:	bl	406c10 <strcmp@plt>
  4231d0:	cbnz	w0, 4230bc <install_pattern_rule@@Base+0x364>
  4231d4:	ldr	x22, [x22]
  4231d8:	ldr	x23, [x23]
  4231dc:	cbz	x22, 4230b4 <install_pattern_rule@@Base+0x35c>
  4231e0:	cbnz	x23, 4230dc <install_pattern_rule@@Base+0x384>
  4231e4:	b	4230b4 <install_pattern_rule@@Base+0x35c>
  4231e8:	ldr	w8, [sp, #12]
  4231ec:	cbz	w8, 423240 <install_pattern_rule@@Base+0x4e8>
  4231f0:	ldr	x19, [x20]
  4231f4:	mov	x0, x25
  4231f8:	bl	41a130 <free_ns_chain@@Base>
  4231fc:	ldr	x0, [x20, #8]
  423200:	bl	406c60 <free@plt>
  423204:	ldr	x0, [x20, #24]
  423208:	bl	406c60 <free@plt>
  42320c:	ldr	x0, [x20, #16]
  423210:	bl	406c60 <free@plt>
  423214:	mov	x0, x20
  423218:	bl	406c60 <free@plt>
  42321c:	adrp	x8, 442000 <just_print_flag@@Base>
  423220:	ldr	x8, [x8, #224]
  423224:	adrp	x10, 442000 <just_print_flag@@Base>
  423228:	cmp	x8, x20
  42322c:	b.eq	423294 <install_pattern_rule@@Base+0x53c>  // b.none
  423230:	ldr	x9, [sp, #16]
  423234:	cbz	x9, 4232a8 <install_pattern_rule@@Base+0x550>
  423238:	mov	x8, x9
  42323c:	b	4232a4 <install_pattern_rule@@Base+0x54c>
  423240:	mov	x0, x19
  423244:	bl	41a130 <free_ns_chain@@Base>
  423248:	ldur	x19, [x29, #-8]
  42324c:	ldr	x0, [x19, #8]
  423250:	bl	406c60 <free@plt>
  423254:	ldr	x0, [x19, #24]
  423258:	bl	406c60 <free@plt>
  42325c:	ldr	x0, [x19, #16]
  423260:	bl	406c60 <free@plt>
  423264:	mov	x0, x19
  423268:	bl	406c60 <free@plt>
  42326c:	adrp	x8, 442000 <just_print_flag@@Base>
  423270:	ldr	x9, [x8, #224]
  423274:	adrp	x10, 442000 <just_print_flag@@Base>
  423278:	cmp	x9, x19
  42327c:	b.eq	423300 <install_pattern_rule@@Base+0x5a8>  // b.none
  423280:	ldr	x8, [x10, #248]
  423284:	mov	w0, wzr
  423288:	cmp	x8, x19
  42328c:	b.ne	4232e0 <install_pattern_rule@@Base+0x588>  // b.any
  423290:	b	423314 <install_pattern_rule@@Base+0x5bc>
  423294:	ldr	x9, [sp, #16]
  423298:	cbnz	x9, 423344 <install_pattern_rule@@Base+0x5ec>
  42329c:	adrp	x8, 442000 <just_print_flag@@Base>
  4232a0:	add	x8, x8, #0xe0
  4232a4:	str	x19, [x8]
  4232a8:	ldr	x8, [x10, #248]
  4232ac:	cmp	x8, x20
  4232b0:	b.ne	4232bc <install_pattern_rule@@Base+0x564>  // b.any
  4232b4:	mov	x8, x9
  4232b8:	str	x9, [x10, #248]
  4232bc:	adrp	x11, 442000 <just_print_flag@@Base>
  4232c0:	add	x11, x11, #0xe0
  4232c4:	ldr	x9, [x11]
  4232c8:	cmp	x9, #0x0
  4232cc:	csel	x11, x11, x8, eq  // eq = none
  4232d0:	ldur	x8, [x29, #-8]
  4232d4:	mov	w0, #0x1                   	// #1
  4232d8:	str	x8, [x11]
  4232dc:	str	x8, [x10, #248]
  4232e0:	ldp	x20, x19, [sp, #112]
  4232e4:	ldp	x22, x21, [sp, #96]
  4232e8:	ldp	x24, x23, [sp, #80]
  4232ec:	ldp	x26, x25, [sp, #64]
  4232f0:	ldp	x28, x27, [sp, #48]
  4232f4:	ldp	x29, x30, [sp, #32]
  4232f8:	add	sp, sp, #0x80
  4232fc:	ret
  423300:	str	xzr, [x8, #224]
  423304:	ldr	x8, [x10, #248]
  423308:	mov	w0, wzr
  42330c:	cmp	x8, x19
  423310:	b.ne	4232e0 <install_pattern_rule@@Base+0x588>  // b.any
  423314:	mov	x8, xzr
  423318:	b	4232dc <install_pattern_rule@@Base+0x584>
  42331c:	ldr	x8, [sp]
  423320:	cbz	x8, 423330 <install_pattern_rule@@Base+0x5d8>
  423324:	adrp	x10, 442000 <just_print_flag@@Base>
  423328:	ldr	x11, [x10, #248]
  42332c:	b	4232d0 <install_pattern_rule@@Base+0x578>
  423330:	ldur	x8, [x29, #-8]
  423334:	adrp	x11, 442000 <just_print_flag@@Base>
  423338:	add	x11, x11, #0xe0
  42333c:	adrp	x10, 442000 <just_print_flag@@Base>
  423340:	b	4232d4 <install_pattern_rule@@Base+0x57c>
  423344:	bl	406b70 <abort@plt>

0000000000423348 <create_pattern_rule@@Base>:
  423348:	stp	x29, x30, [sp, #-96]!
  42334c:	stp	x22, x21, [sp, #64]
  423350:	mov	x22, x0
  423354:	mov	w0, #0x38                  	// #56
  423358:	str	x27, [sp, #16]
  42335c:	stp	x26, x25, [sp, #32]
  423360:	stp	x24, x23, [sp, #48]
  423364:	stp	x20, x19, [sp, #80]
  423368:	mov	x29, sp
  42336c:	mov	w20, w6
  423370:	mov	x24, x5
  423374:	mov	x25, x4
  423378:	mov	w19, w3
  42337c:	mov	w23, w2
  423380:	mov	x26, x1
  423384:	and	w27, w2, #0xffff
  423388:	bl	419e14 <xmalloc@@Base>
  42338c:	and	x8, x23, #0xffff
  423390:	mov	x21, x0
  423394:	strh	w23, [x0, #48]
  423398:	stp	x25, x24, [x0, #32]
  42339c:	str	x22, [x0, #8]
  4233a0:	str	x26, [x0, #24]
  4233a4:	lsl	x0, x8, #2
  4233a8:	bl	419e14 <xmalloc@@Base>
  4233ac:	str	x0, [x21, #16]
  4233b0:	cbz	w27, 423414 <create_pattern_rule@@Base+0xcc>
  4233b4:	mov	x24, x0
  4233b8:	ldr	x0, [x22]
  4233bc:	bl	406750 <strlen@plt>
  4233c0:	str	w0, [x24]
  4233c4:	ldr	x8, [x21, #24]
  4233c8:	cmp	w27, #0x1
  4233cc:	ldr	x9, [x8]
  4233d0:	add	x9, x9, #0x1
  4233d4:	str	x9, [x8]
  4233d8:	b.eq	423414 <create_pattern_rule@@Base+0xcc>  // b.none
  4233dc:	and	x23, x23, #0xffff
  4233e0:	mov	w24, #0x1                   	// #1
  4233e4:	lsl	x26, x24, #3
  4233e8:	ldr	x0, [x22, x26]
  4233ec:	ldr	x25, [x21, #16]
  4233f0:	bl	406750 <strlen@plt>
  4233f4:	str	w0, [x25, x24, lsl #2]
  4233f8:	ldr	x8, [x21, #24]
  4233fc:	add	x24, x24, #0x1
  423400:	cmp	x23, x24
  423404:	ldr	x9, [x8, x26]
  423408:	add	x9, x9, #0x1
  42340c:	str	x9, [x8, x26]
  423410:	b.ne	4233e4 <create_pattern_rule@@Base+0x9c>  // b.any
  423414:	mov	x0, x21
  423418:	mov	w1, w20
  42341c:	bl	422e68 <install_pattern_rule@@Base+0x110>
  423420:	cbz	w0, 423430 <create_pattern_rule@@Base+0xe8>
  423424:	cmp	w19, #0x0
  423428:	cset	w8, ne  // ne = any
  42342c:	strb	w8, [x21, #50]
  423430:	ldp	x20, x19, [sp, #80]
  423434:	ldp	x22, x21, [sp, #64]
  423438:	ldp	x24, x23, [sp, #48]
  42343c:	ldp	x26, x25, [sp, #32]
  423440:	ldr	x27, [sp, #16]
  423444:	ldp	x29, x30, [sp], #96
  423448:	ret

000000000042344c <print_rule_data_base@@Base>:
  42344c:	stp	x29, x30, [sp, #-80]!
  423450:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423454:	add	x1, x1, #0x4ef
  423458:	mov	w2, #0x5                   	// #5
  42345c:	mov	x0, xzr
  423460:	str	x25, [sp, #16]
  423464:	stp	x24, x23, [sp, #32]
  423468:	stp	x22, x21, [sp, #48]
  42346c:	stp	x20, x19, [sp, #64]
  423470:	mov	x29, sp
  423474:	bl	406dc0 <dcgettext@plt>
  423478:	bl	406ba0 <puts@plt>
  42347c:	adrp	x8, 442000 <just_print_flag@@Base>
  423480:	ldr	x21, [x8, #224]
  423484:	cbz	x21, 423580 <print_rule_data_base@@Base+0x134>
  423488:	mov	w20, wzr
  42348c:	mov	w19, wzr
  423490:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  423494:	mov	w23, #0x3a                  	// #58
  423498:	mov	w24, #0x20                  	// #32
  42349c:	b	4234b4 <print_rule_data_base@@Base+0x68>
  4234a0:	ldrb	w8, [x21, #50]
  4234a4:	ldr	x21, [x21]
  4234a8:	cmp	w8, #0x0
  4234ac:	cinc	w20, w20, ne  // ne = any
  4234b0:	cbz	x21, 423530 <print_rule_data_base@@Base+0xe4>
  4234b4:	ldr	x1, [x22, #2504]
  4234b8:	mov	w0, #0xa                   	// #10
  4234bc:	bl	406810 <putc@plt>
  4234c0:	ldrh	w8, [x21, #48]
  4234c4:	cbz	w8, 423500 <print_rule_data_base@@Base+0xb4>
  4234c8:	mov	x25, xzr
  4234cc:	ldr	x8, [x21, #8]
  4234d0:	ldr	x1, [x22, #2504]
  4234d4:	ldr	x0, [x8, x25, lsl #3]
  4234d8:	bl	406760 <fputs@plt>
  4234dc:	ldrh	w8, [x21, #48]
  4234e0:	ldr	x1, [x22, #2504]
  4234e4:	add	x25, x25, #0x1
  4234e8:	cmp	x25, x8
  4234ec:	csel	w0, w23, w24, eq  // eq = none
  4234f0:	bl	406810 <putc@plt>
  4234f4:	ldrh	w8, [x21, #48]
  4234f8:	cmp	x25, x8
  4234fc:	b.cc	4234cc <print_rule_data_base@@Base+0x80>  // b.lo, b.ul, b.last
  423500:	ldrb	w8, [x21, #50]
  423504:	cbz	w8, 423514 <print_rule_data_base@@Base+0xc8>
  423508:	ldr	x1, [x22, #2504]
  42350c:	mov	w0, #0x3a                  	// #58
  423510:	bl	406810 <putc@plt>
  423514:	ldr	x0, [x21, #32]
  423518:	add	w19, w19, #0x1
  42351c:	bl	40c354 <print_prereqs@@Base>
  423520:	ldr	x0, [x21, #40]
  423524:	cbz	x0, 4234a0 <print_rule_data_base@@Base+0x54>
  423528:	bl	408b74 <print_commands@@Base>
  42352c:	b	4234a0 <print_rule_data_base@@Base+0x54>
  423530:	cbz	w19, 423580 <print_rule_data_base@@Base+0x134>
  423534:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423538:	add	x1, x1, #0x517
  42353c:	mov	w2, #0x5                   	// #5
  423540:	mov	x0, xzr
  423544:	bl	406dc0 <dcgettext@plt>
  423548:	ucvtf	d0, w20
  42354c:	ucvtf	d1, w19
  423550:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  423554:	fdiv	d0, d0, d1
  423558:	fmov	d1, x8
  42355c:	fmul	d0, d0, d1
  423560:	mov	w1, w19
  423564:	mov	w2, w20
  423568:	bl	406e60 <printf@plt>
  42356c:	adrp	x20, 442000 <just_print_flag@@Base>
  423570:	ldr	w8, [x20, #256]
  423574:	cmp	w8, w19
  423578:	b.ne	4235ac <print_rule_data_base@@Base+0x160>  // b.any
  42357c:	b	4235b0 <print_rule_data_base@@Base+0x164>
  423580:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423584:	add	x1, x1, #0x501
  423588:	mov	w2, #0x5                   	// #5
  42358c:	mov	x0, xzr
  423590:	bl	406dc0 <dcgettext@plt>
  423594:	bl	406ba0 <puts@plt>
  423598:	mov	w19, wzr
  42359c:	adrp	x20, 442000 <just_print_flag@@Base>
  4235a0:	ldr	w8, [x20, #256]
  4235a4:	cmp	w8, w19
  4235a8:	b.eq	4235b0 <print_rule_data_base@@Base+0x164>  // b.none
  4235ac:	cbnz	w8, 4235c8 <print_rule_data_base@@Base+0x17c>
  4235b0:	ldp	x20, x19, [sp, #64]
  4235b4:	ldp	x22, x21, [sp, #48]
  4235b8:	ldp	x24, x23, [sp, #32]
  4235bc:	ldr	x25, [sp, #16]
  4235c0:	ldp	x29, x30, [sp], #80
  4235c4:	ret
  4235c8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4235cc:	add	x1, x1, #0x543
  4235d0:	mov	w2, #0x5                   	// #5
  4235d4:	mov	x0, xzr
  4235d8:	bl	406dc0 <dcgettext@plt>
  4235dc:	ldr	w3, [x20, #256]
  4235e0:	mov	x2, x0
  4235e4:	mov	w1, #0x28                  	// #40
  4235e8:	mov	x0, xzr
  4235ec:	mov	w4, w19
  4235f0:	bl	41aff0 <fatal@@Base>

00000000004235f4 <strcache_iscached@@Base>:
  4235f4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4235f8:	ldr	x8, [x8, #1672]
  4235fc:	cbnz	x8, 42363c <strcache_iscached@@Base+0x48>
  423600:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423604:	ldr	x8, [x8, #1680]
  423608:	cbnz	x8, 423668 <strcache_iscached@@Base+0x74>
  42360c:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423610:	ldr	x8, [x8, #1688]
  423614:	cbz	x8, 42362c <strcache_iscached@@Base+0x38>
  423618:	add	x9, x8, #0x8
  42361c:	cmp	x9, x0
  423620:	b.eq	423688 <strcache_iscached@@Base+0x94>  // b.none
  423624:	ldr	x8, [x8]
  423628:	cbnz	x8, 423618 <strcache_iscached@@Base+0x24>
  42362c:	mov	w0, wzr
  423630:	ret
  423634:	ldr	x8, [x8]
  423638:	cbz	x8, 423600 <strcache_iscached@@Base+0xc>
  42363c:	add	x9, x8, #0xe
  423640:	cmp	x9, x0
  423644:	b.hi	423634 <strcache_iscached@@Base+0x40>  // b.pmore
  423648:	ldrh	w9, [x8, #8]
  42364c:	add	x9, x8, x9
  423650:	add	x9, x9, #0xe
  423654:	cmp	x9, x0
  423658:	b.ls	423634 <strcache_iscached@@Base+0x40>  // b.plast
  42365c:	b	423688 <strcache_iscached@@Base+0x94>
  423660:	ldr	x8, [x8]
  423664:	cbz	x8, 42360c <strcache_iscached@@Base+0x18>
  423668:	add	x9, x8, #0xe
  42366c:	cmp	x9, x0
  423670:	b.hi	423660 <strcache_iscached@@Base+0x6c>  // b.pmore
  423674:	ldrh	w9, [x8, #8]
  423678:	add	x9, x8, x9
  42367c:	add	x9, x9, #0xe
  423680:	cmp	x9, x0
  423684:	b.ls	423660 <strcache_iscached@@Base+0x6c>  // b.plast
  423688:	mov	w0, #0x1                   	// #1
  42368c:	ret

0000000000423690 <strcache_add@@Base>:
  423690:	stp	x29, x30, [sp, #-32]!
  423694:	str	x19, [sp, #16]
  423698:	mov	x29, sp
  42369c:	mov	x19, x0
  4236a0:	bl	406750 <strlen@plt>
  4236a4:	mov	x1, x0
  4236a8:	mov	x0, x19
  4236ac:	ldr	x19, [sp, #16]
  4236b0:	ldp	x29, x30, [sp], #32
  4236b4:	b	4236b8 <strcache_add@@Base+0x28>
  4236b8:	stp	x29, x30, [sp, #-96]!
  4236bc:	mov	w8, #0xffff                	// #65535
  4236c0:	stp	x22, x21, [sp, #64]
  4236c4:	stp	x20, x19, [sp, #80]
  4236c8:	mov	x20, x1
  4236cc:	cmp	x1, x8
  4236d0:	mov	x21, x0
  4236d4:	str	x27, [sp, #16]
  4236d8:	stp	x26, x25, [sp, #32]
  4236dc:	stp	x24, x23, [sp, #48]
  4236e0:	mov	x29, sp
  4236e4:	b.cc	423720 <strcache_add@@Base+0x90>  // b.lo, b.ul, b.last
  4236e8:	add	x0, x20, #0x10
  4236ec:	bl	419e14 <xmalloc@@Base>
  4236f0:	add	x23, x0, #0x8
  4236f4:	mov	x19, x0
  4236f8:	mov	x0, x23
  4236fc:	mov	x1, x21
  423700:	mov	x2, x20
  423704:	bl	406710 <memcpy@plt>
  423708:	strb	wzr, [x23, x20]
  42370c:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423710:	ldr	x9, [x8, #1688]
  423714:	str	x9, [x19]
  423718:	str	x19, [x8, #1688]
  42371c:	b	4238f4 <strcache_add@@Base+0x264>
  423720:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  423724:	add	x22, x22, #0x6b0
  423728:	add	x0, x22, #0x10
  42372c:	mov	x1, x21
  423730:	bl	410784 <hash_find_slot@@Base>
  423734:	ldr	x8, [x22]
  423738:	ldr	x23, [x0]
  42373c:	mov	x19, x0
  423740:	add	x8, x8, #0x1
  423744:	str	x8, [x22]
  423748:	cbz	x23, 42375c <strcache_add@@Base+0xcc>
  42374c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  423750:	ldr	x8, [x8, #2328]
  423754:	cmp	x23, x8
  423758:	b.ne	4238f4 <strcache_add@@Base+0x264>  // b.any
  42375c:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  423760:	add	x9, x9, #0x6a0
  423764:	ldp	x11, x12, [x9]
  423768:	add	w24, w20, #0x1
  42376c:	ubfx	w10, w20, #1, #15
  423770:	and	x8, x24, #0xffff
  423774:	cmp	w10, #0xff0
  423778:	add	x10, x11, #0x1
  42377c:	add	x11, x12, x8
  423780:	stp	x10, x11, [x9]
  423784:	b.ls	4237e8 <strcache_add@@Base+0x158>  // b.plast
  423788:	add	x0, x8, #0xe
  42378c:	bl	419e14 <xmalloc@@Base>
  423790:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423794:	strh	wzr, [x0, #8]
  423798:	strh	wzr, [x0, #12]
  42379c:	strh	w24, [x0, #10]
  4237a0:	add	x8, x8, #0x690
  4237a4:	ldr	x9, [x8]
  4237a8:	add	x23, x0, #0xe
  4237ac:	mov	x22, x0
  4237b0:	mov	x1, x21
  4237b4:	str	x9, [x0]
  4237b8:	ldr	x9, [x8, #40]
  4237bc:	str	x0, [x8]
  4237c0:	mov	x0, x23
  4237c4:	mov	x2, x20
  4237c8:	add	x9, x9, #0x1
  4237cc:	str	x9, [x8, #40]
  4237d0:	bl	406720 <memmove@plt>
  4237d4:	mov	w8, #0x10000               	// #65536
  4237d8:	strb	wzr, [x23, x20]
  4237dc:	strh	w24, [x22, #8]
  4237e0:	stur	w8, [x22, #10]
  4237e4:	b	4238e0 <strcache_add@@Base+0x250>
  4237e8:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4237ec:	ldr	x22, [x8, #1672]
  4237f0:	cbz	x22, 423828 <strcache_add@@Base+0x198>
  4237f4:	ldrh	w26, [x22, #10]
  4237f8:	cmp	w26, w24, uxth
  4237fc:	b.ls	42380c <strcache_add@@Base+0x17c>  // b.plast
  423800:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  423804:	add	x25, x25, #0x688
  423808:	b	423864 <strcache_add@@Base+0x1d4>
  42380c:	mov	x25, x22
  423810:	ldr	x22, [x22]
  423814:	cbz	x22, 423828 <strcache_add@@Base+0x198>
  423818:	ldrh	w26, [x22, #10]
  42381c:	cmp	w26, w24, uxth
  423820:	b.ls	42380c <strcache_add@@Base+0x17c>  // b.plast
  423824:	b	423864 <strcache_add@@Base+0x1d4>
  423828:	adrp	x25, 441000 <stdio_traced@@Base+0x1a48>
  42382c:	mov	w0, #0x1ff0                	// #8176
  423830:	add	x25, x25, #0x688
  423834:	bl	419e14 <xmalloc@@Base>
  423838:	mov	w8, #0x1fe20000            	// #534904832
  42383c:	strh	wzr, [x0, #12]
  423840:	str	w8, [x0, #8]
  423844:	ldr	x8, [x25]
  423848:	mov	x22, x0
  42384c:	mov	w26, #0x1fe2                	// #8162
  423850:	str	x8, [x0]
  423854:	ldr	x8, [x25, #48]
  423858:	str	x0, [x25]
  42385c:	add	x8, x8, #0x1
  423860:	str	x8, [x25, #48]
  423864:	ldrh	w27, [x22, #8]
  423868:	and	x20, x20, #0xffff
  42386c:	mov	x1, x21
  423870:	mov	x2, x20
  423874:	add	x8, x22, x27
  423878:	add	x23, x8, #0xe
  42387c:	mov	x0, x23
  423880:	bl	406720 <memmove@plt>
  423884:	strb	wzr, [x23, x20]
  423888:	ldrh	w10, [x22, #12]
  42388c:	add	w9, w27, w24
  423890:	sub	w8, w26, w24
  423894:	strh	w9, [x22, #8]
  423898:	add	w9, w10, #0x1
  42389c:	strh	w8, [x22, #10]
  4238a0:	strh	w9, [x22, #12]
  4238a4:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  4238a8:	ldr	x9, [x9, #1696]
  4238ac:	cmp	x9, #0x15
  4238b0:	b.cc	4238e0 <strcache_add@@Base+0x250>  // b.lo, b.ul, b.last
  4238b4:	adrp	x10, 441000 <stdio_traced@@Base+0x1a48>
  4238b8:	ldr	x10, [x10, #1704]
  4238bc:	udiv	x9, x10, x9
  4238c0:	cmp	x9, w8, uxth
  4238c4:	b.cc	4238e0 <strcache_add@@Base+0x250>  // b.lo, b.ul, b.last
  4238c8:	ldr	x8, [x22]
  4238cc:	adrp	x9, 441000 <stdio_traced@@Base+0x1a48>
  4238d0:	str	x8, [x25]
  4238d4:	ldr	x8, [x9, #1680]
  4238d8:	str	x8, [x22]
  4238dc:	str	x22, [x9, #1680]
  4238e0:	adrp	x0, 441000 <stdio_traced@@Base+0x1a48>
  4238e4:	add	x0, x0, #0x6c0
  4238e8:	mov	x1, x23
  4238ec:	mov	x2, x19
  4238f0:	bl	41099c <hash_insert_at@@Base>
  4238f4:	mov	x0, x23
  4238f8:	ldp	x20, x19, [sp, #80]
  4238fc:	ldp	x22, x21, [sp, #64]
  423900:	ldp	x24, x23, [sp, #48]
  423904:	ldp	x26, x25, [sp, #32]
  423908:	ldr	x27, [sp, #16]
  42390c:	ldp	x29, x30, [sp], #96
  423910:	ret

0000000000423914 <strcache_add_len@@Base>:
  423914:	stp	x29, x30, [sp, #-32]!
  423918:	stp	x20, x19, [sp, #16]
  42391c:	mov	x19, x1
  423920:	ldrb	w8, [x0, x19]
  423924:	mov	x1, x0
  423928:	mov	x29, sp
  42392c:	cbz	w8, 423958 <strcache_add_len@@Base+0x44>
  423930:	add	x9, x19, #0x10
  423934:	mov	x8, sp
  423938:	and	x9, x9, #0xfffffffffffffff0
  42393c:	sub	x20, x8, x9
  423940:	mov	sp, x20
  423944:	mov	x0, x20
  423948:	mov	x2, x19
  42394c:	bl	406710 <memcpy@plt>
  423950:	mov	x1, x20
  423954:	strb	wzr, [x20, x19]
  423958:	mov	x0, x1
  42395c:	mov	x1, x19
  423960:	bl	4236b8 <strcache_add@@Base+0x28>
  423964:	mov	sp, x29
  423968:	ldp	x20, x19, [sp, #16]
  42396c:	ldp	x29, x30, [sp], #32
  423970:	ret

0000000000423974 <strcache_init@@Base>:
  423974:	adrp	x0, 441000 <stdio_traced@@Base+0x1a48>
  423978:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  42397c:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  423980:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  423984:	add	x0, x0, #0x6c0
  423988:	add	x2, x2, #0x99c
  42398c:	add	x3, x3, #0x9b4
  423990:	add	x4, x4, #0x9bc
  423994:	mov	w1, #0x1f40                	// #8000
  423998:	b	410560 <hash_init@@Base>
  42399c:	stp	x29, x30, [sp, #-16]!
  4239a0:	mov	x29, sp
  4239a4:	bl	4112ec <jhash_string@@Base>
  4239a8:	mov	w0, w0
  4239ac:	ldp	x29, x30, [sp], #16
  4239b0:	ret
  4239b4:	mov	x0, xzr
  4239b8:	ret
  4239bc:	cmp	x0, x1
  4239c0:	b.eq	4239c8 <strcache_init@@Base+0x54>  // b.none
  4239c4:	b	406c10 <strcmp@plt>
  4239c8:	mov	w0, wzr
  4239cc:	ret

00000000004239d0 <strcache_print_stats@@Base>:
  4239d0:	stp	x29, x30, [sp, #-80]!
  4239d4:	stp	x24, x23, [sp, #32]
  4239d8:	stp	x22, x21, [sp, #48]
  4239dc:	stp	x20, x19, [sp, #64]
  4239e0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4239e4:	ldr	x8, [x8, #1672]
  4239e8:	mov	x19, x0
  4239ec:	str	x25, [sp, #16]
  4239f0:	mov	x29, sp
  4239f4:	cbz	x8, 423a70 <strcache_print_stats@@Base+0xa0>
  4239f8:	ldr	x8, [x8]
  4239fc:	cbz	x8, 423aa0 <strcache_print_stats@@Base+0xd0>
  423a00:	mov	x25, xzr
  423a04:	mov	x21, xzr
  423a08:	mov	x20, xzr
  423a0c:	mov	w22, #0x1fe2                	// #8162
  423a10:	ldrh	w9, [x8, #10]
  423a14:	ldr	x8, [x8]
  423a18:	add	x25, x25, #0x1
  423a1c:	cmp	x20, x9
  423a20:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  423a24:	cmp	x22, x9
  423a28:	add	x21, x21, x9
  423a2c:	csel	x22, x9, x22, hi  // hi = pmore
  423a30:	cbnz	x8, 423a10 <strcache_print_stats@@Base+0x40>
  423a34:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423a38:	ldr	x8, [x8, #1680]
  423a3c:	cbz	x8, 423abc <strcache_print_stats@@Base+0xec>
  423a40:	mov	x23, xzr
  423a44:	ldrh	w9, [x8, #10]
  423a48:	ldr	x8, [x8]
  423a4c:	add	x23, x23, #0x1
  423a50:	cmp	x20, x9
  423a54:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  423a58:	cmp	x22, x9
  423a5c:	add	x21, x21, x9
  423a60:	csel	x22, x9, x22, hi  // hi = pmore
  423a64:	cbnz	x8, 423a44 <strcache_print_stats@@Base+0x74>
  423a68:	add	x25, x25, x23
  423a6c:	b	423ac0 <strcache_print_stats@@Base+0xf0>
  423a70:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423a74:	add	x1, x1, #0x574
  423a78:	mov	w2, #0x5                   	// #5
  423a7c:	mov	x0, xzr
  423a80:	bl	406dc0 <dcgettext@plt>
  423a84:	mov	x1, x19
  423a88:	ldp	x20, x19, [sp, #64]
  423a8c:	ldp	x22, x21, [sp, #48]
  423a90:	ldp	x24, x23, [sp, #32]
  423a94:	ldr	x25, [sp, #16]
  423a98:	ldp	x29, x30, [sp], #80
  423a9c:	b	406e60 <printf@plt>
  423aa0:	mov	x20, xzr
  423aa4:	mov	x21, xzr
  423aa8:	mov	x25, xzr
  423aac:	mov	w22, #0x1fe2                	// #8162
  423ab0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423ab4:	ldr	x8, [x8, #1680]
  423ab8:	cbnz	x8, 423a40 <strcache_print_stats@@Base+0x70>
  423abc:	mov	x23, xzr
  423ac0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423ac4:	add	x1, x1, #0x58d
  423ac8:	mov	w2, #0x5                   	// #5
  423acc:	mov	x0, xzr
  423ad0:	bl	406dc0 <dcgettext@plt>
  423ad4:	adrp	x24, 441000 <stdio_traced@@Base+0x1a48>
  423ad8:	add	x24, x24, #0x688
  423adc:	ldp	x4, x5, [x24, #24]
  423ae0:	add	x2, x25, #0x1
  423ae4:	mov	x1, x19
  423ae8:	mov	x3, x23
  423aec:	udiv	x6, x5, x4
  423af0:	bl	406e60 <printf@plt>
  423af4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423af8:	add	x1, x1, #0x5de
  423afc:	mov	w2, #0x5                   	// #5
  423b00:	mov	x0, xzr
  423b04:	bl	406dc0 <dcgettext@plt>
  423b08:	ldr	x8, [x24]
  423b0c:	mov	w2, #0x1fe2                	// #8162
  423b10:	mov	x1, x19
  423b14:	ldrh	w3, [x8, #8]
  423b18:	ldrh	w4, [x8, #12]
  423b1c:	udiv	w5, w3, w4
  423b20:	bl	406e60 <printf@plt>
  423b24:	cbz	x25, 423b98 <strcache_print_stats@@Base+0x1c8>
  423b28:	ldr	x8, [x24]
  423b2c:	ldp	x10, x9, [x24, #24]
  423b30:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423b34:	add	x1, x1, #0x626
  423b38:	ldrh	w11, [x8, #8]
  423b3c:	ldrh	w8, [x8, #12]
  423b40:	mov	w2, #0x5                   	// #5
  423b44:	mov	x0, xzr
  423b48:	sub	x23, x9, x11
  423b4c:	sub	x24, x10, x8
  423b50:	udiv	x25, x21, x25
  423b54:	bl	406dc0 <dcgettext@plt>
  423b58:	udiv	x4, x23, x24
  423b5c:	mov	x1, x19
  423b60:	mov	x2, x23
  423b64:	mov	x3, x24
  423b68:	bl	406e60 <printf@plt>
  423b6c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423b70:	add	x1, x1, #0x660
  423b74:	mov	w2, #0x5                   	// #5
  423b78:	mov	x0, xzr
  423b7c:	bl	406dc0 <dcgettext@plt>
  423b80:	and	w5, w25, #0xffff
  423b84:	mov	x1, x19
  423b88:	mov	x2, x21
  423b8c:	mov	x3, x20
  423b90:	mov	x4, x22
  423b94:	bl	406e60 <printf@plt>
  423b98:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423b9c:	add	x1, x1, #0x6a8
  423ba0:	mov	w2, #0x5                   	// #5
  423ba4:	mov	x0, xzr
  423ba8:	bl	406dc0 <dcgettext@plt>
  423bac:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  423bb0:	add	x20, x20, #0x6a0
  423bb4:	ldr	x2, [x20, #16]
  423bb8:	ldr	x8, [x20]
  423bbc:	mov	x9, #0x4059000000000000    	// #4636737291354636288
  423bc0:	fmov	d0, x9
  423bc4:	mov	x1, x19
  423bc8:	sub	x8, x2, x8
  423bcc:	ucvtf	d1, x8
  423bd0:	fmul	d0, d1, d0
  423bd4:	ucvtf	d1, x2
  423bd8:	fdiv	d0, d0, d1
  423bdc:	fcvtzu	x3, d0
  423be0:	bl	406e60 <printf@plt>
  423be4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  423be8:	add	x1, x1, #0x6e4
  423bec:	mov	w2, #0x5                   	// #5
  423bf0:	mov	x0, xzr
  423bf4:	bl	406dc0 <dcgettext@plt>
  423bf8:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  423bfc:	ldr	x1, [x19, #2504]
  423c00:	bl	406760 <fputs@plt>
  423c04:	ldr	x1, [x19, #2504]
  423c08:	add	x0, x20, #0x20
  423c0c:	ldp	x20, x19, [sp, #64]
  423c10:	ldp	x22, x21, [sp, #48]
  423c14:	ldp	x24, x23, [sp, #32]
  423c18:	ldr	x25, [sp, #16]
  423c1c:	ldp	x29, x30, [sp], #80
  423c20:	b	410fec <hash_print_stats@@Base>

0000000000423c24 <create_pattern_var@@Base>:
  423c24:	stp	x29, x30, [sp, #-48]!
  423c28:	str	x21, [sp, #16]
  423c2c:	stp	x20, x19, [sp, #32]
  423c30:	mov	x29, sp
  423c34:	mov	x21, x1
  423c38:	mov	x19, x0
  423c3c:	bl	406750 <strlen@plt>
  423c40:	mov	x20, x0
  423c44:	mov	w0, #0x50                  	// #80
  423c48:	bl	419e38 <xcalloc@@Base>
  423c4c:	adrp	x10, 441000 <stdio_traced@@Base+0x1a48>
  423c50:	ldr	x9, [x10, #1816]
  423c54:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423c58:	add	x8, x8, #0x718
  423c5c:	cbz	x9, 423cb4 <create_pattern_var@@Base+0x90>
  423c60:	cmp	x20, #0xff
  423c64:	b.hi	423c74 <create_pattern_var@@Base+0x50>  // b.pmore
  423c68:	add	x10, x8, x20, lsl #3
  423c6c:	ldr	x10, [x10, #112]
  423c70:	cbnz	x10, 423ca4 <create_pattern_var@@Base+0x80>
  423c74:	ldr	x10, [x9, #24]
  423c78:	cmp	x10, x20
  423c7c:	b.ls	423c8c <create_pattern_var@@Base+0x68>  // b.plast
  423c80:	adrp	x10, 441000 <stdio_traced@@Base+0x1a48>
  423c84:	add	x10, x10, #0x718
  423c88:	b	423ca4 <create_pattern_var@@Base+0x80>
  423c8c:	mov	x10, x9
  423c90:	ldr	x9, [x9]
  423c94:	cbz	x9, 423ca4 <create_pattern_var@@Base+0x80>
  423c98:	ldr	x11, [x9, #24]
  423c9c:	cmp	x11, x20
  423ca0:	b.ls	423c8c <create_pattern_var@@Base+0x68>  // b.plast
  423ca4:	ldr	x9, [x10]
  423ca8:	str	x9, [x0]
  423cac:	str	x0, [x10]
  423cb0:	b	423cbc <create_pattern_var@@Base+0x98>
  423cb4:	str	x0, [x10, #1816]
  423cb8:	str	xzr, [x0]
  423cbc:	add	x9, x21, #0x1
  423cc0:	cmp	x20, #0xff
  423cc4:	stp	x19, x20, [x0, #16]
  423cc8:	str	x9, [x0, #8]
  423ccc:	b.hi	423cd8 <create_pattern_var@@Base+0xb4>  // b.pmore
  423cd0:	add	x8, x8, x20, lsl #3
  423cd4:	str	x0, [x8, #112]
  423cd8:	ldp	x20, x19, [sp, #32]
  423cdc:	ldr	x21, [sp, #16]
  423ce0:	ldp	x29, x30, [sp], #48
  423ce4:	ret

0000000000423ce8 <init_hash_global_variable_set@@Base>:
  423ce8:	adrp	x0, 441000 <stdio_traced@@Base+0x1a48>
  423cec:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  423cf0:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  423cf4:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  423cf8:	add	x0, x0, #0x730
  423cfc:	add	x2, x2, #0xd10
  423d00:	add	x3, x3, #0xd34
  423d04:	add	x4, x4, #0xd3c
  423d08:	mov	w1, #0x20b                 	// #523
  423d0c:	b	410560 <hash_init@@Base>
  423d10:	stp	x29, x30, [sp, #-16]!
  423d14:	ldr	x8, [x0]
  423d18:	ldr	w1, [x0, #40]
  423d1c:	mov	x29, sp
  423d20:	mov	x0, x8
  423d24:	bl	411184 <jhash@@Base>
  423d28:	mov	w0, w0
  423d2c:	ldp	x29, x30, [sp], #16
  423d30:	ret
  423d34:	mov	x0, xzr
  423d38:	ret
  423d3c:	ldr	w2, [x0, #40]
  423d40:	ldr	w9, [x1, #40]
  423d44:	mov	x8, x0
  423d48:	subs	w0, w2, w9
  423d4c:	b.eq	423d54 <init_hash_global_variable_set@@Base+0x6c>  // b.none
  423d50:	ret
  423d54:	ldr	x0, [x8]
  423d58:	ldr	x1, [x1]
  423d5c:	cmp	x0, x1
  423d60:	b.eq	423d68 <init_hash_global_variable_set@@Base+0x80>  // b.none
  423d64:	b	406bd0 <memcmp@plt>
  423d68:	mov	w0, wzr
  423d6c:	ret

0000000000423d70 <define_variable_in_set@@Base>:
  423d70:	sub	sp, sp, #0x90
  423d74:	stp	x28, x27, [sp, #64]
  423d78:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  423d7c:	add	x28, x28, #0x730
  423d80:	cmp	x5, #0x0
  423d84:	stp	x24, x23, [sp, #96]
  423d88:	csel	x24, x28, x5, eq  // eq = none
  423d8c:	stp	x26, x25, [sp, #80]
  423d90:	stp	x22, x21, [sp, #112]
  423d94:	mov	x25, x1
  423d98:	mov	x22, x0
  423d9c:	str	x0, [sp]
  423da0:	mov	x1, sp
  423da4:	mov	x0, x24
  423da8:	stp	x29, x30, [sp, #48]
  423dac:	stp	x20, x19, [sp, #128]
  423db0:	add	x29, sp, #0x30
  423db4:	mov	x21, x6
  423db8:	mov	w20, w4
  423dbc:	mov	w27, w3
  423dc0:	mov	x23, x2
  423dc4:	str	w25, [sp, #40]
  423dc8:	bl	410784 <hash_find_slot@@Base>
  423dcc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  423dd0:	ldr	w9, [x8, #3248]
  423dd4:	ldr	x19, [x0]
  423dd8:	mov	w8, #0x3                   	// #3
  423ddc:	mov	x26, x0
  423de0:	cmp	w9, #0x0
  423de4:	ccmp	w27, #0x1, #0x0, ne  // ne = any
  423de8:	csel	w27, w8, w27, eq  // eq = none
  423dec:	cbz	x19, 423e60 <define_variable_in_set@@Base+0xf0>
  423df0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  423df4:	ldr	x8, [x8, #2328]
  423df8:	cmp	x8, x19
  423dfc:	b.eq	423e60 <define_variable_in_set@@Base+0xf0>  // b.none
  423e00:	ldr	w8, [x19, #44]
  423e04:	cbz	w9, 423e24 <define_variable_in_set@@Base+0xb4>
  423e08:	and	w9, w8, #0x1c000000
  423e0c:	mov	w10, #0x4000000             	// #67108864
  423e10:	cmp	w9, w10
  423e14:	b.ne	423e24 <define_variable_in_set@@Base+0xb4>  // b.any
  423e18:	and	w8, w8, #0xe3ffffff
  423e1c:	orr	w8, w8, #0xc000000
  423e20:	str	w8, [x19, #44]
  423e24:	ubfx	w8, w8, #26, #3
  423e28:	cmp	w27, w8
  423e2c:	b.lt	423f94 <define_variable_in_set@@Base+0x224>  // b.tstop
  423e30:	ldr	x0, [x19, #8]
  423e34:	bl	406c60 <free@plt>
  423e38:	mov	x0, x23
  423e3c:	bl	419e60 <xstrdup@@Base>
  423e40:	add	x8, x19, #0x10
  423e44:	str	x0, [x19, #8]
  423e48:	cbz	x21, 423f70 <define_variable_in_set@@Base+0x200>
  423e4c:	ldr	x9, [x21, #16]
  423e50:	ldr	q0, [x21]
  423e54:	str	x9, [x8, #16]
  423e58:	str	q0, [x8]
  423e5c:	b	423f74 <define_variable_in_set@@Base+0x204>
  423e60:	mov	w0, #0x30                  	// #48
  423e64:	bl	419e38 <xcalloc@@Base>
  423e68:	mov	x19, x0
  423e6c:	mov	x0, x22
  423e70:	mov	x1, x25
  423e74:	bl	419e7c <xstrndup@@Base>
  423e78:	str	x0, [x19]
  423e7c:	mov	x0, x24
  423e80:	mov	x1, x19
  423e84:	mov	x2, x26
  423e88:	str	w25, [x19, #40]
  423e8c:	bl	41099c <hash_insert_at@@Base>
  423e90:	cmp	x24, x28
  423e94:	b.ne	423ea8 <define_variable_in_set@@Base+0x138>  // b.any
  423e98:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  423e9c:	ldr	x9, [x8, #1824]
  423ea0:	add	x9, x9, #0x1
  423ea4:	str	x9, [x8, #1824]
  423ea8:	mov	x0, x23
  423eac:	bl	419e60 <xstrdup@@Base>
  423eb0:	str	x0, [x19, #8]
  423eb4:	cbz	x21, 423ec8 <define_variable_in_set@@Base+0x158>
  423eb8:	ldr	x8, [x21, #16]
  423ebc:	ldr	q0, [x21]
  423ec0:	str	x8, [x19, #32]
  423ec4:	str	q0, [x19, #16]
  423ec8:	ldr	w8, [x19, #44]
  423ecc:	mov	w9, #0xffde                	// #65502
  423ed0:	movk	w9, #0x83ff, lsl #16
  423ed4:	and	w10, w20, #0x1
  423ed8:	bfi	w10, w27, #26, #3
  423edc:	and	w8, w8, w9
  423ee0:	mov	w9, #0x20                  	// #32
  423ee4:	orr	w8, w10, w8
  423ee8:	movk	w9, #0x6000, lsl #16
  423eec:	orr	w9, w8, w9
  423ef0:	str	w9, [x19, #44]
  423ef4:	ldrb	w9, [x22]
  423ef8:	sub	w10, w9, #0x61
  423efc:	cmp	w10, #0x1a
  423f00:	b.cc	423f24 <define_variable_in_set@@Base+0x1b4>  // b.lo, b.ul, b.last
  423f04:	cmp	w9, #0x5f
  423f08:	b.eq	423f24 <define_variable_in_set@@Base+0x1b4>  // b.none
  423f0c:	sub	w9, w9, #0x41
  423f10:	and	w9, w9, #0xff
  423f14:	cmp	w9, #0x19
  423f18:	b.ls	423f24 <define_variable_in_set@@Base+0x1b4>  // b.plast
  423f1c:	orr	w8, w8, #0x60000000
  423f20:	b	423f90 <define_variable_in_set@@Base+0x220>
  423f24:	add	x9, x22, #0x1
  423f28:	b	423f30 <define_variable_in_set@@Base+0x1c0>
  423f2c:	add	x9, x9, #0x1
  423f30:	ldrb	w10, [x9]
  423f34:	cmp	w10, #0x5f
  423f38:	b.eq	423f2c <define_variable_in_set@@Base+0x1bc>  // b.none
  423f3c:	cbz	w10, 423f94 <define_variable_in_set@@Base+0x224>
  423f40:	sub	w11, w10, #0x61
  423f44:	cmp	w11, #0x1a
  423f48:	b.cc	423f2c <define_variable_in_set@@Base+0x1bc>  // b.lo, b.ul, b.last
  423f4c:	sub	w11, w10, #0x41
  423f50:	and	w11, w11, #0xff
  423f54:	cmp	w11, #0x19
  423f58:	b.ls	423f2c <define_variable_in_set@@Base+0x1bc>  // b.plast
  423f5c:	sub	w11, w10, #0x30
  423f60:	cmp	w11, #0xa
  423f64:	b.cc	423f2c <define_variable_in_set@@Base+0x1bc>  // b.lo, b.ul, b.last
  423f68:	cbnz	w10, 423f1c <define_variable_in_set@@Base+0x1ac>
  423f6c:	b	423f94 <define_variable_in_set@@Base+0x224>
  423f70:	str	xzr, [x8]
  423f74:	ldr	w8, [x19, #44]
  423f78:	mov	w9, #0xfffe                	// #65534
  423f7c:	movk	w9, #0xe3ff, lsl #16
  423f80:	and	w10, w20, #0x1
  423f84:	and	w8, w8, w9
  423f88:	bfi	w10, w27, #26, #3
  423f8c:	orr	w8, w10, w8
  423f90:	str	w8, [x19, #44]
  423f94:	mov	x0, x19
  423f98:	ldp	x20, x19, [sp, #128]
  423f9c:	ldp	x22, x21, [sp, #112]
  423fa0:	ldp	x24, x23, [sp, #96]
  423fa4:	ldp	x26, x25, [sp, #80]
  423fa8:	ldp	x28, x27, [sp, #64]
  423fac:	ldp	x29, x30, [sp, #48]
  423fb0:	add	sp, sp, #0x90
  423fb4:	ret

0000000000423fb8 <free_variable_set@@Base>:
  423fb8:	stp	x29, x30, [sp, #-32]!
  423fbc:	str	x19, [sp, #16]
  423fc0:	mov	x19, x0
  423fc4:	ldr	x0, [x0, #8]
  423fc8:	adrp	x1, 423000 <install_pattern_rule@@Base+0x2a8>
  423fcc:	add	x1, x1, #0xffc
  423fd0:	mov	x29, sp
  423fd4:	bl	410f0c <hash_map@@Base>
  423fd8:	ldr	x0, [x19, #8]
  423fdc:	mov	w1, #0x1                   	// #1
  423fe0:	bl	410e88 <hash_free@@Base>
  423fe4:	ldr	x0, [x19, #8]
  423fe8:	bl	406c60 <free@plt>
  423fec:	mov	x0, x19
  423ff0:	ldr	x19, [sp, #16]
  423ff4:	ldp	x29, x30, [sp], #32
  423ff8:	b	406c60 <free@plt>
  423ffc:	stp	x29, x30, [sp, #-32]!
  424000:	str	x19, [sp, #16]
  424004:	mov	x19, x0
  424008:	ldr	x0, [x0]
  42400c:	mov	x29, sp
  424010:	bl	406c60 <free@plt>
  424014:	ldr	x0, [x19, #8]
  424018:	ldr	x19, [sp, #16]
  42401c:	ldp	x29, x30, [sp], #32
  424020:	b	406c60 <free@plt>

0000000000424024 <undefine_variable_in_set@@Base>:
  424024:	sub	sp, sp, #0x60
  424028:	stp	x22, x21, [sp, #64]
  42402c:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  424030:	add	x22, x22, #0x730
  424034:	cmp	x3, #0x0
  424038:	stp	x20, x19, [sp, #80]
  42403c:	csel	x19, x22, x3, eq  // eq = none
  424040:	str	x0, [sp]
  424044:	str	w1, [sp, #40]
  424048:	mov	x1, sp
  42404c:	mov	x0, x19
  424050:	stp	x29, x30, [sp, #48]
  424054:	add	x29, sp, #0x30
  424058:	mov	w21, w2
  42405c:	bl	410784 <hash_find_slot@@Base>
  424060:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424064:	ldr	w10, [x8, #3248]
  424068:	ldr	x20, [x0]
  42406c:	mov	w8, #0x3                   	// #3
  424070:	cmp	w10, #0x0
  424074:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  424078:	csel	w8, w8, w21, eq  // eq = none
  42407c:	cbz	x20, 4240fc <undefine_variable_in_set@@Base+0xd8>
  424080:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424084:	ldr	x9, [x9, #2328]
  424088:	cmp	x9, x20
  42408c:	b.eq	4240fc <undefine_variable_in_set@@Base+0xd8>  // b.none
  424090:	ldr	w9, [x20, #44]
  424094:	mov	x1, x0
  424098:	cbz	w10, 4240b8 <undefine_variable_in_set@@Base+0x94>
  42409c:	and	w10, w9, #0x1c000000
  4240a0:	mov	w11, #0x4000000             	// #67108864
  4240a4:	cmp	w10, w11
  4240a8:	b.ne	4240b8 <undefine_variable_in_set@@Base+0x94>  // b.any
  4240ac:	and	w9, w9, #0xe3ffffff
  4240b0:	orr	w9, w9, #0xc000000
  4240b4:	str	w9, [x20, #44]
  4240b8:	ubfx	w9, w9, #26, #3
  4240bc:	cmp	w8, w9
  4240c0:	b.lt	4240fc <undefine_variable_in_set@@Base+0xd8>  // b.tstop
  4240c4:	mov	x0, x19
  4240c8:	bl	410d80 <hash_delete_at@@Base>
  4240cc:	ldr	x0, [x20]
  4240d0:	bl	406c60 <free@plt>
  4240d4:	ldr	x0, [x20, #8]
  4240d8:	bl	406c60 <free@plt>
  4240dc:	mov	x0, x20
  4240e0:	bl	406c60 <free@plt>
  4240e4:	cmp	x19, x22
  4240e8:	b.ne	4240fc <undefine_variable_in_set@@Base+0xd8>  // b.any
  4240ec:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4240f0:	ldr	x9, [x8, #1824]
  4240f4:	add	x9, x9, #0x1
  4240f8:	str	x9, [x8, #1824]
  4240fc:	ldp	x20, x19, [sp, #80]
  424100:	ldp	x22, x21, [sp, #64]
  424104:	ldp	x29, x30, [sp, #48]
  424108:	add	sp, sp, #0x60
  42410c:	ret

0000000000424110 <lookup_variable@@Base>:
  424110:	sub	sp, sp, #0x90
  424114:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424118:	stp	x20, x19, [sp, #128]
  42411c:	ldr	x20, [x8, #2424]
  424120:	stp	x29, x30, [sp, #48]
  424124:	stp	x28, x27, [sp, #64]
  424128:	stp	x26, x25, [sp, #80]
  42412c:	stp	x24, x23, [sp, #96]
  424130:	stp	x22, x21, [sp, #112]
  424134:	add	x29, sp, #0x30
  424138:	str	x0, [sp]
  42413c:	str	w1, [sp, #40]
  424140:	cbz	x20, 424238 <lookup_variable@@Base+0x128>
  424144:	mov	w21, wzr
  424148:	b	42415c <lookup_variable@@Base+0x4c>
  42414c:	ldr	w8, [x20, #16]
  424150:	ldr	x20, [x20]
  424154:	orr	w21, w8, w21
  424158:	cbz	x20, 424238 <lookup_variable@@Base+0x128>
  42415c:	ldr	x0, [x20, #8]
  424160:	mov	x1, sp
  424164:	bl	410888 <hash_find_item@@Base>
  424168:	cbz	x0, 42414c <lookup_variable@@Base+0x3c>
  42416c:	ldr	w8, [x0, #44]
  424170:	mov	x19, x0
  424174:	cbz	w21, 42417c <lookup_variable@@Base+0x6c>
  424178:	tbnz	w8, #7, 42414c <lookup_variable@@Base+0x3c>
  42417c:	tbz	w8, #4, 42423c <lookup_variable@@Base+0x12c>
  424180:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  424184:	add	x23, x23, #0x720
  424188:	ldp	x8, x9, [x23]
  42418c:	cmp	x8, x9
  424190:	b.eq	42423c <lookup_variable@@Base+0x12c>  // b.none
  424194:	ldr	x8, [x19]
  424198:	adrp	x9, 42b000 <_IO_stdin_used@@Base+0x3680>
  42419c:	add	x9, x9, #0x121
  4241a0:	cmp	x8, x9
  4241a4:	b.eq	4241c8 <lookup_variable@@Base+0xb8>  // b.none
  4241a8:	ldrb	w9, [x8]
  4241ac:	cmp	w9, #0x2e
  4241b0:	b.ne	42423c <lookup_variable@@Base+0x12c>  // b.any
  4241b4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4241b8:	add	x0, x8, #0x1
  4241bc:	add	x1, x1, #0x122
  4241c0:	bl	406c10 <strcmp@plt>
  4241c4:	cbnz	w0, 42423c <lookup_variable@@Base+0x12c>
  4241c8:	ldr	x21, [x19, #8]
  4241cc:	mov	x0, x21
  4241d0:	bl	406750 <strlen@plt>
  4241d4:	mov	x9, #0xf7cf                	// #63439
  4241d8:	movk	x9, #0xe353, lsl #16
  4241dc:	movk	x9, #0x9ba5, lsl #32
  4241e0:	lsr	x8, x0, #2
  4241e4:	movk	x9, #0x20c4, lsl #48
  4241e8:	adrp	x10, 441000 <stdio_traced@@Base+0x1a48>
  4241ec:	umulh	x8, x8, x9
  4241f0:	add	x10, x10, #0x730
  4241f4:	lsr	x8, x8, #4
  4241f8:	mov	w9, #0x1f4                 	// #500
  4241fc:	ldr	x24, [x10]
  424200:	ldr	x22, [x10, #32]
  424204:	mul	x8, x8, x9
  424208:	add	x20, x8, #0x1f4
  42420c:	mov	x0, x21
  424210:	mov	x1, x20
  424214:	bl	419de0 <xrealloc@@Base>
  424218:	mov	x21, x0
  42421c:	cmp	x22, #0x1
  424220:	str	x0, [x19, #8]
  424224:	b.lt	4242fc <lookup_variable@@Base+0x1ec>  // b.tstop
  424228:	mov	x26, xzr
  42422c:	add	x27, x24, x22, lsl #3
  424230:	adrp	x28, 43e000 <memcpy@GLIBC_2.17>
  424234:	b	424288 <lookup_variable@@Base+0x178>
  424238:	mov	x19, xzr
  42423c:	mov	x0, x19
  424240:	ldp	x20, x19, [sp, #128]
  424244:	ldp	x22, x21, [sp, #112]
  424248:	ldp	x24, x23, [sp, #96]
  42424c:	ldp	x26, x25, [sp, #80]
  424250:	ldp	x28, x27, [sp, #64]
  424254:	ldp	x29, x30, [sp, #48]
  424258:	add	sp, sp, #0x90
  42425c:	ret
  424260:	ldr	x1, [x25]
  424264:	mov	x0, x21
  424268:	mov	x2, x22
  42426c:	bl	406710 <memcpy@plt>
  424270:	add	x21, x21, x22
  424274:	mov	w8, #0x20                  	// #32
  424278:	strb	w8, [x21], #1
  42427c:	add	x24, x24, #0x8
  424280:	cmp	x24, x27
  424284:	b.cs	4242fc <lookup_variable@@Base+0x1ec>  // b.hs, b.nlast
  424288:	ldr	x25, [x24]
  42428c:	cbz	x25, 42427c <lookup_variable@@Base+0x16c>
  424290:	ldr	x8, [x28, #2328]
  424294:	cmp	x8, x25
  424298:	b.eq	42427c <lookup_variable@@Base+0x16c>  // b.none
  42429c:	ldrsw	x22, [x25, #40]
  4242a0:	add	x8, x22, #0x1
  4242a4:	add	x26, x26, x8
  4242a8:	cmp	x26, x20
  4242ac:	b.ls	424260 <lookup_variable@@Base+0x150>  // b.plast
  4242b0:	mov	w9, #0x4dd3                	// #19923
  4242b4:	movk	w9, #0x1062, lsl #16
  4242b8:	smull	x9, w8, w9
  4242bc:	lsr	x10, x9, #63
  4242c0:	asr	x9, x9, #37
  4242c4:	neg	w8, w8
  4242c8:	add	w9, w9, w10
  4242cc:	mov	w10, #0x1f4                 	// #500
  4242d0:	madd	w8, w9, w10, w8
  4242d4:	ldr	x0, [x19, #8]
  4242d8:	add	w8, w22, w8
  4242dc:	add	w8, w8, #0x1f5
  4242e0:	add	x20, x20, w8, sxtw
  4242e4:	mov	x1, x20
  4242e8:	sub	x21, x21, x0
  4242ec:	bl	419de0 <xrealloc@@Base>
  4242f0:	add	x21, x0, x21
  4242f4:	str	x0, [x19, #8]
  4242f8:	b	424260 <lookup_variable@@Base+0x150>
  4242fc:	sturb	wzr, [x21, #-1]
  424300:	ldr	x8, [x23]
  424304:	str	x8, [x23, #8]
  424308:	b	42423c <lookup_variable@@Base+0x12c>

000000000042430c <lookup_variable_in_set@@Base>:
  42430c:	str	x0, [sp, #-64]!
  424310:	str	w1, [sp, #40]
  424314:	mov	x1, sp
  424318:	mov	x0, x2
  42431c:	stp	x29, x30, [sp, #48]
  424320:	add	x29, sp, #0x30
  424324:	bl	410888 <hash_find_item@@Base>
  424328:	ldp	x29, x30, [sp, #48]
  42432c:	add	sp, sp, #0x40
  424330:	ret

0000000000424334 <initialize_file_variables@@Base>:
  424334:	stp	x29, x30, [sp, #-80]!
  424338:	stp	x24, x23, [sp, #32]
  42433c:	stp	x22, x21, [sp, #48]
  424340:	stp	x20, x19, [sp, #64]
  424344:	ldr	x19, [x0, #80]
  424348:	mov	x20, x0
  42434c:	mov	w21, w1
  424350:	str	x25, [sp, #16]
  424354:	mov	x29, sp
  424358:	cbz	x19, 424368 <initialize_file_variables@@Base+0x34>
  42435c:	ldr	x0, [x20, #104]
  424360:	cbnz	x0, 4243ac <initialize_file_variables@@Base+0x78>
  424364:	b	4243d0 <initialize_file_variables@@Base+0x9c>
  424368:	mov	w0, #0x18                  	// #24
  42436c:	bl	419e14 <xmalloc@@Base>
  424370:	mov	x19, x0
  424374:	mov	w0, #0x58                  	// #88
  424378:	bl	419e14 <xmalloc@@Base>
  42437c:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  424380:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  424384:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  424388:	add	x2, x2, #0xd10
  42438c:	add	x3, x3, #0xd34
  424390:	add	x4, x4, #0xd3c
  424394:	mov	w1, #0x17                  	// #23
  424398:	str	x0, [x19, #8]
  42439c:	bl	410560 <hash_init@@Base>
  4243a0:	str	x19, [x20, #80]
  4243a4:	ldr	x0, [x20, #104]
  4243a8:	cbz	x0, 4243d0 <initialize_file_variables@@Base+0x9c>
  4243ac:	cmp	x0, x20
  4243b0:	b.eq	4243d0 <initialize_file_variables@@Base+0x9c>  // b.none
  4243b4:	mov	w1, w21
  4243b8:	bl	424334 <initialize_file_variables@@Base>
  4243bc:	ldr	x8, [x20, #104]
  4243c0:	ldr	x8, [x8, #80]
  4243c4:	str	wzr, [x19, #16]
  4243c8:	str	x8, [x19]
  4243cc:	b	424564 <initialize_file_variables@@Base+0x230>
  4243d0:	ldr	x0, [x20, #96]
  4243d4:	cbz	x0, 4243fc <initialize_file_variables@@Base+0xc8>
  4243d8:	mov	w1, w21
  4243dc:	bl	424334 <initialize_file_variables@@Base>
  4243e0:	ldr	x8, [x20, #96]
  4243e4:	ldr	x8, [x8, #80]
  4243e8:	str	x8, [x19]
  4243ec:	mov	w8, #0x1                   	// #1
  4243f0:	str	w8, [x19, #16]
  4243f4:	cbnz	w21, 424544 <initialize_file_variables@@Base+0x210>
  4243f8:	b	424414 <initialize_file_variables@@Base+0xe0>
  4243fc:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424400:	add	x8, x8, #0x960
  424404:	str	x8, [x19]
  424408:	mov	w8, #0x1                   	// #1
  42440c:	str	w8, [x19, #16]
  424410:	cbnz	w21, 424544 <initialize_file_variables@@Base+0x210>
  424414:	ldr	w22, [x20, #136]
  424418:	tbnz	w22, #18, 424544 <initialize_file_variables@@Base+0x210>
  42441c:	ldr	x1, [x20]
  424420:	mov	x0, xzr
  424424:	bl	42457c <initialize_file_variables@@Base+0x248>
  424428:	cbz	x0, 42453c <initialize_file_variables@@Base+0x208>
  42442c:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  424430:	ldr	x24, [x23, #2424]
  424434:	mov	x21, x0
  424438:	mov	w0, #0x58                  	// #88
  42443c:	bl	419e14 <xmalloc@@Base>
  424440:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  424444:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  424448:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  42444c:	add	x2, x2, #0xd10
  424450:	add	x3, x3, #0xd34
  424454:	add	x4, x4, #0xd3c
  424458:	mov	w1, #0xd                   	// #13
  42445c:	mov	x22, x0
  424460:	bl	410560 <hash_init@@Base>
  424464:	mov	w0, #0x18                  	// #24
  424468:	bl	419e14 <xmalloc@@Base>
  42446c:	ldr	x8, [x23, #2424]
  424470:	str	wzr, [x0, #16]
  424474:	stp	x8, x22, [x0]
  424478:	str	x0, [x20, #88]
  42447c:	str	x0, [x23, #2424]
  424480:	b	4244e0 <initialize_file_variables@@Base+0x1ac>
  424484:	ldp	x1, x2, [x21, #32]
  424488:	add	x0, x21, #0x30
  42448c:	ubfx	w3, w25, #26, #3
  424490:	mov	w5, #0x1                   	// #1
  424494:	bl	4246c0 <do_variable_definition@@Base>
  424498:	ldr	w8, [x0, #44]
  42449c:	ldr	w9, [x21, #76]
  4244a0:	lsr	w9, w9, #3
  4244a4:	bfi	w8, w9, #3, #1
  4244a8:	str	w8, [x0, #44]
  4244ac:	ldr	w9, [x21, #76]
  4244b0:	lsr	w9, w9, #29
  4244b4:	bfi	w8, w9, #29, #2
  4244b8:	str	w8, [x0, #44]
  4244bc:	ldr	w9, [x21, #76]
  4244c0:	lsr	w9, w9, #7
  4244c4:	bfi	w8, w9, #7, #1
  4244c8:	str	w8, [x0, #44]
  4244cc:	ldr	x1, [x20]
  4244d0:	mov	x0, x21
  4244d4:	bl	42457c <initialize_file_variables@@Base+0x248>
  4244d8:	mov	x21, x0
  4244dc:	cbz	x0, 424534 <initialize_file_variables@@Base+0x200>
  4244e0:	ldr	w25, [x21, #76]
  4244e4:	ubfx	w4, w25, #23, #3
  4244e8:	cmp	w4, #0x1
  4244ec:	b.ne	424484 <initialize_file_variables@@Base+0x150>  // b.any
  4244f0:	ldr	x22, [x21, #32]
  4244f4:	mov	x0, x22
  4244f8:	bl	406750 <strlen@plt>
  4244fc:	ldr	x8, [x23, #2424]
  424500:	ldr	x2, [x21, #40]
  424504:	mov	x1, x0
  424508:	ubfx	w3, w25, #26, #3
  42450c:	ldr	x5, [x8, #8]
  424510:	add	x6, x21, #0x30
  424514:	mov	x0, x22
  424518:	mov	w4, wzr
  42451c:	bl	423d70 <define_variable_in_set@@Base>
  424520:	ldr	w8, [x0, #44]
  424524:	and	w8, w8, #0xfc7fffff
  424528:	orr	w8, w8, #0x800000
  42452c:	str	w8, [x0, #44]
  424530:	b	42449c <initialize_file_variables@@Base+0x168>
  424534:	str	x24, [x23, #2424]
  424538:	ldr	w22, [x20, #136]
  42453c:	orr	w8, w22, #0x40000
  424540:	str	w8, [x20, #136]
  424544:	ldr	x8, [x20, #88]
  424548:	cbz	x8, 424564 <initialize_file_variables@@Base+0x230>
  42454c:	ldr	x9, [x19]
  424550:	str	x9, [x8]
  424554:	ldr	w9, [x19, #16]
  424558:	str	w9, [x8, #16]
  42455c:	str	x8, [x19]
  424560:	str	wzr, [x19, #16]
  424564:	ldp	x20, x19, [sp, #64]
  424568:	ldp	x22, x21, [sp, #48]
  42456c:	ldp	x24, x23, [sp, #32]
  424570:	ldr	x25, [sp, #16]
  424574:	ldp	x29, x30, [sp], #80
  424578:	ret
  42457c:	stp	x29, x30, [sp, #-64]!
  424580:	stp	x20, x19, [sp, #48]
  424584:	mov	x19, x0
  424588:	mov	x0, x1
  42458c:	stp	x24, x23, [sp, #16]
  424590:	stp	x22, x21, [sp, #32]
  424594:	mov	x29, sp
  424598:	mov	x20, x1
  42459c:	bl	406750 <strlen@plt>
  4245a0:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4245a4:	add	x8, x8, #0x718
  4245a8:	cmp	x19, #0x0
  4245ac:	csel	x8, x8, x19, eq  // eq = none
  4245b0:	ldr	x19, [x8]
  4245b4:	cbz	x19, 42464c <initialize_file_variables@@Base+0x318>
  4245b8:	mov	x21, x0
  4245bc:	b	4245c8 <initialize_file_variables@@Base+0x294>
  4245c0:	ldr	x19, [x19]
  4245c4:	cbz	x19, 42464c <initialize_file_variables@@Base+0x318>
  4245c8:	ldr	x8, [x19, #24]
  4245cc:	subs	x24, x21, x8
  4245d0:	b.cc	4245c0 <initialize_file_variables@@Base+0x28c>  // b.lo, b.ul, b.last
  4245d4:	ldp	x23, x0, [x19, #8]
  4245d8:	mvn	x8, x0
  4245dc:	add	x22, x23, x8
  4245e0:	cmp	x22, #0x1
  4245e4:	b.lt	4245f8 <initialize_file_variables@@Base+0x2c4>  // b.tstop
  4245e8:	mov	x1, x20
  4245ec:	mov	x2, x22
  4245f0:	bl	4069f0 <strncmp@plt>
  4245f4:	cbnz	w0, 4245c0 <initialize_file_variables@@Base+0x28c>
  4245f8:	add	x8, x20, x22
  4245fc:	add	x10, x24, #0x1
  424600:	ldrb	w9, [x23]
  424604:	ldrb	w10, [x8, x10]
  424608:	cmp	w9, w10
  42460c:	b.ne	4245c0 <initialize_file_variables@@Base+0x28c>  // b.any
  424610:	cbz	w9, 42464c <initialize_file_variables@@Base+0x318>
  424614:	add	x8, x24, x8
  424618:	add	x9, x23, #0x1
  42461c:	add	x8, x8, #0x2
  424620:	cmp	x9, x8
  424624:	b.eq	42464c <initialize_file_variables@@Base+0x318>  // b.none
  424628:	ldrb	w9, [x9]
  42462c:	ldrb	w10, [x8]
  424630:	cmp	w9, w10
  424634:	b.ne	4245c0 <initialize_file_variables@@Base+0x28c>  // b.any
  424638:	cbz	w9, 42464c <initialize_file_variables@@Base+0x318>
  42463c:	add	x0, x23, #0x2
  424640:	add	x1, x8, #0x1
  424644:	bl	406c10 <strcmp@plt>
  424648:	cbnz	w0, 4245c0 <initialize_file_variables@@Base+0x28c>
  42464c:	mov	x0, x19
  424650:	ldp	x20, x19, [sp, #48]
  424654:	ldp	x22, x21, [sp, #32]
  424658:	ldp	x24, x23, [sp, #16]
  42465c:	ldp	x29, x30, [sp], #64
  424660:	ret

0000000000424664 <create_new_variable_set@@Base>:
  424664:	stp	x29, x30, [sp, #-32]!
  424668:	mov	w0, #0x58                  	// #88
  42466c:	str	x19, [sp, #16]
  424670:	mov	x29, sp
  424674:	bl	419e14 <xmalloc@@Base>
  424678:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  42467c:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  424680:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  424684:	add	x2, x2, #0xd10
  424688:	add	x3, x3, #0xd34
  42468c:	add	x4, x4, #0xd3c
  424690:	mov	w1, #0xd                   	// #13
  424694:	mov	x19, x0
  424698:	bl	410560 <hash_init@@Base>
  42469c:	mov	w0, #0x18                  	// #24
  4246a0:	bl	419e14 <xmalloc@@Base>
  4246a4:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  4246a8:	ldr	x8, [x8, #2424]
  4246ac:	str	wzr, [x0, #16]
  4246b0:	stp	x8, x19, [x0]
  4246b4:	ldr	x19, [sp, #16]
  4246b8:	ldp	x29, x30, [sp], #32
  4246bc:	ret

00000000004246c0 <do_variable_definition@@Base>:
  4246c0:	sub	sp, sp, #0xb0
  4246c4:	sub	w8, w4, #0x1
  4246c8:	cmp	w8, #0x5
  4246cc:	stp	x29, x30, [sp, #80]
  4246d0:	stp	x28, x27, [sp, #96]
  4246d4:	stp	x26, x25, [sp, #112]
  4246d8:	stp	x24, x23, [sp, #128]
  4246dc:	stp	x22, x21, [sp, #144]
  4246e0:	stp	x20, x19, [sp, #160]
  4246e4:	add	x29, sp, #0x50
  4246e8:	b.hi	424a38 <do_variable_definition@@Base+0x378>  // b.pmore
  4246ec:	adrp	x9, 42d000 <_IO_stdin_used@@Base+0x5680>
  4246f0:	add	x9, x9, #0x6fb
  4246f4:	adr	x10, 424728 <do_variable_definition@@Base+0x68>
  4246f8:	ldrb	w11, [x9, x8]
  4246fc:	add	x10, x10, x11, lsl #2
  424700:	mov	w27, w5
  424704:	mov	w24, w4
  424708:	mov	w22, w3
  42470c:	mov	x23, x2
  424710:	mov	x21, x1
  424714:	mov	x28, x0
  424718:	mov	x25, xzr
  42471c:	mov	w20, wzr
  424720:	mov	w19, wzr
  424724:	br	x10
  424728:	mov	x0, x21
  42472c:	bl	406750 <strlen@plt>
  424730:	mov	x1, x0
  424734:	cbz	w27, 424850 <do_variable_definition@@Base+0x190>
  424738:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  42473c:	ldr	x8, [x8, #2424]
  424740:	ldr	x0, [x8, #8]
  424744:	str	w1, [sp, #72]
  424748:	add	x1, sp, #0x20
  42474c:	str	x21, [sp, #32]
  424750:	bl	410888 <hash_find_item@@Base>
  424754:	cbz	x0, 42488c <do_variable_definition@@Base+0x1cc>
  424758:	ldr	w8, [x0, #44]
  42475c:	mov	x26, x0
  424760:	and	w20, w8, #0x2
  424764:	ldrb	w8, [x26, #44]
  424768:	str	w27, [sp, #12]
  42476c:	tbnz	w8, #0, 424870 <do_variable_definition@@Base+0x1b0>
  424770:	cmp	w24, #0x6
  424774:	b.ne	4248b0 <do_variable_definition@@Base+0x1f0>  // b.any
  424778:	mov	x25, xzr
  42477c:	mov	x27, x23
  424780:	mov	x0, x27
  424784:	bl	406750 <strlen@plt>
  424788:	cbnz	x0, 4248d0 <do_variable_definition@@Base+0x210>
  42478c:	b	4249b4 <do_variable_definition@@Base+0x2f4>
  424790:	mov	x0, x23
  424794:	mov	x1, xzr
  424798:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  42479c:	mov	x23, x0
  4247a0:	mov	w20, wzr
  4247a4:	mov	w19, wzr
  4247a8:	mov	w24, #0x1                   	// #1
  4247ac:	mov	x25, x0
  4247b0:	b	424958 <do_variable_definition@@Base+0x298>
  4247b4:	mov	x0, x23
  4247b8:	mov	x1, xzr
  4247bc:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  4247c0:	mov	x19, x0
  4247c4:	add	x0, sp, #0x18
  4247c8:	add	x1, sp, #0x10
  4247cc:	bl	40a878 <install_variable_buffer@@Base>
  4247d0:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  4247d4:	ldr	x0, [x20, #4016]
  4247d8:	add	x1, sp, #0x20
  4247dc:	mov	w2, wzr
  4247e0:	stp	x19, xzr, [sp, #32]
  4247e4:	bl	40d5c0 <func_shell_base@@Base>
  4247e8:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4247ec:	add	x1, x1, #0x728
  4247f0:	mov	w2, #0x1                   	// #1
  4247f4:	bl	409d08 <variable_buffer_output@@Base>
  4247f8:	ldr	x0, [x20, #4016]
  4247fc:	bl	406ae0 <strdup@plt>
  424800:	ldp	x1, x8, [sp, #16]
  424804:	mov	x23, x0
  424808:	mov	x0, x8
  42480c:	bl	40a8c4 <restore_variable_buffer@@Base>
  424810:	mov	x0, x19
  424814:	bl	406c60 <free@plt>
  424818:	mov	w20, wzr
  42481c:	mov	w19, wzr
  424820:	mov	w24, #0x2                   	// #2
  424824:	mov	x25, x23
  424828:	b	424958 <do_variable_definition@@Base+0x298>
  42482c:	mov	x0, x21
  424830:	bl	406750 <strlen@plt>
  424834:	mov	x1, x0
  424838:	mov	x0, x21
  42483c:	bl	424110 <lookup_variable@@Base>
  424840:	mov	x25, xzr
  424844:	cbz	x0, 4248a0 <do_variable_definition@@Base+0x1e0>
  424848:	mov	x26, x0
  42484c:	b	4249b4 <do_variable_definition@@Base+0x2f4>
  424850:	mov	x0, x21
  424854:	bl	424110 <lookup_variable@@Base>
  424858:	mov	w20, wzr
  42485c:	cbz	x0, 42494c <do_variable_definition@@Base+0x28c>
  424860:	mov	x26, x0
  424864:	ldrb	w8, [x26, #44]
  424868:	str	w27, [sp, #12]
  42486c:	tbz	w8, #0, 424770 <do_variable_definition@@Base+0xb0>
  424870:	mov	x25, xzr
  424874:	mov	w24, #0x2                   	// #2
  424878:	mov	x27, x23
  42487c:	mov	x0, x27
  424880:	bl	406750 <strlen@plt>
  424884:	cbnz	x0, 4248d0 <do_variable_definition@@Base+0x210>
  424888:	b	4249b4 <do_variable_definition@@Base+0x2f4>
  42488c:	mov	x25, xzr
  424890:	mov	w19, wzr
  424894:	mov	w20, #0x2                   	// #2
  424898:	mov	w24, #0x2                   	// #2
  42489c:	b	424958 <do_variable_definition@@Base+0x298>
  4248a0:	mov	w20, wzr
  4248a4:	mov	w24, #0x2                   	// #2
  4248a8:	mov	w19, #0x4                   	// #4
  4248ac:	b	424958 <do_variable_definition@@Base+0x298>
  4248b0:	mov	x0, x23
  4248b4:	mov	x1, xzr
  4248b8:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  4248bc:	mov	x27, x0
  4248c0:	mov	x25, x0
  4248c4:	mov	x0, x27
  4248c8:	bl	406750 <strlen@plt>
  4248cc:	cbz	x0, 4249b4 <do_variable_definition@@Base+0x2f4>
  4248d0:	mov	x23, x0
  4248d4:	ldr	x0, [x26, #8]
  4248d8:	str	x28, [sp]
  4248dc:	str	w22, [sp, #8]
  4248e0:	bl	406750 <strlen@plt>
  4248e4:	add	x22, x0, #0x1
  4248e8:	add	x28, x23, #0x1
  4248ec:	mov	x19, x0
  4248f0:	add	x0, x28, x22
  4248f4:	bl	419e14 <xmalloc@@Base>
  4248f8:	mov	x23, x0
  4248fc:	cbz	x19, 42491c <do_variable_definition@@Base+0x25c>
  424900:	ldr	x1, [x26, #8]
  424904:	mov	x0, x23
  424908:	mov	x2, x19
  42490c:	bl	406710 <memcpy@plt>
  424910:	mov	w8, #0x20                  	// #32
  424914:	strb	w8, [x23, x19]
  424918:	b	424920 <do_variable_definition@@Base+0x260>
  42491c:	mov	x22, xzr
  424920:	add	x0, x23, x22
  424924:	mov	x1, x27
  424928:	mov	x2, x28
  42492c:	bl	406710 <memcpy@plt>
  424930:	mov	x0, x25
  424934:	bl	406c60 <free@plt>
  424938:	ldp	w22, w27, [sp, #8]
  42493c:	ldr	x28, [sp]
  424940:	mov	w19, wzr
  424944:	mov	x25, x23
  424948:	b	424958 <do_variable_definition@@Base+0x298>
  42494c:	mov	x25, xzr
  424950:	mov	w24, #0x2                   	// #2
  424954:	mov	w19, w20
  424958:	mov	x0, x21
  42495c:	bl	406750 <strlen@plt>
  424960:	cmp	w24, #0x2
  424964:	mov	x1, x0
  424968:	cset	w4, eq  // eq = none
  42496c:	cbz	w27, 424980 <do_variable_definition@@Base+0x2c0>
  424970:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424974:	ldr	x8, [x8, #2424]
  424978:	ldr	x5, [x8, #8]
  42497c:	b	424984 <do_variable_definition@@Base+0x2c4>
  424980:	mov	x5, xzr
  424984:	mov	x0, x21
  424988:	mov	x2, x23
  42498c:	mov	w3, w22
  424990:	mov	x6, x28
  424994:	bl	423d70 <define_variable_in_set@@Base>
  424998:	ldr	w8, [x0, #44]
  42499c:	and	w9, w20, #0x2
  4249a0:	orr	w9, w19, w9
  4249a4:	mov	x26, x0
  4249a8:	and	w8, w8, #0xfffffff9
  4249ac:	orr	w8, w9, w8
  4249b0:	str	w8, [x0, #44]
  4249b4:	mov	x0, x25
  4249b8:	bl	406c60 <free@plt>
  4249bc:	ldrb	w8, [x26, #44]
  4249c0:	tbz	w8, #4, 424a14 <do_variable_definition@@Base+0x354>
  4249c4:	ldr	x8, [x26]
  4249c8:	adrp	x9, 42b000 <_IO_stdin_used@@Base+0x3680>
  4249cc:	add	x9, x9, #0x12c
  4249d0:	cmp	x8, x9
  4249d4:	b.eq	4249f8 <do_variable_definition@@Base+0x338>  // b.none
  4249d8:	ldrb	w9, [x8]
  4249dc:	cmp	w9, #0x2e
  4249e0:	b.ne	424a14 <do_variable_definition@@Base+0x354>  // b.any
  4249e4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  4249e8:	add	x0, x8, #0x1
  4249ec:	add	x1, x1, #0x12d
  4249f0:	bl	406c10 <strcmp@plt>
  4249f4:	cbnz	w0, 424a14 <do_variable_definition@@Base+0x354>
  4249f8:	ldr	x8, [x26, #8]
  4249fc:	mov	w9, #0x9                   	// #9
  424a00:	ldrb	w8, [x8]
  424a04:	cmp	w8, #0x0
  424a08:	csel	w8, w9, w8, eq  // eq = none
  424a0c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424a10:	strb	w8, [x9, #2376]
  424a14:	mov	x0, x26
  424a18:	ldp	x20, x19, [sp, #160]
  424a1c:	ldp	x22, x21, [sp, #144]
  424a20:	ldp	x24, x23, [sp, #128]
  424a24:	ldp	x26, x25, [sp, #112]
  424a28:	ldp	x28, x27, [sp, #96]
  424a2c:	ldp	x29, x30, [sp, #80]
  424a30:	add	sp, sp, #0xb0
  424a34:	ret
  424a38:	bl	406b70 <abort@plt>

0000000000424a3c <push_new_variable_scope@@Base>:
  424a3c:	stp	x29, x30, [sp, #-32]!
  424a40:	mov	w0, #0x58                  	// #88
  424a44:	str	x19, [sp, #16]
  424a48:	mov	x29, sp
  424a4c:	bl	419e14 <xmalloc@@Base>
  424a50:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  424a54:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  424a58:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  424a5c:	add	x2, x2, #0xd10
  424a60:	add	x3, x3, #0xd34
  424a64:	add	x4, x4, #0xd3c
  424a68:	mov	w1, #0xd                   	// #13
  424a6c:	mov	x19, x0
  424a70:	bl	410560 <hash_init@@Base>
  424a74:	mov	w0, #0x18                  	// #24
  424a78:	bl	419e14 <xmalloc@@Base>
  424a7c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424a80:	ldr	x9, [x8, #2424]
  424a84:	str	wzr, [x0, #16]
  424a88:	stp	x9, x19, [x0]
  424a8c:	str	x0, [x8, #2424]
  424a90:	ldr	x10, [x0]
  424a94:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424a98:	add	x9, x9, #0x960
  424a9c:	cmp	x10, x9
  424aa0:	b.eq	424ab0 <push_new_variable_scope@@Base+0x74>  // b.none
  424aa4:	ldr	x19, [sp, #16]
  424aa8:	ldp	x29, x30, [sp], #32
  424aac:	ret
  424ab0:	ldr	q0, [x9]
  424ab4:	str	q0, [x0]
  424ab8:	ldr	x10, [x8, #2424]
  424abc:	mov	x0, x9
  424ac0:	str	x9, [x8, #2424]
  424ac4:	stp	x10, x19, [x9]
  424ac8:	ldr	x19, [sp, #16]
  424acc:	ldp	x29, x30, [sp], #32
  424ad0:	ret

0000000000424ad4 <pop_variable_scope@@Base>:
  424ad4:	stp	x29, x30, [sp, #-32]!
  424ad8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424adc:	ldr	x0, [x9, #2424]
  424ae0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  424ae4:	add	x8, x8, #0x960
  424ae8:	str	x19, [sp, #16]
  424aec:	cmp	x0, x8
  424af0:	mov	x29, sp
  424af4:	b.eq	424b04 <pop_variable_scope@@Base+0x30>  // b.none
  424af8:	ldp	x8, x19, [x0]
  424afc:	str	x8, [x9, #2424]
  424b00:	b	424b18 <pop_variable_scope@@Base+0x44>
  424b04:	ldp	x0, x19, [x8]
  424b08:	ldr	q0, [x0]
  424b0c:	str	q0, [x8]
  424b10:	ldr	w9, [x0, #16]
  424b14:	str	w9, [x8, #16]
  424b18:	bl	406c60 <free@plt>
  424b1c:	adrp	x1, 423000 <install_pattern_rule@@Base+0x2a8>
  424b20:	add	x1, x1, #0xffc
  424b24:	mov	x0, x19
  424b28:	bl	410f0c <hash_map@@Base>
  424b2c:	mov	w1, #0x1                   	// #1
  424b30:	mov	x0, x19
  424b34:	bl	410e88 <hash_free@@Base>
  424b38:	mov	x0, x19
  424b3c:	ldr	x19, [sp, #16]
  424b40:	ldp	x29, x30, [sp], #32
  424b44:	b	406c60 <free@plt>

0000000000424b48 <merge_variable_set_lists@@Base>:
  424b48:	sub	sp, sp, #0x70
  424b4c:	stp	x29, x30, [sp, #16]
  424b50:	stp	x28, x27, [sp, #32]
  424b54:	stp	x26, x25, [sp, #48]
  424b58:	stp	x24, x23, [sp, #64]
  424b5c:	stp	x22, x21, [sp, #80]
  424b60:	stp	x20, x19, [sp, #96]
  424b64:	add	x29, sp, #0x10
  424b68:	cbz	x1, 424cb0 <merge_variable_set_lists@@Base+0x168>
  424b6c:	adrp	x23, 43e000 <memcpy@GLIBC_2.17>
  424b70:	add	x23, x23, #0x960
  424b74:	mov	x20, x1
  424b78:	cmp	x1, x23
  424b7c:	b.eq	424cb0 <merge_variable_set_lists@@Base+0x168>  // b.none
  424b80:	ldr	x8, [x0]
  424b84:	mov	x24, xzr
  424b88:	cbz	x8, 424c7c <merge_variable_set_lists@@Base+0x134>
  424b8c:	cmp	x8, x23
  424b90:	b.eq	424c90 <merge_variable_set_lists@@Base+0x148>  // b.none
  424b94:	mov	x9, x8
  424b98:	cmp	x9, x20
  424b9c:	b.eq	424cb0 <merge_variable_set_lists@@Base+0x168>  // b.none
  424ba0:	ldr	x9, [x9]
  424ba4:	cmp	x9, x23
  424ba8:	b.ne	424b98 <merge_variable_set_lists@@Base+0x50>  // b.any
  424bac:	cmp	x8, x23
  424bb0:	str	x0, [sp, #8]
  424bb4:	b.eq	424cd0 <merge_variable_set_lists@@Base+0x188>  // b.none
  424bb8:	adrp	x26, 43e000 <memcpy@GLIBC_2.17>
  424bbc:	adrp	x27, 441000 <stdio_traced@@Base+0x1a48>
  424bc0:	ldp	x20, x10, [x20]
  424bc4:	mov	x24, x8
  424bc8:	ldr	x9, [x10, #32]
  424bcc:	cmp	x9, #0x1
  424bd0:	b.lt	424c64 <merge_variable_set_lists@@Base+0x11c>  // b.tstop
  424bd4:	ldr	x21, [x24, #8]
  424bd8:	ldr	x28, [x10]
  424bdc:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  424be0:	add	x8, x8, #0x730
  424be4:	cmp	x21, x8
  424be8:	add	x25, x28, x9, lsl #3
  424bec:	cset	w19, eq  // eq = none
  424bf0:	b	424c18 <merge_variable_set_lists@@Base+0xd0>
  424bf4:	mov	x0, x21
  424bf8:	mov	x1, x22
  424bfc:	bl	41099c <hash_insert_at@@Base>
  424c00:	ldr	x8, [x27, #1824]
  424c04:	add	x8, x8, x19
  424c08:	str	x8, [x27, #1824]
  424c0c:	add	x28, x28, #0x8
  424c10:	cmp	x28, x25
  424c14:	b.cs	424c64 <merge_variable_set_lists@@Base+0x11c>  // b.hs, b.nlast
  424c18:	ldr	x22, [x28]
  424c1c:	cbz	x22, 424c0c <merge_variable_set_lists@@Base+0xc4>
  424c20:	ldr	x8, [x26, #2328]
  424c24:	cmp	x8, x22
  424c28:	b.eq	424c0c <merge_variable_set_lists@@Base+0xc4>  // b.none
  424c2c:	mov	x0, x21
  424c30:	mov	x1, x22
  424c34:	bl	410784 <hash_find_slot@@Base>
  424c38:	ldr	x8, [x0]
  424c3c:	mov	x2, x0
  424c40:	cbz	x8, 424bf4 <merge_variable_set_lists@@Base+0xac>
  424c44:	ldr	x9, [x26, #2328]
  424c48:	cmp	x9, x8
  424c4c:	b.eq	424bf4 <merge_variable_set_lists@@Base+0xac>  // b.none
  424c50:	ldr	x0, [x22, #8]
  424c54:	bl	406c60 <free@plt>
  424c58:	mov	x0, x22
  424c5c:	bl	406c60 <free@plt>
  424c60:	b	424c0c <merge_variable_set_lists@@Base+0xc4>
  424c64:	cmp	x20, x23
  424c68:	b.eq	424c94 <merge_variable_set_lists@@Base+0x14c>  // b.none
  424c6c:	ldr	x8, [x24]
  424c70:	cmp	x8, x23
  424c74:	b.ne	424bc0 <merge_variable_set_lists@@Base+0x78>  // b.any
  424c78:	b	424c94 <merge_variable_set_lists@@Base+0x14c>
  424c7c:	str	x0, [sp, #8]
  424c80:	mov	x8, x0
  424c84:	cmp	x20, x23
  424c88:	b.ne	424ca0 <merge_variable_set_lists@@Base+0x158>  // b.any
  424c8c:	b	424cb0 <merge_variable_set_lists@@Base+0x168>
  424c90:	str	x0, [sp, #8]
  424c94:	ldr	x8, [sp, #8]
  424c98:	cmp	x20, x23
  424c9c:	b.eq	424cb0 <merge_variable_set_lists@@Base+0x168>  // b.none
  424ca0:	cbz	x24, 424cac <merge_variable_set_lists@@Base+0x164>
  424ca4:	str	x20, [x24]
  424ca8:	b	424cb0 <merge_variable_set_lists@@Base+0x168>
  424cac:	str	x20, [x8]
  424cb0:	ldp	x20, x19, [sp, #96]
  424cb4:	ldp	x22, x21, [sp, #80]
  424cb8:	ldp	x24, x23, [sp, #64]
  424cbc:	ldp	x26, x25, [sp, #48]
  424cc0:	ldp	x28, x27, [sp, #32]
  424cc4:	ldp	x29, x30, [sp, #16]
  424cc8:	add	sp, sp, #0x70
  424ccc:	ret
  424cd0:	mov	x24, xzr
  424cd4:	ldr	x8, [sp, #8]
  424cd8:	cmp	x20, x23
  424cdc:	b.ne	424ca0 <merge_variable_set_lists@@Base+0x158>  // b.any
  424ce0:	b	424cb0 <merge_variable_set_lists@@Base+0x168>

0000000000424ce4 <define_automatic_variables@@Base>:
  424ce4:	sub	sp, sp, #0x100
  424ce8:	adrp	x8, 442000 <just_print_flag@@Base>
  424cec:	ldr	w2, [x8, #32]
  424cf0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  424cf4:	add	x1, x1, #0x56b
  424cf8:	add	x0, sp, #0x8
  424cfc:	stp	x29, x30, [sp, #208]
  424d00:	str	x21, [sp, #224]
  424d04:	stp	x20, x19, [sp, #240]
  424d08:	add	x29, sp, #0xd0
  424d0c:	bl	406800 <sprintf@plt>
  424d10:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  424d14:	ldr	x8, [x20, #2424]
  424d18:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x3680>
  424d1c:	add	x0, x0, #0x22a
  424d20:	add	x2, sp, #0x8
  424d24:	ldr	x5, [x8, #8]
  424d28:	mov	w1, #0x9                   	// #9
  424d2c:	mov	w3, #0x1                   	// #1
  424d30:	mov	w4, wzr
  424d34:	mov	x6, xzr
  424d38:	bl	423d70 <define_variable_in_set@@Base>
  424d3c:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424d40:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  424d44:	ldr	x8, [x8, #4000]
  424d48:	ldr	x2, [x9, #2432]
  424d4c:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x2680>
  424d50:	add	x3, x3, #0x3a9
  424d54:	cbz	x8, 424d78 <define_automatic_variables@@Base+0x94>
  424d58:	ldrb	w9, [x8]
  424d5c:	adrp	x10, 42c000 <_IO_stdin_used@@Base+0x4680>
  424d60:	add	x10, x10, #0x36e
  424d64:	cmp	w9, #0x0
  424d68:	csel	x9, x3, x10, eq  // eq = none
  424d6c:	csel	x4, x3, x8, eq  // eq = none
  424d70:	mov	x3, x9
  424d74:	b	424d7c <define_automatic_variables@@Base+0x98>
  424d78:	mov	x4, x3
  424d7c:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  424d80:	add	x1, x1, #0x36e
  424d84:	add	x0, sp, #0x8
  424d88:	bl	406800 <sprintf@plt>
  424d8c:	ldr	x8, [x20, #2424]
  424d90:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424d94:	add	x0, x0, #0x72a
  424d98:	add	x2, sp, #0x8
  424d9c:	ldr	x5, [x8, #8]
  424da0:	mov	w1, #0xc                   	// #12
  424da4:	mov	w3, wzr
  424da8:	mov	w4, wzr
  424dac:	mov	x6, xzr
  424db0:	bl	423d70 <define_variable_in_set@@Base>
  424db4:	ldr	x8, [x20, #2424]
  424db8:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  424dbc:	ldr	x2, [x9, #2440]
  424dc0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424dc4:	ldr	x5, [x8, #8]
  424dc8:	add	x0, x0, #0x737
  424dcc:	mov	w1, #0x9                   	// #9
  424dd0:	mov	w3, wzr
  424dd4:	mov	w4, wzr
  424dd8:	mov	x6, xzr
  424ddc:	bl	423d70 <define_variable_in_set@@Base>
  424de0:	ldr	x8, [x20, #2424]
  424de4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  424de8:	ldr	x2, [x21, #2336]
  424dec:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x4680>
  424df0:	ldr	x5, [x8, #8]
  424df4:	add	x0, x0, #0xbbb
  424df8:	mov	w1, #0x5                   	// #5
  424dfc:	mov	w3, wzr
  424e00:	mov	w4, wzr
  424e04:	mov	x6, xzr
  424e08:	bl	423d70 <define_variable_in_set@@Base>
  424e0c:	mov	x19, x0
  424e10:	ldr	x0, [x0, #8]
  424e14:	ldrb	w8, [x0]
  424e18:	cbz	w8, 424e34 <define_automatic_variables@@Base+0x150>
  424e1c:	ldr	w8, [x19, #44]
  424e20:	lsr	w8, w8, #26
  424e24:	orr	w8, w8, #0x2
  424e28:	and	w8, w8, #0x7
  424e2c:	cmp	w8, #0x3
  424e30:	b.ne	424e54 <define_automatic_variables@@Base+0x170>  // b.any
  424e34:	bl	406c60 <free@plt>
  424e38:	ldr	w8, [x19, #44]
  424e3c:	and	w8, w8, #0xe3ffffff
  424e40:	orr	w8, w8, #0x8000000
  424e44:	str	w8, [x19, #44]
  424e48:	ldr	x0, [x21, #2336]
  424e4c:	bl	419e60 <xstrdup@@Base>
  424e50:	str	x0, [x19, #8]
  424e54:	ldr	x8, [x20, #2424]
  424e58:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424e5c:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  424e60:	add	x0, x0, #0x741
  424e64:	ldr	x5, [x8, #8]
  424e68:	add	x2, x2, #0x3a9
  424e6c:	mov	w1, #0x9                   	// #9
  424e70:	mov	w3, wzr
  424e74:	mov	w4, wzr
  424e78:	mov	x6, xzr
  424e7c:	bl	423d70 <define_variable_in_set@@Base>
  424e80:	ldr	w8, [x0, #44]
  424e84:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424e88:	add	x2, x2, #0x74e
  424e8c:	mov	w1, #0x2                   	// #2
  424e90:	and	w8, w8, #0x9fffffff
  424e94:	orr	w8, w8, #0x40000000
  424e98:	str	w8, [x0, #44]
  424e9c:	ldr	x8, [x20, #2424]
  424ea0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ea4:	add	x0, x0, #0x74b
  424ea8:	mov	w3, #0x6                   	// #6
  424eac:	ldr	x5, [x8, #8]
  424eb0:	mov	w4, #0x1                   	// #1
  424eb4:	mov	x6, xzr
  424eb8:	bl	423d70 <define_variable_in_set@@Base>
  424ebc:	ldr	x8, [x20, #2424]
  424ec0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ec4:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ec8:	add	x0, x0, #0x769
  424ecc:	ldr	x5, [x8, #8]
  424ed0:	add	x2, x2, #0x76c
  424ed4:	mov	w1, #0x2                   	// #2
  424ed8:	mov	w3, #0x6                   	// #6
  424edc:	mov	w4, #0x1                   	// #1
  424ee0:	mov	x6, xzr
  424ee4:	bl	423d70 <define_variable_in_set@@Base>
  424ee8:	ldr	x8, [x20, #2424]
  424eec:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ef0:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ef4:	add	x0, x0, #0x787
  424ef8:	ldr	x5, [x8, #8]
  424efc:	add	x2, x2, #0x78a
  424f00:	mov	w1, #0x2                   	// #2
  424f04:	mov	w3, #0x6                   	// #6
  424f08:	mov	w4, #0x1                   	// #1
  424f0c:	mov	x6, xzr
  424f10:	bl	423d70 <define_variable_in_set@@Base>
  424f14:	ldr	x8, [x20, #2424]
  424f18:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f1c:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f20:	add	x0, x0, #0x7a5
  424f24:	ldr	x5, [x8, #8]
  424f28:	add	x2, x2, #0x7a8
  424f2c:	mov	w1, #0x2                   	// #2
  424f30:	mov	w3, #0x6                   	// #6
  424f34:	mov	w4, #0x1                   	// #1
  424f38:	mov	x6, xzr
  424f3c:	bl	423d70 <define_variable_in_set@@Base>
  424f40:	ldr	x8, [x20, #2424]
  424f44:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f48:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f4c:	add	x0, x0, #0x7c3
  424f50:	ldr	x5, [x8, #8]
  424f54:	add	x2, x2, #0x7c6
  424f58:	mov	w1, #0x2                   	// #2
  424f5c:	mov	w3, #0x6                   	// #6
  424f60:	mov	w4, #0x1                   	// #1
  424f64:	mov	x6, xzr
  424f68:	bl	423d70 <define_variable_in_set@@Base>
  424f6c:	ldr	x8, [x20, #2424]
  424f70:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f74:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424f78:	add	x0, x0, #0x7e1
  424f7c:	ldr	x5, [x8, #8]
  424f80:	add	x2, x2, #0x7e4
  424f84:	mov	w1, #0x2                   	// #2
  424f88:	mov	w3, #0x6                   	// #6
  424f8c:	mov	w4, #0x1                   	// #1
  424f90:	mov	x6, xzr
  424f94:	bl	423d70 <define_variable_in_set@@Base>
  424f98:	ldr	x8, [x20, #2424]
  424f9c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424fa0:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424fa4:	add	x0, x0, #0x7ff
  424fa8:	ldr	x5, [x8, #8]
  424fac:	add	x2, x2, #0x802
  424fb0:	mov	w1, #0x2                   	// #2
  424fb4:	mov	w3, #0x6                   	// #6
  424fb8:	mov	w4, #0x1                   	// #1
  424fbc:	mov	x6, xzr
  424fc0:	bl	423d70 <define_variable_in_set@@Base>
  424fc4:	ldr	x8, [x20, #2424]
  424fc8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424fcc:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424fd0:	add	x0, x0, #0x81d
  424fd4:	ldr	x5, [x8, #8]
  424fd8:	add	x2, x2, #0x820
  424fdc:	mov	w1, #0x2                   	// #2
  424fe0:	mov	w3, #0x6                   	// #6
  424fe4:	mov	w4, #0x1                   	// #1
  424fe8:	mov	x6, xzr
  424fec:	bl	423d70 <define_variable_in_set@@Base>
  424ff0:	ldr	x8, [x20, #2424]
  424ff4:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ff8:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  424ffc:	add	x0, x0, #0x82d
  425000:	ldr	x5, [x8, #8]
  425004:	add	x2, x2, #0x830
  425008:	mov	w1, #0x2                   	// #2
  42500c:	mov	w3, #0x6                   	// #6
  425010:	mov	w4, #0x1                   	// #1
  425014:	mov	x6, xzr
  425018:	bl	423d70 <define_variable_in_set@@Base>
  42501c:	ldr	x8, [x20, #2424]
  425020:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425024:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  425028:	add	x0, x0, #0x83d
  42502c:	ldr	x5, [x8, #8]
  425030:	add	x2, x2, #0x840
  425034:	mov	w1, #0x2                   	// #2
  425038:	mov	w3, #0x6                   	// #6
  42503c:	mov	w4, #0x1                   	// #1
  425040:	mov	x6, xzr
  425044:	bl	423d70 <define_variable_in_set@@Base>
  425048:	ldr	x8, [x20, #2424]
  42504c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425050:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  425054:	add	x0, x0, #0x84d
  425058:	ldr	x5, [x8, #8]
  42505c:	add	x2, x2, #0x850
  425060:	mov	w1, #0x2                   	// #2
  425064:	mov	w3, #0x6                   	// #6
  425068:	mov	w4, #0x1                   	// #1
  42506c:	mov	x6, xzr
  425070:	bl	423d70 <define_variable_in_set@@Base>
  425074:	ldr	x8, [x20, #2424]
  425078:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  42507c:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  425080:	add	x0, x0, #0x85d
  425084:	ldr	x5, [x8, #8]
  425088:	add	x2, x2, #0x860
  42508c:	mov	w1, #0x2                   	// #2
  425090:	mov	w3, #0x6                   	// #6
  425094:	mov	w4, #0x1                   	// #1
  425098:	mov	x6, xzr
  42509c:	bl	423d70 <define_variable_in_set@@Base>
  4250a0:	ldr	x8, [x20, #2424]
  4250a4:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4250a8:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  4250ac:	add	x0, x0, #0x86d
  4250b0:	ldr	x5, [x8, #8]
  4250b4:	add	x2, x2, #0x870
  4250b8:	mov	w1, #0x2                   	// #2
  4250bc:	mov	w3, #0x6                   	// #6
  4250c0:	mov	w4, #0x1                   	// #1
  4250c4:	mov	x6, xzr
  4250c8:	bl	423d70 <define_variable_in_set@@Base>
  4250cc:	ldr	x8, [x20, #2424]
  4250d0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4250d4:	adrp	x2, 42d000 <_IO_stdin_used@@Base+0x5680>
  4250d8:	add	x0, x0, #0x87d
  4250dc:	ldr	x5, [x8, #8]
  4250e0:	add	x2, x2, #0x880
  4250e4:	mov	w1, #0x2                   	// #2
  4250e8:	mov	w3, #0x6                   	// #6
  4250ec:	mov	w4, #0x1                   	// #1
  4250f0:	mov	x6, xzr
  4250f4:	bl	423d70 <define_variable_in_set@@Base>
  4250f8:	ldp	x20, x19, [sp, #240]
  4250fc:	ldr	x21, [sp, #224]
  425100:	ldp	x29, x30, [sp, #208]
  425104:	add	sp, sp, #0x100
  425108:	ret

000000000042510c <target_environment@@Base>:
  42510c:	sub	sp, sp, #0xf0
  425110:	adrp	x9, 43e000 <memcpy@GLIBC_2.17>
  425114:	add	x8, x0, #0x50
  425118:	add	x9, x9, #0x978
  42511c:	cmp	x0, #0x0
  425120:	stp	x29, x30, [sp, #144]
  425124:	stp	x28, x27, [sp, #160]
  425128:	stp	x26, x25, [sp, #176]
  42512c:	stp	x24, x23, [sp, #192]
  425130:	stp	x22, x21, [sp, #208]
  425134:	stp	x20, x19, [sp, #224]
  425138:	csel	x8, x9, x8, eq  // eq = none
  42513c:	ldr	x25, [x8]
  425140:	adrp	x2, 423000 <install_pattern_rule@@Base+0x2a8>
  425144:	adrp	x3, 423000 <install_pattern_rule@@Base+0x2a8>
  425148:	adrp	x4, 423000 <install_pattern_rule@@Base+0x2a8>
  42514c:	str	x0, [sp]
  425150:	add	x2, x2, #0xd10
  425154:	add	x3, x3, #0xd34
  425158:	add	x4, x4, #0xd3c
  42515c:	add	x0, sp, #0x8
  425160:	mov	w1, #0x20b                 	// #523
  425164:	add	x29, sp, #0x90
  425168:	bl	410560 <hash_init@@Base>
  42516c:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  425170:	cbz	x25, 425304 <target_environment@@Base+0x1f8>
  425174:	mov	w26, #0x8                   	// #8
  425178:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  42517c:	adrp	x27, 42c000 <_IO_stdin_used@@Base+0x4680>
  425180:	adrp	x28, 441000 <stdio_traced@@Base+0x1a48>
  425184:	movk	w26, #0x6000, lsl #16
  425188:	add	x20, x20, #0x730
  42518c:	add	x27, x27, #0xbbb
  425190:	add	x28, x28, #0xfc8
  425194:	b	4251a0 <target_environment@@Base+0x94>
  425198:	ldr	x25, [x25]
  42519c:	cbz	x25, 425304 <target_environment@@Base+0x1f8>
  4251a0:	ldr	x9, [x25, #8]
  4251a4:	ldr	x8, [x9, #32]
  4251a8:	cmp	x8, #0x1
  4251ac:	b.lt	425198 <target_environment@@Base+0x8c>  // b.tstop
  4251b0:	ldr	x19, [x9]
  4251b4:	add	x21, x19, x8, lsl #3
  4251b8:	b	4251d4 <target_environment@@Base+0xc8>
  4251bc:	add	x0, sp, #0x8
  4251c0:	mov	x1, x22
  4251c4:	bl	41099c <hash_insert_at@@Base>
  4251c8:	add	x19, x19, #0x8
  4251cc:	cmp	x19, x21
  4251d0:	b.cs	425198 <target_environment@@Base+0x8c>  // b.hs, b.nlast
  4251d4:	ldr	x22, [x19]
  4251d8:	cbz	x22, 4251c8 <target_environment@@Base+0xbc>
  4251dc:	ldr	x8, [x24, #2328]
  4251e0:	cmp	x8, x22
  4251e4:	b.eq	4251c8 <target_environment@@Base+0xbc>  // b.none
  4251e8:	ldr	w8, [x22, #44]
  4251ec:	bics	wzr, w26, w8
  4251f0:	b.ne	42522c <target_environment@@Base+0x120>  // b.any
  4251f4:	ldr	x23, [x22]
  4251f8:	mov	x0, x23
  4251fc:	bl	406750 <strlen@plt>
  425200:	stur	w0, [x29, #-8]
  425204:	sub	x1, x29, #0x30
  425208:	mov	x0, x20
  42520c:	stur	x23, [x29, #-48]
  425210:	bl	410888 <hash_find_item@@Base>
  425214:	cbz	x0, 425294 <target_environment@@Base+0x188>
  425218:	ldr	w9, [x0, #44]
  42521c:	ldr	w8, [x22, #44]
  425220:	lsr	w9, w9, #29
  425224:	bfi	w8, w9, #29, #2
  425228:	str	w8, [x22, #44]
  42522c:	ubfx	w9, w8, #29, #2
  425230:	cmp	w9, #0x1
  425234:	b.eq	4252a4 <target_environment@@Base+0x198>  // b.none
  425238:	cmp	w9, #0x2
  42523c:	b.eq	425288 <target_environment@@Base+0x17c>  // b.none
  425240:	cmp	w9, #0x3
  425244:	b.ne	4252dc <target_environment@@Base+0x1d0>  // b.any
  425248:	ubfx	w9, w8, #26, #3
  42524c:	cbz	w9, 4251c8 <target_environment@@Base+0xbc>
  425250:	cmp	w9, #0x6
  425254:	b.eq	4251c8 <target_environment@@Base+0xbc>  // b.none
  425258:	tbz	w8, #5, 4251c8 <target_environment@@Base+0xbc>
  42525c:	adrp	x8, 442000 <just_print_flag@@Base>
  425260:	ldr	w8, [x8, #260]
  425264:	cbnz	w8, 4252dc <target_environment@@Base+0x1d0>
  425268:	cmp	w9, #0x4
  42526c:	b.hi	4251c8 <target_environment@@Base+0xbc>  // b.pmore
  425270:	mov	w8, #0x1                   	// #1
  425274:	lsl	w8, w8, w9
  425278:	mov	w9, #0x1a                  	// #26
  42527c:	tst	w8, w9
  425280:	b.ne	4252dc <target_environment@@Base+0x1d0>  // b.any
  425284:	b	4251c8 <target_environment@@Base+0xbc>
  425288:	tst	w8, #0x1c000000
  42528c:	b.ne	4252dc <target_environment@@Base+0x1d0>  // b.any
  425290:	b	4251c8 <target_environment@@Base+0xbc>
  425294:	ldr	w8, [x22, #44]
  425298:	ubfx	w9, w8, #29, #2
  42529c:	cmp	w9, #0x1
  4252a0:	b.ne	425238 <target_environment@@Base+0x12c>  // b.any
  4252a4:	ldr	x8, [x22]
  4252a8:	cmp	x8, x27
  4252ac:	b.eq	4252d0 <target_environment@@Base+0x1c4>  // b.none
  4252b0:	ldrb	w9, [x8]
  4252b4:	cmp	w9, #0x53
  4252b8:	b.ne	4251c8 <target_environment@@Base+0xbc>  // b.any
  4252bc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4252c0:	add	x0, x8, #0x1
  4252c4:	add	x1, x1, #0xbbc
  4252c8:	bl	406c10 <strcmp@plt>
  4252cc:	cbnz	w0, 4251c8 <target_environment@@Base+0xbc>
  4252d0:	ldr	x8, [x28, #8]
  4252d4:	mov	x22, x28
  4252d8:	cbz	x8, 4251c8 <target_environment@@Base+0xbc>
  4252dc:	add	x0, sp, #0x8
  4252e0:	mov	x1, x22
  4252e4:	bl	410784 <hash_find_slot@@Base>
  4252e8:	ldr	x8, [x0]
  4252ec:	mov	x2, x0
  4252f0:	cbz	x8, 4251bc <target_environment@@Base+0xb0>
  4252f4:	ldr	x9, [x24, #2328]
  4252f8:	cmp	x9, x8
  4252fc:	b.ne	4251c8 <target_environment@@Base+0xbc>  // b.any
  425300:	b	4251bc <target_environment@@Base+0xb0>
  425304:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x3680>
  425308:	add	x8, x8, #0x22a
  42530c:	mov	w9, #0x9                   	// #9
  425310:	add	x0, sp, #0x8
  425314:	sub	x1, x29, #0x30
  425318:	stur	x8, [x29, #-48]
  42531c:	stur	w9, [x29, #-8]
  425320:	bl	410c54 <hash_delete@@Base>
  425324:	ldr	x8, [sp, #56]
  425328:	lsl	x8, x8, #3
  42532c:	add	x0, x8, #0x10
  425330:	bl	419e14 <xmalloc@@Base>
  425334:	ldr	x8, [sp, #40]
  425338:	mov	x20, x0
  42533c:	cmp	x8, #0x1
  425340:	b.lt	4253ec <target_environment@@Base+0x2e0>  // b.tstop
  425344:	ldp	x26, x23, [sp]
  425348:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x3680>
  42534c:	add	x21, x21, #0x4ea
  425350:	mov	x19, x20
  425354:	add	x25, x23, x8, lsl #3
  425358:	b	425384 <target_environment@@Base+0x278>
  42535c:	ldp	x1, x3, [x22]
  425360:	mov	w0, #0x3                   	// #3
  425364:	mov	x2, x21
  425368:	bl	419c18 <concat@@Base>
  42536c:	bl	419e60 <xstrdup@@Base>
  425370:	str	x0, [x19]
  425374:	add	x19, x19, #0x8
  425378:	add	x23, x23, #0x8
  42537c:	cmp	x23, x25
  425380:	b.cs	4253f0 <target_environment@@Base+0x2e4>  // b.hs, b.nlast
  425384:	ldr	x22, [x23]
  425388:	cbz	x22, 425378 <target_environment@@Base+0x26c>
  42538c:	ldr	x8, [x24, #2328]
  425390:	cmp	x8, x22
  425394:	b.eq	425378 <target_environment@@Base+0x26c>  // b.none
  425398:	ldr	w8, [x22, #44]
  42539c:	tbz	w8, #0, 42535c <target_environment@@Base+0x250>
  4253a0:	lsr	w8, w8, #26
  4253a4:	orr	w8, w8, #0x2
  4253a8:	and	w8, w8, #0x7
  4253ac:	cmp	w8, #0x3
  4253b0:	b.eq	42535c <target_environment@@Base+0x250>  // b.none
  4253b4:	mov	x0, x22
  4253b8:	mov	x1, x26
  4253bc:	bl	409d94 <recursively_expand_for_file@@Base>
  4253c0:	ldr	x1, [x22]
  4253c4:	mov	x22, x0
  4253c8:	mov	w0, #0x3                   	// #3
  4253cc:	mov	x2, x21
  4253d0:	mov	x3, x22
  4253d4:	bl	419c18 <concat@@Base>
  4253d8:	bl	419e60 <xstrdup@@Base>
  4253dc:	str	x0, [x19]
  4253e0:	mov	x0, x22
  4253e4:	bl	406c60 <free@plt>
  4253e8:	b	425374 <target_environment@@Base+0x268>
  4253ec:	mov	x19, x20
  4253f0:	mov	w0, #0x64                  	// #100
  4253f4:	bl	419e14 <xmalloc@@Base>
  4253f8:	str	x0, [x19]
  4253fc:	adrp	x8, 442000 <just_print_flag@@Base>
  425400:	ldr	w8, [x8, #32]
  425404:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  425408:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x3680>
  42540c:	add	x1, x1, #0x4ec
  425410:	add	w3, w8, #0x1
  425414:	add	x2, x2, #0x22a
  425418:	bl	406800 <sprintf@plt>
  42541c:	add	x0, sp, #0x8
  425420:	mov	w1, wzr
  425424:	str	xzr, [x19, #8]
  425428:	bl	410e88 <hash_free@@Base>
  42542c:	mov	x0, x20
  425430:	ldp	x20, x19, [sp, #224]
  425434:	ldp	x22, x21, [sp, #208]
  425438:	ldp	x24, x23, [sp, #192]
  42543c:	ldp	x26, x25, [sp, #176]
  425440:	ldp	x28, x27, [sp, #160]
  425444:	ldp	x29, x30, [sp, #144]
  425448:	add	sp, sp, #0xf0
  42544c:	ret

0000000000425450 <parse_variable_definition@@Base>:
  425450:	stp	x29, x30, [sp, #-32]!
  425454:	adrp	x10, 43e000 <memcpy@GLIBC_2.17>
  425458:	stp	x20, x19, [sp, #16]
  42545c:	mov	x19, x1
  425460:	sub	x8, x0, #0x1
  425464:	add	x10, x10, #0xcf0
  425468:	mov	x29, sp
  42546c:	ldrb	w9, [x8, #1]!
  425470:	ldrh	w9, [x10, x9, lsl #1]
  425474:	tst	w9, #0x6
  425478:	b.ne	42546c <parse_variable_definition@@Base+0x1c>  // b.any
  42547c:	str	x8, [x19]
  425480:	str	wzr, [x19, #40]
  425484:	ldrb	w13, [x8]
  425488:	mov	w11, #0x9                   	// #9
  42548c:	ldrh	w15, [x10, x13, lsl #1]
  425490:	tst	w15, w11
  425494:	b.eq	4254ac <parse_variable_definition@@Base+0x5c>  // b.none
  425498:	mov	x20, xzr
  42549c:	mov	x0, x20
  4254a0:	ldp	x20, x19, [sp, #16]
  4254a4:	ldp	x29, x30, [sp], #32
  4254a8:	ret
  4254ac:	adrp	x12, 42d000 <_IO_stdin_used@@Base+0x5680>
  4254b0:	mov	x9, xzr
  4254b4:	add	x12, x12, #0x701
  4254b8:	mov	x14, x8
  4254bc:	b	4254e0 <parse_variable_definition@@Base+0x90>
  4254c0:	cmp	w13, #0x3a
  4254c4:	b.eq	4255f0 <parse_variable_definition@@Base+0x1a0>  // b.none
  4254c8:	cbnz	w15, 425498 <parse_variable_definition@@Base+0x48>
  4254cc:	ldrb	w13, [x20]
  4254d0:	mov	x14, x20
  4254d4:	ldrh	w15, [x10, x13, lsl #1]
  4254d8:	tst	w15, w11
  4254dc:	b.ne	425498 <parse_variable_definition@@Base+0x48>  // b.any
  4254e0:	and	w16, w13, #0xff
  4254e4:	cmp	w16, #0x24
  4254e8:	b.ne	42550c <parse_variable_definition@@Base+0xbc>  // b.any
  4254ec:	ldrb	w13, [x14, #1]
  4254f0:	add	x20, x14, #0x2
  4254f4:	cmp	w13, #0x28
  4254f8:	b.eq	42557c <parse_variable_definition@@Base+0x12c>  // b.none
  4254fc:	cmp	w13, #0x7b
  425500:	b.eq	42558c <parse_variable_definition@@Base+0x13c>  // b.none
  425504:	cbnz	w13, 4254cc <parse_variable_definition@@Base+0x7c>
  425508:	b	425498 <parse_variable_definition@@Base+0x48>
  42550c:	add	x20, x14, #0x1
  425510:	tbnz	w15, #1, 425528 <parse_variable_definition@@Base+0xd8>
  425514:	mov	w15, wzr
  425518:	and	w14, w13, #0xff
  42551c:	cmp	w14, #0x3d
  425520:	b.ne	425550 <parse_variable_definition@@Base+0x100>  // b.any
  425524:	b	4255d0 <parse_variable_definition@@Base+0x180>
  425528:	ldrb	w13, [x20], #1
  42552c:	ldrh	w9, [x10, x13, lsl #1]
  425530:	tst	w9, #0x6
  425534:	b.ne	425528 <parse_variable_definition@@Base+0xd8>  // b.any
  425538:	cbz	w13, 425498 <parse_variable_definition@@Base+0x48>
  42553c:	mov	w15, #0x1                   	// #1
  425540:	mov	x9, x14
  425544:	and	w14, w13, #0xff
  425548:	cmp	w14, #0x3d
  42554c:	b.eq	4255d0 <parse_variable_definition@@Base+0x180>  // b.none
  425550:	ldrb	w14, [x20]
  425554:	and	w13, w13, #0xff
  425558:	cmp	w14, #0x3d
  42555c:	b.ne	4254c0 <parse_variable_definition@@Base+0x70>  // b.any
  425560:	sub	w13, w13, #0x21
  425564:	cmp	w13, #0x1e
  425568:	b.hi	4254c8 <parse_variable_definition@@Base+0x78>  // b.pmore
  42556c:	adr	x14, 4254c8 <parse_variable_definition@@Base+0x78>
  425570:	ldrb	w16, [x12, x13]
  425574:	add	x14, x14, x16, lsl #2
  425578:	br	x14
  42557c:	mov	w15, #0x29                  	// #41
  425580:	ldrb	w16, [x20]
  425584:	cbnz	w16, 425598 <parse_variable_definition@@Base+0x148>
  425588:	b	4254cc <parse_variable_definition@@Base+0x7c>
  42558c:	mov	w15, #0x7d                  	// #125
  425590:	ldrb	w16, [x20]
  425594:	cbz	w16, 4254cc <parse_variable_definition@@Base+0x7c>
  425598:	add	x20, x14, #0x3
  42559c:	mov	w14, #0x1                   	// #1
  4255a0:	b	4255b4 <parse_variable_definition@@Base+0x164>
  4255a4:	cmp	w13, w16, uxtb
  4255a8:	ldrb	w16, [x20], #1
  4255ac:	cinc	w14, w14, eq  // eq = none
  4255b0:	cbz	w16, 4255c8 <parse_variable_definition@@Base+0x178>
  4255b4:	cmp	w15, w16, uxtb
  4255b8:	b.ne	4255a4 <parse_variable_definition@@Base+0x154>  // b.any
  4255bc:	subs	w14, w14, #0x1
  4255c0:	b.ne	4255a4 <parse_variable_definition@@Base+0x154>  // b.any
  4255c4:	b	4254cc <parse_variable_definition@@Base+0x7c>
  4255c8:	sub	x20, x20, #0x1
  4255cc:	b	4254cc <parse_variable_definition@@Base+0x7c>
  4255d0:	ldr	w10, [x19, #44]
  4255d4:	sub	x11, x20, #0x1
  4255d8:	cmp	x9, #0x0
  4255dc:	csel	x9, x11, x9, eq  // eq = none
  4255e0:	and	w10, w10, #0xfc7fffff
  4255e4:	orr	w10, w10, #0x1000000
  4255e8:	str	w10, [x19, #44]
  4255ec:	b	425664 <parse_variable_definition@@Base+0x214>
  4255f0:	cmp	w14, #0x3a
  4255f4:	b.ne	425498 <parse_variable_definition@@Base+0x48>  // b.any
  4255f8:	ldrb	w10, [x20, #1]
  4255fc:	cmp	w10, #0x3d
  425600:	b.ne	425498 <parse_variable_definition@@Base+0x48>  // b.any
  425604:	ldr	w10, [x19, #44]
  425608:	sub	x11, x20, #0x1
  42560c:	cmp	x9, #0x0
  425610:	csel	x9, x11, x9, eq  // eq = none
  425614:	and	w10, w10, #0xfc7fffff
  425618:	orr	w10, w10, #0x800000
  42561c:	add	x20, x20, #0x2
  425620:	str	w10, [x19, #44]
  425624:	b	425664 <parse_variable_definition@@Base+0x214>
  425628:	mov	w10, #0x2800000             	// #41943040
  42562c:	b	425644 <parse_variable_definition@@Base+0x1f4>
  425630:	mov	w10, #0x1800000             	// #25165824
  425634:	b	425644 <parse_variable_definition@@Base+0x1f4>
  425638:	mov	w10, #0x800000              	// #8388608
  42563c:	b	425644 <parse_variable_definition@@Base+0x1f4>
  425640:	mov	w10, #0x2000000             	// #33554432
  425644:	ldr	w11, [x19, #44]
  425648:	sub	x12, x20, #0x1
  42564c:	cmp	x9, #0x0
  425650:	csel	x9, x12, x9, eq  // eq = none
  425654:	and	w11, w11, #0xfc7fffff
  425658:	orr	w10, w11, w10
  42565c:	str	w10, [x19, #44]
  425660:	add	x20, x20, #0x1
  425664:	sub	w8, w9, w8
  425668:	mov	x0, x20
  42566c:	str	w8, [x19, #40]
  425670:	bl	419edc <next_token@@Base>
  425674:	str	x0, [x19, #8]
  425678:	mov	x0, x20
  42567c:	ldp	x20, x19, [sp, #16]
  425680:	ldp	x29, x30, [sp], #32
  425684:	ret

0000000000425688 <assign_variable_definition@@Base>:
  425688:	stp	x29, x30, [sp, #-48]!
  42568c:	stp	x20, x19, [sp, #32]
  425690:	mov	x19, x0
  425694:	mov	x0, x1
  425698:	mov	x1, x19
  42569c:	str	x21, [sp, #16]
  4256a0:	mov	x29, sp
  4256a4:	bl	425450 <parse_variable_definition@@Base>
  4256a8:	cbz	x0, 42571c <assign_variable_definition@@Base+0x94>
  4256ac:	ldr	w20, [x19, #40]
  4256b0:	mov	x9, sp
  4256b4:	add	w8, w20, #0x1
  4256b8:	add	x8, x8, #0xf
  4256bc:	and	x8, x8, #0x1fffffff0
  4256c0:	sub	x21, x9, x8
  4256c4:	mov	sp, x21
  4256c8:	ldr	x1, [x19]
  4256cc:	mov	x0, x21
  4256d0:	mov	x2, x20
  4256d4:	bl	406710 <memcpy@plt>
  4256d8:	mov	x0, x21
  4256dc:	mov	x1, xzr
  4256e0:	strb	wzr, [x21, x20]
  4256e4:	bl	409f88 <allocated_variable_expand_for_file@@Base>
  4256e8:	str	x0, [x19]
  4256ec:	ldrb	w8, [x0]
  4256f0:	cbnz	w8, 425720 <assign_variable_definition@@Base+0x98>
  4256f4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  4256f8:	add	x1, x1, #0xd0f
  4256fc:	mov	w2, #0x5                   	// #5
  425700:	mov	x0, xzr
  425704:	add	x19, x19, #0x10
  425708:	bl	406dc0 <dcgettext@plt>
  42570c:	mov	x2, x0
  425710:	mov	x0, x19
  425714:	mov	x1, xzr
  425718:	bl	41aff0 <fatal@@Base>
  42571c:	mov	x19, xzr
  425720:	mov	x0, x19
  425724:	mov	sp, x29
  425728:	ldp	x20, x19, [sp, #32]
  42572c:	ldr	x21, [sp, #16]
  425730:	ldp	x29, x30, [sp], #48
  425734:	ret

0000000000425738 <try_variable_definition@@Base>:
  425738:	sub	sp, sp, #0x60
  42573c:	str	x21, [sp, #64]
  425740:	stp	x20, x19, [sp, #80]
  425744:	mov	w19, w3
  425748:	mov	w20, w2
  42574c:	mov	x21, x0
  425750:	stp	x29, x30, [sp, #48]
  425754:	add	x29, sp, #0x30
  425758:	cbz	x0, 4257b0 <try_variable_definition@@Base+0x78>
  42575c:	ldr	x8, [x21, #16]
  425760:	ldr	q0, [x21]
  425764:	mov	x9, sp
  425768:	add	x9, x9, #0x10
  42576c:	str	x8, [x9, #16]
  425770:	str	q0, [x9]
  425774:	mov	x0, sp
  425778:	bl	425688 <assign_variable_definition@@Base>
  42577c:	cbz	x0, 4257c0 <try_variable_definition@@Base+0x88>
  425780:	ldr	w8, [sp, #44]
  425784:	ldp	x1, x2, [sp]
  425788:	mov	x0, x21
  42578c:	mov	w3, w20
  425790:	ubfx	w4, w8, #23, #3
  425794:	mov	w5, w19
  425798:	bl	4246c0 <do_variable_definition@@Base>
  42579c:	ldr	x8, [sp]
  4257a0:	mov	x19, x0
  4257a4:	mov	x0, x8
  4257a8:	bl	406c60 <free@plt>
  4257ac:	b	4257c4 <try_variable_definition@@Base+0x8c>
  4257b0:	str	xzr, [sp, #16]
  4257b4:	mov	x0, sp
  4257b8:	bl	425688 <assign_variable_definition@@Base>
  4257bc:	cbnz	x0, 425780 <try_variable_definition@@Base+0x48>
  4257c0:	mov	x19, xzr
  4257c4:	mov	x0, x19
  4257c8:	ldp	x20, x19, [sp, #80]
  4257cc:	ldr	x21, [sp, #64]
  4257d0:	ldp	x29, x30, [sp, #48]
  4257d4:	add	sp, sp, #0x60
  4257d8:	ret

00000000004257dc <print_variable_data_base@@Base>:
  4257dc:	stp	x29, x30, [sp, #-48]!
  4257e0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4257e4:	add	x1, x1, #0x88d
  4257e8:	mov	w2, #0x5                   	// #5
  4257ec:	mov	x0, xzr
  4257f0:	stp	x22, x21, [sp, #16]
  4257f4:	stp	x20, x19, [sp, #32]
  4257f8:	mov	x29, sp
  4257fc:	bl	406dc0 <dcgettext@plt>
  425800:	bl	406ba0 <puts@plt>
  425804:	adrp	x20, 441000 <stdio_traced@@Base+0x1a48>
  425808:	add	x20, x20, #0x718
  42580c:	adrp	x1, 425000 <define_automatic_variables@@Base+0x31c>
  425810:	add	x19, x20, #0x18
  425814:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  425818:	add	x1, x1, #0x924
  42581c:	add	x2, x2, #0x3a9
  425820:	mov	x0, x19
  425824:	bl	410f74 <hash_map_arg@@Base>
  425828:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42582c:	add	x1, x1, #0x915
  425830:	mov	w2, #0x5                   	// #5
  425834:	mov	x0, xzr
  425838:	bl	406dc0 <dcgettext@plt>
  42583c:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  425840:	ldr	x1, [x21, #2504]
  425844:	bl	406760 <fputs@plt>
  425848:	ldr	x3, [x21, #2504]
  42584c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425850:	add	x0, x0, #0xaa4
  425854:	mov	w1, #0x2                   	// #2
  425858:	mov	w2, #0x1                   	// #1
  42585c:	bl	406cb0 <fwrite@plt>
  425860:	ldr	x1, [x21, #2504]
  425864:	mov	x0, x19
  425868:	bl	410fec <hash_print_stats@@Base>
  42586c:	ldr	x1, [x21, #2504]
  425870:	mov	w0, #0xa                   	// #10
  425874:	bl	406810 <putc@plt>
  425878:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42587c:	add	x1, x1, #0x89b
  425880:	mov	w2, #0x5                   	// #5
  425884:	mov	x0, xzr
  425888:	bl	406dc0 <dcgettext@plt>
  42588c:	bl	406ba0 <puts@plt>
  425890:	ldr	x22, [x20]
  425894:	cbz	x22, 425900 <print_variable_data_base@@Base+0x124>
  425898:	adrp	x19, 42d000 <_IO_stdin_used@@Base+0x5680>
  42589c:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  4258a0:	mov	w21, wzr
  4258a4:	add	x19, x19, #0x8bf
  4258a8:	add	x20, x20, #0xaa4
  4258ac:	ldr	x1, [x22, #16]
  4258b0:	mov	x0, x19
  4258b4:	bl	406e60 <printf@plt>
  4258b8:	add	x0, x22, #0x20
  4258bc:	mov	x1, x20
  4258c0:	bl	425924 <print_variable_data_base@@Base+0x148>
  4258c4:	ldr	x22, [x22]
  4258c8:	sub	w21, w21, #0x1
  4258cc:	cbnz	x22, 4258ac <print_variable_data_base@@Base+0xd0>
  4258d0:	cbz	w21, 425900 <print_variable_data_base@@Base+0x124>
  4258d4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4258d8:	add	x1, x1, #0x8ee
  4258dc:	mov	w2, #0x5                   	// #5
  4258e0:	mov	x0, xzr
  4258e4:	neg	w19, w21
  4258e8:	bl	406dc0 <dcgettext@plt>
  4258ec:	mov	w1, w19
  4258f0:	ldp	x20, x19, [sp, #32]
  4258f4:	ldp	x22, x21, [sp, #16]
  4258f8:	ldp	x29, x30, [sp], #48
  4258fc:	b	406e60 <printf@plt>
  425900:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  425904:	add	x1, x1, #0x8c6
  425908:	mov	w2, #0x5                   	// #5
  42590c:	mov	x0, xzr
  425910:	bl	406dc0 <dcgettext@plt>
  425914:	ldp	x20, x19, [sp, #32]
  425918:	ldp	x22, x21, [sp, #16]
  42591c:	ldp	x29, x30, [sp], #48
  425920:	b	406ba0 <puts@plt>
  425924:	stp	x29, x30, [sp, #-48]!
  425928:	stp	x22, x21, [sp, #16]
  42592c:	stp	x20, x19, [sp, #32]
  425930:	ldr	w8, [x0, #44]
  425934:	adrp	x9, 42d000 <_IO_stdin_used@@Base+0x5680>
  425938:	add	x9, x9, #0x720
  42593c:	mov	x20, x1
  425940:	ubfx	w8, w8, #26, #3
  425944:	adr	x10, 425964 <print_variable_data_base@@Base+0x188>
  425948:	ldrb	w11, [x9, x8]
  42594c:	add	x10, x10, x11, lsl #2
  425950:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  425954:	mov	x29, sp
  425958:	mov	x19, x0
  42595c:	add	x1, x1, #0xc80
  425960:	br	x10
  425964:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  425968:	add	x1, x1, #0xc4a
  42596c:	b	4259a8 <print_variable_data_base@@Base+0x1cc>
  425970:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  425974:	add	x1, x1, #0x937
  425978:	b	4259a8 <print_variable_data_base@@Base+0x1cc>
  42597c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  425980:	add	x1, x1, #0xc52
  425984:	b	4259a8 <print_variable_data_base@@Base+0x1cc>
  425988:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x4680>
  42598c:	add	x1, x1, #0x87e
  425990:	b	4259a8 <print_variable_data_base@@Base+0x1cc>
  425994:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  425998:	add	x1, x1, #0xc73
  42599c:	b	4259a8 <print_variable_data_base@@Base+0x1cc>
  4259a0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4259a4:	add	x1, x1, #0x94c
  4259a8:	mov	w2, #0x5                   	// #5
  4259ac:	mov	x0, xzr
  4259b0:	bl	406dc0 <dcgettext@plt>
  4259b4:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  4259b8:	ldr	x3, [x22, #2504]
  4259bc:	mov	x21, x0
  4259c0:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4259c4:	add	x0, x0, #0xaa4
  4259c8:	mov	w1, #0x2                   	// #2
  4259cc:	mov	w2, #0x1                   	// #1
  4259d0:	bl	406cb0 <fwrite@plt>
  4259d4:	ldr	x1, [x22, #2504]
  4259d8:	mov	x0, x21
  4259dc:	bl	406760 <fputs@plt>
  4259e0:	ldrb	w8, [x19, #44]
  4259e4:	tbz	w8, #7, 425a00 <print_variable_data_base@@Base+0x224>
  4259e8:	ldr	x3, [x22, #2504]
  4259ec:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4259f0:	add	x0, x0, #0x961
  4259f4:	mov	w1, #0x8                   	// #8
  4259f8:	mov	w2, #0x1                   	// #1
  4259fc:	bl	406cb0 <fwrite@plt>
  425a00:	ldr	x8, [x19, #16]
  425a04:	cbz	x8, 425a2c <print_variable_data_base@@Base+0x250>
  425a08:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  425a0c:	add	x1, x1, #0x96a
  425a10:	mov	w2, #0x5                   	// #5
  425a14:	mov	x0, xzr
  425a18:	bl	406dc0 <dcgettext@plt>
  425a1c:	ldp	x8, x9, [x19, #24]
  425a20:	ldr	x1, [x19, #16]
  425a24:	add	x2, x9, x8
  425a28:	bl	406e60 <printf@plt>
  425a2c:	ldr	x1, [x22, #2504]
  425a30:	mov	w0, #0xa                   	// #10
  425a34:	bl	406810 <putc@plt>
  425a38:	ldr	x1, [x22, #2504]
  425a3c:	mov	x0, x20
  425a40:	bl	406760 <fputs@plt>
  425a44:	ldr	w21, [x19, #44]
  425a48:	tbz	w21, #0, 425a80 <print_variable_data_base@@Base+0x2a4>
  425a4c:	ldr	x20, [x19, #8]
  425a50:	mov	w1, #0xa                   	// #10
  425a54:	mov	x0, x20
  425a58:	bl	406c80 <strchr@plt>
  425a5c:	cbz	x0, 425a80 <print_variable_data_base@@Base+0x2a4>
  425a60:	ldr	x1, [x19]
  425a64:	mov	x2, x20
  425a68:	ldp	x20, x19, [sp, #32]
  425a6c:	ldp	x22, x21, [sp, #16]
  425a70:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425a74:	add	x0, x0, #0x981
  425a78:	ldp	x29, x30, [sp], #48
  425a7c:	b	406e60 <printf@plt>
  425a80:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x680>
  425a84:	adrp	x9, 42a000 <_IO_stdin_used@@Base+0x2680>
  425a88:	ldr	x1, [x19]
  425a8c:	add	x8, x8, #0x37a
  425a90:	add	x9, x9, #0x3a9
  425a94:	tst	w21, #0x2
  425a98:	csel	x8, x9, x8, eq  // eq = none
  425a9c:	adrp	x9, 427000 <jobserver_post_child@@Base+0xcc>
  425aa0:	add	x9, x9, #0xb14
  425aa4:	tst	w21, #0x1
  425aa8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425aac:	csel	x2, x9, x8, eq  // eq = none
  425ab0:	add	x0, x0, #0x995
  425ab4:	bl	406e60 <printf@plt>
  425ab8:	ldr	x0, [x19, #8]
  425abc:	bl	419edc <next_token@@Base>
  425ac0:	ldr	x20, [x19, #8]
  425ac4:	cmp	x0, x20
  425ac8:	b.eq	425ad4 <print_variable_data_base@@Base+0x2f8>  // b.none
  425acc:	ldrb	w8, [x0]
  425ad0:	cbz	w8, 425b18 <print_variable_data_base@@Base+0x33c>
  425ad4:	ldrb	w8, [x19, #44]
  425ad8:	tbz	w8, #0, 425b04 <print_variable_data_base@@Base+0x328>
  425adc:	ldr	x1, [x22, #2504]
  425ae0:	mov	x0, x20
  425ae4:	bl	406760 <fputs@plt>
  425ae8:	b	425b28 <print_variable_data_base@@Base+0x34c>
  425aec:	ldr	x1, [x22, #2504]
  425af0:	bl	406810 <putc@plt>
  425af4:	ldrb	w0, [x20]
  425af8:	ldr	x1, [x22, #2504]
  425afc:	bl	406810 <putc@plt>
  425b00:	add	x20, x20, #0x1
  425b04:	ldrb	w0, [x20]
  425b08:	cmp	w0, #0x24
  425b0c:	b.eq	425aec <print_variable_data_base@@Base+0x310>  // b.none
  425b10:	cbnz	w0, 425af8 <print_variable_data_base@@Base+0x31c>
  425b14:	b	425b28 <print_variable_data_base@@Base+0x34c>
  425b18:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425b1c:	add	x0, x0, #0x99d
  425b20:	mov	x1, x20
  425b24:	bl	406e60 <printf@plt>
  425b28:	ldr	x1, [x22, #2504]
  425b2c:	ldp	x20, x19, [sp, #32]
  425b30:	ldp	x22, x21, [sp, #16]
  425b34:	mov	w0, #0xa                   	// #10
  425b38:	ldp	x29, x30, [sp], #48
  425b3c:	b	406810 <putc@plt>
  425b40:	bl	406b70 <abort@plt>

0000000000425b44 <print_file_variables@@Base>:
  425b44:	stp	x29, x30, [sp, #-48]!
  425b48:	stp	x20, x19, [sp, #32]
  425b4c:	ldr	x8, [x0, #80]
  425b50:	str	x21, [sp, #16]
  425b54:	mov	x29, sp
  425b58:	cbz	x8, 425bd4 <print_file_variables@@Base+0x90>
  425b5c:	ldr	x19, [x8, #8]
  425b60:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  425b64:	adrp	x1, 425000 <define_automatic_variables@@Base+0x31c>
  425b68:	add	x20, x20, #0xaa4
  425b6c:	add	x1, x1, #0xc88
  425b70:	mov	x0, x19
  425b74:	mov	x2, x20
  425b78:	bl	410f74 <hash_map_arg@@Base>
  425b7c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  425b80:	add	x1, x1, #0x915
  425b84:	mov	w2, #0x5                   	// #5
  425b88:	mov	x0, xzr
  425b8c:	bl	406dc0 <dcgettext@plt>
  425b90:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  425b94:	ldr	x1, [x21, #2504]
  425b98:	bl	406760 <fputs@plt>
  425b9c:	ldr	x3, [x21, #2504]
  425ba0:	mov	w1, #0x2                   	// #2
  425ba4:	mov	w2, #0x1                   	// #1
  425ba8:	mov	x0, x20
  425bac:	bl	406cb0 <fwrite@plt>
  425bb0:	ldr	x1, [x21, #2504]
  425bb4:	mov	x0, x19
  425bb8:	bl	410fec <hash_print_stats@@Base>
  425bbc:	ldr	x1, [x21, #2504]
  425bc0:	ldp	x20, x19, [sp, #32]
  425bc4:	ldr	x21, [sp, #16]
  425bc8:	mov	w0, #0xa                   	// #10
  425bcc:	ldp	x29, x30, [sp], #48
  425bd0:	b	406810 <putc@plt>
  425bd4:	ldp	x20, x19, [sp, #32]
  425bd8:	ldr	x21, [sp, #16]
  425bdc:	ldp	x29, x30, [sp], #48
  425be0:	ret

0000000000425be4 <print_target_variables@@Base>:
  425be4:	stp	x29, x30, [sp, #-48]!
  425be8:	stp	x22, x21, [sp, #16]
  425bec:	stp	x20, x19, [sp, #32]
  425bf0:	ldr	x8, [x0, #80]
  425bf4:	mov	x29, sp
  425bf8:	cbz	x8, 425c58 <print_target_variables@@Base+0x74>
  425bfc:	ldr	x20, [x0]
  425c00:	mov	x19, x0
  425c04:	mov	x0, x20
  425c08:	bl	406750 <strlen@plt>
  425c0c:	add	x9, x0, #0x12
  425c10:	mov	x8, sp
  425c14:	and	x9, x9, #0xfffffffffffffff0
  425c18:	sub	x22, x8, x9
  425c1c:	mov	x21, x0
  425c20:	mov	sp, x22
  425c24:	mov	x0, x22
  425c28:	mov	x1, x20
  425c2c:	bl	406d00 <strcpy@plt>
  425c30:	add	x8, x22, x21
  425c34:	mov	w9, #0x203a                	// #8250
  425c38:	strh	w9, [x8]
  425c3c:	strb	wzr, [x8, #2]
  425c40:	ldr	x8, [x19, #80]
  425c44:	adrp	x1, 425000 <define_automatic_variables@@Base+0x31c>
  425c48:	add	x1, x1, #0xc6c
  425c4c:	mov	x2, x22
  425c50:	ldr	x0, [x8, #8]
  425c54:	bl	410f74 <hash_map_arg@@Base>
  425c58:	mov	sp, x29
  425c5c:	ldp	x20, x19, [sp, #32]
  425c60:	ldp	x22, x21, [sp, #16]
  425c64:	ldp	x29, x30, [sp], #48
  425c68:	ret
  425c6c:	ldr	w8, [x0, #44]
  425c70:	mov	w9, #0x18000000            	// #402653184
  425c74:	and	w8, w8, #0x1c000000
  425c78:	cmp	w8, w9
  425c7c:	b.ne	425c84 <print_target_variables@@Base+0xa0>  // b.any
  425c80:	ret
  425c84:	b	425924 <print_variable_data_base@@Base+0x148>
  425c88:	ldr	w8, [x0, #44]
  425c8c:	mov	w9, #0x18000000            	// #402653184
  425c90:	and	w8, w8, #0x1c000000
  425c94:	cmp	w8, w9
  425c98:	b.ne	425ca0 <print_target_variables@@Base+0xbc>  // b.any
  425c9c:	b	425924 <print_variable_data_base@@Base+0x148>
  425ca0:	ret

0000000000425ca4 <build_vpath_lists@@Base>:
  425ca4:	sub	sp, sp, #0x40
  425ca8:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  425cac:	ldr	x9, [x8, #3976]
  425cb0:	stp	x29, x30, [sp, #16]
  425cb4:	stp	x22, x21, [sp, #32]
  425cb8:	stp	x20, x19, [sp, #48]
  425cbc:	add	x29, sp, #0x10
  425cc0:	cbz	x9, 425ce0 <build_vpath_lists@@Base+0x3c>
  425cc4:	mov	x11, xzr
  425cc8:	mov	x10, x9
  425ccc:	ldr	x9, [x9]
  425cd0:	str	x11, [x10]
  425cd4:	mov	x11, x10
  425cd8:	cbnz	x9, 425cc8 <build_vpath_lists@@Base+0x24>
  425cdc:	b	425ce4 <build_vpath_lists@@Base+0x40>
  425ce0:	mov	x10, xzr
  425ce4:	adrp	x20, 442000 <just_print_flag@@Base>
  425ce8:	ldr	w21, [x20, #64]
  425cec:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425cf0:	add	x0, x0, #0x9c9
  425cf4:	str	x10, [x8, #3976]
  425cf8:	str	wzr, [x20, #64]
  425cfc:	bl	40a7e8 <variable_expand@@Base>
  425d00:	str	w21, [x20, #64]
  425d04:	ldrb	w8, [x0]
  425d08:	adrp	x19, 441000 <stdio_traced@@Base+0x1a48>
  425d0c:	add	x19, x19, #0xf88
  425d10:	cbz	w8, 425d3c <build_vpath_lists@@Base+0x98>
  425d14:	ldr	x22, [x19]
  425d18:	mov	x1, x0
  425d1c:	mov	w8, #0x25                  	// #37
  425d20:	sub	x0, x29, #0x4
  425d24:	sturh	w8, [x29, #-4]
  425d28:	str	xzr, [x19]
  425d2c:	bl	425d94 <construct_vpath_list@@Base>
  425d30:	ldr	x8, [x19]
  425d34:	ldr	w21, [x20, #64]
  425d38:	stp	x22, x8, [x19]
  425d3c:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  425d40:	add	x0, x0, #0x9db
  425d44:	str	wzr, [x20, #64]
  425d48:	bl	40a7e8 <variable_expand@@Base>
  425d4c:	str	w21, [x20, #64]
  425d50:	ldrb	w8, [x0]
  425d54:	cbz	w8, 425d80 <build_vpath_lists@@Base+0xdc>
  425d58:	ldr	x20, [x19]
  425d5c:	mov	x1, x0
  425d60:	mov	w8, #0x25                  	// #37
  425d64:	add	x0, sp, #0x8
  425d68:	strh	w8, [sp, #8]
  425d6c:	str	xzr, [x19]
  425d70:	bl	425d94 <construct_vpath_list@@Base>
  425d74:	ldr	x8, [x19]
  425d78:	str	x20, [x19]
  425d7c:	str	x8, [x19, #16]
  425d80:	ldp	x20, x19, [sp, #48]
  425d84:	ldp	x22, x21, [sp, #32]
  425d88:	ldp	x29, x30, [sp, #16]
  425d8c:	add	sp, sp, #0x40
  425d90:	ret

0000000000425d94 <construct_vpath_list@@Base>:
  425d94:	sub	sp, sp, #0x70
  425d98:	stp	x22, x21, [sp, #80]
  425d9c:	stp	x20, x19, [sp, #96]
  425da0:	mov	x22, x1
  425da4:	mov	x19, x0
  425da8:	stp	x29, x30, [sp, #16]
  425dac:	stp	x28, x27, [sp, #32]
  425db0:	stp	x26, x25, [sp, #48]
  425db4:	stp	x24, x23, [sp, #64]
  425db8:	add	x29, sp, #0x10
  425dbc:	cbz	x0, 425f74 <construct_vpath_list@@Base+0x1e0>
  425dc0:	mov	x0, x19
  425dc4:	bl	41d7d0 <find_percent@@Base>
  425dc8:	mov	x20, x0
  425dcc:	cbz	x22, 425f7c <construct_vpath_list@@Base+0x1e8>
  425dd0:	adrp	x24, 43e000 <memcpy@GLIBC_2.17>
  425dd4:	add	x24, x24, #0xcf0
  425dd8:	mov	w8, #0x42                  	// #66
  425ddc:	mov	x21, x22
  425de0:	ldrb	w10, [x22], #1
  425de4:	ldrh	w9, [x24, x10, lsl #1]
  425de8:	tst	w9, w8
  425dec:	b.ne	425ddc <construct_vpath_list@@Base+0x48>  // b.any
  425df0:	mov	w25, #0x2                   	// #2
  425df4:	cbz	w10, 425e2c <construct_vpath_list@@Base+0x98>
  425df8:	ldrb	w10, [x21, #1]
  425dfc:	mov	w8, #0x42                  	// #66
  425e00:	tst	w9, w8
  425e04:	cinc	w25, w25, ne  // ne = any
  425e08:	cbz	w10, 425e2c <construct_vpath_list@@Base+0x98>
  425e0c:	mov	w9, #0x1                   	// #1
  425e10:	and	x10, x10, #0xff
  425e14:	ldrh	w11, [x24, x10, lsl #1]
  425e18:	ldrb	w10, [x22, x9]
  425e1c:	add	x9, x9, #0x1
  425e20:	tst	w11, w8
  425e24:	cinc	w25, w25, ne  // ne = any
  425e28:	cbnz	w10, 425e10 <construct_vpath_list@@Base+0x7c>
  425e2c:	mov	w8, w25
  425e30:	lsl	x0, x8, #3
  425e34:	bl	419e14 <xmalloc@@Base>
  425e38:	ldrb	w8, [x21]
  425e3c:	mov	x22, x0
  425e40:	cbz	w8, 426110 <construct_vpath_list@@Base+0x37c>
  425e44:	str	x20, [sp, #8]
  425e48:	mov	w27, wzr
  425e4c:	mov	x26, xzr
  425e50:	mov	w28, #0x42                  	// #66
  425e54:	sub	x20, x21, #0x1
  425e58:	mov	w10, w8
  425e5c:	mov	x9, x21
  425e60:	ands	w11, w10, #0xff
  425e64:	b.eq	425e8c <construct_vpath_list@@Base+0xf8>  // b.none
  425e68:	cmp	w11, #0x3a
  425e6c:	b.eq	425e8c <construct_vpath_list@@Base+0xf8>  // b.none
  425e70:	and	x10, x10, #0xff
  425e74:	ldrh	w10, [x24, x10, lsl #1]
  425e78:	tbnz	w10, #1, 425e8c <construct_vpath_list@@Base+0xf8>
  425e7c:	ldrb	w10, [x9, #1]!
  425e80:	add	x20, x20, #0x1
  425e84:	ands	w11, w10, #0xff
  425e88:	b.ne	425e68 <construct_vpath_list@@Base+0xd4>  // b.any
  425e8c:	sub	x23, x9, x21
  425e90:	cmp	x23, #0x2
  425e94:	b.cc	425eb4 <construct_vpath_list@@Base+0x120>  // b.lo, b.ul, b.last
  425e98:	ldurb	w9, [x9, #-1]
  425e9c:	cmp	w9, #0x2f
  425ea0:	b.ne	425ec0 <construct_vpath_list@@Base+0x12c>  // b.any
  425ea4:	sub	x23, x23, #0x1
  425ea8:	cmp	x23, #0x1
  425eac:	b.hi	425ec0 <construct_vpath_list@@Base+0x12c>  // b.pmore
  425eb0:	mov	w23, #0x1                   	// #1
  425eb4:	and	w8, w8, #0xff
  425eb8:	cmp	w8, #0x2e
  425ebc:	b.eq	425ee0 <construct_vpath_list@@Base+0x14c>  // b.none
  425ec0:	mov	x0, x21
  425ec4:	mov	x1, x23
  425ec8:	bl	423914 <strcache_add_len@@Base>
  425ecc:	bl	409678 <dir_name@@Base>
  425ed0:	cmp	x23, x26
  425ed4:	str	x0, [x22, w27, uxtw #3]
  425ed8:	add	w27, w27, #0x1
  425edc:	csel	x26, x23, x26, hi  // hi = pmore
  425ee0:	mov	x21, x20
  425ee4:	ldrb	w8, [x21, #1]!
  425ee8:	ldrh	w9, [x24, x8, lsl #1]
  425eec:	tst	w9, w28
  425ef0:	b.ne	425ee4 <construct_vpath_list@@Base+0x150>  // b.any
  425ef4:	cbnz	w8, 425e54 <construct_vpath_list@@Base+0xc0>
  425ef8:	ldr	x20, [sp, #8]
  425efc:	cbz	w27, 426110 <construct_vpath_list@@Base+0x37c>
  425f00:	sub	w8, w25, #0x1
  425f04:	cmp	w27, w8
  425f08:	b.cs	425f20 <construct_vpath_list@@Base+0x18c>  // b.hs, b.nlast
  425f0c:	add	w8, w27, #0x1
  425f10:	lsl	x1, x8, #3
  425f14:	mov	x0, x22
  425f18:	bl	419de0 <xrealloc@@Base>
  425f1c:	mov	x22, x0
  425f20:	mov	w0, #0x30                  	// #48
  425f24:	str	xzr, [x22, w27, uxtw #3]
  425f28:	bl	419e14 <xmalloc@@Base>
  425f2c:	stp	x22, x26, [x0, #32]
  425f30:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  425f34:	ldr	x9, [x8, #3976]
  425f38:	mov	x21, x0
  425f3c:	str	x9, [x0]
  425f40:	str	x0, [x8, #3976]
  425f44:	mov	x0, x19
  425f48:	bl	423690 <strcache_add@@Base>
  425f4c:	mov	x22, x0
  425f50:	str	x0, [x21, #8]
  425f54:	mov	x0, x19
  425f58:	bl	406750 <strlen@plt>
  425f5c:	sub	x8, x20, x19
  425f60:	cmp	x20, #0x0
  425f64:	add	x8, x22, x8
  425f68:	csel	x8, xzr, x8, eq  // eq = none
  425f6c:	stp	x8, x0, [x21, #16]
  425f70:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  425f74:	mov	x20, xzr
  425f78:	cbnz	x22, 425dd0 <construct_vpath_list@@Base+0x3c>
  425f7c:	adrp	x23, 441000 <stdio_traced@@Base+0x1a48>
  425f80:	ldr	x21, [x23, #3976]
  425f84:	cbz	x21, 425fc0 <construct_vpath_list@@Base+0x22c>
  425f88:	cbz	x19, 425fa0 <construct_vpath_list@@Base+0x20c>
  425f8c:	sub	x24, x20, x19
  425f90:	add	x22, x19, #0x1
  425f94:	mov	x25, xzr
  425f98:	cbnz	x20, 425fe8 <construct_vpath_list@@Base+0x254>
  425f9c:	b	426074 <construct_vpath_list@@Base+0x2e0>
  425fa0:	ldr	x19, [x21]
  425fa4:	str	x19, [x23, #3976]
  425fa8:	ldr	x0, [x21, #32]
  425fac:	bl	406c60 <free@plt>
  425fb0:	mov	x0, x21
  425fb4:	bl	406c60 <free@plt>
  425fb8:	mov	x21, x19
  425fbc:	cbnz	x19, 425fa0 <construct_vpath_list@@Base+0x20c>
  425fc0:	ldp	x20, x19, [sp, #96]
  425fc4:	ldp	x22, x21, [sp, #80]
  425fc8:	ldp	x24, x23, [sp, #64]
  425fcc:	ldp	x26, x25, [sp, #48]
  425fd0:	ldp	x28, x27, [sp, #32]
  425fd4:	ldp	x29, x30, [sp, #16]
  425fd8:	add	sp, sp, #0x70
  425fdc:	ret
  425fe0:	mov	x25, x20
  425fe4:	cbz	x21, 425fc0 <construct_vpath_list@@Base+0x22c>
  425fe8:	ldp	x8, x9, [x21, #8]
  425fec:	mov	x20, x21
  425ff0:	ldr	x21, [x21]
  425ff4:	sub	x9, x9, x8
  425ff8:	cmp	x24, x9
  425ffc:	b.ne	425fe0 <construct_vpath_list@@Base+0x24c>  // b.any
  426000:	cmp	x8, x19
  426004:	b.eq	426038 <construct_vpath_list@@Base+0x2a4>  // b.none
  426008:	ldrb	w9, [x19]
  42600c:	ldrb	w10, [x8]
  426010:	cmp	w9, w10
  426014:	b.ne	426044 <construct_vpath_list@@Base+0x2b0>  // b.any
  426018:	cbz	w9, 426038 <construct_vpath_list@@Base+0x2a4>
  42601c:	add	x1, x8, #0x1
  426020:	mov	x0, x22
  426024:	bl	406c10 <strcmp@plt>
  426028:	cbz	w0, 426038 <construct_vpath_list@@Base+0x2a4>
  42602c:	mov	x25, x20
  426030:	cbnz	x21, 425fe8 <construct_vpath_list@@Base+0x254>
  426034:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  426038:	cbz	x25, 426050 <construct_vpath_list@@Base+0x2bc>
  42603c:	str	x21, [x25]
  426040:	b	426054 <construct_vpath_list@@Base+0x2c0>
  426044:	mov	x25, x20
  426048:	cbnz	x21, 425fe8 <construct_vpath_list@@Base+0x254>
  42604c:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  426050:	str	x21, [x23, #3976]
  426054:	ldr	x0, [x20, #32]
  426058:	bl	406c60 <free@plt>
  42605c:	mov	x0, x20
  426060:	bl	406c60 <free@plt>
  426064:	cbnz	x21, 425fe8 <construct_vpath_list@@Base+0x254>
  426068:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  42606c:	mov	x25, x20
  426070:	cbz	x21, 425fc0 <construct_vpath_list@@Base+0x22c>
  426074:	mov	x20, x21
  426078:	ldr	x9, [x21, #16]
  42607c:	ldr	x21, [x21]
  426080:	cbz	x9, 4260a0 <construct_vpath_list@@Base+0x30c>
  426084:	ldr	x8, [x20, #8]
  426088:	sub	x9, x9, x8
  42608c:	cmp	x24, x9
  426090:	b.ne	42606c <construct_vpath_list@@Base+0x2d8>  // b.any
  426094:	cmp	x8, x19
  426098:	b.ne	4260ac <construct_vpath_list@@Base+0x318>  // b.any
  42609c:	b	4260dc <construct_vpath_list@@Base+0x348>
  4260a0:	ldr	x8, [x20, #8]
  4260a4:	cmp	x8, x19
  4260a8:	b.eq	4260dc <construct_vpath_list@@Base+0x348>  // b.none
  4260ac:	ldrb	w9, [x19]
  4260b0:	ldrb	w10, [x8]
  4260b4:	cmp	w9, w10
  4260b8:	b.ne	4260e8 <construct_vpath_list@@Base+0x354>  // b.any
  4260bc:	cbz	w9, 4260dc <construct_vpath_list@@Base+0x348>
  4260c0:	add	x1, x8, #0x1
  4260c4:	mov	x0, x22
  4260c8:	bl	406c10 <strcmp@plt>
  4260cc:	cbz	w0, 4260dc <construct_vpath_list@@Base+0x348>
  4260d0:	mov	x25, x20
  4260d4:	cbnz	x21, 426074 <construct_vpath_list@@Base+0x2e0>
  4260d8:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  4260dc:	cbz	x25, 4260f4 <construct_vpath_list@@Base+0x360>
  4260e0:	str	x21, [x25]
  4260e4:	b	4260f8 <construct_vpath_list@@Base+0x364>
  4260e8:	mov	x25, x20
  4260ec:	cbnz	x21, 426074 <construct_vpath_list@@Base+0x2e0>
  4260f0:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  4260f4:	str	x21, [x23, #3976]
  4260f8:	ldr	x0, [x20, #32]
  4260fc:	bl	406c60 <free@plt>
  426100:	mov	x0, x20
  426104:	bl	406c60 <free@plt>
  426108:	cbnz	x21, 426074 <construct_vpath_list@@Base+0x2e0>
  42610c:	b	425fc0 <construct_vpath_list@@Base+0x22c>
  426110:	mov	x0, x22
  426114:	ldp	x20, x19, [sp, #96]
  426118:	ldp	x22, x21, [sp, #80]
  42611c:	ldp	x24, x23, [sp, #64]
  426120:	ldp	x26, x25, [sp, #48]
  426124:	ldp	x28, x27, [sp, #32]
  426128:	ldp	x29, x30, [sp, #16]
  42612c:	add	sp, sp, #0x70
  426130:	b	406c60 <free@plt>

0000000000426134 <gpath_search@@Base>:
  426134:	stp	x29, x30, [sp, #-48]!
  426138:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  42613c:	ldr	x8, [x8, #3992]
  426140:	stp	x22, x21, [sp, #16]
  426144:	stp	x20, x19, [sp, #32]
  426148:	mov	x29, sp
  42614c:	cbz	x8, 4261b0 <gpath_search@@Base+0x7c>
  426150:	ldr	x9, [x8, #40]
  426154:	mov	x19, x1
  426158:	cmp	x9, x1
  42615c:	b.cc	4261b0 <gpath_search@@Base+0x7c>  // b.lo, b.ul, b.last
  426160:	ldr	x8, [x8, #32]
  426164:	ldr	x21, [x8]
  426168:	cbz	x21, 4261b0 <gpath_search@@Base+0x7c>
  42616c:	mov	x20, x0
  426170:	add	x22, x8, #0x8
  426174:	b	426180 <gpath_search@@Base+0x4c>
  426178:	ldr	x21, [x22], #8
  42617c:	cbz	x21, 4261b0 <gpath_search@@Base+0x7c>
  426180:	mov	x0, x21
  426184:	mov	x1, x20
  426188:	mov	x2, x19
  42618c:	bl	4069f0 <strncmp@plt>
  426190:	cbnz	w0, 426178 <gpath_search@@Base+0x44>
  426194:	ldrb	w8, [x21, x19]
  426198:	cbnz	w8, 426178 <gpath_search@@Base+0x44>
  42619c:	mov	w0, #0x1                   	// #1
  4261a0:	ldp	x20, x19, [sp, #32]
  4261a4:	ldp	x22, x21, [sp, #16]
  4261a8:	ldp	x29, x30, [sp], #48
  4261ac:	ret
  4261b0:	mov	w0, wzr
  4261b4:	ldp	x20, x19, [sp, #32]
  4261b8:	ldp	x22, x21, [sp, #16]
  4261bc:	ldp	x29, x30, [sp], #48
  4261c0:	ret

00000000004261c4 <vpath_search@@Base>:
  4261c4:	stp	x29, x30, [sp, #-64]!
  4261c8:	stp	x22, x21, [sp, #32]
  4261cc:	stp	x20, x19, [sp, #48]
  4261d0:	ldrb	w8, [x0]
  4261d4:	str	x23, [sp, #16]
  4261d8:	mov	x29, sp
  4261dc:	cmp	w8, #0x2f
  4261e0:	b.eq	4262b8 <vpath_search@@Base+0xf4>  // b.none
  4261e4:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  4261e8:	add	x8, x8, #0xf88
  4261ec:	ldp	x23, x8, [x8]
  4261f0:	orr	x8, x23, x8
  4261f4:	cbz	x8, 4262b8 <vpath_search@@Base+0xf4>
  4261f8:	mov	x19, x3
  4261fc:	mov	x22, x2
  426200:	mov	x20, x0
  426204:	mov	x21, x1
  426208:	cbz	x2, 426214 <vpath_search@@Base+0x50>
  42620c:	str	wzr, [x22]
  426210:	str	wzr, [x19]
  426214:	cbz	x23, 426294 <vpath_search@@Base+0xd0>
  426218:	cbnz	x22, 426234 <vpath_search@@Base+0x70>
  42621c:	b	426268 <vpath_search@@Base+0xa4>
  426220:	ldr	w8, [x22]
  426224:	add	w8, w8, #0x1
  426228:	str	w8, [x22]
  42622c:	ldr	x23, [x23]
  426230:	cbz	x23, 426294 <vpath_search@@Base+0xd0>
  426234:	ldp	x0, x1, [x23, #8]
  426238:	mov	x2, x20
  42623c:	bl	40d384 <pattern_matches@@Base>
  426240:	cbz	w0, 426220 <vpath_search@@Base+0x5c>
  426244:	ldp	x0, x1, [x23, #32]
  426248:	mov	x2, x20
  42624c:	mov	x3, x21
  426250:	mov	x4, x19
  426254:	bl	4262d0 <vpath_search@@Base+0x10c>
  426258:	cbz	x0, 426220 <vpath_search@@Base+0x5c>
  42625c:	b	4262bc <vpath_search@@Base+0xf8>
  426260:	ldr	x23, [x23]
  426264:	cbz	x23, 426294 <vpath_search@@Base+0xd0>
  426268:	ldp	x0, x1, [x23, #8]
  42626c:	mov	x2, x20
  426270:	bl	40d384 <pattern_matches@@Base>
  426274:	cbz	w0, 426260 <vpath_search@@Base+0x9c>
  426278:	ldp	x0, x1, [x23, #32]
  42627c:	mov	x2, x20
  426280:	mov	x3, x21
  426284:	mov	x4, x19
  426288:	bl	4262d0 <vpath_search@@Base+0x10c>
  42628c:	cbz	x0, 426260 <vpath_search@@Base+0x9c>
  426290:	b	4262bc <vpath_search@@Base+0xf8>
  426294:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  426298:	ldr	x8, [x8, #3984]
  42629c:	cbz	x8, 4262b8 <vpath_search@@Base+0xf4>
  4262a0:	ldp	x0, x1, [x8, #32]
  4262a4:	mov	x2, x20
  4262a8:	mov	x3, x21
  4262ac:	mov	x4, x19
  4262b0:	bl	4262d0 <vpath_search@@Base+0x10c>
  4262b4:	cbnz	x0, 4262bc <vpath_search@@Base+0xf8>
  4262b8:	mov	x0, xzr
  4262bc:	ldp	x20, x19, [sp, #48]
  4262c0:	ldp	x22, x21, [sp, #32]
  4262c4:	ldr	x23, [sp, #16]
  4262c8:	ldp	x29, x30, [sp], #64
  4262cc:	ret
  4262d0:	stp	x29, x30, [sp, #-96]!
  4262d4:	stp	x28, x27, [sp, #16]
  4262d8:	stp	x26, x25, [sp, #32]
  4262dc:	stp	x24, x23, [sp, #48]
  4262e0:	stp	x22, x21, [sp, #64]
  4262e4:	stp	x20, x19, [sp, #80]
  4262e8:	mov	x29, sp
  4262ec:	sub	sp, sp, #0xa0
  4262f0:	mov	x22, x0
  4262f4:	mov	x0, x2
  4262f8:	mov	x19, x4
  4262fc:	mov	x20, x3
  426300:	mov	x25, x2
  426304:	mov	x21, x1
  426308:	bl	40aae4 <lookup_file@@Base>
  42630c:	stur	x19, [x29, #-152]
  426310:	cbz	x0, 426324 <vpath_search@@Base+0x160>
  426314:	ldrb	w8, [x0, #137]
  426318:	tst	w8, #0x8
  42631c:	cset	w8, eq  // eq = none
  426320:	b	426328 <vpath_search@@Base+0x164>
  426324:	mov	w8, #0x1                   	// #1
  426328:	mov	x0, x25
  42632c:	stur	w8, [x29, #-140]
  426330:	bl	406750 <strlen@plt>
  426334:	mov	x24, x0
  426338:	mov	w1, #0x2f                  	// #47
  42633c:	mov	x0, x25
  426340:	bl	406b30 <strrchr@plt>
  426344:	sub	x8, x0, x25
  426348:	cmp	x0, #0x0
  42634c:	csel	x26, xzr, x8, eq  // eq = none
  426350:	cmp	x26, #0x0
  426354:	csinv	x8, xzr, x26, eq  // eq = none
  426358:	add	x10, x8, x24
  42635c:	add	x8, x21, x26
  426360:	add	x8, x8, x10
  426364:	add	x8, x8, #0x12
  426368:	and	x8, x8, #0xfffffffffffffff0
  42636c:	mov	x9, sp
  426370:	csinc	x23, x25, x0, eq  // eq = none
  426374:	sub	x21, x9, x8
  426378:	mov	sp, x21
  42637c:	ldr	x27, [x22]
  426380:	cbz	x27, 4265c0 <vpath_search@@Base+0x3fc>
  426384:	add	x8, x10, #0x1
  426388:	mov	w19, wzr
  42638c:	mov	w24, #0x2f                  	// #47
  426390:	stur	x10, [x29, #-160]
  426394:	stur	x8, [x29, #-136]
  426398:	cbnz	x26, 4263ac <vpath_search@@Base+0x1e8>
  42639c:	b	4264bc <vpath_search@@Base+0x2f8>
  4263a0:	add	w19, w19, #0x1
  4263a4:	ldr	x27, [x22, w19, uxtw #3]
  4263a8:	cbz	x27, 4265c0 <vpath_search@@Base+0x3fc>
  4263ac:	mov	x0, x27
  4263b0:	bl	406750 <strlen@plt>
  4263b4:	mov	x28, x0
  4263b8:	mov	x0, x21
  4263bc:	mov	x1, x27
  4263c0:	mov	x2, x28
  4263c4:	bl	406710 <memcpy@plt>
  4263c8:	add	x27, x21, x28
  4263cc:	strb	w24, [x27], #1
  4263d0:	mov	x0, x27
  4263d4:	mov	x1, x25
  4263d8:	mov	x2, x26
  4263dc:	bl	406710 <memcpy@plt>
  4263e0:	add	x27, x27, x26
  4263e4:	cmp	x27, x21
  4263e8:	mov	x0, x27
  4263ec:	b.eq	426408 <vpath_search@@Base+0x244>  // b.none
  4263f0:	ldurb	w8, [x27, #-1]
  4263f4:	mov	x0, x27
  4263f8:	cmp	w8, #0x2f
  4263fc:	b.eq	426408 <vpath_search@@Base+0x244>  // b.none
  426400:	mov	x0, x27
  426404:	strb	w24, [x0], #1
  426408:	ldur	x2, [x29, #-136]
  42640c:	mov	x1, x23
  426410:	bl	406710 <memcpy@plt>
  426414:	mov	x0, x21
  426418:	bl	40aae4 <lookup_file@@Base>
  42641c:	cbz	x0, 426464 <vpath_search@@Base+0x2a0>
  426420:	ldur	w8, [x29, #-140]
  426424:	tbz	w8, #0, 426434 <vpath_search@@Base+0x270>
  426428:	mov	w8, #0x1                   	// #1
  42642c:	cbnz	x20, 426440 <vpath_search@@Base+0x27c>
  426430:	b	426460 <vpath_search@@Base+0x29c>
  426434:	ldrb	w8, [x0, #137]
  426438:	ubfx	w8, w8, #3, #1
  42643c:	cbz	x20, 426460 <vpath_search@@Base+0x29c>
  426440:	cbz	w8, 426460 <vpath_search@@Base+0x29c>
  426444:	ldr	x9, [x0, #112]
  426448:	cmp	x9, #0x2
  42644c:	b.eq	426458 <vpath_search@@Base+0x294>  // b.none
  426450:	cmn	x9, #0x1
  426454:	b.ne	426460 <vpath_search@@Base+0x29c>  // b.any
  426458:	str	x9, [x20]
  42645c:	mov	x20, xzr
  426460:	tbnz	w8, #0, 426608 <vpath_search@@Base+0x444>
  426464:	mov	x0, x21
  426468:	mov	x1, x23
  42646c:	strb	wzr, [x27]
  426470:	bl	408f3c <dir_file_exists_p@@Base>
  426474:	cbz	w0, 4263a0 <vpath_search@@Base+0x1dc>
  426478:	strb	w24, [x27]
  42647c:	sub	x2, x29, #0x80
  426480:	mov	w0, wzr
  426484:	mov	x1, x21
  426488:	bl	406e90 <__xstat@plt>
  42648c:	cmn	w0, #0x1
  426490:	b.ne	4264a8 <vpath_search@@Base+0x2e4>  // b.any
  426494:	bl	406e70 <__errno_location@plt>
  426498:	ldr	w8, [x0]
  42649c:	cmp	w8, #0x4
  4264a0:	b.eq	42647c <vpath_search@@Base+0x2b8>  // b.none
  4264a4:	b	4263a0 <vpath_search@@Base+0x1dc>
  4264a8:	cbz	w0, 4265a0 <vpath_search@@Base+0x3dc>
  4264ac:	b	4263a0 <vpath_search@@Base+0x1dc>
  4264b0:	add	w19, w19, #0x1
  4264b4:	ldr	x27, [x22, w19, uxtw #3]
  4264b8:	cbz	x27, 4265c0 <vpath_search@@Base+0x3fc>
  4264bc:	mov	x0, x27
  4264c0:	bl	406750 <strlen@plt>
  4264c4:	mov	x25, x0
  4264c8:	mov	x0, x21
  4264cc:	mov	x1, x27
  4264d0:	mov	x2, x25
  4264d4:	bl	406710 <memcpy@plt>
  4264d8:	add	x27, x21, x25
  4264dc:	mov	x0, x27
  4264e0:	cbz	x25, 4264fc <vpath_search@@Base+0x338>
  4264e4:	ldurb	w8, [x27, #-1]
  4264e8:	mov	x0, x27
  4264ec:	cmp	w8, #0x2f
  4264f0:	b.eq	4264fc <vpath_search@@Base+0x338>  // b.none
  4264f4:	mov	x0, x27
  4264f8:	strb	w24, [x0], #1
  4264fc:	ldur	x2, [x29, #-136]
  426500:	mov	x1, x23
  426504:	bl	406710 <memcpy@plt>
  426508:	mov	x0, x21
  42650c:	bl	40aae4 <lookup_file@@Base>
  426510:	cbz	x0, 426558 <vpath_search@@Base+0x394>
  426514:	ldur	w8, [x29, #-140]
  426518:	tbz	w8, #0, 426528 <vpath_search@@Base+0x364>
  42651c:	mov	w8, #0x1                   	// #1
  426520:	cbnz	x20, 426534 <vpath_search@@Base+0x370>
  426524:	b	426554 <vpath_search@@Base+0x390>
  426528:	ldrb	w8, [x0, #137]
  42652c:	ubfx	w8, w8, #3, #1
  426530:	cbz	x20, 426554 <vpath_search@@Base+0x390>
  426534:	cbz	w8, 426554 <vpath_search@@Base+0x390>
  426538:	ldr	x9, [x0, #112]
  42653c:	cmp	x9, #0x2
  426540:	b.eq	42654c <vpath_search@@Base+0x388>  // b.none
  426544:	cmn	x9, #0x1
  426548:	b.ne	426554 <vpath_search@@Base+0x390>  // b.any
  42654c:	str	x9, [x20]
  426550:	mov	x20, xzr
  426554:	tbnz	w8, #0, 426608 <vpath_search@@Base+0x444>
  426558:	mov	x0, x21
  42655c:	mov	x1, x23
  426560:	strb	wzr, [x27]
  426564:	bl	408f3c <dir_file_exists_p@@Base>
  426568:	cbz	w0, 4264b0 <vpath_search@@Base+0x2ec>
  42656c:	strb	w24, [x27]
  426570:	sub	x2, x29, #0x80
  426574:	mov	w0, wzr
  426578:	mov	x1, x21
  42657c:	bl	406e90 <__xstat@plt>
  426580:	cmn	w0, #0x1
  426584:	b.ne	42659c <vpath_search@@Base+0x3d8>  // b.any
  426588:	bl	406e70 <__errno_location@plt>
  42658c:	ldr	w8, [x0]
  426590:	cmp	w8, #0x4
  426594:	b.eq	426570 <vpath_search@@Base+0x3ac>  // b.none
  426598:	b	4264b0 <vpath_search@@Base+0x2ec>
  42659c:	cbnz	w0, 4264b0 <vpath_search@@Base+0x2ec>
  4265a0:	ldur	x22, [x29, #-152]
  4265a4:	cbz	x20, 4265c8 <vpath_search@@Base+0x404>
  4265a8:	ldp	x1, x2, [x29, #-40]
  4265ac:	mov	x0, x21
  4265b0:	bl	40c114 <file_timestamp_cons@@Base>
  4265b4:	ldur	x8, [x29, #-160]
  4265b8:	str	x0, [x20]
  4265bc:	b	4265cc <vpath_search@@Base+0x408>
  4265c0:	mov	x0, xzr
  4265c4:	b	4265e8 <vpath_search@@Base+0x424>
  4265c8:	ldur	x8, [x29, #-160]
  4265cc:	cbz	x22, 4265d4 <vpath_search@@Base+0x410>
  4265d0:	str	w19, [x22]
  4265d4:	sub	x8, x8, x21
  4265d8:	add	x8, x27, x8
  4265dc:	add	x1, x8, #0x1
  4265e0:	mov	x0, x21
  4265e4:	bl	423914 <strcache_add_len@@Base>
  4265e8:	mov	sp, x29
  4265ec:	ldp	x20, x19, [sp, #80]
  4265f0:	ldp	x22, x21, [sp, #64]
  4265f4:	ldp	x24, x23, [sp, #48]
  4265f8:	ldp	x26, x25, [sp, #32]
  4265fc:	ldp	x28, x27, [sp, #16]
  426600:	ldp	x29, x30, [sp], #96
  426604:	ret
  426608:	mov	w8, #0x2f                  	// #47
  42660c:	strb	w8, [x27]
  426610:	ldp	x8, x22, [x29, #-160]
  426614:	cbz	x20, 4265cc <vpath_search@@Base+0x408>
  426618:	str	xzr, [x20]
  42661c:	b	4265cc <vpath_search@@Base+0x408>

0000000000426620 <print_vpath_data_base@@Base>:
  426620:	stp	x29, x30, [sp, #-96]!
  426624:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426628:	add	x1, x1, #0x9ed
  42662c:	mov	w2, #0x5                   	// #5
  426630:	mov	x0, xzr
  426634:	str	x27, [sp, #16]
  426638:	stp	x26, x25, [sp, #32]
  42663c:	stp	x24, x23, [sp, #48]
  426640:	stp	x22, x21, [sp, #64]
  426644:	stp	x20, x19, [sp, #80]
  426648:	mov	x29, sp
  42664c:	bl	406dc0 <dcgettext@plt>
  426650:	bl	406ba0 <puts@plt>
  426654:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  426658:	ldr	x23, [x22, #3976]
  42665c:	cbz	x23, 426738 <print_vpath_data_base@@Base+0x118>
  426660:	adrp	x20, 42d000 <_IO_stdin_used@@Base+0x5680>
  426664:	adrp	x21, 42d000 <_IO_stdin_used@@Base+0x5680>
  426668:	mov	w19, wzr
  42666c:	add	x20, x20, #0xa04
  426670:	mov	w24, #0x3a                  	// #58
  426674:	mov	w25, #0xa                   	// #10
  426678:	add	x21, x21, #0xa0e
  42667c:	b	426688 <print_vpath_data_base@@Base+0x68>
  426680:	ldr	x23, [x23]
  426684:	cbz	x23, 4266d8 <print_vpath_data_base@@Base+0xb8>
  426688:	ldr	x1, [x23, #8]
  42668c:	mov	x0, x20
  426690:	add	w19, w19, #0x1
  426694:	bl	406e60 <printf@plt>
  426698:	ldr	x8, [x23, #32]
  42669c:	ldr	x1, [x8]
  4266a0:	cbz	x1, 426680 <print_vpath_data_base@@Base+0x60>
  4266a4:	mov	w26, #0x1                   	// #1
  4266a8:	mov	w9, w26
  4266ac:	lsl	x27, x9, #3
  4266b0:	ldr	x8, [x8, x27]
  4266b4:	mov	x0, x21
  4266b8:	cmp	x8, #0x0
  4266bc:	csel	w2, w25, w24, eq  // eq = none
  4266c0:	bl	406e60 <printf@plt>
  4266c4:	ldr	x8, [x23, #32]
  4266c8:	add	w26, w26, #0x1
  4266cc:	ldr	x1, [x8, x27]
  4266d0:	cbnz	x1, 4266a8 <print_vpath_data_base@@Base+0x88>
  4266d4:	b	426680 <print_vpath_data_base@@Base+0x60>
  4266d8:	ldr	x8, [x22, #3976]
  4266dc:	cbz	x8, 426738 <print_vpath_data_base@@Base+0x118>
  4266e0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  4266e4:	add	x1, x1, #0xa2e
  4266e8:	mov	w2, #0x5                   	// #5
  4266ec:	mov	x0, xzr
  4266f0:	bl	406dc0 <dcgettext@plt>
  4266f4:	mov	w1, w19
  4266f8:	bl	406e60 <printf@plt>
  4266fc:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  426700:	ldr	x8, [x8, #3984]
  426704:	cbnz	x8, 42675c <print_vpath_data_base@@Base+0x13c>
  426708:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42670c:	add	x1, x1, #0xa4b
  426710:	mov	w2, #0x5                   	// #5
  426714:	mov	x0, xzr
  426718:	bl	406dc0 <dcgettext@plt>
  42671c:	ldp	x20, x19, [sp, #80]
  426720:	ldp	x22, x21, [sp, #64]
  426724:	ldp	x24, x23, [sp, #48]
  426728:	ldp	x26, x25, [sp, #32]
  42672c:	ldr	x27, [sp, #16]
  426730:	ldp	x29, x30, [sp], #96
  426734:	b	406ba0 <puts@plt>
  426738:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  42673c:	add	x1, x1, #0xa13
  426740:	mov	w2, #0x5                   	// #5
  426744:	mov	x0, xzr
  426748:	bl	406dc0 <dcgettext@plt>
  42674c:	bl	406ba0 <puts@plt>
  426750:	adrp	x8, 441000 <stdio_traced@@Base+0x1a48>
  426754:	ldr	x8, [x8, #3984]
  426758:	cbz	x8, 426708 <print_vpath_data_base@@Base+0xe8>
  42675c:	ldr	x20, [x8, #32]
  426760:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426764:	add	x1, x1, #0xa79
  426768:	mov	w2, #0x5                   	// #5
  42676c:	mov	x0, xzr
  426770:	bl	406dc0 <dcgettext@plt>
  426774:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426778:	ldr	x1, [x8, #2504]
  42677c:	bl	406760 <fputs@plt>
  426780:	ldr	x1, [x20]
  426784:	cbz	x1, 4267c4 <print_vpath_data_base@@Base+0x1a4>
  426788:	adrp	x19, 42d000 <_IO_stdin_used@@Base+0x5680>
  42678c:	mov	w21, #0x1                   	// #1
  426790:	mov	w22, #0x3a                  	// #58
  426794:	mov	w23, #0xa                   	// #10
  426798:	add	x19, x19, #0xa0e
  42679c:	mov	w8, w21
  4267a0:	lsl	x24, x8, #3
  4267a4:	ldr	x8, [x20, x24]
  4267a8:	mov	x0, x19
  4267ac:	cmp	x8, #0x0
  4267b0:	csel	w2, w23, w22, eq  // eq = none
  4267b4:	bl	406e60 <printf@plt>
  4267b8:	ldr	x1, [x20, x24]
  4267bc:	add	w21, w21, #0x1
  4267c0:	cbnz	x1, 42679c <print_vpath_data_base@@Base+0x17c>
  4267c4:	ldp	x20, x19, [sp, #80]
  4267c8:	ldp	x22, x21, [sp, #64]
  4267cc:	ldp	x24, x23, [sp, #48]
  4267d0:	ldp	x26, x25, [sp, #32]
  4267d4:	ldr	x27, [sp, #16]
  4267d8:	ldp	x29, x30, [sp], #96
  4267dc:	ret

00000000004267e0 <jobserver_setup@@Base>:
  4267e0:	stp	x29, x30, [sp, #-48]!
  4267e4:	stp	x20, x19, [sp, #32]
  4267e8:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4267ec:	mov	w19, w0
  4267f0:	add	x20, x20, #0x9a0
  4267f4:	stp	x22, x21, [sp, #16]
  4267f8:	mov	x29, sp
  4267fc:	mov	x0, x20
  426800:	bl	406820 <pipe@plt>
  426804:	cmn	w0, #0x1
  426808:	b.ne	426828 <jobserver_setup@@Base+0x48>  // b.any
  42680c:	bl	406e70 <__errno_location@plt>
  426810:	ldr	w8, [x0]
  426814:	cmp	w8, #0x4
  426818:	b.eq	4267fc <jobserver_setup@@Base+0x1c>  // b.none
  42681c:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426820:	add	x1, x1, #0xaa7
  426824:	b	42693c <jobserver_setup@@Base+0x15c>
  426828:	tbnz	w0, #31, 42681c <jobserver_setup@@Base+0x3c>
  42682c:	adrp	x22, 43e000 <memcpy@GLIBC_2.17>
  426830:	ldr	w20, [x22, #2464]
  426834:	mov	w1, #0x1                   	// #1
  426838:	mov	w0, w20
  42683c:	bl	42749c <rpl_fcntl@@Base>
  426840:	cmn	w0, #0x1
  426844:	b.ne	42685c <jobserver_setup@@Base+0x7c>  // b.any
  426848:	bl	406e70 <__errno_location@plt>
  42684c:	ldr	w8, [x0]
  426850:	cmp	w8, #0x4
  426854:	b.eq	426834 <jobserver_setup@@Base+0x54>  // b.none
  426858:	b	42688c <jobserver_setup@@Base+0xac>
  42685c:	tbnz	w0, #31, 42688c <jobserver_setup@@Base+0xac>
  426860:	orr	w21, w0, #0x1
  426864:	mov	w1, #0x2                   	// #2
  426868:	mov	w0, w20
  42686c:	mov	w2, w21
  426870:	bl	42749c <rpl_fcntl@@Base>
  426874:	cmn	w0, #0x1
  426878:	b.ne	42688c <jobserver_setup@@Base+0xac>  // b.any
  42687c:	bl	406e70 <__errno_location@plt>
  426880:	ldr	w8, [x0]
  426884:	cmp	w8, #0x4
  426888:	b.eq	426864 <jobserver_setup@@Base+0x84>  // b.none
  42688c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426890:	ldr	w20, [x8, #2468]
  426894:	mov	w1, #0x1                   	// #1
  426898:	mov	w0, w20
  42689c:	bl	42749c <rpl_fcntl@@Base>
  4268a0:	cmn	w0, #0x1
  4268a4:	b.ne	4268bc <jobserver_setup@@Base+0xdc>  // b.any
  4268a8:	bl	406e70 <__errno_location@plt>
  4268ac:	ldr	w8, [x0]
  4268b0:	cmp	w8, #0x4
  4268b4:	b.eq	426894 <jobserver_setup@@Base+0xb4>  // b.none
  4268b8:	b	4268ec <jobserver_setup@@Base+0x10c>
  4268bc:	tbnz	w0, #31, 4268ec <jobserver_setup@@Base+0x10c>
  4268c0:	orr	w21, w0, #0x1
  4268c4:	mov	w1, #0x2                   	// #2
  4268c8:	mov	w0, w20
  4268cc:	mov	w2, w21
  4268d0:	bl	42749c <rpl_fcntl@@Base>
  4268d4:	cmn	w0, #0x1
  4268d8:	b.ne	4268ec <jobserver_setup@@Base+0x10c>  // b.any
  4268dc:	bl	406e70 <__errno_location@plt>
  4268e0:	ldr	w8, [x0]
  4268e4:	cmp	w8, #0x4
  4268e8:	b.eq	4268c4 <jobserver_setup@@Base+0xe4>  // b.none
  4268ec:	cbz	w19, 42694c <jobserver_setup@@Base+0x16c>
  4268f0:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  4268f4:	add	x20, x20, #0x998
  4268f8:	b	426900 <jobserver_setup@@Base+0x120>
  4268fc:	cbz	w19, 42694c <jobserver_setup@@Base+0x16c>
  426900:	sub	w19, w19, #0x1
  426904:	ldr	w0, [x20, #12]
  426908:	mov	w2, #0x1                   	// #1
  42690c:	mov	x1, x20
  426910:	bl	406b50 <write@plt>
  426914:	cmp	w0, #0x1
  426918:	b.eq	4268fc <jobserver_setup@@Base+0x11c>  // b.none
  42691c:	cmn	w0, #0x1
  426920:	b.ne	426934 <jobserver_setup@@Base+0x154>  // b.any
  426924:	bl	406e70 <__errno_location@plt>
  426928:	ldr	w8, [x0]
  42692c:	cmp	w8, #0x4
  426930:	b.eq	426904 <jobserver_setup@@Base+0x124>  // b.none
  426934:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426938:	add	x1, x1, #0xaba
  42693c:	mov	w2, #0x5                   	// #5
  426940:	mov	x0, xzr
  426944:	bl	406dc0 <dcgettext@plt>
  426948:	bl	41a2bc <pfatal_with_name@@Base>
  42694c:	ldr	w19, [x22, #2464]
  426950:	mov	w1, #0x3                   	// #3
  426954:	mov	w0, w19
  426958:	bl	42749c <rpl_fcntl@@Base>
  42695c:	cmn	w0, #0x1
  426960:	b.ne	426978 <jobserver_setup@@Base+0x198>  // b.any
  426964:	bl	406e70 <__errno_location@plt>
  426968:	ldr	w8, [x0]
  42696c:	cmp	w8, #0x4
  426970:	b.eq	426950 <jobserver_setup@@Base+0x170>  // b.none
  426974:	b	4269b8 <jobserver_setup@@Base+0x1d8>
  426978:	tbnz	w0, #31, 4269b8 <jobserver_setup@@Base+0x1d8>
  42697c:	orr	w20, w0, #0x800
  426980:	mov	w1, #0x4                   	// #4
  426984:	mov	w0, w19
  426988:	mov	w2, w20
  42698c:	bl	42749c <rpl_fcntl@@Base>
  426990:	cmn	w0, #0x1
  426994:	b.ne	4269b4 <jobserver_setup@@Base+0x1d4>  // b.any
  426998:	bl	406e70 <__errno_location@plt>
  42699c:	ldr	w8, [x0]
  4269a0:	cmp	w8, #0x4
  4269a4:	b.eq	426980 <jobserver_setup@@Base+0x1a0>  // b.none
  4269a8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  4269ac:	add	x0, x0, #0xb86
  4269b0:	bl	41a2bc <pfatal_with_name@@Base>
  4269b4:	tbnz	w0, #31, 4269a8 <jobserver_setup@@Base+0x1c8>
  4269b8:	ldp	x20, x19, [sp, #32]
  4269bc:	ldp	x22, x21, [sp, #16]
  4269c0:	mov	w0, #0x1                   	// #1
  4269c4:	ldp	x29, x30, [sp], #48
  4269c8:	ret

00000000004269cc <fd_noinherit@@Base>:
  4269cc:	stp	x29, x30, [sp, #-32]!
  4269d0:	stp	x20, x19, [sp, #16]
  4269d4:	mov	w19, w0
  4269d8:	mov	x29, sp
  4269dc:	mov	w1, #0x1                   	// #1
  4269e0:	mov	w0, w19
  4269e4:	bl	42749c <rpl_fcntl@@Base>
  4269e8:	cmn	w0, #0x1
  4269ec:	b.ne	426a04 <fd_noinherit@@Base+0x38>  // b.any
  4269f0:	bl	406e70 <__errno_location@plt>
  4269f4:	ldr	w8, [x0]
  4269f8:	cmp	w8, #0x4
  4269fc:	b.eq	4269dc <fd_noinherit@@Base+0x10>  // b.none
  426a00:	b	426a34 <fd_noinherit@@Base+0x68>
  426a04:	tbnz	w0, #31, 426a34 <fd_noinherit@@Base+0x68>
  426a08:	orr	w20, w0, #0x1
  426a0c:	mov	w1, #0x2                   	// #2
  426a10:	mov	w0, w19
  426a14:	mov	w2, w20
  426a18:	bl	42749c <rpl_fcntl@@Base>
  426a1c:	cmn	w0, #0x1
  426a20:	b.ne	426a34 <fd_noinherit@@Base+0x68>  // b.any
  426a24:	bl	406e70 <__errno_location@plt>
  426a28:	ldr	w8, [x0]
  426a2c:	cmp	w8, #0x4
  426a30:	b.eq	426a0c <fd_noinherit@@Base+0x40>  // b.none
  426a34:	ldp	x20, x19, [sp, #16]
  426a38:	ldp	x29, x30, [sp], #32
  426a3c:	ret

0000000000426a40 <jobserver_parse_auth@@Base>:
  426a40:	stp	x29, x30, [sp, #-32]!
  426a44:	stp	x20, x19, [sp, #16]
  426a48:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  426a4c:	add	x20, x20, #0x9a0
  426a50:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426a54:	add	x3, x20, #0x4
  426a58:	add	x1, x1, #0xace
  426a5c:	mov	x2, x20
  426a60:	mov	x29, sp
  426a64:	mov	x19, x0
  426a68:	bl	406de0 <__isoc99_sscanf@plt>
  426a6c:	cmp	w0, #0x2
  426a70:	b.ne	426b88 <jobserver_parse_auth@@Base+0x148>  // b.any
  426a74:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426a78:	ldrb	w8, [x8, #3236]
  426a7c:	tbz	w8, #2, 426aa8 <jobserver_parse_auth@@Base+0x68>
  426a80:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426a84:	add	x1, x1, #0xb09
  426a88:	mov	w2, #0x5                   	// #5
  426a8c:	mov	x0, xzr
  426a90:	bl	406dc0 <dcgettext@plt>
  426a94:	ldp	w1, w2, [x20]
  426a98:	bl	406e60 <printf@plt>
  426a9c:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426aa0:	ldr	x0, [x8, #2504]
  426aa4:	bl	406cf0 <fflush@plt>
  426aa8:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  426aac:	ldr	w0, [x19, #2464]
  426ab0:	mov	w1, #0x1                   	// #1
  426ab4:	bl	42749c <rpl_fcntl@@Base>
  426ab8:	cmn	w0, #0x1
  426abc:	b.eq	426b10 <jobserver_parse_auth@@Base+0xd0>  // b.none
  426ac0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426ac4:	ldr	w0, [x8, #2468]
  426ac8:	mov	w1, #0x1                   	// #1
  426acc:	bl	42749c <rpl_fcntl@@Base>
  426ad0:	cmn	w0, #0x1
  426ad4:	b.eq	426b10 <jobserver_parse_auth@@Base+0xd0>  // b.none
  426ad8:	ldr	w19, [x19, #2464]
  426adc:	mov	w1, #0x3                   	// #3
  426ae0:	mov	w0, w19
  426ae4:	bl	42749c <rpl_fcntl@@Base>
  426ae8:	cmn	w0, #0x1
  426aec:	b.ne	426b38 <jobserver_parse_auth@@Base+0xf8>  // b.any
  426af0:	bl	406e70 <__errno_location@plt>
  426af4:	ldr	w8, [x0]
  426af8:	cmp	w8, #0x4
  426afc:	b.eq	426adc <jobserver_parse_auth@@Base+0x9c>  // b.none
  426b00:	mov	w0, #0x1                   	// #1
  426b04:	ldp	x20, x19, [sp, #16]
  426b08:	ldp	x29, x30, [sp], #32
  426b0c:	ret
  426b10:	bl	406e70 <__errno_location@plt>
  426b14:	ldr	w8, [x0]
  426b18:	cmp	w8, #0x9
  426b1c:	b.ne	426bbc <jobserver_parse_auth@@Base+0x17c>  // b.any
  426b20:	mov	w0, wzr
  426b24:	movi	v0.2d, #0xffffffffffffffff
  426b28:	str	d0, [x19, #2464]
  426b2c:	ldp	x20, x19, [sp, #16]
  426b30:	ldp	x29, x30, [sp], #32
  426b34:	ret
  426b38:	tbnz	w0, #31, 426b78 <jobserver_parse_auth@@Base+0x138>
  426b3c:	orr	w20, w0, #0x800
  426b40:	mov	w1, #0x4                   	// #4
  426b44:	mov	w0, w19
  426b48:	mov	w2, w20
  426b4c:	bl	42749c <rpl_fcntl@@Base>
  426b50:	cmn	w0, #0x1
  426b54:	b.ne	426b74 <jobserver_parse_auth@@Base+0x134>  // b.any
  426b58:	bl	406e70 <__errno_location@plt>
  426b5c:	ldr	w8, [x0]
  426b60:	cmp	w8, #0x4
  426b64:	b.eq	426b40 <jobserver_parse_auth@@Base+0x100>  // b.none
  426b68:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  426b6c:	add	x0, x0, #0xb86
  426b70:	bl	41a2bc <pfatal_with_name@@Base>
  426b74:	tbnz	w0, #31, 426b68 <jobserver_parse_auth@@Base+0x128>
  426b78:	mov	w0, #0x1                   	// #1
  426b7c:	ldp	x20, x19, [sp, #16]
  426b80:	ldp	x29, x30, [sp], #32
  426b84:	ret
  426b88:	mov	x0, x19
  426b8c:	bl	406750 <strlen@plt>
  426b90:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426b94:	mov	x20, x0
  426b98:	add	x1, x1, #0xad4
  426b9c:	mov	w2, #0x5                   	// #5
  426ba0:	mov	x0, xzr
  426ba4:	bl	406dc0 <dcgettext@plt>
  426ba8:	mov	x2, x0
  426bac:	mov	x0, xzr
  426bb0:	mov	x1, x20
  426bb4:	mov	x3, x19
  426bb8:	bl	41aff0 <fatal@@Base>
  426bbc:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426bc0:	add	x1, x1, #0xb27
  426bc4:	mov	w2, #0x5                   	// #5
  426bc8:	mov	x0, xzr
  426bcc:	bl	406dc0 <dcgettext@plt>
  426bd0:	bl	41a2bc <pfatal_with_name@@Base>

0000000000426bd4 <jobserver_get_auth@@Base>:
  426bd4:	stp	x29, x30, [sp, #-32]!
  426bd8:	mov	w0, #0x2a                  	// #42
  426bdc:	str	x19, [sp, #16]
  426be0:	mov	x29, sp
  426be4:	bl	419e14 <xmalloc@@Base>
  426be8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426bec:	add	x8, x8, #0x9a0
  426bf0:	ldp	w2, w3, [x8]
  426bf4:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426bf8:	add	x1, x1, #0xace
  426bfc:	mov	x19, x0
  426c00:	bl	406800 <sprintf@plt>
  426c04:	mov	x0, x19
  426c08:	ldr	x19, [sp, #16]
  426c0c:	ldp	x29, x30, [sp], #32
  426c10:	ret

0000000000426c14 <jobserver_enabled@@Base>:
  426c14:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426c18:	ldr	w8, [x8, #2464]
  426c1c:	mvn	w8, w8
  426c20:	lsr	w0, w8, #31
  426c24:	ret

0000000000426c28 <jobserver_clear@@Base>:
  426c28:	stp	x29, x30, [sp, #-32]!
  426c2c:	str	x19, [sp, #16]
  426c30:	adrp	x19, 43e000 <memcpy@GLIBC_2.17>
  426c34:	ldr	w0, [x19, #2464]
  426c38:	mov	x29, sp
  426c3c:	tbnz	w0, #31, 426c44 <jobserver_clear@@Base+0x1c>
  426c40:	bl	406b10 <close@plt>
  426c44:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426c48:	ldr	w0, [x8, #2468]
  426c4c:	tbnz	w0, #31, 426c54 <jobserver_clear@@Base+0x2c>
  426c50:	bl	406b10 <close@plt>
  426c54:	movi	v0.2d, #0xffffffffffffffff
  426c58:	str	d0, [x19, #2464]
  426c5c:	ldr	x19, [sp, #16]
  426c60:	ldp	x29, x30, [sp], #32
  426c64:	ret

0000000000426c68 <jobserver_release@@Base>:
  426c68:	stp	x29, x30, [sp, #-32]!
  426c6c:	stp	x20, x19, [sp, #16]
  426c70:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  426c74:	mov	w19, w0
  426c78:	add	x20, x20, #0x998
  426c7c:	mov	x29, sp
  426c80:	ldr	w0, [x20, #12]
  426c84:	mov	w2, #0x1                   	// #1
  426c88:	mov	x1, x20
  426c8c:	bl	406b50 <write@plt>
  426c90:	cmn	w0, #0x1
  426c94:	b.ne	426cac <jobserver_release@@Base+0x44>  // b.any
  426c98:	bl	406e70 <__errno_location@plt>
  426c9c:	ldr	w8, [x0]
  426ca0:	cmp	w8, #0x4
  426ca4:	b.eq	426c80 <jobserver_release@@Base+0x18>  // b.none
  426ca8:	b	426cc0 <jobserver_release@@Base+0x58>
  426cac:	cmp	w0, #0x1
  426cb0:	b.ne	426cc0 <jobserver_release@@Base+0x58>  // b.any
  426cb4:	ldp	x20, x19, [sp, #16]
  426cb8:	ldp	x29, x30, [sp], #32
  426cbc:	ret
  426cc0:	cbnz	w19, 426ce0 <jobserver_release@@Base+0x78>
  426cc4:	ldp	x20, x19, [sp, #16]
  426cc8:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  426ccc:	adrp	x1, 42a000 <_IO_stdin_used@@Base+0x2680>
  426cd0:	add	x0, x0, #0xb4a
  426cd4:	add	x1, x1, #0x3a9
  426cd8:	ldp	x29, x30, [sp], #32
  426cdc:	b	41b1c0 <perror_with_name@@Base>
  426ce0:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  426ce4:	add	x1, x1, #0xb3a
  426ce8:	mov	w2, #0x5                   	// #5
  426cec:	mov	x0, xzr
  426cf0:	bl	406dc0 <dcgettext@plt>
  426cf4:	bl	41a2bc <pfatal_with_name@@Base>

0000000000426cf8 <jobserver_acquire_all@@Base>:
  426cf8:	stp	x29, x30, [sp, #-48]!
  426cfc:	str	x21, [sp, #16]
  426d00:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  426d04:	stp	x20, x19, [sp, #32]
  426d08:	ldr	w19, [x21, #2464]
  426d0c:	mov	x29, sp
  426d10:	mov	w1, #0x3                   	// #3
  426d14:	mov	w0, w19
  426d18:	bl	42749c <rpl_fcntl@@Base>
  426d1c:	cmn	w0, #0x1
  426d20:	b.ne	426d38 <jobserver_acquire_all@@Base+0x40>  // b.any
  426d24:	bl	406e70 <__errno_location@plt>
  426d28:	ldr	w8, [x0]
  426d2c:	cmp	w8, #0x4
  426d30:	b.eq	426d10 <jobserver_acquire_all@@Base+0x18>  // b.none
  426d34:	b	426d78 <jobserver_acquire_all@@Base+0x80>
  426d38:	tbnz	w0, #31, 426d78 <jobserver_acquire_all@@Base+0x80>
  426d3c:	and	w20, w0, #0xfffff7ff
  426d40:	mov	w1, #0x4                   	// #4
  426d44:	mov	w0, w19
  426d48:	mov	w2, w20
  426d4c:	bl	42749c <rpl_fcntl@@Base>
  426d50:	cmn	w0, #0x1
  426d54:	b.ne	426d74 <jobserver_acquire_all@@Base+0x7c>  // b.any
  426d58:	bl	406e70 <__errno_location@plt>
  426d5c:	ldr	w8, [x0]
  426d60:	cmp	w8, #0x4
  426d64:	b.eq	426d40 <jobserver_acquire_all@@Base+0x48>  // b.none
  426d68:	adrp	x0, 42d000 <_IO_stdin_used@@Base+0x5680>
  426d6c:	add	x0, x0, #0xb86
  426d70:	bl	41a2bc <pfatal_with_name@@Base>
  426d74:	tbnz	w0, #31, 426d68 <jobserver_acquire_all@@Base+0x70>
  426d78:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  426d7c:	ldr	w0, [x20, #2468]
  426d80:	bl	406b10 <close@plt>
  426d84:	mov	w19, wzr
  426d88:	mov	w8, #0xffffffff            	// #-1
  426d8c:	str	w8, [x20, #2468]
  426d90:	ldr	w0, [x21, #2464]
  426d94:	add	x1, x29, #0x1c
  426d98:	mov	w2, #0x1                   	// #1
  426d9c:	bl	406d50 <read@plt>
  426da0:	cmn	w0, #0x1
  426da4:	b.ne	426dbc <jobserver_acquire_all@@Base+0xc4>  // b.any
  426da8:	bl	406e70 <__errno_location@plt>
  426dac:	ldr	w8, [x0]
  426db0:	cmp	w8, #0x4
  426db4:	b.eq	426d90 <jobserver_acquire_all@@Base+0x98>  // b.none
  426db8:	b	426dcc <jobserver_acquire_all@@Base+0xd4>
  426dbc:	cmp	w0, #0x1
  426dc0:	b.ne	426dcc <jobserver_acquire_all@@Base+0xd4>  // b.any
  426dc4:	add	w19, w19, #0x1
  426dc8:	b	426d90 <jobserver_acquire_all@@Base+0x98>
  426dcc:	mov	w0, w19
  426dd0:	ldp	x20, x19, [sp, #32]
  426dd4:	ldr	x21, [sp, #16]
  426dd8:	ldp	x29, x30, [sp], #48
  426ddc:	ret

0000000000426de0 <jobserver_pre_child@@Base>:
  426de0:	stp	x29, x30, [sp, #-32]!
  426de4:	stp	x20, x19, [sp, #16]
  426de8:	mov	x29, sp
  426dec:	cbz	w0, 426eb4 <jobserver_pre_child@@Base+0xd4>
  426df0:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426df4:	ldr	w19, [x8, #2464]
  426df8:	tbnz	w19, #31, 426eb4 <jobserver_pre_child@@Base+0xd4>
  426dfc:	mov	w1, #0x1                   	// #1
  426e00:	mov	w0, w19
  426e04:	bl	42749c <rpl_fcntl@@Base>
  426e08:	cmn	w0, #0x1
  426e0c:	b.ne	426e24 <jobserver_pre_child@@Base+0x44>  // b.any
  426e10:	bl	406e70 <__errno_location@plt>
  426e14:	ldr	w8, [x0]
  426e18:	cmp	w8, #0x4
  426e1c:	b.eq	426dfc <jobserver_pre_child@@Base+0x1c>  // b.none
  426e20:	b	426e54 <jobserver_pre_child@@Base+0x74>
  426e24:	tbnz	w0, #31, 426e54 <jobserver_pre_child@@Base+0x74>
  426e28:	and	w20, w0, #0xfffffffe
  426e2c:	mov	w1, #0x2                   	// #2
  426e30:	mov	w0, w19
  426e34:	mov	w2, w20
  426e38:	bl	42749c <rpl_fcntl@@Base>
  426e3c:	cmn	w0, #0x1
  426e40:	b.ne	426e54 <jobserver_pre_child@@Base+0x74>  // b.any
  426e44:	bl	406e70 <__errno_location@plt>
  426e48:	ldr	w8, [x0]
  426e4c:	cmp	w8, #0x4
  426e50:	b.eq	426e2c <jobserver_pre_child@@Base+0x4c>  // b.none
  426e54:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426e58:	ldr	w19, [x8, #2468]
  426e5c:	mov	w1, #0x1                   	// #1
  426e60:	mov	w0, w19
  426e64:	bl	42749c <rpl_fcntl@@Base>
  426e68:	cmn	w0, #0x1
  426e6c:	b.ne	426e84 <jobserver_pre_child@@Base+0xa4>  // b.any
  426e70:	bl	406e70 <__errno_location@plt>
  426e74:	ldr	w8, [x0]
  426e78:	cmp	w8, #0x4
  426e7c:	b.eq	426e5c <jobserver_pre_child@@Base+0x7c>  // b.none
  426e80:	b	426eb4 <jobserver_pre_child@@Base+0xd4>
  426e84:	tbnz	w0, #31, 426eb4 <jobserver_pre_child@@Base+0xd4>
  426e88:	and	w20, w0, #0xfffffffe
  426e8c:	mov	w1, #0x2                   	// #2
  426e90:	mov	w0, w19
  426e94:	mov	w2, w20
  426e98:	bl	42749c <rpl_fcntl@@Base>
  426e9c:	cmn	w0, #0x1
  426ea0:	b.ne	426eb4 <jobserver_pre_child@@Base+0xd4>  // b.any
  426ea4:	bl	406e70 <__errno_location@plt>
  426ea8:	ldr	w8, [x0]
  426eac:	cmp	w8, #0x4
  426eb0:	b.eq	426e8c <jobserver_pre_child@@Base+0xac>  // b.none
  426eb4:	ldp	x20, x19, [sp, #16]
  426eb8:	ldp	x29, x30, [sp], #32
  426ebc:	ret

0000000000426ec0 <fd_inherit@@Base>:
  426ec0:	stp	x29, x30, [sp, #-32]!
  426ec4:	stp	x20, x19, [sp, #16]
  426ec8:	mov	w19, w0
  426ecc:	mov	x29, sp
  426ed0:	mov	w1, #0x1                   	// #1
  426ed4:	mov	w0, w19
  426ed8:	bl	42749c <rpl_fcntl@@Base>
  426edc:	cmn	w0, #0x1
  426ee0:	b.ne	426ef8 <fd_inherit@@Base+0x38>  // b.any
  426ee4:	bl	406e70 <__errno_location@plt>
  426ee8:	ldr	w8, [x0]
  426eec:	cmp	w8, #0x4
  426ef0:	b.eq	426ed0 <fd_inherit@@Base+0x10>  // b.none
  426ef4:	b	426f28 <fd_inherit@@Base+0x68>
  426ef8:	tbnz	w0, #31, 426f28 <fd_inherit@@Base+0x68>
  426efc:	and	w20, w0, #0xfffffffe
  426f00:	mov	w1, #0x2                   	// #2
  426f04:	mov	w0, w19
  426f08:	mov	w2, w20
  426f0c:	bl	42749c <rpl_fcntl@@Base>
  426f10:	cmn	w0, #0x1
  426f14:	b.ne	426f28 <fd_inherit@@Base+0x68>  // b.any
  426f18:	bl	406e70 <__errno_location@plt>
  426f1c:	ldr	w8, [x0]
  426f20:	cmp	w8, #0x4
  426f24:	b.eq	426f00 <fd_inherit@@Base+0x40>  // b.none
  426f28:	ldp	x20, x19, [sp, #16]
  426f2c:	ldp	x29, x30, [sp], #32
  426f30:	ret

0000000000426f34 <jobserver_post_child@@Base>:
  426f34:	stp	x29, x30, [sp, #-32]!
  426f38:	stp	x20, x19, [sp, #16]
  426f3c:	mov	x29, sp
  426f40:	cbz	w0, 427008 <jobserver_post_child@@Base+0xd4>
  426f44:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426f48:	ldr	w19, [x8, #2464]
  426f4c:	tbnz	w19, #31, 427008 <jobserver_post_child@@Base+0xd4>
  426f50:	mov	w1, #0x1                   	// #1
  426f54:	mov	w0, w19
  426f58:	bl	42749c <rpl_fcntl@@Base>
  426f5c:	cmn	w0, #0x1
  426f60:	b.ne	426f78 <jobserver_post_child@@Base+0x44>  // b.any
  426f64:	bl	406e70 <__errno_location@plt>
  426f68:	ldr	w8, [x0]
  426f6c:	cmp	w8, #0x4
  426f70:	b.eq	426f50 <jobserver_post_child@@Base+0x1c>  // b.none
  426f74:	b	426fa8 <jobserver_post_child@@Base+0x74>
  426f78:	tbnz	w0, #31, 426fa8 <jobserver_post_child@@Base+0x74>
  426f7c:	orr	w20, w0, #0x1
  426f80:	mov	w1, #0x2                   	// #2
  426f84:	mov	w0, w19
  426f88:	mov	w2, w20
  426f8c:	bl	42749c <rpl_fcntl@@Base>
  426f90:	cmn	w0, #0x1
  426f94:	b.ne	426fa8 <jobserver_post_child@@Base+0x74>  // b.any
  426f98:	bl	406e70 <__errno_location@plt>
  426f9c:	ldr	w8, [x0]
  426fa0:	cmp	w8, #0x4
  426fa4:	b.eq	426f80 <jobserver_post_child@@Base+0x4c>  // b.none
  426fa8:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  426fac:	ldr	w19, [x8, #2468]
  426fb0:	mov	w1, #0x1                   	// #1
  426fb4:	mov	w0, w19
  426fb8:	bl	42749c <rpl_fcntl@@Base>
  426fbc:	cmn	w0, #0x1
  426fc0:	b.ne	426fd8 <jobserver_post_child@@Base+0xa4>  // b.any
  426fc4:	bl	406e70 <__errno_location@plt>
  426fc8:	ldr	w8, [x0]
  426fcc:	cmp	w8, #0x4
  426fd0:	b.eq	426fb0 <jobserver_post_child@@Base+0x7c>  // b.none
  426fd4:	b	427008 <jobserver_post_child@@Base+0xd4>
  426fd8:	tbnz	w0, #31, 427008 <jobserver_post_child@@Base+0xd4>
  426fdc:	orr	w20, w0, #0x1
  426fe0:	mov	w1, #0x2                   	// #2
  426fe4:	mov	w0, w19
  426fe8:	mov	w2, w20
  426fec:	bl	42749c <rpl_fcntl@@Base>
  426ff0:	cmn	w0, #0x1
  426ff4:	b.ne	427008 <jobserver_post_child@@Base+0xd4>  // b.any
  426ff8:	bl	406e70 <__errno_location@plt>
  426ffc:	ldr	w8, [x0]
  427000:	cmp	w8, #0x4
  427004:	b.eq	426fe0 <jobserver_post_child@@Base+0xac>  // b.none
  427008:	ldp	x20, x19, [sp, #16]
  42700c:	ldp	x29, x30, [sp], #32
  427010:	ret

0000000000427014 <jobserver_signal@@Base>:
  427014:	ret

0000000000427018 <jobserver_pre_acquire@@Base>:
  427018:	ret

000000000042701c <jobserver_acquire@@Base>:
  42701c:	sub	sp, sp, #0x150
  427020:	stp	x20, x19, [sp, #320]
  427024:	mov	w19, w0
  427028:	add	x0, sp, #0x80
  42702c:	stp	x29, x30, [sp, #272]
  427030:	str	x28, [sp, #288]
  427034:	stp	x22, x21, [sp, #304]
  427038:	add	x29, sp, #0x110
  42703c:	bl	4069d0 <sigemptyset@plt>
  427040:	cbz	w19, 427058 <jobserver_acquire@@Base+0x3c>
  427044:	adrp	x8, 42c000 <_IO_stdin_used@@Base+0x4680>
  427048:	ldr	q0, [x8, #1920]
  42704c:	sub	x19, x29, #0x10
  427050:	stur	q0, [x29, #-16]
  427054:	b	42705c <jobserver_acquire@@Base+0x40>
  427058:	mov	x19, xzr
  42705c:	adrp	x20, 43e000 <memcpy@GLIBC_2.17>
  427060:	mov	w21, #0x1                   	// #1
  427064:	mov	x22, sp
  427068:	b	427074 <jobserver_acquire@@Base+0x58>
  42706c:	cmp	w8, #0xb
  427070:	b.ne	427150 <jobserver_acquire@@Base+0x134>  // b.any
  427074:	ldr	w8, [x20, #2464]
  427078:	movi	v0.2d, #0x0
  42707c:	stp	q0, q0, [sp]
  427080:	stp	q0, q0, [sp, #32]
  427084:	add	w9, w8, #0x3f
  427088:	cmp	w8, #0x0
  42708c:	csel	w9, w9, w8, lt  // lt = tstop
  427090:	asr	w10, w9, #6
  427094:	stp	q0, q0, [sp, #64]
  427098:	stp	q0, q0, [sp, #96]
  42709c:	sbfiz	x10, x10, #3, #32
  4270a0:	ldr	x11, [x22, x10]
  4270a4:	and	w9, w9, #0xffffffc0
  4270a8:	sub	w9, w8, w9
  4270ac:	lsl	x9, x21, x9
  4270b0:	orr	x9, x9, x11
  4270b4:	add	w0, w8, #0x1
  4270b8:	mov	x1, sp
  4270bc:	add	x5, sp, #0x80
  4270c0:	mov	x2, xzr
  4270c4:	mov	x3, xzr
  4270c8:	mov	x4, x19
  4270cc:	str	x9, [x22, x10]
  4270d0:	bl	406a80 <pselect@plt>
  4270d4:	tbnz	w0, #31, 427118 <jobserver_acquire@@Base+0xfc>
  4270d8:	cbz	w0, 427138 <jobserver_acquire@@Base+0x11c>
  4270dc:	ldr	w0, [x20, #2464]
  4270e0:	add	x1, x29, #0x1c
  4270e4:	mov	w2, #0x1                   	// #1
  4270e8:	bl	406d50 <read@plt>
  4270ec:	cmn	w0, #0x1
  4270f0:	b.ne	427108 <jobserver_acquire@@Base+0xec>  // b.any
  4270f4:	bl	406e70 <__errno_location@plt>
  4270f8:	ldr	w8, [x0]
  4270fc:	cmp	w8, #0x4
  427100:	b.eq	4270dc <jobserver_acquire@@Base+0xc0>  // b.none
  427104:	b	42706c <jobserver_acquire@@Base+0x50>
  427108:	tbz	w0, #31, 427130 <jobserver_acquire@@Base+0x114>
  42710c:	bl	406e70 <__errno_location@plt>
  427110:	ldr	w8, [x0]
  427114:	b	42706c <jobserver_acquire@@Base+0x50>
  427118:	bl	406e70 <__errno_location@plt>
  42711c:	ldr	w8, [x0]
  427120:	cmp	w8, #0x4
  427124:	b.ne	427168 <jobserver_acquire@@Base+0x14c>  // b.any
  427128:	mov	w0, wzr
  42712c:	b	427138 <jobserver_acquire@@Base+0x11c>
  427130:	cmp	w0, #0x0
  427134:	cset	w0, ne  // ne = any
  427138:	ldp	x20, x19, [sp, #320]
  42713c:	ldp	x22, x21, [sp, #304]
  427140:	ldr	x28, [sp, #288]
  427144:	ldp	x29, x30, [sp, #272]
  427148:	add	sp, sp, #0x150
  42714c:	ret
  427150:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  427154:	add	x1, x1, #0xb77
  427158:	mov	w2, #0x5                   	// #5
  42715c:	mov	x0, xzr
  427160:	bl	406dc0 <dcgettext@plt>
  427164:	bl	41a2bc <pfatal_with_name@@Base>
  427168:	cmp	w8, #0x9
  42716c:	b.ne	427194 <jobserver_acquire@@Base+0x178>  // b.any
  427170:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  427174:	add	x1, x1, #0xb50
  427178:	mov	w2, #0x5                   	// #5
  42717c:	mov	x0, xzr
  427180:	bl	406dc0 <dcgettext@plt>
  427184:	mov	x2, x0
  427188:	mov	x0, xzr
  42718c:	mov	x1, xzr
  427190:	bl	41aff0 <fatal@@Base>
  427194:	adrp	x1, 42d000 <_IO_stdin_used@@Base+0x5680>
  427198:	add	x1, x1, #0xb65
  42719c:	mov	w2, #0x5                   	// #5
  4271a0:	mov	x0, xzr
  4271a4:	bl	406dc0 <dcgettext@plt>
  4271a8:	bl	41a2bc <pfatal_with_name@@Base>

00000000004271ac <get_bad_stdin@@Base>:
  4271ac:	stp	x29, x30, [sp, #-48]!
  4271b0:	str	x21, [sp, #16]
  4271b4:	adrp	x21, 43e000 <memcpy@GLIBC_2.17>
  4271b8:	ldr	w0, [x21, #2448]
  4271bc:	stp	x20, x19, [sp, #32]
  4271c0:	mov	x29, sp
  4271c4:	cmn	w0, #0x1
  4271c8:	b.eq	4271dc <get_bad_stdin@@Base+0x30>  // b.none
  4271cc:	ldp	x20, x19, [sp, #32]
  4271d0:	ldr	x21, [sp, #16]
  4271d4:	ldp	x29, x30, [sp], #48
  4271d8:	ret
  4271dc:	add	x0, x29, #0x18
  4271e0:	bl	406820 <pipe@plt>
  4271e4:	cbnz	w0, 427250 <get_bad_stdin@@Base+0xa4>
  4271e8:	ldr	w0, [x29, #28]
  4271ec:	bl	406b10 <close@plt>
  4271f0:	ldr	w19, [x29, #24]
  4271f4:	str	w19, [x21, #2448]
  4271f8:	mov	w1, #0x1                   	// #1
  4271fc:	mov	w0, w19
  427200:	bl	42749c <rpl_fcntl@@Base>
  427204:	cmn	w0, #0x1
  427208:	b.ne	427220 <get_bad_stdin@@Base+0x74>  // b.any
  42720c:	bl	406e70 <__errno_location@plt>
  427210:	ldr	w8, [x0]
  427214:	cmp	w8, #0x4
  427218:	b.eq	4271f8 <get_bad_stdin@@Base+0x4c>  // b.none
  42721c:	b	427250 <get_bad_stdin@@Base+0xa4>
  427220:	tbnz	w0, #31, 427250 <get_bad_stdin@@Base+0xa4>
  427224:	orr	w20, w0, #0x1
  427228:	mov	w1, #0x2                   	// #2
  42722c:	mov	w0, w19
  427230:	mov	w2, w20
  427234:	bl	42749c <rpl_fcntl@@Base>
  427238:	cmn	w0, #0x1
  42723c:	b.ne	427250 <get_bad_stdin@@Base+0xa4>  // b.any
  427240:	bl	406e70 <__errno_location@plt>
  427244:	ldr	w8, [x0]
  427248:	cmp	w8, #0x4
  42724c:	b.eq	427228 <get_bad_stdin@@Base+0x7c>  // b.none
  427250:	ldr	w0, [x21, #2448]
  427254:	ldp	x20, x19, [sp, #32]
  427258:	ldr	x21, [sp, #16]
  42725c:	ldp	x29, x30, [sp], #48
  427260:	ret

0000000000427264 <remote_setup@@Base>:
  427264:	ret

0000000000427268 <remote_cleanup@@Base>:
  427268:	ret

000000000042726c <start_remote_job_p@@Base>:
  42726c:	mov	w0, wzr
  427270:	ret

0000000000427274 <start_remote_job@@Base>:
  427274:	mov	w0, #0xffffffff            	// #-1
  427278:	ret

000000000042727c <remote_status@@Base>:
  42727c:	stp	x29, x30, [sp, #-16]!
  427280:	mov	x29, sp
  427284:	bl	406e70 <__errno_location@plt>
  427288:	mov	x8, x0
  42728c:	mov	w9, #0xa                   	// #10
  427290:	mov	w0, #0xffffffff            	// #-1
  427294:	str	w9, [x8]
  427298:	ldp	x29, x30, [sp], #16
  42729c:	ret

00000000004272a0 <block_remote_children@@Base>:
  4272a0:	ret

00000000004272a4 <unblock_remote_children@@Base>:
  4272a4:	ret

00000000004272a8 <remote_kill@@Base>:
  4272a8:	mov	w0, #0xffffffff            	// #-1
  4272ac:	ret

00000000004272b0 <find_in_given_path@@Base>:
  4272b0:	stp	x29, x30, [sp, #-96]!
  4272b4:	stp	x20, x19, [sp, #80]
  4272b8:	mov	x19, x0
  4272bc:	mov	x8, x0
  4272c0:	stp	x28, x27, [sp, #16]
  4272c4:	stp	x26, x25, [sp, #32]
  4272c8:	stp	x24, x23, [sp, #48]
  4272cc:	stp	x22, x21, [sp, #64]
  4272d0:	mov	x29, sp
  4272d4:	ldrb	w9, [x8]
  4272d8:	cbz	w9, 4272ec <find_in_given_path@@Base+0x3c>
  4272dc:	cmp	w9, #0x2f
  4272e0:	b.eq	427398 <find_in_given_path@@Base+0xe8>  // b.none
  4272e4:	ldrb	w9, [x8, #1]!
  4272e8:	cbnz	w9, 4272dc <find_in_given_path@@Base+0x2c>
  4272ec:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x2680>
  4272f0:	add	x21, x21, #0x3a9
  4272f4:	cmp	x1, #0x0
  4272f8:	csel	x0, x21, x1, eq  // eq = none
  4272fc:	bl	419e60 <xstrdup@@Base>
  427300:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x3680>
  427304:	mov	x20, x0
  427308:	mov	w24, #0x2                   	// #2
  42730c:	add	x25, x25, #0x456
  427310:	mov	x26, x0
  427314:	mov	x27, xzr
  427318:	ldrb	w28, [x26, x27]
  42731c:	cbz	w28, 427334 <find_in_given_path@@Base+0x84>
  427320:	cmp	w28, #0x3a
  427324:	b.eq	427334 <find_in_given_path@@Base+0x84>  // b.none
  427328:	add	x27, x27, #0x1
  42732c:	ldrb	w28, [x26, x27]
  427330:	cbnz	w28, 427320 <find_in_given_path@@Base+0x70>
  427334:	cmp	x27, #0x0
  427338:	csel	x0, x25, x26, eq  // eq = none
  42733c:	mov	x1, x19
  427340:	mov	x2, x21
  427344:	strb	wzr, [x26, x27]
  427348:	bl	427480 <xconcatenated_filename@@Base>
  42734c:	mov	w1, #0x1                   	// #1
  427350:	mov	x22, x0
  427354:	bl	4068d0 <eaccess@plt>
  427358:	cbz	w0, 4273e0 <find_in_given_path@@Base+0x130>
  42735c:	bl	406e70 <__errno_location@plt>
  427360:	ldr	w8, [x0]
  427364:	mov	x23, x0
  427368:	mov	x0, x22
  42736c:	cmp	w8, #0x2
  427370:	csel	w24, w24, w8, eq  // eq = none
  427374:	bl	406c60 <free@plt>
  427378:	add	x8, x26, x27
  42737c:	add	x26, x8, #0x1
  427380:	cbnz	w28, 427314 <find_in_given_path@@Base+0x64>
  427384:	mov	x0, x20
  427388:	bl	406c60 <free@plt>
  42738c:	mov	x19, xzr
  427390:	str	w24, [x23]
  427394:	b	42743c <find_in_given_path@@Base+0x18c>
  427398:	tbnz	w2, #0, 42743c <find_in_given_path@@Base+0x18c>
  42739c:	adrp	x0, 42a000 <_IO_stdin_used@@Base+0x2680>
  4273a0:	add	x0, x0, #0x3a9
  4273a4:	mov	x1, x19
  4273a8:	mov	x2, x0
  4273ac:	bl	427480 <xconcatenated_filename@@Base>
  4273b0:	mov	w1, #0x1                   	// #1
  4273b4:	mov	x20, x0
  4273b8:	bl	4068d0 <eaccess@plt>
  4273bc:	cbz	w0, 42745c <find_in_given_path@@Base+0x1ac>
  4273c0:	bl	406e70 <__errno_location@plt>
  4273c4:	ldr	w22, [x0]
  4273c8:	mov	x21, x0
  4273cc:	mov	x0, x20
  4273d0:	bl	406c60 <free@plt>
  4273d4:	mov	x19, xzr
  4273d8:	str	w22, [x21]
  4273dc:	b	42743c <find_in_given_path@@Base+0x18c>
  4273e0:	mov	x0, x22
  4273e4:	mov	x1, x19
  4273e8:	bl	406c10 <strcmp@plt>
  4273ec:	cbnz	w0, 427430 <find_in_given_path@@Base+0x180>
  4273f0:	mov	x0, x22
  4273f4:	bl	406c60 <free@plt>
  4273f8:	mov	x0, x19
  4273fc:	bl	406750 <strlen@plt>
  427400:	add	x0, x0, #0x3
  427404:	bl	419e14 <xmalloc@@Base>
  427408:	mov	x22, x0
  42740c:	mov	w8, #0x2f2e                	// #12078
  427410:	mov	x21, x0
  427414:	mov	x0, x19
  427418:	strh	w8, [x21], #2
  42741c:	bl	406750 <strlen@plt>
  427420:	add	x2, x0, #0x1
  427424:	mov	x0, x21
  427428:	mov	x1, x19
  42742c:	bl	406710 <memcpy@plt>
  427430:	mov	x0, x20
  427434:	bl	406c60 <free@plt>
  427438:	mov	x19, x22
  42743c:	mov	x0, x19
  427440:	ldp	x20, x19, [sp, #80]
  427444:	ldp	x22, x21, [sp, #64]
  427448:	ldp	x24, x23, [sp, #48]
  42744c:	ldp	x26, x25, [sp, #32]
  427450:	ldp	x28, x27, [sp, #16]
  427454:	ldp	x29, x30, [sp], #96
  427458:	ret
  42745c:	mov	x0, x20
  427460:	mov	x1, x19
  427464:	bl	406c10 <strcmp@plt>
  427468:	cbz	w0, 427474 <find_in_given_path@@Base+0x1c4>
  42746c:	mov	x19, x20
  427470:	b	42743c <find_in_given_path@@Base+0x18c>
  427474:	mov	x0, x20
  427478:	bl	406c60 <free@plt>
  42747c:	b	42743c <find_in_given_path@@Base+0x18c>

0000000000427480 <xconcatenated_filename@@Base>:
  427480:	stp	x29, x30, [sp, #-16]!
  427484:	mov	x29, sp
  427488:	bl	427748 <concatenated_filename@@Base>
  42748c:	cbz	x0, 427498 <xconcatenated_filename@@Base+0x18>
  427490:	ldp	x29, x30, [sp], #16
  427494:	ret
  427498:	bl	42786c <xalloc_die@@Base>

000000000042749c <rpl_fcntl@@Base>:
  42749c:	sub	sp, sp, #0x100
  4274a0:	stp	x29, x30, [sp, #208]
  4274a4:	add	x29, sp, #0xd0
  4274a8:	mov	x8, #0xffffffffffffffd0    	// #-48
  4274ac:	mov	x9, sp
  4274b0:	sub	x10, x29, #0x50
  4274b4:	stp	x20, x19, [sp, #240]
  4274b8:	mov	w19, w0
  4274bc:	movk	x8, #0xff80, lsl #32
  4274c0:	add	x11, x29, #0x30
  4274c4:	cmp	w1, #0xb
  4274c8:	add	x9, x9, #0x80
  4274cc:	add	x10, x10, #0x30
  4274d0:	stp	x22, x21, [sp, #224]
  4274d4:	stp	x2, x3, [x29, #-80]
  4274d8:	stp	x4, x5, [x29, #-64]
  4274dc:	stp	x6, x7, [x29, #-48]
  4274e0:	stp	q1, q2, [sp, #16]
  4274e4:	stp	q3, q4, [sp, #48]
  4274e8:	str	q0, [sp]
  4274ec:	stp	q5, q6, [sp, #80]
  4274f0:	str	q7, [sp, #112]
  4274f4:	stp	x9, x8, [x29, #-16]
  4274f8:	stp	x11, x10, [x29, #-32]
  4274fc:	b.hi	427548 <rpl_fcntl@@Base+0xac>  // b.pmore
  427500:	mov	w8, #0x1                   	// #1
  427504:	lsl	w8, w8, w1
  427508:	mov	w9, #0x514                 	// #1300
  42750c:	tst	w8, w9
  427510:	b.ne	427580 <rpl_fcntl@@Base+0xe4>  // b.any
  427514:	mov	w9, #0xa0a                 	// #2570
  427518:	tst	w8, w9
  42751c:	b.ne	427574 <rpl_fcntl@@Base+0xd8>  // b.any
  427520:	cbnz	w1, 427548 <rpl_fcntl@@Base+0xac>
  427524:	ldursw	x8, [x29, #-8]
  427528:	tbz	w8, #31, 427628 <rpl_fcntl@@Base+0x18c>
  42752c:	add	w9, w8, #0x8
  427530:	cmn	w8, #0x8
  427534:	stur	w9, [x29, #-8]
  427538:	b.gt	427628 <rpl_fcntl@@Base+0x18c>
  42753c:	ldur	x9, [x29, #-24]
  427540:	add	x8, x9, x8
  427544:	b	427634 <rpl_fcntl@@Base+0x198>
  427548:	sub	w8, w1, #0x400
  42754c:	cmp	w8, #0xa
  427550:	b.hi	427604 <rpl_fcntl@@Base+0x168>  // b.pmore
  427554:	mov	w9, #0x1                   	// #1
  427558:	lsl	w9, w9, w8
  42755c:	mov	w10, #0x285                 	// #645
  427560:	tst	w9, w10
  427564:	b.ne	427580 <rpl_fcntl@@Base+0xe4>  // b.any
  427568:	mov	w10, #0x502                 	// #1282
  42756c:	tst	w9, w10
  427570:	b.eq	4275d8 <rpl_fcntl@@Base+0x13c>  // b.none
  427574:	mov	w0, w19
  427578:	bl	406cd0 <fcntl@plt>
  42757c:	b	4275bc <rpl_fcntl@@Base+0x120>
  427580:	ldursw	x8, [x29, #-8]
  427584:	tbz	w8, #31, 4275a4 <rpl_fcntl@@Base+0x108>
  427588:	add	w9, w8, #0x8
  42758c:	cmn	w8, #0x8
  427590:	stur	w9, [x29, #-8]
  427594:	b.gt	4275a4 <rpl_fcntl@@Base+0x108>
  427598:	ldur	x9, [x29, #-24]
  42759c:	add	x8, x9, x8
  4275a0:	b	4275b0 <rpl_fcntl@@Base+0x114>
  4275a4:	ldur	x8, [x29, #-32]
  4275a8:	add	x9, x8, #0x8
  4275ac:	stur	x9, [x29, #-32]
  4275b0:	ldr	w2, [x8]
  4275b4:	mov	w0, w19
  4275b8:	bl	406cd0 <fcntl@plt>
  4275bc:	mov	w20, w0
  4275c0:	mov	w0, w20
  4275c4:	ldp	x20, x19, [sp, #240]
  4275c8:	ldp	x22, x21, [sp, #224]
  4275cc:	ldp	x29, x30, [sp, #208]
  4275d0:	add	sp, sp, #0x100
  4275d4:	ret
  4275d8:	cmp	w8, #0x6
  4275dc:	b.ne	427604 <rpl_fcntl@@Base+0x168>  // b.any
  4275e0:	ldursw	x8, [x29, #-8]
  4275e4:	tbz	w8, #31, 427644 <rpl_fcntl@@Base+0x1a8>
  4275e8:	add	w9, w8, #0x8
  4275ec:	cmn	w8, #0x8
  4275f0:	stur	w9, [x29, #-8]
  4275f4:	b.gt	427644 <rpl_fcntl@@Base+0x1a8>
  4275f8:	ldur	x9, [x29, #-24]
  4275fc:	add	x8, x9, x8
  427600:	b	427650 <rpl_fcntl@@Base+0x1b4>
  427604:	ldursw	x8, [x29, #-8]
  427608:	tbz	w8, #31, 4276b0 <rpl_fcntl@@Base+0x214>
  42760c:	add	w9, w8, #0x8
  427610:	cmn	w8, #0x8
  427614:	stur	w9, [x29, #-8]
  427618:	b.gt	4276b0 <rpl_fcntl@@Base+0x214>
  42761c:	ldur	x9, [x29, #-24]
  427620:	add	x8, x9, x8
  427624:	b	4276bc <rpl_fcntl@@Base+0x220>
  427628:	ldur	x8, [x29, #-32]
  42762c:	add	x9, x8, #0x8
  427630:	stur	x9, [x29, #-32]
  427634:	ldr	w2, [x8]
  427638:	mov	w0, w19
  42763c:	mov	w1, wzr
  427640:	b	4275b8 <rpl_fcntl@@Base+0x11c>
  427644:	ldur	x8, [x29, #-32]
  427648:	add	x9, x8, #0x8
  42764c:	stur	x9, [x29, #-32]
  427650:	adrp	x22, 441000 <stdio_traced@@Base+0x1a48>
  427654:	ldr	w9, [x22, #4008]
  427658:	ldr	w21, [x8]
  42765c:	tbnz	w9, #31, 4276d8 <rpl_fcntl@@Base+0x23c>
  427660:	mov	w1, #0x406                 	// #1030
  427664:	mov	w0, w19
  427668:	mov	w2, w21
  42766c:	bl	406cd0 <fcntl@plt>
  427670:	mov	w20, w0
  427674:	tbz	w0, #31, 4276cc <rpl_fcntl@@Base+0x230>
  427678:	bl	406e70 <__errno_location@plt>
  42767c:	ldr	w8, [x0]
  427680:	cmp	w8, #0x16
  427684:	b.ne	4276cc <rpl_fcntl@@Base+0x230>  // b.any
  427688:	mov	w0, w19
  42768c:	mov	w1, wzr
  427690:	mov	w2, w21
  427694:	bl	406cd0 <fcntl@plt>
  427698:	mov	w20, w0
  42769c:	tbnz	w0, #31, 4275c0 <rpl_fcntl@@Base+0x124>
  4276a0:	mov	w8, #0xffffffff            	// #-1
  4276a4:	str	w8, [x22, #4008]
  4276a8:	mov	w8, #0x1                   	// #1
  4276ac:	b	4276f8 <rpl_fcntl@@Base+0x25c>
  4276b0:	ldur	x8, [x29, #-32]
  4276b4:	add	x9, x8, #0x8
  4276b8:	stur	x9, [x29, #-32]
  4276bc:	ldr	x2, [x8]
  4276c0:	mov	w0, w19
  4276c4:	bl	406cd0 <fcntl@plt>
  4276c8:	b	4275bc <rpl_fcntl@@Base+0x120>
  4276cc:	mov	w8, #0x1                   	// #1
  4276d0:	str	w8, [x22, #4008]
  4276d4:	b	4275c0 <rpl_fcntl@@Base+0x124>
  4276d8:	mov	w0, w19
  4276dc:	mov	w1, wzr
  4276e0:	mov	w2, w21
  4276e4:	bl	406cd0 <fcntl@plt>
  4276e8:	ldr	w8, [x22, #4008]
  4276ec:	mov	w20, w0
  4276f0:	cmn	w8, #0x1
  4276f4:	cset	w8, eq  // eq = none
  4276f8:	cbz	w8, 4275c0 <rpl_fcntl@@Base+0x124>
  4276fc:	tbnz	w20, #31, 4275c0 <rpl_fcntl@@Base+0x124>
  427700:	mov	w1, #0x1                   	// #1
  427704:	mov	w0, w20
  427708:	bl	406cd0 <fcntl@plt>
  42770c:	tbnz	w0, #31, 427728 <rpl_fcntl@@Base+0x28c>
  427710:	orr	w2, w0, #0x1
  427714:	mov	w1, #0x2                   	// #2
  427718:	mov	w0, w20
  42771c:	bl	406cd0 <fcntl@plt>
  427720:	cmn	w0, #0x1
  427724:	b.ne	4275c0 <rpl_fcntl@@Base+0x124>  // b.any
  427728:	bl	406e70 <__errno_location@plt>
  42772c:	ldr	w21, [x0]
  427730:	mov	x19, x0
  427734:	mov	w0, w20
  427738:	bl	406b10 <close@plt>
  42773c:	str	w21, [x19]
  427740:	mov	w20, #0xffffffff            	// #-1
  427744:	b	4275c0 <rpl_fcntl@@Base+0x124>

0000000000427748 <concatenated_filename@@Base>:
  427748:	stp	x29, x30, [sp, #-64]!
  42774c:	stp	x20, x19, [sp, #48]
  427750:	mov	x20, x1
  427754:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x3680>
  427758:	add	x1, x1, #0x456
  42775c:	stp	x24, x23, [sp, #16]
  427760:	stp	x22, x21, [sp, #32]
  427764:	mov	x29, sp
  427768:	mov	x19, x2
  42776c:	mov	x21, x0
  427770:	bl	406c10 <strcmp@plt>
  427774:	cbz	w0, 4277b4 <concatenated_filename@@Base+0x6c>
  427778:	mov	x0, x21
  42777c:	bl	406750 <strlen@plt>
  427780:	mov	x22, x0
  427784:	cbz	x0, 4277d0 <concatenated_filename@@Base+0x88>
  427788:	add	x8, x22, x21
  42778c:	ldurb	w8, [x8, #-1]
  427790:	cmp	w8, #0x2f
  427794:	cset	w24, ne  // ne = any
  427798:	mov	x0, x20
  42779c:	bl	406750 <strlen@plt>
  4277a0:	mov	x23, x0
  4277a4:	cbz	x19, 4277e4 <concatenated_filename@@Base+0x9c>
  4277a8:	mov	x0, x19
  4277ac:	bl	406750 <strlen@plt>
  4277b0:	b	4277e8 <concatenated_filename@@Base+0xa0>
  4277b4:	mov	x0, x20
  4277b8:	bl	406750 <strlen@plt>
  4277bc:	mov	x21, x0
  4277c0:	cbz	x19, 427828 <concatenated_filename@@Base+0xe0>
  4277c4:	mov	x0, x19
  4277c8:	bl	406750 <strlen@plt>
  4277cc:	b	42782c <concatenated_filename@@Base+0xe4>
  4277d0:	mov	w24, wzr
  4277d4:	mov	x0, x20
  4277d8:	bl	406750 <strlen@plt>
  4277dc:	mov	x23, x0
  4277e0:	cbnz	x19, 4277a8 <concatenated_filename@@Base+0x60>
  4277e4:	mov	x0, xzr
  4277e8:	add	x8, x22, x24
  4277ec:	add	x8, x8, x23
  4277f0:	add	x8, x8, x0
  4277f4:	add	x0, x8, #0x1
  4277f8:	bl	406990 <malloc@plt>
  4277fc:	mov	x23, x0
  427800:	cbz	x0, 427854 <concatenated_filename@@Base+0x10c>
  427804:	mov	x0, x23
  427808:	mov	x1, x21
  42780c:	mov	x2, x22
  427810:	bl	406710 <memcpy@plt>
  427814:	add	x0, x23, x22
  427818:	cbz	x24, 427840 <concatenated_filename@@Base+0xf8>
  42781c:	mov	w8, #0x2f                  	// #47
  427820:	strb	w8, [x0], #1
  427824:	b	427840 <concatenated_filename@@Base+0xf8>
  427828:	mov	x0, xzr
  42782c:	add	x8, x21, x0
  427830:	add	x0, x8, #0x1
  427834:	bl	406990 <malloc@plt>
  427838:	mov	x23, x0
  42783c:	cbz	x0, 427854 <concatenated_filename@@Base+0x10c>
  427840:	mov	x1, x20
  427844:	bl	406900 <stpcpy@plt>
  427848:	cbz	x19, 427854 <concatenated_filename@@Base+0x10c>
  42784c:	mov	x1, x19
  427850:	bl	406900 <stpcpy@plt>
  427854:	mov	x0, x23
  427858:	ldp	x20, x19, [sp, #48]
  42785c:	ldp	x22, x21, [sp, #32]
  427860:	ldp	x24, x23, [sp, #16]
  427864:	ldp	x29, x30, [sp], #64
  427868:	ret

000000000042786c <xalloc_die@@Base>:
  42786c:	stp	x29, x30, [sp, #-32]!
  427870:	str	x19, [sp, #16]
  427874:	adrp	x8, 43e000 <memcpy@GLIBC_2.17>
  427878:	ldr	w19, [x8, #2472]
  42787c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x1680>
  427880:	add	x1, x1, #0xd5b
  427884:	mov	w2, #0x5                   	// #5
  427888:	mov	x0, xzr
  42788c:	mov	x29, sp
  427890:	bl	406dc0 <dcgettext@plt>
  427894:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x2680>
  427898:	mov	x3, x0
  42789c:	add	x2, x2, #0x5b6
  4278a0:	mov	w0, w19
  4278a4:	mov	w1, wzr
  4278a8:	bl	41ae34 <error@@Base>
  4278ac:	bl	406b70 <abort@plt>

00000000004278b0 <__libc_csu_init@@Base>:
  4278b0:	stp	x29, x30, [sp, #-64]!
  4278b4:	mov	x29, sp
  4278b8:	stp	x19, x20, [sp, #16]
  4278bc:	adrp	x20, 43d000 <_IO_stdin_used@@Base+0x15680>
  4278c0:	add	x20, x20, #0xde0
  4278c4:	stp	x21, x22, [sp, #32]
  4278c8:	adrp	x21, 43d000 <_IO_stdin_used@@Base+0x15680>
  4278cc:	add	x21, x21, #0xdd8
  4278d0:	sub	x20, x20, x21
  4278d4:	mov	w22, w0
  4278d8:	stp	x23, x24, [sp, #48]
  4278dc:	mov	x23, x1
  4278e0:	mov	x24, x2
  4278e4:	bl	4066d8 <memcpy@plt-0x38>
  4278e8:	cmp	xzr, x20, asr #3
  4278ec:	b.eq	427918 <__libc_csu_init@@Base+0x68>  // b.none
  4278f0:	asr	x20, x20, #3
  4278f4:	mov	x19, #0x0                   	// #0
  4278f8:	ldr	x3, [x21, x19, lsl #3]
  4278fc:	mov	x2, x24
  427900:	add	x19, x19, #0x1
  427904:	mov	x1, x23
  427908:	mov	w0, w22
  42790c:	blr	x3
  427910:	cmp	x20, x19
  427914:	b.ne	4278f8 <__libc_csu_init@@Base+0x48>  // b.any
  427918:	ldp	x19, x20, [sp, #16]
  42791c:	ldp	x21, x22, [sp, #32]
  427920:	ldp	x23, x24, [sp, #48]
  427924:	ldp	x29, x30, [sp], #64
  427928:	ret
  42792c:	nop

0000000000427930 <__libc_csu_fini@@Base>:
  427930:	ret
  427934:	nop
  427938:	adrp	x2, 43e000 <memcpy@GLIBC_2.17>
  42793c:	mov	x1, #0x0                   	// #0
  427940:	ldr	x2, [x2, #1032]
  427944:	b	406850 <__cxa_atexit@plt>
  427948:	mov	x2, x1
  42794c:	mov	x1, x0
  427950:	mov	w0, #0x0                   	// #0
  427954:	b	406e90 <__xstat@plt>
  427958:	mov	x2, x1
  42795c:	mov	x1, x0
  427960:	mov	w0, #0x0                   	// #0
  427964:	b	406d30 <__lxstat@plt>

Disassembly of section .fini:

0000000000427968 <.fini>:
  427968:	stp	x29, x30, [sp, #-16]!
  42796c:	mov	x29, sp
  427970:	ldp	x29, x30, [sp], #16
  427974:	ret
