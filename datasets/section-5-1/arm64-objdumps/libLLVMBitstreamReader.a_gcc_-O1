In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_gcc_-O1:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	ldrb	w2, [x1, #8]
      10:	tbnz	w2, #0, 80 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x80>
      14:	mov	x19, x8
      18:	ldrb	w2, [x1, #8]
      1c:	ubfx	x2, x2, #1, #3
      20:	cmp	w2, #0x2
      24:	b.eq	110 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x110>  // b.none
      28:	b.ls	a0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xa0>  // b.plast
      2c:	cmp	w2, #0x4
      30:	b.ne	c8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xc8>  // b.any
      34:	add	x8, sp, #0x20
      38:	mov	w1, #0x6                   	// #6
      3c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      40:	ldrb	w0, [sp, #40]
      44:	and	w1, w0, #0xfffffffd
      48:	strb	w1, [sp, #40]
      4c:	tbnz	w0, #0, 144 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x144>
      50:	ldr	x1, [sp, #32]
      54:	tst	w1, #0xffffffc0
      58:	b.ne	164 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x164>  // b.any
      5c:	ldrb	w0, [x19, #8]
      60:	and	w0, w0, #0xfffffffe
      64:	orr	w0, w0, #0x2
      68:	strb	w0, [x19, #8]
      6c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      70:	add	x0, x0, #0x0
      74:	ldrb	w0, [x0, w1, uxtw]
      78:	str	x0, [x19]
      7c:	b	b8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xb8>
      80:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      84:	add	x3, x3, #0x0
      88:	mov	w2, #0x45                  	// #69
      8c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      90:	add	x1, x1, #0x0
      94:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      98:	add	x0, x0, #0x0
      9c:	bl	0 <__assert_fail>
      a0:	cmp	w2, #0x1
      a4:	b.ne	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>  // b.any
      a8:	ldr	x1, [x1]
      ac:	cmp	w1, #0x40
      b0:	b.hi	f0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xf0>  // b.pmore
      b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      b8:	mov	x0, x19
      bc:	ldr	x19, [sp, #16]
      c0:	ldp	x29, x30, [sp], #48
      c4:	ret
      c8:	sub	w2, w2, #0x3
      cc:	and	w2, w2, #0xfffffffd
      d0:	tst	w2, #0xff
      d4:	b.ne	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>  // b.any
      d8:	mov	w2, #0x4b                  	// #75
      dc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      e0:	add	x1, x1, #0x0
      e4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      e8:	add	x0, x0, #0x0
      ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
      f0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      f4:	add	x3, x3, #0x0
      f8:	mov	w2, #0x4d                  	// #77
      fc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     100:	add	x1, x1, #0x0
     104:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     108:	add	x0, x0, #0x0
     10c:	bl	0 <__assert_fail>
     110:	ldr	x1, [x1]
     114:	cmp	w1, #0x40
     118:	b.hi	124 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x124>  // b.pmore
     11c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     120:	b	b8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xb8>
     124:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     128:	add	x3, x3, #0x0
     12c:	mov	w2, #0x50                  	// #80
     130:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     134:	add	x1, x1, #0x0
     138:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     13c:	add	x0, x0, #0x0
     140:	bl	0 <__assert_fail>
     144:	ldr	x0, [sp, #32]
     148:	ldrb	w1, [x19, #8]
     14c:	orr	w1, w1, #0x3
     150:	strb	w1, [x19, #8]
     154:	ands	x0, x0, #0xfffffffffffffffe
     158:	cbz	x0, 184 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x184>
     15c:	str	x0, [x19]
     160:	b	b8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xb8>
     164:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     168:	add	x3, x3, #0x0
     16c:	mov	w2, #0x9d                  	// #157
     170:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     174:	add	x1, x1, #0x0
     178:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     17c:	add	x0, x0, #0x0
     180:	bl	0 <__assert_fail>
     184:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     188:	add	x3, x3, #0x0
     18c:	mov	w2, #0x1ce                 	// #462
     190:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     194:	add	x1, x1, #0x0
     198:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     19c:	add	x0, x0, #0x0
     1a0:	bl	0 <__assert_fail>
     1a4:	mov	w2, #0x58                  	// #88
     1a8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1ac:	add	x1, x1, #0x0
     1b0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1b4:	add	x0, x0, #0x0
     1b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000001bc <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     1bc:	sub	sp, sp, #0x230
     1c0:	stp	x29, x30, [sp]
     1c4:	mov	x29, sp
     1c8:	stp	x19, x20, [sp, #16]
     1cc:	stp	x21, x22, [sp, #32]
     1d0:	mov	x20, x8
     1d4:	mov	x19, x0
     1d8:	cmp	w1, #0x3
     1dc:	b.eq	250 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x94>  // b.none
     1e0:	stp	x27, x28, [sp, #80]
     1e4:	sub	w1, w1, #0x4
     1e8:	ldr	x2, [x0, #40]
     1ec:	ldr	x0, [x0, #48]
     1f0:	sub	x0, x0, x2
     1f4:	cmp	x1, x0, asr #4
     1f8:	b.cs	c8c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xad0>  // b.hs, b.nlast
     1fc:	lsl	x1, x1, #4
     200:	ldr	x21, [x2, x1]
     204:	ldr	w0, [x21, #8]
     208:	cbz	w0, ca4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xae8>
     20c:	ldr	x1, [x21]
     210:	ldrb	w0, [x1, #8]
     214:	tbz	w0, #0, ccc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb10>
     218:	stp	x23, x24, [sp, #48]
     21c:	ldr	w28, [x1]
     220:	ldr	w23, [x21, #8]
     224:	cmp	w23, #0x1
     228:	b.ls	1958 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x179c>  // b.plast
     22c:	stp	x25, x26, [sp, #64]
     230:	mov	w22, #0x1                   	// #1
     234:	add	x25, sp, #0x118
     238:	add	x27, x25, #0x10
     23c:	str	x27, [sp, #112]
     240:	add	x26, sp, #0xf8
     244:	add	x0, x26, #0x10
     248:	str	x0, [sp, #104]
     24c:	b	1318 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x115c>
     250:	str	x0, [sp, #104]
     254:	add	x8, sp, #0x190
     258:	mov	w1, #0x6                   	// #6
     25c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     260:	ldrb	w0, [sp, #408]
     264:	and	w21, w0, #0x1
     268:	ldrb	w1, [sp, #224]
     26c:	bfxil	w1, w21, #0, #1
     270:	orr	w1, w1, #0x2
     274:	strb	w1, [sp, #224]
     278:	and	w0, w0, #0xfffffffd
     27c:	strb	w0, [sp, #408]
     280:	cbnz	w21, 384 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1c8>
     284:	ldr	x22, [sp, #400]
     288:	str	w22, [sp, #216]
     28c:	and	x0, x1, #0xff
     290:	and	w0, w0, #0xfffffffd
     294:	strb	w0, [sp, #224]
     298:	tst	w22, #0x20
     29c:	b.eq	3d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x21c>  // b.none
     2a0:	stp	x23, x24, [sp, #48]
     2a4:	stp	x25, x26, [sp, #64]
     2a8:	stp	x27, x28, [sp, #80]
     2ac:	and	w22, w22, #0x1f
     2b0:	mov	w26, #0x0                   	// #0
     2b4:	add	x27, sp, #0x118
     2b8:	add	x0, x27, #0x10
     2bc:	str	x0, [sp, #120]
     2c0:	adrp	x28, 0 <_ZTVN4llvm18raw_string_ostreamE>
     2c4:	ldr	x0, [x28]
     2c8:	add	x0, x0, #0x10
     2cc:	str	x0, [sp, #128]
     2d0:	ldr	w23, [x19, #32]
     2d4:	cmp	w23, #0x5
     2d8:	b.ls	3fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x240>  // b.plast
     2dc:	ldr	x0, [x19, #24]
     2e0:	and	x24, x0, #0x3f
     2e4:	lsr	x0, x0, #6
     2e8:	str	x0, [x19, #24]
     2ec:	sub	w23, w23, #0x6
     2f0:	str	w23, [x19, #32]
     2f4:	str	w24, [sp, #416]
     2f8:	mov	w23, w21
     2fc:	ldrb	w0, [sp, #224]
     300:	tbnz	w0, #1, 6c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x504>
     304:	ldrb	w0, [sp, #224]
     308:	tbz	w0, #0, 320 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x164>
     30c:	ldr	x0, [sp, #216]
     310:	cbz	x0, 320 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x164>
     314:	ldr	x1, [x0]
     318:	ldr	x1, [x1, #8]
     31c:	blr	x1
     320:	ldrb	w0, [sp, #224]
     324:	bfxil	w0, w23, #0, #1
     328:	orr	w0, w0, #0x2
     32c:	strb	w0, [sp, #224]
     330:	cbnz	w23, 6c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x50c>
     334:	add	w26, w26, #0x5
     338:	ldr	w0, [sp, #416]
     33c:	str	w0, [sp, #216]
     340:	ldrb	w1, [sp, #224]
     344:	and	w1, w1, #0xfffffffd
     348:	strb	w1, [sp, #224]
     34c:	and	w1, w0, #0x1f
     350:	lsl	w1, w1, w26
     354:	orr	w22, w22, w1
     358:	tbnz	w0, #5, 2d0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x114>
     35c:	ldrb	w0, [sp, #192]
     360:	and	w0, w0, #0xfffffffe
     364:	strb	w0, [sp, #192]
     368:	str	w22, [sp, #184]
     36c:	ldrb	w0, [sp, #224]
     370:	tbnz	w0, #0, 3ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x230>
     374:	ldp	x23, x24, [sp, #48]
     378:	ldp	x25, x26, [sp, #64]
     37c:	ldp	x27, x28, [sp, #80]
     380:	b	3b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f4>
     384:	ldrb	w0, [sp, #192]
     388:	orr	w0, w0, #0x1
     38c:	strb	w0, [sp, #192]
     390:	str	xzr, [sp, #216]
     394:	ldr	x0, [sp, #400]
     398:	str	x0, [sp, #184]
     39c:	ldr	x0, [sp, #216]
     3a0:	cbz	x0, 3b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f4>
     3a4:	ldr	x1, [x0]
     3a8:	ldr	x1, [x1, #8]
     3ac:	blr	x1
     3b0:	ldrb	w0, [sp, #192]
     3b4:	tbz	w0, #0, 730 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x574>
     3b8:	ldr	x0, [sp, #184]
     3bc:	ldrb	w1, [x20, #8]
     3c0:	orr	w1, w1, #0x3
     3c4:	strb	w1, [x20, #8]
     3c8:	ands	x0, x0, #0xfffffffffffffffe
     3cc:	cbz	x0, 704 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x548>
     3d0:	str	x0, [x20]
     3d4:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
     3d8:	ldrb	w0, [sp, #192]
     3dc:	and	w0, w0, #0xfffffffe
     3e0:	strb	w0, [sp, #192]
     3e4:	str	w22, [sp, #184]
     3e8:	b	3b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f4>
     3ec:	ldp	x23, x24, [sp, #48]
     3f0:	ldp	x25, x26, [sp, #64]
     3f4:	ldp	x27, x28, [sp, #80]
     3f8:	b	39c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1e0>
     3fc:	str	xzr, [sp, #112]
     400:	cbz	w23, 40c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x250>
     404:	ldr	x0, [x19, #24]
     408:	str	x0, [sp, #112]
     40c:	ldr	x25, [x19, #16]
     410:	ldr	x24, [x19, #8]
     414:	cmp	x25, x24
     418:	b.cs	498 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2dc>  // b.hs, b.nlast
     41c:	ldr	x0, [x19]
     420:	add	x3, x0, x25
     424:	add	x1, x25, #0x8
     428:	cmp	x24, x1
     42c:	b.cc	580 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3c4>  // b.lo, b.ul, b.last
     430:	ldr	x0, [x0, x25]
     434:	str	x0, [x19, #24]
     438:	mov	w1, #0x8                   	// #8
     43c:	add	x25, x25, w1, uxtw
     440:	str	x25, [x19, #16]
     444:	lsl	w1, w1, #3
     448:	str	w1, [x19, #32]
     44c:	mov	w24, #0x6                   	// #6
     450:	sub	w24, w24, w23
     454:	ldr	w25, [x19, #32]
     458:	cmp	w24, w25
     45c:	b.hi	5d0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x414>  // b.pmore
     460:	ldr	x1, [x19, #24]
     464:	lsr	x24, x1, x24
     468:	str	x24, [x19, #24]
     46c:	add	w0, w23, w25
     470:	sub	w0, w0, #0x6
     474:	str	w0, [x19, #32]
     478:	add	w0, w23, #0x3a
     47c:	mov	x24, #0xffffffffffffffff    	// #-1
     480:	lsr	x24, x24, x0
     484:	and	x24, x24, x1
     488:	lsl	x23, x24, x23
     48c:	ldr	x0, [sp, #112]
     490:	orr	x24, x23, x0
     494:	b	2f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x138>
     498:	bl	0 <_ZNSt3_V216generic_categoryEv>
     49c:	mov	w1, #0x5                   	// #5
     4a0:	str	w1, [sp, #232]
     4a4:	str	x0, [sp, #240]
     4a8:	add	x1, sp, #0xf8
     4ac:	add	x0, sp, #0x108
     4b0:	str	x0, [sp, #248]
     4b4:	str	xzr, [sp, #256]
     4b8:	strb	wzr, [sp, #264]
     4bc:	mov	w0, #0x1                   	// #1
     4c0:	str	w0, [sp, #344]
     4c4:	str	xzr, [sp, #336]
     4c8:	str	xzr, [sp, #328]
     4cc:	str	xzr, [sp, #320]
     4d0:	ldr	x0, [x28]
     4d4:	add	x0, x0, #0x10
     4d8:	str	x0, [sp, #312]
     4dc:	str	x1, [sp, #352]
     4e0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     4e4:	add	x0, x0, #0x0
     4e8:	str	x0, [sp, #288]
     4ec:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     4f0:	ldr	x0, [x0]
     4f4:	add	x0, x0, #0x10
     4f8:	str	x0, [sp, #280]
     4fc:	str	x24, [sp, #296]
     500:	str	x25, [sp, #304]
     504:	mov	x1, x27
     508:	add	x0, sp, #0x138
     50c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     510:	ldr	x1, [sp, #336]
     514:	ldr	x0, [sp, #320]
     518:	cmp	x1, x0
     51c:	b.eq	528 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x36c>  // b.none
     520:	add	x0, sp, #0x138
     524:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     528:	mov	x8, x27
     52c:	add	x1, sp, #0xe8
     530:	ldr	x0, [sp, #352]
     534:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     538:	add	x0, sp, #0x138
     53c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     540:	ldr	x0, [sp, #248]
     544:	add	x1, sp, #0x108
     548:	cmp	x0, x1
     54c:	b.eq	554 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x398>  // b.none
     550:	bl	0 <_ZdlPv>
     554:	ldr	x0, [sp, #280]
     558:	ands	x1, x0, #0xfffffffffffffffe
     55c:	cset	x0, ne  // ne = any
     560:	orr	x0, x0, x1
     564:	str	x0, [sp, #280]
     568:	ands	x1, x0, #0xfffffffffffffffe
     56c:	b.eq	5c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x408>  // b.none
     570:	str	x1, [sp, #416]
     574:	mov	w23, #0x1                   	// #1
     578:	mov	x24, #0x0                   	// #0
     57c:	b	2fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x140>
     580:	str	xzr, [x19, #24]
     584:	subs	w24, w24, w25
     588:	b.eq	5bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x400>  // b.none
     58c:	mov	x0, #0x0                   	// #0
     590:	ldrb	w1, [x3, x0]
     594:	lsl	w2, w0, #3
     598:	lsl	x2, x1, x2
     59c:	ldr	x1, [x19, #24]
     5a0:	orr	x1, x1, x2
     5a4:	str	x1, [x19, #24]
     5a8:	add	x0, x0, #0x1
     5ac:	mov	w1, w0
     5b0:	cmp	w24, w0
     5b4:	b.ne	590 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3d4>  // b.any
     5b8:	b	43c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x280>
     5bc:	mov	w1, w24
     5c0:	b	43c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x280>
     5c4:	tbz	w0, #0, 44c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x290>
     5c8:	add	x0, sp, #0x118
     5cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     5d0:	bl	0 <_ZNSt3_V216generic_categoryEv>
     5d4:	mov	w1, #0x5                   	// #5
     5d8:	str	w1, [sp, #248]
     5dc:	str	x0, [sp, #256]
     5e0:	ldr	x0, [sp, #120]
     5e4:	str	x0, [sp, #280]
     5e8:	str	xzr, [sp, #288]
     5ec:	strb	wzr, [sp, #296]
     5f0:	mov	w0, #0x1                   	// #1
     5f4:	str	w0, [sp, #344]
     5f8:	str	xzr, [sp, #336]
     5fc:	str	xzr, [sp, #328]
     600:	str	xzr, [sp, #320]
     604:	ldr	x0, [sp, #128]
     608:	str	x0, [sp, #312]
     60c:	str	x27, [sp, #352]
     610:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     614:	add	x0, x0, #0x0
     618:	str	x0, [sp, #448]
     61c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     620:	ldr	x0, [x0]
     624:	add	x0, x0, #0x10
     628:	str	x0, [sp, #440]
     62c:	str	w24, [sp, #456]
     630:	str	w25, [sp, #460]
     634:	add	x1, sp, #0x1b8
     638:	add	x0, sp, #0x138
     63c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     640:	ldr	x1, [sp, #336]
     644:	ldr	x0, [sp, #320]
     648:	cmp	x1, x0
     64c:	b.eq	658 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x49c>  // b.none
     650:	add	x0, sp, #0x138
     654:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     658:	add	x8, sp, #0x1b0
     65c:	add	x1, sp, #0xf8
     660:	ldr	x0, [sp, #352]
     664:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     668:	add	x0, sp, #0x138
     66c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     670:	ldr	x0, [sp, #280]
     674:	ldr	x1, [sp, #120]
     678:	cmp	x0, x1
     67c:	b.eq	684 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4c8>  // b.none
     680:	bl	0 <_ZdlPv>
     684:	ldr	x0, [sp, #432]
     688:	ands	x0, x0, #0xfffffffffffffffe
     68c:	cset	x1, ne  // ne = any
     690:	orr	x1, x1, x0
     694:	str	x1, [sp, #432]
     698:	ands	x1, x1, #0xfffffffffffffffe
     69c:	b.ne	570 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3b4>  // b.any
     6a0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6a4:	add	x3, x3, #0x0
     6a8:	mov	w2, #0x1ce                 	// #462
     6ac:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6b0:	add	x1, x1, #0x0
     6b4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6b8:	add	x0, x0, #0x0
     6bc:	bl	0 <__assert_fail>
     6c0:	add	x0, sp, #0xd8
     6c4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6c8:	ldr	x21, [sp, #416]
     6cc:	cbz	x24, 6e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x524>
     6d0:	ldr	x0, [x24]
     6d4:	ldr	x1, [x0, #8]
     6d8:	mov	x0, x24
     6dc:	blr	x1
     6e0:	ldrb	w0, [sp, #192]
     6e4:	orr	w0, w0, #0x1
     6e8:	strb	w0, [sp, #192]
     6ec:	str	xzr, [sp, #216]
     6f0:	str	x21, [sp, #184]
     6f4:	ldp	x23, x24, [sp, #48]
     6f8:	ldp	x25, x26, [sp, #64]
     6fc:	ldp	x27, x28, [sp, #80]
     700:	b	39c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1e0>
     704:	stp	x23, x24, [sp, #48]
     708:	stp	x25, x26, [sp, #64]
     70c:	stp	x27, x28, [sp, #80]
     710:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     714:	add	x3, x3, #0x0
     718:	mov	w2, #0x1ce                 	// #462
     71c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     720:	add	x1, x1, #0x0
     724:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     728:	add	x0, x0, #0x0
     72c:	bl	0 <__assert_fail>
     730:	stp	x23, x24, [sp, #48]
     734:	stp	x25, x26, [sp, #64]
     738:	stp	x27, x28, [sp, #80]
     73c:	ldr	w25, [sp, #184]
     740:	add	x8, sp, #0xc8
     744:	mov	w1, #0x6                   	// #6
     748:	mov	x0, x19
     74c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     750:	ldrb	w0, [sp, #208]
     754:	and	w1, w0, #0x1
     758:	bfi	w0, w1, #1, #1
     75c:	strb	w0, [sp, #208]
     760:	cbz	w1, 76c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5b0>
     764:	add	x0, sp, #0xc8
     768:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     76c:	ldr	w23, [sp, #200]
     770:	cbz	w23, c3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa80>
     774:	mov	w22, #0x0                   	// #0
     778:	add	x26, sp, #0x118
     77c:	add	x0, x26, #0x10
     780:	str	x0, [sp, #144]
     784:	str	x0, [sp, #152]
     788:	add	x27, sp, #0xf8
     78c:	add	x0, x27, #0x10
     790:	str	x0, [sp, #112]
     794:	b	7b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5f8>
     798:	ldr	x28, [sp, #216]
     79c:	tbnz	w28, #5, 808 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x64c>
     7a0:	and	x28, x28, #0xffffffff
     7a4:	cbnz	w21, c00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa44>
     7a8:	add	w22, w22, #0x1
     7ac:	cmp	w23, w22
     7b0:	b.eq	c3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa80>  // b.none
     7b4:	add	x8, sp, #0xd8
     7b8:	mov	w1, #0x6                   	// #6
     7bc:	ldr	x0, [sp, #104]
     7c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7c4:	ldrb	w0, [sp, #224]
     7c8:	and	w21, w0, #0x1
     7cc:	bfi	w0, w21, #1, #1
     7d0:	strb	w0, [sp, #224]
     7d4:	cbz	w21, 798 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5dc>
     7d8:	and	x0, x0, #0xff
     7dc:	and	w0, w0, #0xfffffffd
     7e0:	strb	w0, [sp, #224]
     7e4:	ldr	x28, [sp, #216]
     7e8:	str	xzr, [sp, #216]
     7ec:	mov	w21, #0x1                   	// #1
     7f0:	ldr	x0, [sp, #216]
     7f4:	cbz	x0, 7a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e8>
     7f8:	ldr	x1, [x0]
     7fc:	ldr	x1, [x1, #8]
     800:	blr	x1
     804:	b	7a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e8>
     808:	and	x28, x28, #0x1f
     80c:	str	wzr, [sp, #120]
     810:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     814:	ldr	x0, [x0]
     818:	add	x0, x0, #0x10
     81c:	str	x0, [sp, #168]
     820:	ldr	w24, [x19, #32]
     824:	cmp	w24, #0x5
     828:	b.ls	8cc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x710>  // b.plast
     82c:	ldr	x0, [x19, #24]
     830:	and	x1, x0, #0x3f
     834:	str	x1, [sp, #128]
     838:	lsr	x0, x0, #6
     83c:	str	x0, [x19, #24]
     840:	sub	w24, w24, #0x6
     844:	str	w24, [x19, #32]
     848:	str	w21, [sp, #136]
     84c:	ldrb	w0, [sp, #224]
     850:	tbnz	w0, #1, be0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa24>
     854:	ldrb	w0, [sp, #224]
     858:	tbz	w0, #0, 870 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b4>
     85c:	ldr	x0, [sp, #216]
     860:	cbz	x0, 870 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b4>
     864:	ldr	x1, [x0]
     868:	ldr	x1, [x1, #8]
     86c:	blr	x1
     870:	ldrb	w0, [sp, #224]
     874:	ldr	w1, [sp, #136]
     878:	bfxil	w0, w1, #0, #1
     87c:	orr	w0, w0, #0x2
     880:	strb	w0, [sp, #224]
     884:	cbnz	w1, be8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa2c>
     888:	ldr	x2, [sp, #128]
     88c:	str	x2, [sp, #216]
     890:	and	x0, x0, #0xff
     894:	bfi	w0, w1, #1, #1
     898:	strb	w0, [sp, #224]
     89c:	ldr	w0, [sp, #120]
     8a0:	add	w1, w0, #0x5
     8a4:	str	w1, [sp, #120]
     8a8:	and	x0, x2, #0x1f
     8ac:	lsl	x0, x0, x1
     8b0:	orr	x28, x28, x0
     8b4:	tbnz	w2, #5, 820 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x664>
     8b8:	ldrb	w0, [sp, #224]
     8bc:	and	w21, w0, #0x1
     8c0:	tbz	w0, #0, 7a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e8>
     8c4:	ldr	w21, [sp, #136]
     8c8:	b	7f0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x634>
     8cc:	str	xzr, [sp, #160]
     8d0:	cbz	w24, 8dc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x720>
     8d4:	ldr	x0, [x19, #24]
     8d8:	str	x0, [sp, #160]
     8dc:	ldr	x0, [x19, #16]
     8e0:	str	x0, [sp, #128]
     8e4:	ldr	x1, [x19, #8]
     8e8:	str	x1, [sp, #136]
     8ec:	cmp	x0, x1
     8f0:	b.cs	994 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7d8>  // b.hs, b.nlast
     8f4:	ldr	x0, [x19]
     8f8:	ldr	x2, [sp, #128]
     8fc:	add	x4, x0, x2
     900:	add	x1, x2, #0x8
     904:	ldr	x3, [sp, #136]
     908:	cmp	x3, x1
     90c:	b.cc	a8c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8d0>  // b.lo, b.ul, b.last
     910:	ldr	x0, [x0, x2]
     914:	str	x0, [x19, #24]
     918:	mov	w1, #0x8                   	// #8
     91c:	ldr	x0, [sp, #128]
     920:	add	x0, x0, w1, uxtw
     924:	str	x0, [x19, #16]
     928:	lsl	w1, w1, #3
     92c:	str	w1, [x19, #32]
     930:	mov	w0, #0x6                   	// #6
     934:	sub	w0, w0, w24
     938:	str	w0, [sp, #128]
     93c:	ldr	w1, [x19, #32]
     940:	str	w1, [sp, #136]
     944:	cmp	w0, w1
     948:	b.hi	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x91c>  // b.pmore
     94c:	ldr	x1, [x19, #24]
     950:	ldrb	w0, [sp, #128]
     954:	lsr	x0, x1, x0
     958:	str	x0, [x19, #24]
     95c:	ldr	w0, [sp, #136]
     960:	add	w0, w24, w0
     964:	sub	w0, w0, #0x6
     968:	str	w0, [x19, #32]
     96c:	add	w2, w24, #0x3a
     970:	mov	x0, #0xffffffffffffffff    	// #-1
     974:	lsr	x0, x0, x2
     978:	and	x0, x0, x1
     97c:	lsl	x24, x0, x24
     980:	ldr	x0, [sp, #160]
     984:	orr	x0, x24, x0
     988:	str	x0, [sp, #128]
     98c:	str	w21, [sp, #136]
     990:	b	84c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x690>
     994:	bl	0 <_ZNSt3_V216generic_categoryEv>
     998:	mov	w1, #0x5                   	// #5
     99c:	str	w1, [sp, #232]
     9a0:	str	x0, [sp, #240]
     9a4:	ldr	x0, [sp, #112]
     9a8:	str	x0, [sp, #248]
     9ac:	str	xzr, [sp, #256]
     9b0:	strb	wzr, [sp, #264]
     9b4:	mov	w0, #0x1                   	// #1
     9b8:	str	w0, [sp, #344]
     9bc:	str	xzr, [sp, #336]
     9c0:	str	xzr, [sp, #328]
     9c4:	str	xzr, [sp, #320]
     9c8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     9cc:	ldr	x0, [x0]
     9d0:	add	x0, x0, #0x10
     9d4:	str	x0, [sp, #312]
     9d8:	str	x27, [sp, #352]
     9dc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9e0:	add	x0, x0, #0x0
     9e4:	str	x0, [sp, #288]
     9e8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9ec:	ldr	x0, [x0]
     9f0:	add	x0, x0, #0x10
     9f4:	str	x0, [sp, #280]
     9f8:	ldr	x0, [sp, #136]
     9fc:	str	x0, [sp, #296]
     a00:	ldr	x0, [sp, #128]
     a04:	str	x0, [sp, #304]
     a08:	mov	x1, x26
     a0c:	add	x0, sp, #0x138
     a10:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     a14:	ldr	x1, [sp, #336]
     a18:	ldr	x0, [sp, #320]
     a1c:	cmp	x1, x0
     a20:	b.eq	a2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x870>  // b.none
     a24:	add	x0, sp, #0x138
     a28:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     a2c:	mov	x8, x26
     a30:	add	x1, sp, #0xe8
     a34:	ldr	x0, [sp, #352]
     a38:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a3c:	add	x0, sp, #0x138
     a40:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     a44:	ldr	x0, [sp, #248]
     a48:	ldr	x1, [sp, #112]
     a4c:	cmp	x0, x1
     a50:	b.eq	a58 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x89c>  // b.none
     a54:	bl	0 <_ZdlPv>
     a58:	ldr	x0, [sp, #280]
     a5c:	ands	x1, x0, #0xfffffffffffffffe
     a60:	cset	x0, ne  // ne = any
     a64:	orr	x0, x0, x1
     a68:	str	x0, [sp, #280]
     a6c:	mov	w1, #0x1                   	// #1
     a70:	str	w1, [sp, #136]
     a74:	ands	x1, x0, #0xfffffffffffffffe
     a78:	str	x1, [sp, #128]
     a7c:	b.ne	84c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x690>  // b.any
     a80:	tbz	w0, #0, 930 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x774>
     a84:	add	x0, sp, #0x118
     a88:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     a8c:	str	xzr, [x19, #24]
     a90:	ldr	w0, [sp, #136]
     a94:	ldr	w1, [sp, #128]
     a98:	subs	w3, w0, w1
     a9c:	b.eq	ad0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x914>  // b.none
     aa0:	mov	x0, #0x0                   	// #0
     aa4:	ldrb	w1, [x4, x0]
     aa8:	lsl	w2, w0, #3
     aac:	lsl	x2, x1, x2
     ab0:	ldr	x1, [x19, #24]
     ab4:	orr	x1, x1, x2
     ab8:	str	x1, [x19, #24]
     abc:	add	x0, x0, #0x1
     ac0:	mov	w1, w0
     ac4:	cmp	w0, w3
     ac8:	b.ne	aa4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8e8>  // b.any
     acc:	b	91c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x760>
     ad0:	mov	w1, w3
     ad4:	b	91c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x760>
     ad8:	bl	0 <_ZNSt3_V216generic_categoryEv>
     adc:	mov	w1, #0x5                   	// #5
     ae0:	str	w1, [sp, #248]
     ae4:	str	x0, [sp, #256]
     ae8:	ldr	x0, [sp, #152]
     aec:	str	x0, [sp, #280]
     af0:	str	xzr, [sp, #288]
     af4:	strb	wzr, [sp, #296]
     af8:	mov	w0, #0x1                   	// #1
     afc:	str	w0, [sp, #344]
     b00:	str	xzr, [sp, #336]
     b04:	str	xzr, [sp, #328]
     b08:	str	xzr, [sp, #320]
     b0c:	ldr	x0, [sp, #168]
     b10:	str	x0, [sp, #312]
     b14:	str	x26, [sp, #352]
     b18:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b1c:	add	x0, x0, #0x0
     b20:	str	x0, [sp, #480]
     b24:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b28:	ldr	x0, [x0]
     b2c:	add	x0, x0, #0x10
     b30:	str	x0, [sp, #472]
     b34:	ldr	w0, [sp, #128]
     b38:	str	w0, [sp, #488]
     b3c:	ldr	w0, [sp, #136]
     b40:	str	w0, [sp, #492]
     b44:	add	x1, sp, #0x1d8
     b48:	add	x0, sp, #0x138
     b4c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     b50:	ldr	x1, [sp, #336]
     b54:	ldr	x0, [sp, #320]
     b58:	cmp	x1, x0
     b5c:	b.eq	b68 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9ac>  // b.none
     b60:	add	x0, sp, #0x138
     b64:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     b68:	add	x8, sp, #0x1d0
     b6c:	mov	x1, x27
     b70:	ldr	x0, [sp, #352]
     b74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b78:	add	x0, sp, #0x138
     b7c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     b80:	ldr	x0, [sp, #280]
     b84:	ldr	x1, [sp, #144]
     b88:	cmp	x0, x1
     b8c:	b.eq	b94 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9d8>  // b.none
     b90:	bl	0 <_ZdlPv>
     b94:	ldr	x0, [sp, #464]
     b98:	ands	x1, x0, #0xfffffffffffffffe
     b9c:	cset	x0, ne  // ne = any
     ba0:	orr	x0, x0, x1
     ba4:	str	x0, [sp, #464]
     ba8:	ands	x0, x0, #0xfffffffffffffffe
     bac:	str	x0, [sp, #128]
     bb0:	b.eq	bc0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa04>  // b.none
     bb4:	mov	w0, #0x1                   	// #1
     bb8:	str	w0, [sp, #136]
     bbc:	b	84c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x690>
     bc0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     bc4:	add	x3, x3, #0x0
     bc8:	mov	w2, #0x1ce                 	// #462
     bcc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     bd0:	add	x1, x1, #0x0
     bd4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     bd8:	add	x0, x0, #0x0
     bdc:	bl	0 <__assert_fail>
     be0:	add	x0, sp, #0xd8
     be4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     be8:	ldrb	w0, [sp, #224]
     bec:	and	w0, w0, #0xfffffffd
     bf0:	strb	w0, [sp, #224]
     bf4:	str	xzr, [sp, #216]
     bf8:	ldr	x28, [sp, #128]
     bfc:	b	7ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x630>
     c00:	ldrb	w0, [x20, #8]
     c04:	orr	w0, w0, #0x3
     c08:	strb	w0, [x20, #8]
     c0c:	ands	x0, x28, #0xfffffffffffffffe
     c10:	cbz	x0, c1c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa60>
     c14:	str	x0, [x20]
     c18:	b	c50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa94>
     c1c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c20:	add	x3, x3, #0x0
     c24:	mov	w2, #0x1ce                 	// #462
     c28:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c2c:	add	x1, x1, #0x0
     c30:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c34:	add	x0, x0, #0x0
     c38:	bl	0 <__assert_fail>
     c3c:	ldrb	w0, [x20, #8]
     c40:	and	w0, w0, #0xfffffffe
     c44:	orr	w0, w0, #0x2
     c48:	strb	w0, [x20, #8]
     c4c:	str	w25, [x20]
     c50:	ldrb	w0, [sp, #208]
     c54:	tbnz	w0, #1, c84 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xac8>
     c58:	ldrb	w0, [sp, #208]
     c5c:	tbz	w0, #0, 1978 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x17bc>
     c60:	ldr	x0, [sp, #200]
     c64:	cbz	x0, 1988 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x17cc>
     c68:	ldr	x1, [x0]
     c6c:	ldr	x1, [x1, #8]
     c70:	blr	x1
     c74:	ldp	x23, x24, [sp, #48]
     c78:	ldp	x25, x26, [sp, #64]
     c7c:	ldp	x27, x28, [sp, #80]
     c80:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
     c84:	add	x0, sp, #0xc8
     c88:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c8c:	stp	x23, x24, [sp, #48]
     c90:	stp	x25, x26, [sp, #64]
     c94:	mov	w1, #0x1                   	// #1
     c98:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c9c:	add	x0, x0, #0x0
     ca0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     ca4:	stp	x23, x24, [sp, #48]
     ca8:	stp	x25, x26, [sp, #64]
     cac:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cb0:	add	x3, x3, #0x0
     cb4:	mov	w2, #0x99                  	// #153
     cb8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cbc:	add	x1, x1, #0x0
     cc0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cc4:	add	x0, x0, #0x0
     cc8:	bl	0 <__assert_fail>
     ccc:	ldrb	w0, [x1, #8]
     cd0:	ubfx	x0, x0, #1, #3
     cd4:	sub	w0, w0, #0x3
     cd8:	and	w0, w0, #0xfffffffd
     cdc:	tst	w0, #0xff
     ce0:	b.ne	d70 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbb4>  // b.any
     ce4:	bl	0 <_ZNSt3_V216generic_categoryEv>
     ce8:	mov	x1, x0
     cec:	add	x8, sp, #0x168
     cf0:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cf4:	add	x2, x2, #0x0
     cf8:	mov	x0, #0x54                  	// #84
     cfc:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     d00:	ldrb	w0, [x20, #8]
     d04:	orr	w0, w0, #0x3
     d08:	strb	w0, [x20, #8]
     d0c:	ldr	x0, [sp, #360]
     d10:	ands	x1, x0, #0xfffffffffffffffe
     d14:	cset	x0, ne  // ne = any
     d18:	orr	x0, x0, x1
     d1c:	str	x0, [sp, #360]
     d20:	ands	x0, x0, #0xfffffffffffffffe
     d24:	b.eq	d48 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb8c>  // b.none
     d28:	str	x0, [x20]
     d2c:	ldp	x27, x28, [sp, #80]
     d30:	mov	x0, x20
     d34:	ldp	x19, x20, [sp, #16]
     d38:	ldp	x21, x22, [sp, #32]
     d3c:	ldp	x29, x30, [sp]
     d40:	add	sp, sp, #0x230
     d44:	ret
     d48:	stp	x23, x24, [sp, #48]
     d4c:	stp	x25, x26, [sp, #64]
     d50:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d54:	add	x3, x3, #0x0
     d58:	mov	w2, #0x1ce                 	// #462
     d5c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d60:	add	x1, x1, #0x0
     d64:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d68:	add	x0, x0, #0x0
     d6c:	bl	0 <__assert_fail>
     d70:	add	x8, sp, #0x138
     d74:	mov	x0, x19
     d78:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d7c:	ldrb	w0, [sp, #320]
     d80:	tbz	w0, #0, de0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc24>
     d84:	ldrb	w0, [sp, #320]
     d88:	and	w0, w0, #0xfffffffd
     d8c:	strb	w0, [sp, #320]
     d90:	ldr	x0, [sp, #312]
     d94:	str	xzr, [sp, #312]
     d98:	ldrb	w1, [x20, #8]
     d9c:	orr	w1, w1, #0x3
     da0:	strb	w1, [x20, #8]
     da4:	ands	x0, x0, #0xfffffffffffffffe
     da8:	cbz	x0, db8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbfc>
     dac:	str	x0, [x20]
     db0:	ldp	x27, x28, [sp, #80]
     db4:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
     db8:	stp	x23, x24, [sp, #48]
     dbc:	stp	x25, x26, [sp, #64]
     dc0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     dc4:	add	x3, x3, #0x0
     dc8:	mov	w2, #0x1ce                 	// #462
     dcc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     dd0:	add	x1, x1, #0x0
     dd4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     dd8:	add	x0, x0, #0x0
     ddc:	bl	0 <__assert_fail>
     de0:	stp	x23, x24, [sp, #48]
     de4:	ldr	w28, [sp, #312]
     de8:	b	220 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x64>
     dec:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     df0:	add	x3, x3, #0x0
     df4:	mov	w2, #0x99                  	// #153
     df8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     dfc:	add	x1, x1, #0x0
     e00:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e04:	add	x0, x0, #0x0
     e08:	bl	0 <__assert_fail>
     e0c:	add	x8, sp, #0x138
     e10:	mov	x0, x19
     e14:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e18:	ldrb	w0, [sp, #320]
     e1c:	tbz	w0, #0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
     e20:	ldrb	w0, [sp, #320]
     e24:	and	w0, w0, #0xfffffffd
     e28:	strb	w0, [sp, #320]
     e2c:	ldr	x0, [sp, #312]
     e30:	str	xzr, [sp, #312]
     e34:	ldrb	w1, [x20, #8]
     e38:	orr	w1, w1, #0x3
     e3c:	strb	w1, [x20, #8]
     e40:	ands	x0, x0, #0xfffffffffffffffe
     e44:	cbz	x0, e5c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xca0>
     e48:	str	x0, [x20]
     e4c:	ldp	x23, x24, [sp, #48]
     e50:	ldp	x25, x26, [sp, #64]
     e54:	ldp	x27, x28, [sp, #80]
     e58:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
     e5c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e60:	add	x3, x3, #0x0
     e64:	mov	w2, #0x1ce                 	// #462
     e68:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e6c:	add	x1, x1, #0x0
     e70:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e74:	add	x0, x0, #0x0
     e78:	bl	0 <__assert_fail>
     e7c:	str	x19, [sp, #128]
     e80:	mov	x8, x25
     e84:	mov	w1, #0x6                   	// #6
     e88:	mov	x0, x19
     e8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e90:	ldrb	w0, [sp, #288]
     e94:	and	w1, w0, #0x1
     e98:	bfi	w0, w1, #1, #1
     e9c:	strb	w0, [sp, #288]
     ea0:	cbnz	w1, f10 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd54>
     ea4:	ldr	w0, [sp, #280]
     ea8:	str	w0, [sp, #120]
     eac:	add	w0, w22, #0x2
     eb0:	cmp	w0, w23
     eb4:	b.ne	f38 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd7c>  // b.any
     eb8:	add	w22, w22, #0x1
     ebc:	mov	w1, w22
     ec0:	ldr	w0, [x21, #8]
     ec4:	cmp	x0, w22, uxtw
     ec8:	b.ls	f58 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd9c>  // b.plast
     ecc:	lsl	x1, x1, #4
     ed0:	ldr	x2, [x21]
     ed4:	add	x24, x2, x1
     ed8:	ldrb	w0, [x24, #8]
     edc:	tbnz	w0, #0, f78 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xdbc>
     ee0:	ldrb	w0, [x24, #8]
     ee4:	ubfx	x0, x0, #1, #3
     ee8:	cmp	w0, #0x2
     eec:	b.eq	1024 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe68>  // b.none
     ef0:	cmp	w0, #0x4
     ef4:	b.eq	1128 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf6c>  // b.none
     ef8:	cmp	w0, #0x1
     efc:	b.eq	f98 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xddc>  // b.none
     f00:	mov	w1, #0x1                   	// #1
     f04:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f08:	add	x0, x0, #0x0
     f0c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     f10:	add	x19, sp, #0x170
     f14:	mov	x8, x19
     f18:	add	x0, sp, #0x118
     f1c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f20:	mov	x1, x19
     f24:	mov	x0, x20
     f28:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f2c:	mov	x0, x19
     f30:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f34:	b	117c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfc0>
     f38:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f3c:	add	x3, x3, #0x0
     f40:	mov	w2, #0x95                  	// #149
     f44:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f48:	add	x1, x1, #0x0
     f4c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f50:	add	x0, x0, #0x0
     f54:	bl	0 <__assert_fail>
     f58:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f5c:	add	x3, x3, #0x0
     f60:	mov	w2, #0x99                  	// #153
     f64:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f68:	add	x1, x1, #0x0
     f6c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f70:	add	x0, x0, #0x0
     f74:	bl	0 <__assert_fail>
     f78:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f7c:	add	x3, x3, #0x0
     f80:	mov	w2, #0x77                  	// #119
     f84:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f88:	add	x1, x1, #0x0
     f8c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f90:	add	x0, x0, #0x0
     f94:	bl	0 <__assert_fail>
     f98:	ldr	x1, [x2, x1]
     f9c:	cmp	w1, #0x40
     fa0:	b.hi	ff8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe3c>  // b.pmore
     fa4:	ldr	x0, [x19, #16]
     fa8:	lsl	x0, x0, #3
     fac:	ldr	w2, [x19, #32]
     fb0:	sub	x0, x0, x2
     fb4:	ldr	w2, [sp, #120]
     fb8:	add	x8, sp, #0x138
     fbc:	madd	x1, x2, x1, x0
     fc0:	mov	x0, x19
     fc4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     fc8:	ldr	x0, [sp, #312]
     fcc:	ands	x1, x0, #0xfffffffffffffffe
     fd0:	cset	x0, ne  // ne = any
     fd4:	orr	x0, x0, x1
     fd8:	str	x0, [sp, #312]
     fdc:	ands	x0, x0, #0xfffffffffffffffe
     fe0:	b.eq	1018 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe5c>  // b.none
     fe4:	ldrb	w1, [x20, #8]
     fe8:	orr	w1, w1, #0x3
     fec:	strb	w1, [x20, #8]
     ff0:	str	x0, [x20]
     ff4:	b	117c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfc0>
     ff8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ffc:	add	x3, x3, #0x0
    1000:	mov	w2, #0x9e                  	// #158
    1004:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1008:	add	x1, x1, #0x0
    100c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1010:	add	x0, x0, #0x0
    1014:	bl	0 <__assert_fail>
    1018:	add	x0, sp, #0x138
    101c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1020:	b	11b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xffc>
    1024:	ldr	x0, [x2, x1]
    1028:	cmp	w0, #0x40
    102c:	b.hi	1064 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xea8>  // b.pmore
    1030:	ldr	w0, [sp, #120]
    1034:	cbz	w0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    1038:	add	x0, sp, #0x138
    103c:	str	x0, [sp, #136]
    1040:	ldrb	w0, [x24, #8]
    1044:	ubfx	x0, x0, #1, #3
    1048:	cmp	w0, #0x2
    104c:	b.hi	1084 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xec8>  // b.pmore
    1050:	cbnz	w0, 10b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xef8>
    1054:	mov	w1, #0x1                   	// #1
    1058:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    105c:	add	x0, x0, #0x0
    1060:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1064:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1068:	add	x3, x3, #0x0
    106c:	mov	w2, #0xa4                  	// #164
    1070:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1074:	add	x1, x1, #0x0
    1078:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    107c:	add	x0, x0, #0x0
    1080:	bl	0 <__assert_fail>
    1084:	add	w0, w0, #0x5
    1088:	and	w0, w0, #0x7
    108c:	cmp	w0, #0x2
    1090:	b.hi	1054 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe98>  // b.pmore
    1094:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1098:	add	x3, x3, #0x0
    109c:	mov	w2, #0x79                  	// #121
    10a0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10a4:	add	x1, x1, #0x0
    10a8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10ac:	add	x0, x0, #0x0
    10b0:	bl	0 <__assert_fail>
    10b4:	ldr	x8, [sp, #136]
    10b8:	ldr	w1, [x24]
    10bc:	ldr	x0, [sp, #128]
    10c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10c4:	ldrb	w0, [sp, #320]
    10c8:	and	w1, w0, #0x1
    10cc:	bfi	w0, w1, #1, #1
    10d0:	strb	w0, [sp, #320]
    10d4:	cbnz	w1, 10f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf38>
    10d8:	ldr	w0, [sp, #120]
    10dc:	subs	w0, w0, #0x1
    10e0:	str	w0, [sp, #120]
    10e4:	b.eq	11b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xffc>  // b.none
    10e8:	ldrb	w0, [x24, #8]
    10ec:	tbz	w0, #0, 1040 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe84>
    10f0:	b	1094 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xed8>
    10f4:	add	x19, sp, #0x138
    10f8:	add	x21, sp, #0x178
    10fc:	mov	x8, x21
    1100:	mov	x0, x19
    1104:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1108:	mov	x1, x21
    110c:	mov	x0, x20
    1110:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1114:	mov	x0, x21
    1118:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    111c:	mov	x0, x19
    1120:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1124:	b	117c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfc0>
    1128:	ldr	x1, [x19, #16]
    112c:	ldr	w0, [sp, #120]
    1130:	add	w0, w0, w0, lsl #1
    1134:	lsl	w0, w0, #1
    1138:	add	x0, x0, x1, lsl #3
    113c:	ldr	w1, [x19, #32]
    1140:	add	x8, sp, #0x138
    1144:	sub	x1, x0, x1
    1148:	mov	x0, x19
    114c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1150:	ldr	x0, [sp, #312]
    1154:	ands	x1, x0, #0xfffffffffffffffe
    1158:	cset	x0, ne  // ne = any
    115c:	orr	x0, x0, x1
    1160:	str	x0, [sp, #312]
    1164:	ands	x0, x0, #0xfffffffffffffffe
    1168:	b.eq	11b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xff4>  // b.none
    116c:	ldrb	w1, [x20, #8]
    1170:	orr	w1, w1, #0x3
    1174:	strb	w1, [x20, #8]
    1178:	str	x0, [x20]
    117c:	ldrb	w0, [sp, #288]
    1180:	tbnz	w0, #1, 11e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x102c>
    1184:	ldrb	w0, [sp, #288]
    1188:	tbz	w0, #0, 1998 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x17dc>
    118c:	ldr	x0, [sp, #280]
    1190:	cbz	x0, 19a8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x17ec>
    1194:	ldr	x1, [x0]
    1198:	ldr	x1, [x1, #8]
    119c:	blr	x1
    11a0:	ldp	x23, x24, [sp, #48]
    11a4:	ldp	x25, x26, [sp, #64]
    11a8:	ldp	x27, x28, [sp, #80]
    11ac:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    11b0:	add	x0, sp, #0x138
    11b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11b8:	ldrb	w0, [sp, #288]
    11bc:	tbnz	w0, #1, 11e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1024>
    11c0:	ldrb	w0, [sp, #288]
    11c4:	tbz	w0, #0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    11c8:	ldr	x0, [sp, #280]
    11cc:	cbz	x0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    11d0:	ldr	x1, [x0]
    11d4:	ldr	x1, [x1, #8]
    11d8:	blr	x1
    11dc:	b	130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    11e0:	add	x0, sp, #0x118
    11e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11e8:	add	x0, sp, #0x118
    11ec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11f0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11f4:	add	x3, x3, #0x0
    11f8:	mov	w2, #0xb4                  	// #180
    11fc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1200:	add	x1, x1, #0x0
    1204:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1208:	add	x0, x0, #0x0
    120c:	bl	0 <__assert_fail>
    1210:	ldrb	w0, [sp, #288]
    1214:	orr	w0, w0, #0x3
    1218:	strb	w0, [sp, #288]
    121c:	str	xzr, [sp, #216]
    1220:	ldr	x0, [sp, #496]
    1224:	str	x0, [sp, #280]
    1228:	ldr	x0, [sp, #216]
    122c:	cbz	x0, 123c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1080>
    1230:	ldr	x1, [x0]
    1234:	ldr	x1, [x1, #8]
    1238:	blr	x1
    123c:	ldrb	w0, [sp, #288]
    1240:	and	w1, w0, #0x1
    1244:	bfi	w0, w1, #1, #1
    1248:	strb	w0, [sp, #288]
    124c:	cbnz	w1, 17f8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x163c>
    1250:	ldr	w0, [sp, #280]
    1254:	ldr	w1, [x19, #32]
    1258:	cmp	w1, #0x1f
    125c:	b.hi	1884 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x16c8>  // b.pmore
    1260:	str	wzr, [x19, #32]
    1264:	add	w0, w0, #0x3
    1268:	lsl	x1, x0, #3
    126c:	and	x0, x1, #0xffffffe0
    1270:	ldr	x1, [x19, #16]
    1274:	add	x1, x0, x1, lsl #3
    1278:	ldr	w0, [x19, #32]
    127c:	sub	x1, x1, x0
    1280:	lsr	x0, x1, #3
    1284:	ldr	x2, [x19, #8]
    1288:	cmp	x2, x1, lsr #3
    128c:	b.cc	18a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x16e4>  // b.lo, b.ul, b.last
    1290:	and	x0, x0, #0xfffffffffffffff8
    1294:	and	w1, w1, #0x3f
    1298:	cmp	x2, x0
    129c:	b.cc	18b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x16f8>  // b.lo, b.ul, b.last
    12a0:	str	x0, [x19, #16]
    12a4:	str	wzr, [x19, #32]
    12a8:	cbz	w1, 12e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x112c>
    12ac:	add	x8, sp, #0x138
    12b0:	mov	x0, x19
    12b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12b8:	ldrb	w0, [sp, #320]
    12bc:	tbnz	w0, #0, 18d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1718>
    12c0:	mov	x0, #0x1                   	// #1
    12c4:	str	x0, [sp, #248]
    12c8:	ldr	x0, [sp, #248]
    12cc:	ands	x1, x0, #0xfffffffffffffffe
    12d0:	cset	x0, ne  // ne = any
    12d4:	orr	x0, x0, x1
    12d8:	str	x0, [sp, #248]
    12dc:	ands	x1, x0, #0xfffffffffffffffe
    12e0:	b.ne	18f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1738>  // b.any
    12e4:	tbnz	w0, #0, 193c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1780>
    12e8:	ldrb	w0, [sp, #288]
    12ec:	tbnz	w0, #1, 1944 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1788>
    12f0:	ldrb	w0, [sp, #288]
    12f4:	tbz	w0, #0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    12f8:	ldr	x0, [sp, #280]
    12fc:	cbz	x0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    1300:	ldr	x1, [x0]
    1304:	ldr	x1, [x1, #8]
    1308:	blr	x1
    130c:	add	w22, w22, #0x1
    1310:	cmp	w23, w22
    1314:	b.ls	1954 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1798>  // b.plast
    1318:	mov	w1, w22
    131c:	ldr	w0, [x21, #8]
    1320:	cmp	x0, w22, uxtw
    1324:	b.ls	dec <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc30>  // b.plast
    1328:	ldr	x0, [x21]
    132c:	add	x1, x0, x1, lsl #4
    1330:	ldrb	w0, [x1, #8]
    1334:	tbnz	w0, #0, 130c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1150>
    1338:	ldrb	w0, [x1, #8]
    133c:	ubfx	x0, x0, #1, #3
    1340:	sub	w2, w0, #0x3
    1344:	and	w2, w2, #0xfffffffd
    1348:	tst	w2, #0xff
    134c:	b.ne	e0c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc50>  // b.any
    1350:	cmp	w0, #0x3
    1354:	b.eq	e7c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcc0>  // b.none
    1358:	cmp	w0, #0x5
    135c:	b.ne	11f0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1034>  // b.any
    1360:	add	x8, sp, #0x1f0
    1364:	mov	w1, #0x6                   	// #6
    1368:	mov	x0, x19
    136c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1370:	ldrb	w0, [sp, #504]
    1374:	and	w24, w0, #0x1
    1378:	ldrb	w1, [sp, #224]
    137c:	bfxil	w1, w24, #0, #1
    1380:	orr	w1, w1, #0x2
    1384:	strb	w1, [sp, #224]
    1388:	and	w0, w0, #0xfffffffd
    138c:	strb	w0, [sp, #504]
    1390:	cbnz	w24, 1210 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1054>
    1394:	ldr	x1, [sp, #496]
    1398:	str	w1, [sp, #216]
    139c:	ldrb	w0, [sp, #224]
    13a0:	and	w0, w0, #0xfffffffd
    13a4:	strb	w0, [sp, #224]
    13a8:	tbz	w1, #5, 1498 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x12dc>
    13ac:	and	w0, w1, #0x1f
    13b0:	str	w0, [sp, #120]
    13b4:	str	wzr, [sp, #136]
    13b8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    13bc:	ldr	x0, [x0]
    13c0:	add	x0, x0, #0x10
    13c4:	str	x0, [sp, #168]
    13c8:	ldr	w1, [x19, #32]
    13cc:	str	w1, [sp, #128]
    13d0:	cmp	w1, #0x5
    13d4:	b.ls	14ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x12f0>  // b.plast
    13d8:	ldr	x0, [x19, #24]
    13dc:	and	x2, x0, #0x3f
    13e0:	str	x2, [sp, #128]
    13e4:	lsr	x0, x0, #6
    13e8:	str	x0, [x19, #24]
    13ec:	sub	w0, w1, #0x6
    13f0:	str	w0, [x19, #32]
    13f4:	ldr	w0, [sp, #128]
    13f8:	str	w0, [sp, #512]
    13fc:	str	w24, [sp, #144]
    1400:	ldrb	w0, [sp, #224]
    1404:	tbnz	w0, #1, 17bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1600>
    1408:	ldrb	w0, [sp, #224]
    140c:	tbz	w0, #0, 1424 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1268>
    1410:	ldr	x0, [sp, #216]
    1414:	cbz	x0, 1424 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1268>
    1418:	ldr	x1, [x0]
    141c:	ldr	x1, [x1, #8]
    1420:	blr	x1
    1424:	ldrb	w0, [sp, #224]
    1428:	ldr	w1, [sp, #144]
    142c:	bfxil	w0, w1, #0, #1
    1430:	orr	w0, w0, #0x2
    1434:	strb	w0, [sp, #224]
    1438:	cbnz	w1, 17c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1608>
    143c:	ldr	w0, [sp, #136]
    1440:	add	w2, w0, #0x5
    1444:	str	w2, [sp, #136]
    1448:	ldr	w0, [sp, #512]
    144c:	str	w0, [sp, #216]
    1450:	ldrb	w1, [sp, #224]
    1454:	and	w1, w1, #0xfffffffd
    1458:	strb	w1, [sp, #224]
    145c:	and	w1, w0, #0x1f
    1460:	lsl	w1, w1, w2
    1464:	ldr	w2, [sp, #120]
    1468:	orr	w1, w2, w1
    146c:	str	w1, [sp, #120]
    1470:	tbnz	w0, #5, 13c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x120c>
    1474:	ldrb	w0, [sp, #288]
    1478:	and	w0, w0, #0xfffffffe
    147c:	orr	w0, w0, #0x2
    1480:	strb	w0, [sp, #288]
    1484:	ldr	w0, [sp, #120]
    1488:	str	w0, [sp, #280]
    148c:	ldrb	w0, [sp, #224]
    1490:	tbz	w0, #0, 123c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1080>
    1494:	b	1228 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x106c>
    1498:	ldrb	w0, [sp, #288]
    149c:	and	w0, w0, #0xfffffffe
    14a0:	strb	w0, [sp, #288]
    14a4:	str	w1, [sp, #280]
    14a8:	b	123c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1080>
    14ac:	str	xzr, [sp, #160]
    14b0:	ldr	w0, [sp, #128]
    14b4:	cbz	w0, 14c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1304>
    14b8:	ldr	x0, [x19, #24]
    14bc:	str	x0, [sp, #160]
    14c0:	ldr	x0, [x19, #16]
    14c4:	str	x0, [sp, #144]
    14c8:	ldr	x1, [x19, #8]
    14cc:	str	x1, [sp, #152]
    14d0:	cmp	x0, x1
    14d4:	b.cs	157c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x13c0>  // b.hs, b.nlast
    14d8:	ldr	x0, [x19]
    14dc:	ldr	x2, [sp, #144]
    14e0:	add	x4, x0, x2
    14e4:	add	x1, x2, #0x8
    14e8:	ldr	x3, [sp, #152]
    14ec:	cmp	x3, x1
    14f0:	b.cc	1670 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x14b4>  // b.lo, b.ul, b.last
    14f4:	ldr	x0, [x0, x2]
    14f8:	str	x0, [x19, #24]
    14fc:	mov	w1, #0x8                   	// #8
    1500:	ldr	x0, [sp, #144]
    1504:	add	x0, x0, w1, uxtw
    1508:	str	x0, [x19, #16]
    150c:	lsl	w1, w1, #3
    1510:	str	w1, [x19, #32]
    1514:	mov	w0, #0x6                   	// #6
    1518:	ldr	w1, [sp, #128]
    151c:	sub	w0, w0, w1
    1520:	str	w0, [sp, #144]
    1524:	ldr	w1, [x19, #32]
    1528:	str	w1, [sp, #152]
    152c:	cmp	w0, w1
    1530:	b.hi	16c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x150c>  // b.pmore
    1534:	ldr	x1, [x19, #24]
    1538:	ldrb	w0, [sp, #144]
    153c:	lsr	x0, x1, x0
    1540:	str	x0, [x19, #24]
    1544:	ldr	w3, [sp, #128]
    1548:	ldr	w0, [sp, #152]
    154c:	add	w0, w3, w0
    1550:	sub	w0, w0, #0x6
    1554:	str	w0, [x19, #32]
    1558:	add	w2, w3, #0x3a
    155c:	mov	x0, #0xffffffffffffffff    	// #-1
    1560:	lsr	x0, x0, x2
    1564:	and	x0, x0, x1
    1568:	lsl	x0, x0, x3
    156c:	ldr	x1, [sp, #160]
    1570:	orr	x0, x0, x1
    1574:	str	x0, [sp, #128]
    1578:	b	13f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1238>
    157c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1580:	mov	w1, #0x5                   	// #5
    1584:	str	w1, [sp, #232]
    1588:	str	x0, [sp, #240]
    158c:	ldr	x0, [sp, #104]
    1590:	str	x0, [sp, #248]
    1594:	str	xzr, [sp, #256]
    1598:	strb	wzr, [sp, #264]
    159c:	mov	w0, #0x1                   	// #1
    15a0:	str	w0, [sp, #344]
    15a4:	str	xzr, [sp, #336]
    15a8:	str	xzr, [sp, #328]
    15ac:	str	xzr, [sp, #320]
    15b0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    15b4:	ldr	x0, [x0]
    15b8:	add	x0, x0, #0x10
    15bc:	str	x0, [sp, #312]
    15c0:	str	x26, [sp, #352]
    15c4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15c8:	add	x0, x0, #0x0
    15cc:	str	x0, [sp, #288]
    15d0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15d4:	ldr	x0, [x0]
    15d8:	add	x0, x0, #0x10
    15dc:	str	x0, [sp, #280]
    15e0:	ldr	x0, [sp, #152]
    15e4:	str	x0, [sp, #296]
    15e8:	ldr	x0, [sp, #144]
    15ec:	str	x0, [sp, #304]
    15f0:	mov	x1, x25
    15f4:	add	x0, sp, #0x138
    15f8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    15fc:	ldr	x1, [sp, #336]
    1600:	ldr	x0, [sp, #320]
    1604:	cmp	x1, x0
    1608:	b.eq	1614 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1458>  // b.none
    160c:	add	x0, sp, #0x138
    1610:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1614:	mov	x8, x25
    1618:	add	x1, sp, #0xe8
    161c:	ldr	x0, [sp, #352]
    1620:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1624:	add	x0, sp, #0x138
    1628:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    162c:	ldr	x0, [sp, #248]
    1630:	ldr	x1, [sp, #104]
    1634:	cmp	x0, x1
    1638:	b.eq	1640 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1484>  // b.none
    163c:	bl	0 <_ZdlPv>
    1640:	ldr	x0, [sp, #280]
    1644:	ands	x1, x0, #0xfffffffffffffffe
    1648:	cset	x0, ne  // ne = any
    164c:	orr	x0, x0, x1
    1650:	str	x0, [sp, #280]
    1654:	ands	x1, x0, #0xfffffffffffffffe
    1658:	b.eq	16bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1500>  // b.none
    165c:	str	x1, [sp, #512]
    1660:	mov	w0, #0x1                   	// #1
    1664:	str	w0, [sp, #144]
    1668:	str	xzr, [sp, #128]
    166c:	b	1400 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1244>
    1670:	str	xzr, [x19, #24]
    1674:	ldr	w0, [sp, #152]
    1678:	ldr	w1, [sp, #144]
    167c:	subs	w3, w0, w1
    1680:	b.eq	16b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x14f8>  // b.none
    1684:	mov	x0, #0x0                   	// #0
    1688:	ldrb	w1, [x4, x0]
    168c:	lsl	w2, w0, #3
    1690:	lsl	x2, x1, x2
    1694:	ldr	x1, [x19, #24]
    1698:	orr	x1, x1, x2
    169c:	str	x1, [x19, #24]
    16a0:	add	x0, x0, #0x1
    16a4:	mov	w1, w0
    16a8:	cmp	w0, w3
    16ac:	b.ne	1688 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x14cc>  // b.any
    16b0:	b	1500 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1344>
    16b4:	mov	w1, w3
    16b8:	b	1500 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1344>
    16bc:	tbz	w0, #0, 1514 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1358>
    16c0:	add	x0, sp, #0x118
    16c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    16c8:	bl	0 <_ZNSt3_V216generic_categoryEv>
    16cc:	mov	w1, #0x5                   	// #5
    16d0:	str	w1, [sp, #248]
    16d4:	str	x0, [sp, #256]
    16d8:	ldr	x0, [sp, #112]
    16dc:	str	x0, [sp, #280]
    16e0:	str	xzr, [sp, #288]
    16e4:	strb	wzr, [sp, #296]
    16e8:	mov	w0, #0x1                   	// #1
    16ec:	str	w0, [sp, #344]
    16f0:	str	xzr, [sp, #336]
    16f4:	str	xzr, [sp, #328]
    16f8:	str	xzr, [sp, #320]
    16fc:	ldr	x0, [sp, #168]
    1700:	str	x0, [sp, #312]
    1704:	str	x25, [sp, #352]
    1708:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    170c:	add	x0, x0, #0x0
    1710:	str	x0, [sp, #544]
    1714:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1718:	ldr	x0, [x0]
    171c:	add	x0, x0, #0x10
    1720:	str	x0, [sp, #536]
    1724:	ldr	w0, [sp, #144]
    1728:	str	w0, [sp, #552]
    172c:	ldr	w0, [sp, #152]
    1730:	str	w0, [sp, #556]
    1734:	add	x1, sp, #0x218
    1738:	add	x0, sp, #0x138
    173c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1740:	ldr	x1, [sp, #336]
    1744:	ldr	x0, [sp, #320]
    1748:	cmp	x1, x0
    174c:	b.eq	1758 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x159c>  // b.none
    1750:	add	x0, sp, #0x138
    1754:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1758:	add	x8, sp, #0x210
    175c:	mov	x1, x26
    1760:	ldr	x0, [sp, #352]
    1764:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1768:	add	x0, sp, #0x138
    176c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1770:	ldr	x0, [sp, #280]
    1774:	cmp	x0, x27
    1778:	b.eq	1780 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x15c4>  // b.none
    177c:	bl	0 <_ZdlPv>
    1780:	ldr	x0, [sp, #528]
    1784:	ands	x0, x0, #0xfffffffffffffffe
    1788:	cset	x1, ne  // ne = any
    178c:	orr	x1, x1, x0
    1790:	str	x1, [sp, #528]
    1794:	ands	x1, x1, #0xfffffffffffffffe
    1798:	b.ne	165c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x14a0>  // b.any
    179c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17a0:	add	x3, x3, #0x0
    17a4:	mov	w2, #0x1ce                 	// #462
    17a8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17ac:	add	x1, x1, #0x0
    17b0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17b4:	add	x0, x0, #0x0
    17b8:	bl	0 <__assert_fail>
    17bc:	add	x0, sp, #0xd8
    17c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17c4:	ldr	x24, [sp, #512]
    17c8:	ldr	x2, [sp, #128]
    17cc:	cbz	x2, 17e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1624>
    17d0:	ldr	x0, [x2]
    17d4:	ldr	x1, [x0, #8]
    17d8:	mov	x0, x2
    17dc:	blr	x1
    17e0:	ldrb	w0, [sp, #288]
    17e4:	orr	w0, w0, #0x3
    17e8:	strb	w0, [sp, #288]
    17ec:	str	xzr, [sp, #216]
    17f0:	str	x24, [sp, #280]
    17f4:	b	1228 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x106c>
    17f8:	and	x0, x0, #0xff
    17fc:	and	w0, w0, #0xfffffffd
    1800:	strb	w0, [sp, #288]
    1804:	ldr	x0, [sp, #280]
    1808:	str	xzr, [sp, #280]
    180c:	ldrb	w1, [x20, #8]
    1810:	orr	w1, w1, #0x3
    1814:	strb	w1, [x20, #8]
    1818:	ands	x1, x0, #0xfffffffffffffffe
    181c:	cset	x0, ne  // ne = any
    1820:	orr	x0, x0, x1
    1824:	str	x0, [sp, #384]
    1828:	ands	x0, x0, #0xfffffffffffffffe
    182c:	b.eq	1864 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x16a8>  // b.none
    1830:	str	x0, [x20]
    1834:	str	xzr, [sp, #384]
    1838:	add	x0, sp, #0x180
    183c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1840:	ldr	x0, [sp, #280]
    1844:	cbz	x0, 19b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x17fc>
    1848:	ldr	x1, [x0]
    184c:	ldr	x1, [x1, #8]
    1850:	blr	x1
    1854:	ldp	x23, x24, [sp, #48]
    1858:	ldp	x25, x26, [sp, #64]
    185c:	ldp	x27, x28, [sp, #80]
    1860:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    1864:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1868:	add	x3, x3, #0x0
    186c:	mov	w2, #0x1ce                 	// #462
    1870:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1874:	add	x1, x1, #0x0
    1878:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    187c:	add	x0, x0, #0x0
    1880:	bl	0 <__assert_fail>
    1884:	sub	w1, w1, #0x20
    1888:	ldr	x2, [x19, #24]
    188c:	lsr	x1, x2, x1
    1890:	str	x1, [x19, #24]
    1894:	mov	w1, #0x20                  	// #32
    1898:	str	w1, [x19, #32]
    189c:	b	1264 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x10a8>
    18a0:	str	x2, [x19, #16]
    18a4:	add	x0, sp, #0x118
    18a8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18ac:	ldp	x25, x26, [sp, #64]
    18b0:	b	1958 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x179c>
    18b4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18b8:	add	x3, x3, #0x0
    18bc:	mov	w2, #0x85                  	// #133
    18c0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18c4:	add	x1, x1, #0x0
    18c8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18cc:	add	x0, x0, #0x0
    18d0:	bl	0 <__assert_fail>
    18d4:	ldrb	w0, [sp, #320]
    18d8:	and	w0, w0, #0xfffffffd
    18dc:	strb	w0, [sp, #320]
    18e0:	ldr	x0, [sp, #312]
    18e4:	str	xzr, [sp, #312]
    18e8:	orr	x0, x0, #0x1
    18ec:	str	x0, [sp, #248]
    18f0:	b	12c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x110c>
    18f4:	str	xzr, [sp, #248]
    18f8:	ldrb	w0, [x20, #8]
    18fc:	orr	w0, w0, #0x3
    1900:	strb	w0, [x20, #8]
    1904:	str	x1, [x20]
    1908:	str	xzr, [sp, #392]
    190c:	add	x0, sp, #0x188
    1910:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1914:	add	x0, sp, #0xf8
    1918:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    191c:	ldrb	w0, [sp, #288]
    1920:	tbnz	w0, #1, 194c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1790>
    1924:	ldrb	w0, [sp, #288]
    1928:	tbnz	w0, #0, 1840 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1684>
    192c:	ldp	x23, x24, [sp, #48]
    1930:	ldp	x25, x26, [sp, #64]
    1934:	ldp	x27, x28, [sp, #80]
    1938:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    193c:	add	x0, sp, #0xf8
    1940:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1944:	add	x0, sp, #0x118
    1948:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    194c:	add	x0, sp, #0x118
    1950:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1954:	ldp	x25, x26, [sp, #64]
    1958:	ldrb	w0, [x20, #8]
    195c:	and	w0, w0, #0xfffffffe
    1960:	orr	w0, w0, #0x2
    1964:	strb	w0, [x20, #8]
    1968:	str	w28, [x20]
    196c:	ldp	x23, x24, [sp, #48]
    1970:	ldp	x27, x28, [sp, #80]
    1974:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    1978:	ldp	x23, x24, [sp, #48]
    197c:	ldp	x25, x26, [sp, #64]
    1980:	ldp	x27, x28, [sp, #80]
    1984:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    1988:	ldp	x23, x24, [sp, #48]
    198c:	ldp	x25, x26, [sp, #64]
    1990:	ldp	x27, x28, [sp, #80]
    1994:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    1998:	ldp	x23, x24, [sp, #48]
    199c:	ldp	x25, x26, [sp, #64]
    19a0:	ldp	x27, x28, [sp, #80]
    19a4:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    19a8:	ldp	x23, x24, [sp, #48]
    19ac:	ldp	x25, x26, [sp, #64]
    19b0:	ldp	x27, x28, [sp, #80]
    19b4:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>
    19b8:	ldp	x23, x24, [sp, #48]
    19bc:	ldp	x25, x26, [sp, #64]
    19c0:	ldp	x27, x28, [sp, #80]
    19c4:	b	d30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb74>

00000000000019c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
    19c8:	stp	x29, x30, [sp, #-464]!
    19cc:	mov	x29, sp
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	stp	x21, x22, [sp, #32]
    19d8:	mov	x21, x8
    19dc:	mov	x19, x0
    19e0:	mov	x20, x2
    19e4:	str	x3, [sp, #104]
    19e8:	cmp	w1, #0x3
    19ec:	b.eq	1be0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x218>  // b.none
    19f0:	sub	w1, w1, #0x4
    19f4:	ldr	x2, [x0, #40]
    19f8:	ldr	x0, [x0, #48]
    19fc:	sub	x0, x0, x2
    1a00:	cmp	x1, x0, asr #4
    1a04:	b.cs	22c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x900>  // b.hs, b.nlast
    1a08:	lsl	x1, x1, #4
    1a0c:	ldr	x22, [x2, x1]
    1a10:	ldr	w0, [x22, #8]
    1a14:	cbz	w0, 22e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x91c>
    1a18:	ldr	x1, [x22]
    1a1c:	ldrb	w0, [x1, #8]
    1a20:	tbz	w0, #0, 2310 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x948>
    1a24:	stp	x23, x24, [sp, #48]
    1a28:	ldr	w0, [x1]
    1a2c:	str	w0, [sp, #112]
    1a30:	ldr	w24, [x22, #8]
    1a34:	cmp	w24, #0x1
    1a38:	b.eq	2448 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa80>  // b.none
    1a3c:	stp	x25, x26, [sp, #64]
    1a40:	stp	x27, x28, [sp, #80]
    1a44:	mov	w23, #0x1                   	// #1
    1a48:	add	x25, sp, #0x120
    1a4c:	add	x27, x25, #0x10
    1a50:	str	x27, [sp, #136]
    1a54:	add	x26, sp, #0x100
    1a58:	add	x0, x26, #0x10
    1a5c:	str	x0, [sp, #128]
    1a60:	mov	w0, w23
    1a64:	ldr	w1, [x22, #8]
    1a68:	cmp	w1, w23
    1a6c:	b.ls	23d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa0c>  // b.plast
    1a70:	lsl	x0, x0, #4
    1a74:	ldr	x2, [x22]
    1a78:	add	x1, x2, x0
    1a7c:	ldrb	w3, [x1, #8]
    1a80:	tbnz	w3, #0, 23f4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa2c>
    1a84:	ldrb	w0, [x1, #8]
    1a88:	ubfx	x0, x0, #1, #3
    1a8c:	sub	w2, w0, #0x3
    1a90:	and	w2, w2, #0xfffffffd
    1a94:	tst	w2, #0xff
    1a98:	b.ne	24a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad8>  // b.any
    1a9c:	cmp	w0, #0x3
    1aa0:	b.eq	25c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbfc>  // b.none
    1aa4:	cmp	w0, #0x5
    1aa8:	b.ne	2c14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x124c>  // b.any
    1aac:	add	x8, sp, #0x190
    1ab0:	mov	w1, #0x6                   	// #6
    1ab4:	mov	x0, x19
    1ab8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1abc:	ldrb	w0, [sp, #408]
    1ac0:	and	w28, w0, #0x1
    1ac4:	ldrb	w1, [sp, #232]
    1ac8:	bfxil	w1, w28, #0, #1
    1acc:	orr	w1, w1, #0x2
    1ad0:	strb	w1, [sp, #232]
    1ad4:	and	w0, w0, #0xfffffffd
    1ad8:	strb	w0, [sp, #408]
    1adc:	cbnz	w28, 2c34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x126c>
    1ae0:	ldr	x1, [sp, #400]
    1ae4:	str	w1, [sp, #224]
    1ae8:	ldrb	w0, [sp, #232]
    1aec:	and	w0, w0, #0xfffffffd
    1af0:	strb	w0, [sp, #232]
    1af4:	tbz	w1, #5, 2d34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x136c>
    1af8:	and	w0, w1, #0x1f
    1afc:	str	w0, [sp, #120]
    1b00:	str	wzr, [sp, #152]
    1b04:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1b08:	ldr	x0, [x0]
    1b0c:	add	x0, x0, #0x10
    1b10:	str	x0, [sp, #184]
    1b14:	ldr	w1, [x19, #32]
    1b18:	str	w1, [sp, #144]
    1b1c:	cmp	w1, #0x5
    1b20:	b.ls	2d48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1380>  // b.plast
    1b24:	ldr	x0, [x19, #24]
    1b28:	and	x2, x0, #0x3f
    1b2c:	str	x2, [sp, #144]
    1b30:	lsr	x0, x0, #6
    1b34:	str	x0, [x19, #24]
    1b38:	sub	w0, w1, #0x6
    1b3c:	str	w0, [x19, #32]
    1b40:	ldr	w0, [sp, #144]
    1b44:	str	w0, [sp, #416]
    1b48:	str	w28, [sp, #160]
    1b4c:	ldrb	w0, [sp, #232]
    1b50:	tbnz	w0, #1, 3058 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1690>
    1b54:	ldrb	w0, [sp, #232]
    1b58:	tbz	w0, #0, 1b70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1a8>
    1b5c:	ldr	x0, [sp, #224]
    1b60:	cbz	x0, 1b70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1a8>
    1b64:	ldr	x1, [x0]
    1b68:	ldr	x1, [x1, #8]
    1b6c:	blr	x1
    1b70:	ldrb	w0, [sp, #232]
    1b74:	ldr	w1, [sp, #160]
    1b78:	bfxil	w0, w1, #0, #1
    1b7c:	orr	w0, w0, #0x2
    1b80:	strb	w0, [sp, #232]
    1b84:	cbnz	w1, 3060 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1698>
    1b88:	ldr	w0, [sp, #152]
    1b8c:	add	w2, w0, #0x5
    1b90:	str	w2, [sp, #152]
    1b94:	ldr	w0, [sp, #416]
    1b98:	str	w0, [sp, #224]
    1b9c:	ldrb	w1, [sp, #232]
    1ba0:	and	w1, w1, #0xfffffffd
    1ba4:	strb	w1, [sp, #232]
    1ba8:	and	w1, w0, #0x1f
    1bac:	lsl	w1, w1, w2
    1bb0:	ldr	w2, [sp, #120]
    1bb4:	orr	w1, w2, w1
    1bb8:	str	w1, [sp, #120]
    1bbc:	tbnz	w0, #5, 1b14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x14c>
    1bc0:	ldrb	w0, [sp, #296]
    1bc4:	and	w0, w0, #0xfffffffe
    1bc8:	strb	w0, [sp, #296]
    1bcc:	ldr	w0, [sp, #120]
    1bd0:	str	w0, [sp, #288]
    1bd4:	ldrb	w0, [sp, #232]
    1bd8:	tbz	w0, #0, 2c60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1298>
    1bdc:	b	2c4c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1284>
    1be0:	stp	x23, x24, [sp, #48]
    1be4:	mov	x24, x0
    1be8:	add	x8, sp, #0xc0
    1bec:	mov	w1, #0x6                   	// #6
    1bf0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1bf4:	ldrb	w0, [sp, #200]
    1bf8:	and	w1, w0, #0x1
    1bfc:	bfi	w0, w1, #1, #1
    1c00:	strb	w0, [sp, #200]
    1c04:	cbz	w1, 1c78 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2b0>
    1c08:	and	x0, x0, #0xff
    1c0c:	and	w0, w0, #0xfffffffd
    1c10:	strb	w0, [sp, #200]
    1c14:	ldr	x0, [sp, #192]
    1c18:	str	xzr, [sp, #192]
    1c1c:	ldrb	w1, [x21, #8]
    1c20:	orr	w1, w1, #0x3
    1c24:	strb	w1, [x21, #8]
    1c28:	ands	x0, x0, #0xfffffffffffffffe
    1c2c:	cbz	x0, 1c50 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x288>
    1c30:	str	x0, [x21]
    1c34:	ldr	x0, [sp, #192]
    1c38:	cbz	x0, 32e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1918>
    1c3c:	ldr	x1, [x0]
    1c40:	ldr	x1, [x1, #8]
    1c44:	blr	x1
    1c48:	ldp	x23, x24, [sp, #48]
    1c4c:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    1c50:	stp	x25, x26, [sp, #64]
    1c54:	stp	x27, x28, [sp, #80]
    1c58:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c5c:	add	x3, x3, #0x0
    1c60:	mov	w2, #0x1ce                 	// #462
    1c64:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c68:	add	x1, x1, #0x0
    1c6c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c70:	add	x0, x0, #0x0
    1c74:	bl	0 <__assert_fail>
    1c78:	stp	x27, x28, [sp, #80]
    1c7c:	ldr	w28, [sp, #192]
    1c80:	add	x8, sp, #0xd0
    1c84:	mov	w1, #0x6                   	// #6
    1c88:	mov	x0, x19
    1c8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c90:	ldrb	w0, [sp, #216]
    1c94:	and	w1, w0, #0x1
    1c98:	bfi	w0, w1, #1, #1
    1c9c:	strb	w0, [sp, #216]
    1ca0:	cbz	w1, 1d0c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x344>
    1ca4:	and	x0, x0, #0xff
    1ca8:	and	w0, w0, #0xfffffffd
    1cac:	strb	w0, [sp, #216]
    1cb0:	ldr	x0, [sp, #208]
    1cb4:	str	xzr, [sp, #208]
    1cb8:	ldrb	w1, [x21, #8]
    1cbc:	orr	w1, w1, #0x3
    1cc0:	strb	w1, [x21, #8]
    1cc4:	ands	x0, x0, #0xfffffffffffffffe
    1cc8:	cbz	x0, 1ce8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x320>
    1ccc:	str	x0, [x21]
    1cd0:	ldr	x0, [sp, #208]
    1cd4:	cbz	x0, 2290 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8c8>
    1cd8:	ldr	x1, [x0]
    1cdc:	ldr	x1, [x1, #8]
    1ce0:	blr	x1
    1ce4:	b	2290 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8c8>
    1ce8:	stp	x25, x26, [sp, #64]
    1cec:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1cf0:	add	x3, x3, #0x0
    1cf4:	mov	w2, #0x1ce                 	// #462
    1cf8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1cfc:	add	x1, x1, #0x0
    1d00:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d04:	add	x0, x0, #0x0
    1d08:	bl	0 <__assert_fail>
    1d0c:	stp	x25, x26, [sp, #64]
    1d10:	ldr	w26, [sp, #208]
    1d14:	cbz	w26, 1ddc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x414>
    1d18:	mov	w25, #0x0                   	// #0
    1d1c:	add	x0, sp, #0x120
    1d20:	str	x0, [sp, #104]
    1d24:	add	x0, sp, #0x130
    1d28:	str	x0, [sp, #144]
    1d2c:	str	x0, [sp, #152]
    1d30:	add	x0, sp, #0x100
    1d34:	str	x0, [sp, #128]
    1d38:	add	x0, sp, #0x110
    1d3c:	str	x0, [sp, #112]
    1d40:	add	x8, sp, #0xe0
    1d44:	mov	w1, #0x6                   	// #6
    1d48:	mov	x0, x24
    1d4c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d50:	ldrb	w0, [sp, #232]
    1d54:	and	w23, w0, #0x1
    1d58:	bfi	w0, w23, #1, #1
    1d5c:	strb	w0, [sp, #232]
    1d60:	cbz	w23, 1e00 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x438>
    1d64:	and	x0, x0, #0xff
    1d68:	and	w0, w0, #0xfffffffd
    1d6c:	strb	w0, [sp, #232]
    1d70:	ldr	x22, [sp, #224]
    1d74:	str	xzr, [sp, #224]
    1d78:	mov	w23, #0x1                   	// #1
    1d7c:	ldr	x0, [sp, #224]
    1d80:	cbz	x0, 1d90 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3c8>
    1d84:	ldr	x1, [x0]
    1d88:	ldr	x1, [x1, #8]
    1d8c:	blr	x1
    1d90:	cbnz	w23, 2248 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    1d94:	ldr	w1, [x20, #8]
    1d98:	ldr	w0, [x20, #12]
    1d9c:	cmp	w1, w0
    1da0:	b.cs	2210 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x848>  // b.hs, b.nlast
    1da4:	ldr	w1, [x20, #8]
    1da8:	ldr	x0, [x20]
    1dac:	str	x22, [x0, x1, lsl #3]
    1db0:	ldr	w0, [x20, #8]
    1db4:	mov	w1, w0
    1db8:	add	x1, x1, #0x1
    1dbc:	ldr	w2, [x20, #12]
    1dc0:	cmp	x1, x2
    1dc4:	b.hi	2228 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x860>  // b.pmore
    1dc8:	add	w0, w0, #0x1
    1dcc:	str	w0, [x20, #8]
    1dd0:	add	w25, w25, #0x1
    1dd4:	cmp	w26, w25
    1dd8:	b.ne	1d40 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x378>  // b.any
    1ddc:	ldrb	w0, [x21, #8]
    1de0:	and	w0, w0, #0xfffffffe
    1de4:	orr	w0, w0, #0x2
    1de8:	strb	w0, [x21, #8]
    1dec:	str	w28, [x21]
    1df0:	ldrb	w0, [sp, #216]
    1df4:	tbz	w0, #1, 2284 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8bc>
    1df8:	add	x0, sp, #0xd0
    1dfc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e00:	ldr	x22, [sp, #224]
    1e04:	tbnz	w22, #5, 1e10 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x448>
    1e08:	and	x22, x22, #0xffffffff
    1e0c:	b	1d90 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3c8>
    1e10:	and	x22, x22, #0x1f
    1e14:	str	wzr, [sp, #120]
    1e18:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1e1c:	ldr	x0, [x0]
    1e20:	add	x0, x0, #0x10
    1e24:	str	x0, [sp, #176]
    1e28:	ldr	w27, [x19, #32]
    1e2c:	cmp	w27, #0x5
    1e30:	b.ls	1ed4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x50c>  // b.plast
    1e34:	ldr	x0, [x19, #24]
    1e38:	and	x1, x0, #0x3f
    1e3c:	str	x1, [sp, #136]
    1e40:	lsr	x0, x0, #6
    1e44:	str	x0, [x19, #24]
    1e48:	sub	w27, w27, #0x6
    1e4c:	str	w27, [x19, #32]
    1e50:	str	w23, [sp, #160]
    1e54:	ldrb	w0, [sp, #232]
    1e58:	tbnz	w0, #1, 21f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x828>
    1e5c:	ldrb	w0, [sp, #232]
    1e60:	tbz	w0, #0, 1e78 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4b0>
    1e64:	ldr	x0, [sp, #224]
    1e68:	cbz	x0, 1e78 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4b0>
    1e6c:	ldr	x1, [x0]
    1e70:	ldr	x1, [x1, #8]
    1e74:	blr	x1
    1e78:	ldrb	w0, [sp, #232]
    1e7c:	ldr	w1, [sp, #160]
    1e80:	bfxil	w0, w1, #0, #1
    1e84:	orr	w0, w0, #0x2
    1e88:	strb	w0, [sp, #232]
    1e8c:	cbnz	w1, 21f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x830>
    1e90:	ldr	x2, [sp, #136]
    1e94:	str	x2, [sp, #224]
    1e98:	and	x0, x0, #0xff
    1e9c:	bfi	w0, w1, #1, #1
    1ea0:	strb	w0, [sp, #232]
    1ea4:	ldr	w0, [sp, #120]
    1ea8:	add	w1, w0, #0x5
    1eac:	str	w1, [sp, #120]
    1eb0:	and	x0, x2, #0x1f
    1eb4:	lsl	x0, x0, x1
    1eb8:	orr	x22, x22, x0
    1ebc:	tbnz	w2, #5, 1e28 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x460>
    1ec0:	ldrb	w0, [sp, #232]
    1ec4:	and	w23, w0, #0x1
    1ec8:	tbz	w0, #0, 1d90 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3c8>
    1ecc:	ldr	w23, [sp, #160]
    1ed0:	b	1d7c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>
    1ed4:	str	xzr, [sp, #168]
    1ed8:	cbz	w27, 1ee4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x51c>
    1edc:	ldr	x0, [x19, #24]
    1ee0:	str	x0, [sp, #168]
    1ee4:	ldr	x0, [x19, #16]
    1ee8:	str	x0, [sp, #136]
    1eec:	ldr	x1, [x19, #8]
    1ef0:	str	x1, [sp, #160]
    1ef4:	cmp	x0, x1
    1ef8:	b.cs	1f9c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5d4>  // b.hs, b.nlast
    1efc:	ldr	x0, [x19]
    1f00:	ldr	x2, [sp, #136]
    1f04:	add	x4, x0, x2
    1f08:	add	x1, x2, #0x8
    1f0c:	ldr	x3, [sp, #160]
    1f10:	cmp	x3, x1
    1f14:	b.cc	2098 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6d0>  // b.lo, b.ul, b.last
    1f18:	ldr	x0, [x0, x2]
    1f1c:	str	x0, [x19, #24]
    1f20:	mov	w1, #0x8                   	// #8
    1f24:	ldr	x0, [sp, #136]
    1f28:	add	x0, x0, w1, uxtw
    1f2c:	str	x0, [x19, #16]
    1f30:	lsl	w1, w1, #3
    1f34:	str	w1, [x19, #32]
    1f38:	mov	w0, #0x6                   	// #6
    1f3c:	sub	w0, w0, w27
    1f40:	str	w0, [sp, #136]
    1f44:	ldr	w1, [x19, #32]
    1f48:	str	w1, [sp, #160]
    1f4c:	cmp	w0, w1
    1f50:	b.hi	20e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x71c>  // b.pmore
    1f54:	ldr	x1, [x19, #24]
    1f58:	ldrb	w0, [sp, #136]
    1f5c:	lsr	x0, x1, x0
    1f60:	str	x0, [x19, #24]
    1f64:	ldr	w0, [sp, #160]
    1f68:	add	w0, w27, w0
    1f6c:	sub	w0, w0, #0x6
    1f70:	str	w0, [x19, #32]
    1f74:	add	w2, w27, #0x3a
    1f78:	mov	x0, #0xffffffffffffffff    	// #-1
    1f7c:	lsr	x0, x0, x2
    1f80:	and	x0, x0, x1
    1f84:	lsl	x27, x0, x27
    1f88:	ldr	x0, [sp, #168]
    1f8c:	orr	x0, x27, x0
    1f90:	str	x0, [sp, #136]
    1f94:	str	w23, [sp, #160]
    1f98:	b	1e54 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x48c>
    1f9c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    1fa0:	mov	w1, #0x5                   	// #5
    1fa4:	str	w1, [sp, #240]
    1fa8:	str	x0, [sp, #248]
    1fac:	ldr	x0, [sp, #112]
    1fb0:	str	x0, [sp, #256]
    1fb4:	str	xzr, [sp, #264]
    1fb8:	strb	wzr, [sp, #272]
    1fbc:	mov	w0, #0x1                   	// #1
    1fc0:	str	w0, [sp, #352]
    1fc4:	str	xzr, [sp, #344]
    1fc8:	str	xzr, [sp, #336]
    1fcc:	str	xzr, [sp, #328]
    1fd0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1fd4:	ldr	x0, [x0]
    1fd8:	add	x0, x0, #0x10
    1fdc:	str	x0, [sp, #320]
    1fe0:	ldr	x0, [sp, #128]
    1fe4:	str	x0, [sp, #360]
    1fe8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1fec:	add	x0, x0, #0x0
    1ff0:	str	x0, [sp, #296]
    1ff4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1ff8:	ldr	x0, [x0]
    1ffc:	add	x0, x0, #0x10
    2000:	str	x0, [sp, #288]
    2004:	ldr	x0, [sp, #160]
    2008:	str	x0, [sp, #304]
    200c:	ldr	x0, [sp, #136]
    2010:	str	x0, [sp, #312]
    2014:	ldr	x1, [sp, #104]
    2018:	add	x0, sp, #0x140
    201c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2020:	ldr	x1, [sp, #344]
    2024:	ldr	x0, [sp, #328]
    2028:	cmp	x1, x0
    202c:	b.eq	2038 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x670>  // b.none
    2030:	add	x0, sp, #0x140
    2034:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2038:	ldr	x8, [sp, #104]
    203c:	add	x1, sp, #0xf0
    2040:	ldr	x0, [sp, #360]
    2044:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2048:	add	x0, sp, #0x140
    204c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2050:	ldr	x0, [sp, #256]
    2054:	ldr	x1, [sp, #112]
    2058:	cmp	x0, x1
    205c:	b.eq	2064 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x69c>  // b.none
    2060:	bl	0 <_ZdlPv>
    2064:	ldr	x0, [sp, #288]
    2068:	ands	x1, x0, #0xfffffffffffffffe
    206c:	cset	x0, ne  // ne = any
    2070:	orr	x0, x0, x1
    2074:	str	x0, [sp, #288]
    2078:	mov	w1, #0x1                   	// #1
    207c:	str	w1, [sp, #160]
    2080:	ands	x1, x0, #0xfffffffffffffffe
    2084:	str	x1, [sp, #136]
    2088:	b.ne	1e54 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x48c>  // b.any
    208c:	tbz	w0, #0, 1f38 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x570>
    2090:	add	x0, sp, #0x120
    2094:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2098:	str	xzr, [x19, #24]
    209c:	ldr	w0, [sp, #160]
    20a0:	ldr	w1, [sp, #136]
    20a4:	subs	w3, w0, w1
    20a8:	b.eq	20dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x714>  // b.none
    20ac:	mov	x0, #0x0                   	// #0
    20b0:	ldrb	w1, [x4, x0]
    20b4:	lsl	w2, w0, #3
    20b8:	lsl	x2, x1, x2
    20bc:	ldr	x1, [x19, #24]
    20c0:	orr	x1, x1, x2
    20c4:	str	x1, [x19, #24]
    20c8:	add	x0, x0, #0x1
    20cc:	mov	w1, w0
    20d0:	cmp	w0, w3
    20d4:	b.ne	20b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6e8>  // b.any
    20d8:	b	1f24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x55c>
    20dc:	mov	w1, w3
    20e0:	b	1f24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x55c>
    20e4:	bl	0 <_ZNSt3_V216generic_categoryEv>
    20e8:	mov	w1, #0x5                   	// #5
    20ec:	str	w1, [sp, #256]
    20f0:	str	x0, [sp, #264]
    20f4:	ldr	x0, [sp, #152]
    20f8:	str	x0, [sp, #288]
    20fc:	str	xzr, [sp, #296]
    2100:	strb	wzr, [sp, #304]
    2104:	mov	w0, #0x1                   	// #1
    2108:	str	w0, [sp, #352]
    210c:	str	xzr, [sp, #344]
    2110:	str	xzr, [sp, #336]
    2114:	str	xzr, [sp, #328]
    2118:	ldr	x0, [sp, #176]
    211c:	str	x0, [sp, #320]
    2120:	ldr	x0, [sp, #104]
    2124:	str	x0, [sp, #360]
    2128:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    212c:	add	x0, x0, #0x0
    2130:	str	x0, [sp, #384]
    2134:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2138:	ldr	x0, [x0]
    213c:	add	x0, x0, #0x10
    2140:	str	x0, [sp, #376]
    2144:	ldr	w0, [sp, #136]
    2148:	str	w0, [sp, #392]
    214c:	ldr	w0, [sp, #160]
    2150:	str	w0, [sp, #396]
    2154:	add	x1, sp, #0x178
    2158:	add	x0, sp, #0x140
    215c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2160:	ldr	x1, [sp, #344]
    2164:	ldr	x0, [sp, #328]
    2168:	cmp	x1, x0
    216c:	b.eq	2178 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7b0>  // b.none
    2170:	add	x0, sp, #0x140
    2174:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2178:	add	x8, sp, #0x170
    217c:	ldr	x1, [sp, #128]
    2180:	ldr	x0, [sp, #360]
    2184:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2188:	add	x0, sp, #0x140
    218c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2190:	ldr	x0, [sp, #288]
    2194:	ldr	x1, [sp, #144]
    2198:	cmp	x0, x1
    219c:	b.eq	21a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7dc>  // b.none
    21a0:	bl	0 <_ZdlPv>
    21a4:	ldr	x0, [sp, #368]
    21a8:	ands	x1, x0, #0xfffffffffffffffe
    21ac:	cset	x0, ne  // ne = any
    21b0:	orr	x0, x0, x1
    21b4:	str	x0, [sp, #368]
    21b8:	ands	x0, x0, #0xfffffffffffffffe
    21bc:	str	x0, [sp, #136]
    21c0:	b.eq	21d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x808>  // b.none
    21c4:	mov	w0, #0x1                   	// #1
    21c8:	str	w0, [sp, #160]
    21cc:	b	1e54 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x48c>
    21d0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21d4:	add	x3, x3, #0x0
    21d8:	mov	w2, #0x1ce                 	// #462
    21dc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21e0:	add	x1, x1, #0x0
    21e4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21e8:	add	x0, x0, #0x0
    21ec:	bl	0 <__assert_fail>
    21f0:	add	x0, sp, #0xe0
    21f4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21f8:	ldrb	w0, [sp, #232]
    21fc:	and	w0, w0, #0xfffffffd
    2200:	strb	w0, [sp, #232]
    2204:	str	xzr, [sp, #224]
    2208:	ldr	x22, [sp, #136]
    220c:	b	1d78 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b0>
    2210:	mov	x3, #0x8                   	// #8
    2214:	mov	x2, #0x0                   	// #0
    2218:	add	x1, x20, #0x10
    221c:	mov	x0, x20
    2220:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2224:	b	1da4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3dc>
    2228:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    222c:	add	x3, x3, #0x0
    2230:	mov	w2, #0x43                  	// #67
    2234:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2238:	add	x1, x1, #0x0
    223c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2240:	add	x0, x0, #0x0
    2244:	bl	0 <__assert_fail>
    2248:	ldrb	w0, [x21, #8]
    224c:	orr	w0, w0, #0x3
    2250:	strb	w0, [x21, #8]
    2254:	ands	x0, x22, #0xfffffffffffffffe
    2258:	cbz	x0, 2264 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x89c>
    225c:	str	x0, [x21]
    2260:	b	1df0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x428>
    2264:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2268:	add	x3, x3, #0x0
    226c:	mov	w2, #0x1ce                 	// #462
    2270:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2274:	add	x1, x1, #0x0
    2278:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    227c:	add	x0, x0, #0x0
    2280:	bl	0 <__assert_fail>
    2284:	ldrb	w0, [sp, #216]
    2288:	tbnz	w0, #0, 22a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8dc>
    228c:	ldp	x25, x26, [sp, #64]
    2290:	ldrb	w0, [sp, #200]
    2294:	tbz	w0, #1, 22ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8e4>
    2298:	stp	x25, x26, [sp, #64]
    229c:	add	x0, sp, #0xc0
    22a0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    22a4:	ldp	x25, x26, [sp, #64]
    22a8:	b	1cd0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x308>
    22ac:	ldrb	w0, [sp, #200]
    22b0:	tbnz	w0, #0, 22c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8f8>
    22b4:	ldp	x23, x24, [sp, #48]
    22b8:	ldp	x27, x28, [sp, #80]
    22bc:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    22c0:	ldp	x27, x28, [sp, #80]
    22c4:	b	1c34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x26c>
    22c8:	stp	x23, x24, [sp, #48]
    22cc:	stp	x25, x26, [sp, #64]
    22d0:	stp	x27, x28, [sp, #80]
    22d4:	mov	w1, #0x1                   	// #1
    22d8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    22dc:	add	x0, x0, #0x0
    22e0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    22e4:	stp	x23, x24, [sp, #48]
    22e8:	stp	x25, x26, [sp, #64]
    22ec:	stp	x27, x28, [sp, #80]
    22f0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    22f4:	add	x3, x3, #0x0
    22f8:	mov	w2, #0xe5                  	// #229
    22fc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2300:	add	x1, x1, #0x0
    2304:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2308:	add	x0, x0, #0x0
    230c:	bl	0 <__assert_fail>
    2310:	ldrb	w0, [x1, #8]
    2314:	ubfx	x0, x0, #1, #3
    2318:	sub	w0, w0, #0x3
    231c:	and	w0, w0, #0xfffffffd
    2320:	tst	w0, #0xff
    2324:	b.eq	234c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x984>  // b.none
    2328:	add	x8, sp, #0x140
    232c:	mov	x0, x19
    2330:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2334:	ldrb	w0, [sp, #328]
    2338:	tbnz	w0, #0, 2368 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9a0>
    233c:	stp	x23, x24, [sp, #48]
    2340:	ldr	w0, [sp, #320]
    2344:	str	w0, [sp, #112]
    2348:	b	1a30 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x68>
    234c:	stp	x23, x24, [sp, #48]
    2350:	stp	x25, x26, [sp, #64]
    2354:	stp	x27, x28, [sp, #80]
    2358:	mov	w1, #0x1                   	// #1
    235c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2360:	add	x0, x0, #0x0
    2364:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2368:	ldrb	w0, [sp, #328]
    236c:	and	w0, w0, #0xfffffffd
    2370:	strb	w0, [sp, #328]
    2374:	ldr	x0, [sp, #320]
    2378:	str	xzr, [sp, #320]
    237c:	ldrb	w1, [x21, #8]
    2380:	orr	w1, w1, #0x3
    2384:	strb	w1, [x21, #8]
    2388:	ands	x0, x0, #0xfffffffffffffffe
    238c:	cbz	x0, 23a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9e0>
    2390:	str	x0, [x21]
    2394:	mov	x0, x21
    2398:	ldp	x19, x20, [sp, #16]
    239c:	ldp	x21, x22, [sp, #32]
    23a0:	ldp	x29, x30, [sp], #464
    23a4:	ret
    23a8:	stp	x23, x24, [sp, #48]
    23ac:	stp	x25, x26, [sp, #64]
    23b0:	stp	x27, x28, [sp, #80]
    23b4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23b8:	add	x3, x3, #0x0
    23bc:	mov	w2, #0x1ce                 	// #462
    23c0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23c4:	add	x1, x1, #0x0
    23c8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23cc:	add	x0, x0, #0x0
    23d0:	bl	0 <__assert_fail>
    23d4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23d8:	add	x3, x3, #0x0
    23dc:	mov	w2, #0x99                  	// #153
    23e0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23e4:	add	x1, x1, #0x0
    23e8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23ec:	add	x0, x0, #0x0
    23f0:	bl	0 <__assert_fail>
    23f4:	ldr	x28, [x2, x0]
    23f8:	ldr	w1, [x20, #8]
    23fc:	ldr	w0, [x20, #12]
    2400:	cmp	w1, w0
    2404:	b.cs	2468 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa0>  // b.hs, b.nlast
    2408:	ldr	w1, [x20, #8]
    240c:	ldr	x0, [x20]
    2410:	str	x28, [x0, x1, lsl #3]
    2414:	ldr	w0, [x20, #8]
    2418:	mov	w1, w0
    241c:	add	x1, x1, #0x1
    2420:	ldr	w2, [x20, #12]
    2424:	cmp	x1, x2
    2428:	b.hi	2480 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab8>  // b.pmore
    242c:	add	w0, w0, #0x1
    2430:	str	w0, [x20, #8]
    2434:	add	w23, w23, #0x1
    2438:	cmp	w24, w23
    243c:	b.ne	1a60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x98>  // b.any
    2440:	ldp	x25, x26, [sp, #64]
    2444:	ldp	x27, x28, [sp, #80]
    2448:	ldrb	w0, [x21, #8]
    244c:	and	w0, w0, #0xfffffffe
    2450:	orr	w0, w0, #0x2
    2454:	strb	w0, [x21, #8]
    2458:	ldr	w0, [sp, #112]
    245c:	str	w0, [x21]
    2460:	ldp	x23, x24, [sp, #48]
    2464:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    2468:	mov	x3, #0x8                   	// #8
    246c:	mov	x2, #0x0                   	// #0
    2470:	add	x1, x20, #0x10
    2474:	mov	x0, x20
    2478:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    247c:	b	2408 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa40>
    2480:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2484:	add	x3, x3, #0x0
    2488:	mov	w2, #0x43                  	// #67
    248c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2490:	add	x1, x1, #0x0
    2494:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2498:	add	x0, x0, #0x0
    249c:	bl	0 <__assert_fail>
    24a0:	add	x8, sp, #0x140
    24a4:	mov	x0, x19
    24a8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    24ac:	ldrb	w0, [sp, #328]
    24b0:	and	w1, w0, #0x1
    24b4:	bfi	w0, w1, #1, #1
    24b8:	strb	w0, [sp, #328]
    24bc:	cbz	w1, 24fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb34>
    24c0:	ldrb	w0, [sp, #328]
    24c4:	and	w0, w0, #0xfffffffd
    24c8:	strb	w0, [sp, #328]
    24cc:	ldr	x0, [sp, #320]
    24d0:	str	xzr, [sp, #320]
    24d4:	ldrb	w1, [x21, #8]
    24d8:	orr	w1, w1, #0x3
    24dc:	strb	w1, [x21, #8]
    24e0:	ands	x0, x0, #0xfffffffffffffffe
    24e4:	cbz	x0, 25a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbdc>
    24e8:	str	x0, [x21]
    24ec:	ldp	x23, x24, [sp, #48]
    24f0:	ldp	x25, x26, [sp, #64]
    24f4:	ldp	x27, x28, [sp, #80]
    24f8:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    24fc:	ldr	w1, [x20, #8]
    2500:	ldr	w0, [x20, #12]
    2504:	cmp	w1, w0
    2508:	b.cs	2564 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb9c>  // b.hs, b.nlast
    250c:	ldr	w1, [x20, #8]
    2510:	ldr	x0, [x20]
    2514:	ldr	x2, [sp, #320]
    2518:	str	x2, [x0, x1, lsl #3]
    251c:	ldr	w0, [x20, #8]
    2520:	mov	w1, w0
    2524:	add	x1, x1, #0x1
    2528:	ldr	w2, [x20, #12]
    252c:	cmp	x1, x2
    2530:	b.hi	257c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbb4>  // b.pmore
    2534:	add	w0, w0, #0x1
    2538:	str	w0, [x20, #8]
    253c:	ldrb	w0, [sp, #328]
    2540:	tbnz	w0, #1, 259c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbd4>
    2544:	ldrb	w0, [sp, #328]
    2548:	tbz	w0, #0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    254c:	ldr	x0, [sp, #320]
    2550:	cbz	x0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2554:	ldr	x1, [x0]
    2558:	ldr	x1, [x1, #8]
    255c:	blr	x1
    2560:	b	2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2564:	mov	x3, #0x8                   	// #8
    2568:	mov	x2, #0x0                   	// #0
    256c:	add	x1, x20, #0x10
    2570:	mov	x0, x20
    2574:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2578:	b	250c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb44>
    257c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2580:	add	x3, x3, #0x0
    2584:	mov	w2, #0x43                  	// #67
    2588:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    258c:	add	x1, x1, #0x0
    2590:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2594:	add	x0, x0, #0x0
    2598:	bl	0 <__assert_fail>
    259c:	add	x0, sp, #0x140
    25a0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25a4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25a8:	add	x3, x3, #0x0
    25ac:	mov	w2, #0x1ce                 	// #462
    25b0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25b4:	add	x1, x1, #0x0
    25b8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25bc:	add	x0, x0, #0x0
    25c0:	bl	0 <__assert_fail>
    25c4:	str	x19, [sp, #144]
    25c8:	mov	x8, x25
    25cc:	mov	w1, #0x6                   	// #6
    25d0:	mov	x0, x19
    25d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25d8:	ldrb	w0, [sp, #296]
    25dc:	and	w1, w0, #0x1
    25e0:	bfi	w0, w1, #1, #1
    25e4:	strb	w0, [sp, #296]
    25e8:	cbnz	w1, 2654 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc8c>
    25ec:	ldr	w0, [sp, #288]
    25f0:	str	w0, [sp, #120]
    25f4:	add	w0, w23, #0x2
    25f8:	cmp	w0, w24
    25fc:	b.ne	26c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcfc>  // b.any
    2600:	add	w23, w23, #0x1
    2604:	mov	w0, w23
    2608:	ldr	w1, [x22, #8]
    260c:	cmp	x1, w23, uxtw
    2610:	b.ls	26d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd0c>  // b.plast
    2614:	ldr	x28, [x22]
    2618:	add	x28, x28, x0, lsl #4
    261c:	ldrb	w0, [x28, #8]
    2620:	tbnz	w0, #0, 26f4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd2c>
    2624:	ldrb	w0, [x28, #8]
    2628:	ubfx	x0, x0, #1, #3
    262c:	cmp	w0, #0x2
    2630:	b.eq	28c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xef8>  // b.none
    2634:	cmp	w0, #0x4
    2638:	b.eq	2a60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1098>  // b.none
    263c:	cmp	w0, #0x1
    2640:	b.eq	2704 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd3c>  // b.none
    2644:	mov	w1, #0x1                   	// #1
    2648:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    264c:	add	x0, x0, #0x0
    2650:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2654:	and	x0, x0, #0xff
    2658:	and	w0, w0, #0xfffffffd
    265c:	strb	w0, [sp, #296]
    2660:	ldr	x0, [sp, #288]
    2664:	str	xzr, [sp, #288]
    2668:	ldrb	w1, [x21, #8]
    266c:	orr	w1, w1, #0x3
    2670:	strb	w1, [x21, #8]
    2674:	ands	x0, x0, #0xfffffffffffffffe
    2678:	cbz	x0, 26a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcdc>
    267c:	str	x0, [x21]
    2680:	ldr	x0, [sp, #288]
    2684:	cbz	x0, 32e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1920>
    2688:	ldr	x1, [x0]
    268c:	ldr	x1, [x1, #8]
    2690:	blr	x1
    2694:	ldp	x23, x24, [sp, #48]
    2698:	ldp	x25, x26, [sp, #64]
    269c:	ldp	x27, x28, [sp, #80]
    26a0:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    26a4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26a8:	add	x3, x3, #0x0
    26ac:	mov	w2, #0x1ce                 	// #462
    26b0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26b4:	add	x1, x1, #0x0
    26b8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26bc:	add	x0, x0, #0x0
    26c0:	bl	0 <__assert_fail>
    26c4:	mov	w1, #0x1                   	// #1
    26c8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26cc:	add	x0, x0, #0x0
    26d0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    26d4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26d8:	add	x3, x3, #0x0
    26dc:	mov	w2, #0x99                  	// #153
    26e0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26e4:	add	x1, x1, #0x0
    26e8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26ec:	add	x0, x0, #0x0
    26f0:	bl	0 <__assert_fail>
    26f4:	mov	w1, #0x1                   	// #1
    26f8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26fc:	add	x0, x0, #0x0
    2700:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2704:	ldr	w0, [sp, #120]
    2708:	cbz	w0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    270c:	add	x0, sp, #0x140
    2710:	str	x0, [sp, #152]
    2714:	add	x0, x20, #0x10
    2718:	str	x0, [sp, #160]
    271c:	ldrb	w0, [x28, #8]
    2720:	ubfx	x0, x0, #1, #3
    2724:	cmp	w0, #0x2
    2728:	b.hi	2740 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd78>  // b.pmore
    272c:	cbnz	w0, 2770 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xda8>
    2730:	mov	w1, #0x1                   	// #1
    2734:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2738:	add	x0, x0, #0x0
    273c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2740:	add	w0, w0, #0x5
    2744:	and	w0, w0, #0x7
    2748:	cmp	w0, #0x2
    274c:	b.hi	2730 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd68>  // b.pmore
    2750:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2754:	add	x3, x3, #0x0
    2758:	mov	w2, #0x79                  	// #121
    275c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2760:	add	x1, x1, #0x0
    2764:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2768:	add	x0, x0, #0x0
    276c:	bl	0 <__assert_fail>
    2770:	ldr	x8, [sp, #152]
    2774:	ldr	w1, [x28]
    2778:	ldr	x0, [sp, #144]
    277c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2780:	ldrb	w0, [sp, #328]
    2784:	and	w1, w0, #0x1
    2788:	bfi	w0, w1, #1, #1
    278c:	strb	w0, [sp, #328]
    2790:	cbnz	w1, 2854 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe8c>
    2794:	ldr	w1, [x20, #8]
    2798:	ldr	w0, [x20, #12]
    279c:	cmp	w1, w0
    27a0:	b.cs	2814 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe4c>  // b.hs, b.nlast
    27a4:	ldr	w1, [x20, #8]
    27a8:	ldr	x0, [x20]
    27ac:	ldr	x2, [sp, #320]
    27b0:	str	x2, [x0, x1, lsl #3]
    27b4:	ldr	w0, [x20, #8]
    27b8:	mov	w1, w0
    27bc:	add	x1, x1, #0x1
    27c0:	ldr	w2, [x20, #12]
    27c4:	cmp	x1, x2
    27c8:	b.hi	282c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe64>  // b.pmore
    27cc:	add	w0, w0, #0x1
    27d0:	str	w0, [x20, #8]
    27d4:	ldrb	w0, [sp, #328]
    27d8:	tbnz	w0, #1, 284c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe84>
    27dc:	ldrb	w0, [sp, #328]
    27e0:	tbz	w0, #0, 27f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe30>
    27e4:	ldr	x0, [sp, #320]
    27e8:	cbz	x0, 27f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe30>
    27ec:	ldr	x1, [x0]
    27f0:	ldr	x1, [x1, #8]
    27f4:	blr	x1
    27f8:	ldr	w0, [sp, #120]
    27fc:	subs	w0, w0, #0x1
    2800:	str	w0, [sp, #120]
    2804:	b.eq	2b2c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1164>  // b.none
    2808:	ldrb	w0, [x28, #8]
    280c:	tbz	w0, #0, 271c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd54>
    2810:	b	2750 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd88>
    2814:	mov	x3, #0x8                   	// #8
    2818:	mov	x2, #0x0                   	// #0
    281c:	ldr	x1, [sp, #160]
    2820:	mov	x0, x20
    2824:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2828:	b	27a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xddc>
    282c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2830:	add	x3, x3, #0x0
    2834:	mov	w2, #0x43                  	// #67
    2838:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    283c:	add	x1, x1, #0x0
    2840:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2844:	add	x0, x0, #0x0
    2848:	bl	0 <__assert_fail>
    284c:	add	x0, sp, #0x140
    2850:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2854:	ldrb	w0, [sp, #328]
    2858:	and	w0, w0, #0xfffffffd
    285c:	strb	w0, [sp, #328]
    2860:	ldr	x0, [sp, #320]
    2864:	str	xzr, [sp, #320]
    2868:	ldrb	w1, [x21, #8]
    286c:	orr	w1, w1, #0x3
    2870:	strb	w1, [x21, #8]
    2874:	ands	x0, x0, #0xfffffffffffffffe
    2878:	cbz	x0, 28a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xed8>
    287c:	str	x0, [x21]
    2880:	ldrb	w0, [sp, #296]
    2884:	tbnz	w0, #1, 2c0c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1244>
    2888:	ldrb	w0, [sp, #296]
    288c:	tbnz	w0, #0, 2680 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcb8>
    2890:	ldp	x23, x24, [sp, #48]
    2894:	ldp	x25, x26, [sp, #64]
    2898:	ldp	x27, x28, [sp, #80]
    289c:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    28a0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28a4:	add	x3, x3, #0x0
    28a8:	mov	w2, #0x1ce                 	// #462
    28ac:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28b0:	add	x1, x1, #0x0
    28b4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28b8:	add	x0, x0, #0x0
    28bc:	bl	0 <__assert_fail>
    28c0:	ldr	w0, [sp, #120]
    28c4:	cbz	w0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    28c8:	add	x0, sp, #0x140
    28cc:	str	x0, [sp, #152]
    28d0:	add	x0, x20, #0x10
    28d4:	str	x0, [sp, #160]
    28d8:	ldrb	w0, [x28, #8]
    28dc:	ubfx	x0, x0, #1, #3
    28e0:	cmp	w0, #0x2
    28e4:	b.hi	28fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf34>  // b.pmore
    28e8:	cbnz	w0, 292c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf64>
    28ec:	mov	w1, #0x1                   	// #1
    28f0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28f4:	add	x0, x0, #0x0
    28f8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    28fc:	add	w0, w0, #0x5
    2900:	and	w0, w0, #0x7
    2904:	cmp	w0, #0x2
    2908:	b.hi	28ec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf24>  // b.pmore
    290c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2910:	add	x3, x3, #0x0
    2914:	mov	w2, #0x79                  	// #121
    2918:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    291c:	add	x1, x1, #0x0
    2920:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2924:	add	x0, x0, #0x0
    2928:	bl	0 <__assert_fail>
    292c:	ldr	x8, [sp, #152]
    2930:	ldr	w1, [x28]
    2934:	ldr	x0, [sp, #144]
    2938:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    293c:	ldrb	w0, [sp, #328]
    2940:	and	w1, w0, #0x1
    2944:	bfi	w0, w1, #1, #1
    2948:	strb	w0, [sp, #328]
    294c:	cbnz	w1, 2a10 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1048>
    2950:	ldr	w1, [x20, #8]
    2954:	ldr	w0, [x20, #12]
    2958:	cmp	w1, w0
    295c:	b.cs	29d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1008>  // b.hs, b.nlast
    2960:	ldr	w1, [x20, #8]
    2964:	ldr	x0, [x20]
    2968:	ldr	x2, [sp, #320]
    296c:	str	x2, [x0, x1, lsl #3]
    2970:	ldr	w0, [x20, #8]
    2974:	mov	w1, w0
    2978:	add	x1, x1, #0x1
    297c:	ldr	w2, [x20, #12]
    2980:	cmp	x1, x2
    2984:	b.hi	29e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1020>  // b.pmore
    2988:	add	w0, w0, #0x1
    298c:	str	w0, [x20, #8]
    2990:	ldrb	w0, [sp, #328]
    2994:	tbnz	w0, #1, 2a08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1040>
    2998:	ldrb	w0, [sp, #328]
    299c:	tbz	w0, #0, 29b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfec>
    29a0:	ldr	x0, [sp, #320]
    29a4:	cbz	x0, 29b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfec>
    29a8:	ldr	x1, [x0]
    29ac:	ldr	x1, [x1, #8]
    29b0:	blr	x1
    29b4:	ldr	w0, [sp, #120]
    29b8:	subs	w0, w0, #0x1
    29bc:	str	w0, [sp, #120]
    29c0:	b.eq	2b2c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1164>  // b.none
    29c4:	ldrb	w0, [x28, #8]
    29c8:	tbz	w0, #0, 28d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf10>
    29cc:	b	290c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf44>
    29d0:	mov	x3, #0x8                   	// #8
    29d4:	mov	x2, #0x0                   	// #0
    29d8:	ldr	x1, [sp, #160]
    29dc:	mov	x0, x20
    29e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29e4:	b	2960 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf98>
    29e8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    29ec:	add	x3, x3, #0x0
    29f0:	mov	w2, #0x43                  	// #67
    29f4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    29f8:	add	x1, x1, #0x0
    29fc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a00:	add	x0, x0, #0x0
    2a04:	bl	0 <__assert_fail>
    2a08:	add	x0, sp, #0x140
    2a0c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a10:	ldrb	w0, [sp, #328]
    2a14:	and	w0, w0, #0xfffffffd
    2a18:	strb	w0, [sp, #328]
    2a1c:	ldr	x0, [sp, #320]
    2a20:	str	xzr, [sp, #320]
    2a24:	ldrb	w1, [x21, #8]
    2a28:	orr	w1, w1, #0x3
    2a2c:	strb	w1, [x21, #8]
    2a30:	ands	x0, x0, #0xfffffffffffffffe
    2a34:	cbz	x0, 2a40 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1078>
    2a38:	str	x0, [x21]
    2a3c:	b	2880 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xeb8>
    2a40:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a44:	add	x3, x3, #0x0
    2a48:	mov	w2, #0x1ce                 	// #462
    2a4c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a50:	add	x1, x1, #0x0
    2a54:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a58:	add	x0, x0, #0x0
    2a5c:	bl	0 <__assert_fail>
    2a60:	ldr	w0, [sp, #120]
    2a64:	cbz	w0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2a68:	add	x0, sp, #0x140
    2a6c:	str	x0, [sp, #152]
    2a70:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a74:	add	x0, x0, #0x0
    2a78:	str	x0, [sp, #160]
    2a7c:	add	x0, x20, #0x10
    2a80:	str	x0, [sp, #168]
    2a84:	ldr	x8, [sp, #152]
    2a88:	mov	w1, #0x6                   	// #6
    2a8c:	ldr	x0, [sp, #144]
    2a90:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a94:	ldrb	w0, [sp, #328]
    2a98:	and	w1, w0, #0x1
    2a9c:	bfi	w0, w1, #1, #1
    2aa0:	strb	w0, [sp, #328]
    2aa4:	cbnz	w1, 2bb4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11ec>
    2aa8:	ldr	x0, [sp, #320]
    2aac:	tst	w0, #0xffffffc0
    2ab0:	b.ne	2b54 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x118c>  // b.any
    2ab4:	ldr	x1, [sp, #160]
    2ab8:	ldrb	w28, [x1, w0, uxtw]
    2abc:	ldr	w1, [x20, #8]
    2ac0:	ldr	w0, [x20, #12]
    2ac4:	cmp	w1, w0
    2ac8:	b.cs	2b74 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11ac>  // b.hs, b.nlast
    2acc:	ldr	w1, [x20, #8]
    2ad0:	ldr	x0, [x20]
    2ad4:	str	x28, [x0, x1, lsl #3]
    2ad8:	ldr	w0, [x20, #8]
    2adc:	mov	w1, w0
    2ae0:	add	x1, x1, #0x1
    2ae4:	ldr	w2, [x20, #12]
    2ae8:	cmp	x1, x2
    2aec:	b.hi	2b8c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11c4>  // b.pmore
    2af0:	add	w0, w0, #0x1
    2af4:	str	w0, [x20, #8]
    2af8:	ldrb	w0, [sp, #328]
    2afc:	tbnz	w0, #1, 2bac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11e4>
    2b00:	ldrb	w0, [sp, #328]
    2b04:	tbz	w0, #0, 2b1c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1154>
    2b08:	ldr	x0, [sp, #320]
    2b0c:	cbz	x0, 2b1c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1154>
    2b10:	ldr	x1, [x0]
    2b14:	ldr	x1, [x1, #8]
    2b18:	blr	x1
    2b1c:	ldr	w0, [sp, #120]
    2b20:	subs	w0, w0, #0x1
    2b24:	str	w0, [sp, #120]
    2b28:	b.ne	2a84 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10bc>  // b.any
    2b2c:	ldrb	w0, [sp, #296]
    2b30:	tbnz	w0, #1, 2c04 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x123c>
    2b34:	ldrb	w0, [sp, #296]
    2b38:	tbz	w0, #0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2b3c:	ldr	x0, [sp, #288]
    2b40:	cbz	x0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2b44:	ldr	x1, [x0]
    2b48:	ldr	x1, [x1, #8]
    2b4c:	blr	x1
    2b50:	b	2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2b54:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b58:	add	x3, x3, #0x0
    2b5c:	mov	w2, #0x9d                  	// #157
    2b60:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b64:	add	x1, x1, #0x0
    2b68:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b6c:	add	x0, x0, #0x0
    2b70:	bl	0 <__assert_fail>
    2b74:	mov	x3, #0x8                   	// #8
    2b78:	mov	x2, #0x0                   	// #0
    2b7c:	ldr	x1, [sp, #168]
    2b80:	mov	x0, x20
    2b84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b88:	b	2acc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1104>
    2b8c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b90:	add	x3, x3, #0x0
    2b94:	mov	w2, #0x43                  	// #67
    2b98:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b9c:	add	x1, x1, #0x0
    2ba0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ba4:	add	x0, x0, #0x0
    2ba8:	bl	0 <__assert_fail>
    2bac:	add	x0, sp, #0x140
    2bb0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bb4:	ldrb	w0, [sp, #328]
    2bb8:	and	w0, w0, #0xfffffffd
    2bbc:	strb	w0, [sp, #328]
    2bc0:	ldr	x0, [sp, #320]
    2bc4:	str	xzr, [sp, #320]
    2bc8:	ldrb	w1, [x21, #8]
    2bcc:	orr	w1, w1, #0x3
    2bd0:	strb	w1, [x21, #8]
    2bd4:	ands	x0, x0, #0xfffffffffffffffe
    2bd8:	cbz	x0, 2be4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x121c>
    2bdc:	str	x0, [x21]
    2be0:	b	2880 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xeb8>
    2be4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2be8:	add	x3, x3, #0x0
    2bec:	mov	w2, #0x1ce                 	// #462
    2bf0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bf4:	add	x1, x1, #0x0
    2bf8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bfc:	add	x0, x0, #0x0
    2c00:	bl	0 <__assert_fail>
    2c04:	add	x0, sp, #0x120
    2c08:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c0c:	add	x0, sp, #0x120
    2c10:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c14:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c18:	add	x3, x3, #0x0
    2c1c:	mov	w2, #0x131                 	// #305
    2c20:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c24:	add	x1, x1, #0x0
    2c28:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c2c:	add	x0, x0, #0x0
    2c30:	bl	0 <__assert_fail>
    2c34:	ldrb	w0, [sp, #296]
    2c38:	orr	w0, w0, #0x1
    2c3c:	strb	w0, [sp, #296]
    2c40:	str	xzr, [sp, #224]
    2c44:	ldr	x0, [sp, #400]
    2c48:	str	x0, [sp, #288]
    2c4c:	ldr	x0, [sp, #224]
    2c50:	cbz	x0, 2c60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1298>
    2c54:	ldr	x1, [x0]
    2c58:	ldr	x1, [x1, #8]
    2c5c:	blr	x1
    2c60:	ldrb	w0, [sp, #296]
    2c64:	tbnz	w0, #0, 3094 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x16cc>
    2c68:	ldr	w0, [sp, #288]
    2c6c:	str	w0, [sp, #120]
    2c70:	ldr	w0, [x19, #32]
    2c74:	cmp	w0, #0x1f
    2c78:	b.hi	30e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1718>  // b.pmore
    2c7c:	str	wzr, [x19, #32]
    2c80:	ldr	x28, [x19, #16]
    2c84:	lsl	x28, x28, #3
    2c88:	ldr	w0, [x19, #32]
    2c8c:	sub	x28, x28, x0
    2c90:	ldr	w0, [sp, #120]
    2c94:	add	w1, w0, #0x3
    2c98:	lsl	x1, x1, #3
    2c9c:	and	x1, x1, #0xffffffe0
    2ca0:	add	x1, x1, x28
    2ca4:	lsr	x0, x1, #3
    2ca8:	ldr	x2, [x19, #8]
    2cac:	cmp	x2, x1, lsr #3
    2cb0:	b.cc	30fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1734>  // b.lo, b.ul, b.last
    2cb4:	and	x0, x0, #0xfffffffffffffff8
    2cb8:	and	w1, w1, #0x3f
    2cbc:	cmp	x2, x0
    2cc0:	b.cc	31a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x17e0>  // b.lo, b.ul, b.last
    2cc4:	str	x0, [x19, #16]
    2cc8:	str	wzr, [x19, #32]
    2ccc:	cbz	w1, 2d0c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1344>
    2cd0:	add	x8, sp, #0x140
    2cd4:	mov	x0, x19
    2cd8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2cdc:	ldrb	w0, [sp, #328]
    2ce0:	tbnz	w0, #0, 31c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1800>
    2ce4:	mov	x0, #0x1                   	// #1
    2ce8:	str	x0, [sp, #256]
    2cec:	ldr	x0, [sp, #256]
    2cf0:	ands	x1, x0, #0xfffffffffffffffe
    2cf4:	cset	x0, ne  // ne = any
    2cf8:	orr	x0, x0, x1
    2cfc:	str	x0, [sp, #256]
    2d00:	ands	x1, x0, #0xfffffffffffffffe
    2d04:	b.ne	31e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1820>  // b.any
    2d08:	tbnz	w0, #0, 3208 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1840>
    2d0c:	ldr	w1, [sp, #120]
    2d10:	tst	x28, #0x7
    2d14:	b.ne	3210 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1848>  // b.any
    2d18:	ldr	x0, [x19]
    2d1c:	add	x28, x0, x28, lsr #3
    2d20:	ldr	x0, [sp, #104]
    2d24:	cbz	x0, 3230 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1868>
    2d28:	str	x28, [x0]
    2d2c:	str	x1, [x0, #8]
    2d30:	b	2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2d34:	ldrb	w0, [sp, #296]
    2d38:	and	w0, w0, #0xfffffffe
    2d3c:	strb	w0, [sp, #296]
    2d40:	str	w1, [sp, #288]
    2d44:	b	2c60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1298>
    2d48:	str	xzr, [sp, #176]
    2d4c:	ldr	w0, [sp, #144]
    2d50:	cbz	w0, 2d5c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1394>
    2d54:	ldr	x0, [x19, #24]
    2d58:	str	x0, [sp, #176]
    2d5c:	ldr	x0, [x19, #16]
    2d60:	str	x0, [sp, #160]
    2d64:	ldr	x1, [x19, #8]
    2d68:	str	x1, [sp, #168]
    2d6c:	cmp	x0, x1
    2d70:	b.cs	2e18 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1450>  // b.hs, b.nlast
    2d74:	ldr	x0, [x19]
    2d78:	ldr	x2, [sp, #160]
    2d7c:	add	x4, x0, x2
    2d80:	add	x1, x2, #0x8
    2d84:	ldr	x3, [sp, #168]
    2d88:	cmp	x3, x1
    2d8c:	b.cc	2f0c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1544>  // b.lo, b.ul, b.last
    2d90:	ldr	x0, [x0, x2]
    2d94:	str	x0, [x19, #24]
    2d98:	mov	w1, #0x8                   	// #8
    2d9c:	ldr	x0, [sp, #160]
    2da0:	add	x0, x0, w1, uxtw
    2da4:	str	x0, [x19, #16]
    2da8:	lsl	w1, w1, #3
    2dac:	str	w1, [x19, #32]
    2db0:	mov	w0, #0x6                   	// #6
    2db4:	ldr	w1, [sp, #144]
    2db8:	sub	w0, w0, w1
    2dbc:	str	w0, [sp, #160]
    2dc0:	ldr	w1, [x19, #32]
    2dc4:	str	w1, [sp, #168]
    2dc8:	cmp	w0, w1
    2dcc:	b.hi	2f64 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x159c>  // b.pmore
    2dd0:	ldr	x1, [x19, #24]
    2dd4:	ldrb	w0, [sp, #160]
    2dd8:	lsr	x0, x1, x0
    2ddc:	str	x0, [x19, #24]
    2de0:	ldr	w3, [sp, #144]
    2de4:	ldr	w0, [sp, #168]
    2de8:	add	w0, w3, w0
    2dec:	sub	w0, w0, #0x6
    2df0:	str	w0, [x19, #32]
    2df4:	add	w2, w3, #0x3a
    2df8:	mov	x0, #0xffffffffffffffff    	// #-1
    2dfc:	lsr	x0, x0, x2
    2e00:	and	x0, x0, x1
    2e04:	lsl	x0, x0, x3
    2e08:	ldr	x1, [sp, #176]
    2e0c:	orr	x0, x0, x1
    2e10:	str	x0, [sp, #144]
    2e14:	b	1b40 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x178>
    2e18:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2e1c:	mov	w1, #0x5                   	// #5
    2e20:	str	w1, [sp, #240]
    2e24:	str	x0, [sp, #248]
    2e28:	ldr	x0, [sp, #128]
    2e2c:	str	x0, [sp, #256]
    2e30:	str	xzr, [sp, #264]
    2e34:	strb	wzr, [sp, #272]
    2e38:	mov	w0, #0x1                   	// #1
    2e3c:	str	w0, [sp, #352]
    2e40:	str	xzr, [sp, #344]
    2e44:	str	xzr, [sp, #336]
    2e48:	str	xzr, [sp, #328]
    2e4c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2e50:	ldr	x0, [x0]
    2e54:	add	x0, x0, #0x10
    2e58:	str	x0, [sp, #320]
    2e5c:	str	x26, [sp, #360]
    2e60:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2e64:	add	x0, x0, #0x0
    2e68:	str	x0, [sp, #296]
    2e6c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2e70:	ldr	x0, [x0]
    2e74:	add	x0, x0, #0x10
    2e78:	str	x0, [sp, #288]
    2e7c:	ldr	x0, [sp, #168]
    2e80:	str	x0, [sp, #304]
    2e84:	ldr	x0, [sp, #160]
    2e88:	str	x0, [sp, #312]
    2e8c:	mov	x1, x25
    2e90:	add	x0, sp, #0x140
    2e94:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2e98:	ldr	x1, [sp, #344]
    2e9c:	ldr	x0, [sp, #328]
    2ea0:	cmp	x1, x0
    2ea4:	b.eq	2eb0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x14e8>  // b.none
    2ea8:	add	x0, sp, #0x140
    2eac:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2eb0:	mov	x8, x25
    2eb4:	add	x1, sp, #0xf0
    2eb8:	ldr	x0, [sp, #360]
    2ebc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ec0:	add	x0, sp, #0x140
    2ec4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2ec8:	ldr	x0, [sp, #256]
    2ecc:	ldr	x1, [sp, #128]
    2ed0:	cmp	x0, x1
    2ed4:	b.eq	2edc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1514>  // b.none
    2ed8:	bl	0 <_ZdlPv>
    2edc:	ldr	x0, [sp, #288]
    2ee0:	ands	x1, x0, #0xfffffffffffffffe
    2ee4:	cset	x0, ne  // ne = any
    2ee8:	orr	x0, x0, x1
    2eec:	str	x0, [sp, #288]
    2ef0:	ands	x1, x0, #0xfffffffffffffffe
    2ef4:	b.eq	2f58 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1590>  // b.none
    2ef8:	str	x1, [sp, #416]
    2efc:	mov	w0, #0x1                   	// #1
    2f00:	str	w0, [sp, #160]
    2f04:	str	xzr, [sp, #144]
    2f08:	b	1b4c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x184>
    2f0c:	str	xzr, [x19, #24]
    2f10:	ldr	w0, [sp, #168]
    2f14:	ldr	w1, [sp, #160]
    2f18:	subs	w3, w0, w1
    2f1c:	b.eq	2f50 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1588>  // b.none
    2f20:	mov	x0, #0x0                   	// #0
    2f24:	ldrb	w1, [x4, x0]
    2f28:	lsl	w2, w0, #3
    2f2c:	lsl	x2, x1, x2
    2f30:	ldr	x1, [x19, #24]
    2f34:	orr	x1, x1, x2
    2f38:	str	x1, [x19, #24]
    2f3c:	add	x0, x0, #0x1
    2f40:	mov	w1, w0
    2f44:	cmp	w0, w3
    2f48:	b.ne	2f24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x155c>  // b.any
    2f4c:	b	2d9c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13d4>
    2f50:	mov	w1, w3
    2f54:	b	2d9c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13d4>
    2f58:	tbz	w0, #0, 2db0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13e8>
    2f5c:	add	x0, sp, #0x120
    2f60:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2f64:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2f68:	mov	w1, #0x5                   	// #5
    2f6c:	str	w1, [sp, #256]
    2f70:	str	x0, [sp, #264]
    2f74:	ldr	x0, [sp, #136]
    2f78:	str	x0, [sp, #288]
    2f7c:	str	xzr, [sp, #296]
    2f80:	strb	wzr, [sp, #304]
    2f84:	mov	w0, #0x1                   	// #1
    2f88:	str	w0, [sp, #352]
    2f8c:	str	xzr, [sp, #344]
    2f90:	str	xzr, [sp, #336]
    2f94:	str	xzr, [sp, #328]
    2f98:	ldr	x0, [sp, #184]
    2f9c:	str	x0, [sp, #320]
    2fa0:	str	x25, [sp, #360]
    2fa4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2fa8:	add	x0, x0, #0x0
    2fac:	str	x0, [sp, #448]
    2fb0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2fb4:	ldr	x0, [x0]
    2fb8:	add	x0, x0, #0x10
    2fbc:	str	x0, [sp, #440]
    2fc0:	ldr	w0, [sp, #160]
    2fc4:	str	w0, [sp, #456]
    2fc8:	ldr	w0, [sp, #168]
    2fcc:	str	w0, [sp, #460]
    2fd0:	add	x1, sp, #0x1b8
    2fd4:	add	x0, sp, #0x140
    2fd8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2fdc:	ldr	x1, [sp, #344]
    2fe0:	ldr	x0, [sp, #328]
    2fe4:	cmp	x1, x0
    2fe8:	b.eq	2ff4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x162c>  // b.none
    2fec:	add	x0, sp, #0x140
    2ff0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2ff4:	add	x8, sp, #0x1b0
    2ff8:	mov	x1, x26
    2ffc:	ldr	x0, [sp, #360]
    3000:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3004:	add	x0, sp, #0x140
    3008:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    300c:	ldr	x0, [sp, #288]
    3010:	cmp	x0, x27
    3014:	b.eq	301c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1654>  // b.none
    3018:	bl	0 <_ZdlPv>
    301c:	ldr	x0, [sp, #432]
    3020:	ands	x0, x0, #0xfffffffffffffffe
    3024:	cset	x1, ne  // ne = any
    3028:	orr	x1, x1, x0
    302c:	str	x1, [sp, #432]
    3030:	ands	x1, x1, #0xfffffffffffffffe
    3034:	b.ne	2ef8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1530>  // b.any
    3038:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    303c:	add	x3, x3, #0x0
    3040:	mov	w2, #0x1ce                 	// #462
    3044:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3048:	add	x1, x1, #0x0
    304c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3050:	add	x0, x0, #0x0
    3054:	bl	0 <__assert_fail>
    3058:	add	x0, sp, #0xe0
    305c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3060:	ldr	x28, [sp, #416]
    3064:	ldr	x2, [sp, #144]
    3068:	cbz	x2, 307c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x16b4>
    306c:	ldr	x0, [x2]
    3070:	ldr	x1, [x0, #8]
    3074:	mov	x0, x2
    3078:	blr	x1
    307c:	ldrb	w0, [sp, #296]
    3080:	orr	w0, w0, #0x1
    3084:	strb	w0, [sp, #296]
    3088:	str	xzr, [sp, #224]
    308c:	str	x28, [sp, #288]
    3090:	b	2c4c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1284>
    3094:	ldr	x0, [sp, #288]
    3098:	ldrb	w1, [x21, #8]
    309c:	orr	w1, w1, #0x3
    30a0:	strb	w1, [x21, #8]
    30a4:	ands	x0, x0, #0xfffffffffffffffe
    30a8:	cbz	x0, 30c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x16f8>
    30ac:	str	x0, [x21]
    30b0:	ldp	x23, x24, [sp, #48]
    30b4:	ldp	x25, x26, [sp, #64]
    30b8:	ldp	x27, x28, [sp, #80]
    30bc:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    30c0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30c4:	add	x3, x3, #0x0
    30c8:	mov	w2, #0x1ce                 	// #462
    30cc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30d0:	add	x1, x1, #0x0
    30d4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30d8:	add	x0, x0, #0x0
    30dc:	bl	0 <__assert_fail>
    30e0:	sub	w0, w0, #0x20
    30e4:	ldr	x1, [x19, #24]
    30e8:	lsr	x0, x1, x0
    30ec:	str	x0, [x19, #24]
    30f0:	mov	w0, #0x20                  	// #32
    30f4:	str	w0, [x19, #32]
    30f8:	b	2c80 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12b8>
    30fc:	ldr	w1, [sp, #120]
    3100:	mov	w22, w1
    3104:	ldr	w2, [x20, #8]
    3108:	ldr	w0, [x20, #12]
    310c:	sub	x0, x0, x2
    3110:	cmp	x0, w1, uxtw
    3114:	b.cc	3170 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x17a8>  // b.lo, b.ul, b.last
    3118:	ldr	w1, [x20, #8]
    311c:	ldr	x0, [x20]
    3120:	add	x1, x0, x1, lsl #3
    3124:	cbz	x22, 313c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1774>
    3128:	mov	x0, #0x0                   	// #0
    312c:	str	xzr, [x1, x0, lsl #3]
    3130:	add	x0, x0, #0x1
    3134:	cmp	x22, x0
    3138:	b.ne	312c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1764>  // b.any
    313c:	ldr	w0, [x20, #8]
    3140:	add	x22, x22, w0, uxtw
    3144:	ldr	w1, [x20, #12]
    3148:	cmp	x22, x1
    314c:	b.hi	3188 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x17c0>  // b.pmore
    3150:	ldr	w1, [sp, #120]
    3154:	add	w0, w1, w0
    3158:	str	w0, [x20, #8]
    315c:	ldr	x0, [x19, #8]
    3160:	str	x0, [x19, #16]
    3164:	ldp	x25, x26, [sp, #64]
    3168:	ldp	x27, x28, [sp, #80]
    316c:	b	2448 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa80>
    3170:	mov	x3, #0x8                   	// #8
    3174:	add	x2, x22, x2
    3178:	add	x1, x20, #0x10
    317c:	mov	x0, x20
    3180:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3184:	b	3118 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1750>
    3188:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    318c:	add	x3, x3, #0x0
    3190:	mov	w2, #0x43                  	// #67
    3194:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3198:	add	x1, x1, #0x0
    319c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31a0:	add	x0, x0, #0x0
    31a4:	bl	0 <__assert_fail>
    31a8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31ac:	add	x3, x3, #0x0
    31b0:	mov	w2, #0x85                  	// #133
    31b4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31b8:	add	x1, x1, #0x0
    31bc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31c0:	add	x0, x0, #0x0
    31c4:	bl	0 <__assert_fail>
    31c8:	ldrb	w0, [sp, #328]
    31cc:	and	w0, w0, #0xfffffffd
    31d0:	strb	w0, [sp, #328]
    31d4:	ldr	x0, [sp, #320]
    31d8:	str	xzr, [sp, #320]
    31dc:	orr	x0, x0, #0x1
    31e0:	str	x0, [sp, #256]
    31e4:	b	2cec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1324>
    31e8:	ldrb	w0, [x21, #8]
    31ec:	orr	w0, w0, #0x3
    31f0:	strb	w0, [x21, #8]
    31f4:	str	x1, [x21]
    31f8:	ldp	x23, x24, [sp, #48]
    31fc:	ldp	x25, x26, [sp, #64]
    3200:	ldp	x27, x28, [sp, #80]
    3204:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    3208:	add	x0, sp, #0x100
    320c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3210:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3214:	add	x3, x3, #0x0
    3218:	mov	w2, #0x9f                  	// #159
    321c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3220:	add	x1, x1, #0x0
    3224:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3228:	add	x0, x0, #0x0
    322c:	bl	0 <__assert_fail>
    3230:	ldr	w0, [sp, #120]
    3234:	cbz	w0, 2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    3238:	sub	w0, w0, #0x1
    323c:	add	x0, x0, #0x1
    3240:	add	x0, x28, x0
    3244:	str	x0, [sp, #144]
    3248:	add	x0, x20, #0x10
    324c:	str	x0, [sp, #152]
    3250:	ldrb	w0, [x28], #1
    3254:	str	x0, [sp, #120]
    3258:	ldr	w1, [x20, #8]
    325c:	ldr	w0, [x20, #12]
    3260:	cmp	w1, w0
    3264:	b.cs	32a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x18e0>  // b.hs, b.nlast
    3268:	ldr	w1, [x20, #8]
    326c:	ldr	x0, [x20]
    3270:	ldr	x2, [sp, #120]
    3274:	str	x2, [x0, x1, lsl #3]
    3278:	ldr	w0, [x20, #8]
    327c:	mov	w1, w0
    3280:	add	x1, x1, #0x1
    3284:	ldr	w2, [x20, #12]
    3288:	cmp	x1, x2
    328c:	b.hi	32c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x18f8>  // b.pmore
    3290:	add	w0, w0, #0x1
    3294:	str	w0, [x20, #8]
    3298:	ldr	x0, [sp, #144]
    329c:	cmp	x28, x0
    32a0:	b.ne	3250 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1888>  // b.any
    32a4:	b	2434 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    32a8:	mov	x3, #0x8                   	// #8
    32ac:	mov	x2, #0x0                   	// #0
    32b0:	ldr	x1, [sp, #152]
    32b4:	mov	x0, x20
    32b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    32bc:	b	3268 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x18a0>
    32c0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    32c4:	add	x3, x3, #0x0
    32c8:	mov	w2, #0x43                  	// #67
    32cc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    32d0:	add	x1, x1, #0x0
    32d4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    32d8:	add	x0, x0, #0x0
    32dc:	bl	0 <__assert_fail>
    32e0:	ldp	x23, x24, [sp, #48]
    32e4:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    32e8:	ldp	x23, x24, [sp, #48]
    32ec:	ldp	x25, x26, [sp, #64]
    32f0:	ldp	x27, x28, [sp, #80]
    32f4:	b	2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>

00000000000032f8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
    32f8:	stp	x29, x30, [sp, #-304]!
    32fc:	mov	x29, sp
    3300:	stp	x19, x20, [sp, #16]
    3304:	stp	x21, x22, [sp, #32]
    3308:	stp	x23, x24, [sp, #48]
    330c:	mov	x21, x8
    3310:	mov	x19, x0
    3314:	mov	w20, w1
    3318:	mov	x22, x2
    331c:	ldr	w23, [x0, #36]
    3320:	ldr	w1, [x0, #72]
    3324:	ldr	w0, [x0, #76]
    3328:	cmp	w1, w0
    332c:	b.cs	3438 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x140>  // b.hs, b.nlast
    3330:	ldr	w0, [x19, #72]
    3334:	lsl	x0, x0, #5
    3338:	ldr	x2, [x19, #64]
    333c:	add	x1, x2, x0
    3340:	str	w23, [x2, x0]
    3344:	str	xzr, [x1, #8]
    3348:	str	xzr, [x1, #16]
    334c:	str	xzr, [x1, #24]
    3350:	ldr	w0, [x19, #72]
    3354:	mov	w1, w0
    3358:	add	x1, x1, #0x1
    335c:	ldr	w2, [x19, #76]
    3360:	cmp	x1, x2
    3364:	b.hi	3448 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x150>  // b.pmore
    3368:	add	w0, w0, #0x1
    336c:	str	w0, [x19, #72]
    3370:	cbz	w0, 3470 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x178>
    3374:	ubfiz	x0, x0, #5, #32
    3378:	sub	x0, x0, #0x20
    337c:	ldr	x1, [x19, #64]
    3380:	add	x0, x1, x0
    3384:	add	x3, x0, #0x8
    3388:	ldr	x5, [x0, #8]
    338c:	ldr	x1, [x0, #16]
    3390:	ldr	x4, [x0, #24]
    3394:	ldr	x6, [x19, #40]
    3398:	str	x6, [x0, #8]
    339c:	ldr	x0, [x19, #48]
    33a0:	str	x0, [x3, #8]
    33a4:	ldr	x0, [x19, #56]
    33a8:	str	x0, [x3, #16]
    33ac:	str	x5, [x19, #40]
    33b0:	str	x1, [x19, #48]
    33b4:	str	x4, [x19, #56]
    33b8:	ldr	x0, [x19, #336]
    33bc:	cbz	x0, 34b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b8>
    33c0:	ldr	x2, [x0]
    33c4:	ldr	x0, [x0, #8]
    33c8:	cmp	x2, x0
    33cc:	b.eq	33dc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xe4>  // b.none
    33d0:	ldur	w3, [x0, #-88]
    33d4:	cmp	w20, w3
    33d8:	b.eq	3498 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1a0>  // b.none
    33dc:	sub	x0, x0, x2
    33e0:	asr	x0, x0, #3
    33e4:	mov	x3, #0x8ba3                	// #35747
    33e8:	movk	x3, #0xba2e, lsl #16
    33ec:	movk	x3, #0xa2e8, lsl #32
    33f0:	movk	x3, #0x2e8b, lsl #48
    33f4:	mul	x0, x0, x3
    33f8:	cbz	w0, 34b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b8>
    33fc:	mov	x3, x2
    3400:	sub	w0, w0, #0x1
    3404:	add	x4, x0, x0, lsl #1
    3408:	lsl	x4, x4, #2
    340c:	sub	x0, x4, x0
    3410:	add	x4, x2, #0x58
    3414:	add	x4, x4, x0, lsl #3
    3418:	mov	x0, x3
    341c:	ldr	w2, [x3]
    3420:	cmp	w20, w2
    3424:	b.eq	349c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1a4>  // b.none
    3428:	add	x3, x3, #0x58
    342c:	cmp	x4, x3
    3430:	b.ne	3418 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x120>  // b.any
    3434:	b	34b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b8>
    3438:	mov	x1, #0x0                   	// #0
    343c:	add	x0, x19, #0x40
    3440:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3444:	b	3330 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x38>
    3448:	stp	x25, x26, [sp, #64]
    344c:	str	x27, [sp, #80]
    3450:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3454:	add	x3, x3, #0x0
    3458:	mov	w2, #0x43                  	// #67
    345c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3460:	add	x1, x1, #0x0
    3464:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3468:	add	x0, x0, #0x0
    346c:	bl	0 <__assert_fail>
    3470:	stp	x25, x26, [sp, #64]
    3474:	str	x27, [sp, #80]
    3478:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    347c:	add	x3, x3, #0x0
    3480:	mov	w2, #0xa7                  	// #167
    3484:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3488:	add	x1, x1, #0x0
    348c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3490:	add	x0, x0, #0x0
    3494:	bl	0 <__assert_fail>
    3498:	sub	x0, x0, #0x58
    349c:	mov	w4, #0x0                   	// #0
    34a0:	ldr	x3, [x0, #16]
    34a4:	ldr	x2, [x0, #8]
    34a8:	add	x0, x19, #0x28
    34ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34b0:	mov	x20, x19
    34b4:	add	x8, sp, #0x100
    34b8:	mov	w1, #0x4                   	// #4
    34bc:	mov	x0, x19
    34c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34c4:	ldrb	w0, [sp, #264]
    34c8:	and	w2, w0, #0x1
    34cc:	ldrb	w1, [sp, #184]
    34d0:	bfxil	w1, w2, #0, #1
    34d4:	orr	w1, w1, #0x2
    34d8:	strb	w1, [sp, #184]
    34dc:	and	w0, w0, #0xfffffffd
    34e0:	strb	w0, [sp, #264]
    34e4:	cbnz	w2, 35f8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x300>
    34e8:	ldr	x1, [sp, #256]
    34ec:	str	w1, [sp, #176]
    34f0:	ldrb	w0, [sp, #184]
    34f4:	and	w0, w0, #0xfffffffd
    34f8:	strb	w0, [sp, #184]
    34fc:	tst	w1, #0x8
    3500:	b.eq	3650 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x358>  // b.none
    3504:	stp	x25, x26, [sp, #64]
    3508:	str	x27, [sp, #80]
    350c:	and	w23, w1, #0x7
    3510:	mov	w25, #0x0                   	// #0
    3514:	add	x27, sp, #0x120
    3518:	mov	w26, #0x4                   	// #4
    351c:	mov	x8, x27
    3520:	mov	w1, w26
    3524:	mov	x0, x20
    3528:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    352c:	ldrb	w0, [sp, #296]
    3530:	and	w1, w0, #0xfffffffd
    3534:	strb	w1, [sp, #296]
    3538:	and	w24, w0, #0x1
    353c:	tbnz	w0, #0, 3670 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x378>
    3540:	ldr	x0, [sp, #288]
    3544:	str	w0, [sp, #272]
    3548:	ldrb	w0, [sp, #184]
    354c:	tbnz	w0, #1, 3680 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x388>
    3550:	ldrb	w0, [sp, #184]
    3554:	tbz	w0, #0, 356c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x274>
    3558:	ldr	x0, [sp, #176]
    355c:	cbz	x0, 356c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x274>
    3560:	ldr	x1, [x0]
    3564:	ldr	x1, [x1, #8]
    3568:	blr	x1
    356c:	ldrb	w0, [sp, #184]
    3570:	bfxil	w0, w24, #0, #1
    3574:	orr	w0, w0, #0x2
    3578:	strb	w0, [sp, #184]
    357c:	cbnz	w24, 3688 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x390>
    3580:	ldr	w0, [sp, #272]
    3584:	str	w0, [sp, #176]
    3588:	ldrb	w0, [sp, #296]
    358c:	tbnz	w0, #1, 3694 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x39c>
    3590:	ldrb	w0, [sp, #296]
    3594:	tbz	w0, #0, 35ac <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2b4>
    3598:	ldr	x0, [sp, #288]
    359c:	cbz	x0, 35ac <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2b4>
    35a0:	ldr	x1, [x0]
    35a4:	ldr	x1, [x1, #8]
    35a8:	blr	x1
    35ac:	ldrb	w0, [sp, #184]
    35b0:	bfi	w0, w24, #1, #1
    35b4:	strb	w0, [sp, #184]
    35b8:	cbnz	w24, 369c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3a4>
    35bc:	add	w25, w25, #0x3
    35c0:	ldr	w1, [sp, #176]
    35c4:	and	w0, w1, #0x7
    35c8:	lsl	w0, w0, w25
    35cc:	orr	w23, w23, w0
    35d0:	tbnz	w1, #3, 351c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x224>
    35d4:	ldrb	w0, [sp, #248]
    35d8:	and	w0, w0, #0xfffffffe
    35dc:	strb	w0, [sp, #248]
    35e0:	str	w23, [sp, #240]
    35e4:	ldrb	w0, [sp, #184]
    35e8:	tbnz	w0, #0, 3664 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x36c>
    35ec:	ldp	x25, x26, [sp, #64]
    35f0:	ldr	x27, [sp, #80]
    35f4:	b	3624 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x32c>
    35f8:	ldrb	w0, [sp, #248]
    35fc:	orr	w0, w0, #0x1
    3600:	strb	w0, [sp, #248]
    3604:	str	xzr, [sp, #176]
    3608:	ldr	x0, [sp, #256]
    360c:	str	x0, [sp, #240]
    3610:	ldr	x0, [sp, #176]
    3614:	cbz	x0, 3624 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x32c>
    3618:	ldr	x1, [x0]
    361c:	ldr	x1, [x1, #8]
    3620:	blr	x1
    3624:	ldrb	w0, [sp, #248]
    3628:	tbz	w0, #0, 36c0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3c8>
    362c:	ldr	x0, [sp, #240]
    3630:	orr	x0, x0, #0x1
    3634:	str	x0, [x21]
    3638:	mov	x0, x21
    363c:	ldp	x19, x20, [sp, #16]
    3640:	ldp	x21, x22, [sp, #32]
    3644:	ldp	x23, x24, [sp, #48]
    3648:	ldp	x29, x30, [sp], #304
    364c:	ret
    3650:	ldrb	w0, [sp, #248]
    3654:	and	w0, w0, #0xfffffffe
    3658:	strb	w0, [sp, #248]
    365c:	str	w1, [sp, #240]
    3660:	b	3624 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x32c>
    3664:	ldp	x25, x26, [sp, #64]
    3668:	ldr	x27, [sp, #80]
    366c:	b	3610 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x318>
    3670:	ldr	x0, [sp, #288]
    3674:	str	xzr, [sp, #288]
    3678:	str	x0, [sp, #272]
    367c:	b	3548 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x250>
    3680:	add	x0, sp, #0xb0
    3684:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3688:	ldr	x0, [sp, #272]
    368c:	str	x0, [sp, #176]
    3690:	b	3588 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x290>
    3694:	add	x0, sp, #0x120
    3698:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    369c:	ldrb	w0, [sp, #248]
    36a0:	orr	w0, w0, #0x1
    36a4:	strb	w0, [sp, #248]
    36a8:	ldr	x0, [sp, #176]
    36ac:	str	xzr, [sp, #176]
    36b0:	str	x0, [sp, #240]
    36b4:	ldp	x25, x26, [sp, #64]
    36b8:	ldr	x27, [sp, #80]
    36bc:	b	3610 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x318>
    36c0:	ldr	w20, [sp, #240]
    36c4:	str	w20, [x19, #36]
    36c8:	cmp	w20, #0x40
    36cc:	b.hi	3738 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x440>  // b.pmore
    36d0:	ldr	w0, [x19, #32]
    36d4:	cmp	w0, #0x1f
    36d8:	b.hi	3800 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x508>  // b.pmore
    36dc:	str	wzr, [x19, #32]
    36e0:	add	x8, sp, #0xe0
    36e4:	mov	w1, #0x20                  	// #32
    36e8:	mov	x0, x19
    36ec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    36f0:	ldrb	w0, [sp, #232]
    36f4:	and	w1, w0, #0x1
    36f8:	bfi	w0, w1, #1, #1
    36fc:	strb	w0, [sp, #232]
    3700:	cbz	w1, 381c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x524>
    3704:	and	x0, x0, #0xff
    3708:	and	w0, w0, #0xfffffffd
    370c:	strb	w0, [sp, #232]
    3710:	ldr	x0, [sp, #224]
    3714:	str	xzr, [sp, #224]
    3718:	orr	x0, x0, #0x1
    371c:	str	x0, [x21]
    3720:	ldr	x0, [sp, #224]
    3724:	cbz	x0, 3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
    3728:	ldr	x1, [x0]
    372c:	ldr	x1, [x1, #8]
    3730:	blr	x1
    3734:	b	3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
    3738:	bl	0 <_ZNSt3_V216generic_categoryEv>
    373c:	mov	w1, #0x54                  	// #84
    3740:	str	w1, [sp, #96]
    3744:	str	x0, [sp, #104]
    3748:	add	x1, sp, #0x70
    374c:	add	x0, sp, #0x80
    3750:	str	x0, [sp, #112]
    3754:	str	xzr, [sp, #120]
    3758:	strb	wzr, [sp, #128]
    375c:	mov	w0, #0x1                   	// #1
    3760:	str	w0, [sp, #208]
    3764:	str	xzr, [sp, #200]
    3768:	str	xzr, [sp, #192]
    376c:	str	xzr, [sp, #184]
    3770:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    3774:	ldr	x0, [x0]
    3778:	add	x0, x0, #0x10
    377c:	str	x0, [sp, #176]
    3780:	str	x1, [sp, #216]
    3784:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3788:	add	x0, x0, #0x0
    378c:	str	x0, [sp, #152]
    3790:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3794:	ldr	x0, [x0]
    3798:	add	x0, x0, #0x10
    379c:	str	x0, [sp, #144]
    37a0:	str	w20, [sp, #160]
    37a4:	mov	x0, #0x40                  	// #64
    37a8:	str	x0, [sp, #168]
    37ac:	add	x1, sp, #0x90
    37b0:	add	x0, sp, #0xb0
    37b4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    37b8:	ldr	x1, [sp, #200]
    37bc:	ldr	x0, [sp, #184]
    37c0:	cmp	x1, x0
    37c4:	b.eq	37d0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x4d8>  // b.none
    37c8:	add	x0, sp, #0xb0
    37cc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    37d0:	mov	x8, x21
    37d4:	add	x1, sp, #0x60
    37d8:	ldr	x0, [sp, #216]
    37dc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    37e0:	add	x0, sp, #0xb0
    37e4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    37e8:	ldr	x0, [sp, #112]
    37ec:	add	x1, sp, #0x80
    37f0:	cmp	x0, x1
    37f4:	b.eq	3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>  // b.none
    37f8:	bl	0 <_ZdlPv>
    37fc:	b	3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
    3800:	sub	w0, w0, #0x20
    3804:	ldr	x1, [x19, #24]
    3808:	lsr	x0, x1, x0
    380c:	str	x0, [x19, #24]
    3810:	mov	w0, #0x20                  	// #32
    3814:	str	w0, [x19, #32]
    3818:	b	36e0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3e8>
    381c:	cbz	x22, 3828 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x530>
    3820:	ldr	x0, [sp, #224]
    3824:	str	w0, [x22]
    3828:	ldr	w0, [x19, #36]
    382c:	cbz	w0, 3868 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x570>
    3830:	ldr	w0, [x19, #32]
    3834:	cbnz	w0, 389c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5a4>
    3838:	ldr	x1, [x19, #8]
    383c:	ldr	x0, [x19, #16]
    3840:	cmp	x1, x0
    3844:	b.hi	389c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5a4>  // b.pmore
    3848:	bl	0 <_ZNSt3_V216generic_categoryEv>
    384c:	mov	x1, x0
    3850:	mov	x8, x21
    3854:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3858:	add	x2, x2, #0x0
    385c:	mov	x0, #0x54                  	// #84
    3860:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    3864:	b	3884 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x58c>
    3868:	bl	0 <_ZNSt3_V216generic_categoryEv>
    386c:	mov	x1, x0
    3870:	mov	x8, x21
    3874:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3878:	add	x2, x2, #0x0
    387c:	mov	x0, #0x54                  	// #84
    3880:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    3884:	ldrb	w0, [sp, #232]
    3888:	tbz	w0, #1, 38a8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5b0>
    388c:	stp	x25, x26, [sp, #64]
    3890:	str	x27, [sp, #80]
    3894:	add	x0, sp, #0xe0
    3898:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    389c:	mov	x0, #0x1                   	// #1
    38a0:	str	x0, [x21]
    38a4:	b	3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
    38a8:	ldrb	w0, [sp, #232]
    38ac:	tbz	w0, #0, 3638 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x340>
    38b0:	b	3720 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x428>

00000000000038b4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    38b4:	stp	x29, x30, [sp, #-480]!
    38b8:	mov	x29, sp
    38bc:	stp	x19, x20, [sp, #16]
    38c0:	stp	x21, x22, [sp, #32]
    38c4:	mov	x20, x8
    38c8:	mov	x19, x0
    38cc:	str	xzr, [sp, #368]
    38d0:	mov	x0, #0x220                 	// #544
    38d4:	bl	0 <_Znwm>
    38d8:	mov	w1, #0x1                   	// #1
    38dc:	str	w1, [x0, #8]
    38e0:	str	w1, [x0, #12]
    38e4:	mov	x2, x0
    38e8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    38ec:	ldr	x1, [x1]
    38f0:	add	x1, x1, #0x10
    38f4:	str	x1, [x2], #32
    38f8:	str	x2, [x0, #16]
    38fc:	str	wzr, [x0, #24]
    3900:	mov	w1, #0x20                  	// #32
    3904:	str	w1, [x0, #28]
    3908:	str	x0, [sp, #376]
    390c:	add	x0, x0, #0x10
    3910:	str	x0, [sp, #368]
    3914:	mov	x21, x19
    3918:	add	x8, sp, #0x180
    391c:	mov	w1, #0x5                   	// #5
    3920:	mov	x0, x19
    3924:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3928:	ldrb	w0, [sp, #392]
    392c:	and	w2, w0, #0x1
    3930:	ldrb	w1, [sp, #312]
    3934:	bfxil	w1, w2, #0, #1
    3938:	orr	w1, w1, #0x2
    393c:	strb	w1, [sp, #312]
    3940:	and	w0, w0, #0xfffffffd
    3944:	strb	w0, [sp, #392]
    3948:	cbnz	w2, 3a5c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1a8>
    394c:	ldr	x1, [sp, #384]
    3950:	str	w1, [sp, #304]
    3954:	ldrb	w0, [sp, #312]
    3958:	and	w0, w0, #0xfffffffd
    395c:	strb	w0, [sp, #312]
    3960:	tst	w1, #0x10
    3964:	b.eq	3ac4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x210>  // b.none
    3968:	stp	x23, x24, [sp, #48]
    396c:	stp	x25, x26, [sp, #64]
    3970:	and	w22, w1, #0xf
    3974:	mov	w24, #0x0                   	// #0
    3978:	add	x26, sp, #0x1a0
    397c:	mov	w25, #0x5                   	// #5
    3980:	mov	x8, x26
    3984:	mov	w1, w25
    3988:	mov	x0, x21
    398c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3990:	ldrb	w0, [sp, #424]
    3994:	and	w1, w0, #0xfffffffd
    3998:	strb	w1, [sp, #424]
    399c:	and	w23, w0, #0x1
    39a0:	tbnz	w0, #0, 3ae4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x230>
    39a4:	ldr	x0, [sp, #416]
    39a8:	str	w0, [sp, #400]
    39ac:	ldrb	w0, [sp, #312]
    39b0:	tbnz	w0, #1, 3af4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x240>
    39b4:	ldrb	w0, [sp, #312]
    39b8:	tbz	w0, #0, 39d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x11c>
    39bc:	ldr	x0, [sp, #304]
    39c0:	cbz	x0, 39d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x11c>
    39c4:	ldr	x1, [x0]
    39c8:	ldr	x1, [x1, #8]
    39cc:	blr	x1
    39d0:	ldrb	w0, [sp, #312]
    39d4:	bfxil	w0, w23, #0, #1
    39d8:	orr	w0, w0, #0x2
    39dc:	strb	w0, [sp, #312]
    39e0:	cbnz	w23, 3b00 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x24c>
    39e4:	ldr	w0, [sp, #400]
    39e8:	str	w0, [sp, #304]
    39ec:	ldrb	w0, [sp, #424]
    39f0:	tbnz	w0, #1, 3b0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x258>
    39f4:	ldrb	w0, [sp, #424]
    39f8:	tbz	w0, #0, 3a10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x15c>
    39fc:	ldr	x0, [sp, #416]
    3a00:	cbz	x0, 3a10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x15c>
    3a04:	ldr	x1, [x0]
    3a08:	ldr	x1, [x1, #8]
    3a0c:	blr	x1
    3a10:	ldrb	w0, [sp, #312]
    3a14:	bfi	w0, w23, #1, #1
    3a18:	strb	w0, [sp, #312]
    3a1c:	cbnz	w23, 3b18 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    3a20:	add	w24, w24, #0x4
    3a24:	ldr	w1, [sp, #304]
    3a28:	and	w0, w1, #0xf
    3a2c:	lsl	w0, w0, w24
    3a30:	orr	w22, w22, w0
    3a34:	tbnz	w1, #4, 3980 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xcc>
    3a38:	ldrb	w0, [sp, #360]
    3a3c:	and	w0, w0, #0xfffffffe
    3a40:	strb	w0, [sp, #360]
    3a44:	str	w22, [sp, #352]
    3a48:	ldrb	w0, [sp, #312]
    3a4c:	tbnz	w0, #0, 3ad8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x224>
    3a50:	ldp	x23, x24, [sp, #48]
    3a54:	ldp	x25, x26, [sp, #64]
    3a58:	b	3a88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1d4>
    3a5c:	ldrb	w0, [sp, #360]
    3a60:	orr	w0, w0, #0x1
    3a64:	strb	w0, [sp, #360]
    3a68:	str	xzr, [sp, #304]
    3a6c:	ldr	x0, [sp, #384]
    3a70:	str	x0, [sp, #352]
    3a74:	ldr	x0, [sp, #304]
    3a78:	cbz	x0, 3a88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1d4>
    3a7c:	ldr	x1, [x0]
    3a80:	ldr	x1, [x1, #8]
    3a84:	blr	x1
    3a88:	ldrb	w0, [sp, #360]
    3a8c:	and	w1, w0, #0x1
    3a90:	bfi	w0, w1, #1, #1
    3a94:	strb	w0, [sp, #360]
    3a98:	cbz	w1, 3b3c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x288>
    3a9c:	ldr	x0, [sp, #352]
    3aa0:	str	xzr, [sp, #352]
    3aa4:	orr	x0, x0, #0x1
    3aa8:	str	x0, [x20]
    3aac:	ldr	x0, [sp, #352]
    3ab0:	cbz	x0, 45ec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd38>
    3ab4:	ldr	x1, [x0]
    3ab8:	ldr	x1, [x1, #8]
    3abc:	blr	x1
    3ac0:	b	45ec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd38>
    3ac4:	ldrb	w0, [sp, #360]
    3ac8:	and	w0, w0, #0xfffffffe
    3acc:	strb	w0, [sp, #360]
    3ad0:	str	w1, [sp, #352]
    3ad4:	b	3a88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1d4>
    3ad8:	ldp	x23, x24, [sp, #48]
    3adc:	ldp	x25, x26, [sp, #64]
    3ae0:	b	3a74 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1c0>
    3ae4:	ldr	x0, [sp, #416]
    3ae8:	str	xzr, [sp, #416]
    3aec:	str	x0, [sp, #400]
    3af0:	b	39ac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xf8>
    3af4:	stp	x27, x28, [sp, #80]
    3af8:	add	x0, sp, #0x130
    3afc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3b00:	ldr	x0, [sp, #400]
    3b04:	str	x0, [sp, #304]
    3b08:	b	39ec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x138>
    3b0c:	stp	x27, x28, [sp, #80]
    3b10:	add	x0, sp, #0x1a0
    3b14:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3b18:	ldrb	w0, [sp, #360]
    3b1c:	orr	w0, w0, #0x1
    3b20:	strb	w0, [sp, #360]
    3b24:	ldr	x0, [sp, #304]
    3b28:	str	xzr, [sp, #304]
    3b2c:	str	x0, [sp, #352]
    3b30:	ldp	x23, x24, [sp, #48]
    3b34:	ldp	x25, x26, [sp, #64]
    3b38:	b	3a74 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1c0>
    3b3c:	stp	x23, x24, [sp, #48]
    3b40:	ldr	w23, [sp, #352]
    3b44:	cbz	w23, 3f20 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x66c>
    3b48:	stp	x25, x26, [sp, #64]
    3b4c:	stp	x27, x28, [sp, #80]
    3b50:	mov	w24, #0x0                   	// #0
    3b54:	add	x26, sp, #0x110
    3b58:	add	x0, x26, #0x10
    3b5c:	str	x0, [sp, #112]
    3b60:	str	x0, [sp, #120]
    3b64:	add	x27, sp, #0xf0
    3b68:	add	x0, x27, #0x10
    3b6c:	str	x0, [sp, #104]
    3b70:	add	x8, sp, #0xb0
    3b74:	mov	w1, #0x1                   	// #1
    3b78:	mov	x0, x21
    3b7c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3b80:	ldrb	w0, [sp, #184]
    3b84:	and	w1, w0, #0x1
    3b88:	bfi	w0, w1, #1, #1
    3b8c:	strb	w0, [sp, #184]
    3b90:	cbnz	w1, 3c18 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x364>
    3b94:	ldr	x25, [sp, #176]
    3b98:	cbz	x25, 3dec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x538>
    3b9c:	add	x8, sp, #0x130
    3ba0:	mov	w1, #0x8                   	// #8
    3ba4:	mov	x0, x21
    3ba8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3bac:	ldrb	w0, [sp, #312]
    3bb0:	and	w25, w0, #0x1
    3bb4:	bfi	w0, w25, #1, #1
    3bb8:	strb	w0, [sp, #312]
    3bbc:	cbz	w25, 3c4c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x398>
    3bc0:	and	x0, x0, #0xff
    3bc4:	and	w0, w0, #0xfffffffd
    3bc8:	strb	w0, [sp, #312]
    3bcc:	ldr	x22, [sp, #304]
    3bd0:	str	xzr, [sp, #304]
    3bd4:	mov	w25, #0x1                   	// #1
    3bd8:	ldr	x0, [sp, #304]
    3bdc:	cbz	x0, 3bec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    3be0:	ldr	x1, [x0]
    3be4:	ldr	x1, [x1, #8]
    3be8:	blr	x1
    3bec:	cbz	w25, 3d3c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x488>
    3bf0:	orr	x22, x22, #0x1
    3bf4:	str	x22, [x20]
    3bf8:	ldrb	w0, [sp, #184]
    3bfc:	tbnz	w0, #1, 45b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xcfc>
    3c00:	ldrb	w0, [sp, #184]
    3c04:	tbnz	w0, #0, 3c34 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x380>
    3c08:	ldrb	w0, [sp, #360]
    3c0c:	tbz	w0, #1, 45d8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd24>
    3c10:	add	x0, sp, #0x160
    3c14:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3c18:	and	x0, x0, #0xff
    3c1c:	and	w0, w0, #0xfffffffd
    3c20:	strb	w0, [sp, #184]
    3c24:	ldr	x0, [sp, #176]
    3c28:	str	xzr, [sp, #176]
    3c2c:	orr	x0, x0, #0x1
    3c30:	str	x0, [x20]
    3c34:	ldr	x0, [sp, #176]
    3c38:	cbz	x0, 3c08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x354>
    3c3c:	ldr	x1, [x0]
    3c40:	ldr	x1, [x1, #8]
    3c44:	blr	x1
    3c48:	b	3c08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x354>
    3c4c:	ldr	x22, [sp, #304]
    3c50:	tbnz	w22, #7, 3c5c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3a8>
    3c54:	and	x22, x22, #0xffffffff
    3c58:	b	3bec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    3c5c:	and	x22, x22, #0x7f
    3c60:	mov	w25, #0x0                   	// #0
    3c64:	add	x28, sp, #0x1b0
    3c68:	b	3ce0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x42c>
    3c6c:	ldrb	w0, [sp, #312]
    3c70:	and	w25, w0, #0x1
    3c74:	tbz	w0, #0, 3bec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    3c78:	mov	w25, w1
    3c7c:	b	3bd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x324>
    3c80:	add	x0, sp, #0x130
    3c84:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3c88:	ldrb	w0, [sp, #440]
    3c8c:	and	w2, w0, #0x1
    3c90:	ldrb	w1, [sp, #312]
    3c94:	bfxil	w1, w2, #0, #1
    3c98:	orr	w1, w1, #0x2
    3c9c:	strb	w1, [sp, #312]
    3ca0:	and	w0, w0, #0xfffffffd
    3ca4:	strb	w0, [sp, #440]
    3ca8:	cbnz	w2, 3d18 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x464>
    3cac:	ldr	x0, [sp, #432]
    3cb0:	str	x0, [sp, #304]
    3cb4:	ldrb	w0, [sp, #312]
    3cb8:	and	w1, w0, #0x1
    3cbc:	bfi	w0, w1, #1, #1
    3cc0:	strb	w0, [sp, #312]
    3cc4:	cbnz	w1, 3d24 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x470>
    3cc8:	add	w25, w25, #0x7
    3ccc:	ldr	x2, [sp, #304]
    3cd0:	and	x0, x2, #0x7f
    3cd4:	lsl	x0, x0, x25
    3cd8:	orr	x22, x22, x0
    3cdc:	tbz	w2, #7, 3c6c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3b8>
    3ce0:	mov	x8, x28
    3ce4:	mov	w1, #0x8                   	// #8
    3ce8:	mov	x0, x21
    3cec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3cf0:	ldrb	w0, [sp, #312]
    3cf4:	tbnz	w0, #1, 3c80 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3cc>
    3cf8:	ldrb	w0, [sp, #312]
    3cfc:	tbz	w0, #0, 3c88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3d4>
    3d00:	ldr	x0, [sp, #304]
    3d04:	cbz	x0, 3c88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3d4>
    3d08:	ldr	x1, [x0]
    3d0c:	ldr	x1, [x1, #8]
    3d10:	blr	x1
    3d14:	b	3c88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3d4>
    3d18:	ldr	x0, [sp, #432]
    3d1c:	str	x0, [sp, #304]
    3d20:	b	3cb4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x400>
    3d24:	and	x0, x0, #0xff
    3d28:	and	w0, w0, #0xfffffffd
    3d2c:	strb	w0, [sp, #312]
    3d30:	ldr	x22, [sp, #304]
    3d34:	str	xzr, [sp, #304]
    3d38:	b	3bd4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x320>
    3d3c:	ldr	x25, [sp, #368]
    3d40:	ldr	w1, [x25, #8]
    3d44:	ldr	w0, [x25, #12]
    3d48:	cmp	w1, w0
    3d4c:	b.cs	3db4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x500>  // b.hs, b.nlast
    3d50:	ldr	w0, [x25, #8]
    3d54:	ldr	x1, [x25]
    3d58:	lsl	x0, x0, #4
    3d5c:	add	x2, x1, x0
    3d60:	str	x22, [x1, x0]
    3d64:	mov	x0, #0x1                   	// #1
    3d68:	str	x0, [x2, #8]
    3d6c:	ldr	w0, [x25, #8]
    3d70:	mov	w1, w0
    3d74:	add	x1, x1, #0x1
    3d78:	ldr	w2, [x25, #12]
    3d7c:	cmp	x1, x2
    3d80:	b.hi	3dcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x518>  // b.pmore
    3d84:	add	w0, w0, #0x1
    3d88:	str	w0, [x25, #8]
    3d8c:	ldrb	w0, [sp, #184]
    3d90:	tbnz	w0, #1, 45b8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd04>
    3d94:	ldrb	w0, [sp, #184]
    3d98:	tbz	w0, #0, 3f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x658>
    3d9c:	ldr	x0, [sp, #176]
    3da0:	cbz	x0, 3f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x658>
    3da4:	ldr	x1, [x0]
    3da8:	ldr	x1, [x1, #8]
    3dac:	blr	x1
    3db0:	b	3f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x658>
    3db4:	mov	x3, #0x10                  	// #16
    3db8:	mov	x2, #0x0                   	// #0
    3dbc:	add	x1, x25, x3
    3dc0:	mov	x0, x25
    3dc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3dc8:	b	3d50 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x49c>
    3dcc:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3dd0:	add	x3, x3, #0x0
    3dd4:	mov	w2, #0x43                  	// #67
    3dd8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ddc:	add	x1, x1, #0x0
    3de0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3de4:	add	x0, x0, #0x0
    3de8:	bl	0 <__assert_fail>
    3dec:	add	x8, sp, #0xc0
    3df0:	mov	w1, #0x3                   	// #3
    3df4:	mov	x0, x21
    3df8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3dfc:	ldrb	w0, [sp, #200]
    3e00:	and	w1, w0, #0x1
    3e04:	bfi	w0, w1, #1, #1
    3e08:	strb	w0, [sp, #200]
    3e0c:	cbnz	w1, 3e30 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x57c>
    3e10:	ldr	x22, [sp, #192]
    3e14:	cmp	w22, #0x2
    3e18:	b.hi	3e64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5b0>  // b.pmore
    3e1c:	cbnz	w22, 3f48 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x694>
    3e20:	mov	w1, #0x1                   	// #1
    3e24:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3e28:	add	x0, x0, #0x0
    3e2c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3e30:	and	x0, x0, #0xff
    3e34:	and	w0, w0, #0xfffffffd
    3e38:	strb	w0, [sp, #200]
    3e3c:	ldr	x0, [sp, #192]
    3e40:	str	xzr, [sp, #192]
    3e44:	orr	x0, x0, #0x1
    3e48:	str	x0, [x20]
    3e4c:	ldr	x0, [sp, #192]
    3e50:	cbz	x0, 3bf8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x344>
    3e54:	ldr	x1, [x0]
    3e58:	ldr	x1, [x1, #8]
    3e5c:	blr	x1
    3e60:	b	3bf8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x344>
    3e64:	sub	w0, w22, #0x3
    3e68:	cmp	w0, #0x2
    3e6c:	b.hi	3e20 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x56c>  // b.pmore
    3e70:	ldr	x25, [sp, #368]
    3e74:	mov	x28, #0x0                   	// #0
    3e78:	bfi	x28, x22, #1, #3
    3e7c:	ldr	w1, [x25, #8]
    3e80:	ldr	w0, [x25, #12]
    3e84:	cmp	w1, w0
    3e88:	b.cs	4440 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb8c>  // b.hs, b.nlast
    3e8c:	ldr	w0, [x25, #8]
    3e90:	ldr	x1, [x25]
    3e94:	lsl	x0, x0, #4
    3e98:	add	x2, x1, x0
    3e9c:	str	xzr, [x1, x0]
    3ea0:	str	x28, [x2, #8]
    3ea4:	ldr	w0, [x25, #8]
    3ea8:	mov	w1, w0
    3eac:	add	x1, x1, #0x1
    3eb0:	ldr	w2, [x25, #12]
    3eb4:	cmp	x1, x2
    3eb8:	b.hi	4458 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xba4>  // b.pmore
    3ebc:	add	w0, w0, #0x1
    3ec0:	str	w0, [x25, #8]
    3ec4:	ldrb	w0, [sp, #200]
    3ec8:	tbnz	w0, #1, 4594 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xce0>
    3ecc:	ldrb	w0, [sp, #200]
    3ed0:	tbz	w0, #0, 3ee8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x634>
    3ed4:	ldr	x0, [sp, #192]
    3ed8:	cbz	x0, 3ee8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x634>
    3edc:	ldr	x1, [x0]
    3ee0:	ldr	x1, [x1, #8]
    3ee4:	blr	x1
    3ee8:	ldrb	w0, [sp, #184]
    3eec:	tbnz	w0, #1, 459c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xce8>
    3ef0:	ldrb	w0, [sp, #184]
    3ef4:	tbz	w0, #0, 3f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x658>
    3ef8:	ldr	x0, [sp, #176]
    3efc:	cbz	x0, 3f0c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x658>
    3f00:	ldr	x1, [x0]
    3f04:	ldr	x1, [x1, #8]
    3f08:	blr	x1
    3f0c:	add	w24, w24, #0x1
    3f10:	cmp	w23, w24
    3f14:	b.ne	3b70 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2bc>  // b.any
    3f18:	ldp	x25, x26, [sp, #64]
    3f1c:	ldp	x27, x28, [sp, #80]
    3f20:	ldr	x0, [sp, #368]
    3f24:	ldr	w0, [x0, #8]
    3f28:	cbz	w0, 45c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd0c>
    3f2c:	add	x1, sp, #0x170
    3f30:	add	x0, x19, #0x28
    3f34:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3f38:	mov	x0, #0x1                   	// #1
    3f3c:	str	x0, [x20]
    3f40:	ldp	x23, x24, [sp, #48]
    3f44:	b	45ec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd38>
    3f48:	add	x8, sp, #0xd0
    3f4c:	mov	w1, #0x5                   	// #5
    3f50:	mov	x0, x21
    3f54:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3f58:	ldrb	w0, [sp, #216]
    3f5c:	and	w28, w0, #0x1
    3f60:	bfi	w0, w28, #1, #1
    3f64:	strb	w0, [sp, #216]
    3f68:	cbz	w28, 4010 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x75c>
    3f6c:	and	x0, x0, #0xff
    3f70:	and	w0, w0, #0xfffffffd
    3f74:	strb	w0, [sp, #216]
    3f78:	ldr	x0, [sp, #208]
    3f7c:	str	xzr, [sp, #208]
    3f80:	str	x0, [sp, #128]
    3f84:	mov	w28, #0x1                   	// #1
    3f88:	ldr	x0, [sp, #208]
    3f8c:	cbz	x0, 3f9c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6e8>
    3f90:	ldr	x1, [x0]
    3f94:	ldr	x1, [x1, #8]
    3f98:	blr	x1
    3f9c:	cbnz	w28, 4478 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xbc4>
    3fa0:	ldr	x0, [sp, #128]
    3fa4:	cbz	x0, 4494 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xbe0>
    3fa8:	ldr	x0, [sp, #128]
    3fac:	cmp	x0, #0x40
    3fb0:	b.hi	454c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xc98>  // b.pmore
    3fb4:	ldr	x25, [sp, #368]
    3fb8:	mov	x28, #0x0                   	// #0
    3fbc:	bfi	x28, x22, #1, #3
    3fc0:	ldr	w1, [x25, #8]
    3fc4:	ldr	w0, [x25, #12]
    3fc8:	cmp	w1, w0
    3fcc:	b.cs	455c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xca8>  // b.hs, b.nlast
    3fd0:	ldr	w0, [x25, #8]
    3fd4:	ldr	x1, [x25]
    3fd8:	lsl	x0, x0, #4
    3fdc:	add	x2, x1, x0
    3fe0:	ldr	x3, [sp, #128]
    3fe4:	str	x3, [x1, x0]
    3fe8:	str	x28, [x2, #8]
    3fec:	ldr	w0, [x25, #8]
    3ff0:	mov	w1, w0
    3ff4:	add	x1, x1, #0x1
    3ff8:	ldr	w2, [x25, #12]
    3ffc:	cmp	x1, x2
    4000:	b.hi	4574 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xcc0>  // b.pmore
    4004:	add	w0, w0, #0x1
    4008:	str	w0, [x25, #8]
    400c:	b	3ec4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x610>
    4010:	ldr	x0, [sp, #208]
    4014:	tbnz	w0, #4, 4024 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x770>
    4018:	and	x0, x0, #0xffffffff
    401c:	str	x0, [sp, #128]
    4020:	b	3f9c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6e8>
    4024:	and	x0, x0, #0xf
    4028:	str	x0, [sp, #128]
    402c:	str	wzr, [sp, #136]
    4030:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    4034:	ldr	x0, [x0]
    4038:	add	x0, x0, #0x10
    403c:	str	x0, [sp, #168]
    4040:	ldr	w1, [x19, #32]
    4044:	str	w1, [sp, #140]
    4048:	cmp	w1, #0x4
    404c:	b.ls	40fc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x848>  // b.plast
    4050:	ldr	x0, [x19, #24]
    4054:	and	x2, x0, #0x1f
    4058:	str	x2, [sp, #144]
    405c:	lsr	x0, x0, #5
    4060:	str	x0, [x19, #24]
    4064:	sub	w0, w1, #0x5
    4068:	str	w0, [x19, #32]
    406c:	str	w28, [sp, #152]
    4070:	ldrb	w0, [sp, #216]
    4074:	tbnz	w0, #1, 441c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb68>
    4078:	ldrb	w0, [sp, #216]
    407c:	tbz	w0, #0, 4094 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7e0>
    4080:	ldr	x0, [sp, #208]
    4084:	cbz	x0, 4094 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7e0>
    4088:	ldr	x1, [x0]
    408c:	ldr	x1, [x1, #8]
    4090:	blr	x1
    4094:	ldrb	w0, [sp, #216]
    4098:	ldr	w1, [sp, #152]
    409c:	bfxil	w0, w1, #0, #1
    40a0:	orr	w0, w0, #0x2
    40a4:	strb	w0, [sp, #216]
    40a8:	cbnz	w1, 4424 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb70>
    40ac:	ldr	x2, [sp, #144]
    40b0:	str	x2, [sp, #208]
    40b4:	and	x0, x0, #0xff
    40b8:	bfi	w0, w1, #1, #1
    40bc:	strb	w0, [sp, #216]
    40c0:	ldr	w0, [sp, #136]
    40c4:	add	w3, w0, #0x4
    40c8:	str	w3, [sp, #136]
    40cc:	mov	x1, x2
    40d0:	and	x0, x2, #0xf
    40d4:	lsl	x0, x0, x3
    40d8:	ldr	x2, [sp, #128]
    40dc:	orr	x0, x2, x0
    40e0:	str	x0, [sp, #128]
    40e4:	tbnz	w1, #4, 4040 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x78c>
    40e8:	ldrb	w0, [sp, #216]
    40ec:	and	w28, w0, #0x1
    40f0:	tbz	w0, #0, 3f9c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6e8>
    40f4:	ldr	w28, [sp, #152]
    40f8:	b	3f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6d4>
    40fc:	str	x25, [sp, #160]
    4100:	ldr	w0, [sp, #140]
    4104:	cbz	w0, 4110 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x85c>
    4108:	ldr	x0, [x19, #24]
    410c:	str	x0, [sp, #160]
    4110:	ldr	x0, [x19, #16]
    4114:	str	x0, [sp, #144]
    4118:	ldr	x1, [x19, #8]
    411c:	str	x1, [sp, #152]
    4120:	cmp	x0, x1
    4124:	b.cs	41d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x91c>  // b.hs, b.nlast
    4128:	ldr	x0, [x19]
    412c:	ldr	x2, [sp, #144]
    4130:	add	x4, x0, x2
    4134:	add	x1, x2, #0x8
    4138:	ldr	x3, [sp, #152]
    413c:	cmp	x3, x1
    4140:	b.cc	42c8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xa14>  // b.lo, b.ul, b.last
    4144:	ldr	x0, [x0, x2]
    4148:	str	x0, [x19, #24]
    414c:	mov	w1, #0x8                   	// #8
    4150:	ldr	x0, [sp, #144]
    4154:	add	x0, x0, w1, uxtw
    4158:	str	x0, [x19, #16]
    415c:	lsl	w1, w1, #3
    4160:	str	w1, [x19, #32]
    4164:	mov	w0, #0x5                   	// #5
    4168:	ldr	w1, [sp, #140]
    416c:	sub	w0, w0, w1
    4170:	str	w0, [sp, #144]
    4174:	ldr	w1, [x19, #32]
    4178:	str	w1, [sp, #152]
    417c:	cmp	w0, w1
    4180:	b.hi	4314 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xa60>  // b.pmore
    4184:	ldr	x1, [x19, #24]
    4188:	ldrb	w0, [sp, #144]
    418c:	lsr	x0, x1, x0
    4190:	str	x0, [x19, #24]
    4194:	ldr	w3, [sp, #140]
    4198:	ldr	w0, [sp, #152]
    419c:	add	w0, w3, w0
    41a0:	sub	w0, w0, #0x5
    41a4:	str	w0, [x19, #32]
    41a8:	add	w2, w3, #0x3b
    41ac:	mov	x0, #0xffffffffffffffff    	// #-1
    41b0:	lsr	x0, x0, x2
    41b4:	and	x0, x0, x1
    41b8:	lsl	x0, x0, x3
    41bc:	ldr	x1, [sp, #160]
    41c0:	orr	x0, x0, x1
    41c4:	str	x0, [sp, #144]
    41c8:	str	w28, [sp, #152]
    41cc:	b	4070 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7bc>
    41d0:	bl	0 <_ZNSt3_V216generic_categoryEv>
    41d4:	mov	w1, #0x5                   	// #5
    41d8:	str	w1, [sp, #224]
    41dc:	str	x0, [sp, #232]
    41e0:	ldr	x0, [sp, #104]
    41e4:	str	x0, [sp, #240]
    41e8:	str	xzr, [sp, #248]
    41ec:	strb	wzr, [sp, #256]
    41f0:	mov	w0, #0x1                   	// #1
    41f4:	str	w0, [sp, #336]
    41f8:	str	xzr, [sp, #328]
    41fc:	str	xzr, [sp, #320]
    4200:	str	xzr, [sp, #312]
    4204:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    4208:	ldr	x0, [x0]
    420c:	add	x0, x0, #0x10
    4210:	str	x0, [sp, #304]
    4214:	str	x27, [sp, #344]
    4218:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    421c:	add	x0, x0, #0x0
    4220:	str	x0, [sp, #280]
    4224:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4228:	ldr	x0, [x0]
    422c:	add	x0, x0, #0x10
    4230:	str	x0, [sp, #272]
    4234:	ldr	x0, [sp, #152]
    4238:	str	x0, [sp, #288]
    423c:	ldr	x0, [sp, #144]
    4240:	str	x0, [sp, #296]
    4244:	mov	x1, x26
    4248:	add	x0, sp, #0x130
    424c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    4250:	ldr	x1, [sp, #328]
    4254:	ldr	x0, [sp, #312]
    4258:	cmp	x1, x0
    425c:	b.eq	4268 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x9b4>  // b.none
    4260:	add	x0, sp, #0x130
    4264:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    4268:	mov	x8, x26
    426c:	add	x1, sp, #0xe0
    4270:	ldr	x0, [sp, #344]
    4274:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4278:	add	x0, sp, #0x130
    427c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    4280:	ldr	x0, [sp, #240]
    4284:	ldr	x1, [sp, #104]
    4288:	cmp	x0, x1
    428c:	b.eq	4294 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x9e0>  // b.none
    4290:	bl	0 <_ZdlPv>
    4294:	ldr	x0, [sp, #272]
    4298:	ands	x1, x0, #0xfffffffffffffffe
    429c:	cset	x0, ne  // ne = any
    42a0:	orr	x0, x0, x1
    42a4:	str	x0, [sp, #272]
    42a8:	mov	w1, #0x1                   	// #1
    42ac:	str	w1, [sp, #152]
    42b0:	ands	x1, x0, #0xfffffffffffffffe
    42b4:	str	x1, [sp, #144]
    42b8:	b.ne	4070 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7bc>  // b.any
    42bc:	tbz	w0, #0, 4164 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8b0>
    42c0:	add	x0, sp, #0x110
    42c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    42c8:	str	xzr, [x19, #24]
    42cc:	ldr	w0, [sp, #152]
    42d0:	ldr	w1, [sp, #144]
    42d4:	subs	w3, w0, w1
    42d8:	b.eq	430c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xa58>  // b.none
    42dc:	mov	x0, x25
    42e0:	ldrb	w1, [x4, x0]
    42e4:	lsl	w2, w0, #3
    42e8:	lsl	x2, x1, x2
    42ec:	ldr	x1, [x19, #24]
    42f0:	orr	x1, x1, x2
    42f4:	str	x1, [x19, #24]
    42f8:	add	x0, x0, #0x1
    42fc:	mov	w1, w0
    4300:	cmp	w3, w0
    4304:	b.ne	42e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xa2c>  // b.any
    4308:	b	4150 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x89c>
    430c:	mov	w1, w3
    4310:	b	4150 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x89c>
    4314:	bl	0 <_ZNSt3_V216generic_categoryEv>
    4318:	mov	w1, #0x5                   	// #5
    431c:	str	w1, [sp, #240]
    4320:	str	x0, [sp, #248]
    4324:	ldr	x0, [sp, #120]
    4328:	str	x0, [sp, #272]
    432c:	str	xzr, [sp, #280]
    4330:	strb	wzr, [sp, #288]
    4334:	mov	w0, #0x1                   	// #1
    4338:	str	w0, [sp, #336]
    433c:	str	xzr, [sp, #328]
    4340:	str	xzr, [sp, #320]
    4344:	str	xzr, [sp, #312]
    4348:	ldr	x0, [sp, #168]
    434c:	str	x0, [sp, #304]
    4350:	str	x26, [sp, #344]
    4354:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4358:	add	x0, x0, #0x0
    435c:	str	x0, [sp, #464]
    4360:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4364:	ldr	x0, [x0]
    4368:	add	x0, x0, #0x10
    436c:	str	x0, [sp, #456]
    4370:	ldr	w0, [sp, #144]
    4374:	str	w0, [sp, #472]
    4378:	ldr	w0, [sp, #152]
    437c:	str	w0, [sp, #476]
    4380:	add	x1, sp, #0x1c8
    4384:	add	x0, sp, #0x130
    4388:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    438c:	ldr	x1, [sp, #328]
    4390:	ldr	x0, [sp, #312]
    4394:	cmp	x1, x0
    4398:	b.eq	43a4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xaf0>  // b.none
    439c:	add	x0, sp, #0x130
    43a0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    43a4:	add	x8, sp, #0x1c0
    43a8:	mov	x1, x27
    43ac:	ldr	x0, [sp, #344]
    43b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    43b4:	add	x0, sp, #0x130
    43b8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    43bc:	ldr	x0, [sp, #272]
    43c0:	ldr	x1, [sp, #112]
    43c4:	cmp	x0, x1
    43c8:	b.eq	43d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb1c>  // b.none
    43cc:	bl	0 <_ZdlPv>
    43d0:	ldr	x0, [sp, #448]
    43d4:	ands	x1, x0, #0xfffffffffffffffe
    43d8:	cset	x0, ne  // ne = any
    43dc:	orr	x0, x0, x1
    43e0:	str	x0, [sp, #448]
    43e4:	ands	x0, x0, #0xfffffffffffffffe
    43e8:	str	x0, [sp, #144]
    43ec:	b.eq	43fc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb48>  // b.none
    43f0:	mov	w0, #0x1                   	// #1
    43f4:	str	w0, [sp, #152]
    43f8:	b	4070 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7bc>
    43fc:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4400:	add	x3, x3, #0x0
    4404:	mov	w2, #0x1ce                 	// #462
    4408:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    440c:	add	x1, x1, #0x0
    4410:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4414:	add	x0, x0, #0x0
    4418:	bl	0 <__assert_fail>
    441c:	add	x0, sp, #0xd0
    4420:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4424:	ldrb	w0, [sp, #216]
    4428:	and	w0, w0, #0xfffffffd
    442c:	strb	w0, [sp, #216]
    4430:	str	xzr, [sp, #208]
    4434:	ldr	x0, [sp, #144]
    4438:	str	x0, [sp, #128]
    443c:	b	3f84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6d0>
    4440:	mov	x3, #0x10                  	// #16
    4444:	mov	x2, #0x0                   	// #0
    4448:	add	x1, x25, x3
    444c:	mov	x0, x25
    4450:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4454:	b	3e8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5d8>
    4458:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    445c:	add	x3, x3, #0x0
    4460:	mov	w2, #0x43                  	// #67
    4464:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4468:	add	x1, x1, #0x0
    446c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4470:	add	x0, x0, #0x0
    4474:	bl	0 <__assert_fail>
    4478:	ldr	x0, [sp, #128]
    447c:	orr	x0, x0, #0x1
    4480:	str	x0, [x20]
    4484:	ldrb	w0, [sp, #200]
    4488:	tbz	w0, #1, 45a4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xcf0>
    448c:	add	x0, sp, #0xc0
    4490:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4494:	ldr	x22, [sp, #368]
    4498:	ldr	w1, [x22, #8]
    449c:	ldr	w0, [x22, #12]
    44a0:	cmp	w1, w0
    44a4:	b.cs	450c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xc58>  // b.hs, b.nlast
    44a8:	ldr	w0, [x22, #8]
    44ac:	ldr	x1, [x22]
    44b0:	lsl	x0, x0, #4
    44b4:	add	x2, x1, x0
    44b8:	str	xzr, [x1, x0]
    44bc:	mov	x0, #0x1                   	// #1
    44c0:	str	x0, [x2, #8]
    44c4:	ldr	w0, [x22, #8]
    44c8:	mov	w1, w0
    44cc:	add	x1, x1, #0x1
    44d0:	ldr	w2, [x22, #12]
    44d4:	cmp	x1, x2
    44d8:	b.hi	4524 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xc70>  // b.pmore
    44dc:	add	w0, w0, #0x1
    44e0:	str	w0, [x22, #8]
    44e4:	ldrb	w0, [sp, #200]
    44e8:	tbnz	w0, #1, 4544 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xc90>
    44ec:	ldrb	w0, [sp, #200]
    44f0:	tbz	w0, #0, 3d8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d8>
    44f4:	ldr	x0, [sp, #192]
    44f8:	cbz	x0, 3d8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d8>
    44fc:	ldr	x1, [x0]
    4500:	ldr	x1, [x1, #8]
    4504:	blr	x1
    4508:	b	3d8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d8>
    450c:	mov	x3, #0x10                  	// #16
    4510:	mov	x2, #0x0                   	// #0
    4514:	add	x1, x22, x3
    4518:	mov	x0, x22
    451c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4520:	b	44a8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xbf4>
    4524:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4528:	add	x3, x3, #0x0
    452c:	mov	w2, #0x43                  	// #67
    4530:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4534:	add	x1, x1, #0x0
    4538:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    453c:	add	x0, x0, #0x0
    4540:	bl	0 <__assert_fail>
    4544:	add	x0, sp, #0xc0
    4548:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    454c:	mov	w1, #0x1                   	// #1
    4550:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4554:	add	x0, x0, #0x0
    4558:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    455c:	mov	x3, #0x10                  	// #16
    4560:	mov	x2, #0x0                   	// #0
    4564:	add	x1, x25, x3
    4568:	mov	x0, x25
    456c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4570:	b	3fd0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x71c>
    4574:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4578:	add	x3, x3, #0x0
    457c:	mov	w2, #0x43                  	// #67
    4580:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4584:	add	x1, x1, #0x0
    4588:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    458c:	add	x0, x0, #0x0
    4590:	bl	0 <__assert_fail>
    4594:	add	x0, sp, #0xc0
    4598:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    459c:	add	x0, sp, #0xb0
    45a0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    45a4:	ldrb	w0, [sp, #200]
    45a8:	tbz	w0, #0, 3bf8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x344>
    45ac:	b	3e4c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x598>
    45b0:	add	x0, sp, #0xb0
    45b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    45b8:	add	x0, sp, #0xb0
    45bc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    45c0:	stp	x25, x26, [sp, #64]
    45c4:	stp	x27, x28, [sp, #80]
    45c8:	mov	w1, #0x1                   	// #1
    45cc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    45d0:	add	x0, x0, #0x0
    45d4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    45d8:	ldrb	w0, [sp, #360]
    45dc:	tbnz	w0, #0, 4630 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd7c>
    45e0:	ldp	x23, x24, [sp, #48]
    45e4:	ldp	x25, x26, [sp, #64]
    45e8:	ldp	x27, x28, [sp, #80]
    45ec:	ldr	x19, [sp, #376]
    45f0:	cbz	x19, 461c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd68>
    45f4:	adrp	x0, 0 <__pthread_key_create>
    45f8:	ldr	x0, [x0]
    45fc:	cbz	x0, 4640 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd8c>
    4600:	add	x1, x19, #0x8
    4604:	ldaxr	w0, [x1]
    4608:	sub	w2, w0, #0x1
    460c:	stlxr	w3, w2, [x1]
    4610:	cbnz	w3, 4604 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd50>
    4614:	cmp	w0, #0x1
    4618:	b.eq	4650 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd9c>  // b.none
    461c:	mov	x0, x20
    4620:	ldp	x19, x20, [sp, #16]
    4624:	ldp	x21, x22, [sp, #32]
    4628:	ldp	x29, x30, [sp], #480
    462c:	ret
    4630:	ldp	x23, x24, [sp, #48]
    4634:	ldp	x25, x26, [sp, #64]
    4638:	ldp	x27, x28, [sp, #80]
    463c:	b	3aac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1f8>
    4640:	ldr	w0, [x19, #8]
    4644:	sub	w1, w0, #0x1
    4648:	str	w1, [x19, #8]
    464c:	b	4614 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd60>
    4650:	ldr	x0, [x19]
    4654:	ldr	x1, [x0, #16]
    4658:	mov	x0, x19
    465c:	blr	x1
    4660:	adrp	x0, 0 <__pthread_key_create>
    4664:	ldr	x0, [x0]
    4668:	cbz	x0, 469c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xde8>
    466c:	add	x1, x19, #0xc
    4670:	ldaxr	w0, [x1]
    4674:	sub	w2, w0, #0x1
    4678:	stlxr	w3, w2, [x1]
    467c:	cbnz	w3, 4670 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xdbc>
    4680:	cmp	w0, #0x1
    4684:	b.ne	461c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd68>  // b.any
    4688:	ldr	x0, [x19]
    468c:	ldr	x1, [x0, #24]
    4690:	mov	x0, x19
    4694:	blr	x1
    4698:	b	461c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd68>
    469c:	ldr	w0, [x19, #12]
    46a0:	sub	w1, w0, #0x1
    46a4:	str	w1, [x19, #12]
    46a8:	b	4680 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xdcc>

00000000000046ac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    46ac:	sub	sp, sp, #0x330
    46b0:	stp	x29, x30, [sp]
    46b4:	mov	x29, sp
    46b8:	stp	x19, x20, [sp, #16]
    46bc:	stp	x21, x22, [sp, #32]
    46c0:	mov	x19, x8
    46c4:	mov	x20, x0
    46c8:	and	w21, w1, #0xff
    46cc:	add	x8, sp, #0xe0
    46d0:	mov	x2, #0x0                   	// #0
    46d4:	mov	w1, #0x0                   	// #0
    46d8:	bl	32f8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    46dc:	ldr	x0, [sp, #224]
    46e0:	ands	x1, x0, #0xfffffffffffffffe
    46e4:	cset	x0, ne  // ne = any
    46e8:	orr	x0, x0, x1
    46ec:	str	x0, [sp, #224]
    46f0:	ands	x1, x0, #0xfffffffffffffffe
    46f4:	b.eq	4720 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x74>  // b.none
    46f8:	ldrb	w0, [x19, #32]
    46fc:	orr	w0, w0, #0x3
    4700:	strb	w0, [x19, #32]
    4704:	str	x1, [x19]
    4708:	mov	x0, x19
    470c:	ldp	x19, x20, [sp, #16]
    4710:	ldp	x21, x22, [sp, #32]
    4714:	ldp	x29, x30, [sp]
    4718:	add	sp, sp, #0x330
    471c:	ret
    4720:	stp	x23, x24, [sp, #48]
    4724:	stp	x25, x26, [sp, #64]
    4728:	stp	x27, x28, [sp, #80]
    472c:	and	x24, x0, #0x1
    4730:	tbnz	w0, #0, 480c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    4734:	str	xzr, [sp, #792]
    4738:	str	xzr, [sp, #800]
    473c:	str	xzr, [sp, #808]
    4740:	add	x0, sp, #0x118
    4744:	str	x0, [sp, #264]
    4748:	str	wzr, [sp, #272]
    474c:	mov	w0, #0x40                  	// #64
    4750:	str	w0, [sp, #276]
    4754:	str	xzr, [sp, #104]
    4758:	add	x22, sp, #0xe0
    475c:	add	x26, x22, #0x10
    4760:	add	x23, sp, #0xc0
    4764:	add	x25, x23, #0x10
    4768:	mov	x27, #0x8ba3                	// #35747
    476c:	movk	x27, #0xba2e, lsl #16
    4770:	movk	x27, #0xa2e8, lsl #32
    4774:	movk	x27, #0x2e8b, lsl #48
    4778:	add	x8, sp, #0xa0
    477c:	mov	w1, #0x2                   	// #2
    4780:	mov	x0, x20
    4784:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4788:	ldrb	w0, [sp, #168]
    478c:	and	w1, w0, #0x1
    4790:	bfi	w0, w1, #1, #1
    4794:	strb	w0, [sp, #168]
    4798:	cbnz	w1, 4814 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x168>
    479c:	ldr	w0, [sp, #160]
    47a0:	cmp	w0, #0x1
    47a4:	b.eq	48b0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x204>  // b.none
    47a8:	tst	w0, #0xfffffffd
    47ac:	b.eq	4864 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1b8>  // b.none
    47b0:	ldr	w1, [sp, #164]
    47b4:	cmp	w1, #0x2
    47b8:	b.ne	4a04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x358>  // b.any
    47bc:	ldr	x0, [sp, #104]
    47c0:	cbz	x0, 48f0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x244>
    47c4:	mov	x8, x22
    47c8:	mov	x0, x20
    47cc:	bl	38b4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    47d0:	ldr	x0, [sp, #224]
    47d4:	ands	x1, x0, #0xfffffffffffffffe
    47d8:	cset	x0, ne  // ne = any
    47dc:	orr	x0, x0, x1
    47e0:	str	x0, [sp, #224]
    47e4:	ands	x1, x0, #0xfffffffffffffffe
    47e8:	b.eq	490c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x260>  // b.none
    47ec:	ldrb	w0, [x19, #32]
    47f0:	orr	w0, w0, #0x3
    47f4:	strb	w0, [x19, #32]
    47f8:	str	x1, [x19]
    47fc:	ldrb	w0, [sp, #168]
    4800:	tbz	w0, #1, 4fac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x900>
    4804:	add	x0, sp, #0xa0
    4808:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    480c:	add	x0, sp, #0xe0
    4810:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    4814:	and	x0, x0, #0xff
    4818:	and	w0, w0, #0xfffffffd
    481c:	strb	w0, [sp, #168]
    4820:	ldr	x0, [sp, #160]
    4824:	str	xzr, [sp, #160]
    4828:	ldrb	w1, [x19, #32]
    482c:	orr	w1, w1, #0x3
    4830:	strb	w1, [x19, #32]
    4834:	ands	x0, x0, #0xfffffffffffffffe
    4838:	cbz	x0, 4844 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x198>
    483c:	str	x0, [x19]
    4840:	b	4fb4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x908>
    4844:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4848:	add	x3, x3, #0x0
    484c:	mov	w2, #0x1ce                 	// #462
    4850:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4854:	add	x1, x1, #0x0
    4858:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    485c:	add	x0, x0, #0x0
    4860:	bl	0 <__assert_fail>
    4864:	ldrb	w0, [x19, #32]
    4868:	and	w0, w0, #0xfffffffe
    486c:	orr	w0, w0, #0x2
    4870:	strb	w0, [x19, #32]
    4874:	strb	wzr, [x19]
    4878:	strb	wzr, [x19, #24]
    487c:	ldr	x0, [sp, #264]
    4880:	add	x1, sp, #0x118
    4884:	cmp	x0, x1
    4888:	b.eq	4890 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1e4>  // b.none
    488c:	bl	0 <free>
    4890:	ldr	x21, [sp, #792]
    4894:	ldr	x24, [sp, #800]
    4898:	cmp	x21, x24
    489c:	b.eq	50e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa38>  // b.none
    48a0:	adrp	x23, 0 <__pthread_key_create>
    48a4:	ldr	x25, [x23]
    48a8:	mov	x23, x25
    48ac:	b	5038 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x98c>
    48b0:	ldrb	w0, [x19, #32]
    48b4:	and	w0, w0, #0xfffffffe
    48b8:	orr	w0, w0, #0x2
    48bc:	strb	w0, [x19, #32]
    48c0:	ldr	x0, [sp, #792]
    48c4:	str	x0, [x19]
    48c8:	ldr	x0, [sp, #800]
    48cc:	str	x0, [x19, #8]
    48d0:	ldr	x0, [sp, #808]
    48d4:	str	x0, [x19, #16]
    48d8:	str	xzr, [sp, #808]
    48dc:	str	xzr, [sp, #800]
    48e0:	str	xzr, [sp, #792]
    48e4:	mov	w0, #0x1                   	// #1
    48e8:	strb	w0, [x19, #24]
    48ec:	b	487c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d0>
    48f0:	ldrb	w0, [x19, #32]
    48f4:	and	w0, w0, #0xfffffffe
    48f8:	orr	w0, w0, #0x2
    48fc:	strb	w0, [x19, #32]
    4900:	strb	wzr, [x19]
    4904:	strb	wzr, [x19, #24]
    4908:	b	487c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d0>
    490c:	tbnz	w0, #0, 4988 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2dc>
    4910:	ldr	x1, [x20, #48]
    4914:	sub	x1, x1, #0x10
    4918:	ldr	x0, [sp, #104]
    491c:	add	x0, x0, #0x8
    4920:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4924:	ldr	x0, [x20, #48]
    4928:	sub	x2, x0, #0x10
    492c:	str	x2, [x20, #48]
    4930:	ldur	x28, [x0, #-8]
    4934:	cbz	x28, 4960 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b4>
    4938:	adrp	x0, 0 <__pthread_key_create>
    493c:	ldr	x0, [x0]
    4940:	cbz	x0, 4990 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2e4>
    4944:	add	x1, x28, #0x8
    4948:	ldaxr	w0, [x1]
    494c:	sub	w2, w0, #0x1
    4950:	stlxr	w3, w2, [x1]
    4954:	cbnz	w3, 4948 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x29c>
    4958:	cmp	w0, #0x1
    495c:	b.eq	49a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2f4>  // b.none
    4960:	ldrb	w0, [sp, #168]
    4964:	tbnz	w0, #1, 49fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x350>
    4968:	ldrb	w0, [sp, #168]
    496c:	tbz	w0, #0, 4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4970:	ldr	x0, [sp, #160]
    4974:	cbz	x0, 4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4978:	ldr	x1, [x0]
    497c:	ldr	x1, [x1, #8]
    4980:	blr	x1
    4984:	b	4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4988:	add	x0, sp, #0xe0
    498c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    4990:	ldr	w0, [x28, #8]
    4994:	sub	w1, w0, #0x1
    4998:	str	w1, [x28, #8]
    499c:	b	4958 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2ac>
    49a0:	ldr	x0, [x28]
    49a4:	ldr	x1, [x0, #16]
    49a8:	mov	x0, x28
    49ac:	blr	x1
    49b0:	adrp	x0, 0 <__pthread_key_create>
    49b4:	ldr	x0, [x0]
    49b8:	cbz	x0, 49ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x340>
    49bc:	add	x1, x28, #0xc
    49c0:	ldaxr	w0, [x1]
    49c4:	sub	w2, w0, #0x1
    49c8:	stlxr	w3, w2, [x1]
    49cc:	cbnz	w3, 49c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x314>
    49d0:	cmp	w0, #0x1
    49d4:	b.ne	4960 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b4>  // b.any
    49d8:	ldr	x0, [x28]
    49dc:	ldr	x1, [x0, #24]
    49e0:	mov	x0, x28
    49e4:	blr	x1
    49e8:	b	4960 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b4>
    49ec:	ldr	w0, [x28, #12]
    49f0:	sub	w1, w0, #0x1
    49f4:	str	w1, [x28, #12]
    49f8:	b	49d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x324>
    49fc:	add	x0, sp, #0xa0
    4a00:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4a04:	str	wzr, [sp, #272]
    4a08:	add	x8, sp, #0xb0
    4a0c:	mov	x3, #0x0                   	// #0
    4a10:	add	x2, sp, #0x108
    4a14:	mov	x0, x20
    4a18:	bl	19c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    4a1c:	ldrb	w0, [sp, #184]
    4a20:	and	w1, w0, #0x1
    4a24:	bfi	w0, w1, #1, #1
    4a28:	strb	w0, [sp, #184]
    4a2c:	cbnz	w1, 4a90 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e4>
    4a30:	ldr	w0, [sp, #176]
    4a34:	cmp	w0, #0x2
    4a38:	b.eq	4bf8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x54c>  // b.none
    4a3c:	cmp	w0, #0x3
    4a40:	b.eq	4d28 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x67c>  // b.none
    4a44:	cmp	w0, #0x1
    4a48:	b.eq	4af4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x448>  // b.none
    4a4c:	ldrb	w0, [sp, #184]
    4a50:	tbz	w0, #0, 4a68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>
    4a54:	ldr	x0, [sp, #176]
    4a58:	cbz	x0, 4a68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>
    4a5c:	ldr	x1, [x0]
    4a60:	ldr	x1, [x1, #8]
    4a64:	blr	x1
    4a68:	ldrb	w0, [sp, #168]
    4a6c:	tbnz	w0, #1, 4fa4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8f8>
    4a70:	ldrb	w0, [sp, #168]
    4a74:	tbz	w0, #0, 4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4a78:	ldr	x0, [sp, #160]
    4a7c:	cbz	x0, 4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4a80:	ldr	x1, [x0]
    4a84:	ldr	x1, [x1, #8]
    4a88:	blr	x1
    4a8c:	b	4778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    4a90:	and	x0, x0, #0xff
    4a94:	and	w0, w0, #0xfffffffd
    4a98:	strb	w0, [sp, #184]
    4a9c:	ldr	x0, [sp, #176]
    4aa0:	str	xzr, [sp, #176]
    4aa4:	ldrb	w1, [x19, #32]
    4aa8:	orr	w1, w1, #0x3
    4aac:	strb	w1, [x19, #32]
    4ab0:	ands	x0, x0, #0xfffffffffffffffe
    4ab4:	cbz	x0, 4ad4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x428>
    4ab8:	str	x0, [x19]
    4abc:	ldr	x0, [sp, #176]
    4ac0:	cbz	x0, 47fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x150>
    4ac4:	ldr	x1, [x0]
    4ac8:	ldr	x1, [x1, #8]
    4acc:	blr	x1
    4ad0:	b	47fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x150>
    4ad4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4ad8:	add	x3, x3, #0x0
    4adc:	mov	w2, #0x1ce                 	// #462
    4ae0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4ae4:	add	x1, x1, #0x0
    4ae8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4aec:	add	x0, x0, #0x0
    4af0:	bl	0 <__assert_fail>
    4af4:	ldr	w0, [sp, #272]
    4af8:	cbz	w0, 4bc4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x518>
    4afc:	ldr	x0, [sp, #264]
    4b00:	ldr	x28, [x0]
    4b04:	mov	w4, w28
    4b08:	ldr	x5, [sp, #792]
    4b0c:	ldr	x1, [sp, #800]
    4b10:	cmp	x5, x1
    4b14:	b.eq	4b24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x478>  // b.none
    4b18:	ldur	w0, [x1, #-88]
    4b1c:	cmp	w28, w0
    4b20:	b.eq	4be0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x534>  // b.none
    4b24:	sub	x2, x1, x5
    4b28:	asr	x2, x2, #3
    4b2c:	mul	x2, x2, x27
    4b30:	cbz	w2, 4b6c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4c0>
    4b34:	mov	x0, x5
    4b38:	sub	w2, w2, #0x1
    4b3c:	add	x3, x2, x2, lsl #1
    4b40:	lsl	x3, x3, #2
    4b44:	sub	x3, x3, x2
    4b48:	add	x5, x5, #0x58
    4b4c:	add	x3, x5, x3, lsl #3
    4b50:	str	x0, [sp, #104]
    4b54:	ldr	w2, [x0]
    4b58:	cmp	w4, w2
    4b5c:	b.eq	4a68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>  // b.none
    4b60:	add	x0, x0, #0x58
    4b64:	cmp	x0, x3
    4b68:	b.ne	4b50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4a4>  // b.any
    4b6c:	ldr	x0, [sp, #808]
    4b70:	cmp	x1, x0
    4b74:	b.eq	4bec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x540>  // b.none
    4b78:	stp	xzr, xzr, [x1]
    4b7c:	stp	xzr, xzr, [x1, #48]
    4b80:	str	xzr, [x1, #16]
    4b84:	str	xzr, [x1, #24]
    4b88:	add	x0, x1, #0x30
    4b8c:	str	x0, [x1, #32]
    4b90:	str	xzr, [x1, #40]
    4b94:	str	xzr, [x1, #64]
    4b98:	str	xzr, [x1, #72]
    4b9c:	str	xzr, [x1, #80]
    4ba0:	ldr	x0, [sp, #800]
    4ba4:	add	x0, x0, #0x58
    4ba8:	str	x0, [sp, #800]
    4bac:	ldr	x0, [sp, #800]
    4bb0:	stur	w28, [x0, #-88]
    4bb4:	ldr	x0, [sp, #800]
    4bb8:	sub	x0, x0, #0x58
    4bbc:	str	x0, [sp, #104]
    4bc0:	b	4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>
    4bc4:	ldrb	w0, [x19, #32]
    4bc8:	and	w0, w0, #0xfffffffe
    4bcc:	orr	w0, w0, #0x2
    4bd0:	strb	w0, [x19, #32]
    4bd4:	strb	wzr, [x19]
    4bd8:	strb	wzr, [x19, #24]
    4bdc:	b	47fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x150>
    4be0:	sub	x0, x1, #0x58
    4be4:	str	x0, [sp, #104]
    4be8:	b	4a68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>
    4bec:	add	x0, sp, #0x318
    4bf0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4bf4:	b	4bac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x500>
    4bf8:	ldr	x0, [sp, #104]
    4bfc:	cbz	x0, 4c14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x568>
    4c00:	cbnz	w21, 4c30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x584>
    4c04:	ldrb	w0, [sp, #184]
    4c08:	tbz	w0, #1, 4a4c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3a0>
    4c0c:	add	x0, sp, #0xb0
    4c10:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4c14:	ldrb	w0, [x19, #32]
    4c18:	and	w0, w0, #0xfffffffe
    4c1c:	orr	w0, w0, #0x2
    4c20:	strb	w0, [x19, #32]
    4c24:	strb	wzr, [x19]
    4c28:	strb	wzr, [x19, #24]
    4c2c:	b	47fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x150>
    4c30:	str	x26, [sp, #224]
    4c34:	str	xzr, [sp, #232]
    4c38:	strb	wzr, [sp, #240]
    4c3c:	ldr	w0, [sp, #272]
    4c40:	str	w0, [sp, #140]
    4c44:	cbz	w0, 4d04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x658>
    4c48:	mov	x28, x24
    4c4c:	b	4cb8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x60c>
    4c50:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4c54:	add	x3, x3, #0x0
    4c58:	mov	w2, #0x95                  	// #149
    4c5c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4c60:	add	x1, x1, #0x0
    4c64:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4c68:	add	x0, x0, #0x0
    4c6c:	bl	0 <__assert_fail>
    4c70:	mov	x4, #0x1                   	// #1
    4c74:	mov	x3, #0x0                   	// #0
    4c78:	mov	x2, #0x0                   	// #0
    4c7c:	ldr	x1, [sp, #112]
    4c80:	mov	x0, x22
    4c84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    4c88:	ldr	x0, [sp, #224]
    4c8c:	ldr	x1, [sp, #112]
    4c90:	ldrb	w2, [sp, #120]
    4c94:	strb	w2, [x0, x1]
    4c98:	ldr	x1, [sp, #128]
    4c9c:	str	x1, [sp, #232]
    4ca0:	ldr	x0, [sp, #224]
    4ca4:	strb	wzr, [x0, x1]
    4ca8:	add	x28, x28, #0x1
    4cac:	ldr	w0, [sp, #140]
    4cb0:	cmp	w0, w28
    4cb4:	b.eq	4d04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x658>  // b.none
    4cb8:	ldr	w0, [sp, #272]
    4cbc:	cmp	x0, x28
    4cc0:	b.ls	4c50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5a4>  // b.plast
    4cc4:	ldr	x0, [sp, #264]
    4cc8:	ldr	x0, [x0, x28, lsl #3]
    4ccc:	and	w0, w0, #0xff
    4cd0:	str	w0, [sp, #120]
    4cd4:	ldr	x0, [sp, #232]
    4cd8:	str	x0, [sp, #112]
    4cdc:	add	x1, x0, #0x1
    4ce0:	str	x1, [sp, #128]
    4ce4:	ldr	x0, [sp, #224]
    4ce8:	cmp	x0, x26
    4cec:	ldr	x0, [sp, #240]
    4cf0:	mov	x2, #0xf                   	// #15
    4cf4:	csel	x0, x0, x2, ne  // ne = any
    4cf8:	cmp	x1, x0
    4cfc:	b.ls	4c88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5dc>  // b.plast
    4d00:	b	4c70 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5c4>
    4d04:	mov	x1, x22
    4d08:	ldr	x0, [sp, #104]
    4d0c:	add	x0, x0, #0x20
    4d10:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    4d14:	ldr	x0, [sp, #224]
    4d18:	cmp	x0, x26
    4d1c:	b.eq	4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>  // b.none
    4d20:	bl	0 <_ZdlPv>
    4d24:	b	4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>
    4d28:	ldr	x0, [sp, #104]
    4d2c:	cbz	x0, 4d58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6ac>
    4d30:	cbz	w21, 4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>
    4d34:	str	x25, [sp, #192]
    4d38:	str	xzr, [sp, #200]
    4d3c:	strb	wzr, [sp, #208]
    4d40:	ldr	w0, [sp, #272]
    4d44:	str	w0, [sp, #140]
    4d48:	cmp	w0, #0x1
    4d4c:	b.eq	5100 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa54>  // b.none
    4d50:	mov	w28, #0x1                   	// #1
    4d54:	b	4ddc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x730>
    4d58:	ldrb	w0, [x19, #32]
    4d5c:	and	w0, w0, #0xfffffffe
    4d60:	orr	w0, w0, #0x2
    4d64:	strb	w0, [x19, #32]
    4d68:	strb	wzr, [x19]
    4d6c:	strb	wzr, [x19, #24]
    4d70:	b	47fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x150>
    4d74:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4d78:	add	x3, x3, #0x0
    4d7c:	mov	w2, #0x95                  	// #149
    4d80:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4d84:	add	x1, x1, #0x0
    4d88:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4d8c:	add	x0, x0, #0x0
    4d90:	bl	0 <__assert_fail>
    4d94:	mov	x4, #0x1                   	// #1
    4d98:	mov	x3, #0x0                   	// #0
    4d9c:	mov	x2, #0x0                   	// #0
    4da0:	ldr	x1, [sp, #112]
    4da4:	mov	x0, x23
    4da8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    4dac:	ldr	x0, [sp, #192]
    4db0:	ldr	x1, [sp, #112]
    4db4:	ldrb	w2, [sp, #120]
    4db8:	strb	w2, [x0, x1]
    4dbc:	ldr	x1, [sp, #128]
    4dc0:	str	x1, [sp, #200]
    4dc4:	ldr	x0, [sp, #192]
    4dc8:	strb	wzr, [x0, x1]
    4dcc:	add	w28, w28, #0x1
    4dd0:	ldr	w0, [sp, #140]
    4dd4:	cmp	w28, w0
    4dd8:	b.eq	4e2c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x780>  // b.none
    4ddc:	mov	w1, w28
    4de0:	ldr	w0, [sp, #272]
    4de4:	cmp	x0, w28, uxtw
    4de8:	b.ls	4d74 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c8>  // b.plast
    4dec:	ldr	x0, [sp, #264]
    4df0:	ldr	x0, [x0, x1, lsl #3]
    4df4:	and	w0, w0, #0xff
    4df8:	str	w0, [sp, #120]
    4dfc:	ldr	x0, [sp, #200]
    4e00:	str	x0, [sp, #112]
    4e04:	add	x1, x0, #0x1
    4e08:	str	x1, [sp, #128]
    4e0c:	ldr	x0, [sp, #192]
    4e10:	cmp	x0, x25
    4e14:	ldr	x0, [sp, #208]
    4e18:	mov	x2, #0xf                   	// #15
    4e1c:	csel	x0, x0, x2, ne  // ne = any
    4e20:	cmp	x1, x0
    4e24:	b.ls	4dac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x700>  // b.plast
    4e28:	b	4d94 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6e8>
    4e2c:	ldr	x0, [sp, #104]
    4e30:	add	x0, x0, #0x40
    4e34:	str	x0, [sp, #112]
    4e38:	ldr	w0, [sp, #272]
    4e3c:	cbz	w0, 4f10 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x864>
    4e40:	ldr	x0, [sp, #264]
    4e44:	ldr	x0, [x0]
    4e48:	str	w0, [sp, #224]
    4e4c:	add	x0, x22, #0x18
    4e50:	str	x0, [sp, #232]
    4e54:	ldr	x0, [sp, #192]
    4e58:	str	x0, [sp, #120]
    4e5c:	ldr	x28, [sp, #200]
    4e60:	cmp	x28, #0x0
    4e64:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    4e68:	b.eq	4f30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x884>  // b.none
    4e6c:	str	x28, [sp, #152]
    4e70:	cmp	x28, #0xf
    4e74:	b.hi	4f3c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x890>  // b.pmore
    4e78:	cmp	x28, #0x1
    4e7c:	b.ne	4f68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8bc>  // b.any
    4e80:	ldr	x0, [sp, #120]
    4e84:	ldrb	w0, [x0]
    4e88:	strb	w0, [sp, #248]
    4e8c:	ldr	x0, [sp, #152]
    4e90:	str	x0, [sp, #240]
    4e94:	ldr	x1, [sp, #232]
    4e98:	strb	wzr, [x1, x0]
    4e9c:	ldr	x0, [sp, #104]
    4ea0:	ldr	x1, [x0, #72]
    4ea4:	add	x0, x0, #0x40
    4ea8:	ldr	x0, [x0, #16]
    4eac:	cmp	x1, x0
    4eb0:	b.eq	4f80 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8d4>  // b.none
    4eb4:	mov	x0, x1
    4eb8:	ldr	w2, [sp, #224]
    4ebc:	str	w2, [x0], #24
    4ec0:	str	x0, [x1, #8]
    4ec4:	ldr	x0, [sp, #232]
    4ec8:	add	x2, x22, #0x18
    4ecc:	cmp	x0, x2
    4ed0:	b.eq	4f74 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8c8>  // b.none
    4ed4:	str	x0, [x1, #8]
    4ed8:	ldr	x0, [sp, #248]
    4edc:	str	x0, [x1, #24]
    4ee0:	ldr	x0, [sp, #240]
    4ee4:	str	x0, [x1, #16]
    4ee8:	ldr	x0, [sp, #104]
    4eec:	add	x1, x0, #0x40
    4ef0:	ldr	x0, [x0, #72]
    4ef4:	add	x0, x0, #0x28
    4ef8:	str	x0, [x1, #8]
    4efc:	ldr	x0, [sp, #192]
    4f00:	cmp	x0, x25
    4f04:	b.eq	4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>  // b.none
    4f08:	bl	0 <_ZdlPv>
    4f0c:	b	4c04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x558>
    4f10:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4f14:	add	x3, x3, #0x0
    4f18:	mov	w2, #0x95                  	// #149
    4f1c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4f20:	add	x1, x1, #0x0
    4f24:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4f28:	add	x0, x0, #0x0
    4f2c:	bl	0 <__assert_fail>
    4f30:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4f34:	add	x0, x0, #0x0
    4f38:	bl	0 <_ZSt19__throw_logic_errorPKc>
    4f3c:	mov	x2, #0x0                   	// #0
    4f40:	add	x1, sp, #0x98
    4f44:	add	x0, x22, #0x8
    4f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    4f4c:	str	x0, [sp, #232]
    4f50:	ldr	x1, [sp, #152]
    4f54:	str	x1, [sp, #248]
    4f58:	mov	x2, x28
    4f5c:	ldr	x1, [sp, #120]
    4f60:	bl	0 <memcpy>
    4f64:	b	4e8c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7e0>
    4f68:	cbz	x28, 4e8c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7e0>
    4f6c:	add	x0, x22, #0x18
    4f70:	b	4f58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8ac>
    4f74:	ldp	x2, x3, [sp, #248]
    4f78:	stp	x2, x3, [x1, #24]
    4f7c:	b	4ee0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x834>
    4f80:	mov	x2, x22
    4f84:	ldr	x0, [sp, #112]
    4f88:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4f8c:	ldr	x0, [sp, #232]
    4f90:	add	x1, x22, #0x18
    4f94:	cmp	x0, x1
    4f98:	b.eq	4efc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x850>  // b.none
    4f9c:	bl	0 <_ZdlPv>
    4fa0:	b	4efc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x850>
    4fa4:	add	x0, sp, #0xa0
    4fa8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4fac:	ldrb	w0, [sp, #168]
    4fb0:	tbz	w0, #0, 487c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d0>
    4fb4:	ldr	x0, [sp, #160]
    4fb8:	cbz	x0, 487c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d0>
    4fbc:	ldr	x1, [x0]
    4fc0:	ldr	x1, [x1, #8]
    4fc4:	blr	x1
    4fc8:	b	487c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d0>
    4fcc:	bl	0 <_ZdlPv>
    4fd0:	add	x20, x20, #0x28
    4fd4:	cmp	x22, x20
    4fd8:	b.eq	4ff0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x944>  // b.none
    4fdc:	ldr	x0, [x20, #8]
    4fe0:	add	x1, x20, #0x18
    4fe4:	cmp	x0, x1
    4fe8:	b.ne	4fcc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x920>  // b.any
    4fec:	b	4fd0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x924>
    4ff0:	ldr	x0, [x21, #64]
    4ff4:	cbz	x0, 4ffc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x950>
    4ff8:	bl	0 <_ZdlPv>
    4ffc:	ldr	x0, [x21, #32]
    5000:	add	x1, x21, #0x30
    5004:	cmp	x0, x1
    5008:	b.eq	5010 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x964>  // b.none
    500c:	bl	0 <_ZdlPv>
    5010:	ldr	x22, [x21, #8]
    5014:	ldr	x26, [x21, #16]
    5018:	cmp	x22, x26
    501c:	b.ne	5074 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9c8>  // b.any
    5020:	ldr	x0, [x21, #8]
    5024:	cbz	x0, 502c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x980>
    5028:	bl	0 <_ZdlPv>
    502c:	add	x21, x21, #0x58
    5030:	cmp	x24, x21
    5034:	b.eq	50e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa38>  // b.none
    5038:	ldr	x20, [x21, #64]
    503c:	ldr	x22, [x21, #72]
    5040:	cmp	x20, x22
    5044:	b.ne	4fdc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x930>  // b.any
    5048:	b	4ff0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x944>
    504c:	add	x1, x20, #0x8
    5050:	ldaxr	w0, [x1]
    5054:	sub	w2, w0, #0x1
    5058:	stlxr	w3, w2, [x1]
    505c:	cbnz	w3, 5050 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9a4>
    5060:	cmp	w0, #0x1
    5064:	b.eq	5090 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9e4>  // b.none
    5068:	add	x22, x22, #0x10
    506c:	cmp	x26, x22
    5070:	b.eq	5020 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x974>  // b.none
    5074:	ldr	x20, [x22, #8]
    5078:	cbz	x20, 5068 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9bc>
    507c:	cbnz	x25, 504c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9a0>
    5080:	ldr	w0, [x20, #8]
    5084:	sub	w1, w0, #0x1
    5088:	str	w1, [x20, #8]
    508c:	b	5060 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9b4>
    5090:	ldr	x0, [x20]
    5094:	ldr	x1, [x0, #16]
    5098:	mov	x0, x20
    509c:	blr	x1
    50a0:	cbz	x23, 50d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa28>
    50a4:	add	x1, x20, #0xc
    50a8:	ldaxr	w0, [x1]
    50ac:	sub	w2, w0, #0x1
    50b0:	stlxr	w3, w2, [x1]
    50b4:	cbnz	w3, 50a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9fc>
    50b8:	cmp	w0, #0x1
    50bc:	b.ne	5068 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9bc>  // b.any
    50c0:	ldr	x0, [x20]
    50c4:	ldr	x1, [x0, #24]
    50c8:	mov	x0, x20
    50cc:	blr	x1
    50d0:	b	5068 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x9bc>
    50d4:	ldr	w0, [x20, #12]
    50d8:	sub	w1, w0, #0x1
    50dc:	str	w1, [x20, #12]
    50e0:	b	50b8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa0c>
    50e4:	ldr	x0, [sp, #792]
    50e8:	cbz	x0, 5110 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xa64>
    50ec:	bl	0 <_ZdlPv>
    50f0:	ldp	x23, x24, [sp, #48]
    50f4:	ldp	x25, x26, [sp, #64]
    50f8:	ldp	x27, x28, [sp, #80]
    50fc:	b	4708 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5c>
    5100:	ldr	x0, [sp, #104]
    5104:	add	x0, x0, #0x40
    5108:	str	x0, [sp, #112]
    510c:	b	4e40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x794>
    5110:	ldp	x23, x24, [sp, #48]
    5114:	ldp	x25, x26, [sp, #64]
    5118:	ldp	x27, x28, [sp, #80]
    511c:	b	4708 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5c>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x1, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x1, x1, #0x20
   c:	cmp	x0, x1
  10:	b.eq	28 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x28>  // b.none
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <free>
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZdlPv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	w4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	w4, [x5, #16]
  18:	ldr	w3, [x5, #20]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x5, x0
   c:	mov	x0, x1
  10:	mov	w1, w2
  14:	ldr	x4, [x5, #16]
  18:	ldr	x3, [x5, #24]
  1c:	ldr	x2, [x5, #8]
  20:	mov	w1, w1
  24:	bl	0 <snprintf>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	add	x19, x0, #0x10
  10:	adrp	x0, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	b.eq	30 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x30>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	ands	w0, w0, #0xff
  2c:	csel	x19, x19, xzr, ne  // ne = any
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x220                 	// #544
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm5ErrorD2Ev:

0000000000000000 <_ZN4llvm5ErrorD1Ev>:
   0:	ldr	x1, [x0]
   4:	cbnz	x1, c <_ZN4llvm5ErrorD1Ev+0xc>
   8:	ret
   c:	stp	x29, x30, [sp, #-16]!
  10:	mov	x29, sp
  14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedImE9takeErrorEv:

0000000000000000 <_ZN4llvm8ExpectedImE9takeErrorEv>:
   0:	ldrb	w1, [x0, #8]
   4:	and	w1, w1, #0xfffffffd
   8:	strb	w1, [x0, #8]
   c:	tbz	w1, #0, 28 <_ZN4llvm8ExpectedImE9takeErrorEv+0x28>
  10:	ldr	x1, [x0]
  14:	str	xzr, [x0]
  18:	orr	x0, x1, #0x1
  1c:	str	x0, [x8]
  20:	mov	x0, x8
  24:	ret
  28:	mov	x0, #0x1                   	// #1
  2c:	str	x0, [x8]
  30:	b	20 <_ZN4llvm8ExpectedImE9takeErrorEv+0x20>

Disassembly of section .text._ZN4llvm8ExpectedIjE9takeErrorEv:

0000000000000000 <_ZN4llvm8ExpectedIjE9takeErrorEv>:
   0:	ldrb	w1, [x0, #8]
   4:	and	w1, w1, #0xfffffffd
   8:	strb	w1, [x0, #8]
   c:	tbz	w1, #0, 28 <_ZN4llvm8ExpectedIjE9takeErrorEv+0x28>
  10:	ldr	x1, [x0]
  14:	str	xzr, [x0]
  18:	orr	x0, x1, #0x1
  1c:	str	x0, [x8]
  20:	mov	x0, x8
  24:	ret
  28:	mov	x0, #0x1                   	// #1
  2c:	str	x0, [x8]
  30:	b	20 <_ZN4llvm8ExpectedIjE9takeErrorEv+0x20>

Disassembly of section .text._ZN4llvm8ExpectedIjEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>:
   0:	ldrb	w2, [x0, #8]
   4:	orr	w2, w2, #0x3
   8:	strb	w2, [x0, #8]
   c:	ldr	x2, [x1]
  10:	ands	x3, x2, #0xfffffffffffffffe
  14:	cset	x2, ne  // ne = any
  18:	orr	x2, x2, x3
  1c:	str	x2, [x1]
  20:	ands	x2, x2, #0xfffffffffffffffe
  24:	b.eq	34 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE+0x34>  // b.none
  28:	str	x2, [x0]
  2c:	str	xzr, [x1]
  30:	ret
  34:	stp	x29, x30, [sp, #-16]!
  38:	mov	x29, sp
  3c:	adrp	x3, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x1ce                 	// #462
  48:	adrp	x1, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  4c:	add	x1, x1, #0x0
  50:	adrp	x0, 0 <_ZN4llvm8ExpectedIjEC1ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	str	x0, [sp, #136]
  20:	mov	x24, x1
  24:	ldr	x27, [x0, #8]
  28:	ldr	x0, [x0]
  2c:	str	x0, [sp, #104]
  30:	sub	x0, x27, x0
  34:	asr	x0, x0, #3
  38:	mov	x1, #0x8ba3                	// #35747
  3c:	movk	x1, #0xba2e, lsl #16
  40:	movk	x1, #0xa2e8, lsl #32
  44:	movk	x1, #0x2e8b, lsl #48
  48:	mul	x0, x0, x1
  4c:	mov	x1, #0x745d                	// #29789
  50:	movk	x1, #0x45d1, lsl #16
  54:	movk	x1, #0x5d17, lsl #32
  58:	movk	x1, #0x174, lsl #48
  5c:	cmp	x0, x1
  60:	b.eq	10c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x10c>  // b.none
  64:	cmp	x0, #0x0
  68:	csinc	x1, x0, xzr, ne  // ne = any
  6c:	adds	x0, x1, x0
  70:	b.cs	4f8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x4f8>  // b.hs, b.nlast
  74:	mov	x1, #0x745d                	// #29789
  78:	movk	x1, #0x45d1, lsl #16
  7c:	movk	x1, #0x5d17, lsl #32
  80:	movk	x1, #0x174, lsl #48
  84:	cmp	x0, x1
  88:	csel	x1, x0, x1, ls  // ls = plast
  8c:	str	x1, [sp, #128]
  90:	ldr	x1, [sp, #104]
  94:	sub	x19, x24, x1
  98:	str	xzr, [sp, #112]
  9c:	cbz	x0, bc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xbc>
  a0:	ldr	x1, [sp, #128]
  a4:	add	x0, x1, x1, lsl #1
  a8:	lsl	x0, x0, #2
  ac:	sub	x0, x0, x1
  b0:	lsl	x0, x0, #3
  b4:	bl	0 <_Znwm>
  b8:	str	x0, [sp, #112]
  bc:	ldr	x20, [sp, #112]
  c0:	add	x0, x20, x19
  c4:	stp	xzr, xzr, [x0]
  c8:	stp	xzr, xzr, [x0, #48]
  cc:	str	xzr, [x0, #16]
  d0:	str	xzr, [x0, #24]
  d4:	add	x1, x0, #0x30
  d8:	str	x1, [x0, #32]
  dc:	str	xzr, [x0, #40]
  e0:	str	xzr, [x0, #64]
  e4:	str	xzr, [x0, #72]
  e8:	str	xzr, [x0, #80]
  ec:	ldr	x26, [sp, #104]
  f0:	cmp	x24, x26
  f4:	b.eq	2f8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2f8>  // b.none
  f8:	add	x21, x26, #0x30
  fc:	adrp	x0, 0 <__pthread_key_create>
 100:	ldr	x28, [x0]
 104:	str	x28, [sp, #96]
 108:	b	1e0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e0>
 10c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 110:	add	x0, x0, #0x0
 114:	bl	0 <_ZSt20__throw_length_errorPKc>
 118:	ldp	x0, x1, [x21]
 11c:	stp	x0, x1, [x20, #48]
 120:	b	230 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x230>
 124:	add	x1, x22, #0x8
 128:	ldaxr	w0, [x1]
 12c:	sub	w2, w0, #0x1
 130:	stlxr	w3, w2, [x1]
 134:	cbnz	w3, 128 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 138:	cmp	w0, #0x1
 13c:	b.eq	168 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x168>  // b.none
 140:	add	x23, x23, #0x10
 144:	cmp	x25, x23
 148:	b.eq	1c0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c0>  // b.none
 14c:	ldr	x22, [x23, #8]
 150:	cbz	x22, 140 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>
 154:	cbnz	x28, 124 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>
 158:	ldr	w0, [x22, #8]
 15c:	sub	w1, w0, #0x1
 160:	str	w1, [x22, #8]
 164:	b	138 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>
 168:	ldr	x0, [x22]
 16c:	ldr	x1, [x0, #16]
 170:	mov	x0, x22
 174:	blr	x1
 178:	ldr	x0, [sp, #96]
 17c:	cbz	x0, 1b0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>
 180:	add	x1, x22, #0xc
 184:	ldaxr	w0, [x1]
 188:	sub	w2, w0, #0x1
 18c:	stlxr	w3, w2, [x1]
 190:	cbnz	w3, 184 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x184>
 194:	cmp	w0, #0x1
 198:	b.ne	140 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>  // b.any
 19c:	ldr	x0, [x22]
 1a0:	ldr	x1, [x0, #24]
 1a4:	mov	x0, x22
 1a8:	blr	x1
 1ac:	b	140 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>
 1b0:	ldr	w0, [x22, #12]
 1b4:	sub	w1, w0, #0x1
 1b8:	str	w1, [x22, #12]
 1bc:	b	194 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>
 1c0:	ldur	x0, [x19, #-40]
 1c4:	cbz	x0, 1cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1cc>
 1c8:	bl	0 <_ZdlPv>
 1cc:	add	x26, x26, #0x58
 1d0:	add	x20, x20, #0x58
 1d4:	add	x21, x21, #0x58
 1d8:	cmp	x24, x26
 1dc:	b.eq	28c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x28c>  // b.none
 1e0:	mov	x19, x21
 1e4:	ldur	w0, [x21, #-48]
 1e8:	str	w0, [x20]
 1ec:	ldur	x0, [x21, #-40]
 1f0:	str	x0, [x20, #8]
 1f4:	ldur	x0, [x21, #-32]
 1f8:	str	x0, [x20, #16]
 1fc:	ldur	x0, [x21, #-24]
 200:	str	x0, [x20, #24]
 204:	stur	xzr, [x21, #-24]
 208:	stur	xzr, [x21, #-32]
 20c:	stur	xzr, [x21, #-40]
 210:	add	x0, x20, #0x30
 214:	str	x0, [x20, #32]
 218:	ldur	x0, [x21, #-16]
 21c:	cmp	x0, x21
 220:	b.eq	118 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x118>  // b.none
 224:	str	x0, [x20, #32]
 228:	ldr	x0, [x21]
 22c:	str	x0, [x20, #48]
 230:	ldur	x0, [x19, #-8]
 234:	str	x0, [x20, #40]
 238:	stur	x19, [x19, #-16]
 23c:	stur	xzr, [x19, #-8]
 240:	strb	wzr, [x19]
 244:	ldr	x0, [x19, #16]
 248:	str	x0, [x20, #64]
 24c:	ldr	x0, [x19, #24]
 250:	str	x0, [x20, #72]
 254:	ldr	x0, [x19, #32]
 258:	str	x0, [x20, #80]
 25c:	str	xzr, [x19, #32]
 260:	str	xzr, [x19, #24]
 264:	str	xzr, [x19, #16]
 268:	ldur	x0, [x19, #-16]
 26c:	cmp	x0, x19
 270:	b.eq	278 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x278>  // b.none
 274:	bl	0 <_ZdlPv>
 278:	ldur	x23, [x19, #-40]
 27c:	ldur	x25, [x19, #-32]
 280:	cmp	x23, x25
 284:	b.ne	14c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x14c>  // b.any
 288:	b	1c0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c0>
 28c:	sub	x0, x24, #0x58
 290:	ldr	x1, [sp, #104]
 294:	sub	x0, x0, x1
 298:	lsr	x0, x0, #3
 29c:	mov	x1, #0x8ba3                	// #35747
 2a0:	movk	x1, #0xba2e, lsl #16
 2a4:	movk	x1, #0xa2e8, lsl #32
 2a8:	movk	x1, #0xe8b, lsl #48
 2ac:	mul	x0, x0, x1
 2b0:	and	x0, x0, #0x1fffffffffffffff
 2b4:	add	x0, x0, #0x1
 2b8:	add	x1, x0, x0, lsl #1
 2bc:	lsl	x1, x1, #2
 2c0:	sub	x0, x1, x0
 2c4:	ldr	x1, [sp, #112]
 2c8:	add	x0, x1, x0, lsl #3
 2cc:	add	x0, x0, #0x58
 2d0:	str	x0, [sp, #120]
 2d4:	cmp	x24, x27
 2d8:	b.eq	4a4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x4a4>  // b.none
 2dc:	add	x21, x24, #0x30
 2e0:	mov	x26, x24
 2e4:	mov	x20, x0
 2e8:	adrp	x0, 0 <__pthread_key_create>
 2ec:	ldr	x28, [x0]
 2f0:	str	x28, [sp, #96]
 2f4:	b	3c8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3c8>
 2f8:	ldr	x0, [sp, #112]
 2fc:	b	2cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2cc>
 300:	ldp	x0, x1, [x21]
 304:	stp	x0, x1, [x20, #48]
 308:	b	418 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x418>
 30c:	add	x1, x22, #0x8
 310:	ldaxr	w0, [x1]
 314:	sub	w2, w0, #0x1
 318:	stlxr	w3, w2, [x1]
 31c:	cbnz	w3, 310 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x310>
 320:	cmp	w0, #0x1
 324:	b.eq	350 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x350>  // b.none
 328:	add	x23, x23, #0x10
 32c:	cmp	x25, x23
 330:	b.eq	3a8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3a8>  // b.none
 334:	ldr	x22, [x23, #8]
 338:	cbz	x22, 328 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x328>
 33c:	cbnz	x28, 30c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x30c>
 340:	ldr	w0, [x22, #8]
 344:	sub	w1, w0, #0x1
 348:	str	w1, [x22, #8]
 34c:	b	320 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x320>
 350:	ldr	x0, [x22]
 354:	ldr	x1, [x0, #16]
 358:	mov	x0, x22
 35c:	blr	x1
 360:	ldr	x0, [sp, #96]
 364:	cbz	x0, 398 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x398>
 368:	add	x1, x22, #0xc
 36c:	ldaxr	w0, [x1]
 370:	sub	w2, w0, #0x1
 374:	stlxr	w3, w2, [x1]
 378:	cbnz	w3, 36c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x36c>
 37c:	cmp	w0, #0x1
 380:	b.ne	328 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x328>  // b.any
 384:	ldr	x0, [x22]
 388:	ldr	x1, [x0, #24]
 38c:	mov	x0, x22
 390:	blr	x1
 394:	b	328 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x328>
 398:	ldr	w0, [x22, #12]
 39c:	sub	w1, w0, #0x1
 3a0:	str	w1, [x22, #12]
 3a4:	b	37c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x37c>
 3a8:	ldur	x0, [x19, #-40]
 3ac:	cbz	x0, 3b4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3b4>
 3b0:	bl	0 <_ZdlPv>
 3b4:	add	x26, x26, #0x58
 3b8:	add	x20, x20, #0x58
 3bc:	add	x21, x21, #0x58
 3c0:	cmp	x26, x27
 3c4:	b.eq	464 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x464>  // b.none
 3c8:	mov	x19, x21
 3cc:	ldur	w0, [x21, #-48]
 3d0:	str	w0, [x20]
 3d4:	ldur	x0, [x21, #-40]
 3d8:	str	x0, [x20, #8]
 3dc:	ldur	x0, [x21, #-32]
 3e0:	str	x0, [x20, #16]
 3e4:	ldur	x0, [x21, #-24]
 3e8:	str	x0, [x20, #24]
 3ec:	stur	xzr, [x21, #-24]
 3f0:	stur	xzr, [x21, #-32]
 3f4:	stur	xzr, [x21, #-40]
 3f8:	add	x0, x20, #0x30
 3fc:	str	x0, [x20, #32]
 400:	ldur	x0, [x21, #-16]
 404:	cmp	x0, x21
 408:	b.eq	300 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x300>  // b.none
 40c:	str	x0, [x20, #32]
 410:	ldr	x0, [x21]
 414:	str	x0, [x20, #48]
 418:	ldur	x0, [x19, #-8]
 41c:	str	x0, [x20, #40]
 420:	stur	x19, [x19, #-16]
 424:	stur	xzr, [x19, #-8]
 428:	strb	wzr, [x19]
 42c:	ldr	x0, [x19, #16]
 430:	str	x0, [x20, #64]
 434:	ldr	x0, [x19, #24]
 438:	str	x0, [x20, #72]
 43c:	ldr	x0, [x19, #32]
 440:	str	x0, [x20, #80]
 444:	str	xzr, [x19, #32]
 448:	str	xzr, [x19, #24]
 44c:	str	xzr, [x19, #16]
 450:	ldur	x23, [x19, #-40]
 454:	ldur	x25, [x19, #-32]
 458:	cmp	x23, x25
 45c:	b.ne	334 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x334>  // b.any
 460:	b	3a8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3a8>
 464:	sub	x0, x27, x24
 468:	sub	x0, x0, #0x58
 46c:	lsr	x0, x0, #3
 470:	mov	x1, #0x8ba3                	// #35747
 474:	movk	x1, #0xba2e, lsl #16
 478:	movk	x1, #0xa2e8, lsl #32
 47c:	movk	x1, #0xe8b, lsl #48
 480:	mul	x0, x0, x1
 484:	and	x0, x0, #0x1fffffffffffffff
 488:	add	x0, x0, #0x1
 48c:	add	x1, x0, x0, lsl #1
 490:	lsl	x1, x1, #2
 494:	sub	x0, x1, x0
 498:	ldr	x1, [sp, #120]
 49c:	add	x0, x1, x0, lsl #3
 4a0:	str	x0, [sp, #120]
 4a4:	ldr	x0, [sp, #104]
 4a8:	cbz	x0, 4b0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x4b0>
 4ac:	bl	0 <_ZdlPv>
 4b0:	ldr	x1, [sp, #136]
 4b4:	ldr	x2, [sp, #112]
 4b8:	str	x2, [x1]
 4bc:	ldr	x0, [sp, #120]
 4c0:	str	x0, [x1, #8]
 4c4:	ldr	x3, [sp, #128]
 4c8:	add	x0, x3, x3, lsl #1
 4cc:	lsl	x0, x0, #2
 4d0:	sub	x0, x0, x3
 4d4:	add	x0, x2, x0, lsl #3
 4d8:	str	x0, [x1, #16]
 4dc:	ldp	x19, x20, [sp, #16]
 4e0:	ldp	x21, x22, [sp, #32]
 4e4:	ldp	x23, x24, [sp, #48]
 4e8:	ldp	x25, x26, [sp, #64]
 4ec:	ldp	x27, x28, [sp, #80]
 4f0:	ldp	x29, x30, [sp], #144
 4f4:	ret
 4f8:	ldr	x0, [sp, #104]
 4fc:	sub	x19, x24, x0
 500:	mov	x0, #0x745d                	// #29789
 504:	movk	x0, #0x45d1, lsl #16
 508:	movk	x0, #0x5d17, lsl #32
 50c:	movk	x0, #0x174, lsl #48
 510:	str	x0, [sp, #128]
 514:	b	a0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa0>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x24, x0
  18:	str	x1, [sp, #104]
  1c:	mov	x19, x1
  20:	mov	x0, #0xffffffff            	// #4294967295
  24:	cmp	x1, x0
  28:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x118>  // b.pmore
  2c:	ldr	w0, [x24, #12]
  30:	add	x0, x0, #0x2
  34:	orr	x0, x0, x0, lsr #1
  38:	orr	x0, x0, x0, lsr #2
  3c:	orr	x0, x0, x0, lsr #4
  40:	orr	x0, x0, x0, lsr #8
  44:	orr	x1, x0, x0, lsr #16
  48:	orr	x0, x1, x0, lsr #32
  4c:	add	x0, x0, #0x1
  50:	str	x0, [sp, #112]
  54:	cmp	x19, x0
  58:	add	x0, sp, #0x70
  5c:	add	x1, sp, #0x68
  60:	csel	x0, x0, x1, ls  // ls = plast
  64:	mov	x1, #0xffffffff            	// #4294967295
  68:	str	x1, [sp, #120]
  6c:	ldr	x2, [x0]
  70:	cmp	x2, x1
  74:	add	x1, sp, #0x78
  78:	csel	x0, x1, x0, hi  // hi = pmore
  7c:	ldr	x26, [x0]
  80:	str	x26, [sp, #112]
  84:	lsl	x19, x26, #5
  88:	mov	x0, x19
  8c:	bl	0 <malloc>
  90:	mov	x25, x0
  94:	cbz	x0, 12c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x12c>
  98:	ldr	x1, [x24]
  9c:	ldr	w3, [x24, #8]
  a0:	add	x3, x1, x3, lsl #5
  a4:	cmp	x3, x1
  a8:	b.eq	220 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x220>  // b.none
  ac:	stp	x21, x22, [sp, #32]
  b0:	stp	x27, x28, [sp, #80]
  b4:	mov	x0, x25
  b8:	ldr	w2, [x1]
  bc:	str	w2, [x0]
  c0:	ldr	x2, [x1, #8]
  c4:	str	x2, [x0, #8]
  c8:	ldr	x2, [x1, #16]
  cc:	str	x2, [x0, #16]
  d0:	ldr	x2, [x1, #24]
  d4:	str	x2, [x0, #24]
  d8:	str	xzr, [x1, #24]
  dc:	str	xzr, [x1, #16]
  e0:	str	xzr, [x1, #8]
  e4:	add	x0, x0, #0x20
  e8:	add	x1, x1, #0x20
  ec:	cmp	x3, x1
  f0:	b.ne	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xb8>  // b.any
  f4:	ldr	x27, [x24]
  f8:	ldr	w21, [x24, #8]
  fc:	add	x21, x27, x21, lsl #5
 100:	cmp	x21, x27
 104:	b.eq	250 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x250>  // b.none
 108:	adrp	x23, 0 <__pthread_key_create>
 10c:	ldr	x28, [x23]
 110:	mov	x23, x28
 114:	b	200 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x200>
 118:	mov	w1, #0x1                   	// #1
 11c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x2c>
 12c:	cbnz	x19, 140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 130:	mov	x0, #0x1                   	// #1
 134:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 138:	mov	x25, x0
 13c:	b	98 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x98>
 140:	mov	w1, #0x1                   	// #1
 144:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 150:	b	98 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x98>
 154:	add	x1, x19, #0x8
 158:	ldaxr	w0, [x1]
 15c:	sub	w2, w0, #0x1
 160:	stlxr	w3, w2, [x1]
 164:	cbnz	w3, 158 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x158>
 168:	cmp	w0, #0x1
 16c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x198>  // b.none
 170:	add	x20, x20, #0x10
 174:	cmp	x22, x20
 178:	b.eq	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1ec>  // b.none
 17c:	ldr	x19, [x20, #8]
 180:	cbz	x19, 170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>
 184:	cbnz	x28, 154 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x154>
 188:	ldr	w0, [x19, #8]
 18c:	sub	w1, w0, #0x1
 190:	str	w1, [x19, #8]
 194:	b	168 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x168>
 198:	ldr	x0, [x19]
 19c:	ldr	x1, [x0, #16]
 1a0:	mov	x0, x19
 1a4:	blr	x1
 1a8:	cbz	x23, 1dc <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1dc>
 1ac:	add	x1, x19, #0xc
 1b0:	ldaxr	w0, [x1]
 1b4:	sub	w2, w0, #0x1
 1b8:	stlxr	w3, w2, [x1]
 1bc:	cbnz	w3, 1b0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1b0>
 1c0:	cmp	w0, #0x1
 1c4:	b.ne	170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>  // b.any
 1c8:	ldr	x0, [x19]
 1cc:	ldr	x1, [x0, #24]
 1d0:	mov	x0, x19
 1d4:	blr	x1
 1d8:	b	170 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x170>
 1dc:	ldr	w0, [x19, #12]
 1e0:	sub	w1, w0, #0x1
 1e4:	str	w1, [x19, #12]
 1e8:	b	1c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1c0>
 1ec:	ldr	x0, [x21, #8]
 1f0:	cbz	x0, 1f8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1f8>
 1f4:	bl	0 <_ZdlPv>
 1f8:	cmp	x21, x27
 1fc:	b.eq	218 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x218>  // b.none
 200:	sub	x21, x21, #0x20
 204:	ldr	x20, [x21, #8]
 208:	ldr	x22, [x21, #16]
 20c:	cmp	x20, x22
 210:	b.ne	17c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x17c>  // b.any
 214:	b	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1ec>
 218:	ldp	x21, x22, [sp, #32]
 21c:	ldp	x27, x28, [sp, #80]
 220:	mov	x1, x24
 224:	ldr	x0, [x1], #16
 228:	cmp	x0, x1
 22c:	b.eq	234 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x234>  // b.none
 230:	bl	0 <free>
 234:	str	x25, [x24]
 238:	str	w26, [x24, #12]
 23c:	ldp	x19, x20, [sp, #16]
 240:	ldp	x23, x24, [sp, #48]
 244:	ldp	x25, x26, [sp, #64]
 248:	ldp	x29, x30, [sp], #128
 24c:	ret
 250:	ldp	x21, x22, [sp, #32]
 254:	ldp	x27, x28, [sp, #80]
 258:	b	220 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x220>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm8ExpectedImED2Ev:

0000000000000000 <_ZN4llvm8ExpectedImED1Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w1, [x0, #8]
   c:	tbnz	w1, #1, 34 <_ZN4llvm8ExpectedImED1Ev+0x34>
  10:	ldrb	w1, [x0, #8]
  14:	tbz	w1, #0, 2c <_ZN4llvm8ExpectedImED1Ev+0x2c>
  18:	ldr	x0, [x0]
  1c:	cbz	x0, 2c <_ZN4llvm8ExpectedImED1Ev+0x2c>
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #8]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	bl	0 <_ZN4llvm8ExpectedImED1Ev>

Disassembly of section .text._ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_11StringErrorEJRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt10error_codeEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x22, x23, [sp, #32]
  10:	mov	x20, x8
  14:	str	xzr, [sp, #64]
  18:	mov	w2, #0x4                   	// #4
  1c:	strb	w2, [sp, #72]
  20:	mov	w2, #0x1                   	// #1
  24:	strb	w2, [sp, #73]
  28:	str	x0, [sp, #56]
  2c:	ldp	x22, x23, [x1]
  30:	mov	x0, #0x40                  	// #64
  34:	bl	0 <_Znwm>
  38:	mov	x19, x0
  3c:	mov	x2, x22
  40:	mov	x3, x23
  44:	add	x1, sp, #0x38
  48:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
  4c:	orr	x19, x19, #0x1
  50:	str	x19, [x20]
  54:	mov	x0, x20
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x22, x23, [sp, #32]
  60:	ldp	x29, x30, [sp], #80
  64:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	stp	x29, x30, [sp, #-240]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	sub	w0, w1, #0x1
  14:	cmp	w0, #0x3f
  18:	b.hi	80 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x80>  // b.pmore
  1c:	stp	x21, x22, [sp, #32]
  20:	mov	x21, x8
  24:	mov	w20, w1
  28:	ldr	w22, [x19, #32]
  2c:	cmp	w22, w1
  30:	b.cc	ac <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xac>  // b.lo, b.ul, b.last
  34:	ldr	x2, [x19, #24]
  38:	lsr	x0, x2, x1
  3c:	str	x0, [x19, #24]
  40:	sub	w22, w22, w1
  44:	str	w22, [x19, #32]
  48:	ldrb	w0, [x8, #8]
  4c:	and	w0, w0, #0xfffffffe
  50:	orr	w0, w0, #0x2
  54:	strb	w0, [x8, #8]
  58:	neg	w1, w1
  5c:	mov	x20, #0xffffffffffffffff    	// #-1
  60:	lsr	x20, x20, x1
  64:	and	x20, x20, x2
  68:	str	x20, [x8]
  6c:	mov	x0, x21
  70:	ldp	x21, x22, [sp, #32]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x29, x30, [sp], #240
  7c:	ret
  80:	stp	x21, x22, [sp, #32]
  84:	stp	x23, x24, [sp, #48]
  88:	str	x25, [sp, #64]
  8c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0xc0                  	// #192
  98:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	stp	x23, x24, [sp, #48]
  b0:	str	x25, [sp, #64]
  b4:	mov	x23, #0x0                   	// #0
  b8:	cbz	w22, c0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc0>
  bc:	ldr	x23, [x19, #24]
  c0:	ldr	x24, [x19, #16]
  c4:	ldr	x25, [x19, #8]
  c8:	cmp	x24, x25
  cc:	b.cs	160 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x160>  // b.hs, b.nlast
  d0:	ldr	x0, [x19]
  d4:	add	x3, x0, x24
  d8:	add	x1, x24, #0x8
  dc:	cmp	x25, x1
  e0:	b.cc	258 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x258>  // b.lo, b.ul, b.last
  e4:	ldr	x0, [x0, x24]
  e8:	str	x0, [x19, #24]
  ec:	mov	w1, #0x8                   	// #8
  f0:	add	x24, x24, w1, uxtw
  f4:	str	x24, [x19, #16]
  f8:	lsl	w1, w1, #3
  fc:	str	w1, [x19, #32]
 100:	sub	w25, w20, w22
 104:	ldr	w24, [x19, #32]
 108:	cmp	w25, w24
 10c:	b.hi	2a8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x2a8>  // b.pmore
 110:	ldr	x1, [x19, #24]
 114:	sub	w20, w22, w20
 118:	lsr	x25, x1, x25
 11c:	str	x25, [x19, #24]
 120:	add	w24, w24, w20
 124:	str	w24, [x19, #32]
 128:	ldrb	w0, [x21, #8]
 12c:	and	w0, w0, #0xfffffffe
 130:	orr	w0, w0, #0x2
 134:	strb	w0, [x21, #8]
 138:	add	w20, w20, #0x40
 13c:	mov	x0, #0xffffffffffffffff    	// #-1
 140:	lsr	x20, x0, x20
 144:	and	x20, x20, x1
 148:	lsl	x22, x20, x22
 14c:	orr	x23, x22, x23
 150:	str	x23, [x21]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldr	x25, [sp, #64]
 15c:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 160:	bl	0 <_ZNSt3_V216generic_categoryEv>
 164:	mov	w1, #0x5                   	// #5
 168:	str	w1, [sp, #80]
 16c:	str	x0, [sp, #88]
 170:	add	x1, sp, #0x60
 174:	add	x0, sp, #0x70
 178:	str	x0, [sp, #96]
 17c:	str	xzr, [sp, #104]
 180:	strb	wzr, [sp, #112]
 184:	mov	w0, #0x1                   	// #1
 188:	str	w0, [sp, #192]
 18c:	str	xzr, [sp, #184]
 190:	str	xzr, [sp, #176]
 194:	str	xzr, [sp, #168]
 198:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 19c:	ldr	x0, [x0]
 1a0:	add	x0, x0, #0x10
 1a4:	str	x0, [sp, #160]
 1a8:	str	x1, [sp, #200]
 1ac:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1b0:	add	x0, x0, #0x0
 1b4:	str	x0, [sp, #136]
 1b8:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1bc:	ldr	x0, [x0]
 1c0:	add	x0, x0, #0x10
 1c4:	str	x0, [sp, #128]
 1c8:	str	x25, [sp, #144]
 1cc:	str	x24, [sp, #152]
 1d0:	add	x1, sp, #0x80
 1d4:	add	x0, sp, #0xa0
 1d8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1dc:	ldr	x1, [sp, #184]
 1e0:	ldr	x0, [sp, #168]
 1e4:	cmp	x1, x0
 1e8:	b.eq	1f4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1f4>  // b.none
 1ec:	add	x0, sp, #0xa0
 1f0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 1f4:	add	x8, sp, #0x80
 1f8:	add	x1, sp, #0x50
 1fc:	ldr	x0, [sp, #200]
 200:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 204:	add	x0, sp, #0xa0
 208:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 20c:	ldr	x0, [sp, #96]
 210:	add	x1, sp, #0x70
 214:	cmp	x0, x1
 218:	b.eq	220 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x220>  // b.none
 21c:	bl	0 <_ZdlPv>
 220:	ldr	x0, [sp, #128]
 224:	ands	x1, x0, #0xfffffffffffffffe
 228:	cset	x0, ne  // ne = any
 22c:	orr	x0, x0, x1
 230:	str	x0, [sp, #128]
 234:	ands	x1, x0, #0xfffffffffffffffe
 238:	b.eq	29c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x29c>  // b.none
 23c:	ldrb	w0, [x21, #8]
 240:	orr	w0, w0, #0x3
 244:	strb	w0, [x21, #8]
 248:	str	x1, [x21]
 24c:	ldp	x23, x24, [sp, #48]
 250:	ldr	x25, [sp, #64]
 254:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 258:	str	xzr, [x19, #24]
 25c:	subs	w25, w25, w24
 260:	b.eq	294 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x294>  // b.none
 264:	mov	x0, #0x0                   	// #0
 268:	ldrb	w1, [x3, x0]
 26c:	lsl	w2, w0, #3
 270:	lsl	x2, x1, x2
 274:	ldr	x1, [x19, #24]
 278:	orr	x1, x1, x2
 27c:	str	x1, [x19, #24]
 280:	add	x0, x0, #0x1
 284:	mov	w1, w0
 288:	cmp	w25, w0
 28c:	b.ne	268 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x268>  // b.any
 290:	b	f0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xf0>
 294:	mov	w1, w25
 298:	b	f0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xf0>
 29c:	tbz	w0, #0, 100 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x100>
 2a0:	add	x0, sp, #0x80
 2a4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 2a8:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2ac:	mov	w1, #0x5                   	// #5
 2b0:	str	w1, [sp, #96]
 2b4:	str	x0, [sp, #104]
 2b8:	add	x1, sp, #0x80
 2bc:	add	x0, sp, #0x90
 2c0:	str	x0, [sp, #128]
 2c4:	str	xzr, [sp, #136]
 2c8:	strb	wzr, [sp, #144]
 2cc:	mov	w0, #0x1                   	// #1
 2d0:	str	w0, [sp, #192]
 2d4:	str	xzr, [sp, #184]
 2d8:	str	xzr, [sp, #176]
 2dc:	str	xzr, [sp, #168]
 2e0:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 2e4:	ldr	x0, [x0]
 2e8:	add	x0, x0, #0x10
 2ec:	str	x0, [sp, #160]
 2f0:	str	x1, [sp, #200]
 2f4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2f8:	add	x0, x0, #0x0
 2fc:	str	x0, [sp, #224]
 300:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 304:	ldr	x0, [x0]
 308:	add	x0, x0, #0x10
 30c:	str	x0, [sp, #216]
 310:	str	w25, [sp, #232]
 314:	str	w24, [sp, #236]
 318:	add	x1, sp, #0xd8
 31c:	add	x0, sp, #0xa0
 320:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 324:	ldr	x1, [sp, #184]
 328:	ldr	x0, [sp, #168]
 32c:	cmp	x1, x0
 330:	b.eq	33c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x33c>  // b.none
 334:	add	x0, sp, #0xa0
 338:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 33c:	add	x8, sp, #0xd0
 340:	add	x1, sp, #0x60
 344:	ldr	x0, [sp, #200]
 348:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 34c:	add	x0, sp, #0xa0
 350:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 354:	ldr	x0, [sp, #128]
 358:	add	x1, sp, #0x90
 35c:	cmp	x0, x1
 360:	b.eq	368 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x368>  // b.none
 364:	bl	0 <_ZdlPv>
 368:	ldrb	w0, [x21, #8]
 36c:	orr	w0, w0, #0x3
 370:	strb	w0, [x21, #8]
 374:	ldr	x0, [sp, #208]
 378:	ands	x1, x0, #0xfffffffffffffffe
 37c:	cset	x0, ne  // ne = any
 380:	orr	x0, x0, x1
 384:	str	x0, [sp, #208]
 388:	ands	x0, x0, #0xfffffffffffffffe
 38c:	b.eq	3a0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3a0>  // b.none
 390:	str	x0, [x21]
 394:	ldp	x23, x24, [sp, #48]
 398:	ldr	x25, [sp, #64]
 39c:	b	6c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x6c>
 3a0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3a4:	add	x3, x3, #0x0
 3a8:	mov	w2, #0x1ce                 	// #462
 3ac:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3b0:	add	x1, x1, #0x0
 3b4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3b8:	add	x0, x0, #0x0
 3bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9JumpToBitEm:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	lsr	x2, x1, #3
  10:	and	x2, x2, #0xfffffffffffffff8
  14:	ldr	x3, [x0, #8]
  18:	cmp	x2, x3
  1c:	b.hi	50 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x50>  // b.pmore
  20:	mov	x19, x8
  24:	and	w1, w1, #0x3f
  28:	str	x2, [x0, #16]
  2c:	str	wzr, [x0, #32]
  30:	cbz	w1, 80 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x80>
  34:	add	x8, sp, #0x20
  38:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  3c:	ldrb	w0, [sp, #40]
  40:	tbnz	w0, #0, 70 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x70>
  44:	mov	x0, #0x1                   	// #1
  48:	str	x0, [x19]
  4c:	b	88 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x88>
  50:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x85                  	// #133
  5c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  60:	add	x1, x1, #0x0
  64:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <__assert_fail>
  70:	ldr	x0, [sp, #32]
  74:	orr	x0, x0, #0x1
  78:	str	x0, [x19]
  7c:	b	88 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x88>
  80:	mov	x0, #0x1                   	// #1
  84:	str	x0, [x8]
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	stp	x29, x30, [sp, #-320]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x8
  14:	mov	x20, x0
  18:	mov	w21, w1
  1c:	add	x8, sp, #0x110
  20:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  24:	ldrb	w0, [sp, #280]
  28:	and	w22, w0, #0x1
  2c:	bfi	w0, w22, #1, #1
  30:	strb	w0, [sp, #280]
  34:	cbz	w22, 84 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x84>
  38:	ldrb	w0, [x19, #8]
  3c:	orr	w0, w0, #0x3
  40:	strb	w0, [x19, #8]
  44:	ldrb	w0, [sp, #280]
  48:	and	w0, w0, #0xfffffffd
  4c:	strb	w0, [sp, #280]
  50:	ldr	x0, [sp, #272]
  54:	str	xzr, [sp, #272]
  58:	str	x0, [x19]
  5c:	ldr	x0, [sp, #272]
  60:	cbz	x0, 70 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x70>
  64:	ldr	x1, [x0]
  68:	ldr	x1, [x1, #8]
  6c:	blr	x1
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #320
  80:	ret
  84:	stp	x23, x24, [sp, #48]
  88:	ldr	x0, [sp, #272]
  8c:	sub	w23, w21, #0x1
  90:	lsr	w1, w0, w23
  94:	tbnz	w1, #0, b8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xb8>
  98:	ldrb	w1, [x19, #8]
  9c:	and	w1, w1, #0xfffffffe
  a0:	orr	w1, w1, #0x2
  a4:	strb	w1, [x19, #8]
  a8:	and	x24, x0, #0xffffffff
  ac:	str	x24, [x19]
  b0:	ldp	x23, x24, [sp, #48]
  b4:	b	70 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x70>
  b8:	stp	x25, x26, [sp, #64]
  bc:	stp	x27, x28, [sp, #80]
  c0:	mov	w24, #0xffffffff            	// #-1
  c4:	lsl	w24, w24, w23
  c8:	mvn	w1, w24
  cc:	str	w1, [sp, #104]
  d0:	bic	w24, w0, w24
  d4:	cmp	w23, #0x3f
  d8:	b.hi	1f8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1f8>  // b.pmore
  dc:	neg	w0, w21
  e0:	mov	x1, #0xffffffffffffffff    	// #-1
  e4:	lsr	x0, x1, x0
  e8:	str	x0, [sp, #112]
  ec:	mov	w0, #0x1                   	// #1
  f0:	lsl	w0, w0, w23
  f4:	str	w0, [sp, #108]
  f8:	str	w23, [sp, #100]
  fc:	add	x27, sp, #0xc0
 100:	add	x0, x27, #0x10
 104:	str	x0, [sp, #128]
 108:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 10c:	ldr	x0, [x0]
 110:	add	x0, x0, #0x10
 114:	str	x0, [sp, #136]
 118:	ldr	w25, [x20, #32]
 11c:	cmp	w21, w25
 120:	b.hi	218 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x218>  // b.pmore
 124:	ldr	x0, [x20, #24]
 128:	ldr	x1, [sp, #112]
 12c:	and	x26, x0, x1
 130:	lsr	x0, x0, x21
 134:	str	x0, [x20, #24]
 138:	sub	w25, w25, w21
 13c:	str	w25, [x20, #32]
 140:	mov	w28, w22
 144:	ldrb	w0, [sp, #280]
 148:	tbnz	w0, #1, 4dc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x4dc>
 14c:	ldrb	w0, [sp, #280]
 150:	tbz	w0, #0, 168 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x168>
 154:	ldr	x0, [sp, #272]
 158:	cbz	x0, 168 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x168>
 15c:	ldr	x1, [x0]
 160:	ldr	x1, [x1, #8]
 164:	blr	x1
 168:	ldrb	w0, [sp, #280]
 16c:	bfxil	w0, w28, #0, #1
 170:	orr	w0, w0, #0x2
 174:	strb	w0, [sp, #280]
 178:	cbnz	w28, 4e4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x4e4>
 17c:	str	x26, [sp, #272]
 180:	and	x0, x0, #0xff
 184:	bfi	w0, w28, #1, #1
 188:	strb	w0, [sp, #280]
 18c:	ldr	w0, [sp, #104]
 190:	and	w0, w0, w26
 194:	ldrb	w1, [sp, #100]
 198:	lsl	x0, x0, x1
 19c:	orr	x24, x24, x0
 1a0:	ldr	w0, [sp, #108]
 1a4:	tst	w0, w26
 1a8:	b.eq	1bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1bc>  // b.none
 1ac:	ldr	w0, [sp, #100]
 1b0:	add	w0, w0, w23
 1b4:	str	w0, [sp, #100]
 1b8:	b	118 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x118>
 1bc:	ldrb	w0, [x19, #8]
 1c0:	and	w0, w0, #0xfffffffe
 1c4:	orr	w0, w0, #0x2
 1c8:	strb	w0, [x19, #8]
 1cc:	str	x24, [x19]
 1d0:	ldrb	w0, [sp, #280]
 1d4:	tbnz	w0, #0, 1e8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1e8>
 1d8:	ldp	x23, x24, [sp, #48]
 1dc:	ldp	x25, x26, [sp, #64]
 1e0:	ldp	x27, x28, [sp, #80]
 1e4:	b	70 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x70>
 1e8:	ldp	x23, x24, [sp, #48]
 1ec:	ldp	x25, x26, [sp, #64]
 1f0:	ldp	x27, x28, [sp, #80]
 1f4:	b	5c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x5c>
 1f8:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0xc0                  	// #192
 204:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 208:	add	x1, x1, #0x0
 20c:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 210:	add	x0, x0, #0x0
 214:	bl	0 <__assert_fail>
 218:	str	xzr, [sp, #120]
 21c:	cbz	w25, 228 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x228>
 220:	ldr	x0, [x20, #24]
 224:	str	x0, [sp, #120]
 228:	ldr	x28, [x20, #16]
 22c:	ldr	x26, [x20, #8]
 230:	cmp	x28, x26
 234:	b.cs	2b4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x2b4>  // b.hs, b.nlast
 238:	ldr	x0, [x20]
 23c:	add	x3, x0, x28
 240:	add	x1, x28, #0x8
 244:	cmp	x26, x1
 248:	b.cc	3a0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3a0>  // b.lo, b.ul, b.last
 24c:	ldr	x0, [x0, x28]
 250:	str	x0, [x20, #24]
 254:	mov	w1, #0x8                   	// #8
 258:	add	x28, x28, w1, uxtw
 25c:	str	x28, [x20, #16]
 260:	lsl	w1, w1, #3
 264:	str	w1, [x20, #32]
 268:	sub	w26, w21, w25
 26c:	ldr	w28, [x20, #32]
 270:	cmp	w26, w28
 274:	b.hi	3e4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3e4>  // b.pmore
 278:	ldr	x1, [x20, #24]
 27c:	sub	w0, w25, w21
 280:	lsr	x26, x1, x26
 284:	str	x26, [x20, #24]
 288:	add	w28, w0, w28
 28c:	str	w28, [x20, #32]
 290:	add	w0, w0, #0x40
 294:	mov	x26, #0xffffffffffffffff    	// #-1
 298:	lsr	x26, x26, x0
 29c:	and	x26, x26, x1
 2a0:	lsl	x25, x26, x25
 2a4:	ldr	x0, [sp, #120]
 2a8:	orr	x26, x25, x0
 2ac:	mov	w28, w22
 2b0:	b	144 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x144>
 2b4:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2b8:	mov	w1, #0x5                   	// #5
 2bc:	str	w1, [sp, #144]
 2c0:	str	x0, [sp, #152]
 2c4:	add	x1, sp, #0xa0
 2c8:	add	x0, sp, #0xb0
 2cc:	str	x0, [sp, #160]
 2d0:	str	xzr, [sp, #168]
 2d4:	strb	wzr, [sp, #176]
 2d8:	mov	w0, #0x1                   	// #1
 2dc:	str	w0, [sp, #256]
 2e0:	str	xzr, [sp, #248]
 2e4:	str	xzr, [sp, #240]
 2e8:	str	xzr, [sp, #232]
 2ec:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 2f0:	ldr	x0, [x0]
 2f4:	add	x0, x0, #0x10
 2f8:	str	x0, [sp, #224]
 2fc:	str	x1, [sp, #264]
 300:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 304:	add	x0, x0, #0x0
 308:	str	x0, [sp, #200]
 30c:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 310:	ldr	x0, [x0]
 314:	add	x0, x0, #0x10
 318:	str	x0, [sp, #192]
 31c:	str	x26, [sp, #208]
 320:	str	x28, [sp, #216]
 324:	mov	x1, x27
 328:	add	x0, sp, #0xe0
 32c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 330:	ldr	x1, [sp, #248]
 334:	ldr	x0, [sp, #232]
 338:	cmp	x1, x0
 33c:	b.eq	348 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x348>  // b.none
 340:	add	x0, sp, #0xe0
 344:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 348:	mov	x8, x27
 34c:	add	x1, sp, #0x90
 350:	ldr	x0, [sp, #264]
 354:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 358:	add	x0, sp, #0xe0
 35c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 360:	ldr	x0, [sp, #160]
 364:	add	x1, sp, #0xb0
 368:	cmp	x0, x1
 36c:	b.eq	374 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x374>  // b.none
 370:	bl	0 <_ZdlPv>
 374:	ldr	x0, [sp, #192]
 378:	ands	x1, x0, #0xfffffffffffffffe
 37c:	cset	x0, ne  // ne = any
 380:	orr	x0, x0, x1
 384:	str	x0, [sp, #192]
 388:	mov	w28, #0x1                   	// #1
 38c:	ands	x26, x0, #0xfffffffffffffffe
 390:	b.ne	144 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x144>  // b.any
 394:	tbz	w0, #0, 268 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x268>
 398:	add	x0, sp, #0xc0
 39c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 3a0:	str	xzr, [x20, #24]
 3a4:	subs	w26, w26, w28
 3a8:	b.eq	3dc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3dc>  // b.none
 3ac:	mov	x0, #0x0                   	// #0
 3b0:	ldrb	w1, [x3, x0]
 3b4:	lsl	w2, w0, #3
 3b8:	lsl	x2, x1, x2
 3bc:	ldr	x1, [x20, #24]
 3c0:	orr	x1, x1, x2
 3c4:	str	x1, [x20, #24]
 3c8:	add	x0, x0, #0x1
 3cc:	mov	w1, w0
 3d0:	cmp	w0, w26
 3d4:	b.ne	3b0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3b0>  // b.any
 3d8:	b	258 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x258>
 3dc:	mov	w1, w26
 3e0:	b	258 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x258>
 3e4:	bl	0 <_ZNSt3_V216generic_categoryEv>
 3e8:	mov	w1, #0x5                   	// #5
 3ec:	str	w1, [sp, #160]
 3f0:	str	x0, [sp, #168]
 3f4:	ldr	x0, [sp, #128]
 3f8:	str	x0, [sp, #192]
 3fc:	str	xzr, [sp, #200]
 400:	strb	wzr, [sp, #208]
 404:	mov	w0, #0x1                   	// #1
 408:	str	w0, [sp, #256]
 40c:	str	xzr, [sp, #248]
 410:	str	xzr, [sp, #240]
 414:	str	xzr, [sp, #232]
 418:	ldr	x0, [sp, #136]
 41c:	str	x0, [sp, #224]
 420:	str	x27, [sp, #264]
 424:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 428:	add	x0, x0, #0x0
 42c:	str	x0, [sp, #304]
 430:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 434:	ldr	x0, [x0]
 438:	add	x0, x0, #0x10
 43c:	str	x0, [sp, #296]
 440:	str	w26, [sp, #312]
 444:	str	w28, [sp, #316]
 448:	add	x1, sp, #0x128
 44c:	add	x0, sp, #0xe0
 450:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 454:	ldr	x1, [sp, #248]
 458:	ldr	x0, [sp, #232]
 45c:	cmp	x1, x0
 460:	b.eq	46c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x46c>  // b.none
 464:	add	x0, sp, #0xe0
 468:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 46c:	add	x8, sp, #0x120
 470:	add	x1, sp, #0xa0
 474:	ldr	x0, [sp, #264]
 478:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 47c:	add	x0, sp, #0xe0
 480:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 484:	ldr	x0, [sp, #192]
 488:	ldr	x1, [sp, #128]
 48c:	cmp	x0, x1
 490:	b.eq	498 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x498>  // b.none
 494:	bl	0 <_ZdlPv>
 498:	ldr	x0, [sp, #288]
 49c:	ands	x0, x0, #0xfffffffffffffffe
 4a0:	cset	x26, ne  // ne = any
 4a4:	orr	x26, x26, x0
 4a8:	str	x26, [sp, #288]
 4ac:	ands	x26, x26, #0xfffffffffffffffe
 4b0:	b.eq	4bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x4bc>  // b.none
 4b4:	mov	w28, #0x1                   	// #1
 4b8:	b	144 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x144>
 4bc:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 4c0:	add	x3, x3, #0x0
 4c4:	mov	w2, #0x1ce                 	// #462
 4c8:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 4cc:	add	x1, x1, #0x0
 4d0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 4d4:	add	x0, x0, #0x0
 4d8:	bl	0 <__assert_fail>
 4dc:	add	x0, sp, #0x110
 4e0:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 4e4:	ldrb	w0, [x19, #8]
 4e8:	orr	w0, w0, #0x3
 4ec:	strb	w0, [x19, #8]
 4f0:	ldrb	w0, [sp, #280]
 4f4:	and	w0, w0, #0xfffffffd
 4f8:	strb	w0, [sp, #280]
 4fc:	str	xzr, [sp, #272]
 500:	str	x26, [x19]
 504:	ldp	x23, x24, [sp, #48]
 508:	ldp	x25, x26, [sp, #64]
 50c:	ldp	x27, x28, [sp, #80]
 510:	b	5c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm8ExpectedIjED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIjED1Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w1, [x0, #8]
   c:	tbnz	w1, #1, 34 <_ZN4llvm8ExpectedIjED1Ev+0x34>
  10:	ldrb	w1, [x0, #8]
  14:	tbz	w1, #0, 2c <_ZN4llvm8ExpectedIjED1Ev+0x2c>
  18:	ldr	x0, [x0]
  1c:	cbz	x0, 2c <_ZN4llvm8ExpectedIjED1Ev+0x2c>
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #8]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	bl	0 <_ZN4llvm8ExpectedIjED1Ev>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor7ReadVBREj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>:
   0:	stp	x29, x30, [sp, #-352]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x8
  14:	mov	x20, x0
  18:	mov	w21, w1
  1c:	add	x8, sp, #0x120
  20:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  24:	ldrb	w0, [sp, #296]
  28:	and	w22, w0, #0x1
  2c:	ldrb	w1, [sp, #280]
  30:	bfxil	w1, w22, #0, #1
  34:	orr	w1, w1, #0x2
  38:	strb	w1, [sp, #280]
  3c:	and	w0, w0, #0xfffffffd
  40:	strb	w0, [sp, #296]
  44:	cbnz	w22, 178 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x178>
  48:	stp	x23, x24, [sp, #48]
  4c:	ldr	x1, [sp, #288]
  50:	str	w1, [sp, #272]
  54:	ldrb	w0, [sp, #280]
  58:	and	w0, w0, #0xfffffffd
  5c:	strb	w0, [sp, #280]
  60:	sub	w23, w21, #0x1
  64:	lsr	w0, w1, w23
  68:	tbz	w0, #0, 1b8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1b8>
  6c:	stp	x25, x26, [sp, #64]
  70:	stp	x27, x28, [sp, #80]
  74:	mov	w24, #0xffffffff            	// #-1
  78:	lsl	w24, w24, w23
  7c:	mvn	w0, w24
  80:	str	w0, [sp, #112]
  84:	bic	w24, w1, w24
  88:	cmp	w23, #0x3f
  8c:	b.hi	210 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x210>  // b.pmore
  90:	neg	w0, w21
  94:	mov	x1, #0xffffffffffffffff    	// #-1
  98:	lsr	x0, x1, x0
  9c:	str	x0, [sp, #104]
  a0:	mov	w0, #0x1                   	// #1
  a4:	lsl	w0, w0, w23
  a8:	str	w0, [sp, #116]
  ac:	str	w23, [sp, #100]
  b0:	add	x28, sp, #0xc0
  b4:	add	x0, x28, #0x10
  b8:	str	x0, [sp, #128]
  bc:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  c0:	ldr	x0, [x0]
  c4:	add	x0, x0, #0x10
  c8:	str	x0, [sp, #136]
  cc:	ldr	w25, [x20, #32]
  d0:	cmp	w21, w25
  d4:	b.hi	230 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x230>  // b.pmore
  d8:	ldr	x0, [x20, #24]
  dc:	ldr	x1, [sp, #104]
  e0:	and	x26, x0, x1
  e4:	lsr	x0, x0, x21
  e8:	str	x0, [x20, #24]
  ec:	sub	w25, w25, w21
  f0:	str	w25, [x20, #32]
  f4:	str	w26, [sp, #304]
  f8:	mov	w25, w22
  fc:	ldrb	w0, [sp, #280]
 100:	tbnz	w0, #1, 4f4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x4f4>
 104:	ldrb	w0, [sp, #280]
 108:	tbz	w0, #0, 120 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x120>
 10c:	ldr	x0, [sp, #272]
 110:	cbz	x0, 120 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x120>
 114:	ldr	x1, [x0]
 118:	ldr	x1, [x1, #8]
 11c:	blr	x1
 120:	ldrb	w0, [sp, #280]
 124:	bfxil	w0, w25, #0, #1
 128:	orr	w0, w0, #0x2
 12c:	strb	w0, [sp, #280]
 130:	cbnz	w25, 4fc <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x4fc>
 134:	ldr	w0, [sp, #304]
 138:	str	w0, [sp, #272]
 13c:	ldrb	w1, [sp, #280]
 140:	and	w1, w1, #0xfffffffd
 144:	strb	w1, [sp, #280]
 148:	ldr	w1, [sp, #112]
 14c:	and	w1, w1, w0
 150:	ldrb	w2, [sp, #100]
 154:	lsl	w1, w1, w2
 158:	orr	w24, w24, w1
 15c:	ldr	w1, [sp, #116]
 160:	tst	w0, w1
 164:	b.eq	1d4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1d4>  // b.none
 168:	ldr	w0, [sp, #100]
 16c:	add	w0, w0, w23
 170:	str	w0, [sp, #100]
 174:	b	cc <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xcc>
 178:	ldrb	w0, [x19, #8]
 17c:	orr	w0, w0, #0x3
 180:	strb	w0, [x19, #8]
 184:	str	xzr, [sp, #272]
 188:	ldr	x0, [sp, #288]
 18c:	str	x0, [x19]
 190:	ldr	x0, [sp, #272]
 194:	cbz	x0, 1a4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1a4>
 198:	ldr	x1, [x0]
 19c:	ldr	x1, [x1, #8]
 1a0:	blr	x1
 1a4:	mov	x0, x19
 1a8:	ldp	x19, x20, [sp, #16]
 1ac:	ldp	x21, x22, [sp, #32]
 1b0:	ldp	x29, x30, [sp], #352
 1b4:	ret
 1b8:	ldrb	w0, [x19, #8]
 1bc:	and	w0, w0, #0xfffffffe
 1c0:	orr	w0, w0, #0x2
 1c4:	strb	w0, [x19, #8]
 1c8:	str	w1, [x19]
 1cc:	ldp	x23, x24, [sp, #48]
 1d0:	b	1a4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1a4>
 1d4:	ldrb	w0, [x19, #8]
 1d8:	and	w0, w0, #0xfffffffe
 1dc:	orr	w0, w0, #0x2
 1e0:	strb	w0, [x19, #8]
 1e4:	str	w24, [x19]
 1e8:	ldrb	w0, [sp, #280]
 1ec:	tbnz	w0, #0, 200 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x200>
 1f0:	ldp	x23, x24, [sp, #48]
 1f4:	ldp	x25, x26, [sp, #64]
 1f8:	ldp	x27, x28, [sp, #80]
 1fc:	b	1a4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1a4>
 200:	ldp	x23, x24, [sp, #48]
 204:	ldp	x25, x26, [sp, #64]
 208:	ldp	x27, x28, [sp, #80]
 20c:	b	190 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x190>
 210:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 214:	add	x3, x3, #0x0
 218:	mov	w2, #0xc0                  	// #192
 21c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 220:	add	x1, x1, #0x0
 224:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 228:	add	x0, x0, #0x0
 22c:	bl	0 <__assert_fail>
 230:	str	xzr, [sp, #120]
 234:	cbz	w25, 240 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x240>
 238:	ldr	x0, [x20, #24]
 23c:	str	x0, [sp, #120]
 240:	ldr	x27, [x20, #16]
 244:	ldr	x26, [x20, #8]
 248:	cmp	x27, x26
 24c:	b.cs	2c8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x2c8>  // b.hs, b.nlast
 250:	ldr	x0, [x20]
 254:	add	x3, x0, x27
 258:	add	x1, x27, #0x8
 25c:	cmp	x26, x1
 260:	b.cc	3b4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x3b4>  // b.lo, b.ul, b.last
 264:	ldr	x0, [x0, x27]
 268:	str	x0, [x20, #24]
 26c:	mov	w1, #0x8                   	// #8
 270:	add	x27, x27, w1, uxtw
 274:	str	x27, [x20, #16]
 278:	lsl	w1, w1, #3
 27c:	str	w1, [x20, #32]
 280:	sub	w26, w21, w25
 284:	ldr	w27, [x20, #32]
 288:	cmp	w26, w27
 28c:	b.hi	404 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x404>  // b.pmore
 290:	ldr	x1, [x20, #24]
 294:	sub	w0, w25, w21
 298:	lsr	x26, x1, x26
 29c:	str	x26, [x20, #24]
 2a0:	add	w27, w0, w27
 2a4:	str	w27, [x20, #32]
 2a8:	add	w0, w0, #0x40
 2ac:	mov	x26, #0xffffffffffffffff    	// #-1
 2b0:	lsr	x26, x26, x0
 2b4:	and	x26, x26, x1
 2b8:	lsl	x25, x26, x25
 2bc:	ldr	x0, [sp, #120]
 2c0:	orr	x26, x25, x0
 2c4:	b	f4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xf4>
 2c8:	bl	0 <_ZNSt3_V216generic_categoryEv>
 2cc:	mov	w1, #0x5                   	// #5
 2d0:	str	w1, [sp, #144]
 2d4:	str	x0, [sp, #152]
 2d8:	add	x1, sp, #0xa0
 2dc:	add	x0, sp, #0xb0
 2e0:	str	x0, [sp, #160]
 2e4:	str	xzr, [sp, #168]
 2e8:	strb	wzr, [sp, #176]
 2ec:	mov	w0, #0x1                   	// #1
 2f0:	str	w0, [sp, #256]
 2f4:	str	xzr, [sp, #248]
 2f8:	str	xzr, [sp, #240]
 2fc:	str	xzr, [sp, #232]
 300:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
 304:	ldr	x0, [x0]
 308:	add	x0, x0, #0x10
 30c:	str	x0, [sp, #224]
 310:	str	x1, [sp, #264]
 314:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 318:	add	x0, x0, #0x0
 31c:	str	x0, [sp, #200]
 320:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 324:	ldr	x0, [x0]
 328:	add	x0, x0, #0x10
 32c:	str	x0, [sp, #192]
 330:	str	x26, [sp, #208]
 334:	str	x27, [sp, #216]
 338:	mov	x1, x28
 33c:	add	x0, sp, #0xe0
 340:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 344:	ldr	x1, [sp, #248]
 348:	ldr	x0, [sp, #232]
 34c:	cmp	x1, x0
 350:	b.eq	35c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x35c>  // b.none
 354:	add	x0, sp, #0xe0
 358:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 35c:	mov	x8, x28
 360:	add	x1, sp, #0x90
 364:	ldr	x0, [sp, #264]
 368:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 36c:	add	x0, sp, #0xe0
 370:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 374:	ldr	x0, [sp, #160]
 378:	add	x1, sp, #0xb0
 37c:	cmp	x0, x1
 380:	b.eq	388 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x388>  // b.none
 384:	bl	0 <_ZdlPv>
 388:	ldr	x0, [sp, #192]
 38c:	ands	x1, x0, #0xfffffffffffffffe
 390:	cset	x0, ne  // ne = any
 394:	orr	x0, x0, x1
 398:	str	x0, [sp, #192]
 39c:	ands	x1, x0, #0xfffffffffffffffe
 3a0:	b.eq	3f8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x3f8>  // b.none
 3a4:	str	x1, [sp, #304]
 3a8:	mov	w25, #0x1                   	// #1
 3ac:	mov	x26, #0x0                   	// #0
 3b0:	b	fc <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xfc>
 3b4:	str	xzr, [x20, #24]
 3b8:	subs	w26, w26, w27
 3bc:	b.eq	3f0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x3f0>  // b.none
 3c0:	mov	x0, #0x0                   	// #0
 3c4:	ldrb	w1, [x3, x0]
 3c8:	lsl	w2, w0, #3
 3cc:	lsl	x2, x1, x2
 3d0:	ldr	x1, [x20, #24]
 3d4:	orr	x1, x1, x2
 3d8:	str	x1, [x20, #24]
 3dc:	add	x0, x0, #0x1
 3e0:	mov	w1, w0
 3e4:	cmp	w26, w0
 3e8:	b.ne	3c4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x3c4>  // b.any
 3ec:	b	270 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x270>
 3f0:	mov	w1, w26
 3f4:	b	270 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x270>
 3f8:	tbz	w0, #0, 280 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x280>
 3fc:	add	x0, sp, #0xc0
 400:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 404:	bl	0 <_ZNSt3_V216generic_categoryEv>
 408:	mov	w1, #0x5                   	// #5
 40c:	str	w1, [sp, #160]
 410:	str	x0, [sp, #168]
 414:	ldr	x0, [sp, #128]
 418:	str	x0, [sp, #192]
 41c:	str	xzr, [sp, #200]
 420:	strb	wzr, [sp, #208]
 424:	mov	w0, #0x1                   	// #1
 428:	str	w0, [sp, #256]
 42c:	str	xzr, [sp, #248]
 430:	str	xzr, [sp, #240]
 434:	str	xzr, [sp, #232]
 438:	ldr	x0, [sp, #136]
 43c:	str	x0, [sp, #224]
 440:	str	x28, [sp, #264]
 444:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 448:	add	x0, x0, #0x0
 44c:	str	x0, [sp, #336]
 450:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 454:	ldr	x0, [x0]
 458:	add	x0, x0, #0x10
 45c:	str	x0, [sp, #328]
 460:	str	w26, [sp, #344]
 464:	str	w27, [sp, #348]
 468:	add	x1, sp, #0x148
 46c:	add	x0, sp, #0xe0
 470:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 474:	ldr	x1, [sp, #248]
 478:	ldr	x0, [sp, #232]
 47c:	cmp	x1, x0
 480:	b.eq	48c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x48c>  // b.none
 484:	add	x0, sp, #0xe0
 488:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 48c:	add	x8, sp, #0x140
 490:	add	x1, sp, #0xa0
 494:	ldr	x0, [sp, #264]
 498:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 49c:	add	x0, sp, #0xe0
 4a0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 4a4:	ldr	x0, [sp, #192]
 4a8:	ldr	x1, [sp, #128]
 4ac:	cmp	x0, x1
 4b0:	b.eq	4b8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x4b8>  // b.none
 4b4:	bl	0 <_ZdlPv>
 4b8:	ldr	x0, [sp, #320]
 4bc:	ands	x0, x0, #0xfffffffffffffffe
 4c0:	cset	x1, ne  // ne = any
 4c4:	orr	x1, x1, x0
 4c8:	str	x1, [sp, #320]
 4cc:	ands	x1, x1, #0xfffffffffffffffe
 4d0:	b.ne	3a4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x3a4>  // b.any
 4d4:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 4d8:	add	x3, x3, #0x0
 4dc:	mov	w2, #0x1ce                 	// #462
 4e0:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 4e4:	add	x1, x1, #0x0
 4e8:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 4ec:	add	x0, x0, #0x0
 4f0:	bl	0 <__assert_fail>
 4f4:	add	x0, sp, #0x110
 4f8:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 4fc:	ldr	x20, [sp, #304]
 500:	cbz	x26, 514 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x514>
 504:	ldr	x0, [x26]
 508:	ldr	x1, [x0, #8]
 50c:	mov	x0, x26
 510:	blr	x1
 514:	ldrb	w0, [x19, #8]
 518:	orr	w0, w0, #0x3
 51c:	strb	w0, [x19, #8]
 520:	str	xzr, [sp, #272]
 524:	str	x20, [x19]
 528:	ldp	x23, x24, [sp, #48]
 52c:	ldp	x25, x26, [sp, #64]
 530:	ldp	x27, x28, [sp, #80]
 534:	b	190 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x190>

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	6a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a0>  // b.none
   8:	stp	x29, x30, [sp, #-112]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	stp	x27, x28, [sp, #80]
  24:	mov	x25, x0
  28:	mov	x19, x1
  2c:	mov	x20, x2
  30:	mov	x27, x3
  34:	mov	x23, x2
  38:	mov	x28, x3
  3c:	mov	x21, x1
  40:	sub	x2, x3, x2
  44:	str	x2, [sp, #104]
  48:	asr	x24, x2, #4
  4c:	mov	x0, x24
  50:	ldr	x22, [x25, #8]
  54:	ldr	x1, [x25, #16]
  58:	sub	x1, x1, x22
  5c:	cmp	x24, x1, asr #4
  60:	b.hi	458 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x458>  // b.pmore
  64:	sub	x5, x22, x19
  68:	asr	x26, x5, #4
  6c:	mov	x6, x26
  70:	cmp	x24, x26
  74:	b.cs	298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x298>  // b.hs, b.nlast
  78:	sub	x20, x22, x2
  7c:	mov	x0, x20
  80:	mov	x1, x22
  84:	ldr	x2, [x0]
  88:	str	x2, [x1]
  8c:	str	xzr, [x1, #8]
  90:	ldr	x2, [x0, #8]
  94:	str	xzr, [x0, #8]
  98:	str	x2, [x1, #8]
  9c:	str	xzr, [x0], #16
  a0:	add	x1, x1, #0x10
  a4:	cmp	x22, x0
  a8:	b.ne	84 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x84>  // b.any
  ac:	ldr	x0, [x25, #8]
  b0:	ldr	x1, [sp, #104]
  b4:	add	x0, x0, x1
  b8:	str	x0, [x25, #8]
  bc:	sub	x19, x20, x19
  c0:	asr	x25, x19, #4
  c4:	cmp	x19, #0x0
  c8:	b.le	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x18c>
  cc:	adrp	x27, 0 <__pthread_key_create>
  d0:	ldr	x26, [x27]
  d4:	mov	x27, x26
  d8:	b	104 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x104>
  dc:	add	x1, x19, #0x8
  e0:	ldaxr	w0, [x1]
  e4:	sub	w2, w0, #0x1
  e8:	stlxr	w3, w2, [x1]
  ec:	cbnz	w3, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xe0>
  f0:	cmp	w0, #0x1
  f4:	b.eq	138 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x138>  // b.none
  f8:	sub	x25, x25, #0x1
  fc:	cmp	x25, #0x0
 100:	b.le	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x18c>
 104:	ldr	x1, [x20, #-16]!
 108:	ldr	x0, [x20, #8]
 10c:	str	xzr, [x20, #8]
 110:	str	xzr, [x20]
 114:	str	x1, [x22, #-16]!
 118:	ldr	x19, [x22, #8]
 11c:	str	x0, [x22, #8]
 120:	cbz	x19, f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xf8>
 124:	cbnz	x26, dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xdc>
 128:	ldr	w0, [x19, #8]
 12c:	sub	w1, w0, #0x1
 130:	str	w1, [x19, #8]
 134:	b	f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xf0>
 138:	ldr	x0, [x19]
 13c:	ldr	x1, [x0, #16]
 140:	mov	x0, x19
 144:	blr	x1
 148:	cbz	x27, 17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x17c>
 14c:	add	x1, x19, #0xc
 150:	ldaxr	w0, [x1]
 154:	sub	w2, w0, #0x1
 158:	stlxr	w3, w2, [x1]
 15c:	cbnz	w3, 150 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x150>
 160:	cmp	w0, #0x1
 164:	b.ne	f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xf8>  // b.any
 168:	ldr	x0, [x19]
 16c:	ldr	x1, [x0, #24]
 170:	mov	x0, x19
 174:	blr	x1
 178:	b	f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xf8>
 17c:	ldr	w0, [x19, #12]
 180:	sub	w1, w0, #0x1
 184:	str	w1, [x19, #12]
 188:	b	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x160>
 18c:	ldr	x0, [sp, #104]
 190:	cmp	x0, #0x0
 194:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x684>
 198:	adrp	x22, 0 <__pthread_key_create>
 19c:	ldr	x25, [x22]
 1a0:	mov	x26, x25
 1a4:	mov	x22, x25
 1a8:	b	1ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1ec>
 1ac:	ldr	w0, [x19, #8]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [x19, #8]
 1b8:	b	220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x220>
 1bc:	ldaxr	w0, [x1]
 1c0:	sub	w2, w0, #0x1
 1c4:	stlxr	w3, w2, [x1]
 1c8:	cbnz	w3, 1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1bc>
 1cc:	cmp	w0, #0x1
 1d0:	b.eq	244 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x244>  // b.none
 1d4:	str	x19, [x21, #8]
 1d8:	add	x23, x23, #0x10
 1dc:	add	x21, x21, #0x10
 1e0:	sub	x24, x24, #0x1
 1e4:	cmp	x24, #0x0
 1e8:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x684>
 1ec:	ldr	x0, [x23]
 1f0:	str	x0, [x21]
 1f4:	ldr	x19, [x23, #8]
 1f8:	ldr	x0, [x21, #8]
 1fc:	cmp	x19, x0
 200:	b.eq	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d8>  // b.none
 204:	cbz	x19, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x220>
 208:	cbz	x22, 1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1ac>
 20c:	add	x0, x19, #0x8
 210:	ldaxr	w1, [x0]
 214:	add	w1, w1, #0x1
 218:	stlxr	w2, w1, [x0]
 21c:	cbnz	w2, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x210>
 220:	ldr	x20, [x21, #8]
 224:	cbz	x20, 1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d4>
 228:	cbz	x25, 234 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x234>
 22c:	add	x1, x20, #0x8
 230:	b	1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1bc>
 234:	ldr	w0, [x20, #8]
 238:	sub	w1, w0, #0x1
 23c:	str	w1, [x20, #8]
 240:	b	1cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1cc>
 244:	ldr	x0, [x20]
 248:	ldr	x1, [x0, #16]
 24c:	mov	x0, x20
 250:	blr	x1
 254:	cbz	x26, 288 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x288>
 258:	add	x1, x20, #0xc
 25c:	ldaxr	w0, [x1]
 260:	sub	w2, w0, #0x1
 264:	stlxr	w3, w2, [x1]
 268:	cbnz	w3, 25c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x25c>
 26c:	cmp	w0, #0x1
 270:	b.ne	1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d4>  // b.any
 274:	ldr	x0, [x20]
 278:	ldr	x1, [x0, #24]
 27c:	mov	x0, x20
 280:	blr	x1
 284:	b	1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d4>
 288:	ldr	w0, [x20, #12]
 28c:	sub	w1, w0, #0x1
 290:	str	w1, [x20, #12]
 294:	b	26c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x26c>
 298:	add	x20, x20, x5
 29c:	cmp	x3, x20
 2a0:	b.eq	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x304>  // b.none
 2a4:	mov	x2, x22
 2a8:	adrp	x4, 0 <__pthread_key_create>
 2ac:	ldr	x4, [x4]
 2b0:	b	2d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2d4>
 2b4:	ldaxr	w3, [x1]
 2b8:	add	w3, w3, #0x1
 2bc:	stlxr	w7, w3, [x1]
 2c0:	cbnz	w7, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 2c4:	add	x2, x2, #0x10
 2c8:	add	x20, x20, #0x10
 2cc:	cmp	x28, x20
 2d0:	b.eq	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x304>  // b.none
 2d4:	ldr	x1, [x20]
 2d8:	str	x1, [x2]
 2dc:	ldr	x1, [x20, #8]
 2e0:	str	x1, [x2, #8]
 2e4:	cbz	x1, 2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2c4>
 2e8:	cbz	x4, 2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2f4>
 2ec:	add	x1, x1, #0x8
 2f0:	b	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 2f4:	ldr	w3, [x1, #8]
 2f8:	add	w3, w3, #0x1
 2fc:	str	w3, [x1, #8]
 300:	b	2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2c4>
 304:	sub	x0, x0, x6
 308:	ldr	x1, [x25, #8]
 30c:	add	x0, x1, x0, lsl #4
 310:	str	x0, [x25, #8]
 314:	cmp	x22, x19
 318:	b.eq	344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x344>  // b.none
 31c:	ldr	x1, [x19]
 320:	str	x1, [x0]
 324:	str	xzr, [x0, #8]
 328:	ldr	x1, [x19, #8]
 32c:	str	xzr, [x19, #8]
 330:	str	x1, [x0, #8]
 334:	str	xzr, [x19], #16
 338:	add	x0, x0, #0x10
 33c:	cmp	x22, x19
 340:	b.ne	31c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x31c>  // b.any
 344:	ldr	x0, [x25, #8]
 348:	add	x0, x0, x5
 34c:	str	x0, [x25, #8]
 350:	cmp	x5, #0x0
 354:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x684>
 358:	adrp	x22, 0 <__pthread_key_create>
 35c:	ldr	x24, [x22]
 360:	mov	x25, x24
 364:	mov	x22, x24
 368:	b	3ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3ac>
 36c:	ldr	w0, [x19, #8]
 370:	add	w0, w0, #0x1
 374:	str	w0, [x19, #8]
 378:	b	3e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3e0>
 37c:	ldaxr	w0, [x1]
 380:	sub	w2, w0, #0x1
 384:	stlxr	w3, w2, [x1]
 388:	cbnz	w3, 37c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x37c>
 38c:	cmp	w0, #0x1
 390:	b.eq	404 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x404>  // b.none
 394:	str	x19, [x21, #8]
 398:	add	x23, x23, #0x10
 39c:	add	x21, x21, #0x10
 3a0:	sub	x26, x26, #0x1
 3a4:	cmp	x26, #0x0
 3a8:	b.le	684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x684>
 3ac:	ldr	x0, [x23]
 3b0:	str	x0, [x21]
 3b4:	ldr	x19, [x23, #8]
 3b8:	ldr	x0, [x21, #8]
 3bc:	cmp	x19, x0
 3c0:	b.eq	398 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x398>  // b.none
 3c4:	cbz	x19, 3e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3e0>
 3c8:	cbz	x22, 36c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x36c>
 3cc:	add	x0, x19, #0x8
 3d0:	ldaxr	w1, [x0]
 3d4:	add	w1, w1, #0x1
 3d8:	stlxr	w2, w1, [x0]
 3dc:	cbnz	w2, 3d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3d0>
 3e0:	ldr	x20, [x21, #8]
 3e4:	cbz	x20, 394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x394>
 3e8:	cbz	x24, 3f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3f4>
 3ec:	add	x1, x20, #0x8
 3f0:	b	37c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x37c>
 3f4:	ldr	w0, [x20, #8]
 3f8:	sub	w1, w0, #0x1
 3fc:	str	w1, [x20, #8]
 400:	b	38c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x38c>
 404:	ldr	x0, [x20]
 408:	ldr	x1, [x0, #16]
 40c:	mov	x0, x20
 410:	blr	x1
 414:	cbz	x25, 448 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x448>
 418:	add	x1, x20, #0xc
 41c:	ldaxr	w0, [x1]
 420:	sub	w2, w0, #0x1
 424:	stlxr	w3, w2, [x1]
 428:	cbnz	w3, 41c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x41c>
 42c:	cmp	w0, #0x1
 430:	b.ne	394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x394>  // b.any
 434:	ldr	x0, [x20]
 438:	ldr	x1, [x0, #24]
 43c:	mov	x0, x20
 440:	blr	x1
 444:	b	394 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x394>
 448:	ldr	w0, [x20, #12]
 44c:	sub	w1, w0, #0x1
 450:	str	w1, [x20, #12]
 454:	b	42c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x42c>
 458:	ldr	x1, [x25]
 45c:	sub	x22, x22, x1
 460:	asr	x22, x22, #4
 464:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
 468:	sub	x1, x1, x22
 46c:	cmp	x24, x1
 470:	b.hi	4fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4fc>  // b.pmore
 474:	cmp	x24, x22
 478:	csel	x0, x24, x22, cs  // cs = hs, nlast
 47c:	adds	x22, x0, x22
 480:	b.cs	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x508>  // b.hs, b.nlast
 484:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
 488:	cmp	x22, x24
 48c:	csel	x24, x22, x24, ls  // ls = plast
 490:	mov	x23, #0x0                   	// #0
 494:	cbz	x22, 4a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4a4>
 498:	lsl	x0, x24, #4
 49c:	bl	0 <_Znwm>
 4a0:	mov	x23, x0
 4a4:	ldr	x3, [x25]
 4a8:	mov	x0, x3
 4ac:	mov	x1, x23
 4b0:	cmp	x19, x3
 4b4:	b.eq	510 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x510>  // b.none
 4b8:	ldr	x2, [x0]
 4bc:	str	x2, [x1]
 4c0:	str	xzr, [x1, #8]
 4c4:	ldr	x2, [x0, #8]
 4c8:	str	xzr, [x0, #8]
 4cc:	str	x2, [x1, #8]
 4d0:	str	xzr, [x0], #16
 4d4:	add	x1, x1, #0x10
 4d8:	cmp	x21, x0
 4dc:	b.ne	4b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4b8>  // b.any
 4e0:	sub	x3, x19, x3
 4e4:	add	x4, x23, x3
 4e8:	mov	x5, x20
 4ec:	mov	x1, x4
 4f0:	adrp	x3, 0 <__pthread_key_create>
 4f4:	ldr	x3, [x3]
 4f8:	b	538 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x538>
 4fc:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 500:	add	x0, x0, #0x0
 504:	bl	0 <_ZSt20__throw_length_errorPKc>
 508:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
 50c:	b	498 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x498>
 510:	mov	x4, x23
 514:	b	4e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4e8>
 518:	ldaxr	w2, [x0]
 51c:	add	w2, w2, #0x1
 520:	stlxr	w6, w2, [x0]
 524:	cbnz	w6, 518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x518>
 528:	add	x1, x1, #0x10
 52c:	add	x20, x20, #0x10
 530:	cmp	x28, x20
 534:	b.eq	568 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x568>  // b.none
 538:	ldr	x0, [x20]
 53c:	str	x0, [x1]
 540:	ldr	x0, [x20, #8]
 544:	str	x0, [x1, #8]
 548:	cbz	x0, 528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x528>
 54c:	cbz	x3, 558 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x558>
 550:	add	x0, x0, #0x8
 554:	b	518 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x518>
 558:	ldr	w2, [x0, #8]
 55c:	add	w2, w2, #0x1
 560:	str	w2, [x0, #8]
 564:	b	528 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x528>
 568:	sub	x27, x27, x5
 56c:	add	x27, x4, x27
 570:	ldr	x2, [x25, #8]
 574:	cmp	x19, x2
 578:	b.eq	5b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5b0>  // b.none
 57c:	mov	x3, x19
 580:	mov	x0, x27
 584:	ldr	x1, [x19]
 588:	str	x1, [x0]
 58c:	ldr	x1, [x19, #8]
 590:	str	xzr, [x19, #8]
 594:	str	x1, [x0, #8]
 598:	str	xzr, [x19], #16
 59c:	add	x0, x0, #0x10
 5a0:	cmp	x2, x19
 5a4:	b.ne	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>  // b.any
 5a8:	sub	x2, x2, x3
 5ac:	add	x27, x27, x2
 5b0:	ldr	x19, [x25]
 5b4:	ldr	x21, [x25, #8]
 5b8:	cmp	x19, x21
 5bc:	b.eq	668 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x668>  // b.none
 5c0:	adrp	x26, 0 <__pthread_key_create>
 5c4:	ldr	x22, [x26]
 5c8:	mov	x26, x22
 5cc:	b	5f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5f8>
 5d0:	add	x1, x20, #0x8
 5d4:	ldaxr	w0, [x1]
 5d8:	sub	w2, w0, #0x1
 5dc:	stlxr	w3, w2, [x1]
 5e0:	cbnz	w3, 5d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d4>
 5e4:	cmp	w0, #0x1
 5e8:	b.eq	614 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x614>  // b.none
 5ec:	add	x19, x19, #0x10
 5f0:	cmp	x21, x19
 5f4:	b.eq	668 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x668>  // b.none
 5f8:	ldr	x20, [x19, #8]
 5fc:	cbz	x20, 5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5ec>
 600:	cbnz	x22, 5d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d0>
 604:	ldr	w0, [x20, #8]
 608:	sub	w1, w0, #0x1
 60c:	str	w1, [x20, #8]
 610:	b	5e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5e4>
 614:	ldr	x0, [x20]
 618:	ldr	x1, [x0, #16]
 61c:	mov	x0, x20
 620:	blr	x1
 624:	cbz	x26, 658 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x658>
 628:	add	x1, x20, #0xc
 62c:	ldaxr	w0, [x1]
 630:	sub	w2, w0, #0x1
 634:	stlxr	w3, w2, [x1]
 638:	cbnz	w3, 62c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x62c>
 63c:	cmp	w0, #0x1
 640:	b.ne	5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5ec>  // b.any
 644:	ldr	x0, [x20]
 648:	ldr	x1, [x0, #24]
 64c:	mov	x0, x20
 650:	blr	x1
 654:	b	5ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5ec>
 658:	ldr	w0, [x20, #12]
 65c:	sub	w1, w0, #0x1
 660:	str	w1, [x20, #12]
 664:	b	63c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x63c>
 668:	ldr	x0, [x25]
 66c:	cbz	x0, 674 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x674>
 670:	bl	0 <_ZdlPv>
 674:	str	x23, [x25]
 678:	str	x27, [x25, #8]
 67c:	add	x23, x23, x24, lsl #4
 680:	str	x23, [x25, #16]
 684:	ldp	x19, x20, [sp, #16]
 688:	ldp	x21, x22, [sp, #32]
 68c:	ldp	x23, x24, [sp, #48]
 690:	ldp	x25, x26, [sp, #64]
 694:	ldp	x27, x28, [sp, #80]
 698:	ldp	x29, x30, [sp], #112
 69c:	ret
 6a0:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x23, x0
  20:	mov	x21, x2
  24:	str	x1, [sp, #96]
  28:	ldr	x26, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x26, x24
  34:	mov	x2, #0x7ffffffffffffff     	// #576460752303423487
  38:	cmp	x2, x0, asr #4
  3c:	b.eq	b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>  // b.none
  40:	mov	x19, x1
  44:	asr	x1, x0, #4
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	208 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x208>  // b.hs, b.nlast
  58:	mov	x27, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	x0, x27
  60:	csel	x27, x0, x27, ls  // ls = plast
  64:	sub	x22, x19, x24
  68:	mov	x20, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>
  70:	lsl	x0, x27, #4
  74:	bl	0 <_Znwm>
  78:	mov	x20, x0
  7c:	add	x0, x20, x22
  80:	ldr	x1, [x21]
  84:	str	x1, [x20, x22]
  88:	ldr	x1, [x21, #8]
  8c:	str	xzr, [x21, #8]
  90:	str	x1, [x0, #8]
  94:	str	xzr, [x21]
  98:	cmp	x19, x24
  9c:	b.eq	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>  // b.none
  a0:	mov	x25, x20
  a4:	mov	x22, x24
  a8:	adrp	x0, 0 <__pthread_key_create>
  ac:	ldr	x28, [x0]
  b0:	str	x28, [sp, #104]
  b4:	b	f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
  b8:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  bc:	add	x0, x0, #0x0
  c0:	bl	0 <_ZSt20__throw_length_errorPKc>
  c4:	add	x1, x21, #0x8
  c8:	ldaxr	w0, [x1]
  cc:	sub	w2, w0, #0x1
  d0:	stlxr	w3, w2, [x1]
  d4:	cbnz	w3, c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc8>
  d8:	cmp	w0, #0x1
  dc:	b.eq	12c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x12c>  // b.none
  e0:	add	x22, x22, #0x10
  e4:	add	x25, x25, #0x10
  e8:	ldr	x0, [sp, #96]
  ec:	cmp	x0, x22
  f0:	b.eq	184 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x184>  // b.none
  f4:	ldr	x0, [x22]
  f8:	str	x0, [x25]
  fc:	str	xzr, [x25, #8]
 100:	ldr	x0, [x22, #8]
 104:	str	xzr, [x22, #8]
 108:	str	x0, [x25, #8]
 10c:	str	xzr, [x22]
 110:	ldr	x21, [x22, #8]
 114:	cbz	x21, e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
 118:	cbnz	x28, c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc4>
 11c:	ldr	w0, [x21, #8]
 120:	sub	w1, w0, #0x1
 124:	str	w1, [x21, #8]
 128:	b	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd8>
 12c:	ldr	x0, [x21]
 130:	ldr	x1, [x0, #16]
 134:	mov	x0, x21
 138:	blr	x1
 13c:	ldr	x0, [sp, #104]
 140:	cbz	x0, 174 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x174>
 144:	add	x1, x21, #0xc
 148:	ldaxr	w0, [x1]
 14c:	sub	w2, w0, #0x1
 150:	stlxr	w3, w2, [x1]
 154:	cbnz	w3, 148 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x148>
 158:	cmp	w0, #0x1
 15c:	b.ne	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>  // b.any
 160:	ldr	x0, [x21]
 164:	ldr	x1, [x0, #24]
 168:	mov	x0, x21
 16c:	blr	x1
 170:	b	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe0>
 174:	ldr	w0, [x21, #12]
 178:	sub	w1, w0, #0x1
 17c:	str	w1, [x21, #12]
 180:	b	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 184:	sub	x21, x19, x24
 188:	add	x21, x20, x21
 18c:	add	x21, x21, #0x10
 190:	cmp	x19, x26
 194:	b.eq	1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>  // b.none
 198:	mov	x1, x21
 19c:	mov	x0, x19
 1a0:	ldr	x2, [x0]
 1a4:	str	x2, [x1]
 1a8:	ldr	x2, [x0, #8]
 1ac:	str	x2, [x1, #8]
 1b0:	add	x0, x0, #0x10
 1b4:	add	x1, x1, #0x10
 1b8:	cmp	x0, x26
 1bc:	b.ne	1a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a0>  // b.any
 1c0:	sub	x19, x26, x19
 1c4:	add	x21, x21, x19
 1c8:	cbz	x24, 1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d4>
 1cc:	mov	x0, x24
 1d0:	bl	0 <_ZdlPv>
 1d4:	str	x20, [x23]
 1d8:	str	x21, [x23, #8]
 1dc:	add	x20, x20, x27, lsl #4
 1e0:	str	x20, [x23, #16]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	ldp	x27, x28, [sp, #80]
 1f8:	ldp	x29, x30, [sp], #112
 1fc:	ret
 200:	mov	x21, x20
 204:	b	18c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x18c>
 208:	sub	x22, x19, x24
 20c:	mov	x27, #0x7ffffffffffffff     	// #576460752303423487
 210:	b	70 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	40 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x40>  // b.none
  14:	ldr	x3, [x2]
  18:	str	x3, [x1]
  1c:	str	xzr, [x1, #8]
  20:	ldr	x3, [x2, #8]
  24:	str	xzr, [x2, #8]
  28:	str	x3, [x1, #8]
  2c:	str	xzr, [x2]
  30:	ldr	x1, [x0, #8]
  34:	add	x1, x1, #0x10
  38:	str	x1, [x0, #8]
  3c:	ret
  40:	stp	x29, x30, [sp, #-16]!
  44:	mov	x29, sp
  48:	bl	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
       0:	stp	x29, x30, [sp, #-496]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	stp	x21, x22, [sp, #32]
      10:	stp	x23, x24, [sp, #48]
      14:	stp	x25, x26, [sp, #64]
      18:	stp	x27, x28, [sp, #80]
      1c:	mov	x21, x8
      20:	mov	x19, x0
      24:	mov	w20, w1
      28:	add	x25, sp, #0x140
      2c:	add	x22, sp, #0xf0
      30:	add	x24, x22, #0x10
      34:	str	x24, [sp, #96]
      38:	mov	x23, x19
      3c:	and	w26, w20, #0x2
      40:	add	x27, sp, #0x110
      44:	ldr	w0, [x19, #32]
      48:	cbnz	w0, 74 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x74>
      4c:	ldr	x1, [x19, #8]
      50:	ldr	x0, [x19, #16]
      54:	cmp	x1, x0
      58:	b.hi	74 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x74>  // b.pmore
      5c:	ldrb	w0, [sp, #152]
      60:	and	w0, w0, #0xfffffffe
      64:	strb	w0, [sp, #152]
      68:	str	wzr, [sp, #144]
      6c:	str	wzr, [sp, #148]
      70:	b	110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
      74:	mov	x8, x25
      78:	ldr	w1, [x19, #36]
      7c:	mov	x0, x23
      80:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
      84:	ldrb	w0, [sp, #328]
      88:	and	w2, w0, #0x1
      8c:	ldrb	w1, [sp, #168]
      90:	bfxil	w1, w2, #0, #1
      94:	orr	w1, w1, #0x2
      98:	strb	w1, [sp, #168]
      9c:	and	w0, w0, #0xfffffffd
      a0:	strb	w0, [sp, #328]
      a4:	cbnz	w2, 224 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x224>
      a8:	ldr	x0, [sp, #320]
      ac:	mov	w2, w0
      b0:	str	w0, [sp, #160]
      b4:	and	x1, x1, #0xff
      b8:	and	w1, w1, #0xfffffffd
      bc:	strb	w1, [sp, #168]
      c0:	cbz	w0, 274 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x274>
      c4:	cmp	w0, #0x1
      c8:	b.eq	50c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x50c>  // b.none
      cc:	cmp	w0, #0x2
      d0:	b.ne	9e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9e8>  // b.any
      d4:	cbnz	w26, 9e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9e8>
      d8:	mov	x8, x27
      dc:	mov	x0, x23
      e0:	bl	38b4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
      e4:	ldr	x0, [sp, #272]
      e8:	ands	x1, x0, #0xfffffffffffffffe
      ec:	cset	x0, ne  // ne = any
      f0:	orr	x0, x0, x1
      f4:	str	x0, [sp, #272]
      f8:	ands	x1, x0, #0xfffffffffffffffe
      fc:	b.eq	9dc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9dc>  // b.none
     100:	ldrb	w0, [sp, #152]
     104:	orr	w0, w0, #0x1
     108:	strb	w0, [sp, #152]
     10c:	str	x1, [sp, #144]
     110:	ldrb	w0, [sp, #152]
     114:	and	w28, w0, #0x1
     118:	tbnz	w0, #0, a04 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa04>
     11c:	ldr	w0, [sp, #144]
     120:	cmp	w0, #0x2
     124:	b.ne	a38 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa38>  // b.any
     128:	ldr	w23, [x19, #32]
     12c:	cmp	w23, #0x3
     130:	b.ls	a58 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa58>  // b.plast
     134:	ldr	x0, [x19, #24]
     138:	and	x27, x0, #0xf
     13c:	lsr	x0, x0, #4
     140:	str	x0, [x19, #24]
     144:	sub	w23, w23, #0x4
     148:	str	w23, [x19, #32]
     14c:	ldrb	w0, [sp, #184]
     150:	str	w27, [sp, #176]
     154:	and	w0, w0, #0xfffffffc
     158:	strb	w0, [sp, #184]
     15c:	tbz	w27, #3, d78 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd78>
     160:	and	w27, w27, #0x7
     164:	str	wzr, [sp, #104]
     168:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     16c:	ldr	x0, [x0]
     170:	add	x0, x0, #0x10
     174:	str	x0, [sp, #128]
     178:	ldr	w23, [x19, #32]
     17c:	cmp	w23, #0x3
     180:	b.ls	d80 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd80>  // b.plast
     184:	ldr	x0, [x19, #24]
     188:	and	x26, x0, #0xf
     18c:	lsr	x0, x0, #4
     190:	str	x0, [x19, #24]
     194:	sub	w23, w23, #0x4
     198:	str	w23, [x19, #32]
     19c:	str	w26, [sp, #416]
     1a0:	mov	w23, w28
     1a4:	ldrb	w0, [sp, #184]
     1a8:	tbnz	w0, #1, 1060 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1060>
     1ac:	ldrb	w0, [sp, #184]
     1b0:	tbz	w0, #0, 1c8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1c8>
     1b4:	ldr	x0, [sp, #176]
     1b8:	cbz	x0, 1c8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1c8>
     1bc:	ldr	x1, [x0]
     1c0:	ldr	x1, [x1, #8]
     1c4:	blr	x1
     1c8:	ldrb	w0, [sp, #184]
     1cc:	bfxil	w0, w23, #0, #1
     1d0:	orr	w0, w0, #0x2
     1d4:	strb	w0, [sp, #184]
     1d8:	cbnz	w23, 1068 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1068>
     1dc:	ldr	w0, [sp, #104]
     1e0:	add	w2, w0, #0x3
     1e4:	str	w2, [sp, #104]
     1e8:	ldr	w0, [sp, #416]
     1ec:	str	w0, [sp, #176]
     1f0:	ldrb	w1, [sp, #184]
     1f4:	and	w1, w1, #0xfffffffd
     1f8:	strb	w1, [sp, #184]
     1fc:	and	w1, w0, #0x7
     200:	lsl	w1, w1, w2
     204:	orr	w27, w27, w1
     208:	tbnz	w0, #3, 178 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x178>
     20c:	str	w27, [sp, #272]
     210:	ldrb	w0, [sp, #184]
     214:	and	w28, w0, #0x1
     218:	tbz	w0, #0, bfc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbfc>
     21c:	mov	w28, w23
     220:	b	be8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbe8>
     224:	ldr	x0, [sp, #320]
     228:	ldrb	w1, [sp, #168]
     22c:	and	w1, w1, #0xfffffffd
     230:	strb	w1, [sp, #168]
     234:	str	xzr, [sp, #160]
     238:	ldrb	w1, [sp, #152]
     23c:	orr	w1, w1, #0x1
     240:	strb	w1, [sp, #152]
     244:	ands	x0, x0, #0xfffffffffffffffe
     248:	cbz	x0, 254 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x254>
     24c:	str	x0, [sp, #144]
     250:	b	67c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x67c>
     254:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     258:	add	x3, x3, #0x0
     25c:	mov	w2, #0x1ce                 	// #462
     260:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     264:	add	x1, x1, #0x0
     268:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     26c:	add	x0, x0, #0x0
     270:	bl	0 <__assert_fail>
     274:	tbz	w20, #0, 2a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2a0>
     278:	ldrb	w0, [sp, #152]
     27c:	and	w0, w0, #0xfffffffe
     280:	strb	w0, [sp, #152]
     284:	mov	w0, #0x1                   	// #1
     288:	str	w0, [sp, #144]
     28c:	str	wzr, [sp, #148]
     290:	ldrb	w0, [sp, #168]
     294:	tbz	w0, #1, 674 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x674>
     298:	add	x0, sp, #0xa0
     29c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     2a0:	ldr	w0, [x19, #72]
     2a4:	cbz	w0, 12e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x12e4>
     2a8:	ldr	w1, [x19, #32]
     2ac:	cmp	w1, #0x1f
     2b0:	b.hi	31c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x31c>  // b.pmore
     2b4:	str	wzr, [x19, #32]
     2b8:	ubfiz	x0, x0, #5, #32
     2bc:	sub	x0, x0, #0x20
     2c0:	ldr	x1, [x19, #64]
     2c4:	add	x2, x1, x0
     2c8:	ldr	w0, [x1, x0]
     2cc:	str	w0, [x19, #36]
     2d0:	ldr	x27, [x19, #40]
     2d4:	ldr	x28, [x19, #48]
     2d8:	ldr	x3, [x2, #8]
     2dc:	str	x3, [x19, #40]
     2e0:	ldr	x3, [x2, #16]
     2e4:	str	x3, [x19, #48]
     2e8:	ldr	x3, [x2, #24]
     2ec:	str	x3, [x19, #56]
     2f0:	str	xzr, [x2, #8]
     2f4:	str	xzr, [x2, #16]
     2f8:	str	xzr, [x2, #24]
     2fc:	cmp	x27, x28
     300:	b.eq	3dc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3dc>  // b.none
     304:	mov	x26, x27
     308:	adrp	x0, 0 <__pthread_key_create>
     30c:	ldr	x1, [x0]
     310:	str	x1, [sp, #104]
     314:	str	x1, [sp, #112]
     318:	b	35c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x35c>
     31c:	sub	w1, w1, #0x20
     320:	ldr	x2, [x19, #24]
     324:	lsr	x1, x2, x1
     328:	str	x1, [x19, #24]
     32c:	mov	w1, #0x20                  	// #32
     330:	str	w1, [x19, #32]
     334:	b	2b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2b8>
     338:	ldaxr	w0, [x1]
     33c:	sub	w2, w0, #0x1
     340:	stlxr	w3, w2, [x1]
     344:	cbnz	w3, 338 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x338>
     348:	cmp	w0, #0x1
     34c:	b.eq	384 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x384>  // b.none
     350:	add	x26, x26, #0x10
     354:	cmp	x28, x26
     358:	b.eq	3dc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3dc>  // b.none
     35c:	ldr	x23, [x26, #8]
     360:	cbz	x23, 350 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x350>
     364:	ldr	x0, [sp, #104]
     368:	cbz	x0, 374 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x374>
     36c:	add	x1, x23, #0x8
     370:	b	338 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x338>
     374:	ldr	w0, [x23, #8]
     378:	sub	w1, w0, #0x1
     37c:	str	w1, [x23, #8]
     380:	b	348 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x348>
     384:	ldr	x0, [x23]
     388:	ldr	x1, [x0, #16]
     38c:	mov	x0, x23
     390:	blr	x1
     394:	ldr	x0, [sp, #112]
     398:	cbz	x0, 3cc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3cc>
     39c:	add	x1, x23, #0xc
     3a0:	ldaxr	w0, [x1]
     3a4:	sub	w2, w0, #0x1
     3a8:	stlxr	w3, w2, [x1]
     3ac:	cbnz	w3, 3a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3a0>
     3b0:	cmp	w0, #0x1
     3b4:	b.ne	350 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x350>  // b.any
     3b8:	ldr	x0, [x23]
     3bc:	ldr	x1, [x0, #24]
     3c0:	mov	x0, x23
     3c4:	blr	x1
     3c8:	b	350 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x350>
     3cc:	ldr	w0, [x23, #12]
     3d0:	sub	w1, w0, #0x1
     3d4:	str	w1, [x23, #12]
     3d8:	b	3b0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3b0>
     3dc:	cbz	x27, 3e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e8>
     3e0:	mov	x0, x27
     3e4:	bl	0 <_ZdlPv>
     3e8:	ldr	w0, [x19, #72]
     3ec:	mov	w1, w0
     3f0:	sub	x1, x1, #0x1
     3f4:	ldr	w2, [x19, #76]
     3f8:	cmp	x1, x2
     3fc:	b.hi	438 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x438>  // b.pmore
     400:	sub	w0, w0, #0x1
     404:	str	w0, [x19, #72]
     408:	ubfiz	x0, x0, #5, #32
     40c:	ldr	x28, [x19, #64]
     410:	add	x28, x28, x0
     414:	ldr	x26, [x28, #8]
     418:	ldr	x27, [x28, #16]
     41c:	cmp	x26, x27
     420:	b.eq	4fc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4fc>  // b.none
     424:	adrp	x0, 0 <__pthread_key_create>
     428:	ldr	x1, [x0]
     42c:	str	x1, [sp, #104]
     430:	str	x1, [sp, #112]
     434:	b	47c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x47c>
     438:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     43c:	add	x3, x3, #0x0
     440:	mov	w2, #0x43                  	// #67
     444:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     448:	add	x1, x1, #0x0
     44c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     450:	add	x0, x0, #0x0
     454:	bl	0 <__assert_fail>
     458:	ldaxr	w0, [x1]
     45c:	sub	w2, w0, #0x1
     460:	stlxr	w3, w2, [x1]
     464:	cbnz	w3, 458 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x458>
     468:	cmp	w0, #0x1
     46c:	b.eq	4a4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4a4>  // b.none
     470:	add	x26, x26, #0x10
     474:	cmp	x27, x26
     478:	b.eq	4fc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4fc>  // b.none
     47c:	ldr	x23, [x26, #8]
     480:	cbz	x23, 470 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x470>
     484:	ldr	x0, [sp, #104]
     488:	cbz	x0, 494 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x494>
     48c:	add	x1, x23, #0x8
     490:	b	458 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x458>
     494:	ldr	w0, [x23, #8]
     498:	sub	w1, w0, #0x1
     49c:	str	w1, [x23, #8]
     4a0:	b	468 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x468>
     4a4:	ldr	x0, [x23]
     4a8:	ldr	x1, [x0, #16]
     4ac:	mov	x0, x23
     4b0:	blr	x1
     4b4:	ldr	x0, [sp, #112]
     4b8:	cbz	x0, 4ec <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4ec>
     4bc:	add	x1, x23, #0xc
     4c0:	ldaxr	w0, [x1]
     4c4:	sub	w2, w0, #0x1
     4c8:	stlxr	w3, w2, [x1]
     4cc:	cbnz	w3, 4c0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4c0>
     4d0:	cmp	w0, #0x1
     4d4:	b.ne	470 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x470>  // b.any
     4d8:	ldr	x0, [x23]
     4dc:	ldr	x1, [x0, #24]
     4e0:	mov	x0, x23
     4e4:	blr	x1
     4e8:	b	470 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x470>
     4ec:	ldr	w0, [x23, #12]
     4f0:	sub	w1, w0, #0x1
     4f4:	str	w1, [x23, #12]
     4f8:	b	4d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4d0>
     4fc:	ldr	x0, [x28, #8]
     500:	cbz	x0, 278 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x278>
     504:	bl	0 <_ZdlPv>
     508:	b	278 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x278>
     50c:	add	x8, sp, #0x150
     510:	mov	w1, #0x8                   	// #8
     514:	mov	x0, x23
     518:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     51c:	ldrb	w0, [sp, #344]
     520:	and	w2, w0, #0x1
     524:	str	w2, [sp, #120]
     528:	ldrb	w1, [sp, #184]
     52c:	bfxil	w1, w2, #0, #1
     530:	orr	w1, w1, #0x2
     534:	strb	w1, [sp, #184]
     538:	and	w0, w0, #0xfffffffd
     53c:	strb	w0, [sp, #344]
     540:	cbnz	w2, 624 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x624>
     544:	ldr	x28, [sp, #336]
     548:	str	w28, [sp, #176]
     54c:	and	x0, x1, #0xff
     550:	and	w0, w0, #0xfffffffd
     554:	strb	w0, [sp, #184]
     558:	tbz	w28, #7, 694 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x694>
     55c:	and	w28, w28, #0x7f
     560:	str	wzr, [sp, #104]
     564:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     568:	ldr	x0, [x0]
     56c:	add	x0, x0, #0x10
     570:	str	x0, [sp, #128]
     574:	ldr	w27, [x19, #32]
     578:	cmp	w27, #0x7
     57c:	b.ls	6a8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6a8>  // b.plast
     580:	ldr	x0, [x19, #24]
     584:	and	x23, x0, #0xff
     588:	lsr	x0, x0, #8
     58c:	str	x0, [x19, #24]
     590:	sub	w27, w27, #0x8
     594:	str	w27, [x19, #32]
     598:	str	w23, [sp, #352]
     59c:	ldr	w26, [sp, #120]
     5a0:	ldrb	w0, [sp, #184]
     5a4:	tbnz	w0, #1, 964 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x964>
     5a8:	ldrb	w0, [sp, #184]
     5ac:	tbz	w0, #0, 5c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5c4>
     5b0:	ldr	x0, [sp, #176]
     5b4:	cbz	x0, 5c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5c4>
     5b8:	ldr	x1, [x0]
     5bc:	ldr	x1, [x1, #8]
     5c0:	blr	x1
     5c4:	ldrb	w0, [sp, #184]
     5c8:	bfxil	w0, w26, #0, #1
     5cc:	orr	w0, w0, #0x2
     5d0:	strb	w0, [sp, #184]
     5d4:	cbnz	w26, 96c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x96c>
     5d8:	ldr	w0, [sp, #104]
     5dc:	add	w2, w0, #0x7
     5e0:	str	w2, [sp, #104]
     5e4:	ldr	w0, [sp, #352]
     5e8:	str	w0, [sp, #176]
     5ec:	ldrb	w1, [sp, #184]
     5f0:	and	w1, w1, #0xfffffffd
     5f4:	strb	w1, [sp, #184]
     5f8:	and	w1, w0, #0x7f
     5fc:	lsl	w1, w1, w2
     600:	orr	w28, w28, w1
     604:	tbnz	w0, #7, 574 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x574>
     608:	ldrb	w0, [sp, #280]
     60c:	and	w0, w0, #0xfffffffe
     610:	strb	w0, [sp, #280]
     614:	str	w28, [sp, #272]
     618:	ldrb	w0, [sp, #184]
     61c:	tbz	w0, #0, 650 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x650>
     620:	b	63c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x63c>
     624:	ldrb	w0, [sp, #280]
     628:	orr	w0, w0, #0x1
     62c:	strb	w0, [sp, #280]
     630:	str	xzr, [sp, #176]
     634:	ldr	x0, [sp, #336]
     638:	str	x0, [sp, #272]
     63c:	ldr	x0, [sp, #176]
     640:	cbz	x0, 650 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x650>
     644:	ldr	x1, [x0]
     648:	ldr	x1, [x1, #8]
     64c:	blr	x1
     650:	ldrb	w0, [sp, #280]
     654:	tbnz	w0, #0, 99c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x99c>
     658:	ldrb	w0, [sp, #152]
     65c:	and	w0, w0, #0xfffffffe
     660:	strb	w0, [sp, #152]
     664:	mov	w0, #0x2                   	// #2
     668:	str	w0, [sp, #144]
     66c:	ldr	w0, [sp, #272]
     670:	str	w0, [sp, #148]
     674:	ldrb	w0, [sp, #168]
     678:	tbz	w0, #0, 110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
     67c:	ldr	x0, [sp, #160]
     680:	cbz	x0, 110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
     684:	ldr	x1, [x0]
     688:	ldr	x1, [x1, #8]
     68c:	blr	x1
     690:	b	110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
     694:	ldrb	w0, [sp, #280]
     698:	and	w0, w0, #0xfffffffe
     69c:	strb	w0, [sp, #280]
     6a0:	str	w28, [sp, #272]
     6a4:	b	650 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x650>
     6a8:	str	xzr, [sp, #112]
     6ac:	cbz	w27, 6b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6b8>
     6b0:	ldr	x0, [x19, #24]
     6b4:	str	x0, [sp, #112]
     6b8:	ldr	x26, [x19, #16]
     6bc:	ldr	x23, [x19, #8]
     6c0:	cmp	x26, x23
     6c4:	b.cs	744 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x744>  // b.hs, b.nlast
     6c8:	ldr	x0, [x19]
     6cc:	add	x3, x0, x26
     6d0:	add	x1, x26, #0x8
     6d4:	cmp	x23, x1
     6d8:	b.cc	830 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x830>  // b.lo, b.ul, b.last
     6dc:	ldr	x0, [x0, x26]
     6e0:	str	x0, [x19, #24]
     6e4:	mov	w23, #0x8                   	// #8
     6e8:	add	x26, x26, w23, uxtw
     6ec:	str	x26, [x19, #16]
     6f0:	lsl	w23, w23, #3
     6f4:	str	w23, [x19, #32]
     6f8:	mov	w23, #0x8                   	// #8
     6fc:	sub	w23, w23, w27
     700:	ldr	w26, [x19, #32]
     704:	cmp	w23, w26
     708:	b.hi	878 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x878>  // b.pmore
     70c:	ldr	x1, [x19, #24]
     710:	lsr	x23, x1, x23
     714:	str	x23, [x19, #24]
     718:	add	w0, w27, w26
     71c:	sub	w0, w0, #0x8
     720:	str	w0, [x19, #32]
     724:	add	w0, w27, #0x38
     728:	mov	x23, #0xffffffffffffffff    	// #-1
     72c:	lsr	x23, x23, x0
     730:	and	x23, x23, x1
     734:	lsl	x23, x23, x27
     738:	ldr	x0, [sp, #112]
     73c:	orr	x23, x23, x0
     740:	b	598 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x598>
     744:	bl	0 <_ZNSt3_V216generic_categoryEv>
     748:	mov	w1, #0x5                   	// #5
     74c:	str	w1, [sp, #192]
     750:	str	x0, [sp, #200]
     754:	add	x1, sp, #0xd0
     758:	add	x0, sp, #0xe0
     75c:	str	x0, [sp, #208]
     760:	str	xzr, [sp, #216]
     764:	strb	wzr, [sp, #224]
     768:	mov	w0, #0x1                   	// #1
     76c:	str	w0, [sp, #304]
     770:	str	xzr, [sp, #296]
     774:	str	xzr, [sp, #288]
     778:	str	xzr, [sp, #280]
     77c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     780:	ldr	x0, [x0]
     784:	add	x0, x0, #0x10
     788:	str	x0, [sp, #272]
     78c:	str	x1, [sp, #312]
     790:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     794:	add	x0, x0, #0x0
     798:	str	x0, [sp, #248]
     79c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     7a0:	ldr	x0, [x0]
     7a4:	add	x0, x0, #0x10
     7a8:	str	x0, [sp, #240]
     7ac:	str	x23, [sp, #256]
     7b0:	str	x26, [sp, #264]
     7b4:	mov	x1, x22
     7b8:	add	x0, sp, #0x110
     7bc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     7c0:	ldr	x1, [sp, #296]
     7c4:	ldr	x0, [sp, #280]
     7c8:	cmp	x1, x0
     7cc:	b.eq	7d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x7d8>  // b.none
     7d0:	add	x0, sp, #0x110
     7d4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     7d8:	mov	x8, x22
     7dc:	add	x1, sp, #0xc0
     7e0:	ldr	x0, [sp, #312]
     7e4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     7e8:	add	x0, sp, #0x110
     7ec:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     7f0:	ldr	x0, [sp, #208]
     7f4:	add	x1, sp, #0xe0
     7f8:	cmp	x0, x1
     7fc:	b.eq	804 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x804>  // b.none
     800:	bl	0 <_ZdlPv>
     804:	ldr	x0, [sp, #240]
     808:	ands	x0, x0, #0xfffffffffffffffe
     80c:	cset	x1, ne  // ne = any
     810:	orr	x1, x1, x0
     814:	str	x1, [sp, #240]
     818:	ands	x0, x1, #0xfffffffffffffffe
     81c:	b.eq	86c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x86c>  // b.none
     820:	str	x0, [sp, #352]
     824:	mov	w26, #0x1                   	// #1
     828:	mov	x23, #0x0                   	// #0
     82c:	b	5a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5a0>
     830:	str	xzr, [x19, #24]
     834:	subs	w23, w23, w26
     838:	b.eq	6e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6e8>  // b.none
     83c:	mov	x0, #0x0                   	// #0
     840:	ldrb	w1, [x3, x0]
     844:	lsl	w2, w0, #3
     848:	lsl	x2, x1, x2
     84c:	ldr	x1, [x19, #24]
     850:	orr	x1, x1, x2
     854:	str	x1, [x19, #24]
     858:	add	x0, x0, #0x1
     85c:	cmp	w23, w0
     860:	b.ne	840 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x840>  // b.any
     864:	mov	w23, w0
     868:	b	6e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6e8>
     86c:	tbz	w1, #0, 6f8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6f8>
     870:	add	x0, sp, #0xf0
     874:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     878:	bl	0 <_ZNSt3_V216generic_categoryEv>
     87c:	mov	w1, #0x5                   	// #5
     880:	str	w1, [sp, #208]
     884:	str	x0, [sp, #216]
     888:	ldr	x0, [sp, #96]
     88c:	str	x0, [sp, #240]
     890:	str	xzr, [sp, #248]
     894:	strb	wzr, [sp, #256]
     898:	mov	w0, #0x1                   	// #1
     89c:	str	w0, [sp, #304]
     8a0:	str	xzr, [sp, #296]
     8a4:	str	xzr, [sp, #288]
     8a8:	str	xzr, [sp, #280]
     8ac:	ldr	x0, [sp, #128]
     8b0:	str	x0, [sp, #272]
     8b4:	str	x22, [sp, #312]
     8b8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     8bc:	add	x0, x0, #0x0
     8c0:	str	x0, [sp, #384]
     8c4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     8c8:	ldr	x0, [x0]
     8cc:	add	x0, x0, #0x10
     8d0:	str	x0, [sp, #376]
     8d4:	str	w23, [sp, #392]
     8d8:	str	w26, [sp, #396]
     8dc:	add	x1, sp, #0x178
     8e0:	add	x0, sp, #0x110
     8e4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     8e8:	ldr	x1, [sp, #296]
     8ec:	ldr	x0, [sp, #280]
     8f0:	cmp	x1, x0
     8f4:	b.eq	900 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x900>  // b.none
     8f8:	add	x0, sp, #0x110
     8fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     900:	add	x8, sp, #0x170
     904:	add	x1, sp, #0xd0
     908:	ldr	x0, [sp, #312]
     90c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     910:	add	x0, sp, #0x110
     914:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     918:	ldr	x0, [sp, #240]
     91c:	cmp	x0, x24
     920:	b.eq	928 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x928>  // b.none
     924:	bl	0 <_ZdlPv>
     928:	ldr	x0, [sp, #368]
     92c:	ands	x1, x0, #0xfffffffffffffffe
     930:	cset	x0, ne  // ne = any
     934:	orr	x0, x0, x1
     938:	str	x0, [sp, #368]
     93c:	ands	x0, x0, #0xfffffffffffffffe
     940:	b.ne	820 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x820>  // b.any
     944:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     948:	add	x3, x3, #0x0
     94c:	mov	w2, #0x1ce                 	// #462
     950:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     954:	add	x1, x1, #0x0
     958:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     95c:	add	x0, x0, #0x0
     960:	bl	0 <__assert_fail>
     964:	add	x0, sp, #0xb0
     968:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     96c:	ldr	x26, [sp, #352]
     970:	cbz	x23, 984 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x984>
     974:	ldr	x0, [x23]
     978:	ldr	x1, [x0, #8]
     97c:	mov	x0, x23
     980:	blr	x1
     984:	ldrb	w0, [sp, #280]
     988:	orr	w0, w0, #0x1
     98c:	strb	w0, [sp, #280]
     990:	str	xzr, [sp, #176]
     994:	str	x26, [sp, #272]
     998:	b	63c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x63c>
     99c:	ldr	x0, [sp, #272]
     9a0:	ldrb	w1, [sp, #152]
     9a4:	orr	w1, w1, #0x1
     9a8:	strb	w1, [sp, #152]
     9ac:	ands	x0, x0, #0xfffffffffffffffe
     9b0:	cbz	x0, 9bc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9bc>
     9b4:	str	x0, [sp, #144]
     9b8:	b	674 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x674>
     9bc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     9c0:	add	x3, x3, #0x0
     9c4:	mov	w2, #0x1ce                 	// #462
     9c8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     9cc:	add	x1, x1, #0x0
     9d0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     9d4:	add	x0, x0, #0x0
     9d8:	bl	0 <__assert_fail>
     9dc:	tbz	w0, #0, 44 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x44>
     9e0:	add	x0, sp, #0x110
     9e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     9e8:	ldrb	w0, [sp, #152]
     9ec:	and	w0, w0, #0xfffffffe
     9f0:	strb	w0, [sp, #152]
     9f4:	mov	w0, #0x3                   	// #3
     9f8:	str	w0, [sp, #144]
     9fc:	str	w2, [sp, #148]
     a00:	b	110 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x110>
     a04:	ldrb	w0, [x21, #8]
     a08:	orr	w0, w0, #0x3
     a0c:	strb	w0, [x21, #8]
     a10:	ldr	x0, [sp, #144]
     a14:	str	x0, [x21]
     a18:	mov	x0, x21
     a1c:	ldp	x19, x20, [sp, #16]
     a20:	ldp	x21, x22, [sp, #32]
     a24:	ldp	x23, x24, [sp, #48]
     a28:	ldp	x25, x26, [sp, #64]
     a2c:	ldp	x27, x28, [sp, #80]
     a30:	ldp	x29, x30, [sp], #496
     a34:	ret
     a38:	ldrb	w1, [x21, #8]
     a3c:	and	w1, w1, #0xfffffffe
     a40:	orr	w1, w1, #0x2
     a44:	strb	w1, [x21, #8]
     a48:	str	w0, [x21]
     a4c:	ldr	w0, [sp, #148]
     a50:	str	w0, [x21, #4]
     a54:	b	a18 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa18>
     a58:	str	xzr, [sp, #104]
     a5c:	cbz	w23, a68 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa68>
     a60:	ldr	x0, [x19, #24]
     a64:	str	x0, [sp, #104]
     a68:	ldr	x27, [x19, #16]
     a6c:	ldr	x26, [x19, #8]
     a70:	cmp	x27, x26
     a74:	b.cs	af4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xaf4>  // b.hs, b.nlast
     a78:	ldr	x0, [x19]
     a7c:	add	x3, x0, x27
     a80:	add	x1, x27, #0x8
     a84:	cmp	x26, x1
     a88:	b.cc	c34 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc34>  // b.lo, b.ul, b.last
     a8c:	ldr	x0, [x0, x27]
     a90:	str	x0, [x19, #24]
     a94:	mov	w1, #0x8                   	// #8
     a98:	add	x27, x27, w1, uxtw
     a9c:	str	x27, [x19, #16]
     aa0:	lsl	w1, w1, #3
     aa4:	str	w1, [x19, #32]
     aa8:	mov	w26, #0x4                   	// #4
     aac:	sub	w26, w26, w23
     ab0:	ldr	w27, [x19, #32]
     ab4:	cmp	w26, w27
     ab8:	b.hi	c84 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc84>  // b.pmore
     abc:	ldr	x1, [x19, #24]
     ac0:	lsr	x26, x1, x26
     ac4:	str	x26, [x19, #24]
     ac8:	add	w0, w23, w27
     acc:	sub	w0, w0, #0x4
     ad0:	str	w0, [x19, #32]
     ad4:	add	w0, w23, #0x3c
     ad8:	mov	x27, #0xffffffffffffffff    	// #-1
     adc:	lsr	x27, x27, x0
     ae0:	and	x27, x27, x1
     ae4:	lsl	x27, x27, x23
     ae8:	ldr	x0, [sp, #104]
     aec:	orr	x27, x27, x0
     af0:	b	14c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x14c>
     af4:	bl	0 <_ZNSt3_V216generic_categoryEv>
     af8:	mov	w1, #0x5                   	// #5
     afc:	str	w1, [sp, #192]
     b00:	str	x0, [sp, #200]
     b04:	add	x1, sp, #0xd0
     b08:	add	x0, sp, #0xe0
     b0c:	str	x0, [sp, #208]
     b10:	str	xzr, [sp, #216]
     b14:	strb	wzr, [sp, #224]
     b18:	mov	w0, #0x1                   	// #1
     b1c:	str	w0, [sp, #304]
     b20:	str	xzr, [sp, #296]
     b24:	str	xzr, [sp, #288]
     b28:	str	xzr, [sp, #280]
     b2c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     b30:	ldr	x0, [x0]
     b34:	add	x0, x0, #0x10
     b38:	str	x0, [sp, #272]
     b3c:	str	x1, [sp, #312]
     b40:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     b44:	add	x0, x0, #0x0
     b48:	str	x0, [sp, #248]
     b4c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     b50:	ldr	x0, [x0]
     b54:	add	x0, x0, #0x10
     b58:	str	x0, [sp, #240]
     b5c:	str	x26, [sp, #256]
     b60:	str	x27, [sp, #264]
     b64:	mov	x1, x22
     b68:	add	x0, sp, #0x110
     b6c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     b70:	ldr	x1, [sp, #296]
     b74:	ldr	x0, [sp, #280]
     b78:	cmp	x1, x0
     b7c:	b.eq	b88 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb88>  // b.none
     b80:	add	x0, sp, #0x110
     b84:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     b88:	mov	x8, x22
     b8c:	add	x1, sp, #0xc0
     b90:	ldr	x0, [sp, #312]
     b94:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     b98:	add	x0, sp, #0x110
     b9c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     ba0:	ldr	x0, [sp, #208]
     ba4:	add	x1, sp, #0xe0
     ba8:	cmp	x0, x1
     bac:	b.eq	bb4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbb4>  // b.none
     bb0:	bl	0 <_ZdlPv>
     bb4:	ldr	x0, [sp, #240]
     bb8:	ands	x1, x0, #0xfffffffffffffffe
     bbc:	cset	x0, ne  // ne = any
     bc0:	orr	x0, x0, x1
     bc4:	str	x0, [sp, #240]
     bc8:	ands	x1, x0, #0xfffffffffffffffe
     bcc:	b.eq	c78 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc78>  // b.none
     bd0:	ldrb	w0, [sp, #184]
     bd4:	orr	w0, w0, #0x1
     bd8:	strb	w0, [sp, #184]
     bdc:	str	xzr, [sp, #176]
     be0:	str	x1, [sp, #272]
     be4:	mov	w28, #0x1                   	// #1
     be8:	ldr	x0, [sp, #176]
     bec:	cbz	x0, bfc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbfc>
     bf0:	ldr	x1, [x0]
     bf4:	ldr	x1, [x1, #8]
     bf8:	blr	x1
     bfc:	cbz	w28, 108c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x108c>
     c00:	ldr	x0, [sp, #272]
     c04:	orr	x0, x0, #0x1
     c08:	str	x0, [sp, #176]
     c0c:	ldr	x0, [sp, #176]
     c10:	ands	x1, x0, #0xfffffffffffffffe
     c14:	cset	x0, ne  // ne = any
     c18:	orr	x0, x0, x1
     c1c:	str	x0, [sp, #176]
     c20:	ands	x1, x0, #0xfffffffffffffffe
     c24:	b.ne	12d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x12d0>  // b.any
     c28:	tbz	w0, #0, 38 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x38>
     c2c:	add	x0, sp, #0xb0
     c30:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     c34:	str	xzr, [x19, #24]
     c38:	subs	w26, w26, w27
     c3c:	b.eq	c70 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc70>  // b.none
     c40:	mov	x0, #0x0                   	// #0
     c44:	ldrb	w1, [x3, x0]
     c48:	lsl	w2, w0, #3
     c4c:	lsl	x2, x1, x2
     c50:	ldr	x1, [x19, #24]
     c54:	orr	x1, x1, x2
     c58:	str	x1, [x19, #24]
     c5c:	add	x0, x0, #0x1
     c60:	mov	w1, w0
     c64:	cmp	w26, w0
     c68:	b.ne	c44 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc44>  // b.any
     c6c:	b	a98 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa98>
     c70:	mov	w1, w26
     c74:	b	a98 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa98>
     c78:	tbz	w0, #0, aa8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xaa8>
     c7c:	add	x0, sp, #0xf0
     c80:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     c84:	bl	0 <_ZNSt3_V216generic_categoryEv>
     c88:	mov	w1, #0x5                   	// #5
     c8c:	str	w1, [sp, #208]
     c90:	str	x0, [sp, #216]
     c94:	ldr	x0, [sp, #96]
     c98:	str	x0, [sp, #240]
     c9c:	str	xzr, [sp, #248]
     ca0:	strb	wzr, [sp, #256]
     ca4:	mov	w0, #0x1                   	// #1
     ca8:	str	w0, [sp, #304]
     cac:	str	xzr, [sp, #296]
     cb0:	str	xzr, [sp, #288]
     cb4:	str	xzr, [sp, #280]
     cb8:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     cbc:	ldr	x0, [x0]
     cc0:	add	x0, x0, #0x10
     cc4:	str	x0, [sp, #272]
     cc8:	str	x22, [sp, #312]
     ccc:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     cd0:	add	x0, x0, #0x0
     cd4:	str	x0, [sp, #448]
     cd8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     cdc:	ldr	x0, [x0]
     ce0:	add	x0, x0, #0x10
     ce4:	str	x0, [sp, #440]
     ce8:	str	w26, [sp, #456]
     cec:	str	w27, [sp, #460]
     cf0:	add	x1, sp, #0x1b8
     cf4:	add	x0, sp, #0x110
     cf8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     cfc:	ldr	x1, [sp, #296]
     d00:	ldr	x0, [sp, #280]
     d04:	cmp	x1, x0
     d08:	b.eq	d14 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd14>  // b.none
     d0c:	add	x0, sp, #0x110
     d10:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     d14:	add	x8, sp, #0x1b0
     d18:	add	x1, sp, #0xd0
     d1c:	ldr	x0, [sp, #312]
     d20:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     d24:	add	x0, sp, #0x110
     d28:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     d2c:	ldr	x0, [sp, #240]
     d30:	cmp	x0, x24
     d34:	b.eq	d3c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd3c>  // b.none
     d38:	bl	0 <_ZdlPv>
     d3c:	ldr	x0, [sp, #432]
     d40:	ands	x0, x0, #0xfffffffffffffffe
     d44:	cset	x1, ne  // ne = any
     d48:	orr	x1, x1, x0
     d4c:	str	x1, [sp, #432]
     d50:	ands	x1, x1, #0xfffffffffffffffe
     d54:	b.ne	bd0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbd0>  // b.any
     d58:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     d5c:	add	x3, x3, #0x0
     d60:	mov	w2, #0x1ce                 	// #462
     d64:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     d68:	add	x1, x1, #0x0
     d6c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     d70:	add	x0, x0, #0x0
     d74:	bl	0 <__assert_fail>
     d78:	str	w27, [sp, #272]
     d7c:	b	bfc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbfc>
     d80:	str	xzr, [sp, #120]
     d84:	cbz	w23, d90 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd90>
     d88:	ldr	x0, [x19, #24]
     d8c:	str	x0, [sp, #120]
     d90:	ldr	x26, [x19, #16]
     d94:	ldr	x0, [x19, #8]
     d98:	str	x0, [sp, #112]
     d9c:	cmp	x26, x0
     da0:	b.cs	e2c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe2c>  // b.hs, b.nlast
     da4:	ldr	x0, [x19]
     da8:	add	x4, x0, x26
     dac:	add	x1, x26, #0x8
     db0:	ldr	x2, [sp, #112]
     db4:	cmp	x2, x1
     db8:	b.cc	f1c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf1c>  // b.lo, b.ul, b.last
     dbc:	ldr	x0, [x0, x26]
     dc0:	str	x0, [x19, #24]
     dc4:	mov	w1, #0x8                   	// #8
     dc8:	add	x26, x26, w1, uxtw
     dcc:	str	x26, [x19, #16]
     dd0:	lsl	w1, w1, #3
     dd4:	str	w1, [x19, #32]
     dd8:	mov	w26, #0x4                   	// #4
     ddc:	sub	w26, w26, w23
     de0:	ldr	w0, [x19, #32]
     de4:	str	w0, [sp, #112]
     de8:	cmp	w26, w0
     dec:	b.hi	f70 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf70>  // b.pmore
     df0:	ldr	x1, [x19, #24]
     df4:	lsr	x26, x1, x26
     df8:	str	x26, [x19, #24]
     dfc:	ldr	w0, [sp, #112]
     e00:	add	w0, w23, w0
     e04:	sub	w0, w0, #0x4
     e08:	str	w0, [x19, #32]
     e0c:	add	w0, w23, #0x3c
     e10:	mov	x26, #0xffffffffffffffff    	// #-1
     e14:	lsr	x26, x26, x0
     e18:	and	x26, x26, x1
     e1c:	lsl	x23, x26, x23
     e20:	ldr	x0, [sp, #120]
     e24:	orr	x26, x23, x0
     e28:	b	19c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x19c>
     e2c:	bl	0 <_ZNSt3_V216generic_categoryEv>
     e30:	mov	w1, #0x5                   	// #5
     e34:	str	w1, [sp, #192]
     e38:	str	x0, [sp, #200]
     e3c:	add	x1, sp, #0xd0
     e40:	add	x0, sp, #0xe0
     e44:	str	x0, [sp, #208]
     e48:	str	xzr, [sp, #216]
     e4c:	strb	wzr, [sp, #224]
     e50:	mov	w0, #0x1                   	// #1
     e54:	str	w0, [sp, #304]
     e58:	str	xzr, [sp, #296]
     e5c:	str	xzr, [sp, #288]
     e60:	str	xzr, [sp, #280]
     e64:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
     e68:	ldr	x0, [x0]
     e6c:	add	x0, x0, #0x10
     e70:	str	x0, [sp, #272]
     e74:	str	x1, [sp, #312]
     e78:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     e7c:	add	x0, x0, #0x0
     e80:	str	x0, [sp, #248]
     e84:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     e88:	ldr	x0, [x0]
     e8c:	add	x0, x0, #0x10
     e90:	str	x0, [sp, #240]
     e94:	ldr	x0, [sp, #112]
     e98:	str	x0, [sp, #256]
     e9c:	str	x26, [sp, #264]
     ea0:	mov	x1, x22
     ea4:	add	x0, sp, #0x110
     ea8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     eac:	ldr	x1, [sp, #296]
     eb0:	ldr	x0, [sp, #280]
     eb4:	cmp	x1, x0
     eb8:	b.eq	ec4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xec4>  // b.none
     ebc:	add	x0, sp, #0x110
     ec0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     ec4:	mov	x8, x22
     ec8:	add	x1, sp, #0xc0
     ecc:	ldr	x0, [sp, #312]
     ed0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     ed4:	add	x0, sp, #0x110
     ed8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     edc:	ldr	x0, [sp, #208]
     ee0:	add	x1, sp, #0xe0
     ee4:	cmp	x0, x1
     ee8:	b.eq	ef0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xef0>  // b.none
     eec:	bl	0 <_ZdlPv>
     ef0:	ldr	x0, [sp, #240]
     ef4:	ands	x0, x0, #0xfffffffffffffffe
     ef8:	cset	x1, ne  // ne = any
     efc:	orr	x1, x1, x0
     f00:	str	x1, [sp, #240]
     f04:	ands	x0, x1, #0xfffffffffffffffe
     f08:	b.eq	f64 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf64>  // b.none
     f0c:	str	x0, [sp, #416]
     f10:	mov	w23, #0x1                   	// #1
     f14:	mov	x26, #0x0                   	// #0
     f18:	b	1a4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1a4>
     f1c:	str	xzr, [x19, #24]
     f20:	ldr	w0, [sp, #112]
     f24:	subs	w3, w0, w26
     f28:	b.eq	f5c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf5c>  // b.none
     f2c:	mov	x0, #0x0                   	// #0
     f30:	ldrb	w1, [x4, x0]
     f34:	lsl	w2, w0, #3
     f38:	lsl	x2, x1, x2
     f3c:	ldr	x1, [x19, #24]
     f40:	orr	x1, x1, x2
     f44:	str	x1, [x19, #24]
     f48:	add	x0, x0, #0x1
     f4c:	mov	w1, w0
     f50:	cmp	w3, w0
     f54:	b.ne	f30 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf30>  // b.any
     f58:	b	dc8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xdc8>
     f5c:	mov	w1, w3
     f60:	b	dc8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xdc8>
     f64:	tbz	w1, #0, dd8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xdd8>
     f68:	add	x0, sp, #0xf0
     f6c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     f70:	bl	0 <_ZNSt3_V216generic_categoryEv>
     f74:	mov	w1, #0x5                   	// #5
     f78:	str	w1, [sp, #208]
     f7c:	str	x0, [sp, #216]
     f80:	ldr	x0, [sp, #96]
     f84:	str	x0, [sp, #240]
     f88:	str	xzr, [sp, #248]
     f8c:	strb	wzr, [sp, #256]
     f90:	mov	w0, #0x1                   	// #1
     f94:	str	w0, [sp, #304]
     f98:	str	xzr, [sp, #296]
     f9c:	str	xzr, [sp, #288]
     fa0:	str	xzr, [sp, #280]
     fa4:	ldr	x0, [sp, #128]
     fa8:	str	x0, [sp, #272]
     fac:	str	x22, [sp, #312]
     fb0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     fb4:	add	x0, x0, #0x0
     fb8:	str	x0, [sp, #480]
     fbc:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
     fc0:	ldr	x0, [x0]
     fc4:	add	x0, x0, #0x10
     fc8:	str	x0, [sp, #472]
     fcc:	str	w26, [sp, #488]
     fd0:	ldr	w0, [sp, #112]
     fd4:	str	w0, [sp, #492]
     fd8:	add	x1, sp, #0x1d8
     fdc:	add	x0, sp, #0x110
     fe0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     fe4:	ldr	x1, [sp, #296]
     fe8:	ldr	x0, [sp, #280]
     fec:	cmp	x1, x0
     ff0:	b.eq	ffc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xffc>  // b.none
     ff4:	add	x0, sp, #0x110
     ff8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     ffc:	add	x8, sp, #0x1d0
    1000:	add	x1, sp, #0xd0
    1004:	ldr	x0, [sp, #312]
    1008:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    100c:	add	x0, sp, #0x110
    1010:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1014:	ldr	x0, [sp, #240]
    1018:	cmp	x0, x24
    101c:	b.eq	1024 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1024>  // b.none
    1020:	bl	0 <_ZdlPv>
    1024:	ldr	x0, [sp, #464]
    1028:	ands	x1, x0, #0xfffffffffffffffe
    102c:	cset	x0, ne  // ne = any
    1030:	orr	x0, x0, x1
    1034:	str	x0, [sp, #464]
    1038:	ands	x0, x0, #0xfffffffffffffffe
    103c:	b.ne	f0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0c>  // b.any
    1040:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1044:	add	x3, x3, #0x0
    1048:	mov	w2, #0x1ce                 	// #462
    104c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1050:	add	x1, x1, #0x0
    1054:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1058:	add	x0, x0, #0x0
    105c:	bl	0 <__assert_fail>
    1060:	add	x0, sp, #0xb0
    1064:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1068:	ldr	x23, [sp, #416]
    106c:	cbz	x26, 1080 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1080>
    1070:	ldr	x0, [x26]
    1074:	ldr	x1, [x0, #8]
    1078:	mov	x0, x26
    107c:	blr	x1
    1080:	str	xzr, [sp, #176]
    1084:	str	x23, [sp, #272]
    1088:	b	be4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbe4>
    108c:	ldr	w0, [x19, #32]
    1090:	cmp	w0, #0x1f
    1094:	b.hi	11b0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x11b0>  // b.pmore
    1098:	str	wzr, [x19, #32]
    109c:	add	x8, sp, #0x190
    10a0:	mov	w1, #0x20                  	// #32
    10a4:	mov	x0, x19
    10a8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    10ac:	ldrb	w0, [sp, #408]
    10b0:	and	w1, w0, #0xfffffffd
    10b4:	strb	w1, [sp, #408]
    10b8:	tbnz	w0, #0, 11cc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x11cc>
    10bc:	ldr	x1, [sp, #400]
    10c0:	ldr	x0, [x19, #16]
    10c4:	ldr	w26, [x19, #32]
    10c8:	cbz	w26, 11dc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x11dc>
    10cc:	lsl	x0, x0, #3
    10d0:	sub	x26, x0, w26, uxtw
    10d4:	ubfiz	x1, x1, #5, #32
    10d8:	add	x23, x1, x26
    10dc:	lsr	x0, x23, #3
    10e0:	ldr	x2, [x19, #8]
    10e4:	cmp	x2, x23, lsr #3
    10e8:	b.cs	1218 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1218>  // b.hs, b.nlast
    10ec:	bl	0 <_ZNSt3_V216generic_categoryEv>
    10f0:	mov	w1, #0x54                  	// #84
    10f4:	str	w1, [sp, #192]
    10f8:	str	x0, [sp, #200]
    10fc:	add	x1, sp, #0xd0
    1100:	add	x0, sp, #0xe0
    1104:	str	x0, [sp, #208]
    1108:	str	xzr, [sp, #216]
    110c:	strb	wzr, [sp, #224]
    1110:	mov	w0, #0x1                   	// #1
    1114:	str	w0, [sp, #304]
    1118:	str	xzr, [sp, #296]
    111c:	str	xzr, [sp, #288]
    1120:	str	xzr, [sp, #280]
    1124:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1128:	ldr	x0, [x0]
    112c:	add	x0, x0, #0x10
    1130:	str	x0, [sp, #272]
    1134:	str	x1, [sp, #312]
    1138:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    113c:	add	x0, x0, #0x0
    1140:	str	x0, [sp, #248]
    1144:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1148:	ldr	x0, [x0]
    114c:	add	x0, x0, #0x10
    1150:	str	x0, [sp, #240]
    1154:	str	x26, [sp, #256]
    1158:	str	x23, [sp, #264]
    115c:	mov	x1, x22
    1160:	add	x0, sp, #0x110
    1164:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1168:	ldr	x1, [sp, #296]
    116c:	ldr	x0, [sp, #280]
    1170:	cmp	x1, x0
    1174:	b.eq	1180 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1180>  // b.none
    1178:	add	x0, sp, #0x110
    117c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1180:	add	x8, sp, #0xb0
    1184:	add	x1, sp, #0xc0
    1188:	ldr	x0, [sp, #312]
    118c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1190:	add	x0, sp, #0x110
    1194:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    1198:	ldr	x0, [sp, #208]
    119c:	add	x1, sp, #0xe0
    11a0:	cmp	x0, x1
    11a4:	b.eq	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>  // b.none
    11a8:	bl	0 <_ZdlPv>
    11ac:	b	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>
    11b0:	sub	w0, w0, #0x20
    11b4:	ldr	x1, [x19, #24]
    11b8:	lsr	x0, x1, x0
    11bc:	str	x0, [x19, #24]
    11c0:	mov	w0, #0x20                  	// #32
    11c4:	str	w0, [x19, #32]
    11c8:	b	109c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x109c>
    11cc:	ldr	x0, [sp, #400]
    11d0:	orr	x0, x0, #0x1
    11d4:	str	x0, [sp, #176]
    11d8:	b	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>
    11dc:	ldr	x2, [x19, #8]
    11e0:	cmp	x0, x2
    11e4:	b.cc	10cc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x10cc>  // b.lo, b.ul, b.last
    11e8:	bl	0 <_ZNSt3_V216generic_categoryEv>
    11ec:	mov	x1, x0
    11f0:	mov	x0, #0x54                  	// #84
    11f4:	ldr	x2, [sp, #136]
    11f8:	bfxil	x2, x0, #0, #32
    11fc:	mov	x0, x2
    1200:	str	x2, [sp, #136]
    1204:	add	x8, sp, #0xb0
    1208:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    120c:	add	x2, x2, #0x0
    1210:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    1214:	b	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>
    1218:	and	x0, x0, #0xfffffffffffffff8
    121c:	and	w1, w23, #0x3f
    1220:	cmp	x2, x0
    1224:	b.cc	1278 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1278>  // b.lo, b.ul, b.last
    1228:	str	x0, [x19, #16]
    122c:	str	wzr, [x19, #32]
    1230:	cbz	w1, 12c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x12c4>
    1234:	add	x8, sp, #0x110
    1238:	mov	x0, x19
    123c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1240:	ldrb	w0, [sp, #280]
    1244:	tbnz	w0, #0, 1298 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1298>
    1248:	mov	x0, #0x1                   	// #1
    124c:	str	x0, [sp, #240]
    1250:	ldr	x0, [sp, #240]
    1254:	ands	x1, x0, #0xfffffffffffffffe
    1258:	cset	x0, ne  // ne = any
    125c:	orr	x0, x0, x1
    1260:	str	x0, [sp, #240]
    1264:	ands	x1, x0, #0xfffffffffffffffe
    1268:	b.eq	12b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x12b8>  // b.none
    126c:	orr	x0, x1, #0x1
    1270:	str	x0, [sp, #176]
    1274:	b	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>
    1278:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    127c:	add	x3, x3, #0x0
    1280:	mov	w2, #0x85                  	// #133
    1284:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1288:	add	x1, x1, #0x0
    128c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
    1290:	add	x0, x0, #0x0
    1294:	bl	0 <__assert_fail>
    1298:	ldrb	w0, [sp, #280]
    129c:	and	w0, w0, #0xfffffffd
    12a0:	strb	w0, [sp, #280]
    12a4:	ldr	x0, [sp, #272]
    12a8:	str	xzr, [sp, #272]
    12ac:	orr	x0, x0, #0x1
    12b0:	str	x0, [sp, #240]
    12b4:	b	1250 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1250>
    12b8:	tbz	w0, #0, 12c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x12c4>
    12bc:	add	x0, sp, #0xf0
    12c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    12c4:	mov	x0, #0x1                   	// #1
    12c8:	str	x0, [sp, #176]
    12cc:	b	c0c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc0c>
    12d0:	ldrb	w0, [x21, #8]
    12d4:	orr	w0, w0, #0x3
    12d8:	strb	w0, [x21, #8]
    12dc:	str	x1, [x21]
    12e0:	b	a18 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa18>
    12e4:	ldrb	w0, [sp, #152]
    12e8:	and	w0, w0, #0xfffffffe
    12ec:	strb	w0, [sp, #152]
    12f0:	str	wzr, [sp, #144]
    12f4:	str	wzr, [sp, #148]
    12f8:	b	674 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x674>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x23, x0
  20:	mov	x19, x1
  24:	mov	x25, x1
  28:	ldr	x20, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x20, x24
  34:	asr	x0, x0, #3
  38:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  3c:	movk	x1, #0xcccd
  40:	mul	x0, x0, x1
  44:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  48:	movk	x1, #0x333, lsl #48
  4c:	cmp	x0, x1
  50:	b.eq	ec <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xec>  // b.none
  54:	mov	x26, x2
  58:	cmp	x0, #0x0
  5c:	csinc	x1, x0, xzr, ne  // ne = any
  60:	adds	x0, x1, x0
  64:	b.cs	260 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x260>  // b.hs, b.nlast
  68:	mov	x21, #0x3333333333333333    	// #3689348814741910323
  6c:	movk	x21, #0x333, lsl #48
  70:	cmp	x0, x21
  74:	csel	x21, x0, x21, ls  // ls = plast
  78:	sub	x27, x19, x24
  7c:	mov	x22, #0x0                   	// #0
  80:	cbz	x0, 94 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x94>
  84:	add	x0, x21, x21, lsl #2
  88:	lsl	x0, x0, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x22, x0
  94:	add	x0, x22, x27
  98:	ldr	w1, [x26]
  9c:	str	w1, [x22, x27]
  a0:	add	x1, x0, #0x18
  a4:	str	x1, [x0, #8]
  a8:	ldr	x1, [x26, #8]
  ac:	add	x2, x26, #0x18
  b0:	cmp	x1, x2
  b4:	b.eq	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xf8>  // b.none
  b8:	str	x1, [x0, #8]
  bc:	ldr	x1, [x26, #24]
  c0:	str	x1, [x0, #24]
  c4:	ldr	x3, [x26, #16]
  c8:	str	x3, [x0, #16]
  cc:	str	x2, [x26, #8]
  d0:	str	xzr, [x26, #16]
  d4:	strb	wzr, [x26, #24]
  d8:	cmp	x19, x24
  dc:	b.eq	19c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x19c>  // b.none
  e0:	mov	x3, x22
  e4:	mov	x2, x24
  e8:	b	124 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x124>
  ec:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZSt20__throw_length_errorPKc>
  f8:	ldp	x4, x5, [x26, #24]
  fc:	stp	x4, x5, [x0, #24]
 100:	b	c4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xc4>
 104:	ldp	x0, x1, [x2, #24]
 108:	stp	x0, x1, [x3, #24]
 10c:	ldr	x0, [x2, #16]
 110:	str	x0, [x3, #16]
 114:	add	x2, x2, #0x28
 118:	add	x3, x3, #0x28
 11c:	cmp	x25, x2
 120:	b.eq	154 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x154>  // b.none
 124:	ldr	w1, [x2]
 128:	mov	x0, x3
 12c:	str	w1, [x0], #24
 130:	str	x0, [x3, #8]
 134:	ldr	x0, [x2, #8]
 138:	add	x1, x2, #0x18
 13c:	cmp	x0, x1
 140:	b.eq	104 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x104>  // b.none
 144:	str	x0, [x3, #8]
 148:	ldr	x0, [x2, #24]
 14c:	str	x0, [x3, #24]
 150:	b	10c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x10c>
 154:	sub	x25, x19, #0x28
 158:	sub	x25, x25, x24
 15c:	lsr	x25, x25, #3
 160:	mov	x0, #0xcccd                	// #52429
 164:	movk	x0, #0xcccc, lsl #16
 168:	movk	x0, #0xcccc, lsl #32
 16c:	movk	x0, #0xccc, lsl #48
 170:	mul	x25, x25, x0
 174:	and	x25, x25, #0x1fffffffffffffff
 178:	add	x25, x25, #0x1
 17c:	add	x25, x25, x25, lsl #2
 180:	add	x25, x22, x25, lsl #3
 184:	add	x25, x25, #0x28
 188:	cmp	x19, x20
 18c:	b.eq	224 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x224>  // b.none
 190:	mov	x2, x19
 194:	mov	x3, x25
 198:	b	1c4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1c4>
 19c:	mov	x25, x22
 1a0:	b	184 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x184>
 1a4:	ldp	x0, x1, [x2, #24]
 1a8:	stp	x0, x1, [x3, #24]
 1ac:	ldr	x0, [x2, #16]
 1b0:	str	x0, [x3, #16]
 1b4:	add	x2, x2, #0x28
 1b8:	add	x3, x3, #0x28
 1bc:	cmp	x2, x20
 1c0:	b.eq	1f4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1f4>  // b.none
 1c4:	ldr	w1, [x2]
 1c8:	mov	x0, x3
 1cc:	str	w1, [x0], #24
 1d0:	str	x0, [x3, #8]
 1d4:	ldr	x0, [x2, #8]
 1d8:	add	x1, x2, #0x18
 1dc:	cmp	x0, x1
 1e0:	b.eq	1a4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1a4>  // b.none
 1e4:	str	x0, [x3, #8]
 1e8:	ldr	x0, [x2, #24]
 1ec:	str	x0, [x3, #24]
 1f0:	b	1ac <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1ac>
 1f4:	sub	x0, x20, x19
 1f8:	sub	x0, x0, #0x28
 1fc:	lsr	x0, x0, #3
 200:	mov	x1, #0xcccd                	// #52429
 204:	movk	x1, #0xcccc, lsl #16
 208:	movk	x1, #0xcccc, lsl #32
 20c:	movk	x1, #0xccc, lsl #48
 210:	mul	x0, x0, x1
 214:	and	x0, x0, #0x1fffffffffffffff
 218:	add	x0, x0, #0x1
 21c:	add	x0, x0, x0, lsl #2
 220:	add	x25, x25, x0, lsl #3
 224:	cbz	x24, 230 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x230>
 228:	mov	x0, x24
 22c:	bl	0 <_ZdlPv>
 230:	str	x22, [x23]
 234:	str	x25, [x23, #8]
 238:	add	x21, x21, x21, lsl #2
 23c:	add	x22, x22, x21, lsl #3
 240:	str	x22, [x23, #16]
 244:	ldp	x19, x20, [sp, #16]
 248:	ldp	x21, x22, [sp, #32]
 24c:	ldp	x23, x24, [sp, #48]
 250:	ldp	x25, x26, [sp, #64]
 254:	ldr	x27, [sp, #80]
 258:	ldp	x29, x30, [sp], #96
 25c:	ret
 260:	sub	x27, x19, x24
 264:	mov	x21, #0x3333333333333333    	// #3689348814741910323
 268:	movk	x21, #0x333, lsl #48
 26c:	b	84 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x84>
