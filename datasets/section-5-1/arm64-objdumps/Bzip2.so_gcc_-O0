
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Bzip2.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000012c0 <_init>:
    12c0:	stp	x29, x30, [sp, #-16]!
    12c4:	mov	x29, sp
    12c8:	bl	1600 <call_weak_fn>
    12cc:	ldp	x29, x30, [sp], #16
    12d0:	ret

Disassembly of section .plt:

00000000000012e0 <.plt>:
    12e0:	stp	x16, x30, [sp, #-16]!
    12e4:	adrp	x16, 18000 <__FRAME_END__+0xf2b8>
    12e8:	ldr	x17, [x16, #4088]
    12ec:	add	x16, x16, #0xff8
    12f0:	br	x17
    12f4:	nop
    12f8:	nop
    12fc:	nop

0000000000001300 <memmove@plt>:
    1300:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1304:	ldr	x17, [x16]
    1308:	add	x16, x16, #0x0
    130c:	br	x17

0000000000001310 <Perl_sv_setref_pv@plt>:
    1310:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1314:	ldr	x17, [x16, #8]
    1318:	add	x16, x16, #0x8
    131c:	br	x17

0000000000001320 <Perl_sv_2iv_flags@plt>:
    1320:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1324:	ldr	x17, [x16, #16]
    1328:	add	x16, x16, #0x10
    132c:	br	x17

0000000000001330 <Perl_sv_setnv@plt>:
    1330:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1334:	ldr	x17, [x16, #24]
    1338:	add	x16, x16, #0x18
    133c:	br	x17

0000000000001340 <Perl_sv_pvn_force_flags@plt>:
    1340:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1344:	ldr	x17, [x16, #32]
    1348:	add	x16, x16, #0x20
    134c:	br	x17

0000000000001350 <Perl_stack_grow@plt>:
    1350:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1354:	ldr	x17, [x16, #40]
    1358:	add	x16, x16, #0x28
    135c:	br	x17

0000000000001360 <Perl_sv_utf8_downgrade@plt>:
    1360:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1364:	ldr	x17, [x16, #48]
    1368:	add	x16, x16, #0x30
    136c:	br	x17

0000000000001370 <__cxa_finalize@plt>:
    1370:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1374:	ldr	x17, [x16, #56]
    1378:	add	x16, x16, #0x38
    137c:	br	x17

0000000000001380 <BZ2_bzlibVersion@plt>:
    1380:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1384:	ldr	x17, [x16, #64]
    1388:	add	x16, x16, #0x40
    138c:	br	x17

0000000000001390 <Perl_sv_derived_from@plt>:
    1390:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1394:	ldr	x17, [x16, #72]
    1398:	add	x16, x16, #0x48
    139c:	br	x17

00000000000013a0 <pthread_getspecific@plt>:
    13a0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13a4:	ldr	x17, [x16, #80]
    13a8:	add	x16, x16, #0x50
    13ac:	br	x17

00000000000013b0 <Perl_sv_upgrade@plt>:
    13b0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13b4:	ldr	x17, [x16, #88]
    13b8:	add	x16, x16, #0x58
    13bc:	br	x17

00000000000013c0 <Perl_sv_setiv_mg@plt>:
    13c0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13c4:	ldr	x17, [x16, #96]
    13c8:	add	x16, x16, #0x60
    13cc:	br	x17

00000000000013d0 <BZ2_bzDecompressInit@plt>:
    13d0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13d4:	ldr	x17, [x16, #104]
    13d8:	add	x16, x16, #0x68
    13dc:	br	x17

00000000000013e0 <BZ2_bzDecompressEnd@plt>:
    13e0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13e4:	ldr	x17, [x16, #112]
    13e8:	add	x16, x16, #0x70
    13ec:	br	x17

00000000000013f0 <Perl_sv_setpv@plt>:
    13f0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    13f4:	ldr	x17, [x16, #120]
    13f8:	add	x16, x16, #0x78
    13fc:	br	x17

0000000000001400 <Perl_sv_2pvbyte@plt>:
    1400:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1404:	ldr	x17, [x16, #128]
    1408:	add	x16, x16, #0x80
    140c:	br	x17

0000000000001410 <memset@plt>:
    1410:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1414:	ldr	x17, [x16, #136]
    1418:	add	x16, x16, #0x88
    141c:	br	x17

0000000000001420 <Perl_sv_2pv_flags@plt>:
    1420:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1424:	ldr	x17, [x16, #144]
    1428:	add	x16, x16, #0x90
    142c:	br	x17

0000000000001430 <Perl_xs_boot_epilog@plt>:
    1430:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1434:	ldr	x17, [x16, #152]
    1438:	add	x16, x16, #0x98
    143c:	br	x17

0000000000001440 <BZ2_bzCompressInit@plt>:
    1440:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1444:	ldr	x17, [x16, #160]
    1448:	add	x16, x16, #0xa0
    144c:	br	x17

0000000000001450 <Perl_safesysmalloc@plt>:
    1450:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1454:	ldr	x17, [x16, #168]
    1458:	add	x16, x16, #0xa8
    145c:	br	x17

0000000000001460 <BZ2_bzCompressEnd@plt>:
    1460:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1464:	ldr	x17, [x16, #176]
    1468:	add	x16, x16, #0xb0
    146c:	br	x17

0000000000001470 <__stack_chk_fail@plt>:
    1470:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1474:	ldr	x17, [x16, #184]
    1478:	add	x16, x16, #0xb8
    147c:	br	x17

0000000000001480 <__gmon_start__@plt>:
    1480:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1484:	ldr	x17, [x16, #192]
    1488:	add	x16, x16, #0xc0
    148c:	br	x17

0000000000001490 <Perl_croak_xs_usage@plt>:
    1490:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1494:	ldr	x17, [x16, #200]
    1498:	add	x16, x16, #0xc8
    149c:	br	x17

00000000000014a0 <Perl_sv_grow@plt>:
    14a0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14a4:	ldr	x17, [x16, #208]
    14a8:	add	x16, x16, #0xd0
    14ac:	br	x17

00000000000014b0 <Perl_sv_utf8_upgrade_flags_grow@plt>:
    14b0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14b4:	ldr	x17, [x16, #216]
    14b8:	add	x16, x16, #0xd8
    14bc:	br	x17

00000000000014c0 <puts@plt>:
    14c0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14c4:	ldr	x17, [x16, #224]
    14c8:	add	x16, x16, #0xe0
    14cc:	br	x17

00000000000014d0 <BZ2_bzCompress@plt>:
    14d0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14d4:	ldr	x17, [x16, #232]
    14d8:	add	x16, x16, #0xe8
    14dc:	br	x17

00000000000014e0 <memcmp@plt>:
    14e0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14e4:	ldr	x17, [x16, #240]
    14e8:	add	x16, x16, #0xf0
    14ec:	br	x17

00000000000014f0 <Perl_newSVpv@plt>:
    14f0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    14f4:	ldr	x17, [x16, #248]
    14f8:	add	x16, x16, #0xf8
    14fc:	br	x17

0000000000001500 <Perl_croak_nocontext@plt>:
    1500:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1504:	ldr	x17, [x16, #256]
    1508:	add	x16, x16, #0x100
    150c:	br	x17

0000000000001510 <Perl_newXS_deffile@plt>:
    1510:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1514:	ldr	x17, [x16, #264]
    1518:	add	x16, x16, #0x108
    151c:	br	x17

0000000000001520 <Perl_mg_set@plt>:
    1520:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1524:	ldr	x17, [x16, #272]
    1528:	add	x16, x16, #0x110
    152c:	br	x17

0000000000001530 <BZ2_bzDecompress@plt>:
    1530:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1534:	ldr	x17, [x16, #280]
    1538:	add	x16, x16, #0x118
    153c:	br	x17

0000000000001540 <Perl_dowantarray@plt>:
    1540:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1544:	ldr	x17, [x16, #288]
    1548:	add	x16, x16, #0x120
    154c:	br	x17

0000000000001550 <Perl_sv_2mortal@plt>:
    1550:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1554:	ldr	x17, [x16, #296]
    1558:	add	x16, x16, #0x128
    155c:	br	x17

0000000000001560 <Perl_mg_get@plt>:
    1560:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1564:	ldr	x17, [x16, #304]
    1568:	add	x16, x16, #0x130
    156c:	br	x17

0000000000001570 <Perl_safesysfree@plt>:
    1570:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1574:	ldr	x17, [x16, #312]
    1578:	add	x16, x16, #0x138
    157c:	br	x17

0000000000001580 <Perl_xs_handshake@plt>:
    1580:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1584:	ldr	x17, [x16, #320]
    1588:	add	x16, x16, #0x140
    158c:	br	x17

0000000000001590 <Perl_sv_pvbyten_force@plt>:
    1590:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    1594:	ldr	x17, [x16, #328]
    1598:	add	x16, x16, #0x148
    159c:	br	x17

00000000000015a0 <Perl_newSVpvf_nocontext@plt>:
    15a0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15a4:	ldr	x17, [x16, #336]
    15a8:	add	x16, x16, #0x150
    15ac:	br	x17

00000000000015b0 <Perl_sv_setuv_mg@plt>:
    15b0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15b4:	ldr	x17, [x16, #344]
    15b8:	add	x16, x16, #0x158
    15bc:	br	x17

00000000000015c0 <Perl_newSViv@plt>:
    15c0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15c4:	ldr	x17, [x16, #352]
    15c8:	add	x16, x16, #0x160
    15cc:	br	x17

00000000000015d0 <printf@plt>:
    15d0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15d4:	ldr	x17, [x16, #360]
    15d8:	add	x16, x16, #0x168
    15dc:	br	x17

00000000000015e0 <putchar@plt>:
    15e0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15e4:	ldr	x17, [x16, #368]
    15e8:	add	x16, x16, #0x170
    15ec:	br	x17

00000000000015f0 <Perl_sv_newmortal@plt>:
    15f0:	adrp	x16, 19000 <memmove@GLIBC_2.17>
    15f4:	ldr	x17, [x16, #376]
    15f8:	add	x16, x16, #0x178
    15fc:	br	x17

Disassembly of section .text:

0000000000001600 <call_weak_fn>:
    1600:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1604:	ldr	x0, [x0, #4040]
    1608:	cbz	x0, 1610 <call_weak_fn+0x10>
    160c:	b	1480 <__gmon_start__@plt>
    1610:	ret

0000000000001614 <deregister_tm_clones>:
    1614:	stp	x29, x30, [sp, #-32]!
    1618:	mov	x29, sp
    161c:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    1620:	add	x0, x0, #0x188
    1624:	str	x0, [sp, #24]
    1628:	ldr	x0, [sp, #24]
    162c:	str	x0, [sp, #24]
    1630:	ldr	x1, [sp, #24]
    1634:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    1638:	add	x0, x0, #0x188
    163c:	cmp	x1, x0
    1640:	b.eq	1678 <deregister_tm_clones+0x64>  // b.none
    1644:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1648:	ldr	x0, [x0, #4016]
    164c:	str	x0, [sp, #16]
    1650:	ldr	x0, [sp, #16]
    1654:	str	x0, [sp, #16]
    1658:	ldr	x0, [sp, #16]
    165c:	cmp	x0, #0x0
    1660:	b.eq	167c <deregister_tm_clones+0x68>  // b.none
    1664:	ldr	x1, [sp, #16]
    1668:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    166c:	add	x0, x0, #0x188
    1670:	blr	x1
    1674:	b	167c <deregister_tm_clones+0x68>
    1678:	nop
    167c:	ldp	x29, x30, [sp], #32
    1680:	ret

0000000000001684 <register_tm_clones>:
    1684:	stp	x29, x30, [sp, #-48]!
    1688:	mov	x29, sp
    168c:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    1690:	add	x0, x0, #0x188
    1694:	str	x0, [sp, #40]
    1698:	ldr	x0, [sp, #40]
    169c:	str	x0, [sp, #40]
    16a0:	ldr	x1, [sp, #40]
    16a4:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    16a8:	add	x0, x0, #0x188
    16ac:	sub	x0, x1, x0
    16b0:	asr	x0, x0, #3
    16b4:	lsr	x1, x0, #63
    16b8:	add	x0, x1, x0
    16bc:	asr	x0, x0, #1
    16c0:	str	x0, [sp, #32]
    16c4:	ldr	x0, [sp, #32]
    16c8:	cmp	x0, #0x0
    16cc:	b.eq	1708 <register_tm_clones+0x84>  // b.none
    16d0:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    16d4:	ldr	x0, [x0, #4064]
    16d8:	str	x0, [sp, #24]
    16dc:	ldr	x0, [sp, #24]
    16e0:	str	x0, [sp, #24]
    16e4:	ldr	x0, [sp, #24]
    16e8:	cmp	x0, #0x0
    16ec:	b.eq	170c <register_tm_clones+0x88>  // b.none
    16f0:	ldr	x2, [sp, #24]
    16f4:	ldr	x1, [sp, #32]
    16f8:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    16fc:	add	x0, x0, #0x188
    1700:	blr	x2
    1704:	b	170c <register_tm_clones+0x88>
    1708:	nop
    170c:	ldp	x29, x30, [sp], #48
    1710:	ret

0000000000001714 <__do_global_dtors_aux>:
    1714:	stp	x29, x30, [sp, #-16]!
    1718:	mov	x29, sp
    171c:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    1720:	add	x0, x0, #0x188
    1724:	ldrb	w0, [x0]
    1728:	and	x0, x0, #0xff
    172c:	cmp	x0, #0x0
    1730:	b.ne	176c <__do_global_dtors_aux+0x58>  // b.any
    1734:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1738:	ldr	x0, [x0, #4024]
    173c:	cmp	x0, #0x0
    1740:	b.eq	1754 <__do_global_dtors_aux+0x40>  // b.none
    1744:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    1748:	add	x0, x0, #0x180
    174c:	ldr	x0, [x0]
    1750:	bl	1370 <__cxa_finalize@plt>
    1754:	bl	1614 <deregister_tm_clones>
    1758:	adrp	x0, 19000 <memmove@GLIBC_2.17>
    175c:	add	x0, x0, #0x188
    1760:	mov	w1, #0x1                   	// #1
    1764:	strb	w1, [x0]
    1768:	b	1770 <__do_global_dtors_aux+0x5c>
    176c:	nop
    1770:	ldp	x29, x30, [sp], #16
    1774:	ret

0000000000001778 <frame_dummy>:
    1778:	stp	x29, x30, [sp, #-16]!
    177c:	mov	x29, sp
    1780:	bl	1684 <register_tm_clones>
    1784:	nop
    1788:	ldp	x29, x30, [sp], #16
    178c:	ret

0000000000001790 <S_POPMARK>:
    1790:	sub	sp, sp, #0x10
    1794:	str	x0, [sp, #8]
    1798:	ldr	x0, [sp, #8]
    179c:	ldr	x0, [x0, #120]
    17a0:	sub	x2, x0, #0x4
    17a4:	ldr	x1, [sp, #8]
    17a8:	str	x2, [x1, #120]
    17ac:	ldr	w0, [x0]
    17b0:	add	sp, sp, #0x10
    17b4:	ret

00000000000017b8 <S_croak_memory_wrap>:
    17b8:	stp	x29, x30, [sp, #-16]!
    17bc:	mov	x29, sp
    17c0:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    17c4:	ldr	x1, [x0, #4056]
    17c8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    17cc:	add	x0, x0, #0x9c8
    17d0:	bl	1500 <Perl_croak_nocontext@plt>

00000000000017d4 <bz_internal_error>:
    17d4:	stp	x29, x30, [sp, #-32]!
    17d8:	mov	x29, sp
    17dc:	str	w0, [sp, #28]
    17e0:	ldr	w1, [sp, #28]
    17e4:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    17e8:	add	x0, x0, #0xbb0
    17ec:	bl	1500 <Perl_croak_nocontext@plt>

00000000000017f0 <GetErrorString>:
    17f0:	sub	sp, sp, #0x10
    17f4:	str	w0, [sp, #12]
    17f8:	mov	w1, #0x4                   	// #4
    17fc:	ldr	w0, [sp, #12]
    1800:	sub	w0, w1, w0
    1804:	sxtw	x0, w0
    1808:	lsl	x1, x0, #5
    180c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1810:	add	x0, x0, #0x9d0
    1814:	add	x0, x1, x0
    1818:	add	sp, sp, #0x10
    181c:	ret

0000000000001820 <DispHex>:
    1820:	stp	x29, x30, [sp, #-48]!
    1824:	mov	x29, sp
    1828:	str	x0, [sp, #24]
    182c:	str	w1, [sp, #20]
    1830:	ldr	x0, [sp, #24]
    1834:	str	x0, [sp, #40]
    1838:	str	wzr, [sp, #36]
    183c:	b	186c <DispHex+0x4c>
    1840:	ldrsw	x0, [sp, #36]
    1844:	ldr	x1, [sp, #40]
    1848:	add	x0, x1, x0
    184c:	ldrb	w0, [x0]
    1850:	mov	w1, w0
    1854:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1858:	add	x0, x0, #0xbc8
    185c:	bl	15d0 <printf@plt>
    1860:	ldr	w0, [sp, #36]
    1864:	add	w0, w0, #0x1
    1868:	str	w0, [sp, #36]
    186c:	ldr	w1, [sp, #36]
    1870:	ldr	w0, [sp, #20]
    1874:	cmp	w1, w0
    1878:	b.lt	1840 <DispHex+0x20>  // b.tstop
    187c:	nop
    1880:	nop
    1884:	ldp	x29, x30, [sp], #48
    1888:	ret

000000000000188c <DispStream>:
    188c:	stp	x29, x30, [sp, #-32]!
    1890:	mov	x29, sp
    1894:	str	x0, [sp, #24]
    1898:	str	x1, [sp, #16]
    189c:	ldr	x1, [sp, #24]
    18a0:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    18a4:	add	x0, x0, #0xbd0
    18a8:	bl	15d0 <printf@plt>
    18ac:	ldr	x0, [sp, #16]
    18b0:	cmp	x0, #0x0
    18b4:	b.eq	18c8 <DispStream+0x3c>  // b.none
    18b8:	ldr	x1, [sp, #16]
    18bc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    18c0:	add	x0, x0, #0xbe0
    18c4:	bl	15d0 <printf@plt>
    18c8:	mov	w0, #0xa                   	// #10
    18cc:	bl	15e0 <putchar@plt>
    18d0:	ldr	x0, [sp, #24]
    18d4:	cmp	x0, #0x0
    18d8:	b.ne	18ec <DispStream+0x60>  // b.any
    18dc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    18e0:	add	x0, x0, #0xbe8
    18e4:	bl	14c0 <puts@plt>
    18e8:	b	1b48 <DispStream+0x2bc>
    18ec:	ldr	x0, [sp, #24]
    18f0:	add	x0, x0, #0x8
    18f4:	mov	x1, x0
    18f8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    18fc:	add	x0, x0, #0xc08
    1900:	bl	15d0 <printf@plt>
    1904:	ldr	x0, [sp, #24]
    1908:	ldr	x0, [x0, #80]
    190c:	mov	x1, x0
    1910:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1914:	add	x0, x0, #0xc28
    1918:	bl	15d0 <printf@plt>
    191c:	ldr	x0, [sp, #24]
    1920:	ldr	x0, [x0, #56]
    1924:	mov	x1, x0
    1928:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    192c:	add	x0, x0, #0xc48
    1930:	bl	15d0 <printf@plt>
    1934:	ldr	x0, [sp, #24]
    1938:	ldr	x0, [x0, #8]
    193c:	mov	x1, x0
    1940:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1944:	add	x0, x0, #0xc68
    1948:	bl	15d0 <printf@plt>
    194c:	ldr	x0, [sp, #24]
    1950:	ldr	x0, [x0, #8]
    1954:	cmp	x0, #0x0
    1958:	b.eq	1978 <DispStream+0xec>  // b.none
    195c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1960:	add	x0, x0, #0xc88
    1964:	bl	15d0 <printf@plt>
    1968:	ldr	x0, [sp, #24]
    196c:	ldr	x0, [x0, #8]
    1970:	mov	w1, #0x4                   	// #4
    1974:	bl	1820 <DispHex>
    1978:	mov	w0, #0xa                   	// #10
    197c:	bl	15e0 <putchar@plt>
    1980:	ldr	x0, [sp, #24]
    1984:	ldr	x0, [x0, #32]
    1988:	mov	x1, x0
    198c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1990:	add	x0, x0, #0xc90
    1994:	bl	15d0 <printf@plt>
    1998:	ldr	x0, [sp, #24]
    199c:	ldr	x0, [x0, #32]
    19a0:	cmp	x0, #0x0
    19a4:	b.eq	19c4 <DispStream+0x138>  // b.none
    19a8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    19ac:	add	x0, x0, #0xc88
    19b0:	bl	15d0 <printf@plt>
    19b4:	ldr	x0, [sp, #24]
    19b8:	ldr	x0, [x0, #32]
    19bc:	mov	w1, #0x4                   	// #4
    19c0:	bl	1820 <DispHex>
    19c4:	mov	w0, #0xa                   	// #10
    19c8:	bl	15e0 <putchar@plt>
    19cc:	ldr	x0, [sp, #24]
    19d0:	ldr	w0, [x0, #16]
    19d4:	mov	w0, w0
    19d8:	mov	x1, x0
    19dc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    19e0:	add	x0, x0, #0xcb0
    19e4:	bl	15d0 <printf@plt>
    19e8:	ldr	x0, [sp, #24]
    19ec:	ldr	w0, [x0, #40]
    19f0:	mov	w0, w0
    19f4:	mov	x1, x0
    19f8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    19fc:	add	x0, x0, #0xcd0
    1a00:	bl	15d0 <printf@plt>
    1a04:	ldr	x0, [sp, #24]
    1a08:	ldr	w0, [x0, #88]
    1a0c:	mov	w0, w0
    1a10:	mov	x1, x0
    1a14:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a18:	add	x0, x0, #0xcf0
    1a1c:	bl	15d0 <printf@plt>
    1a20:	ldr	x0, [sp, #24]
    1a24:	ldr	w0, [x0, #20]
    1a28:	mov	w1, w0
    1a2c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a30:	add	x0, x0, #0xd10
    1a34:	bl	15d0 <printf@plt>
    1a38:	ldr	x0, [sp, #24]
    1a3c:	ldr	w0, [x0, #24]
    1a40:	mov	w1, w0
    1a44:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a48:	add	x0, x0, #0xd30
    1a4c:	bl	15d0 <printf@plt>
    1a50:	ldr	x0, [sp, #24]
    1a54:	ldr	w0, [x0, #44]
    1a58:	mov	w1, w0
    1a5c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a60:	add	x0, x0, #0xd50
    1a64:	bl	15d0 <printf@plt>
    1a68:	ldr	x0, [sp, #24]
    1a6c:	ldr	w0, [x0, #48]
    1a70:	mov	w1, w0
    1a74:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a78:	add	x0, x0, #0xd70
    1a7c:	bl	15d0 <printf@plt>
    1a80:	ldr	x0, [sp, #24]
    1a84:	ldr	w0, [x0]
    1a88:	mov	w1, w0
    1a8c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1a90:	add	x0, x0, #0xd90
    1a94:	bl	15d0 <printf@plt>
    1a98:	ldr	x0, [sp, #24]
    1a9c:	ldr	w0, [x0]
    1aa0:	and	w0, w0, #0x1
    1aa4:	cmp	w0, #0x0
    1aa8:	b.eq	1ab8 <DispStream+0x22c>  // b.none
    1aac:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ab0:	add	x0, x0, #0xdb0
    1ab4:	b	1ac0 <DispStream+0x234>
    1ab8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1abc:	add	x0, x0, #0xdb8
    1ac0:	mov	x1, x0
    1ac4:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ac8:	add	x0, x0, #0xdc8
    1acc:	bl	15d0 <printf@plt>
    1ad0:	ldr	x0, [sp, #24]
    1ad4:	ldr	w0, [x0]
    1ad8:	and	w0, w0, #0x8
    1adc:	cmp	w0, #0x0
    1ae0:	b.eq	1af0 <DispStream+0x264>  // b.none
    1ae4:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ae8:	add	x0, x0, #0xdb0
    1aec:	b	1af8 <DispStream+0x26c>
    1af0:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1af4:	add	x0, x0, #0xdb8
    1af8:	mov	x1, x0
    1afc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1b00:	add	x0, x0, #0xde8
    1b04:	bl	15d0 <printf@plt>
    1b08:	ldr	x0, [sp, #24]
    1b0c:	ldr	w0, [x0]
    1b10:	and	w0, w0, #0x10
    1b14:	cmp	w0, #0x0
    1b18:	b.eq	1b28 <DispStream+0x29c>  // b.none
    1b1c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1b20:	add	x0, x0, #0xdb0
    1b24:	b	1b30 <DispStream+0x2a4>
    1b28:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1b2c:	add	x0, x0, #0xdb8
    1b30:	mov	x1, x0
    1b34:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1b38:	add	x0, x0, #0xe08
    1b3c:	bl	15d0 <printf@plt>
    1b40:	mov	w0, #0xa                   	// #10
    1b44:	bl	15e0 <putchar@plt>
    1b48:	nop
    1b4c:	ldp	x29, x30, [sp], #32
    1b50:	ret

0000000000001b54 <InitStream>:
    1b54:	stp	x29, x30, [sp, #-32]!
    1b58:	mov	x29, sp
    1b5c:	mov	x0, #0x78                  	// #120
    1b60:	bl	1450 <Perl_safesysmalloc@plt>
    1b64:	str	x0, [sp, #24]
    1b68:	mov	x2, #0x78                  	// #120
    1b6c:	mov	w1, #0x0                   	// #0
    1b70:	ldr	x0, [sp, #24]
    1b74:	bl	1410 <memset@plt>
    1b78:	ldr	x0, [sp, #24]
    1b7c:	ldp	x29, x30, [sp], #32
    1b80:	ret

0000000000001b84 <PostInitStream>:
    1b84:	sub	sp, sp, #0x10
    1b88:	str	x0, [sp, #8]
    1b8c:	str	w1, [sp, #4]
    1b90:	ldr	x0, [sp, #8]
    1b94:	mov	w1, #0x4000                	// #16384
    1b98:	str	w1, [x0, #88]
    1b9c:	ldr	x0, [sp, #8]
    1ba0:	str	wzr, [x0, #92]
    1ba4:	ldr	x0, [sp, #8]
    1ba8:	ldr	w1, [sp, #4]
    1bac:	str	w1, [x0]
    1bb0:	nop
    1bb4:	add	sp, sp, #0x10
    1bb8:	ret

0000000000001bbc <deRef>:
    1bbc:	stp	x29, x30, [sp, #-48]!
    1bc0:	mov	x29, sp
    1bc4:	str	x0, [sp, #24]
    1bc8:	str	x1, [sp, #16]
    1bcc:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1bd0:	ldr	x0, [x0, #4032]
    1bd4:	ldr	w0, [x0]
    1bd8:	bl	13a0 <pthread_getspecific@plt>
    1bdc:	str	x0, [sp, #40]
    1be0:	ldr	x0, [sp, #24]
    1be4:	ldr	w0, [x0, #12]
    1be8:	lsr	w0, w0, #21
    1bec:	mov	w0, w0
    1bf0:	and	x0, x0, #0x1
    1bf4:	cmp	x0, #0x0
    1bf8:	b.eq	1c10 <deRef+0x54>  // b.none
    1bfc:	ldr	x1, [sp, #24]
    1c00:	ldr	x0, [sp, #40]
    1c04:	bl	1560 <Perl_mg_get@plt>
    1c08:	cmp	w0, #0x0
    1c0c:	nop
    1c10:	ldr	x0, [sp, #24]
    1c14:	ldr	w0, [x0, #12]
    1c18:	and	w0, w0, #0x800
    1c1c:	cmp	w0, #0x0
    1c20:	b.eq	1cb0 <deRef+0xf4>  // b.none
    1c24:	ldr	x0, [sp, #24]
    1c28:	ldr	x0, [x0, #16]
    1c2c:	str	x0, [sp, #24]
    1c30:	ldr	x0, [sp, #24]
    1c34:	ldr	w0, [x0, #12]
    1c38:	lsr	w0, w0, #21
    1c3c:	mov	w0, w0
    1c40:	and	x0, x0, #0x1
    1c44:	cmp	x0, #0x0
    1c48:	b.eq	1c60 <deRef+0xa4>  // b.none
    1c4c:	ldr	x1, [sp, #24]
    1c50:	ldr	x0, [sp, #40]
    1c54:	bl	1560 <Perl_mg_get@plt>
    1c58:	cmp	w0, #0x0
    1c5c:	nop
    1c60:	ldr	x0, [sp, #24]
    1c64:	ldr	w0, [x0, #12]
    1c68:	and	w0, w0, #0xff
    1c6c:	sub	w0, w0, #0xb
    1c70:	cmp	w0, #0x2
    1c74:	b.hi	1c88 <deRef+0xcc>  // b.pmore
    1c78:	ldr	x1, [sp, #16]
    1c7c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1c80:	add	x0, x0, #0xe28
    1c84:	bl	1500 <Perl_croak_nocontext@plt>
    1c88:	nop
    1c8c:	ldr	x0, [sp, #24]
    1c90:	ldr	w0, [x0, #12]
    1c94:	and	w0, w0, #0x800
    1c98:	cmp	w0, #0x0
    1c9c:	b.eq	1cb0 <deRef+0xf4>  // b.none
    1ca0:	ldr	x1, [sp, #16]
    1ca4:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ca8:	add	x0, x0, #0xe58
    1cac:	bl	1500 <Perl_croak_nocontext@plt>
    1cb0:	ldr	x0, [sp, #24]
    1cb4:	ldr	w0, [x0, #12]
    1cb8:	and	w0, w0, #0xff00
    1cbc:	cmp	w0, #0x0
    1cc0:	b.ne	1ce8 <deRef+0x12c>  // b.any
    1cc4:	mov	x2, #0x0                   	// #0
    1cc8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ccc:	add	x1, x0, #0xe90
    1cd0:	ldr	x0, [sp, #40]
    1cd4:	bl	14f0 <Perl_newSVpv@plt>
    1cd8:	mov	x1, x0
    1cdc:	ldr	x0, [sp, #40]
    1ce0:	bl	1550 <Perl_sv_2mortal@plt>
    1ce4:	str	x0, [sp, #24]
    1ce8:	ldr	x0, [sp, #24]
    1cec:	ldp	x29, x30, [sp], #48
    1cf0:	ret

0000000000001cf4 <deRef_l>:
    1cf4:	stp	x29, x30, [sp, #-64]!
    1cf8:	mov	x29, sp
    1cfc:	str	x0, [sp, #24]
    1d00:	str	x1, [sp, #16]
    1d04:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1d08:	ldr	x0, [x0, #4048]
    1d0c:	ldr	x1, [x0]
    1d10:	str	x1, [sp, #56]
    1d14:	mov	x1, #0x0                   	// #0
    1d18:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1d1c:	ldr	x0, [x0, #4032]
    1d20:	ldr	w0, [x0]
    1d24:	bl	13a0 <pthread_getspecific@plt>
    1d28:	str	x0, [sp, #48]
    1d2c:	strb	wzr, [sp, #39]
    1d30:	ldr	x0, [sp, #24]
    1d34:	ldr	w0, [x0, #12]
    1d38:	lsr	w0, w0, #21
    1d3c:	mov	w0, w0
    1d40:	and	x0, x0, #0x1
    1d44:	cmp	x0, #0x0
    1d48:	b.eq	1d60 <deRef_l+0x6c>  // b.none
    1d4c:	ldr	x1, [sp, #24]
    1d50:	ldr	x0, [sp, #48]
    1d54:	bl	1560 <Perl_mg_get@plt>
    1d58:	cmp	w0, #0x0
    1d5c:	nop
    1d60:	ldr	x0, [sp, #24]
    1d64:	ldr	w0, [x0, #12]
    1d68:	and	w0, w0, #0xff00
    1d6c:	cmp	w0, #0x0
    1d70:	cset	w0, eq  // eq = none
    1d74:	strb	w0, [sp, #39]
    1d78:	ldr	x0, [sp, #24]
    1d7c:	ldr	w0, [x0, #12]
    1d80:	and	w0, w0, #0x800
    1d84:	cmp	w0, #0x0
    1d88:	b.eq	1e30 <deRef_l+0x13c>  // b.none
    1d8c:	ldr	x0, [sp, #24]
    1d90:	ldr	x0, [x0, #16]
    1d94:	str	x0, [sp, #24]
    1d98:	ldr	x0, [sp, #24]
    1d9c:	ldr	w0, [x0, #12]
    1da0:	lsr	w0, w0, #21
    1da4:	mov	w0, w0
    1da8:	and	x0, x0, #0x1
    1dac:	cmp	x0, #0x0
    1db0:	b.eq	1dc8 <deRef_l+0xd4>  // b.none
    1db4:	ldr	x1, [sp, #24]
    1db8:	ldr	x0, [sp, #48]
    1dbc:	bl	1560 <Perl_mg_get@plt>
    1dc0:	cmp	w0, #0x0
    1dc4:	nop
    1dc8:	ldr	x0, [sp, #24]
    1dcc:	ldr	w0, [x0, #12]
    1dd0:	and	w0, w0, #0xff00
    1dd4:	cmp	w0, #0x0
    1dd8:	cset	w0, eq  // eq = none
    1ddc:	strb	w0, [sp, #39]
    1de0:	ldr	x0, [sp, #24]
    1de4:	ldr	w0, [x0, #12]
    1de8:	and	w0, w0, #0xff
    1dec:	sub	w0, w0, #0xb
    1df0:	cmp	w0, #0x2
    1df4:	b.hi	1e08 <deRef_l+0x114>  // b.pmore
    1df8:	ldr	x1, [sp, #16]
    1dfc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1e00:	add	x0, x0, #0xe28
    1e04:	bl	1500 <Perl_croak_nocontext@plt>
    1e08:	nop
    1e0c:	ldr	x0, [sp, #24]
    1e10:	ldr	w0, [x0, #12]
    1e14:	and	w0, w0, #0x800
    1e18:	cmp	w0, #0x0
    1e1c:	b.eq	1e30 <deRef_l+0x13c>  // b.none
    1e20:	ldr	x1, [sp, #16]
    1e24:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1e28:	add	x0, x0, #0xe58
    1e2c:	bl	1500 <Perl_croak_nocontext@plt>
    1e30:	ldr	x0, [sp, #24]
    1e34:	ldr	w1, [x0, #12]
    1e38:	mov	w0, #0x8010000             	// #134283264
    1e3c:	and	w0, w1, w0
    1e40:	cmp	w0, #0x0
    1e44:	b.eq	1e70 <deRef_l+0x17c>  // b.none
    1e48:	ldr	x0, [sp, #48]
    1e4c:	ldr	x1, [x0, #224]
    1e50:	ldr	x0, [sp, #48]
    1e54:	add	x0, x0, #0x800
    1e58:	cmp	x1, x0
    1e5c:	b.eq	1e70 <deRef_l+0x17c>  // b.none
    1e60:	ldr	x1, [sp, #16]
    1e64:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1e68:	add	x0, x0, #0xe98
    1e6c:	bl	1500 <Perl_croak_nocontext@plt>
    1e70:	ldr	x0, [sp, #24]
    1e74:	ldr	w0, [x0, #12]
    1e78:	and	w0, w0, #0xff
    1e7c:	cmp	w0, #0x2
    1e80:	b.hi	1e94 <deRef_l+0x1a0>  // b.pmore
    1e84:	mov	w2, #0x3                   	// #3
    1e88:	ldr	x1, [sp, #24]
    1e8c:	ldr	x0, [sp, #48]
    1e90:	bl	13b0 <Perl_sv_upgrade@plt>
    1e94:	ldrb	w0, [sp, #39]
    1e98:	cmp	w0, #0x0
    1e9c:	b.eq	1eb8 <deRef_l+0x1c4>  // b.none
    1ea0:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    1ea4:	add	x2, x0, #0xe90
    1ea8:	ldr	x1, [sp, #24]
    1eac:	ldr	x0, [sp, #48]
    1eb0:	bl	13f0 <Perl_sv_setpv@plt>
    1eb4:	b	1efc <deRef_l+0x208>
    1eb8:	ldr	x0, [sp, #24]
    1ebc:	ldr	w1, [x0, #12]
    1ec0:	mov	w0, #0x8f00                	// #36608
    1ec4:	movk	w0, #0x39a1, lsl #16
    1ec8:	and	w0, w1, w0
    1ecc:	cmp	w0, #0x400
    1ed0:	b.ne	1ee8 <deRef_l+0x1f4>  // b.any
    1ed4:	ldr	x0, [sp, #24]
    1ed8:	ldr	x0, [x0]
    1edc:	ldr	x0, [x0, #16]
    1ee0:	str	x0, [sp, #40]
    1ee4:	b	1efc <deRef_l+0x208>
    1ee8:	add	x0, sp, #0x28
    1eec:	mov	x2, x0
    1ef0:	ldr	x1, [sp, #24]
    1ef4:	ldr	x0, [sp, #48]
    1ef8:	bl	1590 <Perl_sv_pvbyten_force@plt>
    1efc:	ldr	x0, [sp, #24]
    1f00:	mov	x1, x0
    1f04:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    1f08:	ldr	x0, [x0, #4048]
    1f0c:	ldr	x2, [sp, #56]
    1f10:	ldr	x0, [x0]
    1f14:	eor	x0, x2, x0
    1f18:	cmp	x0, #0x0
    1f1c:	b.eq	1f24 <deRef_l+0x230>  // b.none
    1f20:	bl	1470 <__stack_chk_fail@plt>
    1f24:	mov	x0, x1
    1f28:	ldp	x29, x30, [sp], #64
    1f2c:	ret

0000000000001f30 <constant>:
    1f30:	stp	x29, x30, [sp, #-48]!
    1f34:	mov	x29, sp
    1f38:	str	x0, [sp, #40]
    1f3c:	str	x1, [sp, #32]
    1f40:	str	x2, [sp, #24]
    1f44:	str	x3, [sp, #16]
    1f48:	ldr	x0, [sp, #24]
    1f4c:	cmp	x0, #0x13
    1f50:	b.eq	2454 <constant+0x524>  // b.none
    1f54:	ldr	x0, [sp, #24]
    1f58:	cmp	x0, #0x13
    1f5c:	b.hi	24a8 <constant+0x578>  // b.pmore
    1f60:	ldr	x0, [sp, #24]
    1f64:	cmp	x0, #0x11
    1f68:	b.eq	23c4 <constant+0x494>  // b.none
    1f6c:	ldr	x0, [sp, #24]
    1f70:	cmp	x0, #0x11
    1f74:	b.hi	24a8 <constant+0x578>  // b.pmore
    1f78:	ldr	x0, [sp, #24]
    1f7c:	cmp	x0, #0xf
    1f80:	b.eq	2334 <constant+0x404>  // b.none
    1f84:	ldr	x0, [sp, #24]
    1f88:	cmp	x0, #0xf
    1f8c:	b.hi	24a8 <constant+0x578>  // b.pmore
    1f90:	ldr	x0, [sp, #24]
    1f94:	cmp	x0, #0xe
    1f98:	b.eq	2304 <constant+0x3d4>  // b.none
    1f9c:	ldr	x0, [sp, #24]
    1fa0:	cmp	x0, #0xe
    1fa4:	b.hi	24a8 <constant+0x578>  // b.pmore
    1fa8:	ldr	x0, [sp, #24]
    1fac:	cmp	x0, #0xd
    1fb0:	b.eq	2274 <constant+0x344>  // b.none
    1fb4:	ldr	x0, [sp, #24]
    1fb8:	cmp	x0, #0xd
    1fbc:	b.hi	24a8 <constant+0x578>  // b.pmore
    1fc0:	ldr	x0, [sp, #24]
    1fc4:	cmp	x0, #0xc
    1fc8:	b.eq	21e4 <constant+0x2b4>  // b.none
    1fcc:	ldr	x0, [sp, #24]
    1fd0:	cmp	x0, #0xc
    1fd4:	b.hi	24a8 <constant+0x578>  // b.pmore
    1fd8:	ldr	x0, [sp, #24]
    1fdc:	cmp	x0, #0xb
    1fe0:	b.eq	2154 <constant+0x224>  // b.none
    1fe4:	ldr	x0, [sp, #24]
    1fe8:	cmp	x0, #0xb
    1fec:	b.hi	24a8 <constant+0x578>  // b.pmore
    1ff0:	ldr	x0, [sp, #24]
    1ff4:	cmp	x0, #0x9
    1ff8:	b.eq	20c4 <constant+0x194>  // b.none
    1ffc:	ldr	x0, [sp, #24]
    2000:	cmp	x0, #0x9
    2004:	b.hi	24a8 <constant+0x578>  // b.pmore
    2008:	ldr	x0, [sp, #24]
    200c:	cmp	x0, #0x8
    2010:	b.eq	2094 <constant+0x164>  // b.none
    2014:	ldr	x0, [sp, #24]
    2018:	cmp	x0, #0x8
    201c:	b.hi	24a8 <constant+0x578>  // b.pmore
    2020:	ldr	x0, [sp, #24]
    2024:	cmp	x0, #0x5
    2028:	b.eq	203c <constant+0x10c>  // b.none
    202c:	ldr	x0, [sp, #24]
    2030:	cmp	x0, #0x6
    2034:	b.eq	2068 <constant+0x138>  // b.none
    2038:	b	24a8 <constant+0x578>
    203c:	mov	x2, #0x5                   	// #5
    2040:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    2044:	add	x1, x0, #0xec0
    2048:	ldr	x0, [sp, #32]
    204c:	bl	14e0 <memcmp@plt>
    2050:	cmp	w0, #0x0
    2054:	b.ne	2484 <constant+0x554>  // b.any
    2058:	ldr	x0, [sp, #16]
    205c:	str	xzr, [x0]
    2060:	mov	w0, #0x3                   	// #3
    2064:	b	24ac <constant+0x57c>
    2068:	mov	x2, #0x6                   	// #6
    206c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    2070:	add	x1, x0, #0xec8
    2074:	ldr	x0, [sp, #32]
    2078:	bl	14e0 <memcmp@plt>
    207c:	cmp	w0, #0x0
    2080:	b.ne	248c <constant+0x55c>  // b.any
    2084:	ldr	x0, [sp, #16]
    2088:	str	xzr, [x0]
    208c:	mov	w0, #0x3                   	// #3
    2090:	b	24ac <constant+0x57c>
    2094:	mov	x2, #0x8                   	// #8
    2098:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    209c:	add	x1, x0, #0xed0
    20a0:	ldr	x0, [sp, #32]
    20a4:	bl	14e0 <memcmp@plt>
    20a8:	cmp	w0, #0x0
    20ac:	b.ne	2494 <constant+0x564>  // b.any
    20b0:	ldr	x0, [sp, #16]
    20b4:	mov	x1, #0x1                   	// #1
    20b8:	str	x1, [x0]
    20bc:	mov	w0, #0x3                   	// #3
    20c0:	b	24ac <constant+0x57c>
    20c4:	ldr	x0, [sp, #32]
    20c8:	add	x0, x0, #0x8
    20cc:	ldrb	w0, [x0]
    20d0:	cmp	w0, #0x48
    20d4:	b.eq	20e4 <constant+0x1b4>  // b.none
    20d8:	cmp	w0, #0x4b
    20dc:	b.eq	2114 <constant+0x1e4>  // b.none
    20e0:	b	24a8 <constant+0x578>
    20e4:	mov	x2, #0x8                   	// #8
    20e8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    20ec:	add	x1, x0, #0xee0
    20f0:	ldr	x0, [sp, #32]
    20f4:	bl	14e0 <memcmp@plt>
    20f8:	cmp	w0, #0x0
    20fc:	b.ne	2144 <constant+0x214>  // b.any
    2100:	ldr	x0, [sp, #16]
    2104:	mov	x1, #0x2                   	// #2
    2108:	str	x1, [x0]
    210c:	mov	w0, #0x3                   	// #3
    2110:	b	24ac <constant+0x57c>
    2114:	mov	x2, #0x8                   	// #8
    2118:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    211c:	add	x1, x0, #0xef0
    2120:	ldr	x0, [sp, #32]
    2124:	bl	14e0 <memcmp@plt>
    2128:	cmp	w0, #0x0
    212c:	b.ne	214c <constant+0x21c>  // b.any
    2130:	ldr	x0, [sp, #16]
    2134:	mov	x1, #0x1                   	// #1
    2138:	str	x1, [x0]
    213c:	mov	w0, #0x3                   	// #3
    2140:	b	24ac <constant+0x57c>
    2144:	nop
    2148:	b	24a8 <constant+0x578>
    214c:	nop
    2150:	b	24a8 <constant+0x578>
    2154:	ldr	x0, [sp, #32]
    2158:	add	x0, x0, #0x3
    215c:	ldrb	w0, [x0]
    2160:	cmp	w0, #0x46
    2164:	b.eq	2174 <constant+0x244>  // b.none
    2168:	cmp	w0, #0x49
    216c:	b.eq	21a4 <constant+0x274>  // b.none
    2170:	b	24a8 <constant+0x578>
    2174:	mov	x2, #0xb                   	// #11
    2178:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    217c:	add	x1, x0, #0xf00
    2180:	ldr	x0, [sp, #32]
    2184:	bl	14e0 <memcmp@plt>
    2188:	cmp	w0, #0x0
    218c:	b.ne	21d4 <constant+0x2a4>  // b.any
    2190:	ldr	x0, [sp, #16]
    2194:	mov	x1, #0x2                   	// #2
    2198:	str	x1, [x0]
    219c:	mov	w0, #0x3                   	// #3
    21a0:	b	24ac <constant+0x57c>
    21a4:	mov	x2, #0xb                   	// #11
    21a8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    21ac:	add	x1, x0, #0xf10
    21b0:	ldr	x0, [sp, #32]
    21b4:	bl	14e0 <memcmp@plt>
    21b8:	cmp	w0, #0x0
    21bc:	b.ne	21dc <constant+0x2ac>  // b.any
    21c0:	ldr	x0, [sp, #16]
    21c4:	mov	x1, #0xfffffffffffffffa    	// #-6
    21c8:	str	x1, [x0]
    21cc:	mov	w0, #0x3                   	// #3
    21d0:	b	24ac <constant+0x57c>
    21d4:	nop
    21d8:	b	24a8 <constant+0x578>
    21dc:	nop
    21e0:	b	24a8 <constant+0x578>
    21e4:	ldr	x0, [sp, #32]
    21e8:	add	x0, x0, #0x5
    21ec:	ldrb	w0, [x0]
    21f0:	cmp	w0, #0x4d
    21f4:	b.eq	2204 <constant+0x2d4>  // b.none
    21f8:	cmp	w0, #0x4e
    21fc:	b.eq	2234 <constant+0x304>  // b.none
    2200:	b	24a8 <constant+0x578>
    2204:	mov	x2, #0xc                   	// #12
    2208:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    220c:	add	x1, x0, #0xf20
    2210:	ldr	x0, [sp, #32]
    2214:	bl	14e0 <memcmp@plt>
    2218:	cmp	w0, #0x0
    221c:	b.ne	2264 <constant+0x334>  // b.any
    2220:	ldr	x0, [sp, #16]
    2224:	mov	x1, #0xfffffffffffffffd    	// #-3
    2228:	str	x1, [x0]
    222c:	mov	w0, #0x3                   	// #3
    2230:	b	24ac <constant+0x57c>
    2234:	mov	x2, #0xc                   	// #12
    2238:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    223c:	add	x1, x0, #0xf30
    2240:	ldr	x0, [sp, #32]
    2244:	bl	14e0 <memcmp@plt>
    2248:	cmp	w0, #0x0
    224c:	b.ne	226c <constant+0x33c>  // b.any
    2250:	ldr	x0, [sp, #16]
    2254:	mov	x1, #0x3                   	// #3
    2258:	str	x1, [x0]
    225c:	mov	w0, #0x3                   	// #3
    2260:	b	24ac <constant+0x57c>
    2264:	nop
    2268:	b	24a8 <constant+0x578>
    226c:	nop
    2270:	b	24a8 <constant+0x578>
    2274:	ldr	x0, [sp, #32]
    2278:	add	x0, x0, #0xb
    227c:	ldrb	w0, [x0]
    2280:	cmp	w0, #0x4e
    2284:	b.eq	2294 <constant+0x364>  // b.none
    2288:	cmp	w0, #0x4f
    228c:	b.eq	22c4 <constant+0x394>  // b.none
    2290:	b	24a8 <constant+0x578>
    2294:	mov	x2, #0xd                   	// #13
    2298:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    229c:	add	x1, x0, #0xf40
    22a0:	ldr	x0, [sp, #32]
    22a4:	bl	14e0 <memcmp@plt>
    22a8:	cmp	w0, #0x0
    22ac:	b.ne	22f4 <constant+0x3c4>  // b.any
    22b0:	ldr	x0, [sp, #16]
    22b4:	mov	x1, #0x4                   	// #4
    22b8:	str	x1, [x0]
    22bc:	mov	w0, #0x3                   	// #3
    22c0:	b	24ac <constant+0x57c>
    22c4:	mov	x2, #0xd                   	// #13
    22c8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    22cc:	add	x1, x0, #0xf50
    22d0:	ldr	x0, [sp, #32]
    22d4:	bl	14e0 <memcmp@plt>
    22d8:	cmp	w0, #0x0
    22dc:	b.ne	22fc <constant+0x3cc>  // b.any
    22e0:	ldr	x0, [sp, #16]
    22e4:	mov	x1, #0xfffffffffffffffc    	// #-4
    22e8:	str	x1, [x0]
    22ec:	mov	w0, #0x3                   	// #3
    22f0:	b	24ac <constant+0x57c>
    22f4:	nop
    22f8:	b	24a8 <constant+0x578>
    22fc:	nop
    2300:	b	24a8 <constant+0x578>
    2304:	mov	x2, #0xe                   	// #14
    2308:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    230c:	add	x1, x0, #0xf60
    2310:	ldr	x0, [sp, #32]
    2314:	bl	14e0 <memcmp@plt>
    2318:	cmp	w0, #0x0
    231c:	b.ne	249c <constant+0x56c>  // b.any
    2320:	ldr	x0, [sp, #16]
    2324:	mov	x1, #0xfffffffffffffffe    	// #-2
    2328:	str	x1, [x0]
    232c:	mov	w0, #0x3                   	// #3
    2330:	b	24ac <constant+0x57c>
    2334:	ldr	x0, [sp, #32]
    2338:	add	x0, x0, #0x8
    233c:	ldrb	w0, [x0]
    2340:	cmp	w0, #0x46
    2344:	b.eq	2354 <constant+0x424>  // b.none
    2348:	cmp	w0, #0x47
    234c:	b.eq	2384 <constant+0x454>  // b.none
    2350:	b	24a8 <constant+0x578>
    2354:	mov	x2, #0xf                   	// #15
    2358:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    235c:	add	x1, x0, #0xf70
    2360:	ldr	x0, [sp, #32]
    2364:	bl	14e0 <memcmp@plt>
    2368:	cmp	w0, #0x0
    236c:	b.ne	23b4 <constant+0x484>  // b.any
    2370:	ldr	x0, [sp, #16]
    2374:	mov	x1, #0xfffffffffffffff8    	// #-8
    2378:	str	x1, [x0]
    237c:	mov	w0, #0x3                   	// #3
    2380:	b	24ac <constant+0x57c>
    2384:	mov	x2, #0xf                   	// #15
    2388:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    238c:	add	x1, x0, #0xf80
    2390:	ldr	x0, [sp, #32]
    2394:	bl	14e0 <memcmp@plt>
    2398:	cmp	w0, #0x0
    239c:	b.ne	23bc <constant+0x48c>  // b.any
    23a0:	ldr	x0, [sp, #16]
    23a4:	mov	x1, #0xfffffffffffffff7    	// #-9
    23a8:	str	x1, [x0]
    23ac:	mov	w0, #0x3                   	// #3
    23b0:	b	24ac <constant+0x57c>
    23b4:	nop
    23b8:	b	24a8 <constant+0x578>
    23bc:	nop
    23c0:	b	24a8 <constant+0x578>
    23c4:	ldr	x0, [sp, #32]
    23c8:	add	x0, x0, #0xc
    23cc:	ldrb	w0, [x0]
    23d0:	cmp	w0, #0x44
    23d4:	b.eq	23e4 <constant+0x4b4>  // b.none
    23d8:	cmp	w0, #0x45
    23dc:	b.eq	2414 <constant+0x4e4>  // b.none
    23e0:	b	24a8 <constant+0x578>
    23e4:	mov	x2, #0x11                  	// #17
    23e8:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    23ec:	add	x1, x0, #0xf90
    23f0:	ldr	x0, [sp, #32]
    23f4:	bl	14e0 <memcmp@plt>
    23f8:	cmp	w0, #0x0
    23fc:	b.ne	2444 <constant+0x514>  // b.any
    2400:	ldr	x0, [sp, #16]
    2404:	mov	x1, #0xfffffffffffffff9    	// #-7
    2408:	str	x1, [x0]
    240c:	mov	w0, #0x3                   	// #3
    2410:	b	24ac <constant+0x57c>
    2414:	mov	x2, #0x11                  	// #17
    2418:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    241c:	add	x1, x0, #0xfa8
    2420:	ldr	x0, [sp, #32]
    2424:	bl	14e0 <memcmp@plt>
    2428:	cmp	w0, #0x0
    242c:	b.ne	244c <constant+0x51c>  // b.any
    2430:	ldr	x0, [sp, #16]
    2434:	mov	x1, #0xffffffffffffffff    	// #-1
    2438:	str	x1, [x0]
    243c:	mov	w0, #0x3                   	// #3
    2440:	b	24ac <constant+0x57c>
    2444:	nop
    2448:	b	24a8 <constant+0x578>
    244c:	nop
    2450:	b	24a8 <constant+0x578>
    2454:	mov	x2, #0x13                  	// #19
    2458:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    245c:	add	x1, x0, #0xfc0
    2460:	ldr	x0, [sp, #32]
    2464:	bl	14e0 <memcmp@plt>
    2468:	cmp	w0, #0x0
    246c:	b.ne	24a4 <constant+0x574>  // b.any
    2470:	ldr	x0, [sp, #16]
    2474:	mov	x1, #0xfffffffffffffffb    	// #-5
    2478:	str	x1, [x0]
    247c:	mov	w0, #0x3                   	// #3
    2480:	b	24ac <constant+0x57c>
    2484:	nop
    2488:	b	24a8 <constant+0x578>
    248c:	nop
    2490:	b	24a8 <constant+0x578>
    2494:	nop
    2498:	b	24a8 <constant+0x578>
    249c:	nop
    24a0:	b	24a8 <constant+0x578>
    24a4:	nop
    24a8:	mov	w0, #0x1                   	// #1
    24ac:	ldp	x29, x30, [sp], #48
    24b0:	ret

00000000000024b4 <XS_Compress__Raw__Bzip2_constant>:
    24b4:	stp	x29, x30, [sp, #-128]!
    24b8:	mov	x29, sp
    24bc:	str	x0, [sp, #24]
    24c0:	str	x1, [sp, #16]
    24c4:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    24c8:	ldr	x0, [x0, #4048]
    24cc:	ldr	x1, [x0]
    24d0:	str	x1, [sp, #120]
    24d4:	mov	x1, #0x0                   	// #0
    24d8:	ldr	x0, [sp, #24]
    24dc:	ldr	x0, [x0]
    24e0:	str	x0, [sp, #72]
    24e4:	ldr	x0, [sp, #24]
    24e8:	bl	1790 <S_POPMARK>
    24ec:	str	w0, [sp, #44]
    24f0:	ldr	x0, [sp, #24]
    24f4:	ldr	x1, [x0, #24]
    24f8:	ldr	w0, [sp, #44]
    24fc:	add	w2, w0, #0x1
    2500:	str	w2, [sp, #44]
    2504:	sxtw	x0, w0
    2508:	lsl	x0, x0, #3
    250c:	add	x0, x1, x0
    2510:	str	x0, [sp, #80]
    2514:	ldr	x1, [sp, #72]
    2518:	ldr	x0, [sp, #80]
    251c:	sub	x0, x1, x0
    2520:	asr	x0, x0, #3
    2524:	str	w0, [sp, #48]
    2528:	ldr	w0, [sp, #48]
    252c:	cmp	w0, #0x1
    2530:	b.eq	2544 <XS_Compress__Raw__Bzip2_constant+0x90>  // b.none
    2534:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    2538:	add	x1, x0, #0xfd8
    253c:	ldr	x0, [sp, #16]
    2540:	bl	1490 <Perl_croak_xs_usage@plt>
    2544:	ldrsw	x0, [sp, #48]
    2548:	lsl	x0, x0, #3
    254c:	neg	x0, x0
    2550:	ldr	x1, [sp, #72]
    2554:	add	x0, x1, x0
    2558:	str	x0, [sp, #72]
    255c:	ldr	x0, [sp, #24]
    2560:	ldr	x0, [x0, #8]
    2564:	ldrb	w0, [x0, #35]
    2568:	and	w0, w0, #0x4
    256c:	cmp	w0, #0x0
    2570:	b.eq	2598 <XS_Compress__Raw__Bzip2_constant+0xe4>  // b.none
    2574:	ldr	x0, [sp, #24]
    2578:	ldr	x1, [x0, #16]
    257c:	ldr	x0, [sp, #24]
    2580:	ldr	x0, [x0, #8]
    2584:	ldr	x0, [x0, #24]
    2588:	lsl	x0, x0, #3
    258c:	add	x0, x1, x0
    2590:	ldr	x0, [x0]
    2594:	b	25a0 <XS_Compress__Raw__Bzip2_constant+0xec>
    2598:	ldr	x0, [sp, #24]
    259c:	bl	15f0 <Perl_sv_newmortal@plt>
    25a0:	str	x0, [sp, #88]
    25a4:	str	xzr, [sp, #64]
    25a8:	ldr	x0, [sp, #24]
    25ac:	ldr	x1, [x0, #24]
    25b0:	ldrsw	x0, [sp, #44]
    25b4:	lsl	x0, x0, #3
    25b8:	add	x0, x1, x0
    25bc:	ldr	x0, [x0]
    25c0:	str	x0, [sp, #96]
    25c4:	ldr	x0, [sp, #96]
    25c8:	ldr	w1, [x0, #12]
    25cc:	mov	w0, #0x400                 	// #1024
    25d0:	movk	w0, #0x20, lsl #16
    25d4:	and	w0, w1, w0
    25d8:	cmp	w0, #0x400
    25dc:	b.ne	25fc <XS_Compress__Raw__Bzip2_constant+0x148>  // b.any
    25e0:	ldr	x0, [sp, #96]
    25e4:	ldr	x0, [x0]
    25e8:	ldr	x0, [x0, #16]
    25ec:	str	x0, [sp, #56]
    25f0:	ldr	x0, [sp, #96]
    25f4:	ldr	x0, [x0, #16]
    25f8:	b	2614 <XS_Compress__Raw__Bzip2_constant+0x160>
    25fc:	add	x0, sp, #0x38
    2600:	mov	w3, #0x2                   	// #2
    2604:	mov	x2, x0
    2608:	ldr	x1, [sp, #96]
    260c:	ldr	x0, [sp, #24]
    2610:	bl	1420 <Perl_sv_2pv_flags@plt>
    2614:	str	x0, [sp, #104]
    2618:	ldr	x0, [sp, #56]
    261c:	add	x1, sp, #0x40
    2620:	mov	x3, x1
    2624:	mov	x2, x0
    2628:	ldr	x1, [sp, #104]
    262c:	ldr	x0, [sp, #24]
    2630:	bl	1f30 <constant>
    2634:	str	w0, [sp, #52]
    2638:	ldr	w0, [sp, #52]
    263c:	cmp	w0, #0x3
    2640:	b.eq	26e4 <XS_Compress__Raw__Bzip2_constant+0x230>  // b.none
    2644:	ldr	w0, [sp, #52]
    2648:	cmp	w0, #0x3
    264c:	b.gt	27ec <XS_Compress__Raw__Bzip2_constant+0x338>
    2650:	ldr	w0, [sp, #52]
    2654:	cmp	w0, #0x1
    2658:	b.eq	266c <XS_Compress__Raw__Bzip2_constant+0x1b8>  // b.none
    265c:	ldr	w0, [sp, #52]
    2660:	cmp	w0, #0x2
    2664:	b.eq	26a8 <XS_Compress__Raw__Bzip2_constant+0x1f4>  // b.none
    2668:	b	27ec <XS_Compress__Raw__Bzip2_constant+0x338>
    266c:	ldr	x1, [sp, #104]
    2670:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    2674:	add	x0, x0, #0xfe0
    2678:	bl	15a0 <Perl_newSVpvf_nocontext@plt>
    267c:	mov	x1, x0
    2680:	ldr	x0, [sp, #24]
    2684:	bl	1550 <Perl_sv_2mortal@plt>
    2688:	str	x0, [sp, #96]
    268c:	ldr	x0, [sp, #72]
    2690:	add	x0, x0, #0x8
    2694:	str	x0, [sp, #72]
    2698:	ldr	x0, [sp, #72]
    269c:	ldr	x1, [sp, #96]
    26a0:	str	x1, [x0]
    26a4:	b	2828 <XS_Compress__Raw__Bzip2_constant+0x374>
    26a8:	ldr	x1, [sp, #104]
    26ac:	adrp	x0, 8000 <my_z_errmsg+0x630>
    26b0:	add	x0, x0, #0x0
    26b4:	bl	15a0 <Perl_newSVpvf_nocontext@plt>
    26b8:	mov	x1, x0
    26bc:	ldr	x0, [sp, #24]
    26c0:	bl	1550 <Perl_sv_2mortal@plt>
    26c4:	str	x0, [sp, #96]
    26c8:	ldr	x0, [sp, #72]
    26cc:	add	x0, x0, #0x8
    26d0:	str	x0, [sp, #72]
    26d4:	ldr	x0, [sp, #72]
    26d8:	ldr	x1, [sp, #96]
    26dc:	str	x1, [x0]
    26e0:	b	2828 <XS_Compress__Raw__Bzip2_constant+0x374>
    26e4:	ldr	x0, [sp, #24]
    26e8:	ldr	x1, [x0, #32]
    26ec:	ldr	x0, [sp, #72]
    26f0:	sub	x0, x1, x0
    26f4:	cmp	x0, #0x8
    26f8:	cset	w0, le
    26fc:	and	w0, w0, #0xff
    2700:	and	x0, x0, #0xff
    2704:	cmp	x0, #0x0
    2708:	b.eq	2724 <XS_Compress__Raw__Bzip2_constant+0x270>  // b.none
    270c:	mov	x3, #0x2                   	// #2
    2710:	ldr	x2, [sp, #72]
    2714:	ldr	x1, [sp, #72]
    2718:	ldr	x0, [sp, #24]
    271c:	bl	1350 <Perl_stack_grow@plt>
    2720:	str	x0, [sp, #72]
    2724:	ldr	x0, [sp, #72]
    2728:	add	x0, x0, #0x8
    272c:	str	x0, [sp, #72]
    2730:	ldr	x0, [sp, #24]
    2734:	add	x1, x0, #0x150
    2738:	ldr	x0, [sp, #72]
    273c:	str	x1, [x0]
    2740:	ldr	x0, [sp, #64]
    2744:	str	x0, [sp, #112]
    2748:	ldr	x0, [sp, #88]
    274c:	ldr	w1, [x0, #12]
    2750:	mov	w0, #0x8ff                 	// #2303
    2754:	movk	w0, #0x9981, lsl #16
    2758:	and	w0, w1, w0
    275c:	cmp	w0, #0x1
    2760:	cset	w0, eq  // eq = none
    2764:	and	w0, w0, #0xff
    2768:	mov	w1, w0
    276c:	ldr	x0, [sp, #24]
    2770:	ldrb	w0, [x0, #185]
    2774:	eor	w0, w0, #0x1
    2778:	and	w0, w0, #0xff
    277c:	and	w0, w1, w0
    2780:	cmp	w0, #0x0
    2784:	cset	w0, ne  // ne = any
    2788:	and	w0, w0, #0xff
    278c:	and	x0, x0, #0xff
    2790:	cmp	x0, #0x0
    2794:	b.eq	27c0 <XS_Compress__Raw__Bzip2_constant+0x30c>  // b.none
    2798:	ldr	x0, [sp, #88]
    279c:	ldr	w1, [x0, #12]
    27a0:	mov	w0, #0x1100                	// #4352
    27a4:	orr	w1, w1, w0
    27a8:	ldr	x0, [sp, #88]
    27ac:	str	w1, [x0, #12]
    27b0:	ldr	x0, [sp, #88]
    27b4:	ldr	x1, [sp, #112]
    27b8:	str	x1, [x0, #16]
    27bc:	b	27d0 <XS_Compress__Raw__Bzip2_constant+0x31c>
    27c0:	ldr	x2, [sp, #112]
    27c4:	ldr	x1, [sp, #88]
    27c8:	ldr	x0, [sp, #24]
    27cc:	bl	13c0 <Perl_sv_setiv_mg@plt>
    27d0:	ldr	x0, [sp, #72]
    27d4:	add	x0, x0, #0x8
    27d8:	str	x0, [sp, #72]
    27dc:	ldr	x0, [sp, #72]
    27e0:	ldr	x1, [sp, #88]
    27e4:	str	x1, [x0]
    27e8:	b	2828 <XS_Compress__Raw__Bzip2_constant+0x374>
    27ec:	ldr	x2, [sp, #104]
    27f0:	ldr	w1, [sp, #52]
    27f4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    27f8:	add	x0, x0, #0x38
    27fc:	bl	15a0 <Perl_newSVpvf_nocontext@plt>
    2800:	mov	x1, x0
    2804:	ldr	x0, [sp, #24]
    2808:	bl	1550 <Perl_sv_2mortal@plt>
    280c:	str	x0, [sp, #96]
    2810:	ldr	x0, [sp, #72]
    2814:	add	x0, x0, #0x8
    2818:	str	x0, [sp, #72]
    281c:	ldr	x0, [sp, #72]
    2820:	ldr	x1, [sp, #96]
    2824:	str	x1, [x0]
    2828:	ldr	x0, [sp, #24]
    282c:	ldr	x1, [sp, #72]
    2830:	str	x1, [x0]
    2834:	nop
    2838:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    283c:	ldr	x0, [x0, #4048]
    2840:	ldr	x1, [sp, #120]
    2844:	ldr	x0, [x0]
    2848:	eor	x0, x1, x0
    284c:	cmp	x0, #0x0
    2850:	b.eq	2858 <XS_Compress__Raw__Bzip2_constant+0x3a4>  // b.none
    2854:	bl	1470 <__stack_chk_fail@plt>
    2858:	ldp	x29, x30, [sp], #128
    285c:	ret

0000000000002860 <XS_Compress__Raw__Bzip2_bzlibversion>:
    2860:	stp	x29, x30, [sp, #-80]!
    2864:	mov	x29, sp
    2868:	str	x0, [sp, #24]
    286c:	str	x1, [sp, #16]
    2870:	ldr	x0, [sp, #24]
    2874:	ldr	x0, [x0]
    2878:	str	x0, [sp, #40]
    287c:	ldr	x0, [sp, #24]
    2880:	bl	1790 <S_POPMARK>
    2884:	str	w0, [sp, #32]
    2888:	ldr	x0, [sp, #24]
    288c:	ldr	x1, [x0, #24]
    2890:	ldr	w0, [sp, #32]
    2894:	add	w2, w0, #0x1
    2898:	str	w2, [sp, #32]
    289c:	sxtw	x0, w0
    28a0:	lsl	x0, x0, #3
    28a4:	add	x0, x1, x0
    28a8:	str	x0, [sp, #48]
    28ac:	ldr	x1, [sp, #40]
    28b0:	ldr	x0, [sp, #48]
    28b4:	sub	x0, x1, x0
    28b8:	asr	x0, x0, #3
    28bc:	str	w0, [sp, #36]
    28c0:	ldr	w0, [sp, #36]
    28c4:	cmp	w0, #0x0
    28c8:	b.eq	28dc <XS_Compress__Raw__Bzip2_bzlibversion+0x7c>  // b.none
    28cc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    28d0:	add	x1, x0, #0xe90
    28d4:	ldr	x0, [sp, #16]
    28d8:	bl	1490 <Perl_croak_xs_usage@plt>
    28dc:	ldr	x0, [sp, #24]
    28e0:	ldr	x0, [x0, #8]
    28e4:	ldrb	w0, [x0, #35]
    28e8:	and	w0, w0, #0x4
    28ec:	cmp	w0, #0x0
    28f0:	b.eq	2918 <XS_Compress__Raw__Bzip2_bzlibversion+0xb8>  // b.none
    28f4:	ldr	x0, [sp, #24]
    28f8:	ldr	x1, [x0, #16]
    28fc:	ldr	x0, [sp, #24]
    2900:	ldr	x0, [x0, #8]
    2904:	ldr	x0, [x0, #24]
    2908:	lsl	x0, x0, #3
    290c:	add	x0, x1, x0
    2910:	ldr	x0, [x0]
    2914:	b	2920 <XS_Compress__Raw__Bzip2_bzlibversion+0xc0>
    2918:	ldr	x0, [sp, #24]
    291c:	bl	15f0 <Perl_sv_newmortal@plt>
    2920:	str	x0, [sp, #56]
    2924:	bl	1380 <BZ2_bzlibVersion@plt>
    2928:	str	x0, [sp, #64]
    292c:	ldr	x2, [sp, #64]
    2930:	ldr	x1, [sp, #56]
    2934:	ldr	x0, [sp, #24]
    2938:	bl	13f0 <Perl_sv_setpv@plt>
    293c:	ldr	x0, [sp, #24]
    2940:	ldr	x1, [x0, #24]
    2944:	ldrsw	x0, [sp, #32]
    2948:	lsl	x0, x0, #3
    294c:	sub	x0, x0, #0x8
    2950:	add	x0, x1, x0
    2954:	str	x0, [sp, #40]
    2958:	ldr	x0, [sp, #56]
    295c:	ldr	w0, [x0, #12]
    2960:	lsr	w0, w0, #22
    2964:	mov	w0, w0
    2968:	and	x0, x0, #0x1
    296c:	cmp	x0, #0x0
    2970:	b.eq	2980 <XS_Compress__Raw__Bzip2_bzlibversion+0x120>  // b.none
    2974:	ldr	x1, [sp, #56]
    2978:	ldr	x0, [sp, #24]
    297c:	bl	1520 <Perl_mg_set@plt>
    2980:	ldr	x0, [sp, #40]
    2984:	add	x0, x0, #0x8
    2988:	str	x0, [sp, #40]
    298c:	ldr	x0, [sp, #40]
    2990:	ldr	x1, [sp, #56]
    2994:	str	x1, [x0]
    2998:	mov	x0, #0x1                   	// #1
    299c:	str	x0, [sp, #72]
    29a0:	ldr	x0, [sp, #24]
    29a4:	ldr	x1, [x0, #24]
    29a8:	ldrsw	x2, [sp, #32]
    29ac:	ldr	x0, [sp, #72]
    29b0:	add	x0, x2, x0
    29b4:	lsl	x0, x0, #3
    29b8:	sub	x0, x0, #0x8
    29bc:	add	x1, x1, x0
    29c0:	ldr	x0, [sp, #24]
    29c4:	str	x1, [x0]
    29c8:	nop
    29cc:	ldp	x29, x30, [sp], #80
    29d0:	ret

00000000000029d4 <XS_Compress__Raw__Bzip2_new>:
    29d4:	stp	x29, x30, [sp, #-112]!
    29d8:	mov	x29, sp
    29dc:	str	x0, [sp, #24]
    29e0:	str	x1, [sp, #16]
    29e4:	ldr	x0, [sp, #24]
    29e8:	ldr	x0, [x0]
    29ec:	str	x0, [sp, #64]
    29f0:	ldr	x0, [sp, #24]
    29f4:	bl	1790 <S_POPMARK>
    29f8:	str	w0, [sp, #52]
    29fc:	ldr	x0, [sp, #24]
    2a00:	ldr	x1, [x0, #24]
    2a04:	ldr	w0, [sp, #52]
    2a08:	add	w2, w0, #0x1
    2a0c:	str	w2, [sp, #52]
    2a10:	sxtw	x0, w0
    2a14:	lsl	x0, x0, #3
    2a18:	add	x0, x1, x0
    2a1c:	str	x0, [sp, #88]
    2a20:	ldr	x1, [sp, #64]
    2a24:	ldr	x0, [sp, #88]
    2a28:	sub	x0, x1, x0
    2a2c:	asr	x0, x0, #3
    2a30:	str	w0, [sp, #56]
    2a34:	ldr	w0, [sp, #56]
    2a38:	cmp	w0, #0x0
    2a3c:	b.le	2a4c <XS_Compress__Raw__Bzip2_new+0x78>
    2a40:	ldr	w0, [sp, #56]
    2a44:	cmp	w0, #0x5
    2a48:	b.le	2a5c <XS_Compress__Raw__Bzip2_new+0x88>
    2a4c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    2a50:	add	x1, x0, #0x78
    2a54:	ldr	x0, [sp, #16]
    2a58:	bl	1490 <Perl_croak_xs_usage@plt>
    2a5c:	ldrsw	x0, [sp, #56]
    2a60:	lsl	x0, x0, #3
    2a64:	neg	x0, x0
    2a68:	ldr	x1, [sp, #64]
    2a6c:	add	x0, x1, x0
    2a70:	str	x0, [sp, #64]
    2a74:	ldr	x0, [sp, #24]
    2a78:	ldr	x1, [x0, #24]
    2a7c:	ldrsw	x0, [sp, #52]
    2a80:	lsl	x0, x0, #3
    2a84:	add	x0, x1, x0
    2a88:	ldr	x0, [x0]
    2a8c:	ldr	w0, [x0, #12]
    2a90:	and	w0, w0, #0xff00
    2a94:	cmp	w0, #0x0
    2a98:	b.eq	2b1c <XS_Compress__Raw__Bzip2_new+0x148>  // b.none
    2a9c:	ldr	x0, [sp, #24]
    2aa0:	ldr	x1, [x0, #24]
    2aa4:	ldrsw	x0, [sp, #52]
    2aa8:	lsl	x0, x0, #3
    2aac:	add	x0, x1, x0
    2ab0:	ldr	x0, [x0]
    2ab4:	ldr	w1, [x0, #12]
    2ab8:	mov	w0, #0x400                 	// #1024
    2abc:	movk	w0, #0x2020, lsl #16
    2ac0:	and	w0, w1, w0
    2ac4:	cmp	w0, #0x400
    2ac8:	b.ne	2aec <XS_Compress__Raw__Bzip2_new+0x118>  // b.any
    2acc:	ldr	x0, [sp, #24]
    2ad0:	ldr	x1, [x0, #24]
    2ad4:	ldrsw	x0, [sp, #52]
    2ad8:	lsl	x0, x0, #3
    2adc:	add	x0, x1, x0
    2ae0:	ldr	x0, [x0]
    2ae4:	ldr	x0, [x0, #16]
    2ae8:	b	2b14 <XS_Compress__Raw__Bzip2_new+0x140>
    2aec:	ldr	x0, [sp, #24]
    2af0:	ldr	x1, [x0, #24]
    2af4:	ldrsw	x0, [sp, #52]
    2af8:	lsl	x0, x0, #3
    2afc:	add	x0, x1, x0
    2b00:	ldr	x0, [x0]
    2b04:	mov	x2, #0x0                   	// #0
    2b08:	mov	x1, x0
    2b0c:	ldr	x0, [sp, #24]
    2b10:	bl	1400 <Perl_sv_2pvbyte@plt>
    2b14:	str	x0, [sp, #72]
    2b18:	b	2b20 <XS_Compress__Raw__Bzip2_new+0x14c>
    2b1c:	str	xzr, [sp, #72]
    2b20:	ldr	w0, [sp, #56]
    2b24:	cmp	w0, #0x1
    2b28:	b.gt	2b38 <XS_Compress__Raw__Bzip2_new+0x164>
    2b2c:	mov	w0, #0x1                   	// #1
    2b30:	str	w0, [sp, #32]
    2b34:	b	2bc4 <XS_Compress__Raw__Bzip2_new+0x1f0>
    2b38:	ldr	x0, [sp, #24]
    2b3c:	ldr	x1, [x0, #24]
    2b40:	ldrsw	x0, [sp, #52]
    2b44:	add	x0, x0, #0x1
    2b48:	lsl	x0, x0, #3
    2b4c:	add	x0, x1, x0
    2b50:	ldr	x0, [x0]
    2b54:	ldr	w1, [x0, #12]
    2b58:	mov	w0, #0x100                 	// #256
    2b5c:	movk	w0, #0x20, lsl #16
    2b60:	and	w0, w1, w0
    2b64:	cmp	w0, #0x100
    2b68:	b.ne	2b94 <XS_Compress__Raw__Bzip2_new+0x1c0>  // b.any
    2b6c:	ldr	x0, [sp, #24]
    2b70:	ldr	x1, [x0, #24]
    2b74:	ldrsw	x0, [sp, #52]
    2b78:	add	x0, x0, #0x1
    2b7c:	lsl	x0, x0, #3
    2b80:	add	x0, x1, x0
    2b84:	ldr	x0, [x0]
    2b88:	ldr	x0, [x0]
    2b8c:	ldr	x0, [x0, #32]
    2b90:	b	2bc0 <XS_Compress__Raw__Bzip2_new+0x1ec>
    2b94:	ldr	x0, [sp, #24]
    2b98:	ldr	x1, [x0, #24]
    2b9c:	ldrsw	x0, [sp, #52]
    2ba0:	add	x0, x0, #0x1
    2ba4:	lsl	x0, x0, #3
    2ba8:	add	x0, x1, x0
    2bac:	ldr	x0, [x0]
    2bb0:	mov	w2, #0x2                   	// #2
    2bb4:	mov	x1, x0
    2bb8:	ldr	x0, [sp, #24]
    2bbc:	bl	1320 <Perl_sv_2iv_flags@plt>
    2bc0:	str	w0, [sp, #32]
    2bc4:	ldr	w0, [sp, #56]
    2bc8:	cmp	w0, #0x2
    2bcc:	b.gt	2bdc <XS_Compress__Raw__Bzip2_new+0x208>
    2bd0:	mov	w0, #0x1                   	// #1
    2bd4:	str	w0, [sp, #36]
    2bd8:	b	2c68 <XS_Compress__Raw__Bzip2_new+0x294>
    2bdc:	ldr	x0, [sp, #24]
    2be0:	ldr	x1, [x0, #24]
    2be4:	ldrsw	x0, [sp, #52]
    2be8:	add	x0, x0, #0x2
    2bec:	lsl	x0, x0, #3
    2bf0:	add	x0, x1, x0
    2bf4:	ldr	x0, [x0]
    2bf8:	ldr	w1, [x0, #12]
    2bfc:	mov	w0, #0x100                 	// #256
    2c00:	movk	w0, #0x20, lsl #16
    2c04:	and	w0, w1, w0
    2c08:	cmp	w0, #0x100
    2c0c:	b.ne	2c38 <XS_Compress__Raw__Bzip2_new+0x264>  // b.any
    2c10:	ldr	x0, [sp, #24]
    2c14:	ldr	x1, [x0, #24]
    2c18:	ldrsw	x0, [sp, #52]
    2c1c:	add	x0, x0, #0x2
    2c20:	lsl	x0, x0, #3
    2c24:	add	x0, x1, x0
    2c28:	ldr	x0, [x0]
    2c2c:	ldr	x0, [x0]
    2c30:	ldr	x0, [x0, #32]
    2c34:	b	2c64 <XS_Compress__Raw__Bzip2_new+0x290>
    2c38:	ldr	x0, [sp, #24]
    2c3c:	ldr	x1, [x0, #24]
    2c40:	ldrsw	x0, [sp, #52]
    2c44:	add	x0, x0, #0x2
    2c48:	lsl	x0, x0, #3
    2c4c:	add	x0, x1, x0
    2c50:	ldr	x0, [x0]
    2c54:	mov	w2, #0x2                   	// #2
    2c58:	mov	x1, x0
    2c5c:	ldr	x0, [sp, #24]
    2c60:	bl	1320 <Perl_sv_2iv_flags@plt>
    2c64:	str	w0, [sp, #36]
    2c68:	ldr	w0, [sp, #56]
    2c6c:	cmp	w0, #0x3
    2c70:	b.gt	2c7c <XS_Compress__Raw__Bzip2_new+0x2a8>
    2c74:	str	wzr, [sp, #40]
    2c78:	b	2d08 <XS_Compress__Raw__Bzip2_new+0x334>
    2c7c:	ldr	x0, [sp, #24]
    2c80:	ldr	x1, [x0, #24]
    2c84:	ldrsw	x0, [sp, #52]
    2c88:	add	x0, x0, #0x3
    2c8c:	lsl	x0, x0, #3
    2c90:	add	x0, x1, x0
    2c94:	ldr	x0, [x0]
    2c98:	ldr	w1, [x0, #12]
    2c9c:	mov	w0, #0x100                 	// #256
    2ca0:	movk	w0, #0x20, lsl #16
    2ca4:	and	w0, w1, w0
    2ca8:	cmp	w0, #0x100
    2cac:	b.ne	2cd8 <XS_Compress__Raw__Bzip2_new+0x304>  // b.any
    2cb0:	ldr	x0, [sp, #24]
    2cb4:	ldr	x1, [x0, #24]
    2cb8:	ldrsw	x0, [sp, #52]
    2cbc:	add	x0, x0, #0x3
    2cc0:	lsl	x0, x0, #3
    2cc4:	add	x0, x1, x0
    2cc8:	ldr	x0, [x0]
    2ccc:	ldr	x0, [x0]
    2cd0:	ldr	x0, [x0, #32]
    2cd4:	b	2d04 <XS_Compress__Raw__Bzip2_new+0x330>
    2cd8:	ldr	x0, [sp, #24]
    2cdc:	ldr	x1, [x0, #24]
    2ce0:	ldrsw	x0, [sp, #52]
    2ce4:	add	x0, x0, #0x3
    2ce8:	lsl	x0, x0, #3
    2cec:	add	x0, x1, x0
    2cf0:	ldr	x0, [x0]
    2cf4:	mov	w2, #0x2                   	// #2
    2cf8:	mov	x1, x0
    2cfc:	ldr	x0, [sp, #24]
    2d00:	bl	1320 <Perl_sv_2iv_flags@plt>
    2d04:	str	w0, [sp, #40]
    2d08:	ldr	w0, [sp, #56]
    2d0c:	cmp	w0, #0x4
    2d10:	b.gt	2d1c <XS_Compress__Raw__Bzip2_new+0x348>
    2d14:	str	wzr, [sp, #44]
    2d18:	b	2da8 <XS_Compress__Raw__Bzip2_new+0x3d4>
    2d1c:	ldr	x0, [sp, #24]
    2d20:	ldr	x1, [x0, #24]
    2d24:	ldrsw	x0, [sp, #52]
    2d28:	add	x0, x0, #0x4
    2d2c:	lsl	x0, x0, #3
    2d30:	add	x0, x1, x0
    2d34:	ldr	x0, [x0]
    2d38:	ldr	w1, [x0, #12]
    2d3c:	mov	w0, #0x100                 	// #256
    2d40:	movk	w0, #0x20, lsl #16
    2d44:	and	w0, w1, w0
    2d48:	cmp	w0, #0x100
    2d4c:	b.ne	2d78 <XS_Compress__Raw__Bzip2_new+0x3a4>  // b.any
    2d50:	ldr	x0, [sp, #24]
    2d54:	ldr	x1, [x0, #24]
    2d58:	ldrsw	x0, [sp, #52]
    2d5c:	add	x0, x0, #0x4
    2d60:	lsl	x0, x0, #3
    2d64:	add	x0, x1, x0
    2d68:	ldr	x0, [x0]
    2d6c:	ldr	x0, [x0]
    2d70:	ldr	x0, [x0, #32]
    2d74:	b	2da4 <XS_Compress__Raw__Bzip2_new+0x3d0>
    2d78:	ldr	x0, [sp, #24]
    2d7c:	ldr	x1, [x0, #24]
    2d80:	ldrsw	x0, [sp, #52]
    2d84:	add	x0, x0, #0x4
    2d88:	lsl	x0, x0, #3
    2d8c:	add	x0, x1, x0
    2d90:	ldr	x0, [x0]
    2d94:	mov	w2, #0x2                   	// #2
    2d98:	mov	x1, x0
    2d9c:	ldr	x0, [sp, #24]
    2da0:	bl	1320 <Perl_sv_2iv_flags@plt>
    2da4:	str	w0, [sp, #44]
    2da8:	bl	1b54 <InitStream>
    2dac:	str	x0, [sp, #80]
    2db0:	ldr	x0, [sp, #80]
    2db4:	cmp	x0, #0x0
    2db8:	b.eq	2e30 <XS_Compress__Raw__Bzip2_new+0x45c>  // b.none
    2dbc:	ldr	x0, [sp, #80]
    2dc0:	add	x0, x0, #0x8
    2dc4:	ldr	w3, [sp, #40]
    2dc8:	ldr	w2, [sp, #44]
    2dcc:	ldr	w1, [sp, #36]
    2dd0:	bl	1440 <BZ2_bzCompressInit@plt>
    2dd4:	str	w0, [sp, #48]
    2dd8:	ldr	w0, [sp, #48]
    2ddc:	cmp	w0, #0x0
    2de0:	b.eq	2df4 <XS_Compress__Raw__Bzip2_new+0x420>  // b.none
    2de4:	ldr	x0, [sp, #80]
    2de8:	bl	1570 <Perl_safesysfree@plt>
    2dec:	str	xzr, [sp, #80]
    2df0:	b	2e38 <XS_Compress__Raw__Bzip2_new+0x464>
    2df4:	str	wzr, [sp, #60]
    2df8:	ldr	w0, [sp, #32]
    2dfc:	cmp	w0, #0x0
    2e00:	b.eq	2e10 <XS_Compress__Raw__Bzip2_new+0x43c>  // b.none
    2e04:	ldr	w0, [sp, #60]
    2e08:	orr	w0, w0, #0x1
    2e0c:	str	w0, [sp, #60]
    2e10:	ldr	w0, [sp, #32]
    2e14:	cmp	w0, #0x0
    2e18:	cset	w0, ne  // ne = any
    2e1c:	and	w0, w0, #0xff
    2e20:	mov	w1, w0
    2e24:	ldr	x0, [sp, #80]
    2e28:	bl	1b84 <PostInitStream>
    2e2c:	b	2e38 <XS_Compress__Raw__Bzip2_new+0x464>
    2e30:	mov	w0, #0xfffffffd            	// #-3
    2e34:	str	w0, [sp, #48]
    2e38:	ldr	x0, [sp, #24]
    2e3c:	bl	15f0 <Perl_sv_newmortal@plt>
    2e40:	ldr	x3, [sp, #80]
    2e44:	ldr	x2, [sp, #72]
    2e48:	mov	x1, x0
    2e4c:	ldr	x0, [sp, #24]
    2e50:	bl	1310 <Perl_sv_setref_pv@plt>
    2e54:	str	x0, [sp, #96]
    2e58:	ldr	x0, [sp, #24]
    2e5c:	ldr	x1, [x0, #32]
    2e60:	ldr	x0, [sp, #64]
    2e64:	sub	x0, x1, x0
    2e68:	cmp	x0, #0x0
    2e6c:	cset	w0, le
    2e70:	and	w0, w0, #0xff
    2e74:	and	x0, x0, #0xff
    2e78:	cmp	x0, #0x0
    2e7c:	b.eq	2e98 <XS_Compress__Raw__Bzip2_new+0x4c4>  // b.none
    2e80:	mov	x3, #0x1                   	// #1
    2e84:	ldr	x2, [sp, #64]
    2e88:	ldr	x1, [sp, #64]
    2e8c:	ldr	x0, [sp, #24]
    2e90:	bl	1350 <Perl_stack_grow@plt>
    2e94:	str	x0, [sp, #64]
    2e98:	ldr	x0, [sp, #64]
    2e9c:	add	x0, x0, #0x8
    2ea0:	str	x0, [sp, #64]
    2ea4:	ldr	x0, [sp, #64]
    2ea8:	ldr	x1, [sp, #96]
    2eac:	str	x1, [x0]
    2eb0:	ldr	x0, [sp, #24]
    2eb4:	ldr	x0, [x0, #8]
    2eb8:	ldrb	w0, [x0, #34]
    2ebc:	and	w0, w0, #0x3
    2ec0:	cmp	w0, #0x0
    2ec4:	b.eq	2ee8 <XS_Compress__Raw__Bzip2_new+0x514>  // b.none
    2ec8:	ldr	x0, [sp, #24]
    2ecc:	ldr	x0, [x0, #8]
    2ed0:	ldrb	w0, [x0, #34]
    2ed4:	and	w0, w0, #0x3
    2ed8:	cmp	w0, #0x3
    2edc:	cset	w0, eq  // eq = none
    2ee0:	and	w0, w0, #0xff
    2ee4:	b	2f00 <XS_Compress__Raw__Bzip2_new+0x52c>
    2ee8:	ldr	x0, [sp, #24]
    2eec:	bl	1540 <Perl_dowantarray@plt>
    2ef0:	and	w0, w0, #0xff
    2ef4:	cmp	w0, #0x3
    2ef8:	cset	w0, eq  // eq = none
    2efc:	and	w0, w0, #0xff
    2f00:	cmp	w0, #0x0
    2f04:	b.eq	2fdc <XS_Compress__Raw__Bzip2_new+0x608>  // b.none
    2f08:	ldrsw	x0, [sp, #48]
    2f0c:	mov	x1, x0
    2f10:	ldr	x0, [sp, #24]
    2f14:	bl	15c0 <Perl_newSViv@plt>
    2f18:	mov	x1, x0
    2f1c:	ldr	x0, [sp, #24]
    2f20:	bl	1550 <Perl_sv_2mortal@plt>
    2f24:	str	x0, [sp, #104]
    2f28:	ldr	w0, [sp, #48]
    2f2c:	scvtf	d0, w0
    2f30:	ldr	x1, [sp, #104]
    2f34:	ldr	x0, [sp, #24]
    2f38:	bl	1330 <Perl_sv_setnv@plt>
    2f3c:	ldr	w0, [sp, #48]
    2f40:	cmp	w0, #0x0
    2f44:	b.eq	2f54 <XS_Compress__Raw__Bzip2_new+0x580>  // b.none
    2f48:	ldr	w0, [sp, #48]
    2f4c:	bl	17f0 <GetErrorString>
    2f50:	b	2f5c <XS_Compress__Raw__Bzip2_new+0x588>
    2f54:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    2f58:	add	x0, x0, #0xe90
    2f5c:	mov	x2, x0
    2f60:	ldr	x1, [sp, #104]
    2f64:	ldr	x0, [sp, #24]
    2f68:	bl	13f0 <Perl_sv_setpv@plt>
    2f6c:	ldr	x0, [sp, #104]
    2f70:	ldr	w1, [x0, #12]
    2f74:	mov	w0, #0x2200                	// #8704
    2f78:	orr	w1, w1, w0
    2f7c:	ldr	x0, [sp, #104]
    2f80:	str	w1, [x0, #12]
    2f84:	ldr	x0, [sp, #24]
    2f88:	ldr	x1, [x0, #32]
    2f8c:	ldr	x0, [sp, #64]
    2f90:	sub	x0, x1, x0
    2f94:	cmp	x0, #0x0
    2f98:	cset	w0, le
    2f9c:	and	w0, w0, #0xff
    2fa0:	and	x0, x0, #0xff
    2fa4:	cmp	x0, #0x0
    2fa8:	b.eq	2fc4 <XS_Compress__Raw__Bzip2_new+0x5f0>  // b.none
    2fac:	mov	x3, #0x1                   	// #1
    2fb0:	ldr	x2, [sp, #64]
    2fb4:	ldr	x1, [sp, #64]
    2fb8:	ldr	x0, [sp, #24]
    2fbc:	bl	1350 <Perl_stack_grow@plt>
    2fc0:	str	x0, [sp, #64]
    2fc4:	ldr	x0, [sp, #64]
    2fc8:	add	x0, x0, #0x8
    2fcc:	str	x0, [sp, #64]
    2fd0:	ldr	x0, [sp, #64]
    2fd4:	ldr	x1, [sp, #104]
    2fd8:	str	x1, [x0]
    2fdc:	ldr	x0, [sp, #24]
    2fe0:	ldr	x1, [sp, #64]
    2fe4:	str	x1, [x0]
    2fe8:	nop
    2fec:	ldp	x29, x30, [sp], #112
    2ff0:	ret

0000000000002ff4 <XS_Compress__Raw__Bunzip2_new>:
    2ff4:	stp	x29, x30, [sp, #-128]!
    2ff8:	mov	x29, sp
    2ffc:	str	x0, [sp, #24]
    3000:	str	x1, [sp, #16]
    3004:	ldr	x0, [sp, #24]
    3008:	ldr	x0, [x0]
    300c:	str	x0, [sp, #80]
    3010:	ldr	x0, [sp, #24]
    3014:	bl	1790 <S_POPMARK>
    3018:	str	w0, [sp, #72]
    301c:	ldr	x0, [sp, #24]
    3020:	ldr	x1, [x0, #24]
    3024:	ldr	w0, [sp, #72]
    3028:	add	w2, w0, #0x1
    302c:	str	w2, [sp, #72]
    3030:	sxtw	x0, w0
    3034:	lsl	x0, x0, #3
    3038:	add	x0, x1, x0
    303c:	str	x0, [sp, #104]
    3040:	ldr	x1, [sp, #80]
    3044:	ldr	x0, [sp, #104]
    3048:	sub	x0, x1, x0
    304c:	asr	x0, x0, #3
    3050:	str	w0, [sp, #76]
    3054:	ldr	w0, [sp, #76]
    3058:	cmp	w0, #0x0
    305c:	b.le	306c <XS_Compress__Raw__Bunzip2_new+0x78>
    3060:	ldr	w0, [sp, #76]
    3064:	cmp	w0, #0x6
    3068:	b.le	307c <XS_Compress__Raw__Bunzip2_new+0x88>
    306c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3070:	add	x1, x0, #0xc0
    3074:	ldr	x0, [sp, #16]
    3078:	bl	1490 <Perl_croak_xs_usage@plt>
    307c:	ldrsw	x0, [sp, #76]
    3080:	lsl	x0, x0, #3
    3084:	neg	x0, x0
    3088:	ldr	x1, [sp, #80]
    308c:	add	x0, x1, x0
    3090:	str	x0, [sp, #80]
    3094:	ldr	x0, [sp, #24]
    3098:	ldr	x1, [x0, #24]
    309c:	ldrsw	x0, [sp, #72]
    30a0:	lsl	x0, x0, #3
    30a4:	add	x0, x1, x0
    30a8:	ldr	x0, [x0]
    30ac:	ldr	w0, [x0, #12]
    30b0:	and	w0, w0, #0xff00
    30b4:	cmp	w0, #0x0
    30b8:	b.eq	313c <XS_Compress__Raw__Bunzip2_new+0x148>  // b.none
    30bc:	ldr	x0, [sp, #24]
    30c0:	ldr	x1, [x0, #24]
    30c4:	ldrsw	x0, [sp, #72]
    30c8:	lsl	x0, x0, #3
    30cc:	add	x0, x1, x0
    30d0:	ldr	x0, [x0]
    30d4:	ldr	w1, [x0, #12]
    30d8:	mov	w0, #0x400                 	// #1024
    30dc:	movk	w0, #0x2020, lsl #16
    30e0:	and	w0, w1, w0
    30e4:	cmp	w0, #0x400
    30e8:	b.ne	310c <XS_Compress__Raw__Bunzip2_new+0x118>  // b.any
    30ec:	ldr	x0, [sp, #24]
    30f0:	ldr	x1, [x0, #24]
    30f4:	ldrsw	x0, [sp, #72]
    30f8:	lsl	x0, x0, #3
    30fc:	add	x0, x1, x0
    3100:	ldr	x0, [x0]
    3104:	ldr	x0, [x0, #16]
    3108:	b	3134 <XS_Compress__Raw__Bunzip2_new+0x140>
    310c:	ldr	x0, [sp, #24]
    3110:	ldr	x1, [x0, #24]
    3114:	ldrsw	x0, [sp, #72]
    3118:	lsl	x0, x0, #3
    311c:	add	x0, x1, x0
    3120:	ldr	x0, [x0]
    3124:	mov	x2, #0x0                   	// #0
    3128:	mov	x1, x0
    312c:	ldr	x0, [sp, #24]
    3130:	bl	1400 <Perl_sv_2pvbyte@plt>
    3134:	str	x0, [sp, #88]
    3138:	b	3140 <XS_Compress__Raw__Bunzip2_new+0x14c>
    313c:	str	xzr, [sp, #88]
    3140:	ldr	w0, [sp, #76]
    3144:	cmp	w0, #0x1
    3148:	b.gt	3158 <XS_Compress__Raw__Bunzip2_new+0x164>
    314c:	mov	w0, #0x1                   	// #1
    3150:	str	w0, [sp, #44]
    3154:	b	31e4 <XS_Compress__Raw__Bunzip2_new+0x1f0>
    3158:	ldr	x0, [sp, #24]
    315c:	ldr	x1, [x0, #24]
    3160:	ldrsw	x0, [sp, #72]
    3164:	add	x0, x0, #0x1
    3168:	lsl	x0, x0, #3
    316c:	add	x0, x1, x0
    3170:	ldr	x0, [x0]
    3174:	ldr	w1, [x0, #12]
    3178:	mov	w0, #0x100                 	// #256
    317c:	movk	w0, #0x20, lsl #16
    3180:	and	w0, w1, w0
    3184:	cmp	w0, #0x100
    3188:	b.ne	31b4 <XS_Compress__Raw__Bunzip2_new+0x1c0>  // b.any
    318c:	ldr	x0, [sp, #24]
    3190:	ldr	x1, [x0, #24]
    3194:	ldrsw	x0, [sp, #72]
    3198:	add	x0, x0, #0x1
    319c:	lsl	x0, x0, #3
    31a0:	add	x0, x1, x0
    31a4:	ldr	x0, [x0]
    31a8:	ldr	x0, [x0]
    31ac:	ldr	x0, [x0, #32]
    31b0:	b	31e0 <XS_Compress__Raw__Bunzip2_new+0x1ec>
    31b4:	ldr	x0, [sp, #24]
    31b8:	ldr	x1, [x0, #24]
    31bc:	ldrsw	x0, [sp, #72]
    31c0:	add	x0, x0, #0x1
    31c4:	lsl	x0, x0, #3
    31c8:	add	x0, x1, x0
    31cc:	ldr	x0, [x0]
    31d0:	mov	w2, #0x2                   	// #2
    31d4:	mov	x1, x0
    31d8:	ldr	x0, [sp, #24]
    31dc:	bl	1320 <Perl_sv_2iv_flags@plt>
    31e0:	str	w0, [sp, #44]
    31e4:	ldr	w0, [sp, #76]
    31e8:	cmp	w0, #0x2
    31ec:	b.gt	31fc <XS_Compress__Raw__Bunzip2_new+0x208>
    31f0:	mov	w0, #0x1                   	// #1
    31f4:	str	w0, [sp, #48]
    31f8:	b	3288 <XS_Compress__Raw__Bunzip2_new+0x294>
    31fc:	ldr	x0, [sp, #24]
    3200:	ldr	x1, [x0, #24]
    3204:	ldrsw	x0, [sp, #72]
    3208:	add	x0, x0, #0x2
    320c:	lsl	x0, x0, #3
    3210:	add	x0, x1, x0
    3214:	ldr	x0, [x0]
    3218:	ldr	w1, [x0, #12]
    321c:	mov	w0, #0x100                 	// #256
    3220:	movk	w0, #0x20, lsl #16
    3224:	and	w0, w1, w0
    3228:	cmp	w0, #0x100
    322c:	b.ne	3258 <XS_Compress__Raw__Bunzip2_new+0x264>  // b.any
    3230:	ldr	x0, [sp, #24]
    3234:	ldr	x1, [x0, #24]
    3238:	ldrsw	x0, [sp, #72]
    323c:	add	x0, x0, #0x2
    3240:	lsl	x0, x0, #3
    3244:	add	x0, x1, x0
    3248:	ldr	x0, [x0]
    324c:	ldr	x0, [x0]
    3250:	ldr	x0, [x0, #32]
    3254:	b	3284 <XS_Compress__Raw__Bunzip2_new+0x290>
    3258:	ldr	x0, [sp, #24]
    325c:	ldr	x1, [x0, #24]
    3260:	ldrsw	x0, [sp, #72]
    3264:	add	x0, x0, #0x2
    3268:	lsl	x0, x0, #3
    326c:	add	x0, x1, x0
    3270:	ldr	x0, [x0]
    3274:	mov	w2, #0x2                   	// #2
    3278:	mov	x1, x0
    327c:	ldr	x0, [sp, #24]
    3280:	bl	1320 <Perl_sv_2iv_flags@plt>
    3284:	str	w0, [sp, #48]
    3288:	ldr	w0, [sp, #76]
    328c:	cmp	w0, #0x3
    3290:	b.gt	329c <XS_Compress__Raw__Bunzip2_new+0x2a8>
    3294:	str	wzr, [sp, #52]
    3298:	b	3328 <XS_Compress__Raw__Bunzip2_new+0x334>
    329c:	ldr	x0, [sp, #24]
    32a0:	ldr	x1, [x0, #24]
    32a4:	ldrsw	x0, [sp, #72]
    32a8:	add	x0, x0, #0x3
    32ac:	lsl	x0, x0, #3
    32b0:	add	x0, x1, x0
    32b4:	ldr	x0, [x0]
    32b8:	ldr	w1, [x0, #12]
    32bc:	mov	w0, #0x100                 	// #256
    32c0:	movk	w0, #0x20, lsl #16
    32c4:	and	w0, w1, w0
    32c8:	cmp	w0, #0x100
    32cc:	b.ne	32f8 <XS_Compress__Raw__Bunzip2_new+0x304>  // b.any
    32d0:	ldr	x0, [sp, #24]
    32d4:	ldr	x1, [x0, #24]
    32d8:	ldrsw	x0, [sp, #72]
    32dc:	add	x0, x0, #0x3
    32e0:	lsl	x0, x0, #3
    32e4:	add	x0, x1, x0
    32e8:	ldr	x0, [x0]
    32ec:	ldr	x0, [x0]
    32f0:	ldr	x0, [x0, #32]
    32f4:	b	3324 <XS_Compress__Raw__Bunzip2_new+0x330>
    32f8:	ldr	x0, [sp, #24]
    32fc:	ldr	x1, [x0, #24]
    3300:	ldrsw	x0, [sp, #72]
    3304:	add	x0, x0, #0x3
    3308:	lsl	x0, x0, #3
    330c:	add	x0, x1, x0
    3310:	ldr	x0, [x0]
    3314:	mov	w2, #0x2                   	// #2
    3318:	mov	x1, x0
    331c:	ldr	x0, [sp, #24]
    3320:	bl	1320 <Perl_sv_2iv_flags@plt>
    3324:	str	w0, [sp, #52]
    3328:	ldr	w0, [sp, #76]
    332c:	cmp	w0, #0x4
    3330:	b.gt	333c <XS_Compress__Raw__Bunzip2_new+0x348>
    3334:	str	wzr, [sp, #56]
    3338:	b	33c8 <XS_Compress__Raw__Bunzip2_new+0x3d4>
    333c:	ldr	x0, [sp, #24]
    3340:	ldr	x1, [x0, #24]
    3344:	ldrsw	x0, [sp, #72]
    3348:	add	x0, x0, #0x4
    334c:	lsl	x0, x0, #3
    3350:	add	x0, x1, x0
    3354:	ldr	x0, [x0]
    3358:	ldr	w1, [x0, #12]
    335c:	mov	w0, #0x100                 	// #256
    3360:	movk	w0, #0x20, lsl #16
    3364:	and	w0, w1, w0
    3368:	cmp	w0, #0x100
    336c:	b.ne	3398 <XS_Compress__Raw__Bunzip2_new+0x3a4>  // b.any
    3370:	ldr	x0, [sp, #24]
    3374:	ldr	x1, [x0, #24]
    3378:	ldrsw	x0, [sp, #72]
    337c:	add	x0, x0, #0x4
    3380:	lsl	x0, x0, #3
    3384:	add	x0, x1, x0
    3388:	ldr	x0, [x0]
    338c:	ldr	x0, [x0]
    3390:	ldr	x0, [x0, #32]
    3394:	b	33c4 <XS_Compress__Raw__Bunzip2_new+0x3d0>
    3398:	ldr	x0, [sp, #24]
    339c:	ldr	x1, [x0, #24]
    33a0:	ldrsw	x0, [sp, #72]
    33a4:	add	x0, x0, #0x4
    33a8:	lsl	x0, x0, #3
    33ac:	add	x0, x1, x0
    33b0:	ldr	x0, [x0]
    33b4:	mov	w2, #0x2                   	// #2
    33b8:	mov	x1, x0
    33bc:	ldr	x0, [sp, #24]
    33c0:	bl	1320 <Perl_sv_2iv_flags@plt>
    33c4:	str	w0, [sp, #56]
    33c8:	ldr	w0, [sp, #76]
    33cc:	cmp	w0, #0x5
    33d0:	b.gt	33dc <XS_Compress__Raw__Bunzip2_new+0x3e8>
    33d4:	str	wzr, [sp, #60]
    33d8:	b	3468 <XS_Compress__Raw__Bunzip2_new+0x474>
    33dc:	ldr	x0, [sp, #24]
    33e0:	ldr	x1, [x0, #24]
    33e4:	ldrsw	x0, [sp, #72]
    33e8:	add	x0, x0, #0x5
    33ec:	lsl	x0, x0, #3
    33f0:	add	x0, x1, x0
    33f4:	ldr	x0, [x0]
    33f8:	ldr	w1, [x0, #12]
    33fc:	mov	w0, #0x100                 	// #256
    3400:	movk	w0, #0x20, lsl #16
    3404:	and	w0, w1, w0
    3408:	cmp	w0, #0x100
    340c:	b.ne	3438 <XS_Compress__Raw__Bunzip2_new+0x444>  // b.any
    3410:	ldr	x0, [sp, #24]
    3414:	ldr	x1, [x0, #24]
    3418:	ldrsw	x0, [sp, #72]
    341c:	add	x0, x0, #0x5
    3420:	lsl	x0, x0, #3
    3424:	add	x0, x1, x0
    3428:	ldr	x0, [x0]
    342c:	ldr	x0, [x0]
    3430:	ldr	x0, [x0, #32]
    3434:	b	3464 <XS_Compress__Raw__Bunzip2_new+0x470>
    3438:	ldr	x0, [sp, #24]
    343c:	ldr	x1, [x0, #24]
    3440:	ldrsw	x0, [sp, #72]
    3444:	add	x0, x0, #0x5
    3448:	lsl	x0, x0, #3
    344c:	add	x0, x1, x0
    3450:	ldr	x0, [x0]
    3454:	mov	w2, #0x2                   	// #2
    3458:	mov	x1, x0
    345c:	ldr	x0, [sp, #24]
    3460:	bl	1320 <Perl_sv_2iv_flags@plt>
    3464:	str	w0, [sp, #60]
    3468:	str	wzr, [sp, #64]
    346c:	bl	1b54 <InitStream>
    3470:	str	x0, [sp, #96]
    3474:	ldr	x0, [sp, #96]
    3478:	cmp	x0, #0x0
    347c:	b.eq	3518 <XS_Compress__Raw__Bunzip2_new+0x524>  // b.none
    3480:	ldr	x0, [sp, #96]
    3484:	add	x0, x0, #0x8
    3488:	ldr	w2, [sp, #52]
    348c:	ldr	w1, [sp, #56]
    3490:	bl	13d0 <BZ2_bzDecompressInit@plt>
    3494:	str	w0, [sp, #64]
    3498:	ldr	w0, [sp, #64]
    349c:	cmp	w0, #0x0
    34a0:	b.eq	34b0 <XS_Compress__Raw__Bunzip2_new+0x4bc>  // b.none
    34a4:	ldr	x0, [sp, #96]
    34a8:	bl	1570 <Perl_safesysfree@plt>
    34ac:	str	xzr, [sp, #96]
    34b0:	ldr	x0, [sp, #96]
    34b4:	cmp	x0, #0x0
    34b8:	b.eq	3520 <XS_Compress__Raw__Bunzip2_new+0x52c>  // b.none
    34bc:	str	wzr, [sp, #68]
    34c0:	ldr	w0, [sp, #44]
    34c4:	cmp	w0, #0x0
    34c8:	b.eq	34d8 <XS_Compress__Raw__Bunzip2_new+0x4e4>  // b.none
    34cc:	ldr	w0, [sp, #68]
    34d0:	orr	w0, w0, #0x1
    34d4:	str	w0, [sp, #68]
    34d8:	ldr	w0, [sp, #48]
    34dc:	cmp	w0, #0x0
    34e0:	b.eq	34f0 <XS_Compress__Raw__Bunzip2_new+0x4fc>  // b.none
    34e4:	ldr	w0, [sp, #68]
    34e8:	orr	w0, w0, #0x8
    34ec:	str	w0, [sp, #68]
    34f0:	ldr	w0, [sp, #60]
    34f4:	cmp	w0, #0x0
    34f8:	b.eq	3508 <XS_Compress__Raw__Bunzip2_new+0x514>  // b.none
    34fc:	ldr	w0, [sp, #68]
    3500:	orr	w0, w0, #0x18
    3504:	str	w0, [sp, #68]
    3508:	ldr	w1, [sp, #68]
    350c:	ldr	x0, [sp, #96]
    3510:	bl	1b84 <PostInitStream>
    3514:	b	3520 <XS_Compress__Raw__Bunzip2_new+0x52c>
    3518:	mov	w0, #0xfffffffd            	// #-3
    351c:	str	w0, [sp, #64]
    3520:	ldr	x0, [sp, #24]
    3524:	bl	15f0 <Perl_sv_newmortal@plt>
    3528:	ldr	x3, [sp, #96]
    352c:	ldr	x2, [sp, #88]
    3530:	mov	x1, x0
    3534:	ldr	x0, [sp, #24]
    3538:	bl	1310 <Perl_sv_setref_pv@plt>
    353c:	str	x0, [sp, #112]
    3540:	ldr	x0, [sp, #24]
    3544:	ldr	x1, [x0, #32]
    3548:	ldr	x0, [sp, #80]
    354c:	sub	x0, x1, x0
    3550:	cmp	x0, #0x0
    3554:	cset	w0, le
    3558:	and	w0, w0, #0xff
    355c:	and	x0, x0, #0xff
    3560:	cmp	x0, #0x0
    3564:	b.eq	3580 <XS_Compress__Raw__Bunzip2_new+0x58c>  // b.none
    3568:	mov	x3, #0x1                   	// #1
    356c:	ldr	x2, [sp, #80]
    3570:	ldr	x1, [sp, #80]
    3574:	ldr	x0, [sp, #24]
    3578:	bl	1350 <Perl_stack_grow@plt>
    357c:	str	x0, [sp, #80]
    3580:	ldr	x0, [sp, #80]
    3584:	add	x0, x0, #0x8
    3588:	str	x0, [sp, #80]
    358c:	ldr	x0, [sp, #80]
    3590:	ldr	x1, [sp, #112]
    3594:	str	x1, [x0]
    3598:	ldr	x0, [sp, #24]
    359c:	ldr	x0, [x0, #8]
    35a0:	ldrb	w0, [x0, #34]
    35a4:	and	w0, w0, #0x3
    35a8:	cmp	w0, #0x0
    35ac:	b.eq	35d0 <XS_Compress__Raw__Bunzip2_new+0x5dc>  // b.none
    35b0:	ldr	x0, [sp, #24]
    35b4:	ldr	x0, [x0, #8]
    35b8:	ldrb	w0, [x0, #34]
    35bc:	and	w0, w0, #0x3
    35c0:	cmp	w0, #0x3
    35c4:	cset	w0, eq  // eq = none
    35c8:	and	w0, w0, #0xff
    35cc:	b	35e8 <XS_Compress__Raw__Bunzip2_new+0x5f4>
    35d0:	ldr	x0, [sp, #24]
    35d4:	bl	1540 <Perl_dowantarray@plt>
    35d8:	and	w0, w0, #0xff
    35dc:	cmp	w0, #0x3
    35e0:	cset	w0, eq  // eq = none
    35e4:	and	w0, w0, #0xff
    35e8:	cmp	w0, #0x0
    35ec:	b.eq	36c4 <XS_Compress__Raw__Bunzip2_new+0x6d0>  // b.none
    35f0:	ldrsw	x0, [sp, #64]
    35f4:	mov	x1, x0
    35f8:	ldr	x0, [sp, #24]
    35fc:	bl	15c0 <Perl_newSViv@plt>
    3600:	mov	x1, x0
    3604:	ldr	x0, [sp, #24]
    3608:	bl	1550 <Perl_sv_2mortal@plt>
    360c:	str	x0, [sp, #120]
    3610:	ldr	w0, [sp, #64]
    3614:	scvtf	d0, w0
    3618:	ldr	x1, [sp, #120]
    361c:	ldr	x0, [sp, #24]
    3620:	bl	1330 <Perl_sv_setnv@plt>
    3624:	ldr	w0, [sp, #64]
    3628:	cmp	w0, #0x0
    362c:	b.eq	363c <XS_Compress__Raw__Bunzip2_new+0x648>  // b.none
    3630:	ldr	w0, [sp, #64]
    3634:	bl	17f0 <GetErrorString>
    3638:	b	3644 <XS_Compress__Raw__Bunzip2_new+0x650>
    363c:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    3640:	add	x0, x0, #0xe90
    3644:	mov	x2, x0
    3648:	ldr	x1, [sp, #120]
    364c:	ldr	x0, [sp, #24]
    3650:	bl	13f0 <Perl_sv_setpv@plt>
    3654:	ldr	x0, [sp, #120]
    3658:	ldr	w1, [x0, #12]
    365c:	mov	w0, #0x2200                	// #8704
    3660:	orr	w1, w1, w0
    3664:	ldr	x0, [sp, #120]
    3668:	str	w1, [x0, #12]
    366c:	ldr	x0, [sp, #24]
    3670:	ldr	x1, [x0, #32]
    3674:	ldr	x0, [sp, #80]
    3678:	sub	x0, x1, x0
    367c:	cmp	x0, #0x0
    3680:	cset	w0, le
    3684:	and	w0, w0, #0xff
    3688:	and	x0, x0, #0xff
    368c:	cmp	x0, #0x0
    3690:	b.eq	36ac <XS_Compress__Raw__Bunzip2_new+0x6b8>  // b.none
    3694:	mov	x3, #0x1                   	// #1
    3698:	ldr	x2, [sp, #80]
    369c:	ldr	x1, [sp, #80]
    36a0:	ldr	x0, [sp, #24]
    36a4:	bl	1350 <Perl_stack_grow@plt>
    36a8:	str	x0, [sp, #80]
    36ac:	ldr	x0, [sp, #80]
    36b0:	add	x0, x0, #0x8
    36b4:	str	x0, [sp, #80]
    36b8:	ldr	x0, [sp, #80]
    36bc:	ldr	x1, [sp, #120]
    36c0:	str	x1, [x0]
    36c4:	ldr	x0, [sp, #24]
    36c8:	ldr	x1, [sp, #80]
    36cc:	str	x1, [x0]
    36d0:	nop
    36d4:	ldp	x29, x30, [sp], #128
    36d8:	ret

00000000000036dc <XS_Compress__Raw__Bzip2_DispStream>:
    36dc:	stp	x29, x30, [sp, #-96]!
    36e0:	mov	x29, sp
    36e4:	str	x0, [sp, #24]
    36e8:	str	x1, [sp, #16]
    36ec:	ldr	x0, [sp, #24]
    36f0:	ldr	x0, [x0]
    36f4:	str	x0, [sp, #56]
    36f8:	ldr	x0, [sp, #24]
    36fc:	bl	1790 <S_POPMARK>
    3700:	str	w0, [sp, #40]
    3704:	ldr	x0, [sp, #24]
    3708:	ldr	x1, [x0, #24]
    370c:	ldr	w0, [sp, #40]
    3710:	add	w2, w0, #0x1
    3714:	str	w2, [sp, #40]
    3718:	sxtw	x0, w0
    371c:	lsl	x0, x0, #3
    3720:	add	x0, x1, x0
    3724:	str	x0, [sp, #64]
    3728:	ldr	x1, [sp, #56]
    372c:	ldr	x0, [sp, #64]
    3730:	sub	x0, x1, x0
    3734:	asr	x0, x0, #3
    3738:	str	w0, [sp, #44]
    373c:	ldr	w0, [sp, #44]
    3740:	cmp	w0, #0x0
    3744:	b.le	3754 <XS_Compress__Raw__Bzip2_DispStream+0x78>
    3748:	ldr	w0, [sp, #44]
    374c:	cmp	w0, #0x2
    3750:	b.le	3764 <XS_Compress__Raw__Bzip2_DispStream+0x88>
    3754:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3758:	add	x1, x0, #0x108
    375c:	ldr	x0, [sp, #16]
    3760:	bl	1490 <Perl_croak_xs_usage@plt>
    3764:	ldr	x0, [sp, #24]
    3768:	ldr	x1, [x0, #24]
    376c:	ldrsw	x0, [sp, #40]
    3770:	lsl	x0, x0, #3
    3774:	add	x0, x1, x0
    3778:	ldr	x0, [x0]
    377c:	ldr	w0, [x0, #12]
    3780:	and	w0, w0, #0x800
    3784:	cmp	w0, #0x0
    3788:	b.eq	3868 <XS_Compress__Raw__Bzip2_DispStream+0x18c>  // b.none
    378c:	ldr	x0, [sp, #24]
    3790:	ldr	x1, [x0, #24]
    3794:	ldrsw	x0, [sp, #40]
    3798:	lsl	x0, x0, #3
    379c:	add	x0, x1, x0
    37a0:	ldr	x1, [x0]
    37a4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    37a8:	add	x2, x0, #0x118
    37ac:	ldr	x0, [sp, #24]
    37b0:	bl	1390 <Perl_sv_derived_from@plt>
    37b4:	and	w0, w0, #0xff
    37b8:	cmp	w0, #0x0
    37bc:	b.eq	3868 <XS_Compress__Raw__Bzip2_DispStream+0x18c>  // b.none
    37c0:	ldr	x0, [sp, #24]
    37c4:	ldr	x1, [x0, #24]
    37c8:	ldrsw	x0, [sp, #40]
    37cc:	lsl	x0, x0, #3
    37d0:	add	x0, x1, x0
    37d4:	ldr	x0, [x0]
    37d8:	ldr	x0, [x0, #16]
    37dc:	ldr	w1, [x0, #12]
    37e0:	mov	w0, #0x100                 	// #256
    37e4:	movk	w0, #0x20, lsl #16
    37e8:	and	w0, w1, w0
    37ec:	cmp	w0, #0x100
    37f0:	b.ne	381c <XS_Compress__Raw__Bzip2_DispStream+0x140>  // b.any
    37f4:	ldr	x0, [sp, #24]
    37f8:	ldr	x1, [x0, #24]
    37fc:	ldrsw	x0, [sp, #40]
    3800:	lsl	x0, x0, #3
    3804:	add	x0, x1, x0
    3808:	ldr	x0, [x0]
    380c:	ldr	x0, [x0, #16]
    3810:	ldr	x0, [x0]
    3814:	ldr	x0, [x0, #32]
    3818:	b	3848 <XS_Compress__Raw__Bzip2_DispStream+0x16c>
    381c:	ldr	x0, [sp, #24]
    3820:	ldr	x1, [x0, #24]
    3824:	ldrsw	x0, [sp, #40]
    3828:	lsl	x0, x0, #3
    382c:	add	x0, x1, x0
    3830:	ldr	x0, [x0]
    3834:	ldr	x0, [x0, #16]
    3838:	mov	w2, #0x2                   	// #2
    383c:	mov	x1, x0
    3840:	ldr	x0, [sp, #24]
    3844:	bl	1320 <Perl_sv_2iv_flags@plt>
    3848:	str	x0, [sp, #72]
    384c:	ldr	x0, [sp, #72]
    3850:	str	x0, [sp, #80]
    3854:	nop
    3858:	ldr	w0, [sp, #44]
    385c:	cmp	w0, #0x1
    3860:	b.gt	3894 <XS_Compress__Raw__Bzip2_DispStream+0x1b8>
    3864:	b	388c <XS_Compress__Raw__Bzip2_DispStream+0x1b0>
    3868:	adrp	x0, 8000 <my_z_errmsg+0x630>
    386c:	add	x3, x0, #0x118
    3870:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3874:	add	x2, x0, #0x130
    3878:	adrp	x0, 8000 <my_z_errmsg+0x630>
    387c:	add	x1, x0, #0x138
    3880:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3884:	add	x0, x0, #0x160
    3888:	bl	1500 <Perl_croak_nocontext@plt>
    388c:	str	xzr, [sp, #48]
    3890:	b	3950 <XS_Compress__Raw__Bzip2_DispStream+0x274>
    3894:	ldr	x0, [sp, #24]
    3898:	ldr	x1, [x0, #24]
    389c:	ldrsw	x0, [sp, #40]
    38a0:	add	x0, x0, #0x1
    38a4:	lsl	x0, x0, #3
    38a8:	add	x0, x1, x0
    38ac:	ldr	x0, [x0]
    38b0:	ldr	w0, [x0, #12]
    38b4:	and	w0, w0, #0xff00
    38b8:	cmp	w0, #0x0
    38bc:	b.eq	394c <XS_Compress__Raw__Bzip2_DispStream+0x270>  // b.none
    38c0:	ldr	x0, [sp, #24]
    38c4:	ldr	x1, [x0, #24]
    38c8:	ldrsw	x0, [sp, #40]
    38cc:	add	x0, x0, #0x1
    38d0:	lsl	x0, x0, #3
    38d4:	add	x0, x1, x0
    38d8:	ldr	x0, [x0]
    38dc:	ldr	w1, [x0, #12]
    38e0:	mov	w0, #0x400                 	// #1024
    38e4:	movk	w0, #0x2020, lsl #16
    38e8:	and	w0, w1, w0
    38ec:	cmp	w0, #0x400
    38f0:	b.ne	3918 <XS_Compress__Raw__Bzip2_DispStream+0x23c>  // b.any
    38f4:	ldr	x0, [sp, #24]
    38f8:	ldr	x1, [x0, #24]
    38fc:	ldrsw	x0, [sp, #40]
    3900:	add	x0, x0, #0x1
    3904:	lsl	x0, x0, #3
    3908:	add	x0, x1, x0
    390c:	ldr	x0, [x0]
    3910:	ldr	x0, [x0, #16]
    3914:	b	3944 <XS_Compress__Raw__Bzip2_DispStream+0x268>
    3918:	ldr	x0, [sp, #24]
    391c:	ldr	x1, [x0, #24]
    3920:	ldrsw	x0, [sp, #40]
    3924:	add	x0, x0, #0x1
    3928:	lsl	x0, x0, #3
    392c:	add	x0, x1, x0
    3930:	ldr	x0, [x0]
    3934:	mov	x2, #0x0                   	// #0
    3938:	mov	x1, x0
    393c:	ldr	x0, [sp, #24]
    3940:	bl	1400 <Perl_sv_2pvbyte@plt>
    3944:	str	x0, [sp, #48]
    3948:	b	3950 <XS_Compress__Raw__Bzip2_DispStream+0x274>
    394c:	str	xzr, [sp, #48]
    3950:	ldr	x1, [sp, #48]
    3954:	ldr	x0, [sp, #80]
    3958:	bl	188c <DispStream>
    395c:	str	xzr, [sp, #88]
    3960:	ldr	x0, [sp, #24]
    3964:	ldr	x1, [x0, #24]
    3968:	ldrsw	x2, [sp, #40]
    396c:	ldr	x0, [sp, #88]
    3970:	add	x0, x2, x0
    3974:	lsl	x0, x0, #3
    3978:	sub	x0, x0, #0x8
    397c:	add	x1, x1, x0
    3980:	ldr	x0, [sp, #24]
    3984:	str	x1, [x0]
    3988:	nop
    398c:	ldp	x29, x30, [sp], #96
    3990:	ret

0000000000003994 <XS_Compress__Raw__Bzip2_bzdeflate>:
    3994:	stp	x29, x30, [sp, #-144]!
    3998:	mov	x29, sp
    399c:	str	x0, [sp, #24]
    39a0:	str	x1, [sp, #16]
    39a4:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    39a8:	ldr	x0, [x0, #4048]
    39ac:	ldr	x1, [x0]
    39b0:	str	x1, [sp, #136]
    39b4:	mov	x1, #0x0                   	// #0
    39b8:	ldr	x0, [sp, #24]
    39bc:	ldr	x0, [x0]
    39c0:	str	x0, [sp, #72]
    39c4:	ldr	x0, [sp, #24]
    39c8:	bl	1790 <S_POPMARK>
    39cc:	str	w0, [sp, #56]
    39d0:	ldr	x0, [sp, #24]
    39d4:	ldr	x1, [x0, #24]
    39d8:	ldr	w0, [sp, #56]
    39dc:	add	w2, w0, #0x1
    39e0:	str	w2, [sp, #56]
    39e4:	sxtw	x0, w0
    39e8:	lsl	x0, x0, #3
    39ec:	add	x0, x1, x0
    39f0:	str	x0, [sp, #80]
    39f4:	ldr	x1, [sp, #72]
    39f8:	ldr	x0, [sp, #80]
    39fc:	sub	x0, x1, x0
    3a00:	asr	x0, x0, #3
    3a04:	str	w0, [sp, #60]
    3a08:	ldr	w0, [sp, #60]
    3a0c:	cmp	w0, #0x3
    3a10:	b.eq	3a24 <XS_Compress__Raw__Bzip2_bzdeflate+0x90>  // b.none
    3a14:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3a18:	add	x1, x0, #0x180
    3a1c:	ldr	x0, [sp, #16]
    3a20:	bl	1490 <Perl_croak_xs_usage@plt>
    3a24:	ldr	x0, [sp, #24]
    3a28:	ldr	x1, [x0, #24]
    3a2c:	ldrsw	x0, [sp, #56]
    3a30:	add	x0, x0, #0x1
    3a34:	lsl	x0, x0, #3
    3a38:	add	x0, x1, x0
    3a3c:	ldr	x0, [x0]
    3a40:	str	x0, [sp, #88]
    3a44:	ldr	x0, [sp, #24]
    3a48:	ldr	x1, [x0, #24]
    3a4c:	ldrsw	x0, [sp, #56]
    3a50:	add	x0, x0, #0x2
    3a54:	lsl	x0, x0, #3
    3a58:	add	x0, x1, x0
    3a5c:	ldr	x0, [x0]
    3a60:	str	x0, [sp, #96]
    3a64:	str	wzr, [sp, #48]
    3a68:	ldr	x0, [sp, #24]
    3a6c:	ldr	x1, [x0, #24]
    3a70:	ldrsw	x0, [sp, #56]
    3a74:	lsl	x0, x0, #3
    3a78:	add	x0, x1, x0
    3a7c:	ldr	x0, [x0]
    3a80:	ldr	w0, [x0, #12]
    3a84:	and	w0, w0, #0x800
    3a88:	cmp	w0, #0x0
    3a8c:	b.eq	3b94 <XS_Compress__Raw__Bzip2_bzdeflate+0x200>  // b.none
    3a90:	ldr	x0, [sp, #24]
    3a94:	ldr	x1, [x0, #24]
    3a98:	ldrsw	x0, [sp, #56]
    3a9c:	lsl	x0, x0, #3
    3aa0:	add	x0, x1, x0
    3aa4:	ldr	x1, [x0]
    3aa8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3aac:	add	x2, x0, #0x118
    3ab0:	ldr	x0, [sp, #24]
    3ab4:	bl	1390 <Perl_sv_derived_from@plt>
    3ab8:	and	w0, w0, #0xff
    3abc:	cmp	w0, #0x0
    3ac0:	b.eq	3b94 <XS_Compress__Raw__Bzip2_bzdeflate+0x200>  // b.none
    3ac4:	ldr	x0, [sp, #24]
    3ac8:	ldr	x1, [x0, #24]
    3acc:	ldrsw	x0, [sp, #56]
    3ad0:	lsl	x0, x0, #3
    3ad4:	add	x0, x1, x0
    3ad8:	ldr	x0, [x0]
    3adc:	ldr	x0, [x0, #16]
    3ae0:	ldr	w1, [x0, #12]
    3ae4:	mov	w0, #0x100                 	// #256
    3ae8:	movk	w0, #0x20, lsl #16
    3aec:	and	w0, w1, w0
    3af0:	cmp	w0, #0x100
    3af4:	b.ne	3b20 <XS_Compress__Raw__Bzip2_bzdeflate+0x18c>  // b.any
    3af8:	ldr	x0, [sp, #24]
    3afc:	ldr	x1, [x0, #24]
    3b00:	ldrsw	x0, [sp, #56]
    3b04:	lsl	x0, x0, #3
    3b08:	add	x0, x1, x0
    3b0c:	ldr	x0, [x0]
    3b10:	ldr	x0, [x0, #16]
    3b14:	ldr	x0, [x0]
    3b18:	ldr	x0, [x0, #32]
    3b1c:	b	3b4c <XS_Compress__Raw__Bzip2_bzdeflate+0x1b8>
    3b20:	ldr	x0, [sp, #24]
    3b24:	ldr	x1, [x0, #24]
    3b28:	ldrsw	x0, [sp, #56]
    3b2c:	lsl	x0, x0, #3
    3b30:	add	x0, x1, x0
    3b34:	ldr	x0, [x0]
    3b38:	ldr	x0, [x0, #16]
    3b3c:	mov	w2, #0x2                   	// #2
    3b40:	mov	x1, x0
    3b44:	ldr	x0, [sp, #24]
    3b48:	bl	1320 <Perl_sv_2iv_flags@plt>
    3b4c:	str	x0, [sp, #104]
    3b50:	ldr	x0, [sp, #104]
    3b54:	str	x0, [sp, #112]
    3b58:	nop
    3b5c:	ldr	x0, [sp, #112]
    3b60:	ldr	w0, [x0, #88]
    3b64:	str	w0, [sp, #52]
    3b68:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3b6c:	add	x1, x0, #0x1b0
    3b70:	ldr	x0, [sp, #88]
    3b74:	bl	1bbc <deRef>
    3b78:	str	x0, [sp, #88]
    3b7c:	ldr	x0, [sp, #88]
    3b80:	ldr	w0, [x0, #12]
    3b84:	and	w0, w0, #0x20000000
    3b88:	cmp	w0, #0x0
    3b8c:	b.eq	3c08 <XS_Compress__Raw__Bzip2_bzdeflate+0x274>  // b.none
    3b90:	b	3bb8 <XS_Compress__Raw__Bzip2_bzdeflate+0x224>
    3b94:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3b98:	add	x3, x0, #0x118
    3b9c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3ba0:	add	x2, x0, #0x130
    3ba4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3ba8:	add	x1, x0, #0x190
    3bac:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3bb0:	add	x0, x0, #0x160
    3bb4:	bl	1500 <Perl_croak_nocontext@plt>
    3bb8:	ldr	x0, [sp, #24]
    3bbc:	ldr	x0, [x0, #224]
    3bc0:	ldr	w0, [x0, #56]
    3bc4:	lsr	w0, w0, #3
    3bc8:	mov	w0, w0
    3bcc:	and	x0, x0, #0x1
    3bd0:	cmp	x0, #0x0
    3bd4:	b.ne	3c08 <XS_Compress__Raw__Bzip2_bzdeflate+0x274>  // b.any
    3bd8:	mov	w2, #0x1                   	// #1
    3bdc:	ldr	x1, [sp, #88]
    3be0:	ldr	x0, [sp, #24]
    3be4:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    3be8:	and	w0, w0, #0xff
    3bec:	eor	w0, w0, #0x1
    3bf0:	and	w0, w0, #0xff
    3bf4:	cmp	w0, #0x0
    3bf8:	b.eq	3c08 <XS_Compress__Raw__Bzip2_bzdeflate+0x274>  // b.none
    3bfc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3c00:	add	x0, x0, #0x1b8
    3c04:	bl	1500 <Perl_croak_nocontext@plt>
    3c08:	ldr	x0, [sp, #88]
    3c0c:	ldr	w1, [x0, #12]
    3c10:	mov	w0, #0x400                 	// #1024
    3c14:	movk	w0, #0x20, lsl #16
    3c18:	and	w0, w1, w0
    3c1c:	cmp	w0, #0x400
    3c20:	b.ne	3c40 <XS_Compress__Raw__Bzip2_bzdeflate+0x2ac>  // b.any
    3c24:	ldr	x0, [sp, #88]
    3c28:	ldr	x0, [x0]
    3c2c:	ldr	x0, [x0, #16]
    3c30:	str	x0, [sp, #64]
    3c34:	ldr	x0, [sp, #88]
    3c38:	ldr	x0, [x0, #16]
    3c3c:	b	3c58 <XS_Compress__Raw__Bzip2_bzdeflate+0x2c4>
    3c40:	add	x0, sp, #0x40
    3c44:	mov	w3, #0x0                   	// #0
    3c48:	mov	x2, x0
    3c4c:	ldr	x1, [sp, #88]
    3c50:	ldr	x0, [sp, #24]
    3c54:	bl	1420 <Perl_sv_2pv_flags@plt>
    3c58:	ldr	x1, [sp, #112]
    3c5c:	str	x0, [x1, #8]
    3c60:	ldr	x0, [sp, #64]
    3c64:	mov	w1, w0
    3c68:	ldr	x0, [sp, #112]
    3c6c:	str	w1, [x0, #16]
    3c70:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3c74:	add	x1, x0, #0x1b0
    3c78:	ldr	x0, [sp, #96]
    3c7c:	bl	1cf4 <deRef_l>
    3c80:	str	x0, [sp, #96]
    3c84:	ldr	x0, [sp, #96]
    3c88:	ldr	w0, [x0, #12]
    3c8c:	and	w0, w0, #0x20000000
    3c90:	cmp	w0, #0x0
    3c94:	b.eq	3ce8 <XS_Compress__Raw__Bzip2_bzdeflate+0x354>  // b.none
    3c98:	ldr	x0, [sp, #24]
    3c9c:	ldr	x0, [x0, #224]
    3ca0:	ldr	w0, [x0, #56]
    3ca4:	lsr	w0, w0, #3
    3ca8:	mov	w0, w0
    3cac:	and	x0, x0, #0x1
    3cb0:	cmp	x0, #0x0
    3cb4:	b.ne	3ce8 <XS_Compress__Raw__Bzip2_bzdeflate+0x354>  // b.any
    3cb8:	mov	w2, #0x1                   	// #1
    3cbc:	ldr	x1, [sp, #96]
    3cc0:	ldr	x0, [sp, #24]
    3cc4:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    3cc8:	and	w0, w0, #0xff
    3ccc:	eor	w0, w0, #0x1
    3cd0:	and	w0, w0, #0xff
    3cd4:	cmp	w0, #0x0
    3cd8:	b.eq	3ce8 <XS_Compress__Raw__Bzip2_bzdeflate+0x354>  // b.none
    3cdc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    3ce0:	add	x0, x0, #0x200
    3ce4:	bl	1500 <Perl_croak_nocontext@plt>
    3ce8:	ldr	x0, [sp, #112]
    3cec:	ldr	w0, [x0]
    3cf0:	and	w0, w0, #0x1
    3cf4:	cmp	w0, #0x0
    3cf8:	b.ne	3d08 <XS_Compress__Raw__Bzip2_bzdeflate+0x374>  // b.any
    3cfc:	ldr	x0, [sp, #96]
    3d00:	ldr	x0, [x0]
    3d04:	str	xzr, [x0, #16]
    3d08:	ldr	x0, [sp, #96]
    3d0c:	ldr	x0, [x0]
    3d10:	ldr	x0, [x0, #16]
    3d14:	str	w0, [sp, #40]
    3d18:	ldr	x0, [sp, #96]
    3d1c:	ldr	x1, [x0, #16]
    3d20:	ldr	w0, [sp, #40]
    3d24:	add	x1, x1, x0
    3d28:	ldr	x0, [sp, #112]
    3d2c:	str	x1, [x0, #32]
    3d30:	ldr	x0, [sp, #96]
    3d34:	ldr	x0, [x0]
    3d38:	ldr	x0, [x0, #24]
    3d3c:	mov	w1, w0
    3d40:	ldr	w0, [sp, #40]
    3d44:	sub	w0, w1, w0
    3d48:	str	w0, [sp, #44]
    3d4c:	ldr	x0, [sp, #112]
    3d50:	ldr	w1, [sp, #44]
    3d54:	str	w1, [x0, #40]
    3d58:	b	3e04 <XS_Compress__Raw__Bzip2_bzdeflate+0x470>
    3d5c:	ldr	x0, [sp, #112]
    3d60:	ldr	w0, [x0, #40]
    3d64:	cmp	w0, #0x0
    3d68:	b.ne	3de4 <XS_Compress__Raw__Bzip2_bzdeflate+0x450>  // b.any
    3d6c:	ldr	x0, [sp, #96]
    3d70:	ldr	x0, [x0]
    3d74:	ldr	x1, [x0, #24]
    3d78:	ldr	w0, [sp, #52]
    3d7c:	add	x0, x1, x0
    3d80:	mov	x2, x0
    3d84:	ldr	x1, [sp, #96]
    3d88:	ldr	x0, [sp, #24]
    3d8c:	bl	14a0 <Perl_sv_grow@plt>
    3d90:	mov	x1, x0
    3d94:	ldr	x0, [sp, #112]
    3d98:	str	x1, [x0, #32]
    3d9c:	ldr	w1, [sp, #40]
    3da0:	ldr	w0, [sp, #44]
    3da4:	add	w0, w1, w0
    3da8:	str	w0, [sp, #40]
    3dac:	ldr	x0, [sp, #112]
    3db0:	ldr	x1, [x0, #32]
    3db4:	ldr	w0, [sp, #40]
    3db8:	add	x1, x1, x0
    3dbc:	ldr	x0, [sp, #112]
    3dc0:	str	x1, [x0, #32]
    3dc4:	ldr	w0, [sp, #52]
    3dc8:	str	w0, [sp, #44]
    3dcc:	ldr	x0, [sp, #112]
    3dd0:	ldr	w1, [sp, #44]
    3dd4:	str	w1, [x0, #40]
    3dd8:	ldr	w0, [sp, #52]
    3ddc:	lsl	w0, w0, #1
    3de0:	str	w0, [sp, #52]
    3de4:	ldr	x0, [sp, #112]
    3de8:	add	x0, x0, #0x8
    3dec:	mov	w1, #0x0                   	// #0
    3df0:	bl	14d0 <BZ2_bzCompress@plt>
    3df4:	str	w0, [sp, #48]
    3df8:	ldr	w0, [sp, #48]
    3dfc:	cmp	w0, #0x1
    3e00:	b.ne	3e18 <XS_Compress__Raw__Bzip2_bzdeflate+0x484>  // b.any
    3e04:	ldr	x0, [sp, #112]
    3e08:	ldr	w0, [x0, #16]
    3e0c:	cmp	w0, #0x0
    3e10:	b.ne	3d5c <XS_Compress__Raw__Bzip2_bzdeflate+0x3c8>  // b.any
    3e14:	b	3e1c <XS_Compress__Raw__Bzip2_bzdeflate+0x488>
    3e18:	nop
    3e1c:	ldr	x0, [sp, #112]
    3e20:	ldr	x1, [x0, #104]
    3e24:	ldr	w2, [sp, #40]
    3e28:	ldr	w0, [sp, #44]
    3e2c:	add	w2, w2, w0
    3e30:	ldr	x0, [sp, #112]
    3e34:	ldr	w0, [x0, #40]
    3e38:	sub	w0, w2, w0
    3e3c:	mov	w0, w0
    3e40:	add	x1, x1, x0
    3e44:	ldr	x0, [sp, #112]
    3e48:	str	x1, [x0, #104]
    3e4c:	ldr	x0, [sp, #112]
    3e50:	ldr	x1, [x0, #112]
    3e54:	ldr	x2, [sp, #64]
    3e58:	ldr	x0, [sp, #112]
    3e5c:	ldr	w0, [x0, #16]
    3e60:	mov	w0, w0
    3e64:	sub	x0, x2, x0
    3e68:	add	x1, x1, x0
    3e6c:	ldr	x0, [sp, #112]
    3e70:	str	x1, [x0, #112]
    3e74:	ldr	x0, [sp, #112]
    3e78:	ldr	w1, [sp, #48]
    3e7c:	str	w1, [x0, #92]
    3e80:	ldr	w0, [sp, #48]
    3e84:	cmp	w0, #0x1
    3e88:	b.ne	3f10 <XS_Compress__Raw__Bzip2_bzdeflate+0x57c>  // b.any
    3e8c:	ldr	x0, [sp, #96]
    3e90:	ldr	w1, [x0, #12]
    3e94:	mov	w0, #0xff                  	// #255
    3e98:	movk	w0, #0x5fff, lsl #16
    3e9c:	and	w1, w1, w0
    3ea0:	ldr	x0, [sp, #96]
    3ea4:	str	w1, [x0, #12]
    3ea8:	ldr	x0, [sp, #96]
    3eac:	ldr	w1, [x0, #12]
    3eb0:	mov	w0, #0x4400                	// #17408
    3eb4:	orr	w1, w1, w0
    3eb8:	ldr	x0, [sp, #96]
    3ebc:	str	w1, [x0, #12]
    3ec0:	ldr	w1, [sp, #40]
    3ec4:	ldr	w0, [sp, #44]
    3ec8:	add	w1, w1, w0
    3ecc:	ldr	x0, [sp, #112]
    3ed0:	ldr	w0, [x0, #40]
    3ed4:	sub	w1, w1, w0
    3ed8:	ldr	x0, [sp, #96]
    3edc:	ldr	x0, [x0]
    3ee0:	mov	w1, w1
    3ee4:	str	x1, [x0, #16]
    3ee8:	ldr	x0, [sp, #96]
    3eec:	ldr	w0, [x0, #12]
    3ef0:	lsr	w0, w0, #22
    3ef4:	mov	w0, w0
    3ef8:	and	x0, x0, #0x1
    3efc:	cmp	x0, #0x0
    3f00:	b.eq	3f10 <XS_Compress__Raw__Bzip2_bzdeflate+0x57c>  // b.none
    3f04:	ldr	x1, [sp, #96]
    3f08:	ldr	x0, [sp, #24]
    3f0c:	bl	1520 <Perl_mg_set@plt>
    3f10:	ldr	x0, [sp, #24]
    3f14:	bl	15f0 <Perl_sv_newmortal@plt>
    3f18:	str	x0, [sp, #120]
    3f1c:	ldr	w0, [sp, #48]
    3f20:	scvtf	d0, w0
    3f24:	ldr	x1, [sp, #120]
    3f28:	ldr	x0, [sp, #24]
    3f2c:	bl	1330 <Perl_sv_setnv@plt>
    3f30:	ldr	w0, [sp, #48]
    3f34:	cmp	w0, #0x0
    3f38:	b.eq	3f48 <XS_Compress__Raw__Bzip2_bzdeflate+0x5b4>  // b.none
    3f3c:	ldr	w0, [sp, #48]
    3f40:	bl	17f0 <GetErrorString>
    3f44:	b	3f50 <XS_Compress__Raw__Bzip2_bzdeflate+0x5bc>
    3f48:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    3f4c:	add	x0, x0, #0xe90
    3f50:	mov	x2, x0
    3f54:	ldr	x1, [sp, #120]
    3f58:	ldr	x0, [sp, #24]
    3f5c:	bl	13f0 <Perl_sv_setpv@plt>
    3f60:	ldr	x0, [sp, #120]
    3f64:	ldr	w1, [x0, #12]
    3f68:	mov	w0, #0x2200                	// #8704
    3f6c:	orr	w1, w1, w0
    3f70:	ldr	x0, [sp, #120]
    3f74:	str	w1, [x0, #12]
    3f78:	ldr	x0, [sp, #24]
    3f7c:	ldr	x1, [x0, #24]
    3f80:	ldrsw	x0, [sp, #56]
    3f84:	lsl	x0, x0, #3
    3f88:	add	x0, x1, x0
    3f8c:	ldr	x1, [sp, #120]
    3f90:	str	x1, [x0]
    3f94:	mov	x0, #0x1                   	// #1
    3f98:	str	x0, [sp, #128]
    3f9c:	ldr	x0, [sp, #24]
    3fa0:	ldr	x1, [x0, #24]
    3fa4:	ldrsw	x2, [sp, #56]
    3fa8:	ldr	x0, [sp, #128]
    3fac:	add	x0, x2, x0
    3fb0:	lsl	x0, x0, #3
    3fb4:	sub	x0, x0, #0x8
    3fb8:	add	x1, x1, x0
    3fbc:	ldr	x0, [sp, #24]
    3fc0:	str	x1, [x0]
    3fc4:	nop
    3fc8:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    3fcc:	ldr	x0, [x0, #4048]
    3fd0:	ldr	x1, [sp, #136]
    3fd4:	ldr	x0, [x0]
    3fd8:	eor	x0, x1, x0
    3fdc:	cmp	x0, #0x0
    3fe0:	b.eq	3fe8 <XS_Compress__Raw__Bzip2_bzdeflate+0x654>  // b.none
    3fe4:	bl	1470 <__stack_chk_fail@plt>
    3fe8:	ldp	x29, x30, [sp], #144
    3fec:	ret

0000000000003ff0 <XS_Compress__Raw__Bzip2_DESTROY>:
    3ff0:	stp	x29, x30, [sp, #-80]!
    3ff4:	mov	x29, sp
    3ff8:	str	x0, [sp, #24]
    3ffc:	str	x1, [sp, #16]
    4000:	ldr	x0, [sp, #24]
    4004:	ldr	x0, [x0]
    4008:	str	x0, [sp, #40]
    400c:	ldr	x0, [sp, #24]
    4010:	bl	1790 <S_POPMARK>
    4014:	str	w0, [sp, #32]
    4018:	ldr	x0, [sp, #24]
    401c:	ldr	x1, [x0, #24]
    4020:	ldr	w0, [sp, #32]
    4024:	add	w2, w0, #0x1
    4028:	str	w2, [sp, #32]
    402c:	sxtw	x0, w0
    4030:	lsl	x0, x0, #3
    4034:	add	x0, x1, x0
    4038:	str	x0, [sp, #48]
    403c:	ldr	x1, [sp, #40]
    4040:	ldr	x0, [sp, #48]
    4044:	sub	x0, x1, x0
    4048:	asr	x0, x0, #3
    404c:	str	w0, [sp, #36]
    4050:	ldr	w0, [sp, #36]
    4054:	cmp	w0, #0x1
    4058:	b.eq	406c <XS_Compress__Raw__Bzip2_DESTROY+0x7c>  // b.none
    405c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4060:	add	x1, x0, #0x130
    4064:	ldr	x0, [sp, #16]
    4068:	bl	1490 <Perl_croak_xs_usage@plt>
    406c:	ldr	x0, [sp, #24]
    4070:	ldr	x1, [x0, #24]
    4074:	ldrsw	x0, [sp, #32]
    4078:	lsl	x0, x0, #3
    407c:	add	x0, x1, x0
    4080:	ldr	x0, [x0]
    4084:	ldr	w0, [x0, #12]
    4088:	and	w0, w0, #0x800
    408c:	cmp	w0, #0x0
    4090:	b.eq	412c <XS_Compress__Raw__Bzip2_DESTROY+0x13c>  // b.none
    4094:	ldr	x0, [sp, #24]
    4098:	ldr	x1, [x0, #24]
    409c:	ldrsw	x0, [sp, #32]
    40a0:	lsl	x0, x0, #3
    40a4:	add	x0, x1, x0
    40a8:	ldr	x0, [x0]
    40ac:	ldr	x0, [x0, #16]
    40b0:	ldr	w1, [x0, #12]
    40b4:	mov	w0, #0x100                 	// #256
    40b8:	movk	w0, #0x20, lsl #16
    40bc:	and	w0, w1, w0
    40c0:	cmp	w0, #0x100
    40c4:	b.ne	40f0 <XS_Compress__Raw__Bzip2_DESTROY+0x100>  // b.any
    40c8:	ldr	x0, [sp, #24]
    40cc:	ldr	x1, [x0, #24]
    40d0:	ldrsw	x0, [sp, #32]
    40d4:	lsl	x0, x0, #3
    40d8:	add	x0, x1, x0
    40dc:	ldr	x0, [x0]
    40e0:	ldr	x0, [x0, #16]
    40e4:	ldr	x0, [x0]
    40e8:	ldr	x0, [x0, #32]
    40ec:	b	411c <XS_Compress__Raw__Bzip2_DESTROY+0x12c>
    40f0:	ldr	x0, [sp, #24]
    40f4:	ldr	x1, [x0, #24]
    40f8:	ldrsw	x0, [sp, #32]
    40fc:	lsl	x0, x0, #3
    4100:	add	x0, x1, x0
    4104:	ldr	x0, [x0]
    4108:	ldr	x0, [x0, #16]
    410c:	mov	w2, #0x2                   	// #2
    4110:	mov	x1, x0
    4114:	ldr	x0, [sp, #24]
    4118:	bl	1320 <Perl_sv_2iv_flags@plt>
    411c:	str	x0, [sp, #56]
    4120:	ldr	x0, [sp, #56]
    4124:	str	x0, [sp, #64]
    4128:	b	4148 <XS_Compress__Raw__Bzip2_DESTROY+0x158>
    412c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4130:	add	x2, x0, #0x130
    4134:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4138:	add	x1, x0, #0x248
    413c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4140:	add	x0, x0, #0x268
    4144:	bl	1500 <Perl_croak_nocontext@plt>
    4148:	ldr	x0, [sp, #64]
    414c:	add	x0, x0, #0x8
    4150:	bl	1460 <BZ2_bzCompressEnd@plt>
    4154:	ldr	x0, [sp, #64]
    4158:	bl	1570 <Perl_safesysfree@plt>
    415c:	str	xzr, [sp, #72]
    4160:	ldr	x0, [sp, #24]
    4164:	ldr	x1, [x0, #24]
    4168:	ldrsw	x2, [sp, #32]
    416c:	ldr	x0, [sp, #72]
    4170:	add	x0, x2, x0
    4174:	lsl	x0, x0, #3
    4178:	sub	x0, x0, #0x8
    417c:	add	x1, x1, x0
    4180:	ldr	x0, [sp, #24]
    4184:	str	x1, [x0]
    4188:	nop
    418c:	ldp	x29, x30, [sp], #80
    4190:	ret

0000000000004194 <XS_Compress__Raw__Bzip2_bzclose>:
    4194:	stp	x29, x30, [sp, #-112]!
    4198:	mov	x29, sp
    419c:	str	x0, [sp, #24]
    41a0:	str	x1, [sp, #16]
    41a4:	ldr	x0, [sp, #24]
    41a8:	ldr	x0, [x0]
    41ac:	str	x0, [sp, #56]
    41b0:	ldr	x0, [sp, #24]
    41b4:	bl	1790 <S_POPMARK>
    41b8:	str	w0, [sp, #44]
    41bc:	ldr	x0, [sp, #24]
    41c0:	ldr	x1, [x0, #24]
    41c4:	ldr	w0, [sp, #44]
    41c8:	add	w2, w0, #0x1
    41cc:	str	w2, [sp, #44]
    41d0:	sxtw	x0, w0
    41d4:	lsl	x0, x0, #3
    41d8:	add	x0, x1, x0
    41dc:	str	x0, [sp, #64]
    41e0:	ldr	x1, [sp, #56]
    41e4:	ldr	x0, [sp, #64]
    41e8:	sub	x0, x1, x0
    41ec:	asr	x0, x0, #3
    41f0:	str	w0, [sp, #48]
    41f4:	ldr	w0, [sp, #48]
    41f8:	cmp	w0, #0x2
    41fc:	b.eq	4210 <XS_Compress__Raw__Bzip2_bzclose+0x7c>  // b.none
    4200:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4204:	add	x1, x0, #0x288
    4208:	ldr	x0, [sp, #16]
    420c:	bl	1490 <Perl_croak_xs_usage@plt>
    4210:	ldr	x0, [sp, #24]
    4214:	ldr	x1, [x0, #24]
    4218:	ldrsw	x0, [sp, #44]
    421c:	add	x0, x0, #0x1
    4220:	lsl	x0, x0, #3
    4224:	add	x0, x1, x0
    4228:	ldr	x0, [x0]
    422c:	str	x0, [sp, #72]
    4230:	ldr	x0, [sp, #24]
    4234:	ldr	x1, [x0, #24]
    4238:	ldrsw	x0, [sp, #44]
    423c:	lsl	x0, x0, #3
    4240:	add	x0, x1, x0
    4244:	ldr	x0, [x0]
    4248:	ldr	w0, [x0, #12]
    424c:	and	w0, w0, #0x800
    4250:	cmp	w0, #0x0
    4254:	b.eq	4364 <XS_Compress__Raw__Bzip2_bzclose+0x1d0>  // b.none
    4258:	ldr	x0, [sp, #24]
    425c:	ldr	x1, [x0, #24]
    4260:	ldrsw	x0, [sp, #44]
    4264:	lsl	x0, x0, #3
    4268:	add	x0, x1, x0
    426c:	ldr	x1, [x0]
    4270:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4274:	add	x2, x0, #0x118
    4278:	ldr	x0, [sp, #24]
    427c:	bl	1390 <Perl_sv_derived_from@plt>
    4280:	and	w0, w0, #0xff
    4284:	cmp	w0, #0x0
    4288:	b.eq	4364 <XS_Compress__Raw__Bzip2_bzclose+0x1d0>  // b.none
    428c:	ldr	x0, [sp, #24]
    4290:	ldr	x1, [x0, #24]
    4294:	ldrsw	x0, [sp, #44]
    4298:	lsl	x0, x0, #3
    429c:	add	x0, x1, x0
    42a0:	ldr	x0, [x0]
    42a4:	ldr	x0, [x0, #16]
    42a8:	ldr	w1, [x0, #12]
    42ac:	mov	w0, #0x100                 	// #256
    42b0:	movk	w0, #0x20, lsl #16
    42b4:	and	w0, w1, w0
    42b8:	cmp	w0, #0x100
    42bc:	b.ne	42e8 <XS_Compress__Raw__Bzip2_bzclose+0x154>  // b.any
    42c0:	ldr	x0, [sp, #24]
    42c4:	ldr	x1, [x0, #24]
    42c8:	ldrsw	x0, [sp, #44]
    42cc:	lsl	x0, x0, #3
    42d0:	add	x0, x1, x0
    42d4:	ldr	x0, [x0]
    42d8:	ldr	x0, [x0, #16]
    42dc:	ldr	x0, [x0]
    42e0:	ldr	x0, [x0, #32]
    42e4:	b	4314 <XS_Compress__Raw__Bzip2_bzclose+0x180>
    42e8:	ldr	x0, [sp, #24]
    42ec:	ldr	x1, [x0, #24]
    42f0:	ldrsw	x0, [sp, #44]
    42f4:	lsl	x0, x0, #3
    42f8:	add	x0, x1, x0
    42fc:	ldr	x0, [x0]
    4300:	ldr	x0, [x0, #16]
    4304:	mov	w2, #0x2                   	// #2
    4308:	mov	x1, x0
    430c:	ldr	x0, [sp, #24]
    4310:	bl	1320 <Perl_sv_2iv_flags@plt>
    4314:	str	x0, [sp, #80]
    4318:	ldr	x0, [sp, #80]
    431c:	str	x0, [sp, #88]
    4320:	nop
    4324:	ldr	x0, [sp, #88]
    4328:	ldr	w0, [x0, #88]
    432c:	str	w0, [sp, #40]
    4330:	ldr	x0, [sp, #88]
    4334:	str	wzr, [x0, #16]
    4338:	adrp	x0, 8000 <my_z_errmsg+0x630>
    433c:	add	x1, x0, #0x2b8
    4340:	ldr	x0, [sp, #72]
    4344:	bl	1cf4 <deRef_l>
    4348:	str	x0, [sp, #72]
    434c:	ldr	x0, [sp, #72]
    4350:	ldr	w0, [x0, #12]
    4354:	and	w0, w0, #0x20000000
    4358:	cmp	w0, #0x0
    435c:	b.eq	43d8 <XS_Compress__Raw__Bzip2_bzclose+0x244>  // b.none
    4360:	b	4388 <XS_Compress__Raw__Bzip2_bzclose+0x1f4>
    4364:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4368:	add	x3, x0, #0x118
    436c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4370:	add	x2, x0, #0x130
    4374:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4378:	add	x1, x0, #0x298
    437c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4380:	add	x0, x0, #0x160
    4384:	bl	1500 <Perl_croak_nocontext@plt>
    4388:	ldr	x0, [sp, #24]
    438c:	ldr	x0, [x0, #224]
    4390:	ldr	w0, [x0, #56]
    4394:	lsr	w0, w0, #3
    4398:	mov	w0, w0
    439c:	and	x0, x0, #0x1
    43a0:	cmp	x0, #0x0
    43a4:	b.ne	43d8 <XS_Compress__Raw__Bzip2_bzclose+0x244>  // b.any
    43a8:	mov	w2, #0x1                   	// #1
    43ac:	ldr	x1, [sp, #72]
    43b0:	ldr	x0, [sp, #24]
    43b4:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    43b8:	and	w0, w0, #0xff
    43bc:	eor	w0, w0, #0x1
    43c0:	and	w0, w0, #0xff
    43c4:	cmp	w0, #0x0
    43c8:	b.eq	43d8 <XS_Compress__Raw__Bzip2_bzclose+0x244>  // b.none
    43cc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    43d0:	add	x0, x0, #0x2c0
    43d4:	bl	1500 <Perl_croak_nocontext@plt>
    43d8:	ldr	x0, [sp, #88]
    43dc:	ldr	w0, [x0]
    43e0:	and	w0, w0, #0x1
    43e4:	cmp	w0, #0x0
    43e8:	b.ne	43f8 <XS_Compress__Raw__Bzip2_bzclose+0x264>  // b.any
    43ec:	ldr	x0, [sp, #72]
    43f0:	ldr	x0, [x0]
    43f4:	str	xzr, [x0, #16]
    43f8:	ldr	x0, [sp, #72]
    43fc:	ldr	x0, [x0]
    4400:	ldr	x0, [x0, #16]
    4404:	str	w0, [sp, #32]
    4408:	ldr	x0, [sp, #72]
    440c:	ldr	x1, [x0, #16]
    4410:	ldr	w0, [sp, #32]
    4414:	add	x1, x1, x0
    4418:	ldr	x0, [sp, #88]
    441c:	str	x1, [x0, #32]
    4420:	ldr	x0, [sp, #72]
    4424:	ldr	x0, [x0]
    4428:	ldr	x0, [x0, #24]
    442c:	mov	w1, w0
    4430:	ldr	w0, [sp, #32]
    4434:	sub	w0, w1, w0
    4438:	str	w0, [sp, #36]
    443c:	ldr	x0, [sp, #88]
    4440:	ldr	w1, [sp, #36]
    4444:	str	w1, [x0, #40]
    4448:	ldr	x0, [sp, #88]
    444c:	ldr	w0, [x0, #40]
    4450:	cmp	w0, #0x0
    4454:	b.ne	44d0 <XS_Compress__Raw__Bzip2_bzclose+0x33c>  // b.any
    4458:	ldr	x0, [sp, #72]
    445c:	ldr	x0, [x0]
    4460:	ldr	x1, [x0, #24]
    4464:	ldr	w0, [sp, #40]
    4468:	add	x0, x1, x0
    446c:	mov	x2, x0
    4470:	ldr	x1, [sp, #72]
    4474:	ldr	x0, [sp, #24]
    4478:	bl	14a0 <Perl_sv_grow@plt>
    447c:	mov	x1, x0
    4480:	ldr	x0, [sp, #88]
    4484:	str	x1, [x0, #32]
    4488:	ldr	w1, [sp, #32]
    448c:	ldr	w0, [sp, #36]
    4490:	add	w0, w1, w0
    4494:	str	w0, [sp, #32]
    4498:	ldr	x0, [sp, #88]
    449c:	ldr	x1, [x0, #32]
    44a0:	ldr	w0, [sp, #32]
    44a4:	add	x1, x1, x0
    44a8:	ldr	x0, [sp, #88]
    44ac:	str	x1, [x0, #32]
    44b0:	ldr	w0, [sp, #40]
    44b4:	str	w0, [sp, #36]
    44b8:	ldr	x0, [sp, #88]
    44bc:	ldr	w1, [sp, #36]
    44c0:	str	w1, [x0, #40]
    44c4:	ldr	w0, [sp, #40]
    44c8:	lsl	w0, w0, #1
    44cc:	str	w0, [sp, #40]
    44d0:	ldr	x0, [sp, #88]
    44d4:	add	x0, x0, #0x8
    44d8:	mov	w1, #0x2                   	// #2
    44dc:	bl	14d0 <BZ2_bzCompress@plt>
    44e0:	str	w0, [sp, #52]
    44e4:	ldr	w0, [sp, #52]
    44e8:	cmp	w0, #0x4
    44ec:	b.eq	4500 <XS_Compress__Raw__Bzip2_bzclose+0x36c>  // b.none
    44f0:	ldr	w0, [sp, #52]
    44f4:	cmp	w0, #0x0
    44f8:	b.lt	4500 <XS_Compress__Raw__Bzip2_bzclose+0x36c>  // b.tstop
    44fc:	b	4448 <XS_Compress__Raw__Bzip2_bzclose+0x2b4>
    4500:	ldr	x0, [sp, #88]
    4504:	ldr	w1, [sp, #52]
    4508:	str	w1, [x0, #92]
    450c:	ldr	x0, [sp, #88]
    4510:	ldr	x1, [x0, #104]
    4514:	ldr	w2, [sp, #32]
    4518:	ldr	w0, [sp, #36]
    451c:	add	w2, w2, w0
    4520:	ldr	x0, [sp, #88]
    4524:	ldr	w0, [x0, #40]
    4528:	sub	w0, w2, w0
    452c:	mov	w0, w0
    4530:	add	x1, x1, x0
    4534:	ldr	x0, [sp, #88]
    4538:	str	x1, [x0, #104]
    453c:	ldr	w0, [sp, #52]
    4540:	cmp	w0, #0x4
    4544:	b.ne	45cc <XS_Compress__Raw__Bzip2_bzclose+0x438>  // b.any
    4548:	ldr	x0, [sp, #72]
    454c:	ldr	w1, [x0, #12]
    4550:	mov	w0, #0xff                  	// #255
    4554:	movk	w0, #0x5fff, lsl #16
    4558:	and	w1, w1, w0
    455c:	ldr	x0, [sp, #72]
    4560:	str	w1, [x0, #12]
    4564:	ldr	x0, [sp, #72]
    4568:	ldr	w1, [x0, #12]
    456c:	mov	w0, #0x4400                	// #17408
    4570:	orr	w1, w1, w0
    4574:	ldr	x0, [sp, #72]
    4578:	str	w1, [x0, #12]
    457c:	ldr	w1, [sp, #32]
    4580:	ldr	w0, [sp, #36]
    4584:	add	w1, w1, w0
    4588:	ldr	x0, [sp, #88]
    458c:	ldr	w0, [x0, #40]
    4590:	sub	w1, w1, w0
    4594:	ldr	x0, [sp, #72]
    4598:	ldr	x0, [x0]
    459c:	mov	w1, w1
    45a0:	str	x1, [x0, #16]
    45a4:	ldr	x0, [sp, #72]
    45a8:	ldr	w0, [x0, #12]
    45ac:	lsr	w0, w0, #22
    45b0:	mov	w0, w0
    45b4:	and	x0, x0, #0x1
    45b8:	cmp	x0, #0x0
    45bc:	b.eq	45cc <XS_Compress__Raw__Bzip2_bzclose+0x438>  // b.none
    45c0:	ldr	x1, [sp, #72]
    45c4:	ldr	x0, [sp, #24]
    45c8:	bl	1520 <Perl_mg_set@plt>
    45cc:	ldr	x0, [sp, #24]
    45d0:	bl	15f0 <Perl_sv_newmortal@plt>
    45d4:	str	x0, [sp, #96]
    45d8:	ldr	w0, [sp, #52]
    45dc:	scvtf	d0, w0
    45e0:	ldr	x1, [sp, #96]
    45e4:	ldr	x0, [sp, #24]
    45e8:	bl	1330 <Perl_sv_setnv@plt>
    45ec:	ldr	w0, [sp, #52]
    45f0:	cmp	w0, #0x0
    45f4:	b.eq	4604 <XS_Compress__Raw__Bzip2_bzclose+0x470>  // b.none
    45f8:	ldr	w0, [sp, #52]
    45fc:	bl	17f0 <GetErrorString>
    4600:	b	460c <XS_Compress__Raw__Bzip2_bzclose+0x478>
    4604:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    4608:	add	x0, x0, #0xe90
    460c:	mov	x2, x0
    4610:	ldr	x1, [sp, #96]
    4614:	ldr	x0, [sp, #24]
    4618:	bl	13f0 <Perl_sv_setpv@plt>
    461c:	ldr	x0, [sp, #96]
    4620:	ldr	w1, [x0, #12]
    4624:	mov	w0, #0x2200                	// #8704
    4628:	orr	w1, w1, w0
    462c:	ldr	x0, [sp, #96]
    4630:	str	w1, [x0, #12]
    4634:	ldr	x0, [sp, #24]
    4638:	ldr	x1, [x0, #24]
    463c:	ldrsw	x0, [sp, #44]
    4640:	lsl	x0, x0, #3
    4644:	add	x0, x1, x0
    4648:	ldr	x1, [sp, #96]
    464c:	str	x1, [x0]
    4650:	mov	x0, #0x1                   	// #1
    4654:	str	x0, [sp, #104]
    4658:	ldr	x0, [sp, #24]
    465c:	ldr	x1, [x0, #24]
    4660:	ldrsw	x2, [sp, #44]
    4664:	ldr	x0, [sp, #104]
    4668:	add	x0, x2, x0
    466c:	lsl	x0, x0, #3
    4670:	sub	x0, x0, #0x8
    4674:	add	x1, x1, x0
    4678:	ldr	x0, [sp, #24]
    467c:	str	x1, [x0]
    4680:	nop
    4684:	ldp	x29, x30, [sp], #112
    4688:	ret

000000000000468c <XS_Compress__Raw__Bzip2_bzflush>:
    468c:	stp	x29, x30, [sp, #-112]!
    4690:	mov	x29, sp
    4694:	str	x0, [sp, #24]
    4698:	str	x1, [sp, #16]
    469c:	ldr	x0, [sp, #24]
    46a0:	ldr	x0, [x0]
    46a4:	str	x0, [sp, #56]
    46a8:	ldr	x0, [sp, #24]
    46ac:	bl	1790 <S_POPMARK>
    46b0:	str	w0, [sp, #44]
    46b4:	ldr	x0, [sp, #24]
    46b8:	ldr	x1, [x0, #24]
    46bc:	ldr	w0, [sp, #44]
    46c0:	add	w2, w0, #0x1
    46c4:	str	w2, [sp, #44]
    46c8:	sxtw	x0, w0
    46cc:	lsl	x0, x0, #3
    46d0:	add	x0, x1, x0
    46d4:	str	x0, [sp, #64]
    46d8:	ldr	x1, [sp, #56]
    46dc:	ldr	x0, [sp, #64]
    46e0:	sub	x0, x1, x0
    46e4:	asr	x0, x0, #3
    46e8:	str	w0, [sp, #48]
    46ec:	ldr	w0, [sp, #48]
    46f0:	cmp	w0, #0x2
    46f4:	b.eq	4708 <XS_Compress__Raw__Bzip2_bzflush+0x7c>  // b.none
    46f8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    46fc:	add	x1, x0, #0x288
    4700:	ldr	x0, [sp, #16]
    4704:	bl	1490 <Perl_croak_xs_usage@plt>
    4708:	ldr	x0, [sp, #24]
    470c:	ldr	x1, [x0, #24]
    4710:	ldrsw	x0, [sp, #44]
    4714:	add	x0, x0, #0x1
    4718:	lsl	x0, x0, #3
    471c:	add	x0, x1, x0
    4720:	ldr	x0, [x0]
    4724:	str	x0, [sp, #72]
    4728:	ldr	x0, [sp, #24]
    472c:	ldr	x1, [x0, #24]
    4730:	ldrsw	x0, [sp, #44]
    4734:	lsl	x0, x0, #3
    4738:	add	x0, x1, x0
    473c:	ldr	x0, [x0]
    4740:	ldr	w0, [x0, #12]
    4744:	and	w0, w0, #0x800
    4748:	cmp	w0, #0x0
    474c:	b.eq	485c <XS_Compress__Raw__Bzip2_bzflush+0x1d0>  // b.none
    4750:	ldr	x0, [sp, #24]
    4754:	ldr	x1, [x0, #24]
    4758:	ldrsw	x0, [sp, #44]
    475c:	lsl	x0, x0, #3
    4760:	add	x0, x1, x0
    4764:	ldr	x1, [x0]
    4768:	adrp	x0, 8000 <my_z_errmsg+0x630>
    476c:	add	x2, x0, #0x118
    4770:	ldr	x0, [sp, #24]
    4774:	bl	1390 <Perl_sv_derived_from@plt>
    4778:	and	w0, w0, #0xff
    477c:	cmp	w0, #0x0
    4780:	b.eq	485c <XS_Compress__Raw__Bzip2_bzflush+0x1d0>  // b.none
    4784:	ldr	x0, [sp, #24]
    4788:	ldr	x1, [x0, #24]
    478c:	ldrsw	x0, [sp, #44]
    4790:	lsl	x0, x0, #3
    4794:	add	x0, x1, x0
    4798:	ldr	x0, [x0]
    479c:	ldr	x0, [x0, #16]
    47a0:	ldr	w1, [x0, #12]
    47a4:	mov	w0, #0x100                 	// #256
    47a8:	movk	w0, #0x20, lsl #16
    47ac:	and	w0, w1, w0
    47b0:	cmp	w0, #0x100
    47b4:	b.ne	47e0 <XS_Compress__Raw__Bzip2_bzflush+0x154>  // b.any
    47b8:	ldr	x0, [sp, #24]
    47bc:	ldr	x1, [x0, #24]
    47c0:	ldrsw	x0, [sp, #44]
    47c4:	lsl	x0, x0, #3
    47c8:	add	x0, x1, x0
    47cc:	ldr	x0, [x0]
    47d0:	ldr	x0, [x0, #16]
    47d4:	ldr	x0, [x0]
    47d8:	ldr	x0, [x0, #32]
    47dc:	b	480c <XS_Compress__Raw__Bzip2_bzflush+0x180>
    47e0:	ldr	x0, [sp, #24]
    47e4:	ldr	x1, [x0, #24]
    47e8:	ldrsw	x0, [sp, #44]
    47ec:	lsl	x0, x0, #3
    47f0:	add	x0, x1, x0
    47f4:	ldr	x0, [x0]
    47f8:	ldr	x0, [x0, #16]
    47fc:	mov	w2, #0x2                   	// #2
    4800:	mov	x1, x0
    4804:	ldr	x0, [sp, #24]
    4808:	bl	1320 <Perl_sv_2iv_flags@plt>
    480c:	str	x0, [sp, #80]
    4810:	ldr	x0, [sp, #80]
    4814:	str	x0, [sp, #88]
    4818:	nop
    481c:	ldr	x0, [sp, #88]
    4820:	ldr	w0, [x0, #88]
    4824:	str	w0, [sp, #40]
    4828:	ldr	x0, [sp, #88]
    482c:	str	wzr, [x0, #16]
    4830:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4834:	add	x1, x0, #0x2b8
    4838:	ldr	x0, [sp, #72]
    483c:	bl	1cf4 <deRef_l>
    4840:	str	x0, [sp, #72]
    4844:	ldr	x0, [sp, #72]
    4848:	ldr	w0, [x0, #12]
    484c:	and	w0, w0, #0x20000000
    4850:	cmp	w0, #0x0
    4854:	b.eq	48d0 <XS_Compress__Raw__Bzip2_bzflush+0x244>  // b.none
    4858:	b	4880 <XS_Compress__Raw__Bzip2_bzflush+0x1f4>
    485c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4860:	add	x3, x0, #0x118
    4864:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4868:	add	x2, x0, #0x130
    486c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4870:	add	x1, x0, #0x300
    4874:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4878:	add	x0, x0, #0x160
    487c:	bl	1500 <Perl_croak_nocontext@plt>
    4880:	ldr	x0, [sp, #24]
    4884:	ldr	x0, [x0, #224]
    4888:	ldr	w0, [x0, #56]
    488c:	lsr	w0, w0, #3
    4890:	mov	w0, w0
    4894:	and	x0, x0, #0x1
    4898:	cmp	x0, #0x0
    489c:	b.ne	48d0 <XS_Compress__Raw__Bzip2_bzflush+0x244>  // b.any
    48a0:	mov	w2, #0x1                   	// #1
    48a4:	ldr	x1, [sp, #72]
    48a8:	ldr	x0, [sp, #24]
    48ac:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    48b0:	and	w0, w0, #0xff
    48b4:	eor	w0, w0, #0x1
    48b8:	and	w0, w0, #0xff
    48bc:	cmp	w0, #0x0
    48c0:	b.eq	48d0 <XS_Compress__Raw__Bzip2_bzflush+0x244>  // b.none
    48c4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    48c8:	add	x0, x0, #0x320
    48cc:	bl	1500 <Perl_croak_nocontext@plt>
    48d0:	ldr	x0, [sp, #88]
    48d4:	ldr	w0, [x0]
    48d8:	and	w0, w0, #0x1
    48dc:	cmp	w0, #0x0
    48e0:	b.ne	48f0 <XS_Compress__Raw__Bzip2_bzflush+0x264>  // b.any
    48e4:	ldr	x0, [sp, #72]
    48e8:	ldr	x0, [x0]
    48ec:	str	xzr, [x0, #16]
    48f0:	ldr	x0, [sp, #72]
    48f4:	ldr	x0, [x0]
    48f8:	ldr	x0, [x0, #16]
    48fc:	str	w0, [sp, #32]
    4900:	ldr	x0, [sp, #72]
    4904:	ldr	x1, [x0, #16]
    4908:	ldr	w0, [sp, #32]
    490c:	add	x1, x1, x0
    4910:	ldr	x0, [sp, #88]
    4914:	str	x1, [x0, #32]
    4918:	ldr	x0, [sp, #72]
    491c:	ldr	x0, [x0]
    4920:	ldr	x0, [x0, #24]
    4924:	mov	w1, w0
    4928:	ldr	w0, [sp, #32]
    492c:	sub	w0, w1, w0
    4930:	str	w0, [sp, #36]
    4934:	ldr	x0, [sp, #88]
    4938:	ldr	w1, [sp, #36]
    493c:	str	w1, [x0, #40]
    4940:	ldr	x0, [sp, #88]
    4944:	ldr	w0, [x0, #40]
    4948:	cmp	w0, #0x0
    494c:	b.ne	49c8 <XS_Compress__Raw__Bzip2_bzflush+0x33c>  // b.any
    4950:	ldr	x0, [sp, #72]
    4954:	ldr	x0, [x0]
    4958:	ldr	x1, [x0, #24]
    495c:	ldr	w0, [sp, #40]
    4960:	add	x0, x1, x0
    4964:	mov	x2, x0
    4968:	ldr	x1, [sp, #72]
    496c:	ldr	x0, [sp, #24]
    4970:	bl	14a0 <Perl_sv_grow@plt>
    4974:	mov	x1, x0
    4978:	ldr	x0, [sp, #88]
    497c:	str	x1, [x0, #32]
    4980:	ldr	w1, [sp, #32]
    4984:	ldr	w0, [sp, #36]
    4988:	add	w0, w1, w0
    498c:	str	w0, [sp, #32]
    4990:	ldr	x0, [sp, #88]
    4994:	ldr	x1, [x0, #32]
    4998:	ldr	w0, [sp, #32]
    499c:	add	x1, x1, x0
    49a0:	ldr	x0, [sp, #88]
    49a4:	str	x1, [x0, #32]
    49a8:	ldr	w0, [sp, #40]
    49ac:	str	w0, [sp, #36]
    49b0:	ldr	x0, [sp, #88]
    49b4:	ldr	w1, [sp, #36]
    49b8:	str	w1, [x0, #40]
    49bc:	ldr	w0, [sp, #40]
    49c0:	lsl	w0, w0, #1
    49c4:	str	w0, [sp, #40]
    49c8:	ldr	x0, [sp, #88]
    49cc:	add	x0, x0, #0x8
    49d0:	mov	w1, #0x1                   	// #1
    49d4:	bl	14d0 <BZ2_bzCompress@plt>
    49d8:	str	w0, [sp, #52]
    49dc:	ldr	w0, [sp, #52]
    49e0:	cmp	w0, #0x1
    49e4:	b.eq	49f8 <XS_Compress__Raw__Bzip2_bzflush+0x36c>  // b.none
    49e8:	ldr	w0, [sp, #52]
    49ec:	cmp	w0, #0x0
    49f0:	b.lt	49f8 <XS_Compress__Raw__Bzip2_bzflush+0x36c>  // b.tstop
    49f4:	b	4940 <XS_Compress__Raw__Bzip2_bzflush+0x2b4>
    49f8:	ldr	x0, [sp, #88]
    49fc:	ldr	w1, [sp, #52]
    4a00:	str	w1, [x0, #92]
    4a04:	ldr	x0, [sp, #88]
    4a08:	ldr	x1, [x0, #104]
    4a0c:	ldr	w2, [sp, #32]
    4a10:	ldr	w0, [sp, #36]
    4a14:	add	w2, w2, w0
    4a18:	ldr	x0, [sp, #88]
    4a1c:	ldr	w0, [x0, #40]
    4a20:	sub	w0, w2, w0
    4a24:	mov	w0, w0
    4a28:	add	x1, x1, x0
    4a2c:	ldr	x0, [sp, #88]
    4a30:	str	x1, [x0, #104]
    4a34:	ldr	w0, [sp, #52]
    4a38:	cmp	w0, #0x1
    4a3c:	b.ne	4ac4 <XS_Compress__Raw__Bzip2_bzflush+0x438>  // b.any
    4a40:	ldr	x0, [sp, #72]
    4a44:	ldr	w1, [x0, #12]
    4a48:	mov	w0, #0xff                  	// #255
    4a4c:	movk	w0, #0x5fff, lsl #16
    4a50:	and	w1, w1, w0
    4a54:	ldr	x0, [sp, #72]
    4a58:	str	w1, [x0, #12]
    4a5c:	ldr	x0, [sp, #72]
    4a60:	ldr	w1, [x0, #12]
    4a64:	mov	w0, #0x4400                	// #17408
    4a68:	orr	w1, w1, w0
    4a6c:	ldr	x0, [sp, #72]
    4a70:	str	w1, [x0, #12]
    4a74:	ldr	w1, [sp, #32]
    4a78:	ldr	w0, [sp, #36]
    4a7c:	add	w1, w1, w0
    4a80:	ldr	x0, [sp, #88]
    4a84:	ldr	w0, [x0, #40]
    4a88:	sub	w1, w1, w0
    4a8c:	ldr	x0, [sp, #72]
    4a90:	ldr	x0, [x0]
    4a94:	mov	w1, w1
    4a98:	str	x1, [x0, #16]
    4a9c:	ldr	x0, [sp, #72]
    4aa0:	ldr	w0, [x0, #12]
    4aa4:	lsr	w0, w0, #22
    4aa8:	mov	w0, w0
    4aac:	and	x0, x0, #0x1
    4ab0:	cmp	x0, #0x0
    4ab4:	b.eq	4ac4 <XS_Compress__Raw__Bzip2_bzflush+0x438>  // b.none
    4ab8:	ldr	x1, [sp, #72]
    4abc:	ldr	x0, [sp, #24]
    4ac0:	bl	1520 <Perl_mg_set@plt>
    4ac4:	ldr	x0, [sp, #24]
    4ac8:	bl	15f0 <Perl_sv_newmortal@plt>
    4acc:	str	x0, [sp, #96]
    4ad0:	ldr	w0, [sp, #52]
    4ad4:	scvtf	d0, w0
    4ad8:	ldr	x1, [sp, #96]
    4adc:	ldr	x0, [sp, #24]
    4ae0:	bl	1330 <Perl_sv_setnv@plt>
    4ae4:	ldr	w0, [sp, #52]
    4ae8:	cmp	w0, #0x0
    4aec:	b.eq	4afc <XS_Compress__Raw__Bzip2_bzflush+0x470>  // b.none
    4af0:	ldr	w0, [sp, #52]
    4af4:	bl	17f0 <GetErrorString>
    4af8:	b	4b04 <XS_Compress__Raw__Bzip2_bzflush+0x478>
    4afc:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    4b00:	add	x0, x0, #0xe90
    4b04:	mov	x2, x0
    4b08:	ldr	x1, [sp, #96]
    4b0c:	ldr	x0, [sp, #24]
    4b10:	bl	13f0 <Perl_sv_setpv@plt>
    4b14:	ldr	x0, [sp, #96]
    4b18:	ldr	w1, [x0, #12]
    4b1c:	mov	w0, #0x2200                	// #8704
    4b20:	orr	w1, w1, w0
    4b24:	ldr	x0, [sp, #96]
    4b28:	str	w1, [x0, #12]
    4b2c:	ldr	x0, [sp, #24]
    4b30:	ldr	x1, [x0, #24]
    4b34:	ldrsw	x0, [sp, #44]
    4b38:	lsl	x0, x0, #3
    4b3c:	add	x0, x1, x0
    4b40:	ldr	x1, [sp, #96]
    4b44:	str	x1, [x0]
    4b48:	mov	x0, #0x1                   	// #1
    4b4c:	str	x0, [sp, #104]
    4b50:	ldr	x0, [sp, #24]
    4b54:	ldr	x1, [x0, #24]
    4b58:	ldrsw	x2, [sp, #44]
    4b5c:	ldr	x0, [sp, #104]
    4b60:	add	x0, x2, x0
    4b64:	lsl	x0, x0, #3
    4b68:	sub	x0, x0, #0x8
    4b6c:	add	x1, x1, x0
    4b70:	ldr	x0, [sp, #24]
    4b74:	str	x1, [x0]
    4b78:	nop
    4b7c:	ldp	x29, x30, [sp], #112
    4b80:	ret

0000000000004b84 <XS_Compress__Raw__Bzip2_total_in_lo32>:
    4b84:	stp	x29, x30, [sp, #-112]!
    4b88:	mov	x29, sp
    4b8c:	str	x0, [sp, #24]
    4b90:	str	x1, [sp, #16]
    4b94:	ldr	x0, [sp, #24]
    4b98:	ldr	x0, [x0]
    4b9c:	str	x0, [sp, #48]
    4ba0:	ldr	x0, [sp, #24]
    4ba4:	bl	1790 <S_POPMARK>
    4ba8:	str	w0, [sp, #40]
    4bac:	ldr	x0, [sp, #24]
    4bb0:	ldr	x1, [x0, #24]
    4bb4:	ldr	w0, [sp, #40]
    4bb8:	add	w2, w0, #0x1
    4bbc:	str	w2, [sp, #40]
    4bc0:	sxtw	x0, w0
    4bc4:	lsl	x0, x0, #3
    4bc8:	add	x0, x1, x0
    4bcc:	str	x0, [sp, #56]
    4bd0:	ldr	x1, [sp, #48]
    4bd4:	ldr	x0, [sp, #56]
    4bd8:	sub	x0, x1, x0
    4bdc:	asr	x0, x0, #3
    4be0:	str	w0, [sp, #44]
    4be4:	ldr	w0, [sp, #44]
    4be8:	cmp	w0, #0x1
    4bec:	b.eq	4c00 <XS_Compress__Raw__Bzip2_total_in_lo32+0x7c>  // b.none
    4bf0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4bf4:	add	x1, x0, #0x130
    4bf8:	ldr	x0, [sp, #16]
    4bfc:	bl	1490 <Perl_croak_xs_usage@plt>
    4c00:	ldr	x0, [sp, #24]
    4c04:	ldr	x0, [x0, #8]
    4c08:	ldrb	w0, [x0, #35]
    4c0c:	and	w0, w0, #0x4
    4c10:	cmp	w0, #0x0
    4c14:	b.eq	4c3c <XS_Compress__Raw__Bzip2_total_in_lo32+0xb8>  // b.none
    4c18:	ldr	x0, [sp, #24]
    4c1c:	ldr	x1, [x0, #16]
    4c20:	ldr	x0, [sp, #24]
    4c24:	ldr	x0, [x0, #8]
    4c28:	ldr	x0, [x0, #24]
    4c2c:	lsl	x0, x0, #3
    4c30:	add	x0, x1, x0
    4c34:	ldr	x0, [x0]
    4c38:	b	4c44 <XS_Compress__Raw__Bzip2_total_in_lo32+0xc0>
    4c3c:	ldr	x0, [sp, #24]
    4c40:	bl	15f0 <Perl_sv_newmortal@plt>
    4c44:	str	x0, [sp, #64]
    4c48:	ldr	x0, [sp, #24]
    4c4c:	ldr	x1, [x0, #24]
    4c50:	ldrsw	x0, [sp, #40]
    4c54:	lsl	x0, x0, #3
    4c58:	add	x0, x1, x0
    4c5c:	ldr	x0, [x0]
    4c60:	ldr	w0, [x0, #12]
    4c64:	and	w0, w0, #0x800
    4c68:	cmp	w0, #0x0
    4c6c:	b.eq	4dd8 <XS_Compress__Raw__Bzip2_total_in_lo32+0x254>  // b.none
    4c70:	ldr	x0, [sp, #24]
    4c74:	ldr	x1, [x0, #24]
    4c78:	ldrsw	x0, [sp, #40]
    4c7c:	lsl	x0, x0, #3
    4c80:	add	x0, x1, x0
    4c84:	ldr	x1, [x0]
    4c88:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4c8c:	add	x2, x0, #0x118
    4c90:	ldr	x0, [sp, #24]
    4c94:	bl	1390 <Perl_sv_derived_from@plt>
    4c98:	and	w0, w0, #0xff
    4c9c:	cmp	w0, #0x0
    4ca0:	b.eq	4dd8 <XS_Compress__Raw__Bzip2_total_in_lo32+0x254>  // b.none
    4ca4:	ldr	x0, [sp, #24]
    4ca8:	ldr	x1, [x0, #24]
    4cac:	ldrsw	x0, [sp, #40]
    4cb0:	lsl	x0, x0, #3
    4cb4:	add	x0, x1, x0
    4cb8:	ldr	x0, [x0]
    4cbc:	ldr	x0, [x0, #16]
    4cc0:	ldr	w1, [x0, #12]
    4cc4:	mov	w0, #0x100                 	// #256
    4cc8:	movk	w0, #0x20, lsl #16
    4ccc:	and	w0, w1, w0
    4cd0:	cmp	w0, #0x100
    4cd4:	b.ne	4d00 <XS_Compress__Raw__Bzip2_total_in_lo32+0x17c>  // b.any
    4cd8:	ldr	x0, [sp, #24]
    4cdc:	ldr	x1, [x0, #24]
    4ce0:	ldrsw	x0, [sp, #40]
    4ce4:	lsl	x0, x0, #3
    4ce8:	add	x0, x1, x0
    4cec:	ldr	x0, [x0]
    4cf0:	ldr	x0, [x0, #16]
    4cf4:	ldr	x0, [x0]
    4cf8:	ldr	x0, [x0, #32]
    4cfc:	b	4d2c <XS_Compress__Raw__Bzip2_total_in_lo32+0x1a8>
    4d00:	ldr	x0, [sp, #24]
    4d04:	ldr	x1, [x0, #24]
    4d08:	ldrsw	x0, [sp, #40]
    4d0c:	lsl	x0, x0, #3
    4d10:	add	x0, x1, x0
    4d14:	ldr	x0, [x0]
    4d18:	ldr	x0, [x0, #16]
    4d1c:	mov	w2, #0x2                   	// #2
    4d20:	mov	x1, x0
    4d24:	ldr	x0, [sp, #24]
    4d28:	bl	1320 <Perl_sv_2iv_flags@plt>
    4d2c:	str	x0, [sp, #72]
    4d30:	ldr	x0, [sp, #72]
    4d34:	str	x0, [sp, #80]
    4d38:	nop
    4d3c:	ldr	x0, [sp, #80]
    4d40:	ldr	w0, [x0, #20]
    4d44:	mov	w0, w0
    4d48:	str	x0, [sp, #88]
    4d4c:	ldr	x0, [sp, #24]
    4d50:	ldr	x1, [x0, #24]
    4d54:	ldrsw	x0, [sp, #40]
    4d58:	lsl	x0, x0, #3
    4d5c:	sub	x0, x0, #0x8
    4d60:	add	x0, x1, x0
    4d64:	str	x0, [sp, #48]
    4d68:	ldr	x0, [sp, #88]
    4d6c:	str	x0, [sp, #96]
    4d70:	ldr	x0, [sp, #64]
    4d74:	ldr	w1, [x0, #12]
    4d78:	mov	w0, #0x8ff                 	// #2303
    4d7c:	movk	w0, #0x9981, lsl #16
    4d80:	and	w0, w1, w0
    4d84:	cmp	w0, #0x1
    4d88:	cset	w0, eq  // eq = none
    4d8c:	and	w0, w0, #0xff
    4d90:	mov	w1, w0
    4d94:	ldr	x0, [sp, #24]
    4d98:	ldrb	w0, [x0, #185]
    4d9c:	eor	w0, w0, #0x1
    4da0:	and	w0, w0, #0xff
    4da4:	and	w0, w1, w0
    4da8:	ldr	x1, [sp, #96]
    4dac:	mvn	x1, x1
    4db0:	lsr	x1, x1, #63
    4db4:	and	w1, w1, #0xff
    4db8:	and	w0, w0, w1
    4dbc:	cmp	w0, #0x0
    4dc0:	cset	w0, ne  // ne = any
    4dc4:	and	w0, w0, #0xff
    4dc8:	and	x0, x0, #0xff
    4dcc:	cmp	x0, #0x0
    4dd0:	b.eq	4e24 <XS_Compress__Raw__Bzip2_total_in_lo32+0x2a0>  // b.none
    4dd4:	b	4dfc <XS_Compress__Raw__Bzip2_total_in_lo32+0x278>
    4dd8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4ddc:	add	x3, x0, #0x118
    4de0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4de4:	add	x2, x0, #0x130
    4de8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4dec:	add	x1, x0, #0x360
    4df0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4df4:	add	x0, x0, #0x160
    4df8:	bl	1500 <Perl_croak_nocontext@plt>
    4dfc:	ldr	x0, [sp, #64]
    4e00:	ldr	w1, [x0, #12]
    4e04:	mov	w0, #0x1100                	// #4352
    4e08:	orr	w1, w1, w0
    4e0c:	ldr	x0, [sp, #64]
    4e10:	str	w1, [x0, #12]
    4e14:	ldr	x1, [sp, #96]
    4e18:	ldr	x0, [sp, #64]
    4e1c:	str	x1, [x0, #16]
    4e20:	b	4e34 <XS_Compress__Raw__Bzip2_total_in_lo32+0x2b0>
    4e24:	ldr	x2, [sp, #96]
    4e28:	ldr	x1, [sp, #64]
    4e2c:	ldr	x0, [sp, #24]
    4e30:	bl	15b0 <Perl_sv_setuv_mg@plt>
    4e34:	ldr	x0, [sp, #48]
    4e38:	add	x0, x0, #0x8
    4e3c:	str	x0, [sp, #48]
    4e40:	ldr	x0, [sp, #48]
    4e44:	ldr	x1, [sp, #64]
    4e48:	str	x1, [x0]
    4e4c:	mov	x0, #0x1                   	// #1
    4e50:	str	x0, [sp, #104]
    4e54:	ldr	x0, [sp, #24]
    4e58:	ldr	x1, [x0, #24]
    4e5c:	ldrsw	x2, [sp, #40]
    4e60:	ldr	x0, [sp, #104]
    4e64:	add	x0, x2, x0
    4e68:	lsl	x0, x0, #3
    4e6c:	sub	x0, x0, #0x8
    4e70:	add	x1, x1, x0
    4e74:	ldr	x0, [sp, #24]
    4e78:	str	x1, [x0]
    4e7c:	nop
    4e80:	ldp	x29, x30, [sp], #112
    4e84:	ret

0000000000004e88 <XS_Compress__Raw__Bzip2_total_out_lo32>:
    4e88:	stp	x29, x30, [sp, #-112]!
    4e8c:	mov	x29, sp
    4e90:	str	x0, [sp, #24]
    4e94:	str	x1, [sp, #16]
    4e98:	ldr	x0, [sp, #24]
    4e9c:	ldr	x0, [x0]
    4ea0:	str	x0, [sp, #48]
    4ea4:	ldr	x0, [sp, #24]
    4ea8:	bl	1790 <S_POPMARK>
    4eac:	str	w0, [sp, #40]
    4eb0:	ldr	x0, [sp, #24]
    4eb4:	ldr	x1, [x0, #24]
    4eb8:	ldr	w0, [sp, #40]
    4ebc:	add	w2, w0, #0x1
    4ec0:	str	w2, [sp, #40]
    4ec4:	sxtw	x0, w0
    4ec8:	lsl	x0, x0, #3
    4ecc:	add	x0, x1, x0
    4ed0:	str	x0, [sp, #56]
    4ed4:	ldr	x1, [sp, #48]
    4ed8:	ldr	x0, [sp, #56]
    4edc:	sub	x0, x1, x0
    4ee0:	asr	x0, x0, #3
    4ee4:	str	w0, [sp, #44]
    4ee8:	ldr	w0, [sp, #44]
    4eec:	cmp	w0, #0x1
    4ef0:	b.eq	4f04 <XS_Compress__Raw__Bzip2_total_out_lo32+0x7c>  // b.none
    4ef4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4ef8:	add	x1, x0, #0x130
    4efc:	ldr	x0, [sp, #16]
    4f00:	bl	1490 <Perl_croak_xs_usage@plt>
    4f04:	ldr	x0, [sp, #24]
    4f08:	ldr	x0, [x0, #8]
    4f0c:	ldrb	w0, [x0, #35]
    4f10:	and	w0, w0, #0x4
    4f14:	cmp	w0, #0x0
    4f18:	b.eq	4f40 <XS_Compress__Raw__Bzip2_total_out_lo32+0xb8>  // b.none
    4f1c:	ldr	x0, [sp, #24]
    4f20:	ldr	x1, [x0, #16]
    4f24:	ldr	x0, [sp, #24]
    4f28:	ldr	x0, [x0, #8]
    4f2c:	ldr	x0, [x0, #24]
    4f30:	lsl	x0, x0, #3
    4f34:	add	x0, x1, x0
    4f38:	ldr	x0, [x0]
    4f3c:	b	4f48 <XS_Compress__Raw__Bzip2_total_out_lo32+0xc0>
    4f40:	ldr	x0, [sp, #24]
    4f44:	bl	15f0 <Perl_sv_newmortal@plt>
    4f48:	str	x0, [sp, #64]
    4f4c:	ldr	x0, [sp, #24]
    4f50:	ldr	x1, [x0, #24]
    4f54:	ldrsw	x0, [sp, #40]
    4f58:	lsl	x0, x0, #3
    4f5c:	add	x0, x1, x0
    4f60:	ldr	x0, [x0]
    4f64:	ldr	w0, [x0, #12]
    4f68:	and	w0, w0, #0x800
    4f6c:	cmp	w0, #0x0
    4f70:	b.eq	50dc <XS_Compress__Raw__Bzip2_total_out_lo32+0x254>  // b.none
    4f74:	ldr	x0, [sp, #24]
    4f78:	ldr	x1, [x0, #24]
    4f7c:	ldrsw	x0, [sp, #40]
    4f80:	lsl	x0, x0, #3
    4f84:	add	x0, x1, x0
    4f88:	ldr	x1, [x0]
    4f8c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    4f90:	add	x2, x0, #0x118
    4f94:	ldr	x0, [sp, #24]
    4f98:	bl	1390 <Perl_sv_derived_from@plt>
    4f9c:	and	w0, w0, #0xff
    4fa0:	cmp	w0, #0x0
    4fa4:	b.eq	50dc <XS_Compress__Raw__Bzip2_total_out_lo32+0x254>  // b.none
    4fa8:	ldr	x0, [sp, #24]
    4fac:	ldr	x1, [x0, #24]
    4fb0:	ldrsw	x0, [sp, #40]
    4fb4:	lsl	x0, x0, #3
    4fb8:	add	x0, x1, x0
    4fbc:	ldr	x0, [x0]
    4fc0:	ldr	x0, [x0, #16]
    4fc4:	ldr	w1, [x0, #12]
    4fc8:	mov	w0, #0x100                 	// #256
    4fcc:	movk	w0, #0x20, lsl #16
    4fd0:	and	w0, w1, w0
    4fd4:	cmp	w0, #0x100
    4fd8:	b.ne	5004 <XS_Compress__Raw__Bzip2_total_out_lo32+0x17c>  // b.any
    4fdc:	ldr	x0, [sp, #24]
    4fe0:	ldr	x1, [x0, #24]
    4fe4:	ldrsw	x0, [sp, #40]
    4fe8:	lsl	x0, x0, #3
    4fec:	add	x0, x1, x0
    4ff0:	ldr	x0, [x0]
    4ff4:	ldr	x0, [x0, #16]
    4ff8:	ldr	x0, [x0]
    4ffc:	ldr	x0, [x0, #32]
    5000:	b	5030 <XS_Compress__Raw__Bzip2_total_out_lo32+0x1a8>
    5004:	ldr	x0, [sp, #24]
    5008:	ldr	x1, [x0, #24]
    500c:	ldrsw	x0, [sp, #40]
    5010:	lsl	x0, x0, #3
    5014:	add	x0, x1, x0
    5018:	ldr	x0, [x0]
    501c:	ldr	x0, [x0, #16]
    5020:	mov	w2, #0x2                   	// #2
    5024:	mov	x1, x0
    5028:	ldr	x0, [sp, #24]
    502c:	bl	1320 <Perl_sv_2iv_flags@plt>
    5030:	str	x0, [sp, #72]
    5034:	ldr	x0, [sp, #72]
    5038:	str	x0, [sp, #80]
    503c:	nop
    5040:	ldr	x0, [sp, #80]
    5044:	ldr	w0, [x0, #44]
    5048:	mov	w0, w0
    504c:	str	x0, [sp, #88]
    5050:	ldr	x0, [sp, #24]
    5054:	ldr	x1, [x0, #24]
    5058:	ldrsw	x0, [sp, #40]
    505c:	lsl	x0, x0, #3
    5060:	sub	x0, x0, #0x8
    5064:	add	x0, x1, x0
    5068:	str	x0, [sp, #48]
    506c:	ldr	x0, [sp, #88]
    5070:	str	x0, [sp, #96]
    5074:	ldr	x0, [sp, #64]
    5078:	ldr	w1, [x0, #12]
    507c:	mov	w0, #0x8ff                 	// #2303
    5080:	movk	w0, #0x9981, lsl #16
    5084:	and	w0, w1, w0
    5088:	cmp	w0, #0x1
    508c:	cset	w0, eq  // eq = none
    5090:	and	w0, w0, #0xff
    5094:	mov	w1, w0
    5098:	ldr	x0, [sp, #24]
    509c:	ldrb	w0, [x0, #185]
    50a0:	eor	w0, w0, #0x1
    50a4:	and	w0, w0, #0xff
    50a8:	and	w0, w1, w0
    50ac:	ldr	x1, [sp, #96]
    50b0:	mvn	x1, x1
    50b4:	lsr	x1, x1, #63
    50b8:	and	w1, w1, #0xff
    50bc:	and	w0, w0, w1
    50c0:	cmp	w0, #0x0
    50c4:	cset	w0, ne  // ne = any
    50c8:	and	w0, w0, #0xff
    50cc:	and	x0, x0, #0xff
    50d0:	cmp	x0, #0x0
    50d4:	b.eq	5128 <XS_Compress__Raw__Bzip2_total_out_lo32+0x2a0>  // b.none
    50d8:	b	5100 <XS_Compress__Raw__Bzip2_total_out_lo32+0x278>
    50dc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    50e0:	add	x3, x0, #0x118
    50e4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    50e8:	add	x2, x0, #0x130
    50ec:	adrp	x0, 8000 <my_z_errmsg+0x630>
    50f0:	add	x1, x0, #0x388
    50f4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    50f8:	add	x0, x0, #0x160
    50fc:	bl	1500 <Perl_croak_nocontext@plt>
    5100:	ldr	x0, [sp, #64]
    5104:	ldr	w1, [x0, #12]
    5108:	mov	w0, #0x1100                	// #4352
    510c:	orr	w1, w1, w0
    5110:	ldr	x0, [sp, #64]
    5114:	str	w1, [x0, #12]
    5118:	ldr	x1, [sp, #96]
    511c:	ldr	x0, [sp, #64]
    5120:	str	x1, [x0, #16]
    5124:	b	5138 <XS_Compress__Raw__Bzip2_total_out_lo32+0x2b0>
    5128:	ldr	x2, [sp, #96]
    512c:	ldr	x1, [sp, #64]
    5130:	ldr	x0, [sp, #24]
    5134:	bl	15b0 <Perl_sv_setuv_mg@plt>
    5138:	ldr	x0, [sp, #48]
    513c:	add	x0, x0, #0x8
    5140:	str	x0, [sp, #48]
    5144:	ldr	x0, [sp, #48]
    5148:	ldr	x1, [sp, #64]
    514c:	str	x1, [x0]
    5150:	mov	x0, #0x1                   	// #1
    5154:	str	x0, [sp, #104]
    5158:	ldr	x0, [sp, #24]
    515c:	ldr	x1, [x0, #24]
    5160:	ldrsw	x2, [sp, #40]
    5164:	ldr	x0, [sp, #104]
    5168:	add	x0, x2, x0
    516c:	lsl	x0, x0, #3
    5170:	sub	x0, x0, #0x8
    5174:	add	x1, x1, x0
    5178:	ldr	x0, [sp, #24]
    517c:	str	x1, [x0]
    5180:	nop
    5184:	ldp	x29, x30, [sp], #112
    5188:	ret

000000000000518c <XS_Compress__Raw__Bzip2_compressedBytes>:
    518c:	stp	x29, x30, [sp, #-112]!
    5190:	mov	x29, sp
    5194:	str	x0, [sp, #24]
    5198:	str	x1, [sp, #16]
    519c:	ldr	x0, [sp, #24]
    51a0:	ldr	x0, [x0]
    51a4:	str	x0, [sp, #48]
    51a8:	ldr	x0, [sp, #24]
    51ac:	bl	1790 <S_POPMARK>
    51b0:	str	w0, [sp, #40]
    51b4:	ldr	x0, [sp, #24]
    51b8:	ldr	x1, [x0, #24]
    51bc:	ldr	w0, [sp, #40]
    51c0:	add	w2, w0, #0x1
    51c4:	str	w2, [sp, #40]
    51c8:	sxtw	x0, w0
    51cc:	lsl	x0, x0, #3
    51d0:	add	x0, x1, x0
    51d4:	str	x0, [sp, #56]
    51d8:	ldr	x1, [sp, #48]
    51dc:	ldr	x0, [sp, #56]
    51e0:	sub	x0, x1, x0
    51e4:	asr	x0, x0, #3
    51e8:	str	w0, [sp, #44]
    51ec:	ldr	w0, [sp, #44]
    51f0:	cmp	w0, #0x1
    51f4:	b.eq	5208 <XS_Compress__Raw__Bzip2_compressedBytes+0x7c>  // b.none
    51f8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    51fc:	add	x1, x0, #0x130
    5200:	ldr	x0, [sp, #16]
    5204:	bl	1490 <Perl_croak_xs_usage@plt>
    5208:	ldr	x0, [sp, #24]
    520c:	ldr	x0, [x0, #8]
    5210:	ldrb	w0, [x0, #35]
    5214:	and	w0, w0, #0x4
    5218:	cmp	w0, #0x0
    521c:	b.eq	5244 <XS_Compress__Raw__Bzip2_compressedBytes+0xb8>  // b.none
    5220:	ldr	x0, [sp, #24]
    5224:	ldr	x1, [x0, #16]
    5228:	ldr	x0, [sp, #24]
    522c:	ldr	x0, [x0, #8]
    5230:	ldr	x0, [x0, #24]
    5234:	lsl	x0, x0, #3
    5238:	add	x0, x1, x0
    523c:	ldr	x0, [x0]
    5240:	b	524c <XS_Compress__Raw__Bzip2_compressedBytes+0xc0>
    5244:	ldr	x0, [sp, #24]
    5248:	bl	15f0 <Perl_sv_newmortal@plt>
    524c:	str	x0, [sp, #64]
    5250:	ldr	x0, [sp, #24]
    5254:	ldr	x1, [x0, #24]
    5258:	ldrsw	x0, [sp, #40]
    525c:	lsl	x0, x0, #3
    5260:	add	x0, x1, x0
    5264:	ldr	x0, [x0]
    5268:	ldr	w0, [x0, #12]
    526c:	and	w0, w0, #0x800
    5270:	cmp	w0, #0x0
    5274:	b.eq	53dc <XS_Compress__Raw__Bzip2_compressedBytes+0x250>  // b.none
    5278:	ldr	x0, [sp, #24]
    527c:	ldr	x1, [x0, #24]
    5280:	ldrsw	x0, [sp, #40]
    5284:	lsl	x0, x0, #3
    5288:	add	x0, x1, x0
    528c:	ldr	x1, [x0]
    5290:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5294:	add	x2, x0, #0x118
    5298:	ldr	x0, [sp, #24]
    529c:	bl	1390 <Perl_sv_derived_from@plt>
    52a0:	and	w0, w0, #0xff
    52a4:	cmp	w0, #0x0
    52a8:	b.eq	53dc <XS_Compress__Raw__Bzip2_compressedBytes+0x250>  // b.none
    52ac:	ldr	x0, [sp, #24]
    52b0:	ldr	x1, [x0, #24]
    52b4:	ldrsw	x0, [sp, #40]
    52b8:	lsl	x0, x0, #3
    52bc:	add	x0, x1, x0
    52c0:	ldr	x0, [x0]
    52c4:	ldr	x0, [x0, #16]
    52c8:	ldr	w1, [x0, #12]
    52cc:	mov	w0, #0x100                 	// #256
    52d0:	movk	w0, #0x20, lsl #16
    52d4:	and	w0, w1, w0
    52d8:	cmp	w0, #0x100
    52dc:	b.ne	5308 <XS_Compress__Raw__Bzip2_compressedBytes+0x17c>  // b.any
    52e0:	ldr	x0, [sp, #24]
    52e4:	ldr	x1, [x0, #24]
    52e8:	ldrsw	x0, [sp, #40]
    52ec:	lsl	x0, x0, #3
    52f0:	add	x0, x1, x0
    52f4:	ldr	x0, [x0]
    52f8:	ldr	x0, [x0, #16]
    52fc:	ldr	x0, [x0]
    5300:	ldr	x0, [x0, #32]
    5304:	b	5334 <XS_Compress__Raw__Bzip2_compressedBytes+0x1a8>
    5308:	ldr	x0, [sp, #24]
    530c:	ldr	x1, [x0, #24]
    5310:	ldrsw	x0, [sp, #40]
    5314:	lsl	x0, x0, #3
    5318:	add	x0, x1, x0
    531c:	ldr	x0, [x0]
    5320:	ldr	x0, [x0, #16]
    5324:	mov	w2, #0x2                   	// #2
    5328:	mov	x1, x0
    532c:	ldr	x0, [sp, #24]
    5330:	bl	1320 <Perl_sv_2iv_flags@plt>
    5334:	str	x0, [sp, #72]
    5338:	ldr	x0, [sp, #72]
    533c:	str	x0, [sp, #80]
    5340:	nop
    5344:	ldr	x0, [sp, #80]
    5348:	ldr	x0, [x0, #104]
    534c:	str	x0, [sp, #88]
    5350:	ldr	x0, [sp, #24]
    5354:	ldr	x1, [x0, #24]
    5358:	ldrsw	x0, [sp, #40]
    535c:	lsl	x0, x0, #3
    5360:	sub	x0, x0, #0x8
    5364:	add	x0, x1, x0
    5368:	str	x0, [sp, #48]
    536c:	ldr	x0, [sp, #88]
    5370:	str	x0, [sp, #96]
    5374:	ldr	x0, [sp, #64]
    5378:	ldr	w1, [x0, #12]
    537c:	mov	w0, #0x8ff                 	// #2303
    5380:	movk	w0, #0x9981, lsl #16
    5384:	and	w0, w1, w0
    5388:	cmp	w0, #0x1
    538c:	cset	w0, eq  // eq = none
    5390:	and	w0, w0, #0xff
    5394:	mov	w1, w0
    5398:	ldr	x0, [sp, #24]
    539c:	ldrb	w0, [x0, #185]
    53a0:	eor	w0, w0, #0x1
    53a4:	and	w0, w0, #0xff
    53a8:	and	w0, w1, w0
    53ac:	ldr	x1, [sp, #96]
    53b0:	mvn	x1, x1
    53b4:	lsr	x1, x1, #63
    53b8:	and	w1, w1, #0xff
    53bc:	and	w0, w0, w1
    53c0:	cmp	w0, #0x0
    53c4:	cset	w0, ne  // ne = any
    53c8:	and	w0, w0, #0xff
    53cc:	and	x0, x0, #0xff
    53d0:	cmp	x0, #0x0
    53d4:	b.eq	5428 <XS_Compress__Raw__Bzip2_compressedBytes+0x29c>  // b.none
    53d8:	b	5400 <XS_Compress__Raw__Bzip2_compressedBytes+0x274>
    53dc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    53e0:	add	x3, x0, #0x118
    53e4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    53e8:	add	x2, x0, #0x130
    53ec:	adrp	x0, 8000 <my_z_errmsg+0x630>
    53f0:	add	x1, x0, #0x3b0
    53f4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    53f8:	add	x0, x0, #0x160
    53fc:	bl	1500 <Perl_croak_nocontext@plt>
    5400:	ldr	x0, [sp, #64]
    5404:	ldr	w1, [x0, #12]
    5408:	mov	w0, #0x1100                	// #4352
    540c:	orr	w1, w1, w0
    5410:	ldr	x0, [sp, #64]
    5414:	str	w1, [x0, #12]
    5418:	ldr	x1, [sp, #96]
    541c:	ldr	x0, [sp, #64]
    5420:	str	x1, [x0, #16]
    5424:	b	5438 <XS_Compress__Raw__Bzip2_compressedBytes+0x2ac>
    5428:	ldr	x2, [sp, #96]
    542c:	ldr	x1, [sp, #64]
    5430:	ldr	x0, [sp, #24]
    5434:	bl	15b0 <Perl_sv_setuv_mg@plt>
    5438:	ldr	x0, [sp, #48]
    543c:	add	x0, x0, #0x8
    5440:	str	x0, [sp, #48]
    5444:	ldr	x0, [sp, #48]
    5448:	ldr	x1, [sp, #64]
    544c:	str	x1, [x0]
    5450:	mov	x0, #0x1                   	// #1
    5454:	str	x0, [sp, #104]
    5458:	ldr	x0, [sp, #24]
    545c:	ldr	x1, [x0, #24]
    5460:	ldrsw	x2, [sp, #40]
    5464:	ldr	x0, [sp, #104]
    5468:	add	x0, x2, x0
    546c:	lsl	x0, x0, #3
    5470:	sub	x0, x0, #0x8
    5474:	add	x1, x1, x0
    5478:	ldr	x0, [sp, #24]
    547c:	str	x1, [x0]
    5480:	nop
    5484:	ldp	x29, x30, [sp], #112
    5488:	ret

000000000000548c <XS_Compress__Raw__Bzip2_uncompressedBytes>:
    548c:	stp	x29, x30, [sp, #-112]!
    5490:	mov	x29, sp
    5494:	str	x0, [sp, #24]
    5498:	str	x1, [sp, #16]
    549c:	ldr	x0, [sp, #24]
    54a0:	ldr	x0, [x0]
    54a4:	str	x0, [sp, #48]
    54a8:	ldr	x0, [sp, #24]
    54ac:	bl	1790 <S_POPMARK>
    54b0:	str	w0, [sp, #40]
    54b4:	ldr	x0, [sp, #24]
    54b8:	ldr	x1, [x0, #24]
    54bc:	ldr	w0, [sp, #40]
    54c0:	add	w2, w0, #0x1
    54c4:	str	w2, [sp, #40]
    54c8:	sxtw	x0, w0
    54cc:	lsl	x0, x0, #3
    54d0:	add	x0, x1, x0
    54d4:	str	x0, [sp, #56]
    54d8:	ldr	x1, [sp, #48]
    54dc:	ldr	x0, [sp, #56]
    54e0:	sub	x0, x1, x0
    54e4:	asr	x0, x0, #3
    54e8:	str	w0, [sp, #44]
    54ec:	ldr	w0, [sp, #44]
    54f0:	cmp	w0, #0x1
    54f4:	b.eq	5508 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x7c>  // b.none
    54f8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    54fc:	add	x1, x0, #0x130
    5500:	ldr	x0, [sp, #16]
    5504:	bl	1490 <Perl_croak_xs_usage@plt>
    5508:	ldr	x0, [sp, #24]
    550c:	ldr	x0, [x0, #8]
    5510:	ldrb	w0, [x0, #35]
    5514:	and	w0, w0, #0x4
    5518:	cmp	w0, #0x0
    551c:	b.eq	5544 <XS_Compress__Raw__Bzip2_uncompressedBytes+0xb8>  // b.none
    5520:	ldr	x0, [sp, #24]
    5524:	ldr	x1, [x0, #16]
    5528:	ldr	x0, [sp, #24]
    552c:	ldr	x0, [x0, #8]
    5530:	ldr	x0, [x0, #24]
    5534:	lsl	x0, x0, #3
    5538:	add	x0, x1, x0
    553c:	ldr	x0, [x0]
    5540:	b	554c <XS_Compress__Raw__Bzip2_uncompressedBytes+0xc0>
    5544:	ldr	x0, [sp, #24]
    5548:	bl	15f0 <Perl_sv_newmortal@plt>
    554c:	str	x0, [sp, #64]
    5550:	ldr	x0, [sp, #24]
    5554:	ldr	x1, [x0, #24]
    5558:	ldrsw	x0, [sp, #40]
    555c:	lsl	x0, x0, #3
    5560:	add	x0, x1, x0
    5564:	ldr	x0, [x0]
    5568:	ldr	w0, [x0, #12]
    556c:	and	w0, w0, #0x800
    5570:	cmp	w0, #0x0
    5574:	b.eq	56dc <XS_Compress__Raw__Bzip2_uncompressedBytes+0x250>  // b.none
    5578:	ldr	x0, [sp, #24]
    557c:	ldr	x1, [x0, #24]
    5580:	ldrsw	x0, [sp, #40]
    5584:	lsl	x0, x0, #3
    5588:	add	x0, x1, x0
    558c:	ldr	x1, [x0]
    5590:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5594:	add	x2, x0, #0x118
    5598:	ldr	x0, [sp, #24]
    559c:	bl	1390 <Perl_sv_derived_from@plt>
    55a0:	and	w0, w0, #0xff
    55a4:	cmp	w0, #0x0
    55a8:	b.eq	56dc <XS_Compress__Raw__Bzip2_uncompressedBytes+0x250>  // b.none
    55ac:	ldr	x0, [sp, #24]
    55b0:	ldr	x1, [x0, #24]
    55b4:	ldrsw	x0, [sp, #40]
    55b8:	lsl	x0, x0, #3
    55bc:	add	x0, x1, x0
    55c0:	ldr	x0, [x0]
    55c4:	ldr	x0, [x0, #16]
    55c8:	ldr	w1, [x0, #12]
    55cc:	mov	w0, #0x100                 	// #256
    55d0:	movk	w0, #0x20, lsl #16
    55d4:	and	w0, w1, w0
    55d8:	cmp	w0, #0x100
    55dc:	b.ne	5608 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x17c>  // b.any
    55e0:	ldr	x0, [sp, #24]
    55e4:	ldr	x1, [x0, #24]
    55e8:	ldrsw	x0, [sp, #40]
    55ec:	lsl	x0, x0, #3
    55f0:	add	x0, x1, x0
    55f4:	ldr	x0, [x0]
    55f8:	ldr	x0, [x0, #16]
    55fc:	ldr	x0, [x0]
    5600:	ldr	x0, [x0, #32]
    5604:	b	5634 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x1a8>
    5608:	ldr	x0, [sp, #24]
    560c:	ldr	x1, [x0, #24]
    5610:	ldrsw	x0, [sp, #40]
    5614:	lsl	x0, x0, #3
    5618:	add	x0, x1, x0
    561c:	ldr	x0, [x0]
    5620:	ldr	x0, [x0, #16]
    5624:	mov	w2, #0x2                   	// #2
    5628:	mov	x1, x0
    562c:	ldr	x0, [sp, #24]
    5630:	bl	1320 <Perl_sv_2iv_flags@plt>
    5634:	str	x0, [sp, #72]
    5638:	ldr	x0, [sp, #72]
    563c:	str	x0, [sp, #80]
    5640:	nop
    5644:	ldr	x0, [sp, #80]
    5648:	ldr	x0, [x0, #112]
    564c:	str	x0, [sp, #88]
    5650:	ldr	x0, [sp, #24]
    5654:	ldr	x1, [x0, #24]
    5658:	ldrsw	x0, [sp, #40]
    565c:	lsl	x0, x0, #3
    5660:	sub	x0, x0, #0x8
    5664:	add	x0, x1, x0
    5668:	str	x0, [sp, #48]
    566c:	ldr	x0, [sp, #88]
    5670:	str	x0, [sp, #96]
    5674:	ldr	x0, [sp, #64]
    5678:	ldr	w1, [x0, #12]
    567c:	mov	w0, #0x8ff                 	// #2303
    5680:	movk	w0, #0x9981, lsl #16
    5684:	and	w0, w1, w0
    5688:	cmp	w0, #0x1
    568c:	cset	w0, eq  // eq = none
    5690:	and	w0, w0, #0xff
    5694:	mov	w1, w0
    5698:	ldr	x0, [sp, #24]
    569c:	ldrb	w0, [x0, #185]
    56a0:	eor	w0, w0, #0x1
    56a4:	and	w0, w0, #0xff
    56a8:	and	w0, w1, w0
    56ac:	ldr	x1, [sp, #96]
    56b0:	mvn	x1, x1
    56b4:	lsr	x1, x1, #63
    56b8:	and	w1, w1, #0xff
    56bc:	and	w0, w0, w1
    56c0:	cmp	w0, #0x0
    56c4:	cset	w0, ne  // ne = any
    56c8:	and	w0, w0, #0xff
    56cc:	and	x0, x0, #0xff
    56d0:	cmp	x0, #0x0
    56d4:	b.eq	5728 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x29c>  // b.none
    56d8:	b	5700 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x274>
    56dc:	adrp	x0, 8000 <my_z_errmsg+0x630>
    56e0:	add	x3, x0, #0x118
    56e4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    56e8:	add	x2, x0, #0x130
    56ec:	adrp	x0, 8000 <my_z_errmsg+0x630>
    56f0:	add	x1, x0, #0x3d8
    56f4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    56f8:	add	x0, x0, #0x160
    56fc:	bl	1500 <Perl_croak_nocontext@plt>
    5700:	ldr	x0, [sp, #64]
    5704:	ldr	w1, [x0, #12]
    5708:	mov	w0, #0x1100                	// #4352
    570c:	orr	w1, w1, w0
    5710:	ldr	x0, [sp, #64]
    5714:	str	w1, [x0, #12]
    5718:	ldr	x1, [sp, #96]
    571c:	ldr	x0, [sp, #64]
    5720:	str	x1, [x0, #16]
    5724:	b	5738 <XS_Compress__Raw__Bzip2_uncompressedBytes+0x2ac>
    5728:	ldr	x2, [sp, #96]
    572c:	ldr	x1, [sp, #64]
    5730:	ldr	x0, [sp, #24]
    5734:	bl	15b0 <Perl_sv_setuv_mg@plt>
    5738:	ldr	x0, [sp, #48]
    573c:	add	x0, x0, #0x8
    5740:	str	x0, [sp, #48]
    5744:	ldr	x0, [sp, #48]
    5748:	ldr	x1, [sp, #64]
    574c:	str	x1, [x0]
    5750:	mov	x0, #0x1                   	// #1
    5754:	str	x0, [sp, #104]
    5758:	ldr	x0, [sp, #24]
    575c:	ldr	x1, [x0, #24]
    5760:	ldrsw	x2, [sp, #40]
    5764:	ldr	x0, [sp, #104]
    5768:	add	x0, x2, x0
    576c:	lsl	x0, x0, #3
    5770:	sub	x0, x0, #0x8
    5774:	add	x1, x1, x0
    5778:	ldr	x0, [sp, #24]
    577c:	str	x1, [x0]
    5780:	nop
    5784:	ldp	x29, x30, [sp], #112
    5788:	ret

000000000000578c <XS_Compress__Raw__Bunzip2_DispStream>:
    578c:	stp	x29, x30, [sp, #-96]!
    5790:	mov	x29, sp
    5794:	str	x0, [sp, #24]
    5798:	str	x1, [sp, #16]
    579c:	ldr	x0, [sp, #24]
    57a0:	ldr	x0, [x0]
    57a4:	str	x0, [sp, #56]
    57a8:	ldr	x0, [sp, #24]
    57ac:	bl	1790 <S_POPMARK>
    57b0:	str	w0, [sp, #40]
    57b4:	ldr	x0, [sp, #24]
    57b8:	ldr	x1, [x0, #24]
    57bc:	ldr	w0, [sp, #40]
    57c0:	add	w2, w0, #0x1
    57c4:	str	w2, [sp, #40]
    57c8:	sxtw	x0, w0
    57cc:	lsl	x0, x0, #3
    57d0:	add	x0, x1, x0
    57d4:	str	x0, [sp, #64]
    57d8:	ldr	x1, [sp, #56]
    57dc:	ldr	x0, [sp, #64]
    57e0:	sub	x0, x1, x0
    57e4:	asr	x0, x0, #3
    57e8:	str	w0, [sp, #44]
    57ec:	ldr	w0, [sp, #44]
    57f0:	cmp	w0, #0x0
    57f4:	b.le	5804 <XS_Compress__Raw__Bunzip2_DispStream+0x78>
    57f8:	ldr	w0, [sp, #44]
    57fc:	cmp	w0, #0x2
    5800:	b.le	5814 <XS_Compress__Raw__Bunzip2_DispStream+0x88>
    5804:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5808:	add	x1, x0, #0x108
    580c:	ldr	x0, [sp, #16]
    5810:	bl	1490 <Perl_croak_xs_usage@plt>
    5814:	ldr	x0, [sp, #24]
    5818:	ldr	x1, [x0, #24]
    581c:	ldrsw	x0, [sp, #40]
    5820:	lsl	x0, x0, #3
    5824:	add	x0, x1, x0
    5828:	ldr	x0, [x0]
    582c:	ldr	w0, [x0, #12]
    5830:	and	w0, w0, #0x800
    5834:	cmp	w0, #0x0
    5838:	b.eq	5918 <XS_Compress__Raw__Bunzip2_DispStream+0x18c>  // b.none
    583c:	ldr	x0, [sp, #24]
    5840:	ldr	x1, [x0, #24]
    5844:	ldrsw	x0, [sp, #40]
    5848:	lsl	x0, x0, #3
    584c:	add	x0, x1, x0
    5850:	ldr	x1, [x0]
    5854:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5858:	add	x2, x0, #0x400
    585c:	ldr	x0, [sp, #24]
    5860:	bl	1390 <Perl_sv_derived_from@plt>
    5864:	and	w0, w0, #0xff
    5868:	cmp	w0, #0x0
    586c:	b.eq	5918 <XS_Compress__Raw__Bunzip2_DispStream+0x18c>  // b.none
    5870:	ldr	x0, [sp, #24]
    5874:	ldr	x1, [x0, #24]
    5878:	ldrsw	x0, [sp, #40]
    587c:	lsl	x0, x0, #3
    5880:	add	x0, x1, x0
    5884:	ldr	x0, [x0]
    5888:	ldr	x0, [x0, #16]
    588c:	ldr	w1, [x0, #12]
    5890:	mov	w0, #0x100                 	// #256
    5894:	movk	w0, #0x20, lsl #16
    5898:	and	w0, w1, w0
    589c:	cmp	w0, #0x100
    58a0:	b.ne	58cc <XS_Compress__Raw__Bunzip2_DispStream+0x140>  // b.any
    58a4:	ldr	x0, [sp, #24]
    58a8:	ldr	x1, [x0, #24]
    58ac:	ldrsw	x0, [sp, #40]
    58b0:	lsl	x0, x0, #3
    58b4:	add	x0, x1, x0
    58b8:	ldr	x0, [x0]
    58bc:	ldr	x0, [x0, #16]
    58c0:	ldr	x0, [x0]
    58c4:	ldr	x0, [x0, #32]
    58c8:	b	58f8 <XS_Compress__Raw__Bunzip2_DispStream+0x16c>
    58cc:	ldr	x0, [sp, #24]
    58d0:	ldr	x1, [x0, #24]
    58d4:	ldrsw	x0, [sp, #40]
    58d8:	lsl	x0, x0, #3
    58dc:	add	x0, x1, x0
    58e0:	ldr	x0, [x0]
    58e4:	ldr	x0, [x0, #16]
    58e8:	mov	w2, #0x2                   	// #2
    58ec:	mov	x1, x0
    58f0:	ldr	x0, [sp, #24]
    58f4:	bl	1320 <Perl_sv_2iv_flags@plt>
    58f8:	str	x0, [sp, #72]
    58fc:	ldr	x0, [sp, #72]
    5900:	str	x0, [sp, #80]
    5904:	nop
    5908:	ldr	w0, [sp, #44]
    590c:	cmp	w0, #0x1
    5910:	b.gt	5944 <XS_Compress__Raw__Bunzip2_DispStream+0x1b8>
    5914:	b	593c <XS_Compress__Raw__Bunzip2_DispStream+0x1b0>
    5918:	adrp	x0, 8000 <my_z_errmsg+0x630>
    591c:	add	x3, x0, #0x400
    5920:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5924:	add	x2, x0, #0x130
    5928:	adrp	x0, 8000 <my_z_errmsg+0x630>
    592c:	add	x1, x0, #0x418
    5930:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5934:	add	x0, x0, #0x160
    5938:	bl	1500 <Perl_croak_nocontext@plt>
    593c:	str	xzr, [sp, #48]
    5940:	b	5a00 <XS_Compress__Raw__Bunzip2_DispStream+0x274>
    5944:	ldr	x0, [sp, #24]
    5948:	ldr	x1, [x0, #24]
    594c:	ldrsw	x0, [sp, #40]
    5950:	add	x0, x0, #0x1
    5954:	lsl	x0, x0, #3
    5958:	add	x0, x1, x0
    595c:	ldr	x0, [x0]
    5960:	ldr	w0, [x0, #12]
    5964:	and	w0, w0, #0xff00
    5968:	cmp	w0, #0x0
    596c:	b.eq	59fc <XS_Compress__Raw__Bunzip2_DispStream+0x270>  // b.none
    5970:	ldr	x0, [sp, #24]
    5974:	ldr	x1, [x0, #24]
    5978:	ldrsw	x0, [sp, #40]
    597c:	add	x0, x0, #0x1
    5980:	lsl	x0, x0, #3
    5984:	add	x0, x1, x0
    5988:	ldr	x0, [x0]
    598c:	ldr	w1, [x0, #12]
    5990:	mov	w0, #0x400                 	// #1024
    5994:	movk	w0, #0x2020, lsl #16
    5998:	and	w0, w1, w0
    599c:	cmp	w0, #0x400
    59a0:	b.ne	59c8 <XS_Compress__Raw__Bunzip2_DispStream+0x23c>  // b.any
    59a4:	ldr	x0, [sp, #24]
    59a8:	ldr	x1, [x0, #24]
    59ac:	ldrsw	x0, [sp, #40]
    59b0:	add	x0, x0, #0x1
    59b4:	lsl	x0, x0, #3
    59b8:	add	x0, x1, x0
    59bc:	ldr	x0, [x0]
    59c0:	ldr	x0, [x0, #16]
    59c4:	b	59f4 <XS_Compress__Raw__Bunzip2_DispStream+0x268>
    59c8:	ldr	x0, [sp, #24]
    59cc:	ldr	x1, [x0, #24]
    59d0:	ldrsw	x0, [sp, #40]
    59d4:	add	x0, x0, #0x1
    59d8:	lsl	x0, x0, #3
    59dc:	add	x0, x1, x0
    59e0:	ldr	x0, [x0]
    59e4:	mov	x2, #0x0                   	// #0
    59e8:	mov	x1, x0
    59ec:	ldr	x0, [sp, #24]
    59f0:	bl	1400 <Perl_sv_2pvbyte@plt>
    59f4:	str	x0, [sp, #48]
    59f8:	b	5a00 <XS_Compress__Raw__Bunzip2_DispStream+0x274>
    59fc:	str	xzr, [sp, #48]
    5a00:	ldr	x1, [sp, #48]
    5a04:	ldr	x0, [sp, #80]
    5a08:	bl	188c <DispStream>
    5a0c:	str	xzr, [sp, #88]
    5a10:	ldr	x0, [sp, #24]
    5a14:	ldr	x1, [x0, #24]
    5a18:	ldrsw	x2, [sp, #40]
    5a1c:	ldr	x0, [sp, #88]
    5a20:	add	x0, x2, x0
    5a24:	lsl	x0, x0, #3
    5a28:	sub	x0, x0, #0x8
    5a2c:	add	x1, x1, x0
    5a30:	ldr	x0, [sp, #24]
    5a34:	str	x1, [x0]
    5a38:	nop
    5a3c:	ldp	x29, x30, [sp], #96
    5a40:	ret

0000000000005a44 <XS_Compress__Raw__Bunzip2_bzinflate>:
    5a44:	stp	x29, x30, [sp, #-160]!
    5a48:	mov	x29, sp
    5a4c:	str	x0, [sp, #24]
    5a50:	str	x1, [sp, #16]
    5a54:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    5a58:	ldr	x0, [x0, #4048]
    5a5c:	ldr	x1, [x0]
    5a60:	str	x1, [sp, #152]
    5a64:	mov	x1, #0x0                   	// #0
    5a68:	ldr	x0, [sp, #24]
    5a6c:	ldr	x0, [x0]
    5a70:	str	x0, [sp, #88]
    5a74:	ldr	x0, [sp, #24]
    5a78:	bl	1790 <S_POPMARK>
    5a7c:	str	w0, [sp, #60]
    5a80:	ldr	x0, [sp, #24]
    5a84:	ldr	x1, [x0, #24]
    5a88:	ldr	w0, [sp, #60]
    5a8c:	add	w2, w0, #0x1
    5a90:	str	w2, [sp, #60]
    5a94:	sxtw	x0, w0
    5a98:	lsl	x0, x0, #3
    5a9c:	add	x0, x1, x0
    5aa0:	str	x0, [sp, #96]
    5aa4:	ldr	x1, [sp, #88]
    5aa8:	ldr	x0, [sp, #96]
    5aac:	sub	x0, x1, x0
    5ab0:	asr	x0, x0, #3
    5ab4:	str	w0, [sp, #64]
    5ab8:	ldr	w0, [sp, #64]
    5abc:	cmp	w0, #0x3
    5ac0:	b.eq	5ad4 <XS_Compress__Raw__Bunzip2_bzinflate+0x90>  // b.none
    5ac4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5ac8:	add	x1, x0, #0x180
    5acc:	ldr	x0, [sp, #16]
    5ad0:	bl	1490 <Perl_croak_xs_usage@plt>
    5ad4:	ldr	x0, [sp, #24]
    5ad8:	ldr	x1, [x0, #24]
    5adc:	ldrsw	x0, [sp, #60]
    5ae0:	add	x0, x0, #0x1
    5ae4:	lsl	x0, x0, #3
    5ae8:	add	x0, x1, x0
    5aec:	ldr	x0, [x0]
    5af0:	str	x0, [sp, #104]
    5af4:	ldr	x0, [sp, #24]
    5af8:	ldr	x1, [x0, #24]
    5afc:	ldrsw	x0, [sp, #60]
    5b00:	add	x0, x0, #0x2
    5b04:	lsl	x0, x0, #3
    5b08:	add	x0, x1, x0
    5b0c:	ldr	x0, [x0]
    5b10:	str	x0, [sp, #112]
    5b14:	str	wzr, [sp, #40]
    5b18:	str	wzr, [sp, #44]
    5b1c:	str	wzr, [sp, #48]
    5b20:	strb	wzr, [sp, #39]
    5b24:	ldr	x0, [sp, #24]
    5b28:	ldr	x1, [x0, #24]
    5b2c:	ldrsw	x0, [sp, #60]
    5b30:	lsl	x0, x0, #3
    5b34:	add	x0, x1, x0
    5b38:	ldr	x0, [x0]
    5b3c:	ldr	w0, [x0, #12]
    5b40:	and	w0, w0, #0x800
    5b44:	cmp	w0, #0x0
    5b48:	b.eq	5c50 <XS_Compress__Raw__Bunzip2_bzinflate+0x20c>  // b.none
    5b4c:	ldr	x0, [sp, #24]
    5b50:	ldr	x1, [x0, #24]
    5b54:	ldrsw	x0, [sp, #60]
    5b58:	lsl	x0, x0, #3
    5b5c:	add	x0, x1, x0
    5b60:	ldr	x1, [x0]
    5b64:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5b68:	add	x2, x0, #0x400
    5b6c:	ldr	x0, [sp, #24]
    5b70:	bl	1390 <Perl_sv_derived_from@plt>
    5b74:	and	w0, w0, #0xff
    5b78:	cmp	w0, #0x0
    5b7c:	b.eq	5c50 <XS_Compress__Raw__Bunzip2_bzinflate+0x20c>  // b.none
    5b80:	ldr	x0, [sp, #24]
    5b84:	ldr	x1, [x0, #24]
    5b88:	ldrsw	x0, [sp, #60]
    5b8c:	lsl	x0, x0, #3
    5b90:	add	x0, x1, x0
    5b94:	ldr	x0, [x0]
    5b98:	ldr	x0, [x0, #16]
    5b9c:	ldr	w1, [x0, #12]
    5ba0:	mov	w0, #0x100                 	// #256
    5ba4:	movk	w0, #0x20, lsl #16
    5ba8:	and	w0, w1, w0
    5bac:	cmp	w0, #0x100
    5bb0:	b.ne	5bdc <XS_Compress__Raw__Bunzip2_bzinflate+0x198>  // b.any
    5bb4:	ldr	x0, [sp, #24]
    5bb8:	ldr	x1, [x0, #24]
    5bbc:	ldrsw	x0, [sp, #60]
    5bc0:	lsl	x0, x0, #3
    5bc4:	add	x0, x1, x0
    5bc8:	ldr	x0, [x0]
    5bcc:	ldr	x0, [x0, #16]
    5bd0:	ldr	x0, [x0]
    5bd4:	ldr	x0, [x0, #32]
    5bd8:	b	5c08 <XS_Compress__Raw__Bunzip2_bzinflate+0x1c4>
    5bdc:	ldr	x0, [sp, #24]
    5be0:	ldr	x1, [x0, #24]
    5be4:	ldrsw	x0, [sp, #60]
    5be8:	lsl	x0, x0, #3
    5bec:	add	x0, x1, x0
    5bf0:	ldr	x0, [x0]
    5bf4:	ldr	x0, [x0, #16]
    5bf8:	mov	w2, #0x2                   	// #2
    5bfc:	mov	x1, x0
    5c00:	ldr	x0, [sp, #24]
    5c04:	bl	1320 <Perl_sv_2iv_flags@plt>
    5c08:	str	x0, [sp, #120]
    5c0c:	ldr	x0, [sp, #120]
    5c10:	str	x0, [sp, #128]
    5c14:	nop
    5c18:	ldr	x0, [sp, #128]
    5c1c:	ldr	w0, [x0, #88]
    5c20:	str	w0, [sp, #52]
    5c24:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c28:	add	x1, x0, #0x468
    5c2c:	ldr	x0, [sp, #104]
    5c30:	bl	1bbc <deRef>
    5c34:	str	x0, [sp, #104]
    5c38:	ldr	x0, [sp, #128]
    5c3c:	ldr	w0, [x0]
    5c40:	and	w0, w0, #0x8
    5c44:	cmp	w0, #0x0
    5c48:	b.eq	5ce0 <XS_Compress__Raw__Bunzip2_bzinflate+0x29c>  // b.none
    5c4c:	b	5c74 <XS_Compress__Raw__Bunzip2_bzinflate+0x230>
    5c50:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c54:	add	x3, x0, #0x400
    5c58:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c5c:	add	x2, x0, #0x130
    5c60:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c64:	add	x1, x0, #0x440
    5c68:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c6c:	add	x0, x0, #0x160
    5c70:	bl	1500 <Perl_croak_nocontext@plt>
    5c74:	ldr	x0, [sp, #104]
    5c78:	ldr	w1, [x0, #12]
    5c7c:	mov	w0, #0x8010000             	// #134283264
    5c80:	and	w0, w1, w0
    5c84:	cmp	w0, #0x0
    5c88:	b.eq	5c98 <XS_Compress__Raw__Bunzip2_bzinflate+0x254>  // b.none
    5c8c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5c90:	add	x0, x0, #0x478
    5c94:	bl	1500 <Perl_croak_nocontext@plt>
    5c98:	ldr	x0, [sp, #104]
    5c9c:	ldr	w1, [x0, #12]
    5ca0:	mov	w0, #0x8f00                	// #36608
    5ca4:	movk	w0, #0x19a1, lsl #16
    5ca8:	and	w0, w1, w0
    5cac:	cmp	w0, #0x400
    5cb0:	b.ne	5cc8 <XS_Compress__Raw__Bunzip2_bzinflate+0x284>  // b.any
    5cb4:	ldr	x0, [sp, #104]
    5cb8:	ldr	x0, [x0]
    5cbc:	ldr	x0, [x0, #16]
    5cc0:	str	x0, [sp, #72]
    5cc4:	b	5ce0 <XS_Compress__Raw__Bunzip2_bzinflate+0x29c>
    5cc8:	add	x0, sp, #0x48
    5ccc:	mov	w3, #0x2                   	// #2
    5cd0:	mov	x2, x0
    5cd4:	ldr	x1, [sp, #104]
    5cd8:	ldr	x0, [sp, #24]
    5cdc:	bl	1340 <Perl_sv_pvn_force_flags@plt>
    5ce0:	ldr	x0, [sp, #104]
    5ce4:	ldr	w0, [x0, #12]
    5ce8:	and	w0, w0, #0x20000000
    5cec:	cmp	w0, #0x0
    5cf0:	b.eq	5d44 <XS_Compress__Raw__Bunzip2_bzinflate+0x300>  // b.none
    5cf4:	ldr	x0, [sp, #24]
    5cf8:	ldr	x0, [x0, #224]
    5cfc:	ldr	w0, [x0, #56]
    5d00:	lsr	w0, w0, #3
    5d04:	mov	w0, w0
    5d08:	and	x0, x0, #0x1
    5d0c:	cmp	x0, #0x0
    5d10:	b.ne	5d44 <XS_Compress__Raw__Bunzip2_bzinflate+0x300>  // b.any
    5d14:	mov	w2, #0x1                   	// #1
    5d18:	ldr	x1, [sp, #104]
    5d1c:	ldr	x0, [sp, #24]
    5d20:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    5d24:	and	w0, w0, #0xff
    5d28:	eor	w0, w0, #0x1
    5d2c:	and	w0, w0, #0xff
    5d30:	cmp	w0, #0x0
    5d34:	b.eq	5d44 <XS_Compress__Raw__Bunzip2_bzinflate+0x300>  // b.none
    5d38:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5d3c:	add	x0, x0, #0x4e0
    5d40:	bl	1500 <Perl_croak_nocontext@plt>
    5d44:	ldr	x0, [sp, #104]
    5d48:	ldr	w1, [x0, #12]
    5d4c:	mov	w0, #0x400                 	// #1024
    5d50:	movk	w0, #0x20, lsl #16
    5d54:	and	w0, w1, w0
    5d58:	cmp	w0, #0x400
    5d5c:	b.ne	5d7c <XS_Compress__Raw__Bunzip2_bzinflate+0x338>  // b.any
    5d60:	ldr	x0, [sp, #104]
    5d64:	ldr	x0, [x0]
    5d68:	ldr	x0, [x0, #16]
    5d6c:	str	x0, [sp, #80]
    5d70:	ldr	x0, [sp, #104]
    5d74:	ldr	x0, [x0, #16]
    5d78:	b	5d94 <XS_Compress__Raw__Bunzip2_bzinflate+0x350>
    5d7c:	add	x0, sp, #0x50
    5d80:	mov	w3, #0x0                   	// #0
    5d84:	mov	x2, x0
    5d88:	ldr	x1, [sp, #104]
    5d8c:	ldr	x0, [sp, #24]
    5d90:	bl	1420 <Perl_sv_2pv_flags@plt>
    5d94:	ldr	x1, [sp, #128]
    5d98:	str	x0, [x1, #8]
    5d9c:	ldr	x0, [sp, #80]
    5da0:	mov	w1, w0
    5da4:	ldr	x0, [sp, #128]
    5da8:	str	w1, [x0, #16]
    5dac:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5db0:	add	x1, x0, #0x468
    5db4:	ldr	x0, [sp, #112]
    5db8:	bl	1cf4 <deRef_l>
    5dbc:	str	x0, [sp, #112]
    5dc0:	ldr	x0, [sp, #112]
    5dc4:	ldr	w0, [x0, #12]
    5dc8:	and	w0, w0, #0x20000000
    5dcc:	cmp	w0, #0x0
    5dd0:	b.eq	5dfc <XS_Compress__Raw__Bunzip2_bzinflate+0x3b8>  // b.none
    5dd4:	ldr	x0, [sp, #24]
    5dd8:	ldr	x0, [x0, #224]
    5ddc:	ldr	w0, [x0, #56]
    5de0:	lsr	w0, w0, #3
    5de4:	mov	w0, w0
    5de8:	and	x0, x0, #0x1
    5dec:	cmp	x0, #0x0
    5df0:	b.ne	5dfc <XS_Compress__Raw__Bunzip2_bzinflate+0x3b8>  // b.any
    5df4:	mov	w0, #0x1                   	// #1
    5df8:	strb	w0, [sp, #39]
    5dfc:	ldr	x0, [sp, #112]
    5e00:	ldr	w0, [x0, #12]
    5e04:	and	w0, w0, #0x20000000
    5e08:	cmp	w0, #0x0
    5e0c:	b.eq	5e60 <XS_Compress__Raw__Bunzip2_bzinflate+0x41c>  // b.none
    5e10:	ldr	x0, [sp, #24]
    5e14:	ldr	x0, [x0, #224]
    5e18:	ldr	w0, [x0, #56]
    5e1c:	lsr	w0, w0, #3
    5e20:	mov	w0, w0
    5e24:	and	x0, x0, #0x1
    5e28:	cmp	x0, #0x0
    5e2c:	b.ne	5e60 <XS_Compress__Raw__Bunzip2_bzinflate+0x41c>  // b.any
    5e30:	mov	w2, #0x1                   	// #1
    5e34:	ldr	x1, [sp, #112]
    5e38:	ldr	x0, [sp, #24]
    5e3c:	bl	1360 <Perl_sv_utf8_downgrade@plt>
    5e40:	and	w0, w0, #0xff
    5e44:	eor	w0, w0, #0x1
    5e48:	and	w0, w0, #0xff
    5e4c:	cmp	w0, #0x0
    5e50:	b.eq	5e60 <XS_Compress__Raw__Bunzip2_bzinflate+0x41c>  // b.none
    5e54:	adrp	x0, 8000 <my_z_errmsg+0x630>
    5e58:	add	x0, x0, #0x528
    5e5c:	bl	1500 <Perl_croak_nocontext@plt>
    5e60:	ldr	x0, [sp, #128]
    5e64:	ldr	w0, [x0]
    5e68:	and	w0, w0, #0x1
    5e6c:	cmp	w0, #0x0
    5e70:	b.ne	5e80 <XS_Compress__Raw__Bunzip2_bzinflate+0x43c>  // b.any
    5e74:	ldr	x0, [sp, #112]
    5e78:	ldr	x0, [x0]
    5e7c:	str	xzr, [x0, #16]
    5e80:	ldr	x0, [sp, #128]
    5e84:	str	wzr, [x0, #40]
    5e88:	ldr	x0, [sp, #112]
    5e8c:	ldr	x0, [x0]
    5e90:	ldr	x0, [x0, #24]
    5e94:	cmp	x0, #0x0
    5e98:	b.eq	5f74 <XS_Compress__Raw__Bunzip2_bzinflate+0x530>  // b.none
    5e9c:	ldr	x0, [sp, #112]
    5ea0:	ldr	x0, [x0]
    5ea4:	ldr	x0, [x0, #16]
    5ea8:	str	w0, [sp, #40]
    5eac:	ldr	w0, [sp, #40]
    5eb0:	str	w0, [sp, #44]
    5eb4:	ldr	x0, [sp, #128]
    5eb8:	ldr	w0, [x0]
    5ebc:	and	w0, w0, #0x10
    5ec0:	cmp	w0, #0x0
    5ec4:	b.eq	5f10 <XS_Compress__Raw__Bunzip2_bzinflate+0x4cc>  // b.none
    5ec8:	ldr	x0, [sp, #112]
    5ecc:	ldr	x0, [x0]
    5ed0:	ldr	x1, [x0, #24]
    5ed4:	ldr	w0, [sp, #40]
    5ed8:	sub	x0, x1, x0
    5edc:	sub	x1, x0, #0x1
    5ee0:	ldr	w0, [sp, #52]
    5ee4:	cmp	x1, x0
    5ee8:	b.cs	5f10 <XS_Compress__Raw__Bunzip2_bzinflate+0x4cc>  // b.hs, b.nlast
    5eec:	ldr	w1, [sp, #52]
    5ef0:	ldr	w0, [sp, #40]
    5ef4:	add	w0, w1, w0
    5ef8:	add	w0, w0, #0x1
    5efc:	mov	w0, w0
    5f00:	mov	x2, x0
    5f04:	ldr	x1, [sp, #112]
    5f08:	ldr	x0, [sp, #24]
    5f0c:	bl	14a0 <Perl_sv_grow@plt>
    5f10:	ldr	x0, [sp, #112]
    5f14:	ldr	x0, [x0]
    5f18:	ldr	x1, [x0, #24]
    5f1c:	ldr	w0, [sp, #40]
    5f20:	add	w0, w0, #0x1
    5f24:	mov	w0, w0
    5f28:	cmp	x1, x0
    5f2c:	b.ls	5f74 <XS_Compress__Raw__Bunzip2_bzinflate+0x530>  // b.plast
    5f30:	ldr	x0, [sp, #112]
    5f34:	ldr	x1, [x0, #16]
    5f38:	ldr	w0, [sp, #40]
    5f3c:	add	x1, x1, x0
    5f40:	ldr	x0, [sp, #128]
    5f44:	str	x1, [x0, #32]
    5f48:	ldr	x0, [sp, #112]
    5f4c:	ldr	x0, [x0]
    5f50:	ldr	x0, [x0, #24]
    5f54:	mov	w1, w0
    5f58:	ldr	w0, [sp, #40]
    5f5c:	sub	w0, w1, w0
    5f60:	sub	w0, w0, #0x1
    5f64:	str	w0, [sp, #48]
    5f68:	ldr	x0, [sp, #128]
    5f6c:	ldr	w1, [sp, #48]
    5f70:	str	w1, [x0, #40]
    5f74:	ldr	x0, [sp, #128]
    5f78:	str	xzr, [x0, #96]
    5f7c:	str	wzr, [sp, #56]
    5f80:	ldr	x0, [sp, #128]
    5f84:	ldr	w0, [x0, #40]
    5f88:	cmp	w0, #0x0
    5f8c:	b.ne	600c <XS_Compress__Raw__Bunzip2_bzinflate+0x5c8>  // b.any
    5f90:	ldr	x0, [sp, #112]
    5f94:	ldr	x0, [x0]
    5f98:	ldr	x1, [x0, #24]
    5f9c:	ldr	w0, [sp, #52]
    5fa0:	add	x0, x1, x0
    5fa4:	add	x0, x0, #0x1
    5fa8:	mov	x2, x0
    5fac:	ldr	x1, [sp, #112]
    5fb0:	ldr	x0, [sp, #24]
    5fb4:	bl	14a0 <Perl_sv_grow@plt>
    5fb8:	mov	x1, x0
    5fbc:	ldr	x0, [sp, #128]
    5fc0:	str	x1, [x0, #32]
    5fc4:	ldr	w1, [sp, #40]
    5fc8:	ldr	w0, [sp, #48]
    5fcc:	add	w0, w1, w0
    5fd0:	str	w0, [sp, #40]
    5fd4:	ldr	x0, [sp, #128]
    5fd8:	ldr	x1, [x0, #32]
    5fdc:	ldr	w0, [sp, #40]
    5fe0:	add	x1, x1, x0
    5fe4:	ldr	x0, [sp, #128]
    5fe8:	str	x1, [x0, #32]
    5fec:	ldr	w0, [sp, #52]
    5ff0:	str	w0, [sp, #48]
    5ff4:	ldr	x0, [sp, #128]
    5ff8:	ldr	w1, [sp, #48]
    5ffc:	str	w1, [x0, #40]
    6000:	ldr	w0, [sp, #52]
    6004:	lsl	w0, w0, #1
    6008:	str	w0, [sp, #52]
    600c:	ldr	x0, [sp, #128]
    6010:	add	x0, x0, #0x8
    6014:	bl	1530 <BZ2_bzDecompress@plt>
    6018:	str	w0, [sp, #56]
    601c:	ldr	w0, [sp, #56]
    6020:	cmp	w0, #0x0
    6024:	b.ne	606c <XS_Compress__Raw__Bunzip2_bzinflate+0x628>  // b.any
    6028:	ldr	x0, [sp, #128]
    602c:	ldr	w0, [x0]
    6030:	and	w0, w0, #0x10
    6034:	cmp	w0, #0x0
    6038:	b.ne	606c <XS_Compress__Raw__Bunzip2_bzinflate+0x628>  // b.any
    603c:	ldr	x0, [sp, #128]
    6040:	ldr	w0, [x0, #40]
    6044:	cmp	w0, #0x0
    6048:	b.eq	6064 <XS_Compress__Raw__Bunzip2_bzinflate+0x620>  // b.none
    604c:	ldr	x0, [sp, #128]
    6050:	ldr	w0, [x0, #16]
    6054:	cmp	w0, #0x0
    6058:	b.ne	5f80 <XS_Compress__Raw__Bunzip2_bzinflate+0x53c>  // b.any
    605c:	str	wzr, [sp, #56]
    6060:	b	606c <XS_Compress__Raw__Bunzip2_bzinflate+0x628>
    6064:	nop
    6068:	b	5f80 <XS_Compress__Raw__Bunzip2_bzinflate+0x53c>
    606c:	ldr	x0, [sp, #128]
    6070:	ldr	w1, [sp, #56]
    6074:	str	w1, [x0, #92]
    6078:	ldr	w0, [sp, #56]
    607c:	cmp	w0, #0x0
    6080:	b.eq	6090 <XS_Compress__Raw__Bunzip2_bzinflate+0x64c>  // b.none
    6084:	ldr	w0, [sp, #56]
    6088:	cmp	w0, #0x4
    608c:	b.ne	6258 <XS_Compress__Raw__Bunzip2_bzinflate+0x814>  // b.any
    6090:	ldr	w1, [sp, #40]
    6094:	ldr	w0, [sp, #48]
    6098:	add	w1, w1, w0
    609c:	ldr	x0, [sp, #128]
    60a0:	ldr	w0, [x0, #40]
    60a4:	sub	w1, w1, w0
    60a8:	ldr	w0, [sp, #44]
    60ac:	sub	w0, w1, w0
    60b0:	mov	w1, w0
    60b4:	ldr	x0, [sp, #128]
    60b8:	str	x1, [x0, #96]
    60bc:	ldr	x0, [sp, #128]
    60c0:	ldr	x1, [x0, #112]
    60c4:	ldr	x0, [sp, #128]
    60c8:	ldr	x0, [x0, #96]
    60cc:	add	x1, x1, x0
    60d0:	ldr	x0, [sp, #128]
    60d4:	str	x1, [x0, #112]
    60d8:	ldr	x0, [sp, #128]
    60dc:	ldr	x1, [x0, #104]
    60e0:	ldr	x2, [sp, #80]
    60e4:	ldr	x0, [sp, #128]
    60e8:	ldr	w0, [x0, #16]
    60ec:	mov	w0, w0
    60f0:	sub	x0, x2, x0
    60f4:	add	x1, x1, x0
    60f8:	ldr	x0, [sp, #128]
    60fc:	str	x1, [x0, #104]
    6100:	ldr	x0, [sp, #112]
    6104:	ldr	w1, [x0, #12]
    6108:	mov	w0, #0xff                  	// #255
    610c:	movk	w0, #0x5fff, lsl #16
    6110:	and	w1, w1, w0
    6114:	ldr	x0, [sp, #112]
    6118:	str	w1, [x0, #12]
    611c:	ldr	x0, [sp, #112]
    6120:	ldr	w1, [x0, #12]
    6124:	mov	w0, #0x4400                	// #17408
    6128:	orr	w1, w1, w0
    612c:	ldr	x0, [sp, #112]
    6130:	str	w1, [x0, #12]
    6134:	ldr	w2, [sp, #44]
    6138:	ldr	x0, [sp, #128]
    613c:	ldr	x1, [x0, #96]
    6140:	ldr	x0, [sp, #112]
    6144:	ldr	x0, [x0]
    6148:	add	x1, x2, x1
    614c:	str	x1, [x0, #16]
    6150:	ldr	x0, [sp, #112]
    6154:	ldr	x1, [x0, #16]
    6158:	ldr	x0, [sp, #112]
    615c:	ldr	x0, [x0]
    6160:	ldr	x0, [x0, #16]
    6164:	add	x0, x1, x0
    6168:	strb	wzr, [x0]
    616c:	ldrb	w0, [sp, #39]
    6170:	cmp	w0, #0x0
    6174:	b.eq	618c <XS_Compress__Raw__Bunzip2_bzinflate+0x748>  // b.none
    6178:	mov	x3, #0x0                   	// #0
    617c:	mov	w2, #0x2                   	// #2
    6180:	ldr	x1, [sp, #112]
    6184:	ldr	x0, [sp, #24]
    6188:	bl	14b0 <Perl_sv_utf8_upgrade_flags_grow@plt>
    618c:	ldr	x0, [sp, #112]
    6190:	ldr	w0, [x0, #12]
    6194:	lsr	w0, w0, #22
    6198:	mov	w0, w0
    619c:	and	x0, x0, #0x1
    61a0:	cmp	x0, #0x0
    61a4:	b.eq	61b4 <XS_Compress__Raw__Bunzip2_bzinflate+0x770>  // b.none
    61a8:	ldr	x1, [sp, #112]
    61ac:	ldr	x0, [sp, #24]
    61b0:	bl	1520 <Perl_mg_set@plt>
    61b4:	ldr	x0, [sp, #128]
    61b8:	ldr	w0, [x0]
    61bc:	and	w0, w0, #0x8
    61c0:	cmp	w0, #0x0
    61c4:	b.eq	6258 <XS_Compress__Raw__Bunzip2_bzinflate+0x814>  // b.none
    61c8:	ldr	x0, [sp, #128]
    61cc:	ldr	w0, [x0, #16]
    61d0:	str	w0, [sp, #68]
    61d4:	ldr	x0, [sp, #104]
    61d8:	ldr	x0, [x0]
    61dc:	ldr	w1, [sp, #68]
    61e0:	str	x1, [x0, #16]
    61e4:	ldr	w0, [sp, #68]
    61e8:	cmp	w0, #0x0
    61ec:	b.eq	6214 <XS_Compress__Raw__Bunzip2_bzinflate+0x7d0>  // b.none
    61f0:	ldr	x0, [sp, #104]
    61f4:	ldr	x3, [x0, #16]
    61f8:	ldr	x0, [sp, #128]
    61fc:	ldr	x0, [x0, #8]
    6200:	ldr	w1, [sp, #68]
    6204:	mov	x2, x1
    6208:	mov	x1, x0
    620c:	mov	x0, x3
    6210:	bl	1300 <memmove@plt>
    6214:	ldr	x0, [sp, #104]
    6218:	ldr	x1, [x0, #16]
    621c:	ldr	x0, [sp, #104]
    6220:	ldr	x0, [x0]
    6224:	ldr	x0, [x0, #16]
    6228:	add	x0, x1, x0
    622c:	strb	wzr, [x0]
    6230:	ldr	x0, [sp, #104]
    6234:	ldr	w0, [x0, #12]
    6238:	lsr	w0, w0, #22
    623c:	mov	w0, w0
    6240:	and	x0, x0, #0x1
    6244:	cmp	x0, #0x0
    6248:	b.eq	6258 <XS_Compress__Raw__Bunzip2_bzinflate+0x814>  // b.none
    624c:	ldr	x1, [sp, #104]
    6250:	ldr	x0, [sp, #24]
    6254:	bl	1520 <Perl_mg_set@plt>
    6258:	ldr	x0, [sp, #24]
    625c:	bl	15f0 <Perl_sv_newmortal@plt>
    6260:	str	x0, [sp, #136]
    6264:	ldr	w0, [sp, #56]
    6268:	scvtf	d0, w0
    626c:	ldr	x1, [sp, #136]
    6270:	ldr	x0, [sp, #24]
    6274:	bl	1330 <Perl_sv_setnv@plt>
    6278:	ldr	w0, [sp, #56]
    627c:	cmp	w0, #0x0
    6280:	b.eq	6290 <XS_Compress__Raw__Bunzip2_bzinflate+0x84c>  // b.none
    6284:	ldr	w0, [sp, #56]
    6288:	bl	17f0 <GetErrorString>
    628c:	b	6298 <XS_Compress__Raw__Bunzip2_bzinflate+0x854>
    6290:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    6294:	add	x0, x0, #0xe90
    6298:	mov	x2, x0
    629c:	ldr	x1, [sp, #136]
    62a0:	ldr	x0, [sp, #24]
    62a4:	bl	13f0 <Perl_sv_setpv@plt>
    62a8:	ldr	x0, [sp, #136]
    62ac:	ldr	w1, [x0, #12]
    62b0:	mov	w0, #0x2200                	// #8704
    62b4:	orr	w1, w1, w0
    62b8:	ldr	x0, [sp, #136]
    62bc:	str	w1, [x0, #12]
    62c0:	ldr	x0, [sp, #24]
    62c4:	ldr	x1, [x0, #24]
    62c8:	ldrsw	x0, [sp, #60]
    62cc:	lsl	x0, x0, #3
    62d0:	add	x0, x1, x0
    62d4:	ldr	x1, [sp, #136]
    62d8:	str	x1, [x0]
    62dc:	mov	x0, #0x1                   	// #1
    62e0:	str	x0, [sp, #144]
    62e4:	ldr	x0, [sp, #24]
    62e8:	ldr	x1, [x0, #24]
    62ec:	ldrsw	x2, [sp, #60]
    62f0:	ldr	x0, [sp, #144]
    62f4:	add	x0, x2, x0
    62f8:	lsl	x0, x0, #3
    62fc:	sub	x0, x0, #0x8
    6300:	add	x1, x1, x0
    6304:	ldr	x0, [sp, #24]
    6308:	str	x1, [x0]
    630c:	nop
    6310:	adrp	x0, 18000 <__FRAME_END__+0xf2b8>
    6314:	ldr	x0, [x0, #4048]
    6318:	ldr	x1, [sp, #152]
    631c:	ldr	x0, [x0]
    6320:	eor	x0, x1, x0
    6324:	cmp	x0, #0x0
    6328:	b.eq	6330 <XS_Compress__Raw__Bunzip2_bzinflate+0x8ec>  // b.none
    632c:	bl	1470 <__stack_chk_fail@plt>
    6330:	ldp	x29, x30, [sp], #160
    6334:	ret

0000000000006338 <XS_Compress__Raw__Bunzip2_inflateCount>:
    6338:	stp	x29, x30, [sp, #-112]!
    633c:	mov	x29, sp
    6340:	str	x0, [sp, #24]
    6344:	str	x1, [sp, #16]
    6348:	ldr	x0, [sp, #24]
    634c:	ldr	x0, [x0]
    6350:	str	x0, [sp, #48]
    6354:	ldr	x0, [sp, #24]
    6358:	bl	1790 <S_POPMARK>
    635c:	str	w0, [sp, #40]
    6360:	ldr	x0, [sp, #24]
    6364:	ldr	x1, [x0, #24]
    6368:	ldr	w0, [sp, #40]
    636c:	add	w2, w0, #0x1
    6370:	str	w2, [sp, #40]
    6374:	sxtw	x0, w0
    6378:	lsl	x0, x0, #3
    637c:	add	x0, x1, x0
    6380:	str	x0, [sp, #56]
    6384:	ldr	x1, [sp, #48]
    6388:	ldr	x0, [sp, #56]
    638c:	sub	x0, x1, x0
    6390:	asr	x0, x0, #3
    6394:	str	w0, [sp, #44]
    6398:	ldr	w0, [sp, #44]
    639c:	cmp	w0, #0x1
    63a0:	b.eq	63b4 <XS_Compress__Raw__Bunzip2_inflateCount+0x7c>  // b.none
    63a4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    63a8:	add	x1, x0, #0x130
    63ac:	ldr	x0, [sp, #16]
    63b0:	bl	1490 <Perl_croak_xs_usage@plt>
    63b4:	ldr	x0, [sp, #24]
    63b8:	ldr	x0, [x0, #8]
    63bc:	ldrb	w0, [x0, #35]
    63c0:	and	w0, w0, #0x4
    63c4:	cmp	w0, #0x0
    63c8:	b.eq	63f0 <XS_Compress__Raw__Bunzip2_inflateCount+0xb8>  // b.none
    63cc:	ldr	x0, [sp, #24]
    63d0:	ldr	x1, [x0, #16]
    63d4:	ldr	x0, [sp, #24]
    63d8:	ldr	x0, [x0, #8]
    63dc:	ldr	x0, [x0, #24]
    63e0:	lsl	x0, x0, #3
    63e4:	add	x0, x1, x0
    63e8:	ldr	x0, [x0]
    63ec:	b	63f8 <XS_Compress__Raw__Bunzip2_inflateCount+0xc0>
    63f0:	ldr	x0, [sp, #24]
    63f4:	bl	15f0 <Perl_sv_newmortal@plt>
    63f8:	str	x0, [sp, #64]
    63fc:	ldr	x0, [sp, #24]
    6400:	ldr	x1, [x0, #24]
    6404:	ldrsw	x0, [sp, #40]
    6408:	lsl	x0, x0, #3
    640c:	add	x0, x1, x0
    6410:	ldr	x0, [x0]
    6414:	ldr	w0, [x0, #12]
    6418:	and	w0, w0, #0x800
    641c:	cmp	w0, #0x0
    6420:	b.eq	6588 <XS_Compress__Raw__Bunzip2_inflateCount+0x250>  // b.none
    6424:	ldr	x0, [sp, #24]
    6428:	ldr	x1, [x0, #24]
    642c:	ldrsw	x0, [sp, #40]
    6430:	lsl	x0, x0, #3
    6434:	add	x0, x1, x0
    6438:	ldr	x1, [x0]
    643c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6440:	add	x2, x0, #0x400
    6444:	ldr	x0, [sp, #24]
    6448:	bl	1390 <Perl_sv_derived_from@plt>
    644c:	and	w0, w0, #0xff
    6450:	cmp	w0, #0x0
    6454:	b.eq	6588 <XS_Compress__Raw__Bunzip2_inflateCount+0x250>  // b.none
    6458:	ldr	x0, [sp, #24]
    645c:	ldr	x1, [x0, #24]
    6460:	ldrsw	x0, [sp, #40]
    6464:	lsl	x0, x0, #3
    6468:	add	x0, x1, x0
    646c:	ldr	x0, [x0]
    6470:	ldr	x0, [x0, #16]
    6474:	ldr	w1, [x0, #12]
    6478:	mov	w0, #0x100                 	// #256
    647c:	movk	w0, #0x20, lsl #16
    6480:	and	w0, w1, w0
    6484:	cmp	w0, #0x100
    6488:	b.ne	64b4 <XS_Compress__Raw__Bunzip2_inflateCount+0x17c>  // b.any
    648c:	ldr	x0, [sp, #24]
    6490:	ldr	x1, [x0, #24]
    6494:	ldrsw	x0, [sp, #40]
    6498:	lsl	x0, x0, #3
    649c:	add	x0, x1, x0
    64a0:	ldr	x0, [x0]
    64a4:	ldr	x0, [x0, #16]
    64a8:	ldr	x0, [x0]
    64ac:	ldr	x0, [x0, #32]
    64b0:	b	64e0 <XS_Compress__Raw__Bunzip2_inflateCount+0x1a8>
    64b4:	ldr	x0, [sp, #24]
    64b8:	ldr	x1, [x0, #24]
    64bc:	ldrsw	x0, [sp, #40]
    64c0:	lsl	x0, x0, #3
    64c4:	add	x0, x1, x0
    64c8:	ldr	x0, [x0]
    64cc:	ldr	x0, [x0, #16]
    64d0:	mov	w2, #0x2                   	// #2
    64d4:	mov	x1, x0
    64d8:	ldr	x0, [sp, #24]
    64dc:	bl	1320 <Perl_sv_2iv_flags@plt>
    64e0:	str	x0, [sp, #72]
    64e4:	ldr	x0, [sp, #72]
    64e8:	str	x0, [sp, #80]
    64ec:	nop
    64f0:	ldr	x0, [sp, #80]
    64f4:	ldr	x0, [x0, #96]
    64f8:	str	x0, [sp, #88]
    64fc:	ldr	x0, [sp, #24]
    6500:	ldr	x1, [x0, #24]
    6504:	ldrsw	x0, [sp, #40]
    6508:	lsl	x0, x0, #3
    650c:	sub	x0, x0, #0x8
    6510:	add	x0, x1, x0
    6514:	str	x0, [sp, #48]
    6518:	ldr	x0, [sp, #88]
    651c:	str	x0, [sp, #96]
    6520:	ldr	x0, [sp, #64]
    6524:	ldr	w1, [x0, #12]
    6528:	mov	w0, #0x8ff                 	// #2303
    652c:	movk	w0, #0x9981, lsl #16
    6530:	and	w0, w1, w0
    6534:	cmp	w0, #0x1
    6538:	cset	w0, eq  // eq = none
    653c:	and	w0, w0, #0xff
    6540:	mov	w1, w0
    6544:	ldr	x0, [sp, #24]
    6548:	ldrb	w0, [x0, #185]
    654c:	eor	w0, w0, #0x1
    6550:	and	w0, w0, #0xff
    6554:	and	w0, w1, w0
    6558:	ldr	x1, [sp, #96]
    655c:	mvn	x1, x1
    6560:	lsr	x1, x1, #63
    6564:	and	w1, w1, #0xff
    6568:	and	w0, w0, w1
    656c:	cmp	w0, #0x0
    6570:	cset	w0, ne  // ne = any
    6574:	and	w0, w0, #0xff
    6578:	and	x0, x0, #0xff
    657c:	cmp	x0, #0x0
    6580:	b.eq	65d4 <XS_Compress__Raw__Bunzip2_inflateCount+0x29c>  // b.none
    6584:	b	65ac <XS_Compress__Raw__Bunzip2_inflateCount+0x274>
    6588:	adrp	x0, 8000 <my_z_errmsg+0x630>
    658c:	add	x3, x0, #0x400
    6590:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6594:	add	x2, x0, #0x130
    6598:	adrp	x0, 8000 <my_z_errmsg+0x630>
    659c:	add	x1, x0, #0x570
    65a0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    65a4:	add	x0, x0, #0x160
    65a8:	bl	1500 <Perl_croak_nocontext@plt>
    65ac:	ldr	x0, [sp, #64]
    65b0:	ldr	w1, [x0, #12]
    65b4:	mov	w0, #0x1100                	// #4352
    65b8:	orr	w1, w1, w0
    65bc:	ldr	x0, [sp, #64]
    65c0:	str	w1, [x0, #12]
    65c4:	ldr	x1, [sp, #96]
    65c8:	ldr	x0, [sp, #64]
    65cc:	str	x1, [x0, #16]
    65d0:	b	65e4 <XS_Compress__Raw__Bunzip2_inflateCount+0x2ac>
    65d4:	ldr	x2, [sp, #96]
    65d8:	ldr	x1, [sp, #64]
    65dc:	ldr	x0, [sp, #24]
    65e0:	bl	15b0 <Perl_sv_setuv_mg@plt>
    65e4:	ldr	x0, [sp, #48]
    65e8:	add	x0, x0, #0x8
    65ec:	str	x0, [sp, #48]
    65f0:	ldr	x0, [sp, #48]
    65f4:	ldr	x1, [sp, #64]
    65f8:	str	x1, [x0]
    65fc:	mov	x0, #0x1                   	// #1
    6600:	str	x0, [sp, #104]
    6604:	ldr	x0, [sp, #24]
    6608:	ldr	x1, [x0, #24]
    660c:	ldrsw	x2, [sp, #40]
    6610:	ldr	x0, [sp, #104]
    6614:	add	x0, x2, x0
    6618:	lsl	x0, x0, #3
    661c:	sub	x0, x0, #0x8
    6620:	add	x1, x1, x0
    6624:	ldr	x0, [sp, #24]
    6628:	str	x1, [x0]
    662c:	nop
    6630:	ldp	x29, x30, [sp], #112
    6634:	ret

0000000000006638 <XS_Compress__Raw__Bunzip2_DESTROY>:
    6638:	stp	x29, x30, [sp, #-80]!
    663c:	mov	x29, sp
    6640:	str	x0, [sp, #24]
    6644:	str	x1, [sp, #16]
    6648:	ldr	x0, [sp, #24]
    664c:	ldr	x0, [x0]
    6650:	str	x0, [sp, #40]
    6654:	ldr	x0, [sp, #24]
    6658:	bl	1790 <S_POPMARK>
    665c:	str	w0, [sp, #32]
    6660:	ldr	x0, [sp, #24]
    6664:	ldr	x1, [x0, #24]
    6668:	ldr	w0, [sp, #32]
    666c:	add	w2, w0, #0x1
    6670:	str	w2, [sp, #32]
    6674:	sxtw	x0, w0
    6678:	lsl	x0, x0, #3
    667c:	add	x0, x1, x0
    6680:	str	x0, [sp, #48]
    6684:	ldr	x1, [sp, #40]
    6688:	ldr	x0, [sp, #48]
    668c:	sub	x0, x1, x0
    6690:	asr	x0, x0, #3
    6694:	str	w0, [sp, #36]
    6698:	ldr	w0, [sp, #36]
    669c:	cmp	w0, #0x1
    66a0:	b.eq	66b4 <XS_Compress__Raw__Bunzip2_DESTROY+0x7c>  // b.none
    66a4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    66a8:	add	x1, x0, #0x130
    66ac:	ldr	x0, [sp, #16]
    66b0:	bl	1490 <Perl_croak_xs_usage@plt>
    66b4:	ldr	x0, [sp, #24]
    66b8:	ldr	x1, [x0, #24]
    66bc:	ldrsw	x0, [sp, #32]
    66c0:	lsl	x0, x0, #3
    66c4:	add	x0, x1, x0
    66c8:	ldr	x0, [x0]
    66cc:	ldr	w0, [x0, #12]
    66d0:	and	w0, w0, #0x800
    66d4:	cmp	w0, #0x0
    66d8:	b.eq	6774 <XS_Compress__Raw__Bunzip2_DESTROY+0x13c>  // b.none
    66dc:	ldr	x0, [sp, #24]
    66e0:	ldr	x1, [x0, #24]
    66e4:	ldrsw	x0, [sp, #32]
    66e8:	lsl	x0, x0, #3
    66ec:	add	x0, x1, x0
    66f0:	ldr	x0, [x0]
    66f4:	ldr	x0, [x0, #16]
    66f8:	ldr	w1, [x0, #12]
    66fc:	mov	w0, #0x100                 	// #256
    6700:	movk	w0, #0x20, lsl #16
    6704:	and	w0, w1, w0
    6708:	cmp	w0, #0x100
    670c:	b.ne	6738 <XS_Compress__Raw__Bunzip2_DESTROY+0x100>  // b.any
    6710:	ldr	x0, [sp, #24]
    6714:	ldr	x1, [x0, #24]
    6718:	ldrsw	x0, [sp, #32]
    671c:	lsl	x0, x0, #3
    6720:	add	x0, x1, x0
    6724:	ldr	x0, [x0]
    6728:	ldr	x0, [x0, #16]
    672c:	ldr	x0, [x0]
    6730:	ldr	x0, [x0, #32]
    6734:	b	6764 <XS_Compress__Raw__Bunzip2_DESTROY+0x12c>
    6738:	ldr	x0, [sp, #24]
    673c:	ldr	x1, [x0, #24]
    6740:	ldrsw	x0, [sp, #32]
    6744:	lsl	x0, x0, #3
    6748:	add	x0, x1, x0
    674c:	ldr	x0, [x0]
    6750:	ldr	x0, [x0, #16]
    6754:	mov	w2, #0x2                   	// #2
    6758:	mov	x1, x0
    675c:	ldr	x0, [sp, #24]
    6760:	bl	1320 <Perl_sv_2iv_flags@plt>
    6764:	str	x0, [sp, #56]
    6768:	ldr	x0, [sp, #56]
    676c:	str	x0, [sp, #64]
    6770:	b	6790 <XS_Compress__Raw__Bunzip2_DESTROY+0x158>
    6774:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6778:	add	x2, x0, #0x130
    677c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6780:	add	x1, x0, #0x598
    6784:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6788:	add	x0, x0, #0x268
    678c:	bl	1500 <Perl_croak_nocontext@plt>
    6790:	ldr	x0, [sp, #64]
    6794:	add	x0, x0, #0x8
    6798:	bl	13e0 <BZ2_bzDecompressEnd@plt>
    679c:	ldr	x0, [sp, #64]
    67a0:	bl	1570 <Perl_safesysfree@plt>
    67a4:	str	xzr, [sp, #72]
    67a8:	ldr	x0, [sp, #24]
    67ac:	ldr	x1, [x0, #24]
    67b0:	ldrsw	x2, [sp, #32]
    67b4:	ldr	x0, [sp, #72]
    67b8:	add	x0, x2, x0
    67bc:	lsl	x0, x0, #3
    67c0:	sub	x0, x0, #0x8
    67c4:	add	x1, x1, x0
    67c8:	ldr	x0, [sp, #24]
    67cc:	str	x1, [x0]
    67d0:	nop
    67d4:	ldp	x29, x30, [sp], #80
    67d8:	ret

00000000000067dc <XS_Compress__Raw__Bunzip2_status>:
    67dc:	stp	x29, x30, [sp, #-112]!
    67e0:	mov	x29, sp
    67e4:	str	x0, [sp, #24]
    67e8:	str	x1, [sp, #16]
    67ec:	ldr	x0, [sp, #24]
    67f0:	ldr	x0, [x0]
    67f4:	str	x0, [sp, #48]
    67f8:	ldr	x0, [sp, #24]
    67fc:	bl	1790 <S_POPMARK>
    6800:	str	w0, [sp, #40]
    6804:	ldr	x0, [sp, #24]
    6808:	ldr	x1, [x0, #24]
    680c:	ldr	w0, [sp, #40]
    6810:	add	w2, w0, #0x1
    6814:	str	w2, [sp, #40]
    6818:	sxtw	x0, w0
    681c:	lsl	x0, x0, #3
    6820:	add	x0, x1, x0
    6824:	str	x0, [sp, #56]
    6828:	ldr	x1, [sp, #48]
    682c:	ldr	x0, [sp, #56]
    6830:	sub	x0, x1, x0
    6834:	asr	x0, x0, #3
    6838:	str	w0, [sp, #44]
    683c:	ldr	w0, [sp, #44]
    6840:	cmp	w0, #0x1
    6844:	b.eq	6858 <XS_Compress__Raw__Bunzip2_status+0x7c>  // b.none
    6848:	adrp	x0, 8000 <my_z_errmsg+0x630>
    684c:	add	x1, x0, #0x130
    6850:	ldr	x0, [sp, #16]
    6854:	bl	1490 <Perl_croak_xs_usage@plt>
    6858:	ldr	x0, [sp, #24]
    685c:	ldr	x0, [x0, #8]
    6860:	ldrb	w0, [x0, #35]
    6864:	and	w0, w0, #0x4
    6868:	cmp	w0, #0x0
    686c:	b.eq	6894 <XS_Compress__Raw__Bunzip2_status+0xb8>  // b.none
    6870:	ldr	x0, [sp, #24]
    6874:	ldr	x1, [x0, #16]
    6878:	ldr	x0, [sp, #24]
    687c:	ldr	x0, [x0, #8]
    6880:	ldr	x0, [x0, #24]
    6884:	lsl	x0, x0, #3
    6888:	add	x0, x1, x0
    688c:	ldr	x0, [x0]
    6890:	b	689c <XS_Compress__Raw__Bunzip2_status+0xc0>
    6894:	ldr	x0, [sp, #24]
    6898:	bl	15f0 <Perl_sv_newmortal@plt>
    689c:	str	x0, [sp, #64]
    68a0:	ldr	x0, [sp, #24]
    68a4:	ldr	x1, [x0, #24]
    68a8:	ldrsw	x0, [sp, #40]
    68ac:	lsl	x0, x0, #3
    68b0:	add	x0, x1, x0
    68b4:	ldr	x0, [x0]
    68b8:	ldr	w0, [x0, #12]
    68bc:	and	w0, w0, #0x800
    68c0:	cmp	w0, #0x0
    68c4:	b.eq	6a30 <XS_Compress__Raw__Bunzip2_status+0x254>  // b.none
    68c8:	ldr	x0, [sp, #24]
    68cc:	ldr	x1, [x0, #24]
    68d0:	ldrsw	x0, [sp, #40]
    68d4:	lsl	x0, x0, #3
    68d8:	add	x0, x1, x0
    68dc:	ldr	x1, [x0]
    68e0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    68e4:	add	x2, x0, #0x400
    68e8:	ldr	x0, [sp, #24]
    68ec:	bl	1390 <Perl_sv_derived_from@plt>
    68f0:	and	w0, w0, #0xff
    68f4:	cmp	w0, #0x0
    68f8:	b.eq	6a30 <XS_Compress__Raw__Bunzip2_status+0x254>  // b.none
    68fc:	ldr	x0, [sp, #24]
    6900:	ldr	x1, [x0, #24]
    6904:	ldrsw	x0, [sp, #40]
    6908:	lsl	x0, x0, #3
    690c:	add	x0, x1, x0
    6910:	ldr	x0, [x0]
    6914:	ldr	x0, [x0, #16]
    6918:	ldr	w1, [x0, #12]
    691c:	mov	w0, #0x100                 	// #256
    6920:	movk	w0, #0x20, lsl #16
    6924:	and	w0, w1, w0
    6928:	cmp	w0, #0x100
    692c:	b.ne	6958 <XS_Compress__Raw__Bunzip2_status+0x17c>  // b.any
    6930:	ldr	x0, [sp, #24]
    6934:	ldr	x1, [x0, #24]
    6938:	ldrsw	x0, [sp, #40]
    693c:	lsl	x0, x0, #3
    6940:	add	x0, x1, x0
    6944:	ldr	x0, [x0]
    6948:	ldr	x0, [x0, #16]
    694c:	ldr	x0, [x0]
    6950:	ldr	x0, [x0, #32]
    6954:	b	6984 <XS_Compress__Raw__Bunzip2_status+0x1a8>
    6958:	ldr	x0, [sp, #24]
    695c:	ldr	x1, [x0, #24]
    6960:	ldrsw	x0, [sp, #40]
    6964:	lsl	x0, x0, #3
    6968:	add	x0, x1, x0
    696c:	ldr	x0, [x0]
    6970:	ldr	x0, [x0, #16]
    6974:	mov	w2, #0x2                   	// #2
    6978:	mov	x1, x0
    697c:	ldr	x0, [sp, #24]
    6980:	bl	1320 <Perl_sv_2iv_flags@plt>
    6984:	str	x0, [sp, #72]
    6988:	ldr	x0, [sp, #72]
    698c:	str	x0, [sp, #80]
    6990:	nop
    6994:	ldr	x0, [sp, #80]
    6998:	ldr	w0, [x0, #92]
    699c:	sxtw	x0, w0
    69a0:	str	x0, [sp, #88]
    69a4:	ldr	x0, [sp, #24]
    69a8:	ldr	x1, [x0, #24]
    69ac:	ldrsw	x0, [sp, #40]
    69b0:	lsl	x0, x0, #3
    69b4:	sub	x0, x0, #0x8
    69b8:	add	x0, x1, x0
    69bc:	str	x0, [sp, #48]
    69c0:	ldr	x0, [sp, #88]
    69c4:	str	x0, [sp, #96]
    69c8:	ldr	x0, [sp, #64]
    69cc:	ldr	w1, [x0, #12]
    69d0:	mov	w0, #0x8ff                 	// #2303
    69d4:	movk	w0, #0x9981, lsl #16
    69d8:	and	w0, w1, w0
    69dc:	cmp	w0, #0x1
    69e0:	cset	w0, eq  // eq = none
    69e4:	and	w0, w0, #0xff
    69e8:	mov	w1, w0
    69ec:	ldr	x0, [sp, #24]
    69f0:	ldrb	w0, [x0, #185]
    69f4:	eor	w0, w0, #0x1
    69f8:	and	w0, w0, #0xff
    69fc:	and	w0, w1, w0
    6a00:	ldr	x1, [sp, #96]
    6a04:	mvn	x1, x1
    6a08:	lsr	x1, x1, #63
    6a0c:	and	w1, w1, #0xff
    6a10:	and	w0, w0, w1
    6a14:	cmp	w0, #0x0
    6a18:	cset	w0, ne  // ne = any
    6a1c:	and	w0, w0, #0xff
    6a20:	and	x0, x0, #0xff
    6a24:	cmp	x0, #0x0
    6a28:	b.eq	6a7c <XS_Compress__Raw__Bunzip2_status+0x2a0>  // b.none
    6a2c:	b	6a54 <XS_Compress__Raw__Bunzip2_status+0x278>
    6a30:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6a34:	add	x3, x0, #0x400
    6a38:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6a3c:	add	x2, x0, #0x130
    6a40:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6a44:	add	x1, x0, #0x5b8
    6a48:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6a4c:	add	x0, x0, #0x160
    6a50:	bl	1500 <Perl_croak_nocontext@plt>
    6a54:	ldr	x0, [sp, #64]
    6a58:	ldr	w1, [x0, #12]
    6a5c:	mov	w0, #0x1100                	// #4352
    6a60:	orr	w1, w1, w0
    6a64:	ldr	x0, [sp, #64]
    6a68:	str	w1, [x0, #12]
    6a6c:	ldr	x1, [sp, #96]
    6a70:	ldr	x0, [sp, #64]
    6a74:	str	x1, [x0, #16]
    6a78:	b	6a8c <XS_Compress__Raw__Bunzip2_status+0x2b0>
    6a7c:	ldr	x2, [sp, #96]
    6a80:	ldr	x1, [sp, #64]
    6a84:	ldr	x0, [sp, #24]
    6a88:	bl	15b0 <Perl_sv_setuv_mg@plt>
    6a8c:	ldr	x0, [sp, #48]
    6a90:	add	x0, x0, #0x8
    6a94:	str	x0, [sp, #48]
    6a98:	ldr	x0, [sp, #48]
    6a9c:	ldr	x1, [sp, #64]
    6aa0:	str	x1, [x0]
    6aa4:	mov	x0, #0x1                   	// #1
    6aa8:	str	x0, [sp, #104]
    6aac:	ldr	x0, [sp, #24]
    6ab0:	ldr	x1, [x0, #24]
    6ab4:	ldrsw	x2, [sp, #40]
    6ab8:	ldr	x0, [sp, #104]
    6abc:	add	x0, x2, x0
    6ac0:	lsl	x0, x0, #3
    6ac4:	sub	x0, x0, #0x8
    6ac8:	add	x1, x1, x0
    6acc:	ldr	x0, [sp, #24]
    6ad0:	str	x1, [x0]
    6ad4:	nop
    6ad8:	ldp	x29, x30, [sp], #112
    6adc:	ret

0000000000006ae0 <XS_Compress__Raw__Bunzip2_total_in_lo32>:
    6ae0:	stp	x29, x30, [sp, #-112]!
    6ae4:	mov	x29, sp
    6ae8:	str	x0, [sp, #24]
    6aec:	str	x1, [sp, #16]
    6af0:	ldr	x0, [sp, #24]
    6af4:	ldr	x0, [x0]
    6af8:	str	x0, [sp, #48]
    6afc:	ldr	x0, [sp, #24]
    6b00:	bl	1790 <S_POPMARK>
    6b04:	str	w0, [sp, #40]
    6b08:	ldr	x0, [sp, #24]
    6b0c:	ldr	x1, [x0, #24]
    6b10:	ldr	w0, [sp, #40]
    6b14:	add	w2, w0, #0x1
    6b18:	str	w2, [sp, #40]
    6b1c:	sxtw	x0, w0
    6b20:	lsl	x0, x0, #3
    6b24:	add	x0, x1, x0
    6b28:	str	x0, [sp, #56]
    6b2c:	ldr	x1, [sp, #48]
    6b30:	ldr	x0, [sp, #56]
    6b34:	sub	x0, x1, x0
    6b38:	asr	x0, x0, #3
    6b3c:	str	w0, [sp, #44]
    6b40:	ldr	w0, [sp, #44]
    6b44:	cmp	w0, #0x1
    6b48:	b.eq	6b5c <XS_Compress__Raw__Bunzip2_total_in_lo32+0x7c>  // b.none
    6b4c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6b50:	add	x1, x0, #0x130
    6b54:	ldr	x0, [sp, #16]
    6b58:	bl	1490 <Perl_croak_xs_usage@plt>
    6b5c:	ldr	x0, [sp, #24]
    6b60:	ldr	x0, [x0, #8]
    6b64:	ldrb	w0, [x0, #35]
    6b68:	and	w0, w0, #0x4
    6b6c:	cmp	w0, #0x0
    6b70:	b.eq	6b98 <XS_Compress__Raw__Bunzip2_total_in_lo32+0xb8>  // b.none
    6b74:	ldr	x0, [sp, #24]
    6b78:	ldr	x1, [x0, #16]
    6b7c:	ldr	x0, [sp, #24]
    6b80:	ldr	x0, [x0, #8]
    6b84:	ldr	x0, [x0, #24]
    6b88:	lsl	x0, x0, #3
    6b8c:	add	x0, x1, x0
    6b90:	ldr	x0, [x0]
    6b94:	b	6ba0 <XS_Compress__Raw__Bunzip2_total_in_lo32+0xc0>
    6b98:	ldr	x0, [sp, #24]
    6b9c:	bl	15f0 <Perl_sv_newmortal@plt>
    6ba0:	str	x0, [sp, #64]
    6ba4:	ldr	x0, [sp, #24]
    6ba8:	ldr	x1, [x0, #24]
    6bac:	ldrsw	x0, [sp, #40]
    6bb0:	lsl	x0, x0, #3
    6bb4:	add	x0, x1, x0
    6bb8:	ldr	x0, [x0]
    6bbc:	ldr	w0, [x0, #12]
    6bc0:	and	w0, w0, #0x800
    6bc4:	cmp	w0, #0x0
    6bc8:	b.eq	6d34 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x254>  // b.none
    6bcc:	ldr	x0, [sp, #24]
    6bd0:	ldr	x1, [x0, #24]
    6bd4:	ldrsw	x0, [sp, #40]
    6bd8:	lsl	x0, x0, #3
    6bdc:	add	x0, x1, x0
    6be0:	ldr	x1, [x0]
    6be4:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6be8:	add	x2, x0, #0x400
    6bec:	ldr	x0, [sp, #24]
    6bf0:	bl	1390 <Perl_sv_derived_from@plt>
    6bf4:	and	w0, w0, #0xff
    6bf8:	cmp	w0, #0x0
    6bfc:	b.eq	6d34 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x254>  // b.none
    6c00:	ldr	x0, [sp, #24]
    6c04:	ldr	x1, [x0, #24]
    6c08:	ldrsw	x0, [sp, #40]
    6c0c:	lsl	x0, x0, #3
    6c10:	add	x0, x1, x0
    6c14:	ldr	x0, [x0]
    6c18:	ldr	x0, [x0, #16]
    6c1c:	ldr	w1, [x0, #12]
    6c20:	mov	w0, #0x100                 	// #256
    6c24:	movk	w0, #0x20, lsl #16
    6c28:	and	w0, w1, w0
    6c2c:	cmp	w0, #0x100
    6c30:	b.ne	6c5c <XS_Compress__Raw__Bunzip2_total_in_lo32+0x17c>  // b.any
    6c34:	ldr	x0, [sp, #24]
    6c38:	ldr	x1, [x0, #24]
    6c3c:	ldrsw	x0, [sp, #40]
    6c40:	lsl	x0, x0, #3
    6c44:	add	x0, x1, x0
    6c48:	ldr	x0, [x0]
    6c4c:	ldr	x0, [x0, #16]
    6c50:	ldr	x0, [x0]
    6c54:	ldr	x0, [x0, #32]
    6c58:	b	6c88 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x1a8>
    6c5c:	ldr	x0, [sp, #24]
    6c60:	ldr	x1, [x0, #24]
    6c64:	ldrsw	x0, [sp, #40]
    6c68:	lsl	x0, x0, #3
    6c6c:	add	x0, x1, x0
    6c70:	ldr	x0, [x0]
    6c74:	ldr	x0, [x0, #16]
    6c78:	mov	w2, #0x2                   	// #2
    6c7c:	mov	x1, x0
    6c80:	ldr	x0, [sp, #24]
    6c84:	bl	1320 <Perl_sv_2iv_flags@plt>
    6c88:	str	x0, [sp, #72]
    6c8c:	ldr	x0, [sp, #72]
    6c90:	str	x0, [sp, #80]
    6c94:	nop
    6c98:	ldr	x0, [sp, #80]
    6c9c:	ldr	w0, [x0, #20]
    6ca0:	mov	w0, w0
    6ca4:	str	x0, [sp, #88]
    6ca8:	ldr	x0, [sp, #24]
    6cac:	ldr	x1, [x0, #24]
    6cb0:	ldrsw	x0, [sp, #40]
    6cb4:	lsl	x0, x0, #3
    6cb8:	sub	x0, x0, #0x8
    6cbc:	add	x0, x1, x0
    6cc0:	str	x0, [sp, #48]
    6cc4:	ldr	x0, [sp, #88]
    6cc8:	str	x0, [sp, #96]
    6ccc:	ldr	x0, [sp, #64]
    6cd0:	ldr	w1, [x0, #12]
    6cd4:	mov	w0, #0x8ff                 	// #2303
    6cd8:	movk	w0, #0x9981, lsl #16
    6cdc:	and	w0, w1, w0
    6ce0:	cmp	w0, #0x1
    6ce4:	cset	w0, eq  // eq = none
    6ce8:	and	w0, w0, #0xff
    6cec:	mov	w1, w0
    6cf0:	ldr	x0, [sp, #24]
    6cf4:	ldrb	w0, [x0, #185]
    6cf8:	eor	w0, w0, #0x1
    6cfc:	and	w0, w0, #0xff
    6d00:	and	w0, w1, w0
    6d04:	ldr	x1, [sp, #96]
    6d08:	mvn	x1, x1
    6d0c:	lsr	x1, x1, #63
    6d10:	and	w1, w1, #0xff
    6d14:	and	w0, w0, w1
    6d18:	cmp	w0, #0x0
    6d1c:	cset	w0, ne  // ne = any
    6d20:	and	w0, w0, #0xff
    6d24:	and	x0, x0, #0xff
    6d28:	cmp	x0, #0x0
    6d2c:	b.eq	6d80 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x2a0>  // b.none
    6d30:	b	6d58 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x278>
    6d34:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6d38:	add	x3, x0, #0x400
    6d3c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6d40:	add	x2, x0, #0x130
    6d44:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6d48:	add	x1, x0, #0x5d8
    6d4c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6d50:	add	x0, x0, #0x160
    6d54:	bl	1500 <Perl_croak_nocontext@plt>
    6d58:	ldr	x0, [sp, #64]
    6d5c:	ldr	w1, [x0, #12]
    6d60:	mov	w0, #0x1100                	// #4352
    6d64:	orr	w1, w1, w0
    6d68:	ldr	x0, [sp, #64]
    6d6c:	str	w1, [x0, #12]
    6d70:	ldr	x1, [sp, #96]
    6d74:	ldr	x0, [sp, #64]
    6d78:	str	x1, [x0, #16]
    6d7c:	b	6d90 <XS_Compress__Raw__Bunzip2_total_in_lo32+0x2b0>
    6d80:	ldr	x2, [sp, #96]
    6d84:	ldr	x1, [sp, #64]
    6d88:	ldr	x0, [sp, #24]
    6d8c:	bl	15b0 <Perl_sv_setuv_mg@plt>
    6d90:	ldr	x0, [sp, #48]
    6d94:	add	x0, x0, #0x8
    6d98:	str	x0, [sp, #48]
    6d9c:	ldr	x0, [sp, #48]
    6da0:	ldr	x1, [sp, #64]
    6da4:	str	x1, [x0]
    6da8:	mov	x0, #0x1                   	// #1
    6dac:	str	x0, [sp, #104]
    6db0:	ldr	x0, [sp, #24]
    6db4:	ldr	x1, [x0, #24]
    6db8:	ldrsw	x2, [sp, #40]
    6dbc:	ldr	x0, [sp, #104]
    6dc0:	add	x0, x2, x0
    6dc4:	lsl	x0, x0, #3
    6dc8:	sub	x0, x0, #0x8
    6dcc:	add	x1, x1, x0
    6dd0:	ldr	x0, [sp, #24]
    6dd4:	str	x1, [x0]
    6dd8:	nop
    6ddc:	ldp	x29, x30, [sp], #112
    6de0:	ret

0000000000006de4 <XS_Compress__Raw__Bunzip2_total_out_lo32>:
    6de4:	stp	x29, x30, [sp, #-112]!
    6de8:	mov	x29, sp
    6dec:	str	x0, [sp, #24]
    6df0:	str	x1, [sp, #16]
    6df4:	ldr	x0, [sp, #24]
    6df8:	ldr	x0, [x0]
    6dfc:	str	x0, [sp, #48]
    6e00:	ldr	x0, [sp, #24]
    6e04:	bl	1790 <S_POPMARK>
    6e08:	str	w0, [sp, #40]
    6e0c:	ldr	x0, [sp, #24]
    6e10:	ldr	x1, [x0, #24]
    6e14:	ldr	w0, [sp, #40]
    6e18:	add	w2, w0, #0x1
    6e1c:	str	w2, [sp, #40]
    6e20:	sxtw	x0, w0
    6e24:	lsl	x0, x0, #3
    6e28:	add	x0, x1, x0
    6e2c:	str	x0, [sp, #56]
    6e30:	ldr	x1, [sp, #48]
    6e34:	ldr	x0, [sp, #56]
    6e38:	sub	x0, x1, x0
    6e3c:	asr	x0, x0, #3
    6e40:	str	w0, [sp, #44]
    6e44:	ldr	w0, [sp, #44]
    6e48:	cmp	w0, #0x1
    6e4c:	b.eq	6e60 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x7c>  // b.none
    6e50:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6e54:	add	x1, x0, #0x130
    6e58:	ldr	x0, [sp, #16]
    6e5c:	bl	1490 <Perl_croak_xs_usage@plt>
    6e60:	ldr	x0, [sp, #24]
    6e64:	ldr	x0, [x0, #8]
    6e68:	ldrb	w0, [x0, #35]
    6e6c:	and	w0, w0, #0x4
    6e70:	cmp	w0, #0x0
    6e74:	b.eq	6e9c <XS_Compress__Raw__Bunzip2_total_out_lo32+0xb8>  // b.none
    6e78:	ldr	x0, [sp, #24]
    6e7c:	ldr	x1, [x0, #16]
    6e80:	ldr	x0, [sp, #24]
    6e84:	ldr	x0, [x0, #8]
    6e88:	ldr	x0, [x0, #24]
    6e8c:	lsl	x0, x0, #3
    6e90:	add	x0, x1, x0
    6e94:	ldr	x0, [x0]
    6e98:	b	6ea4 <XS_Compress__Raw__Bunzip2_total_out_lo32+0xc0>
    6e9c:	ldr	x0, [sp, #24]
    6ea0:	bl	15f0 <Perl_sv_newmortal@plt>
    6ea4:	str	x0, [sp, #64]
    6ea8:	ldr	x0, [sp, #24]
    6eac:	ldr	x1, [x0, #24]
    6eb0:	ldrsw	x0, [sp, #40]
    6eb4:	lsl	x0, x0, #3
    6eb8:	add	x0, x1, x0
    6ebc:	ldr	x0, [x0]
    6ec0:	ldr	w0, [x0, #12]
    6ec4:	and	w0, w0, #0x800
    6ec8:	cmp	w0, #0x0
    6ecc:	b.eq	7038 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x254>  // b.none
    6ed0:	ldr	x0, [sp, #24]
    6ed4:	ldr	x1, [x0, #24]
    6ed8:	ldrsw	x0, [sp, #40]
    6edc:	lsl	x0, x0, #3
    6ee0:	add	x0, x1, x0
    6ee4:	ldr	x1, [x0]
    6ee8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    6eec:	add	x2, x0, #0x400
    6ef0:	ldr	x0, [sp, #24]
    6ef4:	bl	1390 <Perl_sv_derived_from@plt>
    6ef8:	and	w0, w0, #0xff
    6efc:	cmp	w0, #0x0
    6f00:	b.eq	7038 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x254>  // b.none
    6f04:	ldr	x0, [sp, #24]
    6f08:	ldr	x1, [x0, #24]
    6f0c:	ldrsw	x0, [sp, #40]
    6f10:	lsl	x0, x0, #3
    6f14:	add	x0, x1, x0
    6f18:	ldr	x0, [x0]
    6f1c:	ldr	x0, [x0, #16]
    6f20:	ldr	w1, [x0, #12]
    6f24:	mov	w0, #0x100                 	// #256
    6f28:	movk	w0, #0x20, lsl #16
    6f2c:	and	w0, w1, w0
    6f30:	cmp	w0, #0x100
    6f34:	b.ne	6f60 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x17c>  // b.any
    6f38:	ldr	x0, [sp, #24]
    6f3c:	ldr	x1, [x0, #24]
    6f40:	ldrsw	x0, [sp, #40]
    6f44:	lsl	x0, x0, #3
    6f48:	add	x0, x1, x0
    6f4c:	ldr	x0, [x0]
    6f50:	ldr	x0, [x0, #16]
    6f54:	ldr	x0, [x0]
    6f58:	ldr	x0, [x0, #32]
    6f5c:	b	6f8c <XS_Compress__Raw__Bunzip2_total_out_lo32+0x1a8>
    6f60:	ldr	x0, [sp, #24]
    6f64:	ldr	x1, [x0, #24]
    6f68:	ldrsw	x0, [sp, #40]
    6f6c:	lsl	x0, x0, #3
    6f70:	add	x0, x1, x0
    6f74:	ldr	x0, [x0]
    6f78:	ldr	x0, [x0, #16]
    6f7c:	mov	w2, #0x2                   	// #2
    6f80:	mov	x1, x0
    6f84:	ldr	x0, [sp, #24]
    6f88:	bl	1320 <Perl_sv_2iv_flags@plt>
    6f8c:	str	x0, [sp, #72]
    6f90:	ldr	x0, [sp, #72]
    6f94:	str	x0, [sp, #80]
    6f98:	nop
    6f9c:	ldr	x0, [sp, #80]
    6fa0:	ldr	w0, [x0, #44]
    6fa4:	mov	w0, w0
    6fa8:	str	x0, [sp, #88]
    6fac:	ldr	x0, [sp, #24]
    6fb0:	ldr	x1, [x0, #24]
    6fb4:	ldrsw	x0, [sp, #40]
    6fb8:	lsl	x0, x0, #3
    6fbc:	sub	x0, x0, #0x8
    6fc0:	add	x0, x1, x0
    6fc4:	str	x0, [sp, #48]
    6fc8:	ldr	x0, [sp, #88]
    6fcc:	str	x0, [sp, #96]
    6fd0:	ldr	x0, [sp, #64]
    6fd4:	ldr	w1, [x0, #12]
    6fd8:	mov	w0, #0x8ff                 	// #2303
    6fdc:	movk	w0, #0x9981, lsl #16
    6fe0:	and	w0, w1, w0
    6fe4:	cmp	w0, #0x1
    6fe8:	cset	w0, eq  // eq = none
    6fec:	and	w0, w0, #0xff
    6ff0:	mov	w1, w0
    6ff4:	ldr	x0, [sp, #24]
    6ff8:	ldrb	w0, [x0, #185]
    6ffc:	eor	w0, w0, #0x1
    7000:	and	w0, w0, #0xff
    7004:	and	w0, w1, w0
    7008:	ldr	x1, [sp, #96]
    700c:	mvn	x1, x1
    7010:	lsr	x1, x1, #63
    7014:	and	w1, w1, #0xff
    7018:	and	w0, w0, w1
    701c:	cmp	w0, #0x0
    7020:	cset	w0, ne  // ne = any
    7024:	and	w0, w0, #0xff
    7028:	and	x0, x0, #0xff
    702c:	cmp	x0, #0x0
    7030:	b.eq	7084 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x2a0>  // b.none
    7034:	b	705c <XS_Compress__Raw__Bunzip2_total_out_lo32+0x278>
    7038:	adrp	x0, 8000 <my_z_errmsg+0x630>
    703c:	add	x3, x0, #0x400
    7040:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7044:	add	x2, x0, #0x130
    7048:	adrp	x0, 8000 <my_z_errmsg+0x630>
    704c:	add	x1, x0, #0x600
    7050:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7054:	add	x0, x0, #0x160
    7058:	bl	1500 <Perl_croak_nocontext@plt>
    705c:	ldr	x0, [sp, #64]
    7060:	ldr	w1, [x0, #12]
    7064:	mov	w0, #0x1100                	// #4352
    7068:	orr	w1, w1, w0
    706c:	ldr	x0, [sp, #64]
    7070:	str	w1, [x0, #12]
    7074:	ldr	x1, [sp, #96]
    7078:	ldr	x0, [sp, #64]
    707c:	str	x1, [x0, #16]
    7080:	b	7094 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x2b0>
    7084:	ldr	x2, [sp, #96]
    7088:	ldr	x1, [sp, #64]
    708c:	ldr	x0, [sp, #24]
    7090:	bl	15b0 <Perl_sv_setuv_mg@plt>
    7094:	ldr	x0, [sp, #48]
    7098:	add	x0, x0, #0x8
    709c:	str	x0, [sp, #48]
    70a0:	ldr	x0, [sp, #48]
    70a4:	ldr	x1, [sp, #64]
    70a8:	str	x1, [x0]
    70ac:	mov	x0, #0x1                   	// #1
    70b0:	str	x0, [sp, #104]
    70b4:	ldr	x0, [sp, #24]
    70b8:	ldr	x1, [x0, #24]
    70bc:	ldrsw	x2, [sp, #40]
    70c0:	ldr	x0, [sp, #104]
    70c4:	add	x0, x2, x0
    70c8:	lsl	x0, x0, #3
    70cc:	sub	x0, x0, #0x8
    70d0:	add	x1, x1, x0
    70d4:	ldr	x0, [sp, #24]
    70d8:	str	x1, [x0]
    70dc:	nop
    70e0:	ldp	x29, x30, [sp], #112
    70e4:	ret

00000000000070e8 <XS_Compress__Raw__Bunzip2_compressedBytes>:
    70e8:	stp	x29, x30, [sp, #-112]!
    70ec:	mov	x29, sp
    70f0:	str	x0, [sp, #24]
    70f4:	str	x1, [sp, #16]
    70f8:	ldr	x0, [sp, #24]
    70fc:	ldr	x0, [x0]
    7100:	str	x0, [sp, #48]
    7104:	ldr	x0, [sp, #24]
    7108:	bl	1790 <S_POPMARK>
    710c:	str	w0, [sp, #40]
    7110:	ldr	x0, [sp, #24]
    7114:	ldr	x1, [x0, #24]
    7118:	ldr	w0, [sp, #40]
    711c:	add	w2, w0, #0x1
    7120:	str	w2, [sp, #40]
    7124:	sxtw	x0, w0
    7128:	lsl	x0, x0, #3
    712c:	add	x0, x1, x0
    7130:	str	x0, [sp, #56]
    7134:	ldr	x1, [sp, #48]
    7138:	ldr	x0, [sp, #56]
    713c:	sub	x0, x1, x0
    7140:	asr	x0, x0, #3
    7144:	str	w0, [sp, #44]
    7148:	ldr	w0, [sp, #44]
    714c:	cmp	w0, #0x1
    7150:	b.eq	7164 <XS_Compress__Raw__Bunzip2_compressedBytes+0x7c>  // b.none
    7154:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7158:	add	x1, x0, #0x130
    715c:	ldr	x0, [sp, #16]
    7160:	bl	1490 <Perl_croak_xs_usage@plt>
    7164:	ldr	x0, [sp, #24]
    7168:	ldr	x0, [x0, #8]
    716c:	ldrb	w0, [x0, #35]
    7170:	and	w0, w0, #0x4
    7174:	cmp	w0, #0x0
    7178:	b.eq	71a0 <XS_Compress__Raw__Bunzip2_compressedBytes+0xb8>  // b.none
    717c:	ldr	x0, [sp, #24]
    7180:	ldr	x1, [x0, #16]
    7184:	ldr	x0, [sp, #24]
    7188:	ldr	x0, [x0, #8]
    718c:	ldr	x0, [x0, #24]
    7190:	lsl	x0, x0, #3
    7194:	add	x0, x1, x0
    7198:	ldr	x0, [x0]
    719c:	b	71a8 <XS_Compress__Raw__Bunzip2_compressedBytes+0xc0>
    71a0:	ldr	x0, [sp, #24]
    71a4:	bl	15f0 <Perl_sv_newmortal@plt>
    71a8:	str	x0, [sp, #64]
    71ac:	ldr	x0, [sp, #24]
    71b0:	ldr	x1, [x0, #24]
    71b4:	ldrsw	x0, [sp, #40]
    71b8:	lsl	x0, x0, #3
    71bc:	add	x0, x1, x0
    71c0:	ldr	x0, [x0]
    71c4:	ldr	w0, [x0, #12]
    71c8:	and	w0, w0, #0x800
    71cc:	cmp	w0, #0x0
    71d0:	b.eq	7338 <XS_Compress__Raw__Bunzip2_compressedBytes+0x250>  // b.none
    71d4:	ldr	x0, [sp, #24]
    71d8:	ldr	x1, [x0, #24]
    71dc:	ldrsw	x0, [sp, #40]
    71e0:	lsl	x0, x0, #3
    71e4:	add	x0, x1, x0
    71e8:	ldr	x1, [x0]
    71ec:	adrp	x0, 8000 <my_z_errmsg+0x630>
    71f0:	add	x2, x0, #0x400
    71f4:	ldr	x0, [sp, #24]
    71f8:	bl	1390 <Perl_sv_derived_from@plt>
    71fc:	and	w0, w0, #0xff
    7200:	cmp	w0, #0x0
    7204:	b.eq	7338 <XS_Compress__Raw__Bunzip2_compressedBytes+0x250>  // b.none
    7208:	ldr	x0, [sp, #24]
    720c:	ldr	x1, [x0, #24]
    7210:	ldrsw	x0, [sp, #40]
    7214:	lsl	x0, x0, #3
    7218:	add	x0, x1, x0
    721c:	ldr	x0, [x0]
    7220:	ldr	x0, [x0, #16]
    7224:	ldr	w1, [x0, #12]
    7228:	mov	w0, #0x100                 	// #256
    722c:	movk	w0, #0x20, lsl #16
    7230:	and	w0, w1, w0
    7234:	cmp	w0, #0x100
    7238:	b.ne	7264 <XS_Compress__Raw__Bunzip2_compressedBytes+0x17c>  // b.any
    723c:	ldr	x0, [sp, #24]
    7240:	ldr	x1, [x0, #24]
    7244:	ldrsw	x0, [sp, #40]
    7248:	lsl	x0, x0, #3
    724c:	add	x0, x1, x0
    7250:	ldr	x0, [x0]
    7254:	ldr	x0, [x0, #16]
    7258:	ldr	x0, [x0]
    725c:	ldr	x0, [x0, #32]
    7260:	b	7290 <XS_Compress__Raw__Bunzip2_compressedBytes+0x1a8>
    7264:	ldr	x0, [sp, #24]
    7268:	ldr	x1, [x0, #24]
    726c:	ldrsw	x0, [sp, #40]
    7270:	lsl	x0, x0, #3
    7274:	add	x0, x1, x0
    7278:	ldr	x0, [x0]
    727c:	ldr	x0, [x0, #16]
    7280:	mov	w2, #0x2                   	// #2
    7284:	mov	x1, x0
    7288:	ldr	x0, [sp, #24]
    728c:	bl	1320 <Perl_sv_2iv_flags@plt>
    7290:	str	x0, [sp, #72]
    7294:	ldr	x0, [sp, #72]
    7298:	str	x0, [sp, #80]
    729c:	nop
    72a0:	ldr	x0, [sp, #80]
    72a4:	ldr	x0, [x0, #104]
    72a8:	str	x0, [sp, #88]
    72ac:	ldr	x0, [sp, #24]
    72b0:	ldr	x1, [x0, #24]
    72b4:	ldrsw	x0, [sp, #40]
    72b8:	lsl	x0, x0, #3
    72bc:	sub	x0, x0, #0x8
    72c0:	add	x0, x1, x0
    72c4:	str	x0, [sp, #48]
    72c8:	ldr	x0, [sp, #88]
    72cc:	str	x0, [sp, #96]
    72d0:	ldr	x0, [sp, #64]
    72d4:	ldr	w1, [x0, #12]
    72d8:	mov	w0, #0x8ff                 	// #2303
    72dc:	movk	w0, #0x9981, lsl #16
    72e0:	and	w0, w1, w0
    72e4:	cmp	w0, #0x1
    72e8:	cset	w0, eq  // eq = none
    72ec:	and	w0, w0, #0xff
    72f0:	mov	w1, w0
    72f4:	ldr	x0, [sp, #24]
    72f8:	ldrb	w0, [x0, #185]
    72fc:	eor	w0, w0, #0x1
    7300:	and	w0, w0, #0xff
    7304:	and	w0, w1, w0
    7308:	ldr	x1, [sp, #96]
    730c:	mvn	x1, x1
    7310:	lsr	x1, x1, #63
    7314:	and	w1, w1, #0xff
    7318:	and	w0, w0, w1
    731c:	cmp	w0, #0x0
    7320:	cset	w0, ne  // ne = any
    7324:	and	w0, w0, #0xff
    7328:	and	x0, x0, #0xff
    732c:	cmp	x0, #0x0
    7330:	b.eq	7384 <XS_Compress__Raw__Bunzip2_compressedBytes+0x29c>  // b.none
    7334:	b	735c <XS_Compress__Raw__Bunzip2_compressedBytes+0x274>
    7338:	adrp	x0, 8000 <my_z_errmsg+0x630>
    733c:	add	x3, x0, #0x400
    7340:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7344:	add	x2, x0, #0x130
    7348:	adrp	x0, 8000 <my_z_errmsg+0x630>
    734c:	add	x1, x0, #0x628
    7350:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7354:	add	x0, x0, #0x160
    7358:	bl	1500 <Perl_croak_nocontext@plt>
    735c:	ldr	x0, [sp, #64]
    7360:	ldr	w1, [x0, #12]
    7364:	mov	w0, #0x1100                	// #4352
    7368:	orr	w1, w1, w0
    736c:	ldr	x0, [sp, #64]
    7370:	str	w1, [x0, #12]
    7374:	ldr	x1, [sp, #96]
    7378:	ldr	x0, [sp, #64]
    737c:	str	x1, [x0, #16]
    7380:	b	7394 <XS_Compress__Raw__Bunzip2_compressedBytes+0x2ac>
    7384:	ldr	x2, [sp, #96]
    7388:	ldr	x1, [sp, #64]
    738c:	ldr	x0, [sp, #24]
    7390:	bl	15b0 <Perl_sv_setuv_mg@plt>
    7394:	ldr	x0, [sp, #48]
    7398:	add	x0, x0, #0x8
    739c:	str	x0, [sp, #48]
    73a0:	ldr	x0, [sp, #48]
    73a4:	ldr	x1, [sp, #64]
    73a8:	str	x1, [x0]
    73ac:	mov	x0, #0x1                   	// #1
    73b0:	str	x0, [sp, #104]
    73b4:	ldr	x0, [sp, #24]
    73b8:	ldr	x1, [x0, #24]
    73bc:	ldrsw	x2, [sp, #40]
    73c0:	ldr	x0, [sp, #104]
    73c4:	add	x0, x2, x0
    73c8:	lsl	x0, x0, #3
    73cc:	sub	x0, x0, #0x8
    73d0:	add	x1, x1, x0
    73d4:	ldr	x0, [sp, #24]
    73d8:	str	x1, [x0]
    73dc:	nop
    73e0:	ldp	x29, x30, [sp], #112
    73e4:	ret

00000000000073e8 <XS_Compress__Raw__Bunzip2_uncompressedBytes>:
    73e8:	stp	x29, x30, [sp, #-112]!
    73ec:	mov	x29, sp
    73f0:	str	x0, [sp, #24]
    73f4:	str	x1, [sp, #16]
    73f8:	ldr	x0, [sp, #24]
    73fc:	ldr	x0, [x0]
    7400:	str	x0, [sp, #48]
    7404:	ldr	x0, [sp, #24]
    7408:	bl	1790 <S_POPMARK>
    740c:	str	w0, [sp, #40]
    7410:	ldr	x0, [sp, #24]
    7414:	ldr	x1, [x0, #24]
    7418:	ldr	w0, [sp, #40]
    741c:	add	w2, w0, #0x1
    7420:	str	w2, [sp, #40]
    7424:	sxtw	x0, w0
    7428:	lsl	x0, x0, #3
    742c:	add	x0, x1, x0
    7430:	str	x0, [sp, #56]
    7434:	ldr	x1, [sp, #48]
    7438:	ldr	x0, [sp, #56]
    743c:	sub	x0, x1, x0
    7440:	asr	x0, x0, #3
    7444:	str	w0, [sp, #44]
    7448:	ldr	w0, [sp, #44]
    744c:	cmp	w0, #0x1
    7450:	b.eq	7464 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x7c>  // b.none
    7454:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7458:	add	x1, x0, #0x130
    745c:	ldr	x0, [sp, #16]
    7460:	bl	1490 <Perl_croak_xs_usage@plt>
    7464:	ldr	x0, [sp, #24]
    7468:	ldr	x0, [x0, #8]
    746c:	ldrb	w0, [x0, #35]
    7470:	and	w0, w0, #0x4
    7474:	cmp	w0, #0x0
    7478:	b.eq	74a0 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0xb8>  // b.none
    747c:	ldr	x0, [sp, #24]
    7480:	ldr	x1, [x0, #16]
    7484:	ldr	x0, [sp, #24]
    7488:	ldr	x0, [x0, #8]
    748c:	ldr	x0, [x0, #24]
    7490:	lsl	x0, x0, #3
    7494:	add	x0, x1, x0
    7498:	ldr	x0, [x0]
    749c:	b	74a8 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0xc0>
    74a0:	ldr	x0, [sp, #24]
    74a4:	bl	15f0 <Perl_sv_newmortal@plt>
    74a8:	str	x0, [sp, #64]
    74ac:	ldr	x0, [sp, #24]
    74b0:	ldr	x1, [x0, #24]
    74b4:	ldrsw	x0, [sp, #40]
    74b8:	lsl	x0, x0, #3
    74bc:	add	x0, x1, x0
    74c0:	ldr	x0, [x0]
    74c4:	ldr	w0, [x0, #12]
    74c8:	and	w0, w0, #0x800
    74cc:	cmp	w0, #0x0
    74d0:	b.eq	7638 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x250>  // b.none
    74d4:	ldr	x0, [sp, #24]
    74d8:	ldr	x1, [x0, #24]
    74dc:	ldrsw	x0, [sp, #40]
    74e0:	lsl	x0, x0, #3
    74e4:	add	x0, x1, x0
    74e8:	ldr	x1, [x0]
    74ec:	adrp	x0, 8000 <my_z_errmsg+0x630>
    74f0:	add	x2, x0, #0x400
    74f4:	ldr	x0, [sp, #24]
    74f8:	bl	1390 <Perl_sv_derived_from@plt>
    74fc:	and	w0, w0, #0xff
    7500:	cmp	w0, #0x0
    7504:	b.eq	7638 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x250>  // b.none
    7508:	ldr	x0, [sp, #24]
    750c:	ldr	x1, [x0, #24]
    7510:	ldrsw	x0, [sp, #40]
    7514:	lsl	x0, x0, #3
    7518:	add	x0, x1, x0
    751c:	ldr	x0, [x0]
    7520:	ldr	x0, [x0, #16]
    7524:	ldr	w1, [x0, #12]
    7528:	mov	w0, #0x100                 	// #256
    752c:	movk	w0, #0x20, lsl #16
    7530:	and	w0, w1, w0
    7534:	cmp	w0, #0x100
    7538:	b.ne	7564 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x17c>  // b.any
    753c:	ldr	x0, [sp, #24]
    7540:	ldr	x1, [x0, #24]
    7544:	ldrsw	x0, [sp, #40]
    7548:	lsl	x0, x0, #3
    754c:	add	x0, x1, x0
    7550:	ldr	x0, [x0]
    7554:	ldr	x0, [x0, #16]
    7558:	ldr	x0, [x0]
    755c:	ldr	x0, [x0, #32]
    7560:	b	7590 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x1a8>
    7564:	ldr	x0, [sp, #24]
    7568:	ldr	x1, [x0, #24]
    756c:	ldrsw	x0, [sp, #40]
    7570:	lsl	x0, x0, #3
    7574:	add	x0, x1, x0
    7578:	ldr	x0, [x0]
    757c:	ldr	x0, [x0, #16]
    7580:	mov	w2, #0x2                   	// #2
    7584:	mov	x1, x0
    7588:	ldr	x0, [sp, #24]
    758c:	bl	1320 <Perl_sv_2iv_flags@plt>
    7590:	str	x0, [sp, #72]
    7594:	ldr	x0, [sp, #72]
    7598:	str	x0, [sp, #80]
    759c:	nop
    75a0:	ldr	x0, [sp, #80]
    75a4:	ldr	x0, [x0, #112]
    75a8:	str	x0, [sp, #88]
    75ac:	ldr	x0, [sp, #24]
    75b0:	ldr	x1, [x0, #24]
    75b4:	ldrsw	x0, [sp, #40]
    75b8:	lsl	x0, x0, #3
    75bc:	sub	x0, x0, #0x8
    75c0:	add	x0, x1, x0
    75c4:	str	x0, [sp, #48]
    75c8:	ldr	x0, [sp, #88]
    75cc:	str	x0, [sp, #96]
    75d0:	ldr	x0, [sp, #64]
    75d4:	ldr	w1, [x0, #12]
    75d8:	mov	w0, #0x8ff                 	// #2303
    75dc:	movk	w0, #0x9981, lsl #16
    75e0:	and	w0, w1, w0
    75e4:	cmp	w0, #0x1
    75e8:	cset	w0, eq  // eq = none
    75ec:	and	w0, w0, #0xff
    75f0:	mov	w1, w0
    75f4:	ldr	x0, [sp, #24]
    75f8:	ldrb	w0, [x0, #185]
    75fc:	eor	w0, w0, #0x1
    7600:	and	w0, w0, #0xff
    7604:	and	w0, w1, w0
    7608:	ldr	x1, [sp, #96]
    760c:	mvn	x1, x1
    7610:	lsr	x1, x1, #63
    7614:	and	w1, w1, #0xff
    7618:	and	w0, w0, w1
    761c:	cmp	w0, #0x0
    7620:	cset	w0, ne  // ne = any
    7624:	and	w0, w0, #0xff
    7628:	and	x0, x0, #0xff
    762c:	cmp	x0, #0x0
    7630:	b.eq	7684 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x29c>  // b.none
    7634:	b	765c <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x274>
    7638:	adrp	x0, 8000 <my_z_errmsg+0x630>
    763c:	add	x3, x0, #0x400
    7640:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7644:	add	x2, x0, #0x130
    7648:	adrp	x0, 8000 <my_z_errmsg+0x630>
    764c:	add	x1, x0, #0x650
    7650:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7654:	add	x0, x0, #0x160
    7658:	bl	1500 <Perl_croak_nocontext@plt>
    765c:	ldr	x0, [sp, #64]
    7660:	ldr	w1, [x0, #12]
    7664:	mov	w0, #0x1100                	// #4352
    7668:	orr	w1, w1, w0
    766c:	ldr	x0, [sp, #64]
    7670:	str	w1, [x0, #12]
    7674:	ldr	x1, [sp, #96]
    7678:	ldr	x0, [sp, #64]
    767c:	str	x1, [x0, #16]
    7680:	b	7694 <XS_Compress__Raw__Bunzip2_uncompressedBytes+0x2ac>
    7684:	ldr	x2, [sp, #96]
    7688:	ldr	x1, [sp, #64]
    768c:	ldr	x0, [sp, #24]
    7690:	bl	15b0 <Perl_sv_setuv_mg@plt>
    7694:	ldr	x0, [sp, #48]
    7698:	add	x0, x0, #0x8
    769c:	str	x0, [sp, #48]
    76a0:	ldr	x0, [sp, #48]
    76a4:	ldr	x1, [sp, #64]
    76a8:	str	x1, [x0]
    76ac:	mov	x0, #0x1                   	// #1
    76b0:	str	x0, [sp, #104]
    76b4:	ldr	x0, [sp, #24]
    76b8:	ldr	x1, [x0, #24]
    76bc:	ldrsw	x2, [sp, #40]
    76c0:	ldr	x0, [sp, #104]
    76c4:	add	x0, x2, x0
    76c8:	lsl	x0, x0, #3
    76cc:	sub	x0, x0, #0x8
    76d0:	add	x1, x1, x0
    76d4:	ldr	x0, [sp, #24]
    76d8:	str	x1, [x0]
    76dc:	nop
    76e0:	ldp	x29, x30, [sp], #112
    76e4:	ret

00000000000076e8 <boot_Compress__Raw__Bzip2>:
    76e8:	stp	x29, x30, [sp, #-64]!
    76ec:	mov	x29, sp
    76f0:	str	x0, [sp, #24]
    76f4:	str	x1, [sp, #16]
    76f8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    76fc:	add	x4, x0, #0x680
    7700:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7704:	add	x3, x0, #0x688
    7708:	adrp	x0, 8000 <my_z_errmsg+0x630>
    770c:	add	x2, x0, #0x690
    7710:	ldr	x1, [sp, #24]
    7714:	mov	w0, #0x5e7                 	// #1511
    7718:	movk	w0, #0xd30, lsl #16
    771c:	bl	1580 <Perl_xs_handshake@plt>
    7720:	str	w0, [sp, #32]
    7724:	ldr	x0, [sp, #24]
    7728:	ldr	x1, [x0, #24]
    772c:	ldrsw	x0, [sp, #32]
    7730:	lsl	x0, x0, #3
    7734:	add	x0, x1, x0
    7738:	str	x0, [sp, #40]
    773c:	ldr	x0, [sp, #24]
    7740:	ldr	x0, [x0]
    7744:	str	x0, [sp, #48]
    7748:	ldr	x1, [sp, #48]
    774c:	ldr	x0, [sp, #40]
    7750:	sub	x0, x1, x0
    7754:	asr	x0, x0, #3
    7758:	str	w0, [sp, #36]
    775c:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7760:	add	x0, x0, #0x690
    7764:	str	x0, [sp, #56]
    7768:	adrp	x0, 2000 <constant+0xd0>
    776c:	add	x2, x0, #0x4b4
    7770:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7774:	add	x1, x0, #0x698
    7778:	ldr	x0, [sp, #24]
    777c:	bl	1510 <Perl_newXS_deffile@plt>
    7780:	adrp	x0, 2000 <constant+0xd0>
    7784:	add	x2, x0, #0x860
    7788:	adrp	x0, 8000 <my_z_errmsg+0x630>
    778c:	add	x1, x0, #0x6b8
    7790:	ldr	x0, [sp, #24]
    7794:	bl	1510 <Perl_newXS_deffile@plt>
    7798:	adrp	x0, 2000 <constant+0xd0>
    779c:	add	x2, x0, #0x9d4
    77a0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    77a4:	add	x1, x0, #0x6e0
    77a8:	ldr	x0, [sp, #24]
    77ac:	bl	1510 <Perl_newXS_deffile@plt>
    77b0:	adrp	x0, 2000 <constant+0xd0>
    77b4:	add	x2, x0, #0xff4
    77b8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    77bc:	add	x1, x0, #0x700
    77c0:	ldr	x0, [sp, #24]
    77c4:	bl	1510 <Perl_newXS_deffile@plt>
    77c8:	adrp	x0, 3000 <XS_Compress__Raw__Bunzip2_new+0xc>
    77cc:	add	x2, x0, #0x6dc
    77d0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    77d4:	add	x1, x0, #0x138
    77d8:	ldr	x0, [sp, #24]
    77dc:	bl	1510 <Perl_newXS_deffile@plt>
    77e0:	adrp	x0, 3000 <XS_Compress__Raw__Bunzip2_new+0xc>
    77e4:	add	x2, x0, #0x994
    77e8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    77ec:	add	x1, x0, #0x190
    77f0:	ldr	x0, [sp, #24]
    77f4:	bl	1510 <Perl_newXS_deffile@plt>
    77f8:	adrp	x0, 3000 <XS_Compress__Raw__Bunzip2_new+0xc>
    77fc:	add	x2, x0, #0xff0
    7800:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7804:	add	x1, x0, #0x248
    7808:	ldr	x0, [sp, #24]
    780c:	bl	1510 <Perl_newXS_deffile@plt>
    7810:	adrp	x0, 4000 <XS_Compress__Raw__Bzip2_DESTROY+0x10>
    7814:	add	x2, x0, #0x194
    7818:	adrp	x0, 8000 <my_z_errmsg+0x630>
    781c:	add	x1, x0, #0x298
    7820:	ldr	x0, [sp, #24]
    7824:	bl	1510 <Perl_newXS_deffile@plt>
    7828:	adrp	x0, 4000 <XS_Compress__Raw__Bzip2_DESTROY+0x10>
    782c:	add	x2, x0, #0x68c
    7830:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7834:	add	x1, x0, #0x300
    7838:	ldr	x0, [sp, #24]
    783c:	bl	1510 <Perl_newXS_deffile@plt>
    7840:	adrp	x0, 4000 <XS_Compress__Raw__Bzip2_DESTROY+0x10>
    7844:	add	x2, x0, #0xb84
    7848:	adrp	x0, 8000 <my_z_errmsg+0x630>
    784c:	add	x1, x0, #0x360
    7850:	ldr	x0, [sp, #24]
    7854:	bl	1510 <Perl_newXS_deffile@plt>
    7858:	adrp	x0, 4000 <XS_Compress__Raw__Bzip2_DESTROY+0x10>
    785c:	add	x2, x0, #0xe88
    7860:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7864:	add	x1, x0, #0x388
    7868:	ldr	x0, [sp, #24]
    786c:	bl	1510 <Perl_newXS_deffile@plt>
    7870:	adrp	x0, 5000 <XS_Compress__Raw__Bzip2_total_out_lo32+0x178>
    7874:	add	x2, x0, #0x18c
    7878:	adrp	x0, 8000 <my_z_errmsg+0x630>
    787c:	add	x1, x0, #0x3b0
    7880:	ldr	x0, [sp, #24]
    7884:	bl	1510 <Perl_newXS_deffile@plt>
    7888:	adrp	x0, 5000 <XS_Compress__Raw__Bzip2_total_out_lo32+0x178>
    788c:	add	x2, x0, #0x48c
    7890:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7894:	add	x1, x0, #0x3d8
    7898:	ldr	x0, [sp, #24]
    789c:	bl	1510 <Perl_newXS_deffile@plt>
    78a0:	adrp	x0, 5000 <XS_Compress__Raw__Bzip2_total_out_lo32+0x178>
    78a4:	add	x2, x0, #0x78c
    78a8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    78ac:	add	x1, x0, #0x418
    78b0:	ldr	x0, [sp, #24]
    78b4:	bl	1510 <Perl_newXS_deffile@plt>
    78b8:	adrp	x0, 5000 <XS_Compress__Raw__Bzip2_total_out_lo32+0x178>
    78bc:	add	x2, x0, #0xa44
    78c0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    78c4:	add	x1, x0, #0x440
    78c8:	ldr	x0, [sp, #24]
    78cc:	bl	1510 <Perl_newXS_deffile@plt>
    78d0:	adrp	x0, 6000 <XS_Compress__Raw__Bunzip2_bzinflate+0x5bc>
    78d4:	add	x2, x0, #0x338
    78d8:	adrp	x0, 8000 <my_z_errmsg+0x630>
    78dc:	add	x1, x0, #0x570
    78e0:	ldr	x0, [sp, #24]
    78e4:	bl	1510 <Perl_newXS_deffile@plt>
    78e8:	adrp	x0, 6000 <XS_Compress__Raw__Bunzip2_bzinflate+0x5bc>
    78ec:	add	x2, x0, #0x638
    78f0:	adrp	x0, 8000 <my_z_errmsg+0x630>
    78f4:	add	x1, x0, #0x598
    78f8:	ldr	x0, [sp, #24]
    78fc:	bl	1510 <Perl_newXS_deffile@plt>
    7900:	adrp	x0, 6000 <XS_Compress__Raw__Bunzip2_bzinflate+0x5bc>
    7904:	add	x2, x0, #0x7dc
    7908:	adrp	x0, 8000 <my_z_errmsg+0x630>
    790c:	add	x1, x0, #0x5b8
    7910:	ldr	x0, [sp, #24]
    7914:	bl	1510 <Perl_newXS_deffile@plt>
    7918:	adrp	x0, 6000 <XS_Compress__Raw__Bunzip2_bzinflate+0x5bc>
    791c:	add	x2, x0, #0xae0
    7920:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7924:	add	x1, x0, #0x5d8
    7928:	ldr	x0, [sp, #24]
    792c:	bl	1510 <Perl_newXS_deffile@plt>
    7930:	adrp	x0, 6000 <XS_Compress__Raw__Bunzip2_bzinflate+0x5bc>
    7934:	add	x2, x0, #0xde4
    7938:	adrp	x0, 8000 <my_z_errmsg+0x630>
    793c:	add	x1, x0, #0x600
    7940:	ldr	x0, [sp, #24]
    7944:	bl	1510 <Perl_newXS_deffile@plt>
    7948:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    794c:	add	x2, x0, #0xe8
    7950:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7954:	add	x1, x0, #0x628
    7958:	ldr	x0, [sp, #24]
    795c:	bl	1510 <Perl_newXS_deffile@plt>
    7960:	adrp	x0, 7000 <XS_Compress__Raw__Bunzip2_total_out_lo32+0x21c>
    7964:	add	x2, x0, #0x3e8
    7968:	adrp	x0, 8000 <my_z_errmsg+0x630>
    796c:	add	x1, x0, #0x650
    7970:	ldr	x0, [sp, #24]
    7974:	bl	1510 <Perl_newXS_deffile@plt>
    7978:	bl	1380 <BZ2_bzlibVersion@plt>
    797c:	ldrb	w0, [x0]
    7980:	cmp	w0, #0x31
    7984:	b.eq	799c <boot_Compress__Raw__Bzip2+0x2b4>  // b.none
    7988:	bl	1380 <BZ2_bzlibVersion@plt>
    798c:	mov	x1, x0
    7990:	adrp	x0, 8000 <my_z_errmsg+0x630>
    7994:	add	x0, x0, #0x720
    7998:	bl	1500 <Perl_croak_nocontext@plt>
    799c:	ldr	w1, [sp, #32]
    79a0:	ldr	x0, [sp, #24]
    79a4:	bl	1430 <Perl_xs_boot_epilog@plt>
    79a8:	nop
    79ac:	ldp	x29, x30, [sp], #64
    79b0:	ret

Disassembly of section .fini:

00000000000079b4 <_fini>:
    79b4:	stp	x29, x30, [sp, #-16]!
    79b8:	mov	x29, sp
    79bc:	ldp	x29, x30, [sp], #16
    79c0:	ret
