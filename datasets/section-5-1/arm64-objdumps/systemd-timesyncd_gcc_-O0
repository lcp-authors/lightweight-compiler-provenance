
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-timesyncd_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402588 <_init>:
  402588:	stp	x29, x30, [sp, #-16]!
  40258c:	mov	x29, sp
  402590:	bl	402c70 <call_weak_fn>
  402594:	ldp	x29, x30, [sp], #16
  402598:	ret

Disassembly of section .plt:

00000000004025a0 <.plt>:
  4025a0:	stp	x16, x30, [sp, #-16]!
  4025a4:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4025a8:	ldr	x17, [x16, #3256]
  4025ac:	add	x16, x16, #0xcb8
  4025b0:	br	x17
  4025b4:	nop
  4025b8:	nop
  4025bc:	nop

00000000004025c0 <sockaddr_equal@plt>:
  4025c0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4025c4:	ldr	x17, [x16, #3264]
  4025c8:	add	x16, x16, #0xcc0
  4025cc:	br	x17

00000000004025d0 <clock_adjtime@plt>:
  4025d0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4025d4:	ldr	x17, [x16, #3272]
  4025d8:	add	x16, x16, #0xcc8
  4025dc:	br	x17

00000000004025e0 <sd_network_monitor_unref@plt>:
  4025e0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4025e4:	ldr	x17, [x16, #3280]
  4025e8:	add	x16, x16, #0xcd0
  4025ec:	br	x17

00000000004025f0 <sd_event_source_set_time@plt>:
  4025f0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4025f4:	ldr	x17, [x16, #3288]
  4025f8:	add	x16, x16, #0xcd8
  4025fc:	br	x17

0000000000402600 <dns_name_is_valid_or_address@plt>:
  402600:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402604:	ldr	x17, [x16, #3296]
  402608:	add	x16, x16, #0xce0
  40260c:	br	x17

0000000000402610 <strcmp_ptr@plt>:
  402610:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402614:	ldr	x17, [x16, #3304]
  402618:	add	x16, x16, #0xce8
  40261c:	br	x17

0000000000402620 <sendto@plt>:
  402620:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402624:	ldr	x17, [x16, #3312]
  402628:	add	x16, x16, #0xcf0
  40262c:	br	x17

0000000000402630 <__libc_start_main@plt>:
  402630:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402634:	ldr	x17, [x16, #3320]
  402638:	add	x16, x16, #0xcf8
  40263c:	br	x17

0000000000402640 <resolve_getaddrinfo_with_destroy_callback@plt>:
  402640:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402644:	ldr	x17, [x16, #3328]
  402648:	add	x16, x16, #0xd00
  40264c:	br	x17

0000000000402650 <sd_network_monitor_flush@plt>:
  402650:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402654:	ldr	x17, [x16, #3336]
  402658:	add	x16, x16, #0xd08
  40265c:	br	x17

0000000000402660 <sd_event_set_watchdog@plt>:
  402660:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402664:	ldr	x17, [x16, #3344]
  402668:	add	x16, x16, #0xd10
  40266c:	br	x17

0000000000402670 <clock_gettime@plt>:
  402670:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402674:	ldr	x17, [x16, #3352]
  402678:	add	x16, x16, #0xd18
  40267c:	br	x17

0000000000402680 <sd_bus_request_name_async@plt>:
  402680:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402684:	ldr	x17, [x16, #3360]
  402688:	add	x16, x16, #0xd20
  40268c:	br	x17

0000000000402690 <config_parse_sec@plt>:
  402690:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402694:	ldr	x17, [x16, #3368]
  402698:	add	x16, x16, #0xd28
  40269c:	br	x17

00000000004026a0 <__gmon_start__@plt>:
  4026a0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026a4:	ldr	x17, [x16, #3376]
  4026a8:	add	x16, x16, #0xd30
  4026ac:	br	x17

00000000004026b0 <bus_open_system_watch_bind_with_description@plt>:
  4026b0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026b4:	ldr	x17, [x16, #3384]
  4026b8:	add	x16, x16, #0xd38
  4026bc:	br	x17

00000000004026c0 <polkit_agent_close@plt>:
  4026c0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026c4:	ldr	x17, [x16, #3392]
  4026c8:	add	x16, x16, #0xd40
  4026cc:	br	x17

00000000004026d0 <sd_event_default@plt>:
  4026d0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026d4:	ldr	x17, [x16, #3400]
  4026d8:	add	x16, x16, #0xd48
  4026dc:	br	x17

00000000004026e0 <fchmod_and_chown@plt>:
  4026e0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026e4:	ldr	x17, [x16, #3408]
  4026e8:	add	x16, x16, #0xd50
  4026ec:	br	x17

00000000004026f0 <socket@plt>:
  4026f0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4026f4:	ldr	x17, [x16, #3416]
  4026f8:	add	x16, x16, #0xd58
  4026fc:	br	x17

0000000000402700 <sd_bus_message_open_container@plt>:
  402700:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402704:	ldr	x17, [x16, #3424]
  402708:	add	x16, x16, #0xd60
  40270c:	br	x17

0000000000402710 <sd_bus_message_append_array@plt>:
  402710:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402714:	ldr	x17, [x16, #3432]
  402718:	add	x16, x16, #0xd68
  40271c:	br	x17

0000000000402720 <getpid_cached@plt>:
  402720:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402724:	ldr	x17, [x16, #3440]
  402728:	add	x16, x16, #0xd70
  40272c:	br	x17

0000000000402730 <sd_event_add_time@plt>:
  402730:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402734:	ldr	x17, [x16, #3448]
  402738:	add	x16, x16, #0xd78
  40273c:	br	x17

0000000000402740 <__cmsg_nxthdr@plt>:
  402740:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402744:	ldr	x17, [x16, #3456]
  402748:	add	x16, x16, #0xd80
  40274c:	br	x17

0000000000402750 <memcpy@plt>:
  402750:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402754:	ldr	x17, [x16, #3464]
  402758:	add	x16, x16, #0xd88
  40275c:	br	x17

0000000000402760 <network_is_online@plt>:
  402760:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402764:	ldr	x17, [x16, #3472]
  402768:	add	x16, x16, #0xd90
  40276c:	br	x17

0000000000402770 <timespec_store@plt>:
  402770:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402774:	ldr	x17, [x16, #3480]
  402778:	add	x16, x16, #0xd98
  40277c:	br	x17

0000000000402780 <sd_network_monitor_get_events@plt>:
  402780:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402784:	ldr	x17, [x16, #3488]
  402788:	add	x16, x16, #0xda0
  40278c:	br	x17

0000000000402790 <sd_event_source_unref@plt>:
  402790:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402794:	ldr	x17, [x16, #3496]
  402798:	add	x16, x16, #0xda8
  40279c:	br	x17

00000000004027a0 <sd_bus_message_append@plt>:
  4027a0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027a4:	ldr	x17, [x16, #3504]
  4027a8:	add	x16, x16, #0xdb0
  4027ac:	br	x17

00000000004027b0 <log_setup_service@plt>:
  4027b0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027b4:	ldr	x17, [x16, #3512]
  4027b8:	add	x16, x16, #0xdb8
  4027bc:	br	x17

00000000004027c0 <safe_close@plt>:
  4027c0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027c4:	ldr	x17, [x16, #3520]
  4027c8:	add	x16, x16, #0xdc0
  4027cc:	br	x17

00000000004027d0 <config_item_perf_lookup@plt>:
  4027d0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027d4:	ldr	x17, [x16, #3528]
  4027d8:	add	x16, x16, #0xdc8
  4027dc:	br	x17

00000000004027e0 <clock_boottime_or_monotonic@plt>:
  4027e0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027e4:	ldr	x17, [x16, #3536]
  4027e8:	add	x16, x16, #0xdd0
  4027ec:	br	x17

00000000004027f0 <log_assert_failed_realm@plt>:
  4027f0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4027f4:	ldr	x17, [x16, #3544]
  4027f8:	add	x16, x16, #0xdd8
  4027fc:	br	x17

0000000000402800 <time_change_fd@plt>:
  402800:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402804:	ldr	x17, [x16, #3552]
  402808:	add	x16, x16, #0xde0
  40280c:	br	x17

0000000000402810 <log_assert_failed_unreachable_realm@plt>:
  402810:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402814:	ldr	x17, [x16, #3560]
  402818:	add	x16, x16, #0xde8
  40281c:	br	x17

0000000000402820 <sd_event_source_set_enabled@plt>:
  402820:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402824:	ldr	x17, [x16, #3568]
  402828:	add	x16, x16, #0xdf0
  40282c:	br	x17

0000000000402830 <umask@plt>:
  402830:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402834:	ldr	x17, [x16, #3576]
  402838:	add	x16, x16, #0xdf8
  40283c:	br	x17

0000000000402840 <sd_bus_attach_event@plt>:
  402840:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402844:	ldr	x17, [x16, #3584]
  402848:	add	x16, x16, #0xe00
  40284c:	br	x17

0000000000402850 <touch_file@plt>:
  402850:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402854:	ldr	x17, [x16, #3592]
  402858:	add	x16, x16, #0xe08
  40285c:	br	x17

0000000000402860 <sigprocmask_many@plt>:
  402860:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402864:	ldr	x17, [x16, #3600]
  402868:	add	x16, x16, #0xe10
  40286c:	br	x17

0000000000402870 <abort@plt>:
  402870:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402874:	ldr	x17, [x16, #3608]
  402878:	add	x16, x16, #0xe18
  40287c:	br	x17

0000000000402880 <__fxstat64@plt>:
  402880:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402884:	ldr	x17, [x16, #3616]
  402888:	add	x16, x16, #0xe20
  40288c:	br	x17

0000000000402890 <format_timestamp@plt>:
  402890:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402894:	ldr	x17, [x16, #3624]
  402898:	add	x16, x16, #0xe28
  40289c:	br	x17

00000000004028a0 <sd_network_monitor_get_fd@plt>:
  4028a0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028a4:	ldr	x17, [x16, #3632]
  4028a8:	add	x16, x16, #0xe30
  4028ac:	br	x17

00000000004028b0 <touch@plt>:
  4028b0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028b4:	ldr	x17, [x16, #3640]
  4028b8:	add	x16, x16, #0xe38
  4028bc:	br	x17

00000000004028c0 <__errno_location@plt>:
  4028c0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028c4:	ldr	x17, [x16, #3648]
  4028c8:	add	x16, x16, #0xe40
  4028cc:	br	x17

00000000004028d0 <sd_notifyf@plt>:
  4028d0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028d4:	ldr	x17, [x16, #3656]
  4028d8:	add	x16, x16, #0xe48
  4028dc:	br	x17

00000000004028e0 <strv_free@plt>:
  4028e0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028e4:	ldr	x17, [x16, #3664]
  4028e8:	add	x16, x16, #0xe50
  4028ec:	br	x17

00000000004028f0 <clock_is_localtime@plt>:
  4028f0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4028f4:	ldr	x17, [x16, #3672]
  4028f8:	add	x16, x16, #0xe58
  4028fc:	br	x17

0000000000402900 <sd_resolve_unref@plt>:
  402900:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402904:	ldr	x17, [x16, #3680]
  402908:	add	x16, x16, #0xe60
  40290c:	br	x17

0000000000402910 <sd_bus_add_object_vtable@plt>:
  402910:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402914:	ldr	x17, [x16, #3688]
  402918:	add	x16, x16, #0xe68
  40291c:	br	x17

0000000000402920 <mkdir_safe_label@plt>:
  402920:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402924:	ldr	x17, [x16, #3696]
  402928:	add	x16, x16, #0xe70
  40292c:	br	x17

0000000000402930 <__stack_chk_fail@plt>:
  402930:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402934:	ldr	x17, [x16, #3704]
  402938:	add	x16, x16, #0xe78
  40293c:	br	x17

0000000000402940 <exp2@plt>:
  402940:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402944:	ldr	x17, [x16, #3712]
  402948:	add	x16, x16, #0xe80
  40294c:	br	x17

0000000000402950 <ask_password_agent_close@plt>:
  402950:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402954:	ldr	x17, [x16, #3720]
  402958:	add	x16, x16, #0xe88
  40295c:	br	x17

0000000000402960 <pager_close@plt>:
  402960:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402964:	ldr	x17, [x16, #3728]
  402968:	add	x16, x16, #0xe90
  40296c:	br	x17

0000000000402970 <sd_resolve_default@plt>:
  402970:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402974:	ldr	x17, [x16, #3736]
  402978:	add	x16, x16, #0xe98
  40297c:	br	x17

0000000000402980 <gai_strerror@plt>:
  402980:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402984:	ldr	x17, [x16, #3744]
  402988:	add	x16, x16, #0xea0
  40298c:	br	x17

0000000000402990 <sd_bus_emit_properties_changed@plt>:
  402990:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402994:	ldr	x17, [x16, #3752]
  402998:	add	x16, x16, #0xea8
  40299c:	br	x17

00000000004029a0 <sd_notify@plt>:
  4029a0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029a4:	ldr	x17, [x16, #3760]
  4029a8:	add	x16, x16, #0xeb0
  4029ac:	br	x17

00000000004029b0 <sd_resolve_attach_event@plt>:
  4029b0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029b4:	ldr	x17, [x16, #3768]
  4029b8:	add	x16, x16, #0xeb8
  4029bc:	br	x17

00000000004029c0 <geteuid@plt>:
  4029c0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029c4:	ldr	x17, [x16, #3776]
  4029c8:	add	x16, x16, #0xec0
  4029cc:	br	x17

00000000004029d0 <log_internal_realm@plt>:
  4029d0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029d4:	ldr	x17, [x16, #3784]
  4029d8:	add	x16, x16, #0xec8
  4029dc:	br	x17

00000000004029e0 <bind@plt>:
  4029e0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029e4:	ldr	x17, [x16, #3792]
  4029e8:	add	x16, x16, #0xed0
  4029ec:	br	x17

00000000004029f0 <sd_bus_flush_close_unref@plt>:
  4029f0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  4029f4:	ldr	x17, [x16, #3800]
  4029f8:	add	x16, x16, #0xed8
  4029fc:	br	x17

0000000000402a00 <get_user_creds@plt>:
  402a00:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a04:	ldr	x17, [x16, #3808]
  402a08:	add	x16, x16, #0xee0
  402a0c:	br	x17

0000000000402a10 <now@plt>:
  402a10:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a14:	ldr	x17, [x16, #3816]
  402a18:	add	x16, x16, #0xee8
  402a1c:	br	x17

0000000000402a20 <__res_init@plt>:
  402a20:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a24:	ldr	x17, [x16, #3824]
  402a28:	add	x16, x16, #0xef0
  402a2c:	br	x17

0000000000402a30 <sd_event_add_io@plt>:
  402a30:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a34:	ldr	x17, [x16, #3832]
  402a38:	add	x16, x16, #0xef8
  402a3c:	br	x17

0000000000402a40 <log_syntax_internal@plt>:
  402a40:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a44:	ldr	x17, [x16, #3840]
  402a48:	add	x16, x16, #0xf00
  402a4c:	br	x17

0000000000402a50 <strcmp@plt>:
  402a50:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a54:	ldr	x17, [x16, #3848]
  402a58:	add	x16, x16, #0xf08
  402a5c:	br	x17

0000000000402a60 <sqrt@plt>:
  402a60:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a64:	ldr	x17, [x16, #3856]
  402a68:	add	x16, x16, #0xf10
  402a6c:	br	x17

0000000000402a70 <recvmsg@plt>:
  402a70:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a74:	ldr	x17, [x16, #3864]
  402a78:	add	x16, x16, #0xf18
  402a7c:	br	x17

0000000000402a80 <extract_first_word@plt>:
  402a80:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a84:	ldr	x17, [x16, #3872]
  402a88:	add	x16, x16, #0xf20
  402a8c:	br	x17

0000000000402a90 <getegid@plt>:
  402a90:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402a94:	ldr	x17, [x16, #3880]
  402a98:	add	x16, x16, #0xf28
  402a9c:	br	x17

0000000000402aa0 <clock_settime@plt>:
  402aa0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402aa4:	ldr	x17, [x16, #3888]
  402aa8:	add	x16, x16, #0xf30
  402aac:	br	x17

0000000000402ab0 <sd_event_loop@plt>:
  402ab0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402ab4:	ldr	x17, [x16, #3896]
  402ab8:	add	x16, x16, #0xf38
  402abc:	br	x17

0000000000402ac0 <strdup@plt>:
  402ac0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402ac4:	ldr	x17, [x16, #3904]
  402ac8:	add	x16, x16, #0xf40
  402acc:	br	x17

0000000000402ad0 <calloc@plt>:
  402ad0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402ad4:	ldr	x17, [x16, #3912]
  402ad8:	add	x16, x16, #0xf48
  402adc:	br	x17

0000000000402ae0 <ratelimit_below@plt>:
  402ae0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402ae4:	ldr	x17, [x16, #3920]
  402ae8:	add	x16, x16, #0xf50
  402aec:	br	x17

0000000000402af0 <setsockopt@plt>:
  402af0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402af4:	ldr	x17, [x16, #3928]
  402af8:	add	x16, x16, #0xf58
  402afc:	br	x17

0000000000402b00 <log_set_facility@plt>:
  402b00:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b04:	ldr	x17, [x16, #3936]
  402b08:	add	x16, x16, #0xf60
  402b0c:	br	x17

0000000000402b10 <timespec_load@plt>:
  402b10:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b14:	ldr	x17, [x16, #3944]
  402b18:	add	x16, x16, #0xf68
  402b1c:	br	x17

0000000000402b20 <drop_privileges@plt>:
  402b20:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b24:	ldr	x17, [x16, #3952]
  402b28:	add	x16, x16, #0xf70
  402b2c:	br	x17

0000000000402b30 <free@plt>:
  402b30:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b34:	ldr	x17, [x16, #3960]
  402b38:	add	x16, x16, #0xf78
  402b3c:	br	x17

0000000000402b40 <config_parse_many_nulstr@plt>:
  402b40:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b44:	ldr	x17, [x16, #3968]
  402b48:	add	x16, x16, #0xf80
  402b4c:	br	x17

0000000000402b50 <sd_event_unref@plt>:
  402b50:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b54:	ldr	x17, [x16, #3976]
  402b58:	add	x16, x16, #0xf88
  402b5c:	br	x17

0000000000402b60 <mac_selinux_finish@plt>:
  402b60:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b64:	ldr	x17, [x16, #3984]
  402b68:	add	x16, x16, #0xf90
  402b6c:	br	x17

0000000000402b70 <log_assert_failed_return_realm@plt>:
  402b70:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b74:	ldr	x17, [x16, #3992]
  402b78:	add	x16, x16, #0xf98
  402b7c:	br	x17

0000000000402b80 <sockaddr_pretty@plt>:
  402b80:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b84:	ldr	x17, [x16, #4000]
  402b88:	add	x16, x16, #0xfa0
  402b8c:	br	x17

0000000000402b90 <sd_event_add_signal@plt>:
  402b90:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402b94:	ldr	x17, [x16, #4008]
  402b98:	add	x16, x16, #0xfa8
  402b9c:	br	x17

0000000000402ba0 <open64@plt>:
  402ba0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402ba4:	ldr	x17, [x16, #4016]
  402ba8:	add	x16, x16, #0xfb0
  402bac:	br	x17

0000000000402bb0 <pow@plt>:
  402bb0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402bb4:	ldr	x17, [x16, #4024]
  402bb8:	add	x16, x16, #0xfb8
  402bbc:	br	x17

0000000000402bc0 <sd_network_get_ntp@plt>:
  402bc0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402bc4:	ldr	x17, [x16, #4032]
  402bc8:	add	x16, x16, #0xfc0
  402bcc:	br	x17

0000000000402bd0 <sd_network_monitor_new@plt>:
  402bd0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402bd4:	ldr	x17, [x16, #4040]
  402bd8:	add	x16, x16, #0xfc8
  402bdc:	br	x17

0000000000402be0 <log_oom_internal@plt>:
  402be0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402be4:	ldr	x17, [x16, #4048]
  402be8:	add	x16, x16, #0xfd0
  402bec:	br	x17

0000000000402bf0 <log_get_max_level_realm@plt>:
  402bf0:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402bf4:	ldr	x17, [x16, #4056]
  402bf8:	add	x16, x16, #0xfd8
  402bfc:	br	x17

0000000000402c00 <sd_bus_message_close_container@plt>:
  402c00:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402c04:	ldr	x17, [x16, #4064]
  402c08:	add	x16, x16, #0xfe0
  402c0c:	br	x17

0000000000402c10 <sd_resolve_query_unref@plt>:
  402c10:	adrp	x16, 41e000 <__FRAME_END__+0xf9cc>
  402c14:	ldr	x17, [x16, #4072]
  402c18:	add	x16, x16, #0xfe8
  402c1c:	br	x17

Disassembly of section .text:

0000000000402c20 <_start>:
  402c20:	mov	x29, #0x0                   	// #0
  402c24:	mov	x30, #0x0                   	// #0
  402c28:	mov	x5, x0
  402c2c:	ldr	x1, [sp]
  402c30:	add	x2, sp, #0x8
  402c34:	mov	x6, sp
  402c38:	movz	x0, #0x0, lsl #48
  402c3c:	movk	x0, #0x0, lsl #32
  402c40:	movk	x0, #0x40, lsl #16
  402c44:	movk	x0, #0x3d6c
  402c48:	movz	x3, #0x0, lsl #48
  402c4c:	movk	x3, #0x0, lsl #32
  402c50:	movk	x3, #0x40, lsl #16
  402c54:	movk	x3, #0xb118
  402c58:	movz	x4, #0x0, lsl #48
  402c5c:	movk	x4, #0x0, lsl #32
  402c60:	movk	x4, #0x40, lsl #16
  402c64:	movk	x4, #0xb198
  402c68:	bl	402630 <__libc_start_main@plt>
  402c6c:	bl	402870 <abort@plt>

0000000000402c70 <call_weak_fn>:
  402c70:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  402c74:	ldr	x0, [x0, #4088]
  402c78:	cbz	x0, 402c80 <call_weak_fn+0x10>
  402c7c:	b	4026a0 <__gmon_start__@plt>
  402c80:	ret

0000000000402c84 <deregister_tm_clones>:
  402c84:	stp	x29, x30, [sp, #-32]!
  402c88:	mov	x29, sp
  402c8c:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402c90:	add	x0, x0, #0x0
  402c94:	str	x0, [sp, #24]
  402c98:	ldr	x0, [sp, #24]
  402c9c:	str	x0, [sp, #24]
  402ca0:	ldr	x1, [sp, #24]
  402ca4:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402ca8:	add	x0, x0, #0x0
  402cac:	cmp	x1, x0
  402cb0:	b.eq	402cec <deregister_tm_clones+0x68>  // b.none
  402cb4:	adrp	x0, 40b000 <server_name_free+0x418>
  402cb8:	add	x0, x0, #0x1c0
  402cbc:	ldr	x0, [x0]
  402cc0:	str	x0, [sp, #16]
  402cc4:	ldr	x0, [sp, #16]
  402cc8:	str	x0, [sp, #16]
  402ccc:	ldr	x0, [sp, #16]
  402cd0:	cmp	x0, #0x0
  402cd4:	b.eq	402cf0 <deregister_tm_clones+0x6c>  // b.none
  402cd8:	ldr	x1, [sp, #16]
  402cdc:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402ce0:	add	x0, x0, #0x0
  402ce4:	blr	x1
  402ce8:	b	402cf0 <deregister_tm_clones+0x6c>
  402cec:	nop
  402cf0:	ldp	x29, x30, [sp], #32
  402cf4:	ret

0000000000402cf8 <register_tm_clones>:
  402cf8:	stp	x29, x30, [sp, #-48]!
  402cfc:	mov	x29, sp
  402d00:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402d04:	add	x0, x0, #0x0
  402d08:	str	x0, [sp, #40]
  402d0c:	ldr	x0, [sp, #40]
  402d10:	str	x0, [sp, #40]
  402d14:	ldr	x1, [sp, #40]
  402d18:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402d1c:	add	x0, x0, #0x0
  402d20:	sub	x0, x1, x0
  402d24:	asr	x0, x0, #3
  402d28:	lsr	x1, x0, #63
  402d2c:	add	x0, x1, x0
  402d30:	asr	x0, x0, #1
  402d34:	str	x0, [sp, #32]
  402d38:	ldr	x0, [sp, #32]
  402d3c:	cmp	x0, #0x0
  402d40:	b.eq	402d80 <register_tm_clones+0x88>  // b.none
  402d44:	adrp	x0, 40b000 <server_name_free+0x418>
  402d48:	add	x0, x0, #0x1c8
  402d4c:	ldr	x0, [x0]
  402d50:	str	x0, [sp, #24]
  402d54:	ldr	x0, [sp, #24]
  402d58:	str	x0, [sp, #24]
  402d5c:	ldr	x0, [sp, #24]
  402d60:	cmp	x0, #0x0
  402d64:	b.eq	402d84 <register_tm_clones+0x8c>  // b.none
  402d68:	ldr	x2, [sp, #24]
  402d6c:	ldr	x1, [sp, #32]
  402d70:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402d74:	add	x0, x0, #0x0
  402d78:	blr	x2
  402d7c:	b	402d84 <register_tm_clones+0x8c>
  402d80:	nop
  402d84:	ldp	x29, x30, [sp], #48
  402d88:	ret

0000000000402d8c <__do_global_dtors_aux>:
  402d8c:	stp	x29, x30, [sp, #-16]!
  402d90:	mov	x29, sp
  402d94:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402d98:	add	x0, x0, #0xc
  402d9c:	ldrb	w0, [x0]
  402da0:	and	x0, x0, #0xff
  402da4:	cmp	x0, #0x0
  402da8:	b.ne	402dc4 <__do_global_dtors_aux+0x38>  // b.any
  402dac:	bl	402c84 <deregister_tm_clones>
  402db0:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402db4:	add	x0, x0, #0xc
  402db8:	mov	w1, #0x1                   	// #1
  402dbc:	strb	w1, [x0]
  402dc0:	b	402dc8 <__do_global_dtors_aux+0x3c>
  402dc4:	nop
  402dc8:	ldp	x29, x30, [sp], #16
  402dcc:	ret

0000000000402dd0 <frame_dummy>:
  402dd0:	stp	x29, x30, [sp, #-16]!
  402dd4:	mov	x29, sp
  402dd8:	bl	402cf8 <register_tm_clones>
  402ddc:	nop
  402de0:	ldp	x29, x30, [sp], #16
  402de4:	ret

0000000000402de8 <timesyncd_gperf_hash>:
  402de8:	str	x19, [sp, #-16]!
  402dec:	mov	w19, w1
  402df0:	sub	w1, w19, #0x6
  402df4:	cmp	w1, #0xc
  402df8:	b.ls	402e1c <timesyncd_gperf_hash+0x34>  // b.plast
  402dfc:	add	x1, x0, #0x12
  402e00:	ldrb	w1, [x1]
  402e04:	mov	w3, w1
  402e08:	adrp	x1, 40b000 <server_name_free+0x418>
  402e0c:	add	x2, x1, #0x690
  402e10:	sxtw	x1, w3
  402e14:	ldrb	w1, [x2, x1]
  402e18:	add	w19, w19, w1
  402e1c:	add	x0, x0, #0x5
  402e20:	ldrb	w0, [x0]
  402e24:	mov	w2, w0
  402e28:	adrp	x0, 40b000 <server_name_free+0x418>
  402e2c:	add	x1, x0, #0x690
  402e30:	sxtw	x0, w2
  402e34:	ldrb	w0, [x1, x0]
  402e38:	add	w19, w19, w0
  402e3c:	nop
  402e40:	mov	w0, w19
  402e44:	ldr	x19, [sp], #16
  402e48:	ret

0000000000402e4c <timesyncd_gperf_lookup>:
  402e4c:	stp	x29, x30, [sp, #-48]!
  402e50:	mov	x29, sp
  402e54:	stp	x19, x20, [sp, #16]
  402e58:	str	x21, [sp, #32]
  402e5c:	mov	x20, x0
  402e60:	mov	x0, x1
  402e64:	cmp	x0, #0x17
  402e68:	b.hi	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.pmore
  402e6c:	cmp	x0, #0x7
  402e70:	b.ls	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.plast
  402e74:	mov	x1, x0
  402e78:	mov	x0, x20
  402e7c:	bl	402de8 <timesyncd_gperf_hash>
  402e80:	mov	w21, w0
  402e84:	cmp	w21, #0x21
  402e88:	b.hi	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.pmore
  402e8c:	adrp	x0, 40b000 <server_name_free+0x418>
  402e90:	add	x1, x0, #0x250
  402e94:	mov	w0, w21
  402e98:	lsl	x0, x0, #5
  402e9c:	add	x0, x1, x0
  402ea0:	ldr	x19, [x0]
  402ea4:	cmp	x19, #0x0
  402ea8:	b.eq	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.none
  402eac:	ldrb	w1, [x20]
  402eb0:	ldrb	w0, [x19]
  402eb4:	cmp	w1, w0
  402eb8:	b.ne	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.any
  402ebc:	add	x0, x20, #0x1
  402ec0:	add	x1, x19, #0x1
  402ec4:	bl	402a50 <strcmp@plt>
  402ec8:	cmp	w0, #0x0
  402ecc:	b.ne	402ee8 <timesyncd_gperf_lookup+0x9c>  // b.any
  402ed0:	mov	w0, w21
  402ed4:	lsl	x1, x0, #5
  402ed8:	adrp	x0, 40b000 <server_name_free+0x418>
  402edc:	add	x0, x0, #0x250
  402ee0:	add	x0, x1, x0
  402ee4:	b	402eec <timesyncd_gperf_lookup+0xa0>
  402ee8:	mov	x0, #0x0                   	// #0
  402eec:	ldp	x19, x20, [sp, #16]
  402ef0:	ldr	x21, [sp, #32]
  402ef4:	ldp	x29, x30, [sp], #48
  402ef8:	ret

0000000000402efc <ALIGN_TO>:
  402efc:	sub	sp, sp, #0x10
  402f00:	str	x0, [sp, #8]
  402f04:	str	x1, [sp]
  402f08:	ldr	x1, [sp, #8]
  402f0c:	ldr	x0, [sp]
  402f10:	add	x0, x1, x0
  402f14:	sub	x1, x0, #0x1
  402f18:	ldr	x0, [sp]
  402f1c:	neg	x0, x0
  402f20:	and	x0, x1, x0
  402f24:	add	sp, sp, #0x10
  402f28:	ret

0000000000402f2c <save_argc_argv>:
  402f2c:	sub	sp, sp, #0x10
  402f30:	str	w0, [sp, #12]
  402f34:	str	x1, [sp]
  402f38:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402f3c:	add	x0, x0, #0x8
  402f40:	ldr	w1, [sp, #12]
  402f44:	str	w1, [x0]
  402f48:	adrp	x0, 41f000 <saved_argv@@SD_SHARED>
  402f4c:	add	x0, x0, #0x0
  402f50:	ldr	x1, [sp]
  402f54:	str	x1, [x0]
  402f58:	nop
  402f5c:	add	sp, sp, #0x10
  402f60:	ret

0000000000402f64 <notify_start>:
  402f64:	stp	x29, x30, [sp, #-32]!
  402f68:	mov	x29, sp
  402f6c:	str	x0, [sp, #24]
  402f70:	str	x1, [sp, #16]
  402f74:	ldr	x0, [sp, #24]
  402f78:	cmp	x0, #0x0
  402f7c:	b.eq	402f8c <notify_start+0x28>  // b.none
  402f80:	ldr	x1, [sp, #24]
  402f84:	mov	w0, #0x0                   	// #0
  402f88:	bl	4029a0 <sd_notify@plt>
  402f8c:	ldr	x0, [sp, #16]
  402f90:	ldp	x29, x30, [sp], #32
  402f94:	ret

0000000000402f98 <notify_on_cleanup>:
  402f98:	stp	x29, x30, [sp, #-32]!
  402f9c:	mov	x29, sp
  402fa0:	str	x0, [sp, #24]
  402fa4:	ldr	x0, [sp, #24]
  402fa8:	cmp	x0, #0x0
  402fac:	b.eq	402fc4 <notify_on_cleanup+0x2c>  // b.none
  402fb0:	ldr	x0, [sp, #24]
  402fb4:	ldr	x0, [x0]
  402fb8:	mov	x1, x0
  402fbc:	mov	w0, #0x0                   	// #0
  402fc0:	bl	4029a0 <sd_notify@plt>
  402fc4:	nop
  402fc8:	ldp	x29, x30, [sp], #32
  402fcc:	ret

0000000000402fd0 <closep>:
  402fd0:	stp	x29, x30, [sp, #-32]!
  402fd4:	mov	x29, sp
  402fd8:	str	x0, [sp, #24]
  402fdc:	ldr	x0, [sp, #24]
  402fe0:	ldr	w0, [x0]
  402fe4:	bl	4027c0 <safe_close@plt>
  402fe8:	nop
  402fec:	ldp	x29, x30, [sp], #32
  402ff0:	ret

0000000000402ff4 <static_destruct>:
  402ff4:	stp	x29, x30, [sp, #-32]!
  402ff8:	mov	x29, sp
  402ffc:	adrp	x0, 40b000 <server_name_free+0x418>
  403000:	add	x0, x0, #0xbf8
  403004:	ldr	x0, [x0]
  403008:	cmp	x0, #0x0
  40300c:	b.eq	403070 <static_destruct+0x7c>  // b.none
  403010:	adrp	x0, 40b000 <server_name_free+0x418>
  403014:	add	x0, x0, #0xbf8
  403018:	ldr	x0, [x0]
  40301c:	mov	x1, #0x8                   	// #8
  403020:	bl	402efc <ALIGN_TO>
  403024:	str	x0, [sp, #24]
  403028:	b	403054 <static_destruct+0x60>
  40302c:	ldr	x0, [sp, #24]
  403030:	ldr	x1, [x0, #8]
  403034:	ldr	x0, [sp, #24]
  403038:	ldr	x0, [x0]
  40303c:	blr	x1
  403040:	ldr	x0, [sp, #24]
  403044:	add	x0, x0, #0x10
  403048:	mov	x1, #0x8                   	// #8
  40304c:	bl	402efc <ALIGN_TO>
  403050:	str	x0, [sp, #24]
  403054:	ldr	x1, [sp, #24]
  403058:	adrp	x0, 40b000 <server_name_free+0x418>
  40305c:	add	x0, x0, #0xc00
  403060:	ldr	x0, [x0]
  403064:	cmp	x1, x0
  403068:	b.cc	40302c <static_destruct+0x38>  // b.lo, b.ul, b.last
  40306c:	b	403074 <static_destruct+0x80>
  403070:	nop
  403074:	ldp	x29, x30, [sp], #32
  403078:	ret

000000000040307c <manager_freep>:
  40307c:	stp	x29, x30, [sp, #-32]!
  403080:	mov	x29, sp
  403084:	str	x0, [sp, #24]
  403088:	ldr	x0, [sp, #24]
  40308c:	ldr	x0, [x0]
  403090:	cmp	x0, #0x0
  403094:	b.eq	4030a4 <manager_freep+0x28>  // b.none
  403098:	ldr	x0, [sp, #24]
  40309c:	ldr	x0, [x0]
  4030a0:	bl	4095fc <manager_free>
  4030a4:	nop
  4030a8:	ldp	x29, x30, [sp], #32
  4030ac:	ret

00000000004030b0 <load_clock_timestamp>:
  4030b0:	stp	x29, x30, [sp, #-336]!
  4030b4:	mov	x29, sp
  4030b8:	stp	x19, x20, [sp, #16]
  4030bc:	str	w0, [sp, #44]
  4030c0:	str	w1, [sp, #40]
  4030c4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4030c8:	add	x0, x0, #0xa48
  4030cc:	ldr	x1, [x0]
  4030d0:	str	x1, [sp, #328]
  4030d4:	mov	x1, #0x0                   	// #0
  4030d8:	mov	w0, #0xffffffff            	// #-1
  4030dc:	str	w0, [sp, #52]
  4030e0:	mov	x0, #0x5100                	// #20736
  4030e4:	movk	x0, #0xc707, lsl #16
  4030e8:	movk	x0, #0x987e, lsl #32
  4030ec:	movk	x0, #0x5, lsl #48
  4030f0:	str	x0, [sp, #120]
  4030f4:	mov	w2, #0x1a4                 	// #420
  4030f8:	mov	w1, #0x2                   	// #2
  4030fc:	movk	w1, #0x8, lsl #16
  403100:	adrp	x0, 40b000 <server_name_free+0x418>
  403104:	add	x0, x0, #0x790
  403108:	bl	402ba0 <open64@plt>
  40310c:	str	w0, [sp, #52]
  403110:	ldr	w0, [sp, #52]
  403114:	cmp	w0, #0x0
  403118:	b.lt	403214 <load_clock_timestamp+0x164>  // b.tstop
  40311c:	ldr	w0, [sp, #52]
  403120:	add	x1, sp, #0xa0
  403124:	bl	40b1a0 <fstat64>
  403128:	str	w0, [sp, #56]
  40312c:	ldr	w0, [sp, #56]
  403130:	cmp	w0, #0x0
  403134:	b.lt	403160 <load_clock_timestamp+0xb0>  // b.tstop
  403138:	add	x0, sp, #0xa0
  40313c:	add	x0, x0, #0x58
  403140:	bl	402b10 <timespec_load@plt>
  403144:	str	x0, [sp, #128]
  403148:	ldr	x1, [sp, #128]
  40314c:	ldr	x0, [sp, #120]
  403150:	cmp	x1, x0
  403154:	b.ls	403160 <load_clock_timestamp+0xb0>  // b.plast
  403158:	ldr	x0, [sp, #128]
  40315c:	str	x0, [sp, #120]
  403160:	bl	4029c0 <geteuid@plt>
  403164:	cmp	w0, #0x0
  403168:	b.ne	403374 <load_clock_timestamp+0x2c4>  // b.any
  40316c:	ldr	w0, [sp, #52]
  403170:	ldr	w3, [sp, #40]
  403174:	ldr	w2, [sp, #44]
  403178:	mov	w1, #0x1a4                 	// #420
  40317c:	bl	4026e0 <fchmod_and_chown@plt>
  403180:	str	w0, [sp, #56]
  403184:	ldr	w0, [sp, #56]
  403188:	cmp	w0, #0x0
  40318c:	b.ge	403374 <load_clock_timestamp+0x2c4>  // b.tcont
  403190:	mov	w0, #0x4                   	// #4
  403194:	str	w0, [sp, #84]
  403198:	ldr	w0, [sp, #56]
  40319c:	str	w0, [sp, #88]
  4031a0:	str	wzr, [sp, #92]
  4031a4:	ldr	w0, [sp, #92]
  4031a8:	bl	402bf0 <log_get_max_level_realm@plt>
  4031ac:	mov	w1, w0
  4031b0:	ldr	w0, [sp, #84]
  4031b4:	and	w0, w0, #0x7
  4031b8:	cmp	w1, w0
  4031bc:	b.lt	403208 <load_clock_timestamp+0x158>  // b.tstop
  4031c0:	ldr	w0, [sp, #92]
  4031c4:	lsl	w1, w0, #10
  4031c8:	ldr	w0, [sp, #84]
  4031cc:	orr	w7, w1, w0
  4031d0:	adrp	x0, 40b000 <server_name_free+0x418>
  4031d4:	add	x1, x0, #0x7b3
  4031d8:	adrp	x0, 40b000 <server_name_free+0x418>
  4031dc:	add	x6, x0, #0x790
  4031e0:	adrp	x0, 40b000 <server_name_free+0x418>
  4031e4:	add	x5, x0, #0x7d0
  4031e8:	adrp	x0, 40b000 <server_name_free+0x418>
  4031ec:	add	x4, x0, #0xc08
  4031f0:	mov	w3, #0x3a                  	// #58
  4031f4:	mov	x2, x1
  4031f8:	ldr	w1, [sp, #88]
  4031fc:	mov	w0, w7
  403200:	bl	4029d0 <log_internal_realm@plt>
  403204:	b	403374 <load_clock_timestamp+0x2c4>
  403208:	ldr	w0, [sp, #88]
  40320c:	cmp	w0, #0x0
  403210:	b	403374 <load_clock_timestamp+0x2c4>
  403214:	mov	w4, #0x3                   	// #3
  403218:	ldr	w3, [sp, #40]
  40321c:	ldr	w2, [sp, #44]
  403220:	mov	w1, #0x1ed                 	// #493
  403224:	adrp	x0, 40b000 <server_name_free+0x418>
  403228:	add	x0, x0, #0x800
  40322c:	bl	402920 <mkdir_safe_label@plt>
  403230:	str	w0, [sp, #56]
  403234:	ldr	w0, [sp, #56]
  403238:	cmp	w0, #0x0
  40323c:	b.ge	4032bc <load_clock_timestamp+0x20c>  // b.tcont
  403240:	mov	w0, #0x7                   	// #7
  403244:	str	w0, [sp, #72]
  403248:	ldr	w0, [sp, #56]
  40324c:	str	w0, [sp, #76]
  403250:	str	wzr, [sp, #80]
  403254:	ldr	w0, [sp, #80]
  403258:	bl	402bf0 <log_get_max_level_realm@plt>
  40325c:	mov	w1, w0
  403260:	ldr	w0, [sp, #72]
  403264:	and	w0, w0, #0x7
  403268:	cmp	w1, w0
  40326c:	b.lt	4032b0 <load_clock_timestamp+0x200>  // b.tstop
  403270:	ldr	w0, [sp, #80]
  403274:	lsl	w1, w0, #10
  403278:	ldr	w0, [sp, #72]
  40327c:	orr	w6, w1, w0
  403280:	adrp	x0, 40b000 <server_name_free+0x418>
  403284:	add	x1, x0, #0x7b3
  403288:	adrp	x0, 40b000 <server_name_free+0x418>
  40328c:	add	x5, x0, #0x820
  403290:	adrp	x0, 40b000 <server_name_free+0x418>
  403294:	add	x4, x0, #0xc08
  403298:	mov	w3, #0x41                  	// #65
  40329c:	mov	x2, x1
  4032a0:	ldr	w1, [sp, #76]
  4032a4:	mov	w0, w6
  4032a8:	bl	4029d0 <log_internal_realm@plt>
  4032ac:	b	403374 <load_clock_timestamp+0x2c4>
  4032b0:	ldr	w0, [sp, #76]
  4032b4:	cmp	w0, #0x0
  4032b8:	b	403374 <load_clock_timestamp+0x2c4>
  4032bc:	mov	w5, #0x1a4                 	// #420
  4032c0:	ldr	w4, [sp, #40]
  4032c4:	ldr	w3, [sp, #44]
  4032c8:	ldr	x2, [sp, #120]
  4032cc:	mov	w1, #0x0                   	// #0
  4032d0:	adrp	x0, 40b000 <server_name_free+0x418>
  4032d4:	add	x0, x0, #0x790
  4032d8:	bl	402850 <touch_file@plt>
  4032dc:	str	w0, [sp, #56]
  4032e0:	ldr	w0, [sp, #56]
  4032e4:	cmp	w0, #0x0
  4032e8:	b.ge	403370 <load_clock_timestamp+0x2c0>  // b.tcont
  4032ec:	mov	w0, #0x7                   	// #7
  4032f0:	str	w0, [sp, #60]
  4032f4:	ldr	w0, [sp, #56]
  4032f8:	str	w0, [sp, #64]
  4032fc:	str	wzr, [sp, #68]
  403300:	ldr	w0, [sp, #68]
  403304:	bl	402bf0 <log_get_max_level_realm@plt>
  403308:	mov	w1, w0
  40330c:	ldr	w0, [sp, #60]
  403310:	and	w0, w0, #0x7
  403314:	cmp	w1, w0
  403318:	b.lt	403364 <load_clock_timestamp+0x2b4>  // b.tstop
  40331c:	ldr	w0, [sp, #68]
  403320:	lsl	w1, w0, #10
  403324:	ldr	w0, [sp, #60]
  403328:	orr	w7, w1, w0
  40332c:	adrp	x0, 40b000 <server_name_free+0x418>
  403330:	add	x1, x0, #0x7b3
  403334:	adrp	x0, 40b000 <server_name_free+0x418>
  403338:	add	x6, x0, #0x790
  40333c:	adrp	x0, 40b000 <server_name_free+0x418>
  403340:	add	x5, x0, #0x850
  403344:	adrp	x0, 40b000 <server_name_free+0x418>
  403348:	add	x4, x0, #0xc08
  40334c:	mov	w3, #0x48                  	// #72
  403350:	mov	x2, x1
  403354:	ldr	w1, [sp, #64]
  403358:	mov	w0, w7
  40335c:	bl	4029d0 <log_internal_realm@plt>
  403360:	b	403374 <load_clock_timestamp+0x2c4>
  403364:	ldr	w0, [sp, #64]
  403368:	cmp	w0, #0x0
  40336c:	b	403374 <load_clock_timestamp+0x2c4>
  403370:	nop
  403374:	mov	w0, #0x0                   	// #0
  403378:	bl	402a10 <now@plt>
  40337c:	str	x0, [sp, #136]
  403380:	ldr	x1, [sp, #136]
  403384:	ldr	x0, [sp, #120]
  403388:	cmp	x1, x0
  40338c:	b.cs	4034b4 <load_clock_timestamp+0x404>  // b.hs, b.nlast
  403390:	mov	w0, #0x6                   	// #6
  403394:	str	w0, [sp, #96]
  403398:	str	wzr, [sp, #100]
  40339c:	str	wzr, [sp, #104]
  4033a0:	ldr	w0, [sp, #104]
  4033a4:	bl	402bf0 <log_get_max_level_realm@plt>
  4033a8:	mov	w1, w0
  4033ac:	ldr	w0, [sp, #96]
  4033b0:	and	w0, w0, #0x7
  4033b4:	cmp	w1, w0
  4033b8:	b.lt	403410 <load_clock_timestamp+0x360>  // b.tstop
  4033bc:	ldr	w0, [sp, #104]
  4033c0:	lsl	w1, w0, #10
  4033c4:	ldr	w0, [sp, #96]
  4033c8:	orr	w19, w1, w0
  4033cc:	adrp	x0, 40b000 <server_name_free+0x418>
  4033d0:	add	x20, x0, #0x7b3
  4033d4:	add	x0, sp, #0x120
  4033d8:	ldr	x2, [sp, #120]
  4033dc:	mov	x1, #0x26                  	// #38
  4033e0:	bl	402890 <format_timestamp@plt>
  4033e4:	mov	x6, x0
  4033e8:	adrp	x0, 40b000 <server_name_free+0x418>
  4033ec:	add	x5, x0, #0x878
  4033f0:	adrp	x0, 40b000 <server_name_free+0x418>
  4033f4:	add	x4, x0, #0xc08
  4033f8:	mov	w3, #0x51                  	// #81
  4033fc:	mov	x2, x20
  403400:	ldr	w1, [sp, #100]
  403404:	mov	w0, w19
  403408:	bl	4029d0 <log_internal_realm@plt>
  40340c:	b	403418 <load_clock_timestamp+0x368>
  403410:	ldr	w0, [sp, #100]
  403414:	cmp	w0, #0x0
  403418:	add	x0, sp, #0x90
  40341c:	ldr	x1, [sp, #120]
  403420:	bl	402770 <timespec_store@plt>
  403424:	mov	x1, x0
  403428:	mov	w0, #0x0                   	// #0
  40342c:	bl	402aa0 <clock_settime@plt>
  403430:	cmp	w0, #0x0
  403434:	b.ge	4034b4 <load_clock_timestamp+0x404>  // b.tcont
  403438:	mov	w0, #0x3                   	// #3
  40343c:	str	w0, [sp, #108]
  403440:	bl	4028c0 <__errno_location@plt>
  403444:	ldr	w0, [x0]
  403448:	str	w0, [sp, #112]
  40344c:	str	wzr, [sp, #116]
  403450:	ldr	w0, [sp, #116]
  403454:	bl	402bf0 <log_get_max_level_realm@plt>
  403458:	mov	w1, w0
  40345c:	ldr	w0, [sp, #108]
  403460:	and	w0, w0, #0x7
  403464:	cmp	w1, w0
  403468:	b.lt	4034ac <load_clock_timestamp+0x3fc>  // b.tstop
  40346c:	ldr	w0, [sp, #116]
  403470:	lsl	w1, w0, #10
  403474:	ldr	w0, [sp, #108]
  403478:	orr	w6, w1, w0
  40347c:	adrp	x0, 40b000 <server_name_free+0x418>
  403480:	add	x1, x0, #0x7b3
  403484:	adrp	x0, 40b000 <server_name_free+0x418>
  403488:	add	x5, x0, #0x8d0
  40348c:	adrp	x0, 40b000 <server_name_free+0x418>
  403490:	add	x4, x0, #0xc08
  403494:	mov	w3, #0x55                  	// #85
  403498:	mov	x2, x1
  40349c:	ldr	w1, [sp, #112]
  4034a0:	mov	w0, w6
  4034a4:	bl	4029d0 <log_internal_realm@plt>
  4034a8:	b	4034b4 <load_clock_timestamp+0x404>
  4034ac:	ldr	w0, [sp, #112]
  4034b0:	cmp	w0, #0x0
  4034b4:	mov	w19, #0x0                   	// #0
  4034b8:	add	x0, sp, #0x34
  4034bc:	bl	402fd0 <closep>
  4034c0:	mov	w1, w19
  4034c4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4034c8:	add	x0, x0, #0xa48
  4034cc:	ldr	x2, [sp, #328]
  4034d0:	ldr	x0, [x0]
  4034d4:	eor	x0, x2, x0
  4034d8:	cmp	x0, #0x0
  4034dc:	b.eq	4034e4 <load_clock_timestamp+0x434>  // b.none
  4034e0:	bl	402930 <__stack_chk_fail@plt>
  4034e4:	mov	w0, w1
  4034e8:	ldp	x19, x20, [sp, #16]
  4034ec:	ldp	x29, x30, [sp], #336
  4034f0:	ret

00000000004034f4 <run>:
  4034f4:	stp	x29, x30, [sp, #-240]!
  4034f8:	mov	x29, sp
  4034fc:	stp	x19, x20, [sp, #16]
  403500:	str	w0, [sp, #44]
  403504:	str	x1, [sp, #32]
  403508:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  40350c:	add	x0, x0, #0xa48
  403510:	ldr	x1, [x0]
  403514:	str	x1, [sp, #232]
  403518:	mov	x1, #0x0                   	// #0
  40351c:	str	xzr, [sp, #208]
  403520:	str	xzr, [sp, #216]
  403524:	adrp	x0, 40b000 <server_name_free+0x418>
  403528:	add	x0, x0, #0x900
  40352c:	str	x0, [sp, #224]
  403530:	mov	w0, #0x48                  	// #72
  403534:	bl	402b00 <log_set_facility@plt>
  403538:	bl	4027b0 <log_setup_service@plt>
  40353c:	mov	w0, #0x12                  	// #18
  403540:	bl	402830 <umask@plt>
  403544:	ldr	w0, [sp, #44]
  403548:	cmp	w0, #0x1
  40354c:	b.eq	4035e0 <run+0xec>  // b.none
  403550:	mov	w0, #0x3                   	// #3
  403554:	str	w0, [sp, #196]
  403558:	mov	w0, #0x16                  	// #22
  40355c:	movk	w0, #0x4000, lsl #16
  403560:	str	w0, [sp, #200]
  403564:	str	wzr, [sp, #204]
  403568:	ldr	w0, [sp, #204]
  40356c:	bl	402bf0 <log_get_max_level_realm@plt>
  403570:	mov	w1, w0
  403574:	ldr	w0, [sp, #196]
  403578:	and	w0, w0, #0x7
  40357c:	cmp	w1, w0
  403580:	b.lt	4035c8 <run+0xd4>  // b.tstop
  403584:	ldr	w0, [sp, #204]
  403588:	lsl	w1, w0, #10
  40358c:	ldr	w0, [sp, #196]
  403590:	orr	w6, w1, w0
  403594:	adrp	x0, 40b000 <server_name_free+0x418>
  403598:	add	x1, x0, #0x7b3
  40359c:	adrp	x0, 40b000 <server_name_free+0x418>
  4035a0:	add	x5, x0, #0x918
  4035a4:	adrp	x0, 40b000 <server_name_free+0x418>
  4035a8:	add	x4, x0, #0xc20
  4035ac:	mov	w3, #0x69                  	// #105
  4035b0:	mov	x2, x1
  4035b4:	ldr	w1, [sp, #200]
  4035b8:	mov	w0, w6
  4035bc:	bl	4029d0 <log_internal_realm@plt>
  4035c0:	mov	w19, w0
  4035c4:	b	403d28 <run+0x834>
  4035c8:	ldr	w0, [sp, #200]
  4035cc:	cmp	w0, #0x0
  4035d0:	cneg	w0, w0, lt  // lt = tstop
  4035d4:	and	w0, w0, #0xff
  4035d8:	neg	w19, w0
  4035dc:	b	403d28 <run+0x834>
  4035e0:	bl	4029c0 <geteuid@plt>
  4035e4:	str	w0, [sp, #68]
  4035e8:	ldr	w0, [sp, #68]
  4035ec:	str	w0, [sp, #60]
  4035f0:	bl	402a90 <getegid@plt>
  4035f4:	str	w0, [sp, #64]
  4035f8:	ldr	w0, [sp, #68]
  4035fc:	cmp	w0, #0x0
  403600:	b.ne	4036c4 <run+0x1d0>  // b.any
  403604:	add	x2, sp, #0x40
  403608:	add	x1, sp, #0x3c
  40360c:	add	x0, sp, #0xe0
  403610:	mov	w5, #0x0                   	// #0
  403614:	mov	x4, #0x0                   	// #0
  403618:	mov	x3, #0x0                   	// #0
  40361c:	bl	402a00 <get_user_creds@plt>
  403620:	str	w0, [sp, #72]
  403624:	ldr	w0, [sp, #72]
  403628:	cmp	w0, #0x0
  40362c:	b.ge	4036c4 <run+0x1d0>  // b.tcont
  403630:	mov	w0, #0x3                   	// #3
  403634:	str	w0, [sp, #76]
  403638:	ldr	w0, [sp, #72]
  40363c:	str	w0, [sp, #80]
  403640:	str	wzr, [sp, #84]
  403644:	ldr	w0, [sp, #84]
  403648:	bl	402bf0 <log_get_max_level_realm@plt>
  40364c:	mov	w1, w0
  403650:	ldr	w0, [sp, #76]
  403654:	and	w0, w0, #0x7
  403658:	cmp	w1, w0
  40365c:	b.lt	4036ac <run+0x1b8>  // b.tstop
  403660:	ldr	w0, [sp, #84]
  403664:	lsl	w1, w0, #10
  403668:	ldr	w0, [sp, #76]
  40366c:	orr	w7, w1, w0
  403670:	adrp	x0, 40b000 <server_name_free+0x418>
  403674:	add	x1, x0, #0x7b3
  403678:	ldr	x0, [sp, #224]
  40367c:	mov	x6, x0
  403680:	adrp	x0, 40b000 <server_name_free+0x418>
  403684:	add	x5, x0, #0x940
  403688:	adrp	x0, 40b000 <server_name_free+0x418>
  40368c:	add	x4, x0, #0xc20
  403690:	mov	w3, #0x71                  	// #113
  403694:	mov	x2, x1
  403698:	ldr	w1, [sp, #80]
  40369c:	mov	w0, w7
  4036a0:	bl	4029d0 <log_internal_realm@plt>
  4036a4:	mov	w19, w0
  4036a8:	b	403d28 <run+0x834>
  4036ac:	ldr	w0, [sp, #80]
  4036b0:	cmp	w0, #0x0
  4036b4:	cneg	w0, w0, lt  // lt = tstop
  4036b8:	and	w0, w0, #0xff
  4036bc:	neg	w19, w0
  4036c0:	b	403d28 <run+0x834>
  4036c4:	ldr	w0, [sp, #60]
  4036c8:	ldr	w1, [sp, #64]
  4036cc:	bl	4030b0 <load_clock_timestamp>
  4036d0:	str	w0, [sp, #72]
  4036d4:	ldr	w0, [sp, #72]
  4036d8:	cmp	w0, #0x0
  4036dc:	b.ge	4036e8 <run+0x1f4>  // b.tcont
  4036e0:	ldr	w19, [sp, #72]
  4036e4:	b	403d28 <run+0x834>
  4036e8:	ldr	w0, [sp, #68]
  4036ec:	cmp	w0, #0x0
  4036f0:	b.ne	4037a0 <run+0x2ac>  // b.any
  4036f4:	ldr	w0, [sp, #60]
  4036f8:	ldr	w1, [sp, #64]
  4036fc:	mov	x2, #0x2000000             	// #33554432
  403700:	bl	402b20 <drop_privileges@plt>
  403704:	str	w0, [sp, #72]
  403708:	ldr	w0, [sp, #72]
  40370c:	cmp	w0, #0x0
  403710:	b.ge	4037a0 <run+0x2ac>  // b.tcont
  403714:	mov	w0, #0x3                   	// #3
  403718:	str	w0, [sp, #88]
  40371c:	ldr	w0, [sp, #72]
  403720:	str	w0, [sp, #92]
  403724:	str	wzr, [sp, #96]
  403728:	ldr	w0, [sp, #96]
  40372c:	bl	402bf0 <log_get_max_level_realm@plt>
  403730:	mov	w1, w0
  403734:	ldr	w0, [sp, #88]
  403738:	and	w0, w0, #0x7
  40373c:	cmp	w1, w0
  403740:	b.lt	403788 <run+0x294>  // b.tstop
  403744:	ldr	w0, [sp, #96]
  403748:	lsl	w1, w0, #10
  40374c:	ldr	w0, [sp, #88]
  403750:	orr	w6, w1, w0
  403754:	adrp	x0, 40b000 <server_name_free+0x418>
  403758:	add	x1, x0, #0x7b3
  40375c:	adrp	x0, 40b000 <server_name_free+0x418>
  403760:	add	x5, x0, #0x960
  403764:	adrp	x0, 40b000 <server_name_free+0x418>
  403768:	add	x4, x0, #0xc20
  40376c:	mov	w3, #0x7d                  	// #125
  403770:	mov	x2, x1
  403774:	ldr	w1, [sp, #92]
  403778:	mov	w0, w6
  40377c:	bl	4029d0 <log_internal_realm@plt>
  403780:	mov	w19, w0
  403784:	b	403d28 <run+0x834>
  403788:	ldr	w0, [sp, #92]
  40378c:	cmp	w0, #0x0
  403790:	cneg	w0, w0, lt  // lt = tstop
  403794:	and	w0, w0, #0xff
  403798:	neg	w19, w0
  40379c:	b	403d28 <run+0x834>
  4037a0:	mov	w4, #0xffffffff            	// #-1
  4037a4:	mov	w3, #0x2                   	// #2
  4037a8:	mov	w2, #0xf                   	// #15
  4037ac:	mov	x1, #0x0                   	// #0
  4037b0:	mov	w0, #0x0                   	// #0
  4037b4:	bl	402860 <sigprocmask_many@plt>
  4037b8:	lsr	w0, w0, #31
  4037bc:	and	w0, w0, #0xff
  4037c0:	and	x0, x0, #0xff
  4037c4:	cmp	x0, #0x0
  4037c8:	b.eq	4037f4 <run+0x300>  // b.none
  4037cc:	adrp	x0, 40b000 <server_name_free+0x418>
  4037d0:	add	x1, x0, #0x7b3
  4037d4:	adrp	x0, 40b000 <server_name_free+0x418>
  4037d8:	add	x4, x0, #0xc28
  4037dc:	mov	w3, #0x80                  	// #128
  4037e0:	mov	x2, x1
  4037e4:	adrp	x0, 40b000 <server_name_free+0x418>
  4037e8:	add	x1, x0, #0x980
  4037ec:	mov	w0, #0x0                   	// #0
  4037f0:	bl	4027f0 <log_assert_failed_realm@plt>
  4037f4:	add	x0, sp, #0xd8
  4037f8:	bl	409f08 <manager_new>
  4037fc:	str	w0, [sp, #72]
  403800:	ldr	w0, [sp, #72]
  403804:	cmp	w0, #0x0
  403808:	b.ge	403898 <run+0x3a4>  // b.tcont
  40380c:	mov	w0, #0x3                   	// #3
  403810:	str	w0, [sp, #184]
  403814:	ldr	w0, [sp, #72]
  403818:	str	w0, [sp, #188]
  40381c:	str	wzr, [sp, #192]
  403820:	ldr	w0, [sp, #192]
  403824:	bl	402bf0 <log_get_max_level_realm@plt>
  403828:	mov	w1, w0
  40382c:	ldr	w0, [sp, #184]
  403830:	and	w0, w0, #0x7
  403834:	cmp	w1, w0
  403838:	b.lt	403880 <run+0x38c>  // b.tstop
  40383c:	ldr	w0, [sp, #192]
  403840:	lsl	w1, w0, #10
  403844:	ldr	w0, [sp, #184]
  403848:	orr	w6, w1, w0
  40384c:	adrp	x0, 40b000 <server_name_free+0x418>
  403850:	add	x1, x0, #0x7b3
  403854:	adrp	x0, 40b000 <server_name_free+0x418>
  403858:	add	x5, x0, #0x9c0
  40385c:	adrp	x0, 40b000 <server_name_free+0x418>
  403860:	add	x4, x0, #0xc20
  403864:	mov	w3, #0x84                  	// #132
  403868:	mov	x2, x1
  40386c:	ldr	w1, [sp, #188]
  403870:	mov	w0, w6
  403874:	bl	4029d0 <log_internal_realm@plt>
  403878:	mov	w19, w0
  40387c:	b	403d28 <run+0x834>
  403880:	ldr	w0, [sp, #188]
  403884:	cmp	w0, #0x0
  403888:	cneg	w0, w0, lt  // lt = tstop
  40388c:	and	w0, w0, #0xff
  403890:	neg	w19, w0
  403894:	b	403d28 <run+0x834>
  403898:	ldr	x0, [sp, #216]
  40389c:	bl	404760 <manager_connect_bus>
  4038a0:	str	w0, [sp, #72]
  4038a4:	ldr	w0, [sp, #72]
  4038a8:	cmp	w0, #0x0
  4038ac:	b.ge	40393c <run+0x448>  // b.tcont
  4038b0:	mov	w0, #0x3                   	// #3
  4038b4:	str	w0, [sp, #172]
  4038b8:	ldr	w0, [sp, #72]
  4038bc:	str	w0, [sp, #176]
  4038c0:	str	wzr, [sp, #180]
  4038c4:	ldr	w0, [sp, #180]
  4038c8:	bl	402bf0 <log_get_max_level_realm@plt>
  4038cc:	mov	w1, w0
  4038d0:	ldr	w0, [sp, #172]
  4038d4:	and	w0, w0, #0x7
  4038d8:	cmp	w1, w0
  4038dc:	b.lt	403924 <run+0x430>  // b.tstop
  4038e0:	ldr	w0, [sp, #180]
  4038e4:	lsl	w1, w0, #10
  4038e8:	ldr	w0, [sp, #172]
  4038ec:	orr	w6, w1, w0
  4038f0:	adrp	x0, 40b000 <server_name_free+0x418>
  4038f4:	add	x1, x0, #0x7b3
  4038f8:	adrp	x0, 40b000 <server_name_free+0x418>
  4038fc:	add	x5, x0, #0x9e0
  403900:	adrp	x0, 40b000 <server_name_free+0x418>
  403904:	add	x4, x0, #0xc20
  403908:	mov	w3, #0x88                  	// #136
  40390c:	mov	x2, x1
  403910:	ldr	w1, [sp, #176]
  403914:	mov	w0, w6
  403918:	bl	4029d0 <log_internal_realm@plt>
  40391c:	mov	w19, w0
  403920:	b	403d28 <run+0x834>
  403924:	ldr	w0, [sp, #176]
  403928:	cmp	w0, #0x0
  40392c:	cneg	w0, w0, lt  // lt = tstop
  403930:	and	w0, w0, #0xff
  403934:	neg	w19, w0
  403938:	b	403d28 <run+0x834>
  40393c:	mov	x0, #0x0                   	// #0
  403940:	bl	4028f0 <clock_is_localtime@plt>
  403944:	cmp	w0, #0x0
  403948:	b.le	4039cc <run+0x4d8>
  40394c:	mov	w0, #0x6                   	// #6
  403950:	str	w0, [sp, #100]
  403954:	str	wzr, [sp, #104]
  403958:	str	wzr, [sp, #108]
  40395c:	ldr	w0, [sp, #108]
  403960:	bl	402bf0 <log_get_max_level_realm@plt>
  403964:	mov	w1, w0
  403968:	ldr	w0, [sp, #100]
  40396c:	and	w0, w0, #0x7
  403970:	cmp	w1, w0
  403974:	b.lt	4039b8 <run+0x4c4>  // b.tstop
  403978:	ldr	w0, [sp, #108]
  40397c:	lsl	w1, w0, #10
  403980:	ldr	w0, [sp, #100]
  403984:	orr	w6, w1, w0
  403988:	adrp	x0, 40b000 <server_name_free+0x418>
  40398c:	add	x1, x0, #0x7b3
  403990:	adrp	x0, 40b000 <server_name_free+0x418>
  403994:	add	x5, x0, #0xa00
  403998:	adrp	x0, 40b000 <server_name_free+0x418>
  40399c:	add	x4, x0, #0xc20
  4039a0:	mov	w3, #0x8b                  	// #139
  4039a4:	mov	x2, x1
  4039a8:	ldr	w1, [sp, #104]
  4039ac:	mov	w0, w6
  4039b0:	bl	4029d0 <log_internal_realm@plt>
  4039b4:	b	4039c0 <run+0x4cc>
  4039b8:	ldr	w0, [sp, #104]
  4039bc:	cmp	w0, #0x0
  4039c0:	ldr	x0, [sp, #216]
  4039c4:	mov	w1, #0x1                   	// #1
  4039c8:	strb	w1, [x0, #448]
  4039cc:	ldr	x0, [sp, #216]
  4039d0:	bl	405188 <manager_parse_config_file>
  4039d4:	str	w0, [sp, #72]
  4039d8:	ldr	w0, [sp, #72]
  4039dc:	cmp	w0, #0x0
  4039e0:	b.ge	403a5c <run+0x568>  // b.tcont
  4039e4:	mov	w0, #0x4                   	// #4
  4039e8:	str	w0, [sp, #112]
  4039ec:	ldr	w0, [sp, #72]
  4039f0:	str	w0, [sp, #116]
  4039f4:	str	wzr, [sp, #120]
  4039f8:	ldr	w0, [sp, #120]
  4039fc:	bl	402bf0 <log_get_max_level_realm@plt>
  403a00:	mov	w1, w0
  403a04:	ldr	w0, [sp, #112]
  403a08:	and	w0, w0, #0x7
  403a0c:	cmp	w1, w0
  403a10:	b.lt	403a54 <run+0x560>  // b.tstop
  403a14:	ldr	w0, [sp, #120]
  403a18:	lsl	w1, w0, #10
  403a1c:	ldr	w0, [sp, #112]
  403a20:	orr	w6, w1, w0
  403a24:	adrp	x0, 40b000 <server_name_free+0x418>
  403a28:	add	x1, x0, #0x7b3
  403a2c:	adrp	x0, 40b000 <server_name_free+0x418>
  403a30:	add	x5, x0, #0xa98
  403a34:	adrp	x0, 40b000 <server_name_free+0x418>
  403a38:	add	x4, x0, #0xc20
  403a3c:	mov	w3, #0x92                  	// #146
  403a40:	mov	x2, x1
  403a44:	ldr	w1, [sp, #116]
  403a48:	mov	w0, w6
  403a4c:	bl	4029d0 <log_internal_realm@plt>
  403a50:	b	403a5c <run+0x568>
  403a54:	ldr	w0, [sp, #116]
  403a58:	cmp	w0, #0x0
  403a5c:	ldr	x2, [sp, #216]
  403a60:	adrp	x0, 40b000 <server_name_free+0x418>
  403a64:	add	x1, x0, #0xac0
  403a68:	mov	x0, x2
  403a6c:	bl	404f60 <manager_parse_fallback_string>
  403a70:	str	w0, [sp, #72]
  403a74:	ldr	w0, [sp, #72]
  403a78:	cmp	w0, #0x0
  403a7c:	b.ge	403b0c <run+0x618>  // b.tcont
  403a80:	mov	w0, #0x3                   	// #3
  403a84:	str	w0, [sp, #160]
  403a88:	ldr	w0, [sp, #72]
  403a8c:	str	w0, [sp, #164]
  403a90:	str	wzr, [sp, #168]
  403a94:	ldr	w0, [sp, #168]
  403a98:	bl	402bf0 <log_get_max_level_realm@plt>
  403a9c:	mov	w1, w0
  403aa0:	ldr	w0, [sp, #160]
  403aa4:	and	w0, w0, #0x7
  403aa8:	cmp	w1, w0
  403aac:	b.lt	403af4 <run+0x600>  // b.tstop
  403ab0:	ldr	w0, [sp, #168]
  403ab4:	lsl	w1, w0, #10
  403ab8:	ldr	w0, [sp, #160]
  403abc:	orr	w6, w1, w0
  403ac0:	adrp	x0, 40b000 <server_name_free+0x418>
  403ac4:	add	x1, x0, #0x7b3
  403ac8:	adrp	x0, 40b000 <server_name_free+0x418>
  403acc:	add	x5, x0, #0xb08
  403ad0:	adrp	x0, 40b000 <server_name_free+0x418>
  403ad4:	add	x4, x0, #0xc20
  403ad8:	mov	w3, #0x96                  	// #150
  403adc:	mov	x2, x1
  403ae0:	ldr	w1, [sp, #164]
  403ae4:	mov	w0, w6
  403ae8:	bl	4029d0 <log_internal_realm@plt>
  403aec:	mov	w19, w0
  403af0:	b	403d28 <run+0x834>
  403af4:	ldr	w0, [sp, #164]
  403af8:	cmp	w0, #0x0
  403afc:	cneg	w0, w0, lt  // lt = tstop
  403b00:	and	w0, w0, #0xff
  403b04:	neg	w19, w0
  403b08:	b	403d28 <run+0x834>
  403b0c:	mov	w0, #0x7                   	// #7
  403b10:	str	w0, [sp, #124]
  403b14:	str	wzr, [sp, #128]
  403b18:	str	wzr, [sp, #132]
  403b1c:	ldr	w0, [sp, #132]
  403b20:	bl	402bf0 <log_get_max_level_realm@plt>
  403b24:	mov	w1, w0
  403b28:	ldr	w0, [sp, #124]
  403b2c:	and	w0, w0, #0x7
  403b30:	cmp	w1, w0
  403b34:	b.lt	403b80 <run+0x68c>  // b.tstop
  403b38:	ldr	w0, [sp, #132]
  403b3c:	lsl	w1, w0, #10
  403b40:	ldr	w0, [sp, #124]
  403b44:	orr	w19, w1, w0
  403b48:	adrp	x0, 40b000 <server_name_free+0x418>
  403b4c:	add	x20, x0, #0x7b3
  403b50:	bl	402720 <getpid_cached@plt>
  403b54:	mov	w6, w0
  403b58:	adrp	x0, 40b000 <server_name_free+0x418>
  403b5c:	add	x5, x0, #0xb38
  403b60:	adrp	x0, 40b000 <server_name_free+0x418>
  403b64:	add	x4, x0, #0xc20
  403b68:	mov	w3, #0x98                  	// #152
  403b6c:	mov	x2, x20
  403b70:	ldr	w1, [sp, #128]
  403b74:	mov	w0, w19
  403b78:	bl	4029d0 <log_internal_realm@plt>
  403b7c:	b	403b88 <run+0x694>
  403b80:	ldr	w0, [sp, #128]
  403b84:	cmp	w0, #0x0
  403b88:	adrp	x0, 40b000 <server_name_free+0x418>
  403b8c:	add	x1, x0, #0xb60
  403b90:	adrp	x0, 40b000 <server_name_free+0x418>
  403b94:	add	x0, x0, #0xb88
  403b98:	bl	402f64 <notify_start>
  403b9c:	str	x0, [sp, #208]
  403ba0:	bl	402760 <network_is_online@plt>
  403ba4:	and	w0, w0, #0xff
  403ba8:	cmp	w0, #0x0
  403bac:	b.eq	403bd0 <run+0x6dc>  // b.none
  403bb0:	ldr	x0, [sp, #216]
  403bb4:	bl	408c88 <manager_connect>
  403bb8:	str	w0, [sp, #72]
  403bbc:	ldr	w0, [sp, #72]
  403bc0:	cmp	w0, #0x0
  403bc4:	b.ge	403bd0 <run+0x6dc>  // b.tcont
  403bc8:	ldr	w19, [sp, #72]
  403bcc:	b	403d28 <run+0x834>
  403bd0:	ldr	x0, [sp, #216]
  403bd4:	ldr	x0, [x0, #8]
  403bd8:	bl	402ab0 <sd_event_loop@plt>
  403bdc:	str	w0, [sp, #72]
  403be0:	ldr	w0, [sp, #72]
  403be4:	cmp	w0, #0x0
  403be8:	b.ge	403c78 <run+0x784>  // b.tcont
  403bec:	mov	w0, #0x3                   	// #3
  403bf0:	str	w0, [sp, #148]
  403bf4:	ldr	w0, [sp, #72]
  403bf8:	str	w0, [sp, #152]
  403bfc:	str	wzr, [sp, #156]
  403c00:	ldr	w0, [sp, #156]
  403c04:	bl	402bf0 <log_get_max_level_realm@plt>
  403c08:	mov	w1, w0
  403c0c:	ldr	w0, [sp, #148]
  403c10:	and	w0, w0, #0x7
  403c14:	cmp	w1, w0
  403c18:	b.lt	403c60 <run+0x76c>  // b.tstop
  403c1c:	ldr	w0, [sp, #156]
  403c20:	lsl	w1, w0, #10
  403c24:	ldr	w0, [sp, #148]
  403c28:	orr	w6, w1, w0
  403c2c:	adrp	x0, 40b000 <server_name_free+0x418>
  403c30:	add	x1, x0, #0x7b3
  403c34:	adrp	x0, 40b000 <server_name_free+0x418>
  403c38:	add	x5, x0, #0xbb0
  403c3c:	adrp	x0, 40b000 <server_name_free+0x418>
  403c40:	add	x4, x0, #0xc20
  403c44:	mov	w3, #0xa6                  	// #166
  403c48:	mov	x2, x1
  403c4c:	ldr	w1, [sp, #152]
  403c50:	mov	w0, w6
  403c54:	bl	4029d0 <log_internal_realm@plt>
  403c58:	mov	w19, w0
  403c5c:	b	403d28 <run+0x834>
  403c60:	ldr	w0, [sp, #152]
  403c64:	cmp	w0, #0x0
  403c68:	cneg	w0, w0, lt  // lt = tstop
  403c6c:	and	w0, w0, #0xff
  403c70:	neg	w19, w0
  403c74:	b	403d28 <run+0x834>
  403c78:	ldr	x0, [sp, #216]
  403c7c:	ldrb	w0, [x0, #409]
  403c80:	cmp	w0, #0x0
  403c84:	b.eq	403d24 <run+0x830>  // b.none
  403c88:	adrp	x0, 40b000 <server_name_free+0x418>
  403c8c:	add	x0, x0, #0x790
  403c90:	bl	4028b0 <touch@plt>
  403c94:	str	w0, [sp, #72]
  403c98:	ldr	w0, [sp, #72]
  403c9c:	cmp	w0, #0x0
  403ca0:	b.ge	403d24 <run+0x830>  // b.tcont
  403ca4:	mov	w0, #0x7                   	// #7
  403ca8:	str	w0, [sp, #136]
  403cac:	ldr	w0, [sp, #72]
  403cb0:	str	w0, [sp, #140]
  403cb4:	str	wzr, [sp, #144]
  403cb8:	ldr	w0, [sp, #144]
  403cbc:	bl	402bf0 <log_get_max_level_realm@plt>
  403cc0:	mov	w1, w0
  403cc4:	ldr	w0, [sp, #136]
  403cc8:	and	w0, w0, #0x7
  403ccc:	cmp	w1, w0
  403cd0:	b.lt	403d1c <run+0x828>  // b.tstop
  403cd4:	ldr	w0, [sp, #144]
  403cd8:	lsl	w1, w0, #10
  403cdc:	ldr	w0, [sp, #136]
  403ce0:	orr	w7, w1, w0
  403ce4:	adrp	x0, 40b000 <server_name_free+0x418>
  403ce8:	add	x1, x0, #0x7b3
  403cec:	adrp	x0, 40b000 <server_name_free+0x418>
  403cf0:	add	x6, x0, #0x790
  403cf4:	adrp	x0, 40b000 <server_name_free+0x418>
  403cf8:	add	x5, x0, #0xbd0
  403cfc:	adrp	x0, 40b000 <server_name_free+0x418>
  403d00:	add	x4, x0, #0xc20
  403d04:	mov	w3, #0xac                  	// #172
  403d08:	mov	x2, x1
  403d0c:	ldr	w1, [sp, #140]
  403d10:	mov	w0, w7
  403d14:	bl	4029d0 <log_internal_realm@plt>
  403d18:	b	403d24 <run+0x830>
  403d1c:	ldr	w0, [sp, #140]
  403d20:	cmp	w0, #0x0
  403d24:	mov	w19, #0x0                   	// #0
  403d28:	add	x0, sp, #0xd8
  403d2c:	bl	40307c <manager_freep>
  403d30:	add	x0, sp, #0xd0
  403d34:	bl	402f98 <notify_on_cleanup>
  403d38:	mov	w1, w19
  403d3c:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  403d40:	add	x0, x0, #0xa48
  403d44:	ldr	x2, [sp, #232]
  403d48:	ldr	x0, [x0]
  403d4c:	eor	x0, x2, x0
  403d50:	cmp	x0, #0x0
  403d54:	b.eq	403d5c <run+0x868>  // b.none
  403d58:	bl	402930 <__stack_chk_fail@plt>
  403d5c:	mov	w0, w1
  403d60:	ldp	x19, x20, [sp, #16]
  403d64:	ldp	x29, x30, [sp], #240
  403d68:	ret

0000000000403d6c <main>:
  403d6c:	stp	x29, x30, [sp, #-48]!
  403d70:	mov	x29, sp
  403d74:	str	w0, [sp, #28]
  403d78:	str	x1, [sp, #16]
  403d7c:	ldr	x1, [sp, #16]
  403d80:	ldr	w0, [sp, #28]
  403d84:	bl	402f2c <save_argc_argv>
  403d88:	ldr	x1, [sp, #16]
  403d8c:	ldr	w0, [sp, #28]
  403d90:	bl	4034f4 <run>
  403d94:	str	w0, [sp, #44]
  403d98:	bl	402950 <ask_password_agent_close@plt>
  403d9c:	bl	4026c0 <polkit_agent_close@plt>
  403da0:	bl	402960 <pager_close@plt>
  403da4:	bl	402b60 <mac_selinux_finish@plt>
  403da8:	bl	402ff4 <static_destruct>
  403dac:	ldr	w0, [sp, #44]
  403db0:	lsr	w0, w0, #31
  403db4:	ldp	x29, x30, [sp], #48
  403db8:	ret

0000000000403dbc <__bswap_16>:
  403dbc:	sub	sp, sp, #0x10
  403dc0:	strh	w0, [sp, #14]
  403dc4:	ldrh	w0, [sp, #14]
  403dc8:	rev16	w0, w0
  403dcc:	and	w0, w0, #0xffff
  403dd0:	add	sp, sp, #0x10
  403dd4:	ret

0000000000403dd8 <__bswap_32>:
  403dd8:	sub	sp, sp, #0x10
  403ddc:	str	w0, [sp, #12]
  403de0:	ldr	w0, [sp, #12]
  403de4:	rev	w0, w0
  403de8:	add	sp, sp, #0x10
  403dec:	ret

0000000000403df0 <be16toh>:
  403df0:	stp	x29, x30, [sp, #-32]!
  403df4:	mov	x29, sp
  403df8:	strh	w0, [sp, #30]
  403dfc:	ldrh	w0, [sp, #30]
  403e00:	bl	403dbc <__bswap_16>
  403e04:	and	w0, w0, #0xffff
  403e08:	ldp	x29, x30, [sp], #32
  403e0c:	ret

0000000000403e10 <be32toh>:
  403e10:	stp	x29, x30, [sp, #-32]!
  403e14:	mov	x29, sp
  403e18:	str	w0, [sp, #28]
  403e1c:	ldr	w0, [sp, #28]
  403e20:	bl	403dd8 <__bswap_32>
  403e24:	ldp	x29, x30, [sp], #32
  403e28:	ret

0000000000403e2c <FAMILY_ADDRESS_SIZE>:
  403e2c:	stp	x29, x30, [sp, #-48]!
  403e30:	mov	x29, sp
  403e34:	str	w0, [sp, #28]
  403e38:	strb	wzr, [sp, #47]
  403e3c:	ldr	w0, [sp, #28]
  403e40:	cmp	w0, #0x2
  403e44:	b.eq	403e54 <FAMILY_ADDRESS_SIZE+0x28>  // b.none
  403e48:	ldr	w0, [sp, #28]
  403e4c:	cmp	w0, #0xa
  403e50:	b.ne	403e5c <FAMILY_ADDRESS_SIZE+0x30>  // b.any
  403e54:	mov	w0, #0x1                   	// #1
  403e58:	strb	w0, [sp, #47]
  403e5c:	nop
  403e60:	ldrb	w0, [sp, #47]
  403e64:	eor	w0, w0, #0x1
  403e68:	and	w0, w0, #0xff
  403e6c:	and	x0, x0, #0xff
  403e70:	cmp	x0, #0x0
  403e74:	b.eq	403ea0 <FAMILY_ADDRESS_SIZE+0x74>  // b.none
  403e78:	adrp	x0, 40b000 <server_name_free+0x418>
  403e7c:	add	x1, x0, #0xc33
  403e80:	adrp	x0, 40c000 <manager_vtable+0xa0>
  403e84:	add	x4, x0, #0x2a0
  403e88:	mov	w3, #0x43                  	// #67
  403e8c:	mov	x2, x1
  403e90:	adrp	x0, 40b000 <server_name_free+0x418>
  403e94:	add	x1, x0, #0xc50
  403e98:	mov	w0, #0x0                   	// #0
  403e9c:	bl	4027f0 <log_assert_failed_realm@plt>
  403ea0:	ldr	w0, [sp, #28]
  403ea4:	cmp	w0, #0xa
  403ea8:	b.ne	403eb4 <FAMILY_ADDRESS_SIZE+0x88>  // b.any
  403eac:	mov	x0, #0x10                  	// #16
  403eb0:	b	403eb8 <FAMILY_ADDRESS_SIZE+0x8c>
  403eb4:	mov	x0, #0x4                   	// #4
  403eb8:	ldp	x29, x30, [sp], #48
  403ebc:	ret

0000000000403ec0 <property_get_servers>:
  403ec0:	stp	x29, x30, [sp, #-112]!
  403ec4:	mov	x29, sp
  403ec8:	str	x0, [sp, #72]
  403ecc:	str	x1, [sp, #64]
  403ed0:	str	x2, [sp, #56]
  403ed4:	str	x3, [sp, #48]
  403ed8:	str	x4, [sp, #40]
  403edc:	str	x5, [sp, #32]
  403ee0:	str	x6, [sp, #24]
  403ee4:	ldr	x0, [sp, #32]
  403ee8:	str	x0, [sp, #104]
  403eec:	ldr	x0, [sp, #104]
  403ef0:	cmp	x0, #0x0
  403ef4:	cset	w0, eq  // eq = none
  403ef8:	and	w0, w0, #0xff
  403efc:	and	x0, x0, #0xff
  403f00:	cmp	x0, #0x0
  403f04:	b.eq	403f30 <property_get_servers+0x70>  // b.none
  403f08:	adrp	x0, 40b000 <server_name_free+0x418>
  403f0c:	add	x1, x0, #0xc7b
  403f10:	adrp	x0, 40c000 <manager_vtable+0xa0>
  403f14:	add	x4, x0, #0x238
  403f18:	mov	w3, #0x1b                  	// #27
  403f1c:	mov	x2, x1
  403f20:	adrp	x0, 40b000 <server_name_free+0x418>
  403f24:	add	x1, x0, #0xc98
  403f28:	mov	w0, #0x0                   	// #0
  403f2c:	bl	4027f0 <log_assert_failed_realm@plt>
  403f30:	ldr	x0, [sp, #72]
  403f34:	cmp	x0, #0x0
  403f38:	cset	w0, eq  // eq = none
  403f3c:	and	w0, w0, #0xff
  403f40:	and	x0, x0, #0xff
  403f44:	cmp	x0, #0x0
  403f48:	b.eq	403f74 <property_get_servers+0xb4>  // b.none
  403f4c:	adrp	x0, 40b000 <server_name_free+0x418>
  403f50:	add	x1, x0, #0xc7b
  403f54:	adrp	x0, 40c000 <manager_vtable+0xa0>
  403f58:	add	x4, x0, #0x238
  403f5c:	mov	w3, #0x1c                  	// #28
  403f60:	mov	x2, x1
  403f64:	adrp	x0, 40b000 <server_name_free+0x418>
  403f68:	add	x1, x0, #0xca0
  403f6c:	mov	w0, #0x0                   	// #0
  403f70:	bl	4027f0 <log_assert_failed_realm@plt>
  403f74:	ldr	x0, [sp, #40]
  403f78:	cmp	x0, #0x0
  403f7c:	cset	w0, eq  // eq = none
  403f80:	and	w0, w0, #0xff
  403f84:	and	x0, x0, #0xff
  403f88:	cmp	x0, #0x0
  403f8c:	b.eq	403fb8 <property_get_servers+0xf8>  // b.none
  403f90:	adrp	x0, 40b000 <server_name_free+0x418>
  403f94:	add	x1, x0, #0xc7b
  403f98:	adrp	x0, 40c000 <manager_vtable+0xa0>
  403f9c:	add	x4, x0, #0x238
  403fa0:	mov	w3, #0x1d                  	// #29
  403fa4:	mov	x2, x1
  403fa8:	adrp	x0, 40b000 <server_name_free+0x418>
  403fac:	add	x1, x0, #0xca8
  403fb0:	mov	w0, #0x0                   	// #0
  403fb4:	bl	4027f0 <log_assert_failed_realm@plt>
  403fb8:	adrp	x0, 40b000 <server_name_free+0x418>
  403fbc:	add	x2, x0, #0xc98
  403fc0:	mov	w1, #0x61                  	// #97
  403fc4:	ldr	x0, [sp, #40]
  403fc8:	bl	402700 <sd_bus_message_open_container@plt>
  403fcc:	str	w0, [sp, #92]
  403fd0:	ldr	w0, [sp, #92]
  403fd4:	cmp	w0, #0x0
  403fd8:	b.ge	403fe4 <property_get_servers+0x124>  // b.tcont
  403fdc:	ldr	w0, [sp, #92]
  403fe0:	b	404048 <property_get_servers+0x188>
  403fe4:	ldr	x0, [sp, #104]
  403fe8:	ldr	x0, [x0]
  403fec:	str	x0, [sp, #96]
  403ff0:	b	404034 <property_get_servers+0x174>
  403ff4:	ldr	x0, [sp, #96]
  403ff8:	ldr	x0, [x0, #16]
  403ffc:	mov	x2, x0
  404000:	adrp	x0, 40b000 <server_name_free+0x418>
  404004:	add	x1, x0, #0xc98
  404008:	ldr	x0, [sp, #40]
  40400c:	bl	4027a0 <sd_bus_message_append@plt>
  404010:	str	w0, [sp, #92]
  404014:	ldr	w0, [sp, #92]
  404018:	cmp	w0, #0x0
  40401c:	b.ge	404028 <property_get_servers+0x168>  // b.tcont
  404020:	ldr	w0, [sp, #92]
  404024:	b	404048 <property_get_servers+0x188>
  404028:	ldr	x0, [sp, #96]
  40402c:	ldr	x0, [x0, #40]
  404030:	str	x0, [sp, #96]
  404034:	ldr	x0, [sp, #96]
  404038:	cmp	x0, #0x0
  40403c:	b.ne	403ff4 <property_get_servers+0x134>  // b.any
  404040:	ldr	x0, [sp, #40]
  404044:	bl	402c00 <sd_bus_message_close_container@plt>
  404048:	ldp	x29, x30, [sp], #112
  40404c:	ret

0000000000404050 <property_get_current_server_name>:
  404050:	stp	x29, x30, [sp, #-96]!
  404054:	mov	x29, sp
  404058:	str	x0, [sp, #72]
  40405c:	str	x1, [sp, #64]
  404060:	str	x2, [sp, #56]
  404064:	str	x3, [sp, #48]
  404068:	str	x4, [sp, #40]
  40406c:	str	x5, [sp, #32]
  404070:	str	x6, [sp, #24]
  404074:	ldr	x0, [sp, #32]
  404078:	str	x0, [sp, #88]
  40407c:	ldr	x0, [sp, #88]
  404080:	cmp	x0, #0x0
  404084:	cset	w0, eq  // eq = none
  404088:	and	w0, w0, #0xff
  40408c:	and	x0, x0, #0xff
  404090:	cmp	x0, #0x0
  404094:	b.eq	4040c0 <property_get_current_server_name+0x70>  // b.none
  404098:	adrp	x0, 40b000 <server_name_free+0x418>
  40409c:	add	x1, x0, #0xc7b
  4040a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4040a4:	add	x4, x0, #0x250
  4040a8:	mov	w3, #0x37                  	// #55
  4040ac:	mov	x2, x1
  4040b0:	adrp	x0, 40b000 <server_name_free+0x418>
  4040b4:	add	x1, x0, #0xc98
  4040b8:	mov	w0, #0x0                   	// #0
  4040bc:	bl	4027f0 <log_assert_failed_realm@plt>
  4040c0:	ldr	x0, [sp, #72]
  4040c4:	cmp	x0, #0x0
  4040c8:	cset	w0, eq  // eq = none
  4040cc:	and	w0, w0, #0xff
  4040d0:	and	x0, x0, #0xff
  4040d4:	cmp	x0, #0x0
  4040d8:	b.eq	404104 <property_get_current_server_name+0xb4>  // b.none
  4040dc:	adrp	x0, 40b000 <server_name_free+0x418>
  4040e0:	add	x1, x0, #0xc7b
  4040e4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4040e8:	add	x4, x0, #0x250
  4040ec:	mov	w3, #0x38                  	// #56
  4040f0:	mov	x2, x1
  4040f4:	adrp	x0, 40b000 <server_name_free+0x418>
  4040f8:	add	x1, x0, #0xca0
  4040fc:	mov	w0, #0x0                   	// #0
  404100:	bl	4027f0 <log_assert_failed_realm@plt>
  404104:	ldr	x0, [sp, #40]
  404108:	cmp	x0, #0x0
  40410c:	cset	w0, eq  // eq = none
  404110:	and	w0, w0, #0xff
  404114:	and	x0, x0, #0xff
  404118:	cmp	x0, #0x0
  40411c:	b.eq	404148 <property_get_current_server_name+0xf8>  // b.none
  404120:	adrp	x0, 40b000 <server_name_free+0x418>
  404124:	add	x1, x0, #0xc7b
  404128:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40412c:	add	x4, x0, #0x250
  404130:	mov	w3, #0x39                  	// #57
  404134:	mov	x2, x1
  404138:	adrp	x0, 40b000 <server_name_free+0x418>
  40413c:	add	x1, x0, #0xca8
  404140:	mov	w0, #0x0                   	// #0
  404144:	bl	4027f0 <log_assert_failed_realm@plt>
  404148:	ldr	x0, [sp, #88]
  40414c:	ldr	x0, [x0]
  404150:	cmp	x0, #0x0
  404154:	b.eq	404168 <property_get_current_server_name+0x118>  // b.none
  404158:	ldr	x0, [sp, #88]
  40415c:	ldr	x0, [x0]
  404160:	ldr	x0, [x0, #16]
  404164:	b	40416c <property_get_current_server_name+0x11c>
  404168:	mov	x0, #0x0                   	// #0
  40416c:	mov	x2, x0
  404170:	adrp	x0, 40b000 <server_name_free+0x418>
  404174:	add	x1, x0, #0xc98
  404178:	ldr	x0, [sp, #40]
  40417c:	bl	4027a0 <sd_bus_message_append@plt>
  404180:	ldp	x29, x30, [sp], #96
  404184:	ret

0000000000404188 <property_get_current_server_address>:
  404188:	stp	x29, x30, [sp, #-112]!
  40418c:	mov	x29, sp
  404190:	str	x19, [sp, #16]
  404194:	str	x0, [sp, #88]
  404198:	str	x1, [sp, #80]
  40419c:	str	x2, [sp, #72]
  4041a0:	str	x3, [sp, #64]
  4041a4:	str	x4, [sp, #56]
  4041a8:	str	x5, [sp, #48]
  4041ac:	str	x6, [sp, #40]
  4041b0:	ldr	x0, [sp, #88]
  4041b4:	cmp	x0, #0x0
  4041b8:	cset	w0, eq  // eq = none
  4041bc:	and	w0, w0, #0xff
  4041c0:	and	x0, x0, #0xff
  4041c4:	cmp	x0, #0x0
  4041c8:	b.eq	4041f4 <property_get_current_server_address+0x6c>  // b.none
  4041cc:	adrp	x0, 40b000 <server_name_free+0x418>
  4041d0:	add	x1, x0, #0xc7b
  4041d4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4041d8:	add	x4, x0, #0x278
  4041dc:	mov	w3, #0x4a                  	// #74
  4041e0:	mov	x2, x1
  4041e4:	adrp	x0, 40b000 <server_name_free+0x418>
  4041e8:	add	x1, x0, #0xca0
  4041ec:	mov	w0, #0x0                   	// #0
  4041f0:	bl	4027f0 <log_assert_failed_realm@plt>
  4041f4:	ldr	x0, [sp, #56]
  4041f8:	cmp	x0, #0x0
  4041fc:	cset	w0, eq  // eq = none
  404200:	and	w0, w0, #0xff
  404204:	and	x0, x0, #0xff
  404208:	cmp	x0, #0x0
  40420c:	b.eq	404238 <property_get_current_server_address+0xb0>  // b.none
  404210:	adrp	x0, 40b000 <server_name_free+0x418>
  404214:	add	x1, x0, #0xc7b
  404218:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40421c:	add	x4, x0, #0x278
  404220:	mov	w3, #0x4b                  	// #75
  404224:	mov	x2, x1
  404228:	adrp	x0, 40b000 <server_name_free+0x418>
  40422c:	add	x1, x0, #0xca8
  404230:	mov	w0, #0x0                   	// #0
  404234:	bl	4027f0 <log_assert_failed_realm@plt>
  404238:	ldr	x0, [sp, #48]
  40423c:	cmp	x0, #0x0
  404240:	cset	w0, eq  // eq = none
  404244:	and	w0, w0, #0xff
  404248:	and	x0, x0, #0xff
  40424c:	cmp	x0, #0x0
  404250:	b.eq	40427c <property_get_current_server_address+0xf4>  // b.none
  404254:	adrp	x0, 40b000 <server_name_free+0x418>
  404258:	add	x1, x0, #0xc7b
  40425c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404260:	add	x4, x0, #0x278
  404264:	mov	w3, #0x4c                  	// #76
  404268:	mov	x2, x1
  40426c:	adrp	x0, 40b000 <server_name_free+0x418>
  404270:	add	x1, x0, #0xcb0
  404274:	mov	w0, #0x0                   	// #0
  404278:	bl	4027f0 <log_assert_failed_realm@plt>
  40427c:	ldr	x0, [sp, #48]
  404280:	ldr	x0, [x0]
  404284:	str	x0, [sp, #104]
  404288:	ldr	x0, [sp, #104]
  40428c:	cmp	x0, #0x0
  404290:	b.ne	4042b0 <property_get_current_server_address+0x128>  // b.any
  404294:	mov	w3, #0x0                   	// #0
  404298:	mov	w2, #0x0                   	// #0
  40429c:	adrp	x0, 40b000 <server_name_free+0x418>
  4042a0:	add	x1, x0, #0xcc0
  4042a4:	ldr	x0, [sp, #56]
  4042a8:	bl	4027a0 <sd_bus_message_append@plt>
  4042ac:	b	4043dc <property_get_current_server_address+0x254>
  4042b0:	strb	wzr, [sp, #99]
  4042b4:	ldr	x0, [sp, #104]
  4042b8:	ldrh	w0, [x0, #8]
  4042bc:	cmp	w0, #0x2
  4042c0:	b.eq	4042cc <property_get_current_server_address+0x144>  // b.none
  4042c4:	cmp	w0, #0xa
  4042c8:	b.ne	4042d4 <property_get_current_server_address+0x14c>  // b.any
  4042cc:	mov	w0, #0x1                   	// #1
  4042d0:	strb	w0, [sp, #99]
  4042d4:	nop
  4042d8:	ldrb	w0, [sp, #99]
  4042dc:	eor	w0, w0, #0x1
  4042e0:	and	w0, w0, #0xff
  4042e4:	and	x0, x0, #0xff
  4042e8:	cmp	x0, #0x0
  4042ec:	b.eq	404318 <property_get_current_server_address+0x190>  // b.none
  4042f0:	adrp	x0, 40b000 <server_name_free+0x418>
  4042f4:	add	x1, x0, #0xc7b
  4042f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4042fc:	add	x4, x0, #0x278
  404300:	mov	w3, #0x53                  	// #83
  404304:	mov	x2, x1
  404308:	adrp	x0, 40b000 <server_name_free+0x418>
  40430c:	add	x1, x0, #0xcc8
  404310:	mov	w0, #0x0                   	// #0
  404314:	bl	4027f0 <log_assert_failed_realm@plt>
  404318:	adrp	x0, 40b000 <server_name_free+0x418>
  40431c:	add	x2, x0, #0xd00
  404320:	mov	w1, #0x72                  	// #114
  404324:	ldr	x0, [sp, #56]
  404328:	bl	402700 <sd_bus_message_open_container@plt>
  40432c:	str	w0, [sp, #100]
  404330:	ldr	w0, [sp, #100]
  404334:	cmp	w0, #0x0
  404338:	b.ge	404344 <property_get_current_server_address+0x1bc>  // b.tcont
  40433c:	ldr	w0, [sp, #100]
  404340:	b	4043dc <property_get_current_server_address+0x254>
  404344:	ldr	x0, [sp, #104]
  404348:	ldrh	w0, [x0, #8]
  40434c:	mov	w2, w0
  404350:	adrp	x0, 40b000 <server_name_free+0x418>
  404354:	add	x1, x0, #0xd08
  404358:	ldr	x0, [sp, #56]
  40435c:	bl	4027a0 <sd_bus_message_append@plt>
  404360:	str	w0, [sp, #100]
  404364:	ldr	w0, [sp, #100]
  404368:	cmp	w0, #0x0
  40436c:	b.ge	404378 <property_get_current_server_address+0x1f0>  // b.tcont
  404370:	ldr	w0, [sp, #100]
  404374:	b	4043dc <property_get_current_server_address+0x254>
  404378:	ldr	x0, [sp, #104]
  40437c:	ldrh	w0, [x0, #8]
  404380:	cmp	w0, #0x2
  404384:	b.ne	404394 <property_get_current_server_address+0x20c>  // b.any
  404388:	ldr	x0, [sp, #104]
  40438c:	add	x19, x0, #0xc
  404390:	b	40439c <property_get_current_server_address+0x214>
  404394:	ldr	x0, [sp, #104]
  404398:	add	x19, x0, #0x10
  40439c:	ldr	x0, [sp, #104]
  4043a0:	ldrh	w0, [x0, #8]
  4043a4:	bl	403e2c <FAMILY_ADDRESS_SIZE>
  4043a8:	mov	x3, x0
  4043ac:	mov	x2, x19
  4043b0:	mov	w1, #0x79                  	// #121
  4043b4:	ldr	x0, [sp, #56]
  4043b8:	bl	402710 <sd_bus_message_append_array@plt>
  4043bc:	str	w0, [sp, #100]
  4043c0:	ldr	w0, [sp, #100]
  4043c4:	cmp	w0, #0x0
  4043c8:	b.ge	4043d4 <property_get_current_server_address+0x24c>  // b.tcont
  4043cc:	ldr	w0, [sp, #100]
  4043d0:	b	4043dc <property_get_current_server_address+0x254>
  4043d4:	ldr	x0, [sp, #56]
  4043d8:	bl	402c00 <sd_bus_message_close_container@plt>
  4043dc:	ldr	x19, [sp, #16]
  4043e0:	ldp	x29, x30, [sp], #112
  4043e4:	ret

00000000004043e8 <ntp_ts_short_to_usec>:
  4043e8:	stp	x29, x30, [sp, #-48]!
  4043ec:	mov	x29, sp
  4043f0:	str	x19, [sp, #16]
  4043f4:	str	x0, [sp, #40]
  4043f8:	ldr	x0, [sp, #40]
  4043fc:	ldrh	w0, [x0]
  404400:	bl	403df0 <be16toh>
  404404:	and	w0, w0, #0xffff
  404408:	and	x1, x0, #0xffff
  40440c:	mov	x0, #0x4240                	// #16960
  404410:	movk	x0, #0xf, lsl #16
  404414:	mul	x19, x1, x0
  404418:	ldr	x0, [sp, #40]
  40441c:	ldrh	w0, [x0, #2]
  404420:	bl	403df0 <be16toh>
  404424:	and	w0, w0, #0xffff
  404428:	and	x1, x0, #0xffff
  40442c:	mov	x0, #0x4240                	// #16960
  404430:	movk	x0, #0xf, lsl #16
  404434:	mul	x0, x1, x0
  404438:	lsr	x0, x0, #16
  40443c:	add	x0, x19, x0
  404440:	ldr	x19, [sp, #16]
  404444:	ldp	x29, x30, [sp], #48
  404448:	ret

000000000040444c <ntp_ts_to_usec>:
  40444c:	stp	x29, x30, [sp, #-48]!
  404450:	mov	x29, sp
  404454:	str	x19, [sp, #16]
  404458:	str	x0, [sp, #40]
  40445c:	ldr	x0, [sp, #40]
  404460:	ldr	w0, [x0]
  404464:	bl	403e10 <be32toh>
  404468:	mov	w1, w0
  40446c:	mov	x0, #0x4240                	// #16960
  404470:	movk	x0, #0xf, lsl #16
  404474:	mul	x19, x1, x0
  404478:	ldr	x0, [sp, #40]
  40447c:	ldr	w0, [x0, #4]
  404480:	bl	403e10 <be32toh>
  404484:	mov	w1, w0
  404488:	mov	x0, #0x4240                	// #16960
  40448c:	movk	x0, #0xf, lsl #16
  404490:	mul	x0, x1, x0
  404494:	lsr	x0, x0, #32
  404498:	add	x1, x19, x0
  40449c:	mov	x0, #0x6000                	// #24576
  4044a0:	movk	x0, #0xb743, lsl #16
  4044a4:	movk	x0, #0x26ef, lsl #32
  4044a8:	movk	x0, #0xfff8, lsl #48
  4044ac:	add	x0, x1, x0
  4044b0:	ldr	x19, [sp, #16]
  4044b4:	ldp	x29, x30, [sp], #48
  4044b8:	ret

00000000004044bc <property_get_ntp_message>:
  4044bc:	sub	sp, sp, #0xa0
  4044c0:	stp	x29, x30, [sp, #16]
  4044c4:	add	x29, sp, #0x10
  4044c8:	stp	x19, x20, [sp, #32]
  4044cc:	stp	x21, x22, [sp, #48]
  4044d0:	stp	x23, x24, [sp, #64]
  4044d4:	str	x0, [sp, #136]
  4044d8:	str	x1, [sp, #128]
  4044dc:	str	x2, [sp, #120]
  4044e0:	str	x3, [sp, #112]
  4044e4:	str	x4, [sp, #104]
  4044e8:	str	x5, [sp, #96]
  4044ec:	str	x6, [sp, #88]
  4044f0:	ldr	x0, [sp, #96]
  4044f4:	str	x0, [sp, #152]
  4044f8:	ldr	x0, [sp, #152]
  4044fc:	cmp	x0, #0x0
  404500:	cset	w0, eq  // eq = none
  404504:	and	w0, w0, #0xff
  404508:	and	x0, x0, #0xff
  40450c:	cmp	x0, #0x0
  404510:	b.eq	40453c <property_get_ntp_message+0x80>  // b.none
  404514:	adrp	x0, 40b000 <server_name_free+0x418>
  404518:	add	x1, x0, #0xc7b
  40451c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404520:	add	x4, x0, #0x2b8
  404524:	mov	w3, #0x7a                  	// #122
  404528:	mov	x2, x1
  40452c:	adrp	x0, 40b000 <server_name_free+0x418>
  404530:	add	x1, x0, #0xd10
  404534:	mov	w0, #0x0                   	// #0
  404538:	bl	4027f0 <log_assert_failed_realm@plt>
  40453c:	ldr	x0, [sp, #104]
  404540:	cmp	x0, #0x0
  404544:	cset	w0, eq  // eq = none
  404548:	and	w0, w0, #0xff
  40454c:	and	x0, x0, #0xff
  404550:	cmp	x0, #0x0
  404554:	b.eq	404580 <property_get_ntp_message+0xc4>  // b.none
  404558:	adrp	x0, 40b000 <server_name_free+0x418>
  40455c:	add	x1, x0, #0xc7b
  404560:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404564:	add	x4, x0, #0x2b8
  404568:	mov	w3, #0x7b                  	// #123
  40456c:	mov	x2, x1
  404570:	adrp	x0, 40b000 <server_name_free+0x418>
  404574:	add	x1, x0, #0xca8
  404578:	mov	w0, #0x0                   	// #0
  40457c:	bl	4027f0 <log_assert_failed_realm@plt>
  404580:	adrp	x0, 40b000 <server_name_free+0x418>
  404584:	add	x2, x0, #0xd18
  404588:	mov	w1, #0x72                  	// #114
  40458c:	ldr	x0, [sp, #104]
  404590:	bl	402700 <sd_bus_message_open_container@plt>
  404594:	str	w0, [sp, #148]
  404598:	ldr	w0, [sp, #148]
  40459c:	cmp	w0, #0x0
  4045a0:	b.ge	4045ac <property_get_ntp_message+0xf0>  // b.tcont
  4045a4:	ldr	w0, [sp, #148]
  4045a8:	b	404748 <property_get_ntp_message+0x28c>
  4045ac:	ldr	x0, [sp, #152]
  4045b0:	ldrb	w0, [x0, #449]
  4045b4:	lsr	w0, w0, #6
  4045b8:	and	w0, w0, #0xff
  4045bc:	and	w19, w0, #0x3
  4045c0:	ldr	x0, [sp, #152]
  4045c4:	ldrb	w0, [x0, #449]
  4045c8:	lsr	w0, w0, #3
  4045cc:	and	w0, w0, #0xff
  4045d0:	and	w20, w0, #0x7
  4045d4:	ldr	x0, [sp, #152]
  4045d8:	ldrb	w0, [x0, #449]
  4045dc:	and	w21, w0, #0x7
  4045e0:	ldr	x0, [sp, #152]
  4045e4:	ldrb	w0, [x0, #450]
  4045e8:	mov	w23, w0
  4045ec:	ldr	x0, [sp, #152]
  4045f0:	ldrsb	w0, [x0, #452]
  4045f4:	mov	w24, w0
  4045f8:	ldr	x0, [sp, #152]
  4045fc:	add	x0, x0, #0x1c5
  404600:	bl	4043e8 <ntp_ts_short_to_usec>
  404604:	mov	x22, x0
  404608:	ldr	x0, [sp, #152]
  40460c:	add	x0, x0, #0x1c9
  404610:	bl	4043e8 <ntp_ts_short_to_usec>
  404614:	str	x0, [sp]
  404618:	mov	x7, x22
  40461c:	mov	w6, w24
  404620:	mov	w5, w23
  404624:	mov	w4, w21
  404628:	mov	w3, w20
  40462c:	mov	w2, w19
  404630:	adrp	x0, 40b000 <server_name_free+0x418>
  404634:	add	x1, x0, #0xd30
  404638:	ldr	x0, [sp, #104]
  40463c:	bl	4027a0 <sd_bus_message_append@plt>
  404640:	str	w0, [sp, #148]
  404644:	ldr	w0, [sp, #148]
  404648:	cmp	w0, #0x0
  40464c:	b.ge	404658 <property_get_ntp_message+0x19c>  // b.tcont
  404650:	ldr	w0, [sp, #148]
  404654:	b	404748 <property_get_ntp_message+0x28c>
  404658:	ldr	x0, [sp, #152]
  40465c:	add	x0, x0, #0x1cd
  404660:	mov	x3, #0x4                   	// #4
  404664:	mov	x2, x0
  404668:	mov	w1, #0x79                  	// #121
  40466c:	ldr	x0, [sp, #104]
  404670:	bl	402710 <sd_bus_message_append_array@plt>
  404674:	str	w0, [sp, #148]
  404678:	ldr	w0, [sp, #148]
  40467c:	cmp	w0, #0x0
  404680:	b.ge	40468c <property_get_ntp_message+0x1d0>  // b.tcont
  404684:	ldr	w0, [sp, #148]
  404688:	b	404748 <property_get_ntp_message+0x28c>
  40468c:	ldr	x0, [sp, #152]
  404690:	add	x0, x0, #0x1f8
  404694:	bl	402b10 <timespec_load@plt>
  404698:	mov	x19, x0
  40469c:	ldr	x0, [sp, #152]
  4046a0:	add	x0, x0, #0x1e1
  4046a4:	bl	40444c <ntp_ts_to_usec>
  4046a8:	mov	x20, x0
  4046ac:	ldr	x0, [sp, #152]
  4046b0:	add	x0, x0, #0x1e9
  4046b4:	bl	40444c <ntp_ts_to_usec>
  4046b8:	mov	x21, x0
  4046bc:	ldr	x0, [sp, #152]
  4046c0:	add	x0, x0, #0x208
  4046c4:	bl	402b10 <timespec_load@plt>
  4046c8:	mov	x2, x0
  4046cc:	ldr	x0, [sp, #152]
  4046d0:	ldrb	w0, [x0, #536]
  4046d4:	mov	w3, w0
  4046d8:	ldr	x0, [sp, #152]
  4046dc:	ldr	x1, [x0, #144]
  4046e0:	ldr	x0, [sp, #152]
  4046e4:	ldr	d0, [x0, #392]
  4046e8:	mov	x0, #0x848000000000        	// #145685290680320
  4046ec:	movk	x0, #0x412e, lsl #48
  4046f0:	fmov	d1, x0
  4046f4:	fmul	d0, d0, d1
  4046f8:	fcvtzu	d0, d0
  4046fc:	str	d0, [sp]
  404700:	mov	x7, x1
  404704:	mov	w6, w3
  404708:	mov	x5, x2
  40470c:	mov	x4, x21
  404710:	mov	x3, x20
  404714:	mov	x2, x19
  404718:	adrp	x0, 40b000 <server_name_free+0x418>
  40471c:	add	x1, x0, #0xd38
  404720:	ldr	x0, [sp, #104]
  404724:	bl	4027a0 <sd_bus_message_append@plt>
  404728:	str	w0, [sp, #148]
  40472c:	ldr	w0, [sp, #148]
  404730:	cmp	w0, #0x0
  404734:	b.ge	404740 <property_get_ntp_message+0x284>  // b.tcont
  404738:	ldr	w0, [sp, #148]
  40473c:	b	404748 <property_get_ntp_message+0x28c>
  404740:	ldr	x0, [sp, #104]
  404744:	bl	402c00 <sd_bus_message_close_container@plt>
  404748:	ldp	x19, x20, [sp, #32]
  40474c:	ldp	x21, x22, [sp, #48]
  404750:	ldp	x23, x24, [sp, #64]
  404754:	ldp	x29, x30, [sp, #16]
  404758:	add	sp, sp, #0xa0
  40475c:	ret

0000000000404760 <manager_connect_bus>:
  404760:	stp	x29, x30, [sp, #-96]!
  404764:	mov	x29, sp
  404768:	str	x0, [sp, #24]
  40476c:	ldr	x0, [sp, #24]
  404770:	cmp	x0, #0x0
  404774:	cset	w0, eq  // eq = none
  404778:	and	w0, w0, #0xff
  40477c:	and	x0, x0, #0xff
  404780:	cmp	x0, #0x0
  404784:	b.eq	4047b0 <manager_connect_bus+0x50>  // b.none
  404788:	adrp	x0, 40b000 <server_name_free+0x418>
  40478c:	add	x1, x0, #0xc7b
  404790:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404794:	add	x4, x0, #0x2d8
  404798:	mov	w3, #0xb3                  	// #179
  40479c:	mov	x2, x1
  4047a0:	adrp	x0, 40b000 <server_name_free+0x418>
  4047a4:	add	x1, x0, #0xd10
  4047a8:	mov	w0, #0x0                   	// #0
  4047ac:	bl	4027f0 <log_assert_failed_realm@plt>
  4047b0:	ldr	x0, [sp, #24]
  4047b4:	ldr	x0, [x0]
  4047b8:	cmp	x0, #0x0
  4047bc:	b.eq	4047c8 <manager_connect_bus+0x68>  // b.none
  4047c0:	mov	w0, #0x0                   	// #0
  4047c4:	b	404ab8 <manager_connect_bus+0x358>
  4047c8:	ldr	x2, [sp, #24]
  4047cc:	adrp	x0, 40b000 <server_name_free+0x418>
  4047d0:	add	x1, x0, #0xe50
  4047d4:	mov	x0, x2
  4047d8:	bl	4026b0 <bus_open_system_watch_bind_with_description@plt>
  4047dc:	str	w0, [sp, #44]
  4047e0:	ldr	w0, [sp, #44]
  4047e4:	cmp	w0, #0x0
  4047e8:	b.ge	404874 <manager_connect_bus+0x114>  // b.tcont
  4047ec:	mov	w0, #0x3                   	// #3
  4047f0:	str	w0, [sp, #84]
  4047f4:	ldr	w0, [sp, #44]
  4047f8:	str	w0, [sp, #88]
  4047fc:	str	wzr, [sp, #92]
  404800:	ldr	w0, [sp, #92]
  404804:	bl	402bf0 <log_get_max_level_realm@plt>
  404808:	mov	w1, w0
  40480c:	ldr	w0, [sp, #84]
  404810:	and	w0, w0, #0x7
  404814:	cmp	w1, w0
  404818:	b.lt	40485c <manager_connect_bus+0xfc>  // b.tstop
  40481c:	ldr	w0, [sp, #92]
  404820:	lsl	w1, w0, #10
  404824:	ldr	w0, [sp, #84]
  404828:	orr	w6, w1, w0
  40482c:	adrp	x0, 40b000 <server_name_free+0x418>
  404830:	add	x1, x0, #0xc7b
  404834:	adrp	x0, 40b000 <server_name_free+0x418>
  404838:	add	x5, x0, #0xe68
  40483c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404840:	add	x4, x0, #0x2f0
  404844:	mov	w3, #0xba                  	// #186
  404848:	mov	x2, x1
  40484c:	ldr	w1, [sp, #88]
  404850:	mov	w0, w6
  404854:	bl	4029d0 <log_internal_realm@plt>
  404858:	b	404ab8 <manager_connect_bus+0x358>
  40485c:	ldr	w0, [sp, #88]
  404860:	cmp	w0, #0x0
  404864:	cneg	w0, w0, lt  // lt = tstop
  404868:	and	w0, w0, #0xff
  40486c:	neg	w0, w0
  404870:	b	404ab8 <manager_connect_bus+0x358>
  404874:	ldr	x0, [sp, #24]
  404878:	ldr	x6, [x0]
  40487c:	ldr	x5, [sp, #24]
  404880:	adrp	x0, 40b000 <server_name_free+0x418>
  404884:	add	x4, x0, #0xf60
  404888:	adrp	x0, 40b000 <server_name_free+0x418>
  40488c:	add	x3, x0, #0xe88
  404890:	adrp	x0, 40b000 <server_name_free+0x418>
  404894:	add	x2, x0, #0xeb0
  404898:	mov	x1, #0x0                   	// #0
  40489c:	mov	x0, x6
  4048a0:	bl	402910 <sd_bus_add_object_vtable@plt>
  4048a4:	str	w0, [sp, #44]
  4048a8:	ldr	w0, [sp, #44]
  4048ac:	cmp	w0, #0x0
  4048b0:	b.ge	40493c <manager_connect_bus+0x1dc>  // b.tcont
  4048b4:	mov	w0, #0x3                   	// #3
  4048b8:	str	w0, [sp, #72]
  4048bc:	ldr	w0, [sp, #44]
  4048c0:	str	w0, [sp, #76]
  4048c4:	str	wzr, [sp, #80]
  4048c8:	ldr	w0, [sp, #80]
  4048cc:	bl	402bf0 <log_get_max_level_realm@plt>
  4048d0:	mov	w1, w0
  4048d4:	ldr	w0, [sp, #72]
  4048d8:	and	w0, w0, #0x7
  4048dc:	cmp	w1, w0
  4048e0:	b.lt	404924 <manager_connect_bus+0x1c4>  // b.tstop
  4048e4:	ldr	w0, [sp, #80]
  4048e8:	lsl	w1, w0, #10
  4048ec:	ldr	w0, [sp, #72]
  4048f0:	orr	w6, w1, w0
  4048f4:	adrp	x0, 40b000 <server_name_free+0x418>
  4048f8:	add	x1, x0, #0xc7b
  4048fc:	adrp	x0, 40b000 <server_name_free+0x418>
  404900:	add	x5, x0, #0xed0
  404904:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404908:	add	x4, x0, #0x2f0
  40490c:	mov	w3, #0xbe                  	// #190
  404910:	mov	x2, x1
  404914:	ldr	w1, [sp, #76]
  404918:	mov	w0, w6
  40491c:	bl	4029d0 <log_internal_realm@plt>
  404920:	b	404ab8 <manager_connect_bus+0x358>
  404924:	ldr	w0, [sp, #76]
  404928:	cmp	w0, #0x0
  40492c:	cneg	w0, w0, lt  // lt = tstop
  404930:	and	w0, w0, #0xff
  404934:	neg	w0, w0
  404938:	b	404ab8 <manager_connect_bus+0x358>
  40493c:	ldr	x0, [sp, #24]
  404940:	ldr	x6, [x0]
  404944:	mov	x5, #0x0                   	// #0
  404948:	mov	x4, #0x0                   	// #0
  40494c:	mov	x3, #0x0                   	// #0
  404950:	adrp	x0, 40b000 <server_name_free+0x418>
  404954:	add	x2, x0, #0xef8
  404958:	mov	x1, #0x0                   	// #0
  40495c:	mov	x0, x6
  404960:	bl	402680 <sd_bus_request_name_async@plt>
  404964:	str	w0, [sp, #44]
  404968:	ldr	w0, [sp, #44]
  40496c:	cmp	w0, #0x0
  404970:	b.ge	4049fc <manager_connect_bus+0x29c>  // b.tcont
  404974:	mov	w0, #0x3                   	// #3
  404978:	str	w0, [sp, #60]
  40497c:	ldr	w0, [sp, #44]
  404980:	str	w0, [sp, #64]
  404984:	str	wzr, [sp, #68]
  404988:	ldr	w0, [sp, #68]
  40498c:	bl	402bf0 <log_get_max_level_realm@plt>
  404990:	mov	w1, w0
  404994:	ldr	w0, [sp, #60]
  404998:	and	w0, w0, #0x7
  40499c:	cmp	w1, w0
  4049a0:	b.lt	4049e4 <manager_connect_bus+0x284>  // b.tstop
  4049a4:	ldr	w0, [sp, #68]
  4049a8:	lsl	w1, w0, #10
  4049ac:	ldr	w0, [sp, #60]
  4049b0:	orr	w6, w1, w0
  4049b4:	adrp	x0, 40b000 <server_name_free+0x418>
  4049b8:	add	x1, x0, #0xc7b
  4049bc:	adrp	x0, 40b000 <server_name_free+0x418>
  4049c0:	add	x5, x0, #0xf18
  4049c4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4049c8:	add	x4, x0, #0x2f0
  4049cc:	mov	w3, #0xc2                  	// #194
  4049d0:	mov	x2, x1
  4049d4:	ldr	w1, [sp, #64]
  4049d8:	mov	w0, w6
  4049dc:	bl	4029d0 <log_internal_realm@plt>
  4049e0:	b	404ab8 <manager_connect_bus+0x358>
  4049e4:	ldr	w0, [sp, #64]
  4049e8:	cmp	w0, #0x0
  4049ec:	cneg	w0, w0, lt  // lt = tstop
  4049f0:	and	w0, w0, #0xff
  4049f4:	neg	w0, w0
  4049f8:	b	404ab8 <manager_connect_bus+0x358>
  4049fc:	ldr	x0, [sp, #24]
  404a00:	ldr	x3, [x0]
  404a04:	ldr	x0, [sp, #24]
  404a08:	ldr	x0, [x0, #8]
  404a0c:	mov	w2, #0x0                   	// #0
  404a10:	mov	x1, x0
  404a14:	mov	x0, x3
  404a18:	bl	402840 <sd_bus_attach_event@plt>
  404a1c:	str	w0, [sp, #44]
  404a20:	ldr	w0, [sp, #44]
  404a24:	cmp	w0, #0x0
  404a28:	b.ge	404ab4 <manager_connect_bus+0x354>  // b.tcont
  404a2c:	mov	w0, #0x3                   	// #3
  404a30:	str	w0, [sp, #48]
  404a34:	ldr	w0, [sp, #44]
  404a38:	str	w0, [sp, #52]
  404a3c:	str	wzr, [sp, #56]
  404a40:	ldr	w0, [sp, #56]
  404a44:	bl	402bf0 <log_get_max_level_realm@plt>
  404a48:	mov	w1, w0
  404a4c:	ldr	w0, [sp, #48]
  404a50:	and	w0, w0, #0x7
  404a54:	cmp	w1, w0
  404a58:	b.lt	404a9c <manager_connect_bus+0x33c>  // b.tstop
  404a5c:	ldr	w0, [sp, #56]
  404a60:	lsl	w1, w0, #10
  404a64:	ldr	w0, [sp, #48]
  404a68:	orr	w6, w1, w0
  404a6c:	adrp	x0, 40b000 <server_name_free+0x418>
  404a70:	add	x1, x0, #0xc7b
  404a74:	adrp	x0, 40b000 <server_name_free+0x418>
  404a78:	add	x5, x0, #0xf38
  404a7c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404a80:	add	x4, x0, #0x2f0
  404a84:	mov	w3, #0xc6                  	// #198
  404a88:	mov	x2, x1
  404a8c:	ldr	w1, [sp, #52]
  404a90:	mov	w0, w6
  404a94:	bl	4029d0 <log_internal_realm@plt>
  404a98:	b	404ab8 <manager_connect_bus+0x358>
  404a9c:	ldr	w0, [sp, #52]
  404aa0:	cmp	w0, #0x0
  404aa4:	cneg	w0, w0, lt  // lt = tstop
  404aa8:	and	w0, w0, #0xff
  404aac:	neg	w0, w0
  404ab0:	b	404ab8 <manager_connect_bus+0x358>
  404ab4:	mov	w0, #0x0                   	// #0
  404ab8:	ldp	x29, x30, [sp], #96
  404abc:	ret

0000000000404ac0 <freep>:
  404ac0:	stp	x29, x30, [sp, #-32]!
  404ac4:	mov	x29, sp
  404ac8:	str	x0, [sp, #24]
  404acc:	ldr	x0, [sp, #24]
  404ad0:	ldr	x0, [x0]
  404ad4:	bl	402b30 <free@plt>
  404ad8:	nop
  404adc:	ldp	x29, x30, [sp], #32
  404ae0:	ret

0000000000404ae4 <streq_ptr>:
  404ae4:	stp	x29, x30, [sp, #-32]!
  404ae8:	mov	x29, sp
  404aec:	str	x0, [sp, #24]
  404af0:	str	x1, [sp, #16]
  404af4:	ldr	x1, [sp, #16]
  404af8:	ldr	x0, [sp, #24]
  404afc:	bl	402610 <strcmp_ptr@plt>
  404b00:	cmp	w0, #0x0
  404b04:	cset	w0, eq  // eq = none
  404b08:	and	w0, w0, #0xff
  404b0c:	ldp	x29, x30, [sp], #32
  404b10:	ret

0000000000404b14 <isempty>:
  404b14:	sub	sp, sp, #0x10
  404b18:	str	x0, [sp, #8]
  404b1c:	ldr	x0, [sp, #8]
  404b20:	cmp	x0, #0x0
  404b24:	b.eq	404b38 <isempty+0x24>  // b.none
  404b28:	ldr	x0, [sp, #8]
  404b2c:	ldrb	w0, [x0]
  404b30:	cmp	w0, #0x0
  404b34:	b.ne	404b40 <isempty+0x2c>  // b.any
  404b38:	mov	w0, #0x1                   	// #1
  404b3c:	b	404b44 <isempty+0x30>
  404b40:	mov	w0, #0x0                   	// #0
  404b44:	and	w0, w0, #0x1
  404b48:	and	w0, w0, #0xff
  404b4c:	add	sp, sp, #0x10
  404b50:	ret

0000000000404b54 <manager_parse_server_string>:
  404b54:	stp	x29, x30, [sp, #-144]!
  404b58:	mov	x29, sp
  404b5c:	stp	x19, x20, [sp, #16]
  404b60:	str	x0, [sp, #56]
  404b64:	str	w1, [sp, #52]
  404b68:	str	x2, [sp, #40]
  404b6c:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  404b70:	add	x0, x0, #0xa48
  404b74:	ldr	x1, [x0]
  404b78:	str	x1, [sp, #136]
  404b7c:	mov	x1, #0x0                   	// #0
  404b80:	ldr	x0, [sp, #56]
  404b84:	cmp	x0, #0x0
  404b88:	cset	w0, eq  // eq = none
  404b8c:	and	w0, w0, #0xff
  404b90:	and	x0, x0, #0xff
  404b94:	cmp	x0, #0x0
  404b98:	b.eq	404bc4 <manager_parse_server_string+0x70>  // b.none
  404b9c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404ba0:	add	x1, x0, #0x30b
  404ba4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404ba8:	add	x4, x0, #0x5a0
  404bac:	mov	w3, #0x10                  	// #16
  404bb0:	mov	x2, x1
  404bb4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404bb8:	add	x1, x0, #0x330
  404bbc:	mov	w0, #0x0                   	// #0
  404bc0:	bl	4027f0 <log_assert_failed_realm@plt>
  404bc4:	ldr	x0, [sp, #40]
  404bc8:	cmp	x0, #0x0
  404bcc:	cset	w0, eq  // eq = none
  404bd0:	and	w0, w0, #0xff
  404bd4:	and	x0, x0, #0xff
  404bd8:	cmp	x0, #0x0
  404bdc:	b.eq	404c08 <manager_parse_server_string+0xb4>  // b.none
  404be0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404be4:	add	x1, x0, #0x30b
  404be8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404bec:	add	x4, x0, #0x5a0
  404bf0:	mov	w3, #0x11                  	// #17
  404bf4:	mov	x2, x1
  404bf8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404bfc:	add	x1, x0, #0x338
  404c00:	mov	w0, #0x0                   	// #0
  404c04:	bl	4027f0 <log_assert_failed_realm@plt>
  404c08:	ldr	w0, [sp, #52]
  404c0c:	cmp	w0, #0x1
  404c10:	b.ne	404c20 <manager_parse_server_string+0xcc>  // b.any
  404c14:	ldr	x0, [sp, #56]
  404c18:	ldr	x0, [x0, #40]
  404c1c:	b	404c28 <manager_parse_server_string+0xd4>
  404c20:	ldr	x0, [sp, #56]
  404c24:	ldr	x0, [x0, #24]
  404c28:	str	x0, [sp, #128]
  404c2c:	ldr	w0, [sp, #52]
  404c30:	cmp	w0, #0x1
  404c34:	b.ne	404c48 <manager_parse_server_string+0xf4>  // b.any
  404c38:	ldr	x0, [sp, #56]
  404c3c:	ldrb	w1, [x0, #48]
  404c40:	orr	w1, w1, #0x1
  404c44:	strb	w1, [x0, #48]
  404c48:	str	xzr, [sp, #112]
  404c4c:	strb	wzr, [sp, #71]
  404c50:	add	x1, sp, #0x70
  404c54:	add	x0, sp, #0x28
  404c58:	mov	w3, #0x0                   	// #0
  404c5c:	mov	x2, #0x0                   	// #0
  404c60:	bl	402a80 <extract_first_word@plt>
  404c64:	str	w0, [sp, #72]
  404c68:	ldr	w0, [sp, #72]
  404c6c:	cmp	w0, #0x0
  404c70:	b.ge	404d0c <manager_parse_server_string+0x1b8>  // b.tcont
  404c74:	mov	w0, #0x3                   	// #3
  404c78:	str	w0, [sp, #100]
  404c7c:	ldr	w0, [sp, #72]
  404c80:	str	w0, [sp, #104]
  404c84:	str	wzr, [sp, #108]
  404c88:	ldr	w0, [sp, #108]
  404c8c:	bl	402bf0 <log_get_max_level_realm@plt>
  404c90:	mov	w1, w0
  404c94:	ldr	w0, [sp, #100]
  404c98:	and	w0, w0, #0x7
  404c9c:	cmp	w1, w0
  404ca0:	b.lt	404cf0 <manager_parse_server_string+0x19c>  // b.tstop
  404ca4:	ldr	w0, [sp, #108]
  404ca8:	lsl	w1, w0, #10
  404cac:	ldr	w0, [sp, #100]
  404cb0:	orr	w7, w1, w0
  404cb4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404cb8:	add	x1, x0, #0x30b
  404cbc:	ldr	x0, [sp, #40]
  404cc0:	mov	x6, x0
  404cc4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404cc8:	add	x5, x0, #0x340
  404ccc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404cd0:	add	x4, x0, #0x5c0
  404cd4:	mov	w3, #0x1f                  	// #31
  404cd8:	mov	x2, x1
  404cdc:	ldr	w1, [sp, #104]
  404ce0:	mov	w0, w7
  404ce4:	bl	4029d0 <log_internal_realm@plt>
  404ce8:	mov	w20, w0
  404cec:	b	404d04 <manager_parse_server_string+0x1b0>
  404cf0:	ldr	w0, [sp, #104]
  404cf4:	cmp	w0, #0x0
  404cf8:	cneg	w0, w0, lt  // lt = tstop
  404cfc:	and	w0, w0, #0xff
  404d00:	neg	w20, w0
  404d04:	mov	w19, #0x0                   	// #0
  404d08:	b	404ef8 <manager_parse_server_string+0x3a4>
  404d0c:	ldr	w0, [sp, #72]
  404d10:	cmp	w0, #0x0
  404d14:	b.ne	404d20 <manager_parse_server_string+0x1cc>  // b.any
  404d18:	mov	w19, #0x1                   	// #1
  404d1c:	b	404ef8 <manager_parse_server_string+0x3a4>
  404d20:	ldr	x0, [sp, #112]
  404d24:	bl	402600 <dns_name_is_valid_or_address@plt>
  404d28:	str	w0, [sp, #72]
  404d2c:	ldr	w0, [sp, #72]
  404d30:	cmp	w0, #0x0
  404d34:	b.ge	404dd0 <manager_parse_server_string+0x27c>  // b.tcont
  404d38:	mov	w0, #0x3                   	// #3
  404d3c:	str	w0, [sp, #88]
  404d40:	ldr	w0, [sp, #72]
  404d44:	str	w0, [sp, #92]
  404d48:	str	wzr, [sp, #96]
  404d4c:	ldr	w0, [sp, #96]
  404d50:	bl	402bf0 <log_get_max_level_realm@plt>
  404d54:	mov	w1, w0
  404d58:	ldr	w0, [sp, #88]
  404d5c:	and	w0, w0, #0x7
  404d60:	cmp	w1, w0
  404d64:	b.lt	404db4 <manager_parse_server_string+0x260>  // b.tstop
  404d68:	ldr	w0, [sp, #96]
  404d6c:	lsl	w1, w0, #10
  404d70:	ldr	w0, [sp, #88]
  404d74:	orr	w7, w1, w0
  404d78:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404d7c:	add	x1, x0, #0x30b
  404d80:	ldr	x0, [sp, #112]
  404d84:	mov	x6, x0
  404d88:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404d8c:	add	x5, x0, #0x378
  404d90:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404d94:	add	x4, x0, #0x5c0
  404d98:	mov	w3, #0x25                  	// #37
  404d9c:	mov	x2, x1
  404da0:	ldr	w1, [sp, #92]
  404da4:	mov	w0, w7
  404da8:	bl	4029d0 <log_internal_realm@plt>
  404dac:	mov	w20, w0
  404db0:	b	404dc8 <manager_parse_server_string+0x274>
  404db4:	ldr	w0, [sp, #92]
  404db8:	cmp	w0, #0x0
  404dbc:	cneg	w0, w0, lt  // lt = tstop
  404dc0:	and	w0, w0, #0xff
  404dc4:	neg	w20, w0
  404dc8:	mov	w19, #0x0                   	// #0
  404dcc:	b	404ef8 <manager_parse_server_string+0x3a4>
  404dd0:	ldr	w0, [sp, #72]
  404dd4:	cmp	w0, #0x0
  404dd8:	b.ne	404e60 <manager_parse_server_string+0x30c>  // b.any
  404ddc:	mov	w0, #0x3                   	// #3
  404de0:	str	w0, [sp, #76]
  404de4:	str	wzr, [sp, #80]
  404de8:	str	wzr, [sp, #84]
  404dec:	ldr	w0, [sp, #84]
  404df0:	bl	402bf0 <log_get_max_level_realm@plt>
  404df4:	mov	w1, w0
  404df8:	ldr	w0, [sp, #76]
  404dfc:	and	w0, w0, #0x7
  404e00:	cmp	w1, w0
  404e04:	b.lt	404e50 <manager_parse_server_string+0x2fc>  // b.tstop
  404e08:	ldr	w0, [sp, #84]
  404e0c:	lsl	w1, w0, #10
  404e10:	ldr	w0, [sp, #76]
  404e14:	orr	w7, w1, w0
  404e18:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404e1c:	add	x1, x0, #0x30b
  404e20:	ldr	x0, [sp, #112]
  404e24:	mov	x6, x0
  404e28:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404e2c:	add	x5, x0, #0x3b8
  404e30:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404e34:	add	x4, x0, #0x5c0
  404e38:	mov	w3, #0x27                  	// #39
  404e3c:	mov	x2, x1
  404e40:	ldr	w1, [sp, #80]
  404e44:	mov	w0, w7
  404e48:	bl	4029d0 <log_internal_realm@plt>
  404e4c:	b	404e58 <manager_parse_server_string+0x304>
  404e50:	ldr	w0, [sp, #80]
  404e54:	cmp	w0, #0x0
  404e58:	mov	w19, #0x2                   	// #2
  404e5c:	b	404ef8 <manager_parse_server_string+0x3a4>
  404e60:	ldr	x0, [sp, #128]
  404e64:	str	x0, [sp, #120]
  404e68:	b	404ea0 <manager_parse_server_string+0x34c>
  404e6c:	ldr	x0, [sp, #120]
  404e70:	ldr	x0, [x0, #16]
  404e74:	ldr	x1, [sp, #112]
  404e78:	bl	404ae4 <streq_ptr>
  404e7c:	and	w0, w0, #0xff
  404e80:	cmp	w0, #0x0
  404e84:	b.eq	404e94 <manager_parse_server_string+0x340>  // b.none
  404e88:	mov	w0, #0x1                   	// #1
  404e8c:	strb	w0, [sp, #71]
  404e90:	b	404eac <manager_parse_server_string+0x358>
  404e94:	ldr	x0, [sp, #120]
  404e98:	ldr	x0, [x0, #40]
  404e9c:	str	x0, [sp, #120]
  404ea0:	ldr	x0, [sp, #120]
  404ea4:	cmp	x0, #0x0
  404ea8:	b.ne	404e6c <manager_parse_server_string+0x318>  // b.any
  404eac:	ldrb	w0, [sp, #71]
  404eb0:	cmp	w0, #0x0
  404eb4:	b.eq	404ec0 <manager_parse_server_string+0x36c>  // b.none
  404eb8:	mov	w19, #0x2                   	// #2
  404ebc:	b	404ef8 <manager_parse_server_string+0x3a4>
  404ec0:	ldr	x0, [sp, #112]
  404ec4:	mov	x3, x0
  404ec8:	ldr	w2, [sp, #52]
  404ecc:	mov	x1, #0x0                   	// #0
  404ed0:	ldr	x0, [sp, #56]
  404ed4:	bl	40a5e8 <server_name_new>
  404ed8:	str	w0, [sp, #72]
  404edc:	ldr	w0, [sp, #72]
  404ee0:	cmp	w0, #0x0
  404ee4:	b.ge	404ef4 <manager_parse_server_string+0x3a0>  // b.tcont
  404ee8:	ldr	w20, [sp, #72]
  404eec:	mov	w19, #0x0                   	// #0
  404ef0:	b	404ef8 <manager_parse_server_string+0x3a4>
  404ef4:	mov	w19, #0x3                   	// #3
  404ef8:	add	x0, sp, #0x70
  404efc:	bl	404ac0 <freep>
  404f00:	cmp	w19, #0x3
  404f04:	b.eq	404f28 <manager_parse_server_string+0x3d4>  // b.none
  404f08:	cmp	w19, #0x3
  404f0c:	b.gt	404c48 <manager_parse_server_string+0xf4>
  404f10:	cmp	w19, #0x0
  404f14:	b.eq	404f2c <manager_parse_server_string+0x3d8>  // b.none
  404f18:	cmp	w19, #0x1
  404f1c:	b.ne	404f28 <manager_parse_server_string+0x3d4>  // b.any
  404f20:	mov	w20, #0x0                   	// #0
  404f24:	b	404f2c <manager_parse_server_string+0x3d8>
  404f28:	b	404c48 <manager_parse_server_string+0xf4>
  404f2c:	mov	w1, w20
  404f30:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  404f34:	add	x0, x0, #0xa48
  404f38:	ldr	x2, [sp, #136]
  404f3c:	ldr	x0, [x0]
  404f40:	eor	x0, x2, x0
  404f44:	cmp	x0, #0x0
  404f48:	b.eq	404f50 <manager_parse_server_string+0x3fc>  // b.none
  404f4c:	bl	402930 <__stack_chk_fail@plt>
  404f50:	mov	w0, w1
  404f54:	ldp	x19, x20, [sp, #16]
  404f58:	ldp	x29, x30, [sp], #144
  404f5c:	ret

0000000000404f60 <manager_parse_fallback_string>:
  404f60:	stp	x29, x30, [sp, #-32]!
  404f64:	mov	x29, sp
  404f68:	str	x0, [sp, #24]
  404f6c:	str	x1, [sp, #16]
  404f70:	ldr	x0, [sp, #24]
  404f74:	ldrb	w0, [x0, #48]
  404f78:	and	w0, w0, #0x1
  404f7c:	and	w0, w0, #0xff
  404f80:	cmp	w0, #0x0
  404f84:	b.eq	404f90 <manager_parse_fallback_string+0x30>  // b.none
  404f88:	mov	w0, #0x0                   	// #0
  404f8c:	b	404fa0 <manager_parse_fallback_string+0x40>
  404f90:	ldr	x2, [sp, #16]
  404f94:	mov	w1, #0x1                   	// #1
  404f98:	ldr	x0, [sp, #24]
  404f9c:	bl	404b54 <manager_parse_server_string>
  404fa0:	ldp	x29, x30, [sp], #32
  404fa4:	ret

0000000000404fa8 <config_parse_servers>:
  404fa8:	sub	sp, sp, #0x80
  404fac:	stp	x29, x30, [sp, #16]
  404fb0:	add	x29, sp, #0x10
  404fb4:	str	x0, [sp, #88]
  404fb8:	str	x1, [sp, #80]
  404fbc:	str	w2, [sp, #76]
  404fc0:	str	x3, [sp, #64]
  404fc4:	str	w4, [sp, #72]
  404fc8:	str	x5, [sp, #56]
  404fcc:	str	w6, [sp, #52]
  404fd0:	str	x7, [sp, #40]
  404fd4:	ldr	x0, [sp, #136]
  404fd8:	str	x0, [sp, #120]
  404fdc:	ldr	x0, [sp, #80]
  404fe0:	cmp	x0, #0x0
  404fe4:	cset	w0, eq  // eq = none
  404fe8:	and	w0, w0, #0xff
  404fec:	and	x0, x0, #0xff
  404ff0:	cmp	x0, #0x0
  404ff4:	b.eq	405020 <config_parse_servers+0x78>  // b.none
  404ff8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  404ffc:	add	x1, x0, #0x30b
  405000:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405004:	add	x4, x0, #0x5e0
  405008:	mov	w3, #0x53                  	// #83
  40500c:	mov	x2, x1
  405010:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405014:	add	x1, x0, #0x3f0
  405018:	mov	w0, #0x0                   	// #0
  40501c:	bl	4027f0 <log_assert_failed_realm@plt>
  405020:	ldr	x0, [sp, #56]
  405024:	cmp	x0, #0x0
  405028:	cset	w0, eq  // eq = none
  40502c:	and	w0, w0, #0xff
  405030:	and	x0, x0, #0xff
  405034:	cmp	x0, #0x0
  405038:	b.eq	405064 <config_parse_servers+0xbc>  // b.none
  40503c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405040:	add	x1, x0, #0x30b
  405044:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405048:	add	x4, x0, #0x5e0
  40504c:	mov	w3, #0x54                  	// #84
  405050:	mov	x2, x1
  405054:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405058:	add	x1, x0, #0x400
  40505c:	mov	w0, #0x0                   	// #0
  405060:	bl	4027f0 <log_assert_failed_realm@plt>
  405064:	ldr	x0, [sp, #40]
  405068:	cmp	x0, #0x0
  40506c:	cset	w0, eq  // eq = none
  405070:	and	w0, w0, #0xff
  405074:	and	x0, x0, #0xff
  405078:	cmp	x0, #0x0
  40507c:	b.eq	4050a8 <config_parse_servers+0x100>  // b.none
  405080:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405084:	add	x1, x0, #0x30b
  405088:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40508c:	add	x4, x0, #0x5e0
  405090:	mov	w3, #0x55                  	// #85
  405094:	mov	x2, x1
  405098:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40509c:	add	x1, x0, #0x408
  4050a0:	mov	w0, #0x0                   	// #0
  4050a4:	bl	4027f0 <log_assert_failed_realm@plt>
  4050a8:	ldr	x0, [sp, #40]
  4050ac:	bl	404b14 <isempty>
  4050b0:	and	w0, w0, #0xff
  4050b4:	cmp	w0, #0x0
  4050b8:	b.eq	4050d0 <config_parse_servers+0x128>  // b.none
  4050bc:	ldr	w0, [sp, #52]
  4050c0:	mov	w1, w0
  4050c4:	ldr	x0, [sp, #120]
  4050c8:	bl	409518 <manager_flush_server_names>
  4050cc:	b	405178 <config_parse_servers+0x1d0>
  4050d0:	ldr	w0, [sp, #52]
  4050d4:	ldr	x2, [sp, #40]
  4050d8:	mov	w1, w0
  4050dc:	ldr	x0, [sp, #120]
  4050e0:	bl	404b54 <manager_parse_server_string>
  4050e4:	str	w0, [sp, #108]
  4050e8:	ldr	w0, [sp, #108]
  4050ec:	cmp	w0, #0x0
  4050f0:	b.ge	405178 <config_parse_servers+0x1d0>  // b.tcont
  4050f4:	mov	w0, #0x3                   	// #3
  4050f8:	str	w0, [sp, #112]
  4050fc:	ldr	w0, [sp, #108]
  405100:	str	w0, [sp, #116]
  405104:	mov	w0, #0x0                   	// #0
  405108:	bl	402bf0 <log_get_max_level_realm@plt>
  40510c:	mov	w1, w0
  405110:	ldr	w0, [sp, #112]
  405114:	and	w0, w0, #0x7
  405118:	cmp	w1, w0
  40511c:	b.lt	405168 <config_parse_servers+0x1c0>  // b.tstop
  405120:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405124:	add	x1, x0, #0x30b
  405128:	ldr	x0, [sp, #40]
  40512c:	str	x0, [sp, #8]
  405130:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405134:	add	x0, x0, #0x410
  405138:	str	x0, [sp]
  40513c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405140:	add	x7, x0, #0x5f8
  405144:	mov	w6, #0x5c                  	// #92
  405148:	mov	x5, x1
  40514c:	ldr	w4, [sp, #116]
  405150:	ldr	w3, [sp, #76]
  405154:	ldr	x2, [sp, #80]
  405158:	ldr	w1, [sp, #112]
  40515c:	ldr	x0, [sp, #88]
  405160:	bl	402a40 <log_syntax_internal@plt>
  405164:	b	405170 <config_parse_servers+0x1c8>
  405168:	ldr	w0, [sp, #116]
  40516c:	cmp	w0, #0x0
  405170:	mov	w0, #0x0                   	// #0
  405174:	b	40517c <config_parse_servers+0x1d4>
  405178:	mov	w0, #0x0                   	// #0
  40517c:	ldp	x29, x30, [sp, #16]
  405180:	add	sp, sp, #0x80
  405184:	ret

0000000000405188 <manager_parse_config_file>:
  405188:	stp	x29, x30, [sp, #-80]!
  40518c:	mov	x29, sp
  405190:	str	x0, [sp, #24]
  405194:	ldr	x0, [sp, #24]
  405198:	cmp	x0, #0x0
  40519c:	cset	w0, eq  // eq = none
  4051a0:	and	w0, w0, #0xff
  4051a4:	and	x0, x0, #0xff
  4051a8:	cmp	x0, #0x0
  4051ac:	b.eq	4051d8 <manager_parse_config_file+0x50>  // b.none
  4051b0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4051b4:	add	x1, x0, #0x30b
  4051b8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4051bc:	add	x4, x0, #0x610
  4051c0:	mov	w3, #0x67                  	// #103
  4051c4:	mov	x2, x1
  4051c8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4051cc:	add	x1, x0, #0x330
  4051d0:	mov	w0, #0x0                   	// #0
  4051d4:	bl	4027f0 <log_assert_failed_realm@plt>
  4051d8:	ldr	x6, [sp, #24]
  4051dc:	mov	w5, #0x4                   	// #4
  4051e0:	adrp	x0, 402000 <_init-0x588>
  4051e4:	add	x4, x0, #0xe4c
  4051e8:	adrp	x0, 402000 <_init-0x588>
  4051ec:	add	x3, x0, #0x7d0
  4051f0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4051f4:	add	x2, x0, #0x448
  4051f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4051fc:	add	x1, x0, #0x450
  405200:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405204:	add	x0, x0, #0x4f8
  405208:	bl	402b40 <config_parse_many_nulstr@plt>
  40520c:	str	w0, [sp, #36]
  405210:	ldr	w0, [sp, #36]
  405214:	cmp	w0, #0x0
  405218:	b.ge	405224 <manager_parse_config_file+0x9c>  // b.tcont
  40521c:	ldr	w0, [sp, #36]
  405220:	b	405384 <manager_parse_config_file+0x1fc>
  405224:	ldr	x0, [sp, #24]
  405228:	ldr	x1, [x0, #232]
  40522c:	mov	x0, #0x23ff                	// #9215
  405230:	movk	x0, #0xf4, lsl #16
  405234:	cmp	x1, x0
  405238:	b.hi	4052c0 <manager_parse_config_file+0x138>  // b.pmore
  40523c:	mov	w0, #0x4                   	// #4
  405240:	str	w0, [sp, #40]
  405244:	str	wzr, [sp, #44]
  405248:	str	wzr, [sp, #48]
  40524c:	ldr	w0, [sp, #48]
  405250:	bl	402bf0 <log_get_max_level_realm@plt>
  405254:	mov	w1, w0
  405258:	ldr	w0, [sp, #40]
  40525c:	and	w0, w0, #0x7
  405260:	cmp	w1, w0
  405264:	b.lt	4052a8 <manager_parse_config_file+0x120>  // b.tstop
  405268:	ldr	w0, [sp, #48]
  40526c:	lsl	w1, w0, #10
  405270:	ldr	w0, [sp, #40]
  405274:	orr	w6, w1, w0
  405278:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40527c:	add	x1, x0, #0x30b
  405280:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405284:	add	x5, x0, #0x518
  405288:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40528c:	add	x4, x0, #0x630
  405290:	mov	w3, #0x72                  	// #114
  405294:	mov	x2, x1
  405298:	ldr	w1, [sp, #44]
  40529c:	mov	w0, w6
  4052a0:	bl	4029d0 <log_internal_realm@plt>
  4052a4:	b	4052b0 <manager_parse_config_file+0x128>
  4052a8:	ldr	w0, [sp, #44]
  4052ac:	cmp	w0, #0x0
  4052b0:	ldr	x0, [sp, #24]
  4052b4:	mov	x1, #0x4800                	// #18432
  4052b8:	movk	x1, #0x1e8, lsl #16
  4052bc:	str	x1, [x0, #232]
  4052c0:	ldr	x0, [sp, #24]
  4052c4:	ldr	x1, [x0, #240]
  4052c8:	ldr	x0, [sp, #24]
  4052cc:	ldr	x0, [x0, #232]
  4052d0:	cmp	x1, x0
  4052d4:	b.cs	405380 <manager_parse_config_file+0x1f8>  // b.hs, b.nlast
  4052d8:	mov	w0, #0x4                   	// #4
  4052dc:	str	w0, [sp, #52]
  4052e0:	str	wzr, [sp, #56]
  4052e4:	str	wzr, [sp, #60]
  4052e8:	ldr	w0, [sp, #60]
  4052ec:	bl	402bf0 <log_get_max_level_realm@plt>
  4052f0:	mov	w1, w0
  4052f4:	ldr	w0, [sp, #52]
  4052f8:	and	w0, w0, #0x7
  4052fc:	cmp	w1, w0
  405300:	b.lt	405344 <manager_parse_config_file+0x1bc>  // b.tstop
  405304:	ldr	w0, [sp, #60]
  405308:	lsl	w1, w0, #10
  40530c:	ldr	w0, [sp, #52]
  405310:	orr	w6, w1, w0
  405314:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405318:	add	x1, x0, #0x30b
  40531c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405320:	add	x5, x0, #0x550
  405324:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405328:	add	x4, x0, #0x630
  40532c:	mov	w3, #0x77                  	// #119
  405330:	mov	x2, x1
  405334:	ldr	w1, [sp, #56]
  405338:	mov	w0, w6
  40533c:	bl	4029d0 <log_internal_realm@plt>
  405340:	b	40534c <manager_parse_config_file+0x1c4>
  405344:	ldr	w0, [sp, #56]
  405348:	cmp	w0, #0x0
  40534c:	mov	x0, #0x7a120000            	// #2048000000
  405350:	str	x0, [sp, #64]
  405354:	ldr	x0, [sp, #24]
  405358:	ldr	x0, [x0, #232]
  40535c:	lsl	x0, x0, #5
  405360:	str	x0, [sp, #72]
  405364:	ldr	x0, [sp, #64]
  405368:	ldr	x2, [sp, #72]
  40536c:	ldr	x1, [sp, #72]
  405370:	cmp	x2, x0
  405374:	csel	x1, x1, x0, cs  // cs = hs, nlast
  405378:	ldr	x0, [sp, #24]
  40537c:	str	x1, [x0, #240]
  405380:	ldr	w0, [sp, #36]
  405384:	ldp	x29, x30, [sp], #80
  405388:	ret

000000000040538c <__bswap_16>:
  40538c:	sub	sp, sp, #0x10
  405390:	strh	w0, [sp, #14]
  405394:	ldrh	w0, [sp, #14]
  405398:	rev16	w0, w0
  40539c:	and	w0, w0, #0xffff
  4053a0:	add	sp, sp, #0x10
  4053a4:	ret

00000000004053a8 <__bswap_32>:
  4053a8:	sub	sp, sp, #0x10
  4053ac:	str	w0, [sp, #12]
  4053b0:	ldr	w0, [sp, #12]
  4053b4:	rev	w0, w0
  4053b8:	add	sp, sp, #0x10
  4053bc:	ret

00000000004053c0 <freep>:
  4053c0:	stp	x29, x30, [sp, #-32]!
  4053c4:	mov	x29, sp
  4053c8:	str	x0, [sp, #24]
  4053cc:	ldr	x0, [sp, #24]
  4053d0:	ldr	x0, [x0]
  4053d4:	bl	402b30 <free@plt>
  4053d8:	nop
  4053dc:	ldp	x29, x30, [sp], #32
  4053e0:	ret

00000000004053e4 <log2i>:
  4053e4:	stp	x29, x30, [sp, #-32]!
  4053e8:	mov	x29, sp
  4053ec:	str	w0, [sp, #28]
  4053f0:	ldr	w0, [sp, #28]
  4053f4:	cmp	w0, #0x0
  4053f8:	cset	w0, le
  4053fc:	and	w0, w0, #0xff
  405400:	and	x0, x0, #0xff
  405404:	cmp	x0, #0x0
  405408:	b.eq	405434 <log2i+0x50>  // b.none
  40540c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405410:	add	x1, x0, #0x653
  405414:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405418:	add	x4, x0, #0x3f8
  40541c:	mov	w3, #0x2a                  	// #42
  405420:	mov	x2, x1
  405424:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405428:	add	x1, x0, #0x668
  40542c:	mov	w0, #0x0                   	// #0
  405430:	bl	4027f0 <log_assert_failed_realm@plt>
  405434:	ldr	w0, [sp, #28]
  405438:	clz	w0, w0
  40543c:	mov	w1, #0x1f                  	// #31
  405440:	sub	w0, w1, w0
  405444:	ldp	x29, x30, [sp], #32
  405448:	ret

000000000040544c <htobe32>:
  40544c:	stp	x29, x30, [sp, #-32]!
  405450:	mov	x29, sp
  405454:	str	w0, [sp, #28]
  405458:	ldr	w0, [sp, #28]
  40545c:	bl	4053a8 <__bswap_32>
  405460:	ldp	x29, x30, [sp], #32
  405464:	ret

0000000000405468 <be16toh>:
  405468:	stp	x29, x30, [sp, #-32]!
  40546c:	mov	x29, sp
  405470:	strh	w0, [sp, #30]
  405474:	ldrh	w0, [sp, #30]
  405478:	bl	40538c <__bswap_16>
  40547c:	and	w0, w0, #0xffff
  405480:	ldp	x29, x30, [sp], #32
  405484:	ret

0000000000405488 <be32toh>:
  405488:	stp	x29, x30, [sp, #-32]!
  40548c:	mov	x29, sp
  405490:	str	w0, [sp, #28]
  405494:	ldr	w0, [sp, #28]
  405498:	bl	4053a8 <__bswap_32>
  40549c:	ldp	x29, x30, [sp], #32
  4054a0:	ret

00000000004054a4 <setsockopt_int>:
  4054a4:	stp	x29, x30, [sp, #-32]!
  4054a8:	mov	x29, sp
  4054ac:	str	w0, [sp, #28]
  4054b0:	str	w1, [sp, #24]
  4054b4:	str	w2, [sp, #20]
  4054b8:	str	w3, [sp, #16]
  4054bc:	add	x0, sp, #0x10
  4054c0:	mov	w4, #0x4                   	// #4
  4054c4:	mov	x3, x0
  4054c8:	ldr	w2, [sp, #20]
  4054cc:	ldr	w1, [sp, #24]
  4054d0:	ldr	w0, [sp, #28]
  4054d4:	bl	402af0 <setsockopt@plt>
  4054d8:	cmp	w0, #0x0
  4054dc:	b.ge	4054f0 <setsockopt_int+0x4c>  // b.tcont
  4054e0:	bl	4028c0 <__errno_location@plt>
  4054e4:	ldr	w0, [x0]
  4054e8:	neg	w0, w0
  4054ec:	b	4054f4 <setsockopt_int+0x50>
  4054f0:	mov	w0, #0x0                   	// #0
  4054f4:	ldp	x29, x30, [sp], #32
  4054f8:	ret

00000000004054fc <strna>:
  4054fc:	sub	sp, sp, #0x10
  405500:	str	x0, [sp, #8]
  405504:	ldr	x0, [sp, #8]
  405508:	cmp	x0, #0x0
  40550c:	b.ne	405518 <strna+0x1c>  // b.any
  405510:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405514:	add	x0, x0, #0x670
  405518:	add	sp, sp, #0x10
  40551c:	ret

0000000000405520 <strv_freep>:
  405520:	stp	x29, x30, [sp, #-32]!
  405524:	mov	x29, sp
  405528:	str	x0, [sp, #24]
  40552c:	ldr	x0, [sp, #24]
  405530:	ldr	x0, [x0]
  405534:	cmp	x0, #0x0
  405538:	b.eq	405548 <strv_freep+0x28>  // b.none
  40553c:	ldr	x0, [sp, #24]
  405540:	ldr	x0, [x0]
  405544:	bl	4028e0 <strv_free@plt>
  405548:	nop
  40554c:	ldp	x29, x30, [sp], #32
  405550:	ret

0000000000405554 <server_address_pretty>:
  405554:	stp	x29, x30, [sp, #-32]!
  405558:	mov	x29, sp
  40555c:	str	x0, [sp, #24]
  405560:	str	x1, [sp, #16]
  405564:	ldr	x0, [sp, #24]
  405568:	add	x5, x0, #0x8
  40556c:	ldr	x0, [sp, #24]
  405570:	ldr	w0, [x0, #136]
  405574:	ldr	x4, [sp, #16]
  405578:	mov	w3, #0x1                   	// #1
  40557c:	mov	w2, #0x1                   	// #1
  405580:	mov	w1, w0
  405584:	mov	x0, x5
  405588:	bl	402b80 <sockaddr_pretty@plt>
  40558c:	ldp	x29, x30, [sp], #32
  405590:	ret

0000000000405594 <manager_freep>:
  405594:	stp	x29, x30, [sp, #-32]!
  405598:	mov	x29, sp
  40559c:	str	x0, [sp, #24]
  4055a0:	ldr	x0, [sp, #24]
  4055a4:	ldr	x0, [x0]
  4055a8:	cmp	x0, #0x0
  4055ac:	b.eq	4055bc <manager_freep+0x28>  // b.none
  4055b0:	ldr	x0, [sp, #24]
  4055b4:	ldr	x0, [x0]
  4055b8:	bl	4095fc <manager_free>
  4055bc:	nop
  4055c0:	ldp	x29, x30, [sp], #32
  4055c4:	ret

00000000004055c8 <ntp_ts_short_to_d>:
  4055c8:	stp	x29, x30, [sp, #-48]!
  4055cc:	mov	x29, sp
  4055d0:	str	d8, [sp, #16]
  4055d4:	str	x0, [sp, #40]
  4055d8:	ldr	x0, [sp, #40]
  4055dc:	ldrh	w0, [x0]
  4055e0:	bl	405468 <be16toh>
  4055e4:	and	w0, w0, #0xffff
  4055e8:	scvtf	d8, w0
  4055ec:	ldr	x0, [sp, #40]
  4055f0:	ldrh	w0, [x0, #2]
  4055f4:	bl	405468 <be16toh>
  4055f8:	and	w0, w0, #0xffff
  4055fc:	scvtf	d0, w0
  405600:	mov	x0, #0x40f0000000000000    	// #4679240012837945344
  405604:	fmov	d1, x0
  405608:	fdiv	d0, d0, d1
  40560c:	fadd	d0, d8, d0
  405610:	ldr	d8, [sp, #16]
  405614:	ldp	x29, x30, [sp], #48
  405618:	ret

000000000040561c <ntp_ts_to_d>:
  40561c:	stp	x29, x30, [sp, #-48]!
  405620:	mov	x29, sp
  405624:	str	d8, [sp, #16]
  405628:	str	x0, [sp, #40]
  40562c:	ldr	x0, [sp, #40]
  405630:	ldr	w0, [x0]
  405634:	bl	405488 <be32toh>
  405638:	ucvtf	d8, w0
  40563c:	ldr	x0, [sp, #40]
  405640:	ldr	w0, [x0, #4]
  405644:	bl	405488 <be32toh>
  405648:	ucvtf	d0, w0
  40564c:	mov	x0, #0xffffffe00000        	// #281474974613504
  405650:	movk	x0, #0x41ef, lsl #48
  405654:	fmov	d1, x0
  405658:	fdiv	d0, d0, d1
  40565c:	fadd	d0, d8, d0
  405660:	ldr	d8, [sp, #16]
  405664:	ldp	x29, x30, [sp], #48
  405668:	ret

000000000040566c <ts_to_d>:
  40566c:	sub	sp, sp, #0x10
  405670:	str	x0, [sp, #8]
  405674:	ldr	x0, [sp, #8]
  405678:	ldr	d0, [x0]
  40567c:	scvtf	d1, d0
  405680:	ldr	x0, [sp, #8]
  405684:	ldr	d0, [x0, #8]
  405688:	scvtf	d0, d0
  40568c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405690:	ldr	d2, [x0, #688]
  405694:	fmul	d0, d0, d2
  405698:	fadd	d0, d1, d0
  40569c:	add	sp, sp, #0x10
  4056a0:	ret

00000000004056a4 <manager_timeout>:
  4056a4:	stp	x29, x30, [sp, #-112]!
  4056a8:	mov	x29, sp
  4056ac:	stp	x19, x20, [sp, #16]
  4056b0:	str	x0, [sp, #56]
  4056b4:	str	x1, [sp, #48]
  4056b8:	str	x2, [sp, #40]
  4056bc:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4056c0:	add	x0, x0, #0xa48
  4056c4:	ldr	x1, [x0]
  4056c8:	str	x1, [sp, #104]
  4056cc:	mov	x1, #0x0                   	// #0
  4056d0:	str	xzr, [sp, #88]
  4056d4:	ldr	x0, [sp, #40]
  4056d8:	str	x0, [sp, #96]
  4056dc:	ldr	x0, [sp, #96]
  4056e0:	cmp	x0, #0x0
  4056e4:	cset	w0, eq  // eq = none
  4056e8:	and	w0, w0, #0xff
  4056ec:	and	x0, x0, #0xff
  4056f0:	cmp	x0, #0x0
  4056f4:	b.eq	405720 <manager_timeout+0x7c>  // b.none
  4056f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4056fc:	add	x1, x0, #0x67b
  405700:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405704:	add	x4, x0, #0x2e0
  405708:	mov	w3, #0x50                  	// #80
  40570c:	mov	x2, x1
  405710:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405714:	add	x1, x0, #0x6a0
  405718:	mov	w0, #0x0                   	// #0
  40571c:	bl	4027f0 <log_assert_failed_realm@plt>
  405720:	ldr	x0, [sp, #96]
  405724:	ldr	x0, [x0, #120]
  405728:	cmp	x0, #0x0
  40572c:	cset	w0, eq  // eq = none
  405730:	and	w0, w0, #0xff
  405734:	and	x0, x0, #0xff
  405738:	cmp	x0, #0x0
  40573c:	b.eq	405768 <manager_timeout+0xc4>  // b.none
  405740:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405744:	add	x1, x0, #0x67b
  405748:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40574c:	add	x4, x0, #0x2e0
  405750:	mov	w3, #0x51                  	// #81
  405754:	mov	x2, x1
  405758:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40575c:	add	x1, x0, #0x6a8
  405760:	mov	w0, #0x0                   	// #0
  405764:	bl	4027f0 <log_assert_failed_realm@plt>
  405768:	ldr	x0, [sp, #96]
  40576c:	ldr	x0, [x0, #128]
  405770:	cmp	x0, #0x0
  405774:	cset	w0, eq  // eq = none
  405778:	and	w0, w0, #0xff
  40577c:	and	x0, x0, #0xff
  405780:	cmp	x0, #0x0
  405784:	b.eq	4057b0 <manager_timeout+0x10c>  // b.none
  405788:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40578c:	add	x1, x0, #0x67b
  405790:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405794:	add	x4, x0, #0x2e0
  405798:	mov	w3, #0x52                  	// #82
  40579c:	mov	x2, x1
  4057a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4057a4:	add	x1, x0, #0x6c0
  4057a8:	mov	w0, #0x0                   	// #0
  4057ac:	bl	4027f0 <log_assert_failed_realm@plt>
  4057b0:	ldr	x0, [sp, #96]
  4057b4:	ldr	x0, [x0, #128]
  4057b8:	add	x1, sp, #0x58
  4057bc:	bl	405554 <server_address_pretty>
  4057c0:	mov	w0, #0x6                   	// #6
  4057c4:	str	w0, [sp, #76]
  4057c8:	str	wzr, [sp, #80]
  4057cc:	str	wzr, [sp, #84]
  4057d0:	ldr	w0, [sp, #84]
  4057d4:	bl	402bf0 <log_get_max_level_realm@plt>
  4057d8:	mov	w1, w0
  4057dc:	ldr	w0, [sp, #76]
  4057e0:	and	w0, w0, #0x7
  4057e4:	cmp	w1, w0
  4057e8:	b.lt	40584c <manager_timeout+0x1a8>  // b.tstop
  4057ec:	ldr	w0, [sp, #84]
  4057f0:	lsl	w1, w0, #10
  4057f4:	ldr	w0, [sp, #76]
  4057f8:	orr	w19, w1, w0
  4057fc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405800:	add	x20, x0, #0x67b
  405804:	ldr	x0, [sp, #88]
  405808:	bl	4054fc <strna>
  40580c:	mov	x1, x0
  405810:	ldr	x0, [sp, #96]
  405814:	ldr	x0, [x0, #120]
  405818:	ldr	x0, [x0, #16]
  40581c:	mov	x7, x0
  405820:	mov	x6, x1
  405824:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405828:	add	x5, x0, #0x6e0
  40582c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405830:	add	x4, x0, #0x2f0
  405834:	mov	w3, #0x55                  	// #85
  405838:	mov	x2, x20
  40583c:	ldr	w1, [sp, #80]
  405840:	mov	w0, w19
  405844:	bl	4029d0 <log_internal_realm@plt>
  405848:	b	405854 <manager_timeout+0x1b0>
  40584c:	ldr	w0, [sp, #80]
  405850:	cmp	w0, #0x0
  405854:	ldr	x0, [sp, #96]
  405858:	bl	408c88 <manager_connect>
  40585c:	mov	w19, w0
  405860:	add	x0, sp, #0x58
  405864:	bl	4053c0 <freep>
  405868:	mov	w1, w19
  40586c:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  405870:	add	x0, x0, #0xa48
  405874:	ldr	x2, [sp, #104]
  405878:	ldr	x0, [x0]
  40587c:	eor	x0, x2, x0
  405880:	cmp	x0, #0x0
  405884:	b.eq	40588c <manager_timeout+0x1e8>  // b.none
  405888:	bl	402930 <__stack_chk_fail@plt>
  40588c:	mov	w0, w1
  405890:	ldp	x19, x20, [sp, #16]
  405894:	ldp	x29, x30, [sp], #112
  405898:	ret

000000000040589c <manager_send_request>:
  40589c:	stp	x29, x30, [sp, #-208]!
  4058a0:	mov	x29, sp
  4058a4:	stp	x19, x20, [sp, #16]
  4058a8:	str	x21, [sp, #32]
  4058ac:	str	x0, [sp, #56]
  4058b0:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4058b4:	add	x0, x0, #0xa48
  4058b8:	ldr	x1, [x0]
  4058bc:	str	x1, [sp, #200]
  4058c0:	mov	x1, #0x0                   	// #0
  4058c4:	str	xzr, [sp, #136]
  4058c8:	stp	xzr, xzr, [sp, #152]
  4058cc:	stp	xzr, xzr, [sp, #168]
  4058d0:	stp	xzr, xzr, [sp, #184]
  4058d4:	mov	w0, #0x23                  	// #35
  4058d8:	strb	w0, [sp, #152]
  4058dc:	ldr	x0, [sp, #56]
  4058e0:	cmp	x0, #0x0
  4058e4:	cset	w0, eq  // eq = none
  4058e8:	and	w0, w0, #0xff
  4058ec:	and	x0, x0, #0xff
  4058f0:	cmp	x0, #0x0
  4058f4:	b.eq	405920 <manager_send_request+0x84>  // b.none
  4058f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4058fc:	add	x1, x0, #0x67b
  405900:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405904:	add	x4, x0, #0x300
  405908:	mov	w3, #0x69                  	// #105
  40590c:	mov	x2, x1
  405910:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405914:	add	x1, x0, #0x6a0
  405918:	mov	w0, #0x0                   	// #0
  40591c:	bl	4027f0 <log_assert_failed_realm@plt>
  405920:	ldr	x0, [sp, #56]
  405924:	ldr	x0, [x0, #120]
  405928:	cmp	x0, #0x0
  40592c:	cset	w0, eq  // eq = none
  405930:	and	w0, w0, #0xff
  405934:	and	x0, x0, #0xff
  405938:	cmp	x0, #0x0
  40593c:	b.eq	405968 <manager_send_request+0xcc>  // b.none
  405940:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405944:	add	x1, x0, #0x67b
  405948:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40594c:	add	x4, x0, #0x300
  405950:	mov	w3, #0x6a                  	// #106
  405954:	mov	x2, x1
  405958:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40595c:	add	x1, x0, #0x6a8
  405960:	mov	w0, #0x0                   	// #0
  405964:	bl	4027f0 <log_assert_failed_realm@plt>
  405968:	ldr	x0, [sp, #56]
  40596c:	ldr	x0, [x0, #128]
  405970:	cmp	x0, #0x0
  405974:	cset	w0, eq  // eq = none
  405978:	and	w0, w0, #0xff
  40597c:	and	x0, x0, #0xff
  405980:	cmp	x0, #0x0
  405984:	b.eq	4059b0 <manager_send_request+0x114>  // b.none
  405988:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40598c:	add	x1, x0, #0x67b
  405990:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405994:	add	x4, x0, #0x300
  405998:	mov	w3, #0x6b                  	// #107
  40599c:	mov	x2, x1
  4059a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4059a4:	add	x1, x0, #0x6c0
  4059a8:	mov	w0, #0x0                   	// #0
  4059ac:	bl	4027f0 <log_assert_failed_realm@plt>
  4059b0:	ldr	x0, [sp, #56]
  4059b4:	ldr	x0, [x0, #152]
  4059b8:	bl	402790 <sd_event_source_unref@plt>
  4059bc:	mov	x1, x0
  4059c0:	ldr	x0, [sp, #56]
  4059c4:	str	x1, [x0, #152]
  4059c8:	ldr	x0, [sp, #56]
  4059cc:	bl	407df4 <manager_listen_setup>
  4059d0:	str	w0, [sp, #72]
  4059d4:	ldr	w0, [sp, #72]
  4059d8:	cmp	w0, #0x0
  4059dc:	b.ge	405a6c <manager_send_request+0x1d0>  // b.tcont
  4059e0:	mov	w0, #0x4                   	// #4
  4059e4:	str	w0, [sp, #124]
  4059e8:	ldr	w0, [sp, #72]
  4059ec:	str	w0, [sp, #128]
  4059f0:	str	wzr, [sp, #132]
  4059f4:	ldr	w0, [sp, #132]
  4059f8:	bl	402bf0 <log_get_max_level_realm@plt>
  4059fc:	mov	w1, w0
  405a00:	ldr	w0, [sp, #124]
  405a04:	and	w0, w0, #0x7
  405a08:	cmp	w1, w0
  405a0c:	b.lt	405a54 <manager_send_request+0x1b8>  // b.tstop
  405a10:	ldr	w0, [sp, #132]
  405a14:	lsl	w1, w0, #10
  405a18:	ldr	w0, [sp, #124]
  405a1c:	orr	w6, w1, w0
  405a20:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405a24:	add	x1, x0, #0x67b
  405a28:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405a2c:	add	x5, x0, #0x710
  405a30:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405a34:	add	x4, x0, #0x318
  405a38:	mov	w3, #0x71                  	// #113
  405a3c:	mov	x2, x1
  405a40:	ldr	w1, [sp, #128]
  405a44:	mov	w0, w6
  405a48:	bl	4029d0 <log_internal_realm@plt>
  405a4c:	mov	w19, w0
  405a50:	b	405f10 <manager_send_request+0x674>
  405a54:	ldr	w0, [sp, #128]
  405a58:	cmp	w0, #0x0
  405a5c:	cneg	w0, w0, lt  // lt = tstop
  405a60:	and	w0, w0, #0xff
  405a64:	neg	w19, w0
  405a68:	b	405f10 <manager_send_request+0x674>
  405a6c:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  405a70:	mov	w2, w0
  405a74:	ldr	x0, [sp, #56]
  405a78:	add	x0, x0, #0xa8
  405a7c:	mov	x1, x0
  405a80:	mov	w0, w2
  405a84:	bl	402670 <clock_gettime@plt>
  405a88:	lsr	w0, w0, #31
  405a8c:	and	w0, w0, #0xff
  405a90:	and	x0, x0, #0xff
  405a94:	cmp	x0, #0x0
  405a98:	b.eq	405ac4 <manager_send_request+0x228>  // b.none
  405a9c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405aa0:	add	x1, x0, #0x67b
  405aa4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405aa8:	add	x4, x0, #0x300
  405aac:	mov	w3, #0x7b                  	// #123
  405ab0:	mov	x2, x1
  405ab4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405ab8:	add	x1, x0, #0x738
  405abc:	mov	w0, #0x0                   	// #0
  405ac0:	bl	4027f0 <log_assert_failed_realm@plt>
  405ac4:	ldr	x0, [sp, #56]
  405ac8:	add	x0, x0, #0xb8
  405acc:	mov	x1, x0
  405ad0:	mov	w0, #0x0                   	// #0
  405ad4:	bl	402670 <clock_gettime@plt>
  405ad8:	lsr	w0, w0, #31
  405adc:	and	w0, w0, #0xff
  405ae0:	and	x0, x0, #0xff
  405ae4:	cmp	x0, #0x0
  405ae8:	b.eq	405b14 <manager_send_request+0x278>  // b.none
  405aec:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405af0:	add	x1, x0, #0x67b
  405af4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405af8:	add	x4, x0, #0x300
  405afc:	mov	w3, #0x7c                  	// #124
  405b00:	mov	x2, x1
  405b04:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405b08:	add	x1, x0, #0x780
  405b0c:	mov	w0, #0x0                   	// #0
  405b10:	bl	4027f0 <log_assert_failed_realm@plt>
  405b14:	ldr	x0, [sp, #56]
  405b18:	ldr	x0, [x0, #184]
  405b1c:	mov	w1, w0
  405b20:	mov	w0, #0x7e80                	// #32384
  405b24:	movk	w0, #0x83aa, lsl #16
  405b28:	add	w0, w1, w0
  405b2c:	bl	40544c <htobe32>
  405b30:	str	w0, [sp, #192]
  405b34:	ldr	x0, [sp, #56]
  405b38:	ldr	x0, [x0, #192]
  405b3c:	bl	40544c <htobe32>
  405b40:	str	w0, [sp, #196]
  405b44:	ldr	x0, [sp, #56]
  405b48:	ldr	x0, [x0, #128]
  405b4c:	add	x1, sp, #0x88
  405b50:	bl	405554 <server_address_pretty>
  405b54:	ldr	x0, [sp, #56]
  405b58:	ldr	w6, [x0, #136]
  405b5c:	ldr	x0, [sp, #56]
  405b60:	ldr	x0, [x0, #128]
  405b64:	add	x0, x0, #0x8
  405b68:	mov	x2, x0
  405b6c:	ldr	x0, [sp, #56]
  405b70:	ldr	x0, [x0, #128]
  405b74:	ldr	w1, [x0, #136]
  405b78:	add	x0, sp, #0x98
  405b7c:	mov	w5, w1
  405b80:	mov	x4, x2
  405b84:	mov	w3, #0x40                  	// #64
  405b88:	mov	x2, #0x30                  	// #48
  405b8c:	mov	x1, x0
  405b90:	mov	w0, w6
  405b94:	bl	402620 <sendto@plt>
  405b98:	str	x0, [sp, #144]
  405b9c:	ldr	x0, [sp, #144]
  405ba0:	cmp	x0, #0x30
  405ba4:	b.ne	405c4c <manager_send_request+0x3b0>  // b.any
  405ba8:	ldr	x0, [sp, #56]
  405bac:	mov	w1, #0x1                   	// #1
  405bb0:	strb	w1, [x0, #208]
  405bb4:	mov	w0, #0x7                   	// #7
  405bb8:	str	w0, [sp, #88]
  405bbc:	str	wzr, [sp, #92]
  405bc0:	str	wzr, [sp, #96]
  405bc4:	ldr	w0, [sp, #96]
  405bc8:	bl	402bf0 <log_get_max_level_realm@plt>
  405bcc:	mov	w1, w0
  405bd0:	ldr	w0, [sp, #88]
  405bd4:	and	w0, w0, #0x7
  405bd8:	cmp	w1, w0
  405bdc:	b.lt	405c40 <manager_send_request+0x3a4>  // b.tstop
  405be0:	ldr	w0, [sp, #96]
  405be4:	lsl	w1, w0, #10
  405be8:	ldr	w0, [sp, #88]
  405bec:	orr	w19, w1, w0
  405bf0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405bf4:	add	x20, x0, #0x67b
  405bf8:	ldr	x0, [sp, #136]
  405bfc:	bl	4054fc <strna>
  405c00:	mov	x1, x0
  405c04:	ldr	x0, [sp, #56]
  405c08:	ldr	x0, [x0, #120]
  405c0c:	ldr	x0, [x0, #16]
  405c10:	mov	x7, x0
  405c14:	mov	x6, x1
  405c18:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405c1c:	add	x5, x0, #0x7b8
  405c20:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405c24:	add	x4, x0, #0x318
  405c28:	mov	w3, #0x85                  	// #133
  405c2c:	mov	x2, x20
  405c30:	ldr	w1, [sp, #92]
  405c34:	mov	w0, w19
  405c38:	bl	4029d0 <log_internal_realm@plt>
  405c3c:	b	405cf8 <manager_send_request+0x45c>
  405c40:	ldr	w0, [sp, #92]
  405c44:	cmp	w0, #0x0
  405c48:	b	405cf8 <manager_send_request+0x45c>
  405c4c:	mov	w0, #0x7                   	// #7
  405c50:	str	w0, [sp, #76]
  405c54:	bl	4028c0 <__errno_location@plt>
  405c58:	ldr	w0, [x0]
  405c5c:	str	w0, [sp, #80]
  405c60:	str	wzr, [sp, #84]
  405c64:	ldr	w0, [sp, #84]
  405c68:	bl	402bf0 <log_get_max_level_realm@plt>
  405c6c:	mov	w1, w0
  405c70:	ldr	w0, [sp, #76]
  405c74:	and	w0, w0, #0x7
  405c78:	cmp	w1, w0
  405c7c:	b.lt	405ce0 <manager_send_request+0x444>  // b.tstop
  405c80:	ldr	w0, [sp, #84]
  405c84:	lsl	w1, w0, #10
  405c88:	ldr	w0, [sp, #76]
  405c8c:	orr	w19, w1, w0
  405c90:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405c94:	add	x20, x0, #0x67b
  405c98:	ldr	x0, [sp, #136]
  405c9c:	bl	4054fc <strna>
  405ca0:	mov	x1, x0
  405ca4:	ldr	x0, [sp, #56]
  405ca8:	ldr	x0, [x0, #120]
  405cac:	ldr	x0, [x0, #16]
  405cb0:	mov	x7, x0
  405cb4:	mov	x6, x1
  405cb8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405cbc:	add	x5, x0, #0x7d8
  405cc0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405cc4:	add	x4, x0, #0x318
  405cc8:	mov	w3, #0x87                  	// #135
  405ccc:	mov	x2, x20
  405cd0:	ldr	w1, [sp, #80]
  405cd4:	mov	w0, w19
  405cd8:	bl	4029d0 <log_internal_realm@plt>
  405cdc:	b	405ce8 <manager_send_request+0x44c>
  405ce0:	ldr	w0, [sp, #80]
  405ce4:	cmp	w0, #0x0
  405ce8:	ldr	x0, [sp, #56]
  405cec:	bl	408c88 <manager_connect>
  405cf0:	mov	w19, w0
  405cf4:	b	405f10 <manager_send_request+0x674>
  405cf8:	ldr	x0, [sp, #56]
  405cfc:	ldr	x0, [x0, #200]
  405d00:	cmp	x0, #0x0
  405d04:	b.eq	405d38 <manager_send_request+0x49c>  // b.none
  405d08:	ldr	x0, [sp, #56]
  405d0c:	ldr	x1, [x0, #200]
  405d10:	ldr	x0, [sp, #56]
  405d14:	ldr	x0, [x0, #240]
  405d18:	cmp	x1, x0
  405d1c:	b.cs	405d48 <manager_send_request+0x4ac>  // b.hs, b.nlast
  405d20:	ldr	x0, [sp, #56]
  405d24:	ldr	x0, [x0, #200]
  405d28:	lsl	x1, x0, #1
  405d2c:	ldr	x0, [sp, #56]
  405d30:	str	x1, [x0, #200]
  405d34:	b	405d48 <manager_send_request+0x4ac>
  405d38:	ldr	x0, [sp, #56]
  405d3c:	ldr	x1, [x0, #232]
  405d40:	ldr	x0, [sp, #56]
  405d44:	str	x1, [x0, #200]
  405d48:	ldr	x0, [sp, #56]
  405d4c:	ldr	x0, [x0, #200]
  405d50:	mov	x1, x0
  405d54:	ldr	x0, [sp, #56]
  405d58:	bl	405fc0 <manager_arm_timer>
  405d5c:	str	w0, [sp, #72]
  405d60:	ldr	w0, [sp, #72]
  405d64:	cmp	w0, #0x0
  405d68:	b.ge	405df8 <manager_send_request+0x55c>  // b.tcont
  405d6c:	mov	w0, #0x3                   	// #3
  405d70:	str	w0, [sp, #112]
  405d74:	ldr	w0, [sp, #72]
  405d78:	str	w0, [sp, #116]
  405d7c:	str	wzr, [sp, #120]
  405d80:	ldr	w0, [sp, #120]
  405d84:	bl	402bf0 <log_get_max_level_realm@plt>
  405d88:	mov	w1, w0
  405d8c:	ldr	w0, [sp, #112]
  405d90:	and	w0, w0, #0x7
  405d94:	cmp	w1, w0
  405d98:	b.lt	405de0 <manager_send_request+0x544>  // b.tstop
  405d9c:	ldr	w0, [sp, #120]
  405da0:	lsl	w1, w0, #10
  405da4:	ldr	w0, [sp, #112]
  405da8:	orr	w6, w1, w0
  405dac:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405db0:	add	x1, x0, #0x67b
  405db4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405db8:	add	x5, x0, #0x808
  405dbc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405dc0:	add	x4, x0, #0x318
  405dc4:	mov	w3, #0x94                  	// #148
  405dc8:	mov	x2, x1
  405dcc:	ldr	w1, [sp, #116]
  405dd0:	mov	w0, w6
  405dd4:	bl	4029d0 <log_internal_realm@plt>
  405dd8:	mov	w19, w0
  405ddc:	b	405f10 <manager_send_request+0x674>
  405de0:	ldr	w0, [sp, #116]
  405de4:	cmp	w0, #0x0
  405de8:	cneg	w0, w0, lt  // lt = tstop
  405dec:	and	w0, w0, #0xff
  405df0:	neg	w19, w0
  405df4:	b	405f10 <manager_send_request+0x674>
  405df8:	ldr	x0, [sp, #56]
  405dfc:	ldr	w0, [x0, #140]
  405e00:	add	w1, w0, #0x1
  405e04:	ldr	x0, [sp, #56]
  405e08:	str	w1, [x0, #140]
  405e0c:	ldr	x0, [sp, #56]
  405e10:	ldr	w0, [x0, #140]
  405e14:	cmp	w0, #0x2
  405e18:	b.le	405f0c <manager_send_request+0x670>
  405e1c:	ldr	x0, [sp, #56]
  405e20:	ldr	x19, [x0, #8]
  405e24:	ldr	x0, [sp, #56]
  405e28:	add	x20, x0, #0x98
  405e2c:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  405e30:	mov	w21, w0
  405e34:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  405e38:	bl	402a10 <now@plt>
  405e3c:	mov	x1, x0
  405e40:	mov	x0, #0x9680                	// #38528
  405e44:	movk	x0, #0x98, lsl #16
  405e48:	add	x1, x1, x0
  405e4c:	ldr	x6, [sp, #56]
  405e50:	adrp	x0, 405000 <config_parse_servers+0x58>
  405e54:	add	x5, x0, #0x6a4
  405e58:	mov	x4, #0x0                   	// #0
  405e5c:	mov	x3, x1
  405e60:	mov	w2, w21
  405e64:	mov	x1, x20
  405e68:	mov	x0, x19
  405e6c:	bl	402730 <sd_event_add_time@plt>
  405e70:	str	w0, [sp, #72]
  405e74:	ldr	w0, [sp, #72]
  405e78:	cmp	w0, #0x0
  405e7c:	b.ge	405f0c <manager_send_request+0x670>  // b.tcont
  405e80:	mov	w0, #0x3                   	// #3
  405e84:	str	w0, [sp, #100]
  405e88:	ldr	w0, [sp, #72]
  405e8c:	str	w0, [sp, #104]
  405e90:	str	wzr, [sp, #108]
  405e94:	ldr	w0, [sp, #108]
  405e98:	bl	402bf0 <log_get_max_level_realm@plt>
  405e9c:	mov	w1, w0
  405ea0:	ldr	w0, [sp, #100]
  405ea4:	and	w0, w0, #0x7
  405ea8:	cmp	w1, w0
  405eac:	b.lt	405ef4 <manager_send_request+0x658>  // b.tstop
  405eb0:	ldr	w0, [sp, #108]
  405eb4:	lsl	w1, w0, #10
  405eb8:	ldr	w0, [sp, #100]
  405ebc:	orr	w6, w1, w0
  405ec0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405ec4:	add	x1, x0, #0x67b
  405ec8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405ecc:	add	x5, x0, #0x828
  405ed0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405ed4:	add	x4, x0, #0x318
  405ed8:	mov	w3, #0x9f                  	// #159
  405edc:	mov	x2, x1
  405ee0:	ldr	w1, [sp, #104]
  405ee4:	mov	w0, w6
  405ee8:	bl	4029d0 <log_internal_realm@plt>
  405eec:	mov	w19, w0
  405ef0:	b	405f10 <manager_send_request+0x674>
  405ef4:	ldr	w0, [sp, #104]
  405ef8:	cmp	w0, #0x0
  405efc:	cneg	w0, w0, lt  // lt = tstop
  405f00:	and	w0, w0, #0xff
  405f04:	neg	w19, w0
  405f08:	b	405f10 <manager_send_request+0x674>
  405f0c:	mov	w19, #0x0                   	// #0
  405f10:	add	x0, sp, #0x88
  405f14:	bl	4053c0 <freep>
  405f18:	mov	w1, w19
  405f1c:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  405f20:	add	x0, x0, #0xa48
  405f24:	ldr	x2, [sp, #200]
  405f28:	ldr	x0, [x0]
  405f2c:	eor	x0, x2, x0
  405f30:	cmp	x0, #0x0
  405f34:	b.eq	405f3c <manager_send_request+0x6a0>  // b.none
  405f38:	bl	402930 <__stack_chk_fail@plt>
  405f3c:	mov	w0, w1
  405f40:	ldp	x19, x20, [sp, #16]
  405f44:	ldr	x21, [sp, #32]
  405f48:	ldp	x29, x30, [sp], #208
  405f4c:	ret

0000000000405f50 <manager_timer>:
  405f50:	stp	x29, x30, [sp, #-64]!
  405f54:	mov	x29, sp
  405f58:	str	x0, [sp, #40]
  405f5c:	str	x1, [sp, #32]
  405f60:	str	x2, [sp, #24]
  405f64:	ldr	x0, [sp, #24]
  405f68:	str	x0, [sp, #56]
  405f6c:	ldr	x0, [sp, #56]
  405f70:	cmp	x0, #0x0
  405f74:	cset	w0, eq  // eq = none
  405f78:	and	w0, w0, #0xff
  405f7c:	and	x0, x0, #0xff
  405f80:	cmp	x0, #0x0
  405f84:	b.eq	405fb0 <manager_timer+0x60>  // b.none
  405f88:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405f8c:	add	x1, x0, #0x67b
  405f90:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  405f94:	add	x4, x0, #0x330
  405f98:	mov	w3, #0xa8                  	// #168
  405f9c:	mov	x2, x1
  405fa0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405fa4:	add	x1, x0, #0x6a0
  405fa8:	mov	w0, #0x0                   	// #0
  405fac:	bl	4027f0 <log_assert_failed_realm@plt>
  405fb0:	ldr	x0, [sp, #56]
  405fb4:	bl	40589c <manager_send_request>
  405fb8:	ldp	x29, x30, [sp], #64
  405fbc:	ret

0000000000405fc0 <manager_arm_timer>:
  405fc0:	stp	x29, x30, [sp, #-80]!
  405fc4:	mov	x29, sp
  405fc8:	stp	x19, x20, [sp, #16]
  405fcc:	str	x21, [sp, #32]
  405fd0:	str	x0, [sp, #56]
  405fd4:	str	x1, [sp, #48]
  405fd8:	ldr	x0, [sp, #56]
  405fdc:	cmp	x0, #0x0
  405fe0:	cset	w0, eq  // eq = none
  405fe4:	and	w0, w0, #0xff
  405fe8:	and	x0, x0, #0xff
  405fec:	cmp	x0, #0x0
  405ff0:	b.eq	40601c <manager_arm_timer+0x5c>  // b.none
  405ff4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  405ff8:	add	x1, x0, #0x67b
  405ffc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406000:	add	x4, x0, #0x340
  406004:	mov	w3, #0xb0                  	// #176
  406008:	mov	x2, x1
  40600c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406010:	add	x1, x0, #0x6a0
  406014:	mov	w0, #0x0                   	// #0
  406018:	bl	4027f0 <log_assert_failed_realm@plt>
  40601c:	ldr	x0, [sp, #48]
  406020:	cmp	x0, #0x0
  406024:	b.ne	406048 <manager_arm_timer+0x88>  // b.any
  406028:	ldr	x0, [sp, #56]
  40602c:	ldr	x0, [x0, #216]
  406030:	bl	402790 <sd_event_source_unref@plt>
  406034:	mov	x1, x0
  406038:	ldr	x0, [sp, #56]
  40603c:	str	x1, [x0, #216]
  406040:	mov	w0, #0x0                   	// #0
  406044:	b	4060fc <manager_arm_timer+0x13c>
  406048:	ldr	x0, [sp, #56]
  40604c:	ldr	x0, [x0, #216]
  406050:	cmp	x0, #0x0
  406054:	b.eq	4060ac <manager_arm_timer+0xec>  // b.none
  406058:	ldr	x0, [sp, #56]
  40605c:	ldr	x19, [x0, #216]
  406060:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  406064:	bl	402a10 <now@plt>
  406068:	mov	x1, x0
  40606c:	ldr	x0, [sp, #48]
  406070:	add	x0, x1, x0
  406074:	mov	x1, x0
  406078:	mov	x0, x19
  40607c:	bl	4025f0 <sd_event_source_set_time@plt>
  406080:	str	w0, [sp, #76]
  406084:	ldr	w0, [sp, #76]
  406088:	cmp	w0, #0x0
  40608c:	b.ge	406098 <manager_arm_timer+0xd8>  // b.tcont
  406090:	ldr	w0, [sp, #76]
  406094:	b	4060fc <manager_arm_timer+0x13c>
  406098:	ldr	x0, [sp, #56]
  40609c:	ldr	x0, [x0, #216]
  4060a0:	mov	w1, #0xffffffff            	// #-1
  4060a4:	bl	402820 <sd_event_source_set_enabled@plt>
  4060a8:	b	4060fc <manager_arm_timer+0x13c>
  4060ac:	ldr	x0, [sp, #56]
  4060b0:	ldr	x19, [x0, #8]
  4060b4:	ldr	x0, [sp, #56]
  4060b8:	add	x20, x0, #0xd8
  4060bc:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  4060c0:	mov	w21, w0
  4060c4:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  4060c8:	bl	402a10 <now@plt>
  4060cc:	mov	x1, x0
  4060d0:	ldr	x0, [sp, #48]
  4060d4:	add	x1, x1, x0
  4060d8:	ldr	x6, [sp, #56]
  4060dc:	adrp	x0, 405000 <config_parse_servers+0x58>
  4060e0:	add	x5, x0, #0xf50
  4060e4:	mov	x4, #0x0                   	// #0
  4060e8:	mov	x3, x1
  4060ec:	mov	w2, w21
  4060f0:	mov	x1, x20
  4060f4:	mov	x0, x19
  4060f8:	bl	402730 <sd_event_add_time@plt>
  4060fc:	ldp	x19, x20, [sp, #16]
  406100:	ldr	x21, [sp, #32]
  406104:	ldp	x29, x30, [sp], #80
  406108:	ret

000000000040610c <manager_clock_watch>:
  40610c:	stp	x29, x30, [sp, #-80]!
  406110:	mov	x29, sp
  406114:	str	x0, [sp, #40]
  406118:	str	w1, [sp, #36]
  40611c:	str	w2, [sp, #32]
  406120:	str	x3, [sp, #24]
  406124:	ldr	x0, [sp, #24]
  406128:	str	x0, [sp, #72]
  40612c:	ldr	x0, [sp, #72]
  406130:	cmp	x0, #0x0
  406134:	cset	w0, eq  // eq = none
  406138:	and	w0, w0, #0xff
  40613c:	and	x0, x0, #0xff
  406140:	cmp	x0, #0x0
  406144:	b.eq	406170 <manager_clock_watch+0x64>  // b.none
  406148:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40614c:	add	x1, x0, #0x67b
  406150:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406154:	add	x4, x0, #0x358
  406158:	mov	w3, #0xca                  	// #202
  40615c:	mov	x2, x1
  406160:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406164:	add	x1, x0, #0x6a0
  406168:	mov	w0, #0x0                   	// #0
  40616c:	bl	4027f0 <log_assert_failed_realm@plt>
  406170:	ldr	x0, [sp, #72]
  406174:	bl	406228 <manager_clock_watch_setup>
  406178:	ldr	x0, [sp, #72]
  40617c:	ldrb	w0, [x0, #408]
  406180:	cmp	w0, #0x0
  406184:	b.eq	406198 <manager_clock_watch+0x8c>  // b.none
  406188:	ldr	x0, [sp, #72]
  40618c:	strb	wzr, [x0, #408]
  406190:	mov	w0, #0x0                   	// #0
  406194:	b	406220 <manager_clock_watch+0x114>
  406198:	mov	w0, #0x7                   	// #7
  40619c:	str	w0, [sp, #60]
  4061a0:	str	wzr, [sp, #64]
  4061a4:	str	wzr, [sp, #68]
  4061a8:	ldr	w0, [sp, #68]
  4061ac:	bl	402bf0 <log_get_max_level_realm@plt>
  4061b0:	mov	w1, w0
  4061b4:	ldr	w0, [sp, #60]
  4061b8:	and	w0, w0, #0x7
  4061bc:	cmp	w1, w0
  4061c0:	b.lt	406204 <manager_clock_watch+0xf8>  // b.tstop
  4061c4:	ldr	w0, [sp, #68]
  4061c8:	lsl	w1, w0, #10
  4061cc:	ldr	w0, [sp, #60]
  4061d0:	orr	w6, w1, w0
  4061d4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4061d8:	add	x1, x0, #0x67b
  4061dc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4061e0:	add	x5, x0, #0x848
  4061e4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4061e8:	add	x4, x0, #0x370
  4061ec:	mov	w3, #0xd6                  	// #214
  4061f0:	mov	x2, x1
  4061f4:	ldr	w1, [sp, #64]
  4061f8:	mov	w0, w6
  4061fc:	bl	4029d0 <log_internal_realm@plt>
  406200:	b	40620c <manager_clock_watch+0x100>
  406204:	ldr	w0, [sp, #64]
  406208:	cmp	w0, #0x0
  40620c:	ldr	x0, [sp, #72]
  406210:	mov	w1, #0x1                   	// #1
  406214:	strb	w1, [x0, #248]
  406218:	ldr	x0, [sp, #72]
  40621c:	bl	40589c <manager_send_request>
  406220:	ldp	x29, x30, [sp], #80
  406224:	ret

0000000000406228 <manager_clock_watch_setup>:
  406228:	stp	x29, x30, [sp, #-64]!
  40622c:	mov	x29, sp
  406230:	str	x0, [sp, #24]
  406234:	ldr	x0, [sp, #24]
  406238:	cmp	x0, #0x0
  40623c:	cset	w0, eq  // eq = none
  406240:	and	w0, w0, #0xff
  406244:	and	x0, x0, #0xff
  406248:	cmp	x0, #0x0
  40624c:	b.eq	406278 <manager_clock_watch_setup+0x50>  // b.none
  406250:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406254:	add	x1, x0, #0x67b
  406258:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40625c:	add	x4, x0, #0x388
  406260:	mov	w3, #0xe0                  	// #224
  406264:	mov	x2, x1
  406268:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40626c:	add	x1, x0, #0x6a0
  406270:	mov	w0, #0x0                   	// #0
  406274:	bl	4027f0 <log_assert_failed_realm@plt>
  406278:	ldr	x0, [sp, #24]
  40627c:	ldr	x0, [x0, #424]
  406280:	bl	402790 <sd_event_source_unref@plt>
  406284:	mov	x1, x0
  406288:	ldr	x0, [sp, #24]
  40628c:	str	x1, [x0, #424]
  406290:	ldr	x0, [sp, #24]
  406294:	ldr	w0, [x0, #432]
  406298:	bl	4027c0 <safe_close@plt>
  40629c:	bl	402800 <time_change_fd@plt>
  4062a0:	mov	w1, w0
  4062a4:	ldr	x0, [sp, #24]
  4062a8:	str	w1, [x0, #432]
  4062ac:	ldr	x0, [sp, #24]
  4062b0:	ldr	w0, [x0, #432]
  4062b4:	cmp	w0, #0x0
  4062b8:	b.ge	406348 <manager_clock_watch_setup+0x120>  // b.tcont
  4062bc:	mov	w0, #0x3                   	// #3
  4062c0:	str	w0, [sp, #52]
  4062c4:	ldr	x0, [sp, #24]
  4062c8:	ldr	w0, [x0, #432]
  4062cc:	str	w0, [sp, #56]
  4062d0:	str	wzr, [sp, #60]
  4062d4:	ldr	w0, [sp, #60]
  4062d8:	bl	402bf0 <log_get_max_level_realm@plt>
  4062dc:	mov	w1, w0
  4062e0:	ldr	w0, [sp, #52]
  4062e4:	and	w0, w0, #0x7
  4062e8:	cmp	w1, w0
  4062ec:	b.lt	406330 <manager_clock_watch_setup+0x108>  // b.tstop
  4062f0:	ldr	w0, [sp, #60]
  4062f4:	lsl	w1, w0, #10
  4062f8:	ldr	w0, [sp, #52]
  4062fc:	orr	w6, w1, w0
  406300:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406304:	add	x1, x0, #0x67b
  406308:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40630c:	add	x5, x0, #0x868
  406310:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406314:	add	x4, x0, #0x3a8
  406318:	mov	w3, #0xe7                  	// #231
  40631c:	mov	x2, x1
  406320:	ldr	w1, [sp, #56]
  406324:	mov	w0, w6
  406328:	bl	4029d0 <log_internal_realm@plt>
  40632c:	b	406414 <manager_clock_watch_setup+0x1ec>
  406330:	ldr	w0, [sp, #56]
  406334:	cmp	w0, #0x0
  406338:	cneg	w0, w0, lt  // lt = tstop
  40633c:	and	w0, w0, #0xff
  406340:	neg	w0, w0
  406344:	b	406414 <manager_clock_watch_setup+0x1ec>
  406348:	ldr	x0, [sp, #24]
  40634c:	ldr	x6, [x0, #8]
  406350:	ldr	x0, [sp, #24]
  406354:	add	x1, x0, #0x1a8
  406358:	ldr	x0, [sp, #24]
  40635c:	ldr	w2, [x0, #432]
  406360:	ldr	x5, [sp, #24]
  406364:	adrp	x0, 406000 <manager_arm_timer+0x40>
  406368:	add	x4, x0, #0x10c
  40636c:	mov	w3, #0x1                   	// #1
  406370:	mov	x0, x6
  406374:	bl	402a30 <sd_event_add_io@plt>
  406378:	str	w0, [sp, #36]
  40637c:	ldr	w0, [sp, #36]
  406380:	cmp	w0, #0x0
  406384:	b.ge	406410 <manager_clock_watch_setup+0x1e8>  // b.tcont
  406388:	mov	w0, #0x3                   	// #3
  40638c:	str	w0, [sp, #40]
  406390:	ldr	w0, [sp, #36]
  406394:	str	w0, [sp, #44]
  406398:	str	wzr, [sp, #48]
  40639c:	ldr	w0, [sp, #48]
  4063a0:	bl	402bf0 <log_get_max_level_realm@plt>
  4063a4:	mov	w1, w0
  4063a8:	ldr	w0, [sp, #40]
  4063ac:	and	w0, w0, #0x7
  4063b0:	cmp	w1, w0
  4063b4:	b.lt	4063f8 <manager_clock_watch_setup+0x1d0>  // b.tstop
  4063b8:	ldr	w0, [sp, #48]
  4063bc:	lsl	w1, w0, #10
  4063c0:	ldr	w0, [sp, #40]
  4063c4:	orr	w6, w1, w0
  4063c8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4063cc:	add	x1, x0, #0x67b
  4063d0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4063d4:	add	x5, x0, #0x888
  4063d8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4063dc:	add	x4, x0, #0x3a8
  4063e0:	mov	w3, #0xeb                  	// #235
  4063e4:	mov	x2, x1
  4063e8:	ldr	w1, [sp, #44]
  4063ec:	mov	w0, w6
  4063f0:	bl	4029d0 <log_internal_realm@plt>
  4063f4:	b	406414 <manager_clock_watch_setup+0x1ec>
  4063f8:	ldr	w0, [sp, #44]
  4063fc:	cmp	w0, #0x0
  406400:	cneg	w0, w0, lt  // lt = tstop
  406404:	and	w0, w0, #0xff
  406408:	neg	w0, w0
  40640c:	b	406414 <manager_clock_watch_setup+0x1ec>
  406410:	mov	w0, #0x0                   	// #0
  406414:	ldp	x29, x30, [sp], #64
  406418:	ret

000000000040641c <manager_adjust_clock>:
  40641c:	sub	sp, sp, #0x160
  406420:	stp	x29, x30, [sp, #48]
  406424:	add	x29, sp, #0x30
  406428:	str	x0, [sp, #88]
  40642c:	str	d0, [sp, #80]
  406430:	str	w1, [sp, #76]
  406434:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  406438:	add	x0, x0, #0xa48
  40643c:	ldr	x1, [x0]
  406440:	str	x1, [sp, #344]
  406444:	mov	x1, #0x0                   	// #0
  406448:	stp	xzr, xzr, [sp, #136]
  40644c:	stp	xzr, xzr, [sp, #152]
  406450:	stp	xzr, xzr, [sp, #168]
  406454:	stp	xzr, xzr, [sp, #184]
  406458:	stp	xzr, xzr, [sp, #200]
  40645c:	stp	xzr, xzr, [sp, #216]
  406460:	stp	xzr, xzr, [sp, #232]
  406464:	stp	xzr, xzr, [sp, #248]
  406468:	add	x0, sp, #0x200
  40646c:	stp	xzr, xzr, [x0, #-248]
  406470:	add	x0, sp, #0x200
  406474:	stp	xzr, xzr, [x0, #-232]
  406478:	add	x0, sp, #0x200
  40647c:	stp	xzr, xzr, [x0, #-216]
  406480:	add	x0, sp, #0x200
  406484:	stp	xzr, xzr, [x0, #-200]
  406488:	add	x0, sp, #0x200
  40648c:	stp	xzr, xzr, [x0, #-184]
  406490:	ldr	x0, [sp, #88]
  406494:	cmp	x0, #0x0
  406498:	cset	w0, eq  // eq = none
  40649c:	and	w0, w0, #0xff
  4064a0:	and	x0, x0, #0xff
  4064a4:	cmp	x0, #0x0
  4064a8:	b.eq	4064d4 <manager_adjust_clock+0xb8>  // b.none
  4064ac:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4064b0:	add	x1, x0, #0x67b
  4064b4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4064b8:	add	x4, x0, #0x3c8
  4064bc:	mov	w3, #0xf4                  	// #244
  4064c0:	mov	x2, x1
  4064c4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4064c8:	add	x1, x0, #0x6a0
  4064cc:	mov	w0, #0x0                   	// #0
  4064d0:	bl	4027f0 <log_assert_failed_realm@plt>
  4064d4:	ldr	d0, [sp, #80]
  4064d8:	fabs	d0, d0
  4064dc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4064e0:	ldr	d1, [x0, #696]
  4064e4:	fcmpe	d0, d1
  4064e8:	b.pl	4065cc <manager_adjust_clock+0x1b0>  // b.nfrst
  4064ec:	mov	w0, #0x203d                	// #8253
  4064f0:	str	w0, [sp, #136]
  4064f4:	mov	w0, #0x1                   	// #1
  4064f8:	str	w0, [sp, #176]
  4064fc:	ldr	d0, [sp, #80]
  406500:	mov	x0, #0xcd6500000000        	// #225833675390976
  406504:	movk	x0, #0x41cd, lsl #48
  406508:	fmov	d1, x0
  40650c:	fmul	d0, d0, d1
  406510:	fcvtzs	d0, d0
  406514:	str	d0, [sp, #144]
  406518:	ldr	x0, [sp, #88]
  40651c:	ldr	x1, [x0, #224]
  406520:	mov	x0, #0x34db                	// #13531
  406524:	movk	x0, #0xd7b6, lsl #16
  406528:	movk	x0, #0xde82, lsl #32
  40652c:	movk	x0, #0x431b, lsl #48
  406530:	umulh	x0, x1, x0
  406534:	lsr	x0, x0, #18
  406538:	bl	4053e4 <log2i>
  40653c:	sub	w0, w0, #0x4
  406540:	mov	w0, w0
  406544:	str	x0, [sp, #184]
  406548:	str	xzr, [sp, #160]
  40654c:	str	xzr, [sp, #168]
  406550:	mov	w0, #0x7                   	// #7
  406554:	str	w0, [sp, #108]
  406558:	str	wzr, [sp, #112]
  40655c:	str	wzr, [sp, #116]
  406560:	ldr	w0, [sp, #116]
  406564:	bl	402bf0 <log_get_max_level_realm@plt>
  406568:	mov	w1, w0
  40656c:	ldr	w0, [sp, #108]
  406570:	and	w0, w0, #0x7
  406574:	cmp	w1, w0
  406578:	b.lt	4065c0 <manager_adjust_clock+0x1a4>  // b.tstop
  40657c:	ldr	w0, [sp, #116]
  406580:	lsl	w1, w0, #10
  406584:	ldr	w0, [sp, #108]
  406588:	orr	w6, w1, w0
  40658c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406590:	add	x1, x0, #0x67b
  406594:	ldr	d0, [sp, #80]
  406598:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40659c:	add	x5, x0, #0x8b8
  4065a0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4065a4:	add	x4, x0, #0x3e0
  4065a8:	mov	w3, #0x101                 	// #257
  4065ac:	mov	x2, x1
  4065b0:	ldr	w1, [sp, #112]
  4065b4:	mov	w0, w6
  4065b8:	bl	4029d0 <log_internal_realm@plt>
  4065bc:	b	4066c4 <manager_adjust_clock+0x2a8>
  4065c0:	ldr	w0, [sp, #112]
  4065c4:	cmp	w0, #0x0
  4065c8:	b	4066c4 <manager_adjust_clock+0x2a8>
  4065cc:	mov	w0, #0x211c                	// #8476
  4065d0:	str	w0, [sp, #136]
  4065d4:	ldr	d0, [sp, #80]
  4065d8:	fcvtzs	d0, d0
  4065dc:	str	d0, [sp, #208]
  4065e0:	ldr	d0, [sp, #208]
  4065e4:	scvtf	d0, d0
  4065e8:	ldr	d1, [sp, #80]
  4065ec:	fsub	d0, d1, d0
  4065f0:	mov	x0, #0xcd6500000000        	// #225833675390976
  4065f4:	movk	x0, #0x41cd, lsl #48
  4065f8:	fmov	d1, x0
  4065fc:	fmul	d0, d0, d1
  406600:	fcvtzs	d0, d0
  406604:	str	d0, [sp, #216]
  406608:	str	xzr, [sp, #160]
  40660c:	str	xzr, [sp, #168]
  406610:	ldr	x0, [sp, #216]
  406614:	cmp	x0, #0x0
  406618:	b.ge	406640 <manager_adjust_clock+0x224>  // b.tcont
  40661c:	ldr	x0, [sp, #208]
  406620:	sub	x0, x0, #0x1
  406624:	str	x0, [sp, #208]
  406628:	ldr	x0, [sp, #216]
  40662c:	mov	x1, x0
  406630:	mov	x0, #0xca00                	// #51712
  406634:	movk	x0, #0x3b9a, lsl #16
  406638:	add	x0, x1, x0
  40663c:	str	x0, [sp, #216]
  406640:	ldr	x0, [sp, #88]
  406644:	mov	w1, #0x1                   	// #1
  406648:	strb	w1, [x0, #408]
  40664c:	mov	w0, #0x7                   	// #7
  406650:	str	w0, [sp, #96]
  406654:	str	wzr, [sp, #100]
  406658:	str	wzr, [sp, #104]
  40665c:	ldr	w0, [sp, #104]
  406660:	bl	402bf0 <log_get_max_level_realm@plt>
  406664:	mov	w1, w0
  406668:	ldr	w0, [sp, #96]
  40666c:	and	w0, w0, #0x7
  406670:	cmp	w1, w0
  406674:	b.lt	4066bc <manager_adjust_clock+0x2a0>  // b.tstop
  406678:	ldr	w0, [sp, #104]
  40667c:	lsl	w1, w0, #10
  406680:	ldr	w0, [sp, #96]
  406684:	orr	w6, w1, w0
  406688:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40668c:	add	x1, x0, #0x67b
  406690:	ldr	d0, [sp, #80]
  406694:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406698:	add	x5, x0, #0x8d8
  40669c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4066a0:	add	x4, x0, #0x3e0
  4066a4:	mov	w3, #0x112                 	// #274
  4066a8:	mov	x2, x1
  4066ac:	ldr	w1, [sp, #100]
  4066b0:	mov	w0, w6
  4066b4:	bl	4029d0 <log_internal_realm@plt>
  4066b8:	b	4066c4 <manager_adjust_clock+0x2a8>
  4066bc:	ldr	w0, [sp, #100]
  4066c0:	cmp	w0, #0x0
  4066c4:	ldr	x0, [sp, #88]
  4066c8:	ldrb	w0, [x0, #448]
  4066cc:	cmp	w0, #0x0
  4066d0:	b.eq	4066e0 <manager_adjust_clock+0x2c4>  // b.none
  4066d4:	ldr	w0, [sp, #176]
  4066d8:	orr	w0, w0, #0x40
  4066dc:	str	w0, [sp, #176]
  4066e0:	ldr	w0, [sp, #76]
  4066e4:	cmn	w0, #0x1
  4066e8:	b.eq	406708 <manager_adjust_clock+0x2ec>  // b.none
  4066ec:	ldr	w0, [sp, #76]
  4066f0:	cmp	w0, #0x1
  4066f4:	b.ne	406718 <manager_adjust_clock+0x2fc>  // b.any
  4066f8:	ldr	w0, [sp, #176]
  4066fc:	orr	w0, w0, #0x10
  406700:	str	w0, [sp, #176]
  406704:	b	406718 <manager_adjust_clock+0x2fc>
  406708:	ldr	w0, [sp, #176]
  40670c:	orr	w0, w0, #0x20
  406710:	str	w0, [sp, #176]
  406714:	nop
  406718:	add	x0, sp, #0x88
  40671c:	mov	x1, x0
  406720:	mov	w0, #0x0                   	// #0
  406724:	bl	4025d0 <clock_adjtime@plt>
  406728:	str	w0, [sp, #120]
  40672c:	ldr	w0, [sp, #120]
  406730:	cmp	w0, #0x0
  406734:	b.ge	406748 <manager_adjust_clock+0x32c>  // b.tcont
  406738:	bl	4028c0 <__errno_location@plt>
  40673c:	ldr	w0, [x0]
  406740:	neg	w0, w0
  406744:	b	406884 <manager_adjust_clock+0x468>
  406748:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40674c:	add	x0, x0, #0x8f8
  406750:	bl	4028b0 <touch@plt>
  406754:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406758:	add	x0, x0, #0x918
  40675c:	bl	4028b0 <touch@plt>
  406760:	ldr	x1, [sp, #152]
  406764:	ldr	x0, [sp, #88]
  406768:	str	x1, [x0, #416]
  40676c:	mov	w0, #0x7                   	// #7
  406770:	str	w0, [sp, #124]
  406774:	str	wzr, [sp, #128]
  406778:	str	wzr, [sp, #132]
  40677c:	ldr	w0, [sp, #132]
  406780:	bl	402bf0 <log_get_max_level_realm@plt>
  406784:	mov	w1, w0
  406788:	ldr	w0, [sp, #124]
  40678c:	and	w0, w0, #0x7
  406790:	cmp	w1, w0
  406794:	b.lt	406878 <manager_adjust_clock+0x45c>  // b.tstop
  406798:	ldr	w0, [sp, #132]
  40679c:	lsl	w1, w0, #10
  4067a0:	ldr	w0, [sp, #124]
  4067a4:	orr	w8, w1, w0
  4067a8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4067ac:	add	x9, x0, #0x67b
  4067b0:	ldr	w10, [sp, #176]
  4067b4:	ldr	w0, [sp, #176]
  4067b8:	and	w0, w0, #0x40
  4067bc:	cmp	w0, #0x0
  4067c0:	b.eq	4067d0 <manager_adjust_clock+0x3b4>  // b.none
  4067c4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4067c8:	add	x1, x0, #0x940
  4067cc:	b	4067d8 <manager_adjust_clock+0x3bc>
  4067d0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4067d4:	add	x1, x0, #0x948
  4067d8:	ldr	x2, [sp, #208]
  4067dc:	ldr	x0, [sp, #216]
  4067e0:	mov	x3, x0
  4067e4:	mov	x0, #0x34db                	// #13531
  4067e8:	movk	x0, #0xd7b6, lsl #16
  4067ec:	movk	x0, #0xde82, lsl #32
  4067f0:	movk	x0, #0x431b, lsl #48
  4067f4:	umulh	x0, x3, x0
  4067f8:	lsr	x3, x0, #18
  4067fc:	ldr	x4, [sp, #184]
  406800:	ldr	d0, [sp, #144]
  406804:	scvtf	d0, d0
  406808:	mov	x0, #0xcd6500000000        	// #225833675390976
  40680c:	movk	x0, #0x41cd, lsl #48
  406810:	fmov	d1, x0
  406814:	fdiv	d0, d0, d1
  406818:	ldr	x5, [sp, #152]
  40681c:	ldr	x0, [sp, #152]
  406820:	mov	x6, #0xffff                	// #65535
  406824:	add	x6, x0, x6
  406828:	cmp	x0, #0x0
  40682c:	csel	x0, x6, x0, lt  // lt = tstop
  406830:	asr	x0, x0, #16
  406834:	str	x0, [sp, #32]
  406838:	str	x5, [sp, #24]
  40683c:	str	x4, [sp, #16]
  406840:	str	x3, [sp, #8]
  406844:	str	x2, [sp]
  406848:	mov	x7, x1
  40684c:	mov	w6, w10
  406850:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406854:	add	x5, x0, #0x950
  406858:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40685c:	add	x4, x0, #0x3e0
  406860:	mov	w3, #0x133                 	// #307
  406864:	mov	x2, x9
  406868:	ldr	w1, [sp, #128]
  40686c:	mov	w0, w8
  406870:	bl	4029d0 <log_internal_realm@plt>
  406874:	b	406880 <manager_adjust_clock+0x464>
  406878:	ldr	w0, [sp, #128]
  40687c:	cmp	w0, #0x0
  406880:	mov	w0, #0x0                   	// #0
  406884:	mov	w1, w0
  406888:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  40688c:	add	x0, x0, #0xa48
  406890:	ldr	x2, [sp, #344]
  406894:	ldr	x0, [x0]
  406898:	eor	x0, x2, x0
  40689c:	cmp	x0, #0x0
  4068a0:	b.eq	4068a8 <manager_adjust_clock+0x48c>  // b.none
  4068a4:	bl	402930 <__stack_chk_fail@plt>
  4068a8:	mov	w0, w1
  4068ac:	ldp	x29, x30, [sp, #48]
  4068b0:	add	sp, sp, #0x160
  4068b4:	ret

00000000004068b8 <manager_sample_spike_detection>:
  4068b8:	stp	x29, x30, [sp, #-80]!
  4068bc:	mov	x29, sp
  4068c0:	str	x0, [sp, #40]
  4068c4:	str	d0, [sp, #32]
  4068c8:	str	d1, [sp, #24]
  4068cc:	ldr	x0, [sp, #40]
  4068d0:	cmp	x0, #0x0
  4068d4:	cset	w0, eq  // eq = none
  4068d8:	and	w0, w0, #0xff
  4068dc:	and	x0, x0, #0xff
  4068e0:	cmp	x0, #0x0
  4068e4:	b.eq	406910 <manager_sample_spike_detection+0x58>  // b.none
  4068e8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4068ec:	add	x1, x0, #0x67b
  4068f0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4068f4:	add	x4, x0, #0x400
  4068f8:	mov	w3, #0x146                 	// #326
  4068fc:	mov	x2, x1
  406900:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406904:	add	x1, x0, #0x6a0
  406908:	mov	w0, #0x0                   	// #0
  40690c:	bl	4027f0 <log_assert_failed_realm@plt>
  406910:	ldr	x0, [sp, #40]
  406914:	ldr	x0, [x0, #144]
  406918:	add	x1, x0, #0x1
  40691c:	ldr	x0, [sp, #40]
  406920:	str	x1, [x0, #144]
  406924:	ldr	x0, [sp, #40]
  406928:	ldr	x0, [x0, #144]
  40692c:	cmp	x0, #0x1
  406930:	b.ne	40693c <manager_sample_spike_detection+0x84>  // b.any
  406934:	mov	w0, #0x0                   	// #0
  406938:	b	406b70 <manager_sample_spike_detection+0x2b8>
  40693c:	ldr	x0, [sp, #40]
  406940:	ldr	w0, [x0, #384]
  406944:	str	w0, [sp, #56]
  406948:	ldr	w0, [sp, #56]
  40694c:	add	w0, w0, #0x1
  406950:	and	w0, w0, #0x7
  406954:	str	w0, [sp, #60]
  406958:	ldr	x0, [sp, #40]
  40695c:	ldr	w1, [sp, #60]
  406960:	str	w1, [x0, #384]
  406964:	ldr	x1, [sp, #40]
  406968:	ldr	w0, [sp, #60]
  40696c:	add	x0, x0, #0x10
  406970:	lsl	x0, x0, #4
  406974:	add	x0, x1, x0
  406978:	ldr	d0, [sp, #32]
  40697c:	str	d0, [x0]
  406980:	ldr	x1, [sp, #40]
  406984:	ldr	w0, [sp, #60]
  406988:	add	x0, x0, #0x10
  40698c:	lsl	x0, x0, #4
  406990:	add	x0, x1, x0
  406994:	ldr	d0, [sp, #24]
  406998:	str	d0, [x0, #8]
  40699c:	ldr	x0, [sp, #40]
  4069a0:	ldr	d0, [x0, #392]
  4069a4:	str	d0, [sp, #72]
  4069a8:	ldr	w0, [sp, #56]
  4069ac:	str	w0, [sp, #52]
  4069b0:	str	wzr, [sp, #48]
  4069b4:	b	406a24 <manager_sample_spike_detection+0x16c>
  4069b8:	ldr	x1, [sp, #40]
  4069bc:	ldr	w0, [sp, #48]
  4069c0:	add	x0, x0, #0x10
  4069c4:	lsl	x0, x0, #4
  4069c8:	add	x0, x1, x0
  4069cc:	ldr	d0, [x0, #8]
  4069d0:	fcmpe	d0, #0.0
  4069d4:	b.le	406a18 <manager_sample_spike_detection+0x160>
  4069d8:	ldr	x1, [sp, #40]
  4069dc:	ldr	w0, [sp, #48]
  4069e0:	add	x0, x0, #0x10
  4069e4:	lsl	x0, x0, #4
  4069e8:	add	x0, x1, x0
  4069ec:	ldr	d1, [x0, #8]
  4069f0:	ldr	x1, [sp, #40]
  4069f4:	ldr	w0, [sp, #52]
  4069f8:	add	x0, x0, #0x10
  4069fc:	lsl	x0, x0, #4
  406a00:	add	x0, x1, x0
  406a04:	ldr	d0, [x0, #8]
  406a08:	fcmpe	d1, d0
  406a0c:	b.pl	406a18 <manager_sample_spike_detection+0x160>  // b.nfrst
  406a10:	ldr	w0, [sp, #48]
  406a14:	str	w0, [sp, #52]
  406a18:	ldr	w0, [sp, #48]
  406a1c:	add	w0, w0, #0x1
  406a20:	str	w0, [sp, #48]
  406a24:	ldr	w0, [sp, #48]
  406a28:	cmp	w0, #0x7
  406a2c:	b.ls	4069b8 <manager_sample_spike_detection+0x100>  // b.plast
  406a30:	str	xzr, [sp, #64]
  406a34:	str	wzr, [sp, #48]
  406a38:	b	406a94 <manager_sample_spike_detection+0x1dc>
  406a3c:	ldr	x1, [sp, #40]
  406a40:	ldr	w0, [sp, #48]
  406a44:	add	x0, x0, #0x10
  406a48:	lsl	x0, x0, #4
  406a4c:	add	x0, x1, x0
  406a50:	ldr	d1, [x0]
  406a54:	ldr	x1, [sp, #40]
  406a58:	ldr	w0, [sp, #52]
  406a5c:	add	x0, x0, #0x10
  406a60:	lsl	x0, x0, #4
  406a64:	add	x0, x1, x0
  406a68:	ldr	d0, [x0]
  406a6c:	fsub	d0, d1, d0
  406a70:	fmov	d1, #2.000000000000000000e+00
  406a74:	bl	402bb0 <pow@plt>
  406a78:	fmov	d1, d0
  406a7c:	ldr	d0, [sp, #64]
  406a80:	fadd	d0, d0, d1
  406a84:	str	d0, [sp, #64]
  406a88:	ldr	w0, [sp, #48]
  406a8c:	add	w0, w0, #0x1
  406a90:	str	w0, [sp, #48]
  406a94:	ldr	w0, [sp, #48]
  406a98:	cmp	w0, #0x7
  406a9c:	b.ls	406a3c <manager_sample_spike_detection+0x184>  // b.plast
  406aa0:	fmov	d0, #7.000000000000000000e+00
  406aa4:	ldr	d1, [sp, #64]
  406aa8:	fdiv	d0, d1, d0
  406aac:	bl	402a60 <sqrt@plt>
  406ab0:	ldr	x0, [sp, #40]
  406ab4:	str	d0, [x0, #392]
  406ab8:	ldr	x0, [sp, #40]
  406abc:	ldrb	w0, [x0, #248]
  406ac0:	cmp	w0, #0x0
  406ac4:	b.eq	406ad0 <manager_sample_spike_detection+0x218>  // b.none
  406ac8:	mov	w0, #0x0                   	// #0
  406acc:	b	406b70 <manager_sample_spike_detection+0x2b8>
  406ad0:	ldr	d0, [sp, #32]
  406ad4:	fabs	d0, d0
  406ad8:	ldr	d1, [sp, #24]
  406adc:	fcmpe	d1, d0
  406ae0:	b.pl	406aec <manager_sample_spike_detection+0x234>  // b.nfrst
  406ae4:	mov	w0, #0x0                   	// #0
  406ae8:	b	406b70 <manager_sample_spike_detection+0x2b8>
  406aec:	ldr	x0, [sp, #40]
  406af0:	ldr	x0, [x0, #144]
  406af4:	cmp	x0, #0x3
  406af8:	b.hi	406b04 <manager_sample_spike_detection+0x24c>  // b.pmore
  406afc:	mov	w0, #0x0                   	// #0
  406b00:	b	406b70 <manager_sample_spike_detection+0x2b8>
  406b04:	ldr	d0, [sp, #32]
  406b08:	fabs	d1, d0
  406b0c:	ldr	x1, [sp, #40]
  406b10:	ldr	w0, [sp, #52]
  406b14:	add	x0, x0, #0x10
  406b18:	lsl	x0, x0, #4
  406b1c:	add	x0, x1, x0
  406b20:	ldr	d0, [x0, #8]
  406b24:	fcmpe	d1, d0
  406b28:	b.le	406b34 <manager_sample_spike_detection+0x27c>
  406b2c:	mov	w0, #0x1                   	// #1
  406b30:	b	406b70 <manager_sample_spike_detection+0x2b8>
  406b34:	ldr	x1, [sp, #40]
  406b38:	ldr	w0, [sp, #56]
  406b3c:	add	x0, x0, #0x10
  406b40:	lsl	x0, x0, #4
  406b44:	add	x0, x1, x0
  406b48:	ldr	d0, [x0]
  406b4c:	ldr	d1, [sp, #32]
  406b50:	fsub	d0, d1, d0
  406b54:	fabs	d1, d0
  406b58:	ldr	d2, [sp, #72]
  406b5c:	fmov	d0, #3.000000000000000000e+00
  406b60:	fmul	d0, d2, d0
  406b64:	fcmpe	d1, d0
  406b68:	cset	w0, gt
  406b6c:	and	w0, w0, #0xff
  406b70:	ldp	x29, x30, [sp], #80
  406b74:	ret

0000000000406b78 <manager_adjust_poll>:
  406b78:	stp	x29, x30, [sp, #-48]!
  406b7c:	mov	x29, sp
  406b80:	str	x0, [sp, #40]
  406b84:	str	d0, [sp, #32]
  406b88:	strb	w1, [sp, #31]
  406b8c:	ldr	x0, [sp, #40]
  406b90:	cmp	x0, #0x0
  406b94:	cset	w0, eq  // eq = none
  406b98:	and	w0, w0, #0xff
  406b9c:	and	x0, x0, #0xff
  406ba0:	cmp	x0, #0x0
  406ba4:	b.eq	406bd0 <manager_adjust_poll+0x58>  // b.none
  406ba8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406bac:	add	x1, x0, #0x67b
  406bb0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406bb4:	add	x4, x0, #0x420
  406bb8:	mov	w3, #0x175                 	// #373
  406bbc:	mov	x2, x1
  406bc0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406bc4:	add	x1, x0, #0x6a0
  406bc8:	mov	w0, #0x0                   	// #0
  406bcc:	bl	4027f0 <log_assert_failed_realm@plt>
  406bd0:	ldr	x0, [sp, #40]
  406bd4:	ldrb	w0, [x0, #248]
  406bd8:	cmp	w0, #0x0
  406bdc:	b.eq	406bfc <manager_adjust_poll+0x84>  // b.none
  406be0:	ldr	x0, [sp, #40]
  406be4:	ldr	x1, [x0, #232]
  406be8:	ldr	x0, [sp, #40]
  406bec:	str	x1, [x0, #224]
  406bf0:	ldr	x0, [sp, #40]
  406bf4:	strb	wzr, [x0, #248]
  406bf8:	b	406ce4 <manager_adjust_poll+0x16c>
  406bfc:	ldrb	w0, [sp, #31]
  406c00:	eor	w0, w0, #0x1
  406c04:	and	w0, w0, #0xff
  406c08:	cmp	w0, #0x0
  406c0c:	b.eq	406c3c <manager_adjust_poll+0xc4>  // b.none
  406c10:	ldr	d0, [sp, #32]
  406c14:	fabs	d0, d0
  406c18:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406c1c:	ldr	d1, [x0, #704]
  406c20:	fcmpe	d0, d1
  406c24:	b.le	406c3c <manager_adjust_poll+0xc4>
  406c28:	ldr	x0, [sp, #40]
  406c2c:	ldr	x1, [x0, #232]
  406c30:	ldr	x0, [sp, #40]
  406c34:	str	x1, [x0, #224]
  406c38:	b	406ce4 <manager_adjust_poll+0x16c>
  406c3c:	ldr	d0, [sp, #32]
  406c40:	fabs	d0, d0
  406c44:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406c48:	ldr	d1, [x0, #712]
  406c4c:	fcmpe	d0, d1
  406c50:	b.pl	406c84 <manager_adjust_poll+0x10c>  // b.nfrst
  406c54:	ldr	x0, [sp, #40]
  406c58:	ldr	x1, [x0, #224]
  406c5c:	ldr	x0, [sp, #40]
  406c60:	ldr	x0, [x0, #240]
  406c64:	cmp	x1, x0
  406c68:	b.cs	406cd8 <manager_adjust_poll+0x160>  // b.hs, b.nlast
  406c6c:	ldr	x0, [sp, #40]
  406c70:	ldr	x0, [x0, #224]
  406c74:	lsl	x1, x0, #1
  406c78:	ldr	x0, [sp, #40]
  406c7c:	str	x1, [x0, #224]
  406c80:	b	406cd8 <manager_adjust_poll+0x160>
  406c84:	ldrb	w0, [sp, #31]
  406c88:	cmp	w0, #0x0
  406c8c:	b.ne	406ca8 <manager_adjust_poll+0x130>  // b.any
  406c90:	ldr	d0, [sp, #32]
  406c94:	fabs	d0, d0
  406c98:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406c9c:	ldr	d1, [x0, #720]
  406ca0:	fcmpe	d0, d1
  406ca4:	b.le	406ce4 <manager_adjust_poll+0x16c>
  406ca8:	ldr	x0, [sp, #40]
  406cac:	ldr	x1, [x0, #224]
  406cb0:	ldr	x0, [sp, #40]
  406cb4:	ldr	x0, [x0, #232]
  406cb8:	cmp	x1, x0
  406cbc:	b.ls	406ce0 <manager_adjust_poll+0x168>  // b.plast
  406cc0:	ldr	x0, [sp, #40]
  406cc4:	ldr	x0, [x0, #224]
  406cc8:	lsr	x1, x0, #1
  406ccc:	ldr	x0, [sp, #40]
  406cd0:	str	x1, [x0, #224]
  406cd4:	b	406ce0 <manager_adjust_poll+0x168>
  406cd8:	nop
  406cdc:	b	406ce4 <manager_adjust_poll+0x16c>
  406ce0:	nop
  406ce4:	ldp	x29, x30, [sp], #48
  406ce8:	ret

0000000000406cec <manager_receive_response>:
  406cec:	sub	sp, sp, #0x310
  406cf0:	stp	x29, x30, [sp, #64]
  406cf4:	add	x29, sp, #0x40
  406cf8:	stp	x19, x20, [sp, #80]
  406cfc:	stp	x21, x22, [sp, #96]
  406d00:	stp	x23, x24, [sp, #112]
  406d04:	str	d8, [sp, #128]
  406d08:	str	x0, [sp, #168]
  406d0c:	str	w1, [sp, #164]
  406d10:	str	w2, [sp, #160]
  406d14:	str	x3, [sp, #152]
  406d18:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  406d1c:	add	x0, x0, #0xa48
  406d20:	ldr	x1, [x0]
  406d24:	str	x1, [sp, #776]
  406d28:	mov	x1, #0x0                   	// #0
  406d2c:	ldr	x0, [sp, #152]
  406d30:	str	x0, [sp, #424]
  406d34:	add	x0, sp, #0x258
  406d38:	str	x0, [sp, #496]
  406d3c:	mov	x0, #0x30                  	// #48
  406d40:	str	x0, [sp, #504]
  406d44:	add	x0, sp, #0x200
  406d48:	stp	xzr, xzr, [x0]
  406d4c:	add	x0, sp, #0x200
  406d50:	stp	xzr, xzr, [x0, #16]
  406d54:	add	x0, sp, #0x200
  406d58:	stp	xzr, xzr, [x0, #32]
  406d5c:	str	xzr, [sp, #560]
  406d60:	add	x0, sp, #0x288
  406d64:	str	x0, [sp, #512]
  406d68:	mov	w0, #0x80                  	// #128
  406d6c:	str	w0, [sp, #520]
  406d70:	add	x0, sp, #0x1f0
  406d74:	str	x0, [sp, #528]
  406d78:	mov	x0, #0x1                   	// #1
  406d7c:	str	x0, [sp, #536]
  406d80:	add	x0, sp, #0x238
  406d84:	str	x0, [sp, #544]
  406d88:	mov	x0, #0x20                  	// #32
  406d8c:	str	x0, [sp, #552]
  406d90:	str	xzr, [sp, #416]
  406d94:	ldr	x0, [sp, #168]
  406d98:	cmp	x0, #0x0
  406d9c:	cset	w0, eq  // eq = none
  406da0:	and	w0, w0, #0xff
  406da4:	and	x0, x0, #0xff
  406da8:	cmp	x0, #0x0
  406dac:	b.eq	406dd8 <manager_receive_response+0xec>  // b.none
  406db0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406db4:	add	x1, x0, #0x67b
  406db8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406dbc:	add	x4, x0, #0x438
  406dc0:	mov	w3, #0x1b1                 	// #433
  406dc4:	mov	x2, x1
  406dc8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406dcc:	add	x1, x0, #0x9d8
  406dd0:	mov	w0, #0x0                   	// #0
  406dd4:	bl	4027f0 <log_assert_failed_realm@plt>
  406dd8:	ldr	x0, [sp, #424]
  406ddc:	cmp	x0, #0x0
  406de0:	cset	w0, eq  // eq = none
  406de4:	and	w0, w0, #0xff
  406de8:	and	x0, x0, #0xff
  406dec:	cmp	x0, #0x0
  406df0:	b.eq	406e1c <manager_receive_response+0x130>  // b.none
  406df4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406df8:	add	x1, x0, #0x67b
  406dfc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406e00:	add	x4, x0, #0x438
  406e04:	mov	w3, #0x1b2                 	// #434
  406e08:	mov	x2, x1
  406e0c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406e10:	add	x1, x0, #0x6a0
  406e14:	mov	w0, #0x0                   	// #0
  406e18:	bl	4027f0 <log_assert_failed_realm@plt>
  406e1c:	ldr	w0, [sp, #160]
  406e20:	and	w0, w0, #0x18
  406e24:	cmp	w0, #0x0
  406e28:	b.eq	406eac <manager_receive_response+0x1c0>  // b.none
  406e2c:	mov	w0, #0x4                   	// #4
  406e30:	str	w0, [sp, #388]
  406e34:	str	wzr, [sp, #392]
  406e38:	str	wzr, [sp, #396]
  406e3c:	ldr	w0, [sp, #396]
  406e40:	bl	402bf0 <log_get_max_level_realm@plt>
  406e44:	mov	w1, w0
  406e48:	ldr	w0, [sp, #388]
  406e4c:	and	w0, w0, #0x7
  406e50:	cmp	w1, w0
  406e54:	b.lt	406e98 <manager_receive_response+0x1ac>  // b.tstop
  406e58:	ldr	w0, [sp, #396]
  406e5c:	lsl	w1, w0, #10
  406e60:	ldr	w0, [sp, #388]
  406e64:	orr	w6, w1, w0
  406e68:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406e6c:	add	x1, x0, #0x67b
  406e70:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406e74:	add	x5, x0, #0x9e0
  406e78:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406e7c:	add	x4, x0, #0x458
  406e80:	mov	w3, #0x1b5                 	// #437
  406e84:	mov	x2, x1
  406e88:	ldr	w1, [sp, #392]
  406e8c:	mov	w0, w6
  406e90:	bl	4029d0 <log_internal_realm@plt>
  406e94:	b	406ea0 <manager_receive_response+0x1b4>
  406e98:	ldr	w0, [sp, #392]
  406e9c:	cmp	w0, #0x0
  406ea0:	ldr	x0, [sp, #424]
  406ea4:	bl	408c88 <manager_connect>
  406ea8:	b	407db0 <manager_receive_response+0x10c4>
  406eac:	add	x0, sp, #0x200
  406eb0:	mov	w2, #0x40                  	// #64
  406eb4:	mov	x1, x0
  406eb8:	ldr	w0, [sp, #164]
  406ebc:	bl	402a70 <recvmsg@plt>
  406ec0:	str	x0, [sp, #432]
  406ec4:	ldr	x0, [sp, #432]
  406ec8:	cmp	x0, #0x0
  406ecc:	b.ge	406f68 <manager_receive_response+0x27c>  // b.tcont
  406ed0:	bl	4028c0 <__errno_location@plt>
  406ed4:	ldr	w0, [x0]
  406ed8:	cmp	w0, #0xb
  406edc:	b.ne	406ee8 <manager_receive_response+0x1fc>  // b.any
  406ee0:	mov	w0, #0x0                   	// #0
  406ee4:	b	407db0 <manager_receive_response+0x10c4>
  406ee8:	mov	w0, #0x4                   	// #4
  406eec:	str	w0, [sp, #376]
  406ef0:	str	wzr, [sp, #380]
  406ef4:	str	wzr, [sp, #384]
  406ef8:	ldr	w0, [sp, #384]
  406efc:	bl	402bf0 <log_get_max_level_realm@plt>
  406f00:	mov	w1, w0
  406f04:	ldr	w0, [sp, #376]
  406f08:	and	w0, w0, #0x7
  406f0c:	cmp	w1, w0
  406f10:	b.lt	406f54 <manager_receive_response+0x268>  // b.tstop
  406f14:	ldr	w0, [sp, #384]
  406f18:	lsl	w1, w0, #10
  406f1c:	ldr	w0, [sp, #376]
  406f20:	orr	w6, w1, w0
  406f24:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406f28:	add	x1, x0, #0x67b
  406f2c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406f30:	add	x5, x0, #0xa08
  406f34:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406f38:	add	x4, x0, #0x458
  406f3c:	mov	w3, #0x1be                 	// #446
  406f40:	mov	x2, x1
  406f44:	ldr	w1, [sp, #380]
  406f48:	mov	w0, w6
  406f4c:	bl	4029d0 <log_internal_realm@plt>
  406f50:	b	406f5c <manager_receive_response+0x270>
  406f54:	ldr	w0, [sp, #380]
  406f58:	cmp	w0, #0x0
  406f5c:	ldr	x0, [sp, #424]
  406f60:	bl	408c88 <manager_connect>
  406f64:	b	407db0 <manager_receive_response+0x10c4>
  406f68:	ldr	x0, [sp, #504]
  406f6c:	cmp	x0, #0x2f
  406f70:	b.ls	406f84 <manager_receive_response+0x298>  // b.plast
  406f74:	ldr	w0, [sp, #560]
  406f78:	and	w0, w0, #0x20
  406f7c:	cmp	w0, #0x0
  406f80:	b.eq	407004 <manager_receive_response+0x318>  // b.none
  406f84:	mov	w0, #0x4                   	// #4
  406f88:	str	w0, [sp, #364]
  406f8c:	str	wzr, [sp, #368]
  406f90:	str	wzr, [sp, #372]
  406f94:	ldr	w0, [sp, #372]
  406f98:	bl	402bf0 <log_get_max_level_realm@plt>
  406f9c:	mov	w1, w0
  406fa0:	ldr	w0, [sp, #364]
  406fa4:	and	w0, w0, #0x7
  406fa8:	cmp	w1, w0
  406fac:	b.lt	406ff0 <manager_receive_response+0x304>  // b.tstop
  406fb0:	ldr	w0, [sp, #372]
  406fb4:	lsl	w1, w0, #10
  406fb8:	ldr	w0, [sp, #364]
  406fbc:	orr	w6, w1, w0
  406fc0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406fc4:	add	x1, x0, #0x67b
  406fc8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  406fcc:	add	x5, x0, #0xa30
  406fd0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  406fd4:	add	x4, x0, #0x458
  406fd8:	mov	w3, #0x1c4                 	// #452
  406fdc:	mov	x2, x1
  406fe0:	ldr	w1, [sp, #368]
  406fe4:	mov	w0, w6
  406fe8:	bl	4029d0 <log_internal_realm@plt>
  406fec:	b	406ff8 <manager_receive_response+0x30c>
  406ff0:	ldr	w0, [sp, #368]
  406ff4:	cmp	w0, #0x0
  406ff8:	ldr	x0, [sp, #424]
  406ffc:	bl	408c88 <manager_connect>
  407000:	b	407db0 <manager_receive_response+0x10c4>
  407004:	ldr	x0, [sp, #424]
  407008:	ldr	x0, [x0, #120]
  40700c:	cmp	x0, #0x0
  407010:	b.eq	40704c <manager_receive_response+0x360>  // b.none
  407014:	ldr	x0, [sp, #424]
  407018:	ldr	x0, [x0, #128]
  40701c:	cmp	x0, #0x0
  407020:	b.eq	40704c <manager_receive_response+0x360>  // b.none
  407024:	ldr	x0, [sp, #424]
  407028:	ldr	x0, [x0, #128]
  40702c:	add	x1, x0, #0x8
  407030:	add	x0, sp, #0x288
  407034:	bl	4025c0 <sockaddr_equal@plt>
  407038:	and	w0, w0, #0xff
  40703c:	eor	w0, w0, #0x1
  407040:	and	w0, w0, #0xff
  407044:	cmp	w0, #0x0
  407048:	b.eq	4070c8 <manager_receive_response+0x3dc>  // b.none
  40704c:	mov	w0, #0x7                   	// #7
  407050:	str	w0, [sp, #352]
  407054:	str	wzr, [sp, #356]
  407058:	str	wzr, [sp, #360]
  40705c:	ldr	w0, [sp, #360]
  407060:	bl	402bf0 <log_get_max_level_realm@plt>
  407064:	mov	w1, w0
  407068:	ldr	w0, [sp, #352]
  40706c:	and	w0, w0, #0x7
  407070:	cmp	w1, w0
  407074:	b.lt	4070b8 <manager_receive_response+0x3cc>  // b.tstop
  407078:	ldr	w0, [sp, #360]
  40707c:	lsl	w1, w0, #10
  407080:	ldr	w0, [sp, #352]
  407084:	orr	w6, w1, w0
  407088:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40708c:	add	x1, x0, #0x67b
  407090:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407094:	add	x5, x0, #0xa60
  407098:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40709c:	add	x4, x0, #0x458
  4070a0:	mov	w3, #0x1cb                 	// #459
  4070a4:	mov	x2, x1
  4070a8:	ldr	w1, [sp, #356]
  4070ac:	mov	w0, w6
  4070b0:	bl	4029d0 <log_internal_realm@plt>
  4070b4:	b	4070c0 <manager_receive_response+0x3d4>
  4070b8:	ldr	w0, [sp, #356]
  4070bc:	cmp	w0, #0x0
  4070c0:	mov	w0, #0x0                   	// #0
  4070c4:	b	407db0 <manager_receive_response+0x10c4>
  4070c8:	ldr	x0, [sp, #552]
  4070cc:	cmp	x0, #0xf
  4070d0:	b.ls	4070dc <manager_receive_response+0x3f0>  // b.plast
  4070d4:	ldr	x0, [sp, #544]
  4070d8:	b	4070e0 <manager_receive_response+0x3f4>
  4070dc:	mov	x0, #0x0                   	// #0
  4070e0:	str	x0, [sp, #408]
  4070e4:	b	40712c <manager_receive_response+0x440>
  4070e8:	ldr	x0, [sp, #408]
  4070ec:	ldr	w0, [x0, #8]
  4070f0:	cmp	w0, #0x1
  4070f4:	b.ne	407118 <manager_receive_response+0x42c>  // b.any
  4070f8:	ldr	x0, [sp, #408]
  4070fc:	ldr	w0, [x0, #12]
  407100:	cmp	w0, #0x23
  407104:	b.ne	40711c <manager_receive_response+0x430>  // b.any
  407108:	ldr	x0, [sp, #408]
  40710c:	add	x0, x0, #0x10
  407110:	str	x0, [sp, #416]
  407114:	b	40711c <manager_receive_response+0x430>
  407118:	nop
  40711c:	add	x0, sp, #0x200
  407120:	ldr	x1, [sp, #408]
  407124:	bl	402740 <__cmsg_nxthdr@plt>
  407128:	str	x0, [sp, #408]
  40712c:	ldr	x0, [sp, #408]
  407130:	cmp	x0, #0x0
  407134:	b.ne	4070e8 <manager_receive_response+0x3fc>  // b.any
  407138:	ldr	x0, [sp, #416]
  40713c:	cmp	x0, #0x0
  407140:	b.ne	4071d0 <manager_receive_response+0x4e4>  // b.any
  407144:	mov	w0, #0x3                   	// #3
  407148:	str	w0, [sp, #340]
  40714c:	mov	w0, #0x16                  	// #22
  407150:	movk	w0, #0x4000, lsl #16
  407154:	str	w0, [sp, #344]
  407158:	str	wzr, [sp, #348]
  40715c:	ldr	w0, [sp, #348]
  407160:	bl	402bf0 <log_get_max_level_realm@plt>
  407164:	mov	w1, w0
  407168:	ldr	w0, [sp, #340]
  40716c:	and	w0, w0, #0x7
  407170:	cmp	w1, w0
  407174:	b.lt	4071b8 <manager_receive_response+0x4cc>  // b.tstop
  407178:	ldr	w0, [sp, #348]
  40717c:	lsl	w1, w0, #10
  407180:	ldr	w0, [sp, #340]
  407184:	orr	w6, w1, w0
  407188:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40718c:	add	x1, x0, #0x67b
  407190:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407194:	add	x5, x0, #0xa80
  407198:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40719c:	add	x4, x0, #0x458
  4071a0:	mov	w3, #0x1da                 	// #474
  4071a4:	mov	x2, x1
  4071a8:	ldr	w1, [sp, #344]
  4071ac:	mov	w0, w6
  4071b0:	bl	4029d0 <log_internal_realm@plt>
  4071b4:	b	407db0 <manager_receive_response+0x10c4>
  4071b8:	ldr	w0, [sp, #344]
  4071bc:	cmp	w0, #0x0
  4071c0:	cneg	w0, w0, lt  // lt = tstop
  4071c4:	and	w0, w0, #0xff
  4071c8:	neg	w0, w0
  4071cc:	b	407db0 <manager_receive_response+0x10c4>
  4071d0:	ldr	x0, [sp, #424]
  4071d4:	ldrb	w0, [x0, #208]
  4071d8:	eor	w0, w0, #0x1
  4071dc:	and	w0, w0, #0xff
  4071e0:	cmp	w0, #0x0
  4071e4:	b.eq	407264 <manager_receive_response+0x578>  // b.none
  4071e8:	mov	w0, #0x7                   	// #7
  4071ec:	str	w0, [sp, #328]
  4071f0:	str	wzr, [sp, #332]
  4071f4:	str	wzr, [sp, #336]
  4071f8:	ldr	w0, [sp, #336]
  4071fc:	bl	402bf0 <log_get_max_level_realm@plt>
  407200:	mov	w1, w0
  407204:	ldr	w0, [sp, #328]
  407208:	and	w0, w0, #0x7
  40720c:	cmp	w1, w0
  407210:	b.lt	407254 <manager_receive_response+0x568>  // b.tstop
  407214:	ldr	w0, [sp, #336]
  407218:	lsl	w1, w0, #10
  40721c:	ldr	w0, [sp, #328]
  407220:	orr	w6, w1, w0
  407224:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407228:	add	x1, x0, #0x67b
  40722c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407230:	add	x5, x0, #0xaa0
  407234:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407238:	add	x4, x0, #0x458
  40723c:	mov	w3, #0x1de                 	// #478
  407240:	mov	x2, x1
  407244:	ldr	w1, [sp, #332]
  407248:	mov	w0, w6
  40724c:	bl	4029d0 <log_internal_realm@plt>
  407250:	b	40725c <manager_receive_response+0x570>
  407254:	ldr	w0, [sp, #332]
  407258:	cmp	w0, #0x0
  40725c:	mov	w0, #0x0                   	// #0
  407260:	b	407db0 <manager_receive_response+0x10c4>
  407264:	ldr	x0, [sp, #424]
  407268:	str	wzr, [x0, #140]
  40726c:	ldr	w0, [sp, #624]
  407270:	bl	405488 <be32toh>
  407274:	mov	w1, w0
  407278:	ldr	x0, [sp, #424]
  40727c:	ldr	x0, [x0, #184]
  407280:	mov	x2, x0
  407284:	mov	x0, #0x7e80                	// #32384
  407288:	movk	x0, #0x83aa, lsl #16
  40728c:	add	x0, x2, x0
  407290:	cmp	x1, x0
  407294:	b.ne	4072b4 <manager_receive_response+0x5c8>  // b.any
  407298:	ldr	w0, [sp, #628]
  40729c:	bl	405488 <be32toh>
  4072a0:	mov	w0, w0
  4072a4:	ldr	x1, [sp, #424]
  4072a8:	ldr	x1, [x1, #192]
  4072ac:	cmp	x0, x1
  4072b0:	b.eq	407330 <manager_receive_response+0x644>  // b.none
  4072b4:	mov	w0, #0x7                   	// #7
  4072b8:	str	w0, [sp, #316]
  4072bc:	str	wzr, [sp, #320]
  4072c0:	str	wzr, [sp, #324]
  4072c4:	ldr	w0, [sp, #324]
  4072c8:	bl	402bf0 <log_get_max_level_realm@plt>
  4072cc:	mov	w1, w0
  4072d0:	ldr	w0, [sp, #316]
  4072d4:	and	w0, w0, #0x7
  4072d8:	cmp	w1, w0
  4072dc:	b.lt	407320 <manager_receive_response+0x634>  // b.tstop
  4072e0:	ldr	w0, [sp, #324]
  4072e4:	lsl	w1, w0, #10
  4072e8:	ldr	w0, [sp, #316]
  4072ec:	orr	w6, w1, w0
  4072f0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4072f4:	add	x1, x0, #0x67b
  4072f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4072fc:	add	x5, x0, #0xac0
  407300:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407304:	add	x4, x0, #0x458
  407308:	mov	w3, #0x1e7                 	// #487
  40730c:	mov	x2, x1
  407310:	ldr	w1, [sp, #320]
  407314:	mov	w0, w6
  407318:	bl	4029d0 <log_internal_realm@plt>
  40731c:	b	407328 <manager_receive_response+0x63c>
  407320:	ldr	w0, [sp, #320]
  407324:	cmp	w0, #0x0
  407328:	mov	w0, #0x0                   	// #0
  40732c:	b	407db0 <manager_receive_response+0x10c4>
  407330:	ldr	x0, [sp, #424]
  407334:	ldr	x0, [x0, #152]
  407338:	bl	402790 <sd_event_source_unref@plt>
  40733c:	mov	x1, x0
  407340:	ldr	x0, [sp, #424]
  407344:	str	x1, [x0, #152]
  407348:	ldr	w0, [sp, #632]
  40734c:	bl	405488 <be32toh>
  407350:	mov	w1, w0
  407354:	mov	w0, #0xc6a3                	// #50851
  407358:	movk	w0, #0xe18b, lsl #16
  40735c:	cmp	w1, w0
  407360:	b.ls	407380 <manager_receive_response+0x694>  // b.plast
  407364:	ldr	w0, [sp, #640]
  407368:	bl	405488 <be32toh>
  40736c:	mov	w1, w0
  407370:	mov	w0, #0xc6a3                	// #50851
  407374:	movk	w0, #0xe18b, lsl #16
  407378:	cmp	w1, w0
  40737c:	b.hi	407400 <manager_receive_response+0x714>  // b.pmore
  407380:	mov	w0, #0x7                   	// #7
  407384:	str	w0, [sp, #304]
  407388:	str	wzr, [sp, #308]
  40738c:	str	wzr, [sp, #312]
  407390:	ldr	w0, [sp, #312]
  407394:	bl	402bf0 <log_get_max_level_realm@plt>
  407398:	mov	w1, w0
  40739c:	ldr	w0, [sp, #304]
  4073a0:	and	w0, w0, #0x7
  4073a4:	cmp	w1, w0
  4073a8:	b.lt	4073ec <manager_receive_response+0x700>  // b.tstop
  4073ac:	ldr	w0, [sp, #312]
  4073b0:	lsl	w1, w0, #10
  4073b4:	ldr	w0, [sp, #304]
  4073b8:	orr	w6, w1, w0
  4073bc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4073c0:	add	x1, x0, #0x67b
  4073c4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4073c8:	add	x5, x0, #0xaf0
  4073cc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4073d0:	add	x4, x0, #0x458
  4073d4:	mov	w3, #0x1ef                 	// #495
  4073d8:	mov	x2, x1
  4073dc:	ldr	w1, [sp, #308]
  4073e0:	mov	w0, w6
  4073e4:	bl	4029d0 <log_internal_realm@plt>
  4073e8:	b	4073f4 <manager_receive_response+0x708>
  4073ec:	ldr	w0, [sp, #308]
  4073f0:	cmp	w0, #0x0
  4073f4:	ldr	x0, [sp, #424]
  4073f8:	bl	408c88 <manager_connect>
  4073fc:	b	407db0 <manager_receive_response+0x10c4>
  407400:	ldrb	w0, [sp, #600]
  407404:	lsr	w0, w0, #6
  407408:	and	w0, w0, #0xff
  40740c:	and	w0, w0, #0x3
  407410:	cmp	w0, #0x3
  407414:	b.eq	407430 <manager_receive_response+0x744>  // b.none
  407418:	ldrb	w0, [sp, #601]
  40741c:	cmp	w0, #0x0
  407420:	b.eq	407430 <manager_receive_response+0x744>  // b.none
  407424:	ldrb	w0, [sp, #601]
  407428:	cmp	w0, #0xf
  40742c:	b.ls	4074b0 <manager_receive_response+0x7c4>  // b.plast
  407430:	mov	w0, #0x7                   	// #7
  407434:	str	w0, [sp, #292]
  407438:	str	wzr, [sp, #296]
  40743c:	str	wzr, [sp, #300]
  407440:	ldr	w0, [sp, #300]
  407444:	bl	402bf0 <log_get_max_level_realm@plt>
  407448:	mov	w1, w0
  40744c:	ldr	w0, [sp, #292]
  407450:	and	w0, w0, #0x7
  407454:	cmp	w1, w0
  407458:	b.lt	40749c <manager_receive_response+0x7b0>  // b.tstop
  40745c:	ldr	w0, [sp, #300]
  407460:	lsl	w1, w0, #10
  407464:	ldr	w0, [sp, #292]
  407468:	orr	w6, w1, w0
  40746c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407470:	add	x1, x0, #0x67b
  407474:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407478:	add	x5, x0, #0xb28
  40747c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407480:	add	x4, x0, #0x458
  407484:	mov	w3, #0x1f5                 	// #501
  407488:	mov	x2, x1
  40748c:	ldr	w1, [sp, #296]
  407490:	mov	w0, w6
  407494:	bl	4029d0 <log_internal_realm@plt>
  407498:	b	4074a4 <manager_receive_response+0x7b8>
  40749c:	ldr	w0, [sp, #296]
  4074a0:	cmp	w0, #0x0
  4074a4:	ldr	x0, [sp, #424]
  4074a8:	bl	408c88 <manager_connect>
  4074ac:	b	407db0 <manager_receive_response+0x10c4>
  4074b0:	strb	wzr, [sp, #186]
  4074b4:	ldrb	w0, [sp, #600]
  4074b8:	lsr	w0, w0, #3
  4074bc:	and	w0, w0, #0xff
  4074c0:	and	w0, w0, #0x7
  4074c4:	sub	w0, w0, #0x3
  4074c8:	cmp	w0, #0x1
  4074cc:	b.hi	4074d8 <manager_receive_response+0x7ec>  // b.pmore
  4074d0:	mov	w0, #0x1                   	// #1
  4074d4:	strb	w0, [sp, #186]
  4074d8:	nop
  4074dc:	ldrb	w0, [sp, #186]
  4074e0:	eor	w0, w0, #0x1
  4074e4:	and	w0, w0, #0xff
  4074e8:	cmp	w0, #0x0
  4074ec:	b.eq	407584 <manager_receive_response+0x898>  // b.none
  4074f0:	mov	w0, #0x7                   	// #7
  4074f4:	str	w0, [sp, #280]
  4074f8:	str	wzr, [sp, #284]
  4074fc:	str	wzr, [sp, #288]
  407500:	ldr	w0, [sp, #288]
  407504:	bl	402bf0 <log_get_max_level_realm@plt>
  407508:	mov	w1, w0
  40750c:	ldr	w0, [sp, #280]
  407510:	and	w0, w0, #0x7
  407514:	cmp	w1, w0
  407518:	b.lt	407570 <manager_receive_response+0x884>  // b.tstop
  40751c:	ldr	w0, [sp, #288]
  407520:	lsl	w1, w0, #10
  407524:	ldr	w0, [sp, #280]
  407528:	orr	w7, w1, w0
  40752c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407530:	add	x1, x0, #0x67b
  407534:	ldrb	w0, [sp, #600]
  407538:	lsr	w0, w0, #3
  40753c:	and	w0, w0, #0xff
  407540:	and	w0, w0, #0x7
  407544:	mov	w6, w0
  407548:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40754c:	add	x5, x0, #0xb58
  407550:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407554:	add	x4, x0, #0x458
  407558:	mov	w3, #0x1fa                 	// #506
  40755c:	mov	x2, x1
  407560:	ldr	w1, [sp, #284]
  407564:	mov	w0, w7
  407568:	bl	4029d0 <log_internal_realm@plt>
  40756c:	b	407578 <manager_receive_response+0x88c>
  407570:	ldr	w0, [sp, #284]
  407574:	cmp	w0, #0x0
  407578:	ldr	x0, [sp, #424]
  40757c:	bl	408c88 <manager_connect>
  407580:	b	407db0 <manager_receive_response+0x10c4>
  407584:	ldrb	w0, [sp, #600]
  407588:	and	w0, w0, #0x7
  40758c:	cmp	w0, #0x4
  407590:	b.eq	407620 <manager_receive_response+0x934>  // b.none
  407594:	mov	w0, #0x7                   	// #7
  407598:	str	w0, [sp, #268]
  40759c:	str	wzr, [sp, #272]
  4075a0:	str	wzr, [sp, #276]
  4075a4:	ldr	w0, [sp, #276]
  4075a8:	bl	402bf0 <log_get_max_level_realm@plt>
  4075ac:	mov	w1, w0
  4075b0:	ldr	w0, [sp, #268]
  4075b4:	and	w0, w0, #0x7
  4075b8:	cmp	w1, w0
  4075bc:	b.lt	40760c <manager_receive_response+0x920>  // b.tstop
  4075c0:	ldr	w0, [sp, #276]
  4075c4:	lsl	w1, w0, #10
  4075c8:	ldr	w0, [sp, #268]
  4075cc:	orr	w7, w1, w0
  4075d0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4075d4:	add	x1, x0, #0x67b
  4075d8:	ldrb	w0, [sp, #600]
  4075dc:	and	w0, w0, #0x7
  4075e0:	mov	w6, w0
  4075e4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4075e8:	add	x5, x0, #0xb78
  4075ec:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4075f0:	add	x4, x0, #0x458
  4075f4:	mov	w3, #0x1ff                 	// #511
  4075f8:	mov	x2, x1
  4075fc:	ldr	w1, [sp, #272]
  407600:	mov	w0, w7
  407604:	bl	4029d0 <log_internal_realm@plt>
  407608:	b	407614 <manager_receive_response+0x928>
  40760c:	ldr	w0, [sp, #272]
  407610:	cmp	w0, #0x0
  407614:	ldr	x0, [sp, #424]
  407618:	bl	408c88 <manager_connect>
  40761c:	b	407db0 <manager_receive_response+0x10c4>
  407620:	add	x0, sp, #0x258
  407624:	add	x0, x0, #0x4
  407628:	bl	4055c8 <ntp_ts_short_to_d>
  40762c:	fmov	d1, d0
  407630:	fmov	d0, #2.000000000000000000e+00
  407634:	fdiv	d8, d1, d0
  407638:	add	x0, sp, #0x258
  40763c:	add	x0, x0, #0x8
  407640:	bl	4055c8 <ntp_ts_short_to_d>
  407644:	fadd	d0, d8, d0
  407648:	str	d0, [sp, #440]
  40764c:	ldr	x0, [sp, #424]
  407650:	ldr	d0, [x0, #400]
  407654:	ucvtf	d0, d0
  407658:	mov	x0, #0x848000000000        	// #145685290680320
  40765c:	movk	x0, #0x412e, lsl #48
  407660:	fmov	d1, x0
  407664:	fdiv	d0, d0, d1
  407668:	ldr	d1, [sp, #440]
  40766c:	fcmpe	d1, d0
  407670:	b.le	4076f4 <manager_receive_response+0xa08>
  407674:	mov	w0, #0x7                   	// #7
  407678:	str	w0, [sp, #256]
  40767c:	str	wzr, [sp, #260]
  407680:	str	wzr, [sp, #264]
  407684:	ldr	w0, [sp, #264]
  407688:	bl	402bf0 <log_get_max_level_realm@plt>
  40768c:	mov	w1, w0
  407690:	ldr	w0, [sp, #256]
  407694:	and	w0, w0, #0x7
  407698:	cmp	w1, w0
  40769c:	b.lt	4076e0 <manager_receive_response+0x9f4>  // b.tstop
  4076a0:	ldr	w0, [sp, #264]
  4076a4:	lsl	w1, w0, #10
  4076a8:	ldr	w0, [sp, #256]
  4076ac:	orr	w6, w1, w0
  4076b0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4076b4:	add	x1, x0, #0x67b
  4076b8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4076bc:	add	x5, x0, #0xba0
  4076c0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4076c4:	add	x4, x0, #0x458
  4076c8:	mov	w3, #0x205                 	// #517
  4076cc:	mov	x2, x1
  4076d0:	ldr	w1, [sp, #260]
  4076d4:	mov	w0, w6
  4076d8:	bl	4029d0 <log_internal_realm@plt>
  4076dc:	b	4076e8 <manager_receive_response+0x9fc>
  4076e0:	ldr	w0, [sp, #260]
  4076e4:	cmp	w0, #0x0
  4076e8:	ldr	x0, [sp, #424]
  4076ec:	bl	408c88 <manager_connect>
  4076f0:	b	407db0 <manager_receive_response+0x10c4>
  4076f4:	ldr	x0, [sp, #424]
  4076f8:	strb	wzr, [x0, #208]
  4076fc:	ldr	x0, [sp, #424]
  407700:	str	xzr, [x0, #200]
  407704:	ldr	x0, [sp, #424]
  407708:	bl	408060 <manager_listen_stop>
  40770c:	ldrb	w0, [sp, #600]
  407710:	lsr	w0, w0, #6
  407714:	and	w0, w0, #0xff
  407718:	and	w0, w0, #0x1
  40771c:	cmp	w0, #0x0
  407720:	b.eq	407730 <manager_receive_response+0xa44>  // b.none
  407724:	mov	w0, #0x1                   	// #1
  407728:	str	w0, [sp, #188]
  40772c:	b	407758 <manager_receive_response+0xa6c>
  407730:	ldrb	w0, [sp, #600]
  407734:	lsr	w0, w0, #6
  407738:	and	w0, w0, #0xff
  40773c:	and	w0, w0, #0x2
  407740:	cmp	w0, #0x0
  407744:	b.eq	407754 <manager_receive_response+0xa68>  // b.none
  407748:	mov	w0, #0xffffffff            	// #-1
  40774c:	str	w0, [sp, #188]
  407750:	b	407758 <manager_receive_response+0xa6c>
  407754:	str	wzr, [sp, #188]
  407758:	ldr	x0, [sp, #424]
  40775c:	add	x0, x0, #0xb8
  407760:	bl	40566c <ts_to_d>
  407764:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407768:	ldr	d1, [x0, #728]
  40776c:	fadd	d0, d0, d1
  407770:	str	d0, [sp, #448]
  407774:	add	x0, sp, #0x258
  407778:	add	x0, x0, #0x20
  40777c:	bl	40561c <ntp_ts_to_d>
  407780:	str	d0, [sp, #456]
  407784:	add	x0, sp, #0x258
  407788:	add	x0, x0, #0x28
  40778c:	bl	40561c <ntp_ts_to_d>
  407790:	str	d0, [sp, #464]
  407794:	ldr	x0, [sp, #416]
  407798:	bl	40566c <ts_to_d>
  40779c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4077a0:	ldr	d1, [x0, #728]
  4077a4:	fadd	d0, d0, d1
  4077a8:	str	d0, [sp, #472]
  4077ac:	ldr	d1, [sp, #456]
  4077b0:	ldr	d0, [sp, #448]
  4077b4:	fsub	d1, d1, d0
  4077b8:	ldr	d2, [sp, #464]
  4077bc:	ldr	d0, [sp, #472]
  4077c0:	fsub	d0, d2, d0
  4077c4:	fadd	d1, d1, d0
  4077c8:	fmov	d0, #2.000000000000000000e+00
  4077cc:	fdiv	d0, d1, d0
  4077d0:	str	d0, [sp, #480]
  4077d4:	ldr	d1, [sp, #472]
  4077d8:	ldr	d0, [sp, #448]
  4077dc:	fsub	d1, d1, d0
  4077e0:	ldr	d2, [sp, #456]
  4077e4:	ldr	d0, [sp, #464]
  4077e8:	fsub	d0, d2, d0
  4077ec:	fadd	d0, d1, d0
  4077f0:	str	d0, [sp, #488]
  4077f4:	ldr	d1, [sp, #488]
  4077f8:	ldr	d0, [sp, #480]
  4077fc:	ldr	x0, [sp, #424]
  407800:	bl	4068b8 <manager_sample_spike_detection>
  407804:	strb	w0, [sp, #187]
  407808:	ldrb	w1, [sp, #187]
  40780c:	ldr	d0, [sp, #480]
  407810:	ldr	x0, [sp, #424]
  407814:	bl	406b78 <manager_adjust_poll>
  407818:	mov	w0, #0x7                   	// #7
  40781c:	str	w0, [sp, #192]
  407820:	str	wzr, [sp, #196]
  407824:	str	wzr, [sp, #200]
  407828:	ldr	w0, [sp, #200]
  40782c:	bl	402bf0 <log_get_max_level_realm@plt>
  407830:	mov	w1, w0
  407834:	ldr	w0, [sp, #192]
  407838:	and	w0, w0, #0x7
  40783c:	cmp	w1, w0
  407840:	b.lt	4079c4 <manager_receive_response+0xcd8>  // b.tstop
  407844:	ldr	w0, [sp, #200]
  407848:	lsl	w1, w0, #10
  40784c:	ldr	w0, [sp, #192]
  407850:	orr	w20, w1, w0
  407854:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407858:	add	x21, x0, #0x67b
  40785c:	ldrb	w0, [sp, #600]
  407860:	lsr	w0, w0, #6
  407864:	and	w0, w0, #0xff
  407868:	and	w22, w0, #0x3
  40786c:	ldrb	w0, [sp, #600]
  407870:	lsr	w0, w0, #3
  407874:	and	w0, w0, #0xff
  407878:	and	w23, w0, #0x7
  40787c:	ldrb	w0, [sp, #600]
  407880:	and	w19, w0, #0x7
  407884:	ldrb	w0, [sp, #601]
  407888:	mov	w24, w0
  40788c:	ldrsb	w0, [sp, #603]
  407890:	scvtf	d0, w0
  407894:	bl	402940 <exp2@plt>
  407898:	fmov	d8, d0
  40789c:	ldrsb	w0, [sp, #603]
  4078a0:	mov	w5, w0
  4078a4:	ldrb	w0, [sp, #601]
  4078a8:	cmp	w0, #0x1
  4078ac:	b.ne	4078bc <manager_receive_response+0xbd0>  // b.any
  4078b0:	add	x0, sp, #0x258
  4078b4:	add	x0, x0, #0xc
  4078b8:	b	4078c4 <manager_receive_response+0xbd8>
  4078bc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4078c0:	add	x0, x0, #0x670
  4078c4:	ldr	d0, [sp, #448]
  4078c8:	adrp	x1, 40d000 <__func__.10592+0x9d0>
  4078cc:	ldr	d1, [x1, #728]
  4078d0:	fsub	d1, d0, d1
  4078d4:	ldr	d0, [sp, #456]
  4078d8:	adrp	x1, 40d000 <__func__.10592+0x9d0>
  4078dc:	ldr	d2, [x1, #728]
  4078e0:	fsub	d2, d0, d2
  4078e4:	ldr	d0, [sp, #464]
  4078e8:	adrp	x1, 40d000 <__func__.10592+0x9d0>
  4078ec:	ldr	d3, [x1, #728]
  4078f0:	fsub	d3, d0, d3
  4078f4:	ldr	d0, [sp, #472]
  4078f8:	adrp	x1, 40d000 <__func__.10592+0x9d0>
  4078fc:	ldr	d4, [x1, #728]
  407900:	fsub	d4, d0, d4
  407904:	ldr	x1, [sp, #424]
  407908:	ldr	x2, [x1, #144]
  40790c:	ldr	x1, [sp, #424]
  407910:	ldr	d0, [x1, #392]
  407914:	ldrb	w1, [sp, #187]
  407918:	cmp	w1, #0x0
  40791c:	b.eq	40792c <manager_receive_response+0xc40>  // b.none
  407920:	adrp	x1, 40c000 <manager_vtable+0xa0>
  407924:	add	x1, x1, #0xbd8
  407928:	b	407934 <manager_receive_response+0xc48>
  40792c:	adrp	x1, 40c000 <manager_vtable+0xa0>
  407930:	add	x1, x1, #0xbe0
  407934:	ldr	x3, [sp, #424]
  407938:	ldr	x4, [x3, #224]
  40793c:	mov	x3, #0x34db                	// #13531
  407940:	movk	x3, #0xd7b6, lsl #16
  407944:	movk	x3, #0xde82, lsl #32
  407948:	movk	x3, #0x431b, lsl #48
  40794c:	umulh	x3, x4, x3
  407950:	lsr	x3, x3, #18
  407954:	str	x3, [sp, #56]
  407958:	str	x1, [sp, #48]
  40795c:	str	d0, [sp, #40]
  407960:	str	x2, [sp, #32]
  407964:	str	x0, [sp, #24]
  407968:	str	w5, [sp, #16]
  40796c:	str	w24, [sp, #8]
  407970:	str	w19, [sp]
  407974:	ldr	d7, [sp, #488]
  407978:	ldr	d6, [sp, #480]
  40797c:	fmov	d5, d4
  407980:	fmov	d4, d3
  407984:	fmov	d3, d2
  407988:	fmov	d2, d1
  40798c:	ldr	d1, [sp, #440]
  407990:	fmov	d0, d8
  407994:	mov	w7, w23
  407998:	mov	w6, w22
  40799c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4079a0:	add	x5, x0, #0xbe8
  4079a4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4079a8:	add	x4, x0, #0x458
  4079ac:	mov	w3, #0x22f                 	// #559
  4079b0:	mov	x2, x21
  4079b4:	ldr	w1, [sp, #196]
  4079b8:	mov	w0, w20
  4079bc:	bl	4029d0 <log_internal_realm@plt>
  4079c0:	b	4079cc <manager_receive_response+0xce0>
  4079c4:	ldr	w0, [sp, #196]
  4079c8:	cmp	w0, #0x0
  4079cc:	ldrb	w0, [sp, #187]
  4079d0:	eor	w0, w0, #0x1
  4079d4:	and	w0, w0, #0xff
  4079d8:	cmp	w0, #0x0
  4079dc:	b.eq	407a84 <manager_receive_response+0xd98>  // b.none
  4079e0:	ldr	x0, [sp, #424]
  4079e4:	mov	w1, #0x1                   	// #1
  4079e8:	strb	w1, [x0, #409]
  4079ec:	ldr	w1, [sp, #188]
  4079f0:	ldr	d0, [sp, #480]
  4079f4:	ldr	x0, [sp, #424]
  4079f8:	bl	40641c <manager_adjust_clock>
  4079fc:	str	w0, [sp, #204]
  407a00:	ldr	w0, [sp, #204]
  407a04:	cmp	w0, #0x0
  407a08:	b.ge	407a84 <manager_receive_response+0xd98>  // b.tcont
  407a0c:	mov	w0, #0x3                   	// #3
  407a10:	str	w0, [sp, #208]
  407a14:	ldr	w0, [sp, #204]
  407a18:	str	w0, [sp, #212]
  407a1c:	str	wzr, [sp, #216]
  407a20:	ldr	w0, [sp, #216]
  407a24:	bl	402bf0 <log_get_max_level_realm@plt>
  407a28:	mov	w1, w0
  407a2c:	ldr	w0, [sp, #208]
  407a30:	and	w0, w0, #0x7
  407a34:	cmp	w1, w0
  407a38:	b.lt	407a7c <manager_receive_response+0xd90>  // b.tstop
  407a3c:	ldr	w0, [sp, #216]
  407a40:	lsl	w1, w0, #10
  407a44:	ldr	w0, [sp, #208]
  407a48:	orr	w6, w1, w0
  407a4c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407a50:	add	x1, x0, #0x67b
  407a54:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407a58:	add	x5, x0, #0xd68
  407a5c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407a60:	add	x4, x0, #0x458
  407a64:	mov	w3, #0x254                 	// #596
  407a68:	mov	x2, x1
  407a6c:	ldr	w1, [sp, #212]
  407a70:	mov	w0, w6
  407a74:	bl	4029d0 <log_internal_realm@plt>
  407a78:	b	407a84 <manager_receive_response+0xd98>
  407a7c:	ldr	w0, [sp, #212]
  407a80:	cmp	w0, #0x0
  407a84:	ldr	x0, [sp, #424]
  407a88:	add	x0, x0, #0x1c1
  407a8c:	mov	x1, x0
  407a90:	add	x0, sp, #0x258
  407a94:	ldp	x2, x3, [x0]
  407a98:	stp	x2, x3, [x1]
  407a9c:	ldp	x2, x3, [x0, #16]
  407aa0:	stp	x2, x3, [x1, #16]
  407aa4:	ldp	x2, x3, [x0, #32]
  407aa8:	stp	x2, x3, [x1, #32]
  407aac:	ldr	x0, [sp, #424]
  407ab0:	add	x2, x0, #0x200
  407ab4:	ldr	x0, [sp, #424]
  407ab8:	ldp	x0, x1, [x0, #184]
  407abc:	stp	x0, x1, [x2, #-8]
  407ac0:	ldr	x0, [sp, #424]
  407ac4:	add	x2, x0, #0x200
  407ac8:	ldr	x0, [sp, #416]
  407acc:	ldp	x0, x1, [x0]
  407ad0:	stp	x0, x1, [x2, #8]
  407ad4:	ldr	x0, [sp, #424]
  407ad8:	ldrb	w1, [sp, #187]
  407adc:	strb	w1, [x0, #536]
  407ae0:	mov	w0, #0x7                   	// #7
  407ae4:	str	w0, [sp, #220]
  407ae8:	str	wzr, [sp, #224]
  407aec:	str	wzr, [sp, #228]
  407af0:	ldr	w0, [sp, #228]
  407af4:	bl	402bf0 <log_get_max_level_realm@plt>
  407af8:	mov	w1, w0
  407afc:	ldr	w0, [sp, #220]
  407b00:	and	w0, w0, #0x7
  407b04:	cmp	w1, w0
  407b08:	b.lt	407bc8 <manager_receive_response+0xedc>  // b.tstop
  407b0c:	ldr	w0, [sp, #228]
  407b10:	lsl	w1, w0, #10
  407b14:	ldr	w0, [sp, #220]
  407b18:	orr	w8, w1, w0
  407b1c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407b20:	add	x2, x0, #0x67b
  407b24:	ldr	x0, [sp, #424]
  407b28:	ldr	x1, [x0, #224]
  407b2c:	mov	x0, #0x34db                	// #13531
  407b30:	movk	x0, #0xd7b6, lsl #16
  407b34:	movk	x0, #0xde82, lsl #32
  407b38:	movk	x0, #0x431b, lsl #48
  407b3c:	umulh	x0, x1, x0
  407b40:	lsr	x3, x0, #18
  407b44:	ldr	x0, [sp, #424]
  407b48:	ldr	d0, [x0, #392]
  407b4c:	ldr	x0, [sp, #424]
  407b50:	ldr	x0, [x0, #416]
  407b54:	mov	x1, #0xffff                	// #65535
  407b58:	add	x1, x0, x1
  407b5c:	cmp	x0, #0x0
  407b60:	csel	x0, x1, x0, lt  // lt = tstop
  407b64:	asr	x0, x0, #16
  407b68:	mov	x1, x0
  407b6c:	ldrb	w0, [sp, #187]
  407b70:	cmp	w0, #0x0
  407b74:	b.eq	407b84 <manager_receive_response+0xe98>  // b.none
  407b78:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407b7c:	add	x0, x0, #0xd90
  407b80:	b	407b8c <manager_receive_response+0xea0>
  407b84:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407b88:	add	x0, x0, #0xbe0
  407b8c:	str	x0, [sp]
  407b90:	mov	x7, x1
  407b94:	fmov	d2, d0
  407b98:	ldr	d1, [sp, #488]
  407b9c:	ldr	d0, [sp, #480]
  407ba0:	mov	x6, x3
  407ba4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407ba8:	add	x5, x0, #0xda0
  407bac:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407bb0:	add	x4, x0, #0x458
  407bb4:	mov	w3, #0x25d                 	// #605
  407bb8:	ldr	w1, [sp, #224]
  407bbc:	mov	w0, w8
  407bc0:	bl	4029d0 <log_internal_realm@plt>
  407bc4:	b	407bd0 <manager_receive_response+0xee4>
  407bc8:	ldr	w0, [sp, #224]
  407bcc:	cmp	w0, #0x0
  407bd0:	ldr	x0, [sp, #424]
  407bd4:	ldr	x5, [x0]
  407bd8:	mov	x4, #0x0                   	// #0
  407bdc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407be0:	add	x3, x0, #0xde8
  407be4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407be8:	add	x2, x0, #0xdf8
  407bec:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407bf0:	add	x1, x0, #0xe20
  407bf4:	mov	x0, x5
  407bf8:	bl	402990 <sd_bus_emit_properties_changed@plt>
  407bfc:	ldr	x0, [sp, #424]
  407c00:	ldrb	w0, [x0, #160]
  407c04:	eor	w0, w0, #0x1
  407c08:	and	w0, w0, #0xff
  407c0c:	cmp	w0, #0x0
  407c10:	b.eq	407d00 <manager_receive_response+0x1014>  // b.none
  407c14:	str	xzr, [sp, #400]
  407c18:	ldr	x0, [sp, #424]
  407c1c:	mov	w1, #0x1                   	// #1
  407c20:	strb	w1, [x0, #160]
  407c24:	ldr	x0, [sp, #424]
  407c28:	ldr	x0, [x0, #128]
  407c2c:	add	x1, sp, #0x190
  407c30:	bl	405554 <server_address_pretty>
  407c34:	mov	w0, #0x6                   	// #6
  407c38:	str	w0, [sp, #232]
  407c3c:	str	wzr, [sp, #236]
  407c40:	str	wzr, [sp, #240]
  407c44:	ldr	w0, [sp, #240]
  407c48:	bl	402bf0 <log_get_max_level_realm@plt>
  407c4c:	mov	w1, w0
  407c50:	ldr	w0, [sp, #232]
  407c54:	and	w0, w0, #0x7
  407c58:	cmp	w1, w0
  407c5c:	b.lt	407cc0 <manager_receive_response+0xfd4>  // b.tstop
  407c60:	ldr	w0, [sp, #240]
  407c64:	lsl	w1, w0, #10
  407c68:	ldr	w0, [sp, #232]
  407c6c:	orr	w19, w1, w0
  407c70:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407c74:	add	x20, x0, #0x67b
  407c78:	ldr	x0, [sp, #400]
  407c7c:	bl	4054fc <strna>
  407c80:	mov	x1, x0
  407c84:	ldr	x0, [sp, #424]
  407c88:	ldr	x0, [x0, #120]
  407c8c:	ldr	x0, [x0, #16]
  407c90:	mov	x7, x0
  407c94:	mov	x6, x1
  407c98:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407c9c:	add	x5, x0, #0xe40
  407ca0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407ca4:	add	x4, x0, #0x458
  407ca8:	mov	w3, #0x26a                 	// #618
  407cac:	mov	x2, x20
  407cb0:	ldr	w1, [sp, #236]
  407cb4:	mov	w0, w19
  407cb8:	bl	4029d0 <log_internal_realm@plt>
  407cbc:	b	407cc8 <manager_receive_response+0xfdc>
  407cc0:	ldr	w0, [sp, #236]
  407cc4:	cmp	w0, #0x0
  407cc8:	ldr	x0, [sp, #400]
  407ccc:	bl	4054fc <strna>
  407cd0:	mov	x1, x0
  407cd4:	ldr	x0, [sp, #424]
  407cd8:	ldr	x0, [x0, #120]
  407cdc:	ldr	x0, [x0, #16]
  407ce0:	mov	x3, x0
  407ce4:	mov	x2, x1
  407ce8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407cec:	add	x1, x0, #0xe70
  407cf0:	mov	w0, #0x0                   	// #0
  407cf4:	bl	4028d0 <sd_notifyf@plt>
  407cf8:	add	x0, sp, #0x190
  407cfc:	bl	4053c0 <freep>
  407d00:	ldr	x0, [sp, #424]
  407d04:	ldr	x0, [x0, #224]
  407d08:	mov	x1, x0
  407d0c:	ldr	x0, [sp, #424]
  407d10:	bl	405fc0 <manager_arm_timer>
  407d14:	str	w0, [sp, #204]
  407d18:	ldr	w0, [sp, #204]
  407d1c:	cmp	w0, #0x0
  407d20:	b.ge	407dac <manager_receive_response+0x10c0>  // b.tcont
  407d24:	mov	w0, #0x3                   	// #3
  407d28:	str	w0, [sp, #244]
  407d2c:	ldr	w0, [sp, #204]
  407d30:	str	w0, [sp, #248]
  407d34:	str	wzr, [sp, #252]
  407d38:	ldr	w0, [sp, #252]
  407d3c:	bl	402bf0 <log_get_max_level_realm@plt>
  407d40:	mov	w1, w0
  407d44:	ldr	w0, [sp, #244]
  407d48:	and	w0, w0, #0x7
  407d4c:	cmp	w1, w0
  407d50:	b.lt	407d94 <manager_receive_response+0x10a8>  // b.tstop
  407d54:	ldr	w0, [sp, #252]
  407d58:	lsl	w1, w0, #10
  407d5c:	ldr	w0, [sp, #244]
  407d60:	orr	w6, w1, w0
  407d64:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407d68:	add	x1, x0, #0x67b
  407d6c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407d70:	add	x5, x0, #0x808
  407d74:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407d78:	add	x4, x0, #0x458
  407d7c:	mov	w3, #0x270                 	// #624
  407d80:	mov	x2, x1
  407d84:	ldr	w1, [sp, #248]
  407d88:	mov	w0, w6
  407d8c:	bl	4029d0 <log_internal_realm@plt>
  407d90:	b	407db0 <manager_receive_response+0x10c4>
  407d94:	ldr	w0, [sp, #248]
  407d98:	cmp	w0, #0x0
  407d9c:	cneg	w0, w0, lt  // lt = tstop
  407da0:	and	w0, w0, #0xff
  407da4:	neg	w0, w0
  407da8:	b	407db0 <manager_receive_response+0x10c4>
  407dac:	mov	w0, #0x0                   	// #0
  407db0:	mov	w1, w0
  407db4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  407db8:	add	x0, x0, #0xa48
  407dbc:	ldr	x2, [sp, #776]
  407dc0:	ldr	x0, [x0]
  407dc4:	eor	x0, x2, x0
  407dc8:	cmp	x0, #0x0
  407dcc:	b.eq	407dd4 <manager_receive_response+0x10e8>  // b.none
  407dd0:	bl	402930 <__stack_chk_fail@plt>
  407dd4:	mov	w0, w1
  407dd8:	ldp	x19, x20, [sp, #80]
  407ddc:	ldp	x21, x22, [sp, #96]
  407de0:	ldp	x23, x24, [sp, #112]
  407de4:	ldp	x29, x30, [sp, #64]
  407de8:	ldr	d8, [sp, #128]
  407dec:	add	sp, sp, #0x310
  407df0:	ret

0000000000407df4 <manager_listen_setup>:
  407df4:	stp	x29, x30, [sp, #-176]!
  407df8:	mov	x29, sp
  407dfc:	str	x0, [sp, #24]
  407e00:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  407e04:	add	x0, x0, #0xa48
  407e08:	ldr	x1, [x0]
  407e0c:	str	x1, [sp, #168]
  407e10:	mov	x1, #0x0                   	// #0
  407e14:	stp	xzr, xzr, [sp, #40]
  407e18:	stp	xzr, xzr, [sp, #56]
  407e1c:	stp	xzr, xzr, [sp, #72]
  407e20:	stp	xzr, xzr, [sp, #88]
  407e24:	stp	xzr, xzr, [sp, #104]
  407e28:	stp	xzr, xzr, [sp, #120]
  407e2c:	stp	xzr, xzr, [sp, #136]
  407e30:	stp	xzr, xzr, [sp, #152]
  407e34:	ldr	x0, [sp, #24]
  407e38:	cmp	x0, #0x0
  407e3c:	cset	w0, eq  // eq = none
  407e40:	and	w0, w0, #0xff
  407e44:	and	x0, x0, #0xff
  407e48:	cmp	x0, #0x0
  407e4c:	b.eq	407e78 <manager_listen_setup+0x84>  // b.none
  407e50:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407e54:	add	x1, x0, #0x67b
  407e58:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407e5c:	add	x4, x0, #0x478
  407e60:	mov	w3, #0x279                 	// #633
  407e64:	mov	x2, x1
  407e68:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407e6c:	add	x1, x0, #0x6a0
  407e70:	mov	w0, #0x0                   	// #0
  407e74:	bl	4027f0 <log_assert_failed_realm@plt>
  407e78:	ldr	x0, [sp, #24]
  407e7c:	ldr	w0, [x0, #136]
  407e80:	cmp	w0, #0x0
  407e84:	b.lt	407e90 <manager_listen_setup+0x9c>  // b.tstop
  407e88:	mov	w0, #0x0                   	// #0
  407e8c:	b	408030 <manager_listen_setup+0x23c>
  407e90:	ldr	x0, [sp, #24]
  407e94:	ldr	x0, [x0, #112]
  407e98:	cmp	x0, #0x0
  407e9c:	cset	w0, ne  // ne = any
  407ea0:	and	w0, w0, #0xff
  407ea4:	and	x0, x0, #0xff
  407ea8:	cmp	x0, #0x0
  407eac:	b.eq	407ed8 <manager_listen_setup+0xe4>  // b.none
  407eb0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407eb4:	add	x1, x0, #0x67b
  407eb8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407ebc:	add	x4, x0, #0x478
  407ec0:	mov	w3, #0x27e                 	// #638
  407ec4:	mov	x2, x1
  407ec8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407ecc:	add	x1, x0, #0xea8
  407ed0:	mov	w0, #0x0                   	// #0
  407ed4:	bl	4027f0 <log_assert_failed_realm@plt>
  407ed8:	ldr	x0, [sp, #24]
  407edc:	ldr	x0, [x0, #128]
  407ee0:	cmp	x0, #0x0
  407ee4:	cset	w0, eq  // eq = none
  407ee8:	and	w0, w0, #0xff
  407eec:	and	x0, x0, #0xff
  407ef0:	cmp	x0, #0x0
  407ef4:	b.eq	407f20 <manager_listen_setup+0x12c>  // b.none
  407ef8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407efc:	add	x1, x0, #0x67b
  407f00:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  407f04:	add	x4, x0, #0x478
  407f08:	mov	w3, #0x27f                 	// #639
  407f0c:	mov	x2, x1
  407f10:	adrp	x0, 40c000 <manager_vtable+0xa0>
  407f14:	add	x1, x0, #0x6c0
  407f18:	mov	w0, #0x0                   	// #0
  407f1c:	bl	4027f0 <log_assert_failed_realm@plt>
  407f20:	ldr	x0, [sp, #24]
  407f24:	ldr	x0, [x0, #128]
  407f28:	ldrh	w0, [x0, #8]
  407f2c:	strh	w0, [sp, #40]
  407f30:	ldrh	w0, [sp, #40]
  407f34:	mov	w2, #0x0                   	// #0
  407f38:	mov	w1, #0x2                   	// #2
  407f3c:	movk	w1, #0x8, lsl #16
  407f40:	bl	4026f0 <socket@plt>
  407f44:	mov	w1, w0
  407f48:	ldr	x0, [sp, #24]
  407f4c:	str	w1, [x0, #136]
  407f50:	ldr	x0, [sp, #24]
  407f54:	ldr	w0, [x0, #136]
  407f58:	cmp	w0, #0x0
  407f5c:	b.ge	407f70 <manager_listen_setup+0x17c>  // b.tcont
  407f60:	bl	4028c0 <__errno_location@plt>
  407f64:	ldr	w0, [x0]
  407f68:	neg	w0, w0
  407f6c:	b	408030 <manager_listen_setup+0x23c>
  407f70:	ldr	x0, [sp, #24]
  407f74:	ldr	w3, [x0, #136]
  407f78:	add	x0, sp, #0x28
  407f7c:	mov	x1, x0
  407f80:	ldr	x0, [sp, #24]
  407f84:	ldr	x0, [x0, #128]
  407f88:	ldr	w0, [x0, #136]
  407f8c:	mov	w2, w0
  407f90:	mov	w0, w3
  407f94:	bl	4029e0 <bind@plt>
  407f98:	str	w0, [sp, #36]
  407f9c:	ldr	w0, [sp, #36]
  407fa0:	cmp	w0, #0x0
  407fa4:	b.ge	407fb8 <manager_listen_setup+0x1c4>  // b.tcont
  407fa8:	bl	4028c0 <__errno_location@plt>
  407fac:	ldr	w0, [x0]
  407fb0:	neg	w0, w0
  407fb4:	b	408030 <manager_listen_setup+0x23c>
  407fb8:	ldr	x0, [sp, #24]
  407fbc:	ldr	w0, [x0, #136]
  407fc0:	mov	w3, #0x1                   	// #1
  407fc4:	mov	w2, #0x23                  	// #35
  407fc8:	mov	w1, #0x1                   	// #1
  407fcc:	bl	4054a4 <setsockopt_int>
  407fd0:	str	w0, [sp, #36]
  407fd4:	ldr	w0, [sp, #36]
  407fd8:	cmp	w0, #0x0
  407fdc:	b.ge	407fe8 <manager_listen_setup+0x1f4>  // b.tcont
  407fe0:	ldr	w0, [sp, #36]
  407fe4:	b	408030 <manager_listen_setup+0x23c>
  407fe8:	ldr	x0, [sp, #24]
  407fec:	ldr	w0, [x0, #136]
  407ff0:	mov	w3, #0x10                  	// #16
  407ff4:	mov	w2, #0x1                   	// #1
  407ff8:	mov	w1, #0x0                   	// #0
  407ffc:	bl	4054a4 <setsockopt_int>
  408000:	ldr	x0, [sp, #24]
  408004:	ldr	x6, [x0, #8]
  408008:	ldr	x0, [sp, #24]
  40800c:	add	x1, x0, #0x70
  408010:	ldr	x0, [sp, #24]
  408014:	ldr	w2, [x0, #136]
  408018:	ldr	x5, [sp, #24]
  40801c:	adrp	x0, 406000 <manager_arm_timer+0x40>
  408020:	add	x4, x0, #0xcec
  408024:	mov	w3, #0x1                   	// #1
  408028:	mov	x0, x6
  40802c:	bl	402a30 <sd_event_add_io@plt>
  408030:	mov	w1, w0
  408034:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408038:	add	x0, x0, #0xa48
  40803c:	ldr	x2, [sp, #168]
  408040:	ldr	x0, [x0]
  408044:	eor	x0, x2, x0
  408048:	cmp	x0, #0x0
  40804c:	b.eq	408054 <manager_listen_setup+0x260>  // b.none
  408050:	bl	402930 <__stack_chk_fail@plt>
  408054:	mov	w0, w1
  408058:	ldp	x29, x30, [sp], #176
  40805c:	ret

0000000000408060 <manager_listen_stop>:
  408060:	stp	x29, x30, [sp, #-32]!
  408064:	mov	x29, sp
  408068:	str	x0, [sp, #24]
  40806c:	ldr	x0, [sp, #24]
  408070:	cmp	x0, #0x0
  408074:	cset	w0, eq  // eq = none
  408078:	and	w0, w0, #0xff
  40807c:	and	x0, x0, #0xff
  408080:	cmp	x0, #0x0
  408084:	b.eq	4080b0 <manager_listen_stop+0x50>  // b.none
  408088:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40808c:	add	x1, x0, #0x67b
  408090:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408094:	add	x4, x0, #0x490
  408098:	mov	w3, #0x295                 	// #661
  40809c:	mov	x2, x1
  4080a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4080a4:	add	x1, x0, #0x6a0
  4080a8:	mov	w0, #0x0                   	// #0
  4080ac:	bl	4027f0 <log_assert_failed_realm@plt>
  4080b0:	ldr	x0, [sp, #24]
  4080b4:	ldr	x0, [x0, #112]
  4080b8:	bl	402790 <sd_event_source_unref@plt>
  4080bc:	mov	x1, x0
  4080c0:	ldr	x0, [sp, #24]
  4080c4:	str	x1, [x0, #112]
  4080c8:	ldr	x0, [sp, #24]
  4080cc:	ldr	w0, [x0, #136]
  4080d0:	bl	4027c0 <safe_close@plt>
  4080d4:	mov	w1, w0
  4080d8:	ldr	x0, [sp, #24]
  4080dc:	str	w1, [x0, #136]
  4080e0:	nop
  4080e4:	ldp	x29, x30, [sp], #32
  4080e8:	ret

00000000004080ec <manager_begin>:
  4080ec:	stp	x29, x30, [sp, #-80]!
  4080f0:	mov	x29, sp
  4080f4:	stp	x19, x20, [sp, #16]
  4080f8:	str	x0, [sp, #40]
  4080fc:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408100:	add	x0, x0, #0xa48
  408104:	ldr	x1, [x0]
  408108:	str	x1, [sp, #72]
  40810c:	mov	x1, #0x0                   	// #0
  408110:	str	xzr, [sp, #64]
  408114:	ldr	x0, [sp, #40]
  408118:	cmp	x0, #0x0
  40811c:	cset	w0, eq  // eq = none
  408120:	and	w0, w0, #0xff
  408124:	and	x0, x0, #0xff
  408128:	cmp	x0, #0x0
  40812c:	b.eq	408158 <manager_begin+0x6c>  // b.none
  408130:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408134:	add	x1, x0, #0x67b
  408138:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40813c:	add	x4, x0, #0x4a8
  408140:	mov	w3, #0x29f                 	// #671
  408144:	mov	x2, x1
  408148:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40814c:	add	x1, x0, #0x6a0
  408150:	mov	w0, #0x0                   	// #0
  408154:	bl	4027f0 <log_assert_failed_realm@plt>
  408158:	ldr	x0, [sp, #40]
  40815c:	ldr	x0, [x0, #120]
  408160:	cmp	x0, #0x0
  408164:	cset	w0, ne  // ne = any
  408168:	and	w0, w0, #0xff
  40816c:	and	x0, x0, #0xff
  408170:	cmp	x0, #0x0
  408174:	b.ne	4081a8 <manager_begin+0xbc>  // b.any
  408178:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40817c:	add	x1, x0, #0x67b
  408180:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408184:	add	x4, x0, #0x4a8
  408188:	mov	w3, #0x2a0                 	// #672
  40818c:	mov	x2, x1
  408190:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408194:	add	x1, x0, #0x6a8
  408198:	mov	w0, #0x0                   	// #0
  40819c:	bl	402b70 <log_assert_failed_return_realm@plt>
  4081a0:	mov	w0, #0x1                   	// #1
  4081a4:	b	4081ac <manager_begin+0xc0>
  4081a8:	mov	w0, #0x0                   	// #0
  4081ac:	cmp	w0, #0x0
  4081b0:	b.eq	4081bc <manager_begin+0xd0>  // b.none
  4081b4:	mov	w19, #0xffffff8f            	// #-113
  4081b8:	b	408354 <manager_begin+0x268>
  4081bc:	ldr	x0, [sp, #40]
  4081c0:	ldr	x0, [x0, #128]
  4081c4:	cmp	x0, #0x0
  4081c8:	cset	w0, ne  // ne = any
  4081cc:	and	w0, w0, #0xff
  4081d0:	and	x0, x0, #0xff
  4081d4:	cmp	x0, #0x0
  4081d8:	b.ne	40820c <manager_begin+0x120>  // b.any
  4081dc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4081e0:	add	x1, x0, #0x67b
  4081e4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4081e8:	add	x4, x0, #0x4a8
  4081ec:	mov	w3, #0x2a1                 	// #673
  4081f0:	mov	x2, x1
  4081f4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4081f8:	add	x1, x0, #0x6c0
  4081fc:	mov	w0, #0x0                   	// #0
  408200:	bl	402b70 <log_assert_failed_return_realm@plt>
  408204:	mov	w0, #0x1                   	// #1
  408208:	b	408210 <manager_begin+0x124>
  40820c:	mov	w0, #0x0                   	// #0
  408210:	cmp	w0, #0x0
  408214:	b.eq	408220 <manager_begin+0x134>  // b.none
  408218:	mov	w19, #0xffffff8f            	// #-113
  40821c:	b	408354 <manager_begin+0x268>
  408220:	ldr	x0, [sp, #40]
  408224:	strb	wzr, [x0, #160]
  408228:	ldr	x0, [sp, #40]
  40822c:	mov	w1, #0x2                   	// #2
  408230:	str	w1, [x0, #140]
  408234:	ldr	x0, [sp, #40]
  408238:	ldr	x0, [x0, #224]
  40823c:	cmp	x0, #0x0
  408240:	b.ne	408254 <manager_begin+0x168>  // b.any
  408244:	ldr	x0, [sp, #40]
  408248:	ldr	x1, [x0, #232]
  40824c:	ldr	x0, [sp, #40]
  408250:	str	x1, [x0, #224]
  408254:	ldr	x0, [sp, #40]
  408258:	ldr	x0, [x0, #128]
  40825c:	add	x1, sp, #0x40
  408260:	bl	405554 <server_address_pretty>
  408264:	mov	w0, #0x7                   	// #7
  408268:	str	w0, [sp, #48]
  40826c:	str	wzr, [sp, #52]
  408270:	str	wzr, [sp, #56]
  408274:	ldr	w0, [sp, #56]
  408278:	bl	402bf0 <log_get_max_level_realm@plt>
  40827c:	mov	w1, w0
  408280:	ldr	w0, [sp, #48]
  408284:	and	w0, w0, #0x7
  408288:	cmp	w1, w0
  40828c:	b.lt	4082f0 <manager_begin+0x204>  // b.tstop
  408290:	ldr	w0, [sp, #56]
  408294:	lsl	w1, w0, #10
  408298:	ldr	w0, [sp, #48]
  40829c:	orr	w19, w1, w0
  4082a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4082a4:	add	x20, x0, #0x67b
  4082a8:	ldr	x0, [sp, #64]
  4082ac:	bl	4054fc <strna>
  4082b0:	mov	x1, x0
  4082b4:	ldr	x0, [sp, #40]
  4082b8:	ldr	x0, [x0, #120]
  4082bc:	ldr	x0, [x0, #16]
  4082c0:	mov	x7, x0
  4082c4:	mov	x6, x1
  4082c8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4082cc:	add	x5, x0, #0xec0
  4082d0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4082d4:	add	x4, x0, #0x4b8
  4082d8:	mov	w3, #0x2a9                 	// #681
  4082dc:	mov	x2, x20
  4082e0:	ldr	w1, [sp, #52]
  4082e4:	mov	w0, w19
  4082e8:	bl	4029d0 <log_internal_realm@plt>
  4082ec:	b	4082f8 <manager_begin+0x20c>
  4082f0:	ldr	w0, [sp, #52]
  4082f4:	cmp	w0, #0x0
  4082f8:	ldr	x0, [sp, #64]
  4082fc:	bl	4054fc <strna>
  408300:	mov	x1, x0
  408304:	ldr	x0, [sp, #40]
  408308:	ldr	x0, [x0, #120]
  40830c:	ldr	x0, [x0, #16]
  408310:	mov	x3, x0
  408314:	mov	x2, x1
  408318:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40831c:	add	x1, x0, #0xee8
  408320:	mov	w0, #0x0                   	// #0
  408324:	bl	4028d0 <sd_notifyf@plt>
  408328:	ldr	x0, [sp, #40]
  40832c:	bl	406228 <manager_clock_watch_setup>
  408330:	str	w0, [sp, #60]
  408334:	ldr	w0, [sp, #60]
  408338:	cmp	w0, #0x0
  40833c:	b.ge	408348 <manager_begin+0x25c>  // b.tcont
  408340:	ldr	w19, [sp, #60]
  408344:	b	408354 <manager_begin+0x268>
  408348:	ldr	x0, [sp, #40]
  40834c:	bl	40589c <manager_send_request>
  408350:	mov	w19, w0
  408354:	add	x0, sp, #0x40
  408358:	bl	4053c0 <freep>
  40835c:	mov	w1, w19
  408360:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408364:	add	x0, x0, #0xa48
  408368:	ldr	x2, [sp, #72]
  40836c:	ldr	x0, [x0]
  408370:	eor	x0, x2, x0
  408374:	cmp	x0, #0x0
  408378:	b.eq	408380 <manager_begin+0x294>  // b.none
  40837c:	bl	402930 <__stack_chk_fail@plt>
  408380:	mov	w0, w1
  408384:	ldp	x19, x20, [sp, #16]
  408388:	ldp	x29, x30, [sp], #80
  40838c:	ret

0000000000408390 <manager_set_server_name>:
  408390:	stp	x29, x30, [sp, #-48]!
  408394:	mov	x29, sp
  408398:	str	x0, [sp, #24]
  40839c:	str	x1, [sp, #16]
  4083a0:	ldr	x0, [sp, #24]
  4083a4:	cmp	x0, #0x0
  4083a8:	cset	w0, eq  // eq = none
  4083ac:	and	w0, w0, #0xff
  4083b0:	and	x0, x0, #0xff
  4083b4:	cmp	x0, #0x0
  4083b8:	b.eq	4083e4 <manager_set_server_name+0x54>  // b.none
  4083bc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4083c0:	add	x1, x0, #0x67b
  4083c4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4083c8:	add	x4, x0, #0x4c8
  4083cc:	mov	w3, #0x2b4                 	// #692
  4083d0:	mov	x2, x1
  4083d4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4083d8:	add	x1, x0, #0x6a0
  4083dc:	mov	w0, #0x0                   	// #0
  4083e0:	bl	4027f0 <log_assert_failed_realm@plt>
  4083e4:	ldr	x0, [sp, #24]
  4083e8:	ldr	x0, [x0, #120]
  4083ec:	ldr	x1, [sp, #16]
  4083f0:	cmp	x1, x0
  4083f4:	b.eq	4084a4 <manager_set_server_name+0x114>  // b.none
  4083f8:	ldr	x0, [sp, #24]
  4083fc:	ldr	x1, [sp, #16]
  408400:	str	x1, [x0, #120]
  408404:	ldr	x0, [sp, #24]
  408408:	str	xzr, [x0, #128]
  40840c:	ldr	x0, [sp, #24]
  408410:	bl	40942c <manager_disconnect>
  408414:	ldr	x0, [sp, #16]
  408418:	cmp	x0, #0x0
  40841c:	b.eq	4084a8 <manager_set_server_name+0x118>  // b.none
  408420:	mov	w0, #0x7                   	// #7
  408424:	str	w0, [sp, #36]
  408428:	str	wzr, [sp, #40]
  40842c:	str	wzr, [sp, #44]
  408430:	ldr	w0, [sp, #44]
  408434:	bl	402bf0 <log_get_max_level_realm@plt>
  408438:	mov	w1, w0
  40843c:	ldr	w0, [sp, #36]
  408440:	and	w0, w0, #0x7
  408444:	cmp	w1, w0
  408448:	b.lt	408498 <manager_set_server_name+0x108>  // b.tstop
  40844c:	ldr	w0, [sp, #44]
  408450:	lsl	w1, w0, #10
  408454:	ldr	w0, [sp, #36]
  408458:	orr	w7, w1, w0
  40845c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408460:	add	x1, x0, #0x67b
  408464:	ldr	x0, [sp, #16]
  408468:	ldr	x0, [x0, #16]
  40846c:	mov	x6, x0
  408470:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408474:	add	x5, x0, #0xf18
  408478:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40847c:	add	x4, x0, #0x4e0
  408480:	mov	w3, #0x2bf                 	// #703
  408484:	mov	x2, x1
  408488:	ldr	w1, [sp, #40]
  40848c:	mov	w0, w7
  408490:	bl	4029d0 <log_internal_realm@plt>
  408494:	b	4084a8 <manager_set_server_name+0x118>
  408498:	ldr	w0, [sp, #40]
  40849c:	cmp	w0, #0x0
  4084a0:	b	4084a8 <manager_set_server_name+0x118>
  4084a4:	nop
  4084a8:	ldp	x29, x30, [sp], #48
  4084ac:	ret

00000000004084b0 <manager_set_server_address>:
  4084b0:	stp	x29, x30, [sp, #-80]!
  4084b4:	mov	x29, sp
  4084b8:	stp	x19, x20, [sp, #16]
  4084bc:	str	x0, [sp, #40]
  4084c0:	str	x1, [sp, #32]
  4084c4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4084c8:	add	x0, x0, #0xa48
  4084cc:	ldr	x1, [x0]
  4084d0:	str	x1, [sp, #72]
  4084d4:	mov	x1, #0x0                   	// #0
  4084d8:	ldr	x0, [sp, #40]
  4084dc:	cmp	x0, #0x0
  4084e0:	cset	w0, eq  // eq = none
  4084e4:	and	w0, w0, #0xff
  4084e8:	and	x0, x0, #0xff
  4084ec:	cmp	x0, #0x0
  4084f0:	b.eq	40851c <manager_set_server_address+0x6c>  // b.none
  4084f4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4084f8:	add	x1, x0, #0x67b
  4084fc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408500:	add	x4, x0, #0x4f8
  408504:	mov	w3, #0x2c3                 	// #707
  408508:	mov	x2, x1
  40850c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408510:	add	x1, x0, #0x6a0
  408514:	mov	w0, #0x0                   	// #0
  408518:	bl	4027f0 <log_assert_failed_realm@plt>
  40851c:	ldr	x0, [sp, #40]
  408520:	ldr	x0, [x0, #128]
  408524:	ldr	x1, [sp, #32]
  408528:	cmp	x1, x0
  40852c:	b.eq	408620 <manager_set_server_address+0x170>  // b.none
  408530:	ldr	x0, [sp, #40]
  408534:	ldr	x1, [sp, #32]
  408538:	str	x1, [x0, #128]
  40853c:	ldr	x0, [sp, #32]
  408540:	cmp	x0, #0x0
  408544:	b.eq	408558 <manager_set_server_address+0xa8>  // b.none
  408548:	ldr	x0, [sp, #32]
  40854c:	ldr	x1, [x0]
  408550:	ldr	x0, [sp, #40]
  408554:	str	x1, [x0, #120]
  408558:	ldr	x0, [sp, #40]
  40855c:	bl	40942c <manager_disconnect>
  408560:	ldr	x0, [sp, #32]
  408564:	cmp	x0, #0x0
  408568:	b.eq	408624 <manager_set_server_address+0x174>  // b.none
  40856c:	str	xzr, [sp, #64]
  408570:	add	x0, sp, #0x40
  408574:	mov	x1, x0
  408578:	ldr	x0, [sp, #32]
  40857c:	bl	405554 <server_address_pretty>
  408580:	mov	w0, #0x7                   	// #7
  408584:	str	w0, [sp, #52]
  408588:	str	wzr, [sp, #56]
  40858c:	str	wzr, [sp, #60]
  408590:	ldr	w0, [sp, #60]
  408594:	bl	402bf0 <log_get_max_level_realm@plt>
  408598:	mov	w1, w0
  40859c:	ldr	w0, [sp, #52]
  4085a0:	and	w0, w0, #0x7
  4085a4:	cmp	w1, w0
  4085a8:	b.lt	40860c <manager_set_server_address+0x15c>  // b.tstop
  4085ac:	ldr	w0, [sp, #60]
  4085b0:	lsl	w1, w0, #10
  4085b4:	ldr	w0, [sp, #52]
  4085b8:	orr	w19, w1, w0
  4085bc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4085c0:	add	x20, x0, #0x67b
  4085c4:	ldr	x0, [sp, #64]
  4085c8:	bl	4054fc <strna>
  4085cc:	mov	x1, x0
  4085d0:	ldr	x0, [sp, #32]
  4085d4:	ldr	x0, [x0]
  4085d8:	ldr	x0, [x0, #16]
  4085dc:	mov	x7, x0
  4085e0:	mov	x6, x1
  4085e4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4085e8:	add	x5, x0, #0xf30
  4085ec:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4085f0:	add	x4, x0, #0x518
  4085f4:	mov	w3, #0x2d3                 	// #723
  4085f8:	mov	x2, x20
  4085fc:	ldr	w1, [sp, #56]
  408600:	mov	w0, w19
  408604:	bl	4029d0 <log_internal_realm@plt>
  408608:	b	408614 <manager_set_server_address+0x164>
  40860c:	ldr	w0, [sp, #56]
  408610:	cmp	w0, #0x0
  408614:	add	x0, sp, #0x40
  408618:	bl	4053c0 <freep>
  40861c:	b	408624 <manager_set_server_address+0x174>
  408620:	nop
  408624:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408628:	add	x0, x0, #0xa48
  40862c:	ldr	x1, [sp, #72]
  408630:	ldr	x0, [x0]
  408634:	eor	x0, x1, x0
  408638:	cmp	x0, #0x0
  40863c:	b.eq	408644 <manager_set_server_address+0x194>  // b.none
  408640:	bl	402930 <__stack_chk_fail@plt>
  408644:	ldp	x19, x20, [sp, #16]
  408648:	ldp	x29, x30, [sp], #80
  40864c:	ret

0000000000408650 <manager_resolve_handler>:
  408650:	stp	x29, x30, [sp, #-176]!
  408654:	mov	x29, sp
  408658:	stp	x19, x20, [sp, #16]
  40865c:	str	x21, [sp, #32]
  408660:	str	x0, [sp, #72]
  408664:	str	w1, [sp, #68]
  408668:	str	x2, [sp, #56]
  40866c:	str	x3, [sp, #48]
  408670:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408674:	add	x0, x0, #0xa48
  408678:	ldr	x1, [x0]
  40867c:	str	x1, [sp, #168]
  408680:	mov	x1, #0x0                   	// #0
  408684:	ldr	x0, [sp, #72]
  408688:	cmp	x0, #0x0
  40868c:	cset	w0, eq  // eq = none
  408690:	and	w0, w0, #0xff
  408694:	and	x0, x0, #0xff
  408698:	cmp	x0, #0x0
  40869c:	b.eq	4086c8 <manager_resolve_handler+0x78>  // b.none
  4086a0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4086a4:	add	x1, x0, #0x67b
  4086a8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4086ac:	add	x4, x0, #0x538
  4086b0:	mov	w3, #0x2da                 	// #730
  4086b4:	mov	x2, x1
  4086b8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4086bc:	add	x1, x0, #0xf58
  4086c0:	mov	w0, #0x0                   	// #0
  4086c4:	bl	4027f0 <log_assert_failed_realm@plt>
  4086c8:	ldr	x0, [sp, #48]
  4086cc:	cmp	x0, #0x0
  4086d0:	cset	w0, eq  // eq = none
  4086d4:	and	w0, w0, #0xff
  4086d8:	and	x0, x0, #0xff
  4086dc:	cmp	x0, #0x0
  4086e0:	b.eq	40870c <manager_resolve_handler+0xbc>  // b.none
  4086e4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4086e8:	add	x1, x0, #0x67b
  4086ec:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4086f0:	add	x4, x0, #0x538
  4086f4:	mov	w3, #0x2db                 	// #731
  4086f8:	mov	x2, x1
  4086fc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408700:	add	x1, x0, #0x6a0
  408704:	mov	w0, #0x0                   	// #0
  408708:	bl	4027f0 <log_assert_failed_realm@plt>
  40870c:	ldr	x0, [sp, #48]
  408710:	ldr	x0, [x0, #120]
  408714:	cmp	x0, #0x0
  408718:	cset	w0, eq  // eq = none
  40871c:	and	w0, w0, #0xff
  408720:	and	x0, x0, #0xff
  408724:	cmp	x0, #0x0
  408728:	b.eq	408754 <manager_resolve_handler+0x104>  // b.none
  40872c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408730:	add	x1, x0, #0x67b
  408734:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408738:	add	x4, x0, #0x538
  40873c:	mov	w3, #0x2dc                 	// #732
  408740:	mov	x2, x1
  408744:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408748:	add	x1, x0, #0x6a8
  40874c:	mov	w0, #0x0                   	// #0
  408750:	bl	4027f0 <log_assert_failed_realm@plt>
  408754:	ldr	x0, [sp, #48]
  408758:	ldr	x0, [x0, #104]
  40875c:	bl	402c10 <sd_resolve_query_unref@plt>
  408760:	mov	x1, x0
  408764:	ldr	x0, [sp, #48]
  408768:	str	x1, [x0, #104]
  40876c:	ldr	w0, [sp, #68]
  408770:	cmp	w0, #0x0
  408774:	b.eq	408b08 <manager_resolve_handler+0x4b8>  // b.none
  408778:	mov	w0, #0x7                   	// #7
  40877c:	str	w0, [sp, #140]
  408780:	str	wzr, [sp, #144]
  408784:	str	wzr, [sp, #148]
  408788:	ldr	w0, [sp, #148]
  40878c:	bl	402bf0 <log_get_max_level_realm@plt>
  408790:	mov	w1, w0
  408794:	ldr	w0, [sp, #140]
  408798:	and	w0, w0, #0x7
  40879c:	cmp	w1, w0
  4087a0:	b.lt	408800 <manager_resolve_handler+0x1b0>  // b.tstop
  4087a4:	ldr	w0, [sp, #148]
  4087a8:	lsl	w1, w0, #10
  4087ac:	ldr	w0, [sp, #140]
  4087b0:	orr	w19, w1, w0
  4087b4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4087b8:	add	x20, x0, #0x67b
  4087bc:	ldr	x0, [sp, #48]
  4087c0:	ldr	x0, [x0, #120]
  4087c4:	ldr	x21, [x0, #16]
  4087c8:	ldr	w0, [sp, #68]
  4087cc:	bl	402980 <gai_strerror@plt>
  4087d0:	mov	x7, x0
  4087d4:	mov	x6, x21
  4087d8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4087dc:	add	x5, x0, #0xf60
  4087e0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4087e4:	add	x4, x0, #0x550
  4087e8:	mov	w3, #0x2e1                 	// #737
  4087ec:	mov	x2, x20
  4087f0:	ldr	w1, [sp, #144]
  4087f4:	mov	w0, w19
  4087f8:	bl	4029d0 <log_internal_realm@plt>
  4087fc:	b	408808 <manager_resolve_handler+0x1b8>
  408800:	ldr	w0, [sp, #144]
  408804:	cmp	w0, #0x0
  408808:	ldr	x0, [sp, #48]
  40880c:	bl	408c88 <manager_connect>
  408810:	mov	w19, w0
  408814:	b	408be0 <manager_resolve_handler+0x590>
  408818:	str	xzr, [sp, #152]
  40881c:	ldr	x0, [sp, #56]
  408820:	ldr	x0, [x0, #24]
  408824:	cmp	x0, #0x0
  408828:	cset	w0, eq  // eq = none
  40882c:	and	w0, w0, #0xff
  408830:	and	x0, x0, #0xff
  408834:	cmp	x0, #0x0
  408838:	b.eq	408864 <manager_resolve_handler+0x214>  // b.none
  40883c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408840:	add	x1, x0, #0x67b
  408844:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408848:	add	x4, x0, #0x538
  40884c:	mov	w3, #0x2eb                 	// #747
  408850:	mov	x2, x1
  408854:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408858:	add	x1, x0, #0xf80
  40885c:	mov	w0, #0x0                   	// #0
  408860:	bl	4027f0 <log_assert_failed_realm@plt>
  408864:	ldr	x0, [sp, #56]
  408868:	ldr	w0, [x0, #16]
  40886c:	cmp	w0, #0x1
  408870:	cset	w0, ls  // ls = plast
  408874:	and	w0, w0, #0xff
  408878:	and	x0, x0, #0xff
  40887c:	cmp	x0, #0x0
  408880:	b.eq	4088ac <manager_resolve_handler+0x25c>  // b.none
  408884:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408888:	add	x1, x0, #0x67b
  40888c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408890:	add	x4, x0, #0x538
  408894:	mov	w3, #0x2ec                 	// #748
  408898:	mov	x2, x1
  40889c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4088a0:	add	x1, x0, #0xf90
  4088a4:	mov	w0, #0x0                   	// #0
  4088a8:	bl	4027f0 <log_assert_failed_realm@plt>
  4088ac:	strb	wzr, [sp, #87]
  4088b0:	ldr	x0, [sp, #56]
  4088b4:	ldr	x0, [x0, #24]
  4088b8:	ldrh	w0, [x0]
  4088bc:	cmp	w0, #0x2
  4088c0:	b.eq	4088cc <manager_resolve_handler+0x27c>  // b.none
  4088c4:	cmp	w0, #0xa
  4088c8:	b.ne	4088d4 <manager_resolve_handler+0x284>  // b.any
  4088cc:	mov	w0, #0x1                   	// #1
  4088d0:	strb	w0, [sp, #87]
  4088d4:	nop
  4088d8:	ldrb	w0, [sp, #87]
  4088dc:	eor	w0, w0, #0x1
  4088e0:	and	w0, w0, #0xff
  4088e4:	cmp	w0, #0x0
  4088e8:	b.eq	408978 <manager_resolve_handler+0x328>  // b.none
  4088ec:	mov	w0, #0x4                   	// #4
  4088f0:	str	w0, [sp, #128]
  4088f4:	str	wzr, [sp, #132]
  4088f8:	str	wzr, [sp, #136]
  4088fc:	ldr	w0, [sp, #136]
  408900:	bl	402bf0 <log_get_max_level_realm@plt>
  408904:	mov	w1, w0
  408908:	ldr	w0, [sp, #128]
  40890c:	and	w0, w0, #0x7
  408910:	cmp	w1, w0
  408914:	b.lt	408968 <manager_resolve_handler+0x318>  // b.tstop
  408918:	ldr	w0, [sp, #136]
  40891c:	lsl	w1, w0, #10
  408920:	ldr	w0, [sp, #128]
  408924:	orr	w7, w1, w0
  408928:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40892c:	add	x1, x0, #0x67b
  408930:	ldr	x0, [sp, #48]
  408934:	ldr	x0, [x0, #120]
  408938:	ldr	x0, [x0, #16]
  40893c:	mov	x6, x0
  408940:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408944:	add	x5, x0, #0xfc8
  408948:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40894c:	add	x4, x0, #0x550
  408950:	mov	w3, #0x2ef                 	// #751
  408954:	mov	x2, x1
  408958:	ldr	w1, [sp, #132]
  40895c:	mov	w0, w7
  408960:	bl	4029d0 <log_internal_realm@plt>
  408964:	b	408970 <manager_resolve_handler+0x320>
  408968:	ldr	w0, [sp, #132]
  40896c:	cmp	w0, #0x0
  408970:	mov	w20, #0x0                   	// #0
  408974:	b	408ae4 <manager_resolve_handler+0x494>
  408978:	ldr	x0, [sp, #48]
  40897c:	ldr	x4, [x0, #120]
  408980:	ldr	x0, [sp, #56]
  408984:	ldr	x1, [x0, #24]
  408988:	ldr	x0, [sp, #56]
  40898c:	ldr	w2, [x0, #16]
  408990:	add	x0, sp, #0xa0
  408994:	mov	w3, w2
  408998:	mov	x2, x1
  40899c:	mov	x1, x0
  4089a0:	mov	x0, x4
  4089a4:	bl	40a168 <server_address_new>
  4089a8:	str	w0, [sp, #100]
  4089ac:	ldr	w0, [sp, #100]
  4089b0:	cmp	w0, #0x0
  4089b4:	b.ge	408a48 <manager_resolve_handler+0x3f8>  // b.tcont
  4089b8:	mov	w0, #0x3                   	// #3
  4089bc:	str	w0, [sp, #116]
  4089c0:	ldr	w0, [sp, #100]
  4089c4:	str	w0, [sp, #120]
  4089c8:	str	wzr, [sp, #124]
  4089cc:	ldr	w0, [sp, #124]
  4089d0:	bl	402bf0 <log_get_max_level_realm@plt>
  4089d4:	mov	w1, w0
  4089d8:	ldr	w0, [sp, #116]
  4089dc:	and	w0, w0, #0x7
  4089e0:	cmp	w1, w0
  4089e4:	b.lt	408a2c <manager_resolve_handler+0x3dc>  // b.tstop
  4089e8:	ldr	w0, [sp, #124]
  4089ec:	lsl	w1, w0, #10
  4089f0:	ldr	w0, [sp, #116]
  4089f4:	orr	w6, w1, w0
  4089f8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4089fc:	add	x1, x0, #0x67b
  408a00:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408a04:	add	x5, x0, #0xff0
  408a08:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408a0c:	add	x4, x0, #0x550
  408a10:	mov	w3, #0x2f5                 	// #757
  408a14:	mov	x2, x1
  408a18:	ldr	w1, [sp, #120]
  408a1c:	mov	w0, w6
  408a20:	bl	4029d0 <log_internal_realm@plt>
  408a24:	mov	w19, w0
  408a28:	b	408a40 <manager_resolve_handler+0x3f0>
  408a2c:	ldr	w0, [sp, #120]
  408a30:	cmp	w0, #0x0
  408a34:	cneg	w0, w0, lt  // lt = tstop
  408a38:	and	w0, w0, #0xff
  408a3c:	neg	w19, w0
  408a40:	mov	w20, #0x1                   	// #1
  408a44:	b	408ae4 <manager_resolve_handler+0x494>
  408a48:	ldr	x0, [sp, #160]
  408a4c:	add	x1, sp, #0x98
  408a50:	bl	405554 <server_address_pretty>
  408a54:	mov	w0, #0x7                   	// #7
  408a58:	str	w0, [sp, #104]
  408a5c:	str	wzr, [sp, #108]
  408a60:	str	wzr, [sp, #112]
  408a64:	ldr	w0, [sp, #112]
  408a68:	bl	402bf0 <log_get_max_level_realm@plt>
  408a6c:	mov	w1, w0
  408a70:	ldr	w0, [sp, #104]
  408a74:	and	w0, w0, #0x7
  408a78:	cmp	w1, w0
  408a7c:	b.lt	408ad8 <manager_resolve_handler+0x488>  // b.tstop
  408a80:	ldr	w0, [sp, #112]
  408a84:	lsl	w1, w0, #10
  408a88:	ldr	w0, [sp, #104]
  408a8c:	orr	w8, w1, w0
  408a90:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408a94:	add	x1, x0, #0x67b
  408a98:	ldr	x2, [sp, #152]
  408a9c:	ldr	x0, [sp, #48]
  408aa0:	ldr	x0, [x0, #120]
  408aa4:	ldr	x0, [x0, #16]
  408aa8:	mov	x7, x0
  408aac:	mov	x6, x2
  408ab0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408ab4:	add	x5, x0, #0x18
  408ab8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408abc:	add	x4, x0, #0x550
  408ac0:	mov	w3, #0x2f8                 	// #760
  408ac4:	mov	x2, x1
  408ac8:	ldr	w1, [sp, #108]
  408acc:	mov	w0, w8
  408ad0:	bl	4029d0 <log_internal_realm@plt>
  408ad4:	b	408ae0 <manager_resolve_handler+0x490>
  408ad8:	ldr	w0, [sp, #108]
  408adc:	cmp	w0, #0x0
  408ae0:	mov	w20, #0x2                   	// #2
  408ae4:	add	x0, sp, #0x98
  408ae8:	bl	4053c0 <freep>
  408aec:	cmp	w20, #0x0
  408af0:	b.eq	408afc <manager_resolve_handler+0x4ac>  // b.none
  408af4:	cmp	w20, #0x2
  408af8:	b.ne	408be0 <manager_resolve_handler+0x590>  // b.any
  408afc:	ldr	x0, [sp, #56]
  408b00:	ldr	x0, [x0, #40]
  408b04:	str	x0, [sp, #56]
  408b08:	ldr	x0, [sp, #56]
  408b0c:	cmp	x0, #0x0
  408b10:	b.ne	408818 <manager_resolve_handler+0x1c8>  // b.any
  408b14:	ldr	x0, [sp, #48]
  408b18:	ldr	x0, [x0, #120]
  408b1c:	ldr	x0, [x0, #32]
  408b20:	cmp	x0, #0x0
  408b24:	b.ne	408bbc <manager_resolve_handler+0x56c>  // b.any
  408b28:	mov	w0, #0x3                   	// #3
  408b2c:	str	w0, [sp, #88]
  408b30:	str	wzr, [sp, #92]
  408b34:	str	wzr, [sp, #96]
  408b38:	ldr	w0, [sp, #96]
  408b3c:	bl	402bf0 <log_get_max_level_realm@plt>
  408b40:	mov	w1, w0
  408b44:	ldr	w0, [sp, #88]
  408b48:	and	w0, w0, #0x7
  408b4c:	cmp	w1, w0
  408b50:	b.lt	408ba4 <manager_resolve_handler+0x554>  // b.tstop
  408b54:	ldr	w0, [sp, #96]
  408b58:	lsl	w1, w0, #10
  408b5c:	ldr	w0, [sp, #88]
  408b60:	orr	w7, w1, w0
  408b64:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408b68:	add	x1, x0, #0x67b
  408b6c:	ldr	x0, [sp, #48]
  408b70:	ldr	x0, [x0, #120]
  408b74:	ldr	x0, [x0, #16]
  408b78:	mov	x6, x0
  408b7c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408b80:	add	x5, x0, #0x38
  408b84:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408b88:	add	x4, x0, #0x550
  408b8c:	mov	w3, #0x2fc                 	// #764
  408b90:	mov	x2, x1
  408b94:	ldr	w1, [sp, #92]
  408b98:	mov	w0, w7
  408b9c:	bl	4029d0 <log_internal_realm@plt>
  408ba0:	b	408bac <manager_resolve_handler+0x55c>
  408ba4:	ldr	w0, [sp, #92]
  408ba8:	cmp	w0, #0x0
  408bac:	ldr	x0, [sp, #48]
  408bb0:	bl	408c88 <manager_connect>
  408bb4:	mov	w19, w0
  408bb8:	b	408be0 <manager_resolve_handler+0x590>
  408bbc:	ldr	x0, [sp, #48]
  408bc0:	ldr	x0, [x0, #120]
  408bc4:	ldr	x0, [x0, #32]
  408bc8:	mov	x1, x0
  408bcc:	ldr	x0, [sp, #48]
  408bd0:	bl	4084b0 <manager_set_server_address>
  408bd4:	ldr	x0, [sp, #48]
  408bd8:	bl	4080ec <manager_begin>
  408bdc:	mov	w19, w0
  408be0:	mov	w1, w19
  408be4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408be8:	add	x0, x0, #0xa48
  408bec:	ldr	x2, [sp, #168]
  408bf0:	ldr	x0, [x0]
  408bf4:	eor	x0, x2, x0
  408bf8:	cmp	x0, #0x0
  408bfc:	b.eq	408c04 <manager_resolve_handler+0x5b4>  // b.none
  408c00:	bl	402930 <__stack_chk_fail@plt>
  408c04:	mov	w0, w1
  408c08:	ldp	x19, x20, [sp, #16]
  408c0c:	ldr	x21, [sp, #32]
  408c10:	ldp	x29, x30, [sp], #176
  408c14:	ret

0000000000408c18 <manager_retry_connect>:
  408c18:	stp	x29, x30, [sp, #-64]!
  408c1c:	mov	x29, sp
  408c20:	str	x0, [sp, #40]
  408c24:	str	x1, [sp, #32]
  408c28:	str	x2, [sp, #24]
  408c2c:	ldr	x0, [sp, #24]
  408c30:	str	x0, [sp, #56]
  408c34:	ldr	x0, [sp, #56]
  408c38:	cmp	x0, #0x0
  408c3c:	cset	w0, eq  // eq = none
  408c40:	and	w0, w0, #0xff
  408c44:	and	x0, x0, #0xff
  408c48:	cmp	x0, #0x0
  408c4c:	b.eq	408c78 <manager_retry_connect+0x60>  // b.none
  408c50:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408c54:	add	x1, x0, #0x67b
  408c58:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408c5c:	add	x4, x0, #0x568
  408c60:	mov	w3, #0x30a                 	// #778
  408c64:	mov	x2, x1
  408c68:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408c6c:	add	x1, x0, #0x6a0
  408c70:	mov	w0, #0x0                   	// #0
  408c74:	bl	4027f0 <log_assert_failed_realm@plt>
  408c78:	ldr	x0, [sp, #56]
  408c7c:	bl	408c88 <manager_connect>
  408c80:	ldp	x29, x30, [sp], #64
  408c84:	ret

0000000000408c88 <manager_connect>:
  408c88:	stp	x29, x30, [sp, #-240]!
  408c8c:	mov	x29, sp
  408c90:	stp	x19, x20, [sp, #16]
  408c94:	str	x21, [sp, #32]
  408c98:	str	x0, [sp, #56]
  408c9c:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  408ca0:	add	x0, x0, #0xa48
  408ca4:	ldr	x1, [x0]
  408ca8:	str	x1, [sp, #232]
  408cac:	mov	x1, #0x0                   	// #0
  408cb0:	ldr	x0, [sp, #56]
  408cb4:	cmp	x0, #0x0
  408cb8:	cset	w0, eq  // eq = none
  408cbc:	and	w0, w0, #0xff
  408cc0:	and	x0, x0, #0xff
  408cc4:	cmp	x0, #0x0
  408cc8:	b.eq	408cf4 <manager_connect+0x6c>  // b.none
  408ccc:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408cd0:	add	x1, x0, #0x67b
  408cd4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408cd8:	add	x4, x0, #0x580
  408cdc:	mov	w3, #0x312                 	// #786
  408ce0:	mov	x2, x1
  408ce4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408ce8:	add	x1, x0, #0x6a0
  408cec:	mov	w0, #0x0                   	// #0
  408cf0:	bl	4027f0 <log_assert_failed_realm@plt>
  408cf4:	ldr	x0, [sp, #56]
  408cf8:	bl	40942c <manager_disconnect>
  408cfc:	ldr	x0, [sp, #56]
  408d00:	ldr	x0, [x0, #440]
  408d04:	bl	402790 <sd_event_source_unref@plt>
  408d08:	mov	x1, x0
  408d0c:	ldr	x0, [sp, #56]
  408d10:	str	x1, [x0, #440]
  408d14:	ldr	x0, [sp, #56]
  408d18:	add	x0, x0, #0x38
  408d1c:	bl	402ae0 <ratelimit_below@plt>
  408d20:	and	w0, w0, #0xff
  408d24:	eor	w0, w0, #0x1
  408d28:	and	w0, w0, #0xff
  408d2c:	cmp	w0, #0x0
  408d30:	b.eq	408e9c <manager_connect+0x214>  // b.none
  408d34:	mov	w0, #0x7                   	// #7
  408d38:	str	w0, [sp, #136]
  408d3c:	str	wzr, [sp, #140]
  408d40:	str	wzr, [sp, #144]
  408d44:	ldr	w0, [sp, #144]
  408d48:	bl	402bf0 <log_get_max_level_realm@plt>
  408d4c:	mov	w1, w0
  408d50:	ldr	w0, [sp, #136]
  408d54:	and	w0, w0, #0x7
  408d58:	cmp	w1, w0
  408d5c:	b.lt	408da0 <manager_connect+0x118>  // b.tstop
  408d60:	ldr	w0, [sp, #144]
  408d64:	lsl	w1, w0, #10
  408d68:	ldr	w0, [sp, #136]
  408d6c:	orr	w6, w1, w0
  408d70:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408d74:	add	x1, x0, #0x67b
  408d78:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408d7c:	add	x5, x0, #0x68
  408d80:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408d84:	add	x4, x0, #0x590
  408d88:	mov	w3, #0x318                 	// #792
  408d8c:	mov	x2, x1
  408d90:	ldr	w1, [sp, #140]
  408d94:	mov	w0, w6
  408d98:	bl	4029d0 <log_internal_realm@plt>
  408d9c:	b	408da8 <manager_connect+0x120>
  408da0:	ldr	w0, [sp, #140]
  408da4:	cmp	w0, #0x0
  408da8:	ldr	x0, [sp, #56]
  408dac:	ldr	x19, [x0, #8]
  408db0:	ldr	x0, [sp, #56]
  408db4:	add	x20, x0, #0x1b8
  408db8:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  408dbc:	mov	w21, w0
  408dc0:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  408dc4:	bl	402a10 <now@plt>
  408dc8:	mov	x1, x0
  408dcc:	mov	x0, #0xc380                	// #50048
  408dd0:	movk	x0, #0x1c9, lsl #16
  408dd4:	add	x1, x1, x0
  408dd8:	ldr	x6, [sp, #56]
  408ddc:	adrp	x0, 408000 <manager_listen_setup+0x20c>
  408de0:	add	x5, x0, #0xc18
  408de4:	mov	x4, #0x0                   	// #0
  408de8:	mov	x3, x1
  408dec:	mov	w2, w21
  408df0:	mov	x1, x20
  408df4:	mov	x0, x19
  408df8:	bl	402730 <sd_event_add_time@plt>
  408dfc:	str	w0, [sp, #72]
  408e00:	ldr	w0, [sp, #72]
  408e04:	cmp	w0, #0x0
  408e08:	b.ge	408e94 <manager_connect+0x20c>  // b.tcont
  408e0c:	mov	w0, #0x3                   	// #3
  408e10:	str	w0, [sp, #148]
  408e14:	ldr	w0, [sp, #72]
  408e18:	str	w0, [sp, #152]
  408e1c:	str	wzr, [sp, #156]
  408e20:	ldr	w0, [sp, #156]
  408e24:	bl	402bf0 <log_get_max_level_realm@plt>
  408e28:	mov	w1, w0
  408e2c:	ldr	w0, [sp, #148]
  408e30:	and	w0, w0, #0x7
  408e34:	cmp	w1, w0
  408e38:	b.lt	408e7c <manager_connect+0x1f4>  // b.tstop
  408e3c:	ldr	w0, [sp, #156]
  408e40:	lsl	w1, w0, #10
  408e44:	ldr	w0, [sp, #148]
  408e48:	orr	w6, w1, w0
  408e4c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  408e50:	add	x1, x0, #0x67b
  408e54:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408e58:	add	x5, x0, #0x90
  408e5c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  408e60:	add	x4, x0, #0x590
  408e64:	mov	w3, #0x31c                 	// #796
  408e68:	mov	x2, x1
  408e6c:	ldr	w1, [sp, #152]
  408e70:	mov	w0, w6
  408e74:	bl	4029d0 <log_internal_realm@plt>
  408e78:	b	4093f4 <manager_connect+0x76c>
  408e7c:	ldr	w0, [sp, #152]
  408e80:	cmp	w0, #0x0
  408e84:	cneg	w0, w0, lt  // lt = tstop
  408e88:	and	w0, w0, #0xff
  408e8c:	neg	w0, w0
  408e90:	b	4093f4 <manager_connect+0x76c>
  408e94:	mov	w0, #0x0                   	// #0
  408e98:	b	4093f4 <manager_connect+0x76c>
  408e9c:	ldr	x0, [sp, #56]
  408ea0:	ldr	x0, [x0, #128]
  408ea4:	cmp	x0, #0x0
  408ea8:	b.eq	408ef4 <manager_connect+0x26c>  // b.none
  408eac:	ldr	x0, [sp, #56]
  408eb0:	ldr	x0, [x0, #128]
  408eb4:	ldr	x0, [x0, #144]
  408eb8:	cmp	x0, #0x0
  408ebc:	b.eq	408ef4 <manager_connect+0x26c>  // b.none
  408ec0:	ldr	x0, [sp, #56]
  408ec4:	ldr	x0, [x0, #128]
  408ec8:	ldr	x0, [x0, #144]
  408ecc:	mov	x1, x0
  408ed0:	ldr	x0, [sp, #56]
  408ed4:	bl	4084b0 <manager_set_server_address>
  408ed8:	ldr	x0, [sp, #56]
  408edc:	bl	4080ec <manager_begin>
  408ee0:	str	w0, [sp, #72]
  408ee4:	ldr	w0, [sp, #72]
  408ee8:	cmp	w0, #0x0
  408eec:	b.lt	4093e8 <manager_connect+0x760>  // b.tstop
  408ef0:	b	4093f0 <manager_connect+0x768>
  408ef4:	stp	xzr, xzr, [sp, #184]
  408ef8:	stp	xzr, xzr, [sp, #200]
  408efc:	stp	xzr, xzr, [sp, #216]
  408f00:	mov	w0, #0x420                 	// #1056
  408f04:	str	w0, [sp, #184]
  408f08:	mov	w0, #0x2                   	// #2
  408f0c:	str	w0, [sp, #192]
  408f10:	ldr	x0, [sp, #56]
  408f14:	ldr	x0, [x0, #120]
  408f18:	cmp	x0, #0x0
  408f1c:	b.eq	408f50 <manager_connect+0x2c8>  // b.none
  408f20:	ldr	x0, [sp, #56]
  408f24:	ldr	x0, [x0, #120]
  408f28:	ldr	x0, [x0, #40]
  408f2c:	cmp	x0, #0x0
  408f30:	b.eq	408f50 <manager_connect+0x2c8>  // b.none
  408f34:	ldr	x0, [sp, #56]
  408f38:	ldr	x0, [x0, #120]
  408f3c:	ldr	x0, [x0, #40]
  408f40:	mov	x1, x0
  408f44:	ldr	x0, [sp, #56]
  408f48:	bl	408390 <manager_set_server_name>
  408f4c:	b	409264 <manager_connect+0x5dc>
  408f50:	mov	w0, #0x1                   	// #1
  408f54:	strb	w0, [sp, #71]
  408f58:	ldr	x0, [sp, #56]
  408f5c:	ldr	x0, [x0, #120]
  408f60:	cmp	x0, #0x0
  408f64:	b.eq	408f7c <manager_connect+0x2f4>  // b.none
  408f68:	ldr	x0, [sp, #56]
  408f6c:	ldr	x0, [x0, #120]
  408f70:	ldr	w0, [x0, #8]
  408f74:	cmp	w0, #0x2
  408f78:	b.ne	408fa4 <manager_connect+0x31c>  // b.any
  408f7c:	ldr	x0, [sp, #56]
  408f80:	ldr	x0, [x0, #24]
  408f84:	str	x0, [sp, #160]
  408f88:	ldr	x0, [sp, #160]
  408f8c:	cmp	x0, #0x0
  408f90:	b.ne	408fd0 <manager_connect+0x348>  // b.any
  408f94:	ldr	x0, [sp, #56]
  408f98:	ldr	x0, [x0, #32]
  408f9c:	str	x0, [sp, #160]
  408fa0:	b	408fd0 <manager_connect+0x348>
  408fa4:	ldr	x0, [sp, #56]
  408fa8:	ldr	x0, [x0, #32]
  408fac:	str	x0, [sp, #160]
  408fb0:	ldr	x0, [sp, #160]
  408fb4:	cmp	x0, #0x0
  408fb8:	b.ne	408fcc <manager_connect+0x344>  // b.any
  408fbc:	ldr	x0, [sp, #56]
  408fc0:	ldr	x0, [x0, #24]
  408fc4:	str	x0, [sp, #160]
  408fc8:	b	408fd0 <manager_connect+0x348>
  408fcc:	strb	wzr, [sp, #71]
  408fd0:	ldr	x0, [sp, #160]
  408fd4:	cmp	x0, #0x0
  408fd8:	b.ne	408fe8 <manager_connect+0x360>  // b.any
  408fdc:	ldr	x0, [sp, #56]
  408fe0:	ldr	x0, [x0, #40]
  408fe4:	str	x0, [sp, #160]
  408fe8:	ldr	x0, [sp, #160]
  408fec:	cmp	x0, #0x0
  408ff0:	b.ne	40907c <manager_connect+0x3f4>  // b.any
  408ff4:	mov	x1, #0x0                   	// #0
  408ff8:	ldr	x0, [sp, #56]
  408ffc:	bl	408390 <manager_set_server_name>
  409000:	mov	w0, #0x7                   	// #7
  409004:	str	w0, [sp, #100]
  409008:	str	wzr, [sp, #104]
  40900c:	str	wzr, [sp, #108]
  409010:	ldr	w0, [sp, #108]
  409014:	bl	402bf0 <log_get_max_level_realm@plt>
  409018:	mov	w1, w0
  40901c:	ldr	w0, [sp, #100]
  409020:	and	w0, w0, #0x7
  409024:	cmp	w1, w0
  409028:	b.lt	40906c <manager_connect+0x3e4>  // b.tstop
  40902c:	ldr	w0, [sp, #108]
  409030:	lsl	w1, w0, #10
  409034:	ldr	w0, [sp, #100]
  409038:	orr	w6, w1, w0
  40903c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409040:	add	x1, x0, #0x67b
  409044:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409048:	add	x5, x0, #0xb8
  40904c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409050:	add	x4, x0, #0x590
  409054:	mov	w3, #0x34a                 	// #842
  409058:	mov	x2, x1
  40905c:	ldr	w1, [sp, #104]
  409060:	mov	w0, w6
  409064:	bl	4029d0 <log_internal_realm@plt>
  409068:	b	409074 <manager_connect+0x3ec>
  40906c:	ldr	w0, [sp, #104]
  409070:	cmp	w0, #0x0
  409074:	mov	w0, #0x0                   	// #0
  409078:	b	4093f4 <manager_connect+0x76c>
  40907c:	ldrb	w0, [sp, #71]
  409080:	cmp	w0, #0x0
  409084:	b.eq	409250 <manager_connect+0x5c8>  // b.none
  409088:	ldr	x0, [sp, #56]
  40908c:	ldrb	w0, [x0, #80]
  409090:	eor	w0, w0, #0x1
  409094:	and	w0, w0, #0xff
  409098:	cmp	w0, #0x0
  40909c:	b.eq	409250 <manager_connect+0x5c8>  // b.none
  4090a0:	ldr	x0, [sp, #56]
  4090a4:	ldr	x0, [x0, #224]
  4090a8:	cmp	x0, #0x0
  4090ac:	b.eq	409250 <manager_connect+0x5c8>  // b.none
  4090b0:	mov	w0, #0x7                   	// #7
  4090b4:	str	w0, [sp, #76]
  4090b8:	str	wzr, [sp, #80]
  4090bc:	str	wzr, [sp, #84]
  4090c0:	ldr	w0, [sp, #84]
  4090c4:	bl	402bf0 <log_get_max_level_realm@plt>
  4090c8:	mov	w1, w0
  4090cc:	ldr	w0, [sp, #76]
  4090d0:	and	w0, w0, #0x7
  4090d4:	cmp	w1, w0
  4090d8:	b.lt	40911c <manager_connect+0x494>  // b.tstop
  4090dc:	ldr	w0, [sp, #84]
  4090e0:	lsl	w1, w0, #10
  4090e4:	ldr	w0, [sp, #76]
  4090e8:	orr	w6, w1, w0
  4090ec:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4090f0:	add	x1, x0, #0x67b
  4090f4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4090f8:	add	x5, x0, #0xd0
  4090fc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409100:	add	x4, x0, #0x590
  409104:	mov	w3, #0x34f                 	// #847
  409108:	mov	x2, x1
  40910c:	ldr	w1, [sp, #80]
  409110:	mov	w0, w6
  409114:	bl	4029d0 <log_internal_realm@plt>
  409118:	b	409124 <manager_connect+0x49c>
  40911c:	ldr	w0, [sp, #80]
  409120:	cmp	w0, #0x0
  409124:	ldr	x0, [sp, #56]
  409128:	ldr	x19, [x0, #8]
  40912c:	ldr	x0, [sp, #56]
  409130:	add	x20, x0, #0x1b8
  409134:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  409138:	mov	w21, w0
  40913c:	bl	4027e0 <clock_boottime_or_monotonic@plt>
  409140:	bl	402a10 <now@plt>
  409144:	mov	x1, x0
  409148:	ldr	x0, [sp, #56]
  40914c:	ldr	x0, [x0, #224]
  409150:	add	x1, x1, x0
  409154:	ldr	x6, [sp, #56]
  409158:	adrp	x0, 408000 <manager_listen_setup+0x20c>
  40915c:	add	x5, x0, #0xc18
  409160:	mov	x4, #0x0                   	// #0
  409164:	mov	x3, x1
  409168:	mov	w2, w21
  40916c:	mov	x1, x20
  409170:	mov	x0, x19
  409174:	bl	402730 <sd_event_add_time@plt>
  409178:	str	w0, [sp, #72]
  40917c:	ldr	w0, [sp, #72]
  409180:	cmp	w0, #0x0
  409184:	b.ge	409210 <manager_connect+0x588>  // b.tcont
  409188:	mov	w0, #0x3                   	// #3
  40918c:	str	w0, [sp, #88]
  409190:	ldr	w0, [sp, #72]
  409194:	str	w0, [sp, #92]
  409198:	str	wzr, [sp, #96]
  40919c:	ldr	w0, [sp, #96]
  4091a0:	bl	402bf0 <log_get_max_level_realm@plt>
  4091a4:	mov	w1, w0
  4091a8:	ldr	w0, [sp, #88]
  4091ac:	and	w0, w0, #0x7
  4091b0:	cmp	w1, w0
  4091b4:	b.lt	4091f8 <manager_connect+0x570>  // b.tstop
  4091b8:	ldr	w0, [sp, #96]
  4091bc:	lsl	w1, w0, #10
  4091c0:	ldr	w0, [sp, #88]
  4091c4:	orr	w6, w1, w0
  4091c8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4091cc:	add	x1, x0, #0x67b
  4091d0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4091d4:	add	x5, x0, #0x90
  4091d8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4091dc:	add	x4, x0, #0x590
  4091e0:	mov	w3, #0x352                 	// #850
  4091e4:	mov	x2, x1
  4091e8:	ldr	w1, [sp, #92]
  4091ec:	mov	w0, w6
  4091f0:	bl	4029d0 <log_internal_realm@plt>
  4091f4:	b	4093f4 <manager_connect+0x76c>
  4091f8:	ldr	w0, [sp, #92]
  4091fc:	cmp	w0, #0x0
  409200:	cneg	w0, w0, lt  // lt = tstop
  409204:	and	w0, w0, #0xff
  409208:	neg	w0, w0
  40920c:	b	4093f4 <manager_connect+0x76c>
  409210:	ldr	x0, [sp, #56]
  409214:	mov	w1, #0x1                   	// #1
  409218:	strb	w1, [x0, #80]
  40921c:	ldr	x0, [sp, #56]
  409220:	ldr	x1, [x0, #224]
  409224:	ldr	x0, [sp, #56]
  409228:	ldr	x0, [x0, #240]
  40922c:	cmp	x1, x0
  409230:	b.cs	409248 <manager_connect+0x5c0>  // b.hs, b.nlast
  409234:	ldr	x0, [sp, #56]
  409238:	ldr	x0, [x0, #224]
  40923c:	lsl	x1, x0, #1
  409240:	ldr	x0, [sp, #56]
  409244:	str	x1, [x0, #224]
  409248:	mov	w0, #0x0                   	// #0
  40924c:	b	4093f4 <manager_connect+0x76c>
  409250:	ldr	x0, [sp, #56]
  409254:	strb	wzr, [x0, #80]
  409258:	ldr	x1, [sp, #160]
  40925c:	ldr	x0, [sp, #56]
  409260:	bl	408390 <manager_set_server_name>
  409264:	bl	402a20 <__res_init@plt>
  409268:	ldr	x0, [sp, #56]
  40926c:	ldr	x0, [x0, #120]
  409270:	bl	40b09c <server_name_flush_addresses>
  409274:	mov	w0, #0x7                   	// #7
  409278:	str	w0, [sp, #112]
  40927c:	str	wzr, [sp, #116]
  409280:	str	wzr, [sp, #120]
  409284:	ldr	w0, [sp, #120]
  409288:	bl	402bf0 <log_get_max_level_realm@plt>
  40928c:	mov	w1, w0
  409290:	ldr	w0, [sp, #112]
  409294:	and	w0, w0, #0x7
  409298:	cmp	w1, w0
  40929c:	b.lt	4092f0 <manager_connect+0x668>  // b.tstop
  4092a0:	ldr	w0, [sp, #120]
  4092a4:	lsl	w1, w0, #10
  4092a8:	ldr	w0, [sp, #112]
  4092ac:	orr	w7, w1, w0
  4092b0:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4092b4:	add	x1, x0, #0x67b
  4092b8:	ldr	x0, [sp, #56]
  4092bc:	ldr	x0, [x0, #120]
  4092c0:	ldr	x0, [x0, #16]
  4092c4:	mov	x6, x0
  4092c8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4092cc:	add	x5, x0, #0xf8
  4092d0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4092d4:	add	x4, x0, #0x590
  4092d8:	mov	w3, #0x369                 	// #873
  4092dc:	mov	x2, x1
  4092e0:	ldr	w1, [sp, #116]
  4092e4:	mov	w0, w7
  4092e8:	bl	4029d0 <log_internal_realm@plt>
  4092ec:	b	4092f8 <manager_connect+0x670>
  4092f0:	ldr	w0, [sp, #116]
  4092f4:	cmp	w0, #0x0
  4092f8:	adrp	x0, 408000 <manager_listen_setup+0x20c>
  4092fc:	add	x0, x0, #0x650
  409300:	str	x0, [sp, #168]
  409304:	str	xzr, [sp, #176]
  409308:	ldr	x0, [sp, #56]
  40930c:	ldr	x8, [x0, #16]
  409310:	ldr	x0, [sp, #56]
  409314:	add	x1, x0, #0x68
  409318:	ldr	x0, [sp, #56]
  40931c:	ldr	x0, [x0, #120]
  409320:	ldr	x2, [x0, #16]
  409324:	add	x0, sp, #0xb8
  409328:	ldr	x7, [sp, #56]
  40932c:	ldr	x6, [sp, #176]
  409330:	ldr	x5, [sp, #168]
  409334:	mov	x4, x0
  409338:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40933c:	add	x3, x0, #0x108
  409340:	mov	x0, x8
  409344:	bl	402640 <resolve_getaddrinfo_with_destroy_callback@plt>
  409348:	str	w0, [sp, #72]
  40934c:	ldr	w0, [sp, #72]
  409350:	cmp	w0, #0x0
  409354:	b.ge	4093e0 <manager_connect+0x758>  // b.tcont
  409358:	mov	w0, #0x3                   	// #3
  40935c:	str	w0, [sp, #124]
  409360:	ldr	w0, [sp, #72]
  409364:	str	w0, [sp, #128]
  409368:	str	wzr, [sp, #132]
  40936c:	ldr	w0, [sp, #132]
  409370:	bl	402bf0 <log_get_max_level_realm@plt>
  409374:	mov	w1, w0
  409378:	ldr	w0, [sp, #124]
  40937c:	and	w0, w0, #0x7
  409380:	cmp	w1, w0
  409384:	b.lt	4093c8 <manager_connect+0x740>  // b.tstop
  409388:	ldr	w0, [sp, #132]
  40938c:	lsl	w1, w0, #10
  409390:	ldr	w0, [sp, #124]
  409394:	orr	w6, w1, w0
  409398:	adrp	x0, 40c000 <manager_vtable+0xa0>
  40939c:	add	x1, x0, #0x67b
  4093a0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4093a4:	add	x5, x0, #0x110
  4093a8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4093ac:	add	x4, x0, #0x590
  4093b0:	mov	w3, #0x36d                 	// #877
  4093b4:	mov	x2, x1
  4093b8:	ldr	w1, [sp, #128]
  4093bc:	mov	w0, w6
  4093c0:	bl	4029d0 <log_internal_realm@plt>
  4093c4:	b	4093f4 <manager_connect+0x76c>
  4093c8:	ldr	w0, [sp, #128]
  4093cc:	cmp	w0, #0x0
  4093d0:	cneg	w0, w0, lt  // lt = tstop
  4093d4:	and	w0, w0, #0xff
  4093d8:	neg	w0, w0
  4093dc:	b	4093f4 <manager_connect+0x76c>
  4093e0:	mov	w0, #0x1                   	// #1
  4093e4:	b	4093f4 <manager_connect+0x76c>
  4093e8:	ldr	w0, [sp, #72]
  4093ec:	b	4093f4 <manager_connect+0x76c>
  4093f0:	mov	w0, #0x1                   	// #1
  4093f4:	mov	w1, w0
  4093f8:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4093fc:	add	x0, x0, #0xa48
  409400:	ldr	x2, [sp, #232]
  409404:	ldr	x0, [x0]
  409408:	eor	x0, x2, x0
  40940c:	cmp	x0, #0x0
  409410:	b.eq	409418 <manager_connect+0x790>  // b.none
  409414:	bl	402930 <__stack_chk_fail@plt>
  409418:	mov	w0, w1
  40941c:	ldp	x19, x20, [sp, #16]
  409420:	ldr	x21, [sp, #32]
  409424:	ldp	x29, x30, [sp], #240
  409428:	ret

000000000040942c <manager_disconnect>:
  40942c:	stp	x29, x30, [sp, #-32]!
  409430:	mov	x29, sp
  409434:	str	x0, [sp, #24]
  409438:	ldr	x0, [sp, #24]
  40943c:	cmp	x0, #0x0
  409440:	cset	w0, eq  // eq = none
  409444:	and	w0, w0, #0xff
  409448:	and	x0, x0, #0xff
  40944c:	cmp	x0, #0x0
  409450:	b.eq	40947c <manager_disconnect+0x50>  // b.none
  409454:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409458:	add	x1, x0, #0x67b
  40945c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409460:	add	x4, x0, #0x5a0
  409464:	mov	w3, #0x37a                 	// #890
  409468:	mov	x2, x1
  40946c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409470:	add	x1, x0, #0x6a0
  409474:	mov	w0, #0x0                   	// #0
  409478:	bl	4027f0 <log_assert_failed_realm@plt>
  40947c:	ldr	x0, [sp, #24]
  409480:	ldr	x0, [x0, #104]
  409484:	bl	402c10 <sd_resolve_query_unref@plt>
  409488:	mov	x1, x0
  40948c:	ldr	x0, [sp, #24]
  409490:	str	x1, [x0, #104]
  409494:	ldr	x0, [sp, #24]
  409498:	ldr	x0, [x0, #216]
  40949c:	bl	402790 <sd_event_source_unref@plt>
  4094a0:	mov	x1, x0
  4094a4:	ldr	x0, [sp, #24]
  4094a8:	str	x1, [x0, #216]
  4094ac:	ldr	x0, [sp, #24]
  4094b0:	bl	408060 <manager_listen_stop>
  4094b4:	ldr	x0, [sp, #24]
  4094b8:	ldr	x0, [x0, #424]
  4094bc:	bl	402790 <sd_event_source_unref@plt>
  4094c0:	mov	x1, x0
  4094c4:	ldr	x0, [sp, #24]
  4094c8:	str	x1, [x0, #424]
  4094cc:	ldr	x0, [sp, #24]
  4094d0:	ldr	w0, [x0, #432]
  4094d4:	bl	4027c0 <safe_close@plt>
  4094d8:	mov	w1, w0
  4094dc:	ldr	x0, [sp, #24]
  4094e0:	str	w1, [x0, #432]
  4094e4:	ldr	x0, [sp, #24]
  4094e8:	ldr	x0, [x0, #152]
  4094ec:	bl	402790 <sd_event_source_unref@plt>
  4094f0:	mov	x1, x0
  4094f4:	ldr	x0, [sp, #24]
  4094f8:	str	x1, [x0, #152]
  4094fc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409500:	add	x1, x0, #0x130
  409504:	mov	w0, #0x0                   	// #0
  409508:	bl	4028d0 <sd_notifyf@plt>
  40950c:	nop
  409510:	ldp	x29, x30, [sp], #32
  409514:	ret

0000000000409518 <manager_flush_server_names>:
  409518:	stp	x29, x30, [sp, #-32]!
  40951c:	mov	x29, sp
  409520:	str	x0, [sp, #24]
  409524:	str	w1, [sp, #20]
  409528:	ldr	x0, [sp, #24]
  40952c:	cmp	x0, #0x0
  409530:	cset	w0, eq  // eq = none
  409534:	and	w0, w0, #0xff
  409538:	and	x0, x0, #0xff
  40953c:	cmp	x0, #0x0
  409540:	b.eq	40956c <manager_flush_server_names+0x54>  // b.none
  409544:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409548:	add	x1, x0, #0x67b
  40954c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409550:	add	x4, x0, #0x5b8
  409554:	mov	w3, #0x38b                 	// #907
  409558:	mov	x2, x1
  40955c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409560:	add	x1, x0, #0x6a0
  409564:	mov	w0, #0x0                   	// #0
  409568:	bl	4027f0 <log_assert_failed_realm@plt>
  40956c:	ldr	w0, [sp, #20]
  409570:	cmp	w0, #0x0
  409574:	b.ne	409598 <manager_flush_server_names+0x80>  // b.any
  409578:	b	409588 <manager_flush_server_names+0x70>
  40957c:	ldr	x0, [sp, #24]
  409580:	ldr	x0, [x0, #24]
  409584:	bl	40abe8 <server_name_free>
  409588:	ldr	x0, [sp, #24]
  40958c:	ldr	x0, [x0, #24]
  409590:	cmp	x0, #0x0
  409594:	b.ne	40957c <manager_flush_server_names+0x64>  // b.any
  409598:	ldr	w0, [sp, #20]
  40959c:	cmp	w0, #0x2
  4095a0:	b.ne	4095c4 <manager_flush_server_names+0xac>  // b.any
  4095a4:	b	4095b4 <manager_flush_server_names+0x9c>
  4095a8:	ldr	x0, [sp, #24]
  4095ac:	ldr	x0, [x0, #32]
  4095b0:	bl	40abe8 <server_name_free>
  4095b4:	ldr	x0, [sp, #24]
  4095b8:	ldr	x0, [x0, #32]
  4095bc:	cmp	x0, #0x0
  4095c0:	b.ne	4095a8 <manager_flush_server_names+0x90>  // b.any
  4095c4:	ldr	w0, [sp, #20]
  4095c8:	cmp	w0, #0x1
  4095cc:	b.ne	4095f0 <manager_flush_server_names+0xd8>  // b.any
  4095d0:	b	4095e0 <manager_flush_server_names+0xc8>
  4095d4:	ldr	x0, [sp, #24]
  4095d8:	ldr	x0, [x0, #40]
  4095dc:	bl	40abe8 <server_name_free>
  4095e0:	ldr	x0, [sp, #24]
  4095e4:	ldr	x0, [x0, #40]
  4095e8:	cmp	x0, #0x0
  4095ec:	b.ne	4095d4 <manager_flush_server_names+0xbc>  // b.any
  4095f0:	nop
  4095f4:	ldp	x29, x30, [sp], #32
  4095f8:	ret

00000000004095fc <manager_free>:
  4095fc:	stp	x29, x30, [sp, #-32]!
  409600:	mov	x29, sp
  409604:	str	x0, [sp, #24]
  409608:	ldr	x0, [sp, #24]
  40960c:	cmp	x0, #0x0
  409610:	b.eq	409694 <manager_free+0x98>  // b.none
  409614:	ldr	x0, [sp, #24]
  409618:	bl	40942c <manager_disconnect>
  40961c:	mov	w1, #0x0                   	// #0
  409620:	ldr	x0, [sp, #24]
  409624:	bl	409518 <manager_flush_server_names>
  409628:	mov	w1, #0x2                   	// #2
  40962c:	ldr	x0, [sp, #24]
  409630:	bl	409518 <manager_flush_server_names>
  409634:	mov	w1, #0x1                   	// #1
  409638:	ldr	x0, [sp, #24]
  40963c:	bl	409518 <manager_flush_server_names>
  409640:	ldr	x0, [sp, #24]
  409644:	ldr	x0, [x0, #440]
  409648:	bl	402790 <sd_event_source_unref@plt>
  40964c:	ldr	x0, [sp, #24]
  409650:	ldr	x0, [x0, #88]
  409654:	bl	402790 <sd_event_source_unref@plt>
  409658:	ldr	x0, [sp, #24]
  40965c:	ldr	x0, [x0, #96]
  409660:	bl	4025e0 <sd_network_monitor_unref@plt>
  409664:	ldr	x0, [sp, #24]
  409668:	ldr	x0, [x0, #16]
  40966c:	bl	402900 <sd_resolve_unref@plt>
  409670:	ldr	x0, [sp, #24]
  409674:	ldr	x0, [x0, #8]
  409678:	bl	402b50 <sd_event_unref@plt>
  40967c:	ldr	x0, [sp, #24]
  409680:	ldr	x0, [x0]
  409684:	bl	4029f0 <sd_bus_flush_close_unref@plt>
  409688:	ldr	x0, [sp, #24]
  40968c:	bl	402b30 <free@plt>
  409690:	b	409698 <manager_free+0x9c>
  409694:	nop
  409698:	ldp	x29, x30, [sp], #32
  40969c:	ret

00000000004096a0 <manager_network_read_link_servers>:
  4096a0:	stp	x29, x30, [sp, #-144]!
  4096a4:	mov	x29, sp
  4096a8:	str	x19, [sp, #16]
  4096ac:	str	x0, [sp, #40]
  4096b0:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  4096b4:	add	x0, x0, #0xa48
  4096b8:	ldr	x1, [x0]
  4096bc:	str	x1, [sp, #136]
  4096c0:	mov	x1, #0x0                   	// #0
  4096c4:	str	xzr, [sp, #104]
  4096c8:	strb	wzr, [sp, #62]
  4096cc:	ldr	x0, [sp, #40]
  4096d0:	cmp	x0, #0x0
  4096d4:	cset	w0, eq  // eq = none
  4096d8:	and	w0, w0, #0xff
  4096dc:	and	x0, x0, #0xff
  4096e0:	cmp	x0, #0x0
  4096e4:	b.eq	409710 <manager_network_read_link_servers+0x70>  // b.none
  4096e8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4096ec:	add	x1, x0, #0x67b
  4096f0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4096f4:	add	x4, x0, #0x5d8
  4096f8:	mov	w3, #0x3b7                 	// #951
  4096fc:	mov	x2, x1
  409700:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409704:	add	x1, x0, #0x6a0
  409708:	mov	w0, #0x0                   	// #0
  40970c:	bl	4027f0 <log_assert_failed_realm@plt>
  409710:	add	x0, sp, #0x68
  409714:	bl	402bc0 <sd_network_get_ntp@plt>
  409718:	str	w0, [sp, #64]
  40971c:	ldr	w0, [sp, #64]
  409720:	cmp	w0, #0x0
  409724:	b.ge	4097d0 <manager_network_read_link_servers+0x130>  // b.tcont
  409728:	ldr	w0, [sp, #64]
  40972c:	cmn	w0, #0xc
  409730:	b.ne	409754 <manager_network_read_link_servers+0xb4>  // b.any
  409734:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409738:	add	x1, x0, #0x67b
  40973c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409740:	add	x3, x0, #0x600
  409744:	mov	w2, #0x3bc                 	// #956
  409748:	mov	w0, #0x0                   	// #0
  40974c:	bl	402be0 <log_oom_internal@plt>
  409750:	b	409aa8 <manager_network_read_link_servers+0x408>
  409754:	mov	w0, #0x7                   	// #7
  409758:	str	w0, [sp, #92]
  40975c:	ldr	w0, [sp, #64]
  409760:	str	w0, [sp, #96]
  409764:	str	wzr, [sp, #100]
  409768:	ldr	w0, [sp, #100]
  40976c:	bl	402bf0 <log_get_max_level_realm@plt>
  409770:	mov	w1, w0
  409774:	ldr	w0, [sp, #92]
  409778:	and	w0, w0, #0x7
  40977c:	cmp	w1, w0
  409780:	b.lt	4097c4 <manager_network_read_link_servers+0x124>  // b.tstop
  409784:	ldr	w0, [sp, #100]
  409788:	lsl	w1, w0, #10
  40978c:	ldr	w0, [sp, #92]
  409790:	orr	w6, w1, w0
  409794:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409798:	add	x1, x0, #0x67b
  40979c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4097a0:	add	x5, x0, #0x140
  4097a4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  4097a8:	add	x4, x0, #0x600
  4097ac:	mov	w3, #0x3be                 	// #958
  4097b0:	mov	x2, x1
  4097b4:	ldr	w1, [sp, #96]
  4097b8:	mov	w0, w6
  4097bc:	bl	4029d0 <log_internal_realm@plt>
  4097c0:	b	409aa8 <manager_network_read_link_servers+0x408>
  4097c4:	ldr	w0, [sp, #96]
  4097c8:	cmp	w0, #0x0
  4097cc:	b	409aa8 <manager_network_read_link_servers+0x408>
  4097d0:	ldr	x0, [sp, #40]
  4097d4:	ldr	x0, [x0, #32]
  4097d8:	str	x0, [sp, #112]
  4097dc:	b	4097fc <manager_network_read_link_servers+0x15c>
  4097e0:	ldr	x0, [sp, #112]
  4097e4:	ldrb	w1, [x0, #24]
  4097e8:	orr	w1, w1, #0x1
  4097ec:	strb	w1, [x0, #24]
  4097f0:	ldr	x0, [sp, #112]
  4097f4:	ldr	x0, [x0, #40]
  4097f8:	str	x0, [sp, #112]
  4097fc:	ldr	x0, [sp, #112]
  409800:	cmp	x0, #0x0
  409804:	b.ne	4097e0 <manager_network_read_link_servers+0x140>  // b.any
  409808:	ldr	x0, [sp, #104]
  40980c:	str	x0, [sp, #120]
  409810:	b	409a28 <manager_network_read_link_servers+0x388>
  409814:	strb	wzr, [sp, #63]
  409818:	ldr	x0, [sp, #120]
  40981c:	ldr	x0, [x0]
  409820:	bl	402600 <dns_name_is_valid_or_address@plt>
  409824:	str	w0, [sp, #64]
  409828:	ldr	w0, [sp, #64]
  40982c:	cmp	w0, #0x0
  409830:	b.ge	4098bc <manager_network_read_link_servers+0x21c>  // b.tcont
  409834:	mov	w0, #0x3                   	// #3
  409838:	str	w0, [sp, #80]
  40983c:	ldr	w0, [sp, #64]
  409840:	str	w0, [sp, #84]
  409844:	str	wzr, [sp, #88]
  409848:	ldr	w0, [sp, #88]
  40984c:	bl	402bf0 <log_get_max_level_realm@plt>
  409850:	mov	w1, w0
  409854:	ldr	w0, [sp, #80]
  409858:	and	w0, w0, #0x7
  40985c:	cmp	w1, w0
  409860:	b.lt	4098b0 <manager_network_read_link_servers+0x210>  // b.tstop
  409864:	ldr	w0, [sp, #88]
  409868:	lsl	w1, w0, #10
  40986c:	ldr	w0, [sp, #80]
  409870:	orr	w7, w1, w0
  409874:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409878:	add	x1, x0, #0x67b
  40987c:	ldr	x0, [sp, #120]
  409880:	ldr	x0, [x0]
  409884:	mov	x6, x0
  409888:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40988c:	add	x5, x0, #0x168
  409890:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409894:	add	x4, x0, #0x600
  409898:	mov	w3, #0x3ca                 	// #970
  40989c:	mov	x2, x1
  4098a0:	ldr	w1, [sp, #84]
  4098a4:	mov	w0, w7
  4098a8:	bl	4029d0 <log_internal_realm@plt>
  4098ac:	b	409aa8 <manager_network_read_link_servers+0x408>
  4098b0:	ldr	w0, [sp, #84]
  4098b4:	cmp	w0, #0x0
  4098b8:	b	409aa8 <manager_network_read_link_servers+0x408>
  4098bc:	ldr	w0, [sp, #64]
  4098c0:	cmp	w0, #0x0
  4098c4:	b.ne	40994c <manager_network_read_link_servers+0x2ac>  // b.any
  4098c8:	mov	w0, #0x3                   	// #3
  4098cc:	str	w0, [sp, #68]
  4098d0:	str	wzr, [sp, #72]
  4098d4:	str	wzr, [sp, #76]
  4098d8:	ldr	w0, [sp, #76]
  4098dc:	bl	402bf0 <log_get_max_level_realm@plt>
  4098e0:	mov	w1, w0
  4098e4:	ldr	w0, [sp, #68]
  4098e8:	and	w0, w0, #0x7
  4098ec:	cmp	w1, w0
  4098f0:	b.lt	409940 <manager_network_read_link_servers+0x2a0>  // b.tstop
  4098f4:	ldr	w0, [sp, #76]
  4098f8:	lsl	w1, w0, #10
  4098fc:	ldr	w0, [sp, #68]
  409900:	orr	w7, w1, w0
  409904:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409908:	add	x1, x0, #0x67b
  40990c:	ldr	x0, [sp, #120]
  409910:	ldr	x0, [x0]
  409914:	mov	x6, x0
  409918:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40991c:	add	x5, x0, #0x1a8
  409920:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409924:	add	x4, x0, #0x600
  409928:	mov	w3, #0x3cd                 	// #973
  40992c:	mov	x2, x1
  409930:	ldr	w1, [sp, #72]
  409934:	mov	w0, w7
  409938:	bl	4029d0 <log_internal_realm@plt>
  40993c:	b	409a1c <manager_network_read_link_servers+0x37c>
  409940:	ldr	w0, [sp, #72]
  409944:	cmp	w0, #0x0
  409948:	b	409a1c <manager_network_read_link_servers+0x37c>
  40994c:	ldr	x0, [sp, #40]
  409950:	ldr	x0, [x0, #32]
  409954:	str	x0, [sp, #112]
  409958:	b	4099a8 <manager_network_read_link_servers+0x308>
  40995c:	ldr	x0, [sp, #112]
  409960:	ldr	x2, [x0, #16]
  409964:	ldr	x0, [sp, #120]
  409968:	ldr	x0, [x0]
  40996c:	mov	x1, x0
  409970:	mov	x0, x2
  409974:	bl	402a50 <strcmp@plt>
  409978:	cmp	w0, #0x0
  40997c:	b.ne	40999c <manager_network_read_link_servers+0x2fc>  // b.any
  409980:	ldr	x0, [sp, #112]
  409984:	ldrb	w1, [x0, #24]
  409988:	and	w1, w1, #0xfffffffe
  40998c:	strb	w1, [x0, #24]
  409990:	mov	w0, #0x1                   	// #1
  409994:	strb	w0, [sp, #63]
  409998:	b	4099b4 <manager_network_read_link_servers+0x314>
  40999c:	ldr	x0, [sp, #112]
  4099a0:	ldr	x0, [x0, #40]
  4099a4:	str	x0, [sp, #112]
  4099a8:	ldr	x0, [sp, #112]
  4099ac:	cmp	x0, #0x0
  4099b0:	b.ne	40995c <manager_network_read_link_servers+0x2bc>  // b.any
  4099b4:	ldrb	w0, [sp, #63]
  4099b8:	eor	w0, w0, #0x1
  4099bc:	and	w0, w0, #0xff
  4099c0:	cmp	w0, #0x0
  4099c4:	b.eq	409a1c <manager_network_read_link_servers+0x37c>  // b.none
  4099c8:	ldr	x0, [sp, #120]
  4099cc:	ldr	x0, [x0]
  4099d0:	mov	x3, x0
  4099d4:	mov	w2, #0x2                   	// #2
  4099d8:	mov	x1, #0x0                   	// #0
  4099dc:	ldr	x0, [sp, #40]
  4099e0:	bl	40a5e8 <server_name_new>
  4099e4:	str	w0, [sp, #64]
  4099e8:	ldr	w0, [sp, #64]
  4099ec:	cmp	w0, #0x0
  4099f0:	b.ge	409a14 <manager_network_read_link_servers+0x374>  // b.tcont
  4099f4:	adrp	x0, 40c000 <manager_vtable+0xa0>
  4099f8:	add	x1, x0, #0x67b
  4099fc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409a00:	add	x3, x0, #0x600
  409a04:	mov	w2, #0x3db                 	// #987
  409a08:	mov	w0, #0x0                   	// #0
  409a0c:	bl	402be0 <log_oom_internal@plt>
  409a10:	b	409aa8 <manager_network_read_link_servers+0x408>
  409a14:	mov	w0, #0x1                   	// #1
  409a18:	strb	w0, [sp, #62]
  409a1c:	ldr	x0, [sp, #120]
  409a20:	add	x0, x0, #0x8
  409a24:	str	x0, [sp, #120]
  409a28:	ldr	x0, [sp, #120]
  409a2c:	cmp	x0, #0x0
  409a30:	b.eq	409a44 <manager_network_read_link_servers+0x3a4>  // b.none
  409a34:	ldr	x0, [sp, #120]
  409a38:	ldr	x0, [x0]
  409a3c:	cmp	x0, #0x0
  409a40:	b.ne	409814 <manager_network_read_link_servers+0x174>  // b.any
  409a44:	ldr	x0, [sp, #40]
  409a48:	ldr	x0, [x0, #32]
  409a4c:	str	x0, [sp, #112]
  409a50:	b	409a6c <manager_network_read_link_servers+0x3cc>
  409a54:	ldr	x0, [sp, #112]
  409a58:	bl	40abe8 <server_name_free>
  409a5c:	mov	w0, #0x1                   	// #1
  409a60:	strb	w0, [sp, #62]
  409a64:	ldr	x0, [sp, #128]
  409a68:	str	x0, [sp, #112]
  409a6c:	ldr	x0, [sp, #112]
  409a70:	cmp	x0, #0x0
  409a74:	b.eq	409aa0 <manager_network_read_link_servers+0x400>  // b.none
  409a78:	ldr	x0, [sp, #112]
  409a7c:	ldr	x0, [x0, #40]
  409a80:	str	x0, [sp, #128]
  409a84:	ldr	x0, [sp, #112]
  409a88:	ldrb	w0, [x0, #24]
  409a8c:	and	w0, w0, #0x1
  409a90:	and	w0, w0, #0xff
  409a94:	cmp	w0, #0x0
  409a98:	b.eq	409a64 <manager_network_read_link_servers+0x3c4>  // b.none
  409a9c:	b	409a54 <manager_network_read_link_servers+0x3b4>
  409aa0:	ldrb	w19, [sp, #62]
  409aa4:	b	409ab8 <manager_network_read_link_servers+0x418>
  409aa8:	mov	w1, #0x2                   	// #2
  409aac:	ldr	x0, [sp, #40]
  409ab0:	bl	409518 <manager_flush_server_names>
  409ab4:	ldr	w19, [sp, #64]
  409ab8:	add	x0, sp, #0x68
  409abc:	bl	405520 <strv_freep>
  409ac0:	mov	w1, w19
  409ac4:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  409ac8:	add	x0, x0, #0xa48
  409acc:	ldr	x2, [sp, #136]
  409ad0:	ldr	x0, [x0]
  409ad4:	eor	x0, x2, x0
  409ad8:	cmp	x0, #0x0
  409adc:	b.eq	409ae4 <manager_network_read_link_servers+0x444>  // b.none
  409ae0:	bl	402930 <__stack_chk_fail@plt>
  409ae4:	mov	w0, w1
  409ae8:	ldr	x19, [sp, #16]
  409aec:	ldp	x29, x30, [sp], #144
  409af0:	ret

0000000000409af4 <manager_is_connected>:
  409af4:	sub	sp, sp, #0x10
  409af8:	str	x0, [sp, #8]
  409afc:	ldr	x0, [sp, #8]
  409b00:	ldr	w0, [x0, #136]
  409b04:	cmp	w0, #0x0
  409b08:	b.ge	409b2c <manager_is_connected+0x38>  // b.tcont
  409b0c:	ldr	x0, [sp, #8]
  409b10:	ldr	x0, [x0, #104]
  409b14:	cmp	x0, #0x0
  409b18:	b.ne	409b2c <manager_is_connected+0x38>  // b.any
  409b1c:	ldr	x0, [sp, #8]
  409b20:	ldr	x0, [x0, #216]
  409b24:	cmp	x0, #0x0
  409b28:	b.eq	409b34 <manager_is_connected+0x40>  // b.none
  409b2c:	mov	w0, #0x1                   	// #1
  409b30:	b	409b38 <manager_is_connected+0x44>
  409b34:	mov	w0, #0x0                   	// #0
  409b38:	and	w0, w0, #0x1
  409b3c:	and	w0, w0, #0xff
  409b40:	add	sp, sp, #0x10
  409b44:	ret

0000000000409b48 <manager_network_event_handler>:
  409b48:	stp	x29, x30, [sp, #-96]!
  409b4c:	mov	x29, sp
  409b50:	str	x0, [sp, #40]
  409b54:	str	w1, [sp, #36]
  409b58:	str	w2, [sp, #32]
  409b5c:	str	x3, [sp, #24]
  409b60:	ldr	x0, [sp, #24]
  409b64:	str	x0, [sp, #88]
  409b68:	ldr	x0, [sp, #88]
  409b6c:	cmp	x0, #0x0
  409b70:	cset	w0, eq  // eq = none
  409b74:	and	w0, w0, #0xff
  409b78:	and	x0, x0, #0xff
  409b7c:	cmp	x0, #0x0
  409b80:	b.eq	409bac <manager_network_event_handler+0x64>  // b.none
  409b84:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409b88:	add	x1, x0, #0x67b
  409b8c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409b90:	add	x4, x0, #0x628
  409b94:	mov	w3, #0x3fb                 	// #1019
  409b98:	mov	x2, x1
  409b9c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409ba0:	add	x1, x0, #0x6a0
  409ba4:	mov	w0, #0x0                   	// #0
  409ba8:	bl	4027f0 <log_assert_failed_realm@plt>
  409bac:	ldr	x0, [sp, #88]
  409bb0:	ldr	x0, [x0, #96]
  409bb4:	bl	402650 <sd_network_monitor_flush@plt>
  409bb8:	ldr	x0, [sp, #88]
  409bbc:	bl	4096a0 <manager_network_read_link_servers>
  409bc0:	cmp	w0, #0x0
  409bc4:	cset	w0, ne  // ne = any
  409bc8:	strb	w0, [sp, #57]
  409bcc:	bl	402760 <network_is_online@plt>
  409bd0:	strb	w0, [sp, #58]
  409bd4:	ldr	x0, [sp, #88]
  409bd8:	bl	409af4 <manager_is_connected>
  409bdc:	strb	w0, [sp, #59]
  409be0:	ldrb	w0, [sp, #59]
  409be4:	cmp	w0, #0x0
  409be8:	b.eq	409c80 <manager_network_event_handler+0x138>  // b.none
  409bec:	ldrb	w0, [sp, #58]
  409bf0:	eor	w0, w0, #0x1
  409bf4:	and	w0, w0, #0xff
  409bf8:	cmp	w0, #0x0
  409bfc:	b.eq	409c80 <manager_network_event_handler+0x138>  // b.none
  409c00:	mov	w0, #0x6                   	// #6
  409c04:	str	w0, [sp, #64]
  409c08:	str	wzr, [sp, #68]
  409c0c:	str	wzr, [sp, #72]
  409c10:	ldr	w0, [sp, #72]
  409c14:	bl	402bf0 <log_get_max_level_realm@plt>
  409c18:	mov	w1, w0
  409c1c:	ldr	w0, [sp, #64]
  409c20:	and	w0, w0, #0x7
  409c24:	cmp	w1, w0
  409c28:	b.lt	409c6c <manager_network_event_handler+0x124>  // b.tstop
  409c2c:	ldr	w0, [sp, #72]
  409c30:	lsl	w1, w0, #10
  409c34:	ldr	w0, [sp, #64]
  409c38:	orr	w6, w1, w0
  409c3c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409c40:	add	x1, x0, #0x67b
  409c44:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409c48:	add	x5, x0, #0x1e0
  409c4c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409c50:	add	x4, x0, #0x648
  409c54:	mov	w3, #0x409                 	// #1033
  409c58:	mov	x2, x1
  409c5c:	ldr	w1, [sp, #68]
  409c60:	mov	w0, w6
  409c64:	bl	4029d0 <log_internal_realm@plt>
  409c68:	b	409c74 <manager_network_event_handler+0x12c>
  409c6c:	ldr	w0, [sp, #68]
  409c70:	cmp	w0, #0x0
  409c74:	ldr	x0, [sp, #88]
  409c78:	bl	40942c <manager_disconnect>
  409c7c:	b	409d60 <manager_network_event_handler+0x218>
  409c80:	ldrb	w0, [sp, #59]
  409c84:	eor	w0, w0, #0x1
  409c88:	and	w0, w0, #0xff
  409c8c:	cmp	w0, #0x0
  409c90:	b.ne	409ca0 <manager_network_event_handler+0x158>  // b.any
  409c94:	ldrb	w0, [sp, #57]
  409c98:	cmp	w0, #0x0
  409c9c:	b.eq	409d60 <manager_network_event_handler+0x218>  // b.none
  409ca0:	ldrb	w0, [sp, #58]
  409ca4:	cmp	w0, #0x0
  409ca8:	b.eq	409d60 <manager_network_event_handler+0x218>  // b.none
  409cac:	mov	w0, #0x6                   	// #6
  409cb0:	str	w0, [sp, #76]
  409cb4:	str	wzr, [sp, #80]
  409cb8:	str	wzr, [sp, #84]
  409cbc:	ldr	w0, [sp, #84]
  409cc0:	bl	402bf0 <log_get_max_level_realm@plt>
  409cc4:	mov	w1, w0
  409cc8:	ldr	w0, [sp, #76]
  409ccc:	and	w0, w0, #0x7
  409cd0:	cmp	w1, w0
  409cd4:	b.lt	409d18 <manager_network_event_handler+0x1d0>  // b.tstop
  409cd8:	ldr	w0, [sp, #84]
  409cdc:	lsl	w1, w0, #10
  409ce0:	ldr	w0, [sp, #76]
  409ce4:	orr	w6, w1, w0
  409ce8:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409cec:	add	x1, x0, #0x67b
  409cf0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409cf4:	add	x5, x0, #0x210
  409cf8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409cfc:	add	x4, x0, #0x648
  409d00:	mov	w3, #0x40d                 	// #1037
  409d04:	mov	x2, x1
  409d08:	ldr	w1, [sp, #80]
  409d0c:	mov	w0, w6
  409d10:	bl	4029d0 <log_internal_realm@plt>
  409d14:	b	409d20 <manager_network_event_handler+0x1d8>
  409d18:	ldr	w0, [sp, #80]
  409d1c:	cmp	w0, #0x0
  409d20:	ldr	x0, [sp, #88]
  409d24:	ldr	x0, [x0, #128]
  409d28:	cmp	x0, #0x0
  409d2c:	b.eq	409d40 <manager_network_event_handler+0x1f8>  // b.none
  409d30:	ldr	x0, [sp, #88]
  409d34:	bl	4080ec <manager_begin>
  409d38:	str	w0, [sp, #60]
  409d3c:	b	409d4c <manager_network_event_handler+0x204>
  409d40:	ldr	x0, [sp, #88]
  409d44:	bl	408c88 <manager_connect>
  409d48:	str	w0, [sp, #60]
  409d4c:	ldr	w0, [sp, #60]
  409d50:	cmp	w0, #0x0
  409d54:	b.ge	409d60 <manager_network_event_handler+0x218>  // b.tcont
  409d58:	ldr	w0, [sp, #60]
  409d5c:	b	409d64 <manager_network_event_handler+0x21c>
  409d60:	mov	w0, #0x0                   	// #0
  409d64:	ldp	x29, x30, [sp], #96
  409d68:	ret

0000000000409d6c <manager_network_monitor_listen>:
  409d6c:	stp	x29, x30, [sp, #-64]!
  409d70:	mov	x29, sp
  409d74:	str	x0, [sp, #24]
  409d78:	ldr	x0, [sp, #24]
  409d7c:	cmp	x0, #0x0
  409d80:	cset	w0, eq  // eq = none
  409d84:	and	w0, w0, #0xff
  409d88:	and	x0, x0, #0xff
  409d8c:	cmp	x0, #0x0
  409d90:	b.eq	409dbc <manager_network_monitor_listen+0x50>  // b.none
  409d94:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409d98:	add	x1, x0, #0x67b
  409d9c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409da0:	add	x4, x0, #0x668
  409da4:	mov	w3, #0x41d                 	// #1053
  409da8:	mov	x2, x1
  409dac:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409db0:	add	x1, x0, #0x6a0
  409db4:	mov	w0, #0x0                   	// #0
  409db8:	bl	4027f0 <log_assert_failed_realm@plt>
  409dbc:	ldr	x0, [sp, #24]
  409dc0:	add	x0, x0, #0x60
  409dc4:	mov	x1, #0x0                   	// #0
  409dc8:	bl	402bd0 <sd_network_monitor_new@plt>
  409dcc:	str	w0, [sp, #40]
  409dd0:	ldr	w0, [sp, #40]
  409dd4:	cmn	w0, #0x2
  409dd8:	b.ne	409e58 <manager_network_monitor_listen+0xec>  // b.any
  409ddc:	mov	w0, #0x6                   	// #6
  409de0:	str	w0, [sp, #52]
  409de4:	str	wzr, [sp, #56]
  409de8:	str	wzr, [sp, #60]
  409dec:	ldr	w0, [sp, #60]
  409df0:	bl	402bf0 <log_get_max_level_realm@plt>
  409df4:	mov	w1, w0
  409df8:	ldr	w0, [sp, #52]
  409dfc:	and	w0, w0, #0x7
  409e00:	cmp	w1, w0
  409e04:	b.lt	409e48 <manager_network_monitor_listen+0xdc>  // b.tstop
  409e08:	ldr	w0, [sp, #60]
  409e0c:	lsl	w1, w0, #10
  409e10:	ldr	w0, [sp, #52]
  409e14:	orr	w6, w1, w0
  409e18:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409e1c:	add	x1, x0, #0x67b
  409e20:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409e24:	add	x5, x0, #0x250
  409e28:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409e2c:	add	x4, x0, #0x688
  409e30:	mov	w3, #0x421                 	// #1057
  409e34:	mov	x2, x1
  409e38:	ldr	w1, [sp, #56]
  409e3c:	mov	w0, w6
  409e40:	bl	4029d0 <log_internal_realm@plt>
  409e44:	b	409e50 <manager_network_monitor_listen+0xe4>
  409e48:	ldr	w0, [sp, #56]
  409e4c:	cmp	w0, #0x0
  409e50:	mov	w0, #0x0                   	// #0
  409e54:	b	409f00 <manager_network_monitor_listen+0x194>
  409e58:	ldr	w0, [sp, #40]
  409e5c:	cmp	w0, #0x0
  409e60:	b.ge	409e6c <manager_network_monitor_listen+0x100>  // b.tcont
  409e64:	ldr	w0, [sp, #40]
  409e68:	b	409f00 <manager_network_monitor_listen+0x194>
  409e6c:	ldr	x0, [sp, #24]
  409e70:	ldr	x0, [x0, #96]
  409e74:	bl	4028a0 <sd_network_monitor_get_fd@plt>
  409e78:	str	w0, [sp, #44]
  409e7c:	ldr	w0, [sp, #44]
  409e80:	cmp	w0, #0x0
  409e84:	b.ge	409e90 <manager_network_monitor_listen+0x124>  // b.tcont
  409e88:	ldr	w0, [sp, #44]
  409e8c:	b	409f00 <manager_network_monitor_listen+0x194>
  409e90:	ldr	x0, [sp, #24]
  409e94:	ldr	x0, [x0, #96]
  409e98:	bl	402780 <sd_network_monitor_get_events@plt>
  409e9c:	str	w0, [sp, #48]
  409ea0:	ldr	w0, [sp, #48]
  409ea4:	cmp	w0, #0x0
  409ea8:	b.ge	409eb4 <manager_network_monitor_listen+0x148>  // b.tcont
  409eac:	ldr	w0, [sp, #48]
  409eb0:	b	409f00 <manager_network_monitor_listen+0x194>
  409eb4:	ldr	x0, [sp, #24]
  409eb8:	ldr	x6, [x0, #8]
  409ebc:	ldr	x0, [sp, #24]
  409ec0:	add	x1, x0, #0x58
  409ec4:	ldr	w2, [sp, #48]
  409ec8:	ldr	x5, [sp, #24]
  409ecc:	adrp	x0, 409000 <manager_connect+0x378>
  409ed0:	add	x4, x0, #0xb48
  409ed4:	mov	w3, w2
  409ed8:	ldr	w2, [sp, #44]
  409edc:	mov	x0, x6
  409ee0:	bl	402a30 <sd_event_add_io@plt>
  409ee4:	str	w0, [sp, #40]
  409ee8:	ldr	w0, [sp, #40]
  409eec:	cmp	w0, #0x0
  409ef0:	b.ge	409efc <manager_network_monitor_listen+0x190>  // b.tcont
  409ef4:	ldr	w0, [sp, #40]
  409ef8:	b	409f00 <manager_network_monitor_listen+0x194>
  409efc:	mov	w0, #0x0                   	// #0
  409f00:	ldp	x29, x30, [sp], #64
  409f04:	ret

0000000000409f08 <manager_new>:
  409f08:	stp	x29, x30, [sp, #-96]!
  409f0c:	mov	x29, sp
  409f10:	str	x19, [sp, #16]
  409f14:	str	x0, [sp, #40]
  409f18:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  409f1c:	add	x0, x0, #0xa48
  409f20:	ldr	x1, [x0]
  409f24:	str	x1, [sp, #88]
  409f28:	mov	x1, #0x0                   	// #0
  409f2c:	str	xzr, [sp, #64]
  409f30:	ldr	x0, [sp, #40]
  409f34:	cmp	x0, #0x0
  409f38:	cset	w0, eq  // eq = none
  409f3c:	and	w0, w0, #0xff
  409f40:	and	x0, x0, #0xff
  409f44:	cmp	x0, #0x0
  409f48:	b.eq	409f74 <manager_new+0x6c>  // b.none
  409f4c:	adrp	x0, 40c000 <manager_vtable+0xa0>
  409f50:	add	x1, x0, #0x67b
  409f54:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409f58:	add	x4, x0, #0x6a8
  409f5c:	mov	w3, #0x43a                 	// #1082
  409f60:	mov	x2, x1
  409f64:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  409f68:	add	x1, x0, #0x2a8
  409f6c:	mov	w0, #0x0                   	// #0
  409f70:	bl	4027f0 <log_assert_failed_realm@plt>
  409f74:	mov	x1, #0x220                 	// #544
  409f78:	mov	x0, #0x1                   	// #1
  409f7c:	bl	402ad0 <calloc@plt>
  409f80:	str	x0, [sp, #64]
  409f84:	ldr	x0, [sp, #64]
  409f88:	cmp	x0, #0x0
  409f8c:	b.ne	409f98 <manager_new+0x90>  // b.any
  409f90:	mov	w19, #0xfffffff4            	// #-12
  409f94:	b	40a10c <manager_new+0x204>
  409f98:	ldr	x0, [sp, #64]
  409f9c:	mov	x1, #0x4b40                	// #19264
  409fa0:	movk	x1, #0x4c, lsl #16
  409fa4:	str	x1, [x0, #400]
  409fa8:	ldr	x0, [sp, #64]
  409fac:	mov	x1, #0x4800                	// #18432
  409fb0:	movk	x1, #0x1e8, lsl #16
  409fb4:	str	x1, [x0, #232]
  409fb8:	ldr	x0, [sp, #64]
  409fbc:	mov	x1, #0x7a120000            	// #2048000000
  409fc0:	str	x1, [x0, #240]
  409fc4:	ldr	x0, [sp, #64]
  409fc8:	mov	w1, #0xffffffff            	// #-1
  409fcc:	str	w1, [x0, #432]
  409fd0:	ldr	x1, [sp, #64]
  409fd4:	ldr	w0, [x0, #432]
  409fd8:	str	w0, [x1, #136]
  409fdc:	ldr	x0, [sp, #64]
  409fe0:	add	x1, x0, #0x38
  409fe4:	stp	xzr, xzr, [x1]
  409fe8:	str	xzr, [x1, #16]
  409fec:	mov	x1, #0x9680                	// #38528
  409ff0:	movk	x1, #0x98, lsl #16
  409ff4:	str	x1, [x0, #56]
  409ff8:	mov	w1, #0xa                   	// #10
  409ffc:	str	w1, [x0, #64]
  40a000:	ldr	x0, [sp, #64]
  40a004:	add	x0, x0, #0x8
  40a008:	bl	4026d0 <sd_event_default@plt>
  40a00c:	str	w0, [sp, #52]
  40a010:	ldr	w0, [sp, #52]
  40a014:	cmp	w0, #0x0
  40a018:	b.ge	40a024 <manager_new+0x11c>  // b.tcont
  40a01c:	ldr	w19, [sp, #52]
  40a020:	b	40a10c <manager_new+0x204>
  40a024:	ldr	x0, [sp, #64]
  40a028:	ldr	x0, [x0, #8]
  40a02c:	mov	x4, #0x0                   	// #0
  40a030:	mov	x3, #0x0                   	// #0
  40a034:	mov	w2, #0xf                   	// #15
  40a038:	mov	x1, #0x0                   	// #0
  40a03c:	bl	402b90 <sd_event_add_signal@plt>
  40a040:	ldr	x0, [sp, #64]
  40a044:	ldr	x0, [x0, #8]
  40a048:	mov	x4, #0x0                   	// #0
  40a04c:	mov	x3, #0x0                   	// #0
  40a050:	mov	w2, #0x2                   	// #2
  40a054:	mov	x1, #0x0                   	// #0
  40a058:	bl	402b90 <sd_event_add_signal@plt>
  40a05c:	ldr	x0, [sp, #64]
  40a060:	ldr	x0, [x0, #8]
  40a064:	mov	w1, #0x1                   	// #1
  40a068:	bl	402660 <sd_event_set_watchdog@plt>
  40a06c:	ldr	x0, [sp, #64]
  40a070:	add	x0, x0, #0x10
  40a074:	bl	402970 <sd_resolve_default@plt>
  40a078:	str	w0, [sp, #52]
  40a07c:	ldr	w0, [sp, #52]
  40a080:	cmp	w0, #0x0
  40a084:	b.ge	40a090 <manager_new+0x188>  // b.tcont
  40a088:	ldr	w19, [sp, #52]
  40a08c:	b	40a10c <manager_new+0x204>
  40a090:	ldr	x0, [sp, #64]
  40a094:	ldr	x3, [x0, #16]
  40a098:	ldr	x0, [sp, #64]
  40a09c:	ldr	x0, [x0, #8]
  40a0a0:	mov	x2, #0x0                   	// #0
  40a0a4:	mov	x1, x0
  40a0a8:	mov	x0, x3
  40a0ac:	bl	4029b0 <sd_resolve_attach_event@plt>
  40a0b0:	str	w0, [sp, #52]
  40a0b4:	ldr	w0, [sp, #52]
  40a0b8:	cmp	w0, #0x0
  40a0bc:	b.ge	40a0c8 <manager_new+0x1c0>  // b.tcont
  40a0c0:	ldr	w19, [sp, #52]
  40a0c4:	b	40a10c <manager_new+0x204>
  40a0c8:	ldr	x0, [sp, #64]
  40a0cc:	bl	409d6c <manager_network_monitor_listen>
  40a0d0:	str	w0, [sp, #52]
  40a0d4:	ldr	w0, [sp, #52]
  40a0d8:	cmp	w0, #0x0
  40a0dc:	b.ge	40a0e8 <manager_new+0x1e0>  // b.tcont
  40a0e0:	ldr	w19, [sp, #52]
  40a0e4:	b	40a10c <manager_new+0x204>
  40a0e8:	ldr	x0, [sp, #64]
  40a0ec:	bl	4096a0 <manager_network_read_link_servers>
  40a0f0:	ldr	x0, [sp, #64]
  40a0f4:	str	x0, [sp, #56]
  40a0f8:	str	xzr, [sp, #64]
  40a0fc:	ldr	x1, [sp, #56]
  40a100:	ldr	x0, [sp, #40]
  40a104:	str	x1, [x0]
  40a108:	mov	w19, #0x0                   	// #0
  40a10c:	add	x0, sp, #0x40
  40a110:	bl	405594 <manager_freep>
  40a114:	mov	w1, w19
  40a118:	adrp	x0, 41e000 <__FRAME_END__+0xf9cc>
  40a11c:	add	x0, x0, #0xa48
  40a120:	ldr	x2, [sp, #88]
  40a124:	ldr	x0, [x0]
  40a128:	eor	x0, x2, x0
  40a12c:	cmp	x0, #0x0
  40a130:	b.eq	40a138 <manager_new+0x230>  // b.none
  40a134:	bl	402930 <__stack_chk_fail@plt>
  40a138:	mov	w0, w1
  40a13c:	ldr	x19, [sp, #16]
  40a140:	ldp	x29, x30, [sp], #96
  40a144:	ret

000000000040a148 <mfree>:
  40a148:	stp	x29, x30, [sp, #-32]!
  40a14c:	mov	x29, sp
  40a150:	str	x0, [sp, #24]
  40a154:	ldr	x0, [sp, #24]
  40a158:	bl	402b30 <free@plt>
  40a15c:	mov	x0, #0x0                   	// #0
  40a160:	ldp	x29, x30, [sp], #32
  40a164:	ret

000000000040a168 <server_address_new>:
  40a168:	stp	x29, x30, [sp, #-96]!
  40a16c:	mov	x29, sp
  40a170:	str	x0, [sp, #40]
  40a174:	str	x1, [sp, #32]
  40a178:	str	x2, [sp, #24]
  40a17c:	str	w3, [sp, #20]
  40a180:	ldr	x0, [sp, #40]
  40a184:	cmp	x0, #0x0
  40a188:	cset	w0, eq  // eq = none
  40a18c:	and	w0, w0, #0xff
  40a190:	and	x0, x0, #0xff
  40a194:	cmp	x0, #0x0
  40a198:	b.eq	40a1c4 <server_address_new+0x5c>  // b.none
  40a19c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1a0:	add	x1, x0, #0x6bb
  40a1a4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1a8:	add	x4, x0, #0x7c8
  40a1ac:	mov	w3, #0xe                   	// #14
  40a1b0:	mov	x2, x1
  40a1b4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1b8:	add	x1, x0, #0x6e0
  40a1bc:	mov	w0, #0x0                   	// #0
  40a1c0:	bl	4027f0 <log_assert_failed_realm@plt>
  40a1c4:	ldr	x0, [sp, #24]
  40a1c8:	cmp	x0, #0x0
  40a1cc:	cset	w0, eq  // eq = none
  40a1d0:	and	w0, w0, #0xff
  40a1d4:	and	x0, x0, #0xff
  40a1d8:	cmp	x0, #0x0
  40a1dc:	b.eq	40a208 <server_address_new+0xa0>  // b.none
  40a1e0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1e4:	add	x1, x0, #0x6bb
  40a1e8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1ec:	add	x4, x0, #0x7c8
  40a1f0:	mov	w3, #0xf                   	// #15
  40a1f4:	mov	x2, x1
  40a1f8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a1fc:	add	x1, x0, #0x6e8
  40a200:	mov	w0, #0x0                   	// #0
  40a204:	bl	4027f0 <log_assert_failed_realm@plt>
  40a208:	ldr	w0, [sp, #20]
  40a20c:	cmp	w0, #0x1
  40a210:	cset	w0, ls  // ls = plast
  40a214:	and	w0, w0, #0xff
  40a218:	and	x0, x0, #0xff
  40a21c:	cmp	x0, #0x0
  40a220:	b.eq	40a24c <server_address_new+0xe4>  // b.none
  40a224:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a228:	add	x1, x0, #0x6bb
  40a22c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a230:	add	x4, x0, #0x7c8
  40a234:	mov	w3, #0x10                  	// #16
  40a238:	mov	x2, x1
  40a23c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a240:	add	x1, x0, #0x6f8
  40a244:	mov	w0, #0x0                   	// #0
  40a248:	bl	4027f0 <log_assert_failed_realm@plt>
  40a24c:	ldr	w0, [sp, #20]
  40a250:	cmp	w0, #0x80
  40a254:	cset	w0, hi  // hi = pmore
  40a258:	and	w0, w0, #0xff
  40a25c:	and	x0, x0, #0xff
  40a260:	cmp	x0, #0x0
  40a264:	b.eq	40a290 <server_address_new+0x128>  // b.none
  40a268:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a26c:	add	x1, x0, #0x6bb
  40a270:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a274:	add	x4, x0, #0x7c8
  40a278:	mov	w3, #0x11                  	// #17
  40a27c:	mov	x2, x1
  40a280:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a284:	add	x1, x0, #0x728
  40a288:	mov	w0, #0x0                   	// #0
  40a28c:	bl	4027f0 <log_assert_failed_realm@plt>
  40a290:	mov	x1, #0xa0                  	// #160
  40a294:	mov	x0, #0x1                   	// #1
  40a298:	bl	402ad0 <calloc@plt>
  40a29c:	str	x0, [sp, #64]
  40a2a0:	ldr	x0, [sp, #64]
  40a2a4:	cmp	x0, #0x0
  40a2a8:	b.ne	40a2b4 <server_address_new+0x14c>  // b.any
  40a2ac:	mov	w0, #0xfffffff4            	// #-12
  40a2b0:	b	40a440 <server_address_new+0x2d8>
  40a2b4:	ldr	x0, [sp, #64]
  40a2b8:	add	x0, x0, #0x8
  40a2bc:	ldr	w1, [sp, #20]
  40a2c0:	mov	x2, x1
  40a2c4:	ldr	x1, [sp, #24]
  40a2c8:	bl	402750 <memcpy@plt>
  40a2cc:	ldr	x0, [sp, #64]
  40a2d0:	ldr	w1, [sp, #20]
  40a2d4:	str	w1, [x0, #136]
  40a2d8:	ldr	x0, [sp, #40]
  40a2dc:	ldr	x0, [x0, #32]
  40a2e0:	str	x0, [sp, #56]
  40a2e4:	ldr	x0, [sp, #56]
  40a2e8:	cmp	x0, #0x0
  40a2ec:	b.ne	40a304 <server_address_new+0x19c>  // b.any
  40a2f0:	str	xzr, [sp, #48]
  40a2f4:	b	40a31c <server_address_new+0x1b4>
  40a2f8:	ldr	x0, [sp, #56]
  40a2fc:	ldr	x0, [x0, #144]
  40a300:	str	x0, [sp, #56]
  40a304:	ldr	x0, [sp, #56]
  40a308:	ldr	x0, [x0, #144]
  40a30c:	cmp	x0, #0x0
  40a310:	b.ne	40a2f8 <server_address_new+0x190>  // b.any
  40a314:	ldr	x0, [sp, #56]
  40a318:	str	x0, [sp, #48]
  40a31c:	ldr	x0, [sp, #40]
  40a320:	add	x0, x0, #0x20
  40a324:	str	x0, [sp, #72]
  40a328:	ldr	x0, [sp, #48]
  40a32c:	str	x0, [sp, #80]
  40a330:	ldr	x0, [sp, #64]
  40a334:	str	x0, [sp, #88]
  40a338:	ldr	x0, [sp, #88]
  40a33c:	cmp	x0, #0x0
  40a340:	cset	w0, eq  // eq = none
  40a344:	and	w0, w0, #0xff
  40a348:	and	x0, x0, #0xff
  40a34c:	cmp	x0, #0x0
  40a350:	b.eq	40a37c <server_address_new+0x214>  // b.none
  40a354:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a358:	add	x1, x0, #0x6bb
  40a35c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a360:	add	x4, x0, #0x7c8
  40a364:	mov	w3, #0x1b                  	// #27
  40a368:	mov	x2, x1
  40a36c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a370:	add	x1, x0, #0x750
  40a374:	mov	w0, #0x0                   	// #0
  40a378:	bl	4027f0 <log_assert_failed_realm@plt>
  40a37c:	ldr	x0, [sp, #80]
  40a380:	cmp	x0, #0x0
  40a384:	b.ne	40a3d0 <server_address_new+0x268>  // b.any
  40a388:	ldr	x0, [sp, #72]
  40a38c:	ldr	x1, [x0]
  40a390:	ldr	x0, [sp, #88]
  40a394:	str	x1, [x0, #144]
  40a398:	ldr	x0, [sp, #88]
  40a39c:	ldr	x0, [x0, #144]
  40a3a0:	cmp	x0, #0x0
  40a3a4:	b.eq	40a3b8 <server_address_new+0x250>  // b.none
  40a3a8:	ldr	x0, [sp, #88]
  40a3ac:	ldr	x0, [x0, #144]
  40a3b0:	ldr	x1, [sp, #88]
  40a3b4:	str	x1, [x0, #152]
  40a3b8:	ldr	x0, [sp, #88]
  40a3bc:	str	xzr, [x0, #152]
  40a3c0:	ldr	x0, [sp, #72]
  40a3c4:	ldr	x1, [sp, #88]
  40a3c8:	str	x1, [x0]
  40a3cc:	b	40a418 <server_address_new+0x2b0>
  40a3d0:	ldr	x0, [sp, #80]
  40a3d4:	ldr	x1, [x0, #144]
  40a3d8:	ldr	x0, [sp, #88]
  40a3dc:	str	x1, [x0, #144]
  40a3e0:	ldr	x0, [sp, #88]
  40a3e4:	ldr	x0, [x0, #144]
  40a3e8:	cmp	x0, #0x0
  40a3ec:	b.eq	40a400 <server_address_new+0x298>  // b.none
  40a3f0:	ldr	x0, [sp, #88]
  40a3f4:	ldr	x0, [x0, #144]
  40a3f8:	ldr	x1, [sp, #88]
  40a3fc:	str	x1, [x0, #152]
  40a400:	ldr	x0, [sp, #88]
  40a404:	ldr	x1, [sp, #80]
  40a408:	str	x1, [x0, #152]
  40a40c:	ldr	x0, [sp, #80]
  40a410:	ldr	x1, [sp, #88]
  40a414:	str	x1, [x0, #144]
  40a418:	ldr	x0, [sp, #64]
  40a41c:	ldr	x1, [sp, #40]
  40a420:	str	x1, [x0]
  40a424:	ldr	x0, [sp, #32]
  40a428:	cmp	x0, #0x0
  40a42c:	b.eq	40a43c <server_address_new+0x2d4>  // b.none
  40a430:	ldr	x0, [sp, #32]
  40a434:	ldr	x1, [sp, #64]
  40a438:	str	x1, [x0]
  40a43c:	mov	w0, #0x0                   	// #0
  40a440:	ldp	x29, x30, [sp], #96
  40a444:	ret

000000000040a448 <server_address_free>:
  40a448:	stp	x29, x30, [sp, #-48]!
  40a44c:	mov	x29, sp
  40a450:	str	x0, [sp, #24]
  40a454:	ldr	x0, [sp, #24]
  40a458:	cmp	x0, #0x0
  40a45c:	b.ne	40a468 <server_address_free+0x20>  // b.any
  40a460:	mov	x0, #0x0                   	// #0
  40a464:	b	40a5e0 <server_address_free+0x198>
  40a468:	ldr	x0, [sp, #24]
  40a46c:	ldr	x0, [x0]
  40a470:	cmp	x0, #0x0
  40a474:	b.eq	40a5d8 <server_address_free+0x190>  // b.none
  40a478:	ldr	x0, [sp, #24]
  40a47c:	ldr	x0, [x0]
  40a480:	add	x0, x0, #0x20
  40a484:	str	x0, [sp, #32]
  40a488:	ldr	x0, [sp, #24]
  40a48c:	str	x0, [sp, #40]
  40a490:	ldr	x0, [sp, #40]
  40a494:	cmp	x0, #0x0
  40a498:	cset	w0, eq  // eq = none
  40a49c:	and	w0, w0, #0xff
  40a4a0:	and	x0, x0, #0xff
  40a4a4:	cmp	x0, #0x0
  40a4a8:	b.eq	40a4d4 <server_address_free+0x8c>  // b.none
  40a4ac:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a4b0:	add	x1, x0, #0x6bb
  40a4b4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a4b8:	add	x4, x0, #0x7e0
  40a4bc:	mov	w3, #0x29                  	// #41
  40a4c0:	mov	x2, x1
  40a4c4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a4c8:	add	x1, x0, #0x758
  40a4cc:	mov	w0, #0x0                   	// #0
  40a4d0:	bl	4027f0 <log_assert_failed_realm@plt>
  40a4d4:	ldr	x0, [sp, #40]
  40a4d8:	ldr	x0, [x0, #144]
  40a4dc:	cmp	x0, #0x0
  40a4e0:	b.eq	40a4f8 <server_address_free+0xb0>  // b.none
  40a4e4:	ldr	x0, [sp, #40]
  40a4e8:	ldr	x0, [x0, #144]
  40a4ec:	ldr	x1, [sp, #40]
  40a4f0:	ldr	x1, [x1, #152]
  40a4f4:	str	x1, [x0, #152]
  40a4f8:	ldr	x0, [sp, #40]
  40a4fc:	ldr	x0, [x0, #152]
  40a500:	cmp	x0, #0x0
  40a504:	b.eq	40a520 <server_address_free+0xd8>  // b.none
  40a508:	ldr	x0, [sp, #40]
  40a50c:	ldr	x0, [x0, #152]
  40a510:	ldr	x1, [sp, #40]
  40a514:	ldr	x1, [x1, #144]
  40a518:	str	x1, [x0, #144]
  40a51c:	b	40a57c <server_address_free+0x134>
  40a520:	ldr	x0, [sp, #32]
  40a524:	ldr	x0, [x0]
  40a528:	ldr	x1, [sp, #40]
  40a52c:	cmp	x1, x0
  40a530:	cset	w0, ne  // ne = any
  40a534:	and	w0, w0, #0xff
  40a538:	and	x0, x0, #0xff
  40a53c:	cmp	x0, #0x0
  40a540:	b.eq	40a56c <server_address_free+0x124>  // b.none
  40a544:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a548:	add	x1, x0, #0x6bb
  40a54c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a550:	add	x4, x0, #0x7e0
  40a554:	mov	w3, #0x29                  	// #41
  40a558:	mov	x2, x1
  40a55c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a560:	add	x1, x0, #0x760
  40a564:	mov	w0, #0x0                   	// #0
  40a568:	bl	4027f0 <log_assert_failed_realm@plt>
  40a56c:	ldr	x0, [sp, #40]
  40a570:	ldr	x1, [x0, #144]
  40a574:	ldr	x0, [sp, #32]
  40a578:	str	x1, [x0]
  40a57c:	ldr	x0, [sp, #40]
  40a580:	str	xzr, [x0, #152]
  40a584:	ldr	x0, [sp, #40]
  40a588:	ldr	x1, [x0, #152]
  40a58c:	ldr	x0, [sp, #40]
  40a590:	str	x1, [x0, #144]
  40a594:	ldr	x0, [sp, #24]
  40a598:	ldr	x0, [x0]
  40a59c:	ldr	x0, [x0]
  40a5a0:	cmp	x0, #0x0
  40a5a4:	b.eq	40a5d8 <server_address_free+0x190>  // b.none
  40a5a8:	ldr	x0, [sp, #24]
  40a5ac:	ldr	x0, [x0]
  40a5b0:	ldr	x0, [x0]
  40a5b4:	ldr	x0, [x0, #128]
  40a5b8:	ldr	x1, [sp, #24]
  40a5bc:	cmp	x1, x0
  40a5c0:	b.ne	40a5d8 <server_address_free+0x190>  // b.any
  40a5c4:	ldr	x0, [sp, #24]
  40a5c8:	ldr	x0, [x0]
  40a5cc:	ldr	x0, [x0]
  40a5d0:	mov	x1, #0x0                   	// #0
  40a5d4:	bl	4084b0 <manager_set_server_address>
  40a5d8:	ldr	x0, [sp, #24]
  40a5dc:	bl	40a148 <mfree>
  40a5e0:	ldp	x29, x30, [sp], #48
  40a5e4:	ret

000000000040a5e8 <server_name_new>:
  40a5e8:	stp	x29, x30, [sp, #-176]!
  40a5ec:	mov	x29, sp
  40a5f0:	str	x0, [sp, #40]
  40a5f4:	str	x1, [sp, #32]
  40a5f8:	str	w2, [sp, #28]
  40a5fc:	str	x3, [sp, #16]
  40a600:	ldr	x0, [sp, #40]
  40a604:	cmp	x0, #0x0
  40a608:	cset	w0, eq  // eq = none
  40a60c:	and	w0, w0, #0xff
  40a610:	and	x0, x0, #0xff
  40a614:	cmp	x0, #0x0
  40a618:	b.eq	40a644 <server_name_new+0x5c>  // b.none
  40a61c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a620:	add	x1, x0, #0x6bb
  40a624:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a628:	add	x4, x0, #0x7f8
  40a62c:	mov	w3, #0x3a                  	// #58
  40a630:	mov	x2, x1
  40a634:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a638:	add	x1, x0, #0x770
  40a63c:	mov	w0, #0x0                   	// #0
  40a640:	bl	4027f0 <log_assert_failed_realm@plt>
  40a644:	ldr	x0, [sp, #16]
  40a648:	cmp	x0, #0x0
  40a64c:	cset	w0, eq  // eq = none
  40a650:	and	w0, w0, #0xff
  40a654:	and	x0, x0, #0xff
  40a658:	cmp	x0, #0x0
  40a65c:	b.eq	40a688 <server_name_new+0xa0>  // b.none
  40a660:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a664:	add	x1, x0, #0x6bb
  40a668:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a66c:	add	x4, x0, #0x7f8
  40a670:	mov	w3, #0x3b                  	// #59
  40a674:	mov	x2, x1
  40a678:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a67c:	add	x1, x0, #0x778
  40a680:	mov	w0, #0x0                   	// #0
  40a684:	bl	4027f0 <log_assert_failed_realm@plt>
  40a688:	mov	x1, #0x38                  	// #56
  40a68c:	mov	x0, #0x1                   	// #1
  40a690:	bl	402ad0 <calloc@plt>
  40a694:	str	x0, [sp, #96]
  40a698:	ldr	x0, [sp, #96]
  40a69c:	cmp	x0, #0x0
  40a6a0:	b.ne	40a6ac <server_name_new+0xc4>  // b.any
  40a6a4:	mov	w0, #0xfffffff4            	// #-12
  40a6a8:	b	40abe0 <server_name_new+0x5f8>
  40a6ac:	ldr	x0, [sp, #96]
  40a6b0:	ldr	w1, [sp, #28]
  40a6b4:	str	w1, [x0, #8]
  40a6b8:	ldr	x0, [sp, #16]
  40a6bc:	bl	402ac0 <strdup@plt>
  40a6c0:	mov	x1, x0
  40a6c4:	ldr	x0, [sp, #96]
  40a6c8:	str	x1, [x0, #16]
  40a6cc:	ldr	x0, [sp, #96]
  40a6d0:	ldr	x0, [x0, #16]
  40a6d4:	cmp	x0, #0x0
  40a6d8:	b.ne	40a6ec <server_name_new+0x104>  // b.any
  40a6dc:	ldr	x0, [sp, #96]
  40a6e0:	bl	402b30 <free@plt>
  40a6e4:	mov	w0, #0xfffffff4            	// #-12
  40a6e8:	b	40abe0 <server_name_new+0x5f8>
  40a6ec:	ldr	w0, [sp, #28]
  40a6f0:	cmp	w0, #0x0
  40a6f4:	b.ne	40a83c <server_name_new+0x254>  // b.any
  40a6f8:	ldr	x0, [sp, #40]
  40a6fc:	ldr	x0, [x0, #24]
  40a700:	str	x0, [sp, #72]
  40a704:	ldr	x0, [sp, #72]
  40a708:	cmp	x0, #0x0
  40a70c:	b.ne	40a724 <server_name_new+0x13c>  // b.any
  40a710:	str	xzr, [sp, #64]
  40a714:	b	40a73c <server_name_new+0x154>
  40a718:	ldr	x0, [sp, #72]
  40a71c:	ldr	x0, [x0, #40]
  40a720:	str	x0, [sp, #72]
  40a724:	ldr	x0, [sp, #72]
  40a728:	ldr	x0, [x0, #40]
  40a72c:	cmp	x0, #0x0
  40a730:	b.ne	40a718 <server_name_new+0x130>  // b.any
  40a734:	ldr	x0, [sp, #72]
  40a738:	str	x0, [sp, #64]
  40a73c:	ldr	x0, [sp, #40]
  40a740:	add	x0, x0, #0x18
  40a744:	str	x0, [sp, #152]
  40a748:	ldr	x0, [sp, #64]
  40a74c:	str	x0, [sp, #160]
  40a750:	ldr	x0, [sp, #96]
  40a754:	str	x0, [sp, #168]
  40a758:	ldr	x0, [sp, #168]
  40a75c:	cmp	x0, #0x0
  40a760:	cset	w0, eq  // eq = none
  40a764:	and	w0, w0, #0xff
  40a768:	and	x0, x0, #0xff
  40a76c:	cmp	x0, #0x0
  40a770:	b.eq	40a79c <server_name_new+0x1b4>  // b.none
  40a774:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a778:	add	x1, x0, #0x6bb
  40a77c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a780:	add	x4, x0, #0x7f8
  40a784:	mov	w3, #0x4a                  	// #74
  40a788:	mov	x2, x1
  40a78c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a790:	add	x1, x0, #0x750
  40a794:	mov	w0, #0x0                   	// #0
  40a798:	bl	4027f0 <log_assert_failed_realm@plt>
  40a79c:	ldr	x0, [sp, #160]
  40a7a0:	cmp	x0, #0x0
  40a7a4:	b.ne	40a7f0 <server_name_new+0x208>  // b.any
  40a7a8:	ldr	x0, [sp, #152]
  40a7ac:	ldr	x1, [x0]
  40a7b0:	ldr	x0, [sp, #168]
  40a7b4:	str	x1, [x0, #40]
  40a7b8:	ldr	x0, [sp, #168]
  40a7bc:	ldr	x0, [x0, #40]
  40a7c0:	cmp	x0, #0x0
  40a7c4:	b.eq	40a7d8 <server_name_new+0x1f0>  // b.none
  40a7c8:	ldr	x0, [sp, #168]
  40a7cc:	ldr	x0, [x0, #40]
  40a7d0:	ldr	x1, [sp, #168]
  40a7d4:	str	x1, [x0, #48]
  40a7d8:	ldr	x0, [sp, #168]
  40a7dc:	str	xzr, [x0, #48]
  40a7e0:	ldr	x0, [sp, #152]
  40a7e4:	ldr	x1, [sp, #168]
  40a7e8:	str	x1, [x0]
  40a7ec:	b	40ab04 <server_name_new+0x51c>
  40a7f0:	ldr	x0, [sp, #160]
  40a7f4:	ldr	x1, [x0, #40]
  40a7f8:	ldr	x0, [sp, #168]
  40a7fc:	str	x1, [x0, #40]
  40a800:	ldr	x0, [sp, #168]
  40a804:	ldr	x0, [x0, #40]
  40a808:	cmp	x0, #0x0
  40a80c:	b.eq	40a820 <server_name_new+0x238>  // b.none
  40a810:	ldr	x0, [sp, #168]
  40a814:	ldr	x0, [x0, #40]
  40a818:	ldr	x1, [sp, #168]
  40a81c:	str	x1, [x0, #48]
  40a820:	ldr	x0, [sp, #168]
  40a824:	ldr	x1, [sp, #160]
  40a828:	str	x1, [x0, #48]
  40a82c:	ldr	x0, [sp, #160]
  40a830:	ldr	x1, [sp, #168]
  40a834:	str	x1, [x0, #40]
  40a838:	b	40ab04 <server_name_new+0x51c>
  40a83c:	ldr	w0, [sp, #28]
  40a840:	cmp	w0, #0x2
  40a844:	b.ne	40a98c <server_name_new+0x3a4>  // b.any
  40a848:	ldr	x0, [sp, #40]
  40a84c:	ldr	x0, [x0, #32]
  40a850:	str	x0, [sp, #80]
  40a854:	ldr	x0, [sp, #80]
  40a858:	cmp	x0, #0x0
  40a85c:	b.ne	40a874 <server_name_new+0x28c>  // b.any
  40a860:	str	xzr, [sp, #64]
  40a864:	b	40a88c <server_name_new+0x2a4>
  40a868:	ldr	x0, [sp, #80]
  40a86c:	ldr	x0, [x0, #40]
  40a870:	str	x0, [sp, #80]
  40a874:	ldr	x0, [sp, #80]
  40a878:	ldr	x0, [x0, #40]
  40a87c:	cmp	x0, #0x0
  40a880:	b.ne	40a868 <server_name_new+0x280>  // b.any
  40a884:	ldr	x0, [sp, #80]
  40a888:	str	x0, [sp, #64]
  40a88c:	ldr	x0, [sp, #40]
  40a890:	add	x0, x0, #0x20
  40a894:	str	x0, [sp, #128]
  40a898:	ldr	x0, [sp, #64]
  40a89c:	str	x0, [sp, #136]
  40a8a0:	ldr	x0, [sp, #96]
  40a8a4:	str	x0, [sp, #144]
  40a8a8:	ldr	x0, [sp, #144]
  40a8ac:	cmp	x0, #0x0
  40a8b0:	cset	w0, eq  // eq = none
  40a8b4:	and	w0, w0, #0xff
  40a8b8:	and	x0, x0, #0xff
  40a8bc:	cmp	x0, #0x0
  40a8c0:	b.eq	40a8ec <server_name_new+0x304>  // b.none
  40a8c4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a8c8:	add	x1, x0, #0x6bb
  40a8cc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a8d0:	add	x4, x0, #0x7f8
  40a8d4:	mov	w3, #0x4d                  	// #77
  40a8d8:	mov	x2, x1
  40a8dc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40a8e0:	add	x1, x0, #0x750
  40a8e4:	mov	w0, #0x0                   	// #0
  40a8e8:	bl	4027f0 <log_assert_failed_realm@plt>
  40a8ec:	ldr	x0, [sp, #136]
  40a8f0:	cmp	x0, #0x0
  40a8f4:	b.ne	40a940 <server_name_new+0x358>  // b.any
  40a8f8:	ldr	x0, [sp, #128]
  40a8fc:	ldr	x1, [x0]
  40a900:	ldr	x0, [sp, #144]
  40a904:	str	x1, [x0, #40]
  40a908:	ldr	x0, [sp, #144]
  40a90c:	ldr	x0, [x0, #40]
  40a910:	cmp	x0, #0x0
  40a914:	b.eq	40a928 <server_name_new+0x340>  // b.none
  40a918:	ldr	x0, [sp, #144]
  40a91c:	ldr	x0, [x0, #40]
  40a920:	ldr	x1, [sp, #144]
  40a924:	str	x1, [x0, #48]
  40a928:	ldr	x0, [sp, #144]
  40a92c:	str	xzr, [x0, #48]
  40a930:	ldr	x0, [sp, #128]
  40a934:	ldr	x1, [sp, #144]
  40a938:	str	x1, [x0]
  40a93c:	b	40ab04 <server_name_new+0x51c>
  40a940:	ldr	x0, [sp, #136]
  40a944:	ldr	x1, [x0, #40]
  40a948:	ldr	x0, [sp, #144]
  40a94c:	str	x1, [x0, #40]
  40a950:	ldr	x0, [sp, #144]
  40a954:	ldr	x0, [x0, #40]
  40a958:	cmp	x0, #0x0
  40a95c:	b.eq	40a970 <server_name_new+0x388>  // b.none
  40a960:	ldr	x0, [sp, #144]
  40a964:	ldr	x0, [x0, #40]
  40a968:	ldr	x1, [sp, #144]
  40a96c:	str	x1, [x0, #48]
  40a970:	ldr	x0, [sp, #144]
  40a974:	ldr	x1, [sp, #136]
  40a978:	str	x1, [x0, #48]
  40a97c:	ldr	x0, [sp, #136]
  40a980:	ldr	x1, [sp, #144]
  40a984:	str	x1, [x0, #40]
  40a988:	b	40ab04 <server_name_new+0x51c>
  40a98c:	ldr	w0, [sp, #28]
  40a990:	cmp	w0, #0x1
  40a994:	b.ne	40aadc <server_name_new+0x4f4>  // b.any
  40a998:	ldr	x0, [sp, #40]
  40a99c:	ldr	x0, [x0, #40]
  40a9a0:	str	x0, [sp, #88]
  40a9a4:	ldr	x0, [sp, #88]
  40a9a8:	cmp	x0, #0x0
  40a9ac:	b.ne	40a9c4 <server_name_new+0x3dc>  // b.any
  40a9b0:	str	xzr, [sp, #64]
  40a9b4:	b	40a9dc <server_name_new+0x3f4>
  40a9b8:	ldr	x0, [sp, #88]
  40a9bc:	ldr	x0, [x0, #40]
  40a9c0:	str	x0, [sp, #88]
  40a9c4:	ldr	x0, [sp, #88]
  40a9c8:	ldr	x0, [x0, #40]
  40a9cc:	cmp	x0, #0x0
  40a9d0:	b.ne	40a9b8 <server_name_new+0x3d0>  // b.any
  40a9d4:	ldr	x0, [sp, #88]
  40a9d8:	str	x0, [sp, #64]
  40a9dc:	ldr	x0, [sp, #40]
  40a9e0:	add	x0, x0, #0x28
  40a9e4:	str	x0, [sp, #104]
  40a9e8:	ldr	x0, [sp, #64]
  40a9ec:	str	x0, [sp, #112]
  40a9f0:	ldr	x0, [sp, #96]
  40a9f4:	str	x0, [sp, #120]
  40a9f8:	ldr	x0, [sp, #120]
  40a9fc:	cmp	x0, #0x0
  40aa00:	cset	w0, eq  // eq = none
  40aa04:	and	w0, w0, #0xff
  40aa08:	and	x0, x0, #0xff
  40aa0c:	cmp	x0, #0x0
  40aa10:	b.eq	40aa3c <server_name_new+0x454>  // b.none
  40aa14:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aa18:	add	x1, x0, #0x6bb
  40aa1c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aa20:	add	x4, x0, #0x7f8
  40aa24:	mov	w3, #0x50                  	// #80
  40aa28:	mov	x2, x1
  40aa2c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aa30:	add	x1, x0, #0x750
  40aa34:	mov	w0, #0x0                   	// #0
  40aa38:	bl	4027f0 <log_assert_failed_realm@plt>
  40aa3c:	ldr	x0, [sp, #112]
  40aa40:	cmp	x0, #0x0
  40aa44:	b.ne	40aa90 <server_name_new+0x4a8>  // b.any
  40aa48:	ldr	x0, [sp, #104]
  40aa4c:	ldr	x1, [x0]
  40aa50:	ldr	x0, [sp, #120]
  40aa54:	str	x1, [x0, #40]
  40aa58:	ldr	x0, [sp, #120]
  40aa5c:	ldr	x0, [x0, #40]
  40aa60:	cmp	x0, #0x0
  40aa64:	b.eq	40aa78 <server_name_new+0x490>  // b.none
  40aa68:	ldr	x0, [sp, #120]
  40aa6c:	ldr	x0, [x0, #40]
  40aa70:	ldr	x1, [sp, #120]
  40aa74:	str	x1, [x0, #48]
  40aa78:	ldr	x0, [sp, #120]
  40aa7c:	str	xzr, [x0, #48]
  40aa80:	ldr	x0, [sp, #104]
  40aa84:	ldr	x1, [sp, #120]
  40aa88:	str	x1, [x0]
  40aa8c:	b	40ab04 <server_name_new+0x51c>
  40aa90:	ldr	x0, [sp, #112]
  40aa94:	ldr	x1, [x0, #40]
  40aa98:	ldr	x0, [sp, #120]
  40aa9c:	str	x1, [x0, #40]
  40aaa0:	ldr	x0, [sp, #120]
  40aaa4:	ldr	x0, [x0, #40]
  40aaa8:	cmp	x0, #0x0
  40aaac:	b.eq	40aac0 <server_name_new+0x4d8>  // b.none
  40aab0:	ldr	x0, [sp, #120]
  40aab4:	ldr	x0, [x0, #40]
  40aab8:	ldr	x1, [sp, #120]
  40aabc:	str	x1, [x0, #48]
  40aac0:	ldr	x0, [sp, #120]
  40aac4:	ldr	x1, [sp, #112]
  40aac8:	str	x1, [x0, #48]
  40aacc:	ldr	x0, [sp, #112]
  40aad0:	ldr	x1, [sp, #120]
  40aad4:	str	x1, [x0, #40]
  40aad8:	b	40ab04 <server_name_new+0x51c>
  40aadc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aae0:	add	x1, x0, #0x6bb
  40aae4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aae8:	add	x4, x0, #0x7f8
  40aaec:	mov	w3, #0x52                  	// #82
  40aaf0:	mov	x2, x1
  40aaf4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aaf8:	add	x1, x0, #0x780
  40aafc:	mov	w0, #0x0                   	// #0
  40ab00:	bl	402810 <log_assert_failed_unreachable_realm@plt>
  40ab04:	ldr	x0, [sp, #96]
  40ab08:	ldr	x1, [sp, #40]
  40ab0c:	str	x1, [x0]
  40ab10:	ldr	w0, [sp, #28]
  40ab14:	cmp	w0, #0x1
  40ab18:	b.eq	40ab4c <server_name_new+0x564>  // b.none
  40ab1c:	ldr	x0, [sp, #40]
  40ab20:	ldr	x0, [x0, #120]
  40ab24:	cmp	x0, #0x0
  40ab28:	b.eq	40ab4c <server_name_new+0x564>  // b.none
  40ab2c:	ldr	x0, [sp, #40]
  40ab30:	ldr	x0, [x0, #120]
  40ab34:	ldr	w0, [x0, #8]
  40ab38:	cmp	w0, #0x1
  40ab3c:	b.ne	40ab4c <server_name_new+0x564>  // b.any
  40ab40:	mov	x1, #0x0                   	// #0
  40ab44:	ldr	x0, [sp, #40]
  40ab48:	bl	408390 <manager_set_server_name>
  40ab4c:	mov	w0, #0x7                   	// #7
  40ab50:	str	w0, [sp, #52]
  40ab54:	str	wzr, [sp, #56]
  40ab58:	str	wzr, [sp, #60]
  40ab5c:	ldr	w0, [sp, #60]
  40ab60:	bl	402bf0 <log_get_max_level_realm@plt>
  40ab64:	mov	w1, w0
  40ab68:	ldr	w0, [sp, #52]
  40ab6c:	and	w0, w0, #0x7
  40ab70:	cmp	w1, w0
  40ab74:	b.lt	40abbc <server_name_new+0x5d4>  // b.tstop
  40ab78:	ldr	w0, [sp, #60]
  40ab7c:	lsl	w1, w0, #10
  40ab80:	ldr	w0, [sp, #52]
  40ab84:	orr	w7, w1, w0
  40ab88:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ab8c:	add	x1, x0, #0x6bb
  40ab90:	ldr	x6, [sp, #16]
  40ab94:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ab98:	add	x5, x0, #0x798
  40ab9c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aba0:	add	x4, x0, #0x808
  40aba4:	mov	w3, #0x5b                  	// #91
  40aba8:	mov	x2, x1
  40abac:	ldr	w1, [sp, #56]
  40abb0:	mov	w0, w7
  40abb4:	bl	4029d0 <log_internal_realm@plt>
  40abb8:	b	40abc4 <server_name_new+0x5dc>
  40abbc:	ldr	w0, [sp, #56]
  40abc0:	cmp	w0, #0x0
  40abc4:	ldr	x0, [sp, #32]
  40abc8:	cmp	x0, #0x0
  40abcc:	b.eq	40abdc <server_name_new+0x5f4>  // b.none
  40abd0:	ldr	x0, [sp, #32]
  40abd4:	ldr	x1, [sp, #96]
  40abd8:	str	x1, [x0]
  40abdc:	mov	w0, #0x0                   	// #0
  40abe0:	ldp	x29, x30, [sp], #176
  40abe4:	ret

000000000040abe8 <server_name_free>:
  40abe8:	stp	x29, x30, [sp, #-96]!
  40abec:	mov	x29, sp
  40abf0:	str	x0, [sp, #24]
  40abf4:	ldr	x0, [sp, #24]
  40abf8:	cmp	x0, #0x0
  40abfc:	b.ne	40ac08 <server_name_free+0x20>  // b.any
  40ac00:	mov	x0, #0x0                   	// #0
  40ac04:	b	40b094 <server_name_free+0x4ac>
  40ac08:	ldr	x0, [sp, #24]
  40ac0c:	bl	40b09c <server_name_flush_addresses>
  40ac10:	ldr	x0, [sp, #24]
  40ac14:	ldr	x0, [x0]
  40ac18:	cmp	x0, #0x0
  40ac1c:	b.eq	40b000 <server_name_free+0x418>  // b.none
  40ac20:	ldr	x0, [sp, #24]
  40ac24:	ldr	w0, [x0, #8]
  40ac28:	cmp	w0, #0x0
  40ac2c:	b.ne	40ad50 <server_name_free+0x168>  // b.any
  40ac30:	ldr	x0, [sp, #24]
  40ac34:	ldr	x0, [x0]
  40ac38:	add	x0, x0, #0x18
  40ac3c:	str	x0, [sp, #80]
  40ac40:	ldr	x0, [sp, #24]
  40ac44:	str	x0, [sp, #88]
  40ac48:	ldr	x0, [sp, #88]
  40ac4c:	cmp	x0, #0x0
  40ac50:	cset	w0, eq  // eq = none
  40ac54:	and	w0, w0, #0xff
  40ac58:	and	x0, x0, #0xff
  40ac5c:	cmp	x0, #0x0
  40ac60:	b.eq	40ac8c <server_name_free+0xa4>  // b.none
  40ac64:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ac68:	add	x1, x0, #0x6bb
  40ac6c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ac70:	add	x4, x0, #0x818
  40ac74:	mov	w3, #0x6b                  	// #107
  40ac78:	mov	x2, x1
  40ac7c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ac80:	add	x1, x0, #0x758
  40ac84:	mov	w0, #0x0                   	// #0
  40ac88:	bl	4027f0 <log_assert_failed_realm@plt>
  40ac8c:	ldr	x0, [sp, #88]
  40ac90:	ldr	x0, [x0, #40]
  40ac94:	cmp	x0, #0x0
  40ac98:	b.eq	40acb0 <server_name_free+0xc8>  // b.none
  40ac9c:	ldr	x0, [sp, #88]
  40aca0:	ldr	x0, [x0, #40]
  40aca4:	ldr	x1, [sp, #88]
  40aca8:	ldr	x1, [x1, #48]
  40acac:	str	x1, [x0, #48]
  40acb0:	ldr	x0, [sp, #88]
  40acb4:	ldr	x0, [x0, #48]
  40acb8:	cmp	x0, #0x0
  40acbc:	b.eq	40acd8 <server_name_free+0xf0>  // b.none
  40acc0:	ldr	x0, [sp, #88]
  40acc4:	ldr	x0, [x0, #48]
  40acc8:	ldr	x1, [sp, #88]
  40accc:	ldr	x1, [x1, #40]
  40acd0:	str	x1, [x0, #40]
  40acd4:	b	40ad34 <server_name_free+0x14c>
  40acd8:	ldr	x0, [sp, #80]
  40acdc:	ldr	x0, [x0]
  40ace0:	ldr	x1, [sp, #88]
  40ace4:	cmp	x1, x0
  40ace8:	cset	w0, ne  // ne = any
  40acec:	and	w0, w0, #0xff
  40acf0:	and	x0, x0, #0xff
  40acf4:	cmp	x0, #0x0
  40acf8:	b.eq	40ad24 <server_name_free+0x13c>  // b.none
  40acfc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ad00:	add	x1, x0, #0x6bb
  40ad04:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ad08:	add	x4, x0, #0x818
  40ad0c:	mov	w3, #0x6b                  	// #107
  40ad10:	mov	x2, x1
  40ad14:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ad18:	add	x1, x0, #0x760
  40ad1c:	mov	w0, #0x0                   	// #0
  40ad20:	bl	4027f0 <log_assert_failed_realm@plt>
  40ad24:	ldr	x0, [sp, #88]
  40ad28:	ldr	x1, [x0, #40]
  40ad2c:	ldr	x0, [sp, #80]
  40ad30:	str	x1, [x0]
  40ad34:	ldr	x0, [sp, #88]
  40ad38:	str	xzr, [x0, #48]
  40ad3c:	ldr	x0, [sp, #88]
  40ad40:	ldr	x1, [x0, #48]
  40ad44:	ldr	x0, [sp, #88]
  40ad48:	str	x1, [x0, #40]
  40ad4c:	b	40afd8 <server_name_free+0x3f0>
  40ad50:	ldr	x0, [sp, #24]
  40ad54:	ldr	w0, [x0, #8]
  40ad58:	cmp	w0, #0x2
  40ad5c:	b.ne	40ae80 <server_name_free+0x298>  // b.any
  40ad60:	ldr	x0, [sp, #24]
  40ad64:	ldr	x0, [x0]
  40ad68:	add	x0, x0, #0x20
  40ad6c:	str	x0, [sp, #64]
  40ad70:	ldr	x0, [sp, #24]
  40ad74:	str	x0, [sp, #72]
  40ad78:	ldr	x0, [sp, #72]
  40ad7c:	cmp	x0, #0x0
  40ad80:	cset	w0, eq  // eq = none
  40ad84:	and	w0, w0, #0xff
  40ad88:	and	x0, x0, #0xff
  40ad8c:	cmp	x0, #0x0
  40ad90:	b.eq	40adbc <server_name_free+0x1d4>  // b.none
  40ad94:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ad98:	add	x1, x0, #0x6bb
  40ad9c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ada0:	add	x4, x0, #0x818
  40ada4:	mov	w3, #0x6d                  	// #109
  40ada8:	mov	x2, x1
  40adac:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40adb0:	add	x1, x0, #0x758
  40adb4:	mov	w0, #0x0                   	// #0
  40adb8:	bl	4027f0 <log_assert_failed_realm@plt>
  40adbc:	ldr	x0, [sp, #72]
  40adc0:	ldr	x0, [x0, #40]
  40adc4:	cmp	x0, #0x0
  40adc8:	b.eq	40ade0 <server_name_free+0x1f8>  // b.none
  40adcc:	ldr	x0, [sp, #72]
  40add0:	ldr	x0, [x0, #40]
  40add4:	ldr	x1, [sp, #72]
  40add8:	ldr	x1, [x1, #48]
  40addc:	str	x1, [x0, #48]
  40ade0:	ldr	x0, [sp, #72]
  40ade4:	ldr	x0, [x0, #48]
  40ade8:	cmp	x0, #0x0
  40adec:	b.eq	40ae08 <server_name_free+0x220>  // b.none
  40adf0:	ldr	x0, [sp, #72]
  40adf4:	ldr	x0, [x0, #48]
  40adf8:	ldr	x1, [sp, #72]
  40adfc:	ldr	x1, [x1, #40]
  40ae00:	str	x1, [x0, #40]
  40ae04:	b	40ae64 <server_name_free+0x27c>
  40ae08:	ldr	x0, [sp, #64]
  40ae0c:	ldr	x0, [x0]
  40ae10:	ldr	x1, [sp, #72]
  40ae14:	cmp	x1, x0
  40ae18:	cset	w0, ne  // ne = any
  40ae1c:	and	w0, w0, #0xff
  40ae20:	and	x0, x0, #0xff
  40ae24:	cmp	x0, #0x0
  40ae28:	b.eq	40ae54 <server_name_free+0x26c>  // b.none
  40ae2c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ae30:	add	x1, x0, #0x6bb
  40ae34:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ae38:	add	x4, x0, #0x818
  40ae3c:	mov	w3, #0x6d                  	// #109
  40ae40:	mov	x2, x1
  40ae44:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40ae48:	add	x1, x0, #0x760
  40ae4c:	mov	w0, #0x0                   	// #0
  40ae50:	bl	4027f0 <log_assert_failed_realm@plt>
  40ae54:	ldr	x0, [sp, #72]
  40ae58:	ldr	x1, [x0, #40]
  40ae5c:	ldr	x0, [sp, #64]
  40ae60:	str	x1, [x0]
  40ae64:	ldr	x0, [sp, #72]
  40ae68:	str	xzr, [x0, #48]
  40ae6c:	ldr	x0, [sp, #72]
  40ae70:	ldr	x1, [x0, #48]
  40ae74:	ldr	x0, [sp, #72]
  40ae78:	str	x1, [x0, #40]
  40ae7c:	b	40afd8 <server_name_free+0x3f0>
  40ae80:	ldr	x0, [sp, #24]
  40ae84:	ldr	w0, [x0, #8]
  40ae88:	cmp	w0, #0x1
  40ae8c:	b.ne	40afb0 <server_name_free+0x3c8>  // b.any
  40ae90:	ldr	x0, [sp, #24]
  40ae94:	ldr	x0, [x0]
  40ae98:	add	x0, x0, #0x28
  40ae9c:	str	x0, [sp, #48]
  40aea0:	ldr	x0, [sp, #24]
  40aea4:	str	x0, [sp, #56]
  40aea8:	ldr	x0, [sp, #56]
  40aeac:	cmp	x0, #0x0
  40aeb0:	cset	w0, eq  // eq = none
  40aeb4:	and	w0, w0, #0xff
  40aeb8:	and	x0, x0, #0xff
  40aebc:	cmp	x0, #0x0
  40aec0:	b.eq	40aeec <server_name_free+0x304>  // b.none
  40aec4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aec8:	add	x1, x0, #0x6bb
  40aecc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aed0:	add	x4, x0, #0x818
  40aed4:	mov	w3, #0x6f                  	// #111
  40aed8:	mov	x2, x1
  40aedc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40aee0:	add	x1, x0, #0x758
  40aee4:	mov	w0, #0x0                   	// #0
  40aee8:	bl	4027f0 <log_assert_failed_realm@plt>
  40aeec:	ldr	x0, [sp, #56]
  40aef0:	ldr	x0, [x0, #40]
  40aef4:	cmp	x0, #0x0
  40aef8:	b.eq	40af10 <server_name_free+0x328>  // b.none
  40aefc:	ldr	x0, [sp, #56]
  40af00:	ldr	x0, [x0, #40]
  40af04:	ldr	x1, [sp, #56]
  40af08:	ldr	x1, [x1, #48]
  40af0c:	str	x1, [x0, #48]
  40af10:	ldr	x0, [sp, #56]
  40af14:	ldr	x0, [x0, #48]
  40af18:	cmp	x0, #0x0
  40af1c:	b.eq	40af38 <server_name_free+0x350>  // b.none
  40af20:	ldr	x0, [sp, #56]
  40af24:	ldr	x0, [x0, #48]
  40af28:	ldr	x1, [sp, #56]
  40af2c:	ldr	x1, [x1, #40]
  40af30:	str	x1, [x0, #40]
  40af34:	b	40af94 <server_name_free+0x3ac>
  40af38:	ldr	x0, [sp, #48]
  40af3c:	ldr	x0, [x0]
  40af40:	ldr	x1, [sp, #56]
  40af44:	cmp	x1, x0
  40af48:	cset	w0, ne  // ne = any
  40af4c:	and	w0, w0, #0xff
  40af50:	and	x0, x0, #0xff
  40af54:	cmp	x0, #0x0
  40af58:	b.eq	40af84 <server_name_free+0x39c>  // b.none
  40af5c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40af60:	add	x1, x0, #0x6bb
  40af64:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40af68:	add	x4, x0, #0x818
  40af6c:	mov	w3, #0x6f                  	// #111
  40af70:	mov	x2, x1
  40af74:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40af78:	add	x1, x0, #0x760
  40af7c:	mov	w0, #0x0                   	// #0
  40af80:	bl	4027f0 <log_assert_failed_realm@plt>
  40af84:	ldr	x0, [sp, #56]
  40af88:	ldr	x1, [x0, #40]
  40af8c:	ldr	x0, [sp, #48]
  40af90:	str	x1, [x0]
  40af94:	ldr	x0, [sp, #56]
  40af98:	str	xzr, [x0, #48]
  40af9c:	ldr	x0, [sp, #56]
  40afa0:	ldr	x1, [x0, #48]
  40afa4:	ldr	x0, [sp, #56]
  40afa8:	str	x1, [x0, #40]
  40afac:	b	40afd8 <server_name_free+0x3f0>
  40afb0:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40afb4:	add	x1, x0, #0x6bb
  40afb8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40afbc:	add	x4, x0, #0x818
  40afc0:	mov	w3, #0x71                  	// #113
  40afc4:	mov	x2, x1
  40afc8:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40afcc:	add	x1, x0, #0x780
  40afd0:	mov	w0, #0x0                   	// #0
  40afd4:	bl	402810 <log_assert_failed_unreachable_realm@plt>
  40afd8:	ldr	x0, [sp, #24]
  40afdc:	ldr	x0, [x0]
  40afe0:	ldr	x0, [x0, #120]
  40afe4:	ldr	x1, [sp, #24]
  40afe8:	cmp	x1, x0
  40afec:	b.ne	40b000 <server_name_free+0x418>  // b.any
  40aff0:	ldr	x0, [sp, #24]
  40aff4:	ldr	x0, [x0]
  40aff8:	mov	x1, #0x0                   	// #0
  40affc:	bl	408390 <manager_set_server_name>
  40b000:	mov	w0, #0x7                   	// #7
  40b004:	str	w0, [sp, #36]
  40b008:	str	wzr, [sp, #40]
  40b00c:	str	wzr, [sp, #44]
  40b010:	ldr	w0, [sp, #44]
  40b014:	bl	402bf0 <log_get_max_level_realm@plt>
  40b018:	mov	w1, w0
  40b01c:	ldr	w0, [sp, #36]
  40b020:	and	w0, w0, #0x7
  40b024:	cmp	w1, w0
  40b028:	b.lt	40b078 <server_name_free+0x490>  // b.tstop
  40b02c:	ldr	w0, [sp, #44]
  40b030:	lsl	w1, w0, #10
  40b034:	ldr	w0, [sp, #36]
  40b038:	orr	w7, w1, w0
  40b03c:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b040:	add	x1, x0, #0x6bb
  40b044:	ldr	x0, [sp, #24]
  40b048:	ldr	x0, [x0, #16]
  40b04c:	mov	x6, x0
  40b050:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b054:	add	x5, x0, #0x7b0
  40b058:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b05c:	add	x4, x0, #0x830
  40b060:	mov	w3, #0x77                  	// #119
  40b064:	mov	x2, x1
  40b068:	ldr	w1, [sp, #40]
  40b06c:	mov	w0, w7
  40b070:	bl	4029d0 <log_internal_realm@plt>
  40b074:	b	40b080 <server_name_free+0x498>
  40b078:	ldr	w0, [sp, #40]
  40b07c:	cmp	w0, #0x0
  40b080:	ldr	x0, [sp, #24]
  40b084:	ldr	x0, [x0, #16]
  40b088:	bl	402b30 <free@plt>
  40b08c:	ldr	x0, [sp, #24]
  40b090:	bl	40a148 <mfree>
  40b094:	ldp	x29, x30, [sp], #96
  40b098:	ret

000000000040b09c <server_name_flush_addresses>:
  40b09c:	stp	x29, x30, [sp, #-32]!
  40b0a0:	mov	x29, sp
  40b0a4:	str	x0, [sp, #24]
  40b0a8:	ldr	x0, [sp, #24]
  40b0ac:	cmp	x0, #0x0
  40b0b0:	cset	w0, eq  // eq = none
  40b0b4:	and	w0, w0, #0xff
  40b0b8:	and	x0, x0, #0xff
  40b0bc:	cmp	x0, #0x0
  40b0c0:	b.eq	40b0f8 <server_name_flush_addresses+0x5c>  // b.none
  40b0c4:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b0c8:	add	x1, x0, #0x6bb
  40b0cc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b0d0:	add	x4, x0, #0x848
  40b0d4:	mov	w3, #0x7e                  	// #126
  40b0d8:	mov	x2, x1
  40b0dc:	adrp	x0, 40d000 <__func__.10592+0x9d0>
  40b0e0:	add	x1, x0, #0x6e0
  40b0e4:	mov	w0, #0x0                   	// #0
  40b0e8:	bl	4027f0 <log_assert_failed_realm@plt>
  40b0ec:	ldr	x0, [sp, #24]
  40b0f0:	ldr	x0, [x0, #32]
  40b0f4:	bl	40a448 <server_address_free>
  40b0f8:	ldr	x0, [sp, #24]
  40b0fc:	ldr	x0, [x0, #32]
  40b100:	cmp	x0, #0x0
  40b104:	b.ne	40b0ec <server_name_flush_addresses+0x50>  // b.any
  40b108:	nop
  40b10c:	nop
  40b110:	ldp	x29, x30, [sp], #32
  40b114:	ret

000000000040b118 <__libc_csu_init>:
  40b118:	stp	x29, x30, [sp, #-64]!
  40b11c:	mov	x29, sp
  40b120:	stp	x19, x20, [sp, #16]
  40b124:	adrp	x20, 41e000 <__FRAME_END__+0xf9cc>
  40b128:	add	x20, x20, #0xa40
  40b12c:	stp	x21, x22, [sp, #32]
  40b130:	adrp	x21, 41e000 <__FRAME_END__+0xf9cc>
  40b134:	add	x21, x21, #0xa38
  40b138:	sub	x20, x20, x21
  40b13c:	mov	w22, w0
  40b140:	stp	x23, x24, [sp, #48]
  40b144:	mov	x23, x1
  40b148:	mov	x24, x2
  40b14c:	bl	402588 <_init>
  40b150:	cmp	xzr, x20, asr #3
  40b154:	b.eq	40b180 <__libc_csu_init+0x68>  // b.none
  40b158:	asr	x20, x20, #3
  40b15c:	mov	x19, #0x0                   	// #0
  40b160:	ldr	x3, [x21, x19, lsl #3]
  40b164:	mov	x2, x24
  40b168:	add	x19, x19, #0x1
  40b16c:	mov	x1, x23
  40b170:	mov	w0, w22
  40b174:	blr	x3
  40b178:	cmp	x20, x19
  40b17c:	b.ne	40b160 <__libc_csu_init+0x48>  // b.any
  40b180:	ldp	x19, x20, [sp, #16]
  40b184:	ldp	x21, x22, [sp, #32]
  40b188:	ldp	x23, x24, [sp, #48]
  40b18c:	ldp	x29, x30, [sp], #64
  40b190:	ret
  40b194:	nop

000000000040b198 <__libc_csu_fini>:
  40b198:	ret
  40b19c:	nop

000000000040b1a0 <fstat64>:
  40b1a0:	mov	x2, x1
  40b1a4:	mov	w1, w0
  40b1a8:	mov	w0, #0x0                   	// #0
  40b1ac:	b	402880 <__fxstat64@plt>

Disassembly of section .fini:

000000000040b1b0 <_fini>:
  40b1b0:	stp	x29, x30, [sp, #-16]!
  40b1b4:	mov	x29, sp
  40b1b8:	ldp	x29, x30, [sp], #16
  40b1bc:	ret
